{" Strings ANSI only_ansi?":{"type":"method","name":"only_ansi?","children":[],"call":["(send\n  (lvar :string) :=~\n  (regexp\n    (str \"^(\")\n    (begin\n      (const nil :ANSI_MATCHER))\n    (str \")+$\")\n    (regopt))) ! ! ","(send\n  (lvar :string) :=~\n  (regexp\n    (str \"^(\")\n    (begin\n      (const nil :ANSI_MATCHER))\n    (str \")+$\")\n    (regopt))) ! ","string =~ "]}," Strings ANSI ansi?":{"type":"method","name":"ansi?","children":[],"call":["(send\n  (lvar :string) :=~\n  (regexp\n    (begin\n      (const nil :ANSI_MATCHER))\n    (regopt))) ! ! ","(send\n  (lvar :string) :=~\n  (regexp\n    (begin\n      (const nil :ANSI_MATCHER))\n    (regopt))) ! ","string =~ "]}," Strings ANSI sanitize":{"type":"method","name":"sanitize","children":[],"call":["string gsub "]}," Strings ANSI Extensions sanitize":{"type":"method","name":"sanitize","children":[],"call":["ANSI  sanitize "]}," Strings ANSI Extensions only_ansi?":{"type":"method","name":"only_ansi?","children":[],"call":["ANSI  only_ansi? "]}," Strings ANSI Extensions ansi?":{"type":"method","name":"ansi?","children":[],"call":["ANSI  ansi? "]}}