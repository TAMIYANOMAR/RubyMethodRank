{" Fog Vsphere class_from_string":{"type":"method","name":"class_from_string","children":[],"call":[]}," Fog Compute Vsphere Mock vm_take_snapshot":{"type":"method","name":"vm_take_snapshot","children":[],"call":[" raise ","options key? "]}," Fog Compute Vsphere Real vm_take_snapshot":{"type":"method","name":"vm_take_snapshot","children":[],"call":["task info cancelled ","task info ","task info state ","task wait_for_completion ","vm CreateSnapshot_Task ","options [] "," get_vm_ref "," raise ","options key? ","vm CreateSnapshot_Task  info cancelled ","vm CreateSnapshot_Task  info ","vm CreateSnapshot_Task  info state ","vm CreateSnapshot_Task  wait_for_completion "," get_vm_ref  CreateSnapshot_Task "," get_ get_vm_ref _ref "]}," Fog Compute Vsphere Mock vm_reconfig_memory":{"type":"method","name":"vm_reconfig_memory","children":[],"call":[" vm_reconfig_hardware ","options [] "," raise ","options key? "]}," Fog Compute Vsphere Real vm_reconfig_memory":{"type":"method","name":"vm_reconfig_memory","children":[],"call":[" vm_reconfig_hardware ","options [] "," raise ","options key? "]}," Fog Compute Vsphere Mock vm_reconfig_hardware":{"type":"method","name":"vm_reconfig_hardware","children":[],"call":[" raise ","options key? "]}," Fog Compute Vsphere Real vm_reconfig_hardware":{"type":"method","name":"vm_reconfig_hardware","children":[],"call":["task info state ","task info ","task wait_for_completion ","vm_mob_ref ReconfigVM_Task ","RbVmomi VIM  VirtualMachineConfigSpec ","options [] "," get_vm_ref "," raise ","options key? ","vm_mob_ref ReconfigVM_Task  info state ","vm_mob_ref ReconfigVM_Task  info ","vm_mob_ref ReconfigVM_Task  wait_for_completion "," get_vm_ref  ReconfigVM_Task "]}," Fog Compute Vsphere Mock vm_reconfig_cpus":{"type":"method","name":"vm_reconfig_cpus","children":[],"call":[" vm_reconfig_hardware ","options [] "," raise ","options key? "]}," Fog Compute Vsphere Real vm_reconfig_cpus":{"type":"method","name":"vm_reconfig_cpus","children":[],"call":[" vm_reconfig_hardware ","options [] "," raise ","options key? "]}," Fog Compute Vsphere Mock vm_reboot":{"type":"method","name":"vm_reboot","children":[],"call":["options [] "," raise ","options key? "]}," Fog Compute Vsphere Real vm_reboot":{"type":"method","name":"vm_reboot","children":[],"call":["vm_mob_ref RebootGuest ","task info result ","task info ","task wait_for_completion ","vm_mob_ref ResetVM_Task ","options [] ","@connection searchIndex FindAllByUuid first ","@connection searchIndex FindAllByUuid ","@connection searchIndex "," raise ","options key? ","(pair\n  (str \"force\")\n  (false)) merge "," connection searchIndex FindAllByUuid first "," connection searchIndex FindAllByUuid "," connection searchIndex "," connection ","@connection searchIndex FindAllByUuid first  RebootGuest "," connection searchIndex FindAllByUuid first  RebootGuest ","vm_mob_ref ResetVM_Task  info result ","vm_mob_ref ResetVM_Task  info ","vm_mob_ref ResetVM_Task  wait_for_completion ","@connection searchIndex FindAllByUuid first  ResetVM_Task "," connection searchIndex FindAllByUuid first  ResetVM_Task ","(pair\n  (str \"force\")\n  (false)) merge  [] ","(pair\n  (str \"force\")\n  (false)) merge  key? "]}," Fog Compute Vsphere Mock vm_power_on":{"type":"method","name":"vm_power_on","children":[],"call":[" raise ","options key? "]}," Fog Compute Vsphere Real vm_power_on":{"type":"method","name":"vm_power_on","children":[],"call":["task info state ","task info ","task wait_for_completion ","vm_mob_ref PowerOnVM_Task ","@connection searchIndex FindAllByUuid first ","@connection searchIndex FindAllByUuid ","@connection searchIndex ","options [] "," raise ","options key? "," connection searchIndex FindAllByUuid first "," connection searchIndex FindAllByUuid "," connection searchIndex "," connection ","vm_mob_ref PowerOnVM_Task  info state ","vm_mob_ref PowerOnVM_Task  info ","vm_mob_ref PowerOnVM_Task  wait_for_completion ","@connection searchIndex FindAllByUuid first  PowerOnVM_Task "," connection searchIndex FindAllByUuid first  PowerOnVM_Task "]}," Fog Compute Vsphere Mock vm_power_off":{"type":"method","name":"vm_power_off","children":[],"call":["options [] ","vm []= "," get_virtual_machine "," raise ","options key? "," get_virtual_machine  []= "]}," Fog Compute Vsphere Real vm_power_off":{"type":"method","name":"vm_power_off","children":[],"call":["vm_mob_ref ShutdownGuest ","task info result ","task info ","task wait_for_completion ","vm_mob_ref PowerOffVM_Task ","options [] ","@connection searchIndex FindAllByUuid first ","@connection searchIndex FindAllByUuid ","@connection searchIndex "," raise ","options key? ","(pair\n  (str \"force\")\n  (false)) merge "," connection searchIndex FindAllByUuid first "," connection searchIndex FindAllByUuid "," connection searchIndex "," connection ","@connection searchIndex FindAllByUuid first  ShutdownGuest "," connection searchIndex FindAllByUuid first  ShutdownGuest ","vm_mob_ref PowerOffVM_Task  info result ","vm_mob_ref PowerOffVM_Task  info ","vm_mob_ref PowerOffVM_Task  wait_for_completion ","@connection searchIndex FindAllByUuid first  PowerOffVM_Task "," connection searchIndex FindAllByUuid first  PowerOffVM_Task ","(pair\n  (str \"force\")\n  (false)) merge  [] ","(pair\n  (str \"force\")\n  (false)) merge  key? "]}," Fog Compute Vsphere Mock vm_migrate":{"type":"method","name":"vm_migrate","children":[],"call":[" raise ","options key? ","options [] ","options [] nil? "]}," Fog Compute Vsphere Real vm_migrate":{"type":"method","name":"vm_migrate","children":[],"call":["task info state ","task info ","task wait_for_completion ","vm_mob_ref MigrateVM_Task ","options [] "," raise ","vm_mob_ref kind_of? ","@connection searchIndex FindAllByUuid first ","@connection searchIndex FindAllByUuid ","@connection searchIndex ","options key? ","options [] nil? ","options []= "," get_raw_host "," connection searchIndex FindAllByUuid first "," connection searchIndex FindAllByUuid "," connection searchIndex "," connection ","task_options merge ","task info result [] warning ","task info result [] ","task info result ","task info result [] error ","checker CheckMigrate_Task "," connection serviceContent vmProvisioningChecker "," connection serviceContent ","priority to_s ","vm_mob_ref is_a? ","vm_mob_ref MigrateVM_Task  info state ","checker CheckMigrate_Task  info state ","vm_mob_ref MigrateVM_Task  info ","checker CheckMigrate_Task  info ","vm_mob_ref MigrateVM_Task  wait_for_completion ","checker CheckMigrate_Task  wait_for_completion ","@connection searchIndex FindAllByUuid first  MigrateVM_Task "," connection searchIndex FindAllByUuid first  MigrateVM_Task ","@connection searchIndex FindAllByUuid first  kind_of? "," connection searchIndex FindAllByUuid first  kind_of? ","vm_mob_ref MigrateVM_Task _options merge ","checker CheckMigrate_Task _options merge ","vm_mob_ref MigrateVM_Task  info result [] warning ","checker CheckMigrate_Task  info result [] warning ","vm_mob_ref MigrateVM_Task  info result [] ","checker CheckMigrate_Task  info result [] ","vm_mob_ref MigrateVM_Task  info result ","checker CheckMigrate_Task  info result ","vm_mob_ref MigrateVM_Task  info result [] error ","checker CheckMigrate_Task  info result [] error "," connection serviceContent vmProvisioningChecker  CheckMigrate_Task ","options []  to_s ","@connection searchIndex FindAllByUuid first  is_a? "," connection searchIndex FindAllByUuid first  is_a? "]}," Fog Compute Vsphere Mock vm_execute":{"type":"method","name":"vm_execute","children":[],"call":[" raise ","options key? "]}," Fog Compute Vsphere Real vm_execute":{"type":"method","name":"vm_execute","children":[],"call":["gom processManager StartProgramInGuest ","gom processManager ","@connection serviceContent guestOperationsManager ","@connection serviceContent ","RbVmomi VIM  GuestProgramSpec ","options [] ","RbVmomi VIM  NamePasswordAuthentication ","@connection searchIndex FindAllByUuid first ","@connection searchIndex FindAllByUuid ","@connection searchIndex "," raise ","options key? "," connection serviceContent guestOperationsManager "," connection serviceContent "," connection "," connection searchIndex FindAllByUuid first "," connection searchIndex FindAllByUuid "," connection searchIndex ","@connection serviceContent guestOperationsManager  processManager StartProgramInGuest "," connection serviceContent guestOperationsManager  processManager StartProgramInGuest ","@connection serviceContent guestOperationsManager  processManager "," connection serviceContent guestOperationsManager  processManager "]}," Fog Compute Vsphere Mock vm_destroy":{"type":"method","name":"vm_destroy","children":[],"call":[" raise ","options key? "]}," Fog Compute Vsphere Real vm_destroy":{"type":"method","name":"vm_destroy","children":[],"call":["task info state ","task info ","task wait_for_completion ","vm_mob_ref Destroy_Task "," get_vm_ref ","options [] "," raise ","options key? ","vm_mob_ref Destroy_Task  info state ","vm_mob_ref Destroy_Task  info ","vm_mob_ref Destroy_Task  wait_for_completion "," get_vm_ref  Destroy_Task "]}," Fog Compute Vsphere Mock vm_get_vnc":{"type":"method","name":"vm_get_vnc","children":[],"call":[]}," Fog Compute Vsphere Mock vm_config_vnc":{"type":"method","name":"vm_config_vnc","children":[],"call":[" raise ","options key? "]}," Fog Compute Vsphere Real vm_get_vnc":{"type":"method","name":"vm_get_vnc","children":[],"call":["Hash  [] ","(send\n  (send\n    (send\n      (lvar :vm) :config) :extraConfig) :map) compact ","config value ","1 to_sym ","config key =~ ","config key ","vm config extraConfig map ","vm config extraConfig ","vm config ","@connection searchIndex FindAllByUuid first ","@connection searchIndex FindAllByUuid ","@connection searchIndex "," connection searchIndex FindAllByUuid first "," connection searchIndex FindAllByUuid "," connection searchIndex "," connection ","Regexp  last_match to_sym ","Regexp  last_match ","(send\n  (send\n    (send\n      (lvar :@connection searchIndex FindAllByUuid first ) :config) :extraConfig) :map) compact ","(send\n  (send\n    (send\n      (lvar : connection searchIndex FindAllByUuid first ) :config) :extraConfig) :map) compact ","@connection searchIndex FindAllByUuid first  config extraConfig map "," connection searchIndex FindAllByUuid first  config extraConfig map ","@connection searchIndex FindAllByUuid first  config extraConfig "," connection searchIndex FindAllByUuid first  config extraConfig ","@connection searchIndex FindAllByUuid first  config "," connection searchIndex FindAllByUuid first  config "]}," Fog Compute Vsphere Real vm_config_vnc":{"type":"method","name":"vm_config_vnc","children":[],"call":["task info state ","task info ","task wait_for_completion ","vm_mob_ref ReconfigVM_Task ","options [] to_s ","options [] ","@connection searchIndex FindAllByUuid first ","@connection searchIndex FindAllByUuid ","@connection searchIndex "," raise ","options key? "," connection searchIndex FindAllByUuid first "," connection searchIndex FindAllByUuid "," connection searchIndex "," connection ","vm_mob_ref ReconfigVM_Task  info state ","vm_mob_ref ReconfigVM_Task  info ","vm_mob_ref ReconfigVM_Task  wait_for_completion ","@connection searchIndex FindAllByUuid first  ReconfigVM_Task "," connection searchIndex FindAllByUuid first  ReconfigVM_Task "]}," Fog Compute Vsphere Mock vm_clone":{"type":"method","name":"vm_clone","children":[],"call":["Fog Mock  random_numbers "," data [] []= "," data [] "," data ","template clone merge ","options [] ","options [] + ","template clone ","(send\n  (array\n    (int 8)\n    (int 4)\n    (int 4)\n    (int 4)\n    (int 12)) :map) join ","Fog Mock  random_hex ","(int 8) map ","vm [] == ","options [] split [] ","options [] split ","vm [] "," list_virtual_machines find "," list_virtual_machines "," raise "," lambda "," vm_clone_check_options "," vm_clone_check_options  [] "," vm_clone_check_options  [] + "," vm_clone_check_options  [] split [] "," vm_clone_check_options  [] split "," vm_clone_check_ vm_clone_check_options  "]}," Fog Compute Vsphere Real modify_template_volumes_specs":{"type":"method","name":"modify_template_volumes_specs","children":[],"call":["specs concat "," create_disk ","volumes index ","new_volumes map ","specs << ","template_volume backing thinProvisioned= ","new_volume thin ","template_volume backing ","template_volume backing diskMode= ","new_volume mode ","template_volume capacityInKB= ","new_volume size ","new_volume size > ","template_volume capacityInKB ","template_volumes zip each ","template_volumes zip ","volumes drop ","template_volumes size ","volumes take ","vm_mob_ref config hardware device grep ","vm_mob_ref config hardware device ","vm_mob_ref config hardware ","vm_mob_ref config ","volume unit_number= ","volumes index + ","volumes index < ","volumes drop  map ","vm_mob_ref config hardware device grep  zip each ","vm_mob_ref config hardware device grep  zip ","vm_mob_ref config hardware device grep  size "]}," Fog Compute Vsphere Real modify_template_nics_specs":{"type":"method","name":"modify_template_nics_specs","children":[],"call":["specs << "," create_interface ","new_nics each ","interface key ","template_nics each ","Fog Compute Vsphere Interface  new "," list_vm_interfaces map "," list_vm_interfaces "," interface key "," interface ","template_nic connectable= ","RbVmomi VIM  VirtualDeviceConnectInfo ","template_nic backing= "," create_nic_backing ","template_nics zip each ","template_nics zip ","nics drop ","template_nics size ","nics take ","vm_mob_ref config hardware device grep ","vm_mob_ref config hardware device ","vm_mob_ref config hardware ","vm_mob_ref config ","template_nic macAddress= ","template_nic addressType= ","template_nic key "," raw_to_hash "," create_Fog Compute Vsphere Interface  new  ","nics drop  each ","Fog Compute Vsphere Interface  new  key ","vm_mob_ref config hardware device grep  each "," list_vm_Fog Compute Vsphere Interface  new s map "," list_vm_Fog Compute Vsphere Interface  new s "," Fog Compute Vsphere Interface  new  key "," Fog Compute Vsphere Interface  new  ","template_nic RbVmomi VIM  VirtualDeviceConnectInfo = ","template_nic  create_nic_backing = "," create_nic_ create_nic_backing  ","vm_mob_ref config hardware device grep  zip each ","vm_mob_ref config hardware device grep  zip ","vm_mob_ref config hardware device grep  size "]}," Fog Compute Vsphere Real modify_template_nics_simple_spec":{"type":"method","name":"modify_template_nics_simple_spec","children":[],"call":["RbVmomi VIM  VirtualDeviceConfigSpec ","RbVmomi VIM  public_send ","RbVmomi VIM  Description ","RbVmomi VIM  VirtualDeviceConnectInfo ","RbVmomi VIM  VirtualEthernetCardNetworkBackingInfo ","RbVmomi VIM  VirtualEthernetCardDistributedVirtualPortBackingInfo ","RbVmomi VIM  DistributedVirtualSwitchPortConnection ","network config distributedVirtualSwitch uuid ","network config distributedVirtualSwitch ","network config ","network key ","network kind_of? "," get_raw_network ","RbVmomi VIM  VirtualDeviceConfigSpecOperation ","nic_type to_s ","network is_a? "," get_raw_network  config distributedVirtualSwitch uuid "," get_raw_network  config distributedVirtualSwitch "," get_raw_network  config "," get_raw_network  key "," get_raw_network  kind_of? "," get_raw_ get_raw_network  "," get_raw_network  is_a? "]}," Fog Compute Vsphere Real vm_clone":{"type":"method","name":"vm_clone","children":[],"call":["task _ref "," convert_vm_mob_ref_to_attr_hash ","new_vm _ref "," sleep ","tries <= "," raise ","dest_folder find ","options [] ","task wait_for_completion ","options fetch ","vm_mob_ref CloneVM_Task ","RbVmomi VIM  VirtualMachineCloneSpec ","options key? ","RbVmomi VIM  VirtualMachineRelocateSpec ","vm_mob_ref ReconfigVM_Task wait_for_completion ","vm_mob_ref ReconfigVM_Task ","disk_backing backing parent= ","disk backing ","disk_backing backing ","disk_backing backing fileName= ","disk backing datastore name ","disk backing datastore ","disk_backing backing= ","disk_backing backing dup ","disk dup tap ","disk dup ","(send\n  (lvar :disks) :select) each ","vm_device backing parent == ","vm_device backing parent ","vm_device backing ","disks select ","vm_device class == ","vm_device class ","vm_mob_ref config hardware device select ","vm_mob_ref config hardware device ","vm_mob_ref config hardware ","vm_mob_ref config ","customization_spec options= ","customization_spec nicSettingMap= ","customization_spec encryptionKey= ","RbVmomi VIM  CustomizationSpec ","custom_options reboot= ","RBVmomi VIM  CustomizationSysprepRebootOption ","custom_spec [] [] ","custom_spec [] ","(str \"noreboot\") include? ","custom_spec [] key? ","RbVmomi VIM  CustomizationWinOptions ","custom_spec key? ","custom_nicSettingMap length < ","custom_nicSettingMap length ","custom_nicSettingMap << ","custom_adapter_mapping macAddress= ","nic [] ","nic key? ","RbVmomi VIM  CustomizationAdapterMapping ","custom_adapter subnetMask= ","nic [] [] ","nic [] key? ","custom_adapter secondaryWINS= ","custom_adapter primaryWINS= ","custom_adapter netBIOS= ","RbVmomi VIM  CustomizationNetBIOSMode ","(str \"disableNetBIOS\") include? ","custom_adapter ipV6Spec= ","custom_ipv6Spec gateway= ","nic [] [] [] ","nic [] [] key? ","RbVmomi VIM  CustomizationIPSettingsIpV6AddressSpec ","RbVmomi VIM CustomizationDhcpIpV6Generator  new ","RbVmomi VIM  CustomizationFixedIpV6 ","custom_adapter gateway= ","custom_adapter dnsServerList= ","custom_adapter dnsDomain= ","RbVmomi VIM  CustomizationIPSettings ","RbVmomi VIM CustomizationDhcpIpGenerator  new ","RbVmomi VIM  CustomizationFixedIp ","custom_spec [] each ","custom_spec [] [] key? ","custom_spec [] length > ","custom_spec [] length ","RbVmomi VIM  CustomizationSysprepText ","identity [] [] ","identity [] ","identity [] key? ","identity key? ","custom_identity licenseFilePrintData= ","custom_identity guiRunOnce= ","RbVmomi VIM  CustomizationSysprep ","RbVmomi VIM  CustomizationUserData ","RbVmomi VIM  CustomizationFixedName ","identity [] [] [] ","identity [] [] key? ","custom_licenseFilePrintData autoUsers= ","identity [] [] [] == ","RbVmomi VIM  CustomizationLicenseFilePrintData ","RbVmomi VIM  CustomizationLicenseDataMode ","(str \"perSeat\") include? ","custom_identification domainAdminPassword= ","RbVmomi VIM  CustomizationPassword ","identity [] [] [] [] ","custom_identification domainAdmin= ","custom_identification joinDomain= ","identity [] [] [] key? ","custom_identification joinWorkgroup= ","RbVmomi VIM  CustomizationIdentification ","custom_guiUnattended password= ","RbVmomi VIM  CustomizationGuiUnattended ","RbVmomi VIM  CustomizationGuiRunOnce ","custom_identity timeZone= ","custom_identity hwClockUTC= ","custom_identity hostName= ","RbVmomi VIM  CustomizationLinuxPrep ","custom_globalIPSettings dnsSuffixList= ","custom_globalIPSettings dnsServerList= ","RbVmomi VIM CustomizationGlobalIPSettings  new ","custom_spec [] [] [] []= ","custom_spec [] [] [] ","custom_spec [] [] []= ","Hash  new ","custom_spec [] []= ","custom_spec []= ","Array  new ","virtual_machine_config_spec firmware= ","virtual_machine_config_spec memoryHotAddEnabled= ","virtual_machine_config_spec cpuHotAddEnabled= ","virtual_machine_config_spec memoryMB= ","virtual_machine_config_spec numCPUs= ","virtual_machine_config_spec deviceChange= ","device_change any? ","device_change concat "," modify_template_volumes_specs ","device_change << "," modify_template_nics_simple_spec "," modify_template_nics_specs ","RbVmomi VIM  VirtualMachineConfigSpec "," get_raw_datastore ","vm_mob_ref resourcePool ","esx_host parent resourcePool ","esx_host parent ","vm_mob_ref resourcePool nil? ","vm_mob_ref collect! [] ","vm_mob_ref collect! ","vm_mob_ref resourcePool == "," get_raw_resource_pool ","options [] [] ","options [] length == ","options [] length ","options [] is_a? "," get_raw_vmfolder "," get_vm_ref "," vm_clone_check_options ","Fog  wait_for ","result vm ","srm ApplyStorageDrsRecommendation_Task ","result recommendations first key ","result recommendations first ","result recommendations ","srm RecommendDatastores ","@connection serviceContent storageResourceManager ","@connection serviceContent ","RbVmomi VIM StoragePlacementSpec  new ","RbVmomi VIM StorageDrsPodSelectionSpec  new "," get_raw_storage_pod ","@vsphere_rev to_f >= ","@vsphere_rev to_f ","relocation_spec []= ","datastore_obj nil? ","options [] [] != ","options [] nil? ! ","options [] nil? ","virtual_machine_config_spec numCoresPerSocket= ","virtual_machine_config_spec extraConfig= "," extra_config "," get_raw_host "," attributes [] "," attributes ","cluster_name nil? ! ","cluster_name nil? ","options [] empty? ! ","options [] empty? ","custom_spec [] key? ! "," connection serviceContent storageResourceManager "," connection serviceContent "," connection ","options [] [] == "," relocate_template_volumes_specs ","virtual_machine_config_spec bootOptions= ","RbVmomi VIM VirtualMachineBootOptionsBootableFloppyDevice  new ","RbVmomi VIM VirtualMachineBootOptionsBootableCdromDevice  new ","RbVmomi VIM VirtualMachineBootOptionsBootableDiskDevice  new ","disk key ","disks map ","change [] ","(send\n  (lvar :device_change) :select) map ","change [] is_a? ","(sym :edit) include? ","device_change select ","RbVmomi VIM VirtualMachineBootOptionsBootableEthernetDevice  new ","interface key ","interfaces map ","change [] class <= ","change [] class ","boot_device to_sym ","options [] flat_map ","vm_device backing parent nil? ","custom_spec [] empty? ","options [] blank? ","vm_mob_ref CloneVM_Task  _ref ","srm ApplyStorageDrsRecommendation_Task  _ref "," convert_ get_vm_ref _to_attr_hash ","task wait_for_completion  _ref ","dest_folder find  _ref ","result vm  _ref "," get_raw_vmfolder  find "," vm_clone_check_options  [] ","vm_mob_ref CloneVM_Task  wait_for_completion ","srm ApplyStorageDrsRecommendation_Task  wait_for_completion "," vm_clone_check_options  fetch "," get_vm_ref  CloneVM_Task "," vm_clone_check_options  key? ","options result recommendations first key ? "," get_vm_ref  ReconfigVM_Task wait_for_completion "," get_vm_ref  ReconfigVM_Task ","(send\n  (lvar :options [] ) :select) each ","options []  select "," get_vm_ref  config hardware device select "," get_vm_ref  config hardware device "," get_vm_ref  config hardware "," get_vm_ref  config ","RbVmomi VIM  CustomizationSpec  options= ","customization_spec  vm_clone_check_options = ","RbVmomi VIM  CustomizationSpec  nicSettingMap= ","RbVmomi VIM  CustomizationSpec  encryptionKey= ","RbVmomi VIM  CustomizationWinOptions  reboot= ","custom_ vm_clone_check_options  reboot= ","options []  [] [] ","options []  [] ","options []  [] key? ","custom_spec [] result recommendations first key ? ","options []  key? ","custom_spec result recommendations first key ? ","RbVmomi VIM  CustomizationAdapterMapping  macAddress= ","RbVmomi VIM  CustomizationIPSettings _mapping macAddress= ","nic result recommendations first key ? ","RbVmomi VIM  CustomizationIPSettings  subnetMask= ","nic [] result recommendations first key ? ","RbVmomi VIM  CustomizationIPSettings  secondaryWINS= ","RbVmomi VIM  CustomizationIPSettings  primaryWINS= ","RbVmomi VIM  CustomizationIPSettings  netBIOS= ","RbVmomi VIM  CustomizationIPSettings  ipV6Spec= ","RbVmomi VIM  CustomizationIPSettingsIpV6AddressSpec  gateway= ","RbVmomi VIM CustomizationDhcpIpV6Generator  new Spec gateway= ","RbVmomi VIM  CustomizationFixedIpV6 Spec gateway= ","RbVmomi VIM CustomizationDhcpIpGenerator  new v6Spec gateway= ","RbVmomi VIM  CustomizationFixedIp v6Spec gateway= ","nic [] [] result recommendations first key ? ","RbVmomi VIM  CustomizationIPSettings  gateway= ","RbVmomi VIM  CustomizationIPSettings  dnsServerList= ","RbVmomi VIM  CustomizationIPSettings  dnsDomain= ","options []  [] each ","options []  [] [] key? ","custom_spec [] [] result recommendations first key ? ","options []  [] length > ","options []  [] length ","custom_spec []  [] [] ","custom_spec []  [] ","custom_spec []  [] key? ","identity [] result recommendations first key ? ","custom_spec []  key? ","identity result recommendations first key ? ","RbVmomi VIM  CustomizationSysprepText  licenseFilePrintData= ","RbVmomi VIM  CustomizationSysprep  licenseFilePrintData= ","RbVmomi VIM  CustomizationLinuxPrep  licenseFilePrintData= ","custom_custom_spec []  licenseFilePrintData= ","RbVmomi VIM  CustomizationSysprepText  guiRunOnce= ","RbVmomi VIM  CustomizationSysprep  guiRunOnce= ","RbVmomi VIM  CustomizationLinuxPrep  guiRunOnce= ","custom_custom_spec []  guiRunOnce= ","custom_spec []  [] [] [] ","custom_spec []  [] [] key? ","identity [] [] result recommendations first key ? ","RbVmomi VIM  CustomizationLicenseFilePrintData  autoUsers= ","custom_spec []  [] [] [] == ","RbVmomi VIM  CustomizationIdentification  domainAdminPassword= ","custom_spec []  [] [] [] [] ","RbVmomi VIM  CustomizationIdentification  domainAdmin= ","RbVmomi VIM  CustomizationIdentification  joinDomain= ","custom_spec []  [] [] [] key? ","identity [] [] [] result recommendations first key ? ","RbVmomi VIM  CustomizationIdentification  joinWorkgroup= ","RbVmomi VIM  CustomizationGuiUnattended  password= ","RbVmomi VIM  CustomizationSysprepText  timeZone= ","RbVmomi VIM  CustomizationSysprep  timeZone= ","RbVmomi VIM  CustomizationLinuxPrep  timeZone= ","custom_custom_spec []  timeZone= ","RbVmomi VIM  CustomizationSysprepText  hwClockUTC= ","RbVmomi VIM  CustomizationSysprep  hwClockUTC= ","RbVmomi VIM  CustomizationLinuxPrep  hwClockUTC= ","custom_custom_spec []  hwClockUTC= ","RbVmomi VIM  CustomizationSysprepText  hostName= ","RbVmomi VIM  CustomizationSysprep  hostName= ","RbVmomi VIM  CustomizationLinuxPrep  hostName= ","custom_custom_spec []  hostName= ","custom_identity  get_raw_host Name= ","RbVmomi VIM CustomizationGlobalIPSettings  new  dnsSuffixList= ","RbVmomi VIM CustomizationGlobalIPSettings  new  dnsServerList= ","options []  [] [] [] []= ","options []  [] [] [] ","options []  [] [] []= ","options []  [] []= ","options []  []= ","RbVmomi VIM  VirtualMachineConfigSpec  firmware= ","RbVmomi VIM  VirtualMachineConfigSpec  memoryHotAddEnabled= ","RbVmomi VIM  VirtualMachineConfigSpec  cpuHotAddEnabled= ","RbVmomi VIM  VirtualMachineConfigSpec  memoryMB= ","RbVmomi VIM  VirtualMachineConfigSpec  numCPUs= ","RbVmomi VIM  VirtualMachineConfigSpec  deviceChange= "," get_vm_ref  resourcePool ","vm_mob_ref collect! []  parent resourcePool ","esx_ get_raw_host  parent resourcePool ","vm_mob_ref collect! []  parent ","esx_ get_raw_host  parent "," get_vm_ref  resourcePool nil? "," get_vm_ref  collect! [] "," get_vm_ref  collect! "," get_vm_ref  resourcePool == "," get_raw_esx_host parent resourcePool  "," get_raw_ get_raw_resource_pool  "," vm_clone_check_options  [] [] "," vm_clone_check_options  [] length == "," vm_clone_check_options  [] length "," vm_clone_check_options  [] is_a? "," vm_clone_check_ vm_clone_check_options  ","task wait_for_completion  vm ","srm RecommendDatastores  vm ","@connection serviceContent storageResourceManager  ApplyStorageDrsRecommendation_Task "," connection serviceContent storageResourceManager  ApplyStorageDrsRecommendation_Task ","task wait_for_completion  recommendations first key ","srm RecommendDatastores  recommendations first key ","result recommendations first result recommendations first key  ","task wait_for_completion  recommendations first ","srm RecommendDatastores  recommendations first ","task wait_for_completion  recommendations ","srm RecommendDatastores  recommendations ","@connection serviceContent storageResourceManager  RecommendDatastores "," connection serviceContent storageResourceManager  RecommendDatastores ","RbVmomi VIM  VirtualMachineRelocateSpec  []= "," get_raw_datastore  nil? "," vm_clone_check_options  [] [] != "," vm_clone_check_options  [] nil? ! "," vm_clone_check_options  [] nil? ","RbVmomi VIM  VirtualMachineConfigSpec  numCoresPerSocket= ","RbVmomi VIM  VirtualMachineConfigSpec  extraConfig= "," get_raw_ get_raw_host  ","options [] []  nil? ! ","options [] []  nil? "," vm_clone_check_options  [] empty? ! "," vm_clone_check_options  [] empty? ","options []  [] key? ! ","custom_spec [] result recommendations first key ? ! "," vm_clone_check_options  [] [] == ","RbVmomi VIM  VirtualMachineConfigSpec  bootOptions= ","disk result recommendations first key  ","options []  map ","interface result recommendations first key  "," vm_clone_check_options  [] flat_map ","options []  [] empty? "," vm_clone_check_options  [] blank? "]}," Fog Compute Vsphere Shared vm_clone_check_options":{"type":"method","name":"vm_clone_check_options","children":[],"call":[" raise ","options [] "," get_virtual_machine "," get_datacenter ","required_options join ","options key? ","required_options each ","default_options merge "," get_storage_pod ! "," get_storage_pod ","options []= ","options [] == "," get_raw_storage_pod ! "," get_raw_storage_pod ","options [] nil? ! ","options [] nil? ","default_options merge  [] ","required_default_options merge  join ","default_options merge  key? ","required_default_options merge  each ","default_default_options merge  merge ","default_options merge  []= ","default_options merge  [] == ","default_options merge  [] nil? ! ","default_options merge  [] nil? "]}," Fog Compute Vsphere Mock set_vm_customvalue":{"type":"method","name":"set_vm_customvalue","children":[],"call":[]}," Fog Compute Vsphere Real set_vm_customvalue":{"type":"method","name":"set_vm_customvalue","children":[],"call":["vm_ref setCustomValue "," get_vm_ref "," get_vm_ref  setCustomValue "," get_ get_vm_ref  "]}," Fog Compute Vsphere Mock revert_to_snapshot":{"type":"method","name":"revert_to_snapshot","children":[],"call":[" fail ","snapshot nil? "," raise "]}," Fog Compute Vsphere Real revert_to_snapshot":{"type":"method","name":"revert_to_snapshot","children":[],"call":["task info state ","task info ","task wait_for_completion ","snapshot mo_ref RevertToSnapshot_Task ","snapshot mo_ref "," fail ","Snapshot  === "," raise ","snapshot mo_ref RevertToSnapshot_Task  info state ","snapshot mo_ref RevertToSnapshot_Task  info ","snapshot mo_ref RevertToSnapshot_Task  wait_for_completion "]}," Fog Compute Vsphere Mock destroy_vm_volume":{"type":"method","name":"destroy_vm_volume","children":[],"call":[]}," Fog Compute Vsphere Mock add_vm_volume":{"type":"method","name":"add_vm_volume","children":[],"call":[" vm_reconfig_hardware "," create_cdrom ","volume unit_number ","volume server_id "]}," Fog Compute Vsphere Real destroy_vm_volume":{"type":"method","name":"destroy_vm_volume","children":[],"call":[" vm_reconfig_hardware "," create_disk ","volume unit_number ","volume server_id "]}," Fog Compute Vsphere Real add_vm_volume":{"type":"method","name":"add_vm_volume","children":[],"call":[" vm_reconfig_hardware "," create_disk ","volume unit_number ","volume server_id "]}," Fog Compute Vsphere Mock destroy_vm_interface":{"type":"method","name":"destroy_vm_interface","children":[],"call":[" raise ","options [] "]}," Fog Compute Vsphere Mock add_vm_interface":{"type":"method","name":"add_vm_interface","children":[],"call":[" raise ","options [] "]}," Fog Compute Vsphere Real get_interface_from_options":{"type":"method","name":"get_interface_from_options","children":[],"call":[" raise ","Fog Compute Vsphere Interface  new ","options [] ","oldattributes merge "," get_vm_interface ","options [] > "," get_vm_interface  merge "]}," Fog Compute Vsphere Real update_vm_interface":{"type":"method","name":"update_vm_interface","children":[],"call":[" vm_reconfig_hardware "," create_interface ","interface key "," get_interface_from_options ","options merge "," raise ","raw_interface backing= "," create_nic_backing ","interface network= ","options [] "," get_raw_interface "," apply_options_to_raw_interface ","options key? "," create_ get_interface_from_options  "," get_interface_from_options  key "," get_ get_interface_from_options _from_options ","raw_ get_interface_from_options  backing= ","raw_interface  create_nic_backing = "," get_raw_interface  backing= "," create_nic_ create_nic_backing  "," get_interface_from_options  network= "," get_raw_ get_interface_from_options  "," get_ get_raw_interface  "," apply_options_to_raw_ get_interface_from_options  "," apply_options_to_ get_raw_interface  "]}," Fog Compute Vsphere Real destroy_vm_interface":{"type":"method","name":"destroy_vm_interface","children":[],"call":[" vm_reconfig_hardware "," create_interface ","interface key "," get_interface_from_options ","options merge "," raise "," create_ get_interface_from_options  "," get_interface_from_options  key "," get_ get_interface_from_options _from_options "]}," Fog Compute Vsphere Real add_vm_interface":{"type":"method","name":"add_vm_interface","children":[],"call":[" vm_reconfig_hardware "," create_interface "," get_interface_from_options ","options merge "," raise "," create_ get_interface_from_options  "," get_ get_interface_from_options _from_options "]}," Fog Compute Vsphere Mock list_vm_volumes":{"type":"method","name":"list_vm_volumes","children":[],"call":[]}," Fog Compute Vsphere Real list_vm_volumes":{"type":"method","name":"list_vm_volumes","children":[],"call":["vol unitNumber ","vol key ","vol deviceInfo label ","vol deviceInfo ","vol capacityInKB ","vol backing datastore name ","vol backing datastore ","vol backing ","vol backing fileName ","vol backing diskMode ","vol backing thinProvisioned ","vol backing uuid "," get_vm_ref disks map "," get_vm_ref disks "," get_vm_ref ","vol controllerKey "]}," Fog Compute Vsphere Mock list_vm_snapshots":{"type":"method","name":"list_vm_snapshots","children":[],"call":["Time  now utc ","Time  now "]}," Fog Compute Vsphere Real snapshot_info":{"type":"method","name":"snapshot_info","children":[],"call":["snap_tree name ","snap_tree snapshot _ref ","snap_tree snapshot ","snap_tree state ","snap_tree createTime ","snap_tree description ","snap_tree quiesced "]}," Fog Compute Vsphere Real list_vm_snapshots":{"type":"method","name":"list_vm_snapshots","children":[],"call":["root_snapshots flatten compact ","root_snapshots flatten "," list_child_snapshots ","opts [] "," snapshot_info "," get_vm_ref snapshot rootSnapshotList map "," get_vm_ref snapshot rootSnapshotList "," get_vm_ref snapshot "," get_vm_ref ","vm_snapshot_info rootSnapshotList map ","vm_snapshot_info rootSnapshotList "," get_vm_ref snapshot  rootSnapshotList map "," get_vm_ref snapshot  rootSnapshotList "]}," Fog Compute Vsphere Mock list_vm_interfaces":{"type":"method","name":"list_vm_interfaces","children":[],"call":[]}," Fog Compute Vsphere Real get_vm_interface":{"type":"method","name":"get_vm_interface","children":[],"call":["nic [] == ","options [] ","nic [] ","options key? ","options [] to_i "," list_vm_interfaces find "," list_vm_interfaces "," raise ","options is_a? "," raw_to_hash "," get_raw_interface ","  get_raw_interface _to_hash "," get_ get_raw_interface _interface "]}," Fog Compute Vsphere Real list_vm_interfaces":{"type":"method","name":"list_vm_interfaces","children":[],"call":["nic key ","nic class ","nic deviceInfo summary ","nic deviceInfo ","nic connectable status ","nic connectable ","nic backing port portgroupKey ","nic backing port ","nic backing ","nic backing network name ","nic backing network ","nic backing respond_to? ","nic macAddress ","nic deviceInfo label "," get_vm_ref config hardware device grep map "," get_vm_ref config hardware device grep "," get_vm_ref config hardware device "," get_vm_ref config hardware "," get_vm_ref config "," get_vm_ref "," raw_to_hash "," get_raw_interfaces map "," get_raw_interfaces "]}," Fog Compute Vsphere Mock list_vm_customfields":{"type":"method","name":"list_vm_customfields","children":[],"call":[]}," Fog Compute Vsphere Real list_vm_customvalues":{"type":"method","name":"list_vm_customvalues","children":[],"call":["customvalue value ","customvalue key to_i ","customvalue key "," get_vm_ref summary customValue map "," get_vm_ref summary customValue "," get_vm_ref summary "," get_vm_ref "]}," Fog Compute Vsphere Mock list_virtual_machines":{"type":"method","name":"list_virtual_machines","children":[],"call":["vm [] == ","options [] ","vm [] "," data [] values select "," data [] values "," data [] "," data ","server nil? "," data [] [] ","options [] nil? ! ","options [] nil? ","v to_s ","k to_s ","options all? ","v nil? ","options reject! ","options delete "," data [] []  nil? "]}," Fog Compute Vsphere Mock get_folder_path":{"type":"method","name":"get_folder_path","children":[],"call":[]}," Fog Compute Vsphere Real get_folder_path":{"type":"method","name":"get_folder_path","children":[],"call":["folder name "," get_folder_path ","folder parent ","folder == ","folder methods include? ! ","folder methods include? ","folder methods "]}," Fog Compute Vsphere Real raw_list_all_virtual_machines":{"type":"method","name":"raw_list_all_virtual_machines","children":[],"call":["(send\n  (lvar :datacenters) :map) flatten ","@connection serviceContent viewManager CreateContainerView view ","@connection serviceContent viewManager CreateContainerView ","dc vmFolder ","@connection serviceContent viewManager ","@connection serviceContent ","datacenters map "," find_datacenters "," connection serviceContent viewManager CreateContainerView view "," connection serviceContent viewManager CreateContainerView "," connection serviceContent viewManager "," connection serviceContent "," connection "," list_container_view ","(send\n  (lvar : find_datacenters ) :map) flatten "," find_datacenters  map "," find_ find_datacenters  "]}," Fog Compute Vsphere Real list_all_virtual_machines":{"type":"method","name":"list_all_virtual_machines","children":[],"call":["v [] ","vms delete_if "," convert_vm_view_to_attr_hash "," raw_list_all_virtual_machines ","options [] "," convert_vm_view_to_attr_hash  delete_if "]}," Fog Compute Vsphere Real list_all_virtual_machines_in_folder":{"type":"method","name":"list_all_virtual_machines_in_folder","children":[],"call":["vms map "," method ","v config template ","v config ","v config nil? ","vms delete_if ","folder children grep ","folder children "," get_raw_vmfolder "," raw_list_all_virtual_machines_in_folder to_a "," raw_list_all_virtual_machines_in_folder ","folder children grep  map "," raw_list_all_virtual_machines_in_folder to_a  map ","folder children grep  delete_if "," raw_list_all_virtual_machines_in_folder to_a  delete_if "," get_raw_vmfolder  children grep "," get_raw_vmfolder  children "," get_raw_vm get_raw_vmfolder  "," raw_list_all_virtual_machines_in_ get_raw_vmfolder  to_a "," raw_list_all_virtual_machines_in_ get_raw_vmfolder  "]}," Fog Compute Vsphere Real list_virtual_machines":{"type":"method","name":"list_virtual_machines","children":[],"call":[" list_all_virtual_machines "," list_all_virtual_machines_in_folder ","options [] "," get_virtual_machine "]}," Fog Compute Vsphere Mock list_templates":{"type":"method","name":"list_templates","children":[],"call":[]}," Fog Compute Vsphere Real list_all_templates":{"type":"method","name":"list_all_templates","children":[],"call":["vms map "," method ","v config template ! ","v config template ","v config ","v config nil? ","vms delete_if ","(send\n  (lvar :datacenters) :map) flatten ","@connection serviceContent viewManager CreateContainerView view ","@connection serviceContent viewManager CreateContainerView ","dc vmFolder ","@connection serviceContent viewManager ","@connection serviceContent ","datacenters map "," find_datacenters ","options [] "," connection serviceContent viewManager CreateContainerView view "," connection serviceContent viewManager CreateContainerView "," connection serviceContent viewManager "," connection serviceContent "," connection "," list_container_view ","(send\n  (lvar :datacenters) :map) flatten  map ","(send\n  (lvar :datacenters) :map) flatten  delete_if ","(send\n  (lvar : find_datacenters ) :map) flatten "," find_datacenters  map "," find_ find_datacenters  "]}," Fog Compute Vsphere Real list_all_templates_in_folder":{"type":"method","name":"list_all_templates_in_folder","children":[],"call":["vms map "," method ","v config template ! ","v config template ","v config ","v config nil? ","vms delete_if ","folder children grep ","folder children "," get_raw_vmfolder ","folder children grep  map ","folder children grep  delete_if "," get_raw_vmfolder  children grep "," get_raw_vmfolder  children "," get_raw_vm get_raw_vmfolder  "]}," Fog Compute Vsphere Real list_templates":{"type":"method","name":"list_templates","children":[],"call":[" list_all_templates "," list_all_templates_in_folder ","options [] "]}," Fog Compute Vsphere Mock list_server_types":{"type":"method","name":"list_server_types","children":[],"call":[]}," Fog Compute Vsphere Real server_type_attributes":{"type":"method","name":"server_type_attributes","children":[],"call":["servertype fullName ","servertype family ","servertype id "]}," Fog Compute Vsphere Real raw_server_types":{"type":"method","name":"raw_server_types","children":[],"call":["environmentBrowser QueryConfigOption [] ","environmentBrowser QueryConfigOption ","datacenter hostFolder childEntity grep first environmentBrowser ","datacenter hostFolder childEntity grep first ","datacenter hostFolder childEntity grep ","datacenter hostFolder childEntity ","datacenter hostFolder "," find_raw_datacenter ","datacenter hostFolder childEntity grep first environmentBrowser  QueryConfigOption [] ","datacenter hostFolder childEntity grep first environmentBrowser  QueryConfigOption ","datacenter hostFolder childEntity grep first datacenter hostFolder childEntity grep first environmentBrowser  "," find_raw_datacenter  hostFolder childEntity grep first environmentBrowser "," find_raw_datacenter  hostFolder childEntity grep first "," find_raw_datacenter  hostFolder childEntity grep "," find_raw_datacenter  hostFolder childEntity "," find_raw_datacenter  hostFolder "," find_raw_ find_raw_datacenter  "]}," Fog Compute Vsphere Real list_server_types":{"type":"method","name":"list_server_types","children":[],"call":["(send\n  (lvar :servertypes) :map) compact "," server_type_attributes ","servertypes map "," raw_server_types ","filters [] ","(send\n  (lvar : raw_server_types ) :map) compact "," raw_server_types  map "]}," Fog Compute Vsphere Mock list_resource_pools":{"type":"method","name":"list_resource_pools","children":[],"call":[]}," Fog Compute Vsphere Real resource_pool_attributes":{"type":"method","name":"resource_pool_attributes","children":[],"call":["resource_pool overallStatus ","resource_pool summary configuredMemoryMB ","resource_pool summary ","resource_pool name "," managed_obj_id ","name empty? "," folder_path gsub "," folder_path ","resource_pool  folder_path gsub  "," folder_path gsub  empty? "]}," Fog Compute Vsphere Real list_raw_resource_pools":{"type":"method","name":"list_raw_resource_pools","children":[],"call":["(send\n  (lvar :cluster) :resourcePool) flatten ","cluster resourcePool resourcePool ","cluster resourcePool ","pools uniq "," traverse_raw_resource_pools "]}," Fog Compute Vsphere Real list_resource_pools":{"type":"method","name":"list_resource_pools","children":[],"call":[" resource_pool_attributes "," list_raw_resource_pools map "," list_raw_resource_pools "," get_raw_cluster ","filters [] "," get_raw_ get_raw_cluster  "]}," Fog Compute Vsphere Mock list_processes":{"type":"method","name":"list_processes","children":[],"call":["Process  new "]}," Fog Compute Vsphere Real list_processes":{"type":"method","name":"list_processes","children":[],"call":["Process  new ","pi startTime ","pi pid ","pi owner ","pi name ","pi exitCode ","pi endTime ","pi cmdLine ","processes map ","p_manager ListProcessesInGuest ","@connection serviceContent guestOperationsManager processManager ","@connection serviceContent guestOperationsManager ","@connection serviceContent ","RbVmomi VIM  NamePasswordAuthentication ","opts [] "," get_vm_ref "," connection serviceContent guestOperationsManager processManager "," connection serviceContent guestOperationsManager "," connection serviceContent "," connection ","p_manager ListProcessesInGuest  map ","@connection serviceContent guestOperationsManager processManager  ListProcessesInGuest "," connection serviceContent guestOperationsManager processManager  ListProcessesInGuest "," get_ get_vm_ref _ref "]}," Fog Compute Vsphere Mock list_networks":{"type":"method","name":"list_networks","children":[],"call":[" raise ","n [] == ","datacenter_name [] ","n [] "," data [] values select "," data [] values "," data [] "," data ","d [] include? ","d [] ","d [] == ","cluster_name nil? ","filters fetch ","filters [] ","filters []  [] ","filters fetch  nil? "]}," Fog Compute Vsphere Real network_attributes":{"type":"method","name":"network_attributes","children":[],"call":["network config distributedVirtualSwitch name ","network config distributedVirtualSwitch ","network config ","network class name == ","network class name ","network class ","network summary accessible ","network summary ","network name "," managed_obj_id ","raw_network key ","raw_network kind_of? "," get_raw_network "," raw_network_vlan_id ","network config defaultPortConfig vlan ","network config defaultPortConfig ","network key ","network kind_of? "," raw_network_vlan ","network is_a? "," managed_obj_ managed_obj_id  "," managed_obj_raw_network key  "," managed_obj_network key  "," get_raw_network  key "," get_raw_network  kind_of? "," get_ get_raw_network  "," raw_network_vlan_ managed_obj_id  "," raw_network_vlan_raw_network key  "," raw_network_vlan_network key  ","  get_raw_network _vlan_id ","  get_raw_network _vlan "]}," Fog Compute Vsphere Real raw_networks":{"type":"method","name":"raw_networks","children":[],"call":[" find_raw_datacenter network "," find_raw_datacenter "," get_raw_cluster network "," get_raw_cluster ","cluster nil? "]}," Fog Compute Vsphere Real list_networks":{"type":"method","name":"list_networks","children":[],"call":["(send\n  (send nil :raw_networks\n    (lvar :datacenter_name)) :map) compact "," network_attributes ","network summary accessible ! ","network summary accessible ","network summary "," raw_networks map "," raw_networks ","filters [] ","(send\n  (send nil :raw_networks\n    (lvar :datacenter_name)\n    (lvar :cluster_name)) :map) compact ","filters fetch ","(send\n  (block\n    (send\n      (lvar :results) :select)\n    (args\n      (arg :result))\n    (or\n      (send\n        (send\n          (lvar :result) :obj) :is_a?\n        (const\n          (const\n            (const nil :RbVmomi) :VIM) :DistributedVirtualPortgroup))\n      (send\n        (send\n          (lvar :result) :obj) :is_a?\n        (const\n          (const\n            (const nil :RbVmomi) :VIM) :Network)))) :map) compact ","(send\n  (send\n    (lvar :network) :obj) :is_a?\n  (const\n    (const\n      (const nil :RbVmomi) :VIM) :DistributedVirtualPortgroup)) merge ","network obj _ref ","network obj "," map_attrs_to_hash merge "," managed_obj_id "," map_attrs_to_hash "," network_attribute_mapping ","dvswitches [] ","network [] _ref ","network [] "," raw_network_vlan "," network_dvportgroup_attribute_mapping ","network obj is_a? ","network [] ! ","cluster_networks include? ! ","cluster_networks include? ","(send\n  (lvar :results) :select) map ","result obj is_a? ","result obj ","results select ","cluster network map ","cluster network "," get_raw_cluster ","obj []= ","dvswitch [] ","dvswitch obj _ref ","dvswitch obj ","(send\n  (lvar :results) :select) each_with_object "," property_collector_results "," network_filter_spec "," find_raw_datacenter ","(send\n  (send nil :raw_networks\n    (lvar :filters [] )) :map) compact ","(send\n  (send nil :raw_networks\n    (lvar :filters [] )\n    (lvar :cluster_name)) :map) compact ","(send\n  (send nil :raw_networks\n    (lvar :datacenter_name)\n    (lvar :filters fetch )) :map) compact ","(send\n  (send nil :raw_networks\n    (lvar :datacenter_name)\n    (lvar : get_raw_cluster _name)) :map) compact ","(send\n  (block\n    (send\n      (lvar : property_collector_results ) :select)\n    (args\n      (arg :result))\n    (or\n      (send\n        (send\n          (lvar :result) :obj) :is_a?\n        (const\n          (const\n            (const nil :RbVmomi) :VIM) :DistributedVirtualPortgroup))\n      (send\n        (send\n          (lvar :result) :obj) :is_a?\n        (const\n          (const\n            (const nil :RbVmomi) :VIM) :Network)))) :map) compact ","cluster network map  include? ! "," get_raw_cluster _networks include? ! ","cluster network map  include? "," get_raw_cluster _networks include? ","(send\n  (lvar : property_collector_results ) :select) map "," property_collector_results  select "," get_raw_cluster  network map "," get_raw_cluster  network "," get_raw_ get_raw_cluster  ","(send\n  (lvar : property_collector_results ) :select) each_with_object "," property_collector_ property_collector_results  "]}," Fog Compute Vsphere Real interface_type_attributes":{"type":"method","name":"interface_type_attributes","children":[],"call":[]}," Fog Compute Vsphere Real list_interface_types":{"type":"method","name":"list_interface_types","children":[],"call":["(send\n  (send\n    (send nil :get_raw_server_type\n      (lvar :servertype_name)\n      (lvar :datacenter_name)) :[]\n    (sym :supportedEthernetCard)) :map) compact "," interface_type_attributes ","filters [] != ","filters [] ","filters key? "," get_raw_server_type [] map "," get_raw_server_type [] "," get_raw_server_type ","(send\n  (send\n    (send nil :get_raw_server_type\n      (lvar :filters [] )\n      (lvar :datacenter_name)) :[]\n    (sym :supportedEthernetCard)) :map) compact ","(send\n  (send\n    (send nil :get_raw_server_type\n      (lvar :servertype_name)\n      (lvar :filters [] )) :[]\n    (sym :supportedEthernetCard)) :map) compact "]}," Fog Compute Vsphere Real child_folders":{"type":"method","name":"child_folders","children":[],"call":["folder childEntity grep map flatten ","folder childEntity grep map "," method ","folder childEntity grep ","folder childEntity "]}," Fog Compute Vsphere Real get_raw_vmfolders":{"type":"method","name":"get_raw_vmfolders","children":[],"call":[" child_folders flatten compact "," child_folders flatten "," child_folders "," get_raw_vmfolder "," child_ get_raw_vmfolder s flatten compact "," child_ get_raw_vmfolder s flatten "," child_ get_raw_vmfolder s "," get_raw_vm get_raw_vmfolder  "]}," Fog Compute Vsphere Real list_folders":{"type":"method","name":"list_folders","children":[],"call":[" folder_attributes "," get_raw_vmfolders map "," get_raw_vmfolders ","filters [] ","(send\n  (lvar :folders) :map) compact "," map_attrs_to_hash merge "," folder_type ","folder [] ","path join "," lookup_folder_name "," map_attrs_to_hash "," folder_attribute_mapping ","path include? "," lookup_folder_path ","folder [] _ref "," managed_obj_id ","folder obj ","folders map ","result [] include? ","result [] ","result obj is_a? ","result obj ","results select "," generate_folder_inventory "," property_collector_results "," folder_filter_spec "," connection serviceContent rootFolder "," connection serviceContent "," connection ","path empty? ","path nil? "," lookup_folder_path  join "," lookup_folder_path  include? "," lookup_folder_ lookup_folder_path  "," property_collector_results  select "," generate_ generate_folder_inventory  "," property_collector_ property_collector_results  "," lookup_folder_path  empty? "," lookup_folder_path  nil? "]}," Fog Compute Vsphere Mock list_datastores":{"type":"method","name":"list_datastores","children":[],"call":[" raise ","d [] == ","datacenter_name [] ","d [] "," data [] values select "," data [] values "," data [] "," data ","d [] include? ","cluster_name nil? ","filters fetch ","filters [] ","filters []  [] ","filters fetch  nil? "]}," Fog Compute Vsphere Real datastore_attributes":{"type":"method","name":"datastore_attributes","children":[],"call":["datastore summary uncommitted ","datastore summary ","datastore summary capacity ","datastore summary freeSpace ","datastore summary type ","datastore summary accessible ","datastore name "," managed_obj_id "]}," Fog Compute Vsphere Real raw_datastores":{"type":"method","name":"raw_datastores","children":[],"call":[" find_raw_datacenter datastore "," find_raw_datacenter "," get_raw_cluster datastore "," get_raw_cluster ","cluster nil? "]}," Fog Compute Vsphere Real list_datastores":{"type":"method","name":"list_datastores","children":[],"call":["(send\n  (send nil :raw_datastores\n    (lvar :datacenter_name)) :map) compact "," datastore_attributes ","datastore summary accessible ! ","datastore summary accessible ","datastore summary "," raw_datastores map "," raw_datastores ","filters [] ","(send\n  (send nil :raw_datastores\n    (lvar :datacenter_name)\n    (lvar :cluster_name)) :map) compact ","filters fetch ","(send\n  (lvar :datastores) :map) compact "," map_attrs_to_hash merge "," managed_obj_id ","datastore obj "," map_attrs_to_hash "," datastore_attribute_mapping ","datastore [] ! ","datastore [] ","datastores map "," property_collector_results "," datastore_filter_spec "," datastore_cluster_filter_spec "," get_raw_cluster "," find_raw_datacenter ","(send\n  (send nil :raw_datastores\n    (lvar :filters [] )) :map) compact ","(send\n  (send nil :raw_ property_collector_results \n    (lvar :datacenter_name)) :map) compact "," raw_ property_collector_results  map "," raw_ property_collector_results  ","(send\n  (send nil :raw_datastores\n    (lvar :filters [] )\n    (lvar :cluster_name)) :map) compact ","(send\n  (send nil :raw_datastores\n    (lvar :datacenter_name)\n    (lvar :filters fetch )) :map) compact ","(send\n  (send nil :raw_ property_collector_results \n    (lvar :datacenter_name)\n    (lvar :cluster_name)) :map) compact ","(send\n  (send nil :raw_datastores\n    (lvar :datacenter_name)\n    (lvar : get_raw_cluster _name)) :map) compact ","(send\n  (lvar : property_collector_results ) :map) compact "," property_collector_results  map "," datastore_ get_raw_cluster _filter_spec "," get_raw_ get_raw_cluster  "]}," Fog Compute Vsphere Mock list_datacenters":{"type":"method","name":"list_datacenters","children":[],"call":[" data [] values "," data [] "," data "]}," Fog Compute Vsphere Real find_datacenters":{"type":"method","name":"find_datacenters","children":[],"call":[" raw_datacenters "," find_raw_datacenter "]}," Fog Compute Vsphere Real get_raw_datacenters_from_folder":{"type":"method","name":"get_raw_datacenters_from_folder","children":[],"call":["(send\n  (send\n    (lvar :folder) :childEntity) :map) flatten "," get_raw_datacenters_from_folder ","childE is_a? ","folder childEntity map ","folder childEntity "]}," Fog Compute Vsphere Real raw_datacenters":{"type":"method","name":"raw_datacenters","children":[],"call":[" get_raw_datacenters_from_folder ","@connection rootFolder "," connection rootFolder "," connection "]}," Fog Compute Vsphere Real raw_getpathmo":{"type":"method","name":"raw_getpathmo","children":[],"call":["(send nil :raw_getpathmo\n  (send\n    (lvar :mo) :parent)) flatten ","mo name "," raw_getpathmo ","mo parent ","mo parent name == ","@connection rootFolder name ","@connection rootFolder ","mo parent name ","mo parent == "," connection rootFolder name "," connection rootFolder "," connection ","mo parent nil? "]}," Fog Compute Vsphere Real list_datacenters":{"type":"method","name":"list_datacenters","children":[],"call":["dc overallStatus "," raw_getpathmo ","dc name "," managed_obj_id "," raw_datacenters map "," raw_datacenters "]}," Fog Compute Vsphere Real list_customfields":{"type":"method","name":"list_customfields","children":[],"call":["customfield type ","customfield name ","customfield key to_i ","customfield key ","@connection serviceContent customFieldsManager field map ","@connection serviceContent customFieldsManager field ","@connection serviceContent customFieldsManager ","@connection serviceContent "," connection serviceContent customFieldsManager field map "," connection serviceContent customFieldsManager field "," connection serviceContent customFieldsManager "," connection serviceContent "," connection "]}," Fog Compute Vsphere Mock list_compute_resources":{"type":"method","name":"list_compute_resources","children":[],"call":[]}," Fog Compute Vsphere Real compute_resource_attributes":{"type":"method","name":"compute_resource_attributes","children":[],"call":["compute_resource summary numHosts == ","compute_resource summary numHosts ","compute_resource summary ","compute_resource summary numEffectiveHosts > ","compute_resource summary numEffectiveHosts ","overall_usage [] ","compute_resource summary overallStatus ","compute_resource summary effectiveMemory ","compute_resource summary effectiveCpu ","compute_resource summary numCpuThreads ","compute_resource summary numCpuCores ","compute_resource summary totalMemory ","compute_resource summary totalCpu ","compute_resource name "," managed_obj_id ","sum [] + ","host summary quickStats overallMemoryUsage ","host summary quickStats ","host summary ","sum [] ","host summary quickStats overallCpuUsage ","compute_resource host inject ","compute_resource host "]}," Fog Compute Vsphere Real raw_compute_resources":{"type":"method","name":"raw_compute_resources","children":[],"call":[" find_raw_datacenter find_compute_resource children "," find_raw_datacenter find_compute_resource "," find_raw_datacenter "]}," Fog Compute Vsphere Real list_compute_resources":{"type":"method","name":"list_compute_resources","children":[],"call":["(send\n  (lvar :compute_resources) :map) compact "," compute_resource_attributes ","summary numEffectiveHosts == ","summary numEffectiveHosts ","compute_resource summary ","compute_resources map "," raw_compute_resources ","filters [] ","compute_resource instance_of? ","(send\n  (lvar : raw_compute_resources ) :map) compact ","compute_resource summary  numEffectiveHosts == ","compute_resource summary  numEffectiveHosts ","compute_resource compute_resource summary  "," raw_compute_resources  map "," raw_ raw_compute_resources  "]}," Fog Compute Vsphere Mock get_raw_clusters_from_folder":{"type":"method","name":"get_raw_clusters_from_folder","children":[],"call":["(send\n  (lvar :folder) :map) flatten "," get_raw_clusters_from_folder ","child [] ","child [] == ","folder map "]}," Fog Compute Vsphere Mock raw_clusters":{"type":"method","name":"raw_clusters","children":[],"call":[" get_raw_clusters_from_folder "," data [] "," data "," get_raw_clusters_from_ data []  "]}," Fog Compute Vsphere Mock list_clusters":{"type":"method","name":"list_clusters","children":[],"call":[" raw_clusters map "," raw_clusters "]}," Fog Compute Vsphere Real cluster_path":{"type":"method","name":"cluster_path","children":[],"call":["cluster pretty_path gsub ","datacenter hostFolder name ","datacenter hostFolder ","cluster pretty_path "," find_raw_datacenter ","Regexp  escape "," find_raw_datacenter  hostFolder name "," find_raw_datacenter  hostFolder "," find_raw_ find_raw_datacenter  "]}," Fog Compute Vsphere Real cluster_attributes":{"type":"method","name":"cluster_attributes","children":[],"call":[" parent_attribute [] "," parent_attribute ","cluster path ","cluster summary overallStatus ","cluster summary ","cluster summary numCpuCores ","cluster summary numHosts "," cluster_path ","cluster name "," managed_obj_id "]}," Fog Compute Vsphere Real get_raw_clusters_from_folder":{"type":"method","name":"get_raw_clusters_from_folder","children":[],"call":["(send\n  (send\n    (lvar :folder) :childEntity) :map) flatten "," get_raw_clusters_from_folder ","child_entity is_a? ","folder childEntity map ","folder childEntity "]}," Fog Compute Vsphere Real raw_clusters":{"type":"method","name":"raw_clusters","children":[],"call":[" get_raw_clusters_from_folder "," find_raw_datacenter hostFolder "," find_raw_datacenter "]}," Fog Compute Vsphere Real list_clusters":{"type":"method","name":"list_clusters","children":[],"call":[" cluster_attributes "," raw_clusters map "," raw_clusters ","filters [] ","(send\n  (send nil :raw_clusters\n    (lvar :datacenter_name)) :map) compact ","cluster instance_of? ","(send\n  (send nil :list_datacenters) :map) flatten "," list_clusters ","dc [] "," list_datacenters map "," list_datacenters ","datacenter_name nil? ","filters key? ","(send\n  (send nil :raw_clusters\n    (lvar :filters [] )) :map) compact ","filters []  nil? "]}," Fog Compute Vsphere Mock list_child_snapshots":{"type":"method","name":"list_child_snapshots","children":[],"call":["Time  now utc ","Time  now "]}," Fog Compute Vsphere Real child_snapshot_info":{"type":"method","name":"child_snapshot_info","children":[],"call":["snap_tree snapshot _ref ","snap_tree snapshot ","parent_snap ref_chain ","snap_tree name ","parent_snap snapshot_name_chain ","snap_tree state ","snap_tree createTime ","snap_tree description ","snap_tree quiesced ","parent_snap server_id "]}," Fog Compute Vsphere Real list_child_snapshots":{"type":"method","name":"list_child_snapshots","children":[],"call":["child_snapshots flatten compact ","child_snapshots flatten "," list_child_snapshots ","opts [] "," child_snapshot_info ","normalized_snapshot tree_node childSnapshotList map ","normalized_snapshot tree_node childSnapshotList ","normalized_snapshot tree_node ","Snapshot  new ","snapshot update ","Hash  === ","Snapshot  new  tree_node childSnapshotList map ","Snapshot  new  tree_node childSnapshotList ","Snapshot  new  tree_node "]}," Fog Compute Vsphere Mock get_vm_first_scsi_controller":{"type":"method","name":"get_vm_first_scsi_controller","children":[],"call":[]}," Fog Compute Vsphere Real get_vm_first_scsi_controller_raw":{"type":"method","name":"get_vm_first_scsi_controller_raw","children":[],"call":["ctrl key ","ctrl scsiCtlrUnitNumber ","ctrl sharedBus to_s ","ctrl sharedBus ","ctrl class to_s ","ctrl class ","(send\n  (send\n    (send\n      (send\n        (send\n          (send nil :get_vm_ref\n            (lvar :vm_id)) :config) :hardware) :device) :grep\n    (const\n      (const\n        (const nil :RbVmomi) :VIM) :VirtualSCSIController)) :select) first ","ctrl key == "," get_vm_ref config hardware device grep select "," get_vm_ref config hardware device grep "," get_vm_ref config hardware device "," get_vm_ref config hardware "," get_vm_ref config "," get_vm_ref ","(send\n  (send\n    (send\n      (send\n        (send\n          (send nil :get_vm_ref\n            (lvar :vm_id)) :config) :hardware) :device) :grep\n    (const\n      (const\n        (const nil :RbVmomi) :VIM) :VirtualSCSIController)) :select) first  key ","(send\n  (send\n    (send\n      (send\n        (send\n          (send nil :get_vm_ref\n            (lvar :vm_id)) :config) :hardware) :device) :grep\n    (const\n      (const\n        (const nil :RbVmomi) :VIM) :VirtualSCSIController)) :select) first  scsiCtlrUnitNumber ","(send\n  (send\n    (send\n      (send\n        (send\n          (send nil :get_vm_ref\n            (lvar :vm_id)) :config) :hardware) :device) :grep\n    (const\n      (const\n        (const nil :RbVmomi) :VIM) :VirtualSCSIController)) :select) first  sharedBus to_s ","(send\n  (send\n    (send\n      (send\n        (send\n          (send nil :get_vm_ref\n            (lvar :vm_id)) :config) :hardware) :device) :grep\n    (const\n      (const\n        (const nil :RbVmomi) :VIM) :VirtualSCSIController)) :select) first  sharedBus ","(send\n  (send\n    (send\n      (send\n        (send\n          (send nil :get_vm_ref\n            (lvar :vm_id)) :config) :hardware) :device) :grep\n    (const\n      (const\n        (const nil :RbVmomi) :VIM) :VirtualSCSIController)) :select) first  class to_s ","(send\n  (send\n    (send\n      (send\n        (send\n          (send nil :get_vm_ref\n            (lvar :vm_id)) :config) :hardware) :device) :grep\n    (const\n      (const\n        (const nil :RbVmomi) :VIM) :VirtualSCSIController)) :select) first  class ","(send\n  (send\n    (send\n      (send\n        (send\n          (send nil :get_vm_ref\n            (lvar :vm_id)) :config) :hardware) :device) :grep\n    (const\n      (const\n        (const nil :RbVmomi) :VIM) :VirtualSCSIController)) :select) first  key == "]}," Fog Compute Vsphere Real get_vm_first_scsi_controller":{"type":"method","name":"get_vm_first_scsi_controller","children":[],"call":["Fog Compute Vsphere SCSIController  new "," get_vm_first_scsi_controller_raw "]}," Fog Compute Vsphere Mock get_virtual_machine":{"type":"method","name":"get_virtual_machine","children":[],"call":[" raise "," list_virtual_machines first "," list_virtual_machines "," is_uuid? "]}," Fog Compute Vsphere Real get_vm_by_name":{"type":"method","name":"get_vm_by_name","children":[],"call":["(send\n  (lvar :vms) :keep_if) first ","v [] == ","v [] ","vms keep_if ","v parent pretty_path include? ","v parent pretty_path ","v parent ","File  basename ","File  dirname ","name include? "," raw_list_all_virtual_machines ","vms find "," raw_list_all_virtual_machines_in_folder ","(send\n  (lvar : raw_list_all_virtual_machines ) :keep_if) first ","(send\n  (lvar : raw_list_all_virtual_machines_in_folder ) :keep_if) first "," raw_list_all_virtual_machines  keep_if "," raw_list_all_virtual_machines_in_folder  keep_if ","File  File  basename  "," raw_list_all_virtual_machines  find "," raw_list_all_virtual_machines_in_folder  find "," raw_list_all_virtual_machines_in_File  dirname  "]}," Fog Compute Vsphere Real get_vm_ref":{"type":"method","name":"get_vm_ref","children":[],"call":[" raise ","(send\n  (send nil :raw_datacenters) :map) compact first ","(send\n  (send nil :raw_datacenters) :map) compact "," get_vm_by_name ","d [] "," raw_datacenters map "," raw_datacenters ","@connection searchIndex FindByUuid ","@connection searchIndex ","params []= "," is_uuid? "," find_raw_datacenter "," connection searchIndex FindByUuid "," connection searchIndex "," connection ","(send\n  (send nil : find_raw_datacenter s) :map) compact first ","(send\n  (send nil : find_raw_datacenter s) :map) compact ","  find_raw_datacenter s map ","  find_raw_datacenter s "," find_ find_raw_datacenter  "]}," Fog Compute Vsphere Real get_virtual_machine":{"type":"method","name":"get_virtual_machine","children":[],"call":[" convert_vm_mob_ref_to_attr_hash "," get_vm_ref "]}," Fog Compute Vsphere Mock get_template":{"type":"method","name":"get_template","children":[],"call":[]}," Fog Compute Vsphere Real get_template":{"type":"method","name":"get_template","children":[],"call":[" convert_vm_mob_ref_to_attr_hash "," get_vm_ref "]}," Fog Compute Vsphere Mock get_server_type":{"type":"method","name":"get_server_type","children":[],"call":[]}," Fog Compute Vsphere Real get_raw_server_type":{"type":"method","name":"get_raw_server_type","children":[],"call":[" raise ","(send\n  (lvar :types) :select) first ","servertype id == ","servertype id ","types select "," raw_server_types ","(send\n  (lvar :(send\n  (lvar :types) :select) first ) :select) first ","(send\n  (lvar : raw_server_types ) :select) first ","(send\n  (lvar :types) :select) first  select "," raw_server_types  select "," raw_server_(send\n  (lvar :types) :select) first  "," raw_server_ raw_server_types  "]}," Fog Compute Vsphere Real get_server_type":{"type":"method","name":"get_server_type","children":[],"call":[" server_type_attributes "," raise "," get_raw_server_type ","  get_raw_server_type _attributes "," get_raw_ get_raw_server_type  "]}," Fog Compute Vsphere Mock get_resource_pool":{"type":"method","name":"get_resource_pool","children":[],"call":[]}," Fog Compute Vsphere Real get_raw_resource_pool":{"type":"method","name":"get_raw_resource_pool","children":[],"call":["cluster resourcePool traverse ","cluster resourcePool ","name nil? ","dc find_compute_resource "," find_raw_datacenter ","dc find_compute_resource  resourcePool traverse ","dc find_compute_resource  resourcePool "," find_raw_datacenter  find_compute_resource "]}," Fog Compute Vsphere Real get_resource_pool":{"type":"method","name":"get_resource_pool","children":[],"call":[" resource_pool_attributes "," raise "," get_raw_resource_pool ","  get_raw_resource_pool _attributes "," get_raw_ get_raw_resource_pool  "]}," Fog Compute Vsphere Mock get_network":{"type":"method","name":"get_network","children":[],"call":[]}," Fog Compute Vsphere Shared choose_finder":{"type":"method","name":"choose_finder","children":[],"call":["n name == ","n name ","Proc  new ","n class to_s == ","n class to_s ","n class ","n config distributedVirtualSwitch name == ","n config distributedVirtualSwitch name ","n config distributedVirtualSwitch ","n config ","n key == ","n key ","n is_a? "," proc "]}," Fog Compute Vsphere Shared get_all_raw_networks":{"type":"method","name":"get_all_raw_networks","children":[],"call":["@connection serviceContent viewManager CreateContainerView view ","@connection serviceContent viewManager CreateContainerView ","dc networkFolder ","@connection serviceContent viewManager ","@connection serviceContent "," find_raw_datacenter "," connection serviceContent viewManager CreateContainerView view "," connection serviceContent viewManager CreateContainerView "," connection serviceContent viewManager "," connection serviceContent "," connection "," list_container_view "," find_raw_datacenter  networkFolder "]}," Fog Compute Vsphere Real get_raw_network":{"type":"method","name":"get_raw_network","children":[],"call":["finder call ","networks find "," get_all_raw_networks "," choose_finder "," get_all_raw_networks find "," choose_finder  call "," get_all_raw_networks  find "," get_all_raw_ get_all_raw_networks  "," choose_ choose_finder  "," get_all_raw_ get_all_raw_networks  find "]}," Fog Compute Vsphere Real get_network":{"type":"method","name":"get_network","children":[],"call":[" network_attributes "," raise "," get_raw_network ","  get_raw_network _attributes "," get_raw_ get_raw_network  "]}," Fog Compute Vsphere Real get_interface_type":{"type":"method","name":"get_interface_type","children":[],"call":[" raise "," list_interface_types first "," list_interface_types ","servertype id "]}," Fog Compute Vsphere Mock get_folder":{"type":"method","name":"get_folder","children":[],"call":[" raise ","f [] end_with? ","f [] ","f [] == "," data [] values find "," data [] values "," data [] "," data "]}," Fog Compute Vsphere Real folder_type":{"type":"method","name":"folder_type","children":[],"call":["types include? ","folder childType ","folder childType  include? "]}," Fog Compute Vsphere Real folder_attributes":{"type":"method","name":"folder_attributes","children":[],"call":["/ + ","folder path map join ","folder path map ","folder path "," folder_type ","folder parent name ","folder parent ","folder name "," managed_obj_id "," folder_path ","folder childType "]}," Fog Compute Vsphere Real get_raw_vmfolder":{"type":"method","name":"get_raw_vmfolder","children":[],"call":[" raise ","last_returned_folder find ","paths reduce ","paths empty? ","path sub split ","path sub ","Regexp  quote ","(send\n  (send\n    (lvar :dc_root_folder) :path) :map) join ","dc_root_folder path map ","dc_root_folder path ","dc vmFolder "," find_raw_datacenter "," get_raw_folder ","path sub split  reduce ","path sub split  empty? ","path last_returned_folder find  split ","path last_returned_folder find  ","(send\n  (send\n    (lvar :dc vmFolder ) :path) :map) join ","(send\n  (send\n    (lvar : find_raw_datacenter _root_folder) :path) :map) join ","dc vmFolder  path map "," find_raw_datacenter _root_folder path map ","dc vmFolder  path "," find_raw_datacenter _root_folder path "," find_raw_datacenter  vmFolder "]}," Fog Compute Vsphere Real get_folder":{"type":"method","name":"get_folder","children":[],"call":[" raise "," folder_attributes "," get_raw_vmfolder "," get_raw_folder ","  get_raw_vmfolder _attributes ","  get_raw_folder _attributes "," get_raw_vm get_raw_vmfolder  "," get_raw_vm get_raw_folder  "," get_raw_ get_raw_vmfolder  "," get_raw_ get_raw_folder  "]}," Fog Compute Vsphere Mock get_datastore":{"type":"method","name":"get_datastore","children":[],"call":[]}," Fog Compute Vsphere Real get_raw_datastore":{"type":"method","name":"get_raw_datastore","children":[],"call":["(send\n  (send\n    (send\n      (send\n        (send\n          (ivar :@connection) :serviceContent) :viewManager) :CreateContainerView\n      (hash\n        (pair\n          (sym :container)\n          (send\n            (lvar :dc) :datastoreFolder))\n        (pair\n          (sym :type)\n          (array\n            (str \"Datastore\")))\n        (pair\n          (sym :recursive)\n          (true)))) :view) :select) first ","ds name == ","ds name ","@connection serviceContent viewManager CreateContainerView view select ","@connection serviceContent viewManager CreateContainerView view ","@connection serviceContent viewManager CreateContainerView ","dc datastoreFolder ","@connection serviceContent viewManager ","@connection serviceContent "," find_raw_datacenter ","(send\n  (send\n    (send\n      (send\n        (send\n          (send nil :connection) :serviceContent) :viewManager) :CreateContainerView\n      (hash\n        (pair\n          (sym :container)\n          (send\n            (lvar :dc) :datastoreFolder))\n        (pair\n          (sym :type)\n          (array\n            (str \"Datastore\")))\n        (pair\n          (sym :recursive)\n          (true)))) :view) :select) first "," connection serviceContent viewManager CreateContainerView view select "," connection serviceContent viewManager CreateContainerView view "," connection serviceContent viewManager CreateContainerView "," connection serviceContent viewManager "," connection serviceContent "," connection "," get_raw_datastores detect "," get_raw_datastores ","(send\n  (send\n    (send\n      (send\n        (send\n          (ivar :@connection) :serviceContent) :viewManager) :CreateContainerView\n      (hash\n        (pair\n          (sym :container)\n          (send\n            (lvar : find_raw_datacenter ) :datastoreFolder))\n        (pair\n          (sym :type)\n          (array\n            (str \"Datastore\")))\n        (pair\n          (sym :recursive)\n          (true)))) :view) :select) first "," find_raw_datacenter  datastoreFolder ","(send\n  (send\n    (send\n      (send\n        (send\n          (send nil :connection) :serviceContent) :viewManager) :CreateContainerView\n      (hash\n        (pair\n          (sym :container)\n          (send\n            (lvar : find_raw_datacenter ) :datastoreFolder))\n        (pair\n          (sym :type)\n          (array\n            (str \"Datastore\")))\n        (pair\n          (sym :recursive)\n          (true)))) :view) :select) first "]}," Fog Compute Vsphere Real get_datastore":{"type":"method","name":"get_datastore","children":[],"call":[" datastore_attributes "," raise "," get_raw_datastore ","ds [] == ","ds [] "," list_datastores detect "," list_datastores ","  get_raw_datastore _attributes "," get_raw_ get_raw_datastore  "," list_ get_raw_datastore s detect "," list_ get_raw_datastore s "]}," Fog Compute Vsphere Mock get_datacenter":{"type":"method","name":"get_datacenter","children":[],"call":[" raise "," data [] [] "," data [] "," data "]}," Fog Compute Vsphere Real get_raw_datacenter":{"type":"method","name":"get_raw_datacenter","children":[],"call":["@connection serviceInstance find_datacenter ","@connection serviceInstance "," connection serviceInstance find_datacenter "," connection serviceInstance "," connection "]}," Fog Compute Vsphere Real find_raw_datacenter":{"type":"method","name":"find_raw_datacenter","children":[],"call":[" get_raw_datacenter ","d name == ","d name "," raw_datacenters find "," raw_datacenters "]}," Fog Compute Vsphere Real get_datacenter":{"type":"method","name":"get_datacenter","children":[],"call":[" raw_getpathmo ","dc overallStatus ","dc name "," raise "," find_raw_datacenter "," find_raw_datacenter  overallStatus "," find_raw_datacenter  name "]}," Fog Compute Vsphere Mock get_compute_resource":{"type":"method","name":"get_compute_resource","children":[],"call":[]}," Fog Compute Vsphere Real get_raw_compute_resource":{"type":"method","name":"get_raw_compute_resource","children":[],"call":[" find_raw_datacenter find_compute_resource "," find_raw_datacenter "]}," Fog Compute Vsphere Real get_compute_resource":{"type":"method","name":"get_compute_resource","children":[],"call":[" compute_resource_attributes "," raise "," get_raw_compute_resource ","  get_raw_compute_resource _attributes "," get_raw_ get_raw_compute_resource  "]}," Fog Compute Vsphere Mock get_cluster":{"type":"method","name":"get_cluster","children":[],"call":[" raise ","c [] == ","c [] "," data [] find "," data [] "," data "]}," Fog Compute Vsphere Real get_raw_cluster":{"type":"method","name":"get_raw_cluster","children":[],"call":["dc find_compute_resource "," find_raw_datacenter ","datacenter_name_or_obj is_a? "," find_raw_datacenter  find_compute_resource "]}," Fog Compute Vsphere Real get_cluster":{"type":"method","name":"get_cluster","children":[],"call":[" cluster_attributes "," raise "," get_raw_cluster ","  get_raw_cluster _attributes "," get_raw_ get_raw_cluster  "]}," Fog Compute Vsphere Mock current_time":{"type":"method","name":"current_time","children":[],"call":["Time  now utc ","Time  now "]}," Fog Compute Vsphere Real current_time":{"type":"method","name":"current_time","children":[],"call":["@connection serviceInstance CurrentTime ","@connection serviceInstance "," connection serviceInstance CurrentTime "," connection serviceInstance "," connection "]}," Fog Compute Vsphere Mock create_vm":{"type":"method","name":"create_vm","children":[],"call":[" data [] []= "," data [] "," data ","attributes [] map ","attributes [] "," rand ","SecureRandom  uuid ","SecureRandom  uuSecureRandom  uuid  "]}," Fog Compute Vsphere Real extra_config":{"type":"method","name":"extra_config","children":[],"call":["v to_s ","extra_config map ","attributes [] "]}," Fog Compute Vsphere Real create_disk":{"type":"method","name":"create_disk","children":[],"call":["payload [] [] []= ","disk eager_zero ","payload [] [] ","payload [] ","disk eager_zero == ","disk thin == ","disk thin ","operation == ","RbVmomi VIM  VirtualDisk ","disk size ","RbVmomi VIM  VirtualDiskFlatVer2BackingInfo ","disk mode to_sym ","disk mode ","disk datastore ","disk key ","index + ","index > "," datastore ","payload []= ","options [] ","disk unit_number ","disk controller_key ","disk set_key ","disk set_unit_number "]}," Fog Compute Vsphere Real controller_get_shared_from_options":{"type":"method","name":"controller_get_shared_from_options","children":[],"call":["options [] ","options [] is_a? ","options [] == ","options key? ! ","options key? "]}," Fog Compute Vsphere Real controller_default_options":{"type":"method","name":"controller_default_options","children":[],"call":["RbVmomi VIM  VirtualLsiLogicController class ","RbVmomi VIM  VirtualLsiLogicController "]}," Fog Compute Vsphere Real create_controller":{"type":"method","name":"create_controller","children":[],"call":["controller_class new "," controller_get_shared_from_options ","options [] ","Fog Vsphere  class_from_string ","options [] is_a? "," controller_default_options "," controller_default_options merge ","Hash  [] ","k to_sym ","options map ","1000 + ","controller attributes ","options []  new ","Fog Vsphere  class_from_string  new "," controller_get_shared_from_ controller_default_options  "," controller_get_shared_from_ controller_default_options merge  "," controller_default_options  [] "," controller_default_options merge  [] "," controller_default_options  [] is_a? "," controller_default_options merge  [] is_a? "," controller_default_ controller_default_options  "," controller_default_ controller_default_options merge  "," controller_default_ controller_default_options  merge "," controller_default_ controller_default_options merge  merge "," controller_default_options  map "," controller_default_options merge  map "]}," Fog Compute Vsphere Real create_interface":{"type":"method","name":"create_interface","children":[],"call":["nic type new "," create_nic_backing ","nic summary ","nic name ","nic type "]}," Fog Compute Vsphere Real create_nic_backing":{"type":"method","name":"create_nic_backing","children":[],"call":["RbVmomi VIM  VirtualEthernetCardNetworkBackingInfo ","nic network ","RbVmomi VIM  VirtualEthernetCardDistributedVirtualPortBackingInfo ","RbVmomi VIM  DistributedVirtualSwitchPortConnection ","raw_network config distributedVirtualSwitch uuid ","raw_network config distributedVirtualSwitch ","raw_network config ","raw_network key ","raw_network kind_of? "," get_raw_network ","nic virtualswitch ","attributes [] ","raw_network is_a? ","RbVmomi VIM  VirtualEthernetCardOpaqueNetworkBackingInfo ","raw_network summary opaqueNetworkId ","raw_network summary ","raw_network summary opaqueNetworkType "," get_raw_network  config distributedVirtualSwitch uuid "," get_raw_network  config distributedVirtualSwitch "," get_raw_network  config "," get_raw_network  key "," get_raw_network  kind_of? "," get_ get_raw_network  "," get_raw_network  is_a? "," get_raw_network  summary opaqueNetworkId "," get_raw_network  summary "," get_raw_network  summary opaqueNetworkType "]}," Fog Compute Vsphere Real device_change":{"type":"method","name":"device_change","children":[],"call":["devices flatten ","devices << "," create_disk ","disks index ","disks map "," create_controller ","attributes [] "," create_interface ","nics index ","nics map "," create_cdrom ","cdroms index ","cdroms map "," get_storage_pod ","scsi_controllers each_with_index map ","scsi_controllers each_with_index "," get_storage_pod_from_volumes ","attributes []  index ","attributes []  map "]}," Fog Compute Vsphere Real vm_path_name":{"type":"method","name":"vm_path_name","children":[],"call":["attributes [] first datastore ","attributes [] first ","attributes [] ","attributes [] empty? "," get_storage_pod "," get_storage_pod_from_volumes ","attributes [] first attributes [] first datastore  "]}," Fog Compute Vsphere Real create_vm":{"type":"method","name":"create_vm","children":[],"call":[" raise ","vm config instanceUuid ","vm config ","vmFolder CreateVM_Task wait_for_completion ","vmFolder CreateVM_Task "," get_raw_vmfolder ","attributes [] "," get_raw_cluster resourcePool "," get_raw_cluster "," get_raw_resource_pool ","vm_cfg []= ","attributes key? "," extra_config "," device_change "," vm_path_name "," create_vm_on_datastore "," create_vm_on_storage_pod "," get_storage_pod "," boot_options ","attributes [] != "," get_raw_host "," get_storage_pod_from_volumes ","vmFolder CreateVM_Task wait_for_completion  config instanceUuid "," create_vm_on_datastore  config instanceUuid "," create_vm_on_storage_pod  config instanceUuid ","vmFolder CreateVM_Task wait_for_completion  config "," create_vm_on_datastore  config "," create_vm_on_storage_pod  config ","vmFolder CreateVM_Task wait_for_completion Folder CreateVM_Task wait_for_completion "," create_vm_on_datastore Folder CreateVM_Task wait_for_completion "," create_vm_on_storage_pod Folder CreateVM_Task wait_for_completion "," get_raw_vmfolder  CreateVM_Task wait_for_completion ","vmFolder CreateVM_Task wait_for_completion Folder CreateVM_Task "," create_vm_on_datastore Folder CreateVM_Task "," create_vm_on_storage_pod Folder CreateVM_Task "," get_raw_vmfolder  CreateVM_Task "," get_raw_vmFolder CreateVM_Task wait_for_completion folder "," get_raw_ create_vm_on_datastore folder "," get_raw_ create_vm_on_storage_pod folder "," get_raw_ get_raw_cluster resourcePool  "," get_raw_ get_raw_resource_pool  ","vmFolder CreateVM_Task wait_for_completion _cfg []= "," create_vm_on_datastore _cfg []= "," create_vm_on_storage_pod _cfg []= "," vmFolder CreateVM_Task wait_for_completion _path_name ","  create_vm_on_datastore _path_name ","  create_vm_on_storage_pod _path_name "," create_vmFolder CreateVM_Task wait_for_completion _on_datastore "," create_ create_vm_on_datastore _on_datastore "," create_ create_vm_on_storage_pod _on_datastore "," create_vmFolder CreateVM_Task wait_for_completion _on_storage_pod "," create_ create_vm_on_datastore _on_storage_pod "," create_ create_vm_on_storage_pod _on_storage_pod "," create_vm_on_storage_ get_storage_pod  "," create_vm_on_storage_ get_storage_pod_from_volumes  "," get_storage_ get_storage_pod  "," get_storage_ get_storage_pod_from_volumes  "," get_raw_ get_raw_host  "," get_storage_ get_storage_pod _from_volumes "," get_storage_ get_storage_pod_from_volumes _from_volumes "]}," Fog Compute Vsphere Real create_folder":{"type":"method","name":"create_folder","children":[],"call":[" raise ","(send\n  (block\n    (send\n      (send\n        (lvar :new_folder) :path) :reject)\n    (args\n      (arg :a))\n    (send\n      (send\n        (send\n          (lvar :a) :first) :class) :==\n      (str \"Folder\"))) :map) join sub ","(send\n  (block\n    (send\n      (send\n        (lvar :new_folder) :path) :reject)\n    (args\n      (arg :a))\n    (send\n      (send\n        (send\n          (lvar :a) :first) :class) :==\n      (str \"Folder\"))) :map) join ","a first name ","a first ","(send\n  (send\n    (lvar :new_folder) :path) :reject) map ","a first class == ","a first class ","new_folder path reject ","new_folder path ","parent_folder CreateFolder "," get_raw_vmfolder ","path nil? ","(send\n  (block\n    (send\n      (send\n        (lvar :parent_folder CreateFolder ) :path) :reject)\n    (args\n      (arg :a))\n    (send\n      (send\n        (send\n          (lvar :a) :first) :class) :==\n      (str \"Folder\"))) :map) join sub ","(send\n  (block\n    (send\n      (send\n        (lvar :parent_folder CreateFolder ) :path) :reject)\n    (args\n      (arg :a))\n    (send\n      (send\n        (send\n          (lvar :a) :first) :class) :==\n      (str \"Folder\"))) :map) join ","(send\n  (send\n    (lvar :parent_folder CreateFolder ) :path) :reject) map ","parent_folder CreateFolder  path reject ","parent_folder CreateFolder  path "," get_raw_vmfolder  CreateFolder "]}," Fog Compute Vsphere Mock cloudinit_to_customspec":{"type":"method","name":"cloudinit_to_customspec","children":[],"call":["custom_spec []= ","user_data [] ","user_data key? ","custom_spec [] []= ","custom_spec [] ","YAML  load ","Hash  new "," raise ","user_data nil? ","YAML  safe_load ","YAML  load  [] ","YAML  safe_load  [] ","YAML  load  key? ","YAML  safe_load  key? ","YAML  load  nil? ","YAML  safe_load  nil? "]}," Fog Compute Vsphere Real cloudinit_to_customspec":{"type":"method","name":"cloudinit_to_customspec","children":[],"call":["custom_spec []= ","user_data [] ","user_data key? ","custom_spec [] []= ","custom_spec [] ","YAML  load ","Hash  new "," raise ","user_data nil? ","user_data key? ! ","YAML  safe_load ","YAML  load  [] ","YAML  safe_load  [] ","YAML  load  key? ","YAML  safe_load  key? ","YAML  load  nil? ","YAML  safe_load  nil? ","YAML  load  key? ! ","YAML  safe_load  key? ! "]}," Fog Compute Vsphere Volumes server=":{"type":"method","name":"server=","children":[],"call":["new_server id "]}," Fog Compute Vsphere Volumes server":{"type":"method","name":"server","children":[],"call":[" service servers get "," server_id "," service servers "," service "," server_id nil? "]}," Fog Compute Vsphere Volumes new":{"type":"method","name":"new","children":[],"call":["(pair\n  (sym :server_id)\n  (send nil :server_id)) merge! "," server_id "," first datastore "," first "," any? ","attributes key? ! ","attributes key? "," first  first datastore  "]}," Fog Compute Vsphere Volumes get":{"type":"method","name":"get","children":[],"call":[" new "," service get_volume "," service "]}," Fog Compute Vsphere Volumes all":{"type":"method","name":"all","children":[],"call":["volume server_id= "," server id "," server "," each "," raise "," load "," service list_template_volumes "," service "," service list_vm_volumes "," requires ","volume server= "]}," Fog Compute Vsphere Volume defaults":{"type":"method","name":"defaults","children":[],"call":[]}," Fog Compute Vsphere Volume server":{"type":"method","name":"server","children":[],"call":[" service servers get "," server_id "," service servers "," service "," requires "]}," Fog Compute Vsphere Volume save":{"type":"method","name":"save","children":[],"call":[" filename= ","created filename "," key= ","created key "," id= ","created id ","volume unit_number == "," unit_number ","volume unit_number "," server volumes all find "," server volumes all "," server volumes "," server ","data [] == ","data [] "," service add_vm_volume "," service "," raise ","volume id != "," id ","volume id "," server volumes any? "," unit_number= ","max_unit_number + ","used_unit_numbers exclude? ","max_unit_number times to_a find ","max_unit_number times to_a ","max_unit_number times ","max_unit_number > "," server volumes size ","used_unit_numbers max "," server volumes map "," unit_number nil? "," requires ","Fog Errors Error  new "," persisted? "," unit_number >= ","volume unit_number - ","volume unit_number < "," controller_key= ","created controller_key "," set_unit_number ","created controllerKey "," service add_vm_volume  [] == "," service add_vm_volume  [] ","used_unit_numbers max  + ","used_unit_numbers max  times to_a find ","used_unit_numbers max  times to_a ","used_unit_numbers max  times ","used_unit_numbers max  > "]}," Fog Compute Vsphere Volume destroy":{"type":"method","name":"destroy","children":[],"call":[" service destroy_vm_volume "," service "," requires "]}," Fog Compute Vsphere Volume to_s":{"type":"method","name":"to_s","children":[],"call":[" name "]}," Fog Compute Vsphere Volume size_gb=":{"type":"method","name":"size_gb=","children":[],"call":[" attributes []= ","s to_i * ","s to_i "," attributes "]}," Fog Compute Vsphere Volume size_gb":{"type":"method","name":"size_gb","children":[],"call":[" attributes [] to_i / "," attributes [] to_i "," attributes [] "," attributes "]}," Fog Compute Vsphere Volume initialize":{"type":"method","name":"initialize","children":[],"call":[" defaults merge "," defaults "," server_id= ","attributes delete "]}," Fog Compute Vsphere Templates get":{"type":"method","name":"get","children":[],"call":[" new "," service get_template "," service "]}," Fog Compute Vsphere Templates all":{"type":"method","name":"all","children":[],"call":[" load "," service list_templates "," service "]}," Fog Compute Vsphere Snapshots get":{"type":"method","name":"get","children":[],"call":["snapshot get_child "," all find "," all "," all each ","snapshot get_child  get_child "]}," Fog Compute Vsphere Snapshots all":{"type":"method","name":"all","children":[],"call":[" load "," service list_vm_snapshots "," server_id "," service "," requires "," service list_child_snapshots "," parent_snapshot "]}," Fog Compute Vsphere Snapshot get_child":{"type":"method","name":"get_child","children":[],"call":[" child_snapshots get "," child_snapshots "," ref == "," ref "]}," Fog Compute Vsphere Snapshot child_snapshots":{"type":"method","name":"child_snapshots","children":[],"call":[" service snapshots ","(pair\n  (sym :server_id)\n  (send nil :server_id)) update "," server_id "," service "]}," Fog Compute Vsphere Servertypes get":{"type":"method","name":"get","children":[],"call":[" new "," service get_server_type "," datacenter "," service "," requires "]}," Fog Compute Vsphere Servertypes all":{"type":"method","name":"all","children":[],"call":[" load "," service list_server_types ","filters merge "," datacenter "," service "]}," Fog Compute Vsphere Servertype defaults":{"type":"method","name":"defaults","children":[],"call":[]}," Fog Compute Vsphere Servertype interfacetypes":{"type":"method","name":"interfacetypes","children":[],"call":[" service interfacetypes ","(pair\n  (sym :datacenter)\n  (send nil :datacenter)) merge "," datacenter "," service "," attributes [] "," attributes "]}," Fog Compute Vsphere Servertype to_s":{"type":"method","name":"to_s","children":[],"call":[" id "]}," Fog Compute Vsphere Servertype initialize":{"type":"method","name":"initialize","children":[],"call":[" defaults merge "," defaults "]}," Fog Compute Vsphere Servers get":{"type":"method","name":"get","children":[],"call":[" new "," service get_virtual_machine "," service "," recursive "," folder "]}," Fog Compute Vsphere Servers all":{"type":"method","name":"all","children":[],"call":[" load "," service list_virtual_machines "," service ","(pair\n  (sym :datacenter)\n  (send nil :datacenter)) merge "," folder "," resource_pool "," network "," cluster "," datacenter "," recursive "," (pair\n  (sym :datacenter)\n  (send nil :datacenter)) merge older "]}," Fog Compute Vsphere Server initialize_scsi_controller":{"type":"method","name":"initialize_scsi_controller","children":[],"call":["Fog Compute Vsphere SCSIController  new "," attributes [] "," attributes "," attributes [] is_a? "]}," Fog Compute Vsphere Server initialize_customvalues":{"type":"method","name":"initialize_customvalues","children":[],"call":[" service customvalue new "," service customvalue "," service ","cfield is_a? "," attributes [] map "," attributes [] "," attributes "," attributes [] is_a? "]}," Fog Compute Vsphere Server initialize_volumes":{"type":"method","name":"initialize_volumes","children":[],"call":[" service volumes new "," service volumes "," service ","vol is_a? "," attributes [] map! "," attributes [] "," attributes "," attributes [] is_a? ","(pair\n  (sym :server)\n  (self)) merge ","vol server= "]}," Fog Compute Vsphere Server initialize_interfaces":{"type":"method","name":"initialize_interfaces","children":[],"call":[" service interfaces new "," service interfaces "," service ","nic is_a? "," attributes [] map! "," attributes [] "," attributes "," attributes [] is_a? "]}," Fog Compute Vsphere Server defaults":{"type":"method","name":"defaults","children":[],"call":[]}," Fog Compute Vsphere Server relative_path":{"type":"method","name":"relative_path","children":[],"call":["(send\n  (block\n    (send\n      (send\n        (send nil :path) :split\n        (str \"/\")) :reject)\n    (args\n      (arg :e))\n    (send\n      (lvar :e) :empty?)) :-\n  (array\n    (str \"Datacenters\")\n    (send nil :datacenter)\n    (str \"vm\"))) join ","(send\n  (send\n    (send nil :path) :split\n    (str \"/\")) :reject) - "," datacenter ","e empty? "," path split reject "," path split "," path "," requires ","(send\n  (send\n    (send\n      (send nil :path) :split\n      (str \"/\")) :reject\n    (block-pass\n      (sym :empty?))) :-\n  (array\n    (str \"Datacenters\")\n    (send nil :datacenter)\n    (str \"vm\"))) join "," path split reject - "]}," Fog Compute Vsphere Server reload":{"type":"method","name":"reload","children":[],"call":[" attributes delete "," attributes ","(sym :interfaces) each "]}," Fog Compute Vsphere Server new?":{"type":"method","name":"new?","children":[],"call":[" id nil? "," id "]}," Fog Compute Vsphere Server save":{"type":"method","name":"save","children":[],"call":[" reload "," id= "," service create_vm "," attributes "," service "," raise "," persisted? "," requires "," vm_reconfig_volumes "," attribute_changed? "," vm_reconfig_memory "," vm_reconfig_cpus "," vm_rename "," service update_vm "]}," Fog Compute Vsphere Server folder":{"type":"method","name":"folder","children":[],"call":[" service folders get "," path "," service folders "," datacenter "," service "," attributes [] "," attributes "]}," Fog Compute Vsphere Server scsi_controller":{"type":"method","name":"scsi_controller","children":[],"call":[" service get_vm_first_scsi_controller "," id "," service "," attributes [] "," attributes "," scsi_controllers first "," scsi_controllers "]}," Fog Compute Vsphere Server customvalues":{"type":"method","name":"customvalues","children":[],"call":[" service customvalues "," service "," id nil? "," id "," attributes [] "," attributes "]}," Fog Compute Vsphere Server guest_processes":{"type":"method","name":"guest_processes","children":[],"call":[" service list_processes "," id "," service "," fail "," tools_running? "," raise "]}," Fog Compute Vsphere Server revert_snapshot":{"type":"method","name":"revert_snapshot","children":[],"call":[" fail "," service revert_to_snapshot "," find_snapshot "," service "," raise "]}," Fog Compute Vsphere Server find_snapshot":{"type":"method","name":"find_snapshot","children":[],"call":[" snapshots get "," snapshots "]}," Fog Compute Vsphere Server snapshots":{"type":"method","name":"snapshots","children":[],"call":[" service snapshots all "," service snapshots "," id "," service "]}," Fog Compute Vsphere Server volumes":{"type":"method","name":"volumes","children":[],"call":[" service volumes "," id "," service "," id nil? "," attributes [] "," attributes "]}," Fog Compute Vsphere Server destroy_interface":{"type":"method","name":"destroy_interface","children":[],"call":[" interfaces get destroy "," interfaces get ","attrs [] "," interfaces ","Fog Logger  deprecation "]}," Fog Compute Vsphere Server update_interface":{"type":"method","name":"update_interface","children":[],"call":[" service update_vm_interface "," id "," service "," ready? ! "," ready? "," wait_for "," interface_ready? ","attrs []= "," datacenter ","attrs key? "]}," Fog Compute Vsphere Server add_interface":{"type":"method","name":"add_interface","children":[],"call":[" interfaces create "," interfaces ","Fog Logger  deprecation "]}," Fog Compute Vsphere Server interface_ready?":{"type":"method","name":"interface_ready?","children":[],"call":["attrs is_a? ","attrs [] "]}," Fog Compute Vsphere Server interfaces":{"type":"method","name":"interfaces","children":[],"call":[" service interfaces "," id "," service "," id nil? "," attributes [] "," attributes "]}," Fog Compute Vsphere Server mac":{"type":"method","name":"mac","children":[],"call":[" interfaces first mac "," interfaces first "," interfaces "," interfaces empty? "]}," Fog Compute Vsphere Server sockets":{"type":"method","name":"sockets","children":[],"call":[" cpus / "," corespersocket "," cpus "]}," Fog Compute Vsphere Server memory":{"type":"method","name":"memory","children":[],"call":[" memory_mb * * "," memory_mb * "," memory_mb "]}," Fog Compute Vsphere Server vnc":{"type":"method","name":"vnc","children":[],"call":[" service vm_get_vnc "," instance_uuid "," service "," requires "]}," Fog Compute Vsphere Server config_vnc":{"type":"method","name":"config_vnc","children":[],"call":[" service vm_config_vnc ","options merge "," instance_uuid "," service "," requires "]}," Fog Compute Vsphere Server tools_running?":{"type":"method","name":"tools_running?","children":[],"call":["(str \"toolsOk\") include? "," tools_state "]}," Fog Compute Vsphere Server tools_installed?":{"type":"method","name":"tools_installed?","children":[],"call":[" tools_state != "," tools_state "," tools_version != "," tools_version ","(or\n  (send\n    (send nil :tools_state) :==\n    (str \"toolsNotInstalled\"))\n  (send\n    (send nil :tools_version) :==\n    (str \"guestToolsNotInstalled\"))) ! "," tools_version == "," tools_state == "]}," Fog Compute Vsphere Server ready?":{"type":"method","name":"ready?","children":[],"call":[" power_state == "," power_state "]}," Fog Compute Vsphere Server take_snapshot":{"type":"method","name":"take_snapshot","children":[],"call":[" service vm_take_snapshot ","options merge "," instance_uuid "," service "," requires "]}," Fog Compute Vsphere Server clone":{"type":"method","name":"clone","children":[],"call":["new_vm collection= "," collection "," class new ","clone_results [] merge "," service ","clone_results [] "," class "," service vm_clone ","req_options []= "," datacenter "," name "," relative_path ","hsh []= ","k to_s ","options reduce "," requires "," datacenter to_s ","options each_with_object "," class new  collection= "," service vm_clone  [] merge "," service vm_clone  [] "]}," Fog Compute Vsphere Server migrate":{"type":"method","name":"migrate","children":[],"call":[" service vm_migrate ","options [] "," instance_uuid "," service "," requires ","(pair\n  (sym :priority)\n  (str \"defaultPriority\")) merge ","req_options []= "," datacenter "," cluster ","req_options [] ","hsh []= ","k to_s ","options reduce "," datacenter to_s ","options each_with_object ","(pair\n  (sym :priority)\n  (str \"defaultPriority\")) merge  [] ","req_(pair\n  (sym :priority)\n  (str \"defaultPriority\")) merge  []= ","req_(pair\n  (sym :priority)\n  (str \"defaultPriority\")) merge  [] ","(pair\n  (sym :priority)\n  (str \"defaultPriority\")) merge  reduce ","(pair\n  (sym :priority)\n  (str \"defaultPriority\")) merge  each_with_object "]}," Fog Compute Vsphere Server destroy":{"type":"method","name":"destroy","children":[],"call":[" service vm_destroy "," instance_uuid "," service "," ready? ! "," ready? "," wait_for "," stop "," requires "]}," Fog Compute Vsphere Server reboot":{"type":"method","name":"reboot","children":[],"call":[" service vm_reboot ","options [] "," instance_uuid "," service "," requires ","(pair\n  (sym :force)\n  (false)) merge ","(pair\n  (sym :force)\n  (false)) merge  [] "]}," Fog Compute Vsphere Server stop":{"type":"method","name":"stop","children":[],"call":[" service vm_power_off ","options [] "," instance_uuid "," service "," requires ","(pair\n  (sym :force)\n  (or\n    (send\n      (send nil :tools_installed?) :!)\n    (send\n      (send nil :tools_running?) :!))) merge "," tools_running? ! "," tools_running? "," tools_installed? ! "," tools_installed? "," power_state == "," power_state ","(pair\n  (sym :force)\n  (or\n    (send\n      (send nil :tools_installed?) :!)\n    (send\n      (send nil :tools_running?) :!))) merge  [] "]}," Fog Compute Vsphere Server start":{"type":"method","name":"start","children":[],"call":[" service vm_power_on "," instance_uuid "," service "," requires "," ready? "]}," Fog Compute Vsphere Server vm_reconfig_hardware":{"type":"method","name":"vm_reconfig_hardware","children":[],"call":[" service vm_reconfig_hardware "," instance_uuid "," service "," requires "]}," Fog Compute Vsphere Server vm_reconfig_cpus":{"type":"method","name":"vm_reconfig_cpus","children":[],"call":[" service vm_reconfig_cpus "," corespersocket "," cpus "," instance_uuid "," service "," requires "]}," Fog Compute Vsphere Server vm_reconfig_memory":{"type":"method","name":"vm_reconfig_memory","children":[],"call":[" service vm_reconfig_memory "," memory_mb "," instance_uuid "," service "," requires "]}," Fog Compute Vsphere Server initialize":{"type":"method","name":"initialize","children":[],"call":[" initialize_scsi_controller "," initialize_customvalues "," initialize_volumes "," initialize_interfaces "," id "," instance_uuid "," defaults merge "," defaults "," initialize_scsi_controllers "]}," Fog Compute Vsphere SCSIController to_s":{"type":"method","name":"to_s","children":[],"call":[" unit_number "," shared_bus "," key "," type "]}," Fog Compute Vsphere ResourcePools get":{"type":"method","name":"get","children":[],"call":[" new "," service get_resource_pool "," datacenter "," cluster "," service "," requires "]}," Fog Compute Vsphere ResourcePools all":{"type":"method","name":"all","children":[],"call":[" load "," service list_resource_pools ","filters merge "," cluster "," datacenter "," service "]}," Fog Compute Vsphere ResourcePool to_s":{"type":"method","name":"to_s","children":[],"call":[" name "]}," Fog Compute Vsphere Networks get":{"type":"method","name":"get","children":[],"call":[" new "," service get_network "," datacenter "," service "," requires "]}," Fog Compute Vsphere Networks all":{"type":"method","name":"all","children":[],"call":[" load "," service list_networks "," service ","(pair\n  (sym :datacenter)\n  (send nil :datacenter)) merge "," datacenter "," cluster "]}," Fog Compute Vsphere Network to_s":{"type":"method","name":"to_s","children":[],"call":[" name "]}," Fog Compute Vsphere Interfacetypes get":{"type":"method","name":"get","children":[],"call":[" new "," service get_interface_type "," datacenter "," servertype "," service "," requires "]}," Fog Compute Vsphere Interfacetypes all":{"type":"method","name":"all","children":[],"call":[" raise "," load "," service list_interface_types ","filters merge "," servertype id "," servertype "," datacenter "," service "," requires "]}," Fog Compute Vsphere Interfacetype to_s":{"type":"method","name":"to_s","children":[],"call":[" name "]}," Fog Compute Vsphere Interfacetype initialize":{"type":"method","name":"initialize","children":[],"call":[]}," Fog Compute Vsphere Interfaces server=":{"type":"method","name":"server=","children":[],"call":["new_server id "]}," Fog Compute Vsphere Interfaces server":{"type":"method","name":"server","children":[],"call":[" service servers get "," server_id "," service servers "," service "," server_id nil? "]}," Fog Compute Vsphere Interfaces new":{"type":"method","name":"new","children":[],"call":["(pair\n  (sym :server_id)\n  (send nil :server_id)) merge "," server_id "]}," Fog Compute Vsphere Interfaces get":{"type":"method","name":"get","children":[],"call":["Fog Compute Vsphere Interface  new ","interface merge "," service "," server id "," server "," raise "," service get_template_interfaces "," service get_vm_interface "," requires "," server datacenter "," service get_template_interfaces  merge "," service get_vm_interface  merge "," service get_template_ service get_template_interfaces s "," service get_template_ service get_vm_interface s "," service get_vm_ service get_template_interfaces  "," service get_vm_ service get_vm_interface  "]}," Fog Compute Vsphere Interfaces all":{"type":"method","name":"all","children":[],"call":["interface server_id= "," server id "," server "," each "," raise "," load "," service list_template_interfaces "," service "," service list_vm_interfaces "," requires "]}," Fog Compute Vsphere Interface defaults":{"type":"method","name":"defaults","children":[],"call":["Fog Vsphere  class_from_string ","Fog  credentials [] ","Fog  credentials "]}," Fog Compute Vsphere Interface save":{"type":"method","name":"save","children":[],"call":[" virtualswitch= ","created virtualswitch "," key= ","created key "," summary= ","created summary "," status= ","created status "," name= ","created name "," mac= ","created mac "," server interfaces all sort_by last "," server interfaces all sort_by "," server interfaces all "," server interfaces "," server ","data [] == ","data [] "," service add_vm_interface "," attributes "," server_id "," service ","SAVE_MUTEX  synchronize "," requires "," raise ","Fog Errors Error  new "," persisted? "," attributes []= "," server datacenter "," attributes key? "," server interfaces all sort_by last  virtualswitch "," server interfaces all sort_by last  key "," server interfaces all sort_by last  summary "," server interfaces all sort_by last  status "," server interfaces all sort_by last  name "," server interfaces all sort_by last  mac "," service add_vm_interface  [] == "," service add_vm_interface  [] "," server  service add_vm_interface center "]}," Fog Compute Vsphere Interface destroy":{"type":"method","name":"destroy","children":[],"call":[" service destroy_vm_interface "," type "," key "," server_id "," service "," requires "," server datacenter "," server "]}," Fog Compute Vsphere Interface server":{"type":"method","name":"server","children":[],"call":[" service servers get "," server_id "," service servers "," service "," requires "]}," Fog Compute Vsphere Interface to_s":{"type":"method","name":"to_s","children":[],"call":[" name "]}," Fog Compute Vsphere Interface initialize":{"type":"method","name":"initialize","children":[],"call":[" defaults merge "," defaults ","attributes []= ","Fog Vsphere  class_from_string ","attributes [] ","attributes [] is_a? ","attributes key? "," server_id= ","attributes delete "]}," Fog Compute Vsphere Folders get":{"type":"method","name":"get","children":[],"call":[" new "," service get_folder "," type "," datacenter "," service "," requires "]}," Fog Compute Vsphere Folders all":{"type":"method","name":"all","children":[],"call":[" load "," service list_folders ","filters merge "," path "," type "," datacenter "," service "," requires "]}," Fog Compute Vsphere Folder to_s":{"type":"method","name":"to_s","children":[],"call":[" name "]}," Fog Compute Vsphere Folder vms":{"type":"method","name":"vms","children":[],"call":[" service servers "," datacenter "," path "," service "," type to_s != "," type to_s "," type ","options [] "]}," Fog Compute Vsphere Datastores get":{"type":"method","name":"get","children":[],"call":[" new "," service get_datastore "," datacenter "," service "," requires "]}," Fog Compute Vsphere Datastores all":{"type":"method","name":"all","children":[],"call":[" load "," service list_datastores ","filters merge "," datacenter "," service "," cluster "]}," Fog Compute Vsphere Datastore to_s":{"type":"method","name":"to_s","children":[],"call":[" name "]}," Fog Compute Vsphere Datacenters get":{"type":"method","name":"get","children":[],"call":[" new "," service get_datacenter "," service "]}," Fog Compute Vsphere Datacenters all":{"type":"method","name":"all","children":[],"call":[" load "," service list_datacenters "," service "]}," Fog Compute Vsphere Datacenter to_s":{"type":"method","name":"to_s","children":[],"call":[" name "]}," Fog Compute Vsphere Datacenter customfields":{"type":"method","name":"customfields","children":[],"call":[" service customfields ","(pair\n  (sym :datacenter)\n  (send\n    (send nil :path) :join\n    (str \"/\"))) merge "," path join "," path "," service "]}," Fog Compute Vsphere Datacenter servertypes":{"type":"method","name":"servertypes","children":[],"call":[" service servertypes ","(pair\n  (sym :datacenter)\n  (send nil :name)) merge "," name "," service "]}," Fog Compute Vsphere Datacenter virtual_machines":{"type":"method","name":"virtual_machines","children":[],"call":[" service servers ","(pair\n  (sym :datacenter)\n  (send\n    (send nil :path) :join\n    (str \"/\"))) merge "," path join "," path "," service "]}," Fog Compute Vsphere Datacenter vm_folders":{"type":"method","name":"vm_folders","children":[],"call":[" service folders ","(pair\n  (sym :datacenter)\n  (send\n    (send nil :path) :join\n    (str \"/\"))) merge "," path join "," path "," service "]}," Fog Compute Vsphere Datacenter datastores":{"type":"method","name":"datastores","children":[],"call":[" service datastores ","(pair\n  (sym :datacenter)\n  (send\n    (send nil :path) :join\n    (str \"/\"))) merge "," path join "," path "," service "]}," Fog Compute Vsphere Datacenter networks":{"type":"method","name":"networks","children":[],"call":[" service networks ","(pair\n  (sym :datacenter)\n  (send\n    (send nil :path) :join\n    (str \"/\"))) merge "," path join "," path "," service "]}," Fog Compute Vsphere Datacenter clusters":{"type":"method","name":"clusters","children":[],"call":[" service clusters ","(pair\n  (sym :datacenter)\n  (send\n    (send nil :path) :join\n    (str \"/\"))) merge "," path join "," path "," service "]}," Fog Compute Vsphere Customvalues get":{"type":"method","name":"get","children":[],"call":["cv key == ","cv key ","(send nil :vm) find "," raise "," load "," service list_vm_customvalues "," vm id "," vm "," service "," requires "]}," Fog Compute Vsphere Customvalues all":{"type":"method","name":"all","children":[],"call":[" raise "," load "," service list_vm_customvalues "," vm id "," vm "," service "," requires "]}," Fog Compute Vsphere Customvalue to_s":{"type":"method","name":"to_s","children":[],"call":[" value "]}," Fog Compute Vsphere Customfields get":{"type":"method","name":"get","children":[],"call":["cv key == ","key to_i ","key is_a? ","cv key "," load find "," load "," service list_customfields "," service "]}," Fog Compute Vsphere Customfields all":{"type":"method","name":"all","children":[],"call":[" load "," service list_customfields "," service "]}," Fog Compute Vsphere Customfield to_s":{"type":"method","name":"to_s","children":[],"call":[" name "]}," Fog Compute Vsphere Clusters get":{"type":"method","name":"get","children":[],"call":[" new "," service get_cluster "," datacenter "," service "," requires "]}," Fog Compute Vsphere Clusters all":{"type":"method","name":"all","children":[],"call":[" load "," service list_clusters ","filters merge "," datacenter "," service "," requires "]}," Fog Compute Vsphere Cluster to_s":{"type":"method","name":"to_s","children":[],"call":[" name "]}," Fog Compute Vsphere Cluster resource_pools":{"type":"method","name":"resource_pools","children":[],"call":[" service resource_pools ","(pair\n  (sym :service)\n  (send nil :service)) merge "," datacenter "," name "," service "," id nil? "," id "," attributes [] "," attributes "," full_path "]}," Fog Compute Vsphere Real validate_ssl_connection":{"type":"method","name":"validate_ssl_connection","children":[],"call":[" raise ","pubkey_hash != ","Digest SHA2  hexdigest ","pubkey to_s ","@connection http peer_cert public_key ","@connection http peer_cert ","@connection http ","Digest SHA2  hexdigest  != ","@connection http peer_cert public_key _hash != ","@connection http peer_cert public_key  to_s "]}," Fog Compute Vsphere Real authenticate":{"type":"method","name":"authenticate","children":[],"call":[" raise ","e message ","@connection serviceContent sessionManager Login ","@connection serviceContent sessionManager ","@connection serviceContent "]}," Fog Compute Vsphere Real connect":{"type":"method","name":"connect","children":[],"call":[" validate_ssl_connection "," raise ","RbVmomi VIM  new "," loop ","xml tag! ","o to_s ","attrs []= "," type == "," type "]}," Fog Compute Vsphere Real negotiate_revision":{"type":"method","name":"negotiate_revision","children":[],"call":["@connection rev ","@connection serviceContent about apiType == ","@connection serviceContent about apiType ","@connection serviceContent about ","@connection serviceContent ","@connection rev= ","(lvar :rev) min ","ENV  [] ","@connection serviceContent about apiVersion ","revision ! ","(lvar :rev) max ","@connection @connection serviceContent about apiVersion  ","@connection @connection serviceContent about apiVersion = ","(lvar :@connection serviceContent about apiVersion ) min ","@connection serviceContent about apiVersion ision ! ","(lvar :@connection serviceContent about apiVersion ) max "]}," Fog Compute Vsphere Real reload":{"type":"method","name":"reload","children":[],"call":[" authenticate "," negotiate ","@vsphere_is_vcenter nil? "," connect "]}," Fog Compute Vsphere Real initialize":{"type":"method","name":"initialize","children":[],"call":[" authenticate "," negotiate_revision ","options [] "," connect "," require "]}," Fog Compute Vsphere Mock reset_data":{"type":"method","name":"reset_data","children":[],"call":[" class data delete "," class data "," class "]}," Fog Compute Vsphere Mock data":{"type":"method","name":"data","children":[],"call":[" class data [] "," class data "," class "]}," Fog Compute Vsphere Mock initialize":{"type":"method","name":"initialize","children":[],"call":["options [] "," require "]}," Fog Compute Vsphere Shared is_uuid?":{"type":"method","name":"is_uuid?","children":[],"call":["(send\n  (lvar :id) :=~\n  (regexp\n    (str \"[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}\")\n    (regopt))) nil? ! ","(send\n  (lvar :id) :=~\n  (regexp\n    (str \"[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}\")\n    (regopt))) nil? ","id =~ "]}," Fog Compute Vsphere Shared managed_obj_id":{"type":"method","name":"managed_obj_id","children":[],"call":["obj to_s match [] ","obj to_s match ","obj to_s "]}," Fog Compute Vsphere Shared parent_attribute":{"type":"method","name":"parent_attribute","children":[],"call":["(send\n  (lvar :path) :select) flatten ","x [] is_a? ","x [] ","path select "," raise "]}," Fog Compute Vsphere Shared props_to_attr_hash":{"type":"method","name":"props_to_attr_hash","children":[],"call":["attrs []= ","/ + ","attrs [] path map join ","attrs [] path map ","attrs [] path ","attrs [] ","vm_mob_ref macs ","Proc  new ","(or\n  (send\n    (lvar :vm_mob_ref) :resourcePool)\n  (send\n    (lvar :host) :resourcePool)) name ","host resourcePool ","vm_mob_ref resourcePool ","host name "," parent_attribute [] "," parent_attribute ","host path ","attrs [] kind_of? ","vm_mob_ref _ref ","Hash  [] tap ","Hash  [] ","props [] ","k to_s ","ATTR_TO_PROP  map "," proc ","attrs [] is_a? ","(or\n  (send\n    (lvar :vm_mob_ref) :resourcePool)\n  (send\n    (lvar :attrs [] ) :resourcePool)) name ","attrs []  resourcePool ","attrs []  name ","attrs []  path "]}," Fog Compute Vsphere Shared convert_vm_mob_ref_to_attr_hash":{"type":"method","name":"convert_vm_mob_ref_to_attr_hash","children":[],"call":[" props_to_attr_hash ","vm_mob_ref collect! ","ATTR_TO_PROP  values uniq ","ATTR_TO_PROP  values "," vm_mob_ref collect! _to_attr_hash "]}," Fog Compute Vsphere Shared convert_vm_view_to_attr_hash":{"type":"method","name":"convert_vm_view_to_attr_hash","children":[],"call":[" props_to_attr_hash ","vms map ","@connection serviceContent propertyCollector collectMultiple ","ATTR_TO_PROP  values uniq ","ATTR_TO_PROP  values ","@connection serviceContent propertyCollector ","@connection serviceContent "," connection serviceContent propertyCollector collectMultiple "," connection serviceContent propertyCollector "," connection serviceContent "," connection ","@connection serviceContent propertyCollector collectMultiple  map "," connection serviceContent propertyCollector collectMultiple  map "]}," Vsphere services":{"type":"method","name":"services","children":[],"call":["Fog Vsphere  services "]}," Vsphere []":{"type":"method","name":"[]","children":[],"call":["@@connections [] ","hash []= "," raise ","key inspect ","Fog Compute  new ","Hash  new "]}," Vsphere class_for":{"type":"method","name":"class_for","children":[],"call":[" raise "]}," Fog Compute Vsphere Mock vm_reconfig_cdrom":{"type":"method","name":"vm_reconfig_cdrom","children":[],"call":[" vm_reconfig_hardware ","options [] ","cdrom_obj [] "," list_vm_cdroms first "," list_vm_cdroms "," raise ","options key? ","options has_key? "," list_vm_cdroms first  [] "]}," Fog Compute Vsphere Real vm_reconfig_cdrom":{"type":"method","name":"vm_reconfig_cdrom","children":[],"call":[" vm_reconfig_hardware ","options [] ","RbVmomi VIM  VirtualCdrom ","RbVmomi VIM  VirtualDeviceConnectInfo ","cdrom_obj controllerKey ","cdrom_obj key "," get_vm_ref config hardware device grep first "," get_vm_ref config hardware device grep "," get_vm_ref config hardware device "," get_vm_ref config hardware "," get_vm_ref config "," get_vm_ref ","RbVmomi VIM  VirtualCdromRemoteAtapiBackingInfo ","RbVmomi VIM  VirtualCdromIsoBackingInfo "," raise ","options key? ","options has_key? "," get_vm_ref config hardware device grep first  controllerKey "," get_vm_ref config hardware device grep first  key "]}," Fog Compute Vsphere Real upload_iso":{"type":"method","name":"upload_iso","children":[],"call":["datastore upload ","options [] ","options [] + + ","options [] + ","@connection serviceContent fileManager MakeDirectory ","@connection serviceContent fileManager ","@connection serviceContent ","datastore exists? ","File  basename "," get_datacenter "," get_raw_datastore "," upload_iso_check_options "," get_raw_datacenter "," connection serviceContent fileManager MakeDirectory "," connection serviceContent fileManager "," connection serviceContent "," connection "," get_raw_datastore  upload "," upload_iso_check_options  [] "," upload_iso_check_options  [] + + "," upload_iso_check_options  [] + "," get_raw_datastore  exists? "," get_ get_datacenter  "," get_ get_raw_datacenter  "," get_raw_ get_raw_datastore  "," upload_iso_check_ upload_iso_check_options  "," get_raw_ get_datacenter  "," get_raw_ get_raw_datacenter  "]}," Fog Compute Vsphere Real upload_iso_check_options":{"type":"method","name":"upload_iso_check_options","children":[],"call":[" raise ","options [] "," get_raw_datastore "," get_datacenter ","required_options join ","options key? ","required_options each ","default_options merge ","default_options merge  [] ","required_default_options merge  join ","default_options merge  key? ","required_default_options merge  each ","default_default_options merge  merge "]}," Fog Compute Vsphere Mock update_vm_interface":{"type":"method","name":"update_vm_interface","children":[],"call":["options [] type= ","options [] ","options [] network= "]}," Fog Compute Vsphere Mock destroy_vm_cdrom":{"type":"method","name":"destroy_vm_cdrom","children":[],"call":[" vm_reconfig_hardware "," create_cdrom ","cdrom unit_number ","cdrom server instance_uuid ","cdrom server "]}," Fog Compute Vsphere Mock add_vm_cdrom":{"type":"method","name":"add_vm_cdrom","children":[],"call":[" vm_reconfig_hardware "," create_cdrom ","cdrom unit_number ","cdrom server instance_uuid ","cdrom server "]}," Fog Compute Vsphere Real destroy_vm_cdrom":{"type":"method","name":"destroy_vm_cdrom","children":[],"call":[" vm_reconfig_hardware "," create_cdrom ","cdrom unit_number ","cdrom server instance_uuid ","cdrom server "]}," Fog Compute Vsphere Real add_vm_cdrom":{"type":"method","name":"add_vm_cdrom","children":[],"call":[" vm_reconfig_hardware "," create_cdrom ","cdrom unit_number ","cdrom server instance_uuid ","cdrom server "]}," Fog Compute Vsphere Real raw_to_hash":{"type":"method","name":"raw_to_hash","children":[],"call":["nic key ","nic class ","nic deviceInfo summary ","nic deviceInfo ","nic connectable status ","nic connectable ","nic backing port portgroupKey ","nic backing port ","nic backing ","nic backing network name ","nic backing network ","nic backing respond_to? ","nic macAddress ","nic deviceInfo label ","nic connectable connected ","nic backing nic backing port portgroupKey  name ","nic backing nic backing network name  name ","nic backing nic backing port portgroupKey  ","nic backing nic backing network name  "]}," Fog Compute Vsphere Real get_raw_interface":{"type":"method","name":"get_raw_interface","children":[],"call":["nic deviceInfo label == ","options [] ","nic deviceInfo label ","nic deviceInfo ","options key? ","nic macAddress == ","nic macAddress ","nic key == ","options [] to_i ","nic key "," get_raw_interfaces find "," get_raw_interfaces "," raise ","options is_a? "]}," Fog Compute Vsphere Real get_raw_interfaces":{"type":"method","name":"get_raw_interfaces","children":[],"call":[" get_vm_ref config hardware device grep "," get_vm_ref config hardware device "," get_vm_ref config hardware "," get_vm_ref config "," get_vm_ref "]}," Fog Compute Vsphere Mock list_vm_cdroms":{"type":"method","name":"list_vm_cdroms","children":[],"call":["h merge "," data [] [] [] map "," data [] [] [] "," data [] [] "," data [] "," data "," data [] [] key? "," raise "," data [] key? "]}," Fog Compute Vsphere Real list_vm_cdroms":{"type":"method","name":"list_vm_cdroms","children":[],"call":["cdrom connectable connected ","cdrom connectable ","cdrom connectable allowGuestControl ","cdrom connectable startConnected ","cdrom unitNumber ","cdrom controllerKey ","cdrom key ","cdrom deviceInfo label ","cdrom deviceInfo ","cdrom backing fileName ","cdrom backing ","(send\n  (send\n    (send\n      (send\n        (send nil :get_vm_ref\n          (lvar :vm_id)) :config) :hardware) :device) :select) map ","hw class == ","hw class "," get_vm_ref config hardware device select "," get_vm_ref config hardware device "," get_vm_ref config hardware "," get_vm_ref config "," get_vm_ref "]}," Fog Compute Vsphere Mock list_storage_pods":{"type":"method","name":"list_storage_pods","children":[],"call":[" data [] "," data ","h [] == ","filters [] ","h [] "," data [] select ","filters key? "]}," Fog Compute Vsphere Real storage_pod_attributes":{"type":"method","name":"storage_pod_attributes","children":[],"call":["storage_pod summary capacity ","storage_pod summary ","storage_pod summary freeSpace ","storage_pod name "," managed_obj_id "]}," Fog Compute Vsphere Real raw_storage_pods":{"type":"method","name":"raw_storage_pods","children":[],"call":["@connection serviceContent viewManager CreateContainerView view ","@connection serviceContent viewManager CreateContainerView ","@connection serviceContent viewManager ","@connection serviceContent "," find_raw_datacenter "," connection serviceContent viewManager CreateContainerView view "," connection serviceContent viewManager CreateContainerView "," connection serviceContent viewManager "," connection serviceContent "," connection "," list_container_view "]}," Fog Compute Vsphere Real list_storage_pods":{"type":"method","name":"list_storage_pods","children":[],"call":["(send\n  (send nil :raw_storage_pods\n    (lvar :datacenter_name)) :map) compact "," storage_pod_attributes "," raw_storage_pods map "," raw_storage_pods ","filters [] "," map_attrs_to_hash merge "," managed_obj_id ","storage_pod obj "," map_attrs_to_hash "," storage_pod_attribute_mapping ","storage_pods map "," property_collector_results "," storage_pod_filter_spec "," find_raw_datacenter ","(send\n  (send nil :raw_storage_pods\n    (lvar :filters [] )) :map) compact ","(send\n  (send nil :raw_ property_collector_results \n    (lvar :datacenter_name)) :map) compact "," raw_ property_collector_results  map "," raw_ property_collector_results  "," property_collector_results  map "]}," Fog Compute Vsphere Mock get_storage_pod":{"type":"method","name":"get_storage_pod","children":[],"call":["(send\n  (send nil :list_storage_pods\n    (hash\n      (pair\n        (sym :datacenter)\n        (lvar :datacenter_name)))) :select) first ","h [] == ","h [] "," list_storage_pods select "," list_storage_pods "," list_storage_pods detect "]}," Fog Compute Vsphere Real get_raw_storage_pod":{"type":"method","name":"get_raw_storage_pod","children":[],"call":["(send\n  (send\n    (send\n      (send\n        (send\n          (ivar :@connection) :serviceContent) :viewManager) :CreateContainerView\n      (hash\n        (pair\n          (sym :container)\n          (lvar :dc))\n        (pair\n          (sym :type)\n          (array\n            (str \"StoragePod\")))\n        (pair\n          (sym :recursive)\n          (true)))) :view) :select) first ","pod name == ","pod name ","@connection serviceContent viewManager CreateContainerView view select ","@connection serviceContent viewManager CreateContainerView view ","@connection serviceContent viewManager CreateContainerView ","@connection serviceContent viewManager ","@connection serviceContent "," find_raw_datacenter ","(send\n  (send\n    (send\n      (send\n        (send\n          (send nil :connection) :serviceContent) :viewManager) :CreateContainerView\n      (hash\n        (pair\n          (sym :container)\n          (lvar :dc))\n        (pair\n          (sym :type)\n          (array\n            (str \"StoragePod\")))\n        (pair\n          (sym :recursive)\n          (true)))) :view) :select) first "," connection serviceContent viewManager CreateContainerView view select "," connection serviceContent viewManager CreateContainerView view "," connection serviceContent viewManager CreateContainerView "," connection serviceContent viewManager "," connection serviceContent "," connection "," raw_storage_pods detect "," raw_storage_pods ","(send\n  (send\n    (send\n      (send\n        (send\n          (ivar :@connection) :serviceContent) :viewManager) :CreateContainerView\n      (hash\n        (pair\n          (sym :container)\n          (lvar : find_raw_datacenter ))\n        (pair\n          (sym :type)\n          (array\n            (str \"StoragePod\")))\n        (pair\n          (sym :recursive)\n          (true)))) :view) :select) first ","(send\n  (send\n    (send\n      (send\n        (send\n          (send nil :connection) :serviceContent) :viewManager) :CreateContainerView\n      (hash\n        (pair\n          (sym :container)\n          (lvar : find_raw_datacenter ))\n        (pair\n          (sym :type)\n          (array\n            (str \"StoragePod\")))\n        (pair\n          (sym :recursive)\n          (true)))) :view) :select) first "]}," Fog Compute Vsphere Real get_storage_pod":{"type":"method","name":"get_storage_pod","children":[],"call":[" storage_pod_attributes "," raise "," get_raw_storage_pod ","volume storage_pod ","(or\n  (send\n    (send\n      (lvar :volume) :storage_pod) :nil?)\n  (send\n    (send\n      (lvar :volume) :storage_pod) :empty?)) ! ","volume storage_pod empty? ","volume storage_pod nil? ","attributes [] detect ","attributes [] ","@vsphere_rev to_f >= ","@vsphere_rev to_f ","pod [] == ","pod [] "," list_storage_pods detect "," list_storage_pods ","  get_raw_storage_pod _attributes "," get_raw_ get_raw_storage_pod  ","volume  get_raw_storage_pod  ","(or\n  (send\n    (send\n      (lvar :volume) : get_raw_storage_pod ) :nil?)\n  (send\n    (send\n      (lvar :volume) : get_raw_storage_pod ) :empty?)) ! ","volume  get_raw_storage_pod  empty? ","volume  get_raw_storage_pod  nil? "," list_ get_raw_storage_pod s detect "," list_ get_raw_storage_pod s "]}," Fog Compute Vsphere Mock folder_destroy":{"type":"method","name":"folder_destroy","children":[],"call":[" raise ","vms length > ","vms length "," list_virtual_machines ","vms empty? "," list_virtual_machines  length > "," list_virtual_machines  length "," list_virtual_machines  empty? "]}," Fog Compute Vsphere Real folder_destroy":{"type":"method","name":"folder_destroy","children":[],"call":["task info state ","task info ","task wait_for_completion ","folder Destroy_Task "," raise ","folder childEntity size > ","folder childEntity size ","folder childEntity "," get_raw_vmfolder ","folder childEntity empty? ","folder Destroy_Task  info state ","folder Destroy_Task  info ","folder Destroy_Task  wait_for_completion "," get_raw_vmfolder  Destroy_Task "," get_raw_vmfolder  childEntity size > "," get_raw_vmfolder  childEntity size "," get_raw_vmfolder  childEntity "," get_raw_vm get_raw_vmfolder  "," get_raw_vmfolder  childEntity empty? "]}," Fog Compute Vsphere Mock create_cdrom":{"type":"method","name":"create_cdrom","children":[],"call":["cdrom key "]}," Fog Compute Vsphere Real create_cdrom":{"type":"method","name":"create_cdrom","children":[],"call":["RbVmomi VIM  VirtualCdrom ","RbVmomi VIM  VirtualDeviceConnectInfo ","RbVmomi VIM  VirtualCdromRemoteAtapiBackingInfo ","cdrom key "]}," Fog Compute Vsphere Real get_disk_device_key":{"type":"method","name":"get_disk_device_key","children":[],"call":["2000 + ","index + ","index > ","2000 + + ","controller_bus * ","controller_key - ","controller_key -  * "]}," Fog Compute Vsphere Real boot_order":{"type":"method","name":"boot_order","children":[],"call":[" raise ","boot_order << ","RbVmomi VIM VirtualMachineBootOptionsBootableFloppyDevice  new ","RbVmomi VIM VirtualMachineBootOptionsBootableCdromDevice  new ","RbVmomi VIM VirtualMachineBootOptionsBootableDiskDevice  new "," get_disk_device_key ","disks index ","disk key ","disks each ","attributes [] ","RbVmomi VIM VirtualMachineBootOptionsBootableEthernetDevice  new ","4000 + ","nics index ","nics each ","attributes [] each ","dev is_a? ","(send\n  (send\n    (lvar :vm_cfg) :[]\n    (sym :deviceChange)) :map) select ","dev [] ","vm_cfg [] map ","vm_cfg [] ","disk unitNumber ","disk controllerKey ","attributes []  index ","attributes []  each "]}," Fog Compute Vsphere Real boot_options":{"type":"method","name":"boot_options","children":[],"call":["RbVmomi VIM VirtualMachineBootOptions  new "," boot_order ","@vsphere_rev to_f >= ","@vsphere_rev to_f ","options empty? ","options []= ","attributes [] "]}," Fog Compute Vsphere Real create_vm_on_storage_pod":{"type":"method","name":"create_vm_on_storage_pod","children":[],"call":[" raise ","result vm ","srm ApplyStorageDrsRecommendation_Task wait_for_completion ","srm ApplyStorageDrsRecommendation_Task ","result recommendations first key ","result recommendations first ","result recommendations ","srm RecommendDatastores ","@connection serviceContent storageResourceManager ","@connection serviceContent ","RbVmomi VIM StoragePlacementSpec  new ","RbVmomi VIM StorageDrsPodSelectionSpec  new "," get_raw_storage_pod "," connection serviceContent storageResourceManager "," connection serviceContent "," connection ","result result vm  ","srm ApplyStorageDrsRecommendation_Task wait_for_completion  vm ","srm RecommendDatastores  vm ","@connection serviceContent storageResourceManager  ApplyStorageDrsRecommendation_Task wait_for_completion "," connection serviceContent storageResourceManager  ApplyStorageDrsRecommendation_Task wait_for_completion ","@connection serviceContent storageResourceManager  ApplyStorageDrsRecommendation_Task "," connection serviceContent storageResourceManager  ApplyStorageDrsRecommendation_Task ","srm ApplyStorageDrsRecommendation_Task wait_for_completion  recommendations first key ","srm RecommendDatastores  recommendations first key ","result recommendations first result recommendations first key  ","srm ApplyStorageDrsRecommendation_Task wait_for_completion  recommendations first ","srm RecommendDatastores  recommendations first ","srm ApplyStorageDrsRecommendation_Task wait_for_completion  recommendations ","srm RecommendDatastores  recommendations ","@connection serviceContent storageResourceManager  RecommendDatastores "," connection serviceContent storageResourceManager  RecommendDatastores "]}," Fog Compute Vsphere Real create_vm_on_datastore":{"type":"method","name":"create_vm_on_datastore","children":[],"call":["vmFolder CreateVM_Task wait_for_completion ","vmFolder CreateVM_Task ","vmFolder CreateVM_Task wait_for_completion Folder CreateVM_Task wait_for_completion ","vmFolder CreateVM_Task wait_for_completion Folder CreateVM_Task "]}," Fog Compute Vsphere Mock create_folder":{"type":"method","name":"create_folder","children":[],"call":[" data [] []= "," data [] "," data "]}," Fog Compute Vsphere StoragePods get":{"type":"method","name":"get","children":[],"call":[" new "," service get_storage_pod "," datacenter "," service "," requires "]}," Fog Compute Vsphere StoragePods all":{"type":"method","name":"all","children":[],"call":[" load "," service list_storage_pods ","filters merge "," datacenter "," service "]}," Fog Compute Vsphere StoragePod to_s":{"type":"method","name":"to_s","children":[],"call":[" name "]}," Fog Compute Vsphere Server cdrom":{"type":"method","name":"cdrom","children":[],"call":[" cdroms get "," cdroms "]}," Fog Compute Vsphere Server cdroms":{"type":"method","name":"cdroms","children":[],"call":[" service cdroms all "," service cdroms "," id "," service "]}," Fog Compute Vsphere Folder destroy":{"type":"method","name":"destroy","children":[],"call":[" service folder_destroy "," datacenter "," path "," service "]}," Fog Compute Vsphere Datacenter storage_pods":{"type":"method","name":"storage_pods","children":[],"call":[" service storage_pods ","(pair\n  (sym :datacenter)\n  (send\n    (send nil :path) :join\n    (str \"/\"))) merge "," path join "," path "," service "]}," Fog Compute Vsphere Cdroms get":{"type":"method","name":"get","children":[],"call":["cdrom unit_number == ","cdrom unit_number "," all find "," all "]}," Fog Compute Vsphere Cdroms all":{"type":"method","name":"all","children":[],"call":[" load "," service list_vm_cdroms "," instance_uuid "," service "]}," Fog Compute Vsphere Cdrom save":{"type":"method","name":"save","children":[],"call":[" unit_number= ","created unit_number "," filename= ","created filename "," key= ","created key "," server cdroms get "," unit_number "," server cdroms "," server ","data [] == ","data [] "," service add_vm_cdrom "," service "," raise ","cdrom id != "," id ","cdrom id ","cdrom unit_number == ","cdrom unit_number "," server cdroms any? ","max_unit_number + ","used_unit_numbers exclude? ","max_unit_number times to_a find ","max_unit_number times to_a ","max_unit_number times ","max_unit_number > "," server cdroms size ","used_unit_numbers max "," server cdroms map "," unit_number nil? "," requires "," server cdroms get  unit_number "," server cdroms get  filename "," server cdroms get  key "," service add_vm_cdrom  [] == "," service add_vm_cdrom  [] ","used_unit_numbers max  + "," server cdroms map  exclude? ","used_unit_numbers max  times to_a find ","used_unit_numbers max  times to_a ","used_unit_numbers max  times ","used_unit_numbers max  > "," server cdroms map  max "]}," Fog Compute Vsphere Cdrom destroy":{"type":"method","name":"destroy","children":[],"call":[" service destroy_vm_cdrom "," service "," requires "]}," Fog Compute Vsphere Cdrom to_s":{"type":"method","name":"to_s","children":[],"call":[" name "]}," Fog Compute Vsphere Mock list_rules":{"type":"method","name":"list_rules","children":[],"call":["r [] == ","filters [] ","r [] "," data [] values select "," data [] values "," data [] "," data "]}," Fog Compute Vsphere Real rule_attributes":{"type":"method","name":"rule_attributes","children":[],"call":["vm config instanceUuid ","vm config ","rule [] map ","rule [] ","rule class ","filters [] ","attributes []= ","rule class to_s == ","rule class to_s "]}," Fog Compute Vsphere Real list_rules":{"type":"method","name":"list_rules","children":[],"call":[" rule_attributes ","cluster configurationEx rule map ","cluster configurationEx rule ","cluster configurationEx "," get_raw_cluster ","filters [] "," get_raw_cluster  configurationEx rule map "," get_raw_cluster  configurationEx rule "," get_raw_cluster  configurationEx "," get_raw_ get_raw_cluster  "]}," Fog Compute Vsphere Mock destroy_rule":{"type":"method","name":"destroy_rule","children":[],"call":[" data [] delete ","attributes [] "," data [] "," data "," raise "," data [] [] "]}," Fog Compute Vsphere Real destroy_rule":{"type":"method","name":"destroy_rule","children":[],"call":["cluster ReconfigureComputeResource_Task wait_for_completion ","cluster ReconfigureComputeResource_Task ","RbVmomi VIM  ClusterConfigSpecEx ","RbVmomi VIM  ClusterRuleSpec ","rule key ","RbVmomi VIM  ArrayUpdateOperation "," raise ","attributes [] ","rule key == ","cluster configurationEx rule find ","cluster configurationEx rule ","cluster configurationEx "," get_raw_cluster "," get_raw_cluster  ReconfigureComputeResource_Task wait_for_completion "," get_raw_cluster  ReconfigureComputeResource_Task "," get_raw_cluster  configurationEx rule find "," get_raw_cluster  configurationEx rule "," get_raw_cluster  configurationEx "," get_raw_ get_raw_cluster  "]}," Fog Compute Vsphere Mock create_rule":{"type":"method","name":"create_rule","children":[],"call":["attributes [] "," data [] []= "," data [] "," data ","attributes []= "," rand "]}," Fog Compute Vsphere Real create_rule":{"type":"method","name":"create_rule","children":[],"call":[" raise ","attributes [] ","rule [] ","n [] == ","n [] ","cluster configurationEx rule find ","cluster configurationEx rule ","cluster configurationEx ","cluster ReconfigureComputeResource_Task wait_for_completion ","cluster ReconfigureComputeResource_Task ","RbVmomi VIM  ClusterConfigSpecEx ","RbVmomi VIM  ClusterRuleSpec ","RbVmomi VIM  ArrayUpdateOperation ","attributes [] new "," get_vm_ref ","attributes [] to_a map ","attributes [] to_a "," get_raw_cluster "," get_spec "," get_rule_spec "," get_raw_cluster  configurationEx rule find "," get_raw_cluster  configurationEx rule "," get_raw_cluster  configurationEx "," get_raw_cluster  ReconfigureComputeResource_Task wait_for_completion "," get_raw_cluster  ReconfigureComputeResource_Task "," get_raw_ get_raw_cluster  "," get_attributes [] new  "," get_ get_spec  "," get_ get_rule_spec  "," get_rule_attributes [] new  "," get_rule_ get_spec  "," get_rule_ get_rule_spec  "]}," Fog Compute Vsphere Rules new":{"type":"method","name":"new","children":[],"call":["attributes merge "," cluster "," datacenter "," requires "]}," Fog Compute Vsphere Rules get":{"type":"method","name":"get","children":[],"call":[" raise ","(send\n  (lvar :rule) :key) include? ","rule name ","rule key "," all find "," all "]}," Fog Compute Vsphere Rules all":{"type":"method","name":"all","children":[],"call":[" load "," service list_rules "," cluster "," datacenter "," service "," requires "]}," Fog Compute Vsphere Rule destroy":{"type":"method","name":"destroy","children":[],"call":[" service destroy_rule "," attributes "," service "]}," Fog Compute Vsphere Rule save":{"type":"method","name":"save","children":[],"call":[" reload "," key= "," service create_rule "," attributes "," service "," raise "," persisted? "," vm_ids length < "," vm_ids length "," vm_ids "," requires "]}," Fog Compute Vsphere Rule vms=":{"type":"method","name":"vms=","children":[],"call":[" vm_ids= ","vms map "]}," Fog Compute Vsphere Rule vms":{"type":"method","name":"vms","children":[],"call":[" service servers get "," datacenter "," service servers "," service "," vm_ids map "," vm_ids "]}," Fog Compute Vsphere Cluster rules":{"type":"method","name":"rules","children":[],"call":[" service rules "," name "," datacenter "," service "," full_path "]}," Fog Compute Vsphere Real folder_enumerator":{"type":"method","name":"folder_enumerator","children":[],"call":["yielder yield "," folder_enumerator each "," folder_enumerator ","raw_folder children each ","raw_folder children ","Enumerator  new "]}," Fog Compute Vsphere Real raw_list_all_virtual_machines_in_folder":{"type":"method","name":"raw_list_all_virtual_machines_in_folder","children":[],"call":[" folder_enumerator "," get_raw_vmfolder ","  get_raw_vmfolder _enumerator "," get_raw_vm get_raw_vmfolder  "]}," Fog Compute Vsphere Real folder_path":{"type":"method","name":"folder_path","children":[],"call":["/ + ","folder path map join ","folder path map ","folder path "]}," Fog Compute Vsphere Servers new":{"type":"method","name":"new","children":[],"call":["(pair\n  (sym :datacenter)\n  (send nil :datacenter)) merge "," resource_pool "," cluster "," folder "," datacenter "]}," Fog Compute Vsphere Mock list_hosts":{"type":"method","name":"list_hosts","children":[],"call":["r [] == ","filters [] ","r [] "," data [] values select "," data [] values "," data [] "," data "]}," Fog Compute Vsphere Real host_attributes":{"type":"method","name":"host_attributes","children":[],"call":["vm config instanceUuid ","vm config ","host [] map ","host [] ","filters [] ","Proc  new ","host config network dnsConfig domainName ","host config network dnsConfig ","host config network ","host config ","host config network dnsConfig hostName ","host summary config product version ","host summary config product ","host summary config ","host summary ","host summary config product name ","host config network vnic first spec ip ipV6Config ipV6Address first ipAddress ","host config network vnic first spec ip ipV6Config ipV6Address first ","host config network vnic first spec ip ipV6Config ipV6Address ","host config network vnic first spec ip ipV6Config ","host config network vnic first spec ip ","host config network vnic first spec ","host config network vnic first ","host config network vnic ","host config network vnic first spec ip ipAddress ","host hardware systemInfo vendor ","host hardware systemInfo ","host hardware ","host hardware systemInfo model ","host hardware systemInfo uuid ","host hardware memorySize ","host hardware cpuInfo numCpuThreads ","host hardware cpuInfo ","host hardware cpuInfo numCpuPackages ","host hardware cpuInfo numCpuCores "]}," Fog Compute Vsphere Real list_hosts":{"type":"method","name":"list_hosts","children":[],"call":[" host_attributes ","cluster host map ","cluster host "," get_raw_cluster ","filters [] ","hsh merge ","vm config instanceUuid ","vm config ","host [] map ","host [] ","Proc  new ","host [] first spec ip ipV6Config ipV6Address first ipAddress ","host [] first spec ip ipV6Config ipV6Address first ","host [] first spec ip ipV6Config ipV6Address ","host [] first spec ip ipV6Config ","host [] first spec ip ","host [] first spec ","host [] first ","host [] first spec ip ipAddress "," map_attrs_to_hash "," host_system_attribute_mapping ","results map "," property_collector_results "," host_system_filter_spec "," proc "," get_raw_cluster  host map "," get_raw_cluster  host "," get_raw_ get_raw_cluster  "," map_attrs_to_hash  merge "," property_collector_results  map "," property_collector_ property_collector_results  "]}," Fog Compute Vsphere Real get_raw_host":{"type":"method","name":"get_raw_host","children":[],"call":[" raise ","host name == ","host name ","cluster host find ","cluster host "," get_raw_cluster "," get_raw_cluster  host find "," get_raw_cluster  host "," get_raw_ get_raw_cluster  "]}," Fog Compute Vsphere Hosts get":{"type":"method","name":"get","children":[],"call":[" raise ","host name == ","host name "," all find "," all "]}," Fog Compute Vsphere Hosts all":{"type":"method","name":"all","children":[],"call":[" load "," service list_hosts "," cluster "," datacenter "," service "," requires "]}," Fog Compute Vsphere Host to_s":{"type":"method","name":"to_s","children":[],"call":[" name "]}," Fog Compute Vsphere Cluster hosts":{"type":"method","name":"hosts","children":[],"call":[" service hosts "," name "," datacenter "," service "," full_path "]}," Fog Compute Vsphere Cluster networks":{"type":"method","name":"networks","children":[],"call":[" service networks ","(pair\n  (sym :service)\n  (send nil :service)) merge "," datacenter "," name "," service "," id nil? "," id "," attributes [] "," attributes "," full_path "]}," Fog Compute Vsphere Cluster datastores":{"type":"method","name":"datastores","children":[],"call":[" service datastores ","(pair\n  (sym :service)\n  (send nil :service)) merge "," datacenter "," name "," service "," id nil? "," id "," attributes [] "," attributes "," full_path "]}," Fog Compute Vsphere Real get_spec":{"type":"method","name":"get_spec","children":[],"call":["attributes [] new ","attributes [] ","attributes [] to_s == ","attributes [] to_s "," get_vm_ref ","attributes [] to_a map ","attributes [] to_a "]}," Fog Compute Vsphere Mock vm_suspend":{"type":"method","name":"vm_suspend","children":[],"call":["options [] ","vm []= "," get_virtual_machine "," raise ","options key? "," get_virtual_machine  []= "]}," Fog Compute Vsphere Real suspend_gracefully":{"type":"method","name":"suspend_gracefully","children":[],"call":["vm StandbyGuest "]}," Fog Compute Vsphere Real suspend_forcefully":{"type":"method","name":"suspend_forcefully","children":[],"call":["task info result ","task info ","task wait_for_completion ","vm SuspendVM_Task ","vm SuspendVM_Task  info result ","vm SuspendVM_Task  info ","vm SuspendVM_Task  wait_for_completion "]}," Fog Compute Vsphere Real vm_suspend":{"type":"method","name":"vm_suspend","children":[],"call":[" suspend_gracefully "," suspend_forcefully ","options [] "," connection searchIndex FindAllByUuid first "," connection searchIndex FindAllByUuid "," connection searchIndex "," connection ","(pair\n  (str \"force\")\n  (false)) merge "," raise ","options key? ","@connection searchIndex FindAllByUuid first ","@connection searchIndex FindAllByUuid ","@connection searchIndex ","(pair\n  (str \"force\")\n  (false)) merge  [] ","(pair\n  (str \"force\")\n  (false)) merge  key? "]}," Fog Compute Vsphere Mock vm_rename":{"type":"method","name":"vm_rename","children":[],"call":[" raise ","options key? "]}," Fog Compute Vsphere Real vm_rename":{"type":"method","name":"vm_rename","children":[],"call":["task info state ","task info ","task wait_for_completion ","vm_mob_ref Rename_Task ","options [] "," get_vm_ref "," raise ","options key? ","vm_mob_ref Rename_Task  info state ","vm_mob_ref Rename_Task  info ","vm_mob_ref Rename_Task  wait_for_completion "," get_vm_ref  Rename_Task "]}," Fog Compute Vsphere Mock vm_reconfig_volumes":{"type":"method","name":"vm_reconfig_volumes","children":[],"call":[" vm_reconfig_hardware ","options [] ","hardware_spec [] push ","volume size ","volume controller_key ","volume key ","volume unit_number ","volume filename ","volume mode ","hardware_spec [] ","options [] each "," raise ","options key? "]}," Fog Compute Vsphere Real vm_reconfig_volumes":{"type":"method","name":"vm_reconfig_volumes","children":[],"call":[" vm_reconfig_hardware ","options [] ","hardware_spec [] push "," create_disk ","volume filename ","hardware_spec [] ","options [] each "," raise ","options key? ","RbVmomi VIM  VirtualDisk ","volume size ","volume controller_key ","volume key ","volume unit_number ","RbVmomi VIM  VirtualDiskFlatVer2BackingInfo ","volume mode "]}," Fog Compute Vsphere Mock remove_vm_volume":{"type":"method","name":"remove_vm_volume","children":[],"call":[]}," Fog Compute Vsphere Real remove_vm_volume":{"type":"method","name":"remove_vm_volume","children":[],"call":[" vm_reconfig_hardware "," create_disk ","volume server_id "]}," Fog Compute Vsphere Real apply_options_to_raw_interface":{"type":"method","name":"apply_options_to_raw_interface","children":[],"call":["raw_interface connectable send ","raw_interface connectable ","options [] each ","options [] "]}," Fog Compute Vsphere Mock add_vm_controller":{"type":"method","name":"add_vm_controller","children":[],"call":[" vm_reconfig_hardware "," create_controller ","controller server_id ","options []= ","RbVmomi VIM  VirtualLsiLogicController class ","RbVmomi VIM  VirtualLsiLogicController "]}," Fog Compute Vsphere Real add_vm_controller":{"type":"method","name":"add_vm_controller","children":[],"call":[" vm_reconfig_hardware "," create_controller ","controller server_id ","options []= ","controller shared_bus ","controller key ","controller type "]}," Fog Compute Vsphere Real list_vm_scsi_controllers_raw":{"type":"method","name":"list_vm_scsi_controllers_raw","children":[],"call":["ctrl key ","ctrl scsiCtlrUnitNumber ","ctrl sharedBus to_s ","ctrl sharedBus ","ctrl class to_s ","ctrl class "," get_vm_ref config hardware device grep map "," get_vm_ref config hardware device grep "," get_vm_ref config hardware device "," get_vm_ref config hardware "," get_vm_ref config "," get_vm_ref "]}," Fog Compute Vsphere Real list_vm_scsi_controllers":{"type":"method","name":"list_vm_scsi_controllers","children":[],"call":["Fog Compute Vsphere SCSIController  new "," list_vm_scsi_controllers_raw map "," list_vm_scsi_controllers_raw "]}," Fog Compute Vsphere Mock list_groups":{"type":"method","name":"list_groups","children":[],"call":["g [] == ","filters [] ","g [] "," data [] values select "," data [] values "," data [] "," data "]}," Fog Compute Vsphere Real group_attributes":{"type":"method","name":"group_attributes","children":[],"call":["attributes []= ","host name ","group [] map ","group [] ","group class to_s == ","group class to_s ","group class ","vm config instanceUuid ","vm config ","filters [] "]}," Fog Compute Vsphere Real list_groups":{"type":"method","name":"list_groups","children":[],"call":[" group_attributes ","cluster configurationEx group map ","cluster configurationEx group ","cluster configurationEx "," get_raw_cluster ","filters [] "," get_raw_cluster  configurationEx group map "," get_raw_cluster  configurationEx group "," get_raw_cluster  configurationEx "," get_raw_ get_raw_cluster  "]}," Fog Compute Vsphere Mock list_folders":{"type":"method","name":"list_folders","children":[],"call":["folder [] == ","v to_s ","folder [] ","k to_s ","options all? "," data [] values select "," data [] values "," data [] "," data ","v nil? ","options reject! "]}," Fog Compute Vsphere Real get_host":{"type":"method","name":"get_host","children":[],"call":[" get_raw_host "]}," Fog Compute Vsphere Mock destroy_group":{"type":"method","name":"destroy_group","children":[],"call":[" data [] delete ","attributes [] "," data [] "," data "," raise "," data [] [] "]}," Fog Compute Vsphere Real destroy_group":{"type":"method","name":"destroy_group","children":[],"call":["cluster ReconfigureComputeResource_Task wait_for_completion ","cluster ReconfigureComputeResource_Task ","RbVmomi VIM  ClusterConfigSpecEx ","RbVmomi VIM  ClusterGroupSpec ","group name ","RbVmomi VIM  ArrayUpdateOperation "," raise ","attributes [] ","g name == ","g name ","cluster configurationEx group find ","cluster configurationEx group ","cluster configurationEx "," get_raw_cluster "," get_raw_cluster  ReconfigureComputeResource_Task wait_for_completion "," get_raw_cluster  ReconfigureComputeResource_Task "," get_raw_cluster  configurationEx group find "," get_raw_cluster  configurationEx group "," get_raw_cluster  configurationEx "," get_raw_ get_raw_cluster  "]}," Fog Compute Vsphere Real get_rule_spec":{"type":"method","name":"get_rule_spec","children":[],"call":["attributes [] new ","attributes [] ","attributes [] to_s == ","attributes [] to_s "," get_vm_ref ","attributes [] to_a map ","attributes [] to_a "]}," Fog Compute Vsphere Mock create_group":{"type":"method","name":"create_group","children":[],"call":[" data [] []= ","attributes [] "," data [] "," data "]}," Fog Compute Vsphere Real get_group_spec":{"type":"method","name":"get_group_spec","children":[],"call":["attributes [] new ","attributes [] ","attributes [] to_s == ","attributes [] to_s "," get_vm_ref ","attributes [] to_a map ","attributes [] to_a "]}," Fog Compute Vsphere Real create_group":{"type":"method","name":"create_group","children":[],"call":[" raise ","attributes [] ","group [] ","n [] == ","n [] ","cluster configurationEx group find ","cluster configurationEx group ","cluster configurationEx ","cluster ReconfigureComputeResource_Task wait_for_completion ","cluster ReconfigureComputeResource_Task ","RbVmomi VIM  ClusterConfigSpecEx ","RbVmomi VIM  ClusterGroupSpec ","RbVmomi VIM  ArrayUpdateOperation "," get_group_spec "," get_raw_cluster "," get_spec "," get_raw_cluster  configurationEx group find "," get_raw_cluster  configurationEx group "," get_raw_cluster  configurationEx "," get_raw_cluster  ReconfigureComputeResource_Task wait_for_completion "," get_raw_cluster  ReconfigureComputeResource_Task "," get_group_ get_group_spec  "," get_group_ get_spec  "," get_raw_ get_raw_cluster  "," get_ get_group_spec  "," get_ get_spec  "]}," Fog Compute Vsphere Volume calculate_free_unit_number":{"type":"method","name":"calculate_free_unit_number","children":[],"call":["free_unit_numbers first ","(irange\n  (int 0)\n  (int 15)) to_a - ","(irange\n  (int 0)\n  (int 15)) to_a ","(send\n  (send\n    (send nil :server) :volumes) :select) map + ","(send\n  (send\n    (send nil :server) :volumes) :select) map ","vol controller_key == "," controller_key ","vol controller_key ","vol unit_number "," server volumes select "," server volumes "," server "," requires ","(irange\n  (int 0)\n  (int 15)) to_a -  first "]}," Fog Compute Vsphere Volume set_key":{"type":"method","name":"set_key","children":[],"call":[" key= ","2000 + + "," unit_number ","2000 + ","controller_bus * "," controller_key - "," controller_key "," key nil? "," key "," requires "," controller_key -  * "]}," Fog Compute Vsphere Volume set_unit_number":{"type":"method","name":"set_unit_number","children":[],"call":[" raise ","volume id != "," id ","volume id ","volume unit_number == "," unit_number ","volume unit_number ","(send\n  (send\n    (send nil :server) :volumes) :select) any? ","vol controller_key == "," controller_key ","vol controller_key "," server volumes select "," server volumes "," server "," unit_number= "," calculate_free_unit_number "," unit_number nil? "," requires "]}," Fog Compute Vsphere Volume server_id":{"type":"method","name":"server_id","children":[],"call":[" server id "," server "," requires "]}," Fog Compute Vsphere Volume detach":{"type":"method","name":"detach","children":[],"call":[" server volumes "," server "," service remove_vm_volume "," service "," requires "]}," Fog Compute Vsphere Server old":{"type":"method","name":"old","children":[],"call":[" dup reload "," dup "]}," Fog Compute Vsphere Server attribute_changed?":{"type":"method","name":"attribute_changed?","children":[],"call":["(send\n  (send\n    (self) :attributes) :select) key? "," old attributes [] != "," old attributes [] "," old attributes "," old "," attributes select "," attributes "]}," Fog Compute Vsphere Server initialize_scsi_controllers":{"type":"method","name":"initialize_scsi_controllers","children":[],"call":[" attributes []= ","Fog Compute Vsphere SCSIController  new "," attributes "," attributes [] empty? ! "," attributes [] empty? "," attributes [] "," attributes [] is_a? ","controller is_a? "," attributes [] map! "]}," Fog Compute Vsphere Server scsi_controllers":{"type":"method","name":"scsi_controllers","children":[],"call":[" service list_vm_scsi_controllers "," id "," service "," attributes [] "," attributes "]}," Fog Compute Vsphere Server suspend":{"type":"method","name":"suspend","children":[],"call":[" service vm_suspend ","options [] "," instance_uuid "," service "," requires ","(pair\n  (sym :force)\n  (or\n    (send\n      (send nil :tools_installed?) :!)\n    (send\n      (send nil :tools_running?) :!))) merge "," tools_running? ! "," tools_running? "," tools_installed? ! "," tools_installed? ","(pair\n  (sym :force)\n  (or\n    (send\n      (send nil :tools_installed?) :!)\n    (send\n      (send nil :tools_running?) :!))) merge  [] "]}," Fog Compute Vsphere Server vm_reconfig_volumes":{"type":"method","name":"vm_reconfig_volumes","children":[],"call":[" service vm_reconfig_volumes "," volumes "," instance_uuid "," service "," requires "]}," Fog Compute Vsphere Server vm_rename":{"type":"method","name":"vm_rename","children":[],"call":[" service vm_rename "," name "," instance_uuid "," service "," requires "]}," Fog Compute Vsphere SCSIController initialize":{"type":"method","name":"initialize","children":[],"call":[" key "]}," Fog Compute Vsphere Real connection":{"type":"method","name":"connection","children":[],"call":[" reload ","Fog Logger  debug ","@connection serviceContent sessionManager currentSession nil? ","@connection serviceContent sessionManager currentSession ","@connection serviceContent sessionManager ","@connection serviceContent ","@connection nil? "]}," Fog Compute Vsphere Mock vm_revert_snapshot":{"type":"method","name":"vm_revert_snapshot","children":[],"call":[]}," Fog Compute Vsphere Real vm_revert_snapshot":{"type":"method","name":"vm_revert_snapshot","children":[],"call":["task info cancelled ","task info ","task info state ","task wait_for_completion ","snapshot RevertToSnapshot_Task ","vm snapshots get mo_ref ","vm snapshots get ","vm snapshots "," servers get "," servers ","snapshot RevertToSnapshot_Task  info cancelled ","snapshot RevertToSnapshot_Task  info ","snapshot RevertToSnapshot_Task  info state ","snapshot RevertToSnapshot_Task  wait_for_completion ","vm snapshots get mo_ref  RevertToSnapshot_Task ","vm vm snapshots get mo_ref s get mo_ref "," servers get  snapshots get mo_ref ","vm vm snapshots get mo_ref s get "," servers get  snapshots get ","vm vm snapshots get mo_ref s "," servers get  snapshots "]}," Fog Compute Vsphere Mock vm_remove_snapshot":{"type":"method","name":"vm_remove_snapshot","children":[],"call":[]}," Fog Compute Vsphere Real vm_remove_snapshot":{"type":"method","name":"vm_remove_snapshot","children":[],"call":["task info cancelled ","task info ","task info state ","task wait_for_completion ","snapshot RemoveSnapshot_Task ","vm snapshots get mo_ref ","vm snapshots get ","vm snapshots "," servers get "," servers ","snapshot RemoveSnapshot_Task  info cancelled ","snapshot RemoveSnapshot_Task  info ","snapshot RemoveSnapshot_Task  info state ","snapshot RemoveSnapshot_Task  wait_for_completion ","vm snapshots get mo_ref  RemoveSnapshot_Task ","vm vm snapshots get mo_ref s get mo_ref "," servers get  snapshots get mo_ref ","vm vm snapshots get mo_ref s get "," servers get  snapshots get ","vm vm snapshots get mo_ref s "," servers get  snapshots "]}," Fog Compute Vsphere Real traverse_raw_resource_pools":{"type":"method","name":"traverse_raw_resource_pools","children":[],"call":["pools << "," traverse_raw_resource_pools ","rp each ","rp respond_to? ","rp resourcePool "]}," Fog Compute Vsphere Snapshot destroy":{"type":"method","name":"destroy","children":[],"call":[" service vm_remove_snapshot "," ref "," server_id "," service "," requires "]}," Fog Compute Vsphere Snapshot revert":{"type":"method","name":"revert","children":[],"call":[" service vm_revert_snapshot "," ref "," server_id "," service "]}," Fog Compute Vsphere Mock vm_acquire_ticket":{"type":"method","name":"vm_acquire_ticket","children":[],"call":[" raise ","options key? "]}," Fog Compute Vsphere Real vm_acquire_ticket":{"type":"method","name":"vm_acquire_ticket","children":[],"call":["ticket sslThumbprint ","ticket port ","ticket host ","ticket ticket ","vm_mob_ref AcquireTicket "," get_vm_ref ","options [] "," raise ","options key? ","vm_mob_ref AcquireTicket  sslThumbprint ","vm_mob_ref AcquireTicket  port ","vm_mob_ref AcquireTicket  host ","vm_mob_ref AcquireTicket  vm_mob_ref AcquireTicket  "," get_vm_ref  AcquireTicket "]}," Fog Compute Vsphere Tickets create":{"type":"method","name":"create","children":[],"call":[" new "," service vm_acquire_ticket ","opts merge "," server instance_uuid "," server "," service "," raise "," server is_a? "," requires "]}," Fog Compute Vsphere Server acquire_ticket":{"type":"method","name":"acquire_ticket","children":[],"call":[" service tickets create "," service tickets "," service "]}," Fog Compute Vsphere Mock vm_relocate":{"type":"method","name":"vm_relocate","children":[],"call":[" raise ","options key? "]}," Fog Compute Vsphere Real vm_relocate":{"type":"method","name":"vm_relocate","children":[],"call":["task info state ","task info ","task wait_for_completion ","vm_mob_ref RelocateVM_Task ","options [] ","RbVmomi VIM  VirtualMachineRelocateSpec ","options []= ","RbVmomi VIM  VirtualMachineRelocateSpecDiskLocator ","disk []= "," get_raw_datastore ","disk [] ","options [] map "," get_raw_host "," raise ","vm_mob_ref kind_of? "," connection searchIndex FindAllByUuid first "," connection searchIndex FindAllByUuid "," connection searchIndex "," connection ","options key? ","vm_mob_ref is_a? ","RbVmomi VIM  send ","disk [] delete ","disk [] [] "," get_vm_cluster "," get_vm_datacenter ","vm_mob_ref RelocateVM_Task  info state ","vm_mob_ref RelocateVM_Task  info ","vm_mob_ref RelocateVM_Task  wait_for_completion "," connection searchIndex FindAllByUuid first  RelocateVM_Task "," connection searchIndex FindAllByUuid first  kind_of? "," connection searchIndex FindAllByUuid first  is_a? "]}," Fog Compute Vsphere Real relocate_template_volumes_specs":{"type":"method","name":"relocate_template_volumes_specs","children":[],"call":["specs << "," get_raw_datastore ","new_volume datastore ","new_volume key ","new_volume datastore != ","template_volume backing datastore name ","template_volume backing datastore ","template_volume backing ","template_volumes zip each ","template_volumes zip ","volumes take ","template_volumes size ","vm_mob_ref config hardware device grep ","vm_mob_ref config hardware device ","vm_mob_ref config hardware ","vm_mob_ref config ","template_volume key ","vm_mob_ref config hardware device grep  zip each ","vm_mob_ref config hardware device grep  zip ","vm_mob_ref config hardware device grep  size "]}," Fog Compute Vsphere Mock list_vm_scsi_controllers":{"type":"method","name":"list_vm_scsi_controllers","children":[],"call":["h merge "," data [] [] [] map "," data [] [] [] "," data [] [] "," data [] "," data "," data [] [] key? "," raise "," data [] key? "]}," Fog Compute Vsphere Real host_start_maintenance":{"type":"method","name":"host_start_maintenance","children":[],"call":["task info state ","task info ","task wait_for_completion ","host_ref EnterMaintenanceMode_Task "," get_host ","host_ref EnterMaintenanceMode_Task  info state ","host_ref EnterMaintenanceMode_Task  info ","host_ref EnterMaintenanceMode_Task  wait_for_completion "," get_host  EnterMaintenanceMode_Task "]}," Fog Compute Vsphere Real host_shutdown":{"type":"method","name":"host_shutdown","children":[],"call":["task info state ","task info ","task wait_for_completion ","host_ref ShutdownHost_Task "," get_host ","host_ref ShutdownHost_Task  info state ","host_ref ShutdownHost_Task  info ","host_ref ShutdownHost_Task  wait_for_completion "," get_host  ShutdownHost_Task "]}," Fog Compute Vsphere Real host_finish_maintenance":{"type":"method","name":"host_finish_maintenance","children":[],"call":["task info state ","task info ","task wait_for_completion ","host_ref ExitMaintenanceMode_Task "," get_host ","host_ref ExitMaintenanceMode_Task  info state ","host_ref ExitMaintenanceMode_Task  info ","host_ref ExitMaintenanceMode_Task  wait_for_completion "," get_host  ExitMaintenanceMode_Task "]}," Fog Compute Vsphere Host finish_maintenance":{"type":"method","name":"finish_maintenance","children":[],"call":[" service host_finish_maintenance "," datacenter "," cluster "," name "," service "]}," Fog Compute Vsphere Host start_maintenance":{"type":"method","name":"start_maintenance","children":[],"call":[" service host_start_maintenance "," datacenter "," cluster "," name "," service "]}," Fog Compute Vsphere Host shutdown":{"type":"method","name":"shutdown","children":[],"call":[" service host_shutdown "," datacenter "," cluster "," name "," service "]}," Fog Compute Vsphere Host memory_mb":{"type":"method","name":"memory_mb","children":[],"call":[" memory / / "," memory / "," memory "]}," Fog Compute Vsphere Real get_raw_datastores":{"type":"method","name":"get_raw_datastores","children":[],"call":[" list_container_view "]}," Fog Compute Vsphere Real list_container_view":{"type":"method","name":"list_container_view","children":[],"call":["container_view DestroyView ","container_view view "," connection serviceContent viewManager CreateContainerView "," connection serviceContent viewManager "," connection serviceContent "," connection ","dc public_send "," find_raw_datacenter ","datacenter_obj_or_name kind_of? ","datacenter_obj_or_name is_a? "," connection serviceContent viewManager CreateContainerView  DestroyView ","dc public_send _view DestroyView "," connection serviceContent viewManager CreateContainerView  view ","dc public_send _view view "," find_raw_datacenter  public_send "]}," Fog Compute Vsphere Real raw_network_vlan_id":{"type":"method","name":"raw_network_vlan_id","children":[],"call":["vlan vlanId "]}," Fog Compute Vsphere Real host_system_attribute_mapping":{"type":"method","name":"host_system_attribute_mapping","children":[],"call":[]}," Fog Compute Vsphere Real host_system_filter_spec":{"type":"method","name":"host_system_filter_spec","children":[],"call":["RbVmomi VIM  PropertyFilterSpec "," host_system_attribute_mapping values + "," host_system_attribute_mapping values "," host_system_attribute_mapping "," compute_resource_host_traversal_spec "]}," Fog Compute Vsphere Real compute_resource_host_traversal_spec":{"type":"method","name":"compute_resource_host_traversal_spec","children":[],"call":["RbVmomi VIM  TraversalSpec "]}," Fog Compute Vsphere Real property_collector_results":{"type":"method","name":"property_collector_results","children":[],"call":["property_collector RetrieveProperties "," connection serviceContent propertyCollector "," connection serviceContent "," connection "," connection serviceContent propertyCollector  RetrieveProperties "]}," Fog Compute Vsphere Real map_attrs_to_hash":{"type":"method","name":"map_attrs_to_hash","children":[],"call":["hsh []= ","obj [] ","attribute_mapping each_with_object "]}," Fog Compute Vsphere Real raw_network_vlan":{"type":"method","name":"raw_network_vlan","children":[],"call":[" raw_network_vlan_id ","network vlan "]}," Fog Compute Vsphere Mock update_vm":{"type":"method","name":"update_vm","children":[],"call":[]}," Fog Compute Vsphere Real nic_backing_different?":{"type":"method","name":"nic_backing_different?","children":[],"call":["one deviceType != "," twp device "," twp ","one deviceType ","one deviceName != ","two deviceName ","one deviceName ","one is_a? ","one port switchUuid != ","two port switchUuid ","two port ","one port switchUuid ","one port ","one port portgroupKey != ","two port portgroupKey ","one port portgroupKey ","one class != ","two class ","one class "]}," Fog Compute Vsphere Real update_volume_attributes":{"type":"method","name":"update_volume_attributes","children":[],"call":["vm_volume backing thinProvisioned= ","fog_volume thin ","vm_volume backing ","vm_volume backing diskMode= ","fog_volume mode ","vm_volume capacityInKB= ","fog_volume size "]}," Fog Compute Vsphere Real update_vm_volumes_specs":{"type":"method","name":"update_vm_volumes_specs","children":[],"call":["specs concat "," create_disk ","new_volumes map ","new_volumes any? ","specs << "," update_volume_attributes ","vm_volumes zip each ","vm_volumes zip ","volumes to_a drop ","vm_volumes size ","volumes to_a ","volumes to_a take ","vm_mob_ref config hardware device grep ","vm_mob_ref config hardware device ","vm_mob_ref config hardware ","vm_mob_ref config ","volumes to_a drop  map ","volumes to_a drop  any? ","vm_mob_ref config hardware device grep  zip each ","vm_mob_ref config hardware device grep  zip ","vm_mob_ref config hardware device grep  size "]}," Fog Compute Vsphere Real update_vm_interfaces_specs":{"type":"method","name":"update_vm_interfaces_specs","children":[],"call":["specs concat "," create_interface ","new_nics map ","new_nics any? ","specs << ","vm_nic backing= "," nic_backing_different? ","vm_nic backing "," create_nic_backing ","vm_nics zip each ","vm_nics zip ","fog_interfaces to_a drop ","vm_nics size ","fog_interfaces to_a ","fog_interfaces to_a take ","vm_mob_ref config hardware device grep ","vm_mob_ref config hardware device ","vm_mob_ref config hardware ","vm_mob_ref config ","fog_interfaces to_a drop  map ","fog_interfaces to_a drop  any? ","vm_nic  create_nic_backing = "," nic_ create_nic_backing _different? ","vm_nic  create_nic_backing  "," create_nic_ create_nic_backing  ","vm_mob_ref config hardware device grep  zip each ","vm_mob_ref config hardware device grep  zip ","vm_mob_ref config hardware device grep  size "]}," Fog Compute Vsphere Real update_vm":{"type":"method","name":"update_vm","children":[],"call":[" vm_reconfig_hardware ","attributes [] ","spec empty? ","spec []= ","device_change empty? ","device_change concat "," update_vm_interfaces_specs ","server interfaces "," update_vm_volumes_specs ","server volumes "," get_vm_ref ","server attributes ","server attributes  [] ","server server attributes  "]}," Fog Compute Vsphere Real network_filter_spec":{"type":"method","name":"network_filter_spec","children":[],"call":["RbVmomi VIM  PropertyFilterSpec "," network_dvportgroup_attribute_mapping values + "," network_dvportgroup_attribute_mapping values "," network_dvportgroup_attribute_mapping "," network_attribute_mapping values "," network_attribute_mapping "," folder_traversal_spec ","obj networkFolder "]}," Fog Compute Vsphere Real folder_traversal_spec":{"type":"method","name":"folder_traversal_spec","children":[],"call":["RbVmomi VIM  TraversalSpec ","RbVmomi VIM  SelectionSpec "]}," Fog Compute Vsphere Real network_dvportgroup_attribute_mapping":{"type":"method","name":"network_dvportgroup_attribute_mapping","children":[],"call":[" network_attribute_mapping merge "," network_attribute_mapping "]}," Fog Compute Vsphere Real network_attribute_mapping":{"type":"method","name":"network_attribute_mapping","children":[],"call":[]}," Fog Compute Vsphere Real storage_pod_attribute_mapping":{"type":"method","name":"storage_pod_attribute_mapping","children":[],"call":[]}," Fog Compute Vsphere Real storage_pod_filter_prop_set":{"type":"method","name":"storage_pod_filter_prop_set","children":[],"call":[" storage_pod_attribute_mapping values "," storage_pod_attribute_mapping "]}," Fog Compute Vsphere Real storage_pod_filter_spec":{"type":"method","name":"storage_pod_filter_spec","children":[],"call":["RbVmomi VIM  PropertyFilterSpec "," storage_pod_filter_prop_set "," folder_traversal_spec ","obj datastoreFolder "]}," Fog Compute Vsphere Real generate_folder_inventory":{"type":"method","name":"generate_folder_inventory","children":[],"call":[" set_folder_paths ","inventory []= ","folder [] ","folder obj _ref ","folder obj ","folder [] _ref ","folder [] nil? ","folders each_with_object "]}," Fog Compute Vsphere Real folder_attribute_mapping":{"type":"method","name":"folder_attribute_mapping","children":[],"call":[]}," Fog Compute Vsphere Real lookup_parent_folders":{"type":"method","name":"lookup_parent_folders","children":[],"call":["(send\n  (send\n    (lvar :folder_inventory) :[]\n    (lvar :ref)) :[]\n  (sym :name)) flatten "," lookup_parent_folders ","folder_inventory [] [] ","folder_inventory [] ","folder_inventory [] [] nil? "]}," Fog Compute Vsphere Real set_folder_paths":{"type":"method","name":"set_folder_paths","children":[],"call":["props []= ","(str \"\") flatten "," lookup_parent_folders reverse "," lookup_parent_folders ","folder_inventory each "]}," Fog Compute Vsphere Real lookup_folder_path":{"type":"method","name":"lookup_folder_path","children":[],"call":["folder [] ","inventory [] ","inventory []  [] "]}," Fog Compute Vsphere Real lookup_folder_name":{"type":"method","name":"lookup_folder_name","children":[],"call":["folder [] ","inventory [] ","inventory []  [] "]}," Fog Compute Vsphere Real datacenter_to_vm_folder_traversal_spec":{"type":"method","name":"datacenter_to_vm_folder_traversal_spec","children":[],"call":["RbVmomi VIM  TraversalSpec ","RbVmomi VIM  SelectionSpec "]}," Fog Compute Vsphere Real dc_folder_traversal_spec":{"type":"method","name":"dc_folder_traversal_spec","children":[],"call":["RbVmomi VIM  TraversalSpec ","RbVmomi VIM  SelectionSpec "]}," Fog Compute Vsphere Real folder_filter_spec":{"type":"method","name":"folder_filter_spec","children":[],"call":["RbVmomi VIM  PropertyFilterSpec "," folder_attribute_mapping values + "," folder_attribute_mapping values "," folder_attribute_mapping "," datacenter_to_vm_folder_traversal_spec "," dc_folder_traversal_spec "]}," Fog Compute Vsphere Real datastore_attribute_mapping":{"type":"method","name":"datastore_attribute_mapping","children":[],"call":[]}," Fog Compute Vsphere Real compute_resource_datastore_traversal_spec":{"type":"method","name":"compute_resource_datastore_traversal_spec","children":[],"call":["RbVmomi VIM  TraversalSpec "]}," Fog Compute Vsphere Real datastore_filter_prop_set":{"type":"method","name":"datastore_filter_prop_set","children":[],"call":[" datastore_attribute_mapping values "," datastore_attribute_mapping "]}," Fog Compute Vsphere Real datastore_cluster_filter_spec":{"type":"method","name":"datastore_cluster_filter_spec","children":[],"call":["RbVmomi VIM  PropertyFilterSpec "," datastore_filter_prop_set "," compute_resource_datastore_traversal_spec "]}," Fog Compute Vsphere Real datastore_filter_spec":{"type":"method","name":"datastore_filter_spec","children":[],"call":["RbVmomi VIM  PropertyFilterSpec "," datastore_filter_prop_set "," folder_traversal_spec ","obj datastoreFolder "]}," Fog Compute Vsphere Real get_storage_pod_from_volumes":{"type":"method","name":"get_storage_pod_from_volumes","children":[],"call":["volume storage_pod ","(or\n  (send\n    (send\n      (lvar :volume) :storage_pod) :nil?)\n  (send\n    (send\n      (lvar :volume) :storage_pod) :empty?)) ! ","volume storage_pod empty? ","volume storage_pod nil? ","attributes [] detect ","attributes [] ","@vsphere_rev to_f >= ","@vsphere_rev to_f "]}," Fog Compute Vsphere Real get_vm_cluster":{"type":"method","name":"get_vm_cluster","children":[],"call":["parent name ","parent parent ","vm_mob_ref respond_to? ","parent is_a? ","vm_mob_ref runtime host parent ","vm_mob_ref runtime host ","vm_mob_ref runtime ","parent parent  name ","vm_mob_ref runtime host parent  name ","parent parent  parent parent  ","vm_mob_ref runtime host parent  vm_mob_ref runtime host parent  ","parent parent  is_a? ","vm_mob_ref runtime host parent  is_a? ","vm_mob_ref runtime host parent parent  ","vm_mob_ref runtime host vm_mob_ref runtime host parent  "]}," Fog Compute Vsphere Real get_vm_datacenter":{"type":"method","name":"get_vm_datacenter","children":[],"call":["parent name ","parent parent ","vm_mob_ref respond_to? ","parent is_a? ","vm_mob_ref parent ","parent parent  name ","vm_mob_ref parent  name ","parent parent  parent parent  ","vm_mob_ref parent  vm_mob_ref parent  ","parent parent  is_a? ","vm_mob_ref parent  is_a? ","vm_mob_ref parent parent  ","vm_mob_ref vm_mob_ref parent  "]}," Fog Compute Vsphere Real get_raw_folder":{"type":"method","name":"get_raw_folder","children":[],"call":[" raise ","last_returned_folder find ","paths reduce ","paths empty? ","path sub split ","path sub ","Regexp  quote ","(send\n  (send\n    (lvar :dc_root_folder) :path) :map) join ","dc_root_folder path map ","dc_root_folder path ","dc send ","valid_types join ","valid_types include? ","type to_s ","type blank? "," find_raw_datacenter ","datacenter_name_or_obj is_a? ","path sub split  reduce ","path sub split  empty? ","path last_returned_folder find  split ","path last_returned_folder find  ","(send\n  (send\n    (lvar :dc send ) :path) :map) join ","(send\n  (send\n    (lvar : find_raw_datacenter _root_folder) :path) :map) join ","dc send  path map "," find_raw_datacenter _root_folder path map ","dc send  path "," find_raw_datacenter _root_folder path "," find_raw_datacenter  send "]}," Fog Vsphere Compute Mock vm_take_snapshot":{"type":"method","name":"vm_take_snapshot","children":[],"call":[" raise ","options key? "]}," Fog Vsphere Compute Real vm_take_snapshot":{"type":"method","name":"vm_take_snapshot","children":[],"call":["task info cancelled ","task info ","task info state ","task wait_for_completion ","vm CreateSnapshot_Task ","options [] "," get_vm_ref "," raise ","options key? ","opts []= ","opts key? ","k to_s ","defaults each ","options clone ","vm CreateSnapshot_Task  info cancelled ","vm CreateSnapshot_Task  info ","vm CreateSnapshot_Task  info state ","vm CreateSnapshot_Task  wait_for_completion "," get_vm_ref  CreateSnapshot_Task "," get_ get_vm_ref _ref ","options clone  []= ","options clone  key? "]}," Fog Vsphere Compute Mock vm_suspend":{"type":"method","name":"vm_suspend","children":[],"call":["options [] ","vm []= "," get_virtual_machine "," raise ","options key? "," get_virtual_machine  []= "]}," Fog Vsphere Compute Real suspend_gracefully":{"type":"method","name":"suspend_gracefully","children":[],"call":["vm StandbyGuest "]}," Fog Vsphere Compute Real suspend_forcefully":{"type":"method","name":"suspend_forcefully","children":[],"call":["task info result ","task info ","task wait_for_completion ","vm SuspendVM_Task ","vm SuspendVM_Task  info result ","vm SuspendVM_Task  info ","vm SuspendVM_Task  wait_for_completion "]}," Fog Vsphere Compute Real vm_suspend":{"type":"method","name":"vm_suspend","children":[],"call":[" suspend_gracefully "," suspend_forcefully ","options [] "," connection searchIndex FindAllByUuid first "," connection searchIndex FindAllByUuid "," connection searchIndex "," connection ","(pair\n  (str \"force\")\n  (false)) merge "," raise ","options key? ","(pair\n  (str \"force\")\n  (false)) merge  [] ","(pair\n  (str \"force\")\n  (false)) merge  key? "]}," Fog Vsphere Compute Mock vm_revert_snapshot":{"type":"method","name":"vm_revert_snapshot","children":[],"call":[]}," Fog Vsphere Compute Real vm_revert_snapshot":{"type":"method","name":"vm_revert_snapshot","children":[],"call":["task info cancelled ","task info ","task info state ","task wait_for_completion ","snapshot RevertToSnapshot_Task ","vm snapshots get mo_ref ","vm snapshots get ","vm snapshots "," servers get "," servers ","snapshot RevertToSnapshot_Task  info cancelled ","snapshot RevertToSnapshot_Task  info ","snapshot RevertToSnapshot_Task  info state ","snapshot RevertToSnapshot_Task  wait_for_completion ","vm snapshots get mo_ref  RevertToSnapshot_Task ","vm vm snapshots get mo_ref s get mo_ref "," servers get  snapshots get mo_ref ","vm vm snapshots get mo_ref s get "," servers get  snapshots get ","vm vm snapshots get mo_ref s "," servers get  snapshots "]}," Fog Vsphere Compute Mock vm_rename":{"type":"method","name":"vm_rename","children":[],"call":[" raise ","options key? "]}," Fog Vsphere Compute Real vm_rename":{"type":"method","name":"vm_rename","children":[],"call":["task info state ","task info ","task wait_for_completion ","vm_mob_ref Rename_Task ","options [] "," get_vm_ref "," raise ","options key? ","vm_mob_ref Rename_Task  info state ","vm_mob_ref Rename_Task  info ","vm_mob_ref Rename_Task  wait_for_completion "," get_vm_ref  Rename_Task "]}," Fog Vsphere Compute Mock vm_remove_snapshot":{"type":"method","name":"vm_remove_snapshot","children":[],"call":[]}," Fog Vsphere Compute Real vm_remove_snapshot":{"type":"method","name":"vm_remove_snapshot","children":[],"call":["task info cancelled ","task info ","task info state ","task wait_for_completion ","snapshot RemoveSnapshot_Task ","vm snapshots get mo_ref ","vm snapshots get ","vm snapshots "," servers get "," servers ","snapshot RemoveSnapshot_Task  info cancelled ","snapshot RemoveSnapshot_Task  info ","snapshot RemoveSnapshot_Task  info state ","snapshot RemoveSnapshot_Task  wait_for_completion ","vm snapshots get mo_ref  RemoveSnapshot_Task ","vm vm snapshots get mo_ref s get mo_ref "," servers get  snapshots get mo_ref ","vm vm snapshots get mo_ref s get "," servers get  snapshots get ","vm vm snapshots get mo_ref s "," servers get  snapshots "]}," Fog Vsphere Compute Mock vm_relocate":{"type":"method","name":"vm_relocate","children":[],"call":[" raise ","options key? "]}," Fog Vsphere Compute Real get_vm_cluster":{"type":"method","name":"get_vm_cluster","children":[],"call":["parent name ","parent parent ","vm_mob_ref respond_to? ","parent is_a? ","vm_mob_ref runtime host parent ","vm_mob_ref runtime host ","vm_mob_ref runtime ","parent parent  name ","vm_mob_ref runtime host parent  name ","parent parent  parent parent  ","vm_mob_ref runtime host parent  vm_mob_ref runtime host parent  ","parent parent  is_a? ","vm_mob_ref runtime host parent  is_a? ","vm_mob_ref runtime host parent parent  ","vm_mob_ref runtime host vm_mob_ref runtime host parent  "]}," Fog Vsphere Compute Real get_vm_datacenter":{"type":"method","name":"get_vm_datacenter","children":[],"call":["parent name ","parent parent ","vm_mob_ref respond_to? ","parent is_a? ","vm_mob_ref parent ","parent parent  name ","vm_mob_ref parent  name ","parent parent  parent parent  ","vm_mob_ref parent  vm_mob_ref parent  ","parent parent  is_a? ","vm_mob_ref parent  is_a? ","vm_mob_ref parent parent  ","vm_mob_ref vm_mob_ref parent  "]}," Fog Vsphere Compute Real vm_relocate":{"type":"method","name":"vm_relocate","children":[],"call":["task info state ","task info ","task wait_for_completion ","vm_mob_ref RelocateVM_Task ","options [] ","RbVmomi VIM  VirtualMachineRelocateSpec ","options []= ","RbVmomi VIM  VirtualMachineRelocateSpecDiskLocator ","disk []= ","RbVmomi VIM  send ","disk [] ","disk [] delete ","disk [] [] "," get_raw_datastore ","options [] map ","options key? "," get_raw_host "," get_vm_cluster "," get_vm_datacenter "," raise ","vm_mob_ref is_a? "," connection searchIndex FindAllByUuid first "," connection searchIndex FindAllByUuid "," connection searchIndex "," connection ","vm_mob_ref RelocateVM_Task  info state ","vm_mob_ref RelocateVM_Task  info ","vm_mob_ref RelocateVM_Task  wait_for_completion "," connection searchIndex FindAllByUuid first  RelocateVM_Task "," connection searchIndex FindAllByUuid first  is_a? "]}," Fog Vsphere Compute Mock vm_reconfig_volumes":{"type":"method","name":"vm_reconfig_volumes","children":[],"call":[" vm_reconfig_hardware ","options [] ","hardware_spec [] push ","volume size ","volume controller_key ","volume key ","volume unit_number ","volume filename ","volume mode ","hardware_spec [] ","options [] each "," raise ","options key? "]}," Fog Vsphere Compute Real vm_reconfig_volumes":{"type":"method","name":"vm_reconfig_volumes","children":[],"call":[" vm_reconfig_hardware ","options [] ","hardware_spec [] push "," create_disk ","volume filename ","hardware_spec [] ","options [] each "," raise ","options key? "]}," Fog Vsphere Compute Mock vm_reconfig_memory":{"type":"method","name":"vm_reconfig_memory","children":[],"call":[" vm_reconfig_hardware ","options [] "," raise ","options key? "]}," Fog Vsphere Compute Real vm_reconfig_memory":{"type":"method","name":"vm_reconfig_memory","children":[],"call":[" vm_reconfig_hardware ","options [] "," raise ","options key? "]}," Fog Vsphere Compute Mock vm_reconfig_hardware":{"type":"method","name":"vm_reconfig_hardware","children":[],"call":[" raise ","options key? "]}," Fog Vsphere Compute Real vm_reconfig_hardware":{"type":"method","name":"vm_reconfig_hardware","children":[],"call":["task info state ","task info ","task wait_for_completion ","vm_mob_ref ReconfigVM_Task ","RbVmomi VIM  VirtualMachineConfigSpec ","options [] "," get_vm_ref "," raise ","options key? ","vm_mob_ref ReconfigVM_Task  info state ","vm_mob_ref ReconfigVM_Task  info ","vm_mob_ref ReconfigVM_Task  wait_for_completion "," get_vm_ref  ReconfigVM_Task "]}," Fog Vsphere Compute Mock vm_reconfig_cpus":{"type":"method","name":"vm_reconfig_cpus","children":[],"call":[" vm_reconfig_hardware ","options [] "," raise ","options key? "]}," Fog Vsphere Compute Real vm_reconfig_cpus":{"type":"method","name":"vm_reconfig_cpus","children":[],"call":[" vm_reconfig_hardware ","options [] "," raise ","options key? "]}," Fog Vsphere Compute Mock vm_reconfig_cdrom":{"type":"method","name":"vm_reconfig_cdrom","children":[],"call":[" vm_reconfig_hardware ","options [] ","cdrom_obj [] "," list_vm_cdroms first "," list_vm_cdroms "," raise ","options key? "," list_vm_cdroms first  [] "]}," Fog Vsphere Compute Real vm_reconfig_cdrom":{"type":"method","name":"vm_reconfig_cdrom","children":[],"call":[" vm_reconfig_hardware ","options [] ","RbVmomi VIM  VirtualCdrom ","RbVmomi VIM  VirtualDeviceConnectInfo ","cdrom_obj controllerKey ","cdrom_obj key "," get_vm_ref config hardware device grep first "," get_vm_ref config hardware device grep "," get_vm_ref config hardware device "," get_vm_ref config hardware "," get_vm_ref config "," get_vm_ref ","RbVmomi VIM  VirtualCdromRemoteAtapiBackingInfo ","RbVmomi VIM  VirtualCdromIsoBackingInfo "," raise ","options key? "," get_vm_ref config hardware device grep first  controllerKey "," get_vm_ref config hardware device grep first  key "]}," Fog Vsphere Compute Mock vm_reboot":{"type":"method","name":"vm_reboot","children":[],"call":["options [] "," raise ","options key? "]}," Fog Vsphere Compute Real vm_reboot":{"type":"method","name":"vm_reboot","children":[],"call":["vm_mob_ref RebootGuest ","task info result ","task info ","task wait_for_completion ","vm_mob_ref ResetVM_Task ","options [] "," connection searchIndex FindAllByUuid first "," connection searchIndex FindAllByUuid "," connection searchIndex "," connection "," raise ","options key? ","(pair\n  (str \"force\")\n  (false)) merge "," connection searchIndex FindAllByUuid first  RebootGuest ","vm_mob_ref ResetVM_Task  info result ","vm_mob_ref ResetVM_Task  info ","vm_mob_ref ResetVM_Task  wait_for_completion "," connection searchIndex FindAllByUuid first  ResetVM_Task ","(pair\n  (str \"force\")\n  (false)) merge  [] ","(pair\n  (str \"force\")\n  (false)) merge  key? "]}," Fog Vsphere Compute Mock vm_power_on":{"type":"method","name":"vm_power_on","children":[],"call":[" raise ","options key? "]}," Fog Vsphere Compute Real vm_power_on":{"type":"method","name":"vm_power_on","children":[],"call":["task info state ","task info ","task wait_for_completion ","vm_mob_ref PowerOnVM_Task "," connection searchIndex FindAllByUuid first "," connection searchIndex FindAllByUuid "," connection searchIndex "," connection ","options [] "," raise ","options key? ","vm_mob_ref PowerOnVM_Task  info state ","vm_mob_ref PowerOnVM_Task  info ","vm_mob_ref PowerOnVM_Task  wait_for_completion "," connection searchIndex FindAllByUuid first  PowerOnVM_Task "]}," Fog Vsphere Compute Mock vm_power_off":{"type":"method","name":"vm_power_off","children":[],"call":["options [] ","vm []= "," get_virtual_machine "," raise ","options key? "," get_virtual_machine  []= "]}," Fog Vsphere Compute Real vm_power_off":{"type":"method","name":"vm_power_off","children":[],"call":["vm_mob_ref ShutdownGuest ","task info result ","task info ","task wait_for_completion ","vm_mob_ref PowerOffVM_Task ","options [] "," connection searchIndex FindAllByUuid first "," connection searchIndex FindAllByUuid "," connection searchIndex "," connection "," raise ","options key? ","(pair\n  (str \"force\")\n  (false)) merge "," connection searchIndex FindAllByUuid first  ShutdownGuest ","vm_mob_ref PowerOffVM_Task  info result ","vm_mob_ref PowerOffVM_Task  info ","vm_mob_ref PowerOffVM_Task  wait_for_completion "," connection searchIndex FindAllByUuid first  PowerOffVM_Task ","(pair\n  (str \"force\")\n  (false)) merge  [] ","(pair\n  (str \"force\")\n  (false)) merge  key? "]}," Fog Vsphere Compute Mock vm_migrate":{"type":"method","name":"vm_migrate","children":[],"call":[" raise ","options key? ","options [] ","options [] nil? "]}," Fog Vsphere Compute Real vm_migrate":{"type":"method","name":"vm_migrate","children":[],"call":["task info state ","task info ","task wait_for_completion ","vm_mob_ref MigrateVM_Task ","task_options merge ","priority to_s ","task info result [] warning ","task info result [] ","task info result ","task info result [] error ","checker CheckMigrate_Task "," connection serviceContent vmProvisioningChecker "," connection serviceContent "," connection ","options [] ","options []= "," get_raw_host "," raise ","vm_mob_ref is_a? "," connection searchIndex FindAllByUuid first "," connection searchIndex FindAllByUuid "," connection searchIndex ","options key? ","options [] nil? ","vm_mob_ref MigrateVM_Task  info state ","checker CheckMigrate_Task  info state ","vm_mob_ref MigrateVM_Task  info ","checker CheckMigrate_Task  info ","vm_mob_ref MigrateVM_Task  wait_for_completion ","checker CheckMigrate_Task  wait_for_completion "," connection searchIndex FindAllByUuid first  MigrateVM_Task ","vm_mob_ref MigrateVM_Task _options merge ","checker CheckMigrate_Task _options merge ","options []  to_s ","vm_mob_ref MigrateVM_Task  info result [] warning ","checker CheckMigrate_Task  info result [] warning ","vm_mob_ref MigrateVM_Task  info result [] ","checker CheckMigrate_Task  info result [] ","vm_mob_ref MigrateVM_Task  info result ","checker CheckMigrate_Task  info result ","vm_mob_ref MigrateVM_Task  info result [] error ","checker CheckMigrate_Task  info result [] error "," connection serviceContent vmProvisioningChecker  CheckMigrate_Task "," connection searchIndex FindAllByUuid first  is_a? "]}," Fog Vsphere Compute Mock vm_execute":{"type":"method","name":"vm_execute","children":[],"call":[" raise ","options key? "]}," Fog Vsphere Compute Real vm_execute":{"type":"method","name":"vm_execute","children":[],"call":["gom processManager StartProgramInGuest ","gom processManager "," connection serviceContent guestOperationsManager "," connection serviceContent "," connection ","RbVmomi VIM  GuestProgramSpec ","options [] ","RbVmomi VIM  NamePasswordAuthentication "," connection searchIndex FindAllByUuid first "," connection searchIndex FindAllByUuid "," connection searchIndex "," raise ","options key? "," connection serviceContent guestOperationsManager  processManager StartProgramInGuest "," connection serviceContent guestOperationsManager  processManager "]}," Fog Vsphere Compute Mock vm_destroy":{"type":"method","name":"vm_destroy","children":[],"call":[" raise ","options key? "]}," Fog Vsphere Compute Real vm_destroy":{"type":"method","name":"vm_destroy","children":[],"call":["task info state ","task info ","task wait_for_completion ","vm_mob_ref Destroy_Task "," get_vm_ref ","options [] "," raise ","options key? ","vm_mob_ref Destroy_Task  info state ","vm_mob_ref Destroy_Task  info ","vm_mob_ref Destroy_Task  wait_for_completion "," get_vm_ref  Destroy_Task "]}," Fog Vsphere Compute Mock vm_get_vnc":{"type":"method","name":"vm_get_vnc","children":[],"call":[]}," Fog Vsphere Compute Mock vm_config_vnc":{"type":"method","name":"vm_config_vnc","children":[],"call":[" raise ","options key? "]}," Fog Vsphere Compute Real vm_get_vnc":{"type":"method","name":"vm_get_vnc","children":[],"call":["Hash  [] ","(send\n  (send\n    (send\n      (lvar :vm) :config) :extraConfig) :map) compact ","config value ","Regexp  last_match to_sym ","Regexp  last_match ","config key =~ ","config key ","vm config extraConfig map ","vm config extraConfig ","vm config "," connection searchIndex FindAllByUuid first "," connection searchIndex FindAllByUuid "," connection searchIndex "," connection ","(send\n  (send\n    (send\n      (lvar : connection searchIndex FindAllByUuid first ) :config) :extraConfig) :map) compact "," connection searchIndex FindAllByUuid first  config extraConfig map "," connection searchIndex FindAllByUuid first  config extraConfig "," connection searchIndex FindAllByUuid first  config "]}," Fog Vsphere Compute Real vm_config_vnc":{"type":"method","name":"vm_config_vnc","children":[],"call":["task info state ","task info ","task wait_for_completion ","vm_mob_ref ReconfigVM_Task ","options [] to_s ","options [] "," connection searchIndex FindAllByUuid first "," connection searchIndex FindAllByUuid "," connection searchIndex "," connection "," raise ","options key? ","vm_mob_ref ReconfigVM_Task  info state ","vm_mob_ref ReconfigVM_Task  info ","vm_mob_ref ReconfigVM_Task  wait_for_completion "," connection searchIndex FindAllByUuid first  ReconfigVM_Task "]}," Fog Vsphere Compute Mock vm_clone":{"type":"method","name":"vm_clone","children":[],"call":["Fog Mock  random_numbers "," data [] []= "," data [] "," data ","template clone merge ","options [] ","options [] + ","template clone ","(send\n  (array\n    (int 8)\n    (int 4)\n    (int 4)\n    (int 4)\n    (int 12)) :map) join ","Fog Mock  random_hex ","(int 8) map ","vm [] == ","options [] split [] ","options [] split ","vm [] "," list_virtual_machines find "," list_virtual_machines "," raise "," lambda "," vm_clone_check_options "," vm_clone_check_options  [] "," vm_clone_check_options  [] + "," vm_clone_check_options  [] split [] "," vm_clone_check_options  [] split "," vm_clone_check_ vm_clone_check_options  "]}," Fog Vsphere Compute Real relocate_template_volumes_specs":{"type":"method","name":"relocate_template_volumes_specs","children":[],"call":["specs << "," get_raw_datastore ","new_volume datastore ","template_volume key ","new_volume datastore != ","template_volume backing datastore name ","template_volume backing datastore ","template_volume backing ","template_volumes zip each ","template_volumes zip ","volumes take ","template_volumes size ","vm_mob_ref config hardware device grep ","vm_mob_ref config hardware device ","vm_mob_ref config hardware ","vm_mob_ref config ","RbVmomi VIM  VirtualMachineRelocateSpecDiskLocator "," relocation_volume_backing ","vm_mob_ref config hardware device grep  zip each ","vm_mob_ref config hardware device grep  zip ","vm_mob_ref config hardware device grep  size "]}," Fog Vsphere Compute Real modify_template_volumes_specs":{"type":"method","name":"modify_template_volumes_specs","children":[],"call":["specs concat "," create_disk ","new_volumes map ","volume unit_number= ","volumes index + ","volumes index ","volumes index < ","specs << ","template_volume backing thinProvisioned= ","new_volume thin ","template_volume backing ","template_volume backing diskMode= ","new_volume mode ","template_volume capacityInKB= ","new_volume size ","new_volume size > ","template_volume capacityInKB ","template_volumes zip each ","template_volumes zip ","volumes drop ","template_volumes size ","volumes take ","vm_mob_ref config hardware device grep ","vm_mob_ref config hardware device ","vm_mob_ref config hardware ","vm_mob_ref config ","new_volume key= ","template_volume key ","new_volume unit_number= ","template_volume unitNumber "," modified_volumes ","template_volume backing eagerlyScrub= ","new_volume eager_zero ","new_volume thin ! ","volumes drop  map ","vm_mob_ref config hardware device grep  zip each ","vm_mob_ref config hardware device grep  zip ","vm_mob_ref config hardware device grep  size "," volumes take  "]}," Fog Vsphere Compute Real modify_template_nics_specs":{"type":"method","name":"modify_template_nics_specs","children":[],"call":["specs << "," create_interface ","new_nics each ","interface key ","Fog Vsphere Compute Interface  new "," raw_to_hash ","template_nic connectable= ","RbVmomi VIM  VirtualDeviceConnectInfo ","template_nic macAddress= ","template_nic addressType= ","template_nic backing= "," create_nic_backing ","template_nics zip each ","template_nics zip ","nics drop ","template_nics size ","nics take ","vm_mob_ref config hardware device grep ","vm_mob_ref config hardware device ","vm_mob_ref config hardware ","vm_mob_ref config "," rand -@ "," rand "," create_Fog Vsphere Compute Interface  new  ","nics drop  each ","Fog Vsphere Compute Interface  new  key ","template_nic RbVmomi VIM  VirtualDeviceConnectInfo = ","template_nic  create_nic_backing = "," create_nic_ create_nic_backing  ","vm_mob_ref config hardware device grep  zip each ","vm_mob_ref config hardware device grep  zip ","vm_mob_ref config hardware device grep  size "]}," Fog Vsphere Compute Real modify_template_nics_simple_spec":{"type":"method","name":"modify_template_nics_simple_spec","children":[],"call":["RbVmomi VIM  VirtualDeviceConfigSpec ","RbVmomi VIM  public_send ","RbVmomi VIM  Description ","nic_type to_s ","RbVmomi VIM  VirtualDeviceConnectInfo ","RbVmomi VIM  VirtualEthernetCardNetworkBackingInfo ","RbVmomi VIM  VirtualEthernetCardDistributedVirtualPortBackingInfo ","RbVmomi VIM  DistributedVirtualSwitchPortConnection ","network config distributedVirtualSwitch uuid ","network config distributedVirtualSwitch ","network config ","network key ","network is_a? "," get_raw_network ","RbVmomi VIM  VirtualDeviceConfigSpecOperation "," get_raw_network  config distributedVirtualSwitch uuid "," get_raw_network  config distributedVirtualSwitch "," get_raw_network  config "," get_raw_network  key "," get_raw_network  is_a? "," get_raw_ get_raw_network  "]}," Fog Vsphere Compute Real vm_clone":{"type":"method","name":"vm_clone","children":[],"call":["task _ref "," convert_vm_mob_ref_to_attr_hash ","new_vm _ref "," raise ","dest_folder find ","options [] ","Fog  wait_for ","task wait_for_completion ","options fetch ","vm_mob_ref CloneVM_Task ","result vm ","srm ApplyStorageDrsRecommendation_Task ","result recommendations first key ","result recommendations first ","result recommendations ","srm RecommendDatastores "," connection serviceContent storageResourceManager "," connection serviceContent "," connection ","RbVmomi VIM StoragePlacementSpec  new ","RbVmomi VIM StorageDrsPodSelectionSpec  new "," get_raw_storage_pod ","@vsphere_rev to_f >= ","@vsphere_rev to_f ","options [] nil? ! ","options [] nil? ","options key? ","RbVmomi VIM  VirtualMachineCloneSpec ","relocation_spec []= "," relocate_template_volumes_specs ","options [] blank? ","datastore_obj nil? ","RbVmomi VIM  VirtualMachineRelocateSpec ","vm_mob_ref ReconfigVM_Task wait_for_completion ","vm_mob_ref ReconfigVM_Task ","disk_backing backing parent= ","disk backing ","disk_backing backing ","disk_backing backing fileName= ","disk backing datastore name ","disk backing datastore ","disk_backing backing= ","disk_backing backing dup ","disk dup tap ","disk dup ","(send\n  (lvar :disks) :select) each ","vm_device backing parent nil? ","vm_device backing parent ","vm_device backing ","disks select ","vm_device class == ","vm_device class ","vm_mob_ref config hardware device select ","vm_mob_ref config hardware device ","vm_mob_ref config hardware ","vm_mob_ref config ","customization_spec options= ","customization_spec nicSettingMap= ","customization_spec encryptionKey= ","RbVmomi VIM  CustomizationSpec ","custom_options reboot= ","RBVmomi VIM  CustomizationSysprepRebootOption ","custom_spec [] [] ","custom_spec [] ","(str \"noreboot\") include? ","custom_spec [] key? ","RbVmomi VIM  CustomizationWinOptions ","custom_spec key? ","custom_nicSettingMap << ","custom_adapter_mapping macAddress= ","nic [] ","nic key? ","RbVmomi VIM  CustomizationAdapterMapping ","custom_adapter subnetMask= ","nic [] [] ","nic [] key? ","custom_adapter secondaryWINS= ","custom_adapter primaryWINS= ","custom_adapter netBIOS= ","RbVmomi VIM  CustomizationNetBIOSMode ","(str \"disableNetBIOS\") include? ","custom_adapter ipV6Spec= ","custom_ipv6Spec gateway= ","nic [] [] [] ","nic [] [] key? ","RbVmomi VIM  CustomizationIPSettingsIpV6AddressSpec ","RbVmomi VIM CustomizationDhcpIpV6Generator  new ","RbVmomi VIM  CustomizationFixedIpV6 ","custom_adapter gateway= ","custom_adapter dnsServerList= ","custom_adapter dnsDomain= ","RbVmomi VIM  CustomizationIPSettings ","RbVmomi VIM CustomizationDhcpIpGenerator  new ","RbVmomi VIM  CustomizationFixedIp ","custom_spec [] each ","custom_spec [] [] key? ","custom_spec [] empty? ","RbVmomi VIM  CustomizationSysprepText ","identity [] [] ","identity [] ","identity [] key? ","identity key? ","custom_identity licenseFilePrintData= ","custom_identity guiRunOnce= ","RbVmomi VIM  CustomizationSysprep ","RbVmomi VIM  CustomizationUserData ","RbVmomi VIM  CustomizationFixedName ","identity [] [] [] ","identity [] [] key? ","custom_licenseFilePrintData autoUsers= ","identity [] [] [] == ","RbVmomi VIM  CustomizationLicenseFilePrintData ","RbVmomi VIM  CustomizationLicenseDataMode ","(str \"perSeat\") include? ","custom_identification domainAdminPassword= ","RbVmomi VIM  CustomizationPassword ","identity [] [] [] [] ","custom_identification domainAdmin= ","custom_identification joinDomain= ","identity [] [] [] key? ","custom_identification joinWorkgroup= ","RbVmomi VIM  CustomizationIdentification ","custom_guiUnattended password= ","RbVmomi VIM  CustomizationGuiUnattended ","RbVmomi VIM  CustomizationGuiRunOnce ","custom_identity timeZone= ","custom_identity hwClockUTC= ","custom_identity hostName= ","RbVmomi VIM  CustomizationLinuxPrep ","custom_globalIPSettings dnsSuffixList= ","custom_globalIPSettings dnsServerList= ","RbVmomi VIM CustomizationGlobalIPSettings  new ","custom_spec [] [] [] []= ","custom_spec [] [] [] ","custom_spec [] [] []= ","custom_spec [] []= ","custom_spec []= ","custom_spec [] key? ! ","virtual_machine_config_spec bootOptions= ","RbVmomi VIM VirtualMachineBootOptionsBootableFloppyDevice  new ","RbVmomi VIM VirtualMachineBootOptionsBootableCdromDevice  new ","RbVmomi VIM VirtualMachineBootOptionsBootableDiskDevice  new ","disk key ","disks map ","change [] ","(send\n  (lvar :device_change) :select) map ","change [] is_a? ","(sym :edit) include? ","device_change select ","RbVmomi VIM VirtualMachineBootOptionsBootableEthernetDevice  new ","interface key ","interfaces map ","change [] class <= ","change [] class ","boot_device to_sym ","options [] flat_map ","virtual_machine_config_spec extraConfig= "," extra_config ","virtual_machine_config_spec firmware= ","virtual_machine_config_spec memoryHotAddEnabled= ","virtual_machine_config_spec cpuHotAddEnabled= ","virtual_machine_config_spec memoryMB= ","virtual_machine_config_spec numCoresPerSocket= ","virtual_machine_config_spec numCPUs= ","virtual_machine_config_spec deviceChange= ","device_change any? ","device_change concat "," modify_template_volumes_specs ","device_change << "," modify_template_nics_simple_spec "," modify_template_nics_specs ","RbVmomi VIM  VirtualMachineConfigSpec "," get_raw_datastore "," get_raw_host ","cluster_name nil? ! ","cluster_name nil? ","options [] empty? ! ","options [] empty? ","vm_mob_ref resourcePool ","esx_host parent resourcePool ","esx_host parent ","vm_mob_ref resourcePool nil? ","vm_mob_ref collect! [] ","vm_mob_ref collect! "," get_raw_resource_pool ","options [] [] ","options [] [] == ","options [] length == ","options [] length ","options [] is_a? ","options [] [] != "," get_raw_vmfolder "," get_vm_ref "," vm_clone_check_options ","options [] ! ","recoms first key ","recoms first ","grouped_recoms map ","grouped_recoms keys size == ","disks_per_pod size ","grouped_recoms keys size ","grouped_recoms keys ","rec target _ref ","rec target ","result recommendations group_by "," pod_selection_spec ","disks_per_pod [] concat ","disks_per_pod delete ","disks_per_pod [] ","disks_per_pod key? ","options [] group_by ","srm ApplyStorageDrsRecommendation_Task wait_for_completion ","new_disks_per_pod size "," add_new_volumes_specs "," group_disks_by_storage_pod ","new_volumes empty? ! ","new_volumes empty? "," new_volumes "," modified_volumes ","virtual_machine_config_spec annotation= ","vm_mob_ref CloneVM_Task  _ref ","srm ApplyStorageDrsRecommendation_Task  _ref "," convert_ get_vm_ref _to_attr_hash ","dest_folder find  _ref ","task wait_for_completion  _ref ","result vm  _ref "," get_raw_vmfolder  find "," vm_clone_check_options  [] ","vm_mob_ref CloneVM_Task  wait_for_completion ","srm ApplyStorageDrsRecommendation_Task  wait_for_completion "," vm_clone_check_options  fetch "," get_vm_ref  CloneVM_Task ","task wait_for_completion  vm ","srm RecommendDatastores  vm "," connection serviceContent storageResourceManager  ApplyStorageDrsRecommendation_Task ","task wait_for_completion  recommendations first key ","srm RecommendDatastores  recommendations first key ","result recommendations first result recommendations first key  ","task wait_for_completion  recommendations first ","srm RecommendDatastores  recommendations first ","task wait_for_completion  recommendations ","srm RecommendDatastores  recommendations "," connection serviceContent storageResourceManager  RecommendDatastores "," vm_clone_check_options  [] nil? ! "," vm_clone_check_options  [] nil? ","options result recommendations first key ? "," vm_clone_check_options  key? ","RbVmomi VIM  VirtualMachineRelocateSpec  []= "," vm_clone_check_options  [] blank? "," get_raw_datastore  nil? "," get_vm_ref  ReconfigVM_Task wait_for_completion "," get_vm_ref  ReconfigVM_Task ","(send\n  (lvar :options [] ) :select) each ","options []  select "," get_vm_ref  config hardware device select "," get_vm_ref  config hardware device "," get_vm_ref  config hardware "," get_vm_ref  config ","RbVmomi VIM  CustomizationSpec  options= ","customization_spec  vm_clone_check_options = ","RbVmomi VIM  CustomizationSpec  nicSettingMap= ","RbVmomi VIM  CustomizationSpec  encryptionKey= ","RbVmomi VIM  CustomizationWinOptions  reboot= ","custom_ vm_clone_check_options  reboot= ","options []  [] [] ","options []  [] ","custom_spec [] result recommendations first key ? ","options []  [] key? ","custom_spec result recommendations first key ? ","options []  key? ","RbVmomi VIM  CustomizationAdapterMapping  macAddress= ","RbVmomi VIM  CustomizationIPSettings _mapping macAddress= ","nic result recommendations first key ? ","RbVmomi VIM  CustomizationIPSettings  subnetMask= ","nic [] result recommendations first key ? ","RbVmomi VIM  CustomizationIPSettings  secondaryWINS= ","RbVmomi VIM  CustomizationIPSettings  primaryWINS= ","RbVmomi VIM  CustomizationIPSettings  netBIOS= ","RbVmomi VIM  CustomizationIPSettings  ipV6Spec= ","RbVmomi VIM  CustomizationIPSettingsIpV6AddressSpec  gateway= ","RbVmomi VIM CustomizationDhcpIpV6Generator  new Spec gateway= ","RbVmomi VIM  CustomizationFixedIpV6 Spec gateway= ","RbVmomi VIM CustomizationDhcpIpGenerator  new v6Spec gateway= ","RbVmomi VIM  CustomizationFixedIp v6Spec gateway= ","nic [] [] result recommendations first key ? ","RbVmomi VIM  CustomizationIPSettings  gateway= ","RbVmomi VIM  CustomizationIPSettings  dnsServerList= ","RbVmomi VIM  CustomizationIPSettings  dnsDomain= ","options []  [] each ","custom_spec [] [] result recommendations first key ? ","options []  [] [] key? ","options []  [] empty? ","custom_spec []  [] [] ","custom_spec []  [] ","identity [] result recommendations first key ? ","custom_spec []  [] key? ","identity result recommendations first key ? ","custom_spec []  key? ","RbVmomi VIM  CustomizationSysprepText  licenseFilePrintData= ","RbVmomi VIM  CustomizationSysprep  licenseFilePrintData= ","RbVmomi VIM  CustomizationLinuxPrep  licenseFilePrintData= ","custom_custom_spec []  licenseFilePrintData= ","RbVmomi VIM  CustomizationSysprepText  guiRunOnce= ","RbVmomi VIM  CustomizationSysprep  guiRunOnce= ","RbVmomi VIM  CustomizationLinuxPrep  guiRunOnce= ","custom_custom_spec []  guiRunOnce= ","custom_spec []  [] [] [] ","identity [] [] result recommendations first key ? ","custom_spec []  [] [] key? ","RbVmomi VIM  CustomizationLicenseFilePrintData  autoUsers= ","custom_spec []  [] [] [] == ","RbVmomi VIM  CustomizationIdentification  domainAdminPassword= ","custom_spec []  [] [] [] [] ","RbVmomi VIM  CustomizationIdentification  domainAdmin= ","RbVmomi VIM  CustomizationIdentification  joinDomain= ","identity [] [] [] result recommendations first key ? ","custom_spec []  [] [] [] key? ","RbVmomi VIM  CustomizationIdentification  joinWorkgroup= ","RbVmomi VIM  CustomizationGuiUnattended  password= ","RbVmomi VIM  CustomizationSysprepText  timeZone= ","RbVmomi VIM  CustomizationSysprep  timeZone= ","RbVmomi VIM  CustomizationLinuxPrep  timeZone= ","custom_custom_spec []  timeZone= ","RbVmomi VIM  CustomizationSysprepText  hwClockUTC= ","RbVmomi VIM  CustomizationSysprep  hwClockUTC= ","RbVmomi VIM  CustomizationLinuxPrep  hwClockUTC= ","custom_custom_spec []  hwClockUTC= ","RbVmomi VIM  CustomizationSysprepText  hostName= ","RbVmomi VIM  CustomizationSysprep  hostName= ","RbVmomi VIM  CustomizationLinuxPrep  hostName= ","custom_custom_spec []  hostName= ","custom_identity  get_raw_host Name= ","RbVmomi VIM CustomizationGlobalIPSettings  new  dnsSuffixList= ","RbVmomi VIM CustomizationGlobalIPSettings  new  dnsServerList= ","options []  [] [] [] []= ","options []  [] [] [] ","options []  [] [] []= ","options []  [] []= ","options []  []= ","custom_spec [] result recommendations first key ? ! ","options []  [] key? ! ","RbVmomi VIM  VirtualMachineConfigSpec  bootOptions= ","disk result recommendations first key  ","options []  map ","interface result recommendations first key  "," vm_clone_check_options  [] flat_map ","RbVmomi VIM  VirtualMachineConfigSpec  extraConfig= ","RbVmomi VIM  VirtualMachineConfigSpec  firmware= ","RbVmomi VIM  VirtualMachineConfigSpec  memoryHotAddEnabled= ","RbVmomi VIM  VirtualMachineConfigSpec  cpuHotAddEnabled= ","RbVmomi VIM  VirtualMachineConfigSpec  memoryMB= ","RbVmomi VIM  VirtualMachineConfigSpec  numCoresPerSocket= ","RbVmomi VIM  VirtualMachineConfigSpec  numCPUs= ","RbVmomi VIM  VirtualMachineConfigSpec  deviceChange= "," get_raw_ get_raw_host  ","options [] []  nil? ! ","options [] []  nil? "," vm_clone_check_options  [] empty? ! "," vm_clone_check_options  [] empty? "," get_vm_ref  resourcePool ","esx_ get_raw_host  parent resourcePool ","vm_mob_ref collect! []  parent resourcePool ","esx_ get_raw_host  parent ","vm_mob_ref collect! []  parent "," get_vm_ref  resourcePool nil? "," get_vm_ref  collect! [] "," get_vm_ref  collect! "," get_raw_esx_host parent resourcePool  "," get_raw_ get_raw_resource_pool  "," vm_clone_check_options  [] [] "," vm_clone_check_options  [] [] == "," vm_clone_check_options  [] length == "," vm_clone_check_options  [] length "," vm_clone_check_options  [] is_a? "," vm_clone_check_options  [] [] != "," vm_clone_check_ vm_clone_check_options  "," vm_clone_check_options  [] ! ","recoms first result recommendations first key  ","grouped_recoms result recommendations first key s size == ","options [] _per_pod size ","options [] group_by  size "," group_disks_by_storage_pod  size ","grouped_recoms result recommendations first key s size ","grouped_recoms result recommendations first key s ","task wait_for_completion  recommendations group_by ","srm RecommendDatastores  recommendations group_by ","options [] _per_pod [] concat ","options [] group_by  [] concat "," group_disks_by_storage_pod  [] concat ","options [] _per_pod delete ","options [] group_by  delete "," group_disks_by_storage_pod  delete ","options [] _per_pod [] ","options [] group_by  [] "," group_disks_by_storage_pod  [] ","disks_per_pod result recommendations first key ? ","options [] _per_pod key? ","options [] group_by  key? "," group_disks_by_storage_pod  key? "," vm_clone_check_options  [] group_by "," connection serviceContent storageResourceManager  ApplyStorageDrsRecommendation_Task wait_for_completion ","new_options [] _per_pod size ","new_options [] group_by  size ","new_ group_disks_by_storage_pod  size "," add_ new_volumes _specs "," group_options [] _by_storage_pod "," new_volumes  empty? ! "," new_volumes  empty? ","  new_volumes  ","RbVmomi VIM  VirtualMachineConfigSpec  annotation= "]}," Fog Vsphere Compute Shared vm_clone_check_options":{"type":"method","name":"vm_clone_check_options","children":[],"call":[" raise ","options [] "," get_raw_storage_pod ! "," get_raw_storage_pod ","options [] nil? ! ","options [] nil? ","options key? ","options fetch ","options [] [] "," get_raw_cluster "," get_virtual_machine "," get_datacenter ","required_options join ","required_options each ","options []= ","options [] == ","default_options merge "," get_raw_datastore ! "," get_raw_datastore "," get_datacenter ! ","default_options merge  [] ","default_options merge  [] nil? ! ","default_options merge  [] nil? ","default_options merge  key? ","default_options merge  fetch ","default_options merge  [] [] ","required_default_options merge  join ","required_default_options merge  each ","default_options merge  []= ","default_options merge  [] == ","default_default_options merge  merge "]}," Fog Vsphere Compute Mock vm_acquire_ticket":{"type":"method","name":"vm_acquire_ticket","children":[],"call":[" raise ","options key? "]}," Fog Vsphere Compute Real vm_acquire_ticket":{"type":"method","name":"vm_acquire_ticket","children":[],"call":["ticket sslThumbprint ","ticket port ","ticket host ","ticket ticket ","vm_mob_ref AcquireTicket "," get_vm_ref ","options [] "," raise ","options key? ","vm_mob_ref AcquireTicket  sslThumbprint ","vm_mob_ref AcquireTicket  port ","vm_mob_ref AcquireTicket  host ","vm_mob_ref AcquireTicket  vm_mob_ref AcquireTicket  "," get_vm_ref  AcquireTicket "]}," Fog Vsphere Compute Real upload_iso":{"type":"method","name":"upload_iso","children":[],"call":["datastore exists? ","options [] + + ","options [] + ","options [] ","datastore upload "," connection serviceContent fileManager MakeDirectory "," connection serviceContent fileManager "," connection serviceContent "," connection ","File  basename "," get_raw_datacenter "," get_raw_datastore "," upload_iso_check_options "," get_raw_datastore  exists? "," upload_iso_check_options  [] + + "," upload_iso_check_options  [] + "," upload_iso_check_options  [] "," get_raw_datastore  upload "," get_raw_ get_raw_datacenter  "," get_raw_ get_raw_datastore  "," upload_iso_check_ upload_iso_check_options  "]}," Fog Vsphere Compute Real upload_iso_check_options":{"type":"method","name":"upload_iso_check_options","children":[],"call":[" raise ","options [] "," get_raw_datastore "," get_datacenter ","required_options join ","options key? ","required_options each ","default_options merge ","default_options merge  [] ","required_default_options merge  join ","default_options merge  key? ","required_default_options merge  each ","default_default_options merge  merge "]}," Fog Vsphere Compute Mock update_vm":{"type":"method","name":"update_vm","children":[],"call":[]}," Fog Vsphere Compute Real nic_backing_different?":{"type":"method","name":"nic_backing_different?","children":[],"call":["one deviceType != "," twp device "," twp ","one deviceType ","one deviceName != ","two deviceName ","one deviceName ","one is_a? ","one port switchUuid != ","two port switchUuid ","two port ","one port switchUuid ","one port ","one port portgroupKey != ","two port portgroupKey ","one port portgroupKey ","one class != ","two class ","one class "]}," Fog Vsphere Compute Real update_volume_attributes":{"type":"method","name":"update_volume_attributes","children":[],"call":["vm_volume backing thinProvisioned= ","fog_volume thin ","vm_volume backing ","vm_volume backing diskMode= ","fog_volume mode ","vm_volume capacityInKB= ","fog_volume size "]}," Fog Vsphere Compute Real update_vm_volumes_specs":{"type":"method","name":"update_vm_volumes_specs","children":[],"call":["specs concat "," create_disk ","new_volumes map ","new_volumes any? ","specs << "," update_volume_attributes ","vm_volumes zip each ","vm_volumes zip ","volumes to_a drop ","vm_volumes size ","volumes to_a ","volumes to_a take ","vm_mob_ref config hardware device grep ","vm_mob_ref config hardware device ","vm_mob_ref config hardware ","vm_mob_ref config ","volumes to_a drop  map ","volumes to_a drop  any? ","vm_mob_ref config hardware device grep  zip each ","vm_mob_ref config hardware device grep  zip ","vm_mob_ref config hardware device grep  size "]}," Fog Vsphere Compute Real update_vm_interfaces_specs":{"type":"method","name":"update_vm_interfaces_specs","children":[],"call":["specs concat "," create_interface ","new_nics map ","new_nics any? ","specs << ","vm_nic backing= "," nic_backing_different? ","vm_nic backing "," create_nic_backing ","vm_nics zip each ","vm_nics zip ","fog_interfaces to_a drop ","vm_nics size ","fog_interfaces to_a ","fog_interfaces to_a take ","vm_mob_ref config hardware device grep ","vm_mob_ref config hardware device ","vm_mob_ref config hardware ","vm_mob_ref config ","fog_interfaces to_a drop  map ","fog_interfaces to_a drop  any? ","vm_nic  create_nic_backing = "," nic_ create_nic_backing _different? ","vm_nic  create_nic_backing  "," create_nic_ create_nic_backing  ","vm_mob_ref config hardware device grep  zip each ","vm_mob_ref config hardware device grep  zip ","vm_mob_ref config hardware device grep  size "]}," Fog Vsphere Compute Real update_vm":{"type":"method","name":"update_vm","children":[],"call":[" vm_reconfig_hardware ","attributes [] ","spec empty? ","spec []= ","device_change empty? ","device_change concat "," update_vm_interfaces_specs ","server interfaces "," update_vm_volumes_specs ","server volumes "," get_vm_ref ","server attributes ","server attributes  [] ","server server attributes  "]}," Fog Vsphere Compute Mock set_vm_customvalue":{"type":"method","name":"set_vm_customvalue","children":[],"call":[]}," Fog Vsphere Compute Real set_vm_customvalue":{"type":"method","name":"set_vm_customvalue","children":[],"call":["vm_ref setCustomValue "," get_vm_ref "," get_vm_ref  setCustomValue "," get_ get_vm_ref  "]}," Fog Vsphere Compute Mock revert_to_snapshot":{"type":"method","name":"revert_to_snapshot","children":[],"call":[" raise ","snapshot nil? "]}," Fog Vsphere Compute Real revert_to_snapshot":{"type":"method","name":"revert_to_snapshot","children":[],"call":["task info state ","task info ","task wait_for_completion ","snapshot mo_ref RevertToSnapshot_Task ","snapshot mo_ref "," raise ","Snapshot  === ","snapshot mo_ref RevertToSnapshot_Task  info state ","snapshot mo_ref RevertToSnapshot_Task  info ","snapshot mo_ref RevertToSnapshot_Task  wait_for_completion "]}," Fog Vsphere Compute Mock destroy_vm_volume":{"type":"method","name":"destroy_vm_volume","children":[],"call":[]}," Fog Vsphere Compute Mock remove_vm_volume":{"type":"method","name":"remove_vm_volume","children":[],"call":[]}," Fog Vsphere Compute Mock add_vm_volume":{"type":"method","name":"add_vm_volume","children":[],"call":[" vm_reconfig_hardware "," create_cdrom ","volume server_id "]}," Fog Vsphere Compute Real destroy_vm_volume":{"type":"method","name":"destroy_vm_volume","children":[],"call":[" vm_reconfig_hardware "," create_disk ","volume server_id "]}," Fog Vsphere Compute Real remove_vm_volume":{"type":"method","name":"remove_vm_volume","children":[],"call":[" vm_reconfig_hardware "," create_disk ","volume server_id "]}," Fog Vsphere Compute Real add_vm_volume":{"type":"method","name":"add_vm_volume","children":[],"call":[" vm_reconfig_hardware "," create_disk ","volume server_id "]}," Fog Vsphere Compute Mock update_vm_interface":{"type":"method","name":"update_vm_interface","children":[],"call":["options [] type= ","options [] ","options [] network= "]}," Fog Vsphere Compute Mock destroy_vm_interface":{"type":"method","name":"destroy_vm_interface","children":[],"call":[" raise ","options [] "]}," Fog Vsphere Compute Mock add_vm_interface":{"type":"method","name":"add_vm_interface","children":[],"call":[" raise ","options [] "]}," Fog Vsphere Compute Real apply_options_to_raw_interface":{"type":"method","name":"apply_options_to_raw_interface","children":[],"call":["raw_interface connectable send ","raw_interface connectable ","options [] each ","options [] "]}," Fog Vsphere Compute Real get_interface_from_options":{"type":"method","name":"get_interface_from_options","children":[],"call":[" raise ","Fog Vsphere Compute Interface  new ","options [] ","oldattributes merge "," get_vm_interface ","options [] > "," get_vm_interface  merge "]}," Fog Vsphere Compute Real update_vm_interface":{"type":"method","name":"update_vm_interface","children":[],"call":[" vm_reconfig_hardware "," apply_options_to_raw_interface ","raw_interface backing= "," create_nic_backing ","interface network= ","options [] "," get_raw_interface ","interface key "," get_interface_from_options "," raise ","options key? "," apply_options_to_ get_raw_interface  "," apply_options_to_raw_ get_interface_from_options  ","raw_interface  create_nic_backing = "," get_raw_interface  backing= ","raw_ get_interface_from_options  backing= "," create_nic_ create_nic_backing  "," get_interface_from_options  network= "," get_ get_raw_interface  "," get_raw_ get_interface_from_options  "," get_interface_from_options  key "," get_ get_interface_from_options _from_options "]}," Fog Vsphere Compute Real destroy_vm_interface":{"type":"method","name":"destroy_vm_interface","children":[],"call":[" vm_reconfig_hardware "," create_interface ","interface key "," get_interface_from_options ","options merge "," raise "," create_ get_interface_from_options  "," get_interface_from_options  key "," get_ get_interface_from_options _from_options "]}," Fog Vsphere Compute Real add_vm_interface":{"type":"method","name":"add_vm_interface","children":[],"call":[" vm_reconfig_hardware "," create_interface "," get_interface_from_options ","options merge "," raise "," create_ get_interface_from_options  "," get_ get_interface_from_options _from_options "]}," Fog Vsphere Compute Mock add_vm_controller":{"type":"method","name":"add_vm_controller","children":[],"call":[" vm_reconfig_hardware "," create_controller ","controller server_id "]}," Fog Vsphere Compute Real add_vm_controller":{"type":"method","name":"add_vm_controller","children":[],"call":[" vm_reconfig_hardware "," create_controller ","controller server_id "]}," Fog Vsphere Compute Mock destroy_vm_cdrom":{"type":"method","name":"destroy_vm_cdrom","children":[],"call":[" vm_reconfig_hardware "," create_cdrom ","cdrom unit_number ","cdrom server instance_uuid ","cdrom server "]}," Fog Vsphere Compute Mock add_vm_cdrom":{"type":"method","name":"add_vm_cdrom","children":[],"call":[" vm_reconfig_hardware "," create_cdrom ","cdrom unit_number ","cdrom server instance_uuid ","cdrom server "]}," Fog Vsphere Compute Real destroy_vm_cdrom":{"type":"method","name":"destroy_vm_cdrom","children":[],"call":[" vm_reconfig_hardware "," create_cdrom ","cdrom unit_number ","cdrom server instance_uuid ","cdrom server "]}," Fog Vsphere Compute Real add_vm_cdrom":{"type":"method","name":"add_vm_cdrom","children":[],"call":[" vm_reconfig_hardware "," create_cdrom ","cdrom unit_number ","cdrom server instance_uuid ","cdrom server "]}," Fog Vsphere Compute Mock list_vm_volumes":{"type":"method","name":"list_vm_volumes","children":[],"call":[]}," Fog Vsphere Compute Real list_vm_volumes":{"type":"method","name":"list_vm_volumes","children":[],"call":["vol controllerKey ","vol unitNumber ","vol key ","vol deviceInfo label ","vol deviceInfo ","vol capacityInKB ","vol backing datastore name ","vol backing datastore ","vol backing ","vol backing fileName ","vol backing diskMode ","vol backing thinProvisioned ","vol backing uuid "," get_vm_ref disks map "," get_vm_ref disks "," get_vm_ref ","vol backing eagerlyScrub "]}," Fog Vsphere Compute Mock list_vm_snapshots":{"type":"method","name":"list_vm_snapshots","children":[],"call":["Time  now utc ","Time  now "]}," Fog Vsphere Compute Real snapshot_info":{"type":"method","name":"snapshot_info","children":[],"call":["snap_tree name ","snap_tree snapshot _ref ","snap_tree snapshot ","snap_tree state ","snap_tree createTime ","snap_tree description ","snap_tree quiesced "]}," Fog Vsphere Compute Real list_vm_snapshots":{"type":"method","name":"list_vm_snapshots","children":[],"call":["root_snapshots flatten compact ","root_snapshots flatten "," list_child_snapshots ","opts [] "," snapshot_info ","vm_snapshot_info rootSnapshotList map ","vm_snapshot_info rootSnapshotList "," get_vm_ref snapshot "," get_vm_ref "," get_vm_ref snapshot  rootSnapshotList map "," get_vm_ref snapshot  rootSnapshotList "]}," Fog Vsphere Compute Mock list_vm_scsi_controllers":{"type":"method","name":"list_vm_scsi_controllers","children":[],"call":["h merge "," data [] [] [] map "," data [] [] [] "," data [] [] "," data [] "," data "," data [] [] key? "," raise "," data [] key? "]}," Fog Vsphere Compute Real list_vm_scsi_controllers_raw":{"type":"method","name":"list_vm_scsi_controllers_raw","children":[],"call":["ctrl key ","ctrl scsiCtlrUnitNumber ","ctrl sharedBus to_s ","ctrl sharedBus ","ctrl class to_s ","ctrl class "," get_vm_ref config hardware device grep map "," get_vm_ref config hardware device grep "," get_vm_ref config hardware device "," get_vm_ref config hardware "," get_vm_ref config "," get_vm_ref "]}," Fog Vsphere Compute Real list_vm_scsi_controllers":{"type":"method","name":"list_vm_scsi_controllers","children":[],"call":["Fog Vsphere Compute SCSIController  new "," list_vm_scsi_controllers_raw map "," list_vm_scsi_controllers_raw "]}," Fog Vsphere Compute Mock list_vm_interfaces":{"type":"method","name":"list_vm_interfaces","children":[],"call":[]}," Fog Vsphere Compute Real raw_to_hash":{"type":"method","name":"raw_to_hash","children":[],"call":["nic key ","nic class ","nic deviceInfo summary ","nic deviceInfo ","nic connectable connected ","nic connectable ","nic connectable status ","nic macAddress ","nic deviceInfo label ","nic backing port portgroupKey ","nic backing port ","nic backing ","nic backing respond_to? ","nic backing network name ","nic backing network ","(send\n  (lvar :opaquenetworks) :find) [] ","nic backing opaqueNetworkId == ","opaquenetwork [] ","nic backing opaqueNetworkId ","opaquenetworks find ","net key? "," list_networks select "," list_networks ","nic backing nic backing port portgroupKey  name ","nic backing nic backing network name  name ","nic backing (send\n  (lvar :opaquenetworks) :find) []  name ","nic backing nic backing port portgroupKey  ","nic backing nic backing network name  ","nic backing (send\n  (lvar :opaquenetworks) :find) []  ","(send\n  (lvar :opaquenic backing port portgroupKey s) :find) [] ","(send\n  (lvar :opaquenic backing network name s) :find) [] ","(send\n  (lvar :opaque(send\n  (lvar :opaquenetworks) :find) [] s) :find) [] ","opaquenic backing port portgroupKey  [] ","opaquenic backing network name  [] ","opaque(send\n  (lvar :opaquenetworks) :find) []  [] ","opaquenic backing port portgroupKey s find ","opaquenic backing network name s find ","opaque(send\n  (lvar :opaquenetworks) :find) [] s find "," list_nic backing port portgroupKey s select "," list_nic backing network name s select "," list_(send\n  (lvar :opaquenetworks) :find) [] s select "," list_nic backing port portgroupKey s "," list_nic backing network name s "," list_(send\n  (lvar :opaquenetworks) :find) [] s "]}," Fog Vsphere Compute Real get_raw_interface":{"type":"method","name":"get_raw_interface","children":[],"call":["nic deviceInfo label == ","options [] ","nic deviceInfo label ","nic deviceInfo ","options key? ","nic macAddress == ","nic macAddress ","nic key == ","options [] to_i ","nic key "," get_raw_interfaces find "," get_raw_interfaces "," raise ","options is_a? "]}," Fog Vsphere Compute Real get_raw_interfaces":{"type":"method","name":"get_raw_interfaces","children":[],"call":[" get_vm_ref config hardware device grep "," get_vm_ref config hardware device "," get_vm_ref config hardware "," get_vm_ref config "," get_vm_ref "]}," Fog Vsphere Compute Real get_vm_interface":{"type":"method","name":"get_vm_interface","children":[],"call":[" raw_to_hash "," get_raw_interface ","options [] ","  get_raw_interface _to_hash "," get_ get_raw_interface _interface "]}," Fog Vsphere Compute Real list_vm_interfaces":{"type":"method","name":"list_vm_interfaces","children":[],"call":[" raw_to_hash "," get_raw_interfaces map "," get_raw_interfaces "]}," Fog Vsphere Compute Mock list_vm_customfields":{"type":"method","name":"list_vm_customfields","children":[],"call":[]}," Fog Vsphere Compute Real list_vm_customvalues":{"type":"method","name":"list_vm_customvalues","children":[],"call":["customvalue value ","customvalue key to_i ","customvalue key "," get_vm_ref summary customValue map "," get_vm_ref summary customValue "," get_vm_ref summary "," get_vm_ref "]}," Fog Vsphere Compute Mock list_vm_cdroms":{"type":"method","name":"list_vm_cdroms","children":[],"call":["h merge "," data [] [] [] map "," data [] [] [] "," data [] [] "," data [] "," data "," data [] [] key? "," raise "," data [] key? "]}," Fog Vsphere Compute Real list_vm_cdroms":{"type":"method","name":"list_vm_cdroms","children":[],"call":["cdrom connectable connected ","cdrom connectable ","cdrom connectable allowGuestControl ","cdrom connectable startConnected ","cdrom unitNumber ","cdrom controllerKey ","cdrom key ","cdrom deviceInfo label ","cdrom deviceInfo ","cdrom backing fileName ","cdrom backing ","(send\n  (send\n    (send\n      (send\n        (send nil :get_vm_ref\n          (lvar :vm_id)) :config) :hardware) :device) :select) map ","hw class == ","hw class "," get_vm_ref config hardware device select "," get_vm_ref config hardware device "," get_vm_ref config hardware "," get_vm_ref config "," get_vm_ref "]}," Fog Vsphere Compute Mock list_virtual_machines":{"type":"method","name":"list_virtual_machines","children":[],"call":["vm [] == ","v to_s ","vm [] ","k to_s ","options all? "," data [] values select "," data [] values "," data [] "," data ","v nil? ","options reject! ","options delete ","options [] ","server nil? "," data [] [] "," data [] []  nil? "]}," Fog Vsphere Compute Mock get_folder_path":{"type":"method","name":"get_folder_path","children":[],"call":[]}," Fog Vsphere Compute Real get_folder_path":{"type":"method","name":"get_folder_path","children":[],"call":["folder name "," get_folder_path ","folder parent ","folder == ","folder methods include? ! ","folder methods include? ","folder methods "]}," Fog Vsphere Compute Real raw_list_all_virtual_machines":{"type":"method","name":"raw_list_all_virtual_machines","children":[],"call":["(send\n  (lvar :datacenters) :map) flatten "," list_container_view ","datacenters map "," find_datacenters ","(send\n  (lvar : find_datacenters ) :map) flatten "," find_datacenters  map "," find_ find_datacenters  "]}," Fog Vsphere Compute Real list_all_virtual_machines":{"type":"method","name":"list_all_virtual_machines","children":[],"call":["v [] ","vms delete_if "," convert_vm_view_to_attr_hash "," raw_list_all_virtual_machines ","options [] "," convert_vm_view_to_attr_hash  delete_if "]}," Fog Vsphere Compute Real folder_enumerator":{"type":"method","name":"folder_enumerator","children":[],"call":["yielder yield "," folder_enumerator each "," folder_enumerator ","raw_folder children each ","raw_folder children ","Enumerator  new "]}," Fog Vsphere Compute Real raw_list_all_virtual_machines_in_folder":{"type":"method","name":"raw_list_all_virtual_machines_in_folder","children":[],"call":[" folder_enumerator "," get_raw_vmfolder ","  get_raw_vmfolder _enumerator "," get_raw_vm get_raw_vmfolder  "]}," Fog Vsphere Compute Real list_all_virtual_machines_in_folder":{"type":"method","name":"list_all_virtual_machines_in_folder","children":[],"call":["vms map "," method ","v config template ","v config ","v config nil? ","vms delete_if "," raw_list_all_virtual_machines_in_folder to_a "," raw_list_all_virtual_machines_in_folder "," raw_list_all_virtual_machines_in_folder to_a  map "," raw_list_all_virtual_machines_in_folder to_a  delete_if "]}," Fog Vsphere Compute Real list_virtual_machines":{"type":"method","name":"list_virtual_machines","children":[],"call":[" list_all_virtual_machines "," list_all_virtual_machines_in_folder ","options [] "," get_virtual_machine "]}," Fog Vsphere Compute Mock list_templates":{"type":"method","name":"list_templates","children":[],"call":[]}," Fog Vsphere Compute Real list_all_templates":{"type":"method","name":"list_all_templates","children":[],"call":["vms map "," method ","v config template ! ","v config template ","v config ","v config nil? ","vms delete_if ","(send\n  (lvar :datacenters) :map) flatten "," list_container_view ","datacenters map "," find_datacenters ","options [] ","(send\n  (lvar :datacenters) :map) flatten  map ","(send\n  (lvar :datacenters) :map) flatten  delete_if ","(send\n  (lvar : find_datacenters ) :map) flatten "," find_datacenters  map "," find_ find_datacenters  "]}," Fog Vsphere Compute Real list_all_templates_in_folder":{"type":"method","name":"list_all_templates_in_folder","children":[],"call":["vms map "," method ","v config template ! ","v config template ","v config ","v config nil? ","vms delete_if ","folder children grep ","folder children "," get_raw_vmfolder ","folder children grep  map ","folder children grep  delete_if "," get_raw_vmfolder  children grep "," get_raw_vmfolder  children "," get_raw_vm get_raw_vmfolder  "]}," Fog Vsphere Compute Real list_templates":{"type":"method","name":"list_templates","children":[],"call":[" list_all_templates "," list_all_templates_in_folder ","options [] "]}," Fog Vsphere Compute Mock list_storage_pods":{"type":"method","name":"list_storage_pods","children":[],"call":[" data [] "," data ","h [] == ","filters [] ","h [] "," data [] select ","filters key? "]}," Fog Vsphere Compute Real storage_pod_attribute_mapping":{"type":"method","name":"storage_pod_attribute_mapping","children":[],"call":[]}," Fog Vsphere Compute Real storage_pod_filter_prop_set":{"type":"method","name":"storage_pod_filter_prop_set","children":[],"call":[" storage_pod_attribute_mapping values "," storage_pod_attribute_mapping "]}," Fog Vsphere Compute Real storage_pod_filter_spec":{"type":"method","name":"storage_pod_filter_spec","children":[],"call":["RbVmomi VIM  PropertyFilterSpec "," storage_pod_filter_prop_set "," folder_traversal_spec ","obj datastoreFolder "]}," Fog Vsphere Compute Real list_storage_pods":{"type":"method","name":"list_storage_pods","children":[],"call":[" map_attrs_to_hash merge "," managed_obj_id ","storage_pod obj "," map_attrs_to_hash "," storage_pod_attribute_mapping ","storage_pods map "," property_collector_results "," storage_pod_filter_spec "," find_raw_datacenter ","filters [] "," property_collector_results  map "]}," Fog Vsphere Compute Mock list_server_types":{"type":"method","name":"list_server_types","children":[],"call":[]}," Fog Vsphere Compute Real server_type_attributes":{"type":"method","name":"server_type_attributes","children":[],"call":["servertype fullName ","servertype family ","servertype id "]}," Fog Vsphere Compute Real raw_server_types":{"type":"method","name":"raw_server_types","children":[],"call":["environmentBrowser QueryConfigOption [] ","environmentBrowser QueryConfigOption ","datacenter hostFolder childEntity grep first environmentBrowser ","datacenter hostFolder childEntity grep first ","datacenter hostFolder childEntity grep ","datacenter hostFolder childEntity ","datacenter hostFolder "," find_raw_datacenter ","datacenter hostFolder childEntity grep first environmentBrowser  QueryConfigOption [] ","datacenter hostFolder childEntity grep first environmentBrowser  QueryConfigOption ","datacenter hostFolder childEntity grep first datacenter hostFolder childEntity grep first environmentBrowser  "," find_raw_datacenter  hostFolder childEntity grep first environmentBrowser "," find_raw_datacenter  hostFolder childEntity grep first "," find_raw_datacenter  hostFolder childEntity grep "," find_raw_datacenter  hostFolder childEntity "," find_raw_datacenter  hostFolder "," find_raw_ find_raw_datacenter  "]}," Fog Vsphere Compute Real list_server_types":{"type":"method","name":"list_server_types","children":[],"call":["(send\n  (lvar :servertypes) :map) compact "," server_type_attributes ","servertypes map "," raw_server_types ","filters [] ","(send\n  (lvar : raw_server_types ) :map) compact "," raw_server_types  map "]}," Fog Vsphere Compute Mock list_rules":{"type":"method","name":"list_rules","children":[],"call":["r [] == ","filters [] ","r [] "," data [] values select "," data [] values "," data [] "," data "]}," Fog Vsphere Compute Real rule_attributes":{"type":"method","name":"rule_attributes","children":[],"call":["attributes []= ","rule [] ","rule class to_s == ","rule class to_s ","rule class ","vm config instanceUuid ","vm config ","rule [] map ","filters [] "]}," Fog Vsphere Compute Real list_rules":{"type":"method","name":"list_rules","children":[],"call":[" rule_attributes ","cluster configurationEx rule map ","cluster configurationEx rule ","cluster configurationEx "," get_raw_cluster ","filters [] "," get_raw_cluster  configurationEx rule map "," get_raw_cluster  configurationEx rule "," get_raw_cluster  configurationEx "," get_raw_ get_raw_cluster  "]}," Fog Vsphere Compute Mock list_resource_pools":{"type":"method","name":"list_resource_pools","children":[],"call":[]}," Fog Vsphere Compute Real resource_pool_attributes":{"type":"method","name":"resource_pool_attributes","children":[],"call":["resource_pool overallStatus ","resource_pool summary configuredMemoryMB ","resource_pool summary "," managed_obj_id ","name empty? "," folder_path gsub "," folder_path ","Regexp  last_match "," folder_path =~ "," folder_path gsub  empty? "]}," Fog Vsphere Compute Real traverse_raw_resource_pools":{"type":"method","name":"traverse_raw_resource_pools","children":[],"call":["pools << "," traverse_raw_resource_pools ","rp each ","rp respond_to? ","rp resourcePool "]}," Fog Vsphere Compute Real list_raw_resource_pools":{"type":"method","name":"list_raw_resource_pools","children":[],"call":["pools uniq "," traverse_raw_resource_pools ","cluster resourcePool "]}," Fog Vsphere Compute Real list_resource_pools":{"type":"method","name":"list_resource_pools","children":[],"call":[" resource_pool_attributes "," list_raw_resource_pools map "," list_raw_resource_pools "," get_raw_cluster ","filters [] "," get_raw_ get_raw_cluster  "]}," Fog Vsphere Compute Mock list_processes":{"type":"method","name":"list_processes","children":[],"call":["Process  new "]}," Fog Vsphere Compute Real list_processes":{"type":"method","name":"list_processes","children":[],"call":["Process  new ","pi startTime ","pi pid ","pi owner ","pi name ","pi exitCode ","pi endTime ","pi cmdLine ","processes map ","p_manager ListProcessesInGuest "," connection serviceContent guestOperationsManager processManager "," connection serviceContent guestOperationsManager "," connection serviceContent "," connection ","RbVmomi VIM  NamePasswordAuthentication ","opts [] "," get_vm_ref ","p_manager ListProcessesInGuest  map "," connection serviceContent guestOperationsManager processManager  ListProcessesInGuest "," get_ get_vm_ref _ref "]}," Fog Vsphere Compute Mock list_networks":{"type":"method","name":"list_networks","children":[],"call":[" raise ","d [] include? ","d [] ","d [] == "," data [] values select "," data [] values "," data [] "," data ","cluster_name nil? ","filters fetch ","filters [] ","filters fetch  nil? "]}," Fog Vsphere Compute Real raw_network_vlan_id":{"type":"method","name":"raw_network_vlan_id","children":[],"call":["vlan vlanId "]}," Fog Vsphere Compute Real raw_network_vlan":{"type":"method","name":"raw_network_vlan","children":[],"call":[" raw_network_vlan_id ","network vlan "]}," Fog Vsphere Compute Real network_filter_spec":{"type":"method","name":"network_filter_spec","children":[],"call":["RbVmomi VIM  PropertyFilterSpec "," network_dvportgroup_attribute_mapping values + "," network_dvportgroup_attribute_mapping values "," network_dvportgroup_attribute_mapping "," network_attribute_mapping values "," network_attribute_mapping "," folder_traversal_spec ","obj networkFolder "]}," Fog Vsphere Compute Real folder_traversal_spec":{"type":"method","name":"folder_traversal_spec","children":[],"call":["RbVmomi VIM  TraversalSpec ","RbVmomi VIM  SelectionSpec "]}," Fog Vsphere Compute Real network_dvportgroup_attribute_mapping":{"type":"method","name":"network_dvportgroup_attribute_mapping","children":[],"call":[" network_attribute_mapping merge "," network_attribute_mapping "]}," Fog Vsphere Compute Real network_attribute_mapping":{"type":"method","name":"network_attribute_mapping","children":[],"call":[]}," Fog Vsphere Compute Real list_networks":{"type":"method","name":"list_networks","children":[],"call":["(send\n  (block\n    (send\n      (lvar :results) :select)\n    (args\n      (arg :result))\n    (or\n      (send\n        (send\n          (lvar :result) :obj) :is_a?\n        (const\n          (const\n            (const nil :RbVmomi) :VIM) :DistributedVirtualPortgroup))\n      (send\n        (send\n          (lvar :result) :obj) :is_a?\n        (const\n          (const\n            (const nil :RbVmomi) :VIM) :Network)))) :map) compact ","(send\n  (send\n    (lvar :network) :obj) :is_a?\n  (const\n    (const\n      (const nil :RbVmomi) :VIM) :DistributedVirtualPortgroup)) merge ","network obj _ref ","network obj "," map_attrs_to_hash merge "," managed_obj_id "," map_attrs_to_hash "," network_attribute_mapping ","dvswitches [] ","network [] _ref ","network [] "," raw_network_vlan "," network_dvportgroup_attribute_mapping ","network obj is_a? ","network [] ! ","cluster_networks include? ! ","cluster_networks include? ","(send\n  (lvar :results) :select) map ","result obj is_a? ","result obj ","results select ","cluster network map ","cluster network "," get_raw_cluster ","obj []= ","dvswitch [] ","dvswitch obj _ref ","dvswitch obj ","(send\n  (lvar :results) :select) each_with_object "," property_collector_results "," network_filter_spec "," find_raw_datacenter ","filters [] ","filters fetch ","network obj summary opaqueNetworkId ","network obj summary ","(send\n  (block\n    (send\n      (lvar : property_collector_results ) :select)\n    (args\n      (arg :result))\n    (or\n      (send\n        (send\n          (lvar :result) :obj) :is_a?\n        (const\n          (const\n            (const nil :RbVmomi) :VIM) :DistributedVirtualPortgroup))\n      (send\n        (send\n          (lvar :result) :obj) :is_a?\n        (const\n          (const\n            (const nil :RbVmomi) :VIM) :Network)))) :map) compact ","cluster network map  include? ! "," get_raw_cluster _networks include? ! ","cluster network map  include? "," get_raw_cluster _networks include? ","(send\n  (lvar : property_collector_results ) :select) map "," property_collector_results  select "," get_raw_cluster  network map "," get_raw_cluster  network "," get_raw_ get_raw_cluster  ","(send\n  (lvar : property_collector_results ) :select) each_with_object "," property_collector_ property_collector_results  "]}," Fog Vsphere Compute Real interface_type_attributes":{"type":"method","name":"interface_type_attributes","children":[],"call":[]}," Fog Vsphere Compute Real list_interface_types":{"type":"method","name":"list_interface_types","children":[],"call":["(send\n  (send\n    (send nil :get_raw_server_type\n      (lvar :servertype_name)\n      (lvar :datacenter_name)) :[]\n    (sym :supportedEthernetCard)) :map) compact "," interface_type_attributes ","filters [] != ","filters [] ","filters key? "," get_raw_server_type [] map "," get_raw_server_type [] "," get_raw_server_type ","(send\n  (send\n    (send nil :get_raw_server_type\n      (lvar :filters [] )\n      (lvar :datacenter_name)) :[]\n    (sym :supportedEthernetCard)) :map) compact ","(send\n  (send\n    (send nil :get_raw_server_type\n      (lvar :servertype_name)\n      (lvar :filters [] )) :[]\n    (sym :supportedEthernetCard)) :map) compact "]}," Fog Vsphere Compute Mock list_hosts":{"type":"method","name":"list_hosts","children":[],"call":["r [] == ","filters [] ","r [] "," data [] values select "," data [] values "," data [] "," data "]}," Fog Vsphere Compute Real host_system_attribute_mapping":{"type":"method","name":"host_system_attribute_mapping","children":[],"call":[]}," Fog Vsphere Compute Real host_system_filter_spec":{"type":"method","name":"host_system_filter_spec","children":[],"call":["RbVmomi VIM  PropertyFilterSpec "," host_system_attribute_mapping values + "," host_system_attribute_mapping values "," host_system_attribute_mapping "," compute_resource_host_traversal_spec "]}," Fog Vsphere Compute Real compute_resource_host_traversal_spec":{"type":"method","name":"compute_resource_host_traversal_spec","children":[],"call":["RbVmomi VIM  TraversalSpec "]}," Fog Vsphere Compute Real property_collector_results":{"type":"method","name":"property_collector_results","children":[],"call":["property_collector RetrieveProperties "," connection serviceContent propertyCollector "," connection serviceContent "," connection "," connection serviceContent propertyCollector  RetrieveProperties "]}," Fog Vsphere Compute Real map_attrs_to_hash":{"type":"method","name":"map_attrs_to_hash","children":[],"call":["hsh []= ","obj [] ","attribute_mapping each_with_object "]}," Fog Vsphere Compute Real list_hosts":{"type":"method","name":"list_hosts","children":[],"call":["hsh merge ","vm config instanceUuid ","vm config ","host [] map ","host [] "," proc ","host [] first spec ip ipV6Config ipV6Address first ipAddress ","host [] first spec ip ipV6Config ipV6Address first ","host [] first spec ip ipV6Config ipV6Address ","host [] first spec ip ipV6Config ","host [] first spec ip ","host [] first spec ","host [] first ","host [] first spec ip ipAddress ","filters [] "," map_attrs_to_hash "," host_system_attribute_mapping ","results map "," property_collector_results "," host_system_filter_spec "," get_raw_cluster "," map_attrs_to_hash  merge "," property_collector_results  map "," property_collector_ property_collector_results  "," get_raw_ get_raw_cluster  "]}," Fog Vsphere Compute Mock list_groups":{"type":"method","name":"list_groups","children":[],"call":["g [] == ","filters [] ","g [] "," data [] values select "," data [] values "," data [] "," data "]}," Fog Vsphere Compute Real group_attributes":{"type":"method","name":"group_attributes","children":[],"call":["attributes []= ","group [] map ","group [] ","group class to_s == ","group class to_s ","group class ","vm config instanceUuid ","vm config ","filters [] "]}," Fog Vsphere Compute Real list_groups":{"type":"method","name":"list_groups","children":[],"call":[" group_attributes ","cluster configurationEx group map ","cluster configurationEx group ","cluster configurationEx "," get_raw_cluster ","filters [] "," get_raw_cluster  configurationEx group map "," get_raw_cluster  configurationEx group "," get_raw_cluster  configurationEx "," get_raw_ get_raw_cluster  "]}," Fog Vsphere Compute Mock list_folders":{"type":"method","name":"list_folders","children":[],"call":["folder [] == ","v to_s ","folder [] ","k to_s ","options all? "," data [] values select "," data [] values "," data [] "," data ","v nil? ","options reject! "]}," Fog Vsphere Compute Real child_folders":{"type":"method","name":"child_folders","children":[],"call":["folder childEntity grep map flatten ","folder childEntity grep map "," method ","folder childEntity grep ","folder childEntity "]}," Fog Vsphere Compute Real get_raw_vmfolders":{"type":"method","name":"get_raw_vmfolders","children":[],"call":[" child_folders flatten compact "," child_folders flatten "," child_folders "," get_raw_vmfolder "," child_ get_raw_vmfolder s flatten compact "," child_ get_raw_vmfolder s flatten "," child_ get_raw_vmfolder s "," get_raw_vm get_raw_vmfolder  "]}," Fog Vsphere Compute Real generate_folder_inventory":{"type":"method","name":"generate_folder_inventory","children":[],"call":[" set_folder_paths ","inventory []= ","folder [] ","folder obj _ref ","folder obj ","folder [] _ref ","folder [] nil? ","folders each_with_object "]}," Fog Vsphere Compute Real folder_attribute_mapping":{"type":"method","name":"folder_attribute_mapping","children":[],"call":[]}," Fog Vsphere Compute Real lookup_parent_folders":{"type":"method","name":"lookup_parent_folders","children":[],"call":["(send\n  (send\n    (lvar :folder_inventory) :[]\n    (lvar :ref)) :[]\n  (sym :name)) flatten "," lookup_parent_folders ","folder_inventory [] [] ","folder_inventory [] ","folder_inventory [] [] nil? "]}," Fog Vsphere Compute Real set_folder_paths":{"type":"method","name":"set_folder_paths","children":[],"call":["props []= ","(str \"\") flatten "," lookup_parent_folders reverse "," lookup_parent_folders ","folder_inventory each "]}," Fog Vsphere Compute Real lookup_folder_path":{"type":"method","name":"lookup_folder_path","children":[],"call":["folder [] ","inventory [] ","inventory []  [] "]}," Fog Vsphere Compute Real lookup_folder_name":{"type":"method","name":"lookup_folder_name","children":[],"call":["folder [] ","inventory [] ","inventory []  [] "]}," Fog Vsphere Compute Real datacenter_to_vm_folder_traversal_spec":{"type":"method","name":"datacenter_to_vm_folder_traversal_spec","children":[],"call":["RbVmomi VIM  TraversalSpec ","RbVmomi VIM  SelectionSpec "]}," Fog Vsphere Compute Real dc_folder_traversal_spec":{"type":"method","name":"dc_folder_traversal_spec","children":[],"call":["RbVmomi VIM  TraversalSpec ","RbVmomi VIM  SelectionSpec "]}," Fog Vsphere Compute Real folder_filter_spec":{"type":"method","name":"folder_filter_spec","children":[],"call":["RbVmomi VIM  PropertyFilterSpec "," folder_attribute_mapping values + "," folder_attribute_mapping values "," folder_attribute_mapping "," datacenter_to_vm_folder_traversal_spec "," dc_folder_traversal_spec "]}," Fog Vsphere Compute Real list_folders":{"type":"method","name":"list_folders","children":[],"call":["(send\n  (lvar :folders) :map) compact "," map_attrs_to_hash merge "," folder_type ","folder [] ","path join "," lookup_folder_name "," map_attrs_to_hash "," folder_attribute_mapping ","path include? "," lookup_folder_path ","folder [] _ref "," managed_obj_id ","folder obj ","folders map ","result [] include? ","result [] ","result obj is_a? ","result obj ","results select "," generate_folder_inventory "," property_collector_results "," folder_filter_spec "," connection serviceContent rootFolder "," connection serviceContent "," connection "," folder_attributes "," get_raw_vmfolders map "," get_raw_vmfolders ","path empty? ","path nil? ","filters [] "," lookup_folder_path  join "," lookup_folder_path  include? "," lookup_folder_ lookup_folder_path  "," property_collector_results  select "," generate_ generate_folder_inventory  "," property_collector_ property_collector_results  "," lookup_folder_path  empty? "," lookup_folder_path  nil? "]}," Fog Vsphere Compute Mock list_datastores":{"type":"method","name":"list_datastores","children":[],"call":[" raise ","d [] include? ","d [] ","d [] == "," data [] values select "," data [] values "," data [] "," data ","cluster_name nil? ","filters fetch ","filters [] ","filters fetch  nil? "]}," Fog Vsphere Compute Real datastore_attribute_mapping":{"type":"method","name":"datastore_attribute_mapping","children":[],"call":[]}," Fog Vsphere Compute Real compute_resource_datastore_traversal_spec":{"type":"method","name":"compute_resource_datastore_traversal_spec","children":[],"call":["RbVmomi VIM  TraversalSpec "]}," Fog Vsphere Compute Real datastore_filter_prop_set":{"type":"method","name":"datastore_filter_prop_set","children":[],"call":[" datastore_attribute_mapping values "," datastore_attribute_mapping "]}," Fog Vsphere Compute Real datastore_cluster_filter_spec":{"type":"method","name":"datastore_cluster_filter_spec","children":[],"call":["RbVmomi VIM  PropertyFilterSpec "," datastore_filter_prop_set "," compute_resource_datastore_traversal_spec "]}," Fog Vsphere Compute Real datastore_filter_spec":{"type":"method","name":"datastore_filter_spec","children":[],"call":["RbVmomi VIM  PropertyFilterSpec "," datastore_filter_prop_set "," folder_traversal_spec ","obj datastoreFolder "]}," Fog Vsphere Compute Real list_datastores":{"type":"method","name":"list_datastores","children":[],"call":["(send\n  (lvar :datastores) :map) compact "," map_attrs_to_hash merge "," managed_obj_id ","datastore obj "," map_attrs_to_hash "," datastore_attribute_mapping ","datastore [] ! ","datastore [] ","datastores map "," property_collector_results "," datastore_filter_spec "," datastore_cluster_filter_spec "," get_raw_cluster "," find_raw_datacenter ","filters [] ","filters fetch ","(send\n  (lvar : property_collector_results ) :map) compact "," property_collector_results  map "," datastore_ get_raw_cluster _filter_spec "," get_raw_ get_raw_cluster  "]}," Fog Vsphere Compute Mock list_datacenters":{"type":"method","name":"list_datacenters","children":[],"call":[" data [] values "," data [] "," data "]}," Fog Vsphere Compute Real find_datacenters":{"type":"method","name":"find_datacenters","children":[],"call":[" raw_datacenters "," find_raw_datacenter "]}," Fog Vsphere Compute Real get_raw_datacenters_from_folder":{"type":"method","name":"get_raw_datacenters_from_folder","children":[],"call":["(send\n  (send\n    (lvar :folder) :childEntity) :map) flatten "," get_raw_datacenters_from_folder ","childE is_a? ","folder childEntity map ","folder childEntity "]}," Fog Vsphere Compute Real raw_datacenters":{"type":"method","name":"raw_datacenters","children":[],"call":[" get_raw_datacenters_from_folder "," connection rootFolder "," connection "]}," Fog Vsphere Compute Real raw_getpathmo":{"type":"method","name":"raw_getpathmo","children":[],"call":["(send nil :raw_getpathmo\n  (send\n    (lvar :mo) :parent)) flatten ","mo name "," raw_getpathmo ","mo parent ","mo parent name == "," connection rootFolder name "," connection rootFolder "," connection ","mo parent name ","mo parent nil? "]}," Fog Vsphere Compute Real list_datacenters":{"type":"method","name":"list_datacenters","children":[],"call":["dc overallStatus "," raw_getpathmo ","dc name "," managed_obj_id "," raw_datacenters map "," raw_datacenters "]}," Fog Vsphere Compute Real list_customfields":{"type":"method","name":"list_customfields","children":[],"call":["customfield type ","customfield name ","customfield key to_i ","customfield key "," connection serviceContent customFieldsManager field map "," connection serviceContent customFieldsManager field "," connection serviceContent customFieldsManager "," connection serviceContent "," connection "]}," Fog Vsphere Compute Mock list_compute_resources":{"type":"method","name":"list_compute_resources","children":[],"call":[]}," Fog Vsphere Compute Real compute_resource_attributes":{"type":"method","name":"compute_resource_attributes","children":[],"call":["compute_resource summary numHosts == ","compute_resource summary numHosts ","compute_resource summary ","compute_resource summary numEffectiveHosts > ","compute_resource summary numEffectiveHosts ","overall_usage [] ","compute_resource summary overallStatus ","compute_resource summary effectiveMemory ","compute_resource summary effectiveCpu ","compute_resource summary numCpuThreads ","compute_resource summary numCpuCores ","compute_resource summary totalMemory ","compute_resource summary totalCpu ","compute_resource name "," managed_obj_id ","sum [] + ","host summary quickStats overallMemoryUsage ","host summary quickStats ","host summary ","sum [] ","host summary quickStats overallCpuUsage ","compute_resource host inject ","compute_resource host "]}," Fog Vsphere Compute Real raw_compute_resources":{"type":"method","name":"raw_compute_resources","children":[],"call":[" find_raw_datacenter find_compute_resource children "," find_raw_datacenter find_compute_resource "," find_raw_datacenter "]}," Fog Vsphere Compute Real list_compute_resources":{"type":"method","name":"list_compute_resources","children":[],"call":["(send\n  (lvar :compute_resources) :map) compact "," compute_resource_attributes ","summary numEffectiveHosts == ","summary numEffectiveHosts ","compute_resource summary ","compute_resource instance_of? ","compute_resources map "," raw_compute_resources ","filters [] ","(send\n  (lvar : raw_compute_resources ) :map) compact ","compute_resource summary  numEffectiveHosts == ","compute_resource summary  numEffectiveHosts ","compute_resource compute_resource summary  "," raw_compute_resources  map "," raw_ raw_compute_resources  "]}," Fog Vsphere Compute Mock get_raw_clusters_from_folder":{"type":"method","name":"get_raw_clusters_from_folder","children":[],"call":["(send\n  (lvar :folder) :map) flatten "," get_raw_clusters_from_folder ","child [] ","child [] == ","folder map "]}," Fog Vsphere Compute Mock raw_clusters":{"type":"method","name":"raw_clusters","children":[],"call":[" get_raw_clusters_from_folder "," data [] "," data "," get_raw_clusters_from_ data []  "]}," Fog Vsphere Compute Mock list_clusters":{"type":"method","name":"list_clusters","children":[],"call":[" raw_clusters map "," raw_clusters "]}," Fog Vsphere Compute Real cluster_path":{"type":"method","name":"cluster_path","children":[],"call":["cluster pretty_path gsub ","Regexp  escape ","datacenter hostFolder name ","datacenter hostFolder ","cluster pretty_path "," find_raw_datacenter "," find_raw_datacenter  hostFolder name "," find_raw_datacenter  hostFolder "," find_raw_ find_raw_datacenter  "]}," Fog Vsphere Compute Real cluster_attributes":{"type":"method","name":"cluster_attributes","children":[],"call":[" parent_attribute [] "," parent_attribute ","cluster path ","cluster summary overallStatus ","cluster summary ","cluster summary numCpuCores ","cluster summary numHosts "," cluster_path ","cluster name "," managed_obj_id "]}," Fog Vsphere Compute Real get_raw_clusters_from_folder":{"type":"method","name":"get_raw_clusters_from_folder","children":[],"call":["(send\n  (send\n    (lvar :folder) :childEntity) :map) flatten "," get_raw_clusters_from_folder ","child_entity is_a? ","folder childEntity map ","folder childEntity "]}," Fog Vsphere Compute Real raw_clusters":{"type":"method","name":"raw_clusters","children":[],"call":[" get_raw_clusters_from_folder "," find_raw_datacenter hostFolder "," find_raw_datacenter "]}," Fog Vsphere Compute Real list_clusters":{"type":"method","name":"list_clusters","children":[],"call":["(send\n  (send nil :raw_clusters\n    (lvar :datacenter_name)) :map) compact "," cluster_attributes "," raw_clusters map "," raw_clusters ","(send\n  (send nil :list_datacenters) :map) flatten "," list_clusters ","dc [] "," list_datacenters map "," list_datacenters ","datacenter_name nil? ","filters [] ","filters key? ","(send\n  (send nil :raw_clusters\n    (lvar :filters [] )) :map) compact ","filters []  nil? "]}," Fog Vsphere Compute Mock list_child_snapshots":{"type":"method","name":"list_child_snapshots","children":[],"call":["Time  now utc ","Time  now "]}," Fog Vsphere Compute Real child_snapshot_info":{"type":"method","name":"child_snapshot_info","children":[],"call":["parent_snap server_id ","snap_tree snapshot _ref ","snap_tree snapshot ","parent_snap ref_chain ","snap_tree name ","parent_snap snapshot_name_chain ","snap_tree state ","snap_tree createTime ","snap_tree description ","snap_tree quiesced "]}," Fog Vsphere Compute Real list_child_snapshots":{"type":"method","name":"list_child_snapshots","children":[],"call":["child_snapshots flatten compact ","child_snapshots flatten "," list_child_snapshots ","opts [] "," child_snapshot_info ","normalized_snapshot tree_node childSnapshotList map ","normalized_snapshot tree_node childSnapshotList ","normalized_snapshot tree_node ","Snapshot  new ","snapshot update ","Hash  === ","Snapshot  new  tree_node childSnapshotList map ","Snapshot  new  tree_node childSnapshotList ","Snapshot  new  tree_node "]}," Fog Vsphere Compute Real host_start_maintenance":{"type":"method","name":"host_start_maintenance","children":[],"call":["task info state ","task info ","task wait_for_completion ","host_ref EnterMaintenanceMode_Task "," get_host ","host_ref EnterMaintenanceMode_Task  info state ","host_ref EnterMaintenanceMode_Task  info ","host_ref EnterMaintenanceMode_Task  wait_for_completion "," get_host  EnterMaintenanceMode_Task "]}," Fog Vsphere Compute Real host_shutdown":{"type":"method","name":"host_shutdown","children":[],"call":["task info state ","task info ","task wait_for_completion ","host_ref ShutdownHost_Task "," get_host ","host_ref ShutdownHost_Task  info state ","host_ref ShutdownHost_Task  info ","host_ref ShutdownHost_Task  wait_for_completion "," get_host  ShutdownHost_Task "]}," Fog Vsphere Compute Real host_finish_maintenance":{"type":"method","name":"host_finish_maintenance","children":[],"call":["task info state ","task info ","task wait_for_completion ","host_ref ExitMaintenanceMode_Task "," get_host ","host_ref ExitMaintenanceMode_Task  info state ","host_ref ExitMaintenanceMode_Task  info ","host_ref ExitMaintenanceMode_Task  wait_for_completion "," get_host  ExitMaintenanceMode_Task "]}," Fog Vsphere Compute Mock get_vm_first_scsi_controller":{"type":"method","name":"get_vm_first_scsi_controller","children":[],"call":[]}," Fog Vsphere Compute Real get_vm_first_scsi_controller_raw":{"type":"method","name":"get_vm_first_scsi_controller_raw","children":[],"call":["ctrl key ","ctrl scsiCtlrUnitNumber ","ctrl sharedBus to_s ","ctrl sharedBus ","ctrl class to_s ","ctrl class ","(send\n  (send\n    (send\n      (send\n        (send\n          (send nil :get_vm_ref\n            (lvar :vm_id)) :config) :hardware) :device) :grep\n    (const\n      (const\n        (const nil :RbVmomi) :VIM) :VirtualSCSIController)) :select) first ","ctrl key == "," get_vm_ref config hardware device grep select "," get_vm_ref config hardware device grep "," get_vm_ref config hardware device "," get_vm_ref config hardware "," get_vm_ref config "," get_vm_ref ","(send\n  (send\n    (send\n      (send\n        (send\n          (send nil :get_vm_ref\n            (lvar :vm_id)) :config) :hardware) :device) :grep\n    (const\n      (const\n        (const nil :RbVmomi) :VIM) :VirtualSCSIController)) :select) first  key ","(send\n  (send\n    (send\n      (send\n        (send\n          (send nil :get_vm_ref\n            (lvar :vm_id)) :config) :hardware) :device) :grep\n    (const\n      (const\n        (const nil :RbVmomi) :VIM) :VirtualSCSIController)) :select) first  scsiCtlrUnitNumber ","(send\n  (send\n    (send\n      (send\n        (send\n          (send nil :get_vm_ref\n            (lvar :vm_id)) :config) :hardware) :device) :grep\n    (const\n      (const\n        (const nil :RbVmomi) :VIM) :VirtualSCSIController)) :select) first  sharedBus to_s ","(send\n  (send\n    (send\n      (send\n        (send\n          (send nil :get_vm_ref\n            (lvar :vm_id)) :config) :hardware) :device) :grep\n    (const\n      (const\n        (const nil :RbVmomi) :VIM) :VirtualSCSIController)) :select) first  sharedBus ","(send\n  (send\n    (send\n      (send\n        (send\n          (send nil :get_vm_ref\n            (lvar :vm_id)) :config) :hardware) :device) :grep\n    (const\n      (const\n        (const nil :RbVmomi) :VIM) :VirtualSCSIController)) :select) first  class to_s ","(send\n  (send\n    (send\n      (send\n        (send\n          (send nil :get_vm_ref\n            (lvar :vm_id)) :config) :hardware) :device) :grep\n    (const\n      (const\n        (const nil :RbVmomi) :VIM) :VirtualSCSIController)) :select) first  class ","(send\n  (send\n    (send\n      (send\n        (send\n          (send nil :get_vm_ref\n            (lvar :vm_id)) :config) :hardware) :device) :grep\n    (const\n      (const\n        (const nil :RbVmomi) :VIM) :VirtualSCSIController)) :select) first  key == "]}," Fog Vsphere Compute Real get_vm_first_scsi_controller":{"type":"method","name":"get_vm_first_scsi_controller","children":[],"call":["Fog Vsphere Compute SCSIController  new "," get_vm_first_scsi_controller_raw "]}," Fog Vsphere Compute Mock get_virtual_machine":{"type":"method","name":"get_virtual_machine","children":[],"call":[" raise "," list_virtual_machines first "," list_virtual_machines "," is_uuid? "]}," Fog Vsphere Compute Real get_vm_by_name":{"type":"method","name":"get_vm_by_name","children":[],"call":["v [] == ","v [] ","vms find ","v parent pretty_path include? ","v parent pretty_path ","v parent ","File  basename ","File  dirname ","name include? "," raw_list_all_virtual_machines "," raw_list_all_virtual_machines_in_folder "," raw_list_all_virtual_machines  find "," raw_list_all_virtual_machines_in_folder  find ","File  File  basename  "," raw_list_all_virtual_machines_in_File  dirname  "]}," Fog Vsphere Compute Real get_vm_ref":{"type":"method","name":"get_vm_ref","children":[],"call":[" raise ","(send\n  (send nil :raw_datacenters) :map) compact first ","(send\n  (send nil :raw_datacenters) :map) compact "," get_vm_by_name ","d [] "," raw_datacenters map "," raw_datacenters "," connection searchIndex FindByUuid "," connection searchIndex "," connection ","params []= "," is_uuid? "," find_raw_datacenter ","(send\n  (send nil : find_raw_datacenter s) :map) compact first ","(send\n  (send nil : find_raw_datacenter s) :map) compact ","  find_raw_datacenter s map ","  find_raw_datacenter s "," find_ find_raw_datacenter  "]}," Fog Vsphere Compute Real get_virtual_machine":{"type":"method","name":"get_virtual_machine","children":[],"call":[" convert_vm_mob_ref_to_attr_hash "," get_vm_ref "]}," Fog Vsphere Compute Mock get_template":{"type":"method","name":"get_template","children":[],"call":[]}," Fog Vsphere Compute Real get_template":{"type":"method","name":"get_template","children":[],"call":[" convert_vm_mob_ref_to_attr_hash "," get_vm_ref "]}," Fog Vsphere Compute Mock get_storage_pod":{"type":"method","name":"get_storage_pod","children":[],"call":["h [] == ","h [] "," list_storage_pods detect "," list_storage_pods "]}," Fog Vsphere Compute Real raw_storage_pods":{"type":"method","name":"raw_storage_pods","children":[],"call":[" list_container_view "]}," Fog Vsphere Compute Real get_raw_storage_pod":{"type":"method","name":"get_raw_storage_pod","children":[],"call":["pod name == ","pod name "," raw_storage_pods detect "," raw_storage_pods "]}," Fog Vsphere Compute Real get_storage_pod":{"type":"method","name":"get_storage_pod","children":[],"call":[" raise ","pod [] == ","pod [] "," list_storage_pods detect "," list_storage_pods "]}," Fog Vsphere Compute Mock get_server_type":{"type":"method","name":"get_server_type","children":[],"call":[]}," Fog Vsphere Compute Real get_raw_server_type":{"type":"method","name":"get_raw_server_type","children":[],"call":[" raise ","(send\n  (lvar :types) :select) first ","servertype id == ","servertype id ","types select "," raw_server_types ","(send\n  (lvar :(send\n  (lvar :types) :select) first ) :select) first ","(send\n  (lvar : raw_server_types ) :select) first ","(send\n  (lvar :types) :select) first  select "," raw_server_types  select "," raw_server_(send\n  (lvar :types) :select) first  "," raw_server_ raw_server_types  "]}," Fog Vsphere Compute Real get_server_type":{"type":"method","name":"get_server_type","children":[],"call":[" server_type_attributes "," raise "," get_raw_server_type ","  get_raw_server_type _attributes "," get_raw_ get_raw_server_type  "]}," Fog Vsphere Compute Mock get_resource_pool":{"type":"method","name":"get_resource_pool","children":[],"call":[]}," Fog Vsphere Compute Real get_raw_resource_pool":{"type":"method","name":"get_raw_resource_pool","children":[],"call":["cluster resourcePool traverse ","cluster resourcePool ","name nil? ","dc find_compute_resource "," find_raw_datacenter ","dc find_compute_resource  resourcePool traverse ","dc find_compute_resource  resourcePool "," find_raw_datacenter  find_compute_resource "]}," Fog Vsphere Compute Real get_resource_pool":{"type":"method","name":"get_resource_pool","children":[],"call":[" resource_pool_attributes "," raise "," get_raw_resource_pool ","  get_raw_resource_pool _attributes "," get_raw_ get_raw_resource_pool  "]}," Fog Vsphere Compute Mock get_network":{"type":"method","name":"get_network","children":[],"call":[]}," Fog Vsphere Compute Shared choose_finder":{"type":"method","name":"choose_finder","children":[],"call":["n key == ","n key ","n is_a? ","n name == ","n name "," proc ","n config distributedVirtualSwitch name == ","n config distributedVirtualSwitch name ","n config distributedVirtualSwitch ","n config ","n _ref == ","n _ref "]}," Fog Vsphere Compute Shared get_all_raw_networks":{"type":"method","name":"get_all_raw_networks","children":[],"call":[" list_container_view "]}," Fog Vsphere Compute Real get_raw_network":{"type":"method","name":"get_raw_network","children":[],"call":["finder call "," get_all_raw_networks find "," get_all_raw_networks "," choose_finder "," choose_finder  call "," choose_ choose_finder  "]}," Fog Vsphere Compute Real get_network":{"type":"method","name":"get_network","children":[],"call":[" network_attributes "," raise "," get_raw_network ","  get_raw_network _attributes "," get_raw_ get_raw_network  "]}," Fog Vsphere Compute Real get_interface_type":{"type":"method","name":"get_interface_type","children":[],"call":[" raise "," list_interface_types first "," list_interface_types ","servertype id "]}," Fog Vsphere Compute Real get_raw_host":{"type":"method","name":"get_raw_host","children":[],"call":[" raise ","host name == ","host name ","cluster host find ","cluster host "," get_raw_cluster "," get_raw_cluster  host find "," get_raw_cluster  host "," get_raw_ get_raw_cluster  "]}," Fog Vsphere Compute Real get_host":{"type":"method","name":"get_host","children":[],"call":[" get_raw_host "]}," Fog Vsphere Compute Mock get_folder":{"type":"method","name":"get_folder","children":[],"call":[" raise ","f [] end_with? ","f [] ","f [] == "," data [] values find "," data [] values "," data [] "," data "]}," Fog Vsphere Compute Real folder_type":{"type":"method","name":"folder_type","children":[],"call":["types include? "]}," Fog Vsphere Compute Real folder_path":{"type":"method","name":"folder_path","children":[],"call":["/ + ","folder path map join ","folder path map ","folder path "]}," Fog Vsphere Compute Real folder_attributes":{"type":"method","name":"folder_attributes","children":[],"call":[" folder_path "," folder_type ","folder childType ","folder parent name ","folder parent ","folder name "," managed_obj_id "]}," Fog Vsphere Compute Real get_raw_vmfolder":{"type":"method","name":"get_raw_vmfolder","children":[],"call":[" get_raw_folder "]}," Fog Vsphere Compute Real get_raw_folder":{"type":"method","name":"get_raw_folder","children":[],"call":[" raise ","last_returned_folder find ","paths reduce ","paths empty? ","path sub split ","path sub ","Regexp  quote ","(send\n  (send\n    (lvar :dc_root_folder) :path) :map) join ","dc_root_folder path map ","dc_root_folder path ","dc send ","valid_types join ","valid_types include? ","type to_s ","type empty? ","type nil? "," find_raw_datacenter ","datacenter_name_or_obj is_a? ","path sub split  reduce ","path sub split  empty? ","path last_returned_folder find  split ","path last_returned_folder find  ","(send\n  (send\n    (lvar :dc send ) :path) :map) join ","(send\n  (send\n    (lvar : find_raw_datacenter _root_folder) :path) :map) join ","dc send  path map "," find_raw_datacenter _root_folder path map ","dc send  path "," find_raw_datacenter _root_folder path "," find_raw_datacenter  send "]}," Fog Vsphere Compute Real get_folder":{"type":"method","name":"get_folder","children":[],"call":[" folder_attributes "," raise "," get_raw_folder ","  get_raw_folder _attributes "," get_raw_ get_raw_folder  "]}," Fog Vsphere Compute Mock get_datastore":{"type":"method","name":"get_datastore","children":[],"call":[]}," Fog Vsphere Compute Real get_raw_datastores":{"type":"method","name":"get_raw_datastores","children":[],"call":[" list_container_view "]}," Fog Vsphere Compute Real get_raw_datastore":{"type":"method","name":"get_raw_datastore","children":[],"call":["ds name == ","ds name "," get_raw_datastores detect "," get_raw_datastores "]}," Fog Vsphere Compute Real get_datastore":{"type":"method","name":"get_datastore","children":[],"call":[" raise ","ds [] == ","ds [] "," list_datastores detect "," list_datastores "]}," Fog Vsphere Compute Mock get_datacenter":{"type":"method","name":"get_datacenter","children":[],"call":[" raise "," data [] [] "," data [] "," data "]}," Fog Vsphere Compute Real get_raw_datacenter":{"type":"method","name":"get_raw_datacenter","children":[],"call":[" connection serviceInstance find_datacenter "," connection serviceInstance "," connection "]}," Fog Vsphere Compute Real find_raw_datacenter":{"type":"method","name":"find_raw_datacenter","children":[],"call":[" get_raw_datacenter ","d name == ","d name "," raw_datacenters find "," raw_datacenters "," raw_getpathmo join == "," raw_getpathmo join "," raw_getpathmo "]}," Fog Vsphere Compute Real get_datacenter":{"type":"method","name":"get_datacenter","children":[],"call":[" raw_getpathmo ","dc overallStatus ","dc name "," raise "," find_raw_datacenter "," find_raw_datacenter  overallStatus "," find_raw_datacenter  name "]}," Fog Vsphere Compute Mock get_compute_resource":{"type":"method","name":"get_compute_resource","children":[],"call":[]}," Fog Vsphere Compute Real get_raw_compute_resource":{"type":"method","name":"get_raw_compute_resource","children":[],"call":[" find_raw_datacenter find_compute_resource "," find_raw_datacenter "]}," Fog Vsphere Compute Real get_compute_resource":{"type":"method","name":"get_compute_resource","children":[],"call":[" compute_resource_attributes "," raise "," get_raw_compute_resource ","  get_raw_compute_resource _attributes "," get_raw_ get_raw_compute_resource  "]}," Fog Vsphere Compute Mock get_cluster":{"type":"method","name":"get_cluster","children":[],"call":[" raise ","c [] == ","c [] "," data [] find "," data [] "," data "]}," Fog Vsphere Compute Real get_raw_cluster":{"type":"method","name":"get_raw_cluster","children":[],"call":["dc find_compute_resource "," find_raw_datacenter ","datacenter_name_or_obj is_a? "," find_raw_datacenter  find_compute_resource "]}," Fog Vsphere Compute Real get_cluster":{"type":"method","name":"get_cluster","children":[],"call":[" cluster_attributes "," raise "," get_raw_cluster ","  get_raw_cluster _attributes "," get_raw_ get_raw_cluster  "]}," Fog Vsphere Compute Mock folder_destroy":{"type":"method","name":"folder_destroy","children":[],"call":[" raise ","vms empty? "," list_virtual_machines "," list_virtual_machines  empty? "]}," Fog Vsphere Compute Real folder_destroy":{"type":"method","name":"folder_destroy","children":[],"call":["task info state ","task info ","task wait_for_completion ","folder Destroy_Task "," raise ","folder childEntity empty? ","folder childEntity "," get_raw_vmfolder ","folder Destroy_Task  info state ","folder Destroy_Task  info ","folder Destroy_Task  wait_for_completion "," get_raw_vmfolder  Destroy_Task "," get_raw_vmfolder  childEntity empty? "," get_raw_vmfolder  childEntity "," get_raw_vm get_raw_vmfolder  "]}," Fog Vsphere Compute Mock destroy_rule":{"type":"method","name":"destroy_rule","children":[],"call":[" data [] delete ","attributes [] "," data [] "," data "," raise "," data [] [] "]}," Fog Vsphere Compute Real destroy_rule":{"type":"method","name":"destroy_rule","children":[],"call":["cluster ReconfigureComputeResource_Task wait_for_completion ","cluster ReconfigureComputeResource_Task ","RbVmomi VIM  ClusterConfigSpecEx ","RbVmomi VIM  ClusterRuleSpec ","rule key ","RbVmomi VIM  ArrayUpdateOperation "," raise ","attributes [] ","rule key == ","cluster configurationEx rule find ","cluster configurationEx rule ","cluster configurationEx "," get_raw_cluster "," get_raw_cluster  ReconfigureComputeResource_Task wait_for_completion "," get_raw_cluster  ReconfigureComputeResource_Task "," get_raw_cluster  configurationEx rule find "," get_raw_cluster  configurationEx rule "," get_raw_cluster  configurationEx "," get_raw_ get_raw_cluster  "]}," Fog Vsphere Compute Mock destroy_group":{"type":"method","name":"destroy_group","children":[],"call":[" data [] delete ","attributes [] "," data [] "," data "," raise "," data [] [] "]}," Fog Vsphere Compute Real destroy_group":{"type":"method","name":"destroy_group","children":[],"call":["cluster ReconfigureComputeResource_Task wait_for_completion ","cluster ReconfigureComputeResource_Task ","RbVmomi VIM  ClusterConfigSpecEx ","RbVmomi VIM  ClusterGroupSpec ","group name ","RbVmomi VIM  ArrayUpdateOperation "," raise ","attributes [] ","g name == ","g name ","cluster configurationEx group find ","cluster configurationEx group ","cluster configurationEx "," get_raw_cluster "," get_raw_cluster  ReconfigureComputeResource_Task wait_for_completion "," get_raw_cluster  ReconfigureComputeResource_Task "," get_raw_cluster  configurationEx group find "," get_raw_cluster  configurationEx group "," get_raw_cluster  configurationEx "," get_raw_ get_raw_cluster  "]}," Fog Vsphere Compute Mock current_time":{"type":"method","name":"current_time","children":[],"call":["Time  now utc ","Time  now "]}," Fog Vsphere Compute Real current_time":{"type":"method","name":"current_time","children":[],"call":[" connection serviceInstance CurrentTime "," connection serviceInstance "," connection "]}," Fog Vsphere Compute Mock create_cdrom":{"type":"method","name":"create_cdrom","children":[],"call":["cdrom key "]}," Fog Vsphere Compute Mock create_vm":{"type":"method","name":"create_vm","children":[],"call":[" data [] []= "," data [] "," data ","attributes [] map ","attributes [] "," rand ","SecureRandom  uuid ","SecureRandom  uuSecureRandom  uuid  "]}," Fog Vsphere Compute Real extra_config":{"type":"method","name":"extra_config","children":[],"call":["v to_s ","extra_config map ","attributes [] "]}," Fog Vsphere Compute Real create_cdrom":{"type":"method","name":"create_cdrom","children":[],"call":["RbVmomi VIM  VirtualCdrom ","RbVmomi VIM  VirtualDeviceConnectInfo ","RbVmomi VIM  VirtualCdromRemoteAtapiBackingInfo ","cdrom key "]}," Fog Vsphere Compute Real create_disk":{"type":"method","name":"create_disk","children":[],"call":["payload [] [] []= ","disk eager_zero ","payload [] [] ","payload [] ","disk eager_zero == ","disk thin == ","disk thin ","operation == ","payload []= ","options [] ","RbVmomi VIM  VirtualDisk ","disk size ","disk unit_number ","disk controller_key ","RbVmomi VIM  VirtualDiskFlatVer2BackingInfo ","disk mode to_sym ","disk mode ","disk key ","disk set_key ","disk set_unit_number ","disk datastore ","disk thin ! "]}," Fog Vsphere Compute Real controller_get_shared_from_options":{"type":"method","name":"controller_get_shared_from_options","children":[],"call":["options [] ","options [] is_a? ","options [] == ","options key? ! ","options key? "]}," Fog Vsphere Compute Real controller_default_options":{"type":"method","name":"controller_default_options","children":[],"call":["RbVmomi VIM  VirtualLsiLogicController class ","RbVmomi VIM  VirtualLsiLogicController "]}," Fog Vsphere Compute Real create_controller":{"type":"method","name":"create_controller","children":[],"call":["controller_class new "," controller_get_shared_from_options ","options [] ","1000 + ","Fog Vsphere  class_from_string ","options [] is_a? "," controller_default_options "," controller_default_options merge ","controller attributes ","options []  new ","Fog Vsphere  class_from_string  new "," controller_get_shared_from_ controller_default_options  "," controller_get_shared_from_ controller_default_options merge  "," controller_default_options  [] "," controller_default_options merge  [] "," controller_default_options  [] is_a? "," controller_default_options merge  [] is_a? "," controller_default_ controller_default_options  "," controller_default_ controller_default_options merge  "," controller_default_ controller_default_options  merge "," controller_default_ controller_default_options merge  merge "]}," Fog Vsphere Compute Real create_interface":{"type":"method","name":"create_interface","children":[],"call":["nic type new "," create_nic_backing ","nic summary ","nic name ","nic type "]}," Fog Vsphere Compute Real create_nic_backing":{"type":"method","name":"create_nic_backing","children":[],"call":["RbVmomi VIM  VirtualEthernetCardNetworkBackingInfo ","nic network ","RbVmomi VIM  VirtualEthernetCardOpaqueNetworkBackingInfo ","raw_network summary opaqueNetworkId ","raw_network summary ","raw_network summary opaqueNetworkType ","raw_network is_a? ","RbVmomi VIM  VirtualEthernetCardDistributedVirtualPortBackingInfo ","RbVmomi VIM  DistributedVirtualSwitchPortConnection ","raw_network config distributedVirtualSwitch uuid ","raw_network config distributedVirtualSwitch ","raw_network config ","raw_network key "," get_raw_network ","nic virtualswitch ","attributes [] ","raw_network name "," get_raw_network  summary opaqueNetworkId "," get_raw_network  summary "," get_raw_network  summary opaqueNetworkType "," get_raw_network  is_a? "," get_raw_network  config distributedVirtualSwitch uuid "," get_raw_network  config distributedVirtualSwitch "," get_raw_network  config "," get_raw_network  key "," get_ get_raw_network  "," get_raw_network  name "]}," Fog Vsphere Compute Real boot_order":{"type":"method","name":"boot_order","children":[],"call":[" raise ","boot_order << ","RbVmomi VIM VirtualMachineBootOptionsBootableFloppyDevice  new ","RbVmomi VIM VirtualMachineBootOptionsBootableCdromDevice  new ","RbVmomi VIM VirtualMachineBootOptionsBootableDiskDevice  new ","disk key ","disks each ","dev is_a? ","(send\n  (send\n    (lvar :vm_cfg) :[]\n    (sym :deviceChange)) :map) select ","dev [] ","vm_cfg [] map ","vm_cfg [] ","RbVmomi VIM VirtualMachineBootOptionsBootableEthernetDevice  new ","4000 + ","nics index ","nics each ","attributes [] ","attributes [] each ","attributes []  index ","attributes []  each "]}," Fog Vsphere Compute Real boot_options":{"type":"method","name":"boot_options","children":[],"call":["RbVmomi VIM VirtualMachineBootOptions  new ","options empty? ","options []= ","attributes [] "," boot_order ","@vsphere_rev to_f >= ","@vsphere_rev to_f "]}," Fog Vsphere Compute Real device_change":{"type":"method","name":"device_change","children":[],"call":["devices flatten ","devices << "," create_cdrom ","cdroms index ","cdroms map ","attributes [] "," create_disk "," get_storage_pod_from_volumes ","disks map "," create_controller ","scsi_controllers each_with_index map ","scsi_controllers each_with_index "," create_interface ","nics index ","nics map ","attributes []  index ","attributes []  map "]}," Fog Vsphere Compute Real vm_path_name":{"type":"method","name":"vm_path_name","children":[],"call":["attributes [] first datastore ","attributes [] first ","attributes [] ","attributes [] empty? "," get_storage_pod_from_volumes ","attributes [] first attributes [] first datastore  "]}," Fog Vsphere Compute Real get_storage_pod_from_volumes":{"type":"method","name":"get_storage_pod_from_volumes","children":[],"call":["volume storage_pod ","(or\n  (send\n    (send\n      (lvar :volume) :storage_pod) :nil?)\n  (send\n    (send\n      (lvar :volume) :storage_pod) :empty?)) ! ","volume storage_pod empty? ","volume storage_pod nil? ","attributes [] detect ","attributes [] ","@vsphere_rev to_f >= ","@vsphere_rev to_f "]}," Fog Vsphere Compute Real create_vm_on_storage_pod":{"type":"method","name":"create_vm_on_storage_pod","children":[],"call":[" raise ","result vm ","srm ApplyStorageDrsRecommendation_Task wait_for_completion ","srm ApplyStorageDrsRecommendation_Task ","result recommendations first key ","result recommendations first ","result recommendations ","srm RecommendDatastores "," connection serviceContent storageResourceManager "," connection serviceContent "," connection ","RbVmomi VIM StoragePlacementSpec  new ","RbVmomi VIM StorageDrsPodSelectionSpec  new "," get_raw_storage_pod ","recoms first key ","recoms first ","grouped_recoms map ","grouped_recoms keys size == ","disks_per_pod size ","grouped_recoms keys size ","grouped_recoms keys ","rec target _ref ","rec target ","result recommendations group_by "," pod_selection_spec ","disks_per_pod [] concat ","disks_per_pod delete ","disks_per_pod [] ","disks_per_pod key? ","volumes group_by "," disks_per_pod size "," disks_per_pod "," group_disks_by_storage_pod ","result result vm  ","srm ApplyStorageDrsRecommendation_Task wait_for_completion  vm ","srm RecommendDatastores  vm "," connection serviceContent storageResourceManager  ApplyStorageDrsRecommendation_Task wait_for_completion "," connection serviceContent storageResourceManager  ApplyStorageDrsRecommendation_Task ","srm ApplyStorageDrsRecommendation_Task wait_for_completion  recommendations first key ","srm RecommendDatastores  recommendations first key ","result recommendations first result recommendations first key  ","srm ApplyStorageDrsRecommendation_Task wait_for_completion  recommendations first ","srm RecommendDatastores  recommendations first ","srm ApplyStorageDrsRecommendation_Task wait_for_completion  recommendations ","srm RecommendDatastores  recommendations "," connection serviceContent storageResourceManager  RecommendDatastores ","recoms first result recommendations first key  ","grouped_recoms result recommendations first key s size == ","volumes group_by  size "," group_disks_by_storage_pod  size ","grouped_recoms result recommendations first key s size ","grouped_recoms result recommendations first key s ","srm ApplyStorageDrsRecommendation_Task wait_for_completion  recommendations group_by ","srm RecommendDatastores  recommendations group_by ","volumes group_by  [] concat "," group_disks_by_storage_pod  [] concat ","volumes group_by  delete "," group_disks_by_storage_pod  delete ","volumes group_by  [] "," group_disks_by_storage_pod  [] ","disks_per_pod result recommendations first key ? ","volumes group_by  key? "," group_disks_by_storage_pod  key? "," volumes group_by  size ","  group_disks_by_storage_pod  size "," volumes group_by  ","  group_disks_by_storage_pod  "]}," Fog Vsphere Compute Real create_vm_on_datastore":{"type":"method","name":"create_vm_on_datastore","children":[],"call":["vmFolder CreateVM_Task wait_for_completion ","vmFolder CreateVM_Task ","vmFolder CreateVM_Task wait_for_completion Folder CreateVM_Task wait_for_completion ","vmFolder CreateVM_Task wait_for_completion Folder CreateVM_Task "]}," Fog Vsphere Compute Real create_vm":{"type":"method","name":"create_vm","children":[],"call":["vm config instanceUuid ","vm config "," create_vm_on_datastore "," create_vm_on_storage_pod ","attributes [] "," get_storage_pod_from_volumes "," get_raw_host ","attributes key? "," get_raw_vmfolder "," get_raw_cluster resourcePool "," get_raw_cluster "," get_raw_resource_pool ","attributes [] != ","vm_cfg []= "," boot_options "," extra_config "," device_change "," vm_path_name ","cluster resourcePool "," raise "," create_vm_on_datastore  config instanceUuid "," create_vm_on_storage_pod  config instanceUuid "," create_vm_on_datastore  config "," create_vm_on_storage_pod  config "," create_ create_vm_on_datastore _on_datastore "," create_ create_vm_on_storage_pod _on_datastore "," create_ create_vm_on_datastore _on_storage_pod "," create_ create_vm_on_storage_pod _on_storage_pod "," create_vm_on_storage_ get_storage_pod_from_volumes  "," get_storage_ get_storage_pod_from_volumes _from_volumes "," get_raw_ get_raw_host  "," get_raw_ create_vm_on_datastore folder "," get_raw_ create_vm_on_storage_pod folder "," get_raw_ get_raw_cluster  resourcePool "," get_raw_ get_raw_cluster  "," get_raw_ get_raw_cluster resourcePool  "," get_raw_ get_raw_resource_pool  "," get_raw_cluster resourcePool  "," create_vm_on_datastore _cfg []= "," create_vm_on_storage_pod _cfg []= ","  create_vm_on_datastore _path_name ","  create_vm_on_storage_pod _path_name "," get_raw_cluster  resourcePool "]}," Fog Vsphere Compute Mock create_rule":{"type":"method","name":"create_rule","children":[],"call":["attributes [] "," data [] []= "," data [] "," data ","attributes []= "," rand "]}," Fog Vsphere Compute Real get_rule_spec":{"type":"method","name":"get_rule_spec","children":[],"call":["attributes [] new ","attributes [] ","attributes [] to_s == ","attributes [] to_s "," get_vm_ref ","attributes [] to_a map ","attributes [] to_a "]}," Fog Vsphere Compute Real create_rule":{"type":"method","name":"create_rule","children":[],"call":[" raise ","attributes [] ","rule [] ","n [] == ","n [] ","cluster configurationEx rule find ","cluster configurationEx rule ","cluster configurationEx ","cluster ReconfigureComputeResource_Task wait_for_completion ","cluster ReconfigureComputeResource_Task ","RbVmomi VIM  ClusterConfigSpecEx ","RbVmomi VIM  ClusterRuleSpec ","RbVmomi VIM  ArrayUpdateOperation "," get_rule_spec "," get_raw_cluster "," get_raw_cluster  configurationEx rule find "," get_raw_cluster  configurationEx rule "," get_raw_cluster  configurationEx "," get_raw_cluster  ReconfigureComputeResource_Task wait_for_completion "," get_raw_cluster  ReconfigureComputeResource_Task "," get_rule_ get_rule_spec  "," get_raw_ get_raw_cluster  "]}," Fog Vsphere Compute Mock create_group":{"type":"method","name":"create_group","children":[],"call":[" data [] []= ","attributes [] "," data [] "," data "]}," Fog Vsphere Compute Real get_group_spec":{"type":"method","name":"get_group_spec","children":[],"call":["attributes [] new ","attributes [] ","attributes [] to_s == ","attributes [] to_s "," get_vm_ref ","attributes [] to_a map ","attributes [] to_a "]}," Fog Vsphere Compute Real create_group":{"type":"method","name":"create_group","children":[],"call":[" raise ","attributes [] ","group [] ","n [] == ","n [] ","cluster configurationEx group find ","cluster configurationEx group ","cluster configurationEx ","cluster ReconfigureComputeResource_Task wait_for_completion ","cluster ReconfigureComputeResource_Task ","RbVmomi VIM  ClusterConfigSpecEx ","RbVmomi VIM  ClusterGroupSpec ","RbVmomi VIM  ArrayUpdateOperation "," get_group_spec "," get_raw_cluster "," get_raw_cluster  configurationEx group find "," get_raw_cluster  configurationEx group "," get_raw_cluster  configurationEx "," get_raw_cluster  ReconfigureComputeResource_Task wait_for_completion "," get_raw_cluster  ReconfigureComputeResource_Task "," get_group_ get_group_spec  "," get_raw_ get_raw_cluster  "]}," Fog Vsphere Compute Mock create_folder":{"type":"method","name":"create_folder","children":[],"call":[" data [] []= "," data [] "," data "]}," Fog Vsphere Compute Real create_folder":{"type":"method","name":"create_folder","children":[],"call":["(send\n  (block\n    (send\n      (send\n        (lvar :new_folder) :path) :reject)\n    (args\n      (arg :a))\n    (send\n      (send\n        (send\n          (lvar :a) :first) :class) :==\n      (str \"Folder\"))) :map) join sub ","(send\n  (block\n    (send\n      (send\n        (lvar :new_folder) :path) :reject)\n    (args\n      (arg :a))\n    (send\n      (send\n        (send\n          (lvar :a) :first) :class) :==\n      (str \"Folder\"))) :map) join ","a first name ","a first ","(send\n  (send\n    (lvar :new_folder) :path) :reject) map ","a first class == ","a first class ","new_folder path reject ","new_folder path ","parent_folder CreateFolder "," get_raw_vmfolder "," raise ","path nil? ","(send\n  (block\n    (send\n      (send\n        (lvar :parent_folder CreateFolder ) :path) :reject)\n    (args\n      (arg :a))\n    (send\n      (send\n        (send\n          (lvar :a) :first) :class) :==\n      (str \"Folder\"))) :map) join sub ","(send\n  (block\n    (send\n      (send\n        (lvar :parent_folder CreateFolder ) :path) :reject)\n    (args\n      (arg :a))\n    (send\n      (send\n        (send\n          (lvar :a) :first) :class) :==\n      (str \"Folder\"))) :map) join ","(send\n  (send\n    (lvar :parent_folder CreateFolder ) :path) :reject) map ","parent_folder CreateFolder  path reject ","parent_folder CreateFolder  path "," get_raw_vmfolder  CreateFolder "]}," Fog Vsphere Compute Mock cloudinit_to_customspec":{"type":"method","name":"cloudinit_to_customspec","children":[],"call":["custom_spec []= ","user_data [] ","user_data key? ","custom_spec [] []= ","custom_spec [] ","YAML  safe_load "," raise ","user_data nil? ","YAML  safe_load  [] ","YAML  safe_load  key? ","YAML  safe_load  nil? "]}," Fog Vsphere Compute Real cloudinit_to_customspec":{"type":"method","name":"cloudinit_to_customspec","children":[],"call":["custom_spec []= ","user_data [] ","user_data key? ","custom_spec [] []= ","custom_spec [] ","user_data key? ! ","YAML  safe_load "," raise ","user_data nil? ","YAML  safe_load  [] ","YAML  safe_load  key? ","YAML  safe_load  key? ! ","YAML  safe_load  nil? "]}," Fog Vsphere Compute Volumes server=":{"type":"method","name":"server=","children":[],"call":["new_server id "]}," Fog Vsphere Compute Volumes server":{"type":"method","name":"server","children":[],"call":[" service servers get "," server_id "," service servers "," service "," server_id nil? "]}," Fog Vsphere Compute Volumes new":{"type":"method","name":"new","children":[],"call":["(pair\n  (sym :server_id)\n  (send nil :server_id)) merge! "," server_id "," first datastore "," first "," any? ","attributes key? ! ","attributes key? "," first  first datastore  "]}," Fog Vsphere Compute Volumes get":{"type":"method","name":"get","children":[],"call":[" new "," service get_volume "," service "]}," Fog Vsphere Compute Volumes all":{"type":"method","name":"all","children":[],"call":["volume server= "," server "," each "," raise "," load "," service list_template_volumes "," server id "," service "," service list_vm_volumes "," requires "]}," Fog Vsphere Compute Volume calculate_free_unit_number":{"type":"method","name":"calculate_free_unit_number","children":[],"call":["free_unit_numbers first ","(irange\n  (int 0)\n  (int 15)) to_a - ","(irange\n  (int 0)\n  (int 15)) to_a ","(send\n  (send\n    (send nil :server) :volumes) :select) map + ","(send\n  (send\n    (send nil :server) :volumes) :select) map ","vol controller_key == "," controller_key ","vol controller_key ","vol unit_number "," server volumes select "," server volumes "," server "," requires ","(irange\n  (int 0)\n  (int 15)) to_a -  first "]}," Fog Vsphere Compute Volume defaults":{"type":"method","name":"defaults","children":[],"call":[]}," Fog Vsphere Compute Volume set_key":{"type":"method","name":"set_key","children":[],"call":[" key= ","2000 + + "," unit_number ","2000 + ","controller_bus * "," controller_key - "," controller_key "," key nil? "," key "," requires "," controller_key -  * "]}," Fog Vsphere Compute Volume set_unit_number":{"type":"method","name":"set_unit_number","children":[],"call":[" raise ","volume id != "," id ","volume id ","volume unit_number == "," unit_number ","volume unit_number ","(send\n  (send\n    (send nil :server) :volumes) :select) any? ","vol controller_key == "," controller_key ","vol controller_key "," server volumes select "," server volumes "," server "," unit_number= "," calculate_free_unit_number "," unit_number nil? "," requires "]}," Fog Vsphere Compute Volume server_id":{"type":"method","name":"server_id","children":[],"call":[" server id "," server "," requires "]}," Fog Vsphere Compute Volume save":{"type":"method","name":"save","children":[],"call":[" filename= ","created filename "," controller_key= ","created controller_key "," key= ","created key "," id= ","created id ","volume unit_number == "," unit_number ","volume unit_number "," server volumes all find "," server volumes all "," server volumes "," server ","data [] == ","data [] "," service add_vm_volume "," service "," set_unit_number "," requires "," raise "," persisted? "," service add_vm_volume  [] == "," service add_vm_volume  [] "]}," Fog Vsphere Compute Volume destroy":{"type":"method","name":"destroy","children":[],"call":[" service destroy_vm_volume "," service "," requires "]}," Fog Vsphere Compute Volume detach":{"type":"method","name":"detach","children":[],"call":[" server volumes "," server "," service remove_vm_volume "," service "," requires "]}," Fog Vsphere Compute Volume to_s":{"type":"method","name":"to_s","children":[],"call":[" name "]}," Fog Vsphere Compute Volume size_gb=":{"type":"method","name":"size_gb=","children":[],"call":[" attributes []= ","s to_i "," attributes ","s to_i * "]}," Fog Vsphere Compute Volume size_gb":{"type":"method","name":"size_gb","children":[],"call":[" attributes [] to_i / "," attributes [] to_i "," attributes [] "," attributes "]}," Fog Vsphere Compute Volume initialize":{"type":"method","name":"initialize","children":[],"call":[" defaults merge "," defaults "]}," Fog Vsphere Compute Tickets create":{"type":"method","name":"create","children":[],"call":[" new "," service vm_acquire_ticket ","opts merge "," server instance_uuid "," server "," service "," raise "," server is_a? "," requires "]}," Fog Vsphere Compute Templates get":{"type":"method","name":"get","children":[],"call":[" new "," service get_template "," service "]}," Fog Vsphere Compute Templates all":{"type":"method","name":"all","children":[],"call":[" load "," service list_templates "," service "]}," Fog Vsphere Compute StoragePods get":{"type":"method","name":"get","children":[],"call":[" new "," service get_storage_pod "," datacenter "," service "," requires "]}," Fog Vsphere Compute StoragePods all":{"type":"method","name":"all","children":[],"call":[" load "," service list_storage_pods ","filters merge "," datacenter "," service "]}," Fog Vsphere Compute StoragePod to_s":{"type":"method","name":"to_s","children":[],"call":[" name "]}," Fog Vsphere Compute Snapshots get":{"type":"method","name":"get","children":[],"call":["snapshot get_child "," all each "," all ","snapshot get_child  get_child "]}," Fog Vsphere Compute Snapshots all":{"type":"method","name":"all","children":[],"call":[" load "," service list_vm_snapshots "," server_id "," service "," requires "," service list_child_snapshots "," parent_snapshot "]}," Fog Vsphere Compute Snapshot destroy":{"type":"method","name":"destroy","children":[],"call":[" service vm_remove_snapshot "," ref "," server_id "," service "," requires "]}," Fog Vsphere Compute Snapshot revert":{"type":"method","name":"revert","children":[],"call":[" service vm_revert_snapshot "," ref "," server_id "," service "]}," Fog Vsphere Compute Snapshot get_child":{"type":"method","name":"get_child","children":[],"call":[" child_snapshots get "," child_snapshots "," ref == "," ref "]}," Fog Vsphere Compute Snapshot child_snapshots":{"type":"method","name":"child_snapshots","children":[],"call":[" service snapshots ","(pair\n  (sym :server_id)\n  (send nil :server_id)) update "," server_id "," service "]}," Fog Vsphere Compute Servertypes get":{"type":"method","name":"get","children":[],"call":[" new "," service get_server_type "," datacenter "," service "," requires "]}," Fog Vsphere Compute Servertypes all":{"type":"method","name":"all","children":[],"call":[" load "," service list_server_types ","filters merge "," datacenter "," service "]}," Fog Vsphere Compute Servertype defaults":{"type":"method","name":"defaults","children":[],"call":[]}," Fog Vsphere Compute Servertype interfacetypes":{"type":"method","name":"interfacetypes","children":[],"call":[" service interfacetypes ","(pair\n  (sym :datacenter)\n  (send nil :datacenter)) merge "," datacenter "," service "," attributes [] "," attributes "]}," Fog Vsphere Compute Servertype to_s":{"type":"method","name":"to_s","children":[],"call":[" id "]}," Fog Vsphere Compute Servertype initialize":{"type":"method","name":"initialize","children":[],"call":[" defaults merge "," defaults "]}," Fog Vsphere Compute Servers new":{"type":"method","name":"new","children":[],"call":["(pair\n  (sym :datacenter)\n  (send nil :datacenter)) merge "," resource_pool "," cluster "," folder "," datacenter "]}," Fog Vsphere Compute Servers get":{"type":"method","name":"get","children":[],"call":[" new "," service get_virtual_machine "," recursive "," folder "," service "]}," Fog Vsphere Compute Servers all":{"type":"method","name":"all","children":[],"call":[" load "," service list_virtual_machines "," service ","(pair\n  (sym :datacenter)\n  (send nil :datacenter)) merge "," recursive "," folder "," resource_pool "," network "," cluster "," datacenter "," (pair\n  (sym :datacenter)\n  (send nil :datacenter)) merge older "]}," Fog Vsphere Compute Server initialize_scsi_controllers":{"type":"method","name":"initialize_scsi_controllers","children":[],"call":[" attributes []= ","Fog Vsphere Compute SCSIController  new "," attributes "," attributes [] empty? ! "," attributes [] empty? "," attributes [] "," attributes [] is_a? ","controller is_a? "," attributes [] map! "]}," Fog Vsphere Compute Server initialize_customvalues":{"type":"method","name":"initialize_customvalues","children":[],"call":[" service customvalue new "," service customvalue "," service ","cfield is_a? "," attributes [] map "," attributes [] "," attributes "," attributes [] is_a? "]}," Fog Vsphere Compute Server initialize_volumes":{"type":"method","name":"initialize_volumes","children":[],"call":["vol server= "," service volumes new ","(pair\n  (sym :server)\n  (self)) merge "," service volumes "," service ","vol is_a? "," attributes [] map! "," attributes [] "," attributes "," attributes [] is_a? "]}," Fog Vsphere Compute Server initialize_interfaces":{"type":"method","name":"initialize_interfaces","children":[],"call":[" service interfaces new "," service interfaces "," service ","nic is_a? "," attributes [] map! "," attributes [] "," attributes "," attributes [] is_a? "]}," Fog Vsphere Compute Server defaults":{"type":"method","name":"defaults","children":[],"call":[]}," Fog Vsphere Compute Server acquire_ticket":{"type":"method","name":"acquire_ticket","children":[],"call":[" service tickets create "," service tickets "," service "]}," Fog Vsphere Compute Server relative_path":{"type":"method","name":"relative_path","children":[],"call":["(send\n  (send\n    (send\n      (send nil :path) :split\n      (str \"/\")) :reject\n    (block-pass\n      (sym :empty?))) :-\n  (array\n    (str \"Datacenters\")\n    (send nil :datacenter)\n    (str \"vm\"))) join "," path split reject - "," datacenter "," path split reject "," path split "," path "," requires "]}," Fog Vsphere Compute Server reload":{"type":"method","name":"reload","children":[],"call":[" attributes delete "," attributes ","(sym :interfaces) each "]}," Fog Vsphere Compute Server new?":{"type":"method","name":"new?","children":[],"call":[" id nil? "," id "]}," Fog Vsphere Compute Server save":{"type":"method","name":"save","children":[],"call":[" reload "," id= "," service create_vm "," attributes "," service "," service update_vm "," persisted? "," requires "]}," Fog Vsphere Compute Server folder":{"type":"method","name":"folder","children":[],"call":[" service folders get "," path "," service folders "," datacenter "," service "," attributes [] "," attributes "]}," Fog Vsphere Compute Server scsi_controller":{"type":"method","name":"scsi_controller","children":[],"call":[" scsi_controllers first "," scsi_controllers "]}," Fog Vsphere Compute Server scsi_controllers":{"type":"method","name":"scsi_controllers","children":[],"call":[" service list_vm_scsi_controllers "," id "," service "," attributes [] "," attributes "]}," Fog Vsphere Compute Server customvalues":{"type":"method","name":"customvalues","children":[],"call":[" service customvalues "," service "," id nil? "," id "," attributes [] "," attributes "]}," Fog Vsphere Compute Server guest_processes":{"type":"method","name":"guest_processes","children":[],"call":[" service list_processes "," id "," service "," raise "," tools_running? "]}," Fog Vsphere Compute Server cdrom":{"type":"method","name":"cdrom","children":[],"call":[" cdroms get "," cdroms "]}," Fog Vsphere Compute Server cdroms":{"type":"method","name":"cdroms","children":[],"call":[" service cdroms all "," service cdroms "," id "," service "]}," Fog Vsphere Compute Server revert_snapshot":{"type":"method","name":"revert_snapshot","children":[],"call":[" raise "," service revert_to_snapshot "," find_snapshot "," service "]}," Fog Vsphere Compute Server find_snapshot":{"type":"method","name":"find_snapshot","children":[],"call":[" snapshots get "," snapshots "]}," Fog Vsphere Compute Server snapshots":{"type":"method","name":"snapshots","children":[],"call":[" service snapshots all "," service snapshots "," id "," service "]}," Fog Vsphere Compute Server volumes":{"type":"method","name":"volumes","children":[],"call":[" service volumes "," id "," service "," id nil? "," attributes [] "," attributes "]}," Fog Vsphere Compute Server destroy_interface":{"type":"method","name":"destroy_interface","children":[],"call":[" interfaces get destroy "," interfaces get ","attrs [] "," interfaces ","Fog Logger  deprecation "]}," Fog Vsphere Compute Server update_interface":{"type":"method","name":"update_interface","children":[],"call":[" service update_vm_interface "," id "," service ","attrs []= "," datacenter ","attrs key? "," ready? ! "," ready? "," wait_for "," interface_ready? "]}," Fog Vsphere Compute Server add_interface":{"type":"method","name":"add_interface","children":[],"call":[" interfaces create "," interfaces ","Fog Logger  deprecation "]}," Fog Vsphere Compute Server interface_ready?":{"type":"method","name":"interface_ready?","children":[],"call":["attrs is_a? ","attrs [] "]}," Fog Vsphere Compute Server interfaces":{"type":"method","name":"interfaces","children":[],"call":[" service interfaces "," id "," service "," id nil? "," attributes [] "," attributes "]}," Fog Vsphere Compute Server mac":{"type":"method","name":"mac","children":[],"call":[" interfaces first mac "," interfaces first "," interfaces "," interfaces empty? "]}," Fog Vsphere Compute Server sockets":{"type":"method","name":"sockets","children":[],"call":[" cpus / "," corespersocket "," cpus "]}," Fog Vsphere Compute Server memory":{"type":"method","name":"memory","children":[],"call":[" memory_mb * * "," memory_mb * "," memory_mb "]}," Fog Vsphere Compute Server vnc":{"type":"method","name":"vnc","children":[],"call":[" service vm_get_vnc "," instance_uuid "," service "," requires "]}," Fog Vsphere Compute Server config_vnc":{"type":"method","name":"config_vnc","children":[],"call":[" service vm_config_vnc ","options merge "," instance_uuid "," service "," requires "]}," Fog Vsphere Compute Server tools_running?":{"type":"method","name":"tools_running?","children":[],"call":["(str \"toolsOk\") include? "," tools_state "]}," Fog Vsphere Compute Server tools_installed?":{"type":"method","name":"tools_installed?","children":[],"call":["(or\n  (send\n    (send nil :tools_state) :==\n    (str \"toolsNotInstalled\"))\n  (send\n    (send nil :tools_version) :==\n    (str \"guestToolsNotInstalled\"))) ! "," tools_version == "," tools_version "," tools_state == "," tools_state "]}," Fog Vsphere Compute Server ready?":{"type":"method","name":"ready?","children":[],"call":[" power_state == "," power_state "]}," Fog Vsphere Compute Server take_snapshot":{"type":"method","name":"take_snapshot","children":[],"call":[" service vm_take_snapshot ","options merge "," instance_uuid "," service "," requires "]}," Fog Vsphere Compute Server clone":{"type":"method","name":"clone","children":[],"call":["new_vm collection= "," collection "," class new ","clone_results [] merge "," service ","clone_results [] "," class "," service vm_clone ","req_options []= "," datacenter to_s "," datacenter "," name "," relative_path ","hsh []= ","k to_s ","options each_with_object "," requires ","req_options [] "," class new  collection= "," service vm_clone  [] merge "," service vm_clone  [] "]}," Fog Vsphere Compute Server migrate":{"type":"method","name":"migrate","children":[],"call":[" service vm_migrate "," service ","req_options []= "," instance_uuid "," datacenter to_s "," datacenter "," cluster ","req_options [] ","hsh []= ","k to_s ","options each_with_object "," requires ","(pair\n  (sym :priority)\n  (str \"defaultPriority\")) merge ","req_(pair\n  (sym :priority)\n  (str \"defaultPriority\")) merge  []= ","req_(pair\n  (sym :priority)\n  (str \"defaultPriority\")) merge  [] ","(pair\n  (sym :priority)\n  (str \"defaultPriority\")) merge  each_with_object "]}," Fog Vsphere Compute Server destroy":{"type":"method","name":"destroy","children":[],"call":[" service vm_destroy "," instance_uuid "," service "," ready? ! "," ready? "," wait_for "," stop "," requires "]}," Fog Vsphere Compute Server reboot":{"type":"method","name":"reboot","children":[],"call":[" service vm_reboot ","options [] "," instance_uuid "," service "," requires ","(pair\n  (sym :force)\n  (false)) merge ","(pair\n  (sym :force)\n  (false)) merge  [] "]}," Fog Vsphere Compute Server suspend":{"type":"method","name":"suspend","children":[],"call":[" service vm_suspend ","options [] "," instance_uuid "," service "," requires ","(pair\n  (sym :force)\n  (or\n    (send\n      (send nil :tools_installed?) :!)\n    (send\n      (send nil :tools_running?) :!))) merge "," tools_running? ! "," tools_running? "," tools_installed? ! "," tools_installed? ","(pair\n  (sym :force)\n  (or\n    (send\n      (send nil :tools_installed?) :!)\n    (send\n      (send nil :tools_running?) :!))) merge  [] "]}," Fog Vsphere Compute Server stop":{"type":"method","name":"stop","children":[],"call":[" service vm_power_off ","options [] "," instance_uuid "," service "," power_state == "," power_state "," requires ","(pair\n  (sym :force)\n  (or\n    (send\n      (send nil :tools_installed?) :!)\n    (send\n      (send nil :tools_running?) :!))) merge "," tools_running? ! "," tools_running? "," tools_installed? ! "," tools_installed? ","(pair\n  (sym :force)\n  (or\n    (send\n      (send nil :tools_installed?) :!)\n    (send\n      (send nil :tools_running?) :!))) merge  [] "]}," Fog Vsphere Compute Server start":{"type":"method","name":"start","children":[],"call":[" service vm_power_on "," instance_uuid "," service "," ready? "," requires "]}," Fog Vsphere Compute Server vm_reconfig_hardware":{"type":"method","name":"vm_reconfig_hardware","children":[],"call":[" service vm_reconfig_hardware "," instance_uuid "," service "," requires "]}," Fog Vsphere Compute Server vm_reconfig_volumes":{"type":"method","name":"vm_reconfig_volumes","children":[],"call":[" service vm_reconfig_volumes "," volumes "," instance_uuid "," service "," requires "]}," Fog Vsphere Compute Server vm_reconfig_cpus":{"type":"method","name":"vm_reconfig_cpus","children":[],"call":[" service vm_reconfig_cpus "," corespersocket "," cpus "," instance_uuid "," service "," requires "]}," Fog Vsphere Compute Server vm_reconfig_memory":{"type":"method","name":"vm_reconfig_memory","children":[],"call":[" service vm_reconfig_memory "," memory_mb "," instance_uuid "," service "," requires "]}," Fog Vsphere Compute Server vm_rename":{"type":"method","name":"vm_rename","children":[],"call":[" service vm_rename "," name "," instance_uuid "," service "," requires "]}," Fog Vsphere Compute Server initialize":{"type":"method","name":"initialize","children":[],"call":[" initialize_scsi_controllers "," initialize_customvalues "," initialize_volumes "," initialize_interfaces "," id "," instance_uuid "," defaults merge "," defaults "]}," Fog Vsphere Compute SCSIController to_s":{"type":"method","name":"to_s","children":[],"call":[" unit_number "," shared_bus "," key "," type "]}," Fog Vsphere Compute SCSIController initialize":{"type":"method","name":"initialize","children":[],"call":[" key "]}," Fog Vsphere Compute Rules new":{"type":"method","name":"new","children":[],"call":["attributes merge "," cluster "," datacenter "," requires "]}," Fog Vsphere Compute Rules get":{"type":"method","name":"get","children":[],"call":[" raise ","(send\n  (lvar :rule) :key) include? ","rule name ","rule key "," all find "," all "]}," Fog Vsphere Compute Rules all":{"type":"method","name":"all","children":[],"call":[" load "," service list_rules "," cluster "," datacenter "," service "," requires "]}," Fog Vsphere Compute Rule destroy":{"type":"method","name":"destroy","children":[],"call":[" service destroy_rule "," attributes "," service "]}," Fog Vsphere Compute Rule save":{"type":"method","name":"save","children":[],"call":[" reload "," key= "," service create_rule "," attributes "," service "," raise "," persisted? "," vm_ids length < "," vm_ids length "," vm_ids "," requires "]}," Fog Vsphere Compute Rule vms=":{"type":"method","name":"vms=","children":[],"call":[" vm_ids= ","vms map "]}," Fog Vsphere Compute Rule vms":{"type":"method","name":"vms","children":[],"call":[" service servers get "," datacenter "," service servers "," service "," vm_ids map "," vm_ids "]}," Fog Vsphere Compute ResourcePools get":{"type":"method","name":"get","children":[],"call":[" new "," service get_resource_pool "," datacenter "," cluster "," service "," requires "]}," Fog Vsphere Compute ResourcePools all":{"type":"method","name":"all","children":[],"call":[" load "," service list_resource_pools ","filters merge "," cluster "," datacenter "," service "]}," Fog Vsphere Compute ResourcePool to_s":{"type":"method","name":"to_s","children":[],"call":[" name "]}," Fog Vsphere Compute Networks get":{"type":"method","name":"get","children":[],"call":[" new "," service get_network "," datacenter "," service "," requires "]}," Fog Vsphere Compute Networks all":{"type":"method","name":"all","children":[],"call":[" load "," service list_networks "," service ","(pair\n  (sym :datacenter)\n  (send nil :datacenter)) merge "," cluster "," datacenter "]}," Fog Vsphere Compute Network to_s":{"type":"method","name":"to_s","children":[],"call":[" name "]}," Fog Vsphere Compute Interfacetypes get":{"type":"method","name":"get","children":[],"call":[" new "," service get_interface_type "," datacenter "," servertype "," service "," requires "]}," Fog Vsphere Compute Interfacetypes all":{"type":"method","name":"all","children":[],"call":[" raise "," load "," service list_interface_types ","filters merge "," servertype id "," servertype "," datacenter "," service "," requires "]}," Fog Vsphere Compute Interfacetype to_s":{"type":"method","name":"to_s","children":[],"call":[" name "]}," Fog Vsphere Compute Interfacetype initialize":{"type":"method","name":"initialize","children":[],"call":[]}," Fog Vsphere Compute Interfaces server=":{"type":"method","name":"server=","children":[],"call":["new_server id "]}," Fog Vsphere Compute Interfaces server":{"type":"method","name":"server","children":[],"call":[" service servers get "," server_id "," service servers "," service "," server_id nil? "]}," Fog Vsphere Compute Interfaces new":{"type":"method","name":"new","children":[],"call":["(pair\n  (sym :server_id)\n  (send nil :server_id)) merge "," server_id "]}," Fog Vsphere Compute Interfaces get":{"type":"method","name":"get","children":[],"call":["Fog Vsphere Compute Interface  new ","interface merge "," service "," server id "," server "," raise "," service get_template_interfaces "," service get_vm_interface "," server datacenter "," requires "," service get_template_interfaces  merge "," service get_vm_interface  merge "," service get_template_ service get_template_interfaces s "," service get_template_ service get_vm_interface s "," service get_vm_ service get_template_interfaces  "," service get_vm_ service get_vm_interface  "]}," Fog Vsphere Compute Interfaces all":{"type":"method","name":"all","children":[],"call":["interface server_id= "," server id "," server "," each "," raise "," load "," service list_template_interfaces "," service "," service list_vm_interfaces "," requires "]}," Fog Vsphere Compute Interface defaults":{"type":"method","name":"defaults","children":[],"call":["Fog Vsphere  class_from_string ","Fog  credentials [] ","Fog  credentials "]}," Fog Vsphere Compute Interface save":{"type":"method","name":"save","children":[],"call":[" virtualswitch= ","created virtualswitch "," key= ","created key "," summary= ","created summary "," status= ","created status "," name= ","created name "," mac= ","created mac "," server interfaces all sort_by last "," server interfaces all sort_by "," server interfaces all "," server interfaces "," server ","data [] == ","data [] "," service add_vm_interface "," attributes "," server_id "," service "," attributes []= "," server datacenter "," attributes key? ","SAVE_MUTEX  synchronize "," requires "," raise "," persisted? "," server interfaces all sort_by last  virtualswitch "," server interfaces all sort_by last  key "," server interfaces all sort_by last  summary "," server interfaces all sort_by last  status "," server interfaces all sort_by last  name "," server interfaces all sort_by last  mac "," service add_vm_interface  [] == "," service add_vm_interface  [] "," server  service add_vm_interface center "]}," Fog Vsphere Compute Interface destroy":{"type":"method","name":"destroy","children":[],"call":[" service destroy_vm_interface "," server datacenter "," server "," type "," key "," server_id "," service "," requires "]}," Fog Vsphere Compute Interface server":{"type":"method","name":"server","children":[],"call":[" service servers get "," server_id "," service servers "," service "," requires "]}," Fog Vsphere Compute Interface to_s":{"type":"method","name":"to_s","children":[],"call":[" name "]}," Fog Vsphere Compute Interface initialize":{"type":"method","name":"initialize","children":[],"call":[" defaults merge "," defaults ","attributes []= ","Fog Vsphere  class_from_string ","attributes [] ","attributes [] is_a? ","attributes key? "," server_id= ","attributes delete "]}," Fog Vsphere Compute Hosts get":{"type":"method","name":"get","children":[],"call":[" raise ","host name == ","host name "," all find "," all "]}," Fog Vsphere Compute Hosts all":{"type":"method","name":"all","children":[],"call":[" load "," service list_hosts "," cluster "," datacenter "," service "," requires "]}," Fog Vsphere Compute Host finish_maintenance":{"type":"method","name":"finish_maintenance","children":[],"call":[" service host_finish_maintenance "," datacenter "," cluster "," name "," service "]}," Fog Vsphere Compute Host start_maintenance":{"type":"method","name":"start_maintenance","children":[],"call":[" service host_start_maintenance "," datacenter "," cluster "," name "," service "]}," Fog Vsphere Compute Host shutdown":{"type":"method","name":"shutdown","children":[],"call":[" service host_shutdown "," datacenter "," cluster "," name "," service "]}," Fog Vsphere Compute Host memory_mb":{"type":"method","name":"memory_mb","children":[],"call":[" memory / / "," memory / "," memory "]}," Fog Vsphere Compute Host to_s":{"type":"method","name":"to_s","children":[],"call":[" name "]}," Fog Vsphere Compute Folders get":{"type":"method","name":"get","children":[],"call":[" new "," service get_folder "," type "," datacenter "," service "," requires "]}," Fog Vsphere Compute Folders all":{"type":"method","name":"all","children":[],"call":[" load "," service list_folders ","filters merge "," path "," type "," datacenter "," service "," requires "]}," Fog Vsphere Compute Folder destroy":{"type":"method","name":"destroy","children":[],"call":[" service folder_destroy "," datacenter "," path "," service "]}," Fog Vsphere Compute Folder to_s":{"type":"method","name":"to_s","children":[],"call":[" name "]}," Fog Vsphere Compute Folder vms":{"type":"method","name":"vms","children":[],"call":[" service servers ","options [] "," datacenter "," path "," service "," type to_s != "," type to_s "," type "]}," Fog Vsphere Compute Datastores get":{"type":"method","name":"get","children":[],"call":[" new "," service get_datastore "," datacenter "," service "," requires "]}," Fog Vsphere Compute Datastores all":{"type":"method","name":"all","children":[],"call":[" load "," service list_datastores ","filters merge "," cluster "," datacenter "," service "]}," Fog Vsphere Compute Datastore to_s":{"type":"method","name":"to_s","children":[],"call":[" name "]}," Fog Vsphere Compute Datacenters get":{"type":"method","name":"get","children":[],"call":[" new "," service get_datacenter "," service "]}," Fog Vsphere Compute Datacenters all":{"type":"method","name":"all","children":[],"call":[" load "," service list_datacenters "," service "]}," Fog Vsphere Compute Datacenter to_s":{"type":"method","name":"to_s","children":[],"call":[" name "]}," Fog Vsphere Compute Datacenter customfields":{"type":"method","name":"customfields","children":[],"call":[" service customfields ","(pair\n  (sym :datacenter)\n  (send\n    (send nil :path) :join\n    (str \"/\"))) merge "," path join "," path "," service "]}," Fog Vsphere Compute Datacenter servertypes":{"type":"method","name":"servertypes","children":[],"call":[" service servertypes ","(pair\n  (sym :datacenter)\n  (send nil :name)) merge "," name "," service "]}," Fog Vsphere Compute Datacenter virtual_machines":{"type":"method","name":"virtual_machines","children":[],"call":[" service servers ","(pair\n  (sym :datacenter)\n  (send\n    (send nil :path) :join\n    (str \"/\"))) merge "," path join "," path "," service "]}," Fog Vsphere Compute Datacenter vm_folders":{"type":"method","name":"vm_folders","children":[],"call":[" service folders ","(pair\n  (sym :datacenter)\n  (send\n    (send nil :path) :join\n    (str \"/\"))) merge "," path join "," path "," service ","(pair\n  (sym :datacenter)\n  (send nil :name)) merge "," name "]}," Fog Vsphere Compute Datacenter storage_pods":{"type":"method","name":"storage_pods","children":[],"call":[" service storage_pods ","(pair\n  (sym :datacenter)\n  (send\n    (send nil :path) :join\n    (str \"/\"))) merge "," path join "," path "," service "]}," Fog Vsphere Compute Datacenter datastores":{"type":"method","name":"datastores","children":[],"call":[" service datastores ","(pair\n  (sym :datacenter)\n  (send\n    (send nil :path) :join\n    (str \"/\"))) merge "," path join "," path "," service "]}," Fog Vsphere Compute Datacenter networks":{"type":"method","name":"networks","children":[],"call":[" service networks ","(pair\n  (sym :datacenter)\n  (send\n    (send nil :path) :join\n    (str \"/\"))) merge "," path join "," path "," service "]}," Fog Vsphere Compute Datacenter clusters":{"type":"method","name":"clusters","children":[],"call":[" service clusters ","(pair\n  (sym :datacenter)\n  (send\n    (send nil :path) :join\n    (str \"/\"))) merge "," path join "," path "," service "]}," Fog Vsphere Compute Customvalues get":{"type":"method","name":"get","children":[],"call":["cv key == ","cv key ","(send nil :vm) find "," raise "," load "," service list_vm_customvalues "," vm id "," vm "," service "," requires "]}," Fog Vsphere Compute Customvalues all":{"type":"method","name":"all","children":[],"call":[" raise "," load "," service list_vm_customvalues "," vm id "," vm "," service "," requires "]}," Fog Vsphere Compute Customvalue to_s":{"type":"method","name":"to_s","children":[],"call":[" value "]}," Fog Vsphere Compute Customfields get":{"type":"method","name":"get","children":[],"call":["cv key == ","key is_a? ","key to_i ","cv key "," load find "," load "," service list_customfields "," service "]}," Fog Vsphere Compute Customfields all":{"type":"method","name":"all","children":[],"call":[" load "," service list_customfields "," service "]}," Fog Vsphere Compute Customfield to_s":{"type":"method","name":"to_s","children":[],"call":[" name "]}," Fog Vsphere Compute Clusters get":{"type":"method","name":"get","children":[],"call":[" new "," service get_cluster "," datacenter "," service "," requires "]}," Fog Vsphere Compute Clusters all":{"type":"method","name":"all","children":[],"call":[" load "," service list_clusters ","filters merge "," datacenter "," service "," requires "]}," Fog Vsphere Compute Cluster to_s":{"type":"method","name":"to_s","children":[],"call":[" name "]}," Fog Vsphere Compute Cluster hosts":{"type":"method","name":"hosts","children":[],"call":[" service hosts "," full_path "," datacenter "," service "]}," Fog Vsphere Compute Cluster rules":{"type":"method","name":"rules","children":[],"call":[" service rules "," full_path "," datacenter "," service "]}," Fog Vsphere Compute Cluster networks":{"type":"method","name":"networks","children":[],"call":[" service networks ","(pair\n  (sym :service)\n  (send nil :service)) merge "," datacenter "," full_path "," service "," id nil? "," id "," attributes [] "," attributes "]}," Fog Vsphere Compute Cluster datastores":{"type":"method","name":"datastores","children":[],"call":[" service datastores ","(pair\n  (sym :service)\n  (send nil :service)) merge "," datacenter "," full_path "," service "," id nil? "," id "," attributes [] "," attributes "]}," Fog Vsphere Compute Cluster resource_pools":{"type":"method","name":"resource_pools","children":[],"call":[" service resource_pools ","(pair\n  (sym :service)\n  (send nil :service)) merge "," datacenter "," full_path "," service "," id nil? "," id "," attributes [] "," attributes "]}," Fog Vsphere Compute Cdroms get":{"type":"method","name":"get","children":[],"call":["cdrom unit_number == ","cdrom unit_number "," all find "," all "]}," Fog Vsphere Compute Cdroms all":{"type":"method","name":"all","children":[],"call":[" load "," service list_vm_cdroms "," instance_uuid "," service "]}," Fog Vsphere Compute Cdrom save":{"type":"method","name":"save","children":[],"call":[" unit_number= ","created unit_number "," filename= ","created filename "," key= ","created key "," server cdroms get "," unit_number "," server cdroms "," server ","data [] == ","data [] "," service add_vm_cdrom "," service "," raise ","cdrom id != "," id ","cdrom id ","cdrom unit_number == ","cdrom unit_number "," server cdroms any? ","max_unit_number + ","used_unit_numbers exclude? ","max_unit_number times to_a find ","max_unit_number times to_a ","max_unit_number times ","max_unit_number > "," server cdroms size ","used_unit_numbers max "," server cdroms map "," unit_number nil? "," requires "," server cdroms get  unit_number "," server cdroms get  filename "," server cdroms get  key "," service add_vm_cdrom  [] == "," service add_vm_cdrom  [] ","used_unit_numbers max  + "," server cdroms map  exclude? ","used_unit_numbers max  times to_a find ","used_unit_numbers max  times to_a ","used_unit_numbers max  times ","used_unit_numbers max  > "," server cdroms map  max "]}," Fog Vsphere Compute Cdrom destroy":{"type":"method","name":"destroy","children":[],"call":[" service destroy_vm_cdrom "," service "," requires "]}," Fog Vsphere Compute Cdrom to_s":{"type":"method","name":"to_s","children":[],"call":[" name "]}," Fog Vsphere Compute Real list_container_view":{"type":"method","name":"list_container_view","children":[],"call":["container_view DestroyView ","container_view view "," connection serviceContent viewManager CreateContainerView "," connection serviceContent viewManager "," connection serviceContent "," connection ","dc public_send "," find_raw_datacenter ","datacenter_obj_or_name is_a? "," connection serviceContent viewManager CreateContainerView  DestroyView ","dc public_send _view DestroyView "," connection serviceContent viewManager CreateContainerView  view ","dc public_send _view view "," find_raw_datacenter  public_send "]}," Fog Vsphere Compute Real validate_ssl_connection":{"type":"method","name":"validate_ssl_connection","children":[],"call":[" raise ","pubkey_hash != ","Digest SHA2  hexdigest ","pubkey to_s ","@connection http peer_cert public_key ","@connection http peer_cert ","@connection http ","Digest SHA2  hexdigest  != ","@connection http peer_cert public_key _hash != ","@connection http peer_cert public_key  to_s "]}," Fog Vsphere Compute Real authenticate":{"type":"method","name":"authenticate","children":[],"call":[" raise ","e message ","@connection serviceContent sessionManager Login ","@connection serviceContent sessionManager ","@connection serviceContent "]}," Fog Vsphere Compute Real connect":{"type":"method","name":"connect","children":[{"type":"method","name":"obj2xml","children":[],"asgn":[],"call":["xml tag! ","o to_s ","attrs []= "," type == "," type "]}],"call":[" validate_ssl_connection "," raise ","xml tag! ","o to_s ","attrs []= "," type == "," type ","RbVmomi VIM  new "," loop "]}," Fog Vsphere Compute Real negotiate_revision":{"type":"method","name":"negotiate_revision","children":[],"call":["@connection rev ","@connection serviceContent about apiType == ","@connection serviceContent about apiType ","@connection serviceContent about ","@connection serviceContent ","@connection rev= ","(lvar :rev) max ","ENV  [] ","@connection serviceContent about apiVersion ","@connection @connection serviceContent about apiVersion  ","@connection @connection serviceContent about apiVersion = ","(lvar :@connection serviceContent about apiVersion ) max "]}," Fog Vsphere Compute Real reload":{"type":"method","name":"reload","children":[],"call":[" authenticate "," negotiate ","@vsphere_is_vcenter nil? "," connect "]}," Fog Vsphere Compute Real connection":{"type":"method","name":"connection","children":[],"call":[" reload ","Fog Logger  debug ","@connection serviceContent sessionManager currentSession nil? ","@connection serviceContent sessionManager currentSession ","@connection serviceContent sessionManager ","@connection serviceContent ","@connection nil? "]}," Fog Vsphere Compute Real initialize":{"type":"method","name":"initialize","children":[],"call":[" authenticate "," negotiate_revision ","options [] "," connect "," require "]}," Fog Vsphere Compute Mock reset_data":{"type":"method","name":"reset_data","children":[],"call":[" class data delete "," class data "," class "]}," Fog Vsphere Compute Mock data":{"type":"method","name":"data","children":[],"call":[" class data [] "," class data "," class "]}," Fog Vsphere Compute Mock initialize":{"type":"method","name":"initialize","children":[],"call":["options [] "," require "]}," Fog Vsphere Compute Shared is_uuid?":{"type":"method","name":"is_uuid?","children":[],"call":["(send\n  (lvar :id) :=~\n  (regexp\n    (str \"[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}\")\n    (regopt))) nil? ! ","(send\n  (lvar :id) :=~\n  (regexp\n    (str \"[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}\")\n    (regopt))) nil? ","id =~ "]}," Fog Vsphere Compute Shared managed_obj_id":{"type":"method","name":"managed_obj_id","children":[],"call":["obj to_s match [] ","obj to_s match ","obj to_s "]}," Fog Vsphere Compute Shared parent_attribute":{"type":"method","name":"parent_attribute","children":[],"call":["(send\n  (lvar :path) :select) flatten ","x [] is_a? ","x [] ","path select "," raise "]}," Fog Vsphere Compute Shared props_to_attr_hash":{"type":"method","name":"props_to_attr_hash","children":[],"call":["attrs []= ","/ + ","attrs [] path map join ","attrs [] path map ","attrs [] path ","attrs [] ","vm_mob_ref macs "," proc ","(or\n  (send\n    (lvar :vm_mob_ref) :resourcePool)\n  (send\n    (lvar :host) :resourcePool)) name ","host resourcePool ","vm_mob_ref resourcePool ","host name "," parent_attribute [] "," parent_attribute ","host path ","vm_mob_ref path "," raise ","e message [] ","e message ","attrs [] is_a? ","vm_mob_ref _ref ","Hash  [] tap ","Hash  [] ","props [] ","k to_s ","ATTR_TO_PROP  map "," parse_boot_order "," parse_extra_config "," parse_partitions "," parse_disks ","(or\n  (send\n    (lvar :vm_mob_ref) :resourcePool)\n  (send\n    (lvar :attrs [] ) :resourcePool)) name ","attrs []  resourcePool ","attrs []  name ","attrs []  path "]}," Fog Vsphere Compute Shared convert_vm_mob_ref_to_attr_hash":{"type":"method","name":"convert_vm_mob_ref_to_attr_hash","children":[],"call":[" props_to_attr_hash ","vm_mob_ref collect! ","ATTR_TO_PROP  values uniq ","ATTR_TO_PROP  values "," vm_mob_ref collect! _to_attr_hash "]}," Fog Vsphere Compute Shared convert_vm_view_to_attr_hash":{"type":"method","name":"convert_vm_view_to_attr_hash","children":[],"call":[" props_to_attr_hash ","vms map "," connection serviceContent propertyCollector collectMultiple ","ATTR_TO_PROP  values uniq ","ATTR_TO_PROP  values "," connection serviceContent propertyCollector "," connection serviceContent "," connection "," connection serviceContent propertyCollector collectMultiple  map "]}," Fog Vsphere Compute Real network_attributes":{"type":"method","name":"network_attributes","children":[],"call":["network name "," managed_obj_id "]}," Fog Vsphere Compute Shared parse_boot_order":{"type":"method","name":"parse_boot_order","children":[],"call":["(send\n  (lvar :vm_boot_devs) :map) compact uniq ","(send\n  (lvar :vm_boot_devs) :map) compact ","vm_boot_devs map ","vm_boot_devs is_a? "]}," Fog Vsphere Compute Real pod_selection_spec":{"type":"method","name":"pod_selection_spec","children":[],"call":["RbVmomi VIM StorageDrsPodSelectionSpec  new ","RbVmomi VIM VmPodConfigForPlacement  new ","raw_pods [] ","RbVmomi VIM PodDiskLocator  new ","vol key ","vols collect ","disks_per_pod map ","raw_pods []= "," get_raw_storage_pod ","disks_per_pod each_key ","spec []= ","vm_config_placements concat ","vm_config_placements << ","locator []= "," relocation_volume_backing ","RbVmomi VIM StorageDrsPodSelectionSpec  new  []= ","RbVmomi VIM PodDiskLocator  new  []= "]}," Fog Vsphere Compute Real relocation_volume_backing":{"type":"method","name":"relocation_volume_backing","children":[],"call":["RbVmomi VIM  VirtualDiskFlatVer2BackingInfo ","volume thin ","volume mode to_sym ","volume mode "]}," Fog Vsphere Compute Real add_new_volumes_specs":{"type":"method","name":"add_new_volumes_specs","children":[],"call":[" create_disk "," new_volumes map "," new_volumes "]}," Fog Vsphere Compute Real new_volumes":{"type":"method","name":"new_volumes","children":[],"call":["volumes drop ","template_volumes size ","vm_mob_ref config hardware device grep ","vm_mob_ref config hardware device ","vm_mob_ref config hardware ","vm_mob_ref config ","vm_mob_ref config hardware device grep  size "]}," Fog Vsphere Compute Real modified_volumes":{"type":"method","name":"modified_volumes","children":[],"call":["volumes take ","template_volumes size ","vm_mob_ref config hardware device grep ","vm_mob_ref config hardware device ","vm_mob_ref config hardware ","vm_mob_ref config ","vm_mob_ref config hardware device grep  size "]}," Fog Vsphere Compute Real group_disks_by_storage_pod":{"type":"method","name":"group_disks_by_storage_pod","children":[],"call":["disks_per_pod [] concat ","disks_per_pod delete ","disks_per_pod [] ","disks_per_pod key? ","volumes group_by ","(send\n  (lvar :volumes) :detect) storage_pod ","v storage_pod empty? ! ","v storage_pod empty? ","v storage_pod ","volumes detect ","volumes group_by  [] concat ","volumes group_by  delete ","volumes group_by  [] ","volumes group_by  key? "]}," Fog Vsphere Compute Mock update_resource_pool":{"type":"method","name":"update_resource_pool","children":[],"call":[]}," Fog Vsphere Compute Real get_raw_resource_pool_by_ref":{"type":"method","name":"get_raw_resource_pool_by_ref","children":[],"call":["rp _ref == ","attributes [] ","rp _ref "," list_raw_resource_pools detect "," list_raw_resource_pools ","dc find_compute_resource "," find_raw_datacenter "," find_raw_datacenter  find_compute_resource "]}," Fog Vsphere Compute Real update_resource_pool":{"type":"method","name":"update_resource_pool","children":[],"call":[" get_resource_pool ","attributes [] ","raw_resource_pool UpdateConfig "," get_resource_pool_spec "," get_raw_resource_pool_by_ref "," resource_pool_attributes "," get_raw_resource_pool_by_ref  UpdateConfig "," get_ get_raw_resource_pool_by_ref _by_ref "]}," Fog Vsphere Compute Mock destroy_resource_pool":{"type":"method","name":"destroy_resource_pool","children":[],"call":[]}," Fog Vsphere Compute Real destroy_resource_pool":{"type":"method","name":"destroy_resource_pool","children":[],"call":[" get_raw_resource_pool_by_ref Destroy_Task wait_for_completion "," get_raw_resource_pool_by_ref Destroy_Task "," get_raw_resource_pool_by_ref "]}," Fog Vsphere Compute Mock create_resource_pool":{"type":"method","name":"create_resource_pool","children":[],"call":[]}," Fog Vsphere Compute Real get_resource_pool_allocation_spec":{"type":"method","name":"get_resource_pool_allocation_spec","children":[],"call":["RbVmomi VIM  ResourceAllocationInfo ","RbVmomi VIM  SharesInfo ","attributes fetch ","RbVmomi VIM  SharesLevel "]}," Fog Vsphere Compute Real get_resource_pool_spec":{"type":"method","name":"get_resource_pool_spec","children":[],"call":["RbVmomi VIM  ResourceConfigSpec "," get_resource_pool_allocation_spec ","attributes fetch "]}," Fog Vsphere Compute Real create_resource_pool":{"type":"method","name":"create_resource_pool","children":[],"call":[" get_resource_pool ","attributes [] ","root_resource_pool CreateResourcePool "," get_resource_pool_spec ","cluster resourcePool ","cluster resourcePool find "," get_raw_cluster "," resource_pool_attributes "," raise ","root_resource_pool nil? ","attributes [] gsub "," get_root_resource_pool CreateResourcePool  ","cluster resourcePool  CreateResourcePool ","cluster resourcePool find  CreateResourcePool ","root_root_resource_pool CreateResourcePool  CreateResourcePool "," get_root_resource_pool CreateResourcePool _spec "," get_raw_cluster  resourcePool "," get_raw_cluster  resourcePool find "," get_raw_ get_raw_cluster  "," root_resource_pool CreateResourcePool _attributes ","cluster resourcePool  nil? ","cluster resourcePool find  nil? ","root_root_resource_pool CreateResourcePool  nil? "]}," Fog Vsphere Compute Shared parse_extra_config":{"type":"method","name":"parse_extra_config","children":[],"call":["(send\n  (lvar :vm_extra_config) :map) to_h ","entry [] ","vm_extra_config map ","vm_extra_config is_a? "]}," Fog Vsphere Compute Shared parse_partitions":{"type":"method","name":"parse_partitions","children":[],"call":["p capacity ","p freeSpace ","p diskPath ","vm_partitions grep map ","vm_partitions grep ","vm_partitions is_a? "]}," Fog Vsphere Compute Shared parse_disks":{"type":"method","name":"parse_disks","children":[],"call":["d capacityInBytes ","d deviceInfo label ","d deviceInfo ","vm_disks grep map ","vm_disks grep ","vm_disks is_a? "]}}