{" Patron user_agent_string":{"type":"method","name":"user_agent_string","children":[],"call":[]}," Patron version":{"type":"method","name":"version","children":[],"call":[]}," Patron Util build_query_string_from_hash":{"type":"method","name":"build_query_string_from_hash","children":[],"call":[" build_query_pairs_from_hash join "," build_query_pairs_from_hash "]}," Patron Util build_query_pairs_from_hash":{"type":"method","name":"build_query_pairs_from_hash","children":[],"call":["recursive call ","pairs << ","v is_a? ","Patron Session  escape ","v to_s ","prefix == ","h each_pair ","Proc  new ","CGI  escape ","recursiPatron Session  escape e call ","recursiCGI  escape e call ","Patron Session  escape  is_a? ","CGI  escape  is_a? ","Patron Session  escape  to_s ","CGI  escape  to_s "]}," Patron Session build_request":{"type":"method","name":"build_request","children":[],"call":["req url= ","uri to_s ","uri query= ","uri query empty? ","uri query ","query join ","options [] to_s split ","options [] to_s ","options [] ","Util  build_query_pairs_from_hash ","options [] is_a? ","uri query to_s split ","uri query to_s ","URI  parse ","File  join ","base_url empty? "," raise ","url empty? ","url to_s "," base_url to_s "," base_url ","req file_name= ","req upload_data= ","req multipart= ","req download_byte_limit= ","options fetch "," download_byte_limit ","req buffer_size= "," buffer_size ","req ignore_content_length= "," ignore_content_length ","req cacert= "," cacert ","req http_version= "," http_version ","req ssl_version= "," ssl_version ","req insecure= "," insecure ","req auth_type= "," auth_type ","req proxy_type= "," proxy_type ","req proxy= "," proxy ","req password= "," password ","req username= "," username ","req max_redirects= "," max_redirects ","req force_ipv4= "," force_ipv4 ","req low_speed_limit= "," low_speed_limit ","req low_speed_time= "," low_speed_time ","req connect_timeout= "," connect_timeout ","req timeout= "," timeout ","req automatic_content_encoding= "," automatic_content_encoding ","req headers= "," headers merge "," headers ","req action= ","Request  new tap ","Request  new ","headers [] ","req progress_callback= "," progress_callback ","req dns_cache_timeout= "," dns_cache_timeout ","URI  join ","req uri to_s = ","req url to_s = ","URI  parse  to_s ","URI  join  to_s ","uri uri query to_s split = ","URI  parse  query= ","URI  join  query= ","uri uri query to_s split  empty? ","URI  parse  query empty? ","URI  join  query empty? ","uri uri query to_s split  ","URI  parse  query ","URI  join  query ","uri query to_s split  join ","Util  build_uri query to_s split _pairs_from_hash ","uri uri query to_s split  to_s split ","URI  parse  query to_s split ","URI  join  query to_s split ","uri uri query to_s split  to_s ","URI  parse  query to_s ","URI  join  query to_s ","base_uri to_s  empty? ","base_url to_s  empty? "," base_url to_s  empty? ","uri to_s  empty? ","url to_s  empty? ","uri to_s  to_s ","url to_s  to_s "," base_uri to_s  to_s "," base_url to_s  to_s ","  base_url to_s  to_s "," base_uri to_s  "," base_url to_s  ","  base_url to_s  "]}," Patron Session response_class":{"type":"method","name":"response_class","children":[],"call":[]}," Patron Session request":{"type":"method","name":"request","children":[],"call":[" handle_request "," build_request "," raise ","req url empty? ","req url ","req url= "," base_url to_s + ","url to_s "," base_url to_s "," base_url ","req proxy= "," proxy ","req file_name= ","options [] ","req upload_data= ","req password= "," password ","req username= "," username ","req headers= "," headers merge "," headers ","req max_redirects= "," max_redirects ","req connect_timeout= "," connect_timeout ","req timeout= "," timeout ","req action= ","Request  new ","req auth_type= "," auth_type ","req buffer_size= "," buffer_size ","req insecure= "," insecure ","req proxy_type= "," proxy_type ","req multipart= ","headers [] ","url empty? ","uri to_s ","uri query= ","uri query empty? ","uri query ","query join ","options [] to_s split ","options [] to_s ","Util  build_query_pairs_from_hash ","options [] is_a? ","uri query to_s split ","uri query to_s ","URI  parse ","req ignore_content_size= "," ignore_content_size ","req ignore_content_length= "," ignore_content_length ","options fetch "," handle_ build_request uest "," handle_Request  new uest "," build_ build_request uest "," build_Request  new uest "," build_request  url empty? ","Request  new  url empty? ","req uri to_s  empty? ","req  base_url to_s +  empty? "," build_request  url ","Request  new  url ","req uri to_s  ","req  base_url to_s +  "," build_request  url= ","Request  new  url= ","req uri to_s = ","req  base_url to_s + = "," base_uri to_s  to_s + "," base_ base_url to_s +  to_s + ","uri to_s  to_s "," base_url to_s +  to_s "," base_uri to_s  to_s "," base_ base_url to_s +  to_s "," base_uri to_s  "," base_ base_url to_s +  "," build_request  proxy= ","Request  new  proxy= "," build_request  file_name= ","Request  new  file_name= "," build_request  upload_data= ","Request  new  upload_data= "," build_request  password= ","Request  new  password= "," build_request  username= ","Request  new  username= "," build_request  headers= ","Request  new  headers= "," build_request  max_redirects= ","Request  new  max_redirects= "," build_request  connect_timeout= ","Request  new  connect_timeout= "," build_request  timeout= ","Request  new  timeout= "," build_request  action= ","Request  new  action= "," build_request  auth_type= ","Request  new  auth_type= "," build_request  buffer_size= ","Request  new  buffer_size= "," build_request  insecure= ","Request  new  insecure= "," build_request  proxy_type= ","Request  new  proxy_type= "," build_request  multipart= ","Request  new  multipart= ","uri to_s  empty? "," base_url to_s +  empty? ","URI  parse  to_s ","uri uri query to_s split = ","URI  parse  query= ","uri uri query to_s split  empty? ","URI  parse  query empty? ","uri uri query to_s split  ","URI  parse  query ","uri query to_s split  join ","Util  build_uri query to_s split _pairs_from_hash ","uri uri query to_s split  to_s split ","URI  parse  query to_s split ","uri uri query to_s split  to_s ","URI  parse  query to_s "," build_request  ignore_content_size= ","Request  new  ignore_content_size= "," build_request  ignore_content_length= ","Request  new  ignore_content_length= "]}," Patron Session copy":{"type":"method","name":"copy","children":[],"call":[" request ","headers []= "]}," Patron Session post_multipart":{"type":"method","name":"post_multipart","children":[],"call":[" request "]}," Patron Session post_file":{"type":"method","name":"post_file","children":[],"call":[" request "]}," Patron Session post":{"type":"method","name":"post","children":[],"call":[" request ","headers []= ","(send\n  (lvar :data) :map) join "," urlencode + + "," urlencode ","v to_s "," urlencode + ","k to_s ","data map ","data is_a? "," do_request ","(send\n  (lvar :(send\n  (lvar :data) :map) join ) :map) join ","(send\n  (lvar :data) :map) join  map ","(send\n  (lvar :data) :map) join  is_a? "]}," Patron Session put_file":{"type":"method","name":"put_file","children":[],"call":[" request "]}," Patron Session patch":{"type":"method","name":"patch","children":[],"call":[" request "]}," Patron Session put":{"type":"method","name":"put","children":[],"call":[" request "," do_request "]}," Patron Session delete":{"type":"method","name":"delete","children":[],"call":[" request "," do_request "]}," Patron Session head":{"type":"method","name":"head","children":[],"call":[" request "," do_request "]}," Patron Session get_file":{"type":"method","name":"get_file","children":[],"call":[" request "]}," Patron Session get":{"type":"method","name":"get","children":[],"call":[" request "," do_request "]}," Patron Session enable_debug":{"type":"method","name":"enable_debug","children":[],"call":[" set_debug_file ","file to_s "]}," Patron Session handle_cookies":{"type":"method","name":"handle_cookies","children":[],"call":[" add_cookie_file ","path to_s "," raise ","File  writable? ! ","File  writable? ","File  exists? ","path dirname ","File  exists? ! "," Pathname expand_path "," Pathname "," enable_cookie_session ","File  readable? "," Pathname expand_path  to_s "," Pathname expand_path  dirname "," Pathname expand_ Pathname expand_path  "]}," Patron Session initialize":{"type":"method","name":"initialize","children":[],"call":["Patron  user_agent_string ","@headers [] "," block_given? "," send ","args each "," ext_initialize "]}," Patron ResponseDecoding decode_header_data":{"type":"method","name":"decode_header_data","children":[],"call":["str encode ","tries each "]}," Patron ResponseDecoding internal_encoding":{"type":"method","name":"internal_encoding","children":[],"call":[" encoding ","Encoding  default_internal "]}," Patron ResponseDecoding encoding_from_headers_or_binary":{"type":"method","name":"encoding_from_headers_or_binary","children":[],"call":[" raise ","INVALID_CHARSET_NAME_ERROR  % ","@headers [] inspect ","@headers [] ","Encoding  find "," charset_from_content_type "]}," Patron ResponseDecoding charset_from_content_type":{"type":"method","name":"charset_from_content_type","children":[],"call":["@headers [] to_s =~ ","@headers [] to_s ","@headers [] "]}," Patron ResponseDecoding convert_encoding_and_raise":{"type":"method","name":"convert_encoding_and_raise","children":[],"call":[" raise ","INTERNAL_CHARSET_MISMATCH_ERROR  % ","str encoding to_s ","str encoding ","str encoding == ","str encode "," internal_encoding ","str str encoding to_s oding to_s ","str str encoding to_s oding ","str str encoding to_s oding == ","str str encoding to_s ode "," internal_str encoding to_s oding ","  internal_encoding _encoding "]}," Patron ResponseDecoding decode_body":{"type":"method","name":"decode_body","children":[],"call":["@body encode "," internal_encoding "," convert_encoding_and_raise "," raise ","MISREPORTED_ENCODING_ERROR  % ","encoding_matched ! ","@body force_encoding valid_encoding? ","@body force_encoding "," encoding_from_headers_or_binary ","@body force_encoding valid_encoding?  ! "]}," Patron Response parse_headers":{"type":"method","name":"parse_headers","children":[],"call":["@headers []= ","@headers [] << ","@headers [] ","@headers [] kind_of? ","@headers key? ","val strip! ","val nil? ","line split ","line empty? ","lines each ","lines shift ","header_data split ","last_response headers each ","last_response headers ","last_response status_line ","responses [] ","Patron HeaderParser  parse ","parts [] ","header split ","header strip ","header =~ ","header_data split each ","parts [] strip! ","parts [] nil? ","@headers has_key? ","parts empty? ","header_data split  each ","header_data split  shift ","responses []  headers each ","responses []  headers ","responses []  status_line ","Patron HeaderParser  parse  [] ","header split  [] ","header split  [] strip! ","header split  [] nil? ","header split  empty? "]}," Patron Response inspectable_body":{"type":"method","name":"inspectable_body","children":[],"call":[" decode_body "]}," Patron Response decoded_body":{"type":"method","name":"decoded_body","children":[],"call":[" decode_body "]}," Patron Response body_decodable?":{"type":"method","name":"body_decodable?","children":[],"call":[" decoded_body ","@body nil? "]}," Patron Response error?":{"type":"method","name":"error?","children":[],"call":[" status >= "," status "]}," Patron Response ok?":{"type":"method","name":"ok?","children":[],"call":[" error? ! "," error? "]}," Patron Response initialize":{"type":"method","name":"initialize","children":[],"call":[" charset_from_content_type "," parse_headers "," decode_header_data ","body force_encoding ","url force_encoding "," convert_to_default_encoding! ","(lvar :url) each "," determine_charset ","@headers [] [] == ","@headers [] [] ","@headers [] "," decode_ decode_header_data  "]}," Patron Response inspect":{"type":"method","name":"inspect","children":[],"call":[]}," Patron Request marshal_load":{"type":"method","name":"marshal_load","children":[],"call":[]}," Patron Request marshal_dump":{"type":"method","name":"marshal_dump","children":[],"call":[]}," Patron Request eql?":{"type":"method","name":"eql?","children":[],"call":[" send == ","request send "," send ","READER_VARS  inject ","Request  === "]}," Patron Request action_name":{"type":"method","name":"action_name","children":[],"call":["@action to_s upcase ","@action to_s "]}," Patron Request credentials":{"type":"method","name":"credentials","children":[],"call":[" password "," username "," password nil? "," username nil? "]}," Patron Request buffer_size=":{"type":"method","name":"buffer_size=","children":[],"call":["buffer_size to_i ","buffer_size != "," raise ","buffer_size to_i < "]}," Patron Request headers=":{"type":"method","name":"headers=","children":[],"call":[" raise ","new_headers kind_of? ! ","new_headers kind_of? "]}," Patron Request max_redirects=":{"type":"method","name":"max_redirects=","children":[],"call":["new_max_redirects to_i "," raise ","new_max_redirects to_i < "]}," Patron Request connect_timeout=":{"type":"method","name":"connect_timeout=","children":[],"call":["new_timeout to_i "," raise ","new_timeout to_i < ","new_timeout to_f ","new_timeout to_f < "]}," Patron Request timeout=":{"type":"method","name":"timeout=","children":[],"call":["new_timeout to_i "," raise ","new_timeout to_i < ","new_timeout to_f ","new_timeout to_f < "]}," Patron Request action=":{"type":"method","name":"action=","children":[],"call":["action downcase to_sym ","action downcase "," raise ","VALID_ACTIONS  join ","VALID_ACTIONS  include? ! ","VALID_ACTIONS  include? ","action to_s upcase ","action to_s ","(sym :get) include? ! ","(sym :get) include? "]}," Patron Request upload_data=":{"type":"method","name":"upload_data=","children":[],"call":["Util  build_query_string_from_hash "," action == "," action "," multipart "," hash_to_string ","@action == "]}," Patron Request auth_type=":{"type":"method","name":"auth_type=","children":[],"call":[" raise ","type inspect "]}," Patron Request initialize":{"type":"method","name":"initialize","children":[],"call":[]}," HeaderParser parse":{"type":"method","name":"parse","children":[],"call":[]}," Patron Session do_request":{"type":"method","name":"do_request","children":[],"call":[" handle_request "," raise ","req url empty? ","req url ","req url= "," base_url to_s + ","url to_s "," base_url to_s "," base_url ","req upload_data= ","req password= "," password ","req username= "," username ","req headers= "," headers merge "," headers ","req max_redirects= "," max_redirects ","req connect_timeout= "," connect_timeout ","req timeout= "," timeout ","req action= ","Request  new "," handle_Request  new uest ","Request  new  url empty? ","Request  new  url ","Request  new  url= ","Request  new  upload_data= ","Request  new  password= ","Request  new  username= ","Request  new  headers= ","Request  new  max_redirects= ","Request  new  connect_timeout= ","Request  new  timeout= ","Request  new  action= "]}," Patron Request hash_to_string":{"type":"method","name":"hash_to_string","children":[],"call":["pairs join ","recursive call ","pairs << ","v is_a? ","prefix == ","h each_pair ","Proc  new ","CGI  escape ","v to_s ","@action == ","recursiCGI  escape e call ","CGI  escape  is_a? ","CGI  escape  to_s "]}," Patron Request upload_data":{"type":"method","name":"upload_data","children":[],"call":[]}," Patron Session urlencode":{"type":"method","name":"urlencode","children":[],"call":[" sprintf ","s [] ord ","s [] ","str gsub "]}," Patron Response convert_to_default_encoding!":{"type":"method","name":"convert_to_default_encoding!","children":[],"call":["str force_encoding encode! ","Encoding  default_internal ","str force_encoding "," charset ","str respond_to? "]}," Patron Response charset_regex":{"type":"method","name":"charset_regex","children":[],"call":[]}," Patron Response determine_charset":{"type":"method","name":"determine_charset","children":[],"call":["body match "," charset_regex ","header_data match "," validate_charset "]}," Patron Response marshal_load":{"type":"method","name":"marshal_load","children":[],"call":[]}," Patron Response marshal_dump":{"type":"method","name":"marshal_dump","children":[],"call":[]}," Patron Response validate_charset":{"type":"method","name":"validate_charset","children":[],"call":["Encoding  find "]}}