{" Rack Parser _call":{"type":"method","name":"_call","children":[],"call":["(pair\n  (str \"errors\")\n  (send\n    (lvar :e) :to_s)) method call ","(pair\n  (str \"errors\")\n  (send\n    (lvar :e) :to_s)) method ","e to_s "," logger warn "," class "," logger "," respond_to? ","@app call ","env update ","@content_types [] call ","@content_types [] ","content_type split last ","content_type split ","env [] ","body ! ","body empty? ","body respond_to? ","env [] read ","Hash  respond_to? ","Rack Request  new media_type ","Rack Request  new ","@error_responses [] call ","@error_responses [] ","@error_responses [] ! ","@content_types [] ! ","handler last call ","handler last ","type match "," handlers detect "," handlers "," warn! ","parser last call ","parser last ","body empty? ! ","env [] rewind "," parsers detect "," parsers ","@env [] s [] call ","@Rack Request  new media_type s [] call ","@content_Rack Request  new media_type s [] call ","@env [] s [] ","@Rack Request  new media_type s [] ","@content_Rack Request  new media_type s [] ","env []  split last ","Rack Request  new media_type  split last ","content_Rack Request  new media_type  split last ","env []  split ","Rack Request  new media_type  split ","content_Rack Request  new media_type  split ","env [] read  ! ","env [] read  empty? ","env [] read  respond_to? ","Rack Request  new media_Rack Request  new media_type  ","@env [] s [] ! ","@Rack Request  new media_type s [] ! ","@content_Rack Request  new media_type s [] ! ","Rack Request  new media_type  match ","env [] read  empty? ! "]}," Rack Parser call":{"type":"method","name":"call","children":[],"call":[" dup _call "," dup ","@app call ","handler last call ","handler last ","type match "," handlers detect "," handlers "," warn! ","env update ","env [] ","parser last call ","parser last ","body empty? ! ","body empty? ","env [] rewind ","env [] read "," parsers detect "," parsers ","Rack Request  new media_type ","Rack Request  new "," match_content_types_for ","parsed is_a? ","env []= "," match_content_types_for  last call "," match_content_types_for  last ","Rack Request  new media_type  match ","  match_content_types_for s detect ","  match_content_types_for s ","env [] read  empty? ! ","env [] read  empty? ","Rack Request  new media_Rack Request  new media_type  "," match_content_Rack Request  new media_type s_for ","parser last call  is_a? "]}," Rack Parser initialize":{"type":"method","name":"initialize","children":[],"call":["DEFAULT_CONTENT_TYPE  merge ","options delete ","DEFAULT_ERROR_RESPONSE  merge ","options [] "]}," Rack Parser warn!":{"type":"method","name":"warn!","children":[],"call":[" logger warn "," logger ","[Rack::Parser] Error on %s : %s % ","error to_s "]}," Rack Parser match_content_types_for":{"type":"method","name":"match_content_types_for","children":[],"call":["type == ","type match ","content_type is_a? ","content_types detect "]}}