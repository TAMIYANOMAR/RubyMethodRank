{" Steak Autocomplete choose_autocomplete_result":{"type":"method","name":"choose_autocomplete_result","children":[],"call":[" page execute_script "," page "," sleep "]}," SimpleForm Inputs AutocompleteCollectionInput input":{"type":"method","name":"input","children":[],"call":["out html_safe ","out << ","@builder hidden_field "," attribute_name ","hidden_options []= "," input_html_options "," input_html_options merge ","new_options []= ","association send ","association respond_to? ","@builder autocomplete_field "," options [] "," options ","autocomplete_options []= "," object send "," reflection name "," reflection "," object "," detect_collection_methods "," rewrite_autocomplete_option "," options []= ","# + ","id_element << << ","id_element << ","(begin\n  (send nil :object_name)) gsub sub ","(begin\n  (send nil :object_name)) gsub "," object_name ","@builder autocomplete_field  html_safe ","@builder autocomplete_field  << "," input_html_options  []= "," object send  send "," object send  respond_to? "," rewrite_autocomplete_option  []= ","# +  << << "," options []  << << ","# +  << "," options []  << "]}," SimpleForm Inputs AutocompleteInput has_placeholder?":{"type":"method","name":"has_placeholder?","children":[],"call":[" placeholder_present? "]}," SimpleForm Inputs AutocompleteInput limit":{"type":"method","name":"limit","children":[],"call":[" column limit "," column "]}," SimpleForm Inputs AutocompleteInput input":{"type":"method","name":"input","children":[],"call":["@builder autocomplete_field "," rewrite_autocomplete_option "," options [] "," options "," attribute_name "]}," SimpleForm Inputs Autocomplete rewrite_autocomplete_option":{"type":"method","name":"rewrite_autocomplete_option","children":[],"call":[" input_html_options merge "," input_html_options ","new_options []= "," options delete "," options "," options [] ","JSON  generate "]}," Rails4Autocomplete Orm Mongoid get_autocomplete_items":{"type":"method","name":"get_autocomplete_items","children":[],"call":["model where limit order_by ","model where limit ","model where ","method to_sym ","^ + ","Regexp  escape ",".* + + ",".* + "," get_autocomplete_order "," get_autocomplete_limit ","parameters [] ","options [] ","items send ","scopes each ","scopes empty? ","model where limit  get_autocomplete_order _by ","model where  get_autocomplete_limit  order_by ","parameters []  where limit order_by ","model where  get_autocomplete_limit  ","parameters []  where limit ","parameters []  where ","parameters []  to_sym "," get_autocomplete_ get_autocomplete_order  "," get_autocomplete_ get_autocomplete_limit  ","parameters []  [] ","model where limit order_by  send ","items send  send ","options []  each ","options []  empty? "]}," Rails4Autocomplete Orm Mongoid get_autocomplete_order":{"type":"method","name":"get_autocomplete_order","children":[],"call":["method to_sym ","sfields [] downcase to_sym ","sfields [] downcase ","sfields [] ","fields split ","order split collect ","order split ","options [] ","fields split  [] downcase to_sym ","fields split  [] downcase ","fields split  [] ","options []  split collect ","options []  split "]}," Rails4Autocomplete Orm MongoMapper get_autocomplete_items":{"type":"method","name":"get_autocomplete_items","children":[],"call":["model where limit sort ","model where limit ","model where ","method to_sym ","(if\n  (lvar :is_full_search)\n  (str \".*\")\n  (str \"^\")) + + ","(if\n  (lvar :is_full_search)\n  (str \".*\")\n  (str \"^\")) + "," get_autocomplete_order "," get_autocomplete_limit ","parameters [] ","options [] ","model where  get_autocomplete_limit  sort ","parameters []  where limit sort ","model where  get_autocomplete_limit  ","parameters []  where limit ","parameters []  where ","parameters []  to_sym ","(if\n  (lvar :is_full_(if\n  (lvar :is_full_search)\n  (str \".*\")\n  (str \"^\")) + + )\n  (str \".*\")\n  (str \"^\")) + + ","(if\n  (lvar :options [] )\n  (str \".*\")\n  (str \"^\")) + + ","(if\n  (lvar :is_full_(if\n  (lvar :is_full_search)\n  (str \".*\")\n  (str \"^\")) + + )\n  (str \".*\")\n  (str \"^\")) + ","(if\n  (lvar :options [] )\n  (str \".*\")\n  (str \"^\")) + "," get_autocomplete_ get_autocomplete_order  "," get_autocomplete_ get_autocomplete_limit  ","parameters []  [] "]}," Rails4Autocomplete Orm MongoMapper get_autocomplete_order":{"type":"method","name":"get_autocomplete_order","children":[],"call":["method to_sym ","sfields [] downcase to_sym ","sfields [] downcase ","sfields [] ","fields split ","order split collect ","order split ","options [] ","fields split  [] downcase to_sym ","fields split  [] downcase ","fields split  [] ","options []  split collect ","options []  split "]}," Rails4Autocomplete Orm ActiveRecord postgres?":{"type":"method","name":"postgres?","children":[],"call":["model connection class to_s match ","model connection class to_s ","model connection class ","model connection "]}," Rails4Autocomplete Orm ActiveRecord get_autocomplete_where_clause":{"type":"method","name":"get_autocomplete_where_clause","children":[],"call":["term downcase "," postgres? ","options [] ","model table_name ","model model table_name  "]}," Rails4Autocomplete Orm ActiveRecord get_autocomplete_select_clause":{"type":"method","name":"get_autocomplete_select_clause","children":[],"call":["(dstr\n  (begin\n    (lvar :table_name))\n  (str \".\")\n  (begin\n    (send\n      (lvar :model) :primary_key))) + ","options [] ","options [] blank? ","model primary_key ","model table_name ","(dstr\n  (begin\n    (lvar :model table_name ))\n  (str \".\")\n  (begin\n    (send\n      (lvar :model) :primary_key))) + ","model model table_name  "]}," Rails4Autocomplete Orm ActiveRecord get_autocomplete_items":{"type":"method","name":"get_autocomplete_items","children":[],"call":["items where ","where blank? ","items where limit order ","items where limit "," get_autocomplete_where_clause ","items select "," get_autocomplete_select_clause ","options [] ","items send ","scopes each ","scopes empty? ","model all "," get_autocomplete_order "," get_autocomplete_limit "," Array ","parameters [] ","items where  where ","items where limit order  where ","items select  where ","items send  where ","model all  where ","items options []  ","options []  blank? ","items where  where limit order ","items where limit order  where limit order ","items select  where limit order ","items send  where limit order ","model all  where limit order ","items where limit  get_autocomplete_order  ","items where  get_autocomplete_limit  order ","items options []  limit order ","items where  where limit ","items where limit order  where limit ","items select  where limit ","items send  where limit ","model all  where limit ","items where  get_autocomplete_limit  ","items options []  limit "," get_autocomplete_options [] _clause ","items where  select ","items where limit order  select ","items select  select ","items send  select ","model all  select ","parameters []  [] ","items where  send ","items where limit order  send ","items select  send ","items send  send ","model all  send "," Array  each "," Array  empty? ","parameters []  all "," get_autocomplete_ get_autocomplete_order  "," get_autocomplete_ get_autocomplete_limit  "]}," Rails4Autocomplete Orm ActiveRecord get_autocomplete_order":{"type":"method","name":"get_autocomplete_order","children":[],"call":["model table_name ","options [] "]}," Rails4Autocomplete FormtasticPlugin autocompleted_string_input":{"type":"method","name":"autocompleted_string_input","children":[],"call":[" label << "," autocomplete_field ","options delete "," label "," options_for_label "]}," Rails4Autocomplete FormtasticPlugin autocomplete_input":{"type":"method","name":"autocomplete_input","children":[],"call":[" template content_tag ","Formtastic Util  html_safe "," template ","(send\n  (lvar :input_parts) :map) compact join ","(send\n  (lvar :input_parts) :map) compact "," send ","input_parts map ","input_parts - ","options [] == ","options [] "," class inline_order dup "," class inline_order "," class ","options [] [] ","wrapper_html []= ","(send\n  (lvar :html_class) :<<\n  (send\n    (lvar :wrapper_html) :[]\n    (sym :class))) flatten compact join ","(send\n  (lvar :html_class) :<<\n  (send\n    (lvar :wrapper_html) :[]\n    (sym :class))) flatten compact ","(send\n  (lvar :html_class) :<<\n  (send\n    (lvar :wrapper_html) :[]\n    (sym :class))) flatten ","html_class << ","wrapper_html [] "," generate_html_id ","options delete ","@object errors [] blank? ! ","@object errors [] blank? ","@object errors [] ","method to_sym ","@object errors ","@object respond_to? ","options []= "," method_required? ","options key? "," ActiveSupport Deprecation  warn "," caller ","The :selected, :checked (and :default) options are deprecated in Formtastic and will be removed from 1.0.  << << ","The :selected, :checked (and :default) options are deprecated in Formtastic and will be removed from 1.0.  << ","(send\n  (lvar :input_parts - ) :map) compact join ","(send\n  (lvar : class inline_order dup ) :map) compact join ","(send\n  (lvar :input_parts - ) :map) compact ","(send\n  (lvar : class inline_order dup ) :map) compact ","input_parts -  map "," class inline_order dup  map ","input_parts -  - "," class inline_order dup  - "]}," Formtastic Inputs AutocompleteInput to_html":{"type":"method","name":"to_html","children":[],"call":[" label_html << "," builder autocomplete_field "," input_html_options "," options delete "," options "," method "," builder "," label_html "," input_wrapping "]}," FormBuilder autocomplete_field":{"type":"method","name":"autocomplete_field","children":[],"call":["@template autocomplete_field "," objectify_options "]}," ActionView Helpers rewrite_autocomplete_option":{"type":"method","name":"rewrite_autocomplete_option","children":[],"call":["options []= ","options delete ","options [] ","JSON  generate "]}," ActionView Helpers FormTagHelper autocomplete_field_tag":{"type":"method","name":"autocomplete_field_tag","children":[],"call":[" text_field_tag "," rewrite_autocomplete_option ","options []= "]}," ActionView Helpers FormHelper autocomplete_field":{"type":"method","name":"autocomplete_field","children":[],"call":[" text_field "," rewrite_autocomplete_option ","options []= "]}," Rails4Autocomplete Autocomplete json_for_autocomplete":{"type":"method","name":"json_for_autocomplete","children":[],"call":["hash []= ","item send ","extra_data each ","item id to_s ","item id ","items collect "]}," Rails4Autocomplete Autocomplete get_object":{"type":"method","name":"get_object","children":[],"call":["model_sym to_s camelize constantize ","model_sym to_s camelize ","model_sym to_s "]}," Rails4Autocomplete Autocomplete get_autocomplete_limit":{"type":"method","name":"get_autocomplete_limit","children":[],"call":["options [] "]}," Rails4Autocomplete Autocomplete ClassMethods autocomplete":{"type":"method","name":"autocomplete","children":[],"call":[" render "," json_for_autocomplete ","options [] "," get_autocomplete_items "," get_object ","term blank? ! ","term blank? "," params [] "," params ","options has_key? "," define_method "," get_autocomplete_ get_autocomplete_items  "," params []  blank? ! "," params []  blank? "," define_options []  "]}," Rails4Autocomplete Autocomplete included":{"type":"method","name":"included","children":[],"call":[]}," Autocomplete UncompressedGenerator source_root":{"type":"method","name":"source_root","children":[],"call":[]}," Autocomplete UncompressedGenerator install":{"type":"method","name":"install","children":[],"call":[" copy_file "]}," Autocomplete InstallGenerator source_root":{"type":"method","name":"source_root","children":[],"call":[]}," Autocomplete InstallGenerator install":{"type":"method","name":"install","children":[],"call":[" copy_file "]}}