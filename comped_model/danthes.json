{" Danthes Generators Base add_gem":{"type":"method","name":"add_gem","children":[],"call":[" gem ","gemfile_content include? ","f write ","File  open ","gemfile_content =~ ","File  read ","File  join "," destination_root ","File  read  include? ","File  read  =~ "]}," Danthes Generators Base banner":{"type":"method","name":"banner","children":[],"call":[]}," Danthes Generators Base source_root":{"type":"method","name":"source_root","children":[],"call":[]}," Danthes Generators RedisInstallGenerator add_redis_gem":{"type":"method","name":"add_redis_gem","children":[],"call":[" add_gem "]}," Danthes Generators RedisInstallGenerator copy_files":{"type":"method","name":"copy_files","children":[],"call":[" template "]}," Danthes Generators InstallGenerator copy_files":{"type":"method","name":"copy_files","children":[],"call":[" copy_file "," Rails  version < "," Rails  version "," template "]}," Danthes faye_app":{"type":"method","name":"faye_app","children":[],"call":["Faye RackAdapter  new "," config "," Faye RackAdapter  new ","rack_config []= "," config [] ","(sym :engine) each "]}," Danthes signature_expired?":{"type":"method","name":"signature_expired?","children":[],"call":["timestamp < ","(send\n  (begin\n    (send\n      (send\n        (send\n          (const nil :Time) :now) :to_f) :-\n      (send\n        (send nil :config) :[]\n        (sym :signature_expiration)))) :*\n  (int 1000)) round ","(send\n  (send\n    (send\n      (const nil :Time) :now) :to_f) :-\n  (send\n    (send nil :config) :[]\n    (sym :signature_expiration))) * ","Time  now to_f - "," config [] "," config ","Time  now to_f ","Time  now "]}," Danthes subscription":{"type":"method","name":"subscription","children":[],"call":["sub []= ","Digest SHA1  hexdigest ","(send\n  (send nil :config) :[]\n  (sym :secret_token)) join ","sub [] "," config [] "," config ","(pair\n  (sym :server)\n  (send nil :server_url)) merge ","(send\n  (send\n    (send\n      (const nil :Time) :now) :to_f) :*\n  (int 1000)) round ","Time  now to_f * ","Time  now to_f ","Time  now "," server_url "," Digest SHA1  hexdigest ","(pair\n  (sym :server)\n  (send nil :server_url)) merge  []= ","(pair\n  (sym :server)\n  (send nil :server_url)) merge  [] "]}," Danthes server_url":{"type":"method","name":"server_url","children":[],"call":["(send\n  (send nil :config) :[]\n  (sym :server)) join "," config [] gsub "," config [] "," config "]}," Danthes message":{"type":"method","name":"message","children":[],"call":["message [] []= ","message [] ","data kind_of? "," config [] "," config ","data is_a? "]}," Danthes publish_message":{"type":"method","name":"publish_message","children":[],"call":["h request ","http start ","http use_ssl= ","url scheme == ","url scheme ","Net HTTP  new ","url port ","url host ","form set_form_data ","message to_json ","Net HTTP Post  new ","url path ","url path empty? ","URI  parse "," server_url "," raise "," config [] "," config "," Net HTTP  new "," Net HTTP Post  new "," fail ","Net HTTP  new  start "," Net HTTP  new  start ","Net HTTP  new  use_ssl= "," Net HTTP  new  use_ssl= ","URI  parse  scheme == ","URI  parse  scheme ","URI  parse  port ","URI  parse  host ","Net HTTP Post  new  set_Net HTTP Post  new _data "," Net HTTP Post  new  set_ Net HTTP Post  new _data ","URI  parse  path ","URI  parse  path empty? "," server_URI  parse  "]}," Danthes publish_to":{"type":"method","name":"publish_to","children":[],"call":[" publish_message "," message "]}," Danthes load_redis_config":{"type":"method","name":"load_redis_config","children":[],"call":[" config []= "," config ","options []= ","k to_sym ","yaml each ","yaml delete ","(send\n  (send\n    (lvar :yaml) :keys) :-\n  (const nil :REDIS_ACCEPTED_KEYS)) each ","yaml keys - ","yaml keys ","YAML  load_file [] "," env ","YAML  load_file "," require ","key to_sym ","REDIS_ACCEPTED_KEYS  include? "," YAML  load [] "," YAML  load "," ERB  new result "," ERB  new "," File  read ","YAML  load_file []  each "," YAML  load []  each ","YAML  load_file []  delete "," YAML  load []  delete ","(send\n  (send\n    (lvar :YAML  load_file [] ) :keys) :-\n  (const nil :REDIS_ACCEPTED_KEYS)) each ","(send\n  (send\n    (lvar : YAML  load [] ) :keys) :-\n  (const nil :REDIS_ACCEPTED_KEYS)) each ","YAML  load_file []  keys - "," YAML  load []  keys - ","YAML  load_file []  keys "," YAML  load []  keys "]}," Danthes load_config":{"type":"method","name":"load_config","children":[],"call":[" config []= ","k to_sym "," config ","yaml each ","yaml delete ","(send\n  (send\n    (lvar :yaml) :keys) :-\n  (const nil :ACCEPTED_KEYS)) each ","yaml keys - ","yaml keys "," raise "," environment ","yaml nil? "," YAML  load_file [] "," env "," YAML  load_file "," YAML  load [] "," YAML  load ","ERB  new result ","ERB  new ","File  read ","key to_sym ","ACCEPTED_KEYS  include? "," fail "," ERB  new result "," ERB  new "," File  read "," YAML  load_file []  each "," YAML  load []  each "," YAML  load_file []  delete "," YAML  load []  delete ","(send\n  (send\n    (lvar : YAML  load_file [] ) :keys) :-\n  (const nil :ACCEPTED_KEYS)) each ","(send\n  (send\n    (lvar : YAML  load [] ) :keys) :-\n  (const nil :ACCEPTED_KEYS)) each "," YAML  load_file []  keys - "," YAML  load []  keys - "," YAML  load_file []  keys "," YAML  load []  keys "," YAML  load_file []  nil? "," YAML  load []  nil? "]}," Danthes startup":{"type":"method","name":"startup","children":[],"call":["ENV  [] ","Rails  env ","DEFAULT_OPTIONS  dup "," Rails  env "]}," Danthes ViewHelpers subscribe_to":{"type":"method","name":"subscribe_to","children":[],"call":[" raw ","subscription to_json "," content_tag ","Danthes  subscription ","Danthes  subscription  to_json ","Danthes  Danthes  subscription  "]}," Danthes ViewHelpers publish_to":{"type":"method","name":"publish_to","children":[],"call":["Danthes  publish_to "," capture "]}," Danthes FayeExtension authenticate_publish":{"type":"method","name":"authenticate_publish","children":[],"call":["message [] []= ","message [] ","message []= ","message [] [] != ","Danthes  config [] ","Danthes  config ","message [] [] "," raise ","Danthes  config [] nil? "," fail "]}," Danthes FayeExtension authenticate_subscribe":{"type":"method","name":"authenticate_subscribe","children":[],"call":["message []= ","Danthes  signature_expired? ","message [] [] to_i ","message [] [] ","message [] ","message [] [] != ","subscription [] ","Danthes  subscription ","Danthes  subscription  [] ","Danthes  Danthes  subscription  "]}," Danthes FayeExtension incoming":{"type":"method","name":"incoming","children":[],"call":["callback call "," authenticate_publish ","message [] !~ ","message [] "," authenticate_subscribe ","message [] == "]}}