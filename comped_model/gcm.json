{" GCM build_post_body":{"type":"method","name":"build_post_body","children":[],"call":["(pair\n  (sym :registration_ids)\n  (lvar :registration_ids)) merge "]}," GCM send_notification":{"type":"method","name":"send_notification","children":[],"call":["response code ","response headers ","response body "," class post "," class ","post_body to_json "," build_post_body "," build_response ","params merge "," class post  code "," class post  headers "," class post  body "," build_post_body  to_json "," build_ build_post_body  "," build_ class post  "]}," GCM initialize":{"type":"method","name":"initialize","children":[],"call":[]}," GCM build_response":{"type":"method","name":"build_response","children":[],"call":["response code ","response headers ","response body "," build_canonical_ids ","response_hash []= ","registration_ids empty? "," build_not_registered_ids ","JSON  parse ","body empty? ","response JSON  parse  ","JSON  parse  empty? "]}," GCM has_canonical_id?":{"type":"method","name":"has_canonical_id?","children":[],"call":["result [] nil? ! ","result [] nil? ","result [] "]}," GCM build_canonical_ids":{"type":"method","name":"build_canonical_ids","children":[],"call":["canonical_ids << ","result [] ","registration_ids [] "," has_canonical_id? ","body [] each_with_index ","body [] ","body [] > ","JSON  parse ","body empty? ","JSON  parse  [] each_with_index ","JSON  parse  [] ","JSON  parse  [] > ","JSON  parse  empty? "]}," GCM remove_registration_ids":{"type":"method","name":"remove_registration_ids","children":[],"call":[" build_response "," class post ","params merge "," class ","post_body to_json "," build_post_body "," build_ class post  "," build_post_body  to_json "," build_ build_post_body  "]}," GCM add_registration_ids":{"type":"method","name":"add_registration_ids","children":[],"call":[" build_response "," class post ","params merge "," class ","post_body to_json "," build_post_body "," build_ class post  "," build_post_body  to_json "," build_ build_post_body  "]}," GCM create_notification_key":{"type":"method","name":"create_notification_key","children":[],"call":[" build_response "," class post ","params merge "," class ","post_body to_json "," build_post_body "," build_ class post  "," build_post_body  to_json "," build_ build_post_body  "]}," GCM is_not_registered?":{"type":"method","name":"is_not_registered?","children":[],"call":["result [] == ","result [] "]}," GCM build_not_registered_ids":{"type":"method","name":"build_not_registered_ids","children":[],"call":["not_registered_ids << ","registration_id [] "," is_not_registered? ","body [] each_with_index ","body [] ","body [] > ","body empty? "]}," GCM send_with_notification_key":{"type":"method","name":"send_with_notification_key","children":[],"call":[" build_response "," class post ","params merge "," class ","body to_json ","(pair\n  (sym :to)\n  (lvar :notification_key)) merge "," build_ class post  ","(pair\n  (sym :to)\n  (lvar :notification_key)) merge  to_json "]}," GCM send_to_topic":{"type":"method","name":"send_to_topic","children":[],"call":[" send_with_notification_key ","/topics/ + ","topic =~ "]}}