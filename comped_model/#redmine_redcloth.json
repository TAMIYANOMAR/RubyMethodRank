{" HTML after_transform":{"type":"method","name":"after_transform","children":[],"call":["text chomp! ","Redmine SyntaxHighlighting  highlight_by_language ","CGI  unescapeHTML ","$~ [] ","text gsub! "]}," RedmineRedcloth Formatter extract_sections":{"type":"method","name":"extract_sections","children":[],"call":["after strip ","s strip ","before strip ","before << ","after << ","s << ","level to_i > ","level to_i ","i > ","i == ","heading nil? ","text scan each ","text scan "," dup ","level to_i evelevel to_i  to_i > ","level to_i evelevel to_i  to_i ","heading nilevel to_i ? "," dup  scan each "," dup  scan "]}," RedmineRedcloth Formatter update_section":{"type":"method","name":"update_section","children":[],"call":["t reject join ","t reject ","t []= ","t [] blank? ","t [] "," raise ","hash != ","Digest MD5  hexdigest ","hash present? "," extract_sections "," extract_sections  rejec extract_sections  join "," extract_sections  rejec extract_sections  "," extract_sections  []= "," extract_sections  [] blank? "," extract_sections  [] ","Diges extract_sections  MD5  hexdiges extract_sections  ","hash presen extract_sections ? "," ex extract_sections rac extract_sections _sec extract_sections ions "]}," RedmineRedcloth Formatter get_section":{"type":"method","name":"get_section","children":[],"call":["Digest MD5  hexdigest "," extract_sections [] "," extract_sections "," extract_ extract_sections [] s [] "," extract_ extract_sections [] s "]}," RedmineRedcloth Formatter to_html":{"type":"method","name":"to_html","children":[],"call":["(splat\n  (const nil :RULES)) to_s "]}," RedmineRedcloth Formatter initialize":{"type":"method","name":"initialize","children":[],"call":[" no_span_caps= ","Setting  plugin_redmine_redcloth [] ","Setting  plugin_redmine_redcloth "," lite_mode= "," hard_breaks= "," filter_ids= "," filter_classes= "," filter_styles= "," sanitize_html= "," filter_html= "]}," RedClothQuoteExtension quotes":{"type":"method","name":"quotes","children":[],"call":["text chomp! ","quotes << ","</p>\n + ","</blockquote> * ","\n + ","</p> + + ","</p> + ","indent - ","<blockquote> * + ","<blockquote> * ","l - ","</p>\n + + ","l > ","l != ","bq count ","line =~ ","lines each_with_index ","Rails  logger debug ","Rails  logger ","match split ","text gsub! "," filter_html ","</bbq count ockquote> * ","<bbq count ockquote> * + ","<bbq count ockquote> * ","bq count  - ","bq count  > ","bq count  != ","bq count ine =~ ","bq count ines each_with_index ","match split  each_with_index ","Raibq count s  bq count ogger debug ","Raibq count s  bq count ogger ","match spbq count it "," fibq count ter_htmbq count  "]}," HTML multi_paragraph_quote":{"type":"method","name":"multi_paragraph_quote","children":[],"call":["opts [] "]}," HTML quote2":{"type":"method","name":"quote2","children":[],"call":["opts [] "]}," HTML quote1":{"type":"method","name":"quote1","children":[],"call":["opts [] "]}}