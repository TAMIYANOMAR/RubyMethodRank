{" ActiveModel BlockValidator validate_each":{"type":"method","name":"validate_each","children":[],"call":["@block call "]}," ActiveModel BlockValidator initialize":{"type":"method","name":"initialize","children":[],"call":[]}," ActiveModel EachValidator check_validity!":{"type":"method","name":"check_validity!","children":[],"call":[]}," ActiveModel EachValidator validate_each":{"type":"method","name":"validate_each","children":[],"call":[" raise "]}," ActiveModel EachValidator validate":{"type":"method","name":"validate","children":[],"call":[" validate_each "," options [] "," options ","value blank? ","value nil? ","record read_attribute_for_validation "," attributes each "," attributes "," prepare_value_for_validation "," read_attribute_for_validation ","record read_attribute_for_validation  blank? "," prepare_value_for_validation  blank? "," read_attribute_for_validation  blank? ","record read_attribute_for_validation  nil? "," prepare_value_for_validation  nil? "," read_attribute_for_validation  nil? "," prepare_record read_attribute_for_validation _for_validation "," prepare_ prepare_value_for_validation _for_validation "," prepare_ read_attribute_for_validation _for_validation "]}," ActiveModel EachValidator initialize":{"type":"method","name":"initialize","children":[],"call":[" check_validity! "," raise ","@attributes empty? ","Array  wrap ","options delete "," Array ","Array  wrap  empty? "," Array  empty? "]}," ActiveModel Validator validate":{"type":"method","name":"validate","children":[],"call":[" raise "]}," ActiveModel Validator kind":{"type":"method","name":"kind","children":[],"call":[" class kind "," class "]}," ActiveModel Validator initialize":{"type":"method","name":"initialize","children":[],"call":["options freeze "," deprecated_setup ","options except freeze ","options except "]}," ActiveModel Validations run_validations!":{"type":"method","name":"run_validations!","children":[],"call":[" errors empty? "," errors "," _run_validate_callbacks "," run_callbacks "]}," ActiveModel Validations invalid?":{"type":"method","name":"invalid?","children":[],"call":[" valid? ! "," valid? "]}," ActiveModel Validations valid?":{"type":"method","name":"valid?","children":[],"call":[" validation_context= "," run_validations! "," errors clear "," errors "," validation_context "," errors empty? "," _run_validate_callbacks "]}," ActiveModel Validations errors":{"type":"method","name":"errors","children":[],"call":["Errors  new "]}," ActiveModel Validations ClassMethods inherited":{"type":"method","name":"inherited","children":[],"call":["base _validators= ","dup []= ","v dup ","dup each "," _validators dup "," _validators "," _validators dup  []= ","v  _validators dup  "," _validators dup  each "," _validators  _validators dup  "]}," ActiveModel Validations ClassMethods attribute_method?":{"type":"method","name":"attribute_method?","children":[],"call":[" method_defined? "]}," ActiveModel Validations ClassMethods validators_on":{"type":"method","name":"validators_on","children":[],"call":[" _validators [] ","attribute to_sym "," _validators ","(send\n  (lvar :attributes) :map) flatten ","attributes map ","attributes flat_map "]}," ActiveModel Validations ClassMethods validators":{"type":"method","name":"validators","children":[],"call":[" _validators values flatten uniq "," _validators values flatten "," _validators values "," _validators "]}," ActiveModel Validations ClassMethods validate":{"type":"method","name":"validate","children":[],"call":[" set_callback ","args << ","options [] << ","options [] ","options []= ","Array  wrap ","options dup ","options key? ","args extract_options! "," Array ","options is_a? ","args last ","options [] unshift "," Array include? ","o validation_context "," lambda ","o validation_context == "," raise ","ArgumentError  new ","VALID_OPTIONS_FOR_VALIDATE  map join ","VALID_OPTIONS_FOR_VALIDATE  map ","k inspect ","VALID_OPTIONS_FOR_VALIDATE  include? ","options each_key ","arg is_a? ","args all? ","options assert_valid_keys ","(send\n  (send nil :Array\n    (send\n      (lvar :options) :[]\n      (sym :on))) :&\n  (send nil :Array\n    (send\n      (lvar :o) :validation_context))) empty? ! ","(send\n  (send nil :Array\n    (send\n      (lvar :options) :[]\n      (sym :on))) :&\n  (send nil :Array\n    (send\n      (lvar :o) :validation_context))) empty? "," Array & ","(send\n  (send\n    (lvar :options) :[]\n    (sym :on)) :&\n  (send nil :Array\n    (send\n      (lvar :o) :validation_context))) empty? ! ","(send\n  (send\n    (lvar :options) :[]\n    (sym :on)) :&\n  (send nil :Array\n    (send\n      (lvar :o) :validation_context))) empty? ","options [] & ","options merge "," predicate_for_validation_context ","options dup  [] << ","args extract_options!  [] << ","args last  [] << ","options merge  [] << ","options dup  [] ","args extract_options!  [] ","args last  [] ","options merge  [] ","options dup  []= ","args extract_options!  []= ","args last  []= ","options merge  []= ","options dup  dup ","args extract_options!  dup ","args last  dup ","options merge  dup ","options dup  key? ","args extract_options!  key? ","args last  key? ","options merge  key? ","args extract_options dup ! ","args extract_args extract_options! ! ","args extract_args last ! ","args extract_options merge ! ","options dup  is_a? ","args extract_options!  is_a? ","args last  is_a? ","options merge  is_a? ","options dup  [] unshift ","args extract_options!  [] unshift ","args last  [] unshift ","options merge  [] unshift ","options dup  each_key ","args extract_options!  each_key ","args last  each_key ","options merge  each_key ","options dup  assert_valid_keys ","args extract_options!  assert_valid_keys ","args last  assert_valid_keys ","options merge  assert_valid_keys ","(send\n  (send nil :Array\n    (send\n      (lvar :options dup ) :[]\n      (sym :on))) :&\n  (send nil :Array\n    (send\n      (lvar :o) :validation_context))) empty? ! ","(send\n  (send nil :Array\n    (send\n      (lvar :args extract_options! ) :[]\n      (sym :on))) :&\n  (send nil :Array\n    (send\n      (lvar :o) :validation_context))) empty? ! ","(send\n  (send nil :Array\n    (send\n      (lvar :args last ) :[]\n      (sym :on))) :&\n  (send nil :Array\n    (send\n      (lvar :o) :validation_context))) empty? ! ","(send\n  (send nil :Array\n    (send\n      (lvar :options merge ) :[]\n      (sym :on))) :&\n  (send nil :Array\n    (send\n      (lvar :o) :validation_context))) empty? ! ","(send\n  (send nil :Array\n    (send\n      (lvar :options dup ) :[]\n      (sym :on))) :&\n  (send nil :Array\n    (send\n      (lvar :o) :validation_context))) empty? ","(send\n  (send nil :Array\n    (send\n      (lvar :args extract_options! ) :[]\n      (sym :on))) :&\n  (send nil :Array\n    (send\n      (lvar :o) :validation_context))) empty? ","(send\n  (send nil :Array\n    (send\n      (lvar :args last ) :[]\n      (sym :on))) :&\n  (send nil :Array\n    (send\n      (lvar :o) :validation_context))) empty? ","(send\n  (send nil :Array\n    (send\n      (lvar :options merge ) :[]\n      (sym :on))) :&\n  (send nil :Array\n    (send\n      (lvar :o) :validation_context))) empty? ","(send\n  (send\n    (lvar :options dup ) :[]\n    (sym :on)) :&\n  (send nil :Array\n    (send\n      (lvar :o) :validation_context))) empty? ! ","(send\n  (send\n    (lvar :args extract_options! ) :[]\n    (sym :on)) :&\n  (send nil :Array\n    (send\n      (lvar :o) :validation_context))) empty? ! ","(send\n  (send\n    (lvar :args last ) :[]\n    (sym :on)) :&\n  (send nil :Array\n    (send\n      (lvar :o) :validation_context))) empty? ! ","(send\n  (send\n    (lvar :options merge ) :[]\n    (sym :on)) :&\n  (send nil :Array\n    (send\n      (lvar :o) :validation_context))) empty? ! ","(send\n  (send\n    (lvar :options dup ) :[]\n    (sym :on)) :&\n  (send nil :Array\n    (send\n      (lvar :o) :validation_context))) empty? ","(send\n  (send\n    (lvar :args extract_options! ) :[]\n    (sym :on)) :&\n  (send nil :Array\n    (send\n      (lvar :o) :validation_context))) empty? ","(send\n  (send\n    (lvar :args last ) :[]\n    (sym :on)) :&\n  (send nil :Array\n    (send\n      (lvar :o) :validation_context))) empty? ","(send\n  (send\n    (lvar :options merge ) :[]\n    (sym :on)) :&\n  (send nil :Array\n    (send\n      (lvar :o) :validation_context))) empty? ","options dup  [] & ","args extract_options!  [] & ","args last  [] & ","options merge  [] & ","options dup  merge ","args extract_options!  merge ","args last  merge ","options merge  merge "]}," ActiveModel Validations ClassMethods validates_each":{"type":"method","name":"validates_each","children":[],"call":[" validates_with ","options merge ","attr_names flatten ","attr_names extract_options! symbolize_keys ","attr_names extract_options! ","options [] ","value blank? ","value nil? ","record send ","attrs each "," validate ","attrs flatten ","attrs extract_options! symbolize_keys ","attrs extract_options! "," _merge_attributes ","attr_names extract_options! symbolize_keys  merge ","attrs extract_options! symbolize_keys  merge ","attr_names extract_attr_names extract_options! symbolize_keys ! symbolize_keys ","attr_names extract_attrs extract_options! symbolize_keys ! symbolize_keys ","attr_names extract_attr_names extract_options! symbolize_keys ! ","attr_names extract_attrs extract_options! symbolize_keys ! ","attr_names extract_options! symbolize_keys  [] ","attrs extract_options! symbolize_keys  [] ","record send  blank? ","record send  nil? ","attrs flatten  each ","attrs flatten  flatten ","attrs extract_attr_names extract_options! symbolize_keys ! symbolize_keys ","attrs extract_attrs extract_options! symbolize_keys ! symbolize_keys ","attrs flatten  extract_options! symbolize_keys ","attrs extract_attr_names extract_options! symbolize_keys ! ","attrs extract_attrs extract_options! symbolize_keys ! ","attrs flatten  extract_options! "]}," ActiveModel Validations validates_with":{"type":"method","name":"validates_with","children":[],"call":["validator validate ","klass new ","args each ","args extract_options! ","options []= "," class ","options dup ","klass new  validate ","args extract_args extract_options! ! ","args extract_options!  []= ","args extract_options!  dup "]}," ActiveModel Validations ClassMethods validates_with":{"type":"method","name":"validates_with","children":[],"call":[" validate "," _validators [] << "," _validators [] "," _validators ","attribute to_sym ","validator attributes each ","validator attributes ","validator attributes empty? ! ","validator attributes empty? ","validator respond_to? ","validator setup ","klass new ","args each ","args extract_options! ","klass new validate ","configuration except ","options []= ","options dup "," _klass new s [] << "," _klass new s [] "," _klass new s ","klass new  attributes each ","klass new  attributes ","klass new  attributes empty? ! ","klass new  attributes empty? ","klass new  respond_to? ","klass new  setup ","args extract_args extract_options! ! ","args extract_options!  except ","args extract_options!  []= ","args extract_options!  dup "]}," ActiveModel Validations HelperMethods _merge_attributes":{"type":"method","name":"_merge_attributes","children":[],"call":["options merge ","attr_names flatten ","attr_names extract_options! ","options []= ","attr_names flatten! ","attr_names extract_options! symbolize_keys ","attr_names extract_options!  merge ","attr_names extract_options! symbolize_keys  merge ","attr_names extract_attr_names extract_options! ! ","attr_names extract_attr_names extract_options! symbolize_keys ! ","attr_names extract_options!  []= ","attr_names extract_options! symbolize_keys  []= ","attr_names extract_attr_names extract_options! ! symbolize_keys ","attr_names extract_attr_names extract_options! symbolize_keys ! symbolize_keys "]}," ActiveModel Validations ClassMethods _parse_validates_options":{"type":"method","name":"_parse_validates_options","children":[],"call":[" raise ","options inspect "]}," ActiveModel Validations ClassMethods validates":{"type":"method","name":"validates","children":[],"call":[" validates_with ","defaults merge "," _parse_validates_options "," raise "," const_get ","key to_s camelize ","key to_s ","validations each ","defaults merge! ","validations empty? ","attribute is_a? ! ","attribute is_a? ","attributes any? ","attributes empty? ","defaults slice! ","attributes extract_options! ","key constantize ","key include? "," _validates_default_keys ","defaults []= ","attributes extract_options! dup ",":: freeze ","attributes extract_options!  merge ","attributes extract_options! dup  merge ","defaults slice!  each ","attributes extract_options!  merge! ","attributes extract_options! dup  merge! ","defaults slice!  empty? ","attributes extract_options!  slice! ","attributes extract_options! dup  slice! ","attributes extract_options!  []= ","attributes extract_options! dup  []= "]}," ActiveModel Validations HelperMethods validates_presence_of":{"type":"method","name":"validates_presence_of","children":[],"call":[" validates_with "," _merge_attributes "]}," ActiveModel Validations PresenceValidator validate":{"type":"method","name":"validate","children":[],"call":["record errors add_on_blank "," options "," attributes ","record errors "," options [] "]}," ActiveModel Validations HelperMethods validates_numericality_of":{"type":"method","name":"validates_numericality_of","children":[],"call":[" validates_with "," _merge_attributes "]}," ActiveModel Validations NumericalityValidator filtered_options":{"type":"method","name":"filtered_options","children":[],"call":[" options except merge! "," options except "," options ","filtered []= "," options except  []= "]}," ActiveModel Validations NumericalityValidator parse_raw_value_as_an_integer":{"type":"method","name":"parse_raw_value_as_an_integer","children":[],"call":["raw_value to_i ","raw_value to_s =~ ","raw_value to_s "]}," ActiveModel Validations NumericalityValidator parse_raw_value_as_a_number":{"type":"method","name":"parse_raw_value_as_a_number","children":[],"call":["Kernel  Float ","raw_value !~ ","raw_value to_i "," is_integer? "," is_hexadecimal_literal? "]}," ActiveModel Validations NumericalityValidator validate_each":{"type":"method","name":"validate_each","children":[],"call":["record errors add "," filtered_options merge "," filtered_options ","record errors ","value send ","CHECKS  [] ","record send ","option_value is_a? ","option_value call ","value to_i send ","value to_i "," options slice each "," options slice ","CHECKS  keys "," options "," parse_raw_value_as_an_integer "," options [] "," parse_raw_value_as_a_number ","raw_value nil? ","record respond_to? ","before_type_cast to_sym "," parse_raw_value "," filtered_options merge! "," allow_only_integer? "," record_attribute_changed_in_place? ","raw_value is_a? "," is_integer? ! "," is_integer? "," is_number? ","record send != ","record read_attribute_before_type_cast ","record public_send ","record read_attribute "," parse_as_number ","value public_send ","value to_i public_send ","COMPARE_CHECKS  [] "," option_as_number ","COMPARE_CHECKS  include? ","RANGE_CHECKS  [] ","RANGE_CHECKS  include? ","NUMBER_CHECKS  [] ","NUMBER_CHECKS  include? "," parse_raw_value_as_an_integer  send "," parse_raw_value_as_a_number  send "," parse_raw_value  send "," parse_as_number  send ","record send  is_a? ","option_value call  is_a? "," parse_as_number  is_a? "," option_as_number  is_a? ","option_ parse_raw_value_as_an_integer  is_a? ","option_ parse_raw_value_as_a_number  is_a? ","option_ parse_raw_value  is_a? ","option_ parse_as_number  is_a? ","record send  call ","option_value call  call "," parse_as_number  call "," option_as_number  call ","option_ parse_raw_value_as_an_integer  call ","option_ parse_raw_value_as_a_number  call ","option_ parse_raw_value  call ","option_ parse_as_number  call "," parse_raw_value_as_an_integer  to_i send "," parse_raw_value_as_a_number  to_i send "," parse_raw_value  to_i send "," parse_as_number  to_i send "," parse_raw_value_as_an_integer  to_i "," parse_raw_value_as_a_number  to_i "," parse_raw_value  to_i "," parse_as_number  to_i "," parse_raw_ parse_raw_value_as_an_integer _as_an_integer "," parse_raw_ parse_raw_value_as_a_number _as_an_integer "," parse_raw_ parse_raw_value _as_an_integer "," parse_raw_ parse_as_number _as_an_integer "," parse_record send _as_an_integer "," parse_record read_attribute_before_type_cast _as_an_integer "," parse_record public_send _as_an_integer "," parse_record read_attribute _as_an_integer "," parse_raw_ parse_raw_value_as_an_integer _as_a_number "," parse_raw_ parse_raw_value_as_a_number _as_a_number "," parse_raw_ parse_raw_value _as_a_number "," parse_raw_ parse_as_number _as_a_number "," parse_record send _as_a_number "," parse_record read_attribute_before_type_cast _as_a_number "," parse_record public_send _as_a_number "," parse_record read_attribute _as_a_number ","raw_ parse_raw_value_as_an_integer  nil? ","raw_ parse_raw_value_as_a_number  nil? ","raw_ parse_raw_value  nil? ","raw_ parse_as_number  nil? ","record send  nil? ","record read_attribute_before_type_cast  nil? ","record public_send  nil? ","record read_attribute  nil? "," parse_raw_ parse_raw_value_as_an_integer  "," parse_raw_ parse_raw_value_as_a_number  "," parse_raw_ parse_raw_value  "," parse_raw_ parse_as_number  "," parse_record send  "," parse_record read_attribute_before_type_cast  "," parse_record public_send  "," parse_record read_attribute  ","raw_ parse_raw_value_as_an_integer  is_a? ","raw_ parse_raw_value_as_a_number  is_a? ","raw_ parse_raw_value  is_a? ","raw_ parse_as_number  is_a? ","record read_attribute_before_type_cast  is_a? ","record public_send  is_a? ","record read_attribute  is_a? "," parse_raw_value_as_an_integer  public_send "," parse_raw_value_as_a_number  public_send "," parse_raw_value  public_send "," parse_as_number  public_send "," parse_raw_value_as_an_integer  to_i public_send "," parse_raw_value_as_a_number  to_i public_send "," parse_raw_value  to_i public_send "," parse_as_number  to_i public_send "]}," ActiveModel Validations NumericalityValidator check_validity!":{"type":"method","name":"check_validity!","children":[],"call":[" raise ","value is_a? "," options slice each "," options slice "," options ","CHECKS  keys - ","CHECKS  keys ","RANGE_CHECKS  keys ","COMPARE_CHECKS  keys ","CHECKS  CHECKS  keys -  - ","CHECKS  CHECKS  keys -  ","RANGE_CHECKS  CHECKS  keys -  ","COMPARE_CHECKS  CHECKS  keys -  "]}," ActiveModel Validations NumericalityValidator initialize":{"type":"method","name":"initialize","children":[],"call":["options reverse_merge "]}," ActiveModel Validations HelperMethods validates_length_of":{"type":"method","name":"validates_length_of","children":[],"call":[" validates_with "," _merge_attributes "]}," ActiveModel Validations LengthValidator validate_each":{"type":"method","name":"validate_each","children":[],"call":["record errors add ","MESSAGES  [] ","record errors ","errors_options [] "," options [] "," options ","errors_options []= "," options except ","value size send ","value size ","key == ","CHECKS  each "," options [] call ","value kind_of? ","value nil? "," options except merge! ","value_length send ","value to_s length ","value to_s ","value length ","value respond_to? ","(or\n  (send\n    (send nil :options) :[]\n    (sym :tokenizer))\n  (const nil :DEFAULT_TOKENIZER)) call "," tokenize "," skip_nil_check? ","value nil? ! ","record send ","check_value call ","value_length public_send "," resolve_value "," options except  [] "," options except  []= "," options [] call  size send ","(or\n  (send\n    (send nil :options) :[]\n    (sym :tokenizer))\n  (const nil :DEFAULT_TOKENIZER)) call  size send "," tokenize  size send "," options [] call  size ","(or\n  (send\n    (send nil :options) :[]\n    (sym :tokenizer))\n  (const nil :DEFAULT_TOKENIZER)) call  size "," tokenize  size "," options [] call  kind_of? ","(or\n  (send\n    (send nil :options) :[]\n    (sym :tokenizer))\n  (const nil :DEFAULT_TOKENIZER)) call  kind_of? "," tokenize  kind_of? "," options [] call  nil? ","(or\n  (send\n    (send nil :options) :[]\n    (sym :tokenizer))\n  (const nil :DEFAULT_TOKENIZER)) call  nil? "," tokenize  nil? "," options [] call _length send ","(or\n  (send\n    (send nil :options) :[]\n    (sym :tokenizer))\n  (const nil :DEFAULT_TOKENIZER)) call _length send "," tokenize _length send ","value to_s length  send ","value length  send "," options [] call  to_s length ","(or\n  (send\n    (send nil :options) :[]\n    (sym :tokenizer))\n  (const nil :DEFAULT_TOKENIZER)) call  to_s length "," tokenize  to_s length "," options [] call  to_s ","(or\n  (send\n    (send nil :options) :[]\n    (sym :tokenizer))\n  (const nil :DEFAULT_TOKENIZER)) call  to_s "," tokenize  to_s "," options [] call  length ","(or\n  (send\n    (send nil :options) :[]\n    (sym :tokenizer))\n  (const nil :DEFAULT_TOKENIZER)) call  length "," tokenize  length "," options [] call  respond_to? ","(or\n  (send\n    (send nil :options) :[]\n    (sym :tokenizer))\n  (const nil :DEFAULT_TOKENIZER)) call  respond_to? "," tokenize  respond_to? "," options [] call  nil? ! ","(or\n  (send\n    (send nil :options) :[]\n    (sym :tokenizer))\n  (const nil :DEFAULT_TOKENIZER)) call  nil? ! "," tokenize  nil? ! "," options []  call ","record send  call ","check_value call  call "," resolve_value  call ","check_ options [] call  call ","check_(or\n  (send\n    (send nil :options) :[]\n    (sym :tokenizer))\n  (const nil :DEFAULT_TOKENIZER)) call  call ","check_ tokenize  call "," options [] call _length public_send ","(or\n  (send\n    (send nil :options) :[]\n    (sym :tokenizer))\n  (const nil :DEFAULT_TOKENIZER)) call _length public_send "," tokenize _length public_send ","value to_s length  public_send ","value length  public_send "," resolve_ options [] call  "," resolve_(or\n  (send\n    (send nil :options) :[]\n    (sym :tokenizer))\n  (const nil :DEFAULT_TOKENIZER)) call  "," resolve_ tokenize  "]}," ActiveModel Validations LengthValidator check_validity!":{"type":"method","name":"check_validity!","children":[],"call":[" raise ","value >= ","value is_a? "," options [] "," options ","keys each ","keys empty? ","CHECKS  keys & "," options keys ","CHECKS  keys ","value == ","Float INFINITY  -@ "," options []  >= "," options []  is_a? ","CHECKS  keys &  each ","CHECKS  keys &  empty? ","CHECKS  CHECKS  keys &  & "," options CHECKS  keys &  ","CHECKS  CHECKS  keys &  "," options []  == "]}," ActiveModel Validations LengthValidator initialize":{"type":"method","name":"initialize","children":[],"call":["options reverse_merge ","options [] ","range exclude_end? ","range end ","range begin ","options []= "," raise ","range is_a? ","options delete ","options [] nil? ","options [] == ","range max ","range min ","ActiveSupport Deprecation  warn ","(str \"            The `:tokenizer` option is deprecated, and will be removed in Rails 5.1.\\n\") strip_heredoc ","range end - "]}," ActiveModel Validations HelperMethods validates_inclusion_of":{"type":"method","name":"validates_inclusion_of","children":[],"call":[" validates_with "," _merge_attributes "]}," ActiveModel Validations InclusionValidator validate_each":{"type":"method","name":"validate_each","children":[],"call":["record errors add "," options except merge! "," options except "," options ","record errors "," options [] include? "," options [] "," options [] cover? "," options [] is_a? ","exclusions send "," inclusion_method ","delimiter call ","delimiter respond_to? "," delimiter "," delimiter call "," delimiter respond_to? "," include? ","delimiter call  send "," delimiter  send "," delimiter call  send "," options []  call "," options []  respond_to? ","  options []  ","  options []  call ","  options []  respond_to? "]}," ActiveModel Validations InclusionValidator check_validity!":{"type":"method","name":"check_validity!","children":[],"call":[" raise ","An object with the method include? is required must be supplied as the  << "," options [] respond_to? "," options [] "," options ","(sym :include?) any? "," delimiter respond_to? "," delimiter "]}," ActiveModel Validations HelperMethods validates_format_of":{"type":"method","name":"validates_format_of","children":[],"call":[" validates_with "," _merge_attributes "]}," ActiveModel Validations FormatValidator check_validity!":{"type":"method","name":"check_validity!","children":[],"call":[" raise "," options [] is_a? ! "," options [] is_a? "," options [] "," options "," options include? ^ "," options include? "," check_options_validity "]}," ActiveModel Validations FormatValidator validate_each":{"type":"method","name":"validate_each","children":[],"call":["record errors add "," options except merge! "," options except "," options ","record errors ","value to_s =~ "," options [] ","value to_s ","value to_s !~ "," record_error "," option_call ","regexp match? ","(send\n  (lvar :value) :to_s) ! "," resolve_value "," option_call  match? "," resolve_value  match? "]}," ActiveModel Validations HelperMethods validates_exclusion_of":{"type":"method","name":"validates_exclusion_of","children":[],"call":[" validates_with "," _merge_attributes "]}," ActiveModel Validations ExclusionValidator validate_each":{"type":"method","name":"validate_each","children":[],"call":["record errors add "," options except merge! "," options except "," options ","record errors "," options [] include? "," options [] ","exclusions send "," inclusion_method ","delimiter call ","delimiter respond_to? "," delimiter "," delimiter call "," delimiter respond_to? "," include? ","delimiter call  send "," delimiter  send "," delimiter call  send "," options []  call "," options []  respond_to? ","  options []  ","  options []  call ","  options []  respond_to? "]}," ActiveModel Validations ExclusionValidator check_validity!":{"type":"method","name":"check_validity!","children":[],"call":[" raise ","An object with the method include? is required must be supplied as the  << "," options [] respond_to? "," options [] "," options ","(sym :include?) any? "," delimiter respond_to? "," delimiter "]}," ActiveModel Validations HelperMethods validates_confirmation_of":{"type":"method","name":"validates_confirmation_of","children":[],"call":[" validates_with "," _merge_attributes "]}," ActiveModel Validations ConfirmationValidator setup":{"type":"method","name":"setup","children":[],"call":["klass send "," attributes map "," attributes ","(send\n  (send nil :attributes) :map) compact ","klass method_defined? "]}," ActiveModel Validations ConfirmationValidator validate_each":{"type":"method","name":"validate_each","children":[],"call":["record errors add "," options ","record errors ","value == ","confirmed nil? ","record send "," options [] ","value != "," options merge ","record class human_attribute_name ","record class "," options except merge! "," options except "," confirmation_value_equal? ","(lvasgn :confirmed\n  (send\n    (lvar :record) :send\n    (dstr\n      (begin\n        (lvar :attribute))\n      (str \"_confirmation\")))) nil? ","(lvasgn :confirmed\n  (send\n    (lvar :record) :public_send\n    (dstr\n      (begin\n        (lvar :attribute))\n      (str \"_confirmation\")))) nil? ","record public_send ","record send  nil? ","record public_send  nil? ","record class record class human_attribute_name  ","(lvasgn :record send \n  (send\n    (lvar :record) :send\n    (dstr\n      (begin\n        (lvar :attribute))\n      (str \"_confirmation\")))) nil? ","(lvasgn :record public_send \n  (send\n    (lvar :record) :send\n    (dstr\n      (begin\n        (lvar :attribute))\n      (str \"_confirmation\")))) nil? ","(lvasgn :record send \n  (send\n    (lvar :record) :public_send\n    (dstr\n      (begin\n        (lvar :attribute))\n      (str \"_confirmation\")))) nil? ","(lvasgn :record public_send \n  (send\n    (lvar :record) :public_send\n    (dstr\n      (begin\n        (lvar :attribute))\n      (str \"_confirmation\")))) nil? "]}," ActiveModel Validations Callbacks run_validations!":{"type":"method","name":"run_validations!","children":[],"call":[" _run_validation_callbacks "," run_callbacks "]}," ActiveModel Validations Callbacks ClassMethods after_validation":{"type":"method","name":"after_validation","children":[],"call":[" set_callback ","args << ","options [] << ","options [] ","options []= ","Array  wrap ","args extract_options! ","options [] unshift "," Array ","options [] include? ","o validation_context "," lambda ","(send\n  (send nil :Array\n    (send\n      (lvar :options) :[]\n      (sym :on))) :&\n  (send nil :Array\n    (send\n      (lvar :o) :validation_context))) empty? ! ","(send\n  (send nil :Array\n    (send\n      (lvar :options) :[]\n      (sym :on))) :&\n  (send nil :Array\n    (send\n      (lvar :o) :validation_context))) empty? "," Array & ","options key? ","(send\n  (send\n    (lvar :options) :[]\n    (sym :on)) :&\n  (send nil :Array\n    (send\n      (lvar :o) :validation_context))) empty? ! ","(send\n  (send\n    (lvar :options) :[]\n    (sym :on)) :&\n  (send nil :Array\n    (send\n      (lvar :o) :validation_context))) empty? ","options [] & ","options dup "," set_options_for_callback ","args extract_options!  [] << ","options dup  [] << ","args extract_options!  [] ","options dup  [] ","args extract_options!  []= ","options dup  []= ","args extract_args extract_options! ! ","args extract_options dup ! ","args extract_options!  [] unshift ","options dup  [] unshift ","args extract_options!  [] include? ","options dup  [] include? ","(send\n  (send nil :Array\n    (send\n      (lvar :args extract_options! ) :[]\n      (sym :on))) :&\n  (send nil :Array\n    (send\n      (lvar :o) :validation_context))) empty? ! ","(send\n  (send nil :Array\n    (send\n      (lvar :options dup ) :[]\n      (sym :on))) :&\n  (send nil :Array\n    (send\n      (lvar :o) :validation_context))) empty? ! ","(send\n  (send nil :Array\n    (send\n      (lvar :args extract_options! ) :[]\n      (sym :on))) :&\n  (send nil :Array\n    (send\n      (lvar :o) :validation_context))) empty? ","(send\n  (send nil :Array\n    (send\n      (lvar :options dup ) :[]\n      (sym :on))) :&\n  (send nil :Array\n    (send\n      (lvar :o) :validation_context))) empty? ","args extract_options!  key? ","options dup  key? ","(send\n  (send\n    (lvar :args extract_options! ) :[]\n    (sym :on)) :&\n  (send nil :Array\n    (send\n      (lvar :o) :validation_context))) empty? ! ","(send\n  (send\n    (lvar :options dup ) :[]\n    (sym :on)) :&\n  (send nil :Array\n    (send\n      (lvar :o) :validation_context))) empty? ! ","(send\n  (send\n    (lvar :args extract_options! ) :[]\n    (sym :on)) :&\n  (send nil :Array\n    (send\n      (lvar :o) :validation_context))) empty? ","(send\n  (send\n    (lvar :options dup ) :[]\n    (sym :on)) :&\n  (send nil :Array\n    (send\n      (lvar :o) :validation_context))) empty? ","args extract_options!  [] & ","options dup  [] & ","args extract_options!  dup ","options dup  dup "," set_args extract_options! _for_callback "," set_options dup _for_callback "]}," ActiveModel Validations Callbacks ClassMethods before_validation":{"type":"method","name":"before_validation","children":[],"call":[" set_callback ","args << ","options [] << ","options [] ","options []= ","Array  wrap ","options is_a? ","args extract_options! ","args last ","options [] unshift "," Array ","options [] include? ","o validation_context "," lambda ","(send\n  (send nil :Array\n    (send\n      (lvar :options) :[]\n      (sym :on))) :&\n  (send nil :Array\n    (send\n      (lvar :o) :validation_context))) empty? ! ","(send\n  (send nil :Array\n    (send\n      (lvar :options) :[]\n      (sym :on))) :&\n  (send nil :Array\n    (send\n      (lvar :o) :validation_context))) empty? "," Array & ","options key? ","(send\n  (send\n    (lvar :options) :[]\n    (sym :on)) :&\n  (send nil :Array\n    (send\n      (lvar :o) :validation_context))) empty? ! ","(send\n  (send\n    (lvar :options) :[]\n    (sym :on)) :&\n  (send nil :Array\n    (send\n      (lvar :o) :validation_context))) empty? ","options [] & ","options dup "," set_options_for_callback ","args extract_options!  [] << ","args last  [] << ","options dup  [] << ","args extract_options!  [] ","args last  [] ","options dup  [] ","args extract_options!  []= ","args last  []= ","options dup  []= ","args extract_options!  is_a? ","args last  is_a? ","options dup  is_a? ","args extract_args extract_options! ! ","args extract_args last ! ","args extract_options dup ! ","args extract_options!  [] unshift ","args last  [] unshift ","options dup  [] unshift ","args extract_options!  [] include? ","args last  [] include? ","options dup  [] include? ","(send\n  (send nil :Array\n    (send\n      (lvar :args extract_options! ) :[]\n      (sym :on))) :&\n  (send nil :Array\n    (send\n      (lvar :o) :validation_context))) empty? ! ","(send\n  (send nil :Array\n    (send\n      (lvar :args last ) :[]\n      (sym :on))) :&\n  (send nil :Array\n    (send\n      (lvar :o) :validation_context))) empty? ! ","(send\n  (send nil :Array\n    (send\n      (lvar :options dup ) :[]\n      (sym :on))) :&\n  (send nil :Array\n    (send\n      (lvar :o) :validation_context))) empty? ! ","(send\n  (send nil :Array\n    (send\n      (lvar :args extract_options! ) :[]\n      (sym :on))) :&\n  (send nil :Array\n    (send\n      (lvar :o) :validation_context))) empty? ","(send\n  (send nil :Array\n    (send\n      (lvar :args last ) :[]\n      (sym :on))) :&\n  (send nil :Array\n    (send\n      (lvar :o) :validation_context))) empty? ","(send\n  (send nil :Array\n    (send\n      (lvar :options dup ) :[]\n      (sym :on))) :&\n  (send nil :Array\n    (send\n      (lvar :o) :validation_context))) empty? ","args extract_options!  key? ","args last  key? ","options dup  key? ","(send\n  (send\n    (lvar :args extract_options! ) :[]\n    (sym :on)) :&\n  (send nil :Array\n    (send\n      (lvar :o) :validation_context))) empty? ! ","(send\n  (send\n    (lvar :args last ) :[]\n    (sym :on)) :&\n  (send nil :Array\n    (send\n      (lvar :o) :validation_context))) empty? ! ","(send\n  (send\n    (lvar :options dup ) :[]\n    (sym :on)) :&\n  (send nil :Array\n    (send\n      (lvar :o) :validation_context))) empty? ! ","(send\n  (send\n    (lvar :args extract_options! ) :[]\n    (sym :on)) :&\n  (send nil :Array\n    (send\n      (lvar :o) :validation_context))) empty? ","(send\n  (send\n    (lvar :args last ) :[]\n    (sym :on)) :&\n  (send nil :Array\n    (send\n      (lvar :o) :validation_context))) empty? ","(send\n  (send\n    (lvar :options dup ) :[]\n    (sym :on)) :&\n  (send nil :Array\n    (send\n      (lvar :o) :validation_context))) empty? ","args extract_options!  [] & ","args last  [] & ","options dup  [] & ","args extract_options!  dup ","args last  dup ","options dup  dup "," set_args extract_options! _for_callback "," set_args last _for_callback "," set_options dup _for_callback "]}," ActiveModel Validations HelperMethods validates_acceptance_of":{"type":"method","name":"validates_acceptance_of","children":[],"call":[" validates_with "," _merge_attributes "]}," ActiveModel Validations AcceptanceValidator setup":{"type":"method","name":"setup","children":[],"call":["klass send ","klass attribute_method? "," attributes reject "," attributes ","klass instance_methods map include? ","klass instance_methods map ","klass instance_methods "]}," ActiveModel Validations AcceptanceValidator validate_each":{"type":"method","name":"validate_each","children":[],"call":["record errors add "," options except "," options ","record errors ","value == "," options [] "," acceptable_option? "]}," ActiveModel Validations AcceptanceValidator initialize":{"type":"method","name":"initialize","children":[],"call":["options reverse_merge ","(pair\n  (sym :allow_nil)\n  (true)) merge! "," setup! ","options [] "]}," ActiveModel Translation human_name":{"type":"method","name":"human_name","children":[],"call":[" model_name human "," model_name ","ActiveSupport Deprecation  warn "," caller [] "," caller "]}," ActiveModel Translation human_attribute_name":{"type":"method","name":"human_attribute_name","children":[],"call":["I18n  translate ","defaults shift ","options reverse_merge! ","defaults << ","attribute to_s humanize ","attribute to_s ","options delete ","options [] ","klass model_name underscore ","klass model_name "," i18n_scope "," lookup_ancestors map "," lookup_ancestors ","(send\n  (send nil :lookup_ancestors) :map) flatten ","klass model_name i18n_key to_s tr ","klass model_name i18n_key to_s ","klass model_name i18n_key ","attribute humanize "," lookup_ancestors each ","parts pop ","attribute to_s split ","parts join ","parts empty? ","options []= ","(pair\n  (sym :count)\n  (int 1)) merge! ","translation == ","namespace tr! ","attribute rpartition ","attribute include? ","(send\n  (send nil :lookup_ancestors) :map) flatten  shift ","(pair\n  (sym :count)\n  (int 1)) merge!  reverse_merge! ","(send\n  (send nil :lookup_ancestors) :map) flatten  << ","parts pop  to_s humanize ","attribute to_s  to_s humanize ","parts pop  to_s ","attribute to_s  to_s ","(pair\n  (sym :count)\n  (int 1)) merge!  delete ","(pair\n  (sym :count)\n  (int 1)) merge!  [] ","parts pop  humanize ","attribute to_s  humanize ","attribute to_s split  pop ","parts pop  to_s split ","attribute to_s  to_s split ","attribute to_s split  join ","attribute to_s split  empty? ","(pair\n  (sym :count)\n  (int 1)) merge!  []= ","attribute humanize  == ","I18n  translate  == ","parts pop  tr! ","parts join  tr! ","parts pop  rpartition ","attribute to_s  rpartition ","parts pop  include? ","attribute to_s  include? "]}," ActiveModel Translation lookup_ancestors":{"type":"method","name":"lookup_ancestors","children":[],"call":["x respond_to? "," ancestors select "," ancestors "]}," ActiveModel Translation i18n_scope":{"type":"method","name":"i18n_scope","children":[],"call":[]}," ActiveModel TestCase with_kcode":{"type":"method","name":"with_kcode","children":[],"call":["RUBY_VERSION  < "]}," ActiveModel Serializers Xml from_xml":{"type":"method","name":"from_xml","children":[],"call":[" attributes= ","Hash  from_xml values first ","Hash  from_xml values ","Hash  from_xml "]}," ActiveModel Serializers Xml to_xml":{"type":"method","name":"to_xml","children":[],"call":["Serializer  new serialize ","Serializer  new "]}," ActiveModel Serializers Xml Serializer add_procs":{"type":"method","name":"add_procs","children":[],"call":["proc call "," options ","proc arity == ","proc arity ","Array  wrap each ","Array  wrap "," options delete ","proc arity > ","(splat\n  (lvar :procs)) each "," Array each "," Array ","(splat\n  (lvar : options delete )) each "]}," ActiveModel Serializers Xml Serializer add_attributes_and_methods":{"type":"method","name":"add_attributes_and_methods","children":[],"call":["ActiveSupport XmlMini  to_tag "," options merge ","attribute decorations "," options ","attribute value ","ActiveSupport XmlMini  rename_key ","attribute name ","(send\n  (send nil :serializable_attributes) :+\n  (send nil :serializable_methods)) each "," serializable_attributes + "," serializable_methods "," serializable_attributes "," serializable_collection each "," serializable_collection ","ActiveSupport XmlMini  rename_ActiveSupport XmlMini  rename_key  "]}," ActiveModel Serializers Xml Serializer add_extra_behavior":{"type":"method","name":"add_extra_behavior","children":[],"call":[]}," ActiveModel Serializers Xml Serializer serialize":{"type":"method","name":"serialize","children":[],"call":[" block_given? "," add_procs "," add_extra_behavior "," add_attributes_and_methods ","@builder tag! ","args << "," options [] "," options "," options [] ! ","ActiveSupport XmlMini  rename_key ","(or\n  (send\n    (send nil :options) :[]\n    (sym :root))\n  (send\n    (send\n      (send\n        (ivar :@serializable) :class) :model_name) :element)) to_s ","@serializable class model_name element ","@serializable class model_name ","@serializable class ","@builder instruct! "," Builder XmlMarkup  new "," require "," builder "," options []= "," options delete "," add_attributes "," builder tag! "," root "," add_includes ","(or\n  (send\n    (send nil :options) :[]\n    (sym :root))\n  (send\n    (send\n      (ivar :@serializable) :model_name) :element)) to_s ","@serializable model_name element ","@serializable model_name "," add_ options delete  "," options []  tag! ","(or\n  (send\n    (send nil :options) :[]\n    (sym :ActiveSupport XmlMini  rename_key ))\n  (send\n    (send\n      (send\n        (ivar :@serializable) :class) :model_name) :element)) to_s ","(or\n  (send\n    (send nil :options) :[]\n    (sym :(or\n  (send\n    (send nil :options) :[]\n    (sym :root))\n  (send\n    (send\n      (send\n        (ivar :@serializable) :class) :model_name) :element)) to_s ))\n  (send\n    (send\n      (send\n        (ivar :@serializable) :class) :model_name) :element)) to_s ","(or\n  (send\n    (send nil :options) :[]\n    (sym :(or\n  (send\n    (send nil :options) :[]\n    (sym :root))\n  (send\n    (send\n      (ivar :@serializable) :model_name) :element)) to_s ))\n  (send\n    (send\n      (send\n        (ivar :@serializable) :class) :model_name) :element)) to_s "," options []  instruct! "," ActiveSupport XmlMini  rename_key  "," (or\n  (send\n    (send nil :options) :[]\n    (sym :root))\n  (send\n    (send\n      (send\n        (ivar :@serializable) :class) :model_name) :element)) to_s  "," (or\n  (send\n    (send nil :options) :[]\n    (sym :root))\n  (send\n    (send\n      (ivar :@serializable) :model_name) :element)) to_s  ","(or\n  (send\n    (send nil :options) :[]\n    (sym :ActiveSupport XmlMini  rename_key ))\n  (send\n    (send\n      (ivar :@serializable) :model_name) :element)) to_s ","(or\n  (send\n    (send nil :options) :[]\n    (sym :(or\n  (send\n    (send nil :options) :[]\n    (sym :root))\n  (send\n    (send\n      (send\n        (ivar :@serializable) :class) :model_name) :element)) to_s ))\n  (send\n    (send\n      (ivar :@serializable) :model_name) :element)) to_s ","(or\n  (send\n    (send nil :options) :[]\n    (sym :(or\n  (send\n    (send nil :options) :[]\n    (sym :root))\n  (send\n    (send\n      (ivar :@serializable) :model_name) :element)) to_s ))\n  (send\n    (send\n      (ivar :@serializable) :model_name) :element)) to_s "]}," ActiveModel Serializers Xml Serializer serializable_methods":{"type":"method","name":"serializable_methods","children":[],"call":["methods << "," class MethodAttribute  new ","name to_s "," class ","@serializable respond_to? ","Array  wrap inject ","Array  wrap "," options [] "," options ","(send\n  (send\n    (const nil :Array) :wrap\n    (send\n      (send nil :options) :[]\n      (sym :methods))) :map) compact ","Array  wrap map "]}," ActiveModel Serializers Xml Serializer serializable_attributes":{"type":"method","name":"serializable_attributes","children":[],"call":[" class Attribute  new "," class "," attributes_hash map "," attributes_hash ","Attribute  new "," serializable_attribute_names collect "," serializable_attribute_names "]}," ActiveModel Serializers Xml Serializer attributes_hash":{"type":"method","name":"attributes_hash","children":[],"call":["attributes except "," options [] "," options "," options [] any? ","attributes slice ","@serializable attributes ","@serializable attributes  except ","@serializable attributes  slice ","@serializable @serializable attributes  "]}," ActiveModel Serializers Xml Serializer initialize":{"type":"method","name":"initialize","children":[],"call":["@options []= ","n to_s ","Array  wrap map ","Array  wrap ","@options [] ","options dup ","options dup  []= ","options dup  [] "]}," ActiveModel Serializers Xml Serializer Attribute compute_type":{"type":"method","name":"compute_type","children":[],"call":[" value respond_to? "," value ","ActiveSupport XmlMini TYPE_NAMES  [] "," value class name "," value class ","value respond_to? ","Hash XML_TYPE_NAMES  [] ","value class name ","value class ","@serializable send "," name "," value nil? "," @serializable send  respond_to? "," @serializable send  "," @serializable send  class name "," @serializable send  class ","@serializable send  respond_to? ","@serializable send  class name ","@serializable send  class "," @serializable send  nil? "]}," ActiveModel Serializers Xml Serializer Attribute decorations":{"type":"method","name":"decorations","children":[],"call":["decorations []= "," value nil? "," value "," type "," type == "," type != "]}," ActiveModel Serializers Xml Serializer Attribute initialize":{"type":"method","name":"initialize","children":[],"call":[" compute_type ","@serializable send "," value "," compute_value ","raw_value in_time_zone ","raw_value respond_to? ","value in_time_zone ","value respond_to? ","value acts_like? "," value in_time_zone  "," compute_value in_time_zone  ","raw_value in_time_zone  in_time_zone ","raw_value in_time_zone  respond_to? ","value in_time_zone  in_time_zone ","value in_time_zone  respond_to? ","value in_time_zone  acts_like? "]}," ActiveModel Serializers JSON from_json":{"type":"method","name":"from_json","children":[],"call":[" attributes= ","hash values first ","hash values "," include_root_in_json ","ActiveSupport JSON  decode ","hash values first  values first ","ActiveSupport JSON  decode  values first ","hash values first  values ","ActiveSupport JSON  decode  values "]}," ActiveModel Serializers JSON as_json":{"type":"method","name":"as_json","children":[],"call":[" class model_name element "," class model_name "," class ","options [] "," include_root_in_json "," serializable_hash ","root == ","options try ","options key? "," model_name element "," model_name "," serializable_hash as_json "," include_ class model_name element _in_json "," include_options [] _in_json "," include_ include_root_in_json _in_json "," include_ model_name element _in_json "," serializable_ serializable_hash  "," serializable_ serializable_hash as_json  "," class model_name element  == ","options []  == "," include_root_in_json  == "," model_name element  == "," serializable_ serializable_hash  as_json "," serializable_ serializable_hash as_json  as_json "]}," ActiveModel Serializers JSON encode_json":{"type":"method","name":"encode_json","children":[],"call":["ActiveSupport JSON  encode "," class model_name element "," class model_name "," class ","encoder options [] ","encoder options "," include_root_in_json "," serializable_hash "," serializable_ serializable_hash  "]}," ActiveModel Serialization serializable_hash":{"type":"method","name":"serializable_hash","children":[],"call":["hash []= "," send ","(send\n  (lvar :attribute_names) :+\n  (lvar :method_names)) inject ","attribute_names + ","methods << "," respond_to? ","name to_s ","Array  wrap inject ","Array  wrap ","options [] ","options [] any? "," attributes keys sort "," attributes keys "," attributes ","options []= ","n to_s ","Array  wrap map ","except any? ","only any? ","Hash  [] ","(send\n  (lvar :attribute_names) :+\n  (lvar :method_names)) map ","(send\n  (send\n    (const nil :Array) :wrap\n    (send\n      (lvar :options) :[]\n      (sym :methods))) :map) compact ","records serializable_hash ","a serializable_hash ","records map ","records is_a? "," serializable_add_includes ","method_names each ","Array  wrap select "," read_attribute_for_serialization ","attribute_names each ","records to_ary map ","records to_ary ","records respond_to? ","association to_s ","m to_s "," Array each "," Array "," Array map "," serializable_attributes ","options blank? "," attribute_names "," attribute_names_for_serialization "," serializable_attributes  []= ","(send\n  (lvar : attributes keys sort ) :+\n  (lvar :method_names)) inject ","(send\n  (lvar : attributes keys ) :+\n  (lvar :method_names)) inject ","(send\n  (lvar : attribute_names ) :+\n  (lvar :method_names)) inject ","(send\n  (lvar : attribute_names_for_serialization ) :+\n  (lvar :method_names)) inject ","(send\n  (lvar :attribute_names) :+\n  (lvar :(send\n  (send\n    (const nil :Array) :wrap\n    (send\n      (lvar :options) :[]\n      (sym :methods))) :map) compact )) inject "," attributes keys sort  + "," attributes keys  + "," attribute_names  + "," attribute_names_for_serialization  + ","Array  wrap map  any? ","options []  any? ","(send\n  (lvar : attributes keys sort ) :+\n  (lvar :method_names)) map ","(send\n  (lvar : attributes keys ) :+\n  (lvar :method_names)) map ","(send\n  (lvar : attribute_names ) :+\n  (lvar :method_names)) map ","(send\n  (lvar : attribute_names_for_serialization ) :+\n  (lvar :method_names)) map ","(send\n  (lvar :attribute_names) :+\n  (lvar :(send\n  (send\n    (const nil :Array) :wrap\n    (send\n      (lvar :options) :[]\n      (sym :methods))) :map) compact )) map ","records serializable_ serializable_attributes  ","a serializable_ serializable_attributes  ","(send\n  (send\n    (const nil :Array) :wrap\n    (send\n      (lvar :options) :[]\n      (sym :methods))) :map) compact  each "," attributes keys sort  each "," attributes keys  each "," attribute_names  each "," attribute_names_for_serialization  each ","  attributes keys sort  ","  attributes keys  ","  attribute_names  ","  attribute_names_for_serialization  ","  attributes keys sort _for_serialization ","  attributes keys _for_serialization ","  attribute_names _for_serialization ","  attribute_names_for_serialization _for_serialization "]}," ActiveModel Observer add_observer!":{"type":"method","name":"add_observer!","children":[],"call":["klass add_observer "]}," ActiveModel Observer observed_class_inherited":{"type":"method","name":"observed_class_inherited","children":[],"call":[" add_observer! "," class observe "," observed_classes + "," observed_classes "," class "]}," ActiveModel Observer update":{"type":"method","name":"update","children":[],"call":[" send "," respond_to? "," disabled_for? "]}," ActiveModel Observer observed_classes":{"type":"method","name":"observed_classes","children":[],"call":[" class observed_classes "," class ","Array  wrap "," observed_class "]}," ActiveModel Observer initialize":{"type":"method","name":"initialize","children":[],"call":[" add_observer! "," observed_classes each "," observed_classes "]}," ActiveModel Observer observed_class":{"type":"method","name":"observed_class","children":[],"call":["observed_class_name constantize "," name [] "," name "," name []  constantize "]}," ActiveModel Observer observe":{"type":"method","name":"observe","children":[],"call":[" define_method "," remove_possible_method ","model to_s camelize constantize ","model to_s camelize ","model to_s ","model respond_to? ","models collect! ","models flatten! "," redefine_method "]}," ActiveModel Observing notify_observers":{"type":"method","name":"notify_observers","children":[],"call":[" class notify_observers "," class "," class changed "]}," ActiveModel Observing ClassMethods inherited":{"type":"method","name":"inherited","children":[],"call":[" notify_observers "," changed "]}," ActiveModel Observing ClassMethods instantiate_observer":{"type":"method","name":"instantiate_observer","children":[],"call":[" raise ","observer instance ","observer respond_to? ","observer to_s camelize constantize instance ","observer to_s camelize constantize ","observer to_s camelize ","observer to_s ","(begin\n  (lvar :observer)) + + + ","(begin\n  (lvar :observer)) + + ","(begin\n  (lvar :observer)) + ","observer to_s camelize constantize instance  instance ","observer to_s camelize constantize instance  respond_to? ","observer to_s camelize constantize instance  to_s camelize constantize instance ","observer to_s camelize constantize instance  to_s camelize constantize ","observer to_s camelize constantize instance  to_s camelize ","observer to_s camelize constantize instance  to_s ","(begin\n  (lvar :observer to_s camelize constantize instance )) + + + ","(begin\n  (lvar :observer to_s camelize constantize instance )) + + ","(begin\n  (lvar :observer to_s camelize constantize instance )) + "]}," ActiveModel Observing ClassMethods count_observers":{"type":"method","name":"count_observers","children":[],"call":["@observer_instances size "," observer_instances size "," observer_instances "]}," ActiveModel Observing ClassMethods notify_observers":{"type":"method","name":"notify_observers","children":[],"call":["observer update "," observer_instances each "," observer_instances "]}," ActiveModel Observing ClassMethods add_observer":{"type":"method","name":"add_observer","children":[],"call":["@observer_instances << "," raise ","observer respond_to? "," observer_instances << "," observer_instances "]}," ActiveModel Observing ClassMethods instantiate_observers":{"type":"method","name":"instantiate_observers","children":[],"call":[" instantiate_observer "," observers each "," observers "]}," ActiveModel Observing ClassMethods observers":{"type":"method","name":"observers","children":[],"call":["ObserverArray  new "]}," ActiveModel Observing ClassMethods observers=":{"type":"method","name":"observers=","children":[],"call":["values flatten "," observers replace "," observers "]}," ActiveModel Naming model_name_from_record_or_class":{"type":"method","name":"model_name_from_record_or_class","children":[],"call":[]}," ActiveModel Naming uncountable?":{"type":"method","name":"uncountable?","children":[],"call":[]}," ActiveModel Naming singular":{"type":"method","name":"singular","children":[],"call":[]}," ActiveModel Naming plural":{"type":"method","name":"plural","children":[],"call":[]}," ActiveModel Naming model_name":{"type":"method","name":"model_name","children":[],"call":["ActiveModel Name  new "," name ","n respond_to? "," parents detect "," parents ","n use_relative_model_naming? "," module_parents detect "," module_parents "]}," ActiveModel Name human":{"type":"method","name":"human","children":[],"call":["I18n  translate ","defaults shift ","options reverse_merge! ","@klass i18n_scope ","defaults << ","options delete ","options [] ","klass model_name underscore to_sym ","klass model_name underscore ","klass model_name ","@klass lookup_ancestors map ","@klass lookup_ancestors ","@klass respond_to? ","(send\n  (send\n    (ivar :@klass) :lookup_ancestors) :map) flatten ","klass model_name i18n_key to_s tr to_sym ","klass model_name i18n_key to_s tr ","klass model_name i18n_key to_s ","klass model_name i18n_key ","(pair\n  (sym :scope)\n  (array\n    (send\n      (ivar :@klass) :i18n_scope)\n    (sym :models))) merge ","options except ","(pair\n  (sym :scope)\n  (array\n    (send\n      (ivar :@klass) :i18n_scope)\n    (sym :models))) merge! ","translation == "," i18n_scope "," i18n_keys "," i18n_scope empty? "," i18n_keys empty? ","(send\n  (send\n    (ivar :@klass) :lookup_ancestors) :map) flatten  shift ","(pair\n  (sym :scope)\n  (array\n    (send\n      (ivar :@klass) :i18n_scope)\n    (sym :models))) merge  reverse_merge! ","(pair\n  (sym :scope)\n  (array\n    (send\n      (ivar :@klass) :i18n_scope)\n    (sym :models))) merge!  reverse_merge! ","(send\n  (send\n    (ivar :@klass) :lookup_ancestors) :map) flatten  << ","(pair\n  (sym :scope)\n  (array\n    (send\n      (ivar :@klass) :i18n_scope)\n    (sym :models))) merge  delete ","(pair\n  (sym :scope)\n  (array\n    (send\n      (ivar :@klass) :i18n_scope)\n    (sym :models))) merge!  delete ","(pair\n  (sym :scope)\n  (array\n    (send\n      (ivar :@klass) :i18n_scope)\n    (sym :models))) merge  [] ","(pair\n  (sym :scope)\n  (array\n    (send\n      (ivar :@klass) :i18n_scope)\n    (sym :models))) merge!  [] ","(pair\n  (sym :scope)\n  (array\n    (send\n      (ivar :@klass) :i18n_scope)\n    (sym :models))) merge  except ","(pair\n  (sym :scope)\n  (array\n    (send\n      (ivar :@klass) :i18n_scope)\n    (sym :models))) merge!  except ","I18n  translate  == "]}," ActiveModel Name initialize":{"type":"method","name":"initialize","children":[],"call":["(begin\n  (ivar :@collection)) freeze ","ActiveSupport Inflector  tableize freeze ","ActiveSupport Inflector  tableize ","ActiveSupport Inflector  humanize freeze ","ActiveSupport Inflector  humanize ","ActiveSupport Inflector  underscore freeze ","ActiveSupport Inflector  underscore ","ActiveSupport Inflector  demodulize ","ActiveSupport Inflector  pluralize freeze ","ActiveSupport Inflector  pluralize ","ActiveSupport Inflector  underscore tr freeze ","ActiveSupport Inflector  underscore tr ","klass name ","ActiveSupport Inflector  underscore tr to_sym ","@element gsub "," underscore to_sym "," underscore ","(if\n  (lvar :namespace)\n  (send\n    (const\n      (const nil :ActiveSupport) :Inflector) :pluralize\n    (ivar :@param_key))\n  (ivar :@plural)) freeze ","(if\n  (lvar :namespace)\n  (send nil :_singularize\n    (ivar :@unnamespaced))\n  (ivar :@singular)) freeze "," _singularize "," _singularize freeze "," sub ","namespace name "," underscore tr to_sym "," underscore tr ","@route_key freeze ","@route_key << ","@plural == ","ActiveSupport Inflector  singularize freeze ","ActiveSupport Inflector  singularize ","@plural dup "," raise ","name blank? ","@name underscore to_sym ","@name underscore ","@name sub ","@name blank? ","@name delete_prefix ","(begin\n  (ivar :ActiveSupport Inflector  tableize freeze )) freeze ","(begin\n  (ivar :ActiveSupport Inflector  tableize )) freeze ","ActiveSupport Inflector  underscore freeze  gsub ","ActiveSupport Inflector  underscore  gsub ","(if\n  (lvar :namespace)\n  (send\n    (const\n      (const nil :ActiveSupport) :Inflector) :pluralize\n    (ivar :@param_key))\n  (ivar :ActiveSupport Inflector  pluralize freeze )) freeze ","(if\n  (lvar :namespace)\n  (send\n    (const\n      (const nil :ActiveSupport) :Inflector) :pluralize\n    (ivar :@param_key))\n  (ivar :ActiveSupport Inflector  pluralize )) freeze ","(if\n  (lvar :namespace)\n  (send\n    (const\n      (const nil :ActiveSupport) :Inflector) :pluralize\n    (ivar :(if\n  (lvar :namespace)\n  (send nil :_singularize\n    (ivar :@unnamespaced))\n  (ivar :@singular)) freeze ))\n  (ivar :@plural)) freeze ","(if\n  (lvar :namespace)\n  (send nil :_singularize\n    (ivar :@unnamespaced))\n  (ivar :ActiveSupport Inflector  underscore tr freeze )) freeze ","(if\n  (lvar :namespace)\n  (send nil :_singularize\n    (ivar :@unnamespaced))\n  (ivar : _singularize freeze )) freeze ","(if\n  (lvar :namespace)\n  (send nil :_singularize\n    (ivar :@unnamespaced))\n  (ivar : _singularize )) freeze ","(if\n  (lvar :namespace)\n  (send nil :_singularize\n    (ivar : sub ))\n  (ivar :@singular)) freeze ","(if\n  (lvar :namespace)\n  (send nil :_singularize\n    (ivar :@name sub ))\n  (ivar :@singular)) freeze ","(if\n  (lvar :namespace)\n  (send nil :_singularize\n    (ivar :@name delete_prefix ))\n  (ivar :@singular)) freeze ","(if\n  (lvar :namespace)\n  (send\n    (const\n      (const nil :ActiveSupport) :Inflector) :pluralize\n    (ivar :@param_key))\n  (ivar :@plural)) freeze  freeze ","(if\n  (lvar :namespace)\n  (send\n    (const\n      (const nil :ActiveSupport) :Inflector) :pluralize\n    (ivar :@param_key))\n  (ivar :@plural)) freeze  << ","ActiveSupport Inflector  pluralize freeze  == ","ActiveSupport Inflector  pluralize  == ","ActiveSupport Inflector  pluralize freeze  dup ","ActiveSupport Inflector  pluralize  dup "]}," ActiveModel MassAssignmentSecurity mass_assignment_authorizer":{"type":"method","name":"mass_assignment_authorizer","children":[],"call":[" class active_authorizer "," class "," class active_authorizer [] "]}," ActiveModel MassAssignmentSecurity sanitize_for_mass_assignment":{"type":"method","name":"sanitize_for_mass_assignment","children":[],"call":[" mass_assignment_authorizer sanitize "," mass_assignment_authorizer "," _mass_assignment_sanitizer sanitize "," _mass_assignment_sanitizer "]}," ActiveModel MassAssignmentSecurity ClassMethods attributes_protected_by_default":{"type":"method","name":"attributes_protected_by_default","children":[],"call":[]}," ActiveModel MassAssignmentSecurity ClassMethods active_authorizer":{"type":"method","name":"active_authorizer","children":[],"call":[" protected_attributes "," _active_authorizer "]}," ActiveModel MassAssignmentSecurity ClassMethods accessible_attributes":{"type":"method","name":"accessible_attributes","children":[],"call":["w logger= "," logger "," respond_to? ","WhiteList  new tap ","WhiteList  new "," _accessible_attributes "," accessible_attributes_configs [] "," accessible_attributes_configs "]}," ActiveModel MassAssignmentSecurity ClassMethods protected_attributes":{"type":"method","name":"protected_attributes","children":[],"call":["w logger= "," logger "," respond_to? ","BlackList  new tap ","BlackList  new "," attributes_protected_by_default "," _protected_attributes "," protected_attributes_configs [] "," protected_attributes_configs "]}," ActiveModel MassAssignmentSecurity ClassMethods attr_accessible":{"type":"method","name":"attr_accessible","children":[],"call":[" _active_authorizer= "," _accessible_attributes "," _accessible_attributes= "," accessible_attributes + "," accessible_attributes "," _accessible_attributes []= ","Array  wrap each ","Array  wrap "," accessible_attributes_configs dup "," accessible_attributes_configs ","options [] ","args extract_options! ","args extract_options!  [] ","args extract_args extract_options! ! "]}," ActiveModel MassAssignmentSecurity ClassMethods attr_protected":{"type":"method","name":"attr_protected","children":[],"call":[" _active_authorizer= "," _protected_attributes "," _protected_attributes= "," protected_attributes + "," protected_attributes "," _protected_attributes []= ","Array  wrap each ","Array  wrap "," protected_attributes_configs dup "," protected_attributes_configs ","options [] ","args extract_options! ","args extract_options!  [] ","args extract_args extract_options! ! "]}," ActiveModel MassAssignmentSecurity Sanitizer warn!":{"type":"method","name":"warn!","children":[],"call":[" logger debug ","attrs join "," logger "]}," ActiveModel MassAssignmentSecurity Sanitizer debug_protected_attribute_removal":{"type":"method","name":"debug_protected_attribute_removal","children":[],"call":[" warn! ","removed_keys any? ","attributes keys - ","sanitized_attributes keys ","attributes keys "," process_removed_attributes ","attributes keys -  any? "]}," ActiveModel MassAssignmentSecurity Sanitizer sanitize":{"type":"method","name":"sanitize","children":[],"call":[" debug_protected_attribute_removal "," deny? ","attributes reject ","authorizer deny? "]}," ActiveModel MassAssignmentSecurity BlackList deny?":{"type":"method","name":"deny?","children":[],"call":[" include? "]}," ActiveModel MassAssignmentSecurity WhiteList deny?":{"type":"method","name":"deny?","children":[],"call":[" include? ! "," include? "]}," ActiveModel MassAssignmentSecurity PermissionSet remove_multiparameter_id":{"type":"method","name":"remove_multiparameter_id","children":[],"call":["key to_s gsub ","key to_s "]}," ActiveModel MassAssignmentSecurity PermissionSet include?":{"type":"method","name":"include?","children":[],"call":[" remove_multiparameter_id "]}," ActiveModel MassAssignmentSecurity PermissionSet +":{"type":"method","name":"+","children":[],"call":["values map "]}," ActiveModel Lint Tests assert_boolean":{"type":"method","name":"assert_boolean","children":[],"call":[" assert ","result == "]}," ActiveModel Lint Tests model":{"type":"method","name":"model","children":[],"call":["@model to_model "," assert ","@model respond_to? "," assert_respond_to "]}," ActiveModel Lint Tests test_errors_full_messages":{"type":"method","name":"test_errors_full_messages","children":[],"call":[" assert "," model errors full_messages is_a? "," model errors full_messages "," model errors "," model "," model respond_to? "]}," ActiveModel Lint Tests test_errors_aref":{"type":"method","name":"test_errors_aref","children":[],"call":[" assert "," model errors [] is_a? "," model errors [] "," model errors "," model "," model respond_to? "," assert_respond_to "," assert_equal "]}," ActiveModel Lint Tests test_model_naming":{"type":"method","name":"test_model_naming","children":[],"call":[" assert_kind_of ","model_name plural ","model_name singular ","model_name partial_path ","model_name human "," model class model_name "," model class "," model "," assert "," model class respond_to? ","model_name plural respond_to? ","model_name singular respond_to? ","model_name human respond_to? ","model_name respond_to? "," assert_equal "," model model_name "," model respond_to? "," assert_respond_to "," model class model_name  plural "," model class model_name  singular "," model class model_name  partial_path "," model class model_name  human "," model class  model class model_name  "," model class model_name  plural respond_to? "," model class model_name  singular respond_to? "," model class model_name  human respond_to? "," model class model_name  respond_to? "," model  model class model_name  "]}," ActiveModel Lint Tests test_persisted?":{"type":"method","name":"test_persisted?","children":[],"call":[" assert_boolean "," model persisted? "," model "," assert "," model respond_to? "," assert_respond_to "]}," ActiveModel Lint Tests test_valid?":{"type":"method","name":"test_valid?","children":[],"call":[" assert_boolean "," model valid? "," model "," assert "," model respond_to? "]}," ActiveModel Lint Tests test_to_param":{"type":"method","name":"test_to_param","children":[{"type":"method","name":"to_key","children":[],"asgn":[],"call":[]},{"type":"method","name":"persisted?","children":[],"asgn":[],"call":[]}],"call":[" assert "," model to_param nil? "," model to_param "," model "," model respond_to? "," assert_respond_to "]}," ActiveModel Lint Tests test_to_key":{"type":"method","name":"test_to_key","children":[{"type":"method","name":"persisted?","children":[],"asgn":[],"call":[]}],"call":[" assert "," model to_key nil? "," model to_key "," model "," model respond_to? "," assert_respond_to "]}," ActiveModel Errors generate_message":{"type":"method","name":"generate_message","children":[],"call":["I18n  translate ","(pair\n  (sym :default)\n  (lvar :defaults)) merge ","@base class human_attribute_name ","@base class ","@base class model_name human ","@base class model_name ","@base send ","attribute != ","defaults shift ","defaults flatten! ","defaults compact! ","defaults << ","@base class i18n_scope ","options delete ","klass model_name underscore ","klass model_name ","@base class lookup_ancestors map ","@base class lookup_ancestors ","options []= ","ActiveSupport Deprecation  warn ","Giving :default as validation option to errors.add has been deprecated.\n + ","options [] ","options [] is_a? ","ActiveModel::Errors#generate_message(attributes, custom_message) has been deprecated.\n + ","klass model_name i18n_key ","attribute to_s humanize ","attribute to_s ","@base class name humanize ","@base class name ","defaults compact flatten << ","defaults compact flatten ","defaults compact ","klass name underscore ","klass name ","klass_ancestors map ","x is_a? ","@base class ancestors reject ","@base class ancestors ","@base class respond_to? ","(pair\n  (sym :default)\n  (lvar :defaults)) merge! ","@base model_name human ","@base model_name ","@base class lookup_ancestors flat_map ","@base class i18n_scope to_s ","translation nil? ","options merge ","defaults drop ","defaults first "," catch ","(pair\n  (sym :model)\n  (send\n    (send\n      (ivar :@base) :model_name) :human)) merge! ","Error  generate_message ","(pair\n  (sym :default)\n  (lvar :defaults compact flatten << )) merge ","(pair\n  (sym :default)\n  (lvar :options delete )) merge ","defaults compact flatten <<  shift ","options delete  shift ","defaults compact flatten <<  flatten! ","options delete  flatten! ","defaults compact flatten <<  compact! ","options delete  compact! ","defaults compact flatten <<  << ","options delete  << ","@base class @base class i18n_scope to_s  ","(pair\n  (sym :default)\n  (lvar :defaults)) merge  delete ","(pair\n  (sym :default)\n  (lvar :defaults)) merge!  delete ","(pair\n  (sym :model)\n  (send\n    (send\n      (ivar :@base) :model_name) :human)) merge!  delete ","(pair\n  (sym :default)\n  (lvar :defaults)) merge  []= ","(pair\n  (sym :default)\n  (lvar :defaults)) merge!  []= ","(pair\n  (sym :model)\n  (send\n    (send\n      (ivar :@base) :model_name) :human)) merge!  []= ","(pair\n  (sym :default)\n  (lvar :defaults)) merge  [] ","(pair\n  (sym :default)\n  (lvar :defaults)) merge!  [] ","(pair\n  (sym :model)\n  (send\n    (send\n      (ivar :@base) :model_name) :human)) merge!  [] ","(pair\n  (sym :default)\n  (lvar :defaults)) merge  [] is_a? ","(pair\n  (sym :default)\n  (lvar :defaults)) merge!  [] is_a? ","(pair\n  (sym :model)\n  (send\n    (send\n      (ivar :@base) :model_name) :human)) merge!  [] is_a? ","klass model_name i18n_defaults shift  ","defaults compact flatten <<  compact flatten << ","options delete  compact flatten << ","defaults compact flatten <<  compact flatten ","options delete  compact flatten ","defaults compact flatten <<  compact ","options delete  compact ","(pair\n  (sym :default)\n  (lvar :defaults compact flatten << )) merge! ","(pair\n  (sym :default)\n  (lvar :options delete )) merge! ","@base class @base class i18n_scope to_s  to_s ","I18n  translate  nil? ","(pair\n  (sym :default)\n  (lvar :defaults)) merge  merge ","(pair\n  (sym :default)\n  (lvar :defaults)) merge!  merge ","(pair\n  (sym :model)\n  (send\n    (send\n      (ivar :@base) :model_name) :human)) merge!  merge ","defaults compact flatten <<  drop ","options delete  drop ","defaults compact flatten <<  first ","options delete  first "]}," ActiveModel Errors full_messages":{"type":"method","name":"full_messages","children":[],"call":["full_messages << ","I18n  t ","options merge ","messages each ","@base class human_attribute_name ","@base class ","attribute to_s gsub humanize ","attribute to_s gsub ","attribute to_s ","attribute == ","messages empty? ","Array  wrap "," each "," Array ","attr_name + ","attribute to_s humanize "," map "," full_message ","@errors map ","full_Array  wrap  << ","full_ Array  << ","Array  wrap  each "," Array  each ","Array  wrap  empty? "," Array  empty? ","@base class human_attribute_name  + ","attribute to_s gsub humanize  + ","attribute to_s humanize  + "]}," ActiveModel Errors add_on_blank":{"type":"method","name":"add_on_blank","children":[],"call":[" add ","value blank? ","@base send ","(lvar :attributes) flatten each ","(lvar :attributes) flatten ","ActiveSupport Deprecation  warn ","ActiveModel::Errors#add_on_blank(attributes, custom_message) has been deprecated.\n + ","options is_a? ! ","options is_a? "," Array each "," Array ","(str \"        ActiveModel::Errors#add_on_blank is deprecated and will be removed in Rails 5.1.\\n\") squish ","(str \"        ActiveModel::Errors#add_on_blank is deprecated and will be removed in Rails 5.1\\n\") squish ","@base send  blank? "]}," ActiveModel Errors add_on_empty":{"type":"method","name":"add_on_empty","children":[],"call":[" add ","value nil? ","value empty? ","value respond_to? ","@base send ","(lvar :attributes) flatten each ","(lvar :attributes) flatten ","ActiveSupport Deprecation  warn ","ActiveModel::Errors#add_on_empty(attributes, custom_message) has been deprecated.\n + ","options is_a? ! ","options is_a? ","is_empty ! ","value nil? ! "," Array each "," Array ","(str \"        ActiveModel::Errors#add_on_empty is deprecated and will be removed in Rails 5.1.\\n\") squish ","(str \"        ActiveModel::Errors#add_on_empty is deprecated and will be removed in Rails 5.1\\n\") squish ","@base send  nil? ","@base send  empty? ","@base send  respond_to? ","value empty?  ! ","@base send  nil? ! "]}," ActiveModel Errors add":{"type":"method","name":"add","children":[],"call":[" [] << "," [] ","message call ","message is_a? "," generate_message ","options except "," raise ","options [] "," normalize_message "," full_message ","exception == "," messages [] << "," messages [] ","attribute to_sym "," messages "," details [] << "," details [] "," details "," normalize_detail ","message respond_to? ","@errors append ","error full_message ","Error  new "," normalize_arguments ","message call  call "," generate_message  call "," normalize_message  call ","message call  is_a? "," generate_message  is_a? "," normalize_message  is_a? "," generate_message call  "," generate_ generate_message  "," generate_ normalize_message  "," normalize_message call  "," normalize_ generate_message  "," normalize_ normalize_message  "," full_message call  "," full_ generate_message  "," full_ normalize_message  ","options []  == "," message call s [] << ","  generate_message s [] << ","  normalize_message s [] << "," message call s [] ","  generate_message s [] ","  normalize_message s [] "," message call s ","  generate_message s ","  normalize_message s ","  normalize_detail s [] << ","  normalize_detail s [] ","  normalize_detail s "," normalize_ normalize_detail  ","message call  respond_to? "," generate_message  respond_to? "," normalize_message  respond_to? ","@Error  new s append ","error full_message call  ","error full_ generate_message  ","error full_ normalize_message  ","Error  new  full_message "]}," ActiveModel Errors as_json":{"type":"method","name":"as_json","children":[],"call":[" to_a "," to_hash ","options [] "]}," ActiveModel Errors to_xml":{"type":"method","name":"to_xml","children":[],"call":[" to_a to_xml ","options reverse_merge "," to_a ","e error "," to_a each ","options [] errors ","options [] ","options [] instruct! ","options delete "," Builder XmlMarkup  new "," require ","(pair\n  (sym :root)\n  (str \"errors\")) merge! "," deprecation_removal_warning "]}," ActiveModel Errors empty?":{"type":"method","name":"empty?","children":[],"call":["v empty? "," all? ","v is_a? ! ","v is_a? "," size zero? "," size "]}," ActiveModel Errors count":{"type":"method","name":"count","children":[],"call":[" to_a size "," to_a "]}," ActiveModel Errors to_a":{"type":"method","name":"to_a","children":[],"call":[" full_messages "]}," ActiveModel Errors size":{"type":"method","name":"size","children":[],"call":[" values flatten size "," values flatten "," values "]}," ActiveModel Errors each":{"type":"method","name":"each","children":[],"call":[" [] each "," [] "," each_key "," messages each_key "," messages "," messages [] each "," messages [] ","error message ","error attribute ","(send\n  (ivar :@errors) :sort) each ","a attribute <=> ","b attribute ","a attribute ","@errors sort ","ActiveSupport Deprecation  warn ","@errors each ","block arity <= ","block arity "]}," ActiveModel Errors []=":{"type":"method","name":"[]=","children":[],"call":[" [] << "," [] ","attribute to_sym "," messages [] << "," messages [] "," messages ","ActiveSupport Deprecation  warn ","(str \"        ActiveModel::Errors#[]= is deprecated and will be removed in Rails 5.1.\\n\") squish ","error inspect "]}," ActiveModel Errors []":{"type":"method","name":"[]","children":[],"call":[" set ","attribute to_sym "," get "," messages [] "," messages ","DeprecationHandlingMessageArray  new "," messages_for "]}," ActiveModel Errors initialize":{"type":"method","name":"initialize","children":[],"call":["ActiveSupport OrderedHash  new "," apply_default_array ","details []= ","Hash  new ","messages []= "]}," ActiveModel Dirty reset_attribute!":{"type":"method","name":"reset_attribute!","children":[],"call":[" __send__ "," changed_attributes [] "," changed_attributes "," attribute_changed? ","@changed_attributes [] "," changed_attributes delete "," restore_attribute! ","ActiveSupport Deprecation  warn ","(str \"          `#reset_\") squish "]}," ActiveModel Dirty attribute_will_change!":{"type":"method","name":"attribute_will_change!","children":[],"call":[" changed_attributes []= "," changed_attributes ","value clone ","value duplicable? "," __send__ ","@changed_attributes []= "," changed_attributes include? "," attribute_changed? "," set_attribute_was "," mutations_from_database force_change "," mutations_from_database "," _read_attribute ","@attributes [] "," mutations_from_database force_change tap ","attr to_s ","attr_name to_s "," changed_attr to_s ibutes []= "," changed_attr to_s ibutes ","value clone  clone "," __send__  clone "," _read_attribute  clone ","value clone  duplicable? "," __send__  duplicable? "," _read_attribute  duplicable? ","@changed_attr to_s ibutes []= "," changed_attr to_s ibutes include? "," attr to_s ibute_changed? "," set_attr to_s ibute_was "," _read_attr to_s ibute ","@attr to_s ibutes [] ","attr to_s  to_s ","attr to_s _name to_s "]}," ActiveModel Dirty attribute_was":{"type":"method","name":"attribute_was","children":[],"call":[" __send__ "," changed_attributes [] "," changed_attributes "," attribute_changed? ","@changed_attributes [] "," _read_attribute "," mutations_from_database original_value "," mutations_from_database ","attr_name to_s "]}," ActiveModel Dirty attribute_change":{"type":"method","name":"attribute_change","children":[],"call":[" __send__ "," changed_attributes [] "," changed_attributes "," attribute_changed? ","@changed_attributes [] "," _read_attribute "," attribute_was "," mutations_from_database change_to_attribute ","attr_name to_s "," mutations_from_database "]}," ActiveModel Dirty attribute_changed?":{"type":"method","name":"attribute_changed?","children":[],"call":[" changed_attributes include? "," changed_attributes ","@changed_attributes include? ","options [] == "," changed_attributes [] ","options [] ","options key? "," __send__ "," changes_include? ","from == ","to == "," changes_include? ! ! "," changes_include? ! "," _read_attribute "," attribute_was "," mutations_from_database changed? ! ! "," mutations_from_database changed? ! "," mutations_from_database changed? "," mutations_from_database ","attr_name to_s "]}," ActiveModel Dirty changed_attributes":{"type":"method","name":"changed_attributes","children":[],"call":["ActiveSupport HashWithIndifferentAccess  new "," attributes_changed_by_setter reverse_merge freeze "," attributes_changed_by_setter reverse_merge "," mutations_from_database changed_values "," mutations_from_database "," attributes_changed_by_setter "," mutations_from_database changed_values freeze "]}," ActiveModel Dirty previous_changes":{"type":"method","name":"previous_changes","children":[],"call":[" previously_changed_attributes ","ActiveSupport HashWithIndifferentAccess  new ","@previously_changed merge "," mutations_before_last_save changes "," mutations_before_last_save "]}," ActiveModel Dirty changes":{"type":"method","name":"changes","children":[],"call":["h []= "," attribute_change "," changed inject ","HashWithIndifferentAccess  new "," changed ","HashWithIndifferentAccess  [] "," changed map ","ActiveSupport HashWithIndifferentAccess  [] "," cache_changed_attributes "," mutations_from_database changes "," mutations_from_database "," _prepare_changes "]}," ActiveModel Dirty changed":{"type":"method","name":"changed","children":[],"call":[" changed_attributes keys "," changed_attributes ","@changed_attributes keys "," mutations_from_database changed_attribute_names "," mutations_from_database "]}," ActiveModel Dirty changed?":{"type":"method","name":"changed?","children":[],"call":[" changed_attributes empty? ! "," changed_attributes empty? "," changed_attributes ","@changed_attributes empty? ! ","@changed_attributes empty? "," changed_attributes any? "," changed_attributes present? "," mutations_from_database any_changes? "," mutations_from_database "]}," ActiveModel DeprecatedErrorMethods each_full":{"type":"method","name":"each_full","children":[],"call":[" to_a each "," to_a ","ActiveSupport Deprecation  warn "]}," ActiveModel DeprecatedErrorMethods invalid?":{"type":"method","name":"invalid?","children":[],"call":[" [] any? "," [] ","ActiveSupport Deprecation  warn "]}," ActiveModel DeprecatedErrorMethods add_to_base":{"type":"method","name":"add_to_base","children":[],"call":[" [] << "," [] ","ActiveSupport Deprecation  warn "]}," ActiveModel DeprecatedErrorMethods on_base":{"type":"method","name":"on_base","children":[],"call":[" on ","ActiveSupport Deprecation  silence ","ActiveSupport Deprecation  warn "]}," ActiveModel DeprecatedErrorMethods on":{"type":"method","name":"on","children":[],"call":["errors first ","errors size < ","errors size "," [] ","ActiveSupport Deprecation  warn ","message << "," []  first "," []  size < "," []  size "]}," ActiveModel Conversion to_param":{"type":"method","name":"to_param","children":[],"call":[" to_key join "," to_key "," persisted? ","key join "," class param_delimiter "," class ","key all? "," to_ to_key  join "," to_ to_key  "," to_key  join "," to_key  all? "]}," ActiveModel Conversion to_key":{"type":"method","name":"to_key","children":[],"call":[" id "," persisted? "," respond_to? "," Array "]}," ActiveModel Conversion to_model":{"type":"method","name":"to_model","children":[],"call":[]}," ActiveModel Callbacks _define_after_model_callback":{"type":"method","name":"_define_after_model_callback","children":[],"call":["klass class_eval ","127 + ","124 + ","139 + "," set_callback ","args << ","options []= "," Array << "," Array ","options [] ","v != ","ActiveSupport Callbacks Conditionals Value  new ","args extract_options! ","klass define_singleton_method ","options assert_valid_keys "," Array + ","args extract_options!  []= ","args extract_options!  [] ","args extract_args extract_options! ! ","args extract_options!  assert_valid_keys "]}," ActiveModel Callbacks _define_around_model_callback":{"type":"method","name":"_define_around_model_callback","children":[],"call":["klass class_eval ","119 + ","116 + ","131 + "," set_callback ","klass define_singleton_method ","options assert_valid_keys "]}," ActiveModel Callbacks _define_before_model_callback":{"type":"method","name":"_define_before_model_callback","children":[],"call":["klass class_eval ","111 + ","108 + ","123 + "," set_callback ","klass define_singleton_method ","options assert_valid_keys "]}," ActiveModel Callbacks define_model_callbacks":{"type":"method","name":"define_model_callbacks","children":[],"call":[" send ","types each "," define_callbacks ","callbacks each ","Array  wrap ","options delete ","(pair\n  (sym :terminator)\n  (str \"result == false\")) merge ","callbacks extract_options! ","types empty? "," Array ","(pair\n  (sym :terminator)\n  (str \"result == false\")) merge! ","(pair\n  (sym :terminator)\n  (block\n    (send nil :lambda)\n    (args\n      (arg :_)\n      (arg :result))\n    (send\n      (lvar :result) :==\n      (false)))) merge! ","result == "," lambda ","(pair\n  (sym :terminator)\n  (send nil :deprecated_false_terminator)) merge! "," deprecated_false_terminator ","(pair\n  (sym :skip_after_callbacks_if_terminated)\n  (true)) merge! ","Array  wrap  each "," Array  each ","(pair\n  (sym :terminator)\n  (str \"result == false\")) merge  delete ","callbacks extract_options!  delete ","(pair\n  (sym :terminator)\n  (str \"result == false\")) merge!  delete ","(pair\n  (sym :terminator)\n  (block\n    (send nil :lambda)\n    (args\n      (arg :_)\n      (arg :result))\n    (send\n      (lvar :result) :==\n      (false)))) merge!  delete ","(pair\n  (sym :terminator)\n  (send nil :deprecated_false_terminator)) merge!  delete ","(pair\n  (sym :skip_after_callbacks_if_terminated)\n  (true)) merge!  delete ","callbacks extract_(pair\n  (sym :terminator)\n  (str \"result == false\")) merge ! ","callbacks extract_callbacks extract_options! ! ","callbacks extract_(pair\n  (sym :terminator)\n  (str \"result == false\")) merge! ! ","callbacks extract_(pair\n  (sym :terminator)\n  (block\n    (send nil :lambda)\n    (args\n      (arg :_)\n      (arg :result))\n    (send\n      (lvar :result) :==\n      (false)))) merge! ! ","callbacks extract_(pair\n  (sym :terminator)\n  (send nil :deprecated_false_terminator)) merge! ! ","callbacks extract_(pair\n  (sym :skip_after_callbacks_if_terminated)\n  (true)) merge! ! ","Array  wrap  empty? "," Array  empty? "]}," ActiveModel Callbacks extended":{"type":"method","name":"extended","children":[],"call":[]}," ActiveModel AttributeMethods missing_attribute":{"type":"method","name":"missing_attribute","children":[],"call":[" raise "," class "]}," ActiveModel AttributeMethods guard_private_attribute_method!":{"type":"method","name":"guard_private_attribute_method!","children":[],"call":[" raise ","NoMethodError  new "," class private_method_defined? "," class "]}," ActiveModel AttributeMethods match_attribute_method?":{"type":"method","name":"match_attribute_method?","children":[],"call":[" attribute_method? ","match attr_name ","method match "," class send each "," class send "," class "," class attribute_method_matchers each "," class attribute_method_matchers ","matches detect ","method match  attr_name "," class send  attr_name ","method method match  ","method  class send  "," class attribute_method_method match ers each "," class attribute_method_ class send ers each "," class attribute_method_method match ers "," class attribute_method_ class send ers ","method match es detect "," class send es detect "," class send  detect "]}," ActiveModel AttributeMethods attribute_method?":{"type":"method","name":"attribute_method?","children":[],"call":[" attributes include? "," attributes "," respond_to_without_attributes? "]}," ActiveModel AttributeMethods respond_to?":{"type":"method","name":"respond_to?","children":[],"call":[" match_attribute_method? ","method to_s ","include_private_methods ! "," match_attribute_method? nil? ! "," match_attribute_method? nil? "," matched_attribute_method nil? ! "," matched_attribute_method nil? "," matched_attribute_method "]}," ActiveModel AttributeMethods method_missing":{"type":"method","name":"method_missing","children":[],"call":[" __send__ ","match attr_name ","match target "," guard_private_attribute_method! "," match_attribute_method? ","method_id to_s "," attribute_missing ","method to_s "," respond_to_without_attributes? "," matched_attribute_method "," match_attribute_method?  attr_name "," matched_attribute_method  attr_name "," match_attribute_method?  target "," matched_attribute_method  target ","  match_attribute_method? _attribute_method? ","  matched_attribute_method _attribute_method? ","  match_attribute_method? ed_attribute_method ","  matched_attribute_method ed_attribute_method "]}," ActiveModel AttributeMethods ClassMethods attribute_method_matchers":{"type":"method","name":"attribute_method_matchers","children":[],"call":[" write_inheritable_attribute "," read_inheritable_attribute "]}," ActiveModel AttributeMethods ClassMethods AttributeMethodMatcher method_missing_target":{"type":"method","name":"method_missing_target","children":[],"call":[" suffix "," prefix "]}," ActiveModel AttributeMethods ClassMethods AttributeMethodMatcher method_name":{"type":"method","name":"method_name","children":[],"call":[" suffix "," prefix ","@method_name % "]}," ActiveModel AttributeMethods ClassMethods AttributeMethodMatcher match":{"type":"method","name":"match","children":[],"call":["AttributeMethodMatch  new ","matchdata [] "," method_missing_target ","@regex match ","@regex =~ "," target ","@regex match  [] "]}," ActiveModel AttributeMethods ClassMethods AttributeMethodMatcher initialize":{"type":"method","name":"initialize","children":[],"call":["Regexp  escape ","options [] ","options symbolize_keys! "," suffix "," prefix ","ActiveSupport Deprecation  warn ","options [] == ","options fetch ","parameters nil? "]}," ActiveModel AttributeMethods ClassMethods instance_method_already_implemented?":{"type":"method","name":"instance_method_already_implemented?","children":[],"call":[" method_defined? "," generated_attribute_methods method_defined? "," generated_attribute_methods "]}," ActiveModel AttributeMethods ClassMethods attribute_methods_generated?":{"type":"method","name":"attribute_methods_generated?","children":[],"call":[]}," ActiveModel AttributeMethods ClassMethods generated_attribute_methods":{"type":"method","name":"generated_attribute_methods","children":[],"call":[" include ","Module  new ","Module  new tap ","(send\n  (const nil :Module) :new) tap "," extend "]}," ActiveModel AttributeMethods ClassMethods undefine_attribute_methods":{"type":"method","name":"undefine_attribute_methods","children":[],"call":[" undef_method "," instance_methods each "," instance_methods "," generated_attribute_methods module_eval "," generated_attribute_methods "," attribute_method_matchers_cache clear "," attribute_method_matchers_cache "," attribute_method_patterns_cache clear "," attribute_method_patterns_cache "]}," ActiveModel AttributeMethods ClassMethods define_attribute_methods":{"type":"method","name":"define_attribute_methods","children":[],"call":[" generated_attribute_methods module_eval ","271 + ","matcher method_missing_target "," generated_attribute_methods ","matcher method_name "," send "," respond_to? ","matcher suffix ","matcher prefix "," instance_method_already_implemented? "," attribute_method_matchers each "," attribute_method_matchers ","attr_names each "," attribute_methods_generated? ","257 + ","268 + ","301 + ","295 + ","method_name to_s =~ ","method_name to_s ","288 + ","274 + ","159 + "," define_attribute_method ","attr_names flatten each ","attr_names flatten ","CodeGenerator  batch ","ActiveSupport CodeGenerator  batch "," generate_alias_attribute_methods "," aliases_by_attribute_name [] each "," aliases_by_attribute_name [] ","attr_name to_s "," aliases_by_attribute_name ","matcher matcher method_name  ","matcher method_name  to_s =~ ","matcher method_name  to_s "]}," ActiveModel AttributeMethods ClassMethods alias_attribute":{"type":"method","name":"alias_attribute","children":[],"call":[" module_eval ","227 + ","matcher method_name "," attribute_method_matchers each "," attribute_method_matchers ","215 + ","224 + "," send "," define_method ","239 + ","matcher_old =~ ","matcher_new =~ ","matcher method_name to_s ","230 + ","141 + ","244 + "," define_optimized_call "," define_proxy_call "," attribute_aliases= "," attribute_aliases merge ","old_name to_s ","new_name to_s "," attribute_aliases ","CodeGenerator  batch ","batch << << << ","batch << << ","batch << ","matcher parameters == ","matcher parameters ","call_args join ","call_args << ","CALL_COMPILABLE_REGEXP  match? ","code_generator define_cached_method ","target_name unpack1 ","NAME_COMPILABLE_REGEXP  match? ","ActiveSupport CodeGenerator  batch "," eagerly_generate_alias_attribute_methods "," aliases_by_attribute_name [] << "," aliases_by_attribute_name [] "," aliases_by_attribute_name ","matcher matcher method_name to_s  ","matcher method_name to_s  =~ ","matcher matcher method_name to_s  to_s ","old_name to_s  to_s ","new_name to_s  to_s ","matcher matcher parameters  == ","matcher matcher parameters  ","matcher method_name to_s  unpack1 "]}," ActiveModel AttributeMethods ClassMethods attribute_method_affix":{"type":"method","name":"attribute_method_affix","children":[],"call":[" undefine_attribute_methods "," attribute_method_matchers concat ","AttributeMethodMatcher  new ","affix [] ","affixes map "," attribute_method_matchers ","affixes map! ","AttributeMethodPattern  new "," attribute_method_patterns "]}," ActiveModel AttributeMethods ClassMethods attribute_method_suffix":{"type":"method","name":"attribute_method_suffix","children":[],"call":[" undefine_attribute_methods "," attribute_method_matchers concat ","AttributeMethodMatcher  new ","suffixes map "," attribute_method_matchers ","suffixes map! ","AttributeMethodPattern  new "," attribute_method_patterns "]}," ActiveModel AttributeMethods ClassMethods attribute_method_prefix":{"type":"method","name":"attribute_method_prefix","children":[],"call":[" undefine_attribute_methods "," attribute_method_matchers concat ","AttributeMethodMatcher  new ","prefixes map "," attribute_method_matchers ","prefixes map! ","AttributeMethodPattern  new "," attribute_method_patterns "]}," ActiveModel AttributeMethods ClassMethods define_attr_method":{"type":"method","name":"define_attr_method","children":[],"call":["sing class_eval ","106 + ","value to_s inspect ","value to_s ","sing send "," block_given? ","95 + "," singleton_class "," metaclass ","103 + ","92 + ","110 + ","value nil? ","name =~ ","97 + ","105 + ","115 + ","102 + ","100 + ","81 + ","ActiveSupport Deprecation  warn "," singleton_class  class_eval "," metaclass  class_eval ","value to_s  to_s inspect ","value to_s  to_s "," singleton_class  send "," metaclass  send ","  singleton_class leton_class ","  metaclass leton_class ","value to_s  nil? "]}," ActiveModel Validations ClassMethods _merge_attributes":{"type":"method","name":"_merge_attributes","children":[],"call":["options merge ","attr_names extract_options! ","attr_names flatten ","attr_names extract_options!  merge ","attr_names extract_attr_names extract_options! ! "]}," ActiveModel Validations ClassMethods validates_presence_of":{"type":"method","name":"validates_presence_of","children":[],"call":[" validates_with "," _merge_attributes ","record errors add_on_blank ","configuration [] ","record errors "," validate ","attr_names extract_options! ","attr_names extract_options!  [] "]}," ActiveModel Validations ClassMethods validates_numericality_of":{"type":"method","name":"validates_numericality_of","children":[],"call":[" validates_with "," _merge_attributes ","record errors add ","configuration [] ","record errors ","raw_value method [] ","raw_value method ","ALL_NUMERICALITY_CHECKS  [] ","configuration []= ","record method call ","record method ","configuration [] is_a? ","configuration [] call ","raw_value to_i method [] ","raw_value to_i method ","raw_value to_i ","numericality_options each ","Kernel  Float ","raw_value to_s =~ ","raw_value to_s ","raw_value nil? ","record send ","record respond_to? ","before_type_cast to_sym "," validates_each "," raise ","value is_a? ","(send\n  (lvar :numericality_options) :-\n  (array\n    (sym :odd)\n    (sym :even))) each ","numericality_options - ","ALL_NUMERICALITY_CHECKS  keys & ","configuration keys ","ALL_NUMERICALITY_CHECKS  keys ","configuration update ","attr_names extract_options! ","Kernel  Float  method [] ","raw_value to_i  method [] ","raw_configuration []  method [] ","Kernel  Float  method ","raw_value to_i  method ","raw_configuration []  method ","Kernel  Float  to_i method [] ","raw_value to_i  to_i method [] ","raw_configuration []  to_i method [] ","Kernel  Float  to_i method ","raw_value to_i  to_i method ","raw_configuration []  to_i method ","Kernel  Float  to_i ","raw_value to_i  to_i ","raw_configuration []  to_i ","ALL_NUMERICALITY_CHECKS  keys &  each ","Kernel  Float  to_s =~ ","raw_value to_i  to_s =~ ","raw_configuration []  to_s =~ ","Kernel  Float  to_s ","raw_value to_i  to_s ","raw_configuration []  to_s ","Kernel  Float  nil? ","raw_value to_i  nil? ","raw_configuration []  nil? ","configuration []  is_a? ","(send\n  (lvar :ALL_NUMERICALITY_CHECKS  keys & ) :-\n  (array\n    (sym :odd)\n    (sym :even))) each ","ALL_NUMERICALITY_CHECKS  keys &  - "]}," ActiveModel Validations NumericalityValidator parse_raw_value":{"type":"method","name":"parse_raw_value","children":[],"call":["Kernel  Float ","raw_value to_i ","raw_value to_s =~ ","raw_value to_s ","options [] "]}," ActiveModel Validations ClassMethods validates_length_of":{"type":"method","name":"validates_length_of","children":[],"call":[" validates_with "," _merge_attributes ","record errors add ","record errors ","value size send ","validity_checks [] ","value size ","value nil? ","option == ","options [] call ","options [] ","value kind_of? "," validates_each "," raise ","option_value >= ","option_value is_a? ","value size > ","value size < ","max - ","option_value exclude_end? ","option_value end ","option_value begin ","(pair\n  (sym :is)\n  (sym :wrong_length)) [] ","range_options first ","range_options size ","ALL_RANGE_OPTIONS  & ","options keys ","options update ","attrs extract_options! symbolize_keys ","attrs extract_options! ","value split "," lambda ","options [] call  size send ","options [] call  size ","options [] call  nil? ","range_options first  == ","range_options first s [] call ","range_options first s [] ","options [] call  kind_of? ","option_options [] call  >= ","options []  >= ","range_options first _value >= ","option_options [] call  is_a? ","options []  is_a? ","range_options first _value is_a? ","options [] call  size > ","options [] call  size < ","max -  - ","option_options [] call  exclude_end? ","options []  exclude_end? ","range_options first _value exclude_end? ","option_options [] call  end ","options []  end ","range_options first _value end ","option_options [] call  begin ","options []  begin ","range_options first _value begin ","range_range_options first s first ","ALL_RANGE_OPTIONS  &  first ","range_range_options first s size ","ALL_RANGE_OPTIONS  &  size ","options (pair\n  (sym :is)\n  (sym :wrong_length)) [] s ","range_options first s keys ","range_options first s update ","attrs extract_options! symbolize_(pair\n  (sym :is)\n  (sym :wrong_length)) [] s ","attrs extract_range_options first s! symbolize_keys ","attrs extract_range_options first s! ","options [] call  split "]}," ActiveModel Validations ClassMethods validates_inclusion_of":{"type":"method","name":"validates_inclusion_of","children":[],"call":[" validates_with "," _merge_attributes ","record errors add ","configuration [] ","record errors ","enum include? "," validates_each "," raise ","enum respond_to? ","attr_names extract_options! ","attr_names extract_options!  [] "]}," ActiveModel Validations ClassMethods validates_format_of":{"type":"method","name":"validates_format_of","children":[],"call":[" validates_with "," _merge_attributes ","record errors add ","configuration [] ","record errors ","value to_s =~ ","value to_s "," validates_each ","value to_s !~ "," raise ","configuration [] is_a? ! ","configuration [] is_a? ","configuration include? ^ ","configuration include? ","attr_names extract_options! ","attr_names extract_options!  [] ","attr_names extract_options!  [] is_a? ! ","attr_names extract_options!  [] is_a? ","attr_names extract_options!  include? ^ ","attr_names extract_options!  include? "]}," ActiveModel Validations ClassMethods validates_exclusion_of":{"type":"method","name":"validates_exclusion_of","children":[],"call":[" validates_with "," _merge_attributes ","record errors add ","configuration [] ","record errors ","enum include? "," validates_each "," raise ","enum respond_to? ","attr_names extract_options! ","attr_names extract_options!  [] "]}," ActiveModel Validations ClassMethods validates_confirmation_of":{"type":"method","name":"validates_confirmation_of","children":[],"call":[" validates_with "," _merge_attributes ","record errors add ","configuration [] ","record errors ","value == ","record send ","record send nil? "," validates_each "," attr_accessor ","attr_names map ","attr_names extract_options! ","attr_names extract_options!  [] "]}," ActiveModel Validations ClassMethods validates_acceptance_of":{"type":"method","name":"validates_acceptance_of","children":[],"call":[" validates_with "," _merge_attributes ","record errors add ","configuration [] ","record errors ","value == "," validates_each "," attr_accessor ","db_cols include? ","name to_s ","attr_names reject "," column_names ","configuration update ","attr_names extract_options! "]}," ActiveModel Serializers Xml Serializer add_attributes":{"type":"method","name":"add_attributes","children":[],"call":[" builder tag! ","attribute decorations "," options [] ! "," options [] "," options ","attribute value to_s ","attribute value "," reformat_name ","attribute name "," builder ","(send\n  (send nil :serializable_attributes) :+\n  (send nil :serializable_method_attributes)) each "," serializable_attributes + "," serializable_method_attributes "," serializable_attributes "]}," ActiveModel Serializers Xml Serializer reformat_name":{"type":"method","name":"reformat_name","children":[],"call":["name dasherize "," dasherize? ","name camelize "," camelize? ","name camelize  dasherize ","name camelize  camelize "]}," ActiveModel Serializers Xml Serializer camelize?":{"type":"method","name":"camelize?","children":[],"call":[" options [] "," options "," options has_key? "]}," ActiveModel Serializers Xml Serializer dasherize?":{"type":"method","name":"dasherize?","children":[],"call":[" options [] "," options "," options has_key? ! "," options has_key? "]}," ActiveModel Serializers Xml Serializer root":{"type":"method","name":"root","children":[],"call":[" reformat_name ","(or\n  (send\n    (send nil :options) :[]\n    (sym :root))\n  (send\n    (send\n      (send\n        (ivar :@serializable) :class) :model_name) :singular)) to_s ","@serializable class model_name singular ","@serializable class model_name ","@serializable class "," options [] "," options ","(or\n  (send\n    (send nil :options) :[]\n    (sym :(or\n  (send\n    (send nil :options) :[]\n    (sym :root))\n  (send\n    (send\n      (send\n        (ivar :@serializable) :class) :model_name) :singular)) to_s ))\n  (send\n    (send\n      (send\n        (ivar :@serializable) :class) :model_name) :singular)) to_s "]}," ActiveModel Serializers Xml Serializer builder":{"type":"method","name":"builder","children":[],"call":[" options []= "," options ","builder instruct! "," options [] "," Builder XmlMarkup  new "," require "]}," ActiveModel Serializers Xml Serializer serializable_method_attributes":{"type":"method","name":"serializable_method_attributes","children":[],"call":["methods << ","MethodAttribute  new ","name to_s ","@serializable respond_to? "," Array inject "," Array "," options [] "," options ","Array  wrap inject ","Array  wrap "]}," ActiveModel Serializers Xml Serializer serializable_attribute_names":{"type":"method","name":"serializable_attribute_names","children":[],"call":[" options [] "," options "," options [] any? ","@serializable attributes keys sort ","@serializable attributes keys ","@serializable attributes "]}," ActiveModel Serializers Xml Serializer MethodAttribute compute_type":{"type":"method","name":"compute_type","children":[],"call":["Hash XML_TYPE_NAMES  [] ","@serializable send class name ","@serializable send class ","@serializable send "," name "]}," ActiveModel Serializers Xml Serializer Attribute compute_value":{"type":"method","name":"compute_value","children":[],"call":["formatter call ","Hash XML_FORMATTING  [] "," type to_s "," type ","@serializable send "," name ","Hash XML_FORMATTING  []  call "]}," ActiveModel Serializers Xml Serializer Attribute needs_encoding?":{"type":"method","name":"needs_encoding?","children":[],"call":["(sym :binary) include? ! ","(sym :binary) include? "," type "]}," ActiveModel Lint Tests test_destroyed?":{"type":"method","name":"test_destroyed?","children":[],"call":[" assert_boolean "," model destroyed? "," model "," assert "," model respond_to? "]}," ActiveModel Lint Tests test_new_record?":{"type":"method","name":"test_new_record?","children":[],"call":[" assert_boolean "," model new_record? "," model "," assert "," model respond_to? "]}," ActiveModel Dirty previously_changed_attributes":{"type":"method","name":"previously_changed_attributes","children":[],"call":[]}," ActiveModel Dirty initialize":{"type":"method","name":"initialize","children":[],"call":[]}," ActiveModel Errors to_hash":{"type":"method","name":"to_hash","children":[],"call":["(or-asgn\n  (send\n    (lvar :hash) :[]\n    (lvar :k))\n  (array)) << ","hash [] "," each ","ActiveSupport OrderedHash  new "," messages dup "," messages ","messages []= "," full_message ","array map "," messages each "," messages each_with_object "," without_default_proc ","errors map "," group_by_attribute transform_values "," group_by_attribute ","(or-asgn\n  (send\n    (lvar :ActiveSupport OrderedHash  new ) :[]\n    (lvar :k))\n  (array)) << ","ActiveSupport OrderedHash  new  [] "]}," ActiveModel ValidationsRepairHelper repair_validations":{"type":"method","name":"repair_validations","children":[],"call":["k __update_callbacks ","k _validate_callbacks= ","@__stored_callbacks [] ","model_classes each ","block call ","@__stored_callbacks []= ","k _validate_callbacks dup ","k _validate_callbacks "]}," ActiveModel ValidationsRepairHelper ClassMethods repair_validations":{"type":"method","name":"repair_validations","children":[],"call":["k __update_callbacks ","k _validate_callbacks= ","@_stored_callbacks [] ","model_classes each "," teardown ","@_stored_callbacks []= ","k _validate_callbacks dup ","k _validate_callbacks "," setup "]}," ActiveModel Validations read_attribute_for_validation":{"type":"method","name":"read_attribute_for_validation","children":[],"call":[" send "]}," ActiveModel StateMachine current_state":{"type":"method","name":"current_state","children":[],"call":["sm initial_state "," instance_variable_set "," read_state "," respond_to? "," instance_variable_get "," instance_variable_defined? "," write_state_without_persistence "," write_state ","sm current_state_variable "," class state_machine "," class "," class state_machine  initial_state "," class state_machine  current_state_variable "]}," ActiveModel StateMachine ClassMethods define_state_query_method":{"type":"method","name":"define_state_query_method","children":[],"call":[" class_eval "," undef_method "," method_defined? "]}," ActiveModel StateMachine ClassMethods state_machine":{"type":"method","name":"state_machine","children":[],"call":[" state_machines [] "," state_machines "," state_machines [] update ","Machine  new ","name is_a? "]}," ActiveModel StateMachine ClassMethods state_machines=":{"type":"method","name":"state_machines=","children":[],"call":["value dup "]}," ActiveModel StateMachine ClassMethods state_machines":{"type":"method","name":"state_machines","children":[],"call":[]}," ActiveModel StateMachine ClassMethods inherited":{"type":"method","name":"inherited","children":[],"call":["klass state_machines= "," state_machines "]}," ActiveModel StateMachine StateTransition from?":{"type":"method","name":"from?","children":[],"call":["@from == "]}," ActiveModel StateMachine StateTransition ==":{"type":"method","name":"==","children":[],"call":["@to == ","obj to ","@from == ","obj from "]}," ActiveModel StateMachine StateTransition execute":{"type":"method","name":"execute","children":[],"call":["@on_transition call ","obj send "]}," ActiveModel StateMachine StateTransition perform":{"type":"method","name":"perform","children":[],"call":["@guard call ","obj send "]}," ActiveModel StateMachine StateTransition initialize":{"type":"method","name":"initialize","children":[],"call":["opts [] "]}," ActiveModel StateMachine State update":{"type":"method","name":"update","children":[],"call":["options delete ","options key? "]}," ActiveModel StateMachine State for_select":{"type":"method","name":"for_select","children":[],"call":[" name to_s "," name "," display_name "]}," ActiveModel StateMachine State display_name":{"type":"method","name":"display_name","children":[],"call":[" name to_s gsub capitalize "," name to_s gsub "," name to_s "," name "]}," ActiveModel StateMachine State call_action":{"type":"method","name":"call_action","children":[],"call":["action call ","record send ","@options [] ","@options []  call "]}," ActiveModel StateMachine State ==":{"type":"method","name":"==","children":[],"call":[" name == ","state name "," name ","state is_a? "]}," ActiveModel StateMachine State initialize":{"type":"method","name":"initialize","children":[],"call":[" update ","machine klass define_state_query_method ","machine klass ","options delete ","options delete  klass define_state_query_method ","options delete  klass "]}," ActiveModel StateMachine Machine event_failed_callback":{"type":"method","name":"event_failed_callback","children":[],"call":["(if\n  (send\n    (ivar :@name) :==\n    (sym :default))\n  (str \"\")\n  (dstr\n    (begin\n      (ivar :@name))\n    (str \"_\"))) + ","@name == "]}," ActiveModel StateMachine Machine event_fired_callback":{"type":"method","name":"event_fired_callback","children":[],"call":["(if\n  (send\n    (ivar :@name) :==\n    (sym :default))\n  (str \"\")\n  (dstr\n    (begin\n      (ivar :@name))\n    (str \"_\"))) + ","@name == "]}," ActiveModel StateMachine Machine event":{"type":"method","name":"event","children":[],"call":["(or-asgn\n  (send\n    (ivar :@events) :[]\n    (lvar :name))\n  (send\n    (const nil :Event) :new\n    (self)\n    (lvar :name))) update ","Event  new ","@events [] "]}," ActiveModel StateMachine Machine state":{"type":"method","name":"state","children":[],"call":["@states << ","(or-asgn\n  (send\n    (send nil :state_index) :[]\n    (lvar :name))\n  (send\n    (const nil :State) :new\n    (lvar :name)\n    (hash\n      (pair\n        (sym :machine)\n        (self))))) update ","State  new "," state_index [] "," state_index "]}," ActiveModel StateMachine Machine current_state_variable":{"type":"method","name":"current_state_variable","children":[],"call":[]}," ActiveModel StateMachine Machine events_for":{"type":"method","name":"events_for","children":[],"call":["event name ","events map! ","event transitions_from_state? ","@events values select ","@events values "]}," ActiveModel StateMachine Machine states_for_select":{"type":"method","name":"states_for_select","children":[],"call":["st name to_s ","st name ","st display_name "," states map "," states "]}," ActiveModel StateMachine Machine fire_event":{"type":"method","name":"fire_event","children":[],"call":["record send "," event_failed_callback ","record respond_to? ","@events [] success ","@events [] ","record current_state "," event_fired_callback "," state_index [] call_action "," state_index [] "," state_index ","@events [] fire "]}," ActiveModel StateMachine Machine update":{"type":"method","name":"update","children":[],"call":[" instance_eval ","options [] ","options key? "]}," ActiveModel StateMachine Machine initial_state":{"type":"method","name":"initial_state","children":[],"call":[" states first name "," states first "," states "]}," ActiveModel StateMachine Machine initialize":{"type":"method","name":"initialize","children":[],"call":[" update "]}," ActiveModel StateMachine Event transitions":{"type":"method","name":"transitions","children":[],"call":["@transitions << ","StateTransition  new ","trans_opts merge ","s to_sym "," Array each "," Array ","trans_opts [] "]}," ActiveModel StateMachine Event update":{"type":"method","name":"update","children":[],"call":[" instance_eval ","options [] ","options key? "]}," ActiveModel StateMachine Event ==":{"type":"method","name":"==","children":[],"call":[" name == ","event name "," name ","event is_a? "]}," ActiveModel StateMachine Event transitions_from_state?":{"type":"method","name":"transitions_from_state?","children":[],"call":["t from? ","@transitions any? "]}," ActiveModel StateMachine Event fire":{"type":"method","name":"fire","children":[],"call":["transition execute "," Array first "," Array ","transition to ","transition perform "," Array include? ! "," Array include? ","transitions each "," raise ","transitions size == ","transitions size ","t from == ","obj current_state ","@machine name ","t from ","@transitions select "]}," ActiveModel StateMachine Event initialize":{"type":"method","name":"initialize","children":[],"call":[" update ","machine fire_event ","machine klass send ","name to_s ","machine klass "]}," ActiveModel Validations WithValidator validate_each":{"type":"method","name":"validate_each","children":[],"call":["record send ","record method arity == ","record method arity ","record method "," options [] "," options "]}," ActiveModel Validations ClassMethods _validates_default_keys":{"type":"method","name":"_validates_default_keys","children":[],"call":[]}," ActiveModel Validations InclusionValidator inclusion_method":{"type":"method","name":"inclusion_method","children":[],"call":["enumerable is_a? "]}," ActiveModel Validations FormatValidator check_options_validity":{"type":"method","name":"check_options_validity","children":[],"call":[" raise ","option respond_to? ! ","option respond_to? ","option is_a? ! ","option is_a? ","options [] ","options [] != "," regexp_using_multiline_anchors? "," options [] != "," options [] "," options ","options []  respond_to? ! "," options []  respond_to? ! ","options []  respond_to? "," options []  respond_to? ","options []  is_a? ! "," options []  is_a? ! ","options []  is_a? "," options []  is_a? ","options [] s [] "," options [] s [] ","options [] s [] != "," options [] s [] != ","  options [] s [] != ","  options [] s [] "," options [] s ","  options [] s "]}," ActiveModel Validations FormatValidator record_error":{"type":"method","name":"record_error","children":[],"call":["record errors add "," options except merge! "," options except "," options ","record errors "]}," ActiveModel Validations FormatValidator option_call":{"type":"method","name":"option_call","children":[],"call":["option call ","option respond_to? "," options [] "," options "," options []  call "," options []  respond_to? ","  options [] s [] ","  options [] s "]}," ActiveModel Validations ExclusionValidator inclusion_method":{"type":"method","name":"inclusion_method","children":[],"call":["enumerable is_a? "]}," ActiveModel SecurePassword InstanceMethodsOnActivation password=":{"type":"method","name":"password=","children":[],"call":[" password_digest= ","BCrypt Password  create ","unencrypted_password blank? ","ActiveModel SecurePassword  min_cost ","BCrypt Engine  cost ","unencrypted_password present? ","unencrypted_password nil? ","unencrypted_password empty? ! ","unencrypted_password empty? ","ActiveModel SecurePassword  min_BCrypt Engine  cost  ","BCrypt Engine  BCrypt Engine  cost  "]}," ActiveModel SecurePassword InstanceMethodsOnActivation authenticate":{"type":"method","name":"authenticate","children":[],"call":["BCrypt Password  new == ","BCrypt Password  new "," password_digest ","BCrypt Password  new is_password? "]}," ActiveModel SecurePassword ClassMethods has_secure_password":{"type":"method","name":"has_secure_password","children":[{"type":"method","name":"attributes_protected_by_default","children":[],"asgn":[],"call":[]}],"call":[" + "," respond_to? "," include "," validates_presence_of "," validates_confirmation_of "," attr_reader "," require "," gem "," raise "," password_digest blank? "," password_digest "," before_create ","m password present? ","m password "," lambda ","options fetch ","$stderr puts "," password present? "," password ","record errors add ","record errors ","record password_digest present? ","record password_digest "," validate "," validates_length_of ","record send present? ","record send ","InstanceMethodsOnActivation  new "," alias_method ","attribute == ","BCrypt Password  new is_password? ","BCrypt Password  new "," send "," define_method "," instance_variable_set ","BCrypt Password  create ","BCrypt Engine  cost ","ActiveModel SecurePassword  min_cost ","unencrypted_password empty? ! ","unencrypted_password empty? ","unencrypted_password nil? ","record public_send present? ","record public_send ","password_value bytesize > ","password_value bytesize ","password_value present? ","digest_was present? ","record respond_to? "," warn ","BCrypt Engine  BCrypt Engine  cost  ","ActiveModel SecurePassword  min_BCrypt Engine  cost  ","record public_send  bytesize > ","record public_send  bytesize ","record public_send  present? "]}," ActiveModel Observer disabled_for?":{"type":"method","name":"disabled_for?","children":[],"call":["klass observers disabled_for? ","klass observers ","klass respond_to? ","object class ","object class  observers disabled_for? ","object class  observers ","object class  respond_to? "]}," ActiveModel Observing ClassMethods observer_instances":{"type":"method","name":"observer_instances","children":[],"call":[]}," ActiveModel ObserverArray set_enablement":{"type":"method","name":"set_enablement","children":[],"call":["array set_enablement "," each_subclass_array "," disabled_observers << "," disabled_observers "," disabled_observers delete "," raise ","ArgumentError  new ","klass < "," observer_class_for ","observers each ","ActiveModel Observer  descendants ","observers == "," set_enablement "," transaction "," block_given? "," disabled_ActiveModel Observer  descendants  << "," disabled_ActiveModel Observer  descendants  "," disabled_ActiveModel Observer  descendants  delete "," observer_class_for  < ","ActiveModel Observer  descendants  each ","ActiveModel Observer  descendants  == "]}," ActiveModel ObserverArray each_subclass_array":{"type":"method","name":"each_subclass_array","children":[],"call":["subclass observers "," model_class descendants each "," model_class descendants "," model_class "]}," ActiveModel ObserverArray transaction":{"type":"method","name":"transaction","children":[],"call":[" end_transaction "," start_transaction "]}," ActiveModel ObserverArray end_transaction":{"type":"method","name":"end_transaction","children":[],"call":["array end_transaction "," each_subclass_array "," disabled_observer_stack pop "," disabled_observer_stack "]}," ActiveModel ObserverArray disabled_observer_stack":{"type":"method","name":"disabled_observer_stack","children":[],"call":[]}," ActiveModel ObserverArray start_transaction":{"type":"method","name":"start_transaction","children":[],"call":["array start_transaction "," each_subclass_array "," disabled_observer_stack push "," disabled_observers dup "," disabled_observers "," disabled_observer_stack "]}," ActiveModel ObserverArray observer_class_for":{"type":"method","name":"observer_class_for","children":[],"call":[" raise ","(begin\n  (lvar :observer)) + ","observer to_s camelize constantize ","observer to_s camelize ","observer to_s ","observer respond_to? ","observer is_a? "]}," ActiveModel ObserverArray disabled_observers":{"type":"method","name":"disabled_observers","children":[],"call":["Set  new "]}," ActiveModel ObserverArray enable":{"type":"method","name":"enable","children":[],"call":[" set_enablement "]}," ActiveModel ObserverArray disable":{"type":"method","name":"disable","children":[],"call":[" set_enablement "]}," ActiveModel ObserverArray disabled_for?":{"type":"method","name":"disabled_for?","children":[],"call":[" disabled_observers include? ","observer class "," disabled_observers "]}," ActiveModel ObserverArray initialize":{"type":"method","name":"initialize","children":[],"call":[]}," ActiveModel Naming convert_to_model":{"type":"method","name":"convert_to_model","children":[],"call":[]}," ActiveModel Naming param_key":{"type":"method","name":"param_key","children":[],"call":[]}," ActiveModel Naming route_key":{"type":"method","name":"route_key","children":[],"call":[]}," ActiveModel Name _singularize":{"type":"method","name":"_singularize","children":[],"call":["ActiveSupport Inflector  underscore tr ","ActiveSupport Inflector  underscore ","_ freeze ","/ freeze "]}," ActiveModel MassAssignmentSecurity ClassMethods accessible_attributes_configs":{"type":"method","name":"accessible_attributes_configs","children":[],"call":["Hash  new ","w logger= "," logger "," respond_to? ","WhiteList  new tap ","WhiteList  new "," _accessible_attributes ","h []= "]}," ActiveModel MassAssignmentSecurity ClassMethods protected_attributes_configs":{"type":"method","name":"protected_attributes_configs","children":[],"call":["Hash  new ","w logger= "," logger "," respond_to? ","BlackList  new tap ","BlackList  new "," attributes_protected_by_default "," _protected_attributes ","h []= "]}," ActiveModel MassAssignmentSecurity ClassMethods active_authorizers":{"type":"method","name":"active_authorizers","children":[],"call":[" protected_attributes_configs "," _active_authorizer "]}," ActiveModel Errors keys":{"type":"method","name":"keys","children":[],"call":[" messages keys "," messages ","(send\n  (send nil :messages) :select) keys ","value empty? ! ","value empty? "," messages select ","keys freeze ","keys uniq! ","@errors map "," deprecation_removal_warning "," messages @errors map  ","(send\n  (send nil :messages) :select) @errors map  ","@errors map  freeze ","@errors map  uniq! "]}," ActiveModel Errors values":{"type":"method","name":"values","children":[],"call":[" messages values "," messages ","(send\n  (send nil :messages) :select) values ","value empty? ! ","value empty? "," messages select ","@errors map freeze ","@errors map "," deprecation_removal_warning "]}," ActiveModel Errors set":{"type":"method","name":"set","children":[],"call":[" messages []= "," messages ","ActiveSupport Deprecation  warn ","(str \"        ActiveModel::Errors#set is deprecated and will be removed in Rails 5.1.\\n\") squish ","value inspect "]}," ActiveModel Errors get":{"type":"method","name":"get","children":[],"call":[" messages [] "," messages ","ActiveSupport Deprecation  warn ","(str \"        ActiveModel::Errors#get is deprecated and will be removed in Rails 5.1.\\n\") squish "]}," ActiveModel Errors include?":{"type":"method","name":"include?","children":[],"call":["v any? "," messages [] "," messages "," messages include? "," messages [] present? "," messages key? ","attribute to_sym ","error match? ","@errors any? "," messages []  any? ","attribute to_sym  to_sym "]}," ActiveModel Errors clear":{"type":"method","name":"clear","children":[],"call":[" messages clear "," messages "," details clear "," details "]}," ActiveModel AttributeMethods ClassMethods define_attribute_method":{"type":"method","name":"define_attribute_method","children":[],"call":[" generated_attribute_methods module_eval ","308 + ","matcher method_missing_target "," generated_attribute_methods ","302 + ","method_name to_s =~ ","method_name to_s ","295 + ","matcher method_name "," send "," respond_to? ","matcher suffix ","matcher prefix "," instance_method_already_implemented? "," attribute_method_matchers each "," attribute_method_matchers "," attribute_method_matchers_cache clear "," attribute_method_matchers_cache "," define_optimized_call ","attr_name to_s "," define_proxy_call ","matcher target ","CodeGenerator  batch ","matcher parameters ","ActiveSupport CodeGenerator  batch "," attribute_method_patterns_cache clear "," attribute_method_patterns_cache ","pattern parameters ","pattern proxy_target ","pattern method_name "," attribute_method_patterns each "," attribute_method_patterns ","matcher method_name  to_s =~ ","pattern method_name  to_s =~ ","matcher method_name  to_s ","pattern method_name  to_s ","matcher matcher method_name  ","matcher pattern method_name  ","pattern matcher method_name  ","pattern pattern method_name  "]}," ActiveModel Naming singular_route_key":{"type":"method","name":"singular_route_key","children":[],"call":[]}," ActiveModel Errors delete":{"type":"method","name":"delete","children":[],"call":[" messages delete "," messages "," details delete "," details ","key to_sym ","matches map presence ","matches map ","@errors delete ","matches each "," where "," normalize_arguments "," where  map presence "," where  map "," where  each "]}," ActiveModel Errors dup":{"type":"method","name":"dup","children":[],"call":["copy initialize_dup "]}," ActiveModel Errors initialize_dup":{"type":"method","name":"initialize_dup","children":[],"call":["other messages dup ","other messages ","other details deep_dup ","other details ","other errors deep_dup ","other errors "]}," ActiveModel Validations ClassMethods validates!":{"type":"method","name":"validates!","children":[],"call":[" validates ","attributes << ","options []= ","attributes extract_options! ","attributes extract_options!  []= ","attributes extract_attributes extract_options! ! "]}," ActiveModel Validations LengthValidator tokenize":{"type":"method","name":"tokenize","children":[],"call":["value mb_chars ","value encoding_aware? ! ","value encoding_aware? "," options [] call "," options [] "," options ","value kind_of? ","record send ","record respond_to? ","tokenizer call ","tokenizer kind_of? "," options []  call "," options []  kind_of? "]}," ActiveModel Serializers Xml Serializer add_associations":{"type":"method","name":"add_associations","children":[],"call":["records to_xml ","merged_options []= ","association to_s ","record to_xml ","merged_options merge ","record class name ","record class ","record class to_s underscore == ","record class to_s underscore ","record class to_s "," options [] "," options ","records each ","@builder tag! ","records empty? ","association to_s singularize ","ActiveSupport XmlMini  rename_key ","records is_a? ","opts merge "," options slice ","records class name ","records class ","records class to_s underscore == ","records class to_s underscore ","records class to_s ","records to_ary ","records respond_to? "," options [] nil? ! "," options [] nil? ","merged_options [] nil? ","merged_options [] ","(sym :skip_types) each ","records to_ary  to_xml ","opts merge  []= ","opts merge  merge ","records to_ary  each ","@builder ActiveSupport XmlMini  rename_key ! ","records to_ary  empty? ","records to_ary  is_a? ","records to_ary  class name ","records to_ary  class ","records to_ary  class to_s underscore == ","records to_ary  class to_s underscore ","records to_ary  class to_s ","records to_ary  to_ary ","records to_ary  respond_to? ","opts merge  [] nil? ","opts merge  [] "]}," ActiveModel Serializers Xml Serializer add_includes":{"type":"method","name":"add_includes","children":[],"call":[" add_associations ","@serializable send "," options "]}," ActiveModel Serializers Xml Serializer serializable_collection":{"type":"method","name":"serializable_collection","children":[],"call":[" class Attribute  new "," class "," class MethodAttribute  new ","methods include? ","name to_s "," serializable_hash map "," serializable_hash ","Array  wrap map ","Array  wrap "," options [] "," options "," Array map "," Array ","Array  wrap map  include? "," Array map  include? ","name to_s  to_s "]}," ActiveModel Serializers Xml Serializer serializable_hash":{"type":"method","name":"serializable_hash","children":[],"call":["@serializable serializable_hash ","@options except "]}," ActiveModel Serialization serializable_add_includes":{"type":"method","name":"serializable_add_includes","children":[],"call":[" send ","include each ","Hash  [] ","n to_a first ","n to_a ","n is_a? ","Array  wrap map ","Array  wrap ","include is_a? ","options [] ","includes each "," Array map "," Array ","includes is_a? "," Array flat_map ","Hash  []  each ","options []  each ","Hash  []  is_a? ","options []  is_a? ","Hash  [] s each ","options [] s each ","Hash  [] s is_a? ","options [] s is_a? "]}," ActiveModel MassAssignmentSecurity ClassMethods mass_assignment_sanitizer=":{"type":"method","name":"mass_assignment_sanitizer=","children":[],"call":[" _mass_assignment_sanitizer= "," const_get new "," const_get ","value to_s camelize ","value to_s ","value is_a? "]}," ActiveModel MassAssignmentSecurity StrictSanitizer insensitive_attributes":{"type":"method","name":"insensitive_attributes","children":[],"call":[]}," ActiveModel MassAssignmentSecurity StrictSanitizer process_removed_attributes":{"type":"method","name":"process_removed_attributes","children":[],"call":[" raise ","attrs join ","(send\n  (lvar :attrs) :-\n  (send nil :insensitive_attributes)) empty? ","attrs - "," insensitive_attributes "]}," ActiveModel MassAssignmentSecurity LoggerSanitizer process_removed_attributes":{"type":"method","name":"process_removed_attributes","children":[],"call":[" logger debug ","attrs join "," logger "," logger? "]}," ActiveModel MassAssignmentSecurity LoggerSanitizer logger?":{"type":"method","name":"logger?","children":[],"call":["@target logger ","@target respond_to? "]}," ActiveModel MassAssignmentSecurity LoggerSanitizer initialize":{"type":"method","name":"initialize","children":[],"call":[]}," ActiveModel MassAssignmentSecurity Sanitizer process_removed_attributes":{"type":"method","name":"process_removed_attributes","children":[],"call":[" raise "]}," ActiveModel MassAssignmentSecurity Sanitizer initialize":{"type":"method","name":"initialize","children":[],"call":[]}," ActiveModel MassAssignmentSecurity PermissionSet deny?":{"type":"method","name":"deny?","children":[],"call":[" raise "]}," ActiveModel Lint Tests test_to_partial_path":{"type":"method","name":"test_to_partial_path","children":[],"call":[" assert_kind_of "," model to_partial_path "," model "," assert "," model respond_to? "," assert_respond_to "]}," ActiveModel Errors normalize_message":{"type":"method","name":"normalize_message","children":[],"call":["message call ","message is_a? "," generate_message ","options except "]}," ActiveModel Errors full_message":{"type":"method","name":"full_message","children":[],"call":["I18n  t ","@base class human_attribute_name ","@base class ","attribute to_s gsub humanize ","attribute to_s gsub ","attribute to_s ","attribute == ","attribute to_s tr humanize ","attribute to_s tr ","defaults shift ","attribute tr humanize ","attribute tr ","defaults << ","defaults flatten! ","klass model_name i18n_key ","klass model_name ","@base class lookup_ancestors map ","@base class lookup_ancestors ","@base class i18n_scope ","parts join ","parts empty? ","parts pop ","attribute split ","attribute remove ","@base class respond_to? "," class i18n_customize_full_message "," class "," class i18n_full_message ","Error  full_message ","@base class human_parts pop  ","@base class human_attribute remove _name ","@base class human_attribute to_s _name ","attribute remove  to_s gsub humanize ","attribute to_s  to_s gsub humanize ","attribute remove  to_s gsub ","attribute to_s  to_s gsub ","attribute remove  to_s ","attribute to_s  to_s ","attribute remove  == ","attribute to_s  == ","attribute remove  to_s tr humanize ","attribute to_s  to_s tr humanize ","attribute remove  to_s tr ","attribute to_s  to_s tr ","attribute remove  tr humanize ","attribute to_s  tr humanize ","attribute remove  tr ","attribute to_s  tr ","attribute split  join ","attribute split  empty? ","attribute split  pop ","attribute remove  split ","attribute to_s  split ","attribute remove  remove ","attribute to_s  remove "]}," ActiveModel Errors added?":{"type":"method","name":"added?","children":[],"call":[" [] include? "," [] "," normalize_message ","message call ","message respond_to? ","(send\n  (send\n    (send\n      (self) :details) :[]\n    (lvar :attribute)) :map) include? ","e [] "," details [] map "," details [] "," details ","message is_a? ","(send\n  (send\n    (send\n      (self) :details) :[]\n    (send\n      (lvar :attribute) :to_sym)) :map) include? ","attribute to_sym "," details [] include? "," normalize_detail "," messages_for include? "," messages_for ","error strict_match? ","@errors any? ","type is_a? "," normalize_arguments "," normalize_ normalize_message  "," normalize_message call  "," normalize_message  call ","message call  call "," normalize_message  respond_to? ","message call  respond_to? "," normalize_message  is_a? ","message call  is_a? ","  normalize_message s_for include? "," message call s_for include? ","  normalize_message s_for "," message call s_for "]}," ActiveModel Conversion ClassMethods _to_partial_path":{"type":"method","name":"_to_partial_path","children":[],"call":["(begin\n  (lvar :collection)) freeze ","ActiveSupport Inflector  tableize ","ActiveSupport Inflector  underscore ","ActiveSupport Inflector  demodulize "," name "," model_name element "," model_name "," model_name collection "," respond_to? ","(begin\n  (lvar :ActiveSupport Inflector  tableize )) freeze "," model_name ActiveSupport Inflector  underscore  "," model_name ActiveSupport Inflector  tableize  "]}," ActiveModel Conversion to_partial_path":{"type":"method","name":"to_partial_path","children":[],"call":[" class _to_partial_path "," class "]}," ActiveModel AttributeMethods attribute_missing":{"type":"method","name":"attribute_missing","children":[],"call":[" __send__ ","match attr_name ","match target ","match proxy_target "]}," ActiveModel AttributeMethods ClassMethods AttributeMethodMatcher plain?":{"type":"method","name":"plain?","children":[],"call":[" suffix empty? "," suffix "," prefix empty? "," prefix "]}," ActiveModel AttributeMethods ClassMethods define_optimized_call":{"type":"method","name":"define_optimized_call","children":[],"call":["mod module_eval ","343 + ","send =~ ","(send\n  (send\n    (lvar :extra) :map\n    (block-pass\n      (sym :inspect))) :<<\n  (str \"*args\")) join ","extra map << ","extra map ","name =~ ","(send\n  (send\n    (lvar :(send\n  (send\n    (lvar :extra) :map\n    (block-pass\n      (sym :inspect))) :<<\n  (str \"*args\")) join ) :map\n    (block-pass\n      (sym :inspect))) :<<\n  (str \"*args\")) join ","(send\n  (send\n    (lvar :extra) :map\n    (block-pass\n      (sym :inspect))) :<<\n  (str \"*args\")) join  map << ","(send\n  (send\n    (lvar :extra) :map\n    (block-pass\n      (sym :inspect))) :<<\n  (str \"*args\")) join  map "]}," ActiveModel AttributeMethods ClassMethods attribute_method_matcher":{"type":"method","name":"attribute_method_matcher","children":[],"call":[" attribute_method_matchers_cache []= "," attribute_method_matchers_cache ","method match ","matchers detect "," attribute_method_matchers partition reverse flatten "," attribute_method_matchers partition reverse "," attribute_method_matchers partition "," attribute_method_matchers "," attribute_method_matchers_cache [] "," attribute_method_matchers_cache key? "," attribute_method_matchers_cache compute_if_absent "," attribute_method_method match ers_cache []= "," attribute_method_ attribute_method_matchers partition reverse flatten _cache []= "," attribute_method_method match ers_cache "," attribute_method_ attribute_method_matchers partition reverse flatten _cache ","method method match  ","method match ers detect "," attribute_method_matchers partition reverse flatten  detect "," attribute_method_method match ers partition reverse flatten "," attribute_method_ attribute_method_matchers partition reverse flatten  partition reverse flatten "," attribute_method_method match ers partition reverse "," attribute_method_ attribute_method_matchers partition reverse flatten  partition reverse "," attribute_method_method match ers partition "," attribute_method_ attribute_method_matchers partition reverse flatten  partition "," attribute_method_method match ers "," attribute_method_ attribute_method_matchers partition reverse flatten  "," attribute_method_method match ers_cache [] "," attribute_method_ attribute_method_matchers partition reverse flatten _cache [] "," attribute_method_method match ers_cache key? "," attribute_method_ attribute_method_matchers partition reverse flatten _cache key? "," attribute_method_method match ers_cache compute_if_absent "," attribute_method_ attribute_method_matchers partition reverse flatten _cache compute_if_absent "]}," ActiveModel AttributeMethods ClassMethods attribute_method_matchers_cache":{"type":"method","name":"attribute_method_matchers_cache","children":[],"call":["ThreadSafe Cache  new ","Concurrent Map  new "]}," ActiveModel Validations dup":{"type":"method","name":"dup","children":[],"call":["copy initialize_dup "]}," ActiveModel Validations initialize_dup":{"type":"method","name":"initialize_dup","children":[],"call":[]}," ActiveModel Validations InclusionValidator delimiter":{"type":"method","name":"delimiter","children":[],"call":[" options [] "," options "]}," ActiveModel Validations ExclusionValidator delimiter":{"type":"method","name":"delimiter","children":[],"call":[" options [] "," options "]}," ActiveModel eager_load!":{"type":"method","name":"eager_load!","children":[],"call":["ActiveModel Serializer  eager_load! "]}," ActiveModel version":{"type":"method","name":"version","children":[],"call":[]}," ActiveModel Validations ClassMethods clear_validators!":{"type":"method","name":"clear_validators!","children":[],"call":[" _validators clear "," _validators "," reset_callbacks "]}," ActiveModel Validations PresenceValidator validate_each":{"type":"method","name":"validate_each","children":[],"call":["record errors add "," options ","record errors ","value blank? "]}," ActiveModel Validations LengthValidator skip_nil_check?":{"type":"method","name":"skip_nil_check?","children":[],"call":[" options [] nil? "," options [] "," options ","key == "]}," ActiveModel Validations FormatValidator regexp_using_multiline_anchors?":{"type":"method","name":"regexp_using_multiline_anchors?","children":[],"call":["regexp source end_with? ! ","regexp source end_with? ","regexp source ","regexp source start_with? ","source end_with? ! ","source end_with? ","source start_with? ","regexp regexp source  end_with? ! ","regexp regexp source  end_with? ","regexp regexp source  ","regexp regexp source  start_with? ","regexp source  end_with? ! ","regexp source  end_with? ","regexp source  start_with? "]}," ActiveModel Validations Clusivity inclusion_method":{"type":"method","name":"inclusion_method","children":[],"call":["enumerable is_a? ","enumerable first ","enumerable first is_a? ","enumerable end ","enumerable begin "]}," ActiveModel Validations Clusivity delimiter":{"type":"method","name":"delimiter","children":[],"call":[" options [] "," options "]}," ActiveModel Validations Clusivity include?":{"type":"method","name":"include?","children":[],"call":["exclusions send "," inclusion_method "," delimiter ","record send "," delimiter respond_to? "," delimiter call ","members send ","members public_send ","value all? ","value is_a? "," resolve_value "," delimiter call  send "," resolve_value  send "," delimiter call  public_send "," resolve_value  public_send "]}," ActiveModel Validations Clusivity check_validity!":{"type":"method","name":"check_validity!","children":[],"call":[" raise "," delimiter respond_to? "," delimiter "]}," ActiveModel Validations HelperMethods validates_absence_of":{"type":"method","name":"validates_absence_of","children":[],"call":[" validates_with "," _merge_attributes "]}," ActiveModel Validations AbsenceValidator validate_each":{"type":"method","name":"validate_each","children":[],"call":["record errors add "," options ","record errors ","value present? "]}," ActiveModel SecurePassword InstanceMethodsOnActivation password_confirmation=":{"type":"method","name":"password_confirmation=","children":[],"call":["unencrypted_password blank? "]}," ActiveModel Model persisted?":{"type":"method","name":"persisted?","children":[],"call":[]}," ActiveModel Model initialize":{"type":"method","name":"initialize","children":[],"call":[" public_send ","params each "," assign_attributes "]}," ActiveModel Model included":{"type":"method","name":"included","children":[],"call":[]}," ActiveModel ForbiddenAttributesProtection sanitize_for_mass_assignment":{"type":"method","name":"sanitize_for_mass_assignment","children":[],"call":[" raise ","attributes permitted? ! ","attributes permitted? ","attributes respond_to? ","attributes to_h "]}," ActiveModel Errors full_messages_for":{"type":"method","name":"full_messages_for","children":[],"call":[" full_message ","(or\n  (send nil :get\n    (lvar :attribute))\n  (array)) map "," get "," messages [] map "," messages [] "," messages ","attribute to_sym "," where map freeze "," where map "," where ","(or\n  (send nil :get\n    (lvar :attribute to_sym ))\n  (array)) map ","attribute to_sym  to_sym "]}," ActiveModel DeprecatedMassAssignmentSecurity ClassMethods attr_accessible":{"type":"method","name":"attr_accessible","children":[],"call":[" raise "]}," ActiveModel DeprecatedMassAssignmentSecurity ClassMethods attr_protected":{"type":"method","name":"attr_protected","children":[],"call":[" raise "]}," ActiveModel AttributeMethods ClassMethods define_proxy_call":{"type":"method","name":"define_proxy_call","children":[],"call":["mod module_eval ","378 + ","send =~ ","(send\n  (send\n    (lvar :extra) :map!\n    (block-pass\n      (sym :inspect))) :<<\n  (str \"*args\")) join ","extra map! << ","extra map! ","name =~ ","373 + ","381 + ","385 + ","390 + ","383 + ",",  freeze ","382 + ","CALL_COMPILABLE_REGEXP  match? ","NAME_COMPILABLE_REGEXP  match? ","380 + ","code_generator << << << << ","code_generator << << << ","code_generator << << ","code_generator << ","batch << << << ","batch << << ","batch << ","parameters == ","call_args join ","call_args unshift ","call_args << ","call_args map! ","code_generator define_cached_method ","name unpack1 ","(send\n  (send\n    (lvar :(send\n  (send\n    (lvar :extra) :map!\n    (block-pass\n      (sym :inspect))) :<<\n  (str \"*args\")) join ) :map!\n    (block-pass\n      (sym :inspect))) :<<\n  (str \"*args\")) join ","(send\n  (send\n    (lvar :extra) :map!\n    (block-pass\n      (sym :inspect))) :<<\n  (str \"*args\")) join  map! << ","(send\n  (send\n    (lvar :extra) :map!\n    (block-pass\n      (sym :inspect))) :<<\n  (str \"*args\")) join  map! "]}," ActiveModel Validator deprecated_setup":{"type":"method","name":"deprecated_setup","children":[],"call":[" setup ","options [] ","ActiveSupport Deprecation  warn "," respond_to? "]}," ActiveModel Validations ConfirmationValidator setup!":{"type":"method","name":"setup!","children":[],"call":["klass send ","(send\n  (send nil :attributes) :map) compact ","klass method_defined? "," attributes map "," attributes ","klass attr_writer ","klass attr_reader "," attributes filter_map "]}," ActiveModel Validations ConfirmationValidator initialize":{"type":"method","name":"initialize","children":[],"call":[" setup! ","options [] ","(pair\n  (sym :case_sensitive)\n  (true)) merge! "]}," ActiveModel Validations AcceptanceValidator setup!":{"type":"method","name":"setup!","children":[],"call":["klass send ","klass attribute_method? "," attributes reject "," attributes ","klass include ","LazilyDefineAttributes  new ","AttributeDefinition  new ","klass included_modules include? ","klass included_modules "]}," ActiveModel gem_version":{"type":"method","name":"gem_version","children":[],"call":[]}," ActiveModel Dirty reset_changes":{"type":"method","name":"reset_changes","children":[],"call":["ActiveSupport HashWithIndifferentAccess  new "," clear_changes_information ","ActiveSupport Deprecation  warn ","(str \"          `#reset_changes` is deprecated and will be removed on Rails 5.\\n\") squish "]}," ActiveModel Dirty changes_applied":{"type":"method","name":"changes_applied","children":[],"call":["ActiveSupport HashWithIndifferentAccess  new "," changes "," forget_attribute_assignments "," mutations_from_database "," _prepare_changes "," mutations_from_database finalize_changes "]}," ActiveModel AttributeMethods ClassMethods attribute_alias":{"type":"method","name":"attribute_alias","children":[],"call":[" attribute_aliases [] ","name to_s "," attribute_aliases "]}," ActiveModel AttributeMethods ClassMethods attribute_alias?":{"type":"method","name":"attribute_alias?","children":[],"call":[" attribute_aliases key? ","new_name to_s "," attribute_aliases "]}," ActiveModel SecurePassword InstanceMethodsOnActivation should_confirm_password?":{"type":"method","name":"should_confirm_password?","children":[],"call":[" password present? "," password "," password_confirmation "]}," ActiveModel Validations NumericalityValidator record_attribute_changed_in_place?":{"type":"method","name":"record_attribute_changed_in_place?","children":[],"call":["record attribute_changed_in_place? ","attr_name to_s ","record respond_to? "]}," ActiveModel Validations NumericalityValidator allow_only_integer?":{"type":"method","name":"allow_only_integer?","children":[],"call":[" options [] "," options "," options [] call ","record send "," resolve_value "]}," ActiveModel Naming extended":{"type":"method","name":"extended","children":[],"call":[]}," ActiveModel Dirty clear_attribute_changes":{"type":"method","name":"clear_attribute_changes","children":[],"call":[" attributes_changed_by_setter except! "," attributes_changed_by_setter "," clear_attribute_change ","attr_names each "]}," ActiveModel Dirty set_attribute_was":{"type":"method","name":"set_attribute_was","children":[],"call":[" attributes_changed_by_setter []= "," attributes_changed_by_setter "]}," ActiveModel Dirty restore_attribute!":{"type":"method","name":"restore_attribute!","children":[],"call":[" clear_attribute_changes "," __send__ "," changed_attributes [] "," changed_attributes "," attribute_changed? "," attribute_was "," clear_attribute_change ","attr_name to_s ","attr_name to_s  to_s "]}," ActiveModel Dirty clear_changes_information":{"type":"method","name":"clear_changes_information","children":[],"call":["ActiveSupport HashWithIndifferentAccess  new "," forget_attribute_assignments "]}," ActiveModel Dirty restore_attributes":{"type":"method","name":"restore_attributes","children":[],"call":[" restore_attribute! ","attributes each ","attr_names each "]}," ActiveModel AttributeMethods ClassMethods attribute_method_matchers_matching":{"type":"method","name":"attribute_method_matchers_matching","children":[],"call":["(send\n  (lvar :matchers) :map) compact ","method match ","matchers map "," attribute_method_matchers partition reverse flatten "," attribute_method_matchers partition reverse "," attribute_method_matchers partition "," attribute_method_matchers "," attribute_method_matchers_cache compute_if_absent "," attribute_method_matchers_cache ","matcher match ","(send\n  (send nil :attribute_method_matchers) :map) compact "," attribute_method_matchers map "," attribute_method_matchers filter_map ","(send\n  (lvar : attribute_method_matchers partition reverse flatten ) :map) compact "," attribute_method_matchers partition reverse flatten  map "," attribute_method_ attribute_method_matchers partition reverse flatten  partition reverse flatten "," attribute_method_ attribute_method_matchers partition reverse flatten  partition reverse "," attribute_method_ attribute_method_matchers partition reverse flatten  partition "," attribute_method_ attribute_method_matchers partition reverse flatten  "," attribute_method_ attribute_method_matchers partition reverse flatten _cache compute_if_absent "," attribute_method_ attribute_method_matchers partition reverse flatten _cache ","(send\n  (send nil :attribute_method_ attribute_method_matchers partition reverse flatten ) :map) compact "," attribute_method_ attribute_method_matchers partition reverse flatten  map "," attribute_method_ attribute_method_matchers partition reverse flatten  filter_map "]}," ActiveModel Dirty changes_include?":{"type":"method","name":"changes_include?","children":[],"call":[" attributes_changed_by_setter include? "," attributes_changed_by_setter "," mutations_from_database changed? "," mutations_from_database "]}," ActiveModel ValidationError initialize":{"type":"method","name":"initialize","children":[],"call":["I18n  t ","@model class i18n_scope ","@model class ","@model errors full_messages join ","@model errors full_messages ","@model errors ","@model @model errors full_messages join  full_messages join ","@model @model errors full_messages join  full_messages ","@model @model errors full_messages join  "]}," ActiveModel Validations raise_validation_error":{"type":"method","name":"raise_validation_error","children":[],"call":[" raise ","ValidationError  new "]}," ActiveModel Validations validate!":{"type":"method","name":"validate!","children":[],"call":[" raise_validation_error "," valid? "]}," ActiveModel Validations NumericalityValidator is_integer?":{"type":"method","name":"is_integer?","children":[],"call":["(str \"\\\\A[+-]?\\\\d+\\\\z\") === ","raw_value to_s ","INTEGER_REGEX  === ","INTEGER_REGEX  match? "]}," ActiveModel Validations NumericalityValidator is_number?":{"type":"method","name":"is_number?","children":[],"call":[" parse_raw_value_as_a_number nil? ! "," parse_raw_value_as_a_number nil? "," parse_raw_value_as_a_number ","parsed_value nil? ! ","parsed_value nil? ","Kernel  Float ","raw_value !~ "," parse_as_number nil? ! "," parse_as_number nil? "," parse_as_number ","raw_value is_a? ! ","raw_value is_a? "," options [] "," options ","Kernel  Float  nil? ! ","Kernel  Float  nil? "]}," ActiveModel Validations ConfirmationValidator confirmation_value_equal?":{"type":"method","name":"confirmation_value_equal?","children":[],"call":["value == ","value casecmp == ","value casecmp ","value is_a? "," options [] ! "," options [] "," options "]}," ActiveModel Validations AcceptanceValidator AttributeDefinition convert_to_reader_name":{"type":"method","name":"convert_to_reader_name","children":[],"call":["method_name to_s chomp ","method_name to_s ","attr_name [] ","attr_name end_with? ","attr_name []  [] ","method_name to_s  [] ","attr_name []  end_with? ","method_name to_s  end_with? "]}," ActiveModel Validations AcceptanceValidator AttributeDefinition define_on":{"type":"method","name":"define_on","children":[],"call":["klass send ","klass attribute_method? "," attributes reject "," attributes ","klass attr_writer ","klass attr_reader ","klass define_attribute_methods "]}," ActiveModel Validations AcceptanceValidator AttributeDefinition matches?":{"type":"method","name":"matches?","children":[],"call":[" attributes include? "," attributes "," convert_to_reader_name "]}," ActiveModel Validations AcceptanceValidator AttributeDefinition initialize":{"type":"method","name":"initialize","children":[],"call":["attributes map "]}," ActiveModel Validations AcceptanceValidator LazilyDefineAttributes initialize":{"type":"method","name":"initialize","children":[],"call":[" send ","attribute_definition define_on "," class ","attribute_definition matches? "," define_method ","attributes map "]}," ActiveModel Validations AcceptanceValidator acceptable_option?":{"type":"method","name":"acceptable_option?","children":[],"call":[" Array include? "," Array "," options [] "," options "]}," ActiveModel Type lookup":{"type":"method","name":"lookup","children":[],"call":[" registry lookup "," registry "]}," ActiveModel Type register":{"type":"method","name":"register","children":[],"call":[" registry register "," registry "]}," ActiveModel Type Value cast_value":{"type":"method","name":"cast_value","children":[],"call":[]}," ActiveModel Type Value assert_valid_value":{"type":"method","name":"assert_valid_value","children":[],"call":[]}," ActiveModel Type Value hash":{"type":"method","name":"hash","children":[],"call":["(send\n  (self) :class) hash "," limit "," scale "," precision "," class "]}," ActiveModel Type Value ==":{"type":"method","name":"==","children":[],"call":[" limit == ","other limit "," limit "," scale == ","other scale "," scale "," precision == ","other precision "," precision "," class == ","other class "," class "]}," ActiveModel Type Value map":{"type":"method","name":"map","children":[],"call":[]}," ActiveModel Type Value changed_in_place?":{"type":"method","name":"changed_in_place?","children":[],"call":[]}," ActiveModel Type Value changed?":{"type":"method","name":"changed?","children":[],"call":["old_value != "]}," ActiveModel Type Value binary?":{"type":"method","name":"binary?","children":[],"call":[]}," ActiveModel Type Value type_cast_for_schema":{"type":"method","name":"type_cast_for_schema","children":[],"call":["value inspect "]}," ActiveModel Type Value serialize":{"type":"method","name":"serialize","children":[],"call":[]}," ActiveModel Type Value cast":{"type":"method","name":"cast","children":[],"call":[" cast_value ","value nil? "]}," ActiveModel Type Value deserialize":{"type":"method","name":"deserialize","children":[],"call":[" cast "]}," ActiveModel Type Value type":{"type":"method","name":"type","children":[],"call":[]}," ActiveModel Type Value initialize":{"type":"method","name":"initialize","children":[],"call":[]}," ActiveModel Type UnsignedInteger min_value":{"type":"method","name":"min_value","children":[],"call":[]}," ActiveModel Type UnsignedInteger max_value":{"type":"method","name":"max_value","children":[],"call":[" * "]}," ActiveModel Type Time cast_value":{"type":"method","name":"cast_value","children":[],"call":[" new_time ","time_hash values_at ","time_hash [] nil? ","time_hash [] "," Date  _parse "," fast_string_to_time ","value =~ ","value empty? ","value is_a? ","value sub "," apply_seconds_precision ","value start_with? ","time_hash nil? ","value blank? "," Date  _parse  values_at "," Date  _parse  [] nil? "," Date  _parse  [] "," Date  _parse  nil? "]}," ActiveModel Type Time user_input_in_time_zone":{"type":"method","name":"user_input_in_time_zone","children":[],"call":["value change ","value present? ","time_hash [] nil? ","time_hash [] "," Date  _parse ","time_hash nil? ","value change  change ","value change  present? "," Date  _parse  [] nil? "," Date  _parse  [] "," Date  _parse  nil? "]}," ActiveModel Type Time type":{"type":"method","name":"type","children":[],"call":[]}," ActiveModel Type Text type":{"type":"method","name":"type","children":[],"call":[]}," ActiveModel Type String cast_value":{"type":"method","name":"cast_value","children":[],"call":[" String  new ","value to_s ","f freeze ","t freeze "]}," ActiveModel Type String changed_in_place?":{"type":"method","name":"changed_in_place?","children":[],"call":["raw_old_value != ","new_value is_a? "]}," ActiveModel Type Registration matches?":{"type":"method","name":"matches?","children":[],"call":["type_name == "," name "]}," ActiveModel Type Registration call":{"type":"method","name":"call","children":[],"call":[" block call "," block ","kwargs any? "]}," ActiveModel Type Registration initialize":{"type":"method","name":"initialize","children":[],"call":[]}," ActiveModel Type Registry find_registration":{"type":"method","name":"find_registration","children":[],"call":["r matches? "," registrations find "," registrations "]}," ActiveModel Type Registry registration_klass":{"type":"method","name":"registration_klass","children":[],"call":[]}," ActiveModel Type Registry lookup":{"type":"method","name":"lookup","children":[],"call":[" raise ","symbol inspect ","registration call "," find_registration "," registrations [] "," registrations "," find_registration  call "," registrations []  call "," find_ find_registration  "," find_ registrations []  ","  find_registration s [] ","  registrations [] s [] ","  find_registration s ","  registrations [] s "]}," ActiveModel Type Registry register":{"type":"method","name":"register","children":[],"call":[" registrations << "," registration_klass new "," registration_klass "," registrations ","klass new "," proc ","block ruby2_keywords ","block respond_to? "," block_given? "," registrations []= "]}," ActiveModel Type Registry initialize":{"type":"method","name":"initialize","children":[],"call":[]}," ActiveModel Type Integer _limit":{"type":"method","name":"_limit","children":[],"call":[" limit "]}," ActiveModel Type Integer min_value":{"type":"method","name":"min_value","children":[],"call":[" max_value -@ "," max_value "]}," ActiveModel Type Integer max_value":{"type":"method","name":"max_value","children":[],"call":["1 << "," _limit * - "," _limit * "," _limit "]}," ActiveModel Type Integer ensure_in_range":{"type":"method","name":"ensure_in_range","children":[],"call":[" raise "," _limit "," class "," range cover? "," range "," range cover? ! "," in_range? "]}," ActiveModel Type Integer cast_value":{"type":"method","name":"cast_value","children":[],"call":["value to_i "]}," ActiveModel Type Integer serialize":{"type":"method","name":"serialize","children":[],"call":[" ensure_in_range "," cast "," non_numeric_string? ","value is_a? "]}," ActiveModel Type Integer deserialize":{"type":"method","name":"deserialize","children":[],"call":["value to_i ","value nil? ","value blank? "]}," ActiveModel Type Integer type":{"type":"method","name":"type","children":[],"call":[]}," ActiveModel Type Integer initialize":{"type":"method","name":"initialize","children":[],"call":[" max_value "," min_value "]}," ActiveModel Type ImmutableString cast_value":{"type":"method","name":"cast_value","children":[],"call":["result freeze ","value to_s ","value to_s freeze "]}," ActiveModel Type ImmutableString serialize":{"type":"method","name":"serialize","children":[],"call":["value to_s "]}," ActiveModel Type ImmutableString type":{"type":"method","name":"type","children":[],"call":[]}," ActiveModel Type Helpers TimeValue fast_string_to_time":{"type":"method","name":"fast_string_to_time","children":[],"call":[" new_time ","6 to_i ","5 to_i ","4 to_i ","3 to_i ","2 to_i ","1 to_i ","(send\n  (send\n    (nth-ref 7) :to_r) :*\n  (int 1000000)) to_i ","7 to_r * ","7 to_r ","string =~ ","(send\n  (send\n    (lvar :microsec_part) :to_r) :*\n  (int 1000000)) to_i ","microsec_part to_r * ","microsec_part to_r ","microsec_part to_i ","microsec_part []= ","microsec_part length == ","microsec_part length ","microsec_part start_with? ","8 to_i * + ","9 to_i * ","9 to_i ","8 to_i * ","8 to_i ","8 == ","10 ** ","6 - ","7 to_i ","ISO_DATETIME  =~ "," Time  new "," Time  at "," is_utc? ","ISO_DATETIME  match? ","(send\n  (send\n    (lvar :(send\n  (send\n    (nth-ref 7) :to_r) :*\n  (int 1000000)) to_i _part) :to_r) :*\n  (int 1000000)) to_i ","(send\n  (send\n    (lvar :(send\n  (send\n    (lvar :microsec_part) :to_r) :*\n  (int 1000000)) to_i _part) :to_r) :*\n  (int 1000000)) to_i ","(send\n  (send\n    (lvar :microsec_part to_i _part) :to_r) :*\n  (int 1000000)) to_i ","(send\n  (send\n    (nth-ref 7) :to_r) :*\n  (int 1000000)) to_i _part to_r * ","(send\n  (send\n    (lvar :microsec_part) :to_r) :*\n  (int 1000000)) to_i _part to_r * ","microsec_part to_i _part to_r * ","(send\n  (send\n    (nth-ref 7) :to_r) :*\n  (int 1000000)) to_i _part to_r ","(send\n  (send\n    (lvar :microsec_part) :to_r) :*\n  (int 1000000)) to_i _part to_r ","microsec_part to_i _part to_r ","(send\n  (send\n    (nth-ref 7) :to_r) :*\n  (int 1000000)) to_i _part to_i ","(send\n  (send\n    (lvar :microsec_part) :to_r) :*\n  (int 1000000)) to_i _part to_i ","microsec_part to_i _part to_i ","(send\n  (send\n    (nth-ref 7) :to_r) :*\n  (int 1000000)) to_i _part []= ","(send\n  (send\n    (lvar :microsec_part) :to_r) :*\n  (int 1000000)) to_i _part []= ","microsec_part to_i _part []= ","(send\n  (send\n    (nth-ref 7) :to_r) :*\n  (int 1000000)) to_i _part length == ","(send\n  (send\n    (lvar :microsec_part) :to_r) :*\n  (int 1000000)) to_i _part length == ","microsec_part to_i _part length == ","(send\n  (send\n    (nth-ref 7) :to_r) :*\n  (int 1000000)) to_i _part length ","(send\n  (send\n    (lvar :microsec_part) :to_r) :*\n  (int 1000000)) to_i _part length ","microsec_part to_i _part length ","(send\n  (send\n    (nth-ref 7) :to_r) :*\n  (int 1000000)) to_i _part start_with? ","(send\n  (send\n    (lvar :microsec_part) :to_r) :*\n  (int 1000000)) to_i _part start_with? ","microsec_part to_i _part start_with? "]}," ActiveModel Type Helpers TimeValue new_time":{"type":"method","name":"new_time","children":[],"call":[" Time  public_send "," default_timezone ","time getlocal "," is_utc? "," Time  utc ","mday == ","mon == ","year == ","year nil? "," Time  local ","offset == "]}," ActiveModel Type Helpers TimeValue user_input_in_time_zone":{"type":"method","name":"user_input_in_time_zone","children":[],"call":["value in_time_zone "]}," ActiveModel Type Helpers TimeValue type_cast_for_schema":{"type":"method","name":"type_cast_for_schema","children":[],"call":["value to_s ","value to_s inspect ","value to_formatted_s inspect ","value to_formatted_s ","value to_fs inspect ","value to_fs "]}," ActiveModel Type Helpers TimeValue apply_seconds_precision":{"type":"method","name":"apply_seconds_precision","children":[],"call":["value change ","value usec / * ","value usec / ","value usec ","10 ** ","6 - "," precision ","value respond_to? ","value usec - ","value usec % ","value nsec - ","value nsec ","rounded_off_nsec > ","value nsec % ","9 - ","value nsec %  > "]}," ActiveModel Type Helpers TimeValue default_timezone":{"type":"method","name":"default_timezone","children":[],"call":[" is_utc? "]}," ActiveModel Type Helpers TimeValue is_utc?":{"type":"method","name":"is_utc?","children":[],"call":[" Time  zone_default =~ "," Time  zone_default "," Time  zone_default nil? "]}," ActiveModel Type Helpers TimeValue serialize":{"type":"method","name":"serialize","children":[],"call":["value send ","value respond_to? "," is_utc? ","value acts_like? "," apply_seconds_precision ","value getlocal ","value getutc ","value utc? ! ","value utc? ","value send  send "," apply_seconds_precision  send ","value getlocal  send ","value getutc  send ","value send  respond_to? "," apply_seconds_precision  respond_to? ","value getlocal  respond_to? ","value getutc  respond_to? ","value send  acts_like? "," apply_seconds_precision  acts_like? ","value getlocal  acts_like? ","value getutc  acts_like? ","value send  getlocal "," apply_seconds_precision  getlocal ","value getlocal  getlocal ","value getutc  getlocal ","value send  getutc "," apply_seconds_precision  getutc ","value getlocal  getutc ","value getutc  getutc ","value send  utc? ! "," apply_seconds_precision  utc? ! ","value getlocal  utc? ! ","value getutc  utc? ! ","value send  utc? "," apply_seconds_precision  utc? ","value getlocal  utc? ","value getutc  utc? "]}," ActiveModel Type Helpers Numeric non_numeric_string?":{"type":"method","name":"non_numeric_string?","children":[],"call":["value to_s !~ ","value to_s ","(str \"\\\\A[-+]?\\\\d+\") match? ! ","(str \"\\\\A[-+]?\\\\d+\") match? ","NUMERIC_REGEX  match? ! ","NUMERIC_REGEX  match? "]}," ActiveModel Type Helpers Numeric number_to_non_number?":{"type":"method","name":"number_to_non_number?","children":[],"call":[" non_numeric_string? ","old_value != ","new_value_before_type_cast to_s ","new_value_before_type_cast is_a? ! ","new_value_before_type_cast is_a? "]}," ActiveModel Type Helpers Numeric changed?":{"type":"method","name":"changed?","children":[],"call":[" number_to_non_number? "," equal_nan? ! "," equal_nan? "]}," ActiveModel Type Helpers Numeric cast":{"type":"method","name":"cast","children":[],"call":["value presence ","value <=> "]}," ActiveModel Type Helpers Mutable changed_in_place?":{"type":"method","name":"changed_in_place?","children":[],"call":["raw_old_value != "," serialize "]}," ActiveModel Type Helpers Mutable cast":{"type":"method","name":"cast","children":[],"call":[" deserialize "," serialize "]}," ActiveModel Type Helpers AcceptsMultiparameterTime initialize":{"type":"method","name":"initialize","children":[],"call":[" private "," Time  send "," default_timezone ","values_hash sort map ","values_hash sort ","values_hash [] ","defaults each "," define_method "," value_from_multiparameter_assignment ","value is_a? "," cast "," Time  public_send ","values_hash sort map! "," include ","values_hash sort map _hash sort map ","values_hash sort map! _hash sort map ","values_hash sort map _hash sort ","values_hash sort map! _hash sort ","values_hash sort map _hash [] ","values_hash sort map! _hash [] ","values_hash sort map _hash sort map! ","values_hash sort map! _hash sort map! "]}," ActiveModel Type Float cast_value":{"type":"method","name":"cast_value","children":[],"call":["value to_f "," Float INFINITY  -@ "]}," ActiveModel Type Float type":{"type":"method","name":"type","children":[],"call":[]}," ActiveModel Type DecimalWithoutScale type":{"type":"method","name":"type","children":[],"call":[]}," ActiveModel Type Decimal apply_scale":{"type":"method","name":"apply_scale","children":[],"call":["value round "," scale "]}," ActiveModel Type Decimal float_precision":{"type":"method","name":"float_precision","children":[],"call":[" precision to_i "," precision "," Float DIG  + "," precision to_i > "]}," ActiveModel Type Decimal convert_float_to_big_decimal":{"type":"method","name":"convert_float_to_big_decimal","children":[],"call":["value to_d "," BigDecimal "," float_precision "," apply_scale "," precision "]}," ActiveModel Type Decimal cast_value":{"type":"method","name":"cast_value","children":[],"call":[" apply_scale "," cast_value ","value to_s ","value to_d ","value respond_to? "," BigDecimal "," precision to_i "," precision "," convert_float_to_big_decimal ","casted_value round "," scale "]}," ActiveModel Type Decimal type_cast_for_schema":{"type":"method","name":"type_cast_for_schema","children":[],"call":["value to_s inspect ","value to_s "]}," ActiveModel Type Decimal type":{"type":"method","name":"type","children":[],"call":[]}," ActiveModel Type DateTime value_from_multiparameter_assignment":{"type":"method","name":"value_from_multiparameter_assignment","children":[],"call":[" raise ","values_hash key? ! ","values_hash key? ","(irange\n  (int 1)\n  (int 3)) detect ","missing_parameters any? ","(irange\n  (int 1)\n  (int 3)) select ","missing_parameters empty? ","(int 1) delete_if "]}," ActiveModel Type DateTime fallback_string_to_time":{"type":"method","name":"fallback_string_to_time","children":[],"call":[" new_time ","time_hash values_at ","time_hash []= "," microseconds "," Date  _parse "," Date  _parse  values_at "," Date  _parse  []= "]}," ActiveModel Type DateTime microseconds":{"type":"method","name":"microseconds","children":[],"call":["(send\n  (send\n    (lvar :time) :[]\n    (sym :sec_fraction)) :*\n  (int 1000000)) to_i ","time [] * ","time [] "]}," ActiveModel Type DateTime cast_value":{"type":"method","name":"cast_value","children":[],"call":[" fallback_string_to_time "," fast_string_to_time ","value empty? "," apply_seconds_precision ","value is_a? "]}," ActiveModel Type DateTime type":{"type":"method","name":"type","children":[],"call":[]}," ActiveModel Type Date value_from_multiparameter_assignment":{"type":"method","name":"value_from_multiparameter_assignment","children":[],"call":["time to_date "," new_date ","time mday ","time mon ","time year "]}," ActiveModel Type Date new_date":{"type":"method","name":"new_date","children":[],"call":[" Date  new ","year != ","mday == ","mon == ","year == ","year nil? "]}," ActiveModel Type Date fallback_string_to_date":{"type":"method","name":"fallback_string_to_date","children":[],"call":[" new_date "," Date  _parse values_at "," Date  _parse ","parts values_at "]}," ActiveModel Type Date fast_string_to_date":{"type":"method","name":"fast_string_to_date","children":[],"call":[" new_date ","3 to_i ","2 to_i ","1 to_i ","string =~ "]}," ActiveModel Type Date cast_value":{"type":"method","name":"cast_value","children":[],"call":["value to_date ","value respond_to? "," fallback_string_to_date "," fast_string_to_date ","value empty? ","value is_a? "]}," ActiveModel Type Date type_cast_for_schema":{"type":"method","name":"type_cast_for_schema","children":[],"call":["value to_s ","value to_s inspect ","value to_formatted_s inspect ","value to_formatted_s ","value to_fs inspect ","value to_fs "]}," ActiveModel Type Date type":{"type":"method","name":"type","children":[],"call":[]}," ActiveModel Type Boolean cast_value":{"type":"method","name":"cast_value","children":[],"call":["FALSE_VALUES  include? ! ","FALSE_VALUES  include? ","value == "]}," ActiveModel Type Boolean type":{"type":"method","name":"type","children":[],"call":[]}," ActiveModel Type Binary Data ==":{"type":"method","name":"==","children":[],"call":["other == "," to_s "]}," ActiveModel Type Binary Data hex":{"type":"method","name":"hex","children":[],"call":["@value unpack [] ","@value unpack ","@value unpack1 "]}," ActiveModel Type Binary Data to_s":{"type":"method","name":"to_s","children":[],"call":[]}," ActiveModel Type Binary Data initialize":{"type":"method","name":"initialize","children":[],"call":["value to_s ","value b ","value encoding == ","value encoding ","value b  to_s ","value to_s  to_s ","value b  b ","value to_s  b ","value b  encoding == ","value to_s  encoding == ","value b  encoding ","value to_s  encoding "]}," ActiveModel Type Binary changed_in_place?":{"type":"method","name":"changed_in_place?","children":[],"call":["old_value != "," deserialize "," deserialize  != "]}," ActiveModel Type Binary serialize":{"type":"method","name":"serialize","children":[],"call":["Data  new ","value nil? "]}," ActiveModel Type Binary cast":{"type":"method","name":"cast","children":[],"call":["value to_s ","value is_a? ","value b ","value encoding != ","value encoding "," String  === ","value b  to_s ","value b  is_a? ","value b  b ","value b  encoding != ","value b  encoding "]}," ActiveModel Type Binary binary?":{"type":"method","name":"binary?","children":[],"call":[]}," ActiveModel Type Binary type":{"type":"method","name":"type","children":[],"call":[]}," ActiveModel Type BigInteger max_value":{"type":"method","name":"max_value","children":[],"call":[]}," ActiveModel UnknownAttributeError initialize":{"type":"method","name":"initialize","children":[],"call":["@record class "]}," ActiveModel Errors apply_default_array":{"type":"method","name":"apply_default_array","children":[],"call":["hash default_proc= ","h []= "," proc "]}," ActiveModel Errors without_default_proc":{"type":"method","name":"without_default_proc","children":[],"call":["new_h default_proc= ","hash dup tap ","hash dup "]}," ActiveModel Errors normalize_detail":{"type":"method","name":"normalize_detail","children":[],"call":["(pair\n  (sym :error)\n  (lvar :message)) merge ","options except ","CALLBACKS_OPTIONS  + "]}," ActiveModel Errors marshal_load":{"type":"method","name":"marshal_load","children":[],"call":[" apply_default_array "," add_from_legacy_details_hash ","array [] "]}," ActiveModel Errors marshal_dump":{"type":"method","name":"marshal_dump","children":[],"call":[" without_default_proc "]}," ActiveModel Errors copy!":{"type":"method","name":"copy!","children":[],"call":["other details dup ","other details ","other messages dup ","other messages ","error instance_variable_set ","@errors each ","other errors deep_dup ","other errors ","other errors deep_dup  each "]}," ActiveModel Dirty attribute_previous_change":{"type":"method","name":"attribute_previous_change","children":[],"call":[" previous_changes [] "," previous_changes "," attribute_previously_changed? "," mutations_before_last_save change_to_attribute "," mutations_before_last_save ","attr_name to_s "]}," ActiveModel Dirty previous_changes_include?":{"type":"method","name":"previous_changes_include?","children":[],"call":[" previous_changes include? "," previous_changes "]}," ActiveModel Dirty attribute_previously_changed?":{"type":"method","name":"attribute_previously_changed?","children":[],"call":[" previous_changes_include? "," mutations_before_last_save changed? "," mutations_before_last_save ","attr_name to_s "]}," ActiveModel AttributeMethods matched_attribute_method":{"type":"method","name":"matched_attribute_method","children":[],"call":[" attribute_method? ","match attr_name ","matches detect "," class send "," class "," class send  detect "]}," ActiveModel AttributeAssignment _assign_attribute":{"type":"method","name":"_assign_attribute","children":[],"call":[" raise ","UnknownAttributeError  new "," public_send "," respond_to? ","k to_s "]}," ActiveModel AttributeAssignment _assign_attributes":{"type":"method","name":"_assign_attributes","children":[],"call":[" _assign_attribute ","attributes each "]}," ActiveModel AttributeAssignment assign_attributes":{"type":"method","name":"assign_attributes","children":[],"call":[" _assign_attributes "," sanitize_for_mass_assignment ","new_attributes stringify_keys ","new_attributes empty? ","new_attributes nil? "," raise ","new_attributes respond_to? ! ","new_attributes respond_to? ","new_attributes class "," _assign_new_attributes stringify_keys  ","new_new_attributes stringify_keys  stringify_keys ","new_new_attributes stringify_keys  empty? ","new_new_attributes stringify_keys  nil? ","new_new_attributes stringify_keys  respond_to? ! ","new_new_attributes stringify_keys  respond_to? ","new_new_attributes stringify_keys  class "]}," ActiveModel EachValidator should_validate?":{"type":"method","name":"should_validate?","children":[],"call":["record marked_for_destruction? ","record changed? ","record persisted? ! ","record persisted? "]}," ActiveModel Type Date serialize":{"type":"method","name":"serialize","children":[],"call":[" cast "]}," ActiveModel Errors init_with":{"type":"method","name":"init_with","children":[],"call":[" apply_default_array "," instance_variable_set ","coder map each ","coder map "," add_from_legacy_details_hash ","data [] ","data key? ","LEGACY_ATTRIBUTES  include? ","k to_sym ","data each ","coder map  [] ","coder map  key? ","coder map  each "]}," ActiveModel Type Float type_cast_for_schema":{"type":"method","name":"type_cast_for_schema","children":[],"call":[" Float INFINITY  -@ ","value try "]}," ActiveModel Type Value force_equality?":{"type":"method","name":"force_equality?","children":[],"call":[]}," ActiveModel Type default_value":{"type":"method","name":"default_value","children":[],"call":["Value  new "]}," ActiveModel Type Value value_constructed_by_mass_assignment?":{"type":"method","name":"value_constructed_by_mass_assignment?","children":[],"call":[]}," ActiveModel Type DateTime serialize":{"type":"method","name":"serialize","children":[],"call":[" cast "]}," ActiveModel Errors merge!":{"type":"method","name":"merge!","children":[],"call":["ary1 + ","@details merge! ","other details ","@messages merge! ","other messages "," import ","other errors each ","other errors "," errors "," equal? "]}," ActiveModel Dirty attributes_changed_by_setter":{"type":"method","name":"attributes_changed_by_setter","children":[],"call":["ActiveSupport HashWithIndifferentAccess  new "]}," ActiveModel Dirty clear_changed_attributes_cache":{"type":"method","name":"clear_changed_attributes_cache","children":[],"call":[" remove_instance_variable "]}," ActiveModel Dirty cache_changed_attributes":{"type":"method","name":"cache_changed_attributes","children":[],"call":[" clear_changed_attributes_cache "," changed_attributes "]}," ActiveModel Dirty mutations_before_last_save":{"type":"method","name":"mutations_before_last_save","children":[],"call":["ActiveModel NullMutationTracker  instance "]}," ActiveModel Dirty forget_attribute_assignments":{"type":"method","name":"forget_attribute_assignments","children":[],"call":["@attributes map ","@attributes map  map "]}," ActiveModel Dirty mutations_from_database":{"type":"method","name":"mutations_from_database","children":[],"call":["NullMutationTracker  instance ","ActiveModel AttributeMutationTracker  new ","AttributeSet  new ","h []= ","Attribute  with_cast_value ","Type  default_value "," _clone_attribute ","Hash  new ","ActiveModel ForcedMutationTracker  new "]}," ActiveModel Dirty clear_attribute_change":{"type":"method","name":"clear_attribute_change","children":[],"call":[" mutations_from_database forget_change "," mutations_from_database ","attr_name to_s "]}," ActiveModel Dirty attribute_changed_in_place?":{"type":"method","name":"attribute_changed_in_place?","children":[],"call":[" mutations_from_database changed_in_place? "," mutations_from_database ","attr_name to_s "]}," ActiveModel Dirty initialize_dup":{"type":"method","name":"initialize_dup","children":[],"call":["attr with_value_from_user ","@attributes fetch_value ","attr name "," class _default_attributes map "," class _default_attributes "," class "," class respond_to? "]}," ActiveModel AttributeMethods set_name_cache":{"type":"method","name":"set_name_cache","children":[],"call":[]}," ActiveModel Attributes attribute=":{"type":"method","name":"attribute=","children":[],"call":[" write_attribute "]}," ActiveModel Attributes attribute":{"type":"method","name":"attribute","children":[],"call":["@attributes fetch_value ","attr_name to_s "," class attribute_alias to_s "," class attribute_alias "," class "," class attribute_alias? "," class attribute_aliases [] "," class attribute_aliases ","attr_attr_name to_s  to_s ","attr_ class attribute_alias to_s  to_s "]}," ActiveModel Attributes write_attribute":{"type":"method","name":"write_attribute","children":[],"call":["@attributes write_from_user ","attr_name to_s "," class attribute_alias to_s "," class attribute_alias "," class "," class attribute_alias? "," class attribute_aliases [] "," class attribute_aliases ","attr_attr_name to_s  to_s ","attr_ class attribute_alias to_s  to_s "]}," ActiveModel Attributes attributes":{"type":"method","name":"attributes","children":[],"call":["@attributes to_hash "]}," ActiveModel Attributes initialize":{"type":"method","name":"initialize","children":[],"call":[" class _default_attributes deep_dup "," class _default_attributes "," class "]}," ActiveModel Attributes ClassMethods define_default_attribute":{"type":"method","name":"define_default_attribute","children":[],"call":[" _default_attributes []= "," _default_attributes ","Attribute UserProvidedDefault  new "," _default_attributes fetch ","name to_s "," _default_attributes [] with_type "," _default_attributes [] ","value == "," _default_attributes= "," _default_attributes deep_dup "," _Attribute UserProvidedDefault  new s []= "," _ _default_attributes [] with_type s []= "," _Attribute UserProvidedDefault  new s "," _ _default_attributes [] with_type s "," _Attribute UserProvidedDefault  new s fetch "," _ _default_attributes [] with_type s fetch "," _Attribute UserProvidedDefault  new s [] with_type "," _ _default_attributes [] with_type s [] with_type "," _Attribute UserProvidedDefault  new s [] "," _ _default_attributes [] with_type s [] "," _Attribute UserProvidedDefault  new s= "," _ _default_attributes [] with_type s= "," _Attribute UserProvidedDefault  new s deep_dup "," _ _default_attributes [] with_type s deep_dup "]}," ActiveModel Attributes ClassMethods define_method_attribute=":{"type":"method","name":"define_method_attribute=","children":[],"call":[" generated_attribute_methods module_eval ","35 + ","(send\n  (lvar :name) :+\n  (str \"=\")) inspect ","name + "," generated_attribute_methods ","ActiveModel AttributeMethods AttrNames  set_name_cache ","name unpack first ","name unpack ","h* freeze ","36 + ","50 + ","ActiveModel AttributeMethods AttrNames  define_attribute_accessor_method ","49 + ","owner << << << ","owner << << ","owner << ","batch << << << ","batch << << ","batch << ","owner define_cached_method "]}," ActiveModel Attributes ClassMethods attribute":{"type":"method","name":"attribute","children":[],"call":[" define_attribute_method "," define_default_attribute ","options fetch "," attribute_types= "," attribute_types merge "," attribute_types ","ActiveModel Type  lookup ","options except ","type is_a? ","name to_s "," define_attribute_methods "," attribute_types [] ","Type  lookup ","Symbol  === "," attribute_ActiveModel Type  lookup s= "," attribute_ActiveModel Type  lookup s merge "," attribute_ActiveModel Type  lookup s ","ActiveModel Type  lookup  is_a? ","name to_s  to_s "," attribute_ActiveModel Type  lookup s [] "]}," ActiveModel AttributeSet initialized_attributes":{"type":"method","name":"initialized_attributes","children":[],"call":["attr initialized? "," attributes select "," attributes "]}," ActiveModel AttributeSet ==":{"type":"method","name":"==","children":[],"call":[" attributes == ","other attributes "," attributes ","other send ","other is_a? "]}," ActiveModel AttributeSet map":{"type":"method","name":"map","children":[],"call":["AttributeSet  new "," attributes transform_values "," attributes "]}," ActiveModel AttributeSet accessed":{"type":"method","name":"accessed","children":[],"call":["(send\n  (send nil :attributes) :select) keys ","attr has_been_read? "," attributes select "," attributes "," [] has_been_read? "," [] "," attributes each_key select "," attributes each_key "]}," ActiveModel AttributeSet reset":{"type":"method","name":"reset","children":[],"call":[" write_from_database "," key? "]}," ActiveModel AttributeSet initialize_clone":{"type":"method","name":"initialize_clone","children":[],"call":[" attributes clone "," attributes ","@attributes clone "," attributes clone  clone ","@attributes clone  clone "]}," ActiveModel AttributeSet initialize_dup":{"type":"method","name":"initialize_dup","children":[],"call":[" attributes dup "," attributes ","@attributes dup "," attributes dup  dup ","@attributes dup  dup "]}," ActiveModel AttributeSet deep_dup":{"type":"method","name":"deep_dup","children":[],"call":["copy instance_variable_set "," attributes deep_dup "," attributes "," class allocate tap "," class allocate "," class ","AttributeSet  new "]}," ActiveModel AttributeSet freeze":{"type":"method","name":"freeze","children":[],"call":["@attributes freeze "," attributes freeze "," attributes "]}," ActiveModel AttributeSet write_cast_value":{"type":"method","name":"write_cast_value","children":[],"call":[" attributes []= "," [] with_cast_value "," [] "," attributes ","@attributes []= "]}," ActiveModel AttributeSet write_from_user":{"type":"method","name":"write_from_user","children":[],"call":[" attributes []= "," [] with_value_from_user "," [] "," attributes ","@attributes []= "," raise "," frozen? "]}," ActiveModel AttributeSet write_from_database":{"type":"method","name":"write_from_database","children":[],"call":[" attributes []= "," [] with_value_from_database "," [] "," attributes ","@attributes []= "]}," ActiveModel AttributeSet fetch_value":{"type":"method","name":"fetch_value","children":[],"call":[" block_given? "," [] value "," [] "]}," ActiveModel AttributeSet keys":{"type":"method","name":"keys","children":[],"call":[" [] initialized? "," [] "," attributes each_key select "," attributes each_key "," attributes "]}," ActiveModel AttributeSet key?":{"type":"method","name":"key?","children":[],"call":[" [] initialized? "," [] "," attributes key? "," attributes "]}," ActiveModel AttributeSet to_hash":{"type":"method","name":"to_hash","children":[],"call":[" initialized_attributes transform_values "," initialized_attributes "," [] value "," [] "," keys index_with "," keys "]}," ActiveModel AttributeSet values_before_type_cast":{"type":"method","name":"values_before_type_cast","children":[],"call":[" attributes transform_values "," attributes "]}," ActiveModel AttributeSet []=":{"type":"method","name":"[]=","children":[],"call":[" attributes []= "," attributes ","@attributes []= "]}," ActiveModel AttributeSet []":{"type":"method","name":"[]","children":[],"call":["Attribute  null "," attributes [] "," attributes "," default_attribute ","@attributes [] "]}," ActiveModel AttributeSet initialize":{"type":"method","name":"initialize","children":[],"call":[]}," ActiveModel AttributeSet YAMLEncoder decode":{"type":"method","name":"decode","children":[],"call":["AttributeSet  new ","Hash  [] ","attr name ","attr with_type "," default_types [] "," default_types ","attr type nil? ","attr type ","coder [] map ","coder [] ","attr with_type  name ","attr with_type  with_type ","attr with_type  type nil? ","attr with_type  type "]}," ActiveModel AttributeSet YAMLEncoder encode":{"type":"method","name":"encode","children":[],"call":["coder []= ","attr with_type ","attr type equal? "," default_types [] ","attr name "," default_types ","attr type ","attribute_set each_value map ","attribute_set each_value "]}," ActiveModel AttributeSet YAMLEncoder initialize":{"type":"method","name":"initialize","children":[],"call":[]}," ActiveModel LazyAttributeHash assign_default_value":{"type":"method","name":"assign_default_value","children":[],"call":[" delegate_hash []= ","Attribute  uninitialized "," delegate_hash ","attr dup "," default_attributes [] "," default_attributes "," types key? "," types ","Attribute  from_database "," values fetch "," values "," additional_types fetch "," types [] "," additional_types "," default call "," default "," default_attributes []  dup "," default_ default_attributes [] ibutes [] "," default_ default_attributes [] ibutes ","  additional_types fetch s key? ","  additional_types fetch s "," additional_ additional_types fetch s fetch ","  additional_types fetch s [] "," additional_ additional_types fetch s "]}," ActiveModel LazyAttributeHash materialize":{"type":"method","name":"materialize","children":[],"call":[" delegate_hash "," frozen? "," [] "," types each_key "," types "," values each_key "," values "]}," ActiveModel LazyAttributeHash marshal_load":{"type":"method","name":"marshal_load","children":[],"call":[" initialize "," freeze ","values is_a? ","ActiveSupport Deprecation  warn "]}," ActiveModel LazyAttributeHash marshal_dump":{"type":"method","name":"marshal_dump","children":[],"call":[" materialize "]}," ActiveModel LazyAttributeHash ==":{"type":"method","name":"==","children":[],"call":[" materialize == "," materialize ","other materialize ","other is_a? "]}," ActiveModel LazyAttributeHash select":{"type":"method","name":"select","children":[],"call":["hash []= "," [] ","keys each_with_object "," types keys | | "," delegate_hash keys "," delegate_hash "," types keys | "," values keys "," values "," types keys "," types "," types keys | |  each_with_object "," types  types keys | |  | | "," delegate_hash  types keys | |  "," types  types keys | |  | "," values  types keys | |  "," types  types keys | |  "]}," ActiveModel LazyAttributeHash initialize_dup":{"type":"method","name":"initialize_dup","children":[],"call":["Hash  [] "," delegate_hash "]}," ActiveModel LazyAttributeHash deep_dup":{"type":"method","name":"deep_dup","children":[],"call":["copy instance_variable_set "," delegate_hash transform_values "," delegate_hash "," dup tap "," dup "]}," ActiveModel LazyAttributeHash []=":{"type":"method","name":"[]=","children":[],"call":[" delegate_hash []= "," delegate_hash "," raise "," frozen? "]}," ActiveModel LazyAttributeHash []":{"type":"method","name":"[]","children":[],"call":[" assign_default_value "," delegate_hash [] "," delegate_hash "]}," ActiveModel LazyAttributeHash key?":{"type":"method","name":"key?","children":[],"call":[" types key? "," types "," values key? "," values "," delegate_hash key? "," delegate_hash "]}," ActiveModel LazyAttributeHash initialize":{"type":"method","name":"initialize","children":[],"call":[" proc "]}," ActiveModel AttributeSet Builder build_from_database":{"type":"method","name":"build_from_database","children":[],"call":["AttributeSet  new ","LazyAttributeHash  new "," default_attributes "," types "," default ","values []= "," always_initialized ","values key? ! ","values key? ","LazyAttributeSet  new "," default_LazyAttributeHash  new  "]}," ActiveModel AttributeSet Builder initialize":{"type":"method","name":"initialize","children":[],"call":[]}," ActiveModel NullMutationTracker force_change":{"type":"method","name":"force_change","children":[],"call":[]}," ActiveModel NullMutationTracker original_value":{"type":"method","name":"original_value","children":[],"call":[]}," ActiveModel NullMutationTracker forget_change":{"type":"method","name":"forget_change","children":[],"call":[]}," ActiveModel NullMutationTracker changed_in_place?":{"type":"method","name":"changed_in_place?","children":[],"call":[]}," ActiveModel NullMutationTracker changed?":{"type":"method","name":"changed?","children":[],"call":[]}," ActiveModel NullMutationTracker any_changes?":{"type":"method","name":"any_changes?","children":[],"call":[]}," ActiveModel NullMutationTracker change_to_attribute":{"type":"method","name":"change_to_attribute","children":[],"call":[]}," ActiveModel NullMutationTracker changes":{"type":"method","name":"changes","children":[],"call":[]}," ActiveModel NullMutationTracker changed_values":{"type":"method","name":"changed_values","children":[],"call":[]}," ActiveModel AttributeMutationTracker attr_names":{"type":"method","name":"attr_names","children":[],"call":[" attributes keys "," attributes "]}," ActiveModel AttributeMutationTracker force_change":{"type":"method","name":"force_change","children":[],"call":[" forced_changes << ","attr_name to_s "," forced_changes "," forced_changes []= "," fetch_value "]}," ActiveModel AttributeMutationTracker original_value":{"type":"method","name":"original_value","children":[],"call":[" attributes [] original_value "," attributes [] ","attr_name to_s "," attributes "]}," ActiveModel AttributeMutationTracker forget_change":{"type":"method","name":"forget_change","children":[],"call":[" forced_changes delete "," forced_changes "," attributes []= "," attributes [] forgetting_assignment "," attributes [] "," attributes ","attr_name to_s ","attr_name to_s  to_s "]}," ActiveModel AttributeMutationTracker changed_in_place?":{"type":"method","name":"changed_in_place?","children":[],"call":[" attributes [] changed_in_place? "," attributes [] ","attr_name to_s "," attributes "]}," ActiveModel AttributeMutationTracker changed?":{"type":"method","name":"changed?","children":[],"call":[" attributes [] value == "," attributes [] value "," attributes [] "," attributes ","OPTION_NOT_GIVEN  == "," attributes [] original_value == "," attributes [] original_value "," attributes [] changed? "," forced_changes include? "," forced_changes ","attr_name to_s "," fetch_value == "," fetch_value "," original_value == "," original_value "," attribute_changed? "," type_cast ","attr_name to_s  to_s "]}," ActiveModel AttributeMutationTracker any_changes?":{"type":"method","name":"any_changes?","children":[],"call":[" changed? "," attr_names any? "," attr_names "]}," ActiveModel AttributeMutationTracker change_to_attribute":{"type":"method","name":"change_to_attribute","children":[],"call":[" attributes fetch_value "," attributes "," attributes [] original_value "," attributes [] "," changed? ","attr_name to_s "," fetch_value "," original_value ","attr_name to_s  to_s "]}," ActiveModel AttributeMutationTracker changes":{"type":"method","name":"changes","children":[],"call":["result []= "," change_to_attribute "," attr_names each_with_object "," with_indifferent_access "," attr_names ","result merge! ","  change_to_attribute _to_attribute "]}," ActiveModel AttributeMutationTracker changed_values":{"type":"method","name":"changed_values","children":[],"call":["result []= "," attributes [] original_value "," attributes [] "," attributes "," changed? "," attr_names each_with_object "," with_indifferent_access "," attr_names "," original_value "]}," ActiveModel AttributeMutationTracker initialize":{"type":"method","name":"initialize","children":[],"call":["Set  new "]}," ActiveModel AttributeMethods _read_attribute":{"type":"method","name":"_read_attribute","children":[],"call":[" __send__ "]}," ActiveModel Attribute Uninitialized with_type":{"type":"method","name":"with_type","children":[],"call":[" class new "," name "," class "]}," ActiveModel Attribute Uninitialized forgetting_assignment":{"type":"method","name":"forgetting_assignment","children":[],"call":[" dup "]}," ActiveModel Attribute Uninitialized initialized?":{"type":"method","name":"initialized?","children":[],"call":[]}," ActiveModel Attribute Uninitialized value_for_database":{"type":"method","name":"value_for_database","children":[],"call":[]}," ActiveModel Attribute Uninitialized original_value":{"type":"method","name":"original_value","children":[],"call":[]}," ActiveModel Attribute Uninitialized value":{"type":"method","name":"value","children":[],"call":[" name "," block_given? "]}," ActiveModel Attribute Uninitialized initialize":{"type":"method","name":"initialize","children":[],"call":[]}," ActiveModel Attribute Null with_value_from_database":{"type":"method","name":"with_value_from_database","children":[],"call":[" raise "," name "]}," ActiveModel Attribute Null with_type":{"type":"method","name":"with_type","children":[],"call":[" class with_cast_value "," name "," class "]}," ActiveModel Attribute Null type_cast":{"type":"method","name":"type_cast","children":[],"call":[]}," ActiveModel Attribute Null initialize":{"type":"method","name":"initialize","children":[],"call":["Type  default_value "]}," ActiveModel Attribute WithCastValue changed_in_place?":{"type":"method","name":"changed_in_place?","children":[],"call":[]}," ActiveModel Attribute WithCastValue type_cast":{"type":"method","name":"type_cast","children":[],"call":[]}," ActiveModel Attribute FromUser came_from_user?":{"type":"method","name":"came_from_user?","children":[],"call":[" type value_constructed_by_mass_assignment? ! "," type value_constructed_by_mass_assignment? "," value_before_type_cast "," type "]}," ActiveModel Attribute FromUser type_cast":{"type":"method","name":"type_cast","children":[],"call":[" type cast "," type "]}," ActiveModel Attribute FromDatabase _original_value_for_database":{"type":"method","name":"_original_value_for_database","children":[],"call":[" value_before_type_cast "]}," ActiveModel Attribute FromDatabase type_cast":{"type":"method","name":"type_cast","children":[],"call":[" type deserialize "," type "]}," ActiveModel Attribute _original_value_for_database":{"type":"method","name":"_original_value_for_database","children":[],"call":[" type serialize "," original_value "," type "]}," ActiveModel Attribute changed_from_assignment?":{"type":"method","name":"changed_from_assignment?","children":[],"call":[" type changed? "," value_before_type_cast "," value "," original_value "," type "," assigned? "]}," ActiveModel Attribute initialize_dup":{"type":"method","name":"initialize_dup","children":[],"call":["@value dup ","@value duplicable? ","@value dup  dup ","@value dup  duplicable? "]}," ActiveModel Attribute original_value_for_database":{"type":"method","name":"original_value_for_database","children":[],"call":[" _original_value_for_database "," original_attribute original_value_for_database "," original_attribute "," assigned? "]}," ActiveModel Attribute encode_with":{"type":"method","name":"encode_with","children":[],"call":["coder []= "," value "," original_attribute "," type "," value_before_type_cast "," value_before_type_cast nil? "," name "]}," ActiveModel Attribute init_with":{"type":"method","name":"init_with","children":[],"call":["coder [] ","coder map key? ","coder map "]}," ActiveModel Attribute hash":{"type":"method","name":"hash","children":[],"call":["(send\n  (self) :class) hash "," type "," value_before_type_cast "," name "," class "]}," ActiveModel Attribute ==":{"type":"method","name":"==","children":[],"call":[" type == ","other type "," type "," value_before_type_cast == ","other value_before_type_cast "," value_before_type_cast "," name == ","other name "," name "," class == ","other class "," class "]}," ActiveModel Attribute has_been_read?":{"type":"method","name":"has_been_read?","children":[],"call":[]}," ActiveModel Attribute came_from_user?":{"type":"method","name":"came_from_user?","children":[],"call":[]}," ActiveModel Attribute initialized?":{"type":"method","name":"initialized?","children":[],"call":[]}," ActiveModel Attribute type_cast":{"type":"method","name":"type_cast","children":[],"call":[" raise "]}," ActiveModel Attribute with_type":{"type":"method","name":"with_type","children":[],"call":[" class new "," original_attribute "," value_before_type_cast "," name "," class "," with_value_from_user with_type "," with_value_from_user "," value "," changed_in_place? "]}," ActiveModel Attribute with_cast_value":{"type":"method","name":"with_cast_value","children":[],"call":[" class with_cast_value "," type "," name "," class ","WithCastValue  new "]}," ActiveModel Attribute with_value_from_database":{"type":"method","name":"with_value_from_database","children":[],"call":[" class from_database "," type "," name "," class "]}," ActiveModel Attribute with_value_from_user":{"type":"method","name":"with_value_from_user","children":[],"call":[" class from_user "," original_attribute "," type "," name "," class "," type assert_valid_value "]}," ActiveModel Attribute forgetting_assignment":{"type":"method","name":"forgetting_assignment","children":[],"call":[" with_value_from_database "," value_for_database "]}," ActiveModel Attribute changed_in_place?":{"type":"method","name":"changed_in_place?","children":[],"call":[" type changed_in_place? "," value "," original_value_for_database "," type "," has_been_read? "]}," ActiveModel Attribute changed?":{"type":"method","name":"changed?","children":[],"call":[" changed_in_place? "," changed_from_assignment? "]}," ActiveModel Attribute value_for_database":{"type":"method","name":"value_for_database","children":[],"call":[" type serialize "," value "," type "," _value_for_database "," type changed_in_place? ","(ivar :@value_for_database) ! ","(ivar : _value_for_database ) ! "]}," ActiveModel Attribute original_value":{"type":"method","name":"original_value","children":[],"call":[" type_cast "," value_before_type_cast "," original_attribute original_value "," original_attribute "," assigned? "]}," ActiveModel Attribute value":{"type":"method","name":"value","children":[],"call":[" type_cast "," value_before_type_cast "]}," ActiveModel Attribute initialize":{"type":"method","name":"initialize","children":[],"call":["value nil? "]}," ActiveModel Attribute uninitialized":{"type":"method","name":"uninitialized","children":[],"call":["Uninitialized  new "]}," ActiveModel Attribute null":{"type":"method","name":"null","children":[],"call":["Null  new "]}," ActiveModel Attribute from_user":{"type":"method","name":"from_user","children":[],"call":["FromUser  new "]}," ActiveModel Attribute from_database":{"type":"method","name":"from_database","children":[],"call":["FromDatabase  new "]}," ActiveModel Attribute UserProvidedDefault marshal_load":{"type":"method","name":"marshal_load","children":[],"call":["values length == ","values length "]}," ActiveModel Attribute UserProvidedDefault marshal_dump":{"type":"method","name":"marshal_dump","children":[],"call":["result << "," value "," original_attribute "," type "," value_before_type_cast "," name "]}," ActiveModel Attribute UserProvidedDefault with_type":{"type":"method","name":"with_type","children":[],"call":[" class new "," original_attribute "," user_provided_value "," name "," class "]}," ActiveModel Attribute UserProvidedDefault value_before_type_cast":{"type":"method","name":"value_before_type_cast","children":[],"call":[" user_provided_value call "," user_provided_value "," user_provided_value is_a? "]}," ActiveModel Attribute UserProvidedDefault initialize":{"type":"method","name":"initialize","children":[],"call":[]}," ActiveModel Dirty _clone_attribute":{"type":"method","name":"_clone_attribute","children":[],"call":["value clone ","value duplicable? "," _read_attribute "," _read_attribute  clone "," _read_attribute  duplicable? "]}," ActiveModel Dirty _prepare_changes":{"type":"method","name":"_prepare_changes","children":[],"call":["@attributes write_from_user "," _read_attribute "," changed each "," changed "]}," ActiveModel AttributeMutationTracker changed_attribute_names":{"type":"method","name":"changed_attribute_names","children":[],"call":[" changed? "," attr_names select "," attr_names "]}," ActiveModel Type Boolean serialize":{"type":"method","name":"serialize","children":[],"call":[" cast "]}," ActiveModel NullMutationTracker changed_attribute_names":{"type":"method","name":"changed_attribute_names","children":[],"call":[]}," ActiveModel Validations NumericalityValidator is_hexadecimal_literal?":{"type":"method","name":"is_hexadecimal_literal?","children":[],"call":["(str \"\\\\A0[xX]\") === ","raw_value to_s ","(str \"\\\\A0[xX]\") match? ","HEXADECIMAL_REGEX  match? "]}," ActiveModel Validations NumericalityValidator parse_as_number":{"type":"method","name":"parse_as_number","children":[],"call":["Kernel  Float to_d ","Kernel  Float "," is_hexadecimal_literal? ! "," is_hexadecimal_literal? ","raw_value to_i "," is_integer? ","raw_value is_a? ","raw_value to_d "," BigDecimal "," is_decimal? "," parse_float "," round "]}," ActiveModel Type Time serialize":{"type":"method","name":"serialize","children":[],"call":[" cast "]}," ActiveModel Type Helpers Timezone default_timezone":{"type":"method","name":"default_timezone","children":[],"call":[" is_utc? "]}," ActiveModel Type Helpers Timezone is_utc?":{"type":"method","name":"is_utc?","children":[],"call":[" Time  zone_default =~ "," Time  zone_default "," Time  zone_default nil? "," Time  zone_default match? "]}," ActiveModel Type Helpers Numeric serialize":{"type":"method","name":"serialize","children":[],"call":[" cast "]}," ActiveModel SecurePassword InstanceMethodsOnActivation initialize":{"type":"method","name":"initialize","children":[],"call":[" alias_method ","attribute == ","BCrypt Password  new is_password? ","BCrypt Password  new "," send "," define_method "," instance_variable_set ","BCrypt Password  create ","BCrypt Engine  cost ","ActiveModel SecurePassword  min_cost ","unencrypted_password empty? ! ","unencrypted_password empty? ","unencrypted_password nil? "," attr_reader "," public_send ","attribute_digest present? ","BCrypt Password  new salt "," attr_accessor ","BCrypt Engine  BCrypt Engine  cost  ","ActiveModel SecurePassword  min_BCrypt Engine  cost  "," send  present? "," public_send  present? "]}," ActiveModel Errors of_kind?":{"type":"method","name":"of_kind?","children":[],"call":[" [] include? "," [] ","(send\n  (send\n    (send nil :details) :[]\n    (send\n      (lvar :attribute) :to_sym)) :map) include? ","e [] "," details [] map "," details [] ","attribute to_sym "," details ","message is_a? ","message call ","message respond_to? "," messages_for include? "," messages_for "," where empty? ! "," where empty? "," where ","type is_a? "," normalize_arguments ","message call  is_a? ","message call  call ","message call  respond_to? "," message call s_for include? "," message call s_for "]}," ActiveModel Errors slice!":{"type":"method","name":"slice!","children":[],"call":["@messages slice! ","@details slice! ","keys map ","keys include? ","error attribute ","@errors keep_if "," messages dup slice! "," messages dup "," messages "," deprecation_removal_warning ","keys map  map ","keys map  include? "]}," ActiveModel Attributes attribute_names":{"type":"method","name":"attribute_names","children":[],"call":["@attributes keys "]}," ActiveModel Attributes ClassMethods attribute_names":{"type":"method","name":"attribute_names","children":[],"call":[" attribute_types keys "," attribute_types "]}," ActiveModel ForcedMutationTracker clone_value":{"type":"method","name":"clone_value","children":[],"call":["value clone ","value duplicable? "," fetch_value "," fetch_value  clone "," fetch_value  duplicable? "," fetch_ fetch_value  "]}," ActiveModel ForcedMutationTracker fetch_value":{"type":"method","name":"fetch_value","children":[],"call":[" attributes send "," attributes "]}," ActiveModel ForcedMutationTracker attribute_changed?":{"type":"method","name":"attribute_changed?","children":[],"call":[" forced_changes include? "," forced_changes "]}," ActiveModel ForcedMutationTracker attr_names":{"type":"method","name":"attr_names","children":[],"call":[" forced_changes keys "," forced_changes "]}," ActiveModel ForcedMutationTracker finalize_changes":{"type":"method","name":"finalize_changes","children":[],"call":[" changes "]}," ActiveModel ForcedMutationTracker force_change":{"type":"method","name":"force_change","children":[],"call":[" forced_changes []= "," clone_value "," forced_changes "," attribute_changed? "]}," ActiveModel ForcedMutationTracker original_value":{"type":"method","name":"original_value","children":[],"call":[" fetch_value "," forced_changes [] "," forced_changes "," changed? "]}," ActiveModel ForcedMutationTracker forget_change":{"type":"method","name":"forget_change","children":[],"call":[" forced_changes delete "," forced_changes "]}," ActiveModel ForcedMutationTracker change_to_attribute":{"type":"method","name":"change_to_attribute","children":[],"call":[" finalized_changes [] dup "," finalized_changes [] "," finalized_changes "]}," ActiveModel ForcedMutationTracker changed_in_place?":{"type":"method","name":"changed_in_place?","children":[],"call":[]}," ActiveModel ForcedMutationTracker initialize":{"type":"method","name":"initialize","children":[],"call":[]}," ActiveModel AttributeMutationTracker fetch_value":{"type":"method","name":"fetch_value","children":[],"call":[" attributes fetch_value "," attributes "]}," ActiveModel AttributeMutationTracker attribute_changed?":{"type":"method","name":"attribute_changed?","children":[],"call":[" attributes [] changed? ! ! "," attributes [] changed? ! "," attributes [] changed? "," attributes [] "," attributes "," forced_changes include? "," forced_changes "]}," ActiveModel AttributeMethods AttrNames define_attribute_accessor_method":{"type":"method","name":"define_attribute_accessor_method","children":[],"call":[]}," ActiveModel Validations NumericalityValidator is_decimal?":{"type":"method","name":"is_decimal?","children":[],"call":["DECIMAL_REGEX  match? ","raw_value to_s "]}," ActiveModel Type Decimal serialize":{"type":"method","name":"serialize","children":[],"call":[" cast "]}," ActiveModel Validations AcceptanceValidator LazilyDefineAttributes ==":{"type":"method","name":"==","children":[],"call":[" attributes == ","other attributes "," attributes "," class == ","other class "," class "]}," ActiveModel Validations AcceptanceValidator LazilyDefineAttributes define_on":{"type":"method","name":"define_on","children":[],"call":[" remove_method "," attr_writer "," attr_reader ","klass attribute_method? "," attributes reject "," attributes "]}," ActiveModel Validations AcceptanceValidator LazilyDefineAttributes matches?":{"type":"method","name":"matches?","children":[],"call":["name == "," attributes any? "," attributes ","method_name to_s chomp ","method_name to_s "]}," ActiveModel Validations AcceptanceValidator LazilyDefineAttributes included":{"type":"method","name":"included","children":[],"call":[" send ","mod matches? ","mod define_on "," define_method ","Mutex  new "]}," ActiveModel EachValidator prepare_value_for_validation":{"type":"method","name":"prepare_value_for_validation","children":[],"call":[]}," ActiveModel Validations NumericalityValidator prepare_value_for_validation":{"type":"method","name":"prepare_value_for_validation","children":[],"call":["record public_send ","record respond_to? ","record read_attribute "," record_attribute_changed_in_place? "]}," ActiveModel Validations NumericalityValidator parse_float":{"type":"method","name":"parse_float","children":[],"call":["(if\n  (lvar :scale)\n  (send\n    (lvar :raw_value) :truncate\n    (lvar :scale))\n  (lvar :raw_value)) to_d ","raw_value truncate "," round to_d "," round "]}," ActiveModel Type Value serializable?":{"type":"method","name":"serializable?","children":[],"call":[]}," ActiveModel Type String to_immutable_string":{"type":"method","name":"to_immutable_string","children":[],"call":["ImmutableString  new "," scale "," precision "," limit "]}," ActiveModel Type Registry initialize_dup":{"type":"method","name":"initialize_dup","children":[],"call":["@registrations dup ","@registrations dup  dup "]}," ActiveModel Type Integer in_range?":{"type":"method","name":"in_range?","children":[],"call":[" range member? "," range ","value ! "]}," ActiveModel Type Integer serializable?":{"type":"method","name":"serializable?","children":[],"call":[" in_range? "," cast "," block_given? "]}," ActiveModel Type ImmutableString initialize":{"type":"method","name":"initialize","children":[],"call":["(or\n  (csend\n    (send\n      (lvar :args) :delete\n      (sym :false)) :to_s)\n  (str \"f\")) -@ ","args delete ","(or\n  (csend\n    (send\n      (lvar :args) :delete\n      (sym :true)) :to_s)\n  (str \"t\")) -@ "]}," ActiveModel Type Helpers AcceptsMultiparameterTime InstanceMethods value_constructed_by_mass_assignment?":{"type":"method","name":"value_constructed_by_mass_assignment?","children":[],"call":["value is_a? "]}," ActiveModel Type Helpers AcceptsMultiparameterTime InstanceMethods assert_valid_value":{"type":"method","name":"assert_valid_value","children":[],"call":[" value_from_multiparameter_assignment ","value is_a? "]}," ActiveModel Type Helpers AcceptsMultiparameterTime InstanceMethods cast":{"type":"method","name":"cast","children":[],"call":[" value_from_multiparameter_assignment ","value is_a? "]}," ActiveModel Type Helpers AcceptsMultiparameterTime InstanceMethods serialize":{"type":"method","name":"serialize","children":[],"call":[" cast "," serialize_cast_value "]}," ActiveModel Serialization serializable_attributes":{"type":"method","name":"serializable_attributes","children":[],"call":[" read_attribute_for_serialization ","attribute_names index_with "]}," ActiveModel NestedError initialize":{"type":"method","name":"initialize","children":[],"call":["inner_error options ","inner_error raw_type ","inner_error type ","override_options fetch ","inner_error attribute "]}," ActiveModel DeprecationHandlingDetailsHash initialize":{"type":"method","name":"initialize","children":[],"call":["details freeze ","details default= "]}," ActiveModel DeprecationHandlingMessageArray clear":{"type":"method","name":"clear","children":[],"call":["@errors delete ","ActiveSupport Deprecation  warn "]}," ActiveModel DeprecationHandlingMessageArray <<":{"type":"method","name":"<<","children":[],"call":[" __setobj__ ","@errors messages_for ","@errors add ","ActiveSupport Deprecation  warn "]}," ActiveModel DeprecationHandlingMessageArray initialize":{"type":"method","name":"initialize","children":[],"call":["content freeze "]}," ActiveModel DeprecationHandlingMessageHash prepare_content":{"type":"method","name":"prepare_content","children":[],"call":["content freeze ","content default_proc= ","hash [] "," __setobj__ ","hash freeze ","hash []= ","DeprecationHandlingMessageArray  new ","hash dup "," proc ","content []= ","content each ","@errors to_hash ","@errors to_hash  freeze ","@errors to_hash  default_proc= ","hash dup  [] ","hash dup  freeze ","hash dup  []= ","hash dup  dup ","@errors to_hash  []= ","@errors to_hash  each ","@errors to_hash dup  "]}," ActiveModel DeprecationHandlingMessageHash delete":{"type":"method","name":"delete","children":[],"call":["@errors delete ","ActiveSupport Deprecation  warn "]}," ActiveModel DeprecationHandlingMessageHash []=":{"type":"method","name":"[]=","children":[],"call":[" __setobj__ "," prepare_content ","@errors add "," Array each "," Array ","@errors delete ","ActiveSupport Deprecation  warn "]}," ActiveModel DeprecationHandlingMessageHash initialize":{"type":"method","name":"initialize","children":[],"call":[" prepare_content "]}," ActiveModel Errors deprecation_rename_warning":{"type":"method","name":"deprecation_rename_warning","children":[],"call":["ActiveSupport Deprecation  warn "]}," ActiveModel Errors deprecation_removal_warning":{"type":"method","name":"deprecation_removal_warning","children":[],"call":["ActiveSupport Deprecation  warn ","message << ","(str \"ActiveModel::Errors#\") +@ ","(str \"ActiveModel::Errors#\") +@  << "]}," ActiveModel Errors add_from_legacy_details_hash":{"type":"method","name":"add_from_legacy_details_hash","children":[],"call":[" add ","error delete ","errors each ","details each "]}," ActiveModel Errors normalize_arguments":{"type":"method","name":"normalize_arguments","children":[],"call":["attribute to_sym ","type call ","type respond_to? ","type call  call ","type call  respond_to? "]}," ActiveModel Errors messages_for":{"type":"method","name":"messages_for","children":[],"call":[" where map "," where "]}," ActiveModel Errors group_by_attribute":{"type":"method","name":"group_by_attribute","children":[],"call":["@errors group_by "]}," ActiveModel Errors details":{"type":"method","name":"details","children":[],"call":["DeprecationHandlingDetailsHash  new ","errors map "," group_by_attribute transform_values "," group_by_attribute ","hash freeze ","hash default= "]}," ActiveModel Errors messages":{"type":"method","name":"messages","children":[],"call":["DeprecationHandlingMessageHash  new ","hash freeze ","hash default= "," to_hash "," to_hash  freeze "," to_hash  default= "," to_ to_hash  "]}," ActiveModel Errors to_h":{"type":"method","name":"to_h","children":[],"call":["values last "," to_hash transform_values "," to_hash ","ActiveSupport Deprecation  warn "]}," ActiveModel Errors attribute_names":{"type":"method","name":"attribute_names","children":[],"call":["@errors map uniq freeze ","@errors map uniq ","@errors map "]}," ActiveModel Errors where":{"type":"method","name":"where","children":[],"call":["error match? ","@errors select "," normalize_arguments "]}," ActiveModel Errors import":{"type":"method","name":"import","children":[],"call":["@errors append ","NestedError  new ","override_options []= ","override_options [] to_sym ","override_options [] ","override_options key? ","(sym :attribute) each "]}," ActiveModel Error attributes_for_hash":{"type":"method","name":"attributes_for_hash","children":[],"call":["@options except "]}," ActiveModel Error inspect":{"type":"method","name":"inspect","children":[],"call":["@options inspect "," class name "," class "]}," ActiveModel Error hash":{"type":"method","name":"hash","children":[],"call":[" attributes_for_hash hash "," attributes_for_hash "]}," ActiveModel Error ==":{"type":"method","name":"==","children":[],"call":[" attributes_for_hash == ","other attributes_for_hash "," attributes_for_hash ","other is_a? "," class "]}," ActiveModel Error strict_match?":{"type":"method","name":"strict_match?","children":[],"call":["options == ","@options except ","CALLBACKS_OPTIONS  + "," match? "]}," ActiveModel Error match?":{"type":"method","name":"match?","children":[],"call":["@options [] != ","@options [] ","options each ","@type != ","@attribute != "]}," ActiveModel Error full_message":{"type":"method","name":"full_message","children":[],"call":[" class full_message "," message "," attribute "," class "]}," ActiveModel Error details":{"type":"method","name":"details","children":[],"call":["(pair\n  (sym :error)\n  (send nil :raw_type)) merge "," options except ","CALLBACKS_OPTIONS  + "," options "," raw_type "]}," ActiveModel Error message":{"type":"method","name":"message","children":[],"call":[" raw_type "," class generate_message "," options except "," options "," attribute "," class "]}," ActiveModel Error initialize_dup":{"type":"method","name":"initialize_dup","children":[],"call":["@options deep_dup ","@type dup ","@raw_type dup ","@attribute dup ","@options deep_dup  deep_dup ","@type dup  dup ","@raw_type dup  dup ","@attribute dup  dup "]}," ActiveModel Error initialize":{"type":"method","name":"initialize","children":[],"call":[]}," ActiveModel Error generate_message":{"type":"method","name":"generate_message","children":[],"call":[]}," ActiveModel Dirty attribute_previously_was":{"type":"method","name":"attribute_previously_was","children":[],"call":[" mutations_before_last_save original_value ","attr_name to_s "," mutations_before_last_save "]}," ActiveModel Attributes _write_attribute":{"type":"method","name":"_write_attribute","children":[],"call":["@attributes write_from_user "]}," ActiveModel Attributes freeze":{"type":"method","name":"freeze","children":[],"call":["@attributes clone freeze ","@attributes clone "," frozen? ","@attributes clone freeze  clone freeze ","@attributes clone freeze  clone "]}," ActiveModel Attributes initialize_dup":{"type":"method","name":"initialize_dup","children":[],"call":["@attributes deep_dup ","@attributes deep_dup  deep_dup "]}," ActiveModel AttributeSet default_attribute":{"type":"method","name":"default_attribute","children":[],"call":["Attribute  null "]}," ActiveModel LazyAttributeHash each_key":{"type":"method","name":"each_key","children":[],"call":["keys each "," types keys | | "," delegate_hash keys "," delegate_hash "," types keys | "," values keys "," values "," types keys "," types "," types keys | |  each "," types  types keys | |  | | "," delegate_hash  types keys | |  "," types  types keys | |  | "," values  types keys | |  "," types  types keys | |  "]}," ActiveModel LazyAttributeSet default_attribute":{"type":"method","name":"default_attribute","children":[],"call":["Attribute  null ","@attributes []= ","Attribute  uninitialized ","attr dup "," default_attributes [] "," default_attributes "," types key? "," types ","Attribute  from_database ","@casted_values [] "," additional_types fetch "," types [] "," additional_types ","@ default_attributes [] ibutes []= "," default_attributes []  dup "," default_ default_attributes [] ibutes [] "," default_ default_attributes [] ibutes ","  additional_types fetch s key? ","  additional_types fetch s "," additional_ additional_types fetch s fetch ","  additional_types fetch s [] "," additional_ additional_types fetch s "]}," ActiveModel LazyAttributeSet attributes":{"type":"method","name":"attributes","children":[],"call":[" [] "," types each_key "," types "," values each_key "," values "]}," ActiveModel LazyAttributeSet fetch_value":{"type":"method","name":"fetch_value","children":[],"call":["attr value "," default_attribute ","@casted_values []= ","type deserialize "," additional_types fetch "," types [] "," types "," additional_types "," values fetch "," values ","@casted_values fetch ","@attributes [] "," default_attribute  value ","@attributes []  value "," default_ default_attribute ibute "," default_@attributes [] ibute "," additional_types fetch  deserialize "," additional_ additional_types fetch s fetch ","  additional_types fetch s [] ","  additional_types fetch s "," additional_ additional_types fetch s ","@ default_attribute ibutes [] ","@@attributes [] ibutes [] "]}," ActiveModel LazyAttributeSet keys":{"type":"method","name":"keys","children":[],"call":[" [] initialized? "," [] ","keys keep_if "," values keys | | ","@attributes keys "," values keys | "," types keys "," types "," values keys "," values "," values keys | |  keep_if "," values  values keys | |  | | ","@attributes  values keys | |  "," values  values keys | |  | "," types  values keys | |  "," values  values keys | |  "]}," ActiveModel LazyAttributeSet key?":{"type":"method","name":"key?","children":[],"call":[" [] initialized? "," [] ","@attributes key? "," types key? "," types "," values key? "," values "]}," ActiveModel LazyAttributeSet initialize":{"type":"method","name":"initialize","children":[],"call":[]}," ActiveModel AttributeMutationTracker forced_changes":{"type":"method","name":"forced_changes","children":[],"call":[]}," ActiveModel AttributeMethods ClassMethods CodeGenerator execute":{"type":"method","name":"execute","children":[],"call":["@owner undef_method ","@owner alias_method ","@renames each ","@owner module_eval ","@line - ","@sources join ","method_set apply ","@namespaces each_value "]}," ActiveModel AttributeMethods ClassMethods CodeGenerator rename_method":{"type":"method","name":"rename_method","children":[],"call":["@renames []= "]}," ActiveModel AttributeMethods ClassMethods CodeGenerator <<":{"type":"method","name":"<<","children":[],"call":["@sources << "]}," ActiveModel AttributeMethods ClassMethods CodeGenerator initialize":{"type":"method","name":"initialize","children":[],"call":["h []= ","MethodSet  new ","Hash  new "]}," ActiveModel AttributeMethods ClassMethods CodeGenerator batch":{"type":"method","name":"batch","children":[],"call":["instance execute "," new ","owner is_a? "," new  execute "]}," ActiveModel EachValidator read_attribute_for_validation":{"type":"method","name":"read_attribute_for_validation","children":[],"call":["record read_attribute_for_validation "]}," ActiveModel Validations NumericalityValidator read_attribute_for_validation":{"type":"method","name":"read_attribute_for_validation","children":[],"call":["record public_send ","record respond_to? ","record read_attribute "," record_attribute_changed_in_place? "]}," ActiveModel Validations Callbacks ClassMethods set_options_for_callback":{"type":"method","name":"set_options_for_callback","children":[],"call":["options []= ","options [] ","(send\n  (send\n    (lvar :options) :[]\n    (sym :on)) :&\n  (send nil :Array\n    (send\n      (lvar :o) :validation_context))) empty? ! ","(send\n  (send\n    (lvar :options) :[]\n    (sym :on)) :&\n  (send nil :Array\n    (send\n      (lvar :o) :validation_context))) empty? ","options [] & "," Array ","o validation_context "," lambda ","options key? "]}," ActiveModel Validations NumericalityValidator round":{"type":"method","name":"round","children":[],"call":["raw_value round "]}," ActiveModel Dirty as_json":{"type":"method","name":"as_json","children":[],"call":["options []= ","(send\n  (lvar :options) :[]\n  (sym :except)) flatten ","options [] "]}," ActiveModel Validations NumericalityValidator option_as_number":{"type":"method","name":"option_as_number","children":[],"call":[" parse_as_number "," option_value "," resolve_value "]}," ActiveModel Validations HelperMethods validates_comparison_of":{"type":"method","name":"validates_comparison_of","children":[],"call":[" validates_with "," _merge_attributes "]}," ActiveModel Validations ComparisonValidator validate_each":{"type":"method","name":"validate_each","children":[],"call":["record errors add ","e message ","record errors "," error_options ","value public_send ","COMPARE_CHECKS  [] ","value blank? ","value nil? "," option_value "," options slice each "," options slice ","COMPARE_CHECKS  keys "," options "," resolve_value ","  option_value  ","  resolve_value  "]}," ActiveModel Validations ComparisonValidator check_validity!":{"type":"method","name":"check_validity!","children":[],"call":[" raise ","(send\n  (send\n    (send nil :options) :keys) :&\n  (send\n    (const nil :COMPARE_CHECKS) :keys)) any? "," options keys & ","COMPARE_CHECKS  keys "," options keys "," options "]}," ActiveModel Validations Comparability error_options":{"type":"method","name":"error_options","children":[],"call":[" options except merge! "," options except ","COMPARE_CHECKS  keys "," options "]}," ActiveModel Validations Comparability option_value":{"type":"method","name":"option_value","children":[],"call":["record send ","option_value call "]}," ActiveModel Type Registry initialize_copy":{"type":"method","name":"initialize_copy","children":[],"call":["@registrations dup ","@registrations dup  dup "]}," ActiveModel Type Helpers Numeric equal_nan?":{"type":"method","name":"equal_nan?","children":[],"call":["new_value nan? ","old_value instance_of? ","new_value class ","old_value nan? ","old_value is_a? "]}," ActiveModel Serialization attribute_names":{"type":"method","name":"attribute_names","children":[],"call":[" attributes keys "," attributes "]}," ActiveModel Name uncountable?":{"type":"method","name":"uncountable?","children":[],"call":[]}," ActiveModel Errors inspect":{"type":"method","name":"inspect","children":[],"call":[" class name "," class ","@errors inspect "]}," ActiveModel AttributeSet values_for_database":{"type":"method","name":"values_for_database","children":[],"call":[" attributes transform_values "," attributes "]}," ActiveModel Attribute serializable?":{"type":"method","name":"serializable?","children":[],"call":[" type serializable? "," value "," type "]}," ActiveModel API persisted?":{"type":"method","name":"persisted?","children":[],"call":[]}," ActiveModel API initialize":{"type":"method","name":"initialize","children":[],"call":[" assign_attributes "]}," ActiveModel AttributeMethods ClassMethods CodeGenerator define_cached_method":{"type":"method","name":"define_cached_method","children":[],"call":["@namespaces [] define_cached_method ","@namespaces [] "]}," ActiveModel AttributeMethods ClassMethods CodeGenerator MethodSet apply":{"type":"method","name":"apply","children":[],"call":["owner define_method ","@cache instance_method ","@methods each ","@cache module_eval ","# frozen_string_literal: true\n + ","@sources join ","@sources empty? "]}," ActiveModel AttributeMethods ClassMethods CodeGenerator MethodSet define_cached_method":{"type":"method","name":"define_cached_method","children":[],"call":["@methods []= ","@cache method_defined? ","@methods fetch ","as to_sym ","name to_sym ","as to_sym  to_sym ","name to_sym  to_sym "]}," ActiveModel AttributeMethods ClassMethods CodeGenerator MethodSet initialize":{"type":"method","name":"initialize","children":[],"call":["METHOD_CACHES  [] "]}," ActiveModel Serialization attribute_names_for_serialization":{"type":"method","name":"attribute_names_for_serialization","children":[],"call":[" attributes keys "," attributes "]}," ActiveModel Type Value immutable_value":{"type":"method","name":"immutable_value","children":[],"call":[]}," ActiveModel Type Helpers Mutable immutable_value":{"type":"method","name":"immutable_value","children":[],"call":["value deep_dup freeze ","value deep_dup "]}," ActiveModel ForcedMutationTracker type_cast":{"type":"method","name":"type_cast","children":[],"call":[]}," ActiveModel AttributeMutationTracker type_cast":{"type":"method","name":"type_cast","children":[],"call":[" attributes [] type_cast "," attributes [] "," attributes "]}," ActiveModel Type Value mutable?":{"type":"method","name":"mutable?","children":[],"call":[]}," ActiveModel Type Value serialized?":{"type":"method","name":"serialized?","children":[],"call":[]}," ActiveModel Type Helpers Mutable mutable?":{"type":"method","name":"mutable?","children":[],"call":[]}," ActiveModel Validations init_internals":{"type":"method","name":"init_internals","children":[],"call":[]}," ActiveModel Validations ClassMethods predicate_for_validation_context":{"type":"method","name":"predicate_for_validation_context","children":[],"call":["context include? ","model validation_context ","model validation_context any? ","model validation_context is_a? "," lambda ","@@predicates_for_validation_contexts [] "," Array ","context sort ","context is_a? "," Array  include? ","context sort  include? ","model validation_ Array  ","model validation_context sort  ","model validation_ Array  any? ","model validation_context sort  any? ","model validation_ Array  is_a? ","model validation_context sort  is_a? ","@@predicates_for_validation_ Array s [] ","@@predicates_for_validation_context sort s [] "," Array  sort ","context sort  sort "," Array  is_a? ","context sort  is_a? "]}," ActiveModel Validations ResolveValue resolve_value":{"type":"method","name":"resolve_value","children":[],"call":["value call ","value respond_to? ","record send ","value arity == ","value arity "]}," ActiveModel Type Value as_json":{"type":"method","name":"as_json","children":[],"call":[" raise "]}," ActiveModel Type SerializeCastValue initialize":{"type":"method","name":"initialize","children":[],"call":[" class serialize_cast_value_compatible? "," class "]}," ActiveModel Type SerializeCastValue itself_if_serialize_cast_value_compatible":{"type":"method","name":"itself_if_serialize_cast_value_compatible","children":[],"call":[" class serialize_cast_value_compatible? "," class "]}," ActiveModel Type SerializeCastValue serialize":{"type":"method","name":"serialize","children":[],"call":[]}," ActiveModel Type SerializeCastValue included":{"type":"method","name":"included","children":[],"call":[]}," ActiveModel Type SerializeCastValue DefaultImplementation serialize_cast_value":{"type":"method","name":"serialize_cast_value","children":[],"call":[]}," ActiveModel Type SerializeCastValue ClassMethods serialize_cast_value_compatible?":{"type":"method","name":"serialize_cast_value_compatible?","children":[],"call":[" ancestors index <= "," ancestors index "," instance_method owner "," instance_method "," ancestors "]}," ActiveModel Type Integer serialize_cast_value":{"type":"method","name":"serialize_cast_value","children":[],"call":[" ensure_in_range "]}," ActiveModel Type ImmutableString serialize_cast_value":{"type":"method","name":"serialize_cast_value","children":[],"call":[]}," ActiveModel Type Helpers TimeValue serialize_cast_value":{"type":"method","name":"serialize_cast_value","children":[],"call":["value getlocal ","value getutc ","value utc? ! ","value utc? "," is_utc? ","value acts_like? "," apply_seconds_precision ","value getlocal  getlocal ","value getutc  getlocal "," apply_seconds_precision  getlocal ","value getlocal  getutc ","value getutc  getutc "," apply_seconds_precision  getutc ","value getlocal  utc? ! ","value getutc  utc? ! "," apply_seconds_precision  utc? ! ","value getlocal  utc? ","value getutc  utc? "," apply_seconds_precision  utc? ","value getlocal  acts_like? ","value getutc  acts_like? "," apply_seconds_precision  acts_like? "]}," ActiveModel Type Helpers Numeric serialize_cast_value":{"type":"method","name":"serialize_cast_value","children":[],"call":[]}," ActiveModel Type Helpers AcceptsMultiparameterTime InstanceMethods serialize_cast_value":{"type":"method","name":"serialize_cast_value","children":[],"call":[]}," ActiveModel Type Boolean serialize_cast_value":{"type":"method","name":"serialize_cast_value","children":[],"call":[]}," ActiveModel Type BigInteger serialize_cast_value":{"type":"method","name":"serialize_cast_value","children":[],"call":[]}," ActiveModel Naming inherited":{"type":"method","name":"inherited","children":[],"call":["base class_eval "]}," ActiveModel Name i18n_scope":{"type":"method","name":"i18n_scope","children":[],"call":["@klass i18n_scope ","@klass respond_to? "]}," ActiveModel Name i18n_keys":{"type":"method","name":"i18n_keys","children":[],"call":["klass model_name i18n_key ","klass model_name ","@klass lookup_ancestors map ","@klass lookup_ancestors ","@klass respond_to? "]}," ActiveModel Dirty init_internals":{"type":"method","name":"init_internals","children":[],"call":[]}," ActiveModel deprecator":{"type":"method","name":"deprecator","children":[],"call":[]}," ActiveModel AttributeSet reverse_merge!":{"type":"method","name":"reverse_merge!","children":[],"call":[" attributes reverse_merge! ","target_attributes attributes "," attributes "]}," ActiveModel AttributeSet cast_types":{"type":"method","name":"cast_types","children":[],"call":[" attributes transform_values "," attributes "]}," ActiveModel AttributeRegistration ClassMethods resolve_type_name":{"type":"method","name":"resolve_type_name","children":[],"call":["Type  lookup "]}," ActiveModel AttributeRegistration ClassMethods resolve_attribute_name":{"type":"method","name":"resolve_attribute_name","children":[],"call":["name to_s "]}," ActiveModel AttributeRegistration ClassMethods reset_default_attributes":{"type":"method","name":"reset_default_attributes","children":[],"call":["subclass send "," __method__ "," subclasses each "," subclasses "]}," ActiveModel AttributeRegistration ClassMethods build_default_attributes":{"type":"method","name":"build_default_attributes","children":[],"call":[" apply_pending_attributes ","AttributeSet  new "]}," ActiveModel AttributeRegistration ClassMethods apply_pending_attributes":{"type":"method","name":"apply_pending_attributes","children":[],"call":["attribute_set []= ","pending apply_to ","attribute_set [] ","@pending_attributes each "," superclass send "," __method__ "," superclass "," superclass respond_to? "]}," ActiveModel AttributeRegistration ClassMethods pending_attribute":{"type":"method","name":"pending_attribute","children":[],"call":["PendingAttribute  new ","@pending_attributes [] "," resolve_attribute_name "]}," ActiveModel AttributeRegistration ClassMethods PendingAttribute apply_to":{"type":"method","name":"apply_to","children":[],"call":["attribute with_user_default "," default ","attribute with_type ","attribute type "," type ","attribute with_user_default  with_user_default ","attribute with_type  with_user_default ","attribute with_user_default  with_type ","attribute with_type  with_type ","attribute with_user_default  type ","attribute with_type  type "]}," ActiveModel AttributeRegistration ClassMethods attribute_types":{"type":"method","name":"attribute_types","children":[],"call":["hash default= ","Type  default_value "," _default_attributes cast_types tap "," _default_attributes cast_types "," _default_attributes "]}," ActiveModel AttributeRegistration ClassMethods _default_attributes":{"type":"method","name":"_default_attributes","children":[],"call":[" build_default_attributes "]}," ActiveModel AttributeRegistration ClassMethods attribute":{"type":"method","name":"attribute","children":[],"call":[" reset_default_attributes ","pending default= ","pending type= "," pending_attribute "," resolve_type_name ","type is_a? "," pending_attribute  default= "," pending_attribute  type= ","pending  resolve_type_name = ","  pending_attribute _attribute "," resolve_ resolve_type_name _name "," resolve_type_name  is_a? "]}," ActiveModel AttributeMethods ClassMethods AttributeMethodPattern method_name":{"type":"method","name":"method_name","children":[],"call":["@method_name % "]}," ActiveModel AttributeMethods ClassMethods AttributeMethodPattern match":{"type":"method","name":"match","children":[],"call":["AttributeMethod  new "," proxy_target ","@regex =~ "]}," ActiveModel AttributeMethods ClassMethods AttributeMethodPattern initialize":{"type":"method","name":"initialize","children":[],"call":["Regexp  escape ","parameters nil? "]}," ActiveModel AttributeMethods ClassMethods attribute_method_patterns_matching":{"type":"method","name":"attribute_method_patterns_matching","children":[],"call":["pattern match "," attribute_method_patterns filter_map "," attribute_method_patterns "," attribute_method_patterns_cache compute_if_absent "," attribute_method_patterns_cache "]}," ActiveModel AttributeMethods ClassMethods attribute_method_patterns_cache":{"type":"method","name":"attribute_method_patterns_cache","children":[],"call":["Concurrent Map  new "]}," ActiveModel AttributeMethods ClassMethods resolve_attribute_name":{"type":"method","name":"resolve_attribute_name","children":[],"call":[" attribute_aliases fetch "," attribute_aliases "]}," ActiveModel AttributeMethods ClassMethods inherited":{"type":"method","name":"inherited","children":[],"call":["base class_eval "]}," ActiveModel AttributeMethods ClassMethods aliases_by_attribute_name":{"type":"method","name":"aliases_by_attribute_name","children":[],"call":["h []= ","Hash  new "]}," ActiveModel AttributeMethods ClassMethods alias_attribute_method_definition":{"type":"method","name":"alias_attribute_method_definition","children":[],"call":["batch << << << ","batch << << ","batch << ","parameters == ","call_args join ","call_args << ","CALL_COMPILABLE_REGEXP  match? ","code_generator define_cached_method ","target_name unpack1 ","NAME_COMPILABLE_REGEXP  match? ","pattern parameters ","pattern method_name to_s ","pattern method_name ","pattern parameters  == ","pattern method_name to_s  unpack1 ","pattern pattern parameters  ","pattern pattern method_name to_s  to_s ","pattern pattern method_name to_s  "]}," ActiveModel AttributeMethods ClassMethods generate_alias_attribute_methods":{"type":"method","name":"generate_alias_attribute_methods","children":[],"call":[" alias_attribute_method_definition "," attribute_method_patterns each "," attribute_method_patterns "]}," ActiveModel AttributeMethods ClassMethods eagerly_generate_alias_attribute_methods":{"type":"method","name":"eagerly_generate_alias_attribute_methods","children":[],"call":[" generate_alias_attribute_methods ","ActiveSupport CodeGenerator  batch "," generated_attribute_methods "]}," ActiveModel Attribute FromUser _value_for_database":{"type":"method","name":"_value_for_database","children":[],"call":["Type SerializeCastValue  serialize "," value "," type "]}," ActiveModel Attribute FromDatabase forgetting_assignment":{"type":"method","name":"forgetting_assignment","children":[],"call":[" dup "," changed_in_place? ! "," changed_in_place? ","(ivar :@value_for_database) ! "," with_value_from_database "," value_before_type_cast "]}," ActiveModel Attribute _value_for_database":{"type":"method","name":"_value_for_database","children":[],"call":[" type serialize "," value "," type "]}," ActiveModel Attribute with_user_default":{"type":"method","name":"with_user_default","children":[],"call":["UserProvidedDefault  new "," original_attribute "," is_a? "," type "," name "]}," ActiveModel Access values_at":{"type":"method","name":"values_at","children":[],"call":[" public_send ","methods flatten map! ","methods flatten "]}," ActiveModel Access slice":{"type":"method","name":"slice","children":[],"call":["(send\n  (send\n    (lvar :methods) :flatten) :index_with) with_indifferent_access "," public_send ","methods flatten index_with ","methods flatten "]}}