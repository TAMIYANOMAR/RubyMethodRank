{" GitHosting GitoliteRecycle name_to_recycle_name":{"type":"method","name":"name_to_recycle_name","children":[],"call":[]}," GitHosting GitoliteRecycle recover_repository_if_present":{"type":"method","name":"recover_repository_if_present","children":[],"call":[]}," GitHosting GitoliteRecycle move_repository_to_recycle":{"type":"method","name":"move_repository_to_recycle","children":[],"call":[]}," GitHosting GitoliteRecycle delete_expired_files":{"type":"method","name":"delete_expired_files","children":[],"call":[]}," GitHosting GitoliteRecycle preserve_time":{"type":"method","name":"preserve_time","children":[],"call":[]}," GitHosting GitoliteRecycle recycle_bin":{"type":"method","name":"recycle_bin","children":[],"call":[]}," GitHosting GitoliteRecycle repository_base":{"type":"method","name":"repository_base","children":[],"call":[]}," GitHosting GitoliteRecycle logger":{"type":"method","name":"logger","children":[],"call":[]}," GitHosting GitoliteAccessRights each":{"type":"method","name":"each","children":[],"call":["@rights each "]}," GitHosting GitoliteAccessRights set":{"type":"method","name":"set","children":[],"call":[" add ","@rights []= ","perm to_sym "]}," GitHosting GitoliteAccessRights add":{"type":"method","name":"add","children":[],"call":["@rights [] uniq! ","@rights [] ","perm to_sym ","@rights [] flatten! ","@rights [] << "]}," GitHosting GitoliteAccessRights rights":{"type":"method","name":"rights","children":[],"call":[]}," GitHosting GitoliteAccessRights initialize":{"type":"method","name":"initialize","children":[],"call":["ActiveSupport OrderedHash  new "]}," GitHosting GitoliteConfig content":{"type":"method","name":"content","children":[],"call":["content join ","content << ","has_users ! ","users join ","users length > ","users length ","rights each ","@repositories each ","@repositories [] nil? ","@repositories [] ","repo == ","admin_key nil? ","(send\n  (send\n    (ivar :@repositories) :[]\n    (const nil :ADMIN_REPO)) :get\n  (str \"RW+\")) first ","@repositories [] get "," class has_admin_key? "," class ","@repositories [] each ","(send\n  (send\n    (ivar :@repositories) :[]\n    (const nil :ADMIN_REPO)) :get\n  (str \"RW+\")) first  nil? "," class has_(send\n  (send\n    (ivar :@repositories) :[]\n    (const nil :ADMIN_REPO)) :get\n  (str \"RW+\")) first ? "]}," GitHosting GitoliteConfig repository":{"type":"method","name":"repository","children":[],"call":["GitoliteAccessRights  new ","@repositories [] "]}," GitHosting GitoliteConfig load":{"type":"method","name":"load","children":[],"call":["@original_content join ","cur_repo_right add ","tokens [] ","tokens first ","tokens [] == ","@repositories [] ","@repositories []= ","GitoliteAccessRights  new ","tokens last ","tokens first == ","line strip split ","line strip ","@original_content << ","File  open each_line ","File  open ","ActiveSupport OrderedHash  new ","GitHosting  logger error ","e to_s ","GitHosting  logger ","@repositories delete "," class has_admin_key? "," class ","1 + ","1 == ","(str \"^(.*?)(\\\\s*#.*)?\\\\n?$\") match ","GitHosting  shell ","GitHosting  logger info ","File  exists? ","@original_content join  join ","@repositories []  add ","line strip split  [] ","line strip split  first ","line strip split  [] == ","ActiveSupport OrderedHash  new  [] ","ActiveSupport OrderedHash  new  []= ","line strip split  last ","line strip split  first == ","1 +  strip split ","1 +  strip ","@original_content join  << ","File  open each_1 +  ","ActiveSupport OrderedHash  new  delete "]}," GitHosting GitoliteConfig all_repos":{"type":"method","name":"all_repos","children":[],"call":["repos []= ","@repositories each ","repo =~ "]}," GitHosting GitoliteConfig changed?":{"type":"method","name":"changed?","children":[],"call":["@original_content != "," content "]}," GitHosting GitoliteConfig is_redmine_key?":{"type":"method","name":"is_redmine_key?","children":[],"call":["keyname == ","GitolitePublicKey  ident_to_user_token "]}," GitHosting GitoliteConfig repo_has_no_keys?":{"type":"method","name":"repo_has_no_keys?","children":[],"call":["(send\n  (send\n    (send nil :repository\n      (lvar :repo_name)) :rights) :detect) ! ","users length > ","users length "," repository rights detect "," repository rights "," repository "]}," GitHosting GitoliteConfig delete_redmine_keys":{"type":"method","name":"delete_redmine_keys","children":[],"call":[" is_redmine_key? ","users delete_if "," repository rights each "," repository rights "," repository ","@repositories [] ! ","@repositories [] "," is_daemon_key? "," is_redmine_repo? "]}," GitHosting GitoliteConfig is_redmine_repo?":{"type":"method","name":"is_redmine_repo?","children":[],"call":[" repo_has_no_keys? "," is_redmine_key? ","users detect "," repository rights detect "," repository rights "," repository "]}," GitHosting GitoliteConfig rename_repo":{"type":"method","name":"rename_repo","children":[],"call":["@repositories []= ","@repositories delete ","@repositories has_key? "]}," GitHosting GitoliteConfig delete_repo":{"type":"method","name":"delete_repo","children":[],"call":["@repositories delete "]}," GitHosting GitoliteConfig set_read_user":{"type":"method","name":"set_read_user","children":[],"call":[" repository set "," repository ","users sort "]}," GitHosting GitoliteConfig add_read_user":{"type":"method","name":"add_read_user","children":[],"call":[" repository add "," repository ","users sort "]}," GitHosting GitoliteConfig set_write_user":{"type":"method","name":"set_write_user","children":[],"call":[" repository set "," repository ","users sort "]}," GitHosting GitoliteConfig add_write_user":{"type":"method","name":"add_write_user","children":[],"call":[" repository add "," repository ","users sort "]}," GitHosting GitoliteConfig save":{"type":"method","name":"save","children":[],"call":[" content ","f puts ","File  open ","GitHosting  logger error ","e to_s ","GitHosting  logger "," content_header "]}," GitHosting GitoliteConfig logger":{"type":"method","name":"logger","children":[],"call":["GitHosting  logger "]}," GitHosting GitoliteConfig initialize":{"type":"method","name":"initialize","children":[],"call":[" load "]}," GitHosting Patches UsersControllerPatch included":{"type":"method","name":"included","children":[],"call":[]}," GitHosting Patches UsersControllerPatch edit_membership_with_disable_update":{"type":"method","name":"edit_membership_with_disable_update","children":[],"call":["GitHostingObserver  set_update_active "," edit_membership_without_disable_update "]}," GitHosting Patches UsersControllerPatch destroy_with_disable_update":{"type":"method","name":"destroy_with_disable_update","children":[],"call":["GitHostingObserver  set_update_active "," destroy_without_disable_update "]}," GitHosting Patches UsersControllerPatch update_with_disable_update":{"type":"method","name":"update_with_disable_update","children":[],"call":["GitHostingObserver  set_update_active "," update_without_disable_update "," set_public_key_values "]}," GitHosting Patches UsersControllerPatch create_with_disable_update":{"type":"method","name":"create_with_disable_update","children":[],"call":["GitHostingObserver  set_update_active "," create_without_disable_update "]}," GitHosting Patches SysControllerPatch included":{"type":"method","name":"included","children":[],"call":[]}," GitHosting Patches SysControllerPatch fetch_changesets_with_disable_update":{"type":"method","name":"fetch_changesets_with_disable_update","children":[],"call":["GitHostingObserver  set_update_active "," fetch_changesets_without_disable_update "]}," GitHosting Patches RolesControllerPatch included":{"type":"method","name":"included","children":[],"call":[]}," GitHosting Patches RolesControllerPatch destroy_with_disable_update":{"type":"method","name":"destroy_with_disable_update","children":[],"call":["GitHostingObserver  set_update_active "," destroy_without_disable_update "]}," GitHosting Patches RolesControllerPatch edit_with_disable_update":{"type":"method","name":"edit_with_disable_update","children":[],"call":["GitHostingObserver  set_update_active "," edit_without_disable_update "]}," GitHosting Patches RepositoryPatch included":{"type":"method","name":"included","children":[],"call":[]}," GitHosting Patches RepositoryPatch ClassMethods fetch_changesets_with_disable_update":{"type":"method","name":"fetch_changesets_with_disable_update","children":[],"call":["GitHostingObserver  set_update_active "," fetch_changesets_without_disable_update "]}," GitHosting Patches RepositoryPatch ClassMethods factory_with_git_extra_init":{"type":"method","name":"factory_with_git_extra_init","children":[],"call":["new_repo extra= ","GitRepositoryExtra  new ","new_repo extra nil? ","new_repo extra ","new_repo is_a? "," factory_without_git_extra_init ","GitHosting  logger error "," project to_s "," project ","GitHosting  logger ","nGitRepositoryExtra  new w_rGitRepositoryExtra  new po GitRepositoryExtra  new xtra= "," factory_without_git_extra_init  extra= ","GitRGitRepositoryExtra  new positoryExtra  nGitRepositoryExtra  new w ","nGitRepositoryExtra  new w_rGitRepositoryExtra  new po GitRepositoryExtra  new xtra nil? "," factory_without_git_extra_init  extra nil? ","nGitRepositoryExtra  new w_rGitRepositoryExtra  new po GitRepositoryExtra  new xtra "," factory_without_git_extra_init  extra ","nGitRepositoryExtra  new w_rGitRepositoryExtra  new po is_a? "," factory_without_git_extra_init  is_a? "," factory_without_git_GitRepositoryExtra  new xtra_init ","GitHosting  loggGitRepositoryExtra  new r GitRepositoryExtra  new rror "," projGitRepositoryExtra  new ct to_s "," projGitRepositoryExtra  new ct ","GitHosting  loggGitRepositoryExtra  new r "]}," GitHosting Patches RepositoryPatch ClassMethods fetch_changesets_for_project":{"type":"method","name":"fetch_changesets_for_project","children":[],"call":[" logger error ","e message "," logger ","p repository fetch_changesets ","p repository ","Project  find_by_identifier ","repo fetch_changesets ","Repository  find_all_by_project_id each ","Repository  find_all_by_project_id ","p id ","Project  find_by_identifier  reProject  find_by_identifier ository fetch_changesets ","Project  find_by_identifier  reProject  find_by_identifier ository ","reProject  find_by_identifier o fetch_changesets ","ReProject  find_by_identifier ository  find_all_by_Project  find_by_identifier roject_id each ","ReProject  find_by_identifier ository  find_all_by_Project  find_by_identifier roject_id ","Project  find_by_identifier  id "]}," GitHosting Patches RepositoryCiaFilters included":{"type":"method","name":"included","children":[],"call":[]}," GitHosting Patches RepositoryCiaFilters FilterMethods notified?":{"type":"method","name":"notified?","children":[],"call":[" find nil? ! "," find nil? "," find ","scmid scmid ","scmid instance_of? ","scmid scmid  scmid scmid  ","scmid scmid  instance_of? "]}," GitHosting Patches RepositoryCiaFilters FilterMethods notified":{"type":"method","name":"notified","children":[],"call":[" push ","GitCiaNotification  new ","scmid scmid ","scmid instance_of? ","scmid scmid  scmid scmid  ","scmid scmid  instance_of? "]}," GitHosting Patches RepositoriesControllerPatch included":{"type":"method","name":"included","children":[],"call":[]}," GitHosting Patches RepositoriesControllerPatch edit_with_scm_settings":{"type":"method","name":"edit_with_scm_settings","children":[],"call":[" edit_without_scm_settings ","GitHosting  setup_hooks ","@project repository nil? ! ","@project repository nil? ","@project repository ","GitHosting  update_repositories ","page replace_html "," render_main_menu ","@project reload ","@project repository ! "," render ","@repository save ","@repository extra update_attributes "," params [] "," params ","@repository extra "," params [] nil? ! "," params [] nil? ","@repository attributes= "," request post? "," request ","@repository project= ","Repository  factory ","@repository ! ","@project repository is_a? "," params [] == "," params [] []= ","File  join ","Setting  plugin_redmine_git_hosting [] ","Setting  plugin_redmine_git_hosting ","@project identifier ","GitHosting  get_full_parent_path ","@project parent ","GitHosting  logger debug ","GitHosting  logger ","GitHostingObserver  bracketed_update_repositories ","GitHosting  repository_path ","GitHostingObserver  set_update_active ","Repository  factory  save ","@project repository  save ","Repository  factory  extra update_attributes ","@project repository  extra update_attributes ","Repository  factory  extra ","@project repository  extra ","Repository  factory  attributes= ","@project repository  attributes= ","Repository  factory  project= ","@project repository  project= ","Repository  factory  ! ","@project repository  ! "]}," GitHosting Patches RepositoriesControllerPatch show_with_git_instructions":{"type":"method","name":"show_with_git_instructions","children":[],"call":[" show_without_git_instructions "," render ","@repository entries blank? ","@repository entries ","@repository is_a? ","@project all_repos "]}," GitHosting Patches ProjectsControllerPatch included":{"type":"method","name":"included","children":[],"call":[]}," GitHosting Patches ProjectsControllerPatch update_git_repo_for_new_parent":{"type":"method","name":"update_git_repo_for_new_parent","children":[],"call":["GitHosting  move_repository ","@project repository save ","@project repository ","@project repository url= ","@project repository root_url= ","File  join ","Setting  plugin_redmine_git_hosting [] ","Setting  plugin_redmine_git_hosting ","@project identifier ","File  join gsub ","new_parent identifier ","GitHosting  get_full_parent_path ","new_parent is_a? ","old_parent identifier ","old_parent is_a? ","Project  find_by_id ","new_parent_id != ","old_parent_id != ","old_parent_id to_s != ","new_parent_id to_s ","old_parent_id to_s ","new_parent_id to_s strip chomp == ","new_parent_id to_s strip chomp ","new_parent_id to_s strip ","old_parent_id to_s strip chomp == ","old_parent_id to_s strip chomp ","old_parent_id to_s strip "," params [] [] "," params [] "," params "," params [] has_key? ","@project parent id ","@project parent ","@project repository is_a? ","@project repository != ","Project  find_by_id  identifier ","Project  find_by_id  is_a? ","Project  find_by_id _id != "," params [] []  != ","@project parent id  != ","Project  find_by_id _id to_s != ","@project parent id  to_s != ","Project  find_by_id _id to_s "," params [] []  to_s ","@project parent id  to_s ","Project  find_by_id _id to_s strip chomp == "," params [] []  to_s strip chomp == ","Project  find_by_id _id to_s strip chomp "," params [] []  to_s strip chomp ","Project  find_by_id _id to_s strip "," params [] []  to_s strip ","@project parent id  to_s strip chomp == ","@project parent id  to_s strip chomp ","@project parent id  to_s strip "]}," GitHosting Patches ProjectsControllerPatch disable_git_daemon_if_not_public":{"type":"method","name":"disable_git_daemon_if_not_public","children":[],"call":["@project repository save ","@project repository ","@project repository extra git_daemon= ","@project repository extra ","@project is_public ! ","@project is_public ","@project repository extra git_daemon == ","@project repository extra git_daemon ","@project repository is_a? ","@project repository != ","@project repository extra save ","repo save ","repo extra save ","repo extra ","repo extra git_daemon= ","repo extra git_daemon == ","repo extra git_daemon ","@project gl_repos each ","@project gl_repos "]}," GitHosting Patches ProjectsControllerPatch git_repo_init":{"type":"method","name":"git_repo_init","children":[],"call":["GitHostingObserver  set_update_active ","repo save ","@project repository= ","repo url= ","repo root_url= ","File  join ","Setting  plugin_redmine_git_hosting [] ","Setting  plugin_redmine_git_hosting ","@project identifier ","GitHosting  get_full_parent_path ","@project parent ","Repository  factory ","Setting  plugin_redmine_git_hosting [] == ","@project module_enabled? ","membership save ","Member  new ","@project id ","User  current ","users length == ","users length ","@project member_principals map compact uniq ","@project member_principals map compact ","@project member_principals map ","@project member_principals ","GitHosting  repository_path ","@project repositories << ","@project repositories ","GitHosting  multi_repos? ","Repository  factory  save ","@project Repository  factory sitory= ","Repository  factory  url= ","Repository  factory  root_url= ","Member  new  save ","@project member_principals map compact uniq  length == ","@project member_principals map compact uniq  length ","GitHosting  Repository  factory sitory_path ","@project Repository  factory sitories << ","@project Repository  factory sitories ","GitHosting  multi_Repository  factory s? "]}," GitHosting Patches MembersControllerPatch included":{"type":"method","name":"included","children":[],"call":[]}," GitHosting Patches MembersControllerPatch destroy_with_disable_update":{"type":"method","name":"destroy_with_disable_update","children":[],"call":["GitHostingObserver  set_update_active "," destroy_without_disable_update "]}," GitHosting Patches MembersControllerPatch edit_with_disable_update":{"type":"method","name":"edit_with_disable_update","children":[],"call":["GitHostingObserver  set_update_active "," edit_without_disable_update "]}," GitHosting Patches MembersControllerPatch new_with_disable_update":{"type":"method","name":"new_with_disable_update","children":[],"call":["GitHostingObserver  set_update_active "," new_without_disable_update "]}," GitHosting Patches GroupsControllerPatch included":{"type":"method","name":"included","children":[],"call":[]}," GitHosting Patches GroupsControllerPatch do_single_update":{"type":"method","name":"do_single_update","children":[],"call":["GitHostingObserver  set_update_active "]}," GitHosting Patches GroupsControllerPatch disable_git_observer_updates":{"type":"method","name":"disable_git_observer_updates","children":[],"call":["GitHostingObserver  set_update_active "]}," GitHosting Patches GitRepositoryPatch included":{"type":"method","name":"included","children":[],"call":[]}," GitHosting Patches GitRepositoryPatch fetch_changesets_with_disable_update":{"type":"method","name":"fetch_changesets_with_disable_update","children":[],"call":["GitHostingObserver  set_update_active "," fetch_changesets_without_disable_update "]}," GitHosting Patches GitRepositoryPatch extra_report_last_commit_with_always_true":{"type":"method","name":"extra_report_last_commit_with_always_true","children":[],"call":[]}," GitHosting Patches GitRepositoryPatch report_last_commit_with_always_true":{"type":"method","name":"report_last_commit_with_always_true","children":[],"call":[]}," GitHosting Patches GitAdapterPatch scm_cmd_with_sudo":{"type":"method","name":"scm_cmd_with_sudo","children":[],"call":["block call "," block_given? ","StringIO  new ","retio == "," raise ","$? exitstatus ","$? exitstatus != "," shellout ","GitCache  destroy ","oldest id ","GitCache  find ","max_cache_elements >= ","GitCache  count > ","GitCache  count ","gitc save ","GitCache  create ","repo_path gsub gsub ","repo_path gsub ","out length <= ","out length ","out == ","io read ","max_cache_size + ","cached id ","cached command_output ","cached command_output == ","max_cache_time < ","cur_time to_i - < ","cur_time to_i - ","cached created_at to_i ","cached created_at ","cur_time to_i ","Time  now ","Time  now utc ","ActiveRecord Base  default_timezone == ","ActiveRecord Base  default_timezone ","cached != ","GitCache  find_by_command ","(send\n  (lvar :full_args) :map) join "," shell_quote ","e to_s ","full_args map ","full_args << << ","full_args << "," class client_version_above? "," class ","GitHosting  git_exec "," url "," root_url ","(send\n  (send\n    (const nil :Setting) :plugin_redmine_git_hosting) :[]\n  (str \"gitCacheMaxSize\")) to_i * * ","(send\n  (send\n    (const nil :Setting) :plugin_redmine_git_hosting) :[]\n  (str \"gitCacheMaxSize\")) to_i * ","(send\n  (send\n    (const nil :Setting) :plugin_redmine_git_hosting) :[]\n  (str \"gitCacheMaxSize\")) to_i ","Setting  plugin_redmine_git_hosting [] ","Setting  plugin_redmine_git_hosting ","(send\n  (send\n    (const nil :Setting) :plugin_redmine_git_hosting) :[]\n  (str \"gitCacheMaxElements\")) to_i ","(send\n  (send\n    (const nil :Setting) :plugin_redmine_git_hosting) :[]\n  (str \"gitCacheMaxTime\")) to_i "," git_cmd_with_sudo ","StringIO  new  == "," shellout  == "," shellio read  "," shellcached command_output  ","GitCache  find  id ","(send\n  (send\n    (const nil :Setting) :plugin_redmine_git_hosting) :[]\n  (str \"gitCacheMaxElements\")) to_i  >= ","GitCache  create  save ","io read  length <= ","cached command_output  length <= ","io read  length ","cached command_output  length ","io read  == ","cached command_output  == ","(send\n  (send\n    (const nil :Setting) :plugin_redmine_git_hosting) :[]\n  (str \"gitCacheMaxSize\")) to_i * *  + ","GitCache  find_by_command  id ","cached command_io read put ","cached command_cached command_output put ","GitCache  find_by_command  command_output ","cached command_io read put == ","cached command_cached command_output put == ","GitCache  find_by_command  command_output == ","(send\n  (send\n    (const nil :Setting) :plugin_redmine_git_hosting) :[]\n  (str \"gitCacheMaxTime\")) to_i  < ","Time  now  to_i - < ","Time  now utc  to_i - < ","Time  now  to_i - ","Time  now utc  to_i - ","GitCache  find_by_command  created_at to_i ","GitCache  find_by_command  created_at ","Time  now  to_i ","Time  now utc  to_i ","GitCache  find_by_command  != "]}," GitHosting Patches GitAdapterPatch ClassMethods client_command_with_sudo":{"type":"method","name":"client_command_with_sudo","children":[],"call":["GitHosting  git_exec "]}," GitHosting Patches GitAdapterPatch ClassMethods sq_bin_with_sudo":{"type":"method","name":"sq_bin_with_sudo","children":[],"call":["Redmine Scm Adapters GitAdapter  shell_quote ","GitHosting  git_exec "]}," GitHosting Patches GitAdapterPatch included":{"type":"method","name":"included","children":[],"call":[]}," GitHosting GitoliteConfig gitolite_repository_map":{"type":"method","name":"gitolite_repository_map","children":[],"call":[]}," GitHosting GitoliteConfig redmine_repo_map":{"type":"method","name":"redmine_repo_map","children":[],"call":["redmine_repos [] << ","redmine_repos [] ","File  basename "," is_redmine_repo? ","@repositories each ","hash []= ","Hash  new ","redmine_repos [] []= ","repo =~ "]}," GitHosting Patches UsersControllerPatch edit_with_public_keys":{"type":"method","name":"edit_with_public_keys","children":[],"call":["GitolitePublicKey  new "," redirect_to "," params [] "," params ","@gitolite_public_key nil? ","x id == "," params [] to_i ","x id ","@gitolite_public_keys detect ","@user gitolite_public_keys all ","@user gitolite_public_keys "," edit_without_public_keys "," set_public_key_values ","GitolitePublicKey  new  nil? ","GitolitePublicKey  new s detect ","@user gitolite_public_keys all  detect "]}," GitHosting Patches ProjectsControllerPatch destroy_with_disable_update":{"type":"method","name":"destroy_with_disable_update","children":[],"call":["GitHostingObserver  set_update_active "," destroy_without_disable_update "]}," GitHosting Patches ProjectsControllerPatch update_with_disable_update":{"type":"method","name":"update_with_disable_update","children":[],"call":["GitHostingObserver  set_update_active ","myrepo url != ","myrepo root_url ","myrepo url ","GitHosting  repository_path ","myrepo is_a? ","@project repository "," disable_git_daemon_if_not_public "," update_without_disable_update ","repo url != ","repo root_url ","repo url ","@project gl_repos detect ","@project gl_repos ","@project repository  url != ","@project repository  root_url ","@project repository  url ","@project repository  is_a? "]}," GitHosting Patches ProjectsControllerPatch create_with_disable_update":{"type":"method","name":"create_with_disable_update","children":[],"call":["GitHostingObserver  set_update_active "," git_repo_init "," create_without_disable_update "," disable_git_daemon_if_not_public ","Rails  logger error ","Rails  logger "]}," GitHosting Patches MyControllerPatch included":{"type":"method","name":"included","children":[],"call":[]}," GitHosting Patches MyControllerPatch account_with_public_keys":{"type":"method","name":"account_with_public_keys","children":[],"call":["GitolitePublicKey  new "," redirect_to "," params [] "," params ","@gitolite_public_key nil? ","x id == "," params [] to_i ","x id ","@gitolite_public_keys detect ","@user gitolite_public_keys all ","@user gitolite_public_keys "," account_without_public_keys ","@gitolite_user_keys + ","@user gitolite_public_keys active deploy_key find ","@user gitolite_public_keys active deploy_key ","@user gitolite_public_keys active ","@user gitolite_public_keys active user_key find ","@user gitolite_public_keys active user_key ","GitolitePublicKey  new  nil? ","GitolitePublicKey  new s detect ","@user gitolite_public_keys all  detect ","@gitolite_user_keys +  detect ","@user gitolite_public_keys active user_key find  + "]}," GitHosting GitoliteAccessRights get":{"type":"method","name":"get","children":[],"call":["@rights [] ","perm to_sym "]}," GitHosting GitoliteConfig is_daemon_key?":{"type":"method","name":"is_daemon_key?","children":[],"call":["keyname == "]}," GitHosting GitoliteConfig set_admin_key":{"type":"method","name":"set_admin_key","children":[],"call":[" repository set "," repository "]}," GitHosting GitoliteConfig get_admin_key":{"type":"method","name":"get_admin_key","children":[],"call":["(send\n  (send nil :repository\n    (const nil :ADMIN_REPO)) :get\n  (str \"RW+\")) first "," repository get "," repository "]}," GitHosting MyLogger method_missing":{"type":"method","name":"method_missing","children":[],"call":["Rails  logger send ","Rails  logger "]}," GitHosting MyLogger error":{"type":"method","name":"error","children":[],"call":["Rails  logger error ","(begin\n  (const nil :ERROR_PREFIX)) gsub ","Rails  logger "," block_given? "]}," GitHosting update_global_hook_params":{"type":"method","name":"update_global_hook_params","children":[],"call":[]}," GitHosting setup_hooks":{"type":"method","name":"setup_hooks","children":[],"call":[]}," GitHosting check_hooks_installed":{"type":"method","name":"check_hooks_installed","children":[],"call":[]}," GitHosting clear_cache_for_project":{"type":"method","name":"clear_cache_for_project","children":[],"call":[]}," GitHosting longest_match_length":{"type":"method","name":"longest_match_length","children":[],"call":[]}," GitHosting closest_path":{"type":"method","name":"closest_path","children":[],"call":[]}," GitHosting file_exists?":{"type":"method","name":"file_exists?","children":[],"call":[]}," GitHosting git_repository_exists?":{"type":"method","name":"git_repository_exists?","children":[],"call":[]}," GitHosting move_physical_repo":{"type":"method","name":"move_physical_repo","children":[],"call":[]}," GitHosting update_repositories":{"type":"method","name":"update_repositories","children":[],"call":[]}," GitHosting commit_gitolite_admin":{"type":"method","name":"commit_gitolite_admin","children":[],"call":[]}," GitHosting fixup_gitolite_admin":{"type":"method","name":"fixup_gitolite_admin","children":[],"call":[]}," GitHosting clone_or_pull_gitolite_admin":{"type":"method","name":"clone_or_pull_gitolite_admin","children":[],"call":[]}," GitHosting shell":{"type":"method","name":"shell","children":[],"call":[]}," GitHosting unlock":{"type":"method","name":"unlock","children":[],"call":[]}," GitHosting lock":{"type":"method","name":"lock","children":[],"call":[]}," GitHosting update_git_exec":{"type":"method","name":"update_git_exec","children":[],"call":[]}," GitHosting git_user_runner":{"type":"method","name":"git_user_runner","children":[],"call":[]}," GitHosting gitolite_ssh":{"type":"method","name":"gitolite_ssh","children":[],"call":[]}," GitHosting git_exec":{"type":"method","name":"git_exec","children":[],"call":[]}," GitHosting git_user_runner_path":{"type":"method","name":"git_user_runner_path","children":[],"call":[]}," GitHosting gitolite_ssh_path":{"type":"method","name":"gitolite_ssh_path","children":[],"call":[]}," GitHosting git_exec_path":{"type":"method","name":"git_exec_path","children":[],"call":[]}," GitHosting bin_dir_writeable?":{"type":"method","name":"bin_dir_writeable?","children":[],"call":[]}," GitHosting get_bin_dir":{"type":"method","name":"get_bin_dir","children":[],"call":[]}," GitHosting get_tmp_dir":{"type":"method","name":"get_tmp_dir","children":[],"call":[]}," GitHosting repository_path":{"type":"method","name":"repository_path","children":[],"call":[]}," GitHosting repository_name":{"type":"method","name":"repository_name","children":[],"call":[]}," GitHosting redmine_name":{"type":"method","name":"redmine_name","children":[],"call":[]}," GitHosting get_full_parent_path":{"type":"method","name":"get_full_parent_path","children":[],"call":[]}," GitHosting sudo_web_to_git_user":{"type":"method","name":"sudo_web_to_git_user","children":[],"call":[]}," GitHosting sudo_git_to_web_user":{"type":"method","name":"sudo_git_to_web_user","children":[],"call":[]}," GitHosting mirror_push_public_key":{"type":"method","name":"mirror_push_public_key","children":[],"call":[]}," GitHosting git_user":{"type":"method","name":"git_user","children":[],"call":[]}," GitHosting web_user=":{"type":"method","name":"web_user=","children":[],"call":[]}," GitHosting web_user":{"type":"method","name":"web_user","children":[],"call":[]}," GitHosting logger":{"type":"method","name":"logger","children":[],"call":[]}," GitHosting my_root_url":{"type":"method","name":"my_root_url","children":[],"call":[]}," GitHosting http_access_url":{"type":"method","name":"http_access_url","children":[],"call":[]}," GitHosting git_access_url":{"type":"method","name":"git_access_url","children":[],"call":[]}," GitHosting http_server_subdir":{"type":"method","name":"http_server_subdir","children":[],"call":[]}," GitHosting repository_hierarchy":{"type":"method","name":"repository_hierarchy","children":[],"call":[]}," GitHosting repository_redmine_subdir":{"type":"method","name":"repository_redmine_subdir","children":[],"call":[]}," GitHosting repository_base":{"type":"method","name":"repository_base","children":[],"call":[]}," GitHosting lock_wait_time":{"type":"method","name":"lock_wait_time","children":[],"call":[]}," GitHosting Patches RepositoryPatch InstanceMethods extra=":{"type":"method","name":"extra=","children":[],"call":[" git_extra= "]}," GitHosting Patches RepositoryPatch InstanceMethods extra":{"type":"method","name":"extra","children":[],"call":["GitHostingObserver  set_update_active "," project "," git_extra= ","GitRepositoryExtra  new ","retval nil? "," git_extra ","GitRepositoryExtra  new  nil? "," git_extra  nil? "]}," GitHosting GitAdapterHooks setup_hooks_for_project":{"type":"method","name":"setup_hooks_for_project","children":[],"call":[]}," GitHosting GitAdapterHooks get_global_config_params":{"type":"method","name":"get_global_config_params","children":[],"call":[]}," GitHosting GitAdapterHooks get_local_config_params":{"type":"method","name":"get_local_config_params","children":[],"call":[]}," GitHosting GitAdapterHooks get_local_config_map":{"type":"method","name":"get_local_config_map","children":[],"call":[]}," GitHosting GitAdapterHooks install_hook":{"type":"method","name":"install_hook","children":[],"call":[]}," GitHosting GitAdapterHooks rgh_hook_digest":{"type":"method","name":"rgh_hook_digest","children":[],"call":[]}," GitHosting GitAdapterHooks package_hooks_dir":{"type":"method","name":"package_hooks_dir","children":[],"call":[]}," GitHosting GitAdapterHooks gitolite_hooks_dir":{"type":"method","name":"gitolite_hooks_dir","children":[],"call":[]}," GitHosting GitAdapterHooks logger":{"type":"method","name":"logger","children":[],"call":[]}," GitHosting GitAdapterHooks update_global_hook_params":{"type":"method","name":"update_global_hook_params","children":[],"call":[]}," GitHosting GitAdapterHooks setup_hooks_params":{"type":"method","name":"setup_hooks_params","children":[],"call":[]}," GitHosting GitAdapterHooks setup_hooks":{"type":"method","name":"setup_hooks","children":[],"call":[]}," GitHosting GitAdapterHooks check_hooks_installed":{"type":"method","name":"check_hooks_installed","children":[],"call":[]}," GitHosting GitoliteConfig has_actual_redmine_keys?":{"type":"method","name":"has_actual_redmine_keys?","children":[],"call":["GitolitePublicKey  ident_to_user_token ","users detect "," repository rights detect "," repository rights "," repository "]}," GitHosting GitoliteConfig mark_disabled":{"type":"method","name":"mark_disabled","children":[],"call":[" add_read_user "]}," GitHosting GitoliteConfig mark_archived":{"type":"method","name":"mark_archived","children":[],"call":[" add_read_user "]}," GitHosting GitoliteConfig mark_with_dummy_key":{"type":"method","name":"mark_with_dummy_key","children":[],"call":[" add_read_user "]}," GitHosting GitoliteConfig has_admin_key?":{"type":"method","name":"has_admin_key?","children":[],"call":[]}," GitHosting GitoliteConfig default_conf?":{"type":"method","name":"default_conf?","children":[],"call":[]}," GitHosting GitoliteConfig gitolite_conf":{"type":"method","name":"gitolite_conf","children":[],"call":[]}," GitHosting gitolite_conf":{"type":"method","name":"gitolite_conf","children":[],"call":[]}," GitHosting Patches UsersControllerPatch set_public_key_values":{"type":"method","name":"set_public_key_values","children":[],"call":["GitolitePublicKey  new "," redirect_to "," params [] "," params ","@gitolite_public_key nil? ","x id == "," params [] to_i ","x id ","@gitolite_public_keys detect ","@gitolite_user_keys + ","@user gitolite_public_keys active deploy_key find ","@user gitolite_public_keys active deploy_key ","@user gitolite_public_keys active ","@user gitolite_public_keys ","@user gitolite_public_keys active user_key find ","@user gitolite_public_keys active user_key ","GitolitePublicKey  new  nil? ","GitolitePublicKey  new s detect ","@gitolite_user_keys +  detect ","@user gitolite_public_keys active user_key find  + "]}," GitHosting Patches UserPatch included":{"type":"method","name":"included","children":[],"call":[]}," GitHosting Patches ProjectsControllerPatch settings_with_disable_update":{"type":"method","name":"settings_with_disable_update","children":[],"call":["GitHostingObserver  set_update_active ","@project module_enabled? "," settings_without_disable_update "]}," GitHosting Patches ProjectsControllerPatch unarchive_with_disable_update":{"type":"method","name":"unarchive_with_disable_update","children":[],"call":["GitHostingObserver  set_update_active "," unarchive_without_disable_update "]}," GitHosting Patches ProjectsControllerPatch archive_with_disable_update":{"type":"method","name":"archive_with_disable_update","children":[],"call":["GitHostingObserver  set_update_active "," archive_without_disable_update "]}," GitHosting Patches ProjectPatch included":{"type":"method","name":"included","children":[],"call":[]}," GitHosting Patches MembersControllerPatch render_with_trigger_refresh":{"type":"method","name":"render_with_trigger_refresh","children":[],"call":["page replace_html "," render_without_trigger_refresh ","@project repository ","doing_update ! ","x [] ","x is_a? ","x == ","options detect ","@repository is_a? "]}," GitHosting set_repository_limit_cache":{"type":"method","name":"set_repository_limit_cache","children":[],"call":[]}," GitHosting rails_3?":{"type":"method","name":"rails_3?","children":[],"call":[]}," GitHosting multi_repos?":{"type":"method","name":"multi_repos?","children":[],"call":[]}," GitHosting Patches UsersControllerPatch destroy_membership_with_disable_update":{"type":"method","name":"destroy_membership_with_disable_update","children":[],"call":["GitHostingObserver  set_update_active "," destroy_membership_without_disable_update "]}," GitHosting Patches RolesControllerPatch update_with_disable_update":{"type":"method","name":"update_with_disable_update","children":[],"call":["GitHostingObserver  set_update_active "," update_without_disable_update "]}," GitHosting Patches RolesControllerPatch create_with_disable_update":{"type":"method","name":"create_with_disable_update","children":[],"call":["GitHostingObserver  set_update_active "," create_without_disable_update "]}," GitHosting Patches RolesControllerPatch new_with_disable_update":{"type":"method","name":"new_with_disable_update","children":[],"call":["GitHostingObserver  set_update_active "," new_without_disable_update "]}," GitHosting Patches RepositoryPatch InstanceMethods additional_ident_constraints":{"type":"method","name":"additional_ident_constraints","children":[],"call":[" errors add_to_base "," errors ","x id != "," id ","x id ","possibles detect "," new_record? ","possibles any? ","Repository  find_all_by_project_id "," project id "," project "," set_as_default? "," is_default? "," errors add "," identifier_changed? "," identifier_was blank? ! "," identifier_was blank? "," identifier_was "," identifier blank? ! "," identifier blank? "," identifier ","Repository  find_by_identifier "," class repo_ident_unique? "," class ","Project  find_by_identifier "," is_a? ! "," is_a? ","Repository  find_all_by_project_id  detect ","Repository  find_all_by_project_id  any? "]}," GitHosting Patches RepositoryPatch InstanceMethods git_name":{"type":"method","name":"git_name","children":[],"call":[" identifier "," project identifier "," project "," identifier blank? ","GitHosting  multi_repos? ! ","GitHosting  multi_repos? "]}," GitHosting Patches RepositoryPatch InstanceMethods git_label":{"type":"method","name":"git_label","children":[],"call":[" identifier "," project identifier "," project "," identifier blank? ","GitHosting  multi_repos? ! ","GitHosting  multi_repos? "," class repo_ident_unique? "," class ","flags [] "]}," GitHosting Patches RepositoryPatch ClassMethods repo_path_to_git_label":{"type":"method","name":"repo_path_to_git_label","children":[],"call":["repo git_label ","Repository  find_by_path ","@@cached_path == ","Repository  find_by_path  git_label "]}," GitHosting Patches RepositoryPatch ClassMethods find_by_path":{"type":"method","name":"find_by_path","children":[],"call":[" find_by_identifier ","parseit [] ","flags [] "," find_by_identifier_and_project_id ","proj id ","Project  find_by_identifier ","parseit [] nil? "," repo_ident_unique? ","proj gl_repos first ","proj gl_repos ","proj repo_blank_ident ","proj repository ","GitHosting  multi_repos? ! ","GitHosting  multi_repos? ","path match ","path match  [] "," find_by_identifier_and_Project  find_by_identifier ect_id ","Project  find_by_identifier  id ","path match  [] nil? ","Project  find_by_identifier  gl_repos first ","Project  find_by_identifier  gl_repos ","Project  find_by_identifier  repo_blank_ident ","Project  find_by_identifier  repository "]}," GitHosting Patches RepositoryPatch ClassMethods repo_ident_unique?":{"type":"method","name":"repo_ident_unique?","children":[],"call":["(or\n  (send\n    (send\n      (const nil :Setting) :plugin_redmine_git_hosting) :[]\n    (str \"gitRepositoryIdentUnique\"))\n  (const nil :REPO_IDENT_UNIQUE)) == ","Setting  plugin_redmine_git_hosting [] ","Setting  plugin_redmine_git_hosting ","GitHosting  multi_repos? ! ","GitHosting  multi_repos? "]}," GitHosting Patches RepositoriesControllerPatch update_with_scm_settings":{"type":"method","name":"update_with_scm_settings","children":[],"call":["GitHostingObserver  set_update_active ","@repository extra update_attributes "," params [] "," params ","@repository extra "," params [] nil? ! "," params [] nil? "," request put? "," request ","@repository errors any? ! ","@repository errors any? ","@repository errors "," update_without_scm_settings "]}," GitHosting Patches RepositoriesControllerPatch create_with_scm_settings":{"type":"method","name":"create_with_scm_settings","children":[],"call":["GitHostingObserver  set_update_active ","@repository extra update_attributes "," params [] "," params ","@repository extra "," params [] nil? ! "," params [] nil? "," request post? "," request ","@repository errors any? ! ","@repository errors any? ","@repository errors "," create_without_scm_settings "]}," GitHosting Patches ProjectPatch additional_ident_constraints":{"type":"method","name":"additional_ident_constraints","children":[],"call":[" errors add "," errors ","Repository  find_by_identifier_and_type "," identifier "," identifier blank? ! "," identifier blank? "," new_record? "]}," GitHosting Patches ProjectPatch repo_blank_ident":{"type":"method","name":"repo_blank_ident","children":[],"call":["Repository  find_by_project_id "," id "]}," GitHosting Patches ProjectPatch all_repos":{"type":"method","name":"all_repos","children":[],"call":["(send nil :repository) compact "," repository "," repositories ","GitHosting  multi_repos? "]}," GitHosting Patches ProjectPatch gl_repos":{"type":"method","name":"gl_repos","children":[],"call":["x is_a? "," all_repos select "," all_repos "]}," GitHosting Patches MembersControllerPatch update_with_disable_update":{"type":"method","name":"update_with_disable_update","children":[],"call":["GitHostingObserver  set_update_active "," update_without_disable_update "]}," GitHosting Patches MembersControllerPatch create_with_disable_update":{"type":"method","name":"create_with_disable_update","children":[],"call":["GitHostingObserver  set_update_active "," create_without_disable_update "]}," GitHosting Patches GitRepositoryPatch set_git_urls":{"type":"method","name":"set_git_urls","children":[],"call":[" root_url= "," url "," root_url blank? "," root_url "," url= ","GitHosting  repository_path "," url blank? "]}," GitHosting Patches GitAdapterPatch ignore_old_cache_entries":{"type":"method","name":"ignore_old_cache_entries","children":[],"call":["CachedShellRedirector  clear_cache_for_repository "," url "," root_url ","CachedShellRedirector  limit_cache ","Time  parse ","io readline "," git_cmd ","Rails  logger error ","Rails  logger ","CachedShellRedirector  Time  parse _cache "]}," GitHosting Patches GitAdapterPatch git_cmd_with_sudo":{"type":"method","name":"git_cmd_with_sudo","children":[],"call":["CachedShellRedirector  execute ","Repository  repo_path_to_git_label ","(send\n  (lvar :full_args) :map) join "," shell_quote ","e to_s ","full_args map ","full_args << << ","full_args << "," class client_version_above? "," class ","GitHosting  git_exec "," url "," root_url "]}," GitHosting GitAdapterHooks setup_hooks_for_repository":{"type":"method","name":"setup_hooks_for_repository","children":[],"call":[]}," CachedShellRedirector clear_obsolete_cache_entries":{"type":"method","name":"clear_obsolete_cache_entries","children":[],"call":[]}," CachedShellRedirector clear_cache_for_repository":{"type":"method","name":"clear_cache_for_repository","children":[],"call":[]}," CachedShellRedirector expire_at":{"type":"method","name":"expire_at","children":[],"call":[]}," CachedShellRedirector limit_cache":{"type":"method","name":"limit_cache","children":[],"call":[]}," CachedShellRedirector set_cache":{"type":"method","name":"set_cache","children":[],"call":[]}," CachedShellRedirector check_cache":{"type":"method","name":"check_cache","children":[],"call":[]}," CachedShellRedirector compose_key":{"type":"method","name":"compose_key","children":[],"call":[]}," CachedShellRedirector max_cache_size":{"type":"method","name":"max_cache_size","children":[],"call":[]}," CachedShellRedirector max_cache_elements":{"type":"method","name":"max_cache_elements","children":[],"call":[]}," CachedShellRedirector max_cache_time":{"type":"method","name":"max_cache_time","children":[],"call":[]}," CachedShellRedirector exit_shell":{"type":"method","name":"exit_shell","children":[],"call":[" class set_cache "," class ","@my_buffer_overfull ! ","@wrap_thread join ","@wrap_thread run ","@state == "]}," CachedShellRedirector startup_shell":{"type":"method","name":"startup_shell","children":[],"call":["Thread  pass ","proxy_started ! ","Thread  stop ","Redmine Scm Adapters AbstractAdapter  shellout ","io close_write ","io puts ","io binmode ","options [] ","Thread  new ","Thread  abort_on_exception= "]}," CachedShellRedirector initialize":{"type":"method","name":"initialize","children":[],"call":[" startup_shell ","options [] "]}," CachedShellRedirector simple_proxy":{"type":"method","name":"simple_proxy","children":[],"call":["@my_read_stream send "]}," CachedShellRedirector normal_diverter":{"type":"method","name":"normal_diverter","children":[],"call":[" add_to_buffer ","@state == ","@my_read_stream send "]}," CachedShellRedirector enumerator_diverter":{"type":"method","name":"enumerator_diverter","children":[],"call":["@my_read_stream send ","EnumerableRedirector  new ","block call "," add_to_buffer "," block_given? ","@state == "]}," CachedShellRedirector push_to_buffer":{"type":"method","name":"push_to_buffer","children":[],"call":["@my_buffer << ","@my_buffer length + <= "," class max_cache_size "," class ","@my_buffer length + ","nextchunk length ","@my_buffer length ","invalue chr ","invalue is_a? ","invalue chr  length "]}," CachedShellRedirector add_to_buffer":{"type":"method","name":"add_to_buffer","children":[],"call":[" push_to_buffer ","invalue each ","invalue is_a? "]}," CachedShellRedirector EnumerableRedirector each":{"type":"method","name":"each","children":[],"call":["@my_redirector add_to_buffer ","@my_enum each "," to_enum "," block_given? "]}," CachedShellRedirector EnumerableRedirector initialize":{"type":"method","name":"initialize","children":[],"call":[]}," CachedShellRedirector method_missing":{"type":"method","name":"method_missing","children":[],"call":[" send "," class class_eval "," class ","my_name =~ ","my_method to_s "," raise ","@my_read_stream nil? ","IO  instance_methods index nil? ","IO  instance_methods index ","IO  instance_methods ","IO  instance_methods map include? ","my_method to_sym ","IO  instance_methods map ","my_method to_s  =~ "]}," CachedShellRedirector close_write":{"type":"method","name":"close_write","children":[],"call":[" startup_shell "," class check_cache "," class "]}," CachedShellRedirector binmode":{"type":"method","name":"binmode","children":[],"call":[]}," CachedShellRedirector write":{"type":"method","name":"write","children":[],"call":["@my_extra_args << ","obj to_s "]}," CachedShellRedirector putc":{"type":"method","name":"putc","children":[],"call":["@my_extra_args << "," retval_to_s "]}," CachedShellRedirector puts":{"type":"method","name":"puts","children":[],"call":["@my_extra_args << ","args join + ","args join "]}," CachedShellRedirector respond_to?":{"type":"method","name":"respond_to?","children":[],"call":[" block "," args ","IO  instance_methods index nil? ! ","IO  instance_methods index nil? ","IO  instance_methods index ","my_method to_s ","IO  instance_methods ","IO  instance_methods map include? ","my_method to_sym ","IO  instance_methods map "]}," CachedShellRedirector execute":{"type":"method","name":"execute","children":[],"call":[]}," apply_patch":{"type":"method","name":"apply_patch","children":[],"call":["Dispatcher  to_prepare ","ActionDispatch Callbacks  to_prepare ","Rails VERSION MAJOR  >= "]}," RedmineGitHosting Patches UsersControllerPatch included":{"type":"method","name":"included","children":[],"call":[]}," RedmineGitHosting Patches UsersControllerPatch set_public_key_values":{"type":"method","name":"set_public_key_values","children":[],"call":["GitolitePublicKey  new "," redirect_to "," params [] "," params ","@gitolite_public_key nil? ","x id == "," params [] to_i ","x id ","@gitolite_public_keys detect ","@gitolite_user_keys + ","@user gitolite_public_keys active deploy_key find ","@user gitolite_public_keys active deploy_key ","@user gitolite_public_keys active ","@user gitolite_public_keys ","@user gitolite_public_keys active user_key find ","@user gitolite_public_keys active user_key ","@user gitolite_public_keys deploy_key order ","@user gitolite_public_keys deploy_key ","@user gitolite_public_keys user_key order ","@user gitolite_public_keys user_key ","@user gitolite_public_keys deploy_key sorted ","@user gitolite_public_keys user_key sorted ","GitolitePublicKey  new  nil? ","GitolitePublicKey  new s detect ","@gitolite_user_keys +  detect ","@user gitolite_public_keys active user_key find  + ","@user gitolite_public_keys user_key order  + ","@user gitolite_public_keys user_key sorted  + "]}," RedmineGitHosting Patches UsersControllerPatch edit_with_public_keys":{"type":"method","name":"edit_with_public_keys","children":[],"call":[" edit_without_public_keys "," set_public_key_values "]}," RedmineGitHosting Patches UsersControllerPatch destroy_membership_with_disable_update":{"type":"method","name":"destroy_membership_with_disable_update","children":[],"call":["GitHostingObserver  set_update_active "," destroy_membership_without_disable_update "]}," RedmineGitHosting Patches UsersControllerPatch edit_membership_with_disable_update":{"type":"method","name":"edit_membership_with_disable_update","children":[],"call":["GitHostingObserver  set_update_active "," edit_membership_without_disable_update "]}," RedmineGitHosting Patches UsersControllerPatch destroy_with_disable_update":{"type":"method","name":"destroy_with_disable_update","children":[],"call":["GitHostingObserver  set_update_active "," destroy_without_disable_update "]}," RedmineGitHosting Patches UsersControllerPatch update_with_disable_update":{"type":"method","name":"update_with_disable_update","children":[],"call":["GitHostingObserver  set_update_active "," update_without_disable_update "," set_public_key_values "]}," RedmineGitHosting Patches UsersControllerPatch create_with_disable_update":{"type":"method","name":"create_with_disable_update","children":[],"call":["GitHostingObserver  set_update_active "," create_without_disable_update "]}," RedmineGitHosting Patches UserPatch included":{"type":"method","name":"included","children":[],"call":[]}," RedmineGitHosting Patches SysControllerPatch included":{"type":"method","name":"included","children":[],"call":[]}," RedmineGitHosting Patches SysControllerPatch fetch_changesets_with_disable_update":{"type":"method","name":"fetch_changesets_with_disable_update","children":[],"call":["GitHostingObserver  set_update_active "," fetch_changesets_without_disable_update "]}," RedmineGitHosting Patches SettingsControllerPatch included":{"type":"method","name":"included","children":[],"call":[]}," RedmineGitHosting Patches RolesControllerPatch included":{"type":"method","name":"included","children":[],"call":[]}," RedmineGitHosting Patches RolesControllerPatch destroy_with_disable_update":{"type":"method","name":"destroy_with_disable_update","children":[],"call":["GitHostingObserver  set_update_active "," destroy_without_disable_update "]}," RedmineGitHosting Patches RolesControllerPatch update_with_disable_update":{"type":"method","name":"update_with_disable_update","children":[],"call":["GitHostingObserver  set_update_active "," update_without_disable_update "]}," RedmineGitHosting Patches RolesControllerPatch edit_with_disable_update":{"type":"method","name":"edit_with_disable_update","children":[],"call":["GitHostingObserver  set_update_active "," edit_without_disable_update "]}," RedmineGitHosting Patches RolesControllerPatch create_with_disable_update":{"type":"method","name":"create_with_disable_update","children":[],"call":["GitHostingObserver  set_update_active "," create_without_disable_update "]}," RedmineGitHosting Patches RolesControllerPatch new_with_disable_update":{"type":"method","name":"new_with_disable_update","children":[],"call":["GitHostingObserver  set_update_active "," new_without_disable_update "]}," RedmineGitHosting Patches RepositoryPatch included":{"type":"method","name":"included","children":[],"call":[]}," RedmineGitHosting Patches RepositoryPatch InstanceMethods additional_ident_constraints":{"type":"method","name":"additional_ident_constraints","children":[],"call":[" errors add "," errors ","x id != "," id ","x id ","possibles detect "," new_record? ","possibles any? ","Repository  find_all_by_project_id "," project id "," project "," set_as_default? "," is_default? "," identifier_changed? "," identifier_was blank? ! "," identifier_was blank? "," identifier_was "," identifier blank? ! "," identifier blank? "," identifier ","Repository  find_by_identifier "," class repo_ident_unique? "," class ","Project  find_by_identifier "," is_a? ! "," is_a? ","Repository  find_all_by_project_id  detect ","Repository  find_all_by_project_id  any? "]}," RedmineGitHosting Patches RepositoryPatch InstanceMethods git_name":{"type":"method","name":"git_name","children":[],"call":[" identifier "," project identifier "," project "," identifier blank? ","GitHosting  multi_repos? ! ","GitHosting  multi_repos? "]}," RedmineGitHosting Patches RepositoryPatch InstanceMethods git_label":{"type":"method","name":"git_label","children":[],"call":[" identifier "," project identifier "," project "," identifier blank? ","GitHosting  multi_repos? ! ","GitHosting  multi_repos? "," class repo_ident_unique? "," class ","flags [] "]}," RedmineGitHosting Patches RepositoryPatch InstanceMethods extra=":{"type":"method","name":"extra=","children":[],"call":[" git_extra= "]}," RedmineGitHosting Patches RepositoryPatch InstanceMethods extra":{"type":"method","name":"extra","children":[],"call":["GitHostingObserver  set_update_active "," project "," git_extra= ","GitRepositoryExtra  new ","retval nil? "," git_extra ","RepositoryGitExtra  new ","GitRepositoryExtra  new  nil? "," git_extra  nil? ","RepositoryGitExtra  new  nil? "]}," RedmineGitHosting Patches RepositoryPatch ClassMethods fetch_changesets_with_disable_update":{"type":"method","name":"fetch_changesets_with_disable_update","children":[],"call":["GitHostingObserver  set_update_active "," fetch_changesets_without_disable_update "]}," RedmineGitHosting Patches RepositoryPatch ClassMethods factory_with_git_extra_init":{"type":"method","name":"factory_with_git_extra_init","children":[],"call":["GitHosting  logger error "," project to_s "," project ","GitHosting  logger ","new_repo extra nil? ","new_repo extra ","new_repo is_a? "," factory_without_git_extra_init "," factory_without_git_extra_init  extra nil? "," factory_without_git_extra_init  extra "," factory_without_git_extra_init  is_a? "]}," RedmineGitHosting Patches RepositoryPatch ClassMethods fetch_changesets_for_project":{"type":"method","name":"fetch_changesets_for_project","children":[],"call":[" logger error ","e message "," logger ","repo fetch_changesets ","Repository  find_all_by_project_id each ","Repository  find_all_by_project_id ","p id ","Project  find_by_identifier ","GitHosting  logger error ","GitHosting  logger ","repository fetch_changesets ","project id ","reProject  find_by_identifier o fetch_changesets ","ReProject  find_by_identifier ository  find_all_by_Project  find_by_identifier roject_id each ","Repository  find_all_by_Project  find_by_identifier _id each ","ReProject  find_by_identifier ository  find_all_by_Project  find_by_identifier roject_id ","Repository  find_all_by_Project  find_by_identifier _id ","Project  find_by_identifier  id ","reProject  find_by_identifier ository fetch_changesets ","Project  find_by_identifier roject id "]}," RedmineGitHosting Patches RepositoryPatch ClassMethods repo_path_to_git_label":{"type":"method","name":"repo_path_to_git_label","children":[],"call":["repo git_label ","Repository  find_by_path ","@@cached_path == ","Repository  find_by_path  git_label "]}," RedmineGitHosting Patches RepositoryPatch ClassMethods find_by_path":{"type":"method","name":"find_by_path","children":[],"call":[" find_by_identifier ","parseit [] ","flags [] "," find_by_identifier_and_project_id ","proj id ","Project  find_by_identifier ","parseit [] nil? "," repo_ident_unique? ","proj gl_repos first ","proj gl_repos ","proj repo_blank_ident ","proj repository ","GitHosting  multi_repos? ! ","GitHosting  multi_repos? ","path match ","proj gitolite_repos first ","proj gitolite_repos ","path match  [] "," find_by_identifier_and_Project  find_by_identifier ect_id ","Project  find_by_identifier  id ","path match  [] nil? ","Project  find_by_identifier  gl_repos first ","Project  find_by_identifier  gl_repos ","Project  find_by_identifier  repo_blank_ident ","Project  find_by_identifier  repository ","Project  find_by_identifier  gitolite_repos first ","Project  find_by_identifier  gitolite_repos "]}," RedmineGitHosting Patches RepositoryPatch ClassMethods repo_ident_unique?":{"type":"method","name":"repo_ident_unique?","children":[],"call":["GitHostingConf  repo_ident_unique? ","GitHosting  multi_repos? ! ","GitHosting  multi_repos? ","GitHostingConf  unique_repo_identifier? "]}," RedmineGitHosting Patches RepositoryCiaFilters included":{"type":"method","name":"included","children":[],"call":[]}," RedmineGitHosting Patches RepositoryCiaFilters FilterMethods notified?":{"type":"method","name":"notified?","children":[],"call":[" find nil? ! "," find nil? "," find ","scmid scmid ","scmid instance_of? ","scmid scmid  scmid scmid  ","scmid scmid  instance_of? "]}," RedmineGitHosting Patches RepositoryCiaFilters FilterMethods notified":{"type":"method","name":"notified","children":[],"call":[" push ","GitCiaNotification  new ","scmid scmid ","scmid instance_of? ","scmid scmid  scmid scmid  ","scmid scmid  instance_of? "]}," RedmineGitHosting Patches RepositoriesControllerPatch included":{"type":"method","name":"included","children":[],"call":[]}," RedmineGitHosting Patches RepositoriesControllerPatch update_with_scm_settings":{"type":"method","name":"update_with_scm_settings","children":[],"call":["GitHostingObserver  set_update_active ","@repository extra update_attributes "," params [] "," params ","@repository extra "," params [] nil? ! "," params [] nil? "," request put? "," request ","@repository errors any? ! ","@repository errors any? ","@repository errors "," update_without_scm_settings "]}," RedmineGitHosting Patches RepositoriesControllerPatch create_with_scm_settings":{"type":"method","name":"create_with_scm_settings","children":[],"call":["GitHostingObserver  set_update_active ","@repository extra update_attributes "," params [] "," params ","@repository extra "," params [] nil? ! "," params [] nil? "," request post? "," request ","@repository errors any? ! ","@repository errors any? ","@repository errors "," create_without_scm_settings "]}," RedmineGitHosting Patches RepositoriesControllerPatch edit_with_scm_settings":{"type":"method","name":"edit_with_scm_settings","children":[],"call":["GitHostingObserver  set_update_active "," edit_without_scm_settings ","GitHostingObserver  bracketed_update_repositories ","@project repository nil? ! ","@project repository nil? ","@project repository ","page replace_html "," render_main_menu ","@project reload ","@project repository ! "," render ","@repository save ","@repository extra update_attributes "," params [] "," params ","@repository extra "," params [] nil? ! "," params [] nil? ","@repository attributes= "," request post? "," request ","@repository project= ","Repository  factory ","@repository ! ","@project repository is_a? "," params [] == "," params [] []= ","GitHosting  repository_path ","GitHosting  logger debug ","GitHosting  logger ","Repository  factory  save ","@project repository  save ","Repository  factory  extra update_attributes ","@project repository  extra update_attributes ","Repository  factory  extra ","@project repository  extra ","Repository  factory  attributes= ","@project repository  attributes= ","Repository  factory  project= ","@project repository  project= ","Repository  factory  ! ","@project repository  ! "]}," RedmineGitHosting Patches RepositoriesControllerPatch show_with_git_instructions":{"type":"method","name":"show_with_git_instructions","children":[],"call":[" show_without_git_instructions "," render ","@project all_repos ","@repository entries blank? ","@repository entries ","@repository is_a? ","@rev blank? "]}," RedmineGitHosting Patches ProjectsControllerPatch included":{"type":"method","name":"included","children":[],"call":[]}," RedmineGitHosting Patches ProjectsControllerPatch settings_with_disable_update":{"type":"method","name":"settings_with_disable_update","children":[],"call":["GitHostingObserver  set_update_active ","@project module_enabled? "," settings_without_disable_update "]}," RedmineGitHosting Patches ProjectsControllerPatch unarchive_with_disable_update":{"type":"method","name":"unarchive_with_disable_update","children":[],"call":["GitHostingObserver  set_update_active "," unarchive_without_disable_update "]}," RedmineGitHosting Patches ProjectsControllerPatch archive_with_disable_update":{"type":"method","name":"archive_with_disable_update","children":[],"call":["GitHostingObserver  set_update_active "," archive_without_disable_update "]}," RedmineGitHosting Patches ProjectsControllerPatch destroy_with_disable_update":{"type":"method","name":"destroy_with_disable_update","children":[],"call":["GitHostingObserver  set_update_active "," destroy_without_disable_update "]}," RedmineGitHosting Patches ProjectsControllerPatch update_with_disable_update":{"type":"method","name":"update_with_disable_update","children":[],"call":["GitHostingObserver  set_update_active ","repo url != ","repo root_url ","repo url ","GitHosting  repository_path ","@project gl_repos detect ","@project gl_repos "," disable_git_daemon_if_not_public "," update_without_disable_update "]}," RedmineGitHosting Patches ProjectsControllerPatch create_with_disable_update":{"type":"method","name":"create_with_disable_update","children":[],"call":["GitHostingObserver  set_update_active "," disable_git_daemon_if_not_public "," git_repo_init ","@project save "," validate_parent_id "," create_without_disable_update "]}," RedmineGitHosting Patches ProjectsControllerPatch disable_git_daemon_if_not_public":{"type":"method","name":"disable_git_daemon_if_not_public","children":[],"call":["repo save ","repo extra save ","repo extra ","repo extra git_daemon= ","@project is_public ! ","@project is_public ","repo extra git_daemon == ","repo extra git_daemon ","@project gl_repos each ","@project gl_repos "]}," RedmineGitHosting Patches ProjectsControllerPatch git_repo_init":{"type":"method","name":"git_repo_init","children":[],"call":["@project repository= ","@project repositories << ","@project repositories ","GitHosting  multi_repos? ","Repository  factory ","GitHostingConf  all_projects_use_git? ","@project module_enabled? ","membership save ","Member  new ","@project id ","User  current ","users length == ","users length ","@project member_principals map compact uniq ","@project member_principals map compact ","@project member_principals map ","@project member_principals ","@project Repository  factory sitory= ","@project Repository  factory sitories << ","@project Repository  factory sitories ","GitHosting  multi_Repository  factory s? ","Member  new  save ","@project member_principals map compact uniq  length == ","@project member_principals map compact uniq  length "]}," RedmineGitHosting Patches ProjectPatch included":{"type":"method","name":"included","children":[],"call":[]}," RedmineGitHosting Patches ProjectPatch additional_ident_constraints":{"type":"method","name":"additional_ident_constraints","children":[],"call":[" errors add "," errors ","Repository  find_by_identifier_and_type "," identifier "," identifier blank? ! "," identifier blank? "," new_record? "]}," RedmineGitHosting Patches ProjectPatch repo_blank_ident":{"type":"method","name":"repo_blank_ident","children":[],"call":["Repository  find_by_project_id "," id ","Repository  where first ","Repository  where ","scope where or first ","scope where or ","scope where ","Repository  where  where or first ","Repository  where  where or ","Repository  where  where "]}," RedmineGitHosting Patches ProjectPatch all_repos":{"type":"method","name":"all_repos","children":[],"call":["(send nil :repository) compact "," repository "," repositories ","GitHosting  multi_repos? "]}," RedmineGitHosting Patches ProjectPatch gl_repos":{"type":"method","name":"gl_repos","children":[],"call":["x is_a? "," all_repos select "," all_repos "]}," RedmineGitHosting Patches MyControllerPatch included":{"type":"method","name":"included","children":[],"call":[]}," RedmineGitHosting Patches MyControllerPatch account_with_public_keys":{"type":"method","name":"account_with_public_keys","children":[],"call":["GitolitePublicKey  new "," redirect_to "," params [] "," params ","@gitolite_public_key nil? ","x id == "," params [] to_i ","x id ","@gitolite_public_keys detect ","@gitolite_user_keys + ","@user gitolite_public_keys active deploy_key find ","@user gitolite_public_keys active deploy_key ","@user gitolite_public_keys active ","@user gitolite_public_keys ","@user gitolite_public_keys active user_key find ","@user gitolite_public_keys active user_key "," account_without_public_keys ","GitolitePublicKey  new  nil? ","GitolitePublicKey  new s detect ","@gitolite_user_keys +  detect ","@user gitolite_public_keys active user_key find  + "]}," RedmineGitHosting Patches MembersControllerPatch included":{"type":"method","name":"included","children":[],"call":[]}," RedmineGitHosting Patches MembersControllerPatch render_with_trigger_refresh":{"type":"method","name":"render_with_trigger_refresh","children":[],"call":["page replace_html ","@repository is_a? ","@project repository "," render_without_trigger_refresh ","doing_update ! ","x [] ","x is_a? ","x == ","options detect "]}," RedmineGitHosting Patches MembersControllerPatch destroy_with_disable_update":{"type":"method","name":"destroy_with_disable_update","children":[],"call":["GitHostingObserver  set_update_active "," destroy_without_disable_update "]}," RedmineGitHosting Patches MembersControllerPatch update_with_disable_update":{"type":"method","name":"update_with_disable_update","children":[],"call":["GitHostingObserver  set_update_active "," update_without_disable_update "]}," RedmineGitHosting Patches MembersControllerPatch edit_with_disable_update":{"type":"method","name":"edit_with_disable_update","children":[],"call":["GitHostingObserver  set_update_active "," edit_without_disable_update "]}," RedmineGitHosting Patches MembersControllerPatch create_with_disable_update":{"type":"method","name":"create_with_disable_update","children":[],"call":["GitHostingObserver  set_update_active "," create_without_disable_update "]}," RedmineGitHosting Patches MembersControllerPatch new_with_disable_update":{"type":"method","name":"new_with_disable_update","children":[],"call":["GitHostingObserver  set_update_active "," new_without_disable_update "]}," RedmineGitHosting Patches GroupsControllerPatch included":{"type":"method","name":"included","children":[],"call":[]}," RedmineGitHosting Patches GroupsControllerPatch do_single_update":{"type":"method","name":"do_single_update","children":[],"call":["GitHostingObserver  set_update_active "]}," RedmineGitHosting Patches GroupsControllerPatch disable_git_observer_updates":{"type":"method","name":"disable_git_observer_updates","children":[],"call":["GitHostingObserver  set_update_active "]}," RedmineGitHosting Patches GitRepositoryPatch included":{"type":"method","name":"included","children":[],"call":[]}," RedmineGitHosting Patches GitRepositoryPatch fetch_changesets_with_disable_update":{"type":"method","name":"fetch_changesets_with_disable_update","children":[],"call":["GitHostingObserver  set_update_active "," fetch_changesets_without_disable_update "]}," RedmineGitHosting Patches GitRepositoryPatch extra_report_last_commit_with_always_true":{"type":"method","name":"extra_report_last_commit_with_always_true","children":[],"call":[]}," RedmineGitHosting Patches GitRepositoryPatch report_last_commit_with_always_true":{"type":"method","name":"report_last_commit_with_always_true","children":[],"call":[]}," RedmineGitHosting Patches GitRepositoryPatch set_git_urls":{"type":"method","name":"set_git_urls","children":[],"call":[" root_url= "," url "," root_url blank? "," root_url "," url= ","GitHosting  repository_path "," url blank? "]}," RedmineGitHosting Patches GitAdapterPatch ignore_old_cache_entries":{"type":"method","name":"ignore_old_cache_entries","children":[],"call":["CachedShellRedirector  clear_cache_for_repository "," url "," root_url ","CachedShellRedirector  limit_cache ","Time  parse ","io readline "," git_cmd ","Rails  logger error ","Rails  logger ","CachedShellRedirector  Time  parse _cache "]}," RedmineGitHosting Patches GitAdapterPatch git_cmd_with_sudo":{"type":"method","name":"git_cmd_with_sudo","children":[],"call":["CachedShellRedirector  execute ","Repository  repo_path_to_git_label ","(send\n  (lvar :full_args) :map) join "," shell_quote ","e to_s ","full_args map ","full_args << << ","full_args << "," class client_version_above? "," class ","GitHosting  git_exec "," url "," root_url "]}," RedmineGitHosting Patches GitAdapterPatch scm_cmd_with_sudo":{"type":"method","name":"scm_cmd_with_sudo","children":[],"call":[" git_cmd_with_sudo "]}," RedmineGitHosting Patches GitAdapterPatch ClassMethods client_command_with_sudo":{"type":"method","name":"client_command_with_sudo","children":[],"call":["GitHosting  git_exec "]}," RedmineGitHosting Patches GitAdapterPatch ClassMethods sq_bin_with_sudo":{"type":"method","name":"sq_bin_with_sudo","children":[],"call":["Redmine Scm Adapters GitAdapter  shell_quote ","GitHosting  git_exec "]}," RedmineGitHosting Patches GitAdapterPatch included":{"type":"method","name":"included","children":[],"call":[]}," GitHosting GitoliteAccessRights delete":{"type":"method","name":"delete","children":[],"call":["@rights [] delete ","@rights [] ","perm to_sym ","@rights []= ","@rights [] - ","users is_a? ","@rights [] nil? "]}," GitHosting GitoliteConfig delete_admin_keys":{"type":"method","name":"delete_admin_keys","children":[],"call":[" repository delete "," repository "]}," GitHosting GitoliteConfig add_admin_keys":{"type":"method","name":"add_admin_keys","children":[],"call":[" repository add "," repository "]}," GitHosting GitoliteConfig set_admin_keys":{"type":"method","name":"set_admin_keys","children":[],"call":[" repository set "," repository "]}," GitHosting GitoliteConfig get_admin_keys":{"type":"method","name":"get_admin_keys","children":[],"call":[" repository get "," repository "]}," GitHosting GitoliteConfig content_header":{"type":"method","name":"content_header","children":[],"call":["Time  now ","plugin url ","Redmine Plugin  find ","Redmine Plugin  find  url "]}," GitHostingConf git_cache_max_elements":{"type":"method","name":"git_cache_max_elements","children":[],"call":[]}," GitHostingConf git_cache_max_size":{"type":"method","name":"git_cache_max_size","children":[],"call":[]}," GitHostingConf git_cache_max_time":{"type":"method","name":"git_cache_max_time","children":[],"call":[]}," GitHostingConf git_hooks_debug?":{"type":"method","name":"git_hooks_debug?","children":[],"call":[]}," GitHostingConf git_force_hooks_update?":{"type":"method","name":"git_force_hooks_update?","children":[],"call":[]}," GitHostingConf git_hooks_are_asynchronous?":{"type":"method","name":"git_hooks_are_asynchronous?","children":[],"call":[]}," GitHostingConf delete_git_repositories?":{"type":"method","name":"delete_git_repositories?","children":[],"call":[]}," GitHostingConf gitolite_config_has_admin_key?":{"type":"method","name":"gitolite_config_has_admin_key?","children":[],"call":[]}," GitHostingConf gitolite_config_file":{"type":"method","name":"gitolite_config_file","children":[],"call":[]}," GitHostingConf repo_ident_unique?":{"type":"method","name":"repo_ident_unique?","children":[],"call":[]}," GitHostingConf all_projects_use_git?":{"type":"method","name":"all_projects_use_git?","children":[],"call":[]}," GitHostingConf git_server":{"type":"method","name":"git_server","children":[],"call":[]}," GitHostingConf git_user":{"type":"method","name":"git_user","children":[],"call":[]}," GitHostingConf gitolite_ssh_public_key":{"type":"method","name":"gitolite_ssh_public_key","children":[],"call":[]}," GitHostingConf gitolite_ssh_private_key":{"type":"method","name":"gitolite_ssh_private_key","children":[],"call":[]}," GitHostingConf script_parent":{"type":"method","name":"script_parent","children":[],"call":[]}," GitHostingConf script_dir":{"type":"method","name":"script_dir","children":[],"call":[]}," GitHostingConf temp_data_dir":{"type":"method","name":"temp_data_dir","children":[],"call":[]}," GitHostingConf http_server_subdir":{"type":"method","name":"http_server_subdir","children":[],"call":[]}," GitHostingConf http_server":{"type":"method","name":"http_server","children":[],"call":[]}," GitHostingConf repository_hierarchy":{"type":"method","name":"repository_hierarchy","children":[],"call":[]}," GitHostingConf repository_redmine_subdir":{"type":"method","name":"repository_redmine_subdir","children":[],"call":[]}," GitHostingConf repository_base":{"type":"method","name":"repository_base","children":[],"call":[]}," GitHostingConf lock_wait_time":{"type":"method","name":"lock_wait_time","children":[],"call":[]}," GitHostingConf preserve_time":{"type":"method","name":"preserve_time","children":[],"call":[]}," GitHostingConf recycle_bin":{"type":"method","name":"recycle_bin","children":[],"call":[]}," GitHosting print_out_hash":{"type":"method","name":"print_out_hash","children":[],"call":[]}," GitHosting promote_array":{"type":"method","name":"promote_array","children":[],"call":[]}," GitHosting hash_set_diff":{"type":"method","name":"hash_set_diff","children":[],"call":[]}," GitHosting longest_match_ordinal":{"type":"method","name":"longest_match_ordinal","children":[],"call":[]}," GitHosting gitolite_version":{"type":"method","name":"gitolite_version","children":[],"call":[]}," RedmineGitHosting Patches UsersHelperPatch InstanceMethods user_settings_tabs_with_public_keys":{"type":"method","name":"user_settings_tabs_with_public_keys","children":[],"call":["tabs << "," user_settings_tabs_without_public_keys "," user_settings_tabs_without_public_keys  << "," user_settings_ user_settings_tabs_without_public_keys _without_public_keys "]}," RedmineGitHosting Patches UsersHelperPatch included":{"type":"method","name":"included","children":[],"call":[]}," GitHostingConf ssh_server_local_port":{"type":"method","name":"ssh_server_local_port","children":[],"call":[]}," GitHosting gitolite_version_output":{"type":"method","name":"gitolite_version_output","children":[],"call":[]}," GitHosting git_repository_exists_in_db?":{"type":"method","name":"git_repository_exists_in_db?","children":[],"call":[]}," RedmineGitHosting Patches UsersHelperPatch InstanceMethods user_settings_tabs_with_git_hosting":{"type":"method","name":"user_settings_tabs_with_git_hosting","children":[],"call":["tabs << "," user_settings_tabs_without_git_hosting "," user_settings_tabs_without_git_hosting  << "," user_settings_ user_settings_tabs_without_git_hosting _without_git_hosting "]}," RedmineGitHosting Patches UsersControllerPatch InstanceMethods set_public_key_values":{"type":"method","name":"set_public_key_values","children":[],"call":["GitolitePublicKey  new "," redirect_to "," params [] "," params ","@gitolite_public_key nil? ","x id == "," params [] to_i ","x id ","@gitolite_public_keys detect ","@gitolite_user_keys + ","@user gitolite_public_keys active deploy_key find ","@user gitolite_public_keys active deploy_key ","@user gitolite_public_keys active ","@user gitolite_public_keys ","@user gitolite_public_keys active user_key find ","@user gitolite_public_keys active user_key ","@user gitolite_public_keys deploy_key active order ","@user gitolite_public_keys deploy_key active ","@user gitolite_public_keys deploy_key ","@user gitolite_public_keys user_key active order ","@user gitolite_public_keys user_key active ","@user gitolite_public_keys user_key ","@user gitolite_public_keys deploy_key order ","@user gitolite_public_keys user_key order ","GitolitePublicKey  new  nil? ","GitolitePublicKey  new s detect ","@gitolite_user_keys +  detect ","@user gitolite_public_keys active user_key find  + ","@user gitolite_public_keys user_key active order  + ","@user gitolite_public_keys user_key order  + "]}," RedmineGitHosting Patches UsersControllerPatch InstanceMethods destroy_membership_with_git_hosting":{"type":"method","name":"destroy_membership_with_git_hosting","children":[],"call":["GitHostingObserver  set_update_active "," destroy_membership_without_git_hosting "]}," RedmineGitHosting Patches UsersControllerPatch InstanceMethods edit_membership_with_git_hosting":{"type":"method","name":"edit_membership_with_git_hosting","children":[],"call":["GitHostingObserver  set_update_active "," edit_membership_without_git_hosting "]}," RedmineGitHosting Patches UsersControllerPatch InstanceMethods destroy_with_git_hosting":{"type":"method","name":"destroy_with_git_hosting","children":[],"call":["GitHostingObserver  set_update_active "," destroy_without_git_hosting "," destroy_ssh_keys "," ssh_keys_to_destroy "]}," RedmineGitHosting Patches UsersControllerPatch InstanceMethods update_with_git_hosting":{"type":"method","name":"update_with_git_hosting","children":[],"call":["GitHostingObserver  set_update_active "," update_without_git_hosting "," set_public_key_values "," update_projects ","@user status_has_changed? "]}," RedmineGitHosting Patches UsersControllerPatch InstanceMethods edit_with_public_keys":{"type":"method","name":"edit_with_public_keys","children":[],"call":[" edit_without_public_keys "," set_public_key_values "]}," RedmineGitHosting Patches UsersControllerPatch InstanceMethods create_with_git_hosting":{"type":"method","name":"create_with_git_hosting","children":[],"call":["GitHostingObserver  set_update_active "," create_without_git_hosting "]}," RedmineGitHosting Patches UserPatch InstanceMethods delete_ssh_keys":{"type":"method","name":"delete_ssh_keys","children":[],"call":["GitHosting  resync_gitolite ","GitHosting  logger info ","ssh_key identifier ","GitHosting  logger ","repo_key []= ","ssh_key owner ","ssh_key location ","ssh_key key ","Hash  new "," gitolite_public_keys each "," gitolite_public_keys "," login "," gitolite_public_keys any? ","RedmineGitolite GitHosting  logger info ","RedmineGitolite GitHosting  logger ","Hash  new  []= "]}," RedmineGitHosting Patches UserPatch InstanceMethods update_ssh_keys":{"type":"method","name":"update_ssh_keys","children":[],"call":["GitHosting  resync_gitolite ","project_list uniq ","GitHosting  logger info ","GitHosting  logger ","project_list length > ","project_list length ","project_list push ","project id ","role [] each ","role [] "," projects_by_role each "," projects_by_role ","Array  new "," id "," login ","Array  new  uniq ","Array  new  length > ","Array  new  length ","Array  new  push "]}," RedmineGitHosting Patches SysControllerPatch InstanceMethods fetch_changesets_with_git_hosting":{"type":"method","name":"fetch_changesets_with_git_hosting","children":[],"call":["GitHostingObserver  set_update_active "," fetch_changesets_without_git_hosting ","RedmineGitHosting Recycle  delete_expired_files ","RedmineGitHosting  logger info ","RedmineGitHosting  logger ","GitoliteAccessor  flush_git_cache "," gitolite_accessor purge_recycle_bin "," gitolite_accessor "," gitolite_accessor flush_git_cache "]}," RedmineGitHosting Patches RolesControllerPatch InstanceMethods resync_gitolite":{"type":"method","name":"resync_gitolite","children":[],"call":["GitHosting  resync_gitolite ","projects length ","GitHosting  logger info ","GitHosting  logger ","projects length > ","Project  active_or_archived find ","Project  active_or_archived ","RedmineGitolite GitHosting  resync_gitolite ","RedmineGitolite GitHosting  logger info ","RedmineGitolite GitHosting  logger ","Project  active_or_archived includes all ","Project  active_or_archived includes ","Project  active_or_archived find  length ","Project  active_or_archived includes all  length ","Project  active_or_archived find  length > ","Project  active_or_archived includes all  length > "]}," RedmineGitHosting Patches RolesControllerPatch InstanceMethods destroy_with_git_hosting":{"type":"method","name":"destroy_with_git_hosting","children":[],"call":["GitHostingObserver  set_update_active "," destroy_without_git_hosting "," resync_gitolite "," call_gitolite "]}," RedmineGitHosting Patches RolesControllerPatch InstanceMethods permissions_with_git_hosting":{"type":"method","name":"permissions_with_git_hosting","children":[],"call":["GitHostingObserver  set_update_active "," permissions_without_git_hosting "," resync_gitolite "," request post? "," request "," call_gitolite "]}," RedmineGitHosting Patches RolesControllerPatch InstanceMethods update_with_git_hosting":{"type":"method","name":"update_with_git_hosting","children":[],"call":["GitHostingObserver  set_update_active "," update_without_git_hosting "," resync_gitolite "," call_gitolite "]}," RedmineGitHosting Patches RolesControllerPatch InstanceMethods edit_with_git_hosting":{"type":"method","name":"edit_with_git_hosting","children":[],"call":["GitHostingObserver  set_update_active "," edit_without_git_hosting "]}," RedmineGitHosting Patches RolesControllerPatch InstanceMethods create_with_git_hosting":{"type":"method","name":"create_with_git_hosting","children":[],"call":["GitHostingObserver  set_update_active "," create_without_git_hosting "," resync_gitolite "," call_gitolite "]}," RedmineGitHosting Patches RolesControllerPatch InstanceMethods new_with_git_hosting":{"type":"method","name":"new_with_git_hosting","children":[],"call":["GitHostingObserver  set_update_active "," new_without_git_hosting "]}," RedmineGitHosting Patches RepositoryPatch InstanceMethods available_urls":{"type":"method","name":"available_urls","children":[],"call":["hash []= "," extra [] == "," extra [] "," extra "," project is_public "," project ","User  current allowed_to? ","User  current ","User  current anonymous? ! ","User  current anonymous? ","GitHosting  git_access_url ","GitHostingConf  ssh_server_domain ","GitHostingConf  ssh_server_domain empty? ! ","GitHostingConf  ssh_server_domain empty? ","GitHostingConf  gitolite_user ","User  current login ","GitHosting  http_access_url ","GitHostingConf  https_server_domain ","GitHostingConf  https_server_domain empty? ! ","GitHostingConf  https_server_domain empty? ","GitHostingConf  http_server_domain ","GitHostingConf  http_server_domain empty? ! ","GitHostingConf  http_server_domain empty? ","Hash  new ","Hash  new  []= ","GitHostingConf  GitHostingConf  https_server_domain  ","GitHostingConf  GitHostingConf  https_server_domain  empty? ! ","GitHostingConf  GitHostingConf  https_server_domain  empty? ","GitHostingConf  GitHostingConf  http_server_domain  ","GitHostingConf  GitHostingConf  http_server_domain  empty? ! ","GitHostingConf  GitHostingConf  http_server_domain  empty? "]}," RedmineGitHosting Patches RepositoryPatch ClassMethods fetch_changesets_with_git_hosting":{"type":"method","name":"fetch_changesets_with_git_hosting","children":[],"call":["GitHostingObserver  set_update_active "," fetch_changesets_without_git_hosting "]}," RedmineGitHosting Patches RepositoryPatch ClassMethods factory_with_git_hosting":{"type":"method","name":"factory_with_git_hosting","children":[],"call":["GitHosting  logger error "," project to_s "," project ","GitHosting  logger ","new_repo extra nil? ","new_repo extra ","new_repo is_a? "," factory_without_git_hosting ","RedmineGitolite GitHosting  logger error ","RedmineGitolite GitHosting  logger "," factory_without_git_hosting  extra nil? "," factory_without_git_hosting  extra "," factory_without_git_hosting  is_a? "]}," RedmineGitHosting Patches RepositoryGitPatch InstanceMethods set_git_urls":{"type":"method","name":"set_git_urls","children":[],"call":[" root_url= "," url "," root_url blank? "," root_url "," url= ","GitHosting  repository_path "," url blank? "," gitolite_repository_path "]}," RedmineGitHosting Patches RepositoryGitPatch InstanceMethods fetch_changesets_with_git_hosting":{"type":"method","name":"fetch_changesets_with_git_hosting","children":[],"call":["GitHostingObserver  set_update_active "," fetch_changesets_without_git_hosting "]}," RedmineGitHosting Patches RepositoryGitPatch InstanceMethods extra_report_last_commit_with_git_hosting":{"type":"method","name":"extra_report_last_commit_with_git_hosting","children":[],"call":[]}," RedmineGitHosting Patches RepositoryGitPatch InstanceMethods report_last_commit_with_git_hosting":{"type":"method","name":"report_last_commit_with_git_hosting","children":[],"call":[]}," RedmineGitHosting Patches RepositoryGitPatch included":{"type":"method","name":"included","children":[],"call":[]}," RedmineGitHosting Patches RepositoriesControllerPatch InstanceMethods update_with_git_hosting":{"type":"method","name":"update_with_git_hosting","children":[],"call":["GitHostingObserver  set_update_active ","@repository extra update_attributes "," params [] "," params ","@repository extra "," params [] nil? ! "," params [] nil? "," request put? "," request ","@repository errors any? ! ","@repository errors any? ","@repository errors "," update_without_git_hosting ","RedmineGitolite GitHosting  resync_gitolite ","@repository id ","@repository extra [] ","@repository gitolite_repository_name ","User  current login ","User  current ","RedmineGitolite GitHosting  logger info ","RedmineGitolite GitHosting  logger ","@repository extra [] != "," params [] [] "," params [] has_key? "," params [] []= "," params [] [] == ","@repository is_a? "," call_use_cases "]}," RedmineGitHosting Patches RepositoriesControllerPatch InstanceMethods edit_with_git_hosting":{"type":"method","name":"edit_with_git_hosting","children":[],"call":["GitHostingObserver  set_update_active "," edit_without_git_hosting ","GitHostingObserver  bracketed_update_repositories ","@project repository nil? ! ","@project repository nil? ","@project repository ","page replace_html "," render_main_menu ","@project reload ","@project repository ! "," render ","@repository save ","@repository extra update_attributes "," params [] "," params ","@repository extra "," params [] nil? ! "," params [] nil? ","@repository attributes= "," request post? "," request ","@repository project= ","Repository  factory ","@repository ! ","@project repository is_a? "," params [] == "," params [] []= ","GitHosting  repository_path ","Repository  factory  save ","@project repository  save ","Repository  factory  extra update_attributes ","@project repository  extra update_attributes ","Repository  factory  extra ","@project repository  extra ","Repository  factory  attributes= ","@project repository  attributes= ","Repository  factory  project= ","@project repository  project= ","Repository  factory  ! ","@project repository  ! "]}," RedmineGitHosting Patches RepositoriesControllerPatch InstanceMethods create_with_git_hosting":{"type":"method","name":"create_with_git_hosting","children":[],"call":["GitHostingObserver  set_update_active ","@repository extra update_attributes "," params [] "," params ","@repository extra "," params [] nil? ! "," params [] nil? "," request post? "," request ","@repository errors any? ! ","@repository errors any? ","@repository errors "," create_without_git_hosting ","RedmineGitolite GitHosting  resync_gitolite ","@repository id ","@repository gitolite_repository_name ","User  current login ","User  current ","RedmineGitolite GitHosting  logger info ","RedmineGitolite GitHosting  logger "," params [] [] == "," params [] [] "," params [] []= ","@repository is_a? "," call_use_cases "]}," RedmineGitHosting Patches RepositoriesControllerPatch InstanceMethods show_with_git_hosting":{"type":"method","name":"show_with_git_hosting","children":[],"call":[" show_without_git_hosting "," render ","@project all_repos ","@rev blank? ","@repository is_a? ","@project gitolite_repos ","@repository empty? "]}," RedmineGitHosting Patches ProjectsControllerPatch InstanceMethods disable_git_daemon_if_not_public":{"type":"method","name":"disable_git_daemon_if_not_public","children":[],"call":["repository extra save ","repository extra ","repository extra git_daemon= ","@project is_public ! ","@project is_public ","repository extra git_daemon == ","repository extra git_daemon ","@project gitolite_repos each ","@project gitolite_repos ","RedmineGitolite GitHosting  resync_gitolite ","@project id ","RedmineGitolite GitHosting  logger info ","RedmineGitolite GitHosting  logger "]}," RedmineGitHosting Patches ProjectsControllerPatch InstanceMethods git_repo_init":{"type":"method","name":"git_repo_init","children":[],"call":["@project repository= ","@project repositories << ","@project repositories ","GitHosting  multi_repos? ","Repository  factory ","GitHostingConf  all_projects_use_git? ","@project module_enabled? ","membership save ","Member  new ","@project id ","User  current ","users length == ","users length ","@project member_principals map compact uniq ","@project member_principals map compact ","@project member_principals map ","@project member_principals ","RedmineGitolite GitHosting  resync_gitolite ","repository id ","repository gitolite_repository_name ","User  current login ","RedmineGitolite GitHosting  logger info ","RedmineGitolite GitHosting  logger ","RedmineGitolite ConfigRedmine  get_setting ","repository is_default= ","repository extra_info []= ","repository extra_info ","repository extra_info= ","@project Repository  factory sitory= ","@project Repository  factory = ","@project Repository  factory sitories << ","@project Repository  factory sitories ","GitHosting  multi_Repository  factory s? ","Member  new  save ","@project member_principals map compact uniq  length == ","@project member_principals map compact uniq  length ","Repository  factory sitory id ","Repository  factory  id ","Repository  factory sitory gitolite_Repository  factory sitory_name ","Repository  factory  gitolite_Repository  factory _name ","Repository  factory sitory is_default= ","Repository  factory  is_default= ","Repository  factory sitory extra_info []= ","Repository  factory  extra_info []= ","Repository  factory sitory extra_info ","Repository  factory  extra_info ","Repository  factory sitory extra_info= ","Repository  factory  extra_info= "]}," RedmineGitHosting Patches ProjectsControllerPatch InstanceMethods unarchive_with_git_hosting":{"type":"method","name":"unarchive_with_git_hosting","children":[],"call":["GitHostingObserver  set_update_active "," unarchive_without_git_hosting ","RedmineGitolite GitHosting  resync_gitolite ","@project id ","RedmineGitolite GitHosting  logger info ","RedmineGitolite GitHosting  logger "," update_project ","User  current login ","User  current "]}," RedmineGitHosting Patches ProjectsControllerPatch InstanceMethods archive_with_git_hosting":{"type":"method","name":"archive_with_git_hosting","children":[],"call":["GitHostingObserver  set_update_active "," archive_without_git_hosting "," update_projects "," update_project_hierarchy ","User  current login ","User  current "]}," RedmineGitHosting Patches ProjectsControllerPatch InstanceMethods destroy_with_git_hosting":{"type":"method","name":"destroy_with_git_hosting","children":[],"call":["GitHostingObserver  set_update_active "," destroy_without_git_hosting ","RedmineGitolite GitHosting  resync_gitolite "," params [] "," params "," api_request? ","destroy_repositories push ","repository_data []= ","repository gitolite_repository_path ","repository gitolite_repository_name ","project gitolite_repos reverse each ","project gitolite_repos reverse ","project gitolite_repos ","git_projects reverse each ","git_projects reverse ","p gitolite_repos any? ","p gitolite_repos ","projects uniq select ","projects uniq ","@project self_and_descendants "," destroy_repositories "," repositories_to_destroy ","git_@project self_and_descendants  reverse each ","git_@project self_and_descendants  reverse ","@project self_and_descendants  uniq select ","@project self_and_descendants  uniq "]}," RedmineGitHosting Patches ProjectsControllerPatch InstanceMethods update_with_git_hosting":{"type":"method","name":"update_with_git_hosting","children":[],"call":["GitHostingObserver  set_update_active ","repo url != ","repo root_url ","repo url ","GitHosting  repository_path ","@project gitolite_repos detect ","@project gitolite_repos "," disable_git_daemon_if_not_public "," update_without_git_hosting ","RedmineGitolite GitHosting  resync_gitolite ","@project id ","RedmineGitolite GitHosting  logger info ","RedmineGitolite GitHosting  logger ","repo gitolite_repository_path "," update_project "," move_project_hierarchy "]}," RedmineGitHosting Patches ProjectsControllerPatch InstanceMethods create_with_git_hosting":{"type":"method","name":"create_with_git_hosting","children":[],"call":["GitHostingObserver  set_update_active "," disable_git_daemon_if_not_public "," git_repo_init ","@project save "," validate_parent_id "," create_without_git_hosting "," create_project_repository "," valid_project? "]}," RedmineGitHosting Patches ProjectPatch InstanceMethods additional_ident_constraints":{"type":"method","name":"additional_ident_constraints","children":[],"call":[" errors add "," errors ","Repository  find_by_identifier_and_type "," identifier "," identifier blank? ! "," identifier blank? "," new_record? "," identifier == "]}," RedmineGitHosting Patches ProjectPatch InstanceMethods repo_blank_ident":{"type":"method","name":"repo_blank_ident","children":[],"call":["Repository  find_by_project_id "," id ","Repository  where first ","Repository  where "]}," RedmineGitHosting Patches ProjectPatch InstanceMethods all_repos":{"type":"method","name":"all_repos","children":[],"call":["(send nil :repository) compact "," repository "," repositories ","GitHosting  multi_repos? "]}," RedmineGitHosting Patches ProjectPatch InstanceMethods gitolite_repos":{"type":"method","name":"gitolite_repos","children":[],"call":["x is_a? "," all_repos select "," all_repos "," repositories select "," repositories ","x id <=> ","y id ","x id ","(send\n  (send nil :repositories) :select) sort "]}," RedmineGitHosting Patches MyControllerPatch InstanceMethods account_with_git_hosting":{"type":"method","name":"account_with_git_hosting","children":[],"call":["GitolitePublicKey  new "," redirect_to "," params [] "," params ","@gitolite_public_key nil? ","x id == "," params [] to_i ","x id ","@gitolite_public_keys detect ","@gitolite_user_keys + ","@user gitolite_public_keys active deploy_key find ","@user gitolite_public_keys active deploy_key ","@user gitolite_public_keys active ","@user gitolite_public_keys ","@user gitolite_public_keys active user_key find ","@user gitolite_public_keys active user_key "," account_without_git_hosting "," set_public_key_values ","GitolitePublicKey  new  nil? ","GitolitePublicKey  new s detect ","@gitolite_user_keys +  detect ","@user gitolite_public_keys active user_key find  + "]}," RedmineGitHosting Patches MemberPatch InstanceMethods update_member":{"type":"method","name":"update_member","children":[],"call":["GitHosting  resync_gitolite "," project id "," project ","GitHosting  logger info ","GitHosting  logger ","RedmineGitolite GitHosting  resync_gitolite ","RedmineGitolite GitHosting  logger info ","RedmineGitolite GitHosting  logger "]}," RedmineGitHosting Patches MemberPatch included":{"type":"method","name":"included","children":[],"call":[]}," RedmineGitHosting Patches GitAdapterPatch InstanceMethods git_cmd_with_git_hosting":{"type":"method","name":"git_cmd_with_git_hosting","children":[],"call":["GitHostingCache  execute ","Repository  repo_path_to_git_label ","(send\n  (lvar :full_args) :map) join "," shell_quote ","e to_s ","full_args map ","full_args << << ","full_args << "," class client_version_above? "," class ","GitHosting  git_cmd_runner "," url "," root_url ","Redmine Scm Adapters AbstractAdapter  shellout ","RedmineGitolite GitHosting  logger debug ","RedmineGitolite GitHosting  logger ","RedmineGitolite Cache  execute ","git_cache_id nil? ! ","git_cache_id nil? ","Repository Git  repo_path_to_git_cache_id ","RedmineGitolite Config  git_cmd_runner ","Repository Git  repo_path_to_git_cache_id  nil? ! ","Repository Git  repo_path_to_git_cache_id  nil? ","Repository Git  repo_path_to_Repository Git  repo_path_to_git_cache_id  "]}," RedmineGitHosting Patches GitAdapterPatch InstanceMethods scm_cmd_with_git_hosting":{"type":"method","name":"scm_cmd_with_git_hosting","children":[],"call":[" git_cmd_with_git_hosting "]}," RedmineGitHosting Patches GitAdapterPatch ClassMethods client_command_with_git_hosting":{"type":"method","name":"client_command_with_git_hosting","children":[],"call":["GitHosting  git_cmd_runner ","RedmineGitolite Config  git_cmd_runner "]}," RedmineGitHosting Patches GitAdapterPatch ClassMethods sq_bin_with_git_hosting":{"type":"method","name":"sq_bin_with_git_hosting","children":[],"call":["Redmine Scm Adapters GitAdapter  shell_quote ","GitHosting  git_cmd_runner ","RedmineGitolite Config  git_cmd_runner "]}," RedmineGitHosting Hooks AddPluginIcon view_layouts_base_html_head":{"type":"method","name":"view_layouts_base_html_head","children":[],"call":[" stylesheet_link_tag ","header << "," stylesheet_link_tag + "," javascript_include_tag + "," javascript_include_tag "]}," Githosting ShellAdapter githosting_shell":{"type":"method","name":"githosting_shell","children":[],"call":["Githosting Shell  new "]}," Githosting Shell handle_command":{"type":"method","name":"handle_command","children":[],"call":[" logger error "," logger ","gr send ","GitoliteRedmine AdminHandler  new ","method nil? ! ","method nil? ","object nil? ! ","object nil? ","projects length > ","projects length ","role members map flatten uniq compact ","role members map flatten uniq ","role members map flatten ","role members map ","role members ","role nil? ! ","role nil? ","Role  find_by_id ","Project  find_by_id ","Project  active_or_archived find ","Project  active_or_archived ","object push ","project nil? ! ","project nil? ","object_id each ","Array  new ","object_id empty? ! ","object_id empty? ","User  find_by_id ","x parent_id nil? ","x parent_id ","Project  active_or_archived find select ","Repository  find_by_id ","action to_sym ","object_id nil? ","GitoliteRedmine AdminHandler  new  send ","Project  find_by_id  nil? ! ","Array  new  nil? ! ","User  find_by_id  nil? ! ","Repository  find_by_id  nil? ! ","Project  find_by_id  nil? ","Array  new  nil? ","User  find_by_id  nil? ","Repository  find_by_id  nil? ","role members map flatten uniq compact  length > ","Project  active_or_archived find  length > ","Project  find_by_id s length > ","role members map flatten uniq compact  length ","Project  active_or_archived find  length ","Project  find_by_id s length ","Role  find_by_id  members map flatten uniq compact ","Role  find_by_id  members map flatten uniq ","Role  find_by_id  members map flatten ","Role  find_by_id  members map ","Role  find_by_id  members ","Role  find_by_id  nil? ! ","Role  find_by_id  nil? ","Project  find_by_id  push ","Array  new  push ","User  find_by_id  push ","Repository  find_by_id  push ","Project  find_by_id _id each ","Array  new _id each ","User  find_by_id _id each ","Repository  find_by_id _id each ","Project  find_by_id _id empty? ! ","Array  new _id empty? ! ","User  find_by_id _id empty? ! ","Repository  find_by_id _id empty? ! ","Project  find_by_id _id empty? ","Array  new _id empty? ","User  find_by_id _id empty? ","Repository  find_by_id _id empty? ","Project  find_by_id _id nil? ","Array  new _id nil? ","User  find_by_id _id nil? ","Repository  find_by_id _id nil? "]}," Githosting Shell logger":{"type":"method","name":"logger","children":[],"call":["GitoliteLogger  get_logger "]}," GitHosting AdminConstraint matches?":{"type":"method","name":"matches?","children":[],"call":["user admin? ","User  find ","request session [] ","request session ","User  find  admin? "]}," GitoliteRedmine AdminHandler build_permissions":{"type":"method","name":"build_permissions","children":[],"call":["permissions []= ","read uniq sort ","read uniq ","read empty? ","write uniq sort ","write uniq ","write empty? ","rewind uniq sort ","rewind uniq ","rewind empty? ","read << ","repository extra git_daemon == ","repository extra git_daemon ","repository extra ","User  anonymous allowed_to? ","User  anonymous ","cred gitolite_public_key owner ","cred gitolite_public_key ","cred perm == ","cred perm ","rewind << ","repository repository_deployment_credentials active each ","repository repository_deployment_credentials active ","repository repository_deployment_credentials ","repository repository_deployment_credentials active any? "," get_keys ","user gitolite_public_keys active user_key all any? ","user gitolite_public_keys active user_key all ","user gitolite_public_keys active user_key ","user gitolite_public_keys active ","user gitolite_public_keys ","read_users each ","write_users each ","rewind_users each ","user allowed_to? ! ","user allowed_to? ","users select ","project active? ","repository project ","repository project member_principals map compact uniq ","repository project member_principals map compact ","repository project member_principals map ","repository project member_principals ","read_repository project member_principals map compact uniq  each ","write_repository project member_principals map compact uniq  each ","rewind_repository project member_principals map compact uniq  each ","repository project member_principals map compact uniq  select ","repository project  active? ","repository repository project  ","repository repository project  member_principals map compact uniq ","repository repository project  member_principals map compact ","repository repository project  member_principals map ","repository repository project  member_principals "]}," GitoliteRedmine AdminHandler get_keys":{"type":"method","name":"get_keys","children":[],"call":["array push ","key owner ","user gitolite_public_keys active user_key all each ","user gitolite_public_keys active user_key all ","user gitolite_public_keys active user_key ","user gitolite_public_keys active ","user gitolite_public_keys "]}," GitoliteRedmine AdminHandler remove_inactive_key":{"type":"method","name":"remove_inactive_key","children":[],"call":[" logger info ","key [] "," logger ","@gitolite_admin rm_key ","(send\n  (lvar :repo_keys) :find_all) first ","k owner == ","k owner ","k location == ","k location ","repo_keys find_all ","@gitolite_admin ssh_keys [] ","@gitolite_admin ssh_keys ","(send\n  (lvar :(send\n  (lvar :repo_keys) :find_all) first s) :find_all) first ","(send\n  (lvar :@gitolite_admin ssh_keys [] ) :find_all) first ","(send\n  (lvar :repo_keys) :find_all) first s find_all ","@gitolite_admin ssh_keys []  find_all "]}," GitoliteRedmine AdminHandler remove_inactive_keys":{"type":"method","name":"remove_inactive_keys","children":[],"call":[" remove_inactive_key "," logger info ","key owner "," logger ","ssh_key []= ","key location ","Hash  new ","keys each ","Hash  new  []= "]}," GitoliteRedmine AdminHandler add_active_keys":{"type":"method","name":"add_active_keys","children":[],"call":["@gitolite_admin add_key ","repo_key owner= ","key owner ","repo_key location= ","key location ","Gitolite SSHKey  new ","parts [] "," logger info "," logger ","repo_key email= ","repo_key blob= ","repo_key type= ","(send\n  (lvar :repo_keys) :find_all) first ","k owner == ","k owner ","k location == ","k location ","repo_keys find_all ","@gitolite_admin ssh_keys [] ","@gitolite_admin ssh_keys ","key key split ","key key ","keys each ","Gitolite SSHKey  new  owner= ","(send\n  (lvar :repo_keys) :find_all) first  owner= ","Gitolite SSHKey  new  location= ","(send\n  (lvar :repo_keys) :find_all) first  location= ","key key split  [] ","Gitolite SSHKey  new  email= ","(send\n  (lvar :repo_keys) :find_all) first  email= ","Gitolite SSHKey  new  blob= ","(send\n  (lvar :repo_keys) :find_all) first  blob= ","Gitolite SSHKey  new  type= ","(send\n  (lvar :repo_keys) :find_all) first  type= ","(send\n  (lvar :Gitolite SSHKey  new s) :find_all) first ","(send\n  (lvar :(send\n  (lvar :repo_keys) :find_all) first s) :find_all) first ","(send\n  (lvar :@gitolite_admin ssh_keys [] ) :find_all) first ","Gitolite SSHKey  new s find_all ","(send\n  (lvar :repo_keys) :find_all) first s find_all ","@gitolite_admin ssh_keys []  find_all "]}," GitoliteRedmine AdminHandler do_move_repositories":{"type":"method","name":"do_move_repositories","children":[],"call":[" handle_repository_add ","@gitolite_config rm_repo ","repository update_column ","@delete_parent_path push ","GitHosting  move_physical_repo "," logger error "," logger ","repo_conf ! "," logger debug "," logger info ","new_relative_path gsub ","repo_id + ","old_relative_path gsub ","GitHosting  repository_path ","repository url ","GitHosting  new_repository_name ","GitHosting  old_repository_name ","@gitolite_config repos [] ","@gitolite_config repos ","repository git_name ","@gitolite_config repos []  ! ","repository git_name  + "]}," GitoliteRedmine AdminHandler clean_path":{"type":"method","name":"clean_path","children":[],"call":["GitHosting  shell ","GitHosting  shell_cmd_runner ","path_list uniq sort reverse each ","path_list uniq sort reverse ","path_list uniq sort ","path_list uniq "]}," GitoliteRedmine AdminHandler handle_user_update":{"type":"method","name":"handle_user_update","children":[],"call":[" remove_inactive_keys ","user gitolite_public_keys inactive ","user gitolite_public_keys "," add_active_keys ","user gitolite_public_keys active "]}," GitoliteRedmine AdminHandler handle_ssh_key_delete":{"type":"method","name":"handle_ssh_key_delete","children":[],"call":[" remove_inactive_key "]}," GitoliteRedmine AdminHandler handle_repository_delete":{"type":"method","name":"handle_repository_delete","children":[],"call":["@gitolite_config rm_repo "," logger debug "," logger "," logger info "," logger warn ","repo_conf ! ","@gitolite_config repos [] ","@gitolite_config repos ","repository_data [] ","@gitolite_config repos []  ! "]}," GitoliteRedmine AdminHandler handle_repository_update":{"type":"method","name":"handle_repository_update","children":[],"call":["repo_conf permissions= "," build_permissions ","@gitolite_config add_repo ","repo_conf set_git_config ","GitHostingConf  gitolite_notify_global_prefix ","GitHostingConf  gitolite_notify_global_sender_address ","mailing_list keys join ","mailing_list keys ","mailing_list empty? ! ","mailing_list empty? ","GitHostingHelper  mailing_list_effective ","repository extra git_notify == ","repository extra git_notify ","repository extra ","repository extra key ","repository identifier ","repository project identifier to_s ","repository project identifier ","repository project ","Gitolite Config Repo  new "," logger debug "," logger "," logger warn ","@gitolite_config rm_repo "," logger info ","@gitolite_config repos [] ","@gitolite_config repos ","GitHosting  repository_path ","GitHosting  repository_name ","Gitolite Config Repo  new  permissions= ","@gitolite_config repos []  permissions= ","Gitolite Config Repo  new  set_git_config ","@gitolite_config repos []  set_git_config ","GitHostingHelper  mailing_list_effective  keys join ","GitHostingHelper  mailing_list_effective  keys ","GitHostingHelper  mailing_list_effective  empty? ! ","GitHostingHelper  mailing_list_effective  empty? ","GitHostingHelper  GitHostingHelper  mailing_list_effective _effective "]}," GitoliteRedmine AdminHandler handle_repository_add":{"type":"method","name":"handle_repository_add","children":[],"call":["repo_conf permissions= "," build_permissions ","@gitolite_config add_repo ","repo_conf set_git_config ","GitHostingConf  gitolite_notify_global_prefix ","GitHostingConf  gitolite_notify_global_sender_address ","mailing_list keys join ","mailing_list keys ","mailing_list empty? ! ","mailing_list empty? ","GitHostingHelper  mailing_list_effective ","repository extra git_notify == ","repository extra git_notify ","repository extra ","repository extra key ","repository identifier ","repository project identifier to_s ","repository project identifier ","repository project ","Gitolite Config Repo  new "," logger debug "," logger "," logger warn ","@gitolite_config rm_repo ","force == "," logger info ","repo_conf ! ","@gitolite_config repos [] ","@gitolite_config repos ","GitHosting  repository_path ","GitHosting  repository_name ","Gitolite Config Repo  new  permissions= ","@gitolite_config repos []  permissions= ","Gitolite Config Repo  new  set_git_config ","@gitolite_config repos []  set_git_config ","GitHostingHelper  mailing_list_effective  keys join ","GitHostingHelper  mailing_list_effective  keys ","GitHostingHelper  mailing_list_effective  empty? ! ","GitHostingHelper  mailing_list_effective  empty? ","GitHostingHelper  GitHostingHelper  mailing_list_effective _effective ","Gitolite Config Repo  new  ! ","@gitolite_config repos []  ! "]}," GitoliteRedmine AdminHandler handle_repositories_move":{"type":"method","name":"handle_repositories_move","children":[],"call":[" gitolite_admin_repo_commit ","project identifier "," do_move_repositories ","repo_list push ","GitHosting  repository_name ","project gitolite_repos reverse each ","project gitolite_repos reverse ","project gitolite_repos ","git_projects reverse each ","git_projects reverse ","git_projects empty? ","p gitolite_repos any? ","p gitolite_repos ","projects uniq select ","projects uniq ","project self_and_descendants ","git_project self_and_descendants  reverse each ","git_project self_and_descendants  reverse ","git_project self_and_descendants  empty? ","project self_and_descendants  uniq select ","project self_and_descendants  uniq "]}," GitoliteRedmine AdminHandler handle_project_update":{"type":"method","name":"handle_project_update","children":[],"call":[" handle_repository_update "," handle_repository_add ","force == ","project gitolite_repos each ","project gitolite_repos "]}," GitoliteRedmine AdminHandler gitolite_admin_repo_clone":{"type":"method","name":"gitolite_admin_repo_clone","children":[],"call":["@gitolite_admin config= ","Gitolite Config  new "," logger info "," logger "," logger error ","File  exists? ! ","File  exists? ","e message ","GitHosting  shell ","GitHostingConf  gitolite_config_file ","GitHostingConf  gitolite_config_file != ","Gitolite GitoliteAdmin  new ","GitHostingConf  gitolite_admin_url ","GitHosting  gitolite_admin_ssh_runner ","GitHostingConf  gitolite_server_port "," gitolite_admin_dir ","Gitolite GitoliteAdmin  new  config= "]}," GitoliteRedmine AdminHandler gitolite_admin_repo_push":{"type":"method","name":"gitolite_admin_repo_push","children":[],"call":[" logger error ","e message "," logger ","@gitolite_admin apply "," logger info "]}," GitoliteRedmine AdminHandler gitolite_admin_repo_commit":{"type":"method","name":"gitolite_admin_repo_commit","children":[],"call":["@gitolite_admin save "]}," GitoliteRedmine AdminHandler gitolite_admin_dir":{"type":"method","name":"gitolite_admin_dir","children":[],"call":["File  join ","GitHosting  temp_dir_path "]}," GitoliteRedmine AdminHandler delete_ssh_key":{"type":"method","name":"delete_ssh_key","children":[],"call":[" logger info "," logger "," gitolite_admin_repo_push "," gitolite_admin_repo_commit ","ssh_key [] "," handle_ssh_key_delete "," gitolite_admin_repo_clone ","GitHosting  lock "]}," GitoliteRedmine AdminHandler update_user":{"type":"method","name":"update_user","children":[],"call":[" logger info "," logger "," gitolite_admin_repo_push "," gitolite_admin_repo_commit ","user login "," handle_user_update "," gitolite_admin_repo_clone ","GitHosting  lock "]}," GitoliteRedmine AdminHandler update_projects_forced":{"type":"method","name":"update_projects_forced","children":[],"call":[" logger info "," logger "," gitolite_admin_repo_push "," gitolite_admin_repo_commit ","project identifier "," handle_project_update ","projects each "," gitolite_admin_repo_clone ","GitHosting  lock ","r is_a? ","p repositories detect ","p repositories ","projects detect ","projects is_a? "]}," GitoliteRedmine AdminHandler update_projects":{"type":"method","name":"update_projects","children":[],"call":[" logger info "," logger "," gitolite_admin_repo_push "," gitolite_admin_repo_commit ","project identifier "," handle_project_update ","projects each "," gitolite_admin_repo_clone ","GitHosting  lock ","r is_a? ","p repositories detect ","p repositories ","projects detect ","projects is_a? "]}," GitoliteRedmine AdminHandler move_repositories_tree":{"type":"method","name":"move_repositories_tree","children":[],"call":[" logger info "," logger "," gitolite_admin_repo_push "," clean_path "," handle_repositories_move ","projects each "," gitolite_admin_repo_clone ","GitHosting  lock "]}," GitoliteRedmine AdminHandler move_repositories":{"type":"method","name":"move_repositories","children":[],"call":[" logger info "," logger "," gitolite_admin_repo_push "," clean_path "," handle_repositories_move "," gitolite_admin_repo_clone ","GitHosting  lock "]}," GitoliteRedmine AdminHandler delete_repositories":{"type":"method","name":"delete_repositories","children":[],"call":[" logger info "," logger "," gitolite_admin_repo_push "," gitolite_admin_repo_commit ","repository_data [] ","GitHosting GitoliteRecycle  move_repository_to_recycle ","GitHostingConf  delete_git_repositories? "," handle_repository_delete ","repositories_array each "," gitolite_admin_repo_clone ","GitHosting  lock "]}," GitoliteRedmine AdminHandler update_repository":{"type":"method","name":"update_repository","children":[],"call":[" logger info "," logger "," gitolite_admin_repo_push "," gitolite_admin_repo_commit ","GitHosting  repository_name "," handle_repository_update "," gitolite_admin_repo_clone ","GitHosting  lock "]}," GitoliteRedmine AdminHandler add_repository":{"type":"method","name":"add_repository","children":[],"call":[" logger info "," logger "," gitolite_admin_repo_push "," gitolite_admin_repo_commit ","GitHosting  repository_name "," handle_repository_add "," gitolite_admin_repo_clone ","GitHosting  lock "]}," GitoliteRedmine AdminHandler logger":{"type":"method","name":"logger","children":[],"call":["GitoliteLogger  get_logger "]}," GitoliteLogger CustomLogger format_message":{"type":"method","name":"format_message","children":[],"call":[]}," GitoliteLogger CustomLogger flush":{"type":"method","name":"flush","children":[],"call":[]}," GitoliteLogger LoggerGlobal method_missing":{"type":"method","name":"method_missing","children":[],"call":["@logger send "]}," GitoliteLogger LoggerGlobal error":{"type":"method","name":"error","children":[],"call":["@logger error ","(begin\n  (ivar :@prefix)) gsub "," block_given? "]}," GitoliteLogger LoggerGlobal warn":{"type":"method","name":"warn","children":[],"call":["@logger warn ","(begin\n  (ivar :@prefix)) gsub "," block_given? "]}," GitoliteLogger LoggerGlobal info":{"type":"method","name":"info","children":[],"call":["@logger info ","(begin\n  (ivar :@prefix)) gsub "," block_given? "]}," GitoliteLogger LoggerGlobal debug":{"type":"method","name":"debug","children":[],"call":["@logger debug ","(begin\n  (ivar :@prefix)) gsub "," block_given? "]}," GitoliteLogger LoggerGlobal get_log_level":{"type":"method","name":"get_log_level","children":[],"call":["GitHostingConf  gitolite_log_level "]}," GitoliteLogger LoggerGlobal get_logger":{"type":"method","name":"get_logger","children":[],"call":["@logger level= "," get_log_level ","CustomLogger  new ","logfile sync= ","File  open ","CustomLogger  new  level= ","File  open  sync= "]}," GitoliteLogger LoggerGlobal initialize":{"type":"method","name":"initialize","children":[],"call":[" get_logger "]}," GitoliteLogger get_logger":{"type":"method","name":"get_logger","children":[],"call":[]}," GitHosting GitoliteHooks setup_hooks_for_repository":{"type":"method","name":"setup_hooks_for_repository","children":[],"call":[]}," GitHosting GitoliteHooks get_global_config_params":{"type":"method","name":"get_global_config_params","children":[],"call":[]}," GitHosting GitoliteHooks get_local_config_params":{"type":"method","name":"get_local_config_params","children":[],"call":[]}," GitHosting GitoliteHooks get_local_config_map":{"type":"method","name":"get_local_config_map","children":[],"call":[]}," GitHosting GitoliteHooks install_hook_dir":{"type":"method","name":"install_hook_dir","children":[],"call":[]}," GitHosting GitoliteHooks install_hook_file":{"type":"method","name":"install_hook_file","children":[],"call":[]}," GitHosting GitoliteHooks current_hook_digest":{"type":"method","name":"current_hook_digest","children":[],"call":[]}," GitHosting GitoliteHooks package_hooks_dir":{"type":"method","name":"package_hooks_dir","children":[],"call":[]}," GitHosting GitoliteHooks gitolite_hooks_dir":{"type":"method","name":"gitolite_hooks_dir","children":[],"call":[]}," GitHosting GitoliteHooks get_gitolite_command":{"type":"method","name":"get_gitolite_command","children":[],"call":[]}," GitHosting GitoliteHooks logger":{"type":"method","name":"logger","children":[],"call":[]}," GitHosting GitoliteHooks setup_hooks_params":{"type":"method","name":"setup_hooks_params","children":[],"call":[]}," GitHosting GitoliteHooks setup_hooks":{"type":"method","name":"setup_hooks","children":[],"call":[]}," GitHosting GitoliteHooks update_global_hook_params":{"type":"method","name":"update_global_hook_params","children":[],"call":[]}," GitHosting GitoliteHooks check_hook_dir_installed":{"type":"method","name":"check_hook_dir_installed","children":[],"call":[]}," GitHosting GitoliteHooks check_hook_file_installed":{"type":"method","name":"check_hook_file_installed","children":[],"call":[]}," GitHosting GitoliteHooks check_hooks_installed":{"type":"method","name":"check_hooks_installed","children":[],"call":[]}," GitHostingConf unique_repo_identifier?":{"type":"method","name":"unique_repo_identifier?","children":[],"call":[]}," GitHostingConf hierarchical_organisation?":{"type":"method","name":"hierarchical_organisation?","children":[],"call":[]}," GitHostingConf gitolite_notify_global_exclude":{"type":"method","name":"gitolite_notify_global_exclude","children":[],"call":[]}," GitHostingConf gitolite_notify_global_include":{"type":"method","name":"gitolite_notify_global_include","children":[],"call":[]}," GitHostingConf gitolite_notify_global_sender_address":{"type":"method","name":"gitolite_notify_global_sender_address","children":[],"call":[]}," GitHostingConf gitolite_notify_global_prefix":{"type":"method","name":"gitolite_notify_global_prefix","children":[],"call":[]}," GitHostingConf gitolite_notify_by_default":{"type":"method","name":"gitolite_notify_by_default","children":[],"call":[]}," GitHostingConf gitolite_notify_cia_by_default":{"type":"method","name":"gitolite_notify_cia_by_default","children":[],"call":[]}," GitHostingConf my_root_url":{"type":"method","name":"my_root_url","children":[],"call":[]}," GitHostingConf show_repositories_url?":{"type":"method","name":"show_repositories_url?","children":[],"call":[]}," GitHostingConf gitolite_http_by_default":{"type":"method","name":"gitolite_http_by_default","children":[],"call":[]}," GitHostingConf gitolite_daemon_by_default":{"type":"method","name":"gitolite_daemon_by_default","children":[],"call":[]}," GitHostingConf https_server_domain":{"type":"method","name":"https_server_domain","children":[],"call":[]}," GitHostingConf http_server_domain":{"type":"method","name":"http_server_domain","children":[],"call":[]}," GitHostingConf ssh_server_domain":{"type":"method","name":"ssh_server_domain","children":[],"call":[]}," GitHostingConf gitolite_cache_max_elements":{"type":"method","name":"gitolite_cache_max_elements","children":[],"call":[]}," GitHostingConf gitolite_cache_max_size":{"type":"method","name":"gitolite_cache_max_size","children":[],"call":[]}," GitHostingConf gitolite_cache_max_time":{"type":"method","name":"gitolite_cache_max_time","children":[],"call":[]}," GitHostingConf gitolite_log_split?":{"type":"method","name":"gitolite_log_split?","children":[],"call":[]}," GitHostingConf gitolite_log_level":{"type":"method","name":"gitolite_log_level","children":[],"call":[]}," GitHostingConf gitolite_hooks_debug?":{"type":"method","name":"gitolite_hooks_debug?","children":[],"call":[]}," GitHostingConf gitolite_force_hooks_update?":{"type":"method","name":"gitolite_force_hooks_update?","children":[],"call":[]}," GitHostingConf gitolite_hooks_are_asynchronous?":{"type":"method","name":"gitolite_hooks_are_asynchronous?","children":[],"call":[]}," GitHostingConf gitolite_lock_wait_time":{"type":"method","name":"gitolite_lock_wait_time","children":[],"call":[]}," GitHostingConf gitolite_recycle_bin_expiration_time":{"type":"method","name":"gitolite_recycle_bin_expiration_time","children":[],"call":[]}," GitHostingConf gitolite_recycle_bin_dir":{"type":"method","name":"gitolite_recycle_bin_dir","children":[],"call":[]}," GitHostingConf gitolite_redmine_storage_dir":{"type":"method","name":"gitolite_redmine_storage_dir","children":[],"call":[]}," GitHostingConf gitolite_global_storage_dir":{"type":"method","name":"gitolite_global_storage_dir","children":[],"call":[]}," GitHostingConf gitolite_scripts_parent_dir":{"type":"method","name":"gitolite_scripts_parent_dir","children":[],"call":[]}," GitHostingConf gitolite_scripts_dir":{"type":"method","name":"gitolite_scripts_dir","children":[],"call":[]}," GitHostingConf gitolite_temp_dir":{"type":"method","name":"gitolite_temp_dir","children":[],"call":[]}," GitHostingConf gitolite_admin_url":{"type":"method","name":"gitolite_admin_url","children":[],"call":[]}," GitHostingConf gitolite_server_port":{"type":"method","name":"gitolite_server_port","children":[],"call":[]}," GitHostingConf gitolite_user":{"type":"method","name":"gitolite_user","children":[],"call":[]}," GitHostingCache clear_obsolete_cache_entries":{"type":"method","name":"clear_obsolete_cache_entries","children":[],"call":[]}," GitHostingCache clear_cache_for_repository":{"type":"method","name":"clear_cache_for_repository","children":[],"call":[]}," GitHostingCache expire_at":{"type":"method","name":"expire_at","children":[],"call":[]}," GitHostingCache limit_cache":{"type":"method","name":"limit_cache","children":[],"call":[]}," GitHostingCache set_cache":{"type":"method","name":"set_cache","children":[],"call":[]}," GitHostingCache check_cache":{"type":"method","name":"check_cache","children":[],"call":[]}," GitHostingCache compose_key":{"type":"method","name":"compose_key","children":[],"call":[]}," GitHostingCache max_cache_size":{"type":"method","name":"max_cache_size","children":[],"call":[]}," GitHostingCache max_cache_elements":{"type":"method","name":"max_cache_elements","children":[],"call":[]}," GitHostingCache max_cache_time":{"type":"method","name":"max_cache_time","children":[],"call":[]}," GitHostingCache exit_shell":{"type":"method","name":"exit_shell","children":[],"call":[" class set_cache "," class ","@my_buffer_overfull ! ","@wrap_thread join ","@wrap_thread run ","@state == "]}," GitHostingCache startup_shell":{"type":"method","name":"startup_shell","children":[],"call":["Thread  pass ","proxy_started ! ","Thread  stop ","Redmine Scm Adapters AbstractAdapter  shellout ","io close_write ","io puts ","io binmode ","options [] ","Thread  new ","Thread  abort_on_exception= "]}," GitHostingCache initialize":{"type":"method","name":"initialize","children":[],"call":[" startup_shell ","options [] "]}," GitHostingCache simple_proxy":{"type":"method","name":"simple_proxy","children":[],"call":["@my_read_stream send "]}," GitHostingCache normal_diverter":{"type":"method","name":"normal_diverter","children":[],"call":[" add_to_buffer ","@state == ","@my_read_stream send "]}," GitHostingCache enumerator_diverter":{"type":"method","name":"enumerator_diverter","children":[],"call":["@my_read_stream send ","EnumerableRedirector  new ","block call "," add_to_buffer "," block_given? ","@state == "]}," GitHostingCache push_to_buffer":{"type":"method","name":"push_to_buffer","children":[],"call":["@my_buffer << ","@my_buffer length + <= "," class max_cache_size "," class ","@my_buffer length + ","nextchunk length ","@my_buffer length ","invalue chr ","invalue is_a? ","invalue chr  length "]}," GitHostingCache add_to_buffer":{"type":"method","name":"add_to_buffer","children":[],"call":[" push_to_buffer ","invalue each ","invalue is_a? "]}," GitHostingCache EnumerableRedirector each":{"type":"method","name":"each","children":[],"call":["@my_redirector add_to_buffer ","@my_enum each "," to_enum "," block_given? "]}," GitHostingCache EnumerableRedirector initialize":{"type":"method","name":"initialize","children":[],"call":[]}," GitHostingCache method_missing":{"type":"method","name":"method_missing","children":[],"call":[" send "," class class_eval "," class ","my_name =~ ","my_method to_s "," raise ","@my_read_stream nil? ","IO  instance_methods map include? ","my_method to_sym ","IO  instance_methods map ","IO  instance_methods ","my_method to_s  =~ "]}," GitHostingCache close_write":{"type":"method","name":"close_write","children":[],"call":[" startup_shell "," class check_cache "," class "]}," GitHostingCache binmode":{"type":"method","name":"binmode","children":[],"call":[]}," GitHostingCache write":{"type":"method","name":"write","children":[],"call":["@my_extra_args << ","obj to_s "]}," GitHostingCache putc":{"type":"method","name":"putc","children":[],"call":["@my_extra_args << "," retval_to_s "]}," GitHostingCache puts":{"type":"method","name":"puts","children":[],"call":["@my_extra_args << ","args join + ","args join "]}," GitHostingCache respond_to?":{"type":"method","name":"respond_to?","children":[],"call":[" block "," args ","IO  instance_methods map include? ","my_method to_sym ","IO  instance_methods map ","IO  instance_methods "]}," GitHostingCache execute":{"type":"method","name":"execute","children":[],"call":[]}," GitHostingCache logger":{"type":"method","name":"logger","children":[],"call":[]}," GitHosting update_gitolite_scripts":{"type":"method","name":"update_gitolite_scripts","children":[],"call":[]}," GitHosting is_repository_empty?":{"type":"method","name":"is_repository_empty?","children":[],"call":[]}," GitHosting temp_dir_path":{"type":"method","name":"temp_dir_path","children":[],"call":[]}," GitHosting scripts_dir_path":{"type":"method","name":"scripts_dir_path","children":[],"call":[]}," GitHosting resync_gitolite":{"type":"method","name":"resync_gitolite","children":[],"call":[]}," GitHosting gitolite_admin_ssh_script_path":{"type":"method","name":"gitolite_admin_ssh_script_path","children":[],"call":[]}," GitHosting git_cmd_script_path":{"type":"method","name":"git_cmd_script_path","children":[],"call":[]}," GitHosting shell_cmd_script_path":{"type":"method","name":"shell_cmd_script_path","children":[],"call":[]}," GitHosting gitolite_admin_ssh_runner":{"type":"method","name":"gitolite_admin_ssh_runner","children":[],"call":[]}," GitHosting git_cmd_runner":{"type":"method","name":"git_cmd_runner","children":[],"call":[]}," GitHosting shell_cmd_runner":{"type":"method","name":"shell_cmd_runner","children":[],"call":[]}," GitHosting gitolite_banner":{"type":"method","name":"gitolite_banner","children":[],"call":[]}," GitHosting sudo_redmine_to_gitolite_user":{"type":"method","name":"sudo_redmine_to_gitolite_user","children":[],"call":[]}," GitHosting sudo_gitolite_to_redmine_user":{"type":"method","name":"sudo_gitolite_to_redmine_user","children":[],"call":[]}," GitHosting scripts_dir_writeable?":{"type":"method","name":"scripts_dir_writeable?","children":[],"call":[]}," GitHosting old_repository_name":{"type":"method","name":"old_repository_name","children":[],"call":[]}," GitHosting new_repository_name":{"type":"method","name":"new_repository_name","children":[],"call":[]}," GitHosting gitolite_user":{"type":"method","name":"gitolite_user","children":[],"call":[]}," GitHosting redmine_user=":{"type":"method","name":"redmine_user=","children":[],"call":[]}," GitHosting redmine_user":{"type":"method","name":"redmine_user","children":[],"call":[]}," RedmineGitolite Shell handle_command":{"type":"method","name":"handle_command","children":[],"call":["gitolite_admin send ","RedmineGitolite Admin  new ","ADMIN_METHODS  include? ","RedmineGitolite AdminUsers  new ","USERS_METHODS  include? ","RedmineGitolite AdminProjects  new ","PROJECTS_METHODS  include? ","RedmineGitolite AdminRepositories  new ","REPOSITORIES_METHODS  include? "," logger error "," logger ","@object_id nil? ","@action nil? ","RedmineGitolite Admin  new  send ","RedmineGitolite AdminUsers  new  send ","RedmineGitolite AdminProjects  new  send ","RedmineGitolite AdminRepositories  new  send "]}," RedmineGitolite Shell initialize":{"type":"method","name":"initialize","children":[],"call":["options symbolize_keys ","action to_sym "]}," RedmineGitolite Shell logger":{"type":"method","name":"logger","children":[],"call":["RedmineGitolite Log  get_logger "]}," RedmineGitolite Recycle get_directories_size":{"type":"method","name":"get_directories_size","children":[],"call":["data []= ","RedmineGitolite GitHosting  execute_command split [] ","RedmineGitolite GitHosting  execute_command split ","RedmineGitolite GitHosting  execute_command ","directories sort each ","directories sort "]}," RedmineGitolite Recycle clean_path_tree":{"type":"method","name":"clean_path_tree","children":[],"call":[" logger error "," logger "," logger info ","result each ","RedmineGitolite GitHosting  execute_command chomp split ","RedmineGitolite GitHosting  execute_command chomp ","RedmineGitolite GitHosting  execute_command ","repo_subpath == ","File  join ","old_prefix != ","File  dirname ","RedmineGitolite GitHosting  execute_command chomp split  each ","File  join  == ","File  dirname  != "]}," RedmineGitolite Recycle delete_recycle_bin_dir":{"type":"method","name":"delete_recycle_bin_dir","children":[],"call":["RedmineGitolite GitHosting  execute_command "]}," RedmineGitolite Recycle create_recycle_bin":{"type":"method","name":"create_recycle_bin","children":[],"call":[" logger error "," logger ","RedmineGitolite GitHosting  execute_command "]}," RedmineGitolite Recycle file_exists?":{"type":"method","name":"file_exists?","children":[],"call":["RedmineGitolite GitHosting  file_exists? "]}," RedmineGitolite Recycle logger":{"type":"method","name":"logger","children":[],"call":["RedmineGitolite Log  get_logger "]}," RedmineGitolite Recycle recover_repository_if_present?":{"type":"method","name":"recover_repository_if_present?","children":[],"call":[" delete_recycle_bin_dir "," logger error "," logger ","RedmineGitolite GitHosting  execute_command ","files first "," logger info ","File  join ","repo_name [] ","files length > ","files length ","y <=> ","RedmineGitolite GitHosting  execute_command chomp split sort ","RedmineGitolite GitHosting  execute_command chomp split ","RedmineGitolite GitHosting  execute_command chomp ","(begin\n  (lvar :repo_name)) gsub ","repository gitolite_repository_path ","repository gitolite_repository_name ","repository gitolite_repository_name  [] ","(begin\n  (lvar :repository gitolite_repository_name )) gsub "]}," RedmineGitolite Recycle move_repository_to_recycle":{"type":"method","name":"move_repository_to_recycle","children":[],"call":[" clean_path_tree ","@recycle_bin_expiration_time / "," logger info "," logger "," logger error ","RedmineGitolite GitHosting  execute_command "," create_recycle_bin "," logger debug ","File  join ","Time  now to_i to_s ","Time  now to_i ","Time  now ","repo_name gsub "," logger warn "," file_exists? ! "," file_exists? ","repository_data [] ","repository_data []  gsub "]}," RedmineGitolite Recycle delete_expired_files":{"type":"method","name":"delete_expired_files","children":[],"call":[" delete_recycle_bin_dir "," logger error "," logger ","RedmineGitolite GitHosting  execute_command "," logger info ","result each ","result length != ","result length ","result length > ","RedmineGitolite GitHosting  execute_command chomp split ","RedmineGitolite GitHosting  execute_command chomp ","repositories_array empty? ! ","repositories_array empty? "," file_exists? ","RedmineGitolite GitHosting  execute_command chomp split  each ","RedmineGitolite GitHosting  execute_command chomp split  length != ","RedmineGitolite GitHosting  execute_command chomp split  length ","RedmineGitolite GitHosting  execute_command chomp split  length > "]}," RedmineGitolite Recycle content":{"type":"method","name":"content","children":[],"call":[" get_directories_size ","directories empty? ! ","directories empty? ","RedmineGitolite GitHosting  execute_command chomp split ","RedmineGitolite GitHosting  execute_command chomp ","RedmineGitolite GitHosting  execute_command "," file_exists? ! "," file_exists? "," get_RedmineGitolite GitHosting  execute_command chomp split _size ","RedmineGitolite GitHosting  execute_command chomp split  empty? ! ","RedmineGitolite GitHosting  execute_command chomp split  empty? "]}," RedmineGitolite Recycle initialize":{"type":"method","name":"initialize","children":[],"call":["(send\n  (send\n    (send\n      (const\n        (const nil :RedmineGitolite) :ConfigRedmine) :get_setting\n      (sym :gitolite_recycle_bin_expiration_time)) :to_f) :*\n  (int 60)) to_i ","RedmineGitolite ConfigRedmine  get_setting to_f * ","RedmineGitolite ConfigRedmine  get_setting to_f ","RedmineGitolite ConfigRedmine  get_setting "]}," RedmineGitolite Log CustomLogger format_message":{"type":"method","name":"format_message","children":[],"call":[]}," RedmineGitolite Log CustomLogger flush":{"type":"method","name":"flush","children":[],"call":[]}," RedmineGitolite Log LoggerGlobal method_missing":{"type":"method","name":"method_missing","children":[],"call":["@logger send "]}," RedmineGitolite Log LoggerGlobal error":{"type":"method","name":"error","children":[],"call":["@logger error ","(begin\n  (ivar :@prefix)) gsub "," block_given? "]}," RedmineGitolite Log LoggerGlobal warn":{"type":"method","name":"warn","children":[],"call":["@logger warn ","(begin\n  (ivar :@prefix)) gsub "," block_given? "]}," RedmineGitolite Log LoggerGlobal info":{"type":"method","name":"info","children":[],"call":["@logger info ","(begin\n  (ivar :@prefix)) gsub "," block_given? "]}," RedmineGitolite Log LoggerGlobal debug":{"type":"method","name":"debug","children":[],"call":["@logger debug ","(begin\n  (ivar :@prefix)) gsub "," block_given? "]}," RedmineGitolite Log LoggerGlobal get_log_level":{"type":"method","name":"get_log_level","children":[],"call":["RedmineGitolite ConfigRedmine  get_setting "]}," RedmineGitolite Log LoggerGlobal get_logger":{"type":"method","name":"get_logger","children":[],"call":["@logger level= "," get_log_level ","CustomLogger  new ","logfile sync= ","File  open ","CustomLogger  new  level= ","File  open  sync= "]}," RedmineGitolite Log LoggerGlobal initialize":{"type":"method","name":"initialize","children":[],"call":[" get_logger "]}," RedmineGitolite Log get_logger":{"type":"method","name":"get_logger","children":[],"call":[]}," RedmineGitolite Hooks set_hook_param":{"type":"method","name":"set_hook_param","children":[],"call":[" logger error "," logger ","RedmineGitolite GitHosting  execute_command "," logger info "]}," RedmineGitolite Hooks get_global_hooks_params":{"type":"method","name":"get_global_hooks_params","children":[],"call":["value_hash []= ","namespace == ","value_pair split [] ","value_pair split ","global_key split [] ","global_key split ","hooks_params each "," logger error "," logger ","RedmineGitolite GitHosting  execute_command split ","RedmineGitolite GitHosting  execute_command ","value_pair split [] _hash []= ","global_key split []  == ","value_pair split [] _pair split [] ","value_pair split [] _pair split ","global_global_key split []  split [] ","value_pair split []  split [] ","global_global_key split []  split ","value_pair split []  split ","RedmineGitolite GitHosting  execute_command split  each "]}," RedmineGitolite Hooks hook_exists?":{"type":"method","name":"hook_exists?","children":[],"call":["RedmineGitolite GitHosting  execute_command match ","RedmineGitolite GitHosting  execute_command "]}," RedmineGitolite Hooks update_gitolite":{"type":"method","name":"update_gitolite","children":[],"call":["RedmineGitolite GitHosting  execute_command "]}," RedmineGitolite Hooks hook_digest":{"type":"method","name":"hook_digest","children":[],"call":[" logger debug "," logger ","Digest MD5  hexdigest ","File  read ","File  join ","hook_data [] ","Digest MD5  hexDigest MD5  hexdigest  "]}," RedmineGitolite Hooks install_hook_file":{"type":"method","name":"install_hook_file","children":[],"call":[" logger error "," logger ","RedmineGitolite GitHosting  execute_command "," logger info ","hook_data [] ","File  join "]}," RedmineGitolite Hooks check_hook_file_installed":{"type":"method","name":"check_hook_file_installed","children":[],"call":["@@check_hooks_installed_cached [] ","@@check_hooks_installed_stamp []= ","Time  new ","@@check_hooks_installed_cached []= "," update_gitolite "," logger info "," logger "," install_hook_file "," logger warn "," hook_digest == "," hook_digest ","Digest MD5  hexdigest ","RedmineGitolite GitHosting  execute_command ","@@post_receive_hook_path [] "," hook_exists? ! "," hook_exists? ","File  join ","hook_data [] "," logger error ","@gitolite_command nil? ","Time  new - <= ","Time  new - ","@@check_hooks_installed_stamp [] ","@@check_hooks_installed_cached [] nil? ! ","@@check_hooks_installed_cached [] nil? ","hook [] "," hook_Digest MD5  hexdigest  == "," hook_Digest MD5  hexdigest  ","Digest MD5  hexDigest MD5  hexdigest  ","hook []  [] "]}," RedmineGitolite Hooks install_hooks_dir":{"type":"method","name":"install_hooks_dir","children":[],"call":[" logger error "," logger ","RedmineGitolite GitHosting  execute_command "," logger info "]}," RedmineGitolite Hooks check_hook_dir_installed":{"type":"method","name":"check_hook_dir_installed","children":[],"call":["Time  new "," logger info "," logger "," install_hooks_dir ","hook_dir_exists ! ","RedmineGitolite GitHosting  execute_command match ","RedmineGitolite GitHosting  execute_command ","Time  new - <= ","Time  new - ","@@check_hooks_dir_installed_cached nil? ! ","@@check_hooks_dir_installed_cached nil? ","RedmineGitolite GitHosting  execute_command match  ! "]}," RedmineGitolite Hooks logger":{"type":"method","name":"logger","children":[],"call":["RedmineGitolite Log  get_logger "]}," RedmineGitolite Hooks hook_params_installed?":{"type":"method","name":"hook_params_installed?","children":[],"call":["installed []= "," set_hook_param ","@global_hook_params [] != ","@async_mode to_s ","@global_hook_params [] ","@debug_mode to_s "]}," RedmineGitolite Hooks hooks_installed?":{"type":"method","name":"hooks_installed?","children":[],"call":["installed []= "," check_hook_file_installed ","hook [] ","POST_RECEIVE_HOOKS  each "," check_hook_dir_installed "]}," RedmineGitolite Hooks check_install":{"type":"method","name":"check_install","children":[],"call":[" hook_params_installed? "," hooks_installed? "]}," RedmineGitolite Hooks initialize":{"type":"method","name":"initialize","children":[],"call":[" get_global_hooks_params ","RedmineGitolite ConfigRedmine  get_setting ","RedmineGitolite Config  gitolite_hooks_url ","RedmineGitolite Config  gitolite_command "]}," RedmineGitolite GitHosting dir_exists?":{"type":"method","name":"dir_exists?","children":[],"call":[]}," RedmineGitolite GitHosting file_exists?":{"type":"method","name":"file_exists?","children":[],"call":[]}," RedmineGitolite GitHosting shell":{"type":"method","name":"shell","children":[],"call":[]}," RedmineGitolite GitHosting execute_command":{"type":"method","name":"execute_command","children":[],"call":[]}," RedmineGitolite GitHosting resync_gitolite":{"type":"method","name":"resync_gitolite","children":[],"call":[]}," RedmineGitolite GitHosting GitHostingException initialize":{"type":"method","name":"initialize","children":[],"call":[]}," RedmineGitolite GitHosting logger":{"type":"method","name":"logger","children":[],"call":[]}," RedmineGitolite ConfigRedmine get_string_setting":{"type":"method","name":"get_string_setting","children":[],"call":[]}," RedmineGitolite ConfigRedmine get_boolean_setting":{"type":"method","name":"get_boolean_setting","children":[],"call":[]}," RedmineGitolite ConfigRedmine get_setting":{"type":"method","name":"get_setting","children":[],"call":[" do_get_setting "," return_bool "]}," RedmineGitolite Config mirroring_keys_installed?":{"type":"method","name":"mirroring_keys_installed?","children":[],"call":[]}," RedmineGitolite Config mirroring_public_key":{"type":"method","name":"mirroring_public_key","children":[],"call":[]}," RedmineGitolite Config shell_cmd_script_is_installed?":{"type":"method","name":"shell_cmd_script_is_installed?","children":[],"call":[]}," RedmineGitolite Config git_cmd_script_is_installed?":{"type":"method","name":"git_cmd_script_is_installed?","children":[],"call":[]}," RedmineGitolite Config gitolite_admin_ssh_script_is_installed?":{"type":"method","name":"gitolite_admin_ssh_script_is_installed?","children":[],"call":[]}," RedmineGitolite Config update_scripts":{"type":"method","name":"update_scripts","children":[],"call":[]}," RedmineGitolite Config script_is_installed?":{"type":"method","name":"script_is_installed?","children":[],"call":[]}," RedmineGitolite Config gitolite_admin_ssh_runner":{"type":"method","name":"gitolite_admin_ssh_runner","children":[],"call":[]}," RedmineGitolite Config git_cmd_runner":{"type":"method","name":"git_cmd_runner","children":[],"call":[]}," RedmineGitolite Config shell_cmd_runner":{"type":"method","name":"shell_cmd_runner","children":[],"call":[]}," RedmineGitolite Config gitolite_admin_ssh_script_path":{"type":"method","name":"gitolite_admin_ssh_script_path","children":[],"call":[]}," RedmineGitolite Config git_cmd_script_path":{"type":"method","name":"git_cmd_script_path","children":[],"call":[]}," RedmineGitolite Config shell_cmd_script_path":{"type":"method","name":"shell_cmd_script_path","children":[],"call":[]}," RedmineGitolite Config gitolite_command":{"type":"method","name":"gitolite_command","children":[],"call":[]}," RedmineGitolite Config gitolite_banner":{"type":"method","name":"gitolite_banner","children":[],"call":[]}," RedmineGitolite Config gitolite_version":{"type":"method","name":"gitolite_version","children":[],"call":[]}," RedmineGitolite Config sudo_version":{"type":"method","name":"sudo_version","children":[],"call":[]}," RedmineGitolite Config sudo_version_raw":{"type":"method","name":"sudo_version_raw","children":[],"call":[]}," RedmineGitolite Config can_redmine_sudo_to_gitolite_user?":{"type":"method","name":"can_redmine_sudo_to_gitolite_user?","children":[],"call":[]}," RedmineGitolite Config can_gitolite_sudo_to_redmine_user?":{"type":"method","name":"can_gitolite_sudo_to_redmine_user?","children":[],"call":[]}," RedmineGitolite Config scripts_dir_writeable?":{"type":"method","name":"scripts_dir_writeable?","children":[],"call":[]}," RedmineGitolite Config get_scripts_dir_path":{"type":"method","name":"get_scripts_dir_path","children":[],"call":[]}," RedmineGitolite Config temp_dir_writeable?":{"type":"method","name":"temp_dir_writeable?","children":[],"call":[]}," RedmineGitolite Config get_temp_dir_path":{"type":"method","name":"get_temp_dir_path","children":[],"call":[]}," RedmineGitolite Config gitolite_hooks_url":{"type":"method","name":"gitolite_hooks_url","children":[],"call":[]}," RedmineGitolite Config my_root_url":{"type":"method","name":"my_root_url","children":[],"call":[]}," RedmineGitolite Config https_root_url":{"type":"method","name":"https_root_url","children":[],"call":[]}," RedmineGitolite Config http_root_url":{"type":"method","name":"http_root_url","children":[],"call":[]}," RedmineGitolite Config gitolite_admin_dir":{"type":"method","name":"gitolite_admin_dir","children":[],"call":[]}," RedmineGitolite Config gitolite_admin_url":{"type":"method","name":"gitolite_admin_url","children":[],"call":[]}," RedmineGitolite Config gitolite_scripts_dir":{"type":"method","name":"gitolite_scripts_dir","children":[],"call":[]}," RedmineGitolite Config gitolite_temp_dir":{"type":"method","name":"gitolite_temp_dir","children":[],"call":[]}," RedmineGitolite Config gitolite_ssh_public_key":{"type":"method","name":"gitolite_ssh_public_key","children":[],"call":[]}," RedmineGitolite Config gitolite_ssh_private_key":{"type":"method","name":"gitolite_ssh_private_key","children":[],"call":[]}," RedmineGitolite Config gitolite_server_port":{"type":"method","name":"gitolite_server_port","children":[],"call":[]}," RedmineGitolite Config https_server_domain":{"type":"method","name":"https_server_domain","children":[],"call":[]}," RedmineGitolite Config http_server_domain":{"type":"method","name":"http_server_domain","children":[],"call":[]}," RedmineGitolite Config gitolite_user":{"type":"method","name":"gitolite_user","children":[],"call":[]}," RedmineGitolite Config redmine_user=":{"type":"method","name":"redmine_user=","children":[],"call":[]}," RedmineGitolite Config redmine_user":{"type":"method","name":"redmine_user","children":[],"call":[]}," RedmineGitolite Config logger":{"type":"method","name":"logger","children":[],"call":[]}," RedmineGitolite Cache clear_obsolete_cache_entries":{"type":"method","name":"clear_obsolete_cache_entries","children":[],"call":[]}," RedmineGitolite Cache clear_cache_for_repository":{"type":"method","name":"clear_cache_for_repository","children":[],"call":[]}," RedmineGitolite Cache expire_at":{"type":"method","name":"expire_at","children":[],"call":[]}," RedmineGitolite Cache limit_cache":{"type":"method","name":"limit_cache","children":[],"call":[]}," RedmineGitolite Cache set_cache":{"type":"method","name":"set_cache","children":[],"call":[]}," RedmineGitolite Cache check_cache":{"type":"method","name":"check_cache","children":[],"call":[]}," RedmineGitolite Cache compose_key":{"type":"method","name":"compose_key","children":[],"call":[]}," RedmineGitolite Cache max_cache_size":{"type":"method","name":"max_cache_size","children":[],"call":[]}," RedmineGitolite Cache max_cache_elements":{"type":"method","name":"max_cache_elements","children":[],"call":[]}," RedmineGitolite Cache max_cache_time":{"type":"method","name":"max_cache_time","children":[],"call":[]}," RedmineGitolite Cache exit_shell":{"type":"method","name":"exit_shell","children":[],"call":[" class set_cache "," class ","@my_buffer_overfull ! ","@wrap_thread join ","@wrap_thread run ","@state == "]}," RedmineGitolite Cache startup_shell":{"type":"method","name":"startup_shell","children":[],"call":["Thread  pass ","proxy_started ! ","Thread  stop ","Redmine Scm Adapters AbstractAdapter  shellout ","io close_write ","io puts ","io binmode ","options [] ","Thread  new ","Thread  abort_on_exception= "]}," RedmineGitolite Cache initialize":{"type":"method","name":"initialize","children":[],"call":[" startup_shell ","options [] "]}," RedmineGitolite Cache simple_proxy":{"type":"method","name":"simple_proxy","children":[],"call":["@my_read_stream send "]}," RedmineGitolite Cache normal_diverter":{"type":"method","name":"normal_diverter","children":[],"call":[" add_to_buffer ","@state == ","@my_read_stream send "]}," RedmineGitolite Cache enumerator_diverter":{"type":"method","name":"enumerator_diverter","children":[],"call":["@my_read_stream send ","EnumerableRedirector  new ","block call "," add_to_buffer "," block_given? ","@state == "]}," RedmineGitolite Cache push_to_buffer":{"type":"method","name":"push_to_buffer","children":[],"call":["@my_buffer << ","@my_buffer length + <= "," class max_cache_size "," class ","@my_buffer length + ","nextchunk length ","@my_buffer length ","invalue chr ","invalue is_a? ","invalue chr  length "]}," RedmineGitolite Cache add_to_buffer":{"type":"method","name":"add_to_buffer","children":[],"call":[" push_to_buffer ","invalue each ","invalue is_a? "]}," RedmineGitolite Cache EnumerableRedirector each":{"type":"method","name":"each","children":[],"call":["@my_redirector add_to_buffer ","@my_enum each "," to_enum "," block_given? "]}," RedmineGitolite Cache EnumerableRedirector initialize":{"type":"method","name":"initialize","children":[],"call":[]}," RedmineGitolite Cache method_missing":{"type":"method","name":"method_missing","children":[],"call":[" send "," class class_eval "," class ","my_name =~ ","my_method to_s "," raise "," logger error "," logger ","@my_read_stream nil? ","IO  instance_methods map include? ","my_method to_sym ","IO  instance_methods map ","IO  instance_methods ","my_method to_s  =~ "]}," RedmineGitolite Cache close_write":{"type":"method","name":"close_write","children":[],"call":[" startup_shell "," class check_cache "," class "]}," RedmineGitolite Cache binmode":{"type":"method","name":"binmode","children":[],"call":[]}," RedmineGitolite Cache write":{"type":"method","name":"write","children":[],"call":["@my_extra_args << ","obj to_s "]}," RedmineGitolite Cache putc":{"type":"method","name":"putc","children":[],"call":["@my_extra_args << "," retval_to_s "]}," RedmineGitolite Cache puts":{"type":"method","name":"puts","children":[],"call":["@my_extra_args << ","args join + ","args join "]}," RedmineGitolite Cache respond_to?":{"type":"method","name":"respond_to?","children":[],"call":[" block "," args ","IO  instance_methods map include? ","my_method to_sym ","IO  instance_methods map ","IO  instance_methods "]}," RedmineGitolite Cache execute":{"type":"method","name":"execute","children":[],"call":[]}," RedmineGitolite Cache logger":{"type":"method","name":"logger","children":[],"call":[]}," RedmineGitolite AdminUsersHelper remove_inactive_key":{"type":"method","name":"remove_inactive_key","children":[],"call":["key [] "," logger info "," logger ","@gitolite_admin rm_key ","(send\n  (lvar :repo_keys) :find_all) first ","k owner == ","k owner ","k location == ","k location ","repo_keys find_all ","@gitolite_admin ssh_keys [] ","@gitolite_admin ssh_keys ","(send\n  (lvar :(send\n  (lvar :repo_keys) :find_all) first s) :find_all) first ","(send\n  (lvar :@gitolite_admin ssh_keys [] ) :find_all) first ","(send\n  (lvar :repo_keys) :find_all) first s find_all ","@gitolite_admin ssh_keys []  find_all "]}," RedmineGitolite AdminUsersHelper remove_inactive_keys":{"type":"method","name":"remove_inactive_keys","children":[],"call":[" remove_inactive_key ","key owner "," logger info "," logger ","ssh_key []= ","key location ","keys each "]}," RedmineGitolite AdminUsersHelper add_active_keys":{"type":"method","name":"add_active_keys","children":[],"call":["@gitolite_admin add_key ","repo_key owner= ","key owner ","repo_key location= ","key location ","Gitolite SSHKey  new ","parts [] "," logger info "," logger ","repo_key email= ","repo_key blob= ","repo_key type= ","(send\n  (lvar :repo_keys) :find_all) first ","k owner == ","k owner ","k location == ","k location ","repo_keys find_all ","@gitolite_admin ssh_keys [] ","@gitolite_admin ssh_keys ","key key split ","key key ","keys each ","Gitolite SSHKey  new  owner= ","(send\n  (lvar :repo_keys) :find_all) first  owner= ","Gitolite SSHKey  new  location= ","(send\n  (lvar :repo_keys) :find_all) first  location= ","key key split  [] ","Gitolite SSHKey  new  email= ","(send\n  (lvar :repo_keys) :find_all) first  email= ","Gitolite SSHKey  new  blob= ","(send\n  (lvar :repo_keys) :find_all) first  blob= ","Gitolite SSHKey  new  type= ","(send\n  (lvar :repo_keys) :find_all) first  type= ","(send\n  (lvar :Gitolite SSHKey  new s) :find_all) first ","(send\n  (lvar :(send\n  (lvar :repo_keys) :find_all) first s) :find_all) first ","(send\n  (lvar :@gitolite_admin ssh_keys [] ) :find_all) first ","Gitolite SSHKey  new s find_all ","(send\n  (lvar :repo_keys) :find_all) first s find_all ","@gitolite_admin ssh_keys []  find_all "]}," RedmineGitolite AdminUsersHelper handle_ssh_key_delete":{"type":"method","name":"handle_ssh_key_delete","children":[],"call":[" remove_inactive_key "]}," RedmineGitolite AdminUsersHelper handle_user_update":{"type":"method","name":"handle_user_update","children":[],"call":[" remove_inactive_keys ","user gitolite_public_keys inactive ","user gitolite_public_keys "," add_active_keys ","user gitolite_public_keys active "]}," RedmineGitolite AdminUsers update_all_ssh_keys":{"type":"method","name":"update_all_ssh_keys","children":[],"call":[" gitolite_admin_repo_commit ","user login "," handle_user_update ","users each "," wrapped_transaction ","user gitolite_public_keys any? ","user gitolite_public_keys "]}," RedmineGitolite AdminUsers delete_ssh_keys":{"type":"method","name":"delete_ssh_keys","children":[],"call":[" gitolite_admin_repo_commit ","ssh_key [] "," handle_ssh_key_delete "," wrapped_transaction "]}," RedmineGitolite AdminUsers update_user":{"type":"method","name":"update_user","children":[],"call":[" gitolite_admin_repo_commit ","user login "," handle_user_update "," wrapped_transaction "]}," RedmineGitolite AdminUsers update_all_ssh_keys_forced":{"type":"method","name":"update_all_ssh_keys_forced","children":[],"call":[" update_ssh_keys ","User  all "," update_all_ssh_keys ","User  includes all ","User  includes "]}," RedmineGitolite AdminUsers delete_ssh_key":{"type":"method","name":"delete_ssh_key","children":[],"call":[" delete_ssh_keys "]}," RedmineGitolite AdminUsers update_ssh_keys":{"type":"method","name":"update_ssh_keys","children":[],"call":[" update_user ","User  find_by_id "]}," RedmineGitolite AdminUsers add_ssh_key":{"type":"method","name":"add_ssh_key","children":[],"call":[" update_user ","User  find_by_id "]}," RedmineGitolite AdminRepositoriesHelper delete_hook_section":{"type":"method","name":"delete_hook_section","children":[],"call":["repository gitolite_repository_name "," logger error "," logger "," logger info ","RedmineGitolite GitHosting  execute_command ","repository gitolite_repository_path "]}," RedmineGitolite AdminRepositoriesHelper delete_hook_param":{"type":"method","name":"delete_hook_param","children":[],"call":["repository gitolite_repository_name "," logger error "," logger "," logger info ","RedmineGitolite GitHosting  execute_command ","repository gitolite_repository_path "]}," RedmineGitolite AdminRepositoriesHelper create_readme_file":{"type":"method","name":"create_readme_file","children":[],"call":["FileUtils  remove_entry ","e output "," logger error "," logger ","repository gitolite_repository_name "," logger info ","RedmineGitolite GitHosting  execute_command ","command << ","repository extra [] ","repository extra ","repository ssh_url ","RedmineGitolite Config  gitolite_admin_ssh_script_path ","Dir  mktmpdir ","RedmineGitolite Config  gitolite_commit_author ","e RedmineGitolite GitHosting  execute_command  "]}," RedmineGitolite AdminRepositoriesHelper move_physical_repo":{"type":"method","name":"move_physical_repo","children":[],"call":[" logger error "," logger "," logger info ","RedmineGitolite GitHosting  execute_command ","RedmineGitolite GitHosting  file_exists? ! ","RedmineGitolite GitHosting  file_exists? "," logger debug "," is_repository_empty? "," logger warn ","old_path == "]}," RedmineGitolite AdminRepositoriesHelper is_repository_empty?":{"type":"method","name":"is_repository_empty?","children":[],"call":["output to_i == ","output to_i "," logger debug "," logger ","RedmineGitolite GitHosting  execute_command chomp gsub ","RedmineGitolite GitHosting  execute_command chomp ","RedmineGitolite GitHosting  execute_command ","RedmineGitolite GitHosting  execute_command chomp gsub  to_i == ","RedmineGitolite GitHosting  execute_command chomp gsub  to_i "]}," RedmineGitolite AdminRepositoriesHelper clean_path":{"type":"method","name":"clean_path","children":[],"call":[" logger error "," logger ","RedmineGitolite GitHosting  execute_command "," logger info ","path_list uniq sort reverse each ","path_list uniq sort reverse ","path_list uniq sort ","path_list uniq "]}," RedmineGitolite AdminRepositoriesHelper build_permissions":{"type":"method","name":"build_permissions","children":[],"call":["permissions []= ","read uniq sort ","read uniq ","read empty? ","write uniq sort ","write uniq ","write empty? ","rewind uniq sort ","rewind uniq ","rewind empty? ","read << ","user gitolite_identifier ","all_read map ","rewind_users + + ","rewind_users + ","project archived? ","repository extra git_daemon == ","repository extra git_daemon ","repository extra ","User  anonymous allowed_to? ","User  anonymous ","repository extra git_http != ","repository extra git_http ","cred gitolite_public_key owner ","cred gitolite_public_key ","cred perm == ","cred perm ","rewind << ","deploy_keys each ","deploy_keys any? ","repository repository_deployment_credentials active ","repository repository_deployment_credentials ","read_users map ","write_users map ","rewind_users map ","project active? ","(send\n  (lvar :users) :select) - - ","(send\n  (lvar :users) :select) - ","user allowed_to? ","users select ","repository project ","repository project member_principals map compact uniq ","repository project member_principals map compact ","repository project member_principals map ","repository project member_principals ","rewind_users + +  map ","rewind_repository project member_principals map compact uniq  + + ","rewind_repository project member_principals map compact uniq  + ","repository project  archived? ","repository repository_deployment_credentials active  each ","repository repository_deployment_credentials active  any? ","(send\n  (lvar :users) :select) - -  map ","read_repository project member_principals map compact uniq  map ","(send\n  (lvar :users) :select) -  map ","write_repository project member_principals map compact uniq  map ","rewind_repository project member_principals map compact uniq  map ","repository project  active? ","(send\n  (lvar :repository project member_principals map compact uniq ) :select) - - ","(send\n  (lvar :repository project member_principals map compact uniq ) :select) - ","repository project member_principals map compact uniq  select ","repository repository project  ","repository repository project  member_principals map compact uniq ","repository repository project  member_principals map compact ","repository repository project  member_principals map ","repository repository project  member_principals "]}," RedmineGitolite AdminRepositoriesHelper merge_permissions":{"type":"method","name":"merge_permissions","children":[],"call":["merge_permissions delete ","merge_permissions [] empty? ","merge_permissions [] ","merge_permissions each ","merge_permissions [] [] ","merge_permissions [] []= ","merge_permissions [] has_key? ! ","merge_permissions [] has_key? ","user_list any? ","branch_settings each ","old_permissions each ","current_permissions each ","merge_permissions []= "]}," RedmineGitolite AdminRepositoriesHelper get_old_permissions":{"type":"method","name":"get_old_permissions","children":[],"call":["old_permissions [] []= ","old_permissions [] ","new_user_list any? ","new_user_list push ","user include? ! ","user include? ","SKIP_USERS  include? ","@gitolite_identifier_prefix == ","user_list each ","user_list empty? ","branch_settings each ","old_permissions []= ","current_permissions each ","repo_conf permissions [] ","repo_conf permissions ","repo_conf permissions []  each "]}," RedmineGitolite AdminRepositoriesHelper do_move_repositories":{"type":"method","name":"do_move_repositories","children":[],"call":[" handle_repository_add ","@gitolite_config rm_repo "," get_old_permissions ","repository update_column ","@delete_parent_path push "," move_physical_repo "," logger error "," logger ","repo_conf ! "," logger debug "," logger info ","new_relative_path gsub ","repo_id + ","old_relative_path gsub ","repository gitolite_repository_path ","repository url ","repository new_repository_name ","repository old_repository_name ","@gitolite_config repos [] ","@gitolite_config repos ","repository redmine_name ","@gitolite_config repos []  ! ","repository gitolite_repository_path  gsub ","repository redmine_name  + ","repository url  gsub "]}," RedmineGitolite AdminRepositoriesHelper do_update_repository":{"type":"method","name":"do_update_repository","children":[],"call":["repo_conf permissions= "," merge_permissions "," build_permissions ","@gitolite_config add_repo ","repo_conf set_git_config ","git_config_key value ","git_config_key key ","repository repository_git_config_keys each ","repository repository_git_config_keys ","repository repository_git_config_keys any? ","mailing_list keys join ","mailing_list keys ","repository mailing_list_params [] ","repository mailing_list_params ","mailing_list empty? ! ","mailing_list empty? ","repository extra git_notify == ","repository extra git_notify ","repository extra ","repository extra git_http != ","repository extra git_http ","User  anonymous allowed_to? ","User  anonymous ","project active? ","repository extra key ","repository identifier ","repository project identifier to_s ","repository project identifier ","repository project ","Gitolite Config Repo  new ","@gitolite_config repos [] ","@gitolite_config repos ","repository gitolite_repository_name ","Gitolite Config Repo  new  permissions= ","@gitolite_config repos []  permissions= ","Gitolite Config Repo  new  set_git_config ","@gitolite_config repos []  set_git_config ","repository mailing_list_params []  keys join ","repository mailing_list_params []  keys ","repository repository mailing_list_params [] _params [] ","repository repository mailing_list_params [] _params ","repository mailing_list_params []  empty? ! ","repository mailing_list_params []  empty? ","repository project  active? ","repository repository project  identifier to_s ","repository repository project  identifier ","repository repository project  "]}," RedmineGitolite AdminRepositoriesHelper handle_repositories_move":{"type":"method","name":"handle_repositories_move","children":[],"call":[" gitolite_admin_repo_commit ","project identifier "," do_move_repositories ","repo_list push ","repository gitolite_repository_name ","project gitolite_repos reverse each ","project gitolite_repos reverse ","project gitolite_repos ","git_projects reverse each ","git_projects reverse ","git_projects empty? ","p gitolite_repos any? ","p gitolite_repos ","projects uniq select ","projects uniq ","project self_and_descendants ","git_project self_and_descendants  reverse each ","git_project self_and_descendants  reverse ","git_project self_and_descendants  empty? ","project self_and_descendants  uniq select ","project self_and_descendants  uniq "]}," RedmineGitolite AdminRepositoriesHelper handle_repository_delete":{"type":"method","name":"handle_repository_delete","children":[],"call":["@gitolite_config rm_repo "," logger debug "," logger "," logger info "," logger warn ","repo_conf ! ","@gitolite_config repos [] ","@gitolite_config repos ","repository_data [] ","@gitolite_config repos []  ! "]}," RedmineGitolite AdminRepositoriesHelper handle_repository_update":{"type":"method","name":"handle_repository_update","children":[],"call":[" do_update_repository "," logger debug "," logger "," logger warn ","@gitolite_config rm_repo "," get_old_permissions "," logger info ","@gitolite_config repos [] ","@gitolite_config repos ","repository gitolite_repository_path ","repository gitolite_repository_name "]}," RedmineGitolite AdminRepositoriesHelper handle_repository_add":{"type":"method","name":"handle_repository_add","children":[],"call":[" do_update_repository "," logger debug "," logger "," logger warn ","@gitolite_config rm_repo "," get_old_permissions "," logger info ","repo_conf ! ","@gitolite_config repos [] ","@gitolite_config repos ","repository gitolite_repository_path ","repository gitolite_repository_name ","opts [] ","opts [] is_a? ","opts has_key? ","opts [] == "," get_ get_old_permissions  ","@gitolite_config repos []  ! "]}," RedmineGitolite AdminRepositories update_repository_default_branch":{"type":"method","name":"update_repository_default_branch","children":[],"call":["repository fetch_changesets ","repository gitolite_repository_name "," logger info "," logger ","RedmineGitolite Cache  clear_cache_for_repository "," logger error ","RedmineGitolite GitHosting  execute_command ","repository extra [] ","repository extra ","repository gitolite_repository_path ","Repository  find_by_id ","Repository  find_by_id  fetch_changesets ","Repository  find_by_id  gitolite_Repository  find_by_id _name ","RedmineGitolite Cache  clear_cache_for_Repository  find_by_id  ","Repository  find_by_id  extra [] ","Repository  find_by_id  extra ","Repository  find_by_id  gitolite_Repository  find_by_id _path "]}," RedmineGitolite AdminRepositories delete_repositories":{"type":"method","name":"delete_repositories","children":[],"call":[" gitolite_admin_repo_commit ","repository_data [] ","recycle move_repository_to_recycle ","RedmineGitolite Recycle  new "," handle_repository_delete ","repositories_array each "," wrapped_transaction ","RedmineGitolite Recycle  new  move_repository_to_RedmineGitolite Recycle  new  "]}," RedmineGitolite AdminRepositories update_repository":{"type":"method","name":"update_repository","children":[],"call":[" delete_hook_param ","@options [] ","@options [] empty? ! ","@options [] empty? ","@options has_key? "," gitolite_admin_repo_commit ","repository gitolite_repository_name "," handle_repository_update "," wrapped_transaction ","Repository  find_by_id ","Repository  find_by_id  gitolite_Repository  find_by_id _name "," handle_Repository  find_by_id _update "]}," RedmineGitolite AdminRepositories add_repository":{"type":"method","name":"add_repository","children":[],"call":[" create_readme_file ","@recovered ! ","repository gitolite_repository_path "," logger info "," logger ","recycle recover_repository_if_present? ","RedmineGitolite Recycle  new "," gitolite_admin_repo_commit ","repository gitolite_repository_name "," handle_repository_add "," wrapped_transaction ","@options [] == ","@options [] ","@options has_key? ","Repository  find_by_id ","repository fetch_changesets "," logger warn "," is_repository_empty? ","recycle recover_repository_if_present?  ! ","Repository  find_by_id  gitolite_Repository  find_by_id _path ","RedmineGitolite Recycle  new  recover_repository_if_present? ","recycle recover_Repository  find_by_id _if_present? ","Repository  find_by_id  gitolite_Repository  find_by_id _name "," handle_Repository  find_by_id _add ","Repository  find_by_id  fetch_changesets "," is_Repository  find_by_id _empty? "]}," RedmineGitolite AdminProjects handle_project_update":{"type":"method","name":"handle_project_update","children":[],"call":[" handle_repository_update "," handle_repository_add ","force == ","project gitolite_repos each ","project gitolite_repos "]}," RedmineGitolite AdminProjects update_projects_forced":{"type":"method","name":"update_projects_forced","children":[],"call":[" gitolite_admin_repo_commit ","project identifier "," handle_project_update ","projects each "," wrapped_transaction ","r is_a? ","p repositories detect ","p repositories ","projects detect ","projects is_a? "]}," RedmineGitolite AdminProjects do_update_projects":{"type":"method","name":"do_update_projects","children":[],"call":[" gitolite_admin_repo_commit ","project identifier "," handle_project_update ","projects each "," wrapped_transaction ","r is_a? ","p repositories detect ","p repositories ","projects detect ","projects is_a? "]}," RedmineGitolite AdminProjects move_repositories_tree":{"type":"method","name":"move_repositories_tree","children":[],"call":[" clean_path "," handle_repositories_move ","projects each "," wrapped_transaction ","x parent_id nil? ","x parent_id ","Project  active_or_archived includes all select ","Project  active_or_archived includes all ","Project  active_or_archived includes ","Project  active_or_archived "]}," RedmineGitolite AdminProjects move_repositories":{"type":"method","name":"move_repositories","children":[],"call":[" clean_path "," handle_repositories_move "," wrapped_transaction ","Project  find_by_id "]}," RedmineGitolite AdminProjects update_role":{"type":"method","name":"update_role","children":[],"call":[" do_update_projects ","projects length > ","projects length ","role members map flatten uniq compact ","role members map flatten uniq ","role members map flatten ","role members map ","role members ","role nil? ! ","role nil? ","Role  find_by_id "," do_update_role members map flatten uniq compact  ","role members map flatten uniq compact  length > ","role members map flatten uniq compact  length ","Role  find_by_id  members map flatten uniq compact ","Role  find_by_id  members map flatten uniq ","Role  find_by_id  members map flatten ","Role  find_by_id  members map ","Role  find_by_id  members ","Role  find_by_id  nil? ! ","Role  find_by_id  nil? "]}," RedmineGitolite AdminProjects update_members":{"type":"method","name":"update_members","children":[],"call":[" do_update_projects ","Project  find_by_id "]}," RedmineGitolite AdminProjects update_all_projects_forced":{"type":"method","name":"update_all_projects_forced","children":[],"call":[" update_projects_forced ","projects length > ","projects length ","Project  active_or_archived includes all ","Project  active_or_archived includes ","Project  active_or_archived "," update_Project  active_or_archived includes all _forced ","Project  active_or_archived includes all  length > ","Project  active_or_archived includes all  length "]}," RedmineGitolite AdminProjects update_all_projects":{"type":"method","name":"update_all_projects","children":[],"call":[" do_update_projects ","projects length > ","projects length ","Project  active_or_archived includes all ","Project  active_or_archived includes ","Project  active_or_archived "," do_update_Project  active_or_archived includes all  ","Project  active_or_archived includes all  length > ","Project  active_or_archived includes all  length "]}," RedmineGitolite AdminProjects update_projects":{"type":"method","name":"update_projects","children":[],"call":[" do_update_projects ","object push ","project nil? ! ","project nil? ","Project  find_by_id ","@object_id each "," do_update_Project  find_by_id s ","Project  find_by_id  nil? ! ","Project  find_by_id  nil? "]}," RedmineGitolite AdminProjects update_project":{"type":"method","name":"update_project","children":[],"call":[" do_update_projects ","Project  find_by_id "]}," RedmineGitolite Admin wrapped_transaction":{"type":"method","name":"wrapped_transaction","children":[],"call":[" logger info "," logger "," gitolite_admin_repo_push "," gitolite_admin_repo_clone "," get_lock "]}," RedmineGitolite Admin get_lock":{"type":"method","name":"get_lock","children":[],"call":[" logger error "," logger "," logger debug ","file flock ","file sync= ","File  open ","File  exist? ","lock_file nil? ! ","lock_file nil? "," get_lock_file "," get_lock_file  nil? ! "," get_lock_file  nil? "," get_ get_lock_file  "]}," RedmineGitolite Admin get_lock_file":{"type":"method","name":"get_lock_file","children":[],"call":["File  new ","File CREAT  | "]}," RedmineGitolite Admin gitolite_admin_repo_push":{"type":"method","name":"gitolite_admin_repo_push","children":[],"call":["e message "," logger error "," logger ","@gitolite_admin apply "," logger info ","e err ","e command "]}," RedmineGitolite Admin gitolite_admin_repo_commit":{"type":"method","name":"gitolite_admin_repo_commit","children":[],"call":["@gitolite_admin save ","e message "," logger error "," logger ","e err ","e command "," logger info ","e out "," logger warn ","e out include? ","e out include? ! "]}," RedmineGitolite Admin gitolite_admin_repo_clone":{"type":"method","name":"gitolite_admin_repo_clone","children":[],"call":["@gitolite_admin config= ","Gitolite Config  new "," logger info "," logger "," logger error ","File  exists? ! ","File  exists? "," logger warn ","include_present to_i == ","include_present to_i ","e message ","RedmineGitolite GitHosting  execute_command ","@gitolite_config_file != ","Gitolite GitoliteAdmin  new ","e output ","e command ","@gitolite_admin config ","Gitolite GitoliteAdmin  is_gitolite_admin_repo? ! ","Gitolite GitoliteAdmin  is_gitolite_admin_repo? ","Gitolite GitoliteAdmin  new  config= ","RedmineGitolite GitHosting  execute_command  to_i == ","RedmineGitolite GitHosting  execute_command  to_i ","Gitolite Config  new _file != ","@gitolite_admin config _file != ","Gitolite GitoliteAdmin  new  config "]}," RedmineGitolite Admin logger":{"type":"method","name":"logger","children":[],"call":["RedmineGitolite Log  get_logger "]}," RedmineGitolite Admin purge_recycle_bin":{"type":"method","name":"purge_recycle_bin","children":[],"call":[" logger info "," logger ","recycle delete_expired_files ","RedmineGitolite Recycle  new ","RedmineGitolite Recycle  new  delete_expired_files "]}," RedmineGitolite Admin initialize":{"type":"method","name":"initialize","children":[],"call":["RedmineGitolite ConfigRedmine  get_setting == ","RedmineGitolite ConfigRedmine  get_setting ","File  join ","RedmineGitolite Config  get_temp_dir_path ","RedmineGitolite Config  gitolite_admin_ssh_script_path ","RedmineGitolite Config  gitolite_admin_url ","RedmineGitolite Config  gitolite_admin_dir ","RedmineGitolite Config  gitolite_commit_author ","RedmineGitolite ConfigRedmine  get_setting to_i "]}," RedmineGitHosting Patches UsersControllerPatch InstanceMethods edit_with_git_hosting":{"type":"method","name":"edit_with_git_hosting","children":[],"call":[" edit_without_git_hosting "," set_public_key_values "]}," RedmineGitHosting Patches UserPatch InstanceMethods gitolite_identifier":{"type":"method","name":"gitolite_identifier","children":[],"call":["(begin\n  (send\n    (const\n      (const nil :RedmineGitolite) :ConfigRedmine) :get_setting\n    (sym :gitolite_identifier_prefix))) gsub "," login underscore "," login ","RedmineGitolite ConfigRedmine  get_setting ","(send\n  (const\n    (const nil :RedmineGitHosting) :Config) :gitolite_identifier_prefix) join "," id "," login underscore gsub ","RedmineGitHosting Config  gitolite_identifier_prefix ","identifier join ","identifier concat ","RedmineGitHosting Config  gitolite_identifier_strip_user_id? ! ","RedmineGitHosting Config  gitolite_identifier_strip_user_id? "," stripped_login "]}," RedmineGitHosting Patches SettingPatch InstanceMethods restore_git_hosting_values":{"type":"method","name":"restore_git_hosting_values","children":[],"call":["valuehash clone ","RedmineGitolite GitHosting  resync_gitolite ","@@delete_trash_repo empty? ! ","@@delete_trash_repo empty? ","RedmineGitolite Cache  clear_obsolete_cache_entries ","@@old_valuehash [] != ","valuehash [] ","@@old_valuehash [] ","hooks hook_params_installed? ","RedmineGitolite Hooks  new ","users length ","RedmineGitolite GitHosting  logger info ","RedmineGitolite GitHosting  logger ","users length > ","User  all ","@@resync_ssh_keys == ","projects length ","projects length > ","Project  active_or_archived includes all ","Project  active_or_archived includes ","Project  active_or_archived ","@@resync_projects == ","hooks check_install ","x parent_id nil? ","x parent_id ","Project  active_or_archived includes all select ","RedmineGitolite Config  update_scripts ","Setting  check_cache ","Setting  respond_to? "," value "," name == "," name ","RedmineGitolite HookManager  update_hook_params! ","RedmineGitolite HookManager  check_install! ","ApplySettings  new call ","ApplySettings  new ","GitoliteAccessor  flush_settings_cache "," value  clone ","valuehash clone  [] != ","@@old_ value  [] != "," value  [] ","valuehash clone  [] ","@@old_ value  [] ","RedmineGitolite Hooks  new  hook_params_installed? ","User  all  length ","User  all  length > ","Project  active_or_archived includes all  length ","Project  active_or_archived includes all  length > ","@@resync_Project  active_or_archived includes all  == ","RedmineGitolite Hooks  new  check_install "]}," RedmineGitHosting Patches SettingPatch InstanceMethods save_git_hosting_values":{"type":"method","name":"save_git_hosting_values","children":[],"call":[" value= ","valuehash []= ","valuehash [] == ","valuehash [] ","valuehash [] empty? ! ","valuehash [] empty? ","valuehash has_key? ","@@old_valuehash [] ","(str \"^([^@\\\\s]+)@((?:[-a-z0-9]+\\\\.)+[a-z]{2,})$\") match ! ","(str \"^([^@\\\\s]+)@((?:[-a-z0-9]+\\\\.)+[a-z]{2,})$\") match ","Setting  mail_from to_s strip downcase ","Setting  mail_from to_s strip ","Setting  mail_from to_s ","Setting  mail_from ","valuehash [] blank? ","intersection length to_i > ","intersection length to_i ","intersection length ","valuehash [] & ","has_error > ","item =~ ","valuehash [] each ","mail blank? ! ","mail blank? ","valuehash [] select ","(sym :gitolite_notify_global_include) each ","valuehash [] to_i ","valuehash [] to_i < ","valuehash [] to_i > ","(send\n  (send\n    (send\n      (lvar :valuehash) :[]\n      (sym :gitolite_recycle_bin_expiration_time)) :to_f) :*\n  (int 10)) to_i / ","(send\n  (send\n    (send\n      (lvar :valuehash) :[]\n      (sym :gitolite_recycle_bin_expiration_time)) :to_f) :*\n  (int 10)) to_i ","valuehash [] to_f * ","valuehash [] to_f ","valuehash [] to_f > ","RedmineGitolite GitHosting  logger error ","RedmineGitolite GitHosting  logger ","Repository Git  have_duplicated_identifier? ","@@old_valuehash [] == ","normalizedFile [] + ","normalizedFile [] ","normalizedFile != ","File  expand_path ","valuehash [] lstrip rstrip ","valuehash [] lstrip ","(sym :gitolite_global_storage_dir) each ","normalizedServer match ! ","normalizedServer match ","valuehash [] lstrip rstrip split first ","valuehash [] lstrip rstrip split ","valuehash [] != ","(sym :ssh_server_domain) each ","normalizedFile + ","RedmineGitolite Config  get_temp_dir_path ","stripped [] != ","stripped [] ","normalizedFile == ","RedmineGitolite Config  get_scripts_dir_path ","RedmineGitolite Config  scripts_dir_writeable? ! ","RedmineGitolite Config  scripts_dir_writeable? "," value "," name == "," name ","ValidateSettings  new call ","ValidateSettings  new "," value  []= "," value  [] == "," value  [] "," value  [] empty? ! "," value  [] empty? "," value  has_key? ","@@old_ value  [] "," value  [] blank? ","valuehash [] &  length to_i > ","valuehash [] &  length to_i ","valuehash [] &  length "," value  [] & "," value  [] each "," value  [] select "," value  [] to_i "," value  [] to_i < "," value  [] to_i > ","(send\n  (send\n    (send\n      (lvar : value ) :[]\n      (sym :gitolite_recycle_bin_expiration_time)) :to_f) :*\n  (int 10)) to_i / ","(send\n  (send\n    (send\n      (lvar : value ) :[]\n      (sym :gitolite_recycle_bin_expiration_time)) :to_f) :*\n  (int 10)) to_i "," value  [] to_f * "," value  [] to_f "," value  [] to_f > ","@@old_ value  [] == ","File  expand_path  [] + ","File  expand_path  [] ","File  expand_path  != "," value  [] lstrip rstrip "," value  [] lstrip ","valuehash [] lstrip rstrip split first  match ! ","valuehash [] lstrip rstrip split first  match "," value  [] lstrip rstrip split first "," value  [] lstrip rstrip split "," value  [] != ","File  expand_path  + ","valuehash [] lstrip rstrip  [] != ","valuehash [] lstrip rstrip  [] ","File  expand_path  == "]}," RedmineGitHosting Patches SettingPatch included":{"type":"method","name":"included","children":[],"call":[]}," RedmineGitHosting Patches RepositoryPatch InstanceMethods get_hour_from_date":{"type":"method","name":"get_hour_from_date","children":[],"call":["local hour ","time localtime ","time utc? ","time in_time_zone ","User  current time_zone ","User  current ","date to_time ","time in_time_zone  hour ","time time in_time_zone time ","date to_time  localdate to_time  ","date to_time  utc? ","time in_time_User  current time_zone  ","date to_time  in_date to_time _zone ","User  current time_User  current time_zone  ","User  current date to_time _zone ","date to_date to_time  "]}," RedmineGitHosting Patches RepositoryPatch InstanceMethods commits_per_author":{"type":"method","name":"commits_per_author","children":[],"call":["data push ","commits_data [] push ","commits values "," l ","commits_data [] ","commits_data []= ","commits keys ","commits values map reduce ","commits values map ","committer split [] gsub ","committer split [] ","committer split ","committer split [] strip ","Changeset  where group count ","Changeset  where group ","Changeset  where "," id ","committers each ","Changeset  where map uniq ","Changeset  where map ","committer_hash [] ","Hash  [] ","commits sort ","newval + ","commits merge ","Changeset  where group order count ","Changeset  where group order ","committer_hash [] each ","y [] <=> ","x [] ","y [] ","committers sort! "," commits_per_author_with_aliases ","Changeset  where group count _data [] push ","Hash  [] _data [] push ","Changeset  where group order count _data [] push ","Changeset  where group order count ommits_data [] push ","Changeset  where group count  values ","Hash  []  values ","Changeset  where group order count  values ","Changeset  where group order count ommits values ","Changeset  where group count _data [] ","Hash  [] _data [] ","Changeset  where group order count _data [] ","Changeset  where group order count ommits_data [] ","Changeset  where group count _data []= ","Hash  [] _data []= ","Changeset  where group order count _data []= ","Changeset  where group order count ommits_data []= ","Changeset  where group count  keys ","Hash  []  keys ","Changeset  where group order count  keys ","Changeset  where group order count ommits keys ","Changeset  where group count  values map reduce ","Hash  []  values map reduce ","Changeset  where group order count  values map reduce ","Changeset  where group order count ommits values map reduChangeset  where group order count e ","Changeset  where group count  values map ","Hash  []  values map ","Changeset  where group order count  values map ","Changeset  where group order count ommits values map ","Changeset  where group order count ommitter split [] gsub ","Changeset  where group order count ommitter split [] ","Changeset  where group order count ommitter split ","Changeset  where group order count ommitter split [] strip ","Changeset  where group Changeset  where group order count ount ","Changeset  where map uniq  each "," commits_per_author_with_aliases  each ","Changeset  where group order count ommitters eaChangeset  where group order count h ","Changeset  where group order count ommitter_hash [] ","Changeset  where group count  sort ","Hash  []  sort ","Changeset  where group order count  sort ","Changeset  where group order count ommits sort ","Changeset  where group count  merge ","Hash  []  merge ","Changeset  where group order count  merge ","Changeset  where group order count ommits merge ","Changeset  where group order Changeset  where group order count ount ","Changeset  where group order count ommitter_hash [] eaChangeset  where group order count h ","Changeset  where map uniq  sort! "," commits_per_author_with_aliases  sort! ","Changeset  where group order count ommitters sort! "," Changeset  where group count _per_author_with_aliases "," Hash  [] _per_author_with_aliases "," Changeset  where group order count _per_author_with_aliases "," Changeset  where group order count ommits_per_author_with_aliases "]}," RedmineGitHosting Patches RepositoryPatch InstanceMethods commits_per_author_global":{"type":"method","name":"commits_per_author_global","children":[],"call":["data [] push "," l ","data [] ","data []= ","c gsub strip ","c gsub ","fields collect ","changes_data + ","(int 0) * ","10 - ","changes_data length ","changes_data length < ","commits_data + ","commits_data length ","commits_data length < ","fields + ","(str \"\") * ","fields length ","fields length < ","h [] ","r first ","commits_by_author collect ","r last ","o []= ","i last ","i first ","changes_by_author inject ","Change  joins where group count ","Change  joins where group ","Change  joins where "," id ","Changeset  table_name ","Change  joins ","x last <=> ","y last ","x last ","commits_by_author to_a sort! ","commits_by_author to_a ","Changeset  where group count ","Changeset  where group ","Changeset  where ","x [] ","merged map "," commits_per_author_with_aliases ","fields +  collect ","changes_data +  + ","changes_data +  length ","changes_data +  length < ","commits_data +  + ","commits_data +  length ","commits_data +  length < ","fields +  + ","fields +  length ","fields +  length < ","Changeset  where group count  collect ","Change  joins where group count  inject ","Changeset  where group count  to_a sort! ","Changeset  where group count  to_a "," commits_per_author_with_aliases  map "]}," RedmineGitHosting Patches RepositoryPatch InstanceMethods commits_per_month":{"type":"method","name":"commits_per_month","children":[],"call":["data [] push ","changes_by_month [] reverse ","changes_by_month [] "," l ","data [] ","commits_by_month [] reverse ","commits_by_month [] ","data []= ","fields reverse ","fields << "," month_name ","(send\n  (begin\n    (send\n      (send\n        (send\n          (send\n            (const nil :Date) :today) :month) :-\n        (int 1)) :-\n      (lvar :m))) :%\n  (int 12)) + ","(send\n  (send\n    (send\n      (send\n        (const nil :Date) :today) :month) :-\n    (int 1)) :-\n  (lvar :m)) % ","Date  today month - - ","Date  today month - ","Date  today month ","Date  today ","12 times ","c last ","(send\n  (send\n    (ivar :@date_to) :month) :-\n  (send\n    (send\n      (send\n        (lvar :c) :first) :to_date) :month)) % ","@date_to month - ","c first to_date month ","c first to_date ","c first ","@date_to month ","changes_by_day each ","(int 0) * ","Change  joins where group count ","Change  joins where group ","Change  joins where "," id ","Changeset  table_name ","Change  joins ","commits_by_day each ","Changeset  where group count ","Changeset  where group ","Changeset  where ","Date  civil ","@date_from month ","@date_from year ","@date_to << ","(send\n  (send\n    (lvar :date_to) :month) :-\n  (send\n    (send\n      (send\n        (lvar :c) :first) :to_date) :month)) % ","date_to month - ","date_to month ","(int 0) *  [] reverse ","(int 0) *  [] ","(send\n  (send\n    (ivar :Date  today ) :month) :-\n  (send\n    (send\n      (send\n        (lvar :c) :first) :to_date) :month)) % ","(send\n  (send\n    (ivar :@Date  today ) :month) :-\n  (send\n    (send\n      (send\n        (lvar :c) :first) :to_date) :month)) % ","Date  today  month - ","@Date  today  month - ","Date  today  month ","@Date  today  month ","Change  joins where group count  each ","Changeset  where group count  each ","Date  civil  month ","@date_to <<  month ","Date  civil  year ","@date_to <<  year ","Date  today  << ","@Date  today  << ","(send\n  (send\n    (lvar :Date  today ) :month) :-\n  (send\n    (send\n      (send\n        (lvar :c) :first) :to_date) :month)) % "]}," RedmineGitHosting Patches RepositoryPatch InstanceMethods commits_per_weekday":{"type":"method","name":"commits_per_weekday","children":[],"call":["data [] push ","data [] ","week_day each ","data []= "," l ","week_day [] ","commit_date to_date wday ","commit_date to_date ","total_commits each ","Changeset  where group count ","Changeset  where group ","Changeset  where "," id ","week_day []= ","Changeset  where group count  each "]}," RedmineGitHosting Patches RepositoryPatch InstanceMethods commits_per_day":{"type":"method","name":"commits_per_day","children":[],"call":["data [] push ","total_changes_by_day values "," l ","data [] ","total_commits_by_day values ","data []= ","total_commits_by_day keys ","Change  joins where group count ","Change  joins where group ","Change  joins where "," id ","Changeset  table_name ","Change  joins ","Changeset  where group count ","Changeset  where group ","Changeset  where ","Change  joins where group order count ","Change  joins where group order ","Changeset  where group order count ","Changeset  where group order ","Change  joins where group count  values ","Change  joins where group order count  values ","Changeset  where group count  values ","Changeset  where group order count  values ","Changeset  where group count  keys ","Changeset  where group order count  keys "]}," RedmineGitHosting Patches RepositoryPatch InstanceMethods commits_per_hours":{"type":"method","name":"commits_per_hours","children":[],"call":["data [] push "," l ","data [] ","data []= ","new_hours push ","hours each ","(irange\n  (int 0)\n  (int 23)) step to_a ","(irange\n  (int 0)\n  (int 23)) step ","commits_by_hour [] "," get_hour_from_date ","total_commits_by_hour each ","(int 0) * ","Changeset  where map ","Changeset  where "," id ","new_(irange\n  (int 0)\n  (int 23)) step to_a  push ","(irange\n  (int 0)\n  (int 23)) step to_a  each ","(int 0) *  [] ","total_(int 0) *  each ","Changeset  where map  each "]}," RedmineGitHosting Patches RepositoryPatch InstanceMethods global_statistics":{"type":"method","name":"global_statistics","children":[],"call":["data []= ","total_commits fdiv round ","total_commits fdiv "," l ","last_commit commit_date ","first_commit commit_date ","Changeset  where map uniq size ","Changeset  where map uniq ","Changeset  where map ","Changeset  where "," id ","(send\n  (send\n    (lvar :last_commit) :commit_date) :-\n  (send\n    (lvar :first_commit) :commit_date)) to_i ","last_commit commit_date - ","Changeset  where order last ","Changeset  where order ","Changeset  where order first ","Changeset  where count ","Changeset  where where select uniq count ","Changeset  where where select uniq ","Changeset  where where select ","Changeset  where where ","Changeset  where count  fdiv round ","Changeset  where count  fdiv ","Changeset  where order last  commit_date ","Changeset  where order first  commit_date ","(send\n  (send\n    (lvar :Changeset  where order last ) :commit_date) :-\n  (send\n    (lvar :first_commit) :commit_date)) to_i ","(send\n  (send\n    (lvar :last_commit) :commit_date) :-\n  (send\n    (lvar :Changeset  where order first ) :commit_date)) to_i ","Changeset  where order last  commit_date - "]}," RedmineGitHosting Patches RepositoryGitPatch InstanceMethods clean_cache":{"type":"method","name":"clean_cache","children":[],"call":["RedmineGitolite Cache  clear_cache_for_repository "," gitolite_repository_name ","RedmineGitolite Log  get_logger info ","RedmineGitolite Log  get_logger "]}," RedmineGitHosting Patches RepositoryGitPatch InstanceMethods additional_ident_constraints":{"type":"method","name":"additional_ident_constraints","children":[],"call":[" errors add "," errors ","x id != "," id ","x id ","possibles detect "," new_record? ","possibles any? ","Repository  find_all_by_project_id "," project id "," project "," set_as_default? "," is_default? "," identifier_changed? "," identifier_was blank? ! "," identifier_was blank? "," identifier_was "," identifier blank? ! "," identifier blank? "," identifier ","Repository  find_by_identifier "," class repo_ident_unique? "," class ","Project  find_by_identifier "," identifier == ","Repository  find_all_by_project_id  detect ","Repository  find_all_by_project_id  any? "]}," RedmineGitHosting Patches RepositoryGitPatch InstanceMethods filter_list":{"type":"method","name":"filter_list","children":[],"call":["mailing_list []= ","exclude_list include? ","mail_list each ","exclude_list uniq sort ","exclude_list uniq ","exclude_list + "," git_notification exclude_list "," git_notification "," git_notification exclude_list empty? ! "," git_notification exclude_list empty? "," git_notification nil? ! "," git_notification nil? ","RedmineGitolite ConfigRedmine  get_setting ","RedmineGitolite ConfigRedmine  get_setting empty? ! ","RedmineGitolite ConfigRedmine  get_setting empty? ","exclude_list uniq sort  include? ","exclude_list +  include? ","exclude_list uniq sort  uniq sort ","exclude_list +  uniq sort ","exclude_list uniq sort  uniq ","exclude_list +  uniq ","exclude_list uniq sort  + ","exclude_list +  + "," git_notification exclude_list uniq sort  "," git_notification exclude_list +  "," git_notification exclude_list uniq sort  empty? ! "," git_notification exclude_list +  empty? ! "," git_notification exclude_list uniq sort  empty? "," git_notification exclude_list +  empty? "]}," RedmineGitHosting Patches RepositoryGitPatch InstanceMethods gitolite_hook_key":{"type":"method","name":"gitolite_hook_key","children":[],"call":[" extra key "," extra "," extra [] "]}," RedmineGitHosting Patches RepositoryGitPatch InstanceMethods exists_in_gitolite?":{"type":"method","name":"exists_in_gitolite?","children":[],"call":["RedmineGitolite GitHosting  dir_exists? "," gitolite_repository_path "]}," RedmineGitHosting Patches RepositoryGitPatch InstanceMethods get_full_parent_path":{"type":"method","name":"get_full_parent_path","children":[],"call":["parent_parts join ","p parent ","parent_parts unshift ","p parent identifier to_s ","p parent identifier "," project "," project identifier to_s "," project identifier "," is_default? ","RedmineGitolite ConfigRedmine  get_setting ! ","RedmineGitolite ConfigRedmine  get_setting ","p parent arent_p parent arts join "," project arent_ project arts join ","p parent  p parent arent "," project   project arent ","p parent arent_p parent arts unshift "," project arent_ project arts unshift ","p parent  p parent arent identifier to_s "," project   project arent identifier to_s ","p parent  p parent arent identifier "," project   project arent identifier "," p parent roject ","  project roject "," p parent roject identifier to_s ","  project roject identifier to_s "," p parent roject identifier ","  project roject identifier "]}," RedmineGitHosting Patches RepositoryGitPatch InstanceMethods mailing_list_params":{"type":"method","name":"mailing_list_params","children":[],"call":[" mailing_list_effective ","RedmineGitolite ConfigRedmine  get_setting "," git_notification sender_address "," git_notification "," git_notification sender_address empty? ! "," git_notification sender_address empty? "," git_notification nil? ! "," git_notification nil? "," git_notification prefix "," git_notification prefix empty? ! "," git_notification prefix empty? "," git_notification RedmineGitolite ConfigRedmine  get_setting  "," git_notification  git_notification sender_address  "," git_notification RedmineGitolite ConfigRedmine  get_setting  empty? ! "," git_notification  git_notification sender_address  empty? ! "," git_notification RedmineGitolite ConfigRedmine  get_setting  empty? "," git_notification  git_notification sender_address  empty? "]}," RedmineGitHosting Patches RepositoryGitPatch InstanceMethods mailing_list_effective":{"type":"method","name":"mailing_list_effective","children":[],"call":["mailing_list []= "," git_notification include_list sort each "," git_notification include_list sort "," git_notification include_list "," git_notification "," git_notification include_list empty? ! "," git_notification include_list empty? "," git_notification nil? ! "," git_notification nil? "," filter_list ","RedmineGitolite ConfigRedmine  get_setting sort each ","RedmineGitolite ConfigRedmine  get_setting sort ","RedmineGitolite ConfigRedmine  get_setting ","RedmineGitolite ConfigRedmine  get_setting empty? ! ","RedmineGitolite ConfigRedmine  get_setting empty? ","default_users each ","default_users empty? ! ","default_users empty? "," mailing_list_default_users "," filter_list  []= "," mailing_list_default_users  each "," mailing_list_default_users  empty? ! "," mailing_list_default_users  empty? ","  filter_list _default_users "," mailing_list_ mailing_list_default_users  "]}," RedmineGitHosting Patches RepositoryGitPatch InstanceMethods mailing_list_default_users":{"type":"method","name":"mailing_list_default_users","children":[],"call":["default_users uniq sort ","default_users uniq ","(send\n  (lvar :default_users) :select) map ","user allowed_to? "," project ","default_users select "," project member_principals map compact uniq "," project member_principals map compact "," project member_principals map "," project member_principals ","(send\n  (lvar :default_users) :select) map  uniq sort "," project member_principals map compact uniq  uniq sort ","(send\n  (lvar :default_users) :select) map  uniq "," project member_principals map compact uniq  uniq ","(send\n  (lvar :(send\n  (lvar :default_users) :select) map ) :select) map ","(send\n  (lvar : project member_principals map compact uniq ) :select) map ","(send\n  (lvar :default_users) :select) map  select "," project member_principals map compact uniq  select "]}," RedmineGitHosting Patches RepositoryGitPatch InstanceMethods available_urls":{"type":"method","name":"available_urls","children":[],"call":["hash []= "," extra [] == "," extra [] "," extra "," project is_public "," project ","User  current allowed_to? ","User  current ","User  current anonymous? ! ","User  current anonymous? "," git_url "," http_url "," https_url "," ssh_url "]}," RedmineGitHosting Patches RepositoryGitPatch InstanceMethods https_url":{"type":"method","name":"https_url","children":[],"call":[" http_access_path ","RedmineGitolite ConfigRedmine  get_setting "," http_user_login "]}," RedmineGitHosting Patches RepositoryGitPatch InstanceMethods http_url":{"type":"method","name":"http_url","children":[],"call":[" http_access_path ","RedmineGitolite ConfigRedmine  get_setting "," http_user_login "]}," RedmineGitHosting Patches RepositoryGitPatch InstanceMethods git_url":{"type":"method","name":"git_url","children":[],"call":[" git_access_path ","RedmineGitolite ConfigRedmine  get_setting "]}," RedmineGitHosting Patches RepositoryGitPatch InstanceMethods ssh_url":{"type":"method","name":"ssh_url","children":[],"call":[" git_access_path ","RedmineGitolite ConfigRedmine  get_setting "]}," RedmineGitHosting Patches RepositoryGitPatch InstanceMethods http_access_path":{"type":"method","name":"http_access_path","children":[],"call":[" redmine_repository_path ","RedmineGitolite ConfigRedmine  get_setting "]}," RedmineGitHosting Patches RepositoryGitPatch InstanceMethods git_access_path":{"type":"method","name":"git_access_path","children":[],"call":[" gitolite_repository_name "]}," RedmineGitHosting Patches RepositoryGitPatch InstanceMethods http_user_login":{"type":"method","name":"http_user_login","children":[],"call":["User  current login ","User  current ","User  current anonymous? "]}," RedmineGitHosting Patches RepositoryGitPatch InstanceMethods old_repository_name":{"type":"method","name":"old_repository_name","children":[],"call":[" url gsub gsub "," url gsub ","RedmineGitolite ConfigRedmine  get_setting "," url "]}," RedmineGitHosting Patches RepositoryGitPatch InstanceMethods new_repository_name":{"type":"method","name":"new_repository_name","children":[],"call":[" gitolite_repository_name "]}," RedmineGitHosting Patches RepositoryGitPatch InstanceMethods redmine_repository_path":{"type":"method","name":"redmine_repository_path","children":[],"call":["File  expand_path [] ","File  expand_path ","File  join "," redmine_name "," get_full_parent_path "," git_cache_id "]}," RedmineGitHosting Patches RepositoryGitPatch InstanceMethods gitolite_repository_name":{"type":"method","name":"gitolite_repository_name","children":[],"call":["File  expand_path [] ","File  expand_path ","File  join "," redmine_name "," get_full_parent_path ","RedmineGitolite ConfigRedmine  get_setting "," git_cache_id "]}," RedmineGitHosting Patches RepositoryGitPatch InstanceMethods gitolite_repository_path":{"type":"method","name":"gitolite_repository_path","children":[],"call":[" gitolite_repository_name ","RedmineGitolite ConfigRedmine  get_setting "]}," RedmineGitHosting Patches RepositoryGitPatch InstanceMethods redmine_name":{"type":"method","name":"redmine_name","children":[],"call":[" identifier "," project identifier "," project "," identifier blank? "]}," RedmineGitHosting Patches RepositoryGitPatch InstanceMethods git_cache_id":{"type":"method","name":"git_cache_id","children":[],"call":[" identifier "," project identifier "," project "," identifier blank? "," class repo_ident_unique? "," class "]}," RedmineGitHosting Patches RepositoryGitPatch InstanceMethods extra=":{"type":"method","name":"extra=","children":[],"call":[" git_extra= "]}," RedmineGitHosting Patches RepositoryGitPatch InstanceMethods extra":{"type":"method","name":"extra","children":[],"call":[" git_extra= ","RepositoryGitExtra  new ","retval nil? "," git_extra ","RepositoryGitExtra  new  nil? "," git_extra  nil? "]}," RedmineGitHosting Patches RepositoryGitPatch ClassMethods find_by_path":{"type":"method","name":"find_by_path","children":[],"call":[" find_by_identifier ","parseit [] ","flags [] "," find_by_identifier_and_project_id ","proj id ","Project  find_by_identifier ","parseit [] nil? "," repo_ident_unique? ","proj gitolite_repos first ","proj gitolite_repos ","proj repo_blank_ident ","proj repository ","path match ","path match  [] "," find_by_identifier_and_Project  find_by_identifier ect_id ","Project  find_by_identifier  id ","path match  [] nil? ","Project  find_by_identifier  gitolite_repos first ","Project  find_by_identifier  gitolite_repos ","Project  find_by_identifier  repo_blank_ident ","Project  find_by_identifier  repository "]}," RedmineGitHosting Patches RepositoryGitPatch ClassMethods repo_path_to_git_cache_id":{"type":"method","name":"repo_path_to_git_cache_id","children":[],"call":["repo git_cache_id ","Repository Git  find_by_path ","@@cached_path == ","Repository Git  find_by_path  git_cache_id "]}," RedmineGitHosting Patches RepositoryGitPatch ClassMethods have_duplicated_identifier?":{"type":"method","name":"have_duplicated_identifier?","children":[],"call":["(or\n  (begin\n    (send\n      (send\n        (block\n          (send\n            (send\n              (send\n                (self) :all) :map\n              (block-pass\n                (sym :identifier))) :inject\n            (send\n              (const nil :Hash) :new\n              (int 0)))\n          (args\n            (arg :h)\n            (arg :x))\n          (begin\n            (if\n              (send\n                (lvar :x) :blank?) nil\n              (op-asgn\n                (send\n                  (lvar :h) :[]\n                  (lvar :x)) :+\n                (int 1)))\n            (lvar :h))) :values) :max))\n  (int 0)) > ","(send\n  (send\n    (send\n      (self) :all) :map\n    (block-pass\n      (sym :identifier))) :inject\n  (send\n    (const nil :Hash) :new\n    (int 0))) values max ","(send\n  (send\n    (send\n      (self) :all) :map\n    (block-pass\n      (sym :identifier))) :inject\n  (send\n    (const nil :Hash) :new\n    (int 0))) values ","h [] ","x blank? "," all map inject ","Hash  new "," all map "," all "]}," RedmineGitHosting Patches RepositoryGitPatch ClassMethods repo_ident_unique?":{"type":"method","name":"repo_ident_unique?","children":[],"call":["RedmineGitolite ConfigRedmine  get_setting "]}," RedmineGitHosting Patches RepositoriesControllerPatch InstanceMethods set_current_tab":{"type":"method","name":"set_current_tab","children":[],"call":[" params [] "," params "]}," RedmineGitHosting Patches RepositoriesControllerPatch InstanceMethods destroy_with_git_hosting":{"type":"method","name":"destroy_with_git_hosting","children":[],"call":["RedmineGitolite GitHosting  resync_gitolite ","repository_data []= ","@repository gitolite_repository_path ","@repository gitolite_repository_name ","User  current login ","User  current ","RedmineGitolite GitHosting  logger info ","RedmineGitolite GitHosting  logger ","@repository errors any? ! ","@repository errors any? ","@repository errors ","@repository is_a? "," destroy_without_git_hosting "," call_use_cases "]}," RedmineGitHosting Patches ProjectsControllerPatch InstanceMethods update_projects":{"type":"method","name":"update_projects","children":[],"call":["RedmineGitolite GitHosting  resync_gitolite ","RedmineGitolite GitHosting  logger info ","RedmineGitolite GitHosting  logger ","project_list push ","project id ","git_projects each ","p gitolite_repos any? ","p gitolite_repos ","projects uniq select ","projects uniq ","@project self_and_descendants ","(send\n  (send\n    (lvar :projects) :uniq) :select) map ","git_@project self_and_descendants  each ","@project self_and_descendants  uniq select ","@project self_and_descendants  uniq ","(send\n  (send\n    (lvar :@project self_and_descendants ) :uniq) :select) map "]}," RedmineGitHosting Patches ProjectsControllerPatch InstanceMethods reopen_with_git_hosting":{"type":"method","name":"reopen_with_git_hosting","children":[],"call":[" update_projects "," reopen_without_git_hosting "," update_project_hierarchy ","User  current login ","User  current "]}," RedmineGitHosting Patches ProjectsControllerPatch InstanceMethods close_with_git_hosting":{"type":"method","name":"close_with_git_hosting","children":[],"call":[" update_projects "," close_without_git_hosting "," update_project_hierarchy ","User  current login ","User  current "]}," RedmineGitHosting Patches MyControllerPatch InstanceMethods set_public_key_values":{"type":"method","name":"set_public_key_values","children":[],"call":["GitolitePublicKey  new "," redirect_to "," params [] "," params ","@gitolite_public_key nil? ","x id == "," params [] to_i ","x id ","@gitolite_public_keys detect ","@gitolite_user_keys + ","@user gitolite_public_keys deploy_key active order ","@user gitolite_public_keys deploy_key active ","@user gitolite_public_keys deploy_key ","@user gitolite_public_keys ","@user gitolite_public_keys user_key active order ","@user gitolite_public_keys user_key active ","@user gitolite_public_keys user_key ","GitolitePublicKey  new  nil? ","GitolitePublicKey  new s detect ","@gitolite_user_keys +  detect ","@user gitolite_public_keys user_key active order  + "]}," RedmineGitHosting Patches JournalPatch included":{"type":"method","name":"included","children":[],"call":[]}," RedmineGitHosting Patches IssuePatch included":{"type":"method","name":"included","children":[],"call":[]}," RedmineGitHosting Hooks DisplayRepositoryReadme view_repositories_show_bottom":{"type":"method","name":"view_repositories_show_bottom","children":[],"call":["context [] send ","context [] ","GitHub Markup  render ","file path ","Redmine WikiFormatting  formatter_for new to_html ","Redmine WikiFormatting  formatter_for new ","Redmine WikiFormatting  formatter_for ","name =~ ","Redmine WikiFormatting  format_names find ","Redmine WikiFormatting  format_names ","@@markdown_ext include? ","File  extname ","repo cat ","entry name =~ ","entry name ","(or\n  (send\n    (lvar :repo) :entries\n    (lvar :path)\n    (lvar :rev))\n  (array)) find ","repo entries ","context [] repositories find ","context [] repositories ","r is_default "," lambda ","r identifier == ","r identifier ","context [] params [] ","context [] params ","(lvasgn :_rev\n  (send\n    (send\n      (send\n        (lvar :context) :[]\n        (sym :request)) :params) :[]\n    (str \"rev\"))) blank? "," get_formatter ","readme_file nil? "," find_readme_file "," find_repository "," get_repo_id "," get_rev "," get_path ","file  get_path  ","Redmine WikiFormatting  GitHub Markup  render _for new to_html ","Redmine WikiFormatting  Redmine WikiFormatting  formatter_for new to_html _for new to_html ","Redmine WikiFormatting   get_formatter _for new to_html ","Redmine WikiFormatting  GitHub Markup  render _for new ","Redmine WikiFormatting  Redmine WikiFormatting  formatter_for new to_html _for new ","Redmine WikiFormatting   get_formatter _for new ","Redmine WikiFormatting  GitHub Markup  render _for ","Redmine WikiFormatting  Redmine WikiFormatting  formatter_for new to_html _for ","Redmine WikiFormatting   get_formatter _for ","context [] repositories find  cat ","(or\n  (send\n    (lvar :context [] repositories find ) :entries\n    (lvar :path)\n    (lvar :rev))\n  (array)) find ","(or\n  (send\n    (lvar :repo) :entries\n    (lvar :path)\n    (lvar : get_rev ))\n  (array)) find ","(or\n  (send\n    (lvar :repo) :entries\n    (lvar : get_path )\n    (lvar :rev))\n  (array)) find ","context [] repositories find  entries ","context [] context [] repositories find sitories find ","context [] context [] repositories find sitories ","(lvasgn :context [] params [] \n  (send\n    (send\n      (send\n        (lvar :context) :[]\n        (sym :request)) :params) :[]\n    (str \"rev\"))) blank? ","(lvasgn :_ get_rev \n  (send\n    (send\n      (send\n        (lvar :context) :[]\n        (sym :request)) :params) :[]\n    (str \" get_rev \"))) blank? "," get_GitHub Markup  render  "," get_Redmine WikiFormatting  formatter_for new to_html  "," get_ get_formatter  "," find_readme_file  nil? "," find_ find_readme_file  "," find_context [] repositories find sitory "," find_ find_repository  "," get_context [] repositories find _id "," get_context [] params []  "," get_ get_repo_id  "," getcontext [] params []  "," get_ get_rev  "," get_ get_path  "]}," RedmineGitolite Config gitolite_commit_author":{"type":"method","name":"gitolite_commit_author","children":[],"call":[]}," RedmineGitolite Config git_config_email":{"type":"method","name":"git_config_email","children":[],"call":[]}," RedmineGitolite Config git_config_username":{"type":"method","name":"git_config_username","children":[],"call":[]}," RedmineGitHosting Patches UserPatch InstanceMethods check_if_status_changed":{"type":"method","name":"check_if_status_changed","children":[],"call":[" status_has_changed= "," status_changed? "]}," RedmineGitHosting Patches UserPatch InstanceMethods update_repositories":{"type":"method","name":"update_repositories","children":[],"call":["RedmineGitolite GitHosting  resync_gitolite ","RedmineGitolite GitHosting  logger info ","RedmineGitolite GitHosting  logger ","project id ","(send\n  (send\n    (send\n      (self) :projects) :uniq) :select) map ","p gitolite_repos any? ","p gitolite_repos "," projects uniq select "," projects uniq "," projects "," status_has_changed "]}," RedmineGitolite HookParam set_hook_param":{"type":"method","name":"set_hook_param","children":[],"call":[" logger error "," logger ","RedmineGitolite GitHosting  execute_command "," logger info "]}," RedmineGitolite HookParam get_global_hooks_params":{"type":"method","name":"get_global_hooks_params","children":[],"call":["value_hash []= ","namespace == ","value_pair split [] ","value_pair split ","global_key split [] ","global_key split ","hooks_params each "," logger error "," logger ","RedmineGitolite GitHosting  execute_command split ","RedmineGitolite GitHosting  execute_command ","value_pair split [] _hash []= ","global_key split []  == ","value_pair split [] _pair split [] ","value_pair split [] _pair split ","global_global_key split []  split [] ","value_pair split []  split [] ","global_global_key split []  split ","value_pair split []  split ","RedmineGitolite GitHosting  execute_command split  each "]}," RedmineGitolite HookParam logger":{"type":"method","name":"logger","children":[],"call":["RedmineGitolite Log  get_logger "]}," RedmineGitolite HookParam installed?":{"type":"method","name":"installed?","children":[],"call":["installed []= "," set_hook_param ","@global_hook_params [] != ","@async_mode to_s ","@global_hook_params [] ","@debug_mode to_s "]}," RedmineGitolite HookParam initialize":{"type":"method","name":"initialize","children":[],"call":[" get_global_hooks_params ","RedmineGitolite HookManager  gitolite_hooks_namespace ","RedmineGitolite ConfigRedmine  get_setting ","RedmineGitolite Config  gitolite_hooks_url "]}," RedmineGitolite HookManager source_path":{"type":"method","name":"source_path","children":[],"call":["File  join "]}," RedmineGitolite HookManager destination_path":{"type":"method","name":"destination_path","children":[],"call":["File  join "," gitolite_hooks_dir "]}," RedmineGitolite HookManager gitolite_hooks_dir":{"type":"method","name":"gitolite_hooks_dir","children":[],"call":["File  join ","RedmineGitolite ConfigRedmine  get_setting ","RedmineGitolite Config  gitolite_version == ","RedmineGitolite Config  gitolite_version "]}," RedmineGitolite HookManager hook_params_installed?":{"type":"method","name":"hook_params_installed?","children":[],"call":["HookParam  new installed? ","HookParam  new "]}," RedmineGitolite HookManager hooks_installed?":{"type":"method","name":"hooks_installed?","children":[],"call":["installed []= ","hook installed? ","hook name ","HookFile  new ","params [] "," destination_path "," source_path ","POST_RECEIVE_HOOKS  each ","HookFile  new  installed? ","HookFile  new  name "]}," RedmineGitolite HookManager hook_dirs_installed?":{"type":"method","name":"hook_dirs_installed?","children":[],"call":["installed []= ","hook_dir installed? ","hook_dir name ","HookDir  new "," destination_path ","POST_RECEIVE_HOOK_DIR  each ","HookDir  new  installed? ","HookDir  new  name "]}," RedmineGitolite HookManager update_hook_params!":{"type":"method","name":"update_hook_params!","children":[],"call":[" hook_params_installed? "]}," RedmineGitolite HookManager check_install!":{"type":"method","name":"check_install!","children":[],"call":[" hook_params_installed? "," hooks_installed? "," hook_dirs_installed? "]}," RedmineGitolite HookManager gitolite_hooks_namespace":{"type":"method","name":"gitolite_hooks_namespace","children":[],"call":[]}," RedmineGitolite HookManager gitolite_hooks_url":{"type":"method","name":"gitolite_hooks_url","children":[],"call":["RedmineGitolite Config  gitolite_hooks_url "]}," RedmineGitolite HookFile update_gitolite":{"type":"method","name":"update_gitolite","children":[],"call":["RedmineGitolite GitHosting  execute_command "," gitolite_command "]}," RedmineGitolite HookFile install_hook_file":{"type":"method","name":"install_hook_file","children":[],"call":[" destination_path "," source_path "," logger error "," logger ","RedmineGitolite GitHosting  execute_command "," filemode "," logger info "]}," RedmineGitolite HookFile exists?":{"type":"method","name":"exists?","children":[],"call":["RedmineGitolite GitHosting  execute_command match ","RedmineGitolite GitHosting  execute_command "," destination_path "]}," RedmineGitolite HookFile gitolite_command":{"type":"method","name":"gitolite_command","children":[],"call":["RedmineGitolite Config  gitolite_command "]}," RedmineGitolite HookFile distant_md5":{"type":"method","name":"distant_md5","children":[],"call":["Digest MD5  hexdigest ","RedmineGitolite GitHosting  execute_command "," destination_path "]}," RedmineGitolite HookFile local_md5":{"type":"method","name":"local_md5","children":[],"call":["Digest MD5  hexdigest ","File  read "," source_path "]}," RedmineGitolite HookFile hook_are_different?":{"type":"method","name":"hook_are_different?","children":[],"call":[" local_md5 != "," distant_md5 "," local_md5 "]}," RedmineGitolite HookFile logger":{"type":"method","name":"logger","children":[],"call":["RedmineGitolite Log  get_logger "]}," RedmineGitolite HookFile do_install_file":{"type":"method","name":"do_install_file","children":[],"call":[" update_gitolite "," gitolite_command "," logger info "," logger "," name "," install_hook_file "]}," RedmineGitolite HookFile installed?":{"type":"method","name":"installed?","children":[],"call":[" exists? "," do_install_file "," name "," logger info "," logger "," logger warn "," hook_are_different? "," exists? ! "]}," RedmineGitolite HookFile initialize":{"type":"method","name":"initialize","children":[],"call":["RedmineGitolite ConfigRedmine  get_setting "]}," RedmineGitolite HookDir install_hooks_dir":{"type":"method","name":"install_hooks_dir","children":[],"call":[" destination_path "," logger error "," logger ","RedmineGitolite GitHosting  execute_command "," logger info "]}," RedmineGitolite HookDir exists?":{"type":"method","name":"exists?","children":[],"call":["RedmineGitolite GitHosting  execute_command match ","RedmineGitolite GitHosting  execute_command "," destination_path "]}," RedmineGitolite HookDir logger":{"type":"method","name":"logger","children":[],"call":["RedmineGitolite Log  get_logger "]}," RedmineGitolite HookDir installed?":{"type":"method","name":"installed?","children":[],"call":[" exists? "," name "," logger info "," logger "," install_hooks_dir "," exists? ! "]}," RedmineGitolite HookDir initialize":{"type":"method","name":"initialize","children":[],"call":[]}," RedmineGitolite ConfigRedmine do_get_setting":{"type":"method","name":"do_get_setting","children":[],"call":["Redmine Plugin  find settings [] [] ","Redmine Plugin  find settings [] ","Redmine Plugin  find settings ","Redmine Plugin  find ","value nil? ","Setting  plugin_redmine_git_hosting [] ","Setting  plugin_redmine_git_hosting ","setting to_sym ","Redmine Plugin  find setting to_sym s [] [] ","Redmine Plugin  find setting to_sym s [] ","Redmine Plugin  find setting to_sym s ","Redmine Plugin  find settings [] []  nil? ","Setting  plugin_redmine_git_hosting []  nil? ","setting to_sym  to_sym "]}," RedmineGitolite ConfigRedmine return_bool":{"type":"method","name":"return_bool","children":[],"call":["value == "]}," RedmineGitHosting Patches RepositoryPatch InstanceMethods commits_per_author_with_aliases":{"type":"method","name":"commits_per_author_with_aliases","children":[],"call":["x [] <=> ","y [] ","x [] ","merged sort! ","merged << ","identity [] ","changes_by_author [] ","commits_by_author [] ","committers each ","user_committer_mapping each ","committer [] ","committer gsub strip ","committer gsub ","registered_committers include? ","commits_by_author each ","user_committer_mapping [] << ","x committer ","user_committer_mapping [] ","x user mail ","x user ","registered_committers << ","x user lastname ","x user firstname ","Changeset  where where group includes each ","Changeset  where where group includes ","Changeset  where where group ","Changeset  where where ","Changeset  where "," id ","Change  joins where group count ","Change  joins where group ","Change  joins where ","Changeset  table_name ","Change  joins ","Changeset  where group count ","Changeset  where group ","Change  joins where group count  [] ","Changeset  where group count  [] ","Changeset  where group count  each ","x user committer []  ","x user lastcommitter gsub strip  ","x user firstcommitter gsub strip  ","Changeset  table_committer gsub strip  "]}," RedmineGitHosting Patches RepositoryGitPatch InstanceMethods empty?":{"type":"method","name":"empty?","children":[],"call":[" extra_info has_key? ! "," extra_info has_key? "," extra_info "," extra_info nil? "]}," RedmineGitHosting resync_gitolite":{"type":"method","name":"resync_gitolite","children":[],"call":["RedmineGitHosting GitoliteWrapper  resync_gitolite ","GithostingShellWorker  perform_async ","bypass ! ","RedmineGitHosting Config  gitolite_use_sidekiq? ","options [] == ","options [] ","options has_key? "]}," RedmineGitHosting logger":{"type":"method","name":"logger","children":[],"call":["RedmineGitHosting Log  init_logs! ","RedmineGitHosting Logger  init_logs! "," loglevel "," logfile ","RedmineGitHosting FileLogger  init_logs! "," logprogname ","RedmineGitHosting JournalLogger  init_logs! ","(str \"Journald::Logger\") include? ","Rails  logger class to_s ","Rails  logger class ","Rails  logger "]}," Utils Ssh ClassMethods sanitize_ssh_key":{"type":"method","name":"sanitize_ssh_key","children":[],"call":["key gsub strip ","key gsub ","key sub ","key gsub strip  gsub strip ","key sub  gsub strip ","key gsub strip  gsub ","key sub  gsub ","key gsub strip  sub ","key sub  sub "]}," Utils Ssh ClassMethods ssh_fingerprint":{"type":"method","name":"ssh_fingerprint","children":[],"call":["file unlink ","output split [] ","output split "," raise ","RedmineGitHosting Error InvalidSshKey  new "," capture ","file path ","file close ","file write ","Tempfile  new ","Tempfile  new  unlink "," capture  split [] "," capture  split ","Tempfile  new  path ","Tempfile  new  close ","Tempfile  new  write ","TempTempfile  new   new "]}," Utils Ssh included":{"type":"method","name":"included","children":[],"call":["receiver send "]}," Utils Password ClassMethods generate_secret":{"type":"method","name":"generate_secret","children":[],"call":["secret split sample join ","secret split sample ","length - ","secret split ","secret gsub ","SecureRandom  base64 ","length to_i ","secret split sample join  split sample join ","secret gsub  split sample join ","SecureRandom  base64  split sample join ","secret split sample join  split sample ","secret gsub  split sample ","SecureRandom  base64  split sample ","length to_i  - ","secret split sample join  split ","secret gsub  split ","SecureRandom  base64  split ","secret split sample join  gsub ","secret gsub  gsub ","SecureRandom  base64  gsub ","length to_i  to_i "]}," Utils Password included":{"type":"method","name":"included","children":[],"call":["receiver send "]}," Utils Http ClassMethods send_http_request":{"type":"method","name":"send_http_request","children":[],"call":["e message ","res body ","res message ","res code ","res is_a? ! ","res is_a? ","openhttp request ","http start ","e res body  ","res res body  "]}," Utils Http ClassMethods build_http_request":{"type":"method","name":"build_http_request","children":[],"call":["http verify_mode= ","http use_ssl= ","uri scheme == ","uri scheme ","Net HTTP  new ","uri port ","uri host "," URI ","Net HTTP  new  verify_mode= ","Net HTTP  new  use_ssl= "," URI  scheme == "," URI  scheme "," URI  port "," URI  host "]}," Utils Http ClassMethods build_get_request":{"type":"method","name":"build_get_request","children":[],"call":["Net HTTP Get  new ","uri request_uri "," build_http_request ","uri Net HTTP Get  new _uri "," build_http_Net HTTP Get  new  "]}," Utils Http ClassMethods build_post_request":{"type":"method","name":"build_post_request","children":[],"call":["request set_form_data ","Net HTTP Post  new ","uri request_uri "," build_http_request ","Net HTTP Post  new  set_form_data ","uri Net HTTP Post  new _uri "," build_http_Net HTTP Post  new  "]}," Utils Http ClassMethods serialize_data":{"type":"method","name":"serialize_data","children":[],"call":["serialized []= ","v to_json ","k to_s ","data each ","data empty? "]}," Utils Http ClassMethods valid_url?":{"type":"method","name":"valid_url?","children":[],"call":["uri kind_of? ","URI  parse ","URI  parse  kind_of? "]}," Utils Http ClassMethods http_get":{"type":"method","name":"http_get","children":[],"call":[" send_http_request "," build_get_request "]}," Utils Http ClassMethods http_post":{"type":"method","name":"http_post","children":[],"call":[" send_http_request "," build_post_request "," serialize_data ","opts delete "," serialize_ serialize_data  "]}," Utils Http included":{"type":"method","name":"included","children":[],"call":["receiver send "]}," Utils Git ClassMethods refcomp_parse":{"type":"method","name":"refcomp_parse","children":[],"call":["refcomp_parse [] ","refcomp_parse nil? ","spec match ","spec match  [] ","spec match  nil? "]}," Utils Git included":{"type":"method","name":"included","children":[],"call":["receiver send "]}," Utils Exec ClassMethods execute":{"type":"method","name":"execute","children":[],"call":[" raise ","RedmineGitHosting Error GitoliteCommandException  new ","RedmineGitHosting  logger debug ","RedmineGitHosting  logger ","e message ","args join ","Open3  capture3 "]}," Utils Exec ClassMethods capture":{"type":"method","name":"capture","children":[],"call":["stdout + "," raise ","RedmineGitHosting Error GitoliteCommandException  new ","RedmineGitHosting  logger debug ","RedmineGitHosting  logger ","args join ","code != "," execute ","opts delete "]}," Utils Exec included":{"type":"method","name":"included","children":[],"call":["receiver send "]}," RedmineGitHosting ShellRedirector simple_proxy":{"type":"method","name":"simple_proxy","children":[],"call":["@my_read_stream send ","@read_stream send "]}," RedmineGitHosting ShellRedirector normal_diverter":{"type":"method","name":"normal_diverter","children":[],"call":[" add_to_buffer ","@state == ","@my_read_stream send ","@read_stream send "]}," RedmineGitHosting ShellRedirector enumerator_diverter":{"type":"method","name":"enumerator_diverter","children":[],"call":["@my_read_stream send ","EnumerableRedirector  new ","block call "," add_to_buffer "," block_given? ","@state == ","@read_stream send "]}," RedmineGitHosting ShellRedirector push_to_buffer":{"type":"method","name":"push_to_buffer","children":[],"call":["@my_buffer << ","@my_buffer length + <= ","RedmineGitHosting Cache  max_cache_size ","@my_buffer length + ","nextchunk length ","@my_buffer length ","invalue chr ","invalue is_a? ","@buffer << ","@buffer length + <= ","@buffer length + ","next_chunk length ","@buffer length ","value chr ","value is_a? ","invalue chr  length ","value chr  length "]}," RedmineGitHosting ShellRedirector add_to_buffer":{"type":"method","name":"add_to_buffer","children":[],"call":[" push_to_buffer ","invalue each ","invalue is_a? ","value each ","value is_a? "]}," RedmineGitHosting ShellRedirector EnumerableRedirector each":{"type":"method","name":"each","children":[],"call":["@my_redirector add_to_buffer ","@my_enum each "," to_enum "," block_given? ","@redirector add_to_buffer ","@enum each "]}," RedmineGitHosting ShellRedirector EnumerableRedirector initialize":{"type":"method","name":"initialize","children":[],"call":[]}," RedmineGitHosting ShellRedirector method_missing":{"type":"method","name":"method_missing","children":[],"call":[" send "," class class_eval "," class ","my_name =~ ","my_method to_s "," raise "," logger error "," logger ","@my_read_stream nil? ","IO  instance_methods map include? ","my_method to_sym ","IO  instance_methods map ","IO  instance_methods "," inject_proxy_method "," inject_read_method ","method_name =~ "," inject_enumerator_method ","method to_s ","@read_stream nil? "," io_method? ","(str \"^(get|read)\") match? ","(str \"^(each|bytes)\") match? ","my_method to_s  =~ ","method to_s  =~ "]}," RedmineGitHosting ShellRedirector respond_to?":{"type":"method","name":"respond_to?","children":[],"call":[" block "," args ","IO  instance_methods map include? ","my_method to_sym ","IO  instance_methods map ","IO  instance_methods "," io_method? "]}," RedmineGitHosting ShellRedirector logger":{"type":"method","name":"logger","children":[],"call":["RedmineGitHosting  logger "]}," RedmineGitHosting ShellRedirector close_write":{"type":"method","name":"close_write","children":[],"call":[" startup_shell ","RedmineGitHosting Cache  get_cache "]}," RedmineGitHosting ShellRedirector binmode":{"type":"method","name":"binmode","children":[],"call":[]}," RedmineGitHosting ShellRedirector write":{"type":"method","name":"write","children":[],"call":["@my_extra_args << ","obj to_s ","@extra_args << "]}," RedmineGitHosting ShellRedirector putc":{"type":"method","name":"putc","children":[],"call":["@my_extra_args << "," retval_to_s ","@extra_args << "]}," RedmineGitHosting ShellRedirector puts":{"type":"method","name":"puts","children":[],"call":["@my_extra_args << ","args join + ","args join ","@extra_args << "]}," RedmineGitHosting ShellRedirector exit_shell":{"type":"method","name":"exit_shell","children":[],"call":["RedmineGitHosting Cache  set_cache ","@my_buffer_overfull ! ","@wrap_thread join ","@wrap_thread run ","@state == ","@buffer_full ! "]}," RedmineGitHosting ShellRedirector startup_shell":{"type":"method","name":"startup_shell","children":[],"call":["Thread  pass ","proxy_started ! ","Thread  stop ","Redmine Scm Adapters AbstractAdapter  shellout ","io close_write ","io puts ","io binmode ","options [] ","Thread  new ","Thread  abort_on_exception= "]}," RedmineGitHosting ShellRedirector initialize":{"type":"method","name":"initialize","children":[],"call":[" startup_shell ","options [] "," +@ "]}," RedmineGitHosting ShellRedirector execute":{"type":"method","name":"execute","children":[],"call":[" raise ","status exitstatus "," logger error "," logger ","status exitstatus to_i != ","status exitstatus to_i ","redirector exit_shell ","block call "," new ","RedmineGitHosting Cache  get_cache ","options [] ! ","options [] "," new  exit_shell "]}," RedmineGitHosting Recycle clean_path_tree":{"type":"method","name":"clean_path_tree","children":[],"call":[" logger error "," logger "," delete_directory ! "," delete_directory "," logger info ","repo_subpath == "," redmine_storage ","File  join "," global_storage_dir ","old_prefix != ","File  dirname ","File  join  == ","File  dirname  != "]}," RedmineGitHosting Recycle redmine_storage":{"type":"method","name":"redmine_storage","children":[],"call":["File  join "," redmine_storage_dir "," global_storage_dir "]}," RedmineGitHosting Recycle get_directories_size":{"type":"method","name":"get_directories_size","children":[],"call":["data []= ","RedmineGitHosting Commands  sudo_get_dir_size ","directories sort each ","directories sort "]}," RedmineGitHosting Recycle delete_old_directories":{"type":"method","name":"delete_old_directories","children":[],"call":[" delete_recycle_bin_dir "," logger error "," logger "," logger info "," delete_directory ","directories each ","directories length != ","directories length "]}," RedmineGitHosting Recycle do_move_repository_to_recycle":{"type":"method","name":"do_move_repository_to_recycle","children":[],"call":[" clean_path_tree "," logger info "," recycle_bin_expiration_time / "," recycle_bin_expiration_time "," logger "," logger error ","RedmineGitHosting Commands  sudo_move "," create_recycle_bin "," logger debug "," repository_trash_path ","File  join ","repository_data [] "," gitolite_home_dir "," repository_ repository_trash_path  "]}," RedmineGitHosting Recycle find_old_repositories":{"type":"method","name":"find_old_repositories","children":[],"call":["y <=> ","RedmineGitHosting Commands  sudo_capture chomp split sort ","RedmineGitHosting Commands  sudo_capture chomp split ","RedmineGitHosting Commands  sudo_capture chomp ","RedmineGitHosting Commands  sudo_capture "," recycle_bin_dir "]}," RedmineGitHosting Recycle get_recycle_bin_content":{"type":"method","name":"get_recycle_bin_content","children":[],"call":["RedmineGitHosting Commands  sudo_capture chomp split ","RedmineGitHosting Commands  sudo_capture chomp ","RedmineGitHosting Commands  sudo_capture "," recycle_bin_dir "]}," RedmineGitHosting Recycle get_expired_repositories":{"type":"method","name":"get_expired_repositories","children":[],"call":["RedmineGitHosting Commands  sudo_capture chomp split ","RedmineGitHosting Commands  sudo_capture chomp ","RedmineGitHosting Commands  sudo_capture "," recycle_bin_expiration_time "," recycle_bin_dir "]}," RedmineGitHosting Recycle repository_trash_path":{"type":"method","name":"repository_trash_path","children":[],"call":["File  join ","Time  now to_i to_s ","Time  now to_i ","Time  now "," recycle_bin_dir ","repo_name gsub "]}," RedmineGitHosting Recycle delete_recycle_bin_dir":{"type":"method","name":"delete_recycle_bin_dir","children":[],"call":[" delete_directory "," recycle_bin_dir "]}," RedmineGitHosting Recycle create_recycle_bin":{"type":"method","name":"create_recycle_bin","children":[],"call":[" logger error "," recycle_bin_dir "," logger ","RedmineGitHosting Commands  sudo_chmod ","RedmineGitHosting Commands  sudo_mkdir_p "]}," RedmineGitHosting Recycle delete_directory":{"type":"method","name":"delete_directory","children":[],"call":["RedmineGitHosting Commands  sudo_rmdir "]}," RedmineGitHosting Recycle directory_exists?":{"type":"method","name":"directory_exists?","children":[],"call":["RedmineGitHosting Commands  sudo_dir_exists? "]}," RedmineGitHosting Recycle logger":{"type":"method","name":"logger","children":[],"call":["RedmineGitHosting  logger "]}," RedmineGitHosting Recycle recover_repository_if_present?":{"type":"method","name":"recover_repository_if_present?","children":[],"call":[" delete_recycle_bin_dir "," logger error "," logger ","RedmineGitHosting Commands  sudo_move ","files first "," logger info ","RedmineGitHosting Commands  sudo_mkdir_p ","File  join "," redmine_storage_dir "," global_storage_dir ","repo_name [] ","files length > ","files length "," find_old_repositories "," recycle_bin_dir ","(begin\n  (lvar :repo_name)) gsub ","repository gitolite_repository_path "," gitolite_home_dir ","repository gitolite_repository_name "," find_old_repositories  first ","repository gitolite_repository_name  [] "," find_old_repositories  length > "," find_old_repositories  length ","(begin\n  (lvar :repository gitolite_repository_name )) gsub "]}," RedmineGitHosting Recycle content":{"type":"method","name":"content","children":[],"call":[" get_directories_size ","directories empty? ! ","directories empty? "," get_recycle_bin_content "," directory_exists? ! "," directory_exists? "," recycle_bin_dir "," get_ get_recycle_bin_content _size "," get_recycle_bin_content  empty? ! "," get_recycle_bin_content  empty? "]}," RedmineGitHosting Recycle move_repository_to_recycle":{"type":"method","name":"move_repository_to_recycle","children":[],"call":[" do_move_repository_to_recycle "," logger warn "," logger "," directory_exists? ! "," directory_exists? ","File  join ","repository_data [] "," gitolite_home_dir "]}," RedmineGitHosting Recycle delete_expired_files":{"type":"method","name":"delete_expired_files","children":[],"call":[" logger info "," logger "," delete_old_directories ","result length > ","result length "," get_expired_repositories ","repositories_array empty? ! ","repositories_array empty? "," directory_exists? ! "," directory_exists? "," recycle_bin_dir "," get_expired_repositories  length > "," get_expired_repositories  length "]}," RedmineGitHosting Recycle recycle_bin_expiration_time":{"type":"method","name":"recycle_bin_expiration_time","children":[],"call":["RedmineGitHosting Config  gitolite_recycle_bin_expiration_time "]}," RedmineGitHosting Recycle redmine_storage_dir":{"type":"method","name":"redmine_storage_dir","children":[],"call":["RedmineGitHosting Config  gitolite_redmine_storage_dir "]}," RedmineGitHosting Recycle global_storage_dir":{"type":"method","name":"global_storage_dir","children":[],"call":["File  join ","RedmineGitHosting Config  gitolite_global_storage_dir "," gitolite_home_dir "]}," RedmineGitHosting Recycle recycle_bin_dir":{"type":"method","name":"recycle_bin_dir","children":[],"call":["File  join ","RedmineGitHosting Config  gitolite_recycle_bin_dir "," gitolite_home_dir "]}," RedmineGitHosting Recycle gitolite_home_dir":{"type":"method","name":"gitolite_home_dir","children":[],"call":["RedmineGitHosting Config  gitolite_home_dir "]}," RedmineGitHosting Plugins execute":{"type":"method","name":"execute","children":[],"call":["RedmineGitHosting  logger error ","e message ","RedmineGitHosting  logger ","plugin new send ","plugin new ","plugin method_defined? ","Plugins GitolitePlugin  all_plugins each ","Plugins GitolitePlugin  all_plugins "]}," Sweepers RepositoryDeletor remove_git_cache":{"type":"method","name":"remove_git_cache","children":[],"call":["RedmineGitHosting Cache  clear_cache_for_repository "," git_cache_id "," logger info "," gitolite_repo_name "," logger "]}," Sweepers RepositoryDeletor move_repository_to_recycle":{"type":"method","name":"move_repository_to_recycle","children":[],"call":["RedmineGitHosting Recycle  move_repository_to_recycle "," repository_data each "," repository_data "," repository_data is_a? ","RedmineGitHosting RecycleBin  move_object_to_recycle ","object_data [] "," repository_data [] "]}," Sweepers RepositoryDeletor post_delete":{"type":"method","name":"post_delete","children":[],"call":[" remove_git_cache "," move_repository_to_recycle "," delete_repository? "]}," Sweepers BaseSweeper delete_repository?":{"type":"method","name":"delete_repository?","children":[],"call":[" delete_repository == "," delete_repository ","Additionals  true? ","RedminePluginKit  true? "]}," Sweepers BaseSweeper initialize":{"type":"method","name":"initialize","children":[],"call":["repository_data [] "]}," Plugins GitolitePlugin git_opts":{"type":"method","name":"git_opts","children":[],"call":[]}," Plugins GitolitePlugin git_args":{"type":"method","name":"git_args","children":[],"call":[]}," Plugins GitolitePlugin sudo_git":{"type":"method","name":"sudo_git","children":[],"call":["RedmineGitHosting Commands  capture "," git_opts ","RedmineGitHosting Commands  sudo_git_args_for_repo concat ","RedmineGitHosting Commands  sudo_git_args_for_repo "," git_args "," gitolite_repo_path "]}," Plugins GitolitePlugin directory_exists?":{"type":"method","name":"directory_exists?","children":[],"call":["RedmineGitHosting Commands  sudo_dir_exists? "]}," Plugins GitolitePlugin repository_empty?":{"type":"method","name":"repository_empty?","children":[],"call":["RedmineGitHosting Commands  sudo_repository_empty? "," gitolite_repo_path "]}," Plugins GitolitePlugin logger":{"type":"method","name":"logger","children":[],"call":["RedmineGitHosting  logger "]}," Plugins GitolitePlugin inherited":{"type":"method","name":"inherited","children":[],"call":["@plugins << "]}," Plugins GitolitePlugin extenders":{"type":"method","name":"extenders","children":[],"call":["(send\n  (send nil :plugins) :select) first subclasses ","(send\n  (send nil :plugins) :select) first ","p name demodulize == ","p name demodulize ","p name "," plugins select "," plugins ","(send\n  (send nil :plugins) :find) subclasses "," plugins find "]}," Plugins GitolitePlugin sweepers":{"type":"method","name":"sweepers","children":[],"call":["(send\n  (send nil :plugins) :select) first subclasses ","(send\n  (send nil :plugins) :select) first ","p name demodulize == ","p name demodulize ","p name "," plugins select "," plugins ","(send\n  (send nil :plugins) :find) subclasses "," plugins find "]}," Plugins GitolitePlugin all_plugins":{"type":"method","name":"all_plugins","children":[],"call":[" sweepers + "," extenders "," sweepers "]}," Plugins GitolitePlugin plugins":{"type":"method","name":"plugins","children":[],"call":[]}," Extenders ReadmeCreator commit_author":{"type":"method","name":"commit_author","children":[],"call":["Time  now ","RedmineGitHosting Config  git_config_email ","RedmineGitHosting Config  git_config_username "]}," Extenders ReadmeCreator credentials":{"type":"method","name":"credentials","children":[],"call":["Rugged Credentials SshKey  new ","RedmineGitHosting Config  gitolite_ssh_private_key ","RedmineGitHosting Config  gitolite_ssh_public_key ","RedmineGitHosting Config  gitolite_user "]}," Extenders ReadmeCreator remote_branch":{"type":"method","name":"remote_branch","children":[],"call":[" default_branch "," git_default_branch "]}," Extenders ReadmeCreator push_commit":{"type":"method","name":"push_commit","children":[],"call":["repo push "," credentials "," remote_branch "]}," Extenders ReadmeCreator create_commit":{"type":"method","name":"create_commit","children":[],"call":["Rugged Commit  create ","(send\n  (send\n    (lvar :repo) :head) :target) compact ","repo head target ","repo head ","repo empty? "," commit_author ","index write_tree "]}," Extenders ReadmeCreator create_file":{"type":"method","name":"create_file","children":[],"call":["index add ","repo index ","repo write "," gitolite_repo_name ","repo index  add ","repo repo index  "]}," Extenders ReadmeCreator clone_repo":{"type":"method","name":"clone_repo","children":[],"call":["Rugged Repository  clone_at "," credentials "," repository ssh_url "," repository "]}," Extenders ReadmeCreator do_create_readme_file":{"type":"method","name":"do_create_readme_file","children":[],"call":["FileUtils  rm_rf "," logger info "," logger "," logger error ","e message "," gitolite_repo_name "," push_commit "," create_commit "," create_file "," clone_repo ","Dir  mktmpdir "," gitolite_ clone_repo _name "," clone_ clone_repo  "]}," Extenders ReadmeCreator create_readme_file?":{"type":"method","name":"create_readme_file?","children":[],"call":[" create_readme_file == "," create_readme_file ","Additionals  true? ","RedminePluginKit  true? "]}," Extenders ReadmeCreator installable?":{"type":"method","name":"installable?","children":[],"call":[" recovered? ! "," recovered? "," create_readme_file? "]}," Extenders ReadmeCreator post_create":{"type":"method","name":"post_create","children":[],"call":[" logger warn "," gitolite_repo_path "," logger "," do_create_readme_file "," repository_empty? "," installable? "]}," Extenders ReadmeCreator initialize":{"type":"method","name":"initialize","children":[],"call":[" options delete "," options ","options delete "]}," Extenders GitAnnexCreator install_git_annex":{"type":"method","name":"install_git_annex","children":[],"call":[" logger info "," gitolite_repo_name "," logger "," logger error "," sudo_git "]}," Extenders GitAnnexCreator git_annex_installed?":{"type":"method","name":"git_annex_installed?","children":[],"call":[" directory_exists? ","File  join "," gitolite_repo_path "]}," Extenders GitAnnexCreator enable_git_annex?":{"type":"method","name":"enable_git_annex?","children":[],"call":[" enable_git_annex == "," enable_git_annex ","Additionals  true? ","RedminePluginKit  true? "]}," Extenders GitAnnexCreator installable?":{"type":"method","name":"installable?","children":[],"call":[" recovered? ! "," recovered? "," enable_git_annex? "]}," Extenders GitAnnexCreator post_create":{"type":"method","name":"post_create","children":[],"call":[" logger warn "," gitolite_repo_path "," logger "," install_git_annex "," git_annex_installed? ! "," git_annex_installed? "," installable? "]}," Extenders GitAnnexCreator initialize":{"type":"method","name":"initialize","children":[],"call":[" options delete "," options ","options delete "]}," Extenders ConfigKeyDeletor delete_hook_param":{"type":"method","name":"delete_hook_param","children":[],"call":[" logger info "," gitolite_repo_name "," delete_git_config_key "," logger "," logger error "," sudo_git "]}," Extenders ConfigKeyDeletor post_update":{"type":"method","name":"post_update","children":[],"call":[" delete_hook_param "," delete_git_config_key empty? "," delete_git_config_key "," delete_git_config_key nil? "," delete_git_config_key present? "]}," Extenders ConfigKeyDeletor initialize":{"type":"method","name":"initialize","children":[],"call":[" options delete "," options ","options delete "]}," Extenders BranchUpdater new_default_branch":{"type":"method","name":"new_default_branch","children":[],"call":[" default_branch "," git_default_branch "]}," Extenders BranchUpdater do_update_default_branch":{"type":"method","name":"do_update_default_branch","children":[],"call":[" repository empty_cache! "," repository "," logger info "," gitolite_repo_name "," logger "," logger error "," sudo_git "," new_default_branch "]}," Extenders BranchUpdater update_default_branch?":{"type":"method","name":"update_default_branch?","children":[],"call":[" update_default_branch == "," update_default_branch ","Additionals  true? ","RedminePluginKit  true? "]}," Extenders BranchUpdater post_update":{"type":"method","name":"post_update","children":[],"call":[" do_update_default_branch "," update_default_branch? "]}," Extenders BranchUpdater initialize":{"type":"method","name":"initialize","children":[],"call":[" options delete "," options ","options delete "]}," Extenders BaseExtender installable?":{"type":"method","name":"installable?","children":[],"call":[]}," Extenders BaseExtender recovered?":{"type":"method","name":"recovered?","children":[],"call":[" recovered "]}," Extenders BaseExtender initialize":{"type":"method","name":"initialize","children":[],"call":["repository default_branch ","repository gitolite_repository_path ","repository gitolite_repository_name ","options delete ","repository git_default_branch "]}," RedmineGitHosting Patches XitoliteAdapterPatch InstanceMethods git_cache_enabled?":{"type":"method","name":"git_cache_enabled?","children":[],"call":["RedmineGitHosting Config  gitolite_cache_max_time > ","RedmineGitHosting Config  gitolite_cache_max_time "]}," RedmineGitHosting Patches XitoliteAdapterPatch InstanceMethods git_args":{"type":"method","name":"git_args","children":[],"call":[" class client_version_above? "," class "]}," RedmineGitHosting Patches XitoliteAdapterPatch InstanceMethods repo_path":{"type":"method","name":"repo_path","children":[],"call":[" url "," root_url "]}," RedmineGitHosting Patches XitoliteAdapterPatch InstanceMethods git_push_args":{"type":"method","name":"git_push_args","children":[],"call":["RedmineGitHosting Config  gitolite_mirroring_script "]}," RedmineGitHosting Patches XitoliteAdapterPatch InstanceMethods git_mirror_cmd":{"type":"method","name":"git_mirror_cmd","children":[],"call":["RedmineGitHosting Commands  sudo_git_args_for_repo "," git_push_args "," repo_path "]}," RedmineGitHosting Patches XitoliteAdapterPatch InstanceMethods base_args":{"type":"method","name":"base_args","children":[],"call":["RedmineGitHosting Commands  sudo_git_args_for_repo concat "," git_args ","RedmineGitHosting Commands  sudo_git_args_for_repo "," repo_path "]}," RedmineGitHosting Patches XitoliteAdapterPatch InstanceMethods git_cache_id":{"type":"method","name":"git_cache_id","children":[],"call":[" logger warn "," repo_path "," logger ","@git_cache_id nil? ","Repository Xitolite  repo_path_to_git_cache_id "," logger debug "]}," RedmineGitHosting Patches XitoliteAdapterPatch InstanceMethods prepare_command":{"type":"method","name":"prepare_command","children":[],"call":["(send\n  (lvar :full_args) :map) join "," shell_quote ","e to_s ","full_args map "," base_args ","(send\n  (lvar : base_args ) :map) join "," base_args  map "]}," RedmineGitHosting Patches XitoliteAdapterPatch InstanceMethods git_cmd_with_git_hosting":{"type":"method","name":"git_cmd_with_git_hosting","children":[],"call":["Redmine Scm Adapters AbstractAdapter  shellout ","RedmineGitHosting ShellRedirector  execute "," git_cache_id ","bypass_cache ! "," git_cache_enabled? "," git_cache_id nil? ! "," git_cache_id nil? "," prepare_command ","options delete "]}," RedmineGitHosting Patches XitoliteAdapterPatch InstanceMethods logger":{"type":"method","name":"logger","children":[],"call":["RedmineGitHosting  logger "]}," RedmineGitHosting Patches XitoliteAdapterPatch InstanceMethods mirror_push":{"type":"method","name":"mirror_push","children":[],"call":["RedmineGitHosting Utils  capture ","cmd_args shift "," git_mirror_cmd concat compact "," git_mirror_cmd concat "," git_mirror_cmd ","cmd_args shift _args shift "," git_mirror_cmd concat compact  shift "," git_mirror_cmd_args shift  concat compact "," git_mirror_cmd_args shift  concat "," git_mirror_cmd_args shift  "]}," RedmineGitHosting Patches XitoliteAdapterPatch InstanceMethods archive":{"type":"method","name":"archive","children":[],"call":["io read ","io binmode "," git_cmd ","cmd_args << "]}," RedmineGitHosting Patches XitoliteAdapterPatch InstanceMethods rev_parse":{"type":"method","name":"rev_parse","children":[],"call":["(send\n  (send\n    (lvar :io) :readlines) :map) first ","t strip ","io readlines map ","io readlines "," git_cmd "]}," RedmineGitHosting Patches XitoliteAdapterPatch InstanceMethods rev_list":{"type":"method","name":"rev_list","children":[],"call":["t strip ","io readlines map ","io readlines "," git_cmd "]}," RedmineGitHosting Patches XitoliteAdapterPatch InstanceMethods tags":{"type":"method","name":"tags","children":[],"call":["t strip ","io readlines sort! map ","io readlines sort! ","io readlines "," git_cmd ","@tags nil? ! ","@tags nil? "]}," RedmineGitHosting Patches XitoliteAdapterPatch InstanceMethods diff":{"type":"method","name":"diff","children":[],"call":["diff << ","io each_line "," git_cmd ","cmd_args << << "," scm_iconv ","cmd_args << ","path empty? ","cmd_args << << << ","cmd_args << << << << "]}," RedmineGitHosting Patches XitoliteAdapterPatch InstanceMethods changed_files":{"type":"method","name":"changed_files","children":[],"call":["changed_files << ","io each_line "," git_cmd ","cmd_args << << "," scm_iconv ","cmd_args << ","path empty? ","cmd_args << << << << << << ","cmd_args << << << << << ","cmd_args << << << << ","cmd_args << << << "]}," RedmineGitHosting Patches XitoliteAdapterPatch ClassMethods scm_version_from_command_line_with_git_hosting":{"type":"method","name":"scm_version_from_command_line_with_git_hosting","children":[],"call":["RedmineGitHosting Commands  git_version "]}," RedmineGitHosting Patches XitoliteAdapterPatch ClassMethods client_command_with_git_hosting":{"type":"method","name":"client_command_with_git_hosting","children":[],"call":[]}," RedmineGitHosting Patches XitoliteAdapterPatch included":{"type":"method","name":"included","children":[],"call":[]}," RedmineGitHosting Patches UsersControllerPatch InstanceMethods destroy_ssh_keys":{"type":"method","name":"destroy_ssh_keys","children":[],"call":["GitoliteAccessor  destroy_ssh_key ","ssh_keys_list each ","RedmineGitHosting  logger info ","@user login ","RedmineGitHosting  logger "," gitolite_accessor destroy_ssh_key "," gitolite_accessor "]}," RedmineGitHosting Patches UsersControllerPatch InstanceMethods ssh_keys_to_destroy":{"type":"method","name":"ssh_keys_to_destroy","children":[],"call":["@user gitolite_public_keys map ","@user gitolite_public_keys "]}," RedmineGitHosting Patches UsersControllerPatch InstanceMethods projects_to_update":{"type":"method","name":"projects_to_update","children":[],"call":["p id ","@user gitolite_projects map ","@user gitolite_projects "]}," RedmineGitHosting Patches UsersControllerPatch InstanceMethods update_projects":{"type":"method","name":"update_projects","children":[],"call":["GitoliteAccessor  update_projects "," projects_to_update ","@user status_has_changed? ","@user login "," gitolite_accessor update_projects "," gitolite_accessor "]}," RedmineGitHosting Patches UserPatch InstanceMethods status_has_changed?":{"type":"method","name":"status_has_changed?","children":[],"call":[" status_has_changed "]}," RedmineGitHosting Patches UserPatch InstanceMethods gitolite_projects":{"type":"method","name":"gitolite_projects","children":[],"call":["p gitolite_repos any? ","p gitolite_repos "," projects uniq select "," projects uniq "," projects "]}," RedmineGitHosting Patches RolesControllerPatch InstanceMethods call_gitolite":{"type":"method","name":"call_gitolite","children":[],"call":["GitoliteAccessor  update_projects "," gitolite_accessor update_projects "," gitolite_accessor "]}," RedmineGitHosting Patches RepositoriesHelperPatch InstanceMethods xitolite_field_tags_with_git_hosting":{"type":"method","name":"xitolite_field_tags_with_git_hosting","children":[],"call":[" encoding_field + + "," enable_git_annex_field "," encoding_field + "," create_readme_field "," encoding_field "]}," RedmineGitHosting Patches RepositoriesHelperPatch included":{"type":"method","name":"included","children":[],"call":[]}," RedmineGitHosting Patches RepositoriesControllerPatch InstanceMethods diff_with_options":{"type":"method","name":"diff_with_options","children":[],"call":["@repository diff_format_revisions ","@repository find_changeset_by_name "," show_error_not_found ","@repository diff "," read_fragment ","(str \"repositories/diff/\") + ","Digest MD5  hexdigest "," current_language ","@repository id ","User  current preference save ","User  current preference ","User  current ","User  current pref []= ","User  current pref ","@diff_type != ","User  current pref [] ","User  current logged? ","(str \"inline\") include? "," params [] "," params "," send_data ","@diff join ","filename << "," params [] == ","@repository diff _type != ","@repository diff  join "]}," RedmineGitHosting Patches RepositoriesControllerPatch InstanceMethods enable_git_annex?":{"type":"method","name":"enable_git_annex?","children":[],"call":["@repository enable_git_annex == ","@repository enable_git_annex "]}," RedmineGitHosting Patches RepositoriesControllerPatch InstanceMethods create_readme_file?":{"type":"method","name":"create_readme_file?","children":[],"call":["@repository create_readme == ","@repository create_readme "]}," RedmineGitHosting Patches RepositoriesControllerPatch InstanceMethods creation_options":{"type":"method","name":"creation_options","children":[],"call":[" enable_git_annex? "," create_readme_file? "]}," RedmineGitHosting Patches RepositoriesControllerPatch InstanceMethods call_use_cases":{"type":"method","name":"call_use_cases","children":[],"call":["GitoliteAccessor  destroy_repository ","GitoliteAccessor  update_repository ","CreateRepository  new call ","CreateRepository  new "," creation_options "," action_name ","@repository errors any? ! ","@repository errors any? ","@repository errors ","@repository is_a? "," gitolite_accessor destroy_repository "," gitolite_accessor "," gitolite_accessor update_repository ","Repositories Create  call "]}," RedmineGitHosting Patches RepositoriesControllerPatch InstanceMethods diff_with_git_hosting":{"type":"method","name":"diff_with_git_hosting","children":[],"call":[" diff_without_git_hosting "," diff_with_options ","@repository is_a? "]}," RedmineGitHosting Patches ProjectsControllerPatch InstanceMethods repositories_to_destroy":{"type":"method","name":"repositories_to_destroy","children":[],"call":["destroy_repositories << ","repository data_for_destruction ","project gitolite_repos reverse each ","project gitolite_repos reverse ","project gitolite_repos ","git_projects reverse each ","git_projects reverse ","p gitolite_repos any? ","p gitolite_repos ","projects uniq select ","projects uniq ","@project self_and_descendants ","git_@project self_and_descendants  reverse each ","git_@project self_and_descendants  reverse ","@project self_and_descendants  uniq select ","@project self_and_descendants  uniq "]}," RedmineGitHosting Patches ProjectsControllerPatch InstanceMethods destroy_repositories":{"type":"method","name":"destroy_repositories","children":[],"call":["GitoliteAccessor  destroy_repositories ","User  current login ","User  current "," gitolite_accessor destroy_repositories "," gitolite_accessor "]}," RedmineGitHosting Patches ProjectsControllerPatch InstanceMethods hierarchy_to_update":{"type":"method","name":"hierarchy_to_update","children":[],"call":["project id ","(send\n  (send\n    (send\n      (ivar :@project) :self_and_descendants) :uniq) :select) map ","p gitolite_repos any? ","p gitolite_repos ","@project self_and_descendants uniq select ","@project self_and_descendants uniq ","@project self_and_descendants "]}," RedmineGitHosting Patches ProjectsControllerPatch InstanceMethods update_project_hierarchy":{"type":"method","name":"update_project_hierarchy","children":[],"call":["GitoliteAccessor  update_projects "," hierarchy_to_update "," gitolite_accessor update_projects "," gitolite_accessor "]}," RedmineGitHosting Patches ProjectsControllerPatch InstanceMethods update_project":{"type":"method","name":"update_project","children":[],"call":["UpdateProject  new call ","UpdateProject  new ","Projects Update  call "]}," RedmineGitHosting Patches ProjectsControllerPatch InstanceMethods move_project_hierarchy":{"type":"method","name":"move_project_hierarchy","children":[],"call":["GitoliteAccessor  move_project_hierarchy "," gitolite_accessor move_project_hierarchy "," gitolite_accessor "]}," RedmineGitHosting Patches ProjectsControllerPatch InstanceMethods create_project_repository":{"type":"method","name":"create_project_repository","children":[],"call":["CreateProjectRepository  new call ","CreateProjectRepository  new "," flash []= "," l "," flash ","Setting  enabled_scm include? ","Setting  enabled_scm ","RedmineGitHosting Config  all_projects_use_git? ","@project module_enabled? ","Projects CreateRepository  call "]}," RedmineGitHosting Patches ProjectPatch InstanceMethods additional_constraints_on_identifier":{"type":"method","name":"additional_constraints_on_identifier","children":[],"call":[" errors add "," errors ","Repository  find_by_identifier_and_type "," identifier "," identifier blank? ! "," identifier blank? "," new_record? "]}," RedmineGitHosting Patches MemberPatch InstanceMethods update_project":{"type":"method","name":"update_project","children":[],"call":["GitoliteAccessor  update_projects "," project id "," project "," gitolite_accessor update_projects "," gitolite_accessor "]}," RedmineGitHosting Log get_log_level":{"type":"method","name":"get_log_level","children":[],"call":["RedmineGitHosting Config  gitolite_log_level "]}," RedmineGitHosting Log init_logs!":{"type":"method","name":"init_logs!","children":[],"call":["logger formatter= "," proc ","logger level= "," get_log_level ","logger progname= "," new ","Rails  root join ","Rails  root "," new  formatter= "," new  level= "," new  progname= "]}," RedmineGitHosting Hooks DisplayRepositoryReadme get_formatter":{"type":"method","name":"get_formatter","children":[],"call":["GitHub Markup  render ","readme_file path ","Redmine WikiFormatting  formatter_for new to_html ","Redmine WikiFormatting  formatter_for new ","Redmine WikiFormatting  formatter_for ","name =~ ","Redmine WikiFormatting  format_names find ","Redmine WikiFormatting  format_names ","MARKDOWN_EXT  include? ","File  extname ","repository cat ","Redmine CodesetUtil  to_utf8_by_setting ","Redmine WikiFormatting  GitHub Markup  render _for new to_html ","Redmine WikiFormatting  Redmine WikiFormatting  formatter_for new to_html _for new to_html ","Redmine WikiFormatting  GitHub Markup  render _for new ","Redmine WikiFormatting  Redmine WikiFormatting  formatter_for new to_html _for new ","Redmine WikiFormatting  GitHub Markup  render _for ","Redmine WikiFormatting  Redmine WikiFormatting  formatter_for new to_html _for "]}," RedmineGitHosting Hooks DisplayRepositoryReadme find_readme_file":{"type":"method","name":"find_readme_file","children":[],"call":["f name =~ ","f name ","(or\n  (send\n    (lvar :repository) :entries\n    (lvar :path)\n    (lvar :rev))\n  (array)) find ","repository entries "]}," RedmineGitHosting Hooks DisplayRepositoryReadme find_repository":{"type":"method","name":"find_repository","children":[],"call":["context [] repositories find ","context [] repositories ","context [] ","r is_default "," lambda ","r identifier == ","r identifier "]}," RedmineGitHosting Hooks DisplayRepositoryReadme get_repo_id":{"type":"method","name":"get_repo_id","children":[],"call":["context [] params [] ","context [] params ","context [] "]}," RedmineGitHosting Hooks DisplayRepositoryReadme get_rev":{"type":"method","name":"get_rev","children":[],"call":["(lvasgn :_rev\n  (send\n    (send\n      (send\n        (lvar :context) :[]\n        (sym :request)) :params) :[]\n    (str \"rev\"))) blank? ","context [] params [] ","context [] params ","context [] ","_rev blank? ","(lvasgn :context [] params [] \n  (send\n    (send\n      (send\n        (lvar :context) :[]\n        (sym :request)) :params) :[]\n    (str \"rev\"))) blank? ","context [] params []  blank? "]}," RedmineGitHosting Hooks DisplayRepositoryReadme get_path":{"type":"method","name":"get_path","children":[],"call":["context [] params [] ","context [] params ","context [] "]}," RedmineGitHosting Hooks AddPublicKeysLink view_my_account_contextual":{"type":"method","name":"view_my_account_contextual","children":[],"call":[" link_to "," public_keys_path "," l ","user allowed_to? ","context [] ","user allowed_to_create_ssh_keys? ","context []  allowed_to? ","context []  allowed_to_create_ssh_keys? "]}," RedmineGitHosting GitoliteWrapper gitolite_config_file":{"type":"method","name":"gitolite_config_file","children":[],"call":["RedmineGitHosting Config  gitolite_config_file "]}," RedmineGitHosting GitoliteWrapper gitolite_key_subdir":{"type":"method","name":"gitolite_key_subdir","children":[],"call":["RedmineGitHosting Config  gitolite_key_subdir "]}," RedmineGitHosting GitoliteWrapper gitolite_ssh_private_key":{"type":"method","name":"gitolite_ssh_private_key","children":[],"call":["RedmineGitHosting Config  gitolite_ssh_private_key "]}," RedmineGitHosting GitoliteWrapper gitolite_ssh_public_key":{"type":"method","name":"gitolite_ssh_public_key","children":[],"call":["RedmineGitHosting Config  gitolite_ssh_public_key "]}," RedmineGitHosting GitoliteWrapper git_config_email":{"type":"method","name":"git_config_email","children":[],"call":["RedmineGitHosting Config  git_config_email "]}," RedmineGitHosting GitoliteWrapper git_config_username":{"type":"method","name":"git_config_username","children":[],"call":["RedmineGitHosting Config  git_config_username "]}," RedmineGitHosting GitoliteWrapper gitolite_server_port":{"type":"method","name":"gitolite_server_port","children":[],"call":["RedmineGitHosting Config  gitolite_server_port "]}," RedmineGitHosting GitoliteWrapper gitolite_user":{"type":"method","name":"gitolite_user","children":[],"call":["RedmineGitHosting Config  gitolite_user "]}," RedmineGitHosting GitoliteWrapper gitolite_admin_settings":{"type":"method","name":"gitolite_admin_settings","children":[],"call":[" gitolite_config_file "," gitolite_key_subdir "," gitolite_ssh_private_key "," gitolite_ssh_public_key "," git_config_email "," git_config_username "," gitolite_server_port "," gitolite_user ","RedmineGitHosting Config  gitolite_config_dir ","RedmineGitHosting Config  gitolite_config_file ","RedmineGitHosting Config  gitolite_key_subdir ","RedmineGitHosting Config  gitolite_ssh_private_key ","RedmineGitHosting Config  gitolite_ssh_public_key ","RedmineGitHosting Config  git_config_email ","RedmineGitHosting Config  git_config_username ","RedmineGitHosting Config  gitolite_server_port ","RedmineGitHosting Config  gitolite_user ","RedmineGitHosting Config  gitolite_server_host "]}," RedmineGitHosting GitoliteWrapper find_gitolite_wrapper":{"type":"method","name":"find_gitolite_wrapper","children":[],"call":["wrappermod method_defined? ","WRAPPERS  each "]}," RedmineGitHosting GitoliteWrapper call_gitolite_wrapper":{"type":"method","name":"call_gitolite_wrapper","children":[],"call":[" raise ","RedmineGitHosting Error GitoliteWrapperException  new ","klass new send ","klass new ","klass nil? ! ","klass nil? "," find_gitolite_wrapper ","klass call "," logger error ","e message "," logger ","GitoliteWrappers Base  find_by_action_name ","GitoliteWrappers Base  for_action "," find_gitolite_wrapper  new send ","GitoliteWrappers Base  find_by_action_name  new send ","GitoliteWrappers Base  for_action  new send "," find_gitolite_wrapper  new ","GitoliteWrappers Base  find_by_action_name  new ","GitoliteWrappers Base  for_action  new "," find_gitolite_wrapper  nil? ! ","GitoliteWrappers Base  find_by_action_name  nil? ! ","GitoliteWrappers Base  for_action  nil? ! "," find_gitolite_wrapper  nil? ","GitoliteWrappers Base  find_by_action_name  nil? ","GitoliteWrappers Base  for_action  nil? "," find_gitolite_wrapper  call ","GitoliteWrappers Base  find_by_action_name  call ","GitoliteWrappers Base  for_action  call "]}," RedmineGitHosting GitoliteWrapper gitolite_admin_dir":{"type":"method","name":"gitolite_admin_dir","children":[],"call":["RedmineGitHosting Config  gitolite_admin_dir "]}," RedmineGitHosting GitoliteWrapper gitolite_admin":{"type":"method","name":"gitolite_admin","children":[],"call":[" Gitolite GitoliteAdmin  new "," gitolite_admin_settings "," gitolite_admin_dir "," logger info "," logger ","RedmineGitHosting Config  create_temp_dir "," logger debug "]}," RedmineGitHosting GitoliteWrapper flush_cache":{"type":"method","name":"flush_cache","children":[],"call":["Setting  check_cache ","Setting  respond_to? "," logger info "," logger ","options [] == ","options [] ","options has_key? ","options key? "]}," RedmineGitHosting GitoliteWrapper resync_gitolite":{"type":"method","name":"resync_gitolite","children":[],"call":[" logger error ","e message "," logger "," call_gitolite_wrapper "," gitolite_admin "," flush_cache ","options symbolize_keys "," gitolite_admin_dir "," execute_action "," logger info ","action == ","action to_sym "," gitolite_ gitolite_admin  ","options symbolize_keys  symbolize_keys "," gitolite_ gitolite_admin _dir "," execute_action to_sym  ","action to_sym  == ","action to_sym  to_sym "]}," RedmineGitHosting GitoliteWrapper logger":{"type":"method","name":"logger","children":[],"call":["RedmineGitHosting  logger "]}," RedmineGitHosting GitoliteWrapper Users key_email":{"type":"method","name":"key_email","children":[],"call":["key split [] ","key split "]}," RedmineGitHosting GitoliteWrapper Users key_blob":{"type":"method","name":"key_blob","children":[],"call":["key split [] ","key split "]}," RedmineGitHosting GitoliteWrapper Users key_type":{"type":"method","name":"key_type","children":[],"call":["key split [] ","key split "]}," RedmineGitHosting GitoliteWrapper Users keys_for_owner":{"type":"method","name":"keys_for_owner","children":[],"call":[" admin ssh_keys [] "," admin ssh_keys "," admin "]}," RedmineGitHosting GitoliteWrapper Users build_gitolite_key":{"type":"method","name":"build_gitolite_key","children":[],"call":["Gitolite SSHKey  new ","key location ","key owner "," key_email ","key key "," key_blob "," key_type "]}," RedmineGitHosting GitoliteWrapper Users remove_gitolite_key":{"type":"method","name":"remove_gitolite_key","children":[],"call":[" logger info ","key [] "," action "," logger "," admin rm_key "," admin ","(send\n  (send nil :keys_for_owner\n    (send\n      (lvar :key) :[]\n      (sym :owner))) :find_all) first ","k owner == ","k owner ","k location == ","k location "," keys_for_owner find_all "," keys_for_owner "]}," RedmineGitHosting GitoliteWrapper Users add_gitolite_key":{"type":"method","name":"add_gitolite_key","children":[],"call":["repo_key location= ","key location ","repo_key owner= ","key owner ","repo_key email= "," key_email ","key key ","repo_key blob= "," key_blob ","repo_key type= "," key_type "," logger info "," action "," logger "," admin add_key "," admin "," build_gitolite_key ","repo_key nil? ","(send\n  (send nil :keys_for_owner\n    (send\n      (lvar :key) :owner)) :find_all) first ","k owner == ","k owner ","k location == ","k location "," keys_for_owner find_all "," keys_for_owner "," build_gitolite_key  location= ","(send\n  (send nil :keys_for_owner\n    (send\n      (lvar :key) :owner)) :find_all) first  location= "," build_gitolite_key  owner= ","(send\n  (send nil :keys_for_owner\n    (send\n      (lvar :key) :owner)) :find_all) first  owner= "," build_gitolite_key  email= ","(send\n  (send nil :keys_for_owner\n    (send\n      (lvar :key) :owner)) :find_all) first  email= "," build_gitolite_key  blob= ","(send\n  (send nil :keys_for_owner\n    (send\n      (lvar :key) :owner)) :find_all) first  blob= "," build_gitolite_key  type= ","(send\n  (send nil :keys_for_owner\n    (send\n      (lvar :key) :owner)) :find_all) first  type= "," build_gitolite_key  nil? ","(send\n  (send nil :keys_for_owner\n    (send\n      (lvar :key) :owner)) :find_all) first  nil? "]}," RedmineGitHosting GitoliteWrapper Users resync_all_ssh_keys":{"type":"method","name":"resync_all_ssh_keys","children":[],"call":[" gitolite_admin_repo_commit ","ssh_key identifier "," add_gitolite_key "," ssh_keys each "," ssh_keys "," admin transaction "," admin "]}," RedmineGitHosting GitoliteWrapper Users delete_ssh_key":{"type":"method","name":"delete_ssh_key","children":[],"call":[" gitolite_admin_repo_commit "," ssh_key [] "," ssh_key "," remove_gitolite_key "," admin transaction "," admin "," logger info "," logger "]}," RedmineGitHosting GitoliteWrapper Users add_ssh_key":{"type":"method","name":"add_ssh_key","children":[],"call":[" gitolite_admin_repo_commit "," ssh_key identifier "," ssh_key "," add_gitolite_key "," admin transaction "," admin "," logger info "," logger "]}," RedmineGitHosting GitoliteWrapper Users initialize":{"type":"method","name":"initialize","children":[],"call":["GitolitePublicKey  find_by_id "," object_id ","GitolitePublicKey  all "," object_id == "," object_id symbolize_keys "," object_id is_a? "]}," RedmineGitHosting GitoliteWrapper Repositories execute_post_delete_actions":{"type":"method","name":"execute_post_delete_actions","children":[],"call":["RedmineGitHosting Plugins  execute "]}," RedmineGitHosting GitoliteWrapper Repositories execute_post_update_actions":{"type":"method","name":"execute_post_update_actions","children":[],"call":["RedmineGitHosting Plugins  execute "," options "]}," RedmineGitHosting GitoliteWrapper Repositories execute_post_create_actions":{"type":"method","name":"execute_post_create_actions","children":[],"call":["RedmineGitHosting Plugins  execute "," options merge "," options "]}," RedmineGitHosting GitoliteWrapper Repositories delete_repository":{"type":"method","name":"delete_repository","children":[],"call":[" execute_post_delete_actions "," logger info "," logger "," gitolite_admin_repo_commit ","repository_data [] ","RedmineGitHosting GitoliteHandlers RepositoryDeleter  new call ","RedmineGitHosting GitoliteHandlers RepositoryDeleter  new "," action "," gitolite_config "," admin transaction "," admin "," object_id symbolize_keys "," object_id "," object_id symbolize_keys  [] "]}," RedmineGitHosting GitoliteWrapper Repositories update_repository":{"type":"method","name":"update_repository","children":[],"call":[" logger error "," action "," logger ","repository fetch_changesets "," execute_post_update_actions "," logger info "," gitolite_admin_repo_commit ","repository gitolite_repository_name ","RedmineGitHosting GitoliteHandlers RepositoryUpdater  new call ","RedmineGitHosting GitoliteHandlers RepositoryUpdater  new "," options "," gitolite_config "," admin transaction "," admin ","Repository  find_by_id "," object_id ","Repository  find_by_id  fetch_changesets ","Repository  find_by_id  gitolite_Repository  find_by_id _name "]}," RedmineGitHosting GitoliteWrapper Repositories add_repository":{"type":"method","name":"add_repository","children":[],"call":[" logger error "," action "," logger ","repository fetch_changesets "," execute_post_create_actions "," logger info ","repository gitolite_repository_path ","@recovered ! ","RedmineGitHosting Recycle  recover_repository_if_present? "," gitolite_admin_repo_commit ","repository gitolite_repository_name ","RedmineGitHosting GitoliteHandlers RepositoryAdder  new call ","RedmineGitHosting GitoliteHandlers RepositoryAdder  new "," options "," gitolite_config "," admin transaction "," admin ","Repository  find_by_id "," object_id ","Repository  find_by_id  fetch_changesets ","Repository  find_by_id  gitolite_Repository  find_by_id _path ","RedmineGitHosting Recycle  recover_repository_if_present?  ! ","RedmineGitHosting Recycle  recover_Repository  find_by_id _if_present? ","Repository  find_by_id  gitolite_Repository  find_by_id _name "]}," RedmineGitHosting GitoliteWrapper Repositories initialize":{"type":"method","name":"initialize","children":[],"call":[]}," RedmineGitHosting GitoliteWrapper Projects clean_path":{"type":"method","name":"clean_path","children":[],"call":[" logger error "," action "," logger ","RedmineGitHosting Commands  sudo_rmdir "," logger info ","path_list compact uniq sort reverse each ","path_list compact uniq sort reverse ","path_list compact uniq sort ","path_list compact uniq ","path_list compact "]}," RedmineGitHosting GitoliteWrapper Projects handle_repositories_move":{"type":"method","name":"handle_repositories_move","children":[],"call":[" gitolite_admin_repo_commit ","project identifier "," action ","delete_parent_path << ","RedmineGitHosting GitoliteHandlers RepositoryMover  new call ","RedmineGitHosting GitoliteHandlers RepositoryMover  new "," gitolite_config ","repo_list push << ","repository gitolite_repository_name ","repo_list push ","project gitolite_repos reverse each ","project gitolite_repos reverse ","project gitolite_repos ","git_projects reverse each ","git_projects reverse ","repo_list << "]}," RedmineGitHosting GitoliteWrapper Projects handle_project_update":{"type":"method","name":"handle_project_update","children":[],"call":["RedmineGitHosting GitoliteHandlers RepositoryUpdater  new call ","RedmineGitHosting GitoliteHandlers RepositoryUpdater  new "," action "," gitolite_config ","RedmineGitHosting GitoliteHandlers RepositoryAdder  new call ","RedmineGitHosting GitoliteHandlers RepositoryAdder  new "," options [] == "," options [] "," options ","project gitolite_repos each ","project gitolite_repos "]}," RedmineGitHosting GitoliteWrapper Projects perform_update":{"type":"method","name":"perform_update","children":[],"call":[" gitolite_admin_repo_commit ","project identifier "," handle_project_update ","git_projects each "," admin transaction "," admin ","git_projects empty? ","p gitolite_repos any? ","p gitolite_repos ","projects uniq select ","projects uniq "]}," RedmineGitHosting GitoliteWrapper Projects move_repositories_tree":{"type":"method","name":"move_repositories_tree","children":[],"call":[" clean_path "," handle_repositories_move ","git_projects empty? ","p gitolite_repos any? ","p gitolite_repos ","project self_and_descendants uniq select ","project self_and_descendants uniq ","project self_and_descendants ","projects each "," admin transaction "," admin ","x parent_id nil? ","x parent_id ","Project  includes all select ","Project  includes all ","Project  includes "]}," RedmineGitHosting GitoliteWrapper Projects move_repositories":{"type":"method","name":"move_repositories","children":[],"call":[" clean_path "," handle_repositories_move "," admin transaction "," admin ","git_projects empty? ","p gitolite_repos any? ","p gitolite_repos ","projects uniq select ","projects uniq ","Project  find_by_id self_and_descendants ","Project  find_by_id "," object_id ","git_Project  find_by_id self_and_descendants  empty? ","Project  find_by_id self_and_descendants  uniq select ","Project  find_by_id self_and_descendants  uniq "]}," RedmineGitHosting GitoliteWrapper Projects update_projects":{"type":"method","name":"update_projects","children":[],"call":[" perform_update ","Project  find_by_id "," object_id map "," object_id ","Project  active_or_closed includes all ","Project  active_or_closed includes ","Project  active_or_closed "," object_id == ","Project  active includes all ","Project  active includes ","Project  active ","Project  includes all ","Project  includes "]}," RedmineGitHosting GitoliteWrapper Admin gitolite_admin_repo_commit":{"type":"method","name":"gitolite_admin_repo_commit","children":[],"call":[" logger error ","e message "," logger "," admin save "," action "," admin "," logger info "]}," RedmineGitHosting GitoliteWrapper Admin logger":{"type":"method","name":"logger","children":[],"call":["RedmineGitHosting  logger "]}," RedmineGitHosting GitoliteWrapper Admin flush_settings_cache":{"type":"method","name":"flush_settings_cache","children":[],"call":[" logger info "," logger "]}," RedmineGitHosting GitoliteWrapper Admin purge_recycle_bin":{"type":"method","name":"purge_recycle_bin","children":[],"call":[" logger info "," action "," logger ","RedmineGitHosting Recycle  delete_expired_files "," object_id "]}," RedmineGitHosting GitoliteWrapper Admin initialize":{"type":"method","name":"initialize","children":[],"call":["@admin config "]}," GitoliteParams MailerParams smtpauth_enabled?":{"type":"method","name":"smtpauth_enabled?","children":[],"call":["auth != ","ActionMailer Base  smtp_settings [] ","ActionMailer Base  smtp_settings ","ActionMailer Base  smtp_settings []  != "]}," GitoliteParams MailerParams mailer":{"type":"method","name":"mailer","children":[],"call":["ActionMailer Base  delivery_method == ","ActionMailer Base  delivery_method "]}," GitoliteParams MailerParams get_mailer_params":{"type":"method","name":"get_mailer_params","children":[],"call":["params []= ","ActionMailer Base  smtp_settings [] ","ActionMailer Base  smtp_settings ","ActionMailer Base  smtp_settings [] to_s "," smtpauth_enabled? to_s "," smtpauth_enabled? "," mailer "]}," GitoliteParams MailerParams mailer_params":{"type":"method","name":"mailer_params","children":[],"call":[]}," GitoliteParams MailerParams installed?":{"type":"method","name":"installed?","children":[],"call":["@installed []= "," set_git_config_param "," current_mailer_params [] "," current_mailer_params "," namespace "," current_params [] != "," current_params [] "," current_params "," mailer_params each "," mailer_params "]}," GitoliteParams MailerParams initialize":{"type":"method","name":"initialize","children":[],"call":[" get_mailer_params "," get_git_config_params "]}," GitoliteParams GlobalParams async_mode_set?":{"type":"method","name":"async_mode_set?","children":[],"call":["@installed []= "," set_git_config_param "," async_mode "," namespace "," current_params [] != "," current_params [] "," current_params "]}," GitoliteParams GlobalParams debug_mode_set?":{"type":"method","name":"debug_mode_set?","children":[],"call":["@installed []= "," set_git_config_param "," debug_mode "," namespace "," current_params [] != "," current_params [] "," current_params "]}," GitoliteParams GlobalParams gitolite_hooks_url_set?":{"type":"method","name":"gitolite_hooks_url_set?","children":[],"call":["@installed []= "," set_git_config_param "," gitolite_hooks_url "," namespace "," current_params [] != "," current_params [] "," current_params "]}," GitoliteParams GlobalParams installed?":{"type":"method","name":"installed?","children":[],"call":[" async_mode_set? "," debug_mode_set? "," gitolite_hooks_url_set? "]}," GitoliteParams GlobalParams initialize":{"type":"method","name":"initialize","children":[],"call":[" get_git_config_params ","RedmineGitHosting Config  gitolite_hooks_namespace ","RedmineGitHosting Config  gitolite_hooks_are_asynchronous to_s ","RedmineGitHosting Config  gitolite_hooks_are_asynchronous ","RedmineGitHosting Config  gitolite_hooks_debug to_s ","RedmineGitHosting Config  gitolite_hooks_debug ","RedmineGitHosting Config  gitolite_hooks_url "]}," GitoliteParams BaseParam unset_git_config_param":{"type":"method","name":"unset_git_config_param","children":[],"call":["RedmineGitHosting Commands  sudo_unset_git_global_param "]}," GitoliteParams BaseParam set_git_config_param":{"type":"method","name":"set_git_config_param","children":[],"call":["RedmineGitHosting Commands  sudo_set_git_global_param "]}," GitoliteParams BaseParam get_git_config_params":{"type":"method","name":"get_git_config_params","children":[],"call":["RedmineGitHosting Commands  sudo_get_git_global_params "]}," GitoliteParams BaseParam logger":{"type":"method","name":"logger","children":[],"call":["RedmineGitHosting  logger "]}," RedmineGitHosting GitoliteHooks gitolite_hook":{"type":"method","name":"gitolite_hook","children":[],"call":["@gitolite_hooks << ","RedmineGitHosting GitoliteHook  new "]}," RedmineGitHosting GitoliteHooks hooks_installed?":{"type":"method","name":"hooks_installed?","children":[],"call":["installed []= ","hook installed? ","hook name "," registered_hooks each "," registered_hooks "]}," RedmineGitHosting GitoliteHooks source_dir":{"type":"method","name":"source_dir","children":[],"call":[]}," RedmineGitHosting GitoliteHooks registered_hooks":{"type":"method","name":"registered_hooks","children":[],"call":[]}," RedmineGitHosting GitoliteHooks register_hooks":{"type":"method","name":"register_hooks","children":[],"call":[" class_eval "]}," RedmineGitHosting GitoliteHook create_parent_dir":{"type":"method","name":"create_parent_dir","children":[],"call":[" logger error ","e output "," logger "," parent_path ","RedmineGitHosting Commands  sudo_mkdir_p "," logger info "]}," RedmineGitHosting GitoliteHook directory_exists?":{"type":"method","name":"directory_exists?","children":[],"call":["RedmineGitHosting Commands  sudo_dir_exists? "," parent_path "]}," RedmineGitHosting GitoliteHook gitolite_hooks_dir":{"type":"method","name":"gitolite_hooks_dir","children":[],"call":["RedmineGitHosting Config  gitolite_hooks_dir "]}," RedmineGitHosting GitoliteHook update_gitolite":{"type":"method","name":"update_gitolite","children":[],"call":["RedmineGitHosting Commands  sudo_update_gitolite! "]}," RedmineGitHosting GitoliteHook install_hook_file":{"type":"method","name":"install_hook_file","children":[],"call":["RedmineGitHosting Commands  sudo_install_file "," filemode "," destination_path ","File  read "," source_path "," logger info "," logger "," logger error ","e message "]}," RedmineGitHosting GitoliteHook file_exists?":{"type":"method","name":"file_exists?","children":[],"call":["RedmineGitHosting Commands  sudo_file_exists? "," destination_path "]}," RedmineGitHosting GitoliteHook hook_file_has_changed?":{"type":"method","name":"hook_file_has_changed?","children":[],"call":["RedmineGitHosting Commands  sudo_file_changed? "," destination_path "," source_path ","RedmineGitHosting Commands  sudo_file_perms_changed? "," filemode "]}," RedmineGitHosting GitoliteHook logger":{"type":"method","name":"logger","children":[],"call":["RedmineGitHosting  logger "]}," RedmineGitHosting GitoliteHook install_hook":{"type":"method","name":"install_hook","children":[],"call":[" update_gitolite "," logger info "," name "," logger "," install_hook_file "," create_parent_dir "," directory_exists? ! "," directory_exists? "]}," RedmineGitHosting GitoliteHook installed?":{"type":"method","name":"installed?","children":[],"call":[" file_exists? "," install_hook "," logger info "," name "," logger "," logger warn "," force_update "," hook_file_has_changed? "," file_exists? ! "]}," RedmineGitHosting GitoliteHook filemode":{"type":"method","name":"filemode","children":[],"call":[" executable "]}," RedmineGitHosting GitoliteHook parent_path":{"type":"method","name":"parent_path","children":[],"call":["File  join "," gitolite_hooks_dir ","dirname == ","File  dirname "," destination ","File  dirname  == ","File  File  dirname  "]}," RedmineGitHosting GitoliteHook destination_path":{"type":"method","name":"destination_path","children":[],"call":["File  join "," destination "," gitolite_hooks_dir "]}," RedmineGitHosting GitoliteHook source_path":{"type":"method","name":"source_path","children":[],"call":["File  join "," source "," source_dir "]}," RedmineGitHosting GitoliteHook initialize":{"type":"method","name":"initialize","children":[],"call":[" instance_eval ","RedmineGitHosting Config  gitolite_force_hooks_update? "]}," RedmineGitHosting GitoliteHook def_field":{"type":"method","name":"def_field","children":[],"call":[" instance_variable_set "," instance_variable_get ","args empty? "," define_method ","names each "," class_eval "]}," RedmineGitHosting GitoliteHandlers RepositoryUpdater update_repository":{"type":"method","name":"update_repository","children":[],"call":[" update_repository_config "," logger debug "," gitolite_repo_path "," action "," logger "," logger info "," gitolite_repo_name "]}," RedmineGitHosting GitoliteHandlers RepositoryUpdater call":{"type":"method","name":"call","children":[],"call":[" logger debug "," gitolite_repo_path "," action "," logger "," logger warn "," gitolite_repo_name "," update_repository "," configuration_exists? "]}," RedmineGitHosting GitoliteHandlers RepositoryMover create_parent_directory":{"type":"method","name":"create_parent_directory","children":[],"call":[" logger error "," action "," logger ","RedmineGitHosting Commands  sudo_mkdir_p "]}," RedmineGitHosting GitoliteHandlers RepositoryMover directory_exists?":{"type":"method","name":"directory_exists?","children":[],"call":["RedmineGitHosting Commands  sudo_dir_exists? "]}," RedmineGitHosting GitoliteHandlers RepositoryMover empty_repository?":{"type":"method","name":"empty_repository?","children":[],"call":["RedmineGitHosting Commands  sudo_repository_empty? "]}," RedmineGitHosting GitoliteHandlers RepositoryMover delete_directory!":{"type":"method","name":"delete_directory!","children":[],"call":[" logger error "," action "," logger ","RedmineGitHosting Commands  sudo_rm_rf "]}," RedmineGitHosting GitoliteHandlers RepositoryMover move_physical_repo_case_2":{"type":"method","name":"move_physical_repo_case_2","children":[],"call":[" logger info "," action "," logger "," logger error ","RedmineGitHosting Commands  sudo_move "," create_parent_directory "," directory_exists? ! "," directory_exists? "," logger debug "]}," RedmineGitHosting GitoliteHandlers RepositoryMover move_physical_repo_case_1":{"type":"method","name":"move_physical_repo_case_1","children":[],"call":[" logger error "," action "," logger "," delete_directory! "," empty_repository? "," logger warn "]}," RedmineGitHosting GitoliteHandlers RepositoryMover move_physical_repo":{"type":"method","name":"move_physical_repo","children":[],"call":[" logger error "," action "," logger ","old_path_exists ! ","new_path_exists ! "," move_physical_repo_case_2 "," move_physical_repo_case_1 "," directory_exists? "," logger info ","old_path == "," directory_exists?  ! "]}," RedmineGitHosting GitoliteHandlers RepositoryMover debug_output":{"type":"method","name":"debug_output","children":[],"call":[" logger info "," new_relative_parent_path "," logger "," old_relative_parent_path "," new_relative_path "," old_relative_path "," new_repo_name "," old_repo_name "]}," RedmineGitHosting GitoliteHandlers RepositoryMover logger":{"type":"method","name":"logger","children":[],"call":["RedmineGitHosting  logger "]}," RedmineGitHosting GitoliteHandlers RepositoryMover new_relative_parent_path":{"type":"method","name":"new_relative_parent_path","children":[],"call":[" new_relative_path gsub "," repo_id + "," repo_id "," new_relative_path "]}," RedmineGitHosting GitoliteHandlers RepositoryMover old_relative_parent_path":{"type":"method","name":"old_relative_parent_path","children":[],"call":[" old_relative_path gsub "," repo_id + "," repo_id "," old_relative_path "]}," RedmineGitHosting GitoliteHandlers RepositoryMover new_relative_path":{"type":"method","name":"new_relative_path","children":[],"call":[" repository gitolite_repository_path "," repository "]}," RedmineGitHosting GitoliteHandlers RepositoryMover old_relative_path":{"type":"method","name":"old_relative_path","children":[],"call":[" repository url "," repository "]}," RedmineGitHosting GitoliteHandlers RepositoryMover new_repo_name":{"type":"method","name":"new_repo_name","children":[],"call":[" repository new_repository_name "," repository "]}," RedmineGitHosting GitoliteHandlers RepositoryMover old_repo_name":{"type":"method","name":"old_repo_name","children":[],"call":[" repository old_repository_name "," repository "]}," RedmineGitHosting GitoliteHandlers RepositoryMover repo_id":{"type":"method","name":"repo_id","children":[],"call":[" repository redmine_name "," repository "]}," RedmineGitHosting GitoliteHandlers RepositoryMover repo_conf":{"type":"method","name":"repo_conf","children":[],"call":[" gitolite_config repos [] "," old_repo_name "," gitolite_config repos "," gitolite_config "]}," RedmineGitHosting GitoliteHandlers RepositoryMover update_gitolite":{"type":"method","name":"update_gitolite","children":[],"call":["RedmineGitHosting GitoliteHandlers RepositoryAdder  new call ","RedmineGitHosting GitoliteHandlers RepositoryAdder  new "," action "," gitolite_config "," repository "," gitolite_config rm_repo "," old_repo_name ","PermissionsBuilder  get_permissions "," repo_conf "]}," RedmineGitHosting GitoliteHandlers RepositoryMover update_repository_fields":{"type":"method","name":"update_repository_fields","children":[],"call":[" repository update_column "," new_relative_path "," repository "]}," RedmineGitHosting GitoliteHandlers RepositoryMover perform_repository_move":{"type":"method","name":"perform_repository_move","children":[],"call":[" old_relative_parent_path "," update_gitolite "," update_repository_fields "," move_physical_repo "," new_relative_parent_path "," new_relative_path "," old_relative_path "," logger info "," new_repo_name "," old_repo_name "," action "," logger "]}," RedmineGitHosting GitoliteHandlers RepositoryMover call":{"type":"method","name":"call","children":[],"call":[" perform_repository_move "," logger error "," old_repo_name "," action "," logger "," repo_conf ! "," repo_conf "]}," RedmineGitHosting GitoliteHandlers RepositoryMover initialize":{"type":"method","name":"initialize","children":[],"call":[]}," RedmineGitHosting GitoliteHandlers RepositoryHandler set_disabled_conf":{"type":"method","name":"set_disabled_conf","children":[],"call":["repo_conf set_git_config "]}," RedmineGitHosting GitoliteHandlers RepositoryHandler set_repository_conf":{"type":"method","name":"set_repository_conf","children":[],"call":["repo_conf set_git_config ","git value ","git key "," repository git_config_keys each "," repository git_config_keys "," repository "," repository git_config_keys any? "]}," RedmineGitHosting GitoliteHandlers RepositoryHandler set_mail_settings":{"type":"method","name":"set_mail_settings","children":[],"call":["repo_conf set_git_config "," repository email_prefix "," repository "," repository sender_address "," repository mailing_list join "," repository mailing_list "," repository git_notification_available? "]}," RedmineGitHosting GitoliteHandlers RepositoryHandler set_smart_http_upload_conf":{"type":"method","name":"set_smart_http_upload_conf","children":[],"call":["repo_conf set_git_config "," repository pushable_via_http? "," repository "]}," RedmineGitHosting GitoliteHandlers RepositoryHandler set_smart_http_download_conf":{"type":"method","name":"set_smart_http_download_conf","children":[],"call":["repo_conf set_git_config "," repository clonable_via_http? "," repository "]}," RedmineGitHosting GitoliteHandlers RepositoryHandler set_active_project_conf":{"type":"method","name":"set_active_project_conf","children":[],"call":[" set_repository_conf "," set_mail_settings "," set_smart_http_upload_conf "," set_smart_http_download_conf "]}," RedmineGitHosting GitoliteHandlers RepositoryHandler set_default_conf":{"type":"method","name":"set_default_conf","children":[],"call":["repo_conf set_git_config "," repository gitolite_hook_key "," repository "," repository identifier "," project identifier to_s "," project identifier "," project "]}," RedmineGitHosting GitoliteHandlers RepositoryHandler build_gitolite_repository":{"type":"method","name":"build_gitolite_repository","children":[],"call":[" Gitolite Config Repo  new "," gitolite_repo_name "]}," RedmineGitHosting GitoliteHandlers RepositoryHandler create_gitolite_config":{"type":"method","name":"create_gitolite_config","children":[],"call":[" set_disabled_conf "," set_active_project_conf "," project active? "," project "," set_default_conf "," build_gitolite_repository "]}," RedmineGitHosting GitoliteHandlers RepositoryHandler set_repository_permissions":{"type":"method","name":"set_repository_permissions","children":[],"call":["repo_conf permissions= ","PermissionsBuilder  new call ","PermissionsBuilder  new "," repository "]}," RedmineGitHosting GitoliteHandlers RepositoryHandler do_update_repository":{"type":"method","name":"do_update_repository","children":[],"call":[" set_repository_permissions "," gitolite_config add_repo "," gitolite_config "," create_gitolite_config "]}," RedmineGitHosting GitoliteHandlers RepositoryHandler recreate_repository_config":{"type":"method","name":"recreate_repository_config","children":[],"call":[" do_update_repository "," gitolite_config rm_repo "," gitolite_repo_name "," gitolite_config "," backup_old_perms "]}," RedmineGitHosting GitoliteHandlers RepositoryHandler update_repository_config":{"type":"method","name":"update_repository_config","children":[],"call":[" recreate_repository_config "]}," RedmineGitHosting GitoliteHandlers RepositoryHandler create_repository_config":{"type":"method","name":"create_repository_config","children":[],"call":[" do_update_repository "]}," RedmineGitHosting GitoliteHandlers RepositoryHandler configuration_exists?":{"type":"method","name":"configuration_exists?","children":[],"call":[" gitolite_repo_conf nil? ! "," gitolite_repo_conf nil? "," gitolite_repo_conf "]}," RedmineGitHosting GitoliteHandlers RepositoryHandler backup_old_perms":{"type":"method","name":"backup_old_perms","children":[],"call":["PermissionsBuilder  get_permissions "," gitolite_repo_conf "]}," RedmineGitHosting GitoliteHandlers RepositoryHandler logger":{"type":"method","name":"logger","children":[],"call":["RedmineGitHosting  logger "]}," RedmineGitHosting GitoliteHandlers RepositoryHandler initialize":{"type":"method","name":"initialize","children":[],"call":["gitolite_config repos [] "," gitolite_repo_name ","gitolite_config repos ","repository gitolite_repository_path ","repository gitolite_repository_name ","repository project "]}," RedmineGitHosting GitoliteHandlers RepositoryDeleter delete_repository":{"type":"method","name":"delete_repository","children":[],"call":[" gitolite_config rm_repo "," repo_name "," gitolite_config "," logger info "," action "," logger "]}," RedmineGitHosting GitoliteHandlers RepositoryDeleter logger":{"type":"method","name":"logger","children":[],"call":["RedmineGitHosting  logger "]}," RedmineGitHosting GitoliteHandlers RepositoryDeleter call":{"type":"method","name":"call","children":[],"call":[" logger warn "," repo_name "," action "," logger "," delete_repository "," repo_conf "]}," RedmineGitHosting GitoliteHandlers RepositoryDeleter initialize":{"type":"method","name":"initialize","children":[],"call":["gitolite_config repos [] "," repo_name ","gitolite_config repos ","repository_data [] "]}," RedmineGitHosting GitoliteHandlers RepositoryAdder add_repository":{"type":"method","name":"add_repository","children":[],"call":[" create_repository_config "," recreate_repository_config "," logger debug "," gitolite_repo_path "," action "," logger "]}," RedmineGitHosting GitoliteHandlers RepositoryAdder call":{"type":"method","name":"call","children":[],"call":[" logger debug "," gitolite_repo_path "," action "," logger "," logger warn "," gitolite_repo_name "," add_repository "," force "," configuration_exists? "," logger info "," configuration_exists? ! "]}," RedmineGitHosting GitoliteHandlers RepositoryAdder initialize":{"type":"method","name":"initialize","children":[],"call":[" opts delete "," opts "]}," RedmineGitHosting GitoliteHandlers PermissionsBuilder merge_permissions":{"type":"method","name":"merge_permissions","children":[],"call":["merge_permissions delete ","merge_permissions [] empty? ","merge_permissions [] ","merge_permissions each ","merge_permissions [] [] ","merge_permissions [] []= ","merge_permissions [] has_key? ! ","merge_permissions [] has_key? ","user_list any? ","branch_settings each ","old_permissions each ","current_permissions each ","merge_permissions []= "]}," RedmineGitHosting GitoliteHandlers PermissionsBuilder set_dummy_keys":{"type":"method","name":"set_dummy_keys","children":[],"call":["@read << "," repository git_daemon_available? "," repository "," repository git_web_available? ","@rewind empty? ","@write empty? ","@read empty? "]}," RedmineGitHosting GitoliteHandlers PermissionsBuilder set_deploy_keys":{"type":"method","name":"set_deploy_keys","children":[],"call":["@read << ","cred gitolite_public_key owner ","cred gitolite_public_key ","cred perm == ","cred perm ","@rewind << "," repository deployment_credentials active each "," repository deployment_credentials active "," repository deployment_credentials "," repository "]}," RedmineGitHosting GitoliteHandlers PermissionsBuilder all_read":{"type":"method","name":"all_read","children":[],"call":[" rewind_users + + "," read_users "," rewind_users + "," write_users "," rewind_users "]}," RedmineGitHosting GitoliteHandlers PermissionsBuilder developer_team":{"type":"method","name":"developer_team","children":[],"call":[" rewind_users + "," write_users "," rewind_users "]}," RedmineGitHosting GitoliteHandlers PermissionsBuilder read_users":{"type":"method","name":"read_users","children":[],"call":["(send\n  (block\n    (send\n      (send nil :users) :select)\n    (args\n      (arg :u))\n    (send\n      (lvar :u) :allowed_to?\n      (sym :view_changesets)\n      (send nil :project))) :map) sort - - "," write_users ","(send\n  (block\n    (send\n      (send nil :users) :select)\n    (args\n      (arg :u))\n    (send\n      (lvar :u) :allowed_to?\n      (sym :view_changesets)\n      (send nil :project))) :map) sort - "," rewind_users ","(send\n  (block\n    (send\n      (send nil :users) :select)\n    (args\n      (arg :u))\n    (send\n      (lvar :u) :allowed_to?\n      (sym :view_changesets)\n      (send nil :project))) :map) sort ","u gitolite_identifier ","(send\n  (send nil :users) :select) map ","u allowed_to? "," project "," users select "," users "]}," RedmineGitHosting GitoliteHandlers PermissionsBuilder write_users":{"type":"method","name":"write_users","children":[],"call":["(send\n  (block\n    (send\n      (send nil :users) :select)\n    (args\n      (arg :u))\n    (send\n      (lvar :u) :allowed_to?\n      (sym :commit_access)\n      (send nil :project))) :map) sort - "," rewind_users ","(send\n  (block\n    (send\n      (send nil :users) :select)\n    (args\n      (arg :u))\n    (send\n      (lvar :u) :allowed_to?\n      (sym :commit_access)\n      (send nil :project))) :map) sort ","u gitolite_identifier ","(send\n  (send nil :users) :select) map ","u allowed_to? "," project "," users select "," users "]}," RedmineGitHosting GitoliteHandlers PermissionsBuilder rewind_users":{"type":"method","name":"rewind_users","children":[],"call":["(send\n  (block\n    (send\n      (send nil :users) :select)\n    (args\n      (arg :u))\n    (send\n      (lvar :u) :allowed_to?\n      (sym :manage_repository)\n      (send nil :project))) :map) sort ","u gitolite_identifier ","(send\n  (send nil :users) :select) map ","u allowed_to? "," project "," users select "," users "]}," RedmineGitHosting GitoliteHandlers PermissionsBuilder build_protected_branch_permissions":{"type":"method","name":"build_protected_branch_permissions","children":[],"call":["@permissions [] []= "," developer_team sort "," developer_team ","@permissions [] "," developer_team empty? ","branch allowed_users ","branch path ","branch allowed_users empty? ","branch permissions "," repository protected_branches each "," repository protected_branches "," repository "]}," RedmineGitHosting GitoliteHandlers PermissionsBuilder build_standard_permissions":{"type":"method","name":"build_standard_permissions","children":[],"call":["@permissions [] []= "," read ","@permissions [] "," read empty? "," write "," write empty? "," rewind "," rewind empty? "]}," RedmineGitHosting GitoliteHandlers PermissionsBuilder build_users_list":{"type":"method","name":"build_users_list","children":[],"call":["@read << "," all_read "," project archived? "," project "," set_dummy_keys "," set_deploy_keys "," read_users "," write_users "," rewind_users "," project active? "," all_read  << "," read_users  << "]}," RedmineGitHosting GitoliteHandlers PermissionsBuilder build_permissions":{"type":"method","name":"build_permissions","children":[],"call":[" build_standard_permissions "," build_protected_branch_permissions "," repository protected_branches_available? "," repository "," build_users_list "]}," RedmineGitHosting GitoliteHandlers PermissionsBuilder call":{"type":"method","name":"call","children":[],"call":[" merge_permissions "," old_permissions "," permissions "," build_permissions "]}," RedmineGitHosting GitoliteHandlers PermissionsBuilder gitolite_identifier_prefix":{"type":"method","name":"gitolite_identifier_prefix","children":[],"call":["RedmineGitHosting Config  gitolite_identifier_prefix "]}," RedmineGitHosting GitoliteHandlers PermissionsBuilder get_permissions":{"type":"method","name":"get_permissions","children":[],"call":["old_permissions [] []= ","old_permissions [] ","new_user_list any? ","new_user_list push ","user include? ! ","user include? "," gitolite_identifier_prefix ","SKIP_USERS  include? "," gitolite_identifier_prefix == ","user_list each ","user_list empty? ","branch_settings each ","old_permissions []= ","current_permissions each ","repo_conf permissions [] ","repo_conf permissions ","repo_conf permissions []  each "]}," RedmineGitHosting GitoliteHandlers PermissionsBuilder initialize":{"type":"method","name":"initialize","children":[],"call":["@permissions []= ","repository project member_principals map compact uniq ","repository project member_principals map compact ","repository project member_principals map ","repository project member_principals ","repository project "]}," RedmineGitHosting GitAccessStatus to_json":{"type":"method","name":"to_json","children":[],"call":["(pair\n  (sym :status)\n  (ivar :@status)) to_json "]}," RedmineGitHosting GitAccessStatus initialize":{"type":"method","name":"initialize","children":[],"call":[]}," RedmineGitHosting GitAccess logger":{"type":"method","name":"logger","children":[],"call":["RedmineGitHosting  logger "]}," RedmineGitHosting GitAccess smart_http_enabled_for_upload?":{"type":"method","name":"smart_http_enabled_for_upload?","children":[],"call":["repository pushable_via_http? "]}," RedmineGitHosting GitAccess smart_http_enabled_for_download?":{"type":"method","name":"smart_http_enabled_for_download?","children":[],"call":["repository only_http_access_enabled? ","is_ssl ! ","repository only_https_access_enabled? ","repository smart_http_enabled? ! ","repository smart_http_enabled? ","ssl ! "]}," RedmineGitHosting GitAccess smart_http_is_disabled!":{"type":"method","name":"smart_http_is_disabled!","children":[],"call":[" build_status_object ","repository gitolite_repository_name "]}," RedmineGitHosting GitAccess build_status_object":{"type":"method","name":"build_status_object","children":[],"call":["GitAccessStatus  new "," logger warn "," logger ","status ! "]}," RedmineGitHosting GitAccess user_upload_access_check":{"type":"method","name":"user_upload_access_check","children":[],"call":[" build_status_object ","user allowed_to? ","repository project ","user allowed_to_commit? "]}," RedmineGitHosting GitAccess user_download_access_check":{"type":"method","name":"user_download_access_check","children":[],"call":[" build_status_object ","user allowed_to? ","repository project ","user allowed_to_clone? "]}," RedmineGitHosting GitAccess upload_access_check":{"type":"method","name":"upload_access_check","children":[],"call":[" raise "," user_upload_access_check ","actor is_a? "," smart_http_is_disabled! "," smart_http_enabled_for_upload? ! "," smart_http_enabled_for_upload? "]}," RedmineGitHosting GitAccess download_access_check":{"type":"method","name":"download_access_check","children":[],"call":[" raise "," user_download_access_check ","actor is_a? "," smart_http_is_disabled! "," smart_http_enabled_for_download? ! "," smart_http_enabled_for_download? "]}," RedmineGitHosting Error GitoliteCommandException initialize":{"type":"method","name":"initialize","children":[],"call":[]}," RedmineGitHosting Config ConsoleLogger method_missing":{"type":"method","name":"method_missing","children":[],"call":[" logger send "," logger "]}," RedmineGitHosting Config ConsoleLogger error":{"type":"method","name":"error","children":[],"call":[" logger error "," logger "," puts "," console "]}," RedmineGitHosting Config ConsoleLogger info":{"type":"method","name":"info","children":[],"call":[" logger info "," logger "," puts "," console "]}," RedmineGitHosting Config ConsoleLogger initialize":{"type":"method","name":"initialize","children":[],"call":["RedmineGitHosting  logger ","opts [] "]}," RedmineGitHosting Config do_reload_config":{"type":"method","name":"do_reload_config","children":[],"call":["logger error ","e message ","logger info ","Setting  check_cache ","Setting  plugin_redmine_git_hosting= ","changes == ","valuehash []= ","valuehash [] ","valuehash [] != ","default_hash each ","(send\n  (const nil :Setting) :plugin_redmine_git_hosting) clone ","Setting  plugin_redmine_git_hosting ","(send\n  (const nil :Setting) :plugin_redmine_git_hosting) clone  []= ","(send\n  (const nil :Setting) :plugin_redmine_git_hosting) clone  [] ","(send\n  (const nil :Setting) :plugin_redmine_git_hosting) clone  [] != "]}," RedmineGitHosting Config reload!":{"type":"method","name":"reload!","children":[],"call":[" do_reload_config ","logger info ","default_hash empty? ","default_hash nil? ","Redmine Plugin  find settings [] ","Redmine Plugin  find settings ","Redmine Plugin  find ","config nil? ! ","config nil? ","ConsoleLogger  new ","ConsoleLogger  new  info ","Redmine Plugin  find settings []  empty? ","Redmine Plugin  find settings []  nil? "]}," RedmineGitHosting Config do_get_setting":{"type":"method","name":"do_get_setting","children":[],"call":["Redmine Plugin  find settings [] [] ","Redmine Plugin  find settings [] ","Redmine Plugin  find settings ","Redmine Plugin  find ","value nil? ","Setting  plugin_redmine_git_hosting [] ","Setting  plugin_redmine_git_hosting ","setting to_sym ","Redmine Plugin  find setting to_sym s [] [] ","Redmine Plugin  find setting to_sym s [] ","Redmine Plugin  find setting to_sym s ","Redmine Plugin  find settings [] []  nil? ","Setting  plugin_redmine_git_hosting []  nil? ","setting to_sym  to_sym "]}," RedmineGitHosting Config return_bool":{"type":"method","name":"return_bool","children":[],"call":["value == "]}," RedmineGitHosting Config reload_from_file!":{"type":"method","name":"reload_from_file!","children":[],"call":[" reload! "]}," RedmineGitHosting Config get_setting":{"type":"method","name":"get_setting","children":[],"call":[" do_get_setting "," return_bool "]}," RedmineGitHosting Config logger":{"type":"method","name":"logger","children":[],"call":["RedmineGitHosting  logger "]}," Config RedmineConfig ClassMethods gitolite_recycle_bin_expiration_time":{"type":"method","name":"gitolite_recycle_bin_expiration_time","children":[],"call":["(send\n  (send\n    (send\n      (const\n        (const nil :RedmineGitHosting) :Config) :get_setting\n      (sym :gitolite_recycle_bin_expiration_time)) :to_f) :*\n  (int 60)) to_i ","RedmineGitHosting Config  get_setting to_f * ","RedmineGitHosting Config  get_setting to_f ","RedmineGitHosting Config  get_setting "]}," Config RedmineConfig ClassMethods delete_git_repositories?":{"type":"method","name":"delete_git_repositories?","children":[],"call":["RedmineGitHosting Config  get_setting "]}," Config RedmineConfig ClassMethods download_revision_enabled?":{"type":"method","name":"download_revision_enabled?","children":[],"call":["RedmineGitHosting Config  get_setting "]}," Config RedmineConfig ClassMethods show_repositories_url?":{"type":"method","name":"show_repositories_url?","children":[],"call":["RedmineGitHosting Config  get_setting "]}," Config RedmineConfig ClassMethods init_repositories_on_create?":{"type":"method","name":"init_repositories_on_create?","children":[],"call":["RedmineGitHosting Config  get_setting "]}," Config RedmineConfig ClassMethods all_projects_use_git?":{"type":"method","name":"all_projects_use_git?","children":[],"call":["RedmineGitHosting Config  get_setting "]}," Config RedmineConfig ClassMethods unique_repo_identifier?":{"type":"method","name":"unique_repo_identifier?","children":[],"call":["RedmineGitHosting Config  get_setting "]}," Config RedmineConfig ClassMethods hierarchical_organisation?":{"type":"method","name":"hierarchical_organisation?","children":[],"call":["RedmineGitHosting Config  get_setting "]}," Config RedmineConfig ClassMethods gitolite_use_sidekiq?":{"type":"method","name":"gitolite_use_sidekiq?","children":[],"call":["RedmineGitHosting Config  get_setting "]}," Config RedmineConfig included":{"type":"method","name":"included","children":[],"call":["receiver send "]}," Config Mirroring ClassMethods format_mirror_key":{"type":"method","name":"format_mirror_key","children":[],"call":["key split [] to_s + + ","key split [] to_s ","key split [] ","key split ","key split [] to_s + ","key chomp strip ","key chomp ","key chomp strip  split [] to_s + + ","key chomp strip  split [] to_s ","key chomp strip  split [] ","key chomp strip  split ","key chomp strip  split [] to_s + ","key chomp strip  chomp strip ","key chomp strip  chomp "]}," Config Mirroring ClassMethods mirroring_script_content":{"type":"method","name":"mirroring_script_content","children":[],"call":["(str \"#!/bin/sh\") join "," gitolite_ssh_private_key_dest_path "]}," Config Mirroring ClassMethods install_mirroring_script":{"type":"method","name":"install_mirroring_script","children":[],"call":["RedmineGitHosting Commands  sudo_install_file "," gitolite_mirroring_script "," mirroring_script_content "," logger error "," logger ","e output "]}," Config Mirroring ClassMethods install_public_key":{"type":"method","name":"install_public_key","children":[],"call":["RedmineGitHosting Commands  sudo_install_file "," gitolite_ssh_public_key_dest_path "," gitolite_ssh_public_key_content "," logger error "," logger ","e output "]}," Config Mirroring ClassMethods install_private_key":{"type":"method","name":"install_private_key","children":[],"call":["RedmineGitHosting Commands  sudo_install_file "," gitolite_ssh_private_key_dest_path "," gitolite_ssh_private_key_content "," logger error "," logger ","e output "]}," Config Mirroring ClassMethods gitolite_ssh_public_key_dest_path":{"type":"method","name":"gitolite_ssh_public_key_dest_path","children":[],"call":["File  join "," gitolite_home_dir "]}," Config Mirroring ClassMethods gitolite_ssh_private_key_dest_path":{"type":"method","name":"gitolite_ssh_private_key_dest_path","children":[],"call":["File  join "," gitolite_home_dir "]}," Config Mirroring ClassMethods gitolite_ssh_private_key_content":{"type":"method","name":"gitolite_ssh_private_key_content","children":[],"call":["File  read "," gitolite_ssh_private_key "]}," Config Mirroring ClassMethods gitolite_ssh_public_key_content":{"type":"method","name":"gitolite_ssh_public_key_content","children":[],"call":["File  read "," gitolite_ssh_public_key "]}," Config Mirroring ClassMethods gitolite_mirroring_script":{"type":"method","name":"gitolite_mirroring_script","children":[],"call":["File  join "," gitolite_home_dir "]}," Config Mirroring ClassMethods mirroring_keys_installed?":{"type":"method","name":"mirroring_keys_installed?","children":[],"call":[" logger error "," logger "," logger info "," install_mirroring_script "," install_public_key "," install_private_key ","@mirroring_keys_installed ! ","opts [] == ","opts [] ","opts has_key? ","RedmineGitHosting MirrorKeysInstaller  new installed? ","RedmineGitHosting MirrorKeysInstaller  new "," gitolite_ssh_private_key "," gitolite_ssh_public_key "," gitolite_home_dir "]}," Config Mirroring ClassMethods mirroring_public_key":{"type":"method","name":"mirroring_public_key","children":[],"call":[" logger error ","e output "," logger "," format_mirror_key "," gitolite_ssh_public_key_content ","RedmineGitHosting MirrorKeysInstaller  mirroring_public_key "," gitolite_ssh_public_key "]}," Config Mirroring included":{"type":"method","name":"included","children":[],"call":["receiver send "]}," Config GitoliteStorage ClassMethods gitolite_recycle_bin_dir":{"type":"method","name":"gitolite_recycle_bin_dir","children":[],"call":["RedmineGitHosting Config  get_setting "]}," Config GitoliteStorage ClassMethods gitolite_redmine_storage_dir":{"type":"method","name":"gitolite_redmine_storage_dir","children":[],"call":["RedmineGitHosting Config  get_setting "]}," Config GitoliteStorage ClassMethods gitolite_global_storage_dir":{"type":"method","name":"gitolite_global_storage_dir","children":[],"call":["RedmineGitHosting Config  get_setting "]}," Config GitoliteStorage included":{"type":"method","name":"included","children":[],"call":["receiver send "]}," Config GitoliteNotifications ClassMethods gitolite_notify_global_exclude":{"type":"method","name":"gitolite_notify_global_exclude","children":[],"call":["RedmineGitHosting Config  get_setting "]}," Config GitoliteNotifications ClassMethods gitolite_notify_global_include":{"type":"method","name":"gitolite_notify_global_include","children":[],"call":["RedmineGitHosting Config  get_setting "]}," Config GitoliteNotifications ClassMethods gitolite_notify_global_sender_address":{"type":"method","name":"gitolite_notify_global_sender_address","children":[],"call":["RedmineGitHosting Config  get_setting "]}," Config GitoliteNotifications ClassMethods gitolite_notify_global_prefix":{"type":"method","name":"gitolite_notify_global_prefix","children":[],"call":["RedmineGitHosting Config  get_setting "]}," Config GitoliteNotifications included":{"type":"method","name":"included","children":[],"call":["receiver send "]}," Config GitoliteInfos ClassMethods gitolite_repository_count":{"type":"method","name":"gitolite_repository_count","children":[],"call":[" logger error "," logger ","RedmineGitHosting Commands  gitolite_repository_count "," logger debug "," gitolite_version != "," gitolite_version "]}," Config GitoliteInfos ClassMethods gitolite_command":{"type":"method","name":"gitolite_command","children":[],"call":[" gitolite_version == "," gitolite_version "]}," Config GitoliteInfos ClassMethods find_version":{"type":"method","name":"find_version","children":[],"call":["line include? ","line =~ ","output split [] ","output split ","output blank? ","output split []  include? ","output split []  =~ "]}," Config GitoliteInfos ClassMethods gitolite_banner":{"type":"method","name":"gitolite_banner","children":[],"call":[" gitolite_infos "," logger debug "," logger "]}," Config GitoliteInfos ClassMethods gitolite_version":{"type":"method","name":"gitolite_version","children":[],"call":[" find_version "," gitolite_infos "," logger debug "," logger "]}," Config GitoliteInfos ClassMethods gitolite_infos":{"type":"method","name":"gitolite_infos","children":[],"call":[" logger error "," logger ","RedmineGitHosting Commands  gitolite_infos "]}," Config GitoliteInfos included":{"type":"method","name":"included","children":[],"call":["receiver send "]}," Config GitoliteHooks ClassMethods update_hook_params!":{"type":"method","name":"update_hook_params!","children":[],"call":["GlobalParams  new installed? ","GlobalParams  new ","RedmineGitHosting GitoliteParams GlobalParams  new installed? ","RedmineGitHosting GitoliteParams GlobalParams  new ","RedmineGitHosting GitoliteParams GlobalParams  new install! "]}," Config GitoliteHooks ClassMethods check_hooks_install!":{"type":"method","name":"check_hooks_install!","children":[],"call":["RedmineGitHosting GitoliteParams MailerParams  new installed? ","RedmineGitHosting GitoliteParams MailerParams  new ","RedmineGitHosting GitoliteParams GlobalParams  new installed? ","RedmineGitHosting GitoliteParams GlobalParams  new ","RedmineGitHosting GitoliteHooks  hooks_installed? "]}," Config GitoliteHooks ClassMethods gitolite_hooks_dir":{"type":"method","name":"gitolite_hooks_dir","children":[],"call":["File  join "," gitolite_home_dir "," gitolite_local_code_dir "," gitolite_version == "," gitolite_version "]}," Config GitoliteHooks ClassMethods gitolite_local_code_dir":{"type":"method","name":"gitolite_local_code_dir","children":[],"call":["RedmineGitHosting Config  get_setting "]}," Config GitoliteHooks ClassMethods gitolite_force_hooks_update?":{"type":"method","name":"gitolite_force_hooks_update?","children":[],"call":["RedmineGitHosting Config  get_setting "]}," Config GitoliteHooks ClassMethods gitolite_hooks_are_asynchronous":{"type":"method","name":"gitolite_hooks_are_asynchronous","children":[],"call":["RedmineGitHosting Config  get_setting "]}," Config GitoliteHooks ClassMethods gitolite_hooks_debug":{"type":"method","name":"gitolite_hooks_debug","children":[],"call":["RedmineGitHosting Config  get_setting "]}," Config GitoliteHooks ClassMethods gitolite_hooks_url":{"type":"method","name":"gitolite_hooks_url","children":[],"call":["(send\n  (const\n    (const nil :RedmineGitHosting) :Config) :get_setting\n  (sym :gitolite_hooks_url)) join ","RedmineGitHosting Config  get_setting "]}," Config GitoliteHooks ClassMethods gitolite_hooks_namespace":{"type":"method","name":"gitolite_hooks_namespace","children":[],"call":[]}," Config GitoliteHooks included":{"type":"method","name":"included","children":[],"call":["receiver send "]}," Config GitoliteConfigTests ClassMethods execute_sudo_test":{"type":"method","name":"execute_sudo_test","children":[],"call":["test match "," block_given? "]}," Config GitoliteConfigTests ClassMethods can_redmine_sudo_to_gitolite_user?":{"type":"method","name":"can_redmine_sudo_to_gitolite_user?","children":[],"call":[" logger error "," logger "," logger info ","RedmineGitHosting Commands  sudo_capture "," execute_sudo_test "," gitolite_user "," redmine_user "," gitolite_user == "]}," Config GitoliteConfigTests ClassMethods can_gitolite_sudo_to_redmine_user?":{"type":"method","name":"can_gitolite_sudo_to_redmine_user?","children":[],"call":[" logger error "," logger "," logger info ","RedmineGitHosting Commands  sudo_capture "," redmine_user "," execute_sudo_test "," gitolite_user "," gitolite_user == "]}," Config GitoliteConfigTests ClassMethods temp_dir_writeable?":{"type":"method","name":"temp_dir_writeable?","children":[],"call":["FileUtils  rm ","FileUtils  touch ","File  directory? ! ","File  directory? "," create_temp_dir ","File  join "," logger debug "," logger ","@temp_dir_writeable ! ","opts [] == ","opts [] ","opts has_key? "]}," Config GitoliteConfigTests ClassMethods create_temp_dir":{"type":"method","name":"create_temp_dir","children":[],"call":[" logger error "," logger ","FileUtils  chmod ","FileUtils  mkdir_p "," logger info ","File  directory? ! ","File  directory? "," gitolite_admin_dir "," gitolite_temp_dir ","@previous_temp_dir_path != "," gitolite_temp_dir  != "]}," Config GitoliteConfigTests included":{"type":"method","name":"included","children":[],"call":["receiver send "]}," Config GitoliteCache ClassMethods gitolite_cache_adapter":{"type":"method","name":"gitolite_cache_adapter","children":[],"call":["RedmineGitHosting Config  get_setting "]}," Config GitoliteCache ClassMethods gitolite_cache_max_size":{"type":"method","name":"gitolite_cache_max_size","children":[],"call":["RedmineGitHosting Config  get_setting to_i * * ","RedmineGitHosting Config  get_setting to_i * ","RedmineGitHosting Config  get_setting to_i ","RedmineGitHosting Config  get_setting "]}," Config GitoliteCache ClassMethods gitolite_cache_max_elements":{"type":"method","name":"gitolite_cache_max_elements","children":[],"call":["RedmineGitHosting Config  get_setting to_i ","RedmineGitHosting Config  get_setting "]}," Config GitoliteCache ClassMethods gitolite_cache_max_time":{"type":"method","name":"gitolite_cache_max_time","children":[],"call":["RedmineGitHosting Config  get_setting to_i ","RedmineGitHosting Config  get_setting "]}," Config GitoliteCache included":{"type":"method","name":"included","children":[],"call":["receiver send "]}," Config GitoliteBase ClassMethods gitolite_log_level":{"type":"method","name":"gitolite_log_level","children":[],"call":["RedmineGitHosting Config  get_setting "]}," Config GitoliteBase ClassMethods gitolite_admin_dir":{"type":"method","name":"gitolite_admin_dir","children":[],"call":["File  join "," gitolite_user "," gitolite_temp_dir "]}," Config GitoliteBase ClassMethods gitolite_url":{"type":"method","name":"gitolite_url","children":[],"call":["(send nil :gitolite_user) join "," gitolite_user "," gitolite_server_host "]}," Config GitoliteBase ClassMethods gitolite_temp_dir":{"type":"method","name":"gitolite_temp_dir","children":[],"call":["RedmineGitHosting Config  get_setting "]}," Config GitoliteBase ClassMethods git_config_email":{"type":"method","name":"git_config_email","children":[],"call":["RedmineGitHosting Config  get_setting "]}," Config GitoliteBase ClassMethods git_config_username":{"type":"method","name":"git_config_username","children":[],"call":["RedmineGitHosting Config  get_setting "]}," Config GitoliteBase ClassMethods gitolite_key_subdir":{"type":"method","name":"gitolite_key_subdir","children":[],"call":[]}," Config GitoliteBase ClassMethods gitolite_identifier_prefix":{"type":"method","name":"gitolite_identifier_prefix","children":[],"call":["RedmineGitHosting Config  get_setting "]}," Config GitoliteBase ClassMethods gitolite_config_file":{"type":"method","name":"gitolite_config_file","children":[],"call":["RedmineGitHosting Config  get_setting ","File  basename "]}," Config GitoliteBase ClassMethods gitolite_ssh_public_key":{"type":"method","name":"gitolite_ssh_public_key","children":[],"call":["RedmineGitHosting Config  get_setting "]}," Config GitoliteBase ClassMethods gitolite_ssh_private_key":{"type":"method","name":"gitolite_ssh_private_key","children":[],"call":["RedmineGitHosting Config  get_setting "]}," Config GitoliteBase ClassMethods gitolite_server_port":{"type":"method","name":"gitolite_server_port","children":[],"call":["RedmineGitHosting Config  get_setting "]}," Config GitoliteBase ClassMethods gitolite_user":{"type":"method","name":"gitolite_user","children":[],"call":["RedmineGitHosting Config  get_setting "]}," Config GitoliteBase ClassMethods gitolite_home_dir":{"type":"method","name":"gitolite_home_dir","children":[],"call":["RedmineGitHosting Commands  sudo_capture chomp strip ","RedmineGitHosting Commands  sudo_capture chomp ","RedmineGitHosting Commands  sudo_capture ","Etc  getpwnam dir ","Etc  getpwnam "," gitolite_user "]}," Config GitoliteBase ClassMethods redmine_user":{"type":"method","name":"redmine_user","children":[],"call":["(xstr\n  (str \"whoami\")) chomp strip ","(xstr\n  (str \"whoami\")) chomp "]}," Config GitoliteBase included":{"type":"method","name":"included","children":[],"call":["receiver send "]}," Config GitoliteAccess ClassMethods my_root_url":{"type":"method","name":"my_root_url","children":[],"call":["File  join [] ","File  join "," redmine_root_url ","server_domain [] "," http_server_domain "," https_server_domain "," https_server_domain != "," http_server_domain  [] "," https_server_domain  [] "," http_ http_server_domain  "," http_ https_server_domain  "," https_ http_server_domain  "," https_ https_server_domain  "," https_ http_server_domain  != "," https_ https_server_domain  != "]}," Config GitoliteAccess ClassMethods redmine_root_url":{"type":"method","name":"redmine_root_url","children":[],"call":["Redmine Utils  relative_url_root "]}," Config GitoliteAccess ClassMethods https_root_url":{"type":"method","name":"https_root_url","children":[],"call":[" my_root_url "]}," Config GitoliteAccess ClassMethods http_root_url":{"type":"method","name":"http_root_url","children":[],"call":[" my_root_url "]}," Config GitoliteAccess ClassMethods http_server_subdir":{"type":"method","name":"http_server_subdir","children":[],"call":["RedmineGitHosting Config  get_setting "]}," Config GitoliteAccess ClassMethods https_server_domain":{"type":"method","name":"https_server_domain","children":[],"call":["RedmineGitHosting Config  get_setting "]}," Config GitoliteAccess ClassMethods http_server_domain":{"type":"method","name":"http_server_domain","children":[],"call":["RedmineGitHosting Config  get_setting "]}," Config GitoliteAccess ClassMethods ssh_server_domain":{"type":"method","name":"ssh_server_domain","children":[],"call":["RedmineGitHosting Config  get_setting "]}," Config GitoliteAccess ClassMethods gitolite_notify_by_default?":{"type":"method","name":"gitolite_notify_by_default?","children":[],"call":["RedmineGitHosting Config  get_setting "]}," Config GitoliteAccess ClassMethods gitolite_daemon_by_default?":{"type":"method","name":"gitolite_daemon_by_default?","children":[],"call":["RedmineGitHosting Config  get_setting "]}," Config GitoliteAccess ClassMethods gitolite_http_by_default?":{"type":"method","name":"gitolite_http_by_default?","children":[],"call":["RedmineGitHosting Config  get_setting "]}," Config GitoliteAccess included":{"type":"method","name":"included","children":[],"call":["receiver send "]}," RedmineGitHosting Commands distant_content":{"type":"method","name":"distant_content","children":[],"call":[" sudo_capture "]}," RedmineGitHosting Commands local_content":{"type":"method","name":"local_content","children":[],"call":["File  read "]}," RedmineGitHosting Commands hash_content":{"type":"method","name":"hash_content","children":[],"call":["Digest MD5  hexdigest "]}," RedmineGitHosting Commands git":{"type":"method","name":"git","children":[],"call":["Repository Xitolite  scm_command "]}," RedmineGitHosting Commands sudo_shell_params":{"type":"method","name":"sudo_shell_params","children":[],"call":["RedmineGitHosting Config  gitolite_user "]}," RedmineGitHosting Commands sudo":{"type":"method","name":"sudo","children":[],"call":[" sudo_shell_params "]}," RedmineGitHosting Commands ssh_shell_params":{"type":"method","name":"ssh_shell_params","children":[],"call":["RedmineGitHosting Config  gitolite_url ","RedmineGitHosting Config  gitolite_ssh_private_key ","RedmineGitHosting Config  gitolite_server_port "]}," RedmineGitHosting Commands ssh":{"type":"method","name":"ssh","children":[],"call":[" ssh_shell_params "]}," RedmineGitHosting Commands gitolite_home_dir":{"type":"method","name":"gitolite_home_dir","children":[],"call":["RedmineGitHosting Config  gitolite_home_dir "]}," RedmineGitHosting Commands gitolite_command":{"type":"method","name":"gitolite_command","children":[],"call":["RedmineGitHosting Config  gitolite_command "]}," RedmineGitHosting Commands logger":{"type":"method","name":"logger","children":[],"call":["RedmineGitHosting  logger "]}," RedmineGitHosting Commands execute":{"type":"method","name":"execute","children":[],"call":["RedmineGitHosting Utils  execute ","args shift "]}," RedmineGitHosting Commands capture":{"type":"method","name":"capture","children":[],"call":["RedmineGitHosting Utils  capture ","args shift "]}," RedmineGitHosting Commands ssh_shell":{"type":"method","name":"ssh_shell","children":[],"call":[" execute "," ssh concat "," ssh "]}," RedmineGitHosting Commands ssh_capture":{"type":"method","name":"ssh_capture","children":[],"call":[" capture "," ssh concat "," ssh "]}," RedmineGitHosting Commands sudo_pipe_data":{"type":"method","name":"sudo_pipe_data","children":[],"call":[" capture "," sudo push "," sudo "]}," RedmineGitHosting Commands sudo_shell":{"type":"method","name":"sudo_shell","children":[],"call":[" execute "," sudo concat "," sudo "]}," RedmineGitHosting Commands sudo_capture":{"type":"method","name":"sudo_capture","children":[],"call":[" capture "," sudo concat "," sudo "]}," Commands Sudo ClassMethods sudo_file_changed?":{"type":"method","name":"sudo_file_changed?","children":[],"call":[" hash_content != "," hash_content "," distant_content "," local_content "]}," Commands Sudo ClassMethods sudo_get_dir_size":{"type":"method","name":"sudo_get_dir_size","children":[],"call":[" sudo_capture split [] "," sudo_capture split "," sudo_capture "]}," Commands Sudo ClassMethods sudo_move":{"type":"method","name":"sudo_move","children":[],"call":[" sudo_shell "]}," Commands Sudo ClassMethods sudo_rm_rf":{"type":"method","name":"sudo_rm_rf","children":[],"call":[" sudo_rmdir "]}," Commands Sudo ClassMethods sudo_rmdir":{"type":"method","name":"sudo_rmdir","children":[],"call":[" sudo_shell "]}," Commands Sudo ClassMethods sudo_chmod":{"type":"method","name":"sudo_chmod","children":[],"call":[" sudo_shell "]}," Commands Sudo ClassMethods sudo_mkdir_p":{"type":"method","name":"sudo_mkdir_p","children":[],"call":[" sudo_mkdir "]}," Commands Sudo ClassMethods sudo_mkdir":{"type":"method","name":"sudo_mkdir","children":[],"call":[" sudo_shell "]}," Commands Sudo ClassMethods sudo_test":{"type":"method","name":"sudo_test","children":[],"call":[" logger debug ","e message "," logger ","code == "," sudo_shell "]}," Commands Sudo ClassMethods sudo_dir_exists?":{"type":"method","name":"sudo_dir_exists?","children":[],"call":[" sudo_test "]}," Commands Sudo ClassMethods sudo_file_exists?":{"type":"method","name":"sudo_file_exists?","children":[],"call":[" sudo_test "]}," Commands Sudo ClassMethods sudo_install_file":{"type":"method","name":"sudo_install_file","children":[],"call":[" logger error ","e output "," logger "," sudo_chmod "," sudo_pipe_data ","(str \"cat\") join ","\n + + ","\n + ","content to_s ","> + "]}," Commands Sudo included":{"type":"method","name":"included","children":[],"call":["receiver send "]}," Commands Gitolite ClassMethods sudo_git_objects_count":{"type":"method","name":"sudo_git_objects_count","children":[],"call":[" logger error ","e output "," logger "," sudo_capture "]}," Commands Gitolite ClassMethods sudo_repository_empty?":{"type":"method","name":"sudo_repository_empty?","children":[],"call":["count to_i == ","count to_i "," sudo_git_objects_count ","File  join "," gitolite_home_dir "," sudo_git_objects_count  to_i == "," sudo_git_objects_count  to_i "," sudo_git_objects_ sudo_git_objects_count  "]}," Commands Gitolite ClassMethods gitolite_repository_count":{"type":"method","name":"gitolite_repository_count","children":[],"call":[" sudo_capture split length "," sudo_capture split "," sudo_capture "]}," Commands Gitolite ClassMethods sudo_update_gitolite!":{"type":"method","name":"sudo_update_gitolite!","children":[],"call":[" logger error ","e output "," logger "," sudo_shell "," gitolite_command "," logger info "," gitolite_command join "," gitolite_command nil? "]}," Commands Gitolite ClassMethods gitolite_infos":{"type":"method","name":"gitolite_infos","children":[],"call":[" ssh_capture "]}," Commands Gitolite included":{"type":"method","name":"included","children":[],"call":["receiver send "]}," Commands Git ClassMethods git_config_as_hash":{"type":"method","name":"git_config_as_hash","children":[],"call":["value_hash []= ","global_key split [] ","global_key split ","value_pair split [] ","value_pair split ","params each ","value_pair start_with? ! ","value_pair start_with? ","value_pair empty? ","value_pair split [] _hash []= ","global_global_key split []  split [] ","value_pair split []  split [] ","global_global_key split []  split ","value_pair split []  split ","value_pair split [] _pair split [] ","value_pair split [] _pair split ","value_pair split [] _pair start_with? ! ","value_pair split [] _pair start_with? ","value_pair split [] _pair empty? "]}," Commands Git ClassMethods prefix_key":{"type":"method","name":"prefix_key","children":[],"call":["(lvar :namespace) join "]}," Commands Git ClassMethods git_args_for_repo":{"type":"method","name":"git_args_for_repo","children":[],"call":[]}," Commands Git ClassMethods git_version":{"type":"method","name":"git_version","children":[],"call":[" logger error ","e output "," logger "," sudo_git "]}," Commands Git ClassMethods sudo_get_git_global_params":{"type":"method","name":"sudo_get_git_global_params","children":[],"call":[" git_config_as_hash "," logger error "," logger "," sudo_git split "," sudo_git "]}," Commands Git ClassMethods sudo_set_git_global_param":{"type":"method","name":"sudo_set_git_global_param","children":[],"call":[" logger error ","e output "," logger "," sudo_git "," logger info "," sudo_unset_git_global_param ","value == "," prefix_key "," prefix_ prefix_key  "]}," Commands Git ClassMethods sudo_unset_git_global_param":{"type":"method","name":"sudo_unset_git_global_param","children":[],"call":[" logger error ","e output "," logger ","code == "," sudo_shell "," logger info "]}," Commands Git ClassMethods sudo_git_args_for_repo":{"type":"method","name":"sudo_git_args_for_repo","children":[],"call":[" sudo concat concat "," git_args_for_repo "," sudo concat "," git "," sudo "]}," Commands Git ClassMethods sudo_git_cmd":{"type":"method","name":"sudo_git_cmd","children":[],"call":[" sudo concat "," git "," sudo "]}," Commands Git ClassMethods sudo_git":{"type":"method","name":"sudo_git","children":[],"call":[" capture "," sudo_git_cmd concat "," sudo_git_cmd "," sudo_git_ sudo_git_cmd concat  concat "," sudo_git_ sudo_git_cmd concat  "]}," Commands Git included":{"type":"method","name":"included","children":[],"call":["receiver send "]}," RedmineGitHosting Cache compose_key":{"type":"method","name":"compose_key","children":[],"call":["key1 + + ","key1 + ","key2 blank? ! ","key2 blank? "]}," RedmineGitHosting Cache adapter":{"type":"method","name":"adapter","children":[],"call":["Cache Adapter  factory ","RedmineGitHosting Config  gitolite_cache_adapter "]}," RedmineGitHosting Cache clear_cache_for_repository":{"type":"method","name":"clear_cache_for_repository","children":[],"call":[" adapter clear_cache_for_repository "," adapter "]}," RedmineGitHosting Cache clear_obsolete_cache_entries":{"type":"method","name":"clear_obsolete_cache_entries","children":[],"call":[" adapter clear_obsolete_cache_entries "," adapter "]}," RedmineGitHosting Cache flush_cache!":{"type":"method","name":"flush_cache!","children":[],"call":[" adapter flush_cache! "," adapter "]}," RedmineGitHosting Cache get_cache":{"type":"method","name":"get_cache","children":[],"call":["StringIO  new ","cached nil? "," adapter get_cache "," adapter "," compose_key "," adapter get_cache  nil? "]}," RedmineGitHosting Cache set_cache":{"type":"method","name":"set_cache","children":[],"call":[" adapter apply_cache_limit "," adapter "," adapter set_cache "," compose_key ","out_value strip empty? ","out_value strip "]}," RedmineGitHosting Cache max_cache_size":{"type":"method","name":"max_cache_size","children":[],"call":["RedmineGitHosting Config  gitolite_cache_max_size "]}," Cache Redis redis_options":{"type":"method","name":"redis_options","children":[],"call":[]}," Cache Redis client":{"type":"method","name":"client","children":[],"call":[" Redis  new "," redis_options "]}," Cache Redis hash_key":{"type":"method","name":"hash_key","children":[],"call":["git_hosting_cache_ + ","Digest SHA256  hexdigest ","Digest SHA256  hexdigest [] "," key_prefix "]}," Cache Redis create_or_update_repo_references":{"type":"method","name":"create_or_update_repo_references","children":[],"call":[" client append ",", + "," client "," client set "," max_cache_time ","repo_references nil? "," client get "," hash_key "," client get  nil? "]}," Cache Redis apply_cache_limit":{"type":"method","name":"apply_cache_limit","children":[],"call":[]}," Cache Redis clear_cache_for_repository":{"type":"method","name":"clear_cache_for_repository","children":[],"call":[" client set "," max_cache_time "," client "," logger info ","repo_references size "," logger "," client del ","repo_references map ","r empty? ! ","r empty? ","repo_references split select ","repo_references split ","repo_references nil? "," client get "," hash_key "," client scan_each "," key_prefix "," client get  size "," client get  map "," client get  split select "," client get  split "," client get  nil? "]}," Cache Redis clear_obsolete_cache_entries":{"type":"method","name":"clear_obsolete_cache_entries","children":[],"call":[]}," Cache Redis flush_cache!":{"type":"method","name":"flush_cache!","children":[],"call":[" client del "," client "," client scan_each "," logger info "," logger "]}," Cache Redis get_cache":{"type":"method","name":"get_cache","children":[],"call":[" client get "," hash_key "," client "," logger debug "," logger "]}," Cache Redis set_cache":{"type":"method","name":"set_cache","children":[],"call":[" logger error ","e message "," logger "," client set "," max_cache_time "," client "," create_or_update_repo_references "," hash_key "," logger debug "," max_cache_time < "," max_ max_cache_time  "," max_ max_cache_time  < "]}," Cache Memcached memcached_options":{"type":"method","name":"memcached_options","children":[],"call":[" max_cache_size "," max_cache_time "]}," Cache Memcached client":{"type":"method","name":"client","children":[],"call":["Dalli Client  new "," memcached_options "]}," Cache Memcached hash_key":{"type":"method","name":"hash_key","children":[],"call":["Digest SHA256  hexdigest "]}," Cache Memcached create_or_update_repo_references":{"type":"method","name":"create_or_update_repo_references","children":[],"call":[" client append ",", + "," client "," client set "," max_cache_time ","repo_references nil? "," client get "," hash_key "," client get  nil? "]}," Cache Memcached apply_cache_limit":{"type":"method","name":"apply_cache_limit","children":[],"call":[]}," Cache Memcached clear_cache_for_repository":{"type":"method","name":"clear_cache_for_repository","children":[],"call":[" client set "," max_cache_time "," client "," logger info ","repo_references size "," logger "," client delete ","repo_references map ","r empty? ! ","r empty? ","repo_references split select ","repo_references split ","repo_references nil? "," client get "," hash_key "," client get  size "," client get  map "," client get  split select "," client get  split "," client get  nil? "]}," Cache Memcached clear_obsolete_cache_entries":{"type":"method","name":"clear_obsolete_cache_entries","children":[],"call":[]}," Cache Memcached flush_cache!":{"type":"method","name":"flush_cache!","children":[],"call":[" client flush "," client "]}," Cache Memcached get_cache":{"type":"method","name":"get_cache","children":[],"call":[" client get "," hash_key "," client "]}," Cache Memcached set_cache":{"type":"method","name":"set_cache","children":[],"call":[" logger error ","e message "," logger "," client set "," client "," create_or_update_repo_references "," hash_key "," logger debug "]}," Cache Database apply_cache_limit":{"type":"method","name":"apply_cache_limit","children":[],"call":["GitCache  find destroy ","GitCache  find ","GitCache  count > "," max_cache_elements ","GitCache  count "," max_cache_elements >= "]}," Cache Database clear_cache_for_repository":{"type":"method","name":"clear_cache_for_repository","children":[],"call":[" logger info "," logger ","GitCache  delete_all "]}," Cache Database clear_obsolete_cache_entries":{"type":"method","name":"clear_obsolete_cache_entries","children":[],"call":[" logger info "," logger ","GitCache  delete_all "," time_limit "]}," Cache Database flush_cache!":{"type":"method","name":"flush_cache!","children":[],"call":["ActiveRecord Base  connection execute ","ActiveRecord Base  connection "]}," Cache Database get_cache":{"type":"method","name":"get_cache","children":[],"call":["cached destroy ","cached command_output ","cached touch ","cached command_output nil? "," valid_cache_entry? ","cached created_at ","GitCache  find_by_command ","GitCache  find_by_repo_identifier_and_command ","GitCache  find_by_command  destroy ","GitCache  find_by_repo_identifier_and_command  destroy ","cached command_cached command_output put ","GitCache  find_by_command  command_output ","GitCache  find_by_repo_identifier_and_command  command_output ","GitCache  find_by_command  touch ","GitCache  find_by_repo_identifier_and_command  touch ","cached command_cached command_output put nil? ","GitCache  find_by_command  command_output nil? ","GitCache  find_by_repo_identifier_and_command  command_output nil? ","GitCache  find_by_command  created_at ","GitCache  find_by_repo_identifier_and_command  created_at "]}," Cache Database set_cache":{"type":"method","name":"set_cache","children":[],"call":[" logger error ","e message "," logger ","GitCache  create "," logger debug "]}," Cache Adapter factory":{"type":"method","name":"factory","children":[],"call":["Redis  new ","Memcached  new ","Database  new ","RedmineGitHosting Config  gitolite_cache_adapter "]}," Cache AbstractCache valid_cache_entry?":{"type":"method","name":"valid_cache_entry?","children":[],"call":[" max_cache_time < "," max_cache_time ","expired ! ","current_time to_i - > ","current_time to_i - ","cached_entry_date to_i ","current_time to_i ","Time  now ","Time  now utc ","ActiveRecord Base  default_timezone == ","ActiveRecord Base  default_timezone ","Time  now  to_i - > ","Time  now utc  to_i - > ","Time  now  to_i - ","Time  now utc  to_i - ","Time  now  to_i ","Time  now utc  to_i "]}," Cache AbstractCache time_limit":{"type":"method","name":"time_limit","children":[],"call":["current_time - "," max_cache_time ","Time  now ","Time  now utc ","ActiveRecord Base  default_timezone == ","ActiveRecord Base  default_timezone "," max_cache_time < ","Time  now  - ","Time  now utc  - "]}," Cache AbstractCache logger":{"type":"method","name":"logger","children":[],"call":["RedmineGitHosting  logger "]}," Cache AbstractCache apply_cache_limit":{"type":"method","name":"apply_cache_limit","children":[],"call":[" raise "]}," Cache AbstractCache clear_cache_for_repository":{"type":"method","name":"clear_cache_for_repository","children":[],"call":[" raise "]}," Cache AbstractCache clear_obsolete_cache_entries":{"type":"method","name":"clear_obsolete_cache_entries","children":[],"call":[" raise "]}," Cache AbstractCache flush_cache!":{"type":"method","name":"flush_cache!","children":[],"call":[" raise "]}," Cache AbstractCache get_cache":{"type":"method","name":"get_cache","children":[],"call":[" raise "]}," Cache AbstractCache set_cache":{"type":"method","name":"set_cache","children":[],"call":[" raise "]}," Cache AbstractCache initialize":{"type":"method","name":"initialize","children":[],"call":["RedmineGitHosting Config  gitolite_cache_max_elements ","RedmineGitHosting Config  gitolite_cache_max_time ","RedmineGitHosting Config  gitolite_cache_max_size "]}," RedmineGitHosting Auth find":{"type":"method","name":"find","children":[],"call":["user check_password? ","user nil? ","User  find_by_login ","User  find_by ","User  find_by_login  check_password? ","User  find_by  check_password? ","User  find_by_login  nil? ","User  find_by  nil? "]}," Grack Server logger":{"type":"method","name":"logger","children":[],"call":["RedmineGitHosting  logger "]}," Grack Server smart_http_args":{"type":"method","name":"smart_http_args","children":[],"call":["@env [] "," repository_object gitolite_repository_name "," repository_object ","RedmineGitHosting Config  gitolite_lib_dir_path ","RedmineGitHosting Config  gitolite_lib_dir ","RedmineGitHosting Config  gitolite_bin_dir "]}," Grack Server git_command_with_chdir":{"type":"method","name":"git_command_with_chdir","children":[],"call":["RedmineGitHosting Commands  sudo_git_args_for_repo "," smart_http_args "]}," Grack Server git_command_without_chdir":{"type":"method","name":"git_command_without_chdir","children":[],"call":["RedmineGitHosting Commands  sudo_git_cmd "," smart_http_args "]}," Grack Server command_require_chdir?":{"type":"method","name":"command_require_chdir?","children":[],"call":["cmd == "]}," Grack Server git_command_with_sudo":{"type":"method","name":"git_command_with_sudo","children":[],"call":[" git_command_without_chdir concat "," git_command_without_chdir "," git_command_with_chdir concat "," git_command_with_chdir "," command_require_chdir? ","params last "]}," Grack Server directory_exists?":{"type":"method","name":"directory_exists?","children":[],"call":["RedmineGitHosting Commands  sudo_dir_exists? "]}," Grack Server gitolite_path":{"type":"method","name":"gitolite_path","children":[],"call":["File  join ","RedmineGitHosting Config  gitolite_redmine_storage_dir ","RedmineGitHosting Config  gitolite_global_storage_dir "]}," Grack Server popen_env":{"type":"method","name":"popen_env","children":[],"call":["ENV  [] "]}," Grack Server popen_options":{"type":"method","name":"popen_options","children":[],"call":[]}," Grack Server capture":{"type":"method","name":"capture","children":[],"call":[" logger error "," logger ","RedmineGitHosting Utils  capture ","command shift ","RedmineGitHosting Utils Exec  capture "]}," Grack Server git_command":{"type":"method","name":"git_command","children":[],"call":[" git_command_with_sudo "]}," Grack Server get_git_dir":{"type":"method","name":"get_git_dir","children":[],"call":[" directory_exists? ! "," directory_exists? "," gitolite_path "," gitolite_ gitolite_path  "]}," Grack Auth logger":{"type":"method","name":"logger","children":[],"call":["RedmineGitHosting  logger "]}," Grack Auth render_not_found":{"type":"method","name":"render_not_found","children":[],"call":[]}," Grack Auth x_forwarded_ssl_headers?":{"type":"method","name":"x_forwarded_ssl_headers?","children":[],"call":["@request env [] to_s == ","@request env [] to_s ","@request env [] ","@request env "]}," Grack Auth x_forwarded_proto_headers?":{"type":"method","name":"x_forwarded_proto_headers?","children":[],"call":["@request env [] to_s == ","@request env [] to_s ","@request env [] ","@request env "]}," Grack Auth https_headers?":{"type":"method","name":"https_headers?","children":[],"call":["@request env [] to_s == ","@request env [] to_s ","@request env [] ","@request env "]}," Grack Auth is_ssl?":{"type":"method","name":"is_ssl?","children":[],"call":[" x_forwarded_ssl_headers? "," x_forwarded_proto_headers? "," https_headers? ","@request ssl? "]}," Grack Auth repository_by_path":{"type":"method","name":"repository_by_path","children":[],"call":["Repository Xitolite  find_by_path ","m first ","(str \"([^/]+/)*?[^/]+\\\\.git\") match to_a ","(str \"([^/]+/)*?[^/]+\\\\.git\") match ","(str \"([^/]+/)*?[^/]+\\.git\") match to_a  first ","(str \"([^/]+/)*?[^/]+\\\\.git\") (str \"([^/]+/)*?[^/]+\\.git\") match to_a atch to_a ","(str \"([^/]+/)*?[^/]+\\\\.git\") (str \"([^/]+/)*?[^/]+\\.git\") match to_a atch "]}," Grack Auth repository":{"type":"method","name":"repository","children":[],"call":[" repository_by_path ","@request path_info "]}," Grack Auth git_cmd":{"type":"method","name":"git_cmd","children":[],"call":["File  basename ","@request path ","@request post? ","@request params [] ","@request params ","@request get? "]}," Grack Auth authorized_request?":{"type":"method","name":"authorized_request?","children":[],"call":["RedmineGitHosting GitAccess  new upload_access_check allowed? ","RedmineGitHosting GitAccess  new upload_access_check "," repository "," user ","RedmineGitHosting GitAccess  new "," logger error "," logger "," is_ssl? ! "," is_ssl? "," repository public_repo? "," repository public_project? ","RedmineGitHosting GitAccess  new download_access_check allowed? ","RedmineGitHosting GitAccess  new download_access_check "," git_cmd "]}," Grack Auth authenticate_user":{"type":"method","name":"authenticate_user","children":[],"call":["auth find ","RedmineGitHosting Auth  new ","RedmineGitHosting Auth  new  find "]}," Grack Auth auth!":{"type":"method","name":"auth!","children":[],"call":[" unauthorized ","@app call "," env "," authorized_request? ","@env []= ","@auth username "," authenticate_user ","@auth credentials "," bad_request ","@auth basic? ","@auth provided? ","@user gitolite_identifier "," authenticate_user  gitolite_identifier "]}," Grack Auth call":{"type":"method","name":"call","children":[],"call":[" render_not_found "," auth! "," repository ","Request  new ","Rack Request  new "]}," RedmineGitHosting Patches UserPatch InstanceMethods git_allowed_to?":{"type":"method","name":"git_allowed_to?","children":[],"call":[" allowed_to? ","repository project ","repository project active? "]}," RedmineGitHosting Patches UserPatch InstanceMethods allowed_to_download?":{"type":"method","name":"allowed_to_download?","children":[],"call":[" git_allowed_to? "]}," RedmineGitHosting Patches UserPatch InstanceMethods allowed_to_ssh?":{"type":"method","name":"allowed_to_ssh?","children":[],"call":[" allowed_to? "," anonymous? ! "," anonymous? "]}," RedmineGitHosting Patches UserPatch InstanceMethods allowed_to_clone?":{"type":"method","name":"allowed_to_clone?","children":[],"call":[" allowed_to? ","repository project "]}," RedmineGitHosting Patches UserPatch InstanceMethods allowed_to_commit?":{"type":"method","name":"allowed_to_commit?","children":[],"call":[" allowed_to? ","repository project "]}," RedmineGitHosting Patches RepositoriesControllerPatch InstanceMethods find_project_repository_with_git_hosting":{"type":"method","name":"find_project_repository_with_git_hosting","children":[],"call":[" render ","@project gitolite_repos "," render_404 "," raise ","@repository branches blank? ","@repository branches ","@rev_to to_s match ","@rev_to to_s ","@rev to_s match ","@rev to_s "," params [] "," params "," params [] to_s strip "," params [] to_s ","@repository default_branch "," params [] blank? "," params [] join "," params [] is_a? ","@project repository ","@project repositories find_by_identifier_param ","@project repositories "," params [] present? ","Project  find ","@repository branches empty? ","Project  find  gitolite_repos ","@project repository  branches blank? ","@project repositories find_by_identifier_param  branches blank? ","@project repository  branches ","@project repositories find_by_identifier_param  branches "," params []  to_s match "," params [] to_s strip _to to_s match ","@repository default_branch _to to_s match "," params []  to_s "," params [] to_s strip _to to_s ","@repository default_branch _to to_s "," params [] to_s strip  to_s match ","@repository default_branch  to_s match "," params [] to_s strip  to_s ","@repository default_branch  to_s ","@project repository  default_branch ","@project repositories find_by_identifier_param  default_branch ","Project  find  repository ","Project  find  repositories find_by_identifier_param ","Project  find  repositories ","@project repository  branches empty? ","@project repositories find_by_identifier_param  branches empty? "]}," Config GitoliteBase ClassMethods gitolite_config_dir":{"type":"method","name":"gitolite_config_dir","children":[],"call":["File  join ","dirs [] != ","dirs [] ","File  dirname split ","File  dirname "," gitolite_config_file ","File  dirname split  [] != ","File  dirname split  [] "]}," Redmine Scm Adapters XitoliteAdapter git_cache_enabled?":{"type":"method","name":"git_cache_enabled?","children":[],"call":["RedmineGitHosting Config  gitolite_cache_max_time > ","RedmineGitHosting Config  gitolite_cache_max_time ","RedmineGitHosting Config  gitolite_cache_max_time != "]}," Redmine Scm Adapters XitoliteAdapter git_args":{"type":"method","name":"git_args","children":[],"call":[" class client_version_above? "," class "]}," Redmine Scm Adapters XitoliteAdapter repo_path":{"type":"method","name":"repo_path","children":[],"call":[" url "," root_url "]}," Redmine Scm Adapters XitoliteAdapter git_push_args":{"type":"method","name":"git_push_args","children":[],"call":["RedmineGitHosting Config  gitolite_mirroring_script "]}," Redmine Scm Adapters XitoliteAdapter git_mirror_cmd":{"type":"method","name":"git_mirror_cmd","children":[],"call":["RedmineGitHosting Commands  sudo_git_args_for_repo "," git_push_args "," repo_path "]}," Redmine Scm Adapters XitoliteAdapter base_args":{"type":"method","name":"base_args","children":[],"call":["RedmineGitHosting Commands  sudo_git_args_for_repo concat "," git_args ","RedmineGitHosting Commands  sudo_git_args_for_repo "," repo_path "]}," Redmine Scm Adapters XitoliteAdapter git_cache_id":{"type":"method","name":"git_cache_id","children":[],"call":[" logger warn "," repo_path "," logger ","@git_cache_id nil? ","Repository Xitolite  repo_path_to_git_cache_id "," logger debug ","@git_cache_id nil? ! "]}," Redmine Scm Adapters XitoliteAdapter prepare_command":{"type":"method","name":"prepare_command","children":[],"call":["(send\n  (lvar :full_args) :map) join "," shell_quote ","e to_s ","full_args map "," base_args ","(send\n  (lvar : base_args ) :map) join "," base_args  map "]}," Redmine Scm Adapters XitoliteAdapter git_cmd":{"type":"method","name":"git_cmd","children":[],"call":["Redmine Scm Adapters AbstractAdapter  shellout ","RedmineGitHosting ShellRedirector  execute "," git_cache_id ","bypass_cache ! "," git_cache_enabled? "," git_cache_id nil? ! "," git_cache_id nil? "," prepare_command ","options delete "]}," Redmine Scm Adapters XitoliteAdapter logger":{"type":"method","name":"logger","children":[],"call":["RedmineGitHosting  logger "]}," Redmine Scm Adapters XitoliteAdapter Revision format_identifier":{"type":"method","name":"format_identifier","children":[],"call":[" identifier [] "," identifier "]}," Redmine Scm Adapters XitoliteAdapter mirror_push":{"type":"method","name":"mirror_push","children":[],"call":["RedmineGitHosting Utils  capture ","cmd_args shift "," git_mirror_cmd concat compact "," git_mirror_cmd concat "," git_mirror_cmd ","RedmineGitHosting Utils Exec  capture ","cmd_args shift _args shift "," git_mirror_cmd concat compact  shift "," git_mirror_cmd_args shift  concat compact "," git_mirror_cmd_args shift  concat "," git_mirror_cmd_args shift  "]}," Redmine Scm Adapters XitoliteAdapter archive":{"type":"method","name":"archive","children":[],"call":["io read ","io binmode "," git_cmd ","cmd_args << "," logger error ","e message "," logger "]}," Redmine Scm Adapters XitoliteAdapter rev_parse":{"type":"method","name":"rev_parse","children":[],"call":["(send\n  (send\n    (lvar :io) :readlines) :map) first ","t strip ","io readlines map ","io readlines "," git_cmd "," logger error ","e message "," logger ","io readlines map first "]}," Redmine Scm Adapters XitoliteAdapter rev_list":{"type":"method","name":"rev_list","children":[],"call":["t strip ","io readlines map ","io readlines "," git_cmd "," logger error ","e message "," logger "]}," Redmine Scm Adapters XitoliteAdapter changed_files":{"type":"method","name":"changed_files","children":[],"call":["changed_files << ","io each_line "," git_cmd ","cmd_args << << "," scm_iconv ","cmd_args << ","path empty? ","cmd_args << << << << << << ","cmd_args << << << << << ","cmd_args << << << << ","cmd_args << << << "]}," Redmine Scm Adapters XitoliteAdapter cat":{"type":"method","name":"cat","children":[],"call":["io read ","io binmode "," git_cmd ","cmd_args << "," scm_iconv ","identifier nil? "," logger error ","e message "," logger "]}," Redmine Scm Adapters XitoliteAdapter annotate":{"type":"method","name":"annotate","children":[],"call":["blame add_line ","Revision  new ","authors_by_commit [] ","line =~ ","authors_by_commit []= ","1 strip ","content split each ","content split ","content is_binary_data? ","io read ","io binmode "," git_cmd ","Annotate  new ","cmd_args << << << << "," scm_iconv ","cmd_args << << << ","cmd_args << << ","cmd_args << ","identifier blank? "," logger error ","e message "," logger "," binary_data? ","Regexp  last_match ","Regexp  last_match strip ","Annotate  new  add_line ","io read  split each ","io read  split ","io read  is_binary_data? ","Regexp  last_match  blank? "]}," Redmine Scm Adapters XitoliteAdapter diff":{"type":"method","name":"diff","children":[],"call":["diff << ","io each_line "," git_cmd ","cmd_args << << "," scm_iconv ","cmd_args << ","path empty? ","cmd_args << << << ","cmd_args << << << << "," logger error ","e message "," logger "," class client_version_above? "," class "]}," Redmine Scm Adapters XitoliteAdapter revisions":{"type":"method","name":"revisions","children":[],"call":[" raise "," block_given? "," logger error "," logger ","e message ","revs << ","Revision  new ","changeset [] ","Time  parse ","changeset [] << ","line [] ","parsing_descr == ","line chomp to_s == ","line chomp to_s ","line chomp ","files << "," scm_iconv ","line =~ ","changeset []= ","key == ","parents_str strip split ","parents_str strip ","parents_str == ","parents_str nil? ","io each_line ","io close_write ","io puts ","revisions join ","io binmode "," git_cmd ","options [] map ","options [] ","options [] blank? ","revisions [] << ","revisions [] ","revisions << ","cmd_args << << ","cmd_args << ","path empty? ! ","path empty? ","options [] to_i ","Revisions  new ","Regexp  last_match ","(int 1) include? "," +@ ","parsing_descr zero? ","options [] present? ","rev_line << ","identifier_to to_s ","path present? ","options [] to_i to_s "," class client_version_above? "," class ","Revisions  new  << ","Time   scm_iconv arse "," scm_iconv arsing_descr == ","line chom scm_iconv  to_s == ","line chom scm_iconv  to_s ","line chom scm_iconv  ","Regexp  last_match  == "," scm_iconv arents_str stri scm_iconv  s scm_iconv lit ","Regexp  last_match  strip split "," scm_iconv arents_str stri scm_iconv  ","Regexp  last_match  strip "," scm_iconv arents_str == "," scm_iconv arents_str nil? ","Regexp  last_match  nil? ","io  scm_iconv uts ","Revision  new s join ","o scm_iconv tions [] ma scm_iconv  ","o scm_iconv tions [] ","o scm_iconv tions [] blank? ","Revision  new s [] << ","Revision  new s [] ","Revision  new s << "," scm_iconv ath em scm_iconv ty? ! "," scm_iconv ath em scm_iconv ty? ","o scm_iconv tions [] to_i ","Regex scm_iconv   last_match "," scm_iconv arsing_descr zero? ","o scm_iconv tions []  scm_iconv resent? "," +@  << "," scm_iconv ath  scm_iconv resent? ","o scm_iconv tions [] to_i to_s "]}," Redmine Scm Adapters XitoliteAdapter lastrev":{"type":"method","name":"lastrev","children":[],"call":[" logger error "," logger ","Revision  new ","Time  parse ","lines [] match [] ","lines [] match ","lines [] ","lines [] split [] ","lines [] split ","io readlines "," git_cmd ","cmd_args << << ","cmd_args << ","path empty? ","path nil? ","e message "," class client_version_above? "," class ","io readlines  [] match [] ","io readlines  [] match ","io readlines  [] ","io readlines  [] split [] ","io readlines  [] split ","io readio readlines  "]}," Redmine Scm Adapters XitoliteAdapter entries":{"type":"method","name":"entries","children":[],"call":["entries sort_by_name ","entries << ","Entry  new ","Revision  new "," lastrev ","options [] ","type == ","entry name == ","entry name ","entries detect "," scm_iconv ","p empty? ","name force_encoding ","name respond_to? ","e =~ ","line chomp to_s ","line chomp ","io each_line "," git_cmd ","cmd_args << ","identifier nil? ","Entries  new "," logger error ","e message "," logger ","Regexp  last_match ","e scm_iconv tries sort_by_ scm_iconv ame ","line chomp to_s ntriline chomp to_s s sort_by_namline chomp to_s  ","Entries  new  sort_by_name ","entries sort_by_Regexp  last_match  ","e scm_iconv tries << ","line chomp to_s ntriline chomp to_s s << ","Entries  new  << ","E scm_iconv try   scm_iconv ew ","Entry  nline chomp to_s w ","Revisio scm_iconv    scm_iconv ew ","Rline chomp to_s vision  nline chomp to_s w "," lastrline chomp to_s v ","optio scm_iconv s [] ","o scm_iconv tions [] ","typline chomp to_s  == ","ty scm_iconv e == ","Regexp  last_match  == ","e scm_iconv try  scm_iconv ame == ","line chomp to_s ntry namline chomp to_s  == ","entry Regexp  last_match  == ","e scm_iconv try  scm_iconv ame ","line chomp to_s ntry namline chomp to_s  ","entry Regexp  last_match  ","e scm_iconv tries detect ","line chomp to_s ntriline chomp to_s s dline chomp to_s tline chomp to_s ct ","Entries  new  detect "," scm_ico scm_iconv v ","p line chomp to_s mpty? "," scm_iconv  em scm_iconv ty? "," scm_iconv ame force_e scm_iconv codi scm_iconv g ","namline chomp to_s  forcline chomp to_s _line chomp to_s ncoding ","Regexp  last_match  force_encoding "," scm_iconv ame respo scm_iconv d_to? ","namline chomp to_s  rline chomp to_s spond_to? ","name res scm_iconv ond_to? ","Regexp  last_match  respond_to? ","line chomp to_s  =~ ","li scm_iconv e chomp to_s ","linline chomp to_s  chomp to_s ","line chom scm_iconv  to_s ","li scm_iconv e chomp ","linline chomp to_s  chomp ","line chom scm_iconv  ","io each_li scm_iconv e ","io line chomp to_s ach_linline chomp to_s  ","ide scm_iconv tifier  scm_iconv il? ","idline chomp to_s ntifiline chomp to_s r nil? ","E scm_iconv tries   scm_iconv ew ","Entriline chomp to_s s  nline chomp to_s w "," loggline chomp to_s r line chomp to_s rror ","line chomp to_s  mline chomp to_s ssagline chomp to_s  "," loggline chomp to_s r ","Rline chomp to_s gline chomp to_s xp  last_match ","Regex scm_iconv   last_match "]}," Redmine Scm Adapters XitoliteAdapter entry":{"type":"method","name":"entry","children":[],"call":["e name == ","e name ","es detect "," entries ","Entry  new ","search_name blank? ","search_path blank? ","parts [] ","parts [] join ","n blank? ! ","n blank? ","path to_s split select ","path to_s split ","path to_s "," entries  detect "," entri entries  ","parts []  blank? ","parts [] join  blank? ","path to_s split select  [] ","path to_s split select  [] join "]}," Redmine Scm Adapters XitoliteAdapter default_branch":{"type":"method","name":"default_branch","children":[],"call":["bras first to_s ","bras first ","master_bras empty? ","x to_s == ","x to_s ","bras select ","default_bras first to_s ","default_bras first ","default_bras empty? ! ","default_bras empty? ","x is_default == ","x is_default ","bras nil? "," branches ","(or\n  (or\n    (send\n      (send nil :branches) :detect\n      (block-pass\n        (sym :is_default)))\n    (block\n      (send\n        (send nil :branches) :detect)\n      (args\n        (arg :b))\n      (send\n        (const nil :GIT_DEFAULT_BRANCH_NAMES) :include?\n        (send\n          (lvar :b) :to_s))))\n  (send\n    (send nil :branches) :first)) to_s "," branches first ","GIT_DEFAULT_BRANCH_NAMES  include? ","b to_s "," branches detect "," branches blank? "," branches  first to_s "," branches  first ","master_ branches  empty? "," branches  select ","default_ branches  first to_s ","default_ branches  first ","default_ branches  empty? ! ","default_ branches  empty? "," branches  nil? "]}," Redmine Scm Adapters XitoliteAdapter tags":{"type":"method","name":"tags","children":[],"call":["t strip ","io readlines sort! map ","io readlines sort! ","io readlines "," git_cmd ","@tags nil? ! ","@tags nil? "," logger error ","e message "," logger ","t strip force_encoding "," scm_iconv "]}," Redmine Scm Adapters XitoliteAdapter branches":{"type":"method","name":"branches","children":[],"call":["@branches sort! ","@branches << ","bran is_default= ","branch_rev [] == ","branch_rev [] ","bran scmid= ","bran revision= ","GitBranch  new ","line match ","io each_line "," git_cmd ","@branches nil? ! ","@branches nil? "," logger error ","e message "," logger ","branch_rev [] to_s force_encoding ","branch_rev [] to_s "," scm_iconv ","@GitBranch  new ches sort! ","@GitBranch  new ches << ","GitBranch  new  is_default= ","GitBranch  new ch_rev [] == ","line match  [] == ","GitBranch  new ch_rev [] ","line match  [] ","GitBranch  new  scmid= ","GitBranch  new  revision= ","@GitBranch  new ches nil? ! ","@GitBranch  new ches nil? ","GitBranch  new ch_rev [] to_s force_encoding ","line match  [] to_s force_encoding ","GitBranch  new ch_rev [] to_s ","line match  [] to_s "]}," Redmine Scm Adapters XitoliteAdapter info":{"type":"method","name":"info","children":[],"call":["Info  new "," lastrev "," url "]}," Redmine Scm Adapters XitoliteAdapter path_encoding":{"type":"method","name":"path_encoding","children":[],"call":[]}," Redmine Scm Adapters XitoliteAdapter initialize":{"type":"method","name":"initialize","children":[],"call":["path_encoding blank? ","path_encoding presence "]}," Redmine Scm Adapters XitoliteAdapter scm_version_from_command_line":{"type":"method","name":"scm_version_from_command_line","children":[],"call":["RedmineGitHosting Commands  git_version "]}," Redmine Scm Adapters XitoliteAdapter scm_command_version":{"type":"method","name":"scm_command_version","children":[],"call":["m [] scan collect ","m [] scan ","m [] ","scm_version match ","scm_version force_encoding ","scm_version respond_to? "," scm_version_from_command_line dup "," scm_version_from_command_line "," scm_version_from_command_line b ","scm_version match  [] scan collect ","scm_version match  [] scan ","scm_version match  [] ","scscm_version match _version scm_version match atch "," scm_version_from_command_line dup  match "," scm_version_from_command_line b  match ","scscm_version match _version force_encoding "," scm_version_from_command_line dup  force_encoding "," scm_version_from_command_line b  force_encoding ","scscm_version match _version respond_to? "," scm_version_from_command_line dup  respond_to? "," scm_version_from_command_line b  respond_to? "," scscm_version match _version_froscm_version match _coscm_version match scm_version match and_line dup ","  scm_version_from_command_line dup _from_command_line dup ","  scm_version_from_command_line b _from_command_line dup "," scscm_version match _version_froscm_version match _coscm_version match scm_version match and_line ","  scm_version_from_command_line dup _from_command_line ","  scm_version_from_command_line b _from_command_line "," scscm_version match _version_froscm_version match _coscm_version match scm_version match and_line b ","  scm_version_from_command_line dup _from_command_line b ","  scm_version_from_command_line b _from_command_line b "]}," Redmine Scm Adapters XitoliteAdapter client_available":{"type":"method","name":"client_available","children":[],"call":[" client_version empty? ! "," client_version empty? "," client_version "," client_version present? "]}," Redmine Scm Adapters XitoliteAdapter client_version":{"type":"method","name":"client_version","children":[],"call":[" scm_command_version "]}," Redmine Scm Adapters XitoliteAdapter sq_bin":{"type":"method","name":"sq_bin","children":[],"call":[" shell_quote_command "]}," Redmine Scm Adapters XitoliteAdapter client_command":{"type":"method","name":"client_command","children":[],"call":[]}," RedmineGitHosting Patches ProjectsControllerPatch InstanceMethods valid_project?":{"type":"method","name":"valid_project?","children":[],"call":["@project save "," validate_parent_id ","Rails VERSION MAJOR  == "]}," RedmineGitHosting GitoliteParams MailerParams smtpauth_enabled?":{"type":"method","name":"smtpauth_enabled?","children":[],"call":["auth != ","ActionMailer Base  smtp_settings [] ","ActionMailer Base  smtp_settings ","auth present? ","ActionMailer Base  smtp_settings []  != ","ActionMailer Base  smtp_settings []  present? "]}," RedmineGitHosting GitoliteParams MailerParams mailer":{"type":"method","name":"mailer","children":[],"call":["ActionMailer Base  delivery_method == ","ActionMailer Base  delivery_method "]}," RedmineGitHosting GitoliteParams MailerParams get_mailer_params":{"type":"method","name":"get_mailer_params","children":[],"call":["params []= ","ActionMailer Base  smtp_settings [] ","ActionMailer Base  smtp_settings ","ActionMailer Base  smtp_settings [] to_s "," smtpauth_enabled? to_s "," smtpauth_enabled? "," mailer "]}," RedmineGitHosting GitoliteParams MailerParams mailer_params":{"type":"method","name":"mailer_params","children":[],"call":[]}," RedmineGitHosting GitoliteParams MailerParams installed?":{"type":"method","name":"installed?","children":[],"call":["@installed []= "," set_git_config_param "," current_mailer_params [] "," current_mailer_params "," namespace "," current_params [] != "," current_params [] "," current_params "," mailer_params each "," mailer_params "," current_params [] == "," current_mailer_params [] empty? "]}," RedmineGitHosting GitoliteParams MailerParams initialize":{"type":"method","name":"initialize","children":[],"call":[" get_mailer_params "," get_git_config_params "]}," RedmineGitHosting GitoliteParams GlobalParams async_mode_set?":{"type":"method","name":"async_mode_set?","children":[],"call":["@installed []= "," set_git_config_param "," async_mode "," namespace "," current_params [] != "," current_params [] "," current_params "]}," RedmineGitHosting GitoliteParams GlobalParams debug_mode_set?":{"type":"method","name":"debug_mode_set?","children":[],"call":["@installed []= "," set_git_config_param "," debug_mode "," namespace "," current_params [] != "," current_params [] "," current_params "]}," RedmineGitHosting GitoliteParams GlobalParams gitolite_hooks_url_set?":{"type":"method","name":"gitolite_hooks_url_set?","children":[],"call":["@installed []= "," set_git_config_param "," gitolite_hooks_url "," namespace "," current_params [] != "," current_params [] "," current_params "]}," RedmineGitHosting GitoliteParams GlobalParams installed?":{"type":"method","name":"installed?","children":[],"call":[" async_mode_set? "," debug_mode_set? "," gitolite_hooks_url_set? ","@installed []= "," current_params [] == "," async_mode "," current_params [] "," current_params "," debug_mode "," gitolite_hooks_url "]}," RedmineGitHosting GitoliteParams GlobalParams initialize":{"type":"method","name":"initialize","children":[],"call":[" get_git_config_params ","RedmineGitHosting Config  gitolite_hooks_namespace ","RedmineGitHosting Config  gitolite_hooks_are_asynchronous to_s ","RedmineGitHosting Config  gitolite_hooks_are_asynchronous ","RedmineGitHosting Config  gitolite_hooks_debug to_s ","RedmineGitHosting Config  gitolite_hooks_debug ","RedmineGitHosting Config  gitolite_hooks_url "]}," RedmineGitHosting GitoliteParams BaseParam unset_git_config_param":{"type":"method","name":"unset_git_config_param","children":[],"call":["RedmineGitHosting Commands  sudo_unset_git_global_param "]}," RedmineGitHosting GitoliteParams BaseParam set_git_config_param":{"type":"method","name":"set_git_config_param","children":[],"call":["RedmineGitHosting Commands  sudo_set_git_global_param "]}," RedmineGitHosting GitoliteParams BaseParam get_git_config_params":{"type":"method","name":"get_git_config_params","children":[],"call":["RedmineGitHosting Commands  sudo_get_git_global_params "]}," RedmineGitHosting GitoliteParams BaseParam logger":{"type":"method","name":"logger","children":[],"call":["RedmineGitHosting  logger "]}," Grack Server service_rpc":{"type":"method","name":"service_rpc","children":[],"call":["@res write "," terminating_chunk "," encode_chunk ","pipe read ","pipe eof? ! ","pipe eof? ","pipe close_write ","pipe write ","IO  popen "," popen_options "," git_command ","@res finish ","@res []= ","application/x-git-%s-result % ","@res status= ","Rack Response  new "," read_body "," render_no_access "," has_access ! "," has_access ","Rack Response  new  write "," git_ git_command  ","Rack Response  new  finish ","Rack Response  new  []= ","Rack Response  new  status= "]}," RedmineGitHosting Patches UserPatch InstanceMethods allowed_to_create_ssh_keys?":{"type":"method","name":"allowed_to_create_ssh_keys?","children":[],"call":[" allowed_to? "]}," RedmineGitHosting Patches SettingsControllerPatch InstanceMethods install_gitolite_hooks":{"type":"method","name":"install_gitolite_hooks","children":[],"call":["RedmineGitHosting Config  install_hooks! "," render_404 ","@plugin id == ","@plugin id ","Redmine Plugin  find "," params [] "," params ","Redmine Plugin  find  id == ","Redmine Plugin  find  id "]}," RedmineGitHosting GitoliteWrapper Global add_redmine_key":{"type":"method","name":"add_redmine_key","children":[],"call":["repo_conf permissions [] [] [] delete ","repo_conf permissions [] [] [] ","repo_conf permissions [] [] ","repo_conf permissions [] ","repo_conf permissions ","repo_conf permissions [] [] [] include? "," logger info "," logger ","repo_conf permissions [] [] [] push "," redmine_gitolite_key ","users include? ! ","users include? ","repo_conf permissions [] [] []= ","users nil? ","perms [] [] [] ","perms [] [] ","perms [] ","repo_conf permissions= "," create_readme_perms ","perms empty? ","p has_key? ","repo_conf permissions select "," all_repository_config "," all_repository_config  permissions [] [] [] delete "," all_repository_config  permissions [] [] [] "," all_repository_config  permissions [] [] "," all_repository_config  permissions [] "," all_repository_config  permissions "," all_repository_config  permissions [] [] [] include? "," all_repository_config  permissions [] [] [] push ","perms [] [] []  include? ! ","perms [] [] []  include? "," all_repository_config  permissions [] [] []= ","perms [] [] []  nil? "," all_repository_config  permissions= "," all_repository_config  permissions select "]}," RedmineGitHosting GitoliteWrapper Global remove_redmine_key":{"type":"method","name":"remove_redmine_key","children":[],"call":["repo_conf permissions [] [] [] push ","repo_conf permissions [] [] [] ","repo_conf permissions [] [] ","repo_conf permissions [] ","repo_conf permissions ","repo_conf permissions [] [] [] empty? ","repo_conf permissions [] [] [] delete "," redmine_gitolite_key ","users include? ! ","users include? ","perms [] [] [] ","perms [] [] ","perms [] ","perms [] [] include? ! ","perms [] [] include? ","perms empty? ","p has_key? ","repo_conf permissions select "," all_repository_config "," all_repository_config  permissions [] [] [] push "," all_repository_config  permissions [] [] [] "," all_repository_config  permissions [] [] "," all_repository_config  permissions [] "," all_repository_config  permissions "," all_repository_config  permissions [] [] [] empty? "," all_repository_config  permissions [] [] [] delete ","perms [] [] []  include? ! ","perms [] [] []  include? "," all_repository_config  permissions select "]}," RedmineGitHosting GitoliteWrapper Global create_readme_perms":{"type":"method","name":"create_readme_perms","children":[],"call":["permissions [] []= "," redmine_gitolite_key ","permissions [] ","permissions []= "]}," RedmineGitHosting GitoliteWrapper Global create_readme_config":{"type":"method","name":"create_readme_config","children":[],"call":["repo_conf permissions= "," create_readme_perms "," Gitolite Config Repo  new "," all_repository "," Gitolite Config Repo  new  permissions= "]}," RedmineGitHosting GitoliteWrapper Global all_repository_config":{"type":"method","name":"all_repository_config","children":[],"call":[" gitolite_config repos [] "," all_repository "," gitolite_config repos "," gitolite_config "]}," RedmineGitHosting GitoliteWrapper Global all_repository":{"type":"method","name":"all_repository","children":[],"call":[]}," RedmineGitHosting GitoliteWrapper Global redmine_gitolite_key":{"type":"method","name":"redmine_gitolite_key","children":[],"call":[]}," RedmineGitHosting GitoliteWrapper Global disable_readme_creation":{"type":"method","name":"disable_readme_creation","children":[],"call":[" gitolite_admin_repo_commit "," remove_redmine_key "," admin transaction "," admin "," logger info "," logger "," all_repository_config nil? "," all_repository_config "]}," RedmineGitHosting GitoliteWrapper Global enable_readme_creation":{"type":"method","name":"enable_readme_creation","children":[],"call":[" gitolite_admin_repo_commit "," add_redmine_key "," admin transaction "," admin "," logger info "," logger "," gitolite_config add_repo "," create_readme_config "," gitolite_config "," all_repository_config nil? "," all_repository_config "]}," RedmineGitHosting GitoliteParams MailerParams install!":{"type":"method","name":"install!","children":[],"call":["@installed []= "," set_git_config_param "," current_mailer_params [] "," current_mailer_params "," namespace "," current_mailer_params [] empty? "," mailer_params each "," mailer_params "]}," RedmineGitHosting GitoliteParams GlobalParams install!":{"type":"method","name":"install!","children":[],"call":["@installed []= "," set_git_config_param "," async_mode "," namespace "," debug_mode "," gitolite_hooks_url "]}," RedmineGitHosting GitoliteHooks install_hooks!":{"type":"method","name":"install_hooks!","children":[],"call":["installed []= ","hook install! ","hook name "," registered_hooks each "," registered_hooks "]}," RedmineGitHosting GitoliteHook force_update?":{"type":"method","name":"force_update?","children":[],"call":["RedmineGitHosting Config  gitolite_overwrite_existing_hooks? "]}," RedmineGitHosting GitoliteHook install!":{"type":"method","name":"install!","children":[],"call":[" installed? "," logger info "," name "," logger "," install_hook "," force_update? "," logger warn "," hook_file_has_changed? "," file_exists? ! "," file_exists? "]}," Config GitoliteHooks ClassMethods install_hooks!":{"type":"method","name":"install_hooks!","children":[],"call":["RedmineGitHosting GitoliteParams MailerParams  new install! ","RedmineGitHosting GitoliteParams MailerParams  new ","RedmineGitHosting GitoliteParams GlobalParams  new install! ","RedmineGitHosting GitoliteParams GlobalParams  new ","RedmineGitHosting GitoliteHooks  install_hooks! "]}," Config GitoliteHooks ClassMethods gitolite_overwrite_existing_hooks?":{"type":"method","name":"gitolite_overwrite_existing_hooks?","children":[],"call":["RedmineGitHosting Config  get_setting "]}," Cache Redis key_prefix":{"type":"method","name":"key_prefix","children":[],"call":["Digest SHA256  hexdigest [] ","Digest SHA256  hexdigest "]}," Config GitoliteBase ClassMethods gitolite_ssh_public_key_fingerprint":{"type":"method","name":"gitolite_ssh_public_key_fingerprint","children":[],"call":["RedmineGitHosting Utils  ssh_fingerprint ","File  read "," gitolite_ssh_public_key "]}," Config GitoliteInfos ClassMethods libgit2_version":{"type":"method","name":"libgit2_version","children":[],"call":["Rugged  libgit2_version join ","Rugged  libgit2_version "]}," Config GitoliteInfos ClassMethods rugged_features":{"type":"method","name":"rugged_features","children":[],"call":["Rugged  features "]}," RedmineGitHosting Patches SettingPatch ClassMethods check_cache_with_git_hosting":{"type":"method","name":"check_cache_with_git_hosting","children":[],"call":["RedmineGitHosting Config  check_cache "," clear_cache ","@cached_cleared_on <= ","Setting  maximum "]}," RedmineGitHosting Patches RepositoryPatch InstanceMethods redmine_name":{"type":"method","name":"redmine_name","children":[],"call":[" identifier "," project identifier "," project "," identifier blank? "]}," RedmineGitHosting MirrorKeysInstaller gitolite_ssh_private_key_dest_path":{"type":"method","name":"gitolite_ssh_private_key_dest_path","children":[],"call":["File  join "," gitolite_home_dir "]}," RedmineGitHosting MirrorKeysInstaller gitolite_ssh_public_key_dest_path":{"type":"method","name":"gitolite_ssh_public_key_dest_path","children":[],"call":["File  join "," gitolite_home_dir "]}," RedmineGitHosting MirrorKeysInstaller gitolite_ssh_private_key_content":{"type":"method","name":"gitolite_ssh_private_key_content","children":[],"call":["File  read "," gitolite_ssh_private_key "]}," RedmineGitHosting MirrorKeysInstaller gitolite_ssh_public_key_content":{"type":"method","name":"gitolite_ssh_public_key_content","children":[],"call":["File  read "," gitolite_ssh_public_key "]}," RedmineGitHosting MirrorKeysInstaller mirroring_script_content":{"type":"method","name":"mirroring_script_content","children":[],"call":["(str \"#!/bin/sh\") join "," gitolite_ssh_private_key_dest_path "]}," RedmineGitHosting MirrorKeysInstaller logger":{"type":"method","name":"logger","children":[],"call":["RedmineGitHosting  logger "]}," RedmineGitHosting MirrorKeysInstaller install_mirroring_script":{"type":"method","name":"install_mirroring_script","children":[],"call":[" logger error ","e output "," logger ","RedmineGitHosting Commands  sudo_install_file ","RedmineGitHosting Config  gitolite_mirroring_script "," mirroring_script_content "," e output "," e "," install_file "]}," RedmineGitHosting MirrorKeysInstaller install_private_key":{"type":"method","name":"install_private_key","children":[],"call":[" logger error ","e output "," logger ","RedmineGitHosting Commands  sudo_install_file "," gitolite_ssh_private_key_dest_path "," gitolite_ssh_private_key_content "," e output "," e "," install_file "]}," RedmineGitHosting MirrorKeysInstaller install_public_key":{"type":"method","name":"install_public_key","children":[],"call":[" logger error ","e output "," logger ","RedmineGitHosting Commands  sudo_install_file "," gitolite_ssh_public_key_dest_path "," gitolite_ssh_public_key_content "," e output "," e "," install_file "]}," RedmineGitHosting MirrorKeysInstaller install!":{"type":"method","name":"install!","children":[],"call":[" logger info "," logger "," install_mirroring_script "," install_private_key "," install_public_key "]}," RedmineGitHosting MirrorKeysInstaller installable?":{"type":"method","name":"installable?","children":[],"call":[" gitolite_ssh_private_key_content nil? "," gitolite_ssh_private_key_content "," gitolite_ssh_public_key_content nil? "," gitolite_ssh_public_key_content "," gitolite_home_dir nil? "," gitolite_home_dir "]}," RedmineGitHosting MirrorKeysInstaller installed?":{"type":"method","name":"installed?","children":[],"call":[" install! "," installable? "]}," RedmineGitHosting MirrorKeysInstaller format_mirror_key":{"type":"method","name":"format_mirror_key","children":[],"call":["key split [] to_s + + ","key split [] to_s ","key split [] ","key split ","key split [] to_s + ","key chomp strip ","key chomp ","key chomp strip  split [] to_s + + ","key chomp strip  split [] to_s ","key chomp strip  split [] ","key chomp strip  split ","key chomp strip  split [] to_s + ","key chomp strip  chomp strip ","key chomp strip  chomp "]}," RedmineGitHosting MirrorKeysInstaller mirroring_public_key":{"type":"method","name":"mirroring_public_key","children":[],"call":["RedmineGitHosting  logger error ","e output ","RedmineGitHosting  logger "," format_mirror_key ","File  read ","e inspect "]}," RedmineGitHosting MirrorKeysInstaller initialize":{"type":"method","name":"initialize","children":[],"call":[]}," RedmineGitHosting GitoliteWrapper Repositories move_repository":{"type":"method","name":"move_repository","children":[],"call":[" logger error "," action "," logger ","repository fetch_changesets "," gitolite_admin_repo_commit ","repository gitolite_repository_name ","RedmineGitHosting GitoliteHandlers RepositoryMover  new call ","RedmineGitHosting GitoliteHandlers RepositoryMover  new "," gitolite_config "," admin transaction "," admin ","Repository  find_by_id "," object_id ","Repository  find_by_id  fetch_changesets ","Repository  find_by_id  gitolite_Repository  find_by_id _name "]}," Config GitoliteBase ClassMethods gitolite_server_host":{"type":"method","name":"gitolite_server_host","children":[],"call":["RedmineGitHosting Config  get_setting "]}," Config GitoliteBase ClassMethods check_cache":{"type":"method","name":"check_cache","children":[],"call":[]}," Config GitoliteInfos ClassMethods rugged_mandatory_features":{"type":"method","name":"rugged_mandatory_features","children":[],"call":[]}," RedmineGitHosting Hooks AddPublicKeysLink default_url_options":{"type":"method","name":"default_url_options","children":[],"call":[]}," RedmineGitHosting loglevel":{"type":"method","name":"loglevel","children":[],"call":["RedmineGitHosting Config  gitolite_log_level "]}," RedmineGitHosting logfile":{"type":"method","name":"logfile","children":[],"call":["Rails  root join ","Rails  root "]}," RedmineGitHosting Validators valid_boolean_field?":{"type":"method","name":"valid_boolean_field?","children":[],"call":["BOOLEAN_FIELDS  include? "]}," RedmineGitHosting Validators valid_email?":{"type":"method","name":"valid_email?","children":[],"call":["email match "]}," RedmineGitHosting Validators valid_domain?":{"type":"method","name":"valid_domain?","children":[],"call":["domain match "]}," RedmineGitHosting Validators valid_refspec_path?":{"type":"method","name":"valid_refspec_path?","children":[],"call":["RedmineGitHosting Utils Git  parse_refspec ","refspec == ","refspec ! "]}," RedmineGitHosting Validators valid_git_refspec_path?":{"type":"method","name":"valid_git_refspec_path?","children":[],"call":[" raise ","refspec_parsed [] == ","refspec_parsed [] ","refspec_parsed [] ! "," valid_refspec_path? ! "," valid_refspec_path? ","refspec_parsed nil? "," valid_git_refspec? "," valid_git_refspec?  [] == "," valid_git_refspec?  [] "," valid_git_refspec?  [] ! "," valid_git_refspec?  nil? "]}," RedmineGitHosting Validators valid_git_refspec?":{"type":"method","name":"valid_git_refspec?","children":[],"call":["refspec match "]}," RedmineGitHosting Validators valid_git_ssh_url?":{"type":"method","name":"valid_git_ssh_url?","children":[],"call":["url match "]}," RedmineGitHosting Utils Ssh sanitize_ssh_key":{"type":"method","name":"sanitize_ssh_key","children":[],"call":["key gsub strip ","key gsub ","key sub ","key gsub strip  gsub strip ","key sub  gsub strip ","key gsub strip  gsub ","key sub  gsub ","key gsub strip  sub ","key sub  sub "]}," RedmineGitHosting Utils Ssh ssh_fingerprint":{"type":"method","name":"ssh_fingerprint","children":[],"call":["file unlink ","output split [] ","output split "," raise ","RedmineGitHosting Error InvalidSshKey  new ","Utils Exec  capture ","file path ","file close ","file write ","Tempfile  new ","Tempfile  new  unlink ","Utils Exec  capture  split [] ","Utils Exec  capture  split ","Tempfile  new  path ","Tempfile  new  close ","Tempfile  new  write ","TempTempfile  new   new "]}," RedmineGitHosting Utils Http send_http_request":{"type":"method","name":"send_http_request","children":[],"call":["e message ","res body ","res message ","res code ","res is_a? ! ","res is_a? ","openhttp request ","http start "," +@ ","e res body  ","e  +@  ","res res body  ","res  +@  "]}," RedmineGitHosting Utils Http build_http_request":{"type":"method","name":"build_http_request","children":[],"call":["http verify_mode= ","http use_ssl= ","uri scheme == ","uri scheme ","Net HTTP  new ","uri port ","uri host "," URI ","Net HTTP  new  verify_mode= ","Net HTTP  new  use_ssl= "," URI  scheme == "," URI  scheme "," URI  port "," URI  host "]}," RedmineGitHosting Utils Http build_get_request":{"type":"method","name":"build_get_request","children":[],"call":["Net HTTP Get  new ","uri request_uri "," build_http_request ","uri Net HTTP Get  new _uri "," build_http_Net HTTP Get  new  "]}," RedmineGitHosting Utils Http build_post_request":{"type":"method","name":"build_post_request","children":[],"call":["request set_form_data ","Net HTTP Post  new ","uri request_uri "," build_http_request ","request basic_auth ","uri password ","uri user ","uri password present? ","uri user present? ","Net HTTP Post  new  set_form_data ","uri Net HTTP Post  new _uri "," build_http_Net HTTP Post  new  ","Net HTTP Post  new  basic_auth "]}," RedmineGitHosting Utils Http serialize_data":{"type":"method","name":"serialize_data","children":[],"call":["serialized []= ","v to_json ","k to_s ","data each ","data empty? "]}," RedmineGitHosting Utils Http valid_url?":{"type":"method","name":"valid_url?","children":[],"call":["uri kind_of? ","URI  parse ","uri is_a? ","URI  parse  kind_of? ","URI  parse  is_a? "]}," RedmineGitHosting Utils Http http_get":{"type":"method","name":"http_get","children":[],"call":[" send_http_request "," build_get_request "]}," RedmineGitHosting Utils Http http_post":{"type":"method","name":"http_post","children":[],"call":[" send_http_request "," build_post_request "," serialize_data ","opts delete "," serialize_ serialize_data  "]}," RedmineGitHosting Utils Git author_email":{"type":"method","name":"author_email","children":[],"call":["committer gsub "]}," RedmineGitHosting Utils Git author_name":{"type":"method","name":"author_name","children":[],"call":["committer gsub "]}," RedmineGitHosting Utils Git parse_refspec":{"type":"method","name":"parse_refspec","children":[],"call":["parsed_refspec [] ","parsed_refspec nil? ","spec match ","spec match  [] ","spec match  nil? "]}," RedmineGitHosting Utils Exec execute":{"type":"method","name":"execute","children":[],"call":[" raise ","RedmineGitHosting Error GitoliteCommandException  new ","RedmineGitHosting  logger debug ","RedmineGitHosting  logger ","e message ","args join ","Open3  capture3 "]}," RedmineGitHosting Utils Exec capture":{"type":"method","name":"capture","children":[],"call":["stdout + "," raise ","RedmineGitHosting Error GitoliteCommandException  new ","RedmineGitHosting  logger debug ","RedmineGitHosting  logger ","args join ","code != "," execute ","opts delete "]}," RedmineGitHosting Utils Crypto generate_secret":{"type":"method","name":"generate_secret","children":[],"call":["secret split sample join ","secret split sample ","secret split ","secret gsub ","SecureRandom  base64 ","length * ","length to_i ","secret chars sample join ","secret chars sample ","secret chars ","secret split sample join  split sample join ","secret gsub  split sample join ","SecureRandom  base64  split sample join ","secret split sample join  split sample ","secret gsub  split sample ","SecureRandom  base64  split sample ","secret split sample join  split ","secret gsub  split ","SecureRandom  base64  split ","secret split sample join  gsub ","secret gsub  gsub ","SecureRandom  base64  gsub ","length to_i  * ","length to_i  to_i ","secret split sample join  chars sample join ","secret gsub  chars sample join ","SecureRandom  base64  chars sample join ","secret split sample join  chars sample ","secret gsub  chars sample ","SecureRandom  base64  chars sample ","secret split sample join  chars ","secret gsub  chars ","SecureRandom  base64  chars "]}," RedmineGitHosting ShellRedirector inject_proxy_method":{"type":"method","name":"inject_proxy_method","children":[],"call":[" class class_eval "," class ","282 + "]}," RedmineGitHosting ShellRedirector inject_read_method":{"type":"method","name":"inject_read_method","children":[],"call":[" class class_eval "," class ","272 + "]}," RedmineGitHosting ShellRedirector inject_enumerator_method":{"type":"method","name":"inject_enumerator_method","children":[],"call":[" class class_eval "," class ","251 + "]}," RedmineGitHosting ShellRedirector io_method?":{"type":"method","name":"io_method?","children":[],"call":["IO  instance_methods map include? ","method to_sym ","IO  instance_methods map ","IO  instance_methods "]}," RedmineGitHosting RedminePluginLoader autoload_locales!":{"type":"method","name":"autoload_locales!","children":[],"call":["Dir  glob "," plugin_locales_dir "," I18n  load_path "]}," RedmineGitHosting RedminePluginLoader autoload_paths!":{"type":"method","name":"autoload_paths!","children":[],"call":["ActiveSupport Dependencies  autoload_paths ","Dir  exists? "," autoloaded_paths each "," autoloaded_paths ","Dir  exist? "]}," RedmineGitHosting RedminePluginLoader autoload_libs!":{"type":"method","name":"autoload_libs!","children":[],"call":[" require_dependency "," hook_file? ","Dir  glob each ","Dir  glob "," required_lib_dirs "," skip_lib_file? "]}," RedmineGitHosting RedminePluginLoader hook_file?":{"type":"method","name":"hook_file?","children":[],"call":["File  dirname == "," plugin_hooks_dir to_s "," plugin_hooks_dir ","File  dirname "]}," RedmineGitHosting RedminePluginLoader load_authors_file":{"type":"method","name":"load_authors_file","children":[],"call":["RedmineGitHosting PluginAuthor  new ","File  read split map ","File  read split ","File  read "," authors_file ","File  exists? ","File  exist? "]}," RedmineGitHosting RedminePluginLoader load_setting_file":{"type":"method","name":"load_setting_file","children":[],"call":["YAML  load symbolize_keys ","YAML  load ","ERB  new result ","ERB  new ","IO  read ","File  exists? ","data symbolize_keys ","YAML  safe_load ","File  exist? ","File  read "]}," RedmineGitHosting RedminePluginLoader load_plugin!":{"type":"method","name":"load_plugin!","children":[],"call":[" autoload_locales! "," autoload_paths! "," autoload_libs! "]}," RedmineGitHosting RedminePluginLoader plugin_spec_dir":{"type":"method","name":"plugin_spec_dir","children":[],"call":[" plugin_dir "]}," RedmineGitHosting RedminePluginLoader plugin_lib_dir":{"type":"method","name":"plugin_lib_dir","children":[],"call":[" plugin_dir "]}," RedmineGitHosting RedminePluginLoader plugin_conf_dir":{"type":"method","name":"plugin_conf_dir","children":[],"call":[" plugin_dir "]}," RedmineGitHosting RedminePluginLoader plugin_app_dir":{"type":"method","name":"plugin_app_dir","children":[],"call":[" plugin_dir "]}," RedmineGitHosting RedminePluginLoader plugin_dir":{"type":"method","name":"plugin_dir","children":[],"call":["Rails  root join "," plugin_name ","Rails  root "]}," RedmineGitHosting RedminePluginLoader required_lib_dirs":{"type":"method","name":"required_lib_dirs","children":[],"call":[" plugin_lib_dir "," plugin_name "]}," RedmineGitHosting RedminePluginLoader plugin_locales_dir":{"type":"method","name":"plugin_locales_dir","children":[],"call":[" plugin_conf_dir "]}," RedmineGitHosting RedminePluginLoader plugin_hooks_dir":{"type":"method","name":"plugin_hooks_dir","children":[],"call":[" plugin_lib_dir "," plugin_name "]}," RedmineGitHosting RedminePluginLoader plugin_patches_dir":{"type":"method","name":"plugin_patches_dir","children":[],"call":[" plugin_lib_dir "," plugin_name "]}," RedmineGitHosting RedminePluginLoader local_settings_file":{"type":"method","name":"local_settings_file","children":[],"call":[" plugin_dir "]}," RedmineGitHosting RedminePluginLoader default_settings_file":{"type":"method","name":"default_settings_file","children":[],"call":[" plugin_lib_dir "]}," RedmineGitHosting RedminePluginLoader default_settings":{"type":"method","name":"default_settings","children":[],"call":[" load_setting_file "," default_settings_file "]}," RedmineGitHosting RedminePluginLoader local_settings":{"type":"method","name":"local_settings","children":[],"call":[" load_setting_file "," local_settings_file "]}," RedmineGitHosting RedminePluginLoader settings":{"type":"method","name":"settings","children":[],"call":[" default_settings merge "," local_settings "," default_settings "," default_settings merge merge "," global_settings "]}," RedmineGitHosting RedminePluginLoader authors_file":{"type":"method","name":"authors_file","children":[],"call":[" plugin_dir "]}," RedmineGitHosting RedminePluginLoader authors":{"type":"method","name":"authors","children":[],"call":[" load_authors_file "]}," RedmineGitHosting RedminePluginLoader autoloaded_paths":{"type":"method","name":"autoloaded_paths","children":[],"call":[]}," RedmineGitHosting RedminePluginLoader set_autoloaded_paths":{"type":"method","name":"set_autoloaded_paths","children":[],"call":[" plugin_app_dir ","dirs map "]}," RedmineGitHosting RedminePluginLoader plugin_name":{"type":"method","name":"plugin_name","children":[],"call":[]}," RedmineGitHosting RedminePluginLoader set_plugin_name":{"type":"method","name":"set_plugin_name","children":[],"call":[]}," RedmineGitHosting RecycleBin recycle_bin":{"type":"method","name":"recycle_bin","children":[],"call":["RecycleBin Manager  new ","RedmineGitHosting Config  recycle_bin_dir "]}," RedmineGitHosting RecycleBin default_expiration_time":{"type":"method","name":"default_expiration_time","children":[],"call":["RedmineGitHosting Config  gitolite_recycle_bin_expiration_time "]}," RedmineGitHosting RecycleBin restore_object_from_recycle":{"type":"method","name":"restore_object_from_recycle","children":[],"call":[" recycle_bin restore_object_from_recycle "," recycle_bin "]}," RedmineGitHosting RecycleBin move_object_to_recycle":{"type":"method","name":"move_object_to_recycle","children":[],"call":[" recycle_bin move_object_to_recycle "," recycle_bin "]}," RedmineGitHosting RecycleBin delete_content":{"type":"method","name":"delete_content","children":[],"call":[" recycle_bin delete_content "," recycle_bin "]}," RedmineGitHosting RecycleBin delete_expired_content":{"type":"method","name":"delete_expired_content","children":[],"call":[" recycle_bin delete_expired_content "," recycle_bin "]}," RedmineGitHosting RecycleBin content":{"type":"method","name":"content","children":[],"call":[" recycle_bin content "," recycle_bin "]}," RedmineGitHosting RecycleBin RestorableItem do_restore":{"type":"method","name":"do_restore","children":[],"call":[" logger error "," trashed_object "," logger "," logger info ","RedmineGitHosting Commands  sudo_move "]}," RedmineGitHosting RecycleBin RestorableItem create_parent_dir":{"type":"method","name":"create_parent_dir","children":[],"call":[" logger error "," trashed_object "," logger ","RedmineGitHosting Commands  sudo_mkdir_p ","File  dirname "," logger info "]}," RedmineGitHosting RecycleBin RestorableItem trashed_object":{"type":"method","name":"trashed_object","children":[],"call":[" trashed_objects first "," trashed_objects "]}," RedmineGitHosting RecycleBin RestorableItem trashed_objects":{"type":"method","name":"trashed_objects","children":[],"call":[" find_trashed_object "," source_path "]}," RedmineGitHosting RecycleBin RestorableItem source_path":{"type":"method","name":"source_path","children":[],"call":["File  join "," trash_name "," recycle_bin_dir "]}," RedmineGitHosting RecycleBin RestorableItem restore!":{"type":"method","name":"restore!","children":[],"call":[" do_restore "," create_parent_dir "," logger debug "," trashed_object "," logger "," logger info "," object_name "," logger warn "," trashed_object nil? "]}," RedmineGitHosting RecycleBin Manager create_recycle_bin_directory":{"type":"method","name":"create_recycle_bin_directory","children":[],"call":[" logger error "," recycle_bin_dir "," logger ","RedmineGitHosting Commands  sudo_chmod ","RedmineGitHosting Commands  sudo_mkdir_p "]}," RedmineGitHosting RecycleBin Manager get_expired_content":{"type":"method","name":"get_expired_content","children":[],"call":["RedmineGitHosting Commands  sudo_capture chomp split ","RedmineGitHosting Commands  sudo_capture chomp ","RedmineGitHosting Commands  sudo_capture "," recycle_bin_dir "]}," RedmineGitHosting RecycleBin Manager get_recycle_bin_content":{"type":"method","name":"get_recycle_bin_content","children":[],"call":["RedmineGitHosting Commands  sudo_capture chomp split ","RedmineGitHosting Commands  sudo_capture chomp ","RedmineGitHosting Commands  sudo_capture "," recycle_bin_dir "]}," RedmineGitHosting RecycleBin Manager load_recycle_bin_content":{"type":"method","name":"load_recycle_bin_content","children":[],"call":["RedmineGitHosting RecycleBin Item  new ","content_list map "]}," RedmineGitHosting RecycleBin Manager logger":{"type":"method","name":"logger","children":[],"call":["RedmineGitHosting  logger "]}," RedmineGitHosting RecycleBin Manager restore_object_from_recycle":{"type":"method","name":"restore_object_from_recycle","children":[],"call":["RedmineGitHosting RecycleBin RestorableItem  new restore! ","RedmineGitHosting RecycleBin RestorableItem  new "," recycle_bin_dir "]}," RedmineGitHosting RecycleBin Manager move_object_to_recycle":{"type":"method","name":"move_object_to_recycle","children":[],"call":["RedmineGitHosting RecycleBin DeletableItem  new move! ","RedmineGitHosting RecycleBin DeletableItem  new "," recycle_bin_dir "]}," RedmineGitHosting RecycleBin Manager delete_content":{"type":"method","name":"delete_content","children":[],"call":[" load_recycle_bin_content map "," load_recycle_bin_content "]}," RedmineGitHosting RecycleBin Manager delete_expired_content":{"type":"method","name":"delete_expired_content","children":[],"call":["expired_content map "," logger info ","expired_content length "," logger "," load_recycle_bin_content "," get_expired_content "," load_recycle_bin_content  map "," load_recycle_bin_content  length "," get_ load_recycle_bin_content  "]}," RedmineGitHosting RecycleBin Manager content":{"type":"method","name":"content","children":[],"call":[" load_recycle_bin_content "," get_recycle_bin_content "]}," RedmineGitHosting RecycleBin Manager initialize":{"type":"method","name":"initialize","children":[],"call":[" create_recycle_bin_directory "]}," RedmineGitHosting RecycleBin ItemBase find_trashed_object":{"type":"method","name":"find_trashed_object","children":[],"call":["y <=> ","RedmineGitHosting Commands  sudo_capture chomp split sort ","RedmineGitHosting Commands  sudo_capture chomp split ","RedmineGitHosting Commands  sudo_capture chomp ","RedmineGitHosting Commands  sudo_capture "," recycle_bin_dir ","RedmineGitHosting Commands  sudo_capture chomp split sort reverse "]}," RedmineGitHosting RecycleBin ItemBase directory_exists?":{"type":"method","name":"directory_exists?","children":[],"call":["RedmineGitHosting Commands  sudo_dir_exists? "]}," RedmineGitHosting RecycleBin ItemBase logger":{"type":"method","name":"logger","children":[],"call":["RedmineGitHosting  logger "]}," RedmineGitHosting RecycleBin ItemBase trash_name":{"type":"method","name":"trash_name","children":[],"call":[" object_name gsub "," object_name "]}," RedmineGitHosting RecycleBin ItemBase initialize":{"type":"method","name":"initialize","children":[],"call":[]}," RedmineGitHosting RecycleBin Item logger":{"type":"method","name":"logger","children":[],"call":["RedmineGitHosting  logger "]}," RedmineGitHosting RecycleBin Item destroy!":{"type":"method","name":"destroy!","children":[],"call":[" logger error "," path "," logger "," logger info ","RedmineGitHosting Commands  sudo_rmdir "]}," RedmineGitHosting RecycleBin Item size":{"type":"method","name":"size","children":[],"call":["RedmineGitHosting Commands  sudo_get_dir_size "," path "]}," RedmineGitHosting RecycleBin Item initialize":{"type":"method","name":"initialize","children":[],"call":[]}," RedmineGitHosting RecycleBin DeletableItem do_move":{"type":"method","name":"do_move","children":[],"call":[" logger error "," logger "," logger info ","RedmineGitHosting Commands  sudo_move "," target_path "]}," RedmineGitHosting RecycleBin DeletableItem target_path":{"type":"method","name":"target_path","children":[],"call":["File  join "," trash_name ","Time  now to_i to_s ","Time  now to_i ","Time  now "," recycle_bin_dir "]}," RedmineGitHosting RecycleBin DeletableItem move!":{"type":"method","name":"move!","children":[],"call":[" do_move "," logger debug "," target_path "," logger "," logger info "," object_name "," logger warn "," directory_exists? ! "," directory_exists? "]}," RedmineGitHosting PluginAuthor email":{"type":"method","name":"email","children":[],"call":["RedmineGitHosting Utils Git  author_email downcase ","RedmineGitHosting Utils Git  author_email "," author "]}," RedmineGitHosting PluginAuthor name":{"type":"method","name":"name","children":[],"call":["RedmineGitHosting Utils Git  author_name "," author "]}," RedmineGitHosting PluginAuthor initialize":{"type":"method","name":"initialize","children":[],"call":[]}," RedmineGitHosting Patches UserPatch InstanceMethods stripped_login":{"type":"method","name":"stripped_login","children":[],"call":[" login underscore gsub "," login underscore "," login "]}," RedmineGitHosting Patches UserPatch InstanceMethods allowed_to_manage_repository?":{"type":"method","name":"allowed_to_manage_repository?","children":[],"call":["(send\n  (send nil :roles_for_project\n    (send\n      (lvar :repository) :project)) :select) empty? ! ","(send\n  (send nil :roles_for_project\n    (send\n      (lvar :repository) :project)) :select) empty? ","role allowed_to? "," roles_for_project select "," roles_for_project ","repository project "]}," RedmineGitHosting Patches SettingsControllerPatch InstanceMethods execute_post_actions":{"type":"method","name":"execute_post_actions","children":[],"call":["Settings Apply  call "]}," RedmineGitHosting Patches SettingsControllerPatch InstanceMethods handle_settings_update":{"type":"method","name":"handle_settings_update","children":[],"call":[" flash []= ","settings_form errors full_messages join ","settings_form errors full_messages ","settings_form errors "," flash "," l "," execute_post_actions ","Setting  send ","settings_form params ","@plugin id ","settings_form submit "," params [] "," params "," params [] delete ","PluginSettingsForm  new ","PluginSettingsForm  new  errors full_messages join ","PluginSettingsForm  new  errors full_messages ","PluginSettingsForm  new  errors ","PluginSettingsForm  new  params ","PluginSettingsForm  new  submit "]}," RedmineGitHosting Patches SettingsControllerPatch InstanceMethods plugin_with_git_hosting":{"type":"method","name":"plugin_with_git_hosting","children":[],"call":["Setting  send ","@plugin id ","@plugin settings [] ","@plugin settings "," redirect_to "," plugin_settings_path "," handle_settings_update "," request post? "," request "," plugin_without_git_hosting ","@plugin id == ","Redmine Plugin  find "," params [] "," params ","Redmine Plugin  find  id ","Redmine Plugin  find  settings [] ","Redmine Plugin  find  settings ","Redmine Plugin  find  id == "]}," RedmineGitHosting Patches SettingsControllerPatch InstanceMethods authors":{"type":"method","name":"authors","children":[],"call":[" render ","RedmineGitHosting  authors "," render_404 ","@plugin id == ","@plugin id ","Redmine Plugin  find "," params [] "," params ","Redmine Plugin  find  id == ","Redmine Plugin  find  id "]}," RedmineGitHosting Patches GroupPatch InstanceMethods user_removed_with_git_hosting":{"type":"method","name":"user_removed_with_git_hosting","children":[],"call":["RepositoryProtectedBranches MemberManager  new remove_user_from_group "," id ","RepositoryProtectedBranches MemberManager  new "," protected_branches each "," protected_branches "," user_removed_without_git_hosting "]}," RedmineGitHosting Patches GroupPatch InstanceMethods user_added_with_git_hosting":{"type":"method","name":"user_added_with_git_hosting","children":[],"call":["RepositoryProtectedBranches MemberManager  new add_user_from_group "," id ","RepositoryProtectedBranches MemberManager  new "," protected_branches each "," protected_branches "," user_added_without_git_hosting "]}," RedmineGitHosting Patches GroupPatch included":{"type":"method","name":"included","children":[],"call":[]}," RedmineGitHosting Patches ChangesetPatch InstanceMethods url_for_revision":{"type":"method","name":"url_for_revision","children":[],"call":["Rails  application routes url_helpers url_for ","Setting  [] "," repository identifier_param "," repository "," project ","Rails  application routes url_helpers ","Rails  application routes ","Rails  application "]}," RedmineGitHosting Patches ChangesetPatch InstanceMethods filechanges_by_action":{"type":"method","name":"filechanges_by_action","children":[],"call":["(send\n  (send nil :filechanges) :select) map ","c action == ","c action "," filechanges select "," filechanges "]}," RedmineGitHosting Patches ChangesetPatch InstanceMethods removed_files":{"type":"method","name":"removed_files","children":[],"call":[" filechanges_by_action "]}," RedmineGitHosting Patches ChangesetPatch InstanceMethods modified_files":{"type":"method","name":"modified_files","children":[],"call":[" filechanges_by_action "]}," RedmineGitHosting Patches ChangesetPatch InstanceMethods added_files":{"type":"method","name":"added_files","children":[],"call":[" filechanges_by_action "]}," RedmineGitHosting Patches ChangesetPatch InstanceMethods author_email":{"type":"method","name":"author_email","children":[],"call":["RedmineGitHosting Utils Git  author_email "," committer "]}," RedmineGitHosting Patches ChangesetPatch InstanceMethods author_name":{"type":"method","name":"author_name","children":[],"call":["RedmineGitHosting Utils Git  author_name "," committer "]}," RedmineGitHosting Patches ChangesetPatch InstanceMethods author_data":{"type":"method","name":"author_data","children":[],"call":[" author_email "," author_name "]}," RedmineGitHosting Patches ChangesetPatch InstanceMethods github_payload":{"type":"method","name":"github_payload","children":[],"call":["data []= "," url_for_revision "," revision "," removed_files "," modified_files "," added_files "," author_data "," committed_on "," comments "]}," RedmineGitHosting Patches ChangesetPatch included":{"type":"method","name":"included","children":[],"call":[]}," RedmineGitHosting MirrorKeysInstaller install_file":{"type":"method","name":"install_file","children":[],"call":["RedmineGitHosting Commands  sudo_install_file "]}," RedmineGitHosting Logger init_logs!":{"type":"method","name":"init_logs!","children":[],"call":[]}," RedmineGitHosting GitoliteWrappers Users ResyncSshKeys call":{"type":"method","name":"call","children":[],"call":[" gitolite_admin_repo_commit ","ssh_key identifier "," create_gitolite_key ","GitolitePublicKey  all each ","GitolitePublicKey  all "," admin transaction "," admin "]}," RedmineGitHosting GitoliteWrappers Users RegenerateSshKeys call":{"type":"method","name":"call","children":[],"call":[" gitolite_accessor create_ssh_key "," gitolite_accessor ","ssh_key reset_identifiers "," gitolite_accessor destroy_ssh_key ","GitolitePublicKey  all each ","GitolitePublicKey  all "]}," RedmineGitHosting GitoliteWrappers Users DeleteSshKey ssh_key":{"type":"method","name":"ssh_key","children":[],"call":[" object_id symbolize_keys "," object_id "]}," RedmineGitHosting GitoliteWrappers Users DeleteSshKey call":{"type":"method","name":"call","children":[],"call":[" gitolite_admin_repo_commit "," ssh_key [] "," ssh_key "," delete_gitolite_key "," admin transaction "," admin "," logger info "," logger "]}," RedmineGitHosting GitoliteWrappers Users AddSshKey ssh_key":{"type":"method","name":"ssh_key","children":[],"call":["GitolitePublicKey  find_by_id "," object_id ","GitolitePublicKey  find_by "]}," RedmineGitHosting GitoliteWrappers Users AddSshKey call":{"type":"method","name":"call","children":[],"call":[" gitolite_admin_repo_commit "," ssh_key identifier "," ssh_key "," create_gitolite_key "," admin transaction "," admin "," logger info "," logger "]}," RedmineGitHosting GitoliteWrappers Repositories UpdateRepository update_repository":{"type":"method","name":"update_repository","children":[],"call":[" repository fetch_changesets "," repository ","RedmineGitHosting Plugins  execute "," options "," logger info "," logger "," gitolite_admin_repo_commit "," repository gitolite_repository_name "," update_gitolite_repository "," admin transaction "," admin "]}," RedmineGitHosting GitoliteWrappers Repositories UpdateRepository repository":{"type":"method","name":"repository","children":[],"call":["Repository  find_by_id "," object_id ","Repository  find_by "]}," RedmineGitHosting GitoliteWrappers Repositories UpdateRepository call":{"type":"method","name":"call","children":[],"call":[" log_object_dont_exist "," update_repository "," repository nil? ! "," repository nil? "," repository "]}," RedmineGitHosting GitoliteWrappers Repositories MoveRepository move_repository":{"type":"method","name":"move_repository","children":[],"call":[" repository fetch_changesets "," repository "," gitolite_admin_repo_commit "," repository gitolite_repository_name "," move_gitolite_repository "," admin transaction "," admin "]}," RedmineGitHosting GitoliteWrappers Repositories MoveRepository repository":{"type":"method","name":"repository","children":[],"call":["Repository  find_by_id "," object_id ","Repository  find_by "]}," RedmineGitHosting GitoliteWrappers Repositories MoveRepository call":{"type":"method","name":"call","children":[],"call":[" log_object_dont_exist "," move_repository "," repository nil? ! "," repository nil? "," repository "]}," RedmineGitHosting GitoliteWrappers Repositories DeleteRepository delete_repository":{"type":"method","name":"delete_repository","children":[],"call":["RedmineGitHosting Plugins  execute "," repository "," logger info "," logger "," gitolite_admin_repo_commit "," repository [] "," delete_gitolite_repository "," admin transaction "," admin "]}," RedmineGitHosting GitoliteWrappers Repositories DeleteRepository repository":{"type":"method","name":"repository","children":[],"call":[" object_id symbolize_keys "," object_id "]}," RedmineGitHosting GitoliteWrappers Repositories DeleteRepository call":{"type":"method","name":"call","children":[],"call":[" log_object_dont_exist "," delete_repository "," repository empty? ! "," repository empty? "," repository "," repository nil? ! "," repository nil? "," repository present? "]}," RedmineGitHosting GitoliteWrappers Repositories AddRepository create_repository":{"type":"method","name":"create_repository","children":[],"call":[" repository fetch_changesets "," repository ","RedmineGitHosting Plugins  execute "," options merge "," options "," logger info "," logger "," repository gitolite_repository_path "," context ","@recovered ! ","RedmineGitHosting RecycleBin  restore_object_from_recycle "," repository gitolite_full_repository_path "," repository gitolite_repository_name "," gitolite_admin_repo_commit "," create_gitolite_repository "," admin transaction "," admin ","RedmineGitHosting RecycleBin  restore_object_from_recycle  ! "]}," RedmineGitHosting GitoliteWrappers Repositories AddRepository repository":{"type":"method","name":"repository","children":[],"call":["Repository  find_by_id "," object_id ","Repository  find_by "]}," RedmineGitHosting GitoliteWrappers Repositories AddRepository call":{"type":"method","name":"call","children":[],"call":[" log_object_dont_exist "," create_repository "," repository nil? ! "," repository nil? "," repository "]}," RedmineGitHosting GitoliteWrappers Projects UpdateProjects handle_project_update":{"type":"method","name":"handle_project_update","children":[],"call":[" update_gitolite_repository "," create_gitolite_repository "," options [] == "," options [] "," options ","project gitolite_repos each ","project gitolite_repos "]}," RedmineGitHosting GitoliteWrappers Projects UpdateProjects projects":{"type":"method","name":"projects","children":[],"call":["Project  find_by_id "," object_id map "," object_id ","Project  active_or_closed includes all ","Project  active_or_closed includes ","Project  active_or_closed ","Project  active includes all ","Project  active includes ","Project  active ","Project  includes all ","Project  includes ","Project  find_by "]}," RedmineGitHosting GitoliteWrappers Projects UpdateProjects git_projects":{"type":"method","name":"git_projects","children":[],"call":["p gitolite_repos any? ","p gitolite_repos "," projects uniq select "," projects uniq "," projects "]}," RedmineGitHosting GitoliteWrappers Projects UpdateProjects call":{"type":"method","name":"call","children":[],"call":[" gitolite_admin_repo_commit ","project identifier "," handle_project_update "," git_projects each "," git_projects "," admin transaction "," admin "," git_projects empty? ","project gitolite_repos any? ","project gitolite_repos "]}," RedmineGitHosting GitoliteWrappers Projects MoveRepositoriesTree projects":{"type":"method","name":"projects","children":[],"call":["x parent_id nil? ","x parent_id ","Project  includes all select ","Project  includes all ","Project  includes "]}," RedmineGitHosting GitoliteWrappers Projects MoveRepositoriesTree call":{"type":"method","name":"call","children":[],"call":[" clean_path "," handle_repositories_move ","git_projects empty? ","p gitolite_repos any? ","p gitolite_repos ","project self_and_descendants uniq select ","project self_and_descendants uniq ","project self_and_descendants "," projects each "," projects "," admin transaction "," admin "]}," RedmineGitHosting GitoliteWrappers Projects MoveRepositories projects":{"type":"method","name":"projects","children":[],"call":["Project  find_by_id self_and_descendants ","Project  find_by_id "," object_id ","Project  find_by self_and_descendants ","Project  find_by "]}," RedmineGitHosting GitoliteWrappers Projects MoveRepositories git_projects":{"type":"method","name":"git_projects","children":[],"call":["p gitolite_repos any? ","p gitolite_repos "," projects uniq select "," projects uniq "," projects "]}," RedmineGitHosting GitoliteWrappers Projects MoveRepositories call":{"type":"method","name":"call","children":[],"call":[" clean_path "," handle_repositories_move "," git_projects "," admin transaction "," admin "," git_projects empty? "]}," RedmineGitHosting GitoliteWrappers Projects Common rmdir":{"type":"method","name":"rmdir","children":[],"call":[" logger error "," context "," logger ","RedmineGitHosting Commands  sudo_rmdir "," logger info "]}," RedmineGitHosting GitoliteWrappers Projects Common clean_path":{"type":"method","name":"clean_path","children":[],"call":[" rmdir ","path_list compact uniq sort reverse each ","path_list compact uniq sort reverse ","path_list compact uniq sort ","path_list compact uniq ","path_list compact ","path_list compact uniq sort reverse_each "]}," RedmineGitHosting GitoliteWrappers Projects Common handle_repositories_move":{"type":"method","name":"handle_repositories_move","children":[],"call":[" gitolite_admin_repo_commit ","project identifier "," context ","delete_parent_path << "," move_gitolite_repository ","repo_list << ","repository gitolite_repository_name ","project gitolite_repos reverse each ","project gitolite_repos reverse ","project gitolite_repos ","projects reverse each ","projects reverse ","project gitolite_repos reverse_each ","projects reverse_each "]}," RedmineGitHosting GitoliteWrappers Global PurgeRecycleBin call":{"type":"method","name":"call","children":[],"call":["RedmineGitHosting  logger info ","RedmineGitHosting  logger ","RedmineGitHosting RecycleBin  delete_expired_content "]}," RedmineGitHosting GitoliteWrappers Global EnableRwAccess add_redmine_key":{"type":"method","name":"add_redmine_key","children":[],"call":[" repo_conf permissions [] [] [] delete "," repo_conf permissions [] [] [] "," repo_conf permissions [] [] "," repo_conf permissions [] "," repo_conf permissions "," repo_conf "," repo_conf permissions [] [] [] include? "," logger info "," context "," logger "," repo_conf permissions [] [] [] push "," redmine_gitolite_key "," users include? ! "," users include? "," users "," repo_conf permissions [] [] []= "," users nil? "," repo_conf permissions= "," rw_access_perms "," perms empty? "," perms "," users exclude? "]}," RedmineGitHosting GitoliteWrappers Global EnableRwAccess call":{"type":"method","name":"call","children":[],"call":[" gitolite_admin_repo_commit "," add_redmine_key "," admin transaction "," admin "," logger info "," context "," logger "," gitolite_config add_repo "," rw_access_config "," gitolite_config "," all_repository_config nil? "," all_repository_config "]}," RedmineGitHosting GitoliteWrappers Global DisableRwAccess remove_redmine_key":{"type":"method","name":"remove_redmine_key","children":[],"call":[" repo_conf permissions [] [] [] push "," repo_conf permissions [] [] [] "," repo_conf permissions [] [] "," repo_conf permissions [] "," repo_conf permissions "," repo_conf "," repo_conf permissions [] [] [] empty? "," repo_conf permissions [] [] [] delete "," redmine_gitolite_key "," users include? ! "," users include? "," users "," perms [] [] include? ! "," perms [] [] include? "," perms [] [] "," perms [] "," perms "," perms empty? "," perms [] [] exclude? "]}," RedmineGitHosting GitoliteWrappers Global DisableRwAccess call":{"type":"method","name":"call","children":[],"call":[" gitolite_admin_repo_commit "," remove_redmine_key "," admin transaction "," admin "," logger info "," context "," logger "," all_repository_config nil? "," all_repository_config "]}," RedmineGitHosting GitoliteWrappers Global DeleteFromRecycleBin call":{"type":"method","name":"call","children":[],"call":["RedmineGitHosting  logger info ","RedmineGitHosting  logger ","RedmineGitHosting RecycleBin  delete_content "," object_id "]}," RedmineGitHosting GitoliteWrappers Global Common users":{"type":"method","name":"users","children":[],"call":[" perms [] [] [] "," perms [] [] "," perms [] "," perms "]}," RedmineGitHosting GitoliteWrappers Global Common perms":{"type":"method","name":"perms","children":[],"call":["p has_key? "," repo_conf permissions select "," repo_conf permissions "," repo_conf ","p key? "]}," RedmineGitHosting GitoliteWrappers Global Common repo_conf":{"type":"method","name":"repo_conf","children":[],"call":[" all_repository_config "]}," RedmineGitHosting GitoliteWrappers Global Common rw_access_perms":{"type":"method","name":"rw_access_perms","children":[],"call":["permissions [] []= "," redmine_gitolite_key ","permissions [] ","permissions []= "]}," RedmineGitHosting GitoliteWrappers Global Common rw_access_config":{"type":"method","name":"rw_access_config","children":[],"call":["repo_conf permissions= "," rw_access_perms "," Gitolite Config Repo  new "," all_repository "," Gitolite Config Repo  new  permissions= "]}," RedmineGitHosting GitoliteWrappers Global Common all_repository_config":{"type":"method","name":"all_repository_config","children":[],"call":[" gitolite_config repos [] "," all_repository "," gitolite_config repos "," gitolite_config "]}," RedmineGitHosting GitoliteWrappers Global Common all_repository":{"type":"method","name":"all_repository","children":[],"call":[]}," RedmineGitHosting GitoliteWrappers Global Common redmine_gitolite_key":{"type":"method","name":"redmine_gitolite_key","children":[],"call":[]}," RedmineGitHosting GitoliteWrappers Base log_object_dont_exist":{"type":"method","name":"log_object_dont_exist","children":[],"call":[" logger error "," context "," logger "]}," RedmineGitHosting GitoliteWrappers Base logger":{"type":"method","name":"logger","children":[],"call":["RedmineGitHosting  logger "]}," RedmineGitHosting GitoliteWrappers Base context":{"type":"method","name":"context","children":[],"call":[" class name demodulize underscore "," class name demodulize "," class name "," class "]}," RedmineGitHosting GitoliteWrappers Base delete_gitolite_key":{"type":"method","name":"delete_gitolite_key","children":[],"call":["GitoliteHandlers SshKeys DeleteSshKey  call "," context "," admin "]}," RedmineGitHosting GitoliteWrappers Base create_gitolite_key":{"type":"method","name":"create_gitolite_key","children":[],"call":["GitoliteHandlers SshKeys AddSshKey  call "," context "," admin "]}," RedmineGitHosting GitoliteWrappers Base move_gitolite_repository":{"type":"method","name":"move_gitolite_repository","children":[],"call":["GitoliteHandlers Repositories MoveRepository  call "," options "," context "," gitolite_config "]}," RedmineGitHosting GitoliteWrappers Base delete_gitolite_repository":{"type":"method","name":"delete_gitolite_repository","children":[],"call":["GitoliteHandlers Repositories DeleteRepository  call "," options "," context "," gitolite_config "]}," RedmineGitHosting GitoliteWrappers Base update_gitolite_repository":{"type":"method","name":"update_gitolite_repository","children":[],"call":["GitoliteHandlers Repositories UpdateRepository  call "," options "," context "," gitolite_config "]}," RedmineGitHosting GitoliteWrappers Base create_gitolite_repository":{"type":"method","name":"create_gitolite_repository","children":[],"call":["GitoliteHandlers Repositories AddRepository  call "," options "," context "," gitolite_config "]}," RedmineGitHosting GitoliteWrappers Base gitolite_admin_repo_commit":{"type":"method","name":"gitolite_admin_repo_commit","children":[],"call":[" logger error ","e message "," logger "," admin save "," context "," admin "," logger info "]}," RedmineGitHosting GitoliteWrappers Base call":{"type":"method","name":"call","children":[],"call":[" raise "," new call "," new "]}," RedmineGitHosting GitoliteWrappers Base find_by_action_name":{"type":"method","name":"find_by_action_name","children":[],"call":[" raise ","RedmineGitHosting Error GitoliteWrapperException  new "," wrappers [] "," wrappers "," wrappers has_key? "," wrappers key? "]}," RedmineGitHosting GitoliteWrappers Base wrappers":{"type":"method","name":"wrappers","children":[],"call":[]}," RedmineGitHosting GitoliteWrappers Base inherited":{"type":"method","name":"inherited","children":[],"call":["@wrappers []= ","klass name demodulize underscore to_sym ","klass name demodulize underscore ","klass name demodulize ","klass name "]}," RedmineGitHosting GitoliteWrappers Base initialize":{"type":"method","name":"initialize","children":[],"call":["admin config "]}," RedmineGitHosting GitoliteWrapper execute_action":{"type":"method","name":"execute_action","children":[],"call":[" call_gitolite_wrapper "," logger error ","e message "," logger "," gitolite_admin_dir "," gitolite_admin "," gitolite_ gitolite_admin _dir "," gitolite_ gitolite_admin  "]}," RedmineGitHosting GitoliteHandlers SshKeys DeleteSshKey call":{"type":"method","name":"call","children":[],"call":[" logger info "," key [] "," key "," context "," logger "," admin rm_key "," admin "," find_gitolite_key "]}," RedmineGitHosting GitoliteHandlers SshKeys Base build_gitolite_key":{"type":"method","name":"build_gitolite_key","children":[],"call":[" Gitolite SSHKey  new ","key location ","key owner ","key email ","key blob ","key type "]}," RedmineGitHosting GitoliteHandlers SshKeys Base find_gitolite_key":{"type":"method","name":"find_gitolite_key","children":[],"call":["(send\n  (send\n    (send\n      (send nil :admin) :ssh_keys) :[]\n    (lvar :owner)) :find_all) first ","k owner == ","k owner ","k location == ","k location "," admin ssh_keys [] find_all "," admin ssh_keys [] "," admin ssh_keys "," admin "," admin ssh_keys [] find "]}," RedmineGitHosting GitoliteHandlers SshKeys Base logger":{"type":"method","name":"logger","children":[],"call":["RedmineGitHosting  logger "]}," RedmineGitHosting GitoliteHandlers SshKeys Base call":{"type":"method","name":"call","children":[],"call":[" raise "," new call "," new "]}," RedmineGitHosting GitoliteHandlers SshKeys Base initialize":{"type":"method","name":"initialize","children":[],"call":[]}," RedmineGitHosting GitoliteHandlers SshKeys AddSshKey call":{"type":"method","name":"call","children":[],"call":["repo_key location= "," key location "," key ","repo_key owner= "," key owner ","repo_key email= "," key email ","repo_key blob= "," key blob ","repo_key type= "," key type "," logger info "," context "," logger "," admin add_key "," build_gitolite_key "," admin ","repo_key nil? "," find_gitolite_key "," find_gitolite_key  location= "," find_gitolite_key  owner= "," find_gitolite_key  email= "," find_gitolite_key  blob= "," find_gitolite_key  type= "," find_gitolite_key  nil? "]}," RedmineGitHosting GitoliteHandlers Repositories UpdateRepository gitolite_repo_path":{"type":"method","name":"gitolite_repo_path","children":[],"call":[" repository gitolite_repository_path "," repository "]}," RedmineGitHosting GitoliteHandlers Repositories UpdateRepository gitolite_repo_name":{"type":"method","name":"gitolite_repo_name","children":[],"call":[" repository gitolite_repository_name "," repository "]}," RedmineGitHosting GitoliteHandlers Repositories UpdateRepository call":{"type":"method","name":"call","children":[],"call":[" log_repo_not_exist "," update_repository_config "," log_ok_and_continue "," configuration_exists? "]}," RedmineGitHosting GitoliteHandlers Repositories MoveRepository create_parent_directory":{"type":"method","name":"create_parent_directory","children":[],"call":[" logger error "," context "," logger ","RedmineGitHosting Commands  sudo_mkdir_p "]}," RedmineGitHosting GitoliteHandlers Repositories MoveRepository directory_exists?":{"type":"method","name":"directory_exists?","children":[],"call":["RedmineGitHosting Commands  sudo_dir_exists? "]}," RedmineGitHosting GitoliteHandlers Repositories MoveRepository empty_repository?":{"type":"method","name":"empty_repository?","children":[],"call":["RedmineGitHosting Commands  sudo_repository_empty? "]}," RedmineGitHosting GitoliteHandlers Repositories MoveRepository delete_directory!":{"type":"method","name":"delete_directory!","children":[],"call":[" logger error "," context "," logger ","RedmineGitHosting Commands  sudo_rm_rf "]}," RedmineGitHosting GitoliteHandlers Repositories MoveRepository move_physical_repo_case_2":{"type":"method","name":"move_physical_repo_case_2","children":[],"call":[" logger info "," context "," logger "," logger error ","RedmineGitHosting Commands  sudo_move "," create_parent_directory "," directory_exists? ! "," directory_exists? "," logger debug "]}," RedmineGitHosting GitoliteHandlers Repositories MoveRepository move_physical_repo_case_1":{"type":"method","name":"move_physical_repo_case_1","children":[],"call":[" logger error "," context "," logger "," delete_directory! "," empty_repository? "," logger warn "]}," RedmineGitHosting GitoliteHandlers Repositories MoveRepository move_physical_repo":{"type":"method","name":"move_physical_repo","children":[],"call":[" logger error "," context "," logger ","old_path_exists ! ","new_path_exists ! "," move_physical_repo_case_2 "," move_physical_repo_case_1 "," directory_exists? "," logger info ","old_path == "," directory_exists?  ! "]}," RedmineGitHosting GitoliteHandlers Repositories MoveRepository debug_output":{"type":"method","name":"debug_output","children":[],"call":[" logger debug "," new_relative_parent_path "," context "," logger "," old_relative_parent_path "," new_relative_path "," old_relative_path "," new_repo_name "," old_repo_name "]}," RedmineGitHosting GitoliteHandlers Repositories MoveRepository new_relative_parent_path":{"type":"method","name":"new_relative_parent_path","children":[],"call":[" new_relative_path gsub "," repo_id + "," repo_id "," new_relative_path "]}," RedmineGitHosting GitoliteHandlers Repositories MoveRepository old_relative_parent_path":{"type":"method","name":"old_relative_parent_path","children":[],"call":[" old_relative_path gsub "," repo_id + "," repo_id "," old_relative_path "]}," RedmineGitHosting GitoliteHandlers Repositories MoveRepository new_relative_path":{"type":"method","name":"new_relative_path","children":[],"call":[" repository gitolite_repository_path "," repository "]}," RedmineGitHosting GitoliteHandlers Repositories MoveRepository old_relative_path":{"type":"method","name":"old_relative_path","children":[],"call":[" repository url "," repository "]}," RedmineGitHosting GitoliteHandlers Repositories MoveRepository new_repo_name":{"type":"method","name":"new_repo_name","children":[],"call":[" repository new_repository_name "," repository "]}," RedmineGitHosting GitoliteHandlers Repositories MoveRepository old_repo_name":{"type":"method","name":"old_repo_name","children":[],"call":[" repository old_repository_name "," repository "]}," RedmineGitHosting GitoliteHandlers Repositories MoveRepository repo_id":{"type":"method","name":"repo_id","children":[],"call":[" repository redmine_name "," repository "]}," RedmineGitHosting GitoliteHandlers Repositories MoveRepository gitolite_repo_conf":{"type":"method","name":"gitolite_repo_conf","children":[],"call":[" gitolite_config repos [] "," old_repo_name "," gitolite_config repos "," gitolite_config "]}," RedmineGitHosting GitoliteHandlers Repositories MoveRepository update_gitolite":{"type":"method","name":"update_gitolite","children":[],"call":["AddRepository  call "," context "," repository "," gitolite_config "," gitolite_config rm_repo "," old_repo_name "," repository backup_gitolite_permissions "," gitolite_repo_conf permissions [] "," gitolite_repo_conf permissions "," gitolite_repo_conf "]}," RedmineGitHosting GitoliteHandlers Repositories MoveRepository update_repository_fields":{"type":"method","name":"update_repository_fields","children":[],"call":[" repository update_column "," new_relative_path "," repository "]}," RedmineGitHosting GitoliteHandlers Repositories MoveRepository perform_repository_move":{"type":"method","name":"perform_repository_move","children":[],"call":[" old_relative_parent_path "," update_gitolite "," update_repository_fields "," move_physical_repo "," new_relative_parent_path "," new_relative_path "," old_relative_path "," debug_output "," logger info "," new_repo_name "," old_repo_name "," context "," logger "]}," RedmineGitHosting GitoliteHandlers Repositories MoveRepository call":{"type":"method","name":"call","children":[],"call":[" logger error "," old_repo_name "," context "," logger "," perform_repository_move "," configuration_exists? "]}," RedmineGitHosting GitoliteHandlers Repositories DeleteRepository gitolite_repo_path":{"type":"method","name":"gitolite_repo_path","children":[],"call":[" repository [] "," repository "]}," RedmineGitHosting GitoliteHandlers Repositories DeleteRepository gitolite_repo_name":{"type":"method","name":"gitolite_repo_name","children":[],"call":[" repository [] "," repository "]}," RedmineGitHosting GitoliteHandlers Repositories DeleteRepository call":{"type":"method","name":"call","children":[],"call":[" log_repo_not_exist "," delete_repository_config "," log_ok_and_continue "," configuration_exists? "]}," RedmineGitHosting GitoliteHandlers Repositories Base log_repo_already_exist":{"type":"method","name":"log_repo_already_exist","children":[],"call":[" logger debug "," gitolite_repo_path "," context "," logger "," logger warn "," gitolite_repo_name "]}," RedmineGitHosting GitoliteHandlers Repositories Base log_repo_not_exist":{"type":"method","name":"log_repo_not_exist","children":[],"call":[" logger debug "," gitolite_repo_path "," context "," logger "," logger warn "," gitolite_repo_name "]}," RedmineGitHosting GitoliteHandlers Repositories Base log_ok_and_continue":{"type":"method","name":"log_ok_and_continue","children":[],"call":[" logger debug "," gitolite_repo_path "," context "," logger "," logger info "," gitolite_repo_name "]}," RedmineGitHosting GitoliteHandlers Repositories Base build_repository_config":{"type":"method","name":"build_repository_config","children":[],"call":["repo_conf set_gitolite_option "," repository gitolite_options each "," repository gitolite_options "," repository ","repo_conf set_git_config "," repository git_config each "," repository git_config "," Gitolite Config Repo  new "," repository gitolite_repository_name "," Gitolite Config Repo  new  set_gitolite_option "," Gitolite Config Repo  new  set_git_config "]}," RedmineGitHosting GitoliteHandlers Repositories Base recreate_repository_config":{"type":"method","name":"recreate_repository_config","children":[],"call":[" create_repository_config "," delete_repository_config "," backup_old_perms "]}," RedmineGitHosting GitoliteHandlers Repositories Base delete_repository_config":{"type":"method","name":"delete_repository_config","children":[],"call":[" gitolite_config rm_repo "," gitolite_repo_name "," gitolite_config "]}," RedmineGitHosting GitoliteHandlers Repositories Base update_repository_config":{"type":"method","name":"update_repository_config","children":[],"call":[" recreate_repository_config "]}," RedmineGitHosting GitoliteHandlers Repositories Base create_repository_config":{"type":"method","name":"create_repository_config","children":[],"call":[" gitolite_config add_repo "," gitolite_config ","repo_conf permissions= "," repository build_gitolite_permissions "," repository "," build_repository_config "," build_repository_config  permissions= "]}," RedmineGitHosting GitoliteHandlers Repositories Base gitolite_repo_conf":{"type":"method","name":"gitolite_repo_conf","children":[],"call":[" gitolite_config repos [] "," gitolite_repo_name "," gitolite_config repos "," gitolite_config "]}," RedmineGitHosting GitoliteHandlers Repositories Base configuration_exists?":{"type":"method","name":"configuration_exists?","children":[],"call":[" gitolite_repo_conf nil? ! "," gitolite_repo_conf nil? "," gitolite_repo_conf "]}," RedmineGitHosting GitoliteHandlers Repositories Base backup_old_perms":{"type":"method","name":"backup_old_perms","children":[],"call":[" repository backup_gitolite_permissions "," gitolite_repo_conf permissions [] "," gitolite_repo_conf permissions "," gitolite_repo_conf "," repository "]}," RedmineGitHosting GitoliteHandlers Repositories Base logger":{"type":"method","name":"logger","children":[],"call":["RedmineGitHosting  logger "]}," RedmineGitHosting GitoliteHandlers Repositories Base call":{"type":"method","name":"call","children":[],"call":[" raise "," new call "," new "]}," RedmineGitHosting GitoliteHandlers Repositories Base initialize":{"type":"method","name":"initialize","children":[],"call":["options dup "]}," RedmineGitHosting GitoliteHandlers Repositories AddRepository initialize":{"type":"method","name":"initialize","children":[],"call":[" options delete "," options ","@options delete "]}," RedmineGitHosting GitoliteHandlers Repositories AddRepository gitolite_repo_path":{"type":"method","name":"gitolite_repo_path","children":[],"call":[" repository gitolite_repository_path "," repository "]}," RedmineGitHosting GitoliteHandlers Repositories AddRepository gitolite_repo_name":{"type":"method","name":"gitolite_repo_name","children":[],"call":[" repository gitolite_repository_name "," repository "]}," RedmineGitHosting GitoliteHandlers Repositories AddRepository call":{"type":"method","name":"call","children":[],"call":[" log_repo_already_exist "," recreate_repository_config "," force "," configuration_exists? "," create_repository_config "," log_repo_not_exist "," configuration_exists? ! "]}," RedmineGitHosting GitoliteAccessor resync_gitolite":{"type":"method","name":"resync_gitolite","children":[],"call":["GitoliteWrapper  resync_gitolite ","GithostingShellWorker  perform_async ","bypass ! ","RedmineGitHosting Config  gitolite_use_sidekiq? ","options [] == ","options [] ","options has_key? ","GithostingShellWorker  maybe_do ","RedmineGitHosting Config  sidekiq_available? ","options key? "]}," RedmineGitHosting GitoliteAccessor logger":{"type":"method","name":"logger","children":[],"call":["RedmineGitHosting  logger "]}," RedmineGitHosting GitoliteAccessor disable_rw_access":{"type":"method","name":"disable_rw_access","children":[],"call":[" resync_gitolite "," logger info "," logger "]}," RedmineGitHosting GitoliteAccessor enable_rw_access":{"type":"method","name":"enable_rw_access","children":[],"call":[" resync_gitolite "," logger info "," logger "]}," RedmineGitHosting GitoliteAccessor flush_settings_cache":{"type":"method","name":"flush_settings_cache","children":[],"call":[" resync_gitolite "]}," RedmineGitHosting GitoliteAccessor flush_git_cache":{"type":"method","name":"flush_git_cache","children":[],"call":["RedmineGitHosting Cache  flush_cache! "," logger info "," logger "]}," RedmineGitHosting GitoliteAccessor delete_from_recycle_bin":{"type":"method","name":"delete_from_recycle_bin","children":[],"call":[" resync_gitolite "]}," RedmineGitHosting GitoliteAccessor purge_recycle_bin":{"type":"method","name":"purge_recycle_bin","children":[],"call":[" resync_gitolite "]}," RedmineGitHosting GitoliteAccessor move_repositories_tree":{"type":"method","name":"move_repositories_tree","children":[],"call":[" resync_gitolite "," logger info "," logger "]}," RedmineGitHosting GitoliteAccessor move_project_hierarchy":{"type":"method","name":"move_project_hierarchy","children":[],"call":[" resync_gitolite ","project id "," logger info "," logger "]}," RedmineGitHosting GitoliteAccessor update_projects":{"type":"method","name":"update_projects","children":[],"call":[" resync_gitolite "," logger info "," logger ","opts delete "]}," RedmineGitHosting GitoliteAccessor destroy_repositories":{"type":"method","name":"destroy_repositories","children":[],"call":[" resync_gitolite ","repositories each "," logger info "," logger ","opts delete "]}," RedmineGitHosting GitoliteAccessor destroy_repository":{"type":"method","name":"destroy_repository","children":[],"call":[" resync_gitolite ","repository data_for_destruction "," logger info ","repository gitolite_repository_name ","User  current login ","User  current "," logger "]}," RedmineGitHosting GitoliteAccessor move_repository":{"type":"method","name":"move_repository","children":[],"call":[" resync_gitolite ","repository id "," logger info ","repository gitolite_repository_name ","User  current login ","User  current "," logger "]}," RedmineGitHosting GitoliteAccessor update_repository":{"type":"method","name":"update_repository","children":[],"call":[" resync_gitolite ","repository id "," logger info ","repository gitolite_repository_name ","User  current login ","User  current "," logger "]}," RedmineGitHosting GitoliteAccessor create_repository":{"type":"method","name":"create_repository","children":[],"call":[" resync_gitolite ","repository id "," logger info ","repository gitolite_repository_name ","User  current login ","User  current "," logger "]}," RedmineGitHosting GitoliteAccessor regenerate_ssh_keys":{"type":"method","name":"regenerate_ssh_keys","children":[],"call":[" resync_gitolite "," logger info "," logger "]}," RedmineGitHosting GitoliteAccessor resync_ssh_keys":{"type":"method","name":"resync_ssh_keys","children":[],"call":[" resync_gitolite "," logger info "," logger "]}," RedmineGitHosting GitoliteAccessor destroy_ssh_key":{"type":"method","name":"destroy_ssh_key","children":[],"call":[" resync_gitolite "," logger info ","User  current login ","User  current "," logger ","ssh_key data_for_destruction ","ssh_key is_a? ","ssh_key data_for_destruction  data_for_destruction ","ssh_key data_for_destruction  is_a? "]}," RedmineGitHosting GitoliteAccessor create_ssh_key":{"type":"method","name":"create_ssh_key","children":[],"call":[" resync_gitolite ","ssh_key id "," logger info ","User  current login ","User  current "," logger "]}," RedmineGitHosting GitoliteAccessor Methods gitolite_accessor":{"type":"method","name":"gitolite_accessor","children":[],"call":[]}," RedmineGitHosting ConsoleLogger logger":{"type":"method","name":"logger","children":[],"call":["RedmineGitHosting  logger "]}," RedmineGitHosting ConsoleLogger error":{"type":"method","name":"error","children":[],"call":[" logger error ","message strip "," logger "," puts "," to_console "]}," RedmineGitHosting ConsoleLogger warn":{"type":"method","name":"warn","children":[],"call":[" logger warn "," message strip "," message "," logger "," puts "," to_console "]}," RedmineGitHosting ConsoleLogger info":{"type":"method","name":"info","children":[],"call":[" logger info ","message strip "," logger "," puts "," to_console "]}," RedmineGitHosting ConsoleLogger debug":{"type":"method","name":"debug","children":[],"call":[" logger debug ","message strip "," logger "," puts "," to_console "]}," RedmineGitHosting ConsoleLogger title":{"type":"method","name":"title","children":[],"call":[" info "," block_given? "]}," RedmineGitHosting Config RedmineConfig gitolite_recycle_bin_expiration_time":{"type":"method","name":"gitolite_recycle_bin_expiration_time","children":[],"call":["(send\n  (send\n    (send nil :get_setting\n      (sym :gitolite_recycle_bin_expiration_time)) :to_f) :*\n  (int 60)) to_i "," get_setting to_f * "," get_setting to_f "," get_setting "]}," RedmineGitHosting Config RedmineConfig delete_git_repositories?":{"type":"method","name":"delete_git_repositories?","children":[],"call":[" get_setting "]}," RedmineGitHosting Config RedmineConfig download_revision_enabled?":{"type":"method","name":"download_revision_enabled?","children":[],"call":[" get_setting "]}," RedmineGitHosting Config RedmineConfig show_repositories_url?":{"type":"method","name":"show_repositories_url?","children":[],"call":[" get_setting "]}," RedmineGitHosting Config RedmineConfig init_repositories_on_create?":{"type":"method","name":"init_repositories_on_create?","children":[],"call":[" get_setting "]}," RedmineGitHosting Config RedmineConfig all_projects_use_git?":{"type":"method","name":"all_projects_use_git?","children":[],"call":[" get_setting "]}," RedmineGitHosting Config RedmineConfig unique_repo_identifier?":{"type":"method","name":"unique_repo_identifier?","children":[],"call":[" get_setting "]}," RedmineGitHosting Config RedmineConfig hierarchical_organisation?":{"type":"method","name":"hierarchical_organisation?","children":[],"call":[" get_setting "]}," RedmineGitHosting Config RedmineConfig gitolite_use_sidekiq?":{"type":"method","name":"gitolite_use_sidekiq?","children":[],"call":[" get_setting "]}," RedmineGitHosting Config Mirroring gitolite_mirroring_script":{"type":"method","name":"gitolite_mirroring_script","children":[],"call":["File  join "," gitolite_home_dir "]}," RedmineGitHosting Config Mirroring mirroring_keys_installed?":{"type":"method","name":"mirroring_keys_installed?","children":[],"call":["MirrorKeysInstaller  new installed? ","MirrorKeysInstaller  new "," gitolite_ssh_private_key "," gitolite_ssh_public_key "," gitolite_home_dir "]}," RedmineGitHosting Config Mirroring mirroring_public_key":{"type":"method","name":"mirroring_public_key","children":[],"call":["MirrorKeysInstaller  mirroring_public_key "," gitolite_ssh_public_key "]}," RedmineGitHosting Config GitoliteStorage recycle_bin_dir":{"type":"method","name":"recycle_bin_dir","children":[],"call":["File  join "," gitolite_recycle_bin_dir "," gitolite_home_dir "]}," RedmineGitHosting Config GitoliteStorage gitolite_recycle_bin_dir":{"type":"method","name":"gitolite_recycle_bin_dir","children":[],"call":[" get_setting "]}," RedmineGitHosting Config GitoliteStorage gitolite_redmine_storage_dir":{"type":"method","name":"gitolite_redmine_storage_dir","children":[],"call":[" get_setting "]}," RedmineGitHosting Config GitoliteStorage gitolite_global_storage_dir":{"type":"method","name":"gitolite_global_storage_dir","children":[],"call":[" get_setting "]}," RedmineGitHosting Config GitoliteNotifications gitolite_notify_global_exclude":{"type":"method","name":"gitolite_notify_global_exclude","children":[],"call":[" get_setting "]}," RedmineGitHosting Config GitoliteNotifications gitolite_notify_global_include":{"type":"method","name":"gitolite_notify_global_include","children":[],"call":[" get_setting "]}," RedmineGitHosting Config GitoliteNotifications gitolite_notify_global_sender_address":{"type":"method","name":"gitolite_notify_global_sender_address","children":[],"call":[" get_setting "]}," RedmineGitHosting Config GitoliteNotifications gitolite_notify_global_prefix":{"type":"method","name":"gitolite_notify_global_prefix","children":[],"call":[" get_setting "]}," RedmineGitHosting Config GitoliteInfos gitolite_repository_count":{"type":"method","name":"gitolite_repository_count","children":[],"call":[" file_logger error "," file_logger ","RedmineGitHosting Commands  gitolite_repository_count "," file_logger debug "," gitolite_version != "," gitolite_version "]}," RedmineGitHosting Config GitoliteInfos gitolite_command":{"type":"method","name":"gitolite_command","children":[],"call":[" gitolite_version == "," gitolite_version "]}," RedmineGitHosting Config GitoliteInfos find_version":{"type":"method","name":"find_version","children":[],"call":["line include? ","line =~ ","output split [] ","output split ","output blank? ","(str \"gitolite[ -]v?2.\") match? ","output split []  include? ","output split []  =~ "]}," RedmineGitHosting Config GitoliteInfos gitolite_banner":{"type":"method","name":"gitolite_banner","children":[],"call":[" gitolite_infos "," file_logger debug "," file_logger "]}," RedmineGitHosting Config GitoliteInfos gitolite_version":{"type":"method","name":"gitolite_version","children":[],"call":[" find_version "," gitolite_infos "," file_logger debug "," file_logger "]}," RedmineGitHosting Config GitoliteInfos gitolite_infos":{"type":"method","name":"gitolite_infos","children":[],"call":[" file_logger error "," file_logger ","RedmineGitHosting Commands  gitolite_infos "]}," RedmineGitHosting Config GitoliteInfos libgit2_version":{"type":"method","name":"libgit2_version","children":[],"call":["Rugged  libgit2_version join ","Rugged  libgit2_version "]}," RedmineGitHosting Config GitoliteInfos rugged_mandatory_features":{"type":"method","name":"rugged_mandatory_features","children":[],"call":[]}," RedmineGitHosting Config GitoliteInfos rugged_features":{"type":"method","name":"rugged_features","children":[],"call":["Rugged  features "]}," RedmineGitHosting Config GitoliteHooks update_hook_params!":{"type":"method","name":"update_hook_params!","children":[],"call":["RedmineGitHosting GitoliteParams GlobalParams  new install! ","RedmineGitHosting GitoliteParams GlobalParams  new "]}," RedmineGitHosting Config GitoliteHooks install_hooks!":{"type":"method","name":"install_hooks!","children":[],"call":["RedmineGitHosting GitoliteParams MailerParams  new install! ","RedmineGitHosting GitoliteParams MailerParams  new ","RedmineGitHosting GitoliteParams GlobalParams  new install! ","RedmineGitHosting GitoliteParams GlobalParams  new ","RedmineGitHosting GitoliteHooks  install_hooks! "]}," RedmineGitHosting Config GitoliteHooks check_hooks_install!":{"type":"method","name":"check_hooks_install!","children":[],"call":["RedmineGitHosting GitoliteParams MailerParams  new installed? ","RedmineGitHosting GitoliteParams MailerParams  new ","RedmineGitHosting GitoliteParams GlobalParams  new installed? ","RedmineGitHosting GitoliteParams GlobalParams  new ","RedmineGitHosting GitoliteHooks  hooks_installed? "]}," RedmineGitHosting Config GitoliteHooks gitolite_hooks_dir":{"type":"method","name":"gitolite_hooks_dir","children":[],"call":["File  join "," gitolite_home_dir "," gitolite_local_code_dir "," gitolite_version == "," gitolite_version "]}," RedmineGitHosting Config GitoliteHooks gitolite_local_code_dir":{"type":"method","name":"gitolite_local_code_dir","children":[],"call":[" get_setting ","RedmineGitHosting Commands  sudo_gitolite_query_rc "]}," RedmineGitHosting Config GitoliteHooks gitolite_overwrite_existing_hooks?":{"type":"method","name":"gitolite_overwrite_existing_hooks?","children":[],"call":[" get_setting "]}," RedmineGitHosting Config GitoliteHooks gitolite_hooks_are_asynchronous":{"type":"method","name":"gitolite_hooks_are_asynchronous","children":[],"call":[" get_setting "]}," RedmineGitHosting Config GitoliteHooks gitolite_hooks_debug":{"type":"method","name":"gitolite_hooks_debug","children":[],"call":[" get_setting "]}," RedmineGitHosting Config GitoliteHooks gitolite_hooks_url":{"type":"method","name":"gitolite_hooks_url","children":[],"call":["(send nil :get_setting\n  (sym :gitolite_hooks_url)) join "," get_setting "]}," RedmineGitHosting Config GitoliteHooks gitolite_hooks_namespace":{"type":"method","name":"gitolite_hooks_namespace","children":[],"call":[]}," RedmineGitHosting Config GitoliteConfigTests execute_sudo_test":{"type":"method","name":"execute_sudo_test","children":[],"call":["test match "," block_given? ","(begin\n  (lvar :user)) match? "]}," RedmineGitHosting Config GitoliteConfigTests can_redmine_sudo_to_gitolite_user?":{"type":"method","name":"can_redmine_sudo_to_gitolite_user?","children":[],"call":[" file_logger error "," file_logger "," file_logger info ","RedmineGitHosting Commands  sudo_capture "," execute_sudo_test "," gitolite_user "," redmine_user "," gitolite_user == "," gitolite_use_sudo? "]}," RedmineGitHosting Config GitoliteConfigTests temp_dir_writeable?":{"type":"method","name":"temp_dir_writeable?","children":[],"call":["FileUtils  rm ","FileUtils  touch ","File  directory? ! ","File  directory? "," create_temp_dir ","File  join "," file_logger debug "," file_logger ","@temp_dir_writeable ! ","opts [] == ","opts [] ","opts has_key? ","opts key? "]}," RedmineGitHosting Config GitoliteConfigTests create_temp_dir":{"type":"method","name":"create_temp_dir","children":[],"call":[" file_logger error "," file_logger ","FileUtils  chmod ","FileUtils  mkdir_p "," file_logger info ","File  directory? ! ","File  directory? "," gitolite_admin_dir "," gitolite_temp_dir ","@previous_temp_dir_path != "," gitolite_temp_dir  != "]}," RedmineGitHosting Config GitoliteCache gitolite_cache_adapter":{"type":"method","name":"gitolite_cache_adapter","children":[],"call":[" get_setting "]}," RedmineGitHosting Config GitoliteCache gitolite_cache_max_size":{"type":"method","name":"gitolite_cache_max_size","children":[],"call":[" get_setting to_i * * "," get_setting to_i * "," get_setting to_i "," get_setting "]}," RedmineGitHosting Config GitoliteCache gitolite_cache_max_elements":{"type":"method","name":"gitolite_cache_max_elements","children":[],"call":[" get_setting to_i "," get_setting "]}," RedmineGitHosting Config GitoliteCache gitolite_cache_max_time":{"type":"method","name":"gitolite_cache_max_time","children":[],"call":[" get_setting to_i "," get_setting "]}," RedmineGitHosting Config GitoliteBase gitolite_log_level":{"type":"method","name":"gitolite_log_level","children":[],"call":[" get_setting "]}," RedmineGitHosting Config GitoliteBase gitolite_admin_dir":{"type":"method","name":"gitolite_admin_dir","children":[],"call":["File  join "," gitolite_user "," gitolite_temp_dir "]}," RedmineGitHosting Config GitoliteBase gitolite_url":{"type":"method","name":"gitolite_url","children":[],"call":["(send nil :gitolite_user) join "," gitolite_server_host "," gitolite_user "]}," RedmineGitHosting Config GitoliteBase gitolite_temp_dir":{"type":"method","name":"gitolite_temp_dir","children":[],"call":[" get_setting "]}," RedmineGitHosting Config GitoliteBase git_config_email":{"type":"method","name":"git_config_email","children":[],"call":[" get_setting "]}," RedmineGitHosting Config GitoliteBase git_config_username":{"type":"method","name":"git_config_username","children":[],"call":[" get_setting "]}," RedmineGitHosting Config GitoliteBase gitolite_key_subdir":{"type":"method","name":"gitolite_key_subdir","children":[],"call":[]}," RedmineGitHosting Config GitoliteBase gitolite_identifier_strip_user_id?":{"type":"method","name":"gitolite_identifier_strip_user_id?","children":[],"call":[" get_setting "]}," RedmineGitHosting Config GitoliteBase gitolite_identifier_prefix":{"type":"method","name":"gitolite_identifier_prefix","children":[],"call":[" get_setting "]}," RedmineGitHosting Config GitoliteBase gitolite_config_dir":{"type":"method","name":"gitolite_config_dir","children":[],"call":["File  join ","dirs [] != ","dirs [] ","File  dirname split ","File  dirname "," gitolite_config_file ","dirs [] == ","File  dirname split  [] != ","File  dirname split  [] ","File  dirname split  [] == "]}," RedmineGitHosting Config GitoliteBase gitolite_config_file":{"type":"method","name":"gitolite_config_file","children":[],"call":["File  basename "," get_setting "]}," RedmineGitHosting Config GitoliteBase gitolite_ssh_public_key_fingerprint":{"type":"method","name":"gitolite_ssh_public_key_fingerprint","children":[],"call":["RedmineGitHosting Utils Ssh  ssh_fingerprint ","File  read "," gitolite_ssh_public_key "]}," RedmineGitHosting Config GitoliteBase gitolite_ssh_public_key":{"type":"method","name":"gitolite_ssh_public_key","children":[],"call":[" get_setting "]}," RedmineGitHosting Config GitoliteBase gitolite_ssh_private_key":{"type":"method","name":"gitolite_ssh_private_key","children":[],"call":[" get_setting "]}," RedmineGitHosting Config GitoliteBase gitolite_server_port":{"type":"method","name":"gitolite_server_port","children":[],"call":[" get_setting "]}," RedmineGitHosting Config GitoliteBase gitolite_server_host":{"type":"method","name":"gitolite_server_host","children":[],"call":[" get_setting "]}," RedmineGitHosting Config GitoliteBase gitolite_user":{"type":"method","name":"gitolite_user","children":[],"call":[" get_setting "]}," RedmineGitHosting Config GitoliteBase gitolite_lib_dir_path":{"type":"method","name":"gitolite_lib_dir_path","children":[],"call":["File  join "," gitolite_lib_dir "," gitolite_home_dir "," gitolite_lib_dir starts_with? "]}," RedmineGitHosting Config GitoliteBase gitolite_lib_dir":{"type":"method","name":"gitolite_lib_dir","children":[],"call":[" get_setting ","RedmineGitHosting Commands  sudo_gitolite_query_rc chomp ","RedmineGitHosting Commands  sudo_gitolite_query_rc "]}," RedmineGitHosting Config GitoliteBase gitolite_home_dir":{"type":"method","name":"gitolite_home_dir","children":[],"call":["Etc  getpwnam dir ","Etc  getpwnam "," gitolite_user "]}," RedmineGitHosting Config GitoliteBase redmine_user":{"type":"method","name":"redmine_user","children":[],"call":["(xstr\n  (str \"whoami\")) chomp strip ","(xstr\n  (str \"whoami\")) chomp ","(str \"whoami\") chomp strip ","(str \"whoami\") chomp "]}," RedmineGitHosting Config GitoliteBase check_cache":{"type":"method","name":"check_cache","children":[],"call":[]}," RedmineGitHosting Config GitoliteAccess my_root_url":{"type":"method","name":"my_root_url","children":[],"call":["File  join [] ","File  join "," redmine_root_url ","server_domain [] "," http_server_domain "," https_server_domain "," https_server_domain != "," https_server_domain present? "," http_server_domain  [] "," https_server_domain  [] "," http_ http_server_domain  "," http_ https_server_domain  "," https_ http_server_domain  "," https_ https_server_domain  "," https_ http_server_domain  != "," https_ https_server_domain  != "," https_ http_server_domain  present? "," https_ https_server_domain  present? "]}," RedmineGitHosting Config GitoliteAccess redmine_root_url":{"type":"method","name":"redmine_root_url","children":[],"call":["Redmine Utils  relative_url_root "]}," RedmineGitHosting Config GitoliteAccess https_root_url":{"type":"method","name":"https_root_url","children":[],"call":[" my_root_url "]}," RedmineGitHosting Config GitoliteAccess http_root_url":{"type":"method","name":"http_root_url","children":[],"call":[" my_root_url "]}," RedmineGitHosting Config GitoliteAccess http_server_subdir":{"type":"method","name":"http_server_subdir","children":[],"call":[" get_setting "]}," RedmineGitHosting Config GitoliteAccess https_server_domain":{"type":"method","name":"https_server_domain","children":[],"call":[" get_setting "]}," RedmineGitHosting Config GitoliteAccess http_server_domain":{"type":"method","name":"http_server_domain","children":[],"call":[" get_setting "]}," RedmineGitHosting Config GitoliteAccess ssh_server_domain":{"type":"method","name":"ssh_server_domain","children":[],"call":[" get_setting "]}," RedmineGitHosting Config GitoliteAccess gitolite_notify_by_default?":{"type":"method","name":"gitolite_notify_by_default?","children":[],"call":[" get_setting "]}," RedmineGitHosting Config GitoliteAccess gitolite_daemon_by_default?":{"type":"method","name":"gitolite_daemon_by_default?","children":[],"call":[" get_setting "]}," RedmineGitHosting Config GitoliteAccess gitolite_http_by_default?":{"type":"method","name":"gitolite_http_by_default?","children":[],"call":[" get_setting "]}," RedmineGitHosting Config Base file_logger":{"type":"method","name":"file_logger","children":[],"call":["RedmineGitHosting  logger "]}," RedmineGitHosting Config Base console_logger":{"type":"method","name":"console_logger","children":[],"call":[]}," RedmineGitHosting Config Base commit_changes":{"type":"method","name":"commit_changes","children":[],"call":[" console_logger error ","e message "," console_logger "," console_logger info ","Setting  check_cache ","Setting  plugin_redmine_git_hosting= "]}," RedmineGitHosting Config Base do_reload_config":{"type":"method","name":"do_reload_config","children":[],"call":[" commit_changes "," console_logger info "," console_logger ","changes == ","valuehash []= ","valuehash [] ","valuehash [] != ","default_hash each ","(send\n  (const nil :Setting) :plugin_redmine_git_hosting) clone ","Setting  plugin_redmine_git_hosting ","Setting  check_cache ","changes zero? ","valuehash [] == ","Setting  plugin_redmine_git_hosting clone "]}," RedmineGitHosting Config Base do_get_setting":{"type":"method","name":"do_get_setting","children":[],"call":["Redmine Plugin  find settings [] [] ","Redmine Plugin  find settings [] ","Redmine Plugin  find settings ","Redmine Plugin  find ","value nil? ","Setting  plugin_redmine_git_hosting [] ","Setting  plugin_redmine_git_hosting ","setting to_sym ","Redmine Plugin  find setting to_sym s [] [] ","Redmine Plugin  find setting to_sym s [] ","Redmine Plugin  find setting to_sym s ","Redmine Plugin  find settings [] []  nil? ","Setting  plugin_redmine_git_hosting []  nil? ","setting to_sym  to_sym "]}," RedmineGitHosting Config Base return_bool":{"type":"method","name":"return_bool","children":[],"call":["value == "]}," RedmineGitHosting Config Base reload_from_file!":{"type":"method","name":"reload_from_file!","children":[],"call":[" do_reload_config ","Redmine Plugin  find settings [] ","Redmine Plugin  find settings ","Redmine Plugin  find "]}," RedmineGitHosting Config Base get_setting":{"type":"method","name":"get_setting","children":[],"call":[" do_get_setting "," return_bool ","Additionals  true? ","RedminePluginKit  true? "]}," RedmineGitHosting Commands Sudo content_from_gitolite_side":{"type":"method","name":"content_from_gitolite_side","children":[],"call":[" sudo_cat "]}," RedmineGitHosting Commands Sudo content_from_redmine_side":{"type":"method","name":"content_from_redmine_side","children":[],"call":["File  read "," logger error ","e message "," logger "]}," RedmineGitHosting Commands Sudo hash_content":{"type":"method","name":"hash_content","children":[],"call":["Digest MD5  hexdigest "]}," RedmineGitHosting Commands Sudo sudo_shell_params":{"type":"method","name":"sudo_shell_params","children":[],"call":["RedmineGitHosting Config  gitolite_user "]}," RedmineGitHosting Commands Sudo sudo":{"type":"method","name":"sudo","children":[],"call":[" sudo_shell_params ","RedmineGitHosting Config  gitolite_use_sudo? "]}," RedmineGitHosting Commands Sudo sudo_pipe_data":{"type":"method","name":"sudo_pipe_data","children":[],"call":[" capture "," sudo push "," sudo "]}," RedmineGitHosting Commands Sudo sudo_shell":{"type":"method","name":"sudo_shell","children":[],"call":[" execute "," sudo concat "," sudo "]}," RedmineGitHosting Commands Sudo sudo_capture":{"type":"method","name":"sudo_capture","children":[],"call":[" capture "," sudo concat "," sudo "]}," RedmineGitHosting Commands Sudo sudo_file_changed?":{"type":"method","name":"sudo_file_changed?","children":[],"call":[" hash_content != "," hash_content "," content_from_gitolite_side "," content_from_redmine_side "]}," RedmineGitHosting Commands Sudo sudo_cat":{"type":"method","name":"sudo_cat","children":[],"call":[" sudo_capture "]}," RedmineGitHosting Commands Sudo sudo_get_dir_size":{"type":"method","name":"sudo_get_dir_size","children":[],"call":[" sudo_capture split [] "," sudo_capture split "," sudo_capture "]}," RedmineGitHosting Commands Sudo sudo_move":{"type":"method","name":"sudo_move","children":[],"call":[" sudo_shell "]}," RedmineGitHosting Commands Sudo sudo_rm_rf":{"type":"method","name":"sudo_rm_rf","children":[],"call":[" sudo_rmdir "]}," RedmineGitHosting Commands Sudo sudo_rmdir":{"type":"method","name":"sudo_rmdir","children":[],"call":[" sudo_shell "]}," RedmineGitHosting Commands Sudo sudo_chmod":{"type":"method","name":"sudo_chmod","children":[],"call":[" sudo_shell "]}," RedmineGitHosting Commands Sudo sudo_mkdir_p":{"type":"method","name":"sudo_mkdir_p","children":[],"call":[" sudo_mkdir "]}," RedmineGitHosting Commands Sudo sudo_mkdir":{"type":"method","name":"sudo_mkdir","children":[],"call":[" sudo_shell "]}," RedmineGitHosting Commands Sudo sudo_test":{"type":"method","name":"sudo_test","children":[],"call":[" logger debug ","e message "," logger ","code == "," sudo_shell ","code to_i zero? ","code to_i "]}," RedmineGitHosting Commands Sudo sudo_dir_exists?":{"type":"method","name":"sudo_dir_exists?","children":[],"call":[" sudo_test "]}," RedmineGitHosting Commands Sudo sudo_file_exists?":{"type":"method","name":"sudo_file_exists?","children":[],"call":[" sudo_test "]}," RedmineGitHosting Commands Sudo sudo_install_file":{"type":"method","name":"sudo_install_file","children":[],"call":[" logger error ","e output "," logger "," sudo_chmod "," sudo_pipe_data ","(str \"cat\") join ","\n + + ","\n + ","content to_s ","> + "]}," RedmineGitHosting Commands Ssh ssh_shell_params":{"type":"method","name":"ssh_shell_params","children":[],"call":["RedmineGitHosting Config  gitolite_url ","RedmineGitHosting Config  gitolite_ssh_private_key ","RedmineGitHosting Config  gitolite_server_port "]}," RedmineGitHosting Commands Ssh ssh":{"type":"method","name":"ssh","children":[],"call":[" ssh_shell_params "]}," RedmineGitHosting Commands Ssh ssh_shell":{"type":"method","name":"ssh_shell","children":[],"call":[" execute "," ssh concat "," ssh "]}," RedmineGitHosting Commands Ssh ssh_capture":{"type":"method","name":"ssh_capture","children":[],"call":[" capture "," ssh concat "," ssh "]}," RedmineGitHosting Commands Gitolite gitolite_home_dir":{"type":"method","name":"gitolite_home_dir","children":[],"call":["RedmineGitHosting Config  gitolite_home_dir "]}," RedmineGitHosting Commands Gitolite gitolite_command":{"type":"method","name":"gitolite_command","children":[],"call":["RedmineGitHosting Config  gitolite_command "]}," RedmineGitHosting Commands Gitolite sudo_git_objects_count":{"type":"method","name":"sudo_git_objects_count","children":[],"call":[" logger error ","e output "," logger "," sudo_capture ","RedmineGitHosting Config  gitolite_use_sudo? "]}," RedmineGitHosting Commands Gitolite sudo_repository_empty?":{"type":"method","name":"sudo_repository_empty?","children":[],"call":["count to_i == ","count to_i "," sudo_git_objects_count ","File  join "," gitolite_home_dir ","count to_i zero? "," logger info "," logger "," gitolite_home_dir nil? "," sudo_git_objects_count  to_i == "," sudo_git_objects_count  to_i "," sudo_git_objects_ sudo_git_objects_count  "," sudo_git_objects_count  to_i zero? "]}," RedmineGitHosting Commands Gitolite gitolite_repository_count":{"type":"method","name":"gitolite_repository_count","children":[],"call":[" sudo_capture split length "," sudo_capture split "," sudo_capture "]}," RedmineGitHosting Commands Gitolite sudo_update_gitolite!":{"type":"method","name":"sudo_update_gitolite!","children":[],"call":[" logger error ","e output "," logger "," sudo_shell "," gitolite_command "," logger info "," gitolite_command join "," gitolite_command nil? "]}," RedmineGitHosting Commands Gitolite gitolite_infos":{"type":"method","name":"gitolite_infos","children":[],"call":[" ssh_capture "]}," RedmineGitHosting Commands Git git_config_as_hash":{"type":"method","name":"git_config_as_hash","children":[],"call":["value_hash []= ","global_key split [] ","global_key split ","value_pair split [] ","value_pair split ","value_pair start_with? ! ","value_pair start_with? ","value_pair empty? ","params each ","value_pair split [] _hash []= ","global_global_key split []  split [] ","value_pair split []  split [] ","global_global_key split []  split ","value_pair split []  split ","value_pair split [] _pair split [] ","value_pair split [] _pair split ","value_pair split [] _pair start_with? ! ","value_pair split [] _pair start_with? ","value_pair split [] _pair empty? "]}," RedmineGitHosting Commands Git prefix_key":{"type":"method","name":"prefix_key","children":[],"call":["(lvar :namespace) join "]}," RedmineGitHosting Commands Git git_args_for_repo":{"type":"method","name":"git_args_for_repo","children":[],"call":[]}," RedmineGitHosting Commands Git git":{"type":"method","name":"git","children":[],"call":["Repository Xitolite  scm_command "]}," RedmineGitHosting Commands Git git_version":{"type":"method","name":"git_version","children":[],"call":[" logger error ","e output "," logger "," sudo_git "]}," RedmineGitHosting Commands Git sudo_get_git_global_params":{"type":"method","name":"sudo_get_git_global_params","children":[],"call":[" git_config_as_hash "," logger error "," logger "," sudo_git split "," sudo_git "]}," RedmineGitHosting Commands Git sudo_set_git_global_param":{"type":"method","name":"sudo_set_git_global_param","children":[],"call":[" logger error ","e output "," logger "," sudo_git "," logger info "," sudo_unset_git_global_param ","value == "," prefix_key ","value blank? "," prefix_ prefix_key  "]}," RedmineGitHosting Commands Git sudo_unset_git_global_param":{"type":"method","name":"sudo_unset_git_global_param","children":[],"call":[" logger error ","e output "," logger ","code == "," sudo_shell "," logger info "]}," RedmineGitHosting Commands Git sudo_git_args_for_repo":{"type":"method","name":"sudo_git_args_for_repo","children":[],"call":[" sudo concat concat "," git_args_for_repo "," sudo concat "," git "," sudo "]}," RedmineGitHosting Commands Git sudo_git_cmd":{"type":"method","name":"sudo_git_cmd","children":[],"call":[" sudo concat "," git "," sudo "]}," RedmineGitHosting Commands Git sudo_git":{"type":"method","name":"sudo_git","children":[],"call":[" capture "," sudo_git_cmd concat "," sudo_git_cmd ","(str \"git\") concat ","RedmineGitHosting Config  gitolite_use_sudo? "," sudo_git_ sudo_git_cmd concat  concat "," sudo_git_(str \"git\") concat  concat "," sudo_git_ sudo_git_cmd concat  "," sudo_git_(str \"git\") concat  "]}," RedmineGitHosting Commands Base logger":{"type":"method","name":"logger","children":[],"call":["RedmineGitHosting  logger "]}," RedmineGitHosting Commands Base execute":{"type":"method","name":"execute","children":[],"call":["RedmineGitHosting Utils Exec  execute ","args shift "]}," RedmineGitHosting Commands Base capture":{"type":"method","name":"capture","children":[],"call":["RedmineGitHosting Utils Exec  capture ","args shift "]}," RedmineGitHosting Cache Redis redis_options":{"type":"method","name":"redis_options","children":[],"call":[" redis_namespace "]}," RedmineGitHosting Cache Redis client":{"type":"method","name":"client","children":[],"call":[" Redis  new "," redis_options "]}," RedmineGitHosting Cache Redis digest":{"type":"method","name":"digest","children":[],"call":["Digest SHA256  hexdigest [] ","Digest SHA256  hexdigest "]}," RedmineGitHosting Cache Redis hash_key":{"type":"method","name":"hash_key","children":[],"call":[" digest "," redis_namespace "]}," RedmineGitHosting Cache Redis all_entries_for_repo":{"type":"method","name":"all_entries_for_repo","children":[],"call":[" digest "," redis_namespace "]}," RedmineGitHosting Cache Redis all_entries":{"type":"method","name":"all_entries","children":[],"call":[" redis_namespace "]}," RedmineGitHosting Cache Redis redis_namespace":{"type":"method","name":"redis_namespace","children":[],"call":[]}," RedmineGitHosting Cache Redis apply_cache_limit":{"type":"method","name":"apply_cache_limit","children":[],"call":[]}," RedmineGitHosting Cache Redis clear_cache_for_repository":{"type":"method","name":"clear_cache_for_repository","children":[],"call":[" logger info "," logger "," client del "," client "," client scan_each "," all_entries_for_repo "]}," RedmineGitHosting Cache Redis clear_obsolete_cache_entries":{"type":"method","name":"clear_obsolete_cache_entries","children":[],"call":[]}," RedmineGitHosting Cache Redis flush_cache!":{"type":"method","name":"flush_cache!","children":[],"call":[" logger info "," logger "," client del "," client "," client scan_each "," all_entries "]}," RedmineGitHosting Cache Redis get_cache":{"type":"method","name":"get_cache","children":[],"call":[" client get "," hash_key "," client "," logger debug "," logger "]}," RedmineGitHosting Cache Redis set_cache":{"type":"method","name":"set_cache","children":[],"call":[" logger error ","e message "," logger "," client set "," client "," max_cache_time "," max_cache_time < "," hash_key "," logger debug "," max_cache_time to_i negative? "," max_cache_time to_i "," max_ max_cache_time  "," max_ max_cache_time  < "," max_ max_cache_time  to_i negative? "," max_ max_cache_time  to_i "]}," RedmineGitHosting Cache Memcached memcached_options":{"type":"method","name":"memcached_options","children":[],"call":[" max_cache_size "," max_cache_time "]}," RedmineGitHosting Cache Memcached client":{"type":"method","name":"client","children":[],"call":["Dalli Client  new "," memcached_options "]}," RedmineGitHosting Cache Memcached hash_key":{"type":"method","name":"hash_key","children":[],"call":["Digest SHA256  hexdigest "]}," RedmineGitHosting Cache Memcached create_or_update_repo_references":{"type":"method","name":"create_or_update_repo_references","children":[],"call":[" client append ",", + "," client "," client set "," max_cache_time ","repo_references nil? "," client get "," hash_key "," client get  nil? "]}," RedmineGitHosting Cache Memcached apply_cache_limit":{"type":"method","name":"apply_cache_limit","children":[],"call":[]}," RedmineGitHosting Cache Memcached clear_cache_for_repository":{"type":"method","name":"clear_cache_for_repository","children":[],"call":[" client set "," max_cache_time "," client "," logger info ","repo_references size "," logger "," client delete ","repo_references map ","r empty? ! ","r empty? ","repo_references split select ","repo_references split ","repo_references nil? "," client get "," hash_key ","repo_references split reject "," client get  size ","repo_references split reject  size "," client get  map ","repo_references split reject  map "," client get  split select ","repo_references split reject  split select "," client get  split ","repo_references split reject  split "," client get  nil? ","repo_references split reject  nil? "," client get  split reject ","repo_references split reject  split reject "]}," RedmineGitHosting Cache Memcached clear_obsolete_cache_entries":{"type":"method","name":"clear_obsolete_cache_entries","children":[],"call":[]}," RedmineGitHosting Cache Memcached flush_cache!":{"type":"method","name":"flush_cache!","children":[],"call":[" client flush "," client "]}," RedmineGitHosting Cache Memcached get_cache":{"type":"method","name":"get_cache","children":[],"call":[" client get "," hash_key "," client "]}," RedmineGitHosting Cache Memcached set_cache":{"type":"method","name":"set_cache","children":[],"call":[" logger error ","e message "," logger "," client set "," client "," create_or_update_repo_references "," hash_key "," logger debug "]}," RedmineGitHosting Cache Database apply_cache_limit":{"type":"method","name":"apply_cache_limit","children":[],"call":["GitCache  find destroy ","GitCache  find ","GitCache  count > "," max_cache_elements ","GitCache  count "," max_cache_elements >= ","GitCache  order first destroy ","GitCache  order first ","GitCache  order "]}," RedmineGitHosting Cache Database clear_cache_for_repository":{"type":"method","name":"clear_cache_for_repository","children":[],"call":[" logger info "," logger ","GitCache  delete_all ","GitCache  where delete_all ","GitCache  where "]}," RedmineGitHosting Cache Database clear_obsolete_cache_entries":{"type":"method","name":"clear_obsolete_cache_entries","children":[],"call":[" logger info "," logger ","GitCache  delete_all "," time_limit ","GitCache  where delete_all ","GitCache  where "," time_limit nil? "]}," RedmineGitHosting Cache Database flush_cache!":{"type":"method","name":"flush_cache!","children":[],"call":["ActiveRecord Base  connection execute ","ActiveRecord Base  connection "]}," RedmineGitHosting Cache Database get_cache":{"type":"method","name":"get_cache","children":[],"call":["cached destroy ","cached command_output ","cached touch ","cached command_output nil? "," valid_cache_entry? ","cached created_at ","GitCache  find_by_repo_identifier_and_command ","GitCache  find_by ","GitCache  find_by_repo_identifier_and_command  destroy ","GitCache  find_by  destroy ","cached command_cached command_output put ","GitCache  find_by_repo_identifier_and_command  command_output ","GitCache  find_by  command_output ","GitCache  find_by_repo_identifier_and_command  touch ","GitCache  find_by  touch ","cached command_cached command_output put nil? ","GitCache  find_by_repo_identifier_and_command  command_output nil? ","GitCache  find_by  command_output nil? ","GitCache  find_by_repo_identifier_and_command  created_at ","GitCache  find_by  created_at "]}," RedmineGitHosting Cache Database set_cache":{"type":"method","name":"set_cache","children":[],"call":[" logger error ","e message "," logger ","GitCache  create "," logger debug "]}," RedmineGitHosting Cache Adapter factory":{"type":"method","name":"factory","children":[],"call":["Database  new ","Redis  new ","Memcached  new ","RedmineGitHosting Config  gitolite_cache_adapter "]}," RedmineGitHosting Cache AbstractCache valid_cache_entry?":{"type":"method","name":"valid_cache_entry?","children":[],"call":["expired ! ","current_time to_i - > "," max_cache_time ","current_time to_i - ","cached_entry_date to_i ","current_time to_i ","Time  now ","Time  now utc ","ActiveRecord Base  default_timezone == ","ActiveRecord Base  default_timezone "," max_cache_time < "," max_cache_time to_i negative? "," max_cache_time to_i ","Time  zone now ","Time  zone ","current_time to_i - >  ! ","Time  now  to_i - > ","Time  now utc  to_i - > ","Time  zone now  to_i - > ","Time  now  to_i - ","Time  now utc  to_i - ","Time  zone now  to_i - ","Time  now  to_i ","Time  now utc  to_i ","Time  zone now  to_i "]}," RedmineGitHosting Cache AbstractCache time_limit":{"type":"method","name":"time_limit","children":[],"call":["current_time - "," max_cache_time ","Time  now ","Time  now utc ","ActiveRecord Base  default_timezone == ","ActiveRecord Base  default_timezone "," max_cache_time < "," max_cache_time to_i negative? "," max_cache_time to_i ","Time  zone now ","Time  zone ","Time  now  - ","Time  now utc  - ","Time  zone now  - "]}," RedmineGitHosting Cache AbstractCache logger":{"type":"method","name":"logger","children":[],"call":["RedmineGitHosting  logger "]}," RedmineGitHosting Cache AbstractCache apply_cache_limit":{"type":"method","name":"apply_cache_limit","children":[],"call":[" raise "]}," RedmineGitHosting Cache AbstractCache clear_cache_for_repository":{"type":"method","name":"clear_cache_for_repository","children":[],"call":[" raise "]}," RedmineGitHosting Cache AbstractCache clear_obsolete_cache_entries":{"type":"method","name":"clear_obsolete_cache_entries","children":[],"call":[" raise "]}," RedmineGitHosting Cache AbstractCache flush_cache!":{"type":"method","name":"flush_cache!","children":[],"call":[" raise "]}," RedmineGitHosting Cache AbstractCache get_cache":{"type":"method","name":"get_cache","children":[],"call":[" raise "]}," RedmineGitHosting Cache AbstractCache set_cache":{"type":"method","name":"set_cache","children":[],"call":[" raise "]}," RedmineGitHosting Cache AbstractCache initialize":{"type":"method","name":"initialize","children":[],"call":["RedmineGitHosting Config  gitolite_cache_max_elements ","RedmineGitHosting Config  gitolite_cache_max_time ","RedmineGitHosting Config  gitolite_cache_max_size "]}," Hrack Server encode_key":{"type":"method","name":"encode_key","children":[],"call":["Digest SHA1  hexdigest to_s ","Digest SHA1  hexdigest ","time to_s + ","key to_s ","time to_s "]}," Hrack Server not_to_late?":{"type":"method","name":"not_to_late?","children":[],"call":["cur_time - < ","5 * ","cur_time - "]}," Hrack Server valid_encoded_time?":{"type":"method","name":"valid_encoded_time?","children":[],"call":[" encode_key == ","encoded_time to_s "," encode_key "," not_to_late? ","clear_time to_i ","Time  new utc to_i ","Time  new utc ","Time  new "]}," Hrack Server path_parameters":{"type":"method","name":"path_parameters","children":[],"call":["@env [] "]}," Hrack Server render_403":{"type":"method","name":"render_403","children":[],"call":[]}," Hrack Server render_404":{"type":"method","name":"render_404","children":[],"call":[]}," Hrack Server render_200":{"type":"method","name":"render_200","children":[],"call":[]}," Hrack Server find_repository":{"type":"method","name":"find_repository","children":[],"call":["@project repo_blank_ident ","@project repository ","@project repositories find_by_identifier "," params [] "," params ","@project repositories "," params [] blank? ! "," params [] blank? "," params [] present? ","@project repositories find_by "]}," Hrack Server find_project":{"type":"method","name":"find_project","children":[],"call":["Project  find_by_identifier "," path_parameters [] "," path_parameters "," path_parameters has_key? "," path_parameters key? ","Project  find_by "]}," Hrack Server find_command":{"type":"method","name":"find_command","children":[],"call":[" path_parameters [] "," path_parameters "," path_parameters has_key? ! "," path_parameters has_key? "," path_parameters key? "]}," Hrack Server match_routing":{"type":"method","name":"match_routing","children":[],"call":[" find_project "," find_command "," find_ find_project  "," find_ find_command  "]}," Hrack Server payloads":{"type":"method","name":"payloads","children":[],"call":["Repositories BuildPayload  call "," params [] "," params "]}," Hrack Server post_receive_github":{"type":"method","name":"post_receive_github","children":[],"call":[" render_200 ","Projects ExecuteHooks  call "," params "]}," Hrack Server post_receive_redmine":{"type":"method","name":"post_receive_redmine","children":[],"call":["@res write ","Repositories ExecuteHooks  call "," payloads ","@res finish ","@res []= ","@res status= ","Rack Response  new "," render_403 "," valid_encoded_time? ! "," valid_encoded_time? ","@repository gitolite_hook_key "," params [] "," params "," render_404 ","@repository nil? "," find_repository ","Rack Response  new  write ","Rack Response  new  finish ","Rack Response  new  []= ","Rack Response  new  status= "," find_repository  gitolite_hook_key "," find_repository  nil? "]}," Hrack Server _call":{"type":"method","name":"_call","children":[],"call":[" method call "," method "," render_404 ","@project ! ","command ! "," match_routing ","@req params deep_symbolize_keys ","@req params ","Rack Request  new ","Rack Request  new  params deep_symbolize_keys ","Rack Request  new  params "]}," Hrack Server call":{"type":"method","name":"call","children":[],"call":[" dup _call "," dup "]}," Hrack Server initialize":{"type":"method","name":"initialize","children":[],"call":[]}," Hrack Bundle new":{"type":"method","name":"new","children":[],"call":[" run ","Hrack Server  new "," use ","Rack Builder  new "]}," Grack Server repository_object":{"type":"method","name":"repository_object","children":[],"call":["Repository Xitolite  find_by_path "]}," Faker Ssh generate_ssh_key":{"type":"method","name":"generate_ssh_key","children":[],"call":["key ssh_public_key ","key private_key ","SSHKey  generate ","Internet  domain_name ","SSHKey  generate  ssh_public_SSHKey  generate  ","SSHKey  generate  private_SSHKey  generate  "]}," Faker Ssh both_keys":{"type":"method","name":"both_keys","children":[],"call":[" generate_ssh_key "]}," Faker Ssh private_key":{"type":"method","name":"private_key","children":[],"call":[" generate_ssh_key [] "," generate_ssh_key "]}," Faker Ssh public_key":{"type":"method","name":"public_key","children":[],"call":[" generate_ssh_key [] "," generate_ssh_key "]}," Faker Git project_identifier":{"type":"method","name":"project_identifier","children":[],"call":["Internet  user_name "]}," Faker Git base_path":{"type":"method","name":"base_path","children":[],"call":[" project_identifier "]}," Faker Git domain_name":{"type":"method","name":"domain_name","children":[],"call":["Internet  domain_name "]}," Faker Git git_url":{"type":"method","name":"git_url","children":[],"call":[" base_path "," domain_name "]}," Faker Git ssh_url":{"type":"method","name":"ssh_url","children":[],"call":[" base_path "," domain_name "]}," Faker Git https_url":{"type":"method","name":"https_url","children":[],"call":[" base_path "," domain_name "]}," Faker Git http_url":{"type":"method","name":"http_url","children":[],"call":[" base_path "," domain_name "]}," RedmineGitHosting RedminePluginLoader global_settings_file":{"type":"method","name":"global_settings_file","children":[],"call":["Rails  root join "," plugin_name ","Rails  root "]}," RedmineGitHosting RedminePluginLoader global_settings":{"type":"method","name":"global_settings","children":[],"call":[" load_setting_file "," global_settings_file "]}," RedmineGitHosting Config RedmineConfig sidekiq_available?":{"type":"method","name":"sidekiq_available?","children":[],"call":[" require "]}," RedmineGitHosting Config GitoliteBase gitolite_bin_dir":{"type":"method","name":"gitolite_bin_dir","children":[],"call":["RedmineGitHosting Commands  sudo_gitolite_query_rc chomp ","RedmineGitHosting Commands  sudo_gitolite_query_rc "]}," RedmineGitHosting Config GitoliteBase gitolite_use_sudo?":{"type":"method","name":"gitolite_use_sudo?","children":[],"call":[" redmine_user != "," gitolite_user "," redmine_user "]}," RedmineGitHosting Config Base dump_settings":{"type":"method","name":"dump_settings","children":[],"call":[" puts ","YAML  dump ","Redmine Plugin  find settings [] ","Redmine Plugin  find settings ","Redmine Plugin  find "]}," RedmineGitHosting Commands Gitolite sudo_gitolite_query_rc":{"type":"method","name":"sudo_gitolite_query_rc","children":[],"call":[" logger error ","e output "," logger "," sudo_capture "," sudo_capture try "]}," RedmineGitHosting Commands Sudo sudo_file_perms_changed?":{"type":"method","name":"sudo_file_perms_changed?","children":[],"call":[" logger error ","e output "," logger ","current_mode chomp != ","current_mode chomp "," sudo_capture "," sudo_capture  chomp != "," sudo_capture  chomp "]}," RedmineGitHosting RedcarpetFilter markdown_options":{"type":"method","name":"markdown_options","children":[],"call":[]}," RedmineGitHosting RedcarpetFilter renderer":{"type":"method","name":"renderer","children":[],"call":[]}," RedmineGitHosting RedcarpetFilter call":{"type":"method","name":"call","children":[],"call":["html rstrip! "," class renderer render "," class renderer "," class "," class renderer render  rstrip! "]}," RedmineGitHosting RedcarpetFilter initialize":{"type":"method","name":"initialize","children":[],"call":["@text delete ","@text delete  delete "]}," RedmineGitHosting Patches WatchersHelperPatch watchers_list_with_git_hosting":{"type":"method","name":"watchers_list_with_git_hosting","children":[],"call":[" content_tag ","content present? ","content << ","user id ","s << "," link_to "," image_tag ","object id ","object class to_s underscore ","object class to_s ","object class "," link_to_user "," avatar to_s "," avatar "," html_safe ","object watcher_users collect ","object watcher_users ","User  current allowed_to? ","object project ","(str \"delete_\") gsub to_sym ","(str \"delete_\") gsub ","object class name underscore ","object class name ","User  current "," tag ul "," tag "," tag li "," l ","object watcher_users preload each ","object watcher_users preload ","(str \"delete_\") tr to_sym ","(str \"delete_\") tr "," html_safe +@ ","object watcher_users each ","  html_safe _tag ","  html_safe +@ _tag ","content pre html_safe ent? ","content pre html_safe +@ ent? "," html_safe  present? "," html_safe +@  present? "," html_safe  << "," html_safe +@  << ","u html_safe er id ","u html_safe +@ er id ","object cla html_safe  html_safe  to_ html_safe  under html_safe core ","object cla html_safe +@  html_safe +@  to_ html_safe +@  under html_safe +@ core ","object cla html_safe  html_safe  to_ html_safe  ","object cla html_safe +@  html_safe +@  to_ html_safe +@  ","object cla html_safe  html_safe  ","object cla html_safe +@  html_safe +@  "," link_to_u html_safe er "," link_to_u html_safe +@ er "," avatar to_ html_safe  "," avatar to_ html_safe +@  "," html_ html_safe afe "," html_ html_safe +@ afe ","object watcher_u html_safe er html_safe  collect ","object watcher_u html_safe +@ er html_safe +@  collect ","object watcher_u html_safe er html_safe  ","object watcher_u html_safe +@ er html_safe +@  ","U html_safe er  current allowed_to? ","U html_safe +@ er  current allowed_to? ","( html_safe tr \"delete_\") g html_safe ub to_ html_safe ym ","( html_safe +@ tr \"delete_\") g html_safe +@ ub to_ html_safe +@ ym ","( html_safe tr \"delete_\") g html_safe ub ","( html_safe +@ tr \"delete_\") g html_safe +@ ub ","object cla html_safe  html_safe  name under html_safe core ","object cla html_safe +@  html_safe +@  name under html_safe +@ core ","object cla html_safe  html_safe  name ","object cla html_safe +@  html_safe +@  name ","U html_safe er  current ","U html_safe +@ er  current ","object watcher_u html_safe er html_safe  preload each ","object watcher_u html_safe +@ er html_safe +@  preload each ","object watcher_u html_safe er html_safe  preload ","object watcher_u html_safe +@ er html_safe +@  preload ","( html_safe tr \"delete_\") tr to_ html_safe ym ","( html_safe +@ tr \"delete_\") tr to_ html_safe +@ ym ","( html_safe tr \"delete_\") tr ","( html_safe +@ tr \"delete_\") tr "," html_ html_safe afe +@ "," html_ html_safe +@ afe +@ ","object watcher_u html_safe er html_safe  each ","object watcher_u html_safe +@ er html_safe +@  each "]}," RedmineGitHosting Patches WatchersHelperPatch watcher_css_with_git_hosting":{"type":"method","name":"watcher_css_with_git_hosting","children":[],"call":[" watcher_css_without_git_hosting gsub "," watcher_css_without_git_hosting "," watcher_css_without_git_hosting tr "]}," RedmineGitHosting Patches WatchersHelperPatch prepended":{"type":"method","name":"prepended","children":[],"call":[]}," RedmineGitHosting Patches WatchersControllerPatch update_repository":{"type":"method","name":"update_repository","children":[],"call":[" gitolite_accessor update_repository "," gitolite_accessor ","repo is_a? ! ","repo is_a? "]}," RedmineGitHosting Patches WatchersControllerPatch unwatch":{"type":"method","name":"unwatch","children":[],"call":[" update_repository ","@watchables first "]}," RedmineGitHosting Patches WatchersControllerPatch watch":{"type":"method","name":"watch","children":[],"call":[" update_repository ","@watchables first "]}," RedmineGitHosting Patches WatchersControllerPatch destroy":{"type":"method","name":"destroy","children":[],"call":[" update_repository "]}," RedmineGitHosting Patches WatchersControllerPatch create":{"type":"method","name":"create","children":[],"call":[" update_repository "]}," RedmineGitHosting Patches UsersControllerPatch destroy_ssh_keys":{"type":"method","name":"destroy_ssh_keys","children":[],"call":[" gitolite_accessor destroy_ssh_key "," gitolite_accessor ","ssh_keys_list each ","RedmineGitHosting  logger info ","@user login ","RedmineGitHosting  logger "]}," RedmineGitHosting Patches UsersControllerPatch ssh_keys_to_destroy":{"type":"method","name":"ssh_keys_to_destroy","children":[],"call":["@user gitolite_public_keys map ","@user gitolite_public_keys "]}," RedmineGitHosting Patches UsersControllerPatch projects_to_update":{"type":"method","name":"projects_to_update","children":[],"call":["@user gitolite_projects map ","@user gitolite_projects "]}," RedmineGitHosting Patches UsersControllerPatch update_projects":{"type":"method","name":"update_projects","children":[],"call":[" gitolite_accessor update_projects ","@user login "," projects_to_update "," gitolite_accessor "]}," RedmineGitHosting Patches UsersControllerPatch destroy":{"type":"method","name":"destroy","children":[],"call":[" destroy_ssh_keys "," ssh_keys_to_destroy "]}," RedmineGitHosting Patches UsersControllerPatch update":{"type":"method","name":"update","children":[],"call":[" update_projects ","@user status_has_changed? "," set_public_key_values "]}," RedmineGitHosting Patches UsersControllerPatch edit":{"type":"method","name":"edit","children":[],"call":[" set_public_key_values "]}," RedmineGitHosting Patches UsersControllerPatch prepended":{"type":"method","name":"prepended","children":[],"call":[]}," RedmineGitHosting Patches UserPatch stripped_login":{"type":"method","name":"stripped_login","children":[],"call":[" login underscore gsub "," login underscore "," login "]}," RedmineGitHosting Patches UserPatch check_if_status_changed":{"type":"method","name":"check_if_status_changed","children":[],"call":[" status_has_changed= "," status_changed? "," saved_changes "]}," RedmineGitHosting Patches UserPatch git_allowed_to?":{"type":"method","name":"git_allowed_to?","children":[],"call":[" allowed_to? ","repository project ","repository project active? "]}," RedmineGitHosting Patches UserPatch allowed_to_download?":{"type":"method","name":"allowed_to_download?","children":[],"call":[" git_allowed_to? "]}," RedmineGitHosting Patches UserPatch allowed_to_create_ssh_keys?":{"type":"method","name":"allowed_to_create_ssh_keys?","children":[],"call":[" allowed_to? "]}," RedmineGitHosting Patches UserPatch allowed_to_clone?":{"type":"method","name":"allowed_to_clone?","children":[],"call":[" allowed_to? ","repository project "]}," RedmineGitHosting Patches UserPatch allowed_to_commit?":{"type":"method","name":"allowed_to_commit?","children":[],"call":[" allowed_to? ","repository project "]}," RedmineGitHosting Patches UserPatch allowed_to_manage_repository?":{"type":"method","name":"allowed_to_manage_repository?","children":[],"call":["(send\n  (send nil :roles_for_project\n    (send\n      (lvar :repository) :project)) :select) empty? ! ","(send\n  (send nil :roles_for_project\n    (send\n      (lvar :repository) :project)) :select) empty? ","role allowed_to? "," roles_for_project select "," roles_for_project ","repository project "]}," RedmineGitHosting Patches UserPatch status_has_changed?":{"type":"method","name":"status_has_changed?","children":[],"call":[" status_has_changed "]}," RedmineGitHosting Patches UserPatch gitolite_projects":{"type":"method","name":"gitolite_projects","children":[],"call":["p gitolite_repos any? ","p gitolite_repos "," projects uniq select "," projects uniq "," projects "," projects select "]}," RedmineGitHosting Patches UserPatch gitolite_identifier":{"type":"method","name":"gitolite_identifier","children":[],"call":["identifier join ","identifier concat "," id ","RedmineGitHosting Config  gitolite_identifier_strip_user_id? "," stripped_login ","RedmineGitHosting Config  gitolite_identifier_prefix "]}," RedmineGitHosting Patches UserPatch prepended":{"type":"method","name":"prepended","children":[],"call":[]}," RedmineGitHosting Patches SysControllerPatch fetch_changesets":{"type":"method","name":"fetch_changesets","children":[],"call":[" gitolite_accessor purge_recycle_bin "," gitolite_accessor "," gitolite_accessor flush_git_cache "]}," RedmineGitHosting Patches SettingsControllerPatch execute_post_actions":{"type":"method","name":"execute_post_actions","children":[],"call":["Settings Apply  call "]}," RedmineGitHosting Patches SettingsControllerPatch handle_settings_update":{"type":"method","name":"handle_settings_update","children":[],"call":[" flash []= ","settings_form errors full_messages join ","settings_form errors full_messages ","settings_form errors "," flash "," l "," execute_post_actions ","Setting  send ","settings_form params ","@plugin id ","settings_form submit "," params [] "," params "," params [] delete ","PluginSettingsForm  new ","options to_unsafe_h symbolize_keys ","options to_unsafe_h ","PluginSettingsForm  new  errors full_messages join ","PluginSettingsForm  new  errors full_messages ","PluginSettingsForm  new  errors ","PluginSettingsForm  new  params ","PluginSettingsForm  new  submit "]}," RedmineGitHosting Patches SettingsControllerPatch plugin":{"type":"method","name":"plugin","children":[],"call":["Setting  send ","@plugin id ","@plugin settings [] ","@plugin settings "," redirect_to "," plugin_settings_path "," handle_settings_update "," request post? "," request ","@plugin id == ","Redmine Plugin  find "," params [] "," params ","Redmine Plugin  find  id ","Redmine Plugin  find  settings [] ","Redmine Plugin  find  settings ","Redmine Plugin  find  id == "]}," RedmineGitHosting Patches SettingsControllerPatch install_gitolite_hooks":{"type":"method","name":"install_gitolite_hooks","children":[],"call":["RedmineGitHosting Config  install_hooks! "," render_404 ","@plugin id == ","@plugin id ","Redmine Plugin  find "," params [] "," params ","Redmine Plugin  find  id == ","Redmine Plugin  find  id "]}," RedmineGitHosting Patches SettingsControllerPatch authors":{"type":"method","name":"authors","children":[],"call":[" render ","RedmineGitHosting  authors "," render_404 ","@plugin id == ","@plugin id ","Redmine Plugin  find "," params [] "," params ","Redmine Plugin  find  id == ","Redmine Plugin  find  id "]}," RedmineGitHosting Patches SettingsControllerPatch prepended":{"type":"method","name":"prepended","children":[],"call":[]}," RedmineGitHosting Patches SettingPatch ClassMethods check_cache":{"type":"method","name":"check_cache","children":[],"call":["RedmineGitHosting Config  check_cache "," clear_cache ","@cached_cleared_on <= ","Setting  maximum "]}," RedmineGitHosting Patches SettingPatch prepended":{"type":"method","name":"prepended","children":[],"call":[]}," RedmineGitHosting Patches RolesControllerPatch call_gitolite":{"type":"method","name":"call_gitolite","children":[],"call":[" gitolite_accessor update_projects "," gitolite_accessor "]}," RedmineGitHosting Patches RolesControllerPatch permissions":{"type":"method","name":"permissions","children":[],"call":[" call_gitolite "," request post? "," request "]}," RedmineGitHosting Patches RolesControllerPatch destroy":{"type":"method","name":"destroy","children":[],"call":[" call_gitolite "]}," RedmineGitHosting Patches RolesControllerPatch update":{"type":"method","name":"update","children":[],"call":[" call_gitolite "]}," RedmineGitHosting Patches RolesControllerPatch create":{"type":"method","name":"create","children":[],"call":[" call_gitolite "]}," RedmineGitHosting Patches RepositoryPatch redmine_name":{"type":"method","name":"redmine_name","children":[],"call":[" identifier "," project identifier "," project "," identifier blank? "," identifier presence "]}," RedmineGitHosting Patches RepositoriesHelperPatch xitolite_field_tags":{"type":"method","name":"xitolite_field_tags","children":[],"call":[" encoding_field + + "," enable_git_annex_field "," encoding_field + "," create_readme_field "," encoding_field "]}," RedmineGitHosting Patches RepositoriesControllerPatch diff_with_options":{"type":"method","name":"diff_with_options","children":[],"call":[" render ","@repository diff_format_revisions ","@repository find_changeset_by_name "," show_error_not_found ","@repository diff "," read_fragment ","(str \"repositories/diff/\") + ","Digest MD5  hexdigest "," current_language ","@repository id ","User  current preference save ","User  current preference ","User  current ","User  current pref []= ","User  current pref ","@diff_type != ","User  current pref [] ","User  current logged? ","(str \"inline\") include? "," params [] "," params "," send_data ","@diff join ","filename << "," params [] == ","(str \"changeset_r\") +@ ","@repository diff _type != ","@repository diff  join ","(str \"changeset_r\") +@  << "]}," RedmineGitHosting Patches RepositoriesControllerPatch find_project_repository":{"type":"method","name":"find_project_repository","children":[],"call":[" render ","@project gitolite_repos "," render_404 "," raise ","@repository branches empty? ","@repository branches ","@rev_to to_s match ","@rev_to to_s ","@rev to_s match ","@rev to_s "," params [] "," params "," params [] to_s strip "," params [] to_s ","@repository default_branch "," params [] blank? "," params [] join "," params [] is_a? ","@project repository ","@project repositories find_by_identifier_param ","@project repositories "," params [] present? ","Project  find ","@rev to_s match ! ","Project  find  gitolite_repos ","@project repository  branches empty? ","@project repositories find_by_identifier_param  branches empty? ","@project repository  branches ","@project repositories find_by_identifier_param  branches "," params []  to_s match "," params [] to_s strip _to to_s match ","@repository default_branch _to to_s match "," params []  to_s "," params [] to_s strip _to to_s ","@repository default_branch _to to_s "," params [] to_s strip  to_s match ","@repository default_branch  to_s match "," params [] to_s strip  to_s ","@repository default_branch  to_s ","@project repository  default_branch ","@project repositories find_by_identifier_param  default_branch ","Project  find  repository ","Project  find  repositories find_by_identifier_param ","Project  find  repositories "," params [] to_s strip  to_s match ! ","@repository default_branch  to_s match ! "]}," RedmineGitHosting Patches RepositoriesControllerPatch enable_git_annex?":{"type":"method","name":"enable_git_annex?","children":[],"call":["Additionals  true? ","@repository enable_git_annex ","RedminePluginKit  true? "]}," RedmineGitHosting Patches RepositoriesControllerPatch create_readme_file?":{"type":"method","name":"create_readme_file?","children":[],"call":["Additionals  true? ","@repository create_readme ","RedminePluginKit  true? "]}," RedmineGitHosting Patches RepositoriesControllerPatch creation_options":{"type":"method","name":"creation_options","children":[],"call":[" enable_git_annex? "," create_readme_file? "]}," RedmineGitHosting Patches RepositoriesControllerPatch call_use_cases":{"type":"method","name":"call_use_cases","children":[],"call":[" gitolite_accessor destroy_repository "," gitolite_accessor "," gitolite_accessor update_repository ","Repositories Create  call "," creation_options "," action_name ","@repository errors any? ","@repository errors ","@repository is_a? "]}," RedmineGitHosting Patches RepositoriesControllerPatch set_current_tab":{"type":"method","name":"set_current_tab","children":[],"call":[" params [] "," params "]}," RedmineGitHosting Patches RepositoriesControllerPatch diff":{"type":"method","name":"diff","children":[],"call":[" diff_with_options ","@repository is_a? "]}," RedmineGitHosting Patches RepositoriesControllerPatch destroy":{"type":"method","name":"destroy","children":[],"call":[" call_use_cases "]}," RedmineGitHosting Patches RepositoriesControllerPatch update":{"type":"method","name":"update","children":[],"call":[" call_use_cases "]}," RedmineGitHosting Patches RepositoriesControllerPatch create":{"type":"method","name":"create","children":[],"call":[" call_use_cases "]}," RedmineGitHosting Patches RepositoriesControllerPatch show":{"type":"method","name":"show","children":[],"call":[" render ","@project gitolite_repos ","@repository empty? ","@repository is_a? "]}," RedmineGitHosting Patches RepositoriesControllerPatch prepended":{"type":"method","name":"prepended","children":[],"call":[]}," RedmineGitHosting Patches ProjectsControllerPatch repositories_to_destroy":{"type":"method","name":"repositories_to_destroy","children":[],"call":["destroy_repositories << ","repository data_for_destruction ","project gitolite_repos reverse each ","project gitolite_repos reverse ","project gitolite_repos ","git_projects reverse each ","git_projects reverse ","p gitolite_repos any? ","p gitolite_repos ","projects uniq select ","projects uniq ","@project self_and_descendants ","project gitolite_repos reverse_each ","git_projects reverse_each ","git_@project self_and_descendants  reverse each ","git_@project self_and_descendants  reverse ","@project self_and_descendants  uniq select ","@project self_and_descendants  uniq ","git_@project self_and_descendants  reverse_each "]}," RedmineGitHosting Patches ProjectsControllerPatch destroy_repositories":{"type":"method","name":"destroy_repositories","children":[],"call":[" gitolite_accessor destroy_repositories "," gitolite_accessor ","User  current login ","User  current "]}," RedmineGitHosting Patches ProjectsControllerPatch hierarchy_to_update":{"type":"method","name":"hierarchy_to_update","children":[],"call":["(send\n  (send\n    (send\n      (ivar :@project) :self_and_descendants) :uniq) :select) map ","p gitolite_repos any? ","p gitolite_repos ","@project self_and_descendants uniq select ","@project self_and_descendants uniq ","@project self_and_descendants "]}," RedmineGitHosting Patches ProjectsControllerPatch update_project_hierarchy":{"type":"method","name":"update_project_hierarchy","children":[],"call":[" gitolite_accessor update_projects "," hierarchy_to_update "," gitolite_accessor "]}," RedmineGitHosting Patches ProjectsControllerPatch update_project":{"type":"method","name":"update_project","children":[],"call":["Projects Update  call "]}," RedmineGitHosting Patches ProjectsControllerPatch move_project_hierarchy":{"type":"method","name":"move_project_hierarchy","children":[],"call":[" gitolite_accessor move_project_hierarchy "," gitolite_accessor "]}," RedmineGitHosting Patches ProjectsControllerPatch create_project_repository":{"type":"method","name":"create_project_repository","children":[],"call":[" flash []= "," l "," flash ","Projects CreateRepository  call ","Setting  enabled_scm include? ","Setting  enabled_scm ","RedmineGitHosting Config  all_projects_use_git? ","@project module_enabled? "]}," RedmineGitHosting Patches ProjectsControllerPatch valid_project?":{"type":"method","name":"valid_project?","children":[],"call":["@project save "," validate_parent_id ","Rails VERSION MAJOR  == "]}," RedmineGitHosting Patches ProjectsControllerPatch reopen":{"type":"method","name":"reopen","children":[],"call":[" update_project_hierarchy ","User  current login ","User  current "]}," RedmineGitHosting Patches ProjectsControllerPatch close":{"type":"method","name":"close","children":[],"call":[" update_project_hierarchy ","User  current login ","User  current "]}," RedmineGitHosting Patches ProjectsControllerPatch unarchive":{"type":"method","name":"unarchive","children":[],"call":[" update_project ","User  current login ","User  current "]}," RedmineGitHosting Patches ProjectsControllerPatch archive":{"type":"method","name":"archive","children":[],"call":[" update_project_hierarchy ","User  current login ","User  current "]}," RedmineGitHosting Patches ProjectsControllerPatch destroy":{"type":"method","name":"destroy","children":[],"call":[" destroy_repositories "," params [] "," params "," api_request? "," repositories_to_destroy "]}," RedmineGitHosting Patches ProjectsControllerPatch update":{"type":"method","name":"update","children":[],"call":[" update_project "," move_project_hierarchy ","repo url != ","repo root_url ","repo url ","repo gitolite_repository_path ","@project gitolite_repos detect ","@project gitolite_repos "]}," RedmineGitHosting Patches ProjectsControllerPatch create":{"type":"method","name":"create","children":[],"call":[" create_project_repository "," valid_project? "]}," RedmineGitHosting Patches ProjectsControllerPatch prepended":{"type":"method","name":"prepended","children":[],"call":[]}," RedmineGitHosting Patches ProjectPatch additional_constraints_on_identifier":{"type":"method","name":"additional_constraints_on_identifier","children":[],"call":[" errors add "," errors ","Repository  find_by_identifier_and_type "," identifier "," identifier blank? ! "," identifier blank? "," new_record? "," identifier present? ","Repository  find_by "]}," RedmineGitHosting Patches ProjectPatch get_members_available":{"type":"method","name":"get_members_available","children":[],"call":["(send\n  (send\n    (send\n      (send nil :memberships) :active) :map\n    (block-pass\n      (sym :principal))) :select) uniq sort ","(send\n  (send\n    (send\n      (send nil :memberships) :active) :map\n    (block-pass\n      (sym :principal))) :select) uniq ","m class name == ","m class name ","m class "," memberships active map select "," memberships active map "," memberships active "," memberships ","principals sort ","principals uniq! ","m instance_of? ","principals select! "," memberships active map  sort "," memberships active map  uniq! "," memberships active map  select! "]}," RedmineGitHosting Patches ProjectPatch groups_available":{"type":"method","name":"groups_available","children":[],"call":[" get_members_available "]}," RedmineGitHosting Patches ProjectPatch users_available":{"type":"method","name":"users_available","children":[],"call":[" get_members_available "]}," RedmineGitHosting Patches ProjectPatch gitolite_repos":{"type":"method","name":"gitolite_repos","children":[],"call":["x id <=> ","y id ","x id ","(send\n  (send nil :repositories) :select) sort ","x is_a? "," repositories select "," repositories ","(send\n  (send nil :repositories) :select) sort_by "]}," RedmineGitHosting Patches ProjectPatch prepended":{"type":"method","name":"prepended","children":[],"call":[]}," RedmineGitHosting Patches MemberPatch update_project":{"type":"method","name":"update_project","children":[],"call":[" gitolite_accessor update_projects "," project id "," project "," gitolite_accessor "]}," RedmineGitHosting Patches MemberPatch prepended":{"type":"method","name":"prepended","children":[],"call":[]}," RedmineGitHosting Patches JournalPatch prepended":{"type":"method","name":"prepended","children":[],"call":[]}," RedmineGitHosting Patches IssuePatch prepended":{"type":"method","name":"prepended","children":[],"call":[]}," RedmineGitHosting Patches GroupPatch user_removed":{"type":"method","name":"user_removed","children":[],"call":["RepositoryProtectedBranches MemberManager  new remove_user_from_group "," id ","RepositoryProtectedBranches MemberManager  new "," protected_branches each "," protected_branches "]}," RedmineGitHosting Patches GroupPatch user_added":{"type":"method","name":"user_added","children":[],"call":["RepositoryProtectedBranches MemberManager  new add_user_from_group "," id ","RepositoryProtectedBranches MemberManager  new "," protected_branches each "," protected_branches "]}," RedmineGitHosting Patches GroupPatch prepended":{"type":"method","name":"prepended","children":[],"call":[]}," RedmineGitHosting Patches GrackServerPatch gitolite_path":{"type":"method","name":"gitolite_path","children":[],"call":["File  join ","RedmineGitHosting Config  gitolite_redmine_storage_dir ","RedmineGitHosting Config  gitolite_global_storage_dir ","RedmineGitHosting Config  gitolite_home_dir "]}," RedmineGitHosting Patches GrackServerPatch get_git":{"type":"method","name":"get_git","children":[],"call":["Grack Git  new ","@env [] ","@config [] "," gitolite_path "," gitolite_ gitolite_path  "]}," RedmineGitHosting Patches GrackGitPatch repository_object":{"type":"method","name":"repository_object","children":[],"call":["Repository Xitolite  find_by_path "]}," RedmineGitHosting Patches GrackGitPatch logger":{"type":"method","name":"logger","children":[],"call":["RedmineGitHosting  logger "]}," RedmineGitHosting Patches GrackGitPatch smart_http_args":{"type":"method","name":"smart_http_args","children":[],"call":[" repository_object gitolite_repository_name "," repository_object ","RedmineGitHosting Config  gitolite_lib_dir ","RedmineGitHosting Config  gitolite_bin_dir "]}," RedmineGitHosting Patches GrackGitPatch git_command_with_chdir":{"type":"method","name":"git_command_with_chdir","children":[],"call":["RedmineGitHosting Commands  sudo_git_args_for_repo "," smart_http_args "]}," RedmineGitHosting Patches GrackGitPatch git_command_without_chdir":{"type":"method","name":"git_command_without_chdir","children":[],"call":["RedmineGitHosting Commands  sudo_git_cmd "," smart_http_args "]}," RedmineGitHosting Patches GrackGitPatch command_require_chdir?":{"type":"method","name":"command_require_chdir?","children":[],"call":["cmd == ","(str \"update-server-info\") include? "]}," RedmineGitHosting Patches GrackGitPatch git_command_with_sudo":{"type":"method","name":"git_command_with_sudo","children":[],"call":[" git_command_without_chdir concat "," git_command_without_chdir "," git_command_with_chdir concat "," git_command_with_chdir "," command_require_chdir? ","params last "]}," RedmineGitHosting Patches GrackGitPatch directory_exists?":{"type":"method","name":"directory_exists?","children":[],"call":["RedmineGitHosting Commands  sudo_dir_exists? "]}," RedmineGitHosting Patches GrackGitPatch popen_env":{"type":"method","name":"popen_env","children":[],"call":["ENV  [] ","ENV  fetch "]}," RedmineGitHosting Patches GrackGitPatch popen_options":{"type":"method","name":"popen_options","children":[],"call":[]}," RedmineGitHosting Patches GrackGitPatch capture":{"type":"method","name":"capture","children":[],"call":[" logger error "," logger ","RedmineGitHosting Utils Exec  capture ","command shift "]}," RedmineGitHosting Patches GrackGitPatch command":{"type":"method","name":"command","children":[],"call":[" git_command_with_sudo "]}," RedmineGitHosting Patches GrackGitPatch valid_repo?":{"type":"method","name":"valid_repo?","children":[],"call":[" directory_exists? "," repo "]}," RedmineGitHosting Patches GrackGitPatch initialize":{"type":"method","name":"initialize","children":[],"call":[]}," RedmineGitHosting Patches GrackAuthPatch logger":{"type":"method","name":"logger","children":[],"call":["RedmineGitHosting  logger "]}," RedmineGitHosting Patches GrackAuthPatch render_not_found":{"type":"method","name":"render_not_found","children":[],"call":[]}," RedmineGitHosting Patches GrackAuthPatch x_forwarded_ssl_headers?":{"type":"method","name":"x_forwarded_ssl_headers?","children":[],"call":["@request env [] to_s == ","@request env [] to_s ","@request env [] ","@request env "]}," RedmineGitHosting Patches GrackAuthPatch x_forwarded_proto_headers?":{"type":"method","name":"x_forwarded_proto_headers?","children":[],"call":["@request env [] to_s == ","@request env [] to_s ","@request env [] ","@request env "]}," RedmineGitHosting Patches GrackAuthPatch https_headers?":{"type":"method","name":"https_headers?","children":[],"call":["@request env [] to_s == ","@request env [] to_s ","@request env [] ","@request env "]}," RedmineGitHosting Patches GrackAuthPatch is_ssl?":{"type":"method","name":"is_ssl?","children":[],"call":[" x_forwarded_ssl_headers? "," x_forwarded_proto_headers? "," https_headers? ","@request ssl? "]}," RedmineGitHosting Patches GrackAuthPatch repository_by_path":{"type":"method","name":"repository_by_path","children":[],"call":["Repository Xitolite  find_by_path ","m first ","(str \"([^/]+/)*?[^/]+\\\\.git\") match to_a ","(str \"([^/]+/)*?[^/]+\\\\.git\") match ","(str \"([^/]+/)*?[^/]+\\.git\") match to_a  first ","(str \"([^/]+/)*?[^/]+\\\\.git\") (str \"([^/]+/)*?[^/]+\\.git\") match to_a atch to_a ","(str \"([^/]+/)*?[^/]+\\\\.git\") (str \"([^/]+/)*?[^/]+\\.git\") match to_a atch "]}," RedmineGitHosting Patches GrackAuthPatch repository":{"type":"method","name":"repository","children":[],"call":[" repository_by_path ","@request path_info "]}," RedmineGitHosting Patches GrackAuthPatch git_cmd":{"type":"method","name":"git_cmd","children":[],"call":["File  basename ","@request path ","@request post? ","@request params [] ","@request params ","@request get? "]}," RedmineGitHosting Patches GrackAuthPatch authorized_request?":{"type":"method","name":"authorized_request?","children":[],"call":["RedmineGitHosting GitAccess  new upload_access_check allowed? ","RedmineGitHosting GitAccess  new upload_access_check "," repository ","RedmineGitHosting GitAccess  new "," logger error "," logger "," is_ssl? ! "," is_ssl? "," repository public_repo? "," repository public_project? ","RedmineGitHosting GitAccess  new download_access_check allowed? ","RedmineGitHosting GitAccess  new download_access_check "," git_cmd "]}," RedmineGitHosting Patches GrackAuthPatch authenticate_user":{"type":"method","name":"authenticate_user","children":[],"call":["auth find ","RedmineGitHosting Auth  new ","RedmineGitHosting Auth  new  find "]}," RedmineGitHosting Patches GrackAuthPatch auth!":{"type":"method","name":"auth!","children":[],"call":[" unauthorized ","@app call "," authorized_request? ","@env []= ","@user gitolite_identifier "," authenticate_user ","@auth credentials "," bad_request ","@auth basic? ","@auth provided? "," authenticate_user  gitolite_identifier "]}," RedmineGitHosting Patches GrackAuthPatch call":{"type":"method","name":"call","children":[],"call":[" render_not_found "," auth! "," repository ","Rack Auth Basic Request  new ","Rack Request  new "]}," RedmineGitHosting Patches ChangesetPatch url_for_revision":{"type":"method","name":"url_for_revision","children":[],"call":["Rails  application routes url_helpers url_for ","Setting  [] "," repository identifier_param "," repository "," project ","Rails  application routes url_helpers ","Rails  application routes ","Rails  application "]}," RedmineGitHosting Patches ChangesetPatch filechanges_by_action":{"type":"method","name":"filechanges_by_action","children":[],"call":["(send\n  (send nil :filechanges) :select) map ","c action == ","c action "," filechanges select "," filechanges "]}," RedmineGitHosting Patches ChangesetPatch removed_files":{"type":"method","name":"removed_files","children":[],"call":[" filechanges_by_action "]}," RedmineGitHosting Patches ChangesetPatch modified_files":{"type":"method","name":"modified_files","children":[],"call":[" filechanges_by_action "]}," RedmineGitHosting Patches ChangesetPatch added_files":{"type":"method","name":"added_files","children":[],"call":[" filechanges_by_action "]}," RedmineGitHosting Patches ChangesetPatch author_email":{"type":"method","name":"author_email","children":[],"call":["RedmineGitHosting Utils Git  author_email "," committer "]}," RedmineGitHosting Patches ChangesetPatch author_name":{"type":"method","name":"author_name","children":[],"call":["RedmineGitHosting Utils Git  author_name "," committer "]}," RedmineGitHosting Patches ChangesetPatch author_data":{"type":"method","name":"author_data","children":[],"call":[" author_email "," author_name "]}," RedmineGitHosting Patches ChangesetPatch github_payload":{"type":"method","name":"github_payload","children":[],"call":["data []= "," url_for_revision "," revision "," removed_files "," modified_files "," added_files "," author_data "," committed_on "," comments "]}," RedmineGitHosting MarkdownRenderer filters":{"type":"method","name":"filters","children":[],"call":[]}," RedmineGitHosting MarkdownRenderer pipeline":{"type":"method","name":"pipeline","children":[],"call":["HTML Pipeline  new "," filters "]}," RedmineGitHosting MarkdownRenderer to_html":{"type":"method","name":"to_html","children":[],"call":[" pipeline call [] to_s "," pipeline call [] "," pipeline call "," pipeline "]}," RedmineGitHosting GitHostingHookListener github_file?":{"type":"method","name":"github_file?","children":[],"call":["GITHUB_MARKDOWN_EXT  include? ","File  extname ","file path ","(str \".markdown\") include? "]}," RedmineGitHosting GitHostingHookListener redmine_file?":{"type":"method","name":"redmine_file?","children":[],"call":["REDMINE_MARKDOWN_EXT  include? ","File  extname ","file path ","(str \".txt\") include? "]}," RedmineGitHosting GitHostingHookListener get_formated_text":{"type":"method","name":"get_formated_text","children":[],"call":["GitHub Markup  render ","file path ","RedmineGitHosting MarkdownRenderer  to_html "," github_file? ","Redmine WikiFormatting  formatter_for new to_html ","Redmine WikiFormatting  formatter_for new ","Redmine WikiFormatting  formatter_for ","name =~ ","Redmine WikiFormatting  format_names find ","Redmine WikiFormatting  format_names "," redmine_file? ","Redmine CodesetUtil  to_utf8_by_setting ","repository cat "]}," RedmineGitHosting GitHostingHookListener find_readme_file":{"type":"method","name":"find_readme_file","children":[],"call":["f name =~ ","f name ","(or\n  (send\n    (lvar :repository) :entries\n    (lvar :path)\n    (lvar :rev))\n  (array)) find ","repository entries "]}," RedmineGitHosting GitHostingHookListener get_rev":{"type":"method","name":"get_rev","children":[],"call":["rev presence ","context [] params [] ","context [] params ","context [] ","context [] params []  presence "]}," RedmineGitHosting GitHostingHookListener get_path":{"type":"method","name":"get_path","children":[],"call":["context [] params [] ","context [] params ","context [] "]}," RedmineGitHosting GitHostingHookListener view_repositories_show_bottom":{"type":"method","name":"view_repositories_show_bottom","children":[],"call":["context [] send ","context [] "," get_formated_text ","readme_file nil? "," find_readme_file "," get_rev "," get_path "," find_readme_file  nil? "," find_ find_readme_file  "," get_ get_rev  "," get_ get_path  "]}," RedmineGitHosting GitHostingHookListener default_url_options":{"type":"method","name":"default_url_options","children":[],"call":[]}," RedmineGitHosting GitHostingHookListener view_my_account_contextual":{"type":"method","name":"view_my_account_contextual","children":[],"call":[" link_to "," public_keys_path "," l ","user allowed_to_create_ssh_keys? ","context [] ","context []  allowed_to_create_ssh_keys? "]}," RedmineGitHosting GitHostingHookListener view_layouts_base_html_head":{"type":"method","name":"view_layouts_base_html_head","children":[],"call":["header << "," javascript_include_tag + "," javascript_include_tag "," stylesheet_link_tag + "," stylesheet_link_tag "]}," RedmineGitHosting Cache AbstractCache max_cache_elements":{"type":"method","name":"max_cache_elements","children":[],"call":["RedmineGitHosting Config  gitolite_cache_max_elements "]}," RedmineGitHosting Cache AbstractCache max_cache_time":{"type":"method","name":"max_cache_time","children":[],"call":["RedmineGitHosting Config  gitolite_cache_max_time "]}," RedmineGitHosting Cache AbstractCache max_cache_size":{"type":"method","name":"max_cache_size","children":[],"call":["RedmineGitHosting Config  gitolite_cache_max_size "]}," Redmine Scm Adapters XitoliteAdapter binary_data?":{"type":"method","name":"binary_data?","children":[],"call":["content is_binary_data? ","ScmData  binary? ","Gem Version  new >= ","Gem Version  new ","Redmine VERSION  to_s "]}," RedmineGitHosting logprogname":{"type":"method","name":"logprogname","children":[],"call":[]}," RedmineGitHosting RedminePluginLoader skip_lib_file?":{"type":"method","name":"skip_lib_file?","children":[],"call":["Object  const_defined? ! ","Object  const_defined? ","file include? "," hook_file? "]}," RedmineGitHosting Patches DashboardContentProjectPatch InstanceOverwriteMethods block_definitions":{"type":"method","name":"block_definitions","children":[],"call":["blocks []= "," l "]}," RedmineGitHosting JournalLogger msg2str":{"type":"method","name":"msg2str","children":[],"call":["msg inspect "]}," RedmineGitHosting JournalLogger error":{"type":"method","name":"error","children":[],"call":[" msg2str "]}," RedmineGitHosting JournalLogger warn":{"type":"method","name":"warn","children":[],"call":[" msg2str "]}," RedmineGitHosting JournalLogger info":{"type":"method","name":"info","children":[],"call":[" msg2str "]}," RedmineGitHosting JournalLogger debug":{"type":"method","name":"debug","children":[],"call":[" msg2str "]}," RedmineGitHosting JournalLogger init_logs!":{"type":"method","name":"init_logs!","children":[],"call":[]}," RedmineGitHosting FileLogger init_logs!":{"type":"method","name":"init_logs!","children":[],"call":[]}," RedmineGitHosting ConsoleLogger to_console":{"type":"method","name":"to_console","children":[],"call":[" puts "]}," RedmineGitHosting additionals_help_items":{"type":"method","name":"additionals_help_items","children":[],"call":[]}," RedmineGitHosting Hooks GitHostingHookListener github_file?":{"type":"method","name":"github_file?","children":[],"call":["(str \".markdown\") include? ","File  extname ","file path "]}," RedmineGitHosting Hooks GitHostingHookListener redmine_file?":{"type":"method","name":"redmine_file?","children":[],"call":["(str \".txt\") include? ","File  extname ","file path "]}," RedmineGitHosting Hooks GitHostingHookListener get_formatted_text":{"type":"method","name":"get_formatted_text","children":[],"call":["GitHub Markup  render gsub ","GitHub Markup  render ","file path ","RedmineGitHosting MarkdownRenderer  to_html "," github_file? ","Redmine WikiFormatting  formatter_for new to_html ","Redmine WikiFormatting  formatter_for new ","Redmine WikiFormatting  formatter_for ","name =~ ","Redmine WikiFormatting  format_names find ","Redmine WikiFormatting  format_names "," redmine_file? ","Redmine CodesetUtil  to_utf8_by_setting ","repository cat "]}," RedmineGitHosting Hooks GitHostingHookListener find_readme_file":{"type":"method","name":"find_readme_file","children":[],"call":["f name =~ ","f name ","(or\n  (send\n    (lvar :repository) :entries\n    (lvar :path)\n    (lvar :rev))\n  (array)) find ","repository entries "]}," RedmineGitHosting Hooks GitHostingHookListener get_rev":{"type":"method","name":"get_rev","children":[],"call":["rev presence ","context [] params [] ","context [] params ","context [] ","context [] params []  presence "]}," RedmineGitHosting Hooks GitHostingHookListener get_path":{"type":"method","name":"get_path","children":[],"call":["context [] params [] ","context [] params ","context [] "]}," RedmineGitHosting Hooks GitHostingHookListener view_repositories_show_bottom":{"type":"method","name":"view_repositories_show_bottom","children":[],"call":["context [] send ","context [] "," get_formatted_text ","readme_file nil? "," find_readme_file "," get_rev "," get_path "," find_readme_file  nil? "," find_ find_readme_file  "," get_ get_rev  "," get_ get_path  "]}," RedmineGitHosting Hooks GitHostingHookListener default_url_options":{"type":"method","name":"default_url_options","children":[],"call":[]}," RedmineGitHosting Hooks GitHostingHookListener view_my_account_contextual":{"type":"method","name":"view_my_account_contextual","children":[],"call":[" link_to "," public_keys_path "," l ","user allowed_to_create_ssh_keys? ","context [] ","context []  allowed_to_create_ssh_keys? "]}," RedmineGitHosting GitoliteWrappers Base for_action":{"type":"method","name":"for_action","children":[],"call":[" wrappers [] "," wrappers "," raise "," wrappers key? "]}," Redmine Scm Adapters XitoliteAdapter valid_name?":{"type":"method","name":"valid_name?","children":[],"call":[" git_cmd ","name == ","name start_with? ","name is_a? "]}}