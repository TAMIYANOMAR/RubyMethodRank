{" TinyTds Error initialize":{"type":"method","name":"initialize","children":[],"call":[]}," TinyTds Client local_offset":{"type":"method","name":"local_offset","children":[],"call":[" Time  local utc_offset to_r / "," Time  local utc_offset to_r "," Time  local utc_offset "," Time  local "]}," TinyTds Client tds_version_info":{"type":"method","name":"tds_version_info","children":[],"call":["info [] ","TDS_VERSIONS_GETTERS  [] "," tds_version ","TDS_VERSIONS_GETTERS  []  [] "]}," TinyTds Client initialize":{"type":"method","name":"initialize","children":[],"call":[" connect "," raise ","user empty? ","user nil? ","opts [] upcase ","opts [] ","opts [] downcase == ","opts [] downcase ","opts [] nil? ","TDS_VERSIONS_SETTERS  [] ","opts [] to_s ","@@default_query_options dup ","opts []= ","opts [] empty? ","ENV  []= ","opts [] to_s empty? "," warn ","opts [] to_s length > ","opts [] to_s length ","opts [] length > ","opts [] length ","opts [] to_s! ","opts [] to_s strip != ","opts [] to_s strip "," tds_versions_setter "," parse_username ","opts [] to_i ","forced_integer_keys each ","opts [] casecmp zero? ","opts [] casecmp "," class default_query_options dup "," class default_query_options "," class ","(str \"true\") include? ","@message_handler respond_to? ! ","@message_handler respond_to? ","opts []  empty? ","opts []  nil? "," parse_opts [] name ","opts []  respond_to? ! ","opts []  respond_to? "]}," TinyTds Client transpose_iconv_encoding":{"type":"method","name":"transpose_iconv_encoding","children":[],"call":[]}," TinyTds Client default_query_options":{"type":"method","name":"default_query_options","children":[],"call":[]}," TinyTds Client active?":{"type":"method","name":"active?","children":[],"call":[" dead? ! "," dead? "," closed? ! "," closed? "]}," TinyTds Client tds_versions_setter":{"type":"method","name":"tds_versions_setter","children":[],"call":["TDS_VERSIONS_SETTERS  [] ","v to_s ","ENV  [] ","opts [] "]}," TinyTds Client parse_username":{"type":"method","name":"parse_username","children":[],"call":["domain split first ","domain split ","username split ","username include? ! ","username include? ","opts [] ! ","opts [] ","username nil? ","opts []  split ","opts []  include? ! ","opts []  include? ","opts []  nil? "]}," TinyTds Client tds_73?":{"type":"method","name":"tds_73?","children":[],"call":[" tds_version >= "," tds_version "]}," TinyTds Bin binary?":{"type":"method","name":"binary?","children":[],"call":["(send\n  (begin\n    (send\n      (send\n        (lvar :s) :size) :-\n      (send\n        (send\n          (lvar :s) :grep\n          (irange\n            (str \" \")\n            (str \"~\"))) :size))) :/\n  (send\n    (send\n      (lvar :s) :size) :to_f)) > ","(send\n  (send\n    (lvar :s) :size) :-\n  (send\n    (send\n      (lvar :s) :grep\n      (irange\n        (str \" \")\n        (str \"~\"))) :size)) / ","s size to_f ","s size ","s size - ","s grep size ","s grep ","s encode split ","s encode ","File  read ","bytes > ","File  stat blksize ","File  stat ","(s encode split end\n  (begin\n    (s encode split end\n      (s encode split end\n        (lvar :s encode split ) :s encode split ize) :-\n      (s encode split end\n        (s encode split end\n          (lvar :s encode split ) :grep\n          (irange\n            (s encode split tr \" \")\n            (s encode split tr \"~\"))) :s encode split ize))) :/\n  (s encode split end\n    (s encode split end\n      (lvar :s encode split ) :s encode split ize) :to_f)) > ","(s encode split end\n  (s encode split end\n    (lvar :s encode split ) :s encode split ize) :-\n  (s encode split end\n    (s encode split end\n      (lvar :s encode split ) :grep\n      (irange\n        (s encode split tr \" \")\n        (s encode split tr \"~\"))) :s encode split ize)) / ","s encode split  s encode split ize to_f ","s encode split  s encode split ize ","s encode split  s encode split ize - ","s encode split  grep s encode split ize ","s encode split  grep ","s encode split  encode s encode split plit ","s encode split  encode ","bytes encode split  > ","File  stat blksize  > ","File  s encode split tat blks encode split ize ","File  s encode split tat "]}," TinyTds Bin which":{"type":"method","name":"which","children":[],"call":[" binary? ! "," binary? ","File  executable? ! ","File  executable? ","exe == ","File  expand_path ","File  join "," name ","EXTS  each ","PATHS  each ","@exts each "," search_paths each "," search_paths ","File  File  expand_path cutable? ! ","File  File  expand_path cutable? ","File  expand_path  == "]}," TinyTds Bin find_exe":{"type":"method","name":"find_exe","children":[],"call":["File  exists? "," puts ","f inspect ","File  join ","EXTS  each "," name ","File  exist? ","@exts each ","Gem  ports_bin_paths each ","Gem  ports_bin_paths ","File  join  inspect "]}," TinyTds Bin find_bin":{"type":"method","name":"find_bin","children":[],"call":["File  join "," name "]}," TinyTds Bin info":{"type":"method","name":"info","children":[],"call":[" path "," name "]}," TinyTds Bin path":{"type":"method","name":"path","children":[],"call":[" which ","File  exists? ","File  exist? "]}," TinyTds Bin initialize":{"type":"method","name":"initialize","children":[],"call":[" find_exe "," find_bin "," puts "," info ","options [] ","File  join ","(if\n  (send\n    (const nil :ENV) :[]\n    (str \"PATHEXT\"))\n  (send\n    (send\n      (const nil :ENV) :[]\n      (str \"PATHEXT\")) :split\n    (str \";\"))\n  (array\n    (str \"\"))) | ","ENV  [] split ","ENV  [] ","Gem  root_path "]}," TinyTds Bin exe":{"type":"method","name":"exe","children":[],"call":["Kernel  system ","bin path "," puts ","bin info "," new ","bin run ","x == ","args any? "," new  path "," new  info "," new  run "]}," TinyTds Bin run":{"type":"method","name":"run","children":[],"call":["$? to_i ","Kernel  system ","Shellwords  join ","args unshift "," path ","$CHILD_STATUS to_i "," with_ports_paths "]}," TinyTds Gem ports_host":{"type":"method","name":"ports_host","children":[],"call":["h gsub ","RbConfig CONFIG  [] ","RbConfig CONFIG  []  gsub "]}," TinyTds Gem ports_lib_paths":{"type":"method","name":"ports_lib_paths","children":[],"call":["Dir  glob ","File  join "," ports_host "," ports_root_path "]}," TinyTds Gem ports_bin_paths":{"type":"method","name":"ports_bin_paths","children":[],"call":["Dir  glob ","File  join "," ports_host "," ports_root_path "]}," TinyTds Gem ports_root_path":{"type":"method","name":"ports_root_path","children":[],"call":["File  join "," root_path "]}," TinyTds Gem root_path":{"type":"method","name":"root_path","children":[],"call":["File  expand_path "]}," TinyTds Bin with_ports_paths":{"type":"method","name":"with_ports_paths","children":[],"call":["ENV  []= "," block_given? ","(send\n  (const nil :Gem) :ports_bin_paths) flatten join ","(send\n  (const nil :Gem) :ports_bin_paths) flatten ","Gem  ports_bin_paths ","ENV  [] "]}," TinyTds Bin search_paths":{"type":"method","name":"search_paths","children":[],"call":["ENV  [] split ","ENV  [] "]}}