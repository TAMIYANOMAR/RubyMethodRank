{" Travis Tools TokenFinder find_hub":{"type":"method","name":"find_hub","children":[],"call":[" raise "," explode ","data first [] ","data first ","data size == ","data size "," Array ","data [] "," github ","YAML  load_file ","File  expand_path "," hub ","File  readable? ","YAML  load_file  first [] ","YAML  load_file  first ","YAML  load_file  size == ","YAML  load_file  size ","YAML  load_file  [] "]}," Travis Tools TokenFinder find_netrc":{"type":"method","name":"find_netrc","children":[],"call":[" raise "," explode ","e size == ","e size ","data detect ","Netrc  read [] "," github ","Netrc  read "," netrc ","File  readable? ","Netrc  read []  detect "]}," Travis Tools TokenFinder find":{"type":"method","name":"find","children":[],"call":[" find_hub "," find_netrc "]}," Travis Tools TokenFinder netrc=":{"type":"method","name":"netrc=","children":[],"call":["File  expand_path "]}," Travis Tools TokenFinder hub=":{"type":"method","name":"hub=","children":[],"call":["File  expand_path "]}," Travis Tools TokenFinder initialize":{"type":"method","name":"initialize","children":[],"call":[" explode= ","options [] "," github= "," hub= ","ENV  [] "," netrc= ","Netrc  default_path "," github == "," github "," github nil? "]}," Travis Client new":{"type":"method","name":"new","children":[],"call":[]}," Travis Client User synced_at=":{"type":"method","name":"synced_at=","children":[],"call":[" set_attribute "," time "]}," Travis Client Session cached":{"type":"method","name":"cached","children":[],"call":["cache [] ","store [] ","keys inject ","keys pop "]}," Travis Client Session fetch_many":{"type":"method","name":"fetch_many","children":[],"call":[" get [] ","entity many "," get ","entity base_path "]}," Travis Client Session fetch_one":{"type":"method","name":"fetch_one","children":[],"call":[" get [] ","entity one "," get ","entity many ","entity base_path "]}," Travis Client Session subcaches":{"type":"method","name":"subcaches","children":[],"call":["subcache is_a? ","@cache each_value "]}," Travis Client Session clear_find_cache":{"type":"method","name":"clear_find_cache","children":[],"call":["k != ","subcache delete_if "," subcaches "]}," Travis Client Session reset_entities":{"type":"method","name":"reset_entities","children":[],"call":["e attributes clear ","e attributes ","subcache [] each_value ","subcache [] ","subcache include? "," subcaches "]}," Travis Client Session faraday_adapter":{"type":"method","name":"faraday_adapter","children":[],"call":["Faraday  default_adapter "]}," Travis Client Session handle_error":{"type":"method","name":"handle_error","children":[],"call":[" raise ","e backtrace ","e is_a? ","e message ","e response [] to_str ","e response [] ","e response "," error_message "]}," Travis Client Session create_entity":{"type":"method","name":"create_entity","children":[],"call":["entity update_attributes ","type new "," cached "," Integer ","data fetch ","type cast_id ","type id_field ","type weak? ","type id? "," primitive? ","String  === ","Integer  === ","type new  update_attributes ","type cast_ Integer  ","type cast_type cast_id  ","type  Integer _field ","type type cast_id _field ","type  Integer ? ","type type cast_id ? "]}," Travis Client Session session":{"type":"method","name":"session","children":[],"call":[]}," Travis Client Session clear_cache!":{"type":"method","name":"clear_cache!","children":[],"call":["@cache clear "," reset_entities "]}," Travis Client Session clear_cache":{"type":"method","name":"clear_cache","children":[],"call":[" clear_find_cache "," reset_entities "]}," Travis Client Session inspect":{"type":"method","name":"inspect","children":[],"call":[" uri "," class "]}," Travis Client Session post_raw":{"type":"method","name":"post_raw","children":[],"call":[" handle_error "," connection post body "," connection post "," connection "," raw "]}," Travis Client Session get_raw":{"type":"method","name":"get_raw","children":[],"call":[" handle_error "," connection get body "," connection get "," connection "," raw "]}," Travis Client Session get":{"type":"method","name":"get","children":[],"call":["result []= "," create_entity ","value to_ary map ","value to_ary ","value respond_to? ","Entity  subclass_for "," get_raw each_pair "," get_raw "," load "]}," Travis Client Session reload":{"type":"method","name":"reload","children":[],"call":["entity update_attributes ","result attributes ","result attributes != ","entity attributes "," fetch_one ","entity id ","entity class "," reset "," fetch_one  attributes "," fetch_one  attributes != "]}," Travis Client Session find_one_or_many":{"type":"method","name":"find_one_or_many","children":[],"call":[" Array + "," Array ","result [] ","entity many ","result include? ","entity one "," get ","args is_a? "," cached "," raise ","entity respond_to? "," get  [] "," get  include? ","entity result []  "]}," Travis Client Session find_many":{"type":"method","name":"find_many","children":[],"call":[" fetch_many "," cached "," raise ","entity many ","entity respond_to? "]}," Travis Client Session find_one":{"type":"method","name":"find_one","children":[],"call":[" fetch_one "," cached "," create_entity ","id is_a? "," raise ","entity many ","entity respond_to? ","entity id_field ","entity id? "]}," Travis Client Session headers=":{"type":"method","name":"headers=","children":[],"call":[" connection headers= "," connection "," clear_cache! "]}," Travis Client Session connection=":{"type":"method","name":"connection=","children":[],"call":["connection headers ","connection headers merge! "," headers "," clear_cache! "]}," Travis Client Session access_token=":{"type":"method","name":"access_token=","children":[],"call":[" headers delete "," headers "," headers []= "," clear_cache! "]}," Travis Client Session uri=":{"type":"method","name":"uri=","children":[],"call":[" connection= ","faraday adapter "," faraday_adapter ","faraday response ","faraday request ","Faraday  new "," clear_cache! "," debug_http "," ssl "]}," Travis Client Session uri":{"type":"method","name":"uri","children":[],"call":[" connection url_prefix to_s "," connection url_prefix "," connection "]}," Travis Client Session initialize":{"type":"method","name":"initialize","children":[],"call":[" headers [] "," headers "," raise "," connection "," public_send ","options each_pair ","options respond_to? "," check_ssl "," set_user_agent "," headers []= "]}," Travis Client Repository last_build_finished_at=":{"type":"method","name":"last_build_finished_at=","children":[],"call":[" set_attribute "," time "]}," Travis Client Repository last_build_started_at=":{"type":"method","name":"last_build_started_at=","children":[],"call":[" set_attribute "," time "]}," Travis Client Repository encrypt":{"type":"method","name":"encrypt","children":[],"call":[" key encrypt "," key "]}," Travis Client Repository public_key=":{"type":"method","name":"public_key=","children":[],"call":[" set_attribute ","Key  new ","key is_a? ","Key  new  is_a? "]}," Travis Client Repository public_key":{"type":"method","name":"public_key","children":[],"call":["Key  new ","payload fetch "," session get_raw "," id "," session "," attributes [] "," attributes ","payload [] "," session get_raw  fetch "," session get_raw  [] "]}," Travis Client Repository Key ==":{"type":"method","name":"==","children":[],"call":["other to_s == ","other to_s "]}," Travis Client Repository Key to_rsa":{"type":"method","name":"to_rsa","children":[],"call":["OpenSSL PKey RSA  new "," to_s gsub "," to_s ","Tools SSLKey  public_rsa_key "]}," Travis Client Repository Key encrypt":{"type":"method","name":"encrypt","children":[],"call":["Base64  encode64 strip ","Base64  encode64 "," to_rsa public_encrypt "," to_rsa ","Base64  encode64 gsub "]}," Travis Client Repository Key initialize":{"type":"method","name":"initialize","children":[],"call":[]}," Travis Client Namespace delegate_session":{"type":"method","name":"delegate_session","children":[],"call":["namespace session= ","klass define_singleton_method ","namespace session ","klass extend ","klass == "]}," Travis Client Namespace fix_names":{"type":"method","name":"fix_names","children":[],"call":["klass const_set ","const == "," const_get ","klass const_get "," constants each "," constants ","klass klass const_get _set ","klass const_get  == "," klass const_get _get ","klass klass const_get _get "," klass const_get ants each "," klass const_get ants "]}," Travis Client Namespace included":{"type":"method","name":"included","children":[],"call":[" delegate_session "," fix_names "]}," Travis Client Namespace initialize":{"type":"method","name":"initialize","children":[],"call":[" const_set ","Curry  new ","subclass name [] ","subclass name ","Entity  subclasses each ","Entity  subclasses ","Travis Client  new ","session is_a? ","subclass subclass name []  [] ","subclass subclass name []  ","Travis Client  new  is_a? "]}," Travis Client Namespace Curry session":{"type":"method","name":"session","children":[],"call":[" namespace session "," namespace "]}," Travis Client Namespace Curry find_many":{"type":"method","name":"find_many","children":[],"call":["entity curry= "," session find_many each "," session find_many "," type "," session "]}," Travis Client Namespace Curry current":{"type":"method","name":"current","children":[],"call":["e curry= "," Array each "," Array "," session find_one_or_many "," type "," session "]}," Travis Client Namespace Curry find_one":{"type":"method","name":"find_one","children":[],"call":["result curry= "," session find_one "," type "," session "," session find_one  curry= "]}," Travis Client Namespace Curry initialize":{"type":"method","name":"initialize","children":[],"call":[]}," Travis Client Methods user":{"type":"method","name":"user","children":[],"call":[" session find_one "," session "," raise "]}," Travis Client Methods repo":{"type":"method","name":"repo","children":[],"call":[" session find_one "," session "]}," Travis Client Methods repos":{"type":"method","name":"repos","children":[],"call":[" session find_many "," session "]}," Travis Client Methods api_endpoint=":{"type":"method","name":"api_endpoint=","children":[],"call":[" session uri= "," session "]}," Travis Client Methods explicit_api_endpoint?":{"type":"method","name":"explicit_api_endpoint?","children":[],"call":[]}," Travis Client Methods github_auth":{"type":"method","name":"github_auth","children":[],"call":[" session access_token= ","reply [] "," session "," session post_raw "," raise ","reply key? ","reply respond_to? "," session post_raw  [] "," session post_raw  key? "," session post_raw  respond_to? "]}," Travis Client Methods api_endpoint":{"type":"method","name":"api_endpoint","children":[],"call":[" session uri "," session "]}," Travis Client Methods access_token=":{"type":"method","name":"access_token=","children":[],"call":[" session access_token= "," session "]}," Travis Client Methods access_token":{"type":"method","name":"access_token","children":[],"call":[" session access_token "," session "]}," Travis Client Entity time":{"type":"method","name":"time","children":[],"call":[" raise ","value inspect ","Time  parse ","value to_s ","value empty? ","value nil? ","Time  at ","value is_a? ","Time  local ","value mday ","value mon ","value year ","value respond_to? ","t getlocal ","Time  utc ","d sec + ","d sec_fraction ","d sec ","d min ","d hour ","d mday ","d mon ","d year ","value new_offset ","value to_time ","value inspecTime  utc  ","value Time  utc o_s ","value empTime  utc y? ","Time  aTime  utc  ","value mvalue new_offset ay ","value respond_Time  utc o? ","value responvalue new_offset _to? ","Time  utc  geTime  utc local ","Time  uTime  utc c ","value new_offset  sec + ","d sec_fracTime  utc ion ","value new_offset  sec_fraction ","value new_offset  sec ","value new_offset  min ","value new_offset  hour ","value new_offset  mvalue new_offset ay ","value new_offset  mon ","value new_offset  year ","value new_offseTime  utc  ","value Time  utc o_Time  utc ime "]}," Travis Client Entity load_attribute":{"type":"method","name":"load_attribute","children":[],"call":[" attributes [] ","name to_s "," attributes "," reload "," missing? "," session reload "," session "]}," Travis Client Entity set_attribute":{"type":"method","name":"set_attribute","children":[],"call":[" attributes []= ","name to_s "," attributes "]}," Travis Client Entity inspect_info":{"type":"method","name":"inspect_info","children":[],"call":[" id "]}," Travis Client Entity inspect":{"type":"method","name":"inspect","children":[],"call":[" inspect_info "," curry "," curry to_s size < ","klass to_s size ","klass to_s "," curry to_s size "," curry to_s "," curry name "," class "," curry  to_s size "," class  to_s size "," curry  to_s "," class  to_s "]}," Travis Client Entity complete?":{"type":"method","name":"complete?","children":[],"call":[" attributes include? "," attributes "," attribute_names all? "," attribute_names "]}," Travis Client Entity missing?":{"type":"method","name":"missing?","children":[],"call":[" attributes include? ! "," attributes include? ","key to_s "," attributes "," include? "]}," Travis Client Entity load":{"type":"method","name":"load","children":[],"call":[" reload "," complete? "," session reload "," session "]}," Travis Client Entity reload":{"type":"method","name":"reload","children":[],"call":[" session reload "," session "," session reset "," relations each "," relations "]}," Travis Client Entity include?":{"type":"method","name":"include?","children":[],"call":[" attribute_names include? ","key to_s "," attribute_names "," attributes include? "," attributes "]}," Travis Client Entity []=":{"type":"method","name":"[]=","children":[],"call":[" send "," include? ","key to_s ","key to_s  to_s "]}," Travis Client Entity []":{"type":"method","name":"[]","children":[],"call":[" send "," include? ","key to_s ","key to_s  to_s "]}," Travis Client Entity attribute_names":{"type":"method","name":"attribute_names","children":[],"call":[" class attributes "," class "]}," Travis Client Entity update_attributes":{"type":"method","name":"update_attributes","children":[],"call":[" []= ","data each_pair "]}," Travis Client Entity initialize":{"type":"method","name":"initialize","children":[],"call":[" Integer "," class cast_id "," class "," raise ","%p is not a valid id % "," class id? "]}," Travis Client Entity attributes":{"type":"method","name":"attributes","children":[],"call":[]}," Travis Client Entity many":{"type":"method","name":"many","children":[],"call":[]}," Travis Client Entity one":{"type":"method","name":"one","children":[],"call":[]}," Travis Client Entity subclass_for":{"type":"method","name":"subclass_for","children":[],"call":[]}," Travis Client Entity subclasses":{"type":"method","name":"subclasses","children":[],"call":[]}," Travis CLI preparse":{"type":"method","name":"preparse","children":[],"call":["args << ","unparsed to_s "," preparse ","unparsed each ","opts merge! "]}," Travis CLI command_name":{"type":"method","name":"command_name","children":[],"call":["name to_s capitalize ","name to_s "," command_name ","name [] ","name split map join ","name split map ","name split "]}," Travis CLI command?":{"type":"method","name":"command?","children":[],"call":["constant abstract? ! ","constant abstract? ","constant < ","constant is_a? "]}," Travis CLI commands":{"type":"method","name":"commands","children":[],"call":[" command? ","(send\n  (send\n    (const nil :CLI) :constants) :map) select ","CLI  const_get ","CLI  constants map ","CLI  constants "," try_const_get "]}," Travis CLI command":{"type":"method","name":"command","children":[],"call":[" exit ","$stderr puts "," command? ","CLI  const_get "," const_defined? ","const_name =~ "," command_name "," command_name  =~ "]}," Travis CLI run":{"type":"method","name":"run","children":[],"call":["command execute ","command parse "," command new "," command ","args shift ","args empty? "," preparse "," command new  execute "," command new  parse ","  command new  new ","  command new  "]}," Travis CLI windows?":{"type":"method","name":"windows?","children":[],"call":["RUBY_PLATFORM  =~ ","File ALT_SEPARATOR  == "]}," Travis CLI Whoami run":{"type":"method","name":"run","children":[],"call":[" say "," user name "," user "," user login "," authenticate ","You are %s << ","name to_s "," user name to_s empty? "," user name to_s "]}," Travis CLI Version run":{"type":"method","name":"run","children":[],"call":[" say "]}," Travis CLI RepoCommand detect_api_endpoint":{"type":"method","name":"detect_api_endpoint","children":[],"call":["GH  head "," slug "," repo_config [] "," repo_config "," repo_config []= "," api_endpoint "," explicit_api_endpoint? "," load_gh "," config [] "," config "," config [] !~ ","ENV  [] "," enterprise? "]}," Travis CLI RepoCommand repo_config":{"type":"method","name":"repo_config","children":[],"call":[" config [] [] "," slug "," config [] "," config "]}," Travis CLI RepoCommand find_slug":{"type":"method","name":"find_slug","children":[],"call":["git_info =~ "," store_slug "," interactive? "," detect_slug "," load_slug ","(str \"git config --get remote.\") chomp ","git_remote empty? ","(str \"git config --get branch.\") chomp ","(str \"git name-rev --name-only HEAD 2>&1\") chomp ","(str \"git name-rev --name-only HEAD 2>\") chomp ","Addressable URI  parse path =~ ","Addressable URI  parse path ","Addressable URI  parse ","(str \"git config --get remote.\") chomp  =~ "," store_ detect_slug  "," detect_ detect_slug  "," load_ detect_slug  ","(str \"git config --get branch.\") chomp  empty? "]}," Travis CLI RepoCommand detected_endpoint?":{"type":"method","name":"detected_endpoint?","children":[],"call":[" explicit_api_endpoint? ! "," explicit_api_endpoint? "]}," Travis CLI RepoCommand repository":{"type":"method","name":"repository","children":[],"call":[" error "," color "," slug "," repo "," api_endpoint "]}," Travis CLI RepoCommand setup":{"type":"method","name":"setup","children":[],"call":[" api_endpoint= "," detect_api_endpoint "," error "," find_slug "," slug "," repository load "," repository "," slug include? "," setup_enterprise "]}," Travis CLI Raw run":{"type":"method","name":"run","children":[],"call":[" pp "," say ","reply to_json "," json? "," session get_raw "," session "," error "," session get_raw  to_json "]}," Travis CLI Parser new":{"type":"method","name":"new","children":[],"call":["b [] "," on_initialize each "," on_initialize ","result parser= ","OptionParser  new "," attr_accessor "," method_defined? "]}," Travis CLI Parser on":{"type":"method","name":"on","children":[],"call":["block call ","instance parser on ","instance parser "," on_initialize ","instance public_send "," proc "," alias_method "," method_defined? ! "," method_defined? ","full_arg start_with? "," attr_writer "," attr_reader ","full_arg gsub gsub ","full_arg gsub ","a start_with? ","args detect "]}," Travis CLI Parser on_initialize":{"type":"method","name":"on_initialize","children":[],"call":[" superclass on_initialize + "," superclass on_initialize "," superclass "," superclass respond_to? ","@on_initialize << "]}," Travis CLI Login ask_info":{"type":"method","name":"ask_info","children":[],"call":[" empty_line "," github_password= ","q echo= "," ask "," github_login= "," say "," color "," github_endpoint host "," github_endpoint "," github_login nil? ! "," github_login nil? "," github_login "]}," Travis CLI Login github_scopes":{"type":"method","name":"github_scopes","children":[],"call":[" org? "]}," Travis CLI Login generate_github_token":{"type":"method","name":"generate_github_token","children":[],"call":[" error ","JSON  parse [] ","JSON  parse ","e info [] ","e info "," raise "," explode? "," callback= ","gh delete ","reply [] [] [] ","reply [] [] ","reply [] "," proc "," github_token= ","gh post "," api_endpoint "," github_scopes ","GH  with "," github_password "," github_login "," ask_info ","error info [] ","error info "," generate_github_token "," ask_2fa ","error info [] == ","options []= "," github_otp "," load_gh ","GH  with  delete ","gh post  [] [] [] ","gh post  [] [] ","gh post  [] ","GH  with  post "," load_GH  with  "]}," Travis CLI Login run":{"type":"method","name":"run","children":[],"call":[" callback call "," callback "," success "," endpoint_config []= "," github_auth "," github_token "," endpoint_config "," generate_github_token "," login "," list_token "," list_github_token ","Travis Tools TokenFinder  find "," github_endpoint host "," github_endpoint "," explode? "," auto? "]}," Travis CLI Help commands":{"type":"method","name":"commands","children":[],"call":["c command_name ","CLI  commands sort_by ","CLI  commands "]}," Travis CLI Help run":{"type":"method","name":"run","children":[],"call":[" say ","c command_name "," commands each "," commands ","CLI  command new help ","CLI  command new ","CLI  command "," color ","cmd description "," color ljust ","cmd command_name ","cmd_grp cmds each ","cmd_grp cmds ","cmd_grp header ","(lvar :other_cmds) each ","CommandGroup  new "," other_commands "," repo_commands "," api_commands ","c description ","(lvar :CommandGroup  new ) each "]}," Travis CLI Endpoint run":{"type":"method","name":"run","children":[],"call":[" say "," api_endpoint "," run_travis "," run_github "," github? "," set_default? "," config []= "," config "," config delete "," config [] "," drop_default? "]}," Travis CLI Encrypt travis_yaml":{"type":"method","name":"travis_yaml","children":[],"call":[" travis_yaml ","parent != ","File  expand_path ","File  exist? "," error ","parent == ","File  expand_path  != ","File  expand_File  expand_path  ","File  expand_path  == "]}," Travis CLI Encrypt run":{"type":"method","name":"run","children":[],"call":[" say "," template ","encrypted inspect ","File  write ","travis_config to_yaml "," travis_yaml "," << ","nested_config [] ","c [] ","keys inject ","keys pop "," config_key split "," config_key ","YAML  load_file "," repository encrypt "," repository ","$stdin read "," color ","$stdin tty? ","data empty? ","args join ","list join "," format ","data inspect ","encrypted map ","encrypted each ","data map ","data split "," split? "," warn "," command ","args first ","args first =~ "," error ","(begin\n  (send\n    (send\n      (lvar :error) :message) :sub\n    (str \" for key size\")\n    (str \"\"))) << << << ","(begin\n  (send\n    (send\n      (lvar :error) :message) :sub\n    (str \" for key size\")\n    (str \"\"))) << << ","(begin\n  (send\n    (send\n      (lvar :error) :message) :sub\n    (str \" for key size\")\n    (str \"\"))) << ","error message sub ","error message "," confirm_and_save_travis_config "," set_config "," warn_env_assignments ","data strip ","args first include? ! ","args first include? "," config_key start_with? ! "," config_key start_with? "," override "," append? ! "," append? "," add? "," add? ! "," override? "," force_interactive "," force_interactive nil? ","nested_config << ","(array) include? "," travis_config to_yaml "," travis_config "," save_travis_config "," repository encrypt  inspect ","YAML  load_file  to_yaml "," config_key split  inject "," config_key split  pop ","$stdin read  empty? ","args join  empty? ","data split  empty? ","$stdin read  inspect ","args join  inspect ","data split  inspect "," repository encrypt  map "," repository encrypt  each ","$stdin read  map ","args join  map ","data split  map ","$stdin read  split ","args join  split ","data split  split "," confirm_and_save_YAML  load_file  ","$stdin read  strip ","args join  strip ","data split  strip "," YAML  load_file  to_yaml "," YAML  load_file  "," save_YAML  load_file  "]}," Travis CLI Command wrong_args":{"type":"method","name":"wrong_args","children":[],"call":[" say "," help "," error "]}," Travis CLI Command check_arity":{"type":"method","name":"check_arity","children":[],"call":[" wrong_args ","args any? ","type == ","args shift ","method parameters each ","method parameters ","method respond_to? "]}," Travis CLI Command store_config":{"type":"method","name":"store_config","children":[],"call":[" save_asset ","@config to_yaml "," save_file "]}," Travis CLI Command load_config":{"type":"method","name":"load_config","children":[],"call":["@config dup ","YAML  load "," load_asset "," exit ","q default= "," agree "," interactive? "," warn "," color "," config_path "," raise "," explode? "," load_file ","YAML  load  dup "]}," Travis CLI Command save_asset":{"type":"method","name":"save_asset","children":[],"call":["File  write ","content to_s "," asset_path "]}," Travis CLI Command load_asset":{"type":"method","name":"load_asset","children":[],"call":["File  read ","File  exist? "," asset_path "," asset_ asset_path  "]}," Travis CLI Command asset_path":{"type":"method","name":"asset_path","children":[],"call":["File  join ","Dir  mkdir ","File  directory? ","File  expand_path ","Dir  home ","ENV  fetch "]}," Travis CLI Command success":{"type":"method","name":"success","children":[],"call":[" say "," color "," interactive? "]}," Travis CLI Command command":{"type":"method","name":"command","children":[],"call":[" color ","File  basename "]}," Travis CLI Command error":{"type":"method","name":"error","children":[],"call":[" exit "," block_given? "," say "," color "," write_to "," warn "]}," Travis CLI Command empty_line":{"type":"method","name":"empty_line","children":[],"call":[" say "]}," Travis CLI Command interactive?":{"type":"method","name":"interactive?","children":[],"call":[" force_interactive ","io tty? "," force_interactive nil? "]}," Travis CLI Command color":{"type":"method","name":"color","children":[],"call":[" terminal color "," terminal "," interactive? "," Array map "," Array ","line to_s "]}," Travis CLI Command template":{"type":"method","name":"template","children":[],"call":["File  read split [] strip ","File  read split [] ","File  read split ","File  read "]}," Travis CLI Command say":{"type":"method","name":"say","children":[],"call":[" terminal say ","data gsub gsub ","data gsub "," terminal ","format % "," color "," interactive? "," format ","format %  gsub gsub ","format %  gsub "]}," Travis CLI Command help":{"type":"method","name":"help","children":[],"call":[" parser to_s "," parser "," parser banner= "," usage ","(send\n  (send\n    (send\n      (self) :class) :description) :sub\n  (regexp\n    (str \".\")\n    (regopt))) + + + ","(send\n  (send\n    (send\n      (self) :class) :description) :sub\n  (regexp\n    (str \".\")\n    (regopt))) + + ","(send\n  (send\n    (send\n      (self) :class) :description) :sub\n  (regexp\n    (str \".\")\n    (regopt))) + ","c upcase "," class description sub "," class description "," class "]}," Travis CLI Command usage":{"type":"method","name":"usage","children":[],"call":["Usage:  << "," color ","usage << ","type == ","method parameters each ","method parameters ","method respond_to? "," method "," command_name ","method arity != ","method arity "," usage_for "," method  parameters each "," method  parameters "," method  respond_to? ","  method  "," method  arity != "," method  arity "]}," Travis CLI Command command_name":{"type":"method","name":"command_name","children":[],"call":[" class command_name "," class "]}," Travis CLI Command execute":{"type":"method","name":"execute","children":[],"call":[" error ","e message "," raise "," explode? "," store_config "," run "," arguments "," setup "," load_config "," check_arity "," method "," store_error "," color "," command "," endpoint_option "," interactive? "," clear_error "," check_completion "," check_version "," check_ruby "," setup_trap ","message == ","Travis Client Error  === ","e e message  ","e message  == "]}," Travis CLI Command setup":{"type":"method","name":"setup","children":[],"call":[]}," Travis CLI Command parse":{"type":"method","name":"parse","children":[],"call":[" error ","e message "," arguments concat "," arguments "," parser parse "," parser "]}," Travis CLI Command write_to":{"type":"method","name":"write_to","children":[],"call":[" output= "," output "]}," Travis CLI Command output=":{"type":"method","name":"output=","children":[],"call":["@output __setobj__ "]}," Travis CLI Command output":{"type":"method","name":"output","children":[],"call":["@output __getobj__ "]}," Travis CLI Command input=":{"type":"method","name":"input=","children":[],"call":["@input __setobj__ "]}," Travis CLI Command input":{"type":"method","name":"input","children":[],"call":["@input __getobj__ "]}," Travis CLI Command initialize":{"type":"method","name":"initialize","children":[],"call":[" public_send "," respond_to? ","options each ","HighLine  new ","SimpleDelegator  new ","Travis Tools Formatter  new "," input= "," output= "]}," Travis CLI Command skip":{"type":"method","name":"skip","children":[],"call":[]}," Travis CLI Command abstract":{"type":"method","name":"abstract","children":[],"call":[]}," Travis CLI Command abstract?":{"type":"method","name":"abstract?","children":[],"call":[]}," Travis CLI ApiCommand fetch_token":{"type":"method","name":"fetch_token","children":[],"call":[" endpoint_config [] "," endpoint_config ","ENV  [] "]}," Travis CLI ApiCommand endpoint_option":{"type":"method","name":"endpoint_option","children":[],"call":[" -e %p % "," api_endpoint "," pro? "," org? "," detected_endpoint? ","key == ","v start_with? "," config [] detect "," config [] "," config "]}," Travis CLI ApiCommand detected_endpoint":{"type":"method","name":"detected_endpoint","children":[],"call":[" default_endpoint "]}," Travis CLI ApiCommand authenticate":{"type":"method","name":"authenticate","children":[],"call":[" error "," command "," endpoint_option "," access_token nil? "," access_token "]}," Travis CLI ApiCommand detected_endpoint?":{"type":"method","name":"detected_endpoint?","children":[],"call":[" api_endpoint == "," detected_endpoint "," api_endpoint "]}," Travis CLI ApiCommand org?":{"type":"method","name":"org?","children":[],"call":[" api_endpoint == "," api_endpoint "]}," Travis CLI ApiCommand pro?":{"type":"method","name":"pro?","children":[],"call":[" api_endpoint == "," api_endpoint "]}," Travis CLI ApiCommand setup":{"type":"method","name":"setup","children":[],"call":[" authenticate "," pro? "," access_token "," endpoint_config [] "," endpoint_config "," fetch_token "," enterprise? "," session ssl= "," session "," insecure? "," insecure= "," endpoint_config []= "," insecure "," insecure nil? "," api_endpoint= "," default_endpoint "," explicit_api_endpoint? ! "," explicit_api_endpoint? "," setup_enterprise "]}," Travis CLI ApiCommand endpoint_config":{"type":"method","name":"endpoint_config","children":[],"call":[" config [] [] "," api_endpoint "," config [] "," config "]}," Travis CLI ApiCommand initialize":{"type":"method","name":"initialize","children":[],"call":["Travis Client  new "," command_name "]}," Travis Tools Formatter job_config":{"type":"method","name":"job_config","children":[],"call":["output join ","output << ","CONFIG_KEYS  include? ","config each_pair "]}," Travis Tools Formatter time":{"type":"method","name":"time","children":[],"call":["time localtime strftime ","time localtime ","time nil? "]}," Travis Tools Formatter duration":{"type":"method","name":"duration","children":[],"call":["output join ","output << ","output empty? ","seconds > ","minutes > ","hours > ","minutes divmod ","seconds divmod ","(send\n  (send\n    (const nil :Time) :now) :-\n  (lvar :seconds)) to_i ","Time  now - ","Time  now ","seconds is_a? ","seconds nil? ","(send\n  (send\n    (const nil :Time) :now) :-\n  (lvar :seconds)) to_i  > ","(send\n  (send\n    (const nil :Time) :now) :-\n  (lvar :seconds)) to_i  divmod ","(send\n  (send\n    (const nil :Time) :now) :-\n  (lvar :(send\n  (send\n    (const nil :Time) :now) :-\n  (lvar :seconds)) to_i )) to_i ","(send\n  (send\n    (const nil :Time) :now) :-\n  (lvar :seconds)) to_i  is_a? ","(send\n  (send\n    (const nil :Time) :now) :-\n  (lvar :seconds)) to_i  nil? "]}," Travis Client User sync":{"type":"method","name":"sync","children":[],"call":[" reload "," session post_raw "," session "]}," Travis Client States check_state":{"type":"method","name":"check_state","children":[],"call":[" raise ","unknown state %p for %p % "," state ","STATES  include? "]}," Travis Client States running?":{"type":"method","name":"running?","children":[],"call":[" state == "," state "]}," Travis Client States red?":{"type":"method","name":"red?","children":[],"call":[" color == "," color "]}," Travis Client States green?":{"type":"method","name":"green?","children":[],"call":[" color == "," color "]}," Travis Client States yellow?":{"type":"method","name":"yellow?","children":[],"call":[" color == "," color "]}," Travis Client States color":{"type":"method","name":"color","children":[],"call":[" passed? "," pending? "," state "]}," Travis Client States created?":{"type":"method","name":"created?","children":[],"call":[" state ! ! "," state ! "," state "," check_state "]}," Travis Client States unsuccessful?":{"type":"method","name":"unsuccessful?","children":[],"call":[" canceled? "," failed? "," errored? "]}," Travis Client States canceled?":{"type":"method","name":"canceled?","children":[],"call":[" state == "," state "," check_state "]}," Travis Client States failed?":{"type":"method","name":"failed?","children":[],"call":[" state == "," state "," check_state "]}," Travis Client States errored?":{"type":"method","name":"errored?","children":[],"call":[" state == "," state "," check_state "]}," Travis Client States passed?":{"type":"method","name":"passed?","children":[],"call":[" state == "," state "," check_state "]}," Travis Client States finished?":{"type":"method","name":"finished?","children":[],"call":[" pending? ! "," pending? "]}," Travis Client States queued?":{"type":"method","name":"queued?","children":[],"call":[" state != "," state "," check_state "]}," Travis Client States started?":{"type":"method","name":"started?","children":[],"call":[" state != "," state "," check_state "]}," Travis Client States pending?":{"type":"method","name":"pending?","children":[],"call":["(str \"created\") include? "," state "," check_state "]}," Travis Client Session instrumented":{"type":"method","name":"instrumented","children":[],"call":["lift call ","chain shift call ","chain shift "," proc "," instruments + "," instruments ","(lvar :name) join ","args map ","args any? "," instruments +  shift call "," instruments +  shift ","(lvar :(lvar :name) join ) join "]}," Travis Client Session instrument":{"type":"method","name":"instrument","children":[],"call":[" instruments << "," instruments "]}," Travis Client Session raw":{"type":"method","name":"raw","children":[],"call":[" handle_error "," connection public_send body "," connection public_send "," connection "," instrumented ","verb to_s upcase ","verb to_s "," raise ","result status ","server error (%s: %p) % ","result body ","%s: %p % ","body [] ","body [] == ","JSON  parse "," raw ","result headers [] ","result headers ","r headers delete ","r headers ","Faraday  public_send ","url start_with? "," api_endpoint ","url !~ ","url sub ","result status == ","request headers delete ","request headers ","request path start_with? ","request path ","request path !~ ","url sub  start_with? ","url sub  !~ ","url sub  sub "]}," Travis Client Session put_raw":{"type":"method","name":"put_raw","children":[],"call":[" raw "]}," Travis Client Session config":{"type":"method","name":"config","children":[],"call":[" get_raw [] "," get_raw "]}," Travis Client Session reset":{"type":"method","name":"reset","children":[],"call":["entity attributes clear ","entity attributes "]}," Travis Client Repository state":{"type":"method","name":"state","children":[],"call":[" last_build_state "]}," Travis Client Repository enable":{"type":"method","name":"enable","children":[],"call":[" set_hook "]}," Travis Client Repository disable":{"type":"method","name":"disable","children":[],"call":[" set_hook "]}," Travis Client Repository set_hook":{"type":"method","name":"set_hook","children":[],"call":["result [] "," session put_raw "," id "," session "," session put_raw  [] "]}," Travis Client Repository job":{"type":"method","name":"job","children":[],"call":["build jobs first ","build jobs ","build jobs size == ","build jobs size ","j number == ","j number ","build jobs detect ","number != "," build ","number to_s [] ","number to_s "," build  jobs first "," build  jobs "," build  jobs size == "," build  jobs size "," build  jobs detect ","  build  "]}," Travis Client Repository each_build":{"type":"method","name":"each_build","children":[],"call":[" builds ","params merge ","number == ","chunk last number ","chunk last ","chunk each ","chunk empty? "," enum_for "," __method__ "," block_given? ","chunk last number  == "," builds  last number ","chunk last chunk last number  "," builds  last "," builds  each "," builds  empty? "]}," Travis Client Repository recent_builds":{"type":"method","name":"recent_builds","children":[],"call":[" builds "]}," Travis Client Repository build":{"type":"method","name":"build","children":[],"call":[" builds first "," builds ","number to_s "]}," Travis Client Repository builds":{"type":"method","name":"builds","children":[],"call":[" session find_many ","params merge "," id "," session "," each_build "]}," Travis Client Repository last_build":{"type":"method","name":"last_build","children":[],"call":["last_build repository_id= "," id ","last_build finished_at= "," last_build_finished_at ","last_build started_at= "," last_build_started_at ","last_build duration= "," last_build_duration ","last_build state= "," last_build_state ","last_build number= "," last_build_number "," session find_one "," last_build_id "," session "," attributes [] "," attributes "," session find_one  repository_id= "," session find_one  finished_at= ","  session find_one _finished_at "," session find_one  started_at= ","  session find_one _started_at "," session find_one  duration= ","  session find_one _duration "," session find_one  state= ","  session find_one _state "," session find_one  number= ","  session find_one _number ","  session find_one _id "]}," Travis Client Methods restart":{"type":"method","name":"restart","children":[],"call":["entity reload "," session post_raw ","entity id ","entity class one ","entity class "," session ","entity class many "," raise ","entity restartable? "]}," Travis Client Methods artifact":{"type":"method","name":"artifact","children":[],"call":[" session find_one "," session "]}," Travis Client Methods job":{"type":"method","name":"job","children":[],"call":[" session find_one "," session "]}," Travis Client Methods build":{"type":"method","name":"build","children":[],"call":[" session find_one "," session "]}," Travis Client Job inspect_info":{"type":"method","name":"inspect_info","children":[],"call":[" number "," repository slug "," repository "]}," Travis Client Job duration":{"type":"method","name":"duration","children":[],"call":["(send\n  (lvar :finish) :-\n  (lvar :start)) to_i ","finish - ","Time  now "," finished_at "," started_at "," attributes [] "," attributes "]}," Travis Client Job allow_failures?":{"type":"method","name":"allow_failures?","children":[],"call":[" config [] == "," config [] "," config ","allow all? "," config [] [] any? "," config [] [] "," config [] include? "," config include? "]}," Travis Client Job push?":{"type":"method","name":"push?","children":[],"call":[" build push? "," build "]}," Travis Client Job pull_request?":{"type":"method","name":"pull_request?","children":[],"call":[" build pull_request? "," build "]}," Travis Client Job restart":{"type":"method","name":"restart","children":[],"call":[" session restart "," session "]}," Travis Client Entity relation":{"type":"method","name":"relation","children":[],"call":[" session find_one "," session ","id nil? "," send "," Array map "," Array ","entity one ","entity many == ","entity many ","Entity  subclass_for ","name to_s "," send  nil? ","Entity  subclass_for  one ","Entity  subclass_for  many == ","Entity  subclass_for  many ","name to_s  to_s "]}," Travis Client Entity relations":{"type":"method","name":"relations","children":[],"call":["(send\n  (send\n    (send\n      (self) :class) :relations) :map) flatten "," public_send "," class relations map "," class relations "," class "]}," Travis Client Entity has":{"type":"method","name":"has","children":[],"call":[]}," Travis Client Entity aka":{"type":"method","name":"aka","children":[],"call":[]}," Travis Client Commit inspect_info":{"type":"method","name":"inspect_info","children":[],"call":[" short_sha + + "," subject inspect "," subject "," short_sha + "," short_sha "]}," Travis Client Commit short_sha":{"type":"method","name":"short_sha","children":[],"call":[" sha to_s [] "," sha to_s "," sha "]}," Travis Client Commit subject":{"type":"method","name":"subject","children":[],"call":[" message to_s lines first strip "," message to_s lines first "," message to_s lines "," message to_s "," message "," message to_s lines first to_s strip "," message to_s lines first to_s "]}," Travis Client Build inspect_info":{"type":"method","name":"inspect_info","children":[],"call":[" number "," repository slug "," repository "]}," Travis Client Build branch_info":{"type":"method","name":"branch_info","children":[],"call":[" commit branch "," commit "," pr_number "," pull_request? ","info + "," commit branch  + "]}," Travis Client Build pr_number":{"type":"method","name":"pr_number","children":[],"call":[" commit compare_url [] "," commit compare_url "," commit "," pull_request? "]}," Travis Client Build push?":{"type":"method","name":"push?","children":[],"call":[" pull_request? ! "," pull_request? "]}," Travis Client Build restart":{"type":"method","name":"restart","children":[],"call":[" session restart "," session "]}," Travis Client Artifact clean_body":{"type":"method","name":"clean_body","children":[],"call":[" colorized_body gsub "," colorized_body "," attributes [] "," attributes ","Tools SafeString  clean "," body "]}," Travis Client Artifact colorized_body":{"type":"method","name":"colorized_body","children":[],"call":[" body gsub "," body "," attributes [] "," attributes ","Tools SafeString  colorized "," encoded_body gsub "," encoded_body "]}," Travis CLI Whatsup run":{"type":"method","name":"run","children":[],"call":[" say ","(send nil :color\n  (send\n    (lvar :repo) :slug)\n  (array\n    (sym :bold)\n    (send\n      (lvar :repo) :color))) join "," color ","repo color ","repo last_build number ","repo last_build ","repo last_build state ","repo slug "," repos each "," repos "," recent each "," recent "," recent empty? "]}," Travis CLI Sync run":{"type":"method","name":"run","children":[],"call":[" say "," color "," sync "," background? "," error "," force? ! "," force? "," user syncing? "," user "," user login "," check? "," authenticate "]}," Travis CLI Status run":{"type":"method","name":"run","children":[],"call":[" exit "," last_build pending? "," last_build "," fail_pending? "," last_build unsuccessful? "," exit_code? "," say "," last_build number "," color "," last_build color "," last_build state "," quiet? "]}," Travis CLI Show run":{"type":"method","name":"run","children":[],"call":[" say "," color + "," color ","config empty? ","entity allow_failures? inspect ","entity allow_failures? "," formatter job_config ","entity config "," formatter ","(send nil :color\n  (send\n    (dstr\n      (str \"#\")\n      (begin\n        (send\n          (lvar :job) :number))\n      (str \" \")\n      (begin\n        (send\n          (lvar :job) :state))\n      (str \":\")) :ljust\n    (int 16))\n  (array\n    (send\n      (lvar :job) :color)\n    (sym :bold))) compact join rstrip ","(send nil :color\n  (send\n    (dstr\n      (str \"#\")\n      (begin\n        (send\n          (lvar :job) :number))\n      (str \" \")\n      (begin\n        (send\n          (lvar :job) :state))\n      (str \":\")) :ljust\n    (int 16))\n  (array\n    (send\n      (lvar :job) :color)\n    (sym :bold))) compact join ","(send nil :color\n  (send\n    (dstr\n      (str \"#\")\n      (begin\n        (send\n          (lvar :job) :number))\n      (str \" \")\n      (begin\n        (send\n          (lvar :job) :state))\n      (str \":\")) :ljust\n    (int 16))\n  (array\n    (send\n      (lvar :job) :color)\n    (sym :bold))) compact ","job allow_failures? ","job config "," formatter duration ljust "," formatter duration ","job duration ","job color ","(str \"#\") ljust ","job state ","job number ","entity jobs each ","entity jobs "," empty_line ","entity respond_to? "," template % "," formatter time ","entity finished_at ","entity started_at ","entity duration ","entity commit compare_url ","entity commit ","entity pull_request? ","entity color ","entity state ","entity commit subject ","entity number ","entity class one capitalize ","entity class one ","entity class "," template "," build "," job ","entity commit short_sha ","entity branch_info "," error "," repository slug "," repository "," repository branch number "," repository branch ","number !~ ","(send nil :color\n  (dstr\n    (begin\n      (send\n        (lvar :annotation) :provider_name))\n    (str \" \")\n    (begin\n      (send\n        (lvar :annotation) :status))\n    (str \":\"))\n  (array\n    (send\n      (lvar :annotation) :color)\n    (sym :bold))) compact join rstrip ","(send nil :color\n  (dstr\n    (begin\n      (send\n        (lvar :annotation) :provider_name))\n    (str \" \")\n    (begin\n      (send\n        (lvar :annotation) :status))\n    (str \":\"))\n  (array\n    (send\n      (lvar :annotation) :color)\n    (sym :bold))) compact join ","(send nil :color\n  (dstr\n    (begin\n      (send\n        (lvar :annotation) :provider_name))\n    (str \" \")\n    (begin\n      (send\n        (lvar :annotation) :status))\n    (str \":\"))\n  (array\n    (send\n      (lvar :annotation) :color)\n    (sym :bold))) compact ","(%s) % ","annotation url ","annotation color ","annotation description ","annotation status ","annotation provider_name ","entity annotations each ","entity annotations ","entity annotations any? "," formatter job_config  empty? "," formatter job_ formatter job_config  ","entity  formatter job_config  ","(send nil :color\n  (send\n    (dstr\n      (str \"#\")\n      (begin\n        (send\n          (lvar :job) : repository branch number ))\n      (str \" \")\n      (begin\n        (send\n          (lvar :job) :state))\n      (str \":\")) :ljust\n    (int 16))\n  (array\n    (send\n      (lvar :job) :color)\n    (sym :bold))) compact join rstrip ","(send nil :color\n  (send\n    (dstr\n      (str \"#\")\n      (begin\n        (send\n          (lvar :job) : repository branch number ))\n      (str \" \")\n      (begin\n        (send\n          (lvar :job) :state))\n      (str \":\")) :ljust\n    (int 16))\n  (array\n    (send\n      (lvar :job) :color)\n    (sym :bold))) compact join ","(send nil :color\n  (send\n    (dstr\n      (str \"#\")\n      (begin\n        (send\n          (lvar :job) : repository branch number ))\n      (str \" \")\n      (begin\n        (send\n          (lvar :job) :state))\n      (str \":\")) :ljust\n    (int 16))\n  (array\n    (send\n      (lvar :job) :color)\n    (sym :bold))) compact ","job  formatter job_config  ","job  repository branch number  ","entity  repository branch number  "," repository branch  repository branch number  "," repository branch number  !~ "]}," Travis CLI Restart run":{"type":"method","name":"run","children":[],"call":[" say ","entity number ","entity class one ","entity class ","entity restart "," build "," job "," error "," repository slug "," repository "," authenticate "]}," Travis CLI RepoCommand last_build":{"type":"method","name":"last_build","children":[],"call":[" error "," slug "," repository last_build "," repository "]}," Travis CLI RepoCommand job":{"type":"method","name":"job","children":[],"call":[" repository job "," repository ","number_or_id is_a? "]}," Travis CLI RepoCommand build":{"type":"method","name":"build","children":[],"call":[" repository build "," repository ","number_or_id is_a? "]}," Travis CLI Open host":{"type":"method","name":"host","children":[],"call":[" session config [] "," session config "," session "," github "]}," Travis CLI Open repo_url":{"type":"method","name":"repo_url","children":[],"call":[" slug "," host "]}," Travis CLI Open url_for":{"type":"method","name":"url_for","children":[],"call":["entity id ","entity class many ","entity class "," repo_url ","entity commit compare_url ","entity commit "," github "," build "," job "," error "," repository slug "," repository "]}," Travis CLI Open run":{"type":"method","name":"run","children":[],"call":["Launchy  open "," say "," print? "," url_for ","  url_for _for "]}," Travis CLI Logs log":{"type":"method","name":"log","children":[],"call":["job log clean_body ","job log ","job log colorized_body "," interactive? "]}," Travis CLI Logs run":{"type":"method","name":"run","children":[],"call":[" say "," log "," error "," job "," display_log "," delete_log "," delete "," stream= "," stream nil? "," stream "," print "," clean "," encoded "," interactive? ","job log body ","job log "," info "," color ","job inspect_info ","  job  "," job  log body "," job  log "," job  inspect_info "]}," Travis CLI History display":{"type":"method","name":"display","children":[],"call":[" say ","(send nil :color\n  (send\n    (dstr\n      (str \"#\")\n      (begin\n        (send\n          (lvar :build) :number))\n      (str \" \")\n      (begin\n        (send\n          (lvar :build) :state))\n      (str \":\")) :ljust\n    (int 14))\n  (array\n    (send\n      (lvar :build) :color)\n    (sym :bold))) join ","build commit subject ","build commit "," color ","build branch_info ","build color ","(str \"#\") ljust ","build state ","build number ","(and\n  (send nil :date?)\n  (send nil :color\n    (send\n      (send nil :formatter) :time\n      (or\n        (send\n          (lvar :build) :finished_at)\n        (send\n          (lvar :build) :started_at)))\n    (send\n      (lvar :build) :color))) compact join strip + ","(and\n  (send nil :date?)\n  (send nil :color\n    (send\n      (send nil :formatter) :time\n      (or\n        (send\n          (lvar :build) :finished_at)\n        (send\n          (lvar :build) :started_at)))\n    (send\n      (lvar :build) :color))) compact join strip ","(and\n  (send nil :date?)\n  (send nil :color\n    (send\n      (send nil :formatter) :time\n      (or\n        (send\n          (lvar :build) :finished_at)\n        (send\n          (lvar :build) :started_at)))\n    (send\n      (lvar :build) :color))) compact join ","(and\n  (send nil :date?)\n  (send nil :color\n    (send\n      (send nil :formatter) :time\n      (or\n        (send\n          (lvar :build) :finished_at)\n        (send\n          (lvar :build) :started_at)))\n    (send\n      (lvar :build) :color))) compact ","build commit author_name ljust ","build commit author_name "," committer? "," formatter time ","build started_at ","build finished_at "," formatter "," date? ","(send nil :color\n  (send\n    (dstr\n      (str \"#\")\n      (begin\n        (send\n          (lvar :build) :number))\n      (str \" \")\n      (begin\n        (send\n          (lvar :build) :state))\n      (str \":\")) :ljust\n    (int 16))\n  (array\n    (send\n      (lvar :build) :color)\n    (sym :bold))) join ","(send nil :color\n  (send\n    (dstr\n      (str \"#\")\n      (begin\n        (send\n          (lvar :build) :number))\n      (str \" \")\n      (begin\n        (send\n          (lvar :build) :state))\n      (str \":\")) :ljust\n    (int 16))\n  (array\n    (send\n      (lvar :build) :color)\n    (sym :bold))) join strip ","(send nil :color\n  (send\n    (dstr\n      (str \"#\")\n      (begin\n        (send\n          (lvar :build) :number))\n      (str \" \")\n      (begin\n        (send\n          (lvar :build) :state))\n      (str \":\")) :ljust\n    (int 16))\n  (array\n    (send\n      (lvar :build) :color)\n    (sym :bold))) join strip + "]}," Travis CLI History display?":{"type":"method","name":"display?","children":[],"call":["build branch_info == "," branch ","build branch_info ","build pr_number == "," pull_request ","build pr_number "," pull_request to_i "]}," Travis CLI History run":{"type":"method","name":"run","children":[],"call":["countdown < "," display "," display? "," repository each_build "," repository "," after "," Integer "," limit "," all? "," Integer  < "]}," Travis CLI Enable repository":{"type":"method","name":"repository","children":[],"call":[" say "," sync "," skip_sync? "," repo "," slug "]}," Travis CLI Enable run":{"type":"method","name":"run","children":[],"call":[" say "," color "," slug "," repository enable "," repository "," authenticate "," error "," repository slug "," repository admin? "]}," Travis CLI Disable run":{"type":"method","name":"run","children":[],"call":[" say "," color "," slug "," repository enable "," repository "," authenticate "," repository disable "]}," Travis CLI Console run":{"type":"method","name":"run","children":[],"call":[" binding pry "," binding ","Object  send ","Client Namespace  new "," session ","opts merge! "," prompt ","Pry Hooks  new "," ensure_pry "," require ","Travis CLI  silent "," pry_installed? "]}," Travis CLI Command warn":{"type":"method","name":"warn","children":[],"call":[" block_given? "," say "," color "," write_to "]}," Travis CLI Command format":{"type":"method","name":"format","children":[],"call":["data gsub gsub ","data gsub ","format % "," color "," interactive? ","data encode! ","data respond_to? ","data gsub gsub  gsub gsub ","format %  gsub gsub ","data gsub gsub  gsub ","format %  gsub ","data gsub gsub  encode! ","format %  encode! ","data gsub gsub  respond_to? ","format %  respond_to? "]}," Travis CLI Command debug":{"type":"method","name":"debug","children":[],"call":[" say "," color "," write_to "," debug? "]}," Travis CLI ApiCommand sync":{"type":"method","name":"sync","children":[],"call":[" output print "," output ","count / + ","count / ","count % == ","count % "," sleep "," user reload syncing? "," user reload "," user "," user sync "]}," Travis CLI Token run":{"type":"method","name":"run","children":[],"call":[" say "," access_token "," error "," command "," endpoint_option "," access_token nil? "," authenticate "]}," Travis CLI Command terminal":{"type":"method","name":"terminal","children":[],"call":["HighLine  new "," output "," input "]}," Travis Tools System running?":{"type":"method","name":"running?","children":[],"call":[" system "," unix? "]}," Travis Tools System has?":{"type":"method","name":"has?","children":[],"call":["@has []= "," system ","@has fetch "," unix? "]}," Travis Tools System description":{"type":"method","name":"description","children":[],"call":["(send nil :full_os) compact uniq join ","(send nil :full_os) compact uniq ","(send nil :full_os) compact ","args flatten "," rubygems "," ruby "," full_os ","(send nil :os) compact uniq join ","(send nil :os) compact uniq ","(send nil :os) compact "," os "]}," Travis Tools System rubygems":{"type":"method","name":"rubygems","children":[],"call":[]}," Travis Tools System ruby":{"type":"method","name":"ruby","children":[],"call":[" ruby_version "," ruby_engine ","Rubinius  version [] ","Rubinius  version "]}," Travis Tools System ruby_version":{"type":"method","name":"ruby_version","children":[],"call":["%s-p%s % "]}," Travis Tools System ruby_engine":{"type":"method","name":"ruby_engine","children":[],"call":[]}," Travis Tools System os_type":{"type":"method","name":"os_type","children":[],"call":["(str \"uname\") chomp "," windows? "]}," Travis Tools System os_name":{"type":"method","name":"os_name","children":[],"call":["(str \"lsb_release -i -s\") chomp "," has? ","(str \"sw_vers -productName\") chomp "]}," Travis Tools System os_version":{"type":"method","name":"os_version","children":[],"call":["(str \"lsb_release -r -s\") chomp "," has? ","(str \"sw_vers -productVersion\") chomp "]}," Travis Tools System full_os":{"type":"method","name":"full_os","children":[],"call":[" os_type "," os "," os_name == "," os_name ","(str \"sw_vers -productVersion\") chomp ","(str \"sw_vers -productName\") chomp "," mac? "]}," Travis Tools System os":{"type":"method","name":"os","children":[],"call":[" os_type ","(begin\n  (send nil :os_name)) strip "," os_version "," os_name ","(str \"uname\") chomp "," windows? "]}," Travis Tools System unix?":{"type":"method","name":"unix?","children":[],"call":[" windows? ! "," windows? "]}," Travis Tools System linux?":{"type":"method","name":"linux?","children":[],"call":["RUBY_PLATFORM  =~ "]}," Travis Tools System mac?":{"type":"method","name":"mac?","children":[],"call":["RUBY_PLATFORM  =~ "]}," Travis Tools System windows?":{"type":"method","name":"windows?","children":[],"call":["File ALT_SEPARATOR  == "]}," Travis Tools System recent_version?":{"type":"method","name":"recent_version?","children":[],"call":["(send\n  (lvar :version) :<=>\n  (lvar :minimum)) >= ","version <=> ","s to_i ","minimum split map ","minimum split ","version split map ","version split "]}," Travis Tools SSLKey to_byte_array":{"type":"method","name":"to_byte_array","children":[],"call":[" to_byte_array + "," to_byte_array ","num divmod ","significant [] [] == ","num [] ","significant [] [] ","significant [] ","num between? "]}," Travis Tools SSLKey sized_bytes":{"type":"method","name":"sized_bytes","children":[],"call":["(send\n  (lvar :bytes) :size) pack ","bytes size "," to_byte_array ","value to_i ","(send\n  (lvar : to_byte_array ) :size) pack "," to_byte_array  size "]}," Travis Tools SSLKey rsa_ssh":{"type":"method","name":"rsa_ssh","children":[],"call":["(str \"ssh-rsa \") pack gsub ","(str \"ssh-rsa \") pack "," sized_bytes ","key n ","key e "]}," Travis Tools SSLKey remove_passphrase":{"type":"method","name":"remove_passphrase","children":[],"call":["OpenSSL PKey RSA  new to_s ","OpenSSL PKey RSA  new "]}," Travis Tools SSLKey has_passphrase?":{"type":"method","name":"has_passphrase?","children":[],"call":["OpenSSL PKey RSA  new ","key [] "]}," Travis Tools SSLKey public_rsa_key":{"type":"method","name":"public_rsa_key","children":[],"call":["OpenSSL PKey RSA  new ","string gsub "]}," Travis Tools SSLKey generate_rsa":{"type":"method","name":"generate_rsa","children":[],"call":["OpenSSL PKey RSA  generate "]}," Travis Tools SafeString clean":{"type":"method","name":"clean","children":[],"call":[" colorized gsub "," colorized "]}," Travis Tools SafeString colorized":{"type":"method","name":"colorized","children":[],"call":[" encoded gsub "," encoded "]}," Travis Tools SafeString encoded":{"type":"method","name":"encoded","children":[],"call":["string force_encoding ","string encode ","string respond_to? "]}," Travis Tools Notification LibNotify available?":{"type":"method","name":"available?","children":[],"call":["System  has? "]}," Travis Tools Notification LibNotify notify":{"type":"method","name":"notify","children":[],"call":[" system ","CGI  escapeHTML "]}," Travis Tools Notification Growl available?":{"type":"method","name":"available?","children":[],"call":["System  running? ","System  has? "," system ","System  windows? "]}," Travis Tools Notification Growl notify":{"type":"method","name":"notify","children":[],"call":[" system ","%s -m %p %p >/dev/null [] ","%s -m %p %p >/dev/null % ","%s -n Travis -m %p %p >/dev/null % "]}," Travis Tools Notification OSX available?":{"type":"method","name":"available?","children":[],"call":["System  running? ","System  recent_version? ","System  os_version to_s ","System  os_version ","System  mac? ","TerminalNotifier  available? ","(str \"sw_vers -productVersion\") strip >= ","(str \"sw_vers -productVersion\") strip ","System  os_version to_s >= "," nc_running? "]}," Travis Tools Notification OSX notify":{"type":"method","name":"notify","children":[],"call":[" system ","title to_s ","body to_s ","TerminalNotifier  notify "]}," Travis Tools Notification Dummy available?":{"type":"method","name":"available?","children":[],"call":[]}," Travis Tools Notification Dummy notify":{"type":"method","name":"notify","children":[],"call":[]}," Travis Tools Notification get":{"type":"method","name":"get","children":[],"call":[" const_get new "," const_get "," raise ","unknown notifications type %p % ","c to_s [] downcase == ","name to_s ","c to_s [] downcase ","c to_s [] ","c to_s "," constants detect "," constants "]}," Travis Tools Notification new":{"type":"method","name":"new","children":[],"call":[" raise ","list join ","n available? ","(send\n  (lvar :list) :map) detect "," get ","list map ","list concat ","list empty? "]}," Travis Tools Github file":{"type":"method","name":"file","children":[],"call":[" raise "," explode ","@file [] ","File  read "," debug ","File  readable? ","File  expand_path "]}," Travis Tools Github security":{"type":"method","name":"security","children":[],"call":[" raise "," explode "," debug ","$? success? ","(str \"security find-\") chomp "," system ","System  has? "]}," Travis Tools Github debug":{"type":"method","name":"debug","children":[],"call":["@debug call "]}," Travis Tools Github gh_error":{"type":"method","name":"gh_error","children":[],"call":["JSON  parse [] to_s ","JSON  parse [] ","JSON  parse ","error info [] ","error info ","error info key? "," raise "," explode "]}," Travis Tools Github acceptable?":{"type":"method","name":"acceptable?","children":[],"call":[" debug "," gh_error ","token is not acceptable: identifies %p instead of %p % "," github_login ","user [] "," github_login != ","gh [] ","GH  with "," check_token "," GH  with _error ","gh []  [] ","GH  with  [] "]}," Travis Tools Github with_otp":{"type":"method","name":"with_otp","children":[],"call":[" ask_otp call "," ask_otp "," ask_otp arity == "," ask_otp arity "," raise ","error info [] [] to_s =~ ","error info [] [] to_s ","error info [] [] ","error info [] ","error info ","error info [] == ","block call ","GH  with ","gh options merge ","gh options "," ask_ ask_otp call  call "," ask_ ask_otp call  "," ask_ ask_otp call  arity == "," ask_ ask_otp call  arity ","GH  with  options merge ","GH  with  options "]}," Travis Tools Github create_token":{"type":"method","name":"create_token","children":[],"call":["gh delete ","reply [] [] [] ","reply [] [] ","reply [] "," raise ","a [] == "," note ","a [] ","gh [] detect ","gh [] ","error info [] to_s =~ ","error info [] to_s ","error info [] ","error info ","error info [] == ","gh post "," scopes "]}," Travis Tools Github login":{"type":"method","name":"login","children":[],"call":["reply [] "," callback= ","g delete "," with_otp "," proc "," drop_token ","reply [] [] [] ","reply [] [] "," create_token "," basic_auth "," raise "," gh_error "," login "," ask_otp call "," ask_otp "," ask_otp arity == "," ask_otp arity ","error info [] [] to_s =~ ","error info [] [] to_s ","error info [] [] ","error info [] ","error info ","error info [] == ","gh delete ","gh post "," note "," scopes ","GH  with ","opt []= "," create_token  [] ","gh post  [] "," with_ ask_otp call  "," create_token  [] [] [] ","gh post  [] [] [] "," create_token  [] [] ","gh post  [] [] "," GH  with _error "," ask_ ask_otp call  call "," ask_ ask_otp call  "," ask_ ask_otp call  arity == "," ask_ ask_otp call  arity ","GH  with  delete ","GH  with  post "]}," Travis Tools Github basic_auth":{"type":"method","name":"basic_auth","children":[],"call":[" raise "," gh_error "," with_otp ","GH  with "," basic_auth "," ask_otp call "," ask_otp "," ask_otp arity == "," ask_otp arity ","error info [] [] to_s =~ ","error info [] [] to_s ","error info [] [] ","error info [] ","error info ","error info [] == ","opt []= "," GH  with _error "," with_ ask_otp call  "," ask_ ask_otp call  call "," ask_ ask_otp call  "," ask_ ask_otp call  arity == "," ask_ ask_otp call  arity "]}," Travis Tools Github api_host":{"type":"method","name":"api_host","children":[],"call":[" api_url [] "," api_url "]}," Travis Tools Github host":{"type":"method","name":"host","children":[],"call":[" api_host "," api_host == "]}," Travis Tools Github github_for_mac_token":{"type":"method","name":"github_for_mac_token","children":[],"call":[" security "," host == "," host ","command << "," github_login "]}," Travis Tools Github issuepost_token":{"type":"method","name":"issuepost_token","children":[],"call":[" security "," host == "," host "]}," Travis Tools Github hub":{"type":"method","name":"hub","children":[],"call":["YAML  load "," file "," hub_path "]}," Travis Tools Github netrc":{"type":"method","name":"netrc","children":[],"call":["mapping last []= ","mapping last ","mapping << ","key == ","contents scan inject ","contents scan "," file "," netrc_path "]}," Travis Tools Github keychain_login":{"type":"method","name":"keychain_login","children":[],"call":["password empty? ","username empty? ","data [] to_s ","data [] "," security "," host "," github_login ","password empty? ! ","data [] to_s  empty? ","data [] to_s  empty? ! "]}," Travis Tools Github hub_logins":{"type":"method","name":"hub_logins","children":[],"call":["entry [] "," github_login != "," github_login "," hub fetch each "," hub fetch "," host "," hub "]}," Travis Tools Github netrc_logins":{"type":"method","name":"netrc_logins","children":[],"call":["entry [] "," github_login != "," github_login ","entry [] == "," host "," api_host "," netrc each "," netrc "]}," Travis Tools Github oauth_file_tokens":{"type":"method","name":"oauth_file_tokens","children":[],"call":["token empty? ","content strip "," file "," oauth_paths each "," oauth_paths ","content strip  empty? "]}," Travis Tools Github hub_tokens":{"type":"method","name":"hub_tokens","children":[],"call":["entry [] "," github_login != "," github_login "," hub fetch each "," hub fetch "," host "," hub "]}," Travis Tools Github composer_token":{"type":"method","name":"composer_token","children":[],"call":["JSON  parse [] fetch [] "," host ","JSON  parse [] fetch ","JSON  parse [] ","JSON  parse "," file "," composer_path "]}," Travis Tools Github git_tokens":{"type":"method","name":"git_tokens","children":[],"call":["token empty? ","line strip ","(str \"git config --get-all \") each_line "," git_config_keys each "," git_config_keys ","System  has? ","line strip  empty? "]}," Travis Tools Github netrc_tokens":{"type":"method","name":"netrc_tokens","children":[],"call":[" debug ","entry to_s size != ","entry to_s size ","entry to_s ","entry values_at each ","entry values_at ","entry [] == "," host ","entry [] "," api_host "," netrc each "," netrc "]}," Travis Tools Github possible_logins":{"type":"method","name":"possible_logins","children":[],"call":[" keychain_login "," hub_logins "," netrc_logins "]}," Travis Tools Github ask_credentials":{"type":"method","name":"ask_credentials","children":[],"call":[" ask_password call "," ask_password "," ask_password arity == "," ask_password arity "," ask_login call "," ask_login "," github_login "," login_header call "," login_header "," ask_ ask_password call  call "," ask_ ask_password call  "," ask_ ask_password call  arity == "," ask_ ask_password call  arity "]}," Travis Tools Github possible_tokens":{"type":"method","name":"possible_tokens","children":[],"call":[" after_tokens call "," after_tokens "," login "," ask_credentials "," manual_login "," possible_logins "," auto_password "," composer_token "," issuepost_token "," github_for_mac_token "," oauth_file_tokens "," hub_tokens "," git_tokens "," netrc_tokens "," auto_token ","block [] "," github_token "," login_header call "," login_header "," ask_password call "," ask_password "," ask_password arity == "," ask_password arity "," ask_login call "," ask_login "," github_login "," auto_ ask_password call  "," ask_ ask_password call  call "," ask_ ask_password call  "," ask_ ask_password call  arity == "," ask_ ask_password call  arity "]}," Travis Tools Github with_session":{"type":"method","name":"with_session","children":[],"call":["GH  with "," with_token "]}," Travis Tools Github each_token":{"type":"method","name":"each_token","children":[],"call":["callback call "," callback "," callback= "," acceptable? "," possible_tokens "," require "]}," Travis Tools Github with_basic_auth":{"type":"method","name":"with_basic_auth","children":[],"call":["gh [] "," basic_auth "," ask_credentials "]}," Travis Tools Github with_token":{"type":"method","name":"with_token","children":[],"call":[" each_token "]}," Travis Tools Github initialize":{"type":"method","name":"initialize","children":[],"call":[" block_given? "," send "," respond_to? ","options each_pair ","ENV  [] "," proc "," raise "]}," Travis Tools Formatter file_size":{"type":"method","name":"file_size","children":[],"call":["input round ","input is_a? ","iec shift ","iec any? ","input > ","input round  round ","input round  is_a? ","input round  > "]}," Travis Tools Completion compile":{"type":"method","name":"compile","children":[],"call":["File  write ","Assets  [] ","ERB  new result gsub ","ERB  new result "," binding ","ERB  new ","Assets  read ","c command_name ","Travis CLI  commands sort_by ","Travis CLI  commands ","Assets  [] first "]}," Travis Tools Completion completion_installed?":{"type":"method","name":"completion_installed?","children":[],"call":["File  read include? ","File  read ","File  writable? ","File  exist? ","RCS  each ","source  << "," config_path ","source  <<   << "]}," Travis Tools Completion update_completion":{"type":"method","name":"update_completion","children":[],"call":[" cp "," cmp_file ","Assets  [] "," mkdir_p "," config_path "]}," Travis Tools Completion install_completion":{"type":"method","name":"install_completion","children":[],"call":["f puts "," cmp_file ","File  open ","File  read include? ","File  read ","File  writable? ","File  exist? ","RCS  each ","source  << "," update_completion "," cp ","Assets  [] "," mkdir_p "," config_path ","source  <<   << "]}," Travis Tools Completion cmp_file":{"type":"method","name":"cmp_file","children":[],"call":["File  expand_path "," config_path "]}," Travis Tools Completion config_path":{"type":"method","name":"config_path","children":[],"call":["File  expand_path ","ENV  [] ","ENV  fetch "]}," Travis Tools Assets asset":{"type":"method","name":"asset","children":[],"call":["File  read "," asset_path "," asset_path first "]}," Travis Tools Assets asset_path":{"type":"method","name":"asset_path","children":[],"call":["(send\n  (send\n    (const nil :Pathname) :glob\n    (send\n      (const nil :File) :expand_path\n      (lvar :file)\n      (const nil :BASE))) :tap) first to_s ","(send\n  (send\n    (const nil :Pathname) :glob\n    (send\n      (const nil :File) :expand_path\n      (lvar :file)\n      (const nil :BASE))) :tap) first "," raise ","Travis Client AssetNotFound  new ","x empty? ","Pathname  glob tap ","Pathname  glob ","File  expand_path "]}," Travis Client WeakEntity cast_id":{"type":"method","name":"cast_id","children":[],"call":[]}," Travis Client WeakEntity id?":{"type":"method","name":"id?","children":[],"call":[]}," Travis Client WeakEntity id_field":{"type":"method","name":"id_field","children":[],"call":[]}," Travis Client WeakEntity weak?":{"type":"method","name":"weak?","children":[],"call":[]}," Travis Client User admin_access?":{"type":"method","name":"admin_access?","children":[],"call":[" admin_access include? "," admin_access "]}," Travis Client User pull_access?":{"type":"method","name":"pull_access?","children":[],"call":[" pull_access include? "," pull_access "]}," Travis Client User push_access?":{"type":"method","name":"push_access?","children":[],"call":[" push_access include? "," push_access "]}," Travis Client User admin_access":{"type":"method","name":"admin_access","children":[],"call":[" permissions [] "," permissions "]}," Travis Client User pull_access":{"type":"method","name":"pull_access","children":[],"call":[" permissions [] "," permissions "]}," Travis Client User push_access":{"type":"method","name":"push_access","children":[],"call":[" permissions [] "," permissions "]}," Travis Client User repositories":{"type":"method","name":"repositories","children":[],"call":[" permissions [] "," permissions "," session get [] "," session get "," session "," attributes [] "," attributes "]}," Travis Client User permissions":{"type":"method","name":"permissions","children":[],"call":["r compact! ","repos each_value "," session get "," session "," attributes [] "," attributes "," session get  each_value "]}," Travis Client User channels":{"type":"method","name":"channels","children":[],"call":[" attributes [] "," attributes "," load_attribute "]}," Travis Client States received?":{"type":"method","name":"received?","children":[],"call":[" state != "," state "," check_state "]}," Travis Client States ready?":{"type":"method","name":"ready?","children":[],"call":[" state == "," state "]}," Travis Client SingletonSetting delete":{"type":"method","name":"delete","children":[],"call":[" reload "," session delete_raw "," path "," session "]}," Travis Client SingletonSetting update":{"type":"method","name":"update","children":[],"call":[" reload "," session patch_raw ","JSON  dump "," attributes "," class one "," class "," path "," session "," attributes []= ","value to_s ","key to_s ","values each ","values is_a? "]}," Travis Client SingletonSetting path":{"type":"method","name":"path","children":[],"call":[" id "," class base_path "," class "]}," Travis Client SingletonSetting repository_id":{"type":"method","name":"repository_id","children":[],"call":[" id "]}," Travis Client SingletonSetting base_path":{"type":"method","name":"base_path","children":[],"call":[]}," Travis Client Settings inspect_info":{"type":"method","name":"inspect_info","children":[],"call":[" repository "," repository slug "]}," Travis Client Settings save":{"type":"method","name":"save","children":[],"call":[" attributes replace ","result [] attributes ","result [] "," attributes "," session patch ","JSON  dump "," repository id "," repository "," session "," raise "," session patch  [] attributes "," session patch  [] "]}," Travis Client Session check_ssl":{"type":"method","name":"check_ssl","children":[],"call":[" ssl= ","error class == ","error class "," raw "," ssl == "," ssl "]}," Travis Client Session error_message":{"type":"method","name":"error_message","children":[],"call":["JSON  parse fetch fetch ","JSON  parse fetch ","JSON  parse ","e message ","e response [] to_str ","e response [] ","e response "]}," Travis Client Session primitive?":{"type":"method","name":"primitive?","children":[],"call":["PRIMITIVE  include? "]}," Travis Client Session adapter_version":{"type":"method","name":"adapter_version","children":[],"call":["(splat\n  (lvar :version)) join ","Object  const_get const_get ","Object  const_get ","(splat\n  (lvar :Object  const_get const_get )) join "]}," Travis Client Session set_user_agent":{"type":"method","name":"set_user_agent","children":[],"call":[" headers []= "," adapter_version ","Travis Tools System  description "," agent_info "," headers ","(send\n  (send\n    (send\n      (lvar :adapter) :to_s) :capitalize) :gsub\n  (regexp\n    (str \"_http_(.)\")\n    (regopt))) gsub ","1 upcase ","adapter to_s capitalize gsub ","adapter to_s capitalize ","adapter to_s "," faraday_adapter "," faraday_adapter first ","Array  === "," (send\n  (send\n    (send\n      (lvar :adapter) :to_s) :capitalize) :gsub\n  (regexp\n    (str \"_http_(.)\")\n    (regopt))) gsub _version ","  faraday_adapter _version ","  faraday_adapter first _version ","(send\n  (send\n    (send\n      (lvar :(send\n  (send\n    (send\n      (lvar :adapter) :to_s) :capitalize) :gsub\n  (regexp\n    (str \"_http_(.)\")\n    (regopt))) gsub ) :to_s) :capitalize) :gsub\n  (regexp\n    (str \"_http_(.)\")\n    (regopt))) gsub ","(send\n  (send\n    (send\n      (lvar : faraday_adapter ) :to_s) :capitalize) :gsub\n  (regexp\n    (str \"_http_(.)\")\n    (regopt))) gsub ","(send\n  (send\n    (send\n      (lvar : faraday_adapter first ) :to_s) :capitalize) :gsub\n  (regexp\n    (str \"_http_(.)\")\n    (regopt))) gsub ","(send\n  (send\n    (send\n      (lvar :adapter) :to_s) :capitalize) :gsub\n  (regexp\n    (str \"_http_(.)\")\n    (regopt))) gsub  to_s capitalize gsub "," faraday_adapter  to_s capitalize gsub "," faraday_adapter first  to_s capitalize gsub ","(send\n  (send\n    (send\n      (lvar :adapter) :to_s) :capitalize) :gsub\n  (regexp\n    (str \"_http_(.)\")\n    (regopt))) gsub  to_s capitalize "," faraday_adapter  to_s capitalize "," faraday_adapter first  to_s capitalize ","(send\n  (send\n    (send\n      (lvar :adapter) :to_s) :capitalize) :gsub\n  (regexp\n    (str \"_http_(.)\")\n    (regopt))) gsub  to_s "," faraday_adapter  to_s "," faraday_adapter first  to_s "," faraday_(send\n  (send\n    (send\n      (lvar :adapter) :to_s) :capitalize) :gsub\n  (regexp\n    (str \"_http_(.)\")\n    (regopt))) gsub  "," faraday_ faraday_adapter  "," faraday_ faraday_adapter first  "," faraday_(send\n  (send\n    (send\n      (lvar :adapter) :to_s) :capitalize) :gsub\n  (regexp\n    (str \"_http_(.)\")\n    (regopt))) gsub  first "," faraday_ faraday_adapter  first "," faraday_ faraday_adapter first  first "]}," Travis Client Session private_channels?":{"type":"method","name":"private_channels?","children":[],"call":[" config [] [] ! ! "," config [] [] ! "," config [] [] "," config [] "," config "," user channels != "," user channels "," user "," access_token "]}," Travis Client Session delete_raw":{"type":"method","name":"delete_raw","children":[],"call":[" raw "]}," Travis Client Session patch_raw":{"type":"method","name":"patch_raw","children":[],"call":[" raw "]}," Travis Client Session put":{"type":"method","name":"put","children":[],"call":[" load "," put_raw "]}," Travis Client Session post":{"type":"method","name":"post","children":[],"call":[" load "," post_raw "]}," Travis Client Session patch":{"type":"method","name":"patch","children":[],"call":[" load "," patch_raw "]}," Travis Client Session delete":{"type":"method","name":"delete","children":[],"call":[" load "," delete_raw "]}," Travis Client Session preload":{"type":"method","name":"preload","children":[],"call":[" find_many ","ids any? ","(send\n  (lvar :instances) :map) compact ","e id ","e complete? ","instances map ","type preloadable? ","list group_by each ","list group_by ","(send\n  (lvar :instances) :map) compact  any? "]}," Travis Client Session load_entity":{"type":"method","name":"load_entity","children":[],"call":[" create_entity ","value to_ary map ","value to_ary ","value respond_to? ","Entity  subclass_for "]}," Travis Client Session load":{"type":"method","name":"load","children":[],"call":["result []= "," load_entity ","(or\n  (lvar :data)\n  (hash)) each_pair "," create_entity ","value to_ary map ","value to_ary ","value respond_to? ","Entity  subclass_for "," load_ load_entity  "," create_ load_entity  "]}," Travis Client Session faraday_adapter=":{"type":"method","name":"faraday_adapter=","children":[],"call":[" set_user_agent "," uri "]}," Travis Client Session ssl=":{"type":"method","name":"ssl=","children":[],"call":[" uri= "," uri ","options dup freeze ","options dup "]}," Travis Client Session agent_info=":{"type":"method","name":"agent_info=","children":[],"call":[" set_user_agent ","(lvar :info) flatten freeze ","(lvar :info) flatten "]}," Travis Client Restartable cancel":{"type":"method","name":"cancel","children":[],"call":[" session cancel "," session "]}," Travis Client Restartable cancelable?":{"type":"method","name":"cancelable?","children":[],"call":[]}," Travis Client Restartable restart":{"type":"method","name":"restart","children":[],"call":[" session restart "," session "]}," Travis Client Restartable restartable?":{"type":"method","name":"restartable?","children":[],"call":[]}," Travis Client Request inspect_info":{"type":"method","name":"inspect_info","children":[],"call":["(and\n  (send nil :repository)\n  (send\n    (send nil :repository) :slug)) compact join ","(and\n  (send nil :repository)\n  (send\n    (send nil :repository) :slug)) compact "," result "," pull_request_number "," branch "," event_type "," repository slug "," repository "]}," Travis Client Request rejected?":{"type":"method","name":"rejected?","children":[],"call":[" result == "," result "]}," Travis Client Request accepted?":{"type":"method","name":"accepted?","children":[],"call":[" result == "," result "]}," Travis Client Request owner":{"type":"method","name":"owner","children":[],"call":[" repository owner "," repository "]}," Travis Client Repository env_vars":{"type":"method","name":"env_vars","children":[],"call":["EnvVar List  new "," attributes [] "," attributes "]}," Travis Client Repository pull?":{"type":"method","name":"pull?","children":[],"call":["user pull_access? "]}," Travis Client Repository push?":{"type":"method","name":"push?","children":[],"call":["user push_access? "]}," Travis Client Repository admin?":{"type":"method","name":"admin?","children":[],"call":["user admin_access? "]}," Travis Client Repository active?":{"type":"method","name":"active?","children":[],"call":[" last_build_id? "," active "," active nil? "]}," Travis Client Repository delete_caches":{"type":"method","name":"delete_caches","children":[],"call":[" session delete [] "," session delete "," id "," session "]}," Travis Client Repository caches":{"type":"method","name":"caches","children":[],"call":[" session get [] "," session get "," id "," session "]}," Travis Client Repository settings":{"type":"method","name":"settings","children":[],"call":[" raise ","settings repository= "," session get [] "," session get "," id "," session "," attributes [] "," attributes "," session get []  repository= "]}," Travis Client Repository requests":{"type":"method","name":"requests","children":[],"call":[" session find_many "," id "," session "," attributes [] "," attributes "]}," Travis Client Repository owner":{"type":"method","name":"owner","children":[],"call":[" session account "," owner_name "," session "]}," Travis Client Repository owner_name":{"type":"method","name":"owner_name","children":[],"call":[" slug [] "," slug "]}," Travis Client Repository member?":{"type":"method","name":"member?","children":[],"call":[" session user repositories include? "," session user repositories "," session user "," session "]}," Travis Client Repository pusher_channels":{"type":"method","name":"pusher_channels","children":[],"call":[" id "," session user id "," session user "," session "," session private_channels? "," attributes [] "," attributes "]}," Travis Client Repository branch":{"type":"method","name":"branch","children":[],"call":[" session get [] "," session get "," id "," session ","b commit branch == ","name to_s ","b commit branch ","b commit "," attributes [] detect "," attributes [] "," attributes "," attributes [] [] "," last_on_branch detect "," last_on_branch "]}," Travis Client Repository branches":{"type":"method","name":"branches","children":[],"call":["(send\n  (send nil :last_on_branch) :map) inject ","b commit branch ","b commit "," last_on_branch map "," last_on_branch "]}," Travis Client Repository last_on_branch":{"type":"method","name":"last_on_branch","children":[],"call":[" session get [] "," session get "," id "," session "," attributes [] "," attributes "," branch "]}," Travis Client Repository name":{"type":"method","name":"name","children":[],"call":[" slug [] "," slug "]}," Travis Client Repository initialize":{"type":"method","name":"initialize","children":[],"call":[" attributes []= "," attributes "]}," Travis Client Repository Key to_ssh":{"type":"method","name":"to_ssh","children":[],"call":["Tools SSLKey  rsa_ssh "," to_rsa ","(str \"ssh-rsa \") pack gsub ","(str \"ssh-rsa \") pack "," sized_bytes "," to_rsa n "," to_rsa e "]}," Travis Client NotLoadable complete?":{"type":"method","name":"complete?","children":[],"call":[]}," Travis Client NotLoadable missing?":{"type":"method","name":"missing?","children":[],"call":[]}," Travis Client Namespace Curry clear_cache!":{"type":"method","name":"clear_cache!","children":[],"call":[" session clear_cache! "," session "]}," Travis Client Namespace Curry clear_cache":{"type":"method","name":"clear_cache","children":[],"call":[" session clear_cache "," session "]}," Travis Client Methods hooks":{"type":"method","name":"hooks","children":[],"call":[" session get [] "," session get "," session "]}," Travis Client Methods lint":{"type":"method","name":"lint","children":[],"call":["LintResult  new "," session post_raw "," session ","body to_yaml ","body is_a? ","body to_yaml  to_yaml ","body to_yaml  is_a? "]}," Travis Client Methods listen":{"type":"method","name":"listen","children":[],"call":["listener listen ","listener subscribe ","Listener  new "," session ","Listener  new  listen ","Listener  new  subscribe "]}," Travis Client Methods logout":{"type":"method","name":"logout","children":[],"call":[" session get_raw "," session "]}," Travis Client Methods cancel":{"type":"method","name":"cancel","children":[],"call":["entity reload "," session post_raw ","entity id ","entity class many ","entity class "," session "," raise ","entity class one ","entity cancelable? "]}," Travis Client Methods broadcasts":{"type":"method","name":"broadcasts","children":[],"call":[" session find_many "," session "]}," Travis Client Methods accounts":{"type":"method","name":"accounts","children":[],"call":[" session find_many "," session "]}," Travis Client Methods account":{"type":"method","name":"account","children":[],"call":[" session find_one "," session "]}," Travis Client Listener pusher_key":{"type":"method","name":"pusher_key","children":[],"call":[" raise "," session api_endpoint "," session "," session config fetch fetch "," session config fetch "," session config "]}," Travis Client Listener pusher_options":{"type":"method","name":"pusher_options","children":[],"call":["options []= "," session ssl fetch "," session ssl "," session ","/ << ","options [] ","options [] start_with? ","options [] nil? ","pusher_options [] ","encrypted ! ","pusher_options [] != "," session config [] "," session config ","pusher_options [] !=  ! "]}," Travis Client Listener default_channels":{"type":"method","name":"default_channels","children":[],"call":[" session user channels "," session user "," session "," session access_token nil? "," session access_token "]}," Travis Client Listener format_log":{"type":"method","name":"format_log","children":[],"call":["job repository id ","job repository ","job build id ","job build ","job id "," session job ","payload [] "," session "," session job  repository id "," session job  repository "," session job  build id "," session job  build "," session job  id "," session  session job  "]}," Travis Client Listener format_job":{"type":"method","name":"format_job","children":[],"call":["build []= ","payload [] [] ","payload [] "]}," Travis Client Listener format_payload":{"type":"method","name":"format_payload","children":[],"call":[" format_job "," format_log "]}," Travis Client Listener dispatch":{"type":"method","name":"dispatch","children":[],"call":["Event  new ","entities [] "," session load "," format_payload "," session ","JSON  parse "," session load  [] "," format_JSON  parse  "]}," Travis Client Listener disconnect":{"type":"method","name":"disconnect","children":[],"call":[" socket disconnect "," socket "]}," Travis Client Listener listen":{"type":"method","name":"listen","children":[],"call":[" socket connect "," socket "," dispatch "," socket bind ","@callbacks each "," socket subscribe ","@channels uniq each ","@channels uniq ","c start_with? ","@channels map! "," session private_channels? "," session "," default_channels ","@channels empty? "," default_channels  uniq each "," default_channels  uniq "," default_channels  map! "," default_channels  empty? "]}," Travis Client Listener on_connect":{"type":"method","name":"on_connect","children":[],"call":[" socket bind "," socket "]}," Travis Client Listener on":{"type":"method","name":"on","children":[],"call":["@callbacks << ","events each ","(send\n  (lvar :events) :flat_map) uniq ","EVENTS  grep ","e to_str ","e respond_to? ","events flat_map ","(send\n  (lvar :events) :flat_map) uniq  each ","(send\n  (lvar :(send\n  (lvar :events) :flat_map) uniq ) :flat_map) uniq ","(send\n  (lvar :events) :flat_map) uniq  flat_map "]}," Travis Client Listener subscribe":{"type":"method","name":"subscribe","children":[],"call":["EntityListener  new ","entities any? "," block_given? ","@channels concat ","entity pusher_channels ","entity pusher_entity ","entity respond_to? ","entities map ","entity pusher_entity  pusher_channels ","entity pusher_entity  pusher_entity pusher_entity  ","entity pusher_entity  respond_to? "]}," Travis Client Listener initialize":{"type":"method","name":"initialize","children":[],"call":["Socket  new "," pusher_options "," pusher_key "]}," Travis Client Listener EntityListener dispatch?":{"type":"method","name":"dispatch?","children":[],"call":[" entities include? ","event job "," entities ","event build ","event repository "]}," Travis Client Listener EntityListener on":{"type":"method","name":"on","children":[],"call":[" dispatch? "," listener on "," listener "]}," Travis Client Listener EntityListener initialize":{"type":"method","name":"initialize","children":[],"call":[" Array "]}," Travis Client Listener Socket reconnect":{"type":"method","name":"reconnect","children":[],"call":[" connect "," sleep ","delay > "," disconnect "," connected "]}," Travis Client Listener Socket handle_error":{"type":"method","name":"handle_error","children":[],"call":[" raise ","Pusher error: %s (code: %p) % "," reconnect ","data inspect ","data [] ","data is_a? "]}," Travis Client Listener Socket get_private_auth":{"type":"method","name":"get_private_auth","children":[],"call":[" signatures [] ","channel name "," signatures "," fetch_auth "]}," Travis Client Listener Socket fetch_auth":{"type":"method","name":"fetch_auth","children":[],"call":[" signatures merge! "," session post_raw [] "," session post_raw "," socket_id "," session "," signatures ","channels any? "," signatures [] nil? "," signatures [] ","c start_with? ","channels select! "]}," Travis Client Listener Socket subscribe_all":{"type":"method","name":"subscribe_all","children":[],"call":[" fetch_auth "," channels channels keys "," channels channels "," channels "]}," Travis Client Listener Socket initialize":{"type":"method","name":"initialize","children":[],"call":[" handle_error "," bind ","options fetch "]}," Travis Client LintResult ok?":{"type":"method","name":"ok?","children":[],"call":[" warnings? ! "," warnings? "]}," Travis Client LintResult warnings?":{"type":"method","name":"warnings?","children":[],"call":[" warnings any? "," warnings "]}," Travis Client LintResult initialize":{"type":"method","name":"initialize","children":[],"call":["@warnings << ","Warning  new ","warning [] "," Array each "," Array ","payload [] ","payload []  [] "]}," Travis Client Job pusher_channels":{"type":"method","name":"pusher_channels","children":[],"call":[" build pusher_channels + "," id "," build pusher_channels "," build "]}," Travis Client Job delete_log":{"type":"method","name":"delete_log","children":[],"call":[" log delete_body "," log "]}," Travis Client Job branch_info":{"type":"method","name":"branch_info","children":[],"call":[" build branch_info "," build "]}," Travis Client HasUuid cast_id":{"type":"method","name":"cast_id","children":[],"call":["object to_str "]}," Travis Client HasUuid id?":{"type":"method","name":"id?","children":[],"call":["object =~ ","object is_a? "]}," Travis Client ValidationFailed parse_message":{"type":"method","name":"parse_message","children":[],"call":["readable join ","e [] gsub ","e [] ","@errors map ","@errors any? ","response [] ","response [] to_s ","JSON  load ","response []  map ","response []  any? ","JSON  load  [] ","JSON  load  [] to_s "]}," Travis Client ValidationFailed initialize":{"type":"method","name":"initialize","children":[],"call":[" parse_message "," parse_ parse_message  "]}," Travis Client AssetNotFound initialize":{"type":"method","name":"initialize","children":[],"call":["md [] ","file match ","file match  [] "]}," Travis Client EnvVar inspect_info":{"type":"method","name":"inspect_info","children":[],"call":[" value inspect "," value "," name "]}," Travis Client EnvVar delete":{"type":"method","name":"delete","children":[],"call":[" repository env_vars reload "," repository env_vars "," repository "," session delete_raw ","EnvVar  path "," session "]}," Travis Client EnvVar update":{"type":"method","name":"update","children":[],"call":[" attributes replace ","result [] attributes ","result [] "," attributes "," session patch ","JSON  dump ","EnvVar  path "," session ","options is_a? "," session patch  [] attributes "," session patch  [] "]}," Travis Client EnvVar path":{"type":"method","name":"path","children":[],"call":[]}," Travis Client EnvVar List []=":{"type":"method","name":"[]=","children":[],"call":[" upsert ","key to_s ","key is_a? "]}," Travis Client EnvVar List []":{"type":"method","name":"[]","children":[],"call":["e name == ","key to_s ","e name "," detect ","key is_a? "]}," Travis Client EnvVar List upsert":{"type":"method","name":"upsert","children":[],"call":[" reload "," add ","e delete ","entries [] each ","entries [] ","entries first update ","options merge ","entries first ","entries any? ","e name == ","e name "," select "]}," Travis Client EnvVar List add":{"type":"method","name":"add","children":[],"call":["result [] "," list "," session post ","EnvVar  path "," session ","JSON  dump ","options merge "," session post  [] "]}," Travis Client EnvVar List repository_id":{"type":"method","name":"repository_id","children":[],"call":[" repository id "," repository "]}," Travis Client EnvVar List session":{"type":"method","name":"session","children":[],"call":[" repository session "," repository "]}," Travis Client EnvVar List reload":{"type":"method","name":"reload","children":[],"call":[" __setobj__ "]}," Travis Client EnvVar List __getobj__":{"type":"method","name":"__getobj__","children":[],"call":[" list= ","@generator call "]}," Travis Client EnvVar List list=":{"type":"method","name":"list=","children":[],"call":[" __setobj__ ","list dup freeze ","list dup "]}," Travis Client EnvVar List initialize":{"type":"method","name":"initialize","children":[],"call":[" session get [] "," session get ","EnvVar  path "," session "," Proc  new "]}," Travis Client Entity cancelable?":{"type":"method","name":"cancelable?","children":[],"call":[]}," Travis Client Entity restartable?":{"type":"method","name":"restartable?","children":[],"call":[]}," Travis Client Entity to_h":{"type":"method","name":"to_h","children":[],"call":["Hash  [] "," [] "," attribute_names map "," attribute_names "]}," Travis Client Entity preloadable?":{"type":"method","name":"preloadable?","children":[],"call":[]}," Travis Client Entity preloadable":{"type":"method","name":"preloadable","children":[{"type":"method","name":"preloadable?","children":[],"asgn":[],"call":[]}],"call":[]}," Travis Client Entity id_field":{"type":"method","name":"id_field","children":[],"call":[]}," Travis Client Entity id?":{"type":"method","name":"id?","children":[],"call":[]}," Travis Client Entity cast_id":{"type":"method","name":"cast_id","children":[],"call":[]}," Travis Client Entity has_singleton":{"type":"method","name":"has_singleton","children":[],"call":[]}," Travis Client Entity base_path":{"type":"method","name":"base_path","children":[],"call":[]}," Travis Client Entity weak?":{"type":"method","name":"weak?","children":[],"call":[]}," Travis Client Cache inspect_info":{"type":"method","name":"inspect_info","children":[],"call":["(send\n  (send nil :repository) :slug) compact join ","(send\n  (send nil :repository) :slug) compact "," slug "," branch "," repository slug "," repository "]}," Travis Client Cache delete":{"type":"method","name":"delete","children":[],"call":[" repository delete_caches "," slug "," branch "," repository "]}," Travis Client Build pusher_channels":{"type":"method","name":"pusher_channels","children":[],"call":[" repository pusher_channels "," repository "]}," Travis Client Build delete_logs":{"type":"method","name":"delete_logs","children":[],"call":["job delete_log "," jobs each "," jobs "]}," Travis Client AutoLogin cli_config":{"type":"method","name":"cli_config","children":[],"call":["YAML  load_file ","File  exist? "]}," Travis Client AutoLogin cli_token":{"type":"method","name":"cli_token","children":[],"call":["result [] "," session uri "," session "," cli_config "," cli_config  [] "]}," Travis Client AutoLogin github":{"type":"method","name":"github","children":[],"call":["g after_tokens= "," raise "," proc ","g auto_token= ","g manual_login= ","g explode= ","Tools Github  new "," session config [] "," session config "," session "]}," Travis Client AutoLogin authenticate":{"type":"method","name":"authenticate","children":[],"call":[" session github_auth "," session "," github with_token "," github "," session access_token= "," cli_token "]}," Travis Client AutoLogin initialize":{"type":"method","name":"initialize","children":[],"call":["options fetch ","File  expand_path ","Dir  home ","ENV  fetch ","session session "]}," Travis Client Artifact pusher_entity":{"type":"method","name":"pusher_entity","children":[],"call":[" job "]}," Travis Client Artifact body":{"type":"method","name":"body","children":[],"call":["listener disconnect ","data [] ","data [] last [] ","data [] last ","data [] any? ","p [] ","data [] each "," session get_raw [] "," session get_raw "," id "," session ","listener on_connect ","listener on ","event payload [] ","event payload ","event payload [] > "," session listen "," current_body "," job pending? "," job "," block_given? "," load_attribute "," raw_job pending? "," raw_job "," session get_raw []  [] "," session get_raw []  [] last [] "," session get_raw []  [] last "," session get_raw []  [] any? "," session get_raw []  [] each "]}," Travis Client Artifact current_body":{"type":"method","name":"current_body","children":[],"call":["log [] [] ","log [] ","String  === "," session get_raw "," job_id "," session ","body to_s empty? ","body to_s "," load_attribute "," attributes [] "," attributes "," id "," session get_raw  [] [] "," session get_raw  [] ","log [] []  to_s empty? "," load_attribute  to_s empty? ","log [] []  to_s "," load_attribute  to_s "]}," Travis Client Artifact encoded_body":{"type":"method","name":"encoded_body","children":[],"call":["Tools SafeString  encoded "," body "," body encode "," body respond_to? "]}," Travis Client Artifact delete_body":{"type":"method","name":"delete_body","children":[],"call":[" raise ","error message == ","error message "," reload "," session patch_raw "," job_id "," session ","reason is_a? "]}," Travis Client Account load_attribute":{"type":"method","name":"load_attribute","children":[],"call":[" attributes [] ","name to_s "," attributes "," attributes fetch "," session accounts "," session "," missing? "]}," Travis Client Account member?":{"type":"method","name":"member?","children":[],"call":[" session accounts include? "," session accounts "," session "]}," Travis Client Account repositories":{"type":"method","name":"repositories","children":[],"call":[" session repos "," login "," session "," attributes [] "," attributes "]}," Travis Client Account repos_count":{"type":"method","name":"repos_count","children":[],"call":[" repositories count "," repositories "," load_attribute "]}," Travis Client Account on_trial?":{"type":"method","name":"on_trial?","children":[],"call":[" education? ! "," education? "," subscribed? ! "," subscribed? "]}," Travis Client Account education":{"type":"method","name":"education","children":[],"call":[" load_attribute "," member? "]}," Travis Client Account subscribed":{"type":"method","name":"subscribed","children":[],"call":[" load_attribute "," member? "," attributes fetch "," attributes "]}," Travis Client Account id?":{"type":"method","name":"id?","children":[],"call":[]}," Travis Client Account cast_id":{"type":"method","name":"cast_id","children":[],"call":[]}," Travis CLI dummy_io":{"type":"method","name":"dummy_io","children":[],"call":["File  open ","StringIO  new "]}," Travis CLI try_const_get":{"type":"method","name":"try_const_get","children":[],"call":["CLI  const_get "]}," Travis CLI silent":{"type":"method","name":"silent","children":[],"call":[" dummy_io "]}," Travis CLI Whatsup recent":{"type":"method","name":"recent","children":[],"call":["repo last_build ","recent select "," repos "," user login "," user "," my_repos "," repos  select "]}," Travis CLI Version check_version":{"type":"method","name":"check_version","children":[],"call":[]}," Travis CLI Sshkey login_header":{"type":"method","name":"login_header","children":[],"call":[" empty_line "," say "," color "," github_endpoint host "," github_endpoint "]}," Travis CLI Sshkey github":{"type":"method","name":"github","children":[],"call":["g after_tokens= "," error ","g explode= "," proc ","g debug= "," debug ","g login_header= "," login_header ","g ask_otp= "," ask ","g ask_password= ","q echo= ","g ask_login= "," explode? ","g note= "," slug ","Tools Github  new "," session config [] "," session config "," session "," load_gh ","g github_token= "," github_token "]}," Travis CLI Sshkey check_access":{"type":"method","name":"check_access","children":[],"call":[" error "," color "," slug ","gh [] "]}," Travis CLI Sshkey remove_passphrase":{"type":"method","name":"remove_passphrase","children":[],"call":[" empty_line ","Tools SSLKey  remove_passphrase ","q echo= "," ask "," say "," error "," interactive? "," passphrase ","Tools SSLKey  has_passphrase? "]}," Travis CLI Sshkey generate_key":{"type":"method","name":"generate_key","children":[],"call":["File  write ","private_key to_s ","q default= "," ask "," agree "," say "," empty_line "," ssh_key update "," description "," ssh_key ","gh post ","Tools SSLKey  rsa_ssh ","private_key public_key "," slug ","Tools SSLKey  generate_rsa "," check_access ","gh [] [] ","gh [] "," github with_basic_auth "," github ","GH  with "," github_token "," raise "," session access_token= "," session "," github_auth "," github with_token ","Tools SSLKey  generate_rsa  to_s ","GH  with  post ","Tools SSLKey  generate_rsa  public_key ","GH  with  [] [] ","GH  with  [] "," session  github_auth = "]}," Travis CLI Sshkey delete_key":{"type":"method","name":"delete_key","children":[],"call":[" warn "," ssh_key delete "," ssh_key "," say "," color "," slug "," danger_zone? ! "," danger_zone? "," interactive? "]}," Travis CLI Sshkey update_key":{"type":"method","name":"update_key","children":[],"call":[" ssh_key update "," description "," ssh_key "," empty_line "," say "," color "," slug ","q default= "," ask "," interactive? "," remove_passphrase "," error ","value lines first =~ ","value lines first ","value lines "," remove_passphrase  lines first =~ "," remove_passphrase  lines first "," remove_passphrase  lines "]}," Travis CLI Sshkey display_key":{"type":"method","name":"display_key","children":[],"call":[" exit "," check? "," say "," color "," ssh_key fingerprint "," ssh_key "," ssh_key description "]}," Travis CLI Sshkey run":{"type":"method","name":"run","children":[],"call":[" display_key "," generate_key "," generate? "," update_key ","$stdin read "," stdin? "," upload ","File  read "," upload? "," delete_key "," delete? "," error "," color "," session config [] "," session config "," session "," org? "]}," Travis CLI Setup service":{"type":"method","name":"service","children":[],"call":["factory new "," error "," class service "," class "," class service  new "]}," Travis CLI Setup run":{"type":"method","name":"run","children":[],"call":[" save_travis_config "," service run "," service "," public_send "," error "," respond_to? "]}," Travis CLI Setup help":{"type":"method","name":"help","children":[],"call":["(send\n  (send\n    (send\n      (self) :class) :services) :map) join ","\t << << "," color ","s description ","\t << ","s service_name ljust ","s service_name "," class services map "," class services "," class ","(send\n  (send\n    (send\n      (self) :class) :(send\n  (send\n    (send\n      (self) :class) :services) :map) join ) :map) join "," class (send\n  (send\n    (send\n      (self) :class) :services) :map) join  map "," class (send\n  (send\n    (send\n      (self) :class) :services) :map) join  "]}," Travis CLI Setup services":{"type":"method","name":"services","children":[],"call":[]}," Travis CLI Setup Service deploy":{"type":"method","name":"deploy","children":[],"call":[" encrypt ","q default= "," agree ","config [] ","config []= ","(or\n  (send\n    (lvar :config) :has_key?\n    (str \"skip_cleanup\"))\n  (send\n    (send\n      (lvar :config) :fetch\n      (str \"edge\")\n      (str \"false\")) :!=\n    (str \"false\"))) ! ","config fetch != ","config fetch ","config has_key? "," on "," branch ","verb capitalize "," branch != "," repository slug "," repository "," configure "]}," Travis CLI Setup Service branch":{"type":"method","name":"branch","children":[],"call":["(str \"git rev-parse --symbolic-full-name --abbrev-ref HEAD\") chomp "]}," Travis CLI Setup Service configure":{"type":"method","name":"configure","children":[],"call":["config []= "," error "," force? ! "," force? ","config include? "]}," Travis CLI Setup Service encrypt":{"type":"method","name":"encrypt","children":[],"call":["config []= "," repository encrypt ","config fetch "," repository "]}," Travis CLI Setup Service on":{"type":"method","name":"on","children":[],"call":["config [] merge! ","config [] ","q default= "," agree "]}," Travis CLI Setup Service method_missing":{"type":"method","name":"method_missing","children":[],"call":["@command send "]}," Travis CLI Setup Service initialize":{"type":"method","name":"initialize","children":[],"call":[]}," Travis CLI Setup Service known_as?":{"type":"method","name":"known_as?","children":[],"call":[]}," Travis CLI Setup Service service_name":{"type":"method","name":"service_name","children":[],"call":[]}," Travis CLI Setup Service description":{"type":"method","name":"description","children":[],"call":[]}," Travis CLI Setup Service normalized_name":{"type":"method","name":"normalized_name","children":[],"call":[]}," Travis CLI Setup SauceConnect run":{"type":"method","name":"run","children":[],"call":[" encrypt ","q default= "," agree ","config []= ","(send nil :ask\n  (str \"Sauce Labs access key: \")) to_s ","q echo= "," ask "," ask to_s "," configure "," travis_config [] "," travis_config "]}," Travis CLI Setup S3 run":{"type":"method","name":"run","children":[],"call":[" encrypt ","q default= "," agree ","config []= "," ask to_s "," ask ","upload_dir empty? ","local_dir empty? ","(send nil :ask\n  (str \"Secret access key: \")) to_s ","q echo= "," deploy "," ask to_s  empty? "]}," Travis CLI Setup RubyGems run":{"type":"method","name":"run","children":[],"call":[" on ","(send nil :ask\n  (str \"Gem name: \")) to_s ","q default= "," repository name "," repository "," ask ","config [] ","(send nil :ask\n  (str \"RubyGems API token: \")) to_s ","q echo= ","YAML  load_file [] ","YAML  load_file ","File  exist? ","File  read ","File  expand_path ","ENV  [] "," deploy "]}," Travis CLI Setup Releases github":{"type":"method","name":"github","children":[],"call":["g note= "," repository slug "," repository ","g scopes= "," org? ","g after_tokens= "," error ","g explode= "," proc ","g debug= "," debug ","g ask_otp= "," ask ","g ask_password= ","q echo= ","g ask_login= ","g drop_token= ","Tools Github  new "," session config [] "," session config "," session "," load_gh ","g github_token= "," github_token "]}," Travis CLI Setup Releases run":{"type":"method","name":"run","children":[],"call":["config []= "," ask to_s "," ask "," github with_token "," github "," deploy "," raise ","config [] nil? ","config [] "]}," Travis CLI Setup PyPI run":{"type":"method","name":"run","children":[],"call":[" on ","(send nil :ask\n  (str \"Password: \")) to_s ","q echo= "," ask ","config [] "," ask to_s "," deploy "]}," Travis CLI Setup OpsWorks run":{"type":"method","name":"run","children":[],"call":[" encrypt ","q default= "," agree ","config []= "," ask to_s "," ask ","(send nil :ask\n  (str \"Secret access key: \")) to_s ","q echo= "," deploy "," on "]}," Travis CLI Setup OpenShift run":{"type":"method","name":"run","children":[],"call":["config []= "," ask to_s "," ask ","(send nil :ask\n  (str \"OpenShift application name: \")) to_s ","q default= "," repository name "," repository ","(send nil :ask\n  (str \"OpenShift password: \")) to_s ","q echo= "," deploy "]}," Travis CLI Setup NPM run":{"type":"method","name":"run","children":[],"call":[" on ","(send nil :ask\n  (str \"npm api key: \")) to_s ","q echo= "," ask ","config [] ","(send nil :ask\n  (str \"npm email address: \")) to_s "," deploy ","(send nil :ask\n  (str \"NPM api key: \")) to_s ","(send nil :ask\n  (str \"NPM email address: \")) to_s "]}," Travis CLI Setup Nodejitsu run":{"type":"method","name":"run","children":[],"call":["(send nil :ask\n  (str \"Nodejitsu API token: \")) to_s ","q echo= "," ask ","config [] "," ask to_s ","config []= ","jitsu_conf [] ","JSON  parse ","File  read ","File  exist? ","File  expand_path ","ENV  [] "," deploy ","JSON  parse  [] "]}," Travis CLI Setup Ninefold run":{"type":"method","name":"run","children":[],"call":[" encrypt ","q default= "," agree ","(send nil :ask\n  (str \"Ninefold Auth Token: \")) to_s ","q echo= "," ask ","config [] "," ask to_s "," deploy "]}," Travis CLI Setup Modulus run":{"type":"method","name":"run","children":[],"call":["config []= "," ask to_s "," ask ","(send nil :ask\n  (str \"Modulus Api Key: \")) to_s ","q echo= "," deploy "]}," Travis CLI Setup Heroku run":{"type":"method","name":"run","children":[],"call":["config []= ","(send nil :ask\n  (str \"Heroku application name: \")) to_s ","q default= "," repository name "," repository "," ask ","config [] nil? ","config [] ","(str \"heroku apps:info 2>/dev/null\") scan flatten first ","(str \"heroku apps:info 2>/dev/null\") scan flatten ","(str \"heroku apps:info 2>/dev/null\") scan ","(send nil :ask\n  (str \"Heroku API token: \")) to_s ","q echo= ","config [] empty? ","(str \"heroku auth:token 2>/dev/null\") strip "," deploy "]}," Travis CLI Setup Hackage run":{"type":"method","name":"run","children":[],"call":["(send nil :ask\n  (str \"Hackage Password: \")) to_s ","q echo= "," ask ","config [] "," ask to_s "," deploy "]}," Travis CLI Setup GCS run":{"type":"method","name":"run","children":[],"call":[" encrypt ","q default= "," agree ","config []= ","local_dir empty? "," ask to_s "," ask ","(send nil :ask\n  (str \"Secret access key: \")) to_s ","q echo= "," deploy "," ask to_s  empty? "]}," Travis CLI Setup EngineYard run":{"type":"method","name":"run","children":[],"call":["config []= ","q default= "," ask "," agree ","env empty? "," ask to_s ","(send nil :ask\n  (str \"API token: \")) to_s ","q echo= ","config [] ","YAML  load_file [] ","YAML  load_file ","File  exists? ","File  expand_path ","Dir  home "," deploy "," ask to_s  empty? "]}," Travis CLI Setup ElasticBeanstalk run":{"type":"method","name":"run","children":[],"call":[" encrypt ","q default= "," agree ","config []= "," ask to_s "," ask ","(send nil :ask\n  (str \"Elastic Beanstalk region: \")) to_s ","(send nil :ask\n  (str \"Secret access key: \")) to_s ","q echo= "," deploy "]}," Travis CLI Setup Divshot run":{"type":"method","name":"run","children":[],"call":["config []= "," ask to_s "," ask ","(send nil :ask\n  (str \"Divshot Api Key: \")) to_s ","q echo= "," deploy "]}," Travis CLI Setup Deis run":{"type":"method","name":"run","children":[],"call":["(send nil :ask\n  (str \"Deis Password: \")) to_s ","q echo= "," ask ","config [] "," ask to_s "," deploy "]}," Travis CLI Setup CodeDeploy run":{"type":"method","name":"run","children":[],"call":[" travis_config []= ","Shellwords  escape "," travis_config ","q default= "," ask ","File  basename ","cd [] ","s3 []= ","File  dirname ","cd [] include? "," travis_config [] "," agree "," encrypt ","config []= "," ask to_s ","(send nil :ask\n  (str \"Application Name: \")) to_s "," repository name "," repository ","(send nil :ask\n  (str \"Bundle Type: \")) to_s ","config [] [] ","config [] ","(send nil :ask\n  (str \"Secret access key: \")) to_s ","q echo= ","access_key == ","(send nil :ask\n  (str \"Access key ID: \")) to_s "," deploy ","content [] ","File  read ","File  readable? "," travis_config []  [] "," travis_config []  [] include? ","content []  == ","File  read  [] "]}," Travis CLI Setup CloudFoundry run":{"type":"method","name":"run","children":[],"call":[" ask to_s "," ask ","config [] ","(send nil :ask\n  (str \"Cloud Foundry password: \")) to_s ","q echo= ","JSON  parse [] ","JSON  parse ","File  read ","File  exist? ","File  expand_path ","Dir  home "," deploy ","File  read chomp "]}," Travis CLI Setup CloudFiles run":{"type":"method","name":"run","children":[],"call":["config []= "," ask to_s "," ask ","(send nil :ask\n  (str \"Rackspace Api Key: \")) to_s ","q echo= "," deploy "]}," Travis CLI Setup CloudControl run":{"type":"method","name":"run","children":[],"call":["config []= ","(send nil :ask\n  (str \"cloudControl deployment: \")) to_s ","q default= "," ask ","(send nil :ask\n  (str \"cloudControl application: \")) to_s "," repository name "," repository ","(send nil :ask\n  (str \"cloudControl password: \")) to_s ","q echo= "," ask to_s "," deploy ","(send nil :ask\n  (str \"cloudControl (send nil :ask\n  (str \"cloudControl deployment: \")) to_s loyment: \")) to_s ","(send nil :ask\n  (str \"cloudControl (send nil :ask\n  (str \"cloudControl application: \")) to_s lication: \")) to_s "," (send nil :ask\n  (str \"cloudControl deployment: \")) to_s loy "]}," Travis CLI Setup Cloud_66 run":{"type":"method","name":"run","children":[],"call":[" encrypt ","q default= "," agree ","(send nil :ask\n  (str \"Cloud 66 Redeployment Hook Url: \")) to_s ","q echo= "," ask ","config [] "," deploy "]}," Travis CLI Setup Biicode run":{"type":"method","name":"run","children":[],"call":[" on ","(send nil :ask\n  (str \"biicode password: \")) to_s ","q echo= "," ask ","config [] ","(send nil :ask\n  (str \"biicode username: \")) to_s "," deploy "]}," Travis CLI Setup Artifacts run":{"type":"method","name":"run","children":[],"call":[" encrypt ","q default= "," agree ","config []= "," ask to_s "," ask ","(send nil :ask\n  (str \"Secret access key: \")) to_s ","q echo= "," configure "," travis_config [] "," travis_config "]}," Travis CLI Setup Appfog run":{"type":"method","name":"run","children":[],"call":["config []= ","(send nil :ask\n  (str \"App name: \")) to_s ","q default= "," repository name "," repository "," ask ","(send nil :ask\n  (str \"Password: \")) to_s ","q echo= "," ask to_s "," deploy "]}," Travis CLI Setup Anynines run":{"type":"method","name":"run","children":[],"call":[" ask to_s "," ask ","config [] ","(send nil :ask\n  (str \"anynines password: \")) to_s ","q echo= "," deploy "]}," Travis CLI Settings describe":{"type":"method","name":"describe","children":[],"call":[" block_given? ","DESCRIPTIONS  [] ","key to_sym "," keys? "]}," Travis CLI Settings all_settings?":{"type":"method","name":"all_settings?","children":[],"call":["q default= "," agree "," setting "]}," Travis CLI Settings format_value":{"type":"method","name":"format_value","children":[],"call":[" color ","value to_s rjust ","value to_s "]}," Travis CLI Settings boolean?":{"type":"method","name":"boolean?","children":[],"call":["key to_sym != ","key to_sym "]}," Travis CLI Settings run":{"type":"method","name":"run","children":[],"call":[" repository settings save "," repository settings "," repository "," setting nil? ! "," setting nil? "," setting "," configure? "," say "," format_value << << "," format_value << "," format_value "," color ","key ljust + + ","key ljust + ","key ljust "," describe "," repository settings []= ","q default= "," setting to_i "," setting respond_to? "," ask "," agree "," boolean? ","keys include? ","keys empty? "," repository settings to_h each "," repository settings to_h "," repository slug "," authenticate "," exit "," configure? ! "," all_settings? ! "," all_settings? "," interactive? "," color << "," format_ repository settings []=  << << "," format_ repository settings []=  << "," format_ repository settings []=  ","  color ibe ","q  setting to_i = ","q  setting = "]}," Travis CLI Requests run":{"type":"method","name":"run","children":[],"call":[" empty_line "," say "," formatter time ","request created_at "," formatter ","   + + + ","request commit subject ","request commit ","   + + ","   + "," color ","request commit short_sha ","(send nil :color\n  (lvar :description)\n  (array\n    (sym :bold)\n    (lvar :style))) join strip + ","(send nil :color\n  (lvar :description)\n  (array\n    (sym :bold)\n    (lvar :style))) join strip ","(send nil :color\n  (lvar :description)\n  (array\n    (sym :bold)\n    (lvar :style))) join ","request pull_request_number ","request tag ","request branch ","request rejected? ","request accepted? ","request message ","request result ","request event_type ","requests each ","requests [] "," Integer "," limit "," repository requests "," repository "," repository requests each ","request request message  ","requests []  each "," repository requests  each ","requests []  [] "," repository requests  [] "," repository requests []  "," repository  repository requests  "," repository requests []  each "," repository  repository requests  each "]}," Travis CLI Repos match?":{"type":"method","name":"match?","children":[],"call":["File  fnmatch? "," match ","File FNM_PATHNAME  | "," match nil? "]}," Travis CLI Repos attributes":{"type":"method","name":"attributes","children":[],"call":["repo pull? ","repo push? ","repo admin? ","repo active? "]}," Travis CLI Repos repositories":{"type":"method","name":"repositories","children":[],"call":["repo admin? == "," admin ","repo admin? "," admin nil? ","repo name == "," name ","repo name "," name nil? ","repo owner_name == "," owner ","repo owner_name "," owner nil? ","repo active? == "," active ","repo active? "," active nil? "," match? ","repo slug "," session preload sort_by select "," session preload sort_by "," session preload "," session "," session hooks concat uniq "," session hooks concat "," user repositories "," user "," session hooks "," user  session hooks concat uniq itories "]}," Travis CLI Repos run":{"type":"method","name":"run","children":[],"call":[" empty_line ","repo == "," repositories last "," repositories "," say ","repo description lines first chomp ","repo description lines first ","repo description lines ","repo description ","repo description to_s empty? ","repo description to_s "," color ","( << << ","( << ","(send\n  (send nil :attributes\n    (lvar :repo)) :map) join "," attributes map "," attributes "," color + ","repo slug ","repo active? "," interactive? "," repositories each ","repo repo description lines first chomp  lines first chomp ","repo repo description lines first chomp  lines first ","repo repo description lines first chomp  lines ","repo repo description lines first chomp  ","repo repo description lines first chomp  to_s empty? ","repo repo description lines first chomp  to_s "]}," Travis CLI Report user_info":{"type":"method","name":"user_info","children":[],"call":["e message ","as %p % "," user login "," user "," access_token "]}," Travis CLI Report known_repos":{"type":"method","name":"known_repos","children":[],"call":["info [] "," config [] each "," config [] "," config "]}," Travis CLI Report endpoint_name":{"type":"method","name":"endpoint_name","children":[],"call":["enterprise %p % ","v start_with? "," config [] detect "," config [] "," config "," config [] respond_to? "," endpoint_name ","url sub "]}," Travis CLI Report endpoints":{"type":"method","name":"endpoints","children":[],"call":["info join "," endpoint_name ","(if\n  (send\n    (lvar :info) :[]\n    (str \"access_token\"))\n  (str \"access token\")\n  (nil)) compact ","endpoint == "," api_endpoint "," default_endpoint == "," default_endpoint ","info [] "," config [] each "," config [] "," config ","(if\n  (send\n    (lvar :info) :[]\n    (str \"access_token\"))\n  (str \"access token\")\n  (nil)) compact  join ","(if\n  (send\n    (lvar :(if\n  (send\n    (lvar :info) :[]\n    (str \"access_token\"))\n  (str \"access token\")\n  (nil)) compact ) :[]\n    (str \"access_token\"))\n  (str \"access token\")\n  (nil)) compact ","(if\n  (send\n    (lvar :info) :[]\n    (str \"access_token\"))\n  (str \"access token\")\n  (nil)) compact  [] "]}," Travis CLI Report session_info":{"type":"method","name":"session_info","children":[],"call":[" enterprise? "," insecure ! "," insecure "," user_info "," api_endpoint "]}," Travis CLI Report cli_info":{"type":"method","name":"cli_info","children":[],"call":["Time  at "," last_check [] "," last_check ","Tools Completion  completion_installed? "]}," Travis CLI Report general":{"type":"method","name":"general","children":[],"call":["Tools System  rubygems ","Tools System  os ","Tools System  ruby ","Tools System  full_os "]}," Travis CLI Report list":{"type":"method","name":"list","children":[],"call":[" say ","(begin\n  (lvar :key)) ljust << << << ","additional to_s ","(begin\n  (lvar :key)) ljust << << "," color ","value to_s ","(begin\n  (lvar :key)) ljust << ","(begin\n  (lvar :key)) ljust "," known_repos? ","value map join ","value map ","value empty? "," none "]}," Travis CLI Report display":{"type":"method","name":"display","children":[],"call":[" puts "," list "," send "," say "," color "]}," Travis CLI Report display_error":{"type":"method","name":"display_error","children":[],"call":[" display "," color "," load_file "]}," Travis CLI Report run":{"type":"method","name":"run","children":[],"call":[" say "," color "," display_error "," display "," known_repos? "]}," Travis CLI RepoCommand save_travis_config":{"type":"method","name":"save_travis_config","children":[],"call":["File  write ","yaml gsub! "," travis_config to_yaml "," travis_config "," travis_yaml "," travis_config to_yaml  gsub! "," travis_config to_ travis_config to_yaml  "," travis_ travis_config to_yaml  "]}," Travis CLI RepoCommand confirm_and_save_travis_config":{"type":"method","name":"confirm_and_save_travis_config","children":[],"call":[" save_travis_config ","ans =~ "," ask ","(nil) join "," color "," travis_config to_yaml "," travis_config "," travis_yaml "," ask  =~ "]}," Travis CLI RepoCommand travis_yaml":{"type":"method","name":"travis_yaml","children":[],"call":[" travis_yaml "," error ","parent == ","File  expand_path ","File  exist? ","File  expand_path  == ","File  expand_File  expand_path  "]}," Travis CLI RepoCommand travis_config":{"type":"method","name":"travis_config","children":[],"call":["payload to_hash ","payload respond_to? ","YAML  load_file "," travis_yaml ","YAML  load_file  to_hash ","YAML  load_file  respond_to? "]}," Travis CLI RepoCommand store_slug":{"type":"method","name":"store_slug","children":[],"call":[]}," Travis CLI RepoCommand load_slug":{"type":"method","name":"load_slug","children":[],"call":["stored empty? ","(str \"git config --get travis.slug\") chomp ","(str \"git config --get travis.slug\") chomp  empty? "]}," Travis CLI RepoCommand parse_remote":{"type":"method","name":"parse_remote","children":[],"call":["URI  parse path ","URI  parse ","path start_with? ","url split last ","url split ","url =~ ","URI  parse url split last  ","url split last  start_with? "]}," Travis CLI RepoCommand detect_slug":{"type":"method","name":"detect_slug","children":[],"call":[" info "," color ","q default= "," ask "," agree "," interactive? "," parse_remote =~ "," parse_remote ","(str \"git ls-remote --get-url \") chomp ","git_remote empty? ","(str \"git config --get branch.\") chomp ","(str \"git name-rev --name-only HEAD 2>\") chomp ","Addressable URI  parse path =~ ","Addressable URI  parse path ","Addressable URI  parse ","(str \"git config --get remote.\") chomp ","(str \"git config --get branch.\") chomp  empty? "]}," Travis CLI RepoCommand branch":{"type":"method","name":"branch","children":[],"call":[" repository branch "," repository "]}," Travis CLI Pubkey key":{"type":"method","name":"key","children":[],"call":[" raise "," key_format ","key to_ssh ","key to_s ","key fingerprint "," repository public_key "," repository "," repository public_key to_rsa to_s "," repository public_key to_rsa "," pem? ","  repository public_key _format "," repository public_key  to_ssh "," repository public_key  to_s "," repository public_key  fingerprint "," repository public_ repository public_key  "," repository public_ repository public_key  to_rsa to_s "," repository public_ repository public_key  to_rsa "]}," Travis CLI Pubkey run":{"type":"method","name":"run","children":[],"call":[" say "," color "," repository slug "," repository "," key "," error "," api_endpoint "," key_format "]}," Travis CLI Monitor run":{"type":"method","name":"run","children":[],"call":[" handle_event ","listener on "," events "," say "," builds? "," description ","listener on_connect "," listen "," repos ","(send nil :color\n  (send\n    (send nil :formatter) :time\n    (lvar :time))\n  (send\n    (lvar :entity) :color)) join "," color ","entity color ","entity state ","entity inspect_info "," formatter time "," formatter ","entity started_at ","entity finished_at ","event build ","event job "," notification notify "," notification ","entity number ","entity class name [] ","entity class name ","entity class ","entity repository slug ","entity repository "," monitor? "]}," Travis CLI Monitor handle_event":{"type":"method","name":"handle_event","children":[],"call":[" raise "," explode? "," display "," monitor? ","entity started_at ","entity finished_at ","event build ","event job "]}," Travis CLI Monitor display":{"type":"method","name":"display","children":[],"call":[" notification notify ","(send\n  (send\n    (send\n      (lvar :entity) :class) :name) :[]\n  (regexp\n    (str \"[^:]+$\")\n    (regopt))) join ","entity commit subject ","entity commit ","entity state + ","entity state ","entity number ","entity class name [] ","entity class name ","entity class ","entity repository slug ","entity repository "," notification "," say ","(send nil :color\n  (send\n    (send nil :formatter) :time\n    (lvar :time))\n  (send\n    (lvar :entity) :color)) join "," color ","entity color ","entity inspect_info "," formatter time "," formatter "]}," Travis CLI Monitor monitor?":{"type":"method","name":"monitor?","children":[],"call":[" push? "," pull? ","entity pull_request? "," all? "]}," Travis CLI Monitor all?":{"type":"method","name":"all?","children":[],"call":[" push? ! "," push? "," pull? ! "," pull? "]}," Travis CLI Monitor firehose?":{"type":"method","name":"firehose?","children":[],"call":[" repos empty? "," repos "," org? "]}," Travis CLI Monitor events":{"type":"method","name":"events","children":[],"call":["events << << ","events << "," builds? "]}," Travis CLI Monitor description":{"type":"method","name":"description","children":[],"call":[" repos size "," repos "," repos first slug "," repos first "," session config [] "," session config "," session "]}," Travis CLI Monitor setup_notification":{"type":"method","name":"setup_notification","children":[],"call":[" warn ","e message "," error ","Tools Notification  new "]}," Travis CLI Monitor setup":{"type":"method","name":"setup","children":[],"call":[" debug "," notification class name [] "," notification class name "," notification class "," notification "," setup_notification "," firehose? ! "," firehose? "," repos concat "," user repositories "," user "," repos "," my_repos? "," repo "," repos map! "," repos any? "]}," Travis CLI Monitor initialize":{"type":"method","name":"initialize","children":[],"call":[]}," Travis CLI Logs check_websocket":{"type":"method","name":"check_websocket","children":[],"call":[" info "," raise ","e path != ","e path ","e respond_to? "," require "," stream? "]}," Travis CLI Logs job":{"type":"method","name":"job","children":[],"call":["job jobs first ","job jobs ","job respond_to? "," branch "," build "," last_build number + "," last_build number "," last_build ","number start_with? ","job jobs first  job jobs first s first ","job jobs first  job jobs first s ","job jobs first  respond_to? "," last_build  last_build number +  + "," last_build  last_build number +  "," last_build number +  start_with? "]}," Travis CLI Logs print_log":{"type":"method","name":"print_log","children":[],"call":[" print "," clean "," encoded "," interactive? "]}," Travis CLI Logs display_log":{"type":"method","name":"display_log","children":[],"call":[" print "," interactive? "," print_log ","job log body ","job log "," stream? "," info "," color ","job inspect_info "]}," Travis CLI Logs delete_log":{"type":"method","name":"delete_log","children":[],"call":["job delete_log "," reason "," warn "," color ","job inspect_info "," error "," danger_zone? "," interactive? "," force? "]}," Travis CLI Logs setup":{"type":"method","name":"setup","children":[],"call":[" check_websocket "]}," Travis CLI Logout run":{"type":"method","name":"run","children":[],"call":[" success "," endpoint_config delete "," endpoint_config "," session logout "," session "]}," Travis CLI Login login_header":{"type":"method","name":"login_header","children":[],"call":[" empty_line "," say "," color "," github_endpoint host "," github_endpoint "]}," Travis CLI Login github":{"type":"method","name":"github","children":[],"call":["g after_tokens= "," error ","g explode= "," proc ","g debug= "," debug ","g login_header= "," login_header ","g ask_otp= "," ask ","g ask_password= ","q echo= ","g ask_login= ","g drop_token= "," list_github_token ! "," list_github_token ","g check_token= "," skip_token_check? ! "," skip_token_check? ","g github_login= "," user_login ","g auto_password= "," auto_password ","g auto_token= "," auto_token ","g github_token= "," github_token "," explode? ","g manual_login= "," no_manual nil? "," no_manual ","g note= "," api_endpoint ","Tools Github  new "," session config [] "," session config "," session "," load_gh "]}," Travis CLI Login login":{"type":"method","name":"login","children":[],"call":[" raise "," session access_token "," session "," success "," user login "," user "," error "," session config [] "," session config "," user correct_scopes? ","user mismatch: logged in as %p instead of %p % "," user_login "," user login != "," endpoint_config []= "," github_auth "," endpoint_config "," github with_token "," github "," session access_token= "]}," Travis CLI Login list_token":{"type":"method","name":"list_token","children":[],"call":[" say "," github each_token "," github "," github after_tokens= "," proc "]}," Travis CLI Lint run":{"type":"method","name":"run","children":[],"call":[" exit "," exit_code? ","lint warnings? "," say "," color ","warning message gsub ","warning message ","(send nil :color\n  (str \"in \")\n  (sym :info)) join ","warning key join ","warning key ","warning key any? "," color + ","lint warnings each ","lint warnings ","lint ok? "," quiet? "," session lint "," session "," error ","e message ","YAML  load ","$stdin read "," debug ","File  read ","File  readable? ","File  exist? ","file != ","$stdin eof? ","$stdin tty? "," session lint  warnings? "," session lint  warnings each "," session lint  warnings "," session lint  ok? "," session  session lint  "]}," Travis CLI Init detect_language":{"type":"method","name":"detect_language","children":[],"call":[" repository github_language "," repository "]}," Travis CLI Init template":{"type":"method","name":"template","children":[],"call":["YAML  load_file "," error ","File  exist? "," template_name ","LANGUAGE_MAPPING  [] ","language to_s downcase ","language to_s ","File  expand_path ","YAML  load_ template_name  ","YAML  load_File  expand_path  ","language to_s downcase  to_s downcase ","language to_s downcase  to_s "]}," Travis CLI Init template_name":{"type":"method","name":"template_name","children":[],"call":[" asset_path "," asset_path first ","File  expand_path "]}," Travis CLI Init custom_config":{"type":"method","name":"custom_config","children":[],"call":[]}," Travis CLI Init run":{"type":"method","name":"run","children":[],"call":[" skip_enable? "," say "," save_travis_config "," puts "," travis_config to_yaml "," travis_config "," print_conf? "," travis_config= "," template merge "," custom_config "," template ","q default= "," detect_language "," ask "," error "," print_conf? ! "," force? ! "," force? ","File  exist? "]}," Travis CLI Init help":{"type":"method","name":"help","children":[],"call":[" class languages join "," class languages "," class "]}," Travis CLI Init languages":{"type":"method","name":"languages","children":[],"call":[]}," Travis CLI Help other_commands":{"type":"method","name":"other_commands","children":[],"call":["c command_name ","(send\n  (send\n    (const nil :CLI) :commands) :select) sort_by ","cmd ancestors include? ! ","cmd ancestors include? ","cmd ancestors ","CLI  commands select ","CLI  commands "]}," Travis CLI Help repo_commands":{"type":"method","name":"repo_commands","children":[],"call":["c command_name ","(send\n  (send\n    (const nil :CLI) :commands) :select) sort_by ","cmd ancestors include? ","cmd ancestors ","CLI  commands select ","CLI  commands "]}," Travis CLI Help api_commands":{"type":"method","name":"api_commands","children":[],"call":["c command_name ","(send\n  (send\n    (const nil :CLI) :commands) :select) sort_by ","cmd ancestors include? ! ","cmd ancestors include? ","cmd ancestors ","CLI  commands select ","CLI  commands "]}," Travis CLI Help cmd_group_header":{"type":"method","name":"cmd_group_header","children":[],"call":[" say "," color "]}," Travis CLI Env env_vars":{"type":"method","name":"env_vars","children":[],"call":[" repository env_vars "," repository "]}," Travis CLI Env list":{"type":"method","name":"list","children":[],"call":[" say ","(begin\n  (send\n    (lvar :v) :name)) << "," color ","v value ","v name "," env_vars each "," env_vars "," repository slug "," repository "]}," Travis CLI Env remove_vars":{"type":"method","name":"remove_vars","children":[],"call":["var delete "," say "," color + "," color ","var name ","(lvar :var) ! "," block_given? "," env_vars each "," env_vars "]}," Travis CLI Env clear":{"type":"method","name":"clear","children":[],"call":[" remove_vars "," exit "," danger_zone? ! "," danger_zone? "," color "," repository slug "," repository "," force? ! "," force? "," interactive? "," env_vars empty? "," env_vars "]}," Travis CLI Env unset":{"type":"method","name":"unset","children":[],"call":["names include? ","var name "," remove_vars ","var delete "," say "," color + "," color "," env_vars each "," env_vars "]}," Travis CLI Env copy":{"type":"method","name":"copy","children":[],"call":[" warn "," color "," set ","ENV  [] ","ENV  include? ","names each "]}," Travis CLI Env set":{"type":"method","name":"set","children":[],"call":[" env_vars upsert "," env_vars ","Shellwords  escape "," unescape? "," say "," color + "," color "," public "," public != "]}," Travis CLI Env setup":{"type":"method","name":"setup","children":[],"call":[" error "," color "," repository slug "," repository "," repository admin? "," authenticate "," repository push? "]}," Travis CLI Endpoint run_travis":{"type":"method","name":"run_travis","children":[],"call":[" say "," set_default? "," api_endpoint "," config []= "," config "," config delete "," config [] "," drop_default? "]}," Travis CLI Endpoint run_github":{"type":"method","name":"run_github","children":[],"call":[" say "," github_endpoint to_s "," github_endpoint "," load_gh "," error "," set_default? "," drop_default? "]}," Travis CLI EncryptFile output_path_for":{"type":"method","name":"output_path_for","children":[],"call":[" decrypt "," exit "," danger_zone? "," color ","input_path =~ "," interactive? "," decrypt? "]}," Travis CLI EncryptFile escape_path":{"type":"method","name":"escape_path","children":[],"call":["Shellwords  escape sub ","Shellwords  escape "]}," Travis CLI EncryptFile decrypt_to_for":{"type":"method","name":"decrypt_to_for","children":[],"call":["input_path sub ","Dir  home ","input_path start_with? ","input_path == "]}," Travis CLI EncryptFile transcode":{"type":"method","name":"transcode","children":[],"call":["aes update + ","aes final ","aes update ","aes iv= ","(send nil :iv) pack "," iv ","aes key= ","(send nil :key) pack "," key ","aes encrypt ","aes decrypt "," decrypt ","OpenSSL Cipher  new ","File  binread ","$stdin read ","input_path == "," say "," color "," slug ","$stdin tty? ","OpenSSL Cipher  new  update + ","OpenSSL Cipher  new  final ","OpenSSL Cipher  new  update ","OpenSSL Cipher  new  iv= ","OpenSSL Cipher  new  key= ","OpenSSL Cipher  new  encrypt ","OpenSSL Cipher  new  decrypt "]}," Travis CLI EncryptFile notes":{"type":"method","name":"notes","children":[],"call":[" say "," color ","input_path != "," empty_line "," iv "," key "," print_key? "]}," Travis CLI EncryptFile env_name":{"type":"method","name":"env_name","children":[],"call":["Digest  hexencode ","Digest SHA1  digest [] ","Digest SHA1  digest ","Dir  pwd "]}," Travis CLI EncryptFile set_env_vars":{"type":"method","name":"set_env_vars","children":[],"call":[" repository env_vars upsert "," iv "," env_name "," repository env_vars "," repository "," key "," say "]}," Travis CLI EncryptFile decrypt_command":{"type":"method","name":"decrypt_command","children":[],"call":[" escape_path "," decrypt_to "," env_name "]}," Travis CLI EncryptFile store_command":{"type":"method","name":"store_command","children":[],"call":[" confirm_and_save_travis_config "," travis_config [] unshift "," travis_config [] "," stage "," travis_config "," travis_config [] delete "," travis_config []= "," Array "," save_travis_config "]}," Travis CLI EncryptFile print_command":{"type":"method","name":"print_command","children":[],"call":[" say "," template "," empty_line "]}," Travis CLI EncryptFile setup":{"type":"method","name":"setup","children":[],"call":[" error "," iv =~ "," iv "," key =~ "," key ","SecureRandom  hex "," decrypt? "]}," Travis CLI EncryptFile run":{"type":"method","name":"run","children":[],"call":[" notes "," print_command "," store_command "," stage "," decrypt_command "," set_env_vars "," error "," decrypt_to? "," decrypt? "," write_file "," force "," say "," color ","$stdout puts ","output_path == "," transcode "," output= ","StringIO  new ","$stdout tty? ","File  basename "," output_path_for "," decrypt_to_for "," decrypt_to "," force_interactive "," force_interactive nil? "," print_ decrypt_command  "," store_ decrypt_command  "," decrypt_ decrypt_command  "]}," Travis CLI Encrypt warn_env_assignments":{"type":"method","name":"warn_env_assignments","children":[],"call":[" warn "," config_key ","(str \"=\") match nil? ","(str \"=\") match ","data find ","(str \"env\") match "]}," Travis CLI Encrypt traverse_config":{"type":"method","name":"traverse_config","children":[],"call":[" traverse_config ","hash [] ","hash []= "," Array "]}," Travis CLI Encrypt parent_config":{"type":"method","name":"parent_config","children":[],"call":[" traverse_config "," key_chain [] "," key_chain "," travis_config "]}," Travis CLI Encrypt last_key":{"type":"method","name":"last_key","children":[],"call":[" key_chain last "," key_chain "]}," Travis CLI Encrypt key_chain":{"type":"method","name":"key_chain","children":[],"call":[" config_key split "," config_key "]}," Travis CLI Encrypt subconfig":{"type":"method","name":"subconfig","children":[],"call":[]}," Travis CLI Encrypt merge_config":{"type":"method","name":"merge_config","children":[],"call":["result unshift ","subconfig + ","result first ","result size == ","result size "," parent_config [] "," last_key "," parent_config "," override? "," parent_config []  + "]}," Travis CLI Encrypt set_config":{"type":"method","name":"set_config","children":[],"call":[" parent_config []= "," merge_config "," last_key "," parent_config "]}," Travis CLI Encrypt add?":{"type":"method","name":"add?","children":[],"call":[" config_key ! ! "," config_key ! "," config_key "]}," Travis CLI Console prompt":{"type":"method","name":"prompt","children":[],"call":["Pry Prompt  [] ","Pry  const_defined? "]}," Travis CLI Console ensure_pry":{"type":"method","name":"ensure_pry","children":[],"call":[" error ","(str \"You need to install pry to use Travis CLI console. Try\") join "," require "]}," Travis CLI Command endpoint_option":{"type":"method","name":"endpoint_option","children":[],"call":[]}," Travis CLI Command write_file?":{"type":"method","name":"write_file?","children":[],"call":[" danger_zone? "," color "," interactive? ","File  exist? ! ","File  exist? "]}," Travis CLI Command write_file":{"type":"method","name":"write_file","children":[],"call":["File  write "," error "," write_file? "]}," Travis CLI Command danger_zone?":{"type":"method","name":"danger_zone?","children":[],"call":["q default= "," agree "," color << << "," color << "," color "]}," Travis CLI Command save_file":{"type":"method","name":"save_file","children":[],"call":["file chmod ","file write ","content to_s ","File  open "," debug ","Storing %p % "," config_path ","File  write "," config_ config_path  "]}," Travis CLI Command delete_file":{"type":"method","name":"delete_file","children":[],"call":["File  delete "," debug ","Deleting %p % ","File  exist? "," config_path "," config_ config_path  "]}," Travis CLI Command load_file":{"type":"method","name":"load_file","children":[],"call":["File  read "," debug ","Loading %p % ","File  exist? "," config_path "," config_ config_path  "]}," Travis CLI Command config_path":{"type":"method","name":"config_path","children":[],"call":["File  join ","Dir  mkdir ","File  directory? ","File  expand_path ","Dir  home ","ENV  fetch "]}," Travis CLI Command setup_trap":{"type":"method","name":"setup_trap","children":[],"call":[" exit ","c call ","@on_signal each "," trap ","(sym :INT) each "]}," Travis CLI Command clear_error":{"type":"method","name":"clear_error","children":[],"call":[" delete_file "]}," Travis CLI Command store_error":{"type":"method","name":"store_error","children":[],"call":[" save_file ","message << ","exception backtrace each ","exception backtrace ","An error occurred running `travis %s%s`:\n    %p: %s\n % ","exception message ","exception class "," endpoint_option "," command_name ","An error occurred running `travis %s%s`:\n    %p: %s\n %  << ","exception An error occurred running `travis %s%s`:\n    %p: %s\n %  "]}," Travis CLI Command on_signal":{"type":"method","name":"on_signal","children":[],"call":["@on_signal << "]}," Travis CLI Command info":{"type":"method","name":"info","children":[],"call":[" say "," color "," write_to "]}," Travis CLI Command time":{"type":"method","name":"time","children":[],"call":[" debug ","  took %.2g seconds % ","Time  now - ","Time  now ","callback call "," debug? "]}," Travis CLI Command usage_for":{"type":"method","name":"usage_for","children":[],"call":["usage << ","method arity != ","method arity ","type == ","name upcase ","method parameters each ","method parameters ","method respond_to? "," method "," method  arity != "," method  arity ","name upcase  upcase "," method  parameters each "," method  parameters "," method  respond_to? ","  method  "]}," Travis CLI Command check_ruby":{"type":"method","name":"check_ruby","children":[],"call":[" warn "," skip_version_check? ","RUBY_VERSION  > "]}," Travis CLI Command check_completion":{"type":"method","name":"check_completion","children":[],"call":[" config []= "," config ","Tools Completion  install_completion ","q default= "," agree ","Tools Completion  update_completion ","Tools Completion  completion_installed? "," write_to "," config [] != "," config [] "," interactive? ! "," interactive? "," skip_completion_check? "]}," Travis CLI Command check_version":{"type":"method","name":"check_version","children":[],"call":[" warn "," debug ","error message ","error class ","Tools System  recent_version? "," last_check [] "," last_check "," last_check []= ","Time  now to_i ","Time  now ","JSON  parse [] ","JSON  parse ","response body ","response status == ","response status ","response headers [] ","response headers ","Faraday  get "," last_check [] to_s ","Timeout  timeout ","seconds_since < "," skip_version_check? ","Time  now to_i - "," last_check [] to_i "," last_check clear "," last_check [] != "," error "," config []= "," config ","Travis VERSION  >= "," config [] to_s "," config [] ","Time  now to_i - < "," config [] to_i ","Travis VERSION  < ","check < ","current <=> ","s to_i "," last_check [] split map "," last_check [] split ","Travis VERSION  split map ","Travis VERSION  split ","Tools System  recent_JSON  parse [] ? "," last_current <=>  [] "," last_current <=>  "," last_current <=>  []= ","Faraday  get  body ","Faraday  get  status == ","Faraday  get  status ","Faraday  get  headers [] ","Faraday  get  headers "," last_current <=>  [] to_s ","Time  now to_i -  < "," skip_JSON  parse [] _check? "," skip_version_current <=> ? "," last_current <=>  [] to_i "," last_current <=>  clear "," last_current <=>  [] != ","current <=>  < "," last_current <=>  [] split map "," last_current <=>  [] split "]}," Travis CLI Command last_check":{"type":"method","name":"last_check","children":[],"call":[" config delete "," config "," config [] "]}," Travis CLI Command subcommands":{"type":"method","name":"subcommands","children":[],"call":[]}," Travis CLI Command description":{"type":"method","name":"description","children":[],"call":[]}," Travis CLI Cancel run":{"type":"method","name":"run","children":[],"call":[" say ","entity number ","entity class one ","entity class ","entity cancel "," error "," repository slug "," repository "," build "," job "," authenticate "]}," Travis CLI Cache description":{"type":"method","name":"description","children":[],"call":["description << "," color "," match "," match? "," branch "," branch? "," color  << "]}," Travis CLI Cache drop?":{"type":"method","name":"drop?","children":[],"call":[" error "," danger_zone? "," description "," interactive? "," force? "," delete? "]}," Travis CLI Cache space":{"type":"method","name":"space","children":[],"call":[" caches map map max "," caches map map "," caches map "," caches "]}," Travis CLI Cache caches":{"type":"method","name":"caches","children":[],"call":[" repository caches "," params "," repository "," repository delete_caches "," drop? "]}," Travis CLI Cache params":{"type":"method","name":"params","children":[],"call":["params []= "," match "," match? "," branch "," branch? "]}," Travis CLI Cache display_cache":{"type":"method","name":"display_cache","children":[],"call":[" say ","(send nil :color\n  (send\n    (send\n      (lvar :cache) :slug) :ljust\n    (send nil :space))\n  (sym :bold)) join << ","(send nil :color\n  (send\n    (send\n      (lvar :cache) :slug) :ljust\n    (send nil :space))\n  (sym :bold)) join ","size:  << "," formatter file_size ","cache size "," formatter ","last modified:  << "," formatter time ","cache last_modified "," color ","cache slug ljust "," space ","cache slug "]}," Travis CLI Cache display_branch":{"type":"method","name":"display_branch","children":[],"call":[" puts "," display_cache ","list each "," say "," color "]}," Travis CLI Cache check_caches":{"type":"method","name":"check_caches","children":[],"call":[" exit "," say "," caches any? "," caches "]}," Travis CLI Cache run":{"type":"method","name":"run","children":[],"call":[" say ","Overall size of above caches:  << "," formatter file_size "," formatter ","s + ","c size "," caches inject "," caches "," display_branch ","branches each "," warn "," delete? "," check_caches "," caches group_by "," error "," color "," repository slug "," repository "," repository push? "," repository member? "," caches group_by  each "]}," Travis CLI Branches longest":{"type":"method","name":"longest","children":[],"call":["(send\n  (send\n    (send\n      (send nil :repository) :branches) :keys) :map) max ","b size "," repository branches keys map "," repository branches keys "," repository branches "," repository "]}," Travis CLI Branches run":{"type":"method","name":"run","children":[],"call":[" say ","(send nil :color\n  (send\n    (dstr\n      (begin\n        (send\n          (lvar :build) :branch_info))\n      (str \":\")) :ljust\n    (send\n      (send nil :longest) :+\n      (int 2)))\n  (array\n    (sym :info)\n    (sym :bold))) join strip + ","(send nil :color\n  (send\n    (dstr\n      (begin\n        (send\n          (lvar :build) :branch_info))\n      (str \":\")) :ljust\n    (send\n      (send nil :longest) :+\n      (int 2)))\n  (array\n    (sym :info)\n    (sym :bold))) join strip ","(send nil :color\n  (send\n    (dstr\n      (begin\n        (send\n          (lvar :build) :branch_info))\n      (str \":\")) :ljust\n    (send\n      (send nil :longest) :+\n      (int 2)))\n  (array\n    (sym :info)\n    (sym :bold))) join ","build commit subject ","build commit "," color ","build color ","(str \"#\") ljust ","build state ","build number to_s ljust ","build number to_s ","build number ","(begin\n  (send\n    (lvar :build) :branch_info)) ljust "," longest + "," longest ","build branch_info "," repository last_on_branch each "," repository last_on_branch "," repository "]}," Travis CLI ApiCommand default_endpoint":{"type":"method","name":"default_endpoint","children":[],"call":[" config [] "," config ","ENV  [] "]}," Travis CLI ApiCommand listen":{"type":"method","name":"listen","children":[],"call":["listener disconnect "," on_signal "]}," Travis CLI ApiCommand github_endpoint":{"type":"method","name":"github_endpoint","children":[],"call":["GH  with api_host ","GH  with "," load_gh "]}," Travis CLI ApiCommand load_gh":{"type":"method","name":"load_gh","children":[],"call":["GH  set ","gh_config []= "," time ","payload [] ","payload [] to_s upcase ","payload [] to_s ","block call ","type == "," proc "," debug? ","gh_config delete ","gh_config [] != ","gh_config [] ","h update ","k to_sym ","gh_config inject "," session config [] "," session config "," session "," require "," debug "," session config []  []= "," session config []  delete "," session config []  [] != "," session config []  [] "," session config []  inject "]}," Travis CLI ApiCommand setup_enterprise?":{"type":"method","name":"setup_enterprise?","children":[],"call":["@setup_ennterpise ! "," enterprise_name ! ! "," enterprise_name ! "," enterprise_name "]}," Travis CLI ApiCommand setup_enterprise":{"type":"method","name":"setup_enterprise","children":[],"call":[" endpoint_config []= "," endpoint_config "," session ssl delete "," session ssl "," session "," insecure= "," insecure "," insecure nil? "," api_endpoint= ","c [] "," enterprise_name "," config []= "," config ","q default= "," agree "," color ","user_input [] "," ask to_s "," ask "," error "," interactive? "," write_to ","c []= "," api_endpoint "," explicit_api_endpoint? "," config [] "," setup_enterprise? "," ask to_s  [] "]}," Travis CLI ApiCommand enterprise?":{"type":"method","name":"enterprise?","children":[],"call":[" endpoint_config [] ! ! "," endpoint_config [] ! "," endpoint_config [] "," endpoint_config "," enterprise_name ! ! "," enterprise_name ! "," enterprise_name "]}," Travis CLI Accounts description":{"type":"method","name":"description","children":[],"call":["account educational? ","account subscribed? "]}," Travis CLI Accounts run":{"type":"method","name":"run","children":[],"call":[" say "," session config [] "," session config "," session "," session config [] nil? "," accounts none? "," accounts ","(send nil :color\n  (send\n    (lvar :account) :login)\n  (array\n    (lvar :color)\n    (sym :bold))) join ","account repos_count ","account repos_count == "," description "," color ","account login capitalize ","account login ","account name ","account on_trial? "," accounts each "," authenticate "," accounts all? ","account subscribed? "]}," Travis Client Worker job":{"type":"method","name":"job","children":[],"call":[" payload [] "," payload "]}," Travis Client Worker repository":{"type":"method","name":"repository","children":[],"call":[" payload [] "," payload "]}," Travis Client Worker payload=":{"type":"method","name":"payload=","children":[],"call":[" set_attribute "," session load "," session "]}," Travis Client Worker cast_id":{"type":"method","name":"cast_id","children":[],"call":[]}," Travis Client Methods workers":{"type":"method","name":"workers","children":[],"call":[" session find_many "," session "]}," Travis Client Methods worker":{"type":"method","name":"worker","children":[],"call":[" session find_one "," session "]}," Travis CLI Encrypt travis_config":{"type":"method","name":"travis_config","children":[],"call":["payload to_hash ","payload respond_to? ","YAML  load_file "," travis_yaml ","YAML  load_file  to_hash ","YAML  load_file  respond_to? "]}," Travis Client Repository Key to_byte_array":{"type":"method","name":"to_byte_array","children":[],"call":[" to_byte_array + "," to_byte_array ","num divmod ","significant [] [] == ","num [] ","significant [] [] ","significant [] ","num between? "]}," Travis Client Repository Key sized_bytes":{"type":"method","name":"sized_bytes","children":[],"call":["(send\n  (lvar :bytes) :size) pack ","bytes size "," to_byte_array ","value to_i ","(send\n  (lvar : to_byte_array ) :size) pack "," to_byte_array  size "]}," Travis CLI Setup configure":{"type":"method","name":"configure","children":[],"call":[" save_travis_config ","config []= "," error "," force? ! "," force? ","config include? "]}," Travis CLI Setup encrypt":{"type":"method","name":"encrypt","children":[],"call":["config []= "," repository encrypt ","config fetch "," repository "]}," Travis CLI Setup setup_sauce_connect":{"type":"method","name":"setup_sauce_connect","children":[],"call":[" encrypt ","q default= "," agree ","config []= ","(send nil :ask\n  (str \"Sauce Labs access key: \")) to_s ","q echo= "," ask "," ask to_s "," configure "," travis_config [] "," travis_config "]}," Travis CLI Setup setup_nodejitsu":{"type":"method","name":"setup_nodejitsu","children":[],"call":[" encrypt ","q default= "," agree ","config []= "," repository slug "," repository ","(send nil :ask\n  (str \"Nodejitsu API token: \")) to_s ","q echo= "," ask ","config [] "," ask to_s ","jitsu_conf [] ","JSON  parse ","File  read ","File  exist? ","File  expand_path ","ENV  [] "," configure ","JSON  parse  [] "]}," Travis CLI Setup setup_openshift":{"type":"method","name":"setup_openshift","children":[],"call":[" encrypt ","q default= "," agree ","config []= "," repository slug "," repository "," ask to_s "," ask ","(send nil :ask\n  (str \"OpenShift application name: \")) to_s "," repository name ","(send nil :ask\n  (str \"OpenShift password: \")) to_s ","q echo= "," configure "]}," Travis CLI Setup setup_heroku":{"type":"method","name":"setup_heroku","children":[],"call":[" encrypt ","q default= "," agree ","config []= "," repository slug "," repository ","(send nil :ask\n  (str \"Heroku application name: \")) to_s "," repository name "," ask ","config [] nil? ","config [] ","(str \"heroku apps:info 2>/dev/null\") scan flatten first ","(str \"heroku apps:info 2>/dev/null\") scan flatten ","(str \"heroku apps:info 2>/dev/null\") scan ","(send nil :ask\n  (str \"Heroku API token: \")) to_s ","q echo= ","config [] empty? ","(str \"heroku auth:token 2>/dev/null\") strip "," configure "]}," Travis CLI Setup setup_rubygems":{"type":"method","name":"setup_rubygems","children":[],"call":[" encrypt ","q default= "," agree ","config []= "," repository slug "," repository ","(send nil :ask\n  (str \"RubyGems API token: \")) to_s ","q echo= "," ask ","config [] ","File  read ","File  exist? ","File  expand_path ","ENV  [] "," configure "," on ","(send nil :ask\n  (str \"Gem name: \")) to_s "," repository name ","YAML  load_file [] ","YAML  load_file "]}," Travis CLI Setup setup_cloudcontrol":{"type":"method","name":"setup_cloudcontrol","children":[],"call":[" encrypt ","q default= "," agree ","config []= "," repository slug "," repository "," ask to_s "," ask ","(send nil :ask\n  (str \"cloudControl password: \")) to_s ","q echo= "," configure ","(send nil :ask\n  (str \"cloudControl deployment: \")) to_s ","(send nil :ask\n  (str \"cloudControl application: \")) to_s "," repository name ","(send nil :ask\n  (str \"cloudControl  ask to_s loyment: \")) to_s ","(send nil :ask\n  (str \"cloudControl (send nil :ask\n  (str \"cloudControl deployment: \")) to_s loyment: \")) to_s ","(send nil :ask\n  (str \"cloudControl  ask to_s lication: \")) to_s ","(send nil :ask\n  (str \"cloudControl (send nil :ask\n  (str \"cloudControl application: \")) to_s lication: \")) to_s "]}," Travis CLI Setup setup_engineyard":{"type":"method","name":"setup_engineyard","children":[],"call":[" encrypt ","q default= "," agree ","config []= "," repository slug "," repository "," ask ","env empty? "," ask to_s ","(send nil :ask\n  (str \"API token: \")) to_s ","q echo= ","config [] ","YAML  load_file [] ","YAML  load_file ","File  exists? ","File  expand_path ","Dir  home "," configure "," ask to_s  empty? "]}," Travis CLI Setup setup_cloudfoundry":{"type":"method","name":"setup_cloudfoundry","children":[],"call":[" encrypt ","q default= "," agree ","config []= "," repository slug "," repository "," ask to_s "," ask ","(send nil :ask\n  (str \"Cloud Foundry password: \")) to_s ","q echo= "," configure "]}," Travis CLI Setup on":{"type":"method","name":"on","children":[],"call":["config [] merge! ","config [] ","q default= "," agree "]}," Travis Tools Notification LibNotify initialize":{"type":"method","name":"initialize","children":[],"call":[]}," Travis Tools Notification Growl initialize":{"type":"method","name":"initialize","children":[],"call":[]}," Travis CLI Login ask_2fa":{"type":"method","name":"ask_2fa","children":[],"call":[" empty_line "," github_otp= "," ask "]}," Travis Client Worker id?":{"type":"method","name":"id?","children":[],"call":[]}," Travis Client WeakEntity complete?":{"type":"method","name":"complete?","children":[],"call":[]}," Travis Client WeakEntity missing?":{"type":"method","name":"missing?","children":[],"call":[]}," Travis Client Annotation inspect_info":{"type":"method","name":"inspect_info","children":[],"call":[" status "," provider_name "]}," Travis Tools Notification OSX nc_running?":{"type":"method","name":"nc_running?","children":[],"call":[" system "]}," Travis Client Commit complete?":{"type":"method","name":"complete?","children":[],"call":[]}," Travis Client Commit missing?":{"type":"method","name":"missing?","children":[],"call":[]}," Travis CLI Console pry_installed?":{"type":"method","name":"pry_installed?","children":[],"call":["$stderr puts "," require "]}," Travis Client Artifact raw_job":{"type":"method","name":"raw_job","children":[],"call":["OpenStruct  new "," job "]}}