{" WebMock assertion_failure":{"type":"method","name":"assertion_failure","children":[],"call":[" raise ","Test Unit AssertionFailedError  new ","Spec Expectations ExpectationNotMetError  new ","AssertionFailedError  new ","RSPEC_NAMESPACE Expectations ExpectationNotMetError  new "]}," WebMock reset_webmock":{"type":"method","name":"reset_webmock","children":[],"call":["WebMock RequestRegistry  instance reset_webmock ","WebMock RequestRegistry  instance "]}," WebMock response_for_request":{"type":"method","name":"response_for_request","children":[],"call":["RequestRegistry  instance response_for_request ","RequestRegistry  instance "]}," WebMock registered_request?":{"type":"method","name":"registered_request?","children":[],"call":["RequestRegistry  instance registered_request? ","RequestRegistry  instance "]}," WebMock net_connect_allowed?":{"type":"method","name":"net_connect_allowed?","children":[],"call":["Config  instance allow_net_connect ","Config  instance ","uri host == ","uri host ","uri is_a? ","Config  instance allow_localhost ","URI  parse ","uri class == ","uri class ","WebMock Util URI  normalize_uri ","Config  instance allow include? ","Config  instance allow ","URI  parse  host == ","WebMock Util URI  normalize_uri  host == ","URI  parse  host ","WebMock Util URI  normalize_uri  host ","URI  parse  is_a? ","WebMock Util URI  normalize_uri  is_a? ","URI  parse  class == ","WebMock Util URI  normalize_uri  class == ","URI  parse  class ","WebMock Util URI  normalize_uri  class ","WebMock Util URI  normalize_URI  parse  ","WebMock Util URI  normalize_WebMock Util URI  normalize_uri  "]}," WebMock disable_net_connect!":{"type":"method","name":"disable_net_connect!","children":[],"call":["Config  instance allow_net_connect= ","Config  instance ","Config  instance allow_localhost= ","options [] ","Config  instance allow= "]}," WebMock allow_net_connect!":{"type":"method","name":"allow_net_connect!","children":[],"call":["Config  instance allow_net_connect= ","Config  instance "]}," WebMock assert_not_requested":{"type":"method","name":"assert_not_requested","children":[],"call":[" assert_requested ","options update "," assertion_failure ","verifier negative_failure_message ","verifier does_not_match? ","RequestExecutionVerifier  new ","options delete ","RequestProfile  new ","options [] ","RequestProfile  new with ","RequestPattern  new with ","RequestPattern  new "," assert_RequestProfile  new ed "," assert_RequestProfile  new with ed "," assert_RequestPattern  new with ed ","RequestExecutionVerifier  new  negative_failure_message ","RequestExecutionVerifier  new  does_not_match? "]}," WebMock assert_requested":{"type":"method","name":"assert_requested","children":[],"call":[" assertion_failure ","verifier failure_message ","verifier verify ","RequestExecutionVerifier  new ","RequestProfile  new ","options [] ","options delete ","verifier matches? ","RequestProfile  new with ","RequestPattern  new with ","RequestPattern  new ","RequestExecutionVerifier  new  failure_message ","RequestExecutionVerifier  new  verify ","RequestExecutionVerifier  new  matches? "]}," WebMock request":{"type":"method","name":"request","children":[],"call":["RequestProfile  new ","RequestPattern  new "]}," WebMock stub_request":{"type":"method","name":"stub_request","children":[],"call":["RequestRegistry  instance register_request_stub ","RequestStub  new ","RequestRegistry  instance "]}," WebMock Utility normalize_headers":{"type":"method","name":"normalize_headers","children":[],"call":[]}," WebMock Utility puts_warning_for_net_http_replacement_libs_if_needed":{"type":"method","name":"puts_warning_for_net_http_replacement_libs_if_needed","children":[],"call":[]}," WebMock Utility record_loaded_net_http_replacement_libs":{"type":"method","name":"record_loaded_net_http_replacement_libs","children":[],"call":[]}," WebMock Utility puts_warning_for_net_http_around_advice_libs_if_needed":{"type":"method","name":"puts_warning_for_net_http_around_advice_libs_if_needed","children":[],"call":[]}," WebMock Utility strip_default_port_from_uri":{"type":"method","name":"strip_default_port_from_uri","children":[],"call":[]}," WebMock Utility encode_unsafe_chars_in_userinfo":{"type":"method","name":"encode_unsafe_chars_in_userinfo","children":[],"call":[]}," WebMock Utility decode_userinfo_from_header":{"type":"method","name":"decode_userinfo_from_header","children":[],"call":[]}," HashCounter get":{"type":"method","name":"get","children":[],"call":[" hash [] "," hash "]}," HashCounter put":{"type":"method","name":"put","children":[],"call":[" hash []= ","(or\n  (send\n    (send nil :hash) :[]\n    (lvar :key))\n  (int 0)) + "," hash [] "," hash "]}," HashCounter initialize":{"type":"method","name":"initialize","children":[],"call":[" hash= "]}," WebMock URL sort_query_params":{"type":"method","name":"sort_query_params","children":[],"call":[]}," WebMock URL variations_of_uri_as_strings":{"type":"method","name":"variations_of_uri_as_strings","children":[],"call":[]}," WebMock URL normalize_uri":{"type":"method","name":"normalize_uri","children":[],"call":[]}," WebMock Response raise_error_if_any":{"type":"method","name":"raise_error_if_any","children":[],"call":[" raise ","@options [] new ","@options [] ","@options has_key? ","@exception new "]}," WebMock Response status":{"type":"method","name":"status","children":[],"call":["@options [] ","@options has_key? "]}," WebMock Response body":{"type":"method","name":"body","children":[],"call":["@options [] ","File  read ","File  directory? ! ","File  directory? ","File  exists? ","@options [] include? ! ","@options [] include? ","@options has_key? ","@options [] read "," stringify_body! "]}," WebMock Response headers":{"type":"method","name":"headers","children":[],"call":["Utility  normalize_headers ","@options [] ","Util Headers  normalize_headers "]}," WebMock Response initialize":{"type":"method","name":"initialize","children":[],"call":["@options []= ","Util Headers  normalize_headers ","@options [] ","@options [] is_a? "," options= "," read_raw_response ","options is_a? ","StringIO  new "]}," WebMock RequestStub to_raise":{"type":"method","name":"to_raise","children":[],"call":["WebMock Response  new ","@responses_sequences << ","ResponsesSequence  new ","(splat\n  (lvar :exceptions)) flatten map ","(splat\n  (lvar :exceptions)) flatten ","ResponseFactory  response_for ","WebMock Response  new s_sequences << "]}," WebMock RequestStub to_return":{"type":"method","name":"to_return","children":[],"call":["WebMock Response  new ","@responses_sequences << ","ResponsesSequence  new ","(splat\n  (lvar :response_hashes)) flatten map ","(splat\n  (lvar :response_hashes)) flatten ","ResponseFactory  response_for ","WebMock Response  new s_sequences << "]}," WebMock RequestStub with":{"type":"method","name":"with","children":[],"call":["@request_profile headers= ","Utility  normalize_headers ","params [] ","@request_profile body= ","Util Headers  normalize_headers ","@request_profile with ","@request_pattern with "]}," WebMock RequestStub initialize":{"type":"method","name":"initialize","children":[],"call":["WebMock Response  new ","RequestProfile  new ","RequestPattern  new "]}," WebMock RequestRegistry stub_for":{"type":"method","name":"stub_for","children":[],"call":["request_profile match ","registered_request_stub request_profile "," request_stubs detect "," request_stubs "]}," WebMock RequestRegistry times_executed":{"type":"method","name":"times_executed","children":[],"call":["sum + ","(send\n  (send\n    (send\n      (self) :requested) :hash) :select) inject ","executed_request_profile match "," requested hash select "," requested hash "," requested ","(send\n  (send\n    (send\n      (self) :requested_signatures) :hash) :select) inject ","request_signature match "," requested_signatures hash select "," requested_signatures hash "," requested_signatures ","request_pattern matches? ","(send\n  (send\n    (self) :requested_signatures) :select) inject "," requested_signatures select "]}," WebMock RequestRegistry response_for_request":{"type":"method","name":"response_for_request","children":[],"call":["stub response "," requested put "," requested "," stub_for "," request_stub_for "," evaluate_response_for_request "," stub_for  response "," request_stub_for  response ","  stub_for _for ","  request_stub_for _for "," request_ stub_for _for "," request_ request_stub_for _for "]}," WebMock RequestRegistry registered_request?":{"type":"method","name":"registered_request?","children":[],"call":[" stub_for "," request_stub_for "]}," WebMock RequestRegistry register_request_stub":{"type":"method","name":"register_request_stub","children":[],"call":[" request_stubs insert "," request_stubs "]}," WebMock RequestRegistry reset_webmock":{"type":"method","name":"reset_webmock","children":[],"call":[" requested= ","HashCounter  new "," request_stubs= "," requested_signatures= ","Util HashCounter  new "]}," WebMock RequestRegistry initialize":{"type":"method","name":"initialize","children":[],"call":[" reset_webmock "," reset! "]}," WebMock RequestProfile match_method":{"type":"method","name":"match_method","children":[],"call":["other method == ","other method "," method "]}," WebMock RequestProfile match_body":{"type":"method","name":"match_body","children":[],"call":["other body nil? ","other body ","other body == "," body "]}," WebMock RequestProfile match_headers":{"type":"method","name":"match_headers","children":[],"call":["value == "," headers [] "," headers "," headers has_key? ","other headers each ","other headers ","other headers empty? ! ","other headers empty? "," headers empty? ! "," headers empty? "]}," WebMock RequestProfile match_url":{"type":"method","name":"match_url","children":[],"call":["u match ","other uri ","@uris_to_check any? ","other uri is_a? ","@uris_to_check include? ","other uri to_s ","WebMock URL  variations_of_uri_as_strings "," uri "," raise "," uri is_a? "]}," WebMock RequestProfile to_s":{"type":"method","name":"to_s","children":[],"call":["string << ","WebMock Utility  normalize_headers inspect gsub ","WebMock Utility  normalize_headers inspect ","WebMock Utility  normalize_headers "," headers "," headers empty? ! "," headers empty? "," body "," uri "," method to_s upcase "," method to_s "," method ","WebMock Util Headers  normalize_headers inspect gsub ","WebMock Util Headers  normalize_headers inspect ","WebMock Util Headers  normalize_headers ","WebMock Util URI  strip_default_port_from_uri_string "," uri to_s "]}," WebMock RequestProfile match":{"type":"method","name":"match","children":[],"call":[" match_url "," match_headers "," match_body "," match_method "]}," WebMock RequestProfile with":{"type":"method","name":"with","children":[],"call":[" headers= ","Utility  normalize_headers ","options [] ","options has_key? "," body= ","WebMock Util Headers  normalize_headers "," assign_options "]}," WebMock RequestProfile initialize":{"type":"method","name":"initialize","children":[],"call":[" headers= ","Utility  normalize_headers "," headers "," uri= ","WebMock URL  normalize_uri "," uri "," uri is_a? ","WebMock Util Headers  normalize_headers ","WebMock Util URI  normalize_uri "]}," WebMock RequestExecutionVerifier failure_message":{"type":"method","name":"failure_message","children":[],"call":[" times_executed == "," times_executed "," expected_times_executed == "," expected_times_executed "," request_profile to_s "," request_profile ","expected_times_executed == "," request_pattern to_s "," request_pattern ","text << "," class executed_requests_message "," class "," times "," failure_message_phrase "]}," WebMock RequestExecutionVerifier verify":{"type":"method","name":"verify","children":[],"call":["@times_executed == ","RequestRegistry  instance times_executed ","RequestRegistry  instance ","RequestRegistry  instance times_executed  == "]}," WebMock RequestExecutionVerifier initialize":{"type":"method","name":"initialize","children":[],"call":[]}," Net HTTP build_net_http_response":{"type":"method","name":"build_net_http_response","children":[],"call":[" block_given? ","webmock_response raise_error_if_any ","response extend ","response instance_variable_set ","response []= ","webmock_response headers to_a each ","webmock_response headers to_a ","webmock_response headers ","webmock_response body ","Net HTTPResponse  send new ","webmock_response status to_s ","webmock_response status ","Net HTTPResponse  send "," raise ","webmock_response should_timeout ","webmock_response status [] ","webmock_response status [] to_s ","response add_field ","values each ","values is_a? ","webmock_Net HTTPResponse  send new  raise_error_if_any ","Net HTTPResponse  send new  extend ","Net HTTPResponse  send new  instance_variable_set ","Net HTTPResponse  send new  []= ","webmock_Net HTTPResponse  send new  headers to_a each ","webmock_Net HTTPResponse  send new  headers to_a ","webmock_Net HTTPResponse  send new  headers ","webmock_Net HTTPResponse  send new  body ","webmock_Net HTTPResponse  send new  status to_s ","webmock_Net HTTPResponse  send new  status ","webmock_Net HTTPResponse  send new  should_timeout ","webmock_Net HTTPResponse  send new  status [] ","webmock_Net HTTPResponse  send new  status [] to_s ","Net HTTPResponse  send new  add_field "]}," Net HTTP connect_with_webmock":{"type":"method","name":"connect_with_webmock","children":[],"call":["WebMock Utility  puts_warning_for_net_http_replacement_libs_if_needed ","WebMock NetHTTPUtility  puts_warning_for_net_http_replacement_libs_if_needed ","WebMock NetHTTPUtility  puts_warning_for_right_http_if_needed "," connect_without_webmock ","WebMock Config  instance net_http_connect_on_start ","WebMock Config  instance "]}," Net HTTP request_with_webmock":{"type":"method","name":"request_with_webmock","children":[],"call":[" raise ","message << ","WebMock Utility  normalize_headers inspect gsub ","WebMock Utility  normalize_headers inspect ","WebMock Utility  normalize_headers ","headers empty? ! ","headers empty? ","request method ","WebMock Utility  strip_default_port_from_uri "," request_without_webmock "," connect_without_webmock ","WebMock RequestRegistry  instance requested put ","WebMock RequestRegistry  instance requested ","WebMock RequestRegistry  instance ","WebMock  net_connect_allowed? "," build_net_http_response ","WebMock  response_for_request ","Net HTTP  socket_type new ","Net HTTP  socket_type ","WebMock  registered_request? ","WebMock RequestProfile  new ","k =~ ","headers reject! ","Hash  [] ","(send\n  (send\n    (lvar :request) :to_hash) :map) flatten ","v flatten ","request to_hash map ","request to_hash ","request method downcase to_sym ","request method downcase "," port "," address ","WebMock Utility  encode_unsafe_chars_in_userinfo + ","WebMock Utility  encode_unsafe_chars_in_userinfo ","WebMock Utility  decode_userinfo_from_header ","request [] ","request [] =~ ","URI  parse request_uri ","URI  parse ","request path ","request path =~ "," use_ssl? ","WebMock RequestRegistry  instance requested_signatures put ","WebMock RequestRegistry  instance requested_signatures ","WebMock RequestSignature  new ","WebMock Util URI  encode_unsafe_chars_in_userinfo + ","WebMock Util URI  encode_unsafe_chars_in_userinfo ","WebMock Util Headers  decode_userinfo_from_header ","Addressable URI  heuristic_parse request_uri ","Addressable URI  heuristic_parse "," assertion_failure ","v =~ ","WebMock  assertion_failure ","request body ","request set_body_internal "," remove_default_net_http_headers! ","body read ","body respond_to? ","body != ","request body_stream= ","request body_stream read ","request body_stream ","WebMock NetConnectNotAllowedError  new ","request_signature uri ","WebMock NetHTTPUtility  request_signature_from_request "," block_given? ","response extend ","WebMock CallbackRegistry  invoke_callbacks "," build_webmock_response "," started? ","WebMock CallbackRegistry  any_callbacks? ","WebMock RequestRegistry  instance response_for_request ","WebMock RequestRegistry  instance registered_request? ","WebMock StubRegistry  instance response_for_request ","WebMock StubRegistry  instance ","WebMock StubRegistry  instance registered_request? ","WebMock Utility  normalize_Hash  []  inspect gsub ","WebMock Utility  normalize_Hash  []  inspect ","WebMock Utility  normalize_Hash  []  ","Hash  []  empty? ! ","Hash  []  empty? ","request request method downcase to_sym  ","WebMock Utility  strip_default_port_from_WebMock Utility  strip_default_port_from_uri  "," build_net_http_ request_without_webmock  ","WebMock   request_without_webmock _for_request ","Hash  []  reject! ","request request method downcase to_sym  downcase to_sym ","request request method downcase to_sym  downcase ","WebMock Utility  encode_unsafe_chars_in_WebMock Utility  encode_unsafe_chars_in_userinfo +  + ","WebMock Utility  encode_unsafe_chars_in_WebMock Utility  decode_userinfo_from_header  + ","WebMock Utility  encode_unsafe_chars_in_WebMock Util URI  encode_unsafe_chars_in_userinfo +  + ","WebMock Utility  encode_unsafe_chars_in_WebMock Util Headers  decode_userinfo_from_header  + ","WebMock Utility  encode_unsafe_chars_in_WebMock Utility  encode_unsafe_chars_in_userinfo +  ","WebMock Utility  encode_unsafe_chars_in_WebMock Utility  decode_userinfo_from_header  ","WebMock Utility  encode_unsafe_chars_in_WebMock Util URI  encode_unsafe_chars_in_userinfo +  ","WebMock Utility  encode_unsafe_chars_in_WebMock Util Headers  decode_userinfo_from_header  ","WebMock Utility  decode_WebMock Utility  encode_unsafe_chars_in_userinfo + _from_header ","WebMock Utility  decode_WebMock Utility  decode_userinfo_from_header _from_header ","WebMock Utility  decode_WebMock Util URI  encode_unsafe_chars_in_userinfo + _from_header ","WebMock Utility  decode_WebMock Util Headers  decode_userinfo_from_header _from_header ","URI  parse request_WebMock Utility  strip_default_port_from_uri  ","request URI  parse request_uri  ","request request path  ","request Addressable URI  heuristic_parse request_uri  ","request URI  parse request_uri  =~ ","request request path  =~ ","request Addressable URI  heuristic_parse request_uri  =~ ","WebMock Util URI  encode_unsafe_chars_in_WebMock Utility  encode_unsafe_chars_in_userinfo +  + ","WebMock Util URI  encode_unsafe_chars_in_WebMock Utility  decode_userinfo_from_header  + ","WebMock Util URI  encode_unsafe_chars_in_WebMock Util URI  encode_unsafe_chars_in_userinfo +  + ","WebMock Util URI  encode_unsafe_chars_in_WebMock Util Headers  decode_userinfo_from_header  + ","WebMock Util URI  encode_unsafe_chars_in_WebMock Utility  encode_unsafe_chars_in_userinfo +  ","WebMock Util URI  encode_unsafe_chars_in_WebMock Utility  decode_userinfo_from_header  ","WebMock Util URI  encode_unsafe_chars_in_WebMock Util URI  encode_unsafe_chars_in_userinfo +  ","WebMock Util URI  encode_unsafe_chars_in_WebMock Util Headers  decode_userinfo_from_header  ","WebMock Util Headers  decode_WebMock Utility  encode_unsafe_chars_in_userinfo + _from_header ","WebMock Util Headers  decode_WebMock Utility  decode_userinfo_from_header _from_header ","WebMock Util Headers  decode_WebMock Util URI  encode_unsafe_chars_in_userinfo + _from_header ","WebMock Util Headers  decode_WebMock Util Headers  decode_userinfo_from_header _from_header ","Addressable URI  heWebMock Utility  strip_default_port_from_uri stic_parse request_WebMock Utility  strip_default_port_from_uri  ","Addressable URI  heWebMock Utility  strip_default_port_from_uri stic_parse ","request request body_stream read  ","request set_request body_stream read _internal "," remove_default_net_http_Hash  [] ! ","request body_stream read  read ","request body_stream read  respond_to? ","request body_stream read  != ","request request body_stream read _stream= ","request request body_stream read _stream read ","request request body_stream read _stream ","request_signature WebMock Utility  strip_default_port_from_uri  ","WebMock RequestSignature  new  uri ","WebMock NetHTTPUtility  request_signature_from_request  uri ","WebMock NetHTTPUtility  WebMock RequestSignature  new _from_request ","WebMock NetHTTPUtility  WebMock NetHTTPUtility  request_signature_from_request _from_request "," request_without_webmock  extend "," build_WebMock  response_for_request  "," build_ build_webmock_response  "," build_WebMock RequestRegistry  instance response_for_request  "," build_WebMock StubRegistry  instance response_for_request  "," build_webmock_ request_without_webmock  ","WebMock RequestRegistry  instance  request_without_webmock _for_request ","WebMock StubRegistry  instance  request_without_webmock _for_request "]}," Net HTTP socket_type_with_webmock":{"type":"method","name":"socket_type_with_webmock","children":[],"call":[]}," Net BufferedIO initialize_with_webmock":{"type":"method","name":"initialize_with_webmock","children":[],"call":[" raise ","StringIO  new ","File  open ","File  directory? ! ","File  directory? ","File  exists? ","io include? ! ","io include? "]}," StubResponse read_body":{"type":"method","name":"read_body","children":[],"call":[" block_given? "]}," StubSocket readuntil":{"type":"method","name":"readuntil","children":[],"call":[]}," StubSocket closed?":{"type":"method","name":"closed?","children":[],"call":[]}," StubSocket initialize":{"type":"method","name":"initialize","children":[],"call":[]}," TestCase teardown":{"type":"method","name":"teardown","children":[],"call":["WebMock  disable_net_connect! ","WebMock  allow_net_connect! "]}," TestCase setup":{"type":"method","name":"setup","children":[],"call":["WebMock  disable_net_connect! ","WebMock  net_connect_allowed? "," reset_webmock ","WebMock  reset_webmock "]}," WebMock WebMockMatcher negative_failure_message":{"type":"method","name":"negative_failure_message","children":[],"call":["@request_execution_verifier negative_failure_message "]}," WebMock WebMockMatcher failure_message":{"type":"method","name":"failure_message","children":[],"call":["@request_execution_verifier failure_message "]}," WebMock WebMockMatcher matches?":{"type":"method","name":"matches?","children":[],"call":["@request_execution_verifier verify ","@request_execution_verifier matches? "]}," WebMock WebMockMatcher times":{"type":"method","name":"times","children":[],"call":["@request_execution_verifier expected_times_executed= ","times to_i "]}," WebMock WebMockMatcher with":{"type":"method","name":"with","children":[],"call":["@request_execution_verifier request_profile headers= ","options [] ","@request_execution_verifier request_profile ","options has_key? ","@request_execution_verifier request_profile body= ","@request_execution_verifier request_profile with ","@request_execution_verifier request_pattern with ","@request_execution_verifier request_pattern "]}," WebMock WebMockMatcher twice":{"type":"method","name":"twice","children":[],"call":["@request_execution_verifier expected_times_executed= "]}," WebMock WebMockMatcher once":{"type":"method","name":"once","children":[],"call":["@request_execution_verifier expected_times_executed= "]}," WebMock WebMockMatcher initialize":{"type":"method","name":"initialize","children":[],"call":["@request_execution_verifier request_profile= ","RequestProfile  new ","RequestExecutionVerifier  new ","@request_execution_verifier request_pattern= ","RequestPattern  new ","RequestExecutionVerifier  new  request_profile= ","RequestExecutionVerifier  new  request_pattern= "]}," WebMock RequestProfileMatcher negative_failure_message":{"type":"method","name":"negative_failure_message","children":[],"call":["@request_execution_verifier negative_failure_message "]}," WebMock RequestProfileMatcher failure_message":{"type":"method","name":"failure_message","children":[],"call":["@request_execution_verifier failure_message "]}," WebMock RequestProfileMatcher matches?":{"type":"method","name":"matches?","children":[],"call":["@request_execution_verifier verify ","@request_execution_verifier request_profile= ","@request_execution_verifier matches? "]}," WebMock RequestProfileMatcher times":{"type":"method","name":"times","children":[],"call":["@request_execution_verifier expected_times_executed= ","times to_i "]}," WebMock RequestProfileMatcher twice":{"type":"method","name":"twice","children":[],"call":["@request_execution_verifier expected_times_executed= "]}," WebMock RequestProfileMatcher once":{"type":"method","name":"once","children":[],"call":["@request_execution_verifier expected_times_executed= "]}," WebMock RequestProfileMatcher initialize":{"type":"method","name":"initialize","children":[],"call":["RequestExecutionVerifier  new "]}," WebMock Matchers have_not_requested":{"type":"method","name":"have_not_requested","children":[],"call":["WebMock WebMockMatcher  new times ","WebMock WebMockMatcher  new "]}," WebMock Matchers have_requested":{"type":"method","name":"have_requested","children":[],"call":["WebMock WebMockMatcher  new "]}," WebMock Matchers have_not_been_made":{"type":"method","name":"have_not_been_made","children":[],"call":["WebMock RequestProfileMatcher  new times ","WebMock RequestProfileMatcher  new ","WebMock RequestPatternMatcher  new times ","WebMock RequestPatternMatcher  new "]}," WebMock Matchers have_been_made":{"type":"method","name":"have_been_made","children":[],"call":["WebMock RequestProfileMatcher  new ","WebMock RequestPatternMatcher  new "]}," WebMock RequestExecutionVerifier negative_failure_message":{"type":"method","name":"negative_failure_message","children":[],"call":[" times_executed == "," times_executed "," request_profile to_s "," request_profile "," expected_times_executed == "," expected_times_executed "," request_pattern to_s "," request_pattern ","text << "," class executed_requests_message "," class "," times "]}," WebMock RequestExecutionVerifier does_not_match?":{"type":"method","name":"does_not_match?","children":[],"call":["@times_executed == ","@times_executed != ","RequestRegistry  instance times_executed ","RequestRegistry  instance ","RequestRegistry  instance times_executed  == ","RequestRegistry  instance times_executed  != "]}," WebMock RequestExecutionVerifier matches?":{"type":"method","name":"matches?","children":[],"call":["@times_executed == ","RequestRegistry  instance times_executed ","RequestRegistry  instance ","@times_executed <= ","@times_executed >= ","RequestRegistry  instance times_executed  == ","RequestRegistry  instance times_executed  <= ","RequestRegistry  instance times_executed  >= "]}," WebMock WebMockMatcher does_not_match?":{"type":"method","name":"does_not_match?","children":[],"call":["@request_execution_verifier does_not_match? "]}," WebMock RequestProfileMatcher does_not_match?":{"type":"method","name":"does_not_match?","children":[],"call":["@request_execution_verifier does_not_match? ","@request_execution_verifier request_profile= "]}," WebMock Util URI uris_with_trailing_slash_and_without":{"type":"method","name":"uris_with_trailing_slash_and_without","children":[],"call":[]}," WebMock Util URI uris_with_scheme_and_without":{"type":"method","name":"uris_with_scheme_and_without","children":[],"call":[]}," WebMock Util URI uris_encoded_and_unencoded":{"type":"method","name":"uris_encoded_and_unencoded","children":[],"call":[]}," WebMock Util URI uris_with_inferred_port_and_without":{"type":"method","name":"uris_with_inferred_port_and_without","children":[],"call":[]}," WebMock Util URI encode_unsafe_chars_in_userinfo":{"type":"method","name":"encode_unsafe_chars_in_userinfo","children":[],"call":[]}," WebMock Util URI strip_default_port_from_uri_string":{"type":"method","name":"strip_default_port_from_uri_string","children":[],"call":[]}," WebMock Util URI variations_of_uri_as_strings":{"type":"method","name":"variations_of_uri_as_strings","children":[],"call":[]}," WebMock Util URI normalize_uri":{"type":"method","name":"normalize_uri","children":[],"call":[]}," WebMock Util Headers decode_userinfo_from_header":{"type":"method","name":"decode_userinfo_from_header","children":[],"call":[]}," WebMock Util Headers normalize_headers":{"type":"method","name":"normalize_headers","children":[],"call":[]}," WebMock Util HashCounter get":{"type":"method","name":"get","children":[],"call":[" hash [] "," hash ","@lock synchronize "]}," WebMock Util HashCounter put":{"type":"method","name":"put","children":[],"call":[" hash []= ","(or\n  (send\n    (send nil :hash) :[]\n    (lvar :key))\n  (int 0)) + "," hash [] "," hash ","@order []= ","@max + ","@lock synchronize ","@max +  + "]}," WebMock Util HashCounter initialize":{"type":"method","name":"initialize","children":[],"call":[" hash= "," Mutex  new ","Mutex  new ","Hash  new "]}," WebMock RequestSignature match_method":{"type":"method","name":"match_method","children":[],"call":["request_profile method == ","request_profile method "," method "]}," WebMock RequestSignature match_body":{"type":"method","name":"match_body","children":[],"call":["request_profile body nil? ","request_profile body ","request_profile body == "," body "]}," WebMock RequestSignature match_headers":{"type":"method","name":"match_headers","children":[],"call":["value == "," headers [] "," headers "," headers has_key? ","request_profile headers each ","request_profile headers ","request_profile headers empty? ! ","request_profile headers empty? "," headers empty? ! "," headers empty? ","value === "]}," WebMock RequestSignature match_uri":{"type":"method","name":"match_uri","children":[],"call":["u match ","request_profile uri ","WebMock Util URI  variations_of_uri_as_strings any? ","WebMock Util URI  variations_of_uri_as_strings "," uri ","request_profile uri is_a? ","WebMock Util URI  normalize_uri === ","WebMock Util URI  normalize_uri "]}," WebMock RequestSignature match":{"type":"method","name":"match","children":[],"call":[" match_uri "," match_headers "," match_body "," match_method "," raise ","request_profile is_a? "," match_with_block "]}," WebMock RequestRegistry request_stub_for":{"type":"method","name":"request_stub_for","children":[],"call":["request_signature match ","registered_request_stub request_profile "," request_stubs detect "," request_stubs ","registered_request_stub request_pattern matches? ","registered_request_stub request_pattern "]}," WebMock NetHTTPUtility puts_warning_for_net_http_replacement_libs_if_needed":{"type":"method","name":"puts_warning_for_net_http_replacement_libs_if_needed","children":[],"call":[]}," WebMock NetHTTPUtility record_loaded_net_http_replacement_libs":{"type":"method","name":"record_loaded_net_http_replacement_libs","children":[],"call":[]}," WebMock NetHTTPUtility puts_warning_for_net_http_around_advice_libs_if_needed":{"type":"method","name":"puts_warning_for_net_http_around_advice_libs_if_needed","children":[],"call":[]}," WebMock Response ==":{"type":"method","name":"==","children":[],"call":[" options == ","other options "," options "," should_timeout == ","other should_timeout "," should_timeout "," exception == ","other exception "," exception "," status == ","other status "," status "," headers === ","other headers "," headers "," body == ","other body "," body "]}," WebMock Response dup":{"type":"method","name":"dup","children":[],"call":["dup_response options= "," options dup "," options "," stringify_body! "]}," WebMock RequestRegistry evaluate_response_for_request":{"type":"method","name":"evaluate_response_for_request","children":[],"call":["evaluated_response options []= ","response options [] call ","response options [] ","response options ","evaluated_response options ","response options [] is_a? ","(sym :body) each ","response dup ","evaluated_response evaluate! ","response evaluate ","response dup  options []= ","response dup  options ","response dup  evaluate! "]}," WebMock RequestProfile Body to_s":{"type":"method","name":"to_s","children":[],"call":[]}," WebMock RequestProfile Body is_empty?":{"type":"method","name":"is_empty?","children":[],"call":["@data == ","@data nil? "]}," WebMock RequestProfile Body ==":{"type":"method","name":"==","children":[],"call":["other data == "," data ","other data "," is_empty? ","other is_empty? ","other is_a? ","Body  new "," data === ","Body  new  data == ","Body  new  data ","Body  new  is_empty? ","Body  new  is_a? "]}," WebMock RequestProfile Body initialize":{"type":"method","name":"initialize","children":[],"call":[]}," WebMock RequestProfile body=":{"type":"method","name":"body=","children":[],"call":["Body  new "]}," WebMock Request assign_options":{"type":"method","name":"assign_options","children":[],"call":[" headers= ","WebMock Util Headers  normalize_headers ","options [] ","options has_key? "," body= "]}," WebMock Request to_s":{"type":"method","name":"to_s","children":[],"call":["string << ","WebMock Util Headers  normalize_headers inspect gsub ","WebMock Util Headers  normalize_headers inspect ","WebMock Util Headers  normalize_headers "," headers "," headers empty? ! "," headers empty? "," body to_s "," body "," body to_s != ","WebMock Util URI  strip_default_port_from_uri_string "," uri to_s "," uri "," method to_s upcase "," method to_s "," method "]}," WebMock Request initialize":{"type":"method","name":"initialize","children":[],"call":[" assign_options "," uri= ","WebMock Util URI  normalize_uri ","uri is_a? "," method= "]}," build_request_signature":{"type":"method","name":"build_request_signature","children":[],"call":["WebMock RequestSignature  new ","req body content ","req body ","uri to_s ","req header request_method downcase to_sym ","req header request_method downcase ","req header request_method ","req header ","uri userinfo= ","v =~ ","k =~ ","headers reject! ","WebMock Util URI  encode_unsafe_chars_in_userinfo ","WebMock Util Headers  decode_userinfo_from_header ","auth scheme == ","auth scheme ","auth get ","Hash  [] ","req header all ","auth challenge ","req header request_uri "," www_auth basic_auth "," www_auth ","uri omit ","uri port= ","req header request_uri port ","uri query_values= ","req header request_query ","Addressable URI  heuristic_parse ","req header request_uri to_s ","req header all flatten ","headers [] << ","header [] ","headers [] ","req header all inject "," previous_signature_for ","req content ","hdrs [] << ","hdrs [] ","filter filter_request ","@request_filter each ","uri query= ","WebMock Util QueryMapper  values_to_query ","WebMock Util URI  heuristic_parse ","req http_body dump ","req http_body "," headers_from_session merge "," headers_from_session ","WebMock Config  instance query_values_notation ","WebMock Config  instance "," userinfo_from_auth_cred "," remove_authorization_header "," auth_cred_from_headers "," auth_cred_from_www_auth ","uri omit  to_s ","Addressable URI  heuristic_parse  to_s ","WebMock Util URI  heuristic_parse  to_s ","uri WebMock Util URI  encode_unsafe_chars_in_userinfo = ","uri WebMock Util Headers  decode_userinfo_from_header = ","uri omit  userinfo= ","Addressable URI  heuristic_parse  userinfo= ","WebMock Util URI  heuristic_parse  userinfo= ","Hash  []  reject! "," headers_from_session merge  reject! ","WebMock Util URI  encode_unsafe_chars_in_WebMock Util URI  encode_unsafe_chars_in_userinfo  ","WebMock Util URI  encode_unsafe_chars_in_WebMock Util Headers  decode_userinfo_from_header  ","WebMock Util Headers  decode_WebMock Util URI  encode_unsafe_chars_in_userinfo _from_header ","WebMock Util Headers  decode_WebMock Util Headers  decode_userinfo_from_header _from_header "," www_auth basic_auth  scheme == "," www_auth basic_auth  scheme "," www_auth basic_auth  get "," www_auth basic_auth  challenge ","req header request_uri omit  ","req header request_Addressable URI  heuristic_parse  ","req header request_WebMock Util URI  heuristic_parse  "," www_ www_auth basic_auth  basic_ www_auth basic_auth  "," www_ www_auth basic_auth  ","uri omit  omit ","Addressable URI  heuristic_parse  omit ","WebMock Util URI  heuristic_parse  omit ","uri omit  port= ","Addressable URI  heuristic_parse  port= ","WebMock Util URI  heuristic_parse  port= ","req header request_uri omit  port ","req header request_Addressable URI  heuristic_parse  port ","req header request_WebMock Util URI  heuristic_parse  port ","uri omit  query_values= ","Addressable URI  heuristic_parse  query_values= ","WebMock Util URI  heuristic_parse  query_values= ","Addressable URI  heuri omit stic_parse ","Addressable URI  heAddressable URI  heuristic_parse stic_parse ","Addressable URI  heWebMock Util URI  heuristic_parse stic_parse ","req header request_uri omit  to_s ","req header request_Addressable URI  heuristic_parse  to_s ","req header request_WebMock Util URI  heuristic_parse  to_s ","Hash  []  [] << "," headers_from_session merge  [] << ","Hash  []  [] "," headers_from_session merge  [] ","  previous_signature_for _for "," previous_WebMock RequestSignature  new _for ","uri omit  query= ","Addressable URI  heuristic_parse  query= ","WebMock Util URI  heuristic_parse  query= ","WebMock Util URI  heuri omit stic_parse ","WebMock Util URI  heAddressable URI  heuristic_parse stic_parse ","WebMock Util URI  heWebMock Util URI  heuristic_parse stic_parse "," Hash  [] _from_session merge ","  headers_from_session merge _from_session merge "," Hash  [] _from_session ","  headers_from_session merge _from_session "," WebMock Util URI  encode_unsafe_chars_in_userinfo _from_auth_cred "," WebMock Util Headers  decode_userinfo_from_header _from_auth_cred "," userinfo_from_auth get  "," userinfo_from_ www_auth basic_auth _cred "," remove_ www_auth basic_auth orization_header "," auth get _from_headers "," auth_cred_from_Hash  []  "," auth_cred_from_ headers_from_session merge  ","  www_auth basic_auth _cred_from_headers "," auth get _from_www_auth ","  www_auth basic_auth _cred_from_www_ www_auth basic_auth  "]}," HTTPClient build_httpclient_response":{"type":"method","name":"build_httpclient_response","children":[],"call":["block call ","webmock_response raise_error_if_any ","response header set ","response header ","webmock_response headers to_a each ","webmock_response headers to_a ","webmock_response headers ","response header init_response ","webmock_response status ","HTTP Message  new_response ","webmock_response body ","StringIO  new "," raise ","webmock_response should_timeout ","response reason= ","webmock_response status [] ","webmock_HTTP Message  new_response  raise_error_if_any ","HTTP Message  new_response  header set ","HTTP Message  new_response  header ","webmock_HTTP Message  new_response  headers to_a each ","webmock_HTTP Message  new_response  headers to_a ","webmock_HTTP Message  new_response  headers ","HTTP Message  new_response  header init_HTTP Message  new_response  ","webmock_HTTP Message  new_response  status ","HTTP Message  new_HTTP Message  new_response  ","webmock_HTTP Message  new_response  body ","webmock_response webmock_response body  ","webmock_response StringIO  new  ","webmock_HTTP Message  new_response  should_timeout ","HTTP Message  new_response  reason= ","webmock_HTTP Message  new_response  status [] "]}," HTTPClient do_request_async_with_webmock":{"type":"method","name":"do_request_async_with_webmock","children":[],"call":[" assertion_failure "," do_request_async_without_webmock ","WebMock  net_connect_allowed? ","WebMock  registered_request? "," build_request_signature "," create_request ","WebMock  assertion_failure "," raise ","NetConnectNotAllowedError  new ","request_signature uri ","WebMock NetConnectNotAllowedError  new ","WebMock RequestRegistry  instance registered_request? ","WebMock RequestRegistry  instance ","WebMock StubRegistry  instance registered_request? ","WebMock StubRegistry  instance "," do_ create_request uest_async_without_webmock ","WebMock  registered_ create_request uest? "," build_ build_request_signature  "," build_ create_request uest_signature "," create_ create_request uest "," build_request_signature  uri "," create_request uest_signature uri ","WebMock RequestRegistry  instance registered_ create_request uest? ","WebMock StubRegistry  instance registered_ create_request uest? "]}," HTTPClient do_get_with_webmock":{"type":"method","name":"do_get_with_webmock","children":[],"call":[" assertion_failure "," do_get_block_without_webmock "," do_get_stream_without_webmock ","WebMock  net_connect_allowed? ","conn push "," build_httpclient_response ","WebMock  response_for_request ","WebMock  registered_request? ","WebMock RequestRegistry  instance requested_signatures put ","WebMock RequestRegistry  instance requested_signatures ","WebMock RequestRegistry  instance "," build_request_signature ","WebMock  assertion_failure ","req header request_uri ","req header "," raise ","NetConnectNotAllowedError  new ","request_signature uri ","WebMock NetConnectNotAllowedError  new ","WebMock CallbackRegistry  invoke_callbacks "," build_webmock_response ","WebMock CallbackRegistry  any_callbacks? ","conn pop ","WebMock RequestRegistry  instance response_for_request ","WebMock RequestRegistry  instance registered_request? ","WebMock StubRegistry  instance response_for_request ","WebMock StubRegistry  instance ","WebMock StubRegistry  instance registered_request? "," build_httpclient_ build_httpclient_response  "," build_httpclient_conn pop ponse "," build_httpclient_ do_get_block_without_webmock ponse "," build_httpclient_ do_get_stream_without_webmock ponse "," build_httpclient_conn push ponse ","WebMock   build_httpclient_response _for_request ","WebMock  conn pop ponse_for_request ","WebMock   do_get_block_without_webmock ponse_for_request ","WebMock   do_get_stream_without_webmock ponse_for_request ","WebMock  conn push ponse_for_request ","WebMock RequestRegistry  instance requested_signatuconn pop  put ","WebMock RequestRegistry  instance requested_signatu do_get_block_without_webmock  put ","WebMock RequestRegistry  instance requested_signatu do_get_stream_without_webmock  put ","WebMock RequestRegistry  instance requested_signatuconn push  put ","WebMock RequestRegistry  instance requested_signatuconn pop  ","WebMock RequestRegistry  instance requested_signatu do_get_block_without_webmock  ","WebMock RequestRegistry  instance requested_signatu do_get_stream_without_webmock  ","WebMock RequestRegistry  instance requested_signatuconn push  "," build_ build_request_signature  "," build_request_signature  uri "," build_webmock_ build_httpclient_response  "," build_WebMock  response_for_request  "," build_ build_webmock_response  "," build_WebMock RequestRegistry  instance response_for_request  "," build_WebMock StubRegistry  instance response_for_request  "," build_webmock_conn pop ponse "," build_webmock_ do_get_block_without_webmock ponse "," build_webmock_ do_get_stream_without_webmock ponse "," build_webmock_conn push ponse ","WebMock RequestRegistry  instance  build_httpclient_response _for_request ","WebMock RequestRegistry  instance conn pop ponse_for_request ","WebMock RequestRegistry  instance  do_get_block_without_webmock ponse_for_request ","WebMock RequestRegistry  instance  do_get_stream_without_webmock ponse_for_request ","WebMock RequestRegistry  instance conn push ponse_for_request ","WebMock StubRegistry  instance  build_httpclient_response _for_request ","WebMock StubRegistry  instance conn pop ponse_for_request ","WebMock StubRegistry  instance  do_get_block_without_webmock ponse_for_request ","WebMock StubRegistry  instance  do_get_stream_without_webmock ponse_for_request ","WebMock StubRegistry  instance conn push ponse_for_request "]}," HTTPClient do_get_stream_with_webmock":{"type":"method","name":"do_get_stream_with_webmock","children":[],"call":[" do_get_with_webmock "]}," HTTPClient do_get_block_with_webmock":{"type":"method","name":"do_get_block_with_webmock","children":[],"call":[" do_get_with_webmock "]}," WebMock Response stringify_body!":{"type":"method","name":"stringify_body!","children":[],"call":["@options []= ","@options [] read ","@options [] ","@options [] is_a? ","io close ","io read ","@body is_a? ","io respond_to? ","@opt@options [] ns []= ","@opt@options [] ns [] read ","@opt@options [] ns [] ","@opt@options [] ns [] is_a? ","@options []  close ","@options []  read ","io read  is_a? ","@options []  respond_to? "]}," Net HTTP remove_default_net_http_headers!":{"type":"method","name":"remove_default_net_http_headers!","children":[],"call":["default_request [] == ","default_request [] ","headers reject! ","Hash  [] ","(send\n  (send\n    (lvar :default_request) :to_hash) :map) flatten ","v flatten ","default_request to_hash map ","default_request to_hash ","Net HTTPGenericRequest  new ","Net HTTPGenericRequest  new  [] == ","Net HTTPGenericRequest  new  [] ","(send\n  (send\n    (lvar :Net HTTPGenericRequest  new ) :to_hash) :map) flatten ","Net HTTPGenericRequest  new  to_hash map ","Net HTTPGenericRequest  new  to_hash "]}," WebMock Response options=":{"type":"method","name":"options=","children":[],"call":[" stringify_body! ","options [] "," body= "," status= "," headers= "," exception= ","HashValidator  new validate_keys ","HashValidator  new ","WebMock Util HashKeysStringifier  stringify_keys! ","WebMock Util HashKeysStringifier  stringify_keys!  [] "]}," WebMock ResponsesSequence increase_position":{"type":"method","name":"increase_position","children":[],"call":["@current_position == ","@responses length - ","@responses length "]}," WebMock ResponsesSequence next_response":{"type":"method","name":"next_response","children":[],"call":["@responses last "," increase_position ","@responses [] ","@times_to_repeat > ","@@responses [] s last ","@@responses [] s [] "]}," WebMock ResponsesSequence end?":{"type":"method","name":"end?","children":[],"call":["@times_to_repeat == "]}," WebMock ResponsesSequence initialize":{"type":"method","name":"initialize","children":[],"call":[]}," WebMock Response read_raw_response":{"type":"method","name":"read_raw_response","children":[],"call":["options []= ","response read_body ","options [] []= ","options [] ","response each_header ","response reading_body ","response delete ","Net HTTPResponse  read_new ","Net BufferedIO  new ","raw_response close ","raw_response read ","raw_response is_a? ","response code to_i ","response code ","response message "," Net HTTPResponse  read_new "," Net BufferedIO  new ","socket close ","Net HTTPResponse  read_new  read_body "," Net HTTPResponse  read_new  read_body ","Net HTTPResponse  read_new  each_header "," Net HTTPResponse  read_new  each_header ","Net HTTPResponse  read_new  reading_body "," Net HTTPResponse  read_new  reading_body ","Net HTTPResponse  read_new  delete "," Net HTTPResponse  read_new  delete ","raw_Net HTTPResponse  read_new  close ","raw_ Net HTTPResponse  read_new  close ","raw_Net HTTPResponse  read_new  read ","raw_ Net HTTPResponse  read_new  read ","raw_Net HTTPResponse  read_new  is_a? ","raw_ Net HTTPResponse  read_new  is_a? ","Net HTTPResponse  read_new  code to_i "," Net HTTPResponse  read_new  code to_i ","Net HTTPResponse  read_new  code "," Net HTTPResponse  read_new  code ","Net HTTPResponse  read_new  message "," Net HTTPResponse  read_new  message ","Net BufferedIO  new  close "," Net BufferedIO  new  close "]}," WebMock RequestStub times":{"type":"method","name":"times","children":[],"call":["number - ","@responses_sequences last times_to_repeat ","@responses_sequences last "," raise ","Invalid WebMock stub declaration. + ","@responses_sequences empty? ","number < ","number is_a? ! ","number is_a? "]}," WebMock RequestStub then":{"type":"method","name":"then","children":[],"call":[]}," WebMock RequestStub response":{"type":"method","name":"response","children":[],"call":["@responses_sequences [] next_response ","@responses_sequences [] ","@responses_sequences first next_response ","@responses_sequences first ","@responses_sequences shift ","@responses_sequences first end? ","@responses_sequences length > ","@responses_sequences length ","WebMock Response  new ","@responses_sequences empty? "]}," WebMock RequestSignature match_with_block":{"type":"method","name":"match_with_block","children":[],"call":["request_profile with_block call ","request_profile with_block "]}," WebMock Util Headers sorted_headers_string":{"type":"method","name":"sorted_headers_string","children":[],"call":[]}," WebMock DynamicResponse evaluate!":{"type":"method","name":"evaluate!","children":[],"call":[" options= ","@responder call "]}," WebMock DynamicResponse dup":{"type":"method","name":"dup","children":[],"call":[" class new "," class "]}," WebMock DynamicResponse initialize":{"type":"method","name":"initialize","children":[],"call":[]}," WebMock Response evaluate!":{"type":"method","name":"evaluate!","children":[],"call":["@exception call ","@exception is_a? ","@should_timeout call ","@should_timeout is_a? "," status= ","@status call ","@status is_a? "," headers= ","@headers call ","@headers is_a? "," body= ","@body call ","@body is_a? ","@exception call  call ","@exception call  is_a? ","@should_timeout call  call ","@should_timeout call  is_a? "]}," WebMock Response should_timeout":{"type":"method","name":"should_timeout","children":[],"call":["@should_timeout == "]}," WebMock Response exception":{"type":"method","name":"exception","children":[],"call":[]}," WebMock Response status=":{"type":"method","name":"status=","children":[],"call":["status is_a? "]}," WebMock Response body=":{"type":"method","name":"body=","children":[],"call":[" stringify_body! "," assert_valid_body! "]}," WebMock Response headers=":{"type":"method","name":"headers=","children":[],"call":["Util Headers  normalize_headers ","@headers is_a? ! ","@headers is_a? ","Util Headers  normalize_headers  is_a? ! ","Util Headers  normalize_headers  is_a? "]}," WebMock ResponseFactory response_for":{"type":"method","name":"response_for","children":[],"call":[]}," WebMock RequestStub to_timeout":{"type":"method","name":"to_timeout","children":[],"call":["@responses_sequences << ","ResponsesSequence  new ","ResponseFactory  response_for "]}," WebMock RequestSignature assign_options":{"type":"method","name":"assign_options","children":[],"call":[" headers= ","WebMock Util Headers  normalize_headers ","options [] ","options has_key? "," body= "]}," WebMock RequestSignature to_s":{"type":"method","name":"to_s","children":[],"call":["string << ","WebMock Util Headers  sorted_headers_string "," headers "," headers empty? ! "," headers empty? "," body to_s "," body "," body to_s != ","WebMock Util URI  strip_default_port_from_uri_string "," uri to_s "," uri "," method to_s upcase "," method to_s "," method ","(begin\n  (send\n    (send\n      (send\n        (self) :method) :to_s) :upcase)) dup ","(begin\n  (send\n    (send\n      (send\n        (self) :method) :to_s) :upcase)) dup  << ","WebMock Util Headers  sorted_headers_(begin\n  (send\n    (send\n      (send\n        (self) :method) :to_s) :upcase)) dup  ","WebMock Util URI  strip_default_port_from_uri_(begin\n  (send\n    (send\n      (send\n        (self) :method) :to_s) :upcase)) dup  "]}," WebMock RequestSignature initialize":{"type":"method","name":"initialize","children":[],"call":[" assign_options "," uri= ","WebMock Util URI  normalize_uri ","uri is_a? "," method= ","method to_sym "]}," WebMock HeadersPattern empty_headers?":{"type":"method","name":"empty_headers?","children":[],"call":["headers == ","headers nil? "]}," WebMock HeadersPattern to_s":{"type":"method","name":"to_s","children":[],"call":["WebMock Util Headers  sorted_headers_string "]}," WebMock HeadersPattern matches?":{"type":"method","name":"matches?","children":[],"call":["value === ","headers [] ","headers has_key? ","@pattern each "," empty_headers? "]}," WebMock HeadersPattern initialize":{"type":"method","name":"initialize","children":[],"call":["WebMock Util Headers  normalize_headers "]}," WebMock BodyPattern empty_string?":{"type":"method","name":"empty_string?","children":[],"call":["string == ","string nil? "]}," WebMock BodyPattern to_s":{"type":"method","name":"to_s","children":[],"call":["@pattern to_s ","@pattern inspect "]}," WebMock BodyPattern matches?":{"type":"method","name":"matches?","children":[],"call":["@pattern === ","@pattern == "," empty_string? "," body_as_hash ","(ivar :@pattern) is_a? "," matching_hashes? ","@pattern empty? "," assert_non_multipart_body ","Addressable URI  parse query_values == ","Addressable URI  parse query_values ","Addressable URI  parse ","? + ","Crack XML  parse == ","Crack XML  parse ","Crack JSON  parse == ","Crack JSON  parse ","BODY_FORMATS  [] ","WebMock Util JSON  parse "," matching_body_hashes? "," matching_body_array? "]}," WebMock BodyPattern initialize":{"type":"method","name":"initialize","children":[],"call":["WebMock Matchers HashIncludingMatcher  from_rspec_matcher "," rSpecHashIncludingMatcher? "," normalize_hash ","pattern is_a? ","(ivar :@pattern) is_a? ","(ivar : normalize_hash ) is_a? "]}," WebMock URIPattern to_s":{"type":"method","name":"to_s","children":[],"call":["WebMock Util URI  strip_default_port_from_uri_string ","@pattern to_s ","@query_params inspect ","@pattern inspect "," pattern_inspect ","WebMock Util URI  @pattern inspect ip_default_port_from_uri_@pattern inspect ing ","WebMock Util URI   pattern_inspect ip_default_port_from_uri_ pattern_inspect ing "]}," WebMock URIPattern matches?":{"type":"method","name":"matches?","children":[],"call":["u match ","WebMock Util URI  variations_of_uri_as_strings any? ","WebMock Util URI  variations_of_uri_as_strings ","@pattern is_a? ","WebMock Util URI  normalize_uri === ","WebMock Util URI  normalize_uri ","uri === "," query_params_matches? "," pattern_matches? "]}," WebMock URIPattern initialize":{"type":"method","name":"initialize","children":[],"call":["WebMock Util URI  normalize_uri ","pattern is_a? ","pattern respond_to? "]}," WebMock MethodPattern to_s":{"type":"method","name":"to_s","children":[],"call":["@pattern to_s "]}," WebMock MethodPattern matches?":{"type":"method","name":"matches?","children":[],"call":["@pattern == "]}," WebMock MethodPattern initialize":{"type":"method","name":"initialize","children":[],"call":[]}," WebMock RequestPattern assign_options":{"type":"method","name":"assign_options","children":[],"call":["HeadersPattern  new ","options [] ","options has_key? ","BodyPattern  new ","@uri_pattern add_query_params ","WebMock Util HashKeysStringifier  stringify_keys! ","HashValidator  new validate_keys ","HashValidator  new "," set_basic_auth_as_headers! ","WebMock Util HashKeysStringifier  stringify_keys!  [] ","WebMock Util HashKeysStringifier  stringify_keys!  has_key? "]}," WebMock RequestPattern to_s":{"type":"method","name":"to_s","children":[],"call":["string << ","@headers_pattern to_s ","@body_pattern to_s ","@uri_pattern to_s ","@method_pattern to_s upcase ","@method_pattern to_s ","(begin\n  (send\n    (send\n      (ivar :@method_pattern) :to_s) :upcase)) dup ","(begin\n  (send\n    (send\n      (ivar :@method_pattern) :to_s) :upcase)) dup  << "]}," WebMock RequestPattern matches?":{"type":"method","name":"matches?","children":[],"call":["@with_block call ","@with_block nil? ","@headers_pattern matches? ","request_signature headers ","@headers_pattern nil? ","@body_pattern matches? ","request_signature body ","@body_pattern nil? ","@uri_pattern matches? ","request_signature uri ","@method_pattern matches? ","request_signature method ","content_type split first ","content_type split ","request_signature headers [] ","content_type split first  split first ","request_signature headers []  split first ","content_type split first  split ","request_signature headers []  split "]}," WebMock RequestPattern with":{"type":"method","name":"with","children":[],"call":[" assign_options "," raise ","ArgumentError  new "," block_given? ! "," block_given? ","options empty? "]}," WebMock RequestPattern initialize":{"type":"method","name":"initialize","children":[],"call":[" assign_options ","URIPattern  new ","MethodPattern  new "," create_uri_pattern "]}," Patron Session build_patron_response":{"type":"method","name":"build_patron_response","children":[],"call":["res instance_variable_set ","webmock_response headers ","webmock_response status [] ","webmock_response status ","webmock_response body ","Patron Response  new ","webmock_response raise_error_if_any "," raise ","webmock_response should_timeout ","Patron Response  new  instance_variable_set ","webmock_Patron Response  new ponse headers ","webmock_Patron Response  new ponse status [] ","webmock_Patron Response  new ponse status ","webmock_Patron Response  new ponse body ","webmock_Patron Response  new ponse raise_error_if_any ","webmock_Patron Response  new ponse should_timeout "]}," Patron Session build_request_signature":{"type":"method","name":"build_request_signature","children":[],"call":["WebMock RequestSignature  new ","req headers ","uri to_s ","req action "," raise ","ArgumentError  new ","req upload_data ","File  read ","req file_name ","File  readable? ! ","File  readable? ","File  exist? ! ","File  exist? ","(sym :put) include? ","uri password= ","req password ","uri user= ","req username ","uri path= ","uri normalized_path gsub ","uri normalized_path ","Addressable URI  heuristic_parse ","req url ","WebMock Util URI  heuristic_parse ","Addressable URI  heuristic_parse  to_s ","WebMock Util URI  heuristic_parse  to_s ","Addressable URI  heuristic_parse  password= ","WebMock Util URI  heuristic_parse  password= ","Addressable URI  heuristic_parse  user= ","WebMock Util URI  heuristic_parse  user= ","Addressable URI  heuristic_parse  path= ","WebMock Util URI  heuristic_parse  path= ","Addressable URI  heuristic_parse  normalized_path gsub ","WebMock Util URI  heuristic_parse  normalized_path gsub ","Addressable URI  heuristic_parse  normalized_path ","WebMock Util URI  heuristic_parse  normalized_path ","Addressable URI  heAddressable URI  heuristic_parse stic_parse ","Addressable URI  heWebMock Util URI  heuristic_parse stic_parse ","WebMock Util URI  heAddressable URI  heuristic_parse stic_parse ","WebMock Util URI  heWebMock Util URI  heuristic_parse stic_parse "]}," Patron Session handle_file_name":{"type":"method","name":"handle_file_name","children":[],"call":[" raise ","ArgumentError  new ","f write ","webmock_response body ","File  open ","req file_name ","req action == ","req action "]}," Patron Session handle_request_with_webmock":{"type":"method","name":"handle_request_with_webmock","children":[],"call":["WebMock  assertion_failure "," handle_request_without_webmock ","WebMock  net_connect_allowed? ","req url "," build_patron_response "," handle_file_name ","WebMock  response_for_request ","WebMock  registered_request? ","WebMock RequestRegistry  instance requested_signatures put ","WebMock RequestRegistry  instance requested_signatures ","WebMock RequestRegistry  instance "," build_request_signature "," raise ","WebMock NetConnectNotAllowedError  new ","request_signature uri ","WebMock CallbackRegistry  invoke_callbacks "," build_webmock_response ","WebMock CallbackRegistry  any_callbacks? ","WebMock RequestRegistry  instance response_for_request ","WebMock RequestRegistry  instance registered_request? ","WebMock StubRegistry  instance response_for_request ","WebMock StubRegistry  instance ","WebMock StubRegistry  instance registered_request? "," build_patron_ handle_request_without_webmock ponse "," build_patron_ build_patron_response ponse ","WebMock   handle_request_without_webmock ponse_for_request ","WebMock   build_patron_response ponse_for_request ","WebMock RequestRegistry  instance requested_signatu handle_request_without_webmock  put ","WebMock RequestRegistry  instance requested_signatu build_patron_response  put ","WebMock RequestRegistry  instance requested_signatu handle_request_without_webmock  ","WebMock RequestRegistry  instance requested_signatu build_patron_response  "," build_ build_request_signature  "," build_request_signature  uri "," build_WebMock  response_for_request  "," build_ build_webmock_response  "," build_WebMock RequestRegistry  instance response_for_request  "," build_WebMock StubRegistry  instance response_for_request  "," build_webmock_ handle_request_without_webmock ponse "," build_webmock_ build_patron_response ponse ","WebMock RequestRegistry  instance  handle_request_without_webmock ponse_for_request ","WebMock RequestRegistry  instance  build_patron_response ponse_for_request ","WebMock StubRegistry  instance  handle_request_without_webmock ponse_for_request ","WebMock StubRegistry  instance  build_patron_response ponse_for_request "]}," WebMock RequestPatternMatcher negative_failure_message":{"type":"method","name":"negative_failure_message","children":[],"call":["@request_execution_verifier negative_failure_message "]}," WebMock RequestPatternMatcher failure_message":{"type":"method","name":"failure_message","children":[],"call":["@request_execution_verifier failure_message "]}," WebMock RequestPatternMatcher does_not_match?":{"type":"method","name":"does_not_match?","children":[],"call":["@request_execution_verifier does_not_match? ","@request_execution_verifier request_pattern= "]}," WebMock RequestPatternMatcher matches?":{"type":"method","name":"matches?","children":[],"call":["@request_execution_verifier matches? ","@request_execution_verifier request_pattern= "]}," WebMock RequestPatternMatcher times":{"type":"method","name":"times","children":[],"call":["@request_execution_verifier expected_times_executed= ","times to_i "]}," WebMock RequestPatternMatcher twice":{"type":"method","name":"twice","children":[],"call":["@request_execution_verifier expected_times_executed= "]}," WebMock RequestPatternMatcher once":{"type":"method","name":"once","children":[],"call":["@request_execution_verifier expected_times_executed= "]}," WebMock RequestPatternMatcher initialize":{"type":"method","name":"initialize","children":[],"call":["RequestExecutionVerifier  new "]}," WebMock version":{"type":"method","name":"version","children":[],"call":[]}," WebMock NetHTTPUtility request_signature_from_request":{"type":"method","name":"request_signature_from_request","children":[],"call":[]}," WebMock NetConnectNotAllowedError initialize":{"type":"method","name":"initialize","children":[],"call":["text << ","\n\n + ","= * "," request_stubs "," stubbing_instructions ","(dstr\n  (str \"Real HTTP connections are disabled. Unregistered request: \")\n  (begin\n    (lvar :request_signature))) compact join ","(dstr\n  (str \"Real HTTP connections are disabled. Unregistered request: \")\n  (begin\n    (lvar :request_signature))) compact ","request_signature_snippet request_stubs ","request_signature_snippet stubbing_instructions ","RequestSignatureSnippet  new ","(dstr\n  (str \"Real HTTP connections are disabled. Unregistered request: \")\n  (begin\n    (lvar :request_signature))) compact join  << ","RequestSignatureSnippet  new  request_stubs ","RequestSignatureSnippet  new  stubbing_instructions "]}," WebMock globally_stub_request":{"type":"method","name":"globally_stub_request","children":[],"call":[]}," WebMock print_executed_requests":{"type":"method","name":"print_executed_requests","children":[],"call":[]}," WebMock after_request":{"type":"method","name":"after_request","children":[],"call":["CallbackRegistry  add_callback "]}," WebMock reset_callbacks":{"type":"method","name":"reset_callbacks","children":[],"call":["WebMock CallbackRegistry  reset "]}," WebMock reset!":{"type":"method","name":"reset!","children":[],"call":[]}," WebMock enable!":{"type":"method","name":"enable!","children":[],"call":[]}," WebMock disable!":{"type":"method","name":"disable!","children":[],"call":[]}," WebMock included":{"type":"method","name":"included","children":[{"type":"method","name":"request","children":[],"asgn":[],"call":["WebMock  a_request ","WebMock Deprecation  warning "]}],"call":[]}," WebMock VersionChecker colorize":{"type":"method","name":"colorize","children":[],"call":[]}," WebMock VersionChecker parse_version":{"type":"method","name":"parse_version","children":[],"call":["v to_i ","version split map ","version split "]}," WebMock VersionChecker version_requirement":{"type":"method","name":"version_requirement","children":[],"call":["@max_minor + ","@unsupported_versions join ","@unsupported_versions empty? "]}," WebMock VersionChecker compare_version":{"type":"method","name":"compare_version","children":[],"call":["@patch < ","@minor > ","@minor < ","@major > ","@major < ","@major == ","@minor == "]}," WebMock VersionChecker warn_in_red":{"type":"method","name":"warn_in_red","children":[],"call":["Kernel  warn "," colorize "]}," WebMock VersionChecker warn_about_too_high":{"type":"method","name":"warn_about_too_high","children":[],"call":[" warn_in_red ","(str \"You are using \") + + ","(str \"You are using \") + "," version_requirement "]}," WebMock VersionChecker warn_about_too_low":{"type":"method","name":"warn_about_too_low","children":[],"call":[" warn_in_red ","(str \"You are using \") + "," version_requirement "]}," WebMock VersionChecker too_high?":{"type":"method","name":"too_high?","children":[],"call":["@comparison_result == "]}," WebMock VersionChecker too_low?":{"type":"method","name":"too_low?","children":[],"call":["@comparison_result == "]}," WebMock VersionChecker check_version!":{"type":"method","name":"check_version!","children":[],"call":[" warn_about_too_high "," too_high? "," warn_about_too_low "," too_low? "," warn_about_unsupported_version "," unsupported_version? "]}," WebMock VersionChecker initialize":{"type":"method","name":"initialize","children":[],"call":[" compare_version "," parse_version "]}," WebMock Util URI sort_query_values":{"type":"method","name":"sort_query_values","children":[],"call":[]}," WebMock Util URI is_uri_localhost?":{"type":"method","name":"is_uri_localhost?","children":[],"call":[]}," WebMock Util URI heuristic_parse":{"type":"method","name":"heuristic_parse","children":[],"call":[]}," Util QueryMapper values_to_query":{"type":"method","name":"values_to_query","children":[],"call":["buffer chop ","buffer << "," to_query "," Addressable URI  encode_component ","parent dup ","new_query_values each ","new_query_values sort! ","object << ","key to_s ","value each ","value is_a? ","key to_s + ","key nil? ","key is_a? ","new_query_values inject ","new_query_values to_hash "," raise ","new_query_values class ","new_query_values respond_to? ","new_query_values is_a? ","new_query_values nil? ","options [] "," dup ","value empty? "," dup  chop "," dup  << ","new_query_values to_hash  each ","new_query_values to_hash  sort! ","key to_s  to_s ","key to_s  to_s + ","key to_s  nil? ","key to_s  is_a? ","new_query_values to_hash  inject ","new_query_values to_hash  to_hash ","new_query_values to_hash  class ","new_query_values to_hash  respond_to? ","new_query_values to_hash  is_a? ","new_query_values to_hash  nil? "]}," Util QueryMapper query_to_values":{"type":"method","name":"query_to_values","children":[],"call":[" normalize_query_hash "," collect_query_hash "," collect_query_parts ","flat_array == ","options [] "," raise ","Invalid notation. Must be one of:  + ","(sym :flat) include? ! ","(sym :flat) include? ","query force_encoding ","query respond_to? ","query nil? ","query dup force_encoding ","query dup "," normalize_ collect_query_hash  "," normalize_query dup force_encoding _hash "," collect_ collect_query_hash  "," collect_query dup force_encoding _hash "," collect_query dup force_encoding _parts ","query dup force_encoding  force_encoding ","query dup force_encoding  respond_to? ","query dup force_encoding  nil? ","query dup force_encoding  dup force_encoding ","query dup force_encoding  dup "]}," WebMock Util JSON convert_json_to_yaml":{"type":"method","name":"convert_json_to_yaml","children":[],"call":[]}," WebMock Util JSON unescape":{"type":"method","name":"unescape","children":[],"call":[]}," WebMock Util JSON parse":{"type":"method","name":"parse","children":[],"call":[]}," WebMock Util HashKeysStringifier stringify_keys!":{"type":"method","name":"stringify_keys!","children":[],"call":[]}," WebMock Util HashCounter each":{"type":"method","name":"each","children":[],"call":["block call "," hash [] ","a [] "," hash ","(send\n  (send\n    (ivar :@order) :to_a) :sort) each ","a [] <=> ","b [] ","@order to_a sort ","@order to_a ","(send\n  (send\n    (ivar :@order) :to_a) :sort_by) each ","@order to_a sort_by "]}," Test Unit TestCase teardown_with_webmock":{"type":"method","name":"teardown_with_webmock","children":[],"call":["WebMock  reset! "," teardown_without_webmock "]}," WebMock StubRequestSnippet to_s":{"type":"method","name":"to_s","children":[],"call":["string << ","with empty? ","with << ","request_pattern headers_pattern to_s ","request_pattern headers_pattern ","request_pattern body_pattern to_s ","request_pattern body_pattern ","request_pattern uri_pattern to_s ","request_pattern uri_pattern ","request_pattern method_pattern to_s ","request_pattern method_pattern ","@request_stub request_pattern ","WebMock Util Headers  sorted_headers_string ","@request_signature headers ","@request_signature headers empty? ! ","@request_signature headers empty? ","@request_signature body inspect ","@request_signature body ","@request_signature body to_s != ","@request_signature body to_s ","WebMock Util URI  strip_default_port_from_uri_string ","@request_signature uri to_s ","@request_signature uri ","@request_signature method "," dup ","(str \"stub_request(:\") dup ","request_pattern headers_pattern matches? ","request_pattern headers_pattern pp_to_s ","(str \"stub_request(:\") dup  << "," dup  empty? "," dup  << ","@request_stub request_pattern  headers_pattern to_s ","@request_stub request_pattern  headers_pattern ","@request_stub request_pattern  body_pattern to_s ","@request_stub request_pattern  body_pattern ","@request_stub request_pattern  uri_pattern to_s ","@request_stub request_pattern  uri_pattern ","@request_stub request_pattern  method_pattern to_s ","@request_stub request_pattern  method_pattern ","@request_stub @request_stub request_pattern  ","WebMock Util Headers  sorted_headers_(str \"stub_request(:\") dup  ","WebMock Util URI  strip_default_port_from_uri_(str \"stub_request(:\") dup  ","@request_stub request_pattern  headers_pattern matches? ","@request_stub request_pattern  headers_pattern pp_to_s "]}," WebMock StubRequestSnippet initialize":{"type":"method","name":"initialize","children":[],"call":[]}," WebMock StubRegistry evaluate_response_for_request":{"type":"method","name":"evaluate_response_for_request","children":[],"call":["response evaluate ","response dup evaluate ","response dup "]}," WebMock StubRegistry request_stub_for":{"type":"method","name":"request_stub_for","children":[],"call":["registered_request_stub request_pattern matches? ","registered_request_stub request_pattern ","(send\n  (send nil :global_stubs) :+\n  (send nil :request_stubs)) detect "," global_stubs + "," request_stubs "," global_stubs "," request_stubs detect ","(send\n  (send\n    (send\n      (send nil :global_stubs) :[]\n      (sym :before_local_stubs)) :+\n    (send nil :request_stubs)) :+\n  (send\n    (send nil :global_stubs) :[]\n    (sym :after_local_stubs))) detect "," global_stubs [] + + "," global_stubs [] "," global_stubs [] + "]}," WebMock StubRegistry response_for_request":{"type":"method","name":"response_for_request","children":[],"call":[" evaluate_response_for_request ","stub response "," request_stub_for "," request_stub_for  response "," request_ request_stub_for _for "]}," WebMock StubRegistry registered_request?":{"type":"method","name":"registered_request?","children":[],"call":[" request_stub_for "]}," WebMock StubRegistry remove_request_stub":{"type":"method","name":"remove_request_stub","children":[],"call":[" raise ","stub to_s "," request_stubs delete ! "," request_stubs delete "," request_stubs "]}," WebMock StubRegistry register_request_stub":{"type":"method","name":"register_request_stub","children":[],"call":[" request_stubs insert "," request_stubs "]}," WebMock StubRegistry register_global_stub":{"type":"method","name":"register_global_stub","children":[],"call":[" global_stubs push "," global_stubs ","(send\n  (send\n    (const\n      (const\n        (cbase) :WebMock) :RequestStub) :new\n    (sym :any)\n    (regexp\n      (str \".*\")\n      (regopt))) :with) to_return ","responses delete ","request object_id "," lambda ","responses []= ","block call "," WebMock RequestStub  new with "," WebMock RequestStub  new "," global_stubs [] push "," global_stubs [] ","(send\n  (send\n    (const\n      (const\n        (cbase) :WebMock) :RequestStub) :new\n    (sym :any)\n    (block\n      (send nil :lambda)\n      (args\n        (arg :uri))\n      (true))) :with) to_return ","response_lock synchronize ","update_response call ","response_lock owned? ","Mutex  new "," raise ","ArgumentError  new ","(sym :before_local_stubs) include? "," global_(send\n  (send\n    (const\n      (const\n        (cbase) :WebMock) :RequestStub) :new\n    (sym :any)\n    (regexp\n      (str \".*\")\n      (regopt))) :with) to_return s push "," global_(send\n  (send\n    (const\n      (const\n        (cbase) :WebMock) :RequestStub) :new\n    (sym :any)\n    (block\n      (send nil :lambda)\n      (args\n        (arg :uri))\n      (true))) :with) to_return s push "," global_(send\n  (send\n    (const\n      (const\n        (cbase) :WebMock) :RequestStub) :new\n    (sym :any)\n    (regexp\n      (str \".*\")\n      (regopt))) :with) to_return s "," global_(send\n  (send\n    (const\n      (const\n        (cbase) :WebMock) :RequestStub) :new\n    (sym :any)\n    (block\n      (send nil :lambda)\n      (args\n        (arg :uri))\n      (true))) :with) to_return s "," global_(send\n  (send\n    (const\n      (const\n        (cbase) :WebMock) :RequestStub) :new\n    (sym :any)\n    (regexp\n      (str \".*\")\n      (regopt))) :with) to_return s [] push "," global_(send\n  (send\n    (const\n      (const\n        (cbase) :WebMock) :RequestStub) :new\n    (sym :any)\n    (block\n      (send nil :lambda)\n      (args\n        (arg :uri))\n      (true))) :with) to_return s [] push "," global_(send\n  (send\n    (const\n      (const\n        (cbase) :WebMock) :RequestStub) :new\n    (sym :any)\n    (regexp\n      (str \".*\")\n      (regopt))) :with) to_return s [] "," global_(send\n  (send\n    (const\n      (const\n        (cbase) :WebMock) :RequestStub) :new\n    (sym :any)\n    (block\n      (send nil :lambda)\n      (args\n        (arg :uri))\n      (true))) :with) to_return s [] ","Mutex  new  synchronize ","Mutex  new  owned? ","(sym :before_local_(send\n  (send\n    (const\n      (const\n        (cbase) :WebMock) :RequestStub) :new\n    (sym :any)\n    (regexp\n      (str \".*\")\n      (regopt))) :with) to_return s) include? ","(sym :before_local_(send\n  (send\n    (const\n      (const\n        (cbase) :WebMock) :RequestStub) :new\n    (sym :any)\n    (block\n      (send nil :lambda)\n      (args\n        (arg :uri))\n      (true))) :with) to_return s) include? "]}," WebMock StubRegistry reset!":{"type":"method","name":"reset!","children":[],"call":[" request_stubs= "," global_stub "]}," WebMock StubRegistry global_stubs":{"type":"method","name":"global_stubs","children":[],"call":["h []= ","Hash  new "]}," WebMock StubRegistry initialize":{"type":"method","name":"initialize","children":[],"call":[" reset! "]}," WebMock Matchers have_been_requested":{"type":"method","name":"have_been_requested","children":[],"call":["WebMock RequestPatternMatcher  new "]}," WebMock DynamicResponse evaluate":{"type":"method","name":"evaluate","children":[],"call":["Response  new ","@responder call "]}," WebMock Response evaluate":{"type":"method","name":"evaluate","children":[],"call":["@exception call ","@exception is_a? ","@should_timeout call ","@should_timeout is_a? "," status= ","@status call ","@status is_a? "," headers= ","@headers call ","@headers is_a? "," body= ","@body call ","@body is_a? ","@exception call  call ","@exception call  is_a? ","@should_timeout call  call ","@should_timeout call  is_a? "]}," WebMock Response exception=":{"type":"method","name":"exception=","children":[],"call":["exception new ","StandardError  new "]}," WebMock RequestStub from_request_signature":{"type":"method","name":"from_request_signature","children":[],"call":[]}," WebMock RequestStub to_s":{"type":"method","name":"to_s","children":[],"call":[" request_pattern to_s "," request_pattern "]}," WebMock RequestStub matches?":{"type":"method","name":"matches?","children":[],"call":[" request_pattern matches? "," request_pattern "]}," WebMock RequestStub has_responses?":{"type":"method","name":"has_responses?","children":[],"call":["@responses_sequences empty? ! ","@responses_sequences empty? "]}," WebMock RequestStub to_rack":{"type":"method","name":"to_rack","children":[],"call":["@responses_sequences << ","ResponsesSequence  new ","RackResponse  new "]}," WebMock RequestSignature url_encoded?":{"type":"method","name":"url_encoded?","children":[],"call":[" headers [] == "," headers [] "," headers ","(and\n  (send nil :headers)\n  (send\n    (send\n      (send nil :headers) :[]\n      (str \"Content-Type\")) :==\n    (str \"application/x-www-form-urlencoded\"))) ! ! ","(and\n  (send nil :headers)\n  (send\n    (send\n      (send nil :headers) :[]\n      (str \"Content-Type\")) :==\n    (str \"application/x-www-form-urlencoded\"))) ! ","(csend\n  (csend\n    (send nil :headers) :fetch\n    (str \"Content-Type\")\n    (nil)) :start_with?\n  (str \"application/x-www-form-urlencoded\")) ! ! ","(csend\n  (csend\n    (send nil :headers) :fetch\n    (str \"Content-Type\")\n    (nil)) :start_with?\n  (str \"application/x-www-form-urlencoded\")) ! ","(and\n  (send nil :headers)\n  (send\n    (send\n      (send nil :headers) :fetch\n      (str \"Content-Type\")\n      (str \"\")) :start_with?\n    (str \"application/x-www-form-urlencoded\"))) ! ! ","(and\n  (send nil :headers)\n  (send\n    (send\n      (send nil :headers) :fetch\n      (str \"Content-Type\")\n      (str \"\")) :start_with?\n    (str \"application/x-www-form-urlencoded\"))) ! "," headers fetch start_with? "," headers fetch "]}," WebMock RequestSignature eql?":{"type":"method","name":"eql?","children":[],"call":[" to_s == ","other to_s "," to_s "]}," WebMock RequestSignature hash":{"type":"method","name":"hash","children":[],"call":[" to_s hash "," to_s "]}," WebMock RequestSignature headers=":{"type":"method","name":"headers=","children":[],"call":["WebMock Util Headers  normalize_headers "]}," WebMock RequestRegistry to_s":{"type":"method","name":"to_s","children":[],"call":["text << ","times_executed == "," requested_signatures each "," requested_signatures "," requested_signatures hash empty? "," requested_signatures hash "," dup "," dup  << "]}," WebMock RequestRegistry reset!":{"type":"method","name":"reset!","children":[],"call":[" requested_signatures= ","Util HashCounter  new "]}," WebMock BodyPattern normalize_hash":{"type":"method","name":"normalize_hash","children":[],"call":["Hash  [] ","WebMock Util HashKeysStringifier  stringify_keys! sort ","WebMock Util HashKeysStringifier  stringify_keys! ","JSON  parse ","JSON  generate "]}," WebMock BodyPattern matching_hashes?":{"type":"method","name":"matching_hashes?","children":[],"call":["expected === "," matching_hashes? ","expected is_a? ","actual is_a? ","pattern [] ","query_parameters each ","query_parameters keys sort == ","pattern keys sort ","pattern keys ","query_parameters keys sort ","query_parameters keys ","query_parameters is_a? ","query_parameters size == ","pattern size ","query_parameters size ","pattern []  === ","pattern []  is_a? "]}," WebMock BodyPattern body_as_hash":{"type":"method","name":"body_as_hash","children":[],"call":["WebMock Util QueryMapper  query_to_values ","Crack XML  parse ","WebMock Util JSON  parse ","BODY_FORMATS  [] ","Config  instance query_values_notation ","Config  instance ","Addressable URI  parse query_values ","Addressable URI  parse ","? + "," body_format "]}," WebMock URIStringPattern to_s":{"type":"method","name":"to_s","children":[],"call":["@query_params inspect ","WebMock Util URI  strip_default_port_from_uri_string ","@pattern to_s ","WebMock Util URI  WebMock Util URI  strip_default_port_from_uri_string ip_default_port_from_uri_WebMock Util URI  strip_default_port_from_uri_string ing "]}," WebMock URIStringPattern add_query_params":{"type":"method","name":"add_query_params","children":[],"call":["@pattern query= ","WebMock Util QueryMapper  values_to_query ","(or\n  (send\n    (const\n      (const\n        (const nil :WebMock) :Util) :QueryMapper) :query_to_values\n    (send\n      (ivar :@pattern) :query))\n  (hash)) merge ","WebMock Util QueryMapper  query_to_values ","@pattern query ","@query_params is_a? ","WebMock Config  instance query_values_notation ","WebMock Config  instance ","(or\n  (send\n    (const\n      (const\n        (const nil :WebMock) :Util) :QueryMapper) :query_to_values\n    (send\n      (ivar :@pattern) :query)\n    (hash\n      (pair\n        (sym :notation)\n        (send\n          (send\n            (const nil :Config) :instance) :query_values_notation))))\n  (hash)) merge ","Config  instance query_values_notation ","Config  instance ","@pattern query_values= ","(or\n  (send\n    (ivar :@pattern) :query_values)\n  (hash)) merge ","@pattern query_values ","Addressable URI  parse query_values ","Addressable URI  parse ","? + ","query_params is_a? ! ","query_params is_a? ","@Addressable URI  parse query_values  is_a? ","Addressable URI  parse query_values  is_a? ! ","Addressable URI  parse query_values  is_a? "]}," WebMock URIStringPattern matches?":{"type":"method","name":"matches?","children":[],"call":["uri === ","@query_params == ","WebMock Util QueryMapper  query_to_values ","uri query ","@query_params nil? ","uri omit === ","uri omit ","@pattern is_a? ","Config  instance query_values_notation ","Config  instance ","uri query_values "]}," WebMock URIRegexpPattern to_s":{"type":"method","name":"to_s","children":[],"call":["@query_params inspect ","@pattern inspect "]}," WebMock URIRegexpPattern matches?":{"type":"method","name":"matches?","children":[],"call":["@query_params == ","WebMock Util QueryMapper  query_to_values ","uri query ","@query_params nil? ","u match ","WebMock Util URI  variations_of_uri_as_strings any? ","WebMock Util URI  variations_of_uri_as_strings ","Config  instance query_values_notation ","Config  instance ","uri query_values "]}," WebMock URIPattern add_query_params":{"type":"method","name":"add_query_params","children":[],"call":["WebMock Util QueryMapper  query_to_values ","WebMock Matchers HashIncludingMatcher  from_rspec_matcher "," rSpecHashIncludingMatcher? ","query_params is_a? ","Config  instance query_values_notation ","Config  instance ","Addressable URI  parse query_values ","Addressable URI  parse ","? + ","WebMock Matchers HashExcludingMatcher  from_rspec_matcher "," rSpecHashExcludingMatcher? "]}," WebMock RequestPattern create_uri_pattern":{"type":"method","name":"create_uri_pattern","children":[],"call":["URIStringPattern  new ","URIRegexpPattern  new ","uri is_a? ","URIAddressablePattern  new ","URICallablePattern  new ","uri respond_to? "]}," WebMock RSpecMatcherDetector rSpecHashIncludingMatcher?":{"type":"method","name":"rSpecHashIncludingMatcher?","children":[],"call":["matcher class name =~ ","matcher class name ","matcher class "]}," WebMock RequestExecutionVerifier times":{"type":"method","name":"times","children":[],"call":["times == "]}," WebMock RequestExecutionVerifier executed_requests_message":{"type":"method","name":"executed_requests_message","children":[],"call":[]}," WebMock RackResponse session":{"type":"method","name":"session","children":[],"call":[]}," WebMock RackResponse build_rack_env":{"type":"method","name":"build_rack_env","children":[],"call":["env []= ","k tr upcase ","k tr ","headers each "," session ","uri scheme ","StringIO  new ","Basic  + ","(send\n  (lvar :uri) :userinfo) pack delete ","(send\n  (lvar :uri) :userinfo) pack ","uri userinfo ","uri port ","uri host ","uri query ","uri path ","body size ","headers delete ","request method to_s upcase ","request method to_s ","request method ","request body ","request headers ","request uri "," session_options ","(or\n  (send\n    (lvar :request) :headers)\n  (hash)) dup ","body bytesize ","(or\n  (send\n    (lvar :request) :headers)\n  (hash)) dup  each ","request uri  scheme ","(send\n  (lvar :request uri ) :userinfo) pack delete ","(send\n  (lvar :request uri ) :userinfo) pack ","request uri  userinfo ","request uri  port ","request uri  host ","request uri  query ","request uri  path ","(or\n  (send\n    (lvar :request) :headers)\n  (hash)) dup  delete ","request (or\n  (send\n    (lvar :request) :headers)\n  (hash)) dup  ","request request uri  ","(or\n  (send\n    (lvar :request) :(or\n  (send\n    (lvar :request) :headers)\n  (hash)) dup )\n  (hash)) dup "]}," WebMock RackResponse body_from_rack_response":{"type":"method","name":"body_from_rack_response","children":[],"call":["response close ","response respond_to? ","body << ","response each "," dup "," dup  << "]}," WebMock RackResponse evaluate":{"type":"method","name":"evaluate","children":[],"call":["Response  new "," body_from_rack_response ","@app call "," build_rack_env ","response join ","Rack Utils HTTP_STATUS_CODES  [] "," build_rack_ build_rack_env  "]}," WebMock RackResponse initialize":{"type":"method","name":"initialize","children":[],"call":[]}," teardown_with_webmock":{"type":"method","name":"teardown_with_webmock","children":[],"call":["WebMock  reset! "," teardown_without_webmock "]}," WebMock Matchers HashIncludingMatcher from_rspec_matcher":{"type":"method","name":"from_rspec_matcher","children":[],"call":[]}," WebMock Matchers HashIncludingMatcher inspect":{"type":"method","name":"inspect","children":[],"call":["@expected inspect "]}," WebMock Matchers HashIncludingMatcher ==":{"type":"method","name":"==","children":[],"call":["v == ","actual [] ","actual has_key? ","@expected all? ","v === ","value === ","actual key? "]}," WebMock Matchers HashIncludingMatcher initialize":{"type":"method","name":"initialize","children":[],"call":["Hash  [] ","WebMock Util HashKeysStringifier  stringify_keys! sort ","WebMock Util HashKeysStringifier  stringify_keys! "]}," WebMock HttpLibAdapters TyphoeusAdapter request_hash":{"type":"method","name":"request_hash","children":[],"call":[]}," WebMock HttpLibAdapters TyphoeusAdapter generate_typhoeus_response":{"type":"method","name":"generate_typhoeus_response","children":[],"call":[]}," WebMock HttpLibAdapters TyphoeusAdapter build_webmock_response":{"type":"method","name":"build_webmock_response","children":[],"call":[]}," WebMock HttpLibAdapters TyphoeusAdapter build_request_signature":{"type":"method","name":"build_request_signature","children":[],"call":[]}," WebMock HttpLibAdapters TyphoeusAdapter remove_after_request_callback":{"type":"method","name":"remove_after_request_callback","children":[],"call":[]}," WebMock HttpLibAdapters TyphoeusAdapter add_after_request_callback":{"type":"method","name":"add_after_request_callback","children":[],"call":[]}," WebMock HttpLibAdapters TyphoeusAdapter remove_before_callback":{"type":"method","name":"remove_before_callback","children":[],"call":[]}," WebMock HttpLibAdapters TyphoeusAdapter add_before_callback":{"type":"method","name":"add_before_callback","children":[],"call":[]}," WebMock HttpLibAdapters TyphoeusAdapter disabled?":{"type":"method","name":"disabled?","children":[],"call":[]}," WebMock HttpLibAdapters TyphoeusAdapter disable!":{"type":"method","name":"disable!","children":[],"call":[]}," WebMock HttpLibAdapters TyphoeusAdapter enable!":{"type":"method","name":"enable!","children":[],"call":[]}," WebMock HttpLibAdapters PatronAdapter build_webmock_response":{"type":"method","name":"build_webmock_response","children":[],"call":[]}," WebMock HttpLibAdapters PatronAdapter build_patron_response":{"type":"method","name":"build_patron_response","children":[],"call":[]}," WebMock HttpLibAdapters PatronAdapter build_request_signature":{"type":"method","name":"build_request_signature","children":[],"call":[]}," WebMock HttpLibAdapters PatronAdapter handle_file_name":{"type":"method","name":"handle_file_name","children":[],"call":[]}," WebMock HttpLibAdapters PatronAdapter disable!":{"type":"method","name":"disable!","children":[],"call":[]}," WebMock HttpLibAdapters PatronAdapter enable!":{"type":"method","name":"enable!","children":[],"call":[]}," WebMock HttpLibAdapters PatronAdapter WebMockPatronSession handle_request":{"type":"method","name":"handle_request","children":[],"call":[" raise ","WebMock NetConnectNotAllowedError  new ","WebMock CallbackRegistry  invoke_callbacks ","WebMock HttpLibAdapters PatronAdapter  build_webmock_response ","WebMock CallbackRegistry  any_callbacks? ","WebMock  net_connect_allowed? ","request_signature uri ","WebMock HttpLibAdapters PatronAdapter  build_patron_response "," default_response_charset ","WebMock HttpLibAdapters PatronAdapter  handle_file_name ","WebMock StubRegistry  instance response_for_request ","WebMock StubRegistry  instance ","WebMock RequestRegistry  instance requested_signatures put ","WebMock RequestRegistry  instance requested_signatures ","WebMock RequestRegistry  instance ","WebMock HttpLibAdapters PatronAdapter  build_request_signature ","WebMock HttpLibAdapters PatronAdapter  build_WebMock HttpLibAdapters PatronAdapter  build_webmock_response  ","WebMock HttpLibAdapters PatronAdapter  build_WebMock StubRegistry  instance response_for_request  ","WebMock HttpLibAdapters PatronAdapter  build_webmock_WebMock HttpLibAdapters PatronAdapter  build_patron_response ponse ","WebMock HttpLibAdapters PatronAdapter  build_request_signature  uri ","WebMock HttpLibAdapters PatronAdapter  build_patron_WebMock HttpLibAdapters PatronAdapter  build_patron_response ponse "," default_WebMock HttpLibAdapters PatronAdapter  build_patron_response ponse_charset ","WebMock StubRegistry  instance WebMock HttpLibAdapters PatronAdapter  build_patron_response ponse_for_request ","WebMock RequestRegistry  instance requested_signatuWebMock HttpLibAdapters PatronAdapter  build_patron_response  put ","WebMock RequestRegistry  instance requested_signatuWebMock HttpLibAdapters PatronAdapter  build_patron_response  ","WebMock HttpLibAdapters PatronAdapter  build_WebMock HttpLibAdapters PatronAdapter  build_request_signature  "]}," Net WebMockHTTPResponse read_body":{"type":"method","name":"read_body","children":[],"call":["dest << "," Net ReadAdapter  new ","@body nil? "," raise ","ArgumentError  new ","block nil? ","dest nil? ","(send\n  (defined?\n    (ivar :@__read_body_previously_called)) :nil?) ! ","(ivar :@__read_body_previously_called) nil? ","@body dup "]}," WebMock NetHTTPUtility puts_warning_for_right_http_if_needed":{"type":"method","name":"puts_warning_for_right_http_if_needed","children":[],"call":[]}," WebMock NetHTTPUtility check_right_http_connection":{"type":"method","name":"check_right_http_connection","children":[],"call":[]}," Net WebMockNetBufferedIO initialize":{"type":"method","name":"initialize","children":[],"call":[" raise ","StringIO  new ","PatchedStringIO  new ","io string "," dup ","RUBY_VERSION  >= "]}," WebMock HttpLibAdapters NetHttpAdapter check_right_http_connection":{"type":"method","name":"check_right_http_connection","children":[],"call":["WebMock NetHTTPUtility  puts_warning_for_right_http_if_needed "]}," WebMock HttpLibAdapters NetHttpAdapter build_webmock_response":{"type":"method","name":"build_webmock_response","children":[],"call":["webmock_response body= ","net_http_response body ","webmock_response headers= ","net_http_response to_hash ","webmock_response status= ","net_http_response message ","net_http_response code to_i ","net_http_response code ","WebMock Response  new ","WebMock Response  new  body= ","WebMock Response  new  headers= ","WebMock Response  new  status= "]}," WebMock HttpLibAdapters NetHttpAdapter build_net_http_response":{"type":"method","name":"build_net_http_response","children":[],"call":[" block_given? ","webmock_response raise_error_if_any "," raise ","webmock_response should_timeout ","response extend ","response instance_variable_set ","response add_field ","values each ","values is_a? ","webmock_response headers to_a each ","webmock_response headers to_a ","webmock_response headers ","body to_s == ","body to_s ","webmock_response body ","Net HTTPResponse  send new ","webmock_response status [] ","webmock_response status ","webmock_response status [] to_s ","Net HTTPResponse  send "," timeout_exception ","webmock_response status [] to_s == ","webmock_Net HTTPResponse  send new  raise_error_if_any ","webmock_Net HTTPResponse  send new  should_timeout ","Net HTTPResponse  send new  extend ","Net HTTPResponse  send new  instance_variable_set ","Net HTTPResponse  send new  add_field ","webmock_Net HTTPResponse  send new  headers to_a each ","webmock_Net HTTPResponse  send new  headers to_a ","webmock_Net HTTPResponse  send new  headers ","webmock_response body  to_s == ","webmock_response body  to_s ","webmock_response webmock_response body  ","webmock_Net HTTPResponse  send new  body ","webmock_Net HTTPResponse  send new  status [] ","webmock_Net HTTPResponse  send new  status ","webmock_Net HTTPResponse  send new  status [] to_s ","webmock_Net HTTPResponse  send new  status [] to_s == "]}," WebMock HttpLibAdapters NetHttpAdapter start":{"type":"method","name":"start","children":[],"call":[" start_without_connect ","WebMock Config  instance net_http_connect_on_start ","WebMock Config  instance ","WebMock  net_http_connect_on_start? ","Addressable URI  parse ","WebMock NetHTTPUtility  get_uri ","WebMock NetHTTPUtility  get_Addressable URI  parse  "]}," WebMock HttpLibAdapters NetHttpAdapter start_without_connect":{"type":"method","name":"start_without_connect","children":[],"call":[" do_finish "," block_given? "," raise ","Net HTTP  socket_type new ","Net HTTP  socket_type "]}," WebMock HttpLibAdapters NetHttpAdapter request":{"type":"method","name":"request","children":[],"call":[" raise ","WebMock NetConnectNotAllowedError  new ","after_request call "," start_with_connect "," started? ! "," started? ","WebMock Config  instance net_http_connect_on_start ! ","WebMock Config  instance net_http_connect_on_start ","WebMock Config  instance ","block call ","response extend ","WebMock CallbackRegistry  invoke_callbacks "," build_webmock_response ","WebMock CallbackRegistry  any_callbacks? "," lambda "," check_right_http_connection ","WebMock  net_connect_allowed? ","request_signature uri "," build_net_http_response ","Net HTTP  socket_type new ","Net HTTP  socket_type ","WebMock StubRegistry  instance response_for_request ","WebMock StubRegistry  instance ","WebMock RequestRegistry  instance requested_signatures put ","WebMock RequestRegistry  instance requested_signatures ","WebMock RequestRegistry  instance ","WebMock NetHTTPUtility  request_signature_from_request ","super_with_after_request call "," start_with_connect_without_finish "," ensure_actual_connection "," ensure_actually_connected "," build_ build_webmock_response  "," build_WebMock StubRegistry  instance response_for_request  ","WebMock NetHTTPUtility  request_signature_from_request  uri ","WebMock NetHTTPUtility  WebMock NetHTTPUtility  request_signature_from_request _from_request "]}," WebMock HttpLibAdapters NetHttpAdapter constants":{"type":"method","name":"constants","children":[],"call":["(send\n  (zsuper) :+\n  (send\n    (send\n      (self) :superclass) :constants\n    (lvar :inherit))) uniq "," + "," superclass constants "," superclass "]}," WebMock HttpLibAdapters NetHttpAdapter const_get":{"type":"method","name":"const_get","children":[],"call":[" superclass const_get "," superclass "]}," WebMock HttpLibAdapters NetHttpAdapter const_defined?":{"type":"method","name":"const_defined?","children":[],"call":[" superclass const_defined? "," superclass "]}," WebMock HttpLibAdapters NetHttpAdapter socket_type":{"type":"method","name":"socket_type","children":[],"call":[]}," WebMock HttpLibAdapters NetHttpAdapter disable!":{"type":"method","name":"disable!","children":[],"call":[]}," WebMock HttpLibAdapters NetHttpAdapter enable!":{"type":"method","name":"enable!","children":[],"call":[]}," previous_signature_for":{"type":"method","name":"previous_signature_for","children":[],"call":[" webmock_request_signatures delete_at "," webmock_request_signatures "," webmock_request_signatures index "," webmock_request_signatures  webmock_request_signatures index  "]}," webmock_request_signatures":{"type":"method","name":"webmock_request_signatures","children":[],"call":[]}," webmock_responses":{"type":"method","name":"webmock_responses","children":[],"call":["hash []= ","WebMock StubRegistry  instance response_for_request ","WebMock StubRegistry  instance ","Hash  new "]}," build_webmock_response":{"type":"method","name":"build_webmock_response","children":[],"call":["webmock_response body= ","httpclient_response content ","httpclient_response body= ","body init_response ","StringIO  new ","webmock_response body ","HTTP Message Body  new ","httpclient_response content read ","httpclient_response content respond_to? ","webmock_response headers= ","hash []= "," Array + "," Array ","hash [] ","hash has_key? ","httpclient_response header all each ","httpclient_response header all ","httpclient_response header "," tap ","webmock_response status= ","httpclient_response reason ","httpclient_response status ","WebMock Response  new ","webmock_response HTTP Message Body  new = ","WebMock Response  new  body= ","httpclient_response HTTP Message Body  new = ","HTTP Message Body  new  init_response ","webmock_response HTTP Message Body  new  ","WebMock Response  new  body ","WebMock Response  new  headers= ","WebMock Response  new  status= "]}," WebMockHTTPClient build_httpclient_response":{"type":"method","name":"build_httpclient_response","children":[],"call":["block call ","webmock_response raise_error_if_any "," raise ","webmock_response should_timeout ","response header set ","response header ","webmock_response headers to_a each ","webmock_response headers to_a ","webmock_response headers ","response reason= ","webmock_response status [] ","webmock_response status ","response header init_response ","HTTP Message  new_response ","webmock_response body ","StringIO  new ","webmock_HTTP Message  new_response  raise_error_if_any ","webmock_HTTP Message  new_response  should_timeout ","HTTP Message  new_response  header set ","HTTP Message  new_response  header ","webmock_HTTP Message  new_response  headers to_a each ","webmock_HTTP Message  new_response  headers to_a ","webmock_HTTP Message  new_response  headers ","HTTP Message  new_response  reason= ","webmock_HTTP Message  new_response  status [] ","webmock_HTTP Message  new_response  status ","HTTP Message  new_response  header init_HTTP Message  new_response  ","HTTP Message  new_HTTP Message  new_response  ","webmock_HTTP Message  new_response  body ","webmock_response webmock_response body  ","webmock_response StringIO  new  "]}," WebMockHTTPClient do_request_async":{"type":"method","name":"do_request_async","children":[],"call":[" raise ","WebMock NetConnectNotAllowedError  new ","WebMock  net_connect_allowed? ","request_signature uri "," webmock_responses [] "," webmock_responses "," webmock_request_signatures << "," webmock_request_signatures "," build_request_signature "," create_request "," build_request_signature  uri "," create_request uest_signature uri "," webmock_ build_request_signature s << "," webmock_ create_request uest_signatures << "," webmock_ build_request_signature s "," webmock_ create_request uest_signatures "," build_ build_request_signature  "," build_ create_request uest_signature "," create_ create_request uest "]}," WebMockHTTPClient do_get":{"type":"method","name":"do_get","children":[],"call":[" raise ","WebMock NetConnectNotAllowedError  new ","WebMock CallbackRegistry  invoke_callbacks "," build_webmock_response ","WebMock CallbackRegistry  any_callbacks? ","conn push ","conn pop "," do_get_block_without_webmock "," do_get_stream_without_webmock "," webmock_responses delete "," webmock_responses ","WebMock  net_connect_allowed? ","request_signature uri ","filter filter_response ","@request_filter each "," build_httpclient_response "," webmock_responses [] ","WebMock RequestRegistry  instance requested_signatures put ","WebMock RequestRegistry  instance requested_signatures ","WebMock RequestRegistry  instance "," build_request_signature ","req header "," build_ build_webmock_response  "," build_ webmock_responses delete  "," build_webmock_conn pop ponse "," build_webmock_ do_get_block_without_webmock ponse "," build_webmock_ do_get_stream_without_webmock ponse "," build_webmock_conn push ponse "," build_webmock_ build_httpclient_response  ","  build_webmock_response s delete ","  webmock_responses delete s delete "," webmock_conn pop ponses delete "," webmock_ do_get_block_without_webmock ponses delete "," webmock_ do_get_stream_without_webmock ponses delete "," webmock_conn push ponses delete "," webmock_ build_httpclient_response s delete ","  build_webmock_response s ","  webmock_responses delete s "," webmock_conn pop ponses "," webmock_ do_get_block_without_webmock ponses "," webmock_ do_get_stream_without_webmock ponses "," webmock_conn push ponses "," webmock_ build_httpclient_response s "," build_request_signature  uri ","filter filter_conn pop ponse ","filter filter_ do_get_block_without_webmock ponse ","filter filter_ do_get_stream_without_webmock ponse ","filter filter_conn push ponse ","filter filter_ build_httpclient_response  "," build_httpclient_conn pop ponse "," build_httpclient_ do_get_block_without_webmock ponse "," build_httpclient_ do_get_stream_without_webmock ponse "," build_httpclient_conn push ponse "," build_httpclient_ build_httpclient_response  ","  build_webmock_response s [] ","  webmock_responses delete s [] "," webmock_conn pop ponses [] "," webmock_ do_get_block_without_webmock ponses [] "," webmock_ do_get_stream_without_webmock ponses [] "," webmock_conn push ponses [] "," webmock_ build_httpclient_response s [] ","WebMock RequestRegistry  instance requested_signatuconn pop  put ","WebMock RequestRegistry  instance requested_signatu do_get_block_without_webmock  put ","WebMock RequestRegistry  instance requested_signatu do_get_stream_without_webmock  put ","WebMock RequestRegistry  instance requested_signatuconn push  put ","WebMock RequestRegistry  instance requested_signatuconn pop  ","WebMock RequestRegistry  instance requested_signatu do_get_block_without_webmock  ","WebMock RequestRegistry  instance requested_signatu do_get_stream_without_webmock  ","WebMock RequestRegistry  instance requested_signatuconn push  "," build_ build_request_signature  "]}," WebMockHTTPClient do_get_stream":{"type":"method","name":"do_get_stream","children":[],"call":[" do_get "]}," WebMockHTTPClient do_get_block":{"type":"method","name":"do_get_block","children":[],"call":[" do_get "]}," WebMock HttpLibAdapters HTTPClientAdapter disable!":{"type":"method","name":"disable!","children":[],"call":[]}," WebMock HttpLibAdapters HTTPClientAdapter enable!":{"type":"method","name":"enable!","children":[],"call":[]}," WebMock HttpLibAdapterRegistry each_adapter":{"type":"method","name":"each_adapter","children":[],"call":["@http_lib_adapters each "]}," WebMock HttpLibAdapterRegistry register":{"type":"method","name":"register","children":[],"call":["@http_lib_adapters []= "]}," WebMock HttpLibAdapterRegistry initialize":{"type":"method","name":"initialize","children":[],"call":[]}," WebMock HttpLibAdapter adapter_for":{"type":"method","name":"adapter_for","children":[],"call":[]}," WebMock HttpLibAdapters ExconConnection request_kernel":{"type":"method","name":"request_kernel","children":[],"call":[" raise ","WebMock NetConnectNotAllowedError  new ","ExconAdapter  perform_callbacks ","ExconAdapter  mock_response ","params []= ","original_block call ","response_body_from_chunks << "," lambda ","params [] ","params has_key? ","WebMock  net_connect_allowed? ","mock_request uri ","params [] call ","(send\n  (lvar :remaining) :-\n  (send\n    (lvar :params) :[]\n    (sym :chunk_size))) max ","remaining - ","body [] ","i < ","body length ","response body= ","response body ","response body bytesize ","Excon Errors  status_error ","(splat\n  (send\n    (lvar :params) :[]\n    (sym :expects))) include? ! ","(splat\n  (send\n    (lvar :params) :[]\n    (sym :expects))) include? ","response status ","ExconAdapter  real_response ","WebMock StubRegistry  instance response_for_request ","WebMock StubRegistry  instance ","WebMock RequestRegistry  instance requested_signatures put ","WebMock RequestRegistry  instance requested_signatures ","WebMock RequestRegistry  instance ","ExconAdapter  build_request ","params dup ","ExconAdapter  mock_ExconAdapter  real_response  ","ExconAdapter  WebMock StubRegistry  instance response_for_request  ","params []  call ","response_response body _from_chunks << ","ExconAdapter  real_response _body_from_chunks << ","ExconAdapter  build_request  uri ","(send\n  (lvar :response body bytesize ) :-\n  (send\n    (lvar :params) :[]\n    (sym :chunk_size))) max ","response body bytesize  - ","response body  [] ","response body  length ","response response body = ","ExconAdapter  real_response  body= ","response response body  ","ExconAdapter  real_response  body ","response response body  bytesize ","ExconAdapter  real_response  body bytesize ","ExconAdapter  real_response  status ","ExconAdapter  real_ExconAdapter  real_response  ","WebMock StubRegistry  instance ExconAdapter  real_response _for_request "]}," WebMock HttpLibAdapters ExconAdapter perform_callbacks":{"type":"method","name":"perform_callbacks","children":[],"call":[]}," WebMock HttpLibAdapters ExconAdapter mock_response":{"type":"method","name":"mock_response","children":[],"call":[]}," WebMock HttpLibAdapters ExconAdapter real_response":{"type":"method","name":"real_response","children":[],"call":[]}," WebMock HttpLibAdapters ExconAdapter body_from":{"type":"method","name":"body_from","children":[],"call":[]}," WebMock HttpLibAdapters ExconAdapter build_request":{"type":"method","name":"build_request","children":[],"call":[]}," WebMock HttpLibAdapters ExconAdapter to_query":{"type":"method","name":"to_query","children":[],"call":[]}," WebMock HttpLibAdapters ExconAdapter disable!":{"type":"method","name":"disable!","children":[],"call":[]}," WebMock HttpLibAdapters ExconAdapter enable!":{"type":"method","name":"enable!","children":[],"call":[]}," EventMachine WebMockHttpClient make_raw_response":{"type":"method","name":"make_raw_response","children":[],"call":["response_string join ","response_string << << ","response_string << ","value =~ ","header =~ ","value join ","value is_a? ","headers each ","headers []= ","body bytesize ","headers [] ","status [] ","response body ","response headers ","response status ","response raise_error_if_any ","(lvar :value) flatten each ","(lvar :value) flatten ","body length ","value join  =~ ","value join  join ","value join  is_a? ","(lvar :value join ) flatten each ","(lvar :value join ) flatten "]}," EventMachine WebMockHttpClient build_request_signature":{"type":"method","name":"build_request_signature","children":[],"call":["WebMock RequestSignature  new ","uri to_s ","method downcase to_sym ","method downcase "," form_encode_body ","body is_a? ","uri query= "," encode_query slice "," encode_query ","@req uri ","uri userinfo= ","k to_s == ","k to_s "," options reject! "," options "," t to_s == "," t to_s "," t ","@req proxy reject! ","@req proxy ","WebMock Util URI  encode_unsafe_chars_in_userinfo ","auth join ","@req query ","@req headers [] ","@req headers ","@req uri clone ","@req method ","m request ","(send\n  (send\n    (ivar :@conn) :middleware) :select) each ","m respond_to? ","@conn middleware select ","@conn middleware ","@req body ","File  read ","@req file ","@req proxy [] ","headers []= ","WebMock Util Headers  basic_auth_header ","headers delete ","headers [] ","headers [] is_a? "," build_request "," headers_and_body_processed_by_middleware ","@req uri clone  to_s ","@req uri  to_s ","@req method  downcase to_sym ","@req method  downcase "," form_encode_ form_encode_body  "," form_encode_body  is_a? ","uri @req query = ","@req uri clone  query= ","@req uri  query= "," encode_@req query  slice "," encode_@req query  ","@req @req uri clone  ","@req @req uri  ","uri WebMock Util URI  encode_unsafe_chars_in_userinfo = ","uri auth join = ","@req uri clone  userinfo= ","@req uri  userinfo= ","WebMock Util URI  encode_unsafe_chars_in_WebMock Util URI  encode_unsafe_chars_in_userinfo  ","WebMock Util URI  encode_unsafe_chars_in_auth join  ","@req headers []  join ","@req proxy []  join ","@req @req query  ","@req @req headers  [] ","@req @req headers  ","@req @req uri clone  clone ","@req @req uri  clone ","@req @req method  ","@req  form_encode_body  ","@req headers  []= ","WebMock Util Headers  basic_@req headers [] _header ","WebMock Util Headers  basic_@req proxy [] _header ","@req headers  delete ","@req headers  [] ","@req headers  [] is_a? "," headers_and_ form_encode_body _processed_by_middleware "," @req headers _and_body_processed_by_middleware "]}," EventMachine WebMockHttpClient build_webmock_response":{"type":"method","name":"build_webmock_response","children":[],"call":["webmock_response body= "," response ","webmock_response headers= "," response_header ","webmock_response status= "," response_header http_reason "," response_header status ","WebMock Response  new ","WebMock Response  new  body= ","WebMock Response  new  headers= ","WebMock Response  new  status= "]}," EventMachine WebMockHttpClient stubbed_webmock_response":{"type":"method","name":"stubbed_webmock_response","children":[],"call":["WebMock StubRegistry  instance response_for_request "," request_signature ","WebMock StubRegistry  instance "]}," EventMachine WebMockHttpClient request_signature":{"type":"method","name":"request_signature","children":[],"call":[" build_request_signature "]}," EventMachine WebMockHttpClient unbind":{"type":"method","name":"unbind","children":[],"call":[" remove_instance_variable ","WebMock CallbackRegistry  invoke_callbacks "," request_signature "," build_webmock_response ","WebMock CallbackRegistry  any_callbacks? "," stubbed_webmock_response ! "," stubbed_webmock_response "," build_ build_webmock_response  "," stubbed_ build_webmock_response  ! "," stubbed_ build_webmock_response  "]}," EventMachine WebMockHttpClient send_request":{"type":"method","name":"send_request","children":[],"call":[" raise ","WebMock NetConnectNotAllowedError  new "," request_signature ","WebMock  net_connect_allowed? "," request_signature uri "," setup "," stubbed_webmock_response should_timeout "," stubbed_webmock_response "," make_raw_response ","EM  next_tick ","WebMock CallbackRegistry  invoke_callbacks "," on_error ","WebMock RequestRegistry  instance requested_signatures put ","WebMock RequestRegistry  instance requested_signatures ","WebMock RequestRegistry  instance "]}," EventMachine WebMockHttpClient setup":{"type":"method","name":"setup","children":[],"call":[" succeed ","@conn receive_data "," fail "," on_error ","@conn drop_client "]}," EventMachine WebMockHttpClient uri":{"type":"method","name":"uri","children":[],"call":["@req uri "]}," EventMachine WebMockHttpConnection activate_connection":{"type":"method","name":"activate_connection","children":[],"call":[" raise ","WebMock NetConnectNotAllowedError  new ","WebMock  net_connect_allowed? ","request_signature uri ","@conn set_deferred_status "," finalize_request ","conn comm_inactivity_timeout= ","@connopts inactivity_timeout ","conn pending_connect_timeout= ","@connopts connect_timeout ","conn parent= "," post_init ","HttpStubConnection  new "," rand ","client stubbed_webmock_response ","client request_signature ","WebMock  net_HttpStubConnection  new ect_allowed? ","client request_signature  uri ","@HttpStubConnection  new  set_deferred_status ","HttpStubConnection  new  comm_inactivity_timeout= ","@HttpStubConnection  new opts inactivity_timeout ","HttpStubConnection  new  pending_HttpStubConnection  new ect_timeout= ","@HttpStubConnection  new opts HttpStubConnection  new ect_timeout ","HttpStubConnection  new  parent= ","client client request_signature  "]}," WebMock HttpLibAdapters EmHttpRequestAdapter disable!":{"type":"method","name":"disable!","children":[],"call":[]}," WebMock HttpLibAdapters EmHttpRequestAdapter enable!":{"type":"method","name":"enable!","children":[],"call":[]}," EventMachine WebMockHttpRequest make_raw_response":{"type":"method","name":"make_raw_response","children":[],"call":["response_string join ","response_string << << ","response_string << ","value =~ ","header =~ ","value join ","value is_a? ","headers each ","status [] ","response body ","response headers ","response status ","response raise_error_if_any ","value join  =~ ","value join  join ","value join  is_a? "]}," EventMachine WebMockHttpRequest build_request_signature":{"type":"method","name":"build_request_signature","children":[],"call":["WebMock RequestSignature  new ","options [] ","uri to_s ","method downcase to_sym ","method downcase "," form_encode_body ","body is_a? ","uri query= "," encode_query slice "," encode_query ","@req uri ","uri userinfo= ","k to_s == ","k to_s ","options reject! ","WebMock Util URI  encode_unsafe_chars_in_userinfo ","auth join ","@uri dup ","@req uri dup ","@req method ","@req options ","@req options  [] ","@uri dup  to_s ","@req uri dup  to_s ","@req uri  to_s ","@req method  downcase to_sym ","@req method  downcase "," form_encode_ form_encode_body  "," form_encode_body  is_a? ","@uri dup  query= ","@req uri dup  query= ","@req uri  query= ","@req @uri dup  ","@req @req uri dup  ","@req @req uri  ","uri WebMock Util URI  encode_unsafe_chars_in_userinfo = ","uri auth join = ","@uri dup  userinfo= ","@req uri dup  userinfo= ","@req uri  userinfo= ","@req options  reject! ","WebMock Util URI  encode_unsafe_chars_in_WebMock Util URI  encode_unsafe_chars_in_userinfo  ","WebMock Util URI  encode_unsafe_chars_in_auth join  ","@@uri dup  dup ","@@req uri dup  dup ","@@req uri  dup ","@req @uri dup  dup ","@req @req uri dup  dup ","@req @req uri  dup ","@req @req method  ","@req @req options  "]}," EventMachine WebMockHttpRequest build_webmock_response":{"type":"method","name":"build_webmock_response","children":[],"call":["webmock_response body= ","http response ","webmock_response headers= ","http response_header ","webmock_response status= ","http response_header http_reason ","http response_header status ","WebMock Response  new ","WebMock Response  new  body= ","WebMock Response  new  headers= ","WebMock Response  new  status= "]}," EventMachine WebMockHttpRequest send_request":{"type":"method","name":"send_request","children":[],"call":[" raise ","WebMock NetConnectNotAllowedError  new ","WebMock CallbackRegistry  invoke_callbacks "," build_webmock_response ","WebMock CallbackRegistry  any_callbacks? ","http callback ","WebMock  net_connect_allowed? ","request_signature uri ","client setup ","webmock_response should_timeout "," make_raw_response ","client on_error ","WebMockHttpClient  new ","WebMock StubRegistry  instance response_for_request ","WebMock StubRegistry  instance ","WebMock RequestRegistry  instance requested_signatures put ","WebMock RequestRegistry  instance requested_signatures ","WebMock RequestRegistry  instance "," build_request_signature "," build_ build_webmock_response  "," build_WebMock StubRegistry  instance response_for_request  "," build_request_signature  uri ","WebMockHttpClient  new  setup "," build_webmock_response  should_timeout ","WebMock StubRegistry  instance response_for_request  should_timeout ","WebMockHttpClient  new  on_error "," build_ build_request_signature  "]}," EventMachine WebMockHttpRequest WebMockHttpClient close_connection":{"type":"method","name":"close_connection","children":[],"call":[]}," EventMachine WebMockHttpRequest WebMockHttpClient unbind":{"type":"method","name":"unbind","children":[],"call":[]}," EventMachine WebMockHttpRequest WebMockHttpClient setup":{"type":"method","name":"setup","children":[],"call":[" succeed "," receive_data ","EM  next_tick "," fail "," on_error "]}," Curl WebMockCurlEasy content_type":{"type":"method","name":"content_type","children":[],"call":[]}," Curl WebMockCurlEasy last_effective_url":{"type":"method","name":"last_effective_url","children":[],"call":[]}," Curl WebMockCurlEasy header_str":{"type":"method","name":"header_str","children":[],"call":[]}," Curl WebMockCurlEasy response_code":{"type":"method","name":"response_code","children":[],"call":[]}," Curl WebMockCurlEasy body_str":{"type":"method","name":"body_str","children":[],"call":[]}," Curl WebMockCurlEasy head=":{"type":"method","name":"head=","children":[],"call":[]}," Curl WebMockCurlEasy delete=":{"type":"method","name":"delete=","children":[],"call":[]}," Curl WebMockCurlEasy post_body=":{"type":"method","name":"post_body=","children":[],"call":[]}," Curl WebMockCurlEasy put_data=":{"type":"method","name":"put_data=","children":[],"call":[]}," Curl WebMockCurlEasy perform":{"type":"method","name":"perform","children":[],"call":[" curb_or_webmock "," reset_webmock_method "]}," Curl WebMockCurlEasy http_post":{"type":"method","name":"http_post","children":[],"call":["data join ","data empty? ! ","data empty? "]}," Curl WebMockCurlEasy http_put":{"type":"method","name":"http_put","children":[],"call":[]}," Curl WebMockCurlEasy http":{"type":"method","name":"http","children":[],"call":[]}," Curl WebMockCurlEasy build_webmock_response":{"type":"method","name":"build_webmock_response","children":[],"call":["webmock_response headers= ","webmock_response body= "," body_str ","webmock_response status= "," response_code ","WebMock Response  new ","WebMock HttpLibAdapters CurbAdapter  parse_header_string "," header_str ","@on_debug call ","http_response join + ","http_response join ","http_response << ","headers each ","WebMock Response  new  headers= ","WebMock Response  new  body= ","WebMock Response  new  status= "]}," Curl WebMockCurlEasy invoke_curb_callbacks":{"type":"method","name":"invoke_curb_callbacks","children":[],"call":["@on_failure call "," response_code ","@on_success call ","@on_complete call ","@on_body call "," body_str ","@on_header call "," header_str ","@on_progress call "," header_str lines each "," header_str lines "," body_str each "," chunked_response? ","@on_missing call "]}," Curl WebMockCurlEasy webmock_follow_location":{"type":"method","name":"webmock_follow_location","children":[],"call":[" url= "," send "," curb_or_webmock "," url "]}," Curl WebMockCurlEasy build_curb_response":{"type":"method","name":"build_curb_response","children":[],"call":[" url ","webmock_response headers [] ","webmock_response headers "," webmock_follow_location "," follow_location? ","@header_str << ","(send\n  (send\n    (lvar :webmock_response) :headers) :map) join ","v join ","v is_a? ","webmock_response headers map ","webmock_response status [] ","webmock_response status ","webmock_response body ","webmock_response raise_error_if_any "," raise ","webmock_response should_timeout ","@on_debug call ","header + ","(str \"HTTP/1.1 \") dup "," webmock_follow_webmock_response headers []  "," follow_webmock_response headers [] ? ","(str \"HTTP/1.1 \") dup  << "]}," Curl WebMockCurlEasy build_request_signature":{"type":"method","name":"build_request_signature","children":[],"call":["WebMock RequestSignature  new "," headers ","uri to_s "," post_body ","uri password= "," password ","uri user= "," username ","uri path= ","uri normalized_path gsub ","uri normalized_path ","WebMock Util URI  heuristic_parse "," url ","@webmock_method to_s downcase to_sym ","@webmock_method to_s downcase ","@webmock_method to_s "," headers merge "," basic_auth_headers "," headers_as_hash merge "," headers_as_hash ","@on_debug call ","request_body bytesize ","request_body + ","http_request join + ","http_request join ","http_request << ","headers each ","uri hostname ","uri path ","method upcase ","Connected to  + + ","Connected to  + ","  headers_as_hash merge  ","WebMock Util URI  heuristic_parse  to_s ","WebMock Util URI  heuristic_parse  password= ","WebMock Util URI  heuristic_parse  user= ","WebMock Util URI  heuristic_parse  path= ","WebMock Util URI  heuristic_parse  normalized_path gsub ","WebMock Util URI  heuristic_parse  normalized_path ","WebMock Util URI  heWebMock Util URI  heuristic_parse stic_parse ","@webmock_@webmock_method to_s downcase to_sym  to_s downcase to_sym ","@webmock_@webmock_method to_s downcase to_sym  to_s downcase ","@webmock_@webmock_method to_s downcase to_sym  to_s ","  headers_as_hash merge  merge "," basic_auth_ headers_as_hash merge  ","  headers_as_hash merge _as_hash merge ","  headers_as_hash merge _as_hash "," headers_as_hash merge  each ","WebMock Util URI  heuristic_parse  hostname ","WebMock Util URI  heuristic_parse  path ","@webmock_method to_s downcase to_sym  upcase "]}," Curl WebMockCurlEasy curb_or_webmock":{"type":"method","name":"curb_or_webmock","children":[],"call":[" raise ","WebMock NetConnectNotAllowedError  new ","WebMock CallbackRegistry  invoke_callbacks "," build_webmock_response ","WebMock CallbackRegistry  any_callbacks? ","WebMock  net_connect_allowed? ","request_signature uri "," invoke_curb_callbacks "," build_curb_response ","WebMock StubRegistry  instance response_for_request ","WebMock StubRegistry  instance ","WebMock RequestRegistry  instance requested_signatures put ","WebMock RequestRegistry  instance requested_signatures ","WebMock RequestRegistry  instance "," build_request_signature ","WebMock StubRegistry  instance registered_request? "," build_ build_webmock_response  "," build_WebMock StubRegistry  instance response_for_request  "," build_request_signature  uri "," build_ build_request_signature  "]}," WebMock HttpLibAdapters CurbAdapter parse_header_string":{"type":"method","name":"parse_header_string","children":[],"call":[]}," WebMock HttpLibAdapters CurbAdapter disable!":{"type":"method","name":"disable!","children":[],"call":[]}," WebMock HttpLibAdapters CurbAdapter enable!":{"type":"method","name":"enable!","children":[],"call":[]}," WebMock NetConnectNotAllowedError stubbing_instructions":{"type":"method","name":"stubbing_instructions","children":[],"call":["text << ","WebMock StubRequestSnippet  new to_s ","WebMock StubRequestSnippet  new ","RequestStub  from_request_signature ","WebMock  show_stubbing_instructions? ","\n\n + ","= * "]}," WebMock NetConnectNotAllowedError request_stubs":{"type":"method","name":"request_stubs","children":[],"call":["text << ","WebMock StubRequestSnippet  new to_s ","WebMock StubRequestSnippet  new ","WebMock StubRegistry  instance request_stubs each ","WebMock StubRegistry  instance request_stubs ","WebMock StubRegistry  instance ","WebMock StubRegistry  instance request_stubs empty? "]}," WebMock Deprecation warning":{"type":"method","name":"warning","children":[],"call":[" warn "]}," WebMock CallbackRegistry any_callbacks?":{"type":"method","name":"any_callbacks?","children":[],"call":[]}," WebMock CallbackRegistry reset":{"type":"method","name":"reset","children":[],"call":[]}," WebMock CallbackRegistry invoke_callbacks":{"type":"method","name":"invoke_callbacks","children":[],"call":[]}," WebMock CallbackRegistry callbacks":{"type":"method","name":"callbacks","children":[],"call":[]}," WebMock CallbackRegistry add_callback":{"type":"method","name":"add_callback","children":[],"call":[]}," WebMock AssertionFailure failure":{"type":"method","name":"failure","children":[],"call":[" raise ","@error_class new "]}," WebMock API assert_request_not_requested":{"type":"method","name":"assert_request_not_requested","children":[],"call":["WebMock AssertionFailure  failure ","verifier negative_failure_message ","verifier does_not_match? ","WebMock RequestExecutionVerifier  new ","options delete ","verifier failure_message_when_negated ","WebMock RequestExecutionVerifier  new  negative_failure_message ","WebMock RequestExecutionVerifier  new  does_not_match? ","WebMock RequestExecutionVerifier  new  failure_message_when_negated "]}," WebMock API assert_request_requested":{"type":"method","name":"assert_request_requested","children":[],"call":["WebMock AssertionFailure  failure ","verifier failure_message ","verifier matches? ","WebMock RequestExecutionVerifier  new ","options delete ","at_most_times nil? ","at_least_times nil? ","times nil? ","WebMock RequestExecutionVerifier  new  failure_message ","WebMock RequestExecutionVerifier  new  matches? ","options delete  nil? ","at_most_options delete  nil? ","at_least_options delete  nil? "]}," WebMock API convert_uri_method_and_options_to_request_and_options":{"type":"method","name":"convert_uri_method_and_options_to_request_and_options","children":[],"call":["args [] ","WebMock RequestPattern  new with ","WebMock RequestPattern  new ","request with ","options_for_pattern delete ","(sym :times) each ","options dup ","WebMock RequestPattern  new with  with ","request with  with ","WebMock RequestPattern  new  with ","options dup  delete "]}," WebMock API remove_request_stub":{"type":"method","name":"remove_request_stub","children":[],"call":["WebMock StubRegistry  instance remove_request_stub ","WebMock StubRegistry  instance "]}," WebMock API hash_including":{"type":"method","name":"hash_including","children":[],"call":["WebMock Matchers HashIncludingMatcher  new ","Spec Mocks ArgumentMatchers HashIncludingMatcher  new ","RSpec Mocks ArgumentMatchers HashIncludingMatcher  new "," anythingize_lonely_keys "]}," WebMock API assert_not_requested":{"type":"method","name":"assert_not_requested","children":[],"call":[" assert_request_not_requested "," raise "," convert_uri_method_and_options_to_request_and_options ","args [] is_a? ! ","args [] is_a? ","args [] ","WebMock AssertionFailure  failure ","verifier negative_failure_message ","verifier does_not_match? ","WebMock RequestExecutionVerifier  new ","options delete ","WebMock RequestPattern  new with ","WebMock RequestPattern  new "," assert_WebMock RequestPattern  new with _not_WebMock RequestPattern  new with ed "," convert_uri_method_and_options_to_WebMock RequestPattern  new with _and_options "," convert_uri_method_and_options_to_request_and_options  [] is_a? ! "," convert_uri_method_and_options_to_request_and_options  [] is_a? "," convert_uri_method_and_options_to_request_and_options  [] ","WebMock RequestExecutionVerifier  new  negative_failure_message ","WebMock RequestExecutionVerifier  new  does_not_match? "]}," WebMock API assert_requested":{"type":"method","name":"assert_requested","children":[],"call":[" assert_request_requested "," raise "," convert_uri_method_and_options_to_request_and_options ","args [] is_a? ! ","args [] is_a? ","args [] ","WebMock AssertionFailure  failure ","verifier failure_message ","verifier matches? ","WebMock RequestExecutionVerifier  new ","WebMock RequestPattern  new with ","WebMock RequestPattern  new ","options delete "," assert_WebMock RequestPattern  new with _WebMock RequestPattern  new with ed "," convert_uri_method_and_options_to_WebMock RequestPattern  new with _and_options "," convert_uri_method_and_options_to_request_and_options  [] is_a? ! "," convert_uri_method_and_options_to_request_and_options  [] is_a? "," convert_uri_method_and_options_to_request_and_options  [] ","WebMock RequestExecutionVerifier  new  failure_message ","WebMock RequestExecutionVerifier  new  matches? "]}," WebMock API a_request":{"type":"method","name":"a_request","children":[],"call":["WebMock RequestPattern  new "]}," WebMock API stub_request":{"type":"method","name":"stub_request","children":[],"call":["WebMock StubRegistry  instance register_request_stub ","WebMock RequestStub  new ","WebMock StubRegistry  instance ","WebMock RequestRegistry  instance register_request_stub ","WebMock RequestRegistry  instance "]}," new":{"type":"method","name":"new","children":[],"call":[]}," WebMock HttpLibAdapters ExconAdapter scrub_params_from":{"type":"method","name":"scrub_params_from","children":[],"call":[]}," WebMock HttpLibAdapters ExconAdapter new_excon_connection":{"type":"method","name":"new_excon_connection","children":[],"call":[]}," WebMock HttpLibAdapters ExconAdapter handle_request":{"type":"method","name":"handle_request","children":[],"call":[]}," WebMock HttpLibAdapters ExconAdapter remove_excon_stub":{"type":"method","name":"remove_excon_stub","children":[],"call":[]}," WebMock HttpLibAdapters ExconAdapter add_excon_stub":{"type":"method","name":"add_excon_stub","children":[],"call":[]}," WebMock net_connect_explicit_allowed?":{"type":"method","name":"net_connect_explicit_allowed?","children":[],"call":[]}," WebMock RackResponse session_options":{"type":"method","name":"session_options","children":[],"call":[]}," WebMock HttpLibAdapters NetHttpAdapter start_with_connect_without_finish":{"type":"method","name":"start_with_connect_without_finish","children":[],"call":[" do_start "," block_given? "]}," WebMock HttpLibAdapters ExconAdapter request_params_from":{"type":"method","name":"request_params_from","children":[],"call":[]}," WebMock HttpLibAdapters ExconAdapter connection_params_from":{"type":"method","name":"connection_params_from","children":[],"call":[]}," WebMock Matchers AnyArgMatcher ==":{"type":"method","name":"==","children":[],"call":[]}," WebMock Matchers AnyArgMatcher initialize":{"type":"method","name":"initialize","children":[],"call":[]}," MessageMock http_version=":{"type":"method","name":"http_version=","children":[],"call":[]}," MessageMock initialize":{"type":"method","name":"initialize","children":[],"call":[]}," headers_from_session":{"type":"method","name":"headers_from_session","children":[],"call":["hdrs []= ","header [] ","session_headers all inject ","session_headers all ","@session_manager send send ","MessageMock  new ","@session_manager send ","HTTP Message Headers  new ","HTTP Message Headers  new  all inject ","HTTP Message Headers  new  all "]}," WebMock API anythingize_lonely_keys":{"type":"method","name":"anythingize_lonely_keys","children":[],"call":["hash []= ","WebMock Matchers AnyArgMatcher  new ","args each ","args delete_at ","args last class == ","args last class ","args last ","args delete_at  []= "]}," HTTP webmock_enabled?":{"type":"method","name":"webmock_enabled?","children":[],"call":[]}," HTTP disable_webmock!":{"type":"method","name":"disable_webmock!","children":[],"call":[]}," HTTP enable_webmock!":{"type":"method","name":"enable_webmock!","children":[],"call":[]}," HTTP Client perform":{"type":"method","name":"perform","children":[],"call":["(send\n  (const nil :WebMockPerform) :new\n  (lvar :request)) exec "," __perform__ ","WebMockPerform  new "," HTTP  webmock_enabled? "," webmock_enabled? ","feature wrap_response ","options features each ","options features ","(send\n  (const nil :WebMockPerform) :new\n  (lvar :request)\n  (lvar :options)) exec ","feature wrap_feature wrap_response  ","feature wrap_(send\n  (const nil :WebMockPerform) :new\n  (lvar :request)) exec  "]}," HTTP WebMockPerform invoke_callbacks":{"type":"method","name":"invoke_callbacks","children":[],"call":[" WebMock CallbackRegistry  invoke_callbacks "," request_signature ","options merge "]}," HTTP WebMockPerform halt":{"type":"method","name":"halt","children":[],"call":[" raise "," WebMock NetConnectNotAllowedError  new "," request_signature "]}," HTTP WebMockPerform perform":{"type":"method","name":"perform","children":[],"call":[" invoke_callbacks ","response to_webmock ","@perform call "," WebMock  net_connect_allowed? "," request_signature uri "," request_signature ","@perform call  to_webmock "]}," HTTP WebMockPerform replay":{"type":"method","name":"replay","children":[],"call":[" HTTP Response  from_webmock "," invoke_callbacks ","webmock_response raise_error_if_any "," raise ","webmock_response should_timeout "," response_for_request "," request_signature "," raise_timeout_error ","feature wrap_response ","@options features each ","@options features "," response_for_request  raise_error_if_any ","webmock_feature wrap_response  raise_error_if_any ","webmock_ HTTP Response  from_webmock  raise_error_if_any "," response_for_request  should_timeout ","webmock_feature wrap_response  should_timeout ","webmock_ HTTP Response  from_webmock  should_timeout "," feature wrap_response _for_request ","  HTTP Response  from_webmock _for_request ","feature wrap_feature wrap_response  ","feature wrap_ HTTP Response  from_webmock  "]}," HTTP WebMockPerform register_request":{"type":"method","name":"register_request","children":[],"call":[" WebMock RequestRegistry  instance requested_signatures put "," WebMock RequestRegistry  instance requested_signatures "," WebMock RequestRegistry  instance "]}," HTTP WebMockPerform response_for_request":{"type":"method","name":"response_for_request","children":[],"call":[" WebMock StubRegistry  instance response_for_request "," WebMock StubRegistry  instance "]}," HTTP WebMockPerform request_signature":{"type":"method","name":"request_signature","children":[],"call":[" register_request ","@request webmock_signature "]}," HTTP WebMockPerform exec":{"type":"method","name":"exec","children":[],"call":[" halt "," perform "," replay "]}," HTTP WebMockPerform initialize":{"type":"method","name":"initialize","children":[],"call":[]}," HTTP Response from_webmock":{"type":"method","name":"from_webmock","children":[],"call":[" new ","HTTP VERSION  < "," normalize_uri ","request_signature uri ","Body  new ","Streamer  new ","webmock_response body ","webmock_response headers ","Status  new ","webmock_response status first ","webmock_response status ","webmock_response body encoding "," normalize_ normalize_uri  ","request_signature  normalize_uri  ","webmock_response Body  new  ","webmock_response Status  new  first ","webmock_response Status  new  ","webmock_response Body  new  encoding "]}," HTTP Response to_webmock":{"type":"method","name":"to_webmock","children":[],"call":["webmock_response headers= "," headers ","webmock_response body= "," body ","webmock_response status= "," reason "," status "," WebMock Response  new "," body to_s "," headers to_h "," status to_i "," WebMock Response  new  headers= "," WebMock Response  new  body= "," WebMock Response  new  status= "]}," HTTP Request webmock_signature":{"type":"method","name":"webmock_signature","children":[],"call":[" WebMock RequestSignature  new "," body "," headers "," uri to_s "," uri "," method "," headers to_h "," verb ","string << "," body each "," tap ","String  new tap ","String  new "]}," WebMock HttpLibAdapters HttpGemAdapter disable!":{"type":"method","name":"disable!","children":[],"call":[]}," WebMock HttpLibAdapters HttpGemAdapter enable!":{"type":"method","name":"enable!","children":[],"call":[]}," Curl WebMockCurlEasy chunked_response?":{"type":"method","name":"chunked_response?","children":[],"call":[" body_str respond_to? "," body_str ","@transfer_encoding == "]}," WebMock WebMockMatcher failure_message_when_negated":{"type":"method","name":"failure_message_when_negated","children":[],"call":["@request_execution_verifier failure_message_when_negated "]}," WebMock RequestPatternMatcher failure_message_when_negated":{"type":"method","name":"failure_message_when_negated","children":[],"call":["@request_execution_verifier failure_message_when_negated "]}," WebMock RequestExecutionVerifier failure_message_when_negated":{"type":"method","name":"failure_message_when_negated","children":[],"call":["text << "," class executed_requests_message "," class "," times "," times_executed "," request_pattern to_s "," request_pattern "," expected_times_executed "," failure_message_phrase "]}," WebMock URIAddressablePattern to_s":{"type":"method","name":"to_s","children":[],"call":["@pattern variables inspect ","@pattern variables ","@pattern pattern inspect ","@pattern pattern "]}," WebMock URIAddressablePattern add_query_params":{"type":"method","name":"add_query_params","children":[],"call":[" warn ","@@add_query_params_warned ! "]}," WebMock URIAddressablePattern matches?":{"type":"method","name":"matches?","children":[],"call":["@query_params == ","WebMock Util QueryMapper  query_to_values ","uri query ","@query_params nil? ","@pattern match ","WebMock Util URI  variations_of_uri_as_strings any? ","WebMock Util URI  variations_of_uri_as_strings ","uri omit "," matches_with_variations? "]}," WebMock HttpLibAdapters HttpGemAdapter enabled?":{"type":"method","name":"enabled?","children":[],"call":[]}," HTTP Response Streamer readpartial":{"type":"method","name":"readpartial","children":[],"call":["@io read ","chunk force_encoding ","@io read  force_encoding "]}," HTTP Response Streamer initialize":{"type":"method","name":"initialize","children":[],"call":["StringIO  new "]}," HTTP Client webmock_enabled?":{"type":"method","name":"webmock_enabled?","children":[],"call":[" WebMock HttpLibAdapters HttpGemAdapter  enabled? "," WebMock HttpLibAdapters HttpRbAdapter  enabled? "]}," WebMock show_stubbing_instructions?":{"type":"method","name":"show_stubbing_instructions?","children":[],"call":[]}," WebMock show_stubbing_instructions!":{"type":"method","name":"show_stubbing_instructions!","children":[],"call":[]}," WebMock hide_stubbing_instructions!":{"type":"method","name":"hide_stubbing_instructions!","children":[],"call":[]}," Util QueryMapper to_query":{"type":"method","name":"to_query","children":[],"call":["Addressable URI  encode_component ","value to_s dup ","value to_s ","buffer chop ","buffer << "," to_query ","options [] != ","options [] ","value each_with_index ","value each ","value sort! "," Addressable URI  encode_component ","key dup ","value map ","key to_s dup ","key to_s "," dup "," dup  chop "," dup  << "]}," Util QueryMapper dehash":{"type":"method","name":"dehash","children":[],"call":["accu << ","hash sort inject ","hash sort ","key =~ ","hash keys all? ","hash keys ","hash != ","hash []= "," dehash ","value is_a? ","hash each "]}," Util QueryMapper fill_accumulator_for_subscript":{"type":"method","name":"fill_accumulator_for_subscript","children":[],"call":["current_node []= ","current_node [] << ","current_node [] ","current_node << ","container []= ","container [] << ","container [] ","n has_key? ","n is_a? ","current_node find ","current_node is_a? ","last_key gsub ","(send\n  (lvar :last_key) :=~\n  (regexp\n    (str \"\\\\[\\\\]$\")\n    (regopt))) ! ! ","(send\n  (lvar :last_key) :=~\n  (regexp\n    (str \"\\\\[\\\\]$\")\n    (regopt))) ! ","last_key =~ ","subkeys last ","subkey gsub ","subkey =~ ","subkeys [] each ","subkeys [] ","key split ","last_container []= ","last_container [] << ","last_container [] ","last_container has_key? ! ","last_container has_key? ","(send\n  (lvar :current_node) :select) last ","current_node select ","value nil? ","current_node []  []= ","container []  []= ","current_node []  [] << ","container []  [] << ","current_node []  [] ","container []  [] ","current_node []  << ","container []  << ","current_node []  find ","container []  find ","current_node []  is_a? ","container []  is_a? ","last_key gsub  gsub ","subkeys last  gsub ","(send\n  (lvar :last_key gsub ) :=~\n  (regexp\n    (str \"\\\\[\\\\]$\")\n    (regopt))) ! ! ","(send\n  (lvar :subkeys last ) :=~\n  (regexp\n    (str \"\\\\[\\\\]$\")\n    (regopt))) ! ! ","(send\n  (lvar :last_key gsub ) :=~\n  (regexp\n    (str \"\\\\[\\\\]$\")\n    (regopt))) ! ","(send\n  (lvar :subkeys last ) :=~\n  (regexp\n    (str \"\\\\[\\\\]$\")\n    (regopt))) ! ","last_key gsub  =~ ","subkeys last  =~ ","subkey gsub s last ","key split  last ","subkey gsub  gsub ","subkey gsub  =~ ","subkey gsub s [] each ","key split  [] each ","subkey gsub s [] ","key split  [] ","(send\n  (lvar :current_node) :select) last  []= ","(send\n  (lvar :current_node) :select) last  [] << ","(send\n  (lvar :current_node) :select) last  [] ","(send\n  (lvar :current_node) :select) last  has_key? ! ","(send\n  (lvar :current_node) :select) last  has_key? ","(send\n  (lvar :current_node [] ) :select) last ","(send\n  (lvar :container [] ) :select) last ","current_node []  select ","container []  select "]}," Util QueryMapper fill_accumulator_for_dot":{"type":"method","name":"fill_accumulator_for_dot","children":[],"call":["current_hash []= ","subkeys last ","current_hash [] << ","current_hash [] ","current_hash [] is_a? ! ","current_hash [] is_a? ","subkeys [] each ","subkeys [] ","key split ","current_hash []  []= ","key split  last ","current_hash []  [] << ","current_hash []  [] ","current_hash []  [] is_a? ! ","current_hash []  [] is_a? ","key split  [] each ","key split  [] "]}," Util QueryMapper fill_accumulator_for_flat_array":{"type":"method","name":"fill_accumulator_for_flat_array","children":[],"call":["accumulator << "]}," Util QueryMapper fill_accumulator_for_flat":{"type":"method","name":"fill_accumulator_for_flat","children":[],"call":["accumulator []= "," raise ","key inspect ","accumulator [] "]}," Util QueryMapper collect_query_hash":{"type":"method","name":"collect_query_hash","children":[],"call":[" __send__ ","options [] ","key dup force_encoding ","key dup ","key respond_to? ","Addressable URI  unencode_component "," Addressable URI  unencode_component ","value gsub ","value nil? ","query_array compact inject ","empty_accumulator dup ","query_array compact ","value tr ","key dup force_encoding  dup force_encoding ","Addressable URI  unencode_component  dup force_encoding ","key dup force_encoding  dup ","Addressable URI  unencode_component  dup ","key dup force_encoding  respond_to? ","Addressable URI  unencode_component  respond_to? "," Addressable URI  unencode_component  gsub "," Addressable URI  unencode_component  nil? "," Addressable URI  unencode_component  tr "]}," Util QueryMapper collect_query_parts":{"type":"method","name":"collect_query_parts","children":[],"call":["query_parts compact ","pair split ","pair empty? ! ","pair empty? ","query split map ","query split "]}," Util QueryMapper normalize_query_hash":{"type":"method","name":"normalize_query_hash","children":[],"call":["accumulator []= "," dehash ","value kind_of? ","accumulator << ","options [] == ","options [] ","query_hash inject ","empty_accumulator dup "]}," EventMachine WebMockHttpClient get_response_cookie":{"type":"method","name":"get_response_cookie","children":[],"call":["cookie split [] ","cookie split ","(send\n  (lvar :raw_cookie) :select) first ","c start_with? ","raw_cookie select ","raw_cookie is_a? "," response_header cookie "," response_header ","name to_s ","(send\n  (lvar :raw_cookie) :select) first  split [] ","(send\n  (lvar :raw_cookie) :select) first  split ","(send\n  (lvar :raw_(send\n  (lvar :raw_cookie) :select) first ) :select) first ","(send\n  (lvar : response_header cookie ) :select) first ","raw_(send\n  (lvar :raw_cookie) :select) first  select "," response_header cookie  select ","raw_(send\n  (lvar :raw_cookie) :select) first  is_a? "," response_header cookie  is_a? "," response_header (send\n  (lvar :raw_cookie) :select) first  ","name to_s  to_s "]}," WebMock Config initialize":{"type":"method","name":"initialize","children":[],"call":[]}," WebMock RequestPatternMatcher at_most_times":{"type":"method","name":"at_most_times","children":[],"call":["@request_execution_verifier at_most_times_executed= ","times to_i "]}," WebMock RequestPatternMatcher at_most_twice":{"type":"method","name":"at_most_twice","children":[],"call":["@request_execution_verifier at_most_times_executed= "]}," WebMock RequestPatternMatcher at_most_once":{"type":"method","name":"at_most_once","children":[],"call":["@request_execution_verifier at_most_times_executed= "]}," WebMock RequestPatternMatcher at_least_times":{"type":"method","name":"at_least_times","children":[],"call":["@request_execution_verifier at_least_times_executed= ","times to_i "]}," WebMock RequestPatternMatcher at_least_twice":{"type":"method","name":"at_least_twice","children":[],"call":["@request_execution_verifier at_least_times_executed= "]}," WebMock RequestPatternMatcher at_least_once":{"type":"method","name":"at_least_once","children":[],"call":["@request_execution_verifier at_least_times_executed= "]}," WebMock Response assert_valid_body!":{"type":"method","name":"assert_valid_body!","children":[],"call":[" raise ","@body class ","@body is_a? ","valid_types any? ","@body nil? ","@body class is_a? "]}," WebMock HashValidator validate_keys":{"type":"method","name":"validate_keys","children":[],"call":[" raise ","ArgumentError  new ","valid_keys map join ","valid_keys map ","k inspect ","valid_keys include? ","@hash each_key ","valid_keys flatten! "]}," WebMock HashValidator initialize":{"type":"method","name":"initialize","children":[],"call":[]}," WebMock HttpLibAdapters HttpRbAdapter enabled?":{"type":"method","name":"enabled?","children":[],"call":[]}," WebMock HttpLibAdapters HttpRbAdapter disable!":{"type":"method","name":"disable!","children":[],"call":[]}," WebMock HttpLibAdapters HttpRbAdapter enable!":{"type":"method","name":"enable!","children":[],"call":[]}," HTTP Response Streamer sequence_id":{"type":"method","name":"sequence_id","children":[],"call":[]}," WebMock show_body_diff?":{"type":"method","name":"show_body_diff?","children":[],"call":[]}," WebMock hide_body_diff!":{"type":"method","name":"hide_body_diff!","children":[],"call":[]}," WebMock show_body_diff!":{"type":"method","name":"show_body_diff!","children":[],"call":[]}," WebMock StubRequestSnippet body_pattern":{"type":"method","name":"body_pattern","children":[],"call":[" request_pattern body_pattern "," request_pattern "]}," WebMock WebMockMatcher description":{"type":"method","name":"description","children":[],"call":["@request_execution_verifier description "]}," WebMock RequestPatternMatcher description":{"type":"method","name":"description","children":[],"call":["@request_execution_verifier description "]}," WebMock RequestSignatureSnippet pretty_print_to_string":{"type":"method","name":"pretty_print_to_string","children":[],"call":["stream read ","stream rewind ","PP  pp ","StringIO  open "," dup "]}," WebMock RequestSignatureSnippet request_params":{"type":"method","name":"request_params","children":[],"call":["JSON  parse "," request_signature body "," request_signature "," request_signature json_headers? "]}," WebMock RequestSignatureSnippet signature_stub_body_diff":{"type":"method","name":"signature_stub_body_diff","children":[],"call":[" pretty_print_to_string ","diff empty? ","RequestBodyDiff  new body_diff ","RequestBodyDiff  new "," request_signature ","RequestBodyDiff  new body_diff  empty? ","RequestBodyDiff  new body_RequestBodyDiff  new body_diff  "]}," WebMock RequestSignatureSnippet add_body_diff":{"type":"method","name":"add_body_diff","children":[],"call":["text << ","body_diff_str empty? "," signature_stub_body_diff "," signature_stub_body_diff  empty? "]}," WebMock RequestSignatureSnippet request_stubs":{"type":"method","name":"request_stubs","children":[],"call":[" add_body_diff ","WebMock  show_body_diff? ","text << ","WebMock StubRequestSnippet  new to_s ","WebMock StubRequestSnippet  new ","WebMock StubRegistry  instance request_stubs each ","WebMock StubRegistry  instance request_stubs ","WebMock StubRegistry  instance ","WebMock StubRegistry  instance request_stubs empty? ","registered request stubs:\n dup ","registered request stubs:\n dup  << "]}," WebMock RequestSignatureSnippet stubbing_instructions":{"type":"method","name":"stubbing_instructions","children":[],"call":["text << ","WebMock StubRequestSnippet  new to_s ","WebMock StubRequestSnippet  new "," request_stub ","WebMock  show_stubbing_instructions? ","You can stub this request with the following snippet:\n\n + "]}," WebMock RequestSignatureSnippet initialize":{"type":"method","name":"initialize","children":[],"call":["RequestStub  from_request_signature "]}," WebMock RequestSignature json_headers?":{"type":"method","name":"json_headers?","children":[],"call":["(and\n  (send nil :headers)\n  (send\n    (send\n      (send nil :headers) :[]\n      (str \"Content-Type\")) :==\n    (str \"application/json\"))) ! ! ","(and\n  (send nil :headers)\n  (send\n    (send\n      (send nil :headers) :[]\n      (str \"Content-Type\")) :==\n    (str \"application/json\"))) ! "," headers [] == "," headers [] "," headers ","(csend\n  (csend\n    (send nil :headers) :fetch\n    (str \"Content-Type\")\n    (nil)) :start_with?\n  (str \"application/json\")) ! ! ","(csend\n  (csend\n    (send nil :headers) :fetch\n    (str \"Content-Type\")\n    (nil)) :start_with?\n  (str \"application/json\")) ! ","(and\n  (send nil :headers)\n  (send\n    (send\n      (send nil :headers) :fetch\n      (str \"Content-Type\")\n      (str \"\")) :start_with?\n    (str \"application/json\"))) ! ! ","(and\n  (send nil :headers)\n  (send\n    (send\n      (send nil :headers) :fetch\n      (str \"Content-Type\")\n      (str \"\")) :start_with?\n    (str \"application/json\"))) ! "," headers fetch start_with? "," headers fetch "]}," WebMock RequestExecutionVerifier quantity_phrase":{"type":"method","name":"quantity_phrase","children":[],"call":[" times "]}," WebMock RequestExecutionVerifier failure_message_phrase":{"type":"method","name":"failure_message_phrase","children":[],"call":["text << "," class executed_requests_message "," class "," times "," times_executed "," quantity_phrase "," request_pattern to_s "," request_pattern ","(str \"The request \") + "]}," WebMock RequestExecutionVerifier description":{"type":"method","name":"description","children":[],"call":[" quantity_phrase strip "," quantity_phrase "," request_pattern to_s "," request_pattern "]}," WebMock RequestBodyDiff parseable_json?":{"type":"method","name":"parseable_json?","children":[],"call":["JSON  parse ","body_pattern is_a? "]}," WebMock RequestBodyDiff request_stub_parseable_json?":{"type":"method","name":"request_stub_parseable_json?","children":[],"call":[" parseable_json? "," request_stub_body "]}," WebMock RequestBodyDiff request_signature_parseable_json?":{"type":"method","name":"request_signature_parseable_json?","children":[],"call":[" parseable_json? "," request_signature body "," request_signature "]}," WebMock RequestBodyDiff request_stub_body":{"type":"method","name":"request_stub_body","children":[],"call":[" request_stub request_pattern body_pattern pattern "," request_stub request_pattern body_pattern "," request_stub request_pattern "," request_stub "]}," WebMock RequestBodyDiff request_stub_body_hash":{"type":"method","name":"request_stub_body_hash","children":[],"call":["JSON  parse "," request_stub_body "," request_stub_body is_a? "]}," WebMock RequestBodyDiff request_signature_body_hash":{"type":"method","name":"request_signature_body_hash","children":[],"call":["JSON  parse "," request_signature body "," request_signature "]}," WebMock RequestBodyDiff request_stub_diffable?":{"type":"method","name":"request_stub_diffable?","children":[],"call":[" request_stub_parseable_json? "," request_stub_body is_a? "," request_stub_body "]}," WebMock RequestBodyDiff request_signature_diffable?":{"type":"method","name":"request_signature_diffable?","children":[],"call":[" request_signature_parseable_json? "," request_signature json_headers? "," request_signature "]}," WebMock RequestBodyDiff body_diff":{"type":"method","name":"body_diff","children":[],"call":["HashDiff  diff "," request_stub_body_hash "," request_signature_body_hash "," request_stub_diffable? "," request_signature_diffable? ","Hashdiff  diff "]}," WebMock RequestBodyDiff initialize":{"type":"method","name":"initialize","children":[],"call":[]}," WebMock NetHTTPUtility validate_headers":{"type":"method","name":"validate_headers","children":[],"call":[]}," WebMock HttpLibAdapters ManticoreAdapter WebMockManticoreClient generate_webmock_response":{"type":"method","name":"generate_webmock_response","children":[],"call":["webmock_response headers= ","manticore_response headers ","webmock_response body= ","manticore_response body ","webmock_response status= ","manticore_response message ","manticore_response code ","WebMock Response  new ","WebMock Response  new  headers= ","WebMock Response  new  body= ","WebMock Response  new  status= "]}," WebMock HttpLibAdapters ManticoreAdapter WebMockManticoreClient generate_manticore_response":{"type":"method","name":"generate_manticore_response","children":[],"call":["Manticore StubbedResponse  stub ","webmock_response headers ","webmock_response body ","webmock_response status [] ","webmock_response status "," raise ","webmock_response should_timeout ","StubbedTimeoutResponse  new "]}," WebMock HttpLibAdapters ManticoreAdapter WebMockManticoreClient split_array_values":{"type":"method","name":"split_array_values","children":[],"call":["h []= ","v split map ","v split ","headers each_with_object "]}," WebMock HttpLibAdapters ManticoreAdapter WebMockManticoreClient read_body":{"type":"method","name":"read_body","children":[],"call":["Manticore EntityConverter  new read_entity ","request entity ","Manticore EntityConverter  new ","request entity nil? ! ","request entity nil? ","request respond_to? "]}," WebMock HttpLibAdapters ManticoreAdapter WebMockManticoreClient generate_webmock_request_signature":{"type":"method","name":"generate_webmock_request_signature","children":[],"call":["WebMock RequestSignature  new "," split_array_values ","request headers "," read_body ","request uri to_s ","request uri ","request method downcase ","request method ","headers []= ","WebMock Util Headers  basic_auth_header ","credentials get_password ","credentials get_user_name ","context get_credentials_provider get_credentials ","context get_credentials_provider ","request  split_array_values  "," read_ read_body  ","request request uri to_s  to_s ","request request uri to_s  ","request request method downcase  downcase ","request request method downcase  "," split_array_values  []= ","context get_credentials_provider get_credentials  get_password ","context get_credentials_provider get_credentials  get_user_name ","context get_context get_credentials_provider get_credentials _provider get_context get_credentials_provider get_credentials  ","context get_context get_credentials_provider get_credentials _provider "]}," WebMock HttpLibAdapters ManticoreAdapter WebMockManticoreClient real_request_allowed?":{"type":"method","name":"real_request_allowed?","children":[],"call":["WebMock  net_connect_allowed? "]}," WebMock HttpLibAdapters ManticoreAdapter WebMockManticoreClient registered_response_for":{"type":"method","name":"registered_response_for","children":[],"call":["WebMock StubRegistry  instance response_for_request ","WebMock StubRegistry  instance "]}," WebMock HttpLibAdapters ManticoreAdapter WebMockManticoreClient response_object_for":{"type":"method","name":"response_object_for","children":[],"call":["WebMock CallbackRegistry  invoke_callbacks "," raise ","WebMock NetConnectNotAllowedError  new "," generate_webmock_response ","Manticore Response  new call ","Manticore Response  new "," real_request_allowed? ","request_signature uri "," generate_manticore_response call "," generate_manticore_response ","webmock_response raise_error_if_any "," registered_response_for ","WebMock RequestRegistry  instance requested_signatures put ","WebMock RequestRegistry  instance requested_signatures ","WebMock RequestRegistry  instance "," generate_webmock_request_signature ","manticore_response on_complete ","manticore_response on_success "," generate_ generate_webmock_response  "," generate_ registered_response_for  "," generate_webmock_request_signature  uri "," generate_Manticore Response  new call  call "," generate_ generate_manticore_response call  call "," generate_Manticore Response  new  call "," generate_ generate_manticore_response  call "," generate_Manticore Response  new call  "," generate_ generate_manticore_response call  "," generate_Manticore Response  new  "," generate_ generate_manticore_response  "," generate_webmock_response  raise_error_if_any "," registered_response_for  raise_error_if_any "," generate_webmock_ generate_webmock_request_signature  ","Manticore Response  new call  on_complete "," generate_manticore_response call  on_complete ","Manticore Response  new  on_complete "," generate_manticore_response  on_complete ","Manticore Response  new call  on_success "," generate_manticore_response call  on_success ","Manticore Response  new  on_success "," generate_manticore_response  on_success "]}," WebMock HttpLibAdapters ManticoreAdapter WebMockManticoreClient join_array_values":{"type":"method","name":"join_array_values","children":[],"call":["h merge ","v join ","v is_a? ","headers reduce ","v join  join ","v join  is_a? "]}," WebMock HttpLibAdapters ManticoreAdapter WebMockManticoreClient format_options":{"type":"method","name":"format_options","children":[],"call":["options merge "," join_array_values ","options [] "]}," WebMock HttpLibAdapters ManticoreAdapter WebMockManticoreClient request":{"type":"method","name":"request","children":[],"call":[" format_options ","WebMock Util URI  normalize_uri to_s ","WebMock Util URI  normalize_uri "]}," WebMock HttpLibAdapters ManticoreAdapter disable!":{"type":"method","name":"disable!","children":[],"call":[]}," WebMock HttpLibAdapters ManticoreAdapter enable!":{"type":"method","name":"enable!","children":[],"call":[]}," EventMachine WebMockHttpConnection drop_client":{"type":"method","name":"drop_client","children":[],"call":["@clients shift "]}," PatchedStringIO read_nonblock":{"type":"method","name":"read_nonblock","children":[],"call":[" orig_read_nonblock ","arg is_a? ! ","arg is_a? ","args reject! "]}," WebMockHTTPClients build_httpclient_response":{"type":"method","name":"build_httpclient_response","children":[],"call":["block call ","webmock_response raise_error_if_any "," raise ","webmock_response should_timeout ","response header set ","response header ","webmock_response headers to_a each ","webmock_response headers to_a ","webmock_response headers ","response reason= ","webmock_response status [] ","webmock_response status ","response header init_response ","HTTP Message  new_response ","webmock_response body ","StringIO  new ","body bytesize > ","body bytesize ","webmock_HTTP Message  new_response  raise_error_if_any ","webmock_HTTP Message  new_response  should_timeout ","HTTP Message  new_response  header set ","HTTP Message  new_response  header ","webmock_HTTP Message  new_response  headers to_a each ","webmock_HTTP Message  new_response  headers to_a ","webmock_HTTP Message  new_response  headers ","HTTP Message  new_response  reason= ","webmock_HTTP Message  new_response  status [] ","webmock_HTTP Message  new_response  status ","HTTP Message  new_response  header init_HTTP Message  new_response  ","HTTP Message  new_HTTP Message  new_response  ","webmock_HTTP Message  new_response  body ","webmock_response webmock_response body  ","webmock_response StringIO  new  ","webmock_response body  bytesize > ","StringIO  new  bytesize > ","webmock_response body  bytesize ","StringIO  new  bytesize "]}," WebMockHTTPClients do_request_async":{"type":"method","name":"do_request_async","children":[],"call":[" raise ","WebMock NetConnectNotAllowedError  new ","WebMock  net_connect_allowed? ","request_signature uri "," webmock_responses [] "," webmock_responses "," webmock_request_signatures << "," webmock_request_signatures "," build_request_signature "," create_request "," synchronize_request_response "," build_request_signature  uri "," create_request uest_signature uri "," webmock_ build_request_signature s << "," webmock_ create_request uest_signatures << "," webmock_ build_request_signature s "," webmock_ create_request uest_signatures "," build_ build_request_signature  "," build_ create_request uest_signature "," create_ create_request uest "," synchronize_ create_request uest_response "]}," WebMockHTTPClients do_get":{"type":"method","name":"do_get","children":[],"call":[" raise ","WebMock NetConnectNotAllowedError  new ","WebMock CallbackRegistry  invoke_callbacks "," build_webmock_response ","WebMock CallbackRegistry  any_callbacks? ","conn push ","conn pop "," do_get_block_without_webmock "," do_get_stream_without_webmock "," webmock_responses delete "," webmock_responses ","WebMock  net_connect_allowed? ","request_signature uri ","filter filter_response ","@request_filter each "," build_httpclient_response ","req header "," webmock_responses [] ","WebMock RequestRegistry  instance requested_signatures put ","WebMock RequestRegistry  instance requested_signatures ","WebMock RequestRegistry  instance "," build_request_signature ","block call ","chunk bytesize > ","chunk bytesize "," synchronize_request_response "," build_ build_webmock_response  "," build_ webmock_responses delete  "," build_webmock_conn pop ponse "," build_webmock_ do_get_block_without_webmock ponse "," build_webmock_ do_get_stream_without_webmock ponse "," build_webmock_conn push ponse "," build_webmock_ build_httpclient_response  ","  build_webmock_response s delete ","  webmock_responses delete s delete "," webmock_conn pop ponses delete "," webmock_ do_get_block_without_webmock ponses delete "," webmock_ do_get_stream_without_webmock ponses delete "," webmock_conn push ponses delete "," webmock_ build_httpclient_response s delete ","  build_webmock_response s ","  webmock_responses delete s "," webmock_conn pop ponses "," webmock_ do_get_block_without_webmock ponses "," webmock_ do_get_stream_without_webmock ponses "," webmock_conn push ponses "," webmock_ build_httpclient_response s "," build_request_signature  uri ","filter filter_conn pop ponse ","filter filter_ do_get_block_without_webmock ponse ","filter filter_ do_get_stream_without_webmock ponse ","filter filter_conn push ponse ","filter filter_ build_httpclient_response  "," build_httpclient_conn pop ponse "," build_httpclient_ do_get_block_without_webmock ponse "," build_httpclient_ do_get_stream_without_webmock ponse "," build_httpclient_conn push ponse "," build_httpclient_ build_httpclient_response  ","  build_webmock_response s [] ","  webmock_responses delete s [] "," webmock_conn pop ponses [] "," webmock_ do_get_block_without_webmock ponses [] "," webmock_ do_get_stream_without_webmock ponses [] "," webmock_conn push ponses [] "," webmock_ build_httpclient_response s [] ","WebMock RequestRegistry  instance requested_signatuconn pop  put ","WebMock RequestRegistry  instance requested_signatu do_get_block_without_webmock  put ","WebMock RequestRegistry  instance requested_signatu do_get_stream_without_webmock  put ","WebMock RequestRegistry  instance requested_signatuconn push  put ","WebMock RequestRegistry  instance requested_signatuconn pop  ","WebMock RequestRegistry  instance requested_signatu do_get_block_without_webmock  ","WebMock RequestRegistry  instance requested_signatu do_get_stream_without_webmock  ","WebMock RequestRegistry  instance requested_signatuconn push  "," build_ build_request_signature  "," synchronize_request_conn pop ponse "," synchronize_request_ do_get_block_without_webmock ponse "," synchronize_request_ do_get_stream_without_webmock ponse "," synchronize_request_conn push ponse "," synchronize_request_ build_httpclient_response  "]}," WebMockHTTPClients do_get_stream":{"type":"method","name":"do_get_stream","children":[],"call":[" do_get "]}," WebMockHTTPClients do_get_block":{"type":"method","name":"do_get_block","children":[],"call":[" do_get "]}," HTTP WebMockPerform raise_timeout_error":{"type":"method","name":"raise_timeout_error","children":[],"call":[" raise ","Errno ETIMEDOUT  new ","HTTP VERSION  < "]}," HTTP Response normalize_uri":{"type":"method","name":"normalize_uri","children":[],"call":["uri port= ","uri port == ","uri default_port ","uri port ","URI  parse ","Addressable URI  parse ","URI  parse  port= ","Addressable URI  parse  port= ","URI  parse  port == ","Addressable URI  parse  port == ","URI  parse  default_port ","Addressable URI  parse  default_port ","URI  parse  port ","Addressable URI  parse  port "]}," WebMock VersionChecker warn_about_unsupported_version":{"type":"method","name":"warn_about_unsupported_version","children":[],"call":[" warn_in_red ","(str \"You are using \") + + "," version_requirement ","(str \"You are using \") + "]}," WebMock VersionChecker unsupported_version?":{"type":"method","name":"unsupported_version?","children":[],"call":["@unsupported_versions include? "]}," auth_cred_from_headers":{"type":"method","name":"auth_cred_from_headers","children":[],"call":["v =~ ","v each ","v is_a? ","k =~ ","headers each "]}," auth_cred_from_www_auth":{"type":"method","name":"auth_cred_from_www_auth","children":[],"call":["auth get ","auth scheme == ","auth scheme ","auth challenge ","req header request_uri ","req header "," www_auth basic_auth "," www_auth "," www_auth basic_auth  get "," www_auth basic_auth  scheme == "," www_auth basic_auth  scheme "," www_auth basic_auth  challenge "," www_ www_auth basic_auth  basic_ www_auth basic_auth  "," www_ www_auth basic_auth  "]}," remove_authorization_header":{"type":"method","name":"remove_authorization_header","children":[],"call":["v =~ ","v is_a? ","v length == ","v length ","v reject! ","k =~ ","headers reject! ","value =~ ","value is_a? ","value length == ","value length ","value reject! ","name =~ "]}," userinfo_from_auth_cred":{"type":"method","name":"userinfo_from_auth_cred","children":[],"call":["WebMock Util URI  encode_unsafe_chars_in_userinfo ","WebMock Util Headers  decode_userinfo_from_header ","WebMock Util URI  encode_unsafe_chars_in_WebMock Util Headers  decode_userinfo_from_header  ","WebMock Util Headers  decode_WebMock Util Headers  decode_userinfo_from_header _from_header "]}," WebMock BodyPattern assert_non_multipart_body":{"type":"method","name":"assert_non_multipart_body","children":[],"call":[" raise ","ArgumentError  new ","content_type =~ "]}," WebMock URIRegexpPattern add_query_params":{"type":"method","name":"add_query_params","children":[],"call":["Addressable URI  parse query_values ","Addressable URI  parse ","? + ","query_params is_a? "]}," Patron Session build_webmock_response":{"type":"method","name":"build_webmock_response","children":[],"call":["webmock_response headers= ","patron_response headers ","webmock_response body= ","patron_response body ","webmock_response status= ","patron_response status ","patron_response status_line scan [] [] ","patron_response status_line scan [] ","patron_response status_line scan ","patron_response status_line ","WebMock Response  new ","WebMock Response  new  headers= ","WebMock Response  new  body= ","WebMock Response  new  status= "]}," WebMock Net HTTPResponse read_body":{"type":"method","name":"read_body","children":[],"call":["@body << "," Net ReadAdapter  new ","dest << "," raise ","ArgumentError  new ","@body nil? ","block nil? ","dest nil? "," Net ReadAdapter  new  << "," Net ReadAdapter  new  nil? "]}," WebMock Net HTTPResponse extended":{"type":"method","name":"extended","children":[],"call":[]}," Net HTTP build_webmock_response":{"type":"method","name":"build_webmock_response","children":[],"call":["webmock_response body= ","net_http_response body ","webmock_response headers= ","net_http_response to_hash ","webmock_response status= ","net_http_response message ","net_http_response code to_i ","net_http_response code ","WebMock Response  new ","WebMock Response  new  body= ","WebMock Response  new  headers= ","WebMock Response  new  status= "]}," EventMachine HttpRequest make_raw_response":{"type":"method","name":"make_raw_response","children":[],"call":["response_string join ","response_string << << ","response_string << ","value join ","value is_a? ","headers each ","status [] ","response body ","response headers ","response status ","response raise_error_if_any ","value join  join ","value join  is_a? "]}," EventMachine HttpRequest build_request_signature":{"type":"method","name":"build_request_signature","children":[],"call":["WebMock RequestSignature  new ","@options [] ","@uri to_s ","@method downcase to_sym ","@method downcase ","@uri query_values= ","(or\n  (send\n    (ivar :@uri) :query_values)\n  (hash)) merge ","@uri query_values ","@uri userinfo= ","k to_s == ","k to_s ","@options reject! ","WebMock Util URI  encode_unsafe_chars_in_userinfo ","auth join ","options [] ","uri to_s ","method downcase to_sym ","method downcase ","uri query_values= ","(or\n  (send\n    (lvar :uri) :query_values)\n  (hash)) merge ","uri query_values ","uri userinfo= ","options reject! ","@req uri ","@req method ","@req options ","@@req options  [] ","@@req uri  to_s ","@@req method  downcase to_sym ","@@req method  downcase ","@@req uri  query_values= ","(or\n  (send\n    (ivar :@@req uri ) :query_values)\n  (hash)) merge ","@@req uri  query_values ","@uri WebMock Util URI  encode_unsafe_chars_in_userinfo = ","@uri auth join = ","@@req uri  userinfo= ","@@req options  reject! ","WebMock Util URI  encode_unsafe_chars_in_WebMock Util URI  encode_unsafe_chars_in_userinfo  ","WebMock Util URI  encode_unsafe_chars_in_auth join  ","@req options  [] ","@req uri  to_s ","@req method  downcase to_sym ","@req method  downcase ","@req uri  query_values= ","(or\n  (send\n    (lvar :@req uri ) :query_values)\n  (hash)) merge ","@req uri  query_values ","uri WebMock Util URI  encode_unsafe_chars_in_userinfo = ","uri auth join = ","@req uri  userinfo= ","@req options  reject! ","@req @req uri  ","@req @req method  ","@req @req options  "]}," EventMachine HttpRequest build_webmock_response":{"type":"method","name":"build_webmock_response","children":[],"call":["webmock_response body= ","http response ","webmock_response headers= ","http response_header ","webmock_response status= ","http response_header http_reason ","http response_header status ","WebMock Response  new ","WebMock Response  new  body= ","WebMock Response  new  headers= ","WebMock Response  new  status= "]}," EventMachine HttpRequest send_request_with_webmock":{"type":"method","name":"send_request_with_webmock","children":[],"call":[" raise ","WebMock NetConnectNotAllowedError  new ","WebMock CallbackRegistry  invoke_callbacks "," build_webmock_response ","WebMock CallbackRegistry  any_callbacks? ","http callback "," send_request_without_webmock ","WebMock  net_connect_allowed? ","request_signature uri ","client setup ","webmock_response should_timeout "," make_raw_response ","client on_error ","WebMockFakeHttpClient  new ","WebMock  response_for_request ","WebMock  registered_request? ","WebMock RequestRegistry  instance requested_signatures put ","WebMock RequestRegistry  instance requested_signatures ","WebMock RequestRegistry  instance "," build_request_signature ","WebMock RequestRegistry  instance response_for_request ","WebMock RequestRegistry  instance registered_request? "," build_ build_webmock_response  "," build_WebMock  response_for_request  "," build_WebMock RequestRegistry  instance response_for_request  "," send_request_without_webmock  callback "," build_request_signature  uri ","WebMockFakeHttpClient  new  setup "," build_webmock_response  should_timeout ","WebMock  response_for_request  should_timeout ","WebMock RequestRegistry  instance response_for_request  should_timeout ","WebMockFakeHttpClient  new  on_error "," build_ build_request_signature  "]}," EventMachine HttpRequest WebMockFakeHttpClient unbind":{"type":"method","name":"unbind","children":[],"call":[]}," EventMachine HttpRequest WebMockFakeHttpClient stream":{"type":"method","name":"stream","children":[],"call":["blk call "]}," EventMachine HttpRequest WebMockFakeHttpClient setup":{"type":"method","name":"setup","children":[],"call":[" succeed "," receive_data "," fail "," on_error ","EM  next_tick "]}," EventMachine HttpRequest WebMockFakeHttpClient close_connection":{"type":"method","name":"close_connection","children":[],"call":[]}," Curl Easy WebmockHelper parse_header_string":{"type":"method","name":"parse_header_string","children":[],"call":[]}," Curl Easy header_str_with_webmock":{"type":"method","name":"header_str_with_webmock","children":[],"call":[" header_str_without_webmock "]}," Curl Easy response_code_with_webmock":{"type":"method","name":"response_code_with_webmock","children":[],"call":[" response_code_without_webmock "]}," Curl Easy body_str_with_webmock":{"type":"method","name":"body_str_with_webmock","children":[],"call":[" body_str_without_webmock "]}," Curl Easy head_with_webmock=":{"type":"method","name":"head_with_webmock=","children":[],"call":[" head_without_webmock= "]}," Curl Easy delete_with_webmock=":{"type":"method","name":"delete_with_webmock=","children":[],"call":[" delete_without_webmock= "]}," Curl Easy post_body_with_webmock=":{"type":"method","name":"post_body_with_webmock=","children":[],"call":[" post_body_without_webmock= "]}," Curl Easy put_data_with_webmock=":{"type":"method","name":"put_data_with_webmock=","children":[],"call":[" put_data_without_webmock= "]}," Curl Easy perform_with_webmock":{"type":"method","name":"perform_with_webmock","children":[],"call":[" perform_without_webmock "," curb_or_webmock "]}," Curl Easy http_post_with_webmock":{"type":"method","name":"http_post_with_webmock","children":[],"call":[" http_post_without_webmock "," curb_or_webmock "]}," Curl Easy http_put_with_webmock":{"type":"method","name":"http_put_with_webmock","children":[],"call":[" http_put_without_webmock "," curb_or_webmock "]}," Curl Easy http_with_webmock":{"type":"method","name":"http_with_webmock","children":[],"call":[" http_without_webmock "," curb_or_webmock "]}," Curl Easy build_webmock_response":{"type":"method","name":"build_webmock_response","children":[],"call":["webmock_response headers= ","webmock_response body= "," body_str ","webmock_response status= "," response_code ","WebMock Response  new ","WebmockHelper  parse_header_string "," header_str ","WebMock Response  new  headers= ","WebMock Response  new  body= ","WebMock Response  new  status= "]}," Curl Easy invoke_curb_callbacks":{"type":"method","name":"invoke_curb_callbacks","children":[],"call":["@on_failure call "," response_code ","@on_success call ","@on_complete call ","@on_body call "," body_str ","@on_header call "," header_str ","@on_progress call "]}," Curl Easy build_curb_response":{"type":"method","name":"build_curb_response","children":[],"call":["@header_str << ","(send\n  (send\n    (lvar :webmock_response) :headers) :map) join ","v join ","v is_a? ","webmock_response headers map ","webmock_response headers ","webmock_response status [] ","webmock_response status ","webmock_response body ","webmock_response raise_error_if_any "," raise ","webmock_response should_timeout "," url ","webmock_response headers [] "," webmock_follow_location "," follow_location? "," webmock_follow_webmock_response headers []  "," follow_webmock_response headers [] ? "]}," Curl Easy build_request_signature":{"type":"method","name":"build_request_signature","children":[],"call":["WebMock RequestSignature  new "," headers ","uri to_s "," post_body ","uri password= "," password ","uri user= "," username ","uri path= ","uri normalized_path gsub ","uri normalized_path ","WebMock Util URI  heuristic_parse "," url ","@webmock_method to_s downcase to_sym ","@webmock_method to_s downcase ","@webmock_method to_s ","WebMock Util URI  heuristic_parse  to_s ","WebMock Util URI  heuristic_parse  password= ","WebMock Util URI  heuristic_parse  user= ","WebMock Util URI  heuristic_parse  path= ","WebMock Util URI  heuristic_parse  normalized_path gsub ","WebMock Util URI  heuristic_parse  normalized_path ","WebMock Util URI  heWebMock Util URI  heuristic_parse stic_parse ","@webmock_@webmock_method to_s downcase to_sym  to_s downcase to_sym ","@webmock_@webmock_method to_s downcase to_sym  to_s downcase ","@webmock_@webmock_method to_s downcase to_sym  to_s "]}," Curl Easy curb_or_webmock":{"type":"method","name":"curb_or_webmock","children":[],"call":[" raise ","WebMock NetConnectNotAllowedError  new ","WebMock CallbackRegistry  invoke_callbacks "," build_webmock_response ","WebMock CallbackRegistry  any_callbacks? ","WebMock  net_connect_allowed? ","request_signature uri "," invoke_curb_callbacks "," build_curb_response ","WebMock RequestRegistry  instance response_for_request ","WebMock RequestRegistry  instance ","WebMock RequestRegistry  instance registered_request? ","WebMock RequestRegistry  instance requested_signatures put ","WebMock RequestRegistry  instance requested_signatures "," build_request_signature ","WebMock StubRegistry  instance response_for_request ","WebMock StubRegistry  instance ","WebMock StubRegistry  instance registered_request? "," build_ build_webmock_response  "," build_WebMock RequestRegistry  instance response_for_request  "," build_WebMock StubRegistry  instance response_for_request  "," build_request_signature  uri "," build_ build_request_signature  "]}," EventMachine WebMockHttpRequest deactivate!":{"type":"method","name":"deactivate!","children":[],"call":[]}," EventMachine WebMockHttpRequest activate!":{"type":"method","name":"activate!","children":[],"call":[]}," EventMachine WebMockHttpRequest send_request_with_webmock":{"type":"method","name":"send_request_with_webmock","children":[],"call":[" raise ","WebMock NetConnectNotAllowedError  new ","WebMock CallbackRegistry  invoke_callbacks "," build_webmock_response ","WebMock CallbackRegistry  any_callbacks? ","http callback "," send_request_without_webmock ","WebMock  net_connect_allowed? ","request_signature uri ","client setup ","webmock_response should_timeout "," make_raw_response ","client on_error ","WebMockHttpClient  new ","WebMock StubRegistry  instance response_for_request ","WebMock StubRegistry  instance ","WebMock StubRegistry  instance registered_request? ","WebMock RequestRegistry  instance requested_signatures put ","WebMock RequestRegistry  instance requested_signatures ","WebMock RequestRegistry  instance "," build_request_signature "," build_ build_webmock_response  "," build_WebMock StubRegistry  instance response_for_request  "," send_request_without_webmock  callback "," build_request_signature  uri ","WebMockHttpClient  new  setup "," build_webmock_response  should_timeout ","WebMock StubRegistry  instance response_for_request  should_timeout ","WebMockHttpClient  new  on_error "," build_ build_request_signature  "]}," Curl Easy content_type_with_webmock":{"type":"method","name":"content_type_with_webmock","children":[],"call":[" content_type_without_webmock "]}," Curl Easy last_effective_url_with_webmock":{"type":"method","name":"last_effective_url_with_webmock","children":[],"call":[" last_effective_url_without_webmock "]}," Curl Easy webmock_follow_location":{"type":"method","name":"webmock_follow_location","children":[],"call":[" url= "," send "," curb_or_webmock "," url "]}," Typhoeus Hydra clear_webmock_stubs":{"type":"method","name":"clear_webmock_stubs","children":[],"call":["s instance_variable_get [] ","s instance_variable_get "," stubs delete_if "," stubs "," stubs= "]}," Typhoeus Hydra queue_with_webmock":{"type":"method","name":"queue_with_webmock","children":[],"call":[" queue_without_webmock "," raise ","WebMock NetConnectNotAllowedError  new ","WebMock  net_connect_allowed? ! ","WebMock  net_connect_allowed? ","request_signature uri ","webmock_response raise_error_if_any "," WebMock HttpLibAdapters TyphoeusAdapter  stub_typhoeus "," WebMock StubRegistry  instance response_for_request "," WebMock StubRegistry  instance "," WebMock StubRegistry  instance registered_request? "," WebMock RequestRegistry  instance requested_signatures put "," WebMock RequestRegistry  instance requested_signatures "," WebMock RequestRegistry  instance "," WebMock HttpLibAdapters TyphoeusAdapter  build_request_signature ","WebMock HttpLibAdapters TyphoeusAdapter  disabled? "," clear_webmock_stubs "," WebMock HttpLibAdapters TyphoeusAdapter  build_request_signature  uri "," WebMock StubRegistry  instance response_for_request  raise_error_if_any "," WebMock HttpLibAdapters TyphoeusAdapter  build_ WebMock HttpLibAdapters TyphoeusAdapter  build_request_signature  "]}," WebMock HttpLibAdapters TyphoeusAdapter stub_typhoeus":{"type":"method","name":"stub_typhoeus","children":[],"call":[]}," WebMock HttpLibAdapters PatronAdapter WebMockPatronSession handle_request_with_webmock":{"type":"method","name":"handle_request_with_webmock","children":[],"call":[" raise ","WebMock NetConnectNotAllowedError  new ","WebMock CallbackRegistry  invoke_callbacks ","WebMock HttpLibAdapters PatronAdapter  build_webmock_response ","WebMock CallbackRegistry  any_callbacks? "," handle_request_without_webmock ","WebMock  net_connect_allowed? ","request_signature uri ","WebMock HttpLibAdapters PatronAdapter  build_patron_response ","WebMock HttpLibAdapters PatronAdapter  handle_file_name ","WebMock StubRegistry  instance response_for_request ","WebMock StubRegistry  instance ","WebMock StubRegistry  instance registered_request? ","WebMock RequestRegistry  instance requested_signatures put ","WebMock RequestRegistry  instance requested_signatures ","WebMock RequestRegistry  instance ","WebMock HttpLibAdapters PatronAdapter  build_request_signature "," default_response_charset ","WebMock HttpLibAdapters PatronAdapter  build_WebMock HttpLibAdapters PatronAdapter  build_webmock_response  ","WebMock HttpLibAdapters PatronAdapter  build_WebMock StubRegistry  instance response_for_request  ","WebMock HttpLibAdapters PatronAdapter  build_webmock_ handle_request_without_webmock ponse ","WebMock HttpLibAdapters PatronAdapter  build_webmock_WebMock HttpLibAdapters PatronAdapter  build_patron_response ponse ","WebMock HttpLibAdapters PatronAdapter  build_request_signature  uri ","WebMock HttpLibAdapters PatronAdapter  build_patron_ handle_request_without_webmock ponse ","WebMock HttpLibAdapters PatronAdapter  build_patron_WebMock HttpLibAdapters PatronAdapter  build_patron_response ponse ","WebMock StubRegistry  instance  handle_request_without_webmock ponse_for_request ","WebMock StubRegistry  instance WebMock HttpLibAdapters PatronAdapter  build_patron_response ponse_for_request ","WebMock RequestRegistry  instance requested_signatu handle_request_without_webmock  put ","WebMock RequestRegistry  instance requested_signatuWebMock HttpLibAdapters PatronAdapter  build_patron_response  put ","WebMock RequestRegistry  instance requested_signatu handle_request_without_webmock  ","WebMock RequestRegistry  instance requested_signatuWebMock HttpLibAdapters PatronAdapter  build_patron_response  ","WebMock HttpLibAdapters PatronAdapter  build_WebMock HttpLibAdapters PatronAdapter  build_request_signature  "," default_ handle_request_without_webmock ponse_charset "," default_WebMock HttpLibAdapters PatronAdapter  build_patron_response ponse_charset "]}," Net WebMockNetHTTP check_right_http_connection":{"type":"method","name":"check_right_http_connection","children":[],"call":["WebMock NetHTTPUtility  puts_warning_for_right_http_if_needed "]}," Net WebMockNetHTTP build_webmock_response":{"type":"method","name":"build_webmock_response","children":[],"call":["webmock_response body= ","net_http_response body ","webmock_response headers= ","net_http_response to_hash ","webmock_response status= ","net_http_response message ","net_http_response code to_i ","net_http_response code ","WebMock Response  new ","WebMock Response  new  body= ","WebMock Response  new  headers= ","WebMock Response  new  status= "]}," Net WebMockNetHTTP build_net_http_response":{"type":"method","name":"build_net_http_response","children":[],"call":[" block_given? ","webmock_response raise_error_if_any "," raise ","webmock_response should_timeout ","response extend ","response instance_variable_set ","response add_field ","values each ","values is_a? ","webmock_response headers to_a each ","webmock_response headers to_a ","webmock_response headers ","webmock_response body ","Net HTTPResponse  send new ","webmock_response status [] ","webmock_response status ","webmock_response status [] to_s ","Net HTTPResponse  send ","webmock_Net HTTPResponse  send new  raise_error_if_any ","webmock_Net HTTPResponse  send new  should_timeout ","Net HTTPResponse  send new  extend ","Net HTTPResponse  send new  instance_variable_set ","Net HTTPResponse  send new  add_field ","webmock_Net HTTPResponse  send new  headers to_a each ","webmock_Net HTTPResponse  send new  headers to_a ","webmock_Net HTTPResponse  send new  headers ","webmock_Net HTTPResponse  send new  body ","webmock_Net HTTPResponse  send new  status [] ","webmock_Net HTTPResponse  send new  status ","webmock_Net HTTPResponse  send new  status [] to_s "]}," Net WebMockNetHTTP start_with_conditional_connect":{"type":"method","name":"start_with_conditional_connect","children":[],"call":[" start_without_connect "," start_with_connect ","WebMock Config  instance net_http_connect_on_start ","WebMock Config  instance "]}," Net WebMockNetHTTP start_without_connect":{"type":"method","name":"start_without_connect","children":[],"call":[" do_finish "," block_given? "," raise "]}," Net WebMockNetHTTP request_with_webmock":{"type":"method","name":"request_with_webmock","children":[],"call":[" raise ","WebMock NetConnectNotAllowedError  new ","after_request call "," request_without_webmock "," start_with_connect "," started? ! "," started? ","WebMock Config  instance net_http_connect_on_start ! ","WebMock Config  instance net_http_connect_on_start ","WebMock Config  instance ","block call ","response extend ","WebMock CallbackRegistry  invoke_callbacks "," build_webmock_response ","WebMock CallbackRegistry  any_callbacks? "," lambda "," check_right_http_connection ","WebMock  net_connect_allowed? ","request_signature uri "," build_net_http_response ","WebMock StubRegistry  instance response_for_request ","WebMock StubRegistry  instance ","Net HTTP  socket_type new ","Net HTTP  socket_type ","WebMock StubRegistry  instance registered_request? ","WebMock RequestRegistry  instance requested_signatures put ","WebMock RequestRegistry  instance requested_signatures ","WebMock RequestRegistry  instance ","WebMock NetHTTPUtility  request_signature_from_request "," request_without_webmock  extend "," build_webmock_ request_without_webmock  "," build_ build_webmock_response  "," build_WebMock StubRegistry  instance response_for_request  ","WebMock NetHTTPUtility  request_signature_from_request  uri "," build_net_http_ request_without_webmock  ","WebMock StubRegistry  instance  request_without_webmock _for_request ","WebMock NetHTTPUtility  WebMock NetHTTPUtility  request_signature_from_request _from_request "]}," Net WebMockNetHTTP socket_type_with_webmock":{"type":"method","name":"socket_type_with_webmock","children":[],"call":[]}," Net WebMockNetBufferedIO initialize_with_webmock":{"type":"method","name":"initialize_with_webmock","children":[],"call":[" raise ","StringIO  new "]}," WebMockHTTPClient do_request_async_with_webmock":{"type":"method","name":"do_request_async_with_webmock","children":[],"call":[" raise ","WebMock NetConnectNotAllowedError  new "," do_request_async_without_webmock ","WebMock  net_connect_allowed? ","request_signature uri ","WebMock StubRegistry  instance registered_request? ","WebMock StubRegistry  instance "," build_request_signature "," create_request "," webmock_responses [] "," webmock_responses "," webmock_request_signatures << "," webmock_request_signatures "," do_ create_request uest_async_without_webmock "," build_request_signature  uri "," create_request uest_signature uri ","WebMock StubRegistry  instance registered_ create_request uest? "," build_ build_request_signature  "," build_ create_request uest_signature "," create_ create_request uest "," webmock_ build_request_signature s << "," webmock_ create_request uest_signatures << "," webmock_ build_request_signature s "," webmock_ create_request uest_signatures "]}," WebMockHTTPClient do_get_with_webmock":{"type":"method","name":"do_get_with_webmock","children":[],"call":[" raise ","WebMock NetConnectNotAllowedError  new ","WebMock CallbackRegistry  invoke_callbacks "," build_webmock_response ","WebMock CallbackRegistry  any_callbacks? ","conn push ","conn pop "," do_get_block_without_webmock "," do_get_stream_without_webmock ","WebMock  net_connect_allowed? ","request_signature uri "," build_httpclient_response ","WebMock StubRegistry  instance response_for_request ","WebMock StubRegistry  instance ","WebMock StubRegistry  instance registered_request? ","WebMock RequestRegistry  instance requested_signatures put ","WebMock RequestRegistry  instance requested_signatures ","WebMock RequestRegistry  instance "," build_request_signature ","filter filter_response ","@request_filter each "," webmock_responses delete "," webmock_responses "," webmock_responses [] "," build_ build_webmock_response  "," build_WebMock StubRegistry  instance response_for_request  "," build_ webmock_responses delete  "," build_webmock_conn pop ponse "," build_webmock_ do_get_block_without_webmock ponse "," build_webmock_ do_get_stream_without_webmock ponse "," build_webmock_conn push ponse "," build_webmock_ build_httpclient_response  "," build_request_signature  uri "," build_httpclient_conn pop ponse "," build_httpclient_ do_get_block_without_webmock ponse "," build_httpclient_ do_get_stream_without_webmock ponse "," build_httpclient_conn push ponse "," build_httpclient_ build_httpclient_response  ","WebMock StubRegistry  instance conn pop ponse_for_request ","WebMock StubRegistry  instance  do_get_block_without_webmock ponse_for_request ","WebMock StubRegistry  instance  do_get_stream_without_webmock ponse_for_request ","WebMock StubRegistry  instance conn push ponse_for_request ","WebMock StubRegistry  instance  build_httpclient_response _for_request ","WebMock RequestRegistry  instance requested_signatuconn pop  put ","WebMock RequestRegistry  instance requested_signatu do_get_block_without_webmock  put ","WebMock RequestRegistry  instance requested_signatu do_get_stream_without_webmock  put ","WebMock RequestRegistry  instance requested_signatuconn push  put ","WebMock RequestRegistry  instance requested_signatuconn pop  ","WebMock RequestRegistry  instance requested_signatu do_get_block_without_webmock  ","WebMock RequestRegistry  instance requested_signatu do_get_stream_without_webmock  ","WebMock RequestRegistry  instance requested_signatuconn push  "," build_ build_request_signature  ","filter filter_conn pop ponse ","filter filter_ do_get_block_without_webmock ponse ","filter filter_ do_get_stream_without_webmock ponse ","filter filter_conn push ponse ","filter filter_ build_httpclient_response  ","  build_webmock_response s delete "," WebMock StubRegistry  instance response_for_request s delete ","  webmock_responses delete s delete "," webmock_conn pop ponses delete "," webmock_ do_get_block_without_webmock ponses delete "," webmock_ do_get_stream_without_webmock ponses delete "," webmock_conn push ponses delete "," webmock_ build_httpclient_response s delete ","  build_webmock_response s "," WebMock StubRegistry  instance response_for_request s ","  webmock_responses delete s "," webmock_conn pop ponses "," webmock_ do_get_block_without_webmock ponses "," webmock_ do_get_stream_without_webmock ponses "," webmock_conn push ponses "," webmock_ build_httpclient_response s ","  build_webmock_response s [] "," WebMock StubRegistry  instance response_for_request s [] ","  webmock_responses delete s [] "," webmock_conn pop ponses [] "," webmock_ do_get_block_without_webmock ponses [] "," webmock_ do_get_stream_without_webmock ponses [] "," webmock_conn push ponses [] "," webmock_ build_httpclient_response s [] "]}," WebMockHTTPClient do_get_stream_with_webmock":{"type":"method","name":"do_get_stream_with_webmock","children":[],"call":[" do_get_with_webmock "]}," WebMockHTTPClient do_get_block_with_webmock":{"type":"method","name":"do_get_block_with_webmock","children":[],"call":[" do_get_with_webmock "]}," EventMachine WebMockHttpClient send_request_with_webmock":{"type":"method","name":"send_request_with_webmock","children":[],"call":[" raise ","WebMock NetConnectNotAllowedError  new "," request_signature ","WebMock CallbackRegistry  invoke_callbacks "," build_webmock_response ","WebMock CallbackRegistry  any_callbacks? "," callback "," send_request_without_webmock ","WebMock  net_connect_allowed? "," request_signature uri "," setup ","webmock_response should_timeout "," make_raw_response ","EM  next_tick "," on_error ","WebMock StubRegistry  instance response_for_request ","WebMock StubRegistry  instance ","WebMock StubRegistry  instance registered_request? ","WebMock RequestRegistry  instance requested_signatures put ","WebMock RequestRegistry  instance requested_signatures ","WebMock RequestRegistry  instance "," stubbed_webmock_response should_timeout "," stubbed_webmock_response "," build_ build_webmock_response  "," build_WebMock StubRegistry  instance response_for_request  "," build_webmock_response  should_timeout ","WebMock StubRegistry  instance response_for_request  should_timeout "," stubbed_ build_webmock_response  should_timeout "," stubbed_WebMock StubRegistry  instance response_for_request  should_timeout "," stubbed_ build_webmock_response  "," stubbed_WebMock StubRegistry  instance response_for_request  "]}," EventMachine WebMockHttpConnection webmock_activate_connection":{"type":"method","name":"webmock_activate_connection","children":[],"call":[" raise ","WebMock NetConnectNotAllowedError  new "," real_activate_connection ","WebMock  net_connect_allowed? ","request_signature uri ","@conn set_deferred_status "," finalize_request ","conn comm_inactivity_timeout= ","@connopts inactivity_timeout ","conn pending_connect_timeout= ","@connopts connect_timeout ","conn parent= "," post_init ","HttpStubConnection  new "," rand ","WebMock StubRegistry  instance registered_request? ","WebMock StubRegistry  instance ","client request_signature ","client stubbed_webmock_response "," real_activate_HttpStubConnection  new ection ","WebMock  net_HttpStubConnection  new ect_allowed? ","client request_signature  uri ","@HttpStubConnection  new  set_deferred_status ","HttpStubConnection  new  comm_inactivity_timeout= ","@HttpStubConnection  new opts inactivity_timeout ","HttpStubConnection  new  pending_HttpStubConnection  new ect_timeout= ","@HttpStubConnection  new opts HttpStubConnection  new ect_timeout ","HttpStubConnection  new  parent= ","client client request_signature  "]}," Curl WebMockCurlEasy content_type_with_webmock":{"type":"method","name":"content_type_with_webmock","children":[],"call":[" content_type_without_webmock "]}," Curl WebMockCurlEasy last_effective_url_with_webmock":{"type":"method","name":"last_effective_url_with_webmock","children":[],"call":[" last_effective_url_without_webmock "]}," Curl WebMockCurlEasy header_str_with_webmock":{"type":"method","name":"header_str_with_webmock","children":[],"call":[" header_str_without_webmock "]}," Curl WebMockCurlEasy response_code_with_webmock":{"type":"method","name":"response_code_with_webmock","children":[],"call":[" response_code_without_webmock "]}," Curl WebMockCurlEasy body_str_with_webmock":{"type":"method","name":"body_str_with_webmock","children":[],"call":[" body_str_without_webmock "]}," Curl WebMockCurlEasy head_with_webmock=":{"type":"method","name":"head_with_webmock=","children":[],"call":[" head_without_webmock= "]}," Curl WebMockCurlEasy delete_with_webmock=":{"type":"method","name":"delete_with_webmock=","children":[],"call":[" delete_without_webmock= "]}," Curl WebMockCurlEasy post_body_with_webmock=":{"type":"method","name":"post_body_with_webmock=","children":[],"call":[" post_body_without_webmock= "]}," Curl WebMockCurlEasy put_data_with_webmock=":{"type":"method","name":"put_data_with_webmock=","children":[],"call":[" put_data_without_webmock= "]}," Curl WebMockCurlEasy perform_with_webmock":{"type":"method","name":"perform_with_webmock","children":[],"call":[" perform_without_webmock "," curb_or_webmock "]}," Curl WebMockCurlEasy http_post_with_webmock":{"type":"method","name":"http_post_with_webmock","children":[],"call":[" http_post_without_webmock "," curb_or_webmock ","data join ","data empty? ! ","data empty? "]}," Curl WebMockCurlEasy http_put_with_webmock":{"type":"method","name":"http_put_with_webmock","children":[],"call":[" http_put_without_webmock "," curb_or_webmock "]}," Curl WebMockCurlEasy http_with_webmock":{"type":"method","name":"http_with_webmock","children":[],"call":[" http_without_webmock "," curb_or_webmock "]}," Net WebMockNetHTTP const_defined?":{"type":"method","name":"const_defined?","children":[],"call":[" superclass const_defined? "," superclass "]}," WebMock StubRegistry global_stub_block=":{"type":"method","name":"global_stub_block=","children":[],"call":[" register_request_stub "," global_stub ","(send\n  (send\n    (self) :global_stub) :with) to_return ","responses delete ","request object_id "," lambda ","responses []= ","block call "," global_stub with "," global_stub= "," WebMock RequestStub  new "]}," WebMock HttpLibAdapters TyphoeusAdapter request_body_for_post_request_with_params":{"type":"method","name":"request_body_for_post_request_with_params","children":[],"call":[]}," WebMock HttpLibAdapters NetHttpAdapter start_with_conditional_connect":{"type":"method","name":"start_with_conditional_connect","children":[],"call":[" start_without_connect "," start_with_connect ","WebMock Config  instance net_http_connect_on_start ","WebMock Config  instance "]}," WebMock HttpLibAdapters NetHttpAdapter request_with_webmock":{"type":"method","name":"request_with_webmock","children":[],"call":[" raise ","WebMock NetConnectNotAllowedError  new ","after_request call "," request_without_webmock "," start_with_connect "," started? ! "," started? ","WebMock Config  instance net_http_connect_on_start ! ","WebMock Config  instance net_http_connect_on_start ","WebMock Config  instance ","block call ","response extend ","WebMock CallbackRegistry  invoke_callbacks "," build_webmock_response ","WebMock CallbackRegistry  any_callbacks? "," lambda "," check_right_http_connection ","WebMock  net_connect_allowed? ","request_signature uri "," build_net_http_response ","Net HTTP  socket_type new ","Net HTTP  socket_type ","WebMock StubRegistry  instance response_for_request ","WebMock StubRegistry  instance ","WebMock RequestRegistry  instance requested_signatures put ","WebMock RequestRegistry  instance requested_signatures ","WebMock RequestRegistry  instance ","WebMock NetHTTPUtility  request_signature_from_request ","WebMock StubRegistry  instance registered_request? "," request_without_webmock  extend "," build_webmock_ request_without_webmock  "," build_ build_webmock_response  "," build_WebMock StubRegistry  instance response_for_request  ","WebMock NetHTTPUtility  request_signature_from_request  uri "," build_net_http_ request_without_webmock  ","WebMock StubRegistry  instance  request_without_webmock _for_request ","WebMock NetHTTPUtility  WebMock NetHTTPUtility  request_signature_from_request _from_request "]}," WebMock HttpLibAdapters NetHttpAdapter socket_type_with_webmock":{"type":"method","name":"socket_type_with_webmock","children":[],"call":[]}," Net WebMockNetHTTP constants":{"type":"method","name":"constants","children":[],"call":[" + "," superclass constants "," superclass "]}," Net WebMockNetHTTP const_get":{"type":"method","name":"const_get","children":[],"call":[" superclass const_get "," superclass "]}," WebMock URIRegexpPattern initialize":{"type":"method","name":"initialize","children":[],"call":[]}," EventMachine WebMockHttpClient set_deferred_status":{"type":"method","name":"set_deferred_status","children":[],"call":["WebMock CallbackRegistry  invoke_callbacks "," request_signature "," build_webmock_response ","WebMock CallbackRegistry  any_callbacks? "," stubbed_webmock_response ! "," stubbed_webmock_response ","status == "," build_ build_webmock_response  "," stubbed_ build_webmock_response  ! "," stubbed_ build_webmock_response  "]}," WebMock Util Headers basic_auth_header":{"type":"method","name":"basic_auth_header","children":[],"call":[]}," WebMock RequestPattern validate_basic_auth!":{"type":"method","name":"validate_basic_auth!","children":[],"call":[" raise ","(send\n  (lvar :basic_auth) :map) uniq != ","(send\n  (lvar :basic_auth) :map) uniq ","e is_a? ","basic_auth map ","basic_auth is_a? ! ","basic_auth is_a? "]}," WebMock RequestPattern set_basic_auth_as_headers!":{"type":"method","name":"set_basic_auth_as_headers!","children":[],"call":["options [] []= ","WebMock Util Headers  basic_auth_header ","basic_auth [] ","options [] "," validate_basic_auth! ","options delete ","WebMock Util Headers  options delete _header ","options delete  [] "," validate_options delete ! "]}," Curl WebMockCurlEasy basic_auth_headers":{"type":"method","name":"basic_auth_headers","children":[],"call":["WebMock Util Headers  basic_auth_header "," password "," username "]}," Curl WebMockCurlEasy headers_as_hash":{"type":"method","name":"headers_as_hash","children":[],"call":["hash []= ","header split map ","header split ","headers inject ","headers is_a? "]}," Curl WebMockCurlEasy verbose?":{"type":"method","name":"verbose?","children":[],"call":[]}," Curl WebMockCurlEasy verbose=":{"type":"method","name":"verbose=","children":[],"call":[]}," Curl WebMockCurlEasy patch_data=":{"type":"method","name":"patch_data=","children":[],"call":[]}," Curl WebMockCurlEasy http_patch":{"type":"method","name":"http_patch","children":[],"call":[]}," WebMock HttpLibAdapters NetHttpAdapter timeout_exception":{"type":"method","name":"timeout_exception","children":[],"call":[]}," WebMockHTTPClients headers_from_session":{"type":"method","name":"headers_from_session","children":[],"call":["hdrs []= ","header [] ","session_headers all inject ","session_headers all ","@session_manager send send ","MessageMock  new ","@session_manager send ","HTTP Message Headers  new ","HTTP Message Headers  new  all inject ","HTTP Message Headers  new  all "]}," WebMockHTTPClients previous_signature_for":{"type":"method","name":"previous_signature_for","children":[],"call":[" webmock_request_signatures delete_at "," webmock_request_signatures "," webmock_request_signatures index "," synchronize_request_response "," webmock_request_signatures  webmock_request_signatures index  "]}," WebMockHTTPClients webmock_request_signatures":{"type":"method","name":"webmock_request_signatures","children":[],"call":[]}," WebMockHTTPClients webmock_responses":{"type":"method","name":"webmock_responses","children":[],"call":["hash []= ","WebMock StubRegistry  instance response_for_request ","WebMock StubRegistry  instance ","Hash  new "," synchronize_request_response "]}," WebMockHTTPClients build_request_signature":{"type":"method","name":"build_request_signature","children":[],"call":[" previous_signature_for ","WebMock RequestSignature  new ","req http_body dump ","req http_body ","uri to_s ","req header request_method downcase to_sym ","req header request_method downcase ","req header request_method ","req header "," headers_from_session merge "," headers_from_session ","hdrs [] << ","header [] ","hdrs [] ","req header all inject ","req header all ","filter filter_request ","@request_filter each ","uri port= ","req header request_uri port ","req header request_uri ","uri query= ","WebMock Util QueryMapper  values_to_query ","WebMock Config  instance query_values_notation ","WebMock Config  instance ","req header request_query ","WebMock Util URI  heuristic_parse ","req header request_uri to_s ","  previous_signature_for _for "," previous_WebMock RequestSignature  new _for ","WebMock Util URI  heuristic_parse  to_s ","  headers_from_session merge _from_session merge ","  headers_from_session merge _from_session ","WebMock Util URI  heuristic_parse  port= ","req header request_WebMock Util URI  heuristic_parse  port ","req header request_WebMock Util URI  heuristic_parse  ","WebMock Util URI  heuristic_parse  query= ","WebMock Util URI  heWebMock Util URI  heuristic_parse stic_parse ","req header request_WebMock Util URI  heuristic_parse  to_s "]}," WebMockHTTPClients build_webmock_response":{"type":"method","name":"build_webmock_response","children":[],"call":["webmock_response body= ","httpclient_response content ","httpclient_response body= ","body init_response ","StringIO  new ","webmock_response body ","HTTP Message Body  new ","httpclient_response content read ","httpclient_response content respond_to? ","webmock_response headers= ","hash []= "," Array + "," Array ","hash [] ","hash has_key? ","httpclient_response header all each ","httpclient_response header all ","httpclient_response header "," tap ","webmock_response status= ","httpclient_response reason ","httpclient_response status ","WebMock Response  new ","webmock_response HTTP Message Body  new = ","WebMock Response  new  body= ","httpclient_response HTTP Message Body  new = ","HTTP Message Body  new  init_response ","webmock_response HTTP Message Body  new  ","WebMock Response  new  body ","WebMock Response  new  headers= ","WebMock Response  new  status= "]}," StubSocket close":{"type":"method","name":"close","children":[],"call":[]}," Net WebMockNetBufferedIO common_initialize":{"type":"method","name":"common_initialize","children":[],"call":[" raise ","PatchedStringIO  new ","io string "]}," WebMock Util HashCounter select":{"type":"method","name":"select","children":[],"call":[" hash select "," hash ","@lock synchronize "," block_given? "]}," WebMock WebMockMatcher at_least_times":{"type":"method","name":"at_least_times","children":[],"call":["@request_execution_verifier at_least_times_executed= "]}," WebMock WebMockMatcher at_least_twice":{"type":"method","name":"at_least_twice","children":[],"call":["@request_execution_verifier at_least_times_executed= "]}," WebMock WebMockMatcher at_least_once":{"type":"method","name":"at_least_once","children":[],"call":["@request_execution_verifier at_least_times_executed= "]}," WebMock RSpecMatcherDetector rSpecHashExcludingMatcher?":{"type":"method","name":"rSpecHashExcludingMatcher?","children":[],"call":["matcher class name =~ ","matcher class name ","matcher class "]}," WebMock Matchers HashExcludingMatcher inspect":{"type":"method","name":"inspect","children":[],"call":["@expected inspect "]}," WebMock Matchers HashExcludingMatcher ==":{"type":"method","name":"==","children":[],"call":["value != ","actual [] ","actual key? ! ","actual key? "]}," WebMock Matchers HashArgumentMatcher from_rspec_matcher":{"type":"method","name":"from_rspec_matcher","children":[],"call":[]}," WebMock Matchers HashArgumentMatcher ==":{"type":"method","name":"==","children":[],"call":["@expected all? "]}," WebMock Matchers HashArgumentMatcher initialize":{"type":"method","name":"initialize","children":[],"call":["Hash  [] ","WebMock Util HashKeysStringifier  stringify_keys! sort ","WebMock Util HashKeysStringifier  stringify_keys! "]}," HTTP Response Streamer close":{"type":"method","name":"close","children":[],"call":["@io close "]}," WebMock API hash_excluding":{"type":"method","name":"hash_excluding","children":[],"call":["WebMock Matchers HashExcludingMatcher  new "," anythingize_lonely_keys "]}," ValuesStringifier stringify_values":{"type":"method","name":"stringify_values","children":[],"call":[]}," WebMock Util Headers pp_headers_string":{"type":"method","name":"pp_headers_string","children":[],"call":[]}," WebMock HeadersPattern pp_to_s":{"type":"method","name":"pp_to_s","children":[],"call":["WebMock Util Headers  pp_headers_string "]}," WebMock BodyPattern url_encoded_body?":{"type":"method","name":"url_encoded_body?","children":[],"call":["content_type =~ "]}," WebMock BodyPattern matching_body_hashes?":{"type":"method","name":"matching_body_hashes?","children":[],"call":["expected === ","WebMock Util ValuesStringifier  stringify_values "," url_encoded_body? "," matching_body_hashes? ","expected is_a? ","actual is_a? ","pattern [] ","query_parameters each ","query_parameters keys sort == ","pattern keys sort ","pattern keys ","query_parameters keys sort ","query_parameters keys ","query_parameters is_a? "," matching_values ","query_parameters all? ","WebMock Util ValuesStringifier  stringify_values  === ","pattern []  === ","WebMock Util ValuesStringifier  stringify_values  is_a? ","pattern []  is_a? "]}," WebMock URIStringPattern pattern_inspect":{"type":"method","name":"pattern_inspect","children":[],"call":["WebMock Util URI  strip_default_port_from_uri_string ","@pattern to_s "]}," WebMock URIStringPattern pattern_matches?":{"type":"method","name":"pattern_matches?","children":[],"call":["uri === ","uri omit === ","uri omit ","@pattern is_a? "]}," WebMock URIAddressablePattern template_matches_uri?":{"type":"method","name":"template_matches_uri?","children":[],"call":["template match "]}," WebMock URIAddressablePattern matches_with_variations?":{"type":"method","name":"matches_with_variations?","children":[],"call":[" template_matches_uri? ","WebMock Util URI  variations_of_uri_as_strings any? ","WebMock Util URI  variations_of_uri_as_strings ","Addressable Template  new ","@pattern pattern ","WebMock Util URI  heuristic_parse ","normalized_template match ","template match ","Addressable Template  new  match "]}," WebMock URIAddressablePattern pattern_inspect":{"type":"method","name":"pattern_inspect","children":[],"call":["@pattern pattern inspect ","@pattern pattern "]}," WebMock URIAddressablePattern pattern_matches?":{"type":"method","name":"pattern_matches?","children":[],"call":[" matches_with_variations? ","uri omit ","@query_params nil? "]}," WebMock URIRegexpPattern pattern_matches?":{"type":"method","name":"pattern_matches?","children":[],"call":["u match ","WebMock Util URI  variations_of_uri_as_strings any? ","WebMock Util URI  variations_of_uri_as_strings "]}," WebMock URICallablePattern pattern_matches?":{"type":"method","name":"pattern_matches?","children":[],"call":["@pattern call "]}," WebMock URIPattern query_params_matches?":{"type":"method","name":"query_params_matches?","children":[],"call":["@query_params == ","WebMock Util QueryMapper  query_to_values ","Config  instance query_values_notation ","Config  instance ","uri query ","@query_params nil? "]}," WebMock URIPattern pattern_inspect":{"type":"method","name":"pattern_inspect","children":[],"call":["@pattern inspect "]}," Net WebMockNetBufferedIO rbuf_fill":{"type":"method","name":"rbuf_fill","children":[],"call":[" raise ","@io to_io wait_writable ","@io to_io ","@io to_io wait_readable ","rv clear ","@rbuf << ","rv nil? ","@io read_nonblock ","trace disable ","tp binding local_variable_set ","tp binding ","tp binding local_variable_defined? ","TracePoint  trace ","Thread  current object_id == ","Thread  current object_id ","Thread  current ","@io read_nonblock  clear ","@io read_nonblock  nil? "]}," StubSocket StubIO setsockopt":{"type":"method","name":"setsockopt","children":[],"call":[]}," StubSocket io":{"type":"method","name":"io","children":[],"call":["StubIO  new "]}," WebMock HttpLibAdapters ManticoreAdapter StubbedTimeoutResponse call":{"type":"method","name":"call","children":[],"call":["@handlers [] call ","Manticore ConnectTimeout  new ","@handlers [] "]}," WebMockHTTPClients synchronize_request_response":{"type":"method","name":"synchronize_request_response","children":[],"call":["REQUEST_RESPONSE_LOCK  synchronize ","REQUEST_RESPONSE_LOCK  owned? "]}," Curl WebMockCurlEasy reset":{"type":"method","name":"reset","children":[],"call":[" instance_variable_set "]}," Curl WebMockCurlEasy reset_webmock_method":{"type":"method","name":"reset_webmock_method","children":[],"call":[]}," Async HTTP WebMockApplication build_response":{"type":"method","name":"build_response","children":[],"call":[" Protocol HTTP Response  [] ","webmock_response body ","webmock_response status [] ","webmock_response status ","o push "," Array each "," Array ","(or\n  (send\n    (lvar :webmock_response) :headers)\n  (hash)) each_with_object ","webmock_response headers "]}," Async HTTP WebMockApplication webmock_responses":{"type":"method","name":"webmock_responses","children":[],"call":[]}," Async HTTP WebMockApplication get_webmock_response":{"type":"method","name":"get_webmock_response","children":[],"call":[" webmock_responses fetch "," webmock_responses ","request headers [] [] ","request headers [] ","request headers "]}," Async HTTP WebMockApplication add_webmock_response":{"type":"method","name":"add_webmock_response","children":[],"call":[" webmock_responses []= "," webmock_responses ","request headers add ","request headers ","request object_id to_s ","request object_id "]}," Async HTTP WebMockApplication call":{"type":"method","name":"call","children":[],"call":[" build_response "," get_webmock_response ","request read "," get_ get_webmock_response  "]}," Async HTTP WebMockEndpoint accept_socket":{"type":"method","name":"accept_socket","children":[],"call":["server accept ","socket remote_address ","Async HTTP Server  new ","Async HTTP Server  new  accept "]}," Async HTTP WebMockEndpoint create_connected_sockets":{"type":"method","name":"create_connected_sockets","children":[{"type":"method","name":"alpn_protocol","children":[],"asgn":[],"call":[]}],"call":["socket instance_eval ","socket instance_variable_set ","sockets each ","Async IO Socket  pair tap ","Async IO Socket  pair ","pair tap "]}," Async HTTP WebMockEndpoint inspect":{"type":"method","name":"inspect","children":[],"call":[" protocol "," authority "," scheme "," class "]}," Async HTTP WebMockEndpoint connect":{"type":"method","name":"connect","children":[],"call":[" accept_socket "," Async "," create_connected_sockets "]}," Async HTTP WebMockEndpoint initialize":{"type":"method","name":"initialize","children":[],"call":[]}," Async HTTP WebMockClientWrapper build_webmock_response_headers":{"type":"method","name":"build_webmock_response_headers","children":[],"call":["o [] << ","o [] ","response headers each each_with_object ","response headers each ","response headers "]}," Async HTTP WebMockClientWrapper build_webmock_response":{"type":"method","name":"build_webmock_response","children":[],"call":["webmock_response body= ","webmock_response headers= "," build_webmock_response_headers ","webmock_response status= "," Protocol HTTP1 Reason DESCRIPTIONS  [] ","response status ","WebMock Response  new ","response body= "," Protocol HTTP Body Buffered  wrap ","response read ","WebMock Response  new  body= ","webmock_response response read = ","WebMock Response  new  headers= "," build_WebMock Response  new _headers ","WebMock Response  new  status= ","response response read = "]}," Async HTTP WebMockClientWrapper build_request_signature":{"type":"method","name":"build_request_signature","children":[],"call":["WebMock RequestSignature  new ","request headers to_h ","request headers ","request path ","request authority ","request scheme ","request method downcase to_sym ","request method downcase ","request method ","request body= "," Protocol HTTP Body Buffered  wrap ","request read ","request request read = "]}," Async HTTP WebMockClientWrapper close":{"type":"method","name":"close","children":[],"call":["@webmock_client close ","@network_client close "]}," Async HTTP WebMockClientWrapper call":{"type":"method","name":"call","children":[],"call":["WebMock CallbackRegistry  invoke_callbacks "," build_webmock_response ","WebMock CallbackRegistry  any_callbacks? "," raise ","WebMock NetConnectNotAllowedError  new ","@network_client call ","@webmock_client call ","WebMockApplication  add_webmock_response ","webmock_response should_timeout ","webmock_response raise_error_if_any ","WebMock  net_connect_allowed? ","request_signature uri ","WebMock StubRegistry  instance response_for_request ","WebMock StubRegistry  instance ","WebMock RequestRegistry  instance requested_signatures put ","WebMock RequestRegistry  instance requested_signatures ","WebMock RequestRegistry  instance "," build_request_signature "," authority ","request authority "," scheme ","request scheme "," build_webmock_@network_client call  "," build_webmock_@webmock_client call  "," build_WebMock StubRegistry  instance response_for_request  ","WebMockApplication  add_webmock_@network_client call  ","WebMockApplication  add_webmock_@webmock_client call  ","WebMockApplication  add_WebMock StubRegistry  instance response_for_request  ","webmock_@network_client call  should_timeout ","webmock_@webmock_client call  should_timeout ","WebMock StubRegistry  instance response_for_request  should_timeout ","webmock_@network_client call  raise_error_if_any ","webmock_@webmock_client call  raise_error_if_any ","WebMock StubRegistry  instance response_for_request  raise_error_if_any ","WebMock  WebMock  net_connect_allowed? ? "," build_request_signature  uri ","WebMock StubRegistry  instance @network_client call _for_request ","WebMock StubRegistry  instance @webmock_client call _for_request "," build_ build_request_signature  "]}," Async HTTP WebMockClientWrapper initialize":{"type":"method","name":"initialize","children":[],"call":["WebMockClient  new ","WebMockEndpoint  new "]}," WebMock HttpLibAdapters AsyncHttpClientAdapter disable!":{"type":"method","name":"disable!","children":[],"call":["Async HTTP  send "]}," WebMock HttpLibAdapters AsyncHttpClientAdapter enable!":{"type":"method","name":"enable!","children":[],"call":["Async HTTP  send "]}," WebMock API reset_executed_requests!":{"type":"method","name":"reset_executed_requests!","children":[],"call":["WebMock RequestRegistry  instance reset! ","WebMock RequestRegistry  instance "]}," WebMock BodyPattern body_format":{"type":"method","name":"body_format","children":[],"call":["BODY_FORMATS  [] ","content_type sub "]}," WebMock NetHTTPUtility get_uri":{"type":"method","name":"get_uri","children":[],"call":[]}," EventMachine WebMockHttpClient connection_completed":{"type":"method","name":"connection_completed","children":[],"call":[" send_request "," request_signature body "," request_signature "," request_signature headers "," headers_and_body_processed_by_middleware "]}," WebMock RequestStub to_return_json":{"type":"method","name":"to_return_json","children":[],"call":[" to_return ","resp_h merge ","body to_json ","body is_a? ","(pair\n  (sym :content_type)\n  (str \"application/json\")) merge ","headers to_h ","resp_h values_at ","(splat\n  (lvar :response_hashes)) flatten map ","(splat\n  (lvar :response_hashes)) flatten "," raise "," block_given? ","body call ","body respond_to? ","body is_a? ! ","b to_json ","b is_a? ","body arity == ","body arity "," lambda ","body to_json  to_json ","body call  to_json ","b to_json ody to_json ","body call ody to_json ","body to_json  is_a? ","body call  is_a? ","b to_json ody is_a? ","body call ody is_a? "," b to_json lock_given? "," body call lock_given? ","body to_json  call ","body call  call ","b to_json ody call ","body call ody call ","body to_json  respond_to? ","body call  respond_to? ","b to_json ody respond_to? ","body call ody respond_to? ","body to_json  is_a? ! ","body call  is_a? ! ","b to_json ody is_a? ! ","body call ody is_a? ! ","b to_json  to_json ","b to_json  is_a? ","body to_json  arity == ","body call  arity == ","b to_json ody arity == ","body call ody arity == ","body to_json  arity ","body call  arity ","b to_json ody arity ","body call ody arity "," lamb to_json da "," lambody call da "]}," WebMock net_http_connect_on_start?":{"type":"method","name":"net_http_connect_on_start?","children":[],"call":[]}," StubSocket StubIO peer_cert":{"type":"method","name":"peer_cert","children":[],"call":[]}," WebMock HttpLibAdapters NetHttpAdapter ensure_actual_connection":{"type":"method","name":"ensure_actual_connection","children":[],"call":[" do_start ","@socket is_a? "]}," WebMock BodyPattern matching_values":{"type":"method","name":"matching_values","children":[],"call":["expected === ","WebMock Util ValuesStringifier  stringify_values "," url_encoded_body? "," matching_body_array? ","expected is_a? ","actual is_a? "," matching_body_hashes? ","WebMock Util ValuesStringifier  stringify_values  === ","WebMock Util ValuesStringifier  stringify_values  is_a? "]}," WebMock BodyPattern matching_body_array?":{"type":"method","name":"matching_body_array?","children":[],"call":[" reutrn "," matching_values ","pattern [] ","query_parameters each_with_index ","query_parameters length == ","pattern length ","query_parameters length ","query_parameters is_a? "]}," StubSocket StubIO cipher":{"type":"method","name":"cipher","children":[],"call":[]}," StubSocket StubIO ssl_version":{"type":"method","name":"ssl_version","children":[],"call":[]}," StubSocket StubIO peeraddr":{"type":"method","name":"peeraddr","children":[],"call":[]}," WebMock HttpLibAdapters NetHttpAdapter ensure_actually_connected":{"type":"method","name":"ensure_actually_connected","children":[],"call":[" actually_connect ","@socket is_a? "]}," WebMock HttpLibAdapters NetHttpAdapter connect":{"type":"method","name":"connect","children":[],"call":["StubSocket  new ","WebMock  net_http_connect_on_start? ","Addressable URI  parse ","WebMock NetHTTPUtility  get_uri ","WebMock NetHTTPUtility  get_Addressable URI  parse  "]}," WebMock Util Headers normalize_name":{"type":"method","name":"normalize_name","children":[],"call":[]}," EventMachine WebMockHttpClient headers_and_body_processed_by_middleware":{"type":"method","name":"headers_and_body_processed_by_middleware","children":[],"call":["m request ","m respond_to? ","@conn middleware each ","@conn middleware ","@req body "," build_request "]}}