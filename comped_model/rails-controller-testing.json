{" Rails Controller Testing TestProcess assigns":{"type":"method","name":"assigns","children":[],"call":["assigns [] ","key nil? ","assigns regular_writer ","@controller view_assigns each ","@controller view_assigns "," with_indifferent_access "," with_indifferent_access  [] "," with_indifferent_access  regular_writer ","@controller view_ with_indifferent_access  each ","@controller view_ with_indifferent_access  "]}," Rails Controller Testing TemplateAssertions assert_template":{"type":"method","name":"assert_template","children":[],"call":[" raise "," assert ","@_partials empty? ","options key? "," assert_includes "," sprintf ","@_partials keys ","options [] ","actual_count == ","expected_count to_i ","@_partials [] "," warn ","@_rendered_views view_rendered? ","expecting %s to be rendered with %s but was with %s % ","@_rendered_views locals_for ","@_rendered_views rendered_views ","expected %s to be rendered but it was not. % ","expected_partial to_s sub sub ","expected_partial to_s sub ","expected_partial to_s ","@_files keys ","@_files blank? ","@_layouts empty? ","l =~ ","@_layouts keys any? ","@_layouts keys ","expected_layout to_s ","options assert_valid_keys ","rendered blank? ","t match ","rendered any? ","t_splited last == ","t_splited last ","options_splited size ","t split ","options split ","options empty? ! ","options empty? ","rendered keys ","options inspect ","options to_s ","Symbol  === "," response body "," response ","options to_s  key? ","options to_s  [] ","@_partials []  == ","options []  to_i ","@_rendered_expected_partial to_s sub sub s expected_partial to_s sub sub _rendered? ","@_rendered_expected_partial to_s sub sub s locals_for ","@_rendered_expected_partial to_s sub sub s rendered_expected_partial to_s sub sub s ","options []  to_s sub sub ","options []  to_s sub ","options []  to_s ","options to_s  assert_valid_keys ","t split  last == ","t split  last ","options split  size ","options to_s _splited size ","options to_s  split ","options to_s  empty? ! ","options to_s  empty? ","options to_s  inspect ","options to_s  to_s "]}," Rails Controller Testing TemplateAssertions reset_template_assertion":{"type":"method","name":"reset_template_assertion","children":[],"call":[" instance_variable_get clear "," instance_variable_get "," instance_variable_defined? ","RENDER_TEMPLATE_INSTANCE_VARIABLES  each "]}," Rails Controller Testing TemplateAssertions process":{"type":"method","name":"process","children":[],"call":[" reset_template_assertion "]}," Rails Controller Testing TemplateAssertions teardown_subscriptions":{"type":"method","name":"teardown_subscriptions","children":[],"call":["ActiveSupport Notifications  unsubscribe ","@_subscribers each "]}," Rails Controller Testing TemplateAssertions setup_subscriptions":{"type":"method","name":"setup_subscriptions","children":[],"call":["@_subscribers << ","@_files [] ","path split last ","path split ","payload [] ","@_templates [] ","@_partials [] ","virtual_path split last ","virtual_path split ","virtual_path =~ ","ActiveSupport Notifications  subscribe ","@_layouts [] ","path =~ "," instance_variable_set ","Hash  new ","RENDER_TEMPLATE_INSTANCE_VARIABLES  each ","payload []  split last ","payload []  split ","@_virtual_path =~ s [] ","virtual_payload []  split last ","virtual_payload []  split ","virtual_payload []  =~ ","payload []  =~ "]}," Rails Controller Testing install":{"type":"method","name":"install","children":[],"call":[]}}