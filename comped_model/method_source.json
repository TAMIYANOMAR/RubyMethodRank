{" MethodSource MethodExtensions source":{"type":"method","name":"source","children":[],"call":["file close ","MethodSource  valid_expression? ","file readline "," loop "," raise "," name ","file ! ","MethodSource  source_helper "," source_location "," respond_to? ","source ! "," class "," inspect ","MethodSource  source_helper  close ","MethodSource  file readline id_expression? ","MethodSource  source_helper  readline ","MethodSource  source_helper  ! ","MethodSource  MethodSource  source_helper _helper "," MethodSource  source_helper _location "]}," MethodSource source_helper":{"type":"method","name":"source_helper","children":[],"call":[]}," MethodSource suppress_stderr":{"type":"method","name":"suppress_stderr","children":[],"call":[]}," MethodSource valid_expression?":{"type":"method","name":"valid_expression?","children":[],"call":[]}," MethodSource MethodExtensions comment":{"type":"method","name":"comment","children":[],"call":[" raise "," name ","comment ! ","MethodSource  comment_helper "," source_location "," respond_to? "," class "," inspect ","MethodSource  comment_helper  ! ","MethodSource  MethodSource  comment_helper _helper "]}," MethodSource comment_helper":{"type":"method","name":"comment_helper","children":[],"call":[]}," MethodSource SourceLocation UnboundMethodExtensions source_location":{"type":"method","name":"source_location","children":[],"call":["instance method source_location ","instance method "," name ","ObjectSpace  each_object first ","ObjectSpace  each_object "," owner ","klass allocate method source_location ","klass allocate method ","klass allocate "," include ","Class  new "," method source_location "," method ","klass == ","0 method source_location ","0 method ","a method source_location ","a method "," to_java source_location ","Thread  current to_java getContext ","Thread  current to_java ","Thread  current "," to_java ","Object  instance_method bind call source_location ","Object  instance_method bind call ","Object  instance_method bind ","Object  instance_method "]}," MethodSource SourceLocation MethodExtensions source_location":{"type":"method","name":"source_location","children":[],"call":["File  exist? ","@file to_s ","File  expand_path "," set_trace_func "," call "," method to_proc "," method "," arity "," arity -@ - "," arity -@ "," arity < ","@file nil? "," to_java source_location ","Thread  current to_java getContext ","Thread  current to_java ","Thread  current "," to_java ","File  expand_path  to_s ","File  expand_path  nil? "]}," MethodSource SourceLocation MethodExtensions trace_func":{"type":"method","name":"trace_func","children":[],"call":[" raise "," set_trace_func ","event == "]}," MethodSource MethodExtensions included":{"type":"method","name":"included","children":[],"call":[]}," MethodSource SourceLocation ProcExtensions source_location":{"type":"method","name":"source_location","children":[],"call":["2 to_i "," to_s =~ "," to_s "," block line "," block "," block file to_s "," block file "]}," MethodSource ReeSourceLocation source_location":{"type":"method","name":"source_location","children":[],"call":[" __line__ "," __file__ "]}," MethodSource extract_code":{"type":"method","name":"extract_code","children":[],"call":[]}," MethodSource lines_for":{"type":"method","name":"lines_for","children":[],"call":[]}," MethodSource CodeHelpers IncompleteExpression ===":{"type":"method","name":"===","children":[],"call":[]}," MethodSource CodeHelpers extract_last_comment":{"type":"method","name":"extract_last_comment","children":[],"call":["buffer replace ","buffer << ","line lstrip ","line =~ ","lines each "]}," MethodSource CodeHelpers extract_first_expression":{"type":"method","name":"extract_first_expression","children":[],"call":[" raise "," complete_expression? ","block call ","code << ","lines each ","lines slice! join ","lines slice! ","consume - ","consume zero? ","lines slice! join  << "]}," MethodSource CodeHelpers complete_expression?":{"type":"method","name":"complete_expression?","children":[],"call":["str !~ "," eval "," catch "]}," MethodSource CodeHelpers comment_describing":{"type":"method","name":"comment_describing","children":[],"call":[" extract_last_comment ","lines [] ","line_number - ","file each_line to_a ","file each_line ","file is_a? ","file each_line to_a  [] "]}," MethodSource CodeHelpers expression_at":{"type":"method","name":"expression_at","children":[],"call":[" raise ","code gsub "," extract_first_expression ","options [] ","lines [] ","line_number - ","file each_line to_a ","file each_line ","file is_a? ","(pair\n  (sym :strict)\n  (false)) merge! ","lines [] == "," loop ","line_number > ","(pair\n  (sym :strict)\n  (false)) merge!  [] ","file each_line to_a  [] ","file each_line to_a  [] == "]}," MethodSource CodeHelpers IncompleteExpression rbx?":{"type":"method","name":"rbx?","children":[],"call":[]}}