{" Server WebServer add_gauge":{"type":"method","name":"add_gauge","children":[],"call":["@metrics << ","gauge observe ","PrometheusExporter Metric Gauge  new ","PrometheusExporter Metric Gauge  new  observe "]}," Server WebServer metrics":{"type":"method","name":"metrics","children":[],"call":["@metrics map join ","@metrics map "," add_gauge ","metric_text length > ","metric_text length ","STDERR  puts ","@collector prometheus_metrics_text ","Timeout  timeout ","metrics map join ","metrics map ","metrics << "," get_rss "," logger error "," logger ","@logger error ","@collector prometheus_metrics_text  length > ","@collector prometheus_metrics_text  length "]}," Server WebServer stop":{"type":"method","name":"stop","children":[],"call":["@server shutdown "]}," Server WebServer start":{"type":"method","name":"start","children":[],"call":["STDERR  puts ","@server start ","Thread  start "," logger error "," logger ","@logger error "]}," Server WebServer handle_metrics":{"type":"method","name":"handle_metrics","children":[],"call":["res status= ","res body= ","e status_code ","e respond_to? ","@collector process ","JSON  parse ","req body ","@total_bad_metrics observe ","STDERR  puts ","e backtrace ","e inspect ","@total_metrics observe ","@total_sessions observe ","@bad_metrics_total observe ","@metrics_total observe ","@sessions_total observe "," logger error "," logger ","@logger error "]}," Server WebServer initialize":{"type":"method","name":"initialize","children":[],"call":["res body= ","res status= "," handle_metrics ","req path == ","req path "," metrics ","res []= ","@server mount_proc ","Collector  new ","WEBrick HTTPServer  new ","WEBrick Log  new ","res header []= ","res header ","sio string ","writer close ","writer write ","Zlib GzipWriter  new ","StringIO  new ","req header [] to_s include? ","req header [] to_s ","req header [] ","req header ","@total_bad_metrics observe ","@total_sessions observe ","@total_metrics observe ","PrometheusExporter Metric Counter  new ","@bad_metrics_total observe ","@sessions_total observe ","@metrics_total observe "," authenticate ","@logger info ","opts [] ","(str \"ALL\") include? ","WEBrick HTTPServer  new  mount_proc ","StringIO  new  string ","Zlib GzipWriter  new  close ","Zlib GzipWriter  new  write ","PrometheusExporter Metric Counter  new  observe ","@total_sesStringIO  new ns observe ","@sesStringIO  new ns_total observe ","@WEBrick Log  new  info ","WEBrick Log  new  info "]}," Server Collector register_metric_unsafe":{"type":"method","name":"register_metric_unsafe","children":[],"call":["STDERR  puts ","@metrics []= ","PrometheusExporter Metric Summary  new ","PrometheusExporter Metric Counter  new ","PrometheusExporter Metric Gauge  new ","obj [] ","PrometheusExporter Metric Histogram  new "," symbolize_keys "]}," Server Collector register_metric":{"type":"method","name":"register_metric","children":[],"call":["@metrics << ","@mutex synchronize ","@metrics []= ","metric name "]}," Server Collector prometheus_metrics_text":{"type":"method","name":"prometheus_metrics_text","children":[],"call":["@metrics values map join ","@metrics values map ","@metrics values ","@mutex synchronize ","(send\n  (send\n    (ivar :@metrics) :values) :+\n  (send\n    (send\n      (send\n        (ivar :@collectors) :values) :map\n      (block-pass\n        (sym :metrics))) :flatten)) map join ","(send\n  (send\n    (ivar :@metrics) :values) :+\n  (send\n    (send\n      (send\n        (ivar :@collectors) :values) :map\n      (block-pass\n        (sym :metrics))) :flatten)) map ","@metrics values + ","@collectors values map flatten ","@collectors values map ","@collectors values ","val << ","metrics values map join ","metrics values map ","metrics values ","c observe ","PrometheusExporter Metric Counter  new ","metrics [] ","m [] ","k to_s ","PROCESS_COUNTERS  map ","g observe ","PrometheusExporter Metric Gauge  new ","PROCESS_GAUGES  map ","@process_metrics map ","@process_metrics length > ","@process_metrics length ","@metrics m [] alues map join ","@metrics @metrics values map join ues map join ","@metrics m [] alues map ","@metrics @metrics values map join ues map ","@metrics m [] alues ","@metrics @metrics values map join ues ","(send\n  (send\n    (im [] ar :@metrics) :m [] alues) :+\n  (send\n    (send\n      (send\n        (im [] ar :@collectors) :m [] alues) :map\n      (block-pass\n        (sym :metrics))) :flatten)) map join ","(send\n  (send\n    (ivar :@metrics) :values) :+\n  (send\n    (send\n      (send\n        (ivar :@collectors) :values) :map\n      (block to_s -pass\n        (sym :metrics))) :flatten)) map join ","(send\n  (send\n    (ivar :@metrics) :@metrics values map join ues) :+\n  (send\n    (send\n      (send\n        (ivar :@collectors) :@metrics values map join ues) :map\n      (block-pass\n        (sym :metrics))) :flatten)) map join ","(send\n  (send\n    (im [] ar :@metrics) :m [] alues) :+\n  (send\n    (send\n      (send\n        (im [] ar :@collectors) :m [] alues) :map\n      (block-pass\n        (sym :metrics))) :flatten)) map ","(send\n  (send\n    (ivar :@metrics) :values) :+\n  (send\n    (send\n      (send\n        (ivar :@collectors) :values) :map\n      (block to_s -pass\n        (sym :metrics))) :flatten)) map ","(send\n  (send\n    (ivar :@metrics) :@metrics values map join ues) :+\n  (send\n    (send\n      (send\n        (ivar :@collectors) :@metrics values map join ues) :map\n      (block-pass\n        (sym :metrics))) :flatten)) map ","@metrics m [] alues + ","@metrics @metrics values map join ues + ","@collectors m [] alues map flatten ","@collectors @metrics values map join ues map flatten ","@collectors m [] alues map ","@collectors @metrics values map join ues map ","@collectors m [] alues ","@collectors @metrics values map join ues ","m [] al << ","@metrics values map join  << ","metrics m [] alues map join ","metrics @metrics values map join ues map join ","metrics m [] alues map ","metrics @metrics values map join ues map ","metrics m [] alues ","metrics @metrics values map join ues ","c obserm [] e ","k to_s  to_s ","g obserm [] e "]}," Server Collector process":{"type":"method","name":"process","children":[],"call":["metric observe ","obj [] "," register_metric_unsafe ","metric ! ","@metrics [] ","@mutex synchronize ","collector observe ","@collectors [] ","JSON  parse ","collector collect ","@json_serializer parse "," observe_process ","obj [] == "," observe_web "," observe_sidekiq ","metric decrement ","metric increment "," process_hash ","obj [] merge "," register_metric_unsafe  observe ","@metrics []  observe ","JSON  parse  [] ","@json_serializer parse  [] "," register_ register_metric_unsafe _unsafe "," register_@metrics [] _unsafe "," register_metric_unsafe  ! ","@metrics []  ! ","@ register_metric_unsafe s [] ","@@metrics [] s [] ","@collectors []  observe ","@@collectors [] s [] ","@collectors []  collect ","JSON  parse  [] == ","@json_serializer parse  [] == "," register_metric_unsafe  decrement ","@metrics []  decrement "," register_metric_unsafe  increment ","@metrics []  increment ","JSON  parse  [] merge ","@json_serializer parse  [] merge "]}," Server Collector initialize":{"type":"method","name":"initialize","children":[],"call":["Mutex  new "," register_collector ","SidekiqCollector  new ","ProcessCollector  new ","WebCollector  new ","PrometheusExporter  detect_json_serializer ","DelayedJobCollector  new ","PumaCollector  new ","HutchCollector  new ","UnicornCollector  new ","ActiveRecordCollector  new ","ShoryukenCollector  new ","SidekiqQueueCollector  new ","ResqueCollector  new ","SidekiqProcessCollector  new ","SidekiqStatsCollector  new "]}," Metric Summary observe":{"type":"method","name":"observe","children":[],"call":["@counts [] ","@sums [] ","@buffers [] [] << ","@buffers [] [] ","@buffers [] ","value to_f "," rotate_if_needed "," ensure_summary ","value to_f  to_f "]}," Metric Summary rotate_if_needed":{"type":"method","name":"rotate_if_needed","children":[],"call":["@current_buffer == ","raw clear ","@buffers [] each ","@buffers [] ","(lvasgn :now\n  (send\n    (const nil :Process) :clock_gettime\n    (const\n      (const nil :Process) :CLOCK_MONOTONIC))) > ","@last_rotated + ","Process  clock_gettime ","(lvasgn :Process  clock_gettime \n  (send\n    (const nil :Process) :clock_gettime\n    (const\n      (const nil :Process) :CLOCK_MONOTONIC))) > "]}," Metric Summary ensure_summary":{"type":"method","name":"ensure_summary","children":[],"call":["@counts [] ","@sums [] ","@buffers [] [] ","@buffers [] "]}," Metric Summary metric_text":{"type":"method","name":"metric_text","children":[],"call":["text << ","@counts [] "," labels_text "," prefix ","@sums [] ","value to_f ","labels merge ","quantiles each "," calculate_all_quantiles each "," calculate_all_quantiles ","String  new "," +@ ","String  new  << "," +@  << "," labels_String  new  "," labels_ +@  "]}," Metric Summary calculate_all_quantiles":{"type":"method","name":"calculate_all_quantiles","children":[],"call":["result []= "," calculate_quantiles ","buffer each ","@buffers [] ","@buffers []  each ","@@buffers [] s [] "]}," Metric Summary calculate_quantiles":{"type":"method","name":"calculate_quantiles","children":[],"call":["result []= ","sorted [] ","(send\n  (lvar :length) :*\n  (lvar :quantile)) ceil - ","(send\n  (lvar :length) :*\n  (lvar :quantile)) ceil ","length * ","QUANTILES  each ","length > ","sorted length ","raw_data sort ","@quantiles each ","raw_data sort  [] ","(send\n  (lvar :sorted length ) :*\n  (lvar :quantile)) ceil - ","(send\n  (lvar :sorted length ) :*\n  (lvar :quantile)) ceil ","sorted length  * ","sorted length  > ","sorted sorted length  ","raw_data sort  length "]}," Metric Summary type":{"type":"method","name":"type","children":[],"call":[]}," Metric Summary initialize":{"type":"method","name":"initialize","children":[],"call":["Process  clock_gettime ","opts [] "," reset! "]}," Metric Gauge observe":{"type":"method","name":"observe","children":[],"call":["@data []= "," raise ","(send\n  (const nil :Numeric) :===\n  (lvar :value)) ! ","Numeric  === "," data delete "," data ","value nil? "]}," Metric Gauge metric_text":{"type":"method","name":"metric_text","children":[],"call":["(send\n  (ivar :@data) :map) join "," labels_text "," prefix ","@data map "]}," Metric Gauge type":{"type":"method","name":"type","children":[],"call":[]}," Metric Gauge initialize":{"type":"method","name":"initialize","children":[],"call":[" reset! "," raise ","name end_with? "]}," Metric Counter observe":{"type":"method","name":"observe","children":[],"call":["@data [] "]}," Metric Counter metric_text":{"type":"method","name":"metric_text","children":[],"call":["(send\n  (ivar :@data) :map) join "," labels_text "," prefix ","@data map "]}," Metric Counter type":{"type":"method","name":"type","children":[],"call":[]}," Metric Counter initialize":{"type":"method","name":"initialize","children":[],"call":[" reset! "]}," Metric Base to_prometheus_text":{"type":"method","name":"to_prometheus_text","children":[],"call":[" metric_text "," type "," prefix "," name "," help "]}," Metric Base labels_text":{"type":"method","name":"labels_text","children":[],"call":["(send\n  (lvar :labels) :map) join ","labels map ","labels length > ","labels length ","(or\n  (lvar :labels)\n  (hash)) merge ","Base  default_labels "," escape_value "," needs_escape? ","value to_s ","Base  default_labels merge ","((send\n  (lvar :labels) :map) join end\n  (lvar :label(send\n  (lvar :labels) :map) join ) :map) join ","(send\n  (lvar :(or\n  (lvar :labels)\n  (hash)) merge ) :map) join ","(send\n  (lvar :Base  default_labels merge ) :map) join ","label(send\n  (lvar :labels) :map) join  map ","(or\n  (lvar :labels)\n  (hash)) merge  map ","Base  default_labels merge  map ","label(send\n  (lvar :labels) :map) join  length > ","(or\n  (lvar :labels)\n  (hash)) merge  length > ","Base  default_labels merge  length > ","label(send\n  (lvar :labels) :map) join  length ","(or\n  (lvar :labels)\n  (hash)) merge  length ","Base  default_labels merge  length ","(or\n  (lvar :label(send\n  (lvar :labels) :map) join )\n  (ha(send\n  (lvar :labels) :map) join h)) merge ","(or\n  (lvar :(or\n  (lvar :labels)\n  (hash)) merge )\n  (hash)) merge ","(or\n  (lvar :Base  default_labels merge )\n  (hash)) merge ","Ba(send\n  (lvar :labels) :map) join e  default_label(send\n  (lvar :labels) :map) join  ","Base  default_(or\n  (lvar :labels)\n  (hash)) merge  ","Base  default_Base  default_labels merge  "," e(send\n  (lvar :labels) :map) join cape_value "," escape_ escape_value  "," escape_value to_s  "," need(send\n  (lvar :labels) :map) join _e(send\n  (lvar :labels) :map) join cape? ","value to_(send\n  (lvar :labels) :map) join  "," escape_value  to_s ","value to_s  to_s ","Ba(send\n  (lvar :labels) :map) join e  default_label(send\n  (lvar :labels) :map) join  merge ","Base  default_(or\n  (lvar :labels)\n  (hash)) merge  merge ","Base  default_Base  default_labels merge  merge "]}," Metric Base prefix":{"type":"method","name":"prefix","children":[],"call":["Base  default_prefix + ","Base  default_prefix "]}," Metric Base from_json":{"type":"method","name":"from_json","children":[],"call":["@data []= ","Hash  [] ","k1 to_sym ","k map ","JSON  parse ","json [] each ","json [] ","Hash  === ","String  === ","json []  []= ","Hash  [] 1 to_sym ","JSON  parse 1 to_sym ","Hash  []  map ","JSON  parse  map ","JSON  parse  [] each ","JSON  parse  [] "]}," Metric Base metric_text":{"type":"method","name":"metric_text","children":[],"call":[" raise "]}," Metric Base type":{"type":"method","name":"type","children":[],"call":[" raise "]}," Metric Base initialize":{"type":"method","name":"initialize","children":[],"call":[]}," Metric Base default_prefix":{"type":"method","name":"default_prefix","children":[],"call":[]}," Metric Base default_prefix=":{"type":"method","name":"default_prefix=","children":[],"call":[]}," Client ensure_socket!":{"type":"method","name":"ensure_socket!","children":[],"call":[" raise ","Time  now to_f ","Time  now ","@socket write ","TCPSocket  new "," close_socket_if_old! ","@socket ! ","TCPSocket  new  write ","TCPSocket  new  ! "]}," Client close_socket_if_old!":{"type":"method","name":"close_socket_if_old!","children":[],"call":[" close_socket! ","(send\n  (ivar :@socket_started) :+\n  (const nil :MAX_SOCKET_AGE)) > ","Time  now to_f ","Time  now ","@socket_started + ","(send\n  (ivar :@socket_started) :+\n  (const nil :MAX_SOCKET_AGE)) < "," p "]}," Client close_socket!":{"type":"method","name":"close_socket!","children":[],"call":["@socket close ","@socket flush ","@socket write "]}," Client ensure_worker_thread!":{"type":"method","name":"ensure_worker_thread!","children":[],"call":[" worker_loop ","Thread  new ","@mutex synchronize "," sleep "]}," Client worker_loop":{"type":"method","name":"worker_loop","children":[],"call":["STDERR  puts "," sleep "," process_queue "," close_socket_if_old! "]}," Client stop":{"type":"method","name":"stop","children":[],"call":[" close_socket! "," sleep ","@worker_thread alive? ","@mutex synchronize "]}," Client process_queue":{"type":"method","name":"process_queue","children":[],"call":[" raise ","STDERR  puts ","@socket write ","message bytesize to_s upcase ","message bytesize to_s ","message bytesize ","@queue pop "," ensure_socket! ","@queue length > ","@queue length ","@queue pop  bytesize to_s upcase ","@queue pop  bytesize to_s ","@queue pop  bytesize "]}," Client send":{"type":"method","name":"send","children":[],"call":[" ensure_worker_thread! ","@queue pop ","STDERR  puts ","@queue length > ","@queue length ","@queue << ","obj to_json "]}," Client register":{"type":"method","name":"register","children":[],"call":["@metrics << ","RemoteMetric  new ","@RemoteMetric  new s << "]}," Client initialize":{"type":"method","name":"initialize","children":[],"call":["Mutex  new "," raise ","max_queue_size to_i <= ","max_queue_size to_i ","Queue  new ","PrometheusExporter  detect_json_serializer ","json_serializer == ","max_queue_size to_i  to_i <= ","max_queue_size to_i  to_i "]}," Client RemoteMetric observe":{"type":"method","name":"observe","children":[],"call":["@client send ","@client send_json "," standard_values "]}," Client RemoteMetric initialize":{"type":"method","name":"initialize","children":[],"call":[]}," Server WebServer get_rss":{"type":"method","name":"get_rss","children":[],"call":["File  read split [] to_i * ","File  read split [] to_i ","File  read split [] ","File  read split ","File  read ","Process  pid ","(str \"getconf PAGESIZE\") to_i "," pid "]}," Server WebCollector observe":{"type":"method","name":"observe","children":[],"call":["@http_sql_duration_seconds observe ","sql [] ","timings [] ","@http_redis_duration_seconds observe ","redis [] ","@http_duration_seconds observe ","obj [] ","@http_requests observe ","labels merge ","@http_queue_duration_seconds observe ","@http_requests_total observe ","default_labels merge ","custom_labels nil? ","@http_request_queue_duration_seconds observe ","@http_request_sql_duration_seconds observe ","@http_request_redis_duration_seconds observe ","@http_request_duration_seconds observe ","@http_timings [] _duration_seconds observe ","timings []  [] ","obj []  [] ","default_labels merge  merge ","default_default_labels merge  merge ","obj []  merge ","custom_default_labels merge  nil? ","obj []  nil? ","@http_request_timings [] _duration_seconds observe "]}," Server WebCollector ensure_metrics":{"type":"method","name":"ensure_metrics","children":[],"call":["@metrics []= ","PrometheusExporter Metric Summary  new ","PrometheusExporter Metric Counter  new ","PrometheusExporter Metric Base  default_aggregation new ","PrometheusExporter Metric Base  default_aggregation "]}," Server WebCollector metrics":{"type":"method","name":"metrics","children":[],"call":["@metrics values "]}," Server WebCollector collect":{"type":"method","name":"collect","children":[],"call":[" observe "," ensure_metrics "]}," Server WebCollector type":{"type":"method","name":"type","children":[],"call":[]}," Server WebCollector initialize":{"type":"method","name":"initialize","children":[],"call":[]}," Server TypeCollector metrics":{"type":"method","name":"metrics","children":[],"call":[" raise "]}," Server TypeCollector collect":{"type":"method","name":"collect","children":[],"call":[" raise "]}," Server TypeCollector type":{"type":"method","name":"type","children":[],"call":[" raise "]}," Server SidekiqCollector ensure_sidekiq_metrics":{"type":"method","name":"ensure_sidekiq_metrics","children":[],"call":["PrometheusExporter Metric Counter  new ","@sidekiq_job_count ! ","@sidekiq_jobs_total ! ","PrometheusExporter Metric Summary  new ","PrometheusExporter Metric Base  default_aggregation new ","PrometheusExporter Metric Base  default_aggregation ","PrometheusExporter Metric Counter  new  ! "]}," Server SidekiqCollector metrics":{"type":"method","name":"metrics","children":[],"call":[]}," Server SidekiqCollector observe":{"type":"method","name":"observe","children":[],"call":["@sidekiq_failed_job_count observe ","obj [] ","obj [] ! ","@sidekiq_job_count observe ","@sidekiq_job_duration_seconds observe "," ensure_sidekiq_metrics "]}," Server SidekiqCollector type":{"type":"method","name":"type","children":[],"call":[]}," Server ProcessCollector observe":{"type":"method","name":"observe","children":[],"call":["@process_metrics << ","current [] + < ","current [] + ","current [] ","obj [] == ","obj [] ","@process_metrics delete_if ","obj []= "," Process  clock_gettime "]}," Server ProcessCollector metrics":{"type":"method","name":"metrics","children":[],"call":["metrics values ","c observe ","PrometheusExporter Metric Counter  new ","metrics [] ","m [] ","k to_s ","PROCESS_COUNTERS  map ","g observe ","PrometheusExporter Metric Gauge  new ","PROCESS_GAUGES  map ","@process_metrics map ","@process_metrics length == ","@process_metrics length ","m [] merge ","metric_key merge! ","metrics m [] alues ","c obserm [] e ","k to_s  to_s ","g obserm [] e ","metric_k to_s ey merge! ","m [] merge  merge! "]}," Server ProcessCollector type":{"type":"method","name":"type","children":[],"call":[]}," Server ProcessCollector initialize":{"type":"method","name":"initialize","children":[],"call":[]}," Server CollectorBase prometheus_metrics_text":{"type":"method","name":"prometheus_metrics_text","children":[],"call":[]}," Server CollectorBase process":{"type":"method","name":"process","children":[],"call":[]}," Server Collector register_collector":{"type":"method","name":"register_collector","children":[],"call":["@collectors []= ","collector type "]}," Middleware call":{"type":"method","name":"call","children":[],"call":["@client send_json ","params [] ","env [] ","result [] ","MethodProfiler  stop ","@app call ","MethodProfiler  start "," measure_queue_time ","obj merge "," custom_labels "," default_labels ","env []  [] ","@app call  [] "," measure_ measure_queue_time  ","obj merge  merge "," custom_ custom_labels  "," default_ custom_labels  "]}," Middleware initialize":{"type":"method","name":"initialize","children":[],"call":["MethodProfiler  patch ","config [] ","PrometheusExporter Client  default ","Gem Version  new >= ","Gem Version  new "," apply_redis_client_middleware! "]}," Instrumentation Sidekiq call":{"type":"method","name":"call","children":[],"call":["@client send_json ","worker class to_s ","worker class "," Process  clock_gettime - "," Process  clock_gettime ","msg [] ","worker class to_s == "," raise "," get_name "," class get_worker_custom_labels "," class "," class get_name "]}," Instrumentation Sidekiq initialize":{"type":"method","name":"initialize","children":[],"call":["PrometheusExporter Client  default ","options fetch "]}," Instrumentation Process collect_v8_stats":{"type":"method","name":"collect_v8_stats","children":[],"call":["stats [] to_i ","stats [] ","metric [] ","context heap_stats ","ObjectSpace  each_object ","metric []= ","(const nil :MiniRacer) ! ","context heap_stats  [] to_i ","context heap_stats  [] ","context heap_context heap_stats  "]}," Instrumentation Process collect_gc_stats":{"type":"method","name":"collect_gc_stats","children":[],"call":["metric []= ","stat [] ","GC  stat ","GC  stat  [] ","GC  GC  stat  "]}," Instrumentation Process collect_process_stats":{"type":"method","name":"collect_process_stats","children":[],"call":["metric []= "," rss "," pid "]}," Instrumentation Process rss":{"type":"method","name":"rss","children":[],"call":["File  read split [] to_i * ","File  read split [] to_i ","File  read split [] ","File  read split ","File  read "," pid ","(str \"getconf PAGESIZE\") to_i "]}," Instrumentation Process pid":{"type":"method","name":"pid","children":[],"call":[" Process  pid "]}," Instrumentation Process collect":{"type":"method","name":"collect","children":[],"call":[" collect_process_stats "," collect_v8_stats "," collect_gc_stats ","metric []= "," hostname "," PrometheusExporter  hostname "]}," Instrumentation Process initialize":{"type":"method","name":"initialize","children":[],"call":[]}," Instrumentation Process start":{"type":"method","name":"start","children":[],"call":[]}," MethodProfiler stop":{"type":"method","name":"stop","children":[],"call":[]}," MethodProfiler clear":{"type":"method","name":"clear","children":[],"call":[]}," MethodProfiler start":{"type":"method","name":"start","children":[],"call":[]}," MethodProfiler transfer":{"type":"method","name":"transfer","children":[],"call":[]}," MethodProfiler patch":{"type":"method","name":"patch","children":[],"call":[]}," Client send_json":{"type":"method","name":"send_json","children":[],"call":[" send ","obj to_json ","@json_serializer dump ","obj merge ","@custom_labels nil? "]}," Client default=":{"type":"method","name":"default=","children":[],"call":[]}," Client default":{"type":"method","name":"default","children":[],"call":[]}," Server SidekiqCollector collect":{"type":"method","name":"collect","children":[],"call":["@sidekiq_failed_job_count observe ","obj [] ","obj [] ! ","@sidekiq_job_count observe ","@sidekiq_job_duration_seconds observe "," ensure_sidekiq_metrics ","@sidekiq_failed_jobs_total observe ","@sidekiq_jobs_total observe ","default_labels merge ","custom_labels nil? ","@sidekiq_restarted_jobs_total observe ","@sidekiq_dead_jobs_total observe ","default_default_labels merge  merge ","custom_default_labels merge  nil? ","obj []  nil? "]}," Server ProcessCollector collect":{"type":"method","name":"collect","children":[],"call":["@process_metrics << ","current [] + < ","current [] + ","current [] ","obj [] == ","obj [] ","@process_metrics delete_if ","obj []= "," Process  clock_gettime "]}," Server Runner register_type_collectors":{"type":"method","name":"register_type_collectors","children":[],"call":["STDERR  puts "," verbose "," collector register_collector ","klass new "," collector "," type_collectors each "," type_collectors "]}," Server Runner collector":{"type":"method","name":"collector","children":[],"call":[" collector_class new "," collector_class "]}," Server Runner server_class":{"type":"method","name":"server_class","children":[],"call":[]}," Server Runner server_class=":{"type":"method","name":"server_class=","children":[],"call":[]}," Server Runner verbose":{"type":"method","name":"verbose","children":[],"call":[]}," Server Runner verbose=":{"type":"method","name":"verbose=","children":[],"call":[]}," Server Runner type_collectors":{"type":"method","name":"type_collectors","children":[],"call":[]}," Server Runner type_collectors=":{"type":"method","name":"type_collectors=","children":[],"call":[]}," Server Runner collector_class":{"type":"method","name":"collector_class","children":[],"call":[]}," Server Runner collector_class=":{"type":"method","name":"collector_class=","children":[],"call":[]}," Server Runner port":{"type":"method","name":"port","children":[],"call":[]}," Server Runner port=":{"type":"method","name":"port=","children":[],"call":[]}," Server Runner prefix":{"type":"method","name":"prefix","children":[],"call":[]}," Server Runner prefix=":{"type":"method","name":"prefix=","children":[],"call":[]}," Server Runner start":{"type":"method","name":"start","children":[],"call":["server start "," server_class new "," verbose "," collector "," port "," server_class "," raise "," collector is_a? "," register_type_collectors ","PrometheusExporter Metric Base  default_prefix= "," prefix "," timeout ","PrometheusExporter Instrumentation Unicorn  start "," unicorn_listen_address "," unicorn_pid_file ","PrometheusExporter LocalClient  new "," bind ","PrometheusExporter Metric Base  default_labels= "," label "," realm "," auth ","PrometheusExporter Metric Base  default_aggregation= "," histogram "," require_relative "," server_class new  start ","  server_class new _class new ","  server_class new _class "]}," Server Runner initialize":{"type":"method","name":"initialize","children":[],"call":[" send "," class method_defined? "," class ","options each "]}," PrometheusExporter has_oj?":{"type":"method","name":"has_oj?","children":[],"call":[]}," PrometheusExporter detect_json_serializer":{"type":"method","name":"detect_json_serializer","children":[],"call":[]}," PrometheusExporter OjCompat dump":{"type":"method","name":"dump","children":[],"call":[]}," PrometheusExporter OjCompat parse":{"type":"method","name":"parse","children":[],"call":[]}," Server Collector observe_process":{"type":"method","name":"observe_process","children":[],"call":["@process_metrics << ","current [] + < ","current [] + ","current [] ","obj [] == ","obj [] ","@process_metrics delete_if ","obj []= "," Process  clock_gettime "]}," Server Collector observe_web":{"type":"method","name":"observe_web","children":[],"call":["@http_sql_duration_seconds observe ","sql [] ","timings [] ","@http_redis_duration_seconds observe ","redis [] ","@http_duration_seconds observe ","obj [] ","@http_requests observe ","labels merge "," ensure_web_metrics ","@http_timings [] _duration_seconds observe ","timings []  [] ","obj []  [] "]}," Server Collector ensure_web_metrics":{"type":"method","name":"ensure_web_metrics","children":[],"call":["@metrics []= ","PrometheusExporter Metric Summary  new ","PrometheusExporter Metric Counter  new "]}," Server Collector ensure_sidekiq_metrics":{"type":"method","name":"ensure_sidekiq_metrics","children":[],"call":["@metrics []= ","PrometheusExporter Metric Counter  new ","@sidekiq_job_count ! ","PrometheusExporter Metric Counter  new  ! "]}," Server Collector observe_sidekiq":{"type":"method","name":"observe_sidekiq","children":[],"call":["@sidekiq_failed_job_count observe ","obj [] ","obj [] ! ","@sidekiq_job_count observe ","@sidekiq_job_duration_seconds observe "," ensure_sidekiq_metrics "]}," Server DelayedJobCollector ensure_delayed_job_metrics":{"type":"method","name":"ensure_delayed_job_metrics","children":[],"call":["PrometheusExporter Metric Counter  new ","@delayed_jobs_total ! ","PrometheusExporter Metric Summary  new ","PrometheusExporter Metric Gauge  new ","PrometheusExporter Metric Base  default_aggregation new ","PrometheusExporter Metric Base  default_aggregation ","PrometheusExporter Metric Counter  new  ! "]}," Server DelayedJobCollector metrics":{"type":"method","name":"metrics","children":[],"call":[]}," Server DelayedJobCollector collect":{"type":"method","name":"collect","children":[],"call":["@delayed_failed_jobs_total observe ","obj [] ","obj [] ! ","@delayed_jobs_total observe ","@delayed_job_duration_seconds observe "," ensure_delayed_job_metrics ","@delayed_job_attempts_summary observe ","@delayed_job_duration_seconds_summary observe ","@delayed_jobs_max_attempts_reached_total observe ","obj [] >= ","default_labels merge ","custom_labels nil? ","@delayed_jobs_pending observe ","@delayed_jobs_enqueued observe ","labels merge ","counter_labels merge ","gauge_labels merge ","(pair\n  (sym :queue_name)\n  (send\n    (lvar :obj) :[]\n    (str \"queue_name\"))) merge ","default_default_labels merge  merge ","custom_default_labels merge  nil? ","obj []  nil? ","default_labels merge  merge ","counter_default_labels merge  merge ","gauge_labels merge  merge ","gauge_default_labels merge  merge ","(pair\n  (sym :queue_name)\n  (send\n    (lvar :obj) :[]\n    (str \"queue_name\"))) merge  merge "]}," Server DelayedJobCollector type":{"type":"method","name":"type","children":[],"call":[]}," Middleware convert_header_to_ms":{"type":"method","name":"convert_header_to_ms","children":[],"call":["(begin\n  (send\n    (lvar :str) :[]\n    (int 0)\n    (int 10))) to_f ","str [] ","str gsub ","(begin\n  (send\n    (lvar :str gsub ) :[]\n    (int 0)\n    (int 10))) to_f ","str gsub  [] ","str gsub  gsub "]}," Middleware queue_start":{"type":"method","name":"queue_start","children":[],"call":[" convert_header_to_ms ","value to_s ","value == ","value nil? ","env [] ","(begin\n  (send\n    (lvar :value) :[]\n    (int 0)\n    (int 10))) to_f ","value [] ","value to_s gsub ","env []  to_s ","value to_s gsub  to_s ","env []  == ","value to_s gsub  == ","env []  nil? ","value to_s gsub  nil? ","(begin\n  (send\n    (lvar :env [] ) :[]\n    (int 0)\n    (int 10))) to_f ","(begin\n  (send\n    (lvar :value to_s gsub ) :[]\n    (int 0)\n    (int 10))) to_f ","env []  [] ","value to_s gsub  [] ","env []  to_s gsub ","value to_s gsub  to_s gsub "]}," Middleware request_start":{"type":"method","name":"request_start","children":[],"call":["Process  clock_gettime "]}," Middleware measure_queue_time":{"type":"method","name":"measure_queue_time","children":[],"call":["queue_time negative? "," request_start to_f - ","start_time to_f "," request_start to_f "," request_start "," queue_start "," request_start to_f -  negative? "," queue_start  to_f "]}," Instrumentation DelayedJob call":{"type":"method","name":"call","children":[],"call":["@client send_json ","job handler to_s match to_a [] to_s ","job handler to_s match to_a [] ","job handler to_s match to_a ","job handler to_s match ","job handler to_s ","job handler "," Process  clock_gettime - "," Process  clock_gettime ","block call ","job attempts + ","job attempts ","job queue ","job job attempts +  + ","job job attempts +  "]}," Instrumentation DelayedJob initialize":{"type":"method","name":"initialize","children":[],"call":["PrometheusExporter Client  default "]}," Instrumentation DelayedJob register_plugin":{"type":"method","name":"register_plugin","children":[],"call":["Delayed Worker  plugins << ","Delayed Worker  plugins ","instrumenter call ","lifecycle around "," callbacks ","Class  new "," new ","Delayed Worker  max_attempts ","Delayed Job  where count ","Delayed Job  where ","Delayed Job  count ","job queue "," new  call ","Delayed Worker  Delayed Worker  max_attempts  "]}," Metric Base default_labels":{"type":"method","name":"default_labels","children":[],"call":[]}," Metric Base default_labels=":{"type":"method","name":"default_labels=","children":[],"call":[]}," Server Runner timeout":{"type":"method","name":"timeout","children":[],"call":[]}," Server Runner timeout=":{"type":"method","name":"timeout=","children":[],"call":[]}," Client custom_labels=":{"type":"method","name":"custom_labels=","children":[],"call":[]}," Metric Gauge decrement":{"type":"method","name":"decrement","children":[],"call":["@data [] "]}," Metric Gauge increment":{"type":"method","name":"increment","children":[],"call":["@data [] "]}," Client RemoteMetric decrement":{"type":"method","name":"decrement","children":[],"call":["@client send_json "," standard_values "]}," Client RemoteMetric increment":{"type":"method","name":"increment","children":[],"call":["@client send_json "," standard_values "]}," Client RemoteMetric standard_values":{"type":"method","name":"standard_values","children":[],"call":["values []= "]}," Server PumaCollector collect":{"type":"method","name":"collect","children":[],"call":["@puma_metrics << ","m [] + < ","m [] + ","m [] ","@puma_metrics delete_if ","obj []= "," Process  clock_gettime ","current [] + < ","current [] + ","current [] ","obj [] == ","obj [] "]}," Server PumaCollector metrics":{"type":"method","name":"metrics","children":[],"call":["metrics values ","g observe ","PrometheusExporter Metric Gauge  new ","metrics [] ","m [] ","k to_s ","PUMA_GAUGES  map ","labels merge ","@puma_metrics map ","@puma_metrics length == ","@puma_metrics length ","labels merge! ","metrics m [] alues ","g obserm [] e ","k to_s  to_s "]}," Server PumaCollector type":{"type":"method","name":"type","children":[],"call":[]}," Server PumaCollector initialize":{"type":"method","name":"initialize","children":[],"call":["@puma_metrics filter= ","new_metric [] == ","old_metric [] ","new_metric [] "," lambda ","MetricsContainer  new ","MetricsContainer  new  filter= "]}," Metric Histogram with_bucket":{"type":"method","name":"with_bucket","children":[],"call":["labels merge "]}," Metric Histogram fill_buckets":{"type":"method","name":"fill_buckets","children":[],"call":["buckets [] ","value > ","@buckets each ","@buckets reverse each ","@buckets reverse "]}," Metric Histogram ensure_histogram":{"type":"method","name":"ensure_histogram","children":[],"call":["@observations []= ","(send\n  (ivar :@buckets) :map) to_h ","@buckets map ","buckets nil? ","@observations [] ","@counts [] ","@sums [] ","(send\n  (ivar :@(send\n  (ivar :@buckets) :map) to_h ) :map) to_h ","(send\n  (ivar :@@observations [] ) :map) to_h ","@(send\n  (ivar :@buckets) :map) to_h  map ","@@observations []  map ","(send\n  (ivar :@buckets) :map) to_h  nil? ","@observations []  nil? "]}," Metric Histogram observe":{"type":"method","name":"observe","children":[],"call":[" fill_buckets ","@counts [] ","@sums [] ","value to_f "," ensure_histogram "," fill_ ensure_histogram  ","value to_f  to_f "]}," Metric Histogram metric_text":{"type":"method","name":"metric_text","children":[],"call":["text << "," labels_text "," prefix "," with_bucket ","bucket to_s ","@observations [] [] ","@observations [] ","@buckets each ","@sums [] ","@counts [] ","@observations each "," +@ "," +@  << "," labels_ +@  ","@@sums [] s [] ","@@counts [] s [] "]}," Metric Histogram type":{"type":"method","name":"type","children":[],"call":[]}," Metric Histogram initialize":{"type":"method","name":"initialize","children":[],"call":["(or\n  (send\n    (lvar :opts) :[]\n    (sym :buckets))\n  (const nil :DEFAULT_BUCKETS)) sort reverse ","(or\n  (send\n    (lvar :opts) :[]\n    (sym :buckets))\n  (const nil :DEFAULT_BUCKETS)) sort ","opts [] "," reset! ","(or\n  (send\n    (lvar :opts) :[]\n    (sym :buckets))\n  (send\n    (send\n      (self) :class) :default_buckets)) sort reverse ","(or\n  (send\n    (lvar :opts) :[]\n    (sym :buckets))\n  (send\n    (send\n      (self) :class) :default_buckets)) sort "," class default_buckets "," class "]}," Instrumentation Puma collect_worker_status":{"type":"method","name":"collect_worker_status","children":[],"call":["status [] ","metric [] "]}," Instrumentation Puma collect_puma_stats":{"type":"method","name":"collect_puma_stats","children":[],"call":[" collect_worker_status ","worker [] ","worker [] empty? ","stats [] each ","stats [] ","metric []= ","stats key? ","JSON  parse "," Puma  stats ","JSON  parse  [] each ","JSON  parse  [] ","JSON  parse  key? "," Puma  JSON  parse  "]}," Instrumentation Puma collect":{"type":"method","name":"collect","children":[],"call":[" collect_puma_stats ","metric []= "," PrometheusExporter  hostname "," pid "]}," Instrumentation Puma start":{"type":"method","name":"start","children":[],"call":[]}," Server HutchCollector ensure_hutch_metrics":{"type":"method","name":"ensure_hutch_metrics","children":[],"call":["PrometheusExporter Metric Counter  new ","@hutch_jobs_total ! ","PrometheusExporter Metric Counter  new  ! "]}," Server HutchCollector metrics":{"type":"method","name":"metrics","children":[],"call":[]}," Server HutchCollector collect":{"type":"method","name":"collect","children":[],"call":["@hutch_failed_jobs_total observe ","obj [] ! ","obj [] ","@hutch_jobs_total observe ","@hutch_job_duration_seconds observe "," ensure_hutch_metrics ","default_labels merge ","custom_labels nil? ","default_default_labels merge  merge ","custom_default_labels merge  nil? ","obj []  nil? "]}," Server HutchCollector type":{"type":"method","name":"type","children":[],"call":[]}," Instrumentation Hutch handle":{"type":"method","name":"handle","children":[],"call":["@client send_json ","@klass class to_s ","@klass class "," Process  clock_gettime - "," Process  clock_gettime ","@klass process "]}," Instrumentation Hutch initialize":{"type":"method","name":"initialize","children":[],"call":["PrometheusExporter Client  default "]}," UnicornCollector collect":{"type":"method","name":"collect","children":[],"call":["@unicorn_metrics << ","m [] + < ","m [] + ","m [] ","@unicorn_metrics delete_if ","obj []= "," Process  clock_gettime "]}," UnicornCollector metrics":{"type":"method","name":"metrics","children":[],"call":["metrics values ","g observe ","PrometheusExporter Metric Gauge  new ","metrics [] ","m [] ","k to_s ","UNICORN_GAUGES  map ","@unicorn_metrics map ","@unicorn_metrics length zero? ","@unicorn_metrics length ","metrics m [] alues ","g obserm [] e ","k to_s  to_s "]}," UnicornCollector type":{"type":"method","name":"type","children":[],"call":[]}," UnicornCollector initialize":{"type":"method","name":"initialize","children":[],"call":[]}," Server Collector process_hash":{"type":"method","name":"process_hash","children":[],"call":["metric observe ","obj [] ","metric decrement ","metric increment ","obj [] merge "," register_metric_unsafe ","metric ! ","@metrics [] ","collector collect ","@collectors [] ","@mutex synchronize "," register_metric_unsafe  observe ","@metrics []  observe "," register_metric_unsafe  decrement ","@metrics []  decrement "," register_metric_unsafe  increment ","@metrics []  increment "," register_ register_metric_unsafe _unsafe "," register_@metrics [] _unsafe "," register_metric_unsafe  ! ","@metrics []  ! ","@ register_metric_unsafe s [] ","@@metrics [] s [] ","@collectors []  collect ","@@collectors [] s [] "]}," Metric Counter reset":{"type":"method","name":"reset","children":[],"call":["@data []= "]}," Metric Counter decrement":{"type":"method","name":"decrement","children":[],"call":["@data [] "]}," Metric Counter increment":{"type":"method","name":"increment","children":[],"call":["@data [] "]}," Metric Base needs_escape?":{"type":"method","name":"needs_escape?","children":[],"call":["str match ! ! ","str match ! ","str match ","str match? "]}," Metric Base escape_value":{"type":"method","name":"escape_value","children":[],"call":["m == ","str gsub "]}," Instrumentation Unicorn listener_address_stats":{"type":"method","name":"listener_address_stats","children":[],"call":["Raindrops Linux  unix_listener_stats [] ","Raindrops Linux  unix_listener_stats ","Raindrops Linux  tcp_listener_stats [] ","Raindrops Linux  tcp_listener_stats "]}," Instrumentation Unicorn worker_process_count":{"type":"method","name":"worker_process_count","children":[],"call":["result lines count ","result lines ","pid to_i > ","pid to_i ","File  read ","File  exist? ","pid < ","File  read to_i ","File  read  to_i > ","File  read to_i  to_i > ","File  read  to_i ","File  read to_i  to_i ","File  read  < ","File  read to_i  < "]}," Instrumentation Unicorn collect_unicorn_stats":{"type":"method","name":"collect_unicorn_stats","children":[],"call":["metric []= "," worker_process_count ","stats queued ","stats active "," listener_address_stats "," listener_address_stats  queued "," listener_address_stats  active "," listener_address_ listener_address_stats  "]}," Instrumentation Unicorn collect":{"type":"method","name":"collect","children":[],"call":[" collect_unicorn_stats ","metric []= "]}," Instrumentation Unicorn initialize":{"type":"method","name":"initialize","children":[],"call":["listener_address =~ "]}," Instrumentation Unicorn start":{"type":"method","name":"start","children":[],"call":[]}," Instrumentation Sidekiq death_handler":{"type":"method","name":"death_handler","children":[],"call":[]}," Instrumentation Process hostname":{"type":"method","name":"hostname","children":[],"call":["STDERR  puts ","(str \"hostname\") strip "]}," Instrumentation Process stop":{"type":"method","name":"stop","children":[],"call":[]}," PrometheusExporter LocalClient send":{"type":"method","name":"send","children":[],"call":["@collector process "]}," PrometheusExporter LocalClient initialize":{"type":"method","name":"initialize","children":[],"call":[]}," PrometheusExporter Client wait_for_empty_queue_with_timeout":{"type":"method","name":"wait_for_empty_queue_with_timeout","children":[],"call":[" sleep ","start_time + < "," Process  clock_gettime ","start_time + ","@queue length > ","@queue length "," Process  clock_gettime  + < "," Process  clock_gettime  + "]}," PrometheusExporter Client ensure_socket!":{"type":"method","name":"ensure_socket!","children":[],"call":[" raise ","Time  now to_f ","Time  now ","@socket write ","TCPSocket  new ","@socket ! "," close_socket_if_old! ","Process  pid ","@socket_pid != ","TCPSocket  new  write ","TCPSocket  new  ! ","TCPSocket  new _pid != ","Process  pid  != "]}," PrometheusExporter Client close_socket_if_old!":{"type":"method","name":"close_socket_if_old!","children":[],"call":[" close_socket! ","(send\n  (ivar :@socket_started) :+\n  (const nil :MAX_SOCKET_AGE)) < ","Time  now to_f ","Time  now ","@socket_started + ","@socket_pid == ","Process  pid "]}," PrometheusExporter Client close_socket!":{"type":"method","name":"close_socket!","children":[],"call":["@socket close ","@socket flush ","@socket write ","@socket closed? ! ","@socket closed? "]}," PrometheusExporter Client ensure_worker_thread!":{"type":"method","name":"ensure_worker_thread!","children":[],"call":[" sleep "," worker_loop ","Thread  new ","@mutex synchronize ","STDERR  puts "," raise ","e message =~ ","e message "," logger error "," logger "]}," PrometheusExporter Client worker_loop":{"type":"method","name":"worker_loop","children":[],"call":["STDERR  puts "," process_queue "," close_socket_if_old! "," logger error "," logger "]}," PrometheusExporter Client stop":{"type":"method","name":"stop","children":[],"call":[" close_socket! "," sleep ","@worker_thread alive? "," wait_for_empty_queue_with_timeout ","@mutex synchronize "]}," PrometheusExporter Client process_queue":{"type":"method","name":"process_queue","children":[],"call":[" raise ","STDERR  puts ","@socket write ","message bytesize to_s upcase ","message bytesize to_s ","message bytesize ","@queue pop "," ensure_socket! ","@queue length > ","@queue length "," logger warn "," logger ","@queue pop  bytesize to_s upcase ","@queue pop  bytesize to_s ","@queue pop  bytesize "]}," PrometheusExporter Client send":{"type":"method","name":"send","children":[],"call":[" ensure_worker_thread! ","@queue pop ","STDERR  puts ","@queue length > ","@queue length ","@queue << "," logger warn "," logger "]}," PrometheusExporter Client send_json":{"type":"method","name":"send_json","children":[],"call":[" send ","@json_serializer dump ","obj merge ","@custom_labels nil? ","@custom_labels merge ","obj [] "]}," PrometheusExporter Client register":{"type":"method","name":"register","children":[],"call":["@metrics << ","RemoteMetric  new ","@RemoteMetric  new s << "]}," PrometheusExporter Client custom_labels=":{"type":"method","name":"custom_labels=","children":[],"call":[]}," PrometheusExporter Client initialize":{"type":"method","name":"initialize","children":[],"call":["json_serializer == ","Mutex  new "," raise ","max_queue_size to_i <= ","max_queue_size to_i ","Queue  new ","max_queue_size <= ","@logger level= ","max_queue_size to_i  to_i <= ","max_queue_size to_i  to_i ","max_queue_size to_i  <= "]}," PrometheusExporter Client default=":{"type":"method","name":"default=","children":[],"call":[]}," PrometheusExporter Client default":{"type":"method","name":"default","children":[],"call":[]}," PrometheusExporter Client RemoteMetric decrement":{"type":"method","name":"decrement","children":[],"call":["@client send_json "," standard_values "]}," PrometheusExporter Client RemoteMetric increment":{"type":"method","name":"increment","children":[],"call":["@client send_json "," standard_values "]}," PrometheusExporter Client RemoteMetric observe":{"type":"method","name":"observe","children":[],"call":["@client send_json "," standard_values "]}," PrometheusExporter Client RemoteMetric standard_values":{"type":"method","name":"standard_values","children":[],"call":["values []= "]}," PrometheusExporter Client RemoteMetric initialize":{"type":"method","name":"initialize","children":[],"call":[]}," PrometheusExporter Client find_registered_metric":{"type":"method","name":"find_registered_metric","children":[],"call":["metric name == ","metric name ","metric help == ","metric help ","metric type == ","metric type ","@metrics find "]}," Server Collector symbolize_keys":{"type":"method","name":"symbolize_keys","children":[],"call":["memo []= ","k last ","k first to_sym ","k first ","hash inject "]}," Server ActiveRecordCollector collect":{"type":"method","name":"collect","children":[],"call":["@active_record_metrics << ","current [] + < ","current [] + ","current [] ","obj [] == ","obj [] ","@active_record_metrics delete_if ","obj []= "," Process  clock_gettime ","obj [] [] == ","current [] [] ","obj [] [] "]}," Server ActiveRecordCollector metrics":{"type":"method","name":"metrics","children":[],"call":["metrics values ","g observe ","PrometheusExporter Metric Gauge  new ","metrics [] ","m [] ","k to_s ","ACTIVE_RECORD_GAUGES  map ","(or\n  (send\n    (lvar :m) :[]\n    (str \"metric_labels\"))\n  (hash)) merge ","@active_record_metrics map ","@active_record_metrics length == ","@active_record_metrics length ","metric_key merge! ","metrics m [] alues ","g obserm [] e ","k to_s  to_s ","(or\n  (send\n    (lm [] ar :m) :[]\n    (str \"metric_labels\"))\n  (hash)) merge ","@actim [] e_record_metrics map ","@actim [] e_record_metrics length == ","@actim [] e_record_metrics length ","metric_k to_s ey merge! ","(or\n  (send\n    (lvar :m) :[]\n    (str \"metric_labels\"))\n  (hash)) merge  merge! "]}," Server ActiveRecordCollector type":{"type":"method","name":"type","children":[],"call":[]}," Server ActiveRecordCollector initialize":{"type":"method","name":"initialize","children":[],"call":[]}," Instrumentation ActiveRecord collect_active_record_pool_stats":{"type":"method","name":"collect_active_record_pool_stats","children":[],"call":["metrics << ","metric merge! ","pool stat "," hostname "," pid ","@metric_labels merge merge ","Hash  [] ","@metric_labels merge ","pool spec name ","pool spec ","k to_s prepend ","k to_s ","(send\n  (send\n    (send\n      (lvar :pool) :spec) :config) :select) map ","@config_labels include? ","pool spec config select ","pool spec config ","pool connections nil? ","pool connections ","ObjectSpace  each_object "," PrometheusExporter  hostname ","k to_s dup prepend ","k to_s dup "," labels ","@metric_@metric_labels merge merge  merge merge ","@metric_@metric_labels merge merge  merge ","@config_@metric_labels merge merge  include? "," @metric_labels merge merge  "]}," Instrumentation ActiveRecord pid":{"type":"method","name":"pid","children":[],"call":[" Process  pid "]}," Instrumentation ActiveRecord collect":{"type":"method","name":"collect","children":[],"call":[" collect_active_record_pool_stats "]}," Instrumentation ActiveRecord hostname":{"type":"method","name":"hostname","children":[],"call":["STDERR  puts ","(str \"hostname\") strip "]}," Instrumentation ActiveRecord initialize":{"type":"method","name":"initialize","children":[],"call":[]}," Instrumentation ActiveRecord stop":{"type":"method","name":"stop","children":[],"call":[]}," Instrumentation ActiveRecord validate_config_labels":{"type":"method","name":"validate_config_labels","children":[],"call":[]}," Instrumentation ActiveRecord start":{"type":"method","name":"start","children":[],"call":[]}," Metric Summary reset!":{"type":"method","name":"reset!","children":[],"call":["Process  clock_gettime "]}," Metric Histogram reset!":{"type":"method","name":"reset!","children":[],"call":[]}," Metric Gauge reset!":{"type":"method","name":"reset!","children":[],"call":[]}," Metric Counter reset!":{"type":"method","name":"reset!","children":[],"call":[]}," Metric Base reset!":{"type":"method","name":"reset!","children":[],"call":[" raise "]}," Metric Summary to_h":{"type":"method","name":"to_h","children":[],"call":["data []= ","@sums [] ","@counts [] "," calculate_all_quantiles each "," calculate_all_quantiles ","@@sums [] s [] ","@@counts [] s [] "]}," Metric Histogram to_h":{"type":"method","name":"to_h","children":[],"call":["data []= ","@sums [] ","@counts [] ","@observations each ","@@sums [] s [] ","@@counts [] s [] "]}," Metric Gauge to_h":{"type":"method","name":"to_h","children":[],"call":["@data dup "]}," Metric Counter to_h":{"type":"method","name":"to_h","children":[],"call":["@data dup "]}," Metric Base to_h":{"type":"method","name":"to_h","children":[],"call":[" raise "]}," PrometheusExporter hostname":{"type":"method","name":"hostname","children":[],"call":[]}," Server ShoryukenCollector ensure_shoryuken_metrics":{"type":"method","name":"ensure_shoryuken_metrics","children":[],"call":["PrometheusExporter Metric Counter  new ","@shoryuken_jobs_total ! ","PrometheusExporter Metric Counter  new  ! "]}," Server ShoryukenCollector metrics":{"type":"method","name":"metrics","children":[],"call":[]}," Server ShoryukenCollector collect":{"type":"method","name":"collect","children":[],"call":["@shoryuken_failed_jobs_total observe ","obj [] ! ","obj [] ","@shoryuken_restarted_jobs_total observe ","@shoryuken_jobs_total observe ","@shoryuken_job_duration_seconds observe "," ensure_shoryuken_metrics ","default_labels merge ","custom_labels nil? ","default_default_labels merge  merge ","custom_default_labels merge  nil? ","obj []  nil? "]}," Server ShoryukenCollector type":{"type":"method","name":"type","children":[],"call":[]}," Server Runner bind":{"type":"method","name":"bind","children":[],"call":[]}," Instrumentation Shoryuken call":{"type":"method","name":"call","children":[],"call":["@client send_json ","worker class name ","worker class "," Process  clock_gettime - "," Process  clock_gettime "," raise "]}," Instrumentation Shoryuken initialize":{"type":"method","name":"initialize","children":[],"call":["PrometheusExporter Client  default "]}," Server SidekiqQueueCollector collect":{"type":"method","name":"collect","children":[],"call":[" sidekiq_metrics << "," sidekiq_metrics ","metric [] + < ","metric [] + ","metric [] "," sidekiq_metrics delete_if ","queue []= ","object [] each ","object [] "," Process  clock_gettime ","queue [] merge! ","queue [] ","@sidekiq_metrics << "]}," Server SidekiqQueueCollector metrics":{"type":"method","name":"metrics","children":[],"call":[" gauges values "," gauges ","gauge observe ","PrometheusExporter Metric Gauge  new "," gauges [] ","metric [] ","SIDEKIQ_QUEUE_GAUGES  map ","metric fetch "," sidekiq_metrics map "," sidekiq_metrics ","SIDEKIQ_QUEUE_GAUGES  each_key "," gauges metric [] s "]}," Server SidekiqQueueCollector type":{"type":"method","name":"type","children":[],"call":[]}," Server SidekiqQueueCollector initialize":{"type":"method","name":"initialize","children":[],"call":["MetricsContainer  new "]}," Server SidekiqCollector initialize":{"type":"method","name":"initialize","children":[],"call":[]}," Server ShoryukenCollector initialize":{"type":"method","name":"initialize","children":[],"call":[]}," Server Runner label":{"type":"method","name":"label","children":[],"call":[]}," Server HutchCollector initialize":{"type":"method","name":"initialize","children":[],"call":[]}," Server DelayedJobCollector initialize":{"type":"method","name":"initialize","children":[],"call":[]}," Instrumentation SidekiqQueue collect_queue_stats":{"type":"method","name":"collect_queue_stats","children":[],"call":["queue name ","queue latency to_i ","queue latency ","queue size "," Sidekiq Queue  all map "," Sidekiq Queue  all ","(send\n  (send\n    (const\n      (const\n        (cbase) :Sidekiq) :Queue) :all) :map) compact ","queues include? ","process [] ","process nil? ","sp [] == ","sp [] ","ps find "," Sidekiq ProcessSet  new "," Process  pid ","Socket  gethostname ","(send\n  (lvar :sidekiq_queues) :map) compact ","sidekiq_queues map ","sidekiq_queue name ","sidekiq_queues select! "," collect_current_process_queues ","process []  include? "," collect_current_process_queues  include? "," Sidekiq ProcessSet  new  find "," Process   Process  pid  ","Socket  getSocket  gethostname  ","(send\n  (lvar :sidekiq_process [] ) :map) compact ","(send\n  (lvar :sidekiq_ collect_current_process_queues ) :map) compact ","(send\n  (lvar : Sidekiq Queue  all ) :map) compact ","sidekiq_process []  map ","sidekiq_ collect_current_process_queues  map "," Sidekiq Queue  all  map ","sidekiq_process []  select! ","sidekiq_ collect_current_process_queues  select! "," Sidekiq Queue  all  select! "," collect_current_process_process []  "," collect_current_process_ collect_current_process_queues  "]}," Instrumentation SidekiqQueue collect":{"type":"method","name":"collect","children":[],"call":[" collect_queue_stats "]}," Instrumentation SidekiqQueue start":{"type":"method","name":"start","children":[],"call":[]}," Metric Summary remove":{"type":"method","name":"remove","children":[],"call":["@buffers [] delete ","@buffers [] ","@sums delete ","@counts delete "]}," Metric Histogram remove":{"type":"method","name":"remove","children":[],"call":["@sums delete ","@counts delete ","@observations delete "]}," Metric Gauge remove":{"type":"method","name":"remove","children":[],"call":["@data delete "]}," Metric Counter remove":{"type":"method","name":"remove","children":[],"call":["@data delete "]}," Server WebServer authenticate":{"type":"method","name":"authenticate","children":[],"call":["basic_auth authenticate ","WEBrick HTTPAuth BasicAuth  new ","WEBrick HTTPAuth Htpasswd  new ","WEBrick HTTPAuth BasicAuth  new  authenticate "]}," Server Runner realm":{"type":"method","name":"realm","children":[],"call":[]}," Server Runner auth":{"type":"method","name":"auth","children":[],"call":[]}," Middleware custom_labels":{"type":"method","name":"custom_labels","children":[],"call":[]}," Instrumentation Sidekiq get_delayed_name":{"type":"method","name":"get_delayed_name","children":[],"call":["target class name ","target class ","target name ","target class == ","YAML  load ","msg [] first ","msg [] ","(or\n  (send\n    (send\n      (lvar :children) :[]\n      (int 1)) :value)\n  (send\n    (send\n      (lvar :children) :[]\n      (int 1)) :tag)) sub ","children [] tag ","children [] ","children [] value ","(or\n  (send\n    (send\n      (lvar :children) :[]\n      (int 0)) :value)\n  (send\n    (send\n      (lvar :children) :[]\n      (int 0)) :tag)) sub ","parsed root children ","parsed root ","Psych  parse ","(or\n  (send\n    (send\n      (lvar :children) :[]\n      (int 0)) :value)\n  (send\n    (send\n      (lvar :children) :[]\n      (int 0)) :tag)) sub  class name ","(or\n  (send\n    (send\n      (lvar :children) :[]\n      (int 0)) :value)\n  (send\n    (send\n      (lvar :children) :[]\n      (int 0)) :tag)) sub  class ","(or\n  (send\n    (send\n      (lvar :children) :[]\n      (int 0)) :value)\n  (send\n    (send\n      (lvar :children) :[]\n      (int 0)) :tag)) sub  name ","(or\n  (send\n    (send\n      (lvar :children) :[]\n      (int 0)) :value)\n  (send\n    (send\n      (lvar :children) :[]\n      (int 0)) :tag)) sub  class == ","(or\n  (send\n    (send\n      (lvar :parsed root children ) :[]\n      (int 1)) :value)\n  (send\n    (send\n      (lvar :parsed root children ) :[]\n      (int 1)) :tag)) sub ","parsed root children  [] tag ","parsed root children  [] ","parsed root children  [] value ","(or\n  (send\n    (send\n      (lvar :parsed root children ) :[]\n      (int 0)) :value)\n  (send\n    (send\n      (lvar :parsed root children ) :[]\n      (int 0)) :tag)) sub ","parsed root parsed root children  ","Psych  parse  root children ","Psych  parse  root "]}," Instrumentation Sidekiq get_job_wrapper_name":{"type":"method","name":"get_job_wrapper_name","children":[],"call":["msg [] "]}," Instrumentation Sidekiq get_name":{"type":"method","name":"get_name","children":[],"call":[" get_delayed_name ","DELAYED_CLASS_NAMES  include? "," get_job_wrapper_name ","class_name == ","worker class to_s ","worker class ","worker class to_s  == "]}," Middleware default_labels":{"type":"method","name":"default_labels","children":[],"call":["params [] ","env [] ","result [] ","cors preflight? ","cors respond_to? ","env []  [] ","env []  preflight? ","env []  respond_to? "]}," Instrumentation ActiveRecord labels":{"type":"method","name":"labels","children":[],"call":[" raise ","@metric_labels merge merge ","acc []= ","pool db_config public_send ","pool db_config ","@config_labels each_with_object ","@metric_labels merge ","pool db_config name ","pool respond_to? ","(send\n  (block\n    (send\n      (send\n        (send\n          (lvar :pool) :spec) :config) :select)\n    (args\n      (arg :k)\n      (arg :v))\n    (send\n      (ivar :@config_labels) :include?\n      (lvar :k))) :map) to_h ","k to_s dup prepend ","k to_s dup ","k to_s ","(send\n  (send\n    (send\n      (lvar :pool) :spec) :config) :select) map ","@config_labels include? ","pool spec config select ","pool spec config ","pool spec ","pool spec name "," ActiveRecord  version < ","Gem Version  new "," ActiveRecord  version "]}," Server ResqueCollector collect":{"type":"method","name":"collect","children":[],"call":[" resque_metrics << "," resque_metrics ","metric [] + < ","metric [] + ","metric [] "," resque_metrics delete_if ","object []= "," Process  clock_gettime "]}," Server ResqueCollector metrics":{"type":"method","name":"metrics","children":[],"call":[" gauges values "," gauges ","gauge observe ","PrometheusExporter Metric Gauge  new "," gauges [] ","metric [] ","name to_s ","RESQUE_GAUGES  map ","metric fetch "," resque_metrics map "," resque_metrics "," resque_metrics length == "," resque_metrics length "," gauges metric [] s ","name to_s  to_s "]}," Server ResqueCollector type":{"type":"method","name":"type","children":[],"call":[]}," Server ResqueCollector initialize":{"type":"method","name":"initialize","children":[],"call":[]}," Instrumentation Resque collect_resque_stats":{"type":"method","name":"collect_resque_stats","children":[],"call":["metric []= ","info [] "," Resque  info "," Resque  info  [] "," Resque   Resque  info  "]}," Instrumentation Resque collect":{"type":"method","name":"collect","children":[],"call":[" collect_resque_stats ","metric []= "]}," Instrumentation Resque start":{"type":"method","name":"start","children":[],"call":[]}," Instrumentation Puma pid":{"type":"method","name":"pid","children":[],"call":[" Process  pid "]}," Instrumentation Puma initialize":{"type":"method","name":"initialize","children":[],"call":[]}," Server SidekiqProcessCollector collect":{"type":"method","name":"collect","children":[],"call":[" sidekiq_metrics << "," sidekiq_metrics ","metric [] + < ","metric [] + ","metric [] "," sidekiq_metrics delete_if ","process []= ","object [] "," Process  clock_gettime ","@sidekiq_metrics << ","object []  []= "]}," Server SidekiqProcessCollector metrics":{"type":"method","name":"metrics","children":[],"call":[" gauges values "," gauges "," gauges [] observe "," gauges [] ","PrometheusExporter Metric Gauge  new ","metric [] ","SIDEKIQ_PROCESS_GAUGES  map ","metric fetch "," sidekiq_metrics map "," sidekiq_metrics ","gauge observe ","SIDEKIQ_PROCESS_GAUGES  each_key "," gauges metric [] s "]}," Server SidekiqProcessCollector type":{"type":"method","name":"type","children":[],"call":[]}," Server SidekiqProcessCollector initialize":{"type":"method","name":"initialize","children":[],"call":["MetricsContainer  new "]}," Server Runner histogram":{"type":"method","name":"histogram","children":[],"call":[]}," Metric Base default_aggregation":{"type":"method","name":"default_aggregation","children":[],"call":[]}," Metric Base default_aggregation=":{"type":"method","name":"default_aggregation=","children":[],"call":[]}," Instrumentation SidekiqQueue collect_current_process_queues":{"type":"method","name":"collect_current_process_queues","children":[],"call":["process [] ","process nil? ","sp [] == ","sp [] ","ps find "," Sidekiq ProcessSet  new "," Sidekiq ProcessSet  new  find "]}," Instrumentation SidekiqQueue initialize":{"type":"method","name":"initialize","children":[],"call":["Socket  gethostname "," Process  pid "]}," Instrumentation SidekiqProcess current_process":{"type":"method","name":"current_process","children":[],"call":["sp [] == ","sp [] "," Sidekiq ProcessSet  new find "," Sidekiq ProcessSet  new "]}," Instrumentation SidekiqProcess collect_stats":{"type":"method","name":"collect_stats","children":[],"call":["process [] ","process [] sort join ","process [] sort "," current_process "," current_process  [] "," current_process  [] sort join "," current_process  [] sort "," current_ current_process  "]}," Instrumentation SidekiqProcess collect":{"type":"method","name":"collect","children":[],"call":[" collect_stats "]}," Instrumentation SidekiqProcess initialize":{"type":"method","name":"initialize","children":[],"call":["Socket  gethostname "," Process  pid "]}," Instrumentation SidekiqProcess start":{"type":"method","name":"start","children":[],"call":[]}," Server SidekiqStatsCollector collect":{"type":"method","name":"collect","children":[],"call":[" sidekiq_metrics << "," sidekiq_metrics ","metric [] + < ","metric [] + ","metric [] "," sidekiq_metrics delete_if ","object []= "," Process  clock_gettime ","@sidekiq_metrics << "]}," Server SidekiqStatsCollector metrics":{"type":"method","name":"metrics","children":[],"call":[" gauges values "," gauges ","gauge observe ","PrometheusExporter Metric Gauge  new "," gauges [] ","metric [] [] ","metric [] ","SIDEKIQ_STATS_GAUGES  map "," sidekiq_metrics map "," sidekiq_metrics ","SIDEKIQ_STATS_GAUGES  each_key "," gauges metric [] [] s "]}," Server SidekiqStatsCollector type":{"type":"method","name":"type","children":[],"call":[]}," Server SidekiqStatsCollector initialize":{"type":"method","name":"initialize","children":[],"call":["MetricsContainer  new "]}," Instrumentation SidekiqStats collect_stats":{"type":"method","name":"collect_stats","children":[],"call":["stats workers_size ","stats scheduled_size ","stats retry_size ","stats processes_size ","stats processed ","stats failed ","stats enqueued ","stats dead_size "," Sidekiq Stats  new "," Sidekiq Stats  new  workers_size "," Sidekiq Stats  new  scheduled_size "," Sidekiq Stats  new  retry_size "," Sidekiq Stats  new  processes_size "," Sidekiq Stats  new  processed "," Sidekiq Stats  new  failed "," Sidekiq Stats  new  enqueued "," Sidekiq Stats  new  dead_size "]}," Instrumentation SidekiqStats collect":{"type":"method","name":"collect","children":[],"call":[" collect_stats "]}," Instrumentation SidekiqStats start":{"type":"method","name":"start","children":[],"call":[]}," Metric Histogram default_buckets=":{"type":"method","name":"default_buckets=","children":[],"call":[]}," Metric Histogram default_buckets":{"type":"method","name":"default_buckets","children":[],"call":[]}," Instrumentation Sidekiq get_worker_custom_labels":{"type":"method","name":"get_worker_custom_labels","children":[],"call":[]}," Instrumentation PeriodicStats stop":{"type":"method","name":"stop","children":[],"call":[]}," Instrumentation PeriodicStats worker_loop":{"type":"method","name":"worker_loop","children":[],"call":[]}," Instrumentation PeriodicStats started?":{"type":"method","name":"started?","children":[],"call":[]}," Instrumentation PeriodicStats start":{"type":"method","name":"start","children":[],"call":[]}," MethodProfiler patch_using_alias_method":{"type":"method","name":"patch_using_alias_method","children":[],"call":[]}," MethodProfiler patch_using_prepend":{"type":"method","name":"patch_using_prepend","children":[],"call":[]}," Middleware apply_redis_client_middleware!":{"type":"method","name":"apply_redis_client_middleware!","children":[],"call":["RedisClient  register "]}," MethodProfiler define_methods_on_module":{"type":"method","name":"define_methods_on_module","children":[],"call":[]}," Server MetricsContainer wrap_expire":{"type":"method","name":"wrap_expire","children":[],"call":["@data public_send "," expire "]}," Server MetricsContainer get_time":{"type":"method","name":"get_time","children":[],"call":[" Process  clock_gettime "]}," Server MetricsContainer expire":{"type":"method","name":"expire","children":[],"call":[" filter call "," filter ","metric [] < ","metric [] ","@data delete_if "," get_time "]}," Server MetricsContainer each":{"type":"method","name":"each","children":[],"call":[" wrap_expire "]}," Server MetricsContainer map":{"type":"method","name":"map","children":[],"call":[" wrap_expire "]}," Server MetricsContainer size":{"type":"method","name":"size","children":[],"call":[" wrap_expire "]}," Server MetricsContainer []":{"type":"method","name":"[]","children":[],"call":["(send\n  (ivar :@data) :tap) [] "," expire ","@data tap "]}," Server MetricsContainer <<":{"type":"method","name":"<<","children":[],"call":["@data << "," expire ","obj []= ","now + "," get_time "," get_time  + "]}," Server MetricsContainer initialize":{"type":"method","name":"initialize","children":[],"call":[]}}