{" PusherClient logger=":{"type":"method","name":"logger=","children":[],"call":[]}," PusherClient logger":{"type":"method","name":"logger","children":[],"call":[]}," PusherClient Socket parser":{"type":"method","name":"parser","children":[],"call":["PusherClient  logger warn ","PusherClient  logger ","JSON  parse ","data is_a? "," logger warn "," logger "]}," PusherClient Socket send_local_event":{"type":"method","name":"send_local_event","children":[],"call":["PusherClient  logger debug ","PusherClient  logger ","@global_channel dispatch_with_all ","channel dispatch_with_all ","@channels [] "," logger debug "," logger ","@global_@channels []  dispatch_with_all ","@channels []  dispatch_with_all ","@@channels [] s [] "]}," PusherClient Socket send_event":{"type":"method","name":"send_event","children":[],"call":["PusherClient  logger debug ","PusherClient  logger ","@connection send ","(pair\n  (str \"event\")\n  (lvar :event_name)) to_json "," logger debug "," logger "]}," PusherClient Socket subscribe_all":{"type":"method","name":"subscribe_all","children":[],"call":[" subscribe ","@channels channels each_with_index ","@channels channels ","@channels channels clone each ","@channels channels clone ","v user_data ","v name "]}," PusherClient Socket []":{"type":"method","name":"[]","children":[],"call":["@channels << ","@channels [] ","NullChannel  new "]}," PusherClient Socket bind":{"type":"method","name":"bind","children":[],"call":["@global_channel bind "]}," PusherClient Socket unsubscribe":{"type":"method","name":"unsubscribe","children":[],"call":[" send_event ","@channels remove ","@@channels remove s remove "]}," PusherClient Socket subscribe":{"type":"method","name":"subscribe","children":[],"call":["channel acknowledge_subscription "," send_event ","@channels << ","channel name "," authorize "," method ","(pair\n  (sym :user_id)\n  (lvar :user_id)) to_json ","user_id nil? ","(pair\n  (sym :user_id)\n  (lvar :user_data)) to_json ","user_data nil? ! ","user_data nil? ","user_data to_json ","user_data is_a? ","@channels add "," raise "," is_presence_channel ","@channels <<  acknowledge_subscription ","@channels add  acknowledge_subscription ","@@channels << s << ","@@channels add s << ","@channels <<  name ","@channels add  name ","(pair\n  (sym :user_id)\n  (lvar :(pair\n  (sym :user_id)\n  (lvar :user_data)) to_json )) to_json ","(pair\n  (sym :user_id)\n  (lvar :user_data to_json )) to_json ","(pair\n  (sym :user_id)\n  (lvar :user_data)) to_json  nil? ! ","user_data to_json  nil? ! ","(pair\n  (sym :user_id)\n  (lvar :user_data)) to_json  nil? ","user_data to_json  nil? ","(pair\n  (sym :user_id)\n  (lvar :user_data)) to_json  to_json ","user_data to_json  to_json ","(pair\n  (sym :user_id)\n  (lvar :user_data)) to_json  is_a? ","user_data to_json  is_a? ","@@channels << s add ","@@channels add s add "," is_presence_@channels <<  "," is_presence_@channels add  "]}," PusherClient Socket disconnect":{"type":"method","name":"disconnect","children":[],"call":["PusherClient  logger warn ","PusherClient  logger ","@connection_thread kill ","PusherClient  logger debug ","@connection close "," logger debug "," logger "]}," PusherClient Socket connect":{"type":"method","name":"connect","children":[],"call":["@connection_thread run ","PusherClient  logger debug ","PusherClient  logger ","@connection disconnect ","PusherClient  logger fatal ","@connection errback "," send_local_event ","params [] ","params [] == "," this socket_id "," this "," parser ","@connection stream ","@connection callback ","EventMachine HttpRequest  new get ","EventMachine HttpRequest  new ","EventMachine  run ","Thread  new ","@connection_thread join "," sleep "," socket_id ","@connection receive [] ","@connection receive "," loop ","WebSocket  new ","msg nil? ","PusherWebSocket  new "," connect_internal "," logger debug "," logger ","EventMachine HttpRequest  new get _thread run ","WebSocket  new _thread run ","PusherWebSocket  new _thread run ","EventMachine HttpRequest  new get  disconnect ","WebSocket  new  disconnect ","PusherWebSocket  new  disconnect ","EventMachine HttpRequest  new get  errback ","WebSocket  new  errback ","PusherWebSocket  new  errback "," parser  [] "," parser  [] == ","EventMachine HttpRequest  new get  stream ","WebSocket  new  stream ","PusherWebSocket  new  stream ","EventMachine HttpRequest  new get  callback ","WebSocket  new  callback ","PusherWebSocket  new  callback ","EventMachine HttpRequest  new get _thread join ","WebSocket  new _thread join ","PusherWebSocket  new _thread join ","EventMachine HttpRequest  new get  receive [] ","WebSocket  new  receive [] ","PusherWebSocket  new  receive [] ","EventMachine HttpRequest  new get  receive ","WebSocket  new  receive ","PusherWebSocket  new  receive ","@connection receive []  nil? "]}," PusherClient Socket initialize":{"type":"method","name":"initialize","children":[],"call":["PusherClient  logger fatal ","data message ","PusherClient  logger "," bind ","c disconnect ","@channels channels each ","@channels channels "," subscribe_all ","data [] ","options [] ","@global_channel global= ","Channel  new ","Channels  new "," raise ","application_key size < ","application_key size ","application_key is_a? ! ","application_key is_a? ","data inspect ","socket [] ","JSON  parse "," send_event "," parser ","options fetch ","app_key empty? ! ","app_key empty? "," logger fatal "," logger ","app_key to_s ","app_key to_s empty? ","Channels  new  channels each ","Channels  new  channels ","Channel  new  global= ","JSON  parse  [] "," parser  [] "]}," PusherClient Channels size":{"type":"method","name":"size","children":[],"call":["@channels size "]}," PusherClient Channels empty?":{"type":"method","name":"empty?","children":[],"call":["@channels empty? "]}," PusherClient Channels remove":{"type":"method","name":"remove","children":[],"call":["@channels delete "]}," PusherClient Channels find":{"type":"method","name":"find","children":[],"call":["@channels [] "]}," PusherClient Channels add":{"type":"method","name":"add","children":[],"call":["@channels [] ","@channels []= ","Channel  new "]}," PusherClient Channels initialize":{"type":"method","name":"initialize","children":[],"call":[]}," PusherClient Channel acknowledge_subscription":{"type":"method","name":"acknowledge_subscription","children":[],"call":[]}," PusherClient Channel dispatch_global_callbacks":{"type":"method","name":"dispatch_global_callbacks","children":[],"call":["PusherClient  logger debug ","PusherClient  logger ","callback call ","@global_callbacks [] each ","@global_callbacks [] "]}," PusherClient Channel dispatch":{"type":"method","name":"dispatch","children":[],"call":["PusherClient  logger debug ","PusherClient  logger ","callback call ","@callbacks [] each ","@callbacks [] "," logger debug "," global "," logger "]}," PusherClient Channel dispatch_with_all":{"type":"method","name":"dispatch_with_all","children":[],"call":[" dispatch_global_callbacks "," dispatch "]}," PusherClient Channel bind":{"type":"method","name":"bind","children":[],"call":["@callbacks [] << ","@callbacks [] ","@callbacks []= "," callbacks [] "," callbacks ","PusherClient  logger debug "," name ","PusherClient  logger "]}," PusherClient Channel initialize":{"type":"method","name":"initialize","children":[],"call":[]}," PusherClient Socket get_presence_auth":{"type":"method","name":"get_presence_auth","children":[],"call":["HMAC SHA256  hexdigest ","@socket_id + + + + ","@socket_id + + + ","@socket_id + + ","channel name ","@socket_id + "," hmac ","channel user_data ","@auth_method call "]}," PusherClient Socket get_private_auth":{"type":"method","name":"get_private_auth","children":[],"call":["HMAC SHA256  hexdigest ","@socket_id + + ","channel name ","@socket_id + ","@private_auth_method call "," hmac ","@private_auth_method nil? ","@auth_method call "]}," PusherClient Socket is_presence_channel":{"type":"method","name":"is_presence_channel","children":[],"call":["channel_name match "]}," PusherClient Socket is_private_channel":{"type":"method","name":"is_private_channel","children":[],"call":["channel_name match "]}," PusherClient Socket authorize_callback":{"type":"method","name":"authorize_callback","children":[],"call":["channel acknowledge_subscription "," send_event ","channel name "]}," PusherClient Socket authorize":{"type":"method","name":"authorize","children":[],"call":["callback call "," get_presence_auth "," is_presence_channel ","channel name "," get_private_auth "," is_private_channel ","channel user_data "]}," PusherClient PusherWebSocket close":{"type":"method","name":"close","children":[],"call":["PusherClient  logger debug ","error message ","PusherClient  logger ","@socket close "," logger debug "," logger "]}," PusherClient PusherWebSocket receive":{"type":"method","name":"receive","children":[],"call":["PusherClient  logger debug ","error message ","PusherClient  logger ","messages << ","message to_s "," send ","message data ","message type === ","message type ","@frame next ","@frame << ","IO  select ","@socket read_nonblock "," raise "," logger debug "," logger ","error @frame next  ","@frame next s << ","@frame next  to_s ","@frame next  data ","message @socket read_nonblock  ","@frame next  type === ","@frame next  type "]}," PusherClient PusherWebSocket send":{"type":"method","name":"send","children":[],"call":["@socket flush ","@socket write ","WebSocket Frame Outgoing Server  new to_s ","WebSocket Frame Outgoing Server  new ","@hs version "," raise ","WebSocket Frame Outgoing Client  new to_s ","WebSocket Frame Outgoing Client  new "]}," PusherClient PusherWebSocket path_to_cert":{"type":"method","name":"path_to_cert","children":[],"call":["File  join ","File  dirname ","File  expand_path "]}," PusherClient PusherWebSocket initialize":{"type":"method","name":"initialize","children":[],"call":[" raise ","@hs valid? ","@hs finished? ","@hs << ","data nil? ","@socket getc "," loop ","@socket flush ","@socket write ","@hs to_s ","ssl_sock connect ","ssl_sock sync_close= ","OpenSSL SSL SSLSocket  new ","ctx ca_file= "," path_to_cert ","ctx verify_mode= ","OpenSSL SSL VERIFY_PEER  | ","OpenSSL SSL SSLContext  new ","params [] == ","params [] ","TCPSocket  new ","@hs port ","@hs host ","WebSocket Frame Incoming Server  new ","@hs version ","WebSocket Handshake Client  new ","@hs error to_s ","@hs error ","PusherClient  logger ","@socket getc  nil? ","TCPSocket  new  getc ","TCPSocket  new  flush ","TCPSocket  new  write ","OpenSSL SSL SSLSocket  new  connect ","OpenSSL SSL SSLSocket  new  sync_close= ","OpenSSL SSL SSLContext  new  ca_file= ","OpenSSL SSL SSLContext  new  verify_mode= "]}," PusherClient Socket hmac":{"type":"method","name":"hmac","children":[],"call":["OpenSSL HMAC  hexdigest ","OpenSSL Digest SHA256  new ","OpenSSL HMAC  hexOpenSSL Digest SHA256  new  "]}," PusherClient Socket connect_internal":{"type":"method","name":"connect_internal","children":[],"call":[" send_local_event ","params [] ","params [] == "," socket_id "," parser ","msg nil? ","@connection receive first ","@connection receive "," loop "," logger debug "," logger ","PusherWebSocket  new ","@connection receive each "," parser  [] "," parser  [] == ","@connection receive first  nil? ","PusherWebSocket  new  receive first ","PusherWebSocket  new  receive ","PusherWebSocket  new  receive each "]}," PusherClient Socket send_channel_event":{"type":"method","name":"send_channel_event","children":[],"call":[" logger debug "," logger ","@connection send ","(pair\n  (str \"channel\")\n  (lvar :channel)) to_json "]}," PusherClient NullChannel method_missing":{"type":"method","name":"method_missing","children":[],"call":[" raise "]}," PusherClient NullChannel initialize":{"type":"method","name":"initialize","children":[],"call":[]}}