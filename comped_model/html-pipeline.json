{" Node swap":{"type":"method","name":"swap","children":[],"call":[" replace "]}," Node replace_with_encoding_fix":{"type":"method","name":"replace_with_encoding_fix","children":[],"call":[" replace_without_encoding_fix "," document fragment children first children "," document fragment children first "," document fragment children "," document fragment "," document ","replacement respond_to? "," document fragment children first children  respond_to? "]}," HTML Pipeline to_html":{"type":"method","name":"to_html","children":[],"call":["output to_s ","output to_html ","output respond_to? ","result [] "," call ","result []  to_s ","result []  to_html ","result []  respond_to? "," call  [] "]}," HTML Pipeline to_document":{"type":"method","name":"to_document","children":[],"call":["HTML Pipeline  parse ","result [] "," call "," call  [] "]}," HTML Pipeline call":{"type":"method","name":"call","children":[],"call":["result []= ","filter call ","@filters inject ","@result_class new ","context freeze ","@default_context merge "," perform_filter "," instrument ","@filters map "," default_payload ","context freeze  freeze ","@default_context merge  freeze ","@default_context freeze  merge ","@default_@default_context merge  merge "," default_ default_payload  "]}," HTML Pipeline initialize":{"type":"method","name":"initialize","children":[],"call":["default_context freeze ","filters flatten freeze ","filters flatten "," raise ","default_context nil? "," class default_instrumentation_service "," class "]}," HTML Pipeline parse":{"type":"method","name":"parse","children":[],"call":[]}," HTML Pipeline TableOfContentsFilter call":{"type":"method","name":"call","children":[],"call":[" doc ","header_content add_previous_sibling ","node children first ","node children ","headers [] ","headers [] > ","EscapeUtils  escape_uri ","name gsub! ","node text downcase ","node text "," doc css each "," doc css ","Hash  new "," result []= "," result [] "," result "," result [] empty? "," result [] << ","text downcase ","id gsub! "," anchor_icon ","EscapeUtils  escape_html ","id tr! "," ascii_downcase ","String  new ","CGI  escape_html ","node children first  add_previous_sibling ","Hash  new  [] ","Hash  new  [] > ","EscapeUtils  escape_uri  gsub! ","node text downcase  gsub! ","text downcase  gsub! ","node node text  downcase ","node node text  ","node text  downcase "," ascii_downcase  gsub! ","text downcase  tr! "," ascii_downcase  tr! "]}," HTML Pipeline TextileFilter call":{"type":"method","name":"call","children":[],"call":["RedCloth  new to_html ","RedCloth  new "]}," HTML Pipeline TextFilter initialize":{"type":"method","name":"initialize","children":[],"call":["text to_s ","text to_str ","text respond_to? "," raise ","text is_a? "]}," HTML Pipeline SyntaxHighlightFilter highlight_with_timeout_handling":{"type":"method","name":"highlight_with_timeout_handling","children":[],"call":["lexer highlight ","Rouge  highlight "]}," HTML Pipeline SyntaxHighlightFilter call":{"type":"method","name":"call","children":[],"call":[" doc ","node replace ","html nil? "," highlight_with_timeout_handling ","node inner_text ","Pygments Lexer  [] ","node [] "," doc search each "," doc search ","node []= ","(lvar :klass) compact join ","(lvar :klass) compact ","node replace first "," context [] to_s "," context [] "," context "," lexer_for ","node inner_html= "," context fetch ","node replace first  replace "," highlight_with_timeout_handling  nil? ","node inner_node inner_text  ","node replace first  inner_text ","node replace first  [] ","node replace first  []= ","(lvar :(lvar :klass) compact join ) compact join ","(lvar :node [] ) compact join ","(lvar :(lvar :klass) compact join ) compact ","(lvar :node [] ) compact ","node replace first  replace first "," connode inner_text  [] to_s "," connode inner_text  [] "," connode inner_text  "," Pygments Lexer  [] _for ","  lexer_for _for ","node inner_ highlight_with_timeout_handling = ","node replace first  inner_html= "," connode inner_text  fetch "]}," HTML Pipeline SanitizationFilter whitelist":{"type":"method","name":"whitelist","children":[],"call":[" context [] "," context ","whitelist [] []= ","(or\n  (send\n    (send\n      (lvar :whitelist) :[]\n      (sym :protocols)) :[]\n    (str \"a\"))\n  (hash)) merge ","whitelist [] [] ","whitelist [] ","whitelist []= ","(or\n  (send\n    (lvar :whitelist) :[]\n    (sym :protocols))\n  (hash)) dup ","whitelist dup "," allowlist "," warn ","whitelist dup  [] []= ","(or\n  (send\n    (send\n      (lvar :whitelist dup ) :[]\n      (sym :protocols)) :[]\n    (str \"a\"))\n  (hash)) merge ","whitelist dup  [] [] ","whitelist dup  [] ","whitelist dup  []= ","(or\n  (send\n    (lvar :whitelist dup ) :[]\n    (sym :protocols))\n  (hash)) dup ","whitelist dup  dup "]}," HTML Pipeline SanitizationFilter call":{"type":"method","name":"call","children":[],"call":["Sanitize  clean_node! "," whitelist "," doc "," allowlist "]}," HTML Pipeline PlainTextInputFilter call":{"type":"method","name":"call","children":[],"call":["EscapeUtils  escape_html ","CGI  escape_html "]}," HTML Pipeline MarkdownFilter call":{"type":"method","name":"call","children":[],"call":["html rstrip! ","GitHub Markdown  to_html "," context [] != "," context [] "," context ","CommonMarker  render_html "," context fetch ","options << ","renderer new render ","renderer new ","CommonMarker  render_doc ","render_options << "," raise ","renderer < ","GitHub Markdown  to_html  rstrip! ","CommonMarker  render_html  rstrip! ","GitHub Markdown  to_GitHub Markdown  to_html  ","GitHub Markdown  to_CommonMarker  render_html  ","CommonMarker  render_GitHub Markdown  to_html  ","CommonMarker  render_CommonMarker  render_html  "," context []  new render "," context []  new ","CommonMarker  render_CommonMarker  render_doc  "," context []  < "]}," HTML Pipeline MarkdownFilter initialize":{"type":"method","name":"initialize","children":[],"call":["@text gsub ","@text gsub! ","@text delete ","@text gsub  gsub ","@text delete  gsub ","@text gsub  gsub! ","@text delete  gsub! ","@text gsub  delete ","@text delete  delete "]}," HTML Pipeline ImageMaxWidthFilter link_image":{"type":"method","name":"link_image","children":[],"call":["element replace ","link add_child ","element dup "," doc document create_element ","element [] "," doc document "," doc "," doc document create_element  add_child "]}," HTML Pipeline ImageMaxWidthFilter call":{"type":"method","name":"call","children":[],"call":[" doc "," link_image "," has_ancestor? ! "," has_ancestor? ","element []= ","element [] to_s strip =~ ","element [] to_s strip ","element [] to_s ","element [] "," doc search each "," doc search "]}," HTML Pipeline HttpsFilter call":{"type":"method","name":"call","children":[],"call":[" doc ","element []= ","element [] sub ","element [] "," doc css each "," doc css "," context [] "," context "," http_url "]}," HTML Pipeline Filter needs":{"type":"method","name":"needs","children":[],"call":[" raise ","missing map join ","missing map "," class name "," class ","missing any? "," context include? "," context ","keys reject "]}," HTML Pipeline Filter to_html":{"type":"method","name":"to_html","children":[],"call":[]}," HTML Pipeline Filter to_document":{"type":"method","name":"to_document","children":[],"call":[]}," HTML Pipeline Filter call":{"type":"method","name":"call","children":[],"call":[" raise "]}," HTML Pipeline Filter has_ancestor?":{"type":"method","name":"has_ancestor?","children":[],"call":["tags include? ","node name downcase ","node name ","node parent ","node parent  name downcase ","node parent  name ","node parent  parent "]}," HTML Pipeline Filter parse_html":{"type":"method","name":"parse_html","children":[],"call":["HTML Pipeline  parse "]}," HTML Pipeline Filter base_url":{"type":"method","name":"base_url","children":[],"call":[" context [] "," context "]}," HTML Pipeline Filter can_access_repo?":{"type":"method","name":"can_access_repo?","children":[],"call":["repo pullable_by? "," current_user ","repo == "," repository ","repo nil? "]}," HTML Pipeline Filter current_user":{"type":"method","name":"current_user","children":[],"call":[" context [] "," context "]}," HTML Pipeline Filter repository":{"type":"method","name":"repository","children":[],"call":[" context [] "," context "]}," HTML Pipeline Filter validate":{"type":"method","name":"validate","children":[],"call":[]}," HTML Pipeline Filter html":{"type":"method","name":"html","children":[],"call":[" doc to_html "," doc "," raise ","@doc nil? ","@html nil? "]}," HTML Pipeline Filter doc":{"type":"method","name":"doc","children":[],"call":[" parse_html "," html "]}," HTML Pipeline Filter initialize":{"type":"method","name":"initialize","children":[],"call":[" validate ","doc to_str ","doc kind_of? ","doc is_a? "]}," HTML Pipeline EmojiFilter asset_root":{"type":"method","name":"asset_root","children":[],"call":[" context [] "," context "," raise "]}," HTML Pipeline EmojiFilter emoji_image_filter":{"type":"method","name":"emoji_image_filter","children":[],"call":["File  join "," asset_root ","text gsub ","text include? "," emoji_url "," emoji_pattern "," emoji_image_tag ","Regexp  last_match "]}," HTML Pipeline EmojiFilter validate":{"type":"method","name":"validate","children":[],"call":[" needs "]}," HTML Pipeline EmojiFilter call":{"type":"method","name":"call","children":[],"call":[" doc ","node replace ","html == "," emoji_image_filter "," has_ancestor? ","content include? ! ","content include? ","node to_html "," doc search each "," doc search "," search_text_nodes each "," search_text_nodes "," ignored_ancestor_tags ","node text "," emoji_image_filter  == ","node to_html  include? ! ","node text  include? ! ","node to_html  include? ","node text  include? ","node to_ emoji_image_filter  "]}," HTML Pipeline EmailReplyFilter call":{"type":"method","name":"call","children":[],"call":["paragraphs join ","paragraphs << ","pieces join ","pieces unshift ","found_hidden ! ","fragment hidden? ","pieces << ","fragment signature? ","fragment quoted? "," escape_html gsub "," escape_html ","fragment to_s strip ","fragment to_s ","EmailReplyParser  read fragments map ","EmailReplyParser  read fragments ","EmailReplyParser  read "," text dup "," text ","piece gsub ","pieces map! "," context [] "," context ","CGI  escapeHTML gsub ","CGI  escapeHTML ","piece gsub! "]}," HTML Pipeline CamoFilter hexencode":{"type":"method","name":"hexencode","children":[],"call":["(send\n  (send\n    (lvar :str) :to_enum\n    (sym :each_byte)) :map) join ","%02x % ","str to_enum map ","str to_enum "," format ","str unpack first ","str unpack "]}," HTML Pipeline CamoFilter asset_proxy_secret_key":{"type":"method","name":"asset_proxy_secret_key","children":[],"call":[" context [] "," context "," raise "]}," HTML Pipeline CamoFilter asset_proxy_host":{"type":"method","name":"asset_proxy_host","children":[],"call":[" context [] "," context "," raise "]}," HTML Pipeline CamoFilter asset_url_hash":{"type":"method","name":"asset_url_hash","children":[],"call":["OpenSSL HMAC  hexdigest "," asset_proxy_secret_key ","OpenSSL Digest Digest  new ","OpenSSL HMAC  hexOpenSSL Digest Digest  new  "]}," HTML Pipeline CamoFilter asset_proxy_url":{"type":"method","name":"asset_proxy_url","children":[],"call":[" hexencode "," asset_url_hash "," asset_proxy_host "]}," HTML Pipeline CamoFilter validate":{"type":"method","name":"validate","children":[],"call":[" needs "]}," HTML Pipeline CamoFilter call":{"type":"method","name":"call","children":[],"call":[" doc ","element []= "," asset_proxy_url ","src =~ "," context [] "," context ","src sub ","element [] strip ","element [] ","element [] nil? "," doc search each "," doc search "," asset_host_whitelisted? ","uri host ","uri host nil? ","URI  parse "," asset_proxy_enabled? ","uri to_s "," asset_host_allowed? ","src sub  =~ ","element [] strip  =~ ","src sub  sub ","element [] strip  sub ","URI  parse  host ","URI  parse  host nil? ","URI  parse  to_s "]}," HTML Pipeline BodyContent document":{"type":"method","name":"document","children":[],"call":["HTML Pipeline  parse "," output "]}," HTML Pipeline BodyContent output":{"type":"method","name":"output","children":[],"call":[" result [] "," result "]}," HTML Pipeline BodyContent result":{"type":"method","name":"result","children":[],"call":["@pipeline call "]}," HTML Pipeline BodyContent initialize":{"type":"method","name":"initialize","children":[],"call":[]}," HTML Pipeline AutolinkFilter call":{"type":"method","name":"call","children":[],"call":["Rinku  auto_link "," html "," context [] "," context "," context [] == "," link_mode "]}," HTML Pipeline AbsoluteSourceFilter image_subpage_url":{"type":"method","name":"image_subpage_url","children":[],"call":[" raise "," class name "," class "," context [] "," context "]}," HTML Pipeline AbsoluteSourceFilter image_base_url":{"type":"method","name":"image_base_url","children":[],"call":[" raise "," class name "," class "," context [] "," context "]}," HTML Pipeline AbsoluteSourceFilter call":{"type":"method","name":"call","children":[],"call":[" doc ","element []= ","URI  join to_s ","URI  join "," image_subpage_url "," image_base_url ","src start_with? ","element [] strip ","element [] ","element [] empty? ","element [] nil? "," doc search each "," doc search "," image_ image_subpage_url _url "," image_ image_base_url _url ","element [] strip  start_with? "]}," HTML Pipeline MentionFilter link_to_mentioned_user":{"type":"method","name":"link_to_mentioned_user","children":[],"call":["(str \"<a href='\") + + ","(str \"<a href='\") + ","File  join "," base_url "," result [] "," result ","url << ","url =~ "," base_url dup "," base_File  join  "," base_ base_url dup  ","File  join  << "," base_url dup  << ","File  join  =~ "," base_url dup  =~ "," base_File  join  dup "," base_ base_url dup  dup "]}," HTML Pipeline MentionFilter link_to_mention_info":{"type":"method","name":"link_to_mention_info","children":[],"call":["(str \"<a href='\") + + ","(str \"<a href='\") + ","info_url nil? "]}," HTML Pipeline MentionFilter mention_link_filter":{"type":"method","name":"mention_link_filter","children":[],"call":["match sub "," link_to_mentioned_user "," link_to_mention_info "," class mentioned_logins_in "," class ","  link_to_mentioned_user _to_mentioned_user ","  link_to_mention_info _to_mentioned_user ","  link_to_mentioned_user _to_mention_info ","  link_to_mention_info _to_mention_info "]}," HTML Pipeline MentionFilter info_url":{"type":"method","name":"info_url","children":[],"call":[" context [] "," context "]}," HTML Pipeline MentionFilter call":{"type":"method","name":"call","children":[],"call":[" doc ","node replace ","html == "," mention_link_filter "," info_url "," base_url "," has_ancestor? ","content include? ! ","content include? ","node to_html "," doc search each "," doc search "," result [] "," result "," search_text_nodes each "," search_text_nodes "," username_pattern "," mention_link_filter  == ","node to_html  include? ! ","node to_html  include? ","node to_ mention_link_filter  "]}," HTML Pipeline MentionFilter mentioned_logins_in":{"type":"method","name":"mentioned_logins_in","children":[],"call":[]}," HTML Pipeline instrument":{"type":"method","name":"instrument","children":[],"call":[" instrumentation_service instrument "," instrumentation_service "," default_payload "]}," HTML Pipeline perform_filter":{"type":"method","name":"perform_filter","children":[],"call":["filter call "," instrument ","filter name "," default_payload "," default_ default_payload  "]}," HTML Pipeline default_payload":{"type":"method","name":"default_payload","children":[],"call":["(pair\n  (sym :pipeline)\n  (send nil :instrumentation_name)) merge "," instrumentation_name "]}," HTML Pipeline setup_instrumentation":{"type":"method","name":"setup_instrumentation","children":[],"call":[" instrumentation_service= "," class default_instrumentation_service "," class "," instrumentation_name= "]}," HTML Pipeline instrumentation_name":{"type":"method","name":"instrumentation_name","children":[],"call":[" class name "," class "]}," HTML Pipeline EmojiFilter emoji_url":{"type":"method","name":"emoji_url","children":[],"call":["File  join "," CGI  escape "," asset_root "," asset_path "]}," HTML Pipeline HttpsFilter validate":{"type":"method","name":"validate","children":[],"call":[" needs "," http_url "]}," HTML Pipeline EmojiFilter emoji_filename":{"type":"method","name":"emoji_filename","children":[],"call":[" CGI  escape ","Emoji  find_by_alias image_filename ","Emoji  find_by_alias "]}," HTML Pipeline EmojiFilter emoji_names":{"type":"method","name":"emoji_names","children":[],"call":[]}," HTML Pipeline EmojiFilter emoji_pattern":{"type":"method","name":"emoji_pattern","children":[],"call":[" class emoji_pattern "," class "]}," HTML Pipeline EmojiFilter asset_path":{"type":"method","name":"asset_path","children":[],"call":["File  join "," emoji_filename "," context [] gsub "," context [] "," context "," CGI  escape "]}," HTML Pipeline CamoFilter asset_host_whitelisted?":{"type":"method","name":"asset_host_whitelisted?","children":[],"call":["test match ","host == ","test is_a? "," asset_proxy_whitelist any? "," asset_proxy_whitelist "," asset_host_allowed? "," warn "]}," HTML Pipeline CamoFilter asset_proxy_whitelist":{"type":"method","name":"asset_proxy_whitelist","children":[],"call":[" context [] "," context "," asset_proxy_allowlist "," warn "]}," HTML Pipeline CamoFilter asset_proxy_enabled?":{"type":"method","name":"asset_proxy_enabled?","children":[],"call":[" context [] ! "," context [] "," context "]}," HTML Pipeline HttpsFilter http_url":{"type":"method","name":"http_url","children":[],"call":[" context [] "," context "]}," HTML Pipeline Filter search_text_nodes":{"type":"method","name":"search_text_nodes","children":[],"call":["doc xpath ","nodes empty? ","doc xpath  empty? "]}," HTML Pipeline SyntaxHighlightFilter lexer_for":{"type":"method","name":"lexer_for","children":[],"call":["Pygments Lexer  [] ","Linguist Language  [] lexer ","Linguist Language  [] ","Rouge Lexer  find "]}," HTML Pipeline EmojiFilter ignored_ancestor_tags":{"type":"method","name":"ignored_ancestor_tags","children":[],"call":["DEFAULT_IGNORED_ANCESTOR_TAGS  | "," context [] "," context "]}," HTML Pipeline MentionFilter username_pattern":{"type":"method","name":"username_pattern","children":[],"call":[" context [] "," context "]}," HTML Pipeline ImageFilter call":{"type":"method","name":"call","children":[],"call":["@text gsub "]}," HTML Pipeline EmojiFilter emoji_image_tag":{"type":"method","name":"emoji_image_tag","children":[],"call":[" emoji_url ","(send\n  (send\n    (send nil :default_img_attrs\n      (lvar :name)) :merge!\n    (send\n      (begin\n        (or\n          (send\n            (send nil :context) :[]\n            (sym :img_attrs))\n          (hash))) :with_indifferent_access)) :map) reject join ","  freeze ","(send\n  (send\n    (send nil :default_img_attrs\n      (lvar :name)) :merge!\n    (send\n      (begin\n        (or\n          (send\n            (send nil :context) :[]\n            (sym :img_attrs))\n          (hash))) :with_indifferent_access)) :map) reject ","value call ","value respond_to? ","value nil? ! ","value nil? "," default_img_attrs merge! map "," default_img_attrs merge! ","(or\n  (send\n    (send nil :context) :[]\n    (sym :img_attrs))\n  (hash)) with_indifferent_access "," context [] "," context "," default_img_attrs "," require "]}," HTML Pipeline require_dependency":{"type":"method","name":"require_dependency","children":[],"call":[]}," HTML Pipeline TableOfContentsFilter ascii_downcase":{"type":"method","name":"ascii_downcase","children":[],"call":["str downcase "]}," HTML Pipeline TableOfContentsFilter anchor_icon":{"type":"method","name":"anchor_icon","children":[],"call":[" context [] "," context "]}," HTML Pipeline SyntaxHighlightFilter initialize":{"type":"method","name":"initialize","children":[],"call":["Rouge Formatters HTML  new "]}," HTML Pipeline EmojiFilter default_img_attrs":{"type":"method","name":"default_img_attrs","children":[],"call":["absmiddle freeze ","20 freeze "," emoji_url to_s "," emoji_url ","emoji freeze "]}," HTML Pipeline TeamMentionFilter link_to_mentioned_team":{"type":"method","name":"link_to_mentioned_team","children":[],"call":["url << ","url =~ "," base_url dup "," base_url "," result [] "," result "," base_url dup  << "," base_url dup  =~ "," base_ base_url dup  dup "," base_ base_url dup  "]}," HTML Pipeline TeamMentionFilter mention_link_filter":{"type":"method","name":"mention_link_filter","children":[],"call":["match sub "," link_to_mentioned_team "," class mentioned_teams_in "," class ","  link_to_mentioned_team _to_mentioned_team "]}," HTML Pipeline TeamMentionFilter team_pattern":{"type":"method","name":"team_pattern","children":[],"call":[" context [] "," context "]}," HTML Pipeline TeamMentionFilter call":{"type":"method","name":"call","children":[],"call":[" doc ","node replace ","html == "," mention_link_filter "," team_pattern "," base_url "," has_ancestor? ","content include? ","node to_html "," doc search each "," doc search "," result [] "," result "," mention_link_filter  == ","node to_html  include? ","node to_ mention_link_filter  "]}," HTML Pipeline TeamMentionFilter mentioned_teams_in":{"type":"method","name":"mentioned_teams_in","children":[],"call":[]}," HTML Pipeline SanitizationFilter allowlist":{"type":"method","name":"allowlist","children":[],"call":["allowlist [] []= ","(or\n  (send\n    (send\n      (lvar :allowlist) :[]\n      (sym :protocols)) :[]\n    (str \"a\"))\n  (hash)) merge ","allowlist [] [] ","allowlist [] ","allowlist []= ","(or\n  (send\n    (lvar :allowlist) :[]\n    (sym :protocols))\n  (hash)) dup ","allowlist dup "," context [] "," context ","allowlist dup  [] []= ","(or\n  (send\n    (send\n      (lvar :allowlist dup ) :[]\n      (sym :protocols)) :[]\n    (str \"a\"))\n  (hash)) merge ","allowlist dup  [] [] ","allowlist dup  [] ","allowlist dup  []= ","(or\n  (send\n    (lvar :allowlist dup ) :[]\n    (sym :protocols))\n  (hash)) dup ","allowlist dup  dup "]}," HTML Pipeline CamoFilter asset_host_allowed?":{"type":"method","name":"asset_host_allowed?","children":[],"call":["test match ","host == ","test is_a? "," asset_proxy_allowlist any? "," asset_proxy_allowlist "]}," HTML Pipeline CamoFilter asset_proxy_allowlist":{"type":"method","name":"asset_proxy_allowlist","children":[],"call":[" context [] "," context "]}," HTML Pipeline AutolinkFilter link_mode":{"type":"method","name":"link_mode","children":[],"call":[" context [] "," context "]}," HTMLPipeline correctly_ancestored?":{"type":"method","name":"correctly_ancestored?","children":[],"call":["filter class ancestors include? ","filter class ancestors ","filter class ","filter ancestors include? ","filter ancestors ","filter respond_to? "]}," HTMLPipeline validate_filters":{"type":"method","name":"validate_filters","children":[],"call":[" raise ","invalid_filters join ","invalid_filters count == ","invalid_filters count ","invalid_filters empty? "," correctly_ancestored? ","filters reject ","filters empty? ","filters nil? "]}," HTMLPipeline validate_filter":{"type":"method","name":"validate_filter","children":[],"call":[" raise "," correctly_ancestored? "]}," HTMLPipeline default_payload":{"type":"method","name":"default_payload","children":[],"call":["(pair\n  (sym :pipeline)\n  (send nil :instrumentation_name)) merge "," instrumentation_name "]}," HTMLPipeline instrument":{"type":"method","name":"instrument","children":[],"call":[" instrumentation_service instrument "," instrumentation_service "," default_payload "]}," HTMLPipeline setup_instrumentation":{"type":"method","name":"setup_instrumentation","children":[],"call":[" instrumentation_service= "," class default_instrumentation_service "," class "," instrumentation_name= "]}," HTMLPipeline to_html":{"type":"method","name":"to_html","children":[],"call":["output to_s ","output to_html ","output respond_to? ","result [] "," call ","result []  to_s ","result []  to_html ","result []  respond_to? "," call  [] "]}," HTMLPipeline perform_filter":{"type":"method","name":"perform_filter","children":[],"call":["filter call "," instrument "," default_payload ","filter name "," default_ default_payload  "]}," HTMLPipeline call":{"type":"method","name":"call","children":[],"call":["@node_filters each ","result merge ","Hash  [] ","@node_filters collect flatten ","@node_filters collect ","result []= ","Selma Rewriter  new rewrite ","Selma Rewriter  new "," instrument "," default_payload ","f class name ","f class ","@node_filters map ","@node_filters empty? ","@convert_filter call ","@convert_filter nil? ","result [] "," perform_filter ","@text_filters inject ","@text_filters map ","context freeze ","@default_context merge ","result merge  merge ","result merge  []= "," default_ default_payload  ","result merge  [] ","@result [] _filters inject ","@result [] _filters map ","conresult []  freeze ","context freeze  freeze ","@default_context merge  freeze ","@default_conresult []  merge ","@default_context freeze  merge ","@default_@default_context merge  merge "]}," HTMLPipeline initialize":{"type":"method","name":"initialize","children":[],"call":[" class default_instrumentation_service "," class ","default_context freeze ","Selma Sanitizer  new ","sanitization_config nil? "," validate_filter ","@convert_filter nil? ! ","@convert_filter nil? "," raise ","@node_filters empty? ! ","@node_filters empty? "," validate_filters ","node_filters flatten freeze ","node_filters flatten ","text_filters flatten freeze ","text_filters flatten ","default_context nil? ","@text_filters empty? ! ","@text_filters empty? ","node_filters flatten freeze  empty? ! ","node_filters flatten freeze  empty? ","text_filters flatten freeze  empty? ! ","text_filters flatten freeze  empty? "]}," HTMLPipeline instrumentation_name":{"type":"method","name":"instrumentation_name","children":[],"call":[" class name "," class "]}," HTMLPipeline define_dependency_loaded_method":{"type":"method","name":"define_dependency_loaded_method","children":[],"call":[" class define_method "," lambda "," class "]}," HTMLPipeline require_dependencies":{"type":"method","name":"require_dependencies","children":[],"call":[" raise ","e class name ","e class ","dependency_list join "," define_dependency_loaded_method "," require ","names shift "," require_dependency ","names length > ","names length ","loaded ! ","names dup ","e class names shift  ","names dup  join ","names shift s shift ","names shift s length > ","names shift s length ","names shift s dup "]}," HTMLPipeline require_dependency":{"type":"method","name":"require_dependency","children":[],"call":[" raise ","e class name ","e class "," require "]}," HTMLPipeline optional_dependency":{"type":"method","name":"optional_dependency","children":[],"call":[" require "]}," HTMLPipeline TextFilter call":{"type":"method","name":"call","children":[],"call":[" new call "," new "]}," HTMLPipeline TextFilter initialize":{"type":"method","name":"initialize","children":[],"call":["text to_s ","text to_str ","text respond_to? "," raise ","text is_a? "]}," HTMLPipeline TextFilter PlainTextInputFilter call":{"type":"method","name":"call","children":[],"call":["CGI  escapeHTML "]}," HTMLPipeline TextFilter ImageFilter call":{"type":"method","name":"call","children":[],"call":["@text gsub "]}," HTMLPipeline SanitizationFilter call":{"type":"method","name":"call","children":[],"call":["Selma Rewriter  new rewrite ","Selma Rewriter  new ","Selma Sanitizer  new "," raise ","config class ","config is_a? ","html class ","html is_a? "]}," HTMLPipeline NodeFilter call":{"type":"method","name":"call","children":[],"call":["Selma Rewriter  new rewrite ","Selma Rewriter  new "," new "]}," HTMLPipeline NodeFilter reset!":{"type":"method","name":"reset!","children":[],"call":[" send "," respond_to? "]}," HTMLPipeline NodeFilter html":{"type":"method","name":"html","children":[],"call":[" doc to_html "," doc "," raise ","@doc nil? ","@html nil? "]}," HTMLPipeline NodeFilter initialize":{"type":"method","name":"initialize","children":[],"call":[" send "," respond_to? "]}," HTMLPipeline NodeFilter TeamMentionFilter link_to_mentioned_team":{"type":"method","name":"link_to_mentioned_team","children":[],"call":["url << ","(str \"[/~]\\\\z\") match? ","base_url dup "," result [] "," result ","base_url dup  << ","base_base_url dup  dup "]}," HTMLPipeline NodeFilter TeamMentionFilter mention_link_filter":{"type":"method","name":"mention_link_filter","children":[],"call":["match sub "," link_to_mentioned_team "," class mentioned_teams_in "," class ","  link_to_mentioned_team _to_mentioned_team "]}," HTMLPipeline NodeFilter TeamMentionFilter team_pattern":{"type":"method","name":"team_pattern","children":[],"call":[" context [] "," context "]}," HTMLPipeline NodeFilter TeamMentionFilter handle_text_chunk":{"type":"method","name":"handle_text_chunk","children":[],"call":["text replace "," mention_link_filter "," team_pattern "," base_url ","content include? ","text to_s ","text to_s  include? "]}," HTMLPipeline NodeFilter TeamMentionFilter selector":{"type":"method","name":"selector","children":[],"call":[]}," HTMLPipeline NodeFilter TeamMentionFilter after_initialize":{"type":"method","name":"after_initialize","children":[],"call":[" result []= "," result "]}," HTMLPipeline NodeFilter TeamMentionFilter mentioned_teams_in":{"type":"method","name":"mentioned_teams_in","children":[],"call":["Regexp  last_match ","text gsub "]}," HTMLPipeline NodeFilter TableOfContentsFilter handle_text_chunk":{"type":"method","name":"handle_text_chunk","children":[],"call":[" result [] last []= ","text to_s "," result [] last "," result [] "," result "]}," HTMLPipeline NodeFilter TableOfContentsFilter handle_element":{"type":"method","name":"handle_element","children":[],"call":[" result [] << "," result [] "," result ","element set_inner_content "," anchor_html ","element []= "," classes ","header_href [] ","header_href start_with? ","element [] ","element []  [] ","element []  start_with? "]}," HTMLPipeline NodeFilter TableOfContentsFilter after_initialize":{"type":"method","name":"after_initialize","children":[],"call":[" result []= "," result "]}," HTMLPipeline NodeFilter TableOfContentsFilter classes":{"type":"method","name":"classes","children":[],"call":[" context [] "," context "]}," HTMLPipeline NodeFilter TableOfContentsFilter anchor_html":{"type":"method","name":"anchor_html","children":[],"call":["@context [] "]}," HTMLPipeline NodeFilter TableOfContentsFilter selector":{"type":"method","name":"selector","children":[],"call":[]}," HTMLPipeline NodeFilter MentionFilter link_to_mentioned_user":{"type":"method","name":"link_to_mentioned_user","children":[],"call":["url << ","(str \"[/~]\\\\z\") match? ","base_url dup "," result [] "," result ","base_url dup  << ","base_base_url dup  dup "]}," HTMLPipeline NodeFilter MentionFilter mention_link_filter":{"type":"method","name":"mention_link_filter","children":[],"call":["match sub "," link_to_mentioned_user "," class mentioned_logins_in "," class ","  link_to_mentioned_user _to_mentioned_user "]}," HTMLPipeline NodeFilter MentionFilter username_pattern":{"type":"method","name":"username_pattern","children":[],"call":[" context [] "," context "]}," HTMLPipeline NodeFilter MentionFilter info_url":{"type":"method","name":"info_url","children":[],"call":[" context [] "," context "]}," HTMLPipeline NodeFilter MentionFilter handle_text_chunk":{"type":"method","name":"handle_text_chunk","children":[],"call":["text replace ","html == "," mention_link_filter "," username_pattern "," base_url ","content include? ","text to_s "," mention_link_filter  == ","text to_s  include? "]}," HTMLPipeline NodeFilter MentionFilter selector":{"type":"method","name":"selector","children":[],"call":[]}," HTMLPipeline NodeFilter MentionFilter after_initialize":{"type":"method","name":"after_initialize","children":[],"call":[" result [] "," result "]}," HTMLPipeline NodeFilter MentionFilter mentioned_logins_in":{"type":"method","name":"mentioned_logins_in","children":[],"call":["Regexp  last_match ","text gsub ","MENTION_PATTERNS  [] "]}," HTMLPipeline NodeFilter ImageMaxWidthFilter link_image":{"type":"method","name":"link_image","children":[],"call":["element after ","element before ","element [] "]}," HTMLPipeline NodeFilter ImageMaxWidthFilter handle_element":{"type":"method","name":"handle_element","children":[],"call":[" link_image "," has_ancestor? ","element []= ","(str \"\\\\Ajavascript\") match? ","element [] to_s strip ","element [] to_s ","element [] "]}," HTMLPipeline NodeFilter ImageMaxWidthFilter selector":{"type":"method","name":"selector","children":[],"call":[]}," HTMLPipeline NodeFilter HttpsFilter handle_element":{"type":"method","name":"handle_element","children":[],"call":["element []= ","element [] sub ","element [] "]}," HTMLPipeline NodeFilter HttpsFilter selector":{"type":"method","name":"selector","children":[],"call":[]}," HTMLPipeline NodeFilter EmojiFilter ignored_ancestor_tags":{"type":"method","name":"ignored_ancestor_tags","children":[],"call":["DEFAULT_IGNORED_ANCESTOR_TAGS  | "," context [] "," context "]}," HTMLPipeline NodeFilter EmojiFilter emoji_filename":{"type":"method","name":"emoji_filename","children":[],"call":["Gemojione  image_url_for_name sub ","Gemojione  asset_host ","Gemojione  image_url_for_name ","Emoji  find_by_alias image_filename ","Emoji  find_by_alias "," class gemoji_loaded? "," class "]}," HTMLPipeline NodeFilter EmojiFilter emoji_url":{"type":"method","name":"emoji_url","children":[],"call":["File  join "," asset_path "," asset_root "]}," HTMLPipeline NodeFilter EmojiFilter default_img_attrs":{"type":"method","name":"default_img_attrs","children":[],"call":[" emoji_url to_s "," emoji_url "]}," HTMLPipeline NodeFilter EmojiFilter emoji_names":{"type":"method","name":"emoji_names","children":[],"call":["(send\n  (send\n    (self) :class) :gemoji_loaded?) flatten sort ","(send\n  (send\n    (self) :class) :gemoji_loaded?) flatten ","i [] [] ","i [] ","Gemojione Index  new all map ","Gemojione Index  new all ","Gemojione Index  new ","Emoji  all map ","Emoji  all "," class gemoji_loaded? "," class "]}," HTMLPipeline NodeFilter EmojiFilter emoji_image_tag":{"type":"method","name":"emoji_image_tag","children":[],"call":["(send\n  (send\n    (send\n      (send\n        (send nil :default_img_attrs\n          (lvar :name)) :transform_keys\n        (block-pass\n          (sym :to_sym))) :merge!\n      (or\n        (send\n          (send nil :context) :[]\n          (sym :img_attrs))\n        (hash))) :transform_keys\n    (block-pass\n      (sym :to_sym))) :each_with_object\n  (array)) compact join ","(send\n  (send\n    (send\n      (send\n        (send nil :default_img_attrs\n          (lvar :name)) :transform_keys\n        (block-pass\n          (sym :to_sym))) :merge!\n      (or\n        (send\n          (send nil :context) :[]\n          (sym :img_attrs))\n        (hash))) :transform_keys\n    (block-pass\n      (sym :to_sym))) :each_with_object\n  (array)) compact ","arr << ","value call ","value respond_to? ","value nil? "," default_img_attrs transform_keys merge! transform_keys each_with_object "," default_img_attrs transform_keys merge! transform_keys "," default_img_attrs transform_keys merge! "," context [] "," context "," default_img_attrs transform_keys "," default_img_attrs "]}," HTMLPipeline NodeFilter EmojiFilter asset_path":{"type":"method","name":"asset_path","children":[],"call":["File  join "," emoji_filename "," context [] gsub "," context [] "," context "]}," HTMLPipeline NodeFilter EmojiFilter asset_root":{"type":"method","name":"asset_root","children":[],"call":[" context [] "," context "]}," HTMLPipeline NodeFilter EmojiFilter emoji_image_filter":{"type":"method","name":"emoji_image_filter","children":[],"call":[" emoji_image_tag ","Regexp  last_match ","text gsub "]}," HTMLPipeline NodeFilter EmojiFilter validate":{"type":"method","name":"validate","children":[],"call":[" needs "]}," HTMLPipeline NodeFilter EmojiFilter handle_text_chunk":{"type":"method","name":"handle_text_chunk","children":[],"call":["text replace "," emoji_image_filter ","text to_s ","text to_s include? "]}," HTMLPipeline NodeFilter EmojiFilter selector":{"type":"method","name":"selector","children":[],"call":["Selma Selector  new "," ignored_ancestor_tags "]}," HTMLPipeline NodeFilter EmojiFilter after_initialize":{"type":"method","name":"after_initialize","children":[],"call":["(send\n  (send nil :emoji_names) :map) join ","Regexp  escape "," emoji_names map "," emoji_names "]}," HTMLPipeline NodeFilter AbsoluteSourceFilter image_subpage_url":{"type":"method","name":"image_subpage_url","children":[],"call":[" raise "," class name "," class "," context [] "," context "]}," HTMLPipeline NodeFilter AbsoluteSourceFilter image_base_url":{"type":"method","name":"image_base_url","children":[],"call":[" raise "," class name "," class "," context [] "," context "]}," HTMLPipeline NodeFilter AbsoluteSourceFilter handle_element":{"type":"method","name":"handle_element","children":[],"call":["element []= ","URI  join to_s ","URI  join "," image_subpage_url "," image_base_url ","src start_with? ","src strip ","src empty? ","src nil? ","element [] "," image_ image_subpage_url _url "," image_ image_base_url _url ","src strip  start_with? ","element []  start_with? ","src strip  strip ","element []  strip ","src strip  empty? ","element []  empty? ","src strip  nil? ","element []  nil? "]}," HTMLPipeline NodeFilter AbsoluteSourceFilter selector":{"type":"method","name":"selector","children":[],"call":[]}," HTMLPipeline Filter needs":{"type":"method","name":"needs","children":[],"call":[" raise ","missing map join ","missing map "," class name "," class ","missing any? "," context include? "," context ","keys reject ","missing none? "]}," HTMLPipeline Filter has_ancestor?":{"type":"method","name":"has_ancestor?","children":[],"call":["ancestors include? ","element ancestors ","element ancestors  include? ","element element ancestors  "]}," HTMLPipeline Filter base_url":{"type":"method","name":"base_url","children":[],"call":[" context [] "," context "]}," HTMLPipeline Filter validate":{"type":"method","name":"validate","children":[],"call":[]}," HTMLPipeline Filter call":{"type":"method","name":"call","children":[],"call":[" raise "]}," HTMLPipeline Filter initialize":{"type":"method","name":"initialize","children":[],"call":[" validate "]}," HTMLPipeline ConvertFilter call":{"type":"method","name":"call","children":[],"call":[" new call "," new "]}," HTMLPipeline ConvertFilter initialize":{"type":"method","name":"initialize","children":[],"call":[]}," HTMLPipeline ConvertFilter MarkdownFilter call":{"type":"method","name":"call","children":[],"call":["Commonmarker  to_html rstrip! ","Commonmarker  to_html ","options fetch ","@context fetch ","@context fetch  fetch "]}," HTMLPipeline ConvertFilter MarkdownFilter initialize":{"type":"method","name":"initialize","children":[],"call":[]}," HTMLPipeline NodeFilter SyntaxHighlightFilter include_lang?":{"type":"method","name":"include_lang?","children":[],"call":["@lang empty? ! ","@lang empty? ","@lang nil? ! ","@lang nil? "]}," HTMLPipeline NodeFilter SyntaxHighlightFilter lexer_for":{"type":"method","name":"lexer_for","children":[],"call":["Rouge Lexer  find "]}," HTMLPipeline NodeFilter SyntaxHighlightFilter highlight_with_timeout_handling":{"type":"method","name":"highlight_with_timeout_handling","children":[],"call":["Rouge  highlight "]}," HTMLPipeline NodeFilter SyntaxHighlightFilter handle_text_chunk":{"type":"method","name":"handle_text_chunk","children":[],"call":["text replace "," highlight_with_timeout_handling ","text to_s ","(lvasgn :lexer\n  (send nil :lexer_for\n    (ivar :@lang))) nil? "," lexer_for ","@lang nil? ","(lvasgn : lexer_for \n  (send nil : lexer_for _for\n    (ivar :@lang))) nil? ","  lexer_for _for "]}," HTMLPipeline NodeFilter SyntaxHighlightFilter handle_element":{"type":"method","name":"handle_element","children":[],"call":["element []= "," include_lang? "," context fetch "," context ","element [] "," context [] "]}," HTMLPipeline NodeFilter SyntaxHighlightFilter selector":{"type":"method","name":"selector","children":[],"call":[]}," HTMLPipeline NodeFilter SyntaxHighlightFilter initialize":{"type":"method","name":"initialize","children":[],"call":["Rouge Formatters HTML  new ","context [] "]}," HTMLPipeline NodeFilter AssetProxyFilter hexencode":{"type":"method","name":"hexencode","children":[],"call":["str unpack1 "]}," HTMLPipeline NodeFilter AssetProxyFilter asset_url_hash":{"type":"method","name":"asset_url_hash","children":[],"call":["OpenSSL HMAC  hexdigest "," context [] "," context "]}," HTMLPipeline NodeFilter AssetProxyFilter asset_proxy_url":{"type":"method","name":"asset_proxy_url","children":[],"call":[" hexencode "," asset_url_hash "," context [] "," context "]}," HTMLPipeline NodeFilter AssetProxyFilter determine_allowlist":{"type":"method","name":"determine_allowlist","children":[],"call":["proxy_settings [] "]}," HTMLPipeline NodeFilter AssetProxyFilter compile_allowlist":{"type":"method","name":"compile_allowlist","children":[],"call":["Regexp  new ","escaped join ","Regexp  escape gsub ","Regexp  escape ","domain_list map ","domain_list empty? "]}," HTMLPipeline NodeFilter AssetProxyFilter transform_context":{"type":"method","name":"transform_context","children":[],"call":[" compile_allowlist ","context [] "," determine_allowlist ","context []= ","proxy_settings [] "," compile_ determine_allowlist  "," determine_ determine_allowlist  "]}," HTMLPipeline NodeFilter AssetProxyFilter asset_host_allowed?":{"type":"method","name":"asset_host_allowed?","children":[],"call":[" context [] match? "," context [] "," context "]}," HTMLPipeline NodeFilter AssetProxyFilter validate":{"type":"method","name":"validate","children":[],"call":[" needs "]}," HTMLPipeline NodeFilter AssetProxyFilter handle_element":{"type":"method","name":"handle_element","children":[],"call":["element []= "," asset_proxy_url "," asset_host_allowed? ","uri host ","original_src start_with? ! ","original_src start_with? ","uri host nil? ","URI  parse ","element [] ","URI  parse  host ","element []  start_with? ! ","element []  start_with? ","URI  parse  host nil? "]}," HTMLPipeline NodeFilter AssetProxyFilter selector":{"type":"method","name":"selector","children":[],"call":[]}}