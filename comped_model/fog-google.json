{" Fog Google Shared build_excon_response":{"type":"method","name":"build_excon_response","children":[],"call":[" raise ","Fog Errors Error  new ","Fog Errors NotFound  new ","response status ","(send\n  (send\n    (lvar :body) :[]\n    (str \"error\")) :map) join ","error [] ","body [] map ","body [] ","body [] kind_of? ","body [] [] ","body [] has_key? ","(send\n  (send\n    (send\n      (lvar :body) :[]\n      (str \"error\")) :[]\n    (str \"errors\")) :map) join ","body [] [] map ","response status= ","body has_key? ","Excon Response  new ","body [] is_a? ","body [] key? ","body key? ","Excon Response  new  status ","Excon Response  new  status= "]}," Fog Google Shared request":{"type":"method","name":"request","children":[],"call":[" build_excon_response ","result status ","Fog JSON  decode ","result body ","result body empty? ","result body nil? ","@client execute ","client_parms []= ","v nil? ","body_object reject ","@client execute  status ","@client execute  body ","@client execute  body empty? ","@client execute  body nil? "]}," Fog Google Shared new_pk12_google_client":{"type":"method","name":"new_pk12_google_client","children":[],"call":["client authorization fetch_access_token! ","client authorization ","client authorization= ","Signet OAuth2 Client  new "," Google APIClient  new ","app_name nil? ","(pair\n  (sym :application_name)\n  (lvar :application_name)) merge "," Google APIClient  new  authorization fetch_access_token! "," Google APIClient  new  authorization "," Google APIClient  new  authorization= "]}," Fog Google Shared create_signing_key":{"type":"method","name":"create_signing_key","children":[],"call":[" raise ","ArgumentError  new "," Google APIClient KeyUtils  load_from_pkcs12 ","options [] ","File  expand_path "," Google APIClient KeyUtils  load_from_pem ","json_key_hash [] ","options []= ","json_key_hash has_key? ","Fog JSON  decode ","file read ","File  open ","json_key_hash key? ","Fog JSON  decode  [] ","options [] _hash [] ","File  open _hash [] ","Fog JSON  decode  has_key? ","options [] _hash has_key? ","File  open _hash has_key? ","Fog JSON  decode  key? ","options [] _hash key? ","File  open _hash key? "]}," Fog Google Shared initialize_google_client":{"type":"method","name":"initialize_google_client","children":[],"call":[" new_pk12_google_client ","options [] "," raise ","ArgumentError  new "," create_signing_key ","client nil? ","Fog Logger  warning "," require "," Google Apis RequestOptions  default authorization= "," Google Apis RequestOptions  default "," Google Auth ServiceAccountCredentials  make_creds ","StringIO  new ","json_key_hash to_json "," Google Apis  logger level= "," Google Apis  logger "," Google Apis  logger= "," Logger  new ","ENV  [] ","options []= ","json_key_hash [] ","json_key_hash key? ","Fog JSON  decode ","File  open ","File  expand_path "," Google Apis ClientOptions  default application_version= "," Google Apis ClientOptions  default "," Google Apis ClientOptions  default application_name= ","options [] nil? ","Fog Logger  error "," process_fallback_auth "," process_application_default_auth "," process_key_auth "," validate_client_options ","Fog Errors Error  new "," new_pk12_google_options []  "," create_ create_signing_key  ","options []  nil? "," Google Apis RequestOptions  default options [] orization= "," Google Apis RequestOptions  default  Google Auth ServiceAccountCredentials  make_creds orization= "," Google Apis RequestOptions  default  process_fallback_auth orization= "," Google Apis RequestOptions  default  process_application_default_auth orization= "," Google Apis RequestOptions  default  process_key_auth orization= ","Fog JSON  decode  to_json ","options [] _hash to_json ","File  open _hash to_json ","Fog JSON  decode  [] ","options [] _hash [] ","File  open _hash [] ","Fog JSON  decode  key? ","options [] _hash key? ","File  open _hash key? "," process_fallback_options []  "," process_fallback_ Google Auth ServiceAccountCredentials  make_creds  "," process_fallback_ process_fallback_auth  "," process_fallback_ process_application_default_auth  "," process_fallback_ process_key_auth  "," process_application_default_options []  "," process_application_default_ Google Auth ServiceAccountCredentials  make_creds  "," process_application_default_ process_fallback_auth  "," process_application_default_ process_application_default_auth  "," process_application_default_ process_key_auth  "," process_key_options []  "," process_key_ Google Auth ServiceAccountCredentials  make_creds  "," process_key_ process_fallback_auth  "," process_key_ process_application_default_auth  "," process_key_ process_key_auth  "," validate_options [] _options "]}," Fog Google Shared shared_initialize":{"type":"method","name":"shared_initialize","children":[],"call":["base_url + + ","base_url + "," Google Cloud Env  get "]}," Fog Google Mock hex":{"type":"method","name":"hex","children":[],"call":[]}," Fog Google Mock etag":{"type":"method","name":"etag","children":[],"call":[]}," Fog Storage Google Real request":{"type":"method","name":"request","children":[],"call":[" connection request "," connection ","params [] []= "," signature ","params [] ","Fog Time  now to_date_header ","Fog Time  now ","params delete "," request_params "," request_params  [] []= "," request_params  [] "," request_params  delete "," request_ request_params  "]}," Fog Storage Google Real connection":{"type":"method","name":"connection","children":[],"call":["Fog XML Connection  new "," reload ","uri == "]}," Fog Storage Google Real signature":{"type":"method","name":"signature","children":[],"call":["Base64  encode64 chomp! ","Base64  encode64 ","@hmac sign ","string_to_sign << ","canonical_resource chop! ","canonical_resource << ","(str \"acl\") include? ","(or\n  (send\n    (lvar :params) :[]\n    (sym :query))\n  (hash)) keys ","params [] ","CGI  escape downcase ","CGI  escape ","params delete ","canonical_google_headers << ","x [] <=> ","y [] ","x [] ","google_headers sort ","google_headers []= ","key [] == ","key [] ","params [] [] "]}," Fog Storage Google Real reload":{"type":"method","name":"reload","children":[],"call":["@connection reset "]}," Fog Storage Google Real initialize":{"type":"method","name":"initialize","children":[],"call":["options [] ","options fetch ","Fog HMAC  new "]}," Fog Storage Google Mock signature":{"type":"method","name":"signature","children":[],"call":[]}," Fog Storage Google Mock reset_data":{"type":"method","name":"reset_data","children":[],"call":[" class data delete "," class data "," class "]}," Fog Storage Google Mock data":{"type":"method","name":"data","children":[],"call":[" class data [] "," class data "," class "]}," Fog Storage Google Mock initialize":{"type":"method","name":"initialize","children":[],"call":["options [] "]}," Fog Storage Google Mock reset":{"type":"method","name":"reset","children":[],"call":[]}," Fog Storage Google Mock acls":{"type":"method","name":"acls","children":[],"call":[]}," Fog Storage Google Utils request_params":{"type":"method","name":"request_params","children":[],"call":["params [] ","params []= ","subdomain != ","params [] split [] ","params [] split ","Fog Logger  warning ","subdomain =~ ","subdomain !~ ","params [] split first ","params [] split first  != ","params [] split first  =~ ","params [] split first  !~ "]}," Fog Storage Google Utils host_path_query":{"type":"method","name":"host_path_query","children":[],"call":["query join ","params [] ","query << ","params [] [] ","CGI  escape "," signature ","(send\n  (lvar :params) :[]\n  (sym :query)) compact ","params []= ","CGI  escape gsub ","params [] []= ","expires to_i ","(send\n  (lvar :params) :[]\n  (sym :query)) compact  join ","(send\n  (lvar :params) :[]\n  (sym :query)) compact  << ","(send\n  (lvar :params) :[]\n  (sym :(send\n  (lvar :params) :[]\n  (sym :query)) compact )) compact "]}," Fog Storage Google Utils url":{"type":"method","name":"url","children":[],"call":[" https_url ","Fog Logger  deprecation "," caller first "," caller "]}," Fog Storage Google Utils https_url":{"type":"method","name":"https_url","children":[],"call":["https:// << "," host_path_query "]}," Fog Storage Google Utils http_url":{"type":"method","name":"http_url","children":[],"call":["http:// << "," host_path_query "]}," Fog Google SQL Real initialize":{"type":"method","name":"initialize","children":[],"call":["@client discovered_api "," api_version "," initialize_google_client ","options merge! ","GOOGLE_SQL_API_SCOPE_URLS  join "," shared_initialize ","options [] ","options []= "," Google Apis SqladminV1beta4 SQLAdminService  new "," apply_client_options "," initialize_google_client  discovered_api "]}," Fog Google SQL Mock random_operation":{"type":"method","name":"random_operation","children":[],"call":["Fog Mock  random_hex ","Fog Mock  random_numbers "]}," Fog Google SQL Mock reset_data":{"type":"method","name":"reset_data","children":[],"call":[" class data delete "," project "," class data "," class "]}," Fog Google SQL Mock data":{"type":"method","name":"data","children":[],"call":[" class data [] "," project "," class data "," class "]}," Fog Google SQL Mock reset":{"type":"method","name":"reset","children":[],"call":[]}," Fog Google SQL Mock initialize":{"type":"method","name":"initialize","children":[],"call":[" shared_initialize ","options [] "]}," Fog Storage Google Mock put_object_url":{"type":"method","name":"put_object_url","children":[],"call":[" https_url "," raise ","ArgumentError  new "]}," Fog Storage Google Real put_object_url":{"type":"method","name":"put_object_url","children":[],"call":[" https_url "," raise ","ArgumentError  new "]}," Fog Storage Google Real put_object_acl":{"type":"method","name":"put_object_acl","children":[],"call":[" request ","CGI  escape "," entries_list ","acl [] "," tag ","acl [] [] "]}," Fog Storage Google Real entries_list":{"type":"method","name":"entries_list","children":[],"call":["(send\n  (lvar :access_control_list) :map) join "," tag "," scope_tag + ","entry [] "," scope_tag ","access_control_list map "]}," Fog Storage Google Real scope_tag":{"type":"method","name":"scope_tag","children":[],"call":["(str \"<Scope type='\") + + ","(str \"<Scope type='\") + ","(send\n  (block\n    (send\n      (send\n        (lvar :scope) :to_a) :select)\n    (args\n      (arg :pair))\n    (send\n      (send\n        (lvar :pair) :[]\n        (int 0)) :!=\n      (str \"type\"))) :map) join "," tag ","pair [] ","(send\n  (send\n    (lvar :scope) :to_a) :select) map ","pair [] != ","scope to_a select ","scope to_a ","scope [] ","(str \"AllUsers\") include? "]}," Fog Storage Google Real tag":{"type":"method","name":"tag","children":[],"call":[]}," Fog Storage Google Mock put_object":{"type":"method","name":"put_object","children":[],"call":[" raise ","Excon Errors  status_error ","response status= ","response headers= ","object [] ","bucket [] []= ","bucket [] ","object []= ","data [] [] ","data [] ","options [] ","Fog Time  now to_date_header ","Fog Time  now ","Fog Google Mock  etag "," data [] [] "," data [] "," data ","Excon Response  new ","data []= ","data [] read ","data [] is_a? ","Fog Storage  parse_data "," data [] [] [] []= "," class acls "," class "," data [] [] [] ","Excon Errors BadRequest  new ","(str \"private\") include? ! ","(str \"private\") include? ","Excon Response  new  status= ","Excon Response  new  headers= "," data [] []  [] []= "," data [] []  [] ","Fog Storage  parse_data  [] [] ","Fog Storage  parse_data  [] "," Fog Storage  parse_data  [] [] "," Fog Storage  parse_data  [] "," Fog Storage  parse_data  ","Fog Storage  parse_data  []= ","Fog Storage  parse_data  [] read ","Fog Storage  parse_data  [] is_a? ","Fog Storage  parse_Fog Storage  parse_data  "," Fog Storage  parse_data  [] [] [] []= "," Fog Storage  parse_data  [] [] [] "]}," Fog Storage Google Real put_object":{"type":"method","name":"put_object","children":[],"call":[" request ","CGI  escape ","data [] ","data [] merge! ","Fog Storage  parse_data ","Fog Google  escape ","Fog Storage  parse_data  [] ","Fog Storage  parse_data  [] merge! ","Fog Storage  parse_Fog Storage  parse_data  "]}," Fog Storage Google Real put_bucket_acl":{"type":"method","name":"put_bucket_acl","children":[],"call":[" request "," entries_list ","acl [] "," tag ","acl [] [] "]}," Fog Storage Google Mock put_bucket_acl":{"type":"method","name":"put_bucket_acl","children":[],"call":["Fog Mock  not_implemented "]}," Fog Storage Google Mock put_bucket":{"type":"method","name":"put_bucket","children":[],"call":[" raise ","Excon Errors  status_error ","response status= "," data [] []= "," data [] "," data "," data [] [] nil? "," data [] [] ","bucket []= ","options [] ","Time  now ","Excon Response  new "," data [] [] []= "," class acls "," class ","Excon Errors BadRequest  new ","(str \"private\") include? ! ","(str \"private\") include? ","Excon Response  new  status= "]}," Fog Storage Google Real put_bucket":{"type":"method","name":"put_bucket","children":[],"call":[" request ","options delete "]}," Fog Storage Google Mock head_object":{"type":"method","name":"head_object","children":[],"call":["response body= "," get_object "," get_object  body= "]}," Fog Storage Google Real head_object":{"type":"method","name":"head_object","children":[],"call":[" request ","CGI  escape ","headers merge! ","headers []= ","Fog Time  at to_date_header ","Fog Time  at ","options [] to_i ","options [] ","options delete "," raise ","ArgumentError  new "]}," Fog Storage Google Mock get_service":{"type":"method","name":"get_service","children":[],"call":["response body= ","(str \"CreationDate\") include? ! ","(str \"CreationDate\") include? ","bucket reject "," data [] values map "," data [] values "," data [] "," data ","response headers []= ","response headers ","Excon Response  new ","Excon Response  new  body= ","Excon Response  new  headers []= ","Excon Response  new  headers "]}," Fog Storage Google Real get_service":{"type":"method","name":"get_service","children":[],"call":[" request ","Fog Parsers Storage Google GetService  new "]}," Fog Storage Google Mock get_object_url":{"type":"method","name":"get_object_url","children":[],"call":[" get_object_https_url ","Fog Logger  deprecation "," caller first "," caller "," get_object_url "]}," Fog Storage Google Real get_object_url":{"type":"method","name":"get_object_url","children":[],"call":[" get_object_https_url ","Fog Logger  deprecation "," caller first "," caller "," get_object_url "]}," Fog Storage Google Real get_object_torrent":{"type":"method","name":"get_object_torrent","children":[],"call":[" request ","CGI  escape "," raise ","ArgumentError  new "]}," Fog Storage Google GetObjectHttpsUrl get_object_https_url":{"type":"method","name":"get_object_https_url","children":[],"call":[" https_url "," raise ","ArgumentError  new "]}," Fog Storage Google GetObjectHttpUrl get_object_http_url":{"type":"method","name":"get_object_http_url","children":[],"call":[" http_url "," raise ","ArgumentError  new "]}," Fog Storage Google Mock get_object_acl":{"type":"method","name":"get_object_acl","children":[],"call":[" raise ","Excon Errors  status_error ","response status= ","response body= "," data [] [] [] [] "," data [] [] [] "," data [] [] "," data [] "," data ","Excon Response  new ","Excon Response  new  status= ","Excon Response  new  body= "]}," Fog Storage Google Real get_object_acl":{"type":"method","name":"get_object_acl","children":[],"call":[" request ","CGI  escape ","Fog Parsers Storage Google AccessControlList  new ","query []= ","options delete "," raise ","ArgumentError  new "]}," Fog Storage Google Mock get_object":{"type":"method","name":"get_object","children":[],"call":[" raise ","Excon Errors  status_error ","response status= ","response body= ","object [] ","block call ","data read ","(lvar :remaining) min ","remaining > ","data length ","StringIO  new "," block_given? ","response headers []= ","response headers ","options [] < ","Time  parse ","options [] ","options [] == ","options [] >= ","options [] != ","bucket [] [] ","bucket [] "," data [] [] "," data [] "," data ","Excon Response  new ","ArgumentError  new ","Excon Response  new  status= ","Excon Response  new  body= ","bucket [] []  [] ","StringIO  new  read ","(lvar :data length ) min ","data length  > ","StringIO  new  length ","Excon Response  new  headers []= ","Excon Response  new  headers "," data [] []  [] [] "," data [] []  [] "," StringIO  new  [] [] "," StringIO  new  [] "," StringIO  new  "]}," Fog Storage Google Real get_object":{"type":"method","name":"get_object","children":[],"call":[" request ","params merge! ","CGI  escape ","params []= ","Proc  new "," block_given? ","params [] []= ","Fog Time  at to_date_header ","Fog Time  at ","options [] to_i ","options [] ","params [] ","params [] merge! ","options delete "," raise ","ArgumentError  new "]}," Fog Storage Google Mock get_bucket_acl":{"type":"method","name":"get_bucket_acl","children":[],"call":[" raise ","Excon Errors  status_error ","response status= ","response body= "," data [] [] [] "," data [] [] "," data [] "," data ","Excon Response  new ","Excon Response  new  status= ","Excon Response  new  body= "]}," Fog Storage Google Real get_bucket_acl":{"type":"method","name":"get_bucket_acl","children":[],"call":[" request ","Fog Parsers Storage Google AccessControlList  new "," raise ","ArgumentError  new "]}," Fog Storage Google Mock get_bucket":{"type":"method","name":"get_bucket","children":[],"call":[" raise ","Excon Errors  status_error ","response status= ","response body []= ","response body [] [] ","options [] ","response body [] ","response body ","options [] < ","response body [] length ","response body= ","bucket [] ","truncated_contents size != ","contents size ","truncated_contents size ","contents [] ","(lvar :max_keys) min ","data merge! ","object [] to_i ","object [] ","Time  parse ","(str \"ETag\") include? ! ","(str \"ETag\") include? ","object reject ","(send\n  (block\n    (send\n      (send\n        (send\n          (lvar :bucket) :[]\n          (sym :objects)) :values) :sort)\n    (args\n      (arg :x)\n      (arg :y))\n    (send\n      (send\n        (lvar :x) :[]\n        (str \"Key\")) :<=>\n      (send\n        (lvar :y) :[]\n        (str \"Key\")))) :reject) map ","object [] <= ","object [] [] != ","object [] [] ","options [] length ","(send\n  (send\n    (send\n      (lvar :bucket) :[]\n      (sym :objects)) :values) :sort) reject ","x [] <=> ","y [] ","x [] ","bucket [] values sort ","bucket [] values "," data [] [] "," data [] "," data ","bucket_name == ","name to_s ","(str \"(\\\\w+\\\\.?)*\") match ","Excon Response  new ","ArgumentError  new ","Excon Response  new  status= ","Excon Response  new  body []= ","Excon Response  new  body [] [] ","Excon Response  new  body [] ","Excon Response  new  body ","Excon Response  new  body [] length ","Excon Response  new  body= "," data [] []  [] ","contents []  size != ","truncated_contents (lvar :max_keys) min  != ","contents (lvar :max_keys) min  ","contents []  size ","truncated_contents (lvar :max_keys) min  ","(send\n  (block\n    (send\n      (send\n        (send\n          (lvar : data [] [] ) :[]\n          (sym :objects)) :values) :sort)\n    (args\n      (arg :x)\n      (arg :y))\n    (send\n      (send\n        (lvar :x) :[]\n        (str \"Key\")) :<=>\n      (send\n        (lvar :y) :[]\n        (str \"Key\")))) :reject) map ","(send\n  (send\n    (send\n      (lvar : data [] [] ) :[]\n      (sym :objects)) :values) :sort) reject "," data [] []  [] values sort "," data [] []  [] values "," data [] [] _name == ","bucket_(str \"(\\w+\\.?)*\") match  == ","(str \"(\\w+\\.?)*\") match  to_s "]}," Fog Storage Google Real get_bucket":{"type":"method","name":"get_bucket","children":[],"call":[" request ","Fog Parsers Storage Google GetBucket  new "," raise ","ArgumentError  new "]}," Fog Storage Google Mock delete_object":{"type":"method","name":"delete_object","children":[],"call":[" raise ","Excon Errors  status_error ","response status= ","bucket [] delete ","bucket [] ","bucket [] [] "," data [] [] "," data [] "," data ","Excon Response  new ","Excon Response  new  status= "," data [] []  [] delete "," data [] []  [] "," data [] []  [] [] "]}," Fog Storage Google Real delete_object":{"type":"method","name":"delete_object","children":[],"call":[" request ","CGI  escape "]}," Fog Storage Google Mock delete_bucket":{"type":"method","name":"delete_bucket","children":[],"call":["response status= "," data [] delete "," data [] "," data "," raise ","Excon Errors  status_error "," data [] [] [] empty? ! "," data [] [] [] empty? "," data [] [] [] "," data [] [] "," data [] [] nil? ","Excon Response  new ","Excon Response  new  status= "]}," Fog Storage Google Real delete_bucket":{"type":"method","name":"delete_bucket","children":[],"call":[" request "]}," Fog Storage Google Mock copy_object":{"type":"method","name":"copy_object","children":[],"call":[" raise ","Excon Errors  status_error ","response status= ","response body= ","Time  parse ","target_object [] ","target_bucket [] []= ","target_bucket [] ","target_object merge! ","source_object dup "," data [] [] "," data [] "," data ","source_bucket [] [] ","source_bucket [] ","Excon Response  new ","Excon Response  new  status= ","Excon Response  new  body= ","source_object dup  [] "," data [] []  [] []= "," data [] []  [] ","source_object dup  merge! "," data [] []  [] [] "]}," Fog Storage Google Real copy_object":{"type":"method","name":"copy_object","children":[],"call":[" request ","CGI  escape ","Fog Parsers Storage Google CopyObject  new ","(pair\n  (str \"x-goog-copy-source\")\n  (dstr\n    (str \"/\")\n    (begin\n      (lvar :source_bucket_name))\n    (str \"/\")\n    (begin\n      (lvar :source_object_name)))) merge ","Fog Google  escape "]}," Fog Google SQL Mock update_instance":{"type":"method","name":"update_instance","children":[],"call":[" build_excon_response "," data [] [] []= ","Time  now iso8601 ","Time  now "," data [] [] "," data [] "," data "," random_operation "," data [] []= ","data [] []= ","options [] ","data [] ","data [] [] []= ","data [] [] "," Array ","data []= ","Fog Mock  not_implemented ","  data [] []  [] [] []= ","  data [] []  [] [] ","  data [] []  [] ","  data [] []  "," random_ random_operation  ","  data [] []  [] []= "," data [] []  [] []= "," data [] []  [] "," data [] []  [] [] []= "," data [] []  [] [] "," data [] []  []= "]}," Fog Google SQL Real update_instance":{"type":"method","name":"update_instance","children":[],"call":[" request ","body [] []= ","options [] ","body [] ","body [] [] []= ","body [] [] "," Array ","@sql instances update ","@sql instances ","@sql update_instance "," Google Apis SqladminV1beta4 DatabaseInstance  new ","settings settings_version= ","settings tier= "," Google Apis SqladminV1beta4 Settings  new "," Google Apis SqladminV1beta4 Settings  new   Google Apis SqladminV1beta4 Settings  new _version= "," Google Apis SqladminV1beta4 Settings  new  tier= "]}," Fog Google SQL Mock set_instance_root_password":{"type":"method","name":"set_instance_root_password","children":[],"call":[" build_excon_response "," data [] [] []= ","Time  now iso8601 ","Time  now "," data [] [] "," data [] "," data "," random_operation "," random_ random_operation  "]}," Fog Google SQL Real set_instance_root_password":{"type":"method","name":"set_instance_root_password","children":[],"call":[" request ","@sql instances set_root_password ","@sql instances "]}," Fog Google SQL Mock restore_instance_backup":{"type":"method","name":"restore_instance_backup","children":[],"call":["Fog Mock  not_implemented "]}," Fog Google SQL Real restore_instance_backup":{"type":"method","name":"restore_instance_backup","children":[],"call":[" request ","@sql instances reset_ssl_config ","@sql instances ","@sql restore_instance_backup "," Google Apis SqladminV1beta4 RestoreInstancesBackupRequest  new "," Google Apis SqladminV1beta4 RestoreBackupContext  new ","  Google Apis SqladminV1beta4 RestoreInstancesBackupRequest  new  "]}," Fog Google SQL Mock restart_instance":{"type":"method","name":"restart_instance","children":[],"call":[" build_excon_response "," data [] [] []= ","Time  now iso8601 ","Time  now "," data [] [] "," data [] "," data "," random_operation ","Fog Mock  not_implemented "," random_ random_operation  "]}," Fog Google SQL Real restart_instance":{"type":"method","name":"restart_instance","children":[],"call":[" request ","@sql instances restart ","@sql instances ","@sql restart_instance "]}," Fog Google SQL Mock reset_instance_ssl_config":{"type":"method","name":"reset_instance_ssl_config","children":[],"call":[" build_excon_response "," data [] [] []= ","Time  now iso8601 ","Time  now "," data [] [] "," data [] "," data "," random_operation ","Fog Mock  not_implemented "," random_ random_operation  "]}," Fog Google SQL Real reset_instance_ssl_config":{"type":"method","name":"reset_instance_ssl_config","children":[],"call":[" request ","@sql instances reset_ssl_config ","@sql instances ","@sql reset_instance_ssl_config "]}," Fog Google SQL Mock list_tiers":{"type":"method","name":"list_tiers","children":[],"call":[" build_excon_response ","Fog Mock  not_implemented "]}," Fog Google SQL Real list_tiers":{"type":"method","name":"list_tiers","children":[],"call":[" request ","@sql tiers list ","@sql tiers ","@sql list_tiers "]}," Fog Google SQL Mock list_ssl_certs":{"type":"method","name":"list_ssl_certs","children":[],"call":[" build_excon_response "," data [] [] values "," data [] [] "," data [] "," data "," data [] has_key? "," data [] key? ","Fog Mock  not_implemented "]}," Fog Google SQL Real list_ssl_certs":{"type":"method","name":"list_ssl_certs","children":[],"call":[" request ","@sql ssl_certs list ","@sql ssl_certs ","@sql list_ssl_certs "]}," Fog Google SQL Mock list_operations":{"type":"method","name":"list_operations","children":[],"call":[" build_excon_response "," data [] [] values "," data [] [] "," data [] "," data "," data [] has_key? "," data [] key? ","Fog Mock  not_implemented "]}," Fog Google SQL Real list_operations":{"type":"method","name":"list_operations","children":[],"call":[" request ","@sql operations list ","@sql operations ","@sql list_operations "]}," Fog Google SQL Mock list_instances":{"type":"method","name":"list_instances","children":[],"call":[" build_excon_response "," data [] values "," data [] "," data ","Fog Mock  not_implemented "]}," Fog Google SQL Real list_instances":{"type":"method","name":"list_instances","children":[],"call":[" request ","@sql instances list ","@sql instances ","@sql list_instances "]}," Fog Google SQL Mock list_flags":{"type":"method","name":"list_flags","children":[],"call":[" build_excon_response ","Fog Mock  not_implemented "]}," Fog Google SQL Real list_flags":{"type":"method","name":"list_flags","children":[],"call":[" request ","@sql flags list ","@sql flags ","@sql list_flags "]}," Fog Google SQL Mock list_backup_runs":{"type":"method","name":"list_backup_runs","children":[],"call":["Fog Mock  not_implemented "]}," Fog Google SQL Real list_backup_runs":{"type":"method","name":"list_backup_runs","children":[],"call":[" request ","@sql backup_runs list ","@sql backup_runs ","@sql list_backup_runs "]}," Fog Google SQL Mock insert_ssl_cert":{"type":"method","name":"insert_ssl_cert","children":[],"call":[" build_excon_response ","Time  now iso8601 ","Time  now ","Fog Mock  random_hex "," data [] [] []= "," data [] [] "," data [] "," data ","Fog Mock  random_numbers "," data [] has_key? "," data [] key? ","Fog Mock  not_implemented "]}," Fog Google SQL Real insert_ssl_cert":{"type":"method","name":"insert_ssl_cert","children":[],"call":[" request ","@sql ssl_certs insert ","@sql ssl_certs ","@sql insert_ssl_cert "," Google Apis SqladminV1beta4 InsertSslCertsRequest  new "]}," Fog Google SQL Mock insert_instance":{"type":"method","name":"insert_instance","children":[],"call":[" build_excon_response "," data [] [] []= ","Time  now iso8601 ","Time  now "," data [] [] "," data [] "," data "," random_operation "," data [] []= ","data [] [] []= ","options [] ","data [] [] ","data [] "," Array ","data [] []= ","Fog Mock  random_hex ","Fog Mock  random_base64 ","Fog Mock  not_implemented "," random_ random_operation  "]}," Fog Google SQL Real insert_instance":{"type":"method","name":"insert_instance","children":[],"call":[" request ","body [] []= ","options [] ","body [] ","body [] [] []= ","body [] [] "," Array ","body []= ","@sql instances insert ","@sql instances ","@sql insert_instance ","instance settings tier= ","instance settings ","instance settings= "," Google Apis SqladminV1beta4 Settings  new ","instance name= "," Google Apis SqladminV1beta4 DatabaseInstance  new ","@sql  Google Apis SqladminV1beta4 DatabaseInstance  new s insert ","@sql  Google Apis SqladminV1beta4 DatabaseInstance  new s ","@sql insert_ Google Apis SqladminV1beta4 DatabaseInstance  new  "," Google Apis SqladminV1beta4 DatabaseInstance  new  settings tier= "," Google Apis SqladminV1beta4 DatabaseInstance  new  settings "," Google Apis SqladminV1beta4 DatabaseInstance  new  settings= "," Google Apis SqladminV1beta4 DatabaseInstance  new  name= "]}," Fog Google SQL Mock import_instance":{"type":"method","name":"import_instance","children":[],"call":[" build_excon_response "," data [] [] []= ","Time  now iso8601 ","Time  now "," data [] [] "," data [] "," data "," random_operation ","Fog Mock  not_implemented "," random_ random_operation  "]}," Fog Google SQL Real import_instance":{"type":"method","name":"import_instance","children":[],"call":[" request ","options [] "," Array ","@sql instances import ","@sql instances ","@sql import_instance "," Google Apis SqladminV1beta4 ImportInstancesRequest  new "," Google Apis SqladminV1beta4 ImportContext  new ","data []= "," Google Apis SqladminV1beta4 ImportContext CsvImportOptions  new ","csv_import_options nil? ","import_user nil? ","file_type nil? ","database nil? "]}," Fog Google SQL Mock get_ssl_cert":{"type":"method","name":"get_ssl_cert","children":[],"call":[" build_excon_response "," data [] [] [] "," data [] [] "," data [] "," data "," data [] [] has_key? "," data [] has_key? "," data [] [] key? "," data [] key? ","Fog Mock  not_implemented "]}," Fog Google SQL Real get_ssl_cert":{"type":"method","name":"get_ssl_cert","children":[],"call":[" request ","@sql ssl_certs get ","@sql ssl_certs ","@sql get_ssl_cert "]}," Fog Google SQL Mock get_operation":{"type":"method","name":"get_operation","children":[],"call":[" build_excon_response "," data [] [] [] "," data [] [] "," data [] "," data "," data [] [] has_key? "," data [] has_key? "," data [] [] key? "," data [] key? ","Fog Mock  not_implemented "]}," Fog Google SQL Real get_operation":{"type":"method","name":"get_operation","children":[],"call":[" request ","@sql operations get ","@sql operations ","@sql get_operation "]}," Fog Google SQL Mock get_instance":{"type":"method","name":"get_instance","children":[],"call":[" build_excon_response "," data [] [] "," data [] "," data "," data [] has_key? "," data [] key? ","Fog Mock  not_implemented "]}," Fog Google SQL Real get_instance":{"type":"method","name":"get_instance","children":[],"call":[" request ","@sql instances get ","@sql instances ","@sql get_instance "]}," Fog Google SQL Mock get_backup_run":{"type":"method","name":"get_backup_run","children":[],"call":["Fog Mock  not_implemented "]}," Fog Google SQL Real get_backup_run":{"type":"method","name":"get_backup_run","children":[],"call":[" request ","@sql backup_runs get ","@sql backup_runs ","@sql get_backup_run "]}," Fog Google SQL Mock export_instance":{"type":"method","name":"export_instance","children":[],"call":[" build_excon_response "," data [] [] []= ","Time  now iso8601 ","Time  now "," data [] [] "," data [] "," data "," random_operation ","Fog Mock  not_implemented "," random_ random_operation  "]}," Fog Google SQL Real export_instance":{"type":"method","name":"export_instance","children":[],"call":[" request "," Array ","options [] ","@sql instances export ","@sql instances ","@sql export_instance "," Google Apis SqladminV1beta4 ExportInstancesRequest  new "," Google Apis SqladminV1beta4 ExportContext  new ","data []= "," Google Apis SqladminV1beta4 ExportContext SqlExportOptions  new ","sql_export_options nil? "," Google Apis SqladminV1beta4 ExportContext CsvExportOptions  new ","csv_export_options empty? ","file_type nil? "]}," Fog Google SQL Mock delete_ssl_cert":{"type":"method","name":"delete_ssl_cert","children":[],"call":[" build_excon_response "," data [] [] []= ","Time  now iso8601 ","Time  now "," data [] [] "," data [] "," data "," random_operation "," data [] [] delete "," data [] has_key? "," data [] key? ","Fog Mock  not_implemented "," random_ random_operation  "]}," Fog Google SQL Real delete_ssl_cert":{"type":"method","name":"delete_ssl_cert","children":[],"call":[" request ","@sql ssl_certs delete ","@sql ssl_certs ","@sql delete_ssl_cert "]}," Fog Google SQL Mock delete_instance":{"type":"method","name":"delete_instance","children":[],"call":[" build_excon_response "," data [] [] []= ","Time  now iso8601 ","Time  now "," data [] [] "," data [] "," data "," random_operation "," data [] delete "," data [] has_key? "," data [] key? ","Fog Mock  not_implemented "," random_ random_operation  "]}," Fog Google SQL Real delete_instance":{"type":"method","name":"delete_instance","children":[],"call":[" request ","@sql instances delete ","@sql instances ","@sql delete_instance "]}," Fog Google SQL Mock clone_instance":{"type":"method","name":"clone_instance","children":[],"call":[" build_excon_response "," data [] [] []= ","Time  now iso8601 ","Time  now "," data [] [] "," data [] "," data "," random_operation "," data [] []= ","Fog Mock  not_implemented "," random_ random_operation  "]}," Fog Google SQL Real clone_instance":{"type":"method","name":"clone_instance","children":[],"call":[" request ","body [] []= ","options [] ","body [] ","x id == ","x id ","@sql instances discovered_methods find ","@sql instances discovered_methods ","@sql instances ","@sql instances discovered_methods detect ","@sql clone_instance "," Google Apis SqladminV1beta4 CloneInstancesRequest  new "," Google Apis SqladminV1beta4 CloneContext  new ","context []= "," Google Apis SqladminV1beta4 BinLogCoordinates  new ","log_position nil? ","log_filename nil? "]}," Fog Google Monitoring Mock list_timeseries_descriptors":{"type":"method","name":"list_timeseries_descriptors","children":[],"call":[" build_excon_response ","Fog Mock  random_hex ","Fog Mock  random_numbers to_s ","Fog Mock  random_numbers "]}," Fog Google Monitoring Real list_timeseries_descriptors":{"type":"method","name":"list_timeseries_descriptors","children":[],"call":[" request ","parameters []= ","options [] ","options key? ","@monitoring timeseries_descriptors list ","@monitoring timeseries_descriptors "]}," Fog Google Monitoring Mock list_timeseries":{"type":"method","name":"list_timeseries","children":[],"call":[" build_excon_response ","Fog Mock  random_hex ","Fog Mock  random_numbers to_s ","Fog Mock  random_numbers ","Fog Mock  not_implemented "]}," Fog Google Monitoring Real list_timeseries":{"type":"method","name":"list_timeseries","children":[],"call":[" request ","parameters []= ","options [] ","options key? ","@monitoring timeseries list ","@monitoring timeseries "," raise ","ArgumentError  new ","parameters key? ","aggregation [] ","aggregation key? ","interval [] ","interval key? ","@monitoring projects time_series list ","@monitoring projects time_series ","@monitoring projects ","@monitoring list_project_time_series ","options []= ","(str \"aggregation_\") to_sym ","(sym :alignment_period) each ","aggregation nil? "," parameters []= "," parameters ","interval nil? ","filter nil? ","options []  [] ","options []  key? ","(str \"options [] _\") to_sym ","options []  nil? "]}," Fog Google Monitoring Mock list_metric_descriptors":{"type":"method","name":"list_metric_descriptors","children":[],"call":[" build_excon_response "," raise "]}," Fog Google Monitoring Real list_metric_descriptors":{"type":"method","name":"list_metric_descriptors","children":[],"call":[" request ","parameters []= ","options [] ","options key? ","@monitoring metric_descriptors list ","@monitoring metric_descriptors "," puts ","@monitoring projects metric_descriptors list ","@monitoring projects metric_descriptors ","@monitoring projects ","@monitoring list_project_metric_descriptors "]}," Fog DNS Google Mock list_resource_record_sets":{"type":"method","name":"list_resource_record_sets","children":[],"call":[" build_excon_response ","rrset [] != ","options [] ","rrset [] ","rrsets delete_if ","options has_key? "," data [] [] ","zone [] "," data [] "," data "," raise ","zone []= "," data [] values find "," data [] values "," data [] has_key? ","options key? ","z []= "," data [] values detect "," data [] key? ","Fog Mock  not_implemented "," data [] []  delete_if "," data [] []  [] "," data [] []  []= "]}," Fog DNS Google Real list_resource_record_sets":{"type":"method","name":"list_resource_record_sets","children":[],"call":[" request ","parameters []= ","options [] ","(send\n  (array\n    (sym :name)\n    (sym :type)) :reject) each ","options [] nil? ","(sym :name) reject ","@dns resource_record_sets list ","@dns resource_record_sets ","@dns list_resource_record_sets "]}," Fog DNS Google Mock list_managed_zones":{"type":"method","name":"list_managed_zones","children":[],"call":[" build_excon_response "," data [] values "," data [] "," data ","Fog Mock  not_implemented "]}," Fog DNS Google Real list_managed_zones":{"type":"method","name":"list_managed_zones","children":[],"call":[" request ","@dns managed_zones list ","@dns managed_zones ","@dns list_managed_zones "]}," Fog DNS Google Mock list_changes":{"type":"method","name":"list_changes","children":[],"call":[" build_excon_response "," data [] [] ","zone [] "," data [] "," data "," raise ","zone [] == "," data [] values find "," data [] values "," data [] has_key? ","z [] == ","z [] "," data [] values detect "," data [] key? ","Fog Mock  not_implemented "," data [] []  [] "," data [] []  [] == "]}," Fog DNS Google Real list_changes":{"type":"method","name":"list_changes","children":[],"call":[" request ","@dns changes list ","@dns changes ","@dns list_changes "]}," Fog DNS Google Mock get_project":{"type":"method","name":"get_project","children":[],"call":[" build_excon_response ","Fog Mock  random_numbers to_s ","Fog Mock  random_numbers ","Fog Mock  not_implemented "]}," Fog DNS Google Real get_project":{"type":"method","name":"get_project","children":[],"call":[" request ","@dns projects get ","@dns projects ","@dns get_project "]}," Fog DNS Google Mock get_managed_zone":{"type":"method","name":"get_managed_zone","children":[],"call":[" build_excon_response "," raise ","zone []= "," data [] values find "," data [] values "," data [] "," data "," data [] [] "," data [] has_key? "," data [] values detect "," data [] key? ","Fog Mock  not_implemented ","  data [] []  [] values find ","  data [] []  [] values ","  data [] []  [] ","  data [] []  ","  data [] []  [] [] ","  data [] []  [] has_key? ","  data [] []  [] values detect ","  data [] []  [] key? "]}," Fog DNS Google Real get_managed_zone":{"type":"method","name":"get_managed_zone","children":[],"call":[" request ","@dns managed_zones get ","@dns managed_zones ","@dns get_managed_zone "]}," Fog DNS Google Mock get_change":{"type":"method","name":"get_change","children":[],"call":[" build_excon_response "," raise ","c [] == ","c [] "," data [] [] find "," data [] [] ","zone [] "," data [] "," data ","zone []= "," data [] values find "," data [] values "," data [] has_key? "," data [] [] detect ","z []= "," data [] values detect "," data [] key? ","Fog Mock  not_implemented "," data [] []  [] "," data [] []  []= "]}," Fog DNS Google Real get_change":{"type":"method","name":"get_change","children":[],"call":[" request ","@dns changes get ","@dns changes ","@dns get_change "]}," Fog DNS Google Mock delete_managed_zone":{"type":"method","name":"delete_managed_zone","children":[],"call":[" build_excon_response "," raise "," data [] delete ","zone [] "," data [] "," data ","zone []= "," data [] values find "," data [] values "," data [] has_key? ","z []= "," data [] values detect "," data [] key? ","Fog Mock  not_implemented "]}," Fog DNS Google Real delete_managed_zone":{"type":"method","name":"delete_managed_zone","children":[],"call":[" request ","@dns managed_zones delete ","@dns managed_zones ","@dns delete_managed_zone "]}," Fog DNS Google Mock create_managed_zone":{"type":"method","name":"create_managed_zone","children":[],"call":[" build_excon_response "," data [] []= "," data [] [] "," data [] "," data ","DateTime  now strftime ","DateTime  now ","Fog Mock  random_numbers to_s ","Fog Mock  random_numbers ","Fog Mock  not_implemented "]}," Fog DNS Google Real create_managed_zone":{"type":"method","name":"create_managed_zone","children":[],"call":[" request ","@dns managed_zones create ","@dns managed_zones ","@dns create_managed_zone ","mngd_zone description= ","mngd_zone dns_name= ","mngd_zone name= "," Google Apis DnsV1 ManagedZone  new "," Google Apis DnsV1 ManagedZone  new  description= "," Google Apis DnsV1 ManagedZone  new  dns_name= "," Google Apis DnsV1 ManagedZone  new  name= "]}," Fog DNS Google Mock create_change":{"type":"method","name":"create_change","children":[],"call":[" build_excon_response "," data [] [] << "," data [] [] ","zone [] "," data [] "," data ","DateTime  now strftime ","DateTime  now ","(send\n  (send\n    (lvar :id) :to_i) :+\n  (int 1)) to_s ","id to_i + ","id to_i ","(send\n  (send\n    (send\n      (send\n        (self) :data) :[]\n      (sym :changes)) :[]\n    (send\n      (lvar :zone) :[]\n      (str \"id\"))) :max_by) [] ","c [] "," data [] [] max_by ","additions each "," raise ","del [] ","r [] == ","r [] "," data [] [] reject! ","deletions each ","zone []= "," data [] values find "," data [] values "," data [] has_key? ","(send\n  (send\n    (send\n      (send nil :data) :[]\n      (sym :changes)) :[]\n    (send\n      (lvar :zone) :[]\n      (str \"id\"))) :max_by) [] ","z []= "," data [] values detect "," data [] key? ","Fog Mock  not_implemented "," data [] []  [] ","(send\n  (send\n    (lvar :(send\n  (send\n    (send\n      (send\n        (self) :data) :[]\n      (sym :changes)) :[]\n    (send\n      (lvar :zone) :[]\n      (str \"id\"))) :max_by) [] ) :to_i) :+\n  (int 1)) to_s ","(send\n  (send\n    (lvar :(send\n  (send\n    (send\n      (send nil :data) :[]\n      (sym :changes)) :[]\n    (send\n      (lvar :zone) :[]\n      (str \"id\"))) :max_by) [] ) :to_i) :+\n  (int 1)) to_s ","(send\n  (send\n    (send\n      (send\n        (self) :data) :[]\n      (sym :changes)) :[]\n    (send\n      (lvar :zone) :[]\n      (str \"id\"))) :max_by) []  to_i + ","(send\n  (send\n    (send\n      (send nil :data) :[]\n      (sym :changes)) :[]\n    (send\n      (lvar :zone) :[]\n      (str \"id\"))) :max_by) []  to_i + ","(send\n  (send\n    (send\n      (send\n        (self) :data) :[]\n      (sym :changes)) :[]\n    (send\n      (lvar :zone) :[]\n      (str \"id\"))) :max_by) []  to_i ","(send\n  (send\n    (send\n      (send nil :data) :[]\n      (sym :changes)) :[]\n    (send\n      (lvar :zone) :[]\n      (str \"id\"))) :max_by) []  to_i ","(send\n  (send\n    (send\n      (send\n        (self) :data) :[]\n      (sym :changes)) :[]\n    (send\n      (lvar :zone) :[]\n      (str \"(send\n  (send\n    (send\n      (send\n        (self) :data) :[]\n      (sym :changes)) :[]\n    (send\n      (lvar :zone) :[]\n      (str \"id\"))) :max_by) [] \"))) :max_by) [] ","(send\n  (send\n    (send\n      (send\n        (self) :data) :[]\n      (sym :changes)) :[]\n    (send\n      (lvar :zone) :[]\n      (str \"(send\n  (send\n    (send\n      (send nil :data) :[]\n      (sym :changes)) :[]\n    (send\n      (lvar :zone) :[]\n      (str \"id\"))) :max_by) [] \"))) :max_by) [] ","(send\n  (send\n    (send\n      (send\n        (self) :data) :[]\n      (sym :changes)) :[]\n    (send\n      (lvar : data [] [] ) :[]\n      (str \"id\"))) :max_by) [] "," data [] []  []= ","(send\n  (send\n    (send\n      (send nil :data) :[]\n      (sym :changes)) :[]\n    (send\n      (lvar :zone) :[]\n      (str \"(send\n  (send\n    (send\n      (send\n        (self) :data) :[]\n      (sym :changes)) :[]\n    (send\n      (lvar :zone) :[]\n      (str \"id\"))) :max_by) [] \"))) :max_by) [] ","(send\n  (send\n    (send\n      (send nil :data) :[]\n      (sym :changes)) :[]\n    (send\n      (lvar :zone) :[]\n      (str \"(send\n  (send\n    (send\n      (send nil :data) :[]\n      (sym :changes)) :[]\n    (send\n      (lvar :zone) :[]\n      (str \"id\"))) :max_by) [] \"))) :max_by) [] ","(send\n  (send\n    (send\n      (send nil :data) :[]\n      (sym :changes)) :[]\n    (send\n      (lvar : data [] [] ) :[]\n      (str \"id\"))) :max_by) [] "]}," Fog DNS Google Real create_change":{"type":"method","name":"create_change","children":[],"call":[" request ","@dns changes create ","@dns changes ","@dns create_change "," Google Apis DnsV1 Change  new "]}," Fog Compute Google Real validate_url_map":{"type":"method","name":"validate_url_map","children":[],"call":[" request ","url_map name ","@compute url_maps validate ","@compute url_maps ","@compute validate_url_map "," Google Apis ComputeV1 ValidateUrlMapsRequest  new "," Google Apis ComputeV1 UrlMap  new "]}," Fog Compute Google Mock validate_url_map":{"type":"method","name":"validate_url_map","children":[],"call":["Fog Mock  not_implemented "]}," Fog Compute Google Real update_url_map":{"type":"method","name":"update_url_map","children":[],"call":[" request ","url_map pathMatchers= ","url_map pathMatchers concat ","url_map pathMatchers ","url_map hostRules= ","url_map hostRules concat ","url_map hostRules ","url_map name ","@compute url_maps update ","@compute url_maps ","@compute update_url_map "," Google Apis ComputeV1 UrlMap  new ","url_map merge ","url_map []= ","url_map [] "]}," Fog Compute Google Mock update_url_map":{"type":"method","name":"update_url_map","children":[],"call":["Fog Mock  not_implemented "]}," Fog Compute Google Real stop_server":{"type":"method","name":"stop_server","children":[],"call":[" request ","@compute instances stop ","@compute instances ","@compute stop_instance ","zone split [] ","zone split "]}," Fog Compute Google Mock stop_server":{"type":"method","name":"stop_server","children":[],"call":["Fog Mock  not_implemented "]}," Fog Compute Google Real start_server":{"type":"method","name":"start_server","children":[],"call":[" request ","@compute instances start ","@compute instances ","@compute start_instance ","zone split [] ","zone split "]}," Fog Compute Google Mock start_server":{"type":"method","name":"start_server","children":[],"call":["Fog Mock  not_implemented "]}," Fog Compute Google Real set_target_http_proxy_url_map":{"type":"method","name":"set_target_http_proxy_url_map","children":[],"call":[" request ","url_map self_link ","url_map class == ","url_map class ","target_http_proxy name ","@compute target_http_proxies set_url_map ","@compute target_http_proxies ","@compute set_target_http_proxy_url_map "," Google Apis ComputeV1 UrlMapReference  new ","url_map self_link  self_link ","url_map self_link  class == ","url_map self_link  class ","@compute target_http_proxies set_url_map self_link  ","@compute set_target_http_proxy_url_map self_link  "]}," Fog Compute Google Mock set_target_http_proxy_url_map":{"type":"method","name":"set_target_http_proxy_url_map","children":[],"call":["Fog Mock  not_implemented "]}," Fog Compute Google Real set_tags":{"type":"method","name":"set_tags","children":[],"call":[" request ","@compute instances set_tags ","@compute instances "]}," Fog Compute Google Mock set_tags":{"type":"method","name":"set_tags","children":[],"call":["Fog Mock  not_implemented "]}," Fog Compute Google Real set_server_scheduling":{"type":"method","name":"set_server_scheduling","children":[],"call":[" request ","zone split [] ","zone split ","@compute instances set_scheduling ","@compute instances ","@compute set_instance_scheduling ","scheduling preemptible= ","preemptible nil? ","scheduling automatic_restart= ","automatic_restart nil? ","scheduling on_host_maintenance= ","on_host_maintenance nil? "," Google Apis ComputeV1 Scheduling  new ","zone split []  split [] ","zone split []  split ","@compute instances set_ Google Apis ComputeV1 Scheduling  new  ","@compute set_instance_ Google Apis ComputeV1 Scheduling  new  "," Google Apis ComputeV1 Scheduling  new  preemptible= "," Google Apis ComputeV1 Scheduling  new  automatic_restart= "," Google Apis ComputeV1 Scheduling  new  on_host_maintenance= "]}," Fog Compute Google Mock set_server_scheduling":{"type":"method","name":"set_server_scheduling","children":[],"call":["Fog Mock  not_implemented "]}," Fog Compute Google Real set_server_disk_auto_delete":{"type":"method","name":"set_server_disk_auto_delete","children":[],"call":[" request ","zone split [] ","zone split ","@compute instances set_disk_auto_delete ","@compute instances ","@compute set_disk_auto_delete "]}," Fog Compute Google Mock set_server_disk_auto_delete":{"type":"method","name":"set_server_disk_auto_delete","children":[],"call":["Fog Mock  not_implemented "]}," Fog Compute Google Real set_metadata":{"type":"method","name":"set_metadata","children":[],"call":[" request ","pair [] ","metadata to_a map ","metadata to_a ","@compute instances set_metadata ","@compute instances "]}," Fog Compute Google Mock set_metadata":{"type":"method","name":"set_metadata","children":[],"call":["Fog Mock  not_implemented "]}," Fog Compute Google Real set_global_forwarding_rule_target":{"type":"method","name":"set_global_forwarding_rule_target","children":[],"call":[" request ","rule name ","@compute global_forwarding_rules set_target ","@compute global_forwarding_rules ","@compute set_global_forwarding_rule_target "," Google Apis ComputeV1 TargetReference  new "]}," Fog Compute Google Mock set_global_forwarding_rule_target":{"type":"method","name":"set_global_forwarding_rule_target","children":[],"call":["Fog Mock  not_implemented "]}," Fog Compute Google Real set_forwarding_rule_target":{"type":"method","name":"set_forwarding_rule_target","children":[],"call":[" request ","rule region split [] ","rule region split ","rule region ","rule name ","@compute forwarding_rules set_target ","@compute forwarding_rules ","@compute set_forwarding_rule_target "," Google Apis ComputeV1 TargetReference  new ","region split [] ","region split ","region start_with? ","rule region split []  split [] ","rule region split []  split ","rule region split []  ","region split []  split [] ","region split []  split ","region split []  start_with? "]}," Fog Compute Google Mock set_forwarding_rule_target":{"type":"method","name":"set_forwarding_rule_target","children":[],"call":["Fog Mock  not_implemented "]}," Fog Compute Google Real set_common_instance_metadata":{"type":"method","name":"set_common_instance_metadata","children":[],"call":[" request ","pair [] "," Array map "," Array ","@compute projects set_common_instance_metadata ","@compute projects ","@compute set_common_instance_metadata "," Google Apis ComputeV1 Metadata  new ","metadata map "]}," Fog Compute Google Mock set_common_instance_metadata":{"type":"method","name":"set_common_instance_metadata","children":[],"call":["Fog Mock  not_implemented "]}," Fog Compute Google Real reset_server":{"type":"method","name":"reset_server","children":[],"call":[" request ","zone split [] ","zone split ","@compute instances reset ","@compute instances ","@compute reset_instance "]}," Fog Compute Google Mock reset_server":{"type":"method","name":"reset_server","children":[],"call":["Fog Mock  not_implemented "]}," Fog Compute Google Real remove_target_pool_instances":{"type":"method","name":"remove_target_pool_instances","children":[],"call":[" request ","instances map ","target_pool region split [] ","target_pool region split ","target_pool region ","target_pool name ","@compute target_pools remove_instance ","@compute target_pools ","@compute remove_target_pool_instance "," Google Apis ComputeV1 RemoveTargetPoolsInstanceRequest  new ","region split [] ","region split "," Google Apis ComputeV1 InstanceReference  new "]}," Fog Compute Google Mock remove_target_pool_instances":{"type":"method","name":"remove_target_pool_instances","children":[],"call":["Fog Mock  not_implemented "]}," Fog Compute Google Real remove_target_pool_health_checks":{"type":"method","name":"remove_target_pool_health_checks","children":[],"call":[" request ","health_checks map ","target_pool region split [] ","target_pool region split ","target_pool region ","target_pool name ","@compute target_pools remove_health_check ","@compute target_pools ","@compute remove_target_pool_health_check "," Google Apis ComputeV1 RemoveTargetPoolsHealthCheckRequest  new ","region split [] ","region split "," Google Apis ComputeV1 HealthCheckReference  new "]}," Fog Compute Google Mock remove_target_pool_health_checks":{"type":"method","name":"remove_target_pool_health_checks","children":[],"call":["Fog Mock  not_implemented "]}," Fog Compute Google Real list_zones":{"type":"method","name":"list_zones","children":[],"call":[" request ","@compute zones list ","@compute zones ","@compute list_zones "]}," Fog Compute Google Mock list_zones":{"type":"method","name":"list_zones","children":[],"call":[" build_excon_response "," api_version "," data [] values "," data [] "," data ","Fog Mock  not_implemented "]}," Fog Compute Google Real list_zone_views":{"type":"method","name":"list_zone_views","children":[],"call":[" request ","@resourceviews zone_views list ","@resourceviews zone_views "]}," Fog Compute Google Mock list_zone_views":{"type":"method","name":"list_zone_views","children":[],"call":["Fog Mock  not_implemented "]}," Fog Compute Google Real list_zone_view_resources":{"type":"method","name":"list_zone_view_resources","children":[],"call":[" request ","zone_view name ","zone_view zone ","@resourceviews zone_views list_resources ","@resourceviews zone_views "]}," Fog Compute Google Mock list_zone_view_resources":{"type":"method","name":"list_zone_view_resources","children":[],"call":["Fog Mock  not_implemented "]}," Fog Compute Google Real list_zone_operations":{"type":"method","name":"list_zone_operations","children":[],"call":[" request ","@compute zone_operations list ","@compute zone_operations ","@compute list_zone_operations ","zone split [] ","zone split ","zone start_with? ","@compute zone split [] _operations list ","@compute zone split [] _operations ","@compute list_zone split [] _operations ","zone split []  split [] ","zone split []  split ","zone split []  start_with? "]}," Fog Compute Google Mock list_zone_operations":{"type":"method","name":"list_zone_operations","children":[],"call":["Fog Mock  not_implemented "]}," Fog Compute Google Real list_url_maps":{"type":"method","name":"list_url_maps","children":[],"call":[" request ","@compute url_maps list ","@compute url_maps ","@compute list_url_maps "]}," Fog Compute Google Mock list_url_maps":{"type":"method","name":"list_url_maps","children":[],"call":[" build_excon_response "," api_version "," data [] values "," data [] "," data ","Fog Mock  not_implemented "]}," Fog Compute Google Real list_target_pools":{"type":"method","name":"list_target_pools","children":[],"call":[" request ","@compute target_pools list ","@compute target_pools ","@compute list_target_pools ","region split [] ","region split "]}," Fog Compute Google Mock list_target_pools":{"type":"method","name":"list_target_pools","children":[],"call":[" build_excon_response "," api_version ","d [] split [] == ","d [] split [] ","d [] split ","d [] "," data [] values select "," data [] values "," data [] "," data ","Fog Mock  not_implemented "]}," Fog Compute Google Real list_target_instances":{"type":"method","name":"list_target_instances","children":[],"call":[" request ","@compute target_instances list ","@compute target_instances ","@compute list_target_instances ","zone split [] ","zone split ","zone start_with? ","zone split []  split [] ","zone split []  split ","zone split []  start_with? "]}," Fog Compute Google Mock list_target_instances":{"type":"method","name":"list_target_instances","children":[],"call":[" build_excon_response "," api_version ","s [] == ","s [] "," data [] values select "," data [] values "," data [] "," data "," data [] [] ","Fog Mock  not_implemented "]}," Fog Compute Google Real list_target_http_proxies":{"type":"method","name":"list_target_http_proxies","children":[],"call":[" request ","@compute target_http_proxies list ","@compute target_http_proxies ","@compute list_target_http_proxies "]}," Fog Compute Google Mock list_target_http_proxies":{"type":"method","name":"list_target_http_proxies","children":[],"call":[" build_excon_response "," api_version "," data [] values "," data [] "," data ","Fog Mock  not_implemented "]}," Fog Compute Google Real list_snapshots":{"type":"method","name":"list_snapshots","children":[],"call":[" request ","project nil? ","@compute snapshots list ","@compute snapshots ","@compute list_snapshots "]}," Fog Compute Google Mock list_snapshots":{"type":"method","name":"list_snapshots","children":[],"call":["Fog Mock  not_implemented "]}," Fog Compute Google Real list_servers":{"type":"method","name":"list_servers","children":[],"call":[" request ","@compute instances list ","@compute instances ","@compute list_instances ","zone split [] ","zone split "]}," Fog Compute Google Mock list_servers":{"type":"method","name":"list_servers","children":[],"call":[" build_excon_response "," api_version ","s [] == ","zone [] ","s [] "," data [] values select "," data [] values "," data [] "," data "," data [] [] "," get_zone ","Fog Mock  not_implemented "," data [] []  [] "," get_ data [] []  "]}," Fog Compute Google Real list_routes":{"type":"method","name":"list_routes","children":[],"call":[" request ","@compute routes list ","@compute routes ","@compute list_routes "]}," Fog Compute Google Mock list_routes":{"type":"method","name":"list_routes","children":[],"call":["Fog Mock  not_implemented "]}," Fog Compute Google Real list_regions":{"type":"method","name":"list_regions","children":[],"call":[" request ","@compute regions list ","@compute regions ","@compute list_regions "]}," Fog Compute Google Mock list_regions":{"type":"method","name":"list_regions","children":[],"call":[" build_excon_response ","Fog Mock  not_implemented "]}," Fog Compute Google Real list_region_views":{"type":"method","name":"list_region_views","children":[],"call":[" request ","@resourceviews region_views list ","@resourceviews region_views "]}," Fog Compute Google Mock list_region_views":{"type":"method","name":"list_region_views","children":[],"call":["Fog Mock  not_implemented "]}," Fog Compute Google Real list_region_view_resources":{"type":"method","name":"list_region_view_resources","children":[],"call":[" request ","region_view name ","region_view region ","@resourceviews region_views list_resources ","@resourceviews region_views "]}," Fog Compute Google Mock list_region_view_resources":{"type":"method","name":"list_region_view_resources","children":[],"call":["Fog Mock  not_implemented "]}," Fog Compute Google Real list_region_operations":{"type":"method","name":"list_region_operations","children":[],"call":[" request ","@compute region_operations list ","@compute region_operations ","@compute list_region_operations ","region split [] ","region split ","region start_with? ","@compute region split [] _operations list ","@compute region split [] _operations ","@compute list_region split [] _operations ","region split []  split [] ","region split []  split ","region split []  start_with? "]}," Fog Compute Google Mock list_region_operations":{"type":"method","name":"list_region_operations","children":[],"call":["Fog Mock  not_implemented "]}," Fog Compute Google Real list_networks":{"type":"method","name":"list_networks","children":[],"call":[" request ","@compute networks list ","@compute networks ","@compute list_networks "]}," Fog Compute Google Mock list_networks":{"type":"method","name":"list_networks","children":[],"call":["Fog Mock  not_implemented "]}," Fog Compute Google Real list_machine_types":{"type":"method","name":"list_machine_types","children":[],"call":[" request ","@compute machine_types list ","@compute machine_types ","@compute list_machine_types ","zone split [] ","zone split ","zone start_with? ","zone split []  split [] ","zone split []  split ","zone split []  start_with? "]}," Fog Compute Google Mock list_machine_types":{"type":"method","name":"list_machine_types","children":[],"call":[" build_excon_response "," api_version "," data [] [] values "," data [] [] "," data [] "," data "," get_zone ","Fog Mock  not_implemented "]}," Fog Compute Google Real list_images":{"type":"method","name":"list_images","children":[],"call":[" request ","project nil? ","@compute images list ","@compute images ","@compute list_images "]}," Fog Compute Google Mock list_images":{"type":"method","name":"list_images","children":[],"call":[" build_excon_response "," api_version "," data [] values "," data [] "," data ","Fog Mock  not_implemented "]}," Fog Compute Google Real list_http_health_checks":{"type":"method","name":"list_http_health_checks","children":[],"call":[" request ","@compute http_health_checks list ","@compute http_health_checks ","@compute list_http_health_checks "]}," Fog Compute Google Mock list_http_health_checks":{"type":"method","name":"list_http_health_checks","children":[],"call":[" build_excon_response "," api_version "," data [] values "," data [] "," data ","Fog Mock  not_implemented "]}," Fog Compute Google Real list_global_operations":{"type":"method","name":"list_global_operations","children":[],"call":[" request ","@compute global_operations list ","@compute global_operations ","@compute list_global_operations "]}," Fog Compute Google Mock list_global_operations":{"type":"method","name":"list_global_operations","children":[],"call":["Fog Mock  not_implemented "]}," Fog Compute Google Real list_global_forwarding_rules":{"type":"method","name":"list_global_forwarding_rules","children":[],"call":[" request ","@compute global_forwarding_rules list ","@compute global_forwarding_rules ","@compute list_global_forwarding_rules "]}," Fog Compute Google Mock list_global_forwarding_rules":{"type":"method","name":"list_global_forwarding_rules","children":[],"call":[" build_excon_response "," api_version "," data [] values "," data [] "," data ","Fog Mock  not_implemented "]}," Fog Compute Google Real list_forwarding_rules":{"type":"method","name":"list_forwarding_rules","children":[],"call":[" request ","@compute forwarding_rules list ","@compute forwarding_rules ","@compute list_forwarding_rules "]}," Fog Compute Google Mock list_forwarding_rules":{"type":"method","name":"list_forwarding_rules","children":[],"call":[" build_excon_response "," api_version ","d [] split [] == ","d [] split [] ","d [] split ","d [] "," data [] values select "," data [] values "," data [] "," data ","Fog Mock  not_implemented "]}," Fog Compute Google Real list_firewalls":{"type":"method","name":"list_firewalls","children":[],"call":[" request ","@compute firewalls list ","@compute firewalls ","@compute list_firewalls "]}," Fog Compute Google Mock list_firewalls":{"type":"method","name":"list_firewalls","children":[],"call":["Fog Mock  not_implemented "]}," Fog Compute Google Real list_disks":{"type":"method","name":"list_disks","children":[],"call":[" request ","@compute disks list ","@compute disks ","@compute list_disks "]}," Fog Compute Google Mock list_disks":{"type":"method","name":"list_disks","children":[],"call":[" build_excon_response "," api_version ","d [] split [] == ","d [] split [] ","d [] split ","d [] "," data [] values select "," data [] values "," data [] "," data ","Fog Mock  not_implemented "]}," Fog Compute Google Real list_disk_types":{"type":"method","name":"list_disk_types","children":[],"call":[" request ","zone split [] ","zone split ","@compute disk_types list ","@compute disk_types ","@compute list_disk_types "]}," Fog Compute Google Mock list_disk_types":{"type":"method","name":"list_disk_types","children":[],"call":[" build_excon_response "," api_version ","Fog Mock  not_implemented "]}," Fog Compute Google Real list_backend_services":{"type":"method","name":"list_backend_services","children":[],"call":[" request ","@compute backend_services list ","@compute backend_services ","@compute list_backend_services "]}," Fog Compute Google Mock list_backend_services":{"type":"method","name":"list_backend_services","children":[],"call":[" build_excon_response "," api_version "," data [] values "," data [] "," data "]}," Fog Compute Google Real list_aggregated_servers":{"type":"method","name":"list_aggregated_servers","children":[],"call":[" request ","parameters []= ","options [] ","@compute instances aggregated_list ","@compute instances ","@compute list_aggregated_instances "]}," Fog Compute Google Mock list_aggregated_servers":{"type":"method","name":"list_aggregated_servers","children":[],"call":[" build_excon_response "," api_version ","zones [] [] concat ","zones [] [] ","zones [] ","server [] split [] ","server [] split ","server [] "," data [] values each "," data [] values "," data [] "," data "," data [] [] ","options [] gsub ","options [] ","Hash  [] "," data [] values map ","Fog Mock  not_implemented ","Hash  []  [] [] concat ","Hash  []  [] [] ","Hash  []  [] "," data [] []  [] split [] "," data [] []  [] split "," data [] []  [] "]}," Fog Compute Google Real list_aggregated_machine_types":{"type":"method","name":"list_aggregated_machine_types","children":[],"call":[" request ","@compute machine_types aggregated_list ","@compute machine_types ","@compute list_aggregated_machine_types "]}," Fog Compute Google Mock list_aggregated_machine_types":{"type":"method","name":"list_aggregated_machine_types","children":[],"call":["Fog Mock  not_implemented "]}," Fog Compute Google Real list_aggregated_disks":{"type":"method","name":"list_aggregated_disks","children":[],"call":[" request ","parameters []= ","options [] ","@compute disks aggregated_list ","@compute disks ","@compute list_aggregated_disk "]}," Fog Compute Google Mock list_aggregated_disks":{"type":"method","name":"list_aggregated_disks","children":[],"call":[" build_excon_response "," api_version ","zones [] [] concat ","zones [] [] ","zones [] ","disk [] split [] ","disk [] split ","disk [] "," data [] values each "," data [] values "," data [] "," data "," data [] [] ","options [] gsub ","options [] ","Hash  [] "," data [] values map ","Fog Mock  not_implemented ","Hash  []  [] [] concat ","Hash  []  [] [] ","Hash  []  [] "," data [] []  [] split [] "," data [] []  [] split "," data [] []  [] "]}," Fog Compute Google Real list_aggregated_disk_types":{"type":"method","name":"list_aggregated_disk_types","children":[],"call":[" request ","parameters []= ","options [] ","@compute disk_types aggregated_list ","@compute disk_types ","@compute list_aggregated_disk_types "]}," Fog Compute Google Mock list_aggregated_disk_types":{"type":"method","name":"list_aggregated_disk_types","children":[],"call":[" build_excon_response "," api_version ","disk_types_items []= "," list_disk_types body [] "," list_disk_types body "," list_disk_types "," data [] keys each "," data [] keys "," data [] "," data ","disk_types empty? ","dt [] == ","dt [] "," list_disk_types body [] select ","options [] gsub ","options [] ","Fog Mock  not_implemented "," list_disk_types body [] _items []= ","options [] gsub s_items []= "," list_ list_disk_types body []  body [] "," list_options [] gsub s body [] "," list_ list_disk_types body []  body "," list_options [] gsub s body "," list_ list_disk_types body []  "," list_options [] gsub s "," list_disk_types body []  empty? ","options [] gsub s empty? "," list_ list_disk_types body []  body [] select "," list_options [] gsub s body [] select "]}," Fog Compute Google Real list_aggregated_addresses":{"type":"method","name":"list_aggregated_addresses","children":[],"call":[" request ","parameters []= ","options [] ","@compute addresses aggregated_list ","@compute addresses ","@compute list_aggregated_addresses "]}," Fog Compute Google Mock list_aggregated_addresses":{"type":"method","name":"list_aggregated_addresses","children":[],"call":["Fog Mock  not_implemented "]}," Fog Compute Google Real list_addresses":{"type":"method","name":"list_addresses","children":[],"call":[" request ","@compute addresses list ","@compute addresses ","@compute list_addresses "]}," Fog Compute Google Mock list_addresses":{"type":"method","name":"list_addresses","children":[],"call":["Fog Mock  not_implemented "]}," Fog Compute Google Real insert_zone_view":{"type":"method","name":"insert_zone_view","children":[],"call":[" request ","body_object merge! ","@resourceviews zone_views insert ","@resourceviews zone_views "]}," Fog Compute Google Mock insert_zone_view":{"type":"method","name":"insert_zone_view","children":[],"call":["Fog Mock  not_implemented "]}," Fog Compute Google Real insert_url_map":{"type":"method","name":"insert_url_map","children":[],"call":[" request ","body_object merge! ","@compute url_maps insert ","@compute url_maps ","@compute insert_url_map "," Google Apis ComputeV1 UrlMap  new ","url_map merge ","url_map []= ","url_map [] ","(op-asgn\n  (lvasgn :retries) :+\n  (int 1)) < "," sleep ","Fog Logger  warning "]}," Fog Compute Google Mock insert_url_map":{"type":"method","name":"insert_url_map","children":[],"call":[" build_excon_response "," data [] [] "," data [] "," data "," data [] []= "," api_version ","Time  now iso8601 ","Time  now ","Fog Mock  random_numbers to_s ","Fog Mock  random_numbers "," random_operation ","opts [] ","Fog Mock  not_implemented "," random_ random_operation  "]}," Fog Compute Google Real insert_target_pool":{"type":"method","name":"insert_target_pool","children":[],"call":[" request ","body_object merge! ","@compute target_pools insert ","@compute target_pools ","@compute insert_target_pool ","region split [] ","region split "," Google Apis ComputeV1 TargetPool  new ","target_pool merge "]}," Fog Compute Google Mock insert_target_pool":{"type":"method","name":"insert_target_pool","children":[],"call":[" build_excon_response "," data [] [] "," data [] "," data "," data [] []= "," api_version ","Time  now iso8601 ","Time  now ","Fog Mock  random_numbers to_s ","Fog Mock  random_numbers "," random_operation ","opts [] "," get_region ","Fog Mock  not_implemented "," random_ random_operation  "]}," Fog Compute Google Real insert_target_instance":{"type":"method","name":"insert_target_instance","children":[],"call":[" request ","body_object merge! "," target_pool_name ","@compute target_instances insert ","@compute target_instances ","@compute insert_target_instance "," Google Apis ComputeV1 TargetInstance  new ","target_instance merge ","zone split [] ","zone split ","zone start_with? ","zone split []  split [] ","zone split []  split ","zone split []  start_with? "]}," Fog Compute Google Mock insert_target_instance":{"type":"method","name":"insert_target_instance","children":[],"call":[" build_excon_response "," data [] [] "," data [] "," data "," data [] []= "," api_version ","Time  now iso8601 ","Time  now ","Fog Mock  random_numbers to_s ","Fog Mock  random_numbers "," random_operation ","opts [] ","Fog Mock  not_implemented "," random_ random_operation  "]}," Fog Compute Google Real insert_target_http_proxy":{"type":"method","name":"insert_target_http_proxy","children":[],"call":[" request ","body_object merge! ","@compute target_http_proxies insert ","@compute target_http_proxies ","@compute insert_target_http_proxy "," Google Apis ComputeV1 TargetHttpProxy  new "]}," Fog Compute Google Mock insert_target_http_proxy":{"type":"method","name":"insert_target_http_proxy","children":[],"call":[" build_excon_response "," data [] [] "," data [] "," data "," data [] []= "," api_version ","Time  now iso8601 ","Time  now ","Fog Mock  random_numbers to_s ","Fog Mock  random_numbers "," random_operation ","options [] ","Fog Mock  not_implemented "," random_ random_operation  "]}," Fog Compute Google Real insert_snapshot":{"type":"method","name":"insert_snapshot","children":[],"call":[" request ","body_object merge! "," raise ","ArgumentError  new ","opts delete ","@compute disks create_snapshot ","@compute disks "]}," Fog Compute Google Mock insert_snapshot":{"type":"method","name":"insert_snapshot","children":[],"call":["Fog Mock  not_implemented "]}," Fog Compute Google Real insert_server":{"type":"method","name":"insert_server","children":[],"call":[" request ","body_object merge! ","body_object []= ","options delete ","options [] ","options []= "," format_metadata "," handle_disks "," raise ","ArgumentError  new ","options [] empty? ","options [] nil? ","options key? ","scheduling []= ","ohm upcase == ","ohm upcase ","ohm respond_to? ","scheduling [] class == ","scheduling [] class ","scheduling [] ","networkInterfaces << ","networkInterface []= ","@api_url + + ","@api_url + ","network nil? ! ","network nil? ","access_config [] == ","access_config [] ","access_config []= ","@compute instances insert ","@compute instances ","options is_a? ! ","options is_a? ","deprecated_args length > ","deprecated_args length "," handle_networks "," get_zone body [] split [] "," get_zone body [] split "," get_zone body [] "," get_zone body "," get_zone ","deprecated_args empty? ! ","deprecated_args empty? ","@compute insert_instance "," Google Apis ComputeV1 Instance  new ","data []= "," Google Apis ComputeV1 Tags  new ","data [] "," Google Apis ComputeV1 ServiceAccount  new "," Google Apis ComputeV1 Metadata  new "," Google Apis ComputeV1 AcceleratorConfig  new ","data [] map ","machine_type include? "," process_network_interfaces "," process_disks ","options merge ","zone split [] ","zone split ","options [] is_a? "," Google Apis ComputeV1 Scheduling  new "," Google Apis ComputeV1 ShieldedInstanceConfig  new "," Google Apis ComputeV1 DisplayDevice  new "," format_metaoptions merge  ","options delete  upcase == ","options delete  upcase ","options delete  respond_to? ","options delete Interfaces << ","options delete Interface []= ","options delete  nil? ! ","options delete  nil? ","@compute  Google Apis ComputeV1 Instance  new s insert ","@compute  Google Apis ComputeV1 Instance  new s "," handle_options delete s "," get_zone split []  body [] split [] "," get_zone split []  body [] split "," get_zone split []  body [] "," get_zone split []  body "," get_zone split []  ","@compute insert_ Google Apis ComputeV1 Instance  new  ","options merge  []= ","options merge  [] "," Google Apis ComputeV1 Metaoptions merge   new ","options merge  [] map ","options []  include? "," process_options delete _interfaces ","zone split []  split [] ","zone split []  split "]}," Fog Compute Google Real format_metadata":{"type":"method","name":"format_metadata","children":[],"call":["metadata map "]}," Fog Compute Google Real handle_disks":{"type":"method","name":"handle_disks","children":[],"call":["disks first []= ","disks first ","disks << ","disk get_object ","disk is_a? ","options delete each ","options delete "]}," Fog Compute Google Mock insert_server":{"type":"method","name":"insert_server","children":[],"call":[" build_excon_response "," data [] [] "," data [] "," data "," data [] []= "," api_version ","Time  now iso8601 ","Time  now ","Fog Mock  random_numbers to_s ","Fog Mock  random_numbers "," random_operation "," handle_disks ","Fog Mock  random_ip ","options [] "," raise ","ArgumentError  new ","options [] empty? ","options [] nil? "," get_zone ","Fog Mock  not_implemented "," random_ random_operation  "]}," Fog Compute Google Mock handle_disks":{"type":"method","name":"handle_disks","children":[],"call":["disks << ","disk name "," api_version ","Disk  new ","disk is_a? ","options delete each ","options delete ","Disk  new s << ","Disk  new  name ","Disk  new  is_a? "]}," Fog Compute Google Real insert_route":{"type":"method","name":"insert_route","children":[],"call":[" request ","body_object []= ","options [] ","options [] empty? ","options [] nil? ","@compute routes insert ","@compute routes ","@compute insert_route "," Google Apis ComputeV1 Route  new ","@compute  Google Apis ComputeV1 Route  new s insert ","@compute  Google Apis ComputeV1 Route  new s ","@compute insert_ Google Apis ComputeV1 Route  new  "]}," Fog Compute Google Mock insert_route":{"type":"method","name":"insert_route","children":[],"call":["Fog Mock  not_implemented "]}," Fog Compute Google Real insert_region_view":{"type":"method","name":"insert_region_view","children":[],"call":[" request ","body_object merge! ","@resourceviews region_views insert ","@resourceviews region_views "]}," Fog Compute Google Mock insert_region_view":{"type":"method","name":"insert_region_view","children":[],"call":["Fog Mock  not_implemented "]}," Fog Compute Google Real insert_network":{"type":"method","name":"insert_network","children":[],"call":[" request ","body_object []= ","options [] ","@compute networks insert ","@compute networks ","@compute insert_network "," Google Apis ComputeV1 Network  new ","(send\n  (lvar :opts) :select) merge ","INSERTABLE_NETWORK_FIELDS  include? ","opts select ","opts merge ","(send\n  (lvar :(send\n  (lvar :opts) :select) merge ) :select) merge ","(send\n  (lvar :opts merge ) :select) merge ","(send\n  (lvar :opts) :select) merge  select ","opts merge  select ","(send\n  (lvar :opts) :select) merge  merge ","opts merge  merge "]}," Fog Compute Google Mock insert_network":{"type":"method","name":"insert_network","children":[],"call":["Fog Mock  not_implemented "]}," Fog Compute Google Real insert_image":{"type":"method","name":"insert_image","children":[],"call":[" request ","body_object merge! ","@compute images insert ","@compute images ","@compute insert_image "," Google Apis ComputeV1 Image  new ","image merge ","@compute image merge s insert ","@compute image merge s ","@compute insert_image merge  ","image merge  merge "]}," Fog Compute Google Mock insert_image":{"type":"method","name":"insert_image","children":[],"call":[" build_excon_response "," data [] [] "," data [] "," data "," data [] []= "," api_version ","Time  now iso8601 ","Time  now ","object [] ","Fog Mock  random_numbers to_s ","Fog Mock  random_numbers "," random_operation ","options [] ","Fog Mock  not_implemented "," random_ random_operation  "]}," Fog Compute Google Real insert_http_health_check":{"type":"method","name":"insert_http_health_check","children":[],"call":[" request ","body_object merge! ","@compute http_health_checks insert ","@compute http_health_checks ","@compute insert_http_health_check "," Google Apis ComputeV1 HttpHealthCheck  new ","opts merge "]}," Fog Compute Google Mock insert_http_health_check":{"type":"method","name":"insert_http_health_check","children":[],"call":[" build_excon_response "," data [] [] "," data [] "," data "," data [] []= "," api_version ","Time  now iso8601 ","Time  now ","Fog Mock  random_numbers to_s ","Fog Mock  random_numbers "," random_operation ","Fog Mock  not_implemented "," random_ random_operation  "]}," Fog Compute Google Real insert_global_forwarding_rule":{"type":"method","name":"insert_global_forwarding_rule","children":[],"call":[" request ","body_object merge! ","@compute global_forwarding_rules insert ","@compute global_forwarding_rules ","@compute insert_global_forwarding_rule "," Google Apis ComputeV1 ForwardingRule  new ","opts merge ","opts merge  merge "]}," Fog Compute Google Mock insert_global_forwarding_rule":{"type":"method","name":"insert_global_forwarding_rule","children":[],"call":[" build_excon_response "," data [] [] "," data [] "," data "," data [] []= "," api_version ","Time  now iso8601 ","Time  now ","Fog Mock  random_numbers to_s ","Fog Mock  random_numbers "," random_operation ","opts [] ","Fog Mock  not_implemented "," random_ random_operation  "]}," Fog Compute Google Real insert_forwarding_rule":{"type":"method","name":"insert_forwarding_rule","children":[],"call":[" request ","body_object merge! ","@compute forwarding_rules insert ","@compute forwarding_rules ","@compute insert_forwarding_rule "," Google Apis ComputeV1 ForwardingRule  new ","opts merge ","region split [] ","region split ","region start_with? ","region split []  split [] ","region split []  split ","region split []  start_with? "]}," Fog Compute Google Mock insert_forwarding_rule":{"type":"method","name":"insert_forwarding_rule","children":[],"call":[" build_excon_response "," data [] [] "," data [] "," data "," data [] []= "," api_version ","Time  now iso8601 ","Time  now ","Fog Mock  random_numbers to_s ","Fog Mock  random_numbers "," random_operation ","opts [] "," get_region ","Fog Mock  not_implemented "," random_ random_operation  "]}," Fog Compute Google Real insert_firewall":{"type":"method","name":"insert_firewall","children":[],"call":[" request ","body_object []= ","options [] ","options [] empty? ","options [] nil? ","@compute firewalls insert ","@compute firewalls ","network start_with? ","@compute insert_firewall "," Google Apis ComputeV1 Firewall  new ","(send\n  (lvar :opts) :select) merge ","INSERTABLE_FIREWALL_FIELDS  include? ","opts select ","opts []= ","opts [] ","opts [] start_with? ","opts [] empty? ! ","opts [] empty? ","opts key? ","(send\n  (lvar :(send\n  (lvar :opts) :select) merge ) :select) merge ","(send\n  (lvar :opts) :select) merge  select ","(send\n  (lvar :opts) :select) merge  []= ","(send\n  (lvar :opts) :select) merge  [] ","(send\n  (lvar :opts) :select) merge  [] start_with? ","(send\n  (lvar :opts) :select) merge  [] empty? ! ","(send\n  (lvar :opts) :select) merge  [] empty? ","(send\n  (lvar :opts) :select) merge  key? "]}," Fog Compute Google Mock insert_firewall":{"type":"method","name":"insert_firewall","children":[],"call":["Fog Mock  not_implemented "]}," Fog Compute Google Real insert_disk":{"type":"method","name":"insert_disk","children":[],"call":[" request ","body_object merge! "," raise ","ArgumentError  new ","body_object []= ","opts delete ","opts key? ","@api_url + ","snap resource_url "," snapshots get "," snapshots ","image_name nil? ","parameters []= ","image resource_url "," images get "," images ","@compute disks insert ","@compute disks ","@compute insert_disk ","zone split [] ","zone split "," Google Apis ComputeV1 Disk  new ","disk_opts []= ","source_image include? ! ","source_image include? "," snapshots get  resource_url ","  snapshots get shots get ","  snapshots get shots "," images get _name nil? "," images get  resource_url ","  images get s get ","  images get s ","@compute  Google Apis ComputeV1 Disk  new s insert ","@compute  Google Apis ComputeV1 Disk  new s ","@compute insert_ Google Apis ComputeV1 Disk  new  "," Google Apis ComputeV1 Disk  new _opts []= ","source_ images get  include? ! ","source_ images get  include? "]}," Fog Compute Google Mock insert_disk":{"type":"method","name":"insert_disk","children":[],"call":[" build_excon_response "," data [] [] "," data [] "," data "," data [] []= ","object [] ","Time  now iso8601 ","Time  now ","Fog Mock  random_numbers to_s ","Fog Mock  random_numbers "," random_operation ","object []= "," api_version "," type ","options delete ","object merge! ","image id ","image self_link ","object merge ","options [] "," get_zone "," raise ","ArgumentError  new "," images get "," images ","Fog Mock  not_implemented "," random_ random_operation  ","image Fog Mock  random_numbers to_s  "," images get  id "," images get  self_link ","  images get s get ","  images get s "]}," Fog Compute Google Real insert_backend_service":{"type":"method","name":"insert_backend_service","children":[],"call":[" request ","body_object merge! ","@compute backend_services insert ","@compute backend_services ","@compute insert_backend_service "," Google Apis ComputeV1 BackendService  new ","(send\n  (lvar :opts) :reject) merge ","v nil? ","opts reject "]}," Fog Compute Google Mock insert_backend_service":{"type":"method","name":"insert_backend_service","children":[],"call":[" build_excon_response "," data [] [] "," data [] "," data "," data [] []= "," api_version ","Time  now iso8601 ","Time  now ","Fog Mock  random_numbers to_s ","Fog Mock  random_numbers "," random_operation ","opts [] ","Fog Mock  not_implemented "," random_ random_operation  "]}," Fog Compute Google Real insert_address":{"type":"method","name":"insert_address","children":[],"call":[" request ","body_object []= ","options [] ","@compute addresses insert ","@compute addresses ","@compute insert_address "," Google Apis ComputeV1 Address  new ","@compute  Google Apis ComputeV1 Address  new es insert ","@compute  Google Apis ComputeV1 Address  new es ","@compute insert_ Google Apis ComputeV1 Address  new  "]}," Fog Compute Google Mock insert_address":{"type":"method","name":"insert_address","children":[],"call":["Fog Mock  not_implemented "]}," Fog Compute Google Real get_zone_view":{"type":"method","name":"get_zone_view","children":[],"call":[" request ","@resourceviews zone_views get ","@resourceviews zone_views "]}," Fog Compute Google Mock get_zone_view":{"type":"method","name":"get_zone_view","children":[],"call":["Fog Mock  not_implemented "]}," Fog Compute Google Real get_zone_operation":{"type":"method","name":"get_zone_operation","children":[],"call":[" request ","@compute zone_operations get ","@compute zone_operations ","zone_name split [] ","zone_name split ","zone_name start_with? ","@compute get_zone_operation ","zone_name split []  split [] ","zone_name split []  split ","zone_name split []  start_with? "]}," Fog Compute Google Mock get_zone_operation":{"type":"method","name":"get_zone_operation","children":[],"call":[" build_excon_response "," project ","operation []= ","operation [] "," data [] [] "," data [] "," data ","Fog Mock  not_implemented "," data [] []  []= "," data [] []  [] "]}," Fog Compute Google Real get_zone":{"type":"method","name":"get_zone","children":[],"call":[" request ","@compute zones get ","@compute zones ","@compute get_zone "]}," Fog Compute Google Mock get_zone":{"type":"method","name":"get_zone","children":[],"call":[" build_excon_response "," project "," data [] [] "," data [] "," data ","Fog Mock  not_implemented "]}," Fog Compute Google Real get_url_map":{"type":"method","name":"get_url_map","children":[],"call":[" request ","@compute url_maps get ","@compute url_maps ","@compute get_url_map "]}," Fog Compute Google Mock get_url_map":{"type":"method","name":"get_url_map","children":[],"call":[" build_excon_response ","url_map nil? "," data [] [] "," data [] "," data ","Fog Mock  not_implemented "," data [] []  nil? "]}," Fog Compute Google Real get_target_pool_health":{"type":"method","name":"get_target_pool_health","children":[],"call":["Hash  [] ","resp data [] [] ","resp data [] ","resp data "," request ","target_pool instances map ","target_pool instances ","target_pool region split [] ","target_pool region split ","target_pool region ","target_pool name ","@compute target_pools get_health ","@compute target_pools ","Fog Logger  deprecation "," caller first "," caller ","@compute get_target_pool_health "," Google Apis ComputeV1 InstanceReference  new ","region split [] ","region split "," request  data [] [] "," request  data [] "," request  data "]}," Fog Compute Google Mock get_target_pool_health":{"type":"method","name":"get_target_pool_health","children":[],"call":["Fog Mock  not_implemented "]}," Fog Compute Google Real get_target_pool":{"type":"method","name":"get_target_pool","children":[],"call":[" request ","@compute target_pools get ","@compute target_pools ","region_name split [] ","region_name split ","region_name start_with? ","@compute get_target_pool ","region split [] ","region split ","region start_with? ","region_name split []  split [] ","region split [] _name split [] ","region_name split []  split ","region split [] _name split ","region_name split []  start_with? ","region split [] _name start_with? ","region split []  split [] ","region split []  split ","region split []  start_with? "]}," Fog Compute Google Mock get_target_pool":{"type":"method","name":"get_target_pool","children":[],"call":[" build_excon_response "," project "," data [] [] "," data [] "," data "," get_region ","Fog Mock  not_implemented "," get_ get_region  "]}," Fog Compute Google Real get_target_instance":{"type":"method","name":"get_target_instance","children":[],"call":[" request ","@compute target_instances get ","@compute target_instances ","zone_name split [] ","zone_name split ","zone_name start_with? ","@compute get_target_instance ","zone split [] ","zone split ","zone start_with? ","zone_name split []  split [] ","zone split [] _name split [] ","zone_name split []  split ","zone split [] _name split ","zone_name split []  start_with? ","zone split [] _name start_with? ","zone split []  split [] ","zone split []  split ","zone split []  start_with? "]}," Fog Compute Google Mock get_target_instance":{"type":"method","name":"get_target_instance","children":[],"call":[" build_excon_response ","target_instance nil? "," data [] [] "," data [] "," data ","Fog Mock  not_implemented "," data [] []  nil? "]}," Fog Compute Google Real get_target_http_proxy":{"type":"method","name":"get_target_http_proxy","children":[],"call":[" request ","@compute target_http_proxies get ","@compute target_http_proxies ","@compute get_target_http_proxy "]}," Fog Compute Google Mock get_target_http_proxy":{"type":"method","name":"get_target_http_proxy","children":[],"call":[" build_excon_response ","proxy nil? "," data [] [] "," data [] "," data ","Fog Mock  not_implemented "," data [] []  nil? "]}," Fog Compute Google Real get_snapshot":{"type":"method","name":"get_snapshot","children":[],"call":[" request ","@compute snapshots get ","@compute snapshots "," raise ","ArgumentError  new ","snap_name nil? ","@compute get_snapshot "]}," Fog Compute Google Mock get_snapshot":{"type":"method","name":"get_snapshot","children":[],"call":["Fog Mock  not_implemented "]}," Fog Compute Google Real get_server_serial_port_output":{"type":"method","name":"get_server_serial_port_output","children":[],"call":[" request ","zone split [] ","zone split ","@compute instances get_serial_port_output ","@compute instances ","@compute get_instance_serial_port_output "]}," Fog Compute Google Mock get_server_serial_port_output":{"type":"method","name":"get_server_serial_port_output","children":[],"call":["Fog Mock  not_implemented "]}," Fog Compute Google Real get_server":{"type":"method","name":"get_server","children":[],"call":[" request ","@compute instances get ","@compute instances ","zone_name body [] ","zone_name body ","zone_name is_a? ","@compute get_instance ","zone split [] ","zone split ","zone_name body [] _name body [] ","zone_name body [] _name body ","zone_name body [] _name is_a? ","zone_name body []  split [] ","zone_name body []  split "]}," Fog Compute Google Mock get_server":{"type":"method","name":"get_server","children":[],"call":[" build_excon_response "," data [] []= "," data [] "," data ","Time  now - > ","Fog Mock  delay ","Time  now - ","Time  iso8601 ","server [] ","Time  now ","server []= ","Fog Mock  delay / ","server [] != ","zone [] ","server nil? "," data [] [] "," get_zone ","Fog Mock  not_implemented "," data [] []  [] "," data [] []  []= "," data [] []  [] != "," data [] []  nil? "," get_ data [] []  "]}," Fog Compute Google Real get_route":{"type":"method","name":"get_route","children":[],"call":[" request ","@compute routes get ","@compute routes ","@compute get_route "]}," Fog Compute Google Mock get_route":{"type":"method","name":"get_route","children":[],"call":["Fog Mock  not_implemented "]}," Fog Compute Google Real get_region_view":{"type":"method","name":"get_region_view","children":[],"call":[" request ","@resourceviews region_views get ","@resourceviews region_views "]}," Fog Compute Google Mock get_region_view":{"type":"method","name":"get_region_view","children":[],"call":["Fog Mock  not_implemented "]}," Fog Compute Google Real get_region_operation":{"type":"method","name":"get_region_operation","children":[],"call":[" request ","@compute region_operations get ","@compute region_operations ","region_name split [] ","region_name split ","region_name start_with? ","@compute get_region_operation ","region split [] ","region split ","region start_with? ","@compute region split [] _operations get ","@compute region split [] _operations ","region_name split []  split [] ","region split [] _name split [] ","region_name split []  split ","region split [] _name split ","region_name split []  start_with? ","region split [] _name start_with? ","@compute get_region split [] _operation ","region split []  split [] ","region split []  split ","region split []  start_with? "]}," Fog Compute Google Mock get_region_operation":{"type":"method","name":"get_region_operation","children":[],"call":[" build_excon_response "," project ","operation []= ","operation [] "," data [] [] "," data [] "," data "," raise "," data [] []  []= "," data [] []  [] "]}," Fog Compute Google Real get_region":{"type":"method","name":"get_region","children":[],"call":[" request ","identity split [] ","identity split ","@compute regions get ","@compute regions ","@compute get_region "]}," Fog Compute Google Mock get_region":{"type":"method","name":"get_region","children":[],"call":[" build_excon_response "," project "," data [] [] "," data [] "," data ","identity split [] ","identity split ","Fog Mock  not_implemented "]}," Fog Compute Google Real get_project":{"type":"method","name":"get_project","children":[],"call":[" request ","@compute projects get ","@compute projects ","@compute get_project "]}," Fog Compute Google Mock get_project":{"type":"method","name":"get_project","children":[],"call":["Fog Mock  not_implemented "]}," Fog Compute Google Real get_network":{"type":"method","name":"get_network","children":[],"call":[" request ","@compute networks get ","@compute networks ","@compute get_network "]}," Fog Compute Google Mock get_network":{"type":"method","name":"get_network","children":[],"call":["Fog Mock  not_implemented "]}," Fog Compute Google Real get_machine_type":{"type":"method","name":"get_machine_type","children":[],"call":[" request ","@compute machine_types get ","@compute machine_types ","zone_name split [] ","zone_name split ","zone_name start_with? "," list_zones body [] first [] "," list_zones body [] first "," list_zones body [] "," list_zones body "," list_zones ","zone_name nil? ","@compute get_machine_type ","zone split [] ","zone split ","zone start_with? ","zone_name split []  split [] "," list_zones body [] first []  split [] ","zone split [] _name split [] ","zone_name split []  split "," list_zones body [] first []  split ","zone split [] _name split ","zone_name split []  start_with? "," list_zones body [] first []  start_with? ","zone split [] _name start_with? "," list_zone split [] s body [] first [] "," list_zone split [] s body [] first "," list_zone split [] s body [] "," list_zone split [] s body "," list_zone split [] s ","zone_name split []  nil? "," list_zones body [] first []  nil? ","zone split [] _name nil? ","zone split []  split [] ","zone split []  split ","zone split []  start_with? "]}," Fog Compute Google Mock get_machine_type":{"type":"method","name":"get_machine_type","children":[],"call":[" build_excon_response "," data [] [] [] "," data [] [] "," data [] "," data "," get_zone "," data [] keys first "," data [] keys ","zone_name nil? ","Fog Mock  not_implemented "," data [] keys first  nil? "]}," Fog Compute Google Real get_image":{"type":"method","name":"get_image","children":[],"call":[" request ","@compute images get ","@compute images ","@compute get_image ","project nil? "]}," Fog Compute Google Mock get_image":{"type":"method","name":"get_image","children":[],"call":[" build_excon_response "," data [] [] "," data [] "," data ","Fog Mock  not_implemented "]}," Fog Compute Google Real get_http_health_check":{"type":"method","name":"get_http_health_check","children":[],"call":[" request ","@compute http_health_checks get ","@compute http_health_checks ","@compute get_http_health_check "]}," Fog Compute Google Mock get_http_health_check":{"type":"method","name":"get_http_health_check","children":[],"call":[" build_excon_response ","http_health_check nil? "," data [] [] "," data [] "," data ","Fog Mock  not_implemented "," data [] []  nil? "]}," Fog Compute Google Real get_global_operation":{"type":"method","name":"get_global_operation","children":[],"call":[" request ","@compute global_operations get ","@compute global_operations ","@compute get_global_operation "]}," Fog Compute Google Mock get_global_operation":{"type":"method","name":"get_global_operation","children":[],"call":[" build_excon_response "," project ","operation []= ","operation [] "," data [] [] "," data [] "," data ","Fog Mock  not_implemented "," data [] []  []= "," data [] []  [] "]}," Fog Compute Google Real get_global_forwarding_rule":{"type":"method","name":"get_global_forwarding_rule","children":[],"call":[" request ","@compute global_forwarding_rules get ","@compute global_forwarding_rules ","region_name split [] ","region_name split ","region_name start_with? ","@compute get_global_forwarding_rule ","region_name split []  split [] ","region_name split []  split ","region_name split []  start_with? "]}," Fog Compute Google Mock get_global_forwarding_rule":{"type":"method","name":"get_global_forwarding_rule","children":[],"call":[" build_excon_response ","global_forwarding_rule nil? "," data [] [] "," data [] "," data ","Fog Mock  not_implemented "," data [] []  nil? "]}," Fog Compute Google Real get_forwarding_rule":{"type":"method","name":"get_forwarding_rule","children":[],"call":[" request ","@compute forwarding_rules get ","@compute forwarding_rules ","region_name split [] ","region_name split ","region_name start_with? ","@compute get_forwarding_rule ","region split [] ","region split ","region start_with? ","region_name split []  split [] ","region split [] _name split [] ","region_name split []  split ","region split [] _name split ","region_name split []  start_with? ","region split [] _name start_with? ","region split []  split [] ","region split []  split ","region split []  start_with? "]}," Fog Compute Google Mock get_forwarding_rule":{"type":"method","name":"get_forwarding_rule","children":[],"call":[" build_excon_response ","forwarding_rule [] != ","region [] ","forwarding_rule [] ","forwarding_rule nil? "," data [] [] "," data [] "," data "," get_region body [] "," get_region body "," get_region ","Fog Mock  not_implemented "," data [] []  [] != "," data [] []  [] "," data [] []  nil? "," get_ data [] []  body [] "," get_ data [] []  body "," get_ data [] []  "]}," Fog Compute Google Real get_firewall":{"type":"method","name":"get_firewall","children":[],"call":[" request ","@compute firewalls get ","@compute firewalls ","@compute get_firewall "]}," Fog Compute Google Mock get_firewall":{"type":"method","name":"get_firewall","children":[],"call":["Fog Mock  not_implemented "]}," Fog Compute Google Real get_disk_type":{"type":"method","name":"get_disk_type","children":[],"call":[" request ","zone split [] ","zone split ","@compute disk_types get ","@compute disk_types ","@compute get_disk_type "]}," Fog Compute Google Mock get_disk_type":{"type":"method","name":"get_disk_type","children":[],"call":[" build_excon_response ","disk_type first ","disk_type empty? ","dt [] == ","dt [] ","disk_types select "," list_disk_types body [] "," list_disk_types body "," list_disk_types ","Fog Mock  not_implemented "," list_disk_types body []  select "," list_ list_disk_types body []  body [] "," list_ list_disk_types body []  body "," list_ list_disk_types body []  "]}," Fog Compute Google Real get_disk":{"type":"method","name":"get_disk","children":[],"call":[" request ","@compute disks get ","@compute disks ","zone_name split [] ","zone_name split ","zone_name start_with? ","@compute get_disk ","zone_name split []  split [] ","zone_name split []  split ","zone_name split []  start_with? "]}," Fog Compute Google Mock get_disk":{"type":"method","name":"get_disk","children":[],"call":[" build_excon_response ","disk [] != ","zone [] ","disk [] ","disk nil? "," data [] [] "," data [] "," data "," get_zone ","zone_name split [] ","zone_name split ","zone_name start_with? ","Fog Mock  not_implemented "," data [] []  [] != "," data [] []  [] "," data [] []  nil? "," get_ data [] []  "," data [] [] _name split [] ","zone_name split []  split [] "," data [] [] _name split ","zone_name split []  split "," data [] [] _name start_with? ","zone_name split []  start_with? "]}," Fog Compute Google Real get_backend_services":{"type":"method","name":"get_backend_services","children":[],"call":[" build_response "," build_result ","@compute backend_services get ","@compute backend_services "," build_ build_response  "," build_ build_result  "]}," Fog Compute Google Mock get_backend_services":{"type":"method","name":"get_backend_services","children":[],"call":["Fog Mock  not_implemented "]}," Fog Compute Google Real get_backend_service_health":{"type":"method","name":"get_backend_service_health","children":[],"call":["Hash  [] ","resp data [] [] ","resp data [] ","resp data ","backend [] "," request ","backend_service backends map ","backend_service backends ","backend_service name ","@compute backend_services get_health ","@compute backend_services ","resp health_status ","@compute get_backend_service_health "," Google Apis ComputeV1 ResourceGroupReference  new "," request  data [] [] ","@compute get_backend_service_health  data [] [] "," request  data [] ","@compute get_backend_service_health  data [] "," request  data ","@compute get_backend_service_health  data "," request  health_status ","@compute get_backend_service_health  health_status "]}," Fog Compute Google Mock get_backend_service_health":{"type":"method","name":"get_backend_service_health","children":[],"call":["Fog Mock  not_implemented "]}," Fog Compute Google Real get_backend_service":{"type":"method","name":"get_backend_service","children":[],"call":[" request ","@compute backend_services get ","@compute backend_services ","@compute get_backend_service "]}," Fog Compute Google Mock get_backend_service":{"type":"method","name":"get_backend_service","children":[],"call":[" build_excon_response ","backend_service nil? "," data [] [] "," data [] "," data "," data [] []  nil? "]}," Fog Compute Google Real get_address":{"type":"method","name":"get_address","children":[],"call":[" request ","@compute addresses get ","@compute addresses ","@compute get_address "]}," Fog Compute Google Mock get_address":{"type":"method","name":"get_address","children":[],"call":["Fog Mock  not_implemented "]}," Fog Compute Google Real detach_disk":{"type":"method","name":"detach_disk","children":[],"call":[" request ","zone split [] ","zone split ","@compute instances detach_disk ","@compute instances ","@compute detach_disk ","zone split []  split [] ","zone split []  split "]}," Fog Compute Google Mock detach_disk":{"type":"method","name":"detach_disk","children":[],"call":["Fog Mock  not_implemented "]}," Fog Compute Google Real delete_zone_view":{"type":"method","name":"delete_zone_view","children":[],"call":[" request ","@resourceviews zone_views delete ","@resourceviews zone_views "]}," Fog Compute Google Mock delete_zone_view":{"type":"method","name":"delete_zone_view","children":[],"call":["Fog Mock  not_implemented "]}," Fog Compute Google Real delete_zone_operation":{"type":"method","name":"delete_zone_operation","children":[],"call":[" request ","@compute zone_operations delete ","@compute zone_operations ","zone_name split [] ","zone_name split ","zone_name start_with? ","@compute delete_zone_operation ","zone_name split []  split [] ","zone_name split []  split ","zone_name split []  start_with? "]}," Fog Compute Google Mock delete_zone_operation":{"type":"method","name":"delete_zone_operation","children":[],"call":["Fog Mock  not_implemented "]}," Fog Compute Google Real delete_url_map":{"type":"method","name":"delete_url_map","children":[],"call":[" request ","@compute url_maps delete ","@compute url_maps ","@compute delete_url_map "]}," Fog Compute Google Mock delete_url_map":{"type":"method","name":"delete_url_map","children":[],"call":[" build_excon_response "," data [] [] "," data [] "," data "," data [] []= "," api_version ","Time  now iso8601 ","Time  now "," data [] [] [] ","Fog Mock  random_numbers to_s ","Fog Mock  random_numbers "," random_operation ","url_map []= "," get_url_map ","Fog Mock  not_implemented "," random_ random_operation  "," data [] []  []= "," get_ data [] []  "]}," Fog Compute Google Real delete_target_pool":{"type":"method","name":"delete_target_pool","children":[],"call":[" request ","@compute target_pools delete ","@compute target_pools ","region_name split [] ","region_name split ","region_name start_with? ","@compute delete_target_pool ","region split [] ","region split ","region start_with? ","region_name split []  split [] ","region split [] _name split [] ","region_name split []  split ","region split [] _name split ","region_name split []  start_with? ","region split [] _name start_with? ","region split []  split [] ","region split []  split ","region split []  start_with? "]}," Fog Compute Google Mock delete_target_pool":{"type":"method","name":"delete_target_pool","children":[],"call":[" build_excon_response "," data [] [] "," data [] "," data "," data [] []= "," api_version ","Time  now iso8601 ","Time  now ","Fog Mock  random_numbers to_s ","Fog Mock  random_numbers "," random_operation "," get_target_pool ","Fog Mock  not_implemented "," random_ random_operation  "]}," Fog Compute Google Real delete_target_instance":{"type":"method","name":"delete_target_instance","children":[],"call":[" request ","@compute target_instances delete ","@compute target_instances ","zone_name split [] ","zone_name split ","zone_name start_with? ","@compute delete_target_instance ","zone split [] ","zone split ","zone start_with? ","zone_name split []  split [] ","zone split [] _name split [] ","zone_name split []  split ","zone split [] _name split ","zone_name split []  start_with? ","zone split [] _name start_with? ","zone split []  split [] ","zone split []  split ","zone split []  start_with? "]}," Fog Compute Google Mock delete_target_instance":{"type":"method","name":"delete_target_instance","children":[],"call":[" build_excon_response "," data [] [] "," data [] "," data "," data [] []= "," api_version ","Time  now iso8601 ","Time  now "," data [] [] [] ","Fog Mock  random_numbers to_s ","Fog Mock  random_numbers "," random_operation ","target_instance []= "," get_target_instance ","Fog Mock  not_implemented "," random_ random_operation  "," data [] []  []= "," get_ data [] []  "]}," Fog Compute Google Real delete_target_http_proxy":{"type":"method","name":"delete_target_http_proxy","children":[],"call":[" request ","@compute target_http_proxies delete ","@compute target_http_proxies ","@compute delete_target_http_proxy "]}," Fog Compute Google Mock delete_target_http_proxy":{"type":"method","name":"delete_target_http_proxy","children":[],"call":[" build_excon_response "," data [] [] "," data [] "," data "," data [] []= "," api_version ","Time  now iso8601 ","Time  now "," data [] [] [] ","Fog Mock  random_numbers to_s ","Fog Mock  random_numbers "," random_operation ","target_http_proxy []= "," get_target_http_proxy ","Fog Mock  not_implemented "," random_ random_operation  "," data [] []  []= "," get_ data [] []  "]}," Fog Compute Google Real delete_snapshot":{"type":"method","name":"delete_snapshot","children":[],"call":[" request ","@compute snapshots delete ","@compute snapshots ","@compute delete_snapshot "]}," Fog Compute Google Mock delete_snapshot":{"type":"method","name":"delete_snapshot","children":[],"call":["Fog Mock  not_implemented "]}," Fog Compute Google Real delete_server_access_config":{"type":"method","name":"delete_server_access_config","children":[],"call":[" request ","options [] ","options [] nil? ","zone split [] ","zone split ","@compute instances delete_access_config ","@compute instances ","@compute delete_instance_access_config "]}," Fog Compute Google Mock delete_server_access_config":{"type":"method","name":"delete_server_access_config","children":[],"call":["Fog Mock  not_implemented "]}," Fog Compute Google Real delete_server":{"type":"method","name":"delete_server","children":[],"call":[" request ","@compute instances delete ","@compute instances "," find_zone ","@compute delete_instance ","zone split [] ","zone split "]}," Fog Compute Google Mock delete_server":{"type":"method","name":"delete_server","children":[],"call":[" build_excon_response "," data [] [] "," data [] "," data "," data [] []= "," api_version ","Time  now iso8601 ","Time  now "," data [] [] [] ","Fog Mock  random_numbers to_s ","Fog Mock  random_numbers "," random_operation ","server []= "," get_server "," find_zone ","Fog Mock  not_implemented "," random_ random_operation  "," data [] []  []= "," get_ data [] []  "]}," Fog Compute Google Shared find_zone":{"type":"method","name":"find_zone","children":[],"call":["zone_name body [] ","zone_name body ","zone_name is_a? ","zone [] "," get_server status == "," get_server status "," get_server "," server_name "," list_zones body [] each "," list_zones body [] "," list_zones body "," list_zones ","zone_name nil? "]}," Fog Compute Google Real delete_route":{"type":"method","name":"delete_route","children":[],"call":[" request ","@compute routes delete ","@compute routes ","@compute delete_route "]}," Fog Compute Google Mock delete_route":{"type":"method","name":"delete_route","children":[],"call":["Fog Mock  not_implemented "]}," Fog Compute Google Real delete_region_view":{"type":"method","name":"delete_region_view","children":[],"call":[" request ","@resourceviews region_views delete ","@resourceviews region_views "]}," Fog Compute Google Mock delete_region_view":{"type":"method","name":"delete_region_view","children":[],"call":["Fog Mock  not_implemented "]}," Fog Compute Google Real delete_region_operation":{"type":"method","name":"delete_region_operation","children":[],"call":[" request ","@compute region_operations delete ","@compute region_operations ","region_name split [] ","region_name split ","region_name start_with? ","@compute delete_region_operation ","region split [] ","region split ","region start_with? ","@compute region split [] _operations delete ","@compute region split [] _operations ","region_name split []  split [] ","region split [] _name split [] ","region_name split []  split ","region split [] _name split ","region_name split []  start_with? ","region split [] _name start_with? ","@compute delete_region split [] _operation ","region split []  split [] ","region split []  split ","region split []  start_with? "]}," Fog Compute Google Mock delete_region_operation":{"type":"method","name":"delete_region_operation","children":[],"call":["Fog Mock  not_implemented "]}," Fog Compute Google Real delete_network":{"type":"method","name":"delete_network","children":[],"call":[" request ","@compute networks delete ","@compute networks ","@compute delete_network "]}," Fog Compute Google Mock delete_network":{"type":"method","name":"delete_network","children":[],"call":["Fog Mock  not_implemented "]}," Fog Compute Google Real delete_image":{"type":"method","name":"delete_image","children":[],"call":[" request ","@compute images delete ","@compute images ","@compute delete_image "]}," Fog Compute Google Mock delete_image":{"type":"method","name":"delete_image","children":[],"call":[" build_excon_response "," data [] [] "," data [] "," data "," data [] delete "," data [] []= "," api_version ","Time  now iso8601 ","Time  now "," data [] [] [] ","Fog Mock  random_numbers to_s ","Fog Mock  random_numbers "," random_operation "," get_image ","Fog Mock  not_implemented "," random_ random_operation  "]}," Fog Compute Google Real delete_http_health_check":{"type":"method","name":"delete_http_health_check","children":[],"call":[" request ","@compute http_health_checks delete ","@compute http_health_checks ","@compute delete_http_health_check "]}," Fog Compute Google Mock delete_http_health_check":{"type":"method","name":"delete_http_health_check","children":[],"call":[" build_excon_response "," data [] [] "," data [] "," data "," data [] []= "," api_version ","Time  now iso8601 ","Time  now "," data [] [] [] ","Fog Mock  random_numbers to_s ","Fog Mock  random_numbers "," random_operation "," get_http_health_check ","Fog Mock  not_implemented "," random_ random_operation  "," get_http_health_ data [] []  "]}," Fog Compute Google Real delete_global_operation":{"type":"method","name":"delete_global_operation","children":[],"call":[" request ","@compute global_operations delete ","@compute global_operations ","@compute delete_global_operation "]}," Fog Compute Google Mock delete_global_operation":{"type":"method","name":"delete_global_operation","children":[],"call":["Fog Mock  not_implemented "]}," Fog Compute Google Real delete_global_forwarding_rule":{"type":"method","name":"delete_global_forwarding_rule","children":[],"call":[" request ","@compute global_forwarding_rules delete ","@compute global_forwarding_rules ","region_name split [] ","region_name split ","region_name start_with? ","@compute delete_global_forwarding_rule ","region_name split []  split [] ","region_name split []  split ","region_name split []  start_with? "]}," Fog Compute Google Mock delete_global_forwarding_rule":{"type":"method","name":"delete_global_forwarding_rule","children":[],"call":[" build_excon_response "," data [] [] "," data [] "," data "," data [] []= "," api_version ","Time  now iso8601 ","Time  now "," data [] [] [] ","Fog Mock  random_numbers to_s ","Fog Mock  random_numbers "," random_operation ","global_forwarding_rule []= "," get_global_forwarding_rule ","Fog Mock  not_implemented "," random_ random_operation  "," data [] []  []= "," get_ data [] []  "]}," Fog Compute Google Real delete_forwarding_rule":{"type":"method","name":"delete_forwarding_rule","children":[],"call":[" request ","@compute forwarding_rules delete ","@compute forwarding_rules ","region_name split [] ","region_name split ","region_name start_with? ","@compute delete_forwarding_rule ","region split [] ","region split ","region start_with? ","region_name split []  split [] ","region split [] _name split [] ","region_name split []  split ","region split [] _name split ","region_name split []  start_with? ","region split [] _name start_with? ","region split []  split [] ","region split []  split ","region split []  start_with? "]}," Fog Compute Google Mock delete_forwarding_rule":{"type":"method","name":"delete_forwarding_rule","children":[],"call":[" build_excon_response "," data [] [] "," data [] "," data "," data [] []= "," api_version ","Time  now iso8601 ","Time  now ","Fog Mock  random_numbers to_s ","Fog Mock  random_numbers "," random_operation "," get_forwarding_rule ","Fog Mock  not_implemented "," random_ random_operation  "]}," Fog Compute Google Real delete_firewall":{"type":"method","name":"delete_firewall","children":[],"call":[" request ","@compute firewalls delete ","@compute firewalls ","@compute delete_firewall "]}," Fog Compute Google Mock delete_firewall":{"type":"method","name":"delete_firewall","children":[],"call":["Fog Mock  not_implemented "]}," Fog Compute Google Real delete_disk":{"type":"method","name":"delete_disk","children":[],"call":[" request ","@compute disks delete ","@compute disks ","zone_name split [] ","zone_name split ","zone_name start_with? ","@compute delete_disk ","zone_name split []  split [] ","zone_name split []  split ","zone_name split []  start_with? "]}," Fog Compute Google Mock delete_disk":{"type":"method","name":"delete_disk","children":[],"call":[" build_excon_response "," data [] [] "," data [] "," data "," data [] delete "," data [] []= "," api_version ","Time  now iso8601 ","Time  now "," data [] [] [] ","Fog Mock  random_numbers to_s ","Fog Mock  random_numbers "," random_operation "," get_disk ","Fog Mock  not_implemented "," random_ random_operation  "]}," Fog Compute Google Real delete_backend_service":{"type":"method","name":"delete_backend_service","children":[],"call":[" request ","@compute backend_services delete ","@compute backend_services ","@compute delete_backend_service "]}," Fog Compute Google Mock delete_backend_service":{"type":"method","name":"delete_backend_service","children":[],"call":[" build_excon_response "," data [] [] "," data [] "," data "," data [] []= "," api_version ","Time  now iso8601 ","Time  now "," data [] [] [] ","Fog Mock  random_numbers to_s ","Fog Mock  random_numbers "," random_operation ","backend_service []= "," get_backend_service ","Fog Mock  not_implemented "," random_ random_operation  "," data [] []  []= "," get_ data [] []  "]}," Fog Compute Google Real delete_address":{"type":"method","name":"delete_address","children":[],"call":[" request ","@compute addresses delete ","@compute addresses ","@compute delete_address "]}," Fog Compute Google Mock delete_address":{"type":"method","name":"delete_address","children":[],"call":["Fog Mock  not_implemented "]}," Fog Compute Google Real attach_disk":{"type":"method","name":"attach_disk","children":[],"call":[" request ","options delete ","zone split [] ","zone split ","@compute instances attach_disk ","@compute instances ","@compute attach_disk "," Google Apis ComputeV1 AttachedDisk  new "]}," Fog Compute Google Mock attach_disk":{"type":"method","name":"attach_disk","children":[],"call":["Fog Mock  not_implemented "]}," Fog Compute Google Real add_zone_view_resources":{"type":"method","name":"add_zone_view_resources","children":[],"call":[" request ","zone_view name ","@resourceviews zone_views addresources ","@resourceviews zone_views "]}," Fog Compute Google Mock add_zone_view_resources":{"type":"method","name":"add_zone_view_resources","children":[],"call":["Fog Mock  not_implemented "]}," Fog Compute Google Real add_url_map_path_matchers":{"type":"method","name":"add_url_map_path_matchers","children":[],"call":[" request ","url_map pathMatchers= ","url_map pathMatchers concat ","url_map pathMatchers ","url_map name ","@compute url_maps update ","@compute url_maps "]}," Fog Compute Google Mock add_url_map_path_matchers":{"type":"method","name":"add_url_map_path_matchers","children":[],"call":["Fog Mock  not_implemented "]}," Fog Compute Google Real add_url_map_host_rules":{"type":"method","name":"add_url_map_host_rules","children":[],"call":[" request ","url_map hostRules= ","url_map hostRules concat ","url_map hostRules ","url_map name ","@compute url_maps update ","@compute url_maps "]}," Fog Compute Google Mock add_url_map_host_rules":{"type":"method","name":"add_url_map_host_rules","children":[],"call":["Fog Mock  not_implemented "]}," Fog Compute Google Real add_target_pool_instances":{"type":"method","name":"add_target_pool_instances","children":[],"call":[" request ","instances map ","target_pool region split [] ","target_pool region split ","target_pool region ","target_pool name ","@compute target_pools add_instance ","@compute target_pools ","@compute add_target_pool_instance "," Google Apis ComputeV1 AddTargetPoolsInstanceRequest  new ","region split [] ","region split "," Google Apis ComputeV1 InstanceReference  new "]}," Fog Compute Google Mock add_target_pool_instances":{"type":"method","name":"add_target_pool_instances","children":[],"call":["Fog Mock  not_implemented "]}," Fog Compute Google Real add_target_pool_health_checks":{"type":"method","name":"add_target_pool_health_checks","children":[],"call":[" request ","health_checks map ","target_pool region split [] ","target_pool region split ","target_pool region ","target_pool name ","@compute target_pools add_health_check ","@compute target_pools ","@compute add_target_pool_health_check "," Google Apis ComputeV1 AddTargetPoolsHealthCheckRequest  new ","region split [] ","region split "," Google Apis ComputeV1 HealthCheckReference  new "]}," Fog Compute Google Mock add_target_pool_health_checks":{"type":"method","name":"add_target_pool_health_checks","children":[],"call":["Fog Mock  not_implemented "]}," Fog Compute Google Real add_server_access_config":{"type":"method","name":"add_server_access_config","children":[],"call":[" request ","body_object []= ","options [] ","zone split [] ","zone split ","@compute instances add_access_config ","@compute instances ","@compute add_instance_access_config "," Google Apis ComputeV1 AccessConfig  new "]}," Fog Compute Google Mock add_server_access_config":{"type":"method","name":"add_server_access_config","children":[],"call":["Fog Mock  not_implemented "]}," Fog Compute Google Real add_region_view_resources":{"type":"method","name":"add_region_view_resources","children":[],"call":[" request ","@resourceviews region_views add_resources ","@resourceviews region_views "]}," Fog Compute Google Mock add_region_view_resources":{"type":"method","name":"add_region_view_resources","children":[],"call":["Fog Mock  not_implemented "]}," Fog Compute Google Real add_backend_service_backends":{"type":"method","name":"add_backend_service_backends","children":[],"call":[" request ","backend_service backends= ","backend_service backends concat ","backend_service backends ","backend_service name ","@compute backend_services patch ","@compute backend_services ","@compute patch_backend_service "]}," Fog Compute Google Mock add_backend_service_backends":{"type":"method","name":"add_backend_service_backends","children":[],"call":["Fog Mock  not_implemented "]}," Fog Parsers Storage Google GetService end_element":{"type":"method","name":"end_element","children":[],"call":["@bucket []= "," value ","@response [] []= ","@response [] ","Time  parse ","@response [] << "]}," Fog Parsers Storage Google GetService reset":{"type":"method","name":"reset","children":[],"call":[]}," Fog Parsers Storage Google GetRequestPayment end_element":{"type":"method","name":"end_element","children":[],"call":["@response []= "," value "]}," Fog Parsers Storage Google GetBucketVersioning end_element":{"type":"method","name":"end_element","children":[],"call":["@response [] []= "," value ","@response [] "]}," Fog Parsers Storage Google GetBucketVersioning reset":{"type":"method","name":"reset","children":[],"call":[]}," Fog Parsers Storage Google GetBucketObjectVersions end_element":{"type":"method","name":"end_element","children":[],"call":["(ivar :@in_delete_marker) []= "," value ","@version []= "," value to_i ","@response []= ","Time  parse "," value == "," value gsub ","(ivar :@in_delete_marker) [] []= ","(ivar :@in_delete_marker) [] ","@response [] << ","@response [] "," value delete "]}," Fog Parsers Storage Google GetBucketObjectVersions start_element":{"type":"method","name":"start_element","children":[],"call":[]}," Fog Parsers Storage Google GetBucketObjectVersions reset":{"type":"method","name":"reset","children":[],"call":[]}," Fog Parsers Storage Google AccessControlList end_element":{"type":"method","name":"end_element","children":[],"call":["@grant [] []= "," value ","@grant [] ","@response [] []= ","@response [] ","@grant []= ","@response [] [] [] << ","@response [] [] [] ","@response [] [] ","@entry []= ","@entry [] []= ","@entry [] ","@response [] << "]}," Fog Parsers Storage Google AccessControlList reset":{"type":"method","name":"reset","children":[],"call":[]}," Fog Parsers Storage Google GetBucket end_element":{"type":"method","name":"end_element","children":[],"call":["@object []= "," value "," value to_i ","@response []= ","@response [] << ","@response [] ","Time  parse "," value == "," value gsub ","@object [] []= ","@object [] "," value delete "]}," Fog Parsers Storage Google GetBucket start_element":{"type":"method","name":"start_element","children":[],"call":[]}," Fog Parsers Storage Google GetBucket reset":{"type":"method","name":"reset","children":[],"call":[]}," Fog Parsers Storage Google CopyObject end_element":{"type":"method","name":"end_element","children":[],"call":["@response []= ","Time  parse "," value "," value gsub "," value delete "]}," Fog Parsers Storage Google AccessControlList start_element":{"type":"method","name":"start_element","children":[],"call":["@entry [] []= ","struct value ","struct localname ","@entry [] ","attrs first ","attrs first  value ","attrs first  localname "]}," Fog Google Monitoring Real initialize":{"type":"method","name":"initialize","children":[],"call":["@client discovered_api "," api_version "," initialize_google_client ","options merge! ","GOOGLE_MONITORING_API_SCOPE_URLS  join "," shared_initialize ","options [] ","options []= "," Google Apis MonitoringV3 MonitoringService  new "," apply_client_options "," initialize_google_client  discovered_api "]}," Fog Google Monitoring Mock reset_data":{"type":"method","name":"reset_data","children":[],"call":[" class data delete "," project "," class data "," class "]}," Fog Google Monitoring Mock data":{"type":"method","name":"data","children":[],"call":[" class data [] "," project "," class data "," class "]}," Fog Google Monitoring Mock reset":{"type":"method","name":"reset","children":[],"call":[]}," Fog Google Monitoring Mock initialize":{"type":"method","name":"initialize","children":[],"call":[" shared_initialize ","options [] "]}," Fog Storage Google Files new":{"type":"method","name":"new","children":[],"call":["(pair\n  (sym :directory)\n  (send nil :directory)) merge "," directory "," requires "]}," Fog Storage Google Files head":{"type":"method","name":"head","children":[],"call":[" new ","data headers merge ","data headers "," service head_object "," directory key "," directory "," service "," requires "," service head_object  headers merge "," service head_object  headers "]}," Fog Storage Google Files get_https_url":{"type":"method","name":"get_https_url","children":[],"call":[" service get_object_https_url "," directory key "," directory "," service "," requires "]}," Fog Storage Google Files get_http_url":{"type":"method","name":"get_http_url","children":[],"call":[" service get_object_http_url "," directory key "," directory "," service "," requires "]}," Fog Storage Google Files get":{"type":"method","name":"get","children":[],"call":[" new ","file_data merge! ","data body ","file_data []= ","data headers each ","data headers "," service get_object "," directory key "," directory "," service "," requires ","file_ service get_object  merge! "," service get_object  body ","file_ service get_object  []= "," service get_object  headers each "," service get_object  headers "]}," Fog Storage Google Files each":{"type":"method","name":"each","children":[],"call":["subset each_file_this_page ","subset all ","subset last key ","subset last ","subset is_truncated "," dup all "," dup "," block_given? ! "," block_given? ","subset all  each_file_this_page "," dup all  each_file_this_page ","subset all  all "," dup all  all ","subset all  last key "," dup all  last key ","subset all  last "," dup all  last ","subset all  is_truncated "," dup all  is_truncated "]}," Fog Storage Google Files all":{"type":"method","name":"all","children":[],"call":[" load ","file attributes ","parent files map ","parent files "," merge_attributes ","parent files attributes "," directory collection get "," directory key "," directory "," directory collection ","value to_s empty? ","value to_s ","value nil? ","options reject ","(pair\n  (str \"delimiter\")\n  (send nil :delimiter)) merge! "," prefix "," max_keys "," marker "," delimiter "," requires "," directory collection get  files map "," directory collection get  files "," directory collection get  files attributes ","(pair\n  (str \"delimiter\")\n  (send nil :delimiter)) merge!  reject "]}," Fog Storage Google File directory=":{"type":"method","name":"directory=","children":[],"call":[]}," Fog Storage Google File url":{"type":"method","name":"url","children":[],"call":[" collection get_http_url "," key "," collection "," requires "]}," Fog Storage Google File save":{"type":"method","name":"save","children":[],"call":["Fog Storage  get_content_type "," body "," content_type "," content_length= ","Fog Storage  get_body_size "," merge_attributes ","(str \"Content-Length\") include? ","data headers reject ","data headers "," service put_object "," key "," directory key "," directory "," service ","options merge! "," metadata ","options []= "," expires "," content_md5 "," content_encoding "," content_disposition "," cache_control ","options [] ","Fog Logger  deprecation "," caller first "," caller ","options != "," requires "," service put_object  headers reject "," service put_object  headers "," meta service put_object  "]}," Fog Storage Google File public_url":{"type":"method","name":"public_url","children":[],"call":[" key "," directory key "," directory "," directory key to_s =~ "," directory key to_s ","entry [] == ","entry [] ","entry [] [] == ","entry [] [] ","acl find "," service get_object_acl body [] "," service get_object_acl body "," service get_object_acl "," service "," requires "," service get_object_acl body []  find "," service get_object_ service get_object_acl body []  body [] "," service get_object_ service get_object_acl body []  body "," service get_object_ service get_object_acl body []  "]}," Fog Storage Google File public=":{"type":"method","name":"public=","children":[],"call":[]}," Fog Storage Google File owner=":{"type":"method","name":"owner=","children":[],"call":[" attributes []= ","new_owner [] "," attributes "]}," Fog Storage Google File metadata=":{"type":"method","name":"metadata=","children":[],"call":[" merge_attributes "]}," Fog Storage Google File metadata":{"type":"method","name":"metadata","children":[],"call":["(send\n  (send\n    (lvar :key) :to_s) :=~\n  (regexp\n    (str \"^x-goog-meta-\")\n    (regopt))) ! ","key to_s =~ ","key to_s "," attributes reject "," attributes "]}," Fog Storage Google File destroy":{"type":"method","name":"destroy","children":[],"call":[" service delete_object "," key "," directory key "," directory "," service "," requires "]}," Fog Storage Google File copy":{"type":"method","name":"copy","children":[],"call":["target_directory files get ","target_directory files "," service directories new "," service directories "," service "," service copy_object "," key "," directory key "," directory "," requires "," service directories new  files get "," service directories new  files "]}," Fog Storage Google File directory":{"type":"method","name":"directory","children":[],"call":[]}," Fog Storage Google File body=":{"type":"method","name":"body=","children":[],"call":[" attributes []= "," attributes "]}," Fog Storage Google File body":{"type":"method","name":"body","children":[],"call":["file body "," collection get "," identity "," collection "," last_modified "," attributes [] "," attributes "," collection get  body "]}," Fog Storage Google File acl=":{"type":"method","name":"acl=","children":[],"call":[" raise ","ArgumentError  new ","valid_acls join ","valid_acls include? "]}," Fog Storage Google Directory save":{"type":"method","name":"save","children":[],"call":[" service put_bucket "," key "," service ","options []= "," requires "]}," Fog Storage Google Directory public_url":{"type":"method","name":"public_url","children":[],"call":[" key "," key to_s =~ "," key to_s ","entry [] == ","entry [] ","entry [] [] == ","entry [] [] "," service get_bucket_acl body [] find "," service get_bucket_acl body [] "," service get_bucket_acl body "," service get_bucket_acl "," service "," requires "]}," Fog Storage Google Directory public=":{"type":"method","name":"public=","children":[],"call":[]}," Fog Storage Google Directory files":{"type":"method","name":"files","children":[],"call":["Fog Storage Google Files  new "," service "]}," Fog Storage Google Directory destroy":{"type":"method","name":"destroy","children":[],"call":[" service delete_bucket "," key "," service "," requires "]}," Fog Storage Google Directory acl=":{"type":"method","name":"acl=","children":[],"call":[" raise ","ArgumentError  new ","valid_acls join ","valid_acls include? "]}," Fog Storage Google Directories get":{"type":"method","name":"get","children":[],"call":["directory files load ","data [] ","directory files ","directory files merge_attributes ","options []= ","(str \"CommonPrefixes\") include? "," new "," service get_bucket body "," service get_bucket "," service "," remap_attributes "," new  files load "," service get_bucket body  [] "," new  files "," new  files merge_attributes "]}," Fog Storage Google Directories all":{"type":"method","name":"all","children":[],"call":[" load "," service get_service body [] "," service get_service body "," service get_service "," service "]}," Fog Google SQL Tiers all":{"type":"method","name":"all","children":[],"call":[" load "," service list_tiers body [] "," service list_tiers body "," service list_tiers "," service "," service list_tiers to_h [] "," service list_tiers to_h "]}," Fog Google SQL SslCerts get":{"type":"method","name":"get","children":[],"call":[" raise ","e message == ","e message "," new "," service get_ssl_cert body "," service get_ssl_cert "," service ","e status_code == ","e status_code "," service get_ssl_cert to_h "," service get_ service get_ssl_cert body  body "," service get_ service get_ssl_cert to_h  body "," service get_ service get_ssl_cert body  "," service get_ service get_ssl_cert to_h  "," service get_ service get_ssl_cert body  to_h "," service get_ service get_ssl_cert to_h  to_h "]}," Fog Google SQL SslCerts all":{"type":"method","name":"all","children":[],"call":[" load "," raise ","e message == ","e message "," service list_ssl_certs body [] "," service list_ssl_certs body "," service list_ssl_certs "," service ","e status_code == ","e status_code "," service list_ssl_certs to_h [] "," service list_ssl_certs to_h "]}," Fog Google SQL SslCert save":{"type":"method","name":"save","children":[],"call":[" cert_private_key= ","data [] [] ","data [] "," server_ca_cert= ","Fog Google SQL SslCert  new "," merge_attributes "," service insert_ssl_cert body "," service insert_ssl_cert "," common_name "," instance "," service "," raise ","Fog Errors Error  new "," persisted? "," requires ","data client_cert cert_private_key ","data client_cert ","data server_ca_cert to_h ","data server_ca_cert ","data client_cert cert_info to_h ","data client_cert cert_info "," ready? ","operation wait_for ","Fog Google SQL Operations  new get ","data operation name ","data operation ","Fog Google SQL Operations  new "," service insert_ssl_cert body  [] [] "," service insert_ssl_cert  [] [] "," service insert_ssl_cert body  [] "," service insert_ssl_cert  [] "," service insert_ssl_cert body  client_cert cert_private_key "," service insert_ssl_cert  client_cert cert_private_key "," service insert_ssl_cert body  client_cert "," service insert_ssl_cert  client_cert "," service insert_ssl_cert body  server_ca_cert to_h "," service insert_ssl_cert  server_ca_cert to_h "," service insert_ssl_cert body  server_ca_cert "," service insert_ssl_cert  server_ca_cert "," service insert_ssl_cert body  client_cert cert_info to_h "," service insert_ssl_cert  client_cert cert_info to_h "," service insert_ssl_cert body  client_cert cert_info "," service insert_ssl_cert  client_cert cert_info ","Fog Google SQL Operations  new get  wait_for "," service insert_ssl_cert body  operation name "," service insert_ssl_cert  operation name ","data Fog Google SQL Operations  new get  name "," service insert_ssl_cert body  operation "," service insert_ssl_cert  operation ","data Fog Google SQL Operations  new get  "]}," Fog Google SQL SslCert reload":{"type":"method","name":"reload","children":[],"call":[" merge_attributes ","data attributes "," collection get "," identity "," instance "," collection "," requires "," collection get  attributes "]}," Fog Google SQL SslCert destroy":{"type":"method","name":"destroy","children":[],"call":[" ready? ","operation wait_for ","options fetch ","Fog Google SQL Operations  new get ","data body [] ","data body "," instance ","Fog Google SQL Operations  new "," service "," service delete_ssl_cert "," identity "," requires ","data name ","Fog Google SQL Operations  new get  wait_for "," service delete_ssl_cert  body [] "," service delete_ssl_cert  body "," service delete_ssl_cert  name "]}," Fog Google SQL Operations get":{"type":"method","name":"get","children":[],"call":[" raise ","e message == ","e message "," new "," service get_operation body "," service get_operation "," service ","e status_code == ","e status_code "," service get_operation to_h "," service get_ service get_operation body  body "," service get_ service get_operation to_h  body "," service get_ service get_operation body  "," service get_ service get_operation to_h  "," service get_ service get_operation body  to_h "," service get_ service get_operation to_h  to_h "]}," Fog Google SQL Operations all":{"type":"method","name":"all","children":[],"call":[" load "," raise ","e message == ","e message "," service list_operations body [] "," service list_operations body "," service list_operations "," service ","data map "," service list_operations items ","data map  map "]}," Fog Google SQL Operation reload":{"type":"method","name":"reload","children":[],"call":[" merge_attributes ","data attributes "," collection get "," identity "," instance "," collection "," requires "," collection get  attributes "]}," Fog Google SQL Operation ready?":{"type":"method","name":"ready?","children":[],"call":[" state == "," state "," status == "," status "]}," Fog Google SQL Operation pending?":{"type":"method","name":"pending?","children":[],"call":[" state == "," state "," status == "," status "]}," Fog Google SQL Instances get":{"type":"method","name":"get","children":[],"call":[" raise ","e message == ","e message "," new "," service get_instance body "," service get_instance "," service ","e status_code == ","e status_code "," service get_instance to_h ","instance [] eql? ","instance [] "," service get_ service get_instance body  body "," service get_ service get_instance to_h  body "," service get_ service get_instance body  "," service get_ service get_instance to_h  "," service get_ service get_instance body  to_h "," service get_ service get_instance to_h  to_h "," service get_instance body  [] eql? "," service get_instance to_h  [] eql? "," service get_instance body  [] "," service get_instance to_h  [] "]}," Fog Google SQL Instances all":{"type":"method","name":"all","children":[],"call":[" load "," service list_instances body [] "," service list_instances body "," service list_instances "," service "," service list_instances to_h [] "," service list_instances to_h "]}," Fog Google SQL Instance update":{"type":"method","name":"update","children":[],"call":[" reload "," pending? ! "," pending? ","operation wait_for ","Fog Google SQL Operations  new get ","data body [] ","data body "," instance ","Fog Google SQL Operations  new "," service "," service update_instance "," attributes "," tier "," settings_version "," identity "," requires ","data name "," settings "," ready? ","Fog Google SQL Operations  new get  wait_for "," service update_instance  body [] "," service update_instance  body "," service update_instance  name "]}," Fog Google SQL Instance tier":{"type":"method","name":"tier","children":[],"call":[" settings [] "," settings "]}," Fog Google SQL Instance ssl_certs":{"type":"method","name":"ssl_certs","children":[],"call":[" service ssl_certs all "," identity "," service ssl_certs "," service "," requires "]}," Fog Google SQL Instance settings_version":{"type":"method","name":"settings_version","children":[],"call":[" settings [] "," settings "]}," Fog Google SQL Instance set_root_password":{"type":"method","name":"set_root_password","children":[],"call":[" ready? ","operation wait_for ","options fetch ","Fog Google SQL Operations  new get ","data body [] ","data body "," instance ","Fog Google SQL Operations  new "," service "," service set_instance_root_password "," identity "," requires ","Fog Google SQL Operations  new get  wait_for "," service set_instance_root_password  body [] "," service set_instance_root_password  body "]}," Fog Google SQL Instance save":{"type":"method","name":"save","children":[],"call":[" create "," update "," etag "]}," Fog Google SQL Instance restore_backup":{"type":"method","name":"restore_backup","children":[],"call":[" ready? ","operation wait_for ","options fetch ","Fog Google SQL Operations  new get ","data body [] ","data body "," instance ","Fog Google SQL Operations  new "," service "," service restore_instance_backup "," identity "," requires ","o wait_for ","operation tap ","data name ","Fog Google SQL Operations  new get  wait_for "," service restore_instance_backup  body [] "," service restore_instance_backup  body ","Fog Google SQL Operations  new get  tap "," service restore_instance_backup  name "]}," Fog Google SQL Instance restart":{"type":"method","name":"restart","children":[],"call":[" ready? ","operation wait_for ","options fetch ","Fog Google SQL Operations  new get ","data body [] ","data body "," instance ","Fog Google SQL Operations  new "," service "," service restart_instance "," identity "," requires ","o wait_for ","operation tap ","data name ","Fog Google SQL Operations  new get  wait_for "," service restart_instance  body [] "," service restart_instance  body ","Fog Google SQL Operations  new get  tap "," service restart_instance  name "]}," Fog Google SQL Instance reset_ssl_config":{"type":"method","name":"reset_ssl_config","children":[],"call":[" ready? ","operation wait_for ","options fetch ","Fog Google SQL Operations  new get ","data body [] ","data body "," instance ","Fog Google SQL Operations  new "," service "," service reset_instance_ssl_config "," identity "," requires ","o wait_for ","operation tap ","data name ","Fog Google SQL Operations  new get  wait_for "," service reset_instance_ssl_config  body [] "," service reset_instance_ssl_config  body ","Fog Google SQL Operations  new get  tap "," service reset_instance_ssl_config  name "]}," Fog Google SQL Instance replication_type":{"type":"method","name":"replication_type","children":[],"call":[" settings [] "," settings "]}," Fog Google SQL Instance ready?":{"type":"method","name":"ready?","children":[],"call":[" state == "," state "]}," Fog Google SQL Instance pricing_plan":{"type":"method","name":"pricing_plan","children":[],"call":[" settings [] "," settings "]}," Fog Google SQL Instance location_preference_zone":{"type":"method","name":"location_preference_zone","children":[],"call":[" settings fetch [] "," settings fetch "," settings "]}," Fog Google SQL Instance location_preference_zone_follow_gae_application":{"type":"method","name":"location_preference_zone_follow_gae_application","children":[],"call":[" settings fetch [] "," settings fetch "," settings "]}," Fog Google SQL Instance ip_configuration_require_ssl":{"type":"method","name":"ip_configuration_require_ssl","children":[],"call":[" settings fetch [] "," settings fetch "," settings "]}," Fog Google SQL Instance ip_configuration_enabled":{"type":"method","name":"ip_configuration_enabled","children":[],"call":[" settings fetch [] "," settings fetch "," settings "]}," Fog Google SQL Instance ip_configuration_authorized_networks":{"type":"method","name":"ip_configuration_authorized_networks","children":[],"call":[" settings fetch [] "," settings fetch "," settings "," settings fetch fetch "]}," Fog Google SQL Instance import":{"type":"method","name":"import","children":[],"call":[" ready? ","operation wait_for ","options fetch ","Fog Google SQL Operations  new get ","data body [] ","data body "," instance ","Fog Google SQL Operations  new "," service "," service import_instance "," identity "," requires ","o wait_for ","operation tap ","data name ","Fog Google SQL Operations  new get  wait_for "," service import_instance  body [] "," service import_instance  body ","Fog Google SQL Operations  new get  tap "," service import_instance  name "]}," Fog Google SQL Instance export":{"type":"method","name":"export","children":[],"call":[" ready? ","operation wait_for ","options fetch ","Fog Google SQL Operations  new get ","data body [] ","data body "," instance ","Fog Google SQL Operations  new "," service "," service export_instance "," identity "," requires ","o wait_for "," async ","operation tap ","data name ","Fog Google SQL Operations  new get  wait_for "," service export_instance  body [] "," service export_instance  body ","Fog Google SQL Operations  new get  tap "," service export_instance  name "]}," Fog Google SQL Instance destroy":{"type":"method","name":"destroy","children":[],"call":["options fetch ","Fog Google SQL Operations  new get ","data body [] ","data body "," instance ","Fog Google SQL Operations  new "," service "," service delete_instance "," identity "," requires "," ready? ","o wait_for ","operation tap ","data name ","async [] ","async is_a? "," service delete_instance  body [] "," service delete_instance  body ","Fog Google SQL Operations  new get  tap "," service delete_instance  name ","async []  [] ","async []  is_a? "]}," Fog Google SQL Instance database_flags":{"type":"method","name":"database_flags","children":[],"call":[" settings [] "," settings "]}," Fog Google SQL Instance create":{"type":"method","name":"create","children":[],"call":[" reload "," pending? ! "," pending? ","operation wait_for ","Fog Google SQL Operations  new get ","data body [] ","data body "," instance ","Fog Google SQL Operations  new "," service "," service insert_instance "," attributes "," attributes [] "," identity "," requires ","data name "," ready? ","Fog Google SQL Operations  new get  wait_for "," service insert_instance  body [] "," service insert_instance  body "," service insert_instance  name "]}," Fog Google SQL Instance clone":{"type":"method","name":"clone","children":[],"call":[" ready? ","operation wait_for ","options fetch ","Fog Google SQL Operations  new get ","data body [] ","data body "," instance ","Fog Google SQL Operations  new "," service "," service clone_instance "," identity "," requires ","o wait_for ","operation tap ","data name ","Fog Google SQL Operations  new get  wait_for "," service clone_instance  body [] "," service clone_instance  body ","Fog Google SQL Operations  new get  tap "," service clone_instance  name "]}," Fog Google SQL Instance backup_configuration":{"type":"method","name":"backup_configuration","children":[],"call":[" settings [] "," settings "]}," Fog Google SQL Instance autorized_gae_applications":{"type":"method","name":"autorized_gae_applications","children":[],"call":[" settings [] "," settings "]}," Fog Google SQL Instance activation_policy":{"type":"method","name":"activation_policy","children":[],"call":[" settings [] "," settings "]}," Fog Google SQL Flags all":{"type":"method","name":"all","children":[],"call":[" load "," service list_flags body [] "," service list_flags body "," service list_flags "," service "," service list_flags to_h [] "," service list_flags to_h "]}," Fog Google SQL BackupRuns get":{"type":"method","name":"get","children":[],"call":[" new "," service get_backup_run body "," service get_backup_run "," service "," raise ","e status_code == ","e status_code "," service get_backup_run to_h "," service get_ service get_backup_run body  body "," service get_ service get_backup_run to_h  body "," service get_ service get_backup_run body  "," service get_ service get_backup_run to_h  "," service get_ service get_backup_run body  to_h "," service get_ service get_backup_run to_h  to_h "]}," Fog Google SQL BackupRuns all":{"type":"method","name":"all","children":[],"call":[" load "," service list_backup_runs body [] "," service list_backup_runs body "," service list_backup_runs "," service "," service list_backup_runs to_h [] "," service list_backup_runs to_h "]}," Fog Google SQL BackupRun ready?":{"type":"method","name":"ready?","children":[],"call":[" state == "," state "," status == "," status "]}," Fog Google Monitoring TimeseriesDescriptors all":{"type":"method","name":"all","children":[],"call":[" load "," service list_timeseries_descriptors body [] "," service list_timeseries_descriptors body "," service list_timeseries_descriptors "," service "]}," Fog Google Monitoring TimeseriesCollection all":{"type":"method","name":"all","children":[],"call":[" load "," service list_timeseries body [] "," service list_timeseries body "," service list_timeseries "," service "," service list_timeseries to_h [] "," service list_timeseries to_h "]}," Fog Google Monitoring MetricDescriptors all":{"type":"method","name":"all","children":[],"call":[" load "," service list_metric_descriptors body [] "," service list_metric_descriptors body "," service list_metric_descriptors "," service "," service list_metric_descriptors to_h [] "," service list_metric_descriptors to_h "]}," Fog DNS Google Zones get":{"type":"method","name":"get","children":[],"call":[" new "," service get_managed_zone body "," service get_managed_zone "," service "," raise ","e status_code == ","e status_code "," service get_managed_zone to_h "," service get_managed_ service get_managed_zone body  body "," service get_managed_ service get_managed_zone to_h  body "," service get_managed_ service get_managed_zone body  "," service get_managed_ service get_managed_zone to_h  "," service get_managed_ service get_managed_zone body  to_h "," service get_managed_ service get_managed_zone to_h  to_h "]}," Fog DNS Google Zones all":{"type":"method","name":"all","children":[],"call":[" load "," service list_managed_zones body [] "," service list_managed_zones body "," service list_managed_zones "," service "," service list_managed_zones managed_zones to_h "," service list_managed_zones managed_zones "]}," Fog DNS Google Zone save":{"type":"method","name":"save","children":[],"call":[" merge_attributes ","data body "," service create_managed_zone "," description "," domain "," name "," service "," raise ","Fog Errors Error  new "," persisted? "," requires ","data to_h "," service create_managed_zone  body "," service create_managed_zone  to_h "]}," Fog DNS Google Zone records":{"type":"method","name":"records","children":[],"call":["Fog DNS Google Records  new "," service "]}," Fog DNS Google Zone destroy":{"type":"method","name":"destroy","children":[],"call":[" service delete_managed_zone "," identity "," service "," requires "]}," Fog DNS Google Zone changes":{"type":"method","name":"changes","children":[],"call":["Fog DNS Google Changes  new "," service "]}," Fog DNS Google Records new":{"type":"method","name":"new","children":[],"call":["(pair\n  (sym :zone)\n  (send nil :zone)) merge! "," zone "," requires "]}," Fog DNS Google Records get":{"type":"method","name":"get","children":[],"call":[" new ","records first ","records any? "," service list_resource_record_sets body [] "," service list_resource_record_sets body "," service list_resource_record_sets "," zone identity "," zone "," service "," requires "," raise ","e status_code == ","e status_code "," service list_resource_record_sets to_h [] "," service list_resource_record_sets to_h "]}," Fog DNS Google Records all":{"type":"method","name":"all","children":[],"call":[" load "," service list_resource_record_sets body [] "," service list_resource_record_sets body "," service list_resource_record_sets "," zone identity "," zone "," service "," requires "," raise ","e status_code == ","e status_code "," service list_resource_record_sets to_h [] "," service list_resource_record_sets to_h "]}," Fog DNS Google Record resource_record_set_format":{"type":"method","name":"resource_record_set_format","children":[],"call":[" rrdatas "," ttl "," type "," name "]}," Fog DNS Google Record zone=":{"type":"method","name":"zone=","children":[],"call":[]}," Fog DNS Google Record zone":{"type":"method","name":"zone","children":[],"call":[]}," Fog DNS Google Record save":{"type":"method","name":"save","children":[],"call":[" pending? ! "," pending? ","change wait_for ","Fog DNS Google Changes  new get ","data body [] ","data body ","Fog DNS Google Changes  new "," zone "," service "," service create_change "," resource_record_set_format "," zone id "," requires ","data id "," ready? ","Fog DNS Google Changes  new get  wait_for "," service create_change  body [] "," service create_change  body "," service create_Fog DNS Google Changes  new get  "," service create_change  id "]}," Fog DNS Google Record reload":{"type":"method","name":"reload","children":[],"call":[" merge_attributes ","data attributes "," collection get "," type "," name "," collection "," requires "," collection get to_h "," collection get  attributes "," collection get to_h  attributes "]}," Fog DNS Google Record modify":{"type":"method","name":"modify","children":[],"call":[" ready? ","change wait_for ","new_attributes [] ","new_attributes has_key? ","Fog DNS Google Changes  new get ","data body [] ","data body ","Fog DNS Google Changes  new "," zone "," service "," service create_change "," resource_record_set_format "," zone id "," merge_attributes "," requires ","new_attributes key? ","data id ","Fog DNS Google Changes  new get  wait_for "," service create_change  body [] "," service create_change  body "," service create_Fog DNS Google Changes  new get  "," service create_change  id "]}," Fog DNS Google Record destroy":{"type":"method","name":"destroy","children":[],"call":[" ready? ","change wait_for ","Fog DNS Google Changes  new get ","data body [] ","data body ","Fog DNS Google Changes  new "," zone "," service "," service create_change "," resource_record_set_format "," zone id "," requires ","data id ","Fog DNS Google Changes  new get  wait_for "," service create_change  body [] "," service create_change  body "," service create_Fog DNS Google Changes  new get  "," service create_change  id "]}," Fog DNS Google Projects get":{"type":"method","name":"get","children":[],"call":[" new "," service get_project body "," service get_project "," service "," raise ","e status_code == ","e status_code "," service get_project to_h "," service get_ service get_project body  body "," service get_ service get_project to_h  body "," service get_ service get_project body  "," service get_ service get_project to_h  "," service get_ service get_project body  to_h "," service get_ service get_project to_h  to_h "]}," Fog DNS Google Project total_rrdatasize_per_change":{"type":"method","name":"total_rrdatasize_per_change","children":[],"call":[" quota [] "," quota "]}," Fog DNS Google Project rrset_deletions_per_change":{"type":"method","name":"rrset_deletions_per_change","children":[],"call":[" quota [] "," quota "]}," Fog DNS Google Project rrset_additions_per_change":{"type":"method","name":"rrset_additions_per_change","children":[],"call":[" quota [] "," quota "]}," Fog DNS Google Project resource_records_per_rrset":{"type":"method","name":"resource_records_per_rrset","children":[],"call":[" quota [] "," quota "]}," Fog DNS Google Project rrsets_per_managed_zone":{"type":"method","name":"rrsets_per_managed_zone","children":[],"call":[" quota [] "," quota "]}," Fog DNS Google Project managed_zones":{"type":"method","name":"managed_zones","children":[],"call":[" quota [] "," quota "]}," Fog DNS Google Changes new":{"type":"method","name":"new","children":[],"call":["(pair\n  (sym :zone)\n  (send nil :zone)) merge! "," zone "," requires "]}," Fog DNS Google Changes get":{"type":"method","name":"get","children":[],"call":[" new "," service get_change body "," service get_change "," zone identity "," zone "," service "," requires "," raise ","e status_code == ","e status_code "," service get_change to_h "," service get_ service get_change body  body "," service get_ service get_change to_h  body "," service get_ service get_change body  "," service get_ service get_change to_h  "," service get_ service get_change body  to_h "," service get_ service get_change to_h  to_h "]}," Fog DNS Google Changes all":{"type":"method","name":"all","children":[],"call":[" load "," service list_changes body [] "," service list_changes body "," service list_changes "," zone identity "," zone "," service "," requires "," raise ","e status_code == ","e status_code "," service list_changes to_h [] "," service list_changes to_h "]}," Fog DNS Google Change ready?":{"type":"method","name":"ready?","children":[],"call":[" status == "," status "]}," Fog DNS Google Change pending?":{"type":"method","name":"pending?","children":[],"call":[" status == "," status "]}," Fog Compute Google Zones get":{"type":"method","name":"get","children":[],"call":[" new "," service get_zone body "," service get_zone "," service "," raise ","e status_code == ","e status_code "," service get_zone to_h "," service get_ service get_zone to_h  body "," service get_ service get_zone to_h  "," service get_ service get_zone to_h  to_h "]}," Fog Compute Google Zones all":{"type":"method","name":"all","children":[],"call":[" load "," service list_zones body [] "," service list_zones body "," service list_zones "," service "," service list_zones to_h [] "," service list_zones to_h ","opts []= ","next_page_token empty? ","next_page_token nil? ","data next_page_token ","items concat ","data to_h [] ","data to_h "," loop ","data next_page_token  empty? ","data next_page_token  nil? ","data data next_page_token  "," service list_zones  next_page_token "," service list_zones  to_h [] "," service list_zones  to_h "]}," Fog Compute Google Zone up?":{"type":"method","name":"up?","children":[],"call":[" status == "," status "]}," Fog Compute Google UrlMaps get":{"type":"method","name":"get","children":[],"call":[" new ","response body ","response nil? "," service get_url_map "," service "," service get_url_map body "," raise ","e status_code == ","e status_code "," service get_url_map to_h "," service get_url_map  body "," service get_url_map  nil? "," service get_ service get_url_map body  "," service get_ service get_url_map to_h  "," service get_ service get_url_map body  body "," service get_ service get_url_map to_h  body "," service get_ service get_url_map body  to_h "," service get_ service get_url_map to_h  to_h "]}," Fog Compute Google UrlMaps all":{"type":"method","name":"all","children":[],"call":[" load "," service list_url_maps body [] "," service list_url_maps body "," service list_url_maps "," service "," service list_url_maps to_h [] "," service list_url_maps to_h ","opts []= ","next_page_token empty? ","next_page_token nil? ","data next_page_token ","items concat ","data to_h [] ","data to_h "," loop ","data next_page_token  empty? ","data next_page_token  nil? ","data data next_page_token  "," service list_url_maps  next_page_token "," service list_url_maps  to_h [] "," service list_url_maps  to_h "]}," Fog Compute Google UrlMap reload":{"type":"method","name":"reload","children":[],"call":[" merge_attributes ","data attributes "," collection get "," name "," collection "," requires "]}," Fog Compute Google UrlMap ready?":{"type":"method","name":"ready?","children":[],"call":[" service get_url_map "," name "," service "," raise ","e status_code == ","e status_code "]}," Fog Compute Google UrlMap add_path_matchers":{"type":"method","name":"add_path_matchers","children":[],"call":[" reload "," service update_url_map "," service ","hostRules class == ","hostRules class ","pathMatchers class == ","pathMatchers class "," ready? ","operation wait_for ","Fog Compute Google Operations  new get ","data name ","Fog Compute Google Operations  new "," service patch_url_map "," identity ","(or\n  (send nil :host_rules)\n  (array)) + "," host_rules ","(or\n  (send nil :path_matchers)\n  (array)) + "," path_matchers "," requires ","Fog Compute Google Operations  new get  wait_for "," service patch_url_map  name ","(or\n  (send nil :host_(or\n  (send nil :host_rules)\n  (array)) + )\n  (array)) + "," host_(or\n  (send nil :host_rules)\n  (array)) +  ","(or\n  (send nil :path_(or\n  (send nil :path_matchers)\n  (array)) + )\n  (array)) + "," path_(or\n  (send nil :path_matchers)\n  (array)) +  "]}," Fog Compute Google UrlMap add_host_rules":{"type":"method","name":"add_host_rules","children":[],"call":[" reload "," service update_url_map "," service ","hostRules class == ","hostRules class "," ready? ","operation wait_for ","Fog Compute Google Operations  new get ","data name ","Fog Compute Google Operations  new "," service patch_url_map "," identity ","(or\n  (send nil :host_rules)\n  (array)) concat "," host_rules "," requires ","Fog Compute Google Operations  new get  wait_for "," service patch_url_map  name ","(or\n  (send nil :host_(or\n  (send nil :host_rules)\n  (array)) concat )\n  (array)) concat "," host_(or\n  (send nil :host_rules)\n  (array)) concat  "]}," Fog Compute Google UrlMap validate":{"type":"method","name":"validate","children":[],"call":[" service validate_url_map "," service "," attributes "," identity "," requires "]}," Fog Compute Google UrlMap destroy":{"type":"method","name":"destroy","children":[],"call":["operation body [] == ","operation body [] ","operation body "," service get_global_operation "," service ","Fog  wait_for ","async ! "," service delete_url_map "," name "," requires "," ready? ","operation wait_for ","Fog Compute Google Operations  new get ","data name ","Fog Compute Google Operations  new "," identity "," service get_global_operation  body [] == "," service delete_url_map  body [] == ","Fog Compute Google Operations  new get  body [] == "," service get_global_operation  body [] "," service delete_url_map  body [] ","Fog Compute Google Operations  new get  body [] "," service get_global_operation  body "," service delete_url_map  body ","Fog Compute Google Operations  new get  body "," service get_global_ service get_global_operation  "," service get_global_ service delete_url_map  "," service get_global_Fog Compute Google Operations  new get  "," service get_global_operation  wait_for "," service delete_url_map  wait_for ","Fog Compute Google Operations  new get  wait_for "," service delete_url_map  name "]}," Fog Compute Google UrlMap save":{"type":"method","name":"save","children":[],"call":[" reload "," pending? ! "," pending? ","operation wait_for ","Fog Compute Google Operations  new get ","data [] ","Fog Compute Google Operations  new "," service "," service insert_url_map body "," service insert_url_map "," name "," tests "," pathMatchers "," hostRules "," fingerprint "," description "," defaultService "," requires "," path_matchers "," host_rules "," default_service ","data name "," identity "," service update_url_map "," creation_timestamp "," ready? ","Fog Compute Google Operations  new get  wait_for "," service insert_url_map body  [] "," service insert_url_map  [] "," service update_url_map  [] "," service insert_url_map body  name "," service insert_url_map  name "," service update_url_map  name "]}," Fog Compute Google TargetPools get":{"type":"method","name":"get","children":[],"call":[" new ","response body ","response nil? "," service get_target_pool "," service ","response status == ","response status ","region name "," service regions all each "," service regions all "," service regions ","region nil? "," raise ","e status_code= "," service get_target_pool to_h ","data attributes ","data nil? "," all first "," all ","response first ","response empty? "," service get_target_pool  body "," service get_target_pool to_h  body ","data attributes  body "," all  body "," service get_target_pool  nil? "," service get_target_pool to_h  nil? ","data attributes  nil? "," all  nil? "," service get_response first  "," service get_ service get_target_pool to_h  "," service get_target_pool  status == "," service get_target_pool to_h  status == ","data attributes  status == "," all  status == "," service get_target_pool  status "," service get_target_pool to_h  status ","data attributes  status "," all  status "," service get_response first  to_h "," service get_ service get_target_pool to_h  to_h "," all first  attributes "," all first  nil? "," service get_target_pool  first "," service get_target_pool to_h  first ","data attributes  first "," all  first "," service get_target_pool  empty? "," service get_target_pool to_h  empty? ","data attributes  empty? "," all  empty? "]}," Fog Compute Google TargetPools all":{"type":"method","name":"all","children":[],"call":[" load "," service list_target_pools body [] "," service list_target_pools body "," service list_target_pools ","filters [] "," service ","region [] "," service list_regions body [] each "," service list_regions body [] "," service list_regions body "," service list_regions ","filters [] nil? "," service list_target_pools to_h [] "," service list_target_pools to_h ","lst to_h [] ","lst to_h ","lst target_pools nil? ","lst target_pools ","lst nil? "," service list_aggregated_target_pools items each_value "," service list_aggregated_target_pools items "," service list_aggregated_target_pools ","region nil? ","opts []= ","next_page_token empty? ","next_page_token nil? ","data next_page_token ","items concat ","data to_h [] ","data to_h ","data items each_value ","data items "," loop ","data next_page_token  empty? ","data next_page_token  nil? "," service list_target_pools to_h []  next_page_token "," service list_target_pools  next_page_token "," service list_aggregated_target_pools  next_page_token ","data data next_page_token  "," service list_target_pools to_h []  to_h [] "," service list_target_pools  to_h [] "," service list_aggregated_target_pools  to_h [] "," service list_target_pools to_h []  to_h "," service list_target_pools  to_h "," service list_aggregated_target_pools  to_h "," service list_target_pools to_h []  items each_value "," service list_target_pools  items each_value "," service list_aggregated_target_pools  items each_value "," service list_target_pools to_h []  items "," service list_target_pools  items "," service list_aggregated_target_pools  items "]}," Fog Compute Google TargetPool reload":{"type":"method","name":"reload","children":[],"call":[" merge_attributes ","data attributes "," collection get "," region "," name "," collection "," requires "]}," Fog Compute Google TargetPool region_name":{"type":"method","name":"region_name","children":[],"call":[" region split [] "," region split "," region "," region nil? "]}," Fog Compute Google TargetPool ready?":{"type":"method","name":"ready?","children":[],"call":[" service get_target_pool "," region "," name "," service "," raise ","e status_code == ","e status_code "]}," Fog Compute Google TargetPool get_health":{"type":"method","name":"get_health","children":[],"call":[" service get_target_pool_health "," service ","Hash  [] "," instances map "," instances ","instance self_link "," service servers get "," service servers "," service get_target_pool_health to_h [] "," service get_target_pool_health to_h "," region "," identity "," requires ","  service servers get s map ","  service servers get s "," service servers get  self_link "]}," Fog Compute Google TargetPool remove_health_check":{"type":"method","name":"remove_health_check","children":[],"call":[" reload "," service remove_target_pool_health_checks "," service ","health_check self_link ","health_check class == ","health_check class "," ready? ","operation wait_for ","Fog Compute Google Operations  new get ","data region ","data name ","Fog Compute Google Operations  new "," region "," identity "," requires "," service remove_target_pool_health_check self_link s ","health_check self_link  self_link ","health_check self_link  class == ","health_check self_link  class ","Fog Compute Google Operations  new get  wait_for "," service remove_target_pool_health_checks  region "," service remove_target_pool_health_checks  name "]}," Fog Compute Google TargetPool add_health_check":{"type":"method","name":"add_health_check","children":[],"call":[" reload "," service add_target_pool_health_checks "," service ","health_check self_link ","health_check class == ","health_check class "," ready? ","operation wait_for ","Fog Compute Google Operations  new get ","data region ","data name ","Fog Compute Google Operations  new "," region "," identity "," requires "," service add_target_pool_health_check self_link s ","health_check self_link  self_link ","health_check self_link  class == ","health_check self_link  class ","Fog Compute Google Operations  new get  wait_for "," service add_target_pool_health_checks  region "," service add_target_pool_health_checks  name "]}," Fog Compute Google TargetPool remove_instance":{"type":"method","name":"remove_instance","children":[],"call":[" reload "," service remove_target_pool_instances "," service ","instance self_link ","instance class == ","instance class "," ready? ","operation wait_for ","Fog Compute Google Operations  new get ","data region ","data name ","Fog Compute Google Operations  new "," region "," identity "," requires "," service remove_target_pool_instance self_link s ","instance self_link  self_link ","instance self_link  class == ","instance self_link  class ","Fog Compute Google Operations  new get  wait_for "," service remove_target_pool_instances  region "," service remove_target_pool_instances  name "]}," Fog Compute Google TargetPool add_instance":{"type":"method","name":"add_instance","children":[],"call":[" reload "," service add_target_pool_instances "," service ","instance self_link ","instance class == ","instance class "," ready? ","operation wait_for ","Fog Compute Google Operations  new get ","data region ","data name ","Fog Compute Google Operations  new "," region "," identity "," requires "," service add_target_pool_instance self_link s ","instance self_link  self_link ","instance self_link  class == ","instance self_link  class ","Fog Compute Google Operations  new get  wait_for "," service add_target_pool_instances  region "," service add_target_pool_instances  name "]}," Fog Compute Google TargetPool destroy":{"type":"method","name":"destroy","children":[],"call":["operation body [] == ","operation body [] ","operation body "," service get_region_operation "," region "," service ","Fog  wait_for ","async ! "," service delete_target_pool "," name "," requires "," ready? ","operation wait_for ","Fog Compute Google Operations  new get ","data region ","data name ","Fog Compute Google Operations  new "," identity "," service get_region_operation  body [] == "," service delete_target_pool  body [] == ","Fog Compute Google Operations  new get  body [] == "," service get_region_operation  body [] "," service delete_target_pool  body [] ","Fog Compute Google Operations  new get  body [] "," service get_region_operation  body "," service delete_target_pool  body ","Fog Compute Google Operations  new get  body "," service get_region_ service get_region_operation  "," service get_region_ service delete_target_pool  "," service get_region_Fog Compute Google Operations  new get  "," service get_region_operation  wait_for "," service delete_target_pool  wait_for ","Fog Compute Google Operations  new get  wait_for "," service delete_target_pool  region "," service delete_target_pool  name "]}," Fog Compute Google TargetPool save":{"type":"method","name":"save","children":[],"call":[" reload "," pending? ! "," pending? ","operation wait_for ","Fog Compute Google Operations  new get ","data [] ","Fog Compute Google Operations  new "," service "," service insert_target_pool body "," service insert_target_pool "," region "," name "," backup_pool "," failover_ratio "," session_affinity "," instances "," health_checks "," description "," requires ","data region ","data name ","v nil? "," attributes reject "," attributes "," ready? ","Fog Compute Google Operations  new get  wait_for "," service insert_target_pool body  [] "," service insert_target_pool  [] "," service insert_target_pool body  region "," service insert_target_pool  region "," service insert_target_pool body  name "," service insert_target_pool  name "]}," Fog Compute Google TargetInstances get":{"type":"method","name":"get","children":[],"call":[" new ","response body ","response nil? "," service get_target_instance "," service ","target_instance first [] first ","target_instance first [] ","target_instance first ","target_instance empty? ","zone key? ","target_instances each_value select ","target_instances each_value "," service list_aggregated_target_instances body [] "," service list_aggregated_target_instances body "," service list_aggregated_target_instances "," service get_target_instance body "," raise ","e status_code == ","e status_code ","response attributes "," all first "," all "," service get_target_instance to_h ","response first ","response empty? "," service get_target_instance  body ","target_instance first [] first  body "," service get_target_instance body  body ","response attributes  body "," all first  body "," service get_target_instance to_h  body "," all  body "," service get_target_instance  nil? ","target_instance first [] first  nil? "," service get_target_instance body  nil? ","response attributes  nil? "," all first  nil? "," service get_target_instance to_h  nil? "," all  nil? "," service get_response first  "," service get_ service get_target_instance to_h  ","response first  first [] first "," service get_target_instance to_h  first [] first ","response first  first [] "," service get_target_instance to_h  first [] ","response first  first "," service get_target_instance to_h  first ","response first  empty? "," service get_target_instance to_h  empty? "," service list_aggregated_target_instances body []  each_value select ","response first s each_value select "," service get_target_instance to_h s each_value select "," service list_aggregated_target_instances body []  each_value ","response first s each_value "," service get_target_instance to_h s each_value "," service list_aggregated_ service list_aggregated_target_instances body []  body [] "," service list_aggregated_response first s body [] "," service list_aggregated_ service get_target_instance to_h s body [] "," service list_aggregated_ service list_aggregated_target_instances body []  body "," service list_aggregated_response first s body "," service list_aggregated_ service get_target_instance to_h s body "," service list_aggregated_ service list_aggregated_target_instances body []  "," service list_aggregated_response first s "," service list_aggregated_ service get_target_instance to_h s "," service get_response first  body "," service get_ service get_target_instance to_h  body "," service get_target_instance  attributes ","target_instance first [] first  attributes "," service get_target_instance body  attributes ","response attributes  attributes "," all first  attributes "," service get_target_instance to_h  attributes "," all  attributes "," service get_response first  to_h "," service get_ service get_target_instance to_h  to_h "," service get_target_instance  first ","target_instance first [] first  first "," service get_target_instance body  first ","response attributes  first "," all first  first "," all  first "," service get_target_instance  empty? ","target_instance first [] first  empty? "," service get_target_instance body  empty? ","response attributes  empty? "," all first  empty? "," all  empty? "]}," Fog Compute Google TargetInstances all":{"type":"method","name":"all","children":[],"call":[" load "," service list_target_instances body [] "," service list_target_instances body "," service list_target_instances "," service ","zone nil? ","data concat ","zone [] "," service list_aggregated_target_instances body [] each_value "," service list_aggregated_target_instances body [] "," service list_aggregated_target_instances body "," service list_aggregated_target_instances ","filters [] ","scoped_list target_instances map ","scoped_list target_instances ","scoped_list target_instances nil? ","scoped_list nil? "," service list_aggregated_target_instances items each_value "," service list_aggregated_target_instances items "," service list_target_instances to_h [] "," service list_target_instances to_h ","opts []= ","next_page_token empty? ","next_page_token nil? ","data next_page_token ","items concat ","data items each_value ","data items ","data to_h [] ","data to_h "," loop "," service list_aggregated_target_instances  concat "," service list_target_instances  concat ","data next_page_token  empty? ","data next_page_token  nil? ","data data next_page_token  "," service list_aggregated_target_instances  next_page_token "," service list_target_instances  next_page_token "," service list_aggregated_target_instances  items each_value "," service list_target_instances  items each_value "," service list_aggregated_target_instances  items "," service list_target_instances  items "," service list_aggregated_target_instances  to_h [] "," service list_target_instances  to_h [] "," service list_aggregated_target_instances  to_h "," service list_target_instances  to_h "]}," Fog Compute Google TargetInstance reload":{"type":"method","name":"reload","children":[],"call":[" merge_attributes ","data attributes "," collection get "," zone "," name "," collection "," requires "," collection get  attributes "]}," Fog Compute Google TargetInstance ready?":{"type":"method","name":"ready?","children":[],"call":[" service get_target_instance "," zone "," name "," service "," raise ","e status_code == ","e status_code "]}," Fog Compute Google TargetInstance destroy":{"type":"method","name":"destroy","children":[],"call":["operation body [] == ","operation body [] ","operation body ","Fog  wait_for ","async ! "," service delete_target_instance "," zone "," name "," service "," requires "," ready? ","operation wait_for ","Fog Compute Google Operations  new get ","data zone ","data name ","Fog Compute Google Operations  new "," service delete_target_instance  body [] == ","Fog Compute Google Operations  new get  body [] == "," service delete_target_instance  body [] ","Fog Compute Google Operations  new get  body [] "," service delete_target_instance  body ","Fog Compute Google Operations  new get  body "," service delete_target_instance  wait_for ","Fog Compute Google Operations  new get  wait_for "," service delete_target_instance  zone "," service delete_target_instance  name "]}," Fog Compute Google TargetInstance save":{"type":"method","name":"save","children":[],"call":[" reload "," pending? ! "," pending? ","operation wait_for ","Fog Compute Google Operations  new get ","data [] ","Fog Compute Google Operations  new "," service "," service insert_target_instance body "," service insert_target_instance "," zone "," name "," instance "," nat_policy "," description "," requires ","data body [] ","data body ","data zone ","data name "," identity "," ready? ","Fog Compute Google Operations  new get  wait_for "," service insert_target_instance body  [] "," service insert_target_instance  [] "," service insert_target_instance body  body [] "," service insert_target_instance  body [] "," service insert_target_instance body  body "," service insert_target_instance  body "," service insert_target_instance body  zone "," service insert_target_instance  zone "," service insert_target_instance body  name "," service insert_target_instance  name "]}," Fog Compute Google TargetHttpProxy reload":{"type":"method","name":"reload","children":[],"call":[" merge_attributes ","data attributes "," collection get "," name "," collection "," requires "," identity "]}," Fog Compute Google TargetHttpProxy ready?":{"type":"method","name":"ready?","children":[],"call":[" service get_target_http_proxy "," name "," service "," raise ","e status_code == ","e status_code "," identity "," requires "]}," Fog Compute Google TargetHttpProxy set_url_map":{"type":"method","name":"set_url_map","children":[],"call":[" reload "," service set_target_http_proxy_url_map "," service "," ready? ","operation wait_for ","Fog Compute Google Operations  new get ","data name ","Fog Compute Google Operations  new "," identity "," requires "," service set_target_http_proxy_url_map  wait_for ","Fog Compute Google Operations  new get  wait_for "," service set_target_http_proxy_url_map  name "]}," Fog Compute Google TargetHttpProxy destroy":{"type":"method","name":"destroy","children":[],"call":["operation body [] == ","operation body [] ","operation body ","Fog  wait_for ","async ! "," service delete_target_http_proxy "," name "," service "," requires "," ready? ","operation wait_for ","Fog Compute Google Operations  new get ","data name ","Fog Compute Google Operations  new "," identity "," service delete_target_http_proxy  body [] == ","Fog Compute Google Operations  new get  body [] == "," service delete_target_http_proxy  body [] ","Fog Compute Google Operations  new get  body [] "," service delete_target_http_proxy  body ","Fog Compute Google Operations  new get  body "," service delete_target_http_proxy  wait_for ","Fog Compute Google Operations  new get  wait_for "," service delete_target_http_proxy  name "]}," Fog Compute Google TargetHttpProxy save":{"type":"method","name":"save","children":[],"call":[" reload "," pending? ! "," pending? ","operation wait_for ","Fog Compute Google Operations  new get ","data [] ","Fog Compute Google Operations  new "," service "," service insert_target_http_proxy body "," service insert_target_http_proxy "," name "," urlMap "," description "," requires "," url_map ","data name "," identity "," ready? ","Fog Compute Google Operations  new get  wait_for "," service insert_target_http_proxy body  [] "," service insert_target_http_proxy  [] "," service insert_target_http_proxy body  name "," service insert_target_http_proxy  name "]}," Fog Compute Google TargetHttpProxies get":{"type":"method","name":"get","children":[],"call":[" new ","response body ","response nil? "," service get_target_http_proxy "," service "," service get_target_http_proxy body "," raise ","e status_code == ","e status_code "," service get_target_http_proxy to_h "," service get_target_http_proxy  body "," service get_target_http_proxy  nil? "," service get_ service get_target_http_proxy body  "," service get_ service get_target_http_proxy to_h  "," service get_ service get_target_http_proxy body  body "," service get_ service get_target_http_proxy to_h  body "," service get_ service get_target_http_proxy body  to_h "," service get_ service get_target_http_proxy to_h  to_h "]}," Fog Compute Google TargetHttpProxies all":{"type":"method","name":"all","children":[],"call":[" load "," service list_target_http_proxies body [] "," service list_target_http_proxies body "," service list_target_http_proxies "," service "," service list_target_http_proxies to_h [] "," service list_target_http_proxies to_h ","opts []= ","next_page_token empty? ","next_page_token nil? ","data next_page_token ","items concat ","data to_h [] ","data to_h "," loop ","data next_page_token  empty? ","data next_page_token  nil? ","data data next_page_token  "," service list_target_http_proxies  next_page_token "," service list_target_http_proxies  to_h [] "," service list_target_http_proxies  to_h "]}," Fog Compute Google Snapshots get":{"type":"method","name":"get","children":[],"call":[" new ","response body ","response nil? "," service get_snapshot "," service "," raise ","e status_code == ","e status_code ","response to_h "," service get_snapshot to_h "," service get_snapshot  body "," service get_snapshot  nil? "," service get_ service get_snapshot to_h  "," service get_snapshot  to_h "," service get_ service get_snapshot to_h  to_h "]}," Fog Compute Google Snapshots all":{"type":"method","name":"all","children":[],"call":[" load ","data body [] ","data body "," service list_snapshots "," service ","next_page_token empty? ","next_page_token nil? ","items concat "," loop ","data body [] nil? ","data next_page_token ","data to_h [] ","data to_h "," service list_snapshots  body [] "," service list_snapshots  body ","data body []  empty? ","data next_page_token  empty? ","data body []  nil? ","data next_page_token  nil? "," service list_snapshots  body [] nil? "," service list_snapshots  next_page_token ","data data body []  ","data data next_page_token  "," service list_snapshots  to_h [] "," service list_snapshots  to_h "]}," Fog Compute Google Snapshot resource_url":{"type":"method","name":"resource_url","children":[],"call":[" name "," service project "," service "]}," Fog Compute Google Snapshot ready?":{"type":"method","name":"ready?","children":[],"call":[" status == "," status "]}," Fog Compute Google Snapshot destroy":{"type":"method","name":"destroy","children":[],"call":[" ready? ","operation wait_for ","Fog Compute Google Operations  new get ","data body [] ","data body ","Fog Compute Google Operations  new "," service "," service delete_snapshot "," identity "," requires ","data name ","Fog Compute Google Operations  new get  wait_for "," service delete_snapshot  body [] "," service delete_snapshot  body "," service delete_snapshot  name "]}," Fog Compute Google Servers bootstrap":{"type":"method","name":"bootstrap","children":[],"call":[" sshable? ","server wait_for "," create ","defaults merge ","ENV  [] ","File  expand_path ","disk ready? ","disk wait_for "," service disks create ","disk_defaults merge "," service disks "," service ","new_attributes []= ","new_attributes [] ","disks empty? ","disks nil? ","Time  now to_i ","Time  now ","server save "," new ","data []= ","data [] ","opts merge ","source_img self_link "," service images get_from_family "," service images ","opts [] "," get_public_key ","server set_disk_auto_delete "," ready? ","(pair\n  (sym :name)\n  (lvar :name)) merge "," create  wait_for "," new  wait_for "," service disks create  ready? "," service disks create  wait_for "," service  service disks create s create "," service new_attributes []  create "," service opts []  create "," service disks create _defaults merge "," service  service disks create s "," service new_attributes []  "," service opts []  "," service disks create s empty? ","new_attributes []  empty? ","opts []  empty? "," service disks create s nil? ","new_attributes []  nil? ","opts []  nil? "," create  save "," new  save ","opts merge  []= ","(pair\n  (sym :name)\n  (lvar :name)) merge  []= ","opts merge  [] ","(pair\n  (sym :name)\n  (lvar :name)) merge  [] "," service images get_from_family  self_link "," get_ get_public_key  "," create  set_disk_auto_delete "," new  set_disk_auto_delete ","server set_ service disks create _auto_delete "]}," Fog Compute Google Servers get":{"type":"method","name":"get","children":[],"call":[" new ","response nil? ","server first [] first ","server first [] ","server first ","server empty? ","zone key? ","servers each_value select ","servers each_value "," service list_aggregated_servers body [] "," service list_aggregated_servers body "," service list_aggregated_servers "," service "," service get_server body "," service get_server "," raise ","e status_code == ","e status_code ","server attributes "," all first "," all "," service get_server to_h ","response first ","response empty? ","server first [] first  nil? "," service get_server body  nil? ","server attributes  nil? "," service get_server to_h  nil? "," all  nil? "," all first  first [] first ","response first  first [] first "," service get_server to_h  first [] first "," all first  first [] ","response first  first [] "," service get_server to_h  first [] "," all first  first ","response first  first "," service get_server to_h  first "," all first  empty? ","response first  empty? "," service get_server to_h  empty? "," service list_aggregated_servers body []  each_value select "," all first s each_value select ","response first s each_value select "," service get_server to_h s each_value select "," service list_aggregated_servers body []  each_value "," all first s each_value ","response first s each_value "," service get_server to_h s each_value "," service list_aggregated_ service list_aggregated_servers body []  body [] "," service list_aggregated_ all first s body [] "," service list_aggregated_response first s body [] "," service list_aggregated_ service get_server to_h s body [] "," service list_aggregated_ service list_aggregated_servers body []  body "," service list_aggregated_ all first s body "," service list_aggregated_response first s body "," service list_aggregated_ service get_server to_h s body "," service list_aggregated_ service list_aggregated_servers body []  "," service list_aggregated_ all first s "," service list_aggregated_response first s "," service list_aggregated_ service get_server to_h s "," service get_ all first  body "," service get_response first  body "," service get_ service get_server to_h  body "," service get_ all first  "," service get_response first  "," service get_ service get_server to_h  "," all first  attributes ","response first  attributes "," service get_server to_h  attributes "," service get_ all first  to_h "," service get_response first  to_h "," service get_ service get_server to_h  to_h ","server first [] first  first "," service get_server body  first ","server attributes  first "," all  first ","server first [] first  empty? "," service get_server body  empty? ","server attributes  empty? "," all  empty? "]}," Fog Compute Google Servers all":{"type":"method","name":"all","children":[],"call":[" load ","data concat ","zone [] "," service list_aggregated_servers body [] each_value "," service list_aggregated_servers body [] "," service list_aggregated_servers body "," service list_aggregated_servers "," service "," service list_servers body [] "," service list_servers body "," service list_servers ","filters [] ","scoped_lst instances map ","scoped_lst instances "," service list_aggregated_servers items each_value "," service list_aggregated_servers items "," service list_servers to_h [] "," service list_servers to_h ","opts []= ","next_page_token empty? ","next_page_token nil? ","data next_page_token ","items concat ","data items each_value ","data items ","data to_h [] ","data to_h "," loop "," service list_aggregated_servers  concat "," service list_servers  concat ","data next_page_token  empty? ","data next_page_token  nil? ","data data next_page_token  "," service list_aggregated_servers  next_page_token "," service list_servers  next_page_token "," service list_aggregated_servers  items each_value "," service list_servers  items each_value "," service list_aggregated_servers  items "," service list_servers  items "," service list_aggregated_servers  to_h [] "," service list_servers  to_h [] "," service list_aggregated_servers  to_h "," service list_servers  to_h "]}," Fog Compute Google Server save":{"type":"method","name":"save","children":[],"call":[" reload "," pending? ! "," pending? ","operation wait_for ","Fog Compute Google Operations  new get ","data body [] ","data body ","Fog Compute Google Operations  new "," service "," service insert_server "," zone_name "," name ","options []= ","w start_with? "," service_accounts map "," service_accounts ","value nil? ","(pair\n  (str \"machineType\")\n  (send nil :machine_type)) delete_if "," can_ip_forward "," on_host_maintenance "," auto_restart "," tags "," metadata "," disks "," external_ip "," network "," network_interfaces "," machine_type "," add_ssh_key "," public_key "," username "," raise ","ArgumentError  new "," zone_name inspect ","(send\n  (send\n    (send nil :service) :zones) :find) ! ","zone name == ","zone name "," service zones find "," service zones "," requires "," map_service_accounts "," preemptible "," service zones detect "," generate_ssh_key_metadata "," subnetwork ","data zone ","data name ","options [] [] []= "," attributes [] "," attributes ","options [] [] ","options [] ","options [] empty? ","options [] nil? "," service_accounts merge "," map_scopes "," service_accounts [] ","v nil? "," attributes reject "," ready? "," service_accounts [] []= "," service_accounts [] [] ","Fog Compute Google Operations  new get  wait_for "," service insert_server  body [] "," service insert_server  body "," meta service insert_server  "," generate_ssh_key_meta service insert_server  "," service insert_server  zone "," service insert_server  name "]}," Fog Compute Google Server reload":{"type":"method","name":"reload","children":[],"call":[" merge_attributes "," service get_server body "," service get_server "," zone_name "," name "," service "," service get_server to_h "]}," Fog Compute Google Server add_ssh_key":{"type":"method","name":"add_ssh_key","children":[],"call":[" metadata ","key strip "," metadata [] "," metadata [] empty? ! "," metadata [] empty? "," metadata []= "," metadata [] ! "," metadata= ","Hash  new "," metadata nil? "," metadata key? "," set_metadata "," generate_ssh_key_metadata "," reload "," ready? ","operation wait_for ","Fog Compute Google Operations  new get ","data zone ","data name ","Fog Compute Google Operations  new "," service "," service set_server_metadata ","metadata [] "," zone_name "," identity "," meta service set_server_metadata  ","  generate_ssh_key_metadata  "," meta service set_server_metadata  [] ","  generate_ssh_key_metadata  [] "," meta service set_server_metadata  [] empty? ! ","  generate_ssh_key_metadata  [] empty? ! "," meta service set_server_metadata  [] empty? ","  generate_ssh_key_metadata  [] empty? "," meta service set_server_metadata  []= ","  generate_ssh_key_metadata  []= "," meta service set_server_metadata  [] ! ","  generate_ssh_key_metadata  [] ! "," meta service set_server_metadata = ","  generate_ssh_key_metadata = "," meta service set_server_metadata  nil? ","  generate_ssh_key_metadata  nil? "," meta service set_server_metadata  key? ","  generate_ssh_key_metadata  key? "," set_meta service set_server_metadata  "," set_ generate_ssh_key_metadata  "," generate_ssh_key_meta service set_server_metadata  "," generate_ssh_key_ generate_ssh_key_metadata  ","Fog Compute Google Operations  new get  wait_for "," service set_server_metadata  zone "," service set_server_metadata  name "," service set_server_meta service set_server_metadata  "," service set_server_ generate_ssh_key_metadata  ","meta service set_server_metadata  [] "," generate_ssh_key_metadata  [] "]}," Fog Compute Google Server zone_name":{"type":"method","name":"zone_name","children":[],"call":[" zone split [] "," zone split "," zone "," zone nil? "]}," Fog Compute Google Server ready?":{"type":"method","name":"ready?","children":[],"call":[" state == "," state "," status == "," status "]}," Fog Compute Google Server set_tags":{"type":"method","name":"set_tags","children":[],"call":["Fog Compute Google Operations  new get ","data body [] ","data body ","Fog Compute Google Operations  new "," service "," service set_tags "," tags [] "," tags "," zone_name "," identity "," requires "," reload "," ready? ","operation wait_for ","data zone ","data name "," service set_server_tags "," service set_tags  body [] "," service set_server_tags  body [] "," service set_tags  body "," service set_server_tags  body ","Fog Compute Google Operations  new get  wait_for "," service set_tags  zone "," service set_server_tags  zone "," service set_tags  name "," service set_server_tags  name "]}," Fog Compute Google Server set_metadata":{"type":"method","name":"set_metadata","children":[],"call":["Fog Compute Google Operations  new get ","data body [] ","data body ","Fog Compute Google Operations  new "," service "," service set_metadata "," metadata [] "," metadata "," zone_name "," identity "," requires "," reload "," ready? ","operation wait_for ","data zone ","data name "," service set_server_metadata ","new_metadata []= ","new_metadata [] map ","new_metadata [] ","new_metadata [] is_a? ","v to_s ","k to_s ","new_metadata each map ","new_metadata each "," raise ","Fog Errors Error  new ","new_metadata is_a? "," service set_metadata  body [] "," service set_server_metadata  body [] "," service set_metadata  body "," service set_server_metadata  body "," service set_meta service set_metadata  "," service set_meta service set_server_metadata  "," meta service set_metadata  [] "," meta service set_server_metadata  [] "," meta service set_metadata  "," meta service set_server_metadata  ","Fog Compute Google Operations  new get  wait_for "," service set_metadata  zone "," service set_server_metadata  zone "," service set_metadata  name "," service set_server_metadata  name "," service set_server_meta service set_metadata  "," service set_server_meta service set_server_metadata  ","new_meta service set_metadata  []= ","new_meta service set_server_metadata  []= ","new_meta service set_metadata  [] map ","new_meta service set_server_metadata  [] map ","new_meta service set_metadata  [] ","new_meta service set_server_metadata  [] ","new_meta service set_metadata  [] is_a? ","new_meta service set_server_metadata  [] is_a? ","new_meta service set_metadata  each map ","new_meta service set_server_metadata  each map ","new_meta service set_metadata  each ","new_meta service set_server_metadata  each ","new_meta service set_metadata  is_a? ","new_meta service set_server_metadata  is_a? "]}," Fog Compute Google Server set_scheduling":{"type":"method","name":"set_scheduling","children":[],"call":["Fog Compute Google Operations  new get ","data body [] ","data body ","Fog Compute Google Operations  new "," service "," service set_server_scheduling "," zone_name "," identity "," requires "," reload "," ready? ","operation wait_for ","data zone ","data name "," service set_server_scheduling  body [] "," service set_server_scheduling  body ","Fog Compute Google Operations  new get  wait_for "," service set_server_scheduling  zone "," service set_server_scheduling  name "]}," Fog Compute Google Server set_disk_auto_delete":{"type":"method","name":"set_disk_auto_delete","children":[],"call":["Fog Compute Google Operations  new get ","data body [] ","data body ","Fog Compute Google Operations  new "," service "," service set_server_disk_auto_delete "," zone_name "," identity "," requires "," raise ","ArgumentError  new "," disks [] [] "," disks [] "," disks "," disks count <= "," disks count "," reload "," ready? ","operation wait_for ","data zone ","data name "," disks first [] "," disks first "," disks count > ","device_name nil? "," service set_server_disk_auto_delete  body [] "," service set_server_disk_auto_delete  body ","Fog Compute Google Operations  new get  wait_for "," service set_server_disk_auto_delete  zone "," service set_server_disk_auto_delete  name "," disks [] []  nil? "]}," Fog Compute Google Server serial_port_output":{"type":"method","name":"serial_port_output","children":[],"call":["data body [] ","data body "," service get_server_serial_port_output "," zone_name "," identity "," service "," requires "," service get_server_serial_port_output to_h [] "," service get_server_serial_port_output to_h "," service get_server_serial_port_output  body [] "," service get_server_serial_port_output  body "]}," Fog Compute Google Server stop":{"type":"method","name":"stop","children":[],"call":["Fog Compute Google Operations  new get ","data body [] ","data body ","Fog Compute Google Operations  new "," service "," service stop_server "," zone_name "," identity "," requires "," ready? ","operation wait_for ","data zone ","data name "," service stop_server  body [] "," service stop_server  body ","Fog Compute Google Operations  new get  wait_for "," service stop_server  zone "," service stop_server  name "]}," Fog Compute Google Server start":{"type":"method","name":"start","children":[],"call":["Fog Compute Google Operations  new get ","data body [] ","data body ","Fog Compute Google Operations  new "," service "," service start_server "," zone_name "," identity "," requires "," ready? ","operation wait_for ","data zone ","data name "," service start_server  body [] "," service start_server  body ","Fog Compute Google Operations  new get  wait_for "," service start_server  zone "," service start_server  name "]}," Fog Compute Google Server reboot":{"type":"method","name":"reboot","children":[],"call":["Fog Compute Google Operations  new get ","data body [] ","data body ","Fog Compute Google Operations  new "," service "," service reset_server "," zone_name "," identity "," requires "," ready? ","operation wait_for ","data zone ","data name "," service reset_server  body [] "," service reset_server  body ","Fog Compute Google Operations  new get  wait_for "," service reset_server  zone "," service reset_server  name "]}," Fog Compute Google Server detach_disk":{"type":"method","name":"detach_disk","children":[],"call":["Fog Compute Google Operations  new get ","data body [] ","data body ","Fog Compute Google Operations  new "," service "," service detach_disk "," zone "," identity "," requires "," reload "," ready? ","operation wait_for ","data zone ","data name "," service detach_disk  body [] "," service detach_disk  body ","Fog Compute Google Operations  new get  wait_for "," service detach_disk  zone "," service detach_disk  name "]}," Fog Compute Google Server attach_disk":{"type":"method","name":"attach_disk","children":[],"call":["Fog Compute Google Operations  new get ","data body [] ","data body ","Fog Compute Google Operations  new "," service "," service attach_disk "," zone_name "," identity "," requires "," reload "," ready? ","operation wait_for ","data zone ","data name "," service disks attached_disk_obj "," service disks ","disk is_a? ","disk get_attached_disk "," service attach_disk  body [] "," service attach_disk  body ","Fog Compute Google Operations  new get  wait_for "," service attach_disk  zone "," service attach_disk  name "," service disks attached_ service disks attached_disk_obj  "," service disks attached_disk get_attached_disk  "]}," Fog Compute Google Server addresses":{"type":"method","name":"addresses","children":[],"call":[" public_ip_address "," private_ip_address "," private_ip_addresses + "," public_ip_addresses "," private_ip_addresses "]}," Fog Compute Google Server private_ip_address":{"type":"method","name":"private_ip_address","children":[],"call":[" network_interfaces first [] "," network_interfaces first "," network_interfaces "," network_interfaces respond_to? "," private_ip_addresses first "," private_ip_addresses "," private_ network_interfaces first [] _addresses first "," private_ network_interfaces first [] _addresses "]}," Fog Compute Google Server public_ip_address":{"type":"method","name":"public_ip_address","children":[],"call":["access_config [] ","access_config [] == ","netif [] each ","netif [] ","netif [] respond_to? "," network_interfaces each "," network_interfaces "," network_interfaces respond_to? "," public_ip_addresses first "," public_ip_addresses "," public_access_config [] _addresses first "," public_access_config [] _addresses "]}," Fog Compute Google Server image":{"type":"method","name":"image","children":[],"call":[" service get_image "," image_name split [] "," image_name split "," image_name "," service ","Fog Logger  deprecation "]}," Fog Compute Google Server destroy":{"type":"method","name":"destroy","children":[],"call":[" ready? ","operation wait_for ","Fog Compute Google Operations  new get ","data body [] ","data body ","Fog Compute Google Operations  new "," service "," service delete_server "," zone_name "," name "," requires ","data zone ","data name ","Fog Compute Google Operations  new get  wait_for "," service delete_server  body [] "," service delete_server  body "," service delete_server  zone "," service delete_server  name "]}," Fog Compute Google Server flavor_id=":{"type":"method","name":"flavor_id=","children":[],"call":[]}," Fog Compute Google Server flavor_id":{"type":"method","name":"flavor_id","children":[],"call":[" machine_type "]}," Fog Compute Google Server kernel":{"type":"method","name":"kernel","children":[],"call":["Fog Logger  deprecation "," caller first "," caller "]}," Fog Compute Google Server kernel=":{"type":"method","name":"kernel=","children":[],"call":["Fog Logger  deprecation "," caller first "," caller "]}," Fog Compute Google Server image_name":{"type":"method","name":"image_name","children":[],"call":["boot_disk source_image ","boot_disk source_image nil? "," service disks get ","match [] "," service disks "," service ","source match ","boot_disk [] ","boot_disk is_a? "," disks first "," disks "," service disks get  source_image "," disks first  source_image ","boot_disk boot_disk [] _image "," service disks get  source_image nil? "," disks first  source_image nil? ","boot_disk boot_disk [] _image nil? ","source match  [] ","source source match  ","boot_disk []  match "," service disks get  [] "," disks first  [] "," service disks get  is_a? "," disks first  is_a? "]}," Fog Compute Google Server image_name=":{"type":"method","name":"image_name=","children":[],"call":["Fog Logger  deprecation "," caller first "," caller "]}," Fog Compute Google Routes get":{"type":"method","name":"get","children":[],"call":[" new "," service get_route body "," service get_route "," service "," raise ","e status_code == ","e status_code "," service get_route to_h "," service get_ service get_route body  body "," service get_ service get_route to_h  body "," service get_ service get_route body  "," service get_ service get_route to_h  "," service get_ service get_route body  to_h "," service get_ service get_route to_h  to_h "]}," Fog Compute Google Routes all":{"type":"method","name":"all","children":[],"call":[" load ","data [] "," service list_routes body "," service list_routes "," service "," service list_routes to_h ","opts []= ","next_page_token empty? ","next_page_token nil? ","data next_page_token ","items concat ","data to_h [] ","data to_h "," loop "," service list_routes body  [] "," service list_routes to_h  [] "," service list_routes  [] ","data next_page_token  empty? ","data next_page_token  nil? "," service list_routes body  next_page_token "," service list_routes to_h  next_page_token "," service list_routes  next_page_token ","data data next_page_token  "," service list_routes body  to_h [] "," service list_routes to_h  to_h [] "," service list_routes  to_h [] "," service list_routes body  to_h "," service list_routes to_h  to_h "," service list_routes  to_h "]}," Fog Compute Google Route destroy":{"type":"method","name":"destroy","children":[],"call":[" ready? ","operation wait_for ","Fog Compute Google Operations  new get ","data body [] ","data body ","Fog Compute Google Operations  new "," service "," service delete_route "," identity "," requires ","data name ","Fog Compute Google Operations  new get  wait_for "," service delete_route  body [] "," service delete_route  body "," service delete_route  name "]}," Fog Compute Google Route save":{"type":"method","name":"save","children":[],"call":[" reload "," pending? ! "," pending? ","operation wait_for ","Fog Compute Google Operations  new get ","data body [] ","data body ","Fog Compute Google Operations  new "," service "," service insert_route "," attributes "," priority "," dest_range "," network "," identity "," requires ","data name "," ready? ","Fog Compute Google Operations  new get  wait_for "," service insert_route  body [] "," service insert_route  body "," service insert_route  name "]}," Fog Compute Google ResourceViews get":{"type":"method","name":"get","children":[],"call":[" new ","response body ","response nil? "," service get_zone_view "," service "," service get_region_view ","response status == ","response status ","zone [] "," service list_zones body [] each "," service list_zones body [] "," service list_zones body "," service list_zones ","region [] "," service list_regions body [] each "," service list_regions body [] "," service list_regions body "," service list_regions ","region nil? & ","zone nil? ","region nil? "," service get_zone_view  body "," service get_region_view  body "," service get_zone_view  nil? "," service get_region_view  nil? "," service get_zone_view  status == "," service get_region_view  status == "," service get_zone_view  status "," service get_region_view  status "]}," Fog Compute Google ResourceViews all":{"type":"method","name":"all","children":[],"call":[" load "," service list_region_views body [] "," service list_region_views body "," service list_region_views ","filters [] "," service "," service list_zone_views body [] "," service list_zone_views body "," service list_zone_views "," fliters [] "," fliters ","zone [] "," service list_zones body [] each "," service list_zones body [] "," service list_zones body "," service list_zones ","region [] "," service list_regions body [] each "," service list_regions body [] "," service list_regions body "," service list_regions ","filters [] nil? "," fliters [] nil? "]}," Fog Compute Google ResourceView reload":{"type":"method","name":"reload","children":[],"call":[" merge_attributes ","data attributes "," collection get "," zone "," region "," name "," collection "," requires "]}," Fog Compute Google ResourceView ready?":{"type":"method","name":"ready?","children":[],"call":[" service get_region_view "," name "," service "," service get_zone_view "]}," Fog Compute Google ResourceView add_resources":{"type":"method","name":"add_resources","children":[],"call":[" reload "," service add_region_view_resources "," reources "," service "," service add_zone_view_resources ","resource self_link ","resource class == ","resource class ","resources map ","resources class == ","resources class "]}," Fog Compute Google ResourceView destroy":{"type":"method","name":"destroy","children":[],"call":["operation body == ","operation body ","Fog  wait_for ","async ! "," service delete_zone_view ","selflink [] "," name "," service ","selflink [] == "," service delete_region_view "," self_link split "," self_link "," requires ","operation body nil? "," service delete_zone_view  body == "," service delete_region_view  body == "," service delete_zone_view  body "," service delete_region_view  body "," self_link split  [] "," self_link split  [] == "," service delete_zone_view  body nil? "," service delete_region_view  body nil? "]}," Fog Compute Google ResourceView save":{"type":"method","name":"save","children":[],"call":[" reload "," service get_zone_view body "," service get_zone_view ","data [] [] ","data [] "," service "," service insert_zone_view body "," service insert_zone_view "," zone "," name "," num_members "," last_modified "," description "," service get_region_view body "," service get_region_view "," service insert_region_view body "," service insert_region_view "," region "," requires "," service insert_zone_view body  [] [] "," service insert_region_view body  [] [] "," service insert_zone_view body  [] "," service insert_region_view body  [] "]}," Fog Compute Google Regions get":{"type":"method","name":"get","children":[],"call":[" new "," service get_region body "," service get_region "," service "," raise ","e status_code == ","e status_code "," service get_region to_h "," service get_ service get_region body  body "," service get_ service get_region to_h  body "," service get_ service get_region body  "," service get_ service get_region to_h  "," service get_ service get_region body  to_h "," service get_ service get_region to_h  to_h "]}," Fog Compute Google Regions all":{"type":"method","name":"all","children":[],"call":[" load ","data [] "," service list_regions body "," service list_regions "," service "," service list_regions to_h ","opts []= ","next_page_token empty? ","next_page_token nil? ","data next_page_token ","items concat ","data to_h [] ","data to_h "," loop "," service list_regions body  [] "," service list_regions to_h  [] "," service list_regions  [] ","data next_page_token  empty? ","data next_page_token  nil? "," service list_regions body  next_page_token "," service list_regions to_h  next_page_token "," service list_regions  next_page_token ","data data next_page_token  "," service list_regions body  to_h [] "," service list_regions to_h  to_h [] "," service list_regions  to_h [] "," service list_regions body  to_h "," service list_regions to_h  to_h "," service list_regions  to_h "]}," Fog Compute Google Region up?":{"type":"method","name":"up?","children":[],"call":[" status == "," status "]}," Fog Compute Google Projects get":{"type":"method","name":"get","children":[],"call":[" new "," service get_project body "," service get_project "," service "," raise ","e status_code == ","e status_code "," service get_project to_h "," service get_ service get_project body  body "," service get_ service get_project to_h  body "," service get_ service get_project body  "," service get_ service get_project to_h  "," service get_ service get_project body  to_h "," service get_ service get_project to_h  to_h "]}," Fog Compute Google Project set_metadata":{"type":"method","name":"set_metadata","children":[],"call":["Fog Compute Google Operations  new get ","data body [] ","data body ","Fog Compute Google Operations  new "," service "," service set_common_instance_metadata "," common_instance_metadata [] "," common_instance_metadata "," identity "," requires ","operation id "," service set_common_instance_metadata  body [] "," service set_common_instance_metadata  body "," service set_common_instance_meta service set_common_instance_metadata  "," common_instance_meta service set_common_instance_metadata  [] "," common_instance_meta service set_common_instance_metadata  "," service set_common_instance_metadata  id "]}," Fog Compute Google Operations get":{"type":"method","name":"get","children":[],"call":[" new ","response body ","response nil? "," service get_global_operation "," service "," service get_region_operation ","region nil? ! ","region nil? "," service get_zone_operation ","zone nil? ! ","zone nil? "," raise ","e status_code == ","e status_code ","response to_h "," service get_global_operation to_h "," service get_region_operation to_h "," service get_zone_operation to_h "," service get_global_operation  body "," service get_region_operation  body "," service get_zone_operation  body "," service get_global_operation  nil? "," service get_region_operation  nil? "," service get_zone_operation  nil? "," service get_global_ service get_global_operation to_h  "," service get_global_ service get_region_operation to_h  "," service get_global_ service get_zone_operation to_h  "," service get_region_ service get_global_operation to_h  "," service get_region_ service get_region_operation to_h  "," service get_region_ service get_zone_operation to_h  "," service get_zone_ service get_global_operation to_h  "," service get_zone_ service get_region_operation to_h  "," service get_zone_ service get_zone_operation to_h  "," service get_global_operation  to_h "," service get_region_operation  to_h "," service get_zone_operation  to_h "," service get_global_ service get_global_operation to_h  to_h "," service get_global_ service get_region_operation to_h  to_h "," service get_global_ service get_zone_operation to_h  to_h "," service get_region_ service get_global_operation to_h  to_h "," service get_region_ service get_region_operation to_h  to_h "," service get_region_ service get_zone_operation to_h  to_h "," service get_zone_ service get_global_operation to_h  to_h "," service get_zone_ service get_region_operation to_h  to_h "," service get_zone_ service get_zone_operation to_h  to_h "]}," Fog Compute Google Operations all":{"type":"method","name":"all","children":[],"call":[" load ","data [] "," service list_global_operations body "," service list_global_operations "," service "," service list_region_operations body "," service list_region_operations ","filters [] "," service list_zone_operations body "," service list_zone_operations "," service list_global_operations to_h [] "," service list_global_operations to_h "," service list_region_operations to_h [] "," service list_region_operations to_h "," regions "," service list_zone_operations to_h [] "," service list_zone_operations to_h ","opts []= ","next_page_token empty? ","next_page_token nil? ","data next_page_token ","items concat ","data to_h [] ","data to_h "," loop "," service list_global_operations body  [] "," service list_region_operations body  [] "," service list_zone_operations body  [] "," service list_global_operations to_h []  [] "," service list_region_operations to_h []  [] "," service list_zone_operations to_h []  [] "," service list_global_operations  [] "," service list_region_operations  [] "," service list_zone_operations  [] ","data next_page_token  empty? ","data next_page_token  nil? "," service list_global_operations body  next_page_token "," service list_region_operations body  next_page_token "," service list_zone_operations body  next_page_token "," service list_global_operations to_h []  next_page_token "," service list_region_operations to_h []  next_page_token "," service list_zone_operations to_h []  next_page_token "," service list_global_operations  next_page_token "," service list_region_operations  next_page_token "," service list_zone_operations  next_page_token ","data data next_page_token  "," service list_global_operations body  to_h [] "," service list_region_operations body  to_h [] "," service list_zone_operations body  to_h [] "," service list_global_operations to_h []  to_h [] "," service list_region_operations to_h []  to_h [] "," service list_zone_operations to_h []  to_h [] "," service list_global_operations  to_h [] "," service list_region_operations  to_h [] "," service list_zone_operations  to_h [] "," service list_global_operations body  to_h "," service list_region_operations body  to_h "," service list_zone_operations body  to_h "," service list_global_operations to_h []  to_h "," service list_region_operations to_h []  to_h "," service list_zone_operations to_h []  to_h "," service list_global_operations  to_h "," service list_region_operations  to_h "," service list_zone_operations  to_h "]}," Fog Compute Google Operation reload":{"type":"method","name":"reload","children":[],"call":[" merge_attributes ","data attributes "," collection get "," region "," zone "," identity "," collection "," requires "," collection get  attributes "]}," Fog Compute Google Operation destroy":{"type":"method","name":"destroy","children":[],"call":[" service delete_global_operation "," identity "," service "," service delete_region_operation "," region "," service delete_zone_operation "," zone "," requires "]}," Fog Compute Google Operation zone_name":{"type":"method","name":"zone_name","children":[],"call":[" zone split [] "," zone split "," zone "," zone nil? "]}," Fog Compute Google Operation region_name":{"type":"method","name":"region_name","children":[],"call":[" region split [] "," region split "," region "," region nil? "]}," Fog Compute Google Operation pending?":{"type":"method","name":"pending?","children":[],"call":[" status == "," status "]}," Fog Compute Google Operation ready?":{"type":"method","name":"ready?","children":[],"call":[" status == "," status "]}," Fog Compute Google Networks get":{"type":"method","name":"get","children":[],"call":[" new "," service get_network body "," service get_network "," service "," raise ","e status_code == ","e status_code "," service get_network to_h "," service get_ service get_network body  body "," service get_ service get_network to_h  body "," service get_ service get_network body  "," service get_ service get_network to_h  "," service get_ service get_network body  to_h "," service get_ service get_network to_h  to_h "]}," Fog Compute Google Networks all":{"type":"method","name":"all","children":[],"call":[" load ","data [] "," service list_networks body "," service list_networks "," service "," service list_networks to_h [] "," service list_networks to_h ","opts []= ","next_page_token empty? ","next_page_token nil? ","data next_page_token ","items concat ","data to_h [] ","data to_h "," loop "," service list_networks body  [] "," service list_networks to_h []  [] "," service list_networks  [] ","data next_page_token  empty? ","data next_page_token  nil? "," service list_networks body  next_page_token "," service list_networks to_h []  next_page_token "," service list_networks  next_page_token ","data data next_page_token  "," service list_networks body  to_h [] "," service list_networks to_h []  to_h [] "," service list_networks  to_h [] "," service list_networks body  to_h "," service list_networks to_h []  to_h "," service list_networks  to_h "]}," Fog Compute Google Network destroy":{"type":"method","name":"destroy","children":[],"call":[" ready? ","operation wait_for ","Fog Compute Google Operations  new get ","data body [] ","data body ","Fog Compute Google Operations  new "," service "," service delete_network "," identity "," requires ","data name ","Fog Compute Google Operations  new get  wait_for "," service delete_network  body [] "," service delete_network  body "," service delete_network  name "]}," Fog Compute Google Network save":{"type":"method","name":"save","children":[],"call":[" reload "," pending? ! "," pending? ","operation wait_for ","Fog Compute Google Operations  new get ","data body [] ","data body ","Fog Compute Google Operations  new "," service "," service insert_network "," attributes "," ipv4_range "," identity "," requires "," ready? ","data name ","Fog Compute Google Operations  new get  wait_for "," service insert_network  body [] "," service insert_network  body "," service insert_network  name "]}," Fog Compute Google Images get":{"type":"method","name":"get","children":[],"call":["Fog Errors NotFound  new ","all_projects join "," new ","data nil? ","data []= "," service get_image body "," service get_image "," service ","all_projects each ","(send\n  (send\n    (self) :service) :project) + "," service project "," global_projects ","(send\n  (send nil :service) :project) + "," all_projects each "," all_projects ","e status_code == ","e status_code "," service get_image to_h ","projects each ","project nil? ","response []= "," raise ","image []= ","(send\n  (send\n    (self) :service) :project) +  join ","(send\n  (send nil :service) :project) +  join ","all_ all_projects  join "," service get_image body  nil? "," service get_image to_h  nil? "," service get_image body  []= "," service get_image to_h  []= "," service get_ service get_image to_h  body "," service get_ service get_image to_h  ","(send\n  (send\n    (self) :service) :project) +  each ","(send\n  (send nil :service) :project) +  each ","all_ all_projects  each "," global_ all_projects  "," (send\n  (send\n    (self) :service) :project) +  each "," (send\n  (send nil :service) :project) +  each "," all_ all_projects  each "," (send\n  (send\n    (self) :service) :project) +  "," (send\n  (send nil :service) :project) +  "," all_ all_projects  "," service get_ service get_image to_h  to_h "," all_projects  each "]}," Fog Compute Google Images all":{"type":"method","name":"all","children":[],"call":[" load ","img []= ","images each "," service list_images body [] "," service list_images body "," service list_images "," service ","all_projects each ","GLOBAL_PROJECTS  + "," service project ","(send\n  (send\n    (self) :service) :project) + "," global_projects ","(send\n  (send nil :service) :project) + "," all_projects each "," all_projects ","data flatten "," raise ","e status_code == ","e status_code ","img to_h merge ","img to_h ","images map "," service list_images items "," all_projects map ","next_page_token empty? ","next_page_token nil? ","data next_page_token ","items concat ","img merge! ","data items ","opts []= "," loop ","GLOBAL_PROJECTS  +  each ","(send\n  (send\n    (self) :service) :project) +  each ","(send\n  (send nil :service) :project) +  each "," GLOBAL_PROJECTS  +  each "," (send\n  (send\n    (self) :service) :project) +  each "," (send\n  (send nil :service) :project) +  each "," GLOBAL_PROJECTS  +  "," (send\n  (send\n    (self) :service) :project) +  "," (send\n  (send nil :service) :project) +  ","data flatten  flatten "," service list_images  flatten "," GLOBAL_PROJECTS  +  map "," (send\n  (send\n    (self) :service) :project) +  map "," (send\n  (send nil :service) :project) +  map ","data next_page_token  empty? ","data next_page_token  nil? ","data flatten  next_page_token "," service list_images  next_page_token ","data data next_page_token  ","data flatten  items "," service list_images  items "]}," Fog Compute Google Image resource_url":{"type":"method","name":"resource_url","children":[],"call":[" name "," project "]}," Fog Compute Google Image save":{"type":"method","name":"save","children":[],"call":[" reload "," pending? ! "," pending? ","operation wait_for ","Fog Compute Google Operations  new get ","data body [] ","data body ","Fog Compute Google Operations  new "," service "," service insert_image "," name "," description "," raw_disk "," requires ","data name "," attributes "," ready? ","Fog Compute Google Operations  new get  wait_for "," service insert_image  body [] "," service insert_image  body "," service insert_image  name "]}," Fog Compute Google Image reload":{"type":"method","name":"reload","children":[],"call":[" merge_attributes "," service get_image body "," service get_image "," project "," name "," service "," project= "," service project "," requires ","data to_h "," service get_image body  to_h "," service get_image  to_h "]}," Fog Compute Google Image destroy":{"type":"method","name":"destroy","children":[],"call":[" ready? ","operation wait_for ","Fog Compute Google Operations  new get ","data body [] ","data body ","Fog Compute Google Operations  new "," service "," service delete_image "," name ","data name ","Fog Compute Google Operations  new get  wait_for "," service delete_image  body [] "," service delete_image  body "," service delete_image  name "]}," Fog Compute Google Image ready?":{"type":"method","name":"ready?","children":[],"call":[" status == "," status "]}," Fog Compute Google Image preferred_kernel":{"type":"method","name":"preferred_kernel","children":[],"call":["Fog Logger  deprecation "," caller first "," caller "]}," Fog Compute Google Image preferred_kernel=":{"type":"method","name":"preferred_kernel=","children":[],"call":["Fog Logger  deprecation "," caller first "," caller "]}," Fog Compute Google HttpHealthChecks get":{"type":"method","name":"get","children":[],"call":[" new ","response body ","response nil? "," service get_http_health_check "," service "," raise ","e status_code == ","e status_code ","response to_h "," service get_http_health_check to_h "," service get_http_health_check  body "," service get_http_health_check  nil? "," service get_ service get_http_health_check to_h  "," service get_http_health_check  to_h "," service get_ service get_http_health_check to_h  to_h "]}," Fog Compute Google HttpHealthChecks all":{"type":"method","name":"all","children":[],"call":[" load "," service list_http_health_checks body [] "," service list_http_health_checks body "," service list_http_health_checks "," service "," service list_http_health_checks to_h [] "," service list_http_health_checks to_h ","opts []= ","next_page_token empty? ","next_page_token nil? ","data next_page_token ","items concat ","data to_h [] ","data to_h "," loop ","data next_page_token  empty? ","data next_page_token  nil? ","data data next_page_token  "," service list_http_health_checks  next_page_token "," service list_http_health_checks  to_h [] "," service list_http_health_checks  to_h "]}," Fog Compute Google HttpHealthCheck reload":{"type":"method","name":"reload","children":[],"call":[" merge_attributes ","data attributes "," collection get "," name "," collection "," requires "]}," Fog Compute Google HttpHealthCheck ready?":{"type":"method","name":"ready?","children":[],"call":[" service get_http_health_check "," name "," service "," raise ","e status_code == ","e status_code "]}," Fog Compute Google HttpHealthCheck destroy":{"type":"method","name":"destroy","children":[],"call":["operation body [] == ","operation body [] ","operation body "," service get_global_operation "," service ","Fog  wait_for ","async ! "," service delete_http_health_check "," name "," requires "," ready? ","operation wait_for ","Fog Compute Google Operations  new get ","data name ","Fog Compute Google Operations  new "," service get_global_operation  body [] == "," service delete_http_health_check  body [] == ","Fog Compute Google Operations  new get  body [] == "," service get_global_operation  body [] "," service delete_http_health_check  body [] ","Fog Compute Google Operations  new get  body [] "," service get_global_operation  body "," service delete_http_health_check  body ","Fog Compute Google Operations  new get  body "," service get_global_ service get_global_operation  "," service get_global_ service delete_http_health_check  "," service get_global_Fog Compute Google Operations  new get  "," service get_global_operation  wait_for "," service delete_http_health_check  wait_for ","Fog Compute Google Operations  new get  wait_for "," service delete_http_health_check  name "]}," Fog Compute Google HttpHealthCheck save":{"type":"method","name":"save","children":[],"call":[" reload "," pending? ! "," pending? ","operation wait_for ","Fog Compute Google Operations  new get ","data [] ","Fog Compute Google Operations  new "," service "," service insert_http_health_check body "," service insert_http_health_check "," name "," healthy_threshold "," unhealthy_threshold "," timeout_sec "," check_interval_sec "," port "," request_path "," host "," description "," requires "," update "," create "," id nil? "," id "," creation_timestamp ","Fog Compute Google Operations  new get  wait_for "," service insert_http_health_check body  [] "]}," Fog Compute Google GlobalForwardingRules get":{"type":"method","name":"get","children":[],"call":[" new ","response body ","response nil? "," service get_global_forwarding_rule "," service "," service get_global_forwarding_rule body "," raise ","e status_code == ","e status_code "," service get_global_forwarding_rule to_h "," service get_global_forwarding_rule  body "," service get_global_forwarding_rule  nil? "," service get_ service get_global_forwarding_rule body  "," service get_global_forwarding_ service get_global_forwarding_rule to_h  "," service get_ service get_global_forwarding_rule body  body "," service get_global_forwarding_ service get_global_forwarding_rule to_h  body "," service get_ service get_global_forwarding_rule body  to_h "," service get_global_forwarding_ service get_global_forwarding_rule to_h  to_h "]}," Fog Compute Google GlobalForwardingRules all":{"type":"method","name":"all","children":[],"call":[" load "," service list_global_forwarding_rules body [] "," service list_global_forwarding_rules body "," service list_global_forwarding_rules "," service "," service list_global_forwarding_rules to_h [] "," service list_global_forwarding_rules to_h ","opts []= ","next_page_token empty? ","next_page_token nil? ","data next_page_token ","items concat ","data to_h [] ","data to_h "," loop ","data next_page_token  empty? ","data next_page_token  nil? ","data data next_page_token  "," service list_global_forwarding_rules  next_page_token "," service list_global_forwarding_rules  to_h [] "," service list_global_forwarding_rules  to_h "]}," Fog Compute Google GlobalForwardingRule reload":{"type":"method","name":"reload","children":[],"call":[" merge_attributes ","data attributes "," collection get "," name "," collection "," requires "]}," Fog Compute Google GlobalForwardingRule ready?":{"type":"method","name":"ready?","children":[],"call":[" service get_global_forwarding_rule "," name "," service "," raise ","e status_code == ","e status_code "]}," Fog Compute Google GlobalForwardingRule set_target":{"type":"method","name":"set_target","children":[],"call":[" reload "," service set_global_forwarding_rule_target "," service "," target= ","new_target self_link ","new_target class == ","new_target class "," identity "," requires ","new_target self_link  self_link ","new_target self_link  class == ","new_target self_link  class "]}," Fog Compute Google GlobalForwardingRule destroy":{"type":"method","name":"destroy","children":[],"call":["operation body [] == ","operation body [] ","operation body ","Fog  wait_for ","async ! "," service delete_global_forwarding_rule "," name "," service "," requires "," ready? ","operation wait_for ","Fog Compute Google Operations  new get ","data region ","data name ","Fog Compute Google Operations  new "," identity "," service delete_global_forwarding_rule  body [] == ","Fog Compute Google Operations  new get  body [] == "," service delete_global_forwarding_rule  body [] ","Fog Compute Google Operations  new get  body [] "," service delete_global_forwarding_rule  body ","Fog Compute Google Operations  new get  body "," service delete_global_forwarding_rule  wait_for ","Fog Compute Google Operations  new get  wait_for "," service delete_global_forwarding_rule  region "," service delete_global_forwarding_rule  name "]}," Fog Compute Google GlobalForwardingRule save":{"type":"method","name":"save","children":[],"call":[" reload "," pending? ! "," pending? ","operation wait_for ","Fog Compute Google Operations  new get ","data [] ","Fog Compute Google Operations  new "," service "," service insert_global_forwarding_rule body "," service insert_global_forwarding_rule "," name "," target "," port_range "," ip_protocol "," ip_address "," description "," requires ","data region ","data name "," attributes "," identity "," ready? ","Fog Compute Google Operations  new get  wait_for "," service insert_global_forwarding_rule body  [] "," service insert_global_forwarding_rule  [] "," service insert_global_forwarding_rule body  region "," service insert_global_forwarding_rule  region "," service insert_global_forwarding_rule body  name "," service insert_global_forwarding_rule  name "]}," Fog Compute Google ForwardingRules get":{"type":"method","name":"get","children":[],"call":[" new ","response body ","response nil? "," service get_forwarding_rule "," service ","response status == ","response status ","region [] "," service list_regions body [] each "," service list_regions body [] "," service list_regions body "," service list_regions ","region nil? ","response attributes "," all first "," all "," service get_forwarding_rule to_h ","response first ","response empty? "," service get_forwarding_rule  body ","response attributes  body "," all first  body "," service get_forwarding_rule to_h  body "," all  body "," service get_forwarding_rule  nil? ","response attributes  nil? "," all first  nil? "," service get_forwarding_rule to_h  nil? "," all  nil? "," service get_response first  "," service get_ service get_forwarding_rule to_h  "," service get_forwarding_rule  status == ","response attributes  status == "," all first  status == "," service get_forwarding_rule to_h  status == "," all  status == "," service get_forwarding_rule  status ","response attributes  status "," all first  status "," service get_forwarding_rule to_h  status "," all  status "," service get_forwarding_rule  attributes ","response attributes  attributes "," all first  attributes "," service get_forwarding_rule to_h  attributes "," all  attributes "," service get_response first  to_h "," service get_ service get_forwarding_rule to_h  to_h "," service get_forwarding_rule  first ","response attributes  first "," all first  first "," service get_forwarding_rule to_h  first "," all  first "," service get_forwarding_rule  empty? ","response attributes  empty? "," all first  empty? "," service get_forwarding_rule to_h  empty? "," all  empty? "]}," Fog Compute Google ForwardingRules all":{"type":"method","name":"all","children":[],"call":[" load "," service list_forwarding_rules body [] "," service list_forwarding_rules body "," service list_forwarding_rules ","filters [] "," service ","region [] "," service list_regions body [] each "," service list_regions body [] "," service list_regions body "," service list_regions ","filters [] nil? ","data map ","data concat ","scoped_list forwarding_rules "," service list_aggregated_forwarding_rules items each_value "," service list_aggregated_forwarding_rules items "," service list_aggregated_forwarding_rules "," service list_forwarding_rules items ","items map ","opts []= ","next_page_token empty? ","next_page_token nil? ","data next_page_token ","items concat ","data items each_value ","data items "," loop "," service list_forwarding_rules items  map "," service list_aggregated_forwarding_rules  map "," service list_forwarding_rules  map "," service list_forwarding_rules items  concat "," service list_aggregated_forwarding_rules  concat "," service list_forwarding_rules  concat ","data next_page_token  empty? ","data next_page_token  nil? "," service list_forwarding_rules items  next_page_token "," service list_aggregated_forwarding_rules  next_page_token "," service list_forwarding_rules  next_page_token ","data data next_page_token  "," service list_forwarding_rules items  items each_value "," service list_aggregated_forwarding_rules  items each_value "," service list_forwarding_rules  items each_value "," service list_forwarding_rules items  items "," service list_aggregated_forwarding_rules  items "," service list_forwarding_rules  items "]}," Fog Compute Google ForwardingRule reload":{"type":"method","name":"reload","children":[],"call":[" merge_attributes ","data attributes "," collection get "," region "," name "," collection "," requires "]}," Fog Compute Google ForwardingRule ready?":{"type":"method","name":"ready?","children":[],"call":[" service get_forwarding_rule "," region "," name "," service "," raise ","e status_code == ","e status_code "," identity "," requires "]}," Fog Compute Google ForwardingRule destroy":{"type":"method","name":"destroy","children":[],"call":["operation body [] == ","operation body [] ","operation body "," service get_region_operation "," region "," service ","Fog  wait_for ","async ! "," service delete_forwarding_rule "," name "," requires "," ready? ","operation wait_for ","Fog Compute Google Operations  new get ","data region ","data name ","Fog Compute Google Operations  new "," identity "," service get_region_operation  body [] == "," service delete_forwarding_rule  body [] == ","Fog Compute Google Operations  new get  body [] == "," service get_region_operation  body [] "," service delete_forwarding_rule  body [] ","Fog Compute Google Operations  new get  body [] "," service get_region_operation  body "," service delete_forwarding_rule  body ","Fog Compute Google Operations  new get  body "," service get_region_ service get_region_operation  "," service get_region_ service delete_forwarding_rule  "," service get_region_Fog Compute Google Operations  new get  "," service get_region_operation  wait_for "," service delete_forwarding_rule  wait_for ","Fog Compute Google Operations  new get  wait_for "," service delete_forwarding_rule  region "," service delete_forwarding_rule  name "]}," Fog Compute Google ForwardingRule set_target":{"type":"method","name":"set_target","children":[],"call":[" reload "," service set_forwarding_rule_target "," service "," target= ","new_target self_link ","new_target class == ","new_target class "," region "," identity "," requires ","new_target self_link  self_link ","new_target self_link  class == ","new_target self_link  class "]}," Fog Compute Google ForwardingRule save":{"type":"method","name":"save","children":[],"call":[" reload "," pending? ! "," pending? ","operation wait_for ","Fog Compute Google Operations  new get ","data [] ","Fog Compute Google Operations  new "," service "," service insert_forwarding_rule body "," service insert_forwarding_rule "," region "," name "," target "," port_range "," ip_protocol "," ip_address "," description "," requires ","data region ","data name "," attributes "," identity "," ready? ","Fog Compute Google Operations  new get  wait_for "," service insert_forwarding_rule body  [] "," service insert_forwarding_rule  [] "," service insert_forwarding_rule body  region "," service insert_forwarding_rule  region "," service insert_forwarding_rule body  name "," service insert_forwarding_rule  name "]}," Fog Compute Google Flavors get":{"type":"method","name":"get","children":[],"call":[" new "," service get_machine_type body "," service get_machine_type "," service "]}," Fog Compute Google Flavors all":{"type":"method","name":"all","children":[],"call":[" load ","data concat ","zone [] "," service list_aggregated_machine_types body [] each_value "," service list_aggregated_machine_types body [] "," service list_aggregated_machine_types body "," service list_aggregated_machine_types "," service "," service list_machine_types body [] "," service list_machine_types body "," service list_machine_types ","filters [] "," service list_machine_types body []  concat "]}," Fog Compute Google Flavor reload":{"type":"method","name":"reload","children":[],"call":[" merge_attributes ","data attributes "," collection get "," zone "," identity "," collection "," requires "," collection get  attributes "]}," Fog Compute Google Firewalls get":{"type":"method","name":"get","children":[],"call":[" new "," service get_firewall body "," service get_firewall "," service "," raise ","e status_code == ","e status_code ","firewall to_h "," service get_firewall to_h "," service get_ service get_firewall body  body "," service get_ service get_firewall  body "," service get_ service get_firewall to_h  body "," service get_ service get_firewall body  "," service get_ service get_firewall  "," service get_ service get_firewall to_h  "," service get_firewall body  to_h "," service get_firewall  to_h "," service get_firewall to_h  to_h "," service get_ service get_firewall body  to_h "," service get_ service get_firewall  to_h "," service get_ service get_firewall to_h  to_h "]}," Fog Compute Google Firewalls all":{"type":"method","name":"all","children":[],"call":[" load ","data [] "," service list_firewalls body "," service list_firewalls "," service "," service list_firewalls to_h [] "," service list_firewalls to_h ","opts []= ","next_page_token empty? ","next_page_token nil? ","data next_page_token ","items concat ","data to_h [] ","data to_h "," loop "," service list_firewalls body  [] "," service list_firewalls to_h []  [] "," service list_firewalls  [] ","data next_page_token  empty? ","data next_page_token  nil? "," service list_firewalls body  next_page_token "," service list_firewalls to_h []  next_page_token "," service list_firewalls  next_page_token ","data data next_page_token  "," service list_firewalls body  to_h [] "," service list_firewalls to_h []  to_h [] "," service list_firewalls  to_h [] "," service list_firewalls body  to_h "," service list_firewalls to_h []  to_h "," service list_firewalls  to_h "]}," Fog Compute Google Firewall destroy":{"type":"method","name":"destroy","children":[],"call":[" ready? ","operation wait_for ","Fog Compute Google Operations  new get ","data body [] ","data body ","Fog Compute Google Operations  new "," service "," service delete_firewall "," identity "," requires ","data name ","Fog Compute Google Operations  new get  wait_for "," service delete_firewall  body [] "," service delete_firewall  body "," service delete_firewall  name "]}," Fog Compute Google Firewall save":{"type":"method","name":"save","children":[],"call":[" reload "," pending? ! "," pending? ","operation wait_for ","Fog Compute Google Operations  new get ","data body [] ","data body ","Fog Compute Google Operations  new "," service "," service insert_firewall "," attributes "," network "," allowed "," identity "," requires "," update "," create "," id nil? "," id "," raise ","Fog Errors Error  new "," denied ","Fog Compute Google Operations  new get  wait_for "," service insert_firewall  body [] "," service insert_firewall  body "]}," Fog Compute Google Disks get":{"type":"method","name":"get","children":[],"call":[" new ","response nil? ","disk first [] first ","disk first [] ","disk first ","disk empty? ","zone key? ","disks each_value select ","disks each_value "," service list_aggregated_disks body [] "," service list_aggregated_disks body "," service list_aggregated_disks "," service "," service get_disk body "," service get_disk "," raise ","e status_code == ","e status_code ","response to_h ","response first ","response empty? "," all "," service get_disk to_h ","disk first [] first  nil? "," service get_disk body  nil? "," service get_disk  nil? "," all  nil? ","response first  first [] first "," service get_disk to_h  first [] first ","response first  first [] "," service get_disk to_h  first [] ","response first  first "," service get_disk to_h  first ","response first  empty? "," service get_disk to_h  empty? "," service list_aggregated_disks body []  each_value select ","response first s each_value select "," service get_disk to_h s each_value select "," service list_aggregated_disks body []  each_value ","response first s each_value "," service get_disk to_h s each_value "," service list_aggregated_ service list_aggregated_disks body []  body [] "," service list_aggregated_response first s body [] "," service list_aggregated_ service get_disk to_h s body [] "," service list_aggregated_ service list_aggregated_disks body []  body "," service list_aggregated_response first s body "," service list_aggregated_ service get_disk to_h s body "," service list_aggregated_ service list_aggregated_disks body []  "," service list_aggregated_response first s "," service list_aggregated_ service get_disk to_h s "," service get_response first  body "," service get_ service get_disk to_h  body "," service get_response first  "," service get_ service get_disk to_h  ","disk first [] first  to_h "," service get_disk body  to_h "," service get_disk  to_h "," all  to_h ","disk first [] first  first "," service get_disk body  first "," service get_disk  first "," all  first ","disk first [] first  empty? "," service get_disk body  empty? "," service get_disk  empty? "," all  empty? "," service get_response first  to_h "," service get_ service get_disk to_h  to_h "]}," Fog Compute Google Disks all":{"type":"method","name":"all","children":[],"call":[" load ","data concat ","zone [] "," service list_aggregated_disks body [] each_value "," service list_aggregated_disks body [] "," service list_aggregated_disks body "," service list_aggregated_disks "," service "," service list_disks body [] "," service list_disks body "," service list_disks ","filters [] ","data map ","scoped_list disks "," service list_aggregated_disks items each_value "," service list_aggregated_disks items "," service list_disks items ","items map ","opts []= ","next_page_token empty? ","next_page_token nil? ","data next_page_token ","items concat ","data items each_value ","data items "," loop "," service list_aggregated_disks  concat "," service list_disks  concat "," service list_aggregated_disks  map "," service list_disks  map ","data next_page_token  empty? ","data next_page_token  nil? ","data data next_page_token  "," service list_aggregated_disks  next_page_token "," service list_disks  next_page_token "," service list_aggregated_disks  items each_value "," service list_disks  items each_value "," service list_aggregated_disks  items "," service list_disks  items "]}," Fog Compute Google DiskTypes get":{"type":"method","name":"get","children":[],"call":[" new ","response nil? ","disk_type [] first ","disk_type [] ","disk_type empty? ","zone key? ","disk_types each_value detect ","disk_types each_value "," service list_aggregated_disk_types body [] "," service list_aggregated_disk_types body "," service list_aggregated_disk_types "," service "," service get_disk_type body "," service get_disk_type "," raise ","e status_code == ","e status_code ","disk_types first attributes ","disk_types first ","disk_types empty? "," all "," service get_disk_type to_h ","response first ","response empty? ","disk_type [] first  nil? "," service get_disk_type body  nil? ","disk_types first attributes  nil? "," service get_disk_type to_h  nil? "," all  nil? ","response first  [] first "," service get_disk_type to_h  [] first ","response first  [] "," service get_disk_type to_h  [] ","response first  empty? "," service get_disk_type to_h  empty? "," all  each_value detect ","response first s each_value detect "," service get_disk_type to_h s each_value detect "," all  each_value ","response first s each_value "," service get_disk_type to_h s each_value "," service list_aggregated_ all  body [] "," service list_aggregated_response first s body [] "," service list_aggregated_ service get_disk_type to_h s body [] "," service list_aggregated_ all  body "," service list_aggregated_response first s body "," service list_aggregated_ service get_disk_type to_h s body "," service list_aggregated_ all  "," service list_aggregated_response first s "," service list_aggregated_ service get_disk_type to_h s "," service get_response first  body "," service get_ service get_disk_type to_h  body "," service get_response first  "," service get_ service get_disk_type to_h  "," all  first attributes ","response first s first attributes "," service get_disk_type to_h s first attributes "," all  first ","response first s first "," service get_disk_type to_h s first "," all  empty? ","response first s empty? "," service get_disk_type to_h s empty? "," service get_response first  to_h "," service get_ service get_disk_type to_h  to_h ","disk_type [] first  first "," service get_disk_type body  first ","disk_types first attributes  first "," service get_disk_type to_h  first ","disk_type [] first  empty? "," service get_disk_type body  empty? ","disk_types first attributes  empty? "]}," Fog Compute Google DiskTypes all":{"type":"method","name":"all","children":[],"call":[" load ","data concat ","zone [] "," service list_aggregated_disk_types body [] each_value "," service list_aggregated_disk_types body [] "," service list_aggregated_disk_types body "," service list_aggregated_disk_types "," service "," service list_disk_types body [] "," service list_disk_types body "," service list_disk_types ","filters [] ","data map ","scoped_lst disk_types "," service list_aggregated_disk_types items each_value "," service list_aggregated_disk_types items "," service list_disk_types items ","items map ","opts []= ","next_page_token empty? ","next_page_token nil? ","data next_page_token ","items concat ","data items each_value ","data items "," loop "," service list_disk_types items  concat "," service list_aggregated_disk_types  concat "," service list_disk_types  concat "," service list_disk_types items  map "," service list_aggregated_disk_types  map "," service list_disk_types  map ","data next_page_token  empty? ","data next_page_token  nil? "," service list_disk_types items  next_page_token "," service list_aggregated_disk_types  next_page_token "," service list_disk_types  next_page_token ","data data next_page_token  "," service list_disk_types items  items each_value "," service list_aggregated_disk_types  items each_value "," service list_disk_types  items each_value "," service list_disk_types items  items "," service list_aggregated_disk_types  items "," service list_disk_types  items "]}," Fog Compute Google DiskType reload":{"type":"method","name":"reload","children":[],"call":[" merge_attributes ","data attributes "," collection get "," zone "," identity "," collection "," requires "," collection get  attributes "]}," Fog Compute Google Disk create_snapshot":{"type":"method","name":"create_snapshot","children":[],"call":[" service snapshots get "," service snapshots "," service "," pending? ! "," pending? ","operation wait_for ","Fog Compute Google Operations  new get ","data body [] ","data body ","Fog Compute Google Operations  new "," service insert_snapshot "," service project "," zone_name "," name "," raise ","snapshot_name empty? ","snapshot_name nil? "," requires ","data zone ","data name "," service create_disk_snapshot "," ready? ","Fog Compute Google Operations  new get  wait_for "," service insert_snapshot  body [] "," service create_disk_snapshot  body [] "," service insert_snapshot  body "," service create_disk_snapshot  body "," service insert_snapshot  zone "," service create_disk_snapshot  zone "," service insert_snapshot  name "," service create_disk_snapshot  name "]}," Fog Compute Google Disk reload":{"type":"method","name":"reload","children":[],"call":[" merge_attributes ","data attributes "," collection get "," zone_name "," identity "," collection "," requires "]}," Fog Compute Google Disk ready?":{"type":"method","name":"ready?","children":[],"call":[" status == "," status "]}," Fog Compute Google Disk get_as_boot_disk":{"type":"method","name":"get_as_boot_disk","children":[],"call":[" get_object "," attached_disk_obj "," self_link "]}," Fog Compute Google Disk get_object":{"type":"method","name":"get_object","children":[],"call":["Hash  [] ","v nil? ! ","v nil? ","(pair\n  (str \"autoDelete\")\n  (lvar :auto_delete)) select "," self_link "]}," Fog Compute Google Disk zone_name":{"type":"method","name":"zone_name","children":[],"call":[" zone split [] "," zone split "," zone "," zone nil? "]}," Fog Compute Google Disk destroy":{"type":"method","name":"destroy","children":[],"call":[" ready? ","operation wait_for ","Fog Compute Google Operations  new get ","data body [] ","data body ","Fog Compute Google Operations  new "," service "," service delete_disk "," zone_name "," name "," requires ","data zone ","data name ","Fog Compute Google Operations  new get  wait_for "," service delete_disk  body [] "," service delete_disk  body "," service delete_disk  zone "," service delete_disk  name "]}," Fog Compute Google Disk save":{"type":"method","name":"save","children":[],"call":[" reload "," pending? ! "," pending? ","operation wait_for ","Fog Compute Google Operations  new get ","data body [] ","data body ","Fog Compute Google Operations  new "," service "," service insert_disk "," source_image "," zone "," name ","options []= "," type "," description "," size_gb "," source_snapshot "," source_snapshot nil? ! "," source_snapshot nil? "," source_image nil? "," source_image nil? ! "," requires ","data zone ","data name "," default_description "," ready? ","options [] "," service images get self_link "," service images get "," service images "," source_image include? ","v nil? ","(pair\n  (sym :description)\n  (or\n    (send nil :description)\n    (send nil :default_description))) reject "," labels ","Fog Compute Google Operations  new get  wait_for "," service insert_disk  body [] "," service insert_disk  body "," service insert_disk  zone "," service insert_disk  name "]}," Fog Compute Google BackendServices get":{"type":"method","name":"get","children":[],"call":[" new ","response body ","response nil? "," service get_backend_service "," service "," service get_backend_service body "," raise ","e status_code == ","e status_code ","backend_service to_h "," service get_backend_service to_h "," service get_backend_service  body "," service get_backend_service  nil? "," service get_ service get_backend_service body  "," service get_ service get_backend_service  "," service get_ service get_backend_service to_h  "," service get_ service get_backend_service body  body "," service get_ service get_backend_service  body "," service get_ service get_backend_service to_h  body "," service get_backend_service body  to_h "," service get_backend_service  to_h "," service get_backend_service to_h  to_h "," service get_ service get_backend_service body  to_h "," service get_ service get_backend_service  to_h "," service get_ service get_backend_service to_h  to_h "]}," Fog Compute Google BackendServices all":{"type":"method","name":"all","children":[],"call":[" load "," service list_backend_services body [] "," service list_backend_services body "," service list_backend_services "," service ","data map "," service list_backend_services items "]}," Fog Compute Google BackendService reload":{"type":"method","name":"reload","children":[],"call":[" merge_attributes ","data attributes "," collection get "," name "," collection "," requires "]}," Fog Compute Google BackendService ready?":{"type":"method","name":"ready?","children":[],"call":[" service get_backend_service "," name "," service "," raise ","e status_code == ","e status_code "]}," Fog Compute Google BackendService add_backend":{"type":"method","name":"add_backend","children":[],"call":[" reload "," service add_backend_service_backends "," service ","resource class == ","resource class ","backend map! ","backend class == ","backend class "]}," Fog Compute Google BackendService get_health":{"type":"method","name":"get_health","children":[],"call":[" service get_backend_service_health "," service "]}," Fog Compute Google BackendService destroy":{"type":"method","name":"destroy","children":[],"call":["operation body [] == ","operation body [] ","operation body ","Fog  wait_for "," service delete_backend_service "," name "," service "," requires "," ready? ","operation wait_for ","Fog Compute Google Operations  new get ","data body [] ","data body ","Fog Compute Google Operations  new ","data name "," service delete_backend_service  body [] == ","Fog Compute Google Operations  new get  body [] == "," service delete_backend_service  body [] ","Fog Compute Google Operations  new get  body [] "," service delete_backend_service  body ","Fog Compute Google Operations  new get  body "," service delete_backend_service  wait_for ","Fog Compute Google Operations  new get  wait_for "," service delete_backend_service  name "]}," Fog Compute Google BackendService save":{"type":"method","name":"save","children":[],"call":[" reload "," pending? ! "," pending? ","operation wait_for ","Fog Compute Google Operations  new get ","data [] ","Fog Compute Google Operations  new "," service "," service insert_backend_service body "," service insert_backend_service "," name "," timeout_sec "," protocol "," port "," health_checks "," fingerprint "," backends "," description "," requires ","data name "," ready? ","Fog Compute Google Operations  new get  wait_for "," service insert_backend_service body  [] "," service insert_backend_service  [] "," service insert_backend_service body  name "," service insert_backend_service  name "]}," Fog Compute Google Addresses get_by_ip_address":{"type":"method","name":"get_by_ip_address","children":[],"call":[" new ","address first [] first ","address first [] ","address first ","address empty? ","region key? ","addresses each_value select ","addresses each_value "," service list_aggregated_addresses body [] "," service list_aggregated_addresses body "," service list_aggregated_addresses "," service ","address first addresses first to_h ","address first addresses first ","address first addresses "," service list_aggregated_addresses items ","addresses each_value select  first [] first ","addresses each_value select  first [] ","addresses each_value select  first ","addresses each_value select  empty? "," service list_aggregated_addresses body []  each_value select "," service list_aggregated_addresses items  each_value select ","addresses each_value select es each_value select "," service list_aggregated_addresses body []  each_value "," service list_aggregated_addresses items  each_value ","addresses each_value select es each_value "," service list_aggregated_ service list_aggregated_addresses body []  body [] "," service list_aggregated_ service list_aggregated_addresses items  body [] "," service list_aggregated_addresses each_value select es body [] "," service list_aggregated_ service list_aggregated_addresses body []  body "," service list_aggregated_ service list_aggregated_addresses items  body "," service list_aggregated_addresses each_value select es body "," service list_aggregated_ service list_aggregated_addresses body []  "," service list_aggregated_ service list_aggregated_addresses items  "," service list_aggregated_addresses each_value select es ","address first  service list_aggregated_addresses body []  first to_h ","address first  service list_aggregated_addresses items  first to_h ","addresses each_value select  first addresses each_value select es first to_h ","address first  service list_aggregated_addresses body []  first ","address first  service list_aggregated_addresses items  first ","addresses each_value select  first addresses each_value select es first ","address first  service list_aggregated_addresses body []  ","address first  service list_aggregated_addresses items  ","addresses each_value select  first addresses each_value select es "," service list_aggregated_ service list_aggregated_addresses body []  items "," service list_aggregated_ service list_aggregated_addresses items  items "," service list_aggregated_addresses each_value select es items "]}," Fog Compute Google Addresses get":{"type":"method","name":"get","children":[],"call":[" new "," service get_address body "," service get_address "," service "," raise ","e status_code == ","e status_code "," service get_address to_h ","response first ","response empty? "," all "," service get_ service get_address body  body "," service get_ service get_address to_h  body "," service get_response first  body "," service get_ service get_address body  "," service get_ service get_address to_h  "," service get_response first  "," service get_ service get_address body  to_h "," service get_ service get_address to_h  to_h "," service get_response first  to_h "," all  first "," all  empty? "]}," Fog Compute Google Addresses all":{"type":"method","name":"all","children":[],"call":[" load ","data concat ","region [] "," service list_aggregated_addresses body [] each_value "," service list_aggregated_addresses body [] "," service list_aggregated_addresses body "," service list_aggregated_addresses "," service "," service list_addresses body [] "," service list_addresses body "," service list_addresses ","filters [] ","data map ","scoped_list addresses "," service list_aggregated_addresses items each_value "," service list_aggregated_addresses items "," service list_addresses items ","items map ","opts []= ","next_page_token empty? ","next_page_token nil? ","data next_page_token ","items concat ","data items each_value ","data items "," loop "," service list_aggregated_addresses  concat "," service list_addresses  concat "," service list_aggregated_addresses  map "," service list_addresses  map ","data next_page_token  empty? ","data next_page_token  nil? ","data data next_page_token  "," service list_aggregated_addresses  next_page_token "," service list_addresses  next_page_token "," service list_aggregated_addresses  items each_value "," service list_addresses  items each_value "," service list_aggregated_addresses  items "," service list_addresses  items "]}," Fog Compute Google Address disassociate":{"type":"method","name":"disassociate","children":[],"call":["Fog Compute Google Operations  new get ","data body [] ","data body ","Fog Compute Google Operations  new "," service "," service delete_server_access_config ","server zone_name ","server name ","server network_interfaces first [] first [] ","server network_interfaces first [] first ","server network_interfaces first [] ","server network_interfaces first ","server network_interfaces ","server network_interfaces first [] empty? ","server network_interfaces first [] nil? "," service servers get "," users first split [] "," users first split "," users first "," users "," service servers "," users empty? "," users nil? "," in_use? ! "," in_use? "," ready? ","operation wait_for "," async ","data zone ","data name ","access_config [] ","nic [] ","server zone ","access_config [] != "," address ","nic [] first ","nic [] empty? ","nic [] nil? ","server network_interfaces each "," requires "," service delete_server_access_config  body [] "," service delete_server_access_config  body "," service delete_server_server network_interfaces first [] first []  "," service delete_server_nic [] first  "," service delete_ service servers get _access_config "," service servers get  zone_name "," service servers get  name "," service servers get  network_interfaces first [] first [] "," service servers get  network_interfaces first [] first "," service servers get  network_interfaces first [] "," service servers get  network_interfaces first "," service servers get  network_interfaces "," service servers get  network_interfaces first [] empty? "," service servers get  network_interfaces first [] nil? "," service  service servers get s get "," service  service servers get s ","Fog Compute Google Operations  new get  wait_for "," service delete_server_access_config  zone "," service delete_server_access_config  name ","server network_interfaces first [] first []  [] ","nic [] first  [] ","server network_interfaces first []  [] "," service servers get  zone ","server network_interfaces first [] first []  [] != ","nic [] first  [] != ","server network_interfaces first []  [] first ","server network_interfaces first []  [] empty? ","server network_interfaces first []  [] nil? "," service servers get  network_interfaces each "]}," Fog Compute Google Address associate":{"type":"method","name":"associate","children":[],"call":["Fog Compute Google Operations  new get ","data body [] ","data body ","Fog Compute Google Operations  new "," service "," service add_server_access_config "," address ","server zone_name ","server name ","server network_interfaces first [] ","server network_interfaces first ","server network_interfaces "," ready? ","operation wait_for ","data zone ","data name "," server zone "," server "," server name "," requires ","server zone "," service add_server_access_config  body [] "," service add_server_access_config  body ","Fog Compute Google Operations  new get  wait_for "," service add_server_access_config  zone "," service add_server_access_config  name "]}," Fog Compute Google Address in_use?":{"type":"method","name":"in_use?","children":[],"call":[" status == "," status "]}," Fog Compute Google Address reload":{"type":"method","name":"reload","children":[],"call":[" merge_attributes ","data attributes "," collection get "," region split [] "," region split "," region "," identity "," collection "," requires "," collection get  attributes "]}," Fog Compute Google Address destroy":{"type":"method","name":"destroy","children":[],"call":[" ready? ","operation wait_for ","Fog Compute Google Operations  new get ","data body [] ","data body ","Fog Compute Google Operations  new "," service "," service delete_address "," region split [] "," region split "," region "," identity "," requires ","data region ","data name ","Fog Compute Google Operations  new get  wait_for "," service delete_address  body [] "," service delete_address  body "," service delete_address  region "," service delete_address  name "]}," Fog Compute Google Address save":{"type":"method","name":"save","children":[],"call":[" reload "," pending? ! "," pending? ","operation wait_for ","Fog Compute Google Operations  new get ","data body [] ","data body ","Fog Compute Google Operations  new "," service "," service insert_address "," attributes "," region "," identity "," requires ","data region ","data name "," ready? ","Fog Compute Google Operations  new get  wait_for "," service insert_address  body [] "," service insert_address  body "," service insert_address  region "," service insert_address  name "]}," Fog Compute Google Address server=":{"type":"method","name":"server=","children":[],"call":[" disassociate "," associate "," requires "]}," Fog Compute Google Address server":{"type":"method","name":"server","children":[],"call":[" service servers get "," users first split [] "," users first split "," users first "," users "," service servers "," service "," users empty? "," users nil? "," in_use? ! "," in_use? "]}," Fog DNS Google Real initialize":{"type":"method","name":"initialize","children":[],"call":["@client discovered_api "," api_version "," initialize_google_client ","options merge! ","GOOGLE_DNS_API_SCOPE_URLS  join "," shared_initialize ","options [] ","options []= "," Google Apis DnsV1 DnsService  new "," apply_client_options "," initialize_google_client  discovered_api "]}," Fog DNS Google Mock reset_data":{"type":"method","name":"reset_data","children":[],"call":[" class data delete "," class data "," api_version "," class "]}," Fog DNS Google Mock data":{"type":"method","name":"data","children":[],"call":[" class data [] "," class data "," api_version "," class "]}," Fog DNS Google Mock reset":{"type":"method","name":"reset","children":[],"call":[]}," Fog DNS Google Mock initialize":{"type":"method","name":"initialize","children":[],"call":[" shared_initialize ","options [] "]}," Fog Compute Google Real initialize":{"type":"method","name":"initialize","children":[],"call":["@client discovered_api "," api_version "," initialize_google_client ","options merge! ","GOOGLE_COMPUTE_API_SCOPE_URLS  join "," shared_initialize ","options [] ","options []= "," Google Apis ComputeV1 ComputeService  new "," apply_client_options "," initialize_google_client  discovered_api "]}," Fog Compute Google Mock random_operation":{"type":"method","name":"random_operation","children":[],"call":["Fog Mock  random_hex ","Fog Mock  random_numbers "]}," Fog Compute Google Mock reset_data":{"type":"method","name":"reset_data","children":[],"call":[" class data delete "," class data "," api_version "," class "]}," Fog Compute Google Mock data":{"type":"method","name":"data","children":[],"call":[" class data [] "," class data "," api_version "," class "]}," Fog Compute Google Mock reset":{"type":"method","name":"reset","children":[],"call":[]}," Fog Compute Google Mock initialize":{"type":"method","name":"initialize","children":[],"call":[" shared_initialize ","options [] ","options fetch "]}," Google available?":{"type":"method","name":"available?","children":[],"call":[" class_eval "," respond_to? "," class_for collections "," class_for "," services ","Fog Logger  warning ","e message ","Fog  credentials include? ","Fog  credentials ","service requirements all? ","service requirements ","Gem  source_index find_name empty? ! ","Gem  source_index find_name empty? ","Gem  source_index find_name ","Gem  source_index ","Gem Specification  find_all_by_name empty? ! ","Gem Specification  find_all_by_name empty? ","Gem Specification  find_all_by_name ","Gem Specification  respond_to? "," class_for collections each "," services each ","  class_for s "," class_for  requirements all? "," class_for  requirements ","  class_for s each "]}," Google services":{"type":"method","name":"services","children":[],"call":["Fog Google  services "]}," Google account":{"type":"method","name":"account","children":[],"call":["@@connections [] account ","@@connections [] "]}," Google []":{"type":"method","name":"[]","children":[],"call":["@@connections [] ","hash []= "," raise ","key inspect ","Fog Storage  new ","Fog Logger  warning ","Fog Google SQL  new ","Fog Google Monitoring  new ","Fog DNS  new ","Fog Compute  new ","Hash  new ","Fog Google Pubsub  new "]}," Google class_for":{"type":"method","name":"class_for","children":[],"call":[" raise "]}," Fog Compute Google Real list_aggregated_target_instances":{"type":"method","name":"list_aggregated_target_instances","children":[],"call":[" request ","parameters []= ","options [] ","@compute target_instances aggregated_list ","@compute target_instances ","@compute list_aggregated_target_instance "]}," Fog Compute Google Mock list_aggregated_target_instances":{"type":"method","name":"list_aggregated_target_instances","children":[],"call":[" build_excon_response "," api_version ","zones [] [] concat ","zones [] [] ","zones [] ","target_instance [] split [] ","target_instance [] split ","target_instance [] "," data [] values each "," data [] values "," data [] "," data "," data [] [] ","options [] gsub ","options [] ","Hash  [] "," data [] values map ","Fog Mock  not_implemented ","Hash  []  [] [] concat ","Hash  []  [] [] ","Hash  []  [] "," data [] []  [] split [] "," data [] []  [] split "," data [] []  [] "]}," Fog Compute Google Server map_service_accounts":{"type":"method","name":"map_service_accounts","children":[],"call":["e start_with? ","scope_array_expanded map ","GCE_SCOPE_ALIASES  [] ","scope_array map "]}," Fog Compute Google Images global_projects":{"type":"method","name":"global_projects","children":[],"call":["GLOBAL_PROJECTS  + "," service extra_global_projects "," service "]}," Fog Compute Google Addresses get_by_ip_address_or_name":{"type":"method","name":"get_by_ip_address_or_name","children":[],"call":[" get_by_name "," get_by_ip_address "]}," Fog Compute Google Addresses get_by_name":{"type":"method","name":"get_by_name","children":[],"call":[" new ","name first [] first ","name first [] ","name first ","name empty? ","region key? ","names each_value select ","names each_value "," service list_aggregated_addresses body [] "," service list_aggregated_addresses body "," service list_aggregated_addresses "," service ","name first addresses first to_h ","name first addresses first ","name first addresses "," service list_aggregated_addresses items ","names each_value select  first [] first ","names each_value select  first [] ","names each_value select  first ","names each_value select  empty? "," service list_aggregated_addresses body []  each_value select "," service list_aggregated_addresses items  each_value select ","names each_value select s each_value select "," service list_aggregated_addresses body []  each_value "," service list_aggregated_addresses items  each_value ","names each_value select s each_value ","names each_value select  first addresses first to_h ","names each_value select  first addresses first ","names each_value select  first addresses "]}," Fog Google escape":{"type":"method","name":"escape","children":[],"call":[]}," Fog Compute Google Real remove_instance_group_instance":{"type":"method","name":"remove_instance_group_instance","children":[],"call":[" request "," api_version ","@compute instance_groups remove_instances ","@compute instance_groups "]}," Fog Compute Google Mock remove_instance_group_instance":{"type":"method","name":"remove_instance_group_instance","children":[],"call":["Fog Mock  not_implemented "]}," Fog Compute Google Real list_instance_groups":{"type":"method","name":"list_instance_groups","children":[],"call":[" request ","@compute instance_groups list ","@compute instance_groups ","@compute list_instance_groups "]}," Fog Compute Google Mock list_instance_groups":{"type":"method","name":"list_instance_groups","children":[],"call":["Fog Mock  not_implemented "]}," Fog Compute Google Real list_instance_group_instances":{"type":"method","name":"list_instance_group_instances","children":[],"call":[" request ","@compute instance_groups list_instances ","@compute instance_groups ","@compute list_instance_group_instances "]}," Fog Compute Google Mock list_instance_group_instances":{"type":"method","name":"list_instance_group_instances","children":[],"call":["Fog Mock  not_implemented "]}," Fog Compute Google Real list_aggregated_instance_groups":{"type":"method","name":"list_aggregated_instance_groups","children":[],"call":[" request ","parameters []= ","options [] ","@compute instance_groups aggregated_list ","@compute instance_groups ","@compute list_aggregated_instance_groups "]}," Fog Compute Google Mock list_aggregated_instance_groups":{"type":"method","name":"list_aggregated_instance_groups","children":[],"call":["Fog Mock  not_implemented "]}," Fog Compute Google Real insert_instance_group":{"type":"method","name":"insert_instance_group","children":[],"call":[" request ","body []= ","options [] "," api_version ","Fog Mock  random_numbers to_s ","Fog Mock  random_numbers ","@compute instance_groups insert ","@compute instance_groups ","options [] split [] ","options [] split ","options [] nil? ","@compute insert_instance_group "," last_url_segment "," Google Apis ComputeV1 InstanceGroup  new ","@compute  Google Apis ComputeV1 InstanceGroup  new s insert ","@compute  Google Apis ComputeV1 InstanceGroup  new s ","@compute insert_ Google Apis ComputeV1 InstanceGroup  new  "]}," Fog Compute Google Mock insert_instance_group":{"type":"method","name":"insert_instance_group","children":[],"call":["Fog Mock  not_implemented "]}," Fog Compute Google Real get_instance_group":{"type":"method","name":"get_instance_group","children":[],"call":[" request ","@compute instance_groups get ","@compute instance_groups ","@compute get_instance_group "]}," Fog Compute Google Mock get_instance_group":{"type":"method","name":"get_instance_group","children":[],"call":["Fog Mock  not_implemented "]}," Fog Compute Google Real delete_instance_group":{"type":"method","name":"delete_instance_group","children":[],"call":[" request ","@compute instance_groups delete ","@compute instance_groups ","@compute delete_instance_group "]}," Fog Compute Google Mock delete_instance_group":{"type":"method","name":"delete_instance_group","children":[],"call":["Fog Mock  not_implemented "]}," Fog Compute Google Real add_instance_group_instance":{"type":"method","name":"add_instance_group_instance","children":[],"call":[" request "," api_version ","@compute instance_groups add_instances ","@compute instance_groups "]}," Fog Compute Google Mock add_instance_group_instance":{"type":"method","name":"add_instance_group_instance","children":[],"call":["Fog Mock  not_implemented "]}," Fog Compute Google InstanceGroups get_instances":{"type":"method","name":"get_instances","children":[],"call":[" service list_instance_group_instances ","params [] "," service "]}," Fog Compute Google InstanceGroups remove_instance":{"type":"method","name":"remove_instance","children":[],"call":[" service remove_instance_group_instance ","params [] "," service "," service remove_instance_group_instances ","params []= ","params [] == ","Fog Logger  deprecation "," caller first "," caller "," __method__ "," class "]}," Fog Compute Google InstanceGroups add_instance":{"type":"method","name":"add_instance","children":[],"call":[" service add_instance_group_instance ","params [] "," service "," service add_instance_group_instances ","params []= ","params [] == ","Fog Logger  deprecation "," caller first "," caller "," __method__ "," class "]}," Fog Compute Google InstanceGroups get":{"type":"method","name":"get","children":[],"call":[" new "," service get_instance_group body "," service get_instance_group "," service ","response [] split [] ","response [] split ","response [] ","target_zone first [] first ","target_zone first [] ","target_zone first ","target_zone empty? ","zone key? ","zones each_value select ","zones each_value "," service list_aggregated_instance_groups body [] "," service list_aggregated_instance_groups body "," service list_aggregated_instance_groups ","zone nil? "," raise ","e status_code == ","e status_code ","instance_group to_h ","instance_groups first zone split [] ","instance_groups first zone split ","instance_groups first zone ","instance_groups first ","zones each_value map compact first ","zones each_value map compact ","zones each_value map "," service list_aggregated_instance_groups items ","response first ","response empty? "," all "," service get_instance_group to_h "," service get_ service get_instance_group body  body "," service get_ service get_instance_group  body "," service get_response first  body "," service get_ service get_instance_group to_h  body "," service get_ service get_instance_group body  "," service get_ service get_instance_group  "," service get_response first  "," service get_ service get_instance_group to_h  ","target_zone first [] first  [] split [] "," all  [] split [] ","target_zone first [] first  [] split "," all  [] split ","target_zone first [] first  [] "," all  [] ","target_response [] split []  first [] first ","target_instance_groups first zone split []  first [] first ","target_response [] split []  first [] ","target_instance_groups first zone split []  first [] ","target_response [] split []  first ","target_instance_groups first zone split []  first ","target_response [] split []  empty? ","target_instance_groups first zone split []  empty? ","response [] split []  key? ","instance_groups first zone split []  key? ","response [] split [] s each_value select ","instance_groups first zone split [] s each_value select "," service list_aggregated_instance_groups body []  each_value select "," service list_aggregated_instance_groups items  each_value select ","response [] split [] s each_value ","instance_groups first zone split [] s each_value "," service list_aggregated_instance_groups body []  each_value "," service list_aggregated_instance_groups items  each_value "," service list_aggregated_ service get_instance_group body s body [] "," service list_aggregated_ service get_instance_group s body [] "," service list_aggregated_response first s body [] "," service list_aggregated_ service get_instance_group to_h s body [] "," service list_aggregated_zones each_value map compact first  body [] "," service list_aggregated_ service get_instance_group body s body "," service list_aggregated_ service get_instance_group s body "," service list_aggregated_response first s body "," service list_aggregated_ service get_instance_group to_h s body "," service list_aggregated_zones each_value map compact first  body "," service list_aggregated_ service get_instance_group body s "," service list_aggregated_ service get_instance_group s "," service list_aggregated_response first s "," service list_aggregated_ service get_instance_group to_h s "," service list_aggregated_zones each_value map compact first  ","response [] split []  nil? ","instance_groups first zone split []  nil? "," service get_instance_group body  to_h "," service get_instance_group  to_h ","response first  to_h "," service get_instance_group to_h  to_h "," service get_instance_group body s first zone split [] "," service get_instance_group s first zone split [] ","response first s first zone split [] "," service get_instance_group to_h s first zone split [] ","instance_groups first response [] split []  split [] ","instance_groups first instance_groups first zone split []  split [] ","zones each_value map compact first  first zone split [] "," service get_instance_group body s first zone split "," service get_instance_group s first zone split ","response first s first zone split "," service get_instance_group to_h s first zone split ","instance_groups first response [] split []  split ","instance_groups first instance_groups first zone split []  split ","zones each_value map compact first  first zone split "," service get_instance_group body s first zone "," service get_instance_group s first zone ","response first s first zone "," service get_instance_group to_h s first zone ","instance_groups first response [] split []  ","instance_groups first instance_groups first zone split []  ","zones each_value map compact first  first zone "," service get_instance_group body s first "," service get_instance_group s first ","response first s first "," service get_instance_group to_h s first ","zones each_value map compact first  first ","response [] split [] s each_value map compact first ","instance_groups first zone split [] s each_value map compact first "," service list_aggregated_instance_groups body []  each_value map compact first "," service list_aggregated_instance_groups items  each_value map compact first ","response [] split [] s each_value map compact ","instance_groups first zone split [] s each_value map compact "," service list_aggregated_instance_groups body []  each_value map compact "," service list_aggregated_instance_groups items  each_value map compact ","response [] split [] s each_value map ","instance_groups first zone split [] s each_value map "," service list_aggregated_instance_groups body []  each_value map "," service list_aggregated_instance_groups items  each_value map "," service list_aggregated_ service get_instance_group body s items "," service list_aggregated_ service get_instance_group s items "," service list_aggregated_response first s items "," service list_aggregated_ service get_instance_group to_h s items "," service list_aggregated_zones each_value map compact first  items ","target_zone first [] first  first "," all  first ","target_zone first [] first  empty? "," all  empty? "," service get_ service get_instance_group body  to_h "," service get_ service get_instance_group  to_h "," service get_response first  to_h "," service get_ service get_instance_group to_h  to_h "]}," Fog Compute Google InstanceGroups all":{"type":"method","name":"all","children":[],"call":[" load ","data [] ","data concat ","group [] "," service list_aggregated_instance_groups body [] each_value "," service list_aggregated_instance_groups body [] "," service list_aggregated_instance_groups body "," service list_aggregated_instance_groups "," service "," service list_instance_groups body "," service list_instance_groups ","filters [] ","data map ","group instance_groups "," service list_aggregated_instance_groups items each_value "," service list_aggregated_instance_groups items "," Array "," service list_instance_groups items ","items map ","opts []= ","next_page_token empty? ","next_page_token nil? ","data next_page_token ","items concat ","data items each_value ","data items "," loop "," service list_instance_groups body  [] "," Array  [] "," service list_aggregated_instance_groups  [] "," service list_instance_groups  [] "," service list_instance_groups body  concat "," Array  concat "," service list_aggregated_instance_groups  concat "," service list_instance_groups  concat "," service list_instance_groups body  map "," Array  map "," service list_aggregated_instance_groups  map "," service list_instance_groups  map ","data next_page_token  empty? ","data next_page_token  nil? "," service list_instance_groups body  next_page_token "," Array  next_page_token "," service list_aggregated_instance_groups  next_page_token "," service list_instance_groups  next_page_token ","data data next_page_token  "," service list_instance_groups body  items each_value "," Array  items each_value "," service list_aggregated_instance_groups  items each_value "," service list_instance_groups  items each_value "," service list_instance_groups body  items "," Array  items "," service list_aggregated_instance_groups  items "," service list_instance_groups  items "]}," Fog Compute Google InstanceGroup zone_name":{"type":"method","name":"zone_name","children":[],"call":[" zone split [] "," zone split "," zone "," zone nil? "]}," Fog Compute Google InstanceGroup destroy":{"type":"method","name":"destroy","children":[],"call":[" service delete_instance_group "," zone_name "," name "," service "," requires "]}," Fog Compute Google InstanceGroup save":{"type":"method","name":"save","children":[],"call":[" service insert_instance_group "," zone "," name "," service "," requires "," subnetwork_name "," network_name "]}," Fog Storage GoogleXML Real request":{"type":"method","name":"request","children":[],"call":[" connection request "," connection ","params [] []= "," signature ","params [] ","Fog Time  now to_date_header ","Fog Time  now ","params delete "," request_params "," request_params  [] []= "," request_params  [] "," request_params  delete "," request_ request_params  "]}," Fog Storage GoogleXML Real connection":{"type":"method","name":"connection","children":[],"call":["Fog XML Connection  new "," reload ","uri == "]}," Fog Storage GoogleXML Real signature":{"type":"method","name":"signature","children":[],"call":["Base64  encode64 chomp! ","Base64  encode64 ","@hmac sign ","string_to_sign << ","canonical_resource chop! ","canonical_resource << ","(str \"acl\") include? ","(or\n  (send\n    (lvar :params) :[]\n    (sym :query))\n  (hash)) keys ","params [] ","CGI  escape downcase ","CGI  escape ","params delete ","canonical_google_headers << ","x [] <=> ","y [] ","x [] ","google_headers sort ","google_headers []= ","key [] == ","key [] ","params [] [] ","canonical_resource to_s ","params fetch keys each ","params fetch keys ","params fetch ","params [] to_s ","canonical_google_headers to_s ","google_headers each ","params [] each ","params [] [] to_s ","(or\n  (send\n    (lvar :params) :[]\n    (sym :query))\n  (hash)) keys each ","a [] ","google_headers sort_by "]}," Fog Storage GoogleXML Real reload":{"type":"method","name":"reload","children":[],"call":["@connection reset "]}," Fog Storage GoogleXML Real initialize":{"type":"method","name":"initialize","children":[],"call":["options [] ","options fetch ","Fog HMAC  new "]}," Fog Storage GoogleXML Mock signature":{"type":"method","name":"signature","children":[],"call":[]}," Fog Storage GoogleXML Mock reset_data":{"type":"method","name":"reset_data","children":[],"call":[" class data delete "," class data "," class "]}," Fog Storage GoogleXML Mock data":{"type":"method","name":"data","children":[],"call":[" class data [] "," class data "," class "]}," Fog Storage GoogleXML Mock initialize":{"type":"method","name":"initialize","children":[],"call":["options [] "]}," Fog Storage GoogleXML Mock reset":{"type":"method","name":"reset","children":[],"call":[]}," Fog Storage GoogleXML Mock acls":{"type":"method","name":"acls","children":[],"call":[]}," Fog Storage GoogleXML Utils request_params":{"type":"method","name":"request_params","children":[],"call":["params [] ","params []= ","subdomain != ","params [] split [] ","params [] split ","Fog Logger  warning ","subdomain =~ ","subdomain !~ ","params [] split first ","subdomain to_s ","params [] split first  != ","params [] split first  =~ ","params [] split first  !~ ","params [] split first  to_s "]}," Fog Storage GoogleXML Utils host_path_query":{"type":"method","name":"host_path_query","children":[],"call":["query join ","params [] ","query << ","params [] [] ","CGI  escape "," signature ","(send\n  (lvar :params) :[]\n  (sym :query)) compact ","params []= ","CGI  escape gsub ","params [] []= ","expires to_i ","(send\n  (lvar :k) :to_s) join ","Fog Google  escape ","k to_s ","filtered map ","v nil? ","k nil? ","params [] reject ","Fog Google  escape gsub ","(send\n  (lvar :params) :[]\n  (sym :query)) compact  join ","(send\n  (lvar :params) :[]\n  (sym :query)) compact  << ","(send\n  (lvar :params) :[]\n  (sym :(send\n  (lvar :params) :[]\n  (sym :query)) compact )) compact "]}," Fog Storage GoogleXML Utils url":{"type":"method","name":"url","children":[],"call":[" https_url ","Fog Logger  deprecation "," caller first "," caller "]}," Fog Storage GoogleXML Utils https_url":{"type":"method","name":"https_url","children":[],"call":["https:// << "," host_path_query "]}," Fog Storage GoogleXML Utils http_url":{"type":"method","name":"http_url","children":[],"call":["http:// << "," host_path_query "]}," Fog Storage GoogleXML Mock put_object_url":{"type":"method","name":"put_object_url","children":[],"call":[" https_url "," raise ","ArgumentError  new "]}," Fog Storage GoogleXML Real put_object_url":{"type":"method","name":"put_object_url","children":[],"call":[" https_url "," raise ","ArgumentError  new "]}," Fog Storage GoogleXML Real put_object_acl":{"type":"method","name":"put_object_acl","children":[],"call":[" request ","CGI  escape "," entries_list ","acl [] "," tag ","acl [] [] ","Fog Google  escape "," raise ","Excon Errors BadRequest  new ","headers []= ","Utils VALID_ACLS  include? ","acl is_a? "]}," Fog Storage GoogleXML Real entries_list":{"type":"method","name":"entries_list","children":[],"call":["(send\n  (lvar :access_control_list) :map) join "," tag "," scope_tag + ","entry [] "," scope_tag ","access_control_list map "]}," Fog Storage GoogleXML Real scope_tag":{"type":"method","name":"scope_tag","children":[],"call":["(str \"<Scope type='\") + + ","(str \"<Scope type='\") + ","(send\n  (block\n    (send\n      (send\n        (lvar :scope) :to_a) :select)\n    (args\n      (arg :pair))\n    (send\n      (send\n        (lvar :pair) :[]\n        (int 0)) :!=\n      (str \"type\"))) :map) join "," tag ","pair [] ","(send\n  (send\n    (lvar :scope) :to_a) :select) map ","pair [] != ","scope to_a select ","scope to_a ","scope [] ","(str \"AllUsers\") include? ","(send\n  (block\n    (send\n      (send\n        (lvar :scope) :to_a) :reject)\n    (args\n      (arg :pair))\n    (send\n      (send\n        (lvar :pair) :[]\n        (int 0)) :==\n      (str \"type\"))) :map) join ","(send\n  (send\n    (lvar :scope) :to_a) :reject) map ","pair [] == ","scope to_a reject "]}," Fog Storage GoogleXML Real tag":{"type":"method","name":"tag","children":[],"call":[]}," Fog Storage GoogleXML Mock put_object":{"type":"method","name":"put_object","children":[],"call":[" raise ","Excon Errors  status_error ","response status= ","response headers= ","object [] ","bucket [] []= ","bucket [] ","object []= ","data [] [] ","data [] ","options [] ","Fog Time  now to_date_header ","Fog Time  now ","Fog Google Mock  etag "," data [] [] "," data [] "," data ","Excon Response  new ","data []= ","data [] read ","data [] is_a? ","Fog Storage  parse_data "," data [] [] [] []= "," class acls "," class "," data [] [] [] ","Excon Errors BadRequest  new ","(str \"private\") include? ! ","(str \"private\") include? ","Utils VALID_ACLS  include? ! ","Utils VALID_ACLS  include? ","Excon Response  new  status= ","Excon Response  new  headers= "," data [] []  [] []= "," data [] []  [] ","Fog Storage  parse_data  [] [] ","Fog Storage  parse_data  [] "," Fog Storage  parse_data  [] [] "," Fog Storage  parse_data  [] "," Fog Storage  parse_data  ","Fog Storage  parse_data  []= ","Fog Storage  parse_data  [] read ","Fog Storage  parse_data  [] is_a? ","Fog Storage  parse_Fog Storage  parse_data  "," Fog Storage  parse_data  [] [] [] []= "," Fog Storage  parse_data  [] [] [] "]}," Fog Storage GoogleXML Real put_object":{"type":"method","name":"put_object","children":[],"call":[" request ","Fog Google  escape ","data [] ","data [] merge! ","Fog Storage  parse_data ","Fog Storage  parse_data  [] ","Fog Storage  parse_data  [] merge! ","Fog Storage  parse_Fog Storage  parse_data  "]}," Fog Storage GoogleXML Real put_bucket_acl":{"type":"method","name":"put_bucket_acl","children":[],"call":[" request "," entries_list ","acl [] "," tag ","acl [] [] "]}," Fog Storage GoogleXML Mock put_bucket_acl":{"type":"method","name":"put_bucket_acl","children":[],"call":["Fog Mock  not_implemented "]}," Fog Storage GoogleXML Mock put_bucket":{"type":"method","name":"put_bucket","children":[],"call":[" raise ","Excon Errors  status_error ","response status= "," data [] []= "," data [] "," data "," data [] [] nil? "," data [] [] ","bucket []= ","options [] ","Time  now ","Excon Response  new "," data [] [] []= "," class acls "," class ","Excon Errors BadRequest  new ","(str \"private\") include? ! ","(str \"private\") include? ","Utils VALID_ACLS  include? ! ","Utils VALID_ACLS  include? ","Excon Response  new  status= "]}," Fog Storage GoogleXML Real put_bucket":{"type":"method","name":"put_bucket","children":[],"call":[" request ","options delete "]}," Fog Storage GoogleXML Mock head_object":{"type":"method","name":"head_object","children":[],"call":["response body= "," get_object "," get_object  body= "]}," Fog Storage GoogleXML Real head_object":{"type":"method","name":"head_object","children":[],"call":[" request ","CGI  escape ","headers merge! ","headers []= ","Fog Time  at to_date_header ","Fog Time  at ","options [] to_i ","options [] ","options delete "," raise ","ArgumentError  new ","Fog Google  escape "]}," Fog Storage GoogleXML Mock get_service":{"type":"method","name":"get_service","children":[],"call":["response body= ","(str \"CreationDate\") include? ! ","(str \"CreationDate\") include? ","bucket reject "," data [] values map "," data [] values "," data [] "," data ","response headers []= ","response headers ","Excon Response  new ","bucket select ","Excon Response  new  body= ","Excon Response  new  headers []= ","Excon Response  new  headers "]}," Fog Storage GoogleXML Real get_service":{"type":"method","name":"get_service","children":[],"call":[" request ","Fog Parsers Storage Google GetService  new "]}," Fog Storage GoogleXML Mock get_object_url":{"type":"method","name":"get_object_url","children":[],"call":[" get_object_https_url ","Fog Logger  deprecation "," caller first "," caller "," get_object_url "]}," Fog Storage GoogleXML Real get_object_url":{"type":"method","name":"get_object_url","children":[],"call":[" get_object_https_url ","Fog Logger  deprecation "," caller first "," caller "," get_object_url "]}," Fog Storage GoogleXML Real get_object_torrent":{"type":"method","name":"get_object_torrent","children":[],"call":[" request ","CGI  escape "," raise ","ArgumentError  new ","Fog Google  escape "]}," Fog Storage GoogleXML GetObjectHttpsUrl get_object_https_url":{"type":"method","name":"get_object_https_url","children":[],"call":[" https_url "," raise ","ArgumentError  new ","options merge "]}," Fog Storage GoogleXML GetObjectHttpUrl get_object_http_url":{"type":"method","name":"get_object_http_url","children":[],"call":[" http_url "," raise ","ArgumentError  new ","options merge "," url_options "," https_url "]}," Fog Storage GoogleXML Mock get_object_acl":{"type":"method","name":"get_object_acl","children":[],"call":[" raise ","Excon Errors  status_error ","response status= ","response body= "," data [] [] [] [] "," data [] [] [] "," data [] [] "," data [] "," data ","Excon Response  new ","Excon Response  new  status= ","Excon Response  new  body= "]}," Fog Storage GoogleXML Real get_object_acl":{"type":"method","name":"get_object_acl","children":[],"call":[" request ","CGI  escape ","Fog Parsers Storage Google AccessControlList  new ","query []= ","options delete "," raise ","ArgumentError  new ","Fog Google  escape "]}," Fog Storage GoogleXML Mock get_object":{"type":"method","name":"get_object","children":[],"call":[" raise ","Excon Errors  status_error ","response status= ","response body= ","object [] ","block call ","data read ","(lvar :remaining) min ","remaining > ","data length ","StringIO  new "," block_given? ","response headers []= ","response headers ","options [] < ","Time  parse ","options [] ","options [] == ","options [] >= ","options [] != ","bucket [] [] ","bucket [] "," data [] [] "," data [] "," data ","Excon Response  new ","ArgumentError  new ","Excon Response  new  status= ","Excon Response  new  body= ","bucket [] []  [] ","StringIO  new  read ","(lvar :data length ) min ","data length  > ","StringIO  new  length ","Excon Response  new  headers []= ","Excon Response  new  headers "," data [] []  [] [] "," data [] []  [] "," StringIO  new  [] [] "," StringIO  new  [] "," StringIO  new  "]}," Fog Storage GoogleXML Real get_object":{"type":"method","name":"get_object","children":[],"call":[" request ","params merge! ","CGI  escape ","params []= ","Proc  new "," block_given? ","params [] []= ","Fog Time  at to_date_header ","Fog Time  at ","options [] to_i ","options [] ","params [] ","params [] merge! ","options delete "," raise ","ArgumentError  new ","Fog Google  escape "]}," Fog Storage GoogleXML Mock get_bucket_acl":{"type":"method","name":"get_bucket_acl","children":[],"call":[" raise ","Excon Errors  status_error ","response status= ","response body= "," data [] [] [] "," data [] [] "," data [] "," data ","Excon Response  new ","Excon Response  new  status= ","Excon Response  new  body= "]}," Fog Storage GoogleXML Real get_bucket_acl":{"type":"method","name":"get_bucket_acl","children":[],"call":[" request ","Fog Parsers Storage Google AccessControlList  new "," raise ","ArgumentError  new "]}," Fog Storage GoogleXML Mock get_bucket":{"type":"method","name":"get_bucket","children":[],"call":[" raise ","Excon Errors  status_error ","response status= ","response body []= ","response body [] [] ","options [] ","response body [] ","response body ","options [] < ","response body [] length ","response body= ","bucket [] ","truncated_contents size != ","contents size ","truncated_contents size ","contents [] ","(lvar :max_keys) min ","data merge! ","object [] to_i ","object [] ","Time  parse ","(str \"ETag\") include? ! ","(str \"ETag\") include? ","object reject ","(send\n  (block\n    (send\n      (send\n        (send\n          (lvar :bucket) :[]\n          (sym :objects)) :values) :sort)\n    (args\n      (arg :x)\n      (arg :y))\n    (send\n      (send\n        (lvar :x) :[]\n        (str \"Key\")) :<=>\n      (send\n        (lvar :y) :[]\n        (str \"Key\")))) :reject) map ","object [] <= ","object [] [] != ","object [] [] ","options [] length ","(send\n  (send\n    (send\n      (lvar :bucket) :[]\n      (sym :objects)) :values) :sort) reject ","x [] <=> ","y [] ","x [] ","bucket [] values sort ","bucket [] values "," data [] [] "," data [] "," data ","bucket_name == ","name to_s ","(str \"(\\\\w+\\\\.?)*\") match ","Excon Response  new ","ArgumentError  new ","object select ","(send\n  (block\n    (send\n      (send\n        (send\n          (lvar :bucket) :[]\n          (sym :objects)) :values) :sort_by)\n    (args\n      (arg :a))\n    (send\n      (lvar :a) :[]\n      (str \"Key\"))) :reject) map ","(send\n  (send\n    (send\n      (lvar :bucket) :[]\n      (sym :objects)) :values) :sort_by) reject ","a [] ","bucket [] values sort_by ","Excon Response  new  status= ","Excon Response  new  body []= ","Excon Response  new  body [] [] ","Excon Response  new  body [] ","Excon Response  new  body ","Excon Response  new  body [] length ","Excon Response  new  body= "," data [] []  [] ","contents []  size != ","truncated_contents (lvar :max_keys) min  != ","contents (lvar :max_keys) min  ","contents []  size ","truncated_contents (lvar :max_keys) min  ","(send\n  (block\n    (send\n      (send\n        (send\n          (lvar : data [] [] ) :[]\n          (sym :objects)) :values) :sort)\n    (args\n      (arg :x)\n      (arg :y))\n    (send\n      (send\n        (lvar :x) :[]\n        (str \"Key\")) :<=>\n      (send\n        (lvar :y) :[]\n        (str \"Key\")))) :reject) map ","(send\n  (send\n    (send\n      (lvar : data [] [] ) :[]\n      (sym :objects)) :values) :sort) reject "," data [] []  [] values sort "," data [] []  [] values "," data [] [] _name == ","bucket_(str \"(\\w+\\.?)*\") match  == ","(str \"(\\w+\\.?)*\") match  to_s ","(send\n  (block\n    (send\n      (send\n        (send\n          (lvar : data [] [] ) :[]\n          (sym :objects)) :values) :sort_by)\n    (args\n      (arg :a))\n    (send\n      (lvar :a) :[]\n      (str \"Key\"))) :reject) map ","(send\n  (send\n    (send\n      (lvar : data [] [] ) :[]\n      (sym :objects)) :values) :sort_by) reject "," data [] []  [] values sort_by "]}," Fog Storage GoogleXML Real get_bucket":{"type":"method","name":"get_bucket","children":[],"call":[" request ","Fog Parsers Storage Google GetBucket  new "," raise ","ArgumentError  new "]}," Fog Storage GoogleXML Mock delete_object":{"type":"method","name":"delete_object","children":[],"call":[" raise ","Excon Errors  status_error ","response status= ","bucket [] delete ","bucket [] ","bucket [] [] "," data [] [] "," data [] "," data ","Excon Response  new ","Excon Response  new  status= "," data [] []  [] delete "," data [] []  [] "," data [] []  [] [] "]}," Fog Storage GoogleXML Real delete_object":{"type":"method","name":"delete_object","children":[],"call":[" request ","Fog Google  escape "]}," Fog Storage GoogleXML Mock delete_bucket":{"type":"method","name":"delete_bucket","children":[],"call":["response status= "," data [] delete "," data [] "," data "," raise ","Excon Errors  status_error "," data [] [] [] empty? ! "," data [] [] [] empty? "," data [] [] [] "," data [] [] "," data [] [] nil? ","Excon Response  new ","Excon Response  new  status= "]}," Fog Storage GoogleXML Real delete_bucket":{"type":"method","name":"delete_bucket","children":[],"call":[" request "]}," Fog Storage GoogleXML Mock copy_object":{"type":"method","name":"copy_object","children":[],"call":[" raise ","Excon Errors  status_error ","response status= ","response body= ","Time  parse ","target_object [] ","target_bucket [] []= ","target_bucket [] ","target_object merge! ","source_object dup "," data [] [] "," data [] "," data ","source_bucket [] [] ","source_bucket [] ","Excon Response  new ","target_object []= ","Excon Response  new  status= ","Excon Response  new  body= ","source_object dup  [] "," data [] []  [] []= "," data [] []  [] ","source_object dup  merge! "," data [] []  [] [] ","source_object dup  []= "]}," Fog Storage GoogleXML Real copy_object":{"type":"method","name":"copy_object","children":[],"call":[" request ","Fog Google  escape ","Fog Parsers Storage Google CopyObject  new ","(pair\n  (str \"x-goog-copy-source\")\n  (dstr\n    (str \"/\")\n    (begin\n      (lvar :source_bucket_name))\n    (str \"/\")\n    (begin\n      (lvar :source_object_name)))) merge "]}," Fog Storage GoogleXML Files new":{"type":"method","name":"new","children":[],"call":["(pair\n  (sym :directory)\n  (send nil :directory)) merge "," directory "," requires "]}," Fog Storage GoogleXML Files head":{"type":"method","name":"head","children":[],"call":[" new ","data headers merge ","data headers "," service head_object "," directory key "," directory "," service "," requires "," service head_object  headers merge "," service head_object  headers "]}," Fog Storage GoogleXML Files get_https_url":{"type":"method","name":"get_https_url","children":[],"call":[" service get_object_https_url "," directory key "," directory "," service "," requires "]}," Fog Storage GoogleXML Files get_http_url":{"type":"method","name":"get_http_url","children":[],"call":[" service get_object_http_url "," directory key "," directory "," service "," requires "]}," Fog Storage GoogleXML Files get":{"type":"method","name":"get","children":[],"call":[" new ","file_data merge! ","data body ","file_data []= ","data headers each ","data headers "," service get_object "," directory key "," directory "," service "," requires ","file_ service get_object  merge! "," service get_object  body ","file_ service get_object  []= "," service get_object  headers each "," service get_object  headers "]}," Fog Storage GoogleXML Files each":{"type":"method","name":"each","children":[],"call":["subset each_file_this_page ","subset all ","subset last key ","subset last ","subset is_truncated "," dup all "," dup "," block_given? ! "," block_given? ","subset all  each_file_this_page "," dup all  each_file_this_page ","subset all  all "," dup all  all ","subset all  last key "," dup all  last key ","subset all  last "," dup all  last ","subset all  is_truncated "," dup all  is_truncated "]}," Fog Storage GoogleXML Files all":{"type":"method","name":"all","children":[],"call":[" load ","parent files map ","parent files "," merge_attributes ","parent files attributes "," directory collection get "," directory key "," directory "," directory collection ","value to_s empty? ","value to_s ","value nil? ","options reject ","(pair\n  (str \"delimiter\")\n  (send nil :delimiter)) merge! "," prefix "," max_keys "," marker "," delimiter "," requires "," directory collection get  files map "," directory collection get  files "," directory collection get  files attributes ","(pair\n  (str \"delimiter\")\n  (send nil :delimiter)) merge!  reject "]}," Fog Storage GoogleXML File url":{"type":"method","name":"url","children":[],"call":[" collection get_http_url "," key "," collection "," requires "]}," Fog Storage GoogleXML File save":{"type":"method","name":"save","children":[],"call":["Fog Storage  get_content_type "," body "," content_type "," content_length= ","Fog Storage  get_body_size "," merge_attributes ","(str \"Content-Length\") include? ","data headers reject ","data headers "," service put_object "," key "," directory key "," directory "," service ","options merge! "," metadata ","options []= "," expires "," content_md5 "," content_encoding "," content_disposition "," cache_control ","options [] ","Fog Logger  deprecation "," caller first "," caller ","options != "," requires "," service put_object  headers reject "," service put_object  headers "," meta service put_object  "]}," Fog Storage GoogleXML File public_url":{"type":"method","name":"public_url","children":[],"call":[" key "," directory key "," directory "," directory key to_s =~ "," directory key to_s ","entry [] == ","entry [] ","entry [] [] == ","entry [] [] ","acl detect "," service get_object_acl body [] "," service get_object_acl body "," service get_object_acl "," service "," requires "," service get_object_acl body []  detect "," service get_object_ service get_object_acl body []  body [] "," service get_object_ service get_object_acl body []  body "," service get_object_ service get_object_acl body []  "]}," Fog Storage GoogleXML File public=":{"type":"method","name":"public=","children":[],"call":[]}," Fog Storage GoogleXML File owner=":{"type":"method","name":"owner=","children":[],"call":[" attributes []= ","new_owner [] "," attributes "]}," Fog Storage GoogleXML File metadata=":{"type":"method","name":"metadata=","children":[],"call":[" merge_attributes "]}," Fog Storage GoogleXML File metadata":{"type":"method","name":"metadata","children":[],"call":["(send\n  (send\n    (lvar :key) :to_s) :=~\n  (regexp\n    (str \"^x-goog-meta-\")\n    (regopt))) ! ","key to_s =~ ","key to_s "," attributes reject "," attributes "," attributes select "]}," Fog Storage GoogleXML File destroy":{"type":"method","name":"destroy","children":[],"call":[" service delete_object "," key "," directory key "," directory "," service "," requires "]}," Fog Storage GoogleXML File copy":{"type":"method","name":"copy","children":[],"call":["target_directory files get ","target_directory files "," service directories new "," service directories "," service "," service copy_object "," key "," directory key "," directory "," requires "," service directories new  files get "," service directories new  files "]}," Fog Storage GoogleXML File body=":{"type":"method","name":"body=","children":[],"call":[" attributes []= "," attributes "]}," Fog Storage GoogleXML File body":{"type":"method","name":"body","children":[],"call":["file body "," collection get "," identity "," collection "," last_modified "," attributes [] "," attributes "," collection get  body "]}," Fog Storage GoogleXML File acl=":{"type":"method","name":"acl=","children":[],"call":[" raise ","ArgumentError  new ","valid_acls join ","valid_acls include? ","VALID_ACLS  join ","VALID_ACLS  include? ","Utils VALID_ACLS  join ","Utils VALID_ACLS  include? "]}," Fog Storage GoogleXML Directory save":{"type":"method","name":"save","children":[],"call":[" service put_bucket "," key "," service ","options []= "," attributes [] "," attributes "," requires "]}," Fog Storage GoogleXML Directory public_url":{"type":"method","name":"public_url","children":[],"call":[" key "," key to_s =~ "," key to_s ","entry [] == ","entry [] ","entry [] [] == ","entry [] [] "," service get_bucket_acl body [] detect "," service get_bucket_acl body [] "," service get_bucket_acl body "," service get_bucket_acl "," service "," requires "]}," Fog Storage GoogleXML Directory public=":{"type":"method","name":"public=","children":[],"call":[]}," Fog Storage GoogleXML Directory files":{"type":"method","name":"files","children":[],"call":["Fog Storage GoogleXML Files  new "," service "]}," Fog Storage GoogleXML Directory destroy":{"type":"method","name":"destroy","children":[],"call":[" service delete_bucket "," key "," service "," requires "]}," Fog Storage GoogleXML Directory acl=":{"type":"method","name":"acl=","children":[],"call":[" raise ","ArgumentError  new ","valid_acls join ","valid_acls include? ","Utils VALID_ACLS  join ","Utils VALID_ACLS  include? "]}," Fog Storage GoogleXML Directories get":{"type":"method","name":"get","children":[],"call":["directory files load ","data [] ","directory files ","directory files merge_attributes ","options []= ","(str \"CommonPrefixes\") include? "," new "," service get_bucket body "," service get_bucket "," service "," remap_attributes ","data each_pair "," new  files load "," service get_bucket body  [] "," new  files "," new  files merge_attributes "," service get_bucket body  each_pair "]}," Fog Storage GoogleXML Directories all":{"type":"method","name":"all","children":[],"call":[" load "," service get_service body [] "," service get_service body "," service get_service "," service "]}," Fog Storage GoogleJSON Real signature":{"type":"method","name":"signature","children":[],"call":["Base64  encode64 chomp! ","Base64  encode64 ","key sign ","OpenSSL Digest SHA256  new ","OpenSSL PKey RSA  new ","@client authorization signing_key ","@client authorization ","string_to_sign << ","canonical_resource chop! ","canonical_resource << ","(str \"acl\") include? ","(or\n  (send\n    (lvar :params) :[]\n    (sym :query))\n  (hash)) keys ","params [] ","CGI  escape downcase ","CGI  escape ","params delete ","canonical_google_headers << ","x [] <=> ","y [] ","x [] ","google_headers sort ","google_headers []= ","key [] == ","key [] ","params [] [] ","canonical_resource to_s ","params [] to_s ","canonical_google_headers to_s ","google_headers each ","params [] each ","@client signing_key ","(or\n  (send\n    (lvar :params) :[]\n    (sym :query))\n  (hash)) each_key ","a [] ","google_headers sort_by "," iam_signer "," default_signer ","@storage_json authorization signing_key nil? ! ","@storage_json authorization signing_key nil? ","@storage_json authorization signing_key ","@storage_json authorization ","OpenSSL PKey RSA  new  sign ","@client authorization signing_OpenSSL PKey RSA  new  ","(or\n  (send\n    (lvar :params) :[]\n    (sym :query))\n  (hash)) OpenSSL PKey RSA  new s ","OpenSSL PKey RSA  new  [] == ","OpenSSL PKey RSA  new  [] ","@client signing_OpenSSL PKey RSA  new  ","(or\n  (send\n    (lvar :params) :[]\n    (sym :query))\n  (hash)) each_OpenSSL PKey RSA  new  ","@storage_json authorization signing_OpenSSL PKey RSA  new  nil? ! ","@storage_json authorization signing_OpenSSL PKey RSA  new  nil? ","@storage_json authorization signing_OpenSSL PKey RSA  new  "]}," Fog Storage GoogleJSON Real initialize":{"type":"method","name":"initialize","children":[],"call":["@client discovered_api "," api_version "," initialize_google_client ","options [] ","options merge! ","GOOGLE_STORAGE_JSON_API_SCOPE_URLS  join "," shared_initialize ","options []= "," Google Apis StorageV1 StorageService  new ","@storage_json client_options send_timeout_sec= ","@storage_json client_options ","@storage_json client_options read_timeout_sec= ","@storage_json client_options open_timeout_sec= "," apply_client_options ","GOOGLE_STORAGE_JSON_IAM_API_SCOPE_URLS  join "," Google Apis IamcredentialsV1 IAMCredentialsService  new "," initialize_google_client  discovered_api ","@client discovered_api  client_options send_timeout_sec= "," Google Apis StorageV1 StorageService  new  client_options send_timeout_sec= ","@client discovered_api  client_options "," Google Apis StorageV1 StorageService  new  client_options ","@client discovered_api  client_options read_timeout_sec= "," Google Apis StorageV1 StorageService  new  client_options read_timeout_sec= ","@client discovered_api  client_options open_timeout_sec= "," Google Apis StorageV1 StorageService  new  client_options open_timeout_sec= "]}," Fog Storage GoogleJSON Mock signature":{"type":"method","name":"signature","children":[],"call":[]}," Fog Storage GoogleJSON Mock initialize":{"type":"method","name":"initialize","children":[],"call":[" shared_initialize ","options [] ","MockClient  new "]}," Fog Storage GoogleJSON Utils host_path_query":{"type":"method","name":"host_path_query","children":[],"call":["query join ","params [] ","query << ","params [] [] ","CGI  escape "," signature ","@client authorization issuer ","@client authorization ","(send\n  (lvar :params) :[]\n  (sym :query)) compact ","params []= ","CGI  escape gsub ","params [] []= ","expires to_i ","@client issuer ","URI  encode gsub ","URI  encode ","(send\n  (lvar :k) :to_s) join ","Fog Google  escape ","k to_s ","filtered map ","v nil? ","k nil? ","params [] reject "," google_access_id ","% + ","m unpack join upcase ","m unpack join ","m unpack ","H2 * ","m bytesize ","params [] b gsub ","params [] b ","(send\n  (send\n    (send\n      (lvar :params) :[]\n      (sym :path)) :b) :gsub\n  (regexp\n    (str \"([^a-zA-Z0-9_.\\\\-~]+)\")\n    (regopt))) gsub "," Addressable URI  encode_component ","(send\n  (lvar :params) :[]\n  (sym :query)) compact  join ","(send\n  (lvar :params) :[]\n  (sym :query)) compact  << ","(send\n  (lvar :params) :[]\n  (sym :(send\n  (lvar :params) :[]\n  (sym :query)) compact )) compact "]}," Fog Storage GoogleJSON Utils url":{"type":"method","name":"url","children":[],"call":[" https_url ","Fog Logger  deprecation "," caller first "," caller "]}," Fog Storage GoogleJSON Utils https_url":{"type":"method","name":"https_url","children":[],"call":["https:// << "," host_path_query "]}," Fog Storage GoogleJSON Utils http_url":{"type":"method","name":"http_url","children":[],"call":["http:// << "," host_path_query "]}," Fog Storage GoogleJSON Mock put_object_url":{"type":"method","name":"put_object_url","children":[],"call":[" https_url "," raise ","ArgumentError  new "]}," Fog Storage GoogleJSON Real put_object_url":{"type":"method","name":"put_object_url","children":[],"call":[" https_url "," expires "," raise ","ArgumentError  new "]}," Fog Storage GoogleJSON Real put_object_acl":{"type":"method","name":"put_object_acl","children":[],"call":[" request ","@storage_json object_access_controls insert ","@storage_json object_access_controls "," raise ","ArgumentError  new ","@storage_json insert_object_access_control "," Google Apis StorageV1 ObjectAccessControl  new "]}," Fog Storage GoogleJSON Mock put_object":{"type":"method","name":"put_object","children":[],"call":[" raise ","Excon Errors  status_error ","response status= ","response headers= ","object [] ","bucket [] []= ","bucket [] ","object []= ","data [] [] ","data [] ","options [] ","Fog Time  now to_date_header ","Fog Time  now ","Fog Google Mock  etag "," data [] [] "," data [] "," data ","Excon Response  new ","data []= ","data [] read ","data [] is_a? ","Fog Storage  parse_data "," data [] [] [] []= "," class acls "," class "," data [] [] [] ","Excon Errors BadRequest  new ","(str \"private\") include? ! ","(str \"private\") include? ","Fog Mock  not_implemented ","Excon Response  new  status= ","Excon Response  new  headers= "," data [] []  [] []= "," data [] []  [] ","Fog Storage  parse_data  [] [] ","Fog Storage  parse_data  [] "," Fog Storage  parse_data  [] [] "," Fog Storage  parse_data  [] "," Fog Storage  parse_data  ","Fog Storage  parse_data  []= ","Fog Storage  parse_data  [] read ","Fog Storage  parse_data  [] is_a? ","Fog Storage  parse_Fog Storage  parse_data  "," Fog Storage  parse_data  [] [] [] []= "," Fog Storage  parse_data  [] [] [] "]}," Fog Storage GoogleJSON Real put_object":{"type":"method","name":"put_object","children":[],"call":[" request ","body_object []= ","acl empty? ","acl push ","options [] ","body_object merge! ","@storage_json objects insert ","@storage_json objects "," Google APIClient UploadIO  new ","Fog Storage  parse_data [] [] ","Fog Storage  parse_data [] ","Fog Storage  parse_data ","data is_a? ","StringIO  new ","@storage_json insert_object "," Google Apis RequestOptions  default merge "," Google Apis RequestOptions  default "," Google Apis StorageV1 Object  new ","options merge ","data path ","options []= ","data content_type ","data respond_to? "," normalize_data ","Fog Storage  parse_StringIO  new  [] [] ","Fog Storage  parse_data path  [] [] ","Fog Storage  parse_StringIO  new  [] ","Fog Storage  parse_data path  [] ","Fog Storage  parse_StringIO  new  ","Fog Storage  parse_data path  ","StringIO  new  is_a? ","data path  is_a? ","StringIO  new  path ","data path  path ","StringIO  new  content_type ","data path  content_type ","StringIO  new  respond_to? ","data path  respond_to? "," normalize_StringIO  new  "," normalize_data path  "]}," Fog Storage GoogleJSON Real put_bucket_acl":{"type":"method","name":"put_bucket_acl","children":[],"call":[" request ","@storage_json bucket_access_controls insert ","@storage_json bucket_access_controls "," raise ","ArgumentError  new ","@storage_json insert_bucket_access_control "," Google Apis StorageV1 BucketAccessControl  new "]}," Fog Storage GoogleJSON Mock put_bucket_acl":{"type":"method","name":"put_bucket_acl","children":[],"call":["Fog Mock  not_implemented "]}," Fog Storage GoogleJSON Mock put_bucket":{"type":"method","name":"put_bucket","children":[],"call":[" raise ","Excon Errors  status_error ","response status= "," data [] []= "," data [] "," data "," data [] [] nil? "," data [] [] ","bucket []= ","options [] ","Time  now ","Excon Response  new "," data [] [] []= "," class acls "," class ","Excon Errors BadRequest  new ","(str \"private\") include? ! ","(str \"private\") include? ","Fog Mock  not_implemented ","Excon Response  new  status= "]}," Fog Storage GoogleJSON Real put_bucket":{"type":"method","name":"put_bucket","children":[],"call":[" request ","parameters merge! ","@storage_json buckets insert ","@storage_json buckets ","options [] ","body_object merge! ","@storage_json insert_bucket "," Google Apis StorageV1 Bucket  new ","options merge ","@storage_json  Google Apis StorageV1 Bucket  new s insert ","@storage_json  Google Apis StorageV1 Bucket  new s ","@storage_json insert_ Google Apis StorageV1 Bucket  new  "]}," Fog Storage GoogleJSON Mock head_object":{"type":"method","name":"head_object","children":[],"call":["response body= "," get_object "," get_object  body= "]}," Fog Storage GoogleJSON Real head_object":{"type":"method","name":"head_object","children":[],"call":["object body= ","object headers= ","object body "," request ","@storage_json objects get ","@storage_json objects "," raise ","ArgumentError  new "," request  body= "," request  headers= "," request  body ","@storage_json  request s get ","@storage_json  request s "]}," Fog Storage GoogleJSON Mock get_service":{"type":"method","name":"get_service","children":[],"call":[]}," Fog Storage GoogleJSON Real get_service":{"type":"method","name":"get_service","children":[],"call":[]}," Fog Storage GoogleJSON Mock get_object_url":{"type":"method","name":"get_object_url","children":[],"call":[" get_object_https_url ","Fog Logger  deprecation "," caller first "," caller "," get_object_url "]}," Fog Storage GoogleJSON Real get_object_url":{"type":"method","name":"get_object_url","children":[],"call":[" get_object_https_url ","Fog Logger  deprecation "," caller first "," caller "," get_object_url "]}," Fog Storage GoogleJSON Real get_object_torrent":{"type":"method","name":"get_object_torrent","children":[],"call":["Fog Logger  deprecation "," caller first "," caller "," get_object_torrent "]}," Fog Storage GoogleJSON GetObjectHttpsUrl get_object_https_url":{"type":"method","name":"get_object_https_url","children":[],"call":[" https_url "," raise ","ArgumentError  new ","options merge "]}," Fog Storage GoogleJSON GetObjectHttpUrl get_object_http_url":{"type":"method","name":"get_object_http_url","children":[],"call":[" http_url "," raise ","ArgumentError  new ","options merge "]}," Fog Storage GoogleJSON Mock get_object_acl":{"type":"method","name":"get_object_acl","children":[],"call":[" raise ","Excon Errors  status_error ","response status= ","response body= "," data [] [] [] [] "," data [] [] [] "," data [] [] "," data [] "," data ","Excon Response  new ","Fog Mock  not_implemented ","Excon Response  new  status= ","Excon Response  new  body= "]}," Fog Storage GoogleJSON Real get_object_acl":{"type":"method","name":"get_object_acl","children":[],"call":[" request ","@storage_json object_access_controls list ","@storage_json object_access_controls "," raise ","ArgumentError  new ","@storage_json get_object_access_control "]}," Fog Storage GoogleJSON Mock get_object":{"type":"method","name":"get_object","children":[],"call":[" raise ","Excon Errors  status_error ","response status= ","response body= ","object [] ","block call ","data read ","(lvar :remaining) min ","remaining > ","data length ","StringIO  new "," block_given? ","response headers []= ","response headers ","options [] < ","Time  parse ","options [] ","options [] == ","options [] >= ","options [] != ","bucket [] [] ","bucket [] "," data [] [] "," data [] "," data ","Excon Response  new ","ArgumentError  new ","Fog Mock  not_implemented ","Excon Response  new  status= ","Excon Response  new  body= ","bucket [] []  [] ","StringIO  new  read ","(lvar :data length ) min ","data length  > ","StringIO  new  length ","Excon Response  new  headers []= ","Excon Response  new  headers "," data [] []  [] [] "," data [] []  [] "," StringIO  new  [] [] "," StringIO  new  [] "," StringIO  new  "]}," Fog Storage GoogleJSON Real get_object":{"type":"method","name":"get_object","children":[],"call":["object body= ","result body ","result body empty? ","result body nil? ","object headers= ","object body ","@client execute ","parameters []= "," request ","@storage_json objects get ","@storage_json objects "," raise ","ArgumentError  new ","buf unlink ","object []= ","buf read ","@storage_json get_object ","all_opts merge ","buf path ","@storage_json get_object to_h "," Google Apis RequestOptions  default merge "," Google Apis RequestOptions  default ","Tempfile  new "," block_given? ","buf close! ","buf seek ","buf binmode "," request  body= ","@storage_json get_object to_h  body= ","@client execute  body ","@client execute  body empty? ","@client execute  body nil? "," request  headers= ","@storage_json get_object to_h  headers= "," request  body ","@storage_json get_object to_h  body ","@storage_json  request s get ","@storage_json @storage_json get_object to_h s get ","@storage_json  request s ","@storage_json @storage_json get_object to_h s ","Tempfile  new  unlink "," request  []= ","@storage_json get_object to_h  []= ","Tempfile  new  read ","@storage_json get_ request  ","@storage_json get_@storage_json get_object to_h  ","Tempfile  new  path ","@storage_json get_ request  to_h ","@storage_json get_@storage_json get_object to_h  to_h ","Tempfile  new  close! ","Tempfile  new  seek ","Tempfile  new  binmode "]}," Fog Storage GoogleJSON Mock get_bucket_acl":{"type":"method","name":"get_bucket_acl","children":[],"call":[" raise ","Excon Errors  status_error ","response status= ","response body= "," data [] [] [] "," data [] [] "," data [] "," data ","Excon Response  new ","Fog Mock  not_implemented ","Excon Response  new  status= ","Excon Response  new  body= "]}," Fog Storage GoogleJSON Real get_bucket_acl":{"type":"method","name":"get_bucket_acl","children":[],"call":[" request ","@storage_json bucket_access_controls list ","@storage_json bucket_access_controls "," raise ","ArgumentError  new ","@storage_json get_bucket_access_control "]}," Fog Storage GoogleJSON Mock get_bucket":{"type":"method","name":"get_bucket","children":[],"call":[" raise ","Excon Errors  status_error ","response status= ","response body []= ","response body [] [] ","options [] ","response body [] ","response body ","options [] < ","response body [] length ","response body= ","bucket [] ","truncated_contents size != ","contents size ","truncated_contents size ","contents [] ","(lvar :max_keys) min ","data merge! ","object [] to_i ","object [] ","Time  parse ","(str \"ETag\") include? ! ","(str \"ETag\") include? ","object reject ","(send\n  (block\n    (send\n      (send\n        (send\n          (lvar :bucket) :[]\n          (sym :objects)) :values) :sort)\n    (args\n      (arg :x)\n      (arg :y))\n    (send\n      (send\n        (lvar :x) :[]\n        (str \"Key\")) :<=>\n      (send\n        (lvar :y) :[]\n        (str \"Key\")))) :reject) map ","object [] <= ","object [] [] != ","object [] [] ","options [] length ","(send\n  (send\n    (send\n      (lvar :bucket) :[]\n      (sym :objects)) :values) :sort) reject ","x [] <=> ","y [] ","x [] ","bucket [] values sort ","bucket [] values "," data [] [] "," data [] "," data ","bucket_name == ","name to_s ","(str \"(\\\\w+\\\\.?)*\") match ","Excon Response  new ","ArgumentError  new ","Fog Mock  not_implemented ","Excon Response  new  status= ","Excon Response  new  body []= ","Excon Response  new  body [] [] ","Excon Response  new  body [] ","Excon Response  new  body ","Excon Response  new  body [] length ","Excon Response  new  body= "," data [] []  [] ","contents []  size != ","truncated_contents (lvar :max_keys) min  != ","contents (lvar :max_keys) min  ","contents []  size ","truncated_contents (lvar :max_keys) min  ","(send\n  (block\n    (send\n      (send\n        (send\n          (lvar : data [] [] ) :[]\n          (sym :objects)) :values) :sort)\n    (args\n      (arg :x)\n      (arg :y))\n    (send\n      (send\n        (lvar :x) :[]\n        (str \"Key\")) :<=>\n      (send\n        (lvar :y) :[]\n        (str \"Key\")))) :reject) map ","(send\n  (send\n    (send\n      (lvar : data [] [] ) :[]\n      (sym :objects)) :values) :sort) reject "," data [] []  [] values sort "," data [] []  [] values "," data [] [] _name == ","bucket_(str \"(\\w+\\.?)*\") match  == ","(str \"(\\w+\\.?)*\") match  to_s "]}," Fog Storage GoogleJSON Real get_bucket":{"type":"method","name":"get_bucket","children":[],"call":[" request ","parameters merge! ","@storage_json buckets get ","@storage_json buckets "," raise ","ArgumentError  new ","@storage_json get_bucket "]}," Fog Storage GoogleJSON Mock delete_object":{"type":"method","name":"delete_object","children":[],"call":[" raise ","Excon Errors  status_error ","response status= ","bucket [] delete ","bucket [] ","bucket [] [] "," data [] [] "," data [] "," data ","Excon Response  new ","Fog Mock  not_implemented ","Excon Response  new  status= "," data [] []  [] delete "," data [] []  [] "," data [] []  [] [] "]}," Fog Storage GoogleJSON Real delete_object":{"type":"method","name":"delete_object","children":[],"call":[" request ","@storage_json objects delete ","@storage_json objects ","@storage_json delete_object "]}," Fog Storage GoogleJSON Mock delete_bucket":{"type":"method","name":"delete_bucket","children":[],"call":["response status= "," data [] delete "," data [] "," data "," raise ","Excon Errors  status_error "," data [] [] [] empty? ! "," data [] [] [] empty? "," data [] [] [] "," data [] [] "," data [] [] nil? ","Excon Response  new ","Fog Mock  not_implemented ","Excon Response  new  status= "]}," Fog Storage GoogleJSON Real delete_bucket":{"type":"method","name":"delete_bucket","children":[],"call":[" request ","@storage_json buckets delete ","@storage_json buckets ","@storage_json delete_bucket "]}," Fog Storage GoogleJSON Mock copy_object":{"type":"method","name":"copy_object","children":[],"call":[" raise ","Excon Errors  status_error ","response status= ","response body= ","Time  parse ","target_object [] ","target_bucket [] []= ","target_bucket [] ","target_object merge! ","source_object dup "," data [] [] "," data [] "," data ","source_bucket [] [] ","source_bucket [] ","Excon Response  new ","Fog Mock  not_implemented ","Excon Response  new  status= ","Excon Response  new  body= ","source_object dup  [] "," data [] []  [] []= "," data [] []  [] ","source_object dup  merge! "," data [] []  [] [] "]}," Fog Storage GoogleJSON Real copy_object":{"type":"method","name":"copy_object","children":[],"call":[" request ","parameters merge! ","@storage_json objects copy ","@storage_json objects ","@storage_json copy_object "," Google Apis RequestOptions  default merge "," Google Apis RequestOptions  default "," filter_keyword_args "," Google Apis StorageV1 Object  new ","@storage_json  Google Apis StorageV1 Object  new s copy ","@storage_json  Google Apis StorageV1 Object  new s ","@storage_json copy_ Google Apis StorageV1 Object  new  "]}," Fog Storage GoogleJSON Files new":{"type":"method","name":"new","children":[],"call":["(pair\n  (sym :directory)\n  (send nil :directory)) merge "," directory "," requires "]}," Fog Storage GoogleJSON Files head":{"type":"method","name":"head","children":[],"call":[" new ","data headers merge ","data headers "," service head_object "," directory key "," directory "," service "," requires "," service head_object  headers merge "," service head_object  headers "]}," Fog Storage GoogleJSON Files get_https_url":{"type":"method","name":"get_https_url","children":[],"call":[" service get_object_https_url "," directory key "," directory "," service "," requires "]}," Fog Storage GoogleJSON Files get":{"type":"method","name":"get","children":[],"call":[" new ","file_data merge! ","data body ","file_data []= ","data headers each ","data headers "," service get_object "," directory key "," directory "," service "," requires "," raise ","e status_code == ","e status_code "," service get_object to_h ","file_ service get_object  merge! ","file_ service get_object to_h  merge! "," service get_object  body "," service get_object to_h  body ","file_ service get_object  []= ","file_ service get_object to_h  []= "," service get_object  headers each "," service get_object to_h  headers each "," service get_object  headers "," service get_object to_h  headers "]}," Fog Storage GoogleJSON Files each":{"type":"method","name":"each","children":[],"call":["subset each_file_this_page ","subset all ","subset last key ","subset last ","subset is_truncated "," dup all "," dup "," block_given? ! "," block_given? ","subset next_page_token ","subset all  each_file_this_page "," dup all  each_file_this_page ","subset all  all "," dup all  all ","subset all  last key "," dup all  last key ","subset all  last "," dup all  last ","subset all  is_truncated "," dup all  is_truncated ","subset all  next_page_token "," dup all  next_page_token "]}," Fog Storage GoogleJSON Files all":{"type":"method","name":"all","children":[],"call":[" load ","parent files map ","parent files "," merge_attributes ","parent files attributes "," directory collection get "," directory key "," directory "," directory collection ","value to_s empty? ","value to_s ","value nil? ","options reject ","(pair\n  (str \"delimiter\")\n  (send nil :delimiter)) merge! "," prefix "," max_results "," page_token "," delimiter "," requires "," service list_objects [] [] "," service list_objects [] "," service list_objects "," service ","body [] "," service list_objects body "," service list_objects to_h [] "," service list_objects to_h "," attributes merge "," attributes ","parent to_h [] ","parent to_h "," attributes []= ","parent next_page_token "," directory collection get  files map "," service list_objects  files map "," directory collection get  files "," service list_objects  files "," directory collection get  files attributes "," service list_objects  files attributes ","(pair\n  (str \"delimiter\")\n  (send nil :delimiter)) merge!  reject "," service list_objects body  [] "," service list_objects  service list_objects body  "," directory collection get  to_h [] "," service list_objects  to_h [] "," directory collection get  to_h "," service list_objects  to_h "," directory collection get  next_page_token "," service list_objects  next_page_token "]}," Fog Storage GoogleJSON File url":{"type":"method","name":"url","children":[],"call":[" collection get_https_url "," key "," collection "," requires "]}," Fog Storage GoogleJSON File save":{"type":"method","name":"save","children":[],"call":["Fog Storage  get_content_type "," body "," content_type "," content_length= ","Fog Storage  get_body_size "," merge_attributes ","(str \"contentLength\") include? ","data headers reject ","data headers "," service put_object "," key "," directory key "," directory "," service ","options []= "," metadata "," content_encoding "," content_disposition "," cache_control ","options [] ","Fog Logger  deprecation "," caller first "," caller ","options != "," requires ","Hash  [] ","pair [] nil? ","pair [] ","(send\n  (const nil :FILE_INSERTABLE_FIELDS) :map) reject "," attributes [] "," attributes ","FILE_INSERTABLE_FIELDS  map "," service put_object  headers reject "," service put_object  headers ","Hash  []  []= "," meta service put_object  ","Hash  []  [] ","Hash  []  != "]}," Fog Storage GoogleJSON File public_url":{"type":"method","name":"public_url","children":[],"call":[" key "," directory key "," directory "," directory key to_s =~ "," directory key to_s ","entry [] == ","entry [] ","acl [] detect ","acl [] "," service get_object_acl body "," service get_object_acl "," service "," requires "," service get_object_acl body  [] detect "," service get_object_acl body  [] "," service get_object_ service get_object_acl body  body "," service get_object_ service get_object_acl body  "]}," Fog Storage GoogleJSON File public=":{"type":"method","name":"public=","children":[],"call":["new_public nil? "]}," Fog Storage GoogleJSON File owner=":{"type":"method","name":"owner=","children":[],"call":[" attributes []= ","new_owner [] "," attributes "]}," Fog Storage GoogleJSON File metadata=":{"type":"method","name":"metadata=","children":[],"call":[" attributes [] merge! "," attributes [] "," attributes "," attributes []= "," attributes [] nil? "]}," Fog Storage GoogleJSON File destroy":{"type":"method","name":"destroy","children":[],"call":[" service delete_object "," key "," directory key "," directory "," service "," requires "," raise ","e status_code == ","e status_code "]}," Fog Storage GoogleJSON File copy":{"type":"method","name":"copy","children":[],"call":["target_directory files get ","target_directory files "," service directories new "," service directories "," service "," service copy_object "," key "," directory key "," directory "," requires "," service directories new  files get "," service directories new  files "]}," Fog Storage GoogleJSON File body=":{"type":"method","name":"body=","children":[],"call":[" attributes []= "," attributes "]}," Fog Storage GoogleJSON File body":{"type":"method","name":"body","children":[],"call":["file body "," collection get "," identity "," collection "," last_modified "," attributes [] "," attributes "," attributes []= ","file attributes [] ","file attributes "," attributes key? "," collection get  body "," collection get  attributes [] "," collection get  attributes "]}," Fog Storage GoogleJSON File predefined_acl=":{"type":"method","name":"predefined_acl=","children":[],"call":[" raise ","ArgumentError  new ","@valid_predefined_acls join ","@valid_predefined_acls include? ","VALID_PREDEFINED_ACLS  join ","VALID_PREDEFINED_ACLS  include? "]}," Fog Storage GoogleJSON Directory save":{"type":"method","name":"save","children":[],"call":[" service put_bucket "," key "," service ","options []= "," attributes [] "," attributes "," requires "]}," Fog Storage GoogleJSON Directory public_url":{"type":"method","name":"public_url","children":[],"call":[" key "," key to_s =~ "," key to_s ","entry [] == ","entry [] ","acl [] detect ","acl [] "," service get_bucket_acl body "," service get_bucket_acl "," service "," requires "," service get_bucket_acl body  [] detect "," service get_bucket_acl body  [] "," service get_bucket_ service get_bucket_acl body  body "," service get_bucket_ service get_bucket_acl body  "]}," Fog Storage GoogleJSON Directory public=":{"type":"method","name":"public=","children":[],"call":[]}," Fog Storage GoogleJSON Directory files":{"type":"method","name":"files","children":[],"call":["Fog Storage GoogleJSON Files  new "," service ","attr merge "]}," Fog Storage GoogleJSON Directory destroy":{"type":"method","name":"destroy","children":[],"call":[" service delete_bucket "," key "," service "," requires "," raise ","e status_code == ","e status_code "]}," Fog Storage GoogleJSON Directory acl=":{"type":"method","name":"acl=","children":[],"call":[" raise ","ArgumentError  new ","valid_acls join ","valid_acls include? "]}," Fog Storage GoogleJSON Directories get":{"type":"method","name":"get","children":[],"call":[" new ","data [] "," service get_bucket body "," service get_bucket "," service "," remap_attributes "," raise ","e status_code == ","e status_code "," service get_bucket to_h ","options [] ","directory files ","files_attr_names include? ","options select "," service get_bucket body  [] "," service get_bucket to_h  [] "," new  files "]}," Fog Storage Google new":{"type":"method","name":"new","children":[],"call":[]}," Fog Compute Google Real list_subnetworks":{"type":"method","name":"list_subnetworks","children":[],"call":[" request ","parameters []= ","options [] ","@compute subnetworks list ","@compute subnetworks ","region_name split [] ","region_name split ","region_name start_with? ","@compute list_subnetworks ","region_name split []  split [] ","region_name split []  split ","region_name split []  start_with? "]}," Fog Compute Google Mock list_subnetworks":{"type":"method","name":"list_subnetworks","children":[],"call":[" build_excon_response "," api_version ","d [] split [] == ","d [] split [] ","d [] split ","d [] "," data [] values select "," data [] values "," data [] "," data ","region_name split [] ","region_name split ","region_name start_with? ","Fog Mock  not_implemented ","region_name split []  split [] ","region_name split []  split ","region_name split []  start_with? "]}," Fog Compute Google Real list_aggregated_subnetworks":{"type":"method","name":"list_aggregated_subnetworks","children":[],"call":[" request ","parameters []= ","options [] ","@compute subnetworks aggregated_list ","@compute subnetworks ","@compute aggregated_subnetwork_list "]}," Fog Compute Google Mock list_aggregated_subnetworks":{"type":"method","name":"list_aggregated_subnetworks","children":[],"call":[" build_excon_response "," api_version ","memo [] [] push ","memo [] [] ","memo [] ","subnetwork [] split [] join ","subnetwork [] split [] ","subnetwork [] split ","subnetwork [] "," data [] each_with_object "," data [] "," data ","Fog Mock  not_implemented "]}," Fog Compute Google Real insert_subnetwork":{"type":"method","name":"insert_subnetwork","children":[],"call":[" request ","body_object []= ","options [] ","@compute subnetworks insert ","@compute subnetworks ","network start_with? ","region_name split [] ","region_name split ","region_name start_with? ","@compute insert_subnetwork "," Google Apis ComputeV1 Subnetwork  new ","data []= ","options [] nil? ","optional_fields inject ","@compute  Google Apis ComputeV1 Subnetwork  new s insert ","@compute  Google Apis ComputeV1 Subnetwork  new s ","region_name split []  split [] ","region_name split []  split ","region_name split []  start_with? ","@compute insert_ Google Apis ComputeV1 Subnetwork  new  "]}," Fog Compute Google Mock insert_subnetwork":{"type":"method","name":"insert_subnetwork","children":[],"call":[" build_excon_response "," data [] [] "," data [] "," data "," data [] []= ","object [] ","Time  now iso8601 ","Time  now ","Fog Mock  random_numbers to_s ","Fog Mock  random_numbers "," random_operation "," api_version ","gateway join ","gateway []= ","ip_range split first split ","ip_range split first ","ip_range split ","network split [] ","network split ","region_name split [] ","region_name split ","region_name start_with? ","subnetwork_name split [] ","subnetwork_name split ","subnetwork_name start_with? ","Fog Mock  not_implemented "," random_ random_operation  ","ip_range split first split  join ","ip_range split first split  []= ","region_name split []  split [] ","region_name split []  split ","region_name split []  start_with? ","subnetwork split []  split [] ","subnetwork_name split []  split [] ","subnetwork split []  split ","subnetwork_name split []  split ","subnetwork split []  start_with? ","subnetwork_name split []  start_with? "]}," Fog Compute Google Real get_subnetwork":{"type":"method","name":"get_subnetwork","children":[],"call":[" request ","@compute subnetworks get ","@compute subnetworks ","region_name split [] ","region_name split ","region_name start_with? ","subnetwork_name split [] ","subnetwork_name split ","subnetwork_name start_with? ","@compute get_subnetwork ","region_name split []  split [] ","region_name split []  split ","region_name split []  start_with? ","subnetwork_name split []  split [] ","subnetwork_name split []  split ","subnetwork_name split []  start_with? "]}," Fog Compute Google Mock get_subnetwork":{"type":"method","name":"get_subnetwork","children":[],"call":[" build_excon_response ","subnetwork [] split [] == ","subnetwork [] split [] ","subnetwork [] split ","subnetwork [] "," data [] [] "," data [] "," data ","region_name split [] ","region_name split ","region_name start_with? ","subnetwork_name split [] ","subnetwork_name split ","subnetwork_name start_with? ","Fog Mock  not_implemented "," data [] []  [] split [] == "," data [] []  [] split [] "," data [] []  [] split "," data [] []  [] ","region_name split []  split [] ","region_name split []  split ","region_name split []  start_with? "," data [] [] _name split [] ","subnetwork_name split []  split [] "," data [] [] _name split ","subnetwork_name split []  split "," data [] [] _name start_with? ","subnetwork_name split []  start_with? "]}," Fog Compute Google Real delete_subnetwork":{"type":"method","name":"delete_subnetwork","children":[],"call":[" request ","@compute subnetworks delete ","@compute subnetworks ","region_name split [] ","region_name split ","region_name start_with? ","@compute delete_subnetwork ","region_name split []  split [] ","region_name split []  split ","region_name split []  start_with? "]}," Fog Compute Google Mock delete_subnetwork":{"type":"method","name":"delete_subnetwork","children":[],"call":[" build_excon_response "," data [] [] "," data [] "," data "," data [] delete "," data [] []= "," api_version ","Time  now iso8601 ","Time  now "," data [] [] [] ","Fog Mock  random_numbers to_s ","Fog Mock  random_numbers "," random_operation "," get_subnetwork ","region_name split [] ","region_name split ","region_name start_with? ","subnetwork_name split [] ","subnetwork_name split ","subnetwork_name start_with? ","Fog Mock  not_implemented "," random_ random_operation  ","region_name split []  split [] ","region_name split []  split ","region_name split []  start_with? ","subnetwork_name split []  split [] ","subnetwork_name split []  split ","subnetwork_name split []  start_with? "]}," Fog Compute Google Subnetworks get":{"type":"method","name":"get","children":[],"call":[" new "," service get_subnetwork body "," service get_subnetwork "," service "," raise ","e status_code == ","e status_code "," service get_subnetwork to_h ","response first ","response empty? "," all "," service get_ service get_subnetwork body  body "," service get_ service get_subnetwork to_h  body "," service get_response first  body "," service get_ service get_subnetwork body  "," service get_ service get_subnetwork to_h  "," service get_response first  "," service get_ service get_subnetwork body  to_h "," service get_ service get_subnetwork to_h  to_h "," service get_response first  to_h "," all  first "," all  empty? "]}," Fog Compute Google Subnetworks all":{"type":"method","name":"all","children":[],"call":[" load ","data concat ","region [] "," service list_aggregated_subnetworks body [] each_value "," service list_aggregated_subnetworks body [] "," service list_aggregated_subnetworks body "," service list_aggregated_subnetworks "," service "," service list_subnetworks body [] "," service list_subnetworks body "," service list_subnetworks ","filters [] "," service list_subnetworks to_h [] "," service list_subnetworks to_h ","region_obj [] "," service list_aggregated_subnetworks to_h [] each_value "," service list_aggregated_subnetworks to_h [] "," service list_aggregated_subnetworks to_h ","region nil? ","items map ","filters []= ","next_page_token empty? ","next_page_token nil? ","items concat ","region_obj subnetworks ","data items each_value ","data items ","data next_page_token "," loop "," service list_subnetworks to_h []  concat "," service list_aggregated_subnetworks  concat "," service list_subnetworks  concat ","data next_page_token  empty? ","data next_page_token  nil? "," service list_subnetworks to_h []  items each_value "," service list_aggregated_subnetworks  items each_value "," service list_subnetworks  items each_value "," service list_subnetworks to_h []  items "," service list_aggregated_subnetworks  items "," service list_subnetworks  items "," service list_subnetworks to_h []  next_page_token "," service list_aggregated_subnetworks  next_page_token "," service list_subnetworks  next_page_token ","data data next_page_token  "]}," Fog Compute Google Subnetwork reload":{"type":"method","name":"reload","children":[],"call":[" merge_attributes ","data attributes "," collection get "," region split [] "," region split "," region "," identity "," collection "," requires "," collection get  attributes "]}," Fog Compute Google Subnetwork destroy":{"type":"method","name":"destroy","children":[],"call":[" ready? ","operation wait_for ","Fog Compute Google Operations  new get ","data body [] ","data body ","Fog Compute Google Operations  new "," service "," service delete_subnetwork "," region "," identity "," requires ","data region ","data name ","Fog Compute Google Operations  new get  wait_for "," service delete_subnetwork  body [] "," service delete_subnetwork  body "," service delete_subnetwork  region "," service delete_subnetwork  name "]}," Fog Compute Google Subnetwork save":{"type":"method","name":"save","children":[],"call":[" reload "," pending? ! "," pending? ","operation wait_for ","Fog Compute Google Operations  new get ","data body [] ","data body ","Fog Compute Google Operations  new "," service "," service insert_subnetwork "," attributes "," ip_cidr_range "," network "," region "," identity "," requires ","data region ","data name "," ready? ","Fog Compute Google Operations  new get  wait_for "," service insert_subnetwork  body [] "," service insert_subnetwork  body "," service insert_subnetwork  region "," service insert_subnetwork  name "]}," Fog Compute Google Images current":{"type":"method","name":"current","children":[],"call":["data push ","img deprecated ","all_images each "," all "," all reject "," all  each "]}," Fog Google Pubsub Mock pull_subscription":{"type":"method","name":"pull_subscription","children":[],"call":[" build_excon_response ","msg [] ","sub [] take map ","sub [] take ","options [] ","sub [] ","subscription_name split [] ","subscription_name split ","sub nil? "," data [] [] "," data [] "," data ","Fog Google Pubsub  subscription_name "," raise "," data [] []  [] take map "," data [] []  [] take "," data [] []  [] "," data [] [] scription_name split [] ","Fog Google Pubsub  subscription_name  split [] "," data [] [] scription_name split ","Fog Google Pubsub  subscription_name  split "," data [] []  nil? ","Fog Google Pub data [] []    data [] [] scription_name ","Fog Google Pubsub  Fog Google Pubsub  subscription_name  "]}," Fog Google Pubsub Real pull_subscription":{"type":"method","name":"pull_subscription","children":[],"call":[" request ","options [] ","Fog Google Pubsub  subscription_name ","@pubsub projects subscriptions pull ","@pubsub projects subscriptions ","@pubsub projects ","@pubsub pull_subscription "," Google Apis PubsubV1 PullRequest  new ","defaults merge ","defaults merge  [] "]}," Fog Google Pubsub Mock publish_topic":{"type":"method","name":"publish_topic","children":[],"call":[" build_excon_response "," topic_name split [] "," topic_name split "," topic_name ","msg [] ","published_messages map ","sub [] ","sub [] == "," data [] values each "," data [] values "," data [] "," data ","msg merge ","Time  now iso8601 ","Time  now ","Fog Mock  random_letters ","messages map "," data [] key? "," raise "]}," Fog Google Pubsub Real publish_topic":{"type":"method","name":"publish_topic","children":[],"call":[" request ","@pubsub projects topics publish ","@pubsub projects topics ","@pubsub projects ","@pubsub publish_topic "," Google Apis PubsubV1 PublishRequest  new "]}," Fog Google Pubsub Mock list_topics":{"type":"method","name":"list_topics","children":[],"call":[" build_excon_response "," data [] values "," data [] "," data "," raise "]}," Fog Google Pubsub Real list_topics":{"type":"method","name":"list_topics","children":[],"call":[" request ","project to_s ","project nil? ","@pubsub projects topics list ","@pubsub projects topics ","@pubsub projects ","@pubsub list_topics ","project to_s  to_s ","project to_s  nil? ","@pubsub project to_s s topics list ","@pubsub project to_s s topics ","@pubsub project to_s s "]}," Fog Google Pubsub Mock list_subscriptions":{"type":"method","name":"list_subscriptions","children":[],"call":[" build_excon_response ","(str \"name\") include? ","sub select "," data [] values map "," data [] values "," data [] "," data "," raise "]}," Fog Google Pubsub Real list_subscriptions":{"type":"method","name":"list_subscriptions","children":[],"call":[" request ","project to_s ","project nil? ","@pubsub projects subscriptions list ","@pubsub projects subscriptions ","@pubsub projects ","@pubsub list_subscriptions ","project to_s  to_s ","project to_s  nil? ","@pubsub project to_s s subscriptions list ","@pubsub project to_s s subscriptions ","@pubsub project to_s s "]}," Fog Google Pubsub Mock get_topic":{"type":"method","name":"get_topic","children":[],"call":[" build_excon_response "," data [] [] clone "," data [] [] "," data [] "," data ","topic_name split [] ","topic_name split "," data [] key? ! "," data [] key? "," raise "]}," Fog Google Pubsub Real get_topic":{"type":"method","name":"get_topic","children":[],"call":[" request ","topic_name to_s ","@pubsub projects topics get ","@pubsub projects topics ","@pubsub projects ","@pubsub get_topic "]}," Fog Google Pubsub Mock get_subscription":{"type":"method","name":"get_subscription","children":[],"call":[" build_excon_response ","(str \"name\") include? ","sub select ","subscription_name split [] ","subscription_name split ","sub nil? "," data [] [] "," data [] "," data "," raise "," data [] []  select "," data [] [] scription_name split [] "," data [] [] scription_name split "," data [] []  nil? "]}," Fog Google Pubsub Real get_subscription":{"type":"method","name":"get_subscription","children":[],"call":[" request ","subscription_name to_s ","@pubsub projects subscriptions get ","@pubsub projects subscriptions ","@pubsub projects ","@pubsub get_subscription "]}," Fog Google Pubsub Mock delete_topic":{"type":"method","name":"delete_topic","children":[],"call":[" build_excon_response "," data [] delete "," data [] "," data "," raise "]}," Fog Google Pubsub Real delete_topic":{"type":"method","name":"delete_topic","children":[],"call":[" request ","topic_name to_s ","@pubsub projects topics delete ","@pubsub projects topics ","@pubsub projects ","@pubsub delete_topic "]}," Fog Google Pubsub Mock delete_subscription":{"type":"method","name":"delete_subscription","children":[],"call":[" build_excon_response "," data [] delete "," data [] "," data "," raise "]}," Fog Google Pubsub Real delete_subscription":{"type":"method","name":"delete_subscription","children":[],"call":[" request ","subscription_name to_s ","@pubsub projects subscriptions delete ","@pubsub projects subscriptions ","@pubsub projects ","@pubsub delete_subscription "]}," Fog Google Pubsub Mock create_topic":{"type":"method","name":"create_topic","children":[],"call":[" build_excon_response ","data clone "," data [] []= "," data [] "," data "," raise "]}," Fog Google Pubsub Real create_topic":{"type":"method","name":"create_topic","children":[],"call":[" request ","topic_name to_s ","@pubsub projects topics create ","@pubsub projects topics ","@pubsub projects ","@pubsub create_topic "]}," Fog Google Pubsub Mock create_subscription":{"type":"method","name":"create_subscription","children":[],"call":[" build_excon_response "," data [] []= ","subscription merge "," data [] "," data "," raise "]}," Fog Google Pubsub Real create_subscription":{"type":"method","name":"create_subscription","children":[],"call":[" request ","body []= ","ack_deadline_seconds nil? ","body [] []= ","push_config [] ","body [] ","push_config key? ","push_config [] clone ","push_config nil? ! ","push_config nil? ","topic to_s ","topic name ","topic is_a? ","parameters []= ","subscription_name to_s ","subscription_name nil? ","@pubsub projects subscriptions create ","@pubsub projects subscriptions ","@pubsub projects ","push_config empty? ","push_config any? ","@pubsub create_subscription "," Google Apis PubsubV1 Subscription  new "," Google Apis PubsubV1 Subscription  new _name to_s "," Google Apis PubsubV1 Subscription  new _name nil? ","@pubsub projects  Google Apis PubsubV1 Subscription  new s create ","@pubsub projects  Google Apis PubsubV1 Subscription  new s ","@pubsub create_ Google Apis PubsubV1 Subscription  new  "]}," Fog Google Pubsub Mock acknowledge_subscription":{"type":"method","name":"acknowledge_subscription","children":[],"call":[" build_excon_response ","ack_ids member? ","msg [] ","sub [] delete_if ","sub [] "," data [] [] "," data [] "," data ","subscription to_s split [] ","subscription to_s split ","subscription to_s "," data [] key? "," raise "," data [] []  [] delete_if "," data [] []  [] "," data [] [] scription to_s split [] "," data [] [] scription to_s split "," data [] [] scription to_s "]}," Fog Google Pubsub Real acknowledge_subscription":{"type":"method","name":"acknowledge_subscription","children":[],"call":[" request ","subscription to_s ","@pubsub projects subscriptions acknowledge ","@pubsub projects subscriptions ","@pubsub projects ","@pubsub acknowledge_subscription "," Google Apis PubsubV1 AcknowledgeRequest  new ","ack_ids is_a? "]}," Fog Google Pubsub subscription_name":{"type":"method","name":"subscription_name","children":[],"call":[]}," Fog Google Pubsub Real initialize":{"type":"method","name":"initialize","children":[],"call":["@client discovered_api "," api_version "," initialize_google_client ","options []= ","GOOGLE_PUBSUB_API_SCOPE_URLS  join "," shared_initialize ","options [] "," Google Apis PubsubV1 PubsubService  new "," apply_client_options "," initialize_google_client  discovered_api "]}," Fog Google Pubsub Mock reset_data":{"type":"method","name":"reset_data","children":[],"call":[" class data delete "," project "," class data "," class "]}," Fog Google Pubsub Mock data":{"type":"method","name":"data","children":[],"call":[" class data [] "," project "," class data "," class "]}," Fog Google Pubsub Mock reset":{"type":"method","name":"reset","children":[],"call":[]}," Fog Google Pubsub Mock initialize":{"type":"method","name":"initialize","children":[],"call":[" shared_initialize ","options [] "]}," Fog Google Pubsub Topics get":{"type":"method","name":"get","children":[],"call":[" new "," service get_topic body "," service get_topic "," service "," raise ","e status_code == ","e status_code "," service get_topic to_h "," service get_ service get_topic body  body "," service get_ service get_topic to_h  body "," service get_ service get_topic body  "," service get_ service get_topic to_h  "," service get_ service get_topic body  to_h "," service get_ service get_topic to_h  to_h "]}," Fog Google Pubsub Topics all":{"type":"method","name":"all","children":[],"call":[" load "," service list_topics body [] "," service list_topics body "," service list_topics "," service "," service list_topics to_h [] "," service list_topics to_h "]}," Fog Google Pubsub Topic save":{"type":"method","name":"save","children":[],"call":[" create "]}," Fog Google Pubsub Topic publish":{"type":"method","name":"publish","children":[],"call":[" service publish_topic body [] "," service publish_topic body "," service publish_topic "," name "," service ","encoded_messages << ","encoded_message []= ","Base64  strict_encode64 ","message to_s ","message [] ","message key? ","message is_a? ","messages each "," requires "," service publish_topic to_h [] "," service publish_topic to_h "]}," Fog Google Pubsub Topic destroy":{"type":"method","name":"destroy","children":[],"call":[" service delete_topic "," name "," service "," requires "]}," Fog Google Pubsub Topic create":{"type":"method","name":"create","children":[],"call":[" service create_topic "," name "," service "," requires "]}," Fog Google Pubsub Subscriptions get":{"type":"method","name":"get","children":[],"call":[" new "," service get_subscription body "," service get_subscription "," service "," raise ","e status_code == ","e status_code "," service get_subscription to_h "," service get_ service get_subscription body  body "," service get_ service get_subscription to_h  body "," service get_ service get_subscription body  "," service get_ service get_subscription to_h  "," service get_ service get_subscription body  to_h "," service get_ service get_subscription to_h  to_h "]}," Fog Google Pubsub Subscriptions all":{"type":"method","name":"all","children":[],"call":[" load "," service list_subscriptions body [] "," service list_subscriptions body "," service list_subscriptions "," service "," service list_subscriptions to_h [] "," service list_subscriptions to_h "]}," Fog Google Pubsub Subscription destroy":{"type":"method","name":"destroy","children":[],"call":[" service delete_subscription "," name "," service "," requires "]}," Fog Google Pubsub Subscription save":{"type":"method","name":"save","children":[],"call":[" merge_attributes "," service create_subscription body "," service create_subscription "," ack_deadline_seconds "," push_config "," topic "," name "," service "," requires "," service create_subscription to_h "]}," Fog Google Pubsub Subscription acknowledge":{"type":"method","name":"acknowledge","children":[],"call":[" service acknowledge_subscription "," name "," service ","m to_s ","m ack_id ","m is_a? ","messages map ","messages empty? "]}," Fog Google Pubsub Subscription pull":{"type":"method","name":"pull","children":[],"call":["ReceivedMessage  new ","attrs [] []= ","Base64  decode64 ","recv_message [] [] ","recv_message [] ","attrs [] ","recv_message [] key? ","(pair\n  (sym :service)\n  (send nil :service)) merge "," name "," service ","data [] map ","data [] ","data key? "," service pull_subscription body "," service pull_subscription "," requires "," service pull_subscription to_h ","(pair\n  (sym :service)\n  (send nil :service)) merge  [] []= ","(pair\n  (sym :service)\n  (send nil :service)) merge  [] "," service pull_subscription body  [] map "," service pull_subscription to_h  [] map "," service pull_subscription body  [] "," service pull_subscription to_h  [] "," service pull_subscription body  key? "," service pull_subscription to_h  key? "]}," Fog Google Pubsub ReceivedMessage reload":{"type":"method","name":"reload","children":[],"call":["Fog Logger  warning "]}," Fog Google Pubsub ReceivedMessage acknowledge":{"type":"method","name":"acknowledge","children":[],"call":[" service acknowledge_subscription "," ack_id "," service "," requires "]}," Fog Google Pubsub ReceivedMessage initialize":{"type":"method","name":"initialize","children":[],"call":["attributes delete ","new_attributes clone ","new_attributes clone  delete ","new_new_attributes clone  clone "]}," Fog Storage GoogleJSON Mock list_buckets":{"type":"method","name":"list_buckets","children":[],"call":["Fog Mock  not_implemented "]}," Fog Storage GoogleJSON Real list_buckets":{"type":"method","name":"list_buckets","children":[],"call":[" request ","@storage_json buckets list ","@storage_json buckets ","@storage_json list_buckets "]}," Fog Storage GoogleJSON Directories all":{"type":"method","name":"all","children":[],"call":[" load "," service list_buckets body [] "," service list_buckets body "," service list_buckets "," service "," service list_buckets to_h [] "," service list_buckets to_h "]}," Fog Compute Google Real remove_instance_group_instances":{"type":"method","name":"remove_instance_group_instances","children":[],"call":[" request "," api_version ","instance start_with? ","instances map! ","@compute instance_groups remove_instances ","@compute instance_groups ","@compute remove_instance_group_instances "," Google Apis ComputeV1 InstanceGroupsRemoveInstancesRequest  new "," Google Apis ComputeV1 InstanceReference  new ","  Google Apis ComputeV1 InstanceGroupsRemoveInstancesRequest  new  "]}," Fog Compute Google Mock add_instance_group_instances":{"type":"method","name":"add_instance_group_instances","children":[],"call":["Fog Mock  not_implemented "]}," Fog Compute Google Real get_image_from_family":{"type":"method","name":"get_image_from_family","children":[],"call":[" request ","project nil? ","@compute images get_from_family ","@compute images ","@compute get_image_from_family "]}," Fog Compute Google Mock get_image_from_family":{"type":"method","name":"get_image_from_family","children":[],"call":["Fog Mock  not_implemented "]}," Fog Compute Google Real add_instance_group_instances":{"type":"method","name":"add_instance_group_instances","children":[],"call":[" request "," api_version ","instance start_with? ","instances map! ","@compute instance_groups add_instances ","@compute instance_groups ","@compute add_instance_group_instances "," Google Apis ComputeV1 InstanceGroupsAddInstancesRequest  new "," Google Apis ComputeV1 InstanceReference  new ","  Google Apis ComputeV1 InstanceGroupsAddInstancesRequest  new  "]}," Fog Compute Google InstanceGroup format_instance_list":{"type":"method","name":"format_instance_list","children":[],"call":["i self_link ","i class == ","i class ","instance_list map "," Array "," Array  map "]}," Fog Compute Google InstanceGroup list_instances":{"type":"method","name":"list_instances","children":[],"call":["instance_list << "," service servers get "," zone_name ","instance [] split [] ","instance [] split ","instance [] "," service servers "," service ","data [] each ","data [] "," service list_instance_group_instances body "," service list_instance_group_instances "," identity "," requires ","instance instance split [] ","instance instance split ","instance instance ","data items each ","data items "," service list_instance_group_instances body  [] each "," service list_instance_group_instances  [] each "," service list_instance_group_instances body  [] "," service list_instance_group_instances  [] "," service list_instance_group_instances body  items each "," service list_instance_group_instances  items each "," service list_instance_group_instances body  items "," service list_instance_group_instances  items "]}," Fog Compute Google InstanceGroup remove_instances":{"type":"method","name":"remove_instances","children":[],"call":[" service remove_instance_group_instances "," format_instance_list "," zone_name "," identity "," service "," requires "]}," Fog Compute Google InstanceGroup add_instances":{"type":"method","name":"add_instances","children":[],"call":[" service add_instance_group_instances "," format_instance_list "," zone_name "," identity "," service "," requires "]}," Fog Compute Google Images all_projects":{"type":"method","name":"all_projects","children":[],"call":["(send\n  (send nil :service) :project) + + "," service extra_global_projects "," service ","(send\n  (send nil :service) :project) + "," service project "," service exclude_projects include? "," service exclude_projects ","project_list delete_if "," service exclude_projects empty? ","(send\n  (send nil :service) :project) + +  delete_if "]}," Fog Compute Google Images get_from_family":{"type":"method","name":"get_from_family","children":[],"call":[" new ","data nil? ","data []= "," service get_image_from_family body "," service get_image_from_family "," service "," all_projects each "," all_projects ","e status_code == ","e status_code "," service get_image_from_family to_h ","projects each ","project nil? "," service get_image_from_family body  nil? "," service get_image_from_family to_h  nil? "," service get_image_from_family body  []= "," service get_image_from_family to_h  []= "," all_ all_projects  each "," all_ all_projects  "," all_projects  each "]}," Fog Storage GoogleJSON Mock list_objects":{"type":"method","name":"list_objects","children":[],"call":["Fog Mock  not_implemented "]}," Fog Storage GoogleJSON Real list_objects":{"type":"method","name":"list_objects","children":[],"call":[" request ","parameters []= ","options [] ","options [] nil? ","(pair\n  (sym :delimiter)\n  (str \"delimiter\")) each ","@storage_json objects list ","@storage_json objects ","@storage_json list_objects "," Google Apis RequestOptions  default merge "," Google Apis RequestOptions  default ","allowed_opts include? ","options select "]}," Fog Compute Google Server generate_ssh_key_metadata":{"type":"method","name":"generate_ssh_key_metadata","children":[],"call":[" metadata ","key strip "," metadata [] "," metadata [] empty? "," metadata []= "," metadata key? "," metadata= ","Hash  new "," metadata nil? "," metadata_to_item_list ","metadata_map []= ","ssh_keys empty? ","metadata_map [] ","Hash  [] ","item [] "," metadata [] map "," metadata [] nil? "," ensure_key_comment ","Hash  []  []= ","Hash  []  [] "]}," Fog Compute Google Real update_firewall":{"type":"method","name":"update_firewall","children":[],"call":[" request ","body_object []= ","options [] ","options [] empty? ","options [] nil? ","@compute firewalls update ","@compute firewalls ","network start_with? ","@compute update_firewall "," Google Apis ComputeV1 Firewall  new ","UPDATABLE_FIREWALL_FIELDS  include? ","opts select "]}," Fog Compute Google Mock update_firewall":{"type":"method","name":"update_firewall","children":[],"call":["Fog Mock  not_implemented "]}," Fog Compute Google Real handle_networks":{"type":"method","name":"handle_networks","children":[],"call":["subnetwork update_interface_config "," subnetworks get "," subnetworks ","subnetwork is_a? ","options delete ","options key? ","network get_as_interface_config "," networks get "," networks ","network is_a? ","access_config [] == ","access_config [] ","access_config []= "," subnetworks get  update_interface_config ","options delete  update_interface_config ","sub networks get  update_interface_config ","suboptions delete  update_interface_config ","  subnetworks get s get "," options delete s get "," sub networks get s get "," suboptions delete s get ","  subnetworks get s "," options delete s "," sub networks get s "," suboptions delete s "," subnetworks get  is_a? ","options delete  is_a? ","sub networks get  is_a? ","suboptions delete  is_a? "," networks get  get_as_interface_config ","options delete  get_as_interface_config ","  networks get s get ","  networks get s "," networks get  is_a? "]}," Fog Compute Google Subnetwork update_interface_config":{"type":"method","name":"update_interface_config","children":[],"call":["network_interface []= "," self_link "]}," Fog Compute Google Server provisioning?":{"type":"method","name":"provisioning?","children":[],"call":[" state == "," state "," status == "," status "]}," Fog Compute Google Network get_as_interface_config":{"type":"method","name":"get_as_interface_config","children":[],"call":["network_interface []= "," self_link "]}," Fog Compute Google InstanceGroup subnetwork_name":{"type":"method","name":"subnetwork_name","children":[],"call":[" subnetwork split [] "," subnetwork split "," subnetwork "," subnetwork nil? "]}," Fog Compute Google InstanceGroup network_name":{"type":"method","name":"network_name","children":[],"call":[" network split [] "," network split "," network "," network nil? "]}," Fog Compute Google Firewall update":{"type":"method","name":"update","children":[],"call":[" reload "," pending? ! "," pending? ","operation wait_for ","Fog Compute Google Operations  new get ","data body [] ","data body ","Fog Compute Google Operations  new "," service "," service update_firewall "," attributes "," network "," allowed "," identity "," requires ","data name "," ready? ","Fog Compute Google Operations  new get  wait_for "," service update_firewall  body [] "," service update_firewall  body "," service update_firewall  name "]}," Fog Compute Google Real set_target_https_proxy_url_map":{"type":"method","name":"set_target_https_proxy_url_map","children":[],"call":[" request ","url_map self_link ","url_map class == ","url_map class ","target_https_proxy name ","@compute target_https_proxies set_url_map ","@compute target_https_proxies ","@compute set_target_https_proxy_url_map "," Google Apis ComputeV1 UrlMapReference  new ","url_map self_link  self_link ","url_map self_link  class == ","url_map self_link  class ","@compute target_https_proxies set_url_map self_link  ","@compute set_target_https_proxy_url_map self_link  "]}," Fog Compute Google Mock set_target_https_proxy_url_map":{"type":"method","name":"set_target_https_proxy_url_map","children":[],"call":["Fog Mock  not_implemented "]}," Fog Compute Google Real list_target_https_proxies":{"type":"method","name":"list_target_https_proxies","children":[],"call":[" request ","@compute target_https_proxies list ","@compute target_https_proxies ","@compute list_target_https_proxies "]}," Fog Compute Google Mock list_target_https_proxies":{"type":"method","name":"list_target_https_proxies","children":[],"call":["Fog Mock  not_implemented "]}," Fog Compute Google Real list_ssl_certificates":{"type":"method","name":"list_ssl_certificates","children":[],"call":[" request ","@compute ssl_certificates list ","@compute ssl_certificates ","@compute list_ssl_certificates "]}," Fog Compute Google Mock list_ssl_certificates":{"type":"method","name":"list_ssl_certificates","children":[],"call":["Fog Mock  not_implemented "]}," Fog Compute Google Real insert_target_https_proxy":{"type":"method","name":"insert_target_https_proxy","children":[],"call":[" request ","body_object merge! ","@compute target_https_proxies insert ","@compute target_https_proxies ","@compute insert_target_https_proxy "," Google Apis ComputeV1 TargetHttpsProxy  new "]}," Fog Compute Google Mock insert_target_https_proxy":{"type":"method","name":"insert_target_https_proxy","children":[],"call":["Fog Mock  not_implemented "]}," Fog Compute Google Real insert_ssl_certificate":{"type":"method","name":"insert_ssl_certificate","children":[],"call":[" request ","body_object []= ","options [] ","@compute ssl_certificates insert ","@compute ssl_certificates ","@compute insert_ssl_certificate "," Google Apis ComputeV1 SslCertificate  new "]}," Fog Compute Google Mock insert_ssl_certificate":{"type":"method","name":"insert_ssl_certificate","children":[],"call":["Fog Mock  not_implemented "]}," Fog Compute Google Real insert_global_address":{"type":"method","name":"insert_global_address","children":[],"call":[" request ","body_object []= ","options [] ","@compute global_addresses insert ","@compute global_addresses ","@compute insert_global_address "," Google Apis ComputeV1 Address  new ","(send\n  (lvar :options) :select) merge ","INSERTABLE_ADDRESS_FIELDS  include? ","options select "]}," Fog Compute Google Mock insert_global_address":{"type":"method","name":"insert_global_address","children":[],"call":["Fog Mock  not_implemented "]}," Fog Compute Google Real get_target_https_proxy":{"type":"method","name":"get_target_https_proxy","children":[],"call":[" request ","@compute target_https_proxies get ","@compute target_https_proxies ","@compute get_target_https_proxy "]}," Fog Compute Google Mock get_target_https_proxy":{"type":"method","name":"get_target_https_proxy","children":[],"call":["Fog Mock  not_implemented "]}," Fog Compute Google Real get_ssl_certificate":{"type":"method","name":"get_ssl_certificate","children":[],"call":[" request ","@compute ssl_certificates get ","@compute ssl_certificates ","@compute get_ssl_certificate "]}," Fog Compute Google Mock get_ssl_certificate":{"type":"method","name":"get_ssl_certificate","children":[],"call":["Fog Mock  not_implemented "]}," Fog Compute Google Real get_global_address":{"type":"method","name":"get_global_address","children":[],"call":[" request ","@compute global_addresses get ","@compute global_addresses ","@compute get_global_address "]}," Fog Compute Google Mock get_global_address":{"type":"method","name":"get_global_address","children":[],"call":["Fog Mock  not_implemented "]}," Fog Compute Google Real delete_target_https_proxy":{"type":"method","name":"delete_target_https_proxy","children":[],"call":[" request ","@compute target_https_proxies delete ","@compute target_https_proxies ","@compute delete_target_https_proxy "]}," Fog Compute Google Mock delete_target_https_proxy":{"type":"method","name":"delete_target_https_proxy","children":[],"call":["Fog Mock  not_implemented "]}," Fog Compute Google Real delete_ssl_certificate":{"type":"method","name":"delete_ssl_certificate","children":[],"call":[" request ","@compute ssl_certificates delete ","@compute ssl_certificates ","@compute delete_ssl_certificate "," project "]}," Fog Compute Google Mock delete_ssl_certificate":{"type":"method","name":"delete_ssl_certificate","children":[],"call":["Fog Mock  not_implemented "]}," Fog Compute Google Real delete_global_address":{"type":"method","name":"delete_global_address","children":[],"call":[" request ","@compute global_addresses delete ","@compute global_addresses ","@compute delete_global_address "]}," Fog Compute Google Mock delete_global_address":{"type":"method","name":"delete_global_address","children":[],"call":["Fog Mock  not_implemented "]}," Fog Compute Google TargetHttpsProxy reload":{"type":"method","name":"reload","children":[],"call":[" merge_attributes ","data attributes "," collection get "," name "," collection "," requires "," identity "]}," Fog Compute Google TargetHttpsProxy ready?":{"type":"method","name":"ready?","children":[],"call":[" service get_target_https_proxy "," name "," service "," raise ","e status_code == ","e status_code "," identity "," requires "]}," Fog Compute Google TargetHttpsProxy set_url_map":{"type":"method","name":"set_url_map","children":[],"call":[" reload "," service set_target_https_proxy_url_map "," service "," ready? ","operation wait_for ","Fog Compute Google Operations  new get ","data name ","Fog Compute Google Operations  new "," identity "," requires ","Fog Compute Google Operations  new get  wait_for "," service set_target_https_proxy_url_map  name "]}," Fog Compute Google TargetHttpsProxy destroy":{"type":"method","name":"destroy","children":[],"call":["operation body [] == ","operation body [] ","operation body ","Fog  wait_for "," service delete_target_https_proxy "," name "," service "," requires "," ready? ","operation wait_for ","Fog Compute Google Operations  new get ","data name ","Fog Compute Google Operations  new "," identity "," service delete_target_https_proxy  body [] == ","Fog Compute Google Operations  new get  body [] == "," service delete_target_https_proxy  body [] ","Fog Compute Google Operations  new get  body [] "," service delete_target_https_proxy  body ","Fog Compute Google Operations  new get  body "," service delete_target_https_proxy  wait_for ","Fog Compute Google Operations  new get  wait_for "," service delete_target_https_proxy  name "]}," Fog Compute Google TargetHttpsProxy save":{"type":"method","name":"save","children":[],"call":[" reload "," pending? ! "," pending? ","operation wait_for ","Fog Compute Google Operations  new get ","data [] ","Fog Compute Google Operations  new "," service "," service insert_target_https_proxy body "," service insert_target_https_proxy "," name "," ssl_certificates "," url_map "," description "," requires ","data name "," identity "," ready? "," raise ","Fog Errors Error  new "," ssl_certificates is_a? ","Fog Compute Google Operations  new get  wait_for "," service insert_target_https_proxy body  [] "," service insert_target_https_proxy  [] "," service insert_target_https_proxy body  name "," service insert_target_https_proxy  name "]}," Fog Compute Google TargetHttpsProxies get":{"type":"method","name":"get","children":[],"call":[" new "," service get_target_https_proxy body "," service get_target_https_proxy "," service "," raise ","e status_code == ","e status_code "," service get_target_https_proxy to_h "," service get_ service get_target_https_proxy body  body "," service get_ service get_target_https_proxy to_h  body "," service get_ service get_target_https_proxy body  "," service get_ service get_target_https_proxy to_h  "," service get_ service get_target_https_proxy body  to_h "," service get_ service get_target_https_proxy to_h  to_h "]}," Fog Compute Google TargetHttpsProxies all":{"type":"method","name":"all","children":[],"call":[" load "," service list_target_https_proxies body [] "," service list_target_https_proxies body "," service list_target_https_proxies "," service "," service list_target_https_proxies to_h [] "," service list_target_https_proxies to_h ","opts []= ","next_page_token empty? ","next_page_token nil? ","data next_page_token ","items concat ","data to_h [] ","data to_h "," loop ","data next_page_token  empty? ","data next_page_token  nil? ","data data next_page_token  "," service list_target_https_proxies  next_page_token "," service list_target_https_proxies  to_h [] "," service list_target_https_proxies  to_h "]}," Fog Compute Google SslCertificates all":{"type":"method","name":"all","children":[],"call":[" load "," service list_ssl_certificates body [] "," service list_ssl_certificates body "," service list_ssl_certificates "," service "," service list_ssl_certificates to_h [] "," service list_ssl_certificates to_h ","opts []= ","next_page_token empty? ","next_page_token nil? ","data next_page_token ","items concat ","data to_h [] ","data to_h "," loop ","data next_page_token  empty? ","data next_page_token  nil? ","data data next_page_token  "," service list_ssl_certificates  next_page_token "," service list_ssl_certificates  to_h [] "," service list_ssl_certificates  to_h "]}," Fog Compute Google SslCertificates get":{"type":"method","name":"get","children":[],"call":[" new "," service get_ssl_certificate body "," service get_ssl_certificate "," service "," raise ","e status_code == ","e status_code ","certificate to_h "," service get_ssl_certificate to_h "," service get_ssl_ service get_ssl_certificate body  body "," service get_ssl_ service get_ssl_certificate  body "," service get_ service get_ssl_certificate to_h  body "," service get_ssl_ service get_ssl_certificate body  "," service get_ssl_ service get_ssl_certificate  "," service get_ service get_ssl_certificate to_h  "," service get_ssl_certificate body  to_h "," service get_ssl_certificate  to_h "," service get_ssl_ service get_ssl_certificate body  to_h "," service get_ssl_ service get_ssl_certificate  to_h "," service get_ service get_ssl_certificate to_h  to_h "]}," Fog Compute Google SslCertificate destroy":{"type":"method","name":"destroy","children":[],"call":[" ready? ","operation wait_for ","Fog Compute Google Operations  new get ","data body [] ","data body ","Fog Compute Google Operations  new "," service "," service delete_ssl_certificate "," identity "," requires ","data name ","Fog Compute Google Operations  new get  wait_for "," service delete_ssl_certificate  body [] "," service delete_ssl_certificate  body "," service delete_ssl_certificate  name "]}," Fog Compute Google SslCertificate save":{"type":"method","name":"save","children":[],"call":[" reload "," pending? ! "," pending? ","operation wait_for ","Fog Compute Google Operations  new get ","data body [] ","data body ","Fog Compute Google Operations  new "," service "," service insert_ssl_certificate "," attributes "," private_key "," certificate "," identity "," requires ","data name "," description "," ready? ","Fog Compute Google Operations  new get  wait_for "," service insert_ssl_certificate  body [] "," service insert_ssl_certificate  body "," service insert_ssl_certificate  name "]}," Fog Compute Google GlobalAddresses get_by_ip_address_or_name":{"type":"method","name":"get_by_ip_address_or_name","children":[],"call":[" get_by_name "," get_by_ip_address "]}," Fog Compute Google GlobalAddresses get_by_name":{"type":"method","name":"get_by_name","children":[],"call":[" new ","name first [] first ","name first [] ","name first ","name empty? ","region key? ","names each_value select ","names each_value "," service list_aggregated_addresses body [] "," service list_aggregated_addresses body "," service list_aggregated_addresses "," service ","data items first to_h ","data items first ","data items ","data items nil? ","data nil? "," service list_global_addresses "," service list_aggregated_addresses body []  each_value select "," service list_aggregated_addresses body []  each_value "," service list_global_addresses  items first to_h "," service list_global_addresses  items first "," service list_global_addresses  items "," service list_global_addresses  items nil? "," service list_global_addresses  nil? "]}," Fog Compute Google GlobalAddresses get_by_ip_address":{"type":"method","name":"get_by_ip_address","children":[],"call":[" new ","address first [] first ","address first [] ","address first ","address empty? ","region key? ","addresses each_value select ","addresses each_value "," service list_aggregated_addresses body [] "," service list_aggregated_addresses body "," service list_aggregated_addresses "," service ","data items first to_h ","data items first ","data items ","data items nil? ","data nil? "," service list_global_addresses "," service list_aggregated_addresses body []  each_value select "," service list_aggregated_addresses body []  each_value "," service list_aggregated_ service list_aggregated_addresses body []  body [] "," service list_aggregated_ service list_aggregated_addresses body []  body "," service list_aggregated_ service list_aggregated_addresses body []  "," service list_global_addresses  items first to_h "," service list_global_addresses  items first "," service list_global_addresses  items "," service list_global_addresses  items nil? "," service list_global_addresses  nil? "," service list_global_ service list_aggregated_addresses body []  "]}," Fog Compute Google GlobalAddresses get":{"type":"method","name":"get","children":[],"call":[" new "," service get_global_address body "," service get_global_address "," service "," raise ","e status_code == ","e status_code "," service get_global_address to_h "," service get_global_ service get_global_address body  body "," service get_global_ service get_global_address to_h  body "," service get_global_ service get_global_address body  "," service get_global_ service get_global_address to_h  "," service get_global_ service get_global_address body  to_h "," service get_global_ service get_global_address to_h  to_h "]}," Fog Compute Google GlobalAddresses all":{"type":"method","name":"all","children":[],"call":[" load ","data concat ","region [] "," service list_aggregated_addresses body [] each_value "," service list_aggregated_addresses body [] "," service list_aggregated_addresses body "," service list_aggregated_addresses "," service "," service list_global_addresses to_h [] "," service list_global_addresses to_h "," service list_global_addresses ","options []= ","next_page_token empty? ","next_page_token nil? ","data next_page_token ","items concat ","data to_h [] ","data to_h "," loop "," service list_global_addresses  concat ","data next_page_token  empty? ","data next_page_token  nil? ","data data next_page_token  "," service list_global_addresses  next_page_token "," service list_global_addresses  to_h [] "," service list_global_addresses  to_h "]}," Fog Compute Google GlobalAddress disassociate":{"type":"method","name":"disassociate","children":[],"call":["Fog Compute Google Operations  new get ","data body [] ","data body ","Fog Compute Google Operations  new "," service "," service delete_server_access_config ","server zone_name ","server name ","server network_interfaces first [] first [] ","server network_interfaces first [] first ","server network_interfaces first [] ","server network_interfaces first ","server network_interfaces ","server network_interfaces first [] empty? ","server network_interfaces first [] nil? "," service servers get "," users first split [] "," users first split "," users first "," users "," service servers "," users empty? "," users nil? "," in_use? ! "," in_use? "," service delete_server_access_config  body [] "," service delete_server_access_config  body "," service delete_server_server network_interfaces first [] first []  "," service delete_ service servers get _access_config "," service servers get  zone_name "," service servers get  name "," service servers get  network_interfaces first [] first [] "," service servers get  network_interfaces first [] first "," service servers get  network_interfaces first [] "," service servers get  network_interfaces first "," service servers get  network_interfaces "," service servers get  network_interfaces first [] empty? "," service servers get  network_interfaces first [] nil? "," service  service servers get s get "," service  service servers get s "]}," Fog Compute Google GlobalAddress associate":{"type":"method","name":"associate","children":[],"call":["Fog Compute Google Operations  new get ","data body [] ","data body ","Fog Compute Google Operations  new "," service "," service add_server_access_config "," address ","server zone_name ","server name ","server network_interfaces first [] ","server network_interfaces first ","server network_interfaces "," service add_server_access_config  body [] "," service add_server_access_config  body "]}," Fog Compute Google GlobalAddress in_use?":{"type":"method","name":"in_use?","children":[],"call":[" status == "," status "]}," Fog Compute Google GlobalAddress reload":{"type":"method","name":"reload","children":[],"call":[" merge_attributes ","data attributes "," collection get "," identity "," collection "," requires "," collection get  attributes "]}," Fog Compute Google GlobalAddress destroy":{"type":"method","name":"destroy","children":[],"call":[" ready? ","operation wait_for ","Fog Compute Google Operations  new get ","data body [] ","data body ","Fog Compute Google Operations  new "," service "," service delete_global_address "," identity "," requires ","data name ","Fog Compute Google Operations  new get  wait_for "," service delete_global_address  body [] "," service delete_global_address  body "," service delete_global_address  name "]}," Fog Compute Google GlobalAddress save":{"type":"method","name":"save","children":[],"call":[" reload "," pending? ! "," pending? ","operation wait_for ","Fog Compute Google Operations  new get ","data body [] ","data body ","Fog Compute Google Operations  new "," service "," service insert_global_address "," attributes "," identity "," requires ","data name "," ready? ","Fog Compute Google Operations  new get  wait_for "," service insert_global_address  body [] "," service insert_global_address  body "," service insert_global_address  name "]}," Fog Compute Google GlobalAddress server=":{"type":"method","name":"server=","children":[],"call":[" disassociate "," associate "," requires "]}," Fog Compute Google GlobalAddress server":{"type":"method","name":"server","children":[],"call":[" service servers get "," users first split [] "," users first split "," users first "," users "," service servers "," service "," users empty? "," users nil? "," in_use? ! "," in_use? "]}," Fog Google Monitoring Mock list_monitored_resource_descriptors":{"type":"method","name":"list_monitored_resource_descriptors","children":[],"call":[" build_excon_response ","Fog Mock  not_implemented "]}," Fog Google Monitoring Real list_monitored_resource_descriptors":{"type":"method","name":"list_monitored_resource_descriptors","children":[],"call":[" request ","parameters []= ","options [] ","options key? ","@monitoring projects monitored_resource_descriptors list ","@monitoring projects monitored_resource_descriptors ","@monitoring projects ","@monitoring list_project_monitored_resource_descriptors "]}," Fog Google Monitoring MonitoredResourceDescriptors all":{"type":"method","name":"all","children":[],"call":[" load "," service list_monitored_resource_descriptors body [] "," service list_monitored_resource_descriptors body "," service list_monitored_resource_descriptors "," service "," service list_monitored_resource_descriptors to_h [] "," service list_monitored_resource_descriptors to_h "]}," Fog Storage GoogleJSON Mock put_object_acl":{"type":"method","name":"put_object_acl","children":[],"call":["Fog Mock  not_implemented "]}," Fog Storage GoogleJSON Mock list_object_acl":{"type":"method","name":"list_object_acl","children":[],"call":["Fog Mock  not_implemented "]}," Fog Storage GoogleJSON Real list_object_acl":{"type":"method","name":"list_object_acl","children":[],"call":["@storage_json list_object_access_controls "," raise ","ArgumentError  new "]}," Fog Storage GoogleJSON Mock list_bucket_acl":{"type":"method","name":"list_bucket_acl","children":[],"call":["Fog Mock  not_implemented "]}," Fog Storage GoogleJSON Real list_bucket_acl":{"type":"method","name":"list_bucket_acl","children":[],"call":["@storage_json list_bucket_access_controls "," raise ","ArgumentError  new "]}," Fog Storage GoogleJSON Mock get_object_metadata":{"type":"method","name":"get_object_metadata","children":[],"call":["Fog Mock  not_implemented "]}," Fog Storage GoogleJSON Real get_object_metadata":{"type":"method","name":"get_object_metadata","children":[],"call":["@storage_json get_object "," Google Apis RequestOptions  default merge "," Google Apis RequestOptions  default "," raise ","ArgumentError  new "]}," Fog Storage GoogleJSON Files metadata":{"type":"method","name":"metadata","children":[],"call":[" new "," service get_object_metadata to_h "," service get_object_metadata "," directory key "," directory "," service "," requires "," service get_object_meta service get_object_metadata to_h  to_h "," service get_object_meta service get_object_metadata to_h  "]}," Fog Google SQL Mock update_user":{"type":"method","name":"update_user","children":[],"call":["Fog Mock  not_implemented "]}," Fog Google SQL Real update_user":{"type":"method","name":"update_user","children":[],"call":["@sql update_user "," Google Apis SqladminV1beta4 User  new "]}," Fog Google SQL Real list_users":{"type":"method","name":"list_users","children":[],"call":["@sql list_users "]}," Fog Google SQL Mock insert_user":{"type":"method","name":"insert_user","children":[],"call":["Fog Mock  not_implemented "]}," Fog Google SQL Real insert_user":{"type":"method","name":"insert_user","children":[],"call":["@sql insert_user "," Google Apis SqladminV1beta4 User  new "]}," Fog Google SQL Mock insert_backup_run":{"type":"method","name":"insert_backup_run","children":[],"call":["Fog Mock  not_implemented "]}," Fog Google SQL Real insert_backup_run":{"type":"method","name":"insert_backup_run","children":[],"call":["@sql insert_backup_run "," Google Apis SqladminV1beta4 BackupRun  new "]}," Fog Google SQL Mock delete_user":{"type":"method","name":"delete_user","children":[],"call":["Fog Mock  not_implemented "]}," Fog Google SQL Real delete_user":{"type":"method","name":"delete_user","children":[],"call":["@sql delete_user "]}," Fog Google SQL Mock delete_backup_run":{"type":"method","name":"delete_backup_run","children":[],"call":["Fog Mock  not_implemented "]}," Fog Google SQL Real delete_backup_run":{"type":"method","name":"delete_backup_run","children":[],"call":["@sql delete_backup_run "]}," Fog Google Monitoring Mock get_monitored_resource_descriptor":{"type":"method","name":"get_monitored_resource_descriptor","children":[],"call":[" raise "]}," Fog Google Monitoring Real get_monitored_resource_descriptor":{"type":"method","name":"get_monitored_resource_descriptor","children":[],"call":["@monitoring get_project_monitored_resource_descriptor "]}," Fog Google Monitoring Mock get_metric_descriptor":{"type":"method","name":"get_metric_descriptor","children":[],"call":["Fog Mock  not_implemented "]}," Fog Google Monitoring Real get_metric_descriptor":{"type":"method","name":"get_metric_descriptor","children":[],"call":["@monitoring get_project_metric_descriptor "]}," Fog Google Monitoring Mock delete_metric_descriptor":{"type":"method","name":"delete_metric_descriptor","children":[],"call":["Fog Mock  not_implemented "]}," Fog Google Monitoring Real delete_metric_descriptor":{"type":"method","name":"delete_metric_descriptor","children":[],"call":["@monitoring delete_project_metric_descriptor "]}," Fog Google Monitoring Mock create_timeseries":{"type":"method","name":"create_timeseries","children":[],"call":["Fog Mock  not_implemented "]}," Fog Google Monitoring Real create_timeseries":{"type":"method","name":"create_timeseries","children":[],"call":["@monitoring create_time_series "," Google Apis MonitoringV3 CreateTimeSeriesRequest  new ","@monitoring create_project_time_series "]}," Fog Google Monitoring Mock create_metric_descriptor":{"type":"method","name":"create_metric_descriptor","children":[],"call":["Fog Mock  not_implemented "]}," Fog Google Monitoring Real create_metric_descriptor":{"type":"method","name":"create_metric_descriptor","children":[],"call":["@monitoring create_project_metric_descriptor "," Google Apis MonitoringV3 MetricDescriptor  new "," Google Apis MonitoringV3 LabelDescriptor  new ","labels map ","@monitoring create_project_ Google Apis MonitoringV3 MetricDescriptor  new  "]}," Fog Google SQL Users all":{"type":"method","name":"all","children":[],"call":[" load "," service list_users to_h [] "," service list_users to_h "," service list_users "," service "]}," Fog Google SQL User save":{"type":"method","name":"save","children":[],"call":[" pending? ! "," pending? ","operation wait_for ","Fog Google SQL Operations  new get ","resp name ","Fog Google SQL Operations  new "," service "," service insert_user "," instance "," service update_user "," etag nil? "," etag ","data []= ","password nil? "," attributes "," requires "," ready? ","Fog Google SQL Operations  new get  wait_for "," service insert_user  name "," service update_user  name "," attributes  []= "]}," Fog Google SQL User destroy":{"type":"method","name":"destroy","children":[],"call":[" ready? ","operation wait_for ","Fog Google SQL Operations  new get ","resp name ","Fog Google SQL Operations  new "," service "," service delete_user "," name "," host "," instance "," requires ","async [] ","async is_a? ","Fog Google SQL Operations  new get  wait_for "," service delete_user  name ","async []  [] ","async []  is_a? "]}," Fog Google SQL Instance reload":{"type":"method","name":"reload","children":[],"call":[" merge_attributes ","data attributes "," collection get "," identity "," collection "," requires "," collection get  attributes "]}," Fog Google SQL Instance ip_configuration_ipv4_enabled":{"type":"method","name":"ip_configuration_ipv4_enabled","children":[],"call":[" settings fetch [] "," settings fetch "," settings "]}," Fog Google SQL Instance authorized_gae_applications":{"type":"method","name":"authorized_gae_applications","children":[],"call":[" settings [] "," settings "]}," Fog Google Monitoring MonitoredResourceDescriptors get":{"type":"method","name":"get","children":[],"call":[" raise ","e status_code == ","e status_code "," new "," service get_monitored_resource_descriptor to_h "," service get_monitored_resource_descriptor "," service "]}," Fog Google Monitoring MetricDescriptors get":{"type":"method","name":"get","children":[],"call":[" raise ","e status_code == ","e status_code "," new "," service get_metric_descriptor to_h "," service get_metric_descriptor "," service "]}," Fog Compute Google Real update_http_health_check":{"type":"method","name":"update_http_health_check","children":[],"call":["@compute update_http_health_check "," Google Apis ComputeV1 HttpHealthCheck  new ","opts merge "]}," Fog Compute Google Mock update_http_health_check":{"type":"method","name":"update_http_health_check","children":[],"call":["Fog Mock  not_implemented "]}," Fog Compute Google Real set_target_pool_backup":{"type":"method","name":"set_target_pool_backup","children":[],"call":["@compute set_target_pool_backup ","region split [] ","region split "," project "," Google Apis ComputeV1 TargetReference  new "]}," Fog Compute Google Mock set_target_pool_backup":{"type":"method","name":"set_target_pool_backup","children":[],"call":["Fog Mock  not_implemented "]}," Fog Compute Google Real set_target_https_proxy_ssl_certificates":{"type":"method","name":"set_target_https_proxy_ssl_certificates","children":[],"call":["@compute set_target_https_proxy_ssl_certificates "," Google Apis ComputeV1 TargetHttpsProxiesSetSslCertificatesRequest  new "]}," Fog Compute Google Mock set_target_https_proxy_ssl_certificates":{"type":"method","name":"set_target_https_proxy_ssl_certificates","children":[],"call":["Fog Mock  not_implemented "]}," Fog Compute Google Real set_subnetwork_private_ip_google_access":{"type":"method","name":"set_subnetwork_private_ip_google_access","children":[],"call":["@compute set_subnetwork_private_ip_google_access "," Google Apis ComputeV1 SubnetworksSetPrivateIpGoogleAccessRequest  new ","region_name split [] ","region_name split ","region_name start_with? ","region_name split []  split [] ","region_name split []  split ","region_name split []  start_with? "]}," Fog Compute Google Mock set_subnetwork_private_ip_google_access":{"type":"method","name":"set_subnetwork_private_ip_google_access","children":[],"call":["Fog Mock  not_implemented "]}," Fog Compute Google Real set_snapshot_labels":{"type":"method","name":"set_snapshot_labels","children":[],"call":["@compute set_snapshot_labels "," Google Apis ComputeV1 GlobalSetLabelsRequest  new "," project "]}," Fog Compute Google Mock set_snapshot_labels":{"type":"method","name":"set_snapshot_labels","children":[],"call":["Fog Mock  not_implemented "]}," Fog Compute Google Real set_server_tags":{"type":"method","name":"set_server_tags","children":[],"call":["@compute set_instance_tags "," Google Apis ComputeV1 Tags  new ","zone split [] ","zone split "]}," Fog Compute Google Mock set_server_tags":{"type":"method","name":"set_server_tags","children":[],"call":["Fog Mock  not_implemented "]}," Fog Compute Google Real set_server_metadata":{"type":"method","name":"set_server_metadata","children":[],"call":["@compute set_instance_metadata "," Google Apis ComputeV1 Metadata  new ","zone split [] ","zone split "," Google Apis ComputeV1 Metadata Item  new ","metadata_items map "]}," Fog Compute Google Mock set_server_metadata":{"type":"method","name":"set_server_metadata","children":[],"call":["Fog Mock  not_implemented "]}," Fog Compute Google Real patch_url_map":{"type":"method","name":"patch_url_map","children":[],"call":["@compute patch_url_map "," Google Apis ComputeV1 UrlMap  new "]}," Fog Compute Google Mock patch_url_map":{"type":"method","name":"patch_url_map","children":[],"call":["Fog Mock  not_implemented "]}," Fog Compute Google Real patch_firewall":{"type":"method","name":"patch_firewall","children":[],"call":["@compute patch_firewall "," Google Apis ComputeV1 Firewall  new ","UPDATABLE_FIREWALL_FIELDS  include? ","opts select "]}," Fog Compute Google Mock patch_firewall":{"type":"method","name":"patch_firewall","children":[],"call":["Fog Mock  not_implemented "]}," Fog Compute Google Real list_global_addresses":{"type":"method","name":"list_global_addresses","children":[],"call":["@compute list_global_addresses "]}," Fog Compute Google Mock list_global_addresses":{"type":"method","name":"list_global_addresses","children":[],"call":["Fog Mock  not_implemented "]}," Fog Compute Google Real list_aggregated_target_pools":{"type":"method","name":"list_aggregated_target_pools","children":[],"call":["@compute list_aggregated_target_pools "]}," Fog Compute Google Mock list_aggregated_target_pools":{"type":"method","name":"list_aggregated_target_pools","children":[],"call":["Fog Mock  not_implemented "]}," Fog Compute Google Real list_aggregated_forwarding_rules":{"type":"method","name":"list_aggregated_forwarding_rules","children":[],"call":["@compute list_aggregated_forwarding_rules "]}," Fog Compute Google Mock list_aggregated_forwarding_rules":{"type":"method","name":"list_aggregated_forwarding_rules","children":[],"call":["Fog Mock  not_implemented "]}," Fog Compute Google Real invalidate_url_map_cache":{"type":"method","name":"invalidate_url_map_cache","children":[],"call":["@compute invalidate_url_map_cache "," Google Apis ComputeV1 CacheInvalidationRule  new "]}," Fog Compute Google Mock invalidate_url_map_cache":{"type":"method","name":"invalidate_url_map_cache","children":[],"call":["Fog Mock  not_implemented "]}," Fog Compute Google Real process_network_interfaces":{"type":"method","name":"process_network_interfaces","children":[],"call":[" Google Apis ComputeV1 NetworkInterface  new ","network_interfaces map "," default_network_interface ","network_interfaces empty? ! ","network_interfaces empty? "]}," Fog Compute Google Real process_disks":{"type":"method","name":"process_disks","children":[],"call":["disk_lst first boot= ","disk_lst first "," Google Apis ComputeV1 AttachedDisk  new ","d attached_disk_obj ","d is_a? ","disks map "," raise ","ArgumentError  new ","disks empty? ! ","disks empty? ","d attached_disk_obj isk_lst first boot= ","d attached_disk_obj isk_lst first "," Google Apis ComputeV1 Attached attached_disk_obj Disk  new ","d attached_disk_obj  attached attached_disk_obj _d attached_disk_obj isk_obj ","d attached_disk_obj  is_a? ","d attached_disk_obj isks map ","d attached_disk_obj isks empty? ! ","d attached_disk_obj isks empty? "]}," Fog Compute Google Real default_network_interface":{"type":"method","name":"default_network_interface","children":[],"call":[]}," Fog Compute Google Real last_url_segment":{"type":"method","name":"last_url_segment","children":[],"call":["network split [] ","network split "]}," Fog Compute Google Real expand_subnetwork_ip_cidr_range":{"type":"method","name":"expand_subnetwork_ip_cidr_range","children":[],"call":["@compute expand_subnetwork_ip_cidr_range "," Google Apis ComputeV1 SubnetworksExpandIpCidrRangeRequest  new ","region split [] ","region split ","region start_with? ","region split []  split [] ","region split []  split ","region split []  start_with? "]}," Fog Compute Google Mock expand_subnetwork_ip_cidr_range":{"type":"method","name":"expand_subnetwork_ip_cidr_range","children":[],"call":["Fog Mock  not_implemented "]}," Fog Compute Google Real deprecate_image":{"type":"method","name":"deprecate_image","children":[],"call":["@compute deprecate_image "," Google Apis ComputeV1 DeprecationStatus  new "]}," Fog Compute Google Mock deprecate_image":{"type":"method","name":"deprecate_image","children":[],"call":["Fog Mock  not_implemented "]}," Fog Compute Google Real create_disk_snapshot":{"type":"method","name":"create_disk_snapshot","children":[],"call":["@compute create_disk_snapshot "," Google Apis ComputeV1 Snapshot  new ","snapshot merge "]}," Fog Compute Google Mock create_disk_snapshot":{"type":"method","name":"create_disk_snapshot","children":[],"call":["Fog Mock  not_implemented "]}," Fog Compute Google UrlMap invalidate_cache":{"type":"method","name":"invalidate_cache","children":[],"call":[" ready? ","operation wait_for ","Fog Compute Google Operations  new get ","data name ","Fog Compute Google Operations  new "," service "," service invalidate_url_map_cache "," identity "," requires ","Fog Compute Google Operations  new get  wait_for "," service invalidate_url_map_cache  name "]}," Fog Compute Google TargetPool set_backup":{"type":"method","name":"set_backup","children":[],"call":[" reload "," service set_target_pool_backup "," failover_ratio "," region "," identity "," service "," backup_pool "," requires "]}," Fog Compute Google TargetHttpsProxy set_ssl_certificates":{"type":"method","name":"set_ssl_certificates","children":[],"call":[" reload "," ready? ","operation wait_for ","Fog Compute Google Operations  new get ","data name ","Fog Compute Google Operations  new "," service "," service set_target_https_proxy_ssl_certificates "," identity "," requires ","Fog Compute Google Operations  new get  wait_for "," service set_target_https_proxy_ssl_certificates  name "]}," Fog Compute Google Subnetwork set_private_ip_google_access":{"type":"method","name":"set_private_ip_google_access","children":[],"call":[" reload "," ready? ","operation wait_for ","Fog Compute Google Operations  new get ","data region ","data name ","Fog Compute Google Operations  new "," service "," service set_subnetwork_private_ip_google_access "," region "," identity "," requires ","Fog Compute Google Operations  new get  wait_for "," service set_subnetwork_private_ip_google_access  region "," service set_subnetwork_private_ip_google_access  name "]}," Fog Compute Google Subnetwork expand_ip_cidr_range":{"type":"method","name":"expand_ip_cidr_range","children":[],"call":[" reload "," ready? ","operation wait_for ","Fog Compute Google Operations  new get ","data region ","data name ","Fog Compute Google Operations  new "," service "," service expand_subnetwork_ip_cidr_range "," region "," identity "," requires ","Fog Compute Google Operations  new get  wait_for "," service expand_subnetwork_ip_cidr_range  region "," service expand_subnetwork_ip_cidr_range  name "]}," Fog Compute Google Snapshot set_labels":{"type":"method","name":"set_labels","children":[],"call":[" reload "," service set_snapshot_labels "," label_fingerprint "," identity "," service "," requires "," raise ","new_labels is_a? "]}," Fog Compute Google Servers get_public_key":{"type":"method","name":"get_public_key","children":[],"call":["File  read ","File  expand_path "," raise "," ArgumentError ","public_key_path empty? ","public_key_path nil? ","File  exist? ","PUBLIC_KEY_DEFAULTS  each ","Fog Errors Error  new "]}," Fog Compute Google Server scope_url":{"type":"method","name":"scope_url","children":[],"call":["scope start_with? "]}," Fog Compute Google Server metadata_to_item_list":{"type":"method","name":"metadata_to_item_list","children":[],"call":["metadata map "]}," Fog Compute Google Server map_scopes":{"type":"method","name":"map_scopes","children":[],"call":[" scope_url ","GCE_SCOPE_ALIASES  [] ","GCE_SCOPE_ALIASES  key? ","scopes flat_map ","scopes nil? "]}," Fog Compute Google Server metadata_as_h":{"type":"method","name":"metadata_as_h","children":[],"call":["Hash  [] ","item [] "," metadata [] map "," metadata [] "," metadata "," metadata [] empty? "," metadata [] nil? "," metadata nil? "]}," Fog Compute Google Server private_ip_addresses":{"type":"method","name":"private_ip_addresses","children":[],"call":["nic [] "," network_interfaces map "," network_interfaces "," network_interfaces respond_to? "]}," Fog Compute Google Server public_ip_addresses":{"type":"method","name":"public_ip_addresses","children":[],"call":["config [] ","(send\n  (send\n    (lvar :nic) :[]\n    (sym :access_configs)) :select) map ","config [] == ","nic [] select ","nic [] ","nic [] respond_to? "," network_interfaces flatMap "," network_interfaces "," network_interfaces respond_to? "," network_interfaces flat_map "]}," Fog Compute Google MachineTypes get":{"type":"method","name":"get","children":[],"call":[" raise ","e status_code == ","e status_code "," new ","machine_type nil? "," service get_machine_type to_h "," service get_machine_type "," service ","response first ","response empty? "," all "," service get_machine_type to_h  nil? ","response first  nil? "," service get_ service get_machine_type to_h  to_h "," service get_response first  to_h "," service get_ service get_machine_type to_h  "," service get_response first  "," all  first "," all  empty? "]}," Fog Compute Google MachineTypes all":{"type":"method","name":"all","children":[],"call":[" load ","data map ","data concat ","scoped_list machine_types "," service list_aggregated_machine_types items each_value "," service list_aggregated_machine_types items "," service list_aggregated_machine_types "," service "," service list_machine_types items "," service list_machine_types ","items map ","opts []= ","next_page_token empty? ","next_page_token nil? ","data next_page_token ","items concat ","data items each_value ","data items "," loop "," service list_machine_types items  map "," service list_aggregated_machine_types  map "," service list_machine_types  map "," service list_machine_types items  concat "," service list_aggregated_machine_types  concat "," service list_machine_types  concat ","data next_page_token  empty? ","data next_page_token  nil? "," service list_machine_types items  next_page_token "," service list_aggregated_machine_types  next_page_token "," service list_machine_types  next_page_token ","data data next_page_token  "," service list_machine_types items  items each_value "," service list_aggregated_machine_types  items each_value "," service list_machine_types  items each_value "," service list_machine_types items  items "," service list_aggregated_machine_types  items "," service list_machine_types  items "]}," Fog Compute Google HttpHealthCheck update":{"type":"method","name":"update","children":[],"call":[" reload "," pending? ! "," pending? ","operation wait_for ","Fog Compute Google Operations  new get ","data zone ","data name ","Fog Compute Google Operations  new "," service "," service update_http_health_check "," name "," requires "," ready? ","Fog Compute Google Operations  new get  wait_for "," service update_http_health_check  zone "," service update_http_health_check  name "]}," Fog Compute Google HttpHealthCheck create":{"type":"method","name":"create","children":[],"call":[" reload "," pending? ! "," pending? ","operation wait_for ","Fog Compute Google Operations  new get ","data zone ","data name ","Fog Compute Google Operations  new "," service "," service insert_http_health_check "," name "," requires "," ready? ","Fog Compute Google Operations  new get  wait_for "," service insert_http_health_check  zone "," service insert_http_health_check  name "]}," Fog Compute Google Firewall patch":{"type":"method","name":"patch","children":[],"call":[" reload "," pending? ! "," pending? ","operation wait_for ","Fog Compute Google Operations  new get ","data name ","Fog Compute Google Operations  new "," service "," service patch_firewall "," identity "," requires "," ready? ","Fog Compute Google Operations  new get  wait_for "," service patch_firewall  name "]}," Fog Compute Google Firewall create":{"type":"method","name":"create","children":[],"call":[" reload "," pending? ! "," pending? ","operation wait_for ","Fog Compute Google Operations  new get ","data name ","Fog Compute Google Operations  new "," service "," service insert_firewall "," attributes "," identity "," ready? ","Fog Compute Google Operations  new get  wait_for "," service insert_firewall  name "]}," Fog Compute Google Disks attached_disk_obj":{"type":"method","name":"attached_disk_obj","children":[],"call":["v nil? ","(pair\n  (sym :auto_delete)\n  (lvar :auto_delete)) reject "]}," Fog Compute Google Disk attached_disk_obj":{"type":"method","name":"attached_disk_obj","children":[],"call":[" collection attached_disk_obj "," self_link "," collection "," requires "]}," Fog Compute Google Disk default_description":{"type":"method","name":"default_description","children":[],"call":[" source_snapshot "," source_snapshot nil? ! "," source_snapshot nil? "," source_image "," source_image nil? ! "," source_image nil? "]}," Fog Compute Google Address ready?":{"type":"method","name":"ready?","children":[],"call":[" status != "," status "]}," Fog Storage GoogleXML Mock delete_object_url":{"type":"method","name":"delete_object_url","children":[],"call":[" https_url "," raise ","ArgumentError  new "]}," Fog Storage GoogleXML Real delete_object_url":{"type":"method","name":"delete_object_url","children":[],"call":[" https_url "," raise ","ArgumentError  new "]}," Fog Storage GoogleJSON Real normalize_data":{"type":"method","name":"normalize_data","children":[],"call":["data path ","data content_type ","options [] ","data respond_to? ","Fog Storage  parse_data [] [] ","Fog Storage  parse_data [] ","Fog Storage  parse_data ","data is_a? ","StringIO  new "," raise ","ArgumentError  new ","data path  path ","StringIO  new  path ","data path  content_type ","StringIO  new  content_type ","data path  respond_to? ","StringIO  new  respond_to? ","Fog Storage  parse_data path  [] [] ","Fog Storage  parse_StringIO  new  [] [] ","Fog Storage  parse_data path  [] ","Fog Storage  parse_StringIO  new  [] ","Fog Storage  parse_data path  ","Fog Storage  parse_StringIO  new  ","data path  is_a? ","StringIO  new  is_a? "]}," Fog Storage GoogleJSON Mock delete_object_url":{"type":"method","name":"delete_object_url","children":[],"call":[" https_url "," raise ","ArgumentError  new "]}," Fog Storage GoogleJSON Real delete_object_url":{"type":"method","name":"delete_object_url","children":[],"call":[" https_url "," raise ","ArgumentError  new "]}," Fog Google Shared validate_json_credentials":{"type":"method","name":"validate_json_credentials","children":[],"call":[" raise ","ArgumentError  new ","json_key_hash key? ","Fog JSON  decode ","Fog JSON  decode  key? "]}," Fog Google Shared validate_client_options":{"type":"method","name":"validate_client_options","children":[],"call":[" raise ","ArgumentError  new ","options [] ","Fog Logger  deprecation "]}," Fog Google Shared process_key_auth":{"type":"method","name":"process_key_auth","children":[],"call":[" Google Auth ServiceAccountCredentials  make_creds ","options [] ","StringIO  new "," validate_json_credentials ","File  read ","File  expand_path "]}," Fog Google Shared process_fallback_auth":{"type":"method","name":"process_fallback_auth","children":[],"call":[" raise ","Fog Errors Error  new "," process_application_default_auth ","Fog Logger  warning "]}," Fog Google Shared process_application_default_auth":{"type":"method","name":"process_application_default_auth","children":[],"call":[" Google Auth  get_application_default ","options [] "]}," Fog Google Shared apply_client_options":{"type":"method","name":"apply_client_options","children":[],"call":["service client_options []= ","google_client_options [] ","service client_options ","(send\n  (send\n    (send\n      (lvar :service) :client_options) :members) :&\n  (send\n    (lvar :google_client_options) :keys)) each ","service client_options members & ","google_client_options keys ","service client_options members ","google_client_options empty? ","google_client_options nil? ","options [] ","options []  [] ","(send\n  (send\n    (send\n      (lvar :service) :client_options) :members) :&\n  (send\n    (lvar :options [] ) :keys)) each ","options []  keys ","options []  empty? ","options []  nil? "]}," Fog Compute Google Real set_server_machine_type":{"type":"method","name":"set_server_machine_type","children":[],"call":["@compute set_instance_machine_type ","request machine_type= ","machine_type split [] ","machine_type split ","zone split [] ","zone split "," Google Apis ComputeV1 InstancesSetMachineTypeRequest  new ","@compute set_instance_machine_type split []  ","request machine_type split [] = "," Google Apis ComputeV1 InstancesSetMachineTypeRequest  new  machine_type= ","machine_type split []  split [] ","machine_type split []  split ","zone split []  split [] ","zone split []  split "]}," Fog Compute Google Mock set_server_machine_type":{"type":"method","name":"set_server_machine_type","children":[],"call":["Fog Mock  not_implemented "]}," Fog Compute Google Real set_instance_template":{"type":"method","name":"set_instance_template","children":[],"call":["@compute set_region_instance_group_manager_instance_template ","instance_group_manager name ","instance_group_manager region split [] ","instance_group_manager region split ","instance_group_manager region ","@compute set_instance_group_manager_instance_template ","instance_group_manager zone split [] ","instance_group_manager zone split ","instance_group_manager zone "," Google Apis ComputeV1 InstanceGroupManagersSetInstanceTemplateRequest  new ","instance_template self_link ","instance_template class == ","instance_template class ","@compute set_instance_group_manager region split [] _instance_group_manager_instance_template ","instance_group_manager instance_group_manager region split []  split [] ","instance_group_manager instance_group_manager region split []  split ","instance_group_manager instance_group_manager region split []  ","instance_group_manager instance_group_manager zone split []  split [] ","instance_group_manager instance_group_manager zone split []  split ","instance_group_manager instance_group_manager zone split []  "]}," Fog Compute Google Mock set_instance_template":{"type":"method","name":"set_instance_template","children":[],"call":["Fog Mock  not_implemented "]}," Fog Compute Google Real decrypt_password":{"type":"method","name":"decrypt_password","children":[],"call":["Fog Logger  warning ","key private_decrypt ","Base64  strict_decode64 "]}," Fog Compute Google Real get_encrypted_password_from_serial_port":{"type":"method","name":"get_encrypted_password_from_serial_port","children":[],"call":["Fog Logger  warning ","entry [] ","modulus == "," JSON  parse ","line include? ","output reverse_each ","serial_port_output split "," JSON  parse  [] ","serial_port_output split  reverse_each ","serial_port_serial_port_output split  split "]}," Fog Compute Google Real update_windows_keys":{"type":"method","name":"update_windows_keys","children":[],"call":["new_metadata []= ","Hash  [] ","item [] ","old_metadata [] map ","old_metadata [] ","Hash  []  []= "]}," Fog Compute Google Real get_json_string":{"type":"method","name":"get_json_string","children":[],"call":[" JSON  dump "," get_expiration_time_string "]}," Fog Compute Google Real get_expiration_time_string":{"type":"method","name":"get_expiration_time_string","children":[],"call":["expire_time strftime ","utc_now + ","5 * ","Time  now utc ","Time  now ","utc_now +  strftime ","Time  now utc  + "]}," Fog Compute Google Real get_modulus_exponent_in_base64":{"type":"method","name":"get_modulus_exponent_in_base64","children":[],"call":["Base64  strict_encode64 strip ","Base64  strict_encode64 ","(send\n  (send\n    (lvar :key) :e) :to_s\n  (int 16)) pack strip ","(send\n  (send\n    (lvar :key) :e) :to_s\n  (int 16)) pack ","key e to_s ","key e ","(send\n  (send\n    (lvar :key) :n) :to_s\n  (int 16)) pack strip ","(send\n  (send\n    (lvar :key) :n) :to_s\n  (int 16)) pack ","key n to_s ","key n "]}," Fog Compute Google Real reset_windows_password":{"type":"method","name":"reset_windows_password","children":[],"call":[" decrypt_password "," get_encrypted_password_from_serial_port ","server serial_port_output "," sleep "," raise ","Fog Logger  warning ","loop_cnt > ","serial_port_output empty? ","server ready? ","server set_metadata "," update_windows_keys "," get_json_string ","server metadata "," get_modulus_exponent_in_base64 ","OpenSSL PKey RSA  new ","@compute request_options authorization issuer ","@compute request_options authorization ","@compute request_options "," decrypt_ decrypt_password  "," get_encrypted_ decrypt_password _from_serial_port ","server server serial_port_output  ","server serial_port_output  empty? "," update_windows_OpenSSL PKey RSA  new s "]}," Fog Compute Google Mock reset_windows_password":{"type":"method","name":"reset_windows_password","children":[],"call":["Fog Mock  not_implemented "]}," Fog Compute Google Real recreate_instances":{"type":"method","name":"recreate_instances","children":[],"call":["@compute recreate_region_instance_group_manager_instances ","instance_group_manager name ","instance_group_manager region split [] ","instance_group_manager region split ","instance_group_manager region ","@compute recreate_instance_group_manager_instances ","instance_group_manager zone split [] ","instance_group_manager zone split ","instance_group_manager zone "," Google Apis ComputeV1 InstanceGroupManagersAbandonInstancesRequest  new ","i self_link ","i class == ","i class ","instances map ","@compute recreate_instance_group_manager region split [] _instance_group_manager_instances ","instance_group_manager instance_group_manager region split []  split [] ","instance_group_manager instance_group_manager region split []  split ","instance_group_manager instance_group_manager region split []  ","instance_group_manager instance_group_manager zone split []  split [] ","instance_group_manager instance_group_manager zone split []  split ","instance_group_manager instance_group_manager zone split []  "]}," Fog Compute Google Mock recreate_instances":{"type":"method","name":"recreate_instances","children":[],"call":["Fog Mock  not_implemented "]}," Fog Compute Google Real list_instance_templates":{"type":"method","name":"list_instance_templates","children":[],"call":["@compute list_instance_templates "]}," Fog Compute Google Mock list_instance_templates":{"type":"method","name":"list_instance_templates","children":[],"call":["Fog Mock  not_implemented "]}," Fog Compute Google Real list_instance_group_managers":{"type":"method","name":"list_instance_group_managers","children":[],"call":["@compute list_instance_group_managers "]}," Fog Compute Google Mock list_instance_group_managers":{"type":"method","name":"list_instance_group_managers","children":[],"call":["Fog Mock  not_implemented "]}," Fog Compute Google Real list_aggregated_instance_group_managers":{"type":"method","name":"list_aggregated_instance_group_managers","children":[],"call":["@compute list_aggregated_instance_group_managers "]}," Fog Compute Google Mock list_aggregated_instance_group_managers":{"type":"method","name":"list_aggregated_instance_group_managers","children":[],"call":["Fog Mock  not_implemented "]}," Fog Compute Google Real insert_instance_template":{"type":"method","name":"insert_instance_template","children":[],"call":["@compute insert_instance_template "," Google Apis ComputeV1 InstanceTemplate  new ","@compute insert_ Google Apis ComputeV1 InstanceTemplate  new  "]}," Fog Compute Google Mock insert_instance_template":{"type":"method","name":"insert_instance_template","children":[],"call":["Fog Mock  not_implemented "]}," Fog Compute Google Real insert_instance_group_manager":{"type":"method","name":"insert_instance_group_manager","children":[],"call":["@compute insert_instance_group_manager "," Google Apis ComputeV1 InstanceGroupManager  new ","instance_template self_link ","@compute insert_ Google Apis ComputeV1 InstanceGroupManager  new  "]}," Fog Compute Google Mock insert_instance_group_manager":{"type":"method","name":"insert_instance_group_manager","children":[],"call":["Fog Mock  not_implemented "]}," Fog Compute Google Real get_instance_template":{"type":"method","name":"get_instance_template","children":[],"call":["@compute get_instance_template "]}," Fog Compute Google Mock get_instance_template":{"type":"method","name":"get_instance_template","children":[],"call":["Fog Mock  not_implemented "]}," Fog Compute Google Real get_instance_group_manager":{"type":"method","name":"get_instance_group_manager","children":[],"call":["@compute get_instance_group_manager "]}," Fog Compute Google Mock get_instance_group_manager":{"type":"method","name":"get_instance_group_manager","children":[],"call":["Fog Mock  not_implemented "]}," Fog Compute Google Real delete_instance_template":{"type":"method","name":"delete_instance_template","children":[],"call":["@compute delete_instance_template "]}," Fog Compute Google Mock delete_instance_template":{"type":"method","name":"delete_instance_template","children":[],"call":["Fog Mock  not_implemented "]}," Fog Compute Google Real delete_instance_group_manager":{"type":"method","name":"delete_instance_group_manager","children":[],"call":["@compute delete_instance_group_manager "]}," Fog Compute Google Mock delete_instance_group_manager":{"type":"method","name":"delete_instance_group_manager","children":[],"call":["Fog Mock  not_implemented "]}," Fog Compute Google Real abandon_instances":{"type":"method","name":"abandon_instances","children":[],"call":["@compute abandon_region_instance_group_manager_instances ","instance_group_manager name ","instance_group_manager region split [] ","instance_group_manager region split ","instance_group_manager region ","@compute abandon_instance_group_manager_instances ","instance_group_manager zone split [] ","instance_group_manager zone split ","instance_group_manager zone "," Google Apis ComputeV1 InstanceGroupManagersAbandonInstancesRequest  new ","i self_link ","i class == ","i class ","instances map ","@compute abandon_instance_group_manager region split [] _instance_group_manager_instances ","instance_group_manager instance_group_manager region split []  split [] ","instance_group_manager instance_group_manager region split []  split ","instance_group_manager instance_group_manager region split []  ","instance_group_manager instance_group_manager zone split []  split [] ","instance_group_manager instance_group_manager zone split []  split ","instance_group_manager instance_group_manager zone split []  "]}," Fog Compute Google Mock abandon_instances":{"type":"method","name":"abandon_instances","children":[],"call":["Fog Mock  not_implemented "]}," Fog Compute Google Server reset_windows_password":{"type":"method","name":"reset_windows_password","children":[],"call":[" service reset_windows_password "," service "]}," Fog Compute Google Server ensure_key_comment":{"type":"method","name":"ensure_key_comment","children":[],"call":["parts join ","parts << ","parts size < ","parts size ","key strip split ","key strip ","key strip split  join ","key strip split  << ","key strip split  size < ","key strip split  size "]}," Fog Compute Google Server stopped?":{"type":"method","name":"stopped?","children":[],"call":[" status == "," status "]}," Fog Compute Google Server staging?":{"type":"method","name":"staging?","children":[],"call":[" status == "," status "]}," Fog Compute Google Server set_machine_type":{"type":"method","name":"set_machine_type","children":[],"call":[" reload "," ready? ","operation wait_for ","Fog Compute Google Operations  new get ","data zone ","data name ","Fog Compute Google Operations  new "," service "," service set_server_machine_type "," zone_name "," identity "," raise ","Fog Errors Error  new "," stopped? "," requires ","Fog Compute Google Operations  new get  wait_for "," service set_server_machine_type  zone "," service set_server_machine_type  name "]}," Fog Compute Google InstanceTemplates get":{"type":"method","name":"get","children":[],"call":[" raise ","e status_code == ","e status_code "," new "," service get_instance_template to_h "," service get_instance_template "," service ","instance_template to_h "," service get_ service get_instance_template to_h  to_h "," service get_ service get_instance_template  to_h "," service get_ service get_instance_template to_h  "," service get_ service get_instance_template  "," service get_instance_template to_h  to_h "," service get_instance_template  to_h "]}," Fog Compute Google InstanceTemplates all":{"type":"method","name":"all","children":[],"call":[" load ","data map "," service list_instance_templates items "," service list_instance_templates "," service ","items map ","opts []= ","next_page_token empty? ","next_page_token nil? ","data next_page_token ","items concat ","data items "," loop "," service list_instance_templates  map ","data next_page_token  empty? ","data next_page_token  nil? ","data data next_page_token  "," service list_instance_templates  next_page_token "," service list_instance_templates  items "]}," Fog Compute Google InstanceTemplate destroy":{"type":"method","name":"destroy","children":[],"call":[" ready? ","operation wait_for ","Fog Compute Google Operations  new get ","data name ","Fog Compute Google Operations  new "," service "," service delete_instance_template "," name "," requires ","Fog Compute Google Operations  new get  wait_for "," service delete_instance_template  name "]}," Fog Compute Google InstanceTemplate save":{"type":"method","name":"save","children":[],"call":[" reload "," ready? ","operation wait_for ","Fog Compute Google Operations  new get ","data name ","Fog Compute Google Operations  new "," service "," service insert_instance_template "," description "," properties "," name "," requires "," pending? ! "," pending? ","Fog Compute Google Operations  new get  wait_for "," service insert_instance_template  name "]}," Fog Compute Google InstanceGroupManagers get":{"type":"method","name":"get","children":[],"call":[" raise ","e status_code == ","e status_code ","response first ","response empty? "," all "," new "," service get_instance_group_manager to_h "," service get_instance_group_manager "," service "," all first ","instance_group_manager to_h "," all  first "," all  empty? "," service get_response first  to_h "," service get_ service get_instance_group_manager to_h  to_h "," service get_ service get_instance_group_manager  to_h "," service get_response first  "," service get_ service get_instance_group_manager to_h  "," service get_ service get_instance_group_manager  ","response first  to_h "," service get_instance_group_manager to_h  to_h "," service get_instance_group_manager  to_h "]}," Fog Compute Google InstanceGroupManagers all":{"type":"method","name":"all","children":[],"call":[" load ","data map ","data concat ","group instance_group_managers "," service list_aggregated_instance_group_managers items each_value "," service list_aggregated_instance_group_managers items "," service list_aggregated_instance_group_managers "," service "," service list_instance_group_managers items "," service list_instance_group_managers ","items map ","opts []= ","next_page_token empty? ","next_page_token nil? ","data next_page_token ","items concat ","data items each_value ","data items "," loop "," service list_aggregated_instance_group_managers  map "," service list_instance_group_managers  map "," service list_aggregated_instance_group_managers  concat "," service list_instance_group_managers  concat ","data next_page_token  empty? ","data next_page_token  nil? ","data data next_page_token  "," service list_aggregated_instance_group_managers  next_page_token "," service list_instance_group_managers  next_page_token "," service list_aggregated_instance_group_managers  items each_value "," service list_instance_group_managers  items each_value "," service list_aggregated_instance_group_managers  items "," service list_instance_group_managers  items "]}," Fog Compute Google InstanceGroupManager abandon_instances":{"type":"method","name":"abandon_instances","children":[],"call":[" service abandon_instances "," service "]}," Fog Compute Google InstanceGroupManager recreate_instances":{"type":"method","name":"recreate_instances","children":[],"call":[" service recreate_instances "," service "]}," Fog Compute Google InstanceGroupManager set_instance_template":{"type":"method","name":"set_instance_template","children":[],"call":[" service set_instance_template "," service "]}," Fog Compute Google InstanceGroupManager destroy":{"type":"method","name":"destroy","children":[],"call":[" ready? ","operation wait_for "," service delete_instance_group_manager "," zone split [] "," zone split "," zone "," name "," service "," requires "," service delete_instance_group_manager  wait_for "]}," Fog Compute Google InstanceGroupManager save":{"type":"method","name":"save","children":[],"call":[" reload "," ready? ","operation wait_for ","Fog Compute Google Operations  new get "," zone split [] "," zone split "," zone ","data name ","Fog Compute Google Operations  new "," service "," service insert_instance_group_manager "," description "," named_ports "," target_pools "," target_size "," base_instance_name "," instance_template "," name "," requires "," pending? ! "," pending? ","Fog Compute Google Operations  new get  wait_for "," service insert_instance_group_manager  name "]}," Fog Compute Google InstanceGroup add_instance":{"type":"method","name":"add_instance","children":[],"call":[" add_instances "]}," Fog Storage GoogleJSON Real iam_signer":{"type":"method","name":"iam_signer","children":[],"call":["response signed_blob ","@iam_service sign_service_account_blob "," google_access_id "," Google Apis IamcredentialsV1 SignBlobRequest  new ","@iam_service sign_service_account_blob  signed_blob "]}," Fog Storage GoogleJSON Real default_signer":{"type":"method","name":"default_signer","children":[],"call":["key sign ","OpenSSL Digest SHA256  new ","OpenSSL PKey RSA  new ","@storage_json authorization signing_key ","@storage_json authorization ","key respond_to? ","OpenSSL PKey RSA  new  sign ","@storage_json authorization signing_key  sign ","@storage_json authorization signing_OpenSSL PKey RSA  new  ","@storage_json authorization signing_@storage_json authorization signing_key  ","OpenSSL PKey RSA  new  respond_to? ","@storage_json authorization signing_key  respond_to? "]}," Fog Storage GoogleJSON Real get_access_id_from_metadata":{"type":"method","name":"get_access_id_from_metadata","children":[],"call":[" raise ","Fog Errors Error  new ","access_id nil? ","@google_cloud_env lookup_metadata ","@google_cloud_env metadata? ","@google_cloud_env lookup_metadata  nil? "]}," Fog Storage GoogleJSON Real get_google_access_id":{"type":"method","name":"get_google_access_id","children":[],"call":[" get_access_id_from_metadata ","@storage_json authorization issuer ","@storage_json authorization ","@storage_json authorization issuer nil? ! ","@storage_json authorization issuer nil? "," raise ","Fog Errors Error  new ","@storage_json authorization is_a? "]}," Fog Storage GoogleJSON Real google_access_id":{"type":"method","name":"google_access_id","children":[],"call":[" get_google_access_id "]}," Fog Storage GoogleJSON Mock google_access_id":{"type":"method","name":"google_access_id","children":[],"call":[]}," Fog Storage GoogleJSON Real filter_keyword_args":{"type":"method","name":"filter_keyword_args","children":[],"call":["allowed include? ","options filter ","(send\n  (block\n    (send\n      (send\n        (lvar :method) :parameters) :filter)\n    (args\n      (arg :param))\n    (send\n      (array\n        (sym :key)\n        (sym :keyreq)) :include?\n      (send\n        (lvar :param) :[]\n        (int 0)))) :map) compact ","param [] ","(send\n  (send\n    (lvar :method) :parameters) :filter) map ","(sym :key) include? ","method parameters filter ","method parameters ","@storage_json method ","(send\n  (block\n    (send\n      (send\n        (lvar :method) :parameters) :filter)\n    (args\n      (arg :param))\n    (send\n      (array\n        (sym :key)\n        (sym :keyreq)) :include?\n      (send\n        (lvar :param) :[]\n        (int 0)))) :map) compact  include? ","(send\n  (block\n    (send\n      (send\n        (lvar :@storage_json method ) :parameters) :filter)\n    (args\n      (arg :param))\n    (send\n      (array\n        (sym :key)\n        (sym :keyreq)) :include?\n      (send\n        (lvar :param) :[]\n        (int 0)))) :map) compact ","(send\n  (send\n    (lvar :@storage_json method ) :parameters) :filter) map ","@storage_json method  parameters filter ","@storage_json method  parameters ","@storage_json @storage_json method  "]}," Fog Storage GoogleJSON File uniform=":{"type":"method","name":"uniform=","children":[],"call":[]}}