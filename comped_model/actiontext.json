{" ActionText version":{"type":"method","name":"version","children":[],"call":[]}," ActionText TrixAttachment read_json_attribute":{"type":"method","name":"read_json_attribute","children":[],"call":["Rails  logger error ","e backtrace ","e class "," class name "," class ","Rails  logger "," node inspect "," node ","JSON  parse "," node [] "]}," ActionText TrixAttachment read_json_object_attribute":{"type":"method","name":"read_json_object_attribute","children":[],"call":[" read_json_attribute "]}," ActionText TrixAttachment composed_attributes":{"type":"method","name":"composed_attributes","children":[],"call":[" read_json_object_attribute "]}," ActionText TrixAttachment attachment_attributes":{"type":"method","name":"attachment_attributes","children":[],"call":[" read_json_object_attribute "]}," ActionText TrixAttachment to_s":{"type":"method","name":"to_s","children":[],"call":[" to_html "]}," ActionText TrixAttachment to_html":{"type":"method","name":"to_html","children":[],"call":["ActionText HtmlConversion  node_to_html "," node "]}," ActionText TrixAttachment attributes":{"type":"method","name":"attributes","children":[],"call":[" attachment_attributes merge slice "," attachment_attributes merge "," composed_attributes "," attachment_attributes "]}," ActionText TrixAttachment initialize":{"type":"method","name":"initialize","children":[],"call":[]}," ActionText TrixAttachment typecast_attribute_values":{"type":"method","name":"typecast_attribute_values","children":[],"call":["(send\n  (lvar :attributes) :map) to_h ","typecast call ","ATTRIBUTE_TYPES  [] ","attributes map ","attributes to_h "]}," ActionText TrixAttachment transform_attribute_keys":{"type":"method","name":"transform_attribute_keys","children":[],"call":["key to_s underscore camelize ","key to_s underscore ","key to_s ","attributes transform_keys "]}," ActionText TrixAttachment process_attributes":{"type":"method","name":"process_attributes","children":[],"call":[" typecast_attribute_values "," transform_attribute_keys "]}," ActionText TrixAttachment from_attributes":{"type":"method","name":"from_attributes","children":[],"call":[" new ","node []= ","JSON  generate ","trix_attributes any? ","ActionText HtmlConversion  create_element ","attributes slice ","attributes except "," process_attributes ","ActionText HtmlConversion  create_element  []= ","attributes slice  any? ","trix_ process_attributes  any? "," process_attributes  slice "," process_attributes  except "," process_ process_attributes  "]}," ActionText Serialization _dump":{"type":"method","name":"_dump","children":[],"call":[" class dump "," class "]}," ActionText Serialization dump":{"type":"method","name":"dump","children":[],"call":[" new to_html "," new ","content to_html ","content body to_html ","content body "]}," ActionText Serialization load":{"type":"method","name":"load","children":[],"call":[" new "]}," ActionText PlainTextConversion list_node_name_for_li_node":{"type":"method","name":"list_node_name_for_li_node","children":[],"call":["node ancestors lazy map grep first ","node ancestors lazy map grep ","node ancestors lazy map ","node ancestors lazy ","node ancestors "]}," ActionText PlainTextConversion bullet_for_li_node":{"type":"method","name":"bullet_for_li_node","children":[],"call":["index + "," list_node_name_for_li_node == "," list_node_name_for_li_node "]}," ActionText PlainTextConversion remove_trailing_newlines":{"type":"method","name":"remove_trailing_newlines","children":[],"call":["text chomp "]}," ActionText PlainTextConversion plain_text_for_li_node":{"type":"method","name":"plain_text_for_li_node","children":[],"call":[" remove_trailing_newlines "," plain_text_for_node_children "," bullet_for_li_node "," indentation_for_li_node "," plain_ remove_trailing_newlines _for_node_children ","  bullet_for_li_node _for_li_node ","  indentation_for_li_node _for_li_node "]}," ActionText PlainTextConversion plain_text_for_blockquote_node":{"type":"method","name":"plain_text_for_blockquote_node","children":[],"call":["text sub "," plain_text_for_block "," plain_text_for_block  sub "," plain_ plain_text_for_block _for_block "]}," ActionText PlainTextConversion plain_text_for_figcaption_node":{"type":"method","name":"plain_text_for_figcaption_node","children":[],"call":[" remove_trailing_newlines "," plain_text_for_node_children "]}," ActionText PlainTextConversion plain_text_for_div_node":{"type":"method","name":"plain_text_for_div_node","children":[],"call":[" remove_trailing_newlines "," plain_text_for_node_children "]}," ActionText PlainTextConversion plain_text_for_text_node":{"type":"method","name":"plain_text_for_text_node","children":[],"call":[" remove_trailing_newlines ","node text "]}," ActionText PlainTextConversion plain_text_for_br_node":{"type":"method","name":"plain_text_for_br_node","children":[],"call":[]}," ActionText PlainTextConversion plain_text_for_block":{"type":"method","name":"plain_text_for_block","children":[],"call":[" remove_trailing_newlines "," plain_text_for_node_children "]}," ActionText PlainTextConversion plain_text_method_for_node":{"type":"method","name":"plain_text_method_for_node","children":[],"call":["node name "]}," ActionText PlainTextConversion plain_text_for_node_children":{"type":"method","name":"plain_text_for_node_children","children":[],"call":["(send\n  (send\n    (send\n      (lvar :node) :children) :each_with_index) :map) compact join ","(send\n  (send\n    (send\n      (lvar :node) :children) :each_with_index) :map) compact "," plain_text_for_node ","node children each_with_index map ","node children each_with_index ","node children ","texts join ","texts << "]}," ActionText PlainTextConversion plain_text_for_node":{"type":"method","name":"plain_text_for_node","children":[],"call":[" plain_text_for_node_children "," send "," plain_text_method_for_node "," respond_to? "]}," ActionText PlainTextConversion node_to_plain_text":{"type":"method","name":"node_to_plain_text","children":[],"call":[" remove_trailing_newlines "," plain_text_for_node "]}," ActionText HtmlConversion document":{"type":"method","name":"document","children":[],"call":["doc encoding= ","Nokogiri HTML Document  new tap ","Nokogiri HTML Document  new ","ActionText  html_document_class new tap ","ActionText  html_document_class new ","ActionText  html_document_class "]}," ActionText HtmlConversion create_element":{"type":"method","name":"create_element","children":[],"call":[" document create_element "," document "]}," ActionText HtmlConversion fragment_for_html":{"type":"method","name":"fragment_for_html","children":[],"call":[" document fragment "," document "]}," ActionText HtmlConversion node_to_html":{"type":"method","name":"node_to_html","children":[],"call":["node to_html "]}," ActionText gem_version":{"type":"method","name":"gem_version","children":[],"call":[]}," ActionText Fragment to_s":{"type":"method","name":"to_s","children":[],"call":[" to_html "]}," ActionText Fragment to_html":{"type":"method","name":"to_html","children":[],"call":["HtmlConversion  node_to_html "," source "]}," ActionText Fragment to_plain_text":{"type":"method","name":"to_plain_text","children":[],"call":["PlainTextConversion  node_to_plain_text "," source "]}," ActionText Fragment replace":{"type":"method","name":"replace","children":[],"call":["node replace ","(lvar :node) to_s ","source css each ","source css "," update ","replacement_node to_s ","node != "]}," ActionText Fragment update":{"type":"method","name":"update","children":[],"call":[" class new "," class "," source clone "," source "," source dup ","  source clone  clone ","  source dup  clone ","  source clone  ","  source dup  ","  source clone  dup ","  source dup  dup "]}," ActionText Fragment find_all":{"type":"method","name":"find_all","children":[],"call":[" source css "," source "]}," ActionText Fragment initialize":{"type":"method","name":"initialize","children":[],"call":[]}," ActionText Fragment from_html":{"type":"method","name":"from_html","children":[],"call":[" new ","ActionText HtmlConversion  fragment_for_html ","html to_s strip ","html to_s "]}," ActionText Fragment wrap":{"type":"method","name":"wrap","children":[],"call":[" from_html "," new "]}," ActionText Engine attachable_plain_text_representation":{"type":"method","name":"attachable_plain_text_representation","children":[],"call":[" filename "]}," ActionText Engine previewable_attachable?":{"type":"method","name":"previewable_attachable?","children":[],"call":[" representable? "]}," ActionText Content attachment_gallery_for_node":{"type":"method","name":"attachment_gallery_for_node","children":[],"call":["ActionText AttachmentGallery  from_node "]}," ActionText Content attachment_for_node":{"type":"method","name":"attachment_for_node","children":[],"call":["attachment with_full_attributes ","ActionText Attachment  from_node ","ActionText Attachment  from_node  with_full_attributes "]}," ActionText Content attachment_gallery_nodes":{"type":"method","name":"attachment_gallery_nodes","children":[],"call":["ActionText AttachmentGallery  find_attachment_gallery_nodes "," fragment "]}," ActionText Content attachment_nodes":{"type":"method","name":"attachment_nodes","children":[],"call":[" fragment find_all "," fragment ","ActionText Attachment  tag_name "]}," ActionText Content ==":{"type":"method","name":"==","children":[],"call":[" to_s == ","other to_s "," to_s ","other is_a? "," class "," to_html == ","other to_html "," to_html "," class == ","other class "]}," ActionText Content inspect":{"type":"method","name":"inspect","children":[],"call":[" to_s truncate inspect "," to_s truncate "," to_s "," class name "," class "," to_html truncate inspect "," to_html truncate "," to_html "]}," ActionText Content as_json":{"type":"method","name":"as_json","children":[],"call":[" to_html "]}," ActionText Content to_s":{"type":"method","name":"to_s","children":[],"call":[" to_rendered_html_with_layout "]}," ActionText Content to_rendered_html_with_layout":{"type":"method","name":"to_rendered_html_with_layout","children":[],"call":[" renderer render "," renderer "," render "," to_partial_path "]}," ActionText Content to_html":{"type":"method","name":"to_html","children":[],"call":[" fragment to_html "," fragment "]}," ActionText Content to_trix_html":{"type":"method","name":"to_trix_html","children":[],"call":[" render_attachments to_html "," render_attachments "]}," ActionText Content to_plain_text":{"type":"method","name":"to_plain_text","children":[],"call":[" render_attachments fragment to_plain_text "," render_attachments fragment "," render_attachments "]}," ActionText Content render_attachment_galleries":{"type":"method","name":"render_attachment_galleries","children":[],"call":[" class new "," class ","block call "," attachment_gallery_for_node ","ActionText AttachmentGallery  fragment_by_replacing_attachment_gallery_nodes "," fragment "]}," ActionText Content render_attachments":{"type":"method","name":"render_attachments","children":[],"call":[" class new "," class ","block call "," attachment_for_node "," fragment replace "," fragment ","ActionText Attachment  tag_name "]}," ActionText Content append_attachables":{"type":"method","name":"append_attachables","children":[],"call":[" class new ","(send\n  (send\n    (self) :to_s) :presence) compact join ","(send\n  (send\n    (self) :to_s) :presence) compact "," to_s presence "," to_s "," class ","ActionText Attachment  from_attachables "]}," ActionText Content attachables":{"type":"method","name":"attachables","children":[],"call":["ActionText Attachable  from_node "," attachment_nodes map "," attachment_nodes "]}," ActionText Content gallery_attachments":{"type":"method","name":"gallery_attachments","children":[],"call":[" attachment_galleries flat_map "," attachment_galleries "]}," ActionText Content attachment_galleries":{"type":"method","name":"attachment_galleries","children":[],"call":[" attachment_gallery_for_node "," attachment_gallery_nodes map "," attachment_gallery_nodes "]}," ActionText Content attachments":{"type":"method","name":"attachments","children":[],"call":[" attachment_for_node "," attachment_nodes map "," attachment_nodes "]}," ActionText Content links":{"type":"method","name":"links","children":[],"call":["(send\n  (send\n    (send nil :fragment) :find_all\n    (str \"a[href]\")) :map) uniq ","a [] "," fragment find_all map "," fragment find_all "," fragment "]}," ActionText Content initialize":{"type":"method","name":"initialize","children":[],"call":["ActionText Fragment  wrap "," class fragment_by_canonicalizing_content "," class ","options [] ","options with_defaults! "]}," ActionText Content fragment_by_canonicalizing_content":{"type":"method","name":"fragment_by_canonicalizing_content","children":[],"call":["ActionText AttachmentGallery  fragment_by_canonicalizing_attachment_galleries ","ActionText Attachment  fragment_by_canonicalizing_attachments ","ActionText AttachmentGallery  ActionText AttachmentGallery  fragment_by_canonicalizing_attachment_galleries _by_canonicalizing_attachment_galleries ","ActionText AttachmentGallery  ActionText Attachment  fragment_by_canonicalizing_attachments _by_canonicalizing_attachment_galleries ","ActionText Attachment  ActionText AttachmentGallery  fragment_by_canonicalizing_attachment_galleries _by_canonicalizing_attachments ","ActionText Attachment  ActionText Attachment  fragment_by_canonicalizing_attachments _by_canonicalizing_attachments "]}," ActionText Attribute has_rich_text":{"type":"method","name":"has_rich_text","children":[],"call":[" scope "," includes "," lambda "," has_one "," where "," class_eval ","27 + "," public_send save "," public_send "," public_send changed? "," after_save ","28 + ","34 + ","38 + "]}," ActionText Attachments TrixConversion trix_attachment_content":{"type":"method","name":"trix_attachment_content","children":[],"call":["ActionText Content  renderer render "," model_name element "," model_name ","ActionText Content  renderer "," attachable try "," attachable ","ActionText Content  render "]}," ActionText Attachments TrixConversion to_trix_attachment":{"type":"method","name":"to_trix_attachment","children":[],"call":["TrixAttachment  from_attributes ","attributes []= "," full_attributes dup "," full_attributes ","TrixAttachment  from_ full_attributes dup  "," full_attributes dup  []= "," full_ full_attributes dup  dup "," full_ full_attributes dup  "]}," ActionText Attachments TrixConversion from_trix_attachment":{"type":"method","name":"from_trix_attachment","children":[],"call":[" from_attributes ","trix_attachment attributes "]}," ActionText Attachments TrixConversion fragment_by_converting_trix_attachments":{"type":"method","name":"fragment_by_converting_trix_attachments","children":[],"call":[" from_trix_attachment ","TrixAttachment  new ","Fragment  wrap replace ","Fragment  wrap "]}," ActionText Attachments Minification fragment_by_minifying_attachments":{"type":"method","name":"fragment_by_minifying_attachments","children":[],"call":["n inner_html= ","node tap ","Fragment  wrap replace ","Fragment  wrap ","ActionText Attachment  tag_name "]}," ActionText Attachments Caching cache_digest":{"type":"method","name":"cache_digest","children":[],"call":["Digest SHA256  hexdigest "," node to_s "," node ","OpenSSL Digest SHA256  hexdigest "]}," ActionText Attachments Caching cache_key":{"type":"method","name":"cache_key","children":[],"call":["(send\n  (send\n    (self) :class) :name) join "," attachable cache_key "," attachable "," cache_digest "," class name "," class "]}," ActionText AttachmentGallery inspect":{"type":"method","name":"inspect","children":[],"call":[" size inspect "," size "," class name "," class "]}," ActionText AttachmentGallery size":{"type":"method","name":"size","children":[],"call":[" attachments size "," attachments "]}," ActionText AttachmentGallery attachments":{"type":"method","name":"attachments","children":[],"call":["ActionText Attachment  from_node with_full_attributes ","ActionText Attachment  from_node "," node css map "," node css "," node ","ActionText AttachmentGallery  attachment_selector "]}," ActionText AttachmentGallery initialize":{"type":"method","name":"initialize","children":[],"call":[]}," ActionText AttachmentGallery from_node":{"type":"method","name":"from_node","children":[],"call":[" new "]}," ActionText AttachmentGallery find_attachment_gallery_nodes":{"type":"method","name":"find_attachment_gallery_nodes","children":[],"call":["child matches? ","child text =~ ","child text ","child text? ","node children all? ","node children ","Fragment  wrap find_all select ","Fragment  wrap find_all ","Fragment  wrap ","(str \"\\\\A(\\\\n|\\\\ )*\\\\z\") match? "," attachment_selector "," selector "]}," ActionText AttachmentGallery fragment_by_replacing_attachment_gallery_nodes":{"type":"method","name":"fragment_by_replacing_attachment_gallery_nodes","children":[],"call":["node replace ","(lvar :node) to_s "," find_attachment_gallery_nodes each "," find_attachment_gallery_nodes ","Fragment  wrap update ","Fragment  wrap "]}," ActionText AttachmentGallery fragment_by_canonicalizing_attachment_galleries":{"type":"method","name":"fragment_by_canonicalizing_attachment_galleries","children":[],"call":["node inner_html "," fragment_by_replacing_attachment_gallery_nodes "]}," ActionText Attachment sgid_attributes":{"type":"method","name":"sgid_attributes","children":[],"call":[" attachable_attributes slice "," attachable_attributes "," node_attributes slice presence "," node_attributes slice "," node_attributes "]}," ActionText Attachment attachable_attributes":{"type":"method","name":"attachable_attributes","children":[],"call":["(or\n  (send\n    (send nil :attachable) :try\n    (sym :to_rich_text_attributes))\n  (hash)) stringify_keys "," attachable try "," attachable "]}," ActionText Attachment node_attributes":{"type":"method","name":"node_attributes","children":[],"call":["(send\n  (const nil :ATTRIBUTES) :map) to_h compact ","(send\n  (const nil :ATTRIBUTES) :map) to_h "," node [] "," node ","name underscore ","ATTRIBUTES  map ","(send\n  (const nil :ATTRIBUTES) :to_h) compact ","ATTRIBUTES  to_h "]}," ActionText Attachment inspect":{"type":"method","name":"inspect","children":[],"call":[" attachable inspect "," attachable "," class name "," class "]}," ActionText Attachment to_s":{"type":"method","name":"to_s","children":[],"call":[" to_html "]}," ActionText Attachment to_html":{"type":"method","name":"to_html","children":[],"call":["HtmlConversion  node_to_html "," node "]}," ActionText Attachment to_plain_text":{"type":"method","name":"to_plain_text","children":[],"call":[" caption to_s "," caption "," attachable_plain_text_representation "," respond_to? "]}," ActionText Attachment with_full_attributes":{"type":"method","name":"with_full_attributes","children":[],"call":[" class from_attributes "," attachable "," full_attributes "," class "]}," ActionText Attachment full_attributes":{"type":"method","name":"full_attributes","children":[],"call":[" node_attributes merge merge "," sgid_attributes "," node_attributes merge "," attachable_attributes "," node_attributes "]}," ActionText Attachment caption":{"type":"method","name":"caption","children":[],"call":[" node_attributes [] presence "," node_attributes [] "," node_attributes "]}," ActionText Attachment initialize":{"type":"method","name":"initialize","children":[],"call":[]}," ActionText Attachment process_attributes":{"type":"method","name":"process_attributes","children":[],"call":["(send\n  (lvar :attributes) :transform_keys) slice ","key to_s underscore dasherize ","key to_s underscore ","key to_s ","attributes transform_keys "]}," ActionText Attachment node_from_attributes":{"type":"method","name":"node_from_attributes","children":[],"call":["ActionText HtmlConversion  create_element "," process_attributes presence "," process_attributes "," tag_name "," process_ process_attributes presence  presence "," process_ process_attributes presence  "]}," ActionText Attachment from_attributes":{"type":"method","name":"from_attributes","children":[],"call":[" from_node "," node_from_attributes "," from_ node_from_attributes  ","  node_from_attributes _from_attributes "]}," ActionText Attachment from_attachable":{"type":"method","name":"from_attachable","children":[],"call":[" new "," node_from_attributes ","attachable to_rich_text_attributes ","  node_from_attributes _from_attributes "]}," ActionText Attachment from_attachables":{"type":"method","name":"from_attachables","children":[],"call":["(send\n  (send nil :Array\n    (lvar :attachables)) :map) compact "," from_attachable "," Array map "," Array "," Array filter_map "]}," ActionText Attachment from_node":{"type":"method","name":"from_node","children":[],"call":[" new ","ActionText Attachable  from_node "]}," ActionText Attachment fragment_by_canonicalizing_attachments":{"type":"method","name":"fragment_by_canonicalizing_attachments","children":[],"call":[" fragment_by_minifying_attachments "," fragment_by_converting_trix_attachments "]}," ActionText Attachables RemoteImage to_partial_path":{"type":"method","name":"to_partial_path","children":[],"call":[]}," ActionText Attachables RemoteImage attachable_plain_text_representation":{"type":"method","name":"attachable_plain_text_representation","children":[],"call":[]}," ActionText Attachables RemoteImage initialize":{"type":"method","name":"initialize","children":[],"call":["attributes [] "]}," ActionText Attachables RemoteImage attributes_from_node":{"type":"method","name":"attributes_from_node","children":[],"call":["node [] "]}," ActionText Attachables RemoteImage content_type_is_image?":{"type":"method","name":"content_type_is_image?","children":[],"call":["content_type to_s =~ ","content_type to_s ","content_type to_s match? "]}," ActionText Attachables RemoteImage from_node":{"type":"method","name":"from_node","children":[],"call":[" new "," attributes_from_node "," content_type_is_image? ","node [] "]}," ActionText Attachables MissingAttachable to_partial_path":{"type":"method","name":"to_partial_path","children":[],"call":[" model to_missing_attachable_partial_path "," model "]}," ActionText Attachables ContentAttachment to_trix_content_attachment_partial_path":{"type":"method","name":"to_trix_content_attachment_partial_path","children":[],"call":[" name underscore "," name "]}," ActionText Attachables ContentAttachment to_partial_path":{"type":"method","name":"to_partial_path","children":[],"call":[]}," ActionText Attachables ContentAttachment attachable_plain_text_representation":{"type":"method","name":"attachable_plain_text_representation","children":[],"call":[" name "," content_instance fragment source "," content_instance fragment "," content_instance "]}," ActionText Attachables ContentAttachment from_node":{"type":"method","name":"from_node","children":[],"call":[]}," ActionText Attachable to_rich_text_attributes":{"type":"method","name":"to_rich_text_attributes","children":[],"call":["(send\n  (send\n    (lvar :attributes) :dup) :tap) compact ","attrs []= "," attachable_metadata [] "," attachable_metadata "," attachable_filesize "," attachable_filename "," previewable_attachable? "," attachable_content_type "," attachable_sgid ","attributes dup tap ","attributes dup "]}," ActionText Attachable to_trix_content_attachment_partial_path":{"type":"method","name":"to_trix_content_attachment_partial_path","children":[],"call":[" to_partial_path "]}," ActionText Attachable as_json":{"type":"method","name":"as_json","children":[],"call":[" merge "," attachable_sgid "," persisted? "]}," ActionText Attachable previewable_attachable?":{"type":"method","name":"previewable_attachable?","children":[],"call":[]}," ActionText Attachable attachable_metadata":{"type":"method","name":"attachable_metadata","children":[],"call":[" try "]}," ActionText Attachable attachable_filesize":{"type":"method","name":"attachable_filesize","children":[],"call":[" try "]}," ActionText Attachable attachable_filename":{"type":"method","name":"attachable_filename","children":[],"call":[" filename to_s "," filename "," respond_to? "]}," ActionText Attachable attachable_content_type":{"type":"method","name":"attachable_content_type","children":[],"call":[" try "]}," ActionText Attachable attachable_sgid":{"type":"method","name":"attachable_sgid","children":[],"call":[" to_sgid to_s "," to_sgid "]}," ActionText Attachable from_attachable_sgid":{"type":"method","name":"from_attachable_sgid","children":[],"call":["ActionText Attachable  from_attachable_sgid "," raise ","GlobalID Locator  public_send ","options merge ","sgid is_a? "]}," ActionText Attachable attachable_from_sgid":{"type":"method","name":"attachable_from_sgid","children":[],"call":[" from_attachable_sgid "]}," ActionText Attachable from_node":{"type":"method","name":"from_node","children":[],"call":["ActionText Attachables RemoteImage  from_node ","ActionText Attachables ContentAttachment  from_node "," attachable_from_sgid ","node [] ","ActionText Attachables MissingAttachable  new "," ActionText Attachables RemoteImage  from_node _from_sgid "," ActionText Attachables ContentAttachment  from_node _from_sgid ","  attachable_from_sgid _from_sgid "]}," ActionText Engine to_trix_content_attachment_partial_path":{"type":"method","name":"to_trix_content_attachment_partial_path","children":[],"call":[]}," ActionText Rendering render":{"type":"method","name":"render","children":[],"call":[" renderer render_to_string "," renderer ","(or\n  (send nil :renderer)\n  (send nil :default_renderer)) render_to_string "," default_renderer ","(or\n  (send nil :renderer)\n  (send nil :action_controller_renderer)) render_to_string "," action_controller_renderer "]}," ActionText Rendering with_renderer":{"type":"method","name":"with_renderer","children":[],"call":[" renderer= "," renderer "]}," TestUnit Generators InstallGenerator create_test_files":{"type":"method","name":"create_test_files","children":[],"call":[" template "]}," ActionText Generators InstallGenerator js_dependencies":{"type":"method","name":"js_dependencies","children":[],"call":["js_package [] merge ","js_package [] ","JSON  load ","Pathname  new ","JSON  load  [] merge ","JSON  load  [] "]}," ActionText Generators InstallGenerator create_migrations":{"type":"method","name":"create_migrations","children":[],"call":[" rails_command "]}," ActionText Generators InstallGenerator create_actiontext_files":{"type":"method","name":"create_actiontext_files","children":[],"call":[" copy_file "," template "," __dir__ "," say "," insert_into_file ","stylesheets first to_s ","stylesheets first ","(lvasgn :stylesheets\n  (send\n    (const nil :Dir) :glob\n    (dstr\n      (begin\n        (send nil :destination_root))\n      (str \"/app/assets/stylesheets/application.*.{scss,css}\")))) length > ","(lvasgn :stylesheets\n  (send\n    (const nil :Dir) :glob\n    (dstr\n      (begin\n        (send nil :destination_root))\n      (str \"/app/assets/stylesheets/application.*.{scss,css}\")))) length ","Dir  glob "," destination_root ","destination join exist? ","destination join "," Pathname ","Dir  glob  first to_s ","Dir  glob  first ","(lvasgn :Dir  glob \n  (send\n    (const nil :Dir) :glob\n    (dstr\n      (begin\n        (send nil :destination_root))\n      (str \"/app/assets/Dir  glob /application.*.{scss,css}\")))) length > ","(lvasgn :stylesheets\n  (send\n    (const nil :Dir) :glob\n    (dstr\n      (begin\n        (send nil : Pathname _root))\n      (str \"/app/assets/stylesheets/application.*.{scss,css}\")))) length > ","(lvasgn :Dir  glob \n  (send\n    (const nil :Dir) :glob\n    (dstr\n      (begin\n        (send nil :destination_root))\n      (str \"/app/assets/Dir  glob /application.*.{scss,css}\")))) length ","(lvasgn :stylesheets\n  (send\n    (const nil :Dir) :glob\n    (dstr\n      (begin\n        (send nil : Pathname _root))\n      (str \"/app/assets/stylesheets/application.*.{scss,css}\")))) length ","  Pathname _root "," Pathname  join exist? "," Pathname  join "]}," ActionText Generators InstallGenerator append_dependencies_to_package_file":{"type":"method","name":"append_dependencies_to_package_file","children":[],"call":[" say "," append_to_file ","app_javascript_pack_path read include? ","app_javascript_pack_path read "," js_dependencies each_key "," js_dependencies ","(lvasgn :app_javascript_pack_path\n  (send\n    (const nil :Pathname) :new\n    (str \"app/javascript/packs/application.js\"))) exist? ","Pathname  new ","Pathname  new  read include? ","Pathname  new  read ","(lvasgn :Pathname  new \n  (send\n    (const nil :Pathname) :new\n    (str \"app/javascript/packs/application.js\"))) exist? "]}," ActionText Generators InstallGenerator install_javascript_dependencies":{"type":"method","name":"install_javascript_dependencies","children":[],"call":[" run ","(send\n  (send nil :js_dependencies) :map) join "," js_dependencies map "," js_dependencies "," say "," rails_command ","Thor Util  ruby_command "," Pathname join exist? "," Pathname join "," Pathname "," destination_root "," using_node? "," using_bun? "]}," ActionText SystemTestHelper fill_in_rich_text_area":{"type":"method","name":"fill_in_rich_text_area","children":[],"call":[" find execute_script ","with to_s "," find "]}," ActionText FixtureSet attachment":{"type":"method","name":"attachment","children":[],"call":[]}," ActionText Generators InstallGenerator enable_image_processing_gem":{"type":"method","name":"enable_image_processing_gem","children":[],"call":[" uncomment_lines "," say ","(lvasgn :gemfile_path\n  (send\n    (send nil :Pathname\n      (send nil :destination_root)) :join\n    (str \"Gemfile\"))) exist? "," Pathname join "," Pathname "," destination_root ","(lvasgn : Pathname join \n  (send\n    (send nil :Pathname\n      (send nil :destination_root)) :join\n    (str \"Gemfile\"))) exist? "]}," ActionText Generators InstallGenerator append_javascript_dependencies":{"type":"method","name":"append_javascript_dependencies","children":[],"call":[" append_to_file ","importmap_path to_s ","(lvasgn :importmap_path\n  (send\n    (lvar :destination) :join\n    (str \"config/importmap.rb\"))) exist? ","destination join "," say "," insert_into_file ","application_javascript_path to_s ","(lvasgn :application_javascript_path\n  (send\n    (lvar :destination) :join\n    (str \"app/javascript/application.js\"))) exist? "," Pathname "," destination_root ","destination join  to_s ","(lvasgn :destination join \n  (send\n    (lvar :destination) :join\n    (str \"config/importmap.rb\"))) exist? ","(lvasgn :importmap_path\n  (send\n    (lvar : Pathname ) :join\n    (str \"config/importmap.rb\"))) exist? "," Pathname  join ","(lvasgn :destination join \n  (send\n    (lvar :destination) :join\n    (str \"app/javascript/application.js\"))) exist? ","(lvasgn :application_javascript_path\n  (send\n    (lvar : Pathname ) :join\n    (str \"app/javascript/application.js\"))) exist? ","  Pathname _root "]}," ActionText PlainTextConversion break_if_nested_list":{"type":"method","name":"break_if_nested_list","children":[],"call":[" list_node_depth_for_node > "," list_node_depth_for_node "]}," ActionText PlainTextConversion list_node_depth_for_node":{"type":"method","name":"list_node_depth_for_node","children":[],"call":["node ancestors map grep count ","node ancestors map grep ","node ancestors map ","node ancestors "]}," ActionText PlainTextConversion indentation_for_li_node":{"type":"method","name":"indentation_for_li_node","children":[],"call":["   * ","depth - ","depth > "," list_node_depth_for_node "," list_node_depth_for_node  - "," list_node_depth_for_node  > "," list_node_ list_node_depth_for_node _for_node "]}," ActionText PlainTextConversion plain_text_for_list":{"type":"method","name":"plain_text_for_list","children":[],"call":[" break_if_nested_list "," plain_text_for_block "]}," ActionText Encryption encryptable_rich_texts":{"type":"method","name":"encryptable_rich_texts","children":[],"call":["record is_a? ","(send\n  (send\n    (send\n      (self) :class) :rich_text_association_names) :filter_map) find_all "," send "," class rich_text_association_names filter_map "," class rich_text_association_names "," class "]}," ActionText Encryption has_encrypted_rich_texts?":{"type":"method","name":"has_encrypted_rich_texts?","children":[],"call":[" encryptable_rich_texts present? "," encryptable_rich_texts "]}," ActionText Encryption decrypt_rich_texts":{"type":"method","name":"decrypt_rich_texts","children":[],"call":[" encryptable_rich_texts each "," encryptable_rich_texts "]}," ActionText Encryption encrypt_rich_texts":{"type":"method","name":"encrypt_rich_texts","children":[],"call":[" encryptable_rich_texts each "," encryptable_rich_texts "]}," ActionText Encryption decrypt":{"type":"method","name":"decrypt","children":[],"call":[" decrypt_rich_texts "," has_encrypted_rich_texts? "," transaction "]}," ActionText Encryption encrypt":{"type":"method","name":"encrypt","children":[],"call":[" encrypt_rich_texts "," has_encrypted_rich_texts? "," transaction "]}," ActionText Content to_partial_path":{"type":"method","name":"to_partial_path","children":[],"call":[]}," ActionText Attribute rich_text_association_names":{"type":"method","name":"rich_text_association_names","children":[],"call":["n start_with? "," reflect_on_all_associations collect select "," reflect_on_all_associations collect "," reflect_on_all_associations "]}," ActionText Attribute with_all_rich_text":{"type":"method","name":"with_all_rich_text","children":[],"call":[" eager_load "," rich_text_association_names "]}," ActionText AttachmentGallery selector":{"type":"method","name":"selector","children":[],"call":[" attachment_selector "]}," ActionText AttachmentGallery attachment_selector":{"type":"method","name":"attachment_selector","children":[],"call":["ActionText Attachment  tag_name "]}," ActionText Attachable to_attachable_partial_path":{"type":"method","name":"to_attachable_partial_path","children":[],"call":[" to_partial_path "]}," ActionText Generators InstallGenerator using_node?":{"type":"method","name":"using_node?","children":[],"call":[" Pathname join exist? ! "," Pathname join exist? "," Pathname join "," Pathname "," destination_root "," using_js_runtime? "]}," ActionText Generators InstallGenerator using_bun?":{"type":"method","name":"using_bun?","children":[],"call":[" Pathname join exist? "," Pathname join "," Pathname "," destination_root "," using_js_runtime? "]}," ActionText Generators InstallGenerator using_js_runtime?":{"type":"method","name":"using_js_runtime?","children":[],"call":[" Pathname join exist? "," Pathname join "," Pathname "," destination_root "]}," ActionText html_document_fragment_class":{"type":"method","name":"html_document_fragment_class","children":[],"call":[]}," ActionText html_document_class":{"type":"method","name":"html_document_class","children":[],"call":[]}," ActionText Rendering action_controller_renderer":{"type":"method","name":"action_controller_renderer","children":[],"call":["Class  new renderer ","Class  new "]}," ActionText deprecator":{"type":"method","name":"deprecator","children":[],"call":[]}," ActionText Attachables MissingAttachable model":{"type":"method","name":"model","children":[],"call":["(ivar :@sgid) to_s safe_constantize ","(ivar :@sgid) to_s "]}," ActionText Attachables MissingAttachable initialize":{"type":"method","name":"initialize","children":[],"call":["SignedGlobalID  parse "]}," ActionText Attachables ContentAttachment content_instance":{"type":"method","name":"content_instance","children":[],"call":["ActionText Content  new "," content "]}," ActionText Attachables ContentAttachment to_s":{"type":"method","name":"to_s","children":[],"call":[" to_html "]}," ActionText Attachables ContentAttachment to_html":{"type":"method","name":"to_html","children":[],"call":[" content_instance render "," content_instance "]}," ActionText Attachable read_attribute_for_serialization":{"type":"method","name":"read_attribute_for_serialization","children":[],"call":[" persisted? ","key == "]}," ActionText Attachable attribute_names_for_serialization":{"type":"method","name":"attribute_names_for_serialization","children":[],"call":[" + "]}," ActionText Attachable to_missing_attachable_partial_path":{"type":"method","name":"to_missing_attachable_partial_path","children":[],"call":[]}}