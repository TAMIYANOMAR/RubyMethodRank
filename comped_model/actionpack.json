{" Builder XmlMarkup _ensure_no_block":{"type":"method","name":"_ensure_no_block","children":[],"call":[" fail "]}," Builder XmlMarkup _insert_attributes":{"type":"method","name":"_insert_attributes","children":[],"call":["@target << ","attrs each ","attrs nil? ","order member? ","attrs [] ","order each "]}," Builder XmlMarkup _end_tag":{"type":"method","name":"_end_tag","children":[],"call":["@target << "]}," Builder XmlMarkup _start_tag":{"type":"method","name":"_start_tag","children":[],"call":["@target << "," _insert_attributes "]}," Builder XmlMarkup _special":{"type":"method","name":"_special","children":[],"call":[" _newline ","@target << "," _insert_attributes "," _indent "]}," Builder XmlMarkup _text":{"type":"method","name":"_text","children":[],"call":["@target << "]}," Builder XmlMarkup instruct!":{"type":"method","name":"instruct!","children":[],"call":[" _special ","a merge ","directive_tag == "," _ensure_no_block "," block_given? "]}," Builder XmlMarkup declare!":{"type":"method","name":"declare!","children":[],"call":[" _newline ","@target << "," _nested_structures "," block_given? ","args each "," _indent "]}," Builder XmlMarkup comment!":{"type":"method","name":"comment!","children":[],"call":[" _special "," _ensure_no_block "," block_given? "]}," Builder XmlMarkup target!":{"type":"method","name":"target!","children":[],"call":[]}," Builder XmlMarkup initialize":{"type":"method","name":"initialize","children":[],"call":["options [] "]}," Builder XmlEvents _end_tag":{"type":"method","name":"_end_tag","children":[],"call":["@target end_tag "]}," Builder XmlEvents _start_tag":{"type":"method","name":"_start_tag","children":[],"call":[" _end_tag ","@target start_tag "]}," Builder XmlEvents text!":{"type":"method","name":"text!","children":[],"call":["@target text "]}," Builder XmlBase _nested_structures":{"type":"method","name":"_nested_structures","children":[],"call":["block call "]}," Builder XmlBase _indent":{"type":"method","name":"_indent","children":[],"call":[" text! ","  * ","@level * ","@level == ","@indent == "]}," Builder XmlBase _newline":{"type":"method","name":"_newline","children":[],"call":[" text! ","@indent == "]}," Builder XmlBase _capture_outer_self":{"type":"method","name":"_capture_outer_self","children":[],"call":[" eval "]}," Builder XmlBase _escape":{"type":"method","name":"_escape","children":[],"call":["text gsub gsub gsub ","text gsub gsub ","text gsub "]}," Builder XmlBase nil?":{"type":"method","name":"nil?","children":[],"call":[]}," Builder XmlBase <<":{"type":"method","name":"<<","children":[],"call":[" _text "]}," Builder XmlBase text!":{"type":"method","name":"text!","children":[],"call":[" _text "," _escape "]}," Builder XmlBase method_missing":{"type":"method","name":"method_missing","children":[],"call":[" _newline "," _end_tag "," text! "," _start_tag "," _indent ","text nil? "," _nested_structures "," _capture_outer_self ","@self nil? "," raise ","text << ","arg to_s ","attrs merge! ","args each ","args shift ","args first kind_of? ","args first "]}," Builder XmlBase tag!":{"type":"method","name":"tag!","children":[],"call":[" __send__ "]}," Builder XmlBase initialize":{"type":"method","name":"initialize","children":[],"call":[]}," ActionView TemplateError clean_backtrace":{"type":"method","name":"clean_backtrace","children":[],"call":["line gsub gsub gsub ","line gsub gsub ","line gsub ","exception backtrace collect ","exception backtrace ","File  expand_path ","File  dirname + ","File  dirname "," original_exception clean_backtrace "," original_exception "," original_exception backtrace ","Rails  backtrace_cleaner clean ","Rails  backtrace_cleaner ","Rails  respond_to? "]}," ActionView TemplateError strip_base_path":{"type":"method","name":"strip_base_path","children":[],"call":["file_name gsub ","File  expand_path gsub ","Regexp  escape ","File  expand_path ","File  expand_path gsub gsub ","stripped_path gsub! ","File  expand_path gsub  gsub ","File  expand_path gsub  gsub! "]}," ActionView TemplateError to_s":{"type":"method","name":"to_s","children":[],"call":["(str \"\\n\\n\") + + + + ","(str \"\\n\\n\") + + + "," clean_backtrace join "," clean_backtrace "," original_exception ","(str \"\\n\\n\") + + ","(str \"\\n\\n\") + "," source_extract "," file_name "," line_number "," message "," class "," original_exception clean_backtrace join "," original_exception clean_backtrace "," source_location ","(str \"\\n\") + "]}," ActionView TemplateError file_name":{"type":"method","name":"file_name","children":[],"call":[" strip_base_path ","stripped [] ","stripped [] == ","stripped slice! ","@template relative_path "," strip_base_path  [] "," strip_base_path  [] == "," strip_base_path  slice! "]}," ActionView TemplateError line_number":{"type":"method","name":"line_number","children":[],"call":[" original_exception message scan first first to_i "," original_exception message scan first first "," original_exception message scan first "," original_exception message scan "," original_exception message "," original_exception ","@original_exception backtrace join scan first first to_i ","@original_exception backtrace join scan first first ","@original_exception backtrace join scan first ","@original_exception backtrace join scan ","@original_exception backtrace join ","@original_exception backtrace ","trace scan first first to_i ","trace scan first first ","trace scan first ","trace scan ","trace include? ","1 to_i ","regexp =~ ","(send\n  (ivar :@original_exception) :message) flatten each ","(send\n  (ivar :@original_exception) :message) flatten ","@original_exception clean_backtrace ","@original_exception message ","Regexp  escape ","File  basename "," file_name ","line =~ "," clean_backtrace find "," clean_backtrace "," message =~ "," message ","@original_exception back@original_exception backtrace join  join scan first first to_i ","@original_exception back@original_exception backtrace join  join scan first first ","@original_exception back@original_exception backtrace join  join scan first ","@original_exception back@original_exception backtrace join  join scan ","@original_exception back@original_exception backtrace join  join ","@original_exception back@original_exception backtrace join  ","@original_exception backtrace join  scan first first to_i ","@original_exception backtrace join  scan first first ","@original_exception backtrace join  scan first ","@original_exception backtrace join  scan ","@original_exception backtrace join  include? ","@original_exception clean_back@original_exception backtrace join  "," clean_back@original_exception backtrace join  find "," clean_back@original_exception backtrace join  "]}," ActionView TemplateError sub_template_of":{"type":"method","name":"sub_template_of","children":[],"call":["@sub_templates << "]}," ActionView TemplateError source_extract":{"type":"method","name":"source_extract","children":[],"call":["extract join ","(begin\n  (lvar :line_counter)) + ","source_code [] collect ","source_code [] ","(send\n  (send\n    (send nil :line_number) :+\n    (const nil :SOURCE_CODE_RADIUS)) :-\n  (int 1)) min ","source_code length "," line_number + - "," line_number + "," line_number ","(send\n  (send\n    (send nil :line_number) :-\n    (const nil :SOURCE_CODE_RADIUS)) :-\n  (int 1)) max "," line_number - - "," line_number - ","IO  readlines ","(begin\n  (send\n    (str \" \") :*\n    (lvar :indention))) + ","  * ","source_code [] sum ","(send\n  (send\n    (lvar :num) :+\n    (const nil :SOURCE_CODE_RADIUS)) :-\n  (int 1)) min ","num + - ","num + ","(send\n  (send\n    (lvar :num) :-\n    (const nil :SOURCE_CODE_RADIUS)) :-\n  (int 1)) max ","num - - ","num - ","num to_i ","source_code sum ","@template source split ","@template source ","IO  readlines  [] collect ","source_code []  [] collect ","@template source split  [] collect ","IO  readlines  [] ","source_code []  [] ","@template source split  [] ","(send\n  (send\n    (send nil :line_num to_i ber) :+\n    (const nil :SOURCE_CODE_RADIUS)) :-\n  (int 1)) min ","(send\n  (send\n    (send nil :line_ line_number ber) :+\n    (const nil :SOURCE_CODE_RADIUS)) :-\n  (int 1)) min ","IO  readlines  length ","source_code []  length ","@template source split  length "," line_num to_i ber + - "," line_ line_number ber + - "," line_num to_i ber + "," line_ line_number ber + "," line_num to_i ber "," line_ line_number ber ","(send\n  (send\n    (send nil :line_num to_i ber) :-\n    (const nil :SOURCE_CODE_RADIUS)) :-\n  (int 1)) max ","(send\n  (send\n    (send nil :line_ line_number ber) :-\n    (const nil :SOURCE_CODE_RADIUS)) :-\n  (int 1)) max "," line_num to_i ber - - "," line_ line_number ber - - "," line_num to_i ber - "," line_ line_number ber - ","(begin\n  (send\n    (str \" \") :*\n    (lvar :  * ion))) + ","IO  readlines  [] sum ","source_code []  [] sum ","@template source split  [] sum ","(send\n  (send\n    (lvar :num to_i ) :+\n    (const nil :SOURCE_CODE_RADIUS)) :-\n  (int 1)) min ","(send\n  (send\n    (lvar : line_number ) :+\n    (const nil :SOURCE_CODE_RADIUS)) :-\n  (int 1)) min ","num to_i  + - "," line_number  + - ","num to_i  + "," line_number  + ","(send\n  (send\n    (lvar :num to_i ) :-\n    (const nil :SOURCE_CODE_RADIUS)) :-\n  (int 1)) max ","(send\n  (send\n    (lvar : line_number ) :-\n    (const nil :SOURCE_CODE_RADIUS)) :-\n  (int 1)) max ","num to_i  - - "," line_number  - - ","num to_i  - "," line_number  - ","num to_i  to_i "," line_number  to_i ","IO  readlines  sum ","source_code []  sum ","@template source split  sum "]}," ActionView TemplateError sub_template_message":{"type":"method","name":"sub_template_message","children":[],"call":["Trace of template inclusion:  + ","(send\n  (ivar :@sub_templates) :collect) join "," strip_base_path ","@sub_templates collect ","template relative_path "]}," ActionView TemplateError message":{"type":"method","name":"message","children":[],"call":[" original_exception message "," original_exception "," original_exception message scan first first "," original_exception message scan first "," original_exception message scan "," original_exception message include? ","ActiveSupport Deprecation  silence "]}," ActionView TemplateError initialize":{"type":"method","name":"initialize","children":[],"call":[" remove_deprecated_assigns! ","assigns dup "," compute_backtrace ","template filename ","template source ","template base_path_for_exception "]}," ActionView Partials partial_pieces":{"type":"method","name":"partial_pieces","children":[],"call":[" controller send "," controller ","File  basename ","File  dirname ","partial_path include? "," controller class controller_path "," controller class "]}," ActionView Partials render_collection_of_partials":{"type":"method","name":"render_collection_of_partials","children":[],"call":["collection_of_partials join "," render "," controller send "," controller ","collection_of_partials empty? ","collection_of_partials push "," render_partial ","partial_name split last ","partial_name split ","collection each_with_index ","Array  new "," partial_pieces "," partial_counter_name ","(pair\n  (lvar :counter_name)\n  (lvar :counter)) merge ","Array  new  join ","Array  new  empty? ","Array  new  push "," partial_ partial_counter_name  ","(pair\n  (lvar : partial_counter_name )\n  (lvar :counter)) merge "]}," ActionView Partials render_partial":{"type":"method","name":"render_partial","children":[],"call":[" render ","(pair\n  (lvar :partial_name)\n  (lvar :object)) merge "," controller instance_variable_get "," controller "," partial_pieces ","local_assigns merge ","local_assigns has_key? "," partial_counter_name ","ActionController Base  benchmark "," add_object_to_local_assigns! "," add_counter_to_local_assigns! ","local_assigns clone "," extract_local_assigns "," extracting_object "," logger "," render_partial ","ActionController RecordIdentifier  partial_path "," render_partial_collection ","object_assigns value ","partial_path first ","partial_path any? "," logger debug? "," controller class controller_path "," controller class ","(or\n  (lvar :local_assigns)\n  (hash)) merge ","builder_partial_path to_sym ","partial_path class to_s demodulize underscore sub ","partial_path class to_s demodulize underscore ","partial_path class to_s demodulize ","partial_path class to_s ","partial_path class ","ActionView PartialTemplate  new render_template ","ActionView PartialTemplate  new ","options except merge ","options except ","options [] ","local_assigns merge! "," _pick_partial_template render_partial "," _pick_partial_template ","options has_key? ","ActiveRecord NamedScope Scope  === ","ActiveRecord Associations AssociationCollection  === ","Array  === ","options []= ","renderer template ","renderer render ","PartialRenderer  new "," formats= ","details [] "," _evaluate_assigns_and_ivars ","(pair\n  (lvar :partial_name)\n  (lvar : extracting_object )) merge ","local_assigns merge  merge ","local_assigns clone  merge "," extract_local_assigns  merge ","local_assigns merge  has_key? ","local_assigns clone  has_key? "," extract_local_assigns  has_key? "," partial_ partial_counter_name  "," add_object_to_local_assigns merge ! "," add_object_to_local_assigns clone ! "," add_object_to_ extract_local_assigns ! "," add_ extracting_object _to_local_assigns! "," add_counter_to_local_assigns merge ! "," add_counter_to_local_assigns clone ! "," add_counter_to_ extract_local_assigns ! ","local_assigns merge  clone ","local_assigns clone  clone "," extract_local_assigns  clone "," extract_local_assigns merge  "," extract_local_assigns clone  "," extract_ extract_local_assigns  "," extracting_ extracting_object  ","ActionController RecordIdentifier  partial_ActionController RecordIdentifier  partial_path  ","ActionController RecordIdentifier  options []  "," extracting_object _assigns value ","partial_ActionController RecordIdentifier  partial_path  first ","options []  first ","partial_ActionController RecordIdentifier  partial_path  any? ","options []  any? "," controller class controller_ActionController RecordIdentifier  partial_path  ","(or\n  (lvar :local_assigns merge )\n  (hash)) merge ","(or\n  (lvar :local_assigns clone )\n  (hash)) merge ","(or\n  (lvar : extract_local_assigns )\n  (hash)) merge ","builder_partial_ActionController RecordIdentifier  partial_path  to_sym ","partial_path class to_s demodulize underscore sub  to_sym ","builder_options []  to_sym ","partial_ActionController RecordIdentifier  partial_path  class to_s demodulize underscore sub ","options []  class to_s demodulize underscore sub ","partial_ActionController RecordIdentifier  partial_path  class to_s demodulize underscore ","options []  class to_s demodulize underscore ","partial_ActionController RecordIdentifier  partial_path  class to_s demodulize ","options []  class to_s demodulize ","partial_ActionController RecordIdentifier  partial_path  class to_s ","options []  class to_s ","partial_ActionController RecordIdentifier  partial_path  class ","options []  class ","local_assigns merge  merge! ","local_assigns clone  merge! "," extract_local_assigns  merge! ","PartialRenderer  new  template ","PartialRenderer  new  render ","options []  [] "]}," ActionView Helpers UrlHelper convert_confirm_option_to_javascript!":{"type":"method","name":"convert_confirm_option_to_javascript!","children":[],"call":["html_options delete ","html_options []= ","html_options [] ","html_options include? ","confirm gsub ","html_options delete  gsub "]}," ActionView Helpers UrlHelper assume_current_url_options!":{"type":"method","name":"assume_current_url_options!","children":[],"call":["@params [] ","options [] ","options [] nil? ","options []= "]}," ActionView Helpers UrlHelper destination_equal_to_current":{"type":"method","name":"destination_equal_to_current","children":[],"call":["params_without_location == ","options [] ","options has_key? ","options [] == ","@params [] ","(str \"controller\") include? ","@params reject ","options [] to_s == ","@params [] to_s ","options [] to_s "]}," ActionView Helpers UrlHelper link_to_unless_current":{"type":"method","name":"link_to_unless_current","children":[],"call":[" link_to "," html_escape "," block_given? "," destination_equal_to_current "," assume_current_url_options! "," link_to_unless "," current_page? "]}," ActionView Helpers UrlHelper link_to":{"type":"method","name":"link_to","children":[],"call":[" content_tag ","html_options merge "," url_for "," convert_confirm_option_to_javascript! ","options is_a? ","(or\n  (lvar :html_options)\n  (hash)) merge ","html_options nil? "," html_escape "," tag_options "," convert_options_to_javascript! ","html_options stringify_keys ","(or\n  (lvar :html_options)\n  (hash)) stringify_keys ","html_options [] ","@controller request env [] ","@controller request env ","@controller request ","args third ","args second ","args first "," concat "," link_to "," capture "," block_given? ","(str \"<a \") html_safe ","(str \"<a \") html_safe! "," link_to html_safe! "," convert_options_to_data_attributes ","args [] ","ERB Util  h "," safe_concat ","ERB Util  html_escape ","html_options stringify_keys  merge ","(or\n  (lvar :html_options)\n  (hash)) stringify_keys  merge ","args third  merge ","args second  merge "," convert_options_to_data_attributes  merge ","args []  merge ","  html_escape _for ","  url_for _for ","(or\n  (lvar :html_options stringify_keys )\n  (hash)) merge ","(or\n  (lvar :(or\n  (lvar :html_options)\n  (hash)) stringify_keys )\n  (hash)) merge ","(or\n  (lvar :args third )\n  (hash)) merge ","(or\n  (lvar :args second )\n  (hash)) merge ","(or\n  (lvar : convert_options_to_data_attributes )\n  (hash)) merge ","(or\n  (lvar :args [] )\n  (hash)) merge ","html_options stringify_keys  nil? ","(or\n  (lvar :html_options)\n  (hash)) stringify_keys  nil? ","args third  nil? ","args second  nil? "," convert_options_to_data_attributes  nil? ","args []  nil? ","  tag_options  ","html_options stringify_keys  stringify_keys ","(or\n  (lvar :html_options)\n  (hash)) stringify_keys  stringify_keys ","args third  stringify_keys ","args second  stringify_keys "," convert_options_to_data_attributes  stringify_keys ","args []  stringify_keys ","(or\n  (lvar :html_options stringify_keys )\n  (hash)) stringify_keys ","(or\n  (lvar :(or\n  (lvar :html_options)\n  (hash)) stringify_keys )\n  (hash)) stringify_keys ","(or\n  (lvar :args third )\n  (hash)) stringify_keys ","(or\n  (lvar :args second )\n  (hash)) stringify_keys ","(or\n  (lvar : convert_options_to_data_attributes )\n  (hash)) stringify_keys ","(or\n  (lvar :args [] )\n  (hash)) stringify_keys ","html_options stringify_keys  [] ","(or\n  (lvar :html_options)\n  (hash)) stringify_keys  [] ","args third  [] ","args second  [] "," convert_options_to_data_attributes  [] ","args []  [] "]}," ActionView Helpers UrlHelper url_for":{"type":"method","name":"url_for","children":[],"call":["@controller send gsub ","@controller send ","(pair\n  (sym :only_path)\n  (true)) merge ","Hash  === ","(pair\n  (sym :only_path)\n  (true)) update ","options symbolize_keys ","options kind_of? "," html_escape ","options delete ","options key? ","options stringify_keys "," escape_once "," polymorphic_path ","(pair\n  (sym :only_path)\n  (lvar :show_path)) update ","options [] nil? ","options [] ","(pair\n  (sym :only_path)\n  (send\n    (send\n      (lvar :options) :[]\n      (sym :host)) :nil?)) update ","@controller request env [] ","@controller request env ","@controller request "," escape_once html_safe "," controller request env [] "," controller request env "," controller request "," controller ","options symbolize_keys reverse_merge! "," controller send "," raise ","arguments passed to url_for can't be handled. Please require  + "," _back_url ","(pair\n  (sym :only_path)\n  (true)) merge  symbolize_keys ","(pair\n  (sym :only_path)\n  (true)) update  symbolize_keys ","(pair\n  (sym :only_path)\n  (lvar :show_path)) update  symbolize_keys ","(pair\n  (sym :only_path)\n  (send\n    (send\n      (lvar :options) :[]\n      (sym :host)) :nil?)) update  symbolize_keys ","options symbolize_keys reverse_merge!  symbolize_keys ","(pair\n  (sym :only_path)\n  (true)) merge  kind_of? ","(pair\n  (sym :only_path)\n  (true)) update  kind_of? ","(pair\n  (sym :only_path)\n  (lvar :show_path)) update  kind_of? ","(pair\n  (sym :only_path)\n  (send\n    (send\n      (lvar :options) :[]\n      (sym :host)) :nil?)) update  kind_of? ","options symbolize_keys reverse_merge!  kind_of? "," html_options delete  ","(pair\n  (sym :only_path)\n  (true)) merge  delete ","(pair\n  (sym :only_path)\n  (true)) update  delete ","(pair\n  (sym :only_path)\n  (lvar :show_path)) update  delete ","(pair\n  (sym :only_path)\n  (send\n    (send\n      (lvar :options) :[]\n      (sym :host)) :nil?)) update  delete ","options symbolize_keys reverse_merge!  delete ","(pair\n  (sym :only_path)\n  (true)) merge  key? ","(pair\n  (sym :only_path)\n  (true)) update  key? ","(pair\n  (sym :only_path)\n  (lvar :show_path)) update  key? ","(pair\n  (sym :only_path)\n  (send\n    (send\n      (lvar :options) :[]\n      (sym :host)) :nil?)) update  key? ","options symbolize_keys reverse_merge!  key? ","(pair\n  (sym :only_path)\n  (true)) merge  stringify_keys ","(pair\n  (sym :only_path)\n  (true)) update  stringify_keys ","(pair\n  (sym :only_path)\n  (lvar :show_path)) update  stringify_keys ","(pair\n  (sym :only_path)\n  (send\n    (send\n      (lvar :options) :[]\n      (sym :host)) :nil?)) update  stringify_keys ","options symbolize_keys reverse_merge!  stringify_keys "," options delete _once ","(pair\n  (sym :only_path)\n  (true)) merge  [] nil? ","(pair\n  (sym :only_path)\n  (true)) update  [] nil? ","(pair\n  (sym :only_path)\n  (lvar :show_path)) update  [] nil? ","(pair\n  (sym :only_path)\n  (send\n    (send\n      (lvar :options) :[]\n      (sym :host)) :nil?)) update  [] nil? ","options symbolize_keys reverse_merge!  [] nil? ","(pair\n  (sym :only_path)\n  (true)) merge  [] ","(pair\n  (sym :only_path)\n  (true)) update  [] ","(pair\n  (sym :only_path)\n  (lvar :show_path)) update  [] ","(pair\n  (sym :only_path)\n  (send\n    (send\n      (lvar :options) :[]\n      (sym :host)) :nil?)) update  [] ","options symbolize_keys reverse_merge!  [] ","(pair\n  (sym :only_path)\n  (send\n    (send\n      (lvar :(pair\n  (sym :only_path)\n  (true)) merge ) :[]\n      (sym :host)) :nil?)) update ","(pair\n  (sym :only_path)\n  (send\n    (send\n      (lvar :(pair\n  (sym :only_path)\n  (true)) update ) :[]\n      (sym :host)) :nil?)) update ","(pair\n  (sym :only_path)\n  (send\n    (send\n      (lvar :(pair\n  (sym :only_path)\n  (lvar :show_path)) update ) :[]\n      (sym :host)) :nil?)) update ","(pair\n  (sym :only_path)\n  (send\n    (send\n      (lvar :(pair\n  (sym :only_path)\n  (send\n    (send\n      (lvar :options) :[]\n      (sym :host)) :nil?)) update ) :[]\n      (sym :host)) :nil?)) update ","(pair\n  (sym :only_path)\n  (send\n    (send\n      (lvar :options symbolize_keys reverse_merge! ) :[]\n      (sym :host)) :nil?)) update "," options delete _once html_safe ","(pair\n  (sym :only_path)\n  (true)) merge  symbolize_keys reverse_merge! ","(pair\n  (sym :only_path)\n  (true)) update  symbolize_keys reverse_merge! ","(pair\n  (sym :only_path)\n  (lvar :show_path)) update  symbolize_keys reverse_merge! ","(pair\n  (sym :only_path)\n  (send\n    (send\n      (lvar :options) :[]\n      (sym :host)) :nil?)) update  symbolize_keys reverse_merge! ","options symbolize_keys reverse_merge!  symbolize_keys reverse_merge! ","arguments passed to @controller send _for can't be handled. Please require  + ","arguments passed to  polymorphic_path _for can't be handled. Please require  + "," _back_@controller send  "," _back_ polymorphic_path  "]}," ActionView Helpers TextHelper escape_regexp":{"type":"method","name":"escape_regexp","children":[],"call":["text gsub "]}," ActionView Helpers TextHelper strip_links":{"type":"method","name":"strip_links","children":[],"call":["text gsub "]}," ActionView Helpers TextHelper textilize_without_paragraph":{"type":"method","name":"textilize_without_paragraph","children":[],"call":["textiled [] ","textiled [] == "," textilize ","textiled []  [] "," textilize  [] ","textiled []  [] == "," textilize  [] == "]}," ActionView Helpers TextHelper textilize":{"type":"method","name":"textilize","children":[],"call":["RedCloth  new to_html ","RedCloth  new ","text empty? ","textilized to_html ","textilized hard_breaks= ","textilized respond_to? ","text blank? ","(send\n  (lvar :text) :blank?) html_safe "," sanitize ","options delete ","text html_safe? "," sanitize  empty? ","RedCloth  new  to_html "," sanitize ilized to_html ","RedCloth  new  hard_breaks= "," sanitize ilized hard_breaks= ","RedCloth  new  respond_to? "," sanitize ilized respond_to? "," sanitize  blank? ","(send\n  (lvar : sanitize ) :blank?) html_safe "," sanitize  html_safe? "]}," ActionView Helpers TextHelper pluralize":{"type":"method","name":"pluralize","children":[],"call":["(begin\n  (lvar :count)) + ","singular + ","Inflector  pluralize ","Object  const_defined? ","count == ","(begin\n  (or\n    (lvar :count)\n    (int 0))) + ","singular pluralize ","count =~ "]}," ActionView Helpers TextHelper excerpt":{"type":"method","name":"excerpt","children":[],"call":["prefix + + ","prefix + ","text [] strip ","text [] ","end_pos < ","text length ","start_pos > ","(send\n  (send\n    (lvar :found_pos) :+\n    (send\n      (lvar :phrase) :length)) :+\n  (lvar :radius)) min ","found_pos + + ","found_pos + ","phrase length ","(send\n  (lvar :found_pos) :-\n  (lvar :radius)) max ","found_pos - ","text =~ "," escape_regexp ","phrase nil? ","text nil? ","Regexp  escape ","text chars [] strip ","text chars [] ","text chars ","text chars length ","(send\n  (send\n    (lvar :found_pos) :+\n    (send\n      (send\n        (lvar :phrase) :chars) :length)) :+\n  (lvar :radius)) min ","phrase chars length ","phrase chars ","text chars =~ ","text length - ","(send\n  (array\n    (send\n      (send\n        (send\n          (lvar :found_pos) :+\n          (send\n            (lvar :phrase) :length)) :+\n        (lvar :radius)) :-\n      (int 1))\n    (int 0)) :max) min ","(send\n  (send\n    (send\n      (lvar :found_pos) :+\n      (send\n        (lvar :phrase) :length)) :+\n    (lvar :radius)) :-\n  (int 1)) max ","found_pos + + - ","text chars length - ","(send\n  (array\n    (send\n      (send\n        (send\n          (lvar :found_pos) :+\n          (send\n            (send\n              (lvar :phrase) :chars) :length)) :+\n        (lvar :radius)) :-\n      (int 1))\n    (int 0)) :max) min ","(send\n  (send\n    (send\n      (lvar :found_pos) :+\n      (send\n        (send\n          (lvar :phrase) :chars) :length)) :+\n    (lvar :radius)) :-\n  (int 1)) max ","text mb_chars [] strip ","text mb_chars [] ","text mb_chars ","options [] ","text mb_chars length - ","text mb_chars length ","(send\n  (array\n    (send\n      (send\n        (send\n          (lvar :found_pos) :+\n          (send\n            (send\n              (lvar :phrase) :mb_chars) :length)) :+\n        (send\n          (lvar :options) :[]\n          (sym :radius))) :-\n      (int 1))\n    (int 0)) :max) min ","(send\n  (send\n    (send\n      (lvar :found_pos) :+\n      (send\n        (send\n          (lvar :phrase) :mb_chars) :length)) :+\n    (send\n      (lvar :options) :[]\n      (sym :radius))) :-\n  (int 1)) max ","phrase mb_chars length ","phrase mb_chars ","(send\n  (lvar :found_pos) :-\n  (send\n    (lvar :options) :[]\n    (sym :radius))) max ","text mb_chars =~ ","options reverse_merge! ","options []= ","args [] ","args empty? ","args extract_options! ","ActiveSupport Deprecation  warn "," caller ","(send\n  (send\n    (send\n      (send\n        (lvar :first_part) :+\n        (lvar :separator)) :+\n      (lvar :phrase)) :+\n    (lvar :separator)) :+\n  (lvar :second_part)) strip ","first_part + + + + ","first_part + + + ","first_part + + ","first_part + "," cut_excerpt_part ","text split ","value match ","text split each ","matches [] ","text match ","options fetch ","(lvar :prefix) join ","(lvar :first_part) join strip ","(lvar :first_part) join ","options []  + + ","options []  + ","(send\n  (send\n    (lvar :found_pos) :+\n    (send\n      (lvar :phrase) :length)) :+\n  (lvar :radius)) min  < ","(send\n  (send\n    (lvar :found_pos) :+\n    (send\n      (send\n        (lvar :phrase) :chars) :length)) :+\n  (lvar :radius)) min  < ","(send\n  (array\n    (send\n      (send\n        (send\n          (lvar :found_pos) :+\n          (send\n            (lvar :phrase) :length)) :+\n        (lvar :radius)) :-\n      (int 1))\n    (int 0)) :max) min  < ","(send\n  (array\n    (send\n      (send\n        (send\n          (lvar :found_pos) :+\n          (send\n            (send\n              (lvar :phrase) :chars) :length)) :+\n        (lvar :radius)) :-\n      (int 1))\n    (int 0)) :max) min  < ","(send\n  (array\n    (send\n      (send\n        (send\n          (lvar :found_pos) :+\n          (send\n            (send\n              (lvar :phrase) :mb_chars) :length)) :+\n        (send\n          (lvar :options) :[]\n          (sym :radius))) :-\n      (int 1))\n    (int 0)) :max) min  < ","(send\n  (lvar :found_pos) :-\n  (lvar :radius)) max  > ","(send\n  (lvar :found_pos) :-\n  (send\n    (lvar :options) :[]\n    (sym :radius))) max  > ","(send\n  (send\n    (lvar :text =~ ) :+\n    (send\n      (lvar :phrase) :length)) :+\n  (lvar :radius)) min ","(send\n  (send\n    (lvar :text chars =~ ) :+\n    (send\n      (lvar :phrase) :length)) :+\n  (lvar :radius)) min ","(send\n  (send\n    (lvar :text mb_chars =~ ) :+\n    (send\n      (lvar :phrase) :length)) :+\n  (lvar :radius)) min ","(send\n  (send\n    (lvar :found_pos) :+\n    (send\n      (lvar : escape_regexp ) :length)) :+\n  (lvar :radius)) min ","(send\n  (send\n    (lvar :found_pos) :+\n    (send\n      (lvar :Regexp  escape ) :length)) :+\n  (lvar :radius)) min ","(send\n  (send\n    (lvar :found_pos) :+\n    (send\n      (lvar :matches [] ) :length)) :+\n  (lvar :radius)) min ","text =~  + + ","text chars =~  + + ","text mb_chars =~  + + ","text =~  + ","text chars =~  + ","text mb_chars =~  + "," escape_regexp  length ","Regexp  escape  length ","matches []  length ","(send\n  (lvar :text =~ ) :-\n  (lvar :radius)) max ","(send\n  (lvar :text chars =~ ) :-\n  (lvar :radius)) max ","(send\n  (lvar :text mb_chars =~ ) :-\n  (lvar :radius)) max ","text =~  - ","text chars =~  - ","text mb_chars =~  - "," escape_regexp  nil? ","Regexp  escape  nil? ","matches []  nil? ","(send\n  (send\n    (lvar :text =~ ) :+\n    (send\n      (send\n        (lvar :phrase) :chars) :length)) :+\n  (lvar :radius)) min ","(send\n  (send\n    (lvar :text chars =~ ) :+\n    (send\n      (send\n        (lvar :phrase) :chars) :length)) :+\n  (lvar :radius)) min ","(send\n  (send\n    (lvar :text mb_chars =~ ) :+\n    (send\n      (send\n        (lvar :phrase) :chars) :length)) :+\n  (lvar :radius)) min ","(send\n  (send\n    (lvar :found_pos) :+\n    (send\n      (send\n        (lvar : escape_regexp ) :chars) :length)) :+\n  (lvar :radius)) min ","(send\n  (send\n    (lvar :found_pos) :+\n    (send\n      (send\n        (lvar :Regexp  escape ) :chars) :length)) :+\n  (lvar :radius)) min ","(send\n  (send\n    (lvar :found_pos) :+\n    (send\n      (send\n        (lvar :matches [] ) :chars) :length)) :+\n  (lvar :radius)) min "," escape_regexp  chars length ","Regexp  escape  chars length ","matches []  chars length "," escape_regexp  chars ","Regexp  escape  chars ","matches []  chars ","(send\n  (array\n    (send\n      (send\n        (send\n          (lvar :text =~ ) :+\n          (send\n            (lvar :phrase) :length)) :+\n        (lvar :radius)) :-\n      (int 1))\n    (int 0)) :max) min ","(send\n  (array\n    (send\n      (send\n        (send\n          (lvar :text chars =~ ) :+\n          (send\n            (lvar :phrase) :length)) :+\n        (lvar :radius)) :-\n      (int 1))\n    (int 0)) :max) min ","(send\n  (array\n    (send\n      (send\n        (send\n          (lvar :text mb_chars =~ ) :+\n          (send\n            (lvar :phrase) :length)) :+\n        (lvar :radius)) :-\n      (int 1))\n    (int 0)) :max) min ","(send\n  (array\n    (send\n      (send\n        (send\n          (lvar :found_pos) :+\n          (send\n            (lvar : escape_regexp ) :length)) :+\n        (lvar :radius)) :-\n      (int 1))\n    (int 0)) :max) min ","(send\n  (array\n    (send\n      (send\n        (send\n          (lvar :found_pos) :+\n          (send\n            (lvar :Regexp  escape ) :length)) :+\n        (lvar :radius)) :-\n      (int 1))\n    (int 0)) :max) min ","(send\n  (array\n    (send\n      (send\n        (send\n          (lvar :found_pos) :+\n          (send\n            (lvar :matches [] ) :length)) :+\n        (lvar :radius)) :-\n      (int 1))\n    (int 0)) :max) min ","(send\n  (send\n    (send\n      (lvar :text =~ ) :+\n      (send\n        (lvar :phrase) :length)) :+\n    (lvar :radius)) :-\n  (int 1)) max ","(send\n  (send\n    (send\n      (lvar :text chars =~ ) :+\n      (send\n        (lvar :phrase) :length)) :+\n    (lvar :radius)) :-\n  (int 1)) max ","(send\n  (send\n    (send\n      (lvar :text mb_chars =~ ) :+\n      (send\n        (lvar :phrase) :length)) :+\n    (lvar :radius)) :-\n  (int 1)) max ","(send\n  (send\n    (send\n      (lvar :found_pos) :+\n      (send\n        (lvar : escape_regexp ) :length)) :+\n    (lvar :radius)) :-\n  (int 1)) max ","(send\n  (send\n    (send\n      (lvar :found_pos) :+\n      (send\n        (lvar :Regexp  escape ) :length)) :+\n    (lvar :radius)) :-\n  (int 1)) max ","(send\n  (send\n    (send\n      (lvar :found_pos) :+\n      (send\n        (lvar :matches [] ) :length)) :+\n    (lvar :radius)) :-\n  (int 1)) max ","text =~  + + - ","text chars =~  + + - ","text mb_chars =~  + + - ","(send\n  (array\n    (send\n      (send\n        (send\n          (lvar :text =~ ) :+\n          (send\n            (send\n              (lvar :phrase) :chars) :length)) :+\n        (lvar :radius)) :-\n      (int 1))\n    (int 0)) :max) min ","(send\n  (array\n    (send\n      (send\n        (send\n          (lvar :text chars =~ ) :+\n          (send\n            (send\n              (lvar :phrase) :chars) :length)) :+\n        (lvar :radius)) :-\n      (int 1))\n    (int 0)) :max) min ","(send\n  (array\n    (send\n      (send\n        (send\n          (lvar :text mb_chars =~ ) :+\n          (send\n            (send\n              (lvar :phrase) :chars) :length)) :+\n        (lvar :radius)) :-\n      (int 1))\n    (int 0)) :max) min ","(send\n  (array\n    (send\n      (send\n        (send\n          (lvar :found_pos) :+\n          (send\n            (send\n              (lvar : escape_regexp ) :chars) :length)) :+\n        (lvar :radius)) :-\n      (int 1))\n    (int 0)) :max) min ","(send\n  (array\n    (send\n      (send\n        (send\n          (lvar :found_pos) :+\n          (send\n            (send\n              (lvar :Regexp  escape ) :chars) :length)) :+\n        (lvar :radius)) :-\n      (int 1))\n    (int 0)) :max) min ","(send\n  (array\n    (send\n      (send\n        (send\n          (lvar :found_pos) :+\n          (send\n            (send\n              (lvar :matches [] ) :chars) :length)) :+\n        (lvar :radius)) :-\n      (int 1))\n    (int 0)) :max) min ","(send\n  (send\n    (send\n      (lvar :text =~ ) :+\n      (send\n        (send\n          (lvar :phrase) :chars) :length)) :+\n    (lvar :radius)) :-\n  (int 1)) max ","(send\n  (send\n    (send\n      (lvar :text chars =~ ) :+\n      (send\n        (send\n          (lvar :phrase) :chars) :length)) :+\n    (lvar :radius)) :-\n  (int 1)) max ","(send\n  (send\n    (send\n      (lvar :text mb_chars =~ ) :+\n      (send\n        (send\n          (lvar :phrase) :chars) :length)) :+\n    (lvar :radius)) :-\n  (int 1)) max ","(send\n  (send\n    (send\n      (lvar :found_pos) :+\n      (send\n        (send\n          (lvar : escape_regexp ) :chars) :length)) :+\n    (lvar :radius)) :-\n  (int 1)) max ","(send\n  (send\n    (send\n      (lvar :found_pos) :+\n      (send\n        (send\n          (lvar :Regexp  escape ) :chars) :length)) :+\n    (lvar :radius)) :-\n  (int 1)) max ","(send\n  (send\n    (send\n      (lvar :found_pos) :+\n      (send\n        (send\n          (lvar :matches [] ) :chars) :length)) :+\n    (lvar :radius)) :-\n  (int 1)) max ","args extract_options!  [] ","(send\n  (array\n    (send\n      (send\n        (send\n          (lvar :text =~ ) :+\n          (send\n            (send\n              (lvar :phrase) :mb_chars) :length)) :+\n        (send\n          (lvar :options) :[]\n          (sym :radius))) :-\n      (int 1))\n    (int 0)) :max) min ","(send\n  (array\n    (send\n      (send\n        (send\n          (lvar :text chars =~ ) :+\n          (send\n            (send\n              (lvar :phrase) :mb_chars) :length)) :+\n        (send\n          (lvar :options) :[]\n          (sym :radius))) :-\n      (int 1))\n    (int 0)) :max) min ","(send\n  (array\n    (send\n      (send\n        (send\n          (lvar :text mb_chars =~ ) :+\n          (send\n            (send\n              (lvar :phrase) :mb_chars) :length)) :+\n        (send\n          (lvar :options) :[]\n          (sym :radius))) :-\n      (int 1))\n    (int 0)) :max) min ","(send\n  (array\n    (send\n      (send\n        (send\n          (lvar :found_pos) :+\n          (send\n            (send\n              (lvar : escape_regexp ) :mb_chars) :length)) :+\n        (send\n          (lvar :options) :[]\n          (sym :radius))) :-\n      (int 1))\n    (int 0)) :max) min ","(send\n  (array\n    (send\n      (send\n        (send\n          (lvar :found_pos) :+\n          (send\n            (send\n              (lvar :Regexp  escape ) :mb_chars) :length)) :+\n        (send\n          (lvar :options) :[]\n          (sym :radius))) :-\n      (int 1))\n    (int 0)) :max) min ","(send\n  (array\n    (send\n      (send\n        (send\n          (lvar :found_pos) :+\n          (send\n            (send\n              (lvar :matches [] ) :mb_chars) :length)) :+\n        (send\n          (lvar :options) :[]\n          (sym :radius))) :-\n      (int 1))\n    (int 0)) :max) min ","(send\n  (array\n    (send\n      (send\n        (send\n          (lvar :found_pos) :+\n          (send\n            (send\n              (lvar :phrase) :mb_chars) :length)) :+\n        (send\n          (lvar :args extract_options! ) :[]\n          (sym :radius))) :-\n      (int 1))\n    (int 0)) :max) min ","(send\n  (send\n    (send\n      (lvar :text =~ ) :+\n      (send\n        (send\n          (lvar :phrase) :mb_chars) :length)) :+\n    (send\n      (lvar :options) :[]\n      (sym :radius))) :-\n  (int 1)) max ","(send\n  (send\n    (send\n      (lvar :text chars =~ ) :+\n      (send\n        (send\n          (lvar :phrase) :mb_chars) :length)) :+\n    (send\n      (lvar :options) :[]\n      (sym :radius))) :-\n  (int 1)) max ","(send\n  (send\n    (send\n      (lvar :text mb_chars =~ ) :+\n      (send\n        (send\n          (lvar :phrase) :mb_chars) :length)) :+\n    (send\n      (lvar :options) :[]\n      (sym :radius))) :-\n  (int 1)) max ","(send\n  (send\n    (send\n      (lvar :found_pos) :+\n      (send\n        (send\n          (lvar : escape_regexp ) :mb_chars) :length)) :+\n    (send\n      (lvar :options) :[]\n      (sym :radius))) :-\n  (int 1)) max ","(send\n  (send\n    (send\n      (lvar :found_pos) :+\n      (send\n        (send\n          (lvar :Regexp  escape ) :mb_chars) :length)) :+\n    (send\n      (lvar :options) :[]\n      (sym :radius))) :-\n  (int 1)) max ","(send\n  (send\n    (send\n      (lvar :found_pos) :+\n      (send\n        (send\n          (lvar :matches [] ) :mb_chars) :length)) :+\n    (send\n      (lvar :options) :[]\n      (sym :radius))) :-\n  (int 1)) max ","(send\n  (send\n    (send\n      (lvar :found_pos) :+\n      (send\n        (send\n          (lvar :phrase) :mb_chars) :length)) :+\n    (send\n      (lvar :args extract_options! ) :[]\n      (sym :radius))) :-\n  (int 1)) max "," escape_regexp  mb_chars length ","Regexp  escape  mb_chars length ","matches []  mb_chars length "," escape_regexp  mb_chars ","Regexp  escape  mb_chars ","matches []  mb_chars ","(send\n  (lvar :text =~ ) :-\n  (send\n    (lvar :options) :[]\n    (sym :radius))) max ","(send\n  (lvar :text chars =~ ) :-\n  (send\n    (lvar :options) :[]\n    (sym :radius))) max ","(send\n  (lvar :text mb_chars =~ ) :-\n  (send\n    (lvar :options) :[]\n    (sym :radius))) max ","(send\n  (lvar :found_pos) :-\n  (send\n    (lvar :args extract_options! ) :[]\n    (sym :radius))) max ","args extract_options!  reverse_merge! ","args extract_options!  []= ","args extract_args extract_options! ! ","(send\n  (send\n    (send\n      (send\n        (lvar :first_part) :+\n        (lvar :separator)) :+\n      (lvar : escape_regexp )) :+\n    (lvar :separator)) :+\n  (lvar :second_part)) strip ","(send\n  (send\n    (send\n      (send\n        (lvar :first_part) :+\n        (lvar :separator)) :+\n      (lvar :Regexp  escape )) :+\n    (lvar :separator)) :+\n  (lvar :second_part)) strip ","(send\n  (send\n    (send\n      (send\n        (lvar :first_part) :+\n        (lvar :separator)) :+\n      (lvar :matches [] )) :+\n    (lvar :separator)) :+\n  (lvar :second_part)) strip ","(send\n  (send\n    (send\n      (send\n        (lvar :first_part) :+\n        (lvar :options fetch )) :+\n      (lvar :phrase)) :+\n    (lvar :options fetch )) :+\n  (lvar :second_part)) strip ","text match  [] ","args extract_options!  fetch ","(lvar :options [] ) join "]}," ActionView Helpers TextHelper highlight":{"type":"method","name":"highlight","children":[],"call":["text gsub "," escape_regexp ","text nil? ","phrase nil? ","Regexp  escape ","phrase blank? ","(send\n  (send nil :Array\n    (lvar :phrases)) :map) join "," Array map "," Array ","phrases blank? ","text blank? ","options [] ","options reverse_merge! ","options []= ","args [] ","args empty? ","args extract_options! ","(or\n  (send\n    (lvar :text) :blank?)\n  (send\n    (lvar :phrases) :blank?)) html_safe "," sanitize ","options [] == ","text html_safe? ","text to_str gsub ","text to_str ","phrases present? ","text present? ","ActiveSupport Deprecation  warn "," caller ","options fetch "," sanitize  gsub ","text to_str gsub  gsub "," sanitize  nil? ","text to_str gsub  nil? "," sanitize  blank? ","text to_str gsub  blank? ","args extract_options!  [] ","args extract_options!  reverse_merge! ","args extract_options!  []= ","args extract_args extract_options! ! ","(or\n  (send\n    (lvar : sanitize ) :blank?)\n  (send\n    (lvar :phrases) :blank?)) html_safe ","(or\n  (send\n    (lvar :text to_str gsub ) :blank?)\n  (send\n    (lvar :phrases) :blank?)) html_safe ","args extract_options!  [] == "," sanitize  html_safe? ","text to_str gsub  html_safe? "," sanitize  to_str gsub ","text to_str gsub  to_str gsub "," sanitize  to_str ","text to_str gsub  to_str "," sanitize  present? ","text to_str gsub  present? ","args extract_options!  fetch "]}," ActionView Helpers TextHelper truncate":{"type":"method","name":"truncate","children":[],"call":["text [] + ","text [] ","length - ","text length > ","text length ","text nil? ","chars [] join + ","chars [] join ","chars [] ","chars length > ","chars length ","text split ","$KCODE == ","truncate_string length ","text chars [] + ","text chars [] ","text chars ","text chars length > ","text chars length ","truncate_string chars length ","truncate_string chars ","(if\n  (send\n    (send\n      (send\n        (lvar :text) :chars) :length) :>\n    (lvar :length))\n  (send\n    (send\n      (send\n        (lvar :text) :chars) :[]\n      (erange\n        (int 0)\n        (lvar :l))) :+\n    (lvar :truncate_string))\n  (lvar :text)) to_s ","(if\n  (send\n    (send\n      (lvar :text) :length) :>\n    (lvar :length))\n  (send\n    (send\n      (lvar :text) :[]\n      (erange\n        (int 0)\n        (lvar :l))) :+\n    (lvar :truncate_string))\n  (lvar :text)) to_s ","(if\n  (send\n    (send\n      (lvar :chars) :length) :>\n    (lvar :length))\n  (send\n    (send\n      (lvar :chars) :[]\n      (erange\n        (int 0)\n        (lvar :l))) :+\n    (lvar :truncate_string))\n  (lvar :text)) to_s ","chars [] + ","(if\n  (send\n    (send\n      (lvar :chars) :length) :>\n    (send\n      (lvar :options) :[]\n      (sym :length)))\n  (send\n    (send\n      (lvar :chars) :[]\n      (erange\n        (int 0)\n        (lvar :l))) :+\n    (send\n      (lvar :options) :[]\n      (sym :omission)))\n  (lvar :text)) to_s ","options [] ","text mb_chars ","options [] - ","options [] mb_chars length ","options [] mb_chars ","options reverse_merge! ","options []= ","args [] ","ActiveSupport Deprecation  warn "," caller ","truncate takes an option hash instead of separate  + ","args empty? ","args extract_options! ","text truncate ","options delete ","(if\n  (send\n    (send\n      (lvar :chars) :length) :>\n    (send\n      (lvar :options) :[]\n      (sym :length)))\n  (send\n    (send\n      (lvar :chars) :[]\n      (erange\n        (int 0)\n        (lvar :stop))) :+\n    (send\n      (lvar :options) :[]\n      (sym :omission)))\n  (lvar :text)) to_s ","chars rindex "," sanitize ","text html_safe? ","content << "," capture "," block_given? ","ERB Util  html_escape ","content html_safe ","options [] == ","options fetch "," sanitize  [] + "," sanitize  [] ","length - ength - ","options [] - ength - ","options fetch  - ","text length - ength > ","text options [] - ength > "," sanitize  length > ","text options fetch  > ","text length - ength ","text options [] - ength "," sanitize  length ","text options fetch  ","text nilength - ? ","text nioptions [] - ? "," sanitize  nil? ","text split  [] join + ","text chars  [] join + ","text mb_chars  [] join + ","text split  [] join ","text chars  [] join ","text mb_chars  [] join ","text split  [] ","text chars  [] ","text mb_chars  [] ","text split  length > ","text chars  length > ","text mb_chars  length > ","chars length - ength > ","chars options [] - ength > ","chars options fetch  > ","text split  length ","text chars  length ","text mb_chars  length ","chars length - ength ","chars options [] - ength ","chars options fetch  ","text splength - it ","text spoptions [] - it "," sanitize  split ","truncate_string length - ength ","truncate_string options [] - ength ","truncate_string options fetch  ","text text split  [] + ","text text chars  [] + ","text text mb_chars  [] + "," sanitize  chars [] + ","text text split  [] ","text text chars  [] ","text text mb_chars  [] "," sanitize  chars [] ","text text split  ","text text chars  ","text text mb_chars  "," sanitize  chars ","text text split  length > ","text text chars  length > ","text text mb_chars  length > ","text chars length - ength > ","text chars options [] - ength > "," sanitize  chars length > ","text chars options fetch  > ","text text split  length ","text text chars  length ","text text mb_chars  length ","text chars length - ength ","text chars options [] - ength "," sanitize  chars length ","text chars options fetch  ","truncate_string text split  length ","truncate_string text chars  length ","truncate_string text mb_chars  length ","truncate_string chars length - ength ","truncate_string chars options [] - ength ","truncate_string chars options fetch  ","truncate_string text split  ","truncate_string text chars  ","truncate_string text mb_chars  ","(if\n  (send\n    (send\n      (send\n        (lvar :text) :text split ) :length) :>\n    (lvar :length))\n  (send\n    (send\n      (send\n        (lvar :text) :text split ) :[]\n      (erange\n        (int 0)\n        (lvar :l))) :+\n    (lvar :truncate_string))\n  (lvar :text)) to_s ","(if\n  (send\n    (send\n      (send\n        (lvar :text) :text chars ) :length) :>\n    (lvar :length))\n  (send\n    (send\n      (send\n        (lvar :text) :text chars ) :[]\n      (erange\n        (int 0)\n        (lvar :l))) :+\n    (lvar :truncate_string))\n  (lvar :text)) to_s ","(if\n  (send\n    (send\n      (send\n        (lvar :text) :text mb_chars ) :length) :>\n    (lvar :length))\n  (send\n    (send\n      (send\n        (lvar :text) :text mb_chars ) :[]\n      (erange\n        (int 0)\n        (lvar :l))) :+\n    (lvar :truncate_string))\n  (lvar :text)) to_s ","(if\n  (send\n    (send\n      (send\n        (length - var :text) :chars) :length - ength) :>\n    (length - var :length - ength))\n  (send\n    (send\n      (send\n        (length - var :text) :chars) :[]\n      (erange\n        (int 0)\n        (length - var :length - ))) :+\n    (length - var :truncate_string))\n  (length - var :text)) to_s ","(if\n  (send\n    (send\n      (send\n        (options [] - var :text) :chars) :options [] - ength) :>\n    (options [] - var :options [] - ength))\n  (send\n    (send\n      (send\n        (options [] - var :text) :chars) :[]\n      (erange\n        (int 0)\n        (options [] - var :options [] - ))) :+\n    (options [] - var :truncate_string))\n  (options [] - var :text)) to_s ","(if\n  (send\n    (send\n      (send\n        (lvar : sanitize ) :chars) :length) :>\n    (lvar :length))\n  (send\n    (send\n      (send\n        (lvar : sanitize ) :chars) :[]\n      (erange\n        (int 0)\n        (lvar :l))) :+\n    (lvar :truncate_string))\n  (lvar : sanitize )) to_s ","(if\n  (send\n    (send\n      (send\n        (lvar :text) :chars) :options fetch ) :>\n    (lvar :options fetch ))\n  (send\n    (send\n      (send\n        (lvar :text) :chars) :[]\n      (erange\n        (int 0)\n        (lvar :l))) :+\n    (lvar :truncate_string))\n  (lvar :text)) to_s ","(if\n  (send\n    (send\n      (length - var :text) :length - ength) :>\n    (length - var :length - ength))\n  (send\n    (send\n      (length - var :text) :[]\n      (erange\n        (int 0)\n        (length - var :length - ))) :+\n    (length - var :truncate_string))\n  (length - var :text)) to_s ","(if\n  (send\n    (send\n      (options [] - var :text) :options [] - ength) :>\n    (options [] - var :options [] - ength))\n  (send\n    (send\n      (options [] - var :text) :[]\n      (erange\n        (int 0)\n        (options [] - var :options [] - ))) :+\n    (options [] - var :truncate_string))\n  (options [] - var :text)) to_s ","(if\n  (send\n    (send\n      (lvar : sanitize ) :length) :>\n    (lvar :length))\n  (send\n    (send\n      (lvar : sanitize ) :[]\n      (erange\n        (int 0)\n        (lvar :l))) :+\n    (lvar :truncate_string))\n  (lvar : sanitize )) to_s ","(if\n  (send\n    (send\n      (lvar :text) :options fetch ) :>\n    (lvar :options fetch ))\n  (send\n    (send\n      (lvar :text) :[]\n      (erange\n        (int 0)\n        (lvar :l))) :+\n    (lvar :truncate_string))\n  (lvar :text)) to_s ","(if\n  (send\n    (send\n      (lvar :text split ) :length) :>\n    (lvar :length))\n  (send\n    (send\n      (lvar :text split ) :[]\n      (erange\n        (int 0)\n        (lvar :l))) :+\n    (lvar :truncate_string))\n  (lvar :text)) to_s ","(if\n  (send\n    (send\n      (lvar :text chars ) :length) :>\n    (lvar :length))\n  (send\n    (send\n      (lvar :text chars ) :[]\n      (erange\n        (int 0)\n        (lvar :l))) :+\n    (lvar :truncate_string))\n  (lvar :text)) to_s ","(if\n  (send\n    (send\n      (lvar :text mb_chars ) :length) :>\n    (lvar :length))\n  (send\n    (send\n      (lvar :text mb_chars ) :[]\n      (erange\n        (int 0)\n        (lvar :l))) :+\n    (lvar :truncate_string))\n  (lvar :text)) to_s ","(if\n  (send\n    (send\n      (length - var :chars) :length - ength) :>\n    (length - var :length - ength))\n  (send\n    (send\n      (length - var :chars) :[]\n      (erange\n        (int 0)\n        (length - var :length - ))) :+\n    (length - var :truncate_string))\n  (length - var :text)) to_s ","(if\n  (send\n    (send\n      (options [] - var :chars) :options [] - ength) :>\n    (options [] - var :options [] - ength))\n  (send\n    (send\n      (options [] - var :chars) :[]\n      (erange\n        (int 0)\n        (options [] - var :options [] - ))) :+\n    (options [] - var :truncate_string))\n  (options [] - var :text)) to_s ","(if\n  (send\n    (send\n      (lvar :chars) :length) :>\n    (lvar :length))\n  (send\n    (send\n      (lvar :chars) :[]\n      (erange\n        (int 0)\n        (lvar :l))) :+\n    (lvar :truncate_string))\n  (lvar : sanitize )) to_s ","(if\n  (send\n    (send\n      (lvar :chars) :options fetch ) :>\n    (lvar :options fetch ))\n  (send\n    (send\n      (lvar :chars) :[]\n      (erange\n        (int 0)\n        (lvar :l))) :+\n    (lvar :truncate_string))\n  (lvar :text)) to_s ","text split  [] + ","text chars  [] + ","text mb_chars  [] + ","(if\n  (send\n    (send\n      (lvar :text split ) :length) :>\n    (send\n      (lvar :options) :[]\n      (sym :length)))\n  (send\n    (send\n      (lvar :text split ) :[]\n      (erange\n        (int 0)\n        (lvar :l))) :+\n    (send\n      (lvar :options) :[]\n      (sym :omission)))\n  (lvar :text)) to_s ","(if\n  (send\n    (send\n      (lvar :text chars ) :length) :>\n    (send\n      (lvar :options) :[]\n      (sym :length)))\n  (send\n    (send\n      (lvar :text chars ) :[]\n      (erange\n        (int 0)\n        (lvar :l))) :+\n    (send\n      (lvar :options) :[]\n      (sym :omission)))\n  (lvar :text)) to_s ","(if\n  (send\n    (send\n      (lvar :text mb_chars ) :length) :>\n    (send\n      (lvar :options) :[]\n      (sym :length)))\n  (send\n    (send\n      (lvar :text mb_chars ) :[]\n      (erange\n        (int 0)\n        (lvar :l))) :+\n    (send\n      (lvar :options) :[]\n      (sym :omission)))\n  (lvar :text)) to_s ","(if\n  (send\n    (send\n      (length - var :chars) :length - ength) :>\n    (send\n      (length - var :options) :[]\n      (sym :length - ength)))\n  (send\n    (send\n      (length - var :chars) :[]\n      (erange\n        (int 0)\n        (length - var :length - ))) :+\n    (send\n      (length - var :options) :[]\n      (sym :omission)))\n  (length - var :text)) to_s ","(if\n  (send\n    (send\n      (options [] - var :chars) :options [] - ength) :>\n    (send\n      (options [] - var :options) :[]\n      (sym :options [] - ength)))\n  (send\n    (send\n      (options [] - var :chars) :[]\n      (erange\n        (int 0)\n        (options [] - var :options [] - ))) :+\n    (send\n      (options [] - var :options) :[]\n      (sym :omission)))\n  (options [] - var :text)) to_s ","(if\n  (send\n    (send\n      (lvar :chars) :length) :>\n    (send\n      (lvar :args extract_options! ) :[]\n      (sym :length)))\n  (send\n    (send\n      (lvar :chars) :[]\n      (erange\n        (int 0)\n        (lvar :l))) :+\n    (send\n      (lvar :args extract_options! ) :[]\n      (sym :omission)))\n  (lvar :text)) to_s ","(if\n  (send\n    (send\n      (lvar :chars) :length) :>\n    (send\n      (lvar :options) :[]\n      (sym :length)))\n  (send\n    (send\n      (lvar :chars) :[]\n      (erange\n        (int 0)\n        (lvar :l))) :+\n    (send\n      (lvar :options) :[]\n      (sym :omission)))\n  (lvar : sanitize )) to_s ","(if\n  (send\n    (send\n      (lvar :chars) :options fetch ) :>\n    (send\n      (lvar :options) :[]\n      (sym :options fetch )))\n  (send\n    (send\n      (lvar :chars) :[]\n      (erange\n        (int 0)\n        (lvar :l))) :+\n    (send\n      (lvar :options) :[]\n      (sym :omission)))\n  (lvar :text)) to_s ","args extract_options!  [] ","text mb_text split  ","text mb_text chars  ","text mb_text mb_chars  "," sanitize  mb_chars ","args extract_options!  [] - ","options [] mb_text split  length ","options [] mb_text chars  length ","options [] mb_text mb_chars  length ","options [] mb_chars length - ength ","options [] mb_chars options [] - ength ","args extract_options!  [] mb_chars length ","options [] mb_chars options fetch  ","options [] mb_text split  ","options [] mb_text chars  ","options [] mb_text mb_chars  ","args extract_options!  [] mb_chars ","args extract_options!  reverse_merge! ","args extract_options!  []= "," calength - length - er "," caoptions [] - options [] - er ","args extract_args extract_options! ! "," sanitize  truncate ","options delength - ete ","options deoptions [] - ete ","args extract_options!  delete ","(if\n  (send\n    (send\n      (lvar :text split ) :length) :>\n    (send\n      (lvar :options) :[]\n      (sym :length)))\n  (send\n    (send\n      (lvar :text split ) :[]\n      (erange\n        (int 0)\n        (lvar :stop))) :+\n    (send\n      (lvar :options) :[]\n      (sym :omission)))\n  (lvar :text)) to_s ","(if\n  (send\n    (send\n      (lvar :text chars ) :length) :>\n    (send\n      (lvar :options) :[]\n      (sym :length)))\n  (send\n    (send\n      (lvar :text chars ) :[]\n      (erange\n        (int 0)\n        (lvar :stop))) :+\n    (send\n      (lvar :options) :[]\n      (sym :omission)))\n  (lvar :text)) to_s ","(if\n  (send\n    (send\n      (lvar :text mb_chars ) :length) :>\n    (send\n      (lvar :options) :[]\n      (sym :length)))\n  (send\n    (send\n      (lvar :text mb_chars ) :[]\n      (erange\n        (int 0)\n        (lvar :stop))) :+\n    (send\n      (lvar :options) :[]\n      (sym :omission)))\n  (lvar :text)) to_s ","(if\n  (send\n    (send\n      (length - var :chars) :length - ength) :>\n    (send\n      (length - var :options) :[]\n      (sym :length - ength)))\n  (send\n    (send\n      (length - var :chars) :[]\n      (erange\n        (int 0)\n        (length - var :stop))) :+\n    (send\n      (length - var :options) :[]\n      (sym :omission)))\n  (length - var :text)) to_s ","(if\n  (send\n    (send\n      (options [] - var :chars) :options [] - ength) :>\n    (send\n      (options [] - var :options) :[]\n      (sym :options [] - ength)))\n  (send\n    (send\n      (options [] - var :chars) :[]\n      (erange\n        (int 0)\n        (options [] - var :stop))) :+\n    (send\n      (options [] - var :options) :[]\n      (sym :omission)))\n  (options [] - var :text)) to_s ","(if\n  (send\n    (send\n      (lvar :chars) :length) :>\n    (send\n      (lvar :args extract_options! ) :[]\n      (sym :length)))\n  (send\n    (send\n      (lvar :chars) :[]\n      (erange\n        (int 0)\n        (lvar :stop))) :+\n    (send\n      (lvar :args extract_options! ) :[]\n      (sym :omission)))\n  (lvar :text)) to_s ","(if\n  (send\n    (send\n      (lvar :chars) :length) :>\n    (send\n      (lvar :options) :[]\n      (sym :length)))\n  (send\n    (send\n      (lvar :chars) :[]\n      (erange\n        (int 0)\n        (lvar :stop))) :+\n    (send\n      (lvar :options) :[]\n      (sym :omission)))\n  (lvar : sanitize )) to_s ","(if\n  (send\n    (send\n      (lvar :chars) :options fetch ) :>\n    (send\n      (lvar :options) :[]\n      (sym :options fetch )))\n  (send\n    (send\n      (lvar :chars) :[]\n      (erange\n        (int 0)\n        (lvar :stop))) :+\n    (send\n      (lvar :options) :[]\n      (sym :omission)))\n  (lvar :text)) to_s ","text split  rindex ","text chars  rindex ","text mb_chars  rindex ","text htmlength - _safe? ","text htmoptions [] - _safe? "," sanitize  html_safe? ","ERB Util  html_escape  << ","content html_safe  << ","text truncate  << "," blength - ock_given? "," boptions [] - ock_given? ","ERB Utilength -   htmlength - _escape ","ERB Utioptions [] -   htmoptions [] - _escape ","content htmlength - _safe ","content htmoptions [] - _safe ","ERB Util  html_escape  html_safe ","content html_safe  html_safe ","text truncate  html_safe ","args extract_options!  [] == ","args extract_options!  fetch "]}," ActionView Helpers TextHelper concat":{"type":"method","name":"concat","children":[],"call":[" eval concat "," eval "," eval << ","ActionView Base  erb_variable "," output_buffer << "," output_buffer ","ActiveSupport Deprecation  warn "," caller "," output_buffer safe_concat "]}," ActionView Helpers TagHelper tag_options":{"type":"method","name":"tag_options","children":[],"call":["  + ","(send\n  (lvar :options) :collect) sort join ","(send\n  (lvar :options) :collect) sort "," html_escape ","pair last ","pair first ","options collect ","options empty? ","(send\n  (lvar :options) :map) sort join ","(send\n  (lvar :options) :map) sort ","options map ","(send\n  (lvar :cleaned_options) :map) sort * ","(send\n  (lvar :cleaned_options) :map) sort ","value to_s ","cleaned_options map ","cleaned_options empty? "," convert_booleans ","value nil? ","options stringify_keys reject ","options stringify_keys "," escape_once ","options symbolize_keys ","(send\n  (send\n    (lvar :options) :symbolize_keys) :map) sort join ","(send\n  (send\n    (lvar :options) :symbolize_keys) :map) sort ","options symbolize_keys map ","(send\n  (send\n    (lvar :cleaned_options) :symbolize_keys) :map) sort join ","(send\n  (send\n    (lvar :cleaned_options) :symbolize_keys) :map) sort ","cleaned_options symbolize_keys map ","cleaned_options symbolize_keys ","options reject ","attrs sort * ","attrs sort ","attrs empty? ","attrs << ","BOOLEAN_ATTRIBUTES  include? ","key to_s ","options each ","options blank? ","value nil? ! ","options each_pair ","(str \" \") html_safe ","(str \" \") html_safe! ","value join ","value is_a? ","ERB Util  html_escape ","k to_s dasherize ","k to_s ","v to_json ","v is_a? ! ","v is_a? ","value each ","key to_s == "," tag_option "," boolean_tag_option "," data_tag_option ","value each_pair ","(send\n  (lERB Util  html_escape ar :options) :collect) sort join ","(send\n  (lv to_json ar :options) :collect) sort join ","(send\n  (lERB Util  html_escape ar :options) :collect) sort ","(send\n  (lv to_json ar :options) :collect) sort ","(send\n  (lERB Util  html_escape ar :options) :map) sort join ","(send\n  (lv to_json ar :options) :map) sort join ","(send\n  (lERB Util  html_escape ar :options) :map) sort ","(send\n  (lv to_json ar :options) :map) sort ","(send\n  (lvar : convert_booleans ) :map) sort * ","(send\n  (lERB Util  html_escape ar :cleaned_options) :map) sort * ","(send\n  (lv to_json ar :cleaned_options) :map) sort * ","(send\n  (lvar : convert_booleans ) :map) sort ","(send\n  (lERB Util  html_escape ar :cleaned_options) :map) sort ","(send\n  (lv to_json ar :cleaned_options) :map) sort "," escape_once  to_s ","ERB Util  html_escape alue to_s ","v to_json alue to_s "," convert_booleans  map "," convert_booleans  empty? "," conERB Util  html_escape ert_booleans "," conv to_json ert_booleans "," escape_once  nil? ","ERB Util  html_escape alue nil? ","v to_json alue nil? ","options stringify_key to_s s reject ","options stringify_key to_s s ","options symbolize_key to_s s ","(send\n  (send\n    (lvar :options) :symbolize_key to_s s) :map) sort join ","(send\n  (send\n    (lERB Util  html_escape ar :options) :symbolize_keys) :map) sort join ","(send\n  (send\n    (lv to_json ar :options) :symbolize_keys) :map) sort join ","(send\n  (send\n    (lvar :options) :symbolize_key to_s s) :map) sort ","(send\n  (send\n    (lERB Util  html_escape ar :options) :symbolize_keys) :map) sort ","(send\n  (send\n    (lv to_json ar :options) :symbolize_keys) :map) sort ","options symbolize_key to_s s map ","(send\n  (send\n    (lvar : convert_booleans ) :symbolize_keys) :map) sort join ","(send\n  (send\n    (lvar :cleaned_options) :symbolize_key to_s s) :map) sort join ","(send\n  (send\n    (lERB Util  html_escape ar :cleaned_options) :symbolize_keys) :map) sort join ","(send\n  (send\n    (lv to_json ar :cleaned_options) :symbolize_keys) :map) sort join ","(send\n  (send\n    (lvar : convert_booleans ) :symbolize_keys) :map) sort ","(send\n  (send\n    (lvar :cleaned_options) :symbolize_key to_s s) :map) sort ","(send\n  (send\n    (lERB Util  html_escape ar :cleaned_options) :symbolize_keys) :map) sort ","(send\n  (send\n    (lv to_json ar :cleaned_options) :symbolize_keys) :map) sort "," convert_booleans  symbolize_keys map ","cleaned_options symbolize_key to_s s map "," convert_booleans  symbolize_keys ","cleaned_options symbolize_key to_s s ","key to_s  to_s "," escape_once  nil? ! ","ERB Util  html_escape alue nil? ! ","v to_json alue nil? ! "," escape_once  join ","ERB Util  html_escape alue join ","v to_json alue join "," escape_once  is_a? ","ERB Util  html_escape alue is_a? ","v to_json alue is_a? ","ERB Util  html_escape  to_json ","v to_json  to_json ","ERB Util  html_escape  is_a? ! ","v to_json  is_a? ! ","ERB Util  html_escape  is_a? ","v to_json  is_a? "," escape_once  each ","ERB Util  html_escape alue each ","v to_json alue each ","key to_s  to_s == "," escape_once  each_pair ","ERB Util  html_escape alue each_pair ","v to_json alue each_pair "]}," ActionView Helpers TagHelper end_form_tag":{"type":"method","name":"end_form_tag","children":[],"call":[]}," ActionView Helpers TagHelper form_tag":{"type":"method","name":"form_tag","children":[],"call":[" tag ","html_options []= "," url_for ","html_options delete ","html_options [] ","(pair\n  (str \"method\")\n  (str \"POST\")) merge ","(pair\n  (str \"method\")\n  (str \"post\")) merge ","(pair\n  (str \"method\")\n  (str \"POST\")) merge  []= ","(pair\n  (str \"method\")\n  (str \"post\")) merge  []= ","(pair\n  (str \"method\")\n  (str \"POST\")) merge  delete ","(pair\n  (str \"method\")\n  (str \"post\")) merge  delete ","(pair\n  (str \"method\")\n  (str \"POST\")) merge  [] ","(pair\n  (str \"method\")\n  (str \"post\")) merge  [] "]}," ActionView Helpers TagHelper content_tag":{"type":"method","name":"content_tag","children":[],"call":["name + "," tag_options ","options stringify_keys "," content_tag_string "," concat ","block binding "," capture ","content_or_options_with_block is_a? "," block_given? "," block_is_within_action_view? "," block_called_from_erb? ","  capture _tag_string ","  content_tag_string _string "," capture _or_options_with_block is_a? "]}," ActionView Helpers TagHelper tag":{"type":"method","name":"tag","children":[],"call":["(str \"<\") + ","name + "," tag_options ","options stringify_keys ","(str \"<\") html_safe ","(str \"<\") html_safe! "]}," ActionView Helpers InstanceTag add_blank_option":{"type":"method","name":"add_blank_option","children":[],"call":["<option></option>\n + ","<option value=\"\"></option>\n + "]}," ActionView Helpers InstanceTag to_country_select_tag":{"type":"method","name":"to_country_select_tag","children":[],"call":[" content_tag "," add_blank_option ","options [] "," country_options_for_select "," value "," add_default_name_and_id "," add_options ","html_options stringify_keys "," object ","ActiveSupport Deprecation  warn "," caller ","  value  ","html_options stringify_keys  stringify_keys "]}," ActionView Helpers InstanceTag to_collection_select_tag":{"type":"method","name":"to_collection_select_tag","children":[],"call":[" content_tag "," add_blank_option ","options [] "," options_from_collection_for_select "," value "," add_default_name_and_id "," add_options ","html_options stringify_keys "," object ","options has_key? "," select_content_tag ","  value  ","html_options stringify_keys  stringify_keys "]}," ActionView Helpers InstanceTag to_select_tag":{"type":"method","name":"to_select_tag","children":[],"call":[" content_tag "," add_blank_option ","options [] "," options_for_select "," value "," add_default_name_and_id "," add_options ","html_options stringify_keys ","options has_key? "," object "," select_content_tag "," grouped_options_for_select ","Array  === ","choices first last ","choices first ","choices first respond_to? ","choices empty? ! ","choices empty? ","choices to_a ","choices is_a? ","  value  ","html_options stringify_keys  stringify_keys ","choices to_a  first last ","choices to_a  first ","choices to_a  first respond_to? ","choices to_a  empty? ! ","choices to_a  empty? ","choices to_a  to_a ","choices to_a  is_a? "]}," ActionView Helpers FormOptionsHelper country_options_for_select":{"type":"method","name":"country_options_for_select","children":[],"call":[" options_for_select ","COUNTRIES  - ","priority_countries include? ","country_options + "]}," ActionView Helpers FormOptionsHelper option_groups_from_collection_for_select":{"type":"method","name":"option_groups_from_collection_for_select","children":[],"call":[" options_from_collection_for_select "," eval "," html_escape ","collection inject ","(send\n  (lvar :collection) :inject\n  (str \"\")) html_safe ","(send\n  (lvar :collection) :map) join html_safe ","(send\n  (lvar :collection) :map) join ","(str \"<optgroup label=\\\"\") + + ","(str \"<optgroup label=\\\"\") + ","collection map ","ERB Util  html_escape "," content_tag ","group send "]}," ActionView Helpers FormOptionsHelper options_from_collection_for_select":{"type":"method","name":"options_from_collection_for_select","children":[],"call":[" options_for_select ","options << ","object send ","collection inject ","element send ","collection map ","select_deselect []= "," extract_values_from_collection "," extract_selected_and_disabled "," option_html_attributes "," value_for_collection "]}," ActionView Helpers FormOptionsHelper options_for_select":{"type":"method","name":"options_for_select","children":[],"call":["options_for_select join ","options << "," html_escape ","element to_s ","element == ","selected include? ","selected respond_to? ","element first to_s ","element first ","element last to_s ","element last ","element last == ","element respond_to? ","container inject ","container to_a ","Hash  === ","selected is_a? ! ","selected is_a? ","element is_a? ","element is_a? ! ","text to_s ","value to_s "," option_value_selected? "," option_text_and_value ","options_for_select join html_safe "," extract_selected_and_disabled ","String  === ","options_for_select join html_safe! ","(send\n  (lvar :container) :map) join html_safe ","(send\n  (lvar :container) :map) join "," option_text_and_value map "," option_html_attributes ","container map ","Array  wrap map ","Array  wrap "," extract_selected_and_disabled map ","item to_s ","ERB Util  html_escape "," content_tag_string ","html_attributes []= "," Array map "," Array ","html_attributes [] ","container to_a  inject ","container to_a  to_a ","(send\n  (lvar :container to_a ) :map) join html_safe ","(send\n  (lvar :container to_a ) :map) join "," option_ option_html_attributes  ","container to_a  map "," option_html_attributes  []= "," option_html_attributes  [] "]}," ActionView Helpers FormOptionsHelper country_select":{"type":"method","name":"country_select","children":[],"call":["InstanceTag  new to_country_select_tag ","InstanceTag  new ","options delete "]}," ActionView Helpers FormOptionsHelper collection_select":{"type":"method","name":"collection_select","children":[],"call":["InstanceTag  new to_collection_select_tag ","InstanceTag  new ","options delete ","Tags CollectionSelect  new render ","Tags CollectionSelect  new "]}," ActionView Helpers FormOptionsHelper select":{"type":"method","name":"select","children":[],"call":["InstanceTag  new to_select_tag ","InstanceTag  new ","options delete ","Tags Select  new render ","Tags Select  new "]}," ActionView Helpers InstanceTag tag_id":{"type":"method","name":"tag_id","children":[],"call":[" sanitized_object_name "," sanitized_method_name "]}," ActionView Helpers InstanceTag tag_name":{"type":"method","name":"tag_name","children":[],"call":[" sanitized_method_name "]}," ActionView Helpers InstanceTag add_default_name_and_id":{"type":"method","name":"add_default_name_and_id","children":[],"call":["options []= "," tag_id ","options has_key? "," tag_name ","options [] "," tag_id_with_index "," tag_name_with_index ","options delete "," tag_name + ","options fetch ","(send\n  (lvar :options) :delete\n  (str \"namespace\")) compact join presence ","(send\n  (lvar :options) :delete\n  (str \"namespace\")) compact join ","(send\n  (lvar :options) :delete\n  (str \"namespace\")) compact ","options [] ends_with? ! ","options [] ends_with? "]}," ActionView Helpers InstanceTag value":{"type":"method","name":"value","children":[],"call":[" object send "," object "," object nil? ","object send ","object nil? "," class value "," class "]}," ActionView Helpers InstanceTag object":{"type":"method","name":"object","children":[],"call":["@template_object instance_variable_get "]}," ActionView Helpers InstanceTag to_boolean_select_tag":{"type":"method","name":"to_boolean_select_tag","children":[],"call":["tag_text << "," value "," value == "," tag_options "," add_default_name_and_id ","options stringify_keys ","value == "," object ","  value  ","  value  == "," tag_options stringify_keys  ","options stringify_keys  stringify_keys "," value  == "]}," ActionView Helpers InstanceTag to_date_tag":{"type":"method","name":"to_date_tag","children":[],"call":[" html_day_select + + "," html_year_select ","options call "," html_day_select + "," html_month_select "," html_day_select ","defaults update ","Proc  new ","Date  today "," value ","defaults merge ","DEFAULT_DATE_OPTIONS  dup "," object ","DEFAULT_DATE_OPTIONS  dup  update ","DEFAULT_DATE_OPTIONS  dup  merge "]}," ActionView Helpers InstanceTag to_check_box_tag":{"type":"method","name":"to_check_box_tag","children":[],"call":[" tag "," add_default_name_and_id ","options merge! "," value to_i > "," value to_i "," value "," value is_a? "," value nil? ! "," value nil? "," tag << ","options [] ","options delete ","options []= ","options [] == "," value to_i != "," value == "," value != ","options stringify_keys "," class check_box_checked? "," object "," class ","cv == ","options has_key? ","(send\n  (lvar :hidden) :+\n  (lvar :checkbox)) html_safe ","hidden + ","(send\n  (lvar :hidden) :+\n  (lvar :checkbox)) html_safe! "," add_default_name_and_id_for_value ","options stringify_keys  merge! ","options stringify_keys  [] ","options stringify_keys  delete ","options stringify_keys  []= ","options stringify_keys  [] == ","options stringify_keys  stringify_keys "," class check_box_ class check_box_checked? ? ","options delete  == ","options stringify_keys  has_key? ","(send\n  (lvar :hidden) :+\n  (lvar : tag )) html_safe ","(send\n  (lvar : tag ) :+\n  (lvar :checkbox)) html_safe "," tag  + ","(send\n  (lvar :hidden) :+\n  (lvar : tag )) html_safe! ","(send\n  (lvar : tag ) :+\n  (lvar :checkbox)) html_safe! "]}," ActionView Helpers InstanceTag to_text_area_tag":{"type":"method","name":"to_text_area_tag","children":[],"call":[" content_tag "," html_escape "," value "," add_default_name_and_id ","DEFAULT_TEXT_AREA_OPTIONS  merge "," value_before_type_cast ","options stringify_keys ","options delete "," object ","size split ","options []= ","size respond_to? ","ERB Util  html_escape ","DEFAULT_TEXT_AREA_OPTIONS  merge  stringify_keys ","DEFAULT_TEXT_AREA_OPTIONS  merge  delete ","options delete  split ","DEFAULT_TEXT_AREA_OPTIONS  merge  []= ","options delete  respond_to? "]}," ActionView Helpers InstanceTag to_input_field_tag":{"type":"method","name":"to_input_field_tag","children":[],"call":[" tag "," add_default_name_and_id ","html_options merge! "," value to_s "," value ","options [] ","options [] ! ","DEFAULT_FIELD_OPTIONS  merge ","html_options delete ","field_type == "," value_before_type_cast ","options []= ","options delete ","DEFAULT_FIELD_OPTIONS  [] ","options stringify_keys "," object ","field_type != ","options [] nil? ","options key? "," html_escape ","ERB Util  html_escape ","options fetch ","DEFAULT_FIELD_OPTIONS  merge  merge! ","html_DEFAULT_FIELD_OPTIONS  merge  merge! ","html_options stringify_keys  merge! ","DEFAULT_FIELD_OPTIONS  merge  [] ","options stringify_keys  [] ","DEFAULT_FIELD_OPTIONS  merge  [] ! ","options stringify_keys  [] ! ","DEFAULT_FIELD_OPTIONS  merge  delete ","html_DEFAULT_FIELD_OPTIONS  merge  delete ","html_options stringify_keys  delete ","DEFAULT_FIELD_OPTIONS  merge  []= ","options stringify_keys  []= ","options stringify_keys  delete ","DEFAULT_FIELD_OPTIONS  merge  stringify_keys ","options stringify_keys  stringify_keys ","DEFAULT_FIELD_OPTIONS  merge  [] nil? ","options stringify_keys  [] nil? ","DEFAULT_FIELD_OPTIONS  merge  key? ","options stringify_keys  key? ","DEFAULT_FIELD_OPTIONS  merge  fetch ","options stringify_keys  fetch "]}," ActionView Helpers InstanceTag initialize":{"type":"method","name":"initialize","children":[],"call":["@template_object instance_variable_get id_before_type_cast ","@template_object instance_variable_get ","Regexp  last_match pre_match ","Regexp  last_match ","@object_name sub! ","method_name to_s ","object_name to_s ","method_name to_s dup ","object_name to_s dup "," raise ","object inspect ","object id_before_type_cast ","object respond_to? ","@template_object instance_variable_get id ","object to_param "," retrieve_autoindex "," retrieve_object "," retrieve_object _name sub! "]}," ActionView Helpers FormHelper check_box":{"type":"method","name":"check_box","children":[],"call":["InstanceTag  new to_check_box_tag ","InstanceTag  new ","options delete ","Tags CheckBox  new render ","Tags CheckBox  new "]}," ActionView Helpers FormHelper text_area":{"type":"method","name":"text_area","children":[],"call":["InstanceTag  new to_text_area_tag ","InstanceTag  new ","options delete ","Tags TextArea  new render ","Tags TextArea  new "]}," ActionView Helpers FormHelper hidden_field":{"type":"method","name":"hidden_field","children":[],"call":["InstanceTag  new to_input_field_tag ","InstanceTag  new ","options delete ","Tags HiddenField  new render ","Tags HiddenField  new "]}," ActionView Helpers FormHelper password_field":{"type":"method","name":"password_field","children":[],"call":["InstanceTag  new to_input_field_tag ","InstanceTag  new ","options delete ","(pair\n  (sym :value)\n  (nil)) merge! ","Tags PasswordField  new render ","Tags PasswordField  new "]}," ActionView Helpers FormHelper text_field":{"type":"method","name":"text_field","children":[],"call":["InstanceTag  new to_input_field_tag ","InstanceTag  new ","options delete ","Tags TextField  new render ","Tags TextField  new "]}," ActionView Helpers DebugHelper debug":{"type":"method","name":"debug","children":[],"call":[" h ","object inspect "," h gsub ","object to_yaml ","Marshal  dump ","(str \"<code class='debug_dump'>\") html_safe ","(str \"<pre class='debug_dump'>\") html_safe "," content_tag ","ERB Util  html_escape gsub html_safe ","ERB Util  html_escape gsub ","ERB Util  html_escape ","ERB Util  html_escape gsub html_safe  inspect ","ERB Util  html_escape gsub html_safe  to_yaml "]}," ActionView Helpers InstanceTag to_datetime_select_tag":{"type":"method","name":"to_datetime_select_tag","children":[],"call":["datetime_select << "," :  + "," select_minute ","options_with_prefix call ","options [] "," &mdash;  + "," select_hour "," select_day "," select_month "," select_year ","Time  now "," value ","options update ","Proc  new ","defaults merge "," to_datetime_select_tag_without_error_wrapping "," error_wrapping "," object errors on "," object errors "," object "," object errors respond_to? "," object respond_to? ","options merge "," date_or_time_select "," datetime_selector select_datetime "," datetime_selector "," datetime_selector select_datetime html_safe "," datetime_selector select_datetime html_safe! "," select_year  << ","defaults merge _with_prefix call ","defaults merge  [] ","defaults merge  update "," to_ select_year _tag_without_error_wrapping ","defaults merge  merge ","  select_year or select_datetime ","  select_year or ","  select_year or select_datetime html_safe ","  select_year or select_datetime html_safe! "]}," ActionView Helpers InstanceTag to_date_select_tag":{"type":"method","name":"to_date_select_tag","children":[],"call":["date_select << "," select_day ","options_with_prefix call ","options [] "," select_month "," select_year ","Date  today "," value ","options update ","Proc  new ","defaults merge "," to_date_select_tag_without_error_wrapping "," error_wrapping "," object errors on "," object errors "," object "," object errors respond_to? "," object respond_to? "," send ","position [] ","discard [] ","options [] each ","discard []= ","options []= ","options merge "," date_or_time_select "," datetime_selector select_date "," datetime_selector "," datetime_selector select_date html_safe "," datetime_selector select_date html_safe! ","defaults merge _with_prefix call ","defaults merge  [] ","defaults merge  update ","defaults merge  [] each ","defaults merge  []= ","defaults merge  merge "]}," ActionView Helpers DateHelper leading_zero_on_single_digits":{"type":"method","name":"leading_zero_on_single_digits","children":[],"call":["number > "]}," ActionView Helpers DateHelper select_html":{"type":"method","name":"select_html","children":[],"call":["select_html << ","options to_s ","html_options to_s ","options [] "," name_and_id_from_options "," content_tag + "," content_tag ","select_options merge! ","select_tag_options empty? "]}," ActionView Helpers DateHelper select_year":{"type":"method","name":"select_year","children":[],"call":[" select_html ","options [] ","year_options << ","(if\n  (send\n    (lvar :date) :kind_of?\n    (const nil :Fixnum))\n  (lvar :date)\n  (send\n    (lvar :date) :year)) == ","date year ","date kind_of? ","(or\n  (send\n    (lvar :options) :[]\n    (sym :start_year))\n  (lvar :default_start_year)) upto ","date year + ","date year - ","y + ","y - ","Date  today year ","Date  today ","date == ","start_year step ","start_year < ","val == "," hidden_html ","year_options join "," content_tag ","DateTimeSelector  new select_year ","DateTimeSelector  new ","date year ear_options << ","Date  today year ear_options << ","(if\n  (send\n    (lvar :date) :kind_of?\n    (const nil :Fixnum))\n  (lvar :date)\n  (send\n    (lvar :date) :date year ear)) == ","(if\n  (send\n    (lvar :date) :kind_of?\n    (const nil :Fixnum))\n  (lvar :date)\n  (send\n    (lvar :date) :Date  today year ear)) == ","date date year ear ","date Date  today year ear ","(or\n  (send\n    (lvar :options) :[]\n    (sdate year m :start_date year ear))\n  (lvar :default_start_date year ear)) upto ","(or\n  (send\n    (lvar :options) :[]\n    (sDate  today year m :start_Date  today year ear))\n  (lvar :default_start_Date  today year ear)) upto ","date date year ear + ","date Date  today year ear + ","date date year ear - ","date Date  today year ear - ","date year  + ","Date  today year  + ","date year  - ","Date  today year  - ","Date  todadate year  date year ear ","Date  todaDate  today year  Date  today year ear ","Date  todadate year  ","Date  todaDate  today year  ","start_date year ear step ","start_Date  today year ear step ","start_date year ear < ","start_Date  today year ear < ","date year ear_options join ","Date  today year ear_options join ","DateTimeSelector  new select_date year ear ","DateTimeSelector  new select_Date  today year ear "]}," ActionView Helpers DateHelper select_month":{"type":"method","name":"select_month","children":[],"call":[" select_html ","options [] ","month_options << ","(if\n  (send\n    (lvar :date) :kind_of?\n    (const nil :Fixnum))\n  (lvar :date)\n  (send\n    (lvar :date) :month)) == ","date month ","date kind_of? ","Date MONTHNAMES  [] ","month_number to_s + + ","month_number to_s + ","month_number to_s ","1 upto ","month_names [] ","val == ","month_names unshift ","month_names size < ","month_names size "," hidden_html ","month_options join "," content_tag ","DateTimeSelector  new select_month ","DateTimeSelector  new "]}," ActionView Helpers DateHelper select_day":{"type":"method","name":"select_day","children":[],"call":[" select_html ","options [] ","day_options << ","(if\n  (send\n    (lvar :date) :kind_of?\n    (const nil :Fixnum))\n  (lvar :date)\n  (send\n    (lvar :date) :day)) == ","date day ","date kind_of? ","1 upto ","val == "," hidden_html ","day_options join "," content_tag ","DateTimeSelector  new select_day ","DateTimeSelector  new "]}," ActionView Helpers DateHelper select_hour":{"type":"method","name":"select_hour","children":[],"call":[" select_html ","options [] ","hour_options << "," leading_zero_on_single_digits ","(if\n  (send\n    (lvar :datetime) :kind_of?\n    (const nil :Fixnum))\n  (lvar :datetime)\n  (send\n    (lvar :datetime) :hour)) == ","datetime hour ","datetime kind_of? ","0 upto ","val == "," hidden_html ","hour_options join "," content_tag ","DateTimeSelector  new select_hour ","DateTimeSelector  new "]}," ActionView Helpers DateHelper select_minute":{"type":"method","name":"select_minute","children":[],"call":[" select_html ","options [] ","minute_options << "," leading_zero_on_single_digits ","(if\n  (send\n    (lvar :datetime) :kind_of?\n    (const nil :Fixnum))\n  (lvar :datetime)\n  (send\n    (lvar :datetime) :min)) == ","datetime min ","datetime kind_of? ","0 upto ","0 step ","val == "," hidden_html ","minute_options join "," content_tag ","DateTimeSelector  new select_minute ","DateTimeSelector  new "]}," ActionView Helpers DateHelper select_datetime":{"type":"method","name":"select_datetime","children":[],"call":[" select_year + + + + "," select_minute "," select_year + + + "," select_hour "," select_year + + "," select_day "," select_year + "," select_month "," select_year "," select_date + + "," select_time "," select_date + "," select_date ","options [] ","DateTimeSelector  new select_datetime ","DateTimeSelector  new "]}," ActionView Helpers DateHelper select_date":{"type":"method","name":"select_date","children":[],"call":[" select_year + + "," select_day "," select_year + "," select_month "," select_year ","select_date << "," send ","options [] each ","options [] ","options [] push ","options [] include? ","(sym :year) each ","DateTimeSelector  new select_date ","DateTimeSelector  new "]}," ActionView Helpers DateHelper datetime_select":{"type":"method","name":"datetime_select","children":[],"call":["InstanceTag  new to_datetime_select_tag ","InstanceTag  new ","options delete ","Tags DatetimeSelect  new render ","Tags DatetimeSelect  new "]}," ActionView Helpers DateHelper date_select":{"type":"method","name":"date_select","children":[],"call":["InstanceTag  new to_date_select_tag ","InstanceTag  new ","options delete ","Tags DateSelect  new render ","Tags DateSelect  new "]}," ActionView Helpers DateHelper distance_of_time_in_words":{"type":"method","name":"distance_of_time_in_words","children":[],"call":["(send\n  (lvar :distance_in_minutes) :/\n  (int 1440)) round ","distance_in_minutes / ","(send\n  (send\n    (lvar :distance_in_minutes) :to_f) :/\n  (float 60.0)) round ","distance_in_minutes to_f / ","distance_in_minutes to_f ","(send\n  (begin\n    (send\n      (lvar :to_time) :-\n      (lvar :from_time))) :/\n  (int 60)) round ","(send\n  (lvar :to_time) :-\n  (lvar :from_time)) / ","to_time - ","distance_in_minutes == ","(send\n  (begin\n    (send\n      (lvar :to_time) :-\n      (lvar :from_time))) :abs) round ","(send\n  (lvar :to_time) :-\n  (lvar :from_time)) abs ","(send\n  (begin\n    (send\n      (begin\n        (send\n          (lvar :to_time) :-\n          (lvar :from_time))) :abs)) :/\n  (int 60)) round ","(send\n  (begin\n    (send\n      (lvar :to_time) :-\n      (lvar :from_time))) :abs) / ","to_time to_time ","to_time respond_to? ","from_time to_time ","from_time respond_to? ","(send\n  (lvar :distance_in_minutes) :/\n  (int 525960)) round ","(send\n  (lvar :distance_in_minutes) :/\n  (int 43200)) round ","(begin\n  (send\n    (lvar :to_time) :-\n    (lvar :from_time))) round abs ","(begin\n  (send\n    (lvar :to_time) :-\n    (lvar :from_time))) round ","(send\n  (begin\n    (send\n      (lvar :to_time) :-\n      (lvar :from_time))) :/\n  (int 60)) round abs ","(send\n  (lvar :distance_in_minutes) :/\n  (int 525600)) round ","locale t ","I18n  with_options ","options [] ","distance_in_years + ","remainder < ","(send\n  (lvar :distance_in_minutes) :-\n  (lvar :minute_offset_for_leap_year)) % ","distance_in_minutes - ","(send\n  (lvar :distance_in_years) :/\n  (int 4)) * ","distance_in_years / ","(send\n  (send\n    (lvar :distance_in_minutes) :to_f) :/\n  (float 43200.0)) round ","(send\n  (send\n    (lvar :distance_in_minutes) :to_f) :/\n  (float 1440.0)) round ","minutes_with_offset / ","minutes_with_offset % ","leap_years * ","Date  leap? ","(irange\n  (lvar :fyear)\n  (lvar :tyear)) count ","fyear > ","to_time month < ","to_time month ","to_time year ","from_time month >= ","from_time month ","from_time year ","distance round ","(send\n  (lvar :distance) :/\n  (float 60.0)) round ","distance / ","(send\n  (send\n    (lvar :to_time) :to_f) :-\n  (send\n    (lvar :from_time) :to_f)) abs ","to_time to_f - ","from_time to_f ","to_time to_f ","(pair\n  (sym :scope)\n  (sym :\"datetime.distance_in_words\")) merge! ","minutes_with_offset div ","to_time acts_like? ","from_time acts_like? ","(send\n  (lvar :to_time) :-\n  (lvar :from_time)) round ","(send\n  (begin\n    (send\n      (lvar :to_time) :-\n      (lvar :from_time))) :/\n  (float 60.0)) round ","from_time > ","include_seconds_or_options ! ! ","include_seconds_or_options ! ","ActiveSupport Deprecation  warn ","distance_of_time_in_words and time_ago_in_words now accept :include_seconds  + ","include_seconds_or_options is_a? ","(send\n  (lvar :(send\n  (begin\n    (send\n      (lvar :to_time) :-\n      (lvar :from_time))) :/\n  (int 60)) round ) :/\n  (int 1440)) round ","(send\n  (lvar :(send\n  (begin\n    (send\n      (begin\n        (send\n          (lvar :to_time) :-\n          (lvar :from_time))) :abs)) :/\n  (int 60)) round ) :/\n  (int 1440)) round ","(send\n  (lvar :(send\n  (begin\n    (send\n      (lvar :to_time) :-\n      (lvar :from_time))) :/\n  (int 60)) round abs ) :/\n  (int 1440)) round ","(send\n  (lvar :(send\n  (lvar :distance) :/\n  (float 60.0)) round ) :/\n  (int 1440)) round ","(send\n  (lvar :(send\n  (begin\n    (send\n      (lvar :to_time) :-\n      (lvar :from_time))) :/\n  (float 60.0)) round ) :/\n  (int 1440)) round ","(send\n  (lvar :(send\n  (send\n    (lvar :to_time) :to_f) :-\n  (send\n    (lvar :from_time) :to_f)) abs _in_minutes) :/\n  (int 1440)) round ","(send\n  (begin\n    (send\n      (lvar :to_time) :-\n      (lvar :from_time))) :/\n  (int 60)) round  / ","(send\n  (begin\n    (send\n      (begin\n        (send\n          (lvar :to_time) :-\n          (lvar :from_time))) :abs)) :/\n  (int 60)) round  / ","(send\n  (begin\n    (send\n      (lvar :to_time) :-\n      (lvar :from_time))) :/\n  (int 60)) round abs  / ","(send\n  (lvar :distance) :/\n  (float 60.0)) round  / ","(send\n  (begin\n    (send\n      (lvar :to_time) :-\n      (lvar :from_time))) :/\n  (float 60.0)) round  / ","(send\n  (send\n    (lvar :to_time) :to_f) :-\n  (send\n    (lvar :from_time) :to_f)) abs _in_minutes / ","(send\n  (send\n    (lvar :(send\n  (begin\n    (send\n      (lvar :to_time) :-\n      (lvar :from_time))) :/\n  (int 60)) round ) :to_f) :/\n  (float 60.0)) round ","(send\n  (send\n    (lvar :(send\n  (begin\n    (send\n      (begin\n        (send\n          (lvar :to_time) :-\n          (lvar :from_time))) :abs)) :/\n  (int 60)) round ) :to_f) :/\n  (float 60.0)) round ","(send\n  (send\n    (lvar :(send\n  (begin\n    (send\n      (lvar :to_time) :-\n      (lvar :from_time))) :/\n  (int 60)) round abs ) :to_f) :/\n  (float 60.0)) round ","(send\n  (send\n    (lvar :(send\n  (lvar :distance) :/\n  (float 60.0)) round ) :to_f) :/\n  (float 60.0)) round ","(send\n  (send\n    (lvar :(send\n  (begin\n    (send\n      (lvar :to_time) :-\n      (lvar :from_time))) :/\n  (float 60.0)) round ) :to_f) :/\n  (float 60.0)) round ","(send\n  (send\n    (lvar :(send\n  (send\n    (lvar :to_time) :to_f) :-\n  (send\n    (lvar :from_time) :to_f)) abs _in_minutes) :to_f) :/\n  (float 60.0)) round ","(send\n  (begin\n    (send\n      (lvar :to_time) :-\n      (lvar :from_time))) :/\n  (int 60)) round  to_f / ","(send\n  (begin\n    (send\n      (begin\n        (send\n          (lvar :to_time) :-\n          (lvar :from_time))) :abs)) :/\n  (int 60)) round  to_f / ","(send\n  (begin\n    (send\n      (lvar :to_time) :-\n      (lvar :from_time))) :/\n  (int 60)) round abs  to_f / ","(send\n  (lvar :distance) :/\n  (float 60.0)) round  to_f / ","(send\n  (begin\n    (send\n      (lvar :to_time) :-\n      (lvar :from_time))) :/\n  (float 60.0)) round  to_f / ","(send\n  (send\n    (lvar :to_time) :to_f) :-\n  (send\n    (lvar :from_time) :to_f)) abs _in_minutes to_f / ","(send\n  (begin\n    (send\n      (lvar :to_time) :-\n      (lvar :from_time))) :/\n  (int 60)) round  to_f ","(send\n  (begin\n    (send\n      (begin\n        (send\n          (lvar :to_time) :-\n          (lvar :from_time))) :abs)) :/\n  (int 60)) round  to_f ","(send\n  (begin\n    (send\n      (lvar :to_time) :-\n      (lvar :from_time))) :/\n  (int 60)) round abs  to_f ","(send\n  (lvar :distance) :/\n  (float 60.0)) round  to_f ","(send\n  (begin\n    (send\n      (lvar :to_time) :-\n      (lvar :from_time))) :/\n  (float 60.0)) round  to_f ","(send\n  (send\n    (lvar :to_time) :to_f) :-\n  (send\n    (lvar :from_time) :to_f)) abs _in_minutes to_f ","(send\n  (begin\n    (send\n      (lvar :to_time to_time ) :-\n      (lvar :from_time))) :/\n  (int 60)) round ","(send\n  (begin\n    (send\n      (lvar :to_time) :-\n      (lvar :from_time to_time ))) :/\n  (int 60)) round ","(send\n  (lvar :to_time to_time ) :-\n  (lvar :from_time)) / ","(send\n  (lvar :to_time) :-\n  (lvar :from_time to_time )) / ","to_time to_time  - ","(send\n  (begin\n    (send\n      (lvar :to_time) :-\n      (lvar :from_time))) :/\n  (int 60)) round  == ","(send\n  (begin\n    (send\n      (begin\n        (send\n          (lvar :to_time) :-\n          (lvar :from_time))) :abs)) :/\n  (int 60)) round  == ","(send\n  (begin\n    (send\n      (lvar :to_time) :-\n      (lvar :from_time))) :/\n  (int 60)) round abs  == ","(send\n  (lvar :distance) :/\n  (float 60.0)) round  == ","(send\n  (begin\n    (send\n      (lvar :to_time) :-\n      (lvar :from_time))) :/\n  (float 60.0)) round  == ","(send\n  (send\n    (lvar :to_time) :to_f) :-\n  (send\n    (lvar :from_time) :to_f)) abs _in_minutes == ","(send\n  (begin\n    (send\n      (lvar :to_time to_time ) :-\n      (lvar :from_time))) :abs) round ","(send\n  (begin\n    (send\n      (lvar :to_time) :-\n      (lvar :from_time to_time ))) :abs) round ","(send\n  (lvar :to_time to_time ) :-\n  (lvar :from_time)) abs ","(send\n  (lvar :to_time) :-\n  (lvar :from_time to_time )) abs ","(send\n  (begin\n    (send\n      (begin\n        (send\n          (lvar :to_time to_time ) :-\n          (lvar :from_time))) :abs)) :/\n  (int 60)) round ","(send\n  (begin\n    (send\n      (begin\n        (send\n          (lvar :to_time) :-\n          (lvar :from_time to_time ))) :abs)) :/\n  (int 60)) round ","(send\n  (begin\n    (send\n      (lvar :to_time to_time ) :-\n      (lvar :from_time))) :abs) / ","(send\n  (begin\n    (send\n      (lvar :to_time) :-\n      (lvar :from_time to_time ))) :abs) / ","to_time to_time  to_time to_time  ","to_time to_time  respond_to? ","from_time to_time to_time  ","from_time to_time  to_time ","from_time to_time  respond_to? ","(send\n  (lvar :(send\n  (begin\n    (send\n      (lvar :to_time) :-\n      (lvar :from_time))) :/\n  (int 60)) round ) :/\n  (int 525960)) round ","(send\n  (lvar :(send\n  (begin\n    (send\n      (begin\n        (send\n          (lvar :to_time) :-\n          (lvar :from_time))) :abs)) :/\n  (int 60)) round ) :/\n  (int 525960)) round ","(send\n  (lvar :(send\n  (begin\n    (send\n      (lvar :to_time) :-\n      (lvar :from_time))) :/\n  (int 60)) round abs ) :/\n  (int 525960)) round ","(send\n  (lvar :(send\n  (lvar :distance) :/\n  (float 60.0)) round ) :/\n  (int 525960)) round ","(send\n  (lvar :(send\n  (begin\n    (send\n      (lvar :to_time) :-\n      (lvar :from_time))) :/\n  (float 60.0)) round ) :/\n  (int 525960)) round ","(send\n  (lvar :(send\n  (send\n    (lvar :to_time) :to_f) :-\n  (send\n    (lvar :from_time) :to_f)) abs _in_minutes) :/\n  (int 525960)) round ","(send\n  (lvar :(send\n  (begin\n    (send\n      (lvar :to_time) :-\n      (lvar :from_time))) :/\n  (int 60)) round ) :/\n  (int 43200)) round ","(send\n  (lvar :(send\n  (begin\n    (send\n      (begin\n        (send\n          (lvar :to_time) :-\n          (lvar :from_time))) :abs)) :/\n  (int 60)) round ) :/\n  (int 43200)) round ","(send\n  (lvar :(send\n  (begin\n    (send\n      (lvar :to_time) :-\n      (lvar :from_time))) :/\n  (int 60)) round abs ) :/\n  (int 43200)) round ","(send\n  (lvar :(send\n  (lvar :distance) :/\n  (float 60.0)) round ) :/\n  (int 43200)) round ","(send\n  (lvar :(send\n  (begin\n    (send\n      (lvar :to_time) :-\n      (lvar :from_time))) :/\n  (float 60.0)) round ) :/\n  (int 43200)) round ","(send\n  (lvar :(send\n  (send\n    (lvar :to_time) :to_f) :-\n  (send\n    (lvar :from_time) :to_f)) abs _in_minutes) :/\n  (int 43200)) round ","(begin\n  (send\n    (lvar :to_time to_time ) :-\n    (lvar :from_time))) round abs ","(begin\n  (send\n    (lvar :to_time) :-\n    (lvar :from_time to_time ))) round abs ","(begin\n  (send\n    (lvar :to_time to_time ) :-\n    (lvar :from_time))) round ","(begin\n  (send\n    (lvar :to_time) :-\n    (lvar :from_time to_time ))) round ","(send\n  (begin\n    (send\n      (lvar :to_time to_time ) :-\n      (lvar :from_time))) :/\n  (int 60)) round abs ","(send\n  (begin\n    (send\n      (lvar :to_time) :-\n      (lvar :from_time to_time ))) :/\n  (int 60)) round abs ","(send\n  (lvar :(send\n  (begin\n    (send\n      (lvar :to_time) :-\n      (lvar :from_time))) :/\n  (int 60)) round ) :/\n  (int 525600)) round ","(send\n  (lvar :(send\n  (begin\n    (send\n      (begin\n        (send\n          (lvar :to_time) :-\n          (lvar :from_time))) :abs)) :/\n  (int 60)) round ) :/\n  (int 525600)) round ","(send\n  (lvar :(send\n  (begin\n    (send\n      (lvar :to_time) :-\n      (lvar :from_time))) :/\n  (int 60)) round abs ) :/\n  (int 525600)) round ","(send\n  (lvar :(send\n  (lvar :distance) :/\n  (float 60.0)) round ) :/\n  (int 525600)) round ","(send\n  (lvar :(send\n  (begin\n    (send\n      (lvar :to_time) :-\n      (lvar :from_time))) :/\n  (float 60.0)) round ) :/\n  (int 525600)) round ","(send\n  (lvar :(send\n  (send\n    (lvar :to_time) :to_f) :-\n  (send\n    (lvar :from_time) :to_f)) abs _in_minutes) :/\n  (int 525600)) round ","I18n  with_(pair\n  (sym :scope)\n  (sym :\"datetime.distance_in_words\")) merge!  ","(pair\n  (sym :scope)\n  (sym :\"datetime.distance_in_words\")) merge!  [] ","distance_in_minutes /  + ","(send\n  (send\n    (lvar :to_time) :to_f) :-\n  (send\n    (lvar :from_time) :to_f)) abs _in_years + ","(send\n  (lvar :(send\n  (begin\n    (send\n      (lvar :to_time) :-\n      (lvar :from_time))) :/\n  (int 60)) round ) :-\n  (lvar :minute_offset_for_leap_year)) % ","(send\n  (lvar :(send\n  (begin\n    (send\n      (begin\n        (send\n          (lvar :to_time) :-\n          (lvar :from_time))) :abs)) :/\n  (int 60)) round ) :-\n  (lvar :minute_offset_for_leap_year)) % ","(send\n  (lvar :(send\n  (begin\n    (send\n      (lvar :to_time) :-\n      (lvar :from_time))) :/\n  (int 60)) round abs ) :-\n  (lvar :minute_offset_for_leap_year)) % ","(send\n  (lvar :(send\n  (lvar :distance) :/\n  (float 60.0)) round ) :-\n  (lvar :minute_offset_for_leap_year)) % ","(send\n  (lvar :(send\n  (begin\n    (send\n      (lvar :to_time) :-\n      (lvar :from_time))) :/\n  (float 60.0)) round ) :-\n  (lvar :minute_offset_for_leap_year)) % ","(send\n  (lvar :distance_in_minutes) :-\n  (lvar :(send\n  (lvar :distance_in_years) :/\n  (int 4)) * )) % ","(send\n  (lvar :distance_in_minutes) :-\n  (lvar :leap_years * )) % ","(send\n  (lvar :(send\n  (send\n    (lvar :to_time) :to_f) :-\n  (send\n    (lvar :from_time) :to_f)) abs _in_minutes) :-\n  (lvar :minute_offset_for_leap_year)) % ","(send\n  (begin\n    (send\n      (lvar :to_time) :-\n      (lvar :from_time))) :/\n  (int 60)) round  - ","(send\n  (begin\n    (send\n      (begin\n        (send\n          (lvar :to_time) :-\n          (lvar :from_time))) :abs)) :/\n  (int 60)) round  - ","(send\n  (begin\n    (send\n      (lvar :to_time) :-\n      (lvar :from_time))) :/\n  (int 60)) round abs  - ","(send\n  (lvar :distance) :/\n  (float 60.0)) round  - ","(send\n  (begin\n    (send\n      (lvar :to_time) :-\n      (lvar :from_time))) :/\n  (float 60.0)) round  - ","(send\n  (send\n    (lvar :to_time) :to_f) :-\n  (send\n    (lvar :from_time) :to_f)) abs _in_minutes - ","(send\n  (lvar :distance_in_minutes / ) :/\n  (int 4)) * ","(send\n  (lvar :(send\n  (send\n    (lvar :to_time) :to_f) :-\n  (send\n    (lvar :from_time) :to_f)) abs _in_years) :/\n  (int 4)) * ","distance_in_minutes /  / ","(send\n  (send\n    (lvar :to_time) :to_f) :-\n  (send\n    (lvar :from_time) :to_f)) abs _in_years / ","(send\n  (send\n    (lvar :(send\n  (begin\n    (send\n      (lvar :to_time) :-\n      (lvar :from_time))) :/\n  (int 60)) round ) :to_f) :/\n  (float 43200.0)) round ","(send\n  (send\n    (lvar :(send\n  (begin\n    (send\n      (begin\n        (send\n          (lvar :to_time) :-\n          (lvar :from_time))) :abs)) :/\n  (int 60)) round ) :to_f) :/\n  (float 43200.0)) round ","(send\n  (send\n    (lvar :(send\n  (begin\n    (send\n      (lvar :to_time) :-\n      (lvar :from_time))) :/\n  (int 60)) round abs ) :to_f) :/\n  (float 43200.0)) round ","(send\n  (send\n    (lvar :(send\n  (lvar :distance) :/\n  (float 60.0)) round ) :to_f) :/\n  (float 43200.0)) round ","(send\n  (send\n    (lvar :(send\n  (begin\n    (send\n      (lvar :to_time) :-\n      (lvar :from_time))) :/\n  (float 60.0)) round ) :to_f) :/\n  (float 43200.0)) round ","(send\n  (send\n    (lvar :(send\n  (send\n    (lvar :to_time) :to_f) :-\n  (send\n    (lvar :from_time) :to_f)) abs _in_minutes) :to_f) :/\n  (float 43200.0)) round ","(send\n  (send\n    (lvar :(send\n  (begin\n    (send\n      (lvar :to_time) :-\n      (lvar :from_time))) :/\n  (int 60)) round ) :to_f) :/\n  (float 1440.0)) round ","(send\n  (send\n    (lvar :(send\n  (begin\n    (send\n      (begin\n        (send\n          (lvar :to_time) :-\n          (lvar :from_time))) :abs)) :/\n  (int 60)) round ) :to_f) :/\n  (float 1440.0)) round ","(send\n  (send\n    (lvar :(send\n  (begin\n    (send\n      (lvar :to_time) :-\n      (lvar :from_time))) :/\n  (int 60)) round abs ) :to_f) :/\n  (float 1440.0)) round ","(send\n  (send\n    (lvar :(send\n  (lvar :distance) :/\n  (float 60.0)) round ) :to_f) :/\n  (float 1440.0)) round ","(send\n  (send\n    (lvar :(send\n  (begin\n    (send\n      (lvar :to_time) :-\n      (lvar :from_time))) :/\n  (float 60.0)) round ) :to_f) :/\n  (float 1440.0)) round ","(send\n  (send\n    (lvar :(send\n  (send\n    (lvar :to_time) :to_f) :-\n  (send\n    (lvar :from_time) :to_f)) abs _in_minutes) :to_f) :/\n  (float 1440.0)) round ","distance_in_minutes -  / ","distance_in_minutes -  % ","(irange\n  (lvar :fyear)\n  (lvar :to_time year )) count ","(irange\n  (lvar :from_time year )\n  (lvar :tyear)) count ","from_time year  > ","to_time to_time  month < ","to_time to_time  month ","to_time to_time  year ","from_time to_time  month >= ","from_time to_time  month ","from_time to_time  year ","(send\n  (send\n    (lvar :to_time) :to_f) :-\n  (send\n    (lvar :from_time) :to_f)) abs  round ","(send\n  (lvar :(send\n  (send\n    (lvar :to_time) :to_f) :-\n  (send\n    (lvar :from_time) :to_f)) abs ) :/\n  (float 60.0)) round ","(send\n  (send\n    (lvar :to_time) :to_f) :-\n  (send\n    (lvar :from_time) :to_f)) abs  / ","(send\n  (send\n    (lvar :to_time to_time ) :to_f) :-\n  (send\n    (lvar :from_time) :to_f)) abs ","(send\n  (send\n    (lvar :to_time) :to_f) :-\n  (send\n    (lvar :from_time to_time ) :to_f)) abs ","to_time to_time  to_f - ","from_time to_time  to_f ","to_time to_time  to_f ","(pair\n  (sym :scope)\n  (sym :\"datetime.(send\n  (send\n    (lvar :to_time) :to_f) :-\n  (send\n    (lvar :from_time) :to_f)) abs _in_words\")) merge! ","distance_in_minutes -  div ","to_time to_time  acts_like? ","from_time to_time  acts_like? ","(send\n  (lvar :to_time to_time ) :-\n  (lvar :from_time)) round ","(send\n  (lvar :to_time) :-\n  (lvar :from_time to_time )) round ","(send\n  (begin\n    (send\n      (lvar :to_time to_time ) :-\n      (lvar :from_time))) :/\n  (float 60.0)) round ","(send\n  (begin\n    (send\n      (lvar :to_time) :-\n      (lvar :from_time to_time ))) :/\n  (float 60.0)) round ","from_time to_time  > ","include_seconds_or_(pair\n  (sym :scope)\n  (sym :\"datetime.distance_in_words\")) merge!  ! ! ","include_seconds_or_(pair\n  (sym :scope)\n  (sym :\"datetime.distance_in_words\")) merge!  ! ","(send\n  (send\n    (lvar :to_time) :to_f) :-\n  (send\n    (lvar :from_time) :to_f)) abs _of_time_in_words and time_ago_in_words now accept :include_seconds  + ","include_seconds_or_(pair\n  (sym :scope)\n  (sym :\"datetime.distance_in_words\")) merge!  is_a? "]}," ActionView Helpers InstanceTag column_type":{"type":"method","name":"column_type","children":[],"call":[" object send type "," object send "," object "]}," ActionView Helpers InstanceTag error_message":{"type":"method","name":"error_message","children":[],"call":[" object errors on "," object errors "," object "]}," ActionView Helpers InstanceTag error_wrapping":{"type":"method","name":"error_wrapping","children":[],"call":["Base  field_error_proc call ","Base  field_error_proc ","Base  field_error_proc call html_safe! "]}," ActionView Helpers InstanceTag content_tag":{"type":"method","name":"content_tag","children":[],"call":[" content_tag_without_error_wrapping "," error_wrapping "," object errors on "," object errors "," object "," object errors respond_to? "," object respond_to? "]}," ActionView Helpers InstanceTag tag":{"type":"method","name":"tag","children":[],"call":[" tag_without_error_wrapping "," error_wrapping "," object errors on "," object errors "," object "," object errors respond_to? "," object respond_to? "]}," ActionView Helpers InstanceTag to_tag":{"type":"method","name":"to_tag","children":[],"call":[" to_boolean_select_tag "," to_datetime_select_tag "," to_date_select_tag "," to_input_field_tag "," to_text_area_tag ","@method_name include? "," column_type "," to_time_select_tag "]}," ActionView Helpers ActiveRecordHelper default_input_block":{"type":"method","name":"default_input_block","children":[],"call":[" input ","column name ","column human_name ","Proc  new "]}," ActionView Helpers ActiveRecordHelper all_input_tags":{"type":"method","name":"all_input_tags","children":[],"call":["(send\n  (send\n    (send\n      (lvar :record) :class) :content_columns) :collect) join ","input_block call ","record class content_columns collect ","record class content_columns ","record class "," default_input_block ","options [] "]}," ActionView Helpers ActiveRecordHelper error_messages_for":{"type":"method","name":"error_messages_for","children":[],"call":["<div id=\"errorExplanation\"> + + + + ","<div id=\"errorExplanation\"> + + + ","object errors full_messages collect ","object errors full_messages ","object errors ","<div id=\"errorExplanation\"> + + ","<div id=\"errorExplanation\"> + ","object_name gsub ","object errors count == ","object errors count ","object errors empty? "," instance_eval "," content_tag ","options [] "," content_tag + + "," content_tag + "," pluralize ","object_name to_s gsub ","object_name to_s "," instance_variable_get ","options symbolize_keys ","object errors empty? ! "," content_tag << << "," content_tag << ","object errors full_messages map ","objects map ","(or\n  (send\n    (lvar :options) :[]\n    (sym :object_name))\n  (send\n    (lvar :params) :first)) to_s gsub ","(or\n  (send\n    (lvar :options) :[]\n    (sym :object_name))\n  (send\n    (lvar :params) :first)) to_s ","params first ","html []= ","value blank? ","options include? ","(sym :id) each ","count zero? ","sum + ","objects inject ","(send\n  (lvar :params) :collect) compact ","params collect ","params pop symbolize_keys ","params pop ","params last is_a? ","params last ","contents << ","options [] blank? ","options []= ","options [] to_s gsub ","options [] to_s ","(lvar :object) flatten ","options delete ","params extract_options! symbolize_keys ","params extract_options! ","(send\n  (lvar :objects) :sum) join ","objects sum ","message blank? ","header_message blank? ","locale t ","I18n  t ","I18n  with_options ","contents html_safe ","(send\n  (lvar :objects) :sum) join html_safe ","ERB Util  html_escape ","Array  wrap "," instance_eval  errors full_messages collect "," instance_variable_get  errors full_messages collect ","options delete  errors full_messages collect ","object errors full_locale t s collect ","object errors full_options [] s collect "," instance_eval  errors full_messages "," instance_variable_get  errors full_messages ","options delete  errors full_messages ","object errors full_locale t s ","object errors full_options [] s "," instance_eval  errors "," instance_variable_get  errors ","options delete  errors "," instance_eval _name gsub "," instance_variable_get _name gsub ","options delete _name gsub ","I18n  t  gsub ","options [] to_s gsub  gsub ","options [] to_s  gsub "," instance_eval  errors count == "," instance_variable_get  errors count == ","options delete  errors count == "," instance_eval  errors count "," instance_variable_get  errors count ","options delete  errors count "," instance_eval  errors empty? "," instance_variable_get  errors empty? ","options delete  errors empty? ","options symbolize_keys  [] ","params pop symbolize_keys  [] ","params extract_options! symbolize_keys  [] "," instance_eval _name to_s gsub "," instance_variable_get _name to_s gsub ","options delete _name to_s gsub ","I18n  t  to_s gsub ","options [] to_s gsub  to_s gsub ","options [] to_s  to_s gsub "," instance_eval _name to_s "," instance_variable_get _name to_s ","options delete _name to_s ","I18n  t  to_s ","options [] to_s gsub  to_s ","options [] to_s  to_s ","options symbolize_keys  symbolize_keys ","params pop symbolize_keys  symbolize_keys ","params extract_options! symbolize_keys  symbolize_keys "," instance_eval  errors empty? ! "," instance_variable_get  errors empty? ! ","options delete  errors empty? ! "," instance_eval  errors full_messages map "," instance_variable_get  errors full_messages map ","options delete  errors full_messages map ","object errors full_locale t s map ","object errors full_options [] s map "," instance_eval s map "," instance_variable_get s map ","options delete s map ","(send\n  (lvar :params) :collect) compact  map ","(lvar :object) flatten  map ","Array  wrap  map ","(or\n  (send\n    (lvar :options) :[]\n    (sym : instance_eval _name))\n  (send\n    (lvar :params) :first)) to_s gsub ","(or\n  (send\n    (lvar :options) :[]\n    (sym : instance_variable_get _name))\n  (send\n    (lvar :params) :first)) to_s gsub ","(or\n  (send\n    (lvar :options) :[]\n    (sym :options delete _name))\n  (send\n    (lvar :params) :first)) to_s gsub ","(or\n  (send\n    (lvar :options symbolize_keys ) :[]\n    (sym :object_name))\n  (send\n    (lvar :params) :first)) to_s gsub ","(or\n  (send\n    (lvar :params pop symbolize_keys ) :[]\n    (sym :object_name))\n  (send\n    (lvar :params) :first)) to_s gsub ","(or\n  (send\n    (lvar :params extract_options! symbolize_keys ) :[]\n    (sym :object_name))\n  (send\n    (lvar :params) :first)) to_s gsub ","(or\n  (send\n    (lvar :options) :[]\n    (sym :I18n  t ))\n  (send\n    (lvar :params) :first)) to_s gsub ","(or\n  (send\n    (lvar :options) :[]\n    (sym :options [] to_s gsub ))\n  (send\n    (lvar :params) :first)) to_s gsub ","(or\n  (send\n    (lvar :options) :[]\n    (sym :options [] to_s ))\n  (send\n    (lvar :params) :first)) to_s gsub ","(or\n  (send\n    (lvar :options) :[]\n    (sym : instance_eval _name))\n  (send\n    (lvar :params) :first)) to_s ","(or\n  (send\n    (lvar :options) :[]\n    (sym : instance_variable_get _name))\n  (send\n    (lvar :params) :first)) to_s ","(or\n  (send\n    (lvar :options) :[]\n    (sym :options delete _name))\n  (send\n    (lvar :params) :first)) to_s ","(or\n  (send\n    (lvar :options symbolize_keys ) :[]\n    (sym :object_name))\n  (send\n    (lvar :params) :first)) to_s ","(or\n  (send\n    (lvar :params pop symbolize_keys ) :[]\n    (sym :object_name))\n  (send\n    (lvar :params) :first)) to_s ","(or\n  (send\n    (lvar :params extract_options! symbolize_keys ) :[]\n    (sym :object_name))\n  (send\n    (lvar :params) :first)) to_s ","(or\n  (send\n    (lvar :options) :[]\n    (sym :I18n  t ))\n  (send\n    (lvar :params) :first)) to_s ","(or\n  (send\n    (lvar :options) :[]\n    (sym :options [] to_s gsub ))\n  (send\n    (lvar :params) :first)) to_s ","(or\n  (send\n    (lvar :options) :[]\n    (sym :options [] to_s ))\n  (send\n    (lvar :params) :first)) to_s ","options []  blank? ","options symbolize_keys  include? ","params pop symbolize_keys  include? ","params extract_options! symbolize_keys  include? "," instance_eval s inject "," instance_variable_get s inject ","options delete s inject ","(send\n  (lvar :params) :collect) compact  inject ","(lvar :object) flatten  inject ","Array  wrap  inject ","options symbolize_keys  [] blank? ","params pop symbolize_keys  [] blank? ","params extract_options! symbolize_keys  [] blank? ","options symbolize_keys  []= ","params pop symbolize_keys  []= ","params extract_options! symbolize_keys  []= ","options symbolize_keys  [] to_s gsub ","params pop symbolize_keys  [] to_s gsub ","params extract_options! symbolize_keys  [] to_s gsub ","options symbolize_keys  [] to_s ","params pop symbolize_keys  [] to_s ","params extract_options! symbolize_keys  [] to_s ","(lvar : instance_eval ) flatten ","(lvar : instance_variable_get ) flatten ","(lvar :options delete ) flatten ","options symbolize_keys  delete ","params pop symbolize_keys  delete ","params extract_options! symbolize_keys  delete ","params extract_options symbolize_keys ! symbolize_keys ","params extract_params pop symbolize_keys ! symbolize_keys ","params extract_params extract_options! symbolize_keys ! symbolize_keys ","params extract_options symbolize_keys ! ","params extract_params pop symbolize_keys ! ","params extract_params extract_options! symbolize_keys ! ","(send\n  (lvar : instance_eval s) :sum) join ","(send\n  (lvar : instance_variable_get s) :sum) join ","(send\n  (lvar :options delete s) :sum) join ","(send\n  (lvar :(send\n  (lvar :params) :collect) compact ) :sum) join ","(send\n  (lvar :(lvar :object) flatten ) :sum) join ","(send\n  (lvar :Array  wrap ) :sum) join "," instance_eval s sum "," instance_variable_get s sum ","options delete s sum ","(send\n  (lvar :params) :collect) compact  sum ","(lvar :object) flatten  sum ","Array  wrap  sum ","locale t  blank? ","header_locale t  blank? ","header_options []  blank? ","I18n  with_options symbolize_keys  ","I18n  with_params pop symbolize_keys  ","I18n  with_params extract_options! symbolize_keys  ","(send\n  (lvar : instance_eval s) :sum) join html_safe ","(send\n  (lvar : instance_variable_get s) :sum) join html_safe ","(send\n  (lvar :options delete s) :sum) join html_safe ","(send\n  (lvar :(send\n  (lvar :params) :collect) compact ) :sum) join html_safe ","(send\n  (lvar :(lvar :object) flatten ) :sum) join html_safe ","(send\n  (lvar :Array  wrap ) :sum) join html_safe "]}," ActionView Helpers ActiveRecordHelper error_message_on":{"type":"method","name":"error_message_on","children":[],"call":["prepend_text + + ","prepend_text + "," instance_eval errors on "," instance_eval errors "," instance_eval ","errors first ","errors is_a? "," content_tag "," instance_variable_get errors on "," instance_variable_get errors "," instance_variable_get ","obj errors on ","obj errors ","object respond_to? ","options [] ","options reverse_merge! ","options []= ","args [] ","ActiveSupport Deprecation  warn "," caller ","error_message_on takes an option hash instead of separate  + ","args empty? ","args extract_options! ","(begin\n  (send\n    (lvar :options) :[]\n    (sym :prepend_text))) html_safe ","ERB Util  html_escape "," instance_eval  instance_eval errors on  on "," instance_eval  instance_variable_get errors on  on "," instance_eval obj errors on  on "," instance_eval  instance_eval errors on  "," instance_eval  instance_variable_get errors on  "," instance_eval obj errors on  "," instance_eval errors on  first "," instance_variable_get errors on  first ","obj errors on  first "," instance_eval errors on  is_a? "," instance_variable_get errors on  is_a? ","obj errors on  is_a? "," instance_variable_get  instance_eval errors on  on "," instance_variable_get  instance_variable_get errors on  on "," instance_variable_get obj errors on  on "," instance_variable_get  instance_eval errors on  "," instance_variable_get  instance_variable_get errors on  "," instance_variable_get obj errors on  ","obj  instance_eval errors on  on ","obj  instance_variable_get errors on  on ","obj obj errors on  on "," instance_variable_get  errors on ","obj  instance_eval errors on  ","obj  instance_variable_get errors on  ","obj obj errors on  "," instance_variable_get  errors "," instance_variable_get ect respond_to? ","args extract_options!  [] ","args extract_options!  reverse_merge! ","args extract_options!  []= ","args extract_args extract_options! ! ","(begin\n  (send\n    (lvar :args extract_options! ) :[]\n    (sym :prepend_text))) html_safe "]}," ActionView Helpers ActiveRecordHelper form":{"type":"method","name":"form","children":[],"call":["(str \"<form action='\") + + + + ","(str \"<form action='\") + + + ","action gsub capitalize ","action gsub ","(str \"<form action='\") + + "," all_input_tags ","(str \"<form action='\") + ","InstanceTag  new to_input_field_tag ","InstanceTag  new ","record new_record? ","options [] "," instance_eval ","(str \"<form action=\\\"\") + + ","(str \"<form action=\\\"\") + ","options [] gsub capitalize ","options [] gsub "," url_for "," content_tag ","contents << "," submit_tag "," block_given? "," hidden_field ","options symbolize_keys "," instance_variable_get ","formtag + ","(or\n  (lvar :options)\n  (hash)) symbolize_keys "," form_tag ","contents safe_concat ","(str \"<form  url_for ='\") + + + + ","(str \"<form  url_for ='\") + + + "," url_for  gsub capitalize "," url_for  gsub ","(str \"<form  url_for ='\") + + ","(str \"<form  url_for ='\") + "," instance_eval  new_ instance_eval ? "," instance_variable_get  new_ instance_variable_get ? ","options symbolize_keys  [] ","(or\n  (lvar :options)\n  (hash)) symbolize_keys  [] ","(str \"<form  url_for =\\\"\") + + ","(str \"<form  url_for =\\\"\") + ","options symbolize_keys  [] gsub capitalize ","(or\n  (lvar :options)\n  (hash)) symbolize_keys  [] gsub capitalize ","options symbolize_keys  [] gsub ","(or\n  (lvar :options)\n  (hash)) symbolize_keys  [] gsub "," form_tag  << ","options symbolize_keys  symbolize_keys ","(or\n  (lvar :options)\n  (hash)) symbolize_keys  symbolize_keys ","(str \"<form action=\\\"\") +  + ","(or\n  (lvar :options symbolize_keys )\n  (hash)) symbolize_keys ","(or\n  (lvar :(or\n  (lvar :options)\n  (hash)) symbolize_keys )\n  (hash)) symbolize_keys "," form_tag  safe_concat "]}," ActionView Helpers ActiveRecordHelper input":{"type":"method","name":"input","children":[],"call":["InstanceTag  new to_tag ","InstanceTag  new "]}," ActionView Base rxml_render":{"type":"method","name":"rxml_render","children":[],"call":[" eval ","@controller headers [] ","@controller headers "," evaluate_locals "]}," ActionView Base rhtml_render":{"type":"method","name":"rhtml_render","children":[],"call":["@@compiled_erb_templates [] result ","@@compiled_erb_templates [] ","ERB  new "," evaluate_locals ","@@compiled_er evaluate_locals _templates [] result ","@@compiled_er evaluate_locals _templates [] "]}," ActionView Base read_template_file":{"type":"method","name":"read_template_file","children":[],"call":["@@loaded_templates [] ","@@loaded_templates []= ","File  read "," cache_template_loading "]}," ActionView Base template_exists?":{"type":"method","name":"template_exists?","children":[],"call":["FileTest  exists? "," full_template_path ","@@loaded_templates has_key? "," cache_template_loading ","@@method_names has_key? ","file_path blank? ! ","file_path blank? ","File  exist? "," full_template_path  blank? ! "," full_template_path  blank? "]}," ActionView Base full_template_path":{"type":"method","name":"full_template_path","children":[],"call":[" find_full_template_path ","(or-asgn\n  (send\n    (cvar :@@cached_base_paths) :[]\n    (lvar :template_path))\n  (hash)) [] ","extension to_s ","@@cached_base_paths [] "]}," ActionView Base file_public?":{"type":"method","name":"file_public?","children":[],"call":["template_path split last [] != ","template_path split last [] ","template_path split last ","template_path split "]}," ActionView Base file_exists?":{"type":"method","name":"file_exists?","children":[],"call":[" builder_template_exists? "," erb_template_exists? "," delegate_template_exists? "," pick_template_extension "," template_exists? "," path_and_extension "]}," ActionView Base builder_template_exists?":{"type":"method","name":"builder_template_exists?","children":[],"call":[" template_exists? "]}," ActionView Base erb_template_exists?":{"type":"method","name":"erb_template_exists?","children":[],"call":[" template_exists? "]}," ActionView Base pick_rendering_method":{"type":"method","name":"pick_rendering_method","children":[],"call":["(if\n  (send\n    (lvar :template_extension) :==\n    (str \"rxml\"))\n  (str \"rxml\")\n  (str \"rhtml\")) + ","template_extension == ","@@template_handlers [] ","(if\n  (send\n    (send\n      (lvar :template_extension) :to_s) :==\n    (str \"rxml\"))\n  (str \"rxml\")\n  (str \"rhtml\")) + ","template_extension to_s == ","template_extension to_s "]}," ActionView Base pick_template_extension":{"type":"method","name":"pick_template_extension","children":[],"call":[" raise "," builder_template_exists? "," erb_template_exists? ","match first "," delegate_template_exists? "," find_template_extension_for ","(or-asgn\n  (send\n    (cvar :@@cached_template_extension) :[]\n    (lvar :template_path))\n  (hash)) [] "," template_format ","@@cached_template_extension [] "," delegate_template_exists?  first "]}," ActionView Base render_template":{"type":"method","name":"render_template","children":[],"call":[" send "," binding "," pick_rendering_method ","Builder XmlMarkup  new "," instance_variable_set ","@assigns each "," eval ","local_assigns each "," compile_and_render_template "," delegate_render "," read_template_file ","@@template_handlers [] "," template_handler_is_compilable? "," class handler_for_extension "," class ","template render_template ","  binding inding "," instance_varia binding le_set ","@@template_@@template_handlers [] s [] ","@@template_ class handler_for_extension s [] "," template_handler_is_compila binding le? "," template_@@template_handlers [] _is_compilable? "," template_ class handler_for_extension _is_compilable? "," class @@template_handlers [] _for_extension "," class  class handler_for_extension _for_extension "]}," ActionView Base render":{"type":"method","name":"render","children":[],"call":[" render_file "," render_template ","options [] "," render_partial ","ActionView Base ObjectWrapper  new "," render_partial_collection ","options []= ","options [] nil? ","options is_a? "," render ","options merge "," concat ","block binding "," capture "," block_given? "," partial_pieces ","options delete ","options reverse_merge "," update_page ","options == "," wrap_content_for_layout ","InlineTemplate  new ","InlineTemplate  new render "," _pick_template render_template "," _pick_template "," _render_with_layout ","ActiveSupport Deprecation  warn ","Calling render with a string will render a partial from Rails 2.3.  + ","template render_template "," view_paths find_template "," template_format "," view_paths "," render_InlineTemplate  new  "," render_ view_paths find_template  ","options reverse_merge  [] ","options reverse_merge  []= ","options reverse_merge  [] nil? ","options reverse_merge  is_a? ","options reverse_merge  merge ","options reverse_merge  delete ","options reverse_merge  reverse_merge ","options reverse_merge  == "," _pick_InlineTemplate  new  render_InlineTemplate  new  "," _pick_ view_paths find_template  render_ view_paths find_template  "," _pick_InlineTemplate  new  "," _pick_ view_paths find_template  ","InlineTemplate  new  render_InlineTemplate  new  "," view_paths find_template  render_ view_paths find_template  "," view_paths find_InlineTemplate  new  "," view_paths find_ view_paths find_template  "," InlineTemplate  new _format ","  view_paths find_template _format "]}," ActionView Base render_file":{"type":"method","name":"render_file","children":[],"call":[" raise ","TemplateError  new ","e sub_template_of ","TemplateError  === "," render_template "," read_template_file ","template_path split last ","template_path split "," full_template_path "," pick_template_extension ","@first_render nil? "," view_paths first "," view_paths "," find_base_path_for "," view_paths inspect ","template_file_name blank? ","template_extension gsub "," template_handler_preferences to_sentence "," template_handler_preferences "," pick_template_extension to_s "," path_and_extension ","template_path include? ! ","template_path include? "," controller is_a? "," controller ","Template  new render_template ","Template  new "," pick_template_path split last  "," pick_ pick_template_extension  "," pick_template_extension gsub  "," pick_ pick_template_extension to_s  "," full_template_path  blank? ","template_path split last  gsub "," pick_template_extension  gsub ","template_extension gsub  gsub "," pick_template_extension to_s  gsub "," pick_template_path split last  to_s "," pick_ pick_template_extension  to_s "," pick_template_extension gsub  to_s "," pick_ pick_template_extension to_s  to_s "]}," ActionView Base initialize":{"type":"method","name":"initialize","children":[],"call":["controller logger ","assigns_for_first_render with_indifferent_access ","(splat\n  (lvar :view_paths)) compact ","view_paths dup ","view_paths respond_to? ","TemplateFinder  new "," view_paths= ","ProxyModule  new "," initialize_without_template_tracking ","Hash  new ","ActiveSupport Deprecation DeprecatedInstanceVariableProxy  new ","@lookup_context formats= ","ActionView LookupContext  new ","lookup_context is_a? ","h []= ","ActiveSupport SafeBuffer  new ","ActiveSupport InheritableOptions  new ","controller config ","controller respond_to? ","controller request "," helpers= ","Module  new "," class helpers "," class "," assign "," instance_variable_set ","assigns_for_first_render each "," _prepare_context "," assign_controller ","ActionView Renderer  new ","lookup_context prefixes= ","controller _prefixes ","lookup_context formats= ","context is_a? ","ActionView LookupContext  new  formats= ","@ActionView LookupContext  new  formats= ","ActionView LookupContext  new  is_a? ","controller controller config  ","ActionView LookupContext  new  prefixes= "]}," ActionView Base load_helpers":{"type":"method","name":"load_helpers","children":[],"call":[]}," ActionController UrlRewriter build_query_string":{"type":"method","name":"build_query_string","children":[],"call":["query_string << ","? + ","elements join ","elements empty? ","elements << ","CGI  escape ","value to_s ","hash each ","Routing  extract_parameter_value ","value each ","key << ","value class == ","value class ","key to_s ","hash [] ","only_keys each ","hash keys ","hash []  to_s ","Routing  extract_parameter_hash []  ","hash []  each ","CGI  escape  << ","key to_s  << ","hash []  class == ","hash []  class ","CGI  escape  to_s ","key to_s  to_s ","only_CGI  escape s each ","only_key to_s s each ","hash CGI  escape s ","hash key to_s s "]}," ActionController UrlRewriter existing_parameters":{"type":"method","name":"existing_parameters","children":[],"call":["(str \"id\") include? ","@request parameters reject ","@request parameters "]}," ActionController UrlRewriter new_parameters":{"type":"method","name":"new_parameters","children":[],"call":["value nil? ","parameters reject ","parameters update ","options [] "," existing_parameters "]}," ActionController UrlRewriter include_id_in_path_params":{"type":"method","name":"include_id_in_path_params","children":[],"call":["options []= ","(or\n  (send\n    (lvar :options) :[]\n    (sym :path_params))\n  (hash)) merge ","options [] "]}," ActionController UrlRewriter ensure_slash_prefix":{"type":"method","name":"ensure_slash_prefix","children":[],"call":["options []= ","/ + ","options [] ","options [] [] != ","options [] [] ","options [] empty? ! ","options [] empty? "]}," ActionController UrlRewriter ensure_slash_suffix":{"type":"method","name":"ensure_slash_suffix","children":[],"call":["options []= ","options [] + ","options [] ","options [] [] != ","options [] [] ","options [] empty? ! ","options [] empty? "]}," ActionController UrlRewriter path_params_in_list":{"type":"method","name":"path_params_in_list","children":[],"call":["pair last ","options [] inject ","options [] "]}," ActionController UrlRewriter controller_name":{"type":"method","name":"controller_name","children":[],"call":["controller_name << ","options [] + ","options [] "," ensure_slash_suffix "]}," ActionController UrlRewriter action_name":{"type":"method","name":"action_name","children":[],"call":["prefix + + ","prefix + ","options [] ","options [] == "," ensure_slash_prefix "," ensure_slash_suffix "]}," ActionController UrlRewriter rewrite_controller":{"type":"method","name":"rewrite_controller","children":[],"call":["path << "," path_params_in_list ","options [] "," action_name "," controller_name ","(str \"^/(.*?)\") match to_a ","(str \"^/(.*?)\") match "]}," ActionController UrlRewriter rewrite_action":{"type":"method","name":"rewrite_action","children":[],"call":["options [] + ","options [] ","path sub "," ensure_slash_suffix ","options [] ! "," action_name ","(or\n  (lvar :action_prefix)\n  (str \"\")) + + ","(or\n  (lvar :action_prefix)\n  (str \"\")) + ","@controller + + ","@controller + ","@action == ","action_prefix empty? ! ","action_prefix empty? ","(str \"^/(.*)\") match to_a ","(str \"^/(.*)\") match ","action_prefix == ","options [] +  sub ","path sub  sub "]}," ActionController UrlRewriter rewrite_path_params":{"type":"method","name":"rewrite_path_params","children":[],"call":["pair last ","path sub ","pair last to_s ","@request parameters [] ","pair first ","@request parameters ","options [] nil? ","options [] ","options [] inject ","options [] [] ","path [] == ","path [] ","options [] size == ","options [] size ","@action == ","options [] == "]}," ActionController UrlRewriter rewrite_path":{"type":"method","name":"rewrite_path","children":[],"call":[" rewrite_controller ","options [] "," rewrite_path_params "," rewrite_action "," include_id_in_path_params ","path << "," build_query_string ","extra_keys empty? ","Routing Routes  generate ","options dup ","options delete ","RESERVED_OPTIONS  each ","options update ","@parameters symbolize_keys ","options [] symbolize_keys ","options symbolize_keys ","@request symbolized_path_parameters ","path empty? ","(str \"/\") chomp ","path join ","extras update ","extras delete ","params_copy update ","extras [] ","(str \"controller\") include? ","@request parameters delete_if ","@request parameters ","(or\n  (send\n    (lvar :options) :[]\n    (sym :params))\n  (hash)) symbolize_keys ","@request parameters reject ","extras empty? ","overwrite symbolize_keys ","options symbolize_keys  [] "," rewrite_ rewrite_controller _params "," rewrite_ rewrite_path_params _params "," rewrite_ rewrite_action _params "," rewrite_(str \"/\") chomp _params "," include_id_in_ rewrite_controller _params "," include_id_in_ rewrite_path_params _params "," include_id_in_ rewrite_action _params "," include_id_in_(str \"/\") chomp _params "," rewrite_controller  << "," rewrite_path_params  << "," rewrite_action  << ","(str \"/\") chomp  << ","options symbolize_keys  dup ","options symbolize_keys  delete ","options symbolize_keys  update ","options symbolize_keys  [] symbolize_keys ","options symbolize_keys  symbolize_keys ","@request symbolized_ rewrite_controller _parameters ","@request symbolized_ rewrite_path_params _parameters ","@request symbolized_ rewrite_action _parameters ","@request symbolized_(str \"/\") chomp _parameters "," rewrite_controller  empty? "," rewrite_path_params  empty? "," rewrite_action  empty? ","(str \"/\") chomp  empty? "," rewrite_controller  join "," rewrite_path_params  join "," rewrite_action  join ","(str \"/\") chomp  join ","(or\n  (send\n    (lvar :options symbolize_keys ) :[]\n    (sym :params))\n  (hash)) symbolize_keys ","options delete  symbolize_keys "]}," ActionController UrlRewriter rewrite_url":{"type":"method","name":"rewrite_url","children":[],"call":["rewritten_url << ","options [] "," build_query_string "," new_parameters ","@request host_with_port ","@request protocol ","@request relative_url_root to_s ","@request relative_url_root ","/ + ","path sub "," rewrite_path ","options delete ","options key? "," rewrite_authentication ","rewritten_url match ","ActionController Base  relative_url_root to_s ","ActionController Base  relative_url_root ","CGI  escape ","options [] to_param to_s ","options [] to_param "," rewrite_path  sub "," rewrite_ rewrite_path  "]}," ActionController UrlRewriter validate_options":{"type":"method","name":"validate_options","children":[],"call":[" raise ","unknown_option_keys empty? ","supplied_option_keys - ","supplied_option_keys -  empty? "]}," ActionController UrlRewriter to_str":{"type":"method","name":"to_str","children":[],"call":["@request parameters inspect ","@request parameters ","@request path ","@request host_with_port ","@request protocol ","@parameters [] "]}," ActionController UrlRewriter to_s":{"type":"method","name":"to_s","children":[],"call":[" to_str "]}," ActionController UrlRewriter rewrite":{"type":"method","name":"rewrite","children":[],"call":[" rewrite_url "," rewrite_path "," validate_options ","options keys ","ActiveSupport Deprecation  warn "," caller ","options include? "," process_path_options "," class rewrite ","@request symbolized_path_parameters "," class ","@request protocol ","options [] ","@request host_with_port "]}," ActionController UrlRewriter initialize":{"type":"method","name":"initialize","children":[],"call":["@request path dup ","@request path "]}," TestCase process":{"type":"method","name":"process","children":[],"call":["@controller process ","@request parameters update ","@request parameters ","@request action= ","action to_s ","@request session= ","ActionController TestSession  new ","session nil? ","parameters nil? "]}," ActionController TestSession delete":{"type":"method","name":"delete","children":[],"call":["key to_s "," clear ","ActiveSupport Deprecation  warn "," caller ","key nil? "]}," ActionController TestSession close":{"type":"method","name":"close","children":[],"call":[" delete "," update ","ActiveSupport Deprecation  warn "," caller "]}," ActionController TestSession update":{"type":"method","name":"update","children":[],"call":[" replace ","ActiveSupport Deprecation  warn "," caller ","hash nil? "]}," ActionController TestSession []=":{"type":"method","name":"[]=","children":[],"call":["@attributes []= "," data []= "," data ","key to_s "]}," ActionController TestSession []":{"type":"method","name":"[]","children":[],"call":["@attributes [] "," data [] "," data ","key to_s "]}," ActionController TestSession initialize":{"type":"method","name":"initialize","children":[],"call":["attributes stringify_keys ","attributes nil? "," replace_attributes "," reset_session_id "," replace ","session stringify_keys "," stringify_keys ","SecureRandom  hex ","session with_indifferent_access ","Rack Session SessionId  new ","@data empty? "," stringify_keys  empty? ","session with_indifferent_access  empty? "]}," ActionController TestResponse has_template_object?":{"type":"method","name":"has_template_object?","children":[],"call":[" template_objects [] nil? ! "," template_objects [] nil? "," template_objects [] "," template_objects "]}," ActionController TestResponse template_objects":{"type":"method","name":"template_objects","children":[],"call":[" template assigns "," template "]}," ActionController TestResponse has_session_object?":{"type":"method","name":"has_session_object?","children":[],"call":[" session [] nil? ! "," session [] nil? "," session [] "," session "]}," ActionController TestResponse has_flash_object?":{"type":"method","name":"has_flash_object?","children":[],"call":[" flash [] nil? ! "," flash [] nil? "," flash [] "," flash "]}," ActionController TestResponse has_flash_with_contents?":{"type":"method","name":"has_flash_with_contents?","children":[],"call":[" flash empty? ! "," flash empty? "," flash "]}," ActionController TestResponse has_flash?":{"type":"method","name":"has_flash?","children":[],"call":[" session [] nil? ! "," session [] nil? "," session [] "," session "," session [] empty? ! "," session [] empty? "]}," ActionController TestResponse flash":{"type":"method","name":"flash","children":[],"call":[" session [] "," session "]}," ActionController TestResponse rendered_with_file?":{"type":"method","name":"rendered_with_file?","children":[],"call":[" rendered_file nil? ! "," rendered_file nil? "," rendered_file "]}," ActionController TestResponse rendered_file":{"type":"method","name":"rendered_file","children":[],"call":[" template first_render "," template "," template first_render split last "," template first_render split "," template first_render nil? "]}," ActionController TestResponse redirect_url_match?":{"type":"method","name":"redirect_url_match?","children":[],"call":["p match != ","p match "," redirect_url ","p nil? ","pattern class == ","pattern class ","Regexp  new "," redirect_url nil? ","Regexp  new  match != ","Regexp  new  match ","Regexp  new  nil? ","Regexp  new attern class == ","Regexp  new attern class ","RegexRegexp  new   new "]}," ActionController TestResponse redirect_url":{"type":"method","name":"redirect_url","children":[],"call":[" headers [] "," headers "," redirect? "]}," ActionController TestResponse server_error?":{"type":"method","name":"server_error?","children":[],"call":["(irange\n  (int 500)\n  (int 599)) include? "," response_code "]}," ActionController TestResponse redirect?":{"type":"method","name":"redirect?","children":[],"call":["(irange\n  (int 300)\n  (int 399)) include? "," response_code "]}," ActionController TestResponse missing?":{"type":"method","name":"missing?","children":[],"call":[" response_code == "," response_code "]}," ActionController TestResponse success?":{"type":"method","name":"success?","children":[],"call":[" response_code == "," response_code "]}," ActionController TestResponse response_code":{"type":"method","name":"response_code","children":[],"call":[" headers [] [] to_i "," headers [] [] "," headers [] "," headers "]}," ActionController TestResponse initialize":{"type":"method","name":"initialize","children":[],"call":["TestResponse  assertion_target= "]}," ActionController TestRequest initialize_default_values":{"type":"method","name":"initialize_default_values","children":[],"call":["@env []= "," remote_addr= "]}," ActionController TestRequest initialize_containers":{"type":"method","name":"initialize_containers","children":[],"call":[]}," ActionController TestRequest request_uri=":{"type":"method","name":"request_uri=","children":[],"call":["uri split first ","uri split ","@env []= "]}," ActionController TestRequest action=":{"type":"method","name":"action=","children":[],"call":["@query_parameters update "]}," ActionController TestRequest cookies":{"type":"method","name":"cookies","children":[],"call":["@cookies freeze "]}," ActionController TestRequest reset_session":{"type":"method","name":"reset_session","children":[],"call":["TestSession  new ","@session reset ","TestSession  new  reset "]}," ActionController TestRequest initialize":{"type":"method","name":"initialize","children":[],"call":[" initialize_default_values "," initialize_containers ","TestSession  new ","(pair\n  (sym :id)\n  (send nil :generate_sid\n    (send\n      (lvar :default_rack_options) :[]\n      (sym :sidbits)))) merge "," generate_sid ","default_rack_options [] ","Rack MockRequest  env_for merge ","Rack MockRequest  env_for "," session_options= ","TestSession DEFAULT_OPTIONS  merge ","ActiveSupport SecureRandom  hex "," session= ","SecureRandom  hex ","Hash  from_xml [] ","Hash  from_xml "," lambda ","Mime  [] ","TestSession DEFAULT_OPTIONS  dup "]}," ActionController Base process_test":{"type":"method","name":"process_test","children":[],"call":[" process ","TestResponse  new "]}," Inflector singular_rules":{"type":"method","name":"singular_rules","children":[],"call":[]}," Inflector plural_rules":{"type":"method","name":"plural_rules","children":[],"call":[]}," Inflector foreign_key":{"type":"method","name":"foreign_key","children":[],"call":["Inflector  underscore + ","Inflector  underscore ","Inflector  demodulize "]}," Inflector demodulize":{"type":"method","name":"demodulize","children":[],"call":["class_name_in_module gsub ","class_name_in_module to_s gsub ","class_name_in_module to_s "]}," Inflector underscore":{"type":"method","name":"underscore","children":[],"call":["camel_cased_word gsub gsub downcase ","camel_cased_word gsub gsub ","camel_cased_word gsub ","camel_cased_word to_s gsub gsub downcase ","camel_cased_word to_s gsub gsub ","camel_cased_word to_s gsub ","camel_cased_word to_s "]}," Inflector camelize":{"type":"method","name":"camelize","children":[],"call":["2 upcase ","lower_case_and_underscored_word gsub ","lower_case_and_underscored_word to_s gsub ","lower_case_and_underscored_word to_s "]}," Inflector singularize":{"type":"method","name":"singularize","children":[],"call":["result gsub! "," singular_rules each "," singular_rules ","word dup ","word to_s dup ","word to_s ","word dup  gsub! ","word to_s dup  gsub! "]}," Inflector pluralize":{"type":"method","name":"pluralize","children":[],"call":["result gsub! "," plural_rules each "," plural_rules ","word dup ","word to_s dup ","word to_s ","word dup  gsub! ","word to_s dup  gsub! "]}," CGI Cookie parse":{"type":"method","name":"parse","children":[],"call":[]}," CGI Cookie to_s":{"type":"method","name":"to_s","children":[],"call":["@secure == ","; expires= + ","CGI  rfc1123_date ","; path= + ","; domain= + ","(send\n  (ivar :@value) :collect) join ","CGI  escape ","@value collect ","@value kind_of? ","@name + ","buf << ","buf << << "]}," CGI Cookie secure=":{"type":"method","name":"secure=","children":[],"call":["val == "]}," CGI Cookie __setobj__":{"type":"method","name":"__setobj__","children":[],"call":[]}," CGI Cookie initialize":{"type":"method","name":"initialize","children":[],"call":["options [] == ","options [] ","(str \"^(.*/)\") match ","ENV  [] "," Array "," raise ","options has_key? ","name kind_of? ","name [] ","(if\n  (send\n    (send\n      (lvar :name) :[]\n      (str \"value\")) :kind_of?\n    (const nil :String))\n  (array\n    (send\n      (lvar :name) :[]\n      (str \"value\")))\n  (send nil :Array\n    (send\n      (lvar :name) :[]\n      (str \"value\")))) delete_if ","name [] kind_of? "]}," Logger format_message":{"type":"method","name":"format_message","children":[],"call":["Format  % "]}," ClassInheritableAttributes ClassMethods inherited":{"type":"method","name":"inherited","children":[],"call":["@@classes []= "," inheritable_attributes dup "," inheritable_attributes "]}," ClassInheritableAttributes ClassMethods read_inheritable_attribute":{"type":"method","name":"read_inheritable_attribute","children":[],"call":[" inheritable_attributes [] "," inheritable_attributes "]}," ClassInheritableAttributes ClassMethods write_inheritable_array":{"type":"method","name":"write_inheritable_array","children":[],"call":[" write_inheritable_attribute "," read_inheritable_attribute + "," read_inheritable_attribute "," read_inheritable_attribute nil? "]}," ClassInheritableAttributes ClassMethods write_inheritable_attribute":{"type":"method","name":"write_inheritable_attribute","children":[],"call":[" inheritable_attributes []= "," inheritable_attributes "]}," ClassInheritableAttributes ClassMethods inheritable_attributes":{"type":"method","name":"inheritable_attributes","children":[],"call":["@@classes [] "]}," ClassInheritableAttributes append_features":{"type":"method","name":"append_features","children":[],"call":[]}," Class cattr_accessor":{"type":"method","name":"cattr_accessor","children":[],"call":[" cattr_writer "," cattr_reader "]}," Class cattr_writer":{"type":"method","name":"cattr_writer","children":[],"call":[" class_eval ","sym id2name ","syms each "]}," Class cattr_reader":{"type":"method","name":"cattr_reader","children":[],"call":[" class_eval ","sym id2name ","syms each "]}," CGI Session DRbStore delete":{"type":"method","name":"delete","children":[],"call":["@@session_data delete "]}," CGI Session DRbStore close":{"type":"method","name":"close","children":[],"call":[" update "]}," CGI Session DRbStore update":{"type":"method","name":"update","children":[],"call":["@@session_data []= "]}," CGI Session DRbStore restore":{"type":"method","name":"restore","children":[],"call":["@@session_data [] "]}," CGI Session DRbStore initialize":{"type":"method","name":"initialize","children":[],"call":["session session_id "]}," CGI Session ActiveRecordStore update":{"type":"method","name":"update","children":[],"call":["@session save ","@session data= ","ActiveRecord Base  silence ","@session update_attribute "," marshalize ","@session save! "]}," CGI Session ActiveRecordStore restore":{"type":"method","name":"restore","children":[],"call":["@session data "," unmarshalize "]}," CGI Session ActiveRecordStore delete":{"type":"method","name":"delete","children":[],"call":["@session destroy ","ActiveRecord Base  silence "]}," CGI Session ActiveRecordStore close":{"type":"method","name":"close","children":[],"call":[" update "]}," CGI Session ActiveRecordStore initialize":{"type":"method","name":"initialize","children":[],"call":["Session  new ","session session_id ","@session data ","Session  find_first ","@@session_class new "," raise ","session new_session ","@@session_class find_by_session_id ","ActiveRecord Base  silence ","@session save ","Session  find_by_sessid "," unmarshalize "," marshalize ","session session session_id  ","Session  new  data ","Session  find_first  data ","@@session_class new  data ","@@session_class find_by_session_id  data ","@Session  new _class new ","@Session  find_first _class new ","@@@session_class new _class new ","@@@session_class find_by_session_id _class new ","@Session  new _class find_by_session_id ","@Session  find_first _class find_by_session_id ","@@@session_class new _class find_by_session_id ","@@@session_class find_by_session_id _class find_by_session_id ","@@session_class find_by_session session_id  ","Session  new  save ","Session  find_first  save ","@@session_class new  save ","@@session_class find_by_session_id  save "]}," ActionController Scaffolding ClassMethods validate_options":{"type":"method","name":"validate_options","children":[],"call":[" raise ","unknown_option_keys empty? ","supplied_option_keys - ","supplied_option_keys -  empty? "]}," ActionController Scaffolding ClassMethods scaffold":{"type":"method","name":"scaffold","children":[],"call":[" module_eval ","options [] ","Inflector  pluralize ","Inflector  camelize ","model_id id2name "," logger warn "," logger "," require "," logger nil? "," validate_options ","options keys ","singular_name pluralize ","singular_name camelize ","model_id to_s ","options assert_valid_keys ","model_id id2name  pluralize ","model_id to_s  pluralize ","model_id id2name  camelize ","model_id to_s  camelize "]}," ActionController Scaffolding append_features":{"type":"method","name":"append_features","children":[],"call":[]}," ActionController AbstractResponse redirect":{"type":"method","name":"redirect","children":[],"call":["@headers []= ","@headers [] == ","@headers [] "," body= "," headers []= "," headers ","CGI  escapeHTML ","to_url gsub "," location= ","url gsub "," status= "]}," ActionController AbstractResponse initialize":{"type":"method","name":"initialize","children":[],"call":["DEFAULT_HEADERS  dup ","DEFAULT_HEADERS  merge "]}," ActionController Rescue clean_backtrace":{"type":"method","name":"clean_backtrace","children":[],"call":["line gsub gsub gsub ","line gsub gsub ","line gsub ","exception backtrace collect ","exception backtrace ","File  expand_path ","File  dirname + ","File  dirname ","Object  const_defined? ","line sub ","backtrace map ","Rails  backtrace_cleaner clean ","Rails  backtrace_cleaner ","Rails  respond_to? ","exception exception backtrace  collect ","exception exception backtrace  ","exception backtrace  map ","Rails  exception backtrace _cleaner clean ","Rails  exception backtrace _cleaner "]}," ActionController Rescue template_path_for_local_rescue":{"type":"method","name":"template_path_for_local_rescue","children":[],"call":[" rescues_path "," rescue_templates [] ","exception class name ","exception class "," rescue_templates "]}," ActionController Rescue rescues_path":{"type":"method","name":"rescues_path","children":[],"call":["File  dirname + ","File  dirname ","RESCUES_TEMPLATE_PATH  [] "]}," ActionController Rescue perform_action_with_rescue":{"type":"method","name":"perform_action_with_rescue","children":[],"call":[" rescue_action "," perform_action_without_rescue "," set_trace_func ","Breakpoint  handle_breakpoint ","callstack first match captures ","callstack first match ","callstack first ","callstack slice! ","callstack first [] "," caller ","@params []= ","line == ","file == "," lambda ","md [] to_i ","md [] ","(str \"^(.+?):(\\\\d+)(?::in `(.+)')?$\") match ","exception backtrace first ","exception backtrace ","@params [] "," rescue_action_with_handler "," caller  first match captures "," caller  first match "," caller  first "," caller  slice! "," caller  first [] ","(str \"^(.+?):(\\d+)(?::in `(.+)')?$\") match  [] to_i ","(str \"^(.+?):(\\d+)(?::in `(.+)')?$\") match  [] "]}," ActionController Rescue rescue_action_locally":{"type":"method","name":"rescue_action_locally","children":[],"call":[" render_file "," rescues_path ","@headers []= ","@template render_file "," template_path_for_local_rescue "," add_variables_to_assigns ","File  dirname + ","File  dirname "," response_code_for_rescue "," render_for_file "," response content_type= "," response ","@template instance_variable_set ","@template send! ","@template render "]}," ActionController Rescue local_request?":{"type":"method","name":"local_request?","children":[],"call":["@request remote_addr == ","@request remote_addr "," request remote_ip == "," request remote_ip "," request "," request remote_addr == "," request remote_addr "," request remote_ip =~ "," request remote_addr =~ ","LOCALHOST  any? "]}," ActionController Rescue rescue_action_in_public":{"type":"method","name":"rescue_action_in_public","children":[],"call":[" render_text ","IO  read ","File  join "," render_optional_error_file "," response_code_for_rescue "]}," ActionController Rescue log_error":{"type":"method","name":"log_error","children":[],"call":[" logger fatal ","(str \"\\n\\n\") + + ","(str \"\\n\\n\") + "," clean_backtrace join "," clean_backtrace ","exception message ","exception class "," logger ","exception to_s ","ActionView TemplateError  === ","ActiveSupport Deprecation  silence ","(str \"\\n\") + + ","(str \"\\n\") + "]}," ActionController Rescue rescue_action":{"type":"method","name":"rescue_action","children":[],"call":[" rescue_action_in_public "," rescue_action_locally "," local_request? "," consider_all_requests_local "," log_error "," logger nil? "," logger "," erase_render_results "," performed? ","exception handle_response! "," response ","exception respond_to? "," erase_results "," rescue_action_without_handler "," rescue_with_handler "]}," ActionController Rescue append_features":{"type":"method","name":"append_features","children":[],"call":[]}," ActionController AbstractRequest reset_session":{"type":"method","name":"reset_session","children":[],"call":[]}," ActionController AbstractRequest session":{"type":"method","name":"session","children":[],"call":[]}," ActionController AbstractRequest cookies":{"type":"method","name":"cookies","children":[],"call":[]}," ActionController AbstractRequest host":{"type":"method","name":"host","children":[],"call":[" raw_host_with_port sub "," raw_host_with_port "]}," ActionController AbstractRequest env":{"type":"method","name":"env","children":[],"call":[]}," ActionController AbstractRequest request_parameters":{"type":"method","name":"request_parameters","children":[],"call":[" parse_formatted_request_parameters "]}," ActionController AbstractRequest query_parameters":{"type":"method","name":"query_parameters","children":[],"call":[" class parse_query_parameters "," query_string "," class "]}," ActionController AbstractRequest host_with_port":{"type":"method","name":"host_with_port","children":[],"call":[" host + "," port "," host "," port == "," protocol == "," protocol "," env [] "," env "," port_string "]}," ActionController AbstractRequest port":{"type":"method","name":"port","children":[],"call":[" env [] to_i "," env [] "," env ","@env [] to_i ","@env [] "," standard_port ","1 to_i "," raw_host_with_port =~ "," raw_host_with_port "]}," ActionController AbstractRequest path":{"type":"method","name":"path","children":[],"call":[" request_uri split first "," request_uri split "," request_uri ","path []= ","root length "," relative_url_root ","uri split first ","uri split ","path sub! "," path_info "," path_info empty? ! "," path_info empty? ","path [] "," relative_url_root length ","uri split first to_s ","ActionController Base  relative_url_root "," request_ request_uri  split first "," request_ request_uri  split "," request_ request_uri  ","uri split first  []= "," request_uri split first  []= ","uri split first to_s  []= "," relative_url_root  length "," relative_url_ relative_url_root  "," request_uri  split first "," request_uri  split ","uri split first  sub! "," request_uri split first  sub! ","uri split first to_s  sub! "," uri split first _info ","  request_uri split first _info "," uri split first to_s _info "," uri split first _info empty? ! ","  request_uri split first _info empty? ! "," uri split first to_s _info empty? ! "," uri split first _info empty? ","  request_uri split first _info empty? "," uri split first to_s _info empty? ","uri split first  [] "," request_uri split first  [] ","uri split first to_s  [] "," relative_url_ relative_url_root  length "," request_uri  split first to_s ","ActionController Base  relative_url_ relative_url_root  "]}," ActionController AbstractRequest protocol":{"type":"method","name":"protocol","children":[],"call":[" port == "," port "," ssl? "," env [] == "," env [] "," env "]}," ActionController AbstractRequest request_uri":{"type":"method","name":"request_uri","children":[],"call":[" env [] "," env ","uri << << ","uri << ","env_qs empty? ","(lvasgn :env_qs\n  (send\n    (send nil :env) :[]\n    (str \"QUERY_STRING\"))) nil? ","uri sub ","script_filename nil? "," env [] to_s match "," env [] to_s ","(lvasgn :env_qs\n  (send\n    (ivar :@env) :[]\n    (str \"QUERY_STRING\"))) nil? ","@env [] ","@env [] to_s match ","@env [] to_s ","@env []= ","? + "," env [] empty? "," env [] nil? ","request_uri sub! ","@env delete ","uri nil? ","uri blank? ","uri sub  << << "," env []  << << ","@env []  << << ","@env [] to_s  << << ","uri sub  << "," env []  << ","@env []  << ","@env [] to_s  << "," env []  empty? ","@env []  empty? ","@env [] to_s  empty? ","(lvasgn : env [] \n  (send\n    (send nil :env) :[]\n    (str \"QUERY_STRING\"))) nil? ","(lvasgn :@env [] \n  (send\n    (send nil :env) :[]\n    (str \"QUERY_STRING\"))) nil? ","(lvasgn :@env [] to_s \n  (send\n    (send nil :env) :[]\n    (str \"QUERY_STRING\"))) nil? ","uri sub  sub "," env []  sub ","@env []  sub ","@env [] to_s  sub "," env [] to_s match  nil? ","@env [] to_s match  nil? ","(lvasgn : env [] \n  (send\n    (ivar :@env) :[]\n    (str \"QUERY_STRING\"))) nil? ","(lvasgn :@env [] \n  (send\n    (ivar :@env) :[]\n    (str \"QUERY_STRING\"))) nil? ","(lvasgn :@env [] to_s \n  (send\n    (ivar :@env) :[]\n    (str \"QUERY_STRING\"))) nil? ","request_uri sub  sub! ","request_ env []  sub! ","request_@env []  sub! ","request_@env [] to_s  sub! "," env []  sub! ","uri sub  nil? "," env []  nil? ","@env []  nil? ","@env [] to_s  nil? ","uri sub  blank? "," env []  blank? ","@env []  blank? ","@env [] to_s  blank? "]}," ActionController AbstractRequest remote_ip":{"type":"method","name":"remote_ip","children":[],"call":[" env [] "," env ","(send\n  (send\n    (send\n      (send nil :env) :[]\n      (str \"HTTP_X_FORWARDED_FOR\")) :split\n    (str \",\")) :reject) first strip ","(send\n  (send\n    (send\n      (send nil :env) :[]\n      (str \"HTTP_X_FORWARDED_FOR\")) :split\n    (str \",\")) :reject) first ","ip =~ "," env [] split reject "," env [] split ","remote_ips first strip ","remote_ips first ","remote_ips empty? "," env include? ","@env [] ","@env [] split reject ","@env [] split ","@env include? ","ip strip =~ ","ip strip ","remote_ips last strip ","remote_ips last ","remote_ips pop ","TRUSTED_PROXIES  =~ ","remote_ips size > ","remote_ips size "," raise ","ActionControllerError  new ","@env [] inspect ","TRUSTED_PROXIES  !~ ","remote_ips include? ! ","remote_ips include? ","not_trusted_addrs first ","not_trusted_addrs empty? ","addr =~ ","remote_addr_list reject ","remote_addr_list blank? ","@env [] split collect ","@env [] split  first strip ","@env [] split  first ","@env [] split  empty? ","@env [] split  last strip ","@env [] split  last ","@env [] split  pop ","@env [] split  size > ","@env [] split  size ","@env [] split  include? ! ","@env [] split  include? "]}," ActionController AbstractRequest delete?":{"type":"method","name":"delete?","children":[],"call":[" method == "," method "," request_method == "," request_method "]}," ActionController AbstractRequest put?":{"type":"method","name":"put?","children":[],"call":[" method == "," method "," request_method == "," request_method "]}," ActionController AbstractRequest post?":{"type":"method","name":"post?","children":[],"call":[" method == "," method "," request_method == "," request_method "]}," ActionController AbstractRequest get?":{"type":"method","name":"get?","children":[],"call":[" method == "," method "]}," ActionController AbstractRequest method":{"type":"method","name":"method","children":[],"call":[" env [] downcase intern "," env [] downcase "," env [] "," env "," env [] downcase to_sym ","@env [] downcase to_sym ","@env [] downcase ","@env [] ","@request_method == "," parameters [] to_s downcase to_sym "," parameters [] to_s downcase "," parameters [] to_s "," parameters [] "," parameters ","@env [] == "," parameters [] blank? ! "," parameters [] blank? "," request_method "," request_method == "]}," ActionController AbstractRequest parameters":{"type":"method","name":"parameters","children":[],"call":[" request_parameters update "," query_parameters "," request_parameters "," request_parameters merge merge with_indifferent_access "," request_parameters merge merge "," path_parameters "," request_parameters merge "," request_parameters update update with_indifferent_access "," request_parameters update update "," request_parameters merge update with_indifferent_access "," request_parameters merge update "]}," ActionController Layout render_with_layout":{"type":"method","name":"render_with_layout","children":[],"call":[" render_without_layout "," active_layout ","@template render_file "," logger info "," logger "," logger nil? "," add_variables_to_assigns "," action_has_layout? "]}," ActionController Layout active_layout":{"type":"method","name":"active_layout","children":[],"call":["active_layout include? ","layout call "," send "," class read_inheritable_attribute "," class "," layout_directory? ! "," layout_directory? "," class default_layout "," send! "," response template template_format "," response template "," response "," __send__ "," default_template_format "," find_layout ","options [] ","layout respond_to? "," default_layout "]}," ActionController Layout ClassMethods layout":{"type":"method","name":"layout","children":[],"call":[" write_inheritable_attribute "," add_layout_conditions "]}," ActionController Layout append_features":{"type":"method","name":"append_features","children":[],"call":[]}," ActionController Flash clear_flash":{"type":"method","name":"clear_flash","children":[],"call":["@session []= ","@session [] >= ","@session [] ","@session [] nil? "]}," ActionController Flash fire_flash":{"type":"method","name":"fire_flash","children":[],"call":["@assigns []= ","@session [] ","@session [] empty? "," flash "," flash discard "]}," ActionController Flash keep_flash":{"type":"method","name":"keep_flash","children":[],"call":["@session []= "," flash keep "," flash "," warn "]}," ActionController Flash flash":{"type":"method","name":"flash","children":[],"call":["@session [] ","@session []= ","@session [] nil? ","FlashHash  new ","@session is_a? "]}," ActionController Flash append_features":{"type":"method","name":"append_features","children":[],"call":[]}," ActionController Filters InstanceMethods filter_class?":{"type":"method","name":"filter_class?","children":[],"call":["filter respond_to? "]}," ActionController Filters InstanceMethods filter_block?":{"type":"method","name":"filter_block?","children":[],"call":["filter arity == ","filter arity ","filter respond_to? "]}," ActionController Filters InstanceMethods call_filters":{"type":"method","name":"call_filters","children":[],"call":[" raise ","filter filter == ","filter filter "," filter_class? ","filter call == ","filter call "," filter_block? "," send == "," send ","Symbol  === ","filters each "," logger info "," logger ","filter_result == ","filter is_a? "," action_exempted? "," run_after_filters ","nesting != "," perform_action_without_filters "," performed? "," run_before_filters "]}," ActionController Filters InstanceMethods after_action":{"type":"method","name":"after_action","children":[],"call":[" call_filters "," class after_filters "," class "]}," ActionController Filters InstanceMethods before_action":{"type":"method","name":"before_action","children":[],"call":[" call_filters "," class before_filters "," class "]}," ActionController Filters InstanceMethods perform_action_with_filters":{"type":"method","name":"perform_action_with_filters","children":[],"call":[" after_action "," perform_action_without_filters "," before_action == "," before_action "," performed? ","before_action_result == "," call_filter "," class filter_chain "," class "," call_filters "," before_action  == "]}," ActionController Filters InstanceMethods append_features":{"type":"method","name":"append_features","children":[],"call":[]}," ActionController Filters ClassMethods ensure_filter_responds_to_before_and_after":{"type":"method","name":"ensure_filter_responds_to_before_and_after","children":[],"call":[" raise ","filter respond_to? "]}," ActionController Filters ClassMethods prepend_filter_to_chain":{"type":"method","name":"prepend_filter_to_chain","children":[],"call":[" write_inheritable_attribute ","filters + "," read_inheritable_attribute "," create_filters + "," filter_chain "," create_filters "," update_filter_chain "," find_filter_prepend_position "," find_filter_prepend_ find_filter_prepend_position ition "]}," ActionController Filters ClassMethods append_filter_to_chain":{"type":"method","name":"append_filter_to_chain","children":[],"call":[" write_inheritable_array "," create_filters "," update_filter_chain "," find_filter_append_position "," find_filter_append_ find_filter_append_position ition "]}," ActionController Filters ClassMethods after_filters":{"type":"method","name":"after_filters","children":[],"call":[" read_inheritable_attribute "," filter_chain select map "," filter_chain select "," filter_chain "]}," ActionController Filters ClassMethods before_filters":{"type":"method","name":"before_filters","children":[],"call":[" read_inheritable_attribute "," filter_chain select map "," filter_chain select "," filter_chain "]}," ActionController Filters ClassMethods prepend_around_filter":{"type":"method","name":"prepend_around_filter","children":[],"call":["filter after "," append_after_filter ","filter before "," prepend_before_filter "," ensure_filter_responds_to_before_and_after ","(lvar :filters) flatten ","filters flatten "," prepend_filter_to_chain ","(send\n  (lvar :filters) :map) each "," proxy_before_and_after_filter ","filters map "," extract_conditions "," filter_chain prepend_filter_to_chain "," filter_chain "]}," ActionController Filters ClassMethods append_around_filter":{"type":"method","name":"append_around_filter","children":[],"call":["filter after "," prepend_after_filter ","filter before "," append_before_filter "," ensure_filter_responds_to_before_and_after ","(lvar :filters) flatten ","filters flatten "," extract_conditions! "," append_filter_to_chain ","(send\n  (lvar :filters) :map) each "," proxy_before_and_after_filter ","filters map "," extract_conditions "," filter_chain append_filter_to_chain "," filter_chain "," extract_ extract_conditions! ! "," extract_ extract_conditions!  "]}," ActionController Filters ClassMethods prepend_after_filter":{"type":"method","name":"prepend_after_filter","children":[],"call":[" prepend_filter_to_chain ","filters << "," block_given? "," add_action_conditions "," extract_conditions! "," append_filter_to_chain "," filter_chain prepend_filter_to_chain "," filter_chain "," add_action_ extract_conditions!  "," extract_ extract_conditions! ! "]}," ActionController Filters ClassMethods append_after_filter":{"type":"method","name":"append_after_filter","children":[],"call":[" append_filter_to_chain ","filters << "," block_given? "," add_action_conditions "," extract_conditions! "," prepend_filter_to_chain "," filter_chain append_filter_to_chain "," filter_chain "," add_action_ extract_conditions!  "," extract_ extract_conditions! ! "]}," ActionController Filters ClassMethods prepend_before_filter":{"type":"method","name":"prepend_before_filter","children":[],"call":[" prepend_filter_to_chain ","filters << "," block_given? "," add_action_conditions "," extract_conditions! "," filter_chain prepend_filter_to_chain "," filter_chain "," add_action_ extract_conditions!  "," extract_ extract_conditions! ! "]}," ActionController Filters ClassMethods append_before_filter":{"type":"method","name":"append_before_filter","children":[],"call":[" append_filter_to_chain ","filters << "," block_given? "," add_action_conditions "," extract_conditions! "," filter_chain append_filter_to_chain "," filter_chain "," add_action_ extract_conditions!  "," extract_ extract_conditions! ! "]}," ActionController Filters append_features":{"type":"method","name":"append_features","children":[],"call":[]}," ActionController CgiResponse convert_content_type!":{"type":"method","name":"convert_content_type!","children":[],"call":["headers delete ","headers []= ","headers [] ","(str \"Content-Type\") each ","@headers []= ","@headers delete ","headers delete s delete ","headers delete s []= ","headers delete s [] ","@headers delete s []= ","@headers delete s delete "]}," ActionController CgiResponse out":{"type":"method","name":"out","children":[],"call":[" print ","@body call ","@body respond_to? ","@cgi header "," convert_content_type! ","$stdout binmode ","$stdout respond_to? ","@cgi send [] == ","@cgi send [] ","@cgi send ","$stdout sync= ","output flush ","output respond_to? ","output write ","output sync= ","output binmode "," set_content_length! ","@cgi send! [] == ","@cgi send! [] ","@cgi send! ","@cgi __send__ [] == ","@cgi __send__ [] ","@cgi __send__ "]}," ActionController CgiResponse initialize":{"type":"method","name":"initialize","children":[],"call":[]}," ActionController CgiRequest new_session":{"type":"method","name":"new_session","children":[],"call":["CGI Session  new ","DEFAULT_SESSION_OPTIONS  merge merge ","DEFAULT_SESSION_OPTIONS  merge "," session_options_with_string_keys merge "," session_options_with_string_keys "," session_options_with_string_keys update ","CGI Session  new delete ","Hash  new ","@session_options == "]}," ActionController CgiRequest method_missing":{"type":"method","name":"method_missing","children":[],"call":["@cgi send ","@cgi send! ","@cgi __send__ "]}," ActionController CgiRequest reset_session":{"type":"method","name":"reset_session","children":[],"call":[" new_session ","@session_options == ","@session delete ","CGI Session  === ","@session is_a? "," new_session _options == "," new_session  delete "," new_session  is_a? "]}," ActionController CgiRequest session":{"type":"method","name":"session","children":[],"call":[" raise ","Session contained objects where the class definition wasn't available.  + + ","Session contained objects where the class definition wasn't available.  + ","@session delete ","@session [] ","CGI Session  new ","DEFAULT_SESSION_OPTIONS  merge ","@session_options == ","@session nil? "," session_options_with_string_keys ","e class ","e message ","Module  const_missing ","e message =~ "," new_session "," session_options_with_string_keys [] == "," session_options_with_string_keys [] "," stale_session_check! ","Hash  new "," request_parameters [] "," request_parameters "," cookie_only? "," query_parameters [] "," query_parameters ","CGI Session  new  delete "," new_session  delete ","Hash  new  delete ","CGI Session  new  [] "," new_session  [] ","Hash  new  [] ","CGI Session  new _options == "," new_session _options == ","Hash  new _options == ","CGI Session  new  nil? "," new_session  nil? ","Hash  new  nil? "]}," ActionController CgiRequest host":{"type":"method","name":"host","children":[],"call":["@cgi host split first ","@cgi host split ","@cgi host "," env [] "," env ","@cgi host to_s split first ","@cgi host to_s split ","@cgi host to_s "," host_with_port [] "," host_with_port "," host_with_port_without_standard_port_handling sub "," host_with_port_without_standard_port_handling "]}," ActionController CgiRequest cookies":{"type":"method","name":"cookies","children":[],"call":["@cgi cookies freeze ","@cgi cookies "]}," ActionController CgiRequest env":{"type":"method","name":"env","children":[],"call":["@cgi send "]}," ActionController CgiRequest request_parameters":{"type":"method","name":"request_parameters","children":[],"call":["CGIMethods  parse_request_parameters ","@cgi params ","CGIMethods  parse_formatted_request_parameters "," env [] "," env "," post_format "," formatted_post? ","@env [] "," content_type ","ActionController Base  param_parsers has_key? ","ActionController Base  param_parsers "," parse_formatted_request_parameters "]}," ActionController CgiRequest query_parameters":{"type":"method","name":"query_parameters","children":[],"call":["CGIMethods  parse_query_parameters ","@cgi query_string ","(lvasgn :qs\n  (send\n    (self) :query_string)) empty? "," query_string ","qs empty? "," class parse_query_parameters "," class ","(lvasgn : query_string \n  (send\n    (self) :query_string)) empty? "," query_string  empty? "]}," ActionController CgiRequest initialize":{"type":"method","name":"initialize","children":[],"call":["@cgi send ","session_options delete ","@cgi send! ","@cgi __send__ "]}," ActionController Base process_cgi":{"type":"method","name":"process_cgi","children":[],"call":[" process out "," process ","CgiResponse  new ","CgiRequest  new ","CGI  new "]}," CGIMethods build_deep_hash":{"type":"method","name":"build_deep_hash","children":[],"call":[]}," CGIMethods get_levels":{"type":"method","name":"get_levels","children":[],"call":[]}," CGIMethods get_typed_value":{"type":"method","name":"get_typed_value","children":[],"call":[" raise ","value inspect ","value rewind ","value read ","value respond_to? ","File  basename "," full_original_filename ","md captures first ","md captures ","(str \"^(?:.*[:\\\\\\\\/])?(.*)\") match "," alias_method ","value original_filename blank? ! ","value original_filename blank? ","value original_filename ","value content_type blank? ! ","value content_type blank? ","value content_type "," get_typed_value ","value map ","(str \"^(?:.*[:\\\\/])?(.*)\") match  captures first ","(str \"^(?:.*[:\\\\/])?(.*)\") match  captures "]}," CGIMethods parse_request_parameters":{"type":"method","name":"parse_request_parameters","children":[],"call":["parser result "," raise ","value inspect ","params delete ","value empty? ","parser parse "," get_typed_value ","value shift ","value is_a? ","parser result []= ","value [] ","key include? ! ","key include? ","key blank? ","params empty? ","params dup ","FormEncodedPairParser  new ","FormEncodedPairParser  new  result ","params dup  delete ","FormEncodedPairParser  new  parse ","FormEncodedPairParser  new  result []= ","params dup  empty? ","params dup  dup "]}," CGIMethods parse_query_parameters":{"type":"method","name":"parse_query_parameters","children":[],"call":["FormEncodedPairParser  new result ","FormEncodedPairParser  new ","(send\n  (send\n    (lvar :query_string) :split\n    (str \"&\")) :collect) compact ","CGI  unescape ","value empty? ","value nil? ","key empty? ","chunk split ","chunk empty? ","query_string split collect ","query_string split ","CGI  unescape  empty? ","CGI  unescape  nil? "]}," CGI session":{"type":"method","name":"session","children":[],"call":["CGI Session  new ","parameters []= ","parameters nil? "]}," CGI redirect":{"type":"method","name":"redirect","children":[],"call":[" header "]}," CGI request_parameters":{"type":"method","name":"request_parameters","children":[],"call":["CGIMethods  parse_request_parameters "," params "," env_table "]}," CGI query_parameters":{"type":"method","name":"query_parameters","children":[],"call":["CGIMethods  parse_query_parameters "," query_string "]}," CGI parameters":{"type":"method","name":"parameters","children":[],"call":[" request_parameters update "," query_parameters "," request_parameters "]}," CGI escapeHTML":{"type":"method","name":"escapeHTML","children":[],"call":[" escapeHTML_fail_on_nil ","string nil? "]}," ActionController Benchmarking active_record_runtime":{"type":"method","name":"active_record_runtime","children":[],"call":[" sprintf ","(send\n  (lvar :db_runtime) :/\n  (lvar :runtime)) * ","db_runtime / ","ActiveRecord Base  connection reset_runtime ","ActiveRecord Base  connection ","(send\n  (lvar :db_runtime) :*\n  (int 100)) / ","db_runtime * "," | DB: %.5f (%d%%) % ","db_percentage to_i ","db_runtime * / ","DB: %.0f % ","(send\n  (lvar :ActiveRecord Base  connection reset_runtime ) :/\n  (lvar :runtime)) * ","ActiveRecord Base  connection reset_runtime  / ","(send\n  (lvar :ActiveRecord Base  connection reset_runtime ) :*\n  (int 100)) / ","ActiveRecord Base  connection reset_runtime  * ","(send\n  (lvar :db_runtime) :/\n  (lvar :runtime)) *  to_i ","(send\n  (lvar :db_runtime) :*\n  (int 100)) /  to_i ","db_runtime * /  to_i ","ActiveRecord Base  connection reset_runtime  * / "]}," ActionController Benchmarking rendering_runtime":{"type":"method","name":"rendering_runtime","children":[],"call":[" sprintf ","(send\n  (ivar :@rendering_runtime) :/\n  (lvar :runtime)) * ","@rendering_runtime / ","(send\n  (ivar :@rendering_runtime) :*\n  (int 100)) / ","@rendering_runtime * "," | Rendering: %.5f (%d%%) % ","percentage to_i ","@rendering_runtime * / ","@rendering_runtime * /  to_i "]}," ActionController Benchmarking perform_action_with_benchmark":{"type":"method","name":"perform_action_with_benchmark","children":[],"call":[" logger info "," logger ","log_message << "," active_record_runtime ","ActiveRecord Base  connected? ","Object  const_defined? "," rendering_runtime ","(send\n  (int 1) :/\n  (lvar :runtime)) floor ","1 / "," sprintf ","(send\n  (block\n    (send\n      (const nil :Benchmark) :measure)\n    (args)\n    (send nil :perform_action_without_benchmark)) :real) max ","(send\n  (const nil :Benchmark) :measure) real "," perform_action_without_benchmark ","Benchmark  measure "," logger nil? "," complete_request_uri "," headers [] "," headers "," response headers []= "," response headers "," response ","seconds * "," active_record_runtime + "," view_runtime ","%.0f % "," response status ","Completed in %.0fms % ","(block\n  (send\n    (const nil :Benchmark) :ms)\n  (args)\n  (send nil :perform_action_without_benchmark)) max ","Benchmark  ms ","Completed in %.0fms %  << "," active_record_(send\n  (block\n    (send\n      (const nil :Benchmark) :measure)\n    (args)\n    (send nil :perform_action_without_benchmark)) :real) max  "," rendering_(send\n  (block\n    (send\n      (const nil :Benchmark) :measure)\n    (args)\n    (send nil :perform_action_without_benchmark)) :real) max  ","(send\n  (int 1) :/\n  (lvar :(send\n  (block\n    (send\n      (const nil :Benchmark) :measure)\n    (args)\n    (send nil :perform_action_without_benchmark)) :real) max )) floor ","(send\n  (block\n    (send\n      (const nil :Benchmark) :measure)\n    (args)\n    (send nil :perform_action_without_benchmark)) :real) max  * "," active_record_(send\n  (block\n    (send\n      (const nil :Benchmark) :measure)\n    (args)\n    (send nil :perform_action_without_benchmark)) :real) max  + "," view_(send\n  (block\n    (send\n      (const nil :Benchmark) :measure)\n    (args)\n    (send nil :perform_action_without_benchmark)) :real) max  ","Completed in %.0f(block\n  (send\n    (const nil :Benchmark) :ms)\n  (args)\n  (send nil :perform_action_without_benchmark)) max  % ","(block\n  (send\n    (const nil :Benchmark) :(block\n  (send\n    (const nil :Benchmark) :ms)\n  (args)\n  (send nil :perform_action_without_benchmark)) max )\n  (args)\n  (send nil :perform_action_without_benchmark)) max ","Benchmark  (block\n  (send\n    (const nil :Benchmark) :ms)\n  (args)\n  (send nil :perform_action_without_benchmark)) max  "]}," ActionController Benchmarking render_with_benchmark":{"type":"method","name":"render_with_benchmark","children":[],"call":["(send\n  (const nil :Benchmark) :measure) real "," render_without_benchmark ","Benchmark  measure "," logger nil? "," logger ","ActiveRecord Base  connection reset_runtime ","ActiveRecord Base  connection ","ActiveRecord Base  connected? ","Object  const_defined? ","Benchmark  realtime ","Benchmark  ms "]}," ActionController Benchmarking append_features":{"type":"method","name":"append_features","children":[],"call":[]}," ActionController Base assert_existance_of_template_file":{"type":"method","name":"assert_existance_of_template_file","children":[],"call":[" raise "," ignore_missing_templates "," template_exists? ","template_name =~ ","@template send "]}," ActionController Base template_public?":{"type":"method","name":"template_public?","children":[],"call":["@template file_public? "]}," ActionController Base template_exists?":{"type":"method","name":"template_exists?","children":[],"call":["@template file_exists? ","@template finder file_exists? ","@template finder ","@template send "]}," ActionController Base close_session":{"type":"method","name":"close_session","children":[],"call":["@session close ","Hash  === ","@session nil? ","@_session close ","@_session respond_to? "]}," ActionController Base request_origin":{"type":"method","name":"request_origin","children":[],"call":["Time  now to_s ","Time  now ","@request remote_addr ","@request remote_ip "," request remote_ip "," request "]}," ActionController Base protected_instance_variables":{"type":"method","name":"protected_instance_variables","children":[],"call":[" view_controller_internals "]}," ActionController Base add_class_variables_to_assigns":{"type":"method","name":"add_class_variables_to_assigns","children":[],"call":["@assigns []= "," send ","(str \"template_root\") each ","(str \"view_paths\") each "]}," ActionController Base add_instance_variables_to_assigns":{"type":"method","name":"add_instance_variables_to_assigns","children":[],"call":["@assigns []= "," instance_variable_get ","var [] ","protected_variables_cache include? "," instance_variables each "," instance_variables "," protected_instance_variables ","@@protected_variables_cache include? ","h []= "," protected_instance_variables inject ","Set  new ","(send\n  (send nil :instance_variable_names) :-\n  (cvar :@@protected_view_variables)) each "," instance_variable_names - "," instance_variable_names "," protected_instance_variables  include? ","@@ protected_instance_variables  include? "]}," ActionController Base add_variables_to_assigns":{"type":"method","name":"add_variables_to_assigns","children":[],"call":[" add_class_variables_to_assigns "," view_controller_internals "," add_instance_variables_to_assigns "]}," ActionController Base action_methods":{"type":"method","name":"action_methods","children":[],"call":["action_methods + ","klass instance_methods ","action_controller_classes inject ","(const nil :Object) include? "," class ancestors reject "," class ancestors "," class "," class action_methods ","klass public_instance_methods "]}," ActionController Base perform_action":{"type":"method","name":"perform_action","children":[],"call":[" raise "," caller "," action_name "," render "," template_public? "," template_exists? "," send "," action_methods include? "," action_methods "," performed? "," class action_methods include? "," class action_methods "," class "," respond_to? "," default_render "," method_missing "," action_methods sort to_sentence "," action_methods sort ","e path == "," default_template_name ","e path "]}," ActionController Base log_processing":{"type":"method","name":"log_processing","children":[],"call":[" logger info ","@params inspect "," logger "," request_origin "," action_name "," controller_class_name ","@session session_id ","@session respond_to? "," request method to_s upcase "," request method to_s "," request method "," request "," filter_parameters inspect "," filter_parameters "," respond_to? "," params inspect "," params ","@_session session_id ","@_session respond_to? "," logger info? "," class name "," class "," log_processing_for_parameters "," log_processing_for_session_id "," log_processing_for_request_id "]}," ActionController Base initialize_current_url":{"type":"method","name":"initialize_current_url","children":[],"call":["UrlRewriter  new "," action_name "," controller_name ","@params clone "," params clone "," params "," request "]}," ActionController Base assign_shortcuts":{"type":"method","name":"assign_shortcuts","children":[],"call":["@response headers ","@response template assigns ","@response template ","@response session ","@response session= ","request session ","request cookies ","request parameters "," assign_deprecated_shortcuts ","@_response headers ","@_response template assigns ","@_response template ","@_response session ","@_response session= "]}," ActionController Base initialize_template_class":{"type":"method","name":"initialize_template_class","children":[],"call":[" raise ","response template= "," template_class new "," template_root "," template_class ","response redirected_to= "," class view_class new "," class view_root "," class "," class view_class ","response template extend "," class master_helper_module ","response template ","ActionView Base  new "," view_paths "," class view_paths ","response template helpers send ","response template helpers "]}," ActionController Base reset_session":{"type":"method","name":"reset_session","children":[],"call":["@response session= ","@request session ","@request reset_session "," response session= "," response "," request session "," request "," request reset_session ","ObjectSpace  undefine_finalizer "]}," ActionController Base cookie":{"type":"method","name":"cookie","children":[],"call":["@response headers [] << ","CGI Cookie  new ","@response headers [] ","@response headers "]}," ActionController Base redirect_to_url":{"type":"method","name":"redirect_to_url","children":[],"call":["@response redirect "," logger info "," logger "," logger nil? "," redirect_to "," headers []= "," headers "," performed? "]}," ActionController Base redirect_to_path":{"type":"method","name":"redirect_to_path","children":[],"call":[" redirect_to_url ","@request protocol + + ","@request protocol + ","@request host_with_port ","@request protocol "," redirect_to "]}," ActionController Base redirect_to":{"type":"method","name":"redirect_to","children":[],"call":[" redirect_to_url "," url_for ","@response redirected_to_method_params= ","@response redirected_to= ","parameters_for_method_reference empty? "," response redirected_to_method_params= "," response "," response redirected_to= "," redirect_to "," raise "," request env [] "," request env "," request "," request protocol + + "," request protocol + "," request host_with_port "," request protocol "," response redirect "," logger info "," logger "," performed? "," interpret_status "," logger info? ","response_status [] ","options delete ","options [] ","options is_a? ","ActionControllerError  new ","options nil? "," redirect_to_full_url "," request headers [] "," request headers "," interpret_response_status []  "," interpret_options delete  ","response_response_status []  [] ","response_options delete  [] "]}," ActionController Base default_url_options":{"type":"method","name":"default_url_options","children":[],"call":[]}," ActionController Base rewrite_options":{"type":"method","name":"rewrite_options","children":[],"call":["defaults merge "," default_url_options "," default_url_options  merge "]}," ActionController Base send_file":{"type":"method","name":"send_file","children":[],"call":[" print ","file read ","options [] ","File  open "," render_text "," logger info "," logger "," logger nil? ","@headers []= ","File  size ","CGI  rfc1123_date ","Time  now ","File  mtime ","@request env [] =~ ","@request env [] ","@request env ","(pair\n  (sym :filename)\n  (send\n    (const nil :File) :basename\n    (lvar :path))) merge ","File  basename ","$stdout syswrite ","file sysread "," send_file_headers! "," raise ","File  readable? ","File  file? ","$stdout write ","$stdout respond_to? ","(pair\n  (sym :filename)\n  (send\n    (const nil :File) :basename\n    (lvar :path))) merge  [] "]}," ActionController Base render_text":{"type":"method","name":"render_text","children":[],"call":["@response body= "," block_given? ","@response headers []= ","@response headers "," add_variables_to_assigns ","(or\n  (lvar :status)\n  (const nil :DEFAULT_RENDER_STATUS_CODE)) to_s "," response body= "," response "," response body << "," response body "," response headers []= "," interpret_status "," response headers "," performed? "," render "]}," ActionController Base render_template":{"type":"method","name":"render_template","children":[],"call":[" render_text ","@template render_template "," add_variables_to_assigns "," render "]}," ActionController Base render_file":{"type":"method","name":"render_file","children":[],"call":[" render_text ","@template render_file "," add_variables_to_assigns "," logger info "," logger "," logger nil? "," assert_existance_of_template_file ","(str \"Rendering \") + "," assert_existence_of_template_file "," render "]}," ActionController Base render_action":{"type":"method","name":"render_action","children":[],"call":[" render "," controller_name "," default_template_name "," render_without_layout "," render_with_layout "," template_exempt_from_layout? ! "," template_exempt_from_layout? ","action_name to_s "," default_ default_template_name _name ","  default_template_name _exempt_from_layout? ! ","  default_template_name _exempt_from_layout? "]}," ActionController Base render":{"type":"method","name":"render","children":[],"call":[" render_file "," action_name "," controller_name "," default_template_name ","options [] "," render_text "," render_javascript ","generator to_s ","ActionView Helpers PrototypeHelper JavaScriptGenerator  new ","@template send "," add_variables_to_assigns "," render_partial ","ActionView Base ObjectWrapper  new "," render_partial_collection ","partial == "," render_xml "," render_action "," render_template "," headers []= "," headers ","options == ","options is_a? "," raise "," performed? "," render_json ","ActiveSupport Deprecation  silence "," response content_type= ","content_type to_s "," response ","ActiveSupport Deprecation  warn "," caller ","(str \"You called render('\") + ","options nil? "," render_for_file "," render_for_text ","@template send! ","options [] blank? ","json to_json ","json is_a? ","xml to_xml ","xml respond_to? "," render_with_no_layout "," render_with_a_layout "," template_exempt_from_layout? ! "," template_exempt_from_layout? ","action_name to_s ","@template render_template "," response headers []= "," url_for "," response headers ","options is_a? ! "," response content_type ","options has_key? ","ActionView InlineTemplate  new ","options inspect ","extra_options merge ","extra_options inspect ","extra_options is_a? ! ","extra_options is_a? ","@template render ","options []= ","options [] == ","options merge "," logger info "," logger "," response layout= "," pick_layout "," render "," default_template ","ActiveSupport JSON  encode ","options include? ","layout path_without_format_and_extension ","extra_options []= ","options to_s index ","options to_s "," validate_render_arguments "," block_given? "," render_options []  "," options []  "," default_options [] _name "," default_ default_template_name _name ","extra_options merge  [] "," render_@template render  ","ActionView Helpers PrototypeHelper JavaScriptGenerator  new  to_s ","@options []  send ","@ default_template_name  send "," render_ default_template_name  "," render_partial_options []  "," render_ default_template_name _collection "," render_options [] _collection "," default_template_name  == ","options []  == ","extra_options merge  == ","extra_options merge  is_a? "," render_json to_json  "," render_ActiveSupport JSON  encode  "," render_options [] on "," response options [] = ","options []  to_s ","extra_options merge  nil? "," render_for_options []  "," render_for_@template render  ","@options []  send! ","@ default_template_name  send! ","extra_options merge  [] blank? ","options []  to_options []  ","json to_json  to_json to_json  ","ActiveSupport JSON  encode  to_ActiveSupport JSON  encode  ","options [] on to_options [] on ","options []  is_a? ","json to_json  is_a? ","ActiveSupport JSON  encode  is_a? ","options [] on is_a? ","options []  respond_to? "," render_with_no_ pick_layout  "," render_with_a_ pick_layout  "," options [] _exempt_from_layout? ! ","  default_template_name _exempt_from_layout? ! "," template_exempt_from_ pick_layout ? ! "," options [] _exempt_from_layout? ","  default_template_name _exempt_from_layout? "," template_exempt_from_ pick_layout ? ","@options []  render_options []  ","@ default_template_name  render_ default_template_name  ","extra_options merge  is_a? ! "," response options []  ","extra_options merge  has_key? ","extra_options merge  inspect ","extra_extra_options merge  merge ","extra_extra_options merge  inspect ","extra_extra_options merge  is_a? ! ","extra_extra_options merge  is_a? ","@options []  render ","@ default_template_name  render ","extra_options merge  []= ","extra_options merge  [] == ","extra_options merge  merge "," response  pick_layout = "," pick_ pick_layout  "," default_options []  "," default_ default_template_name  ","extra_options merge  include? "," pick_layout  path_without_format_and_extension ","extra_extra_options merge  []= ","extra_options merge  to_s index ","extra_options merge  to_s "]}," ActionController Base action_name":{"type":"method","name":"action_name","children":[],"call":["@params [] "]}," ActionController Base controller_name":{"type":"method","name":"controller_name","children":[],"call":["(send\n  (send\n    (send nil :controller_class_name) :sub\n    (regexp\n      (str \"Controller\")\n      (regopt))\n    (str \"\")) :gsub\n  (regexp\n    (str \"([a-z])([A-Z])\")\n    (regopt))) downcase ","1 + + ","2 downcase ","1 + "," controller_class_name sub gsub "," controller_class_name sub "," controller_class_name "," class controller_name "," class ","Inflector  underscore "," controller_class_name sub underscore "]}," ActionController Base controller_class_name":{"type":"method","name":"controller_class_name","children":[],"call":[" class name split last "," class name split "," class name "," class "," class controller_class_name ","Inflector  demodulize "," name "," name demodulize "]}," ActionController Base url_for":{"type":"method","name":"url_for","children":[],"call":["@url rewrite "," rewrite_options "," send ","ActiveSupport Deprecation  warn "," caller ","(str \"You called url_for(:\") + "," polymorphic_url "]}," ActionController Base process":{"type":"method","name":"process","children":[],"call":[" close_session "," perform_action "," log_processing "," logger nil? "," logger "," initialize_current_url "," assign_shortcuts "," initialize_template_class "," new process "," new "," send "," process_cleanup "," forget_variables_added_to_assigns "," assign_names "," assign_default_content_type_and_charset ","response prepare! "," component_request? ","response request= "," send_response "]}," ActionController Base add_template_helper":{"type":"method","name":"add_template_helper","children":[],"call":[" template_class class_eval "," template_class "]}," Test Unit Assertions find_record_in_template":{"type":"method","name":"find_record_in_template","children":[],"call":[" assert_kind_of "," assert_not_nil ","response template_objects [] ","response template_objects "," assert_template_has "," acquire_assertion_target ","@response template_objects [] ","@response template_objects "," acquire_assertion_target  template_objects [] "," acquire_assertion_target  template_objects ","@ acquire_assertion_target  template_objects [] ","@ acquire_assertion_target  template_objects "]}," Test Unit Assertions glue_columns":{"type":"method","name":"glue_columns","children":[],"call":["columns class == ","columns class ","cols << "]}," Test Unit Assertions assert_invalid_column_on_record":{"type":"method","name":"assert_invalid_column_on_record","children":[],"call":["cols empty? "," assert_block "," build_message ","cols join ","record errors invalid? ","record errors ","cols delete_if "," glue_columns ","record validate "," find_record_in_template ","record send "," glue_columns  empty? "," glue_columns  join "," find_record_in_template  errors invalid? "," find_record_in_template  errors "," glue_columns  delete_if "," find_record_in_template  validate "," find_ find_record_in_template _in_template "," find_record_in_template  send "]}," Test Unit Assertions assert_valid_column_on_record":{"type":"method","name":"assert_valid_column_on_record","children":[],"call":["cols empty? "," assert_block "," build_message ","cols join ","record errors invalid? ! ","record errors invalid? ","record errors ","cols delete_if "," glue_columns ","record validate "," find_record_in_template ","record send "," glue_columns  empty? "," glue_columns  join "," find_record_in_template  errors invalid? ! "," find_record_in_template  errors invalid? "," find_record_in_template  errors "," glue_columns  delete_if "," find_record_in_template  validate "," find_ find_record_in_template _in_template "," find_record_in_template  send "]}," Test Unit Assertions assert_invalid_record":{"type":"method","name":"assert_invalid_record","children":[],"call":["record valid? ! ","record valid? "," assert_block "," build_message "," find_record_in_template "," find_record_in_template  valid? ! "," find_record_in_template  valid? "," find_ find_record_in_template _in_template "]}," Test Unit Assertions assert_valid_record":{"type":"method","name":"assert_valid_record","children":[],"call":["record valid? "," assert_block "," build_message ","record errors full_messages ","record errors "," find_record_in_template "," find_record_in_template  valid? "," find_record_in_template  errors full_messages "," find_record_in_template  errors "," find_ find_record_in_template _in_template "]}," Test Unit Assertions acquire_assertion_target":{"type":"method","name":"acquire_assertion_target","children":[],"call":["target nil? ! ","target nil? "," assert_block ","ActionController TestResponse  assertion_target ","ActionController TestResponse  assertion_target  nil? ! ","ActionController TestResponse  assertion_target  nil? ","ActionController TestResponse  assertion_ActionController TestResponse  assertion_target  "]}," Test Unit Assertions assert_template_xpath_match":{"type":"method","name":"assert_template_xpath_match","children":[],"call":["matches == "," assert_block "," build_message ","matches first ","matches length < ","matches length ","matches << ","e text ","xml elements each ","xml elements ","REXML Document  new ","response body "," acquire_assertion_target "," flunk ","matches empty? ","@response body ","matches first  == ","matches first  first ","matches first  length < ","matches first  length ","matches first  << "," acquire_assertion_target  body ","matches first  empty? ","@ acquire_assertion_target  body "]}," Test Unit Assertions assert_template_has_no":{"type":"method","name":"assert_template_has_no","children":[],"call":["response has_template_object? ! ","response has_template_object? "," assert_block "," build_message ","response template_objects [] ","response template_objects "," acquire_assertion_target ","@response has_template_object? ! ","@response has_template_object? ","@response template_objects [] ","@response template_objects "," acquire_assertion_target  has_template_object? ! "," acquire_assertion_target  has_template_object? "," acquire_assertion_target  template_objects [] "," acquire_assertion_target  template_objects ","@ acquire_assertion_target  has_template_object? ! ","@ acquire_assertion_target  has_template_object? ","@ acquire_assertion_target  template_objects [] ","@ acquire_assertion_target  template_objects "]}," Test Unit Assertions assert_template_has":{"type":"method","name":"assert_template_has","children":[],"call":["response has_template_object? "," assert_block "," build_message "," acquire_assertion_target ","@response has_template_object? "," acquire_assertion_target  has_template_object? ","@ acquire_assertion_target  has_template_object? "]}," Test Unit Assertions assert_redirect_url_match":{"type":"method","name":"assert_redirect_url_match","children":[],"call":["response redirect_url_match? "," assert_block "," build_message ","response redirect_url "," acquire_assertion_target "," assert_redirect ","@response redirect_url_match? ","@response redirect_url "," acquire_assertion_target  redirect_url_match? "," acquire_assertion_target  redirect_url ","@ acquire_assertion_target  redirect_url_match? ","@ acquire_assertion_target  redirect_url "]}," Test Unit Assertions assert_redirect_url":{"type":"method","name":"assert_redirect_url","children":[],"call":["response redirect_url == ","response redirect_url "," assert_block "," build_message "," acquire_assertion_target "," assert_redirect ","@response redirect_url == ","@response redirect_url "," acquire_assertion_target  redirect_url == "," acquire_assertion_target  redirect_url ","@ acquire_assertion_target  redirect_url == ","@ acquire_assertion_target  redirect_url "]}," Test Unit Assertions assert_redirected_to":{"type":"method","name":"assert_redirected_to","children":[],"call":["options [] == ","response redirected_to [] ","response redirected_to ","options [] ","options keys all? ","options keys ","response redirected_to == "," assert_block "," build_message "," acquire_assertion_target "," assert_redirect ","options is_a? ","@response redirected_to [] ","@response redirected_to ","@response redirected_to [] to_param ","@response redirected_to [] respond_to? ","@response redirected_to [] nil? ","ActionController Routing  controller_relative_to ","@controller class controller_path ","@controller class ","k == ","@response redirected_to == ","@response redirect_url "," assert_equal ","(send\n  (array\n    (lvar :options)\n    (send\n      (ivar :@response) :redirect_url)) :collect) flatten ","/ + ","p [] == ","p [] ","url_regexp =~ ","(lvar :options) collect "," assert_response "," clean_backtrace ","options diff ","@response redirected_to is_a? ","response redirected_to [] to_param ","response redirected_to [] respond_to? "," acquire_assertion_target  redirected_to [] "," acquire_assertion_target  redirected_to "," acquire_assertion_target  redirected_to == ","@ acquire_assertion_target  redirected_to [] ","@ acquire_assertion_target  redirected_to ","@ acquire_assertion_target  redirected_to [] to_param ","@ acquire_assertion_target  redirected_to [] respond_to? ","@ acquire_assertion_target  redirected_to [] nil? ","@ acquire_assertion_target  redirected_to == ","@ acquire_assertion_target  redirect_url ","(send\n  (array\n    (lvar :options)\n    (send\n      (ivar :@ acquire_assertion_target ) :redirect_url)) :collect) flatten "," assert_ acquire_assertion_target  ","@ acquire_assertion_target  redirected_to is_a? "," acquire_assertion_target  redirected_to [] to_param "," acquire_assertion_target  redirected_to [] respond_to? "]}," Test Unit Assertions assert_redirect":{"type":"method","name":"assert_redirect","children":[],"call":["response redirect? "," assert_block "," build_message ","response response_code "," acquire_assertion_target "," assert_response "," acquire_assertion_target  redirect? "," acquire_assertion_target   acquire_assertion_target _code "," assert_ acquire_assertion_target  "]}," Test Unit Assertions assert_flash_not_empty":{"type":"method","name":"assert_flash_not_empty","children":[],"call":["response has_flash_with_contents? "," assert_block "," build_message "," acquire_assertion_target ","@response has_flash_with_contents? "," acquire_assertion_target  has_flash_with_contents? ","@ acquire_assertion_target  has_flash_with_contents? "]}," Test Unit Assertions assert_flash_empty":{"type":"method","name":"assert_flash_empty","children":[],"call":["response has_flash_with_contents? ! ","response has_flash_with_contents? "," assert_block "," build_message ","response flash "," acquire_assertion_target ","@response has_flash_with_contents? ! ","@response has_flash_with_contents? ","@response flash "," acquire_assertion_target  has_flash_with_contents? ! "," acquire_assertion_target  has_flash_with_contents? "," acquire_assertion_target  flash ","@ acquire_assertion_target  has_flash_with_contents? ! ","@ acquire_assertion_target  has_flash_with_contents? ","@ acquire_assertion_target  flash "]}," Test Unit Assertions assert_flash_not_exists":{"type":"method","name":"assert_flash_not_exists","children":[],"call":["response has_flash? ! ","response has_flash? "," assert_block "," build_message ","response flash "," acquire_assertion_target ","@response has_flash? ! ","@response has_flash? ","@response flash "," acquire_assertion_target  has_flash? ! "," acquire_assertion_target  has_flash? "," acquire_assertion_target  flash ","@ acquire_assertion_target  has_flash? ! ","@ acquire_assertion_target  has_flash? ","@ acquire_assertion_target  flash "]}," Test Unit Assertions assert_flash_exists":{"type":"method","name":"assert_flash_exists","children":[],"call":["response has_flash? "," assert_block "," build_message ","response session [] ","response session "," acquire_assertion_target ","@response has_flash? ","@response session [] ","@response session "," acquire_assertion_target  has_flash? "," acquire_assertion_target  session [] "," acquire_assertion_target  session ","@ acquire_assertion_target  has_flash? ","@ acquire_assertion_target  session [] ","@ acquire_assertion_target  session "]}," Test Unit Assertions assert_flash_has_no":{"type":"method","name":"assert_flash_has_no","children":[],"call":["response has_flash_object? ! ","response has_flash_object? "," assert_block "," build_message ","response flash "," acquire_assertion_target ","@response has_flash_object? ! ","@response has_flash_object? ","@response flash "," acquire_assertion_target  has_flash_object? ! "," acquire_assertion_target  has_flash_object? "," acquire_assertion_target  flash ","@ acquire_assertion_target  has_flash_object? ! ","@ acquire_assertion_target  has_flash_object? ","@ acquire_assertion_target  flash "]}," Test Unit Assertions assert_flash_has":{"type":"method","name":"assert_flash_has","children":[],"call":["response has_flash_object? "," assert_block "," build_message ","response flash "," acquire_assertion_target ","@response has_flash_object? ","@response flash "," acquire_assertion_target  has_flash_object? "," acquire_assertion_target  flash ","@ acquire_assertion_target  has_flash_object? ","@ acquire_assertion_target  flash "]}," Test Unit Assertions assert_session_has_no":{"type":"method","name":"assert_session_has_no","children":[],"call":["response has_session_object? ! ","response has_session_object? "," assert_block "," build_message ","response session "," acquire_assertion_target ","@response has_session_object? ! ","@response has_session_object? ","@response session "," acquire_assertion_target  has_session_object? ! "," acquire_assertion_target  has_session_object? "," acquire_assertion_target  session ","@ acquire_assertion_target  has_session_object? ! ","@ acquire_assertion_target  has_session_object? ","@ acquire_assertion_target  session "]}," Test Unit Assertions assert_session_has":{"type":"method","name":"assert_session_has","children":[],"call":["response has_session_object? "," assert_block "," build_message ","response session "," acquire_assertion_target ","@response has_session_object? ","@response session "," acquire_assertion_target  has_session_object? "," acquire_assertion_target  session ","@ acquire_assertion_target  has_session_object? ","@ acquire_assertion_target  session "]}," Test Unit Assertions assert_rendered_file":{"type":"method","name":"assert_rendered_file","children":[],"call":["expected != ","response rendered_file ","expected include? ","response rendered_with_file? ","expected nil? "," assert_block "," build_message "," acquire_assertion_target ","expected == ","expected include? ! "," assert_template "," acquire_assertion_target  rendered_file ","response response rendered_file _file "," acquire_assertion_target  rendered_with_file? ","response response rendered_file _with_file? "]}," Test Unit Assertions assert_success":{"type":"method","name":"assert_success","children":[],"call":["response success? "," assert_block "," build_message ","response response_code "," acquire_assertion_target ","response redirect_url ","response redirect? "," assert_response "," acquire_assertion_target  success? "," acquire_assertion_target   acquire_assertion_target _code "," acquire_assertion_target  redirect_url "," acquire_assertion_target  redirect? "," assert_ acquire_assertion_target  "]}," ActionView Helpers UrlHelper mail_to":{"type":"method","name":"mail_to","children":[],"call":[" content_tag ","html_options merge ","string << ","email_address [] "," sprintf ","email_address [] =~ ","email_address length ","encode == ","tmp [] ","tmp length ","mailto: + + ","mailto: + ","email_address to_s ","email_address_obfuscated gsub! ","html_options delete ","html_options has_key? ","email_address dup ","? << ","extras gsub! ","extras empty? ","extras << ","CGI  escape gsub ","CGI  escape ","subject nil? ","body nil? ","bcc nil? ","cc nil? ","html_options stringify_keys ","html_options [] ","protocol each_byte ","email_address_encoded << ","email_address_obfuscated each_byte ","html_options delete to_s ","char =~ ","c chr ","email_address each_byte ","(str \"document.write('\") each_byte ","email_address_obfuscated html_safe ","email_address_encoded html_safe "," html_escape "," escape_javascript ","(str \"mailto:\") html_safe ","(begin\n  (lvar :string)) html_safe ","(str \"<script type=\\\"\") html_safe ","? + ","extras join ","Rack Utils  escape gsub ","Rack Utils  escape ","email_address to_str ","(send\n  (send\n    (str \"mailto:\") :unpack\n    (str \"C*\")) :map) join + ","(send\n  (send\n    (lvar :email_address) :unpack\n    (str \"C*\")) :map) join ","email_address unpack map ","email_address unpack ","(send\n  (send\n    (str \"mailto:\") :unpack\n    (str \"C*\")) :map) join ","mailto: unpack map ","mailto: unpack ","(send\n  (send\n    (lvar :email_address_obfuscated) :unpack\n    (str \"C*\")) :map) join ","email_address_obfuscated unpack map ","email_address_obfuscated unpack ","html to_str ","html_options key? ","ERB Util  html_escape ","(send\n  (array\n    (str \"cc\")\n    (str \"bcc\")\n    (str \"body\")\n    (str \"subject\")) :map) compact ","(str \"cc\") map ","email_address html_safe ","html_options []= ","Rack Utils  escape_path ","(or\n  (lvar :html_options)\n  (hash)) stringify_keys "," block_given? ","html_options stringify_keys! ","html_options stringify_keys  merge ","(or\n  (lvar :html_options)\n  (hash)) stringify_keys  merge "," content_tag _options merge "," escape_javascript _options merge ","(send\n  (send\n    (str \"mailto:\") :unpack\n    (str \"C*\")) :map) join +  << ","email_address to_s  [] "," html_escape  [] ","ERB Util  html_escape  [] ","email_address to_s  [] =~ "," html_escape  [] =~ ","ERB Util  html_escape  [] =~ ","email_address to_s  length "," html_escape  length ","ERB Util  html_escape  length ","html_options delete  == ","html_options []  == ","html_options delete to_s  == ","email_address to_s  to_s "," html_escape  to_s ","ERB Util  html_escape  to_s ","email_address dup  gsub! "," html_escape  gsub! ","email_address to_str  gsub! ","email_address to_s _obfuscated gsub! "," html_escape _obfuscated gsub! ","ERB Util  html_escape _obfuscated gsub! ","html_options stringify_keys  delete ","(or\n  (lvar :html_options)\n  (hash)) stringify_keys  delete "," content_tag _options delete "," escape_javascript _options delete ","html_options stringify_keys  has_key? ","(or\n  (lvar :html_options)\n  (hash)) stringify_keys  has_key? "," content_tag _options has_key? "," escape_javascript _options has_key? ","email_address to_s  dup "," html_escape  dup ","ERB Util  html_escape  dup ","? <<  gsub! ","? +  gsub! ","(send\n  (array\n    (str \"cc\")\n    (str \"bcc\")\n    (str \"body\")\n    (str \"subject\")) :map) compact  gsub! ","? <<  empty? ","? +  empty? ","(send\n  (array\n    (str \"cc\")\n    (str \"bcc\")\n    (str \"body\")\n    (str \"subject\")) :map) compact  empty? ","? <<  << ","? +  << ","(send\n  (array\n    (str \"cc\")\n    (str \"bcc\")\n    (str \"body\")\n    (str \"subject\")) :map) compact  << ","html_options stringify_keys  stringify_keys ","(or\n  (lvar :html_options)\n  (hash)) stringify_keys  stringify_keys "," content_tag _options stringify_keys "," escape_javascript _options stringify_keys ","html_options (send\n  (send\n    (str \"mailto:\") :unpack\n    (str \"C*\")) :map) join + ify_keys ","html_options stringify_keys  [] ","(or\n  (lvar :html_options)\n  (hash)) stringify_keys  [] "," content_tag _options [] "," escape_javascript _options [] ","email_address_html_options delete d << ","email_address_html_options [] d << ","email_address_html_options delete to_s d << ","email_address to_s _encoded << "," html_escape _encoded << ","ERB Util  html_escape _encoded << ","(send\n  (send\n    (lvar :email_address_obfuscated) :unpack\n    (str \"C*\")) :map) join  << ","email_address dup  each_byte "," html_escape  each_byte ","email_address to_str  each_byte ","email_address to_s _obfuscated each_byte "," html_escape _obfuscated each_byte ","ERB Util  html_escape _obfuscated each_byte ","html_options stringify_keys  delete to_s ","(or\n  (lvar :html_options)\n  (hash)) stringify_keys  delete to_s "," content_tag _options delete to_s "," escape_javascript _options delete to_s ","c chr  =~ ","email_address to_s  each_byte ","ERB Util  html_escape  each_byte ","email_address dup  html_safe "," html_escape  html_safe ","email_address to_str  html_safe ","email_address to_s _obfuscated html_safe "," html_escape _obfuscated html_safe ","ERB Util  html_escape _obfuscated html_safe ","email_address_obfuscated  content_tag _safe ","email_address_obfuscated  escape_javascript _safe ","email_address_html_options delete d html_safe ","email_address_html_options [] d html_safe ","email_address_html_options delete to_s d html_safe ","email_address to_s _encoded html_safe "," html_escape _encoded html_safe ","ERB Util  html_escape _encoded html_safe ","email_address_encoded  content_tag _safe ","email_address_encoded  escape_javascript _safe ","(send\n  (send\n    (lvar :email_address_obfuscated) :unpack\n    (str \"C*\")) :map) join  html_safe ","  content_tag _escape ","  escape_javascript _escape ","(str \"mailto:\")  content_tag _safe ","(str \"mailto:\")  escape_javascript _safe ","(begin\n  (lvar :string))  content_tag _safe ","(begin\n  (lvar :string))  escape_javascript _safe ","(begin\n  (lvar :(send\n  (send\n    (str \"mailto:\") :unpack\n    (str \"C*\")) :map) join + )) html_safe ","(str \"<script type=\\\"\")  content_tag _safe ","(str \"<script type=\\\"\")  escape_javascript _safe ","? <<  join ","? +  join ","(send\n  (array\n    (str \"cc\")\n    (str \"bcc\")\n    (str \"body\")\n    (str \"subject\")) :map) compact  join ","email_address to_s  to_str "," html_escape  to_str ","ERB Util  html_escape  to_str ","(send\n  (send\n    (lvar :email_address to_s ) :unpack\n    (str \"C*\")) :map) join ","(send\n  (send\n    (lvar : html_escape ) :unpack\n    (str \"C*\")) :map) join ","(send\n  (send\n    (lvar :ERB Util  html_escape ) :unpack\n    (str \"C*\")) :map) join ","email_address to_s  unpack map "," html_escape  unpack map ","ERB Util  html_escape  unpack map ","email_address to_s  unpack "," html_escape  unpack ","ERB Util  html_escape  unpack ","(send\n  (send\n    (lvar :email_address dup ) :unpack\n    (str \"C*\")) :map) join ","(send\n  (send\n    (lvar :email_address to_str ) :unpack\n    (str \"C*\")) :map) join ","(send\n  (send\n    (lvar :email_address to_s _obfuscated) :unpack\n    (str \"C*\")) :map) join ","(send\n  (send\n    (lvar : html_escape _obfuscated) :unpack\n    (str \"C*\")) :map) join ","(send\n  (send\n    (lvar :ERB Util  html_escape _obfuscated) :unpack\n    (str \"C*\")) :map) join ","email_address dup  unpack map ","email_address to_str  unpack map ","email_address to_s _obfuscated unpack map "," html_escape _obfuscated unpack map ","ERB Util  html_escape _obfuscated unpack map ","email_address dup  unpack ","email_address to_str  unpack ","email_address to_s _obfuscated unpack "," html_escape _obfuscated unpack ","ERB Util  html_escape _obfuscated unpack "," content_tag  to_str "," escape_javascript  to_str ","html_options stringify_keys  key? ","(or\n  (lvar :html_options)\n  (hash)) stringify_keys  key? "," content_tag _options key? "," escape_javascript _options key? ","ERB Util   content_tag _escape ","ERB Util   escape_javascript _escape ","email_address to_s  html_safe ","ERB Util  html_escape  html_safe ","email_address  content_tag _safe ","email_address  escape_javascript _safe ","html_options stringify_keys  []= ","(or\n  (lvar :html_options)\n  (hash)) stringify_keys  []= "," content_tag _options []= "," escape_javascript _options []= ","(or\n  (lvar :html_options stringify_keys )\n  (hash)) stringify_keys ","(or\n  (lvar :(or\n  (lvar :html_options)\n  (hash)) stringify_keys )\n  (hash)) stringify_keys ","(or\n  (lvar : content_tag _options)\n  (hash)) stringify_keys ","(or\n  (lvar : escape_javascript _options)\n  (hash)) stringify_keys ","(or\n  (lvar :html_options)\n  (hash)) (send\n  (send\n    (str \"mailto:\") :unpack\n    (str \"C*\")) :map) join + ify_keys ","html_options stringify_keys  stringify_keys! ","(or\n  (lvar :html_options)\n  (hash)) stringify_keys  stringify_keys! "," content_tag _options stringify_keys! "," escape_javascript _options stringify_keys! ","html_options (send\n  (send\n    (str \"mailto:\") :unpack\n    (str \"C*\")) :map) join + ify_keys! "]}," ActionView Helpers TextHelper markdown":{"type":"method","name":"markdown","children":[],"call":["BlueCloth  new to_html ","BlueCloth  new ","text empty? ","text blank? ","Markdown  new to_html ","Markdown  new ","(if\n  (send\n    (lvar :text) :blank?)\n  (str \"\")\n  (send\n    (send\n      (const nil :BlueCloth) :new\n      (lvar :text)) :to_html)) html_safe "," sanitize ","options delete ","text html_safe? "," sanitize  empty? "," sanitize  blank? ","(if\n  (send\n    (lvar : sanitize ) :blank?)\n  (str \"\")\n  (send\n    (send\n      (const nil :BlueCloth) :new\n      (lvar : sanitize )) :to_html)) html_safe "," sanitize  html_safe? "]}," ActionView Helpers DateHelper distance_of_time_in_words_to_now":{"type":"method","name":"distance_of_time_in_words_to_now","children":[],"call":[" distance_of_time_in_words ","Time  now "]}," ActionView Base controller_delegate":{"type":"method","name":"controller_delegate","children":[],"call":[]}," Inflector classify":{"type":"method","name":"classify","children":[],"call":[" camelize "," singularize "]}," Inflector tableize":{"type":"method","name":"tableize","children":[],"call":[" pluralize "," underscore "]}," ActionController Helpers ClassMethods helper_attr":{"type":"method","name":"helper_attr","children":[],"call":[" helper_method ","attrs flatten each ","attrs flatten "]}," ActionController Helpers ClassMethods helper_method":{"type":"method","name":"helper_method","children":[],"call":[" template_class controller_delegate "," template_class "," master_helper_module module_eval "," master_helper_module ","methods flatten each ","methods flatten "]}," ActionController Helpers ClassMethods helper":{"type":"method","name":"helper","children":[],"call":[" template_class module_eval "," template_class "," block_given? "," raise "," add_template_helper ","Object  const_get ","Object  const_defined? "," require ","Inflector  camelize ","Inflector  underscore + ","Inflector  underscore ","arg to_s downcase ","arg to_s ","args flatten each ","args flatten "," require_dependency ","requiree == ","(str \" -- (.*?)(\\\\.rb)?$\") match to_a [] ","(str \" -- (.*?)(\\\\.rb)?$\") match to_a ","(str \" -- (.*?)(\\\\.rb)?$\") match "," master_helper_module module_eval "," master_helper_module ","class_name constantize ","LoadError  new copy_blame! ","LoadError  new ","file_name camelize ","arg to_s underscore + ","arg to_s underscore ","args inspect "," helper "," all_application_helpers ","load_error message ","(str \" -- (.*?)(\\.rb)?$\") match to_a []  == ","Inflector  camelize  constantize ","file_name camelize  constantize ","Inflector  underscore +  camelize ","arg to_s underscore +  camelize "]}," ActionController Helpers ClassMethods add_template_helper":{"type":"method","name":"add_template_helper","children":[],"call":[" template_class class_eval "," template_class "," master_helper_module send "," master_helper_module "," master_helper_module module_eval "," include "]}," ActionController Helpers append_features":{"type":"method","name":"append_features","children":[],"call":[]}," ActionController Base send_file_headers!":{"type":"method","name":"send_file_headers!","children":[],"call":["@headers update ","options [] "," raise ","options [] nil? ","(sym :length) each ","options update ","DEFAULT_SEND_FILE_OPTIONS  merge ","options [] dup "]}," ActionController Base send_data":{"type":"method","name":"send_data","children":[],"call":[" render_text "," send_file_headers! ","options merge ","data size "," logger info ","options [] "," logger "," logger nil? "]}," Test Unit Assertions assert_assigned_equal":{"type":"method","name":"assert_assigned_equal","children":[],"call":["expected == ","response template assigns [] ","key to_s ","response template assigns ","response template "," assert_block "," build_message "," acquire_assertion_target "," acquire_assertion_target  template assigns [] "," acquire_assertion_target  template assigns "," acquire_assertion_target  template "]}," Test Unit Assertions assert_flash_equal":{"type":"method","name":"assert_flash_equal","children":[],"call":["expected == ","response flash [] ","response flash "," assert_block "," build_message "," acquire_assertion_target ","@response flash [] ","@response flash "," acquire_assertion_target  flash [] "," acquire_assertion_target  flash ","@ acquire_assertion_target  flash [] ","@ acquire_assertion_target  flash "]}," Test Unit Assertions assert_session_equal":{"type":"method","name":"assert_session_equal","children":[],"call":["expected == ","response session [] ","response session "," assert_block "," build_message "," acquire_assertion_target ","@response session [] ","@response session "," acquire_assertion_target  session [] "," acquire_assertion_target  session ","@ acquire_assertion_target  session [] ","@ acquire_assertion_target  session "]}," Object method_added":{"type":"method","name":"method_added","children":[],"call":["Builder BlankSlate  hide "," != "," blank_slate_method_added "]}," Kernel method_added":{"type":"method","name":"method_added","children":[],"call":["Builder BlankSlate  hide "," != "," blank_slate_method_added "]}," Builder BlankSlate hide":{"type":"method","name":"hide","children":[],"call":[" undef_method ","name !~ "," instance_methods include? ","name to_s "," instance_methods "]}," ActionView TemplateError backtrace":{"type":"method","name":"backtrace","children":[],"call":["(str \"On line #\") + "," clean_backtrace join "," clean_backtrace "," original_exception "," source_extract "," file_name "," line_number "," original_exception clean_backtrace join "," original_exception clean_backtrace ","(begin\n  (send\n    (send nil :source_location) :capitalize)) + "," source_location capitalize "," source_location "]}," ActionView Partials partial_counter_name":{"type":"method","name":"partial_counter_name","children":[],"call":["partial_name split last ","partial_name split ","(begin\n  (send\n    (send\n      (lvar :partial_name) :split\n      (str \"/\")) :last)) intern ","(begin\n  (send nil :partial_variable_name\n    (lvar :partial_name))) intern "," partial_variable_name "]}," ActionView Helpers UrlHelper link_to_image":{"type":"method","name":"link_to_image","children":[],"call":[" link_to "," tag ","html_options delete ","image_options []= ","html_options [] ","html_options [] split ","src split last split first capitalize ","src split last split first ","src split last split ","src split last ","src split ","image_options [] + ","image_options [] ","image_options [] include? ","src include? "]}," ActionView Helpers InstanceTag to_radio_button_tag":{"type":"method","name":"to_radio_button_tag","children":[],"call":[" tag "," add_default_name_and_id ","html_options merge! ","tag_value to_s "," value == "," value ","DEFAULT_FIELD_OPTIONS  merge ","options []= ","tag_value to_s gsub gsub downcase ","tag_value to_s gsub gsub ","tag_value to_s gsub "," value to_s == "," value to_s ","DEFAULT_RADIO_OPTIONS  merge ","options stringify_keys ","options [] "," class radio_button_checked? "," object "," class ","cv == ","options delete ","options has_key? "," tag_id "," tag_id_with_index "," add_default_name_and_id_for_value ","DEFAULT_FIELD_OPTIONS  merge  merge! ","html_DEFAULT_RADIO_OPTIONS  merge  merge! ","html_DEFAULT_FIELD_OPTIONS  merge  merge! ","DEFAULT_RADIO_OPTIONS  merge  []= ","DEFAULT_FIELD_OPTIONS  merge  []= ","DEFAULT_RADIO_OPTIONS  merge  stringify_keys ","DEFAULT_FIELD_OPTIONS  merge  stringify_keys ","DEFAULT_RADIO_OPTIONS  merge  [] ","DEFAULT_FIELD_OPTIONS  merge  [] "," class radio_button_ class radio_button_checked? ? ","options delete  == ","DEFAULT_RADIO_OPTIONS  merge  delete ","DEFAULT_FIELD_OPTIONS  merge  delete ","DEFAULT_RADIO_OPTIONS  merge  has_key? ","DEFAULT_FIELD_OPTIONS  merge  has_key? "]}," ActionView Helpers FormHelper radio_button":{"type":"method","name":"radio_button","children":[],"call":["InstanceTag  new to_radio_button_tag ","InstanceTag  new ","options delete ","Tags RadioButton  new render ","Tags RadioButton  new "]}," Test Unit TestCase process":{"type":"method","name":"process","children":[],"call":["@controller process ","@request session= ","ActionController TestSession  new ","session nil? ","@request parameters update ","@request parameters ","parameters nil? ","@request action= ","action to_s ","@request env [] ","@request env "," build_request_uri ","@request session []= ","ActionController Flash FlashHash  new update ","ActionController Flash FlashHash  new ","@request session ","@request assign_parameters ","@controller class controller_path ","@controller class ","@request recycle! "," raise "," instance_variable_get nil? "," instance_variable_get ","(str \"controller\") each ","@request path_parameters= "," assert_not_nil "]}," ActionController TestSession session_id":{"type":"method","name":"session_id","children":[],"call":[]}," silence_warnings":{"type":"method","name":"silence_warnings","children":[],"call":[]}," ClassInheritableAttributes ClassMethods reset_inheritable_attributes":{"type":"method","name":"reset_inheritable_attributes","children":[],"call":[" inheritable_attributes clear "," inheritable_attributes "]}," ActionController Rescue ClassMethods process_with_exception":{"type":"method","name":"process_with_exception","children":[],"call":[" new process "," new "]}," ActionController AbstractRequest ssl?":{"type":"method","name":"ssl?","children":[],"call":[" protocol == "," protocol "," env [] == "," env [] "," env ","@env [] == ","@env [] "]}," ActionController AbstractRequest head?":{"type":"method","name":"head?","children":[],"call":[" method == "," method ","@env [] downcase to_sym == ","@env [] downcase to_sym ","@env [] downcase ","@env [] "," request_method == "," request_method "]}," ActionController Layout ClassMethods layout_list":{"type":"method","name":"layout_list","children":[],"call":["File  basename ","Dir  glob map ","Dir  glob "," template_root ","(send\n  (send nil :view_paths) :collect) flatten ","Dir  [] "," view_paths collect "," view_paths "," Array sum "," Array ","path to_str "]}," ActionController Layout ClassMethods inherited":{"type":"method","name":"inherited","children":[],"call":["child layout ","child controller_name "," layout_list grep empty? "," layout_list grep "," layout_list "," inherited_without_layout "]}," ActionController Helpers ClassMethods inherited":{"type":"method","name":"inherited","children":[],"call":["child helper ","child controller_name "," inherited_without_helper ","child controller_path "," raise ","e is_missing? "]}," ActionController Dependencies ClassMethods inherited":{"type":"method","name":"inherited","children":[],"call":["child model ","Inflector  singularize ","child controller_name "," inherited_without_model ","child controller_name == ","child controller_name singularize ","Object  const_get ","child controller_name singularize classify "]}," ActionController Dependencies ClassMethods require_dependencies":{"type":"method","name":"require_dependencies","children":[],"call":[" raise "," require_dependency ","dependency to_s ","dependencies flatten each ","dependencies flatten ","exception blame_file! ","LoadError  new copy_blame! ","LoadError  new "]}," ActionController Dependencies ClassMethods instantiate_observers":{"type":"method","name":"instantiate_observers","children":[],"call":["Object  const_get instance ","Object  const_get ","Inflector  classify ","observer to_s ","observers flatten each ","observers flatten "]}," ActionController Dependencies ClassMethods depend_on":{"type":"method","name":"depend_on","children":[],"call":[" write_inheritable_array "]}," ActionController Dependencies ClassMethods dependencies_on":{"type":"method","name":"dependencies_on","children":[],"call":[" read_inheritable_attribute "]}," ActionController Dependencies ClassMethods observer":{"type":"method","name":"observer","children":[],"call":[" instantiate_observers "," depend_on "," require_dependencies "]}," ActionController Dependencies ClassMethods service":{"type":"method","name":"service","children":[],"call":[" depend_on "," require_dependencies "]}," ActionController Dependencies ClassMethods model":{"type":"method","name":"model","children":[],"call":[" depend_on "," require_dependencies "]}," ActionController Dependencies ClassMethods require_dependency":{"type":"method","name":"require_dependency","children":[],"call":[" require "," load "," silence_warnings "," reload_dependencies "]}," ActionController Dependencies append_features":{"type":"method","name":"append_features","children":[],"call":[]}," ActionController CookieJar set_cookie":{"type":"method","name":"set_cookie","children":[],"call":["@controller response headers [] << ","@controller response headers [] ","@controller response headers ","@controller response ","@controller logger info ","@controller logger ","@controller logger nil? ","CGI Cookie  new ","options []= ","options [] "]}," ActionController CookieJar delete":{"type":"method","name":"delete","children":[],"call":[" set_cookie ","Time  at ","name to_s ","options merge ","options stringify_keys! ","@controller response delete_cookie ","@controller response ","key to_s ","options []= ","options has_key? ","options symbolize_keys! "]}," ActionController CookieJar []=":{"type":"method","name":"[]=","children":[],"call":[" set_cookie ","options []= ","name to_s ","pair last ","pair first to_s ","pair first ","options inject ","options is_a? ","@controller response set_cookie ","@controller response ","options [] ","key to_s ","options has_key? ","options symbolize_keys! "," write_cookie? "]}," ActionController CookieJar []":{"type":"method","name":"[]","children":[],"call":["@cookies [] value first ","@cookies [] value ","@cookies [] ","name to_s ","@cookies [] respond_to? ","cookie value to_s ","cookie value ","cookie size > ","cookie size ","cookie respond_to? ","cookie value [] ","@@cookies [] s [] value first ","@@cookies [] s [] value ","@@cookies [] s [] ","@@cookies [] s [] respond_to? ","@cookies []  value to_s ","@cookies []  value ","@cookies []  size > ","@cookies []  size ","@cookies []  respond_to? ","@cookies []  value [] "]}," ActionController CookieJar initialize":{"type":"method","name":"initialize","children":[],"call":[" update ","controller instance_variable_get ","controller request cookies ","controller request ","controller request ssl? "]}," ActionController Cookies cookies":{"type":"method","name":"cookies","children":[],"call":["CookieJar  new "," request cookie_jar "," request "]}," ActionController CgiRequest session_options_with_string_keys":{"type":"method","name":"session_options_with_string_keys","children":[],"call":["options []= ","pair last ","pair first to_s ","pair first ","DEFAULT_SESSION_OPTIONS  merge inject ","DEFAULT_SESSION_OPTIONS  merge ","k to_s ","DEFAULT_SESSION_OPTIONS  merge stringify_keys "]}," ActionController Base default_template_name":{"type":"method","name":"default_template_name","children":[],"call":[" controller_name "," module_name "," class controller_path "," class "," strip_out_controller "," template_path_includes_controller? ","action_name include? ","action_name to_s "," controller_path "," strip_out_controller  include? ","action_name to_s  include? "," strip_out_controller  to_s ","action_name to_s  to_s "]}," ActionController Base module_name":{"type":"method","name":"module_name","children":[],"call":["@params [] "]}," ActionView Helpers InstanceTag value_before_type_cast":{"type":"method","name":"value_before_type_cast","children":[],"call":[" object send "," object ","@method_name + "," object respond_to? "," object nil? ","object send ","method_name + ","object respond_to? ","object nil? "," class value_before_type_cast "," class "]}," ActionController TestRequest port=":{"type":"method","name":"port=","children":[],"call":["@env []= ","number to_i "," port "]}," ActionController Session clear_persistant_model_associations":{"type":"method","name":"clear_persistant_model_associations","children":[],"call":["obj clear_association_cache ","obj respond_to? ","session each ","@session instance_variable_get ","@session instance_variable_get  each ","@@session instance_variable_get  instance_variable_get "]}," ActionController Session append_features":{"type":"method","name":"append_features","children":[],"call":[]}," ActionController AbstractRequest port_string":{"type":"method","name":"port_string","children":[],"call":[" port "," port == "," protocol == "," protocol "," standard_port "]}," ActionController AbstractRequest subdomains":{"type":"method","name":"subdomains","children":[],"call":["parts - ","parts last ","1 + "," host split "," host ","parts [] ","(send\n  (lvar :tld_length) :+\n  (int 2)) -@ ","tld_length + "," named_host? "," host split  - "," host split  last "," host split  [] "]}," ActionController AbstractRequest domain":{"type":"method","name":"domain","children":[],"call":[" host split last join "," host split last ","1 + "," host split "," host "," host nil? ","(str \"\\\\d{1,3}\\\\.\\\\d{1,3}\\\\.\\\\d{1,3}\\\\.\\\\d{1,3}\") match nil? ! ","(str \"\\\\d{1,3}\\\\.\\\\d{1,3}\\\\.\\\\d{1,3}\\\\.\\\\d{1,3}\") match nil? ","(str \"\\\\d{1,3}\\\\.\\\\d{1,3}\\\\.\\\\d{1,3}\\\\.\\\\d{1,3}\") match "," named_host? "]}," Builder XmlMarkup cdata!":{"type":"method","name":"cdata!","children":[],"call":[" _special "," _ensure_no_block "," block_given? "]}," ActionView Partials add_object_to_local_assigns!":{"type":"method","name":"add_object_to_local_assigns!","children":[],"call":[" controller instance_variable_get "," controller ","local_assigns [] ","partial_name intern ","object value ","object is_a? "," partial_variable_name "," partial_ partial_variable_name  "]}," ActionView Partials add_counter_to_local_assigns!":{"type":"method","name":"add_counter_to_local_assigns!","children":[],"call":["local_assigns []= ","local_assigns has_key? "," partial_counter_name "," partial_ partial_counter_name  "]}," ActionView Partials extract_local_assigns":{"type":"method","name":"extract_local_assigns","children":[],"call":["local_assigns is_a? "]}," ActionView Partials extracting_object":{"type":"method","name":"extracting_object","children":[],"call":[" controller instance_variable_get "," controller ","local_assigns nil? ","local_assigns is_a? ","object_assigns nil? "," partial_variable_name "," partial_ partial_variable_name  "]}," ActionView Partials render_partial_collection":{"type":"method","name":"render_partial_collection","children":[],"call":["collection_of_partials join "," render "," partial_pieces ","collection_of_partials empty? ","collection_of_partials push "," render_partial ","local_assigns []= ","collection each_with_index ","local_assigns clone "," partial_counter_name ","Array  new ","(pair\n  (lvar :counter_name)\n  (lvar :counter)) merge ","(send\n  (lvar :partial_path) :nil?) join "," render_partial_collection_with_known_partial_path "," render_partial_collection_with_unknown_partial_path ","partial_path nil? ","collection empty? ","(send\n  (send\n    (lvar :options) :[]\n    (sym :collection)) :map) join ","template render_partial ","local_assigns dup ","template counter_name "," _pick_partial_template ","ActionController RecordIdentifier  partial_path "," controller class controller_path "," controller class "," controller ","options [] map ","options [] ","options [] clone ","options [] blank? ","(send\n  (send\n    (lvar :options) :[]\n    (sym :collection)) :map) join html_safe ","local_assigns [] ","(begin\n  (send\n    (lvar :as) :to_s)) to_sym ","as to_s ","(send\n  (send\n    (lvar :options) :[]\n    (sym :collection)) :map) join html_safe! ","Array  new  join ","collection_of_options [] s join "," options [] _pieces ","Array  new  empty? ","collection_of_options [] s empty? ","Array  new  push ","collection_of_options [] s push "," render_options []  ","local_assigns clone  []= ","options [] clone  []= ","local_options [] signs []= ","local_assigns clone  clone ","options [] clone  clone ","local_options [] signs clone "," partial_ partial_counter_name  "," options [] _counter_name ","(pair\n  (lvar : partial_counter_name )\n  (lvar :counter)) merge ","(send\n  (lvar :options [] _path) :nil?) join "," render_options [] _collection_with_known_options [] _path "," render_options [] _collection_with_unknown_options [] _path ","options [] _path nil? "," _pick_partial_template  render_partial ","template render_options []  ","local_assigns clone  dup ","options [] clone  dup ","local_options [] signs dup ","template  partial_counter_name  "," _pick_partial_template  counter_name "," _pick_partial_ _pick_partial_template  "," _pick_options [] _template ","ActionController RecordIdentifier  options [] _path "," controller cloptions [] s controller_path "," controller cloptions [] s ","local_assigns clone  [] ","options [] clone  [] ","local_options [] signs [] ","(begin\n  (send\n    (lvar :options [] ) :to_s)) to_sym ","options []  to_s "]}," ActionView Helpers UrlHelper convert_boolean_attributes!":{"type":"method","name":"convert_boolean_attributes!","children":[],"call":["html_options []= ","html_options delete ","bool_attrs each "]}," ActionView Helpers UrlHelper post_javascript_function":{"type":"method","name":"post_javascript_function","children":[],"call":[]}," ActionView Helpers UrlHelper popup_javascript_function":{"type":"method","name":"popup_javascript_function","children":[],"call":["popup last ","popup first ","popup is_a? "]}," ActionView Helpers UrlHelper confirm_javascript_function":{"type":"method","name":"confirm_javascript_function","children":[],"call":[" escape_javascript "]}," ActionView Helpers UrlHelper convert_options_to_javascript!":{"type":"method","name":"convert_options_to_javascript!","children":[],"call":["html_options []= ","html_options [] "," popup_javascript_function + "," popup_javascript_function "," post_javascript_function "," confirm_javascript_function "," raise ","html_options delete "," method_javascript_function ","ActiveSupport Deprecation  warn ","Passing :post as a link modifier is deprecated.  + ","method ! "]}," ActionView Helpers UrlHelper current_page?":{"type":"method","name":"current_page?","children":[],"call":[" url_for == ","@controller request request_uri ","@controller request "," url_for ","CGI  escapeHTML == ","CGI  escapeHTML ","url_string == ","request request_uri ","request host_with_port ","request protocol ","url_string =~ ","@request request_uri ","request request_uri split first ","request request_uri split ","url_string index ","CGI  unescapeHTML "," request host_with_port "," request "," request protocol "," request path "," request fullpath "," raise "," controller request "," controller ","request path ","request fullpath "," request get? "," request head? ","URI  parser unescape force_encoding ","URI  parser unescape ","URI  parser ","@controller @controller request  @controller request _uri ","@controller  controller request   controller request _uri ","@controller request request request_uri split first  ","@controller request request request_uri  ","@controller request  request path  ","@controller request  request fullpath  ","@controller request request path  ","@controller request request fullpath  ","@controller request URI  parser unescape force_encoding  ","@controller @controller request  ","@controller  controller request  ","CGI  escapeHTML  == ","CGI  unescapeHTML  == "," url_for  == ","URI  parser unescape force_encoding  == ","@controller request  @controller request _uri "," controller request   controller request _uri ","request request request_uri split first  ","request request request_uri  ","request  request path  ","request  request fullpath  ","request request path  ","request request fullpath  ","request URI  parser unescape force_encoding  ","@controller request  host_with_port "," controller request  host_with_port ","@controller request  protocol "," controller request  protocol ","CGI  escapeHTML  =~ ","CGI  unescapeHTML  =~ "," url_for  =~ ","URI  parser unescape force_encoding  =~ ","@@controller request  @controller request _uri ","@ controller request   controller request _uri ","@request request request_uri split first  ","@request request request_uri  ","@request  request path  ","@request  request fullpath  ","@request request path  ","@request request fullpath  ","@request URI  parser unescape force_encoding  ","@controller request  @controller request _uri split first "," controller request   controller request _uri split first ","request request request_uri split first  split first ","request request request_uri  split first ","request  request path  split first ","request  request fullpath  split first ","request request path  split first ","request request fullpath  split first ","request URI  parser unescape force_encoding  split first ","@controller request  @controller request _uri split "," controller request   controller request _uri split ","request request request_uri split first  split ","request request request_uri  split ","request  request path  split ","request  request fullpath  split ","request request path  split ","request request fullpath  split ","request URI  parser unescape force_encoding  split ","CGI  escapeHTML  index ","CGI  unescapeHTML  index "," url_for  index ","URI  parser unescape force_encoding  index "," @controller request  host_with_port ","  controller request  host_with_port "," @controller request  ","  controller request  "," @controller request  protocol ","  controller request  protocol "," @controller request  path ","  controller request  path "," @controller request  fullpath ","  controller request  fullpath "," controller @controller request  "," controller  controller request  ","@controller request  path "," controller request  path ","@controller request  fullpath "," controller request  fullpath "," @controller request  get? ","  controller request  get? "," @controller request  head? ","  controller request  head? "]}," ActionView Helpers UrlHelper link_to_if":{"type":"method","name":"link_to_if","children":[],"call":[" link_to_unless ","condition ! "]}," ActionView Helpers UrlHelper link_to_unless":{"type":"method","name":"link_to_unless","children":[],"call":[" link_to ","block arity <= ","block arity "," block_given? "," html_escape "," capture ","ERB Util  html_escape "]}," ActionView Helpers UrlHelper link_image_to":{"type":"method","name":"link_image_to","children":[],"call":[" link_to "," tag ","html_options delete ","image_options []= ","html_options [] ","html_options [] split ","src split last split first capitalize ","src split last split first ","src split last split ","src split last ","src split ","html_options stringify_keys ","image_options [] ","image_options [] include? ","src include? ","image_options [] + ","html_options stringify_keys  delete ","html_options stringify_keys  [] ","html_options stringify_keys  [] split ","html_options stringify_keys  stringify_keys "]}," ActionView Helpers UrlHelper button_to":{"type":"method","name":"button_to","children":[],"call":["(str \"<form method=\\\"post\\\" action=\\\"\") + + ","(str \"<form method=\\\"post\\\" action=\\\"\") + "," tag "," h ","html_options merge! "," html_escape "," url_for ","options is_a? ","html_options []= "," confirm_javascript_function ","html_options delete "," convert_boolean_attributes! ","(or\n  (lvar :html_options)\n  (hash)) stringify_keys ","(str \"<form method=\\\"\") + + + ","(str \"<form method=\\\"\") + + ","(str \"<form method=\\\"\") + "," escape_once ","method to_s == ","method to_s ","(str \"put\") include? ","html_options stringify_keys "," convert_confirm_option_to_javascript! ","(str \"<form method=\\\"\") + + + + "," form_authenticity_token "," request_forgery_protection_token to_s "," request_forgery_protection_token "," protect_against_forgery? ","form_method == ","(send\n  (send\n    (send\n      (send\n        (dstr\n          (str \"<form method=\\\"\")\n          (begin\n            (lvar :form_method))\n          (str \"\\\" action=\\\"\")\n          (begin\n            (send nil :escape_once\n              (lvar :url)))\n          (str \"\\\" class=\\\"button-to\\\"><div>\")) :+\n        (lvar :method_tag)) :+\n      (send nil :tag\n        (str \"input\")\n        (lvar :html_options))) :+\n    (lvar :request_token_tag)) :+\n  (str \"</div></form>\")) html_safe ","</div></form> html_safe! ","(send\n  (send\n    (send\n      (send\n        (dstr\n          (str \"<form method=\\\"\")\n          (begin\n            (lvar :form_method))\n          (str \"\\\" action=\\\"\")\n          (begin\n            (send nil :html_escape\n              (lvar :url)))\n          (str \"\\\" \")\n          (begin\n            (if\n              (lvar :remote)\n              (str \"data-remote=\\\"true\\\"\") nil))\n          (str \" class=\\\"button_to\\\"><div>\")) :+\n        (lvar :method_tag)) :+\n      (send nil :tag\n        (str \"input\")\n        (lvar :html_options))) :+\n    (lvar :request_token_tag)) :+\n  (str \"</div></form>\")) html_safe "," convert_options_to_data_attributes ","(send\n  (send\n    (send\n      (send\n        (dstr\n          (str \"<form method=\\\"\")\n          (begin\n            (lvar :form_method))\n          (str \"\\\" action=\\\"\")\n          (begin\n            (send nil :escape_once\n              (lvar :url)))\n          (str \"\\\" \")\n          (begin\n            (if\n              (lvar :remote)\n              (str \"data-remote=\\\"true\\\"\") nil))\n          (str \" class=\\\"button-to\\\"><div>\")) :+\n        (lvar :method_tag)) :+\n      (send nil :tag\n        (str \"input\")\n        (lvar :html_options))) :+\n    (lvar :request_token_tag)) :+\n  (str \"</div></form>\")) html_safe ","(send\n  (send\n    (send\n      (send\n        (dstr\n          (str \"<form method=\\\"\")\n          (begin\n            (lvar :form_method))\n          (str \"\\\" action=\\\"\")\n          (begin\n            (send nil :escape_once\n              (lvar :url)))\n          (str \"\\\" \")\n          (begin\n            (if\n              (lvar :remote)\n              (str \"data-remote=\\\"true\\\"\") nil))\n          (str \" class=\\\"button_to\\\"><div>\")) :+\n        (lvar :method_tag)) :+\n      (send nil :tag\n        (str \"input\")\n        (lvar :html_options))) :+\n    (lvar :request_token_tag)) :+\n  (str \"</div></form>\")) html_safe ","(send\n  (send\n    (send\n      (send\n        (dstr\n          (str \"<form method=\\\"\")\n          (begin\n            (lvar :form_method))\n          (str \"\\\" action=\\\"\")\n          (begin\n            (send\n              (const\n                (const nil :ERB) :Util) :html_escape\n              (lvar :url)))\n          (str \"\\\" \")\n          (begin\n            (if\n              (lvar :remote)\n              (str \"data-remote=\\\"true\\\"\") nil))\n          (str \" class=\\\"\")\n          (begin\n            (send\n              (const\n                (const nil :ERB) :Util) :html_escape\n              (lvar :form_class)))\n          (str \"\\\"><div>\")) :+\n        (lvar :method_tag)) :+\n      (send nil :tag\n        (str \"input\")\n        (lvar :html_options))) :+\n    (lvar :request_token_tag)) :+\n  (str \"</div></form>\")) html_safe ","ERB Util  html_escape ","(begin\n  (send nil :tag\n    (sym :form)\n    (lvar :form_options)\n    (true))) html_safe ","form_options merge! ","form_options [] "," content_tag ","method_tag safe_concat safe_concat ","method_tag safe_concat "," block_given? "," token_tag ","method == "," html_safe "," method_tag ","(str \"patch\") include? ","html_options delete to_s ","(str \"<form html_options delete =\\\"post\\\" action=\\\"\") + + ","(str \"<form html_options delete to_s =\\\"post\\\" action=\\\"\") + + ","(str \"<form html_options delete =\\\"post\\\" action=\\\"\") + ","(str \"<form html_options delete to_s =\\\"post\\\" action=\\\"\") + ","(or\n  (lvar :html_options)\n  (hash)) stringify_keys  merge! ","html_options stringify_keys  merge! "," convert_options_to_data_attributes  merge! ","  url_for _for ","(or\n  (lvar :html_options)\n  (hash)) stringify_keys  []= ","html_options stringify_keys  []= "," convert_options_to_data_attributes  []= "," html_options delete _javascript_function ","(or\n  (lvar :html_options)\n  (hash)) stringify_keys  delete ","html_options stringify_keys  delete "," convert_options_to_data_attributes  delete ","(or\n  (lvar :(or\n  (lvar :html_options)\n  (hash)) stringify_keys )\n  (hash)) stringify_keys ","(or\n  (lvar :html_options stringify_keys )\n  (hash)) stringify_keys ","(or\n  (lvar : convert_options_to_data_attributes )\n  (hash)) stringify_keys ","(str \"<form html_options delete =\\\"\") + + + ","(str \"<form html_options delete to_s =\\\"\") + + + ","(str \"<form html_options delete =\\\"\") + + ","(str \"<form html_options delete to_s =\\\"\") + + ","(str \"<form html_options delete =\\\"\") + ","(str \"<form html_options delete to_s =\\\"\") + ","html_options delete  to_s == ","html_options delete to_s  to_s == ","html_options delete  to_s ","html_options delete to_s  to_s ","(or\n  (lvar :html_options)\n  (hash)) stringify_keys  stringify_keys ","html_options stringify_keys  stringify_keys "," convert_options_to_data_attributes  stringify_keys "," convert_html_options delete _option_to_javascript! ","(str \"<form html_options delete =\\\"\") + + + + ","(str \"<form html_options delete to_s =\\\"\") + + + + ","form_html_options delete  == ","form_html_options delete to_s  == ","(send\n  (send\n    (send\n      (send\n        (dstr\n          (str \"<form method=\\\"\")\n          (begin\n            (lvar :form_method))\n          (str \"\\\" action=\\\"\")\n          (begin\n            (send nil :escape_once\n              (lvar :url)))\n          (str \"\\\" class=\\\"button-to\\\"><div>\")) :+\n        (lvar :method_tag)) :+\n      (send nil :tag\n        (str \"input\")\n        (lvar :(or\n  (lvar :html_options)\n  (hash)) stringify_keys ))) :+\n    (lvar :request_token_tag)) :+\n  (str \"</div></form>\")) html_safe ","(send\n  (send\n    (send\n      (send\n        (dstr\n          (str \"<form method=\\\"\")\n          (begin\n            (lvar :form_method))\n          (str \"\\\" action=\\\"\")\n          (begin\n            (send nil :escape_once\n              (lvar :url)))\n          (str \"\\\" class=\\\"button-to\\\"><div>\")) :+\n        (lvar :method_tag)) :+\n      (send nil :tag\n        (str \"input\")\n        (lvar :html_options stringify_keys ))) :+\n    (lvar :request_token_tag)) :+\n  (str \"</div></form>\")) html_safe ","(send\n  (send\n    (send\n      (send\n        (dstr\n          (str \"<form method=\\\"\")\n          (begin\n            (lvar :form_method))\n          (str \"\\\" action=\\\"\")\n          (begin\n            (send nil :escape_once\n              (lvar :url)))\n          (str \"\\\" class=\\\"button-to\\\"><div>\")) :+\n        (lvar :method_tag)) :+\n      (send nil :tag\n        (str \"input\")\n        (lvar : convert_options_to_data_attributes ))) :+\n    (lvar :request_token_tag)) :+\n  (str \"</div></form>\")) html_safe ","(send\n  (send\n    (send\n      (send\n        (dstr\n          (str \"<form method=\\\"\")\n          (begin\n            (lvar :form_method))\n          (str \"\\\" action=\\\"\")\n          (begin\n            (send nil :escape_once\n              (lvar : url_for )))\n          (str \"\\\" class=\\\"button-to\\\"><div>\")) :+\n        (lvar :method_tag)) :+\n      (send nil :tag\n        (str \"input\")\n        (lvar :html_options))) :+\n    (lvar :request_token_tag)) :+\n  (str \"</div></form>\")) html_safe ","(send\n  (send\n    (send\n      (send\n        (dstr\n          (str \"<form method=\\\"\")\n          (begin\n            (lvar :form_method))\n          (str \"\\\" action=\\\"\")\n          (begin\n            (send nil :escape_once\n              (lvar :url)))\n          (str \"\\\" class=\\\"button-to\\\"><div>\")) :+\n        (lvar : tag )) :+\n      (send nil :tag\n        (str \"input\")\n        (lvar :html_options))) :+\n    (lvar :request_token_tag)) :+\n  (str \"</div></form>\")) html_safe ","(send\n  (send\n    (send\n      (send\n        (dstr\n          (str \"<form method=\\\"\")\n          (begin\n            (lvar :form_method))\n          (str \"\\\" action=\\\"\")\n          (begin\n            (send nil :escape_once\n              (lvar :url)))\n          (str \"\\\" class=\\\"button-to\\\"><div>\")) :+\n        (lvar : html_safe )) :+\n      (send nil :tag\n        (str \"input\")\n        (lvar :html_options))) :+\n    (lvar :request_token_tag)) :+\n  (str \"</div></form>\")) html_safe ","(send\n  (send\n    (send\n      (send\n        (dstr\n          (str \"<form method=\\\"\")\n          (begin\n            (lvar :form_method))\n          (str \"\\\" action=\\\"\")\n          (begin\n            (send nil :escape_once\n              (lvar :url)))\n          (str \"\\\" class=\\\"button-to\\\"><div>\")) :+\n        (lvar : method_tag )) :+\n      (send nil :tag\n        (str \"input\")\n        (lvar :html_options))) :+\n    (lvar :request_token_tag)) :+\n  (str \"</div></form>\")) html_safe ","(send\n  (send\n    (send\n      (send\n        (dstr\n          (str \"<form html_options delete =\\\"\")\n          (begin\n            (lvar :form_html_options delete ))\n          (str \"\\\" action=\\\"\")\n          (begin\n            (send nil :escape_once\n              (lvar :url)))\n          (str \"\\\" class=\\\"button-to\\\"><div>\")) :+\n        (lvar :html_options delete _tag)) :+\n      (send nil :tag\n        (str \"input\")\n        (lvar :html_options))) :+\n    (lvar :request_token_tag)) :+\n  (str \"</div></form>\")) html_safe ","(send\n  (send\n    (send\n      (send\n        (dstr\n          (str \"<form html_options delete to_s =\\\"\")\n          (begin\n            (lvar :form_html_options delete to_s ))\n          (str \"\\\" action=\\\"\")\n          (begin\n            (send nil :escape_once\n              (lvar :url)))\n          (str \"\\\" class=\\\"button-to\\\"><div>\")) :+\n        (lvar :html_options delete to_s _tag)) :+\n      (send nil :tag\n        (str \"input\")\n        (lvar :html_options))) :+\n    (lvar :request_token_tag)) :+\n  (str \"</div></form>\")) html_safe ","(send\n  (send\n    (send\n      (send\n        (dstr\n          (str \"<form method=\\\"\")\n          (begin\n            (lvar :form_method))\n          (str \"\\\" action=\\\"\")\n          (begin\n            (send nil :escape_once\n              (lvar :url)))\n          (str \"\\\" class=\\\"button-to\\\"><div>\")) :+\n        (lvar :method_tag)) :+\n      (send nil :tag\n        (str \"input\")\n        (lvar :html_options))) :+\n    (lvar : tag )) :+\n  (str \"</div></form>\")) html_safe ","(send\n  (send\n    (send\n      (send\n        (dstr\n          (str \"<form method=\\\"\")\n          (begin\n            (lvar :form_method))\n          (str \"\\\" action=\\\"\")\n          (begin\n            (send nil :escape_once\n              (lvar :url)))\n          (str \"\\\" class=\\\"button-to\\\"><div>\")) :+\n        (lvar :method_tag)) :+\n      (send nil :tag\n        (str \"input\")\n        (lvar :html_options))) :+\n    (lvar : token_tag )) :+\n  (str \"</div></form>\")) html_safe ","(send\n  (send\n    (send\n      (send\n        (dstr\n          (str \"<form method=\\\"\")\n          (begin\n            (lvar :form_method))\n          (str \"\\\" action=\\\"\")\n          (begin\n            (send nil :escape_once\n              (lvar :url)))\n          (str \"\\\" class=\\\" content_tag -to\\\"><div>\")) :+\n        (lvar :method_tag)) :+\n      (send nil :tag\n        (str \"input\")\n        (lvar :html_options))) :+\n    (lvar :request_token_tag)) :+\n  (str \"</div></form>\")) html_safe ","(send\n  (send\n    (send\n      (send\n        (dstr\n          (str \"<form method=\\\"\")\n          (begin\n            (lvar :form_method))\n          (str \"\\\" action=\\\"\")\n          (begin\n            (send nil :html_escape\n              (lvar :url)))\n          (str \"\\\" \")\n          (begin\n            (if\n              (lvar :remote)\n              (str \"data-remote=\\\"true\\\"\") nil))\n          (str \" class=\\\"button_to\\\"><div>\")) :+\n        (lvar :method_tag)) :+\n      (send nil :tag\n        (str \"input\")\n        (lvar :(or\n  (lvar :html_options)\n  (hash)) stringify_keys ))) :+\n    (lvar :request_token_tag)) :+\n  (str \"</div></form>\")) html_safe ","(send\n  (send\n    (send\n      (send\n        (dstr\n          (str \"<form method=\\\"\")\n          (begin\n            (lvar :form_method))\n          (str \"\\\" action=\\\"\")\n          (begin\n            (send nil :html_escape\n              (lvar :url)))\n          (str \"\\\" \")\n          (begin\n            (if\n              (lvar :remote)\n              (str \"data-remote=\\\"true\\\"\") nil))\n          (str \" class=\\\"button_to\\\"><div>\")) :+\n        (lvar :method_tag)) :+\n      (send nil :tag\n        (str \"input\")\n        (lvar :html_options stringify_keys ))) :+\n    (lvar :request_token_tag)) :+\n  (str \"</div></form>\")) html_safe ","(send\n  (send\n    (send\n      (send\n        (dstr\n          (str \"<form method=\\\"\")\n          (begin\n            (lvar :form_method))\n          (str \"\\\" action=\\\"\")\n          (begin\n            (send nil :html_escape\n              (lvar :url)))\n          (str \"\\\" \")\n          (begin\n            (if\n              (lvar :remote)\n              (str \"data-remote=\\\"true\\\"\") nil))\n          (str \" class=\\\"button_to\\\"><div>\")) :+\n        (lvar :method_tag)) :+\n      (send nil :tag\n        (str \"input\")\n        (lvar : convert_options_to_data_attributes ))) :+\n    (lvar :request_token_tag)) :+\n  (str \"</div></form>\")) html_safe ","(send\n  (send\n    (send\n      (send\n        (dstr\n          (str \"<form method=\\\"\")\n          (begin\n            (lvar :form_method))\n          (str \"\\\" action=\\\"\")\n          (begin\n            (send nil :html_escape\n              (lvar : url_for )))\n          (str \"\\\" \")\n          (begin\n            (if\n              (lvar :remote)\n              (str \"data-remote=\\\"true\\\"\") nil))\n          (str \" class=\\\"button_to\\\"><div>\")) :+\n        (lvar :method_tag)) :+\n      (send nil :tag\n        (str \"input\")\n        (lvar :html_options))) :+\n    (lvar :request_token_tag)) :+\n  (str \"</div></form>\")) html_safe ","(send\n  (send\n    (send\n      (send\n        (dstr\n          (str \"<form method=\\\"\")\n          (begin\n            (lvar :form_method))\n          (str \"\\\" action=\\\"\")\n          (begin\n            (send nil :html_escape\n              (lvar :url)))\n          (str \"\\\" \")\n          (begin\n            (if\n              (lvar :remote)\n              (str \"data-remote=\\\"true\\\"\") nil))\n          (str \" class=\\\"button_to\\\"><div>\")) :+\n        (lvar : tag )) :+\n      (send nil :tag\n        (str \"input\")\n        (lvar :html_options))) :+\n    (lvar :request_token_tag)) :+\n  (str \"</div></form>\")) html_safe ","(send\n  (send\n    (send\n      (send\n        (dstr\n          (str \"<form method=\\\"\")\n          (begin\n            (lvar :form_method))\n          (str \"\\\" action=\\\"\")\n          (begin\n            (send nil :html_escape\n              (lvar :url)))\n          (str \"\\\" \")\n          (begin\n            (if\n              (lvar :remote)\n              (str \"data-remote=\\\"true\\\"\") nil))\n          (str \" class=\\\"button_to\\\"><div>\")) :+\n        (lvar : html_safe )) :+\n      (send nil :tag\n        (str \"input\")\n        (lvar :html_options))) :+\n    (lvar :request_token_tag)) :+\n  (str \"</div></form>\")) html_safe ","(send\n  (send\n    (send\n      (send\n        (dstr\n          (str \"<form method=\\\"\")\n          (begin\n            (lvar :form_method))\n          (str \"\\\" action=\\\"\")\n          (begin\n            (send nil :html_escape\n              (lvar :url)))\n          (str \"\\\" \")\n          (begin\n            (if\n              (lvar :remote)\n              (str \"data-remote=\\\"true\\\"\") nil))\n          (str \" class=\\\"button_to\\\"><div>\")) :+\n        (lvar : method_tag )) :+\n      (send nil :tag\n        (str \"input\")\n        (lvar :html_options))) :+\n    (lvar :request_token_tag)) :+\n  (str \"</div></form>\")) html_safe ","(send\n  (send\n    (send\n      (send\n        (dstr\n          (str \"<form html_options delete =\\\"\")\n          (begin\n            (lvar :form_html_options delete ))\n          (str \"\\\" action=\\\"\")\n          (begin\n            (send nil :html_escape\n              (lvar :url)))\n          (str \"\\\" \")\n          (begin\n            (if\n              (lvar :remote)\n              (str \"data-remote=\\\"true\\\"\") nil))\n          (str \" class=\\\"button_to\\\"><div>\")) :+\n        (lvar :html_options delete _tag)) :+\n      (send nil :tag\n        (str \"input\")\n        (lvar :html_options))) :+\n    (lvar :request_token_tag)) :+\n  (str \"</div></form>\")) html_safe ","(send\n  (send\n    (send\n      (send\n        (dstr\n          (str \"<form html_options delete to_s =\\\"\")\n          (begin\n            (lvar :form_html_options delete to_s ))\n          (str \"\\\" action=\\\"\")\n          (begin\n            (send nil :html_escape\n              (lvar :url)))\n          (str \"\\\" \")\n          (begin\n            (if\n              (lvar :remote)\n              (str \"data-remote=\\\"true\\\"\") nil))\n          (str \" class=\\\"button_to\\\"><div>\")) :+\n        (lvar :html_options delete to_s _tag)) :+\n      (send nil :tag\n        (str \"input\")\n        (lvar :html_options))) :+\n    (lvar :request_token_tag)) :+\n  (str \"</div></form>\")) html_safe ","(send\n  (send\n    (send\n      (send\n        (dstr\n          (str \"<form method=\\\"\")\n          (begin\n            (lvar :form_method))\n          (str \"\\\" action=\\\"\")\n          (begin\n            (send nil :html_escape\n              (lvar :url)))\n          (str \"\\\" \")\n          (begin\n            (if\n              (lvar :remote)\n              (str \"data-remote=\\\"true\\\"\") nil))\n          (str \" class=\\\"button_to\\\"><div>\")) :+\n        (lvar :method_tag)) :+\n      (send nil :tag\n        (str \"input\")\n        (lvar :html_options))) :+\n    (lvar : tag )) :+\n  (str \"</div></form>\")) html_safe ","(send\n  (send\n    (send\n      (send\n        (dstr\n          (str \"<form method=\\\"\")\n          (begin\n            (lvar :form_method))\n          (str \"\\\" action=\\\"\")\n          (begin\n            (send nil :html_escape\n              (lvar :url)))\n          (str \"\\\" \")\n          (begin\n            (if\n              (lvar :remote)\n              (str \"data-remote=\\\"true\\\"\") nil))\n          (str \" class=\\\"button_to\\\"><div>\")) :+\n        (lvar :method_tag)) :+\n      (send nil :tag\n        (str \"input\")\n        (lvar :html_options))) :+\n    (lvar : token_tag )) :+\n  (str \"</div></form>\")) html_safe ","(send\n  (send\n    (send\n      (send\n        (dstr\n          (str \"<form method=\\\"\")\n          (begin\n            (lvar :form_method))\n          (str \"\\\" action=\\\"\")\n          (begin\n            (send nil :html_escape\n              (lvar :url)))\n          (str \"\\\" \")\n          (begin\n            (if\n              (lvar :html_options delete )\n              (str \"data-html_options delete =\\\"true\\\"\") nil))\n          (str \" class=\\\"button_to\\\"><div>\")) :+\n        (lvar :method_tag)) :+\n      (send nil :tag\n        (str \"input\")\n        (lvar :html_options))) :+\n    (lvar :request_token_tag)) :+\n  (str \"</div></form>\")) html_safe ","(send\n  (send\n    (send\n      (send\n        (dstr\n          (str \"<form method=\\\"\")\n          (begin\n            (lvar :form_method))\n          (str \"\\\" action=\\\"\")\n          (begin\n            (send nil :html_escape\n              (lvar :url)))\n          (str \"\\\" \")\n          (begin\n            (if\n              (lvar :remote)\n              (str \"data-remote=\\\"true\\\"\") nil))\n          (str \" class=\\\" content_tag _to\\\"><div>\")) :+\n        (lvar :method_tag)) :+\n      (send nil :tag\n        (str \"input\")\n        (lvar :html_options))) :+\n    (lvar :request_token_tag)) :+\n  (str \"</div></form>\")) html_safe ","(send\n  (send\n    (send\n      (send\n        (dstr\n          (str \"<form method=\\\"\")\n          (begin\n            (lvar :form_method))\n          (str \"\\\" action=\\\"\")\n          (begin\n            (send nil :escape_once\n              (lvar :url)))\n          (str \"\\\" \")\n          (begin\n            (if\n              (lvar :remote)\n              (str \"data-remote=\\\"true\\\"\") nil))\n          (str \" class=\\\"button-to\\\"><div>\")) :+\n        (lvar :method_tag)) :+\n      (send nil :tag\n        (str \"input\")\n        (lvar :(or\n  (lvar :html_options)\n  (hash)) stringify_keys ))) :+\n    (lvar :request_token_tag)) :+\n  (str \"</div></form>\")) html_safe ","(send\n  (send\n    (send\n      (send\n        (dstr\n          (str \"<form method=\\\"\")\n          (begin\n            (lvar :form_method))\n          (str \"\\\" action=\\\"\")\n          (begin\n            (send nil :escape_once\n              (lvar :url)))\n          (str \"\\\" \")\n          (begin\n            (if\n              (lvar :remote)\n              (str \"data-remote=\\\"true\\\"\") nil))\n          (str \" class=\\\"button-to\\\"><div>\")) :+\n        (lvar :method_tag)) :+\n      (send nil :tag\n        (str \"input\")\n        (lvar :html_options stringify_keys ))) :+\n    (lvar :request_token_tag)) :+\n  (str \"</div></form>\")) html_safe ","(send\n  (send\n    (send\n      (send\n        (dstr\n          (str \"<form method=\\\"\")\n          (begin\n            (lvar :form_method))\n          (str \"\\\" action=\\\"\")\n          (begin\n            (send nil :escape_once\n              (lvar :url)))\n          (str \"\\\" \")\n          (begin\n            (if\n              (lvar :remote)\n              (str \"data-remote=\\\"true\\\"\") nil))\n          (str \" class=\\\"button-to\\\"><div>\")) :+\n        (lvar :method_tag)) :+\n      (send nil :tag\n        (str \"input\")\n        (lvar : convert_options_to_data_attributes ))) :+\n    (lvar :request_token_tag)) :+\n  (str \"</div></form>\")) html_safe ","(send\n  (send\n    (send\n      (send\n        (dstr\n          (str \"<form method=\\\"\")\n          (begin\n            (lvar :form_method))\n          (str \"\\\" action=\\\"\")\n          (begin\n            (send nil :escape_once\n              (lvar : url_for )))\n          (str \"\\\" \")\n          (begin\n            (if\n              (lvar :remote)\n              (str \"data-remote=\\\"true\\\"\") nil))\n          (str \" class=\\\"button-to\\\"><div>\")) :+\n        (lvar :method_tag)) :+\n      (send nil :tag\n        (str \"input\")\n        (lvar :html_options))) :+\n    (lvar :request_token_tag)) :+\n  (str \"</div></form>\")) html_safe ","(send\n  (send\n    (send\n      (send\n        (dstr\n          (str \"<form method=\\\"\")\n          (begin\n            (lvar :form_method))\n          (str \"\\\" action=\\\"\")\n          (begin\n            (send nil :escape_once\n              (lvar :url)))\n          (str \"\\\" \")\n          (begin\n            (if\n              (lvar :remote)\n              (str \"data-remote=\\\"true\\\"\") nil))\n          (str \" class=\\\"button-to\\\"><div>\")) :+\n        (lvar : tag )) :+\n      (send nil :tag\n        (str \"input\")\n        (lvar :html_options))) :+\n    (lvar :request_token_tag)) :+\n  (str \"</div></form>\")) html_safe ","(send\n  (send\n    (send\n      (send\n        (dstr\n          (str \"<form method=\\\"\")\n          (begin\n            (lvar :form_method))\n          (str \"\\\" action=\\\"\")\n          (begin\n            (send nil :escape_once\n              (lvar :url)))\n          (str \"\\\" \")\n          (begin\n            (if\n              (lvar :remote)\n              (str \"data-remote=\\\"true\\\"\") nil))\n          (str \" class=\\\"button-to\\\"><div>\")) :+\n        (lvar : html_safe )) :+\n      (send nil :tag\n        (str \"input\")\n        (lvar :html_options))) :+\n    (lvar :request_token_tag)) :+\n  (str \"</div></form>\")) html_safe ","(send\n  (send\n    (send\n      (send\n        (dstr\n          (str \"<form method=\\\"\")\n          (begin\n            (lvar :form_method))\n          (str \"\\\" action=\\\"\")\n          (begin\n            (send nil :escape_once\n              (lvar :url)))\n          (str \"\\\" \")\n          (begin\n            (if\n              (lvar :remote)\n              (str \"data-remote=\\\"true\\\"\") nil))\n          (str \" class=\\\"button-to\\\"><div>\")) :+\n        (lvar : method_tag )) :+\n      (send nil :tag\n        (str \"input\")\n        (lvar :html_options))) :+\n    (lvar :request_token_tag)) :+\n  (str \"</div></form>\")) html_safe ","(send\n  (send\n    (send\n      (send\n        (dstr\n          (str \"<form html_options delete =\\\"\")\n          (begin\n            (lvar :form_html_options delete ))\n          (str \"\\\" action=\\\"\")\n          (begin\n            (send nil :escape_once\n              (lvar :url)))\n          (str \"\\\" \")\n          (begin\n            (if\n              (lvar :remote)\n              (str \"data-remote=\\\"true\\\"\") nil))\n          (str \" class=\\\"button-to\\\"><div>\")) :+\n        (lvar :html_options delete _tag)) :+\n      (send nil :tag\n        (str \"input\")\n        (lvar :html_options))) :+\n    (lvar :request_token_tag)) :+\n  (str \"</div></form>\")) html_safe ","(send\n  (send\n    (send\n      (send\n        (dstr\n          (str \"<form html_options delete to_s =\\\"\")\n          (begin\n            (lvar :form_html_options delete to_s ))\n          (str \"\\\" action=\\\"\")\n          (begin\n            (send nil :escape_once\n              (lvar :url)))\n          (str \"\\\" \")\n          (begin\n            (if\n              (lvar :remote)\n              (str \"data-remote=\\\"true\\\"\") nil))\n          (str \" class=\\\"button-to\\\"><div>\")) :+\n        (lvar :html_options delete to_s _tag)) :+\n      (send nil :tag\n        (str \"input\")\n        (lvar :html_options))) :+\n    (lvar :request_token_tag)) :+\n  (str \"</div></form>\")) html_safe ","(send\n  (send\n    (send\n      (send\n        (dstr\n          (str \"<form method=\\\"\")\n          (begin\n            (lvar :form_method))\n          (str \"\\\" action=\\\"\")\n          (begin\n            (send nil :escape_once\n              (lvar :url)))\n          (str \"\\\" \")\n          (begin\n            (if\n              (lvar :remote)\n              (str \"data-remote=\\\"true\\\"\") nil))\n          (str \" class=\\\"button-to\\\"><div>\")) :+\n        (lvar :method_tag)) :+\n      (send nil :tag\n        (str \"input\")\n        (lvar :html_options))) :+\n    (lvar : tag )) :+\n  (str \"</div></form>\")) html_safe ","(send\n  (send\n    (send\n      (send\n        (dstr\n          (str \"<form method=\\\"\")\n          (begin\n            (lvar :form_method))\n          (str \"\\\" action=\\\"\")\n          (begin\n            (send nil :escape_once\n              (lvar :url)))\n          (str \"\\\" \")\n          (begin\n            (if\n              (lvar :remote)\n              (str \"data-remote=\\\"true\\\"\") nil))\n          (str \" class=\\\"button-to\\\"><div>\")) :+\n        (lvar :method_tag)) :+\n      (send nil :tag\n        (str \"input\")\n        (lvar :html_options))) :+\n    (lvar : token_tag )) :+\n  (str \"</div></form>\")) html_safe ","(send\n  (send\n    (send\n      (send\n        (dstr\n          (str \"<form method=\\\"\")\n          (begin\n            (lvar :form_method))\n          (str \"\\\" action=\\\"\")\n          (begin\n            (send nil :escape_once\n              (lvar :url)))\n          (str \"\\\" \")\n          (begin\n            (if\n              (lvar :html_options delete )\n              (str \"data-html_options delete =\\\"true\\\"\") nil))\n          (str \" class=\\\"button-to\\\"><div>\")) :+\n        (lvar :method_tag)) :+\n      (send nil :tag\n        (str \"input\")\n        (lvar :html_options))) :+\n    (lvar :request_token_tag)) :+\n  (str \"</div></form>\")) html_safe ","(send\n  (send\n    (send\n      (send\n        (dstr\n          (str \"<form method=\\\"\")\n          (begin\n            (lvar :form_method))\n          (str \"\\\" action=\\\"\")\n          (begin\n            (send nil :escape_once\n              (lvar :url)))\n          (str \"\\\" \")\n          (begin\n            (if\n              (lvar :remote)\n              (str \"data-remote=\\\"true\\\"\") nil))\n          (str \" class=\\\" content_tag -to\\\"><div>\")) :+\n        (lvar :method_tag)) :+\n      (send nil :tag\n        (str \"input\")\n        (lvar :html_options))) :+\n    (lvar :request_token_tag)) :+\n  (str \"</div></form>\")) html_safe ","(send\n  (send\n    (send\n      (send\n        (dstr\n          (str \"<form method=\\\"\")\n          (begin\n            (lvar :form_method))\n          (str \"\\\" action=\\\"\")\n          (begin\n            (send nil :escape_once\n              (lvar :url)))\n          (str \"\\\" \")\n          (begin\n            (if\n              (lvar :remote)\n              (str \"data-remote=\\\"true\\\"\") nil))\n          (str \" class=\\\"button_to\\\"><div>\")) :+\n        (lvar :method_tag)) :+\n      (send nil :tag\n        (str \"input\")\n        (lvar :(or\n  (lvar :html_options)\n  (hash)) stringify_keys ))) :+\n    (lvar :request_token_tag)) :+\n  (str \"</div></form>\")) html_safe ","(send\n  (send\n    (send\n      (send\n        (dstr\n          (str \"<form method=\\\"\")\n          (begin\n            (lvar :form_method))\n          (str \"\\\" action=\\\"\")\n          (begin\n            (send nil :escape_once\n              (lvar :url)))\n          (str \"\\\" \")\n          (begin\n            (if\n              (lvar :remote)\n              (str \"data-remote=\\\"true\\\"\") nil))\n          (str \" class=\\\"button_to\\\"><div>\")) :+\n        (lvar :method_tag)) :+\n      (send nil :tag\n        (str \"input\")\n        (lvar :html_options stringify_keys ))) :+\n    (lvar :request_token_tag)) :+\n  (str \"</div></form>\")) html_safe ","(send\n  (send\n    (send\n      (send\n        (dstr\n          (str \"<form method=\\\"\")\n          (begin\n            (lvar :form_method))\n          (str \"\\\" action=\\\"\")\n          (begin\n            (send nil :escape_once\n              (lvar :url)))\n          (str \"\\\" \")\n          (begin\n            (if\n              (lvar :remote)\n              (str \"data-remote=\\\"true\\\"\") nil))\n          (str \" class=\\\"button_to\\\"><div>\")) :+\n        (lvar :method_tag)) :+\n      (send nil :tag\n        (str \"input\")\n        (lvar : convert_options_to_data_attributes ))) :+\n    (lvar :request_token_tag)) :+\n  (str \"</div></form>\")) html_safe ","(send\n  (send\n    (send\n      (send\n        (dstr\n          (str \"<form method=\\\"\")\n          (begin\n            (lvar :form_method))\n          (str \"\\\" action=\\\"\")\n          (begin\n            (send nil :escape_once\n              (lvar : url_for )))\n          (str \"\\\" \")\n          (begin\n            (if\n              (lvar :remote)\n              (str \"data-remote=\\\"true\\\"\") nil))\n          (str \" class=\\\"button_to\\\"><div>\")) :+\n        (lvar :method_tag)) :+\n      (send nil :tag\n        (str \"input\")\n        (lvar :html_options))) :+\n    (lvar :request_token_tag)) :+\n  (str \"</div></form>\")) html_safe ","(send\n  (send\n    (send\n      (send\n        (dstr\n          (str \"<form method=\\\"\")\n          (begin\n            (lvar :form_method))\n          (str \"\\\" action=\\\"\")\n          (begin\n            (send nil :escape_once\n              (lvar :url)))\n          (str \"\\\" \")\n          (begin\n            (if\n              (lvar :remote)\n              (str \"data-remote=\\\"true\\\"\") nil))\n          (str \" class=\\\"button_to\\\"><div>\")) :+\n        (lvar : tag )) :+\n      (send nil :tag\n        (str \"input\")\n        (lvar :html_options))) :+\n    (lvar :request_token_tag)) :+\n  (str \"</div></form>\")) html_safe ","(send\n  (send\n    (send\n      (send\n        (dstr\n          (str \"<form method=\\\"\")\n          (begin\n            (lvar :form_method))\n          (str \"\\\" action=\\\"\")\n          (begin\n            (send nil :escape_once\n              (lvar :url)))\n          (str \"\\\" \")\n          (begin\n            (if\n              (lvar :remote)\n              (str \"data-remote=\\\"true\\\"\") nil))\n          (str \" class=\\\"button_to\\\"><div>\")) :+\n        (lvar : html_safe )) :+\n      (send nil :tag\n        (str \"input\")\n        (lvar :html_options))) :+\n    (lvar :request_token_tag)) :+\n  (str \"</div></form>\")) html_safe ","(send\n  (send\n    (send\n      (send\n        (dstr\n          (str \"<form method=\\\"\")\n          (begin\n            (lvar :form_method))\n          (str \"\\\" action=\\\"\")\n          (begin\n            (send nil :escape_once\n              (lvar :url)))\n          (str \"\\\" \")\n          (begin\n            (if\n              (lvar :remote)\n              (str \"data-remote=\\\"true\\\"\") nil))\n          (str \" class=\\\"button_to\\\"><div>\")) :+\n        (lvar : method_tag )) :+\n      (send nil :tag\n        (str \"input\")\n        (lvar :html_options))) :+\n    (lvar :request_token_tag)) :+\n  (str \"</div></form>\")) html_safe ","(send\n  (send\n    (send\n      (send\n        (dstr\n          (str \"<form html_options delete =\\\"\")\n          (begin\n            (lvar :form_html_options delete ))\n          (str \"\\\" action=\\\"\")\n          (begin\n            (send nil :escape_once\n              (lvar :url)))\n          (str \"\\\" \")\n          (begin\n            (if\n              (lvar :remote)\n              (str \"data-remote=\\\"true\\\"\") nil))\n          (str \" class=\\\"button_to\\\"><div>\")) :+\n        (lvar :html_options delete _tag)) :+\n      (send nil :tag\n        (str \"input\")\n        (lvar :html_options))) :+\n    (lvar :request_token_tag)) :+\n  (str \"</div></form>\")) html_safe ","(send\n  (send\n    (send\n      (send\n        (dstr\n          (str \"<form html_options delete to_s =\\\"\")\n          (begin\n            (lvar :form_html_options delete to_s ))\n          (str \"\\\" action=\\\"\")\n          (begin\n            (send nil :escape_once\n              (lvar :url)))\n          (str \"\\\" \")\n          (begin\n            (if\n              (lvar :remote)\n              (str \"data-remote=\\\"true\\\"\") nil))\n          (str \" class=\\\"button_to\\\"><div>\")) :+\n        (lvar :html_options delete to_s _tag)) :+\n      (send nil :tag\n        (str \"input\")\n        (lvar :html_options))) :+\n    (lvar :request_token_tag)) :+\n  (str \"</div></form>\")) html_safe ","(send\n  (send\n    (send\n      (send\n        (dstr\n          (str \"<form method=\\\"\")\n          (begin\n            (lvar :form_method))\n          (str \"\\\" action=\\\"\")\n          (begin\n            (send nil :escape_once\n              (lvar :url)))\n          (str \"\\\" \")\n          (begin\n            (if\n              (lvar :remote)\n              (str \"data-remote=\\\"true\\\"\") nil))\n          (str \" class=\\\"button_to\\\"><div>\")) :+\n        (lvar :method_tag)) :+\n      (send nil :tag\n        (str \"input\")\n        (lvar :html_options))) :+\n    (lvar : tag )) :+\n  (str \"</div></form>\")) html_safe ","(send\n  (send\n    (send\n      (send\n        (dstr\n          (str \"<form method=\\\"\")\n          (begin\n            (lvar :form_method))\n          (str \"\\\" action=\\\"\")\n          (begin\n            (send nil :escape_once\n              (lvar :url)))\n          (str \"\\\" \")\n          (begin\n            (if\n              (lvar :remote)\n              (str \"data-remote=\\\"true\\\"\") nil))\n          (str \" class=\\\"button_to\\\"><div>\")) :+\n        (lvar :method_tag)) :+\n      (send nil :tag\n        (str \"input\")\n        (lvar :html_options))) :+\n    (lvar : token_tag )) :+\n  (str \"</div></form>\")) html_safe ","(send\n  (send\n    (send\n      (send\n        (dstr\n          (str \"<form method=\\\"\")\n          (begin\n            (lvar :form_method))\n          (str \"\\\" action=\\\"\")\n          (begin\n            (send nil :escape_once\n              (lvar :url)))\n          (str \"\\\" \")\n          (begin\n            (if\n              (lvar :html_options delete )\n              (str \"data-html_options delete =\\\"true\\\"\") nil))\n          (str \" class=\\\"button_to\\\"><div>\")) :+\n        (lvar :method_tag)) :+\n      (send nil :tag\n        (str \"input\")\n        (lvar :html_options))) :+\n    (lvar :request_token_tag)) :+\n  (str \"</div></form>\")) html_safe ","(send\n  (send\n    (send\n      (send\n        (dstr\n          (str \"<form method=\\\"\")\n          (begin\n            (lvar :form_method))\n          (str \"\\\" action=\\\"\")\n          (begin\n            (send nil :escape_once\n              (lvar :url)))\n          (str \"\\\" \")\n          (begin\n            (if\n              (lvar :remote)\n              (str \"data-remote=\\\"true\\\"\") nil))\n          (str \" class=\\\" content_tag _to\\\"><div>\")) :+\n        (lvar :method_tag)) :+\n      (send nil :tag\n        (str \"input\")\n        (lvar :html_options))) :+\n    (lvar :request_token_tag)) :+\n  (str \"</div></form>\")) html_safe ","(send\n  (send\n    (send\n      (send\n        (dstr\n          (str \"<form method=\\\"\")\n          (begin\n            (lvar :form_method))\n          (str \"\\\" action=\\\"\")\n          (begin\n            (send\n              (const\n                (const nil :ERB) :Util) :html_escape\n              (lvar :url)))\n          (str \"\\\" \")\n          (begin\n            (if\n              (lvar :remote)\n              (str \"data-remote=\\\"true\\\"\") nil))\n          (str \" class=\\\"\")\n          (begin\n            (send\n              (const\n                (const nil :ERB) :Util) :html_escape\n              (lvar :form_class)))\n          (str \"\\\"><div>\")) :+\n        (lvar :method_tag)) :+\n      (send nil :tag\n        (str \"input\")\n        (lvar :(or\n  (lvar :html_options)\n  (hash)) stringify_keys ))) :+\n    (lvar :request_token_tag)) :+\n  (str \"</div></form>\")) html_safe ","(send\n  (send\n    (send\n      (send\n        (dstr\n          (str \"<form method=\\\"\")\n          (begin\n            (lvar :form_method))\n          (str \"\\\" action=\\\"\")\n          (begin\n            (send\n              (const\n                (const nil :ERB) :Util) :html_escape\n              (lvar :url)))\n          (str \"\\\" \")\n          (begin\n            (if\n              (lvar :remote)\n              (str \"data-remote=\\\"true\\\"\") nil))\n          (str \" class=\\\"\")\n          (begin\n            (send\n              (const\n                (const nil :ERB) :Util) :html_escape\n              (lvar :form_class)))\n          (str \"\\\"><div>\")) :+\n        (lvar :method_tag)) :+\n      (send nil :tag\n        (str \"input\")\n        (lvar :html_options stringify_keys ))) :+\n    (lvar :request_token_tag)) :+\n  (str \"</div></form>\")) html_safe ","(send\n  (send\n    (send\n      (send\n        (dstr\n          (str \"<form method=\\\"\")\n          (begin\n            (lvar :form_method))\n          (str \"\\\" action=\\\"\")\n          (begin\n            (send\n              (const\n                (const nil :ERB) :Util) :html_escape\n              (lvar :url)))\n          (str \"\\\" \")\n          (begin\n            (if\n              (lvar :remote)\n              (str \"data-remote=\\\"true\\\"\") nil))\n          (str \" class=\\\"\")\n          (begin\n            (send\n              (const\n                (const nil :ERB) :Util) :html_escape\n              (lvar :form_class)))\n          (str \"\\\"><div>\")) :+\n        (lvar :method_tag)) :+\n      (send nil :tag\n        (str \"input\")\n        (lvar : convert_options_to_data_attributes ))) :+\n    (lvar :request_token_tag)) :+\n  (str \"</div></form>\")) html_safe ","(send\n  (send\n    (send\n      (send\n        (dstr\n          (str \"<form method=\\\"\")\n          (begin\n            (lvar :form_method))\n          (str \"\\\" action=\\\"\")\n          (begin\n            (send\n              (const\n                (const nil :ERB) :Util) :html_escape\n              (lvar : url_for )))\n          (str \"\\\" \")\n          (begin\n            (if\n              (lvar :remote)\n              (str \"data-remote=\\\"true\\\"\") nil))\n          (str \" class=\\\"\")\n          (begin\n            (send\n              (const\n                (const nil :ERB) :Util) :html_escape\n              (lvar :form_class)))\n          (str \"\\\"><div>\")) :+\n        (lvar :method_tag)) :+\n      (send nil :tag\n        (str \"input\")\n        (lvar :html_options))) :+\n    (lvar :request_token_tag)) :+\n  (str \"</div></form>\")) html_safe ","(send\n  (send\n    (send\n      (send\n        (dstr\n          (str \"<form method=\\\"\")\n          (begin\n            (lvar :form_method))\n          (str \"\\\" action=\\\"\")\n          (begin\n            (send\n              (const\n                (const nil :ERB) :Util) :html_escape\n              (lvar :url)))\n          (str \"\\\" \")\n          (begin\n            (if\n              (lvar :remote)\n              (str \"data-remote=\\\"true\\\"\") nil))\n          (str \" class=\\\"\")\n          (begin\n            (send\n              (const\n                (const nil :ERB) :Util) :html_escape\n              (lvar :form_class)))\n          (str \"\\\"><div>\")) :+\n        (lvar : tag )) :+\n      (send nil :tag\n        (str \"input\")\n        (lvar :html_options))) :+\n    (lvar :request_token_tag)) :+\n  (str \"</div></form>\")) html_safe ","(send\n  (send\n    (send\n      (send\n        (dstr\n          (str \"<form method=\\\"\")\n          (begin\n            (lvar :form_method))\n          (str \"\\\" action=\\\"\")\n          (begin\n            (send\n              (const\n                (const nil :ERB) :Util) :html_escape\n              (lvar :url)))\n          (str \"\\\" \")\n          (begin\n            (if\n              (lvar :remote)\n              (str \"data-remote=\\\"true\\\"\") nil))\n          (str \" class=\\\"\")\n          (begin\n            (send\n              (const\n                (const nil :ERB) :Util) :html_escape\n              (lvar :form_class)))\n          (str \"\\\"><div>\")) :+\n        (lvar : html_safe )) :+\n      (send nil :tag\n        (str \"input\")\n        (lvar :html_options))) :+\n    (lvar :request_token_tag)) :+\n  (str \"</div></form>\")) html_safe ","(send\n  (send\n    (send\n      (send\n        (dstr\n          (str \"<form method=\\\"\")\n          (begin\n            (lvar :form_method))\n          (str \"\\\" action=\\\"\")\n          (begin\n            (send\n              (const\n                (const nil :ERB) :Util) :html_escape\n              (lvar :url)))\n          (str \"\\\" \")\n          (begin\n            (if\n              (lvar :remote)\n              (str \"data-remote=\\\"true\\\"\") nil))\n          (str \" class=\\\"\")\n          (begin\n            (send\n              (const\n                (const nil :ERB) :Util) :html_escape\n              (lvar :form_class)))\n          (str \"\\\"><div>\")) :+\n        (lvar : method_tag )) :+\n      (send nil :tag\n        (str \"input\")\n        (lvar :html_options))) :+\n    (lvar :request_token_tag)) :+\n  (str \"</div></form>\")) html_safe ","(send\n  (send\n    (send\n      (send\n        (dstr\n          (str \"<form html_options delete =\\\"\")\n          (begin\n            (lvar :form_html_options delete ))\n          (str \"\\\" action=\\\"\")\n          (begin\n            (send\n              (const\n                (const nil :ERB) :Util) :html_escape\n              (lvar :url)))\n          (str \"\\\" \")\n          (begin\n            (if\n              (lvar :remote)\n              (str \"data-remote=\\\"true\\\"\") nil))\n          (str \" class=\\\"\")\n          (begin\n            (send\n              (const\n                (const nil :ERB) :Util) :html_escape\n              (lvar :form_class)))\n          (str \"\\\"><div>\")) :+\n        (lvar :html_options delete _tag)) :+\n      (send nil :tag\n        (str \"input\")\n        (lvar :html_options))) :+\n    (lvar :request_token_tag)) :+\n  (str \"</div></form>\")) html_safe ","(send\n  (send\n    (send\n      (send\n        (dstr\n          (str \"<form html_options delete to_s =\\\"\")\n          (begin\n            (lvar :form_html_options delete to_s ))\n          (str \"\\\" action=\\\"\")\n          (begin\n            (send\n              (const\n                (const nil :ERB) :Util) :html_escape\n              (lvar :url)))\n          (str \"\\\" \")\n          (begin\n            (if\n              (lvar :remote)\n              (str \"data-remote=\\\"true\\\"\") nil))\n          (str \" class=\\\"\")\n          (begin\n            (send\n              (const\n                (const nil :ERB) :Util) :html_escape\n              (lvar :form_class)))\n          (str \"\\\"><div>\")) :+\n        (lvar :html_options delete to_s _tag)) :+\n      (send nil :tag\n        (str \"input\")\n        (lvar :html_options))) :+\n    (lvar :request_token_tag)) :+\n  (str \"</div></form>\")) html_safe ","(send\n  (send\n    (send\n      (send\n        (dstr\n          (str \"<form method=\\\"\")\n          (begin\n            (lvar :form_method))\n          (str \"\\\" action=\\\"\")\n          (begin\n            (send\n              (const\n                (const nil :ERB) :Util) :html_escape\n              (lvar :url)))\n          (str \"\\\" \")\n          (begin\n            (if\n              (lvar :remote)\n              (str \"data-remote=\\\"true\\\"\") nil))\n          (str \" class=\\\"\")\n          (begin\n            (send\n              (const\n                (const nil :ERB) :Util) :html_escape\n              (lvar :form_class)))\n          (str \"\\\"><div>\")) :+\n        (lvar :method_tag)) :+\n      (send nil :tag\n        (str \"input\")\n        (lvar :html_options))) :+\n    (lvar : tag )) :+\n  (str \"</div></form>\")) html_safe ","(send\n  (send\n    (send\n      (send\n        (dstr\n          (str \"<form method=\\\"\")\n          (begin\n            (lvar :form_method))\n          (str \"\\\" action=\\\"\")\n          (begin\n            (send\n              (const\n                (const nil :ERB) :Util) :html_escape\n              (lvar :url)))\n          (str \"\\\" \")\n          (begin\n            (if\n              (lvar :remote)\n              (str \"data-remote=\\\"true\\\"\") nil))\n          (str \" class=\\\"\")\n          (begin\n            (send\n              (const\n                (const nil :ERB) :Util) :html_escape\n              (lvar :form_class)))\n          (str \"\\\"><div>\")) :+\n        (lvar :method_tag)) :+\n      (send nil :tag\n        (str \"input\")\n        (lvar :html_options))) :+\n    (lvar : token_tag )) :+\n  (str \"</div></form>\")) html_safe ","(send\n  (send\n    (send\n      (send\n        (dstr\n          (str \"<form method=\\\"\")\n          (begin\n            (lvar :form_method))\n          (str \"\\\" action=\\\"\")\n          (begin\n            (send\n              (const\n                (const nil :ERB) :Util) :html_escape\n              (lvar :url)))\n          (str \"\\\" \")\n          (begin\n            (if\n              (lvar :html_options delete )\n              (str \"data-html_options delete =\\\"true\\\"\") nil))\n          (str \" class=\\\"\")\n          (begin\n            (send\n              (const\n                (const nil :ERB) :Util) :html_escape\n              (lvar :form_class)))\n          (str \"\\\"><div>\")) :+\n        (lvar :method_tag)) :+\n      (send nil :tag\n        (str \"input\")\n        (lvar :html_options))) :+\n    (lvar :request_token_tag)) :+\n  (str \"</div></form>\")) html_safe "," tag  safe_concat safe_concat "," html_safe  safe_concat safe_concat "," method_tag  safe_concat safe_concat ","html_options delete _tag safe_concat safe_concat ","html_options delete to_s _tag safe_concat safe_concat "," tag  safe_concat "," html_safe  safe_concat "," method_tag  safe_concat ","html_options delete _tag safe_concat ","html_options delete to_s _tag safe_concat ","html_options delete  == ","html_options delete to_s  == ","  tag  ","  html_safe  ","  method_tag  "," html_options delete _tag "," html_options delete to_s _tag ","(or\n  (lvar :html_options)\n  (hash)) stringify_keys  delete to_s ","html_options stringify_keys  delete to_s "," convert_options_to_data_attributes  delete to_s "]}," ActionView Helpers UploadProgressHelper upload_target_id":{"type":"method","name":"upload_target_id","children":[],"call":[" current_upload_id "]}," ActionView Helpers UploadProgressHelper status_tag_id":{"type":"method","name":"status_tag_id","children":[],"call":[" current_upload_id "]}," ActionView Helpers UploadProgressHelper progress_bar_id":{"type":"method","name":"progress_bar_id","children":[],"call":[" current_upload_id "]}," ActionView Helpers UploadProgressHelper upload_update_object":{"type":"method","name":"upload_update_object","children":[],"call":[" current_upload_id "]}," ActionView Helpers UploadProgressHelper upload_progress_text":{"type":"method","name":"upload_progress_text","children":[],"call":[" eval ","@@default_messages [] "," upload_progress finished? "," upload_progress "," upload_progress started? ! "," upload_progress started? "," upload_progress nil? ","state to_sym "]}," ActionView Helpers UploadProgressHelper upload_progress_update_bar_js":{"type":"method","name":"upload_progress_update_bar_js","children":[],"call":[" progress_bar_id "," to_i ","progress completed_percent ","progress finished? ","progress started? ! ","progress started? ","progress nil? "," upload_progress ","  upload_progress _bar_id "," upload_progress  completed_percent "," upload_progress  finished? "," upload_progress  started? ! "," upload_progress  started? "," upload_progress  nil? "," upload_ upload_progress  "]}," ActionView Helpers UploadProgressHelper upload_progress_status":{"type":"method","name":"upload_progress_status","children":[],"call":[" upload_progress_update_bar_js "," upload_progress_text "]}," ActionView Helpers UploadProgressHelper upload_status_progress_bar_tag":{"type":"method","name":"upload_status_progress_bar_tag","children":[],"call":[" content_tag ","(pair\n  (sym :id)\n  (send nil :progress_bar_id)) merge merge ","(pair\n  (sym :id)\n  (send nil :progress_bar_id)) merge "," progress_bar_id ","(send\n  (lvar :options) :[]\n  (sym :class)) compact join ","(send\n  (lvar :options) :[]\n  (sym :class)) compact ","options [] "]}," ActionView Helpers UploadProgressHelper upload_status_text_tag":{"type":"method","name":"upload_status_text_tag","children":[],"call":[" content_tag ","(pair\n  (sym :id)\n  (send nil :status_tag_id)) merge "," status_tag_id "]}," ActionView Helpers UploadProgressHelper upload_status_tag":{"type":"method","name":"upload_status_tag","children":[],"call":[" upload_status_progress_bar_tag + "," upload_status_text_tag "," upload_status_progress_bar_tag "]}," ActionView Helpers UploadProgressHelper finish_upload_status":{"type":"method","name":"finish_upload_status","children":[],"call":[" content_tag "," content_tag + "," upload_update_object ","js << "," escape_javascript ","options [] ","options [] blank? "]}," ActionView Helpers UploadProgressHelper form_tag_with_upload_progress":{"type":"method","name":"form_tag_with_upload_progress","children":[],"call":["tag << "," content_tag ","options [] "," form_tag ","options delete ","(sym :begin) each ","options []= ","options [] << "," escape_javascript "," upload_progress_text "," status_tag_id "," upload_progress_update_bar_js ","updater << "," options_for_ajax "," upload_update_object ","{ + + ","{ + ","(send\n  (lvar :js_options) :map) sort join ","(send\n  (lvar :js_options) :map) sort ","js_options map ","upload_action_url include? "," upload_target_id "," url_for ","status_url_for_options merge ","status_url_for_options is_a? "," next_upload_id ","url_for_options delete ","options dup "," form_tag  << "," content_ form_tag  ","options dup  [] "," form_ form_tag  ","options dup  delete ","options dup  []= ","options dup  [] << "," status_ form_tag _id "," options dup _for_ajax ","(send\n  (lvar :js_options dup ) :map) sort join ","(send\n  (lvar :js_options dup ) :map) sort ","js_options dup  map "," url_for  include? "," url_for _for_options merge ","status_url_for_options merge  merge ","status_url_for_options dup  merge "," url_for _for_options is_a? ","status_url_for_options merge  is_a? ","status_url_for_options dup  is_a? ","url_for_options dup  delete ","options dup  dup "]}," ActionView Helpers TextHelper auto_link_email_addresses":{"type":"method","name":"auto_link_email_addresses","children":[],"call":["text gsub "," block_given? ","body match ","Regexp  escape ","text dup "," mail_to "," auto_linked? "," sanitize ","text == ","options [] == ","options [] ","text html_safe ","text to_str gsub ","text to_str "," sanitize  gsub ","text dup  match "," sanitize  dup "," sanitize  == "," sanitize  html_safe "," sanitize  to_str gsub "," sanitize  to_str "]}," ActionView Helpers TextHelper auto_link_urls":{"type":"method","name":"auto_link_urls","children":[],"call":["b == "," tag_options ","href_options stringify_keys ","a =~ ","text gsub "," block_given? ","b + ","html_options stringify_keys "," content_tag + ","punctuation reverse join ","punctuation reverse "," content_tag ","link_attributes merge "," h ","http:// + ","href << ","punctuation pop ","href scan size > ","href scan size ","href scan ","punctuation last ","BRACKETS  [] ","punctuation push ","href sub! "," auto_linked? ","href index == ","href index ","right =~ ","left =~ ","href =~ ","(send\n  (lvar :text) :gsub\n  (const nil :AUTO_LINK_RE)) html_safe ","options [] ! ! ","options [] ! ","options [] "," sanitize ","options [] == ","(or\n  (send\n    (lvar :options) :[]\n    (sym :safe))\n  (send\n    (lvar :text) :html_safe?)) ! ","text html_safe? ","options [] != ","text to_str gsub ","text to_str ","http:// + _options stringify_keys "," sanitize _options stringify_keys ","b +  gsub ","html_options stringify_keys  merge ","http:// +  << "," sanitize  << ","http:// +  scan size > "," sanitize  scan size > ","http:// +  scan size "," sanitize  scan size ","http:// +  scan "," sanitize  scan ","http:// +  sub! "," sanitize  sub! ","http:// +  index == "," sanitize  index == ","http:// +  index "," sanitize  index ","http:// +  =~ "," sanitize  =~ ","(send\n  (lvar :b + ) :gsub\n  (const nil :AUTO_LINK_RE)) html_safe "," options [] !=  ","(or\n  (send\n    (lvar :options) :[]\n    (sym :safe))\n  (send\n    (lvar :b + ) :html_safe?)) ! ","b +  html_safe? ","b +  to_str gsub ","b +  to_str "]}," ActionView Helpers TextHelper set_cycle":{"type":"method","name":"set_cycle","children":[],"call":["@_cycles []= ","Hash  new ","@_cycles nil? ","Hash  new  []= ","Hash  new  nil? "]}," ActionView Helpers TextHelper get_cycle":{"type":"method","name":"get_cycle","children":[],"call":["@_cycles [] ","Hash  new ","@_cycles nil? ","Hash  new  [] ","Hash  new  nil? "]}," ActionView Helpers TextHelper Cycle to_s":{"type":"method","name":"to_s","children":[],"call":["(send\n  (ivar :@index) :+\n  (int 1)) % ","@values size ","@index + ","@values [] to_s ","@values [] "," next_index ","(send\n  (ivar :(send\n  (ivar :@index) :+\n  (int 1)) % ) :+\n  (int 1)) % ","(send\n  (ivar : next_index ) :+\n  (int 1)) % ","@@values [] to_s s size ","(send\n  (ivar :@index) :+\n  (int 1)) %  + "," next_index  + ","@@values [] to_s s [] to_s ","@@values [] to_s s [] "]}," ActionView Helpers TextHelper Cycle reset":{"type":"method","name":"reset","children":[],"call":[]}," ActionView Helpers TextHelper Cycle initialize":{"type":"method","name":"initialize","children":[],"call":[" reset ","values unshift "]}," ActionView Helpers TextHelper reset_cycle":{"type":"method","name":"reset_cycle","children":[],"call":["cycle reset ","cycle nil? "," get_cycle "," get_cycle  reset "," get_cycle  nil? "," get_ get_cycle  "]}," ActionView Helpers TextHelper cycle":{"type":"method","name":"cycle","children":[],"call":["cycle to_s "," set_cycle ","Cycle  new ","cycle values != ","cycle values ","cycle nil? "," get_cycle ","values unshift ","params [] ","values pop ","values last instance_of? ","values last ","cycle values == ","options fetch ","values extract_options! "," set_cycle  to_s "," get_cycle  to_s "," set_ set_cycle  "," set_ get_cycle  "," set_cycle  values != "," get_cycle  values != "," set_cycle  values "," get_cycle  values "," set_cycle  nil? "," get_cycle  nil? "," get_ set_cycle  "," get_ get_cycle  ","values pop  [] "," set_cycle  values == "," get_cycle  values == ","values extract_options!  fetch ","values extract_values extract_options! ! "]}," ActionView Helpers TextHelper sanitize":{"type":"method","name":"sanitize","children":[],"call":["new_text << ","node to_s gsub ","node to_s ","node attributes delete ","node attributes ","node attributes [] =~ ","node attributes [] ","attr =~ ","node attributes delete_if ","node closing != ","node closing ","VERBOTEN_TAGS  include? ","node name ","HTML Node  parse ","tokenizer next ","HTML Tokenizer  new ","html index ","(str \"href\") each ","HTML Node  parse  to_s gsub ","HTML Node  parse  to_s ","HTML Node  parse  attributes delete ","HTML Node  parse  attributes ","HTML Node  parse  attributes [] =~ ","HTML Node  parse  attributes [] ","HTML Node  parse  attributes delete_if ","HTML Node  parse  closing != ","HTML Node  parse  closing ","HTML Node  parse  name ","tokenizer next izer next ","HTML Tokenizer  new  next "]}," ActionView Helpers TextHelper auto_link":{"type":"method","name":"auto_link","children":[],"call":[" auto_link_urls "," auto_link_email_addresses ","text blank? ","options [] ","options [] to_sym ","options reverse_merge! ","options []= ","args [] ","args empty? ","args extract_options! ","args size == ","args size "," html_safe ","args extract_options!  [] ","args extract_options!  [] to_sym ","args extract_options!  reverse_merge! ","args extract_options!  []= ","args extract_args extract_options! ! "]}," ActionView Helpers TextHelper simple_format":{"type":"method","name":"simple_format","children":[],"call":[" content_tag ","text gsub! ","text to_s gsub gsub gsub ","text to_s gsub gsub ","text to_s gsub ","text to_s ","<p> + + ","<p> + ","text << ","text insert ","text to_s dup "," tag ","text html_safe safe_concat ","text html_safe "," sanitize ","options [] == ","options [] "," html_safe ","text nil? ","text safe_concat "," h ","text html_safe? ","text concat ","text dup ","text frozen? ","text to_str ","(send\n  (lvar :paragraphs) :map) join html_safe ","(send\n  (lvar :paragraphs) :map) join ","paragraphs map ","paragraphs empty? "," split_paragraphs ","options fetch "," raw ","text to_s dup  gsub! "," sanitize  gsub! "," html_safe  gsub! "," h  gsub! ","text dup  gsub! ","text to_str  gsub! ","text to_s dup  to_s gsub gsub gsub "," sanitize  to_s gsub gsub gsub "," html_safe  to_s gsub gsub gsub "," h  to_s gsub gsub gsub ","text dup  to_s gsub gsub gsub ","text to_str  to_s gsub gsub gsub ","text to_s dup  to_s gsub gsub "," sanitize  to_s gsub gsub "," html_safe  to_s gsub gsub "," h  to_s gsub gsub ","text dup  to_s gsub gsub ","text to_str  to_s gsub gsub ","text to_s dup  to_s gsub "," sanitize  to_s gsub "," html_safe  to_s gsub "," h  to_s gsub ","text dup  to_s gsub ","text to_str  to_s gsub ","text to_s dup  to_s "," sanitize  to_s "," html_safe  to_s "," h  to_s ","text dup  to_s ","text to_str  to_s ","text to_s dup  << "," sanitize  << "," html_safe  << "," h  << ","text dup  << ","text to_str  << ","text to_s dup  insert "," sanitize  insert "," html_safe  insert "," h  insert ","text dup  insert ","text to_str  insert ","text to_s dup  to_s dup "," sanitize  to_s dup "," html_safe  to_s dup "," h  to_s dup ","text dup  to_s dup ","text to_str  to_s dup ","text to_s dup  html_safe safe_concat "," sanitize  html_safe safe_concat "," html_safe  html_safe safe_concat "," h  html_safe safe_concat ","text dup  html_safe safe_concat ","text to_str  html_safe safe_concat ","text to_s dup  html_safe "," sanitize  html_safe "," html_safe  html_safe "," h  html_safe ","text dup  html_safe ","text to_str  html_safe ","text to_s dup  nil? "," sanitize  nil? "," html_safe  nil? "," h  nil? ","text dup  nil? ","text to_str  nil? ","text to_s dup  safe_concat "," sanitize  safe_concat "," html_safe  safe_concat "," h  safe_concat ","text dup  safe_concat ","text to_str  safe_concat ","text to_s dup  html_safe? "," sanitize  html_safe? "," html_safe  html_safe? "," h  html_safe? ","text dup  html_safe? ","text to_str  html_safe? ","text to_s dup  concat "," sanitize  concat "," html_safe  concat "," h  concat ","text dup  concat ","text to_str  concat ","text to_s dup  dup "," sanitize  dup "," html_safe  dup "," h  dup ","text dup  dup ","text to_str  dup ","text to_s dup  frozen? "," sanitize  frozen? "," html_safe  frozen? "," h  frozen? ","text dup  frozen? ","text to_str  frozen? ","text to_s dup  to_str "," sanitize  to_str "," html_safe  to_str "," h  to_str ","text dup  to_str ","text to_str  to_str ","(send\n  (lvar : split_paragraphs ) :map) join html_safe ","(send\n  (lvar : split_paragraphs ) :map) join "," split_paragraphs  map "," split_paragraphs  empty? "," split_ split_paragraphs  "]}," ActionView Helpers TextHelper word_wrap":{"type":"method","name":"word_wrap","children":[],"call":["text gsub gsub strip ","text gsub gsub ","text gsub ","(send\n  (send\n    (lvar :text) :split\n    (str \"\\n\")) :collect) * ","line gsub strip ","line gsub ","line length > ","line length ","text split collect ","text split ","options [] ","options reverse_merge! ","options []= ","args [] ","args blank? ","args extract_options! ","ActiveSupport Deprecation  warn "," caller ","options fetch ","args extract_options!  [] ","args extract_options!  reverse_merge! ","args extract_options!  []= ","args extract_args extract_options! ! ","args extract_options!  fetch "]}," ActionView Helpers TagHelper boolean_attribute":{"type":"method","name":"boolean_attribute","children":[],"call":["options delete ","options []= ","options [] "]}," ActionView Helpers TagHelper convert_booleans":{"type":"method","name":"convert_booleans","children":[],"call":[" boolean_attribute ","(str \"disabled\") each "]}," ActionView Helpers TagHelper cdata_section":{"type":"method","name":"cdata_section","children":[],"call":["(str \"<![CDATA[\") html_safe ","(str \"<![CDATA[\") html_safe! ","content gsub ","content to_s gsub ","content to_s "]}," ActionView Helpers PaginationHelper pagination_links_each":{"type":"method","name":"pagination_links_each","children":[],"call":["html << ","last number ","last number - > ","last number - ","wp_last number ","(lvasgn :wp_last\n  (send\n    (lvar :window_pages) :[]\n    (int -1))) last? ! ","(lvasgn :wp_last\n  (send\n    (lvar :window_pages) :[]\n    (int -1))) last? ","window_pages [] ","page number ","page number to_s ","link_to_current_page ! ","current_page == ","window_pages each ","wp_first number - > ","wp_first number - ","first number ","wp_first number ","(lvasgn :wp_first\n  (send\n    (lvar :window_pages) :[]\n    (int 0))) first? ! ","(lvasgn :wp_first\n  (send\n    (lvar :window_pages) :[]\n    (int 0))) first? ","paginator last ","paginator first ","window_pages length <= ","window_pages length ","current_page window pages ","current_page window ","options [] ","paginator current_page ","DEFAULT_OPTIONS  merge ","window_pages []  number ","(lvasgn :window_pages [] \n  (send\n    (lvar :window_pages) :[]\n    (int -1))) last? ! ","(lvasgn :wp_last\n  (send\n    (lvar :current_page window pages ) :[]\n    (int -1))) last? ! ","(lvasgn :window_pages [] \n  (send\n    (lvar :window_pages) :[]\n    (int -1))) last? ","(lvasgn :wp_last\n  (send\n    (lvar :current_page window pages ) :[]\n    (int -1))) last? ","current_page window pages  [] ","link_to_paginator current_page  ! ","options []  ! ","paginator current_page  == ","current_page window pages  each ","window_pages []  number - > ","window_pages []  number - ","(lvasgn :window_pages [] \n  (send\n    (lvar :window_pages) :[]\n    (int 0))) first? ! ","(lvasgn :wp_first\n  (send\n    (lvar :current_page window pages ) :[]\n    (int 0))) first? ! ","(lvasgn :window_pages [] \n  (send\n    (lvar :window_pages) :[]\n    (int 0))) first? ","(lvasgn :wp_first\n  (send\n    (lvar :current_page window pages ) :[]\n    (int 0))) first? ","current_page window pages  length <= ","current_page window pages  length ","paginator current_page  window pages ","paginator current_page  window ","DEFAULT_OPTIONS  merge  [] ","paginator paginator current_page  "]}," ActionView Helpers PaginationHelper pagination_links":{"type":"method","name":"pagination_links","children":[],"call":[" link_to ","n to_s ","params []= "," pagination_links_each ","(or\n  (send\n    (lvar :options) :[]\n    (sym :params))\n  (send\n    (const nil :DEFAULT_OPTIONS) :[]\n    (sym :params))) clone ","DEFAULT_OPTIONS  [] ","options [] ","html << ","paginator last number ","paginator last ","last number - > ","last number - ","window_pages [] number ","window_pages [] ","last number ","window_pages last last? ! ","window_pages last last? ","window_pages last ","page number ","page number to_s ","options [] ! ","paginator current == ","paginator current ","window_pages each ","window_pages [] number - > ","window_pages [] number - ","first number ","window_pages [] first? ! ","window_pages [] first? "," returning ","paginator first ","window_pages length <= ","window_pages length ","paginator current window pages ","paginator current window ","options merge! ","(pair\n  (send\n    (lvar :options) :[]\n    (sym :name))\n  (lvar :last)) update ","(pair\n  (send\n    (lvar :options) :[]\n    (sym :name))\n  (lvar :page)) update ","(pair\n  (send\n    (lvar :options) :[]\n    (sym :name))\n  (lvar :first)) update ","(or\n  (send\n    (lvar :options) :[]\n    (sym :params))\n  (send\n    (const nil :DEFAULT_OPTIONS) :[]\n    (sym :params))) clone  []= ","(or\n  (send\n    (lvar :options) :[]\n    (sym :(or\n  (send\n    (lvar :options) :[]\n    (sym :params))\n  (send\n    (const nil :DEFAULT_OPTIONS) :[]\n    (sym :params))) clone ))\n  (send\n    (const nil :DEFAULT_OPTIONS) :[]\n    (sym :(or\n  (send\n    (lvar :options) :[]\n    (sym :params))\n  (send\n    (const nil :DEFAULT_OPTIONS) :[]\n    (sym :params))) clone ))) clone ","paginator current window pages  [] number ","paginator current window pages  [] ","paginator current window pages  last last? ! ","paginator current window pages  last last? ","paginator current window pages  last ","paginator current window pages  each ","paginator current window pages  [] number - > ","paginator current window pages  [] number - ","paginator current window pages  [] first? ! ","paginator current window pages  [] first? ","paginator current window pages  length <= ","paginator current window pages  length "]}," ActionView Helpers NumberHelper number_with_precision":{"type":"method","name":"number_with_precision","children":[],"call":[" sprintf ","(str \"%01.\") % ","(send\n  (send nil :Float\n    (lvar :number)) :*\n  (begin\n    (send\n      (int 10) :**\n      (lvar :precision)))) round to_f / ","10 ** ","(send\n  (send nil :Float\n    (lvar :number)) :*\n  (begin\n    (send\n      (int 10) :**\n      (lvar :precision)))) round to_f ","(send\n  (send nil :Float\n    (lvar :number)) :*\n  (begin\n    (send\n      (int 10) :**\n      (lvar :precision)))) round "," Float * "," Float "," number_with_delimiter ","defaults [] ","options [] ","args [] ","ActiveSupport Deprecation  warn "," caller ","number_with_precision takes an option hash  + ","args empty? ","defaults merge ","I18n  translate ","options symbolize_keys! ","args extract_options! ","formatted_number sub sub html_safe ","formatted_number sub sub ","formatted_number sub ","Regexp  escape ","BigDecimal  new round to_f / ","BigDecimal  new round to_f ","BigDecimal  new round ","BigDecimal  new ","(send\n  (lvar :number) :*\n  (begin\n    (send\n      (int 10) :**\n      (lvar :precision)))) to_s ","number * ","precision > ","precision - ","BigDecimal  new round to_f * ","digits - ","(send\n  (lvar :number) :/\n  (send\n    (int 10) :**\n    (begin\n      (send\n        (lvar :digits) :-\n        (lvar :precision))))) to_s ","number / ","(send\n  (send\n    (const nil :Math) :log10\n    (lvar :number)) :+\n  (int 1)) floor ","Math  log10 + ","Math  log10 ","number == ","options delete ","options reverse_merge "," raise ","(send\n  (send nil :Float\n    (lvar :number)) :*\n  (begin\n    (send\n      (int 10) :**\n      (lvar :precision)))) to_s ","number to_s ","(send\n  (send\n    (const nil :Math) :log10\n    (send\n      (lvar :rounded_number) :abs)) :+\n  (int 1)) floor ","rounded_number abs ","(send\n  (send\n    (const nil :BigDecimal) :new\n    (send\n      (lvar :number) :to_s)) :/\n  (send\n    (const nil :BigDecimal) :new\n    (send\n      (send\n        (begin\n          (send\n            (int 10) :**\n            (begin\n              (send\n                (lvar :digits) :-\n                (lvar :precision))))) :to_f) :to_s))) round to_f * ","(send\n  (send\n    (const nil :BigDecimal) :new\n    (send\n      (lvar :number) :to_s)) :/\n  (send\n    (const nil :BigDecimal) :new\n    (send\n      (send\n        (begin\n          (send\n            (int 10) :**\n            (begin\n              (send\n                (lvar :digits) :-\n                (lvar :precision))))) :to_f) :to_s))) round to_f ","(send\n  (send\n    (const nil :BigDecimal) :new\n    (send\n      (lvar :number) :to_s)) :/\n  (send\n    (const nil :BigDecimal) :new\n    (send\n      (send\n        (begin\n          (send\n            (int 10) :**\n            (begin\n              (send\n                (lvar :digits) :-\n                (lvar :precision))))) :to_f) :to_s))) round ","BigDecimal  new / ","(send\n  (int 10) :**\n  (begin\n    (send\n      (lvar :digits) :-\n      (lvar :precision)))) to_f to_s ","(send\n  (int 10) :**\n  (begin\n    (send\n      (lvar :digits) :-\n      (lvar :precision)))) to_f ","(send\n  (send\n    (const nil :Math) :log10\n    (send\n      (lvar :number) :abs)) :+\n  (int 1)) floor ","number abs ","ActiveSupport NumberHelper  number_to_rounded "," wrap_with_output_safety_handling "," escape_unsafe_delimiters_and_separators ","options symbolize_keys "," escape_unsafe_options ","(send\n  (send nil :Float\n    (lvar :number)) :*\n  (begin\n    (send\n      (int 10) :**\n      (lvar :precision - )))) round to_f / ","(send\n  (send nil :Float\n    (lvar :number)) :*\n  (begin\n    (send\n      (int 10) :**\n      (lvar :options delete )))) round to_f / ","(send\n  (send nil :Float\n    (lvar :number)) :*\n  (begin\n    (send\n      (int 10) :**\n      (lvar :precision - )))) round to_f ","(send\n  (send nil :Float\n    (lvar :number)) :*\n  (begin\n    (send\n      (int 10) :**\n      (lvar :options delete )))) round to_f ","(send\n  (send nil :Float\n    (lvar :number)) :*\n  (begin\n    (send\n      (int 10) :**\n      (lvar :precision - )))) round ","(send\n  (send nil :Float\n    (lvar :number)) :*\n  (begin\n    (send\n      (int 10) :**\n      (lvar :options delete )))) round ","defaults merge  [] ","I18n  translate  [] ","args extract_options!  [] ","options reverse_merge  [] "," escape_unsafe_delimiters_and_separators  [] "," escape_unsafe_options  [] ","number_with_precision -  takes an option hash  + ","number_with_options delete  takes an option hash  + ","defaults merge  merge ","I18n  translate  merge ","args extract_options!  symbolize_keys! ","options reverse_merge  symbolize_keys! "," escape_unsafe_delimiters_and_separators  symbolize_keys! "," escape_unsafe_options  symbolize_keys! ","args extract_args extract_options! ! ","args extract_options reverse_merge ! ","args extract_ escape_unsafe_delimiters_and_separators ! ","args extract_ escape_unsafe_options ! "," number_with_delimiter  sub sub html_safe "," number_with_delimiter  sub sub "," number_with_delimiter  sub ","(send\n  (lvar :number) :*\n  (begin\n    (send\n      (int 10) :**\n      (lvar :precision - )))) to_s ","(send\n  (lvar :number) :*\n  (begin\n    (send\n      (int 10) :**\n      (lvar :options delete )))) to_s ","precision -  > ","options delete  > ","precision -  - ","options delete  - ","(send\n  (send\n    (const nil :Math) :log10\n    (lvar :number)) :+\n  (int 1)) floor  - ","(send\n  (send\n    (const nil :Math) :log10\n    (send\n      (lvar :rounded_number) :abs)) :+\n  (int 1)) floor  - ","(send\n  (send\n    (const nil :Math) :log10\n    (send\n      (lvar :number) :abs)) :+\n  (int 1)) floor  - ","(send\n  (lvar :number) :/\n  (send\n    (int 10) :**\n    (begin\n      (send\n        (lvar :digits) :-\n        (lvar :precision - ))))) to_s ","(send\n  (lvar :number) :/\n  (send\n    (int 10) :**\n    (begin\n      (send\n        (lvar :digits) :-\n        (lvar :options delete ))))) to_s ","(send\n  (lvar :number) :/\n  (send\n    (int 10) :**\n    (begin\n      (send\n        (lvar :(send\n  (send\n    (const nil :Math) :log10\n    (lvar :number)) :+\n  (int 1)) floor ) :-\n        (lvar :precision))))) to_s ","(send\n  (lvar :number) :/\n  (send\n    (int 10) :**\n    (begin\n      (send\n        (lvar :(send\n  (send\n    (const nil :Math) :log10\n    (send\n      (lvar :rounded_number) :abs)) :+\n  (int 1)) floor ) :-\n        (lvar :precision))))) to_s ","(send\n  (lvar :number) :/\n  (send\n    (int 10) :**\n    (begin\n      (send\n        (lvar :(send\n  (send\n    (const nil :Math) :log10\n    (send\n      (lvar :number) :abs)) :+\n  (int 1)) floor ) :-\n        (lvar :precision))))) to_s ","args extract_options!  delete ","options reverse_merge  delete "," escape_unsafe_delimiters_and_separators  delete "," escape_unsafe_options  delete ","args extract_options!  reverse_merge ","options reverse_merge  reverse_merge "," escape_unsafe_delimiters_and_separators  reverse_merge "," escape_unsafe_options  reverse_merge ","(send\n  (send nil :Float\n    (lvar :number)) :*\n  (begin\n    (send\n      (int 10) :**\n      (lvar :precision - )))) to_s ","(send\n  (send nil :Float\n    (lvar :number)) :*\n  (begin\n    (send\n      (int 10) :**\n      (lvar :options delete )))) to_s ","(send\n  (send\n    (const nil :Math) :log10\n    (send\n      (lvar :(send\n  (send nil :Float\n    (lvar :number)) :*\n  (begin\n    (send\n      (int 10) :**\n      (lvar :precision)))) round to_f / ) :abs)) :+\n  (int 1)) floor ","(send\n  (send\n    (const nil :Math) :log10\n    (send\n      (lvar :BigDecimal  new round to_f / ) :abs)) :+\n  (int 1)) floor ","(send\n  (send\n    (const nil :Math) :log10\n    (send\n      (lvar :BigDecimal  new round to_f * ) :abs)) :+\n  (int 1)) floor ","(send\n  (send\n    (const nil :Math) :log10\n    (send\n      (lvar :BigDecimal  new round to_f ) :abs)) :+\n  (int 1)) floor ","(send\n  (send\n    (const nil :Math) :log10\n    (send\n      (lvar :(send\n  (send\n    (const nil :BigDecimal) :new\n    (send\n      (lvar :number) :to_s)) :/\n  (send\n    (const nil :BigDecimal) :new\n    (send\n      (send\n        (begin\n          (send\n            (int 10) :**\n            (begin\n              (send\n                (lvar :digits) :-\n                (lvar :precision))))) :to_f) :to_s))) round to_f * ) :abs)) :+\n  (int 1)) floor ","(send\n  (send nil :Float\n    (lvar :number)) :*\n  (begin\n    (send\n      (int 10) :**\n      (lvar :precision)))) round to_f /  abs ","BigDecimal  new round to_f /  abs ","BigDecimal  new round to_f *  abs ","BigDecimal  new round to_f  abs ","(send\n  (send\n    (const nil :BigDecimal) :new\n    (send\n      (lvar :number) :to_s)) :/\n  (send\n    (const nil :BigDecimal) :new\n    (send\n      (send\n        (begin\n          (send\n            (int 10) :**\n            (begin\n              (send\n                (lvar :digits) :-\n                (lvar :precision))))) :to_f) :to_s))) round to_f *  abs ","(send\n  (send\n    (const nil :BigDecimal) :new\n    (send\n      (lvar :number) :to_s)) :/\n  (send\n    (const nil :BigDecimal) :new\n    (send\n      (send\n        (begin\n          (send\n            (int 10) :**\n            (begin\n              (send\n                (lvar :digits) :-\n                (lvar :precision - ))))) :to_f) :to_s))) round to_f * ","(send\n  (send\n    (const nil :BigDecimal) :new\n    (send\n      (lvar :number) :to_s)) :/\n  (send\n    (const nil :BigDecimal) :new\n    (send\n      (send\n        (begin\n          (send\n            (int 10) :**\n            (begin\n              (send\n                (lvar :digits) :-\n                (lvar :options delete ))))) :to_f) :to_s))) round to_f * ","(send\n  (send\n    (const nil :BigDecimal) :new\n    (send\n      (lvar :number) :to_s)) :/\n  (send\n    (const nil :BigDecimal) :new\n    (send\n      (send\n        (begin\n          (send\n            (int 10) :**\n            (begin\n              (send\n                (lvar :(send\n  (send\n    (const nil :Math) :log10\n    (lvar :number)) :+\n  (int 1)) floor ) :-\n                (lvar :precision))))) :to_f) :to_s))) round to_f * ","(send\n  (send\n    (const nil :BigDecimal) :new\n    (send\n      (lvar :number) :to_s)) :/\n  (send\n    (const nil :BigDecimal) :new\n    (send\n      (send\n        (begin\n          (send\n            (int 10) :**\n            (begin\n              (send\n                (lvar :(send\n  (send\n    (const nil :Math) :log10\n    (send\n      (lvar :rounded_number) :abs)) :+\n  (int 1)) floor ) :-\n                (lvar :precision))))) :to_f) :to_s))) round to_f * ","(send\n  (send\n    (const nil :BigDecimal) :new\n    (send\n      (lvar :number) :to_s)) :/\n  (send\n    (const nil :BigDecimal) :new\n    (send\n      (send\n        (begin\n          (send\n            (int 10) :**\n            (begin\n              (send\n                (lvar :(send\n  (send\n    (const nil :Math) :log10\n    (send\n      (lvar :number) :abs)) :+\n  (int 1)) floor ) :-\n                (lvar :precision))))) :to_f) :to_s))) round to_f * ","(send\n  (send\n    (const nil :BigDecimal) :new\n    (send\n      (lvar :number) :to_s)) :/\n  (send\n    (const nil :BigDecimal) :new\n    (send\n      (send\n        (begin\n          (send\n            (int 10) :**\n            (begin\n              (send\n                (lvar :digits) :-\n                (lvar :precision - ))))) :to_f) :to_s))) round to_f ","(send\n  (send\n    (const nil :BigDecimal) :new\n    (send\n      (lvar :number) :to_s)) :/\n  (send\n    (const nil :BigDecimal) :new\n    (send\n      (send\n        (begin\n          (send\n            (int 10) :**\n            (begin\n              (send\n                (lvar :digits) :-\n                (lvar :options delete ))))) :to_f) :to_s))) round to_f ","(send\n  (send\n    (const nil :BigDecimal) :new\n    (send\n      (lvar :number) :to_s)) :/\n  (send\n    (const nil :BigDecimal) :new\n    (send\n      (send\n        (begin\n          (send\n            (int 10) :**\n            (begin\n              (send\n                (lvar :(send\n  (send\n    (const nil :Math) :log10\n    (lvar :number)) :+\n  (int 1)) floor ) :-\n                (lvar :precision))))) :to_f) :to_s))) round to_f ","(send\n  (send\n    (const nil :BigDecimal) :new\n    (send\n      (lvar :number) :to_s)) :/\n  (send\n    (const nil :BigDecimal) :new\n    (send\n      (send\n        (begin\n          (send\n            (int 10) :**\n            (begin\n              (send\n                (lvar :(send\n  (send\n    (const nil :Math) :log10\n    (send\n      (lvar :rounded_number) :abs)) :+\n  (int 1)) floor ) :-\n                (lvar :precision))))) :to_f) :to_s))) round to_f ","(send\n  (send\n    (const nil :BigDecimal) :new\n    (send\n      (lvar :number) :to_s)) :/\n  (send\n    (const nil :BigDecimal) :new\n    (send\n      (send\n        (begin\n          (send\n            (int 10) :**\n            (begin\n              (send\n                (lvar :(send\n  (send\n    (const nil :Math) :log10\n    (send\n      (lvar :number) :abs)) :+\n  (int 1)) floor ) :-\n                (lvar :precision))))) :to_f) :to_s))) round to_f ","(send\n  (send\n    (const nil :BigDecimal) :new\n    (send\n      (lvar :number) :to_s)) :/\n  (send\n    (const nil :BigDecimal) :new\n    (send\n      (send\n        (begin\n          (send\n            (int 10) :**\n            (begin\n              (send\n                (lvar :digits) :-\n                (lvar :precision - ))))) :to_f) :to_s))) round ","(send\n  (send\n    (const nil :BigDecimal) :new\n    (send\n      (lvar :number) :to_s)) :/\n  (send\n    (const nil :BigDecimal) :new\n    (send\n      (send\n        (begin\n          (send\n            (int 10) :**\n            (begin\n              (send\n                (lvar :digits) :-\n                (lvar :options delete ))))) :to_f) :to_s))) round ","(send\n  (send\n    (const nil :BigDecimal) :new\n    (send\n      (lvar :number) :to_s)) :/\n  (send\n    (const nil :BigDecimal) :new\n    (send\n      (send\n        (begin\n          (send\n            (int 10) :**\n            (begin\n              (send\n                (lvar :(send\n  (send\n    (const nil :Math) :log10\n    (lvar :number)) :+\n  (int 1)) floor ) :-\n                (lvar :precision))))) :to_f) :to_s))) round ","(send\n  (send\n    (const nil :BigDecimal) :new\n    (send\n      (lvar :number) :to_s)) :/\n  (send\n    (const nil :BigDecimal) :new\n    (send\n      (send\n        (begin\n          (send\n            (int 10) :**\n            (begin\n              (send\n                (lvar :(send\n  (send\n    (const nil :Math) :log10\n    (send\n      (lvar :rounded_number) :abs)) :+\n  (int 1)) floor ) :-\n                (lvar :precision))))) :to_f) :to_s))) round ","(send\n  (send\n    (const nil :BigDecimal) :new\n    (send\n      (lvar :number) :to_s)) :/\n  (send\n    (const nil :BigDecimal) :new\n    (send\n      (send\n        (begin\n          (send\n            (int 10) :**\n            (begin\n              (send\n                (lvar :(send\n  (send\n    (const nil :Math) :log10\n    (send\n      (lvar :number) :abs)) :+\n  (int 1)) floor ) :-\n                (lvar :precision))))) :to_f) :to_s))) round ","(send\n  (int 10) :**\n  (begin\n    (send\n      (lvar :digits) :-\n      (lvar :precision - )))) to_f to_s ","(send\n  (int 10) :**\n  (begin\n    (send\n      (lvar :digits) :-\n      (lvar :options delete )))) to_f to_s ","(send\n  (int 10) :**\n  (begin\n    (send\n      (lvar :(send\n  (send\n    (const nil :Math) :log10\n    (lvar :number)) :+\n  (int 1)) floor ) :-\n      (lvar :precision)))) to_f to_s ","(send\n  (int 10) :**\n  (begin\n    (send\n      (lvar :(send\n  (send\n    (const nil :Math) :log10\n    (send\n      (lvar :rounded_number) :abs)) :+\n  (int 1)) floor ) :-\n      (lvar :precision)))) to_f to_s ","(send\n  (int 10) :**\n  (begin\n    (send\n      (lvar :(send\n  (send\n    (const nil :Math) :log10\n    (send\n      (lvar :number) :abs)) :+\n  (int 1)) floor ) :-\n      (lvar :precision)))) to_f to_s ","(send\n  (int 10) :**\n  (begin\n    (send\n      (lvar :digits) :-\n      (lvar :precision - )))) to_f ","(send\n  (int 10) :**\n  (begin\n    (send\n      (lvar :digits) :-\n      (lvar :options delete )))) to_f ","(send\n  (int 10) :**\n  (begin\n    (send\n      (lvar :(send\n  (send\n    (const nil :Math) :log10\n    (lvar :number)) :+\n  (int 1)) floor ) :-\n      (lvar :precision)))) to_f ","(send\n  (int 10) :**\n  (begin\n    (send\n      (lvar :(send\n  (send\n    (const nil :Math) :log10\n    (send\n      (lvar :rounded_number) :abs)) :+\n  (int 1)) floor ) :-\n      (lvar :precision)))) to_f ","(send\n  (int 10) :**\n  (begin\n    (send\n      (lvar :(send\n  (send\n    (const nil :Math) :log10\n    (send\n      (lvar :number) :abs)) :+\n  (int 1)) floor ) :-\n      (lvar :precision)))) to_f ","args extract_options!  symbolize_keys ","options reverse_merge  symbolize_keys "," escape_unsafe_delimiters_and_separators  symbolize_keys "," escape_unsafe_options  symbolize_keys "," escape_unsafe_args extract_options!  "," escape_unsafe_options reverse_merge  "," escape_unsafe_ escape_unsafe_delimiters_and_separators  "," escape_unsafe_ escape_unsafe_options  "]}," ActionView Helpers NumberHelper number_to_human_size":{"type":"method","name":"number_to_human_size","children":[],"call":["%.1f TB % ","size / ","1.0 terabytes ","%.1f GB % ","1.0 gigabytes ","size < ","1 terabytes ","%.1f MB % ","1.0 megabytes ","1 gigabytes ","%.1f KB % ","1.0 kilobytes ","1 megabytes ","%d Bytes % ","1 kilobytes "," sub ","(str \"%.\") % ","1.0 terabyte ","1.0 gigabyte ","1 terabyte ","1.0 megabyte ","1 gigabyte ","1.0 kilobyte ","1 megabyte ","1 kilobyte ","size to_i == ","size to_i ","Kernel  Float "," sub sub "," number_with_precision sub sub + "," number_with_precision sub sub "," number_with_precision sub "," number_with_precision ","Regexp  escape ","STORAGE_UNITS  [] ","1024 ** ","exponent > ","(send\n  (send\n    (const nil :Math) :log\n    (lvar :number)) :/\n  (send\n    (const nil :Math) :log\n    (int 1024))) to_i ","Math  log / ","Math  log "," Float ","STORAGE_UNITS  size - ","STORAGE_UNITS  size ","defaults [] ","options [] ","args [] ","ActiveSupport Deprecation  warn "," caller ","number_to_human_size takes an option hash  + ","args empty? ","defaults merge ","I18n  translate ","options symbolize_keys! ","args extract_options! "," pluralize ","number to_i ","number nil? ","number to_i < ","storage_units [] ","storage_units size - ","storage_units size ","storage_units_format gsub gsub ","storage_units_format gsub ","number to_i to_s ","storage_units_format gsub gsub html_safe ","options []= ","options key? ! ","options key? ","options reverse_merge "," raise ","base ** ","(send\n  (send\n    (const nil :Math) :log\n    (lvar :number)) :/\n  (send\n    (const nil :Math) :log\n    (lvar :base))) to_i ","options [] == ","ActiveSupport NumberHelper  number_to_human_size "," wrap_with_output_safety_handling ","options delete "," escape_unsafe_delimiters_and_separators ","options symbolize_keys "," escape_unsafe_options ","Kernel  Float  / ","Kernel  Float  < ","Kernel  Float  to_i == ","Kernel  Float  to_i ","  Float _with_precision sub sub + ","  Float _with_precision sub sub ","  Float _with_precision sub ","  Float _with_precision ","(send\n  (send\n    (const nil :Math) :log\n    (lvar :number)) :/\n  (send\n    (const nil :Math) :log\n    (int 1024))) to_i  > ","(send\n  (send\n    (const nil :Math) :log\n    (lvar :number)) :/\n  (send\n    (const nil :Math) :log\n    (lvar :base))) to_i  > ","(send\n  (send\n    (const nil :Math) :log\n    (lvar : Float )) :/\n  (send\n    (const nil :Math) :log\n    (int 1024))) to_i ","STORAGE_UNITS  Kernel  Float  - ","STORAGE_UNITS  Kernel  Float  ","defaults merge  [] ","I18n  translate  [] ","args extract_options!  [] ","options reverse_merge  [] "," escape_unsafe_delimiters_and_separators  [] "," escape_unsafe_options  [] ","number_to_human_Kernel  Float  takes an option hash  + "," Float _to_human_size takes an option hash  + ","number_to_I18n  translate _size takes an option hash  + ","defaults merge  merge ","I18n  translate  merge ","args extract_options!  symbolize_keys! ","options reverse_merge  symbolize_keys! "," escape_unsafe_delimiters_and_separators  symbolize_keys! "," escape_unsafe_options  symbolize_keys! ","args extract_args extract_options! ! ","args extract_options reverse_merge ! ","args extract_ escape_unsafe_delimiters_and_separators ! ","args extract_ escape_unsafe_options ! "," Float  to_i "," Float  nil? "," Float  to_i < ","storage_STORAGE_UNITS  [] s [] ","storage_storage_units [] s [] ","storage_I18n  translate s [] ","storage_units Kernel  Float  - ","storage_STORAGE_UNITS  [] s size - ","storage_storage_units [] s size - ","storage_I18n  translate s size - ","I18n  translate  size - ","storage_units Kernel  Float  ","storage_STORAGE_UNITS  [] s size ","storage_storage_units [] s size ","storage_I18n  translate s size ","I18n  translate  size ","storage_STORAGE_UNITS  [] s_format gsub gsub ","storage_storage_units [] s_format gsub gsub ","storage_I18n  translate s_format gsub gsub ","I18n  translate _format gsub gsub ","I18n  translate  gsub gsub ","storage_STORAGE_UNITS  [] s_format gsub ","storage_storage_units [] s_format gsub ","storage_I18n  translate s_format gsub ","I18n  translate _format gsub ","I18n  translate  gsub "," Float  to_i to_s ","storage_STORAGE_UNITS  [] s_format gsub gsub html_safe ","storage_storage_units [] s_format gsub gsub html_safe ","storage_I18n  translate s_format gsub gsub html_safe ","I18n  translate _format gsub gsub html_safe ","I18n  translate  gsub gsub html_safe ","args extract_options!  []= ","options reverse_merge  []= "," escape_unsafe_delimiters_and_separators  []= "," escape_unsafe_options  []= ","args extract_options!  key? ! ","options reverse_merge  key? ! "," escape_unsafe_delimiters_and_separators  key? ! "," escape_unsafe_options  key? ! ","args extract_options!  key? ","options reverse_merge  key? "," escape_unsafe_delimiters_and_separators  key? "," escape_unsafe_options  key? ","args extract_options!  reverse_merge ","options reverse_merge  reverse_merge "," escape_unsafe_delimiters_and_separators  reverse_merge "," escape_unsafe_options  reverse_merge ","(send\n  (send\n    (const nil :Math) :log\n    (lvar : Float )) :/\n  (send\n    (const nil :Math) :log\n    (lvar :base))) to_i ","args extract_options!  [] == ","options reverse_merge  [] == "," escape_unsafe_delimiters_and_separators  [] == "," escape_unsafe_options  [] == ","ActiveSupport NumberHelper  number_to_human_Kernel  Float  ","ActiveSupport NumberHelper   Float _to_human_size ","ActiveSupport NumberHelper  number_to_I18n  translate _size ","args extract_options!  delete ","options reverse_merge  delete "," escape_unsafe_delimiters_and_separators  delete "," escape_unsafe_options  delete ","args extract_options!  symbolize_keys ","options reverse_merge  symbolize_keys "," escape_unsafe_delimiters_and_separators  symbolize_keys "," escape_unsafe_options  symbolize_keys "," escape_unsafe_args extract_options!  "," escape_unsafe_options reverse_merge  "," escape_unsafe_ escape_unsafe_delimiters_and_separators  "," escape_unsafe_ escape_unsafe_options  "]}," ActionView Helpers NumberHelper number_with_delimiter":{"type":"method","name":"number_with_delimiter","children":[],"call":["number to_s gsub ","number to_s ","parts join ","parts [] gsub! ","parts [] ","number to_s split ","defaults [] ","options [] ","args [] ","ActiveSupport Deprecation  warn "," caller ","number_with_delimiter takes an option hash  + ","args empty? ","I18n  translate ","options symbolize_keys! ","args extract_options! ","parts join html_safe ","options reverse_merge "," raise "," Float ","number to_s to_str split ","number to_s to_str ","options []= ","ERB Util  html_escape ","ActiveSupport NumberHelper  number_to_delimited "," wrap_with_output_safety_handling ","options delete "," escape_unsafe_delimiters_and_separators ","options symbolize_keys "," escape_unsafe_options ","number to_s split  join ","number to_s to_str split  join ","number to_s split  [] gsub! ","number to_s to_str split  [] gsub! ","number to_s split  [] ","number to_s to_str split  [] ","I18n  translate  [] ","args extract_options!  [] ","options reverse_merge  [] "," escape_unsafe_delimiters_and_separators  [] "," escape_unsafe_options  [] ","args extract_options!  symbolize_keys! ","options reverse_merge  symbolize_keys! "," escape_unsafe_delimiters_and_separators  symbolize_keys! "," escape_unsafe_options  symbolize_keys! ","args extract_args extract_options! ! ","args extract_options reverse_merge ! ","args extract_ escape_unsafe_delimiters_and_separators ! ","args extract_ escape_unsafe_options ! ","number to_s split  join html_safe ","number to_s to_str split  join html_safe ","args extract_options!  reverse_merge ","options reverse_merge  reverse_merge "," escape_unsafe_delimiters_and_separators  reverse_merge "," escape_unsafe_options  reverse_merge ","args extract_options!  []= ","options reverse_merge  []= "," escape_unsafe_delimiters_and_separators  []= "," escape_unsafe_options  []= ","args extract_options!  delete ","options reverse_merge  delete "," escape_unsafe_delimiters_and_separators  delete "," escape_unsafe_options  delete ","args extract_options!  symbolize_keys ","options reverse_merge  symbolize_keys "," escape_unsafe_delimiters_and_separators  symbolize_keys "," escape_unsafe_options  symbolize_keys "," escape_unsafe_args extract_options!  "," escape_unsafe_options reverse_merge  "," escape_unsafe_ escape_unsafe_delimiters_and_separators  "," escape_unsafe_ escape_unsafe_options  "]}," ActionView Helpers NumberHelper number_to_percentage":{"type":"method","name":"number_to_percentage","children":[],"call":["parts [] + + + ","parts [] + + ","parts [] to_s ","parts [] ","parts [] + ","parts at nil? ","parts at ","number split "," number_with_precision ","options delete ","options stringify_keys ","options [] "," number_with_precision + ","defaults [] ","defaults merge ","I18n  translate ","options symbolize_keys! ","e number ","(begin\n  (send\n    (lvar :e) :number)) html_safe ","e number to_s html_safe? ","e number to_s "," raise ","(begin\n  (send nil :number_with_precision\n    (lvar :number)\n    (send\n      (lvar :options) :merge\n      (hash\n        (pair\n          (sym :raise)\n          (true)))))) html_safe ","options merge ","options reverse_merge ","number nil? ","options []= ","ERB Util  html_escape ","ActiveSupport NumberHelper  number_to_percentage "," wrap_with_output_safety_handling "," escape_unsafe_delimiters_and_separators ","options symbolize_keys "," escape_unsafe_options ","number split  [] + + + ","number split  [] + + ","number split  [] to_s ","number split  [] ","number split  [] + ","number split  at nil? ","number split  at "," number_with_precision  split ","  number_with_precision _with_precision ","options stringify_keys  delete ","options reverse_merge  delete "," escape_unsafe_delimiters_and_separators  delete "," escape_unsafe_options  delete ","options stringify_keys  stringify_keys ","options reverse_merge  stringify_keys "," escape_unsafe_delimiters_and_separators  stringify_keys "," escape_unsafe_options  stringify_keys ","options stringify_keys  [] ","options reverse_merge  [] "," escape_unsafe_delimiters_and_separators  [] "," escape_unsafe_options  [] ","  number_with_precision _with_precision + ","defaults merge  [] ","I18n  translate  [] ","defaults merge  merge ","I18n  translate  merge ","options stringify_keys  symbolize_keys! ","options reverse_merge  symbolize_keys! "," escape_unsafe_delimiters_and_separators  symbolize_keys! "," escape_unsafe_options  symbolize_keys! ","e  number_with_precision  ","(begin\n  (send\n    (lvar :e) : number_with_precision )) html_safe ","e  number_with_precision  to_s html_safe? ","e  number_with_precision  to_s ","(begin\n  (send nil : number_with_precision _with_precision\n    (lvar : number_with_precision )\n    (send\n      (lvar :options) :merge\n      (hash\n        (pair\n          (sym :raise)\n          (true)))))) html_safe ","(begin\n  (send nil :number_with_precision\n    (lvar :number)\n    (send\n      (lvar :options stringify_keys ) :merge\n      (hash\n        (pair\n          (sym :raise)\n          (true)))))) html_safe ","(begin\n  (send nil :number_with_precision\n    (lvar :number)\n    (send\n      (lvar :options reverse_merge ) :merge\n      (hash\n        (pair\n          (sym :raise)\n          (true)))))) html_safe ","(begin\n  (send nil :number_with_precision\n    (lvar :number)\n    (send\n      (lvar : escape_unsafe_delimiters_and_separators ) :merge\n      (hash\n        (pair\n          (sym :raise)\n          (true)))))) html_safe ","(begin\n  (send nil :number_with_precision\n    (lvar :number)\n    (send\n      (lvar : escape_unsafe_options ) :merge\n      (hash\n        (pair\n          (sym :raise)\n          (true)))))) html_safe ","options stringify_keys  merge ","options reverse_merge  merge "," escape_unsafe_delimiters_and_separators  merge "," escape_unsafe_options  merge ","options stringify_keys  reverse_merge ","options reverse_merge  reverse_merge "," escape_unsafe_delimiters_and_separators  reverse_merge "," escape_unsafe_options  reverse_merge "," number_with_precision  nil? ","options stringify_keys  []= ","options reverse_merge  []= "," escape_unsafe_delimiters_and_separators  []= "," escape_unsafe_options  []= ","ActiveSupport NumberHelper   number_with_precision _to_percentage ","ActiveSupport NumberHelper  number_to_I18n  translate  ","options stringify_keys  symbolize_keys ","options reverse_merge  symbolize_keys "," escape_unsafe_delimiters_and_separators  symbolize_keys "," escape_unsafe_options  symbolize_keys "," escape_unsafe_options stringify_keys  "," escape_unsafe_options reverse_merge  "," escape_unsafe_ escape_unsafe_delimiters_and_separators  "," escape_unsafe_ escape_unsafe_options  "]}," ActionView Helpers NumberHelper number_to_currency":{"type":"method","name":"number_to_currency","children":[],"call":["unit + + + ","parts [] to_s ","parts [] ","unit + + ","unit + "," number_with_delimiter "," number_with_precision split "," number_with_precision ","precision > ","options delete ","options stringify_keys ","options [] ","format gsub gsub ","format gsub "," number_with_delimiter + + "," number_with_delimiter + ","precision == ","defaults [] ","defaults merge ","I18n  translate ","options symbolize_keys! ","format gsub gsub html_safe ","formatted_number html_safe ","e number to_s html_safe? ","e number to_s ","e number "," raise ","options merge ","defaults merge! ","DEFAULT_CURRENCY_VALUES  merge merge! ","DEFAULT_CURRENCY_VALUES  merge ","number nil? ","options reverse_merge ","number sub ","number abs ","number respond_to? ","number to_f < ","number to_f ","defaults []= ","- + ","currency [] ","ERB Util  html_escape ","options []= ","ActiveSupport NumberHelper  number_to_currency "," wrap_with_output_safety_handling "," escape_unsafe_delimiters_and_separators ","options symbolize_keys "," escape_unsafe_options ","options delete  + + + "," number_with_precision split  [] to_s "," number_with_precision split  [] ","options delete  + + ","options delete  + "," number sub _with_delimiter "," number abs _with_delimiter "," number sub _with_precision split "," number abs _with_precision split "," number sub _with_precision "," number abs _with_precision ","options stringify_keys  delete ","defaults merge!  delete ","options reverse_merge  delete "," escape_unsafe_delimiters_and_separators  delete "," escape_unsafe_options  delete ","options stringify_keys  stringify_keys ","defaults merge!  stringify_keys ","options reverse_merge  stringify_keys "," escape_unsafe_delimiters_and_separators  stringify_keys "," escape_unsafe_options  stringify_keys ","options stringify_keys  [] ","defaults merge!  [] ","options reverse_merge  [] "," escape_unsafe_delimiters_and_separators  [] "," escape_unsafe_options  [] ","options delete  gsub gsub ","options delete  gsub "," number sub _with_delimiter + + "," number abs _with_delimiter + + "," number sub _with_delimiter + "," number abs _with_delimiter + ","defaults merge  [] ","DEFAULT_CURRENCY_VALUES  merge merge!  [] ","I18n  translate  [] ","defaults merge  merge ","DEFAULT_CURRENCY_VALUES  merge merge!  merge ","I18n  translate  merge ","options stringify_keys  symbolize_keys! ","defaults merge!  symbolize_keys! ","options reverse_merge  symbolize_keys! "," escape_unsafe_delimiters_and_separators  symbolize_keys! "," escape_unsafe_options  symbolize_keys! ","options delete  gsub gsub html_safe ","format gsub gsub  html_safe ","options delete ted_number html_safe ","formatted_number sub  html_safe ","formatted_number abs  html_safe ","e number sub  to_s html_safe? ","e number abs  to_s html_safe? ","e number sub  to_s ","e number abs  to_s ","e number sub  ","e number abs  ","options stringify_keys  merge ","defaults merge!  merge ","options reverse_merge  merge "," escape_unsafe_delimiters_and_separators  merge "," escape_unsafe_options  merge ","defaults merge  merge! ","DEFAULT_CURRENCY_VALUES  merge merge!  merge! ","I18n  translate  merge! ","number sub  nil? ","number abs  nil? ","options stringify_keys  reverse_merge ","defaults merge!  reverse_merge ","options reverse_merge  reverse_merge "," escape_unsafe_delimiters_and_separators  reverse_merge "," escape_unsafe_options  reverse_merge ","number sub  sub ","number abs  sub ","number sub  abs ","number abs  abs ","number sub  respond_to? ","number abs  respond_to? ","number sub  to_f < ","number abs  to_f < ","number sub  to_f ","number abs  to_f ","defaults merge  []= ","DEFAULT_CURRENCY_VALUES  merge merge!  []= ","I18n  translate  []= ","options stringify_keys  []= ","defaults merge!  []= ","options reverse_merge  []= "," escape_unsafe_delimiters_and_separators  []= "," escape_unsafe_options  []= ","ActiveSupport NumberHelper  number_to_I18n  translate  ","ActiveSupport NumberHelper  number sub _to_currency ","ActiveSupport NumberHelper  number abs _to_currency ","options stringify_keys  symbolize_keys ","defaults merge!  symbolize_keys ","options reverse_merge  symbolize_keys "," escape_unsafe_delimiters_and_separators  symbolize_keys "," escape_unsafe_options  symbolize_keys "," escape_unsafe_options stringify_keys  "," escape_unsafe_defaults merge!  "," escape_unsafe_options reverse_merge  "," escape_unsafe_ escape_unsafe_delimiters_and_separators  "," escape_unsafe_ escape_unsafe_options  "]}," ActionView Helpers NumberHelper number_to_phone":{"type":"method","name":"number_to_phone","children":[],"call":["extension to_s strip ","extension to_s ","extension to_s strip empty? ","number to_s gsub ","number to_s ","area_code == ","options delete ","options stringify_keys ","str gsub! ","str << ","extension blank? ","number gsub! ","country_code blank? ","options [] ","options [] to_s strip ","options [] to_s ","number to_s strip ","number nil? ","options symbolize_keys ","number slice! ","number starts_with? ","str html_safe ","number to_s html_safe? "," raise "," Float ","ERB Util  html_escape ","str join ","delimiter blank? ! ","delimiter blank? ","ActiveSupport NumberHelper  number_to_phone "," parse_float ","extension to_s number to_s gsub ip ","extension to_s number to_s ip ","options []  to_s strip ","options []  to_s ","extension to_s number to_s gsub ip empty? ","extension to_s number to_s ip empty? ","options []  to_s strip empty? ","number to_s strip  to_s gsub ","number to_s strip  to_s ","options []  == ","options stringify_keys  delete ","options symbolize_keys  delete ","options number to_s gsub ingify_keys ","options number to_s ingify_keys ","options stringify_keys  stringify_keys ","options symbolize_keys  stringify_keys ","number to_s gsub  gsub! ","number to_s  gsub! ","number to_s gsub  << ","number to_s  << ","options []  blank? ","number to_s strip  gsub! ","options stringify_keys  [] ","options symbolize_keys  [] ","options [] to_s number to_s gsub ip ","options [] to_s number to_s ip ","options stringify_keys  [] to_s strip ","options symbolize_keys  [] to_s strip ","options stringify_keys  [] to_s ","options symbolize_keys  [] to_s ","number to_s number to_s gsub ip ","number to_s number to_s ip ","number to_s strip  to_s strip ","number to_s strip  nil? ","options stringify_keys  symbolize_keys ","options symbolize_keys  symbolize_keys ","number to_s strip  slice! ","number to_s strip  starts_with? ","number to_s gsub  html_safe ","number to_s  html_safe ","number to_s strip  to_s html_safe? ","number to_s gsub  join ","number to_s  join ","ActiveSupport NumberHelper  number to_s strip _to_phone "]}," ActionView Helpers JavaScriptHelper build_callbacks":{"type":"method","name":"build_callbacks","children":[],"call":["callbacks []= ","on + ","callback to_s capitalize ","callback to_s ","CALLBACKS  include? ","options each "]}," ActionView Helpers JavaScriptHelper build_observer":{"type":"method","name":"build_observer","children":[],"call":[" javascript_tag ","javascript << ","options [] "," remote_function "]}," ActionView Helpers JavaScriptHelper method_option_to_s":{"type":"method","name":"method_option_to_s","children":[],"call":["method index nil? ! ","method index nil? ","method index ","method is_a? "]}," ActionView Helpers JavaScriptHelper options_for_ajax":{"type":"method","name":"options_for_ajax","children":[],"call":[" options_for_javascript ","js_options []= ","options [] ","options [] nil? ","options [] to_s camelize ","options [] to_s "," method_option_to_s ","options [] != "," build_callbacks "," build_callbacks  []= "]}," ActionView Helpers JavaScriptHelper array_or_string_for_javascript":{"type":"method","name":"array_or_string_for_javascript","children":[],"call":["option nil? ! ","option nil? ","option join ","option kind_of? "]}," ActionView Helpers JavaScriptHelper options_for_javascript":{"type":"method","name":"options_for_javascript","children":[],"call":["{ + + ","{ + ","(send\n  (lvar :options) :map) sort join ","(send\n  (lvar :options) :map) sort ","options map ","(send\n  (lvar :options) :map) join ","(send\n  (send\n    (lvar :options) :keys) :map) sort join ","(send\n  (send\n    (lvar :options) :keys) :map) sort ","options [] ","options keys map ","options keys ","options empty? "]}," ActionView Helpers JavaScriptHelper javascript_cdata_section":{"type":"method","name":"javascript_cdata_section","children":[],"call":[" cdata_section ","(str \"\\n//\") html_safe "]}," ActionView Helpers JavaScriptHelper javascript_tag":{"type":"method","name":"javascript_tag","children":[],"call":[" content_tag "," javascript_cdata_section ","html_options merge "," concat ","block binding "," block_is_within_action_view? "," block_given? "," capture ","content_or_options_with_block is_a? "," block_called_from_erb? ","  capture _tag "," content_ content_tag  "," capture _or_options_with_block is_a? "]}," ActionView Helpers JavaScriptHelper escape_javascript":{"type":"method","name":"escape_javascript","children":[],"call":["(or\n  (lvar :javascript)\n  (str \"\")) gsub gsub ","(or\n  (lvar :javascript)\n  (str \"\")) gsub ","(or\n  (lvar :javascript)\n  (str \"\")) gsub gsub gsub ","(or\n  (lvar :javascript)\n  (str \"\")) gsub gsub gsub gsub ","JS_ESCAPE_MAP  [] ","javascript gsub ","result html_safe ","javascript html_safe? "]}," ActionView Helpers JavaScriptHelper drop_receiving_element":{"type":"method","name":"drop_receiving_element","children":[],"call":[" javascript_tag "," options_for_javascript ","options []= ","options [] "," array_or_string_for_javascript ","AJAX_OPTIONS  include? ","options delete_if ","function(element){ + + ","function(element){ + "," remote_function ","options [] join ","options [] kind_of? "]}," ActionView Helpers JavaScriptHelper draggable_element":{"type":"method","name":"draggable_element","children":[],"call":[" javascript_tag "," options_for_javascript "]}," ActionView Helpers JavaScriptHelper sortable_element":{"type":"method","name":"sortable_element","children":[],"call":[" javascript_tag "," options_for_javascript ","options []= "," array_or_string_for_javascript ","options [] ","(sym :tag) each ","AJAX_OPTIONS  include? ","options delete_if ","function(){ + + ","function(){ + "," remote_function ","options [] join ","options [] kind_of? "]}," ActionView Helpers JavaScriptHelper visual_effect":{"type":"method","name":"visual_effect","children":[],"call":[" options_for_javascript ","name to_s camelize ","name to_s ","js_options []= ","js_options [] ","name to_s capitalize "]}," ActionView Helpers JavaScriptHelper observe_form":{"type":"method","name":"observe_form","children":[],"call":[" build_observer ","options [] "]}," ActionView Helpers JavaScriptHelper observe_field":{"type":"method","name":"observe_field","children":[],"call":[" build_observer ","options [] > ","options [] "]}," ActionView Helpers JavaScriptHelper define_javascript_functions":{"type":"method","name":"define_javascript_functions","children":[],"call":["javascript << ","javascript << << ","IO  read ","(send\n  (send\n    (const nil :Dir) :glob\n    (send\n      (const nil :File) :join\n      (const nil :JAVASCRIPT_PATH)\n      (str \"*\"))) :-\n  (lvar :prototype_libs)) each ","Dir  glob - ","Dir  glob ","File  join ","prototype_libs each ","Dir  glob sort reverse ","Dir  glob sort ","(send\n  (send\n    (const nil :Dir) :glob\n    (send\n      (const nil :File) :join\n      (const nil :JAVASCRIPT_PATH)\n      (str \"*\"))) :-\n  (lvar :Dir  glob sort reverse )) each ","Dir  glob sort reverse  each "]}," ActionView Helpers JavaScriptHelper remote_function":{"type":"method","name":"remote_function","children":[],"call":[" escape_javascript ","options [] ","function << "," url_for ","update empty? ","update << ","{ + + ","{ + ","update join ","options [] [] ","options [] is_a? "," options_for_ajax ","{ + +  empty? ","{ + +  << ","{ + +  join "]}," ActionView Helpers JavaScriptHelper evaluate_remote_response":{"type":"method","name":"evaluate_remote_response","children":[],"call":[]}," ActionView Helpers JavaScriptHelper update_element_function":{"type":"method","name":"update_element_function","children":[],"call":[" concat ","options [] ","javascript_function << "," raise ","options [] to_s camelize ","options [] to_s "," escape_javascript "," capture "]}," ActionView Helpers JavaScriptHelper submit_to_remote":{"type":"method","name":"submit_to_remote","children":[],"call":[" tag ","options [] ","options [] []= "," remote_function ","options []= "]}," ActionView Helpers JavaScriptHelper form_remote_tag":{"type":"method","name":"form_remote_tag","children":[],"call":[" tag ","options [] ","options [] []= ","options [] [] "," url_for "," remote_function ","options []= "]}," ActionView Helpers JavaScriptHelper periodically_call_remote":{"type":"method","name":"periodically_call_remote","children":[],"call":[" javascript_tag "," remote_function ","options [] "," content_tag "]}," ActionView Helpers JavaScriptHelper link_to_remote":{"type":"method","name":"link_to_remote","children":[],"call":[" link_to_function "," remote_function "]}," ActionView Helpers JavaScriptHelper link_to_function":{"type":"method","name":"link_to_function","children":[],"call":[" content_tag ","(pair\n  (sym :href)\n  (str \"#\")) merge ","html_options symbolize_keys ","html_options merge ","(if\n  (send\n    (lvar :html_options) :[]\n    (sym :onclick))\n  (dstr\n    (begin\n      (send\n        (lvar :html_options) :[]\n        (sym :onclick)))\n    (str \"; \"))\n  (str \"\")) + ","html_options [] ","html_options symbolize_keys! "," update_page "," block_given? ","args [] ","args pop ","args last is_a? ","args last ","args extract_options! ","args extract_options! symbolize_keys ","ActiveSupport Deprecation  warn ","link_to_function is deprecated and will be removed from Rails 4.1. We recommend using Unobtrusive JavaScript instead.  + ","link_to_function is deprecated and will be removed from Rails 4.1. We recomend to use Unobtrusive JavaScript instead.  + ","args pop  symbolize_keys ","args extract_options!  symbolize_keys ","args extract_options! symbolize_keys  symbolize_keys ","args pop  merge ","args extract_options!  merge ","args extract_options! symbolize_keys  merge ","(if\n  (send\n    (lvar :args pop ) :[]\n    (sym :onclick))\n  (dstr\n    (begin\n      (send\n        (lvar :args pop ) :[]\n        (sym :onclick)))\n    (str \"; \"))\n  (str \"\")) + ","(if\n  (send\n    (lvar :args extract_options! ) :[]\n    (sym :onclick))\n  (dstr\n    (begin\n      (send\n        (lvar :args extract_options! ) :[]\n        (sym :onclick)))\n    (str \"; \"))\n  (str \"\")) + ","(if\n  (send\n    (lvar :args extract_options! symbolize_keys ) :[]\n    (sym :onclick))\n  (dstr\n    (begin\n      (send\n        (lvar :args extract_options! symbolize_keys ) :[]\n        (sym :onclick)))\n    (str \"; \"))\n  (str \"\")) + ","args pop  [] ","args extract_options!  [] ","args extract_options! symbolize_keys  [] ","args pop  symbolize_keys! ","args extract_options!  symbolize_keys! ","args extract_options! symbolize_keys  symbolize_keys! ","link_to_ update_page  is deprecated and will be removed from Rails 4.1. We recommend using Unobtrusive JavaScript instead.  + ","link_to_ update_page  is deprecated and will be removed from Rails 4.1. We recomend to use Unobtrusive JavaScript instead.  + "]}," ActionView Helpers JavaScriptMacrosHelper auto_complete_stylesheet":{"type":"method","name":"auto_complete_stylesheet","children":[],"call":[" content_tag "]}," ActionView Helpers JavaScriptMacrosHelper text_field_with_auto_complete":{"type":"method","name":"text_field_with_auto_complete","children":[],"call":["(if\n  (send\n    (lvar :completion_options) :[]\n    (sym :skip_style))\n  (str \"\")\n  (send nil :auto_complete_stylesheet)) + + + "," auto_complete_field ","(pair\n  (sym :url)\n  (hash\n    (pair\n      (sym :action)\n      (dstr\n        (str \"auto_complete_for_\")\n        (begin\n          (lvar :object))\n        (str \"_\")\n        (begin\n          (lvar :method)))))) update ","(if\n  (send\n    (lvar :completion_options) :[]\n    (sym :skip_style))\n  (str \"\")\n  (send nil :auto_complete_stylesheet)) + + "," content_tag ","(if\n  (send\n    (lvar :completion_options) :[]\n    (sym :skip_style))\n  (str \"\")\n  (send nil :auto_complete_stylesheet)) + "," text_field "," auto_complete_stylesheet ","completion_options [] "]}," ActionView Helpers JavaScriptMacrosHelper auto_complete_result":{"type":"method","name":"auto_complete_result","children":[],"call":[" content_tag ","items uniq "," h ","entry [] "," highlight ","entries map "]}," ActionView Helpers JavaScriptMacrosHelper auto_complete_field":{"type":"method","name":"auto_complete_field","children":[],"call":[" javascript_tag ","function << ",",  + + ",",  + "," options_for_javascript ","js_options []= ","options [] ","(pair\n  (sym :on_show)\n  (sym :onShow)) each "," array_or_string_for_javascript "," url_for ","' + + ","' + ","(pair\n  (sym :after_update_element)\n  (sym :afterUpdateElement)) each "]}," ActionView Helpers JavaScriptMacrosHelper in_place_editor_field":{"type":"method","name":"in_place_editor_field","children":[],"call":["tag to_content_tag + "," in_place_editor ","tag_options [] ","tag to_content_tag ","in_place_editor_options []= "," url_for ","tag object id ","tag object ","in_place_editor_options [] ","(pair\n  (sym :tag)\n  (str \"span\")) merge! "," ActionView Helpers InstanceTag  new ","tag_options delete "," ActionView Helpers InstanceTag  new  to_content_ ActionView Helpers InstanceTag  new  + ","(pair\n  (sym :tag)\n  (str \"span\")) merge!  [] "," ActionView Helpers InstanceTag  new _options [] "," ActionView Helpers InstanceTag  new  to_content_ ActionView Helpers InstanceTag  new  "," ActionView Helpers InstanceTag  new  object id "," ActionView Helpers InstanceTag  new  object ","(pair\n  (sym : ActionView Helpers InstanceTag  new )\n  (str \"span\")) merge! ","(pair\n  (sym :tag)\n  (str \"span\")) merge!  delete "," ActionView Helpers InstanceTag  new _options delete "]}," ActionView Helpers JavaScriptMacrosHelper in_place_editor":{"type":"method","name":"in_place_editor","children":[],"call":[" javascript_tag ","function << ",",  + "," options_for_javascript ","js_options empty? ","js_options []= ","options [] "," url_for "]}," ActionView Helpers FormTagHelper image_submit_tag":{"type":"method","name":"image_submit_tag","children":[],"call":[" tag ","(pair\n  (str \"type\")\n  (str \"image\")) update ","options stringify_keys "," image_path "," convert_options "," path_to_image "," confirm_javascript_function ","options [] ","options delete ","options stringify_keys! "," add_confirm_to_attributes! ","options []= ","ActiveSupport Deprecation  warn ","(pair\n  (str \"alt\")\n  (send nil :image_alt\n    (lvar :source))) update "," image_alt ","options stringify_keys  stringify_keys "," convert_options stringify_keys  "," options delete _javascript_function ","options stringify_keys  [] ","options stringify_keys  delete ","options stringify_keys  stringify_keys! "," add_options delete _to_attributes! ","options stringify_keys  []= "]}," ActionView Helpers FormTagHelper submit_tag":{"type":"method","name":"submit_tag","children":[],"call":[" tag ","(pair\n  (str \"type\")\n  (str \"submit\")) update ","options stringify_keys ","options []= ","options [] ","options delete ","options stringify_keys! "," convert_options ","(str \"this.setAttribute('originalValue', this.value)\") join "," confirm_javascript_function ","disable_with << ","options [] << "," add_confirm_to_attributes! ","ActiveSupport Deprecation  warn ","options stringify_keys  stringify_keys ","options stringify_keys  []= ","options stringify_keys  [] ","options stringify_keys  delete ","options stringify_keys  stringify_keys! "," convert_options stringify_keys  "," options delete _javascript_function ","options delete  << ","options stringify_keys  [] << "," add_options delete _to_attributes! "]}," ActionView Helpers FormTagHelper radio_button_tag":{"type":"method","name":"radio_button_tag","children":[],"call":[" tag ","html_options []= ","(pair\n  (str \"type\")\n  (str \"radio\")) update ","options stringify_keys ","value to_s gsub gsub downcase ","value to_s gsub gsub ","value to_s gsub ","value to_s "," convert_options ","name to_s gsub gsub ","name to_s gsub ","name to_s "," sanitize_to_id ","(pair\n  (str \"type\")\n  (str \"radio\")) update  []= "]}," ActionView Helpers FormTagHelper check_box_tag":{"type":"method","name":"check_box_tag","children":[],"call":[" tag ","html_options []= ","(pair\n  (str \"type\")\n  (str \"checkbox\")) update ","options stringify_keys "," convert_options "," sanitize_to_id ","(pair\n  (str \"type\")\n  (str \"checkbox\")) update  []= "]}," ActionView Helpers FormTagHelper text_area_tag":{"type":"method","name":"text_area_tag","children":[],"call":[" content_tag ","(pair\n  (str \"name\")\n  (lvar :name)) update ","options stringify_keys ","options delete ","options [] split ","options [] ","options []= ","size split ","options stringify_keys! "," convert_options ","size respond_to? "," sanitize_to_id ","content to_s html_safe ","content to_s "," html_escape ","options key? ","content html_safe ","ERB Util  html_escape ","  html_escape _tag "," ERB Util  html_escape _tag ","options stringify_keys  stringify_keys ","options stringify_keys  delete ","options stringify_keys  [] split ","options stringify_keys  [] ","options stringify_keys  []= ","options delete  split ","options stringify_keys  stringify_keys! "," convert_options stringify_keys  ","options delete  respond_to? "," html_escape  to_s html_safe ","ERB Util  html_escape  to_s html_safe "," html_escape  to_s ","ERB Util  html_escape  to_s "," html_options delete  ","options stringify_keys  key? "," html_escape  html_safe ","ERB Util  html_escape  html_safe ","ERB Util  html_options delete  "]}," ActionView Helpers FormTagHelper password_field_tag":{"type":"method","name":"password_field_tag","children":[],"call":[" text_field_tag ","options update ","options stringify_keys update ","options stringify_keys "," convert_options update "," convert_options "]}," ActionView Helpers FormTagHelper file_field_tag":{"type":"method","name":"file_field_tag","children":[],"call":[" text_field_tag ","options update ","options stringify_keys update ","options stringify_keys "," convert_options update "," convert_options "]}," ActionView Helpers FormTagHelper hidden_field_tag":{"type":"method","name":"hidden_field_tag","children":[],"call":[" text_field_tag ","options stringify_keys update ","options stringify_keys ","options update "]}," ActionView Helpers FormTagHelper text_field_tag":{"type":"method","name":"text_field_tag","children":[],"call":[" tag ","(pair\n  (str \"type\")\n  (str \"text\")) update ","options stringify_keys "," convert_options "," sanitize_to_id "]}," ActionView Helpers FormTagHelper select_tag":{"type":"method","name":"select_tag","children":[],"call":[" content_tag ","(pair\n  (str \"name\")\n  (lvar :name)) update ","options stringify_keys "," convert_options ","(pair\n  (str \"name\")\n  (lvar :html_name)) update "," sanitize_to_id ","name to_s ends_with? ! ","name to_s ends_with? ","name to_s ","options [] == ","options [] ","ActiveSupport Deprecation  warn "," caller ","Array  === ","<option value=\"\"></option> html_safe + ","<option value=\"\"></option> html_safe ","(str \"<option value=\\\"\\\">\") html_safe + ","(str \"<option value=\\\"\\\">\") html_safe ","blank kind_of? ","options delete ","<option value=\"\"></option> + ","(str \"<option value=\\\"\\\">\") + "," content_tag safe_concat ","options delete  kind_of? "]}," ActionView Helpers FormTagHelper end_form_tag":{"type":"method","name":"end_form_tag","children":[],"call":[]}," ActionView Helpers FormTagHelper form_tag":{"type":"method","name":"form_tag","children":[],"call":[" tag ","html_options []= "," url_for ","html_options delete ","html_options [] ","(pair\n  (str \"method\")\n  (str \"post\")) merge ","options stringify_keys "," tag + "," concat ","block binding "," capture "," block_given? "," content_tag ","html_options delete to_s "," form_tag_html "," form_tag_in_block "," html_options_for_form ","(pair\n  (str \"method\")\n  (str \"post\")) merge  []= ","options stringify_keys  []= "," html_options_for_form  []= ","(pair\n  (str \"method\")\n  (str \"post\")) merge  delete ","options stringify_keys  delete "," html_options_for_form  delete ","(pair\n  (str \"method\")\n  (str \"post\")) merge  [] ","options stringify_keys  [] "," html_options_for_form  [] ","(pair\n  (str \"html_options delete to_s \")\n  (str \"post\")) merge ","  capture _tag ","(pair\n  (str \"method\")\n  (str \"post\")) merge  delete to_s ","options stringify_keys  delete to_s "," html_options_for_form  delete to_s "," (pair\n  (str \"method\")\n  (str \"post\")) merge _for_form "," options stringify_keys _for_form ","  html_options_for_form _for_form "]}," ActionView Helpers InstanceTag add_options":{"type":"method","name":"add_options","children":[],"call":["(dstr\n  (str \"<option value=\\\"\\\">\")\n  (begin\n    (if\n      (send\n        (send\n          (lvar :options) :[]\n          (sym :prompt)) :kind_of?\n        (const nil :String))\n      (send\n        (lvar :options) :[]\n        (sym :prompt))\n      (str \"Please select\")))\n  (str \"</option>\\n\")) + ","options [] ","options [] kind_of? ","value blank? ","<option value=\"\"></option>\n + ","(str \"<option value=\\\"\\\">\") + ","option_tags html_safe ","I18n  translate "," html_escape "," content_tag + + "," content_tag + "," content_tag ","ERB Util  html_escape "," content_tag_string + + "," content_tag_string + "," content_tag_string ","(dstr\n  (str \"<option value=\\\"\\\">\")\n  (begin\n    (if\n      (send\n        (send\n          (lvar :options) :[]\n          (sym :I18n  translate )) :kind_of?\n        (const nil :String))\n      (send\n        (lvar :options) :[]\n        (sym :I18n  translate ))\n      (str \"Please select\")))\n  (str \"</option>\\n\")) + ","(dstr\n  (str \"<option value=\\\"\\\">\")\n  (begin\n    (if\n      (send\n        (send\n          (lvar :options) :[]\n          (sym :options [] )) :kind_of?\n        (const nil :String))\n      (send\n        (lvar :options) :[]\n        (sym :options [] ))\n      (str \"Please select\")))\n  (str \"</option>\\n\")) + ","<option value=\"\"></option>\n +  html_safe ","(str \"<option value=\\\"\\\">\") +  html_safe "," content_tag + +  html_safe "," content_tag_string + +  html_safe "]}," ActionView Helpers InstanceTag to_time_zone_select_tag":{"type":"method","name":"to_time_zone_select_tag","children":[],"call":[" content_tag "," add_options "," value "," time_zone_options_for_select ","options [] "," add_default_name_and_id ","html_options stringify_keys "," object "," add_blank_option "," select_content_tag ","  value  ","html_options stringify_keys  stringify_keys "]}," ActionView Helpers FormOptionsHelper time_zone_options_for_select":{"type":"method","name":"time_zone_options_for_select","children":[],"call":[" options_for_select ","convert_zones [] ","priority_zones include? ","zones reject ","z name ","z to_s ","list map "," lambda ","model all ","z =~ ","model all find_all ","priority_zones is_a? ","zone_options html_safe ","zone_options safe_concat ","zones - "," content_tag ","zones select "," html_safe ","zones grep ","convert_model all  [] ","convert_zones -  [] ","priority_model all  include? ","priority_zones -  include? ","zones grep  include? ","model all  reject ","zones -  reject ","priority_model all  is_a? ","priority_zones -  is_a? ","zones grep  is_a? "," html_safe  html_safe "," html_safe  safe_concat ","model all  - ","zones -  - ","model all  select ","zones -  select ","model all  grep ","zones -  grep "]}," ActionView Helpers FormOptionsHelper time_zone_select":{"type":"method","name":"time_zone_select","children":[],"call":["InstanceTag  new to_time_zone_select_tag ","InstanceTag  new ","options delete ","Tags TimeZoneSelect  new render ","Tags TimeZoneSelect  new "]}," ActionView Helpers InstanceTag tag_id_with_index":{"type":"method","name":"tag_id_with_index","children":[],"call":[" sanitized_object_name "," sanitized_method_name "]}," ActionView Helpers InstanceTag tag_name_with_index":{"type":"method","name":"tag_name_with_index","children":[],"call":[" sanitized_method_name "]}," ActionView Helpers InstanceTag to_content_tag":{"type":"method","name":"to_content_tag","children":[],"call":[" content_tag "," value "," object "]}," ActionView Helpers FormHelper file_field":{"type":"method","name":"file_field","children":[],"call":["InstanceTag  new to_input_field_tag ","InstanceTag  new ","options delete ","options update ","Tags FileField  new render ","Tags FileField  new "]}," ActionView Helpers DateHelper select_second":{"type":"method","name":"select_second","children":[],"call":[" select_html ","options [] ","second_options << "," leading_zero_on_single_digits ","(if\n  (send\n    (lvar :datetime) :kind_of?\n    (const nil :Fixnum))\n  (lvar :datetime)\n  (send\n    (lvar :datetime) :sec)) == ","datetime sec ","datetime kind_of? ","0 upto ","val == "," hidden_html ","second_options join "," content_tag ","DateTimeSelector  new select_second ","DateTimeSelector  new "]}," ActionView Helpers DateHelper select_time":{"type":"method","name":"select_time","children":[],"call":[" select_hour + + "," select_second ","options [] "," select_hour + "," select_minute "," select_hour "," select_hour + + + ","separator + ","DateTimeSelector  new select_time ","DateTimeSelector  new "," select_ select_hour + + our + + "," select_ select_hour + + our + "," select_ select_hour + + our "," select_ select_hour + + our + + + "]}," ActionView Helpers DateHelper time_ago_in_words":{"type":"method","name":"time_ago_in_words","children":[],"call":[" distance_of_time_in_words ","Time  now "]}," ActionView Helpers CaptureHelper content_for":{"type":"method","name":"content_for","children":[],"call":[" eval "," controller instance_variable_set ","base + "," instance_var_name "," controller "," capture "," controller instance_variable_get "," instance_variable_set ","existing_content_for + "," block_given? "," instance_variable_get to_s "," instance_variable_get ","(begin\n  (send nil :instance_variable_get\n    (lvar :ivar))) html_safe ","(begin\n  (send nil :instance_variable_get\n    (lvar :ivar))) html_safe! ","@_content_for [] ","@_content_for [] << ","@view_flow get ","@view_flow append ","@view_flow get presence ","@view_flow set ","options [] "," instance_variable_get to_s  + ","existing_ capture _for + ","@_ capture _for [] ","@_ capture _for [] << "]}," ActionView Helpers CaptureHelper capture":{"type":"method","name":"capture","children":[],"call":["buffer []= ","buffer [] ","block call ","buffer length "," eval ","block binding "," capture_erb_with_buffer "," capture_block ","buffer nil? "," capture_erb_with_buffer to_s "," capture_block to_s ","ActionView Base  erb_variable "," with_output_buffer "," block_called_from_erb? ","NonConcattingString  new ","string is_a? ","buffer presence ","ERB Util  html_escape "," eval  []= "," eval  [] "," eval  length "," capture_erb_with_ eval  "," eval  nil? "," capture_erb_with_ eval  to_s "," with_output_ eval  "," eval  presence "]}," ActionView Helpers CacheHelper cache":{"type":"method","name":"cache","children":[],"call":["@controller cache_erb_fragment ","handler new cache_fragment ","handler new ","Template  handler_class_for_extension "," current_render_extension to_sym "," current_render_extension ","@controller fragment_for "," output_buffer "," safe_concat "," fragment_for "," controller perform_caching "," controller "," controller fragment_for "," cache_fragment_name ","Template  handler_class_for_extension  new cache_fragment ","Template  handler_class_for_extension  new ","Template  Template  handler_class_for_extension _class_for_extension "]}," ActionView Helpers BenchmarkHelper benchmark":{"type":"method","name":"benchmark","children":[],"call":["@logger send ","%.5f % ","Benchmark  realtime "," controller logger send "," controller logger "," controller ","%.1f % ","seconds * ","%s (%.1fms) % ","options [] "," controller logger silence ","Benchmark  ms ","options assert_valid_keys ","ActiveSupport Deprecation  warn "," caller ","options is_a? "]}," ActionView Helpers AssetTagHelper compute_public_path":{"type":"method","name":"compute_public_path","children":[],"call":["ActionController Base  asset_host + ","ActionController Base  asset_host ","source include? ","@controller request relative_url_root ","@controller request ","source first == ","source first ","source split last include? ","source split last ","source split ","source << ","? + "," rails_asset_id ","(str \"^[-a-z]+://\") !~ ","asset_id blank? ! ","asset_id blank? ","source [] == ","source [] ","source =~ ","File  extname blank? ","File  extname ","source dup ","@request relative_url_root ","@controller request protocol ","host !~ ","host blank? ! ","host blank? "," compute_asset_host "," rewrite_asset_path! ","ActionView Base  computed_public_paths [] ","ActionView Base  computed_public_paths ","(send\n  (const\n    (const nil :ActionController) :Base) :asset_host) join ","(send\n  (send\n    (ivar :@controller) :request) :protocol) join ","@controller respond_to? ","(send\n  (send\n    (const\n      (const nil :ActionController) :Base) :asset_host) :to_s) join ","ActionController Base  asset_host to_s "," rewrite_asset_path ","File  exist? ","File  join ","source !~ ","ActionController Base  relative_url_root ","ext != ","source_ext blank? ","File  extname [] "," rewrite_host_and_protocol "," controller config relative_url_root "," controller config "," controller "," controller respond_to? "," config asset_path "," config "," rewrite_extension? "," is_uri? "," controller request protocol "," controller request "," is_uri? ! "," config assets_dir ","source start_with? ! ","source start_with? ","ActionController Base  asset_ compute_asset_host  + ","ActionController Base  asset_ compute_asset_host  ","ActionController Base  asset_host +  include? ","source dup  include? "," rewrite_asset_path  include? ","ActionView Base  computed_public_paths []  include? "," rewrite_host_and_protocol  include? ","ActionController Base  asset_host +  first == ","source dup  first == "," rewrite_asset_path  first == ","ActionView Base  computed_public_paths []  first == "," rewrite_host_and_protocol  first == ","ActionController Base  asset_host +  first ","source dup  first "," rewrite_asset_path  first ","ActionView Base  computed_public_paths []  first "," rewrite_host_and_protocol  first ","ActionController Base  asset_host +  split last include? ","source dup  split last include? "," rewrite_asset_path  split last include? ","ActionView Base  computed_public_paths []  split last include? "," rewrite_host_and_protocol  split last include? ","ActionController Base  asset_host +  split last ","source dup  split last "," rewrite_asset_path  split last ","ActionView Base  computed_public_paths []  split last "," rewrite_host_and_protocol  split last ","ActionController Base  asset_host +  split ","source dup  split "," rewrite_asset_path  split ","ActionView Base  computed_public_paths []  split "," rewrite_host_and_protocol  split ","ActionController Base  asset_host +  << ","source dup  << "," rewrite_asset_path  << ","ActionView Base  computed_public_paths []  << "," rewrite_host_and_protocol  << "," rails_ rails_asset_id  "," rails_asset_id  blank? ! "," rails_asset_id  blank? ","ActionController Base  asset_host +  [] == ","source dup  [] == "," rewrite_asset_path  [] == ","ActionView Base  computed_public_paths []  [] == "," rewrite_host_and_protocol  [] == ","ActionController Base  asset_host +  [] ","source dup  [] "," rewrite_asset_path  [] ","ActionView Base  computed_public_paths []  [] "," rewrite_host_and_protocol  [] ","ActionController Base  asset_host +  =~ ","source dup  =~ "," rewrite_asset_path  =~ ","ActionView Base  computed_public_paths []  =~ "," rewrite_host_and_protocol  =~ ","ActionController Base  asset_host +  dup ","source dup  dup "," rewrite_asset_path  dup ","ActionView Base  computed_public_paths []  dup "," rewrite_host_and_protocol  dup "," compute_asset_host  !~ "," compute_asset_host  blank? ! "," compute_asset_host  blank? "," compute_asset_ compute_asset_host  ","(send\n  (const\n    (const nil :ActionController) :Base) :asset_ compute_asset_host ) join ","(send\n  (send\n    (const\n      (const nil :ActionController) :Base) :asset_ compute_asset_host ) :to_s) join ","ActionController Base  asset_ compute_asset_host  to_s ","ActionController Base  asset_host +  !~ ","source dup  !~ "," rewrite_asset_path  !~ ","ActionView Base  computed_public_paths []  !~ "," rewrite_host_and_protocol  !~ ","ActionController Base  asset_host + _ext blank? ","source dup _ext blank? "," rewrite_asset_path _ext blank? ","ActionView Base  computed_public_paths [] _ext blank? "," rewrite_host_and_protocol _ext blank? ","File  extname []  blank? "," rewrite_ compute_asset_host _and_protocol ","ActionController Base  asset_host +  start_with? ! ","source dup  start_with? ! "," rewrite_asset_path  start_with? ! ","ActionView Base  computed_public_paths []  start_with? ! "," rewrite_host_and_protocol  start_with? ! ","ActionController Base  asset_host +  start_with? ","source dup  start_with? "," rewrite_asset_path  start_with? ","ActionView Base  computed_public_paths []  start_with? "," rewrite_host_and_protocol  start_with? "]}," ActionView Helpers AssetTagHelper image_tag":{"type":"method","name":"image_tag","children":[],"call":[" tag ","options delete ","options [] split ","options [] ","options []= ","File  basename split first capitalize ","File  basename split first ","File  basename split ","File  basename "," image_path ","options symbolize_keys ","options symbolize_keys! ","options [] =~ ","source split last split first capitalize ","source split last split first ","source split last split ","source split last ","source split "," compute_public_path ","size split ","size =~ "," path_to_image ","File  basename split first to_s capitalize ","File  basename split first to_s ","File  basename capitalize ","options fetch ","src =~ "," image_alt ","src blank? ","ActiveSupport Deprecation  warn ","options symbolize_keys  delete ","options symbolize_keys  [] split ","options symbolize_keys  [] ","options symbolize_keys  []= ","options symbolize_keys  symbolize_keys ","options symbolize_keys  symbolize_keys! ","options symbolize_keys  [] =~ ","options delete  split ","options delete  =~ ","options symbolize_keys  fetch ","options []=  =~ ","options []=  blank? "]}," ActionView Helpers AssetTagHelper image_path":{"type":"method","name":"image_path","children":[],"call":[" compute_public_path ","ActiveSupport Deprecation  warn "," caller ","You've called image_path with a source that doesn't include an extension.  + + ","You've called image_path with a source that doesn't include an extension.  + ","source blank? ","(or\n  (send\n    (send\n      (lvar :source) :split\n      (str \"/\")) :last)\n  (lvar :source)) include? ","source split last ","source split ","ImageTag  new public_path ","ImageTag  new "," asset_paths compute_public_path "," asset_paths "," asset_path "," config use_sprockets "," config ","source present? "]}," ActionView Helpers AssetTagHelper stylesheet_link_tag":{"type":"method","name":"stylesheet_link_tag","children":[],"call":["(send\n  (lvar :sources) :collect) join "," tag ","(pair\n  (str \"rel\")\n  (str \"Stylesheet\")) merge "," stylesheet_path ","sources collect ","sources pop stringify_keys ","sources pop ","sources last is_a? ","sources last ","source include? "," compute_public_path ","(send\n  (send nil :expand_stylesheet_sources\n    (lvar :sources)) :collect) join ","(pair\n  (str \"rel\")\n  (str \"stylesheet\")) merge "," html_escape "," path_to_stylesheet "," expand_stylesheet_sources collect "," expand_stylesheet_sources ","options delete ","cache write "," join_asset_file_contents ","File  open "," file_exist? ! "," file_exist? ","File  join ","(if\n  (send\n    (lvar :cache) :==\n    (true))\n  (str \"all\")\n  (lvar :cache)) + ","cache == ","ActionController Base  perform_caching ","sources extract_options! stringify_keys ","sources extract_options! "," stylesheet_tag "," write_asset_file_contents "," compute_stylesheet_paths ","(send\n  (send\n    (send\n      (const nil :StylesheetSources) :create\n      (self)\n      (ivar :@controller)\n      (lvar :sources)\n      (lvar :recursive)) :expand_sources) :collect) join ","StylesheetSources  create expand_sources collect ","StylesheetSources  create expand_sources ","StylesheetSources  create ","StylesheetSources  create write_asset_file_contents ","File  exists? ","(send\n  (send nil :expand_stylesheet_sources\n    (lvar :sources)\n    (lvar :recursive)) :collect) join ","(send\n  (send nil :expand_stylesheet_sources\n    (lvar :sources)\n    (lvar :recursive)) :collect) join html_safe ","joined_stylesheet_name [] ","(send\n  (send nil :expand_stylesheet_sources\n    (lvar :sources)\n    (lvar :recursive)) :collect) join html_safe! ","(send\n  (lvar :sources) :collect) join html_safe "," ensure_stylesheet_sources! "," config perform_caching "," config "," config stylesheets_dir "," config assets_dir ","(send\n  (send\n    (lvar :sources) :uniq) :map) join html_safe ","(send\n  (send\n    (lvar :sources) :uniq) :map) join ","(pair\n  (str \"rel\")\n  (str \"stylesheet\")) merge! ","sources uniq map ","sources uniq ","options extract! symbolize_keys ","options extract! ","(send\n  (lvar : stylesheet_path s) :collect) join ","(send\n  (lvar : compute_public_path s) :collect) join ","(send\n  (lvar : expand_stylesheet_sources ) :collect) join "," stylesheet_path s collect "," compute_public_path s collect "," expand_stylesheet_sources  collect "," stylesheet_path s pop stringify_keys "," compute_public_path s pop stringify_keys "," expand_stylesheet_sources  pop stringify_keys "," stylesheet_path s pop "," compute_public_path s pop "," expand_stylesheet_sources  pop "," stylesheet_path s last is_a? "," compute_public_path s last is_a? "," expand_stylesheet_sources  last is_a? "," stylesheet_path s last "," compute_public_path s last "," expand_stylesheet_sources  last "," stylesheet_path  include? "," compute_public_path  include? ","(send\n  (send nil :expand_stylesheet_ stylesheet_path s\n    (lvar : stylesheet_path s)) :collect) join ","(send\n  (send nil :expand_stylesheet_ compute_public_path s\n    (lvar : compute_public_path s)) :collect) join ","(send\n  (send nil :expand_stylesheet_ expand_stylesheet_sources \n    (lvar : expand_stylesheet_sources )) :collect) join "," expand_stylesheet_ stylesheet_path s collect "," expand_stylesheet_ compute_public_path s collect "," expand_stylesheet_ expand_stylesheet_sources  collect "," expand_stylesheet_ stylesheet_path s "," expand_stylesheet_ compute_public_path s "," expand_stylesheet_ expand_stylesheet_sources  ","sources pop stringify_keys  delete ","sources extract_options! stringify_keys  delete ","options delete  write ","(if\n  (send\n    (lvar :options delete ) :==\n    (true))\n  (str \"all\")\n  (lvar :options delete )) + ","options delete  == "," stylesheet_path s extract_options! stringify_keys "," compute_public_path s extract_options! stringify_keys ","sources extract_sources pop stringify_keys ! stringify_keys ","sources extract_sources extract_options! stringify_keys ! stringify_keys "," expand_stylesheet_sources  extract_options! stringify_keys "," stylesheet_path s extract_options! "," compute_public_path s extract_options! ","sources extract_sources pop stringify_keys ! ","sources extract_sources extract_options! stringify_keys ! "," expand_stylesheet_sources  extract_options! ","(send\n  (send\n    (send\n      (const nil :StylesheetSources) :create\n      (self)\n      (ivar :@controller)\n      (lvar : stylesheet_path s)\n      (lvar :recursive)) :expand_ stylesheet_path s) :collect) join ","(send\n  (send\n    (send\n      (const nil :StylesheetSources) :create\n      (self)\n      (ivar :@controller)\n      (lvar : compute_public_path s)\n      (lvar :recursive)) :expand_ compute_public_path s) :collect) join ","(send\n  (send\n    (send\n      (const nil :StylesheetSources) :create\n      (self)\n      (ivar :@controller)\n      (lvar :sources)\n      (lvar :options delete )) :expand_sources) :collect) join ","(send\n  (send\n    (send\n      (const nil :StylesheetSources) :create\n      (self)\n      (ivar :@controller)\n      (lvar : expand_stylesheet_sources )\n      (lvar :recursive)) :expand_ expand_stylesheet_sources ) :collect) join ","StylesheetSources  create expand_ stylesheet_path s collect ","StylesheetSources  create expand_ compute_public_path s collect ","StylesheetSources  create expand_ expand_stylesheet_sources  collect ","StylesheetSources  create expand_ stylesheet_path s ","StylesheetSources  create expand_ compute_public_path s ","StylesheetSources  create expand_ expand_stylesheet_sources  ","(send\n  (send nil :expand_stylesheet_ stylesheet_path s\n    (lvar : stylesheet_path s)\n    (lvar :recursive)) :collect) join ","(send\n  (send nil :expand_stylesheet_ compute_public_path s\n    (lvar : compute_public_path s)\n    (lvar :recursive)) :collect) join ","(send\n  (send nil :expand_stylesheet_sources\n    (lvar :sources)\n    (lvar :options delete )) :collect) join ","(send\n  (send nil :expand_stylesheet_ expand_stylesheet_sources \n    (lvar : expand_stylesheet_sources )\n    (lvar :recursive)) :collect) join ","(send\n  (send nil :expand_stylesheet_ stylesheet_path s\n    (lvar : stylesheet_path s)\n    (lvar :recursive)) :collect) join html_safe ","(send\n  (send nil :expand_stylesheet_ compute_public_path s\n    (lvar : compute_public_path s)\n    (lvar :recursive)) :collect) join html_safe ","(send\n  (send nil :expand_stylesheet_sources\n    (lvar :sources)\n    (lvar :options delete )) :collect) join html_safe ","(send\n  (send nil :expand_stylesheet_ expand_stylesheet_sources \n    (lvar : expand_stylesheet_sources )\n    (lvar :recursive)) :collect) join html_safe ","(if\n  (send\n    (lvar :cache) :==\n    (true))\n  (str \"all\")\n  (lvar :cache)) +  [] ","(send\n  (send nil :expand_stylesheet_ stylesheet_path s\n    (lvar : stylesheet_path s)\n    (lvar :recursive)) :collect) join html_safe! ","(send\n  (send nil :expand_stylesheet_ compute_public_path s\n    (lvar : compute_public_path s)\n    (lvar :recursive)) :collect) join html_safe! ","(send\n  (send nil :expand_stylesheet_sources\n    (lvar :sources)\n    (lvar :options delete )) :collect) join html_safe! ","(send\n  (send nil :expand_stylesheet_ expand_stylesheet_sources \n    (lvar : expand_stylesheet_sources )\n    (lvar :recursive)) :collect) join html_safe! ","(send\n  (lvar : stylesheet_path s) :collect) join html_safe ","(send\n  (lvar : compute_public_path s) :collect) join html_safe ","(send\n  (lvar : expand_stylesheet_sources ) :collect) join html_safe "," ensure_stylesheet_ stylesheet_path s! "," ensure_stylesheet_ compute_public_path s! "," ensure_stylesheet_ expand_stylesheet_sources ! ","(send\n  (send\n    (lvar : stylesheet_path s) :uniq) :map) join html_safe ","(send\n  (send\n    (lvar : compute_public_path s) :uniq) :map) join html_safe ","(send\n  (send\n    (lvar : expand_stylesheet_sources ) :uniq) :map) join html_safe ","(send\n  (send\n    (lvar : stylesheet_path s) :uniq) :map) join ","(send\n  (send\n    (lvar : compute_public_path s) :uniq) :map) join ","(send\n  (send\n    (lvar : expand_stylesheet_sources ) :uniq) :map) join "," stylesheet_path s uniq map "," compute_public_path s uniq map "," expand_stylesheet_sources  uniq map "," stylesheet_path s uniq "," compute_public_path s uniq "," expand_stylesheet_sources  uniq ","sources pop stringify_keys  extract! symbolize_keys ","sources extract_options! stringify_keys  extract! symbolize_keys ","sources pop stringify_keys  extract! ","sources extract_options! stringify_keys  extract! "]}," ActionView Helpers AssetTagHelper stylesheet_path":{"type":"method","name":"stylesheet_path","children":[],"call":[" compute_public_path ","StylesheetTag  new public_path ","StylesheetTag  new "]}," ActionView Helpers AssetTagHelper javascript_include_tag":{"type":"method","name":"javascript_include_tag","children":[],"call":["(send\n  (lvar :sources) :collect) join "," content_tag ","(pair\n  (str \"type\")\n  (str \"text/javascript\")) merge "," javascript_path ","sources collect ","sources << ","File  exists? ","sources first == ","sources first ","sources pop stringify_keys ","sources pop ","sources last is_a? ","sources last ","@@javascript_default_sources dup ","sources delete ","sources [] + + ","sources [] ","sources length ","sources index + ","sources index ","sources [] + ","sources include? ","source include? "," compute_public_path ","(send\n  (send nil :expand_javascript_sources\n    (lvar :sources)) :collect) join ","(pair\n  (str \"type\")\n  (const\n    (const nil :Mime) :JS)) merge "," path_to_javascript "," expand_javascript_sources collect "," expand_javascript_sources ","cache write "," join_asset_file_contents ","File  open "," file_exist? ! "," file_exist? ","File  join ","(if\n  (send\n    (lvar :cache) :==\n    (true))\n  (str \"all\")\n  (lvar :cache)) + ","cache == ","ActionController Base  perform_caching ","options delete ","sources extract_options! stringify_keys ","sources extract_options! "," javascript_src_tag "," write_asset_file_contents "," compute_javascript_paths ","(send\n  (send\n    (send\n      (const nil :JavaScriptSources) :create\n      (self)\n      (ivar :@controller)\n      (lvar :sources)\n      (lvar :recursive)) :expand_sources) :collect) join ","JavaScriptSources  create expand_sources collect ","JavaScriptSources  create expand_sources ","JavaScriptSources  create ","JavaScriptSources  create write_asset_file_contents ","(send\n  (send nil :expand_javascript_sources\n    (lvar :sources)\n    (lvar :recursive)) :collect) join ","(send\n  (send nil :expand_javascript_sources\n    (lvar :sources)\n    (lvar :recursive)) :collect) join html_safe ","joined_javascript_name [] ","(send\n  (send nil :expand_javascript_sources\n    (lvar :sources)\n    (lvar :recursive)) :collect) join html_safe! ","(send\n  (lvar :sources) :collect) join html_safe "," ensure_javascript_sources! "," config perform_caching "," config "," config javascripts_dir "," config assets_dir ","(send\n  (send\n    (lvar :sources) :uniq) :map) join html_safe ","(send\n  (send\n    (lvar :sources) :uniq) :map) join ","(pair\n  (str \"src\")\n  (send nil :path_to_javascript\n    (lvar :source)\n    (lvar :path_options))) merge! ","sources uniq map ","sources uniq ","options extract! symbolize_keys ","options extract! ","(pair\n  (str \"src\")\n  (send nil :path_to_javascript\n    (lvar :source)\n    (lvar :path_options))) merge ","(send\n  (lvar : javascript_path s) :collect) join ","(send\n  (lvar : compute_public_path s) :collect) join ","(send\n  (lvar :@@javascript_default_sources dup ) :collect) join ","(send\n  (lvar :sources [] + + ) :collect) join ","(send\n  (lvar : expand_javascript_sources ) :collect) join "," javascript_path s collect "," compute_public_path s collect ","@@javascript_default_sources dup  collect ","sources [] + +  collect "," expand_javascript_sources  collect "," javascript_path s << "," compute_public_path s << ","@@javascript_default_sources dup  << ","sources [] + +  << "," expand_javascript_sources  << "," javascript_path s first == "," compute_public_path s first == ","@@javascript_default_sources dup  first == ","sources [] + +  first == "," expand_javascript_sources  first == "," javascript_path s first "," compute_public_path s first ","@@javascript_default_sources dup  first ","sources [] + +  first "," expand_javascript_sources  first "," javascript_path s pop stringify_keys "," compute_public_path s pop stringify_keys ","@@javascript_default_sources dup  pop stringify_keys ","sources [] + +  pop stringify_keys "," expand_javascript_sources  pop stringify_keys "," javascript_path s pop "," compute_public_path s pop ","@@javascript_default_sources dup  pop ","sources [] + +  pop "," expand_javascript_sources  pop "," javascript_path s last is_a? "," compute_public_path s last is_a? ","@@javascript_default_sources dup  last is_a? ","sources [] + +  last is_a? "," expand_javascript_sources  last is_a? "," javascript_path s last "," compute_public_path s last ","@@javascript_default_sources dup  last ","sources [] + +  last "," expand_javascript_sources  last ","@@javascript_default_ javascript_path s dup ","@@javascript_default_ compute_public_path s dup ","@@javascript_default_@@javascript_default_sources dup  dup ","@@javascript_default_sources [] + +  dup ","@@javascript_default_ expand_javascript_sources  dup "," javascript_path s delete "," compute_public_path s delete ","@@javascript_default_sources dup  delete ","sources [] + +  delete "," expand_javascript_sources  delete "," javascript_path s [] + + "," compute_public_path s [] + + ","@@javascript_default_sources dup  [] + + ","sources [] + +  [] + + "," expand_javascript_sources  [] + + "," javascript_path s [] "," compute_public_path s [] ","@@javascript_default_sources dup  [] ","sources [] + +  [] "," expand_javascript_sources  [] "," javascript_path s length "," compute_public_path s length ","@@javascript_default_sources dup  length ","sources [] + +  length "," expand_javascript_sources  length "," javascript_path s index + "," compute_public_path s index + ","@@javascript_default_sources dup  index + ","sources [] + +  index + "," expand_javascript_sources  index + "," javascript_path s index "," compute_public_path s index ","@@javascript_default_sources dup  index ","sources [] + +  index "," expand_javascript_sources  index "," javascript_path s [] + "," compute_public_path s [] + ","@@javascript_default_sources dup  [] + ","sources [] + +  [] + "," expand_javascript_sources  [] + "," javascript_path s include? "," compute_public_path s include? ","@@javascript_default_sources dup  include? ","sources [] + +  include? "," expand_javascript_sources  include? "," javascript_path  include? "," compute_public_path  include? ","(send\n  (send nil :expand_javascript_ javascript_path s\n    (lvar : javascript_path s)) :collect) join ","(send\n  (send nil :expand_javascript_ compute_public_path s\n    (lvar : compute_public_path s)) :collect) join ","(send\n  (send nil :expand_javascript_@@javascript_default_sources dup \n    (lvar :@@javascript_default_sources dup )) :collect) join ","(send\n  (send nil :expand_javascript_sources [] + + \n    (lvar :sources [] + + )) :collect) join ","(send\n  (send nil :expand_javascript_ expand_javascript_sources \n    (lvar : expand_javascript_sources )) :collect) join "," expand_javascript_ javascript_path s collect "," expand_javascript_ compute_public_path s collect "," expand_javascript_@@javascript_default_sources dup  collect "," expand_javascript_sources [] + +  collect "," expand_javascript_ expand_javascript_sources  collect "," expand_javascript_ javascript_path s "," expand_javascript_ compute_public_path s "," expand_javascript_@@javascript_default_sources dup  "," expand_javascript_sources [] + +  "," expand_javascript_ expand_javascript_sources  ","options delete  write ","(if\n  (send\n    (lvar :options delete ) :==\n    (true))\n  (str \"all\")\n  (lvar :options delete )) + ","options delete  == ","sources pop stringify_keys  delete ","sources extract_options! stringify_keys  delete "," javascript_path s extract_options! stringify_keys "," compute_public_path s extract_options! stringify_keys ","sources extract_sources pop stringify_keys ! stringify_keys ","sources extract_sources extract_options! stringify_keys ! stringify_keys ","@@javascript_default_sources dup  extract_options! stringify_keys ","sources [] + +  extract_options! stringify_keys "," expand_javascript_sources  extract_options! stringify_keys "," javascript_path s extract_options! "," compute_public_path s extract_options! ","sources extract_sources pop stringify_keys ! ","sources extract_sources extract_options! stringify_keys ! ","@@javascript_default_sources dup  extract_options! ","sources [] + +  extract_options! "," expand_javascript_sources  extract_options! ","(send\n  (send\n    (send\n      (const nil :JavaScriptSources) :create\n      (self)\n      (ivar :@controller)\n      (lvar : javascript_path s)\n      (lvar :recursive)) :expand_ javascript_path s) :collect) join ","(send\n  (send\n    (send\n      (const nil :JavaScriptSources) :create\n      (self)\n      (ivar :@controller)\n      (lvar : compute_public_path s)\n      (lvar :recursive)) :expand_ compute_public_path s) :collect) join ","(send\n  (send\n    (send\n      (const nil :JavaScriptSources) :create\n      (self)\n      (ivar :@controller)\n      (lvar :@@javascript_default_sources dup )\n      (lvar :recursive)) :expand_@@javascript_default_sources dup ) :collect) join ","(send\n  (send\n    (send\n      (const nil :JavaScriptSources) :create\n      (self)\n      (ivar :@controller)\n      (lvar :sources [] + + )\n      (lvar :recursive)) :expand_sources [] + + ) :collect) join ","(send\n  (send\n    (send\n      (const nil :JavaScriptSources) :create\n      (self)\n      (ivar :@controller)\n      (lvar : expand_javascript_sources )\n      (lvar :recursive)) :expand_ expand_javascript_sources ) :collect) join ","(send\n  (send\n    (send\n      (const nil :JavaScriptSources) :create\n      (self)\n      (ivar :@controller)\n      (lvar :sources)\n      (lvar :options delete )) :expand_sources) :collect) join ","JavaScriptSources  create expand_ javascript_path s collect ","JavaScriptSources  create expand_ compute_public_path s collect ","JavaScriptSources  create expand_@@javascript_default_sources dup  collect ","JavaScriptSources  create expand_sources [] + +  collect ","JavaScriptSources  create expand_ expand_javascript_sources  collect ","JavaScriptSources  create expand_ javascript_path s ","JavaScriptSources  create expand_ compute_public_path s ","JavaScriptSources  create expand_@@javascript_default_sources dup  ","JavaScriptSources  create expand_sources [] + +  ","JavaScriptSources  create expand_ expand_javascript_sources  ","(send\n  (send nil :expand_javascript_ javascript_path s\n    (lvar : javascript_path s)\n    (lvar :recursive)) :collect) join ","(send\n  (send nil :expand_javascript_ compute_public_path s\n    (lvar : compute_public_path s)\n    (lvar :recursive)) :collect) join ","(send\n  (send nil :expand_javascript_@@javascript_default_sources dup \n    (lvar :@@javascript_default_sources dup )\n    (lvar :recursive)) :collect) join ","(send\n  (send nil :expand_javascript_sources [] + + \n    (lvar :sources [] + + )\n    (lvar :recursive)) :collect) join ","(send\n  (send nil :expand_javascript_ expand_javascript_sources \n    (lvar : expand_javascript_sources )\n    (lvar :recursive)) :collect) join ","(send\n  (send nil :expand_javascript_sources\n    (lvar :sources)\n    (lvar :options delete )) :collect) join ","(send\n  (send nil :expand_javascript_ javascript_path s\n    (lvar : javascript_path s)\n    (lvar :recursive)) :collect) join html_safe ","(send\n  (send nil :expand_javascript_ compute_public_path s\n    (lvar : compute_public_path s)\n    (lvar :recursive)) :collect) join html_safe ","(send\n  (send nil :expand_javascript_@@javascript_default_sources dup \n    (lvar :@@javascript_default_sources dup )\n    (lvar :recursive)) :collect) join html_safe ","(send\n  (send nil :expand_javascript_sources [] + + \n    (lvar :sources [] + + )\n    (lvar :recursive)) :collect) join html_safe ","(send\n  (send nil :expand_javascript_ expand_javascript_sources \n    (lvar : expand_javascript_sources )\n    (lvar :recursive)) :collect) join html_safe ","(send\n  (send nil :expand_javascript_sources\n    (lvar :sources)\n    (lvar :options delete )) :collect) join html_safe ","(if\n  (send\n    (lvar :cache) :==\n    (true))\n  (str \"all\")\n  (lvar :cache)) +  [] ","(send\n  (send nil :expand_javascript_ javascript_path s\n    (lvar : javascript_path s)\n    (lvar :recursive)) :collect) join html_safe! ","(send\n  (send nil :expand_javascript_ compute_public_path s\n    (lvar : compute_public_path s)\n    (lvar :recursive)) :collect) join html_safe! ","(send\n  (send nil :expand_javascript_@@javascript_default_sources dup \n    (lvar :@@javascript_default_sources dup )\n    (lvar :recursive)) :collect) join html_safe! ","(send\n  (send nil :expand_javascript_sources [] + + \n    (lvar :sources [] + + )\n    (lvar :recursive)) :collect) join html_safe! ","(send\n  (send nil :expand_javascript_ expand_javascript_sources \n    (lvar : expand_javascript_sources )\n    (lvar :recursive)) :collect) join html_safe! ","(send\n  (send nil :expand_javascript_sources\n    (lvar :sources)\n    (lvar :options delete )) :collect) join html_safe! ","(send\n  (lvar : javascript_path s) :collect) join html_safe ","(send\n  (lvar : compute_public_path s) :collect) join html_safe ","(send\n  (lvar :@@javascript_default_sources dup ) :collect) join html_safe ","(send\n  (lvar :sources [] + + ) :collect) join html_safe ","(send\n  (lvar : expand_javascript_sources ) :collect) join html_safe "," ensure_javascript_ javascript_path s! "," ensure_javascript_ compute_public_path s! "," ensure_javascript_@@javascript_default_sources dup ! "," ensure_javascript_sources [] + + ! "," ensure_javascript_ expand_javascript_sources ! ","(send\n  (send\n    (lvar : javascript_path s) :uniq) :map) join html_safe ","(send\n  (send\n    (lvar : compute_public_path s) :uniq) :map) join html_safe ","(send\n  (send\n    (lvar :@@javascript_default_sources dup ) :uniq) :map) join html_safe ","(send\n  (send\n    (lvar :sources [] + + ) :uniq) :map) join html_safe ","(send\n  (send\n    (lvar : expand_javascript_sources ) :uniq) :map) join html_safe ","(send\n  (send\n    (lvar : javascript_path s) :uniq) :map) join ","(send\n  (send\n    (lvar : compute_public_path s) :uniq) :map) join ","(send\n  (send\n    (lvar :@@javascript_default_sources dup ) :uniq) :map) join ","(send\n  (send\n    (lvar :sources [] + + ) :uniq) :map) join ","(send\n  (send\n    (lvar : expand_javascript_sources ) :uniq) :map) join ","(pair\n  (str \"src\")\n  (send nil :path_to_javascript\n    (lvar : javascript_path )\n    (lvar :path_options))) merge! ","(pair\n  (str \"src\")\n  (send nil :path_to_javascript\n    (lvar : compute_public_path )\n    (lvar :path_options))) merge! ","(pair\n  (str \"src\")\n  (send nil :path_to_javascript\n    (lvar :source)\n    (lvar :path_sources pop stringify_keys ))) merge! ","(pair\n  (str \"src\")\n  (send nil :path_to_javascript\n    (lvar :source)\n    (lvar :path_sources extract_options! stringify_keys ))) merge! ","(pair\n  (str \"src\")\n  (send nil :path_to_javascript\n    (lvar :source)\n    (lvar :options extract! symbolize_keys ))) merge! "," javascript_path s uniq map "," compute_public_path s uniq map ","@@javascript_default_sources dup  uniq map ","sources [] + +  uniq map "," expand_javascript_sources  uniq map "," javascript_path s uniq "," compute_public_path s uniq ","@@javascript_default_sources dup  uniq ","sources [] + +  uniq "," expand_javascript_sources  uniq ","sources pop stringify_keys  extract! symbolize_keys ","sources extract_options! stringify_keys  extract! symbolize_keys ","sources pop stringify_keys  extract! ","sources extract_options! stringify_keys  extract! ","(pair\n  (str \"src\")\n  (send nil :path_to_javascript\n    (lvar : javascript_path )\n    (lvar :path_options))) merge ","(pair\n  (str \"src\")\n  (send nil :path_to_javascript\n    (lvar : compute_public_path )\n    (lvar :path_options))) merge ","(pair\n  (str \"src\")\n  (send nil :path_to_javascript\n    (lvar :source)\n    (lvar :path_sources pop stringify_keys ))) merge ","(pair\n  (str \"src\")\n  (send nil :path_to_javascript\n    (lvar :source)\n    (lvar :path_sources extract_options! stringify_keys ))) merge ","(pair\n  (str \"src\")\n  (send nil :path_to_javascript\n    (lvar :source)\n    (lvar :options extract! symbolize_keys ))) merge "]}," ActionView Helpers AssetTagHelper javascript_path":{"type":"method","name":"javascript_path","children":[],"call":[" compute_public_path ","JavaScriptTag  new public_path ","JavaScriptTag  new "]}," ActionView Helpers AssetTagHelper auto_discovery_link_tag":{"type":"method","name":"auto_discovery_link_tag","children":[],"call":[" tag "," url_for ","url_options merge ","url_options is_a? ","type to_s upcase ","type to_s ","tag_options [] ","options merge ","Mime Type  lookup_by_extension to_s ","Mime Type  lookup_by_extension ","ActiveSupport Deprecation  warn ","You have passed type other than :rss or :atom to auto_discovery_link_tag and haven't supplied  + + + ","You have passed type other than :rss or :atom to auto_discovery_link_tag and haven't supplied  + + ","You have passed type other than :rss or :atom to auto_discovery_link_tag and haven't supplied  + ","tag_options [] blank? ","(or\n  (send\n    (lvar :type) :==\n    (sym :rss))\n  (send\n    (lvar :type) :==\n    (sym :atom))) ! ","type == "]}," ActionView CompiledTemplates wrap_source":{"type":"method","name":"wrap_source","children":[],"call":["arg_names * "]}," ActionView CompiledTemplates compile_source":{"type":"method","name":"compile_source","children":[],"call":[" raise ","e blame_file! ","@mtimes []= ","Time  now "," full_key "," module_eval "," wrap_source ","arg_names * ","arg_names empty? "," method_names [] "," method_names ","arg_ method_names [] s * ","arg_ method_names [] s empty? "," method_ method_names [] s [] "," method_ method_names [] s "]}," ActionView CompiledTemplates mtime":{"type":"method","name":"mtime","children":[],"call":["@mtimes [] "," full_key "]}," ActionView CompiledTemplates selector":{"type":"method","name":"selector","children":[],"call":[" method_names [] "," method_names "," method_names key? "," full_key "," method_names  full_key ? "," full_ full_key  "]}," ActionView CompiledTemplates full_key":{"type":"method","name":"full_key","children":[],"call":[]}," ActionView CompiledTemplates initialize":{"type":"method","name":"initialize","children":[],"call":["hash []= ","hash length + ","hash length ","Hash  new "]}," ActionView Base compile_template":{"type":"method","name":"compile_template","children":[],"call":["@@compile_time []= ","Time  now "," raise ","TemplateError  new "," logger debug ","e backtrace join ","e backtrace "," logger ","CompiledTemplates  module_eval ","line_offset -@ ","file_name blank? ","extension to_sym == ","extension to_sym ","@@template_args [] size ","@@template_args [] "," create_template_source ","local_assigns keys "," assign_method_name ","@@method_names [] "," view_paths first "," view_paths "," extract_base_path_from ","@@template_args [] size + ","handler line_offset ","@@template_args [] size  -@ ","@@template_args [] size +  -@ ","handler @@template_args [] size  ","handler @@template_args [] size +  "]}," ActionView Base assign_method_name":{"type":"method","name":"assign_method_name","children":[],"call":["@@method_names []= ","method_name intern ","method_name << ","@@inline_template_count to_s ","s [] to_s ","s [] ","method_name_file_part gsub! ","method_name_file_part tr! ","method_name_file_part sub! ","file_path clone ","file_path [] ","file_path length - - ","file_path length - ","file_path length ","i + + ","i + ","base_path length ","file_path index ","File  expand_path ","extension to_sym == ","extension to_sym "," compiled_method_name ","@@method_names [] ","method_name file_path index ntern ","@@inbase_path length ine_tempbase_path length ate_count to_s ","@@file_path index nlfile_path index ne_template_count to_s ","file_path clone  gsub! ","file_path []  gsub! ","method_name_fibase_path length e_part gsub! ","method_name_ffile_path index le_part gsub! ","file_path clone  tr! ","file_path []  tr! ","method_name_fibase_path length e_part tr! ","method_name_ffile_path index le_part tr! ","file_path clone  sub! ","file_path []  sub! ","method_name_fibase_path length e_part sub! ","method_name_ffile_path index le_part sub! ","fibase_path length e_path cbase_path length one ","ffile_path index le_path clone ","File  expand_path  clone ","fibase_path length e_path [] ","ffile_path index le_path [] ","File  expand_path  [] ","fibase_path length e_path base_path length ength - - ","ffile_path index le_path length - - ","File  expand_path  length - - ","fibase_path length e_path base_path length ength - ","ffile_path index le_path length - ","File  expand_path  length - ","fibase_path length e_path base_path length ength ","ffile_path index le_path length ","File  expand_path  length ","file_path index  + + ","file_path index  + ","base_path base_path length ength ","fibase_path length e_path index ","ffile_path index le_path file_path index ndex ","File  expand_path  index ","Fibase_path length e  expand_path ","Ffile_path index le  expand_path ","extensfile_path index on to_sym == ","extensfile_path index on to_sym "," compibase_path length ed_method_name "," compfile_path index led_method_name "]}," ActionView Base create_template_source":{"type":"method","name":"create_template_source","children":[],"call":["locals_code << ","locals_keys each ","@@template_args []= ","h []= ","locals_keys inject ","@@template_args [] keys | ","@@template_args [] keys ","@@template_args [] ","ERB  new src ","ERB  new ","xml = Builder::XmlMarkup.new(:indent => 2)\n + + ","xml = Builder::XmlMarkup.new(:indent => 2)\n + ","extension to_sym == ","extension to_sym ","controller.response.content_type ||= Mime::JS\n + ","(begin\n  (lvar :content_type_handler)) + + + ","(begin\n  (lvar :content_type_handler)) + + ","(begin\n  (lvar :content_type_handler)) + "," controller respond_to? "," controller "," template_requires_setup? "," delegate_compile ","@@template_args [] keys |  each ","@@template_args [] keys |  inject "]}," ActionView Base compile_template?":{"type":"method","name":"compile_template?","children":[],"call":["@@compile_time [] < ","File  mtime ","@@compile_time [] ","@@cache_template_loading ! "," supports_local_assigns? ","@@method_names [] "," template_changed_since? ","@@@@compile_time []  [] < ","@@@@compile_time []  [] "]}," ActionView Base supports_local_assigns?":{"type":"method","name":"supports_local_assigns?","children":[],"call":["args has_key? ","local_assigns all? ","@@template_args [] ","local_assigns empty? ","@@template_args []  has_key? ","@@template_@@template_args []  [] "]}," ActionView Base assign_variables_from_controller":{"type":"method","name":"assign_variables_from_controller","children":[],"call":[" instance_variable_set ","@assigns each ","ActiveSupport Deprecation DeprecatedInstanceVariable  new ","(str \"action_name\") include? ","ActiveSupport Deprecation DeprecatedInstanceVariableProxy  new ","key to_sym ","(str \"logger\") include? "]}," ActionView Base delegate_render":{"type":"method","name":"delegate_render","children":[],"call":["handler new render ","handler new ","delegator render ","@@template_handlers [] new ","@@template_handlers [] ","@@template_handlers [] new  render "]}," ActionView Base evaluate_assigns":{"type":"method","name":"evaluate_assigns","children":[],"call":[" assign_variables_from_controller "]}," ActionView Base delegate_template_exists?":{"type":"method","name":"delegate_template_exists?","children":[],"call":[" template_exists? ","@@template_handlers find ","delegate first to_sym ","delegate first "]}," ActionView Base compile_and_render_template":{"type":"method","name":"compile_and_render_template","children":[],"call":[" instance_variable_get ","name first "," send ","local_assigns symbolize_keys "," evaluate_assigns ","@@method_names [] "," compile_template "," read_template_file "," compile_template? ","local_assigns symbolize_keys  symbolize_keys ","@@@@method_names [] s [] "]}," ActionView Base register_template_handler":{"type":"method","name":"register_template_handler","children":[],"call":[]}," ActionController Verification verify_action":{"type":"method","name":"verify_action","children":[],"call":[" redirect_to ","options [] "," render "," performed? "," flash update "," flash "," request xhr? != "," request xhr? "," request ","options [] nil? ","@request method != ","v to_sym ","@request method ","(splat\n  (send\n    (lvar :options) :[]\n    (sym :method))) all? ","prereqs_invalid ! "," flash [] nil? "," flash [] ","(splat\n  (send\n    (lvar :options) :[]\n    (sym :flash))) find ","@session [] nil? ","@session [] ","(splat\n  (send\n    (lvar :options) :[]\n    (sym :session))) find ","@params [] nil? ","@params [] ","(splat\n  (send\n    (lvar :options) :[]\n    (sym :params))) find "," response headers update "," response headers "," response "," request method != "," request method "," session [] nil? "," session [] "," session "," params [] nil? "," params [] "," params ","options []= "," send ","options [] is_a? "," head "," send! "," apply_remaining_actions "," prereqs_invalid? "," response headers merge! "]}," ActionController Verification ClassMethods verify":{"type":"method","name":"verify","children":[],"call":["c send "," before_filter ","options [] ","c send! ","c __send__ "," verify_action "]}," ActionController Verification append_features":{"type":"method","name":"append_features","children":[],"call":[]}," XmlSimple put_into_cache":{"type":"method","name":"put_into_cache","children":[],"call":[" raise ","@@cache save_mem_copy ","@@cache save_mem_share ","@@cache save_storable ","@options [] each ","@options [] ","@options has_key? "]}," XmlSimple load_xml_file":{"type":"method","name":"load_xml_file","children":[],"call":[" parse ","File  readlines to_s ","File  readlines "]}," XmlSimple find_xml_file":{"type":"method","name":"find_xml_file","children":[],"call":[" raise ","searchpath join ","File  file? ","searchpath empty? ","File  join ","searchpath each ","filename != ","File  basename ","File  basename  != "]}," XmlSimple parse":{"type":"method","name":"parse","children":[],"call":["Document  new "]}," XmlSimple node_to_text":{"type":"method","name":"node_to_text","children":[],"call":["node to_s strip ","node to_s ","node instance_of? ","node value strip ","node value ","node value nil? ","node texts join ","node texts "]}," XmlSimple empty":{"type":"method","name":"empty","children":[],"call":["value nil? ","value !~ ","value empty? "]}," XmlSimple normalise_space":{"type":"method","name":"normalise_space","children":[],"call":["text gsub! ","text sub! "]}," XmlSimple escape_value":{"type":"method","name":"escape_value","children":[],"call":["result gsub! ","data dup ","data == ","data nil? ","data dup  gsub! "]}," XmlSimple hash_to_array":{"type":"method","name":"hash_to_array","children":[],"call":["arrayref << ","(pair\n  (send\n    (send\n      (ivar :@options) :[]\n      (str \"keyattr\")) :[]\n    (int 0))\n  (lvar :key)) update ","@options [] [] ","@options [] ","(pair\n  (send\n    (send\n      (send\n        (ivar :@options) :[]\n        (str \"keyattr\")) :[]\n      (lvar :parent)) :[]\n    (int 0))\n  (lvar :key)) update ","@options [] [] [] ","@options [] has_key? ","@options [] instance_of? ","value instance_of? ","hashref each "]}," XmlSimple scalar":{"type":"method","name":"scalar","children":[],"call":["value instance_of? "]}," XmlSimple value_to_xml":{"type":"method","name":"value_to_xml","children":[],"call":["result join ","@ancestors pop "," scalar ! "," scalar "," raise ","ref type ","result << << << << << ","result << << << << ","result << << << ","result << << ","result << "," value_to_xml ","indent + ","@options [] ","value instance_of? "," escape_value ","value to_s ","ref each ","ref instance_of? ","nested empty? ! ","nested empty? ","nested [] sub! ","nested [] ","text_content nil? ! ","text_content nil? ","key == ","nested << ","@options [] nil? ","@options has_key? ","value nil? ","key [] == ","key [] ","key nil? ! ","key nil? ","ref empty? ! ","ref empty? ","ref []= ","@options [] [] ","@options [] has_key? "," hash_to_array ","indent != ","@options [] empty? ! ","@options [] empty? ","ref to_s + ","ref to_s ","(lvar :indent) join ","@ancestors << ","@ancestors member? ","name != ","name nil? ! ","name nil? "," hash_to_array  type ","  escape_value _to_xml "," value to_s _to_xml "," escape_value  instance_of? ","value to_s  instance_of? "," escape_ escape_value  "," escape_value to_s  "," escape_value  to_s ","value to_s  to_s "," hash_to_array  each "," hash_to_array  instance_of? "," escape_value  nil? ","value to_s  nil? "," hash_to_array  empty? ! "," hash_to_array  empty? "," hash_to_array  []= "," hash_to_array  to_s + "," hash_to_array  to_s "]}," XmlSimple get_var":{"type":"method","name":"get_var","children":[],"call":["@_var_values [] ","@_var_values has_key? "]}," XmlSimple set_var":{"type":"method","name":"set_var","children":[],"call":["@_var_values []= "]}," XmlSimple has_mixed_content?":{"type":"method","name":"has_mixed_content?","children":[],"call":["element texts join !~ ","element texts join ","element texts ","element has_elements? ","element has_text? "]}," XmlSimple get_attributes":{"type":"method","name":"get_attributes","children":[],"call":["attributes []= ","node attributes each ","node attributes "]}," XmlSimple force_array?":{"type":"method","name":"force_array?","children":[],"call":["key =~ ","forcearray [] each ","forcearray [] ","forcearray has_key? ","forcearray instance_of? ","@options [] ","@options [] == ","key == ","@options []  [] each ","@options []  [] ","@options []  has_key? ","@options []  instance_of? "]}," XmlSimple merge":{"type":"method","name":"merge","children":[],"call":["hash []= "," force_array? ","value instance_of? ","hash [] ","hash [] << ","hash [] instance_of? ","hash has_key? "," set_var ","@options [] ","@options has_key? "," get_var ","value gsub! ","@_var_values empty? ","@_var_values nil? "," normalise_space ","@options [] == "," normalise_space  instance_of? "," normalise_space  gsub! ","@_var_ normalise_space s empty? ","@_var_ normalise_space s nil? "]}," XmlSimple collapse_content":{"type":"method","name":"collapse_content","children":[],"call":["hash []= ","hash [] [] ","hash [] ","hash each_key ","value has_key? ","value size == ","value size ","value instance_of? ","hash each_value ","@options [] "]}," XmlSimple fold_array_by_name":{"type":"method","name":"fold_array_by_name","children":[],"call":[" collapse_content ","@options [] ","$stderr puts ","hash [] delete ","hash [] ","flag == ","hash [] []= ","hash [] [] ","hash []= "," normalise_space ","@options [] == ","value instance_of? ","x [] ","x has_key? ","x instance_of? ","array each ","Hash  new ","@options [] [] ","@options [] has_key? "," collapse_content  [] delete ","Hash  new  [] delete "," collapse_content  [] ","Hash  new  [] "," collapse_content  [] []= ","Hash  new  [] []= "," collapse_content  [] [] ","Hash  new  [] [] "," collapse_content  []= ","Hash  new  []= "," normalise_space  instance_of? ","x []  instance_of? "]}," XmlSimple fold_array":{"type":"method","name":"fold_array","children":[],"call":[" collapse_content ","@options [] ","hash []= ","x delete "," normalise_space ","@options [] == ","value instance_of? ","x [] ","x has_key? ","@options [] each ","x instance_of? ","array each ","Hash  new "," collapse_content  []= ","Hash  new  []= "," normalise_space  instance_of? ","x []  instance_of? "]}," XmlSimple fold_arrays":{"type":"method","name":"fold_arrays","children":[],"call":["hash []= "," fold_array_by_name "," fold_array ","keyattr instance_of? ","value instance_of? ","hash each ","@options [] ","@options []  instance_of? "]}," XmlSimple collapse_text_node":{"type":"method","name":"collapse_text_node","children":[],"call":[" merge ","@options [] ","@options [] ! ","element has_attributes? ","element has_attributes? ! "," empty "," node_to_text "]}," XmlSimple collapse":{"type":"method","name":"collapse","children":[],"call":["@options [] == ","@options [] ","@options has_key? ","result empty? ","result [] ","result [] instance_of? ","result has_key? ","count == ","result []= ","@options [] [] == ","@options [] [] ","value to_a [] ","value to_a ","value size == ","value size ","value instance_of? ","result each "," fold_arrays "," collapse_text_node ","element has_text? ","content [] ","content size == ","content size ","x to_s ","element texts map ","element texts "," has_mixed_content? "," merge ","child name ","element attributes empty? ","element attributes "," empty "," collapse ","element each_element ","element has_elements? "," normalise_space "," get_attributes "," merge  empty? "," get_attributes  empty? "," merge  [] "," get_attributes  [] "," merge  [] instance_of? "," get_attributes  [] instance_of? "," merge  has_key? "," get_attributes  has_key? "," fold_arrays  == "," merge  []= "," get_attributes  []= "," collapse  to_a [] "," collapse  to_a "," collapse  size == "," collapse  size "," collapse  instance_of? "," merge  each "," get_attributes  each ","content []  [] ","content []  size == ","content []  size "," has_mixed_content [] ? "]}," XmlSimple handle_options":{"type":"method","name":"handle_options","children":[],"call":["@options has_key? ","@options [] "," raise ","@options [] instance_of? ! ","@options [] instance_of? ","@options []= ","@options [] []= ","@options [] [] << ","@options [] [] ","@options [] [] instance_of? ","tag instance_of? ","force_list each ","force_list empty? ","value =~ ","@options [] each "," scalar ! "," scalar ","@options [] nil? ","@options has_key? ! ","@options [] =~ ","@options [] == ","@default_options [] ","@default_options has_key? ","known_options each ","@default_options nil? "," normalize_option_names ","KNOWN_OPTIONS  [] ","KNOWN_OPTIONS  has_key? ","@options instance_of? ","Hash  new "," normalize_option_names  has_key? "," normalize_option_names  [] "," normalize_option_names  [] instance_of? ! "," normalize_option_names  [] instance_of? "," normalize_option_names  []= "," normalize_option_names  [] []= "," normalize_option_names  [] [] << "," normalize_option_names  [] [] "," normalize_option_names  [] [] instance_of? ","@options []  each ","@options []  empty? "," normalize_option_names  [] each "," normalize_option_names  [] nil? "," normalize_option_names  has_key? ! "," normalize_option_names  [] =~ "," normalize_option_names  [] == ","KNOWN_OPTIONS  []  each "," normalize_option_names  instance_of? "]}," XmlSimple normalize_option_names":{"type":"method","name":"normalize_option_names","children":[],"call":["result []= "," raise ","known_options member? ! ","known_options member? ","lkey gsub! ","key downcase ","options each ","Hash  new ","options nil? ","Hash  new  []= ","key downcase  gsub! "]}," XmlSimple xml_out":{"type":"method","name":"xml_out","children":[],"call":["file write ","File  open ","@options [] ","@options [] write ","@options [] kind_of? ","@options has_key? ","@options [] + + ","@options [] + "," value_to_xml ","ref []= ","value to_s "," scalar ! "," scalar ","refsave each ","ref instance_of? ","@options [] == ","@options []= ","keys [] ","ref [] ","keys size == ","keys size ","ref keys "," handle_options "," value_to_@options [] + +  "," value_to_ value_to_xml  ","ref []  []= ","ref [] save each ","ref []  instance_of? ","ref keys  [] ","ref []  [] ","ref keys  size == ","ref keys  size ","ref []  keys ","ref ref keys  "]}," XmlSimple xml_in":{"type":"method","name":"xml_in","children":[],"call":[" put_into_cache "," merge ","@doc root name ","@doc root ","@options [] "," collapse "," raise ","string type "," parse ","string readlines to_s ","string readlines ","string kind_of? "," load_xml_file ","@@cache restore_mem_copy ","@@cache restore_mem_share ","@@cache restore_storable ","@options [] each ","@options has_key? "," find_xml_file ","$stdin readlines to_s ","$stdin readlines ","string == ","string =~ ","string instance_of? ","@options [] unshift ","directory nil? ","File  dirname ","string sub! ","File  basename ","string nil? "," handle_options "," parse  root name "," load_xml_file  root name "," parse  root "," load_xml_file  root ","File  basename  type ","File  basename  readlines to_s ","File  basename  readlines ","File  basename  kind_of? ","File  basename  == ","File  basename  =~ ","File  basename  instance_of? ","File  dirname  nil? ","File  basename  sub! ","File  basename  nil? "]}," XmlSimple initialize":{"type":"method","name":"initialize","children":[],"call":["Hash  new "," normalize_option_names ","KNOWN_OPTIONS  [] & ","KNOWN_OPTIONS  [] "," raise ","defaults instance_of? ","defaults nil? "]}," XmlSimple Cache get_from_memory_cache":{"type":"method","name":"get_from_memory_cache","children":[],"call":["cache [] [] ","cache [] ","cache [] [] > ","File  mtime to_i ","File  mtime "]}," XmlSimple Cache get_cache_filename":{"type":"method","name":"get_cache_filename","children":[],"call":["filename sub "]}," XmlSimple Cache restore_mem_copy":{"type":"method","name":"restore_mem_copy","children":[],"call":["Marshal  load ","data nil? "," get_from_memory_cache ","Marshal  load  nil? "," get_from_memory_cache  nil? "]}," XmlSimple Cache save_mem_copy":{"type":"method","name":"save_mem_copy","children":[],"call":["@mem_share_cache []= ","Marshal  dump ","Time  now to_i ","Time  now "]}," XmlSimple Cache restore_mem_share":{"type":"method","name":"restore_mem_share","children":[],"call":[" get_from_memory_cache "]}," XmlSimple Cache save_mem_share":{"type":"method","name":"save_mem_share","children":[],"call":["@mem_share_cache []= ","Time  now to_i ","Time  now "]}," XmlSimple Cache restore_storable":{"type":"method","name":"restore_storable","children":[],"call":["Marshal  load ","File  open ","File  mtime to_i > ","File  mtime to_i ","File  mtime ","File  exist? "," get_cache_filename "," get_ get_cache_filename name "]}," XmlSimple Cache save_storable":{"type":"method","name":"save_storable","children":[],"call":["Marshal  dump ","File  open "," get_cache_filename "," get_ get_cache_filename name "]}," XmlSimple Cache initialize":{"type":"method","name":"initialize","children":[],"call":[]}," HTML Tokenizer consume_quoted_regions":{"type":"method","name":"consume_quoted_regions","children":[],"call":["text << ","@scanner getch ","@scanner matched == ","@scanner matched ","@scanner scan_until ","delim == ","@scanner pos ","match chop "," loop ","(lvasgn :delim\n  (send\n    (ivar :@scanner) :matched)) == ","@scanner eos? ","@scanner @scanner scan_until ed == ","@scanner match chop ed == ","@scanner @scanner scan_until ed ","@scanner match chop ed ","@scanner matched  == ","@scanner scan_until  chop ","match chop  chop ","(lvasgn :delim\n  (send\n    (ivar :@scanner) :@scanner scan_until ed)) == ","(lvasgn :delim\n  (send\n    (ivar :@scanner) :match chop ed)) == ","(lvasgn :@scanner matched \n  (send\n    (ivar :@scanner) :matched)) == "]}," HTML Tokenizer update_current_line":{"type":"method","name":"update_current_line","children":[],"call":["text scan ","text scan length "]}," HTML Tokenizer scan_text":{"type":"method","name":"scan_text","children":[],"call":["@scanner scan ","@scanner getch "]}," HTML Tokenizer scan_tag":{"type":"method","name":"scan_tag","children":[],"call":["tag << "," consume_quoted_regions ","@scanner matched ","@scanner scan ","@scanner scan_until ","@scanner getch ","@scanner getch  << "]}," HTML Tokenizer next":{"type":"method","name":"next","children":[],"call":[" update_current_line "," scan_text "," scan_tag ","@scanner check ","@scanner pos ","@scanner eos? "]}," HTML Tokenizer initialize":{"type":"method","name":"initialize","children":[],"call":["StringScanner  new ","text encode! ","text encoding_aware? "]}," HTML Tag match_condition":{"type":"method","name":"match_condition","children":[],"call":["value nil? ","value nil? ! ","value == ","condition to_s ","value match ","value index "]}," HTML Tag ==":{"type":"method","name":"==","children":[],"call":[" attributes == ","node attributes "," attributes "," name == ","node name "," name "," closing == ","node closing "," closing "]}," HTML Tag match":{"type":"method","name":"match","children":[],"call":["s match ","conditions [] ","s != ","siblings [] detect ","siblings [] ","self_index + ","siblings detect ","siblings index "," parent children "," parent "," raise ","matches length > ","matches length ","matches length < ","value include? ","matches length != ","Integer  === ","key == ","opts each ","c match ","opts [] ","matches select ","c childless? ! ","c childless? ","c closing == ","c closing ","c kind_of? "," children select "," children ","child match "," children find "," throw ","p match ","p parent "," catch "," parent match "," match_condition "," [] ","(or\n  (send\n    (lvar :conditions) :[]\n    (sym :attributes))\n  (hash)) each "," validate_conditions "," children empty? "," validate_conditions  [] "," parent children  [] detect "," parent children  [] ","siblings index  + "," parent children  detect "," parent children  index "," p parent arent children "," p parent arent "," children  length > "," children  length "," children  length < "," children  length != ","conditions []  each ","op parent ts each ","conditions []  [] ","op parent ts [] "," children  select ","p parent  match ","p parent  p parent arent "," p parent arent match ","(or\n  (send\n    (lvar : validate_conditions ) :[]\n    (sym :attributes))\n  (hash)) each "," validate_ validate_conditions  "," children emp parent ty? "]}," HTML Tag tag?":{"type":"method","name":"tag?","children":[],"call":[]}," HTML Tag find":{"type":"method","name":"find","children":[],"call":[" match "]}," HTML Tag to_s":{"type":"method","name":"to_s","children":[],"call":["s << ","@children empty? ! ","@children empty? ","@closing != ","child to_s ","@children each ","@closing == ","v gsub ","String  === ","@attributes each "]}," HTML Tag childless?":{"type":"method","name":"childless?","children":[],"call":["@name =~ ","@closing nil? ! ","@closing nil? "]}," HTML Tag []":{"type":"method","name":"[]","children":[],"call":["@attributes [] "]}," HTML Tag initialize":{"type":"method","name":"initialize","children":[],"call":[]}," HTML Text ==":{"type":"method","name":"==","children":[],"call":[" content == ","node content "," content "]}," HTML Text match":{"type":"method","name":"match","children":[],"call":[" match ","conditions [] ","(send\n  (send\n    (lvar :conditions) :keys) :-\n  (array\n    (sym :content)\n    (sym :parent)\n    (sym :ancestor))) empty? ","conditions keys - ","conditions keys "," validate_conditions ","@content =~ ","@content index ","@content == "," validate_conditions  [] ","(send\n  (send\n    (lvar : validate_conditions ) :keys) :-\n  (array\n    (sym :content)\n    (sym :parent)\n    (sym :ancestor))) empty? "," validate_conditions  keys - "," validate_conditions  keys "," validate_ validate_conditions  "]}," HTML Text find":{"type":"method","name":"find","children":[],"call":[" match "]}," HTML Text to_s":{"type":"method","name":"to_s","children":[],"call":[]}," HTML Text initialize":{"type":"method","name":"initialize","children":[],"call":[]}," HTML Node parse":{"type":"method","name":"parse","children":[],"call":["Tag  new ","scanner terminate ","scanner skip_until "," raise ","attributes inspect ","scanner rest inspect ","scanner rest ","scanner scan ","scanner skip ","attributes []= ","attr downcase ","value << ","scanner getch ","name downcase! ","Text  new ","StringScanner  new ","content !~ ","CDATA  new ","scanner pre_match ","scanner scan_until ","scanner pre_match gsub ","scanner eos? ","StringScanner  new  terminate ","StringScanner  new  skip_until ","scanner scan ibutes inspect ","StringScanner  new  rest inspect ","StringScanner  new  rest ","StringScanner  new  scan ","StringScanner  new  skip ","scanner scan ibutes []= ","scanner scan  downcase ","scanner scan  << ","StringScanner  new  getch ","scanner scan  downcase! ","StringScanner  new  pre_match ","StringScanner  new  scan_until ","StringScanner  new  pre_match gsub ","StringScanner  new  eos? "]}," HTML Node ==":{"type":"method","name":"==","children":[],"call":[" children [] == ","node children [] ","node children "," children [] "," children "," children size times "," children size "," children size == ","node children size "," class == ","node class "," class "]}," HTML Node validate_conditions":{"type":"method","name":"validate_conditions","children":[],"call":["Conditions  new ","Conditions  === "]}," HTML Node tag?":{"type":"method","name":"tag?","children":[],"call":[]}," HTML Node find_all":{"type":"method","name":"find_all","children":[],"call":["matches concat ","child find_all ","@children each ","matches << "," match "," validate_conditions "," validate_ validate_conditions  "]}," HTML Node find":{"type":"method","name":"find","children":[],"call":["child find ","@children each "," validate_conditions "," validate_ validate_conditions  "]}," HTML Node match":{"type":"method","name":"match","children":[],"call":[]}," HTML Node to_s":{"type":"method","name":"to_s","children":[],"call":["s << ","child to_s ","@children each ","@children join "]}," HTML Node initialize":{"type":"method","name":"initialize","children":[],"call":[]}," HTML Conditions keys_to_symbols":{"type":"method","name":"keys_to_symbols","children":[],"call":["h []= ","hash [] ","k to_sym "," raise ","k inspect ","k respond_to? ","hash keys inject ","hash keys ","Hash  [] ","hash keys map "]}," HTML Conditions keys_to_strings":{"type":"method","name":"keys_to_strings","children":[],"call":["h []= ","hash [] ","k to_s ","hash keys inject ","hash keys ","Hash  [] ","hash keys map "]}," HTML Conditions initialize":{"type":"method","name":"initialize","children":[],"call":[" update "," raise ","v inspect ","k inspect ","v2 inspect ","v []= ","Conditions  new ","v each ","hash []= "," keys_to_symbols "," keys_to_strings ","hash each ","Hash  === ","value inspect ","key inspect "," keys_to_symbols  inspect "," keys_to_symbols 2 inspect "," keys_to_symbols  []= "," keys_to_symbols  each "," keys_to_symbols alue inspect "]}," HTML Document find_all":{"type":"method","name":"find_all","children":[],"call":["@root find_all "]}," HTML Document find":{"type":"method","name":"find","children":[],"call":["@root find "]}," HTML Document initialize":{"type":"method","name":"initialize","children":[],"call":["node_stack push ","node closing != ","node closing ","node childless? ! ","node childless? "," warn "," raise ","(str \"ignoring attempt to close \") strip ","text [] inspect ","text [] ","node_stack last attributes inspect ","node_stack last attributes ","node_stack last ","node line ","node position ","node_stack last line ","node_stack last position ","node name ","node_stack last name ","close_start < ","node position - ","open_start < ","node_stack last position - ","node_stack pop ","node_stack last name == ","node closing == ","node_stack length > ","node_stack length ","node tag? ","node_stack last children << ","node_stack last children ","Node  parse ","tokenizer position ","tokenizer line ","tokenizer next ","Node  new ","Tokenizer  new ","Text  new ","node_stack last children empty? ","Node  parse _stack push ","Node  parse  closing != ","Node  parse  closing ","Node  parse  childless? ! ","Node  parse  childless? ","Node  parse _stack last attributes inspect ","Node  parse _stack last attributes ","Node  parse _stack last ","Node  parse  line ","Node  parse  position ","Node  parse _stack last line ","Node  parse _stack last position ","Node  parse  name ","Node  parse _stack last name ","node position -  < ","Node  parse  position - ","node_stack last position -  < ","Node  parse _stack last position - ","Node  parse _stack pop ","Node  parse _stack last name == ","Node  parse  closing == ","Node  parse _stack length > ","Node  parse _stack length ","Node  parse  tag? ","Node  parse _stack last children << ","Node  parse _stack last children ","tokenizer next izer position ","Tokenizer  new  position ","tokenizer next izer line ","Tokenizer  new  line ","tokenizer next izer next ","Tokenizer  new  next ","Node  parse _stack last children empty? "]}," ActionController UploadProgress Progress reset_history":{"type":"method","name":"reset_history","children":[],"call":[]}," ActionController UploadProgress Progress stalled?":{"type":"method","name":"stalled?","children":[],"call":[]}," ActionController UploadProgress Progress started?":{"type":"method","name":"started?","children":[],"call":["@received_bytes > "]}," ActionController UploadProgress Progress finished?":{"type":"method","name":"finished?","children":[],"call":[" remaining_bytes <= "," remaining_bytes "]}," ActionController UploadProgress Progress remaining_seconds":{"type":"method","name":"remaining_seconds","children":[],"call":[" remaining_bytes / "," bitrate "," remaining_bytes "]}," ActionController UploadProgress Progress elapsed_seconds":{"type":"method","name":"elapsed_seconds","children":[],"call":[]}," ActionController UploadProgress Progress bitrate":{"type":"method","name":"bitrate","children":[],"call":["history_bytes / ","sum + ","vals inject ","@history transpose map ","@history transpose "]}," ActionController UploadProgress Progress update!":{"type":"method","name":"update!","children":[],"call":[" reset_history ","history_age > ","@history unshift ","@history pop ","@history size > ","@history size ","@history first [] ","@history first ","elapsed_seconds - ","@total_bytes - ","@received_bytes + > ","@received_bytes + ","@history first []  > ","history_elapsed_seconds -  > ","@total_@total_bytes -  - ","@received_@total_bytes -  + > ","@received_@total_bytes -  + "]}," ActionController UploadProgress Progress completed_percent":{"type":"method","name":"completed_percent","children":[],"call":["(send\n  (send\n    (ivar :@received_bytes) :*\n    (int 100)) :/\n  (ivar :@total_bytes)) to_i ","@received_bytes * / ","@received_bytes * "]}," ActionController UploadProgress Progress remaining_bytes":{"type":"method","name":"remaining_bytes","children":[],"call":["@total_bytes - "]}," ActionController UploadProgress Progress reset!":{"type":"method","name":"reset!","children":[],"call":[" reset_history "]}," ActionController UploadProgress Progress initialize":{"type":"method","name":"initialize","children":[],"call":[" reset! "]}," ActionController UploadProgress upload_progress":{"type":"method","name":"upload_progress","children":[],"call":["UploadProgress Progress  new "," session [] [] "," session [] "," session "," current_upload_id "]}," ActionController UploadProgress current_upload_id":{"type":"method","name":"current_upload_id","children":[],"call":[" last_upload_id "," params [] "," params "]}," ActionController UploadProgress last_upload_id":{"type":"method","name":"last_upload_id","children":[],"call":["(or\n  (send\n    (send\n      (block\n        (send\n          (send\n            (begin\n              (or\n                (send\n                  (send nil :session) :[]\n                  (sym :uploads))\n                (hash))) :keys) :map)\n        (args\n          (arg :k))\n        (send\n          (lvar :k) :to_i)) :sort) :last)\n  (int 0)) to_s ","(send\n  (send\n    (begin\n      (or\n        (send\n          (send nil :session) :[]\n          (sym :uploads))\n        (hash))) :keys) :map) sort last ","(send\n  (send\n    (begin\n      (or\n        (send\n          (send nil :session) :[]\n          (sym :uploads))\n        (hash))) :keys) :map) sort ","k to_i ","(or\n  (send\n    (send nil :session) :[]\n    (sym :uploads))\n  (hash)) keys map ","(or\n  (send\n    (send nil :session) :[]\n    (sym :uploads))\n  (hash)) keys "," session [] "," session "]}," ActionController UploadProgress next_upload_id":{"type":"method","name":"next_upload_id","children":[],"call":[" last_upload_id succ "," last_upload_id "]}," ActionController UploadProgress finish_upload_status":{"type":"method","name":"finish_upload_status","children":[],"call":[" render ","template << ","location to_s inspect ","location to_s ","client_js_argument inspect "," erase_redirect_results "," erase_render_results "," params [] "," params ","@rendered_finish_upload_status ! "]}," ActionController UploadProgress ClassMethods upload_status_for":{"type":"method","name":"upload_status_for","children":[],"call":[" render "," define_method ","actions last [] ","actions last ","actions last is_a? "," after_filter "]}," ActionController UploadProgress append_features":{"type":"method","name":"append_features","children":[],"call":[]}," Test Unit TestCase with_routing":{"type":"method","name":"with_routing","children":[],"call":["ActionController Routing  const_set ","ActionController Routing  send ","ActionController Routing  const_defined? ","ActionController Routing RouteSet  new "]}," Test Unit TestCase method_missing":{"type":"method","name":"method_missing","children":[],"call":["@controller send ","ActionController Routing NamedRoutes Helpers  include? "]}," Test Unit TestCase find_all_tag":{"type":"method","name":"find_all_tag","children":[],"call":[" html_document find_all "," html_document "]}," Test Unit TestCase find_tag":{"type":"method","name":"find_tag","children":[],"call":[" html_document find "," html_document "]}," Test Unit TestCase html_document":{"type":"method","name":"html_document","children":[],"call":["HTML Document  new ","@response body "," require_html_scanner "]}," Test Unit TestCase build_request_uri":{"type":"method","name":"build_request_uri","children":[],"call":["@request set_REQUEST_URI ","url rewrite ","ActionController UrlRewriter  new ","options update ","@controller send ","@request env [] ","@request env ","(or\n  (lvar :parameters)\n  (hash)) update ","ActionController UrlRewriter  new  rewrite ","@controller send  update "]}," Test Unit TestCase redirect_to_url":{"type":"method","name":"redirect_to_url","children":[],"call":["@response redirect_url "]}," Test Unit TestCase cookies":{"type":"method","name":"cookies","children":[],"call":["@response cookies "]}," Test Unit TestCase flash":{"type":"method","name":"flash","children":[],"call":["@response flash "]}," Test Unit TestCase session":{"type":"method","name":"session","children":[],"call":["@response session "]}," Test Unit TestCase assigns":{"type":"method","name":"assigns","children":[],"call":["@response template assigns [] ","key to_s ","@response template assigns ","@response template ","key nil? ","name to_s "]}," Test Unit TestCase follow_redirect":{"type":"method","name":"follow_redirect","children":[],"call":[" get ","@response redirected_to stringify_keys ","@response redirected_to ","@response redirected_to delete "," raise ","@response redirected_to [] "]}," Test Unit TestCase xml_http_request":{"type":"method","name":"xml_http_request","children":[],"call":["@request env delete ","@request env "," returning "," send ","@request env []= "]}," ActionController TestResponse binary_content":{"type":"method","name":"binary_content","children":[],"call":["sio read ","sio rewind "," body call "," body ","StringIO  new "," require "," raise "," body inspect "," body kind_of? ","StringIO  new  read ","StringIO  new  rewind "]}," ActionController TestResponse cookies":{"type":"method","name":"cookies","children":[],"call":["hash []= ","cookie name "," headers [] inject "," headers [] "," headers "]}," ActionController TestResponse error?":{"type":"method","name":"error?","children":[],"call":["(irange\n  (int 500)\n  (int 599)) include? "," response_code "]}," ActionController TestResponse message":{"type":"method","name":"message","children":[],"call":[" headers [] to_s split [] "," headers [] to_s split "," headers [] to_s "," headers [] "," headers "]}," ActionController TestResponse code":{"type":"method","name":"code","children":[],"call":[" headers [] to_s split [] "," headers [] to_s split "," headers [] to_s "," headers [] "," headers "]}," ActionController TestRequest recycle!":{"type":"method","name":"recycle!","children":[],"call":[" path_parameters= "," query_parameters= "," request_parameters= "," unmemoize_all ","@env []= ","k =~ ","@env delete_if ","@env delete ","@cookies blank? "," write_cookies! "," cookie_jar recycle! "," cookie_jar "," cookie_jar update "," cookies "," rack_cookies ","deleted_cookies include? ","@set_cookies reject! "," cookie_jar instance_variable_get ","@set_cookies update ","Hash  [] ","o [] "," cookie_jar instance_variable_get map "," cookie_jar instance_variable_get  include? "]}," ActionController TestRequest assign_parameters":{"type":"method","name":"assign_parameters","children":[],"call":[" path_parameters []= ","key to_s "," path_parameters ","non_path_parameters []= ","extra_keys include? ","key to_sym ","ActionController Routing PathComponent Result  new ","value is_a? ","value to_s ","parameters each "," request_parameters "," query_parameters "," get? ","ActionController Routing Routes  extra_keys ","parameters symbolize_keys merge ","parameters symbolize_keys ","ActionController Routing PathSegment Result  new "," raw_post ","@env []= ","StringIO  new ","data length to_s ","data length ","params to_query ","params delete ","k to_sym ","(str \"controller\") each "," request_parameters dup ","@env delete ","Result  new ","routes extra_keys ","value dup ","v dup ","v is_a? ","value map ","value to_param ","value duplicable? ","value frozen? ","Hash  [] ","v duplicable? ","v frozen? ","value any? "," path_parameters= ","path_parameters []= "," set_header "," fetch_header ","non_path_parameters to_query ","@custom_param_parsers []= "," lambda "," content_mime_type symbol "," content_mime_type ","non_path_parameters to_xml ","ActiveSupport JSON  encode "," raise "," content_type "," content_mime_type to_sym ","ENCODER  build_multipart "," content_type= ","ENCODER  content_type ","ENCODER  should_multipart? "," query_string= "," query_string blank? "," query_string ","query_string_keys include? ","data_stream length to_s ","data_stream length "," fullpath "," path_parameters symbolize_keys merge  []= "," path_parameters symbolize_keys merge  "," request_parameters  []= "," query_parameters  []= ","non_path_parameters symbolize_keys merge  []= ","ActionController Routing Routes  extra_keys  include? ","routes extra_keys  include? ","ActionController Routing PathComponent Result  new  is_a? ","value to_s  is_a? ","ActionController Routing PathSegment Result  new  is_a? ","Result  new  is_a? ","value dup  is_a? ","value to_param  is_a? ","Hash  []  is_a? ","value map  is_a? ","ActionController Routing PathComponent Result  new  to_s ","value to_s  to_s ","ActionController Routing PathSegment Result  new  to_s ","Result  new  to_s ","value dup  to_s ","value to_param  to_s ","Hash  []  to_s ","value map  to_s ","parameters symbolize_keys merge  each "," request_parameters symbolize_keys merge  "," query_parameters symbolize_keys merge  ","ActionController Routing Routes  ActionController Routing Routes  extra_keys  ","ActionController Routing Routes  routes extra_keys  ","parameters symbolize_keys merge  symbolize_keys merge ","parameters symbolize_keys merge  symbolize_keys ","params to_query  length to_s ","non_path_parameters to_query  length to_s ","non_path_parameters to_xml  length to_s ","ActiveSupport JSON  encode  length to_s ","ENCODER  build_multipart  length to_s ","params to_query  length ","non_path_parameters to_query  length ","non_path_parameters to_xml  length ","ActiveSupport JSON  encode  length ","ENCODER  build_multipart  length "," request_parameters dup  to_query "," request_parameters dup  delete "," request_parameters symbolize_keys merge  dup ","routes ActionController Routing Routes  extra_keys  ","routes routes extra_keys  ","ActionController Routing PathComponent Result  new  dup ","value to_s  dup ","ActionController Routing PathSegment Result  new  dup ","Result  new  dup ","value dup  dup ","value to_param  dup ","Hash  []  dup ","value map  dup ","ActionController Routing PathComponent Result  new  map ","value to_s  map ","ActionController Routing PathSegment Result  new  map ","Result  new  map ","value dup  map ","value to_param  map ","Hash  []  map ","value map  map ","ActionController Routing PathComponent Result  new  to_param ","value to_s  to_param ","ActionController Routing PathSegment Result  new  to_param ","Result  new  to_param ","value dup  to_param ","value to_param  to_param ","Hash  []  to_param ","value map  to_param ","ActionController Routing PathComponent Result  new  duplicable? ","value to_s  duplicable? ","ActionController Routing PathSegment Result  new  duplicable? ","Result  new  duplicable? ","value dup  duplicable? ","value to_param  duplicable? ","Hash  []  duplicable? ","value map  duplicable? ","ActionController Routing PathComponent Result  new  frozen? ","value to_s  frozen? ","ActionController Routing PathSegment Result  new  frozen? ","Result  new  frozen? ","value dup  frozen? ","value to_param  frozen? ","Hash  []  frozen? ","value map  frozen? ","ActionController Routing PathComponent Result  new  any? ","value to_s  any? ","ActionController Routing PathSegment Result  new  any? ","Result  new  any? ","value dup  any? ","value to_param  any? ","Hash  []  any? ","value map  any? "," path_parameters symbolize_keys merge = ","path_parameters symbolize_keys merge  []= "," request_parameters  to_query "," query_parameters  to_query ","non_path_parameters symbolize_keys merge  to_query "," request_parameters  to_xml "," query_parameters  to_xml ","non_path_parameters symbolize_keys merge  to_xml ","params to_query _stream length to_s ","non_path_parameters to_query _stream length to_s ","non_path_parameters to_xml _stream length to_s ","ActiveSupport JSON  encode _stream length to_s ","ENCODER  build_multipart _stream length to_s ","StringIO  new  length to_s ","params to_query _stream length ","non_path_parameters to_query _stream length ","non_path_parameters to_xml _stream length ","ActiveSupport JSON  encode _stream length ","ENCODER  build_multipart _stream length ","StringIO  new  length "]}," ActionController TestRequest path":{"type":"method","name":"path","children":[],"call":[]}," ActionController TestRequest request_uri":{"type":"method","name":"request_uri","children":[],"call":[]}," ActionController TestRequest remote_addr":{"type":"method","name":"remote_addr","children":[],"call":["@env [] "]}," ActionController TestRequest remote_addr=":{"type":"method","name":"remote_addr=","children":[],"call":["@env []= "]}," ActionController TestRequest set_REQUEST_URI":{"type":"method","name":"set_REQUEST_URI","children":[],"call":["@env []= "," path "," request_uri "]}," ActionController Base process_with_test":{"type":"method","name":"process_with_test","children":[],"call":[" add_variables_to_assigns "," returning "," process_without_test "," response template assigns []= ","var [] "," response template assigns "," response template "," response ","@assigns []= "," instance_variable_get ","(send\n  (send nil :instance_variable_names) :-\n  (cvar :@@protected_instance_variables)) each "," instance_variable_names - "," instance_variable_names "]}," ActionController Streaming send_file_headers!":{"type":"method","name":"send_file_headers!","children":[],"call":["@headers []= ","@headers [] == ","@headers [] ","@headers update ","options [] strip ","options [] ","options [] dup "," raise ","options [] nil? ","(sym :length) each ","options update ","DEFAULT_SEND_FILE_OPTIONS  merge "," headers []= "," headers "," headers [] == "," headers [] "," headers update ","options [] to_s strip ","options [] to_s "," headers merge! ","content_type to_s strip ","content_type to_s ","Mime Type  lookup_by_extension ","Mime EXTENSION_LOOKUP  has_key? ","content_type is_a? "," response cache_control [] "," response cache_control "," response "," response sending_file= "," content_type= ","Mime  [] ","ActiveSupport Deprecation  warn "," caller ","options key? ","(sym :type) each ","Mime EXTENSION_LOOKUP  key? ","content_type to_s strip  to_s strip ","Mime Type  lookup_by_extension  to_s strip ","options []  to_s strip ","content_type to_s strip  to_s ","Mime Type  lookup_by_extension  to_s ","options []  to_s ","Mime Type  lookup_by_Mime  []  ","content_type to_s strip  is_a? ","Mime Type  lookup_by_extension  is_a? ","options []  is_a? "," content_type to_s strip = "," Mime Type  lookup_by_extension = "," options [] = "]}," ActionController Streaming send_data":{"type":"method","name":"send_data","children":[],"call":[" render "," send_file_headers! ","options merge ","data size "," logger info ","options [] "," logger "," logger nil? ","data bytesize ","options slice merge ","options slice ","options dup "]}," ActionController Streaming send_file":{"type":"method","name":"send_file","children":[],"call":[" render ","file read ","File  open "," logger info "," logger "," logger nil? ","output write ","output syswrite ","file sysread ","output respond_to? ","options [] ","Proc  new "," send_file_headers! ","File  basename ","File  size "," raise ","File  readable? ","File  file? ","$stdout write ","$stdout syswrite ","$stdout respond_to? "," head "," response_body= "," content_type= ","options key? "," status= ","ActiveSupport Deprecation  warn "," caller "]}," ActionController SessionManagement clear_persistant_model_associations":{"type":"method","name":"clear_persistant_model_associations","children":[],"call":["obj clear_association_cache ","obj respond_to? ","session each ","@session instance_variable_get ","@session instance_variable_get  each ","@@session instance_variable_get  instance_variable_get "]}," ActionController SessionManagement process_with_session_management_support":{"type":"method","name":"process_with_session_management_support","children":[],"call":[" process_without_session_management_support ","request session_options= "," class session_options_for "," class ","request parameters [] ","request parameters "," set_session_options "]}," ActionController SessionManagement ClassMethods session_options_for":{"type":"method","name":"session_options_for","children":[],"call":["options [] ","options delete ","options empty? ","options merge! ","opts [] ! ","opts [] ","opts [] include? ! ","opts [] include? ","opts [] call ! ","opts [] call ","session_options each ","action to_s ","(lvasgn :session_options\n  (send nil :cached_session_options)) empty? "," cached_session_options "," cached_session_options  each ","action to_s  to_s ","(lvasgn : cached_session_options \n  (send nil :cached_ cached_session_options )) empty? "," cached_ cached_session_options  "]}," ActionController SessionManagement ClassMethods cached_session_options":{"type":"method","name":"cached_session_options","children":[],"call":[" read_inheritable_attribute "]}," ActionController SessionManagement ClassMethods session":{"type":"method","name":"session","children":[],"call":[" write_inheritable_array "," raise ","options [] ","options []= ","o to_s ","(splat\n  (send\n    (lvar :options) :[]\n    (sym :except))) map ","(splat\n  (send\n    (lvar :options) :[]\n    (sym :only))) map ","args empty? ! ","args empty? ","args pop ","Hash  === ","args last ","args extract_options! ","args delete ","ActiveSupport Deprecation  warn "," caller ","Disabling sessions for a single controller has been deprecated.  + + + ","Disabling sessions for a single controller has been deprecated.  + + ","Disabling sessions for a single controller has been deprecated.  + ","args pop  [] ","args extract_options!  [] ","args pop  []= ","args extract_options!  []= ","(splat\n  (send\n    (lvar :args pop ) :[]\n    (sym :except))) map ","(splat\n  (send\n    (lvar :args extract_options! ) :[]\n    (sym :except))) map ","(splat\n  (send\n    (lvar :args pop ) :[]\n    (sym :only))) map ","(splat\n  (send\n    (lvar :args extract_options! ) :[]\n    (sym :only))) map ","args extract_args pop ! ","args extract_args extract_options! ! "]}," ActionController SessionManagement ClassMethods session_options":{"type":"method","name":"session_options","children":[],"call":[]}," ActionController SessionManagement ClassMethods session_store":{"type":"method","name":"session_store","children":[],"call":["ActionController CgiRequest DEFAULT_SESSION_OPTIONS  [] "]}," ActionController SessionManagement ClassMethods session_store=":{"type":"method","name":"session_store=","children":[],"call":["ActionController CgiRequest DEFAULT_SESSION_OPTIONS  []= ","CGI Session  const_get ","store to_s camelize ","store to_s ","store == ","store is_a? ","Session  const_get "," session_store= ","ActionDispatch Session  const_get "]}," ActionController SessionManagement append_features":{"type":"method","name":"append_features","children":[],"call":[]}," CGI Session MemCacheStore delete":{"type":"method","name":"delete","children":[],"call":["@cache delete "]}," CGI Session MemCacheStore close":{"type":"method","name":"close","children":[],"call":[" update "]}," CGI Session MemCacheStore update":{"type":"method","name":"update","children":[],"call":["@cache []= "]}," CGI Session MemCacheStore restore":{"type":"method","name":"restore","children":[],"call":["@cache [] "]}," CGI Session MemCacheStore initialize":{"type":"method","name":"initialize","children":[],"call":["MemCache  new ","options [] "," raise ","session_id '%s' is invalid % "," check_id ","session session_id ","session_session session_id  '%s' is invalsession session_id  % "," check_session session_id  ","session session_session session_id  "]}," CGI Session MemCacheStore check_id":{"type":"method","name":"check_id","children":[],"call":["id to_s "]}," delete":{"type":"method","name":"delete","children":[],"call":["@mutex synchronize "]}," []":{"type":"method","name":"[]","children":[],"call":["@mutex synchronize "]}," []=":{"type":"method","name":"[]=","children":[],"call":["@mutex synchronize "]}," CGI Session ActiveRecordStore SqlBypass destroy":{"type":"method","name":"destroy","children":[],"call":["@@connection delete ","@@connection quote "," session_id ","@@connection quote_column_name "]}," CGI Session ActiveRecordStore SqlBypass save":{"type":"method","name":"save","children":[],"call":["@@connection update ","@@connection quote "," session_id ","@@connection quote_column_name ","old_fingerprint != "," class fingerprint "," class "," class marshal "," data "," loaded? ! "," loaded? "]}," CGI Session ActiveRecordStore SqlBypass data":{"type":"method","name":"data","children":[],"call":[" class unmarshal "," class "," class fingerprint "]}," CGI Session ActiveRecordStore SqlBypass new_record?":{"type":"method","name":"new_record?","children":[],"call":[]}," CGI Session ActiveRecordStore SqlBypass initialize":{"type":"method","name":"initialize","children":[],"call":["@marshaled_data nil? ","attributes [] "]}," CGI Session ActiveRecordStore SqlBypass drop_table!":{"type":"method","name":"drop_table!","children":[],"call":["@@connection execute "," table_name "]}," CGI Session ActiveRecordStore SqlBypass create_table!":{"type":"method","name":"create_table!","children":[],"call":["@@connection execute ","@@connection quote_column_name "," data_column "," session_id_column "," table_name "]}," CGI Session ActiveRecordStore SqlBypass fingerprint":{"type":"method","name":"fingerprint","children":[],"call":["Digest MD5  hexdigest "]}," CGI Session ActiveRecordStore SqlBypass unmarshal":{"type":"method","name":"unmarshal","children":[],"call":["Marshal  load ","Base64  decode64 ","ActiveSupport Base64  decode64 "]}," CGI Session ActiveRecordStore SqlBypass marshal":{"type":"method","name":"marshal","children":[],"call":["Base64  encode64 ","Marshal  dump ","ActiveSupport Base64  encode64 "]}," CGI Session ActiveRecordStore SqlBypass find_by_session_id":{"type":"method","name":"find_by_session_id","children":[],"call":[" new ","record [] ","@@connection select_one ","@@connection quote ","@@connection select_one  [] "]}," CGI Session ActiveRecordStore SqlBypass connection":{"type":"method","name":"connection","children":[],"call":["ActiveRecord Base  connection "]}," CGI Session ActiveRecordStore Session ensure_data_not_too_big":{"type":"method","name":"ensure_data_not_too_big","children":[],"call":[" raise "," read_attribute size > "," read_attribute size "," read_attribute "," class data_column_size_limit "," class "," class data_column_size_ class data_column_size_limit  "]}," CGI Session ActiveRecordStore Session data_changed?":{"type":"method","name":"data_changed?","children":[],"call":["old_fingerprint != "," class fingerprint "," read_attribute "," class "]}," CGI Session ActiveRecordStore Session marshal_data!":{"type":"method","name":"marshal_data!","children":[],"call":[" write_attribute "," class marshal "," class "," data "," loaded? ! "," loaded? "]}," CGI Session ActiveRecordStore Session data":{"type":"method","name":"data","children":[],"call":[" class unmarshal "," class "," class fingerprint "," read_attribute "]}," CGI Session ActiveRecordStore Session setup_sessid_compatibility!":{"type":"method","name":"setup_sessid_compatibility!","children":[{"type":"method","name":"find_by_session_id","children":[],"asgn":[],"call":[]},{"type":"method","name":"find_by_session_id","children":[],"asgn":[],"call":[]}],"call":[" find "," attribute_condition "," sessid= "," define_method "," sessid "," find_by_sessid "," columns_hash [] "," columns_hash "," reset_column_information "]}," CGI Session ActiveRecordStore Session drop_table!":{"type":"method","name":"drop_table!","children":[],"call":[" connection execute "," table_name "," connection "]}," CGI Session ActiveRecordStore Session create_table!":{"type":"method","name":"create_table!","children":[],"call":[" connection execute "," connection quote_column_name "," connection "," table_name "]}," CGI Session ActiveRecordStore Session fingerprint":{"type":"method","name":"fingerprint","children":[],"call":["Digest MD5  hexdigest "]}," CGI Session ActiveRecordStore Session unmarshal":{"type":"method","name":"unmarshal","children":[],"call":["Marshal  load ","Base64  decode64 ","ActiveSupport Base64  decode64 "]}," CGI Session ActiveRecordStore Session marshal":{"type":"method","name":"marshal","children":[],"call":["Base64  encode64 ","Marshal  dump ","ActiveSupport Base64  encode64 "]}," CGI Session ActiveRecordStore Session find_by_session_id":{"type":"method","name":"find_by_session_id","children":[],"call":[" find_by_session_id "," setup_sessid_compatibility! "]}," CGI Session ActiveRecordStore Session data_column_size_limit":{"type":"method","name":"data_column_size_limit","children":[],"call":[" columns_hash [] limit "," columns_hash [] "," columns_hash "]}," CGI Session ActiveRecordStore Session reloadable?":{"type":"method","name":"reloadable?","children":[],"call":[]}," ActionController Routing NamedRoutes install":{"type":"method","name":"install","children":[],"call":["cls send ","Helpers  each ","cls respond_to? "]}," ActionController Routing NamedRoutes name_route":{"type":"method","name":"name_route","children":[],"call":["Helpers  uniq! ","Helpers  << "," hash_access_name to_sym "," hash_access_name "," url_helper_name to_sym "," url_helper_name "," protected "," module_eval "," define_hash_access_method "," define_method ","hash []= ","hash [] ","route known symbolize_keys ","route known ","route defaults merge symbolize_keys ","route defaults merge ","route defaults "," route known symbolize_keys _access_name to_sym "," route defaults merge symbolize_keys _access_name to_sym "," route known symbolize_keys _access_name "," route defaults merge symbolize_keys _access_name "," define_route known symbolize_keys _access_method "," define_route defaults merge symbolize_keys _access_method ","route known symbolize_keys  []= ","route defaults merge symbolize_keys  []= ","route known symbolize_keys  [] ","route defaults merge symbolize_keys  [] "]}," ActionController Routing NamedRoutes define_hash_access_method":{"type":"method","name":"define_hash_access_method","children":[],"call":["hash merge ","args first "," define_method "," hash_access_name "," known_hash_for_route "," known_hash_for_route  merge ","  known_hash_for_route _access_name "," known_ known_hash_for_route _for_route "]}," ActionController Routing NamedRoutes known_hash_for_route":{"type":"method","name":"known_hash_for_route","children":[],"call":["hash []= ","hash [] ","key to_sym ","route defaults each ","route defaults ","route known symbolize_keys ","route known ","route known symbolize_keys  []= ","route known symbolize_keys  [] "]}," ActionController Routing NamedRoutes url_helper_name":{"type":"method","name":"url_helper_name","children":[],"call":[]}," ActionController Routing NamedRoutes hash_access_name":{"type":"method","name":"hash_access_name","children":[],"call":[]}," ActionController Routing NamedRoutes clear":{"type":"method","name":"clear","children":[],"call":["Helpers  clear "]}," ActionController Routing RouteSet extra_keys":{"type":"method","name":"extra_keys","children":[],"call":[" generate last "," generate ","options dup "," generate_extras last "," generate_extras "," generate last keys "]}," ActionController Routing RouteSet method_missing":{"type":"method","name":"method_missing","children":[],"call":[" named_route ","(irange\n  (int 1)\n  (int 2)) include? ","args length ","NamedRoutes  name_route "," connect "," named_ connect  ","NamedRoutes  name_ connect  "]}," ActionController Routing RouteSet named_route":{"type":"method","name":"named_route","children":[],"call":["NamedRoutes  name_route "," connect ","NamedRoutes  name_ connect  "]}," ActionController Routing RouteSet each":{"type":"method","name":"each","children":[],"call":["@routes each "]}," ActionController Routing RouteSet empty?":{"type":"method","name":"empty?","children":[],"call":["@routes empty? "," routes empty? "," routes "]}," ActionController Routing RouteSet draw":{"type":"method","name":"draw","children":[],"call":[" write_recognition "," write_generation "," raise "," named_routes install "," named_routes ","Mapper  new "," clear! ","@routes clear "," install_helpers "]}," ActionController Routing RouteSet connect":{"type":"method","name":"connect","children":[],"call":["@routes << ","Route  new "]}," ActionController Routing RouteSet reload":{"type":"method","name":"reload","children":[],"call":["NamedRoutes  install "," connect "," load ","File  join ","NamedRoutes  clear ","@routes empty? "," raise ","e message "," require_dependency ","RoutingError  new copy_blame! ","RoutingError  new "," load! ","mtime == ","File  stat mtime ","File  stat "," configuration_file "," routes_changed_at "," routes_changed_at == "," configuration_files any? "," configuration_files ","File  stat mtime  == ","File  stat File  stat mtime  "]}," ActionController Routing RouteSet known_controllers":{"type":"method","name":"known_controllers","children":[],"call":["(send\n  (ivar :@routes) :inject\n  (array)) uniq ","known << ","controller =~ ","controller source scan select ","controller source scan ","controller source ","controller is_a? ","route known [] ","route known ","@routes inject ","route known []  =~ ","route known []  source scan select ","route known []  source scan ","route known []  source ","route known []  is_a? "]}," ActionController Routing RouteSet categorize_routes":{"type":"method","name":"categorize_routes","children":[],"call":["set << ","route matches_controller? "," each ","by_controller []= "," known_controllers each "," known_controllers ","Hash  new ","by_controller []=  << ","Hash  new  []= "]}," ActionController Routing RouteSet generation_code_for":{"type":"method","name":"generation_code_for","children":[],"call":["g << ","g if ","g source lines last << ","g source lines last ","g source lines ","g source ","route write_generation ","gp << ","g dup ","index zero? ","g source indent ","routes each_with_index ","g def ","CodeGeneration GenerationGenerator  new "," instance_variable_set ","route keys ","routes collect "," instance_variable_get ","@ + "," instance_variable_get  each_with_index "," instance_variable_get  collect "]}," ActionController Routing RouteSet write_recognition":{"type":"method","name":"write_recognition","children":[],"call":["g to_s "," eval ","route write_recognition ","g << "," each ","g def ","g finish_statement= ","Proc  new ","CodeGeneration RecognitionGenerator  new "]}," ActionController Routing RouteSet recognition_failed":{"type":"method","name":"recognition_failed","children":[],"call":[" raise ","request path inspect ","request path "]}," ActionController Routing RouteSet recognize":{"type":"method","name":"recognize","children":[],"call":["controller new ","request path_parameters= ","hash []= ","controller controller_path ","hash [] "," recognition_failed "," recognize_path ","path shift ","string_path split ","string_path chomp! ","string_path [] == ","string_path [] ","request path ","(begin\n  (send\n    (send\n      (lvar :params) :[]\n      (sym :controller)) :camelize)) constantize ","params [] camelize ","params [] ","params with_indifferent_access "," extract_request_environment ","(begin\n  (send\n    (send\n      (send\n        (lvar :params) :[]\n        (sym :controller)) :to_s) :camelize)) constantize ","params [] to_s camelize ","params [] to_s ","hash []  new ","request string_path split _parameters= "," recognize_path  []= ","hash []  hash [] _path ","controller controller_string_path split  "," recognize_path  [] "," recognize_string_path split  ","string_path split  shift ","string_string_path split  split ","request path  split ","string_string_path split  chomp! ","request path  chomp! ","string_string_path split  [] == ","request path  [] == ","string_string_path split  [] ","request path  [] ","request string_path split  ","(begin\n  (send\n    (send\n      (lvar :params) :[]\n      (sym :hash [] )) :camelize)) constantize ","(begin\n  (send\n    (send\n      (lvar : recognize_path ) :[]\n      (sym :controller)) :camelize)) constantize "," recognize_path  [] camelize "," recognize_path  with_indifferent_access ","(begin\n  (send\n    (send\n      (send\n        (lvar :params) :[]\n        (sym :hash [] )) :to_s) :camelize)) constantize ","(begin\n  (send\n    (send\n      (send\n        (lvar : recognize_path ) :[]\n        (sym :controller)) :to_s) :camelize)) constantize "," recognize_path  [] to_s camelize "," recognize_path  [] to_s "]}," ActionController Routing RouteSet write_generation":{"type":"method","name":"write_generation","children":[],"call":["method_sources << "," eval "," generation_code_for to_s "," generation_code_for ","@generation_methods []= ","controller to_sym ","controller to_s "," instance_variable_set ","(str \"generate_path_for_\") to_sym ","controller gsub ","routes length < ","@routes length ","routes length "," categorize_routes each "," categorize_routes ","Hash  new "," generation_ generation_code_for to_s _for to_s "," generation_ generation_code_for to_s _for ","Hash  new  []= "]}," ActionController Routing RouteSet generate_default_path":{"type":"method","name":"generate_default_path","children":[],"call":[" generate_default_path "," write_generation "]}," ActionController Routing RouteSet generate_path":{"type":"method","name":"generate_path","children":[],"call":[" send ","@generation_methods [] ","merged [] "]}," ActionController Routing RouteSet generate":{"type":"method","name":"generate","children":[],"call":[" generate_path ","Routing  expiry_hash ","merged delete ","keys_to_delete each ","recall merge ","Routing  treat_hash ","recall dup ","options empty? ","options []= ","Routing  controller_relative_to ","controller [] == ","controller [] ","controller include? ","recall_controller include? ","recall [] ","options [] ","request_or_recall_hash symbolized_path_parameters ","request_or_recall_hash is_a? "," raise ","options inspect ","results first ","results is_a? ! ","results is_a? ","route send ","routes each "," routes_by_controller [] [] [] ","x object_id ","options keys sort_by ","options keys "," routes_by_controller [] [] "," routes_by_controller [] "," routes_by_controller ","merged [] ","named_route requirements diff inspect ","named_route requirements diff ","named_route requirements ","named_route requirements inspect ","path nil? ","named_route generate ","options [] [] ","options [] [] == ","parts join ","old_parts [] + ","old_parts [] ","(send\n  (send\n    (lvar :new_parts) :length) :+\n  (int 1)) -@ ","new_parts length + ","new_parts length ","options [] split ","recall [] split ","options [] [] != ","expire_on [] ","named_route ! "," build_expiry "," options_as_params ","named_route parameter_shell merge ","named_route parameter_shell "," named_routes [] "," named_routes ","options delete "," raise_named_route_error ","options [] to_s ","RoutingError  new ","defaults inspect ","selected [] ","selected nil? ","failures << ","selected first ","unused length < ","selected last length ","selected last ","unused length ","unused empty? ","ActionController Base  debug_routes ","route generate "," each ","options [] nil? ","options key? ","defaults delete_if "," expand_controller_path! ","defaults clone ","request path_parameters symbolize_keys ","request path_parameters ","options symbolize_keys ","@routes empty? ","extras []= ","keys each ","route send! ","(send\n  (send nil :routes) :collect) compact "," routes collect "," routes ","route __send__ ","routes each_with_index ","Routing  generate_best_match ","(send\n  (lvar :options) :reject) keys sort_by ","(send\n  (lvar :options) :reject) keys ","v ! ","options reject "," generate_named_route generate  ","recall merge  delete ","request_or_recall_hash symbolized_path_parameters  merge ","request_or_recall_hash symbolized_path_parameters  dup ","recall dup  empty? "," options_as_params  empty? ","named_route parameter_shell merge  empty? ","defaults clone  empty? ","options symbolize_keys  empty? ","recall dup  []= "," options_as_params  []= ","named_route parameter_shell merge  []= ","defaults clone  []= ","options symbolize_keys  []= ","Routing  options [] _relative_to ","Routing  merged [] _relative_to ","options []  [] == ","merged []  [] == ","options []  [] ","merged []  [] ","options []  include? ","merged []  include? ","recall []  include? ","recall_options []  include? ","recall_merged []  include? ","request_or_recall_hash symbolized_path_parameters _controller include? ","request_or_recall_hash symbolized_path_parameters  [] ","recall dup  [] "," options_as_params  [] ","named_route parameter_shell merge  [] ","defaults clone  [] ","options symbolize_keys  [] ","request_or_request_or_recall_hash symbolized_path_parameters _hash symbolized_path_parameters ","request_or_recall_hash symbolized_named_route generate _parameters ","request_or_request_or_recall_hash symbolized_path_parameters _hash is_a? ","recall dup  inspect "," options_as_params  inspect ","named_route parameter_shell merge  inspect ","defaults clone  inspect ","options symbolize_keys  inspect ","route send  first ","route send!  first ","route __send__  first ","route send  is_a? ! ","route send!  is_a? ! ","route __send__  is_a? ! ","route send  is_a? ","route send!  is_a? ","route __send__  is_a? "," routes_by_controller [] [] []  each "," routes_by_options []  [] [] [] "," routes_by_merged []  [] [] [] ","  routes_by_controller [] [] [] _by_controller [] [] [] ","recall dup  keys sort_by "," options_as_params  keys sort_by ","named_route parameter_shell merge  keys sort_by ","defaults clone  keys sort_by ","options symbolize_keys  keys sort_by ","recall dup  keys "," options_as_params  keys ","named_route parameter_shell merge  keys ","defaults clone  keys ","options symbolize_keys  keys "," routes_by_options []  [] [] "," routes_by_merged []  [] [] ","  routes_by_controller [] [] [] _by_controller [] [] "," routes_by_options []  [] "," routes_by_merged []  [] ","  routes_by_controller [] [] [] _by_controller [] "," routes_by_options []  "," routes_by_merged []  ","  routes_by_controller [] [] [] _by_controller ","recall merge  [] "," named_routes []  requirements diff inspect "," named_routes []  requirements diff "," named_routes []  requirements "," named_routes []  requirements inspect ","named_route generate  nil? "," named_routes []  generate ","recall dup  [] [] "," options_as_params  [] [] ","named_route parameter_shell merge  [] [] ","defaults clone  [] [] ","options symbolize_keys  [] [] ","recall dup  [] [] == "," options_as_params  [] [] == ","named_route parameter_shell merge  [] [] == ","defaults clone  [] [] == ","options symbolize_keys  [] [] == ","old_parts [] +  join ","old_old_parts [] +  [] + ","recall [] split  [] + ","old_old_parts [] +  [] ","recall [] split  [] ","(send\n  (send\n    (lvar :new_old_parts [] + ) :length) :+\n  (int 1)) -@ ","(send\n  (send\n    (lvar :options [] split ) :length) :+\n  (int 1)) -@ ","new_old_parts [] +  length + ","options [] split  length + ","new_old_parts [] +  length ","options [] split  length ","recall dup  [] split "," options_as_params  [] split ","named_route parameter_shell merge  [] split ","defaults clone  [] split ","options symbolize_keys  [] split ","request_or_recall_hash symbolized_path_parameters  [] split ","recall dup  [] [] != "," options_as_params  [] [] != ","named_route parameter_shell merge  [] [] != ","defaults clone  [] [] != ","options symbolize_keys  [] [] != ","Routing  expiry_hash  [] "," build_expiry  [] "," named_routes []  ! "," recall dup _as_params ","  options_as_params _as_params "," named_route parameter_shell merge _as_params "," defaults clone _as_params "," options symbolize_keys _as_params "," named_routes []  parameter_shell merge "," named_routes []  parameter_shell "," named_ routes_by_controller [] [] []  [] ","  named_routes [] s [] "," named_ routes_by_controller [] [] []  ","  named_routes [] s ","recall dup  delete "," options_as_params  delete ","named_route parameter_shell merge  delete ","defaults clone  delete ","options symbolize_keys  delete "," raise_ named_routes [] _error ","recall dup  [] to_s "," options_as_params  [] to_s ","named_route parameter_shell merge  [] to_s ","defaults clone  [] to_s ","options symbolize_keys  [] to_s ","request path_parameters symbolize_keys  inspect ","ActionController Base  debug_ routes_by_controller [] [] []  ","recall dup  [] nil? "," options_as_params  [] nil? ","named_route parameter_shell merge  [] nil? ","defaults clone  [] nil? ","options symbolize_keys  [] nil? ","recall dup  key? "," options_as_params  key? ","named_route parameter_shell merge  key? ","defaults clone  key? ","options symbolize_keys  key? ","request path_parameters symbolize_keys  delete_if "," expand_options [] _path! "," expand_merged [] _path! "," expand_controller_named_route generate ! ","request path_parameters symbolize_keys  clone ","request named_route generate _parameters symbolize_keys ","request named_route generate _parameters ","recall dup  symbolize_keys "," options_as_params  symbolize_keys ","named_route parameter_shell merge  symbolize_keys ","defaults clone  symbolize_keys ","options symbolize_keys  symbolize_keys ","@ routes_by_controller [] [] []  empty? ","(send\n  (send nil : routes_by_controller [] [] [] ) :collect) compact ","  routes_by_controller [] [] []  collect ","  routes_by_controller [] [] []  "," routes_by_controller [] [] []  each_with_index ","(send\n  (lvar :recall dup ) :reject) keys sort_by ","(send\n  (lvar : options_as_params ) :reject) keys sort_by ","(send\n  (lvar :named_route parameter_shell merge ) :reject) keys sort_by ","(send\n  (lvar :defaults clone ) :reject) keys sort_by ","(send\n  (lvar :options symbolize_keys ) :reject) keys sort_by ","(send\n  (lvar :recall dup ) :reject) keys ","(send\n  (lvar : options_as_params ) :reject) keys ","(send\n  (lvar :named_route parameter_shell merge ) :reject) keys ","(send\n  (lvar :defaults clone ) :reject) keys ","(send\n  (lvar :options symbolize_keys ) :reject) keys ","recall dup  reject "," options_as_params  reject ","named_route parameter_shell merge  reject ","defaults clone  reject ","options symbolize_keys  reject "]}," ActionController Routing RouteSet initialize":{"type":"method","name":"initialize","children":[],"call":["Hash  new "," named_routes= ","NamedRouteCollection  new "," routes= "," clear_recognize_optimized! "," configuration_files= "]}," ActionController Routing Route add_default_requirements":{"type":"method","name":"add_default_requirements","children":[],"call":[" known [] "," known ","component_keys include? ","c key "," components collect "," components "]}," ActionController Routing Route configure_components":{"type":"method","name":"configure_components","children":[],"call":["component condition= ","conditions [] ","component key ","conditions key? ","component default= ","component key == ","defaults [] ","defaults key? "," components each "," components "]}," ActionController Routing Route initialize_hashes":{"type":"method","name":"initialize_hashes","children":[],"call":[" known []= "," known ","(if\n  (send\n    (lvar :v) :is_a?\n    (const nil :Regexp))\n  (lvar :conditions)\n  (lvar :defaults)) []= ","v is_a? ","path_keys include? ","options each ","conditions update ","options delete "," known= ","(send\n  (send nil :components) :collect) compact ","c key "," components collect "," components ","(send\n  (send nil :components) :collect) compact  include? "]}," ActionController Routing Route initialize_components":{"type":"method","name":"initialize_components","children":[],"call":[" components= ","Component  new ","path collect ","path shift ","path first blank? ","path first ","path split ","path is_a? ","path split  collect ","path split  shift ","path split  first blank? ","path split  first ","path split  split ","path split  is_a? "]}," ActionController Routing Route matches_controller?":{"type":"method","name":"matches_controller?","children":[],"call":[" eval ","Routing  test_condition ","c condition ","c condition nil? ","c key == ","c key "," components find "," components "," known [] == "," known [] "," known "]}," ActionController Routing Route extra_keys":{"type":"method","name":"extra_keys","children":[],"call":["options keys - ","options keys ","(send\n  (send\n    (begin\n      (or\n        (lvar :hash)\n        (hash))) :keys) :map) - - "," significant_keys ","(send\n  (send\n    (begin\n      (or\n        (lvar :hash)\n        (hash))) :keys) :map) - ","(or\n  (lvar :recall)\n  (hash)) keys ","k to_sym ","(or\n  (lvar :hash)\n  (hash)) keys map ","(or\n  (lvar :hash)\n  (hash)) keys "]}," ActionController Routing Route initialize_keys":{"type":"method","name":"initialize_keys","children":[],"call":["@keys freeze ","(send\n  (block\n    (send\n      (send nil :components) :collect)\n    (args\n      (arg :c))\n    (send\n      (lvar :c) :key)) :+\n  (send\n    (send nil :known) :keys)) compact ","(send\n  (send nil :components) :collect) + "," known keys "," known ","c key "," components collect "," components ","(send\n  (block\n    (send\n      (send nil :components) :collect)\n    (args\n      (arg :c))\n    (send\n      (lvar :c) :key)) :+\n  (send\n    (send nil :known) :keys)) compact  freeze "]}," ActionController Routing Route write_recognition":{"type":"method","name":"write_recognition","children":[],"call":["g go ","g constant_result ","ControllerComponent  assign_controller ","key == "," known each "," known "," components [] "," components "," components first ","g after= ","g current= ","g before= ","g share_locals_with ","generator dup "," instance_eval "," recognition_conditions join "," recognition_conditions "," recognition_extraction * "," recognition_extraction ","generator dup  generator dup o ","generator dup  constant_result ","ControllerComponent  assigenerator dup n_controller ","generator dup  after= ","generator dup  current= ","generator dup  before= ","generator dup  share_locals_with ","generator dup enerator dup "," recogenerator dup nition_conditions join "," recogenerator dup nition_conditions "," recogenerator dup nition_extraction * "," recogenerator dup nition_extraction "]}," ActionController Routing Route write_generation":{"type":"method","name":"write_generation","children":[],"call":["gp go ","generator if ","generator check_conditions ","v == ","k == "," known collect "," known ","generator go "," known empty? "," components [] "," components "," components first ","generator after= ","generator current= ","generator before= "," instance_eval "," generation_requirements "," generation_structure "," generation_extraction "]}," ActionController Routing Route inspect":{"type":"method","name":"inspect","children":[],"call":[" options inspect [] "," options inspect "," options "," path inspect "," path "," class ","(send\n  (ivar :@items) :collect) join inspect ","(send\n  (ivar :@items) :collect) join ","c inspect ","c kind_of? ","@items collect "," class to_s ","@defaults inspect ","@defaults empty? ","@requirements inspect ","@requirements empty? "]}," ActionController Routing Route initialize":{"type":"method","name":"initialize","children":[],"call":[" initialize_keys "," add_default_requirements "," configure_components ","defaults dup "," initialize_hashes ","options dup "," initialize_components ","@defaults []= ","(or\n  (send\n    (ivar :@requirements) :key?\n    (lvar :name))\n  (send\n    (ivar :@defaults) :key?\n    (lvar :name))) ! ","@defaults key? ","@requirements key? ","@items include? ","(array\n  (sym :action)\n  (str \"index\")) each "," raise ","@items include? ! ","v kind_of? ","@requirements each ","v to_s ","v nil? ","@defaults each ","(if\n  (send\n    (ivar :@items) :include?\n    (lvar :k))\n  (ivar :@defaults)\n  (ivar :@requirements)) []= ","@requirements []= ","k kind_of? ","hash each "," items= ","hash delete ","hash [] kind_of? ","hash [] ","hash kind_of? ","@requirements keys to_set != ","@requirements keys to_set ","@requirements keys ","segment regexp ","segment respond_to? ","@segments detect ","@significant_keys << ","requirements [] ! ","requirements [] "," significant_keys include? ! "," significant_keys include? "," significant_keys ","defaults dup  []= ","hash delete  []= ","(or\n  (send\n    (ivar :@requirements) :key?\n    (lvar :name))\n  (send\n    (ivar :defaults dup ) :key?\n    (lvar :name))) ! ","(or\n  (send\n    (ivar :@requirements) :key?\n    (lvar :name))\n  (send\n    (ivar :hash delete ) :key?\n    (lvar :name))) ! ","(or\n  (send\n    (ivar :hash delete ) :key?\n    (lvar :name))\n  (send\n    (ivar :@defaults) :key?\n    (lvar :name))) ! ","defaults dup  key? ","hash delete  key? ","hash delete  each ","defaults dup  each ","(if\n  (send\n    (ivar :@items) :include?\n    (lvar :k))\n  (ivar :defaults dup )\n  (ivar :@requirements)) []= ","(if\n  (send\n    (ivar :@items) :include?\n    (lvar :k))\n  (ivar :hash delete )\n  (ivar :@requirements)) []= ","(if\n  (send\n    (ivar :@items) :include?\n    (lvar :k))\n  (ivar :@defaults)\n  (ivar :hash delete )) []= ","hash delete  keys to_set != ","hash delete  keys to_set ","hash delete  keys "]}," ActionController Routing PathComponent Result new_escaped":{"type":"method","name":"new_escaped","children":[],"call":[]}," ActionController Routing PathComponent Result to_s":{"type":"method","name":"to_s","children":[],"call":[" join "]}," ActionController Routing PathComponent write_recognition":{"type":"method","name":"write_recognition","children":[],"call":["g finish ","g result "," key ","g path_name ","g index_name "," raise ","g after empty? ","g after "]}," ActionController Routing PathComponent write_generation":{"type":"method","name":"write_generation","children":[],"call":["g finish ","g else ","gp finish ","g add_segment ","g hash_value "," key ","g << ","g if "," raise ","g after empty? ","g after "]}," ActionController Routing PathComponent default=":{"type":"method","name":"default=","children":[],"call":[" raise ","value == "]}," ActionController Routing PathComponent condition":{"type":"method","name":"condition","children":[],"call":[]}," ActionController Routing PathComponent default":{"type":"method","name":"default","children":[],"call":[]}," ActionController Routing PathComponent optional?":{"type":"method","name":"optional?","children":[],"call":[]}," ActionController Routing ControllerComponent traverse_to_controller":{"type":"method","name":"traverse_to_controller","children":[],"call":[" eval ","mod const_available? ","index - ","segment camelize ","segments [] ","index < ","segments length "," raise ","(str \"^uninitialized constant .*\") =~ ","e message ","next_mod name == ","mod name ","next_mod name ","mod == ","controller name == ","controller name ","controller ancestors include? ","controller ancestors ","controller is_a? ","mod send ","Module  new ","File  directory? ","File  join ","$: each ","next_mod is_a? ","mod const_defined? ","mod is_a? ","mod const_get "," attempt_load "," attempt_load == ","path_suffix + "," file_kinds "," eval  const_available? ","segments []  camelize ","segments [] s [] ","segments [] s length ","segments segments length  ","next_ eval  name == "," eval  name == ","Module  new  name == ","mod send  name == ","mod const_get  name == "," eval  name ","next_ eval  name ","Module  new  name ","mod send  name ","mod const_get  name "," eval  == "," eval  ancestors include? ","mod const_get  ancestors include? "," eval  ancestors ","mod const_get  ancestors "," eval  is_a? ","mod const_get  is_a? "," eval  send ","next_ eval  is_a? ","Module  new  is_a? ","mod send  is_a? "," eval  const_defined? "," eval  const_get ","File  join _suffix + ","path_File  join  + ","File  join  + "]}," ActionController Routing ControllerComponent assign_controller":{"type":"method","name":"assign_controller","children":[],"call":["g result ","(send\n  (send\n    (lvar :controller) :split\n    (str \"/\")) :collect) join ","c camelize ","controller split collect ","controller split "]}," ActionController Routing ControllerComponent assign_default":{"type":"method","name":"assign_default","children":[],"call":["ControllerComponent  assign_controller "," default "]}," ActionController Routing ControllerComponent assign_result":{"type":"method","name":"assign_result","children":[],"call":["g result "," key "]}," ActionController Routing ControllerComponent recognition_check":{"type":"method","name":"recognition_check","children":[],"call":["gp move_forward ","gpp move_forward ","gp if ","Routing  test_condition "," condition ","gp << ","gp index_name ","gp path_name ","g if ","g << ","g index_name ","g path_name "]}," ActionController Routing ControllerComponent add_segments_to":{"type":"method","name":"add_segments_to","children":[],"call":["g add_segment ","g hash_value "," default "," key "]}," ActionController Routing ControllerComponent key":{"type":"method","name":"key","children":[],"call":[]}," ActionController Routing DynamicComponent assign_default":{"type":"method","name":"assign_default","children":[],"call":["g constant_result "," default "," key "," default nil? "]}," ActionController Routing DynamicComponent assign_result":{"type":"method","name":"assign_result","children":[],"call":["g move_forward ","g result ","g next_segment "," default "," key "]}," ActionController Routing DynamicComponent write_recognition":{"type":"method","name":"write_recognition","children":[],"call":["gp finish ","c assign_default ","gp after each ","gp after "," assign_default ","g send ","g next_segment ","test_type == ","c optional? ","g after all? ","g after "," optional? ","gpp continue "," assign_result "," recognition_check "]}," ActionController Routing DynamicComponent recognition_check":{"type":"method","name":"recognition_check","children":[],"call":["g if ","prefix + ","Routing  test_condition "," condition ","g next_segment "," condition is_a? ","(true) include? "]}," ActionController Routing DynamicComponent add_segments_to":{"type":"method","name":"add_segments_to","children":[],"call":["g add_segment ","g hash_value "," default "," key "]}," ActionController Routing DynamicComponent write_continue_generation":{"type":"method","name":"write_continue_generation","children":[],"call":["gpp continue "," add_segments_to ","gp expire_for_keys "," key ","gp after empty? ","gp after ","g send "," default "," condition nil? "," condition ","Routing  test_condition ","g hash_value ","Routing  Routing  test_condition _condition "]}," ActionController Routing DynamicComponent write_dropout_generation":{"type":"method","name":"write_dropout_generation","children":[],"call":["gp finish ","gp if ","check join ","c default_check ","gp after map ","gp after ","g dup "," default_check ","c optional? ","g after all? ","g after "," optional? ","g dup  finish ","g dup  if ","g dup  after map ","g dup  after "]}," ActionController Routing DynamicComponent write_generation":{"type":"method","name":"write_generation","children":[],"call":[" write_continue_generation "," write_dropout_generation "]}," ActionController Routing DynamicComponent default_check":{"type":"method","name":"default_check","children":[],"call":[" default to_s inspect "," default to_s "," default ","g hash_value "," key "," default ! ! "," default ! "," default inspect "]}," ActionController Routing DynamicComponent initialize":{"type":"method","name":"initialize","children":[],"call":[" default= ","options key? ","options [] ","key to_sym "]}," ActionController Routing DynamicComponent default=":{"type":"method","name":"default=","children":[],"call":[]}," ActionController Routing DynamicComponent optional?":{"type":"method","name":"optional?","children":[],"call":[]}," ActionController Routing DynamicComponent dynamic?":{"type":"method","name":"dynamic?","children":[],"call":[]}," ActionController Routing StaticComponent write_generation":{"type":"method","name":"write_generation","children":[],"call":["gp continue ","g add_segment "," value "]}," ActionController Routing StaticComponent write_recognition":{"type":"method","name":"write_recognition","children":[],"call":["gpp continue ","gp move_forward ","g if_next_matches "," value "]}," ActionController Routing StaticComponent initialize":{"type":"method","name":"initialize","children":[],"call":[]}," ActionController Routing Component new":{"type":"method","name":"new","children":[],"call":[]}," ActionController Routing Component key":{"type":"method","name":"key","children":[],"call":[]}," ActionController Routing Component optional?":{"type":"method","name":"optional?","children":[],"call":[]}," ActionController Routing Component dynamic?":{"type":"method","name":"dynamic?","children":[],"call":[]}," ActionController Routing test_condition":{"type":"method","name":"test_condition","children":[],"call":[" raise ","conds join ","cond [] == ","cond [] "," test_condition ","condition collect ","condition inspect ","Regexp  new ","condition source "," test_condition s join "," test_condition  [] == "," test_condition  [] "," test_ test_condition ition "," test_Regexp  new  "," test_condition ition collect ","Regexp  new  collect "," test_condition ition inspect ","Regexp  new  inspect "," test_condition ition source ","Regexp  new  source "]}," ActionController Routing treat_hash":{"type":"method","name":"treat_hash","children":[],"call":["keys_to_delete << ","hash delete ","hash []= ","v to_s ","v to_param to_s ","v to_param ","v respond_to? ","hash each "]}," ActionController Routing controller_relative_to":{"type":"method","name":"controller_relative_to","children":[],"call":["controller [] ","controller [] == ","controller nil? "]}," ActionController Routing extract_parameter_value":{"type":"method","name":"extract_parameter_value","children":[],"call":["CGI  escape ","(if\n  (send\n    (lvar :parameter) :respond_to?\n    (sym :to_param))\n  (send\n    (lvar :parameter) :to_param)\n  (lvar :parameter)) to_s ","parameter to_param ","parameter respond_to? "]}," ActionController Routing expiry_hash":{"type":"method","name":"expiry_hash","children":[],"call":["expire_on []= ","rcv != ","recall [] ","options each ","recall []  != "]}," ActionController AbstractRequest server_software":{"type":"method","name":"server_software","children":[],"call":["1 downcase "," env [] "," env ","@env [] "]}," ActionController AbstractRequest path_parameters":{"type":"method","name":"path_parameters","children":[],"call":[]}," ActionController AbstractRequest symbolized_path_parameters":{"type":"method","name":"symbolized_path_parameters","children":[],"call":[" path_parameters symbolize_keys "," path_parameters "]}," ActionController AbstractRequest path_parameters=":{"type":"method","name":"path_parameters=","children":[],"call":[]}," ActionController AbstractRequest standard_port":{"type":"method","name":"standard_port","children":[],"call":[" protocol "]}," ActionController AbstractRequest relative_url_root":{"type":"method","name":"relative_url_root","children":[],"call":["File  dirname gsub ","File  dirname "," env [] to_s "," env [] "," env "," server_software == "," server_software "," env [] to_s sub ","@env [] to_s sub ","@env [] to_s ","@env [] ","ActionController Base  relative_url_root ","ActiveSupport Deprecation  warn "," caller "]}," ActionController AbstractRequest raw_post":{"type":"method","name":"raw_post","children":[],"call":[" env [] "," env ","@env [] "," body rewind "," body "," body respond_to? "," env []= "," body read "," content_length "," env include? "]}," ActionController AbstractRequest xml_http_request?":{"type":"method","name":"xml_http_request?","children":[],"call":["(str \"XMLHttpRequest\") match nil? ! ","(str \"XMLHttpRequest\") match nil? ","(str \"XMLHttpRequest\") match "," env [] "," env ","@env [] "," env [] =~ ","(send\n  (send\n    (ivar :@env) :[]\n    (str \"HTTP_X_REQUESTED_WITH\")) :!~\n  (regexp\n    (str \"XMLHttpRequest\")\n    (regopt :i))) ! ","@env [] !~ "]}," ActionController AbstractRequest yaml_post?":{"type":"method","name":"yaml_post?","children":[],"call":[" post_format == "," post_format "," post? "]}," ActionController AbstractRequest xml_post?":{"type":"method","name":"xml_post?","children":[],"call":[" post_format == "," post_format "," post? "]}," ActionController AbstractRequest formatted_post?":{"type":"method","name":"formatted_post?","children":[],"call":[" post_format == "," post_format "," post? ","(sym :xml) include? "]}," ActionController AbstractRequest post_format":{"type":"method","name":"post_format","children":[],"call":[" env [] to_s downcase "," env [] to_s "," env [] "," env "," env [] downcase to_sym "," env [] downcase "," content_type to_s "," content_type "]}," ActionController Pagination Paginator Window pages":{"type":"method","name":"pages","children":[],"call":["@paginator [] ","(irange\n  (send\n    (ivar :@first) :number)\n  (send\n    (ivar :@last) :number)) to_a collect! ","(irange\n  (send\n    (ivar :@first) :number)\n  (send\n    (ivar :@last) :number)) to_a ","@last number ","@first number ","(irange\n  (send\n    (ivar :@first) :number)\n  (send\n    (ivar :@last) :number)) to_a map "]}," ActionController Pagination Paginator Window padding=":{"type":"method","name":"padding=","children":[],"call":["@paginator last ","@paginator [] ","@page number + ","@page number ","@paginator has_page_number? ","@paginator first ","@page number - ","padding < "]}," ActionController Pagination Paginator Window initialize":{"type":"method","name":"initialize","children":[],"call":[" padding= ","page paginator "]}," ActionController Pagination Paginator Page to_param":{"type":"method","name":"to_param","children":[],"call":["@number to_s "]}," ActionController Pagination Paginator Page to_sql":{"type":"method","name":"to_sql","children":[],"call":[" offset ","@paginator items_per_page "]}," ActionController Pagination Paginator Page window":{"type":"method","name":"window","children":[],"call":["Window  new "]}," ActionController Pagination Paginator Page next":{"type":"method","name":"next","children":[],"call":["@paginator [] ","@number + "," last? ","Page  new "]}," ActionController Pagination Paginator Page previous":{"type":"method","name":"previous","children":[],"call":["@paginator [] ","@number - "," first? ","Page  new "]}," ActionController Pagination Paginator Page last?":{"type":"method","name":"last?","children":[],"call":[" == ","@paginator last "]}," ActionController Pagination Paginator Page first?":{"type":"method","name":"first?","children":[],"call":[" == ","@paginator first "]}," ActionController Pagination Paginator Page last_item":{"type":"method","name":"last_item","children":[],"call":["(send\n  (send\n    (ivar :@paginator) :items_per_page) :*\n  (ivar :@number)) min ","@paginator item_count ","@paginator items_per_page * ","@paginator items_per_page "]}," ActionController Pagination Paginator Page first_item":{"type":"method","name":"first_item","children":[],"call":[" offset + "," offset "]}," ActionController Pagination Paginator Page offset":{"type":"method","name":"offset","children":[],"call":["@paginator items_per_page * ","@number - ","@paginator items_per_page "]}," ActionController Pagination Paginator Page <=>":{"type":"method","name":"<=>","children":[],"call":["@number <=> ","page number "," raise ","@paginator == ","page paginator "]}," ActionController Pagination Paginator Page ==":{"type":"method","name":"==","children":[],"call":["@number == ","page number ","@paginator == ","page paginator ","page nil? "]}," ActionController Pagination Paginator Page initialize":{"type":"method","name":"initialize","children":[],"call":["@paginator has_page_number? ","number to_i "]}," ActionController Pagination Paginator each":{"type":"method","name":"each","children":[],"call":[" [] ","n + "," page_count times "," page_count "]}," ActionController Pagination Paginator []":{"type":"method","name":"[]","children":[],"call":["Page  new ","@pages [] "]}," ActionController Pagination Paginator has_page_number?":{"type":"method","name":"has_page_number?","children":[],"call":["number <= "," page_count ","number >= ","number is_a? "]}," ActionController Pagination Paginator page_count":{"type":"method","name":"page_count","children":[],"call":["q + ","r == ","@item_count divmod ","@item_count zero? ","(send\n  (ivar :@item_count) :/\n  (send\n    (ivar :@items_per_page) :to_f)) ceil ","@item_count / ","@items_per_page to_f "]}," ActionController Pagination Paginator last_page":{"type":"method","name":"last_page","children":[],"call":[" [] "," page_count "]}," ActionController Pagination Paginator first_page":{"type":"method","name":"first_page","children":[],"call":[" [] "]}," ActionController Pagination Paginator current_page":{"type":"method","name":"current_page","children":[],"call":[" [] "]}," ActionController Pagination Paginator current_page=":{"type":"method","name":"current_page=","children":[],"call":[" has_page_number? ","page to_i "," raise ","page paginator == ","page paginator ","page is_a? "," has_page to_i _number? ","page to_i  to_i ","page to_i  paginator == ","page to_i  paginator ","page to_i  is_a? "]}," ActionController Pagination Paginator initialize":{"type":"method","name":"initialize","children":[],"call":[" current_page= "," raise ","items_per_page <= "]}," ActionController Pagination paginator_and_collection_for":{"type":"method","name":"paginator_and_collection_for","children":[],"call":[" find_collection_for_pagination ","Paginator  new ","options [] "," count_collection_for_pagination ","@params [] ","options [] constantize "," params [] "," params "," eval "," find_ find_collection_for_pagination _for_pagination "," count_ find_collection_for_pagination _for_pagination ","  count_collection_for_pagination _collection_for_pagination "]}," ActionController Pagination find_collection_for_pagination":{"type":"method","name":"find_collection_for_pagination","children":[],"call":["model find ","paginator current offset ","paginator current ","options [] ","model find_all ","paginator current to_sql "]}," ActionController Pagination count_collection_for_pagination":{"type":"method","name":"count_collection_for_pagination","children":[],"call":["model count ","options [] "]}," ActionController Pagination create_paginators_and_retrieve_collections":{"type":"method","name":"create_paginators_and_retrieve_collections","children":[],"call":[" instance_variable_set ","collection_id to_s ","options [] "," paginator_and_collection_for ","options [] include? "," action_name ","Pagination OPTIONS  [] each ","Pagination OPTIONS  [] "," class "]}," ActionController Pagination ClassMethods paginate":{"type":"method","name":"paginate","children":[],"call":["OPTIONS  [] []= ","OPTIONS  [] ","Hash  new "," before_filter "," module_eval ","Pagination  validate_options! "]}," ActionController Pagination paginate":{"type":"method","name":"paginate","children":[],"call":[" paginator_and_collection_for ","Pagination  validate_options! "]}," ActionController Pagination validate_options!":{"type":"method","name":"validate_options!","children":[],"call":[]}," ActionController Pagination included":{"type":"method","name":"included","children":[],"call":[]}," ActionController Macros InPlaceEditing ClassMethods in_place_edit_for":{"type":"method","name":"in_place_edit_for","children":[],"call":[" render ","@item send ","@item update_attribute "," params [] "," params ","object to_s camelize constantize find ","object to_s camelize constantize ","object to_s camelize ","object to_s "," define_method ","@item send to_s ","object to_s camelize constantize find  send ","object to_s camelize constantize find  update_attribute ","object to_s camelize constantize find  send to_s "]}," ActionController Macros InPlaceEditing append_features":{"type":"method","name":"append_features","children":[],"call":[]}," ActionController Macros AutoComplete ClassMethods auto_complete_for":{"type":"method","name":"auto_complete_for","children":[],"call":[" render ","object to_s camelize constantize find ","object to_s camelize constantize ","object to_s camelize ","object to_s ","(pair\n  (sym :conditions)\n  (array\n    (dstr\n      (str \"LOWER(\")\n      (begin\n        (lvar :method))\n      (str \") LIKE ?\"))\n    (send\n      (send\n        (str \"%\") :+\n        (send\n          (send\n            (send\n              (send nil :params) :[]\n              (lvar :object)) :[]\n            (lvar :method)) :downcase)) :+\n      (str \"%\")))) merge! ","% + + ","% + "," params [] [] downcase "," params [] [] "," params [] "," params "," define_method "]}," ActionController Macros AutoComplete append_features":{"type":"method","name":"append_features","children":[],"call":[]}," ActionController Layout action_has_layout?":{"type":"method","name":"action_has_layout?","children":[],"call":["except include? ! ","except include? "," action_name ","conditions [] ","only include? "," class layout_conditions "," class ","conditions [] include? ! ","conditions [] include? ","conditions []  include? ! ","conditions []  include? "," class layout_conditions  [] "," class layout_ class layout_conditions  "," class layout_conditions  [] include? ! "," class layout_conditions  [] include? "]}," ActionController Layout pick_layout":{"type":"method","name":"pick_layout","children":[],"call":[" active_layout "," action_has_layout? ","options [] ","options is_a? ","deprecated_layout nil? ! ","deprecated_layout nil? "," candidate_for_layout? ","@template __send__ ! ","@template __send__ "," default_template_name ","options delete ","options has_key? "," active_options []  "," active_options delete  "," action_has_options [] ? "," action_has_options delete ? ","deprecated_options []  nil? ! ","deprecated_options delete  nil? ! ","deprecated_options []  nil? ","deprecated_options delete  nil? "," candidate_for_options [] ? "," candidate_for_options delete ? "]}," ActionController Layout apply_layout?":{"type":"method","name":"apply_layout?","children":[],"call":["options values_at compact empty? ","options values_at compact ","options values_at ","options [] != ","options [] ","options has_key? "," template_exempt_from_layout? ! "," template_exempt_from_layout? "," candidate_for_layout? ","options == "]}," ActionController Layout render_with_a_layout":{"type":"method","name":"render_with_a_layout","children":[],"call":[" render_with_no_layout "," render_text ","@template render_file ","@template instance_variable_set "," erase_render_results ","options [] "," logger info "," logger ","options merge "," pick_layout "," apply_layout? ","options is_a? "," add_variables_to_assigns "," response layout= "," response "," assert_existence_of_template_file "," logger nil? "," render_with_a_layout_options "," render_for_text "," render_with_no_ pick_layout  ","options merge  [] "," render_with_a_layout_options  [] ","options merge  merge "," render_with_a_layout_options  merge "," pick_ pick_layout  "," apply_ pick_layout ? ","options merge  is_a? "," render_with_a_layout_options  is_a? "," response  pick_layout = "," render_with_a_layout_options merge  "," render_with_a_layout_ render_with_a_layout_options  "," render_with_a_ pick_layout _options "]}," ActionController Layout ClassMethods normalize_conditions":{"type":"method","name":"normalize_conditions","children":[],"call":["hash merge ","action to_s ","(lvar :value) flatten map ","(lvar :value) flatten ","conditions inject "]}," ActionController Layout ClassMethods add_layout_conditions":{"type":"method","name":"add_layout_conditions","children":[],"call":[" write_inheritable_hash "," normalize_conditions "]}," ActionController Layout ClassMethods layout_conditions":{"type":"method","name":"layout_conditions","children":[],"call":[" read_inheritable_attribute "]}," ActionController Helpers ClassMethods inherited_with_helper":{"type":"method","name":"inherited_with_helper","children":[],"call":[" raise ","e is_missing? ","child controller_path ","child helper ","child master_helper_module send "," master_helper_module ","child master_helper_module ","child master_helper_module= ","Module  new "," inherited_without_helper ","child send ","child send! ","child master_helper_module send! ","child __send__ ","child master_helper_module __send__ "]}," ActionController Flash sweep_flash":{"type":"method","name":"sweep_flash","children":[],"call":[" flash sweep "," flash "]}," ActionController Flash FlashHash use":{"type":"method","name":"use","children":[],"call":["@used []= "," use "," keys each "," keys ","k nil? "]}," ActionController Flash FlashHash sweep":{"type":"method","name":"sweep","children":[],"call":["@used delete ","(send\n  (send\n    (ivar :@used) :keys) :-\n  (send nil :keys)) each ","@used keys - "," keys ","@used keys "," use "," delete ","@used [] "," keys each "]}," ActionController Flash FlashHash discard":{"type":"method","name":"discard","children":[],"call":[" use "]}," ActionController Flash FlashHash keep":{"type":"method","name":"keep","children":[],"call":[" use "]}," ActionController Flash FlashHash now":{"type":"method","name":"now","children":[],"call":["FlashNow  new "]}," ActionController Flash FlashHash replace":{"type":"method","name":"replace","children":[],"call":[]}," ActionController Flash FlashHash update":{"type":"method","name":"update","children":[],"call":[" discard ","h keys each ","h keys "," keep "]}," ActionController Flash FlashHash []=":{"type":"method","name":"[]=","children":[],"call":[" keep "]}," ActionController Flash FlashHash initialize":{"type":"method","name":"initialize","children":[],"call":[]}," ActionController Flash FlashNow []=":{"type":"method","name":"[]=","children":[],"call":["@flash discard ","@flash []= "]}," ActionController Flash FlashNow initialize":{"type":"method","name":"initialize","children":[],"call":[]}," ActionController Filters InstanceMethods action_exempted?":{"type":"method","name":"action_exempted?","children":[],"call":["ea include? "," action_name "," class excluded_actions [] "," class excluded_actions "," class ","ia include? ! ","ia include? "," class included_actions [] "," class included_actions "," class excluded_actions [] include? "," class included_actions [] include? ! "," class included_actions [] include? "," class excluded_actions []  include? "," class included_actions []  include? ! "," class included_actions []  include? "]}," ActionController Filters ClassMethods condition_hash":{"type":"method","name":"condition_hash","children":[],"call":["hash merge ","action to_s ","actions flatten map ","actions flatten ","filters inject ","h update ","actions blank? ","actions flatten map  flatten map ","actions flatten map  flatten ","actions flatten map  blank? "]}," ActionController Filters ClassMethods add_action_conditions":{"type":"method","name":"add_action_conditions","children":[],"call":[" write_inheritable_hash "," condition_hash ","conditions [] "]}," ActionController Filters ClassMethods extract_conditions!":{"type":"method","name":"extract_conditions!","children":[],"call":["filters pop ","filters last is_a? ","filters last "]}," ActionController Filters ClassMethods excluded_actions":{"type":"method","name":"excluded_actions","children":[],"call":[" read_inheritable_attribute "]}," ActionController Filters ClassMethods included_actions":{"type":"method","name":"included_actions","children":[],"call":[" read_inheritable_attribute "]}," Test Unit Assertions assert_template_equal":{"type":"method","name":"assert_template_equal","children":[],"call":["expected == ","@response template assigns [] ","key to_s ","@response template assigns ","@response template "," assert_block "," build_message "]}," Test Unit Assertions assert_cookie_equal":{"type":"method","name":"assert_cookie_equal","children":[],"call":["expected == "," assert_block "," build_message ","actual first ","@response cookies [] ","@response cookies ","response cookies [] first ","response cookies [] ","key to_s ","response cookies "," acquire_assertion_target ","actual first  first ","@response cookies []  first ","@ acquire_assertion_target  cookies [] ","@ acquire_assertion_target  cookies "," acquire_assertion_target  cookies [] first "," acquire_assertion_target  cookies [] "," acquire_assertion_target  cookies "]}," Test Unit Assertions assert_no_cookie":{"type":"method","name":"assert_no_cookie","children":[],"call":["actual empty? ","actual nil? "," assert_block "," build_message ","@response cookies [] ","@response cookies ","@response cookies []  empty? ","@response cookies []  nil? "]}," ActionController Cookies cookie":{"type":"method","name":"cookie","children":[],"call":["@response headers [] << ","CGI Cookie  new ","@response headers [] ","@response headers "," response headers [] << "," response headers [] "," response headers "," response "]}," ActionController Components component_logging":{"type":"method","name":"component_logging","children":[],"call":[" logger info "," logger "," logger nil? ","options inspect "]}," ActionController Components response_for_component":{"type":"method","name":"response_for_component","children":[],"call":["@response dup "]}," ActionController Components request_for_component":{"type":"method","name":"request_for_component","children":[],"call":["request_for_component send ","(or\n  (send\n    (lvar :options) :[]\n    (sym :params))\n  (hash)) merge with_indifferent_access ","(or\n  (send\n    (lvar :options) :[]\n    (sym :params))\n  (hash)) merge ","options [] ","@request dup ","@request dup  send "]}," ActionController Components component_class":{"type":"method","name":"component_class","children":[],"call":[" class ","(send\n  (send\n    (send\n      (lvar :options) :[]\n      (sym :controller)) :camelize) :+\n  (str \"Controller\")) constantize ","options [] camelize + ","options [] camelize ","options [] "]}," ActionController Components component_response":{"type":"method","name":"component_response","children":[],"call":["c process "," response_for_component "," request_for_component "," flash keep "," flash ","c after_filter "," component_class ","Thread  current [] ","Thread  current ","ActionController Flash FlashHash  avoid_sweep= ","Thread  current []= "," component_class process "," component_class  pro component_class ess ","c  component_class process rocess "," response_for_ component_class omponent "," res component_class process onse_for_com component_class process onent "," request_for_ component_class omponent "," request_for_com component_class process onent "," flash kee component_class process  "," component_class  after_filter ","  component_class omponent_ component_class lass "," com component_class process onent_class ","Thread   component_class urrent [] ","Thread   component_class urrent ","A component_class tionController Flash FlashHash  avoid_sweep= ","ActionController Flash FlashHash  avoid_swee component_class process = ","Thread   component_class urrent []= ","  component_class omponent_ component_class lass pro component_class ess "," com component_class process onent_class  component_class process rocess "]}," ActionController Components render_component_as_string":{"type":"method","name":"render_component_as_string","children":[],"call":[" render_component_as_string ","response redirected_to ","response body ","response redirected_to nil? "," component_response "," component_logging "," component_response body "," component_response  redirected_to "," component_response  body "," component_response  redirected_to nil? "," component_ component_response  "," component_ component_response  body "]}," ActionController Components render_component":{"type":"method","name":"render_component","children":[],"call":[" render_text "," response headers [] "," response headers "," response "," component_response body "," component_response "," component_logging "]}," ActionController Components append_features":{"type":"method","name":"append_features","children":[{"type":"method","name":"render_component","children":[],"asgn":[],"call":["@controller send "]}],"call":[]}," ActionController CodeGeneration GenerationGenerator check_conditions":{"type":"method","name":"check_conditions","children":[],"call":["tests join "," dup ","tests << ","Routing  test_condition ","(or\n  (lvar :generator)\n  (self)) hash_value ","condition is_a? ","conditions each ","(or\n  (lvar : dup )\n  (self)) hash_value "]}," ActionController CodeGeneration GenerationGenerator finish":{"type":"method","name":"finish","children":[],"call":[" line "," segments join "," segments "]}," ActionController CodeGeneration GenerationGenerator continue":{"type":"method","name":"continue","children":[],"call":["d go ","d current= ","d after shift ","d after ","d before << ","d current ","d before "," dup "," dup  go "," dup  current= "," dup  after shift "," dup  after "," dup  before << "," dup  current "," dup  before ","  dup up "]}," ActionController CodeGeneration GenerationGenerator go":{"type":"method","name":"go","children":[],"call":[" finish "," current write_generation "," current "]}," ActionController CodeGeneration GenerationGenerator add_segment":{"type":"method","name":"add_segment","children":[],"call":["d segments concat ","d segments "," dup "," dup  segments concat "," dup  segments ","  dup up "]}," ActionController CodeGeneration GenerationGenerator expire_for_keys":{"type":"method","name":"expire_for_keys","children":[],"call":[" line ","conds join "," hash_name ","key to_sym inspect ","key to_sym ","keys collect ","keys empty? "]}," ActionController CodeGeneration GenerationGenerator hash_value":{"type":"method","name":"hash_value","children":[],"call":["default inspect "," locals << "," local_name "," locals ","key to_sym inspect ","key to_sym "," locals include? "]}," ActionController CodeGeneration GenerationGenerator local_name":{"type":"method","name":"local_name","children":[],"call":[]}," ActionController CodeGeneration GenerationGenerator hash_name":{"type":"method","name":"hash_name","children":[],"call":[]}," ActionController CodeGeneration GenerationGenerator initialize":{"type":"method","name":"initialize","children":[],"call":[]}," ActionController CodeGeneration RecognitionGenerator finish":{"type":"method","name":"finish","children":[],"call":[" << ","gp << "," if "," next_segment "," finish_statement call "," finish_statement ","pairs join ","pairs << "," constants [] inspect "," constants [] "," constants "," results [] "," results ","key to_s inspect ","key to_s ","(send\n  (send\n    (send nil :results) :keys) :+\n  (send\n    (send nil :constants) :keys)) uniq each ","(send\n  (send\n    (send nil :results) :keys) :+\n  (send\n    (send nil :constants) :keys)) uniq "," results keys + "," constants keys "," results keys "," finish_ finish_statement call  call "," finish_ finish_statement call  "]}," ActionController CodeGeneration RecognitionGenerator constant_result":{"type":"method","name":"constant_result","children":[],"call":[" constants []= "," constants "]}," ActionController CodeGeneration RecognitionGenerator result":{"type":"method","name":"result","children":[],"call":[" results []= "," results "," line "]}," ActionController CodeGeneration RecognitionGenerator go":{"type":"method","name":"go","children":[],"call":[" finish "," current write_recognition "," current "]}," ActionController CodeGeneration RecognitionGenerator continue":{"type":"method","name":"continue","children":[],"call":["dup go ","dup current= ","dup after shift ","dup after ","dup before << ","dup current ","dup before "," dup "," dup  go "," dup  current= "," dup  after shift "," dup  after "," dup  before << "," dup  current "," dup  before ","  dup  "]}," ActionController CodeGeneration RecognitionGenerator index_name":{"type":"method","name":"index_name","children":[],"call":[]}," ActionController CodeGeneration RecognitionGenerator path_name":{"type":"method","name":"path_name","children":[],"call":[]}," ActionController CodeGeneration RecognitionGenerator segment_name":{"type":"method","name":"segment_name","children":[],"call":["(str \"segment\") to_sym "," depth "]}," ActionController CodeGeneration RecognitionGenerator next_segment":{"type":"method","name":"next_segment","children":[],"call":["code to_s ","default inspect "," locals << "," segment_name "," locals "," line "," index_name "," path_name "," locals include? "," segment_name  to_s "]}," ActionController CodeGeneration RecognitionGenerator move_forward":{"type":"method","name":"move_forward","children":[],"call":["dup move_ahead= ","dup depth "," dup "," dup  move_ahead= "," dup  depth ","  dup  "]}," ActionController CodeGeneration RecognitionGenerator if_next_matches":{"type":"method","name":"if_next_matches","children":[],"call":[" if ","Routing  test_condition "," next_segment ","Routing  Routing  test_condition _condition "]}," ActionController CodeGeneration RecognitionGenerator initialize":{"type":"method","name":"initialize","children":[],"call":["Proc  new "]}," ActionController CodeGeneration CodeGenerator dup":{"type":"method","name":"dup","children":[],"call":["copy send ","value dup ","value is_a? ","value nil? "," send "," class FieldsToDuplicate  each "," class "," class new "," source "," class new  send ","value dup  dup "," send  dup ","value dup  is_a? "," send  is_a? ","value dup  nil? "," send  nil? "]}," ActionController CodeGeneration CodeGenerator share_locals_with":{"type":"method","name":"share_locals_with","children":[],"call":["other locals= "," locals= ","other locals | "," locals ","other locals "]}," ActionController CodeGeneration CodeGenerator to_s":{"type":"method","name":"to_s","children":[],"call":[" source to_s "," source "]}," ActionController CodeGeneration CodeGenerator indent":{"type":"method","name":"indent","children":[],"call":[" source "]}," ActionController CodeGeneration CodeGenerator line":{"type":"method","name":"line","children":[],"call":[" source line "," source "]}," ActionController CodeGeneration CodeGenerator method_missing":{"type":"method","name":"method_missing","children":[],"call":[" line "," dup "," source indent "," source ","text join "," source lines pop "," source lines "," raise "," source lines last =~ "," source lines last ","ResumeKeywords  include? ","Keywords  include? "]}," ActionController CodeGeneration CodeGenerator initialize":{"type":"method","name":"initialize","children":[],"call":["Source  new "]}," ActionController CodeGeneration Source to_s":{"type":"method","name":"to_s","children":[],"call":[" lines join "," lines "]}," ActionController CodeGeneration Source indent":{"type":"method","name":"indent","children":[],"call":[]}," ActionController CodeGeneration Source line":{"type":"method","name":"line","children":[],"call":["@lines << ","IndentationString  * + ","IndentationString  * "]}," ActionController CodeGeneration Source initialize":{"type":"method","name":"initialize","children":[],"call":[]}," ActionController CgiRequest port_from_http_host":{"type":"method","name":"port_from_http_host","children":[],"call":["1 to_i "," env [] "," env "]}," ActionController CgiRequest port":{"type":"method","name":"port","children":[],"call":[" port_from_http_host "," standard_port "," env [] "," env ","1 to_i "," host_with_port =~ "," host_with_port "," host_with_port_without_standard_port_handling =~ "," host_with_port_without_standard_port_handling "]}," ActionController CgiRequest query_string":{"type":"method","name":"query_string","children":[],"call":[" env [] "," env ","parts join ","parts shift ","uri split ","qs empty? ! ","qs empty? ","@cgi query_string ","@env [] "," env [] split ","@cgi query_string empty? ","@cgi query_string nil? "," env [] nil? ","qs blank? ! ","qs blank? ","@cgi respond_to? ","uri split  join "," env [] split  join ","uri split  shift "," env [] split  shift "," env []  split ","@env []  split ","@cgi query_string  empty? ! ","@cgi query_string  empty? ","@cgi query_string  blank? ! ","@cgi query_string  blank? "]}," CGI QueryExtension read_query_params":{"type":"method","name":"read_query_params","children":[],"call":[" read_params_from_query "," read_from_cmdline "," read_params_from_post "," env_table []= ","content freeze "," env_table "," stdinput read "," Integer "," env_table [] "," stdinput "," stdinput binmode "," stdinput respond_to? ","Apache  request args ","Apache  request ","content split first freeze ","content split first ","content split ","content split first to_s freeze ","content split first to_s "," env_table [] to_s upcase "," env_table [] to_s "," stdinput read  freeze "," stdinput read  split first freeze "," stdinput read  split first "," stdinput read  split "," stdinput read  split first to_s freeze "," stdinput read  split first to_s "]}," CGI QueryExtension read_params_from_post":{"type":"method","name":"read_params_from_post","children":[],"call":[" env_table []= ","content freeze "," env_table ","content chop! ","content [] == ","content [] "," stdinput read "," Integer "," env_table [] "," stdinput "," stdinput binmode "," stdinput respond_to? ","content gsub! ","content split first to_s freeze ","content split first to_s ","content split first ","content split "]}," CGI QueryExtension read_params_from_query":{"type":"method","name":"read_params_from_query","children":[],"call":["uri split [] ","uri split ","(lvasgn :uri\n  (send\n    (send nil :env_table) :[]\n    (str \"REQUEST_URI\"))) blank? ! ","(lvasgn :uri\n  (send\n    (send nil :env_table) :[]\n    (str \"REQUEST_URI\"))) blank? "," env_table [] "," env_table ","env_qs blank? ","Apache  request args ","Apache  request "," env_table []= "," env_table [] split [] "," env_table [] split "," env_table [] blank? ! "," env_table [] blank? "," env_table []  split [] "," env_table []  split ","(lvasgn : env_table [] \n  (send\n    (send nil :env_table) :[]\n    (str \"REQUEST_URI\"))) blank? ! ","(lvasgn : env_table [] \n  (send\n    (send nil :env_table) :[]\n    (str \"REQUEST_URI\"))) blank? "," env_table []  blank? "]}," CGI QueryExtension multipart_form_boundary":{"type":"method","name":"multipart_form_boundary","children":[],"call":["MULTIPART_FORM_BOUNDARY_RE  match to_a pop ","MULTIPART_FORM_BOUNDARY_RE  match to_a ","MULTIPART_FORM_BOUNDARY_RE  match "," env_table [] "," env_table "," env_table [] == "]}," CGI QueryExtension initialize_query":{"type":"method","name":"initialize_query","children":[],"call":["CGI  parse "," read_query_params "," read_multipart "," Integer "," env_table [] "," env_table "," multipart_form_boundary ","method == ","method to_s downcase intern ","method to_s downcase ","method to_s ","CGI Cookie  parse "," read_params ","content_type !~ ","content_type blank? "," extract_multipart_form_boundary "," env_table [] to_i "," env_table []= "," env_table [] == "," env_table [] blank? "," multipart_form_ multipart_form_boundary  "," multipart_form_ extract_multipart_form_boundary  ","method to_s downcase intern  == "," env_table []  == ","method to_s downcase intern  to_s downcase intern "," env_table []  to_s downcase intern ","method to_s downcase intern  to_s downcase "," env_table []  to_s downcase ","method to_s downcase intern  to_s "," env_table []  to_s "," env_table []  !~ "," env_table []  blank? "," extract_multipart_form_ multipart_form_boundary  "," extract_multipart_form_ extract_multipart_form_boundary  "]}," CGI QueryExtension read_multipart_with_progress":{"type":"method","name":"read_multipart_with_progress","children":[],"call":["session close ","@stdin_with_progress finish ","@stdin_with_progress respond_to? "," read_multipart_without_progress ","ActionController Base  logger debug ","ActionController Base  logger ","CGI ProgressIO  new "," stdinput_without_progress ","session [] []= ","session [] ","session [] delete ","session []= ","Session  new ","ActionController UploadProgress Progress  new "," raise ","RuntimeError  new ","@params [] first ","@params [] ","options [] ","CGI  parse "," read_params_from_query ","Controllers  const_load! ","Controllers  const_defined? ","options stringify_keys ","Session  new  close ","CGI ProgressIO  new  finish ","CGI ProgressIO  new  respond_to? ","Session  new  [] []= ","Session  new  [] ","Session  new  [] delete ","Session  new  []= ","@ read_multipart_without_progress  [] first ","CGI  parse  [] first ","@ read_multipart_without_progress  [] ","CGI  parse  [] ","options stringify_keys  [] "," read_ read_multipart_without_progress _from_query ","options stringify_keys  stringify_keys "]}," CGI QueryExtension stdinput_with_progress":{"type":"method","name":"stdinput_with_progress","children":[],"call":[" stdinput_without_progress "]}," CGI QueryExtension extended":{"type":"method","name":"extended","children":[],"call":[]}," CGI ProgressIO finish":{"type":"method","name":"finish","children":[],"call":["ActionController Base  logger debug ","@progress elapsed_seconds to_s ","@progress elapsed_seconds ","ActionController Base  logger ","@session update "]}," CGI ProgressIO save_progress":{"type":"method","name":"save_progress","children":[],"call":["@session update "]}," CGI ProgressIO read":{"type":"method","name":"read","children":[],"call":[" save_progress "," progress reset! "," progress ","ActionController Base  logger debug ","args inspect ","ActionController Base  logger ","now - > ","now - "," progress update! ","data size ","Time  now ","data size > "," __getobj__ read "," __getobj__ ","Time  now  - > ","Time  now  - "," __getobj__ read  size ","Time  Time  now  "," __getobj__ read  size > "]}," CGI ProgressIO initialize":{"type":"method","name":"initialize","children":[],"call":[" save_progress ","Time  now "]}," CGIMethods split_key":{"type":"method","name":"split_key","children":[],"call":[]}," CGIMethods parse_formatted_request_parameters":{"type":"method","name":"parse_formatted_request_parameters","children":[],"call":["e backtrace ","e class ","e message ","node node_name ","XmlNode  from_xml ","YAML  load ","Hash  from_xml ","raw_post_data blank? ","strategy call ","ActionController Base  param_parsers [] ","ActionController Base  param_parsers ","XmlNode  from_xml  XmlNode  from_xml _name ","ActionController Base  param_parsers []  call "]}," ActionController Caching Sweeper method_missing":{"type":"method","name":"method_missing","children":[],"call":["@controller send ","@controller nil? ","@controller send! ","@controller __send__ "]}," ActionController Caching Sweeper callback":{"type":"method","name":"callback","children":[],"call":[" send "," respond_to? "," controller action_name "," controller "," controller controller_name underscore "," controller controller_name "," send! "," __send__ "]}," ActionController Caching Sweeper after":{"type":"method","name":"after","children":[],"call":[" callback "," controller= ","controller perform_caching "]}," ActionController Caching Sweeper before":{"type":"method","name":"before","children":[],"call":[" callback "," controller= ","controller perform_caching "]}," ActionController Caching Sweeping ClassMethods cache_sweeper":{"type":"method","name":"cache_sweeper","children":[],"call":[" after_filter ","configuration [] "," around_filter ","sweeper_instance is_a? ","Object  const_get instance ","Object  const_get ","Inflector  classify "," observer ","sweepers each ","sweepers pop ","sweepers last is_a? ","sweepers last "," perform_caching ","ActiveRecord Base  observers << ","ActiveRecord Base  observers ","sweepers extract_options! ","(if\n  (send\n    (lvar :sweeper) :is_a?\n    (const nil :Symbol))\n  (send\n    (const nil :Object) :const_get\n    (send\n      (send\n        (lvar :sweeper) :to_s) :classify))\n  (lvar :sweeper)) instance ","sweeper to_s classify ","sweeper to_s ","sweeper is_a? ","sweepers pop  [] ","sweepers extract_options!  [] ","Object  const_get instance  is_a? ","(if\n  (send\n    (lvar :sweeper) :is_a?\n    (const nil :Symbol))\n  (send\n    (const nil :Object) :const_get\n    (send\n      (send\n        (lvar :sweeper) :to_s) :classify))\n  (lvar :sweeper)) instance  is_a? "]}," ActionController Caching Sweeping append_features":{"type":"method","name":"append_features","children":[],"call":[]}," ActionController Caching Fragments FileStore initialize":{"type":"method","name":"initialize","children":[],"call":["FileStore  send ","Mutex  new ","ActionController Base  allow_concurrency "," include ","FileStore  module_eval "]}," ActionController Caching Fragments UnthreadedFileStore search_dir":{"type":"method","name":"search_dir","children":[],"call":["callback call "," search_dir ","File  directory? ","File  join ","d == ","Dir  foreach "]}," ActionController Caching Fragments UnthreadedFileStore ensure_cache_path":{"type":"method","name":"ensure_cache_path","children":[],"call":["FileUtils  makedirs ","File  exists? ","File  exist? "]}," ActionController Caching Fragments UnthreadedFileStore real_file_path":{"type":"method","name":"real_file_path","children":[],"call":["%s/%s.cache % ","name gsub gsub ","name gsub "]}," ActionController Caching Fragments UnthreadedFileStore delete_matched":{"type":"method","name":"delete_matched","children":[],"call":["File  delete ","f =~ "," search_dir "]}," ActionController Caching Fragments UnthreadedFileStore delete":{"type":"method","name":"delete","children":[],"call":["File  delete "," real_file_path "]}," ActionController Caching Fragments UnthreadedFileStore read":{"type":"method","name":"read","children":[],"call":["IO  read "," real_file_path ","f read ","File  open "]}," ActionController Caching Fragments UnthreadedFileStore write":{"type":"method","name":"write","children":[],"call":["Base  logger error ","e message ","Base  logger ","f write ","File  open "," real_file_path "," ensure_cache_path ","File  dirname "]}," ActionController Caching Fragments UnthreadedFileStore initialize":{"type":"method","name":"initialize","children":[],"call":[]}," ActionController Caching Fragments MemCacheStore initialize":{"type":"method","name":"initialize","children":[],"call":["MemCache  new ","addresses empty? ","addresses flatten ","Mutex  new ","addresses flatten  empty? ","addresses flatten  flatten "]}," ActionController Caching Fragments DRbStore initialize":{"type":"method","name":"initialize","children":[],"call":["DRbObject  new ","Mutex  new "]}," ActionController Caching Fragments MemoryStore initialize":{"type":"method","name":"initialize","children":[],"call":["MemoryStore  send ","Mutex  new ","ActionController Base  allow_concurrency "," include ","MemoryStore  module_eval "]}," ActionController Caching Fragments ThreadSafety delete_matched":{"type":"method","name":"delete_matched","children":[],"call":["@mutex synchronize "]}," ActionController Caching Fragments ThreadSafety delete":{"type":"method","name":"delete","children":[],"call":["@mutex synchronize "]}," ActionController Caching Fragments ThreadSafety write":{"type":"method","name":"write","children":[],"call":["@mutex synchronize "]}," ActionController Caching Fragments ThreadSafety read":{"type":"method","name":"read","children":[],"call":["@mutex synchronize "]}," ActionController Caching Fragments UnthreadedMemoryStore delete_matched":{"type":"method","name":"delete_matched","children":[],"call":["k =~ ","@data delete_if "]}," ActionController Caching Fragments UnthreadedMemoryStore delete":{"type":"method","name":"delete","children":[],"call":["@data delete "]}," ActionController Caching Fragments UnthreadedMemoryStore write":{"type":"method","name":"write","children":[],"call":["@data []= "]}," ActionController Caching Fragments UnthreadedMemoryStore read":{"type":"method","name":"read","children":[],"call":["@data [] "]}," ActionController Caching Fragments UnthreadedMemoryStore initialize":{"type":"method","name":"initialize","children":[],"call":[]}," ActionController Caching Fragments expire_matched_fragments":{"type":"method","name":"expire_matched_fragments","children":[],"call":[" expire_fragment "," logger info "," logger "," logger nil? "," fragment_cache_store delete_matched "," url_for split last split first "," url_for split last split "," url_for split last "," url_for split "," url_for "," fragment_cache_store ","re source "," cache_base_url split last "," cache_base_url split "," cache_base_url "]}," ActionController Caching Fragments expire_fragment":{"type":"method","name":"expire_fragment","children":[],"call":[" fragment_cache_store delete "," fragment_cache_store "," class benchmark "," class "," fragment_cache_store delete_matched ","key source ","key is_a? "," fragment_cache_key "," perform_caching "," logger info "," logger "," logger nil? "," url_for split last "," url_for split "," url_for ","name is_a? "," cache_store delete "," cache_store "," cache_store delete_matched "," cache_configured? "," instrument_fragment_cache "," fragment_cache_key  source "," fragment_cache_key  is_a? "," fragment_cache_ fragment_cache_key  "," url_for split last  is_a? "]}," ActionController Caching Fragments read_fragment":{"type":"method","name":"read_fragment","children":[],"call":[" fragment_cache_store read "," fragment_cache_store "," class benchmark "," class "," fragment_cache_key "," perform_caching "," logger info "," logger "," logger nil? "," url_for split last "," url_for split "," url_for ","name is_a? "," cache_store read "," cache_store "," cache_configured? ","result html_safe ","result respond_to? "," instrument_fragment_cache "," fragment_ fragment_cache_store read _store read "," fragment_ fragment_cache_store read _store "," fragment_cache_ fragment_cache_key  "," fragment_ fragment_cache_store read _key "," url_for split last  is_a? ","  fragment_cache_store read _store read ","  fragment_cache_store read _store ","  fragment_cache_store read _configured? "," cache_store read  html_safe "," cache_store read  respond_to? "," instrument_fragment_ fragment_cache_store read  "]}," ActionController Caching Fragments write_fragment":{"type":"method","name":"write_fragment","children":[],"call":[" fragment_cache_store write "," fragment_cache_store "," class benchmark "," class "," fragment_cache_key "," perform_caching "," logger info "," logger "," logger nil? "," url_for split last "," url_for split "," url_for ","name is_a? "," cache_store write "," cache_store "," cache_configured? ","content html_safe to_str ","content html_safe ","content respond_to? "," instrument_fragment_cache ","content to_str "," fragment_cache_ fragment_cache_key  "," url_for split last  is_a? ","content html_safe to_str  html_safe to_str ","content to_str  html_safe to_str ","content html_safe to_str  html_safe ","content to_str  html_safe ","content html_safe to_str  respond_to? ","content to_str  respond_to? ","content html_safe to_str  to_str ","content to_str  to_str "]}," ActionController Caching Fragments cache_erb_fragment":{"type":"method","name":"cache_erb_fragment","children":[],"call":[" write_fragment ","buffer [] ","block call ","buffer length ","buffer concat "," read_fragment "," eval ","block binding "," perform_caching ","ActionView Base  erb_variable "," eval  [] "," eval  length "," eval  concat "]}," ActionController Caching Fragments fragment_cache_key":{"type":"method","name":"fragment_cache_key","children":[],"call":[" url_for split last "," url_for split "," url_for ","name is_a? ","key split last ","key split "," cache_base_url + "," cache_base_url ","ActiveSupport Cache  expand_cache_key ","key is_a? "," instance_exec "," class fragment_cache_keys map "," class fragment_cache_keys "," class "," cache_base_url +  split last "," url_for  split last "," cache_base_url +  split "," url_for  split ","ActiveSupport Cache  expand_cache_ cache_base_url +  ","ActiveSupport Cache  expand_cache_ url_for  "," cache_base_url +  is_a? "," url_for  is_a? "," class fragment_cache_ cache_base_url + s map "," class fragment_cache_ url_for s map "," class fragment_cache_ cache_base_url + s "," class fragment_cache_ url_for s "]}," ActionController Caching Fragments append_features":{"type":"method","name":"append_features","children":[{"type":"method","name":"fragment_cache_store=","children":[],"asgn":[],"call":[]}],"call":[]}," ActionController Caching Actions ActionCacheFilter after":{"type":"method","name":"after","children":[],"call":["controller write_fragment ","controller response body ","controller response ","controller url_for split last ","controller url_for split ","controller url_for ","controller rendered_action_cache ","@actions include? ! ","@actions include? ","controller action_name intern ","controller action_name ","ActionCachePath  path_for ","controller action_cache_path path ","controller action_cache_path ","controller action_name to_sym "," caching_allowed ! "," caching_allowed ","@options [] "," content_for_layout "," cache_layout? "]}," ActionController Caching Actions ActionCacheFilter before":{"type":"method","name":"before","children":[],"call":["controller send ","controller rendered_action_cache= ","controller read_fragment ","controller url_for split last ","controller url_for split ","controller url_for ","@actions include? ","controller action_name intern ","controller action_name "," set_content_type! ","action_cache_path path ","ActionCachePath  new ","controller action_cache_path= ","cache_path extension ","cache_path path ","controller action_name to_sym ","controller send! "," path_options_for ","controller __send__ ","options merge! "," cache_layout? ","@options [] ","@options slice ","controller rendered_action_controller read_fragment = ","action_controller read_fragment _path path ","ActionCachePath  new  path ","action_ActionCachePath  new  path ","controller action_controller read_fragment _path= ","controller ActionCachePath  new = ","controller action_ActionCachePath  new = ","controller read_fragment _path extension ","ActionCachePath  new  extension ","controller read_fragment _path path "," controller read_fragment _layout? "]}," ActionController Caching Actions ActionCacheFilter initialize":{"type":"method","name":"initialize","children":[],"call":["Set  new ","actions extract_options! ","options values_at "]}," ActionController Caching Actions expire_action":{"type":"method","name":"expire_action","children":[],"call":[" expire_fragment "," url_for split last "," url_for split "," url_for ","options merge ","options [] dup each ","options [] dup ","options [] ","options [] is_a? "," perform_caching ","ActionCachePath  path_for "," cache_configured? ","ActionCachePath  new path ","ActionCachePath  new "," expire_action ","actions each ","actions is_a? ","options [] each ","options is_a? ","options []  each ","options []  is_a? "]}," ActionController Caching Actions ClassMethods caches_action":{"type":"method","name":"caches_action","children":[],"call":[" around_filter ","ActionCacheFilter  new "," perform_caching "," after_filter "," before_filter ","(pair\n  (sym :only)\n  (lvar :actions)) merge ","options delete ","actions extract_options! "," cache_configured? ","cache_filter filter ","options extract! merge ","options extract! ","options []= ","options key? ","actions extract_options!  delete ","actions extract_actions extract_options! ! ","ActionCacheFilter  new  filter ","actions extract_options!  extract! merge ","actions extract_options!  extract! ","actions extract_options!  []= ","actions extract_options!  key? "]}," ActionController Caching Actions append_features":{"type":"method","name":"append_features","children":[],"call":[]}," ActionController Caching Pages caching_allowed":{"type":"method","name":"caching_allowed","children":[],"call":["@request post? ! ","@request post? ","@response headers [] to_i < ","@response headers [] to_i ","@response headers [] ","@response headers "," response headers [] to_i == "," response headers [] to_i "," response headers [] "," response headers "," response "," request get? "," request ","(block\n  (send\n    (send\n      (ivar :@request) :parameters) :reject)\n  (args\n    (arg :k)\n    (arg :v))\n  (send\n    (array\n      (str \"id\")\n      (str \"action\")\n      (str \"controller\")) :include?\n    (lvar :k))) empty? ","(str \"id\") include? ","@request parameters reject ","@request parameters ","@request method post? ! ","@request method post? ","@request method "," response status to_i == "," response status to_i "," response status "]}," ActionController Caching Pages cache_page":{"type":"method","name":"cache_page","children":[],"call":[" class cache_page "," url_for ","options merge ","@response body "," class "," caching_allowed "," perform_caching "," params [] "," params "," response body "," response "," request path "," request "," class perform_caching ","(lvasgn :type_symbol\n  (send\n    (lvar :type) :symbol)) present? ","type symbol ","Mime LOOKUP  [] "," content_type "," caching_allowed? ","(lvasgn :type symbol \n  (send\n    (lvar :type) :symbol)) present? ","(lvasgn :Mime LOOKUP  [] _symbol\n  (send\n    (lvar :Mime LOOKUP  [] ) :symbol)) present? ","Mime LOOKUP  []  symbol "," content_Mime LOOKUP  []  "]}," ActionController Caching Pages expire_page":{"type":"method","name":"expire_page","children":[],"call":[" class expire_page "," url_for ","options merge "," class ","options [] dup each ","options [] dup ","options [] ","options [] is_a? "," perform_caching ","options is_a? "," class perform_caching ","options [] each "]}," ActionController Caching Pages ClassMethods page_cache_path":{"type":"method","name":"page_cache_path","children":[],"call":[" page_cache_directory + "," page_cache_file "," page_cache_directory "," page_cache_directory + + ","path [] == ","path [] "," page_cache_directory to_s + "," page_cache_directory to_s "]}," ActionController Caching Pages ClassMethods page_cache_file":{"type":"method","name":"page_cache_file","children":[],"call":["name << "," page_cache_extension ","(or\n  (send\n    (send\n      (lvar :name) :split\n      (str \"/\")) :last)\n  (lvar :name)) include? ","name split last ","name split ","URI  unescape ","path == ","path empty? ","(if\n  (send\n    (lvar :path) :empty?)\n  (str \"/index\")\n  (lvar :path)) + ","path chomp ","URI  parser unescape ","URI  parser ","URI  unescape  << ","URI  parser unescape  << ","(or\n  (send\n    (send\n      (lvar :URI  unescape ) :split\n      (str \"/\")) :last)\n  (lvar :URI  unescape )) include? ","(or\n  (send\n    (send\n      (lvar :URI  parser unescape ) :split\n      (str \"/\")) :last)\n  (lvar :URI  parser unescape )) include? ","URI  unescape  split last ","URI  parser unescape  split last ","URI  unescape  split ","URI  parser unescape  split "]}," ActionController Caching Pages ClassMethods caches_page":{"type":"method","name":"caches_page","children":[],"call":[" class_eval ","actions each "," perform_caching ","c cache_page ","actions include? ","c action_name "," after_filter ","actions map ","(pair\n  (sym :only)\n  (lvar :actions)) merge ","actions extract_options! ","Zlib  const_get ","gzip_level to_s upcase ","gzip_level to_s ","options fetch "," page_cache_compression ","actions map  each ","actions map  include? ","actions map  map ","(pair\n  (sym :only)\n  (lvar :actions map )) merge ","actions map  extract_options! ","actions extract_actions extract_options! ! ","options fetch  to_s upcase ","options fetch  to_s ","actions extract_options!  fetch "]}," ActionController Caching Pages ClassMethods cache_page":{"type":"method","name":"cache_page","children":[],"call":["f write ","File  open "," page_cache_path ","FileUtils  makedirs ","File  dirname "," benchmark "," page_cache_file "," perform_caching "," logger info "," logger "," logger nil? "," instrument_page_cache ","Zlib GzipWriter  open ","path + "," page_cache_ page_cache_path  "," page_cache_path  + "]}," ActionController Caching Pages ClassMethods expire_page":{"type":"method","name":"expire_page","children":[],"call":["File  delete "," page_cache_path ","File  exists? "," benchmark "," page_cache_file "," perform_caching "," logger info "," logger "," logger nil? ","File  exist? "," instrument_page_cache ","path + "," page_cache_ page_cache_path  "," page_cache_path  + "]}," ActionController Caching Pages included":{"type":"method","name":"included","children":[],"call":[]}," ActionController Caching append_features":{"type":"method","name":"append_features","children":[],"call":[]}," ActionController Benchmarking ClassMethods silence":{"type":"method","name":"silence","children":[],"call":[" logger level= "," logger "," logger level "]}," ActionController Benchmarking ClassMethods benchmark":{"type":"method","name":"benchmark","children":[],"call":[" logger add ","%.5f % "," logger "," silence ","Benchmark  realtime "," logger level == "," logger level ","%.1f % ","seconds * ","Benchmark  ms "]}," Test Unit Assertions clean_backtrace":{"type":"method","name":"clean_backtrace","children":[],"call":[" raise ","File  expand_path =~ ","File  expand_path ","e backtrace reject ","e backtrace ","e message ","File  expand_File  expand_path  =~ ","File  expand_File  expand_path  "]}," Test Unit Assertions assert_valid":{"type":"method","name":"assert_valid","children":[],"call":[" assert ","record errors full_messages ","record errors ","record valid? "," clean_backtrace ","record errors full_messages join "]}," Test Unit Assertions assert_dom_not_equal":{"type":"method","name":"assert_dom_not_equal","children":[],"call":["expected_dom != "," assert_block "," build_message ","actual_dom to_s ","expected_dom to_s ","HTML Document  new root ","HTML Document  new "," clean_backtrace ","HTML Document  new root  != ","HTML Document  new root  to_s "]}," Test Unit Assertions assert_dom_equal":{"type":"method","name":"assert_dom_equal","children":[],"call":["expected_dom == "," assert_block "," build_message ","actual_dom to_s ","expected_dom to_s ","HTML Document  new root ","HTML Document  new "," clean_backtrace ","HTML Document  new root  == ","HTML Document  new root  to_s "]}," Test Unit Assertions assert_no_tag":{"type":"method","name":"assert_no_tag","children":[],"call":[" assert ","@response body inspect ","@response body ","opts inspect ","tag ! "," find_tag "," clean_backtrace ","opts first ","opts last merge ","opts first to_s ","opts last ","opts size > ","opts size ","opts first  inspect ","opts last merge  inspect "," find_tag  ! "," find_ find_tag  ","opts first  first ","opts last merge  first ","opts first  last merge ","opts last merge  last merge ","opts first  first to_s ","opts last merge  first to_s ","opts first  last ","opts last merge  last ","opts first  size > ","opts last merge  size > ","opts first  size ","opts last merge  size "]}," Test Unit Assertions assert_tag":{"type":"method","name":"assert_tag","children":[],"call":[" assert ","@response body inspect ","@response body ","opts inspect "," find_tag "," clean_backtrace ","opts first ","opts last merge ","opts first to_s ","opts last ","opts size > ","opts size ","opts first  inspect ","opts last merge  inspect "," find_ find_tag  ","opts first  first ","opts last merge  first ","opts first  last merge ","opts last merge  last merge ","opts first  first to_s ","opts last merge  first to_s ","opts first  last ","opts last merge  last ","opts first  size > ","opts last merge  size > ","opts first  size ","opts last merge  size "]}," Test Unit Assertions assert_routing":{"type":"method","name":"assert_routing","children":[],"call":[" assert_generates ","options []= ","default_controller include? ","controller include? ","defaults [] ","options [] "," assert_recognizes "]}," Test Unit Assertions assert_generates":{"type":"method","name":"assert_generates","children":[],"call":["expected_path == "," assert_block "," build_message ","found_extras == ","extra_keys include? ! ","extra_keys include? ","options reject ","ActionController Routing Routes  generate ","ActionController Routing Routes  reload ","ActionController Routing Routes  empty? ","expected_path [] == ","expected_path [] "," clean_backtrace ","generated_path join ","options [] ","request path_parameters [] ","request path_parameters ","request path_parameters= ","(or\n  (lvar :defaults)\n  (hash)) clone ","ActionController TestRequest  new ","generated_path join  join ","ActionController TestRequest  new  path_parameters [] ","ActionController TestRequest  new  path_parameters ","ActionController TestRequest  new  path_parameters= "]}," Test Unit Assertions assert_recognizes":{"type":"method","name":"assert_recognizes","children":[],"call":["request path_parameters == ","request path_parameters "," assert_block "," build_message ","expected_options stringify_keys! ","expected_options delete ","extras each_key ","extras nil? ","expected_options clone ","ActionController Routing Routes  recognize! ","request path= ","ActionController TestRequest  new ","ActionController Routing Routes  reload ","ActionController Routing Routes  empty? ","path [] == ","path [] "," clean_backtrace ","ActionController TestRequest  new  path_parameters == ","ActionController TestRequest  new  path_parameters ","expected_options clone  stringify_keys! ","expected_options clone  delete ","expected_options clone  clone ","ActionController TestRequest  new  path= "]}," Test Unit Assertions assert_template":{"type":"method","name":"assert_template","children":[],"call":["expected == ","@response rendered_with_file? ! ","@response rendered_with_file? ","expected nil? "," assert_block "," build_message ","@response rendered_file ","expected include? ! ","expected include? "," clean_backtrace ","@response @response rendered_file _with_file? ! ","@response @response rendered_file _with_file? ","@response @response rendered_file _file "]}," Test Unit Assertions assert_response":{"type":"method","name":"assert_response","children":[],"call":[" assert_block "," build_message ","@response response_code ","@response response_code == ","type is_a? ","@response send ","(sym :success) include? "," clean_backtrace "]}," CGI Session ActiveRecordStore model":{"type":"method","name":"model","children":[],"call":[]}," CGI Session method_missing":{"type":"method","name":"method_missing","children":[],"call":[" model send "," model "]}," CGI Session model":{"type":"method","name":"model","children":[],"call":["@dbman model "]}," ActionView Helpers TextHelper strip_tags":{"type":"method","name":"strip_tags","children":[],"call":["text gsub ","text << ","node to_s ","node class == ","node class ","HTML Node  parse ","tokenizer next ","HTML Tokenizer  new ","html index ","html blank? ","HTML Node  parse  to_s ","HTML Node  parse  class == ","HTML Node  parse  class ","tokenizer next izer next ","HTML Tokenizer  new  next "]}," ActionView Helpers AssetTagHelper reset_javascript_include_default":{"type":"method","name":"reset_javascript_include_default","children":[],"call":[]}," ActionView Helpers AssetTagHelper register_javascript_include_default":{"type":"method","name":"register_javascript_include_default","children":[],"call":[]}," CGI Session ActiveRecordStore Session loaded?":{"type":"method","name":"loaded?","children":[],"call":["@data ! ! ","@data ! "]}," ActionController Flash FlashNow []":{"type":"method","name":"[]","children":[],"call":["@flash [] "]}," ActionController Filters ClassMethods skip_after_filter":{"type":"method","name":"skip_after_filter","children":[],"call":[" write_inheritable_attribute "," read_inheritable_attribute - "," read_inheritable_attribute ","filters flatten "," add_action_conditions ","conditions [] ","conditions []= "," extract_conditions! "," remove_contradicting_conditions! "," skip_filter_in_chain "," filter_chain skip_filter_in_chain "," filter_chain "," add_action_ extract_conditions!  "," extract_conditions!  [] "," extract_conditions!  []= "," extract_ extract_conditions! ! "," remove_contradicting_ extract_conditions! ! "]}," ActionController Filters ClassMethods skip_before_filter":{"type":"method","name":"skip_before_filter","children":[],"call":[" write_inheritable_attribute "," read_inheritable_attribute - "," read_inheritable_attribute ","filters flatten "," add_action_conditions ","conditions [] ","conditions []= "," extract_conditions! "," remove_contradicting_conditions! "," skip_filter_in_chain "," filter_chain skip_filter_in_chain "," filter_chain "," add_action_ extract_conditions!  "," extract_conditions!  [] "," extract_conditions!  []= "," extract_ extract_conditions! ! "," remove_contradicting_ extract_conditions! ! "]}," CGI Session ActiveRecordStore Session raise_on_session_data_overflow!":{"type":"method","name":"raise_on_session_data_overflow!","children":[],"call":[" raise "," read_attribute size > "," read_attribute size "," read_attribute "," loaded? "," class data_column_size_limit "," class "," loaded? ! "," class data_column_size_ class data_column_size_limit  "]}," ActionController Helpers ClassMethods default_helper_module!":{"type":"method","name":"default_helper_module!","children":[],"call":[" logger debug "," name "," logger "," helper ","module_name constantize "," require_dependency ","(send\n  (send\n    (lvar :module_name) :split\n    (str \"::\")) :map) join ","m underscore ","module_name split map ","module_name split "," name sub sub "," name sub "," raise ","e missing_name? ","e is_missing? "," name blank? "," name sub sub  constantize "," name sub  constantize ","(send\n  (send\n    (lvar : name sub sub ) :split\n    (str \"::\")) :map) join ","(send\n  (send\n    (lvar : name sub ) :split\n    (str \"::\")) :map) join "," name sub sub  split map "," name sub  split map "," name sub sub  split "," name sub  split "]}," ActionController CgiRequest stale_session_check!":{"type":"method","name":"stale_session_check!","children":[],"call":[" raise ","const_error class ","const_error message ","Module  const_missing ","argument_error message =~ ","argument_error message ","1 constantize "]}," ActionView Helpers ScriptaculousHelper drop_receiving_element_js":{"type":"method","name":"drop_receiving_element_js","children":[],"call":[" options_for_javascript ","element_id to_json ","options []= ","options [] "," array_or_string_for_javascript ","PrototypeHelper AJAX_OPTIONS  include? ","options delete_if ","function(element){ + + ","function(element){ + "," remote_function ","options delete ","ActiveSupport JSON  encode "]}," ActionView Helpers ScriptaculousHelper drop_receiving_element":{"type":"method","name":"drop_receiving_element","children":[],"call":[" javascript_tag "," drop_receiving_element_js chop! "," drop_receiving_element_js "]}," ActionView Helpers ScriptaculousHelper draggable_element_js":{"type":"method","name":"draggable_element_js","children":[],"call":[" options_for_javascript ","element_id to_json ","ActiveSupport JSON  encode "]}," ActionView Helpers ScriptaculousHelper draggable_element":{"type":"method","name":"draggable_element","children":[],"call":[" javascript_tag "," draggable_element_js chop! "," draggable_element_js "]}," ActionView Helpers ScriptaculousHelper sortable_element_js":{"type":"method","name":"sortable_element_js","children":[],"call":[" options_for_javascript ","element_id to_json ","options []= "," array_or_string_for_javascript ","options [] ","(sym :tag) each ","PrototypeHelper AJAX_OPTIONS  include? ","options delete_if ","function(){ + + ","function(){ + "," remote_function ","ActiveSupport JSON  encode "]}," ActionView Helpers ScriptaculousHelper sortable_element":{"type":"method","name":"sortable_element","children":[],"call":[" javascript_tag "," sortable_element_js chop! "," sortable_element_js "]}," ActionView Helpers ScriptaculousHelper visual_effect":{"type":"method","name":"visual_effect","children":[],"call":[" options_for_javascript ","name to_s camelize ","name to_s ","name to_s gsub ","TOGGLE_EFFECTS  include? ","name to_sym ","js_options []= ","js_options [] ","{ + + ","{ + ","(send\n  (send\n    (lvar :js_options) :[]\n    (sym :queue)) :map) join ","k == ","js_options [] map ","js_options [] is_a? ","element_id to_json ","(sym :endcolor) each ","ActiveSupport JSON  encode ","element_id to_json _id to_json ","ActiveSupport JSON  encode _id to_json "]}," ActionView Helpers JavaScriptElementCollectionProxy initialize":{"type":"method","name":"initialize","children":[],"call":["pattern to_json "," ActiveSupport JSON  encode "]}," ActionView Helpers JavaScriptCollectionProxy append_enumerable_function!":{"type":"method","name":"append_enumerable_function!","children":[],"call":[" function_chain [] "," function_chain "," function_chain [] chomp! "]}," ActionView Helpers JavaScriptCollectionProxy add_return_statement!":{"type":"method","name":"add_return_statement!","children":[],"call":[" function_chain push "," function_chain pop chomp "," function_chain pop "," function_chain "," function_chain last =~ "," function_chain last "]}," ActionView Helpers JavaScriptCollectionProxy add_variable_assignment!":{"type":"method","name":"add_variable_assignment!","children":[],"call":[" function_chain push "," function_chain pop "," function_chain "]}," ActionView Helpers JavaScriptCollectionProxy enumerate":{"type":"method","name":"enumerate","children":[],"call":["@generator << "," add_return_statement! ","options [] ","(send\n  (send\n    (lvar :options) :[]\n    (sym :yield_args)) :collect) [] ","block arity - ","block arity ","JavaScriptVariableProxy  new ","options [] collect "," append_enumerable_function! ","enumerable to_s camelize ","enumerable to_s "," add_variable_assignment! ","method_args << ","method_args blank? "," arguments_for_call ","options [] * ","(send\n  (send\n    (lvar :options) :[]\n    (sym :options [] * )) :collect) [] "," arguments_for_call  << "," arguments_for_call  blank? "]}," ActionView Helpers JavaScriptCollectionProxy method_missing":{"type":"method","name":"method_missing","children":[],"call":[" enumerate ","arguments first ","ENUMERABLE_METHODS_WITH_RETURN  include? ","ENUMERABLE_METHODS  include? "]}," ActionView Helpers JavaScriptCollectionProxy zip":{"type":"method","name":"zip","children":[],"call":[" function_chain [] "," function_chain ","@generator << "," add_return_statement! ","ActiveSupport JSON Variable  new "," append_enumerable_function! "," arguments_for_call "," add_variable_assignment! "," ActiveSupport JSON Variable  new "]}," ActionView Helpers JavaScriptCollectionProxy pluck":{"type":"method","name":"pluck","children":[],"call":[" append_enumerable_function! ","property to_json "," add_variable_assignment! "," ActiveSupport JSON  encode "]}," ActionView Helpers JavaScriptCollectionProxy inject":{"type":"method","name":"inject","children":[],"call":[" enumerate "]}," ActionView Helpers JavaScriptCollectionProxy grep":{"type":"method","name":"grep","children":[],"call":[" enumerate "," ActiveSupport JSON Variable  new ","pattern inspect "]}," ActionView Helpers JavaScriptCollectionProxy initialize":{"type":"method","name":"initialize","children":[],"call":[]}," ActionView Helpers JavaScriptVariableProxy append_to_function_chain!":{"type":"method","name":"append_to_function_chain!","children":[],"call":["@generator << "]}," ActionView Helpers JavaScriptVariableProxy to_json":{"type":"method","name":"to_json","children":[],"call":[]}," ActionView Helpers JavaScriptVariableProxy respond_to?":{"type":"method","name":"respond_to?","children":[],"call":[]}," ActionView Helpers JavaScriptVariableProxy initialize":{"type":"method","name":"initialize","children":[],"call":[" ActiveSupport JSON Variable  new "]}," ActionView Helpers JavaScriptElementProxy reload":{"type":"method","name":"reload","children":[],"call":[" replace ","@id to_s ","options_for_replace merge "]}," ActionView Helpers JavaScriptElementProxy replace":{"type":"method","name":"replace","children":[],"call":[" call ","@generator send "]}," ActionView Helpers JavaScriptElementProxy replace_html":{"type":"method","name":"replace_html","children":[],"call":[" call ","@generator send "]}," ActionView Helpers JavaScriptElementProxy initialize":{"type":"method","name":"initialize","children":[],"call":["id to_json "," ActiveSupport JSON  encode "]}," ActionView Helpers JavaScriptProxy append_to_function_chain!":{"type":"method","name":"append_to_function_chain!","children":[],"call":[" function_chain [] "," function_chain "," function_chain [] chomp! "]}," ActionView Helpers JavaScriptProxy function_chain":{"type":"method","name":"function_chain","children":[],"call":["@generator instance_variable_get "]}," ActionView Helpers JavaScriptProxy assign":{"type":"method","name":"assign","children":[],"call":[" append_to_function_chain! ","@generator send "]}," ActionView Helpers JavaScriptProxy call":{"type":"method","name":"call","children":[],"call":[" append_to_function_chain! ","@generator send "]}," ActionView Helpers JavaScriptProxy method_missing":{"type":"method","name":"method_missing","children":[],"call":[" call ","method to_s camelize ","method to_s "," assign ","arguments first ","method to_s =~ "]}," ActionView Helpers JavaScriptProxy initialize":{"type":"method","name":"initialize","children":[],"call":["@generator << "]}," ActionView Helpers PrototypeHelper build_callbacks":{"type":"method","name":"build_callbacks","children":[],"call":["callbacks []= ","on + ","callback to_s capitalize ","callback to_s ","CALLBACKS  include? ","options each "]}," ActionView Helpers PrototypeHelper build_observer":{"type":"method","name":"build_observer","children":[],"call":[" javascript_tag ","javascript << ","options [] "," remote_function ","options []= ","options [] include? ! ","options [] include? ","options [] !~ "]}," ActionView Helpers PrototypeHelper method_option_to_s":{"type":"method","name":"method_option_to_s","children":[],"call":["method index nil? ! ","method index nil? ","method index ","method is_a? "]}," ActionView Helpers PrototypeHelper options_for_ajax":{"type":"method","name":"options_for_ajax","children":[],"call":[" options_for_javascript ","js_options []= ","options [] ","options [] nil? ","options [] to_s camelize ","options [] to_s "," method_option_to_s ","options [] != "," build_callbacks ","js_options [] << "," escape_javascript "," form_authenticity_token "," request_forgery_protection_token ","js_options [] "," protect_against_forgery? ","options [] ! ","options [] to_s downcase "," build_callbacks  []= "," build_callbacks  [] << "," build_callbacks  [] "]}," ActionView Helpers PrototypeHelper update_page_tag":{"type":"method","name":"update_page_tag","children":[],"call":[" javascript_tag "," update_page "]}," ActionView Helpers PrototypeHelper update_page":{"type":"method","name":"update_page","children":[],"call":["JavaScriptGenerator  new to_s ","JavaScriptGenerator  new ","JavaScriptGenerator  new to_s html_safe "," view_context "]}," ActionView Helpers PrototypeHelper JavaScriptGenerator GeneratorMethods method_missing":{"type":"method","name":"method_missing","children":[],"call":["JavaScriptProxy  new ","method to_s camelize ","method to_s "]}," ActionView Helpers PrototypeHelper JavaScriptGenerator GeneratorMethods arguments_for_call":{"type":"method","name":"arguments_for_call","children":[],"call":["(send\n  (lvar :arguments) :map) join "," javascript_object_for ","arguments map ","arguments << "," block_to_function "]}," ActionView Helpers PrototypeHelper JavaScriptGenerator GeneratorMethods javascript_object_for":{"type":"method","name":"javascript_object_for","children":[],"call":["object inspect ","object to_json ","object respond_to? "," ActiveSupport JSON  encode "]}," ActionView Helpers PrototypeHelper JavaScriptGenerator GeneratorMethods render":{"type":"method","name":"render","children":[],"call":["options_for_render first to_s ","options_for_render first ","@context render ","Hash  === ","@context template_format= ","@context template_format ","option to_s ","options first "," with_formats ","@context reset_formats ","@context formats ","options first s_for_render first to_s ","options first s_for_render first ","options first  to_s ","options first s first "]}," ActionView Helpers PrototypeHelper JavaScriptGenerator GeneratorMethods record":{"type":"method","name":"record","children":[],"call":[" << "," returning ","line to_s chomp gsub ","line to_s chomp ","line to_s ","(begin\n  (send\n    (send\n      (send\n        (lvar :line) :to_s) :chomp) :gsub\n    (regexp\n      (str \"\\\\;\\\\z\")\n      (regopt))\n    (str \"\"))) tap "]}," ActionView Helpers PrototypeHelper JavaScriptGenerator GeneratorMethods page":{"type":"method","name":"page","children":[],"call":[]}," ActionView Helpers PrototypeHelper JavaScriptGenerator GeneratorMethods drop_receiving":{"type":"method","name":"drop_receiving","children":[],"call":[" record ","@context send "]}," ActionView Helpers PrototypeHelper JavaScriptGenerator GeneratorMethods draggable":{"type":"method","name":"draggable","children":[],"call":[" record ","@context send "]}," ActionView Helpers PrototypeHelper JavaScriptGenerator GeneratorMethods sortable":{"type":"method","name":"sortable","children":[],"call":[" record ","@context send "]}," ActionView Helpers PrototypeHelper JavaScriptGenerator GeneratorMethods visual_effect":{"type":"method","name":"visual_effect","children":[],"call":[" record ","@context send "]}," ActionView Helpers PrototypeHelper JavaScriptGenerator GeneratorMethods delay":{"type":"method","name":"delay","children":[],"call":[" record ","(send\n  (lvar :seconds) :*\n  (int 1000)) to_i ","seconds * "]}," ActionView Helpers PrototypeHelper JavaScriptGenerator GeneratorMethods <<":{"type":"method","name":"<<","children":[],"call":["@lines << "]}," ActionView Helpers PrototypeHelper JavaScriptGenerator GeneratorMethods assign":{"type":"method","name":"assign","children":[],"call":[" record "," javascript_object_for "]}," ActionView Helpers PrototypeHelper JavaScriptGenerator GeneratorMethods call":{"type":"method","name":"call","children":[],"call":[" record "," arguments_for_call "]}," ActionView Helpers PrototypeHelper JavaScriptGenerator GeneratorMethods redirect_to":{"type":"method","name":"redirect_to","children":[],"call":[" assign ","@context url_for "," record ","url inspect ","location is_a? ","@context @context url_for _for ","@context url_for  inspect "]}," ActionView Helpers PrototypeHelper JavaScriptGenerator GeneratorMethods alert":{"type":"method","name":"alert","children":[],"call":[" call "]}," ActionView Helpers PrototypeHelper JavaScriptGenerator GeneratorMethods toggle":{"type":"method","name":"toggle","children":[],"call":[" call "," loop_on_multiple_args "]}," ActionView Helpers PrototypeHelper JavaScriptGenerator GeneratorMethods hide":{"type":"method","name":"hide","children":[],"call":[" call "," loop_on_multiple_args "]}," ActionView Helpers PrototypeHelper JavaScriptGenerator GeneratorMethods show":{"type":"method","name":"show","children":[],"call":[" call "," loop_on_multiple_args "]}," ActionView Helpers PrototypeHelper JavaScriptGenerator GeneratorMethods remove":{"type":"method","name":"remove","children":[],"call":[" record "," javascript_object_for "," loop_on_multiple_args "]}," ActionView Helpers PrototypeHelper JavaScriptGenerator GeneratorMethods replace":{"type":"method","name":"replace","children":[],"call":[" call "," render "]}," ActionView Helpers PrototypeHelper JavaScriptGenerator GeneratorMethods replace_html":{"type":"method","name":"replace_html","children":[],"call":[" call "," render "]}," ActionView Helpers PrototypeHelper JavaScriptGenerator GeneratorMethods insert_html":{"type":"method","name":"insert_html","children":[],"call":[" call "," render ","position to_s camelize ","position to_s "," record ","position to_s downcase "," javascript_object_for "]}," ActionView Helpers PrototypeHelper JavaScriptGenerator GeneratorMethods select":{"type":"method","name":"select","children":[],"call":["JavaScriptElementCollectionProxy  new "]}," ActionView Helpers PrototypeHelper JavaScriptGenerator GeneratorMethods []":{"type":"method","name":"[]","children":[],"call":["JavaScriptElementProxy  new ","ActionController RecordIdentifier  dom_id "]}," ActionView Helpers PrototypeHelper JavaScriptGenerator GeneratorMethods to_s":{"type":"method","name":"to_s","children":[],"call":["javascript << ","source gsub gsub ","source gsub ","javascript replace ","javascript dup ","ActionView Base  debug_rjs "," returning ","@lines * ","source gsub gsub gsub ","(send\n  (ivar :@lines) :*\n  (gvar :$/)) tap ","@lines *  << ","javascript dup  gsub gsub ","javascript dup  gsub ","@lines *  replace ","@lines *  dup ","javascript dup  gsub gsub gsub "]}," ActionView Helpers PrototypeHelper JavaScriptGenerator include_helpers_from_context":{"type":"method","name":"include_helpers_from_context","children":[],"call":[" extend ","mod name =~ ","mod name ","@context extended_by each ","@context extended_by ","@context helpers ","@context respond_to? "]}," ActionView Helpers PrototypeHelper JavaScriptGenerator initialize":{"type":"method","name":"initialize","children":[],"call":["@context instance_exec "," include_helpers_from_context ","@context with_output_buffer ","context _evaluate_assigns_and_ivars "]}," ActionView Helpers PrototypeHelper observe_form":{"type":"method","name":"observe_form","children":[],"call":[" build_observer ","options [] "]}," ActionView Helpers PrototypeHelper observe_field":{"type":"method","name":"observe_field","children":[],"call":[" build_observer ","options [] > ","options [] "]}," ActionView Helpers PrototypeHelper remote_function":{"type":"method","name":"remote_function","children":[],"call":[" escape_javascript ","options [] ","function << "," url_for ","url_options merge ","url_options is_a? ","update empty? ","update << ","{ + + ","{ + ","update join ","options [] [] ","options [] is_a? "," options_for_ajax ","function html_safe "," html_escape ","url_options merge  merge ","options []  merge ","url_options merge  is_a? ","options []  is_a? ","{ + +  empty? ","{ + +  << ","{ + +  join "]}," ActionView Helpers PrototypeHelper evaluate_remote_response":{"type":"method","name":"evaluate_remote_response","children":[],"call":[]}," ActionView Helpers PrototypeHelper update_element_function":{"type":"method","name":"update_element_function","children":[],"call":[" concat ","options [] ","javascript_function << "," raise ","options [] to_s camelize ","options [] to_s "," escape_javascript "," capture "]}," ActionView Helpers PrototypeHelper submit_to_remote":{"type":"method","name":"submit_to_remote","children":[],"call":[" tag ","options [] ","options [] []= "," remote_function "," button_to_remote ","html_options []= ","options delete "]}," ActionView Helpers PrototypeHelper remote_form_for":{"type":"method","name":"remote_form_for","children":[],"call":[" concat ","proc binding "," fields_for "," form_remote_tag ","args << ","args pop ","args last is_a? ","args last ","args unshift "," apply_form_for_options! ","ActionController RecordIdentifier  singular_class_name ","record_or_name_or_array last ","args extract_options! ","</form> html_safe ","</form> html_safe! "," apply_form_for_args pop ! "," apply_form_for_args extract_options! ! ","args extract_args pop ! ","args extract_args extract_options! ! "]}," ActionView Helpers PrototypeHelper form_remote_tag":{"type":"method","name":"form_remote_tag","children":[],"call":[" tag ","options [] ","options [] []= ","options [] [] "," url_for "," remote_function ","options []= "," form_tag ","options [] delete ","(if\n  (send\n    (send\n      (lvar :options) :[]\n      (sym :html)) :[]\n    (sym :onsubmit))\n  (send\n    (send\n      (send\n        (lvar :options) :[]\n        (sym :html)) :[]\n      (sym :onsubmit)) :+\n    (str \"; \"))\n  (str \"\")) + ","options [] [] + "]}," ActionView Helpers PrototypeHelper periodically_call_remote":{"type":"method","name":"periodically_call_remote","children":[],"call":[" javascript_tag "," remote_function ","options [] "]}," ActionView Helpers PrototypeHelper link_to_remote":{"type":"method","name":"link_to_remote","children":[],"call":[" link_to_function "," remote_function ","options delete "]}," ActionView Helpers JavaScriptHelper button_to_function":{"type":"method","name":"button_to_function","children":[],"call":[" tag ","html_options merge ","(if\n  (send\n    (lvar :html_options) :[]\n    (sym :onclick))\n  (dstr\n    (begin\n      (send\n        (lvar :html_options) :[]\n        (sym :onclick)))\n    (str \"; \"))\n  (str \"\")) + ","html_options [] ","html_options symbolize_keys! "," update_page "," block_given? ","args [] ","args pop ","args last is_a? ","args last ","args extract_options! ","args extract_options! symbolize_keys ","ActiveSupport Deprecation  warn ","button_to_function is deprecated and will be removed from Rails 4.1. We recommend using Unobtrusive JavaScript instead.  + ","button_to_function is deprecated and will be removed from Rails 4.1. We recomend to use Unobtrusive JavaScript instead.  + ","args pop  merge ","args extract_options!  merge ","args extract_options! symbolize_keys  merge ","(if\n  (send\n    (lvar :args pop ) :[]\n    (sym :onclick))\n  (dstr\n    (begin\n      (send\n        (lvar :args pop ) :[]\n        (sym :onclick)))\n    (str \"; \"))\n  (str \"\")) + ","(if\n  (send\n    (lvar :args extract_options! ) :[]\n    (sym :onclick))\n  (dstr\n    (begin\n      (send\n        (lvar :args extract_options! ) :[]\n        (sym :onclick)))\n    (str \"; \"))\n  (str \"\")) + ","(if\n  (send\n    (lvar :args extract_options! symbolize_keys ) :[]\n    (sym :onclick))\n  (dstr\n    (begin\n      (send\n        (lvar :args extract_options! symbolize_keys ) :[]\n        (sym :onclick)))\n    (str \"; \"))\n  (str \"\")) + ","args pop  [] ","args extract_options!  [] ","args extract_options! symbolize_keys  [] ","args pop  symbolize_keys! ","args extract_options!  symbolize_keys! ","args extract_options! symbolize_keys  symbolize_keys! ","button_to_ update_page  is deprecated and will be removed from Rails 4.1. We recommend using Unobtrusive JavaScript instead.  + ","button_to_ update_page  is deprecated and will be removed from Rails 4.1. We recomend to use Unobtrusive JavaScript instead.  + "]}," ActionView Helpers FormBuilder time_zone_select":{"type":"method","name":"time_zone_select","children":[],"call":["@template time_zone_select ","options merge ","@default_options merge "," objectify_options "]}," ActionView Helpers FormBuilder country_select":{"type":"method","name":"country_select","children":[],"call":["@template country_select ","options merge "]}," ActionView Helpers FormBuilder collection_select":{"type":"method","name":"collection_select","children":[],"call":["@template collection_select ","options merge ","@default_options merge "," objectify_options "]}," ActionView Helpers FormBuilder select":{"type":"method","name":"select","children":[],"call":["@template select ","options merge ","@default_options merge "," objectify_options "]}," ActionView Helpers FormBuilder radio_button":{"type":"method","name":"radio_button","children":[],"call":["@template radio_button ","options merge "," objectify_options "]}," ActionView Helpers FormBuilder check_box":{"type":"method","name":"check_box","children":[],"call":["@template check_box ","options merge "," objectify_options "]}," ActionView Helpers FormBuilder initialize":{"type":"method","name":"initialize","children":[],"call":["@options slice "," raise ","object inspect ","object to_param ","object respond_to? ","@template instance_variable_get ","Regexp  last_match pre_match ","Regexp  last_match ","@object_name to_s match ","@object_name to_s ","options [] ","ActiveSupport Deprecation  warn "]}," ActionView Helpers FormHelper fields_for":{"type":"method","name":"fields_for","children":[],"call":["(or\n  (send\n    (lvar :options) :[]\n    (sym :builder))\n  (const nil :FormBuilder)) new ","options [] ","args first ","args pop ","args last is_a? ","args last "," raise "," block_given? ","builder new ","ActionView Base  default_form_builder ","ActionController RecordIdentifier  singular_class_name "," apply_form_for_options! ","record_or_name_or_array last ","args extract_options! "," capture ","ActiveModel Naming  singular "," with_output_buffer ","output concat ","builder hidden_field ","builder emitted_hidden_id? ! ","builder emitted_hidden_id? "," instantiate_builder ","(or\n  (send\n    (lvar :args pop ) :[]\n    (sym :builder))\n  (const nil :FormBuilder)) new ","(or\n  (send\n    (lvar :args extract_options! ) :[]\n    (sym :builder))\n  (const nil :FormBuilder)) new ","(or\n  (send\n    (lvar :options) :[]\n    (sym :builder new ))\n  (const nil :FormBuilder)) new ","(or\n  (send\n    (lvar :options) :[]\n    (sym : instantiate_builder ))\n  (const nil :FormBuilder)) new ","args pop  [] ","args extract_options!  [] ","builder new  new "," instantiate_builder  new ","ActionView Base  default_form_builder new  ","ActionView Base  default_form_ instantiate_builder  "," apply_form_for_args pop ! "," apply_form_for_args extract_options! ! ","args extract_args pop ! ","args extract_args extract_options! ! "," with_ capture _buffer "," capture  concat ","builder new  hidden_field "," instantiate_builder  hidden_field ","builder new  emitted_hidden_id? ! "," instantiate_builder  emitted_hidden_id? ! ","builder new  emitted_hidden_id? "," instantiate_builder  emitted_hidden_id? "," instantiate_builder new  "," instantiate_ instantiate_builder  "]}," ActionView Helpers FormHelper form_for":{"type":"method","name":"form_for","children":[],"call":[" concat ","proc binding "," fields_for ","args << "," form_tag ","options delete ","args pop ","args last is_a? ","args last "," raise "," block_given? ","args unshift "," apply_form_for_options! ","ActionController RecordIdentifier  singular_class_name ","record_or_name_or_array last ","args extract_options! ","</form> html_safe ","</form> html_safe! ","output safe_concat ","output << ","(or-asgn\n  (send\n    (lvar :options) :[]\n    (sym :html))\n  (hash)) []= ","options [] ","ActiveModel Naming  singular ","ActiveSupport Deprecation  warn "," caller ","args empty? "," safe_concat ","options [] []= ","default_options merge! ","builder multipart? ","options []= "," instantiate_builder ","options has_key? ","ActiveModel Naming  param_key ","record last ","record is_a? "," capture ","html_options [] ","html_options []= "," model_name_from_record_or_class param_key "," model_name_from_record_or_class ","  fields_for  ","args pop  delete ","args extract_options!  delete "," apply_form_for_args pop ! "," apply_form_for_args extract_options! ! ","args extract_args pop ! ","args extract_args extract_options! ! "," form_tag  safe_concat "," capture  safe_concat "," form_tag  << "," capture  << ","(or-asgn\n  (send\n    (lvar :args pop ) :[]\n    (sym :html))\n  (hash)) []= ","(or-asgn\n  (send\n    (lvar :args extract_options! ) :[]\n    (sym :html))\n  (hash)) []= ","args pop  [] ","args extract_options!  [] ","args pop  [] []= ","args extract_options!  [] []= ","default_args pop  merge! ","default_args extract_options!  merge! ","options []=  multipart? "," instantiate_builder  multipart? ","args pop  []= ","args extract_options!  []= "," instantiate_options []=  "," instantiate_ instantiate_builder  ","args pop  has_key? ","args extract_options!  has_key? ","html_args pop  [] ","html_args extract_options!  [] ","html_args pop  []= ","html_args extract_options!  []= "]}," ActionView Helpers FormBuilder datetime_select":{"type":"method","name":"datetime_select","children":[],"call":["@template datetime_select ","options merge "," objectify_options "]}," ActionView Helpers FormBuilder date_select":{"type":"method","name":"date_select","children":[],"call":["@template date_select ","options merge "," objectify_options "]}," ActionView Helpers CaptureHelper block_content_for":{"type":"method","name":"block_content_for","children":[],"call":[" eval "]}," ActionView Helpers CaptureHelper erb_content_for":{"type":"method","name":"erb_content_for","children":[],"call":[" eval "]}," ActionView Helpers CaptureHelper capture_erb_with_buffer":{"type":"method","name":"capture_erb_with_buffer","children":[],"call":["buffer []= ","buffer [] ","block call ","buffer length "]}," ActionView Helpers CaptureHelper capture_erb":{"type":"method","name":"capture_erb","children":[],"call":[" capture_erb_with_buffer "," eval ","block binding ","ActionView Base  erb_variable "," capture_erb_with_ eval  "]}," ActionView Helpers CaptureHelper capture_block":{"type":"method","name":"capture_block","children":[],"call":["block call "]}," XmlNodeList method_missing":{"type":"method","name":"method_missing","children":[],"call":[" [] __send__ "," [] ","name to_s ","name to_s  to_s "]}," XmlNodeList []=":{"type":"method","name":"[]=","children":[],"call":[" [] []= "," [] ","i is_a? "]}," XmlNodeList []":{"type":"method","name":"[]","children":[],"call":["(int 0) [] ","i is_a? "]}," XmlNode to_i":{"type":"method","name":"to_i","children":[],"call":[" to_s to_i "," to_s "]}," XmlNode to_s":{"type":"method","name":"to_s","children":[],"call":["@node to_s "]}," XmlNode []=":{"type":"method","name":"[]=","children":[],"call":["@node attributes []= ","name to_s ","@node attributes "]}," XmlNode []":{"type":"method","name":"[]","children":[],"call":["@node attributes [] ","name to_s ","@node attributes "]}," XmlNode <<":{"type":"method","name":"<<","children":[],"call":["XmlNode  new ","@children [] ","@node add_element ","node node ","node respond_to? ","node is_a? ","@node node ren [] "]}," XmlNode method_missing":{"type":"method","name":"method_missing","children":[],"call":["nodes << ","XmlNode  new ","@children [] ","XmlNodeList  new ","@node each_element ","name to_s ","name to_s  to_s "]}," XmlNode xpath":{"type":"method","name":"xpath","children":[],"call":["matches << ","XmlNode  new ","@children [] ","XmlNodeList  new ","REXML XPath  each "]}," XmlNode node_value=":{"type":"method","name":"node_value=","children":[],"call":["@node text= "]}," XmlNode node_value":{"type":"method","name":"node_value","children":[],"call":["@node text "]}," XmlNode node_name":{"type":"method","name":"node_name","children":[],"call":["@node name "]}," XmlNode node_encoding":{"type":"method","name":"node_encoding","children":[],"call":["@node encoding "]}," XmlNode from_xml":{"type":"method","name":"from_xml","children":[],"call":[]}," XmlNode initialize":{"type":"method","name":"initialize","children":[],"call":["options [] "]}," HTML CDATA to_s":{"type":"method","name":"to_s","children":[],"call":[]}," ActionController TestProcess with_routing":{"type":"method","name":"with_routing","children":[],"call":["ActionController Routing  const_set ","ActionController Routing  send ","ActionController Routing  const_defined? ","ActionController Routing RouteSet  new "," remove_const ","ActionController Routing  module_eval "," const_set "]}," ActionController TestProcess fixture_file_upload":{"type":"method","name":"fixture_file_upload","children":[],"call":["ActionController TestUploadedFile  new ","Test Unit TestCase  fixture_path + ","Test Unit TestCase  fixture_path ","Test Unit TestCase  respond_to? ","ActionController TestCase  send ","ActionController TestCase  respond_to? ","Test Unit TestCase  ActionController TestCase  send  + ","Test Unit TestCase  ActionController TestCase  send  "]}," ActionController TestProcess method_missing":{"type":"method","name":"method_missing","children":[],"call":["@controller send ","ActionController Routing NamedRoutes Helpers  include? ","ActionController Routing Routes  named_routes helpers include? ","ActionController Routing Routes  named_routes helpers ","ActionController Routing Routes  named_routes ","@controller send! "]}," ActionController TestProcess find_all_tag":{"type":"method","name":"find_all_tag","children":[],"call":[" html_document find_all "," html_document "]}," ActionController TestProcess find_tag":{"type":"method","name":"find_tag","children":[],"call":[" html_document find "," html_document "]}," ActionController TestProcess html_document":{"type":"method","name":"html_document","children":[],"call":["HTML Document  new ","@response body ","@response content_type =~ ","@response content_type "]}," ActionController TestProcess build_request_uri":{"type":"method","name":"build_request_uri","children":[],"call":["@request set_REQUEST_URI ","url rewrite ","ActionController UrlRewriter  new ","options update ","@controller send ","@request env [] ","@request env ","@request request_uri= ","@request request_uri_overridden ","@controller send! ","@controller __send__ ","ActionController UrlRewriter  new  rewrite ","@controller send  update ","@controller send!  update ","@controller __send__  update "]}," ActionController TestProcess redirect_to_url":{"type":"method","name":"redirect_to_url","children":[],"call":["@response redirect_url "]}," ActionController TestProcess cookies":{"type":"method","name":"cookies","children":[],"call":["@response cookies "]}," ActionController TestProcess flash":{"type":"method","name":"flash","children":[],"call":["@response flash "]}," ActionController TestProcess session":{"type":"method","name":"session","children":[],"call":["@response session ","@request session "]}," ActionController TestProcess assigns":{"type":"method","name":"assigns","children":[],"call":["@response template assigns [] ","key to_s ","@response template assigns ","@response template ","key nil? "]}," ActionController TestProcess follow_redirect":{"type":"method","name":"follow_redirect","children":[],"call":[" get ","@response redirected_to stringify_keys ","@response redirected_to ","@response redirected_to delete "," raise ","@response redirected_to [] ","@controller controller_name ","redirected_controller != ","@response redirected_to []  != "]}," ActionController TestProcess xml_http_request":{"type":"method","name":"xml_http_request","children":[],"call":["@request env delete ","@request env "," returning "," send ","@request env []= "," send! "," __send__ "," __send__ tap ","(const\n  (const nil :Mime) :JS) join "]}," ActionController TestProcess process":{"type":"method","name":"process","children":[],"call":["@controller process "," build_request_uri ","@request session []= ","ActionController Flash FlashHash  new update ","ActionController Flash FlashHash  new ","@request session ","@request session= ","ActionController TestSession  new ","session nil? ","@request assign_parameters ","action to_s ","@controller class controller_path ","@controller class ","@request action= ","@request env [] ","@request env ","@request recycle! "," raise "," instance_variable_get nil? "," instance_variable_get ","(str \"controller\") each "," instance_variables include? ! "," instance_variables include? "," instance_variables ","(str \"@controller\") each ","(or\n  (send\n    (send nil :instance_variables) :include?\n    (lvar :iv_name))\n  (send\n    (send nil :instance_variables) :include?\n    (send\n      (lvar :iv_name) :to_sym))) ! ","iv_name to_sym ","(or\n  (send\n    (send nil :instance_variable_names) :include?\n    (lvar :iv_name))\n  (send\n    (send nil :instance_variable_names) :include?\n    (send\n      (lvar :iv_name) :to_sym))) ! "," instance_variable_names include? "," instance_variable_names ","@response recycle! ","@controller process_with_test "," include ","Base  class_eval ","Base  < ","@request env []= "]}," ActionController TestProcess included":{"type":"method","name":"included","children":[],"call":[]}," ActionController TestUploadedFile method_missing":{"type":"method","name":"method_missing","children":[],"call":["@tempfile send ","@tempfile send! ","@tempfile __send__ "]}," ActionController TestUploadedFile path":{"type":"method","name":"path","children":[],"call":["@tempfile path "]}," ActionController TestUploadedFile initialize":{"type":"method","name":"initialize","children":[],"call":["FileUtils  copy_file ","@tempfile path ","Tempfile  new ","path sub "," raise ","File  exist? ","@tempfile binmode ","@tempfile set_encoding ","@tempfile respond_to? ","Tempfile  new  path ","Tempfile  new  binmode ","Tempfile  new  set_encoding ","Tempfile  new  respond_to? "]}," ActionController TestResponseBehavior binary_content":{"type":"method","name":"binary_content","children":[],"call":["sio read ","sio rewind "," body call "," body ","StringIO  new "," require "," raise "," body inspect "," body kind_of? ","StringIO  new  read ","StringIO  new  rewind "]}," ActionController TestResponseBehavior cookies":{"type":"method","name":"cookies","children":[],"call":["hash []= ","cookie name "," headers [] inject "," headers [] "," headers ","cookies []= ","Rack Utils  unescape ","cookie split first split map ","cookie split first split ","cookie split first ","cookie split "," Array each "," Array "]}," ActionController TestResponseBehavior has_template_object?":{"type":"method","name":"has_template_object?","children":[],"call":[" template_objects [] nil? ! "," template_objects [] nil? "," template_objects [] "," template_objects "]}," ActionController TestResponseBehavior template_objects":{"type":"method","name":"template_objects","children":[],"call":[" template assigns "," template "]}," ActionController TestResponseBehavior has_session_object?":{"type":"method","name":"has_session_object?","children":[],"call":[" session [] nil? ! "," session [] nil? "," session [] "," session "]}," ActionController TestResponseBehavior has_flash_object?":{"type":"method","name":"has_flash_object?","children":[],"call":[" flash [] nil? ! "," flash [] nil? "," flash [] "," flash "]}," ActionController TestResponseBehavior has_flash_with_contents?":{"type":"method","name":"has_flash_with_contents?","children":[],"call":[" flash empty? ! "," flash empty? "," flash "]}," ActionController TestResponseBehavior has_flash?":{"type":"method","name":"has_flash?","children":[],"call":[" session [] empty? ! "," session [] empty? "," session [] "," session "," flash empty? ! "," flash empty? "," flash "]}," ActionController TestResponseBehavior flash":{"type":"method","name":"flash","children":[],"call":[" session [] "," session "]}," ActionController TestResponseBehavior rendered_with_file?":{"type":"method","name":"rendered_with_file?","children":[],"call":[" rendered_file nil? ! "," rendered_file nil? "," rendered_file "]}," ActionController TestResponseBehavior rendered_file":{"type":"method","name":"rendered_file","children":[],"call":[" template first_render "," template "," template first_render split last "," template first_render split "," template first_render nil? "]}," ActionController TestResponseBehavior redirect_url_match?":{"type":"method","name":"redirect_url_match?","children":[],"call":["p match != ","p match "," redirect_url ","p nil? ","pattern class == ","pattern class ","Regexp  new "," redirect_url nil? ","Regexp  new  match != ","Regexp  new  match ","Regexp  new  nil? ","Regexp  new attern class == ","Regexp  new attern class ","RegexRegexp  new   new "]}," ActionController TestResponseBehavior redirect_url":{"type":"method","name":"redirect_url","children":[],"call":[" headers [] "," headers "," redirect? "]}," ActionController TestResponseBehavior error?":{"type":"method","name":"error?","children":[],"call":["(irange\n  (int 500)\n  (int 599)) include? "," response_code "]}," ActionController TestResponseBehavior redirect?":{"type":"method","name":"redirect?","children":[],"call":["(irange\n  (int 300)\n  (int 399)) include? "," response_code "]}," ActionController TestResponseBehavior missing?":{"type":"method","name":"missing?","children":[],"call":[" response_code == "," response_code "]}," ActionController TestResponseBehavior success?":{"type":"method","name":"success?","children":[],"call":[" response_code == "," response_code ","(irange\n  (int 200)\n  (int 299)) include? "]}," ActionController TestResponseBehavior message":{"type":"method","name":"message","children":[],"call":[" headers [] to_s split [] "," headers [] to_s split "," headers [] to_s "," headers [] "," headers "," status to_s split [] "," status to_s split "," status to_s "," status "]}," ActionController TestResponseBehavior code":{"type":"method","name":"code","children":[],"call":[" headers [] to_s split [] "," headers [] to_s split "," headers [] to_s "," headers [] "," headers "," status to_s split [] "," status to_s split "," status to_s "," status "]}," ActionController TestResponseBehavior response_code":{"type":"method","name":"response_code","children":[],"call":[" headers [] [] to_i "," headers [] [] "," headers [] "," headers "," status [] to_i "," status [] "," status "," status to_s [] to_i "," status to_s [] "," status to_s "]}," ActionController TestRequest raw_post":{"type":"method","name":"raw_post","children":[],"call":["(send\n  (lvar :params) :map) sort join ","(send\n  (lvar :params) :map) sort ","(send\n  (const nil :CGI) :escape\n  (send\n    (lvar :k) :to_s)) join ","CGI  escape ","v to_s ","k to_s ","params map ","params delete ","k to_sym ","(str \"controller\") each "," request_parameters dup "," request_parameters "," env [] "," env "," url_encoded_request_parameters ","b force_encoding ","b respond_to? "," returning ","data force_encoding ","data respond_to? ","@env [] ","(send\n  (lvar : request_parameters dup ) :map) sort join ","(send\n  (lvar : request_parameters dup ) :map) sort "," request_parameters dup  map "," request_parameters dup  delete "," url_encoded_request_parameters  force_encoding "," url_encoded_request_parameters  respond_to? "]}," ActionController SessionManagement clear_persistent_model_associations":{"type":"method","name":"clear_persistent_model_associations","children":[],"call":["obj clear_association_cache ","obj respond_to? ","session_data each_value ","session_data respond_to? ","@session instance_variable_get ","@session instance_variables include? ","@session instance_variables ","@_session data ","@_session respond_to? ","@session instance_variable_get  each_value ","@_session data  each_value ","@session instance_variable_get  respond_to? ","@_session data  respond_to? "]}," ActionController SessionManagement process_cleanup_with_session_management_support":{"type":"method","name":"process_cleanup_with_session_management_support","children":[],"call":[" clear_persistent_model_associations "," process_cleanup_without_session_management_support "]}," ActionController SessionManagement set_session_options":{"type":"method","name":"set_session_options","children":[],"call":["request session_options= "," class session_options_for ","request parameters [] ","request parameters "," class "]}," ActionController SessionManagement included":{"type":"method","name":"included","children":[],"call":[]}," CGI Session ActiveRecordStore logger":{"type":"method","name":"logger","children":[],"call":["ActionController Base  logger "]}," CGI Session ActiveRecordStore SqlBypass loaded?":{"type":"method","name":"loaded?","children":[],"call":["@data ! ! ","@data ! "]}," ActionController AbstractRequest session=":{"type":"method","name":"session=","children":[],"call":[]}," ActionController AbstractRequest accepts":{"type":"method","name":"accepts","children":[],"call":["Mime Type  parse ","@env [] "," content_type ","@env [] to_s strip empty? ","@env [] to_s strip ","@env [] to_s ","(send nil :content_type) compact ","header empty? ","@env [] to_s strip  empty? "]}," ActionController AbstractRequest content_type":{"type":"method","name":"content_type","children":[],"call":["Mime Type  lookup ","x_post_format to_s downcase ","x_post_format to_s ","@env [] ","@env [] to_s downcase ","@env [] to_s "," content_type_without_parameters ","@env []  to_s downcase ","@env []  to_s "," @env [] to_s downcase _without_parameters "]}," Mime Type ==":{"type":"method","name":"==","children":[],"call":["synonym to_s == ","mime_type to_s ","synonym to_s ","(send\n  (ivar :@synonyms) :+\n  (array\n    (self))) any? ","@synonyms + ","synonym to_sym == ","mime_type to_sym ","synonym to_sym ","mime_type blank? "]}," Mime Type ===":{"type":"method","name":"===","children":[],"call":["list include? ","(send\n  (ivar :@synonyms) :+\n  (array\n    (self))) any? ","@synonyms + ","list is_a? "]}," Mime Type to_sym":{"type":"method","name":"to_sym","children":[],"call":["@string to_sym "]}," Mime Type to_str":{"type":"method","name":"to_str","children":[],"call":[" to_s "]}," Mime Type to_s":{"type":"method","name":"to_s","children":[],"call":[]}," Mime Type initialize":{"type":"method","name":"initialize","children":[],"call":["(ivar :@string) hash "," raise ","string inspect ","MIME_REGEXP  match? ","MIME_REGEXP  match? ! ","string nil? "]}," Mime Type parse":{"type":"method","name":"parse","children":[],"call":["(send\n  (lvar :list) :map!) uniq! ","Mime Type  lookup ","i name ","list map! ","list [] ","list []= ","type name =~ ","type name ","type q < ","app_xml_type q ","type q ","idx < ","list length ","list [] name= ","list delete_at ","app_xml > ","list [] q= ","(send\n  (send\n    (lvar :list) :[]\n    (lvar :text_xml)) :q) max ","list [] q ","list index ","(send\n  (send\n    (lvar :accept_header) :split\n    (regexp\n      (str \",\")\n      (regopt))) :map!) sort! ","AcceptItem  new ","i split ","accept_header split map! ","accept_header split ","Mime XML  to_s ","list sort! ","list << ","params empty? ","header split ","accept_header split each_with_index ","params strip! ","accept_header !~ ","m to_s "," parse_data_with_trailing_star each "," parse_data_with_trailing_star ","params =~ ","params present? ","accept_header split each ","accept_header =~ ","accept_header split first ","list assort! ","params each "," parse_trailing_star ","AcceptList  new ","(send\n  (const\n    (const nil :Mime) :Type) :lookup\n  (lvar :accept_header)) compact ","accept_header include? ! ","accept_header include? ","AcceptList  sort! ","accept_header scan each ","accept_header scan "," Array ","accept_header blank? ","accept_header [] ","accept_header index ","(send\n  (lvar :(send\n  (send\n    (lvar :accept_header) :split\n    (regexp\n      (str \",\")\n      (regopt))) :map!) sort! ) :map!) uniq! ","(send\n  (send\n    (lvar :accept_header) :split\n    (regexp\n      (str \",\")\n      (regopt))) :map!) sort!  map! ","(send\n  (send\n    (lvar :accept_header) :split\n    (regexp\n      (str \",\")\n      (regopt))) :map!) sort!  [] ","(send\n  (send\n    (lvar :accept_header) :split\n    (regexp\n      (str \",\")\n      (regopt))) :map!) sort!  []= ","list []  name =~ ","list []  name ","list []  q < ","app_xml_list []  q ","list []  q ","list index _type q ","(send\n  (send\n    (lvar :accept_header) :split\n    (regexp\n      (str \",\")\n      (regopt))) :map!) sort!  length ","(send\n  (send\n    (lvar :accept_header) :split\n    (regexp\n      (str \",\")\n      (regopt))) :map!) sort!  [] name= ","(send\n  (send\n    (lvar :accept_header) :split\n    (regexp\n      (str \",\")\n      (regopt))) :map!) sort!  delete_at ","list index  > ","(send\n  (send\n    (lvar :accept_header) :split\n    (regexp\n      (str \",\")\n      (regopt))) :map!) sort!  [] q= ","(send\n  (send\n    (lvar :list) :[]\n    (lvar :list index )) :q) max ","(send\n  (send\n    (lvar :(send\n  (send\n    (lvar :accept_header) :split\n    (regexp\n      (str \",\")\n      (regopt))) :map!) sort! ) :[]\n    (lvar :text_xml)) :q) max ","(send\n  (send\n    (lvar :accept_header) :split\n    (regexp\n      (str \",\")\n      (regopt))) :map!) sort!  [] q ","(send\n  (send\n    (lvar :accept_header) :split\n    (regexp\n      (str \",\")\n      (regopt))) :map!) sort!  index ","list accept_header index  ","(send\n  (send\n    (lvar :accept_header split first ) :split\n    (regexp\n      (str \",\")\n      (regopt))) :map!) sort! ","(send\n  (send\n    (lvar :accept_header [] ) :split\n    (regexp\n      (str \",\")\n      (regopt))) :map!) sort! ","accept_header split first  split map! ","accept_header []  split map! ","accept_header split first  split ","accept_header []  split ","(send\n  (send\n    (lvar :accept_header) :split\n    (regexp\n      (str \",\")\n      (regopt))) :map!) sort!  sort! ","(send\n  (send\n    (lvar :accept_header) :split\n    (regexp\n      (str \",\")\n      (regopt))) :map!) sort!  << ","header split  empty? ","accept_header split first  split each_with_index ","accept_header []  split each_with_index ","accept_header split each_with_accept_header index  ","header split  strip! ","accept_header split first  !~ ","accept_header []  !~ ","header split  =~ ","header split  present? ","accept_header split first  split each ","accept_header []  split each ","accept_header split first  =~ ","accept_header []  =~ ","accept_header split first  split first ","accept_header []  split first ","(send\n  (send\n    (lvar :accept_header) :split\n    (regexp\n      (str \",\")\n      (regopt))) :map!) sort!  assort! ","header split  each ","(send\n  (const\n    (const nil :Mime) :Type) :lookup\n  (lvar :accept_header split first )) compact ","(send\n  (const\n    (const nil :Mime) :Type) :lookup\n  (lvar :accept_header [] )) compact ","accept_header split first  include? ! ","accept_header []  include? ! ","accept_header split first  include? ","accept_header []  include? ","accept_header split first  scan each ","accept_header []  scan each ","accept_header split first  scan ","accept_header []  scan ","accept_header split first  blank? ","accept_header []  blank? ","accept_header split first  [] ","accept_header []  [] ","accept_header split first  index ","accept_header []  index ","accept_header accept_header index  "]}," Mime Type lookup":{"type":"method","name":"lookup","children":[],"call":["LOOKUP  [] ","Type  new ","string split [] ","string split "]}," Mime Type AcceptItem ==":{"type":"method","name":"==","children":[],"call":[" name == ","item name ","item respond_to? "," name ","@name == ","item to_s "]}," Mime Type AcceptItem <=>":{"type":"method","name":"<=>","children":[],"call":[" order <=> ","item order "," order ","result == ","item q <=> "," q ","item q ","@index <=> ","item index "," order <=>  == ","item q <=>  == ","@index <=>  == "]}," Mime Type AcceptItem to_s":{"type":"method","name":"to_s","children":[],"call":[]}," Mime Type AcceptItem initialize":{"type":"method","name":"initialize","children":[],"call":["(send\n  (send\n    (begin\n      (or\n        (lvar :q)\n        (float 1.0))) :to_f) :*\n  (int 100)) to_i ","(or\n  (lvar :q)\n  (float 1.0)) to_f * ","(or\n  (lvar :q)\n  (float 1.0)) to_f ","@name == ","name strip ","Mime ALL  to_s ","*/* freeze ","name strip  == "]}," ActionController MimeResponds Responder respond":{"type":"method","name":"respond","children":[],"call":[" eval ","@responses [] call ","@responses [] ","@order include? ","priority === ","@order first ","priority == ","@controller send "]}," ActionController MimeResponds Responder any":{"type":"method","name":"any","children":[],"call":[" send ","args each "," custom ","@mime_type_priority first ","args any? "]}," ActionController MimeResponds Responder custom":{"type":"method","name":"custom","children":[],"call":["@responses []= "," eval ","DEFAULT_BLOCKS  [] ","mime_type to_sym "," block_given? ","@order << ","Mime Type  lookup ","mime_type to_s ","mime_type is_a? "," raise ","block call ","Proc  new ","@controller send ","@controller action_name ","@response content_type= ","@response template template_format= ","@response template ","@responses [] ","Mime Type  lookup  to_sym ","Mime Type  lookup  to_s ","Mime Type  lookup  is_a? "]}," ActionController MimeResponds Responder initialize":{"type":"method","name":"initialize","children":[],"call":[" eval ","(params[:format] && Mime::EXTENSION_LOOKUP[params[:format]]) ?  + "," Array ","@request accepts ","Mime Type  lookup_by_extension ","@request parameters [] ","@request parameters ","controller response ","controller request ","@request format ","ActionController Base  use_accept_header ","controller request  accepts ","controller request  parameters [] ","controller request  parameters ","controller request  format "]}," ActionController MimeResponds InstanceMethods respond_to":{"type":"method","name":"respond_to","children":[],"call":["responder respond ","block call ","Responder  new ","block binding ","responder send ","types each "," lambda "," raise ","types any? ^ ","types any? ","Responder  new  respond ","Responder  new  send "]}," ActionController MimeResponds included":{"type":"method","name":"included","children":[],"call":[]}," ActionController Layout layout_directory?":{"type":"method","name":"layout_directory?","children":[],"call":[" class send [] "," class send "," class ","File  dirname ","File  join "," class view_root "," class send! [] "," class send! ","Dir  [] first ","Dir  [] ","File  join + "," view_paths find "," view_paths ","@template finder find_template_extension_from_handler ","@template finder ","@template __send__ ","@template template_format ","File  File  dirname  "]}," ActionController Layout candidate_for_layout?":{"type":"method","name":"candidate_for_layout?","children":[],"call":[" template_exempt_from_layout? ! "," template_exempt_from_layout? "," default_template_name ","options [] ","options values_at compact empty? ","options values_at compact ","options values_at ","options [] != ","options has_key? ","@template __send__ ! ","@template __send__ ","template_object exempt_from_layout? ! ","template_object exempt_from_layout? ","template_object format == ","template_object format "," response template template_format == "," response template template_format "," response template "," response "," view_paths find_template "," default_template_format "," view_paths "," default_template "," view_paths find_template  exempt_from_layout? ! "," view_paths find_template  exempt_from_layout? "," view_paths find_template  format == "," view_paths find_template  format "]}," ActionController Layout ClassMethods layout_directory_exists_cache":{"type":"method","name":"layout_directory_exists_cache","children":[],"call":["h []= ","File  directory? ","Hash  new "]}," ActionController Layout ClassMethods inherited_with_layout":{"type":"method","name":"inherited_with_layout","children":[],"call":["child layout "," layout_list grep empty? "," layout_list grep "," layout_list ","child name underscore sub sub ","child name underscore sub ","child name underscore ","child name ","child send "," inherited_without_layout ","child layout_list grep empty? ","child layout_list grep ","child layout_list ","child name blank? "]}," ActionController Layout ClassMethods default_layout":{"type":"method","name":"default_layout","children":[],"call":[" read_inheritable_attribute ","@default_layout [] "," default_layout_with_format ","@default_ read_inheritable_attribute  [] "," default_ read_inheritable_attribute _with_format "]}," ActionController Layout included":{"type":"method","name":"included","children":[],"call":[]}," ActionController IntegrationTest method_missing":{"type":"method","name":"method_missing","children":[],"call":[" copy_session_variables! "," returning ","@integration_session send "," reset! "]}," ActionController IntegrationTest copy_session_variables!":{"type":"method","name":"copy_session_variables!","children":[],"call":[" instance_variable_set ","@integration_session send ","(str \"controller\") each "]}," ActionController IntegrationTest open_session":{"type":"method","name":"open_session","children":[],"call":[" block_given? ","session test_result= ","session delegate= ","session extend "," test_result add_assertion "," test_result ","extras send "," delegate send "," delegate "," respond_to? ","table_name tr "," class fixture_table_names each "," class fixture_table_names "," class "," attr_accessor ","Module  new ","Integration Session  new ","Integration Session  new  test_result= ","Integration Session  new  delegate= ","Integration Session  new  extend ","table_table_name tr  tr "," class fixture_table_table_name tr s each "," class fixture_table_table_name tr s "]}," ActionController IntegrationTest reset!":{"type":"method","name":"reset!","children":[],"call":[" open_session "]}," ActionController IntegrationTest use_instantiated_fixtures":{"type":"method","name":"use_instantiated_fixtures","children":[],"call":[" superclass use_instantiated_fixtures "," superclass "]}," ActionController IntegrationTest use_transactional_fixtures":{"type":"method","name":"use_transactional_fixtures","children":[],"call":[" superclass use_transactional_fixtures "," superclass "]}," ActionController IntegrationTest use_instantiated_fixtures=":{"type":"method","name":"use_instantiated_fixtures=","children":[],"call":[]}," ActionController IntegrationTest use_transactional_fixtures=":{"type":"method","name":"use_transactional_fixtures=","children":[],"call":[]}," ActionController IntegrationTest run":{"type":"method","name":"run","children":[],"call":["@method_name == "]}," ActionController IntegrationTest initialize":{"type":"method","name":"initialize","children":[],"call":["name to_s "]}," ActionController Integration ControllerCapture ClassMethods new_with_capture":{"type":"method","name":"new_with_capture","children":[],"call":[" new_without_capture "," last_instantiation "]}," ActionController Integration ControllerCapture ClassMethods clear_last_instantiation!":{"type":"method","name":"clear_last_instantiation!","children":[],"call":[" last_instantiation= "]}," ActionController Integration ControllerCapture included":{"type":"method","name":"included","children":[],"call":[]}," ActionController Integration Session requestify":{"type":"method","name":"requestify","children":[],"call":["CGI  escape ","parameters to_s ","prefix nil? ","(send\n  (lvar :parameters) :map) join "," requestify "," name_with_prefix ","parameters map ","Array  === ","parameters empty? ","Hash  === "," raise ","TestUploadedFile  === "]}," ActionController Integration Session name_with_prefix":{"type":"method","name":"name_with_prefix","children":[],"call":["name to_s "]}," ActionController Integration Session generic_url_rewriter":{"type":"method","name":"generic_url_rewriter","children":[],"call":["ActionController UrlRewriter  new ","ActionController CgiRequest  new ","MockCGI  new "," https? "," host ","StubCGI  new ","ActionController RackRequest  new ","UrlRewriter  new ","Request  new "]}," ActionController Integration Session encode_cookies":{"type":"method","name":"encode_cookies","children":[],"call":["string << "," cookies inject "," cookies "]}," ActionController Integration Session parse_result":{"type":"method","name":"parse_result","children":[],"call":["@status to_i ","@headers [] first split ","@headers [] first ","@headers [] ","@cookies []= ","string match [] ","string match ","(or\n  (send\n    (ivar :@headers) :[]\n    (str \"set-cookie\"))\n  (array)) each ","@headers [] << ","key downcase ","line strip split ","line strip ","headers each_line ","h []= ","Hash  new ","@result split ","@headers [] first to_s split ","@headers [] first to_s ","response_headers to_s each_line ","response_headers to_s ","@status to_i  to_i "]}," ActionController Integration Session process":{"type":"method","name":"process","children":[],"call":[" status "," parse_result ","@response extend ","@controller response ","@controller request ","ActionController Base  last_instantiation ","cgi stdoutput string ","cgi stdoutput ","Dispatcher  dispatch ","MockCGI  new ","ActionController Base  clear_last_instantiation! ","ActionController Base  send ","ActionController Base  respond_to? ","env []= ","env has_key? ","key to_s upcase gsub ","key to_s upcase ","key to_s ","(or\n  (lvar :headers)\n  (hash)) each ","env update "," accept "," https? "," encode_cookies ","data length to_s ","data length "," remote_addr "," host ","method to_s upcase ","method to_s ","method == ","path [] == ","path [] "," interpret_uri ","path =~ "," requestify ","env =~ ","key =~ ","StubCGI  new "," include ","ActionController Base  module_eval ","ActionController Dispatcher  dispatch "," process ","(or\n  (lvar :headers)\n  (hash)) merge "," multipart_body ","@response headers [] << ","CGI Cookie  new ","@response headers [] ","@response headers ","@cookies []= ","cookie match [] ","cookie match ","(or\n  (send\n    (ivar :@headers) :[]\n    (str \"set-cookie\"))\n  (array)) each ","@headers [] ","cgi_headers []= ","cgi_headers [] first ","cgi_headers [] ","cgi_headers [] << ","key downcase ","@headers each ","h []= ","Hash  new ","@status to_i ","@status split ","@headers []= ","ActionController Dispatcher  new mark_as_test_request! call ","ActionController Dispatcher  new mark_as_test_request! ","ActionController Dispatcher  new ","StringIO  new ","data is_a? ","body close ","body respond_to? ","@response body= ","@response headers replace ","@response status= ","status to_s ","Response  new ","@controller send ","@body << ","body each ","cookies each ","cookies to_s split ","cookies to_s ","cookies is_a? ","Rack Utils HeaderHash  new ","StatusCodes STATUS_CODES  [] ","status to_i ","app call ","Rack Lint  new ","ActionController Base  class_eval ","ActionController Base  < ","(const nil :ControllerCapture) each "," cookies any? "," cookies ","data force_encoding ","data respond_to? ","env [] ","body is_a? ","(or\n  (send\n    (ivar :@headers) :[]\n    (str \"Set-Cookie\"))\n  (str \"\")) split each ","(or\n  (send\n    (ivar :@headers) :[]\n    (str \"Set-Cookie\"))\n  (str \"\")) split ","Rack  release <= ","Rack  release ","RUBY_VERSION  >= ","  process  ","@controller response  extend ","Response  new  extend ","ActionController Base  last_instantiation  response ","ActionController Base  last_instantiation  request ","MockCGI  new  stdoutput string ","StubCGI  new  stdoutput string ","MockCGI  new  stdoutput ","StubCGI  new  stdoutput ","env has_key to_s upcase gsub ? ","key to_s upcase gsub  to_s upcase gsub ","key to_s upcase gsub  to_s upcase ","key to_s upcase gsub  to_s "," encode_cookies to_s split  "," encode_@headers []  "," requestify  length to_s ","StringIO  new  length to_s "," requestify  length ","StringIO  new  length "," interpret_uri  [] == "," interpret_uri  [] "," interpret_uri  =~ ","key to_s upcase gsub  =~ ","@controller response  headers [] << ","Response  new  headers [] << ","@controller response  headers [] ","Response  new  headers [] ","@controller response  headers ","Response  new  headers ","@cookies to_s split  []= ","@@headers []  []= ","(or\n  (send\n    (ivar :Rack Utils HeaderHash  new ) :[]\n    (str \"set-cookie\"))\n  (array)) each ","Rack Utils HeaderHash  new  [] ","MockCGI  new _headers []= ","StubCGI  new _headers []= ","MockCGI  new _headers [] first ","StubCGI  new _headers [] first ","MockCGI  new _headers [] ","StubCGI  new _headers [] ","MockCGI  new _headers [] << ","StubCGI  new _headers [] << ","key to_s upcase gsub  downcase ","Rack Utils HeaderHash  new  each ","@ process  to_i ","@status to_i  to_i ","status to_i  to_i ","@ process  split ","@status to_i  split ","status to_i  split ","Rack Utils HeaderHash  new  []= "," requestify  is_a? ","StringIO  new  is_a? ","@controller response  body= ","Response  new  body= ","@controller response  headers replace ","Response  new  headers replace ","@controller response  status= ","Response  new  status= ","@response  process = "," process  to_s ","ActionController Base  last_instantiation  send ","cookies to_s split  each ","@headers []  each ","cookies to_s split  to_s split ","@headers []  to_s split ","cookies to_s split  to_s ","@headers []  to_s ","cookies to_s split  is_a? ","@headers []  is_a? "," process  to_i ","Rack Lint  new  call "," cookies to_s split  any? "," @headers []  any? "," cookies to_s split  "," @headers []  "," requestify  force_encoding ","StringIO  new  force_encoding "," requestify  respond_to? ","StringIO  new  respond_to? ","(or\n  (send\n    (ivar :Rack Utils HeaderHash  new ) :[]\n    (str \"Set-Cookie\"))\n  (str \"\")) split each ","(or\n  (send\n    (ivar :Rack Utils HeaderHash  new ) :[]\n    (str \"Set-Cookie\"))\n  (str \"\")) split "]}," ActionController Integration Session interpret_uri":{"type":"method","name":"interpret_uri","children":[],"call":["location path ","location query "," host! ","location host "," https! ","URI HTTPS  === ","location scheme ","URI  parse ","URI  parse  path ","URI  parse  query ","URI  parse  host ","URI  parse  scheme "]}," ActionController Integration Session MockCGI initialize":{"type":"method","name":"initialize","children":[],"call":[" stdoutput= ","StringIO  new "," stdinput= "," env_table= "]}," ActionController Integration Session url_for":{"type":"method","name":"url_for","children":[],"call":[" generic_url_rewriter rewrite "," generic_url_rewriter "," controller url_for "," controller "]}," ActionController Integration Session xml_http_request":{"type":"method","name":"xml_http_request","children":[],"call":[" post ","(or\n  (lvar :headers)\n  (hash)) merge "," process ","headers []= ","ActiveSupport Deprecation  warn ","request_method is_a? ","headers [] ","(const\n  (const nil :Mime) :JS) join ","(or\n  (lvar :(or\n  (lvar :headers)\n  (hash)) merge )\n  (hash)) merge ","(or\n  (lvar :headers)\n  (hash)) merge  []= ","(or\n  (lvar :headers)\n  (hash)) merge  [] "]}," ActionController Integration Session post":{"type":"method","name":"post","children":[],"call":[" process "]}," ActionController Integration Session get":{"type":"method","name":"get","children":[],"call":[" process "]}," ActionController Integration Session redirect?":{"type":"method","name":"redirect?","children":[],"call":[" status / == "," status / "," status "]}," ActionController Integration Session post_via_redirect":{"type":"method","name":"post_via_redirect","children":[],"call":[" status "," follow_redirect! "," redirect? "," post "," request_via_redirect "]}," ActionController Integration Session get_via_redirect":{"type":"method","name":"get_via_redirect","children":[],"call":[" status "," follow_redirect! "," redirect? "," get "," request_via_redirect "]}," ActionController Integration Session follow_redirect!":{"type":"method","name":"follow_redirect!","children":[],"call":[" status "," get "," interpret_uri "," headers [] first "," headers [] "," headers "," raise "," redirect? "]}," ActionController Integration Session host!":{"type":"method","name":"host!","children":[],"call":[]}," ActionController Integration Session https?":{"type":"method","name":"https?","children":[],"call":[]}," ActionController Integration Session https!":{"type":"method","name":"https!","children":[],"call":[]}," ActionController Integration Session reset!":{"type":"method","name":"reset!","children":[],"call":["klass send ","Routing NamedRoutes  install "," accept= "," remote_addr= "," host= ","Routing Routes  named_routes helpers ","Routing Routes  named_routes ","Routing Routes  named_routes install "," public ","klass module_eval ","Routing Routes  install_helpers ","text/xml,application/xml,application/xhtml+xml, + + ","text/xml,application/xml,application/xhtml+xml, + "]}," ActionController Integration Session initialize":{"type":"method","name":"initialize","children":[],"call":[" reset! ","ActionController Dispatcher  new "]}," ActionController Flash InstanceMethods keep_flash":{"type":"method","name":"keep_flash","children":[],"call":[" flash keep "," flash "," warn ","ActiveSupport Deprecation  warn "," caller "]}," ActionController Flash InstanceMethods flash":{"type":"method","name":"flash","children":[],"call":["FlashHash  new ","@session [] ","@session is_a? ","@flash nil? "," session [] "," session "," session is_a? ","(ivar :@_flash) ! ","@_flash sweep ","FlashHash  new  nil? ","(ivar :FlashHash  new ) ! ","FlashHash  new  sweep "]}," ActionController Flash InstanceMethods process_cleanup_with_flash":{"type":"method","name":"process_cleanup_with_flash","children":[],"call":[" process_cleanup_without_flash "," flash sweep "," flash "]}," ActionController Flash InstanceMethods assign_shortcuts_with_flash":{"type":"method","name":"assign_shortcuts_with_flash","children":[],"call":[" flash "," assign_shortcuts_without_flash "," flash sweep "," component_request? ! "," component_request? "]}," ActionController Flash included":{"type":"method","name":"included","children":[],"call":[]}," ActionController Filters InstanceMethods process_cleanup_with_filters":{"type":"method","name":"process_cleanup_with_filters","children":[],"call":[" process_cleanup_without_filters "," close_session "]}," ActionController Filters InstanceMethods process_with_filters":{"type":"method","name":"process_with_filters","children":[],"call":[" process_without_filters "]}," ActionController Filters InstanceMethods included":{"type":"method","name":"included","children":[],"call":[]}," ActionController Filters included":{"type":"method","name":"included","children":[],"call":[]}," ActionController Components InstanceMethods process_cleanup_with_components":{"type":"method","name":"process_cleanup_with_components","children":[],"call":[" process_cleanup_without_components "," component_request? "]}," ActionController Components InstanceMethods set_session_options_with_components":{"type":"method","name":"set_session_options_with_components","children":[],"call":[" set_session_options_without_components "," component_request? "]}," ActionController Components InstanceMethods component_logging":{"type":"method","name":"component_logging","children":[],"call":[" logger info "," logger ","options inspect "]}," ActionController Components InstanceMethods request_for_component":{"type":"method","name":"request_for_component","children":[],"call":["request instance_variable_set ","(or\n  (send\n    (lvar :options) :[]\n    (sym :params))\n  (hash)) with_indifferent_access update ","options [] ","(or\n  (send\n    (lvar :options) :[]\n    (sym :params))\n  (hash)) with_indifferent_access ","request session= ","@request session ","@request dup ","new_request instance_variable_set ","new_request session= "," request session "," request "," request dup ","@request dup  instance_variable_set ","@request dup  session= ","@@request dup  session ","@@request dup  dup ","new_@request dup  instance_variable_set "," request dup  instance_variable_set ","new_@request dup  session= "," request dup  session= "," @request dup  session "," @request dup  "," @request dup  dup "]}," ActionController Components InstanceMethods component_class":{"type":"method","name":"component_class","children":[],"call":[" class ","(begin\n  (send\n    (lvar :controller) :camelize)) constantize ","controller camelize ","controller is_a? ","options [] ","(begin\n  (send\n    (lvar :options [] ) :camelize)) constantize ","options []  camelize ","options []  is_a? "]}," ActionController Components InstanceMethods component_response":{"type":"method","name":"component_response","children":[],"call":["klass process_with_components ","@response dup "," request_for_component ","klass controller_name "," component_class "," response dup "," response "," component_class  process_with_components ","@@response dup  dup ","  request_for_component _for_component "," component_class  controller_name "," @response dup  dup "," @response dup  "]}," ActionController Components InstanceMethods flash_with_components":{"type":"method","name":"flash_with_components","children":[],"call":[" flash_without_components ","@parent_controller flash ","@flash nil? ","(ivar :@_flash) ! "," flash_without_components  nil? ","@parent_controller flash  nil? ","(ivar : flash_without_components ) ! ","(ivar :@parent_controller flash ) ! "]}," ActionController Components InstanceMethods render_component_as_string":{"type":"method","name":"render_component_as_string","children":[],"call":["response body "," render_component_as_string ","response redirected_to "," component_response "," component_logging "," component_response  body ","response response redirected_to _to "," component_response  redirected_to "," component_ component_response  "]}," ActionController Components InstanceMethods render_component":{"type":"method","name":"render_component","children":[],"call":[" render_text "," response headers [] "," response headers "," response "," component_response body "," component_response "," component_logging "," render_for_text "]}," ActionController Components InstanceMethods process_with_components":{"type":"method","name":"process_with_components","children":[],"call":[" process_without_components "," flash discard "," flash "," component_request? "]}," ActionController Components ClassMethods uses_component_template_root":{"type":"method","name":"uses_component_template_root","children":[],"call":[" template_root= ","path_of_calling_controller sub "," controller_path split [] "," controller_path split "," controller_path ","File  dirname "," caller [] split first "," caller [] split "," caller [] "," caller ","Regexp  escape ","File  dirname  sub "]}," ActionController Components ClassMethods process_with_components":{"type":"method","name":"process_with_components","children":[],"call":["controller process ","controller parent_controller= "," new "," new  process "," new  parent_ new = "]}," ActionController Components included":{"type":"method","name":"included","children":[{"type":"method","name":"render_component","children":[],"asgn":[],"call":["@controller send "]}],"call":[]}," ActionController CgiRequest host_with_port":{"type":"method","name":"host_with_port","children":[],"call":[" env [] "," env ","forwarded split last ","forwarded split "," env []  split last "," env []  split "]}," CGIMethods dasherize_keys":{"type":"method","name":"dasherize_keys","children":[],"call":[]}," CGIMethods translate_xml_entities":{"type":"method","name":"translate_xml_entities","children":[],"call":[]}," CGIMethods typecast_xml_value":{"type":"method","name":"typecast_xml_value","children":[],"call":[]}," ActionController Caching included":{"type":"method","name":"included","children":[],"call":[]}," ActionController Benchmarking included":{"type":"method","name":"included","children":[],"call":[]}," ActionController Base process_cleanup":{"type":"method","name":"process_cleanup","children":[],"call":[" close_session "]}," ActionController Base template_path_includes_controller?":{"type":"method","name":"template_path_includes_controller?","children":[],"call":[" class controller_path split [] == ","path split [] ","path split "," class controller_path split [] "," class controller_path split "," class controller_path "," class "," controller_path split [] == "," controller_path split [] "," controller_path split "," controller_path "]}," ActionController Base strip_out_controller":{"type":"method","name":"strip_out_controller","children":[],"call":["path split last ","path split "]}," ActionController Base assert_existence_of_template_file":{"type":"method","name":"assert_existence_of_template_file","children":[],"call":[" raise ","template_name =~ ","@template send "," ignore_missing_templates "," template_exists? "," view_paths join "," view_paths ","@template template_format ","template_name include? "]}," ActionController Base template_exempt_from_layout?":{"type":"method","name":"template_exempt_from_layout?","children":[],"call":["@template pick_template_extension == ","@template pick_template_extension ","template_name =~ ","name_with_extension =~ ","@@exempt_from_layout any? ","extension == ","template_name include? ! ","template_name include? ","@template finder pick_template_extension ","@template finder "]}," ActionController Base complete_request_uri":{"type":"method","name":"complete_request_uri","children":[],"call":["@request request_uri ","@request host ","@request protocol "," request request_uri "," request "," request host "," request protocol "]}," ActionController Base reset_variables_added_to_assigns":{"type":"method","name":"reset_variables_added_to_assigns","children":[],"call":["@template instance_variable_set "]}," ActionController Base forget_variables_added_to_assigns":{"type":"method","name":"forget_variables_added_to_assigns","children":[],"call":[]}," ActionController Base assign_names":{"type":"method","name":"assign_names","children":[],"call":[" params [] "," params "]}," ActionController Base performed?":{"type":"method","name":"performed?","children":[],"call":[]}," ActionController Base view_root":{"type":"method","name":"view_root","children":[],"call":[]}," ActionController Base view_class":{"type":"method","name":"view_class","children":[],"call":[]}," ActionController Base expires_now":{"type":"method","name":"expires_now","children":[],"call":["@response headers []= ","@response headers "," response headers []= "," response headers "," response "]}," ActionController Base expires_in":{"type":"method","name":"expires_in","children":[],"call":["@response headers []= ","cache_control join ","@response headers ","v to_s ","k to_s ","v == ","cache_options map ","v nil? ","cache_options delete_if ","(pair\n  (str \"max-age\")\n  (lvar :seconds)) symbolize_keys merge! ","options symbolize_keys ","(pair\n  (str \"max-age\")\n  (lvar :seconds)) symbolize_keys "," response headers []= "," response headers "," response ","(send\n  (send\n    (lvar :options) :symbolize_keys) :reject) map ","k == ","options symbolize_keys reject ","cache_control << ","cache_control delete ","options [] ","k strip "," response headers [] split map "," response headers [] split "," response headers [] ","(pair\n  (str \"max-age\")\n  (lvar :seconds)) symbolize_keys merge!  map ","(pair\n  (str \"max-age\")\n  (lvar :seconds)) symbolize_keys merge!  delete_if "]}," ActionController Base erase_results":{"type":"method","name":"erase_results","children":[],"call":[" erase_redirect_results "," erase_render_results "]}," ActionController Base erase_redirect_results":{"type":"method","name":"erase_redirect_results","children":[],"call":[" response headers delete "," response headers "," response "," response headers []= "," response redirected_to_method_params= "," response redirected_to= "," response status= "]}," ActionController Base erase_render_results":{"type":"method","name":"erase_render_results","children":[],"call":["@response body= "," response body= "," response "]}," ActionController Base render_without_layout":{"type":"method","name":"render_without_layout","children":[],"call":[" render_with_no_layout "," render "]}," ActionController Base render_with_layout":{"type":"method","name":"render_with_layout","children":[],"call":[" render_with_a_layout "," render "]}," ActionController Base render_partial_collection":{"type":"method","name":"render_partial_collection","children":[],"call":[" render_text ","@template render_partial_collection "," add_variables_to_assigns "," render "]}," ActionController Base render_partial":{"type":"method","name":"render_partial","children":[],"call":[" render_text ","@template render_partial "," add_variables_to_assigns "," render "]}," ActionController Base render_nothing":{"type":"method","name":"render_nothing","children":[],"call":[" render_text "," render "]}," ActionController Base render_xml":{"type":"method","name":"render_xml","children":[],"call":[" render_text ","@response headers []= ","@response headers "," response content_type= "," response "]}," ActionController Base render_javascript":{"type":"method","name":"render_javascript","children":[],"call":[" render_text ","@response headers []= ","@response headers "," response content_type= "," response "]}," ActionController Base render_to_string":{"type":"method","name":"render_to_string","children":[],"call":[" reset_variables_added_to_assigns "," forget_variables_added_to_assigns "," erase_render_results "," render ","ActiveSupport Deprecation  silence "," response content_type= "," response "," erase_render_ render s "]}," ActionController Base session_enabled?":{"type":"method","name":"session_enabled?","children":[],"call":[" request session_options [] != "," request session_options [] "," request session_options "," request ","ActiveSupport Deprecation  warn "," caller "]}," ActionController Base hide_action":{"type":"method","name":"hide_action","children":[],"call":[" write_inheritable_attribute "," hidden_actions | ","n to_s ","names collect "," hidden_actions ","names map ","name to_s "]}," ActionController Base hidden_actions":{"type":"method","name":"hidden_actions","children":[],"call":[" read_inheritable_attribute "," write_inheritable_attribute ","ActionController Base  public_instance_methods ","ActionController Base  public_instance_methods map "]}," ActionController Base controller_path":{"type":"method","name":"controller_path","children":[],"call":[" name gsub underscore "," name gsub "," name "," class controller_path "," class "]}," ActionController RedirectBackError initialize":{"type":"method","name":"initialize","children":[],"call":[]}," ActionController DoubleRenderError initialize":{"type":"method","name":"initialize","children":[],"call":[]}," ActionController SessionOverflowError initialize":{"type":"method","name":"initialize","children":[],"call":[]}," ActionController RoutingError initialize":{"type":"method","name":"initialize","children":[],"call":[]}," ActionView Helpers AssetTagHelper rails_asset_id":{"type":"method","name":"rails_asset_id","children":[],"call":["File  mtime to_i to_s ","File  mtime to_i ","File  mtime ","ENV  [] ","File  exist? ","File  join ","@@asset_timestamps_cache []= ","@@asset_timestamps_cache_guard synchronize ","@@asset_timestamps_cache [] "," config assets_dir "," config "]}," ActionController Filters ClassMethods remove_contradicting_conditions!":{"type":"method","name":"remove_contradicting_conditions!","children":[],"call":["included_actions_for_filter delete ","included_actions_for_filter include? ","conditional_action to_s ","(splat\n  (send\n    (lvar :conditions) :[]\n    (sym :only))) each ","conditions [] ","(or\n  (send nil :read_inheritable_attribute\n    (str \"included_actions\"))\n  (hash)) [] "," read_inheritable_attribute ","filters each ","(or\n  (send nil :read_inheritable_attribute\n    (str \"included_actions\"))\n  (hash)) []  delete ","(or\n  (send nil :read_inheritable_attribute\n    (str \"included_actions\"))\n  (hash)) []  include? ","conditional_action to_s  to_s "]}," ActionController Routing ControllerComponent attempt_load":{"type":"method","name":"attempt_load","children":[],"call":["File  directory? ","mod const_defined? "," require_dependency ","File  file? ","full_path + ","File  join "," safe_load_paths each "," safe_load_paths ","File  join  + "]}," ActionController Routing ControllerComponent safe_load_paths":{"type":"method","name":"safe_load_paths","children":[],"call":["base =~ ","base [] == ","base [] ","extended_root length ","File  expand_path ","$LOAD_PATH select ","base match "," file_kinds * "," file_kinds ","Regexp  escape ","File  expand_path  =~ ","File  expand_path  [] == ","File  expand_path  [] ","File  expand_path  length ","File  expand_path  match "]}," ActionController Routing ControllerComponent file_kinds":{"type":"method","name":"file_kinds","children":[],"call":["(send\n  (begin\n    (or-asgn\n      (ivasgn :@file_kinds)\n      (array))) :<<\n  (lvar :kind)) uniq! ","(or-asgn\n  (ivasgn :@file_kinds)\n  (array)) << "]}," ActionController Base filter_parameter_logging":{"type":"method","name":"filter_parameter_logging","children":[],"call":["filtered_parameters []= ","value dup ","key dup "," block_given? "," filter_parameters ","value is_a? ","key =~ ","unfiltered_parameters each "," define_method ","Regexp  new ","(send\n  (lvar :filter_words) :collect) join ","s to_s ","filter_words collect ","filter_words length > ","filter_words length "," protected ","value duplicable? ","value collect ","value dup  dup ","key dup  dup ","value dup  is_a? ","key dup  =~ ","value dup  duplicable? ","value dup  collect "]}," ActionView TemplateError source_location":{"type":"method","name":"source_location","children":[],"call":["(send nil :line_number) + "," file_name "," line_number "]}," ActionView TemplateError remove_deprecated_assigns!":{"type":"method","name":"remove_deprecated_assigns!","children":[],"call":["@assigns delete ","ActionController Base DEPRECATED_INSTANCE_VARIABLES  each "]}," ActionView Helpers UrlHelper method_javascript_function":{"type":"method","name":"method_javascript_function","children":[],"call":["submit_function << ","method == ","var f = document.createElement('form'); f.style.display = 'none';  + "," escape_javascript "," form_authenticity_token "," request_forgery_protection_token "," protect_against_forgery? ","url size > ","url size ","var f = document.createElement('form'); f.style.display = 'none';  +  << "]}," ActionView Helpers TagHelper fix_double_escape":{"type":"method","name":"fix_double_escape","children":[],"call":["escaped gsub "]}," ActionView Helpers TagHelper content_tag_string":{"type":"method","name":"content_tag_string","children":[],"call":[" tag_options ","(str \"<\") html_safe ","(str \"<\") html_safe! ","ERB Util  h ","PRE_CONTENT_STRINGS  [] ","name to_sym ","  tag_options  "]}," ActionView Helpers TagHelper escape_once":{"type":"method","name":"escape_once","children":[],"call":[" fix_double_escape "," html_escape ","html to_s ","ERB Util HTML_ESCAPE  [] ","html to_s gsub ","ActiveSupport Multibyte  clean gsub ","ActiveSupport Multibyte  clean ","ERB Util  html_escape_once "]}," ActionView Helpers JavaScriptElementProxy []=":{"type":"method","name":"[]=","children":[],"call":[" assign "]}," ActionView Helpers JavaScriptElementProxy []":{"type":"method","name":"[]","children":[],"call":[" append_to_function_chain! "]}," ActionView Helpers PrototypeHelper JavaScriptGenerator GeneratorMethods block_to_function":{"type":"method","name":"block_to_function","children":[],"call":[" literal ","generator to_s "," class new "," class "," class new  to_s "]}," ActionView Helpers PrototypeHelper JavaScriptGenerator GeneratorMethods loop_on_multiple_args":{"type":"method","name":"loop_on_multiple_args","children":[],"call":[" record ","ids first to_json ","ids first "," javascript_object_for ","ids size > ","ids size "," ActiveSupport JSON  encode "]}," ActionView Helpers PrototypeHelper JavaScriptGenerator GeneratorMethods literal":{"type":"method","name":"literal","children":[],"call":["ActiveSupport JSON Variable  new ","code to_s "," ActiveSupport JSON Variable  new "]}," ActionView Helpers InstanceTag radio_button_checked?":{"type":"method","name":"radio_button_checked?","children":[],"call":["value to_s == ","checked_value to_s ","value to_s "]}," ActionView Helpers InstanceTag check_box_checked?":{"type":"method","name":"check_box_checked?","children":[],"call":["value to_i != ","value to_i ","value == ","value != ","value include? "]}," ActionView Helpers FormBuilder time_select":{"type":"method","name":"time_select","children":[],"call":["@template time_select ","options merge "," objectify_options "]}," ActionView Helpers InstanceTag options_with_prefix":{"type":"method","name":"options_with_prefix","children":[],"call":["options merge ","prefix << ","options [] "]}," ActionView Helpers InstanceTag date_or_time_select":{"type":"method","name":"date_or_time_select","children":[],"call":["date_or_time_select insert ","options [] ","discard [] "," send "," options_with_prefix ","options merge ","position [] ","date_or_time_select empty? ","order reverse each ","order reverse ","order push ","order delete ","(sym :hour) each ","order unshift ","order include? ","(sym :day) each ","discard []= ","discard [] ! ","order include? ! ","Time  now "," value "," object ","defaults merge ","datetime change "," default_time_from_options ","defaults merge  [] "," defaults merge _with_prefix ","defaults merge  merge "," value  change ","datetime change  change "," default_time_from_defaults merge  "]}," ActionView Helpers InstanceTag to_time_select_tag":{"type":"method","name":"to_time_select_tag","children":[],"call":[" date_or_time_select ","options merge "," to_time_select_tag_without_error_wrapping "," error_wrapping "," object errors on "," object errors "," object "," object errors respond_to? "," object respond_to? "," datetime_selector select_time "," datetime_selector "," datetime_selector select_time html_safe "," datetime_selector select_time html_safe! "]}," ActionView Helpers DateHelper name_and_id_from_options":{"type":"method","name":"name_and_id_from_options","children":[],"call":["options []= ","options [] gsub gsub ","options [] gsub ","options [] ","(or\n  (send\n    (lvar :options) :[]\n    (sym :prefix))\n  (const nil :DEFAULT_PREFIX)) + "]}," ActionView Helpers DateHelper hidden_html":{"type":"method","name":"hidden_html","children":[],"call":["options [] "," name_and_id_from_options "," tag + "," tag "]}," ActionView Helpers DateHelper time_select":{"type":"method","name":"time_select","children":[],"call":["InstanceTag  new to_time_select_tag ","InstanceTag  new ","options delete ","Tags TimeSelect  new render ","Tags TimeSelect  new "]}," ActionController Verification included":{"type":"method","name":"included","children":[],"call":[]}," HTML Tag select":{"type":"method","name":"select","children":[],"call":["selector select ","HTML Selector  new ","HTML Selector  new  select "]}," HTML selector":{"type":"method","name":"selector","children":[],"call":[]}," HTML Selector next_selector":{"type":"method","name":"next_selector","children":[],"call":["(or-asgn\n  (ivasgn :@alternates)\n  (array)) concat ","second instance_variable_set ","second instance_variable_get ","Selector  new ","@alternates concat ","(or-asgn\n  (ivasgn :@second instance_variable_get )\n  (array)) concat ","Selector  new  instance_variable_set ","Selector  new  instance_variable_get ","@second instance_variable_get  concat "]}," HTML Selector only_child":{"type":"method","name":"only_child","children":[],"call":["other ! ","child equal? ","child name == ","child name ","name == ","child tag? ","element parent children ","element parent ","element name ","element parent tag? "," lambda ","child element name  == ","child element name  ","element name  == ","element element name  "]}," HTML Selector nth_child":{"type":"method","name":"nth_child","children":[],"call":["(send\n  (lvar :index) :%\n  (lvar :a)) == ","index % ","child equal? ","index > ","a < ","index == ","a == ","child name == ","child name ","name == ","child tag? ","element name ","siblings reverse ","element parent children ","element parent ","element parent tag? "," lambda ","b == ","a + + ","a + ","b < ","child element name  == ","child element name  ","element name  == ","element element name  ","siblings reverse  reverse ","element parent children  reverse ","sia + + lings reverse "," lama + + da ","a + +  == ","a + +  < "]}," HTML Selector attribute_match":{"type":"method","name":"attribute_match","children":[],"call":[" raise ","value empty? ","Regexp  new ","regexp is_a? ","Regexp  escape ","value to_s ","value is_a? ","Regexp  escape  is_a? "]}," HTML Selector simple_selector":{"type":"method","name":"simple_selector","children":[],"call":["@source << "," raise ","statement sub! ","negation << "," simple_selector ","pseudo << ","text strip =~ ","text strip ","text << ","child content ","child tag? ","element children "," lambda ","Regexp  new ","Regexp  escape ","content to_s ","content is_a? ","content [] ","content [] == ","values shift ","content == ","child content strip empty? ! ","child content strip empty? ","child content strip "," only_child ","1 == "," nth_child ","2 == ","b >= ","(if\n  (send\n    (nth-ref 2) :==\n    (str \"?\"))\n  (send\n    (lvar :values) :shift)\n  (nth-ref 2)) to_i ","(if\n  (send\n    (nth-ref 1) :==\n    (str \"?\"))\n  (send\n    (lvar :values) :shift)\n  (if\n    (send\n      (nth-ref 1) :==\n      (str \"\"))\n    (int 1)\n    (if\n      (send\n        (nth-ref 1) :==\n        (str \"-\"))\n      (int -1)\n      (nth-ref 1)))) to_i ","(if\n  (send\n    (nth-ref 1) :==\n    (str \"?\"))\n  (send\n    (lvar :values) :shift)\n  (nth-ref 1)) to_i ","element parent tag? ! ","element parent tag? ","element parent ","element parent nil? ","attributes << "," attribute_match ","name downcase strip ","name downcase ","value [] ","value [] == ","value strip! ","value == ","class_name is_a? ","id to_s ","id is_a? ","id == ","match downcase ","match == ","match strip! "," r(if\n  (send\n    (nth-ref 1) :==\n    (str \"?\"))\n  (send\n    (lvar :values) :shift)\n  (if\n    (send\n      (nth-ref 1) :==\n      (str \"\"))\n    (int 1)\n    (if\n      (send\n        (nth-ref 1) :==\n        (str \"-\"))\n      (int -1)\n      (nth-ref 1)))) to_i ise ","statement su(if\n  (send\n    (nth-ref 2) :==\n    (str \"?\"))\n  (send\n    (lvar :values) :shift)\n  (nth-ref 2)) to_i ! ","statement su(if\n  (send\n    (nth-ref 1) :==\n    (str \"?\"))\n  (send\n    (lvar :values) :shift)\n  (nth-ref 1)) to_i ! ","st(if\n  (send\n    (nth-ref 1) :==\n    (str \"?\"))\n  (send\n    (lvar :values) :shift)\n  (if\n    (send\n      (nth-ref 1) :==\n      (str \"\"))\n    (int 1)\n    (if\n      (send\n        (nth-ref 1) :==\n        (str \"-\"))\n      (int -1)\n      (nth-ref 1)))) to_i tement sub! ","neg(if\n  (send\n    (nth-ref 1) :==\n    (str \"?\"))\n  (send\n    (lvar :values) :shift)\n  (if\n    (send\n      (nth-ref 1) :==\n      (str \"\"))\n    (int 1)\n    (if\n      (send\n        (nth-ref 1) :==\n        (str \"-\"))\n      (int -1)\n      (nth-ref 1)))) to_i tion << ","child Regexp  new  ","child content []  ","child values shift  ","child t(if\n  (send\n    (nth-ref 1) :==\n    (str \"?\"))\n  (send\n    (lvar :values) :shift)\n  (if\n    (send\n      (nth-ref 1) :==\n      (str \"\"))\n    (int 1)\n    (if\n      (send\n        (nth-ref 1) :==\n        (str \"-\"))\n      (int -1)\n      (nth-ref 1)))) to_i g? "," lam(if\n  (send\n    (nth-ref 2) :==\n    (str \"?\"))\n  (send\n    (lvar :values) :shift)\n  (nth-ref 2)) to_i da "," lam(if\n  (send\n    (nth-ref 1) :==\n    (str \"?\"))\n  (send\n    (lvar :values) :shift)\n  (nth-ref 1)) to_i da "," l(if\n  (send\n    (nth-ref 1) :==\n    (str \"?\"))\n  (send\n    (lvar :values) :shift)\n  (if\n    (send\n      (nth-ref 1) :==\n      (str \"\"))\n    (int 1)\n    (if\n      (send\n        (nth-ref 1) :==\n        (str \"-\"))\n      (int -1)\n      (nth-ref 1)))) to_i mbd(if\n  (send\n    (nth-ref 1) :==\n    (str \"?\"))\n  (send\n    (lvar :values) :shift)\n  (if\n    (send\n      (nth-ref 1) :==\n      (str \"\"))\n    (int 1)\n    (if\n      (send\n        (nth-ref 1) :==\n        (str \"-\"))\n      (int -1)\n      (nth-ref 1)))) to_i  ","Regexp  esc(if\n  (send\n    (nth-ref 1) :==\n    (str \"?\"))\n  (send\n    (lvar :values) :shift)\n  (if\n    (send\n      (nth-ref 1) :==\n      (str \"\"))\n    (int 1)\n    (if\n      (send\n        (nth-ref 1) :==\n        (str \"-\"))\n      (int -1)\n      (nth-ref 1)))) to_i pe ","Regexp  new  to_s ","content []  to_s ","values shift  to_s ","Regexp  new  is_a? ","content []  is_a? ","values shift  is_a? ","content is_(if\n  (send\n    (nth-ref 1) :==\n    (str \"?\"))\n  (send\n    (lvar :values) :shift)\n  (if\n    (send\n      (nth-ref 1) :==\n      (str \"\"))\n    (int 1)\n    (if\n      (send\n        (nth-ref 1) :==\n        (str \"-\"))\n      (int -1)\n      (nth-ref 1)))) to_i ? ","Regexp  new  [] ","content []  [] ","values shift  [] ","Regexp  new  [] == ","content []  [] == ","values shift  [] == ","v(if\n  (send\n    (nth-ref 1) :==\n    (str \"?\"))\n  (send\n    (lvar :values) :shift)\n  (if\n    (send\n      (nth-ref 1) :==\n      (str \"\"))\n    (int 1)\n    (if\n      (send\n        (nth-ref 1) :==\n        (str \"-\"))\n      (int -1)\n      (nth-ref 1)))) to_i lues shift ","value [] s shift ","values shift s shift ","Regexp  new  == ","content []  == ","values shift  == ","child Regexp  new  strip empty? ! ","child content []  strip empty? ! ","child values shift  strip empty? ! ","child Regexp  new  strip empty? ","child content []  strip empty? ","child values shift  strip empty? ","child Regexp  new  strip ","child content []  strip ","child values shift  strip ","(if\n  (send\n    (nth-ref 2) :==\n    (str \"?\"))\n  (send\n    (lvar :values) :shift)\n  (nth-ref 2)) to_i  >= ","(if\n  (send\n    (nth-ref 1) :==\n    (str \"?\"))\n  (send\n    (lvar :values) :shift)\n  (nth-ref 1)) to_i  >= ","(if\n  (send\n    (nth-ref 2) :==\n    (str \"?\"))\n  (send\n    (lv(if\n  (send\n    (nth-ref 1) :==\n    (str \"?\"))\n  (send\n    (lvar :values) :shift)\n  (if\n    (send\n      (nth-ref 1) :==\n      (str \"\"))\n    (int 1)\n    (if\n      (send\n        (nth-ref 1) :==\n        (str \"-\"))\n      (int -1)\n      (nth-ref 1)))) to_i r :v(if\n  (send\n    (nth-ref 1) :==\n    (str \"?\"))\n  (send\n    (lvar :values) :shift)\n  (if\n    (send\n      (nth-ref 1) :==\n      (str \"\"))\n    (int 1)\n    (if\n      (send\n        (nth-ref 1) :==\n        (str \"-\"))\n      (int -1)\n      (nth-ref 1)))) to_i lues) :shift)\n  (nth-ref 2)) to_i ","(if\n  (send\n    (nth-ref 2) :==\n    (str \"?\"))\n  (send\n    (lvar :value [] s) :shift)\n  (nth-ref 2)) to_i ","(if\n  (send\n    (nth-ref 2) :==\n    (str \"?\"))\n  (send\n    (lvar :values shift s) :shift)\n  (nth-ref 2)) to_i ","(if\n  (send\n    (nth-ref 1) :==\n    (str \"?\"))\n  (send\n    (lv(if\n  (send\n    (nth-ref 1) :==\n    (str \"?\"))\n  (send\n    (lvar :values) :shift)\n  (if\n    (send\n      (nth-ref 1) :==\n      (str \"\"))\n    (int 1)\n    (if\n      (send\n        (nth-ref 1) :==\n        (str \"-\"))\n      (int -1)\n      (nth-ref 1)))) to_i r :v(if\n  (send\n    (nth-ref 1) :==\n    (str \"?\"))\n  (send\n    (lvar :values) :shift)\n  (if\n    (send\n      (nth-ref 1) :==\n      (str \"\"))\n    (int 1)\n    (if\n      (send\n        (nth-ref 1) :==\n        (str \"-\"))\n      (int -1)\n      (nth-ref 1)))) to_i lues) :shift)\n  (if\n    (send\n      (nth-ref 1) :==\n      (str \"\"))\n    (int 1)\n    (if\n      (send\n        (nth-ref 1) :==\n        (str \"-\"))\n      (int -1)\n      (nth-ref 1)))) to_i ","(if\n  (send\n    (nth-ref 1) :==\n    (str \"?\"))\n  (send\n    (lvar :value [] s) :shift)\n  (if\n    (send\n      (nth-ref 1) :==\n      (str \"\"))\n    (int 1)\n    (if\n      (send\n        (nth-ref 1) :==\n        (str \"-\"))\n      (int -1)\n      (nth-ref 1)))) to_i ","(if\n  (send\n    (nth-ref 1) :==\n    (str \"?\"))\n  (send\n    (lvar :values shift s) :shift)\n  (if\n    (send\n      (nth-ref 1) :==\n      (str \"\"))\n    (int 1)\n    (if\n      (send\n        (nth-ref 1) :==\n        (str \"-\"))\n      (int -1)\n      (nth-ref 1)))) to_i ","(if\n  (send\n    (nth-ref 1) :==\n    (str \"?\"))\n  (send\n    (lv(if\n  (send\n    (nth-ref 1) :==\n    (str \"?\"))\n  (send\n    (lvar :values) :shift)\n  (if\n    (send\n      (nth-ref 1) :==\n      (str \"\"))\n    (int 1)\n    (if\n      (send\n        (nth-ref 1) :==\n        (str \"-\"))\n      (int -1)\n      (nth-ref 1)))) to_i r :v(if\n  (send\n    (nth-ref 1) :==\n    (str \"?\"))\n  (send\n    (lvar :values) :shift)\n  (if\n    (send\n      (nth-ref 1) :==\n      (str \"\"))\n    (int 1)\n    (if\n      (send\n        (nth-ref 1) :==\n        (str \"-\"))\n      (int -1)\n      (nth-ref 1)))) to_i lues) :shift)\n  (nth-ref 1)) to_i ","(if\n  (send\n    (nth-ref 1) :==\n    (str \"?\"))\n  (send\n    (lvar :value [] s) :shift)\n  (nth-ref 1)) to_i ","(if\n  (send\n    (nth-ref 1) :==\n    (str \"?\"))\n  (send\n    (lvar :values shift s) :shift)\n  (nth-ref 1)) to_i ","element p(if\n  (send\n    (nth-ref 1) :==\n    (str \"?\"))\n  (send\n    (lvar :values) :shift)\n  (if\n    (send\n      (nth-ref 1) :==\n      (str \"\"))\n    (int 1)\n    (if\n      (send\n        (nth-ref 1) :==\n        (str \"-\"))\n      (int -1)\n      (nth-ref 1)))) to_i rent t(if\n  (send\n    (nth-ref 1) :==\n    (str \"?\"))\n  (send\n    (lvar :values) :shift)\n  (if\n    (send\n      (nth-ref 1) :==\n      (str \"\"))\n    (int 1)\n    (if\n      (send\n        (nth-ref 1) :==\n        (str \"-\"))\n      (int -1)\n      (nth-ref 1)))) to_i g? ! ","element p(if\n  (send\n    (nth-ref 1) :==\n    (str \"?\"))\n  (send\n    (lvar :values) :shift)\n  (if\n    (send\n      (nth-ref 1) :==\n      (str \"\"))\n    (int 1)\n    (if\n      (send\n        (nth-ref 1) :==\n        (str \"-\"))\n      (int -1)\n      (nth-ref 1)))) to_i rent t(if\n  (send\n    (nth-ref 1) :==\n    (str \"?\"))\n  (send\n    (lvar :values) :shift)\n  (if\n    (send\n      (nth-ref 1) :==\n      (str \"\"))\n    (int 1)\n    (if\n      (send\n        (nth-ref 1) :==\n        (str \"-\"))\n      (int -1)\n      (nth-ref 1)))) to_i g? ","element p(if\n  (send\n    (nth-ref 1) :==\n    (str \"?\"))\n  (send\n    (lvar :values) :shift)\n  (if\n    (send\n      (nth-ref 1) :==\n      (str \"\"))\n    (int 1)\n    (if\n      (send\n        (nth-ref 1) :==\n        (str \"-\"))\n      (int -1)\n      (nth-ref 1)))) to_i rent ","element p(if\n  (send\n    (nth-ref 1) :==\n    (str \"?\"))\n  (send\n    (lvar :values) :shift)\n  (if\n    (send\n      (nth-ref 1) :==\n      (str \"\"))\n    (int 1)\n    (if\n      (send\n        (nth-ref 1) :==\n        (str \"-\"))\n      (int -1)\n      (nth-ref 1)))) to_i rent nil? ","attri(if\n  (send\n    (nth-ref 2) :==\n    (str \"?\"))\n  (send\n    (lvar :values) :shift)\n  (nth-ref 2)) to_i utes << ","attri(if\n  (send\n    (nth-ref 1) :==\n    (str \"?\"))\n  (send\n    (lvar :values) :shift)\n  (nth-ref 1)) to_i utes << ","(if\n  (send\n    (nth-ref 1) :==\n    (str \"?\"))\n  (send\n    (lvar :values) :shift)\n  (if\n    (send\n      (nth-ref 1) :==\n      (str \"\"))\n    (int 1)\n    (if\n      (send\n        (nth-ref 1) :==\n        (str \"-\"))\n      (int -1)\n      (nth-ref 1)))) to_i ttributes << "," attri(if\n  (send\n    (nth-ref 2) :==\n    (str \"?\"))\n  (send\n    (lvar :values) :shift)\n  (nth-ref 2)) to_i ute_match "," attri(if\n  (send\n    (nth-ref 1) :==\n    (str \"?\"))\n  (send\n    (lvar :values) :shift)\n  (nth-ref 1)) to_i ute_match "," (if\n  (send\n    (nth-ref 1) :==\n    (str \"?\"))\n  (send\n    (lvar :values) :shift)\n  (if\n    (send\n      (nth-ref 1) :==\n      (str \"\"))\n    (int 1)\n    (if\n      (send\n        (nth-ref 1) :==\n        (str \"-\"))\n      (int -1)\n      (nth-ref 1)))) to_i ttribute_m(if\n  (send\n    (nth-ref 1) :==\n    (str \"?\"))\n  (send\n    (lvar :values) :shift)\n  (if\n    (send\n      (nth-ref 1) :==\n      (str \"\"))\n    (int 1)\n    (if\n      (send\n        (nth-ref 1) :==\n        (str \"-\"))\n      (int -1)\n      (nth-ref 1)))) to_i tch ","n(if\n  (send\n    (nth-ref 1) :==\n    (str \"?\"))\n  (send\n    (lvar :values) :shift)\n  (if\n    (send\n      (nth-ref 1) :==\n      (str \"\"))\n    (int 1)\n    (if\n      (send\n        (nth-ref 1) :==\n        (str \"-\"))\n      (int -1)\n      (nth-ref 1)))) to_i me downc(if\n  (send\n    (nth-ref 1) :==\n    (str \"?\"))\n  (send\n    (lvar :values) :shift)\n  (if\n    (send\n      (nth-ref 1) :==\n      (str \"\"))\n    (int 1)\n    (if\n      (send\n        (nth-ref 1) :==\n        (str \"-\"))\n      (int -1)\n      (nth-ref 1)))) to_i se strip ","n(if\n  (send\n    (nth-ref 1) :==\n    (str \"?\"))\n  (send\n    (lvar :values) :shift)\n  (if\n    (send\n      (nth-ref 1) :==\n      (str \"\"))\n    (int 1)\n    (if\n      (send\n        (nth-ref 1) :==\n        (str \"-\"))\n      (int -1)\n      (nth-ref 1)))) to_i me downc(if\n  (send\n    (nth-ref 1) :==\n    (str \"?\"))\n  (send\n    (lvar :values) :shift)\n  (if\n    (send\n      (nth-ref 1) :==\n      (str \"\"))\n    (int 1)\n    (if\n      (send\n        (nth-ref 1) :==\n        (str \"-\"))\n      (int -1)\n      (nth-ref 1)))) to_i se ","v(if\n  (send\n    (nth-ref 1) :==\n    (str \"?\"))\n  (send\n    (lvar :values) :shift)\n  (if\n    (send\n      (nth-ref 1) :==\n      (str \"\"))\n    (int 1)\n    (if\n      (send\n        (nth-ref 1) :==\n        (str \"-\"))\n      (int -1)\n      (nth-ref 1)))) to_i lue [] ","value []  [] ","v(if\n  (send\n    (nth-ref 1) :==\n    (str \"?\"))\n  (send\n    (lvar :values) :shift)\n  (if\n    (send\n      (nth-ref 1) :==\n      (str \"\"))\n    (int 1)\n    (if\n      (send\n        (nth-ref 1) :==\n        (str \"-\"))\n      (int -1)\n      (nth-ref 1)))) to_i lue [] == ","value []  [] == ","v(if\n  (send\n    (nth-ref 1) :==\n    (str \"?\"))\n  (send\n    (lvar :values) :shift)\n  (if\n    (send\n      (nth-ref 1) :==\n      (str \"\"))\n    (int 1)\n    (if\n      (send\n        (nth-ref 1) :==\n        (str \"-\"))\n      (int -1)\n      (nth-ref 1)))) to_i lue strip! ","value []  strip! ","values shift  strip! ","v(if\n  (send\n    (nth-ref 1) :==\n    (str \"?\"))\n  (send\n    (lvar :values) :shift)\n  (if\n    (send\n      (nth-ref 1) :==\n      (str \"\"))\n    (int 1)\n    (if\n      (send\n        (nth-ref 1) :==\n        (str \"-\"))\n      (int -1)\n      (nth-ref 1)))) to_i lue == ","value []  == ","cl(if\n  (send\n    (nth-ref 1) :==\n    (str \"?\"))\n  (send\n    (lvar :values) :shift)\n  (if\n    (send\n      (nth-ref 1) :==\n      (str \"\"))\n    (int 1)\n    (if\n      (send\n        (nth-ref 1) :==\n        (str \"-\"))\n      (int -1)\n      (nth-ref 1)))) to_i ss_n(if\n  (send\n    (nth-ref 1) :==\n    (str \"?\"))\n  (send\n    (lvar :values) :shift)\n  (if\n    (send\n      (nth-ref 1) :==\n      (str \"\"))\n    (int 1)\n    (if\n      (send\n        (nth-ref 1) :==\n        (str \"-\"))\n      (int -1)\n      (nth-ref 1)))) to_i me is_(if\n  (send\n    (nth-ref 1) :==\n    (str \"?\"))\n  (send\n    (lvar :values) :shift)\n  (if\n    (send\n      (nth-ref 1) :==\n      (str \"\"))\n    (int 1)\n    (if\n      (send\n        (nth-ref 1) :==\n        (str \"-\"))\n      (int -1)\n      (nth-ref 1)))) to_i ? ","id is_(if\n  (send\n    (nth-ref 1) :==\n    (str \"?\"))\n  (send\n    (lvar :values) :shift)\n  (if\n    (send\n      (nth-ref 1) :==\n      (str \"\"))\n    (int 1)\n    (if\n      (send\n        (nth-ref 1) :==\n        (str \"-\"))\n      (int -1)\n      (nth-ref 1)))) to_i ? ","m(if\n  (send\n    (nth-ref 1) :==\n    (str \"?\"))\n  (send\n    (lvar :values) :shift)\n  (if\n    (send\n      (nth-ref 1) :==\n      (str \"\"))\n    (int 1)\n    (if\n      (send\n        (nth-ref 1) :==\n        (str \"-\"))\n      (int -1)\n      (nth-ref 1)))) to_i tch downc(if\n  (send\n    (nth-ref 1) :==\n    (str \"?\"))\n  (send\n    (lvar :values) :shift)\n  (if\n    (send\n      (nth-ref 1) :==\n      (str \"\"))\n    (int 1)\n    (if\n      (send\n        (nth-ref 1) :==\n        (str \"-\"))\n      (int -1)\n      (nth-ref 1)))) to_i se ","m(if\n  (send\n    (nth-ref 1) :==\n    (str \"?\"))\n  (send\n    (lvar :values) :shift)\n  (if\n    (send\n      (nth-ref 1) :==\n      (str \"\"))\n    (int 1)\n    (if\n      (send\n        (nth-ref 1) :==\n        (str \"-\"))\n      (int -1)\n      (nth-ref 1)))) to_i tch == ","m(if\n  (send\n    (nth-ref 1) :==\n    (str \"?\"))\n  (send\n    (lvar :values) :shift)\n  (if\n    (send\n      (nth-ref 1) :==\n      (str \"\"))\n    (int 1)\n    (if\n      (send\n        (nth-ref 1) :==\n        (str \"-\"))\n      (int -1)\n      (nth-ref 1)))) to_i tch strip! "]}," HTML Selector next_element":{"type":"method","name":"next_element","children":[],"call":["node name == ","node name ","name nil? ","node tag? ","node equal? ","siblings each ","element parent children ","element parent ","element parent children  each "]}," HTML Selector to_s":{"type":"method","name":"to_s","children":[],"call":[]}," HTML Selector select_first":{"type":"method","name":"select_first","children":[],"call":["stack concat ","children reverse ","node children ","subset first ","subset empty? ! ","subset empty? "," match ","node tag? ","stack pop ","node children  reverse ","node node children  ","stack pop  children "," match  first "," match  empty? ! "," match  empty? ","stack pop  tag? "]}," HTML Selector select":{"type":"method","name":"select","children":[],"call":["stack concat ","children reverse ","node children ","matches << ","item equal? ","matches any? ","subset each "," match ","node tag? ","stack pop ","node children  reverse ","node node children  ","stack pop  children "," match  each ","stack pop  tag? "]}," HTML Selector match":{"type":"method","name":"match","children":[],"call":["matches concat ","alternate match ","@alternates each ","matches ! ","first_only ! ","@depends call ","pseudo call ","negation [] ","element attributes [] =~ ","attr [] ","element attributes [] ","element attributes ","negation [] == ","element name ","element attributes [] !~ ","@tag_name == ","@tag_name ! ","@depends call  concat ","@depends call  ! "]}," HTML Selector initialize":{"type":"method","name":"initialize","children":[],"call":[" raise ","statement strip empty? ","statement strip ","statement empty? ","@source << << ","second to_s ","@source << ","matches empty? ","stack concat ","children reverse ","node children ","matches concat ","matches << ","subset first ","subset empty? ! ","subset empty? ","second match ","node tag? ","stack pop ","element children reverse ","element children "," lambda "," next_selector ","statement != ","statement =~ ","child tag? ","element children each ","statement sub! "," next_element ","@alternates concat ","second instance_variable_set ","second instance_variable_get ","(or-asgn\n  (ivasgn :@alternates)\n  (array)) << ","Selector  new "," instance_variable_set "," simple_selector each "," simple_selector ","selector strip dup ","selector strip ","values [] ","values [] is_a? ","values size == ","values size ","selector empty? ","@alternates << ","selector strip dup  strip empty? ","selector strip dup  strip ","selector strip dup  empty? "," next_selector  to_s ","Selector  new  to_s ","element children reverse  concat ","node children  reverse ","node node children  ","stack pop  children ","second match  first ","second match  empty? ! ","second match  empty? "," next_selector  match ","Selector  new  match ","stack pop  tag? ","element children reverse  pop ","element node children  reverse "," next_element  children reverse ","element node children  "," next_element  children ","selector strip dup  != ","selector strip dup  =~ ","element node children  each "," next_element  children each ","selector strip dup  sub! "," next_ next_element  ","@second instance_variable_get  concat "," next_selector  instance_variable_set ","Selector  new  instance_variable_set "," next_selector  instance_variable_get ","Selector  new  instance_variable_get ","(or-asgn\n  (ivasgn :@second instance_variable_get )\n  (array)) << ","values []  [] ","values []  [] is_a? ","values []  size == ","values []  size ","@second instance_variable_get  << "]}," HTML Selector for_id":{"type":"method","name":"for_id","children":[],"call":[" new "]}," HTML Selector for_class":{"type":"method","name":"for_class","children":[],"call":[" new "]}," ActionController UrlWriter url_for":{"type":"method","name":"url_for","children":[],"call":["url << ","Routing Routes  generate ","options delete ","options key? "," raise ","options [] ","(sym :protocol) each "," class default_url_options merge "," class default_url_options "," class ","CGI  escape ","options delete to_param to_s ","options delete to_param ","url match ","ActionController AbstractRequest  relative_url_root to_s ","ActionController AbstractRequest  relative_url_root ","/ + ","generated sub ","ActionController Base  relative_url_root to_s ","ActionController Base  relative_url_root ","URI  escape "," class default_url_options merge  delete "," class default_url_options merge  key? "," class default_url_options merge  [] "," class default_url_ class default_url_options merge  merge "," class default_url_ class default_url_options merge  "," class default_url_options merge  delete to_param to_s "," class default_url_options merge  delete to_param ","Routing Routes  generate  sub "]}," ActionController UrlWriter included":{"type":"method","name":"included","children":[],"call":[]}," ActionController TestSession data":{"type":"method","name":"data","children":[],"call":[" to_hash "]}," ActionController TestRequest accept=":{"type":"method","name":"accept=","children":[],"call":["@env []= ","(send\n  (send nil :Array\n    (lvar :mime_types)) :collect) join ","mime_types to_s "," Array collect "," Array "," accepts "]}," ActionController StatusCodes interpret_status":{"type":"method","name":"interpret_status","children":[],"call":["status to_s "," interpret_status ","status inspect ","SYMBOL_TO_STATUS_CODE  [] ","(begin\n  (lvar :status)) strip ","STATUS_CODES  [] "]}," CGI Session DRbStore data":{"type":"method","name":"data","children":[],"call":["@@session_data [] "]}," ActionController Scaffolding included":{"type":"method","name":"included","children":[],"call":[]}," ActionController Routing RouteSet extract_request_environment":{"type":"method","name":"extract_request_environment","children":[],"call":["request method "]}," ActionController Routing RouteSet routes_for_controller_and_action_and_keys":{"type":"method","name":"routes_for_controller_and_action_and_keys","children":[],"call":["(send\n  (lvar :keys) :-\n  (send\n    (lvar :route) :significant_keys)) length ","keys - ","route significant_keys ","selected sort_by ","route matches_controller_and_action? "," routes select "," routes "]}," ActionController Routing RouteSet routes_for_controller_and_action":{"type":"method","name":"routes_for_controller_and_action","children":[],"call":[" routes ","selected length == "," routes length ","selected length ","route matches_controller_and_action? "," routes select ","ActiveSupport Deprecation  warn "]}," ActionController Routing RouteSet routes_for":{"type":"method","name":"routes_for","children":[],"call":[" routes_by_controller [] [] [] ","merged keys "," routes_by_controller [] [] "," routes_by_controller [] "," routes_by_controller ","merged [] ","expire_on [] "," raise "," action "," controller "," routes_by_controller [] [] [] [] "," routes_by_merged []  [] [] [] "," routes_by_merged []  [] [] "," routes_by_merged []  [] "," routes_by_merged []  "," merged []  "," routes_by_merged []  [] [] [] [] "]}," ActionController Routing RouteSet routes_by_controller":{"type":"method","name":"routes_by_controller","children":[],"call":["controller_hash []= ","action_hash []= ","key_hash []= "," routes_for_controller_and_action_and_keys ","Hash  new "," deprecated_routes_for_controller_and_action_and_keys "]}," ActionController Routing RouteSet recognize_path":{"type":"method","name":"recognize_path","children":[],"call":[" raise ","environment inspect ","path inspect ","route recognize "," routes each "," routes ","CGI  unescape ","MethodNotAllowed  new ","allows empty? ! ","allows empty? ","NotImplemented  new ","HTTP_METHODS  include? ! ","HTTP_METHODS  include? ","environment [] ","r recognize "," routes find ","HTTP_METHODS  select "," recognize_optimized ","environment merge ","CGI  unescape  inspect "]}," ActionController Routing RouteSet generate_extras":{"type":"method","name":"generate_extras","children":[],"call":[" generate "]}," ActionController Routing RouteSet build_expiry":{"type":"method","name":"build_expiry","children":[],"call":["expiry []= ","options [] != ","options [] ","options key? ","recall inject ","options [] to_param != ","recalled_value to_param ","options [] to_param "]}," ActionController Routing RouteSet options_as_params":{"type":"method","name":"options_as_params","children":[],"call":["options_as_params []= ","value to_param ","options each ","options [] ","options_as_params [] to_s ","options_as_params [] ","options clone ","options clone  []= ","options clone  [] to_s ","options clone  [] "]}," ActionController Routing RouteSet add_named_route":{"type":"method","name":"add_named_route","children":[],"call":[" named_routes []= "," add_route "," named_routes ","name to_sym ","options [] + ","name to_s ","options [] "," options [] + d_routes []= "," options [] + d_routes ","options [] +  to_sym ","options [] +  to_s "]}," ActionController Routing RouteSet add_route":{"type":"method","name":"add_route","children":[],"call":[" routes << "," routes "," builder build "," builder ","@routes << "," raise ","route inspect ","route kind_of? ","options []= ","v to_s ","v is_a? ","(sym :controller) include? ","options each ","  builder build s << ","  builder build s ","@ builder build s << "," builder build  inspect "," builder build  kind_of? "]}," ActionController Routing RouteSet load_routes!":{"type":"method","name":"load_routes!","children":[],"call":[" add_route "," load ","File  join "," == ","File  stat mtime ","File  stat "," configuration_file "," routes_changed_at "," configuration_files each "," configuration_files "," configuration_files any? "]}," ActionController Routing RouteSet load!":{"type":"method","name":"load!","children":[],"call":[" named_routes install "," named_routes "," load_routes! "," clear! ","Routing  use_controllers! "," install_helpers "]}," ActionController Routing RouteSet clear!":{"type":"method","name":"clear!","children":[],"call":[" named_routes clear "," named_routes "," routes clear "," routes "," clear_recognize_optimized! "]}," ActionController Routing RouteSet builder":{"type":"method","name":"builder","children":[],"call":["RouteBuilder  new "]}," ActionController Routing RouteSet NamedRouteCollection define_url_helper":{"type":"method","name":"define_url_helper","children":[],"call":[" helpers << "," helpers ","@module send ","segment_keys inspect "," hash_access_name ","(send\n  (send\n    (lvar :route) :segments) :collect) compact ","segment key ","segment respond_to? ","route segments collect ","route segments "," url_helper_name ","@module module_eval ","route segment_keys inspect ","route segment_keys "," generate_optimisation_block "," named_helper_module_eval ","(send\n  (send\n    (lvar :route) :segments) :collect) compact  inspect ","route (send\n  (send\n    (lvar :route) :segments) :collect) compact  inspect ","route (send\n  (send\n    (lvar :route) :segments) :collect) compact  "]}," ActionController Routing RouteSet NamedRouteCollection define_hash_access":{"type":"method","name":"define_hash_access","children":[],"call":[" helpers << "," helpers ","@module send ","options inspect "," hash_access_name ","@module module_eval "," named_helper_module_eval "]}," ActionController Routing RouteSet NamedRouteCollection define_named_route_methods":{"type":"method","name":"define_named_route_methods","children":[],"call":[" define_url_helper "," define_hash_access ","route defaults merge merge ","route defaults merge ","route defaults ","(pair\n  (sym :url)\n  (hash\n    (pair\n      (sym :only_path)\n      (false)))) each "," define_route defaults merge merge _access ","(pair\n  (sym :url)\n  (route defaults merge merge \n    (pair\n      (sym :only_path)\n      (false)))) each "]}," ActionController Routing RouteSet NamedRouteCollection hash_access_name":{"type":"method","name":"hash_access_name","children":[],"call":[]}," ActionController Routing RouteSet NamedRouteCollection url_helper_name":{"type":"method","name":"url_helper_name","children":[],"call":[]}," ActionController Routing RouteSet NamedRouteCollection install":{"type":"method","name":"install","children":[],"call":["dest send "," Array each "," Array ","dest send! "," reset! ","dest __send__ "]}," ActionController Routing RouteSet NamedRouteCollection length":{"type":"method","name":"length","children":[],"call":[" routes length "," routes "]}," ActionController Routing RouteSet NamedRouteCollection names":{"type":"method","name":"names","children":[],"call":[" routes keys "," routes "]}," ActionController Routing RouteSet NamedRouteCollection each":{"type":"method","name":"each","children":[],"call":[" routes each "," routes "]}," ActionController Routing RouteSet NamedRouteCollection get":{"type":"method","name":"get","children":[],"call":[" routes [] ","name to_sym "," routes "]}," ActionController Routing RouteSet NamedRouteCollection add":{"type":"method","name":"add","children":[],"call":[" define_named_route_methods "," routes []= ","name to_sym "," routes "]}," ActionController Routing RouteSet NamedRouteCollection clear!":{"type":"method","name":"clear!","children":[],"call":["@module send ","@module instance_methods each ","@module instance_methods ","Module  new "," remove_method ","@module class_eval "]}," ActionController Routing RouteSet NamedRouteCollection initialize":{"type":"method","name":"initialize","children":[],"call":[" clear! "]}," ActionController Routing RouteSet Mapper method_missing":{"type":"method","name":"method_missing","children":[],"call":["@set add_named_route ","proc nil? ","args length >= ","args length "]}," ActionController Routing RouteSet Mapper root":{"type":"method","name":"root","children":[],"call":["@set add_named_route ","proc nil? ","args length >= ","args length "," named_route ","source_route defaults merge ","source_route conditions ","source_route defaults ","@set named_routes routes [] ","@set named_routes routes ","@set named_routes ","options is_a? ","@set named_routes routes []  defaults merge ","@set named_routes routes []  conditions ","@set named_routes routes []  defaults ","source_route defaults merge  is_a? "]}," ActionController Routing RouteSet Mapper named_route":{"type":"method","name":"named_route","children":[],"call":["@set add_named_route "]}," ActionController Routing RouteSet Mapper connect":{"type":"method","name":"connect","children":[],"call":["@set add_route "]}," ActionController Routing RouteSet Mapper initialize":{"type":"method","name":"initialize","children":[],"call":[]}," ActionController Routing RouteBuilder build":{"type":"method","name":"build","children":[],"call":[" raise ","route significant_keys include? ! ","route significant_keys include? ","route significant_keys ","route significant_keys << ","route requirements []= ","route requirements ","route requirements [] ! ","route requirements [] ","route conditions= ","route requirements= ","route segments= ","Route  new "," assign_route_options "," divide_route_options "," segments_for_route_path ","path [] == ","path [] ","route optimise= ","route requirements keys to_set != ","route requirements keys to_set ","route requirements keys ","options key? ","options [] to_s gsub ","options [] to_s ","options [] ","route freeze ","segment freeze ","segments each ","prefix blank? ","Route  new  significant_keys include? ! ","Route  new  significant_keys include? ","Route  new  significant_keys ","Route  new  significant_keys << ","Route  new  requirements []= ","route  assign_route_options  []= ","Route  new  requirements ","route  assign_route_options  ","Route  new  requirements [] ! ","route  assign_route_options  [] ! ","Route  new  requirements [] ","route  assign_route_options  [] ","Route  new  conditions= ","Route  new  requirements= ","route  assign_route_options = ","Route  new  segments= ","route  segments_for_route_path = "," assign_Route  new _options "," divide_Route  new _options "," segments_for_Route  new _path ","  segments_for_route_path _for_route_path ","Route  new  optimise= ","Route  new  requirements keys to_set != ","route  assign_route_options  keys to_set != ","Route  new  requirements keys to_set ","route  assign_route_options  keys to_set ","Route  new  requirements keys ","route  assign_route_options  keys ","Route  new  freeze "," segments_for_route_path  each ","options [] to_s gsub  blank? "]}," ActionController Routing RouteBuilder ensure_required_segments":{"type":"method","name":"ensure_required_segments","children":[],"call":["segment is_optional= ","segment default ","allow_optional & ","segment respond_to? "," warn ","segment to_s ","segment optionality_implied? ","segment optional? ","allow_optional ! ","segments reverse_each "]}," ActionController Routing RouteBuilder assign_default_route_options":{"type":"method","name":"assign_default_route_options","children":[],"call":["segment is_optional= ","segment regexp =~ ","segment regexp ","segment regexp nil? ","segment default nil? ","segment default ","segment regexp match to_s == ","segment regexp match to_s ","segment regexp match ","segment key ","segment is_a? ","segments each "]}," ActionController Routing RouteBuilder assign_route_options":{"type":"method","name":"assign_route_options","children":[],"call":[" ensure_required_segments "," assign_default_route_options ","segment default= ","default to_param ","segment is_optional= "," raise ","segment_named [] ","defaults each ","route_requirements []= ","segment regexp= ","requirement inspect ","requirement source =~ ","requirement source ","requirement is_a? ","requirements each ","segment key == ","segment key ","segment respond_to? ","segments detect ","Proc  new "," multiline_regexp? ","requirement multiline? "," ensure_required_segment_named [] s ","segment_named []  default= ","segment_named []  is_optional= ","segment_named [] _named [] ","segment_named []  regexp= ","segment_named []  key == ","segment_named []  key ","segment_named []  respond_to? ","segment_named [] s detect "]}," ActionController Routing RouteBuilder divide_route_options":{"type":"method","name":"divide_route_options","children":[],"call":["hash []= ","value is_a? ! ","value is_a? ","path_keys include? ","options each ","(send\n  (lvar :segments) :collect) compact ","segment key ","segment respond_to? ","segments collect ","(or\n  (send\n    (lvar :options) :delete\n    (sym :conditions))\n  (hash)) dup ","options delete ","(or\n  (send\n    (lvar :options) :delete\n    (sym :defaults))\n  (hash)) dup ","(or\n  (send\n    (lvar :options) :delete\n    (sym :requirements))\n  (hash)) dup ","options dup ","options []= ","options [] ","options delete sub "," validate_route_conditions ","options except ","(send\n  (lvar :segments) :collect) compact  include? ","options dup  each ","options except  each ","(or\n  (send\n    (lvar :options) :delete\n    (sym :(or\n  (send\n    (lvar :options) :delete\n    (sym :conditions))\n  (hash)) dup ))\n  (hash)) dup ","(or\n  (send\n    (lvar :options dup ) :delete\n    (sym :conditions))\n  (hash)) dup ","(or\n  (send\n    (lvar :options except ) :delete\n    (sym :conditions))\n  (hash)) dup ","options dup  delete ","options except  delete ","(or\n  (send\n    (lvar :options) :delete\n    (sym :(or\n  (send\n    (lvar :options) :delete\n    (sym :defaults))\n  (hash)) dup ))\n  (hash)) dup ","(or\n  (send\n    (lvar :options dup ) :delete\n    (sym :defaults))\n  (hash)) dup ","(or\n  (send\n    (lvar :options except ) :delete\n    (sym :defaults))\n  (hash)) dup ","(or\n  (send\n    (lvar :options) :delete\n    (sym :(or\n  (send\n    (lvar :options) :delete\n    (sym :requirements))\n  (hash)) dup ))\n  (hash)) dup ","(or\n  (send\n    (lvar :options dup ) :delete\n    (sym :requirements))\n  (hash)) dup ","(or\n  (send\n    (lvar :options except ) :delete\n    (sym :requirements))\n  (hash)) dup ","options dup  dup ","options except  dup ","options dup  []= ","options except  []= ","options dup  [] ","options except  [] ","options dup  delete sub ","options except  delete sub "," validate_route_(or\n  (send\n    (lvar :options) :delete\n    (sym :conditions))\n  (hash)) dup  ","options dup  except ","options except  except "]}," ActionController Routing RouteBuilder segment_for":{"type":"method","name":"segment_for","children":[],"call":["$~ post_match ","segment is_optional= "," optional_separators include? "," optional_separators "," returning ","DividerSegment  new ","Regexp  new "," separator_pattern ","StaticSegment  new ","PathSegment  new ","1 to_sym ","DynamicSegment  new ","ControllerSegment  new "," separator_regexp "," nonseparator_regexp ","key == ","OptionalFormatSegment  new ","DividerSegment  new  is_optional= ","StaticSegment  new  is_optional= ","1 to_sym  == "]}," ActionController Routing RouteBuilder segments_for_route_path":{"type":"method","name":"segments_for_route_path","children":[],"call":["segments << "," segment_for ","rest empty? "]}," ActionController Routing RouteBuilder interval_regexp":{"type":"method","name":"interval_regexp","children":[],"call":["Regexp  new "," separators source "," separators "]}," ActionController Routing RouteBuilder separator_pattern":{"type":"method","name":"separator_pattern","children":[],"call":["Regexp  escape "," separators join "," separators "]}," ActionController Routing RouteBuilder initialize":{"type":"method","name":"initialize","children":[],"call":[" optional_separators= "," separators= "," separator_regexp ","Regexp  escape "," separators join "," separators "]}," ActionController Routing PathSegment Result new_escaped":{"type":"method","name":"new_escaped","children":[],"call":[]}," ActionController Routing PathSegment Result to_s":{"type":"method","name":"to_s","children":[],"call":[" join "]}," ActionController Routing PathSegment regexp_chunk":{"type":"method","name":"regexp_chunk","children":[],"call":[" regexp "]}," ActionController Routing PathSegment match_extraction":{"type":"method","name":"match_extraction","children":[],"call":[" if match[ + + "," if match[ + "," default ! "," default "," ||  + "," default inspect "," key "]}," ActionController Routing PathSegment default=":{"type":"method","name":"default=","children":[],"call":[" raise ","path blank? "]}," ActionController Routing PathSegment default":{"type":"method","name":"default","children":[],"call":[]}," ActionController Routing PathSegment interpolation_chunk":{"type":"method","name":"interpolation_chunk","children":[],"call":["EscapedSlash  inspect "," local_name "]}," ActionController Routing ControllerSegment match_extraction":{"type":"method","name":"match_extraction","children":[],"call":[" key "," default "]}," ActionController Routing ControllerSegment extract_value":{"type":"method","name":"extract_value","children":[],"call":[" default inspect "," default "," key "," local_name "]}," ActionController Routing ControllerSegment interpolation_chunk":{"type":"method","name":"interpolation_chunk","children":[],"call":[" local_name "]}," ActionController Routing ControllerSegment regexp_chunk":{"type":"method","name":"regexp_chunk","children":[],"call":["(or\n  (send nil :regexp)\n  (send\n    (const nil :Regexp) :union\n    (splat\n      (lvar :possible_names)))) source ","Regexp  union "," regexp ","Regexp  escape ","Routing  possible_controllers collect ","Routing  possible_controllers "]}," ActionController Routing DynamicSegment optionality_implied?":{"type":"method","name":"optionality_implied?","children":[],"call":["(sym :action) include? "," key "]}," ActionController Routing DynamicSegment match_extraction":{"type":"method","name":"match_extraction","children":[],"call":[" key "," default inspect "," default "]}," ActionController Routing DynamicSegment build_pattern":{"type":"method","name":"build_pattern","children":[],"call":["Regexp  optionalize "," optional? ","Regexp  new number_of_captures == ","Regexp  new number_of_captures ","Regexp  new "," regexp_chunk "," regexp_ regexp_chunk  "]}," ActionController Routing DynamicSegment regexp_chunk":{"type":"method","name":"regexp_chunk","children":[],"call":["Routing SEPARATORS  join "," regexp source "," regexp "," regexp to_s "," regexp_has_modifiers? "," default_regexp_chunk "," regexp_string "]}," ActionController Routing DynamicSegment value_regexp":{"type":"method","name":"value_regexp","children":[],"call":["Regexp  new "," regexp source "," regexp "," regexp to_s "]}," ActionController Routing DynamicSegment string_structure":{"type":"method","name":"string_structure","children":[],"call":[" interpolation_statement ","(str \"if \") + + + ","(str \"if \") + + ","(str \"if \") + "," continue_string_structure "," default inspect "," default "," local_name "," optional? "]}," ActionController Routing DynamicSegment interpolation_chunk":{"type":"method","name":"interpolation_chunk","children":[],"call":[" local_name "]}," ActionController Routing DynamicSegment extraction_code":{"type":"method","name":"extraction_code","children":[],"call":["s << "," expiry_statement "," value_check "," extract_value "," extract_value  << "," expiry_ extract_value tatement "]}," ActionController Routing DynamicSegment expiry_statement":{"type":"method","name":"expiry_statement","children":[],"call":[" key "]}," ActionController Routing DynamicSegment value_check":{"type":"method","name":"value_check","children":[],"call":[" local_name "," value_regexp inspect "," value_regexp "," regexp "," optional? "," default "]}," ActionController Routing DynamicSegment extract_value":{"type":"method","name":"extract_value","children":[],"call":[" default inspect "," default "," key "," local_name "]}," ActionController Routing DynamicSegment local_name":{"type":"method","name":"local_name","children":[],"call":[" key "]}," ActionController Routing DynamicSegment to_s":{"type":"method","name":"to_s","children":[],"call":[" key "]}," ActionController Routing DynamicSegment initialize":{"type":"method","name":"initialize","children":[],"call":[" is_optional= ","options key? ","options [] "," default= "," key= "]}," ActionController Routing DividerSegment optionality_implied?":{"type":"method","name":"optionality_implied?","children":[],"call":[]}," ActionController Routing DividerSegment initialize":{"type":"method","name":"initialize","children":[],"call":[" is_optional= "," raw= ","(pair\n  (sym :raw)\n  (true)) merge "]}," ActionController Routing StaticSegment to_s":{"type":"method","name":"to_s","children":[],"call":[" value "]}," ActionController Routing StaticSegment build_pattern":{"type":"method","name":"build_pattern","children":[],"call":["escaped + ","Regexp  optionalize "," optional? ","Regexp  unoptionalize ","pattern empty? ! ","pattern empty? ","Regexp  escape "," value ","Regexp  escape  + "]}," ActionController Routing StaticSegment regexp_chunk":{"type":"method","name":"regexp_chunk","children":[],"call":["Regexp  optionalize "," optional? ","Regexp  escape "," value "]}," ActionController Routing StaticSegment interpolation_chunk":{"type":"method","name":"interpolation_chunk","children":[],"call":["CGI  escape "," value "," raw? "]}," ActionController Routing StaticSegment initialize":{"type":"method","name":"initialize","children":[],"call":[" value= ","options [] ","options key? "]}," ActionController Routing Segment optionality_implied?":{"type":"method","name":"optionality_implied?","children":[],"call":[]}," ActionController Routing Segment match_extraction":{"type":"method","name":"match_extraction","children":[],"call":[]}," ActionController Routing Segment all_optionals_available_condition":{"type":"method","name":"all_optionals_available_condition","children":[],"call":["optional_locals * ","optional_locals empty? ","(send\n  (lvar :prior_segments) :collect) compact ","s local_name ","s respond_to? ","s optional? ","prior_segments collect ","(send\n  (lvar :prior_segments) :collect) compact  * ","(send\n  (lvar :prior_segments) :collect) compact  empty? "]}," ActionController Routing Segment string_structure":{"type":"method","name":"string_structure","children":[],"call":[" interpolation_statement "," continue_string_structure "," optional? "]}," ActionController Routing Segment interpolation_statement":{"type":"method","name":"interpolation_statement","children":[],"call":[" all_optionals_available_condition ","chunks * ","chunks << "," interpolation_chunk ","s interpolation_chunk ","prior_segments collect "]}," ActionController Routing Segment continue_string_structure":{"type":"method","name":"continue_string_structure","children":[],"call":["prior_segments last string_structure ","prior_segments last ","prior_segments [] "," interpolation_statement ","prior_segments empty? "]}," ActionController Routing Segment extraction_code":{"type":"method","name":"extraction_code","children":[],"call":[]}," ActionController Routing Segment initialize":{"type":"method","name":"initialize","children":[],"call":[" is_optional= "]}," ActionController Routing Route requirement_for":{"type":"method","name":"requirement_for","children":[],"call":["segment regexp ","segment key == ","segment key ","segment respond_to? "," segments each "," segments "," requirements [] "," requirements "," requirements key? "]}," ActionController Routing Route to_s":{"type":"method","name":"to_s","children":[],"call":["%-6s %-40s %s % "," requirements inspect "," requirements ","(or\n  (send\n    (send nil :conditions) :[]\n    (sym :method))\n  (sym :any)) to_s upcase ","(or\n  (send\n    (send nil :conditions) :[]\n    (sym :method))\n  (sym :any)) to_s "," conditions [] "," conditions ","str << ","s to_s "," segments inject "," segments "]}," ActionController Routing Route matches_controller_and_action?":{"type":"method","name":"matches_controller_and_action?","children":[],"call":["@action_requirement === ","@action_requirement nil? ","@controller_requirement === ","@controller_requirement nil? "," requirement_for "," prepare_matching! "," requirement_for  === "," requirement_for  nil? "]}," ActionController Routing Route defaults":{"type":"method","name":"defaults","children":[],"call":["hash []= ","req nil? ","Regexp  === "," requirements each "," requirements ","segment default ","segment key ","segment default nil? ","segment respond_to? "," segments each "," segments "," returning "," tap "]}," ActionController Routing Route significant_keys":{"type":"method","name":"significant_keys","children":[],"call":["sk uniq! ","sk concat "," requirements keys "," requirements ","sk << ","segment key ","segment respond_to? "," segments each "," segments "," returning "," tap "]}," ActionController Routing Route parameter_shell":{"type":"method","name":"parameter_shell","children":[],"call":["shell []= ","requirement is_a? "," requirements each "," requirements "," returning "," tap "]}," ActionController Routing Route recognize":{"type":"method","name":"recognize","children":[],"call":[" recognize "," write_recognition ","v nil? ","options delete_if ","components join ","components empty? ","options [] ","v kind_of? ","@requirements each ","options []= ","controller_class controller_path "," raise ","@requirements [] ","extras empty? "," eat_path_to_controller ","@requirements [] split ","controller_class nil? ","item inspect ","component != ","components shift ","CGI  unescape ","value nil? "," requirements_for "," passes_requirements? ","@defaults [] ","item kind_of? ","leftover empty? == ","leftover empty? ","@defaults [] split ","item == ","@items each ","components clone ","options clone ","item to_s sub intern ","item to_s sub ","item to_s "," join ","value collect! ","@defaults [] clone ","@defaults has_key? ","options clone  delete_if ","components shift s join ","components clone  join ","components shift s empty? ","components clone  empty? ","options clone  [] ","options clone  []= ","components shift  != ","components shift s shift ","components clone  shift ","components clone  nil? ","@defaults [] clone  nil? ","components shift s clone ","components clone  clone ","options clone  clone ","components clone  collect! ","@defaults [] clone  collect! "]}," ActionController Routing Route build_query_string":{"type":"method","name":"build_query_string","children":[],"call":["elements join ","elements empty? ","elements << ","CGI  escape ","val to_param to_s ","val to_param ","value each ","key << ","value class == ","value class ","key to_s ","hash [] ","only_keys each ","hash keys ","elements sort * ","elements sort ","value to_query ","(or\n  (lvar :only_keys)\n  (send\n    (lvar :hash) :keys)) each ","hash []  each ","CGI  escape  << ","hash []  class == ","hash []  class ","CGI  escape  to_s ","only_CGI  escape s each ","hash CGI  escape s ","hash []  to_query ","(or\n  (lvar :only_CGI  escape s)\n  (send\n    (lvar :hash) :CGI  escape s)) each "]}," ActionController Routing Route append_query_string":{"type":"method","name":"append_query_string","children":[],"call":[" build_query_string "," extra_keys "]}," ActionController Routing Route generate_extras":{"type":"method","name":"generate_extras","children":[],"call":[" generate_extras "," write_generation "," extra_keys "," generate_raw "]}," ActionController Routing Route generate":{"type":"method","name":"generate","children":[],"call":[" generate "," write_generation ","c to_s ","components collect! ","unused []= ","options [] ","options [] != ","@defaults [] ","(send\n  (send\n    (lvar :options) :keys) :-\n  (send\n    (lvar :used_names) :keys)) inject ","options keys - ","used_names keys ","options keys ","missing join ","missing length > ","missing length ","missing empty? ","missing << ","@items [] ","c nil? ","components each_with_index ","components pop ","@defaults [] == ","components last ","item kind_of? ","@items reverse_each ","CGI  escape ","value to_s ","item == ","value nil? ","value == ","defaults [] ","defaults == "," requirements_for "," passes_requirements? ","used_names []= ","@items collect ","hash []= ","@requirements inject ","non_matching join ","non_matching length > ","non_matching length ","non_matching empty? ","non_matching collect! "," passes_requirements? ! ","@requirements keys select ","@requirements keys ","Routing  extract_parameter_value ","Routing  extract_parameter_value gsub ","(send\n  (lvar :value) :collect) join ","value collect ","value kind_of? ","item to_s sub intern ","item to_s sub ","item to_s "," append_query_string "," extra_keys "," generate_raw ","@item to_s sub intern s [] ","item to_s sub intern  kind_of? ","@item to_s sub intern s reverse_each ","Routing  extract_parameter_value gsub  to_s ","(send\n  (lvar :value) :collect) join  to_s ","item to_s sub intern  == ","Routing  extract_parameter_value gsub  nil? ","(send\n  (lvar :value) :collect) join  nil? ","Routing  extract_parameter_value gsub  == ","(send\n  (lvar :value) :collect) join  == ","@item to_s sub intern s collect ","Routing  extract_parameter_Routing  extract_parameter_value gsub  ","Routing  extract_parameter_(send\n  (lvar :value) :collect) join  ","Routing  extract_parameter_Routing  extract_parameter_value gsub  gsub ","Routing  extract_parameter_(send\n  (lvar :value) :collect) join  gsub ","(send\n  (lvar :Routing  extract_parameter_value gsub ) :collect) join ","(send\n  (lvar :(send\n  (lvar :value) :collect) join ) :collect) join ","Routing  extract_parameter_value gsub  collect ","(send\n  (lvar :value) :collect) join  collect ","Routing  extract_parameter_value gsub  kind_of? ","(send\n  (lvar :value) :collect) join  kind_of? ","item to_s sub intern  to_s sub intern ","item to_s sub intern  to_s sub ","item to_s sub intern  to_s "]}," ActionController Routing Route recognition_extraction":{"type":"method","name":"recognition_extraction","children":[],"call":["extraction compact ","Regexp  new number_of_captures ","Regexp  new ","segment regexp_chunk ","segment match_extraction "," segments collect "," segments ","segment number_of_captures ","esegment match_extraction traction compact ","Regesegment match_extraction p  new number_of_captures ","Regesegment match_extraction p  new ","segment regesegment match_extraction p_chunk ","segment match_esegment match_extraction traction "]}," ActionController Routing Route recognition_pattern":{"type":"method","name":"recognition_pattern","children":[],"call":["\\A + + ","\\A + ","segment build_pattern "," segments reverse_each "," segments ","segment build_segment build_pattern  "]}," ActionController Routing Route recognition_conditions":{"type":"method","name":"recognition_conditions","children":[],"call":["result << "," conditions [] "," conditions ","Regexp  new inspect ","Regexp  new "," recognition_pattern "]}," ActionController Routing Route generation_structure":{"type":"method","name":"generation_structure","children":[],"call":[" segments last string_structure "," segments [] "," segments "," segments last "]}," ActionController Routing Route generation_requirements":{"type":"method","name":"generation_requirements","children":[],"call":["requirement_conditions * ","requirement_conditions empty? ","req inspect ","value_regexp inspect ","Regexp  new ","req source ","req is_a? "," requirements collect "," requirements ","req to_s ","Regexp  new  inspect "]}," ActionController Routing Route generation_extraction":{"type":"method","name":"generation_extraction","children":[],"call":["(send\n  (send nil :segments) :collect) compact * ","(send\n  (send nil :segments) :collect) compact ","segment extraction_code "," segments collect "," segments "]}," ActionController Routing use_controllers!":{"type":"method","name":"use_controllers!","children":[],"call":[]}," ActionController Routing possible_controllers":{"type":"method","name":"possible_controllers","children":[],"call":["@possible_controllers uniq! ","@possible_controllers << ","controller_name gsub! ","path [] ","load_path length + ","load_path length ","seen_paths [] ","path gsub ","Dir  [] collect ","Dir  [] "," normalize_paths each "," normalize_paths ","h []= ","Hash  new ","path != ","File  directory? "," controller_paths select "," controller_paths ","path []  gsub! "]}," ActionController Routing normalize_paths":{"type":"method","name":"normalize_paths","children":[],"call":["path length -@ ","path length ","paths uniq sort_by ","paths uniq ","path gsub! ","path match ","path gsub gsub gsub ","path gsub gsub ","path gsub ","paths collect ","path gsub gsub gsub  length -@ ","path gsub gsub gsub  length ","path gsub gsub gsub s uniq sort_by ","path gsub gsub gsub s uniq ","path gsub gsub gsub  gsub! ","path gsub gsub gsub  match ","path gsub gsub gsub  gsub gsub gsub ","path gsub gsub gsub  gsub gsub ","path gsub gsub gsub  gsub ","path gsub gsub gsub s collect "]}," ActionController Routing with_controllers":{"type":"method","name":"with_controllers","children":[],"call":[" use_controllers! "]}," Regexp unoptionalize":{"type":"method","name":"unoptionalize","children":[],"call":["regexp =~ ","(regexp\n  (str \"\\\\A\\\\(\\\\?:(.*)\\\\)\\\\?\\\\Z\")\n  (regopt)) each "]}," Regexp optionalize":{"type":"method","name":"optionalize","children":[],"call":[" unoptionalize "]}," Regexp number_of_captures":{"type":"method","name":"number_of_captures","children":[],"call":["Regexp  new match captures length ","Regexp  new match captures ","Regexp  new match ","Regexp  new "," source "]}," NilClass to_param":{"type":"method","name":"to_param","children":[],"call":[]}," FalseClass to_param":{"type":"method","name":"to_param","children":[],"call":[]}," TrueClass to_param":{"type":"method","name":"to_param","children":[],"call":[]}," Object to_param":{"type":"method","name":"to_param","children":[],"call":[" to_s "]}," ActionController AbstractResponse charset":{"type":"method","name":"charset","children":[],"call":["charset strip split [] ","charset strip split ","charset strip ","charset blank? "," String split [] "," String split "," String ","@headers [] "," headers [] "," headers "," String split []  strip split [] "," String split []  strip split "," String split []  strip "," String split []  blank? "]}," ActionController AbstractResponse charset=":{"type":"method","name":"charset=","children":[],"call":["@headers []= "," content_type "," headers []= "," headers ","Mime HTML  to_s "]}," ActionController AbstractResponse content_type":{"type":"method","name":"content_type","children":[],"call":["content_type blank? "," String split [] "," String split "," String ","@headers [] "," headers [] "," headers "," String split []  blank? "]}," ActionController AbstractResponse content_type=":{"type":"method","name":"content_type=","children":[],"call":["@headers []= "," charset "," headers []= "," headers ","mime_type to_s ","(lvasgn :c\n  (send nil :charset)) nil? ","mime_type =~ ","  charset harset ","(lvasgn : charset \n  (send nil : charset harset)) nil? "]}," ActionController Resources requirements_for":{"type":"method","name":"requirements_for","children":[],"call":["method == "]}," ActionController Resources map_member_actions":{"type":"method","name":"map_member_actions","children":[],"call":["map connect ","resource member_path ","map named_route ","resource singular ","resource name_prefix ","route_options merge ","action to_s ","actions each "," requirements_for ","resource member_methods each ","resource member_methods "," action_options_for ","resource action_separator ","Base  resources_path_names [] ","Base  resources_path_names ","resource options [] [] ","resource options [] ","resource options ","resource options [] is_a? "," map_resource_routes ","resource shallow_name_prefix ","(lvar :method) flatten each ","(lvar :method) flatten "," requirements_for  merge ","  action_options_for _for "]}," ActionController Resources map_new_actions":{"type":"method","name":"map_new_actions","children":[],"call":["map named_route ","route_options merge ","action to_s ","resource new_path ","resource singular ","resource name_prefix ","action == ","actions each "," requirements_for ","resource new_methods each ","resource new_methods ","resource action_separator "," action_options_for "," map_resource_routes "," requirements_for  merge ","  action_options_for _for "]}," ActionController Resources map_collection_actions":{"type":"method","name":"map_collection_actions","children":[],"call":["map connect ","resource path ","map named_route ","resource plural ","resource name_prefix ","route_options merge ","action to_s ","actions each "," requirements_for ","resource collection_methods each ","resource collection_methods ","resource action_separator "," action_options_for "," map_resource_routes ","(lvar :method) flatten each ","(lvar :method) flatten ","resource options [] [] ","resource options [] ","resource options ","resource options [] is_a? "," requirements_for  merge ","  action_options_for _for "]}," ActionController Resources map_resource":{"type":"method","name":"map_resource","children":[],"call":[" with_options ","resource nesting_path_prefix "," block_given? "," map_member_actions "," map_new_actions "," map_collection_actions ","resource controller ","Resource  new ","options [] ","resource nesting_name_prefix "," map_associations "," map_default_collection_actions ","options slice merge ","options slice ","Resource  new  nesting_path_prefix ","Resource  new  controller ","Resource  new  nesting_name_prefix "]}," ActionController Resources resources":{"type":"method","name":"resources","children":[],"call":[" map_resource ","options dup ","entities each ","entities pop ","entities last is_a? ","entities last ","entities extract_options! ","entities pop  dup ","entities extract_options!  dup ","entities extract_entities pop ! ","entities extract_entities extract_options! ! "]}," ActionController Resources Resource add_default_action":{"type":"method","name":"add_default_action","children":[],"call":["(or-asgn\n  (send\n    (lvar :collection) :[]\n    (lvar :method))\n  (array)) unshift ","collection [] "]}," ActionController Resources Resource arrange_actions_by_methods":{"type":"method","name":"arrange_actions_by_methods","children":[],"call":["(or-asgn\n  (send\n    (lvar :flipped_hash) :[]\n    (lvar :value))\n  (array)) << ","flipped_hash [] ","(or\n  (lvar :actions)\n  (hash)) inject "]}," ActionController Resources Resource set_prefixes":{"type":"method","name":"set_prefixes","children":[],"call":[" options delete "," options "]}," ActionController Resources Resource add_default_actions":{"type":"method","name":"add_default_actions","children":[],"call":[" add_default_action "," new_methods "," member_methods "]}," ActionController Resources Resource arrange_actions":{"type":"method","name":"arrange_actions","children":[],"call":[" arrange_actions_by_methods "," options delete "," options "]}," ActionController Resources Resource nesting_path_prefix":{"type":"method","name":"nesting_path_prefix","children":[],"call":[" singular "," path "," path_segment "," shallow_path_prefix "]}," ActionController Resources Resource member_path":{"type":"method","name":"member_path","children":[],"call":[" path "," path_segment "," shallow_path_prefix "]}," ActionController Resources Resource new_path":{"type":"method","name":"new_path","children":[],"call":[" path ","Base  resources_path_names [] ","Base  resources_path_names "," options [] [] "," options [] "," options "]}," ActionController Resources Resource path":{"type":"method","name":"path","children":[],"call":[" plural "," path_prefix "," path_segment "]}," ActionController Resources Resource controller":{"type":"method","name":"controller","children":[],"call":["(or\n  (send\n    (send nil :options) :[]\n    (sym :controller))\n  (send nil :plural)) to_s "," plural "," options [] "," options "]}," ActionController Resources Resource initialize":{"type":"method","name":"initialize","children":[],"call":[" set_prefixes "," add_default_actions "," arrange_actions "," plural to_s singularize "," plural to_s "," plural ","options [] ","options delete "," set_allowed_actions "]}," Mime Type register":{"type":"method","name":"register","children":[],"call":["LOOKUP  []= ","EXTENSION_LOOKUP  []= ","SET  last ","symbol to_s ","SET  << ","Mime  send ","symbol to_s upcase ","Type  new ","(send\n  (array\n    (send\n      (lvar :symbol) :to_s)) :+\n  (lvar :extension_synonyms)) each ","(send\n  (lvar :symbol) :to_s) + ","(send\n  (array\n    (lvar :string)) :+\n  (lvar :mime_type_synonyms)) each ","(lvar :string) + ","Mime  const_get "," const_set ","Mime  instance_eval ","Mime  const_set ","ext to_s ","(send\n  (array\n    (lvar :symbol)) :+\n  (lvar :extension_synonyms)) each ","(lvar :symbol) + ","callback call ","@register_callbacks each ","symbol upcase "]}," ActionController MimeResponds Responder method_missing":{"type":"method","name":"method_missing","children":[],"call":[" custom ","Mime  const_get ","Mime SET  include? ","symbol to_s upcase ","symbol to_s "," send "," class generate_method_for_mime "," class "]}," ActionController Macros InPlaceEditing included":{"type":"method","name":"included","children":[],"call":[]}," ActionController Macros AutoComplete included":{"type":"method","name":"included","children":[],"call":[]}," ActionController Integration Session head":{"type":"method","name":"head","children":[],"call":[" process "]}," ActionController Integration Session delete":{"type":"method","name":"delete","children":[],"call":[" process "]}," ActionController Integration Session put":{"type":"method","name":"put","children":[],"call":[" process "]}," ActionController Helpers included":{"type":"method","name":"included","children":[],"call":[]}," ActionController Flash InstanceMethods reset_session_with_flash":{"type":"method","name":"reset_session_with_flash","children":[],"call":[" flash "," remove_instance_variable "," reset_session_without_flash "]}," ActionController Filters InstanceMethods halt_filter_chain":{"type":"method","name":"halt_filter_chain","children":[],"call":[" logger info ","filter inspect "," logger "]}," ActionController Filters InstanceMethods call_filter":{"type":"method","name":"call_filter","children":[],"call":[" halt_filter_chain ","filter filter ","halted == "," call_filter ","index next ","filter call "," class filter_excluded_from_action? "," action_name "," class ","chain [] "," perform_action_without_filters "," performed? ","index >= ","chain size "," halt_chain [] _chain ","chain []  chain []  "," call_filter  == "," call_chain []  ","chain []  call "," class chain [] _excluded_from_action? "," perform_action_without_chain [] s "]}," ActionController Filters InstanceMethods filter_chain":{"type":"method","name":"filter_chain","children":[],"call":[" class filter_chain "," class "]}," ActionController Filters ClassMethods proxy_before_and_after_filter":{"type":"method","name":"proxy_before_and_after_filter","children":[],"call":["filter after ","action call ","filter before == ","filter before ","Proc  new "," filter_responds_to_before_and_after ","controller send ","controller send! "]}," ActionController Filters ClassMethods filter_responds_to_before_and_after":{"type":"method","name":"filter_responds_to_before_and_after","children":[],"call":["filter respond_to? "]}," ActionController Filters ClassMethods delete_filters_in_chain":{"type":"method","name":"delete_filters_in_chain","children":[],"call":[" write_inheritable_attribute ","filters include? "," filter_chain reject "," filter_chain "]}," ActionController Filters ClassMethods remove_actions_from_included_actions!":{"type":"method","name":"remove_actions_from_included_actions!","children":[],"call":[" write_inheritable_attribute ","hash []= ","hash delete ","ia blank? ","(or\n  (send\n    (lvar :hash) :[]\n    (lvar :filter))\n  (array)) - ","hash [] ","filters inject "," included_actions ","actions flatten map ","actions flatten ","ia empty? "," read_inheritable_attribute ","(or\n  (send\n    (lvar :hash) :[]\n    (lvar :filter))\n  (array)) -  blank? "," included_actions flatten map  ","actions flatten map  flatten map ","actions flatten map  flatten ","(or\n  (send\n    (lvar :hash) :[]\n    (lvar :filter))\n  (array)) -  empty? "]}," ActionController Filters ClassMethods skip_filter_in_chain":{"type":"method","name":"skip_filter_in_chain","children":[],"call":[" update_conditions ","conditions [] ","conditions []= "," remove_actions_from_included_actions! "," delete_filters_in_chain ","conditions empty? ","filters compact! "," find_filter "," block_given? ","filters map! "," extract_conditions "]}," ActionController Filters ClassMethods update_conditions":{"type":"method","name":"update_conditions","children":[],"call":[" write_inheritable_hash "," condition_hash ","conditions [] ","conditions empty? "]}," ActionController Filters ClassMethods extract_conditions":{"type":"method","name":"extract_conditions","children":[],"call":["filters << "," block_given? ","filters pop ","filters last is_a? ","filters last ","filters flatten! ","filters extract_options! "]}," ActionController Filters ClassMethods class_for_filter":{"type":"method","name":"class_for_filter","children":[],"call":[" raise ","filter respond_to? ","filter arity == ","filter arity ","filter is_a? ","filter_type == "]}," ActionController Filters ClassMethods find_or_create_filter":{"type":"method","name":"find_or_create_filter","children":[],"call":["AfterFilterProxy  new ","BeforeFilterProxy  new "," class_for_filter new "," class_for_filter ","f send "," find_filter ","f type == ","f type ","A class_for_filter new terFilterProxy  new ","Be class_for_filter new oreFilterProxy  new "," class_ class_for_filter new or_ class_for_filter new ilter new "," class_ class_for_filter new or_ class_for_filter new ilter "," class_for_filter new  send ","  class_for_filter new ind_ class_for_filter new ilter "," class_for_filter new  type == "," class_for_filter new  type "]}," ActionController Filters ClassMethods create_filters":{"type":"method","name":"create_filters","children":[],"call":[" update_conditions "," find_or_create_filter ","filters map! "," extract_conditions "]}," ActionController Filters ClassMethods ClassFilter call":{"type":"method","name":"call","children":[],"call":["@filter filter "]}," ActionController Filters ClassMethods MethodFilter call":{"type":"method","name":"call","children":[],"call":["@filter call "]}," ActionController Filters ClassMethods ProcWithCallFilter call":{"type":"method","name":"call","children":[],"call":[" raise ","@filter call "]}," ActionController Filters ClassMethods ProcFilter call":{"type":"method","name":"call","children":[],"call":[" raise ","@filter call "]}," ActionController Filters ClassMethods SymbolFilter call":{"type":"method","name":"call","children":[],"call":["controller send ","controller send! "]}," ActionController Filters ClassMethods AfterFilterProxy call":{"type":"method","name":"call","children":[],"call":["@filter call "," run "]}," ActionController Filters ClassMethods AfterFilterProxy after?":{"type":"method","name":"after?","children":[],"call":[]}," ActionController Filters ClassMethods BeforeFilterProxy call":{"type":"method","name":"call","children":[],"call":["controller halt_filter_chain "," == ","@filter call "," run "]}," ActionController Filters ClassMethods BeforeFilterProxy before?":{"type":"method","name":"before?","children":[],"call":[]}," ActionController Filters ClassMethods FilterProxy around?":{"type":"method","name":"around?","children":[],"call":[]}," ActionController Filters ClassMethods FilterProxy filter":{"type":"method","name":"filter","children":[],"call":["@filter filter "]}," ActionController Filters ClassMethods Filter call":{"type":"method","name":"call","children":[],"call":[" raise "," run "]}," ActionController Filters ClassMethods Filter around?":{"type":"method","name":"around?","children":[],"call":[" type == "," type "]}," ActionController Filters ClassMethods Filter after?":{"type":"method","name":"after?","children":[],"call":[" type == "," type "]}," ActionController Filters ClassMethods Filter before?":{"type":"method","name":"before?","children":[],"call":[" type == "," type "]}," ActionController Filters ClassMethods Filter initialize":{"type":"method","name":"initialize","children":[],"call":[]}," ActionController Filters ClassMethods filter_excluded_from_action?":{"type":"method","name":"filter_excluded_from_action?","children":[],"call":["(or\n  (send\n    (send nil :excluded_actions) :[]\n    (lvar :filter))\n  (array)) include? "," excluded_actions [] "," excluded_actions ","ia include? ! ","ia include? ","ia empty? ! ","ia empty? "," included_actions [] "," included_actions ","ea include? "," included_actions []  include? ! "," included_actions []  include? "," included_actions []  empty? ! "," included_actions []  empty? "," excluded_actions []  include? "]}," ActionController Filters ClassMethods find_filter":{"type":"method","name":"find_filter","children":[],"call":["(send\n  (send nil :filter_chain) :select) first "," block_given? ! "," block_given? ","f filter == ","f filter "," filter_chain select "," filter_chain "]}," ActionController Filters ClassMethods filter_chain":{"type":"method","name":"filter_chain","children":[],"call":[" read_inheritable_attribute "," filter_chain "," write_inheritable_attribute ","FilterChain  new "," filter_ read_inheritable_attribute  "]}," ActionController Filters ClassMethods skip_filter":{"type":"method","name":"skip_filter","children":[],"call":[" skip_filter_in_chain "," filter_chain skip_filter_in_chain "," filter_chain "]}," ActionController Dependencies included":{"type":"method","name":"included","children":[],"call":[]}," ActionController CgiResponse set_content_length!":{"type":"method","name":"set_content_length!","children":[],"call":["@headers []= ","@body size ","@body respond_to? "]}," CGI QueryExtension read_params":{"type":"method","name":"read_params","children":[],"call":[" read_query "," read_from_cmdline "," read_body "]}," CGI QueryExtension read_body":{"type":"method","name":"read_body","children":[],"call":[" env_table []= ","content freeze "," env_table ","content gsub! ","content chop! ","content [] == ","content [] "," stdinput read "," stdinput "," stdinput binmode "," stdinput respond_to? "]}," CGI QueryExtension read_query":{"type":"method","name":"read_query","children":[],"call":["uri split [] ","uri split ","(lvasgn :uri\n  (send\n    (send nil :env_table) :[]\n    (str \"REQUEST_URI\"))) blank? ! ","(lvasgn :uri\n  (send\n    (send nil :env_table) :[]\n    (str \"REQUEST_URI\"))) blank? "," env_table [] "," env_table ","env_qs blank? ","Apache  request args ","Apache  request "," env_table []  split [] "," env_table []  split ","(lvasgn : env_table [] \n  (send\n    (send nil :env_table) :[]\n    (str \"REQUEST_URI\"))) blank? ! ","(lvasgn : env_table [] \n  (send\n    (send nil :env_table) :[]\n    (str \"REQUEST_URI\"))) blank? "," env_table []  blank? "]}," CGI QueryExtension extract_multipart_form_boundary":{"type":"method","name":"extract_multipart_form_boundary","children":[],"call":["MULTIPART_FORM_BOUNDARY_RE  match to_a pop ","MULTIPART_FORM_BOUNDARY_RE  match to_a ","MULTIPART_FORM_BOUNDARY_RE  match "]}," CGIMethods FormEncodedPairParser type_conflict!":{"type":"method","name":"type_conflict!","children":[],"call":[" raise ","Conflicting types for parameter containers.  + + ","Conflicting types for parameter containers.  + ","value class "]}," CGIMethods FormEncodedPairParser bind":{"type":"method","name":"bind","children":[],"call":[" raise "," top inspect "," top "," top [] "," parent << "," parent "," parent is_a? "," top key? ","CGI  unescape "," top is_a? "," top << "," push "," top last ","(pair\n  (lvar :key)\n  (lvar :value)) with_indifferent_access "," top [] []= "," top [] key? ! "," top [] key? "," top [] is_a? "," top CGI  unescape ? ","(pair\n  (lvar :CGI  unescape )\n  (lvar :value)) with_indifferent_access "," top [] CGI  unescape ? ! "," top [] CGI  unescape ? "]}," CGIMethods FormEncodedPairParser push":{"type":"method","name":"push","children":[],"call":[]}," CGIMethods FormEncodedPairParser container":{"type":"method","name":"container","children":[],"call":[" push "," type_conflict! ","value is_a? "," bind ","klass new "," top [] "," top "," top [] is_a? ! "," top [] is_a? "," top key? "," top is_a? "," bind  is_a? "]}," CGIMethods FormEncodedPairParser post_key_check":{"type":"method","name":"post_key_check","children":[],"call":[" container "," check "," scan "]}," CGIMethods FormEncodedPairParser parse":{"type":"method","name":"parse","children":[],"call":[" bind "," post_key_check "," [] "," scan "," eos? "," result "," string= "," post_ post_key_check _check "," post_ [] _check "," post_ scan _check ","  scan esult "," st scan ing= "]}," CGIMethods FormEncodedPairParser initialize":{"type":"method","name":"initialize","children":[],"call":[" parse ","pairs each "]}," ActionController Caching Sweeping included":{"type":"method","name":"included","children":[],"call":[]}," ActionController Caching Fragments included":{"type":"method","name":"included","children":[{"type":"method","name":"fragment_cache_store=","children":[],"asgn":[],"call":[]}],"call":[]}," ActionController Caching Actions ActionCachePath extract_extension":{"type":"method","name":"extract_extension","children":[],"call":["file_path [] ","request cache_format ","extension nil? ","request path [] ","request path ","request cache_format  nil? ","request path []  nil? "]}," ActionController Caching Actions ActionCachePath add_extension!":{"type":"method","name":"add_extension!","children":[],"call":["@path << "," extension ","path << ","path ends_with? ! ","path ends_with? "]}," ActionController Caching Actions ActionCachePath normalize!":{"type":"method","name":"normalize!","children":[],"call":["@path << ","@path last == ","@path last ","path << ","path [] == ","path [] ","URI  unescape "," extension ","path ends_with? ! ","path ends_with? ","URI  parser unescape ","URI  parser ","path split first ends_with? ! ","path split first ends_with? ","path split first ","path split "]}," ActionController Caching Actions ActionCachePath extension":{"type":"method","name":"extension","children":[],"call":[" extract_extension "," controller request path "," controller request "," controller "]}," ActionController Caching Actions ActionCachePath path":{"type":"method","name":"path","children":[],"call":["URI  unescape "," add_extension! "," normalize! "," controller url_for split last "," controller url_for split "," controller url_for "," options "," controller "]}," ActionController Caching Actions ActionCachePath initialize":{"type":"method","name":"initialize","children":[],"call":["URI  unescape "," add_extension! "," normalize! ","controller url_for split last ","controller url_for split ","controller url_for "," extract_extension ","controller request path ","controller request ","options reverse_merge ","options is_a? ","options reverse_merge! ","controller params [] ","controller params ","controller request controller url_for split last  ","options reverse_merge  reverse_merge ","options reverse_merge  is_a? ","options reverse_merge  reverse_merge! "]}," ActionController Caching Actions ActionCachePath path_for":{"type":"method","name":"path_for","children":[],"call":[" new path "," new "]}," ActionController Caching Actions ActionCacheFilter set_content_type!":{"type":"method","name":"set_content_type!","children":[],"call":["action_cache_path controller response content_type= ","content_type to_s ","action_cache_path controller response ","action_cache_path controller ","Mime EXTENSION_LOOKUP  [] ","action_cache_path extension ","controller response content_type= ","Mime EXTENSION_LOOKUP  [] to_s ","controller response ","Mime Type  lookup_by_extension to_s ","Mime Type  lookup_by_extension ","action_cache_path controller response Mime EXTENSION_LOOKUP  [] = ","Mime EXTENSION_LOOKUP  []  to_s ","controller response Mime EXTENSION_LOOKUP  [] = "]}," ActionController Caching Actions included":{"type":"method","name":"included","children":[],"call":[]}," ActionController Base sending_file?":{"type":"method","name":"sending_file?","children":[],"call":[" response headers [] == "," response headers [] "," response headers "," response "]}," ActionController Base assign_default_content_type_and_charset":{"type":"method","name":"assign_default_content_type_and_charset","children":[],"call":[" class default_charset "," class "," response charset "," response "," sending_file? "," response content_type "," response assign_default_content_type_and_charset! "]}," ActionController Base assign_deprecated_shortcuts":{"type":"method","name":"assign_deprecated_shortcuts","children":[],"call":[" instance_variable_set ","ActiveSupport Deprecation DeprecatedInstanceVariableProxy  new "," raise ","value inspect ","ActiveSupport Deprecation DeprecatedInstanceVariableProxy  === "," instance_variable_get "," instance_variables include? "," instance_variables ","DEPRECATED_INSTANCE_VARIABLES  each "," instance_variable_get  inspect "]}," ActionController Base head":{"type":"method","name":"head","children":[],"call":[" render "," headers []= ","value to_s ","(send\n  (send\n    (send\n      (send\n        (lvar :key) :to_s) :dasherize) :split\n    (regexp\n      (str \"-\")\n      (regopt))) :map) join ","v capitalize ","key to_s dasherize split map ","key to_s dasherize split ","key to_s dasherize ","key to_s "," headers ","options each "," interpret_status ","options delete "," raise ","options is_a? ! ","options is_a? ","args first ","args first is_a? ","args shift ","args length == ","args length ","args empty? ","args length > ","args extract_options! ","args first  each ","args shift  each ","args extract_options!  each "," interpret_ interpret_status  "," interpret_args first  "," interpret_args shift  ","args first  delete ","args shift  delete ","args extract_options!  delete ","args first  is_a? ! ","args shift  is_a? ! ","args extract_options!  is_a? ! ","args first  is_a? ","args shift  is_a? ","args extract_options!  is_a? ","args extract_args first ! ","args extract_args shift ! ","args extract_args extract_options! ! "]}," ActionController Base render_json":{"type":"method","name":"render_json","children":[],"call":[" render_text "," response content_type= "," response ","callback blank? "]}," ActionController Base exempt_from_layout":{"type":"method","name":"exempt_from_layout","children":[],"call":["@@exempt_from_layout merge ","Regexp  escape ","extension to_s ","extension is_a? ","extensions collect "]}," ActionController Assertions clean_backtrace":{"type":"method","name":"clean_backtrace","children":[],"call":[" raise ","File  expand_path =~ ","File  expand_path ","e backtrace reject ","e backtrace ","e message ","error backtrace reject! ","error backtrace ","Regexp  new ","File  dirname ","File  expand_File  expand_path  =~ ","File  expand_File  expand_path  "]}," ActionController Assertions included":{"type":"method","name":"included","children":[],"call":[]}," ActionController Assertions TagAssertions assert_no_tag":{"type":"method","name":"assert_no_tag","children":[],"call":[" assert ","@response body inspect ","@response body ","opts inspect ","tag ! "," find_tag ","opts first ","opts last merge ","opts first to_s ","opts last ","opts size > ","opts size "," clean_backtrace ","opts first  inspect ","opts last merge  inspect "," find_tag  ! "," find_ find_tag  ","opts first  first ","opts last merge  first ","opts first  last merge ","opts last merge  last merge ","opts first  first to_s ","opts last merge  first to_s ","opts first  last ","opts last merge  last ","opts first  size > ","opts last merge  size > ","opts first  size ","opts last merge  size "]}," ActionController Assertions TagAssertions assert_tag":{"type":"method","name":"assert_tag","children":[],"call":[" assert ","@response body inspect ","@response body ","opts inspect "," find_tag ","opts first ","opts last merge ","opts first to_s ","opts last ","opts size > ","opts size "," clean_backtrace ","opts first  inspect ","opts last merge  inspect "," find_ find_tag  ","opts first  first ","opts last merge  first ","opts first  last merge ","opts last merge  last merge ","opts first  first to_s ","opts last merge  first to_s ","opts first  last ","opts last merge  last ","opts first  size > ","opts last merge  size > ","opts first  size ","opts last merge  size "]}," ActionController Assertions SelectorAssertions unescape_rjs":{"type":"method","name":"unescape_rjs","children":[],"call":["(send\n  (nth-ref 1) :hex) pack ","1 hex ","unescaped gsub! ","rjs_string gsub ","rjs_string gsub  gsub! "]}," ActionController Assertions SelectorAssertions response_from_page_or_rjs":{"type":"method","name":"response_from_page_or_rjs","children":[],"call":[" html_document root "," html_document ","root children concat ","root children ","n tag? ","HTML Document  new root children select ","HTML Document  new root children ","HTML Document  new root ","HTML Document  new "," unescape_rjs ","body sub! ","HTML Node  new ","@response body dup ","@response body ","content_type =~ ","@response headers [] ","@response headers ","@response content_type ","RJS_STATEMENTS  [] ","Mime JS  =~ ","  unescape_rjs _document root "," html_document HTML Node  new  ","  unescape_rjs _document ","HTML Node  new  children concat ","HTML Node  new  children ","HTML Document  new HTML Node  new  children select ","HTML Document  new HTML Node  new  children ","HTML Document  new HTML Node  new  ","@response body dup  sub! ","@response @response body dup  dup ","@response @response body dup  ","@response headers []  =~ ","@response content_type  =~ ","@response @response headers []  ","@response @response content_type  "]}," ActionController Assertions SelectorAssertions assert_select_email":{"type":"method","name":"assert_select_email","children":[],"call":[" assert_select ","HTML Document  new root ","HTML Document  new ","part body ","part [] to_s =~ ","part [] to_s ","part [] ","delivery parts "," assert ","deliveries empty? ! ","deliveries empty? ","ActionMailer Base  deliveries ","HTML Document  new HTML Document  new root  ","ActionMailer Base  deliveries  empty? ! ","ActionMailer Base  deliveries  empty? ","ActionMailer Base  ActionMailer Base  deliveries  "]}," ActionController Assertions SelectorAssertions assert_select_encoded":{"type":"method","name":"assert_select_encoded","children":[],"call":[" assert_select "," css_select [] "," css_select ","HTML Document  new root ","HTML Document  new ","CGI  unescapeHTML ","(send\n  (block\n    (send\n      (send\n        (lvar :element) :children) :select)\n    (args\n      (arg :c))\n    (send\n      (send\n        (lvar :c) :tag?) :!)) :map) join ","fix_content [] ","(send\n  (send\n    (lvar :element) :children) :select) map ","c tag? ! ","c tag? ","element children select ","element children ","elements map ","CGI  escapeHTML ","node content gsub ","node content "," lambda "," raise ","HTML Document  new HTML Document  new root  "]}," ActionController Assertions SelectorAssertions assert_select_rjs":{"type":"method","name":"assert_select_rjs","children":[],"call":[" flunk ","args shift "," block_given? ","matches concat ","n tag? ","HTML Document  new root children select ","HTML Document  new root children ","HTML Document  new root ","HTML Document  new "," unescape_rjs ","@response body gsub ","@response body ","Regexp  new ","Regexp  quote ","arg is_a? ","RJS_STATEMENTS  [] "," raise ","(str \"insert_\") to_sym ","rjs_type == ","(send\n  (array\n    (sym :remove)\n    (sym :show)\n    (sym :hide)\n    (sym :toggle)) :include?\n  (lvar :rjs_type)) ! ","(sym :remove) include? "," assert_block ","@response body match ","statement gsub ","args first is_a? ","args first ","rjs_type to_s ","args shift s shift ","@response body match  concat ","args shift  is_a? ","args shift  == ","(send\n  (array\n    (sym :remove)\n    (sym :show)\n    (sym :hRegexp  quote e)\n    (sym :toggle)) :include?\n  (lvar :rjs_type)) ! ","(send\n  (array\n    (sym :remove)\n    (sym :show)\n    (sym :hargs shift e)\n    (sym :toggle)) :include?\n  (lvar :rjs_type)) ! ","(send\n  (array\n    (sym :remove)\n    (sym :show)\n    (sym :hide)\n    (sym :toggle)) :include?\n  (lvar :args shift )) ! ","args shift s first is_a? ","args shift s first ","args shift  to_s "]}," ActionController Assertions SelectorAssertions assert_select":{"type":"method","name":"assert_select","children":[],"call":["matches empty? ! ","matches empty? "," block_given? "," assert ","matches size ","equals [] ","matches size <= ","matches size >= "," build_message ","html == ","match_with to_s ","html =~ ","match_with is_a? ","html strip! ","NO_STRIP  include? ","match name ","match children map join ","match children map ","match children ","matches delete_if ","text == ","text =~ ","text strip! ","text << ","node content ","stack concat ","node children reverse ","node children ","node tag? ","stack pop ","match children reverse ","selector select "," raise ","args shift ","equals []= ","arg end ","arg begin ","HTML Selector  new "," response_from_page_or_rjs ","root children concat ","root children ","HTML Node  new ","arg == ","arg is_a? ","selector to_s "," count_description ","content force_encoding ","match_with encoding ","content respond_to? ","text force_encoding ","text respond_to? ","selector select  empty? ! ","selector select  empty? ","selector select  size ","selector select  size <= ","selector select  size >= "," build_args shift  ","match children map join  == ","equals []  to_s ","match children map join  =~ ","equals []  is_a? ","match children map join  strip! ","selector select  delete_if ","stack pop  content ","node node content  ","match children reverse  concat ","stack pop  children reverse ","stack pop  children ","stack pop  tag? ","match children reverse  pop ","HTML Selector  new  select ","args shift s shift ","args shift  end ","args shift  begin "," response_from_page_or_rjs  children concat ","HTML Node  new  children concat "," response_from_page_or_rjs  children ","HTML Node  new  children ","args shift  == ","args shift  is_a? ","HTML Selector  new  to_s ","node content  force_encoding ","equals []  encoding ","node content  respond_to? "]}," ActionController Assertions SelectorAssertions css_select":{"type":"method","name":"css_select","children":[],"call":["selector select "," raise ","HTML Selector  new "," response_from_page_or_rjs ","matches << ","m equal? ","matches any? ","subset each "," css_select ","args dup ","arg dup ","@selected each ","arg == ","args shift ","arg is_a? ","HTML Selector  new  select "," css_select  each ","args shift s dup ","args shift  dup ","args shift  == ","args shift s shift ","args shift  is_a? "]}," ActionController Assertions RoutingAssertions recognized_request_for":{"type":"method","name":"recognized_request_for","children":[],"call":["ActionController Routing Routes  recognize ","request path= ","request env []= ","request_method to_s upcase ","request_method to_s ","request env ","ActionController TestRequest  new ","path first == ","path first ","ActionController TestRequest  new  path= ","ActionController TestRequest  new  env []= ","ActionController TestRequest  new _method to_s upcase ","ActionController TestRequest  new _method to_s ","ActionController TestRequest  new  env "]}," ActionController Assertions RoutingAssertions assert_routing":{"type":"method","name":"assert_routing","children":[],"call":[" assert_generates ","options []= ","default_controller include? ","controller include? ","defaults [] ","options [] "," assert_recognizes ","path [] ","path is_a? "]}," ActionController Assertions RoutingAssertions assert_generates":{"type":"method","name":"assert_generates","children":[],"call":["expected_path == "," assert_block "," build_message ","found_extras == ","extra_keys include? ! ","extra_keys include? ","options reject ","ActionController Routing Routes  generate_extras ","ActionController Routing Routes  reload ","ActionController Routing Routes  empty? ","expected_path [] == ","expected_path [] "," clean_backtrace "]}," ActionController Assertions RoutingAssertions assert_recognizes":{"type":"method","name":"assert_recognizes","children":[],"call":["request path_parameters == ","request path_parameters "," assert_block "," build_message ","expected_options diff ","expected_options stringify_keys! ","expected_options delete ","extras each_key ","extras nil? ","expected_options clone "," recognized_request_for ","ActionController Routing Routes  reload ","ActionController Routing Routes  empty? "," clean_backtrace ","path [] ","path is_a? "," recognized_request_for  path_parameters == ","request path [] _parameters == "," recognized_request_for  path_parameters ","request path [] _parameters ","expected_options clone  diff ","expected_options clone  stringify_keys! ","expected_options clone  delete ","expected_options clone  clone "," recognized_ recognized_request_for _for ","path []  [] ","path []  is_a? "]}," ActionController Assertions ResponseAssertions parameterize":{"type":"method","name":"parameterize","children":[],"call":["value to_param ","value respond_to? "]}," ActionController Assertions ResponseAssertions recognized_request_for":{"type":"method","name":"recognized_request_for","children":[],"call":["ActionController Routing Routes  recognize ","request path= ","request env []= ","request_method to_s upcase ","request_method to_s ","request env ","ActionController TestRequest  new ","path first == ","path first ","ActionController TestRequest  new  path= ","ActionController TestRequest  new  env []= ","ActionController TestRequest  new _method to_s upcase ","ActionController TestRequest  new _method to_s ","ActionController TestRequest  new  env "]}," ActionController Assertions ResponseAssertions assert_template":{"type":"method","name":"assert_template","children":[],"call":["expected == ","@response rendered_with_file? ! ","@response rendered_with_file? ","expected nil? "," assert_block "," build_message ","@response rendered_file ","expected include? ! ","expected include? "," clean_backtrace ","rendered to_s match ","rendered to_s ","@response rendered_template blank? ","@response rendered_template ","@response rendered_template to_s "," raise "," assert ","@response rendered [] empty? ","@response rendered [] ","@response rendered ","p to_s match ","p to_s ","partials keys any? ","partials keys ","options [] ","actual_count == ","expected_count to_i ","found second ","found nil? ","partials detect ","options to_s ","@response rendered [] blank? ","options nil? ","@response rendered [] to_s ","@response @response rendered_file _with_file? ! ","@response @response rendered_template to_s _with_file? ! ","@response @response rendered [] to_s _with_file? ! ","@response @response rendered_file _with_file? ","@response @response rendered_template to_s _with_file? ","@response @response rendered [] to_s _with_file? ","@response @response rendered_file _file ","@response @response rendered_template to_s _file ","@response @response rendered [] to_s _file ","@response rendered_file  to_s match ","@response rendered_template to_s  to_s match ","@response rendered [] to_s  to_s match ","@response rendered_file  to_s ","@response rendered_template to_s  to_s ","@response rendered [] to_s  to_s ","@response @response rendered_file _template blank? ","@response @response rendered_template to_s _template blank? ","@response @response rendered [] to_s _template blank? ","@response @response rendered_file _template ","@response @response rendered_template to_s _template ","@response @response rendered [] to_s _template ","@response @response rendered_file _template to_s ","@response @response rendered_template to_s _template to_s ","@response @response rendered [] to_s _template to_s ","@response @response rendered_file  [] empty? ","@response @response rendered_template to_s  [] empty? ","@response @response rendered [] to_s  [] empty? ","@response @response rendered_file  [] ","@response @response rendered_template to_s  [] ","@response @response rendered [] to_s  [] ","@response @response rendered_file  ","@response @response rendered_template to_s  ","@response @response rendered [] to_s  ","@response rendered []  keys any? ","@response rendered []  keys ","found second  == ","options []  to_i ","@response rendered []  detect ","@response @response rendered_file  [] blank? ","@response @response rendered_template to_s  [] blank? ","@response @response rendered [] to_s  [] blank? ","@response @response rendered_file  [] to_s ","@response @response rendered_template to_s  [] to_s ","@response @response rendered [] to_s  [] to_s "]}," ActionController Assertions ResponseAssertions assert_redirected_to":{"type":"method","name":"assert_redirected_to","children":[],"call":[" assert_equal ","(send\n  (array\n    (lvar :options)\n    (send\n      (ivar :@response) :redirect_url)) :collect) flatten ","/ + ","p first == ","p first ","url_regexp =~ ","(lvar :options) collect ","@response redirect_url "," build_message "," parameterize == "," parameterize ","url [] [] ","url [] ","url [] [] == ","ActionController Routing  controller_relative_to ","@controller class controller_path ","@controller class ","k == ","url [] keys all? ","url [] keys "," assert_block ","url [] diff ","url []= ","value []= ","value [] [] ","value [] ","value [] first == ","value [] first ","ActionController Routing  possible_controllers include? ","ActionController Routing  possible_controllers ","value [] != ","value [] include? ! ","value [] include? ","value [] first != ","key == ","value respond_to? ","value delete ","original [] [] == ","original [] [] ","original [] ","original [] [] nil? ","original [] stringify_keys! ","original [] is_a? ","value [] == ","@controller controller_name ","v stringify_keys! ","(send\n  (send\n    (lvar :value) :values) :select) collect ","v is_a? ","value values select ","value values ","value stringify_keys! ","value update ","route parameter_shell ","ActionController Routing Routes  named_routes [] ","ActionController Routing Routes  named_routes ","value is_a? ","request path_parameters "," recognized_request_for ","@controller send ","@controller respond_to? ","original each ","@response redirected_to dup ","@response redirected_to ","@response redirected_to is_a? ","ActionController Routing Routes  reload ","ActionController Routing Routes  empty? ","options == "," assert_response "," clean_backtrace ","value [] to_s "," flunk ","redirected_to_after_normalisation != "," normalize_argument_to_redirection ","@response redirected_to [] == ","@response redirected_to [] ","options all? ","options is_a? "," ActiveSupport Deprecation  warn ","callstack slice! "," caller dup "," caller ","request path_parameters  []= ","@controller send  []= ","request path_parameters  [] [] ","@controller send  [] [] ","request path_parameters  [] ","@controller send  [] ","request path_parameters  [] first == ","@controller send  [] first == ","request path_parameters  [] first ","@controller send  [] first ","request path_parameters  [] != ","@controller send  [] != ","request path_parameters  [] include? ! ","@controller send  [] include? ! ","request path_parameters  [] include? ","@controller send  [] include? ","request path_parameters  [] first != ","@controller send  [] first != ","request path_parameters  respond_to? ","@controller send  respond_to? ","request path_parameters  delete ","@controller send  delete ","request path_parameters  [] == ","@controller send  [] == ","@controller controller_value delete  ","(send\n  (send\n    (lvar :request path_parameters ) :request path_parameters s) :select) collect ","(send\n  (send\n    (lvar :@controller send ) :@controller send s) :select) collect ","request path_parameters  request path_parameters s select ","@controller send  @controller send s select ","request path_parameters  request path_parameters s ","@controller send  @controller send s ","request path_parameters  stringify_keys! ","@controller send  stringify_keys! ","request path_parameters  update ","@controller send  update ","ActionController Routing Routes  named_routes []  parameter_shell ","ActionController Routing Routes  named_ActionController Routing Routes  named_routes [] s [] ","ActionController Routing Routes  value delete d_routes [] ","ActionController Routing Routes  named_ActionController Routing Routes  named_routes [] s ","ActionController Routing Routes  value delete d_routes ","request path_parameters  is_a? ","@controller send  is_a? ","request path_parameters  [] to_s ","@controller send  [] to_s "," normalize_argument_to_redirection  != "," caller dup  slice! "]}," ActionController Assertions ResponseAssertions assert_response":{"type":"method","name":"assert_response","children":[],"call":[" assert_block "," build_message ","@response response_code ","@response response_code == ","ActionController StatusCodes SYMBOL_TO_STATUS_CODE  [] ","type is_a? ","@response send ","(sym :success) include? "," clean_backtrace ","@response template instance_variable_get message ","@response template instance_variable_get ","@response template ","@response error? ","exception_message to_s ","exception message ","@response template instance_variable_get _message to_s ","@response template instance_variable_get  message "]}," ActionController Assertions ModelAssertions assert_valid":{"type":"method","name":"assert_valid","children":[],"call":[" assert ","record errors full_messages join ","record errors full_messages ","record errors ","record valid? "," clean_backtrace "," ActiveSupport Deprecation  warn "," caller "]}," ActionController Assertions DomAssertions assert_dom_not_equal":{"type":"method","name":"assert_dom_not_equal","children":[],"call":["expected_dom != "," assert_block "," build_message ","actual_dom to_s ","expected_dom to_s ","HTML Document  new root ","HTML Document  new "," clean_backtrace ","DomAssertions  strip_whitespace! ","actual_dom children ","expected_dom children ","HTML Document  new root  != ","HTML Document  new root  to_s ","HTML Document  new root  children "]}," ActionController Assertions DomAssertions assert_dom_equal":{"type":"method","name":"assert_dom_equal","children":[],"call":["expected_dom == "," assert_block "," build_message ","actual_dom to_s ","expected_dom to_s ","HTML Document  new root ","HTML Document  new "," clean_backtrace ","DomAssertions  strip_whitespace! ","actual_dom children ","expected_dom children ","HTML Document  new root  == ","HTML Document  new root  to_s ","HTML Document  new root  children "]}," ActionController Assertions DeprecatedAssertions find_record_in_template":{"type":"method","name":"find_record_in_template","children":[],"call":[" assert_kind_of "," assert_not_nil ","@response template_objects [] ","@response template_objects "," assigns "]}," ActionController Assertions DeprecatedAssertions glue_columns":{"type":"method","name":"glue_columns","children":[],"call":["columns class == ","columns class ","cols << "]}," ActionController Assertions DeprecatedAssertions assert_invalid_column_on_record":{"type":"method","name":"assert_invalid_column_on_record","children":[],"call":["cols empty? "," assert_block "," build_message ","cols join ","record errors invalid? ","record errors ","cols delete_if "," glue_columns ","record send "," find_record_in_template "," glue_columns  empty? "," glue_columns  join "," find_record_in_template  errors invalid? "," find_record_in_template  errors "," glue_columns  delete_if "," find_record_in_template  send "," find_ find_record_in_template _in_template "]}," ActionController Assertions DeprecatedAssertions assert_valid_column_on_record":{"type":"method","name":"assert_valid_column_on_record","children":[],"call":["cols empty? "," assert_block "," build_message ","cols join ","record errors invalid? ! ","record errors invalid? ","record errors ","cols delete_if "," glue_columns ","record send "," find_record_in_template "," glue_columns  empty? "," glue_columns  join "," find_record_in_template  errors invalid? ! "," find_record_in_template  errors invalid? "," find_record_in_template  errors "," glue_columns  delete_if "," find_record_in_template  send "," find_ find_record_in_template _in_template "]}," ActionController Assertions DeprecatedAssertions assert_invalid_record":{"type":"method","name":"assert_invalid_record","children":[],"call":["record valid? ! ","record valid? "," assert_block "," build_message "," find_record_in_template "," find_record_in_template  valid? ! "," find_record_in_template  valid? "," find_ find_record_in_template _in_template "]}," ActionController Assertions DeprecatedAssertions assert_valid_record":{"type":"method","name":"assert_valid_record","children":[],"call":["record valid? "," assert_block "," build_message ","record errors full_messages ","record errors "," find_record_in_template "," find_record_in_template  valid? "," find_record_in_template  errors full_messages "," find_record_in_template  errors "," find_ find_record_in_template _in_template "]}," ActionController Assertions DeprecatedAssertions assert_template_xpath_match":{"type":"method","name":"assert_template_xpath_match","children":[],"call":["matches == "," assert_block "," build_message ","matches first ","matches length < ","matches length "," flunk ","matches empty? ","matches << ","e text ","xml elements each ","xml elements ","REXML Document  new ","@response body ","matches first  == ","matches first  first ","matches first  length < ","matches first  length ","matches first  empty? ","matches first  << "]}," ActionController Assertions DeprecatedAssertions assert_template_equal":{"type":"method","name":"assert_template_equal","children":[],"call":["expected == ","@response template assigns [] ","key to_s ","@response template assigns ","@response template "," assert_block "," build_message "]}," ActionController Assertions DeprecatedAssertions assert_template_has_no":{"type":"method","name":"assert_template_has_no","children":[],"call":["@response has_template_object? ! ","@response has_template_object? "," assert_block "," build_message ","@response template_objects [] ","@response template_objects "]}," ActionController Assertions DeprecatedAssertions assert_template_has":{"type":"method","name":"assert_template_has","children":[],"call":["@response has_template_object? "," assert_block "," build_message "]}," ActionController Assertions DeprecatedAssertions assert_redirect_url_match":{"type":"method","name":"assert_redirect_url_match","children":[],"call":["@response redirect_url_match? "," assert_block "," build_message ","@response redirect_url "," assert_redirect "]}," ActionController Assertions DeprecatedAssertions assert_redirect_url":{"type":"method","name":"assert_redirect_url","children":[],"call":["@response redirect_url == ","@response redirect_url "," assert_block "," build_message "," assert_redirect "]}," ActionController Assertions DeprecatedAssertions assert_flash_equal":{"type":"method","name":"assert_flash_equal","children":[],"call":["expected == ","@response flash [] ","@response flash "," assert_block "," build_message "]}," ActionController Assertions DeprecatedAssertions assert_flash_not_empty":{"type":"method","name":"assert_flash_not_empty","children":[],"call":["@response has_flash_with_contents? "," assert_block "," build_message "]}," ActionController Assertions DeprecatedAssertions assert_flash_empty":{"type":"method","name":"assert_flash_empty","children":[],"call":["@response has_flash_with_contents? ! ","@response has_flash_with_contents? "," assert_block "," build_message ","@response flash "]}," ActionController Assertions DeprecatedAssertions assert_flash_not_exists":{"type":"method","name":"assert_flash_not_exists","children":[],"call":["@response has_flash? ! ","@response has_flash? "," assert_block "," build_message ","@response flash "]}," ActionController Assertions DeprecatedAssertions assert_flash_exists":{"type":"method","name":"assert_flash_exists","children":[],"call":["@response has_flash? "," assert_block "," build_message ","@response session [] ","@response session "]}," ActionController Assertions DeprecatedAssertions assert_flash_has_no":{"type":"method","name":"assert_flash_has_no","children":[],"call":["@response has_flash_object? ! ","@response has_flash_object? "," assert_block "," build_message ","@response flash "]}," ActionController Assertions DeprecatedAssertions assert_flash_has":{"type":"method","name":"assert_flash_has","children":[],"call":["@response has_flash_object? "," assert_block "," build_message ","@response flash "]}," ActionController Assertions DeprecatedAssertions assert_cookie_equal":{"type":"method","name":"assert_cookie_equal","children":[],"call":["expected == "," assert_block "," build_message ","actual first ","@response cookies [] ","@response cookies ","actual first  first ","@response cookies []  first "]}," ActionController Assertions DeprecatedAssertions assert_no_cookie":{"type":"method","name":"assert_no_cookie","children":[],"call":["actual empty? ","actual nil? "," assert_block "," build_message ","@response cookies [] ","@response cookies ","@response cookies []  empty? ","@response cookies []  nil? "]}," ActionController Assertions DeprecatedAssertions assert_session_equal":{"type":"method","name":"assert_session_equal","children":[],"call":["expected == ","@response session [] ","@response session "," assert_block "," build_message "]}," ActionController Assertions DeprecatedAssertions assert_session_has_no":{"type":"method","name":"assert_session_has_no","children":[],"call":["@response has_session_object? ! ","@response has_session_object? "," assert_block "," build_message ","@response session "]}," ActionController Assertions DeprecatedAssertions assert_session_has":{"type":"method","name":"assert_session_has","children":[],"call":["@response has_session_object? "," assert_block "," build_message ","@response session "]}," ActionController Assertions DeprecatedAssertions assert_rendered_file":{"type":"method","name":"assert_rendered_file","children":[],"call":[" assert_template "]}," ActionController Assertions DeprecatedAssertions assert_redirect":{"type":"method","name":"assert_redirect","children":[],"call":[" assert_response "]}," ActionController Assertions DeprecatedAssertions assert_success":{"type":"method","name":"assert_success","children":[],"call":[" assert_response "]}," ActionController Routing RouteSet raise_named_route_error":{"type":"method","name":"raise_named_route_error","children":[],"call":[" raise ","named_route requirements diff inspect ","named_route requirements diff ","named_route requirements ","named_route requirements inspect ","options inspect ","required_keys_or_values inspect ","seg value ","seg key ","required_segments map ","seg is_a? ! ","seg is_a? ","seg optional? ! ","seg optional? ","named_route segments select ","named_route segments ","diff empty? ","named_route requirements named_route requirements diff  inspect ","named_route requirements named_route requirements diff  ","named_route requirements diff  empty? "]}," CGI Session create_new_id":{"type":"method","name":"create_new_id","children":[],"call":["md5 hexdigest ","md5 update "," String "," rand ","now usec ","now to_s ","Time  now ","Digest MD5  new "," class generate_unique_id "," class ","Digest MD5  new  hexdigest ","Digest MD5  new  update ","Time  now  usec ","Time  now  to_s ","Time  Time  now  "]}," ActionController Routing RouteSet add_deprecated_named_route":{"type":"method","name":"add_deprecated_named_route","children":[],"call":[" named_routes define_deprecated_named_route_methods "," named_routes "]}," ActionController Routing RouteSet NamedRouteCollection define_deprecated_named_route_methods":{"type":"method","name":"define_deprecated_named_route_methods","children":[],"call":["@module send "," hash_access_name "," url_helper_name ","(sym :url) each "]}," ActionController Routing RouteSet Mapper deprecated_named_route":{"type":"method","name":"deprecated_named_route","children":[],"call":["@set add_deprecated_named_route "]}," ActionController Filters InstanceMethods run_after_filters":{"type":"method","name":"run_after_filters","children":[],"call":["index next "," raise ","filter inspect ","filter run ","filter type "," skip_excluded_filters ","chain [] ","filter call ","index next  next "]}," ActionController Filters InstanceMethods run_before_filters":{"type":"method","name":"run_before_filters","children":[],"call":[" halt_filter_chain "," call_filters ","nesting next ","index next ","filter call ","filter run ","filter type "," skip_excluded_filters ","chain [] "," call_filters  next ","index next  next "]}," ActionController Filters InstanceMethods skip_excluded_filters":{"type":"method","name":"skip_excluded_filters","children":[],"call":["index next "," class filter_excluded_from_action? "," action_name "," class ","chain [] ","index next  next "," class chain [] _excluded_from_action? "]}," ActionController Filters ClassMethods find_filter_prepend_position":{"type":"method","name":"find_filter_prepend_position","children":[],"call":["f after? "," filter_chain each_with_index "," filter_chain ","filter_type == "]}," ActionController Filters ClassMethods find_filter_append_position":{"type":"method","name":"find_filter_append_position","children":[],"call":["f after? "," filter_chain each_with_index "," filter_chain ","filter_type == "]}," ActionController Filters ClassMethods update_filter_chain":{"type":"method","name":"update_filter_chain","children":[],"call":[" write_inheritable_attribute "," filter_chain insert flatten "," filter_chain insert "," filter_chain "," create_filters "]}," ActionController Filters ClassMethods ClassAfterFilter call":{"type":"method","name":"call","children":[],"call":["@filter after "]}," ActionController Filters ClassMethods ClassBeforeFilter call":{"type":"method","name":"call","children":[],"call":["@filter before "]}," ActionController Filters ClassMethods AfterFilterProxy run":{"type":"method","name":"run","children":[],"call":["@filter call "]}," ActionController Filters ClassMethods AfterFilterProxy type":{"type":"method","name":"type","children":[],"call":[]}," ActionController Filters ClassMethods BeforeFilterProxy run":{"type":"method","name":"run","children":[],"call":["controller send "," == ","@filter call ","controller send! "]}," ActionController Filters ClassMethods BeforeFilterProxy type":{"type":"method","name":"type","children":[],"call":[]}," ActionController Filters ClassMethods Filter run":{"type":"method","name":"run","children":[],"call":[" raise "]}," ActionController Filters ClassMethods Filter type":{"type":"method","name":"type","children":[],"call":[]}," PStore initialize":{"type":"method","name":"initialize","children":[],"call":["File  chmod ","p path ","@p transaction "," PStore  new "," raise ","session new_session ","File  exist? ","path untaint ","dir + + + ","dir + + ","dir + ","Digest MD5  hexdigest [] ","Digest MD5  hexdigest ","session session_id ","option [] ","Dir  tmpdir ","p dir + + +  "," PStore  new  transaction ","dir + + +  untaint ","session session_session session_id  "]}," ActionController Caching Actions protected_instance_variables_with_action_caching":{"type":"method","name":"protected_instance_variables_with_action_caching","children":[],"call":[" protected_instance_variables_without_action_caching + "," protected_instance_variables_without_action_caching "]}," ActionController CgiRequest cookie_only?":{"type":"method","name":"cookie_only?","children":[],"call":[" session_options_with_string_keys [] "," session_options_with_string_keys "]}," Object require":{"type":"method","name":"require","children":[],"call":[" require_without_load_path_reloading ","$: unshift ","File  directory? ","ADDITIONAL_LOAD_PATHS  reverse each ","ADDITIONAL_LOAD_PATHS  reverse "]}," Module mattr_accessor":{"type":"method","name":"mattr_accessor","children":[],"call":[" mattr_writer "," mattr_reader "]}," Module mattr_writer":{"type":"method","name":"mattr_writer","children":[],"call":[" class_eval ","sym id2name ","syms each "]}," Module mattr_reader":{"type":"method","name":"mattr_reader","children":[],"call":[" class_eval ","sym id2name ","syms each "]}," Hash symbolize_keys!":{"type":"method","name":"symbolize_keys!","children":[],"call":[" delete "," []= "," [] ","key to_sym ","key is_a? "," keys each "," keys "]}," Hash symbolize_keys":{"type":"method","name":"symbolize_keys","children":[],"call":["options []= ","key to_sym "," inject "]}," Object const_missing":{"type":"method","name":"const_missing","children":[],"call":[" pre_dependency_const_missing ","Object  const_get ","Object  const_defined? "," require_dependency ","Inflector  underscore ","Inflector  demodulize ","class_id to_s "," raise "," require_or_load ","class_id to_s demodulize underscore ","class_id to_s demodulize "]}," Dependencies require_or_load":{"type":"method","name":"require_or_load","children":[],"call":[" require "," load "," silence_warnings "," mechanism == "," mechanism "," load? "]}," Dependencies clear":{"type":"method","name":"clear","children":[],"call":[" loaded= "]}," Dependencies reload":{"type":"method","name":"reload","children":[],"call":[" load "," silence_warnings ","old_loaded each "," clear "," loaded "," loaded  each "]}," Dependencies associate_with":{"type":"method","name":"associate_with","children":[],"call":[" depend_on "]}," Dependencies depend_on":{"type":"method","name":"depend_on","children":[],"call":[" raise "," require_or_load "," loaded << "," loaded "," loaded include? ! "," loaded include? ","e message "]}," assert":{"type":"method","name":"assert","children":[],"call":["Breakpoint  assert ","Binding  of_caller "]}," breakpoint":{"type":"method","name":"breakpoint","children":[],"call":["Breakpoint  breakpoint ","Binding  of_caller "]}," IRB InputCompletor eval":{"type":"method","name":"eval","children":[],"call":[]}," IRB WorkSpace evaluate":{"type":"method","name":"evaluate","children":[],"call":[" old_evaluate ","result extend ","(true) include? ! ","(true) include? ","args [] != ","args [] ","Breakpoint  use_drb? "," old_evaluate  extend "]}," IRB Context evaluate":{"type":"method","name":"evaluate","children":[],"call":[" old_evaluate "," exit ","line chomp == ","line chomp "]}," IRB CurrentContext":{"type":"method","name":"CurrentContext","children":[{"type":"method","name":"last_value","children":[],"asgn":[],"call":[]}],"call":[]}," IRB start":{"type":"method","name":"start","children":[],"call":[]}," Breakpoint use_drb?":{"type":"method","name":"use_drb?","children":[],"call":["@use_drb == "]}," Breakpoint deactivate_drb":{"type":"method","name":"deactivate_drb","children":[],"call":["@service stop_service ","@service nil? "]}," Breakpoint activate_drb":{"type":"method","name":"activate_drb","children":[],"call":[" sleep ","DRbObject  new collision ","DRbObject  new ","DRb  start_service ","DRbService  new ","DRb  install_acl ","ACL  new "," Array each "," Array "]}," Breakpoint DRbService unregister_collision_handler":{"type":"method","name":"unregister_collision_handler","children":[],"call":[" lambda "]}," Breakpoint DRbService register_collision_handler":{"type":"method","name":"register_collision_handler","children":[],"call":[]}," Breakpoint DRbService unregister_eval_handler":{"type":"method","name":"unregister_eval_handler","children":[],"call":[" lambda "]}," Breakpoint DRbService register_eval_handler":{"type":"method","name":"register_eval_handler","children":[],"call":[]}," Breakpoint DRbService unregister_handler":{"type":"method","name":"unregister_handler","children":[],"call":[]}," Breakpoint DRbService register_handler":{"type":"method","name":"register_handler","children":[],"call":[]}," Breakpoint DRbService add_breakpoint":{"type":"method","name":"add_breakpoint","children":[],"call":["@handler call "," sleep ","workspace extend ","IRB WorkSpace  new ","IRB WorkSpace  new  extend "]}," Breakpoint DRbService ping":{"type":"method","name":"ping","children":[],"call":[]}," Breakpoint DRbService collision":{"type":"method","name":"collision","children":[],"call":["@collision_handler call "," sleep "]}," Breakpoint DRbService initialize":{"type":"method","name":"initialize","children":[],"call":["IRB  run_config ","@CONF []= ","IRB  instance_eval "]}," Breakpoint assert":{"type":"method","name":"assert","children":[],"call":[" handle_breakpoint ","Binding  of_caller "," raise ","$DEBUG ! ","Breakpoint  asserts_cause_exceptions ","callstack first match captures ","callstack first match ","callstack first ","callstack slice! ","callstack first [] "," caller ","Breakpoint  optimize_asserts "," caller  first match captures "," caller  first match "," caller  first "," caller  slice! "," caller  first [] "]}," Breakpoint handle_breakpoint":{"type":"method","name":"handle_breakpoint","children":[],"call":["block call ","@drb_service add_breakpoint ","IRB  start ","IRB WorkSpace  new "," puts "," use_drb? ! "," use_drb? "," eval ","file inspect "," catch "]}," Breakpoint CommandBundle client":{"type":"method","name":"client","children":[],"call":["Client  new "," eval "," lambda ","Breakpoint  drb_service eval_handler ","Breakpoint  drb_service ","Breakpoint  use_drb? "," sleep "]}," Breakpoint CommandBundle source_lines":{"type":"method","name":"source_lines","children":[],"call":["lines [] ","end_line - ","start_line - ","break_line + ","(send\n  (lvar :break_line) :-\n  (lvar :context)) max ","break_line - ","line chomp ","File  readlines map ","File  readlines ","break_line +  - ","(send\n  (lvar :break_line) :-\n  (lvar :context)) max  - "]}," Breakpoint CommandBundle Client method_missing":{"type":"method","name":"method_missing","children":[],"call":["result extend ","(true) include? "," eval ","Marshal  dump inspect ","Marshal  dump ","args empty? ","remote call_with_block ","block ! "," eval  extend "," eval  call_with_block "]}," Breakpoint CommandBundle Client eval":{"type":"method","name":"eval","children":[],"call":["@eval_handler call "]}," Breakpoint CommandBundle Client initialize":{"type":"method","name":"initialize","children":[],"call":[]}," Breakpoint breakpoint":{"type":"method","name":"breakpoint","children":[],"call":[" handle_breakpoint ","Binding  of_caller ","Executing break point  + + + ","Executing break point  + + ","Executing break point  + ","id inspect ","callstack first match captures ","callstack first match ","callstack first ","callstack slice! ","callstack first [] "," caller "," caller  first match captures "," caller  first match "," caller  first "," caller  slice! "," caller  first [] "]}," of_caller":{"type":"method","name":"of_caller","children":[],"call":[]}," create":{"type":"method","name":"create","children":[],"call":[]}," ActiveSupport CoreExtensions String Inflections foreign_key":{"type":"method","name":"foreign_key","children":[],"call":["Inflector  foreign_key "]}," ActiveSupport CoreExtensions String Inflections classify":{"type":"method","name":"classify","children":[],"call":["Inflector  classify "]}," ActiveSupport CoreExtensions String Inflections tableize":{"type":"method","name":"tableize","children":[],"call":["Inflector  tableize "]}," ActiveSupport CoreExtensions String Inflections demodulize":{"type":"method","name":"demodulize","children":[],"call":["Inflector  demodulize "]}," ActiveSupport CoreExtensions String Inflections underscore":{"type":"method","name":"underscore","children":[],"call":["Inflector  underscore "]}," ActiveSupport CoreExtensions String Inflections camelize":{"type":"method","name":"camelize","children":[],"call":["Inflector  camelize "]}," ActiveSupport CoreExtensions String Inflections singularize":{"type":"method","name":"singularize","children":[],"call":["Inflector  singularize "]}," ActiveSupport CoreExtensions String Inflections pluralize":{"type":"method","name":"pluralize","children":[],"call":["Inflector  pluralize "]}," ActiveSupport CoreExtensions Numeric Time since":{"type":"method","name":"since","children":[],"call":["time + "]}," ActiveSupport CoreExtensions Numeric Time ago":{"type":"method","name":"ago","children":[],"call":["time - "]}," ActiveSupport CoreExtensions Numeric Time years":{"type":"method","name":"years","children":[],"call":[" * ","365 days "]}," ActiveSupport CoreExtensions Numeric Time months":{"type":"method","name":"months","children":[],"call":[" * ","30 days "]}," ActiveSupport CoreExtensions Numeric Time fortnights":{"type":"method","name":"fortnights","children":[],"call":[" * ","2 weeks "]}," ActiveSupport CoreExtensions Numeric Time weeks":{"type":"method","name":"weeks","children":[],"call":[" * ","7 days "]}," ActiveSupport CoreExtensions Numeric Time days":{"type":"method","name":"days","children":[],"call":[" * ","24 hours "]}," ActiveSupport CoreExtensions Numeric Time hours":{"type":"method","name":"hours","children":[],"call":[" * ","60 minutes "]}," ActiveSupport CoreExtensions Numeric Time minutes":{"type":"method","name":"minutes","children":[],"call":[" * "]}," ActiveSupport CoreExtensions Numeric Bytes terabytes":{"type":"method","name":"terabytes","children":[],"call":[" * ","1024 gigabytes "]}," ActiveSupport CoreExtensions Numeric Bytes gigabytes":{"type":"method","name":"gigabytes","children":[],"call":[" * ","1024 megabytes "]}," ActiveSupport CoreExtensions Numeric Bytes megabytes":{"type":"method","name":"megabytes","children":[],"call":[" * ","1024 kilobytes "]}," ActiveSupport CoreExtensions Numeric Bytes kilobytes":{"type":"method","name":"kilobytes","children":[],"call":[" * "]}," ActiveSupport CoreExtensions Numeric Bytes bytes":{"type":"method","name":"bytes","children":[],"call":[]}," ActiveSupport CoreExtensions Hash Keys assert_valid_keys":{"type":"method","name":"assert_valid_keys","children":[],"call":[" raise ","unknown_keys join ","unknown_keys empty? "," keys - "," keys "," keys -  join "," keys -  empty? "]}," ActiveSupport CoreExtensions Hash Keys symbolize_keys!":{"type":"method","name":"symbolize_keys!","children":[],"call":[" delete "," []= "," [] ","key to_sym ","key is_a? "," keys each "," keys "]}," ActiveSupport CoreExtensions Hash Keys symbolize_keys":{"type":"method","name":"symbolize_keys","children":[],"call":["options []= ","key to_sym "," inject "]}," Class inherited_with_inheritable_attributes":{"type":"method","name":"inherited_with_inheritable_attributes","children":[],"call":["child instance_variable_set "," inheritable_attributes dup "," inheritable_attributes "," inherited_without_inheritable_attributes "," respond_to? "]}," Class reset_inheritable_attributes":{"type":"method","name":"reset_inheritable_attributes","children":[],"call":[" inheritable_attributes clear "," inheritable_attributes "]}," Class read_inheritable_attribute":{"type":"method","name":"read_inheritable_attribute","children":[],"call":[" inheritable_attributes [] "," inheritable_attributes "]}," Class write_inheritable_hash":{"type":"method","name":"write_inheritable_hash","children":[],"call":[" write_inheritable_attribute "," read_inheritable_attribute merge "," read_inheritable_attribute "," read_inheritable_attribute nil? "]}," Class write_inheritable_array":{"type":"method","name":"write_inheritable_array","children":[],"call":[" write_inheritable_attribute "," read_inheritable_attribute + "," read_inheritable_attribute "," read_inheritable_attribute nil? "]}," Class write_inheritable_attribute":{"type":"method","name":"write_inheritable_attribute","children":[],"call":[" inheritable_attributes []= "," inheritable_attributes "]}," Class inheritable_attributes":{"type":"method","name":"inheritable_attributes","children":[],"call":[]}," Class class_inheritable_hash":{"type":"method","name":"class_inheritable_hash","children":[],"call":[" class_inheritable_hash_writer "," class_inheritable_reader "]}," Class class_inheritable_array":{"type":"method","name":"class_inheritable_array","children":[],"call":[" class_inheritable_array_writer "," class_inheritable_reader "]}," Class class_inheritable_accessor":{"type":"method","name":"class_inheritable_accessor","children":[],"call":[" class_inheritable_writer "," class_inheritable_reader "]}," Class class_inheritable_hash_writer":{"type":"method","name":"class_inheritable_hash_writer","children":[],"call":[" class_eval ","syms each "]}," Class class_inheritable_array_writer":{"type":"method","name":"class_inheritable_array_writer","children":[],"call":[" class_eval ","syms each "]}," Class class_inheritable_writer":{"type":"method","name":"class_inheritable_writer","children":[],"call":[" class_eval ","syms each "]}," Class class_inheritable_reader":{"type":"method","name":"class_inheritable_reader","children":[],"call":[" class_eval ","syms each "]}," IRB parse_opts":{"type":"method","name":"parse_opts","children":[],"call":[]}," Binding of_caller":{"type":"method","name":"of_caller","children":[],"call":[" set_trace_func ","block arity ","Thread  critical= ","cc call "," raise "," lambda ","Binding.of_caller used in non-method context or  + ","extra_data [] == ","extra_data [] ","type == "," eval ","count == ","args [] ","error call ","Continuation  create ","Thread  critical "]}," Continuation create":{"type":"method","name":"create","children":[],"call":["block call ","args empty? "," callcc "]}," ActionController Caching Fragments FileStore ensure_cache_path":{"type":"method","name":"ensure_cache_path","children":[],"call":["FileUtils  makedirs ","File  exists? "]}," ActionController Caching Fragments FileStore real_file_path":{"type":"method","name":"real_file_path","children":[],"call":["%s/%s % ","name gsub gsub ","name gsub ","%s/%s.cache % "]}," ActionController Caching Fragments FileStore delete":{"type":"method","name":"delete","children":[],"call":["File  delete "," real_file_path ","File  exist? ","Base  logger info ","e message ","Base  logger ","Base  logger nil? "]}," ActionController Caching Fragments FileStore read":{"type":"method","name":"read","children":[],"call":["IO  read "," real_file_path "]}," ActionController Caching Fragments FileStore write":{"type":"method","name":"write","children":[],"call":["Base  logger info ","e message ","Base  logger ","Base  logger nil? ","f write ","File  open "," real_file_path "," ensure_cache_path ","File  dirname "]}," ActionController Caching Fragments MemoryStore delete":{"type":"method","name":"delete","children":[],"call":["@data delete ","@mutex synchronize "]}," ActionController Caching Fragments MemoryStore write":{"type":"method","name":"write","children":[],"call":["@data []= ","@mutex synchronize "]}," ActionController Caching Fragments MemoryStore read":{"type":"method","name":"read","children":[],"call":["@data [] ","@mutex synchronize "]}," ActionController Caching Pages append_features":{"type":"method","name":"append_features","children":[],"call":[]}," Inflector humanize":{"type":"method","name":"humanize","children":[],"call":["lower_case_and_underscored_word to_s gsub capitalize ","lower_case_and_underscored_word to_s gsub ","lower_case_and_underscored_word to_s "]}," ActiveSupport CoreExtensions String Inflections humanize":{"type":"method","name":"humanize","children":[],"call":["Inflector  humanize "]}," Dependencies remove_subclasses_for":{"type":"method","name":"remove_subclasses_for","children":[],"call":["klass remove_subclasses ","classes each "]}," Dependencies load?":{"type":"method","name":"load?","children":[],"call":[" mechanism == "," mechanism "]}," Class subclasses":{"type":"method","name":"subclasses","children":[],"call":["Object  subclasses_of "]}," Class remove_subclasses":{"type":"method","name":"remove_subclasses","children":[],"call":["Object  remove_subclasses_of "]}," Object subclasses_of":{"type":"method","name":"subclasses_of","children":[],"call":["subclasses << ","k to_s ","subclasses include? ","k to_s include? ","superclass == ","k ancestors include? ! ","k ancestors include? ","k ancestors ","ObjectSpace  each_object "]}," Object remove_subclasses_of":{"type":"method","name":"remove_subclasses_of","children":[],"call":["Object  send "," subclasses_of each "," subclasses_of "]}," ActionView Base evaluate_locals":{"type":"method","name":"evaluate_locals","children":[],"call":["Builder XmlMarkup  new "," instance_variable_set ","@assigns each "," eval ","local_assigns each "," binding ","local_assigns stringify_keys! "," instance_varia binding le_set ","  binding inding "]}," ActionController Routing draw":{"type":"method","name":"draw","children":[],"call":[]}," ActionController Routing RouteSet route":{"type":"method","name":"route","children":[],"call":[" add_route ","Route  new "]}," ActionController Routing RouteSet expand_controller_path!":{"type":"method","name":"expand_controller_path!","children":[],"call":["options []= ","defaults [] ","defaults delete ","options key? ","options [] ","relative_to empty? ","defaults [] split [] join ","defaults [] split [] ","defaults [] split ","defaults clear ","options [] [] ","defaults [] split [] join  empty? "]}," ActionController Routing RouteSet recognize!":{"type":"method","name":"recognize!","children":[],"call":[" raise ","RoutingError  new ","path join inspect ","path join ","request path_parameters= ","failures << ","ActionController Base  debug_routes ","controller nil? ","route recognize "," each ","@routes empty? ","(if\n  (begin\n    (match-with-lvasgn\n      (regexp\n        (str \"^/?(.*)/?$\")\n        (regopt))\n      (send\n        (lvar :request) :path)))\n  (nth-ref 1)\n  (send\n    (lvar :request) :path)) split ","request path ","(if\n  (begin\n    (match-with-lvasgn\n      (regexp\n        (str \"^/?(.*)/?$\")\n        (regopt))\n      (send\n        (lvar :request) :path)))\n  (nth-ref 1)\n  (send\n    (lvar :request) :path)) split  join inspect ","(if\n  (begin\n    (match-with-lvasgn\n      (regexp\n        (str \"^/?(.*)/?$\")\n        (regopt))\n      (send\n        (lvar :request) :path)))\n  (nth-ref 1)\n  (send\n    (lvar :request) :path)) split  join ","request (if\n  (begin\n    (match-with-lvasgn\n      (regexp\n        (str \"^/?(.*)/?$\")\n        (regopt))\n      (send\n        (lvar :request) :path)))\n  (nth-ref 1)\n  (send\n    (lvar :request) :path)) split _parameters= ","(if\n  (begin\n    (match-with-lvasgn\n      (regexp\n        (str \"^/?(.*)/?$\")\n        (regopt))\n      (send\n        (lvar :request) :(if\n  (begin\n    (match-with-lvasgn\n      (regexp\n        (str \"^/?(.*)/?$\")\n        (regopt))\n      (send\n        (lvar :request) :path)))\n  (nth-ref 1)\n  (send\n    (lvar :request) :path)) split )))\n  (nth-ref 1)\n  (send\n    (lvar :request) :(if\n  (begin\n    (match-with-lvasgn\n      (regexp\n        (str \"^/?(.*)/?$\")\n        (regopt))\n      (send\n        (lvar :request) :path)))\n  (nth-ref 1)\n  (send\n    (lvar :request) :path)) split )) split ","request (if\n  (begin\n    (match-with-lvasgn\n      (regexp\n        (str \"^/?(.*)/?$\")\n        (regopt))\n      (send\n        (lvar :request) :path)))\n  (nth-ref 1)\n  (send\n    (lvar :request) :path)) split  "]}," ActionController Routing Route requirements_for":{"type":"method","name":"requirements_for","children":[],"call":["@requirements [] inspect ","@requirements [] ","@defaults [] nil? ","@defaults [] ","@defaults key? ","name to_s sub intern ","name to_s sub ","name to_s ","name inspect ","name to_s sub intern  to_s sub intern ","name to_s sub intern  to_s sub ","name to_s sub intern  to_s ","name to_s sub intern  inspect "]}," ActionController Routing Route passes_requirements?":{"type":"method","name":"passes_requirements?","children":[],"call":["@requirements [] == ","value to_s ","@requirements [] ","match [] length == ","value length ","match [] length ","match [] ","@requirements [] match ","@defaults [] nil? ","@defaults [] ","@defaults key? ","value nil? ","value to_s  to_s ","@requirements [] match  [] length == ","value to_s  length ","@requirements [] match  [] length ","@requirements [] match  [] ","@requirements [] @requirements [] match  ","value to_s  nil? "]}," ActionController Routing Route items=":{"type":"method","name":"items=","children":[],"call":["seen []= "," raise ","path inspect ","seen key? ","item kind_of? ","@items inject ","items pop ","items last == ","items last ","items shift ","items first == ","items first ","1 intern ","path split collect ","path split ","path kind_of? ","(str \"*\") intern ","2 intern ","1 == "]}," ActionController Routing Route eat_path_to_controller":{"type":"method","name":"eat_path_to_controller","children":[],"call":["length + ","mod const_get ","mod const_available? ","path [] ","name + ","name camelize ","path inject "," eval ","name camelize  + ","name camelize  camelize "]}," ActionController Rescue response_code_for_rescue":{"type":"method","name":"response_code_for_rescue","children":[],"call":[" rescue_responses [] ","exception class name ","exception class "," rescue_responses "]}," CGI Session ActiveRecordStore marshalize":{"type":"method","name":"marshalize","children":[],"call":["Base64  encode64 ","Marshal  dump "]}," CGI Session ActiveRecordStore unmarshalize":{"type":"method","name":"unmarshalize","children":[],"call":["Marshal  load ","Base64  decode64 "]}," ActionController AbstractRequest path_info":{"type":"method","name":"path_info","children":[],"call":[" env [] "," env "]}," ActionView Helpers JavascriptHelper build_callbacks":{"type":"method","name":"build_callbacks","children":[],"call":["callbacks []= "," escape_javascript ","options [] ","on + ","callback to_s capitalize ","callback to_s ","CALLBACKS  inject "]}," ActionView Helpers JavascriptHelper build_observer":{"type":"method","name":"build_observer","children":[],"call":["javascript << ","options [] "," remote_function "]}," ActionView Helpers JavascriptHelper options_for_ajax":{"type":"method","name":"options_for_ajax","children":[],"call":["{ + + ","{ + ","(send\n  (lvar :js_options) :map) join ","js_options map ","js_options []= ","options [] ","options [] != "," build_callbacks ","options [] to_s camelize ","options [] to_s ","(send\n  (lvar : build_callbacks ) :map) join "," build_callbacks  map "," build_callbacks  []= "]}," ActionView Helpers JavascriptHelper escape_javascript":{"type":"method","name":"escape_javascript","children":[],"call":["(or\n  (lvar :javascript)\n  (str \"\")) gsub ","(or\n  (lvar :javascript)\n  (str \"\")) gsub gsub "]}," ActionView Helpers JavascriptHelper observe_form":{"type":"method","name":"observe_form","children":[],"call":[" build_observer "]}," ActionView Helpers JavascriptHelper observe_field":{"type":"method","name":"observe_field","children":[],"call":[" build_observer "]}," ActionView Helpers JavascriptHelper define_javascript_functions":{"type":"method","name":"define_javascript_functions","children":[],"call":["javascript << ","javascript << << ","IO  read ","Dir  glob each ","Dir  glob ","File  join "]}," ActionView Helpers JavascriptHelper remote_function":{"type":"method","name":"remote_function","children":[],"call":["options [] ","function << "," url_for "," options_for_ajax "," escape_javascript "]}," ActionView Helpers JavascriptHelper form_remote_tag":{"type":"method","name":"form_remote_tag","children":[],"call":[" tag ","options [] ","options [] []= "," remote_function ","options []= "]}," ActionView Helpers JavascriptHelper link_to_remote":{"type":"method","name":"link_to_remote","children":[],"call":[" link_to_function "," remote_function "]}," ActionView Helpers JavascriptHelper link_to_function":{"type":"method","name":"link_to_function","children":[],"call":[" content_tag ","html_options symbolize_keys merge ","html_options symbolize_keys ","(pair\n  (sym :href)\n  (str \"#\")) merge "]}," ActionView Helpers FormTagHelper boolean_attribute":{"type":"method","name":"boolean_attribute","children":[],"call":["options delete ","options []= ","options [] "]}," ActionView Helpers FormTagHelper convert_options":{"type":"method","name":"convert_options","children":[],"call":[" boolean_attribute ","(str \"disabled\") each ","options stringify_keys ","options stringify_keys  stringify_keys "]}," ActionView Helpers CaptureHelper instance_var_name":{"type":"method","name":"instance_var_name","children":[],"call":[]}," ActionView Helpers TextHelper human_size":{"type":"method","name":"human_size","children":[],"call":["%.1f TB % ","size / ","1.0 terabytes ","%.1f GB % ","1.0 gigabytes ","size < ","1 terabytes ","%.1f MB % ","1.0 megabytes ","1 gigabytes ","%.1f KB % ","1.0 kilobytes ","1 megabytes ","%d Bytes % ","1 kilobytes "]}," ActionController Caching Fragments FileStore search_dir":{"type":"method","name":"search_dir","children":[],"call":[" search_dir ","p directory? ","files << ","p to_s ","p file? ","Pathname  new ","File  join ","dir path ","d == ","dir each ","Dir  new "," require ","callback call ","File  directory? ","Dir  foreach "," search_File  join ir "," search_Dir  new  ","Pathname  new  directory? ","p File  join irectory? ","p Dir  new ectory? ","Pathname  new  to_s ","Pathname  new  file? ","PathFile  join   new ","dir Pathname  new ath ","File  join ir path ","Dir  new  path ","File  join  == ","File  join ir each ","Dir  new  each ","File  File  join irectory? ","File  Dir  new ectory? "]}," ActionController Caching Fragments FileStore delete_matched":{"type":"method","name":"delete_matched","children":[],"call":["File  delete ","File  exist? ","f =~ ","f index == ","f index "," search_dir each "," search_dir "," real_file_path ","options [] ","Base  logger info ","e message ","Base  logger ","Base  logger nil? "]}," ActionController Caching Fragments MemoryStore delete_matched":{"type":"method","name":"delete_matched","children":[],"call":["k =~ ","k index == ","k index ","options [] ","@data delete_if ","@mutex synchronize ","Regexp  new ","re source ","Regexp  escape ","Regexp  new  source "]}," ActionView Helpers JavascriptHelper submit_to_remote":{"type":"method","name":"submit_to_remote","children":[],"call":[" tag ","options [] ","options [] []= "," remote_function ","options []= "]}," ActionView Helpers JavascriptHelper periodically_call_remote":{"type":"method","name":"periodically_call_remote","children":[],"call":[" content_tag ","options [] "," remote_function "]}," Test Unit TestCase require_html_scanner":{"type":"method","name":"require_html_scanner","children":[],"call":[" require ","$: unshift ","File  dirname + ","File  dirname "]}," ActionController Caching Fragments cache_base_url":{"type":"method","name":"cache_base_url","children":[],"call":[" url_for "]}," ActionView Helpers JavaScriptHelper auto_complete_stylesheet":{"type":"method","name":"auto_complete_stylesheet","children":[],"call":[" content_tag "]}," ActionView Helpers JavaScriptHelper text_field_with_auto_complete":{"type":"method","name":"text_field_with_auto_complete","children":[],"call":["(if\n  (send\n    (lvar :completion_options) :[]\n    (sym :skip_style))\n  (str \"\")\n  (send nil :auto_complete_stylesheet)) + + + "," auto_complete_field ","(pair\n  (sym :url)\n  (hash\n    (pair\n      (sym :action)\n      (dstr\n        (str \"auto_complete_for_\")\n        (begin\n          (lvar :object))\n        (str \"_\")\n        (begin\n          (lvar :method)))))) update ","(if\n  (send\n    (lvar :completion_options) :[]\n    (sym :skip_style))\n  (str \"\")\n  (send nil :auto_complete_stylesheet)) + + "," content_tag ","(if\n  (send\n    (lvar :completion_options) :[]\n    (sym :skip_style))\n  (str \"\")\n  (send nil :auto_complete_stylesheet)) + "," text_field ","(pair\n  (sym :autocomplete)\n  (str \"off\")) merge! "," auto_complete_stylesheet ","completion_options [] "]}," ActionView Helpers JavaScriptHelper auto_complete_result":{"type":"method","name":"auto_complete_result","children":[],"call":[" content_tag "," h ","entry [] "," highlight ","entries map "]}," ActionView Helpers JavaScriptHelper auto_complete_field":{"type":"method","name":"auto_complete_field","children":[],"call":[" javascript_tag ","function << ",",  + + ",",  + "," options_for_javascript ","js_options []= ","options [] "," url_for ","' + + ","' + ","options [] join ","options [] kind_of? "]}," CGI Session ActiveRecordStore SqlBypass save!":{"type":"method","name":"save!","children":[],"call":["@@connection update ","@@connection quote "," session_id ","@@connection quote_column_name ","old_fingerprint != "," class fingerprint "," class "," class marshal "," data "]}," ActionController Layout render_with_a_layout_options":{"type":"method","name":"render_with_a_layout_options","children":[],"call":["(pair\n  (sym :layout)\n  (false)) merge ","options values_at compact empty? ","options values_at compact ","options values_at ","options is_a? "]}," ActionController Helpers initialize_template_class_with_helper":{"type":"method","name":"initialize_template_class_with_helper","children":[],"call":["response template extend "," class master_helper_module "," class ","response template "," returning "," initialize_template_class_without_helper "]}," ActionController AutoComplete ClassMethods auto_complete_for":{"type":"method","name":"auto_complete_for","children":[],"call":[" render ","object to_s camelize constantize find ","object to_s camelize constantize ","object to_s camelize ","object to_s ","(pair\n  (sym :conditions)\n  (array\n    (dstr\n      (str \"LOWER(\")\n      (begin\n        (lvar :method))\n      (str \") LIKE ?\"))\n    (send\n      (send\n        (str \"%\") :+\n        (send\n          (send\n            (send nil :params) :[]\n            (lvar :object)) :[]\n          (lvar :method))) :+\n      (str \"%\")))) merge! ","% + + ","% + "," params [] [] "," params [] "," params "," define_method ","(pair\n  (sym :conditions)\n  (array\n    (dstr\n      (str \"LOWER(\")\n      (begin\n        (lvar :method))\n      (str \") LIKE ?\"))\n    (send\n      (send\n        (str \"%\") :+\n        (send\n          (send\n            (send\n              (send nil :params) :[]\n              (lvar :object)) :[]\n            (lvar :method)) :downcase)) :+\n      (str \"%\")))) merge! "," params [] [] downcase "]}," ActionController AutoComplete append_features":{"type":"method","name":"append_features","children":[],"call":[]}," ActionView Partials partial_variable_name":{"type":"method","name":"partial_variable_name","children":[],"call":["partial_name split last split first intern ","partial_name split last split first ","partial_name split last split ","partial_name split last ","partial_name split "]}," ActionView Helpers TagHelper block_is_within_action_view?":{"type":"method","name":"block_is_within_action_view?","children":[],"call":[" eval ","block binding "]}," ActionView Helpers SanitizeHelper ClassMethods sanitized_allowed_protocols=":{"type":"method","name":"sanitized_allowed_protocols=","children":[],"call":["HTML WhiteListSanitizer  allowed_protocols merge ","HTML WhiteListSanitizer  allowed_protocols "]}," ActionView Helpers SanitizeHelper ClassMethods sanitized_shorthand_css_properties=":{"type":"method","name":"sanitized_shorthand_css_properties=","children":[],"call":["HTML WhiteListSanitizer  shorthand_css_properties merge ","HTML WhiteListSanitizer  shorthand_css_properties "]}," ActionView Helpers SanitizeHelper ClassMethods sanitized_allowed_css_keywords=":{"type":"method","name":"sanitized_allowed_css_keywords=","children":[],"call":["HTML WhiteListSanitizer  allowed_css_keywords merge ","HTML WhiteListSanitizer  allowed_css_keywords "]}," ActionView Helpers SanitizeHelper ClassMethods sanitized_allowed_css_properties=":{"type":"method","name":"sanitized_allowed_css_properties=","children":[],"call":["HTML WhiteListSanitizer  allowed_css_properties merge ","HTML WhiteListSanitizer  allowed_css_properties "]}," ActionView Helpers SanitizeHelper ClassMethods sanitized_allowed_attributes=":{"type":"method","name":"sanitized_allowed_attributes=","children":[],"call":["HTML WhiteListSanitizer  allowed_attributes merge ","HTML WhiteListSanitizer  allowed_attributes "]}," ActionView Helpers SanitizeHelper ClassMethods sanitized_allowed_tags=":{"type":"method","name":"sanitized_allowed_tags=","children":[],"call":["HTML WhiteListSanitizer  allowed_tags merge ","HTML WhiteListSanitizer  allowed_tags "]}," ActionView Helpers SanitizeHelper ClassMethods sanitized_bad_tags=":{"type":"method","name":"sanitized_bad_tags=","children":[],"call":["HTML WhiteListSanitizer  bad_tags merge ","HTML WhiteListSanitizer  bad_tags "]}," ActionView Helpers SanitizeHelper ClassMethods sanitized_uri_attributes=":{"type":"method","name":"sanitized_uri_attributes=","children":[],"call":["HTML WhiteListSanitizer  uri_attributes merge ","HTML WhiteListSanitizer  uri_attributes "]}," ActionView Helpers SanitizeHelper ClassMethods white_list_sanitizer":{"type":"method","name":"white_list_sanitizer","children":[],"call":["HTML WhiteListSanitizer  new "]}," ActionView Helpers SanitizeHelper ClassMethods link_sanitizer":{"type":"method","name":"link_sanitizer","children":[],"call":["HTML LinkSanitizer  new "]}," ActionView Helpers SanitizeHelper ClassMethods full_sanitizer":{"type":"method","name":"full_sanitizer","children":[],"call":["HTML FullSanitizer  new "]}," ActionView Helpers SanitizeHelper ClassMethods extended":{"type":"method","name":"extended","children":[],"call":[]}," ActionView Helpers SanitizeHelper strip_links":{"type":"method","name":"strip_links","children":[],"call":[" class link_sanitizer sanitize "," class link_sanitizer "," class "]}," ActionView Helpers SanitizeHelper strip_tags":{"type":"method","name":"strip_tags","children":[],"call":[" class full_sanitizer sanitize "," class full_sanitizer "," class "," class full_sanitizer sanitize try ","sanitized html_safe! "," returning "]}," ActionView Helpers SanitizeHelper sanitize_css":{"type":"method","name":"sanitize_css","children":[],"call":[" class white_list_sanitizer sanitize_css "," class white_list_sanitizer "," class "]}," ActionView Helpers SanitizeHelper sanitize":{"type":"method","name":"sanitize","children":[],"call":[" class white_list_sanitizer sanitize "," class white_list_sanitizer "," class "," class white_list_sanitizer sanitize try ","sanitized html_safe! "," returning "]}," ActionView Helpers SanitizeHelper included":{"type":"method","name":"included","children":[],"call":[]}," ActionView Helpers RecordTagHelper content_tag_for":{"type":"method","name":"content_tag_for","children":[],"call":[" concat ","block binding "," content_tag ","options merge "," dom_id ","(begin\n  (send nil :dom_class\n    (lvar :record))) strip ","options [] "," dom_class "," capture ","args shift ","args first is_a? ","args first ","options merge! ","args extract_options! ","(begin\n  (send nil :dom_class\n    (lvar :record)\n    (lvar :prefix))) strip ","prefix is_a? "," content_tag_for_single_record ","(send\n  (send\n    (lvar :single_or_multiple_records) :to_ary) :map) join html_safe ","(send\n  (send\n    (lvar :single_or_multiple_records) :to_ary) :map) join ","single_or_multiple_records to_ary map ","single_or_multiple_records to_ary ","single_or_multiple_records respond_to? ","(send\n  (send nil :Array\n    (lvar :single_or_multiple_records)) :map) join html_safe ","(send\n  (send nil :Array\n    (lvar :single_or_multiple_records)) :map) join "," Array map "," Array ","args shift  merge ","args extract_options!  merge ","args shift  [] ","args extract_options!  [] ","args shift  merge! ","args extract_options!  merge! ","args extract_args shift ! ","args extract_args extract_options! ! ","(begin\n  (send nil :dom_class\n    (lvar :record)\n    (lvar :args shift ))) strip ","args shift  is_a? "]}," ActionView Helpers RecordTagHelper div_for":{"type":"method","name":"div_for","children":[],"call":[" content_tag_for "]}," ActionView Helpers RecordIdentificationHelper dom_id":{"type":"method","name":"dom_id","children":[],"call":["ActionController RecordIdentifier  dom_id "]}," ActionView Helpers RecordIdentificationHelper dom_class":{"type":"method","name":"dom_class","children":[],"call":["ActionController RecordIdentifier  dom_class "]}," ActionView Helpers RecordIdentificationHelper partial_path":{"type":"method","name":"partial_path","children":[],"call":["ActionController RecordIdentifier  partial_path "]}," ActionView Helpers JavaScriptCollectionProxy in_groups_of":{"type":"method","name":"in_groups_of","children":[],"call":[" append_enumerable_function! "," arguments_for_call "," add_variable_assignment! ","arguments << ","fill_with nil? "]}," ActionView Helpers JavaScriptCollectionProxy each_slice":{"type":"method","name":"each_slice","children":[],"call":[" append_enumerable_function! ","number to_json "," add_variable_assignment! "," enumerate "," ActiveSupport JSON  encode "]}," ActionView Helpers JavaScriptHelper block_is_within_action_view?":{"type":"method","name":"block_is_within_action_view?","children":[],"call":[" eval ","block binding "]}," ActionView Helpers FormTagHelper token_tag":{"type":"method","name":"token_tag","children":[],"call":[" tag "," form_authenticity_token "," request_forgery_protection_token to_s "," request_forgery_protection_token "," protect_against_forgery? ","token nil? "," protect_against_forgery? ! ","token == "," form_authenticity_ form_authenticity_token  "," request_forgery_protection_ form_authenticity_token  to_s "," request_forgery_protection_ form_authenticity_token  "," form_authenticity_token  nil? "," form_authenticity_token  == "]}," ActionView Helpers FormTagHelper form_tag_in_block":{"type":"method","name":"form_tag_in_block","children":[],"call":[" concat ","block binding "," form_tag_html "," capture ","</form> html_safe ","</form> html_safe! ","output safe_concat ","output << ","ActiveSupport SafeBuffer  new "," safe_concat ","ActiveSupport SafeBuffer  new  safe_concat "," form_tag_html  safe_concat ","ActiveSupport SafeBuffer  new  << "," form_tag_html  << "]}," ActionView Helpers FormTagHelper form_tag_html":{"type":"method","name":"form_tag_html","children":[],"call":[" tag + "," tag "," extra_tags_for_form ","(send\n  (send nil :tag\n    (sym :form)\n    (lvar :html_options)\n    (true)) :+\n  (lvar :extra_tags)) html_safe ","(send\n  (send nil :tag\n    (sym :form)\n    (lvar :html_options)\n    (true)) :+\n  (lvar :extra_tags)) html_safe! ","  extra_tags_for_form _for_form ","(send\n  (send nil :tag\n    (sym :form)\n    (lvar :html_options)\n    (true)) :+\n  (lvar : extra_tags_for_form )) html_safe ","(send\n  (send nil :tag\n    (sym :form)\n    (lvar :html_options)\n    (true)) :+\n  (lvar : extra_tags_for_form )) html_safe! "]}," ActionView Helpers FormTagHelper extra_tags_for_form":{"type":"method","name":"extra_tags_for_form","children":[],"call":[" content_tag "," tag + "," token_tag "," tag ","html_options []= "," protect_against_forgery? ","html_options delete to_s ","html_options delete ","snowman_tag << ","&#x2713; html_safe ","&#9731; html_safe "," utf8_enforcer_tag << "," utf8_enforcer_tag "," method_tag + "," method_tag "," tag  << "," html_options delete to_s _tag + "," html_options delete to_s _tag "]}," ActionView Helpers FormTagHelper html_options_for_form":{"type":"method","name":"html_options_for_form","children":[],"call":["html_options []= "," url_for ","html_options delete "," returning ","options stringify_keys ","options stringify_keys tap ","html_options has_key? ","html_options [] == ","html_options [] ","html_options [] blank? "," embed_authenticity_token_in_remote_forms ! "," embed_authenticity_token_in_remote_forms "]}," ActionView Helpers FormTagHelper field_set_tag":{"type":"method","name":"field_set_tag","children":[],"call":[" concat ","block binding "," content_tag ","legend blank? "," tag "," capture ","</fieldset> html_safe ","</fieldset> html_safe! ","output safe_concat ","output concat "," safe_concat "," block_given? ","  capture _tag "," tag  safe_concat "," tag  concat "]}," ActionView Helpers FormOptionsHelper option_value_selected?":{"type":"method","name":"option_value_selected?","children":[],"call":["value == ","selected include? ","selected is_a? ! ","selected is_a? ","selected respond_to? "," Array include? "," Array "]}," ActionView Helpers FormOptionsHelper option_text_and_value":{"type":"method","name":"option_text_and_value","children":[],"call":["option last ","option first ","option respond_to? ","option is_a? ! ","option is_a? ","Hash  === ","option reject ","Array  === "]}," ActionView Helpers FormBuilder submit":{"type":"method","name":"submit","children":[],"call":["@template submit_tag ","options reverse_merge "," object_name "," submit_default_value ","value is_a? "]}," ActionView Helpers FormBuilder error_messages":{"type":"method","name":"error_messages","children":[],"call":["@template error_messages_for ","options merge "," objectify_options "]}," ActionView Helpers FormBuilder error_message_on":{"type":"method","name":"error_message_on","children":[],"call":["@template error_message_on "]}," ActionView Helpers FormBuilder label":{"type":"method","name":"label","children":[],"call":["@template label ","options merge "," objectify_options "]}," ActionView Helpers FormBuilder fields_for":{"type":"method","name":"fields_for","children":[],"call":["@template fields_for ","args unshift ","ActionController RecordIdentifier  singular_class_name "," object_name ","record_or_name_or_array last "," object_name= ","@object_name to_s sub ","@object_name to_s "," options [] "," options "," options has_key? "," fields_for_with_nested_attributes "," nested_attributes_association? ","args last [] ","args last ","args << ","args last is_a? ","ActiveModel Naming  singular ","ActiveModel Naming  param_key ","record_name last ","record_name is_a? ","fields_options []= ","fields_options [] ","record_object extractable_options? ","record_object is_a? ","record_or_name_or_array is_a? ","args last []= ","fields_options [] options [] ","fields_options [] options "," model_name_from_record_or_class param_key "," model_name_from_record_or_class ","ActionController RecordIdentifier  singular_class_ActiveModel Naming  param_key  "," record_or_name_or_array last _name "," object_ActiveModel Naming  param_key  ","record_or_ActiveModel Naming  param_key _or_array last "," record_or_name_or_array last _name= "," object_ActiveModel Naming  param_key = ","@record_or_name_or_array last _name to_s sub ","@object_ActiveModel Naming  param_key  to_s sub ","@record_or_name_or_array last _name to_s ","@object_ActiveModel Naming  param_key  to_s ","ActiveModel Naming  param_key  last "," model_name_from_record_or_class param_key  last ","record_ActiveModel Naming  param_key  last ","ActiveModel Naming  param_key  is_a? "," model_name_from_record_or_class param_key  is_a? ","record_ActiveModel Naming  param_key  is_a? ","record_record_or_name_or_array last  extractable_options? ","record_name last  extractable_options? ","record_record_or_name_or_array last  is_a? ","record_name last  is_a? ","record_or_ActiveModel Naming  param_key _or_array is_a? "," model_ActiveModel Naming  param_key _from_record_or_class param_key "," model_ActiveModel Naming  param_key _from_record_or_class "]}," ActionView Helpers InstanceTag sanitized_object_name":{"type":"method","name":"sanitized_object_name","children":[],"call":["@object_name gsub sub ","@object_name gsub "]}," ActionView Helpers InstanceTag to_label_tag":{"type":"method","name":"to_label_tag","children":[],"call":[" content_tag "," method_name humanize "," method_name ","text to_s ","text blank? ","options []= ","name_and_id [] "," add_default_name_and_id ","options dup "," label_tag ","options [] ","options delete ","options stringify_keys "," object class human_attribute_name "," object class "," object "," object class respond_to? ","i18n_label present? ","I18n  t "," object_name "," add_default_name_and_id_for_value ","name_and_id []= ","I18n  t presence ","tag_value present? "," block_given? ","name_and_id delete ","(begin\n  (lvar :key)) to_sym "," object class model_name i18n_key "," object class model_name "," object respond_to? "," object_name gsub! ","@template_object label_tag "," text to_s _tag ","options stringify_keys  []= ","options dup  [] "," add_default_options dup  ","options stringify_keys  dup ","options stringify_keys  [] ","options stringify_keys  delete ","options stringify_keys  stringify_keys ","options stringify_ object class model_name i18n_key s ","I18n  t  present? "," add_default_options dup _for_value ","options dup  []= ","options delete  present? ","options dup  delete ","(begin\n  (lvar : object class model_name i18n_key )) to_sym "," object class model_name i18n_ object class model_name i18n_key  "]}," ActionView Helpers FormHelper label":{"type":"method","name":"label","children":[],"call":["InstanceTag  new to_label_tag ","InstanceTag  new ","options delete "," block_given? ","content_or_options is_a? ","options merge! ","Tags Label  new render ","Tags Label  new "]}," ActionView Helpers FormHelper apply_form_for_options!":{"type":"method","name":"apply_form_for_options!","children":[],"call":[" polymorphic_path ","options [] ","options [] reverse_merge! "," dom_id "," dom_class ","object new_record? ","object respond_to? ","object_or_array last ","object_or_array is_a? ","object persisted? "," convert_to_model ","options delete ","(send\n  (lvar :options) :[]\n  (sym :namespace)) compact join presence ","(send\n  (lvar :options) :[]\n  (sym :namespace)) compact join ","(send\n  (lvar :options) :[]\n  (sym :namespace)) compact "," dom_cloptions [] s ","object_or_array last  new_record? "," convert_to_model  new_record? ","object_or_array last  respond_to? "," convert_to_model  respond_to? ","object_or_array last _or_array last "," convert_to_model _or_array last ","object_or_array loptions [] t ","object_or_array last _or_array is_a? "," convert_to_model _or_array is_a? ","object_or_array last  persisted? "," convert_to_model  persisted? "]}," ActionView Helpers InstanceTag default_time_from_options":{"type":"method","name":"default_time_from_options","children":[],"call":["Time  mktime ","default [] ","Time  now send ","Time  now ","(sym :year) each ","Time  utc_time ","time send ","Time  current ","Time  mkTime  current  ","Time  utc_Time  current  ","Time  current  send "]}," ActionView Helpers AtomFeedHelper AtomFeedBuilder method_missing":{"type":"method","name":"method_missing","children":[],"call":["@xml __send__ "]}," ActionView Helpers AtomFeedHelper AtomFeedBuilder entry":{"type":"method","name":"entry","children":[],"call":["@xml link ","@view polymorphic_url ","options [] ","@xml updated ","(or\n  (send\n    (lvar :options) :[]\n    (sym :updated))\n  (send\n    (lvar :record) :updated_at)) xmlschema ","record updated_at ","record respond_to? ","@xml published ","(or\n  (send\n    (lvar :options) :[]\n    (sym :published))\n  (send\n    (lvar :record) :created_at)) xmlschema ","record created_at ","@xml id ","record id ","record class ","@view request host_with_port ","@view request ","@xml entry ","@feed_options [] ","@view request host ","AtomBuilder  new ","options fetch "]}," ActionView Helpers AtomFeedHelper AtomFeedBuilder updated":{"type":"method","name":"updated","children":[],"call":["@xml updated ","(or\n  (lvar :date_or_time)\n  (send\n    (send\n      (const nil :Time) :now) :utc)) xmlschema ","Time  now utc ","Time  now "]}," ActionView Helpers AtomFeedHelper AtomFeedBuilder initialize":{"type":"method","name":"initialize","children":[],"call":[]}," ActionView Helpers AtomFeedHelper atom_feed":{"type":"method","name":"atom_feed","children":[],"call":["AtomFeedBuilder  new ","xml link "," request url "," request ","options [] "," request protocol + "," request host_with_port "," request protocol ","xml id "," request request_uri split [] gsub "," request request_uri split [] "," request request_uri split "," request request_uri "," request host ","xml feed ","xml instruct! "," eval ","block binding ","options []= ","options [] strftime ","options [] respond_to? "," logger warn "," logger "," logger nil? ","options [] blank? ","k to_s match ! ","k to_s match ","k to_s ","feed_opts merge! reject! ","feed_opts merge! ","attrs each ","attrs respond_to? ","options [] each ","options delete "," request fullpath split [] "," request fullpath split "," request fullpath "]}," ActionView Helpers AssetTagHelper join_asset_file_contents":{"type":"method","name":"join_asset_file_contents","children":[],"call":["(send\n  (lvar :paths) :collect) join ","File  read ","File  join ","path split first ","path split ","paths collect "," asset_file_path "," asset_file_path! "]}," ActionView Helpers AssetTagHelper expand_stylesheet_sources":{"type":"method","name":"expand_stylesheet_sources","children":[],"call":["(send\n  (send\n    (const nil :Dir) :[]\n    (send\n      (const nil :File) :join\n      (const nil :STYLESHEETS_DIR)\n      (str \"*.css\"))) :collect) sort ","File  basename split first ","File  basename split ","File  basename ","Dir  [] collect ","Dir  [] ","File  join ","sources first == ","sources first ","(send\n  (lvar :sources) :collect) flatten "," determine_source ","sources collect ","File  basename gsub "," collect_asset_files "," config stylesheets_dir "," config "]}," ActionView Helpers AssetTagHelper expand_javascript_sources":{"type":"method","name":"expand_javascript_sources","children":[],"call":["sources << "," file_exist? ","File  join ","sources delete ","sources [] + + ","sources [] ","sources length ","sources index + ","sources index ","sources [] + ","@@javascript_default_sources dup ","sources include? ","(send\n  (begin\n    (send\n      (send\n        (cvar :@@javascript_default_sources) :dup) :&\n      (lvar :all_javascript_files))) :+\n  (lvar :all_javascript_files)) uniq ","(send\n  (send\n    (cvar :@@javascript_default_sources) :dup) :&\n  (lvar :all_javascript_files)) + ","@@javascript_default_sources dup & ","(send\n  (send\n    (const nil :Dir) :[]\n    (send\n      (const nil :File) :join\n      (const nil :JAVASCRIPTS_DIR)\n      (str \"*.js\"))) :collect) sort ","File  basename split first ","File  basename split ","File  basename ","Dir  [] collect ","Dir  [] ","expanded_sources << ","(send\n  (lvar :sources) :collect) flatten "," determine_source ","sources collect ","(send\n  (begin\n    (send\n      (send\n        (send nil :determine_source\n          (sym :defaults)\n          (cvar :@@javascript_expansions)) :dup) :&\n      (lvar :all_javascript_files))) :+\n  (lvar :all_javascript_files)) uniq ","(send\n  (send\n    (send nil :determine_source\n      (sym :defaults)\n      (cvar :@@javascript_expansions)) :dup) :&\n  (lvar :all_javascript_files)) + "," determine_source dup & "," determine_source dup ","File  basename gsub ","File  exist? "," collect_asset_files "," config javascripts_dir "," config ","(send\n  (send nil :collect_asset_files\n    (send\n      (send nil :config) :javascripts_dir)\n    (begin\n      (if\n        (lvar :recursive)\n        (str \"**\") nil))\n    (str \"*.js\")) :-\n  (array\n    (str \"application\"))) << "," collect_asset_files - ","sources [] + +  << ","(send\n  (begin\n    (send\n      (send\n        (cvar :@@javascript_default_sources) :dup) :&\n      (lvar :all_javascript_files))) :+\n  (lvar :all_javascript_files)) uniq  << ","sources [] + +  delete ","(send\n  (begin\n    (send\n      (send\n        (cvar :@@javascript_default_sources) :dup) :&\n      (lvar :all_javascript_files))) :+\n  (lvar :all_javascript_files)) uniq  delete ","sources [] + +  [] + + ","(send\n  (begin\n    (send\n      (send\n        (cvar :@@javascript_default_sources) :dup) :&\n      (lvar :all_javascript_files))) :+\n  (lvar :all_javascript_files)) uniq  [] + + ","sources [] + +  [] ","(send\n  (begin\n    (send\n      (send\n        (cvar :@@javascript_default_sources) :dup) :&\n      (lvar :all_javascript_files))) :+\n  (lvar :all_javascript_files)) uniq  [] ","sources [] + +  length ","(send\n  (begin\n    (send\n      (send\n        (cvar :@@javascript_default_sources) :dup) :&\n      (lvar :all_javascript_files))) :+\n  (lvar :all_javascript_files)) uniq  length ","sources [] + +  index + ","(send\n  (begin\n    (send\n      (send\n        (cvar :@@javascript_default_sources) :dup) :&\n      (lvar :all_javascript_files))) :+\n  (lvar :all_javascript_files)) uniq  index + ","sources [] + +  index ","(send\n  (begin\n    (send\n      (send\n        (cvar :@@javascript_default_sources) :dup) :&\n      (lvar :all_javascript_files))) :+\n  (lvar :all_javascript_files)) uniq  index ","sources [] + +  [] + ","(send\n  (begin\n    (send\n      (send\n        (cvar :@@javascript_default_sources) :dup) :&\n      (lvar :all_javascript_files))) :+\n  (lvar :all_javascript_files)) uniq  [] + ","@@javascript_default_sources [] + +  dup ","@@javascript_default_(send\n  (begin\n    (send\n      (send\n        (cvar :@@javascript_default_sources) :dup) :&\n      (lvar :all_javascript_files))) :+\n  (lvar :all_javascript_files)) uniq  dup ","sources [] + +  include? ","(send\n  (begin\n    (send\n      (send\n        (cvar :@@javascript_default_sources) :dup) :&\n      (lvar :all_javascript_files))) :+\n  (lvar :all_javascript_files)) uniq  include? ","(send\n  (begin\n    (send\n      (send\n        (cvar :@@javascript_default_sources [] + + ) :dup) :&\n      (lvar :all_javascript_files))) :+\n  (lvar :all_javascript_files)) uniq ","(send\n  (begin\n    (send\n      (send\n        (cvar :@@javascript_default_(send\n  (begin\n    (send\n      (send\n        (cvar :@@javascript_default_sources) :dup) :&\n      (lvar :all_javascript_files))) :+\n  (lvar :all_javascript_files)) uniq ) :dup) :&\n      (lvar :all_javascript_files))) :+\n  (lvar :all_javascript_files)) uniq ","(send\n  (begin\n    (send\n      (send\n        (cvar :@@javascript_default_sources) :dup) :&\n      (lvar :(send\n  (send\n    (const nil :Dir) :[]\n    (send\n      (const nil :File) :join\n      (const nil :JAVASCRIPTS_DIR)\n      (str \"*.js\"))) :collect) sort ))) :+\n  (lvar :(send\n  (send\n    (const nil :Dir) :[]\n    (send\n      (const nil :File) :join\n      (const nil :JAVASCRIPTS_DIR)\n      (str \"*.js\"))) :collect) sort )) uniq ","(send\n  (begin\n    (send\n      (send\n        (cvar :@@javascript_default_sources) :dup) :&\n      (lvar : collect_asset_files ))) :+\n  (lvar : collect_asset_files )) uniq ","(send\n  (begin\n    (send\n      (send\n        (cvar :@@javascript_default_sources) :dup) :&\n      (lvar :(send\n  (send nil :collect_asset_files\n    (send\n      (send nil :config) :javascripts_dir)\n    (begin\n      (if\n        (lvar :recursive)\n        (str \"**\") nil))\n    (str \"*.js\")) :-\n  (array\n    (str \"application\"))) << ))) :+\n  (lvar :(send\n  (send nil :collect_asset_files\n    (send\n      (send nil :config) :javascripts_dir)\n    (begin\n      (if\n        (lvar :recursive)\n        (str \"**\") nil))\n    (str \"*.js\")) :-\n  (array\n    (str \"application\"))) << )) uniq ","(send\n  (send\n    (cvar :@@javascript_default_sources [] + + ) :dup) :&\n  (lvar :all_javascript_files)) + ","(send\n  (send\n    (cvar :@@javascript_default_(send\n  (begin\n    (send\n      (send\n        (cvar :@@javascript_default_sources) :dup) :&\n      (lvar :all_javascript_files))) :+\n  (lvar :all_javascript_files)) uniq ) :dup) :&\n  (lvar :all_javascript_files)) + ","(send\n  (send\n    (cvar :@@javascript_default_sources) :dup) :&\n  (lvar :(send\n  (send\n    (const nil :Dir) :[]\n    (send\n      (const nil :File) :join\n      (const nil :JAVASCRIPTS_DIR)\n      (str \"*.js\"))) :collect) sort )) + ","(send\n  (send\n    (cvar :@@javascript_default_sources) :dup) :&\n  (lvar : collect_asset_files )) + ","(send\n  (send\n    (cvar :@@javascript_default_sources) :dup) :&\n  (lvar :(send\n  (send nil :collect_asset_files\n    (send\n      (send nil :config) :javascripts_dir)\n    (begin\n      (if\n        (lvar :recursive)\n        (str \"**\") nil))\n    (str \"*.js\")) :-\n  (array\n    (str \"application\"))) << )) + ","@@javascript_default_sources [] + +  dup & ","@@javascript_default_(send\n  (begin\n    (send\n      (send\n        (cvar :@@javascript_default_sources) :dup) :&\n      (lvar :all_javascript_files))) :+\n  (lvar :all_javascript_files)) uniq  dup & ","expanded_sources [] + +  << ","expanded_(send\n  (begin\n    (send\n      (send\n        (cvar :@@javascript_default_sources) :dup) :&\n      (lvar :all_javascript_files))) :+\n  (lvar :all_javascript_files)) uniq  << ","(send\n  (lvar :sources) :collect) flatten  << ","(send\n  (lvar :sources [] + + ) :collect) flatten ","(send\n  (lvar :(send\n  (begin\n    (send\n      (send\n        (cvar :@@javascript_default_sources) :dup) :&\n      (lvar :all_javascript_files))) :+\n  (lvar :all_javascript_files)) uniq ) :collect) flatten ","sources [] + +  collect ","(send\n  (begin\n    (send\n      (send\n        (cvar :@@javascript_default_sources) :dup) :&\n      (lvar :all_javascript_files))) :+\n  (lvar :all_javascript_files)) uniq  collect ","(send\n  (begin\n    (send\n      (send\n        (send nil :determine_source\n          (sym :defaults)\n          (cvar :@@javascript_expansions)) :dup) :&\n      (lvar :(send\n  (send\n    (const nil :Dir) :[]\n    (send\n      (const nil :File) :join\n      (const nil :JAVASCRIPTS_DIR)\n      (str \"*.js\"))) :collect) sort ))) :+\n  (lvar :(send\n  (send\n    (const nil :Dir) :[]\n    (send\n      (const nil :File) :join\n      (const nil :JAVASCRIPTS_DIR)\n      (str \"*.js\"))) :collect) sort )) uniq ","(send\n  (begin\n    (send\n      (send\n        (send nil :determine_source\n          (sym :defaults)\n          (cvar :@@javascript_expansions)) :dup) :&\n      (lvar : collect_asset_files ))) :+\n  (lvar : collect_asset_files )) uniq ","(send\n  (begin\n    (send\n      (send\n        (send nil :determine_source\n          (sym :defaults)\n          (cvar :@@javascript_expansions)) :dup) :&\n      (lvar :(send\n  (send nil :collect_asset_files\n    (send\n      (send nil :config) :javascripts_dir)\n    (begin\n      (if\n        (lvar :recursive)\n        (str \"**\") nil))\n    (str \"*.js\")) :-\n  (array\n    (str \"application\"))) << ))) :+\n  (lvar :(send\n  (send nil :collect_asset_files\n    (send\n      (send nil :config) :javascripts_dir)\n    (begin\n      (if\n        (lvar :recursive)\n        (str \"**\") nil))\n    (str \"*.js\")) :-\n  (array\n    (str \"application\"))) << )) uniq ","(send\n  (send\n    (send nil :determine_source\n      (sym :defaults)\n      (cvar :@@javascript_expansions)) :dup) :&\n  (lvar :(send\n  (send\n    (const nil :Dir) :[]\n    (send\n      (const nil :File) :join\n      (const nil :JAVASCRIPTS_DIR)\n      (str \"*.js\"))) :collect) sort )) + ","(send\n  (send\n    (send nil :determine_source\n      (sym :defaults)\n      (cvar :@@javascript_expansions)) :dup) :&\n  (lvar : collect_asset_files )) + ","(send\n  (send\n    (send nil :determine_source\n      (sym :defaults)\n      (cvar :@@javascript_expansions)) :dup) :&\n  (lvar :(send\n  (send nil :collect_asset_files\n    (send\n      (send nil :config) :javascripts_dir)\n    (begin\n      (if\n        (lvar :recursive)\n        (str \"**\") nil))\n    (str \"*.js\")) :-\n  (array\n    (str \"application\"))) << )) + "]}," ActionView Helpers AssetTagHelper rewrite_asset_path!":{"type":"method","name":"rewrite_asset_path!","children":[],"call":["source << ","asset_id blank? ! ","asset_id blank? "," rails_asset_id "," rails_asset_id  blank? ! "," rails_asset_id  blank? "," rails_ rails_asset_id  "]}," ActionView Helpers AssetTagHelper compute_asset_host":{"type":"method","name":"compute_asset_host","children":[],"call":["host % ","source hash % ","source hash ","ActionController Base  asset_host ","host call ","host is_a? ","host =~ ","@controller request ","host arity ","@controller respond_to? ","host method arity ","host method ","host respond_to? "," controller request "," controller "," controller respond_to? "," config asset_host "," config ","ActionController Base  asset_host  % "," config asset_host  % ","ActionController Base  asset_ActionController Base  asset_host  ","ActionController Base  asset_ config asset_host  ","ActionController Base  asset_host  call "," config asset_host  call ","ActionController Base  asset_host  is_a? "," config asset_host  is_a? ","ActionController Base  asset_host  =~ "," config asset_host  =~ ","ActionController Base  asset_host  arity "," config asset_host  arity ","ActionController Base  asset_host  method arity "," config asset_host  method arity ","ActionController Base  asset_host  method "," config asset_host  method ","ActionController Base  asset_host  respond_to? "," config asset_host  respond_to? "," config asset_ActionController Base  asset_host  "," config asset_ config asset_host  "]}," ActionView Helpers AssetTagHelper file_exist?":{"type":"method","name":"file_exist?","children":[],"call":["@@file_exist_cache []= ","(or-asgn\n  (send\n    (cvar :@@file_exist_cache) :[]\n    (lvar :path))\n  (send\n    (const nil :File) :exist?\n    (lvar :path))) ! ","File  exist? ","@@file_exist_cache [] "]}," ActionView Base compiled_method_name_file_path_segment":{"type":"method","name":"compiled_method_name_file_path_segment","children":[],"call":["(op-asgn\n  (cvasgn :@@inline_template_count) :+\n  (int 1)) to_s ","1 [] to_s ","1 [] ","s gsub! ","s sub! ","Regexp  escape ","File  expand_path ","1 ord ","(op-aFile  expand_path gn\n  (cvaFile  expand_path gn :@@inline_template_count) :+\n  (int 1)) to_File  expand_path  ","1 [] to_File  expand_path  ","File  expand_path  gFile  expand_path ub! ","File  expand_path  File  expand_path ub! ","Regexp  eFile  expand_path cape "]}," ActionView Base compiled_method_name":{"type":"method","name":"compiled_method_name","children":[],"call":["(str \"_run\") compact join to_sym ","(str \"_run\") compact join ","(str \"_run\") compact "," compiled_method_name_file_path_segment ","handler to_s demodulize underscore ","handler to_s demodulize ","handler to_s "]}," ActionView Base template_requires_setup?":{"type":"method","name":"template_requires_setup?","children":[],"call":["@@templates_requiring_setup include? ","extension to_s "]}," ActionView Base template_changed_since?":{"type":"method","name":"template_changed_since?","children":[],"call":["compile_time < ","File  stat mtime ","File  stat ","lstat symlink? ","lstat mtime ","File  lstat ","File  lstat  symlink? ","File  lstat  mtime ","File  File  lstat  "]}," ActionView Base find_template_extension_from_first_render":{"type":"method","name":"find_template_extension_from_first_render","children":[],"call":["File  basename [] ","File  basename ","@first_render to_s "]}," ActionView Base find_template_extension_from_handler":{"type":"method","name":"find_template_extension_from_handler","children":[],"call":["extension to_s "," template_format "," template_exists? "," delegate_template_exists? "," template_handler_preferences each "," template_handler_preferences "," class template_handler_extensions each "," class template_handler_extensions "," class "]}," ActionView Base find_template_extension_for":{"type":"method","name":"find_template_extension_for","children":[],"call":[" find_template_extension_from_first_render "," find_template_extension_from_handler "]}," ActionView Base extract_base_path_from":{"type":"method","name":"extract_base_path_from","children":[],"call":["full_path [] == ","full_path [] ","p size - ","p size "," view_paths find "," view_paths "]}," ActionView Base find_base_path_for":{"type":"method","name":"find_base_path_for","children":[],"call":["File  file? ","File  join "," view_paths find "," view_paths "]}," ActionView Base path_and_extension":{"type":"method","name":"path_and_extension","children":[],"call":["template_path sub "]}," ActionView Base find_full_template_path":{"type":"method","name":"find_full_template_path","children":[],"call":["base_path blank? "," find_base_path_for "," find_base_path_for  blank? "," find_ find_base_path_for _for "]}," ActionView Base append_view_path":{"type":"method","name":"append_view_path","children":[],"call":["@view_paths push "]}," ActionView Base prepend_view_path":{"type":"method","name":"prepend_view_path","children":[],"call":["@view_paths unshift "]}," ActionView Base template_handler_preferences":{"type":"method","name":"template_handler_preferences","children":[],"call":["TEMPLATE_HANDLER_PREFERENCES  [] "," template_format "]}," ActionView Base template_format":{"type":"method","name":"template_format","children":[],"call":["format to_sym ","format blank? "," controller request parameters [] "," controller request parameters "," controller request "," controller "," controller respond_to? ","parameter_format to_sym ","accept_format == ","parameter_format blank? ","accept_format != "," controller request accepts first "," controller request accepts "," controller request template_format "," controller request template_format to_sym "," controller request parameters []  to_sym "," controller request accepts first  == "," controller request parameters []  blank? "," controller request accepts first  != "]}," ActionView Base javascript_template_exists?":{"type":"method","name":"javascript_template_exists?","children":[],"call":[" template_exists? "]}," ActionView Base rxml_template_exists?":{"type":"method","name":"rxml_template_exists?","children":[],"call":[" template_exists? "]}," ActionView Base rhtml_template_exists?":{"type":"method","name":"rhtml_template_exists?","children":[],"call":[" template_exists? "]}," ERB Util html_escape":{"type":"method","name":"html_escape","children":[],"call":["HTML_ESCAPE  [] ","s to_s gsub ","s to_s "]}," HTML WhiteListSanitizer contains_bad_protocols?":{"type":"method","name":"contains_bad_protocols?","children":[],"call":[" allowed_protocols include? ! "," allowed_protocols include? ","value split first ","value split "," protocol_separator "," allowed_protocols ","value =~ "," uri_attributes include? "," uri_attributes ","value split first downcase strip ","value split first downcase "]}," HTML WhiteListSanitizer process_attributes_for":{"type":"method","name":"process_attributes_for","children":[],"call":["node attributes []= ","CGI  escapeHTML "," sanitize_css ","attr_name == ","node attributes ","node attributes delete "," contains_bad_protocols? ","options [] include? ! ","options [] include? ","options [] ","node attributes [] to_s ","node attributes [] ","node attributes keys each ","node attributes keys ","CGI  unescapeHTML "]}," HTML WhiteListSanitizer process_node":{"type":"method","name":"process_node","children":[],"call":["result << ","node to_s gsub ","node to_s "," bad_tags include? ","options [] first ","options [] "," bad_tags ","options [] include? ","node name "," process_attributes_for ","options [] unshift ","options [] shift ","node closing == ","node closing "]}," HTML WhiteListSanitizer tokenize":{"type":"method","name":"tokenize","children":[],"call":[" allowed_tags ","options [] "," allowed_attributes ","options []= "]}," HTML WhiteListSanitizer sanitize_css":{"type":"method","name":"sanitize_css","children":[],"call":["clean join ","clean << ","prop + + + ","prop + + ","prop + ","keyword !~ "," allowed_css_keywords include? ! "," allowed_css_keywords include? "," allowed_css_keywords ","val split any? ","val split "," shorthand_css_properties include? ","prop split [] downcase ","prop split [] ","prop split "," shorthand_css_properties "," allowed_css_properties include? ","prop downcase "," allowed_css_properties ","style scan ","style !~ ","style to_s gsub ","style to_s ","style to_s gsub  scan ","style to_s gsub  !~ ","style to_s gsub  to_s gsub ","style to_s gsub  to_s "]}," HTML LinkSanitizer process_node":{"type":"method","name":"process_node","children":[],"call":["result << ","node to_s "," included_tags include? ","node name "," included_tags ","node is_a? "]}," HTML LinkSanitizer sanitizeable?":{"type":"method","name":"sanitizeable?","children":[],"call":["(or\n  (or\n    (send\n      (lvar :text) :nil?)\n    (send\n      (lvar :text) :empty?))\n  (send\n    (begin\n      (and\n        (begin\n          (or\n            (send\n              (lvar :text) :index\n              (str \"<a\"))\n            (send\n              (lvar :text) :index\n              (str \"<href\"))))\n        (send\n          (lvar :text) :index\n          (str \">\")))) :!)) ! ","(and\n  (begin\n    (or\n      (send\n        (lvar :text) :index\n        (str \"<a\"))\n      (send\n        (lvar :text) :index\n        (str \"<href\"))))\n  (send\n    (lvar :text) :index\n    (str \">\"))) ! ","text index ","text empty? ","text nil? "]}," HTML FullSanitizer process_node":{"type":"method","name":"process_node","children":[],"call":["result << ","node to_s ","node class == ","node class "]}," HTML FullSanitizer sanitize":{"type":"method","name":"sanitize","children":[],"call":[" sanitize ","result == ","result gsub! ","result gsub ","result =~ ","result gsub  == ","result gsub  gsub! ","result gsub  gsub ","result gsub  =~ "]}," HTML Sanitizer process_node":{"type":"method","name":"process_node","children":[],"call":["result << ","node to_s "]}," HTML Sanitizer tokenize":{"type":"method","name":"tokenize","children":[],"call":[" process_node ","Node  parse ","tokenizer next ","HTML Tokenizer  new "," process_Node  parse  ","tokenizer next izer next ","HTML Tokenizer  new  next "]}," HTML Sanitizer sanitizeable?":{"type":"method","name":"sanitizeable?","children":[],"call":["(or\n  (or\n    (send\n      (lvar :text) :nil?)\n    (send\n      (lvar :text) :empty?))\n  (send\n    (send\n      (lvar :text) :index\n      (str \"<\")) :!)) ! ","text index ! ","text index ","text empty? ","text nil? "]}," HTML Sanitizer sanitize":{"type":"method","name":"sanitize","children":[],"call":[" tokenize join "," tokenize "," sanitizeable? "," validate_options "]}," ActionController UrlRewriter rewrite_authentication":{"type":"method","name":"rewrite_authentication","children":[],"call":["CGI  escape ","options delete ","options [] "]}," ActionController TestRequest url_encoded_request_parameters":{"type":"method","name":"url_encoded_request_parameters","children":[],"call":["params to_query ","params delete ","k to_sym ","(str \"controller\") each "," request_parameters dup "," request_parameters "," request_parameters dup  to_query "," request_parameters dup  delete "]}," ActionController TestRequest referer":{"type":"method","name":"referer","children":[],"call":["@env [] "]}," ActionController TestRequest body":{"type":"method","name":"body","children":[],"call":["StringIO  new "," raw_post "]}," ActionController TestCase setup":{"type":"method","name":"setup","children":[],"call":["TestResponse  new ","TestRequest  new "," class controller_class new "," class controller_class "," class "]}," ActionController TestCase prepare_controller_class":{"type":"method","name":"prepare_controller_class","children":[{"type":"method","name":"rescue_action","children":[],"asgn":[],"call":[" raise "]}],"call":[" raise ","new_class class_eval ","new_class send "]}," ActionController TestCase determine_default_controller_class":{"type":"method","name":"determine_default_controller_class","children":[],"call":[" raise ","NonInferrableControllerError  new ","name sub constantize ","name sub "]}," ActionController TestCase controller_class":{"type":"method","name":"controller_class","children":[],"call":[" controller_class= "," determine_default_controller_class "," name "," read_inheritable_attribute "]}," ActionController TestCase controller_class=":{"type":"method","name":"controller_class=","children":[],"call":[" write_inheritable_attribute "," prepare_controller_class "]}," ActionController TestCase tests":{"type":"method","name":"tests","children":[],"call":[" controller_class= "]}," ActionController NonInferrableControllerError initialize":{"type":"method","name":"initialize","children":[],"call":["(str \"Unable to determine the controller to test from \") + + ","(str \"Unable to determine the controller to test from \") + ","(str \"Unable to determine the controller to test from \") + + + "," inferred_controller_name "]}," CookieStore clear_old_cookie_value":{"type":"method","name":"clear_old_cookie_value","children":[],"call":["@session cgi cookies [] clear ","@session cgi cookies [] ","@cookie_options [] ","@session cgi cookies ","@session cgi "]}," CookieStore write_cookie":{"type":"method","name":"write_cookie","children":[],"call":["@session cgi send ","@session cgi ","CGI Cookie  new ","@cookie_options merge ","@CGI Cookie  new _options merge "]}," CookieStore read_cookie":{"type":"method","name":"read_cookie","children":[],"call":["@session cgi cookies [] first ","@session cgi cookies [] ","@cookie_options [] ","@session cgi cookies ","@session cgi "]}," CookieStore unmarshal":{"type":"method","name":"unmarshal","children":[],"call":["Marshal  load ","Base64  decode64 "," raise "," delete ","digest == "," generate_digest ","CGI  unescape split ","CGI  unescape ","ActiveSupport Base64  decode64 ","cookie split "," secure_compare "]}," CookieStore marshal":{"type":"method","name":"marshal","children":[],"call":["CGI  escape "," generate_digest ","Base64  encode64 chop ","Base64  encode64 ","Marshal  dump ","ActiveSupport Base64  encode64 chop ","ActiveSupport Base64  encode64 ","ActiveSupport Base64  encode64s "]}," CookieStore generate_digest":{"type":"method","name":"generate_digest","children":[],"call":["OpenSSL HMAC  hexdigest ","OpenSSL Digest Digest  new ","@secret call ","@secret respond_to? "]}," CookieStore delete":{"type":"method","name":"delete","children":[],"call":[" write_cookie ","1 year ago ","1 year "," clear_old_cookie_value "]}," CookieStore close":{"type":"method","name":"close","children":[],"call":[" write_cookie ","updated == "," raise ","updated size > ","updated size "," marshal ","@data blank? ! ","@data blank? "," marshal  == "," marshal  size > "," marshal  size "]}," CookieStore update":{"type":"method","name":"update","children":[],"call":[]}," CookieStore restore":{"type":"method","name":"restore","children":[],"call":[" unmarshal "," read_cookie "]}," CookieStore ensure_secret_secure":{"type":"method","name":"ensure_secret_secure","children":[],"call":[" raise ","CGI Session  generate_unique_id ","secret length < ","secret length ","secret blank? ","secret is_a? "]}," CookieStore initialize":{"type":"method","name":"initialize","children":[],"call":["options []= ","options [] "," ensure_secret_secure "," raise ","options [] blank? "]}," ActionController Routing Optimisation PositionalArgumentsWithAdditionalParams applicable?":{"type":"method","name":"applicable?","children":[],"call":[" route segment_keys size > "," route segment_keys size "," route segment_keys "," route "]}," ActionController Routing Optimisation PositionalArgumentsWithAdditionalParams generation_code":{"type":"method","name":"generation_code","children":[],"call":[" insert "]}," ActionController Routing Optimisation PositionalArgumentsWithAdditionalParams guard_condition":{"type":"method","name":"guard_condition","children":[],"call":[" route segment_keys size + "," route segment_keys size "," route segment_keys "," route "]}," ActionController Routing Optimisation PositionalArguments generation_code":{"type":"method","name":"generation_code","children":[],"call":["elements * ","elements << ","segment interpolation_chunk ","segment is_a? ","(if\n  (send\n    (send\n      (send\n        (send nil :route) :segments) :size) :==\n    (int 1))\n  (send\n    (send nil :route) :segments)\n  (send\n    (send\n      (send nil :route) :segments) :[]\n    (irange\n      (int 0)\n      (int -2)))) each "," route segments [] "," route segments "," route "," route segments size == "," route segments size "," kind == "," kind "]}," ActionController Routing Optimisation PositionalArguments guard_condition":{"type":"method","name":"guard_condition","children":[],"call":["number_of_arguments == "," route segment_keys size "," route segment_keys "," route "," route segment_keys size  == "]}," ActionController Routing Optimisation Optimiser applicable?":{"type":"method","name":"applicable?","children":[],"call":[]}," ActionController Routing Optimisation Optimiser source_code":{"type":"method","name":"source_code","children":[],"call":[" guard_condition "," generation_code "," applicable? ","(send\n  (const nil :GLOBAL_GUARD_CONDITIONS) :+\n  (send nil :guard_conditions)) join ","GLOBAL_GUARD_CONDITIONS  + "," guard_conditions "," (send\n  (const nil :GLOBAL_GUARD_CONDITIONS) :+\n  (send nil :guard_conditions)) join  ","(send\n  (const nil :GLOBAL_GUARD_CONDITIONS) :+\n  (send nil :(send\n  (const nil :GLOBAL_GUARD_CONDITIONS) :+\n  (send nil :guard_conditions)) join s)) join "," (send\n  (const nil :GLOBAL_GUARD_CONDITIONS) :+\n  (send nil :guard_conditions)) join s "]}," ActionController Routing Optimisation Optimiser generation_code":{"type":"method","name":"generation_code","children":[],"call":[]}," ActionController Routing Optimisation Optimiser guard_condition":{"type":"method","name":"guard_condition","children":[],"call":[]}," ActionController Routing Optimisation Optimiser initialize":{"type":"method","name":"initialize","children":[],"call":[]}," ActionController Routing Optimisation generate_optimisation_block":{"type":"method","name":"generate_optimisation_block","children":[],"call":["memo << ","klazz new source_code ","klazz new ","OPTIMISERS  inject ","route optimise? "]}," ActionController Routing inflections_with_route_reloading":{"type":"method","name":"inflections_with_route_reloading","children":[],"call":["ActionController Routing Routes  reload! "," block_given? "," returning "," inflections_without_route_reloading ","(send nil :inflections_without_route_reloading\n  (block-pass\n    (lvar :block))) tap "]}," ActionController Routing RouteSet install_helpers":{"type":"method","name":"install_helpers","children":[],"call":[" named_routes install "," named_routes "," include ","d module_eval "," Array each "," Array "]}," ActionController Routing RouteSet NamedRouteCollection reset!":{"type":"method","name":"reset!","children":[],"call":[" add ","old_routes each "," clear! "," routes dup "," routes "," routes dup  each "]}," ActionController Routing RouteSet Mapper namespace":{"type":"method","name":"namespace","children":[],"call":[" with_options ","(pair\n  (sym :path_prefix)\n  (lvar :name)) merge ","(pair\n  (sym :path_prefix)\n  (dstr\n    (begin\n      (send\n        (lvar :options) :delete\n        (sym :path_prefix)))\n    (str \"/\")\n    (begin\n      (lvar :name)))) merge ","options delete ","options [] "]}," ActionController Routing PathSegment optionality_implied?":{"type":"method","name":"optionality_implied?","children":[],"call":[]}," ActionController Routing Segment interpolation_chunk":{"type":"method","name":"interpolation_chunk","children":[],"call":["URI  escape "," value "]}," ActionController Routing Route segment_keys":{"type":"method","name":"segment_keys","children":[],"call":["(send\n  (send nil :segments) :collect) compact ","segment key ","segment respond_to? "," segments collect "," segments "]}," ActionController Routing Route optimise?":{"type":"method","name":"optimise?","children":[],"call":["ActionController Base  optimise_named_routes "]}," ActionController AbstractResponse set_content_length!":{"type":"method","name":"set_content_length!","children":[],"call":[" headers []= "," body size "," body "," headers "," body respond_to? "," headers [] "," status [] == "," status [] "," status "]}," ActionController AbstractResponse convert_content_type!":{"type":"method","name":"convert_content_type!","children":[],"call":[" headers []= "," headers "," headers delete "]}," ActionController AbstractResponse handle_conditional_get!":{"type":"method","name":"handle_conditional_get!","children":[],"call":[" body= "," headers []= "," headers "," request headers [] == "," headers [] "," request headers [] "," request headers "," request "," headers [] == ","DEFAULT_HEADERS  [] ","Digest MD5  hexdigest "," body "," body empty? ! "," body empty? "," headers [] [] == "," headers [] [] "," body is_a? "," set_conditional_cache_control! "," status= "," request etag_matches? "," etag "," etag= "," nonempty_ok_response? "," last_modified? "," etag? "]}," ActionController AbstractResponse prepare!":{"type":"method","name":"prepare!","children":[],"call":[" set_content_length! "," convert_content_type! "," handle_conditional_get! "," assign_default_content_type_and_charset! "]}," ActionController Resources action_options_for":{"type":"method","name":"action_options_for","children":[],"call":["default_options merge merge ","resource requirements ","default_options merge "," add_conditions_for ","resource conditions ","default_options [] ","resource kind_of? ! ","resource kind_of? ","action to_s ","resource_options [] "]}," ActionController Resources add_conditions_for":{"type":"method","name":"add_conditions_for","children":[],"call":["options [] []= ","options [] ","method == "," returning ","conditions dup ","(hash\n  (pair\n    (sym :conditions)\n    (send\n      (lvar :conditions) :dup))) tap "]}," ActionController Resources map_default_singleton_actions":{"type":"method","name":"map_default_singleton_actions","children":[],"call":["map connect ","resource path "," action_options_for "," map_resource_routes ","resource singular ","resource shallow_name_prefix "]}," ActionController Resources map_default_collection_actions":{"type":"method","name":"map_default_collection_actions","children":[],"call":["map connect ","resource path "," action_options_for ","map named_route ","index_route_name << ","resource uncountable? ","resource plural ","resource name_prefix "," map_resource_routes "]}," ActionController Resources map_associations":{"type":"method","name":"map_associations","children":[],"call":[" resource ","options [] "," Array each "," Array "," resources ","resource nesting_name_prefix ","options delete ","resource nesting_path_prefix ","options slice merge ","options slice "," map_has_many_associations "]}," ActionController Resources map_singleton_resource":{"type":"method","name":"map_singleton_resource","children":[],"call":[" with_options ","options [] ","resource nesting_name_prefix ","resource nesting_path_prefix "," block_given? "," map_associations "," map_member_actions "," map_new_actions "," map_default_singleton_actions "," map_collection_actions ","resource controller ","SingletonResource  new ","options slice merge ","options slice ","SingletonResource  new  nesting_name_prefix ","SingletonResource  new  nesting_path_prefix ","SingletonResource  new  controller "]}," ActionController Resources resource":{"type":"method","name":"resource","children":[],"call":[" map_singleton_resource ","options dup ","entities each ","entities extract_options! ","entities extract_options!  dup ","entities extract_entities extract_options! ! "]}," ActionController Resources SingletonResource initialize":{"type":"method","name":"initialize","children":[],"call":["@singular to_s pluralize ","@singular to_s ","options [] "]}," ActionController Resources Resource uncountable?":{"type":"method","name":"uncountable?","children":[],"call":["@singular to_s == ","@plural to_s ","@singular to_s "]}," ActionController Resources Resource action_separator":{"type":"method","name":"action_separator","children":[],"call":["Base  resource_action_separator "]}," ActionController Resources Resource nesting_name_prefix":{"type":"method","name":"nesting_name_prefix","children":[],"call":[" singular "," name_prefix "," shallow_name_prefix "]}," ActionController Resources Resource conditions":{"type":"method","name":"conditions","children":[],"call":["@options [] "]}," ActionController Resources Resource requirements":{"type":"method","name":"requirements","children":[],"call":["@requirements merge ","Routing SEPARATORS  join ","@requirements delete ","@options [] "]}," ActionController Rescue handler_for_rescue":{"type":"method","name":"handler_for_rescue","children":[],"call":["handler bind "," method ","exception is_a? ","klass_name constantize "," class const_get "," class "," rescue_handlers reverse detect "," rescue_handlers reverse "," rescue_handlers "]}," ActionController Rescue rescue_action_with_handler":{"type":"method","name":"rescue_action_with_handler","children":[],"call":["handler call ","handler arity != ","handler arity "," handler_for_rescue "," handler_for_rescue  call "," handler_for_rescue  arity != "," handler_for_rescue  arity ","  handler_for_rescue _for_rescue "]}," ActionController Rescue render_optional_error_file":{"type":"method","name":"render_optional_error_file","children":[],"call":[" head "," render ","File  exists? ","status [] "," interpret_status ","File  exist? ","Rails  public_path ","I18n  locale "," interpret_status  [] "," interpret_ interpret_status  "]}," ActionController Rescue ClassMethods rescue_from":{"type":"method","name":"rescue_from","children":[],"call":[" rescue_handlers << ","options [] "," rescue_handlers "," raise ","klass is_a? ","klass name ","klass <= ","klasses each ","options []= "," block_given? ","options has_key? ","klasses extract_options! ","klasses extract_options!  [] ","klasses extract_options!  []= ","options has_klass name ? ","klasses extract_options!  has_key? ","klasses extract_klasses extract_options! ! "]}," ActionController Rescue included":{"type":"method","name":"included","children":[],"call":[]}," ActionController RequestProfiler show_profile_results":{"type":"method","name":"show_profile_results","children":[],"call":[" options [] % ","file path "," options [] "," options ","RubyProf FlatPrinter  new print ","RubyProf FlatPrinter  new ","File  open ","RubyProf GraphHtmlPrinter  new print ","RubyProf GraphHtmlPrinter  new "]}," ActionController RequestProfiler load_ruby_prof":{"type":"method","name":"load_ruby_prof","children":[],"call":[" abort "," require ","RubyProf  measure_mode= ","RubyProf  const_get ","mode upcase "," options [] "," options "," gem ","RubyProf  measure_ options [] = "," options []  upcase "]}," ActionController RequestProfiler parse_options":{"type":"method","name":"parse_options","children":[],"call":[" options []= ","args pop "," options "," exit "," puts ","args empty? ","opt parse ","opt on ","v to_i ","opt banner= ","OptionParser  new "]}," ActionController RequestProfiler default_options":{"type":"method","name":"default_options","children":[],"call":[]}," ActionController RequestProfiler warmup":{"type":"method","name":"warmup","children":[],"call":["sandbox run ","Benchmark  realtime "]}," ActionController RequestProfiler benchmark":{"type":"method","name":"benchmark","children":[],"call":[" puts ","%.2f sec, %d requests, %d req/sec % ","count / ","sandbox request_count to_i ","sandbox request_count ","sandbox benchmark to_f ","sandbox benchmark "," options [] "," options ","sandbox request_count= ","sandbox request_count to_i  / ","sandbox request_sandbox request_count to_i  to_i ","sandbox request_sandbox request_count to_i  ","sandbox request_sandbox request_count to_i = "]}," ActionController RequestProfiler profile":{"type":"method","name":"profile","children":[],"call":[" show_profile_results "," benchmark ","RubyProf  profile "," load_ruby_prof ","RubyProf  stop "," show_profile_RubyProf  stop  "]}," ActionController RequestProfiler run":{"type":"method","name":"run","children":[],"call":[" profile "," benchmark "," options [] "," options "," puts ","%.2f sec, %d requests, %d req/sec % ","sandbox request_count / ","sandbox request_count "," warmup ","Sandbox  new ","Sandbox  new  request_count / ","Sandbox  new  request_count "]}," ActionController RequestProfiler initialize":{"type":"method","name":"initialize","children":[],"call":[" default_options merge "," default_options "]}," ActionController RequestProfiler Sandbox define_run_method":{"type":"method","name":"define_run_method","children":[],"call":[" instance_eval ","File  read "]}," ActionController RequestProfiler Sandbox say":{"type":"method","name":"say","children":[],"call":[" puts "]}," ActionController RequestProfiler Sandbox benchmark":{"type":"method","name":"benchmark","children":[],"call":[" puts ","$stdout flush "," print ","i % == ","i % "," run ","n times ","Benchmark  realtime "," print_progress "]}," ActionController RequestProfiler Sandbox initialize":{"type":"method","name":"initialize","children":[],"call":[" reset! "," define_run_method ","File  read "]}," ActionController RequestForgeryProtection protect_against_forgery?":{"type":"method","name":"protect_against_forgery?","children":[],"call":[" request_forgery_protection_token "," allow_forgery_protection "," class allow_forgery_protection "," class "," config allow_forgery_protection "," config "," session enabled? "," session "," session respond_to? ! "," session respond_to? "," ensure_session_is_enabled! "]}," ActionController RequestForgeryProtection authenticity_token_from_cookie_session":{"type":"method","name":"authenticity_token_from_cookie_session","children":[],"call":[" session dbman generate_digest "," session [] "," session "," session dbman ","CGI Session  generate_unique_id "]}," ActionController RequestForgeryProtection authenticity_token_from_session_id":{"type":"method","name":"authenticity_token_from_session_id","children":[],"call":["OpenSSL HMAC  hexdigest "," session session_id to_s "," session session_id "," session ","key to_s ","OpenSSL Digest Digest  new "," request_forgery_protection_options [] "," request_forgery_protection_options "," request_forgery_protection_options [] call "," request_forgery_protection_options [] respond_to? "," request_forgery_protection_options []  to_s "," request_forgery_protection_options [] call  to_s "]}," ActionController RequestForgeryProtection form_authenticity_token":{"type":"method","name":"form_authenticity_token","children":[],"call":[" raise "," session nil? "," session "," authenticity_token_from_cookie_session "," session dbman respond_to? "," session dbman "," session respond_to? "," authenticity_token_from_session_id "," request_forgery_protection_options [] "," request_forgery_protection_options "," session respond_to? ! ","ActiveSupport SecureRandom  base64 "," session [] ","SecureRandom  base64 "," masked_authenticity_token "]}," ActionController RequestForgeryProtection verifiable_request_format?":{"type":"method","name":"verifiable_request_format?","children":[],"call":[" request format js? "," request format "," request "," request format html? "," request content_type verify_request? "," request content_type "," request content_type nil? "," request content_type nil? ! "]}," ActionController RequestForgeryProtection verified_request?":{"type":"method","name":"verified_request?","children":[],"call":[" form_authenticity_token == "," params [] "," request_forgery_protection_token "," params "," form_authenticity_token "," verifiable_request_format? ! "," verifiable_request_format? "," request method == "," request method "," request "," protect_against_forgery? ! "," protect_against_forgery? "," form_authenticity_param "," request xhr? "," request headers [] "," request headers "," request get? "," request forgery_whitelisted? "," request head? "," valid_authenticity_token? "," session "," any_authenticity_token_valid? "," valid_request_origin? "]}," ActionController RequestForgeryProtection verify_authenticity_token":{"type":"method","name":"verify_authenticity_token","children":[],"call":[" raise "," verified_request? "," handle_unverified_request "," logger debug "," logger "," logger warn "," verified_request? ! "," mark_for_same_origin_verification! "," log_warning_on_csrf_failure "," request base_url "," request "," request origin "," valid_request_origin? "," unverified_request_warning_message "]}," ActionController RequestForgeryProtection ClassMethods protect_from_forgery":{"type":"method","name":"protect_from_forgery","children":[],"call":[" request_forgery_protection_options update "," request_forgery_protection_options "," before_filter ","options delete "," request_forgery_protection_token ","ActiveSupport Deprecation  warn "," caller ","options [] "," prepend_before_filter "," prepend_before_action "," forgery_protection_strategy= "," protection_method_class "," append_after_action "," before_action ","options reverse_merge "," csrf_token_storage_strategy= "," storage_strategy ","SessionStore  new "," request_forgery_protection_options reverse_merge  update "," request_forgery_protection_options reverse_merge  ","options reverse_merge  delete ","options reverse_merge  [] ","options reverse_merge  reverse_merge "]}," ActionController RequestForgeryProtection included":{"type":"method","name":"included","children":[],"call":[]}," ActionController UploadedFile original_filename":{"type":"method","name":"original_filename","children":[],"call":["File  basename "," original_path "," original_path =~ "," original_path blank? "]}," ActionController UploadedFile included":{"type":"method","name":"included","children":[],"call":[]}," ActionController UrlEncodedPairParser type_conflict!":{"type":"method","name":"type_conflict!","children":[],"call":[" raise ","value class ","value inspect "]}," ActionController UrlEncodedPairParser bind":{"type":"method","name":"bind","children":[],"call":[" raise "," top inspect "," top "," top [] "," parent << "," parent "," parent is_a? "," top key? ","CGI  unescape "," top is_a? "," top << "," push "," top last ","(pair\n  (lvar :key)\n  (lvar :value)) with_indifferent_access "," top [] []= "," top [] key? ! "," top [] key? "," top [] is_a? "," top CGI  unescape ? ","(pair\n  (lvar :CGI  unescape )\n  (lvar :value)) with_indifferent_access ","(pair\n  (lvar :key)\n  (lvar : top [] )) with_indifferent_access "," top [] CGI  unescape ? ! "," top [] CGI  unescape ? "]}," ActionController UrlEncodedPairParser push":{"type":"method","name":"push","children":[],"call":[]}," ActionController UrlEncodedPairParser container":{"type":"method","name":"container","children":[],"call":[" push "," type_conflict! ","value is_a? "," bind ","klass new "," top [] "," top "," top [] is_a? ! "," top [] is_a? "," top key? "," top is_a? "," bind  is_a? "]}," ActionController UrlEncodedPairParser post_key_check":{"type":"method","name":"post_key_check","children":[],"call":[" container "," check "," scan "]}," ActionController UrlEncodedPairParser parse":{"type":"method","name":"parse","children":[],"call":[" bind "," post_key_check "," [] "," scan "," eos? "," result "," string= "," post_ post_key_check _check "," post_ [] _check "," post_ scan _check ","  scan esult "," st scan ing= "]}," ActionController UrlEncodedPairParser initialize":{"type":"method","name":"initialize","children":[],"call":[" parse ","pairs each "]}," ActionController AbstractRequest read_multipart":{"type":"method","name":"read_multipart","children":[],"call":["body rewind ","body respond_to? "," raise ","boundary_end =~ ","content_length == ","buf size == ","buf size ","params []= ","params [] push ","params [] ","params has_key? ","1 dup ","head =~ ","content content_type= ","content original_path= ","filename dup ","CGI  unescape ","(str \"MSIE\") match ! ","(str \"MSIE\") match ","env [] ","(str \"Mozilla\") match ","(str \"Mac\") match ","content rewind ","2 dup ","-- == ","content print ","buf sub ","c size ","buf concat ","c empty? ","c nil? ","body read ","bufsize < ","buf []= ","buf size - ","(send\n  (send\n    (const nil :EOL) :+\n    (lvar :boundary)) :+\n  (const nil :EOL)) size ","EOL  + + ","EOL  + ","buf [] ","(send\n  (send\n    (const nil :EOL) :+\n    (lvar :boundary)) :+\n  (const nil :EOL)) size < ","(begin\n  (const nil :EOL)) match ","head ! ","(begin\n  (lvar :quoted_boundary)) match ","content binmode ","UploadedStringIO  new ","UploadedTempfile  new ","10240 < "," loop ","boundary + != ","boundary + "," == ","boundary size + ","EOL  size ","boundary size ","body binmode ","10 * ","Regexp  quote ","-- + ","Hash  new ","body_size == ","body string force_encoding ","body string ","body string respond_to? ","body set_encoding ","2 dup  =~ ","-- + _end =~ ","body read ontent_length == ","UploadedStringIO  new _length == ","UploadedTempfile  new _length == ","Hash  new  []= ","Hash  new  [] push ","Hash  new  [] ","Hash  new  has_key? ","1 dup  =~ ","body read ontent body read ontent_type= ","UploadedStringIO  new  UploadedStringIO  new _type= ","UploadedTempfile  new  UploadedTempfile  new _type= ","body read ontent original_path= ","UploadedStringIO  new  original_path= ","UploadedTempfile  new  original_path= ","file1 dup  dup ","CGI  unescape  dup ","CGI  unesbody read ape ","(str \"MSIE\") matbody read h ! ","(str \"MSIE\") matbody read h ","(str \"Mozilla\") matbody read h ","(str \"Mabody read \") matbody read h ","body read ontent rewind ","UploadedStringIO  new  rewind ","UploadedTempfile  new  rewind ","body read ontent print ","UploadedStringIO  new  print ","UploadedTempfile  new  print ","body read  size ","buf body read onbody read at ","body read  empty? ","body read  nil? ","10 *  < ","(send\n  (send\n    (body read onst nil :EOL) :+\n    (lvar :boundary)) :+\n  (body read onst nil :EOL)) size ","(send\n  (send\n    (const nil :EOL) :+\n    (lvar :-- + )) :+\n  (const nil :EOL)) size ","(send\n  (send\n    (body read onst nil :EOL) :+\n    (lvar :boundary)) :+\n  (body read onst nil :EOL)) size < ","(send\n  (send\n    (const nil :EOL) :+\n    (lvar :-- + )) :+\n  (const nil :EOL)) size < ","(begin\n  (body read onst nil :EOL)) matbody read h ","1 dup  ! ","(begin\n  (lvar :quoted_boundary)) matbody read h ","(begin\n  (lvar :Regexp  quote )) match ","(begin\n  (lvar :quoted_-- + )) match ","body read ontent binmode ","UploadedStringIO  new  binmode ","UploadedTempfile  new  binmode ","-- +  + != ","-- +  + ","-- +  size + ","-- +  size ","body string forbody read e_enbody read oding ","body set_enbody read oding "]}," ActionController AbstractRequest get_typed_value":{"type":"method","name":"get_typed_value","children":[],"call":[" raise ","value inspect ","value rewind ","value read ","value original_filename ","value is_a? "," get_typed_value ","value map ","value respond_to? "]}," ActionController AbstractRequest clean_up_ajax_request_body!":{"type":"method","name":"clean_up_ajax_request_body!","children":[],"call":["body gsub! ","body chop! ","body [] == ","body [] "]}," ActionController AbstractRequest extract_content_type_without_parameters":{"type":"method","name":"extract_content_type_without_parameters","children":[],"call":["1 strip downcase ","1 strip ","content_type_with_parameters =~ "]}," ActionController AbstractRequest extract_multipart_boundary":{"type":"method","name":"extract_multipart_boundary","children":[],"call":[" extract_content_type_without_parameters ","1 dup ","content_type_with_parameters =~ "]}," ActionController AbstractRequest parse_multipart_form_parameters":{"type":"method","name":"parse_multipart_form_parameters","children":[],"call":[" parse_request_parameters "," read_multipart "]}," ActionController AbstractRequest parse_request_parameters":{"type":"method","name":"parse_request_parameters","children":[],"call":["parser result "," raise ","value inspect ","params delete ","value empty? ","parser parse "," get_typed_value ","value shift ","value is_a? ","parser result []= ","value [] ","key include? ! ","key include? ","key blank? ","params empty? ","params dup ","UrlEncodedPairParser  new ","UrlEncodedPairParser  new  result ","params dup  delete ","UrlEncodedPairParser  new  parse ","UrlEncodedPairParser  new  result []= ","params dup  empty? ","params dup  dup "]}," ActionController AbstractRequest parse_query_parameters":{"type":"method","name":"parse_query_parameters","children":[],"call":["UrlEncodedPairParser  new result ","UrlEncodedPairParser  new ","(send\n  (send\n    (lvar :query_string) :split\n    (str \"&\")) :collect) compact ","CGI  unescape ","value nil? ","key empty? ","chunk split ","chunk empty? ","query_string split collect ","query_string split ","query_string blank? ","CGI  unescape  nil? "]}," ActionController AbstractRequest named_host?":{"type":"method","name":"named_host?","children":[],"call":["(or\n  (send\n    (lvar :host) :nil?)\n  (send\n    (regexp\n      (str \"\\\\d{1,3}\\\\.\\\\d{1,3}\\\\.\\\\d{1,3}\\\\.\\\\d{1,3}$\")\n      (regopt)) :match\n    (lvar :host))) ! ","(str \"\\\\d{1,3}\\\\.\\\\d{1,3}\\\\.\\\\d{1,3}\\\\.\\\\d{1,3}$\") match ","host nil? "]}," ActionController AbstractRequest parse_formatted_request_parameters":{"type":"method","name":"parse_formatted_request_parameters","children":[],"call":["e backtrace ","e class ","e message "," content_length "," content_type_with_parameters "," raise ","YAML  load ","Hash  from_xml with_indifferent_access ","Hash  from_xml ","body blank? "," class parse_multipart_form_parameters "," env "," class "," class parse_query_parameters "," class clean_up_ajax_request_body! ","strategy call "," body "," raw_post ","strategy != ","ActionController Base  param_parsers [] ","ActionController Base  param_parsers ","Mime Type  lookup ","content_type blank? "," class extract_multipart_boundary "," content_length zero? ","data with_indifferent_access ","data is_a? ","ActiveSupport JSON  decode "," body  blank? "," raw_post  blank? "," class clean_up_ajax_request_ body ! "," class clean_up_ajax_request_ raw_post ! ","ActionController Base  param_parsers []  call ","  body  ","  raw_post  ","ActionController Base  param_parsers []  != ","ActiveSupport JSON  decode  with_indifferent_access ","ActiveSupport JSON  decode  is_a? "]}," ActionController AbstractRequest content_type_from_legacy_post_data_format_header":{"type":"method","name":"content_type_from_legacy_post_data_format_header","children":[],"call":["x_post_format to_s downcase ","x_post_format to_s ","@env [] ","@env []  to_s downcase ","@env []  to_s "]}," ActionController AbstractRequest content_type_without_parameters":{"type":"method","name":"content_type_without_parameters","children":[],"call":[" class extract_content_type_without_parameters "," content_type_with_parameters "," class "]}," ActionController AbstractRequest content_type_with_parameters":{"type":"method","name":"content_type_with_parameters","children":[],"call":[" env [] to_s "," env [] "," env "," content_type_from_legacy_post_data_format_header "]}," ActionController AbstractRequest body":{"type":"method","name":"body","children":[],"call":[" body_stream ","StringIO  new ","raw_post force_encoding ","raw_post respond_to? "," env [] "," env "," env []  force_encoding "," env []  respond_to? "]}," ActionController AbstractRequest query_string":{"type":"method","name":"query_string","children":[],"call":["@env [] ","uri split [] ","uri split ","@env []  split [] ","@env []  split "]}," ActionController AbstractRequest url":{"type":"method","name":"url","children":[],"call":[" protocol + + "," request_uri "," protocol + "," host_with_port "," protocol "]}," ActionController AbstractRequest format=":{"type":"method","name":"format=","children":[],"call":[" format "," parameters []= ","extension to_s "," parameters ","Mime Type  lookup_by_extension "," parameters [] "]}," ActionController AbstractRequest format":{"type":"method","name":"format","children":[],"call":[" accepts first "," accepts ","Mime Type  lookup_by_extension "," parameters [] "," parameters "," xhr? ","ActionController Base  use_accept_header "]}," ActionController AbstractRequest content_length":{"type":"method","name":"content_length","children":[],"call":[" env [] to_i "," env [] "," env ","@env [] to_i ","@env [] "]}," ActionController AbstractRequest headers":{"type":"method","name":"headers","children":[],"call":["ActionController Http Headers  new "]}," ActionController AbstractRequest request_method":{"type":"method","name":"request_method","children":[],"call":[" raise ","ACCEPTED_HTTP_METHODS  to_a to_sentence ","ACCEPTED_HTTP_METHODS  to_a ","method to_sym ","ACCEPTED_HTTP_METHODS  include? ","(if\n  (begin\n    (and\n      (send\n        (send\n          (ivar :@env) :[]\n          (str \"REQUEST_METHOD\")) :==\n        (str \"POST\"))\n      (send\n        (send\n          (send\n            (send nil :parameters) :[]\n            (sym :_method)) :blank?) :!)))\n  (send\n    (send\n      (send nil :parameters) :[]\n      (sym :_method)) :to_s)\n  (send\n    (ivar :@env) :[]\n    (str \"REQUEST_METHOD\"))) downcase ","@env [] "," parameters [] to_s "," parameters [] "," parameters "," parameters [] blank? ! "," parameters [] blank? ","@env [] == ","HTTP_METHODS  to_sentence ","HTTP_METHOD_LOOKUP  [] ","method == ","(if\n  (begin\n    (and\n      (send\n        (send\n          (ivar :@env) :[]\n          (str \"REQUEST_METHOD\")) :==\n        (str \"POST\"))\n      (send\n        (send\n          (send\n            (send nil :parameters) :[]\n            (sym :_method)) :blank?) :!)))\n  (send\n    (send\n      (send nil :parameters) :[]\n      (sym :_method)) :to_s)\n  (send\n    (ivar :@env) :[]\n    (str \"REQUEST_METHOD\"))) downcase  to_sym "," parameters []  to_sym ","@env []  to_sym ","(if\n  (begin\n    (and\n      (send\n        (send\n          (ivar :@env) :[]\n          (str \"REQUEST_METHOD\")) :==\n        (str \"POST\"))\n      (send\n        (send\n          (send\n            (send nil :parameters) :[]\n            (sym :_(if\n  (begin\n    (and\n      (send\n        (send\n          (ivar :@env) :[]\n          (str \"REQUEST_METHOD\")) :==\n        (str \"POST\"))\n      (send\n        (send\n          (send\n            (send nil :parameters) :[]\n            (sym :_method)) :blank?) :!)))\n  (send\n    (send\n      (send nil :parameters) :[]\n      (sym :_method)) :to_s)\n  (send\n    (ivar :@env) :[]\n    (str \"REQUEST_METHOD\"))) downcase )) :blank?) :!)))\n  (send\n    (send\n      (send nil :parameters) :[]\n      (sym :_(if\n  (begin\n    (and\n      (send\n        (send\n          (ivar :@env) :[]\n          (str \"REQUEST_METHOD\")) :==\n        (str \"POST\"))\n      (send\n        (send\n          (send\n            (send nil :parameters) :[]\n            (sym :_method)) :blank?) :!)))\n  (send\n    (send\n      (send nil :parameters) :[]\n      (sym :_method)) :to_s)\n  (send\n    (ivar :@env) :[]\n    (str \"REQUEST_METHOD\"))) downcase )) :to_s)\n  (send\n    (ivar :@env) :[]\n    (str \"REQUEST_METHOD\"))) downcase ","(if\n  (begin\n    (and\n      (send\n        (send\n          (ivar :@env) :[]\n          (str \"REQUEST_METHOD\")) :==\n        (str \"POST\"))\n      (send\n        (send\n          (send\n            (send nil :parameters) :[]\n            (sym :_ parameters [] )) :blank?) :!)))\n  (send\n    (send\n      (send nil :parameters) :[]\n      (sym :_ parameters [] )) :to_s)\n  (send\n    (ivar :@env) :[]\n    (str \"REQUEST_METHOD\"))) downcase ","(if\n  (begin\n    (and\n      (send\n        (send\n          (ivar :@env) :[]\n          (str \"REQUEST_METHOD\")) :==\n        (str \"POST\"))\n      (send\n        (send\n          (send\n            (send nil :parameters) :[]\n            (sym :_@env [] )) :blank?) :!)))\n  (send\n    (send\n      (send nil :parameters) :[]\n      (sym :_@env [] )) :to_s)\n  (send\n    (ivar :@env) :[]\n    (str \"REQUEST_METHOD\"))) downcase ","(if\n  (begin\n    (and\n      (send\n        (send\n          (ivar :@env) :[]\n          (str \"REQUEST_METHOD\")) :==\n        (str \"POST\"))\n      (send\n        (send\n          (send\n            (send nil :parameters) :[]\n            (sym :_method)) :blank?) :!)))\n  (send\n    (send\n      (send nil :parameters) :[]\n      (sym :_method)) :to_s)\n  (send\n    (ivar :@env) :[]\n    (str \"REQUEST_METHOD\"))) downcase  == "," parameters []  == ","@env []  == "]}," ActionController RecordIdentifier class_from_record_or_class":{"type":"method","name":"class_from_record_or_class","children":[],"call":["record_or_class class ","record_or_class is_a? "]}," ActionController RecordIdentifier singular_class_name":{"type":"method","name":"singular_class_name","children":[],"call":[" class_from_record_or_class name underscore tr "," class_from_record_or_class name underscore "," class_from_record_or_class name "," class_from_record_or_class "," model_name_from_record_or_class singular "," model_name_from_record_or_class "]}," ActionController RecordIdentifier plural_class_name":{"type":"method","name":"plural_class_name","children":[],"call":[" singular_class_name pluralize "," singular_class_name "," model_name_from_record_or_class plural "," model_name_from_record_or_class "]}," ActionController RecordIdentifier dom_id":{"type":"method","name":"dom_id","children":[],"call":["(lvar :prefix) compact * ","(lvar :prefix) compact ","record id "," singular_class_name "," dom_class "," record_key_for_dom_id ","ActionView RecordIdentifier  dom_id ","ActiveSupport Deprecation  warn ","INSTANCE_MESSAGE  % "]}," ActionController RecordIdentifier dom_class":{"type":"method","name":"dom_class","children":[],"call":["(lvar :prefix) compact * ","(lvar :prefix) compact "," singular_class_name ","ActiveModel Naming  singular ","ActiveModel Naming  param_key ","ActionView RecordIdentifier  dom_class ","ActiveSupport Deprecation  warn ","INSTANCE_MESSAGE  % ","  singular_class_name _class_name "," ActiveModel Naming  singular _class_name "," ActiveModel Naming  param_key _class_name ","ActiveModel Naming   singular_class_name  ","ActiveModel Naming  ActiveModel Naming  singular  ","ActiveModel Naming  ActiveModel Naming  param_key  "]}," ActionController RecordIdentifier partial_path":{"type":"method","name":"partial_path","children":[],"call":["klass name demodulize underscore ","klass name demodulize ","klass name ","klass name tableize "," class_from_record_or_class ","File  dirname ","controller_path include? ","name partial_path "," model_name_from_record_or_class "," class_from_record_or_class  name demodulize underscore ","klass  model_name_from_record_or_class  demodulize underscore "," class_from_record_or_class  name demodulize ","klass  model_name_from_record_or_class  demodulize "," class_from_record_or_class  name ","klass  model_name_from_record_or_class  "," class_from_record_or_class  name tableize ","klass  model_name_from_record_or_class  tableize ","File  dir model_name_from_record_or_class  "," model_name_from_record_or_class  partial_path "," model_ model_name_from_record_or_class _from_record_or_class "]}," ActionController PolymorphicRoutes extract_namespace":{"type":"method","name":"extract_namespace","children":[],"call":["namespace << ","record_or_namespace to_s ","record_or_namespace is_a? ","record_or_hash_or_array delete_if ","record_or_hash_or_array is_a? "," returning ","(send\n  (lvar :namespace_keys) :map) join ","namespace_keys map ","namespace_keys << ","record_or_hash_or_array shift ","key is_a? ","record_or_hash_or_array first ","(send\n  (lvar :namespace_record_or_hash_or_array first s) :map) join ","namespace_record_or_hash_or_array first s map ","namespace_record_or_hash_or_array first s << ","record_or_hash_or_array first  is_a? "]}," ActionController PolymorphicRoutes extract_record":{"type":"method","name":"extract_record","children":[],"call":["record_or_hash_or_array [] ","record_or_hash_or_array last "]}," ActionController PolymorphicRoutes build_named_route_call":{"type":"method","name":"build_named_route_call","children":[],"call":[" action_prefix + + + "," routing_type "," action_prefix + + "," action_prefix + "," action_prefix ","segment << ","RecordIdentifier  send! ","records reverse inject ","records reverse ","records pop ","Array  new "," extract_record ","records is_a? "," routing_type to_s ","route << ","string << ","records inject ","record is_a? ","parent is_a? ","RecordIdentifier  __send__ ","route singularize ","inflection == ","RecordIdentifier  __send__ singularize ","(begin\n  (send\n    (const nil :RecordIdentifier) :__send__\n    (str \"plural_class_name\")\n    (lvar :parent))) singularize ","Array  new  reverse inject "," extract_record s reverse inject ","records pop s reverse inject ","Array  new  reverse "," extract_record s reverse ","records pop s reverse ","Array  new  pop "," extract_record s pop ","records pop s pop "," extract_ extract_record  "," extract_records pop  ","Array  new  is_a? "," extract_record s is_a? ","records pop s is_a? ","route singularize  << ","Array  new  inject "," extract_record s inject ","records pop s inject "," extract_record  is_a? ","records pop  is_a? ","route singularize  singularize "]}," ActionController PolymorphicRoutes routing_type":{"type":"method","name":"routing_type","children":[],"call":["options [] "]}," ActionController PolymorphicRoutes action_prefix":{"type":"method","name":"action_prefix","children":[],"call":["options [] "]}," ActionController PolymorphicRoutes polymorphic_path":{"type":"method","name":"polymorphic_path","children":[],"call":[" polymorphic_url ","options []= ","options merge "]}," ActionController PolymorphicRoutes polymorphic_url":{"type":"method","name":"polymorphic_url","children":[],"call":[" send! "," build_named_route_call ","args pop ","record new_record? ","record respond_to? ","options [] == ","options [] ","record_or_hash_or_array dup "," extract_namespace "," extract_record ","options [] to_s == ","options [] to_s ","args << ","record_or_hash_or_array pop "," extract_format ","record_or_hash_or_array kind_of? ","arg is_a? ","args delete_if "," __send__ ","args last merge! ","args last ","args last kind_of? ","url_options empty? ","options except ","record_or_hash_or_array [] ","record_or_hash_or_array size == ","record_or_hash_or_array size ","record_or_hash_or_array compact ","record is_a? ","record destroyed? ","record to_model ","record persisted? ! ","record persisted? "," build_ build_named_route_call _call "," extract_record  new_ extract_record ? ","record to_model  new_record to_model ? "," extract_record  respond_to? ","record to_model  respond_to? "," extract_record _or_hash_or_array dup ","record to_model _or_hash_or_array dup ","record_or_hash_or_array dup  dup ","record_or_hash_or_array []  dup ","record_or_hash_or_array compact  dup "," extract_ extract_namespace  "," extract_ extract_record  "," extract_record to_model  "," extract_record _or_hash_or_array pop ","record to_model _or_hash_or_array pop ","record_or_hash_or_array dup  pop ","record_or_hash_or_array []  pop ","record_or_hash_or_array compact  pop "," extract_ extract_format  "," extract_record _or_hash_or_array kind_of? ","record to_model _or_hash_or_array kind_of? ","record_or_hash_or_array dup  kind_of? ","record_or_hash_or_array []  kind_of? ","record_or_hash_or_array compact  kind_of? ","options except  empty? "," extract_record _or_hash_or_array [] ","record to_model _or_hash_or_array [] ","record_or_hash_or_array dup  [] ","record_or_hash_or_array []  [] ","record_or_hash_or_array compact  [] "," extract_record _or_hash_or_array size == ","record to_model _or_hash_or_array size == ","record_or_hash_or_array dup  size == ","record_or_hash_or_array []  size == ","record_or_hash_or_array compact  size == "," extract_record _or_hash_or_array size ","record to_model _or_hash_or_array size ","record_or_hash_or_array dup  size ","record_or_hash_or_array []  size ","record_or_hash_or_array compact  size "," extract_record _or_hash_or_array compact ","record to_model _or_hash_or_array compact ","record_or_hash_or_array dup  compact ","record_or_hash_or_array []  compact ","record_or_hash_or_array compact  compact "," extract_record  is_a? ","record to_model  is_a? "," extract_record  destroyed? ","record to_model  destroyed? "," extract_record  to_model ","record to_model  to_model "," extract_record  persisted? ! ","record to_model  persisted? ! "," extract_record  persisted? ","record to_model  persisted? "]}," Mime Type method_missing":{"type":"method","name":"method_missing","children":[],"call":["@symbol == ","mime_type == ","1 downcase to_sym ","1 downcase ","method to_s =~ ","method to_s ","1 downcase to_sym == "," to_sym ","method [] downcase to_sym == ","method [] downcase to_sym ","method [] downcase ","method [] ","method to_s ends_with? ","method end_with? ","1 downcase to_sym  == "]}," Mime Type register_alias":{"type":"method","name":"register_alias","children":[],"call":[" register "]}," Mime Type lookup_by_extension":{"type":"method","name":"lookup_by_extension","children":[],"call":["EXTENSION_LOOKUP  [] ","extension to_s "]}," ActionController Layout ClassMethods default_layout_with_format":{"type":"method","name":"default_layout_with_format","children":[],"call":["format == ","list grep empty? ! ","list grep empty? ","list grep "," layout_list "," layout_list  grep empty? ! "," layout_list  grep empty? "," layout_list  grep "," layout_ layout_list  "]}," ActionController Integration Runner method_missing":{"type":"method","name":"method_missing","children":[],"call":[" copy_session_variables! "," returning ","@integration_session send! "," reset! ","@integration_session __send__ ","@integration_session __send__ tap ","@integration_session respond_to? "]}," ActionController Integration Runner copy_session_variables!":{"type":"method","name":"copy_session_variables!","children":[],"call":[" instance_variable_set ","@integration_session send! ","(str \"controller\") each ","@integration_session __send__ "]}," ActionController Integration Runner open_session":{"type":"method","name":"open_session","children":[],"call":[" block_given? ","session test_result= ","session delegate= ","session extend "," test_result add_assertion "," test_result ","extras send! "," delegate send "," delegate "," respond_to? ","table_name tr "," class fixture_table_names each "," class fixture_table_names "," class "," class respond_to? "," attr_accessor ","Module  new ","Integration Session  new ","extras __send__ ","Integration Session  new  test_result= ","Integration Session  new  delegate= ","Integration Session  new  extend ","table_table_name tr  tr "," class fixture_table_table_name tr s each "," class fixture_table_table_name tr s "]}," ActionController Integration Runner reset!":{"type":"method","name":"reset!","children":[],"call":[" open_session "]}," ActionController Integration Session StubCGI initialize":{"type":"method","name":"initialize","children":[],"call":["StringIO  new ","stdinput is_a? "," stdoutput= "," env_table= ","stdinput force_encoding ","stdinput respond_to? ","stdinput set_encoding "]}," ActionController HttpAuthentication Basic authentication_request":{"type":"method","name":"authentication_request","children":[],"call":["controller send! ","controller headers []= ","realm gsub ","controller headers ","controller __send__ ","controller status= ","controller response_body= ","realm tr "," freeze ","\" freeze "]}," ActionController HttpAuthentication Basic encode_credentials":{"type":"method","name":"encode_credentials","children":[],"call":["Base64  encode64 ","ActiveSupport Base64  encode64 ","ActiveSupport Base64  encode64s "," Base64  strict_encode64 "]}," ActionController HttpAuthentication Basic decode_credentials":{"type":"method","name":"decode_credentials","children":[],"call":["Base64  decode64 "," authorization split last "," authorization split "," authorization ","ActiveSupport Base64  decode64 ","request authorization split last ","request authorization split ","request authorization "," Base64  decode64 "," auth_param "]}," ActionController HttpAuthentication Basic authorization":{"type":"method","name":"authorization","children":[],"call":["request env [] ","request env "]}," ActionController HttpAuthentication Basic user_name_and_password":{"type":"method","name":"user_name_and_password","children":[],"call":[" decode_credentials split "," decode_credentials "]}," ActionController HttpAuthentication Basic authenticate":{"type":"method","name":"authenticate","children":[],"call":["login_procedure call "," user_name_and_password ","controller request "," authorization blank? "," authorization ","request authorization blank? ","request authorization "," has_basic_credentials? "]}," ActionController HttpAuthentication Basic ControllerMethods request_http_basic_authentication":{"type":"method","name":"request_http_basic_authentication","children":[],"call":["HttpAuthentication Basic  authentication_request "]}," ActionController HttpAuthentication Basic ControllerMethods authenticate_with_http_basic":{"type":"method","name":"authenticate_with_http_basic","children":[],"call":["HttpAuthentication Basic  authenticate "," request "]}," ActionController HttpAuthentication Basic ControllerMethods authenticate_or_request_with_http_basic":{"type":"method","name":"authenticate_or_request_with_http_basic","children":[],"call":[" request_http_basic_authentication "," authenticate_with_http_basic "]}," ActionController Helpers ClassMethods all_application_helpers":{"type":"method","name":"all_application_helpers","children":[],"call":["file sub ","Dir  [] map ","Dir  [] ","Regexp  quote "," helpers_dir ","helpers uniq! ","helpers sort! ","path to_s ","Array  wrap each ","Array  wrap "," helpers_path "," helpers_path each "," all_helpers_from_path "]}," ActionController Dispatcher failsafe_rescue":{"type":"method","name":"failsafe_rescue","children":[],"call":[" raise ","@controller process_with_exception out ","@controller process_with_exception "," class failsafe_response "," class "]}," ActionController Dispatcher run_callbacks":{"type":"method","name":"run_callbacks","children":[],"call":[" raise ","callback inspect ","callback [] call ","callback [] "," send! ","callback call "," callbacks [] send! "," callbacks [] "," callbacks "]}," ActionController Dispatcher handle_request":{"type":"method","name":"handle_request","children":[],"call":["@controller process out ","@controller process ","Routing Routes  recognize ","Routing Routes  recognize  process out ","Routing Routes  recognize  process "]}," ActionController Dispatcher flush_logger":{"type":"method","name":"flush_logger","children":[],"call":["RAILS_DEFAULT_LOGGER  flush ","RAILS_DEFAULT_LOGGER  respond_to? ","Base  logger flush ","Base  logger "]}," ActionController Dispatcher cleanup_application":{"type":"method","name":"cleanup_application","children":[],"call":["ActiveRecord Base  clear_reloadable_connections! ","Dependencies  clear ","ActiveRecord Base  reset_subclasses ","Dependencies  load? ","ActiveSupport Dependencies  clear "]}," ActionController Dispatcher prepare_application":{"type":"method","name":"prepare_application","children":[],"call":[" unprepared= "," run_callbacks "," unprepared ","ActiveRecord Base  verify_active_connections! "," raise ","error message =~ ","error message "," require_dependency "]}," ActionController Dispatcher reload_application":{"type":"method","name":"reload_application","children":[],"call":[" unprepared= ","Routing Routes  reload ","Dependencies  load? ","ActionView TemplateFinder  reload! ","ActionView Base  cache_template_loading "," run_callbacks ","ActionView Helpers AssetTagHelper AssetTag Cache  clear ","ActionController Base  view_paths reload! ","ActionController Base  view_paths "," run_prepare_callbacks "]}," ActionController Dispatcher dispatch_cgi":{"type":"method","name":"dispatch_cgi","children":[],"call":[" failsafe_rescue "," dispatch ","CgiResponse  new ","CgiRequest  new ","CGI  new "," class failsafe_response "," class ","CGIHandler  dispatch_cgi "]}," ActionController Dispatcher dispatch":{"type":"method","name":"dispatch","children":[],"call":[" run_callbacks "," failsafe_rescue "," handle_request "," new dispatch_cgi "," new ","@@guard synchronize "," dispatch_unlocked ","ActionController Base  allow_concurrency "," raise ","controller call_with_exception to_a ","controller call_with_exception ","Routing Routes  call "]}," ActionController Dispatcher initialize":{"type":"method","name":"initialize","children":[],"call":[" build_middleware_stack ","@@middleware build "," dup _call "," dup "," lambda "]}," ActionController Dispatcher failsafe_logger":{"type":"method","name":"failsafe_logger","children":[],"call":["Logger  new "," RAILS_DEFAULT_LOGGER  nil? ! "," RAILS_DEFAULT_LOGGER  nil? "]}," ActionController Dispatcher log_failsafe_exception":{"type":"method","name":"log_failsafe_exception","children":[],"call":[" failsafe_logger fatal "," failsafe_logger ","message << ","exception backtrace join ","exception backtrace ","Time  now "]}," ActionController Dispatcher failsafe_response_body":{"type":"method","name":"failsafe_response_body","children":[],"call":["File  read ","File  exist? ","status to_s [] ","status to_s "," error_file_path "]}," ActionController Dispatcher failsafe_response":{"type":"method","name":"failsafe_response","children":[],"call":["$stderr puts ","fallback_output write "," failsafe_response_body "," log_failsafe_exception "," failsafe_response_ failsafe_response_body  "]}," ActionController Dispatcher to_prepare":{"type":"method","name":"to_prepare","children":[],"call":[" callbacks [] << "," callbacks [] "," callbacks ","callback []= "," callbacks [] assoc ","@prepare_dispatch_callbacks | ","ActiveSupport Callbacks Callback  new ","ActiveSupport Callbacks CallbackChain  new ","@prepare_dispatch_callbacks replace_or_append! ","ActionDispatch Callbacks  after ","ActiveSupport Deprecation  warn "," caller ","ActionController::Dispatcher.to_prepare is deprecated.  << ","  callbacks [] assoc s [] << "," ActiveSupport Callbacks Callback  new s [] << ","  callbacks [] assoc s [] "," ActiveSupport Callbacks Callback  new s [] ","  callbacks [] assoc s "," ActiveSupport Callbacks Callback  new s "," callbacks [] assoc  []= ","ActiveSupport Callbacks Callback  new  []= ","  callbacks [] assoc s [] assoc "," ActiveSupport Callbacks Callback  new s [] assoc ","@prepare_dispatch_ callbacks [] assoc s | ","@prepare_dispatch_ActiveSupport Callbacks Callback  new s | ","@prepare_dispatch_ callbacks [] assoc s replace_or_append! ","@prepare_dispatch_ActiveSupport Callbacks Callback  new s replace_or_append! "]}," ActionController Dispatcher after_dispatch":{"type":"method","name":"after_dispatch","children":[],"call":[" callbacks [] << "," callbacks [] "," callbacks "," block_given? "," callbacks [] concat ","ActionDispatch Callbacks  after ","ActiveSupport Deprecation  warn "," caller ","ActionController::Dispatcher.after_dispatch is deprecated.  << "]}," ActionController Dispatcher before_dispatch":{"type":"method","name":"before_dispatch","children":[],"call":[" callbacks [] << "," callbacks [] "," callbacks "," block_given? "," callbacks [] concat ","ActionDispatch Callbacks  before ","ActiveSupport Deprecation  warn "," caller ","ActionController::Dispatcher.before_dispatch is deprecated.  << "]}," ActionController Cookies included":{"type":"method","name":"included","children":[],"call":[]}," ActionController CgiRequest host_with_port_without_standard_port_handling":{"type":"method","name":"host_with_port_without_standard_port_handling","children":[],"call":[" env [] "," env ","forwarded split last ","forwarded split "," env []  split last "," env []  split "]}," ActionController CgiRequest body":{"type":"method","name":"body","children":[],"call":["@cgi stdinput ","StringIO  new "," env [] "," env ","raw_post force_encoding ","raw_post respond_to? "," env []  force_encoding "," env []  respond_to? "]}," ActionController CgiExt Stdinput initialize_with_stdinput":{"type":"method","name":"initialize_with_stdinput","children":[],"call":[" initialize_without_stdinput ","@stdinput set_encoding ","@stdinput respond_to? "]}," ActionController CgiExt Stdinput included":{"type":"method","name":"included","children":[],"call":[]}," CGI Session PStore initialize":{"type":"method","name":"initialize","children":[],"call":["File  chmod ","p path ","@p transaction "," PStore  new "," raise ","session new_session ","File  exist? ","path untaint ","dir + + + ","dir + + ","dir + ","Digest MD5  hexdigest [] ","Digest MD5  hexdigest ","session session_id ","option [] ","Dir  tmpdir ","p dir + + +  "," PStore  new  transaction ","dir + + +  untaint ","session session_session session_id  "]}," CGI Session initialize":{"type":"method","name":"initialize","children":[],"call":[" initialize_without_cgi_reader "]}," CGI Session generate_unique_id":{"type":"method","name":"generate_unique_id","children":[],"call":[]}," CGI Cookie http_only=":{"type":"method","name":"http_only=","children":[],"call":["val == "]}," ActionController Caching SqlCache perform_action_with_caching":{"type":"method","name":"perform_action_with_caching","children":[],"call":[" perform_action_without_caching ","ActiveRecord Base  cache "]}," ActionController Caching SqlCache included":{"type":"method","name":"included","children":[],"call":[]}," ActionController Caching Sweeper assigns":{"type":"method","name":"assigns","children":[],"call":[" controller instance_variable_get "," controller "]}," ActionController Caching Sweeper action_path_for":{"type":"method","name":"action_path_for","children":[],"call":["ActionController Caching Actions ActionCachePath  path_for "," controller ","Actions ActionCachePath  new path ","Actions ActionCachePath  new "]}," ActionController Caching Actions ActionCacheFilter caching_allowed":{"type":"method","name":"caching_allowed","children":[],"call":["controller response headers [] to_i == ","controller response headers [] to_i ","controller response headers [] ","controller response headers ","controller response ","controller request get? ","controller request ","controller response status to_i == ","controller response status to_i ","controller response status "]}," ActionController Caching Actions ActionCacheFilter path_options_for":{"type":"method","name":"path_options_for","children":[],"call":["path_options call ","(lvasgn :path_options\n  (send\n    (lvar :options) :[]\n    (sym :cache_path))) respond_to? ","options [] ","options []  call ","(lvasgn :options [] \n  (send\n    (lvar :options) :[]\n    (sym :cache_path))) respond_to? "]}," ActionController Base default_render":{"type":"method","name":"default_render","children":[],"call":[" render "]}," ActionController Base render_for_text":{"type":"method","name":"render_for_text","children":[],"call":[" response body= ","text to_s ","text is_a? "," response "," response body << "," response body "," response headers []= "," interpret_status "," response headers "," response status= "]}," ActionController Base render_for_file":{"type":"method","name":"render_for_file","children":[],"call":[" render_for_text ","@template render_file "," logger info ","(str \"Rendering \") + "," logger "," assert_existence_of_template_file "," add_variables_to_assigns ","@template render ","template_path path_without_format_and_extension ","template_path respond_to? ","template_template_path path_without_format_and_extension  template_path path_without_format_and_extension _without_format_and_extension ","template_template_path path_without_format_and_extension  respond_to? "]}," ActionController Base append_view_path":{"type":"method","name":"append_view_path","children":[],"call":["(or\n  (ivar :@template)\n  (send\n    (self) :class)) append_view_path "," class "," view_paths push "," view_paths "," superclass view_paths dup "," superclass view_paths "," superclass ","@view_paths nil? ","@template finder append_view_path ","@template finder ","ActionView TemplateFinder  process_view_paths ","@template view_paths push ","@template view_paths ","@view_paths push "," superclass view_paths dup  nil? "," superclass view_paths dup  push "]}," ActionController Base prepend_view_path":{"type":"method","name":"prepend_view_path","children":[],"call":["(or\n  (ivar :@template)\n  (send\n    (self) :class)) prepend_view_path "," class "," view_paths unshift "," view_paths "," superclass view_paths dup "," superclass view_paths "," superclass ","@view_paths nil? ","@template finder prepend_view_path ","@template finder ","ActionView TemplateFinder  process_view_paths ","@template view_paths unshift ","@template view_paths ","@view_paths unshift ","(ivar :@view_paths) ! "," superclass view_paths dup  nil? "," superclass view_paths dup  unshift ","(ivar : superclass view_paths dup ) ! "]}," ActionController Base view_paths=":{"type":"method","name":"view_paths=","children":[],"call":["(or\n  (ivar :@template)\n  (send\n    (self) :class)) view_paths= "," class ","@template finder view_paths= ","@template finder ","ActionView TemplateFinder  process_view_paths ","@template view_paths= ","ActionView Base  process_view_paths "]}," ActionController Base view_paths":{"type":"method","name":"view_paths","children":[],"call":["(or\n  (ivar :@template)\n  (send\n    (self) :class)) view_paths "," class "," superclass view_paths "," superclass ","@template finder view_paths ","@template finder ","@template view_paths "]}," ActionController MethodNotAllowed handle_response!":{"type":"method","name":"handle_response!","children":[],"call":[" allowed_methods_header ","response headers [] ","response headers "]}," ActionController MethodNotAllowed allowed_methods_header":{"type":"method","name":"allowed_methods_header","children":[],"call":["(send\n  (send nil :allowed_methods) :map) * ","method_symbol to_s upcase ","method_symbol to_s "," allowed_methods map "," allowed_methods "]}," ActionController MethodNotAllowed initialize":{"type":"method","name":"initialize","children":[],"call":["allowed_methods to_sentence "]}," ActionController Assertions SelectorAssertions count_description":{"type":"method","name":"count_description","children":[],"call":["pluralize [] ","(and\n  (send\n    (lvar :min) :==\n    (int 1))\n  (send\n    (lvar :max) :==\n    (int 1))) ! ","max == ","min == ","max != ","word << ","quantity == "," lambda "]}," ActionView TemplateHandlers RJS compile":{"type":"method","name":"compile","children":[],"call":["controller.response.content_type ||= Mime::JS\n + ","template source ","controller.response.content_type ||= Mime::JS; + ","@template_format = :html; + + ","@template_format = :html; + "]}," ActionView TemplateHandlers RJS line_offset":{"type":"method","name":"line_offset","children":[],"call":[]}," ActionView TemplateHandlers ERB compile":{"type":"method","name":"compile","children":[],"call":[" ERB  new src "," ERB  new ","@view erb_trim_mode ","template source ","src sub ","RUBY_VERSION  >= "," erb_trim_mode ","erb force_encoding ","template source encoding ","erb respond_to? ","template source =~ "," ERB  new  ERB  new src  "," ERB  new src  sub "]}," ActionView TemplateHandlers Builder compile":{"type":"method","name":"compile","children":[],"call":["(begin\n  (lvar :content_type_handler)) + + + ","(begin\n  (lvar :content_type_handler)) + + ","(begin\n  (lvar :content_type_handler)) + ","@view send! respond_to? ","@view send! ","template source ","_set_controller_content_type(Mime::XML); + + + + ","_set_controller_content_type(Mime::XML); + + + ","_set_controller_content_type(Mime::XML); + + ","_set_controller_content_type(Mime::XML); + "]}," ActionView TemplateHandlers Builder line_offset":{"type":"method","name":"line_offset","children":[],"call":[]}," ActionView TemplateHandler compile":{"type":"method","name":"compile","children":[],"call":[]}," ActionView TemplateHandler render":{"type":"method","name":"render","children":[],"call":[" raise "," class name "," class "]}," ActionView TemplateHandler initialize":{"type":"method","name":"initialize","children":[],"call":[]}," ActionView TemplateHandler line_offset":{"type":"method","name":"line_offset","children":[],"call":[" class line_offset "," class "]}," ActionView Helpers AssetTagHelper write_asset_file_contents":{"type":"method","name":"write_asset_file_contents","children":[],"call":["cache write "," join_asset_file_contents ","File  open ","FileUtils  mkdir_p ","File  dirname "," file_exist? ","File  utime ","(send\n  (lvar :asset_paths) :map) max ","File  mtime "," asset_file_path ","asset_paths map ","File  atomic_write ","File  (send\n  (lvar :asset_paths) :map) max ime "]}," ActionView Helpers AssetTagHelper compute_stylesheet_paths":{"type":"method","name":"compute_stylesheet_paths","children":[],"call":[" compute_public_path "," expand_stylesheet_sources collect "," expand_stylesheet_sources "]}," ActionView Helpers AssetTagHelper compute_javascript_paths":{"type":"method","name":"compute_javascript_paths","children":[],"call":[" compute_public_path "," expand_javascript_sources collect "," expand_javascript_sources "]}," ActionView Helpers AssetTagHelper stylesheet_tag":{"type":"method","name":"stylesheet_tag","children":[],"call":[" tag ","(pair\n  (str \"rel\")\n  (str \"stylesheet\")) merge "," html_escape "," path_to_stylesheet "]}," ActionView Helpers AssetTagHelper javascript_src_tag":{"type":"method","name":"javascript_src_tag","children":[],"call":[" content_tag ","(pair\n  (str \"type\")\n  (const\n    (const nil :Mime) :JS)) merge "," path_to_javascript "]}," ActionView Base template_handler_is_compilable?":{"type":"method","name":"template_handler_is_compilable?","children":[],"call":["handler new respond_to? ","handler new "]}," ActionView Base delegate_compile":{"type":"method","name":"delegate_compile","children":[],"call":["handler new compile ","handler new "]}," ActionView Base handler_for_extension":{"type":"method","name":"handler_for_extension","children":[],"call":[]}," ActionView Base register_default_template_handler":{"type":"method","name":"register_default_template_handler","children":[],"call":[]}," ActionView Base template_handler_extensions":{"type":"method","name":"template_handler_extensions","children":[],"call":[]}," ActionController Integration Session delete_via_redirect":{"type":"method","name":"delete_via_redirect","children":[],"call":[" request_via_redirect "]}," ActionController Integration Session put_via_redirect":{"type":"method","name":"put_via_redirect","children":[],"call":[" request_via_redirect "]}," ActionController Integration Session request_via_redirect":{"type":"method","name":"request_via_redirect","children":[],"call":[" status "," follow_redirect! "," redirect? "," send "]}," ActionView TemplateError compute_backtrace":{"type":"method","name":"compute_backtrace","children":[],"call":["(begin\n  (send\n    (send nil :source_location) :capitalize)) + "," clean_backtrace join "," clean_backtrace "," source_extract "," source_location capitalize "," source_location "]}," ActionView Helpers FormTagHelper label_tag":{"type":"method","name":"label_tag","children":[],"call":[" content_tag ","(pair\n  (str \"for\")\n  (lvar :name)) update ","options stringify_keys ","name humanize ","name to_s humanize ","name to_s ","(pair\n  (str \"for\")\n  (send nil :sanitize_to_id\n    (lvar :name))) update "," sanitize_to_id ","options []= ","options has_key? ","name blank? ","options stringify_keys! ","content_or_options is_a? "," block_given? ","content_or_options stringify_keys ","options stringify_keys  stringify_keys ","options stringify_keys  []= ","options stringify_keys  has_key? ","options stringify_keys  stringify_keys! ","content_or_options stringify_keys  is_a? ","content_or_options stringify_keys  stringify_keys "]}," ActionView Helpers AssetTagHelper rewrite_asset_path":{"type":"method","name":"rewrite_asset_path","children":[],"call":["source + ","asset_id blank? "," rails_asset_id ","path % ","path is_a? ","path call ","path respond_to? "," rails_asset_id  blank? "," rails_ rails_asset_id  "]}," ActionView Base wrap_content_for_layout":{"type":"method","name":"wrap_content_for_layout","children":[],"call":[" returning "]}," ActionController Verification apply_remaining_actions":{"type":"method","name":"apply_remaining_actions","children":[],"call":[" head "," redirect_to "," apply_redirect_to ","options [] "," render "]}," ActionController Verification apply_redirect_to":{"type":"method","name":"apply_redirect_to","children":[],"call":[" send! ","redirect_to_option is_a? ","redirect_to_option != "," __send__ "]}," ActionController Verification verify_request_xhr_status":{"type":"method","name":"verify_request_xhr_status","children":[],"call":[" request xhr? != ","options [] "," request xhr? "," request ","options [] nil? "]}," ActionController Verification verify_method":{"type":"method","name":"verify_method","children":[],"call":[" request method != ","v to_sym "," request method "," request ","(splat\n  (send\n    (lvar :options) :[]\n    (sym :method))) all? ","options [] "]}," ActionController Verification verify_presence_of_keys_in_hash_flash_or_params":{"type":"method","name":"verify_presence_of_keys_in_hash_flash_or_params","children":[],"call":[" flash [] nil? "," flash [] "," flash ","(splat\n  (send\n    (lvar :options) :[]\n    (sym :flash))) find ","options [] "," session [] nil? "," session [] "," session ","(splat\n  (send\n    (lvar :options) :[]\n    (sym :session))) find "," params [] nil? "," params [] "," params ","(splat\n  (send\n    (lvar :options) :[]\n    (sym :params))) find ","v to_sym "]}," ActionController Verification prereqs_invalid?":{"type":"method","name":"prereqs_invalid?","children":[],"call":[" verify_request_xhr_status "," verify_method "," verify_presence_of_keys_in_hash_flash_or_params "]}," ActionController TestCase method_added":{"type":"method","name":"method_added","children":[],"call":[]}," ActionController TestCase setup_with_controller":{"type":"method","name":"setup_with_controller","children":[],"call":["TestResponse  new ","TestRequest  new "," class controller_class new "," class controller_class "," class "]}," ActionController NonInferrableControllerError inferred_controller_name":{"type":"method","name":"inferred_controller_name","children":[],"call":["@name sub "]}," ActionController RequestProfiler Sandbox print_progress":{"type":"method","name":"print_progress","children":[],"call":["$stdout flush "," print ","i % == ","i % "]}," ActionView TestCase method_missing":{"type":"method","name":"method_missing","children":[],"call":["controller send! ","ActionController Routing Routes  named_routes helpers include? ","ActionController Routing Routes  named_routes helpers ","ActionController Routing Routes  named_routes ","TestController  new ","controller __send__ ","@controller __send__ ","@controller _router named_routes helpers include? ","@controller _router named_routes helpers ","@controller _router named_routes ","@controller _router ","@controller respond_to? ","TestController  new  send! ","TestController  new  __send__ ","@TestController  new  __send__ ","@TestController  new  _router named_routes helpers include? ","@TestController  new  _router named_routes helpers ","@TestController  new  _router named_routes ","@TestController  new  _router ","@TestController  new  respond_to? "]}," ActionView TestCase TestController initialize":{"type":"method","name":"initialize","children":[],"call":["ActionController TestResponse  new ","ActionController TestRequest  new "," send ","@request env delete ","@request env "," class controller_path= "," class ","ActionController TestRequest  new  env delete ","ActionController TestRequest  new  env "]}," ActionView TestCase setup_with_helper_class":{"type":"method","name":"setup_with_helper_class","children":[],"call":[" class send "," helper_class "," class "," class ancestors include? ! "," class ancestors include? "," class ancestors "," output_buffer= "]}," ActionView TestCase determine_default_helper_class":{"type":"method","name":"determine_default_helper_class","children":[],"call":["name sub constantize ","name sub "]}," ActionView TestCase helper_class":{"type":"method","name":"helper_class","children":[],"call":[" helper_class= "," determine_default_helper_class "," name "," read_inheritable_attribute "]}," ActionView TestCase tests":{"type":"method","name":"tests","children":[],"call":[" helper_class= "]}," ActionView TemplateHandlers RJS cache_fragment":{"type":"method","name":"cache_fragment","children":[],"call":["ActionView Base  debug_rjs= "," eval ","block binding ","ActionView Base  debug_rjs ","@view fragment_for "]}," ActionView TemplateHandlers ERB cache_fragment":{"type":"method","name":"cache_fragment","children":[],"call":[" eval ","block binding ","ActionView Base  erb_variable ","@view fragment_for "]}," ERB Util json_escape":{"type":"method","name":"json_escape","children":[],"call":["JSON_ESCAPE  [] ","s to_s gsub ","s to_s "]}," ActionView TemplateHandlers Compilable template_changed_since?":{"type":"method","name":"template_changed_since?","children":[],"call":["compile_time < ","File  stat mtime ","File  stat ","lstat symlink? ","lstat mtime ","File  lstat ","File  lstat  symlink? ","File  lstat  mtime ","File  File  lstat  "]}," ActionView TemplateHandlers Compilable supports_local_assigns?":{"type":"method","name":"supports_local_assigns?","children":[],"call":["args has_key? ","local_assigns all? "," template_args [] "," template_args ","local_assigns empty? "," template_args []  has_key? "," template_ template_args []  [] "," template_ template_args []  "]}," ActionView TemplateHandlers Compilable create_template_source":{"type":"method","name":"create_template_source","children":[],"call":["locals_code << ","locals_keys each "," template_args []= ","h []= ","locals_keys inject "," template_args "," template_args [] keys | ","template locals keys ","template locals "," template_args [] keys "," template_args [] "," compile "," template_args [] keys |  each "," template_args [] keys |  inject "]}," ActionView TemplateHandlers Compilable compiled_method_name_file_path_segment":{"type":"method","name":"compiled_method_name_file_path_segment","children":[],"call":["(op-asgn\n  (send\n    (self) :inline_template_count) :+\n  (int 1)) to_s "," inline_template_count ","1 ord ","s gsub! ","s sub! ","Regexp  escape ","File  expand_path ","(op-aFile  expand_path gn\n  (File  expand_path end\n    (File  expand_path elf) :inline_template_count) :+\n  (int 1)) to_File  expand_path  ","File  expand_path  gFile  expand_path ub! ","File  expand_path  File  expand_path ub! ","Regexp  eFile  expand_path cape "]}," ActionView TemplateHandlers Compilable compiled_method_name":{"type":"method","name":"compiled_method_name","children":[],"call":["(str \"_run\") compact join to_sym ","(str \"_run\") compact join ","(str \"_run\") compact "," compiled_method_name_file_path_segment ","template filename "," class to_s demodulize underscore "," class to_s demodulize "," class to_s "," class "]}," ActionView TemplateHandlers Compilable assign_method_name":{"type":"method","name":"assign_method_name","children":[],"call":[" compiled_method_name ","@view method_names [] ","template method_key ","@view method_names "]}," ActionView TemplateHandlers Compilable compile_template?":{"type":"method","name":"compile_template?","children":[],"call":[" template_changed_since? ","template filename ","@view cache_template_loading ! ","@view cache_template_loading "," supports_local_assigns? ","template locals "," compile_time [] "," compile_time ","@view method_names [] ","@view method_names ","template method_key ","  compile_time []  [] ","  compile_time []  ","template template method_key  "]}," ActionView TemplateHandlers Compilable compile_template":{"type":"method","name":"compile_template","children":[],"call":[" compile_time []= ","Time  now "," compile_time "," raise ","ActionView TemplateError  new ","@view assigns ","@view logger debug ","e backtrace join ","e backtrace ","@view logger ","ActionView Base CompiledTemplates  module_eval ","line_offset -@ ","template filename "," template_args [] size + "," line_offset "," template_args [] size "," template_args [] "," template_args "," create_template_source "," assign_method_name "," compile_template? "," template_args [] size +  -@ ","  template_args [] size +  "]}," ActionView TemplateHandlers Compilable render":{"type":"method","name":"render","children":[],"call":["@view send "]}," ActionView TemplateHandlers Compilable ClassMethod compilable?":{"type":"method","name":"compilable?","children":[],"call":[]}," ActionView TemplateHandlers Compilable included":{"type":"method","name":"included","children":[],"call":[]}," ActionView TemplateHandlers Builder cache_fragment":{"type":"method","name":"cache_fragment","children":[],"call":[" eval ","block binding ","@view fragment_for "]}," ActionView TemplateHandler cache_fragment":{"type":"method","name":"cache_fragment","children":[],"call":[]}," ActionView TemplateHandler compilable?":{"type":"method","name":"compilable?","children":[],"call":[" class compilable? "," class "]}," ActionView TemplateFinder check_view_paths":{"type":"method","name":"check_view_paths","children":[],"call":[" raise ","InvalidViewPath  new ","@@processed_view_paths has_key? ","view_paths each "]}," ActionView TemplateFinder find_template_extension_from_first_render":{"type":"method","name":"find_template_extension_from_first_render","children":[],"call":["File  basename [] ","File  basename ","@template first_render to_s ","@template first_render "]}," ActionView TemplateFinder path_and_extension":{"type":"method","name":"path_and_extension","children":[],"call":["template_path sub "]}," ActionView TemplateFinder find_template_extension_from_handler":{"type":"method","name":"find_template_extension_from_handler","children":[],"call":["extensions first to_s ","extensions first ","(lvasgn :extensions\n  (send\n    (send\n      (cvar :@@file_extension_cache) :[]\n      (lvar :path)) :[]\n    (lvar :template_path))) any? ","@@file_extension_cache [] [] ","@@file_extension_cache [] ","(lvasgn :extensions\n  (send\n    (send\n      (cvar :@@file_extension_cache) :[]\n      (lvar :path)) :[]\n    (lvar :formatted_template_path))) any? "," view_paths each "," view_paths ","@@file_extension_cache [] []  first to_s ","@@file_extension_cache [] []  first ","(lvasgn :@@file_extension_cache [] [] \n  (send\n    (send\n      (cvar :@@file_extension_cache) :[]\n      (lvar :path)) :[]\n    (lvar :template_path))) any? ","(lvasgn :@@file_extension_cache [] [] \n  (send\n    (send\n      (cvar :@@file_extension_cache) :[]\n      (lvar :path)) :[]\n    (lvar :formatted_template_path))) any? "]}," ActionView TemplateFinder pick_template_extension":{"type":"method","name":"pick_template_extension","children":[],"call":["@template template_format= "," find_template_extension_from_handler ","@template template_format == ","@template template_format "," find_template_extension_from_first_render "," find_template_ find_template_extension_from_handler _from_handler "," find_template_ find_template_extension_from_handler _from_first_render "]}," ActionView TemplateFinder extract_base_path_from":{"type":"method","name":"extract_base_path_from","children":[],"call":["full_path [] == ","full_path [] ","p size - ","p size ","@view_paths find "]}," ActionView TemplateFinder find_base_path_for":{"type":"method","name":"find_base_path_for","children":[],"call":["@@processed_view_paths [] include? ","@@processed_view_paths [] ","@view_paths find "]}," ActionView TemplateFinder file_exists?":{"type":"method","name":"file_exists?","children":[],"call":[" template_exists? "," pick_template_extension "," path_and_extension ","template_path sub ","template_path sub  sub "]}," ActionView TemplateFinder pick_template":{"type":"method","name":"pick_template","children":[],"call":["base_path blank? "," find_base_path_for "," find_base_path_for  blank? "," find_ find_base_path_for _for "]}," ActionView TemplateFinder view_paths=":{"type":"method","name":"view_paths=","children":[],"call":[" class process_view_paths "," class "]}," ActionView TemplateFinder append_view_path":{"type":"method","name":"append_view_path","children":[],"call":[" class process_view_paths "," class ","@view_paths push "]}," ActionView TemplateFinder prepend_view_path":{"type":"method","name":"prepend_view_path","children":[],"call":[" class process_view_paths "," class ","@view_paths unshift "]}," ActionView TemplateFinder initialize":{"type":"method","name":"initialize","children":[],"call":[" check_view_paths ","(splat\n  (ivar :@view_paths)) compact ","@view_paths dup ","@view_paths respond_to? ","args flatten ","args shift ","(splat\n  (ivar :(splat\n  (ivar :@view_paths)) compact )) compact ","(splat\n  (ivar :@view_paths dup )) compact ","(splat\n  (ivar :args flatten )) compact ","(splat\n  (ivar :@view_paths)) compact  dup ","@view_paths dup  dup ","args flatten  dup ","(splat\n  (ivar :@view_paths)) compact  respond_to? ","@view_paths dup  respond_to? ","args flatten  respond_to? "]}," ActionView TemplateFinder reload!":{"type":"method","name":"reload!","children":[],"call":[" process_view_paths ","hash []= ","Hash  new ","@@processed_view_paths keys "," process_@@processed_view_paths keys  ","@@processed_@@processed_view_paths keys  keys "]}," ActionView TemplateFinder template_handler_extensions":{"type":"method","name":"template_handler_extensions","children":[],"call":["ActionView Template  template_handler_extensions "]}," ActionView TemplateFinder update_extension_cache_for":{"type":"method","name":"update_extension_cache_for","children":[],"call":["@@file_extension_cache [] [] << ","@@file_extension_cache [] [] ","@@file_extension_cache [] ","file split last sub sub ","file split last sub ","file split last ","file split ","Dir  glob each ","Dir  glob ","@@processed_view_paths keys each ","@@processed_view_paths keys ","@@processed_view_paths file split last sub sub s each ","@@processed_view_paths file split last sub sub s "]}," ActionView TemplateFinder process_view_paths":{"type":"method","name":"process_view_paths","children":[],"call":["@@file_extension_cache [] [] << ","@@file_extension_cache [] [] ","@@file_extension_cache [] ","file split last sub sub ","file split last sub ","file split last ","file split "," template_handler_extensions include? "," template_handler_extensions ","@@processed_view_paths [] << ","@@processed_view_paths [] ","File  directory? ","(send\n  (send\n    (const nil :Dir) :glob\n    (dstr\n      (begin\n        (lvar :dir))\n      (str \"/**/*/**\"))) :|\n  (send\n    (const nil :Dir) :glob\n    (dstr\n      (begin\n        (lvar :dir))\n      (str \"/**\")))) each ","Dir  glob | ","Dir  glob ","@@processed_view_paths []= ","@@processed_view_paths has_key? ","view_paths flatten compact each ","view_paths flatten compact ","view_paths flatten ","@@file_file split last _cache [] [] << ","@@file_file split last _cache [] [] ","@@file_file split last _cache [] "," template_handler_file split last s include? "," template_handler_file split last s ","@@processed_view_paths has_file split last sub sub ? "]}," ActionView TemplateFinder InvalidViewPath initialize":{"type":"method","name":"initialize","children":[],"call":["@unprocessed_path inspect "]}," ActionView Template handler_class_for_extension":{"type":"method","name":"handler_class_for_extension","children":[],"call":[]}," ActionView Template register_default_template_handler":{"type":"method","name":"register_default_template_handler","children":[],"call":[]}," ActionView Template template_handler_extensions":{"type":"method","name":"template_handler_extensions","children":[],"call":[]}," ActionView Template register_template_handler":{"type":"method","name":"register_template_handler","children":[],"call":[]}," ActionView Template raise_missing_template_exception":{"type":"method","name":"raise_missing_template_exception","children":[],"call":[" raise ","@path =~ ","@finder view_paths join ","@finder view_paths ","@view template_format ","@path include? "]}," ActionView Template set_extension_and_file_name":{"type":"method","name":"set_extension_and_file_name","children":[],"call":[" raise_missing_template_exception ","@filename blank? ","@extension gsub ","@finder pick_template ","@finder pick_template_extension to_s ","@finder pick_template_extension ","@finder path_and_extension ","@finder pick_template  blank? ","@extension gsub  gsub ","@finder pick_template_extension to_s  gsub "]}," ActionView Template prepare!":{"type":"method","name":"prepare!","children":[],"call":["@view method_names [] "," method_key ","@view method_names ","@handler compile_template ","@handler compilable? ","@view current_render_extension= ","@view send "]}," ActionView Template base_path_for_exception":{"type":"method","name":"base_path_for_exception","children":[],"call":["@finder view_paths first ","@finder view_paths ","@finder find_base_path_for "]}," ActionView Template method_key":{"type":"method","name":"method_key","children":[],"call":[]}," ActionView Template source":{"type":"method","name":"source","children":[],"call":["File  read "," filename "]}," ActionView Template render":{"type":"method","name":"render","children":[],"call":["@handler render "," prepare! "," raise ","Template Error  new ","view assigns ","view respond_to? ","e sub_template_of ","e is_a? ","view send "," compile ","view singleton_class ","view is_a? ","ActiveSupport Notifications  instrument "," render_without_tracking ","rendered [] << ","rendered [] ","rendered [] [] "," partial? ","view rendered "," handle_render_error "," method_name "," compile! ","view rendered  [] << ","view rendered  [] ","view rendered  [] [] ","view view rendered  ","  compile  "]}," ActionView Template render_template":{"type":"method","name":"render_template","children":[],"call":[" raise ","TemplateError  new ","@view assigns ","e sub_template_of "," filename ","TemplateError  === "," render ","view assigns "]}," ActionView Template initialize":{"type":"method","name":"initialize","children":[],"call":[" class handler_class_for_extension new "," class handler_class_for_extension "," class "," set_extension_and_file_name ","@view first_render ","path sub ","@view finder "," extend ","@name =~ "," find_full_path ","@base_path to_s gsub! ","@base_path to_s "," split ","template_path dup ","File  join ","details [] try ","details [] ","Array  wrap map ","Array  wrap ","@details []= ","format to_sym ","@formats << ","format == ","Mime Type  lookup_by_extension ","format to_s ","handler default_format to_sym to_s ","handler default_format to_sym ","handler default_format ","handler respond_to? ","details delete ","f ref ","f is_a? ","Time  now ","Mutex  new ","f respond_to? "," Array map "," Array ","template_path dup  dup ","Array  wrap map  << "]}," ActionView Partials render_partial_collection_with_unknown_partial_path":{"type":"method","name":"render_partial_collection_with_unknown_partial_path","children":[],"call":["template render_member ","template counter= ","ActionView PartialTemplate  new ","templates [] ","ActionController RecordIdentifier  partial_path "," controller class controller_path "," controller class "," controller ","collection map ","Hash  new ","Hash  new  [] ","ActionController RecordIdentifier  ActionController RecordIdentifier  partial_path  "]}," ActionView Partials render_partial_collection_with_known_partial_path":{"type":"method","name":"render_partial_collection_with_known_partial_path","children":[],"call":["template render_member ","collection map ","ActionView PartialTemplate  new ","ActionView PartialTemplate  new  render_member "]}," ActionView PartialTemplate initialize_counter":{"type":"method","name":"initialize_counter","children":[],"call":["@locals []= ","(begin\n  (ivar :@variable_name)) to_sym "]}," ActionView PartialTemplate partial_pieces":{"type":"method","name":"partial_pieces","children":[],"call":["view controller class controller_path ","view controller class ","view controller ","File  basename ","File  dirname ","partial_path include? "]}," ActionView PartialTemplate extract_partial_name_and_path":{"type":"method","name":"extract_partial_name_and_path","children":[],"call":["partial_name split last split first to_sym ","partial_name split last split first ","partial_name split last split ","partial_name split last ","partial_name split ","File  join "," partial_pieces "]}," ActionView PartialTemplate add_object_to_local_assigns!":{"type":"method","name":"add_object_to_local_assigns!","children":[],"call":["@view controller instance_variable_get "," variable_name ","@view controller ","object value ","object is_a? ","@locals [] "]}," ActionView PartialTemplate counter=":{"type":"method","name":"counter=","children":[],"call":["@locals []= "]}," ActionView PartialTemplate render_member":{"type":"method","name":"render_member","children":[],"call":["@locals delete "," render_template ","@locals []= ","@locals [] "," render_ render_template  "]}," ActionView PartialTemplate render":{"type":"method","name":"render","children":[],"call":["@handler render ","ActionController Base  benchmark "]}," ActionView PartialTemplate initialize":{"type":"method","name":"initialize","children":[],"call":[" prepare! "," initialize_counter "," add_object_to_local_assigns! "," extract_partial_name_and_path "]}," ActionView InlineTemplate method_key":{"type":"method","name":"method_key","children":[],"call":[]}," ActionView InlineTemplate initialize":{"type":"method","name":"initialize","children":[],"call":[" class handler_class_for_extension new "," class handler_class_for_extension "," class ","@view finder ","@source hash abs ","@source hash "]}," ActionView Helpers FormBuilder objectify_options":{"type":"method","name":"objectify_options","children":[],"call":["@default_options merge ","options merge "]}," ActionView Helpers InstanceTag sanitized_method_name":{"type":"method","name":"sanitized_method_name","children":[],"call":["@method_name sub "]}," ActionView Helpers AssetTagHelper determine_source":{"type":"method","name":"determine_source","children":[],"call":[" raise ","source inspect ","collection [] ","collection [] present? "]}," ActionView Helpers AssetTagHelper register_stylesheet_expansion":{"type":"method","name":"register_stylesheet_expansion","children":[],"call":[]}," ActionView Helpers AssetTagHelper register_javascript_expansion":{"type":"method","name":"register_javascript_expansion","children":[],"call":[]}," ActionView Base execute":{"type":"method","name":"execute","children":[],"call":[" instance_variable_get ","names first "," send ","template locals ","template method "]}," ActionView Base helper_modules":{"type":"method","name":"helper_modules","children":[],"call":[]}," ActionView Base cache_template_extensions=":{"type":"method","name":"cache_template_extensions=","children":[],"call":[]}," ActionController TestCase rescue_action_in_public!":{"type":"method","name":"rescue_action_in_public!","children":[],"call":["@request remote_addr= "]}," ActionController TestCase setup_controller_request_and_response":{"type":"method","name":"setup_controller_request_and_response","children":[],"call":["TestResponse  new ","@controller request= ","TestRequest  new "," class controller_class new "," class controller_class "," class ","@controller send ","@controller params= ","klass new ","@request env delete ","@request env "," class controller_class new  request= "," class controller_class new  send "," class controller_class new  params= "," class controller_class  new ","TestRequest  new  env delete ","TestRequest  new  env "]}," ActionController TestCase RaiseActionExceptions rescue_action":{"type":"method","name":"rescue_action","children":[],"call":[" raise "," request remote_addr == "," request remote_addr "," request "," exception= "]}," ActionController Routing PathSegment extract_value":{"type":"method","name":"extract_value","children":[],"call":[" default inspect "," default "," key "," local_name "]}," ActionController Routing DynamicSegment regexp_has_modifiers?":{"type":"method","name":"regexp_has_modifiers?","children":[],"call":[" regexp options & != "," regexp options & ","Regexp IGNORECASE  | "," regexp options "," regexp "]}," ActionController Routing RouteSet to_plain_segments":{"type":"method","name":"to_plain_segments","children":[],"call":["segments << ","str split ","str sub! ","str dup ","str split  << ","str dup  split ","str dup  sub! ","str dup  dup "]}," ActionController Routing RouteSet generate_code":{"type":"method","name":"generate_code","children":[],"call":["padding + ","list [] "," generate_code ","level + ","was_nil ! ","tag == ","i == ","list size ","Array  === ","list each ","(send\n  (const nil :Array) :===\n  (send\n    (lvar :list) :[]\n    (int 0))) ! ","list size == "]}," ActionController Routing RouteSet segment_tree":{"type":"method","name":"segment_tree","children":[],"call":["node [] [] ","node [] ","node size - ","node size ","node << ","node [] [] != ","node empty? ","seg [] == ","seg [] ","segments each "," to_plain_segments ","str << ","s to_s ","route segments inject ","route segments ","routes each ","node [] []  [] [] ","node [] []  [] ","node [] []  size - ","node [] []  size ","node [] []  << ","node [] []  [] [] != ","node [] []  empty? "," to_plain_segments  each "," to_plain_ to_plain_segments  ","route  to_plain_segments  inject ","route  to_plain_segments  "]}," ActionController Routing RouteSet write_recognize_optimized":{"type":"method","name":"write_recognize_optimized","children":[],"call":[" instance_eval "," generate_code "," segment_tree "," routes "," segment_ segment_tree  "]}," ActionController Routing RouteSet recognize_optimized":{"type":"method","name":"recognize_optimized","children":[],"call":[" recognize_optimized "," write_recognize_optimized "]}," ActionController Routing RouteBuilder multiline_regexp?":{"type":"method","name":"multiline_regexp?","children":[],"call":["expression options & == ","expression options & ","expression options "]}," ActionController PolymorphicRoutes extract_format":{"type":"method","name":"extract_format","children":[],"call":["options [] ","record_or_hash_or_array pop ","record_or_hash_or_array is_a? ","options [] to_s == ","options [] to_s "]}," Mime Type html?":{"type":"method","name":"html?","children":[],"call":["@string =~ ","@@html_types include? "," to_sym "," symbol == "," symbol ","(str \"html\") match? ","@string include? "]}," Mime Type verify_request?":{"type":"method","name":"verify_request?","children":[],"call":["@@unverifiable_types include? ! ","@@unverifiable_types include? "," to_sym "," browser_generated? ","@@browser_generated_types include? ","ActiveSupport Deprecation  warn "]}," ActionController Integration Session multipart_body":{"type":"method","name":"multipart_body","children":[],"call":["(send\n  (send nil :multipart_requestify\n    (lvar :params)) :map) join + ","(send\n  (send nil :multipart_requestify\n    (lvar :params)) :map) join ","f read ","File  stat size ","File  stat ","value path ","value content_type ","CGI  escape ","value original_filename ","f set_encoding ","f respond_to? ","File  open ","value respond_to? "," multipart_requestify map "," multipart_requestify "]}," ActionController Integration Session multipart_requestify":{"type":"method","name":"multipart_requestify","children":[],"call":["p []= ","k + "," multipart_requestify each "," multipart_requestify ","Hash  === ","CGI  escape ","key to_s ","params each "," returning ","Hash  new ","p << ","Array  === ","value each ","Array  new tap ","Array  new ","CGI  escape  + ","key to_s  + ","CGI  escape ey to_s ","key to_s ey to_s "]}," ActionController Helpers ClassMethods helpers":{"type":"method","name":"helpers","children":[],"call":["@helper_proxy extend "," master_helper_module ","ActionView Base  new ","ActionView Base  new extend "," _helpers ","proxy extend ","proxy config= "," config inheritable_copy "," config ","ActionView Base  empty ","ActionView Base  new  extend ","@helper_ActionView Base  new  extend ","@helper_ActionView Base  empty  extend ","ActionView Base  empty  extend ","ActionView Base  new  config= ","ActionView Base  empty  config= "]}," ActionController Http Headers normalize_header":{"type":"method","name":"normalize_header","children":[],"call":["header_name upcase gsub ","header_name upcase "]}," ActionController Http Headers []":{"type":"method","name":"[]","children":[],"call":[" normalize_header "," include? "," env_name "]}," ActionController Http Headers initialize":{"type":"method","name":"initialize","children":[],"call":[" update ","constructor is_a? ","args [] ","args [] is_a? ","args size == ","args size "]}," ActionController Filters AfterFilter type":{"type":"method","name":"type","children":[],"call":[]}," ActionController Filters BeforeFilter call":{"type":"method","name":"call","children":[],"call":["controller send! "," method ","controller __send__ "]}," ActionController Filters BeforeFilter type":{"type":"method","name":"type","children":[],"call":[]}," ActionController Filters AroundFilter around_proc":{"type":"method","name":"around_proc","children":[],"call":[" method after "," method ","action call ","controller send! "," method before ","Proc  new ","controller __send__ "]}," ActionController Filters AroundFilter filter_responds_to_before_and_after?":{"type":"method","name":"filter_responds_to_before_and_after?","children":[],"call":[" method respond_to? "," method "]}," ActionController Filters AroundFilter call":{"type":"method","name":"call","children":[],"call":["block call "," evaluate_method ","method arity == ","method arity ","method is_a? "," method "," around_proc "," filter_responds_to_before_and_after? "," should_run_callback? "," evaluate_ method  "," evaluate_ around_proc  "," method  arity == "," around_proc  arity == "," method  arity "," around_proc  arity "," method  is_a? "," around_proc  is_a? ","  method  ","  around_proc  "]}," ActionController Filters AroundFilter type":{"type":"method","name":"type","children":[],"call":[]}," ActionController Filters Filter should_run_callback?":{"type":"method","name":"should_run_callback?","children":[],"call":[" included_in_action? "," options "," should_not_skip? "]}," ActionController Filters Filter included_in_action?":{"type":"method","name":"included_in_action?","children":[],"call":[" Array map include? ! "," Array map include? ","controller action_name "," Array map "," Array ","options [] ","options [] include? ! ","options [] include? "]}," ActionController Filters Filter should_not_skip?":{"type":"method","name":"should_not_skip?","children":[],"call":[" included_in_action? ! "," included_in_action? "," options [] "," options "]}," ActionController Filters Filter around?":{"type":"method","name":"around?","children":[],"call":[" class == "," class "]}," ActionController Filters Filter after?":{"type":"method","name":"after?","children":[],"call":[" class == "," class "]}," ActionController Filters Filter before?":{"type":"method","name":"before?","children":[],"call":[" class == "," class "]}," ActionController Filters FilterChain update_filter_in_chain":{"type":"method","name":"update_filter_in_chain","children":[],"call":["new_filter options merge! ","new_filter options ","filter dup ","filters include? "," map! ","filters compact! "," find "," block_given? ","filters map! ","new_filter update_options! ","filter dup  options merge! ","filter dup  options ","filter dup  update_options! "]}," ActionController Filters FilterChain find_or_create_filter":{"type":"method","name":"find_or_create_filter","children":[],"call":["AroundFilter  new ","AfterFilter  new ","BeforeFilter  new ","filter_type == ","filter respond_to? ","f type == ","f type "," find "," update_filter_in_chain "]}," ActionController Filters FilterChain find_filter_prepend_position":{"type":"method","name":"find_filter_prepend_position","children":[],"call":["f after? "," each_with_index ","filter_type == "]}," ActionController Filters FilterChain find_filter_append_position":{"type":"method","name":"find_filter_append_position","children":[],"call":["f after? "," each_with_index ","filter_type == "]}," ActionController Filters FilterChain update_filter_chain":{"type":"method","name":"update_filter_chain","children":[],"call":[" insert flatten! "," insert "," create_filters "]}," ActionController Filters FilterChain skip_filter_in_chain":{"type":"method","name":"skip_filter_in_chain","children":[],"call":[" update_filter_in_chain "," delete "," find ","filters each ","conditions empty? "," extract_options "]}," ActionController Filters FilterChain create_filters":{"type":"method","name":"create_filters","children":[],"call":[" find_or_create_filter ","filters map! "," extract_options "]}," ActionController Filters FilterChain prepend_filter_to_chain":{"type":"method","name":"prepend_filter_to_chain","children":[],"call":[" update_filter_chain "," find_filter_prepend_position "," find_filter_prepend_ find_filter_prepend_position ition "]}," ActionController Filters FilterChain append_filter_to_chain":{"type":"method","name":"append_filter_to_chain","children":[],"call":[" update_filter_chain "," find_filter_append_position "," find_filter_append_ find_filter_append_position ition "]}," ActionController Dispatcher define_dispatcher_callbacks":{"type":"method","name":"define_dispatcher_callbacks","children":[],"call":[" after_dispatch ","RAILS_DEFAULT_LOGGER  respond_to? ","ActiveRecord Base  instantiate_observers "," to_prepare ","ActiveRecord Base  verify_active_connections! "," before_dispatch "," raise ","error message =~ ","error message "," require_dependency ","I18n  reload! ","Base  logger respond_to? ","Base  logger ","ActionView Helpers AssetTagHelper  cache_asset_timestamps= "," middleware insert_after "," middleware "," middleware include? "]}," ActionController Components HelperMethods render_component":{"type":"method","name":"render_component","children":[],"call":["@controller send! ","@controller __send__ "]}," CGI Cookie respond_to?":{"type":"method","name":"respond_to?","children":[],"call":[" __getobj__ respond_to? "," __getobj__ "]}," ActionController Caching cache_configured?":{"type":"method","name":"cache_configured?","children":[],"call":[" class cache_configured? "," class "]}," ActionController Caching cache":{"type":"method","name":"cache","children":[],"call":[" cache_store fetch ","ActiveSupport Cache  expand_cache_key "," cache_store "," cache_configured? "]}," ActionController Caching Fragments fragment_exist?":{"type":"method","name":"fragment_exist?","children":[],"call":[" cache_store exist? "," cache_store "," class benchmark "," class "," fragment_cache_key "," cache_configured? "," instrument_fragment_cache "," fragment_cache_ fragment_cache_key  "]}," ActionController Caching Fragments fragment_for":{"type":"method","name":"fragment_for","children":[],"call":[" write_fragment ","buffer [] ","block call ","buffer length ","buffer concat "," read_fragment "," perform_caching ","buffer safe_concat ","cache html_safe "," fragment_exist? "," read_fragment  html_safe "]}," ActionController RecordIdentifier model_name_from_record_or_class":{"type":"method","name":"model_name_from_record_or_class","children":[],"call":["(if\n  (send\n    (lvar :record_or_class) :is_a?\n    (const nil :Class))\n  (lvar :record_or_class)\n  (send\n    (lvar :record_or_class) :class)) model_name ","record_or_class class ","record_or_class is_a? "]}," ActionController Routing RouteSet write_recognize_optimized!":{"type":"method","name":"write_recognize_optimized!","children":[],"call":[" instance_eval "," generate_code "," segment_tree "," routes "," remove_recognize_optimized! "," segment_ segment_tree  "]}," ActionController Routing RouteSet clear_recognize_optimized!":{"type":"method","name":"clear_recognize_optimized!","children":[],"call":[" instance_eval "," write_recognize_optimized! "," remove_recognize_optimized! "]}," ActionView TemplateHandlers handler_class_for_extension":{"type":"method","name":"handler_class_for_extension","children":[],"call":["@@template_handlers [] ","extension to_sym "," registered_template_handler "]}," ActionView TemplateHandlers register_default_template_handler":{"type":"method","name":"register_default_template_handler","children":[],"call":[" register_template_handler "]}," ActionView TemplateHandlers template_handler_extensions":{"type":"method","name":"template_handler_extensions","children":[],"call":["@@template_handlers keys map sort ","@@template_handlers keys map ","@@template_handlers keys "]}," ActionView TemplateHandlers register_template_handler":{"type":"method","name":"register_template_handler","children":[],"call":["@@template_handlers []= ","extension to_sym "]}," ActionView TemplateHandlers extended":{"type":"method","name":"extended","children":[],"call":[]}," ActionView TemplateHandler call":{"type":"method","name":"call","children":[],"call":[]}," ActionView Template split":{"type":"method","name":"split","children":[],"call":["m [] "," valid_extension? ","file match "," parse_extensions ","file to_s match ","file to_s "," valid_locale? ","extensions split ","file match  [] ","file to_s match  [] ","extensions split  [] "," valid_m [] ? ","file file match atch ","file file to_s match atch ","file extensions split atch "," parse_m [] s "," parse_m []  ","file to_s file match atch ","file to_s file to_s match atch ","file to_s extensions split atch ","m [] s split ","m []  split "]}," ActionView Template find_full_path":{"type":"method","name":"find_full_path","children":[],"call":[" raise ","MissingTemplate  new ","File  file? ","(lvar :load_path) compact join ","(lvar :load_path) compact ","load_paths each "," Array + "," Array ","File  (lvar :load_path) compact join ? "," Array +  each "]}," ActionView Template valid_extension?":{"type":"method","name":"valid_extension?","children":[],"call":["Template  template_handler_extensions include? ","Template  template_handler_extensions ","Template  registered_template_handler nil? ! ","Template  registered_template_handler nil? ","Template  registered_template_handler "]}," ActionView Template method_segment":{"type":"method","name":"method_segment","children":[],"call":["1 ord "," relative_path to_s gsub "," relative_path to_s "," relative_path "]}," ActionView Template relative_path":{"type":"method","name":"relative_path","children":[],"call":["path sub! ","Regexp  escape ","File  expand_path "," filename ","File  expand_path  sub! ","File  expand_File  expand_path  "]}," ActionView Template path_without_format_and_extension":{"type":"method","name":"path_without_format_and_extension","children":[],"call":["(send nil :base_path) compact join ","(send nil :base_path) compact "," name "," base_path ","(send nil :name) compact join ","(send nil :name) compact "," locale "]}," ActionView Template path_without_extension":{"type":"method","name":"path_without_extension","children":[],"call":["(send nil :base_path) compact join ","(send nil :base_path) compact ","(send nil :name) compact join ","(send nil :name) compact "," format "," name "," base_path "," locale "]}," ActionView Template path":{"type":"method","name":"path","children":[],"call":["(send nil :base_path) compact join ","(send nil :base_path) compact ","(send nil :name) compact join ","(send nil :name) compact "," extension "," format "," name "," base_path "," locale "]}," ActionView Template mime_type":{"type":"method","name":"mime_type","children":[],"call":["Mime Type  lookup_by_extension "," format ","@formats first to_s ","@formats first ","ActiveSupport Deprecation  warn "]}," ActionView Template content_type":{"type":"method","name":"content_type","children":[],"call":[" format gsub "," format "]}," ActionView Template multipart?":{"type":"method","name":"multipart?","children":[],"call":[" format include? "," format "]}," ActionView Template format_and_extension":{"type":"method","name":"format_and_extension","children":[],"call":["(lvasgn :extensions\n  (send\n    (send\n      (array\n        (send nil :format)\n        (send nil :extension)) :compact) :join\n    (str \".\"))) blank? ","(send nil :format) compact join ","(send nil :format) compact "," extension "," format ","(lvasgn :(send nil :format) compact join \n  (send\n    (send\n      (array\n        (send nil :format)\n        (send nil :extension)) :compact) :join\n    (str \".\"))) blank? "]}," ActionView RenderablePartial render_partial":{"type":"method","name":"render_partial","children":[],"call":[" render_template ","local_assigns []= "," variable_name ","ActiveSupport Deprecation DeprecatedObjectProxy  new ","view controller instance_variable_get ","view controller ","view controller instance_variable_defined? ","view respond_to? ","local_assigns [] ","object nil? "," local_assigns_key? ! "," local_assigns_key? ","ActiveSupport Deprecation DeprecatedObjectProxy  new  nil? "]}," ActionView RenderablePartial render":{"type":"method","name":"render","children":[],"call":["ActionController Base  benchmark "," path_without_format_and_extension "]}," ActionView RenderablePartial counter_name":{"type":"method","name":"counter_name","children":[],"call":["(begin\n  (send nil :variable_name)) to_sym "," variable_name "]}," ActionView RenderablePartial variable_name":{"type":"method","name":"variable_name","children":[],"call":[" name sub to_sym "," name sub "," name "]}," ActionView Renderable recompile?":{"type":"method","name":"recompile?","children":[],"call":["(and\n  (send\n    (const\n      (const\n        (const nil :ActionView) :PathSet) :Path) :eager_load_templates?)\n  (send\n    (const\n      (const nil :Base) :CompiledTemplates) :method_defined?\n    (lvar :symbol))) ! ","Base CompiledTemplates  method_defined? ","ActionView PathSet Path  eager_load_templates? "]}," ActionView Renderable compile!":{"type":"method","name":"compile!","children":[],"call":[" raise ","ActionView TemplateError  new ","logger debug ","e backtrace join ","e backtrace ","Base  logger ","ActionView Base CompiledTemplates  module_eval "," filename "," compiled_source ","(send\n  (send\n    (lvar :local_assigns) :keys) :map) join ","local_assigns keys map ","local_assigns keys ","Encoding  default_external ","Encoding  respond_to? ","code sub! "," compiled_source  sub! "]}," ActionView Renderable compile":{"type":"method","name":"compile","children":[],"call":[" compile! "," recompile? ","@@mutex synchronize "," method_name ","Base CompiledTemplates  method_defined? ! ","Base CompiledTemplates  method_defined? "]}," ActionView Renderable method_name":{"type":"method","name":"method_name","children":[],"call":["(str \"_run\") compact join to_sym ","(str \"_run\") compact join ","(str \"_run\") compact "," method_segment "," extension ","(send\n  (send\n    (lvar :local_assigns) :keys) :map) sort join ","(send\n  (send\n    (lvar :local_assigns) :keys) :map) sort ","k to_s ","local_assigns keys map ","local_assigns keys ","local_assigns any? ","method_name to_sym "," method_name_without_locals ","method_name << "," method_name_without_locals dup "," method_name_without_locals  to_sym "," method_name_without_locals dup  to_sym ","  method_name_without_locals _without_locals ","  method_name_without_locals dup _without_locals "," method_name_without_locals  << "," method_name_without_locals dup  << ","  method_name_without_locals _without_locals dup ","  method_name_without_locals dup _without_locals dup "]}," ActionView Renderable render":{"type":"method","name":"render","children":[],"call":["stack pop ","view instance_variable_get ","view instance_variable_defined? ","names first ","view capture ","view instance_variable_defined? ! ","view send "," method_name "," mime_type "," respond_to? ","view instance_variable_set "," is_a? ","stack push "," compile "," render_without_template_tracking ","rendered [] ","rendered [] [] "," is_a? ! ","view with_template ","view instance_variable_get  pop ","view instance_variable_get  push ","view instance_variable_get  [] ","view instance_variable_get  [] [] "]}," ActionView Renderable compiled_source":{"type":"method","name":"compiled_source","children":[],"call":[" handler call "," handler "]}," ActionView Renderable handler":{"type":"method","name":"handler","children":[],"call":["Template  handler_class_for_extension "," extension "]}," ActionView Renderable filename":{"type":"method","name":"filename","children":[],"call":[]}," ActionView Renderable included":{"type":"method","name":"included","children":[],"call":[]}," ActionView PathSet []":{"type":"method","name":"[]","children":[],"call":["path [] "," each "," paths [] "," paths "]}," ActionView PathSet reload!":{"type":"method","name":"reload!","children":[],"call":["path reload! "," each "]}," ActionView PathSet load":{"type":"method","name":"load","children":[],"call":["path load "," each "]}," ActionView PathSet Path templates_in_path":{"type":"method","name":"templates_in_path","children":[],"call":["Template  new ","file split last ","file split ","File  directory? ","(send\n  (send\n    (const nil :Dir) :glob\n    (dstr\n      (begin\n        (ivar :@path))\n      (str \"/**/*/**\"))) :|\n  (send\n    (const nil :Dir) :glob\n    (dstr\n      (begin\n        (ivar :@path))\n      (str \"/**\")))) each ","Dir  glob | ","Dir  glob "]}," ActionView PathSet Path reload!":{"type":"method","name":"reload!","children":[],"call":["@paths freeze ","@paths [] ","template path_without_extension ","@paths []= ","template path ","template freeze "," class eager_load_templates? "," class "," templates_in_path "]}," ActionView PathSet Path load":{"type":"method","name":"load","children":[],"call":[" reload! "," loaded? "]}," ActionView PathSet Path loaded?":{"type":"method","name":"loaded?","children":[],"call":[]}," ActionView PathSet Path []":{"type":"method","name":"[]","children":[],"call":["@paths [] "," raise "]}," ActionView PathSet Path eql?":{"type":"method","name":"eql?","children":[],"call":[" to_str == ","path to_str "," to_str "]}," ActionView PathSet Path ==":{"type":"method","name":"==","children":[],"call":[" to_str == ","path to_str "," to_str "]}," ActionView PathSet Path initialize":{"type":"method","name":"initialize","children":[],"call":[" reload! ","path freeze "," raise ","path is_a? "]}," ActionView PathSet Path eager_load_templates?":{"type":"method","name":"eager_load_templates?","children":[],"call":[]}," ActionView PathSet Path eager_load_templates!":{"type":"method","name":"eager_load_templates!","children":[],"call":[]}," ActionView PathSet unshift":{"type":"method","name":"unshift","children":[],"call":[" class type_cast "," class ","objs map "]}," ActionView PathSet push":{"type":"method","name":"push","children":[],"call":[" class type_cast "," class ","objs map "]}," ActionView PathSet insert":{"type":"method","name":"insert","children":[],"call":[" class type_cast "," class "]}," ActionView PathSet concat":{"type":"method","name":"concat","children":[],"call":[" class type_cast "," class ","array map! "]}," ActionView PathSet <<":{"type":"method","name":"<<","children":[],"call":[" class type_cast "," class "]}," ActionView PathSet initialize":{"type":"method","name":"initialize","children":[],"call":[" class type_cast "," class ","(splat\n  (lvar :args)) map! "," typecast "]}," ActionView PathSet type_cast":{"type":"method","name":"type_cast","children":[],"call":[]}," ActionView Partials _pick_partial_template":{"type":"method","name":"_pick_partial_template","children":[],"call":[" _pick_template "," controller class controller_path "," controller class "," controller ","File  join ","File  basename ","File  dirname ","partial_path include? "," view_paths find_template "," template_format "," view_paths "," controller class controller_File  join  ","partial_File  join  include? "," view_File  join s find_template "," view_File  join s "]}," ActionView InlineTemplate recompile?":{"type":"method","name":"recompile?","children":[],"call":[]}," ActionView Helpers included":{"type":"method","name":"included","children":[],"call":[]}," ActionView Helpers TranslationHelper localize":{"type":"method","name":"localize","children":[],"call":["I18n  localize "]}," ActionView Helpers TranslationHelper translate":{"type":"method","name":"translate","children":[],"call":[" content_tag ","keys join ","I18n  send ","e options [] ","e options ","e key ","e locale ","I18n  translate ","options []= ","translations first ","translations size > ","translations size "," html_safe_translation_keys ","multiple_keys ! "," scope_keys_by_partial ","ActiveSupport Deprecation  warn "," caller ","keys is_a? "," scope_key_by_partial ","(if\n  (send\n    (lvar :translation) :respond_to?\n    (sym :join))\n  (send\n    (lvar :translation) :join)\n  (lvar :translation)) html_safe ","translation join ","translation respond_to? ","Array  wrap ","I18n  normalize_keys ","translation html_safe "," html_safe_translation_key? ","options merge! ","I18n  translate html_safe ","options key? ","html_safe_options []= ","ERB Util  html_escape ","value to_s ","options except each ","options except ","options dup ","value is_a? ","name == ","keys last to_s titleize ","keys last to_s ","keys last "," raise ","options [] "," wrap_translate_defaults ","ActionView Base  raise_on_missing_translations ","I18n  send  join "," scope_keys_by_partial  join ","I18n  normalize_keys  join "," html_safe_translation_keys  first ","I18n  translate  first ","I18n  translate s first "," html_safe_translation_keys  size > ","I18n  translate  size > ","I18n  translate s size > "," html_safe_translation_keys  size ","I18n  translate  size ","I18n  translate s size "," html_safe_translation_I18n  send  "," html_safe_translation_ scope_keys_by_partial  "," html_safe_translation_I18n  normalize_keys  "," html_safe_I18n  translate _keys ","multiple_I18n  send  ! ","multiple_ scope_keys_by_partial  ! ","multiple_I18n  normalize_keys  ! ","keys is_a?  ! "," scope_I18n  send _by_partial "," scope_ scope_keys_by_partial _by_partial "," scope_I18n  normalize_keys _by_partial ","I18n  send  is_a? "," scope_keys_by_partial  is_a? ","I18n  normalize_keys  is_a? ","(if\n  (send\n    (lvar :I18n  translate ) :respond_to?\n    (sym :join))\n  (send\n    (lvar :I18n  translate ) :join)\n  (lvar :I18n  translate )) html_safe ","I18n  translate  join ","I18n  translate  respond_to? ","I18n  normalize_I18n  send  ","I18n  normalize_ scope_keys_by_partial  ","I18n  normalize_I18n  normalize_keys  ","I18n  translate  html_safe "," html_safe_I18n  translate _key? ","options dup  []= ","I18n  send  last to_s titleize "," scope_keys_by_partial  last to_s titleize ","I18n  normalize_keys  last to_s titleize ","I18n  send  last to_s "," scope_keys_by_partial  last to_s ","I18n  normalize_keys  last to_s ","I18n  send  last "," scope_keys_by_partial  last ","I18n  normalize_keys  last ","ActionView Base  raise_on_missing_ html_safe_translation_keys  ","ActionView Base  raise_on_missing_I18n  translate  ","ActionView Base  raise_on_missing_I18n  translate s "]}," ActionView Helpers TextHelper Cycle step_index":{"type":"method","name":"step_index","children":[],"call":["(send\n  (ivar :@index) :+\n  (lvar :n)) % ","@values size ","@index + "]}," ActionView Helpers TextHelper Cycle previous_index":{"type":"method","name":"previous_index","children":[],"call":[" step_index "]}," ActionView Helpers TextHelper Cycle next_index":{"type":"method","name":"next_index","children":[],"call":[" step_index "]}," ActionView Helpers TextHelper Cycle current_value":{"type":"method","name":"current_value","children":[],"call":["@values [] to_s ","@values [] "," previous_index "]}," ActionView Helpers TextHelper current_cycle":{"type":"method","name":"current_cycle","children":[],"call":["cycle current_value ","cycle nil? "," get_cycle "," get_cycle  current_value "," get_cycle  nil? "," get_ get_cycle  "]}," ActionView Helpers TagHelper block_called_from_erb?":{"type":"method","name":"block_called_from_erb?","children":[],"call":[" eval ","block binding "]}," ActionView Helpers SanitizeHelper ClassMethods sanitized_protocol_separator=":{"type":"method","name":"sanitized_protocol_separator=","children":[],"call":[" white_list_sanitizer protocol_separator= "," white_list_sanitizer "]}," ActionView Helpers SanitizeHelper ClassMethods sanitized_allowed_protocols":{"type":"method","name":"sanitized_allowed_protocols","children":[],"call":[" white_list_sanitizer allowed_protocols "," white_list_sanitizer "]}," ActionView Helpers SanitizeHelper ClassMethods sanitized_shorthand_css_properties":{"type":"method","name":"sanitized_shorthand_css_properties","children":[],"call":[" white_list_sanitizer shorthand_css_properties "," white_list_sanitizer "]}," ActionView Helpers SanitizeHelper ClassMethods sanitized_allowed_css_keywords":{"type":"method","name":"sanitized_allowed_css_keywords","children":[],"call":[" white_list_sanitizer allowed_css_keywords "," white_list_sanitizer "]}," ActionView Helpers SanitizeHelper ClassMethods sanitized_allowed_css_properties":{"type":"method","name":"sanitized_allowed_css_properties","children":[],"call":[" white_list_sanitizer allowed_css_properties "," white_list_sanitizer "]}," ActionView Helpers SanitizeHelper ClassMethods sanitized_allowed_attributes":{"type":"method","name":"sanitized_allowed_attributes","children":[],"call":[" white_list_sanitizer allowed_attributes "," white_list_sanitizer "]}," ActionView Helpers SanitizeHelper ClassMethods sanitized_allowed_tags":{"type":"method","name":"sanitized_allowed_tags","children":[],"call":[" white_list_sanitizer allowed_tags "," white_list_sanitizer "]}," ActionView Helpers SanitizeHelper ClassMethods sanitized_bad_tags":{"type":"method","name":"sanitized_bad_tags","children":[],"call":[" white_list_sanitizer bad_tags "," white_list_sanitizer "]}," ActionView Helpers SanitizeHelper ClassMethods sanitized_uri_attributes":{"type":"method","name":"sanitized_uri_attributes","children":[],"call":[" white_list_sanitizer uri_attributes "," white_list_sanitizer "]}," ActionView Helpers SanitizeHelper ClassMethods sanitized_protocol_separator":{"type":"method","name":"sanitized_protocol_separator","children":[],"call":[" white_list_sanitizer protocol_separator "," white_list_sanitizer "]}," ActionView Helpers PrototypeHelper JavaScriptGenerator GeneratorMethods reload":{"type":"method","name":"reload","children":[],"call":[" record "]}," ActionView Helpers PrototypeHelper button_to_remote":{"type":"method","name":"button_to_remote","children":[],"call":[" button_to_function "," remote_function "]}," ActionView Helpers FormTagHelper sanitize_to_id":{"type":"method","name":"sanitize_to_id","children":[],"call":["name to_s gsub gsub ","name to_s gsub ","name to_s ","name to_s delete gsub ","name to_s delete "]}," ActionView Helpers InstanceTag default_datetime":{"type":"method","name":"default_datetime","children":[],"call":["Time  utc_time ","default [] ","time send ","(sym :year) each ","Time  current ","options [] dup ","options [] ","Time  utc_Time  current  ","options [] dup  [] ","Time  current  send "]}," ActionView Helpers InstanceTag datetime_selector":{"type":"method","name":"datetime_selector","children":[],"call":["DateTimeSelector  new ","options merge ","options [] ","options []= ","options dup "," default_datetime "," value "," object ","options has_key? ! ","options has_key? ","options dup  merge ","options dup  [] ","options dup  []= ","options dup  dup ","options dup  has_key? ! ","options dup  has_key? "]}," ActionView Helpers DateTimeSelector separator":{"type":"method","name":"separator","children":[],"call":["@options [] "]}," ActionView Helpers DateTimeSelector build_selects_from_types":{"type":"method","name":"build_selects_from_types","children":[],"call":["select insert ","separator to_s + "," send to_s "," send ","separator to_s "," separator ","type == ","order first ","order reverse each ","order reverse ","select html_safe ","@options [] ! ","@options [] ","order find "," separator  to_s + "," separator  to_s ","  separator  "]}," ActionView Helpers DateTimeSelector input_id_from_type":{"type":"method","name":"input_id_from_type","children":[],"call":[" input_name_from_type gsub gsub "," input_name_from_type gsub "," input_name_from_type ","@options [] + + ","@options [] + ","@options [] "]}," ActionView Helpers DateTimeSelector input_name_from_type":{"type":"method","name":"input_name_from_type","children":[],"call":["@options [] ","ActionView Helpers DateTimeSelector POSITION  [] ","@options has_key? "]}," ActionView Helpers DateTimeSelector build_hidden":{"type":"method","name":"build_hidden","children":[],"call":[" tag + "," tag "," input_name_from_type "," input_id_from_type ","(send\n  (send nil :tag\n    (sym :input)\n    (send\n      (hash\n        (pair\n          (sym :type)\n          (str \"hidden\"))\n        (pair\n          (sym :id)\n          (send nil :input_id_from_type\n            (lvar :type)))\n        (pair\n          (sym :name)\n          (send nil :input_name_from_type\n            (lvar :type)))\n        (pair\n          (sym :value)\n          (lvar :value))) :merge\n      (send\n        (ivar :@html_options) :slice\n        (sym :disabled)))) :+\n  (str \"\\n\")) html_safe ","(pair\n  (sym :type)\n  (str \"hidden\")) merge ","@html_options slice ","(send\n  (send nil :tag\n    (sym :input)\n    (hash\n      (pair\n        (sym :type)\n        (str \"hidden\"))\n      (pair\n        (sym :id)\n        (send nil :input_id_from_type\n          (lvar :type)))\n      (pair\n        (sym :name)\n        (send nil :input_name_from_type\n          (lvar :type)))\n      (pair\n        (sym :value)\n        (lvar :value)))) :+\n  (str \"\\n\")) html_safe ","\n html_safe ","select_options merge! ","@options [] ","select_options []= ","(pair\n  (sym :type)\n  (str \"hidden\")) merge! ","(pair\n  (sym :type)\n  (str \"hidden\")) merge  merge! ","(pair\n  (sym :type)\n  (str \"hidden\")) merge!  merge! ","(pair\n  (sym :type)\n  (str \"hidden\")) merge  []= ","(pair\n  (sym :type)\n  (str \"hidden\")) merge!  []= "]}," ActionView Helpers DateTimeSelector build_select":{"type":"method","name":"build_select","children":[],"call":[" content_tag + "," content_tag ","select_html << ","select_options_as_html to_s ","@options [] ","select_options merge! ","(pair\n  (sym :id)\n  (send nil :input_id_from_type\n    (lvar :type))) merge "," input_name_from_type "," input_id_from_type ","(send\n  (send nil :content_tag\n    (sym :select)\n    (send\n      (lvar :select_html) :html_safe)\n    (lvar :select_options)) :+\n  (str \"\\n\")) html_safe ","select_html html_safe "," prompt_option_tag + "," prompt_option_tag ","(send\n  (send nil :content_tag\n    (sym :select)\n    (lvar :select_html)\n    (lvar :select_options)) :+\n  (str \"\\n\")) html_safe ","select_options []= ","(pair\n  (sym :id)\n  (send nil :input_id_from_type\n    (lvar :type))) merge! ","(send\n  (lvar :select_options) :[]\n  (sym :class)) compact join ","(send\n  (lvar :select_options) :[]\n  (sym :class)) compact ","select_options [] ","(pair\n  (sym :id)\n  (send nil :input_id_from_type\n    (lvar :type))) merge _as_html to_s ","(pair\n  (sym :id)\n  (send nil :input_id_from_type\n    (lvar :type))) merge! _as_html to_s ","(pair\n  (sym :id)\n  (send nil :input_id_from_type\n    (lvar :type))) merge  merge! ","(pair\n  (sym :id)\n  (send nil :input_id_from_type\n    (lvar :type))) merge!  merge! ","(send\n  (send nil :content_tag\n    (sym :select)\n    (send\n      (lvar :select_html) :html_safe)\n    (lvar :(pair\n  (sym :id)\n  (send nil :input_id_from_type\n    (lvar :type))) merge )) :+\n  (str \"\\n\")) html_safe ","(send\n  (send nil :content_tag\n    (sym :select)\n    (send\n      (lvar :select_html) :html_safe)\n    (lvar :(pair\n  (sym :id)\n  (send nil :input_id_from_type\n    (lvar :type))) merge! )) :+\n  (str \"\\n\")) html_safe ","(send\n  (send nil :content_tag\n    (sym :select)\n    (lvar :select_html)\n    (lvar :(pair\n  (sym :id)\n  (send nil :input_id_from_type\n    (lvar :type))) merge )) :+\n  (str \"\\n\")) html_safe ","(send\n  (send nil :content_tag\n    (sym :select)\n    (lvar :select_html)\n    (lvar :(pair\n  (sym :id)\n  (send nil :input_id_from_type\n    (lvar :type))) merge! )) :+\n  (str \"\\n\")) html_safe ","(pair\n  (sym :id)\n  (send nil :input_id_from_type\n    (lvar :type))) merge  []= ","(pair\n  (sym :id)\n  (send nil :input_id_from_type\n    (lvar :type))) merge!  []= ","(send\n  (lvar :(pair\n  (sym :id)\n  (send nil :input_id_from_type\n    (lvar :type))) merge ) :[]\n  (sym :class)) compact join ","(send\n  (lvar :(pair\n  (sym :id)\n  (send nil :input_id_from_type\n    (lvar :type))) merge! ) :[]\n  (sym :class)) compact join ","(send\n  (lvar :(pair\n  (sym :id)\n  (send nil :input_id_from_type\n    (lvar :type))) merge ) :[]\n  (sym :class)) compact ","(send\n  (lvar :(pair\n  (sym :id)\n  (send nil :input_id_from_type\n    (lvar :type))) merge! ) :[]\n  (sym :class)) compact ","(pair\n  (sym :id)\n  (send nil :input_id_from_type\n    (lvar :type))) merge  [] ","(pair\n  (sym :id)\n  (send nil :input_id_from_type\n    (lvar :type))) merge!  [] "]}," ActionView Helpers DateTimeSelector build_options":{"type":"method","name":"build_options","children":[],"call":["select_options join + ","select_options join ","select_options << "," content_tag ","tag_options []= ","selected == "," sprintf ","start step ","options delete nil? ","options delete ","(send\n  (send\n    (lvar :select_options) :join\n    (str \"\\n\")) :+\n  (str \"\\n\")) html_safe ","options reverse_merge! ","AMPM_TRANSLATION  [] ","options [] ","(pair\n  (sym :leading_zeros)\n  (true)) merge! ","select_(pair\n  (sym :leading_zeros)\n  (true)) merge!  join + ","select_(pair\n  (sym :leading_zeros)\n  (true)) merge!  join ","select_(pair\n  (sym :leading_zeros)\n  (true)) merge!  << ","tag_(pair\n  (sym :leading_zeros)\n  (true)) merge!  []= ","(pair\n  (sym :leading_zeros)\n  (true)) merge!  delete nil? ","(pair\n  (sym :leading_zeros)\n  (true)) merge!  delete ","(send\n  (send\n    (lvar :select_(pair\n  (sym :leading_zeros)\n  (true)) merge! ) :join\n    (str \"\\n\")) :+\n  (str \"\\n\")) html_safe ","(pair\n  (sym :leading_zeros)\n  (true)) merge!  reverse_merge! ","(pair\n  (sym :leading_zeros)\n  (true)) merge!  [] ","(pair\n  (sym :options delete )\n  (true)) merge! "]}," ActionView Helpers DateTimeSelector build_options_and_select":{"type":"method","name":"build_options_and_select","children":[],"call":[" build_select "," build_options "]}," ActionView Helpers DateTimeSelector translated_date_order":{"type":"method","name":"translated_date_order","children":[],"call":["I18n  translate ","@options [] "," raise ","forbidden_elements any? ","date_order - ","element to_sym ","date_order map ","date_order -  any? ","I18n  translate  - ","I18n  translate  map "]}," ActionView Helpers DateTimeSelector date_order":{"type":"method","name":"date_order","children":[],"call":[" translated_date_order ","@options [] "]}," ActionView Helpers DateTimeSelector month_name":{"type":"method","name":"month_name","children":[],"call":[" month_names [] "," month_names ","@options [] "," sprintf "]}," ActionView Helpers DateTimeSelector translated_month_names":{"type":"method","name":"translated_month_names","children":[],"call":["I18n  translate ","@options [] "]}," ActionView Helpers DateTimeSelector month_names":{"type":"method","name":"month_names","children":[],"call":["month_names unshift ","month_names size < ","month_names size "," translated_month_names ","@options [] "]}," ActionView Helpers DateTimeSelector select_year":{"type":"method","name":"select_year","children":[],"call":[" build_options_and_select ","options []= ","options [] < ","options [] ","middle_year + ","@options [] ","middle_year - "," build_hidden "," year ","Date  today year ","Date  today ","@datetime == ","@datetime ! "," raise ","(send\n  (send\n    (lvar :options) :[]\n    (sym :end)) :-\n  (send\n    (lvar :options) :[]\n    (sym :start))) abs > ","(send\n  (send\n    (lvar :options) :[]\n    (sym :end)) :-\n  (send\n    (lvar :options) :[]\n    (sym :start))) abs ","options [] - "," year  + ","Date  today year  + "," year  - ","Date  today year  - "]}," ActionView Helpers DateTimeSelector select_month":{"type":"method","name":"select_month","children":[],"call":[" build_select ","month_options join ","month_options << "," content_tag + "," content_tag "," month_name ","options []= "," month == "," month ","1 upto "," build_hidden ","@options [] "]}," ActionView Helpers DateTimeSelector select_day":{"type":"method","name":"select_day","children":[],"call":[" build_options_and_select "," day "," build_hidden ","@options [] "]}," ActionView Helpers DateTimeSelector select_hour":{"type":"method","name":"select_hour","children":[],"call":[" build_options_and_select "," hour "," build_hidden ","@options [] ","options []= "]}," ActionView Helpers DateTimeSelector select_minute":{"type":"method","name":"select_minute","children":[],"call":[" build_options_and_select ","@options [] "," min "," build_hidden "]}," ActionView Helpers DateTimeSelector select_second":{"type":"method","name":"select_second","children":[],"call":[" build_options_and_select "," sec "," build_hidden ","@options [] "]}," ActionView Helpers DateTimeSelector select_time":{"type":"method","name":"select_time","children":[],"call":[" build_selects_from_types ","order << ","@options [] ","@options []= "]}," ActionView Helpers DateTimeSelector select_date":{"type":"method","name":"select_date","children":[],"call":[" build_selects_from_types ","order unshift ","order include? ","(sym :day) each ","@datetime change ","@options [] ! ","@options [] ","order include? ! ","@options []= "," date_order dup "," date_order "," set_day_if_discarded "," date_order dup  unshift "," date_order dup  include? ","@datetime change  change "," date_order dup  include? ! "," date_ date_order dup  dup "," date_ date_order dup  "]}," ActionView Helpers DateTimeSelector select_datetime":{"type":"method","name":"select_datetime","children":[],"call":[" select_time ","@options [] "," select_date "," build_selects_from_types ","order unshift ","order include? ","(sym :day) each ","@datetime change ","@options [] ! ","order include? ! "," date_order dup "," date_order ","(begin\n  (send nil :select_date)) html_safe "," set_day_if_discarded "," date_order dup  unshift "," date_order dup  include? ","@datetime change  change "," date_order dup  include? ! "," date_ date_order dup  dup "," date_ date_order dup  "]}," ActionView Helpers DateTimeSelector initialize":{"type":"method","name":"initialize","children":[],"call":["html_options dup ","options dup ","@options [] ","options dup  [] "]}," ActionView Helpers CaptureHelper with_output_buffer":{"type":"method","name":"with_output_buffer","children":[],"call":[" output_buffer= "," output_buffer ","buf force_encoding "," output_buffer encoding ","buf respond_to? "," output_buffer respond_to? ","ActionView OutputBuffer  new ","ActiveSupport SafeBuffer  new "," output_ActionView OutputBuffer  new fer= "," output_ActiveSupport SafeBuffer  new fer= "," output_ActionView OutputBuffer  new fer "," output_ActiveSupport SafeBuffer  new fer ","ActionView OutputBuffer  new  force_encoding ","ActiveSupport SafeBuffer  new  force_encoding "," output_ActionView OutputBuffer  new fer encoding "," output_ActiveSupport SafeBuffer  new fer encoding ","ActionView OutputBuffer  new  respond_to? ","ActiveSupport SafeBuffer  new  respond_to? "," output_ActionView OutputBuffer  new fer respond_to? "," output_ActiveSupport SafeBuffer  new fer respond_to? "]}," ActionView Helpers AtomFeedHelper AtomBuilder xhtml_block?":{"type":"method","name":"xhtml_block?","children":[],"call":["last [] to_s == ","last [] to_s ","last [] ","last is_a? ","arguments last ","XHTML_TAG_NAMES  include? ","method to_s ","arguments last  [] to_s == ","arguments last  [] to_s ","arguments last  [] ","arguments last  is_a? ","arguments arguments last  "]}," ActionView Helpers AtomFeedHelper AtomBuilder method_missing":{"type":"method","name":"method_missing","children":[],"call":["@xml __send__ ","block call ","@xml div "," xhtml_block? "]}," ActionView Helpers AtomFeedHelper AtomBuilder initialize":{"type":"method","name":"initialize","children":[],"call":[]}," ActionView Helpers AssetTagHelper StylesheetSources tag_class":{"type":"method","name":"tag_class","children":[],"call":[]}," ActionView Helpers AssetTagHelper StylesheetSources expand_sources":{"type":"method","name":"expand_sources","children":[],"call":[" validate_sources! "," all_asset_files ","@sources first == ","@sources first "]}," ActionView Helpers AssetTagHelper StylesheetSources expansions":{"type":"method","name":"expansions","children":[],"call":[]}," ActionView Helpers AssetTagHelper JavaScriptSources include_application?":{"type":"method","name":"include_application?","children":[],"call":["File  exist? ","File  join ","@sources include? "]}," ActionView Helpers AssetTagHelper JavaScriptSources defaults":{"type":"method","name":"defaults","children":[],"call":[" determine_source "," class expansions "," class "]}," ActionView Helpers AssetTagHelper JavaScriptSources tag_class":{"type":"method","name":"tag_class","children":[],"call":[]}," ActionView Helpers AssetTagHelper JavaScriptSources expand_sources":{"type":"method","name":"expand_sources","children":[],"call":["expanded_sources << "," include_application? "," validate_sources! ","(send\n  (begin\n    (send\n      (send\n        (send nil :defaults) :dup) :&\n      (lvar :assets))) :+\n  (lvar :assets)) uniq! ","(send\n  (send\n    (send nil :defaults) :dup) :&\n  (lvar :assets)) + "," defaults dup & "," defaults dup "," defaults "," all_asset_files ","@sources include? "," validate_sources!  << ","(send\n  (begin\n    (send\n      (send\n        (send nil :defaults) :dup) :&\n      (lvar : all_asset_files ))) :+\n  (lvar : all_asset_files )) uniq! ","(send\n  (send\n    (send nil :defaults) :dup) :&\n  (lvar : all_asset_files )) + "]}," ActionView Helpers AssetTagHelper JavaScriptSources expansions":{"type":"method","name":"expansions","children":[],"call":[]}," ActionView Helpers AssetTagHelper AssetCollection latest_mtime":{"type":"method","name":"latest_mtime","children":[],"call":["(send\n  (send nil :tag_sources) :map) max ","source mtime "," tag_sources map "," tag_sources "]}," ActionView Helpers AssetTagHelper AssetCollection joined_contents":{"type":"method","name":"joined_contents","children":[],"call":["(send\n  (send nil :tag_sources) :collect) join ","source contents "," tag_sources collect "," tag_sources "]}," ActionView Helpers AssetTagHelper AssetCollection tag_sources":{"type":"method","name":"tag_sources","children":[],"call":[" tag_class new "," tag_class "," expand_sources collect "," expand_sources "]}," ActionView Helpers AssetTagHelper AssetCollection all_asset_files":{"type":"method","name":"all_asset_files","children":[],"call":["(send\n  (send\n    (const nil :Dir) :[]\n    (send\n      (const nil :File) :join\n      (splat\n        (lvar :path)))) :collect) sort ","file [] sub ","file [] ","(send\n  (send\n    (send\n      (lvar :file) :size) :-\n    (send\n      (send nil :public_directory) :size)) :-\n  (int 1)) -@ ","file size - - ","file size - "," public_directory size "," public_directory ","file size ","Dir  [] collect ","Dir  [] ","File  join ","(send nil :public_directory) compact "," extension ","(send\n  (send\n    (const nil :Dir) :[]\n    (send\n      (const nil :File) :join\n      (splat\n        (lvar :(send nil :public_directory) compact )))) :collect) sort "]}," ActionView Helpers AssetTagHelper AssetCollection validate_sources!":{"type":"method","name":"validate_sources!","children":[],"call":["(send\n  (ivar :@sources) :collect) flatten "," determine_source "," class expansions "," class ","@sources collect "]}," ActionView Helpers AssetTagHelper AssetCollection determine_source":{"type":"method","name":"determine_source","children":[],"call":[" raise ","source inspect ","collection [] "]}," ActionView Helpers AssetTagHelper AssetCollection write_asset_file_contents":{"type":"method","name":"write_asset_file_contents","children":[],"call":["File  utime "," latest_mtime ","cache write "," joined_contents ","File  open ","FileUtils  mkdir_p ","File  dirname "," latest_ latest_mtime ime "]}," ActionView Helpers AssetTagHelper AssetCollection initialize":{"type":"method","name":"initialize","children":[],"call":[]}," ActionView Helpers AssetTagHelper AssetCollection create":{"type":"method","name":"create","children":[],"call":[]}," ActionView Helpers AssetTagHelper AssetTag rewrite_asset_path":{"type":"method","name":"rewrite_asset_path","children":[],"call":["asset_id blank? "," rails_asset_id ","@template send ","@template respond_to? "," rails_asset_id  blank? "," rails_ rails_asset_id  "]}," ActionView Helpers AssetTagHelper AssetTag rails_asset_id":{"type":"method","name":"rails_asset_id","children":[],"call":["File  mtime to_i to_s ","File  mtime to_i ","File  mtime ","File  exist? ","File  join ","ENV  [] "]}," ActionView Helpers AssetTagHelper AssetTag compute_asset_host":{"type":"method","name":"compute_asset_host","children":[],"call":["host % ","source hash % ","source hash ","host =~ ","host call "," request ","host arity ","host is_a? ","ActionController Base  asset_host ","ActionController Base  asset_host  % ","ActionController Base  asset_host  =~ ","ActionController Base  asset_host  call ","ActionController Base  asset_host  arity ","ActionController Base  asset_host  is_a? ","ActionController Base  asset_ActionController Base  asset_host  "]}," ActionView Helpers AssetTagHelper AssetTag prepend_asset_host":{"type":"method","name":"prepend_asset_host","children":[],"call":[" request protocol "," request ","host !~ ","host blank? ! ","host blank? "," request? "," compute_asset_host ","source !~ "," compute_asset_host  !~ "," compute_asset_host  blank? ! "," compute_asset_host  blank? "," compute_asset_ compute_asset_host  "]}," ActionView Helpers AssetTagHelper AssetTag prepend_relative_url_root":{"type":"method","name":"prepend_relative_url_root","children":[],"call":["source !~ "," request? ","ActionController Base  relative_url_root ","ActionController Base  ActionController Base  relative_url_root  "]}," ActionView Helpers AssetTagHelper AssetTag file_exists_with_extension?":{"type":"method","name":"file_exists_with_extension?","children":[],"call":["File  exist? ","File  join "," extension "," directory "]}," ActionView Helpers AssetTagHelper AssetTag missing_extension?":{"type":"method","name":"missing_extension?","children":[],"call":["File  extname blank? ","File  extname "," extension "]}," ActionView Helpers AssetTagHelper AssetTag compute_public_path":{"type":"method","name":"compute_public_path","children":[],"call":[" prepend_asset_host "," prepend_relative_url_root "," rewrite_asset_path "," directory ","source [] == ","source [] "," extension "," file_exists_with_extension? "," missing_extension? ","Cache  [] ","CacheGuard  synchronize ","source =~ "," prepend_asset_host  [] == "," prepend_relative_url_root  [] == "," rewrite_asset_path  [] == "," prepend_asset_host  [] "," prepend_relative_url_root  [] "," rewrite_asset_path  [] "," prepend_asset_host  =~ "," prepend_relative_url_root  =~ "," rewrite_asset_path  =~ "]}," ActionView Helpers AssetTagHelper AssetTag request?":{"type":"method","name":"request?","children":[],"call":["@controller respond_to? "]}," ActionView Helpers AssetTagHelper AssetTag request":{"type":"method","name":"request","children":[],"call":["@controller request "]}," ActionView Helpers AssetTagHelper AssetTag mtime":{"type":"method","name":"mtime","children":[],"call":["File  mtime "," asset_file_path "]}," ActionView Helpers AssetTagHelper AssetTag contents":{"type":"method","name":"contents","children":[],"call":["File  read "," asset_file_path "]}," ActionView Helpers AssetTagHelper AssetTag asset_file_path":{"type":"method","name":"asset_file_path","children":[],"call":["File  join "," public_path split first "," public_path split "," public_path "]}," ActionView Helpers AssetTagHelper AssetTag public_path":{"type":"method","name":"public_path","children":[],"call":[" compute_public_path "]}," ActionView Helpers AssetTagHelper AssetTag initialize":{"type":"method","name":"initialize","children":[],"call":["ActionController Base  asset_host "," class name "," class ","ActionController Base  relative_url_root ","controller request protocol ","controller request ","controller respond_to? "]}," ActionView Helpers AssetTagHelper StylesheetAsset extension":{"type":"method","name":"extension","children":[],"call":[]}," ActionView Helpers AssetTagHelper StylesheetAsset directory":{"type":"method","name":"directory","children":[],"call":[]}," ActionView Helpers AssetTagHelper StylesheetAsset public_directory":{"type":"method","name":"public_directory","children":[],"call":[]}," ActionView Helpers AssetTagHelper JavaScriptAsset extension":{"type":"method","name":"extension","children":[],"call":[]}," ActionView Helpers AssetTagHelper JavaScriptAsset directory":{"type":"method","name":"directory","children":[],"call":[]}," ActionView Helpers AssetTagHelper JavaScriptAsset public_directory":{"type":"method","name":"public_directory","children":[],"call":[]}," ActionView Helpers AssetTagHelper ImageAsset extension":{"type":"method","name":"extension","children":[],"call":[]}," ActionView Helpers AssetTagHelper ImageAsset directory":{"type":"method","name":"directory","children":[],"call":[]}," ActionView Base _render_with_layout":{"type":"method","name":"_render_with_layout","children":[],"call":[" render ","options merge ","options [] "," concat "," block_given? ","options delete "]}," ActionView Base _exempt_from_layout?":{"type":"method","name":"_exempt_from_layout?","children":[],"call":["template =~ ","@@exempt_from_layout any? "," _pick_template to_s "," _pick_template "," _pick_template to_s  =~ "," _pick_ _pick_template to_s  to_s "," _pick_ _pick_template to_s  "]}," ActionView Base _pick_template":{"type":"method","name":"_pick_template","children":[],"call":[" logger debug ","[PERFORMANCE] Rendering a template that was  + + + + ","[PERFORMANCE] Rendering a template that was  + + + "," view_paths join "," view_paths ","[PERFORMANCE] Rendering a template that was  + + ","[PERFORMANCE] Rendering a template that was  + "," logger "," class warn_cache_misses "," class ","Template  new "," view_paths [] "," template_format == "," template_format ","first_render format_and_extension ","first_render respond_to? ","@_render_stack first ","m [] ","path match ","template_path sub ","template_path respond_to? ","[PERFORMANCE] Rendering a Template  new  that was  + + + + ","[PERFORMANCE] Rendering a  view_paths []  that was  + + + + ","[PERFORMANCE] Rendering a tepath match plate that was  + + + + ","[PERFORMANCE] Rendering a Template  new  that was  + + + ","[PERFORMANCE] Rendering a  view_paths []  that was  + + + ","[PERFORMANCE] Rendering a tepath match plate that was  + + + "," view_template_path sub s join "," view_template_path sub s ","[PERFORMANCE] Rendering a Template  new  that was  + + ","[PERFORMANCE] Rendering a  view_paths []  that was  + + ","[PERFORMANCE] Rendering a tepath match plate that was  + + ","[PERFORMANCE] Rendering a Template  new  that was  + ","[PERFORMANCE] Rendering a  view_paths []  that was  + ","[PERFORMANCE] Rendering a tepath match plate that was  + "," class warn_cache_path match isses ","Tepath match plate  new "," view_template_path sub s [] "," Template  new _format == ","  view_paths [] _format == "," tepath match plate_forpath match at == "," Template  new _format ","  view_paths [] _format "," tepath match plate_forpath match at ","@_render_stack first  format_and_extension ","first_render forpath match at_and_extension ","@_render_stack first  respond_to? ","path match  [] ","path path match atch ","template_path sub  match ","Template  new _path sub "," view_paths [] _path sub ","tepath match plate_path sub ","template_template_path sub  sub ","Template  new _path respond_to? "," view_paths [] _path respond_to? ","tepath match plate_path respond_to? ","template_template_path sub  respond_to? "]}," ActionView Base _set_controller_content_type":{"type":"method","name":"_set_controller_content_type","children":[],"call":[" controller response content_type "," controller response "," controller "," controller respond_to? "]}," ActionView Base _copy_ivars_from_controller":{"type":"method","name":"_copy_ivars_from_controller","children":[],"call":[" instance_variable_set ","@controller instance_variable_get ","variables each ","@controller protected_instance_variables ","@controller respond_to? ","@controller instance_variable_names ","@controller instance_variable_names  each ","@controller protected_instance_@controller instance_variable_names  "]}," ActionView Base _evaluate_assigns_and_ivars":{"type":"method","name":"_evaluate_assigns_and_ivars","children":[],"call":[" _copy_ivars_from_controller "," instance_variable_set ","@assigns each "," controller instance_variable_get "," controller ","variables each "," controller protected_instance_variables "," controller respond_to? "," controller instance_variable_names "," controller instance_variable_names  each "," controller protected_instance_ controller instance_variable_names  "]}," ActionView Base template":{"type":"method","name":"template","children":[],"call":["@_render_stack last "]}," ActionView Base view_paths=":{"type":"method","name":"view_paths=","children":[],"call":[" class process_view_paths "," class ","@view_paths load! "," class process_view_paths  load! "]}," ActionView Base ProxyModule include":{"type":"method","name":"include","children":[],"call":["@receiver extend "]}," ActionView Base ProxyModule initialize":{"type":"method","name":"initialize","children":[],"call":[]}," ActionView Base process_view_paths":{"type":"method","name":"process_view_paths","children":[],"call":["ActionView PathSet  new ","Array  wrap ","value dup ","value is_a? "]}," ActionView Base exempt_from_layout":{"type":"method","name":"exempt_from_layout","children":[],"call":[]}," ActionView MissingTemplate initialize":{"type":"method","name":"initialize","children":[],"call":["path =~ ","paths join ","path include? ","paths compact join ","paths compact ","details inspect ","(send\n  (send\n    (lvar :paths) :compact) :map) join ","p to_s inspect ","p to_s ","paths compact map ","searched_paths join ","(lvar :prefix) join ","prefixes map ","Array  wrap "," Array ","Array  wrap  map "," Array  map "]}," ActionController Translation localize":{"type":"method","name":"localize","children":[],"call":["I18n  localize "]}," ActionController Translation translate":{"type":"method","name":"translate","children":[],"call":["I18n  translate "]}," ActionController TestResponse recycle!":{"type":"method","name":"recycle!","children":[],"call":[" headers delete "," headers ","@body << "," lambda "," initialize "]}," ActionController TestResponseBehavior rendered_template":{"type":"method","name":"rendered_template","children":[],"call":[" template instance_variable_get "," template "]}," ActionController TestRequest if_none_match=":{"type":"method","name":"if_none_match=","children":[],"call":["@env []= "]}," ActionController TestRequest if_modified_since=":{"type":"method","name":"if_modified_since=","children":[],"call":["@env []= "]}," ActionController TestRequest body_stream":{"type":"method","name":"body_stream","children":[],"call":["StringIO  new "," raw_post "]}," ActionController TestCase RaiseActionExceptions rescue_action_without_handler":{"type":"method","name":"rescue_action_without_handler","children":[],"call":[" raise "," request remote_addr == "," request remote_addr "," request "," exception= "]}," ActionController Routing PathSegment number_of_captures":{"type":"method","name":"number_of_captures","children":[],"call":[" regexp number_of_captures "," regexp "]}," ActionController Routing ControllerSegment number_of_captures":{"type":"method","name":"number_of_captures","children":[],"call":[]}," ActionController Routing DynamicSegment number_of_captures":{"type":"method","name":"number_of_captures","children":[],"call":[" regexp number_of_captures + "," regexp number_of_captures "," regexp "]}," ActionController Routing StaticSegment number_of_captures":{"type":"method","name":"number_of_captures","children":[],"call":[]}," ActionController Routing Segment number_of_captures":{"type":"method","name":"number_of_captures","children":[],"call":["Regexp  new number_of_captures ","Regexp  new "," regexp_chunk "]}," Regexp multiline?":{"type":"method","name":"multiline?","children":[],"call":[" options & == "," options & "," options "]}," ActionController Routing Route prepare_matching!":{"type":"method","name":"prepare_matching!","children":[],"call":[" requirement_for "]}," ActionController Routing Route write_recognition!":{"type":"method","name":"write_recognition!","children":[],"call":[" instance_eval "," recognition_conditions join "," recognition_conditions "," recognition_extraction * "," recognition_extraction "]}," ActionController Routing Route write_generation!":{"type":"method","name":"write_generation!","children":[],"call":[" instance_eval "," generation_requirements "," generation_structure "," generation_extraction "]}," ActionController Routing Route freeze":{"type":"method","name":"freeze","children":[],"call":[" to_s "," defaults "," significant_keys "," parameter_shell "," prepare_matching! "," write_recognition! "," write_generation! "," frozen? "]}," ActionController Routing RouteSet remove_recognize_optimized!":{"type":"method","name":"remove_recognize_optimized!","children":[],"call":[" remove_method "," respond_to? "]}," ActionController Routing Optimisation PositionalArgumentsWithAdditionalParams guard_conditions":{"type":"method","name":"guard_conditions","children":[],"call":["(dstr\n  (str \"args.size == \")\n  (begin\n    (send\n      (send\n        (send\n          (send nil :route) :segment_keys) :size) :+\n      (int 1)))) + ","UrlRewriter RESERVED_OPTIONS  collect "," route segment_keys size + "," route segment_keys size "," route segment_keys "," route "]}," ActionController Routing Optimisation PositionalArguments guard_conditions":{"type":"method","name":"guard_conditions","children":[],"call":["number_of_arguments == "," route segment_keys size "," route segment_keys "," route "," route required_segment_keys size "," route required_segment_keys "," route segment_keys size  == "," route required_segment_keys size  == "]}," ActionController Routing Optimisation Optimiser guard_conditions":{"type":"method","name":"guard_conditions","children":[],"call":[]}," ActionController Routing RouteBuilder validate_route_conditions":{"type":"method","name":"validate_route_conditions","children":[],"call":[" raise ","conditions inspect ","HTTP_METHODS  include? ","m to_sym ","m == ","(lvar :method) flatten each ","(lvar :method) flatten ","conditions [] ","(lvar :conditions [] ) flatten each ","(lvar :conditions [] ) flatten "]}," ActionController AbstractResponse set_conditional_cache_control!":{"type":"method","name":"set_conditional_cache_control!","children":[],"call":[" headers []= "," headers "," headers [] == ","DEFAULT_HEADERS  [] "," headers [] "]}," ActionController AbstractResponse nonempty_ok_response?":{"type":"method","name":"nonempty_ok_response?","children":[],"call":[" body empty? ! "," body empty? "," body "," body is_a? "," status [] == "," status [] "," status "," status ! "]}," ActionController AbstractResponse assign_default_content_type_and_charset!":{"type":"method","name":"assign_default_content_type_and_charset!","children":[],"call":[" default_charset "," charset "," sending_file? "," content_type "]}," ActionController AbstractResponse sending_file?":{"type":"method","name":"sending_file?","children":[],"call":[" headers [] == "," headers [] "," headers "]}," ActionController AbstractResponse etag=":{"type":"method","name":"etag=","children":[],"call":[" headers []= ","Digest MD5  hexdigest ","ActiveSupport Cache  expand_cache_key "," headers "]}," ActionController AbstractResponse etag?":{"type":"method","name":"etag?","children":[],"call":[" headers include? "," headers "]}," ActionController AbstractResponse etag":{"type":"method","name":"etag","children":[],"call":[" headers [] "," headers "]}," ActionController AbstractResponse last_modified=":{"type":"method","name":"last_modified=","children":[],"call":[" headers []= ","utc_time httpdate "," headers "]}," ActionController AbstractResponse last_modified?":{"type":"method","name":"last_modified?","children":[],"call":[" headers include? "," headers "]}," ActionController AbstractResponse last_modified":{"type":"method","name":"last_modified","children":[],"call":["Time  httpdate "," headers [] "," headers "]}," ActionController AbstractResponse location=":{"type":"method","name":"location=","children":[],"call":[" headers []= "," headers "]}," ActionController AbstractResponse location":{"type":"method","name":"location","children":[],"call":[" headers [] "," headers "]}," ActionController AbstractResponse status=":{"type":"method","name":"status=","children":[],"call":[" headers []= "," headers "]}," ActionController AbstractResponse status":{"type":"method","name":"status","children":[],"call":[" headers [] "," headers "]}," ActionController Resources map_resource_routes":{"type":"method","name":"map_resource_routes","children":[],"call":["map connect ","map named_route ","@set named_routes [] nil? ","@set named_routes [] ","route_name to_sym ","@set named_routes "," action_options_for ","resource has_action? ","  action_options_for _for "]}," ActionController Resources map_has_many_associations":{"type":"method","name":"map_has_many_associations","children":[],"call":[" resources ","options slice merge ","options [] ","resource nesting_name_prefix ","resource nesting_path_prefix ","options slice "," map_has_many_associations ","associations each ","options merge "]}," ActionController Resources Resource set_allowed_actions":{"type":"method","name":"set_allowed_actions","children":[],"call":[" options []= ","DEFAULT_ACTIONS  - "," Array map "," Array "," options ","DEFAULT_ACTIONS  & ","except == ","only == "," raise ","@options delete ","@allowed_actions []= ","@options values_at ","@options delete  == "]}," ActionController Resources Resource has_action?":{"type":"method","name":"has_action?","children":[],"call":["@options [] include? ","@options [] ","@options [] nil? ","DEFAULT_ACTIONS  include? ! ","DEFAULT_ACTIONS  include? "," action_allowed? "]}," ActionController Resources Resource shallow_name_prefix":{"type":"method","name":"shallow_name_prefix","children":[],"call":[" name_prefix ","@options [] ","@options [] try "]}," ActionController Resources Resource shallow_path_prefix":{"type":"method","name":"shallow_path_prefix","children":[],"call":[" path_prefix ","@options [] ","@options [] try "]}," ActionController Rescue rescue_action_without_handler":{"type":"method","name":"rescue_action_without_handler","children":[],"call":[" rescue_action_in_public "," rescue_action_locally "," local_request? "," consider_all_requests_local ","exception handle_response! "," response ","exception respond_to? "," erase_results "," performed? "," log_error "," logger "]}," ActionController AbstractRequest body_stream":{"type":"method","name":"body_stream","children":[],"call":[]}," ActionController AbstractRequest referrer":{"type":"method","name":"referrer","children":[],"call":["@env [] "]}," ActionController AbstractRequest remote_addr":{"type":"method","name":"remote_addr","children":[],"call":["@env [] "]}," ActionController AbstractRequest raw_host_with_port":{"type":"method","name":"raw_host_with_port","children":[],"call":[" env [] "," env ","forwarded split last ","forwarded split "," env []  split last "," env []  split "]}," ActionController AbstractRequest cache_format":{"type":"method","name":"cache_format","children":[],"call":[" parameters [] "," parameters "]}," ActionController AbstractRequest template_format":{"type":"method","name":"template_format","children":[],"call":[" xhr? "," parameters [] "," parameters "]}," ActionController AbstractRequest fresh?":{"type":"method","name":"fresh?","children":[],"call":[" etag_matches? ","response etag "," if_none_match "," not_modified? ","response last_modified "," if_modified_since "]}," ActionController AbstractRequest etag_matches?":{"type":"method","name":"etag_matches?","children":[],"call":[" if_none_match == "," if_none_match "]}," ActionController AbstractRequest not_modified?":{"type":"method","name":"not_modified?","children":[],"call":[" if_modified_since >= "," if_modified_since "]}," ActionController AbstractRequest if_none_match":{"type":"method","name":"if_none_match","children":[],"call":[" env [] "," env "]}," ActionController AbstractRequest if_modified_since":{"type":"method","name":"if_modified_since","children":[],"call":["Time  rfc2822 "," env [] "," env "]}," ActionController AbstractRequest relative_url_root=":{"type":"method","name":"relative_url_root=","children":[],"call":[]}," ActionController CGIWrapper stdinput":{"type":"method","name":"stdinput","children":[],"call":[]}," ActionController CGIWrapper env_table":{"type":"method","name":"env_table","children":[],"call":["@request env "]}," ActionController CGIWrapper args":{"type":"method","name":"args","children":[],"call":[]}," ActionController CGIWrapper query_string":{"type":"method","name":"query_string","children":[],"call":["@request query_string "]}," ActionController CGIWrapper cookies":{"type":"method","name":"cookies","children":[],"call":["@request cookies "]}," ActionController CGIWrapper params":{"type":"method","name":"params","children":[],"call":["@request params "]}," ActionController CGIWrapper initialize":{"type":"method","name":"initialize","children":[],"call":["request body "]}," ActionController RackResponse set_cookies!":{"type":"method","name":"set_cookies!","children":[],"call":[" headers []= ","(send\n  (send nil :headers) :[]\n  (str \"Set-Cookie\")) flatten compact ","(send\n  (send nil :headers) :[]\n  (str \"Set-Cookie\")) flatten "," headers [] "," headers ","cookies << ","c to_s ","@cgi output_cookies each ","@cgi output_cookies ","cookie to_s ","cookie each "," headers delete "," headers delete s << ","@cgi output_ headers delete s each ","@cgi output_ headers delete s "," headers delete  to_s "," headers delete  each "]}," ActionController RackResponse set_status!":{"type":"method","name":"set_status!","children":[],"call":[" status "]}," ActionController RackResponse set_content_length!":{"type":"method","name":"set_content_length!","children":[],"call":[" headers []= "," headers [] to_s "," headers [] "," headers "]}," ActionController RackResponse convert_content_type!":{"type":"method","name":"convert_content_type!","children":[],"call":["; charset= + "," headers delete "," headers "," headers [] "," headers []= "]}," ActionController RackResponse convert_expires!":{"type":"method","name":"convert_expires!","children":[],"call":[" headers []= "," headers delete "," headers "," headers [] "]}," ActionController RackResponse convert_language!":{"type":"method","name":"convert_language!","children":[],"call":[" headers []= "," headers delete "," headers "," headers [] "]}," ActionController RackResponse prepare!":{"type":"method","name":"prepare!","children":[],"call":[" set_status! "," convert_expires! "," convert_language! "]}," ActionController RackResponse empty?":{"type":"method","name":"empty?","children":[],"call":["@body empty? ","@block == "]}," ActionController RackResponse close":{"type":"method","name":"close","children":[],"call":["@body close ","@body respond_to? "]}," ActionController RackResponse write":{"type":"method","name":"write","children":[],"call":["@writer call ","str to_s "]}," ActionController RackResponse each":{"type":"method","name":"each","children":[],"call":["@block call ","@body each ","@body each_line ","@body is_a? ","@body call ","callback call "," lambda ","@body respond_to? "]}," ActionController RackResponse out":{"type":"method","name":"out","children":[],"call":[" headers to_hash "," headers "," status "," headers delete ","(int 204) include? "," status to_i "," set_cookies! "]}," ActionController RackResponse status":{"type":"method","name":"status","children":[],"call":[]}," ActionController RackResponse initialize":{"type":"method","name":"initialize","children":[],"call":["@body << "," lambda ","request cgi "]}," ActionController RackRequest session_options_with_string_keys":{"type":"method","name":"session_options_with_string_keys","children":[],"call":["DEFAULT_SESSION_OPTIONS  merge stringify_keys ","DEFAULT_SESSION_OPTIONS  merge "]}," ActionController RackRequest stale_session_check!":{"type":"method","name":"stale_session_check!","children":[],"call":[" raise ","const_error class ","const_error message ","1 constantize ","argument_error message =~ ","argument_error message "]}," ActionController RackRequest cookie_only?":{"type":"method","name":"cookie_only?","children":[],"call":[" session_options_with_string_keys [] "," session_options_with_string_keys "]}," ActionController RackRequest new_session":{"type":"method","name":"new_session","children":[],"call":["CGI Session  new "," session_options_with_string_keys merge "," session_options_with_string_keys ","CGI Session  new delete ","Hash  new ","@session_options == "]}," ActionController RackRequest reset_session":{"type":"method","name":"reset_session","children":[],"call":[" new_session ","@session delete ","@session is_a? "," new_session  delete "," new_session  is_a? "]}," ActionController RackRequest session":{"type":"method","name":"session","children":[],"call":["@session [] "," raise ","CGI Session  new "," session_options_with_string_keys ","Hash  new "," new_session "," session_options_with_string_keys [] "," query_parameters [] "," query_parameters "," cookie_only? "," stale_session_check! ","@session_options == ","CGI Session  new  [] ","Hash  new  [] "," new_session  [] ","CGI Session  new _options == ","Hash  new _options == "," new_session _options == "]}," ActionController RackRequest server_software":{"type":"method","name":"server_software","children":[],"call":["@env [] split first ","@env [] split ","@env [] "]}," ActionController RackRequest server_port":{"type":"method","name":"server_port","children":[],"call":["@env [] to_i ","@env [] "]}," ActionController RackRequest cookies":{"type":"method","name":"cookies","children":[],"call":["@env [] ","@env []= ","CGI Cookie  parse ","@env [] == "]}," ActionController RackRequest key?":{"type":"method","name":"key?","children":[],"call":["@env key? "]}," ActionController RackRequest body_stream":{"type":"method","name":"body_stream","children":[],"call":["@env [] "]}," ActionController RackRequest query_string":{"type":"method","name":"query_string","children":[],"call":["@env [] ","qs blank? ! ","qs blank? "]}," ActionController RackRequest initialize":{"type":"method","name":"initialize","children":[],"call":["CGIWrapper  new "]}," Mime Type browser_generated?":{"type":"method","name":"browser_generated?","children":[],"call":["@@browser_generated_types include? "," to_sym "]}," Mime Type unverifiable_types":{"type":"method","name":"unverifiable_types","children":[],"call":[]}," ActionController Layout default_template_format":{"type":"method","name":"default_template_format","children":[],"call":[" response template template_format "," response template "," response "]}," ActionController Http Headers env_name":{"type":"method","name":"env_name","children":[],"call":["header_name upcase gsub ","header_name upcase "]}," ActionController Filters AfterFilter after?":{"type":"method","name":"after?","children":[],"call":[]}," ActionController Filters BeforeFilter before?":{"type":"method","name":"before?","children":[],"call":[]}," ActionController Filters AroundFilter around?":{"type":"method","name":"around?","children":[],"call":[]}," ActionController Filters Filter convert_only_and_except_options_to_sets_of_strings":{"type":"method","name":"convert_only_and_except_options_to_sets_of_strings","children":[],"call":["opts []= "," Array map to_set "," Array map "," Array ","opts [] ","(sym :only) each "]}," ActionController Filters Filter update_options!":{"type":"method","name":"update_options!","children":[],"call":[" options update "," options "," convert_only_and_except_options_to_sets_of_strings ","other [] "]}," ActionController Filters Filter initialize":{"type":"method","name":"initialize","children":[],"call":[" update_options! "]}," ActionController Dispatcher checkin_connections":{"type":"method","name":"checkin_connections","children":[],"call":["ActiveRecord Base  clear_active_connections! "," test_request? "]}," ActionController Dispatcher test_request?":{"type":"method","name":"test_request?","children":[],"call":[]}," ActionController Dispatcher mark_as_test_request!":{"type":"method","name":"mark_as_test_request!","children":[],"call":[]}," ActionController Dispatcher call":{"type":"method","name":"call","children":[],"call":[" dispatch ","RackResponse  new ","RackRequest  new ","@app call "," build_middleware_stack ","Reloader  run "]}," ActionController Dispatcher dispatch_unlocked":{"type":"method","name":"dispatch_unlocked","children":[],"call":[" run_callbacks "," failsafe_rescue "," handle_request "]}," ActionController CgiRequest body_stream":{"type":"method","name":"body_stream","children":[],"call":["@cgi stdinput "]}," ActionController Caching Actions ActionCacheFilter content_for_layout":{"type":"method","name":"content_for_layout","children":[],"call":["controller response template instance_variable_get ","controller response template ","controller response ","controller response layout "]}," ActionController Caching Actions ActionCacheFilter cache_layout?":{"type":"method","name":"cache_layout?","children":[],"call":["@options [] == ","@options [] "]}," ActionController Benchmarking view_runtime":{"type":"method","name":"view_runtime","children":[],"call":["View: %.0f % ","@view_runtime * "]}," ActionController Base log_processing_for_parameters":{"type":"method","name":"log_processing_for_parameters","children":[],"call":[" logger info ","parameters inspect "," logger ","parameters empty? ","parameters except! "," params dup "," params "," filter_parameters "," respond_to? ","parameters except!  inspect "," params dup  inspect "," filter_parameters  inspect ","parameters except!  empty? "," params dup  empty? "," filter_parameters  empty? ","parameters except!  except! "," params dup  except! "," filter_parameters  except! "," filter_parameters except!  "," filter_ params dup  "," filter_ filter_parameters  "]}," ActionController Base log_processing_for_session_id":{"type":"method","name":"log_processing_for_session_id","children":[],"call":[" logger info ","@_session session_id "," logger ","@_session dbman is_a? ! ","@_session dbman is_a? ","@_session dbman ","@_session respond_to? "]}," ActionController Base log_processing_for_request_id":{"type":"method","name":"log_processing_for_request_id","children":[],"call":[" logger info "," logger ","request_id << "," request method to_s upcase "," request method to_s "," request method "," request "," request_origin "," params [] "," params "," action_name "," class name "," class "]}," ActionController Base fresh_when":{"type":"method","name":"fresh_when","children":[],"call":[" head "," request fresh? "," response "," request "," response last_modified= ","options [] "," response etag= ","options assert_valid_keys "," response headers []= ","cache_control join "," response headers ","cache_control << ","cache_control delete ","k strip "," response headers [] split map "," response headers [] split "," response headers [] "]}," ActionController Base stale?":{"type":"method","name":"stale?","children":[],"call":[" request fresh? ! "," request fresh? "," response "," request "," fresh_when "]}," ActionController Base redirect_to_full_url":{"type":"method","name":"redirect_to_full_url","children":[],"call":[" response redirect "," interpret_status "," response "," raise "," performed? "," logger info "," logger "," logger info? "]}," ActionController Base send_response":{"type":"method","name":"send_response","children":[],"call":[" response "," response prepare! "," component_request? "]}," ActionController Assertions ResponseAssertions normalize_argument_to_redirection":{"type":"method","name":"normalize_argument_to_redirection","children":[],"call":["@request protocol + + ","@request protocol + ","@request host_with_port ","@request protocol ","/ + ","after_routing first != ","after_routing first ","after_routing =~ ","@controller url_for ","(lvar :fragment) gsub "," raise ","@request headers [] ","@request headers ","ActiveSupport Deprecation  warn "," caller ","fragment !~ ","fragment =~ ","/ +  first != ","@controller url_for  first != ","/ +  first ","@controller url_for  first ","/ +  =~ ","@controller url_for  =~ "]}," ActionView TemplateHandlers Compilable compile":{"type":"method","name":"compile","children":[],"call":[" raise "," class name "," class "]}," ActionView TemplateHandlers Compilable ClassMethods call":{"type":"method","name":"call","children":[],"call":[" new compile "," new "]}," ActionView Helpers AssetTagHelper collect_asset_files":{"type":"method","name":"collect_asset_files","children":[],"call":["(send\n  (send\n    (const nil :Dir) :[]\n    (send\n      (const nil :File) :join\n      (splat\n        (send\n          (lvar :path) :compact)))) :collect) sort ","file [] sub ","file [] ","(send\n  (send\n    (send\n      (lvar :file) :size) :-\n    (send\n      (lvar :dir) :size)) :-\n  (int 1)) -@ ","file size - - ","file size - ","dir size ","file size ","Dir  [] collect ","Dir  [] ","File  join ","path compact ","path first ","(send\n  (send\n    (send\n      (lvar :file) :size) :-\n    (send\n      (lvar :path first ) :size)) :-\n  (int 1)) -@ ","path first  size "]}," ActionView Helpers AssetTagHelper asset_file_path":{"type":"method","name":"asset_file_path","children":[],"call":["File  join ","path split first ","path split "," config assets_dir "," config "]}," ActionView Helpers AssetTagHelper cache_asset_timestamps=":{"type":"method","name":"cache_asset_timestamps=","children":[],"call":[]}," ActionView Helpers AssetTagHelper cache_asset_timestamps":{"type":"method","name":"cache_asset_timestamps","children":[],"call":[]}," CookieStore secure_compare":{"type":"method","name":"secure_compare","children":[],"call":["result == ","a [] ^ ","b [] ","a [] ","a length - ","a length ","a length == ","b length ","a [] ord ^ ","b [] ord ","a [] ord ","b dup force_encoding ","b dup ","a dup force_encoding ","a dup ","a dup force_encoding  [] ^ ","b dup force_encoding  [] ","a dup force_encoding  [] ","a dup force_encoding  length - ","a dup force_encoding  length ","a dup force_encoding  length == ","b dup force_encoding  length ","a dup force_encoding  [] ord ^ ","b dup force_encoding  [] ord ","a dup force_encoding  [] ord ","b dup force_encoding  dup force_encoding ","b dup force_encoding  dup ","a dup force_encoding  dup force_encoding ","a dup force_encoding  dup "]}," ActionController Routing PathSegment default_regexp_chunk":{"type":"method","name":"default_regexp_chunk","children":[],"call":[]}," ActionController Routing DynamicSegment default_regexp_chunk":{"type":"method","name":"default_regexp_chunk","children":[],"call":["Routing SEPARATORS  join "]}," ActionController Routing DynamicSegment regexp_string":{"type":"method","name":"regexp_string","children":[],"call":[" regexp source "," regexp "," regexp to_s "," regexp_has_modifiers? "]}," ActionController Routing RouteSet NamedRouteCollection named_helper_module_eval":{"type":"method","name":"named_helper_module_eval","children":[],"call":["@module module_eval "]}," ActionView load_all!":{"type":"method","name":"load_all!","children":[],"call":[]}," ActionView TestCase _assigns":{"type":"method","name":"_assigns","children":[],"call":["hash []= "," instance_variable_get ","var [] to_sym ","var [] "," _instance_variables inject "," _instance_variables "]}," ActionView TestCase _instance_variables":{"type":"method","name":"_instance_variables","children":[],"call":[" instance_variables - "," instance_variables "]}," ActionView TestCase response_from_page_or_rjs":{"type":"method","name":"response_from_page_or_rjs","children":[],"call":["HTML Document  new root ","HTML Document  new "," rendered "," output_buffer "," rendered blank? "]}," ActionView TestCase _view":{"type":"method","name":"_view","children":[],"call":["view output_buffer= "," output_buffer ","view helpers include "," master_helper_module ","view helpers ","ActionView Base  new "," _assigns ","ActionController Base  view_paths ","view class send "," _helpers ","view class ","view singleton_class send ","@controller _router url_helpers ","@controller _router ","view singleton_class ","ActionView Base  new  output_buffer= ","ActionView Base  new  helpers include ","ActionView Base  new  helpers ","ActionController Base  ActionView Base  new _paths ","ActionView Base  new  class send ","ActionView Base  new  class ","ActionView Base  new  singleton_class send ","ActionView Base  new  singleton_class "]}," ActionView TestCase make_test_case_available_to_view!":{"type":"method","name":"make_test_case_available_to_view!","children":[],"call":[" private "," define_method "," master_helper_module module_eval "," master_helper_module "," _helpers module_eval "," _helpers "]}," ActionView TestCase include_helper_modules!":{"type":"method","name":"include_helper_modules!","children":[],"call":[" include "," master_helper_module "," helper "," helper_class "," _helpers "]}," ActionView TestCase helper_method":{"type":"method","name":"helper_method","children":[],"call":[" master_helper_module module_eval "," master_helper_module ","methods flatten each ","methods flatten "," _helpers module_eval "," _helpers "]}," ActionView TestCase protect_against_forgery?":{"type":"method","name":"protect_against_forgery?","children":[],"call":[]}," ActionView TestCase render":{"type":"method","name":"render","children":[],"call":["@rendered << "," _view render "," _view "]}," ActionView TestCase setup_with_controller":{"type":"method","name":"setup_with_controller","children":[],"call":[" make_test_case_available_to_view! "," class send "," class ","TestController  new ","ActiveSupport SafeBuffer  new "," html_safe "]}," ActionView TestCase TestController controller_path":{"type":"method","name":"controller_path","children":[],"call":[]}," ActionView TemplateHandlers registered_template_handler":{"type":"method","name":"registered_template_handler","children":[],"call":["@@template_handlers [] ","extension to_sym "]}," ActionView Template parse_extensions":{"type":"method","name":"parse_extensions","children":[],"call":["exts last ","exts join ","exts any? ","exts shift "," valid_locale? ","exts first ","exts pop "," valid_extension? ","extensions split ","extensions split  last ","extensions split  join ","extensions split  any? ","extensions split  shift ","extensions split  first ","extensions split  pop "]}," ActionView Template valid_locale?":{"type":"method","name":"valid_locale?","children":[],"call":["I18n  available_locales include? ","locale to_sym ","I18n  available_locales "]}," ActionView Template load!":{"type":"method","name":"load!","children":[],"call":[" freeze "]}," ActionView Template filename":{"type":"method","name":"filename","children":[],"call":[" template_path ","File  join "," load_path "]}," ActionView Template exempt_from_layout?":{"type":"method","name":"exempt_from_layout?","children":[],"call":[" path =~ "," path ","@@exempt_from_layout any? "]}," ActionView Template accessible_paths":{"type":"method","name":"accessible_paths","children":[],"call":["paths << "," template_path ","formats second "," path_without_format_and_extension ","formats first "," format split "," format "," multipart? "," path_without_extension "," path "," valid_extension? "," extension "," format split  second "," format split  first "]}," ActionView Template exempt_from_layout":{"type":"method","name":"exempt_from_layout","children":[],"call":[]}," ActionView Template EagerPath create_template":{"type":"method","name":"create_template","children":[],"call":["Template  new "," relative_path_for_template_file "]}," ActionView Template EagerPath templates_in_path":{"type":"method","name":"templates_in_path","children":[],"call":[" create_template ","File  directory? ","(send\n  (send\n    (const nil :Dir) :glob\n    (dstr\n      (begin\n        (ivar :@path))\n      (str \"/**/*/**\"))) :|\n  (send\n    (const nil :Dir) :glob\n    (dstr\n      (begin\n        (ivar :@path))\n      (str \"/**\")))) each ","Dir  glob | ","Dir  glob "]}," ActionView Template EagerPath []":{"type":"method","name":"[]","children":[],"call":["@paths [] "," load! "]}," ActionView Template EagerPath load!":{"type":"method","name":"load!","children":[],"call":["@paths freeze ","@paths []= ","template accessible_paths each ","template accessible_paths ","template load! "," templates_in_path "]}," ActionView Template EagerPath initialize":{"type":"method","name":"initialize","children":[],"call":[]}," ActionView Template Path relative_path_for_template_file":{"type":"method","name":"relative_path_for_template_file","children":[],"call":["full_file_path split last ","full_file_path split "]}," ActionView Template Path new_and_loaded":{"type":"method","name":"new_and_loaded","children":[],"call":[]}," ActionView Template Path load!":{"type":"method","name":"load!","children":[],"call":[]}," ActionView Template Path []":{"type":"method","name":"[]","children":[],"call":[]}," ActionView Template Path eql?":{"type":"method","name":"eql?","children":[],"call":[" to_str == ","path to_str "," to_str "]}," ActionView Template Path ==":{"type":"method","name":"==","children":[],"call":[" to_str == ","path to_str "," to_str "]}," ActionView Template Path to_str":{"type":"method","name":"to_str","children":[],"call":[" path to_str "," path "]}," ActionView Template Path to_s":{"type":"method","name":"to_s","children":[],"call":[" path to_s "," path "," path to_s sub ","Regexp  escape ","File  expand_path "]}," ActionView Template Path initialize":{"type":"method","name":"initialize","children":[],"call":["(if\n  (send\n    (lvar :path) :ends_with?\n    (const\n      (const nil :File) :SEPARATOR))\n  (send\n    (lvar :path) :to\n    (int -2))\n  (lvar :path)) freeze ","path to ","path ends_with? "," raise ","path is_a? "]}," ActionView Renderable method_name_without_locals":{"type":"method","name":"method_name_without_locals","children":[],"call":["(str \"_run\") compact join ","(str \"_run\") compact "," method_segment "," extension "]}," ActionView ReloadableTemplate undef_my_compiled_methods!":{"type":"method","name":"undef_my_compiled_methods!","children":[],"call":["ActionView Base CompiledTemplates  send ","ActionView Base CompiledTemplates  public_instance_methods grep each ","ActionView Base CompiledTemplates  public_instance_methods grep ","Regexp  escape "," method_name_without_locals ","ActionView Base CompiledTemplates  public_instance_methods "]}," ActionView ReloadableTemplate reset_cache_if_stale!":{"type":"method","name":"reset_cache_if_stale!","children":[],"call":[" mtime "," undef_my_compiled_methods! "," flush_cache "," stale? "]}," ActionView ReloadableTemplate stale?":{"type":"method","name":"stale?","children":[],"call":[" raise "," undef_my_compiled_methods! "," previously_last_modified < "," mtime "," previously_last_modified "," previously_last_modified nil? "]}," ActionView ReloadableTemplate mtime":{"type":"method","name":"mtime","children":[],"call":["File  mtime "," filename "]}," ActionView ReloadableTemplate initialize":{"type":"method","name":"initialize","children":[],"call":[" extend "]}," ActionView ReloadableTemplate Unfreezable freeze":{"type":"method","name":"freeze","children":[],"call":[]}," ActionView ReloadableTemplate ReloadablePath template_files_from_dir":{"type":"method","name":"template_files_from_dir","children":[],"call":["Dir  glob ","File  join "]}," ActionView ReloadableTemplate ReloadablePath templates_dir_from_path":{"type":"method","name":"templates_dir_from_path","children":[],"call":["File  join ","dirname == ","File  dirname ","File  dirname  == ","File  File  dirname  "]}," ActionView ReloadableTemplate ReloadablePath load_all_templates_from_dir":{"type":"method","name":"load_all_templates_from_dir","children":[],"call":[" register_template_from_file "," template_files_from_dir each "," template_files_from_dir ","@disk_cache [] "]}," ActionView ReloadableTemplate ReloadablePath unregister_template":{"type":"method","name":"unregister_template","children":[],"call":["@paths [] ","template accessible_paths each ","template accessible_paths ","@paths values uniq each ","@paths values uniq ","@paths values ","@paths delete ","@paths [] == "]}," ActionView ReloadableTemplate ReloadablePath register_template":{"type":"method","name":"register_template","children":[],"call":["@paths []= ","template accessible_paths each ","template accessible_paths "]}," ActionView ReloadableTemplate ReloadablePath register_template_from_file":{"type":"method","name":"register_template_from_file","children":[],"call":[" register_template ","ReloadableTemplate  new ","File  file? ","@paths [] ! ","@paths [] "," relative_path_for_template_file ","  relative_path_for_template_file _for_template_file "]}," ActionView ReloadableTemplate ReloadablePath []":{"type":"method","name":"[]","children":[],"call":["new_template reset_cache_if_stale! ","@paths [] "," load_all_templates_from_dir "," templates_dir_from_path "," [] "," unregister_template ","found_template reset_cache_if_stale! ","@paths []  reset_cache_if_stale! "]}," ActionView ReloadableTemplate ReloadablePath new_request!":{"type":"method","name":"new_request!","children":[],"call":[]}," ActionView ReloadableTemplate ReloadablePath initialize":{"type":"method","name":"initialize","children":[],"call":[" new_request! "]}," ActionView PathSet find_template":{"type":"method","name":"find_template","children":[],"call":[" raise ","MissingTemplate  new ","Template  new ","File  file? ","load_path [] ","format == ","I18n  default_locale ","I18n  locale "," each ","original_template_path sub ","original_template_path respond_to? ","original_template_path =~ ","original_template_path to_s =~ ","original_template_path to_s ","load_path find ","original_load_path [] _path sub ","original_load_path find _path sub ","original_original_template_path sub  sub ","original_load_path [] _path respond_to? ","original_load_path find _path respond_to? ","original_original_template_path sub  respond_to? ","original_load_path [] _path =~ ","original_load_path find _path =~ ","original_original_template_path sub  =~ ","original_load_path [] _path to_s =~ ","original_load_path find _path to_s =~ ","original_original_template_path sub  to_s =~ ","original_load_path [] _path to_s ","original_load_path find _path to_s ","original_original_template_path sub  to_s "]}," ActionView PathSet load!":{"type":"method","name":"load!","children":[],"call":[" each "]}," ActionView Helpers TranslationHelper html_safe_translation_keys":{"type":"method","name":"html_safe_translation_keys","children":[],"call":["translation html_safe ","translation respond_to? ","key =~ ","keys zip map ","keys zip "]}," ActionView Helpers TranslationHelper scope_keys_by_partial":{"type":"method","name":"scope_keys_by_partial","children":[],"call":[" template path_without_format_and_extension gsub + "," template path_without_format_and_extension gsub "," template path_without_format_and_extension "," template ","key first == ","key first ","key to_s ","Array  wrap map ","Array  wrap ","key to_s first == ","key to_s first ","key to_s  first == ","key to_s  first ","key to_s  to_s ","key to_s  to_s first == ","key to_s  to_s first "]}," ActionView Helpers TextHelper auto_linked?":{"type":"method","name":"auto_linked?","children":[],"call":["$' !~ ","AUTO_LINK_CRE  [] ","left rindex ","right =~ ","left =~ "]}," ActionView Helpers RawOutputHelper raw":{"type":"method","name":"raw","children":[],"call":["stringish to_s html_safe ","stringish to_s ","stringish to_s html_safe! "]}," ActionView Helpers FormBuilder grouped_collection_select":{"type":"method","name":"grouped_collection_select","children":[],"call":["@template grouped_collection_select ","@default_options merge "," objectify_options "]}," ActionView Helpers InstanceTag to_grouped_collection_select_tag":{"type":"method","name":"to_grouped_collection_select_tag","children":[],"call":[" content_tag "," add_options "," option_groups_from_collection_for_select "," value "," object "," add_default_name_and_id ","html_options stringify_keys "," select_content_tag ","  value  ","html_options stringify_keys  stringify_keys "]}," ActionView Helpers FormOptionsHelper extract_values_from_collection":{"type":"method","name":"extract_values_from_collection","children":[],"call":["(send\n  (lvar :collection) :map) compact ","element send ","selected call ","collection map ","selected is_a? "]}," ActionView Helpers FormOptionsHelper extract_selected_and_disabled":{"type":"method","name":"extract_selected_and_disabled","children":[],"call":["selected [] ","selected is_a? ","options [] ","selected extract_options! symbolize_keys ","selected extract_options! ","Array  wrap ","options include? ","options fetch ","Array  wrap  [] ","Array  wrap  is_a? ","selected extract_options! symbolize_keys  [] ","selected extract_selected extract_options! symbolize_keys ! symbolize_keys ","Array  wrap  extract_options! symbolize_keys ","selected extract_selected extract_options! symbolize_keys ! ","Array  wrap  extract_options! ","selected extract_options! symbolize_keys  include? ","selected extract_options! symbolize_keys  fetch "]}," ActionView Helpers FormOptionsHelper grouped_options_for_select":{"type":"method","name":"grouped_options_for_select","children":[],"call":["body << "," content_tag ","group [] "," options_for_select ","grouped_options each ","grouped_options sort ","grouped_options is_a? ","body html_safe ","body safe_concat "," prompt_text "," html_safe ","ActiveSupport Deprecation  warn ","prompt inspect ","options [] ","options is_a? "," html_safe  << ","grouped_options sort  each ","grouped_options sort  sort ","grouped_options sort  is_a? "," html_safe  html_safe "," html_safe  safe_concat "," options [] _text ","options []  inspect "]}," ActionView Helpers FormOptionsHelper grouped_collection_select":{"type":"method","name":"grouped_collection_select","children":[],"call":["InstanceTag  new to_grouped_collection_select_tag ","InstanceTag  new ","options delete ","Tags GroupedCollectionSelect  new render ","Tags GroupedCollectionSelect  new "]}," ActionView Helpers FormBuilder nested_child_index":{"type":"method","name":"nested_child_index","children":[],"call":["@nested_child_index [] "]}," ActionView Helpers FormBuilder fields_for_nested_model":{"type":"method","name":"fields_for_nested_model","children":[],"call":["@template concat ","builder hidden_field ","builder emitted_hidden_id? ","block call ","@template fields_for ","object new_record? ","object persisted? ","object to_model ","object respond_to? ","options []= ","options fetch "," options fetch "," options "," convert_to_model ","output concat ","f hidden_field ","f emitted_hidden_id? ! ","f emitted_hidden_id? ","@template capture ","fields_options fetch ","object to_model  new_record? "," convert_to_model  new_record? ","object to_model  persisted? "," convert_to_model  persisted? ","object to_model  to_model "," convert_to_model  to_model ","object to_model  respond_to? "," convert_to_model  respond_to? ","@template capture  concat "]}," ActionView Helpers FormBuilder fields_for_with_nested_attributes":{"type":"method","name":"fields_for_with_nested_attributes","children":[],"call":[" fields_for_nested_model ","(send\n  (lvar :association) :map) join "," nested_child_index ","association map ","args last [] ","args last ","args last is_a? ","association is_a? ","@object send ","association is_a? ! ","@object send is_a? ","association respond_to? ","args first "," object_name ","(send\n  (lvar :children) :map) join ","children map ","args first respond_to? ","output << ","association each ","ActiveSupport SafeBuffer  new ","options [] ","association to_model ","args shift ","args extract_options! ","args first to_model ","association respond_to? ! "," convert_to_model ","options []= ","@object send respond_to? ","(send\n  (lvar :@object send ) :map) join ","(send\n  (lvar :args first ) :map) join ","(send\n  (lvar :association to_model ) :map) join ","(send\n  (lvar :args shift ) :map) join ","(send\n  (lvar :args first to_model ) :map) join ","(send\n  (lvar : convert_to_model ) :map) join ","@object send  map ","args first  map ","association to_model  map ","args shift  map ","args first to_model  map "," convert_to_model  map ","@object send  is_a? ","args first  is_a? ","association to_model  is_a? ","args shift  is_a? ","args first to_model  is_a? "," convert_to_model  is_a? ","@object send  is_a? ! ","args first  is_a? ! ","association to_model  is_a? ! ","args shift  is_a? ! ","args first to_model  is_a? ! "," convert_to_model  is_a? ! ","@object send  respond_to? ","args first  respond_to? ","association to_model  respond_to? ","args shift  respond_to? ","args first to_model  respond_to? "," convert_to_model  respond_to? ","ActiveSupport SafeBuffer  new  << ","@object send  each ","args first  each ","association to_model  each ","args shift  each ","args first to_model  each "," convert_to_model  each ","args extract_options!  [] ","@object send  to_model ","args first  to_model ","association to_model  to_model ","args shift  to_model ","args first to_model  to_model "," convert_to_model  to_model ","args extract_args extract_options! ! ","@object send  respond_to? ! ","args first  respond_to? ! ","association to_model  respond_to? ! ","args shift  respond_to? ! ","args first to_model  respond_to? ! "," convert_to_model  respond_to? ! ","args extract_options!  []= "]}," ActionView Helpers FormBuilder nested_attributes_association?":{"type":"method","name":"nested_attributes_association?","children":[],"call":["@object respond_to? "]}," ActionView Helpers FormBuilder emitted_hidden_id?":{"type":"method","name":"emitted_hidden_id?","children":[],"call":[]}," ActionView Helpers FormBuilder hidden_field":{"type":"method","name":"hidden_field","children":[],"call":["@template hidden_field "," objectify_options ","method == "]}," ActionView Helpers InstanceTag add_default_name_and_id_for_value":{"type":"method","name":"add_default_name_and_id_for_value","children":[],"call":["options [] "," add_default_name_and_id ","tag_value to_s gsub gsub downcase ","tag_value to_s gsub gsub ","tag_value to_s gsub ","tag_value to_s ","tag_value nil? ","options [] present? ","specified_id blank? ","options []  blank? "]}," ActionView Helpers DateTimeSelector prompt_option_tag":{"type":"method","name":"prompt_option_tag","children":[],"call":[" content_tag ","I18n  translate ","@options [] ","(send\n  (str \"datetime.prompts.\") :+\n  (send\n    (lvar :type) :to_s)) to_sym ","datetime.prompts. + ","type to_s ","default_options merge [] ","type to_sym ","default_options merge ","default_options merge! [] ","default_options merge! ","(send\n  (str \"datetime.I18n  translate s.\") :+\n  (send\n    (lvar :type) :to_s)) to_sym ","(send\n  (str \"datetime.default_options merge [] s.\") :+\n  (send\n    (lvar :type) :to_s)) to_sym ","datetime.I18n  translate s. + ","datetime.default_options merge [] s. + "]}," ActionView Base with_template":{"type":"method","name":"with_template","children":[],"call":[" template= "," template "]}," ActionView Base template=":{"type":"method","name":"template=","children":[],"call":[]}," ActionView Base cache_template_loading?":{"type":"method","name":"cache_template_loading?","children":[],"call":[]}," ActionView Base xss_safe?":{"type":"method","name":"xss_safe?","children":[],"call":[]}," ActionController load_all!":{"type":"method","name":"load_all!","children":[],"call":[]}," ActionController UploadedFile extended":{"type":"method","name":"extended","children":[],"call":[]}," ActionController ProcessWithTest set_test_assigns":{"type":"method","name":"set_test_assigns","children":[],"call":[" response template assigns []= "," response template assigns "," response template "," response ","@assigns []= "," instance_variable_get ","var [] ","(send\n  (send nil :instance_variable_names) :-\n  (send\n    (send\n      (self) :class) :protected_instance_variables)) each "," instance_variable_names - "," class protected_instance_variables "," class "," instance_variable_names "]}," ActionController ProcessWithTest process_with_test":{"type":"method","name":"process_with_test","children":[],"call":[" set_test_assigns "," process tap "," process "]}," ActionController ProcessWithTest included":{"type":"method","name":"included","children":[],"call":[]}," ActionController TestSession replace_attributes":{"type":"method","name":"replace_attributes","children":[],"call":[" replace ","attributes stringify_keys "]}," ActionController TestSession reset_session_id":{"type":"method","name":"reset_session_id","children":[],"call":[]}," ActionController TestSession reset":{"type":"method","name":"reset","children":[],"call":[" replace_attributes "," reset_session_id "]}," ActionController TestResponseBehavior rendered":{"type":"method","name":"rendered","children":[],"call":[" template instance_variable_get "," template "]}," ActionController TestResponseBehavior client_error?":{"type":"method","name":"client_error?","children":[],"call":["(irange\n  (int 400)\n  (int 499)) include? "," response_code "]}," ActionController TestRequest generate_sid":{"type":"method","name":"generate_sid","children":[],"call":["(str \"%0\") % "," rand ","2 ** - ","2 ** ","sidbits / "]}," ActionController TestRequest user_agent=":{"type":"method","name":"user_agent=","children":[],"call":["@env []= "]}," ActionController TestRequest request_method=":{"type":"method","name":"request_method=","children":[],"call":[]}," ActionController TestRequest new":{"type":"method","name":"new","children":[],"call":[]}," ActionController TestCase RaiseActionExceptions included":{"type":"method","name":"included","children":[],"call":[]}," ActionController TestCase Assertions clean_backtrace":{"type":"method","name":"clean_backtrace","children":[],"call":[" raise ","File  expand_path =~ ","File  expand_path ","error backtrace reject! ","error backtrace ","Regexp  new ","File  dirname "]}," ActionController TestCase initialize":{"type":"method","name":"initialize","children":[],"call":[]}," ActionController StringCoercion call":{"type":"method","name":"call","children":[],"call":["UglyBody  new ","@app call "]}," ActionController StringCoercion initialize":{"type":"method","name":"initialize","children":[],"call":[]}," ActionController StringCoercion UglyBody method_missing":{"type":"method","name":"method_missing","children":[],"call":["@body __send__ "]}," ActionController StringCoercion UglyBody each":{"type":"method","name":"each","children":[],"call":["part to_s ","@body each "]}," ActionController StringCoercion UglyBody initialize":{"type":"method","name":"initialize","children":[],"call":[]}," ActionController SessionManagement ClassMethods session=":{"type":"method","name":"session=","children":[],"call":[" session_options merge! "," session_options "," session_store= ","options delete "]}," ActionController Session MemCacheStore destroy":{"type":"method","name":"destroy","children":[],"call":["@pool delete "," current_session_id "]}," ActionController Session MemCacheStore set_session":{"type":"method","name":"set_session","children":[],"call":["@pool set ","options [] ","env [] ","env []  [] "]}," ActionController Session MemCacheStore get_session":{"type":"method","name":"get_session","children":[],"call":["@pool get "," generate_sid "]}," ActionController Session MemCacheStore initialize":{"type":"method","name":"initialize","children":[],"call":["Mutex  new "," raise ","s alive? ","@pool servers any? ","@pool servers ","MemCache  new ","@default_options [] ","options [] ","(pair\n  (sym :namespace)\n  (str \"rack:session\")) merge ","(pair\n  (sym :namespace)\n  (str \"rack:session\")) merge  [] "]}," ActionController Session CookieStore requires_session_id?":{"type":"method","name":"requires_session_id?","children":[],"call":["data key? ! ","data key? ","data respond_to? "]}," ActionController Session CookieStore inject_persistent_session_id":{"type":"method","name":"inject_persistent_session_id","children":[],"call":[" generate_sid "," requires_session_id? "]}," ActionController Session CookieStore persistent_session_id!":{"type":"method","name":"persistent_session_id!","children":[],"call":["(or-asgn\n  (lvasgn :data)\n  (hash)) merge! "," inject_persistent_session_id "]}," ActionController Session CookieStore destroy":{"type":"method","name":"destroy","children":[],"call":[]}," ActionController Session CookieStore generate_sid":{"type":"method","name":"generate_sid","children":[],"call":["ActiveSupport SecureRandom  hex "]}," ActionController Session CookieStore verifier_for":{"type":"method","name":"verifier_for","children":[],"call":["ActiveSupport MessageVerifier  new ","secret call ","secret respond_to? "]}," ActionController Session CookieStore ensure_secret_secure":{"type":"method","name":"ensure_secret_secure","children":[],"call":[" raise ","Secret should be something secure,  + + + ","Secret should be something secure,  + + ","Secret should be something secure,  + ","ActiveSupport SecureRandom  hex ","secret length < ","secret length ","A secret is required to generate an  + + + + + ","A secret is required to generate an  + + + + ","A secret is required to generate an  + + + ","A secret is required to generate an  + + ","A secret is required to generate an  + ","secret blank? ","secret is_a? "]}," ActionController Session CookieStore ensure_session_key":{"type":"method","name":"ensure_session_key","children":[],"call":[" raise ","A key is required to write a  + + + + ","A key is required to write a  + + + ","A key is required to write a  + + ","A key is required to write a  + ","key blank? "]}," ActionController Session CookieStore unmarshal":{"type":"method","name":"unmarshal","children":[],"call":["@verifier verify "," persistent_session_id! "]}," ActionController Session CookieStore marshal":{"type":"method","name":"marshal","children":[],"call":["@verifier generate "," persistent_session_id! "]}," ActionController Session CookieStore unpacked_cookie_data":{"type":"method","name":"unpacked_cookie_data","children":[],"call":[" unmarshal ","request cookies [] ","request cookies ","Rack Request  new "," stale_session_check! ","env [] ","Rack Request  new  cookies [] ","Rack Request  new  cookies "]}," ActionController Session CookieStore exists?":{"type":"method","name":"exists?","children":[],"call":[" current_session_id present? "," current_session_id "]}," ActionController Session CookieStore current_session_id":{"type":"method","name":"current_session_id","children":[],"call":["env [] [] ","env [] "]}," ActionController Session CookieStore extract_session_id":{"type":"method","name":"extract_session_id","children":[],"call":["data [] "," persistent_session_id! ","data empty? "," unpacked_cookie_data "," unpacked_cookie_data  [] "," unpacked_cookie_data  empty? "," unpacked_cookie_ unpacked_cookie_data  "]}," ActionController Session CookieStore load_session":{"type":"method","name":"load_session","children":[],"call":["data [] "," persistent_session_id! "," unpacked_cookie_data "," unmarshal ","request cookies [] ","request cookies ","Rack Request  new "," persistent_session_id!  [] "," unpacked_cookie_data  [] "," unpacked_cookie_ persistent_session_id!  "," unpacked_cookie_ unpacked_cookie_data  ","Rack Request  new  cookies [] ","Rack Request  new  cookies "]}," ActionController Session CookieStore build_cookie":{"type":"method","name":"build_cookie","children":[],"call":["Rack Utils  escape + + + ","Rack Utils  escape + + ","(send\n  (lvar :value) :map) join ","Rack Utils  escape ","value map ","Rack Utils  escape + ","Array  === ","value [] ","; expires= + ","value [] clone gmtime strftime ","value [] clone gmtime ","value [] clone ","; path= + ","; domain= + ","(send\n  (lvar :value [] ) :map) join ","value []  map ","value []  [] ","; ; expires= + = + ","value []  [] clone gmtime strftime ","value []  [] clone gmtime ","value []  [] clone ","; ; path= + = + ","; ; domain= + = + "]}," ActionController Session CookieStore prepare!":{"type":"method","name":"prepare!","children":[],"call":["env []= ","AbstractStore OptionsHash  new ","AbstractStore SessionHash  new "]}," ActionController Session CookieStore call":{"type":"method","name":"call","children":[],"call":["headers [] << ","headers [] ","headers []= ","headers [] blank? "," build_cookie ","cookie merge ","cookie []= ","Time  now + ","options [] ","Time  now ","options [] nil? ","Hash  new "," raise ","session_data size > ","session_data size "," marshal ","session_data to_hash "," persistent_session_id! ","session_data send ","session_data loaded? ! ","session_data loaded? ","session_data is_a? ","session_data is_a? ! ","(and\n  (send\n    (lvar :options) :[]\n    (sym :secure))\n  (send\n    (send\n      (lvar :request) :ssl?) :!)) ! ","request ssl? ! ","request ssl? ","ActionController Request  new ","env [] ","@app call "," prepare! ","Rack Utils  set_cookie_header! ","session_data send ! ","env []= ","@default_options dup ","AbstractStore SessionHash  new "," build_ build_cookie  "," build_Hash  new  "," build_cookie  merge ","Hash  new  merge "," build_cookie  []= ","Hash  new  []= ","env []  [] ","env []  [] nil? "," marshal  size > ","env []  size > "," marshal  size ","env []  size "," marshal  to_hash ","env []  to_hash "," marshal  send ","env []  send "," marshal  loaded? ! ","env []  loaded? ! "," marshal  loaded? ","env []  loaded? "," marshal  is_a? ","env []  is_a? "," marshal  is_a? ! ","env []  is_a? ! ","(and\n  (send\n    (lvar :options) :[]\n    (sym :secure))\n  (send\n    (send\n      (lvar :ActionController Request  new ) :ssl?) :!)) ! ","(and\n  (send\n    (lvar :env [] ) :[]\n    (sym :secure))\n  (send\n    (send\n      (lvar :request) :ssl?) :!)) ! ","ActionController Request  new  ssl? ! ","ActionController Request  new  ssl? ","Rack Utils  set_ build_cookie _header! ","Rack Utils  set_Hash  new _header! "," marshal  send ! ","env []  send ! ","@default_env []  dup "]}," ActionController Session CookieStore initialize":{"type":"method","name":"initialize","children":[],"call":[" freeze ","DEFAULT_OPTIONS  merge freeze ","DEFAULT_OPTIONS  merge "," verifier_for ","options delete ","options delete freeze "," ensure_secret_secure ","options [] "," ensure_session_key ","options []= ","ActiveSupport Deprecation  warn "," caller ","Giving :session_http_only to SessionStore is deprecated,  << ","options has_key? ","Giving :session_key to SessionStore is deprecated,  << ","Giving :session_path to SessionStore is deprecated,  << ","options symbolize_keys ","options symbolize_keys  delete ","options symbolize_keys  delete freeze ","options symbolize_keys  [] ","options symbolize_keys  []= ","options symbolize_keys  has_key? ","options symbolize_keys  symbolize_keys "]}," ActionController Session AbstractStore SessionUtils stale_session_check!":{"type":"method","name":"stale_session_check!","children":[],"call":[" raise ","1 constantize ","argument_error message =~ ","argument_error message "]}," ActionController Session AbstractStore destroy":{"type":"method","name":"destroy","children":[],"call":[" raise "]}," ActionController Session AbstractStore set_session":{"type":"method","name":"set_session","children":[],"call":[" raise "]}," ActionController Session AbstractStore get_session":{"type":"method","name":"get_session","children":[],"call":[" raise "]}," ActionController Session AbstractStore exists?":{"type":"method","name":"exists?","children":[],"call":[" current_session_id present? "," current_session_id "]}," ActionController Session AbstractStore current_session_id":{"type":"method","name":"current_session_id","children":[],"call":["env [] [] ","env [] "]}," ActionController Session AbstractStore extract_session_id":{"type":"method","name":"extract_session_id","children":[],"call":["request params [] ","request params ","request cookies [] ","request cookies ","Rack Request  new "," stale_session_check! ","Rack Request  new  params [] ","Rack Request  new  params ","Rack Request  new  cookies [] ","Rack Request  new  cookies "]}," ActionController Session AbstractStore load_session":{"type":"method","name":"load_session","children":[],"call":[" get_session "," current_session_id "," stale_session_check! ","request params [] ","request params ","request cookies [] ","request cookies ","Rack Request  new ","Rack Request  new  params [] ","Rack Request  new  params ","Rack Request  new  cookies [] ","Rack Request  new  cookies "]}," ActionController Session AbstractStore generate_sid":{"type":"method","name":"generate_sid","children":[],"call":["ActiveSupport SecureRandom  hex "]}," ActionController Session AbstractStore prepare!":{"type":"method","name":"prepare!","children":[],"call":["env []= ","OptionsHash  new ","SessionHash  new "]}," ActionController Session AbstractStore call":{"type":"method","name":"call","children":[],"call":["headers [] << ","headers [] ","headers []= ","headers [] blank? ","response [] ","cookie << ","options [] ","expiry httpdate ","Time  now + ","Time  now ","Rack Utils  escape + + ","Rack Utils  escape ","Rack Utils  escape + ","request_cookies [] != ","request_cookies [] ","request_cookies nil? ","env [] "," set_session ","session_data to_hash "," generate_sid ","session_data send ","session_data loaded? ! ","session_data loaded? ","session_data is_a? ","request ssl? ! ","request ssl? ","ActionController Request  new ","session_data is_a? ! ","@app call "," prepare! ","Rack Utils  set_cookie_header! ","cookie merge ","cookie []= ","session_data send ! ","env []= ","@default_options dup ","SessionHash  new ","env [] [] != ","env [] [] ","response []  [] << ","response []  [] ","response []  []= ","response []  [] blank? ","@app call  [] ","Rack Utils  escape + +  << ","env []  [] ","Time  now +  httpdate ","request_Rack Utils  escape + + s [] != ","env []  [] != ","ActionController Request  new _cookies [] != ","request_Rack Utils  escape + + s [] ","ActionController Request  new _cookies [] ","request_Rack Utils  escape + + s nil? ","env []  nil? ","ActionController Request  new _cookies nil? "," set_SessionHash  new  ","env []  to_hash ","SessionHash  new _data to_hash ","env []  send ","SessionHash  new _data send ","env []  loaded? ! ","SessionHash  new _data loaded? ! ","env []  loaded? ","SessionHash  new _data loaded? ","env []  is_a? ","SessionHash  new _data is_a? ","ActionController Request  new  ssl? ! ","ActionController Request  new  ssl? ","env []  is_a? ! ","SessionHash  new _data is_a? ! ","Rack Utils  set_Rack Utils  escape + + _header! ","Rack Utils  escape + +  merge ","Rack Utils  escape + +  []= ","env []  send ! ","SessionHash  new _data send ! ","@default_env []  dup "]}," ActionController Session AbstractStore initialize":{"type":"method","name":"initialize","children":[],"call":["@default_options [] ","DEFAULT_OPTIONS  merge ","options []= ","options delete ","ActiveSupport Deprecation  warn "," caller ","Giving :session_http_only to SessionStore is deprecated,  << ","options has_key? ","Giving :session_key to SessionStore is deprecated,  << ","Giving :session_path to SessionStore is deprecated,  << ","options symbolize_keys ","DEFAULT_OPTIONS  merge  [] ","@default_options symbolize_keys  [] ","options symbolize_keys  []= ","options symbolize_keys  delete ","options symbolize_keys  has_key? ","options symbolize_keys  symbolize_keys "]}," ActionController Session AbstractStore SessionHash load!":{"type":"method","name":"load!","children":[],"call":[" replace ","@env [] []= ","@env [] ","@by send ","(or-asgn\n  (send\n    (ivar :@env) :[]\n    (const nil :ENV_SESSION_OPTIONS_KEY))\n  (hash)) []= "," stale_session_check! "]}," ActionController Session AbstractStore SessionHash load_for_write!":{"type":"method","name":"load_for_write!","children":[],"call":[" load! "," loaded? "]}," ActionController Session AbstractStore SessionHash load_for_read!":{"type":"method","name":"load_for_read!","children":[],"call":[" load! "," exists? "," loaded? ! "," loaded? "]}," ActionController Session AbstractStore SessionHash destroy":{"type":"method","name":"destroy","children":[],"call":["@env [] []= ","@env [] ","@by send "," clear "]}," ActionController Session AbstractStore SessionHash loaded?":{"type":"method","name":"loaded?","children":[],"call":[]}," ActionController Session AbstractStore SessionHash exists?":{"type":"method","name":"exists?","children":[],"call":["@by send "," instance_variable_defined? "]}," ActionController Session AbstractStore SessionHash inspect":{"type":"method","name":"inspect","children":[],"call":[" load_for_read! "," load! "]}," ActionController Session AbstractStore SessionHash data":{"type":"method","name":"data","children":[],"call":[" to_hash ","ActiveSupport Deprecation  warn "," caller ","ActionController::Session::AbstractStore::SessionHash#data  + "]}," ActionController Session AbstractStore SessionHash delete":{"type":"method","name":"delete","children":[],"call":[" load_for_write! "]}," ActionController Session AbstractStore SessionHash update":{"type":"method","name":"update","children":[],"call":[" load_for_write! "]}," ActionController Session AbstractStore SessionHash to_hash":{"type":"method","name":"to_hash","children":[],"call":["v nil? ","h delete_if "," replace "," load_for_read! "," replace  delete_if "]}," ActionController Session AbstractStore SessionHash clear":{"type":"method","name":"clear","children":[],"call":[" load_for_write! "]}," ActionController Session AbstractStore SessionHash []=":{"type":"method","name":"[]=","children":[],"call":[" load_for_write! "," load! "]}," ActionController Session AbstractStore SessionHash has_key?":{"type":"method","name":"has_key?","children":[],"call":[" load_for_read! "]}," ActionController Session AbstractStore SessionHash []":{"type":"method","name":"[]","children":[],"call":[" load_for_read! "," load! "]}," ActionController Session AbstractStore SessionHash session_id":{"type":"method","name":"session_id","children":[],"call":["@env [] [] ","@env [] ","ActiveSupport Deprecation  warn "," caller ","ActionController::Session::AbstractStore::SessionHash#session_id  + "]}," ActionController Session AbstractStore SessionHash initialize":{"type":"method","name":"initialize","children":[],"call":[]}," ActionController Session AbstractStore OptionsHash load_session_id!":{"type":"method","name":"load_session_id!","children":[],"call":[" []= ","@by send "]}," ActionController Session AbstractStore OptionsHash has_session_id?":{"type":"method","name":"has_session_id?","children":[],"call":[]}," ActionController Session AbstractStore OptionsHash []":{"type":"method","name":"[]","children":[],"call":[" load_session_id! "," has_session_id? ","key == "]}," ActionController Session AbstractStore OptionsHash initialize":{"type":"method","name":"initialize","children":[],"call":[" merge! "]}," ActionController Routing OptionalFormatSegment match_extraction":{"type":"method","name":"match_extraction","children":[],"call":[" key "]}," ActionController Routing OptionalFormatSegment extract_value":{"type":"method","name":"extract_value","children":[],"call":[" key "," local_name "]}," ActionController Routing OptionalFormatSegment to_s":{"type":"method","name":"to_s","children":[],"call":[]}," ActionController Routing OptionalFormatSegment regexp_chunk":{"type":"method","name":"regexp_chunk","children":[],"call":[]}," ActionController Routing OptionalFormatSegment interpolation_chunk":{"type":"method","name":"interpolation_chunk","children":[],"call":[". + "]}," ActionController Routing OptionalFormatSegment initialize":{"type":"method","name":"initialize","children":[],"call":["(pair\n  (sym :optional)\n  (true)) merge "]}," ActionController Routing RouteSet deprecated_routes_for_controller_and_action_and_keys":{"type":"method","name":"deprecated_routes_for_controller_and_action_and_keys","children":[],"call":["(send\n  (lvar :keys) :-\n  (send\n    (lvar :route) :significant_keys)) length ","keys - ","route significant_keys ","selected sort_by ","route matches_controller_and_action? "," routes select "," routes "]}," ActionController Routing RouteSet call":{"type":"method","name":"call","children":[],"call":["app call to_a ","app call ","Routing Routes  recognize ","Request  new ","Routing Routes  recognize  call to_a ","Routing Routes  recognize  call "]}," ActionController Routing RouteSet routes_changed_at":{"type":"method","name":"routes_changed_at","children":[],"call":["config_changed_at > ","routes_changed_at nil? ","File  stat mtime ","File  stat "," configuration_files each "," configuration_files ","File  stat mtime  > "]}," ActionController Routing RouteSet configuration_file":{"type":"method","name":"configuration_file","children":[],"call":[" configuration_files "]}," ActionController Routing RouteSet configuration_file=":{"type":"method","name":"configuration_file=","children":[],"call":[" add_configuration_file "]}," ActionController Routing RouteSet add_configuration_file":{"type":"method","name":"add_configuration_file","children":[],"call":[" configuration_files << "," configuration_files "]}," ActionController Routing Route required_segment_keys":{"type":"method","name":"required_segment_keys","children":[],"call":["(send\n  (lvar :required_segments) :collect) compact ","seg key ","seg respond_to? ","required_segments collect ","seg is_a? ","seg is_a? ! ","seg optional? ! ","seg optional? "," segments select "," segments "]}," ActionController Response convert_cookies!":{"type":"method","name":"convert_cookies!","children":[],"call":[" headers []= "," headers ","cookies empty? "," Array compact "," Array "," headers [] "," Array compact  empty? "]}," ActionController Response convert_language!":{"type":"method","name":"convert_language!","children":[],"call":[" headers []= "," headers delete "," headers "," headers [] "]}," ActionController Response set_content_length!":{"type":"method","name":"set_content_length!","children":[],"call":[" headers []= ","(if\n  (send\n    (send nil :body) :respond_to?\n    (sym :bytesize))\n  (send\n    (send nil :body) :bytesize)\n  (send\n    (send nil :body) :size)) to_s "," body size "," body "," body bytesize "," body respond_to? "," headers "," status to_s [] != "," status to_s [] "," status to_s "," status "," status ! "," body respond_to? ! ","length to_s "," headers [] "," headers delete "," status to_s [] == "," headers []  to_s "]}," ActionController Response convert_content_type!":{"type":"method","name":"convert_content_type!","children":[],"call":["; charset= + "," headers delete "," headers "," headers [] "]}," ActionController Response set_conditional_cache_control!":{"type":"method","name":"set_conditional_cache_control!","children":[],"call":[" headers []= "," headers "," headers [] == ","DEFAULT_HEADERS  [] "," headers [] "]}," ActionController Response nonempty_ok_response?":{"type":"method","name":"nonempty_ok_response?","children":[],"call":[" body blank? ! "," body blank? "," body "," body is_a? "," status to_s [] == "," status to_s [] "," status to_s "," status "," status ! "," body empty? ! "," body empty? "]}," ActionController Response handle_conditional_get!":{"type":"method","name":"handle_conditional_get!","children":[],"call":[" set_conditional_cache_control! "," body= "," status= "," request etag_matches? "," etag "," request "," etag= "," body "," nonempty_ok_response? "," last_modified? "," etag? "]}," ActionController Response set_cookie":{"type":"method","name":"set_cookie","children":[],"call":["value delete ","value [] ","ActiveSupport Deprecation  warn "," caller ","The :http_only option in ActionController::Response#set_cookie  + ","value has_key? "]}," ActionController Response flush":{"type":"method","name":"flush","children":[],"call":["ActiveSupport Deprecation  warn "," caller ","Calling output.flush is no longer needed for streaming output  + "]}," ActionController Response write":{"type":"method","name":"write","children":[],"call":["@writer call ","str to_s "]}," ActionController Response each":{"type":"method","name":"each","children":[],"call":["@block call ","@body each ","@body respond_to? ","@body call ","callback call "," lambda ","@body each_line ","@body is_a? "]}," ActionController Response prepare!":{"type":"method","name":"prepare!","children":[],"call":[" convert_cookies! "," convert_language! "," convert_content_type! "," set_content_length! "," handle_conditional_get! "," assign_default_content_type_and_charset! "]}," ActionController Response assign_default_content_type_and_charset!":{"type":"method","name":"assign_default_content_type_and_charset!","children":[],"call":[" default_charset "," charset "," sending_file? "," content_type "]}," ActionController Response sending_file?":{"type":"method","name":"sending_file?","children":[],"call":[" headers [] == "," headers [] "," headers "]}," ActionController Response redirect":{"type":"method","name":"redirect","children":[],"call":[" body= ","CGI  escapeHTML "," location= ","url gsub "," status= "]}," ActionController Response etag=":{"type":"method","name":"etag=","children":[],"call":[" headers []= ","Digest MD5  hexdigest ","ActiveSupport Cache  expand_cache_key "," headers "," headers delete ","etag blank? "]}," ActionController Response etag?":{"type":"method","name":"etag?","children":[],"call":[" headers include? "," headers "]}," ActionController Response etag":{"type":"method","name":"etag","children":[],"call":[" headers [] "," headers "]}," ActionController Response last_modified=":{"type":"method","name":"last_modified=","children":[],"call":[" headers []= ","utc_time httpdate "," headers "]}," ActionController Response last_modified?":{"type":"method","name":"last_modified?","children":[],"call":[" headers include? "," headers "]}," ActionController Response last_modified":{"type":"method","name":"last_modified","children":[],"call":["Time  httpdate "," headers [] "," headers "]}," ActionController Response charset":{"type":"method","name":"charset","children":[],"call":["charset strip split [] ","charset strip split ","charset strip ","charset blank? "," String split [] "," String split "," String "," headers [] "," headers "," String split []  strip split [] "," String split []  strip split "," String split []  strip "," String split []  blank? "]}," ActionController Response charset=":{"type":"method","name":"charset=","children":[],"call":[" headers []= ","Mime HTML  to_s "," content_type "," headers "]}," ActionController Response content_type":{"type":"method","name":"content_type","children":[],"call":["content_type blank? "," String split [] "," String split "," String "," headers [] "," headers "," String split []  blank? "]}," ActionController Response content_type=":{"type":"method","name":"content_type=","children":[],"call":[" headers []= ","mime_type to_s ","(lvasgn :c\n  (send nil :charset)) nil? "," charset ","mime_type =~ "," headers ","URI  escape ","(lvasgn : charset \n  (send nil : charset harset)) nil? ","  charset harset ","URI  es charset ape "]}," ActionController Response location=":{"type":"method","name":"location=","children":[],"call":[" headers []= "," headers "]}," ActionController Response location":{"type":"method","name":"location","children":[],"call":[" headers [] "," headers "]}," ActionController Response initialize":{"type":"method","name":"initialize","children":[],"call":["@body << "," lambda ","Rack Utils HeaderHash  new "]}," ActionController Resources Resource action_allowed?":{"type":"method","name":"action_allowed?","children":[],"call":["except include? ! ","except include? ","except ! ","only include? ","only ! ","@allowed_actions values_at "]}," ActionController Rescue ClassMethods call_with_exception":{"type":"method","name":"call_with_exception","children":[],"call":[" new process "," new ","Response  new ","env [] ","Request  new "]}," ActionController RequestForgeryProtection form_authenticity_param":{"type":"method","name":"form_authenticity_param","children":[],"call":[" params [] "," request_forgery_protection_token "," params "]}," ActionController Request normalize_parameters":{"type":"method","name":"normalize_parameters","children":[],"call":[" normalize_parameters ","value map ","h with_indifferent_access ","h []= ","value each ","upload content_type= ","value [] ","upload original_path= ","upload extend ","value has_key? ","value []  content_type= ","value []  original_path= ","value []  extend "]}," ActionController Request named_host?":{"type":"method","name":"named_host?","children":[],"call":["(or\n  (send\n    (lvar :host) :nil?)\n  (send\n    (regexp\n      (str \"\\\\d{1,3}\\\\.\\\\d{1,3}\\\\.\\\\d{1,3}\\\\.\\\\d{1,3}$\")\n      (regopt)) :match\n    (lvar :host))) ! ","(str \"\\\\d{1,3}\\\\.\\\\d{1,3}\\\\.\\\\d{1,3}\\\\.\\\\d{1,3}$\") match ","host nil? "]}," ActionController Request server_port":{"type":"method","name":"server_port","children":[],"call":["@env [] to_i ","@env [] "]}," ActionController Request session_options=":{"type":"method","name":"session_options=","children":[],"call":["@env []= "]}," ActionController Request session_options":{"type":"method","name":"session_options","children":[],"call":["@env [] "]}," ActionController Request reset_session":{"type":"method","name":"reset_session","children":[],"call":[" session= "," session destroy "," session "," session respond_to? ","@env []= ","@env [] delete ","@env [] "]}," ActionController Request session=":{"type":"method","name":"session=","children":[],"call":["@env []= "]}," ActionController Request session":{"type":"method","name":"session","children":[],"call":["@env [] "]}," ActionController Request body_stream":{"type":"method","name":"body_stream","children":[],"call":["@env [] "]}," ActionController Request POST":{"type":"method","name":"POST","children":[],"call":[" normalize_parameters ","@env [] "]}," ActionController Request GET":{"type":"method","name":"GET","children":[],"call":[" normalize_parameters ","@env [] "]}," ActionController Request form_data?":{"type":"method","name":"form_data?","children":[],"call":["FORM_DATA_MEDIA_TYPES  include? "," content_type to_s "," content_type "]}," ActionController Request body":{"type":"method","name":"body","children":[],"call":["@env [] ","StringIO  new ","raw_post force_encoding ","raw_post respond_to? ","@env []  force_encoding ","@env []  respond_to? "]}," ActionController Request path_parameters":{"type":"method","name":"path_parameters","children":[],"call":["@env [] "]}," ActionController Request symbolized_path_parameters":{"type":"method","name":"symbolized_path_parameters","children":[],"call":[" path_parameters symbolize_keys "," path_parameters "]}," ActionController Request path_parameters=":{"type":"method","name":"path_parameters=","children":[],"call":["@env []= "]}," ActionController Request parameters":{"type":"method","name":"parameters","children":[],"call":[" request_parameters merge update with_indifferent_access "," request_parameters merge update "," path_parameters "," request_parameters merge "," query_parameters "," request_parameters "]}," ActionController Request raw_post":{"type":"method","name":"raw_post","children":[],"call":["@env [] "," body rewind "," body "," body respond_to? ","@env []= "," body read ","@env [] to_i ","@env include? "]}," ActionController Request path":{"type":"method","name":"path","children":[],"call":["path sub! ","ActionController Base  relative_url_root "," request_uri to_s [] "," request_uri to_s "," request_uri "," request_uri to_s []  sub! "]}," ActionController Request request_uri":{"type":"method","name":"request_uri","children":[],"call":["@env []= ","@env delete ","uri blank? ","env_qs empty? ","@env [] to_s ","@env [] ","uri sub ","@env [] to_s match ","uri sub  blank? ","@env [] to_s  blank? ","@env []  blank? ","@env [] to_s  empty? ","uri sub  sub ","@env [] to_s  sub ","@env []  sub "]}," ActionController Request query_string":{"type":"method","name":"query_string","children":[],"call":["@env [] split [] ","@env [] split ","@env [] ","@env [] present? "]}," ActionController Request subdomains":{"type":"method","name":"subdomains","children":[],"call":["parts [] ","(send\n  (lvar :tld_length) :+\n  (int 2)) -@ ","tld_length + "," host split "," host "," named_host? "," host split  [] "]}," ActionController Request domain":{"type":"method","name":"domain","children":[],"call":[" host split last join "," host split last ","1 + "," host split "," host "," named_host? "]}," ActionController Request port_string":{"type":"method","name":"port_string","children":[],"call":[" port "," port == "," standard_port "]}," ActionController Request standard_port":{"type":"method","name":"standard_port","children":[],"call":[" protocol "]}," ActionController Request port":{"type":"method","name":"port","children":[],"call":[" standard_port ","1 to_i "," raw_host_with_port =~ "," raw_host_with_port "]}," ActionController Request host_with_port":{"type":"method","name":"host_with_port","children":[],"call":[" port_string "," host "]}," ActionController Request host":{"type":"method","name":"host","children":[],"call":[" raw_host_with_port sub "," raw_host_with_port "]}," ActionController Request raw_host_with_port":{"type":"method","name":"raw_host_with_port","children":[],"call":[" env [] "," env ","forwarded split last ","forwarded split "," env []  split last "," env []  split "]}," ActionController Request ssl?":{"type":"method","name":"ssl?","children":[],"call":["@env [] == ","@env [] "]}," ActionController Request protocol":{"type":"method","name":"protocol","children":[],"call":[" ssl? "]}," ActionController Request url":{"type":"method","name":"url","children":[],"call":[" protocol + + "," request_uri "," protocol + "," host_with_port "," protocol "]}," ActionController Request server_software":{"type":"method","name":"server_software","children":[],"call":["1 downcase ","@env [] "]}," ActionController Request remote_ip":{"type":"method","name":"remote_ip","children":[],"call":["@env [] ","remote_ips last strip ","remote_ips last ","remote_ips pop ","TRUSTED_PROXIES  =~ ","remote_ips size > ","remote_ips size "," raise ","ActionControllerError  new ","@env [] inspect ","remote_ips include? ! ","remote_ips include? ","ActionController Base  ip_spoofing_check ","@env include? ","@env [] split ","not_trusted_addrs first ","not_trusted_addrs empty? ","addr =~ ","remote_addr_list reject ","remote_addr_list blank? ","@env [] scan ","@env [] present? "]}," ActionController Request xml_http_request?":{"type":"method","name":"xml_http_request?","children":[],"call":["(send\n  (send\n    (ivar :@env) :[]\n    (str \"HTTP_X_REQUESTED_WITH\")) :!~\n  (regexp\n    (str \"XMLHttpRequest\")\n    (regopt :i))) ! ","@env [] !~ ","@env [] "]}," ActionController Request cache_format":{"type":"method","name":"cache_format","children":[],"call":[" parameters [] "," parameters "]}," ActionController Request template_format":{"type":"method","name":"template_format","children":[],"call":[" xhr? "," parameters [] "," parameters "]}," ActionController Request format=":{"type":"method","name":"format=","children":[],"call":["Mime Type  lookup_by_extension "," parameters [] "," parameters "," parameters []= ","extension to_s "]}," ActionController Request format":{"type":"method","name":"format","children":[],"call":["Mime Type  lookup_by_extension "," xhr? "," accepts first "," accepts ","ActionController Base  use_accept_header "," parameters [] "," parameters "]}," ActionController Request fresh?":{"type":"method","name":"fresh?","children":[],"call":[" etag_matches? ","response etag "," if_none_match "," not_modified? ","response last_modified "," if_modified_since "]}," ActionController Request etag_matches?":{"type":"method","name":"etag_matches?","children":[],"call":[" if_none_match == "," if_none_match "]}," ActionController Request not_modified?":{"type":"method","name":"not_modified?","children":[],"call":[" if_modified_since >= "," if_modified_since "]}," ActionController Request if_none_match":{"type":"method","name":"if_none_match","children":[],"call":[" env [] "," env "]}," ActionController Request if_modified_since":{"type":"method","name":"if_modified_since","children":[],"call":["Time  rfc2822 "," env [] "," env "]}," ActionController Request accepts":{"type":"method","name":"accepts","children":[],"call":["Mime Type  parse ","(send nil :content_type) compact "," content_type ","header empty? ","@env [] to_s strip ","@env [] to_s ","@env [] ","@env [] to_s strip  empty? "]}," ActionController Request media_type":{"type":"method","name":"media_type","children":[],"call":[" content_type to_s "," content_type "]}," ActionController Request content_type":{"type":"method","name":"content_type","children":[],"call":["Mime Type  lookup ","1 strip downcase ","1 strip ","@env [] =~ ","@env [] "]}," ActionController Request content_length":{"type":"method","name":"content_length","children":[],"call":[" to_i "]}," ActionController Request headers":{"type":"method","name":"headers","children":[],"call":["ActionController Http Headers  new "]}," ActionController Request head?":{"type":"method","name":"head?","children":[],"call":[" request_method == "," request_method "]}," ActionController Request delete?":{"type":"method","name":"delete?","children":[],"call":[" request_method == "," request_method "]}," ActionController Request put?":{"type":"method","name":"put?","children":[],"call":[" request_method == "," request_method "]}," ActionController Request post?":{"type":"method","name":"post?","children":[],"call":[" request_method == "," request_method "]}," ActionController Request get?":{"type":"method","name":"get?","children":[],"call":[" method == "," method "]}," ActionController Request method":{"type":"method","name":"method","children":[],"call":[" request_method "," request_method == "]}," ActionController Request request_method":{"type":"method","name":"request_method","children":[],"call":[" raise ","HTTP_METHODS  to_sentence ","HTTP_METHOD_LOOKUP  [] "]}," ActionController Request key?":{"type":"method","name":"key?","children":[],"call":["@env key? "]}," ActionController Reloader run":{"type":"method","name":"run","children":[],"call":[]}," ActionController Reloader BodyWrapper respond_to?":{"type":"method","name":"respond_to?","children":[],"call":["@body respond_to? ","symbol == "]}," ActionController Reloader BodyWrapper method_missing":{"type":"method","name":"method_missing","children":[],"call":["@body send "]}," ActionController Reloader BodyWrapper close":{"type":"method","name":"close","children":[],"call":["@lock unlock ","Dispatcher  cleanup_application ","@body close ","@body respond_to? "]}," ActionController Reloader BodyWrapper initialize":{"type":"method","name":"initialize","children":[],"call":[]}," RackLintPatch AllowStringSubclass each_with_hack":{"type":"method","name":"each_with_hack","children":[],"call":[" File  exist? ","@body to_path "," assert ","@body respond_to? ","part kind_of? ","part inspect ","@body each "]}," RackLintPatch AllowStringSubclass included":{"type":"method","name":"included","children":[],"call":[]}," ActionController PolymorphicRoutes formatted_polymorphic_path":{"type":"method","name":"formatted_polymorphic_path","children":[],"call":[" polymorphic_url ","options merge ","options []= ","record_or_hash pop ","record_or_hash === ","ActiveSupport Deprecation  warn "," caller "]}," ActionController PolymorphicRoutes formatted_polymorphic_url":{"type":"method","name":"formatted_polymorphic_url","children":[],"call":[" polymorphic_url ","options []= ","record_or_hash pop ","Array  === ","ActiveSupport Deprecation  warn "," caller "]}," ActionController ParamsParser logger":{"type":"method","name":"logger","children":[],"call":["Logger  new ","Rails  logger "]}," ActionController ParamsParser content_type_from_legacy_post_data_format_header":{"type":"method","name":"content_type_from_legacy_post_data_format_header","children":[],"call":["x_post_format to_s downcase ","x_post_format to_s ","env [] ","env []  to_s downcase ","env []  to_s "]}," ActionController ParamsParser parse_formatted_parameters":{"type":"method","name":"parse_formatted_parameters","children":[],"call":["e backtrace ","e class ","e message ","request content_length ","request content_type ","request raw_post "," raise "," logger debug "," logger ","data with_indifferent_access ","data is_a? ","ActiveSupport JSON  decode ","body blank? ","YAML  load ","Hash  from_xml with_indifferent_access ","Hash  from_xml ","strategy call ","ActionController Base  param_parsers [] ","ActionController Base  param_parsers "," content_type_from_legacy_post_data_format_header ","request content_length zero? ","Request  new ","Request  new  content_length ","Request  new  content_type ","Request  new  raw_post ","ActiveSupport JSON  decode  with_indifferent_access ","ActiveSupport JSON  decode  is_a? ","request raw_post  blank? ","ActionController Base  param_parsers []  call "," content_type_from_legacy_post_ActiveSupport JSON  decode _format_header ","Request  new  content_length zero? "]}," ActionController ParamsParser call":{"type":"method","name":"call","children":[],"call":["@app call ","env []= "," parse_formatted_parameters "]}," ActionController ParamsParser initialize":{"type":"method","name":"initialize","children":[],"call":[]}," Mime Type =~":{"type":"method","name":"=~","children":[],"call":["synonym to_s =~ ","synonym to_s ","(send\n  (ivar :@synonyms) :+\n  (array\n    (self))) any? ","@synonyms + ","Regexp  new ","Regexp  quote ","mime_type to_s ","mime_type blank? ","@string =~ ","@synonyms any? "]}," ActionController MimeResponds Responder generate_method_for_mime":{"type":"method","name":"generate_method_for_mime","children":[],"call":[]}," ActionController MiddlewareStack build":{"type":"method","name":"build","children":[],"call":["e build "," active reverse inject "," active reverse "," active ","middleware build ","middleware valid? "," reverse inject "," reverse "," raise ","action to_s "," middlewares reverse inject "," middlewares reverse "," middlewares ","action to_s  to_s "]}," ActionController MiddlewareStack active":{"type":"method","name":"active","children":[],"call":["middleware active? "," find_all "]}," ActionController MiddlewareStack use":{"type":"method","name":"use","children":[],"call":[" push ","Middleware  new "]}," ActionController MiddlewareStack swap":{"type":"method","name":"swap","children":[],"call":[" delete "," insert_before "]}," ActionController MiddlewareStack insert_after":{"type":"method","name":"insert_after","children":[],"call":[" insert ","index + "," index ","index is_a? "," index  + ","  index  "," index  is_a? "]}," ActionController MiddlewareStack insert":{"type":"method","name":"insert","children":[],"call":["Middleware  new "," index ","index is_a? ","  index  "," index  is_a? "]}," ActionController MiddlewareStack initialize":{"type":"method","name":"initialize","children":[],"call":["block call "," block_given? "]}," ActionController MiddlewareStack Middleware build_args":{"type":"method","name":"build_args","children":[],"call":["arg call ","arg respond_to? "," Array map "," Array "," args "]}," ActionController MiddlewareStack Middleware build":{"type":"method","name":"build","children":[],"call":[" klass new "," build_args "," klass "," block "]}," ActionController MiddlewareStack Middleware inspect":{"type":"method","name":"inspect","children":[],"call":["arg inspect "," args each "," args "," klass to_s "," klass "]}," ActionController MiddlewareStack Middleware ==":{"type":"method","name":"==","children":[],"call":[" klass == ","middleware to_s constantize ","middleware to_s "," klass ","middleware klass "]}," ActionController MiddlewareStack Middleware active?":{"type":"method","name":"active?","children":[],"call":["@conditional call ","@conditional respond_to? "," klass "]}," ActionController MiddlewareStack Middleware klass":{"type":"method","name":"klass","children":[],"call":["@klass to_s constantize ","@klass to_s ","@klass is_a? ","@klass call ","@klass respond_to? "]}," ActionController MiddlewareStack Middleware initialize":{"type":"method","name":"initialize","children":[],"call":["args << ","options empty? ","options delete ","options has_key? ","args extract_options! "," Array map "," Array ","args extract_options!  empty? ","args extract_options!  delete ","args extract_options!  has_key? ","args extract_args extract_options! ! "]}," ActionController MiddlewareStack Middleware new":{"type":"method","name":"new","children":[],"call":[]}," ActionController Layout find_layout":{"type":"method","name":"find_layout","children":[],"call":[" raise ","Mime Type  lookup_by_extension html? ","Mime Type  lookup_by_extension ","format to_s "," view_paths find_template ","layout to_s =~ ","layout to_s "," view_paths "]}," ActionController Layout default_layout":{"type":"method","name":"default_layout","children":[],"call":[" find_layout "," default_template_format "," class read_inheritable_attribute "," class "," find_ class read_inheritable_attribute  "]}," ActionController Layout initialize":{"type":"method","name":"initialize","children":[],"call":[]}," ActionController Integration Runner initialize":{"type":"method","name":"initialize","children":[],"call":[]}," ActionController HttpAuthentication Digest secret_key":{"type":"method","name":"secret_key","children":[],"call":["ActionController Base  session_options [] ","ActionController Base  session_options "]}," ActionController HttpAuthentication Digest opaque":{"type":"method","name":"opaque","children":[],"call":[" Digest MD5  hexdigest "," secret_key ","OpenSSL Digest MD5  hexdigest "]}," ActionController HttpAuthentication Digest validate_nonce":{"type":"method","name":"validate_nonce","children":[],"call":["(send\n  (lvar :t) :-\n  (send\n    (send\n      (const nil :Time) :now) :to_i)) abs <= ","(send\n  (lvar :t) :-\n  (send\n    (send\n      (const nil :Time) :now) :to_i)) abs ","t - ","Time  now to_i ","Time  now "," nonce == "," nonce ","Base64  decode64 split first to_i ","Base64  decode64 split first ","Base64  decode64 split ","Base64  decode64 ","value nil? ","ActiveSupport Base64  decode64 split first to_i ","ActiveSupport Base64  decode64 split first ","ActiveSupport Base64  decode64 split ","ActiveSupport Base64  decode64 "," Base64  decode64 split first to_i "," Base64  decode64 split first "," Base64  decode64 split "," Base64  decode64 ","(send\n  (lvar :Base64  decode64 split first to_i ) :-\n  (send\n    (send\n      (consBase64  decode64 split first to_i  nil :Time) :now) :Base64  decode64 split first to_i o_i)) abs <= ","(send\n  (lvar :ActiveSupport Base64  decode64 split first to_i ) :-\n  (send\n    (send\n      (consActiveSupport Base64  decode64 split first to_i  nil :Time) :now) :ActiveSupport Base64  decode64 split first to_i o_i)) abs <= ","(send\n  (lvar : Base64  decode64 split first to_i ) :-\n  (send\n    (send\n      (cons Base64  decode64 split first to_i  nil :Time) :now) : Base64  decode64 split first to_i o_i)) abs <= ","(send\n  (lvar :Base64  decode64 split first to_i ) :-\n  (send\n    (send\n      (consBase64  decode64 split first to_i  nil :Time) :now) :Base64  decode64 split first to_i o_i)) abs ","(send\n  (lvar :ActiveSupport Base64  decode64 split first to_i ) :-\n  (send\n    (send\n      (consActiveSupport Base64  decode64 split first to_i  nil :Time) :now) :ActiveSupport Base64  decode64 split first to_i o_i)) abs ","(send\n  (lvar : Base64  decode64 split first to_i ) :-\n  (send\n    (send\n      (cons Base64  decode64 split first to_i  nil :Time) :now) : Base64  decode64 split first to_i o_i)) abs ","Base64  decode64 split first to_i  - ","ActiveSupport Base64  decode64 split first to_i  - "," Base64  decode64 split first to_i  - ","Time  now Base64  decode64 split first to_i o_i ","Time  now ActiveSupport Base64  decode64 split first to_i o_i ","Time  now  Base64  decode64 split first to_i o_i ","Base64  decode64 spliBase64  decode64 split first to_i  firsBase64  decode64 split first to_i  Base64  decode64 split first to_i o_i ","Base64  decode64 spliActiveSupport Base64  decode64 split first to_i  firsActiveSupport Base64  decode64 split first to_i  ActiveSupport Base64  decode64 split first to_i o_i ","Base64  decode64 spli Base64  decode64 split first to_i  firs Base64  decode64 split first to_i   Base64  decode64 split first to_i o_i ","Base64  decode64 spliBase64  decode64 split first to_i  firsBase64  decode64 split first to_i  ","Base64  decode64 spliActiveSupport Base64  decode64 split first to_i  firsActiveSupport Base64  decode64 split first to_i  ","Base64  decode64 spli Base64  decode64 split first to_i  firs Base64  decode64 split first to_i  ","Base64  decode64 spliBase64  decode64 split first to_i  ","Base64  decode64 spliActiveSupport Base64  decode64 split first to_i  ","Base64  decode64 spli Base64  decode64 split first to_i  ","AcBase64  decode64 split first to_i iveSupporBase64  decode64 split first to_i  Base64  decode64 spliBase64  decode64 split first to_i  firsBase64  decode64 split first to_i  Base64  decode64 split first to_i o_i ","AcActiveSupport Base64  decode64 split first to_i iveSupporActiveSupport Base64  decode64 split first to_i  Base64  decode64 spliActiveSupport Base64  decode64 split first to_i  firsActiveSupport Base64  decode64 split first to_i  ActiveSupport Base64  decode64 split first to_i o_i ","Ac Base64  decode64 split first to_i iveSuppor Base64  decode64 split first to_i  Base64  decode64 spli Base64  decode64 split first to_i  firs Base64  decode64 split first to_i   Base64  decode64 split first to_i o_i ","AcBase64  decode64 split first to_i iveSupporBase64  decode64 split first to_i  Base64  decode64 spliBase64  decode64 split first to_i  firsBase64  decode64 split first to_i  ","AcActiveSupport Base64  decode64 split first to_i iveSupporActiveSupport Base64  decode64 split first to_i  Base64  decode64 spliActiveSupport Base64  decode64 split first to_i  firsActiveSupport Base64  decode64 split first to_i  ","Ac Base64  decode64 split first to_i iveSuppor Base64  decode64 split first to_i  Base64  decode64 spli Base64  decode64 split first to_i  firs Base64  decode64 split first to_i  ","AcBase64  decode64 split first to_i iveSupporBase64  decode64 split first to_i  Base64  decode64 spliBase64  decode64 split first to_i  ","AcActiveSupport Base64  decode64 split first to_i iveSupporActiveSupport Base64  decode64 split first to_i  Base64  decode64 spliActiveSupport Base64  decode64 split first to_i  ","Ac Base64  decode64 split first to_i iveSuppor Base64  decode64 split first to_i  Base64  decode64 spli Base64  decode64 split first to_i  ","AcBase64  decode64 split first to_i iveSupporBase64  decode64 split first to_i  Base64  decode64 ","AcActiveSupport Base64  decode64 split first to_i iveSupporActiveSupport Base64  decode64 split first to_i  Base64  decode64 ","Ac Base64  decode64 split first to_i iveSuppor Base64  decode64 split first to_i  Base64  decode64 "," Base64  decode64 spliBase64  decode64 split first to_i  firsBase64  decode64 split first to_i  Base64  decode64 split first to_i o_i "," Base64  decode64 spliActiveSupport Base64  decode64 split first to_i  firsActiveSupport Base64  decode64 split first to_i  ActiveSupport Base64  decode64 split first to_i o_i "," Base64  decode64 spli Base64  decode64 split first to_i  firs Base64  decode64 split first to_i   Base64  decode64 split first to_i o_i "," Base64  decode64 spliBase64  decode64 split first to_i  firsBase64  decode64 split first to_i  "," Base64  decode64 spliActiveSupport Base64  decode64 split first to_i  firsActiveSupport Base64  decode64 split first to_i  "," Base64  decode64 spli Base64  decode64 split first to_i  firs Base64  decode64 split first to_i  "," Base64  decode64 spliBase64  decode64 split first to_i  "," Base64  decode64 spliActiveSupport Base64  decode64 split first to_i  "," Base64  decode64 spli Base64  decode64 split first to_i  "]}," ActionController HttpAuthentication Digest nonce":{"type":"method","name":"nonce","children":[],"call":["Base64  encode64 gsub ","Base64  encode64 "," Digest MD5  hexdigest ","hashed join "," secret_key ","time to_i ","ActiveSupport Base64  encode64 gsub ","ActiveSupport Base64  encode64 "," Base64  encode64 gsub "," Base64  encode64 "," Base64  strict_encode64 ","OpenSSL Digest MD5  hexdigest "," Digest MD5  hex Digest MD5  hexdigest  "," Digest MD5  hexOpenSSL Digest MD5  hexdigest  "," Digestime to_i  MD5  hexdigestime to_i  "," secretime to_i _key ","time to_i ime time to_i o_i ","Actime to_i iveSupportime to_i  Base64  encode64 gsub ","Actime to_i iveSupportime to_i  Base64  encode64 "," Base64  stime to_i rictime to_i _encode64 ","OpenSSL Digest MD5  hex Digest MD5  hexdigest  ","OpenSSL Digest MD5  hexOpenSSL Digest MD5  hexdigest  ","OpenSSL Digestime to_i  MD5  hexdigestime to_i  "]}," ActionController HttpAuthentication Digest authentication_request":{"type":"method","name":"authentication_request","children":[],"call":["controller __send__ "," authentication_header ","controller status= ","controller response_body= "]}," ActionController HttpAuthentication Digest authentication_header":{"type":"method","name":"authentication_header","children":[],"call":["controller headers []= "," opaque "," nonce ","controller headers "," secret_token ","controller request ","controller config secret ","controller config ","  opaque  ","  nonce  "]}," ActionController HttpAuthentication Digest decode_credentials":{"type":"method","name":"decode_credentials","children":[],"call":["hash []= ","value to_s gsub gsub ","value to_s gsub ","value to_s ","key strip ","pair split ","header to_s gsub split inject "," with_indifferent_access ","header to_s gsub split ","header to_s gsub ","header to_s ","key strip to_sym ","Hash  [] ","header to_s gsub split map ","HashWithIndifferentAccess  [] ","value to_s gsub delete ","ActiveSupport HashWithIndifferentAccess  [] "]}," ActionController HttpAuthentication Digest decode_credentials_header":{"type":"method","name":"decode_credentials_header","children":[],"call":[" decode_credentials "," authorization ","request authorization "]}," ActionController HttpAuthentication Digest encode_credentials":{"type":"method","name":"encode_credentials","children":[],"call":["Digest  + ","(send\n  (block\n    (send\n      (lvar :credentials) :sort_by)\n    (args\n      (arg :x))\n    (send\n      (send\n        (lvar :x) :[]\n        (int 0)) :to_s)) :inject\n  (array)) join ","a << ","v [] ","(send\n  (lvar :credentials) :sort_by) inject ","x [] to_s ","x [] ","credentials sort_by ","credentials []= "," expected_response ","credentials [] ","(send\n  (block\n    (send\n      (lvar :credentials) :sort_by)\n    (args\n      (arg :x))\n    (send\n      (send\n        (lvar :x) :[]\n        (int 0)) :to_s)) :map) join ","(send\n  (lvar :credentials) :sort_by) map "]}," ActionController HttpAuthentication Digest ha1":{"type":"method","name":"ha1","children":[],"call":[" Digest MD5  hexdigest ","(send\n  (lvar :credentials) :[]\n  (sym :username)) join ","credentials [] ","OpenSSL Digest MD5  hexdigest "]}," ActionController HttpAuthentication Digest expected_response":{"type":"method","name":"expected_response","children":[],"call":[" Digest MD5  hexdigest ","(lvar :ha1) join ","credentials [] ","(send\n  (send\n    (lvar :http_method) :to_s) :upcase) join ","http_method to_s upcase ","http_method to_s "," ha1 ","OpenSSL Digest MD5  hexdigest ","(lvar : ha1 ) join ","  ha1  "]}," ActionController HttpAuthentication Digest validate_digest_response":{"type":"method","name":"validate_digest_response","children":[],"call":["expected == ","credentials [] "," expected_response ","(true) any? ","request url ","request request_uri ","credentials [] [] == ","credentials [] [] ","request env [] ","request env ","password_procedure call "," opaque == "," opaque ","realm == "," validate_nonce "," decode_credentials_header ","request fullpath "," secret_token ","uri + ","request original_url ","request original_fullpath ","request get_header "," expected_response  == "," decode_credentials_header  [] ","  expected_response _response ","request request_request url  ","request request_request request_uri  ","request request_request fullpath  ","request request_request original_url  ","request request_request original_fullpath  ","request request_credentials []  ","request requesturi +  "," decode_credentials_header  [] [] == "," decode_credentials_header  [] [] ","password_procedure call _procedure call "," decode_ decode_credentials_header _header ","request url  + ","request request_uri  + ","request fullpath  + ","request original_url  + ","request original_fullpath  + ","credentials []  + "]}," ActionController HttpAuthentication Digest authorization":{"type":"method","name":"authorization","children":[],"call":["request env [] ","request env "]}," ActionController HttpAuthentication Digest authenticate":{"type":"method","name":"authenticate","children":[],"call":[" validate_digest_response ","controller request "," authorization ","request authorization "]}," ActionController HttpAuthentication Digest ControllerMethods request_http_digest_authentication":{"type":"method","name":"request_http_digest_authentication","children":[],"call":["HttpAuthentication Digest  authentication_request "]}," ActionController HttpAuthentication Digest ControllerMethods authenticate_with_http_digest":{"type":"method","name":"authenticate_with_http_digest","children":[],"call":["HttpAuthentication Digest  authenticate "," request "," config secret "," config "]}," ActionController HttpAuthentication Digest ControllerMethods authenticate_or_request_with_http_digest":{"type":"method","name":"authenticate_or_request_with_http_digest","children":[],"call":[" request_http_digest_authentication "," authenticate_with_http_digest "]}," ActionController Flash InstanceMethods notice=":{"type":"method","name":"notice=","children":[],"call":[" flash []= "," flash "]}," ActionController Flash InstanceMethods notice":{"type":"method","name":"notice","children":[],"call":[" flash [] "," flash "]}," ActionController Flash InstanceMethods alert=":{"type":"method","name":"alert=","children":[],"call":[" flash []= "," flash "]}," ActionController Flash InstanceMethods alert":{"type":"method","name":"alert","children":[],"call":[" flash [] "," flash "]}," ActionController Flash InstanceMethods redirect_to_with_flash":{"type":"method","name":"redirect_to_with_flash","children":[],"call":[" redirect_to_without_flash "," flash update "," flash ","response_status_and_flash delete "," flash []= "]}," ActionController Flash InstanceMethods perform_action_with_flash":{"type":"method","name":"perform_action_with_flash","children":[],"call":[" remove_instance_variable ","@_flash store "," session "," perform_action_without_flash "]}," ActionController Flash FlashHash store":{"type":"method","name":"store","children":[],"call":["session []= "," empty? "]}," ActionController Failsafe failsafe_logger":{"type":"method","name":"failsafe_logger","children":[],"call":["Logger  new ","Rails  logger "]}," ActionController Failsafe log_failsafe_exception":{"type":"method","name":"log_failsafe_exception","children":[],"call":[" failsafe_logger flush "," failsafe_logger "," failsafe_logger respond_to? "," failsafe_logger fatal ","message << ","exception backtrace join ","exception backtrace ","Time  now "]}," ActionController Failsafe render_template":{"type":"method","name":"render_template","children":[],"call":["ERB  new result "," binding ","ERB  new ","File  read "]}," ActionController Failsafe h":{"type":"method","name":"h","children":[],"call":["ERB Util  h "]}," ActionController Failsafe failsafe_response_body":{"type":"method","name":"failsafe_response_body","children":[],"call":["<html><body><h1>500 Internal Server Error</h1> << << ","<html><body><h1>500 Internal Server Error</h1> << ","result nil? "," render_template ","File  exist? "," class error_file_path "," class ","File  read ","<html><body><h1>500 Internal Server Error</h1> << <<  nil? "," render_template  nil? "]}," ActionController Failsafe failsafe_response":{"type":"method","name":"failsafe_response","children":[],"call":["$stderr puts "," failsafe_response_body "," log_failsafe_exception "]}," ActionController Failsafe call":{"type":"method","name":"call","children":[],"call":[" failsafe_response "," raise ","Rails  env test? ","Rails  env ","@app call ","env [] "]}," ActionController Failsafe initialize":{"type":"method","name":"initialize","children":[],"call":[]}," ActionController Dispatcher build_middleware_stack":{"type":"method","name":"build_middleware_stack","children":[],"call":["@@middleware build "," dup _call "," dup "," lambda "]}," ActionController Dispatcher _call":{"type":"method","name":"_call","children":[],"call":[" dispatch "]}," ActionController Dispatcher run_prepare_callbacks":{"type":"method","name":"run_prepare_callbacks","children":[],"call":[" new send "," new ","Logger  new ","Rails  logger ","Rails  Logger  new  ","Rails  Rails  logger  "]}," ActionController SignedCookieJar method_missing":{"type":"method","name":"method_missing","children":[],"call":["@parent_jar send "]}," ActionController SignedCookieJar []=":{"type":"method","name":"[]=","children":[],"call":["@parent_jar []= ","@verifier generate ","options []= ","options [] ","options symbolize_keys! ","options is_a? "]}," ActionController SignedCookieJar []":{"type":"method","name":"[]","children":[],"call":["@verifier verify ","@parent_jar [] "]}," ActionController SignedCookieJar initialize":{"type":"method","name":"initialize","children":[],"call":["ActiveSupport MessageVerifier  new ","@parent_jar controller class cookie_verifier_secret ","@parent_jar controller class ","@parent_jar controller "," raise ","parent_jar controller class cookie_verifier_secret ","parent_jar controller class ","parent_jar controller "]}," ActionController PermanentCookieJar method_missing":{"type":"method","name":"method_missing","children":[],"call":["@parent_jar send "]}," ActionController PermanentCookieJar controller":{"type":"method","name":"controller","children":[],"call":["@parent_jar controller "]}," ActionController PermanentCookieJar signed":{"type":"method","name":"signed","children":[],"call":["SignedCookieJar  new "]}," ActionController PermanentCookieJar []=":{"type":"method","name":"[]=","children":[],"call":["@parent_jar []= ","options []= ","20 years from_now ","20 years ","options symbolize_keys! ","options is_a? "]}," ActionController PermanentCookieJar initialize":{"type":"method","name":"initialize","children":[],"call":[]}," ActionController CookieJar signed":{"type":"method","name":"signed","children":[],"call":["SignedCookieJar  new "]}," ActionController CookieJar permanent":{"type":"method","name":"permanent","children":[],"call":["PermanentCookieJar  new "]}," ActionController CGIHandler dispatch_cgi":{"type":"method","name":"dispatch_cgi","children":[],"call":[]}," ActionController CGIHandler ProperStream read":{"type":"method","name":"read","children":[],"call":["args empty? "]}," ActionController CGIHandler ProperStream each":{"type":"method","name":"each","children":[],"call":[" gets "]}," ActionController Caching Actions ActionCacheFilter filter":{"type":"method","name":"filter","children":[],"call":[" after ","action call "," before ","controller content_type= ","Mime  [] ","cache_path extension ","controller response_body= ","controller render_to_string ","controller _save_fragment ","cache_path path ","controller action_has_layout= ","controller read_fragment ","ActionCachePath  new ","controller instance_exec ","@cache_path respond_to? ","@layout == ","controller _render_cache_fragment "," cache ","ActionCachePath  new  extension ","controller read_fragment _path extension ","controller response_controller render_to_string = ","controller response_controller _save_fragment = ","controller response_controller read_fragment = ","ActionCachePath  new  path ","controller read_fragment _path path ","@ActionCachePath  new  respond_to? ","@controller read_fragment _path respond_to? ","controller _render_controller read_fragment _fragment "," controller read_fragment  "]}," ActionController Base default_template":{"type":"method","name":"default_template","children":[],"call":[" view_paths find_template "," default_template_format "," default_template_name "," view_paths "]}," ActionController Base validate_render_arguments":{"type":"method","name":"validate_render_arguments","children":[],"call":[" raise ","extra_options inspect ","options inspect ","extra_options is_a? ! ","extra_options is_a? ","options is_a? ! ","options is_a? ","options != "]}," ActionController Base call":{"type":"method","name":"call","children":[],"call":[" process ","Response  new ","env [] ","Request  new "]}," ActionController Assertions SelectorAssertions initialize":{"type":"method","name":"initialize","children":[],"call":[]}," ActionController Assertions DomAssertions strip_whitespace!":{"type":"method","name":"strip_whitespace!","children":[],"call":[]}," ActionView RenderablePartial local_assigns_key?":{"type":"method","name":"local_assigns_key?","children":[],"call":["local_assigns key? "," variable_name "]}," ActionView Helpers CsrfHelper csrf_meta_tag":{"type":"method","name":"csrf_meta_tag","children":[],"call":["(str \"<meta name=\\\"csrf-param\\\" content=\\\"\") html_safe "," h "," form_authenticity_token "," request_forgery_protection_token "," protect_against_forgery? ","Rack Utils  escape_html "]}," ActionController RequestForgeryProtection handle_unverified_request":{"type":"method","name":"handle_unverified_request","children":[],"call":[" reset_session "," forgery_protection_strategy new handle_unverified_request "," forgery_protection_strategy new "," forgery_protection_strategy ","protection_strategy handle_unverified_request ","protection_strategy warning_message= "," unverified_request_warning_message ","protection_strategy respond_to? "," forgery_ forgery_protection_strategy new  new handle_unverified_request "," forgery_ forgery_protection_strategy new  new "," forgery_ forgery_protection_strategy new  "," forgery_protection_strategy new  handle_unverified_request "," forgery_protection_strategy new  warning_message= "," forgery_protection_strategy new  respond_to? "]}," ActionController CookieJar write_cookie?":{"type":"method","name":"write_cookie?","children":[],"call":["Rails  env development? ","Rails  env ","cookie [] ! ","cookie [] "]}," ActionController Request parse_query":{"type":"method","name":"parse_query","children":[],"call":[" deep_munge "]}," ActionController Request deep_munge":{"type":"method","name":"deep_munge","children":[],"call":[" deep_munge ","v compact! ","v grep ","hash each_value ","hash []= ","keys each ","hash [] == ","hash [] ","hash keys find_all ","hash keys "]}," ActionView Helpers TranslationHelper scope_key_by_partial":{"type":"method","name":"scope_key_by_partial","children":[],"call":[" template path_without_format_and_extension gsub + ","key to_s "," template path_without_format_and_extension gsub "," template path_without_format_and_extension "," template ","key to_s first == ","key to_s first ","strkey first == ","strkey first ","key join ","key respond_to? "," raise ","key inspect ","@_virtual_path gsub + ","@_virtual_path gsub ","@virtual_path gsub + ","@virtual_path gsub ","key to_s  first == ","key join  first == ","key to_s  first ","key join  first "]}," Rack release":{"type":"method","name":"release","children":[],"call":[]}," Rack version":{"type":"method","name":"version","children":[],"call":[]}," Rack Utils Multipart parse_multipart":{"type":"method","name":"parse_multipart","children":[],"call":[]}," Rack Utils HeaderHash merge":{"type":"method","name":"merge","children":[],"call":["hash merge! "," dup "," dup  merge! "]}," Rack Utils HeaderHash merge!":{"type":"method","name":"merge!","children":[],"call":[" []= ","other each "]}," Rack Utils HeaderHash include?":{"type":"method","name":"include?","children":[],"call":["@names has_key? ","k downcase "]}," Rack Utils HeaderHash delete":{"type":"method","name":"delete","children":[],"call":["@names delete ","k downcase "]}," Rack Utils HeaderHash []=":{"type":"method","name":"[]=","children":[],"call":["@names []= ","k downcase "," delete "]}," Rack Utils HeaderHash []":{"type":"method","name":"[]","children":[],"call":["@names [] ","k downcase "]}," Rack Utils HeaderHash to_hash":{"type":"method","name":"to_hash","children":[],"call":["hash []= ","v to_ary join ","v to_ary ","v respond_to? "," inject "]}," Rack Utils HeaderHash initialize":{"type":"method","name":"initialize","children":[],"call":[" []= ","hash each "]}," Rack Utils Context context":{"type":"method","name":"context","children":[],"call":[" recontext call "," recontext "]}," Rack Utils Context recontext":{"type":"method","name":"recontext","children":[],"call":[" class new "," class "]}," Rack Utils Context call":{"type":"method","name":"call","children":[],"call":["@for context "]}," Rack Utils Context initialize":{"type":"method","name":"initialize","children":[],"call":[" raise ","app_f respond_to? "]}," Rack Utils bytesize":{"type":"method","name":"bytesize","children":[],"call":["string size ","string bytesize "]}," Rack Utils select_best_encoding":{"type":"method","name":"select_best_encoding","children":[],"call":["(send\n  (lvar :encoding_candidates) :&\n  (lvar :available_encodings)) [] ","encoding_candidates & ","encoding_candidates delete ","(send\n  (lvar :expanded_accept_encoding) :find_all) each ","q == ","expanded_accept_encoding find_all ","encoding_candidates push ","encoding_candidates include? ","(send\n  (lvar :expanded_accept_encoding) :sort_by) map ","q -@ ","expanded_accept_encoding sort_by ","mem + ","(send\n  (lvar :accept_encoding) :map) inject ","(send\n  (lvar :available_encodings) :-\n  (block\n    (send\n      (lvar :accept_encoding) :map)\n    (args\n      (arg :m2)\n      (arg :_))\n    (lvar :m2))) map ","available_encodings - ","accept_encoding map ","m == "]}," Rack Utils escape_html":{"type":"method","name":"escape_html","children":[],"call":["string to_s gsub gsub gsub gsub gsub ","string to_s gsub gsub gsub gsub ","string to_s gsub gsub gsub ","string to_s gsub gsub ","string to_s gsub ","string to_s "]}," Rack Utils build_query":{"type":"method","name":"build_query","children":[],"call":["(send\n  (lvar :params) :map) join "," escape + + "," escape "," escape + "," build_query ","v map ","v class == ","v class ","params map "]}," Rack Utils normalize_params":{"type":"method","name":"normalize_params","children":[],"call":["params []= "," normalize_params ","params [] ","params [] << ","params [] last ","params [] last key? ! ","params [] last key? ","params [] last is_a? "," raise ","params [] is_a? ","after =~ ","after == ","k empty? ","name =~ "]}," Rack Utils parse_nested_query":{"type":"method","name":"parse_nested_query","children":[],"call":[" normalize_params "," unescape split "," unescape ","(or\n  (lvar :qs)\n  (str \"\")) split each ","(or\n  (lvar :qs)\n  (str \"\")) split "]}," Rack Utils parse_query":{"type":"method","name":"parse_query","children":[],"call":["params []= ","params [] << ","params [] ","cur class == ","cur class "," unescape split "," unescape ","(or\n  (lvar :qs)\n  (str \"\")) split each ","(or\n  (lvar :qs)\n  (str \"\")) split ","params []  class == ","params []  class "]}," Rack Utils unescape":{"type":"method","name":"unescape","children":[],"call":["(send\n  (nth-ref 1) :delete\n  (str \"%\")) pack ","1 delete ","s tr gsub ","s tr "]}," Rack Utils escape":{"type":"method","name":"escape","children":[],"call":["(send\n  (send\n    (lvar :s) :to_s) :gsub\n  (regexp\n    (str \"([^ a-zA-Z0-9_.-]+)\")\n    (regopt :n))) tr ","% + ","1 unpack join upcase ","1 unpack join ","1 unpack ","H2 * ","1 size ","s to_s gsub ","s to_s "]}," Rack URLMap call":{"type":"method","name":"call","children":[],"call":["app call ","env merge ","path [] ","location size ","script_name + ","path [] == ","location == ","hHost == ","sName + + ","sName + ","host nil? ","sName == ","@mapping each ","env values_at ","env [] ","env [] to_s squeeze ","env [] to_s ","env [] to_s squeeze  [] ","env []  + ","env [] to_s squeeze  [] == "]}," Rack URLMap remap":{"type":"method","name":"remap","children":[],"call":["h to_s size ","h to_s ","l size -@ ","l size ","(send\n  (lvar :map) :map) sort_by ","location chomp "," raise ","location [] == ","location [] ","location =~ ","map map ","location chomp  chomp ","location chomp  [] == ","location chomp  [] ","location chomp  =~ "]}," Rack URLMap initialize":{"type":"method","name":"initialize","children":[],"call":[" remap "]}," Rack Static call":{"type":"method","name":"call","children":[],"call":["@app call ","@file_server call ","path index == ","path index ","@urls any? ","env [] ","env []  index == ","env []  index "]}," Rack Static initialize":{"type":"method","name":"initialize","children":[],"call":["Rack File  new ","Dir  pwd ","options [] "]}," Rack ShowStatus h":{"type":"method","name":"h","children":[],"call":["Utils  escape_html ","obj inspect "]}," Rack ShowStatus call":{"type":"method","name":"call","children":[],"call":["headers merge ","size to_s ","Rack Utils  bytesize ","@template result "," binding ","env [] ","status to_s ","Rack Utils HTTP_STATUS_CODES  [] ","status to_i ","Rack Request  new ","status to_i >= ","headers [] to_i <= ","headers [] to_i ","headers [] ","Utils HeaderHash  new ","@app call ","Utils HeaderHash  new  merge ","Rack Utils  bytesize  to_s ","Rack Utils  byteRack Utils  bytesize  ","Utils HeaderHash  new  [] to_i <= ","Utils HeaderHash  new  [] to_i ","Utils HeaderHash  new  [] "]}," Rack ShowStatus initialize":{"type":"method","name":"initialize","children":[],"call":["ERB  new "]}," Rack ShowExceptions h":{"type":"method","name":"h","children":[],"call":["Utils  escape_html ","obj inspect "]}," Rack ShowExceptions pretty":{"type":"method","name":"pretty","children":[],"call":["@template result "," binding ","env [] flush ","env [] ","env [] puts ","\t + ","exception backtrace map ","exception backtrace ","exception message ","exception class ","(send\n  (send\n    (lvar :exception) :backtrace) :map) compact ","frame post_context= ","lines [] ","frame post_context_lineno ","lineno + ","frame post_context_lineno= ","(send\n  (lvar :lineno) :+\n  (const nil :CONTEXT)) min ","lines size ","frame context_line= ","lines [] chomp ","frame pre_context= ","frame pre_context_lineno ","frame pre_context_lineno= ","(send\n  (lvar :lineno) :-\n  (const nil :CONTEXT)) max ","lineno - "," File  readlines ","frame filename ","frame lineno - ","frame lineno ","frame function= ","frame lineno= ","2 to_i ","frame filename= ","line =~ ","OpenStruct  new ","(send\n  (send\n    (lvar :req) :script_name) :+\n  (send\n    (lvar :req) :path_info)) squeeze ","req script_name + ","req path_info ","req script_name ","Rack Request  new ","OpenStruct  new  post_context= "," File  readlines  [] ","frame post_context_frame lineno -  ","OpenStruct  new  post_context_lineno ","frame lineno -  + ","frame post_context_frame lineno - = ","OpenStruct  new  post_context_lineno= ","(send\n  (lvar :frame lineno - ) :+\n  (const nil :CONTEXT)) min "," File  readlines  size ","OpenStruct  new  context_line= "," File  readlines  [] chomp ","OpenStruct  new  pre_context= ","frame pre_context_frame lineno -  ","OpenStruct  new  pre_context_lineno ","frame pre_context_frame lineno - = ","OpenStruct  new  pre_context_lineno= ","(send\n  (lvar :frame lineno - ) :-\n  (const nil :CONTEXT)) max ","frame lineno -  - "," File  read File  readlines  ","OpenStruct  new  filename ","frame frame lineno -  - ","OpenStruct  new  lineno - ","frame frame lineno -  ","OpenStruct  new  lineno ","OpenStruct  new  function= ","frame frame lineno - = ","OpenStruct  new  lineno= ","OpenStruct  new  filename= ","(send\n  (send\n    (lvar :req) :script_name) :+\n  (send\n    (lvar :req) :(send\n  (send\n    (lvar :req) :script_name) :+\n  (send\n    (lvar :req) :path_info)) squeeze _info)) squeeze ","(send\n  (send\n    (lvar :Rack Request  new ) :script_name) :+\n  (send\n    (lvar :Rack Request  new ) :path_info)) squeeze ","Rack Request  new  script_name + ","req (send\n  (send\n    (lvar :req) :script_name) :+\n  (send\n    (lvar :req) :path_info)) squeeze _info ","Rack Request  new  path_info ","Rack Request  new  script_name "]}," Rack ShowExceptions call":{"type":"method","name":"call","children":[],"call":["backtrace join size to_s ","backtrace join size ","backtrace join "," pretty ","@app call "," pretty  join size to_s "," pretty  join size "," pretty  join "]}," Rack ShowExceptions initialize":{"type":"method","name":"initialize","children":[],"call":["ERB  new "]}," Rack Session Pool merge_sessions":{"type":"method","name":"merge_sessions","children":[],"call":["cur []= ","new [] ","update each "," warn ","update * ","update empty? ! ","update empty? ","new [] != ","old [] ","new keys select ","new keys ","cur delete ","delete each ","delete * ","delete empty? ! ","delete empty? ","old keys - ","old keys ","Hash  === ","cur old keys -  ","old keys -  each ","old keys -  * ","old keys -  empty? ! ","old keys -  empty? "]}," Rack Session Pool set_session":{"type":"method","name":"set_session","children":[],"call":["@mutex unlock ","env [] "," warn ","$! inspect ","new_session inspect ","@pool store "," merge_sessions ","new_session instance_variable_get "," generate_sid ","options [] ","@pool delete ","@pool [] ","@mutex lock ","new_ merge_sessions  inspect ","new_@pool []  inspect "," merge_ merge_sessions s "," merge_@pool [] s ","new_ merge_sessions  instance_variable_get ","new_@pool []  instance_variable_get "]}," Rack Session Pool get_session":{"type":"method","name":"get_session","children":[],"call":["@mutex unlock ","env [] ","session instance_variable_set "," merge ","@pool store "," generate_sid ","env [] puts ","sid inspect ","sid nil? ! ","sid nil? ","@mutex lock ","@pool [] ","@pool []  instance_variable_set "," generate_ generate_sid  "," generate_sid  inspect "," generate_sid  nil? ! "," generate_sid  nil? "]}," Rack Session Pool generate_sid":{"type":"method","name":"generate_sid","children":[],"call":["@pool key? "," loop "]}," Rack Session Pool initialize":{"type":"method","name":"initialize","children":[],"call":["Mutex  new ","Hash  new "]}," Rack Session Memcache merge_sessions":{"type":"method","name":"merge_sessions","children":[],"call":["cur []= ","new [] ","update each "," warn ","update * ","update empty? ! ","update empty? ","new [] != ","old [] ","new keys select ","new keys ","cur delete ","delete each ","delete * ","delete empty? ! ","delete empty? ","old keys - ","old keys ","Hash  === ","cur old keys -  ","old keys -  each ","old keys -  * ","old keys -  empty? ! ","old keys -  empty? "]}," Rack Session Memcache set_session":{"type":"method","name":"set_session","children":[],"call":["@mutex unlock ","env [] "," warn ","$! inspect ","@pool set "," merge_sessions ","new_session instance_variable_get ","@pool add "," generate_sid ","options [] ","@pool delete ","@pool get ","@mutex lock ","expiry + ","expiry nil? "," merge_ merge_sessions s ","new_ merge_sessions  instance_variable_get ","expiry +  + ","options []  + ","expiry +  nil? ","options []  nil? "]}," Rack Session Memcache get_session":{"type":"method","name":"get_session","children":[],"call":["@mutex unlock ","env [] "," warn ","$! inspect ","session instance_variable_set "," merge "," raise ","sid inspect ","@pool add "," generate_sid ","env [] puts ","sid nil? ! ","sid nil? ","@mutex lock ","@pool get ","@pool get  instance_variable_set "," generate_sid  inspect "," generate_ generate_sid  "," generate_sid  nil? ! "," generate_sid  nil? "]}," Rack Session Memcache generate_sid":{"type":"method","name":"generate_sid","children":[],"call":["@pool get "," loop "]}," Rack Session Memcache initialize":{"type":"method","name":"initialize","children":[],"call":[" raise ","s alive? ","@pool servers any? ","@pool servers ","MemCache  new ","@default_options [] ","Mutex  new ","MemCache  new  servers any? ","MemCache  new  servers "]}," Rack Session Cookie generate_hmac":{"type":"method","name":"generate_hmac","children":[],"call":["OpenSSL HMAC  hexdigest ","OpenSSL Digest SHA1  new "]}," Rack Session Cookie commit_session":{"type":"method","name":"commit_session","children":[],"call":["response to_a ","response set_cookie ","cookie merge ","Rack Response  new ","cookie []= ","Time  now + ","options [] ","Time  now ","options [] nil? ","Hash  new ","env [] ","env [] puts ","session_data size > ","4096 - ","@key size ","session_data size "," generate_hmac ","(lvar :session_data) pack ","Marshal  dump ","Rack Response  new  to_a ","Rack Response  new  set_cookie ","response set_Hash  new  ","Hash  new  merge ","Hash  new  []= ","env []  [] ","env []  [] nil? ","(lvar :session_data) pack  size > ","Marshal  dump  size > ","(lvar :session_data) pack  size ","Marshal  dump  size ","(lvar :(lvar :session_data) pack ) pack ","(lvar :Marshal  dump ) pack "]}," Rack Session Cookie load_session":{"type":"method","name":"load_session","children":[],"call":["env []= ","@default_options dup ","Hash  new ","Marshal  load ","session_data unpack first ","session_data unpack ","digest == "," generate_hmac ","session_data split ","request cookies [] ","request cookies ","Rack Request  new ","Marshal  load  unpack first ","session_data unpack first  unpack first ","request cookies []  unpack first ","Marshal  load  unpack ","session_data unpack first  unpack ","request cookies []  unpack ","Marshal  load  split ","session_data unpack first  split ","request cookies []  split ","Rack Request  new  cookies [] ","Rack Request  new  cookies "]}," Rack Session Cookie call":{"type":"method","name":"call","children":[],"call":[" commit_session ","@app call "," load_session "]}," Rack Session Cookie initialize":{"type":"method","name":"initialize","children":[],"call":["(pair\n  (sym :domain)\n  (nil)) merge ","options [] "]}," Rack Session Abstract ID set_session":{"type":"method","name":"set_session","children":[],"call":[" raise "]}," Rack Session Abstract ID get_session":{"type":"method","name":"get_session","children":[],"call":[" raise "]}," Rack Session Abstract ID commit_session":{"type":"method","name":"commit_session","children":[],"call":["response to_a ","response set_cookie ","cookie merge ","Rack Response  new ","cookie []= ","Time  now + ","options [] ","Time  now ","options [] nil? ","Hash  new ","env [] puts ","env [] ","options [] ! "," class name "," class ","session_id ! "," set_session ","Rack Response  new  to_a ","Rack Response  new  set_cookie ","response set_Hash  new  ","Hash  new  merge ","Hash  new  []= ","env []  [] ","env []  [] nil? ","env []  [] ! "," set_session  ! ","options []  ! ","env [] _id ! "," set_env []  "]}," Rack Session Abstract ID load_session":{"type":"method","name":"load_session","children":[],"call":["env []= ","@default_options merge ","Hash  new "," get_session ","request cookies [] ","request cookies ","Rack Request  new ","Rack Request  new  cookies [] ","Rack Request  new  cookies "]}," Rack Session Abstract ID generate_sid":{"type":"method","name":"generate_sid","children":[],"call":["(str \"%0\") % "," rand ","2 ** - ","2 ** ","@default_options [] ","@default_options [] / "]}," Rack Session Abstract ID context":{"type":"method","name":"context","children":[],"call":[" commit_session ","app call "," load_session "]}," Rack Session Abstract ID call":{"type":"method","name":"call","children":[],"call":[" context "]}," Rack Session Abstract ID initialize":{"type":"method","name":"initialize","children":[],"call":[" class DEFAULT_OPTIONS  merge "," class ","options [] "]}," Rack Response Helpers location":{"type":"method","name":"location","children":[],"call":[" headers [] "," headers "]}," Rack Response Helpers content_length":{"type":"method","name":"content_length","children":[],"call":["cl to_i "," headers [] "," headers "," headers []  to_i "]}," Rack Response Helpers content_type":{"type":"method","name":"content_type","children":[],"call":[" headers [] "," headers "]}," Rack Response Helpers include?":{"type":"method","name":"include?","children":[],"call":[" headers [] ! ! "," headers [] ! "," headers [] "," headers "]}," Rack Response Helpers empty?":{"type":"method","name":"empty?","children":[],"call":["(int 201) include? "]}," Rack Response Helpers redirect?":{"type":"method","name":"redirect?","children":[],"call":["(int 301) include? "]}," Rack Response Helpers not_found?":{"type":"method","name":"not_found?","children":[],"call":["@status == "]}," Rack Response Helpers forbidden?":{"type":"method","name":"forbidden?","children":[],"call":["@status == "]}," Rack Response Helpers ok?":{"type":"method","name":"ok?","children":[],"call":["@status == "]}," Rack Response Helpers server_error?":{"type":"method","name":"server_error?","children":[],"call":["@status < ","@status >= "]}," Rack Response Helpers client_error?":{"type":"method","name":"client_error?","children":[],"call":["@status < ","@status >= "]}," Rack Response Helpers redirection?":{"type":"method","name":"redirection?","children":[],"call":["@status < ","@status >= "]}," Rack Response Helpers successful?":{"type":"method","name":"successful?","children":[],"call":["@status < ","@status >= "]}," Rack Response Helpers informational?":{"type":"method","name":"informational?","children":[],"call":["@status < ","@status >= "]}," Rack Response Helpers invalid?":{"type":"method","name":"invalid?","children":[],"call":["@status >= ","@status < "]}," Rack Response empty?":{"type":"method","name":"empty?","children":[],"call":["@body empty? ","@block == "]}," Rack Response close":{"type":"method","name":"close","children":[],"call":[" body close "," body "," body respond_to? "]}," Rack Response write":{"type":"method","name":"write","children":[],"call":[" header []= ","@length to_s "," header ","@writer call ","s size ","str to_s ","@length to_str to_s  ","str to_s  str to_s ize ","str to_s tr to_str to_s  "]}," Rack Response each":{"type":"method","name":"each","children":[],"call":["@block call ","@body each "]}," Rack Response finish":{"type":"method","name":"finish","children":[],"call":[" header to_hash "," header "," status to_i "," status "," header delete ","(int 204) include? "]}," Rack Response delete_cookie":{"type":"method","name":"delete_cookie","children":[],"call":[" set_cookie ","(pair\n  (sym :value)\n  (str \"\")) merge ","Time  at ","cookie =~ ","Utils  escape "," [] reject! "," [] "," []= ","(send\n  (self) :[]\n  (str \"Set-Cookie\")) compact ","Array  === "]}," Rack Response set_cookie":{"type":"method","name":"set_cookie","children":[],"call":[" []= "," [] "," [] << ","Utils  escape + + + ","Utils  escape + + ","(send\n  (lvar :value) :map) join ","Utils  escape ","value map ","Utils  escape + ","Array  === ","value [] ","; expires= + ","value [] clone gmtime strftime ","value [] clone gmtime ","value [] clone ","; path= + ","; domain= + ","(send\n  (lvar :value [] ) :map) join ","value []  map ","value []  [] ","; ; expires= + = + ","value []  [] clone gmtime strftime ","value []  [] clone gmtime ","value []  [] clone ","; ; path= + = + ","; ; domain= + = + "]}," Rack Response []=":{"type":"method","name":"[]=","children":[],"call":[" header []= "," header "]}," Rack Response []":{"type":"method","name":"[]","children":[],"call":[" header [] "," header "]}," Rack Response initialize":{"type":"method","name":"initialize","children":[],"call":[" block_given? "," raise "," write ","part to_s ","body each ","body respond_to? ","body to_str ","@body << "," lambda ","Utils HeaderHash  new ","(pair\n  (str \"Content-Type\")\n  (str \"text/html\")) merge "]}," Rack Request ip":{"type":"method","name":"ip","children":[],"call":["@env [] ","addr split last strip ","addr split last ","addr split ","@env []  split last strip ","@env []  split last ","@env []  split "]}," Rack Request accept_encoding":{"type":"method","name":"accept_encoding","children":[],"call":[" raise ","part inspect ","(or\n  (send\n    (lvar :m) :[]\n    (int 2))\n  (float 1.0)) to_f ","m [] ","(str \"^([^\\\\s,]+?)(?:;\\\\s*q=(\\\\d+(?:\\\\.\\\\d+)?))?$\") match ","@env [] to_s split map ","@env [] to_s split ","@env [] to_s ","@env [] ","(or\n  (send\n    (lvar :(str \"^([^\\s,]+?)(?:;\\s*q=(\\d+(?:\\.\\d+)?))?$\") match ) :[]\n    (int 2))\n  (float 1.0)) to_f ","(str \"^([^\\s,]+?)(?:;\\s*q=(\\d+(?:\\.\\d+)?))?$\") match  [] ","(str \"^([^\\\\s,]+?)(?:;\\\\s*q=(\\\\d+(?:\\\\.\\\\d+)?))?$\") (str \"^([^\\s,]+?)(?:;\\s*q=(\\d+(?:\\.\\d+)?))?$\") match atch ","@env [] to_s split (str \"^([^\\s,]+?)(?:;\\s*q=(\\d+(?:\\.\\d+)?))?$\") match ap "]}," Rack Request fullpath":{"type":"method","name":"fullpath","children":[],"call":["path << << "," query_string ","path << "," query_string empty? "," script_name + "," path_info "," script_name "," script_name +  << << "," script_name +  << ","  script_name + _info "]}," Rack Request url":{"type":"method","name":"url","children":[],"call":["url << "," fullpath "," port "," port != "," scheme == "," scheme "," host "," scheme + "," scheme +  << "]}," Rack Request xhr?":{"type":"method","name":"xhr?","children":[],"call":["@env [] == ","@env [] "]}," Rack Request cookies":{"type":"method","name":"cookies","children":[],"call":["@env []= ","h []= ","v first ","Array  === ","Utils  parse_query inject ","Utils  parse_query ","@env [] ","@env [] == "]}," Rack Request referer":{"type":"method","name":"referer","children":[],"call":["@env [] "]}," Rack Request values_at":{"type":"method","name":"values_at","children":[],"call":[" params [] "," params ","keys map "]}," Rack Request []=":{"type":"method","name":"[]=","children":[],"call":[" params []= ","key to_s "," params "]}," Rack Request []":{"type":"method","name":"[]","children":[],"call":[" params [] ","key to_s "," params "]}," Rack Request params":{"type":"method","name":"params","children":[],"call":[" GET "," GET update "," POST "," put? "]}," Rack Request POST":{"type":"method","name":"POST","children":[],"call":["@env [] ","@env [] rewind ","@env [] respond_to? ","@env []= ","Utils  parse_nested_query ","form_vars sub! ","@env [] read ","Utils Multipart  parse_multipart "," env "," form_data? ","@env [] eql? ","@env [] read  sub! "]}," Rack Request GET":{"type":"method","name":"GET","children":[],"call":["@env []= ","Utils  parse_nested_query "," query_string ","@env [] ","@env [] == "]}," Rack Request form_data?":{"type":"method","name":"form_data?","children":[],"call":["FORM_DATA_MEDIA_TYPES  include? "," media_type "]}," Rack Request head?":{"type":"method","name":"head?","children":[],"call":[" request_method == "," request_method "]}," Rack Request delete?":{"type":"method","name":"delete?","children":[],"call":[" request_method == "," request_method "]}," Rack Request put?":{"type":"method","name":"put?","children":[],"call":[" request_method == "," request_method "]}," Rack Request post?":{"type":"method","name":"post?","children":[],"call":[" request_method == "," request_method "]}," Rack Request get?":{"type":"method","name":"get?","children":[],"call":[" request_method == "," request_method "]}," Rack Request path_info=":{"type":"method","name":"path_info=","children":[],"call":["@env []= ","s to_s "]}," Rack Request script_name=":{"type":"method","name":"script_name=","children":[],"call":["@env []= ","s to_s "]}," Rack Request host":{"type":"method","name":"host","children":[],"call":["(or\n  (send\n    (ivar :@env) :[]\n    (str \"HTTP_HOST\"))\n  (send\n    (ivar :@env) :[]\n    (str \"SERVER_NAME\"))) gsub ","@env [] "]}," Rack Request content_charset":{"type":"method","name":"content_charset","children":[],"call":[" media_type_params [] "," media_type_params "]}," Rack Request media_type_params":{"type":"method","name":"media_type_params","children":[],"call":["hash []= ","k downcase ","(send\n  (send\n    (send\n      (send nil :content_type) :split\n      (regexp\n        (str \"\\\\s*[;,]\\\\s*\")\n        (regopt))) :[]\n    (irange\n      (int 1)\n      (int -1))) :collect) inject ","s split "," content_type split [] collect "," content_type split [] "," content_type split "," content_type "," content_type nil? "]}," Rack Request media_type":{"type":"method","name":"media_type","children":[],"call":[" content_type split [] downcase "," content_type split [] "," content_type split "," content_type "]}," Rack Request content_type":{"type":"method","name":"content_type","children":[],"call":["@env [] "]}," Rack Request content_length":{"type":"method","name":"content_length","children":[],"call":["@env [] "]}," Rack Request query_string":{"type":"method","name":"query_string","children":[],"call":["@env [] to_s ","@env [] "]}," Rack Request request_method":{"type":"method","name":"request_method","children":[],"call":["@env [] "]}," Rack Request port":{"type":"method","name":"port","children":[],"call":["@env [] to_i ","@env [] "]}," Rack Request path_info":{"type":"method","name":"path_info","children":[],"call":["@env [] to_s ","@env [] "]}," Rack Request script_name":{"type":"method","name":"script_name","children":[],"call":["@env [] to_s ","@env [] "]}," Rack Request scheme":{"type":"method","name":"scheme","children":[],"call":["@env [] "]}," Rack Request body":{"type":"method","name":"body","children":[],"call":["@env [] "]}," Rack Request initialize":{"type":"method","name":"initialize","children":[],"call":[]}," Rack Request new":{"type":"method","name":"new","children":[],"call":[]}," Rack Reloader reload!":{"type":"method","name":"reload!","children":[],"call":["stderr flush "," raise ","stderr puts "," class "," require ","need_reload each ","$LOADED_FEATURES delete "," File  mtime > ","@last - "," File  mtime "," File  exist? ","(send\n  (gvar :$LOAD_PATH) :map) find "," File  join ","$LOAD_PATH map ","loaded =~ ","$LOADED_FEATURES find_all "]}," Rack Reloader call":{"type":"method","name":"call","children":[],"call":["@app call ","Time  now "," reload! ","env [] ","Thread  exclusive ","Time  now > ","@last + ","Time  now  + "]}," Rack Reloader initialize":{"type":"method","name":"initialize","children":[],"call":["Time  now "]}," Rack Recursive include":{"type":"method","name":"include","children":[],"call":["@app call ","env merge ","StringIO  new "," raise ","path [] nil? ","path [] ","@script_name size ","path [] == ","path index == ","path index ","env merge  merge "]}," Rack Recursive call":{"type":"method","name":"call","children":[],"call":[" call ","env merge ","req env ","@app call "," method ","env [] "]}," Rack Recursive initialize":{"type":"method","name":"initialize","children":[],"call":[]}," Rack ForwardRequest initialize":{"type":"method","name":"initialize","children":[],"call":["@env []= ","@url scheme ","@url port ","@url host ","@url query ","@url path "," URI "," URI  scheme "," URI  port "," URI  host "," URI  query "," URI  path "]}," Rack MockResponse match":{"type":"method","name":"match","children":[],"call":["@body match "]}," Rack MockResponse =~":{"type":"method","name":"=~","children":[],"call":["@body =~ "]}," Rack MockResponse []":{"type":"method","name":"[]","children":[],"call":[" headers [] "," headers "]}," Rack MockResponse initialize":{"type":"method","name":"initialize","children":[],"call":["errors string ","@body << ","body each ","@headers []= ","values empty? ","headers each ","Rack Utils HeaderHash  new ","status to_i ","Rack Utils HeaderHash  new  []= "]}," Rack MockRequest env_for":{"type":"method","name":"env_for","children":[],"call":[]}," Rack MockRequest request":{"type":"method","name":"request","children":[],"call":["MockResponse  new ","app call + ","app call ","env [] ","Rack Lint  new ","opts [] "," class env_for ","opts merge "," class ","Rack Lint  new  call + ","Rack Lint  new  call "," class env_for  [] "," class  class env_for _for "]}," Rack MockRequest delete":{"type":"method","name":"delete","children":[],"call":[" request "]}," Rack MockRequest put":{"type":"method","name":"put","children":[],"call":[" request "]}," Rack MockRequest post":{"type":"method","name":"post","children":[],"call":[" request "]}," Rack MockRequest get":{"type":"method","name":"get","children":[],"call":[" request "]}," Rack MockRequest initialize":{"type":"method","name":"initialize","children":[],"call":[]}," Rack MockRequest FatalWarner string":{"type":"method","name":"string","children":[],"call":[]}," Rack MockRequest FatalWarner flush":{"type":"method","name":"flush","children":[],"call":[]}," Rack MockRequest FatalWarner write":{"type":"method","name":"write","children":[],"call":[" raise "]}," Rack MockRequest FatalWarner puts":{"type":"method","name":"puts","children":[],"call":[" raise "]}," Rack Mime mime_type":{"type":"method","name":"mime_type","children":[],"call":["MIME_TYPES  fetch "]}," Rack MethodOverride call":{"type":"method","name":"call","children":[],"call":["@app call ","env []= ","env [] ","HTTP_METHODS  include? ","method to_s upcase ","method to_s ","req POST [] ","req POST ","Request  new ","env [] == ","method to_s upcase  to_s upcase ","method to_s upcase  to_s ","Request  new  POST [] ","Request  new  POST "]}," Rack MethodOverride initialize":{"type":"method","name":"initialize","children":[],"call":[]}," Rack Lock call":{"type":"method","name":"call","children":[],"call":["env []= ","@app call ","@lock synchronize ","env [] "]}," Rack Lock initialize":{"type":"method","name":"initialize","children":[],"call":[]}," Rack Lobster call":{"type":"method","name":"call","children":[],"call":["res finish ","res write ","Response  new "," raise ","req GET [] == ","req GET [] ","req GET ","(send\n  (send\n    (const nil :LobsterString) :split\n    (str \"\\n\")) :map) join ","line ljust reverse ","line ljust ","LobsterString  split map ","LobsterString  split ","Request  new ","Response  new  finish ","Response  new  write ","Request  new  GET [] == ","Request  new  GET [] ","Request  new  GET "]}," Rack Lint close":{"type":"method","name":"close","children":[],"call":["@body close ","@body respond_to? "]}," Rack Lint each":{"type":"method","name":"each","children":[],"call":[" File  exist? ","@body to_path "," assert ","@body respond_to? ","part instance_of? ","part inspect ","@body each "]}," Rack Lint check_content_length":{"type":"method","name":"check_content_length","children":[],"call":["value == ","bytes to_s "," assert ","bytes == ","env [] == ","env [] ","Rack Utils  bytesize ","part kind_of? ","@body each ","@body respond_to? ","Rack Utils STATUS_WITH_NO_ENTITY_BODY  include? ! ","Rack Utils STATUS_WITH_NO_ENTITY_BODY  include? ","status to_i ","key downcase == ","key downcase ","headers each "]}," Rack Lint check_content_type":{"type":"method","name":"check_content_type","children":[],"call":["Rack Utils STATUS_WITH_NO_ENTITY_BODY  include? ","status to_i "," assert ","Rack Utils STATUS_WITH_NO_ENTITY_BODY  include? ! ","key downcase == ","key downcase ","headers each "]}," Rack Lint check_headers":{"type":"method","name":"check_headers","children":[],"call":["item !~ "," assert ","item inspect ","value split each ","value split ","value kind_of? ","a header value must be a String, but the value of  + ","value class ","key =~ ","key !~ ","key downcase != ","key downcase ","key instance_of? ","key class ","header each ","header respond_to? ","header class "]}," Rack Lint check_status":{"type":"method","name":"check_status","children":[],"call":["status to_i >= ","status to_i "," assert "]}," Rack Lint ErrorWrapper close":{"type":"method","name":"close","children":[],"call":[" assert "]}," Rack Lint ErrorWrapper flush":{"type":"method","name":"flush","children":[],"call":["@error flush "]}," Rack Lint ErrorWrapper write":{"type":"method","name":"write","children":[],"call":["@error write ","str instance_of? "," assert "]}," Rack Lint ErrorWrapper puts":{"type":"method","name":"puts","children":[],"call":["@error puts "]}," Rack Lint ErrorWrapper initialize":{"type":"method","name":"initialize","children":[],"call":[]}," Rack Lint check_error":{"type":"method","name":"check_error","children":[],"call":["error respond_to? "," assert ","(sym :puts) each "]}," Rack Lint InputWrapper close":{"type":"method","name":"close","children":[],"call":[" assert "]}," Rack Lint InputWrapper each":{"type":"method","name":"each","children":[],"call":["line instance_of? "," assert ","@input each ","args size == ","args size "]}," Rack Lint InputWrapper read":{"type":"method","name":"read","children":[],"call":["v instance_of? ","v nil? "," assert ","@input read ","args first kind_of? ","args first ","args size == ","args size ","args size <= ","@input read  instance_of? ","@input read  nil? "]}," Rack Lint InputWrapper gets":{"type":"method","name":"gets","children":[],"call":["v instance_of? ","v nil? "," assert ","@input gets ","args size == ","args size ","@input gets  instance_of? ","@input gets  nil? "]}," Rack Lint InputWrapper rewind":{"type":"method","name":"rewind","children":[],"call":["@input rewind "]}," Rack Lint InputWrapper size":{"type":"method","name":"size","children":[],"call":["@input size "]}," Rack Lint InputWrapper initialize":{"type":"method","name":"initialize","children":[],"call":[]}," Rack Lint check_input":{"type":"method","name":"check_input","children":[],"call":["input respond_to? "," assert ","(sym :gets) each "]}," Rack Lint check_env":{"type":"method","name":"check_env","children":[],"call":["env [] != ","env [] "," assert ","env [] =~ ","env include? ! ","env include? ","env [] == "," check_error "," check_input ","(str \"http\") include? ","env [] inspect ","env [] instance_of? ","env [] class ","value instance_of? ","value inspect ","key include? ","env each ","header [] ","(str \"HTTP_CONTENT_TYPE\") each ","(str \"REQUEST_METHOD\") each ","env instance_of? ","env class ","env inspect "]}," Rack Lint _call":{"type":"method","name":"_call","children":[],"call":[" check_content_length "," check_content_type "," check_headers "," check_status ","@app call ","env []= ","ErrorWrapper  new ","env [] ","InputWrapper  new "," check_env "," assert "]}," Rack Lint call":{"type":"method","name":"call","children":[],"call":[" dup _call "," dup "]}," Rack Lint Assertion assert":{"type":"method","name":"assert","children":[],"call":[" raise ","block call "]}," Rack Lint initialize":{"type":"method","name":"initialize","children":[],"call":[]}," Rack Head call":{"type":"method","name":"call","children":[],"call":["env [] == ","env [] ","@app call "]}," Rack Head initialize":{"type":"method","name":"initialize","children":[],"call":[]}," Rack Handler register":{"type":"method","name":"register","children":[],"call":[]}," Rack Handler get":{"type":"method","name":"get","children":[],"call":[]}," Rack Handler WEBrick service":{"type":"method","name":"service","children":[],"call":["body close ","body respond_to? ","res body << ","res body ","body each ","res []= ","vs split each ","vs split ","res cookies concat ","res cookies ","k downcase == ","k downcase ","headers each ","res status= ","status to_i ","@app call ","env []= ","path [] ","path length - ","path length ","env [] length ","env [] ","req request_uri path ","req request_uri ","env delete ","env [] == ","env update ","(str \"yes\") include? ","ENV  [] ","StringIO  new ","req body to_s ","req body ","v nil? ","env delete_if ","req meta_vars ","req meta_vars  []= ","req meta_vars  [] length ","req meta_vars  [] ","req meta_vars  delete ","req meta_vars  [] == ","req meta_vars  update ","req meta_vars  delete_if "]}," Rack Handler WEBrick initialize":{"type":"method","name":"initialize","children":[],"call":["Rack ContentLength  new "]}," Rack Handler WEBrick run":{"type":"method","name":"run","children":[],"call":[]}," Rack Handler Thin run":{"type":"method","name":"run","children":[],"call":[]}," Rack Handler SCGI process_request":{"type":"method","name":"process_request","children":[],"call":["body close ","body respond_to? ","socket write ","body each ","vs split each ","vs split ","headers each "," app call "," app ","env update ","(str \"yes\") include? ","env [] ","StringIO  new ","env []= ","env [] split ","env delete "," replace "," replace  update "," replace  [] "," replace  []= "," replace  [] split "," replace  delete "]}," Rack Handler SCGI initialize":{"type":"method","name":"initialize","children":[{"type":"method","name":"info","children":[],"asgn":[],"call":[]},{"type":"method","name":"error","children":[],"asgn":[],"call":[]}],"call":["Object  new ","Rack Chunked  new ","Rack ContentLength  new ","settings [] "]}," Rack Handler SCGI run":{"type":"method","name":"run","children":[],"call":[]}," Rack Handler Mongrel process":{"type":"method","name":"process","children":[],"call":["body close ","body respond_to? ","response socket flush ","response socket ","response write ","body each ","response send_header ","response header []= ","response header ","vs split each ","vs split ","headers each ","response send_status ","response status= ","status to_i ","@app call ","env delete ","env [] == ","env [] ","env update ","StringIO  new ","request body ","env []= "," replace ","request params "," replace  delete "," replace  [] == "," replace  [] "," replace  update "," replace  []= "]}," Rack Handler Mongrel initialize":{"type":"method","name":"initialize","children":[],"call":["Rack Chunked  new ","Rack ContentLength  new "]}," Rack Handler Mongrel run":{"type":"method","name":"run","children":[],"call":[]}," Rack Handler LSWS send_body":{"type":"method","name":"send_body","children":[],"call":[]}," Rack Handler LSWS send_headers":{"type":"method","name":"send_headers","children":[],"call":[]}," Rack Handler LSWS serve":{"type":"method","name":"serve","children":[],"call":[]}," Rack Handler LSWS run":{"type":"method","name":"run","children":[],"call":[]}," Rack Handler FastCGI send_body":{"type":"method","name":"send_body","children":[],"call":[]}," Rack Handler FastCGI send_headers":{"type":"method","name":"send_headers","children":[],"call":[]}," Rack Handler FastCGI serve":{"type":"method","name":"serve","children":[],"call":[]}," Rack Handler FastCGI ProperStream read":{"type":"method","name":"read","children":[],"call":["args empty? "]}," Rack Handler FastCGI ProperStream each":{"type":"method","name":"each","children":[],"call":[" gets "]}," Rack Handler FastCGI run":{"type":"method","name":"run","children":[],"call":[]}," Rack Handler CGI send_body":{"type":"method","name":"send_body","children":[],"call":[]}," Rack Handler CGI send_headers":{"type":"method","name":"send_headers","children":[],"call":[]}," Rack Handler CGI serve":{"type":"method","name":"serve","children":[],"call":[]}," Rack Handler CGI run":{"type":"method","name":"run","children":[],"call":[]}," Rack File each":{"type":"method","name":"each","children":[],"call":["file read ","F  open "]}," Rack File not_found":{"type":"method","name":"not_found","children":[],"call":["body size to_s ","body size "]}," Rack File serving":{"type":"method","name":"serving","children":[],"call":["size to_s ","Mime  mime_type ","F  extname ","F  mtime httpdate ","F  mtime ","Utils  bytesize ","body first ","F  read ","F  size? ","Utils  bytesize  to_s ","F  size?  to_s ","Utils  byteUtils  bytesize  ","Utils  byteF  size?  ","F  Utils  bytesize ? ","F  F  size? ? "]}," Rack File forbidden":{"type":"method","name":"forbidden","children":[],"call":["body size to_s ","body size "]}," Rack File _call":{"type":"method","name":"_call","children":[],"call":[" not_found "," raise "," serving ","F  readable? ","F  file? ","F  join "," forbidden ","@path_info include? ","Utils  unescape ","env [] ","F  join _info include? ","Utils  unescape  include? "]}," Rack File call":{"type":"method","name":"call","children":[],"call":[" dup _call "," dup "]}," Rack File initialize":{"type":"method","name":"initialize","children":[],"call":[]}," Rack Directory filesize_format":{"type":"method","name":"filesize_format","children":[],"call":["int to_s + ","int to_s ","format % ","int to_f / ","int to_f ","int >= ","FILESIZE_FORMAT  each "]}," Rack Directory each":{"type":"method","name":"each","children":[],"call":["page each_line ","DIR_PAGE  % ","(send\n  (ivar :@files) :map) * ","DIR_FILE  % ","@files map ","@path sub ","DIR_PAGE  %  each_line ","(send\n  (ivar :@(send\n  (ivar :@files) :map) * ) :map) * ","@(send\n  (ivar :@files) :map) *  map "]}," Rack Directory entity_not_found":{"type":"method","name":"entity_not_found","children":[],"call":["size to_s ","Rack Utils  bytesize ","Rack Utils  bytesize  to_s ","Rack Utils  byteRack Utils  bytesize  "]}," Rack Directory list_path":{"type":"method","name":"list_path","children":[],"call":[" entity_not_found "," raise "," list_directory ","@stat directory? ","@app call ","@stat file? ","@stat readable? ","F  stat ","F  stat  directory? ","F  stat  file? ","F  stat  readable? "]}," Rack Directory stat":{"type":"method","name":"stat","children":[],"call":["F  stat "]}," Rack Directory list_directory":{"type":"method","name":"list_directory","children":[],"call":["@files << ","basename << ","stat directory? ","url << ","stat mtime httpdate ","stat mtime "," filesize_format ","Mime  mime_type ","stat size ","F  join ","F  extname ","F  basename "," stat ","Dir  [] sort each ","Dir  [] sort ","Dir  [] ","F  basename  << "," stat  directory? ","F  join  << ","stat stat mtime httpdate  httpdate "," stat  mtime httpdate ","stat stat mtime httpdate  "," stat  mtime "," file filesize_format _format "," filestat size _format ","Mime  mime_Mime  mime_type  ","stat  filesize_format  ","stat stat size  "," stat  size ","F  F  extname name ","F  F  basename  ","  stat  "]}," Rack Directory check_forbidden":{"type":"method","name":"check_forbidden","children":[],"call":["size to_s ","Rack Utils  bytesize ","@path_info include? ","Rack Utils  bytesize  to_s ","Rack Utils  byteRack Utils  bytesize  "]}," Rack Directory _call":{"type":"method","name":"_call","children":[],"call":[" list_path ","F  join "," check_forbidden ","Utils  unescape ","env [] "," check_ check_forbidden  "]}," Rack Directory call":{"type":"method","name":"call","children":[],"call":[" dup _call "," dup "]}," Rack Directory initialize":{"type":"method","name":"initialize","children":[],"call":["Rack File  new ","F  expand_path "]}," Rack Deflater deflate":{"type":"method","name":"deflate","children":[],"call":[]}," Rack Deflater gzip":{"type":"method","name":"gzip","children":[],"call":[]}," Rack Deflater call":{"type":"method","name":"call","children":[],"call":["message length to_s ","message length ","request fullpath ","headers merge ","size to_s ","Rack Utils  bytesize "," class deflate "," class "," class gzip ","Time  now ","Time  httpdate ","headers [] ","headers key? ","headers []= ","vary push join ","vary push ","vary include? ","v strip ","headers [] to_s split map ","headers [] to_s split ","headers [] to_s ","Utils  select_best_encoding ","request accept_encoding ","Request  new ","headers [] to_s =~ ","Utils STATUS_WITH_NO_ENTITY_BODY  include? ","Utils HeaderHash  new ","@app call ","Request  new  fullpath ","headers merge  merge ","Utils HeaderHash  new  merge ","Rack Utils  bytesize  to_s ","Rack Utils  byteRack Utils  bytesize  ","headers merge  [] ","Utils HeaderHash  new  [] ","headers merge  key? ","Utils HeaderHash  new  key? ","headers merge  []= ","Utils HeaderHash  new  []= ","headers merge  [] to_s split map ","Utils HeaderHash  new  [] to_s split map ","headers merge  [] to_s split ","Utils HeaderHash  new  [] to_s split ","headers merge  [] to_s ","Utils HeaderHash  new  [] to_s ","Utils  select_best_Utils  select_best_encoding  ","request accept_Utils  select_best_encoding  ","Request  new  accept_encoding ","headers merge  [] to_s =~ ","Utils HeaderHash  new  [] to_s =~ "]}," Rack Deflater initialize":{"type":"method","name":"initialize","children":[],"call":[]}," Rack ContentType call":{"type":"method","name":"call","children":[],"call":["headers to_hash ","headers [] ","Utils HeaderHash  new ","@app call ","Utils HeaderHash  new  to_hash ","Utils HeaderHash  new  [] "]}," Rack ContentType initialize":{"type":"method","name":"initialize","children":[],"call":[]}," Rack ContentLength call":{"type":"method","name":"call","children":[],"call":["headers []= ","length to_s ","len + "," bytesize ","body to_ary inject ","body to_ary ","body respond_to? ","headers [] ! ","headers [] ","STATUS_WITH_NO_ENTITY_BODY  include? ! ","STATUS_WITH_NO_ENTITY_BODY  include? ","HeaderHash  new ","@app call ","HeaderHash  new  []= ","HeaderHash  new  [] ! ","HeaderHash  new  [] "]}," Rack ContentLength initialize":{"type":"method","name":"initialize","children":[],"call":[]}," Rack ConditionalGet modified_since?":{"type":"method","name":"modified_since?","children":[],"call":["last_modified == ","env [] ","headers [] ","headers []  == "]}," Rack ConditionalGet etag_matches?":{"type":"method","name":"etag_matches?","children":[],"call":["etag == ","env [] ","headers [] ","headers []  == "]}," Rack ConditionalGet call":{"type":"method","name":"call","children":[],"call":[" modified_since? "," etag_matches? ","Utils HeaderHash  new ","@app call ","(str \"GET\") include? ","env [] "]}," Rack ConditionalGet initialize":{"type":"method","name":"initialize","children":[],"call":[]}," Rack CommonLogger each":{"type":"method","name":"each","children":[],"call":["@logger << ","%s - %s [%s] \"%s %s%s %s\" %d %s %0.4f\n % ","@now - ","length to_s ","length zero? ","@status to_s [] ","@status to_s ","@env [] ","? + ","@env [] empty? ","@now strftime ","Time  now ","part size ","@body each ","Time  now  - ","Time  now  strftime "]}," Rack CommonLogger <<":{"type":"method","name":"<<","children":[],"call":["@env [] flush ","@env [] ","@env [] write "]}," Rack CommonLogger close":{"type":"method","name":"close","children":[],"call":["@body close ","@body respond_to? "]}," Rack CommonLogger _call":{"type":"method","name":"_call","children":[],"call":["@app call ","Time  now "]}," Rack CommonLogger call":{"type":"method","name":"call","children":[],"call":[" dup _call "," dup "]}," Rack CommonLogger initialize":{"type":"method","name":"initialize","children":[],"call":[]}," Rack Chunked close":{"type":"method","name":"close","children":[],"call":["@body close ","@body respond_to? "]}," Rack Chunked each":{"type":"method","name":"each","children":[],"call":["(str \"0\") join ","(send\n  (lvar :size) :to_s\n  (int 16)) join ","size to_s ","size == "," bytesize ","@body each ","(send\n  (lvar : bytesize ) :to_s\n  (int 16)) join "," bytesize  to_s "," bytesize  == "," byte bytesize  "]}," Rack Chunked chunk":{"type":"method","name":"chunk","children":[],"call":["headers to_hash ","headers []= ","headers delete "]}," Rack Chunked call":{"type":"method","name":"call","children":[],"call":[" dup chunk "," dup ","headers to_hash ","headers [] ","STATUS_WITH_NO_ENTITY_BODY  include? ","env [] == ","env [] ","HeaderHash  new ","@app call ","HeaderHash  new  to_hash ","HeaderHash  new  [] "]}," Rack Chunked initialize":{"type":"method","name":"initialize","children":[],"call":[]}," Rack Cascade include?":{"type":"method","name":"include?","children":[],"call":["@apps include? "]}," Rack Cascade add":{"type":"method","name":"add","children":[],"call":["@apps << "]}," Rack Cascade call":{"type":"method","name":"call","children":[],"call":["@catch include? ","status to_i ","app call ","@apps each "," raise ","@apps empty? "]}," Rack Cascade initialize":{"type":"method","name":"initialize","children":[],"call":[]}," Rack Builder call":{"type":"method","name":"call","children":[],"call":[" to_app call "," to_app "]}," Rack Builder to_app":{"type":"method","name":"to_app","children":[],"call":["e call ","@ins [] reverse inject ","@ins [] reverse ","@ins [] ","@ins last ","@ins []= ","Rack URLMap  new ","Hash  === "]}," Rack Builder map":{"type":"method","name":"map","children":[],"call":[" map ","@ins << ","@ins last []= "," class new to_app "," class new "," class ","@ins last ","@ins last kind_of? "]}," Rack Builder run":{"type":"method","name":"run","children":[],"call":["@ins << "]}," Rack Builder use":{"type":"method","name":"use","children":[],"call":["@ins << ","middleware new "," lambda "]}," Rack Builder app":{"type":"method","name":"app","children":[],"call":[]}," Rack Builder initialize":{"type":"method","name":"initialize","children":[],"call":[" instance_eval "," block_given? "]}," Rack Auth OpenIDAuth call":{"type":"method","name":"call","children":[],"call":["to call "," auth call "," auth "]}," Rack Auth OpenIDAuth initialize":{"type":"method","name":"initialize","children":[],"call":["OpenID  new "]}," Rack Auth OpenID failure":{"type":"method","name":"failure","children":[],"call":[" unauthorized "]}," Rack Auth OpenID cancel":{"type":"method","name":"cancel","children":[],"call":[" access_denied ","session clear "]}," Rack Auth OpenID setup_needed":{"type":"method","name":"setup_needed","children":[],"call":[" redirect "," req script_name + + + + "," req script_name + + + "," req script_name + + "," openid_param "," req script_name + "," req script_name "," req ","session []= ","session [] "]}," Rack Auth OpenID success":{"type":"method","name":"success","children":[],"call":[" redirect "," realm ","session []= ","response data "," Response  from_success_response ","ext name [] downcase ","ext name [] ","ext name "," extensions keys each "," extensions keys "," extensions ","oid identity_url ","oid display_identifier ","session clear "," Response  from_success_response  data "," Response  from_success_ Response  from_success_response  "]}," Rack Auth OpenID foreign_server_failure":{"type":"method","name":"foreign_server_failure","children":[],"call":[]}," Rack Auth OpenID access_denied":{"type":"method","name":"access_denied","children":[],"call":[]}," Rack Auth OpenID unauthorized":{"type":"method","name":"unauthorized","children":[],"call":[]}," Rack Auth OpenID bad_request":{"type":"method","name":"bad_request","children":[],"call":[]}," Rack Auth OpenID redirect":{"type":"method","name":"redirect","children":[],"call":[]}," Rack Auth OpenID confirm_post_params":{"type":"method","name":"confirm_post_params","children":[],"call":["r write ","oid form_markup ","Rack Response  new finish ","Rack Response  new "]}," Rack Auth OpenID within_realm?":{"type":"method","name":"within_realm?","children":[],"call":["uri host match ","uri host ","Regexp  escape sub + ","Regexp  escape sub ","Regexp  escape ","realm host ","realm host [] ","uri host == ","uri path [] == ","realm path ","uri path [] ","realm path size ","uri path ","uri absolute? ","URI  parse "," realm ","uri to_s ","URI  parse  host match ","URI  parse  host ","URI  parse  host [] ","URI  parse  host == ","URI  parse  path [] == ","URI  parse  path ","URI  parse  path [] ","URI  parse  path size ","URI  parse  absolute? "," URI  parse  ","URI  parse  to_s "]}," Rack Auth OpenID valid_extension?":{"type":"method","name":"valid_extension?","children":[],"call":[" raise "," Response  respond_to? ! "," Response  respond_to? ","(send\n  (array\n    (str \"NS_URI\")\n    (str \"Request\")\n    (str \"Response\")) :all?) ! ","ext const_defined? ","(str \"NS_URI\") all? "]}," Rack Auth OpenID add_extension":{"type":"method","name":"add_extension","children":[],"call":[" extensions []= "," extensions "," raise "," valid_extension? "]}," Rack Auth OpenID finish":{"type":"method","name":"finish","children":[],"call":[" __send__ ","oid status "," raise ","ValidStatus  include? "," p ","req env [] puts ","oid message ","req env [] ","req env ","req env []= ","consumer complete ","req url ","req GET ","consumer complete  status ","consumer complete  message "]}," Rack Auth OpenID check":{"type":"method","name":"check","children":[],"call":[" foreign_server_failure ","req env [] puts ","(send\n  (lvar :e) :message) * ","e backtrace ","e message ","req env [] ","req env "," confirm_post_params "," realm "," redirect ","oid redirect_url ","oid send_redirect? ","session key? ","session []= ","req url "," return_to ","req GET [] "," openid_param ","req GET ","oid add_extension "," Request  new "," extensions each "," extensions "," p ","oid message ","req env []= ","consumer begin ","consumer begin  redirect_url ","consumer begin  send_redirect? ","consumer begin  add_extension ","consumer begin  message "]}," Rack Auth OpenID call":{"type":"method","name":"call","children":[],"call":[" unauthorized "," check ","request GET [] ","request GET "," bad_request "," finish ","session key? "," OpenID Consumer  new ","Rack Request  new "," raise ","session is_a? ","env_session [] ","env_session is_a? ","env [] ","env []= ","Rack Request  new  GET [] ","Rack Request  new  GET "," bad_Rack Request  new  ","env []  [] ","env []  is_a? "]}," Rack Auth OpenID initialize":{"type":"method","name":"initialize","children":[],"call":["options [] ! ! ","options [] ! ","options [] "," add_extension ","extensions each ","options delete "," OpenID Store Memory  new ","ruri to_s "," raise "," within_realm? ","ruri fragment nil? ","ruri fragment ","ruri scheme =~ ","ruri scheme ","ruri absolute? "," URI ","realm to_s ","realm path= ","realm path empty? ","realm path ","realm host =~ ","realm host ","realm scheme =~ ","realm scheme ","realm fragment nil? ","realm fragment ","realm absolute? ","options delete  each "," URI  to_s ","options []  to_s "," within_ URI ? "," URI  fragment nil? ","options []  fragment nil? "," URI  fragment ","options []  fragment "," URI  scheme =~ ","options []  scheme =~ "," URI  scheme ","options []  scheme "," URI  absolute? ","options []  absolute? "," URI  path= "," URI  path empty? "," URI  path "," URI  host =~ "," URI  host "]}," Rack Request openid_response":{"type":"method","name":"openid_response","children":[],"call":["@env [] "]}," Rack Request openid_request":{"type":"method","name":"openid_request","children":[],"call":["@env [] "]}," Rack Auth Digest Request method_missing":{"type":"method","name":"method_missing","children":[],"call":[" params [] "," params "," params has_key? ","sym to_s "," params has_sym to_s ? "]}," Rack Auth Digest Request params":{"type":"method","name":"params","children":[],"call":["Params  parse "," parts last "," parts "]}," Rack Auth Digest Request nonce":{"type":"method","name":"nonce","children":[],"call":["Nonce  parse "," params [] "," params "]}," Rack Auth Digest Request correct_uri?":{"type":"method","name":"correct_uri?","children":[],"call":["(send\n  (send\n    (send\n      (ivar :@env) :[]\n      (str \"SCRIPT_NAME\")) :to_s) :+\n  (send\n    (send\n      (ivar :@env) :[]\n      (str \"PATH_INFO\")) :to_s)) == "," uri ","@env [] to_s + ","@env [] to_s ","@env [] "]}," Rack Auth Digest Request digest?":{"type":"method","name":"digest?","children":[],"call":["digest == "," scheme "]}," Rack Auth Digest Request method":{"type":"method","name":"method","children":[],"call":["@env [] "]}," Rack Auth Digest Params quote":{"type":"method","name":"quote","children":[],"call":["\" << << ","\" << ","str gsub "]}," Rack Auth Digest Params to_s":{"type":"method","name":"to_s","children":[],"call":["(send nil :inject\n  (array)) join ","parts << ","(begin\n  (lvar :k)) + "," quote ","v to_s ","UNQUOTED  include? "," inject "]}," Rack Auth Digest Params []=":{"type":"method","name":"[]=","children":[],"call":["v to_s ","k to_s "]}," Rack Auth Digest Params []":{"type":"method","name":"[]","children":[],"call":["k to_s "]}," Rack Auth Digest Params initialize":{"type":"method","name":"initialize","children":[],"call":[" block_given? "]}," Rack Auth Digest Params split_header_value":{"type":"method","name":"split_header_value","children":[],"call":[]}," Rack Auth Digest Params dequote":{"type":"method","name":"dequote","children":[],"call":[]}," Rack Auth Digest Params parse":{"type":"method","name":"parse","children":[],"call":[]}," Rack Auth Digest Nonce fresh?":{"type":"method","name":"fresh?","children":[],"call":[" stale? ! "," stale? "]}," Rack Auth Digest Nonce stale?":{"type":"method","name":"stale?","children":[],"call":["(send\n  (ivar :@timestamp) :-\n  (send\n    (send\n      (const nil :Time) :now) :to_i)) < "," class time_limit "," class ","@timestamp - ","Time  now to_i ","Time  now "," class time_limit nil? ! "," class time_limit nil? "]}," Rack Auth Digest Nonce valid?":{"type":"method","name":"valid?","children":[],"call":[" digest == "," digest "]}," Rack Auth Digest Nonce digest":{"type":"method","name":"digest","children":[],"call":[" Digest MD5  hexdigest ","(ivar :@timestamp) * "," class private_key "," class "]}," Rack Auth Digest Nonce to_s":{"type":"method","name":"to_s","children":[],"call":["(begin\n  (send\n    (array\n      (ivar :@timestamp)\n      (send nil :digest)) :*\n    (str \" \"))) pack strip ","(begin\n  (send\n    (array\n      (ivar :@timestamp)\n      (send nil :digest)) :*\n    (str \" \"))) pack ","(ivar :@timestamp) * "," digest "]}," Rack Auth Digest Nonce initialize":{"type":"method","name":"initialize","children":[],"call":["timestamp to_i "]}," Rack Auth Digest Nonce parse":{"type":"method","name":"parse","children":[],"call":[]}," Rack Auth Digest MD5 digest":{"type":"method","name":"digest","children":[],"call":[" KD ","(send\n  (lvar :auth) :nonce) * "," H "," A2 ","auth cnonce ","auth nc ","auth nonce "," A1 "," passwords_hashed? "]}," Rack Auth Digest MD5 A2":{"type":"method","name":"A2","children":[],"call":["(send\n  (lvar :auth) :method) * ","auth uri ","auth method "]}," Rack Auth Digest MD5 A1":{"type":"method","name":"A1","children":[],"call":["(send\n  (lvar :auth) :username) * ","auth realm ","auth username "]}," Rack Auth Digest MD5 KD":{"type":"method","name":"KD","children":[],"call":[" H ","(lvar :secret) * "]}," Rack Auth Digest MD5 md5":{"type":"method","name":"md5","children":[],"call":[" Digest MD5  hexdigest "]}," Rack Auth Digest MD5 valid_digest?":{"type":"method","name":"valid_digest?","children":[],"call":[" digest == ","auth response "," digest ","@authenticator call ","auth username "]}," Rack Auth Digest MD5 valid_nonce?":{"type":"method","name":"valid_nonce?","children":[],"call":["auth nonce valid? ","auth nonce "]}," Rack Auth Digest MD5 valid_opaque?":{"type":"method","name":"valid_opaque?","children":[],"call":[" H == ","auth opaque "," H "," opaque "]}," Rack Auth Digest MD5 valid_qop?":{"type":"method","name":"valid_qop?","children":[],"call":["QOP  == ","auth qop "]}," Rack Auth Digest MD5 valid?":{"type":"method","name":"valid?","children":[],"call":[" valid_digest? "," valid_nonce? "," valid_opaque? "]}," Rack Auth Digest MD5 challenge":{"type":"method","name":"challenge","children":[],"call":[" params "]}," Rack Auth Digest MD5 params":{"type":"method","name":"params","children":[],"call":["params []= ","hash each "," H "," opaque ","Nonce  new to_s ","Nonce  new "," realm ","Params  new "]}," Rack Auth Digest MD5 call":{"type":"method","name":"call","children":[],"call":[" unauthorized ","@app call ","env []= ","auth username "," challenge ","auth nonce stale? ","auth nonce "," valid? "," bad_request "," valid_qop? ! "," valid_qop? ","auth correct_uri? ! ","auth correct_uri? ","auth digest? ! ","auth digest? ","auth provided? ","Request  new "," unRequest  new orized ","Request  new  username ","Request  new  nonce stale? ","Request  new  nonce ","Request  new  correct_uri? ! ","Request  new  correct_uri? ","Request  new  digest? ! ","Request  new  digest? ","Request  new  provided? "]}," Rack Auth Digest MD5 passwords_hashed?":{"type":"method","name":"passwords_hashed?","children":[],"call":["@passwords_hashed ! ! ","@passwords_hashed ! "]}," Rack Auth Digest MD5 initialize":{"type":"method","name":"initialize","children":[],"call":[]}," Rack Auth Basic Request username":{"type":"method","name":"username","children":[],"call":[" credentials first "," credentials "]}," Rack Auth Basic Request credentials":{"type":"method","name":"credentials","children":[],"call":[" params unpack first split "," params unpack first "," params unpack "," params "]}," Rack Auth Basic Request basic?":{"type":"method","name":"basic?","children":[],"call":["basic == "," scheme "]}," Rack Auth Basic valid?":{"type":"method","name":"valid?","children":[],"call":["@authenticator call ","auth credentials "]}," Rack Auth Basic challenge":{"type":"method","name":"challenge","children":[],"call":["Basic realm=\"%s\" % "," realm "]}," Rack Auth Basic call":{"type":"method","name":"call","children":[],"call":[" unauthorized ","@app call ","env []= ","auth username "," valid? "," bad_request ","auth basic? ","auth provided? ","Basic Request  new "," unBasic Request  new orized ","Basic Request  new  username ","Basic Request  new  basic? ","Basic Request  new  provided? "]}," Rack Auth AbstractRequest authorization_key":{"type":"method","name":"authorization_key","children":[],"call":["@env has_key? ","AUTHORIZATION_KEYS  detect "]}," Rack Auth AbstractRequest params":{"type":"method","name":"params","children":[],"call":[" parts last "," parts "]}," Rack Auth AbstractRequest scheme":{"type":"method","name":"scheme","children":[],"call":[" parts first downcase to_sym "," parts first downcase "," parts first "," parts "]}," Rack Auth AbstractRequest parts":{"type":"method","name":"parts","children":[],"call":["@env [] split ","@env [] "," authorization_key "]}," Rack Auth AbstractRequest provided?":{"type":"method","name":"provided?","children":[],"call":[" authorization_key nil? ! "," authorization_key nil? "," authorization_key "]}," Rack Auth AbstractRequest initialize":{"type":"method","name":"initialize","children":[],"call":[]}," Rack Auth AbstractHandler bad_request":{"type":"method","name":"bad_request","children":[],"call":[]}," Rack Auth AbstractHandler unauthorized":{"type":"method","name":"unauthorized","children":[],"call":["www_authenticate to_s "]}," Rack Auth AbstractHandler initialize":{"type":"method","name":"initialize","children":[],"call":[]}," Rack Adapter Camping call":{"type":"method","name":"call","children":[],"call":["controller body to_s ","controller body ","controller headers ","controller status ","h []= ","v to_s ","v kind_of? ","h each_pair ","@app run ","env [] ","@app run  body to_s ","@app run  body ","controller controller headers eaders ","@app run  headers ","@app run  status ","controller headers  []= ","controller headers  eaccontroller headers _pair "]}," Rack Adapter Camping initialize":{"type":"method","name":"initialize","children":[],"call":[]}," ActionController Session AbstractStore SessionHash stale_session_check!":{"type":"method","name":"stale_session_check!","children":[],"call":[" raise ","1 constantize ","argument_error message =~ ","argument_error message "]}," ActionController RewindableInput call":{"type":"method","name":"call","children":[],"call":["@app call ","env []= ","RewindableIO  new ","env [] "]}," ActionController RewindableInput initialize":{"type":"method","name":"initialize","children":[],"call":[]}," ActionController RewindableInput RewindableIO method_missing":{"type":"method","name":"method_missing","children":[],"call":["@io __send__ "," StringIO  new ","@io read "," StringIO  new  __send__ "," StringIO  new  read "]}," ActionController RewindableInput RewindableIO initialize":{"type":"method","name":"initialize","children":[],"call":["io is_a? "]}," ActionController Reloader call":{"type":"method","name":"call","children":[],"call":["Dispatcher  cleanup_application ","@app call ","Dispatcher  reload_application ","BodyWrapper  new "]}," ActionController Reloader initialize":{"type":"method","name":"initialize","children":[],"call":[]}," ActionView SafeBuffer to_s":{"type":"method","name":"to_s","children":[],"call":[]}," ActionView SafeBuffer html_safe!":{"type":"method","name":"html_safe!","children":[],"call":[]}," ActionView SafeBuffer html_safe?":{"type":"method","name":"html_safe?","children":[],"call":[]}," ActionView SafeBuffer concat":{"type":"method","name":"concat","children":[],"call":[" << "]}," ActionView SafeBuffer <<":{"type":"method","name":"<<","children":[],"call":["ERB Util  h ","value html_safe? "]}," ActionView NullResolver query":{"type":"method","name":"query","children":[],"call":["ActionView Template  new "," extract_handler_and_format "]}," ActionView FixtureResolver query":{"type":"method","name":"query","children":[],"call":["t identifier match captures reject size -@ ","t identifier match captures reject size ","t identifier match captures reject ","t identifier match captures ","t identifier match ","t identifier ","templates sort_by ","templates << ","Template  new "," extract_handler_and_format ","(send\n  (ivar :@hash) :select) each ","k =~ ","@hash select ","query << << << ","query << << ","(send\n  (lvar :ext) :map) join ","Regexp  escape ","ext map ","query << ","exts each ","_path =~ ","@hash each ","path virtual ","(send\n  (send\n    (lvar :exts) :[]\n    (lvar :ext)) :map) join ","exts [] map ","exts [] ","EXTENSIONS  each ","Regexp  escape  << << << ","Regexp  escape  << << ","Regexp  escape  << "]}," ActionView FixtureResolver initialize":{"type":"method","name":"initialize","children":[],"call":[]}," ActionView TestCase Behavior method_missing":{"type":"method","name":"method_missing","children":[],"call":["@controller __send__ ","@controller _routes named_routes helpers include? ","@controller _routes named_routes helpers ","@controller _routes named_routes ","@controller _routes ","@controller respond_to? ","@controller _router named_routes helpers include? ","@controller _router named_routes helpers ","@controller _router named_routes ","@controller _router ","@controller _routes mounted_helpers method_defined? ","@controller _routes mounted_helpers "]}," ActionView TestCase Behavior _routes":{"type":"method","name":"_routes","children":[],"call":["@controller _routes ","@controller respond_to? "]}," ActionView TestCase Behavior _assigns":{"type":"method","name":"_assigns","children":[],"call":["hash []= "," instance_variable_get ","var [] to_sym ","var [] "," _instance_variables inject "," _instance_variables "," view_assigns ","ActiveSupport Deprecation  warn ","ActionView::TestCase#_assigns is deprecated and will be removed in future versions.  << "]}," ActionView TestCase Behavior _instance_variables":{"type":"method","name":"_instance_variables","children":[],"call":[" instance_variables map - "," instance_variables map "," instance_variables "," instance_variables - "]}," ActionView TestCase Behavior view":{"type":"method","name":"view","children":[],"call":["view output_buffer= "," output_buffer ","view locals= "," locals ","view extend ","view singleton_class send ","view singleton_class ","@controller _routes url_helpers ","@controller _routes "," _helpers ","ActionView Base  new ","ActionController Base  view_paths ","@controller view_context ","view rendered_views= "," rendered_views ","ActionView Base  new  output_buffer= ","@controller view_context  output_buffer= ","ActionView Base  new  locals= ","@controller view_context  locals= ","ActionView Base  new  extend ","@controller view_context  extend ","ActionView Base  new  singleton_class send ","@controller view_context  singleton_class send ","ActionView Base  new  singleton_class ","@controller view_context  singleton_class ","ActionController Base  ActionView Base  new _paths ","ActionController Base  @controller view_context _paths ","@controller ActionView Base  new _context ","@controller @controller view_context _context ","ActionView Base  new  rendered_ActionView Base  new s= ","@controller view_context  rendered_@controller view_context s= "," rendered_ActionView Base  new s "," rendered_@controller view_context s "]}," ActionView TestCase Behavior Locals _render_partial":{"type":"method","name":"_render_partial","children":[],"call":[" locals []= ","options [] "," locals "]}," ActionView TestCase Behavior make_test_case_available_to_view!":{"type":"method","name":"make_test_case_available_to_view!","children":[],"call":[" private "," define_method "," _helpers module_eval "," _helpers "," private_method_defined? "]}," ActionView TestCase Behavior say_no_to_protect_against_forgery!":{"type":"method","name":"say_no_to_protect_against_forgery!","children":[{"type":"method","name":"protect_against_forgery?","children":[],"asgn":[],"call":[]}],"call":[" _helpers module_eval "," _helpers "," remove_possible_method "]}," ActionView TestCase Behavior response_from_page_or_rjs":{"type":"method","name":"response_from_page_or_rjs","children":[],"call":["HTML Document  new root ","HTML Document  new ","@rendered blank? "]}," ActionView TestCase Behavior locals":{"type":"method","name":"locals","children":[],"call":[]}," ActionView TestCase Behavior render":{"type":"method","name":"render","children":[],"call":["@rendered << "," view render "," view "," view assign "," _assigns "," _view render "," _view "," view_assigns "]}," ActionView TestCase Behavior config":{"type":"method","name":"config","children":[],"call":["@controller config ","@controller respond_to? "]}," ActionView TestCase Behavior setup_with_controller":{"type":"method","name":"setup_with_controller","children":[],"call":[" say_no_to_protect_against_forgery! "," make_test_case_available_to_view! "," class send "," class ","ActiveSupport SafeBuffer  new ","@controller request ","ActionView TestCase TestController  new ","ActionView TestCase TestController  new  request "]}," ActionView TestCase Behavior ClassMethods include_helper_modules!":{"type":"method","name":"include_helper_modules!","children":[],"call":[" include "," _helpers "," helper "," helper_class "]}," ActionView TestCase Behavior ClassMethods helper_class":{"type":"method","name":"helper_class","children":[],"call":[" determine_default_helper_class "," name "]}," ActionView TestCase Behavior ClassMethods helper_method":{"type":"method","name":"helper_method","children":[],"call":[" _helpers module_eval "," _helpers ","methods flatten each ","methods flatten "]}," ActionView TestCase Behavior ClassMethods determine_default_helper_class":{"type":"method","name":"determine_default_helper_class","children":[],"call":["mod is_a? ","name sub constantize ","name sub ","name sub safe_constantize ","(send\n  (const nil :Class) :===\n  (lvar :constant)) ! ","Class  === ","Module  === "," determine_constant_from_test_name ","name sub constantize  is_a? ","name sub safe_constantize  is_a? "]}," ActionView TestCase Behavior ClassMethods tests":{"type":"method","name":"tests","children":[],"call":[" helper_class= ","(begin\n  (send\n    (send\n      (lvar :helper_class) :to_s) :underscore)) camelize safe_constantize ","(begin\n  (send\n    (send\n      (lvar :helper_class) :to_s) :underscore)) camelize ","helper_class to_s underscore ","helper_class to_s "]}," ActionView TestCase TestController controller_path=":{"type":"method","name":"controller_path=","children":[],"call":[" class controller_path= "," class "]}," ActionView Template identifier_method_name":{"type":"method","name":"identifier_method_name","children":[],"call":[" inspect gsub "," inspect "]}," ActionView Template build_method_name":{"type":"method","name":"build_method_name","children":[],"call":["(str \"_\") gsub ","locals keys hash ","locals keys "," __id__ ","@identifier hash "," identifier_method_name ","@method_names [] ","(str \"_render_template_\") gsub "]}," ActionView Template compile":{"type":"method","name":"compile","children":[],"call":[" raise ","ActionView Template Error  new ","logger debug ","e backtrace join ","e backtrace ","view logger ","ObjectSpace  define_finalizer ","Finalizer  [] ","mod module_eval "," identifier ","WrongEncodingError  new ","Encoding  default_internal ","source valid_encoding? ","source encode! ","source force_encoding ","code encoding ","source encoding_aware? ","@virtual_path inspect ","@handler call "," source "," source encode! "," source valid_encoding? ","@handler handles_encoding? ","@handler respond_to? ","magic_encoding ! "," source force_encoding ","Encoding  default_external "," source sub! "," source encoding_aware? ","(send\n  (send\n    (lvar :locals) :keys) :map!) join ","locals keys map! ","locals keys ","view respond_to? "," build_method_name ","ActionView CompiledTemplates  module_eval ","@details [] inspect ","@details [] ","Encoding  respond_to? ","code sub! "," source to_str "," source html_safe? "," locals_code "," method_name "," encode! ","source valid_Encoding  default_external ? ","source en@handler call ! ","source force_Encoding  default_external  ","@handler call  encoding ","code Encoding  default_external  ","source Encoding  default_external _aware? "," source en@handler call ! "," source valid_Encoding  default_external ? ","@handler handles_Encoding  default_external ? ","magic_Encoding  default_external  ! "," source force_Encoding  default_external  "," source Encoding  default_external _aware? "," build_ build_method_name  "," build_ method_name  ","@handler call  sub! "," locals_@handler call  "," (send\n  (send\n    (lvar :locals) :keys) :map!) join  ","  build_method_name  ","  method_name  "," en@handler call ! "]}," ActionView Template inspect":{"type":"method","name":"inspect","children":[],"call":[" identifier "," identifier sub ","Rails  root "]}," ActionView Template counter_name":{"type":"method","name":"counter_name","children":[],"call":["(begin\n  (send nil :variable_name)) to_sym "," variable_name "]}," ActionView Template variable_name":{"type":"method","name":"variable_name","children":[],"call":["@virtual_path [] to_sym ","@virtual_path [] "," identifier [] to_sym "," identifier [] "," identifier "]}," ActionView Template Text partial?":{"type":"method","name":"partial?","children":[],"call":[]}," ActionView Template Text formats":{"type":"method","name":"formats","children":[],"call":["@mime_type to_sym "," mime_type ","@mime_type to_s ","@mime_type ref ","@mime_type respond_to? ","@type to_sym ","@type to_s ","@type ref ","@type respond_to? "]}," ActionView Template Text render":{"type":"method","name":"render","children":[],"call":[" to_s "," to_str "]}," ActionView Template Text inspect":{"type":"method","name":"inspect","children":[],"call":[]}," ActionView Template Text identifier":{"type":"method","name":"identifier","children":[],"call":[]}," ActionView Template Text initialize":{"type":"method","name":"initialize","children":[],"call":["Mime  [] ","string to_s ","Types  [] "]}," ActionView FileSystemResolver eql?":{"type":"method","name":"eql?","children":[],"call":[" to_path == ","resolver to_path "," to_path "," class equal? ","resolver class "," class "]}," ActionView FileSystemResolver initialize":{"type":"method","name":"initialize","children":[],"call":["File  expand_path "," raise ","path is_a? ","Pathname  new expand_path ","Pathname  new "]}," ActionView PathResolver extract_handler_and_format":{"type":"method","name":"extract_handler_and_format","children":[],"call":["handler default_format ","handler respond_to? ","pieces pop to_sym ","pieces pop ","Mime  [] ","pieces last ","ActiveSupport Deprecation  warn "," caller ","path gsub ","pieces [] == ","pieces [] ","pieces last == ","Template  handler_class_for_extension ","pieces shift ","File  basename split ","File  basename ","Template  handler_for_extension ","Template Types  [] ","Template  handler_class_for_extension  default_format ","Template  handler_for_extension  default_format ","Template  handler_class_for_extension  respond_to? ","Template  handler_for_extension  respond_to? ","File  basename split  pop to_sym ","File  basename split  pop ","File  basename split  last ","File  basename split  [] == ","File  basename split  [] ","File  basename split  last == ","Template  Template  handler_class_for_extension _class_for_extension ","Template  Template  handler_for_extension _class_for_extension ","Template  handler_class_for_pieces pop  ","File  basename split  shift ","Template  Template  handler_class_for_extension _for_extension ","Template  Template  handler_for_extension _for_extension ","Template  handler_for_pieces pop  "]}," ActionView PathResolver query":{"type":"method","name":"query","children":[],"call":["Template  new ","File  expand_path ","io read ","File  open "," extract_handler_and_format ","(send\n  (send\n    (const nil :Dir) :[]\n    (lvar :query)) :reject) map ","File  directory? ","Dir  [] reject ","Dir  [] ","query gsub! ","query << << << ","query << << ","(send\n  (lvar :ext) :map) join ","ext map ","query << ","exts each ","File  join "," path_to_details ","File  read ","templates << ","sanitizer [] include? ! ","sanitizer [] include? ","sanitizer [] ","Dir  [] each ","h []= ","File  dirname ","Hash  new "," escape_entry "," mtime ","path virtual "," build_query ","File  binread ","template_paths map "," find_template_paths "," reject_files_external_to_app "," class allow_external_files "," class ","(send\n  (send\n    (const nil :Dir) :[]\n    (lvar :File  join )) :reject) map ","(send\n  (send\n    (const nil :Dir) :[]\n    (lvar : escape_entry )) :reject) map ","(send\n  (send\n    (const nil :Dir) :[]\n    (lvar : build_query )) :reject) map ","File  join  gsub! "," escape_entry  gsub! "," build_query  gsub! ","File  join  << << << "," escape_entry  << << << "," build_query  << << << ","File  join  << << "," escape_entry  << << "," build_query  << << ","File  join  << "," escape_entry  << "," build_query  << "," build_File  join  "," build_ escape_entry  "," build_ build_query  "," find_template_paths  map "," reject_files_external_to_app  map "," find_ find_template_paths  "," find_ reject_files_external_to_app  "]}," ActionView PathResolver build_path":{"type":"method","name":"build_path","children":[],"call":["path << ","prefix empty? "]}," ActionView PathResolver find_templates":{"type":"method","name":"find_templates","children":[],"call":[" query ","details [] ","EXTENSION_ORDER  map "," build_path ","Path  build ","Hash  [] ","(send\n  (const nil :EXTENSIONS) :map) flatten ","EXTENSIONS  map "," build_ build_path  "," build_Path  build  "]}," ActionView PathResolver to_s":{"type":"method","name":"to_s","children":[],"call":["@path to_s "]}," ActionView Resolver cached":{"type":"method","name":"cached","children":[],"call":["@cached [] [] [] [] ","@cached [] [] [] ","@cached [] [] ","@cached [] "," caching? ","@cached []= ","@cached key? ","scope []= ","t updated_at > ","t updated_at ","fresh any? ","fresh empty? ","mtime ! ","cache map max ","cache map ","scope [] "," decorate ","@cached [] [] [] [] [] "," sort_locals ","(send\n  (lvar :locals) :map) sort! ","x to_s ","locals map ","@cache cache ","@scope [] d [] [] [] [] ","@scope [] d [] [] [] ","@scope [] d [] [] ","@scope [] d [] ","@scope [] d []= ","@scope [] d key? ","@cached [] [] [] []  []= "," decorate  any? "," decorate  empty? ","scope []  map max ","scope []  map ","@cached [] [] [] []  [] ","@scope [] d [] [] [] [] [] "," sort_ sort_locals  "," sort_(send\n  (lvar :locals) :map) sort!  ","(send\n  (lvar : sort_locals ) :map) sort! ","(send\n  (lvar :(send\n  (lvar :locals) :map) sort! ) :map) sort! "," sort_locals  map ","(send\n  (lvar :locals) :map) sort!  map ","@scope []  scope []  "]}," ActionView Resolver find_templates":{"type":"method","name":"find_templates","children":[],"call":[" raise "]}," ActionView Resolver caching?":{"type":"method","name":"caching?","children":[],"call":["Rails  application config cache_classes ","Rails  application config ","Rails  application ","(send\n  (const nil :Rails) :application) ! "]}," ActionView Resolver find_all":{"type":"method","name":"find_all","children":[],"call":[" find_templates "," cached "," normalize_name "," normalize_details "," normalize_ normalize_details  "]}," ActionView Resolver clear_cache":{"type":"method","name":"clear_cache","children":[],"call":["@cached clear ","@cache clear "]}," ActionView Resolver initialize":{"type":"method","name":"initialize","children":[],"call":["h1 []= ","h2 []= ","h3 []= ","Hash  new ","options [] ","h4 []= ","Cache  new "]}," ActionView Template Handlers handler_class_for_extension":{"type":"method","name":"handler_class_for_extension","children":[],"call":[" registered_template_handler ","extension to_sym "," handler_for_extension ","ActiveSupport Deprecation  warn "," caller ","handler_class_for_extension is deprecated.  << "]}," ActionView Template Handlers register_default_template_handler":{"type":"method","name":"register_default_template_handler","children":[],"call":[" register_template_handler "]}," ActionView Template Handlers registered_template_handler":{"type":"method","name":"registered_template_handler","children":[],"call":["@@template_handlers [] ","extension to_sym "]}," ActionView Template Handlers template_handler_extensions":{"type":"method","name":"template_handler_extensions","children":[],"call":["(send\n  (send\n    (cvar :@@template_handlers) :keys) :map) sort ","key to_s ","@@template_handlers keys map ","@@template_handlers keys "]}," ActionView Template Handlers register_template_handler":{"type":"method","name":"register_template_handler","children":[],"call":["@@template_handlers []= ","extension to_sym ","extensions each "," raise ","extensions empty? "]}," ActionView Template Handlers extensions":{"type":"method","name":"extensions","children":[],"call":[]}," ActionView Template Handlers extended":{"type":"method","name":"extended","children":[],"call":[]}," ActionView Handlers RJS default_format":{"type":"method","name":"default_format","children":[],"call":[]}," ActionView Handlers RJS compile":{"type":"method","name":"compile","children":[],"call":["template source ","controller.response.content_type ||= Mime::JS; + "]}," ActionView Template Handlers ERB valid_encoding":{"type":"method","name":"valid_encoding","children":[],"call":[" raise ","WrongEncodingError  new ","string encoding ","string valid_encoding? ","string force_encoding "]}," ActionView Template Handlers ERB compile":{"type":"method","name":"compile","children":[],"call":[" class erb_implementation new src "," class erb_implementation new "," class erb_trim_mode == "," class erb_trim_mode "," class "," class erb_implementation ","template source dup ","template source ","erb encode! ","erb force_encoding "," valid_encoding ","template_source gsub ","template source dup force_encoding ","template source encoding_aware? "," class template source dup _implementation new src "," class template_source gsub _implementation new src "," class template source dup _implementation new "," class template_source gsub _implementation new "," class template source dup _trim_mode == "," class template_source gsub _trim_mode == "," class template source dup _trim_mode "," class template_source gsub _trim_mode "," class template source dup _implementation "," class template_source gsub _implementation ","template source dup  encode! ","template_source gsub  encode! ","template source dup  force_encoding ","template_source gsub  force_encoding ","template source dup force_encoding  gsub "]}," ActionView Template Handlers ERB handles_encoding?":{"type":"method","name":"handles_encoding?","children":[],"call":[]}," ActionView Template Handlers Erubis add_postamble":{"type":"method","name":"add_postamble","children":[],"call":["src << "," flush_newline_if_pending "]}," ActionView Template Handlers Erubis add_expr_escaped":{"type":"method","name":"add_expr_escaped","children":[],"call":["src << << << ","src << << "," escaped_expr ","src << ","code =~ "," flush_newline_if_pending "]}," ActionView Template Handlers Erubis add_stmt":{"type":"method","name":"add_stmt","children":[],"call":["src << << ","src << ","code =~ "," flush_newline_if_pending "]}," ActionView Template Handlers Erubis add_expr_literal":{"type":"method","name":"add_expr_literal","children":[],"call":["src << << << ","src << << ","src << ","code =~ "," flush_newline_if_pending "]}," ActionView Template Handlers Erubis add_text":{"type":"method","name":"add_text","children":[],"call":["src << << << ","src << << "," escape_text ","src << ","text empty? ","\n * ","@newline_pending > ","text == "]}," ActionView Template Handlers Erubis add_preamble":{"type":"method","name":"add_preamble","children":[],"call":["src << "]}," ActionView OutputBuffer append_if_string=":{"type":"method","name":"append_if_string=","children":[],"call":[" << ","ActiveSupport Deprecation  warn "," caller ","value is_a? ! ","value is_a? "]}," ActionView OutputBuffer <<":{"type":"method","name":"<<","children":[],"call":["value to_s ","value nil? "]}," ActionView OutputBuffer initialize":{"type":"method","name":"initialize","children":[],"call":[" encode! "," encoding_aware? "]}," ActionView Handlers Builder compile":{"type":"method","name":"compile","children":[],"call":["xml = ::Builder::XmlMarkup.new(:indent => 2); + + + ","xml = ::Builder::XmlMarkup.new(:indent => 2); + + ","template source ","xml = ::Builder::XmlMarkup.new(:indent => 2); + "," require "]}," ActionView Template Handler render":{"type":"method","name":"render","children":[],"call":[" raise "," class name "," class "]}," ActionView Template Handler call":{"type":"method","name":"call","children":[],"call":[]}," ActionView Template Handlers Compilable compile":{"type":"method","name":"compile","children":[],"call":[" raise "," class name "," class "]}," ActionView Template Handlers Compilable ClassMethods call":{"type":"method","name":"call","children":[],"call":[" new compile "," new "]}," ActionView Template Handlers Compilable included":{"type":"method","name":"included","children":[],"call":[]}," ActionView Template Error source_location":{"type":"method","name":"source_location","children":[],"call":["(send nil :line_number) + "," file_name "," line_number "]}," ActionView Template Error annoted_source_code":{"type":"method","name":"annoted_source_code","children":[],"call":[" source_extract "]}," ActionView Template Error line_number":{"type":"method","name":"line_number","children":[],"call":["line =~ "," backtrace find "," backtrace "," message =~ "," message ","Regexp  escape ","File  basename "," file_name "," clean_backtrace find "," clean_backtrace "]}," ActionView Template Error sub_template_of":{"type":"method","name":"sub_template_of","children":[],"call":["@sub_templates << "]}," ActionView Template Error source_extract":{"type":"method","name":"source_extract","children":[],"call":["source_code sum ","source_code [] ","  * ","(send\n  (send\n    (lvar :num) :+\n    (const nil :SOURCE_CODE_RADIUS)) :-\n  (int 1)) min ","source_code length ","num + - ","num + ","(send\n  (send\n    (lvar :num) :-\n    (const nil :SOURCE_CODE_RADIUS)) :-\n  (int 1)) max ","num - - ","num - ","@template source split ","@template source ","num to_i "," line_number ","extract encode! ","extract respond_to? "," formatted_code_for ","end_on_line to_s size + ","end_on_line to_s size ","end_on_line to_s ","source_code []  sum ","@template source split  sum ","source_code []  [] ","@template source split  [] ","(send\n  (send\n    (lvar :num to_i ) :+\n    (const nil :SOURCE_CODE_RADIUS)) :-\n  (int 1)) min ","(send\n  (send\n    (lvar : line_number ) :+\n    (const nil :SOURCE_CODE_RADIUS)) :-\n  (int 1)) min ","source_code []  length ","@template source split  length ","num to_i  + - "," line_number  + - ","num to_i  + "," line_number  + ","(send\n  (send\n    (lvar :num to_i ) :-\n    (const nil :SOURCE_CODE_RADIUS)) :-\n  (int 1)) max ","(send\n  (send\n    (lvar : line_number ) :-\n    (const nil :SOURCE_CODE_RADIUS)) :-\n  (int 1)) max ","num to_i  - - "," line_number  - - ","num to_i  - "," line_number  - ","num to_i  to_i "," line_number  to_i "," line_num to_i ber "," line_ line_number ber ","(send\n  (send\n    (lvar :num) :+\n    (const nil :SOURCE_CODE_RADIUS)) :-\n  (int 1)) min  to_s size + ","(send\n  (send\n    (lvar :num) :+\n    (const nil :SOURCE_CODE_RADIUS)) :-\n  (int 1)) min  to_s size ","(send\n  (send\n    (lvar :num) :+\n    (const nil :SOURCE_CODE_RADIUS)) :-\n  (int 1)) min  to_s "]}," ActionView Template Error sub_template_message":{"type":"method","name":"sub_template_message","children":[],"call":["Trace of template inclusion:  + ","(send\n  (ivar :@sub_templates) :collect) join ","template inspect ","@sub_templates collect "]}," ActionView Template Error message":{"type":"method","name":"message","children":[],"call":[" original_exception message "," original_exception ","ActiveSupport Deprecation  silence "]}," ActionView Template Error file_name":{"type":"method","name":"file_name","children":[],"call":["@template identifier "]}," ActionView Template Error initialize":{"type":"method","name":"initialize","children":[],"call":["original_exception backtrace ","assigns dup "," compute_backtrace ","original_exception message "," set_backtrace "]}," ActionView WrongEncodingError message":{"type":"method","name":"message","children":[],"call":["@string force_encoding "]}," ActionView WrongEncodingError initialize":{"type":"method","name":"initialize","children":[],"call":[]}," ActionView Rendering _render_template":{"type":"method","name":"_render_template","children":[],"call":[" _render_layout ","@_content_for []= "," _layout_for ","template render ","ActiveSupport Notifications  instrument ","layout try ","template identifier "," find_layout ","options [] ","layout identifier "," _render_ find_layout  ","@_ _render_layout _for []= ","@_template render _for []= "," _ find_layout _for "," find_layout  try "," find_ find_layout  "," find_layout  identifier "]}," ActionView Rendering _determine_template":{"type":"method","name":"_determine_template","children":[],"call":[" find_template ","options [] ","options [] respond_to? ","options key? "," with_fallbacks ","Template Text  new "," formats try "," formats ","Template  new ","Template  handler_class_for_extension ","Template  Template  handler_class_for_extension _class_for_extension "]}," ActionView Rendering render":{"type":"method","name":"render","children":[],"call":[" _render_partial "," update_page "," _render_template ","options [] "," lookup_context freeze_formats ","template formats "," lookup_context "," _determine_template ","options key? ","options merge "," block_given? "," find "," formats ","Template Text  new ","Template  new ","Template  handler_class_for_extension "," concat ","options delete "," _render_ _determine_template  "," _render_ find  "," _determine_template  formats "," find  formats "," _determine_ _determine_template  "," _determine_ find  ","Template  Template  handler_class_for_extension _class_for_extension "]}," ActionView Partials _render_partial":{"type":"method","name":"_render_partial","children":[],"call":["@renderer render ","PartialRenderer  new ","@renderer setup ","PartialRenderer  new  render ","PartialRenderer  new  setup "]}," ActionView Partials PartialRenderer partial_path":{"type":"method","name":"partial_path","children":[],"call":["partial insert ","File  dirname ","path include? ","partial include? ","@view controller_path ","object class model_name partial_path dup tap ","object class model_name partial_path dup ","object class model_name partial_path ","object class model_name ","object class ","object to_model ","object respond_to? ","@partial_names [] ","object class name ","@view controller_path  include? ","@view controller_@view controller_path  ","object class model_name partial_@view controller_path  dup tap ","object to_model  class model_name partial_path dup tap ","object class model_name partial_@view controller_path  dup ","object to_model  class model_name partial_path dup ","object class model_name partial_@view controller_path  ","object to_model  class model_name partial_path ","object to_model  class model_name ","object to_model  class ","object to_model  to_model ","object to_model  respond_to? ","object to_model  class name "]}," ActionView Partials PartialRenderer find_template":{"type":"method","name":"find_template","children":[],"call":["@view find_template ","@view controller_path ","path include? ","path is_a? "," _find_template ","@templates [] "]}," ActionView Partials PartialRenderer collection":{"type":"method","name":"collection","children":[],"call":["@options [] ","@options key? ","@object respond_to? ","collection to_ary ","collection respond_to? ","@options []  to_ary ","@options []  respond_to? "]}," ActionView Partials PartialRenderer render_partial":{"type":"method","name":"render_partial","children":[],"call":["view _layout_for ","template render ","locals []= ","template variable_name ","@options [] ","locals [] "," template render "," template "," template variable_name "]}," ActionView Partials PartialRenderer collection_without_template":{"type":"method","name":"collection_without_template","children":[],"call":["segments << ","template render ","locals []= ","template counter_name ","template variable_name "," find_template ","collection_paths [] ","@collection each_with_index ","@options [] "," find_template  render "," find_template  counter_name "," find_template  variable_name "," find_ find_template  "]}," ActionView Partials PartialRenderer collection_with_template":{"type":"method","name":"collection_with_template","children":[],"call":["segments << ","template render ","locals []= ","locals [] ","@collection each ","template counter_name ","template variable_name ","(begin\n  (lvar :as)) to_sym ","@options [] ","@template variable_name ","template template counter_name _name ","template (begin\n  (lvar :as)) to_sym _name ","template template counter_name  ","(begin\n  (lvar :template variable_name )) to_sym ","(begin\n  (lvar :@options [] )) to_sym "]}," ActionView Partials PartialRenderer render_collection":{"type":"method","name":"render_collection","children":[],"call":["result join html_safe ","result join "," collection_without_template "," collection_with_template "," find_template render "," find_template ","@options [] ","@options key? ","@collection blank? "," collection_without_template  join html_safe "," collection_with_template  join html_safe "," collection_without_template  join "," collection_with_template  join "]}," ActionView Partials PartialRenderer render":{"type":"method","name":"render","children":[],"call":["@view _render_layout "," find_template ","@options [] ","@block ! "," render_partial ","ActiveSupport Notifications  instrument "," render_collection ","@collection size ","@template identifier ","options [] ","block ! ","@view _render_@options []  ","@view _render_options []  "," find_template  identifier "]}," ActionView Partials PartialRenderer setup":{"type":"method","name":"setup","children":[],"call":[" partial_path ","paths first ","paths uniq size == ","paths uniq size ","paths uniq ","@collection map "," collection ","options [] ","String  === "," collection_from_object "," options [] _path "," collection  map "]}," ActionView Partials PartialRenderer initialize":{"type":"method","name":"initialize","children":[],"call":[" setup ","PARTIAL_NAMES  [] ","@view controller class name ","@view controller class ","@view controller ","TEMPLATES  [] ","Thread  current [] ","Thread  current "]}," ActionView Layouts _render_layout":{"type":"method","name":"_render_layout","children":[],"call":[" _layout_for ","layout render "]}," ActionView Layouts find_layout":{"type":"method","name":"find_layout","children":[],"call":[" raise "," template_exists? "," update_details "," find_template "," with_fallbacks ","layout =~ "," with_layout_format "," _find_layout "," formats first "," formats "," formats size == "," formats size "]}," ActionView Layouts _layout_for":{"type":"method","name":"_layout_for","children":[],"call":["@_content_for [] html_safe ","@_content_for [] "," capture ","name is_a? ","args first ","block ! ","args first  is_a? "]}," ActionView PathSet typecast!":{"type":"method","name":"typecast!","children":[],"call":[" []= ","FileSystemResolver  new ","path is_a? ","path to_s "," each_with_index ","OptimizedFileSystemResolver  new ","path to_s  is_a? ","path to_s  to_s "]}," ActionView PathSet exists?":{"type":"method","name":"exists?","children":[],"call":[" find_all any? "," find_all ","load_path find "," each ","path sub "]}," ActionView PathSet find_all":{"type":"method","name":"find_all","children":[],"call":["templates empty? ","resolver find_all "," each ","prefixes each ","String  === "," paths each "," paths "," _find_all ","resolver find_all  empty? "]}," ActionView PathSet find":{"type":"method","name":"find","children":[],"call":[" raise ","MissingTemplate  new "," find_all first "," find_all ","ActionView MissingTemplate  new ","load_path find "," each "]}," ActionView LookupContext Details _set_detail":{"type":"method","name":"_set_detail","children":[],"call":["@details []= ","value freeze ","@details dup ","@details frozen? ","@details dup  []= ","@details dup  dup ","@details dup  frozen? "]}," ActionView LookupContext Details update_details":{"type":"method","name":"update_details","children":[],"call":[" send ","new_details [] ","new_details key? "," registered_detail_setters each "," registered_detail_setters ","@details dup "," block_given? "," registered_details each "," registered_details "]}," ActionView LookupContext Details with_layout_format":{"type":"method","name":"with_layout_format","children":[],"call":[" _set_detail "," formats [] "," formats "," formats size == "," formats size "]}," ActionView LookupContext Details locale=":{"type":"method","name":"locale=","children":[],"call":[" _locale_defaults ","I18n  locale ","config locale= ","I18n  config ","I18n  config i18n_config ","I18n  config respond_to? ","I18n  config original_config ","I18n  config  locale= ","I18n  config i18n_config  locale= ","I18n  config original_config  locale= ","I18n  I18n  config  ","I18n  I18n  config i18n_config  ","I18n  I18n  config original_config  ","I18n  I18n  config  i18n_I18n  config  ","I18n  I18n  config i18n_config  i18n_I18n  config i18n_config  ","I18n  I18n  config original_config  i18n_I18n  config original_config  ","I18n  I18n  config  respond_to? ","I18n  I18n  config i18n_config  respond_to? ","I18n  I18n  config original_config  respond_to? ","I18n  I18n  config  original_I18n  config  ","I18n  I18n  config i18n_config  original_I18n  config i18n_config  ","I18n  I18n  config original_config  original_I18n  config original_config  "]}," ActionView LookupContext Details locale":{"type":"method","name":"locale","children":[],"call":["@details [] first ","@details [] "]}," ActionView LookupContext Details skip_default_locale!":{"type":"method","name":"skip_default_locale!","children":[],"call":[" locale= "]}," ActionView LookupContext Details formats=":{"type":"method","name":"formats=","children":[],"call":["values << ","value == ","values first ","values size == ","values size ","value << ","values == ","values concat "," _formats_defaults ","values delete ","values first s << ","values first  == ","values first s first ","values first s size == ","values first s size ","values first  << ","values first s == ","values first s concat ","values first s delete "]}," ActionView LookupContext Details freeze_formats":{"type":"method","name":"freeze_formats","children":[],"call":[" formats= "]}," ActionView LookupContext Details details_key":{"type":"method","name":"details_key","children":[],"call":["DetailsKey  get "]}," ActionView LookupContext ViewPaths handlers_regexp":{"type":"method","name":"handlers_regexp","children":[],"call":[" default_handlers join "," default_handlers "]}," ActionView LookupContext ViewPaths default_handlers":{"type":"method","name":"default_handlers","children":[],"call":["Template Handlers  extensions "]}," ActionView LookupContext ViewPaths normalize_name":{"type":"method","name":"normalize_name","children":[],"call":["(lvar :prefix) compact join ","(lvar :prefix) compact ","parts pop ","name split ","name to_s gsub "," handlers_regexp ","name to_s ","prefixes map ","parts join ","prefixes blank? ","parts empty? ","ActiveSupport Deprecation  warn "," caller ","match [] ","name to_s sub ","parts shift ","parts first empty? ","parts first ","name to_s split ","prefixes presence ","name split  pop ","parts join  pop ","name to_s split  pop ","name to_s gsub  split ","parts pop  split ","name to_s gsub  to_s gsub ","parts pop  to_s gsub ","name to_s gsub  to_s ","parts pop  to_s ","prefixes presence  map ","name split  join ","parts join  join ","name to_s split  join ","prefixes presence  blank? ","name split  empty? ","parts join  empty? ","name to_s split  empty? ","name to_s gsub  to_s sub ","parts pop  to_s sub ","name split  shift ","parts join  shift ","name to_s split  shift ","name split  first empty? ","parts join  first empty? ","name to_s split  first empty? ","name split  first ","parts join  first ","name to_s split  first ","name to_s gsub  to_s split ","parts pop  to_s split ","prefixes presence  presence "]}," ActionView LookupContext ViewPaths args_for_lookup":{"type":"method","name":"args_for_lookup","children":[],"call":[" details_key "," normalize_name "," detail_args_for "]}," ActionView LookupContext ViewPaths with_fallbacks":{"type":"method","name":"with_fallbacks","children":[],"call":[" view_paths pop "," view_paths ","added_resolvers times "," view_paths push "," view_paths include? "," class fallbacks each "," class fallbacks "," class "]}," ActionView LookupContext ViewPaths exists?":{"type":"method","name":"exists?","children":[],"call":["@view_paths exists? "," args_for_lookup "]}," ActionView LookupContext ViewPaths find_all":{"type":"method","name":"find_all","children":[],"call":["@view_paths find_all "," args_for_lookup "]}," ActionView LookupContext ViewPaths find":{"type":"method","name":"find","children":[],"call":["@view_paths find "," args_for_lookup "]}," ActionView LookupContext ViewPaths view_paths=":{"type":"method","name":"view_paths=","children":[],"call":["ActionView Base  process_view_paths ","ActionView PathSet  new ","Array  wrap "," Array "]}," ActionView LookupContext initialize":{"type":"method","name":"initialize","children":[],"call":[" send ","details [] "," registered_detail_setters each "," registered_detail_setters "," view_paths= "," default_handlers "," update_details "," initialize_details "]}," ActionView LookupContext DetailsKey initialize":{"type":"method","name":"initialize","children":[],"call":[" object_hash "]}," ActionView LookupContext DetailsKey get":{"type":"method","name":"get","children":[],"call":[]}," ActionView LookupContext register_detail":{"type":"method","name":"register_detail","children":[],"call":[]}," ActionView LogSubscriber from_rails_root":{"type":"method","name":"from_rails_root","children":[],"call":["string sub sub ","string sub ","Rails  root "]}," ActionView LogSubscriber logger":{"type":"method","name":"logger","children":[],"call":["ActionController Base  logger ","ActionView Base  logger "]}," ActionView LogSubscriber render_template":{"type":"method","name":"render_template","children":[],"call":[" info ","message << "," (%.1fms) % ","event duration "," from_rails_root ","event payload [] ","event payload ","event duration round "," logger info? "," logger "]}," ActionView Helpers UrlHelper array_or_string_for_javascript":{"type":"method","name":"array_or_string_for_javascript","children":[],"call":["option nil? ! ","option nil? ","option join ","option kind_of? "]}," ActionView Helpers UrlHelper options_for_javascript":{"type":"method","name":"options_for_javascript","children":[],"call":["(send\n  (send\n    (lvar :options) :keys) :map) sort join ","(send\n  (send\n    (lvar :options) :keys) :map) sort ","options [] ","options keys map ","options keys ","options empty? "]}," ActionView Helpers UrlHelper add_method_to_attributes!":{"type":"method","name":"add_method_to_attributes!","children":[],"call":["html_options []= ","method to_s downcase != ","method to_s downcase ","method to_s ","(begin\n  (send\n    (send\n      (lvar :html_options) :[]\n      (str \"rel\")) :to_s)) split uniq join ","(begin\n  (send\n    (send\n      (lvar :html_options) :[]\n      (str \"rel\")) :to_s)) split uniq ","(begin\n  (send\n    (send\n      (lvar :html_options) :[]\n      (str \"rel\")) :to_s)) split ","html_options [] to_s ","html_options [] ","(begin\n  (send\n    (lvar :html_options) :[]\n    (str \"rel\"))) strip ","html_options [] !~ ","(begin\n  (send\n    (lvar :html_options) :[]\n    (str \"rel\"))) lstrip "]}," ActionView Helpers UrlHelper add_confirm_to_attributes!":{"type":"method","name":"add_confirm_to_attributes!","children":[],"call":["html_options []= "]}," ActionView Helpers UrlHelper convert_options_to_data_attributes":{"type":"method","name":"convert_options_to_data_attributes","children":[],"call":[" add_method_to_attributes! "," add_confirm_to_attributes! ","html_options [] ","html_options delete ","ActiveSupport Deprecation  warn "," caller ","html_options key? ","html_options []= ","html_options is_a? ","options delete ","options key? ","options is_a? ","html_options stringify_keys ","html_options nil? ","options [] "," add_disable_with_to_attributes! "," link_to_remote_options? "," add_html_options delete _to_attributes! ","html_options stringify_keys  [] ","html_options stringify_keys  delete ","html_options stringify_keys  key? ","html_options stringify_keys  []= ","html_options stringify_keys  is_a? ","html_options stringify_keys  stringify_keys ","html_options stringify_keys  nil? "]}," ActionView Helpers UrlHelper url_options":{"type":"method","name":"url_options","children":[],"call":[" controller url_options "," controller "," controller respond_to? "]}," ActionView Helpers TranslationHelper html_safe_translation_key?":{"type":"method","name":"html_safe_translation_key?","children":[],"call":["key to_s =~ ","key to_s "]}," ActionView Helpers TextHelper safe_concat":{"type":"method","name":"safe_concat","children":[],"call":[" concat "," output_buffer safe_concat "," output_buffer "," output_buffer respond_to? "]}," ActionView Helpers ScriptaculousHelper array_or_string_for_javascript":{"type":"method","name":"array_or_string_for_javascript","children":[],"call":["option nil? ! ","option nil? ","option join ","option kind_of? "]}," ActionView Helpers JavaScriptVariableProxy as_json":{"type":"method","name":"as_json","children":[],"call":[]}," ActionView Helpers JavaScriptProxy is_a?":{"type":"method","name":"is_a?","children":[],"call":["klass == "]}," ActionView Helpers PrototypeHelper options_for_javascript":{"type":"method","name":"options_for_javascript","children":[],"call":["(send\n  (send\n    (lvar :options) :keys) :map) sort join ","(send\n  (send\n    (lvar :options) :keys) :map) sort ","options [] ","options keys map ","options keys ","options empty? "]}," ActionView Helpers PrototypeHelper JavaScriptGenerator GeneratorMethods with_formats":{"type":"method","name":"with_formats","children":[],"call":["@context update_details "]}," ActionView Helpers NumberHelper number_to_human":{"type":"method","name":"number_to_human","children":[],"call":["decimal_format gsub gsub strip html_safe ","decimal_format gsub gsub strip ","decimal_format gsub gsub ","decimal_format gsub "," number_with_precision ","I18n  translate ","options [] ","number to_i ","DECIMAL_UNITS  [] ","units [] ","10 ** ","number_exponent >= ","unit_exponents find ","Math  log10 floor ","Math  log10 ","e -@ ","(send\n  (send\n    (case\n      (lvar :units)\n      (when\n        (const nil :Hash)\n        (lvar :units))\n      (when\n        (const nil :String)\n        (const nil :Symbol)\n        (send\n          (const nil :I18n) :translate\n          (dsym\n            (begin\n              (lvar :units)))\n          (hash\n            (pair\n              (sym :locale)\n              (send\n                (lvar :options) :[]\n                (sym :locale)))\n            (pair\n              (sym :raise)\n              (true)))))\n      (when\n        (nil)\n        (send\n          (const nil :I18n) :translate\n          (sym :\"number.human.decimal_units.units\")\n          (hash\n            (pair\n              (sym :locale)\n              (send\n                (lvar :options) :[]\n                (sym :locale)))\n            (pair\n              (sym :raise)\n              (true)))))\n      (send nil :raise\n        (const nil :ArgumentError)\n        (str \":units must be a Hash or String translation scope.\"))) :keys) :map) sort_by ","DECIMAL_UNITS  invert [] ","DECIMAL_UNITS  invert ","(lvar :units) keys map ","(lvar :units) keys "," raise ","options delete ","options []= ","options key? ! ","options key? ","options reverse_merge ","defaults merge "," Float ","options symbolize_keys! ","number abs ","number != ","inverted_du [] ","(send\n  (send\n    (case\n      (lvar :units)\n      (when\n        (const nil :Hash)\n        (lvasgn :units\n          (send\n            (const nil :Hash) :[]\n            (block\n              (send\n                (lvar :units) :map)\n              (args\n                (arg :k)\n                (arg :v))\n              (array\n                (lvar :k)\n                (send\n                  (const\n                    (const nil :ERB) :Util) :html_escape\n                  (lvar :v)))))))\n      (when\n        (const nil :String)\n        (const nil :Symbol)\n        (send\n          (const nil :I18n) :translate\n          (dsym\n            (begin\n              (lvar :units)))\n          (hash\n            (pair\n              (sym :locale)\n              (send\n                (lvar :options) :[]\n                (sym :locale)))\n            (pair\n              (sym :raise)\n              (true)))))\n      (when\n        (nil)\n        (send\n          (const nil :I18n) :translate\n          (sym :\"number.human.decimal_units.units\")\n          (hash\n            (pair\n              (sym :locale)\n              (send\n                (lvar :options) :[]\n                (sym :locale)))\n            (pair\n              (sym :raise)\n              (true)))))\n      (send nil :raise\n        (const nil :ArgumentError)\n        (str \":units must be a Hash or String translation scope.\"))) :keys) :map) sort_by ","Hash  [] ","ERB Util  html_escape ","units map ","ActiveSupport NumberHelper  number_to_human "," wrap_with_output_safety_handling "," escape_unsafe_delimiters_and_separators ","options symbolize_keys "," escape_unsafe_options ","options reverse_merge  [] "," escape_unsafe_delimiters_and_separators  [] "," escape_unsafe_options  [] ","options delete  [] ","Hash  []  [] ","Math  log10 floor  >= ","(send\n  (send\n    (case\n      (lvar :options delete )\n      (when\n        (const nil :Hash)\n        (lvar :options delete ))\n      (when\n        (const nil :String)\n        (const nil :Symbol)\n        (send\n          (const nil :I18n) :translate\n          (dsym\n            (begin\n              (lvar :options delete )))\n          (hash\n            (pair\n              (sym :locale)\n              (send\n                (lvar :options) :[]\n                (sym :locale)))\n            (pair\n              (sym :raise)\n              (true)))))\n      (when\n        (nil)\n        (send\n          (const nil :I18n) :translate\n          (sym :\"number.human.decimal_options delete .options delete \")\n          (hash\n            (pair\n              (sym :locale)\n              (send\n                (lvar :options) :[]\n                (sym :locale)))\n            (pair\n              (sym :raise)\n              (true)))))\n      (send nil :raise\n        (const nil :ArgumentError)\n        (str \":options delete  must be a Hash or String translation scope.\"))) :keys) :map) sort_by ","(send\n  (send\n    (case\n      (lvar :Hash  [] )\n      (when\n        (const nil :Hash)\n        (lvar :Hash  [] ))\n      (when\n        (const nil :String)\n        (const nil :Symbol)\n        (send\n          (const nil :I18n) :translate\n          (dsym\n            (begin\n              (lvar :Hash  [] )))\n          (hash\n            (pair\n              (sym :locale)\n              (send\n                (lvar :options) :[]\n                (sym :locale)))\n            (pair\n              (sym :raise)\n              (true)))))\n      (when\n        (nil)\n        (send\n          (const nil :I18n) :translate\n          (sym :\"number.human.decimal_Hash  [] .Hash  [] \")\n          (hash\n            (pair\n              (sym :locale)\n              (send\n                (lvar :options) :[]\n                (sym :locale)))\n            (pair\n              (sym :raise)\n              (true)))))\n      (send nil :raise\n        (const nil :ArgumentError)\n        (str \":Hash  []  must be a Hash or String translation scope.\"))) :keys) :map) sort_by ","(send\n  (send\n    (case\n      (lvar :units)\n      (when\n        (const nil :Hash)\n        (lvar :units))\n      (when\n        (const nil :String)\n        (const nil :Symbol)\n        (send\n          (const nil :I18n) :translate\n          (dsym\n            (begin\n              (lvar :units)))\n          (hash\n            (pair\n              (sym :locale)\n              (send\n                (lvar :options reverse_merge ) :[]\n                (sym :locale)))\n            (pair\n              (sym :raise)\n              (true)))))\n      (when\n        (nil)\n        (send\n          (const nil :I18n) :translate\n          (sym :\"number.human.decimal_units.units\")\n          (hash\n            (pair\n              (sym :locale)\n              (send\n                (lvar :options reverse_merge ) :[]\n                (sym :locale)))\n            (pair\n              (sym :raise)\n              (true)))))\n      (send nil :raise\n        (const nil :ArgumentError)\n        (str \":units must be a Hash or String translation scope.\"))) :keys) :map) sort_by ","(send\n  (send\n    (case\n      (lvar :units)\n      (when\n        (const nil :Hash)\n        (lvar :units))\n      (when\n        (const nil :String)\n        (const nil :Symbol)\n        (send\n          (const nil :I18n) :translate\n          (dsym\n            (begin\n              (lvar :units)))\n          (hash\n            (pair\n              (sym :locale)\n              (send\n                (lvar : escape_unsafe_delimiters_and_separators ) :[]\n                (sym :locale)))\n            (pair\n              (sym :raise)\n              (true)))))\n      (when\n        (nil)\n        (send\n          (const nil :I18n) :translate\n          (sym :\"number.human.decimal_units.units\")\n          (hash\n            (pair\n              (sym :locale)\n              (send\n                (lvar : escape_unsafe_delimiters_and_separators ) :[]\n                (sym :locale)))\n            (pair\n              (sym :raise)\n              (true)))))\n      (send nil :raise\n        (const nil :ArgumentError)\n        (str \":units must be a Hash or String translation scope.\"))) :keys) :map) sort_by ","(send\n  (send\n    (case\n      (lvar :units)\n      (when\n        (const nil :Hash)\n        (lvar :units))\n      (when\n        (const nil :String)\n        (const nil :Symbol)\n        (send\n          (const nil :I18n) :translate\n          (dsym\n            (begin\n              (lvar :units)))\n          (hash\n            (pair\n              (sym :locale)\n              (send\n                (lvar : escape_unsafe_options ) :[]\n                (sym :locale)))\n            (pair\n              (sym :raise)\n              (true)))))\n      (when\n        (nil)\n        (send\n          (const nil :I18n) :translate\n          (sym :\"number.human.decimal_units.units\")\n          (hash\n            (pair\n              (sym :locale)\n              (send\n                (lvar : escape_unsafe_options ) :[]\n                (sym :locale)))\n            (pair\n              (sym :raise)\n              (true)))))\n      (send nil :raise\n        (const nil :ArgumentError)\n        (str \":units must be a Hash or String translation scope.\"))) :keys) :map) sort_by ","(send\n  (send\n    (case\n      (lvar :units)\n      (when\n        (const nil :Hash)\n        (lvar :units))\n      (when\n        (const nil :String)\n        (const nil :Symbol)\n        (send\n          (const nil :I18n) :translate\n          (dsym\n            (begin\n              (lvar :units)))\n          (hash\n            (pair\n              (sym :locale)\n              (send\n                (lvar :options) :[]\n                (sym :locale)))\n            (pair\n              (sym :raise)\n              (true)))))\n      (when\n        (nil)\n        (send\n          (const nil :I18n) :translate\n          (sym :\"number.I18n  translate .decimal_units.units\")\n          (hash\n            (pair\n              (sym :locale)\n              (send\n                (lvar :options) :[]\n                (sym :locale)))\n            (pair\n              (sym :raise)\n              (true)))))\n      (send nil :raise\n        (const nil :ArgumentError)\n        (str \":units must be a Hash or String translation scope.\"))) :keys) :map) sort_by ","(lvar :options delete ) keys map ","(lvar :Hash  [] ) keys map ","(lvar :options delete ) keys ","(lvar :Hash  [] ) keys ","options reverse_merge  delete "," escape_unsafe_delimiters_and_separators  delete "," escape_unsafe_options  delete ","options reverse_merge  []= "," escape_unsafe_delimiters_and_separators  []= "," escape_unsafe_options  []= ","options reverse_merge  key? ! "," escape_unsafe_delimiters_and_separators  key? ! "," escape_unsafe_options  key? ! ","options reverse_merge  key? "," escape_unsafe_delimiters_and_separators  key? "," escape_unsafe_options  key? ","options reverse_merge  reverse_merge "," escape_unsafe_delimiters_and_separators  reverse_merge "," escape_unsafe_options  reverse_merge ","defaults merge  merge ","I18n  translate  merge ","options reverse_merge  symbolize_keys! "," escape_unsafe_delimiters_and_separators  symbolize_keys! "," escape_unsafe_options  symbolize_keys! ","DECIMAL_UNITS  invert  [] ","(send\n  (send\n    (case\n      (lvar :options delete )\n      (when\n        (const nil :Hash)\n        (lvasgn :options delete \n          (send\n            (const nil :Hash) :[]\n            (block\n              (send\n                (lvar :options delete ) :map)\n              (args\n                (arg :k)\n                (arg :v))\n              (array\n                (lvar :k)\n                (send\n                  (const\n                    (const nil :ERB) :Util) :html_escape\n                  (lvar :v)))))))\n      (when\n        (const nil :String)\n        (const nil :Symbol)\n        (send\n          (const nil :I18n) :translate\n          (dsym\n            (begin\n              (lvar :options delete )))\n          (hash\n            (pair\n              (sym :locale)\n              (send\n                (lvar :options) :[]\n                (sym :locale)))\n            (pair\n              (sym :raise)\n              (true)))))\n      (when\n        (nil)\n        (send\n          (const nil :I18n) :translate\n          (sym :\"number.human.decimal_options delete .options delete \")\n          (hash\n            (pair\n              (sym :locale)\n              (send\n                (lvar :options) :[]\n                (sym :locale)))\n            (pair\n              (sym :raise)\n              (true)))))\n      (send nil :raise\n        (const nil :ArgumentError)\n        (str \":options delete  must be a Hash or String translation scope.\"))) :keys) :map) sort_by ","(send\n  (send\n    (case\n      (lvar :Hash  [] )\n      (when\n        (const nil :Hash)\n        (lvasgn :Hash  [] \n          (send\n            (const nil :Hash) :[]\n            (block\n              (send\n                (lvar :Hash  [] ) :map)\n              (args\n                (arg :k)\n                (arg :v))\n              (array\n                (lvar :k)\n                (send\n                  (const\n                    (const nil :ERB) :Util) :html_escape\n                  (lvar :v)))))))\n      (when\n        (const nil :String)\n        (const nil :Symbol)\n        (send\n          (const nil :I18n) :translate\n          (dsym\n            (begin\n              (lvar :Hash  [] )))\n          (hash\n            (pair\n              (sym :locale)\n              (send\n                (lvar :options) :[]\n                (sym :locale)))\n            (pair\n              (sym :raise)\n              (true)))))\n      (when\n        (nil)\n        (send\n          (const nil :I18n) :translate\n          (sym :\"number.human.decimal_Hash  [] .Hash  [] \")\n          (hash\n            (pair\n              (sym :locale)\n              (send\n                (lvar :options) :[]\n                (sym :locale)))\n            (pair\n              (sym :raise)\n              (true)))))\n      (send nil :raise\n        (const nil :ArgumentError)\n        (str \":Hash  []  must be a Hash or String translation scope.\"))) :keys) :map) sort_by ","(send\n  (send\n    (case\n      (lvar :units)\n      (when\n        (const nil :Hash)\n        (lvasgn :units\n          (send\n            (const nil :Hash) :[]\n            (block\n              (send\n                (lvar :units) :map)\n              (args\n                (arg :k)\n                (arg :v))\n              (array\n                (lvar :k)\n                (send\n                  (const\n                    (const nil :ERB) :Util) :html_escape\n                  (lvar :v)))))))\n      (when\n        (const nil :String)\n        (const nil :Symbol)\n        (send\n          (const nil :I18n) :translate\n          (dsym\n            (begin\n              (lvar :units)))\n          (hash\n            (pair\n              (sym :locale)\n              (send\n                (lvar :options reverse_merge ) :[]\n                (sym :locale)))\n            (pair\n              (sym :raise)\n              (true)))))\n      (when\n        (nil)\n        (send\n          (const nil :I18n) :translate\n          (sym :\"number.human.decimal_units.units\")\n          (hash\n            (pair\n              (sym :locale)\n              (send\n                (lvar :options reverse_merge ) :[]\n                (sym :locale)))\n            (pair\n              (sym :raise)\n              (true)))))\n      (send nil :raise\n        (const nil :ArgumentError)\n        (str \":units must be a Hash or String translation scope.\"))) :keys) :map) sort_by ","(send\n  (send\n    (case\n      (lvar :units)\n      (when\n        (const nil :Hash)\n        (lvasgn :units\n          (send\n            (const nil :Hash) :[]\n            (block\n              (send\n                (lvar :units) :map)\n              (args\n                (arg :k)\n                (arg :v))\n              (array\n                (lvar :k)\n                (send\n                  (const\n                    (const nil :ERB) :Util) :html_escape\n                  (lvar :v)))))))\n      (when\n        (const nil :String)\n        (const nil :Symbol)\n        (send\n          (const nil :I18n) :translate\n          (dsym\n            (begin\n              (lvar :units)))\n          (hash\n            (pair\n              (sym :locale)\n              (send\n                (lvar : escape_unsafe_delimiters_and_separators ) :[]\n                (sym :locale)))\n            (pair\n              (sym :raise)\n              (true)))))\n      (when\n        (nil)\n        (send\n          (const nil :I18n) :translate\n          (sym :\"number.human.decimal_units.units\")\n          (hash\n            (pair\n              (sym :locale)\n              (send\n                (lvar : escape_unsafe_delimiters_and_separators ) :[]\n                (sym :locale)))\n            (pair\n              (sym :raise)\n              (true)))))\n      (send nil :raise\n        (const nil :ArgumentError)\n        (str \":units must be a Hash or String translation scope.\"))) :keys) :map) sort_by ","(send\n  (send\n    (case\n      (lvar :units)\n      (when\n        (const nil :Hash)\n        (lvasgn :units\n          (send\n            (const nil :Hash) :[]\n            (block\n              (send\n                (lvar :units) :map)\n              (args\n                (arg :k)\n                (arg :v))\n              (array\n                (lvar :k)\n                (send\n                  (const\n                    (const nil :ERB) :Util) :html_escape\n                  (lvar :v)))))))\n      (when\n        (const nil :String)\n        (const nil :Symbol)\n        (send\n          (const nil :I18n) :translate\n          (dsym\n            (begin\n              (lvar :units)))\n          (hash\n            (pair\n              (sym :locale)\n              (send\n                (lvar : escape_unsafe_options ) :[]\n                (sym :locale)))\n            (pair\n              (sym :raise)\n              (true)))))\n      (when\n        (nil)\n        (send\n          (const nil :I18n) :translate\n          (sym :\"number.human.decimal_units.units\")\n          (hash\n            (pair\n              (sym :locale)\n              (send\n                (lvar : escape_unsafe_options ) :[]\n                (sym :locale)))\n            (pair\n              (sym :raise)\n              (true)))))\n      (send nil :raise\n        (const nil :ArgumentError)\n        (str \":units must be a Hash or String translation scope.\"))) :keys) :map) sort_by ","(send\n  (send\n    (case\n      (lvar :units)\n      (when\n        (const nil :Hash)\n        (lvasgn :units\n          (send\n            (const nil :Hash) :[]\n            (block\n              (send\n                (lvar :units) :map)\n              (args\n                (arg :k)\n                (arg :v))\n              (array\n                (lvar :k)\n                (send\n                  (const\n                    (const nil :ERB) :Util) :html_escape\n                  (lvar :v)))))))\n      (when\n        (const nil :String)\n        (const nil :Symbol)\n        (send\n          (const nil :I18n) :translate\n          (dsym\n            (begin\n              (lvar :units)))\n          (hash\n            (pair\n              (sym :locale)\n              (send\n                (lvar :options) :[]\n                (sym :locale)))\n            (pair\n              (sym :raise)\n              (true)))))\n      (when\n        (nil)\n        (send\n          (const nil :I18n) :translate\n          (sym :\"number.I18n  translate .decimal_units.units\")\n          (hash\n            (pair\n              (sym :locale)\n              (send\n                (lvar :options) :[]\n                (sym :locale)))\n            (pair\n              (sym :raise)\n              (true)))))\n      (send nil :raise\n        (const nil :ArgumentError)\n        (str \":units must be a Hash or String translation scope.\"))) :keys) :map) sort_by ","options delete  map ","Hash  []  map ","ActiveSupport NumberHelper  number_to_I18n  translate  ","options reverse_merge  symbolize_keys "," escape_unsafe_delimiters_and_separators  symbolize_keys "," escape_unsafe_options  symbolize_keys "," escape_unsafe_options reverse_merge  "," escape_unsafe_ escape_unsafe_delimiters_and_separators  "," escape_unsafe_ escape_unsafe_options  "]}," ActionView Helpers NumberHelper InvalidNumberError initialize":{"type":"method","name":"initialize","children":[],"call":[]}," ActionView Helpers FormTagHelper range_field_tag":{"type":"method","name":"range_field_tag","children":[],"call":[" number_field_tag ","options stringify_keys update ","options stringify_keys "]}," ActionView Helpers FormTagHelper number_field_tag":{"type":"method","name":"number_field_tag","children":[],"call":[" text_field_tag ","options update ","range max ","range min ","options delete ","options [] ","options stringify_keys ","options stringify_keys  update ","options stringify_keys  delete ","options stringify_keys  [] ","options stringify_keys  stringify_keys "]}," ActionView Helpers FormTagHelper email_field_tag":{"type":"method","name":"email_field_tag","children":[],"call":[" text_field_tag ","options stringify_keys update ","options stringify_keys "]}," ActionView Helpers FormTagHelper url_field_tag":{"type":"method","name":"url_field_tag","children":[],"call":[" text_field_tag ","options stringify_keys update ","options stringify_keys "]}," ActionView Helpers FormTagHelper telephone_field_tag":{"type":"method","name":"telephone_field_tag","children":[],"call":[" text_field_tag ","options stringify_keys update ","options stringify_keys "]}," ActionView Helpers FormTagHelper search_field_tag":{"type":"method","name":"search_field_tag","children":[],"call":[" text_field_tag ","options stringify_keys update ","options stringify_keys "]}," ActionView Helpers FormOptionsHelper option_html_attributes":{"type":"method","name":"option_html_attributes","children":[],"call":["html_attributes join ","html_attributes << "," html_escape ","v to_s ","(send\n  (lvar :element) :select) reduce each ","(send\n  (lvar :element) :select) reduce ","Hash  === ","element select ","Array  === ","ERB Util  html_escape "]}," ActionView Helpers FormBuilder submit_default_value":{"type":"method","name":"submit_default_value","children":[],"call":["I18n  t ","defaults shift ","defaults << ","key to_s humanize ","key to_s "," object_name ","@object_name to_s humanize ","@object_name to_s ","object class model_name human ","object class model_name ","object class ","object class respond_to? ","object persisted? ","@object to_model ","@object respond_to? ","object new_record? "," convert_to_model "," @object to_model _name ","  convert_to_model _name ","@@object to_model _name to_s humanize ","@ convert_to_model _name to_s humanize ","@@object to_model _name to_s ","@ convert_to_model _name to_s ","object class @object_name to_s humanize _name human ","object class object class model_name human _name human ","@object to_model  class model_name human "," convert_to_model  class model_name human ","object class @object_name to_s humanize _name ","object class object class model_name human _name ","@object to_model  class model_name "," convert_to_model  class model_name ","@object to_model  class "," convert_to_model  class ","@object to_model  class respond_to? "," convert_to_model  class respond_to? ","@object to_model  persisted? "," convert_to_model  persisted? ","@object to_@object_name to_s humanize  ","@object to_object class model_name human  ","@@object to_model  to_model ","@ convert_to_model  to_model ","@@object to_model  respond_to? ","@ convert_to_model  respond_to? ","@object to_model  new_record? "," convert_to_model  new_record? "," convert_to_@object_name to_s humanize  "," convert_to_object class model_name human  "]}," ActionView Helpers FormBuilder to_model":{"type":"method","name":"to_model","children":[],"call":[]}," ActionView Helpers FormBuilder model_name":{"type":"method","name":"model_name","children":[],"call":[]}," ActionView Helpers InstanceTagMethods sanitized_method_name":{"type":"method","name":"sanitized_method_name","children":[],"call":["@method_name sub "]}," ActionView Helpers InstanceTagMethods sanitized_object_name":{"type":"method","name":"sanitized_object_name","children":[],"call":["@object_name gsub sub ","@object_name gsub "]}," ActionView Helpers InstanceTagMethods tag_id_with_index":{"type":"method","name":"tag_id_with_index","children":[],"call":[" sanitized_method_name "," sanitized_object_name "]}," ActionView Helpers InstanceTagMethods tag_id":{"type":"method","name":"tag_id","children":[],"call":[" sanitized_method_name "," sanitized_object_name "]}," ActionView Helpers InstanceTagMethods tag_name_with_index":{"type":"method","name":"tag_name_with_index","children":[],"call":[" sanitized_method_name "]}," ActionView Helpers InstanceTagMethods tag_name":{"type":"method","name":"tag_name","children":[],"call":[" sanitized_method_name "]}," ActionView Helpers InstanceTagMethods add_default_name_and_id":{"type":"method","name":"add_default_name_and_id","children":[],"call":["options []= "," tag_id ","options fetch "," tag_name + ","options has_key? "," tag_name ","options [] "," tag_id_with_index "," tag_name_with_index ","options delete "]}," ActionView Helpers InstanceTagMethods add_default_name_and_id_for_value":{"type":"method","name":"add_default_name_and_id_for_value","children":[],"call":["options [] ","options [] present? ","specified_id blank? "," add_default_name_and_id ","tag_value to_s gsub gsub downcase ","tag_value to_s gsub gsub ","tag_value to_s gsub ","tag_value to_s ","tag_value nil? ","options []  blank? "]}," ActionView Helpers InstanceTagMethods ClassMethods radio_button_checked?":{"type":"method","name":"radio_button_checked?","children":[],"call":["value to_s == ","checked_value to_s ","value to_s "]}," ActionView Helpers InstanceTagMethods ClassMethods check_box_checked?":{"type":"method","name":"check_box_checked?","children":[],"call":["value to_i != ","value to_i ","value include? ","value == ","value != "]}," ActionView Helpers InstanceTagMethods ClassMethods value_before_type_cast":{"type":"method","name":"value_before_type_cast","children":[],"call":[" raise ","object class ","object send ","method_name + ","object respond_to? ","object nil? "]}," ActionView Helpers InstanceTagMethods ClassMethods value":{"type":"method","name":"value","children":[],"call":["object send ","object nil? "]}," ActionView Helpers InstanceTagMethods value_before_type_cast":{"type":"method","name":"value_before_type_cast","children":[],"call":[" class value_before_type_cast "," class "]}," ActionView Helpers InstanceTagMethods value":{"type":"method","name":"value","children":[],"call":[" class value "," class "]}," ActionView Helpers InstanceTagMethods object":{"type":"method","name":"object","children":[],"call":["@template_object instance_variable_get "]}," ActionView Helpers InstanceTagMethods to_content_tag":{"type":"method","name":"to_content_tag","children":[],"call":[" content_tag "," value "," object "]}," ActionView Helpers InstanceTagMethods to_boolean_select_tag":{"type":"method","name":"to_boolean_select_tag","children":[],"call":["tag_text << ","value == "," tag_options "," value "," object "," add_default_name_and_id ","options stringify_keys "," value  == "," tag_options stringify_keys  ","  value  ","options stringify_keys  stringify_keys "]}," ActionView Helpers InstanceTagMethods to_check_box_tag":{"type":"method","name":"to_check_box_tag","children":[],"call":["(send\n  (lvar :hidden) :+\n  (lvar :checkbox)) html_safe ","hidden + "," tag ","options [] "," add_default_name_and_id ","options delete "," add_default_name_and_id_for_value ","options []= "," class check_box_checked? "," value "," object "," class ","cv == ","options has_key? ","options stringify_keys ","(send\n  (lvar :hidden) :+\n  (lvar : tag )) html_safe ","(send\n  (lvar : tag ) :+\n  (lvar :checkbox)) html_safe "," tag  + ","options stringify_keys  [] ","options stringify_keys  delete ","options stringify_keys  []= "," class check_box_ class check_box_checked? ? ","options delete  == ","options stringify_keys  has_key? ","options stringify_keys  stringify_keys "]}," ActionView Helpers InstanceTagMethods to_text_area_tag":{"type":"method","name":"to_text_area_tag","children":[],"call":[" content_tag "," html_escape "," value_before_type_cast "," object ","options delete ","size split ","options []= ","size respond_to? "," add_default_name_and_id ","DEFAULT_TEXT_AREA_OPTIONS  merge ","options stringify_keys ","DEFAULT_TEXT_AREA_OPTIONS  merge  delete ","options delete  split ","DEFAULT_TEXT_AREA_OPTIONS  merge  []= ","options delete  respond_to? ","DEFAULT_TEXT_AREA_OPTIONS  merge  stringify_keys "]}," ActionView Helpers InstanceTagMethods to_radio_button_tag":{"type":"method","name":"to_radio_button_tag","children":[],"call":[" tag "," add_default_name_and_id_for_value ","options []= "," class radio_button_checked? "," value "," object "," class ","cv == ","options delete ","options has_key? ","DEFAULT_RADIO_OPTIONS  merge ","options stringify_keys ","DEFAULT_RADIO_OPTIONS  merge  []= "," class radio_button_ class radio_button_checked? ? ","options delete  == ","DEFAULT_RADIO_OPTIONS  merge  delete ","DEFAULT_RADIO_OPTIONS  merge  has_key? ","DEFAULT_RADIO_OPTIONS  merge  stringify_keys "]}," ActionView Helpers InstanceTagMethods to_number_field_tag":{"type":"method","name":"to_number_field_tag","children":[],"call":[" to_input_field_tag ","options update ","range max ","range min ","options delete ","options stringify_keys ","options stringify_keys  update ","options stringify_keys  delete ","options stringify_keys  stringify_keys "]}," ActionView Helpers InstanceTagMethods to_input_field_tag":{"type":"method","name":"to_input_field_tag","children":[],"call":[" tag "," add_default_name_and_id "," html_escape ","options [] ","options []= "," value_before_type_cast "," object ","options fetch ","field_type == ","options delete ","DEFAULT_FIELD_OPTIONS  merge ","DEFAULT_FIELD_OPTIONS  [] ","options key? ","options stringify_keys ","DEFAULT_FIELD_OPTIONS  merge  [] ","options stringify_keys  [] ","DEFAULT_FIELD_OPTIONS  merge  []= ","options stringify_keys  []= ","DEFAULT_FIELD_OPTIONS  merge  fetch ","options stringify_keys  fetch ","DEFAULT_FIELD_OPTIONS  merge  delete ","options stringify_keys  delete ","DEFAULT_FIELD_OPTIONS  merge  key? ","options stringify_keys  key? ","DEFAULT_FIELD_OPTIONS  merge  stringify_keys ","options stringify_keys  stringify_keys "]}," ActionView Helpers InstanceTagMethods to_label_tag":{"type":"method","name":"to_label_tag","children":[],"call":[" label_tag ","name_and_id [] "," method_name humanize "," method_name "," object class human_attribute_name "," object class "," object "," object class respond_to? ","text to_s ","I18n  t presence ","I18n  t "," object_name ","text blank? "," block_given? ","options [] ","options delete "," add_default_name_and_id_for_value ","name_and_id delete ","name_and_id []= ","options dup ","options stringify_keys ","options dup  [] ","options stringify_keys  [] ","options stringify_keys  delete "," add_default_options dup _for_value ","options dup  delete ","options dup  []= ","options stringify_keys  dup ","options stringify_keys  stringify_keys "]}," ActionView Helpers InstanceTagMethods initialize":{"type":"method","name":"initialize","children":[],"call":[" raise ","object inspect ","object to_param ","object respond_to? ","@template_object instance_variable_get ","Regexp  last_match pre_match ","Regexp  last_match ","@object_name sub! ","method_name to_s dup ","method_name to_s ","object_name to_s dup ","object_name to_s "]}," ActionView Helpers FormHelper range_field":{"type":"method","name":"range_field","children":[],"call":["InstanceTag  new to_number_field_tag ","InstanceTag  new ","options delete ","Tags RangeField  new render ","Tags RangeField  new "]}," ActionView Helpers FormHelper number_field":{"type":"method","name":"number_field","children":[],"call":["InstanceTag  new to_number_field_tag ","InstanceTag  new ","options delete ","Tags NumberField  new render ","Tags NumberField  new "]}," ActionView Helpers FormHelper email_field":{"type":"method","name":"email_field","children":[],"call":["InstanceTag  new to_input_field_tag ","InstanceTag  new ","options delete ","Tags EmailField  new render ","Tags EmailField  new "]}," ActionView Helpers FormHelper url_field":{"type":"method","name":"url_field","children":[],"call":["InstanceTag  new to_input_field_tag ","InstanceTag  new ","options delete ","Tags UrlField  new render ","Tags UrlField  new "]}," ActionView Helpers FormHelper telephone_field":{"type":"method","name":"telephone_field","children":[],"call":["InstanceTag  new to_input_field_tag ","InstanceTag  new ","options delete ","Tags TelField  new render ","Tags TelField  new "]}," ActionView Helpers FormHelper search_field":{"type":"method","name":"search_field","children":[],"call":["InstanceTag  new to_input_field_tag ","InstanceTag  new ","options delete ","options []= ","options has_key? ","options [] "," request host split reverse join "," request host split reverse "," request host split "," request host "," request ","options [] == ","options stringify_keys ","Tags SearchField  new render ","Tags SearchField  new ","options stringify_keys  delete ","options stringify_keys  []= ","options stringify_keys  has_key? ","options stringify_keys  [] ","options stringify_keys  [] == ","options stringify_keys  stringify_keys "]}," ActionView Helpers CaptureHelper flush_output_buffer":{"type":"method","name":"flush_output_buffer","children":[],"call":[" output_buffer= "," output_buffer [] "," output_buffer "," response body_parts << "," response body_parts "," response "," output_buffer empty? ! "," output_buffer empty? ","new force_encoding "," output_buffer encoding ","new respond_to? "," output_buffer clone_empty "," output_buffer respond_to? "," response stream write "," response stream "]}," ActionView Helpers CaptureHelper content_for?":{"type":"method","name":"content_for?","children":[],"call":["@_content_for [] present? ","@_content_for [] ","@view_flow get present? ","@view_flow get "]}," ActionView Helpers CacheHelper fragment_for":{"type":"method","name":"fragment_for","children":[],"call":[" controller write_fragment "," controller "," output_buffer slice! "," output_buffer "," output_buffer length "," controller read_fragment "," controller fragment_exist? ","ActiveSupport SafeBuffer  new ","ret is_a? "," controller perform_caching "," output_buffer= "," output_buffer class new "," output_buffer class ","safe_output_buffer slice! "," output_buffer to_str "," output_buffer html_safe? ","ActionView OutputBuffer  new "," output_buffer is_a? "," controller write_ output_buffer slice!  "," controller write_safe_output_buffer slice!  "," controller write_ controller read_fragment  "," controller read_ output_buffer slice!  "," controller read_safe_output_buffer slice!  "," controller read_ controller read_fragment  "," controller  output_buffer slice! _exist? "," controller safe_output_buffer slice! _exist? "," controller  controller read_fragment _exist? "," output_buffer to_str  slice! "]}," ActionView Helpers AssetTagHelper asset_file_path!":{"type":"method","name":"asset_file_path!","children":[],"call":[" raise ","File  exist? "," asset_file_path "," is_uri? "]}," ActionView Helpers AssetTagHelper ensure_javascript_sources!":{"type":"method","name":"ensure_javascript_sources!","children":[],"call":[" asset_file_path! "," path_to_javascript ","sources each "," compute_public_path "]}," ActionView Helpers AssetTagHelper ensure_stylesheet_sources!":{"type":"method","name":"ensure_stylesheet_sources!","children":[],"call":[" asset_file_path! "," path_to_stylesheet ","sources each "," compute_public_path "]}," ActionView Helpers AssetTagHelper is_uri?":{"type":"method","name":"is_uri?","children":[],"call":["path =~ "]}," ActionView Helpers AssetTagHelper rewrite_host_and_protocol":{"type":"method","name":"rewrite_host_and_protocol","children":[],"call":[" controller request protocol "," controller request "," controller "," is_uri? ! "," is_uri? ","host present? "," compute_asset_host "," compute_asset_host  present? "," compute_asset_ compute_asset_host  "]}," ActionView Helpers AssetTagHelper rewrite_extension?":{"type":"method","name":"rewrite_extension?","children":[],"call":["File  exist? ","File  join "," config assets_dir "," config ","ext != ","source_ext blank? ","File  extname [] ","File  extname ","File  extname []  blank? "]}," ActionView Helpers AssetTagHelper audio_tag":{"type":"method","name":"audio_tag","children":[],"call":[" tag ","options []= "," path_to_audio ","options symbolize_keys! "," multiple_sources_tag "]}," ActionView Helpers AssetTagHelper video_tag":{"type":"method","name":"video_tag","children":[],"call":[" tag ","options []= "," path_to_video ","(send\n  (lvar :sources) :map) join html_safe ","(send\n  (lvar :sources) :map) join ","sources map "," content_tag ","sources is_a? ","size split ","size =~ ","options delete "," path_to_image ","options [] ","options symbolize_keys! "," multiple_sources_tag ","options delete  split ","options delete  =~ "]}," ActionView Helpers AssetTagHelper audio_path":{"type":"method","name":"audio_path","children":[],"call":[" compute_public_path "," asset_paths compute_public_path "," asset_paths "," asset_path "," config use_sprockets "," config "]}," ActionView Helpers AssetTagHelper video_path":{"type":"method","name":"video_path","children":[],"call":[" compute_public_path "," asset_paths compute_public_path "," asset_paths "," asset_path "," config use_sprockets "," config "]}," ActionView Helpers AssetTagHelper favicon_link_tag":{"type":"method","name":"favicon_link_tag","children":[],"call":[" tag ","(pair\n  (sym :rel)\n  (str \"shortcut icon\")) merge ","options symbolize_keys "," path_to_image ","(pair\n  (sym :rel)\n  (str \"shortcut icon\")) merge! "]}," ActionView Helpers ActiveModelInstanceTag tag_generate_errors?":{"type":"method","name":"tag_generate_errors?","children":[],"call":["options [] != ","options [] "]}," ActionView Helpers ActiveModelInstanceTag object_has_errors?":{"type":"method","name":"object_has_errors?","children":[],"call":[" error_message any? "," error_message "," object errors respond_to? "," object errors "," object "," object respond_to? "," error_message present? "]}," ActionView Helpers ActiveModelInstanceTag error_message":{"type":"method","name":"error_message","children":[],"call":[" object errors [] "," object errors "," object "]}," ActionView Helpers ActiveModelInstanceTag error_wrapping":{"type":"method","name":"error_wrapping","children":[],"call":["Base  field_error_proc call ","Base  field_error_proc "," object_has_errors? "," object errors [] any? "," object errors [] "," object errors "," object "," object errors respond_to? "," object respond_to? "]}," ActionView Helpers ActiveModelInstanceTag tag":{"type":"method","name":"tag","children":[],"call":[" error_wrapping "," tag_generate_errors? "]}," ActionView Helpers ActiveModelInstanceTag object":{"type":"method","name":"object","children":[],"call":["object to_model ","object respond_to? "]}," ActionView Context convert_to_model":{"type":"method","name":"convert_to_model","children":[],"call":["object to_model ","object respond_to? "]}," ActionView Base controller_path":{"type":"method","name":"controller_path","children":[],"call":[" controller controller_path "," controller "]}," ActionView Base assign":{"type":"method","name":"assign","children":[],"call":[" assigns= "," instance_variable_set ","new_assigns each "]}," ActionView Base view_context":{"type":"method","name":"view_context","children":[],"call":[]}," ActionDispatch TestResponse client_error?":{"type":"method","name":"client_error?","children":[],"call":["(irange\n  (int 400)\n  (int 499)) include? "," response_code "]}," ActionDispatch TestResponse error?":{"type":"method","name":"error?","children":[],"call":["(irange\n  (int 500)\n  (int 599)) include? "," response_code "," server_error? ","ActiveSupport Deprecation  warn ","(str \"       The error? predicate is deprecated and will be removed in Rails 6.0.\\n\") squish "]}," ActionDispatch TestResponse redirect?":{"type":"method","name":"redirect?","children":[],"call":["(irange\n  (int 300)\n  (int 399)) include? "," response_code "]}," ActionDispatch TestResponse missing?":{"type":"method","name":"missing?","children":[],"call":[" response_code == "," response_code "," not_found? ","ActiveSupport Deprecation  warn ","(str \"       The missing? predicate is deprecated and will be removed in Rails 6.0.\\n\") squish "]}," ActionDispatch TestResponse success?":{"type":"method","name":"success?","children":[],"call":["(irange\n  (int 200)\n  (int 299)) include? "," response_code "," successful? ","ActiveSupport Deprecation  warn ","(str \"       The success? predicate is deprecated and will be removed in Rails 6.0.\\n\") squish "]}," ActionDispatch TestResponse DeprecatedHelpers binary_content":{"type":"method","name":"binary_content","children":[],"call":[" body ","ActiveSupport Deprecation  warn "," caller "]}," ActionDispatch TestResponse DeprecatedHelpers has_template_object?":{"type":"method","name":"has_template_object?","children":[],"call":[" template_objects [] nil? ! "," template_objects [] nil? "," template_objects [] "," template_objects ","ActiveSupport Deprecation  warn "," caller "]}," ActionDispatch TestResponse DeprecatedHelpers template_objects":{"type":"method","name":"template_objects","children":[],"call":["@template assigns ","ActiveSupport Deprecation  warn "," caller "]}," ActionDispatch TestResponse DeprecatedHelpers has_session_object?":{"type":"method","name":"has_session_object?","children":[],"call":[" session [] nil? ! "," session [] nil? "," session [] "," session ","ActiveSupport Deprecation  warn "," caller "]}," ActionDispatch TestResponse DeprecatedHelpers has_flash_object?":{"type":"method","name":"has_flash_object?","children":[],"call":[" flash [] nil? ! "," flash [] nil? "," flash [] "," flash ","ActiveSupport Deprecation  warn "," caller "]}," ActionDispatch TestResponse DeprecatedHelpers has_flash_with_contents?":{"type":"method","name":"has_flash_with_contents?","children":[],"call":[" flash empty? ! "," flash empty? "," flash ","ActiveSupport Deprecation  warn "," caller "]}," ActionDispatch TestResponse DeprecatedHelpers has_flash?":{"type":"method","name":"has_flash?","children":[],"call":[" flash empty? ! "," flash empty? "," flash ","ActiveSupport Deprecation  warn "," caller "]}," ActionDispatch TestResponse DeprecatedHelpers flash":{"type":"method","name":"flash","children":[],"call":[" request session [] "," request session "," request ","ActiveSupport Deprecation  warn "," caller "]}," ActionDispatch TestResponse DeprecatedHelpers rendered":{"type":"method","name":"rendered","children":[],"call":["@template instance_variable_get ","ActiveSupport Deprecation  warn "," caller "]}," ActionDispatch TestResponse DeprecatedHelpers redirect_url_match?":{"type":"method","name":"redirect_url_match?","children":[],"call":["p match != ","p match "," redirect_url ","p nil? ","pattern class == ","pattern class ","Regexp  new "," redirect_url nil? "," ActiveSupport Deprecation  warn "," caller ","Regexp  new  match != ","Regexp  new  match ","Regexp  new  nil? ","Regexp  new attern class == ","Regexp  new attern class ","RegexRegexp  new   new "," ActiveSuRegexp  new Regexp  new ort DeRegexp  new recation  warn "]}," ActionDispatch TestResponse DeprecatedHelpers redirected_to":{"type":"method","name":"redirected_to","children":[],"call":[" redirect_url "," ActiveSupport Deprecation  warn "," caller "]}," ActionDispatch TestResponse DeprecatedHelpers layout":{"type":"method","name":"layout","children":[],"call":["@template layout ","ActiveSupport Deprecation  warn "," caller "]}," ActionDispatch TestResponse DeprecatedHelpers assigns":{"type":"method","name":"assigns","children":[],"call":["@template controller assigns ","@template controller ","ActiveSupport Deprecation  warn "," caller "]}," ActionDispatch TestResponse DeprecatedHelpers session":{"type":"method","name":"session","children":[],"call":["@request session ","ActiveSupport Deprecation  warn "," caller "]}," ActionDispatch TestResponse DeprecatedHelpers template":{"type":"method","name":"template","children":[],"call":["ActiveSupport Deprecation  warn "," caller "]}," ActionDispatch TestResponse from_response":{"type":"method","name":"from_response","children":[],"call":[]}," ActionDispatch TestRequest delete_nil_values!":{"type":"method","name":"delete_nil_values!","children":[],"call":["v nil? ","@env delete_if "]}," ActionDispatch TestRequest write_cookies!":{"type":"method","name":"write_cookies!","children":[],"call":["@env []= ","(send\n  (ivar :@cookies) :map) join ","@cookies map ","@cookies blank? "," escape_cookie "]}," ActionDispatch TestRequest cookies":{"type":"method","name":"cookies","children":[],"call":[" with_indifferent_access "]}," ActionDispatch TestRequest accept=":{"type":"method","name":"accept=","children":[],"call":["@env []= ","(send\n  (send nil :Array\n    (lvar :mime_types)) :collect) join ","mime_types to_s "," Array collect "," Array ","@env delete ","mime_type to_s "," set_header "," Array collect join "," delete_header "]}," ActionDispatch TestRequest user_agent=":{"type":"method","name":"user_agent=","children":[],"call":["@env []= "," set_header "]}," ActionDispatch TestRequest remote_addr=":{"type":"method","name":"remote_addr=","children":[],"call":["@env []= "," set_header "]}," ActionDispatch TestRequest if_none_match=":{"type":"method","name":"if_none_match=","children":[],"call":["@env []= "," set_header "]}," ActionDispatch TestRequest if_modified_since=":{"type":"method","name":"if_modified_since=","children":[],"call":["@env []= "," set_header "]}," ActionDispatch TestRequest action=":{"type":"method","name":"action=","children":[],"call":[" path_parameters []= ","action_name to_s "," path_parameters "]}," ActionDispatch TestRequest path=":{"type":"method","name":"path=","children":[],"call":["@env []= "," set_header "]}," ActionDispatch TestRequest request_uri=":{"type":"method","name":"request_uri=","children":[],"call":["@env []= "," set_header "]}," ActionDispatch TestRequest port=":{"type":"method","name":"port=","children":[],"call":["@env []= ","number to_i "," set_header "]}," ActionDispatch TestRequest host=":{"type":"method","name":"host=","children":[],"call":["@env []= "," set_header "]}," ActionDispatch TestRequest request_method=":{"type":"method","name":"request_method=","children":[],"call":["@env []= ","method to_s upcase ","method to_s "," set_header "]}," ActionDispatch TestRequest env":{"type":"method","name":"env","children":[],"call":[" delete_nil_values! "," write_cookies! "]}," ActionDispatch TestRequest initialize":{"type":"method","name":"initialize","children":[],"call":[" user_agent= "," remote_addr= "," host= ","DEFAULT_ENV  merge ","Rails  application env_defaults merge ","Rails  application env_defaults ","Rails  application ","Rails  application env_config merge ","Rails  application env_config "," default_env merge "," default_env ","Rails  application Rails  application env_defaults merge _defaults merge ","Rails  application Rails  application env_config merge _defaults merge ","Rails  application Rails  application env_defaults merge _defaults ","Rails  application Rails  application env_config merge _defaults ","Rails  application Rails  application env_defaults merge _config merge ","Rails  application Rails  application env_config merge _config merge ","Rails  application Rails  application env_defaults merge _config ","Rails  application Rails  application env_config merge _config "," default_Rails  application env_defaults merge  merge "," default_Rails  application env_config merge  merge "," default_Rails  application env_defaults merge  "," default_Rails  application env_config merge  "]}," ActionDispatch TestRequest new":{"type":"method","name":"new","children":[],"call":[]}," ActionDispatch TestProcess fixture_file_upload":{"type":"method","name":"fixture_file_upload","children":[],"call":["Rack Test UploadedFile  new ","ActionController TestCase  send ","ActionController TestCase  respond_to? "," class fixture_path "," class "," class respond_to? ","File  join ","File  exist? ! ","File  exist? "," class ActionController TestCase  send  "," class  class fixture_path  "," class fixture_File  join  "]}," ActionDispatch TestProcess redirect_to_url":{"type":"method","name":"redirect_to_url","children":[],"call":["@response redirect_url "]}," ActionDispatch TestProcess cookies":{"type":"method","name":"cookies","children":[],"call":["@request cookies merge ","@response cookies ","@request cookies ","@request cookies merge with_indifferent_access ","@request cookie_jar ","Cookies CookieJar  build "]}," ActionDispatch TestProcess flash":{"type":"method","name":"flash","children":[],"call":["@request flash "]}," ActionDispatch TestProcess session":{"type":"method","name":"session","children":[],"call":["@request session "]}," ActionDispatch TestProcess assigns":{"type":"method","name":"assigns","children":[],"call":["assigns [] ","key nil? ","assigns []= ","@controller instance_variable_get ","ivar [] ","ActionController Base  protected_instance_variables include? ","ActionController Base  protected_instance_variables ","@controller instance_variable_names each ","@controller instance_variable_names "," with_indifferent_access ","key to_s ","@controller view_assigns with_indifferent_access ","@controller view_assigns ","assigns regular_writer ","@controller view_assigns each "," raise "," with_indifferent_access  [] ","@controller view_assigns with_indifferent_access  [] "," with_indifferent_access  []= ","@controller view_assigns with_indifferent_access  []= ","@controller view_ with_indifferent_access  with_indifferent_access ","@controller view_@controller view_assigns with_indifferent_access  with_indifferent_access ","@controller view_ with_indifferent_access  ","@controller view_@controller view_assigns with_indifferent_access  "," with_indifferent_access  regular_writer ","@controller view_assigns with_indifferent_access  regular_writer ","@controller view_ with_indifferent_access  each ","@controller view_@controller view_assigns with_indifferent_access  each "]}," ActionDispatch IntegrationTest app":{"type":"method","name":"app","children":[],"call":[" class app "," class "]}," ActionDispatch IntegrationTest app=":{"type":"method","name":"app=","children":[],"call":[]}," ActionDispatch Integration Runner method_missing":{"type":"method","name":"method_missing","children":[],"call":[" copy_session_variables! ","@integration_session __send__ tap ","@integration_session __send__ ","@integration_session respond_to? "," reset! "," returning "," integration_session __send__ tap "," integration_session __send__ "," integration_session "," integration_session respond_to? "," integration_session public_send tap "," integration_session public_send "]}," ActionDispatch Integration Runner url_options":{"type":"method","name":"url_options","children":[],"call":["@integration_session url_options "," reset! "," integration_session url_options "," integration_session "]}," ActionDispatch Integration Runner copy_session_variables!":{"type":"method","name":"copy_session_variables!","children":[],"call":[" instance_variable_set ","@integration_session __send__ ","(str \"controller\") each "," integration_session ","@integration_session request ","@integration_session response ","@integration_session controller "]}," ActionDispatch Integration Runner open_session":{"type":"method","name":"open_session","children":[],"call":[" block_given? "," dup tap "," dup ","session test_result= ","session delegate= ","session extend "," test_result add_assertion "," test_result ","extras __send__ "," delegate send "," delegate "," respond_to? ","table_name tr "," class fixture_table_names each "," class fixture_table_names "," class "," class respond_to? "," attr_accessor ","Module  new ","Integration Session  new "," app ","session reset! ","session root_session= "," root_session ","Integration Session  new  test_result= ","Integration Session  new  delegate= ","Integration Session  new  extend ","table_table_name tr  tr "," class fixture_table_table_name tr s each "," class fixture_table_table_name tr s ","Integration Session  new  reset! ","Integration Session  new  root_Integration Session  new = "," root_Integration Session  new  "]}," ActionDispatch Integration Runner reset!":{"type":"method","name":"reset!","children":[],"call":["Integration Session  new "," app "," open_session "," create_session "]}," ActionDispatch Integration Runner app":{"type":"method","name":"app","children":[],"call":[]}," ActionDispatch Integration Session process":{"type":"method","name":"process","children":[],"call":["response status ","session last_request env [] ","session last_request env ","session last_request ","ActionDispatch TestResponse  new ","response body ","response headers "," _mock_session last_response "," _mock_session ","ActionDispatch Request  new ","session request ","uri to_s ","env [] try ","env [] ","uri port ","uri host ","uri scheme ","URI  parse ","env []= ","(or\n  (lvar :rack_environment)\n  (hash)) each ","Rack Test Session  new "," accept "," remote_addr "," host "," https? "," host split [] "," host split "," include ","ActionController Base  class_eval ","ActionController Base  < ","location path ","location query "," host! ","location host "," https! ","URI HTTPS  === ","location scheme ","path =~ "," response status "," response ","ActionDispatch TestResponse  from_response ","@mock_session last_response ","env reverse_merge! ","env merge! ","Http Headers  new merge! ","Http Headers  new ","location port "," build_full_uri ","@request controller_instance ","@response response_parser= ","RequestEncoder  parser ","@response content_type ","@response request= ","Http Headers  from_hash merge! ","Http Headers  from_hash ","env present? ","headers present? ","(send\n  (const nil :Mime) :[]\n  (sym :js)) join ","Mime  [] ","headers [] ","headers []= ","request_encoder content_type ","request_encoder encode_params ","request_encoder append_format_to ","default != ","Rack Request DEFAULT_PORTS  [] ","RequestEncoder  encoder ","wrapped_headers present? ","wrapped_headers [] ","wrapped_headers []= ","wrapped_headers merge! ","request_encoder accept_header ","as == ","method == "," build_expanded_path ","(str \"://\") match? ","request_env []= ","path include? "," _mock_session last_response  status ","@mock_session last_response  status ","Rack Test Session  new  last_request env [] ","Rack Test Session  new  last_request env ","Rack Test Session  new  last_request "," _mock_session last_response  body ","@mock_session last_response  body "," _mock_session last_response  headers ","@mock_session last_response  headers "," _mock_session last_ _mock_session last_response  "," _mock_session last_@mock_session last_response  "," _mock_Rack Test Session  new  last_response "," _mock_Rack Test Session  new  ","Rack Test Session  new  request ","URI  parse  to_s ","URI  parse  port ","URI  parse  host ","URI  parse  scheme ","location location path  ","location request_encoder append_format_to  ","URI  parse  path ","URI  parse  query ","location path  =~ ","request_encoder append_format_to  =~ ","  _mock_session last_response  status "," @mock_session last_response  status ","  _mock_session last_response  "," @mock_session last_response  ","ActionDispatch TestResponse  from_ _mock_session last_response  ","ActionDispatch TestResponse  from_@mock_session last_response  ","@mock_session last_ _mock_session last_response  ","@mock_session last_@mock_session last_response  ","@mock_Rack Test Session  new  last_response "," build_full_URI  parse  ","ActionDispatch Request  new  controller_instance ","ActionDispatch TestResponse  new  response_parser= ","ActionDispatch TestResponse  from_response  response_parser= ","@ _mock_session last_response   _mock_session last_response _parser= ","@@mock_session last_response  @mock_session last_response _parser= ","ActionDispatch TestResponse  new  content_type ","ActionDispatch TestResponse  from_response  content_type ","@ _mock_session last_response  content_type ","@@mock_session last_response  content_type ","ActionDispatch TestResponse  new  request= ","ActionDispatch TestResponse  from_response  request= ","@ _mock_session last_response  request= ","@@mock_session last_response  request= ","RequestEncoder  encoder  content_type ","RequestEncoder  encoder  encode_params ","RequestEncoder  encoder  append_format_to ","Rack Request DEFAULT_PORTS  []  != ","Http Headers  from_hash  present? ","Http Headers  from_hash  [] ","Http Headers  from_hash  []= ","Http Headers  from_hash  merge! ","RequestEncoder  encoder  accept_header "," build_expanded_location path  "," build_expanded_request_encoder append_format_to  ","location path  include? ","request_encoder append_format_to  include? "]}," ActionDispatch Integration Session _mock_session":{"type":"method","name":"_mock_session","children":[],"call":["Rack MockSession  new "," host "]}," ActionDispatch Integration Session host!":{"type":"method","name":"host!","children":[],"call":[]}," ActionDispatch Integration Session https?":{"type":"method","name":"https?","children":[],"call":[]}," ActionDispatch Integration Session https!":{"type":"method","name":"https!","children":[],"call":[]}," ActionDispatch Integration Session reset!":{"type":"method","name":"reset!","children":[],"call":[" singleton_class "," accept= ","text/xml,application/xml,application/xhtml+xml, + + ","text/xml,application/xml,application/xhtml+xml, + "," remote_addr= "," host= "," public ","ActionController Routing Routes  named_routes helpers ","ActionController Routing Routes  named_routes ","klass module_eval ","ActionController Routing Routes  install_helpers "," metaclass ","Rack MockSession  new "," singleton_class  module_eval "," metaclass  module_eval "]}," ActionDispatch Integration Session default_url_options":{"type":"method","name":"default_url_options","children":[],"call":[" https? "," host "]}," ActionDispatch Integration Session initialize":{"type":"method","name":"initialize","children":[],"call":[" reset! "," include ","app routes url_helpers ","app routes "," singleton_class class_eval "," singleton_class ","app routes respond_to? ","app respond_to? ","app routes mounted_helpers "]}," ActionDispatch Integration Session cookies":{"type":"method","name":"cookies","children":[],"call":[" _mock_session cookie_jar "," _mock_session ","@mock_session cookie_jar "]}," ActionDispatch Integration Session host":{"type":"method","name":"host","children":[],"call":[]}," ActionDispatch Integration RequestHelpers delete_via_redirect":{"type":"method","name":"delete_via_redirect","children":[],"call":[" request_via_redirect ","ActiveSupport Deprecation  warn "]}," ActionDispatch Integration RequestHelpers put_via_redirect":{"type":"method","name":"put_via_redirect","children":[],"call":[" request_via_redirect ","ActiveSupport Deprecation  warn "]}," ActionDispatch Integration RequestHelpers post_via_redirect":{"type":"method","name":"post_via_redirect","children":[],"call":[" request_via_redirect ","ActiveSupport Deprecation  warn "]}," ActionDispatch Integration RequestHelpers get_via_redirect":{"type":"method","name":"get_via_redirect","children":[],"call":[" request_via_redirect ","ActiveSupport Deprecation  warn "]}," ActionDispatch Integration RequestHelpers request_via_redirect":{"type":"method","name":"request_via_redirect","children":[],"call":[" status "," follow_redirect! "," redirect? "," process "," process_with_kwargs ","ActiveSupport Deprecation  warn "]}," ActionDispatch Integration RequestHelpers follow_redirect!":{"type":"method","name":"follow_redirect!","children":[],"call":[" status "," get "," response location "," response "," raise "," status_message "," redirect? "," public_send "," request method downcase "," request method "," request ","(int 307) include? "," response status ","headers []= "," request url ","headers key? ","(sym :HTTP_REFERER) none? "," request  request method downcase  downcase "," request  request method downcase  "]}," ActionDispatch Integration RequestHelpers xml_http_request":{"type":"method","name":"xml_http_request","children":[],"call":[" process ","(const\n  (const nil :Mime) :JS) join ","headers [] ","headers []= ","headers_or_env [] ","headers_or_env []= ","ActiveSupport Deprecation  warn ","(str \"          xhr and xml_http_request methods are deprecated in favor of\\n\") strip_heredoc "," non_kwarg_request_warning ","headers present? ","params present? ","args [] ","args first values_at ","args first "," kwarg_request? ","(str \"          `xhr` and `xml_http_request` are deprecated and will be removed in Rails 5.1.\\n\") strip_heredoc ","args []  [] ","args []  []= ","args [] _or_env [] ","args [] _or_env []= ","args []  present? "]}," ActionDispatch Integration RequestHelpers head":{"type":"method","name":"head","children":[],"call":[" process "," process_with_kwargs "]}," ActionDispatch Integration RequestHelpers delete":{"type":"method","name":"delete","children":[],"call":[" process "," process_with_kwargs "]}," ActionDispatch Integration RequestHelpers put":{"type":"method","name":"put","children":[],"call":[" process "," process_with_kwargs "]}," ActionDispatch Integration RequestHelpers post":{"type":"method","name":"post","children":[],"call":[" process "," process_with_kwargs "]}," ActionDispatch Integration RequestHelpers get":{"type":"method","name":"get","children":[],"call":[" process "," process_with_kwargs "]}," ActionDispatch Assertions TagAssertions html_document":{"type":"method","name":"html_document","children":[],"call":["HTML Document  new ","@response body ","@response content_type =~ ","@response content_type "]}," ActionDispatch Assertions TagAssertions find_all_tag":{"type":"method","name":"find_all_tag","children":[],"call":[" html_document find_all "," html_document "]}," ActionDispatch Assertions TagAssertions find_tag":{"type":"method","name":"find_tag","children":[],"call":[" html_document find "," html_document "]}," ActionDispatch Assertions TagAssertions assert_no_tag":{"type":"method","name":"assert_no_tag","children":[],"call":[" assert ","@response body inspect ","@response body ","opts inspect ","tag ! "," find_tag ","opts first ","opts last merge ","opts first to_s ","opts last ","opts size > ","opts size ","opts first  inspect ","opts last merge  inspect "," find_tag  ! "," find_ find_tag  ","opts first  first ","opts last merge  first ","opts first  last merge ","opts last merge  last merge ","opts first  first to_s ","opts last merge  first to_s ","opts first  last ","opts last merge  last ","opts first  size > ","opts last merge  size > ","opts first  size ","opts last merge  size "]}," ActionDispatch Assertions TagAssertions assert_tag":{"type":"method","name":"assert_tag","children":[],"call":[" assert ","@response body inspect ","@response body ","opts inspect "," find_tag ","opts first ","opts last merge ","opts first to_s ","opts last ","opts size > ","opts size ","opts first  inspect ","opts last merge  inspect "," find_ find_tag  ","opts first  first ","opts last merge  first ","opts first  last merge ","opts last merge  last merge ","opts first  first to_s ","opts last merge  first to_s ","opts first  last ","opts last merge  last ","opts first  size > ","opts last merge  size > ","opts first  size ","opts last merge  size "]}," ActionDispatch Assertions SelectorAssertions unescape_rjs":{"type":"method","name":"unescape_rjs","children":[],"call":["(send\n  (nth-ref 1) :hex) pack ","1 hex ","unescaped gsub! ","rjs_string gsub ","rjs_string gsub  gsub! "]}," ActionDispatch Assertions SelectorAssertions response_from_page_or_rjs":{"type":"method","name":"response_from_page_or_rjs","children":[],"call":[" html_document root "," html_document ","root children concat ","root children ","n tag? ","HTML Document  new root children select ","HTML Document  new root children ","HTML Document  new root ","HTML Document  new "," unescape_rjs ","body sub! ","RJS_STATEMENTS  [] ","HTML Node  new ","@response body dup ","@response body ","Mime JS  =~ ","@response content_type ","  unescape_rjs _document root "," html_document HTML Node  new  ","  unescape_rjs _document ","HTML Node  new  children concat ","HTML Node  new  children ","HTML Document  new HTML Node  new  children select ","HTML Document  new HTML Node  new  children ","HTML Document  new HTML Node  new  ","@response body dup  sub! ","@response @response body dup  dup ","@response @response body dup  ","@response @response content_type  "]}," ActionDispatch Assertions SelectorAssertions assert_select_email":{"type":"method","name":"assert_select_email","children":[],"call":[" assert_select ","HTML Document  new root ","HTML Document  new ","part body ","part [] to_s =~ ","part [] to_s ","part [] ","delivery parts "," assert ","deliveries empty? ! ","deliveries empty? ","ActionMailer Base  deliveries ","part body to_s ","delivery parts empty? ","(if\n  (send\n    (send\n      (lvar :delivery) :parts) :empty?)\n  (array\n    (lvar :delivery))\n  (send\n    (lvar :delivery) :parts)) each ","deliveries each ","HTML Document  new HTML Document  new root  ","ActionMailer Base  deliveries  empty? ! ","ActionMailer Base  deliveries  empty? ","ActionMailer Base  ActionMailer Base  deliveries  ","ActionMailer Base  deliveries  each "]}," ActionDispatch Assertions SelectorAssertions assert_select_encoded":{"type":"method","name":"assert_select_encoded","children":[],"call":[" assert_select "," css_select [] "," css_select ","HTML Document  new root ","HTML Document  new ","CGI  unescapeHTML ","(send\n  (block\n    (send\n      (send\n        (lvar :element) :children) :select)\n    (args\n      (arg :c))\n    (send\n      (send\n        (lvar :c) :tag?) :!)) :map) join ","fix_content [] ","(send\n  (send\n    (lvar :element) :children) :select) map ","c tag? ! ","c tag? ","element children select ","element children ","elements map ","Rack Utils  escapeHTML ","node content gsub ","node content "," lambda "," raise ","(send\n  (block\n    (send\n      (send\n        (lvar :_element) :children) :select)\n    (args\n      (arg :c))\n    (send\n      (send\n        (lvar :c) :tag?) :!)) :map) join ","(send\n  (send\n    (lvar :_element) :children) :select) map ","_element children select ","_element children ","(send\n  (block\n    (send\n      (send\n        (lvar :elem) :children) :select)\n    (args\n      (arg :c))\n    (send\n      (send\n        (lvar :c) :tag?) :!)) :map) join ","(send\n  (send\n    (lvar :elem) :children) :select) map ","elem children select ","elem children ","HTML Document  new HTML Document  new root  "]}," ActionDispatch Assertions SelectorAssertions assert_select_rjs":{"type":"method","name":"assert_select_rjs","children":[],"call":[" flunk ","args shift ","rjs_type to_s ","(send\n  (array\n    (sym :remove)\n    (sym :show)\n    (sym :hide)\n    (sym :toggle)) :include?\n  (lvar :rjs_type)) ! ","(sym :remove) include? "," block_given? "," assert_block ","matches concat ","n tag? ","HTML Document  new root children select ","HTML Document  new root children ","HTML Document  new root ","HTML Document  new "," unescape_rjs ","@response body gsub ","@response body ","@response body match ","Regexp  new ","statement gsub ","RJS_STATEMENTS  [] "," raise ","(str \"insert_\") to_sym ","rjs_type == ","args first is_a? ","args first ","args shift  to_s ","(send\n  (array\n    (sym :remove)\n    (sym :show)\n    (sym :hargs shift e)\n    (sym :toggle)) :include?\n  (lvar :rjs_type)) ! ","(send\n  (array\n    (sym :remove)\n    (sym :show)\n    (sym :hide)\n    (sym :toggle)) :include?\n  (lvar :args shift )) ! ","@response body match  concat ","args shift  == "]}," ActionDispatch Assertions SelectorAssertions count_description":{"type":"method","name":"count_description","children":[],"call":["pluralize [] ","(and\n  (send\n    (lvar :min) :==\n    (int 1))\n  (send\n    (lvar :max) :==\n    (int 1))) ! ","max == ","min == ","max != ","word << ","quantity == "," lambda "]}," ActionDispatch Assertions SelectorAssertions assert_select":{"type":"method","name":"assert_select","children":[],"call":["matches empty? ! ","matches empty? "," block_given? "," assert ","matches size <= ","matches size ","matches size >= ","matches size == ","selector to_s "," count_description ","equals [] "," build_message ","html == ","match_with to_s ","html =~ ","match_with is_a? ","html strip! ","NO_STRIP  include? ","match name ","match children map join ","match children map ","match children ","matches delete_if ","text == ","text =~ ","text strip! ","text << ","node content ","stack concat ","node children reverse ","node children ","node tag? ","stack pop ","match children reverse ","selector select "," raise ","args shift ","equals []= ","arg end ","arg begin ","HTML Selector  new "," response_from_page_or_rjs ","root children concat ","root children ","HTML Node  new ","arg == ","arg is_a? ","content force_encoding ","match_with encoding ","content respond_to? ","text force_encoding ","text respond_to? "," response_from_page ","text sub! ","match name == "," assert_operator "," assert_equal "," sprintf ","selector select  empty? ! ","selector select  empty? ","selector select  size <= ","selector select  size ","selector select  size >= ","selector select  size == ","HTML Selector  new  to_s "," build_args shift  ","match children map join  == ","equals []  to_s ","match children map join  =~ ","equals []  is_a? ","match children map join  strip! ","selector select  delete_if ","node node content  ","stack pop  content ","match children reverse  concat ","stack pop  children reverse ","stack pop  children ","stack pop  tag? ","match children reverse  pop ","HTML Selector  new  select ","args shift s shift ","args shift  end ","args shift  begin "," response_from_page_or_rjs  children concat ","HTML Node  new  children concat "," response_from_page  children concat "," response_from_page_or_rjs  children ","HTML Node  new  children "," response_from_page  children ","args shift  == ","args shift  is_a? ","node content  force_encoding ","equals []  encoding ","node content  respond_to? "]}," ActionDispatch Assertions SelectorAssertions css_select":{"type":"method","name":"css_select","children":[],"call":["selector select "," raise ","HTML Selector  new "," response_from_page_or_rjs ","matches << ","m equal? ","matches any? ","subset each "," css_select ","args dup ","arg dup ","@selected each ","arg == ","args shift ","arg is_a? "," response_from_page ","HTML Selector  new  select "," css_select  each ","args shift s dup ","args shift  dup ","args shift  == ","args shift s shift ","args shift  is_a? "]}," ActionDispatch Assertions RoutingAssertions recognized_request_for":{"type":"method","name":"recognized_request_for","children":[],"call":["request path_parameters= ","params with_indifferent_access ","@routes recognize_path ","request request_method= ","request path= ","path first == ","path first "," raise ","e message ","uri path ","uri path to_s empty? ","uri path to_s ","request port= ","uri port ","request host= ","uri host ","request env []= ","uri scheme ","request env ","URI  parse ","path =~ ","ActionController TestRequest  new ","path [] ","path is_a? ","ActionController Routing Routes  recognize_path ","request method ","request_method to_s upcase ","request_method to_s "," fail_on ","ActionController TestRequest  create ","@controller class ","(str \"://\") match? ","path start_with? ","path include? ","ActionController TestRequest  new  path_parameters= ","ActionController TestRequest  create  path_parameters= ","request path [] _parameters= ","@routes recognize_path  with_indifferent_access ","ActionController Routing Routes  recognize_path  with_indifferent_access ","@routes recognize_path []  ","ActionController TestRequest  new  ActionController TestRequest  new _method= ","ActionController TestRequest  create  ActionController TestRequest  create _method= ","request request_path [] = ","ActionController TestRequest  new  path= ","ActionController TestRequest  create  path= ","request path [] = ","path []  first == ","path []  first ","URI  parse  path ","uri path []  ","URI  parse  path to_s empty? ","uri path []  to_s empty? ","URI  parse  path to_s ","uri path []  to_s ","ActionController TestRequest  new  port= ","ActionController TestRequest  create  port= ","URI  parse  port ","ActionController TestRequest  new  host= ","ActionController TestRequest  create  host= ","URI  parse  host ","ActionController TestRequest  new  env []= ","ActionController TestRequest  create  env []= ","URI  parse  scheme ","ActionController TestRequest  new  env ","ActionController TestRequest  create  env ","path []  =~ ","path []  [] ","path []  is_a? ","ActionController Routing Routes  recognize_path []  ","ActionController TestRequest  new  method ","ActionController TestRequest  create  method ","request path []  ","ActionController TestRequest  new _method to_s upcase ","ActionController TestRequest  create _method to_s upcase ","request_path []  to_s upcase ","ActionController TestRequest  new _method to_s ","ActionController TestRequest  create _method to_s ","request_path []  to_s ","path []  start_with? ","path []  include? "]}," ActionDispatch Assertions RoutingAssertions method_missing":{"type":"method","name":"method_missing","children":[],"call":["@controller send ","@routes named_routes helpers include? ","@routes named_routes helpers ","@routes named_routes ","ActionController Routing Routes  named_routes helpers include? ","ActionController Routing Routes  named_routes helpers ","ActionController Routing Routes  named_routes ","@routes named_routes route_defined? ","@controller public_send "]}," ActionDispatch Assertions RoutingAssertions with_routing":{"type":"method","name":"with_routing","children":[],"call":["@controller view_context_class= "," include ","_routes url_helpers ","Class  new ","@controller view_context_class ","@controller singleton_class send ","@controller singleton_class ","@controller clone ","ActionDispatch Routing RouteSet  new ","ActionController Routing  const_set "," remove_const ","ActionController Routing  module_eval ","ActionController Routing  const_defined? "," const_set ","ActionController Routing RouteSet  new ","@controller singleton_class include ","@controller respond_to? ","@controller extend "," define_method ","Module  new "," reset_routes "," create_routes "]}," ActionDispatch Assertions RoutingAssertions assert_routing":{"type":"method","name":"assert_routing","children":[],"call":[" assert_generates ","path [] ","path is_a? ","options []= ","default_controller include? ","controller include? ","defaults [] ","options [] "," assert_recognizes ","defaults key? ","options dup delete_if ","options dup "]}," ActionDispatch Assertions RoutingAssertions assert_generates":{"type":"method","name":"assert_generates","children":[],"call":["expected_path == "," assert_block "," build_message ","found_extras == ","extra_keys include? ! ","extra_keys include? ","options reject ","@routes generate_extras ","expected_path first == ","expected_path first "," raise ","e message ","uri path ","uri path to_s empty? ","uri path to_s ","URI  parse ","expected_path =~ ","ActionController Routing Routes  generate_extras ","expected_path [] == ","expected_path [] "," assert_equal "," sprintf "," fail_on ","query_string_keys include? ! ","query_string_keys include? ","options clone ","(str \"://\") match? ","expected_path start_with? ","expected_path include? ","uri path  == ","options clone  reject ","uri path  first == ","uri path  first ","URI  parse  path ","URI  parse  path to_s empty? ","URI  parse  path to_s ","uri path  =~ ","uri path  [] == ","uri path  [] ","options clone  clone ","uri path  start_with? ","uri path  include? "]}," ActionDispatch Assertions RoutingAssertions assert_recognizes":{"type":"method","name":"assert_recognizes","children":[],"call":["request path_parameters == ","request path_parameters "," assert_block "," build_message ","expected_options diff ","expected_options stringify_keys! ","expected_options delete ","extras each_key ","extras nil? ","expected_options clone "," recognized_request_for ","path [] ","path is_a? "," assert_equal "," sprintf "," message "," assert_recognizes ","path merge ","(sym :get) each ","path [] to_s == ","path [] to_s "," recognized_request_for  path_parameters == ","request path [] _parameters == "," recognized_request_for  path_parameters ","request path [] _parameters ","expected_options clone  diff ","expected_options clone  stringify_keys! ","expected_options clone  delete ","expected_options clone  clone "," recognized_ recognized_request_for _for ","path []  [] ","path []  is_a? ","path []  merge ","path []  [] to_s == ","path []  [] to_s "]}," ActionDispatch Assertions ResponseAssertions validate_request!":{"type":"method","name":"validate_request!","children":[],"call":[" raise ","@request is_a? "]}," ActionDispatch Assertions ResponseAssertions normalize_argument_to_redirection":{"type":"method","name":"normalize_argument_to_redirection","children":[],"call":["(lvar :fragment) gsub ","@controller url_for "," raise ","@request headers [] ","@request headers ","@request protocol + + ","@request protocol + ","@request host_with_port ","@request protocol ","fragment =~ ","/ + ","after_routing first != ","after_routing first ","after_routing =~ ","normalized delete ","normalized respond_to? ","@controller _compute_redirect_to_location ","Regexp  === ","handle _compute_redirect_to_location ","(send\n  (const nil :Class) :new\n  (const\n    (const nil :ActionController) :Metal)) new "," include ","Class  new ","/ +  first != ","@controller url_for  first != ","/ +  first ","@controller url_for  first ","/ +  =~ ","@controller url_for  =~ "]}," ActionDispatch Assertions ResponseAssertions parameterize":{"type":"method","name":"parameterize","children":[],"call":["value to_param ","value respond_to? "]}," ActionDispatch Assertions ResponseAssertions assert_redirected_to":{"type":"method","name":"assert_redirected_to","children":[],"call":[" flunk ","redirected_to_after_normalisation != "," normalize_argument_to_redirection ","@response location ","options == "," assert_response "," validate_request! ","redirect_is != "," build_message "," assert_operator ","options === ","url_options === ","options [] ","options is_a? "," normalize_argument_to_redirection  != "]}," ActionDispatch Assertions ResponseAssertions assert_response":{"type":"method","name":"assert_response","children":[],"call":[" assert_block "," build_message ","@response response_code ","@response response_code == ","Rack Utils SYMBOL_TO_STATUS_CODE  [] ","type is_a? ","@response send ","(sym :success) include? "," validate_request! "," flunk ","type in? "," assert_equal "," assert ","Symbol  === "," raise ","code nil? ","AssertionResponse  new code ","AssertionResponse  new ","RESPONSE_PREDICATES  [] ","RESPONSE_PREDICATES  keys include? ","RESPONSE_PREDICATES  keys "," generate_response_message ","@response public_send ","RESPONSE_PREDICATES  key? ","@response response_Rack Utils SYMBOL_TO_STATUS_CODE  []  ","@response response_Rack Utils SYMBOL_TO_STATUS_CODE  []  == ","Rack Utils SYMBOL_TO_STATUS_CODE  []  nil? ","AssertionResponse  new Rack Utils SYMBOL_TO_STATUS_CODE  []  "]}," ActionDispatch Assertions DomAssertions assert_dom_not_equal":{"type":"method","name":"assert_dom_not_equal","children":[],"call":["expected_dom != "," assert_block "," build_message ","actual_dom to_s ","expected_dom to_s ","HTML Document  new root ","HTML Document  new "," assert_not_equal ","HTML Document  new root  != ","HTML Document  new root  to_s "]}," ActionDispatch Assertions DomAssertions assert_dom_equal":{"type":"method","name":"assert_dom_equal","children":[],"call":["expected_dom == "," assert_block "," build_message ","actual_dom to_s ","expected_dom to_s ","HTML Document  new root ","HTML Document  new "," assert_equal ","HTML Document  new root  == ","HTML Document  new root  to_s "]}," ActionDispatch Routing UrlFor url_for":{"type":"method","name":"url_for","children":[],"call":[" polymorphic_url "," _routes url_for ","(or\n  (lvar :options)\n  (hash)) reverse_merge! symbolize_keys ","(or\n  (lvar :options)\n  (hash)) reverse_merge! "," url_options "," _routes "," _router url_for "," url_options merge "," _router ","(or\n  (lvar :options)\n  (hash)) symbolize_keys ","(or\n  (lvar :options)\n  (hash)) reverse_merge symbolize_keys ","(or\n  (lvar :options)\n  (hash)) reverse_merge ","(or\n  (lvar :options)\n  (hash)) symbolize_keys reverse_merge! ","options symbolize_keys reverse_merge! ","options symbolize_keys "," url_options symbolize_keys ","options extract_options! ","HelperMethodBuilder  url handle_model_call ","HelperMethodBuilder  url ","HelperMethodBuilder  url handle_class_call ","HelperMethodBuilder  url handle_string_call ","options delete ","components extract_options! ","options dup ","options to_h symbolize_keys reverse_merge! ","options to_h symbolize_keys ","options to_h "," raise ","ArgumentError  new ","options permitted? "," full_url_for ","options dup  extract_options! "]}," ActionDispatch Routing UrlFor url_options":{"type":"method","name":"url_options","children":[],"call":[" default_url_options "]}," ActionDispatch Routing RouteSet rewrite_authentication":{"type":"method","name":"rewrite_authentication","children":[],"call":["Rack Utils  escape ","options delete ","options [] "]}," ActionDispatch Routing RouteSet handle_positional_args":{"type":"method","name":"handle_positional_args","children":[],"call":["options merge! ","h []= ","args zip inject ","args zip ","options keys ","args size < ","keys size - ","keys size ","args size ","options delete ","Hash  [] ","args zip map ","options delete  zip inject ","options delete  zip ","options options delete  ","options delete  size < ","options delete  size - ","options delete  size ","options delete  zip map "]}," ActionDispatch Routing RouteSet recognize_path":{"type":"method","name":"recognize_path","children":[],"call":[" raise ","path inspect ","dispatcher prepare_params! ","dispatcher controller ","dispatcher is_a? ","dispatcher app ","route app ","params []= ","URI  unescape ","value dup force_encoding ","value dup ","value encoding_aware? ","value is_a? ","params each ","@set recognize ","@request_class new ","e message ","Rack MockRequest  env_for ","Rack Mount Utils  normalize_path ","path =~ ","(or\n  (send\n    (lvar :environment) :[]\n    (sym :method))\n  (str \"GET\")) to_s upcase ","(or\n  (send\n    (lvar :environment) :[]\n    (sym :method))\n  (str \"GET\")) to_s ","environment [] ","Rack Request  new ","dispatcher matches? ","URI  parser unescape ","URI  parser ","@router recognize ","Journey Router Utils  normalize_path ","params [] camelize ","params [] ","env []= ","(or\n  (lvar :old_params)\n  (hash)) merge ","env [] ","params merge! ","app app ","app dispatcher? ","app matches? ","req path_parameters= ","old_params merge ","req path_parameters "," request_class new "," request_class ","req controller_class "," make_request "," recognize_path_with_request ","(str \"://\") match? ","Rack Mount Utils  normalize_path  inspect ","Journey Router Utils  normalize_path  inspect ","dispatcher app  prepare_params! ","route app  prepare_params! ","app app  prepare_params! ","dispatcher app  controller ","route app  controller ","app app  controller ","dispatcher app  is_a? ","route app  is_a? ","app app  is_a? ","dispatcher app  app ","route app  app ","app app  app ","dispatcher route app  ","route route app  ","value dup force_encoding  dup force_encoding ","value dup force_encoding  dup ","value dup force_encoding  encoding_aware? ","value dup force_encoding  is_a? ","@@request_class new uest_class new ","@Rack Request  new uest_class new ","@ request_class new uest_class new ","@ make_request uest_class new ","Rack MockRequest  Rack MockRequest  env_for _for ","Rack Mount Utils  normalize_Rack Mount Utils  normalize_path  ","Rack Mount Utils  normalize_Journey Router Utils  normalize_path  ","Rack Mount Utils  normalize_path  =~ ","Journey Router Utils  normalize_path  =~ ","(or\n  (send\n    (lvar :Rack MockRequest  env_for ironment) :[]\n    (sym :method))\n  (str \"GET\")) to_s upcase ","(or\n  (send\n    (lvar :environment) :[]\n    (sym :(or\n  (send\n    (lvar :environment) :[]\n    (sym :method))\n  (str \"GET\")) to_s upcase ))\n  (str \"GET\")) to_s upcase ","(or\n  (send\n    (lvar :Rack MockRequest  env_for ironment) :[]\n    (sym :method))\n  (str \"GET\")) to_s ","(or\n  (send\n    (lvar :environment) :[]\n    (sym :(or\n  (send\n    (lvar :environment) :[]\n    (sym :method))\n  (str \"GET\")) to_s upcase ))\n  (str \"GET\")) to_s ","Rack MockRequest  env_for ironment [] ","dispatcher app  matches? ","route app  matches? ","app app  matches? ","Journey Router Utils  normalize_Rack Mount Utils  normalize_path  ","Journey Router Utils  normalize_Journey Router Utils  normalize_path  ","Rack MockRequest  env_for  []= ","(or\n  (lvar :env [] )\n  (hash)) merge ","(or\n  (lvar :req path_parameters )\n  (hash)) merge ","Rack MockRequest  env_for  [] ","route app  route app  ","app dispatcher app ? ","app route app ? ","app app app ? ","route app  dispatcher? ","@request_class new  path_parameters= ","Rack Request  new  path_parameters= "," request_class new  path_parameters= "," make_request  path_parameters= ","req Rack Mount Utils  normalize_path _parameters= ","req Journey Router Utils  normalize_path _parameters= ","env []  merge ","req path_parameters  merge ","@request_class new  path_parameters ","Rack Request  new  path_parameters "," request_class new  path_parameters "," make_request  path_parameters ","req Rack Mount Utils  normalize_path _parameters ","req Journey Router Utils  normalize_path _parameters "," @request_class new uest_class new "," Rack Request  new uest_class new ","  request_class new uest_class new ","  make_request uest_class new "," @request_class new uest_class "," Rack Request  new uest_class ","  request_class new uest_class ","  make_request uest_class ","@request_class new  controller_class ","Rack Request  new  controller_class "," request_class new  controller_class "," make_request  controller_class "," make_@request_class new uest "," make_Rack Request  new uest "," make_ request_class new uest "," make_ make_request uest "," recognize_path_with_@request_class new uest "," recognize_path_with_Rack Request  new uest "," recognize_path_with_ request_class new uest "," recognize_path_with_ make_request uest "," recognize_Rack Mount Utils  normalize_path _with_request "," recognize_Journey Router Utils  normalize_path _with_request "]}," ActionDispatch Routing RouteSet call":{"type":"method","name":"call","children":[],"call":["@set call "," finalize! ","@router call ","@router serve ","req path_info= ","Journey Router Utils  normalize_path ","req path_info "," request_class new "," request_class "," make_request "," request_class new  path_info= "," make_request  path_info= "," request_class new  path_info "," make_request  path_info ","  request_class new uest_class new ","  make_request uest_class new ","  request_class new uest_class ","  make_request uest_class "," make_ request_class new uest "," make_ make_request uest "]}," ActionDispatch Routing RouteSet url_for":{"type":"method","name":"url_for","children":[],"call":["rewritten_url << ","Rack Mount Utils  escape_uri ","options [] to_param to_s ","options [] to_param ","options [] ","/ + ","path sub "," generate "," block_given? ","options except ","options delete ","options key? "," raise "," rewrite_authentication ","rewritten_url match "," handle_positional_args ","(or\n  (lvar :options)\n  (hash)) reverse_merge! "," default_url_options "," finalize! ","Rack Utils  escape "," default_url_options merge ","ActionDispatch Http URL  url_for ","options merge ","path << ","(if\n  (send\n    (lvar :script_name) :blank?)\n  (send nil :_generate_prefix\n    (lvar :options))\n  (send\n    (lvar :script_name) :chomp\n    (str \"/\"))) to_s ","script_name chomp "," _generate_prefix ","script_name blank? "," extract_authentication ","options merge! ","params merge! ","original_script_name + ","options delete presence ","url_strategy call ","options []= ","path_options delete ","RESERVED_OPTIONS  each ","options dup "," find_script_name ","route_with_params params ","route_with_params path ","reserved each ","params []= ","path end_with? ! ","path end_with? ","options [] ! ","(or\n  (lvar :options)\n  (hash)) reverse_merge!  [] to_param to_s "," default_url_options merge  [] to_param to_s ","(or\n  (lvar :options)\n  (hash)) reverse_merge!  [] to_param "," default_url_options merge  [] to_param ","(or\n  (lvar :options)\n  (hash)) reverse_merge!  [] "," default_url_options merge  [] "," generate  sub ","(if\n  (send\n    (lvar :script_name) :blank?)\n  (send nil :_generate_prefix\n    (lvar :options))\n  (send\n    (lvar :script_name) :chomp\n    (str \"/\"))) to_s  sub ","route_with_params path  sub ","(or\n  (lvar :options)\n  (hash)) reverse_merge!  except "," default_url_options merge  except ","(or\n  (lvar :options)\n  (hash)) reverse_merge!  delete "," default_url_options merge  delete ","(or\n  (lvar :options)\n  (hash)) reverse_merge!  key? "," default_url_options merge  key? ","(or\n  (lvar :(or\n  (lvar :options)\n  (hash)) reverse_merge! )\n  (hash)) reverse_merge! ","(or\n  (lvar : default_url_options merge )\n  (hash)) reverse_merge! "," default_url_(or\n  (lvar :options)\n  (hash)) reverse_merge!  "," default_url_ default_url_options merge  "," default_url_(or\n  (lvar :options)\n  (hash)) reverse_merge!  merge "," default_url_ default_url_options merge  merge ","(or\n  (lvar :options)\n  (hash)) reverse_merge!  merge "," default_url_options merge  merge "," generate  << ","(if\n  (send\n    (lvar :script_name) :blank?)\n  (send nil :_generate_prefix\n    (lvar :options))\n  (send\n    (lvar :script_name) :chomp\n    (str \"/\"))) to_s  << ","route_with_params path  << ","(if\n  (send\n    (lvar :script_name) :blank?)\n  (send nil :_generate_prefix\n    (lvar :(or\n  (lvar :options)\n  (hash)) reverse_merge! ))\n  (send\n    (lvar :script_name) :chomp\n    (str \"/\"))) to_s ","(if\n  (send\n    (lvar :script_name) :blank?)\n  (send nil :_generate_prefix\n    (lvar : default_url_options merge ))\n  (send\n    (lvar :script_name) :chomp\n    (str \"/\"))) to_s ","(if\n  (send\n    (lvar :options delete ) :blank?)\n  (send nil :_generate_prefix\n    (lvar :options))\n  (send\n    (lvar :options delete ) :chomp\n    (str \"/\"))) to_s ","(if\n  (send\n    (lvar :original_script_name + ) :blank?)\n  (send nil :_generate_prefix\n    (lvar :options))\n  (send\n    (lvar :original_script_name + ) :chomp\n    (str \"/\"))) to_s ","(if\n  (send\n    (lvar : find_script_name ) :blank?)\n  (send nil :_generate_prefix\n    (lvar :options))\n  (send\n    (lvar : find_script_name ) :chomp\n    (str \"/\"))) to_s ","options delete  chomp ","original_script_name +  chomp "," find_script_name  chomp ","options delete  blank? ","original_script_name +  blank? "," find_script_name  blank? ","(or\n  (lvar :options)\n  (hash)) reverse_merge!  merge! "," default_url_options merge  merge! ","route_with_params params  merge! ","original_options delete  + ","original_original_script_name +  + ","original_ find_script_name  + ","options delete presence  + ","options delete  + ","(or\n  (lvar :options)\n  (hash)) reverse_merge!  delete presence "," default_url_options merge  delete presence ","(or\n  (lvar :options)\n  (hash)) reverse_merge!  []= "," default_url_options merge  []= "," generate _options delete ","(if\n  (send\n    (lvar :script_name) :blank?)\n  (send nil :_generate_prefix\n    (lvar :options))\n  (send\n    (lvar :script_name) :chomp\n    (str \"/\"))) to_s _options delete ","route_with_params path _options delete ","options except  delete ","options dup  delete ","path_(or\n  (lvar :options)\n  (hash)) reverse_merge!  delete ","path_ default_url_options merge  delete ","(or\n  (lvar :options)\n  (hash)) reverse_merge!  dup "," default_url_options merge  dup "," find_options delete  "," find_original_script_name +  "," find_ find_script_name  ","route_with_route_with_params params  route_with_params params  "," generate  params ","route_with_params  generate  ","route_with_params (if\n  (send\n    (lvar :script_name) :blank?)\n  (send nil :_generate_prefix\n    (lvar :options))\n  (send\n    (lvar :script_name) :chomp\n    (str \"/\"))) to_s  ","route_with_params route_with_params path  ","route_with_route_with_params params  path "," generate  path ","route_with_params params  []= "," generate  end_with? ! ","(if\n  (send\n    (lvar :script_name) :blank?)\n  (send nil :_generate_prefix\n    (lvar :options))\n  (send\n    (lvar :script_name) :chomp\n    (str \"/\"))) to_s  end_with? ! ","route_with_params path  end_with? ! "," generate  end_with? ","(if\n  (send\n    (lvar :script_name) :blank?)\n  (send nil :_generate_prefix\n    (lvar :options))\n  (send\n    (lvar :script_name) :chomp\n    (str \"/\"))) to_s  end_with? ","route_with_params path  end_with? ","(or\n  (lvar :options)\n  (hash)) reverse_merge!  [] ! "," default_url_options merge  [] ! "]}," ActionDispatch Routing RouteSet generate":{"type":"method","name":"generate","children":[],"call":["Generator  new generate ","Generator  new "," raise ","options inspect ","path << ","params to_query ","params any? ","params keys ","method == ","params delete ","params []= ","params each ","@set generate ","opts []= ","Rack Mount Utils  escape_uri ","value to_param ","(send\n  (lvar :value) :map) join ","v to_param ","value map ","value is_a? ","name == "," lambda ","recall []= ","options delete ","options [] == ","options [] ","options [] nil? ","options has_key? ","options merge ","options []= ","options [] [] ","options [] [] == ","parts join ","old_parts [] + ","old_parts [] ","(send\n  (send\n    (lvar :new_parts) :length) :+\n  (int 1)) -@ ","new_parts length + ","new_parts length ","options [] split ","recall [] split ","recall [] ","options [] [] != ","expire_on [] ","named_route ! ","options [] to_s ","recall delete ","options has_key? ! "," build_expiry "," options_as_params ","recall dup ","options dup "," options_as_params  inspect "," options_as_params  delete "," options_as_params  [] == "," options_as_params  [] "," options_as_params  [] nil? "," options_as_params  has_key? "," options_as_params  merge "," options_as_params  []= "," options_as_params  [] [] "," options_as_params  [] [] == ","old_parts [] +  join ","old_old_parts [] +  [] + ","recall [] split  [] + ","old_old_parts [] +  [] ","recall [] split  [] ","(send\n  (send\n    (lvar :new_old_parts [] + ) :length) :+\n  (int 1)) -@ ","(send\n  (send\n    (lvar :options [] split ) :length) :+\n  (int 1)) -@ ","new_old_parts [] +  length + ","options [] split  length + ","new_old_parts [] +  length ","options [] split  length "," options_as_params  [] split "," options_as_params  [] [] != "," build_expiry  [] ","options delete  ! "," options_as_params  [] to_s "," options_as_params  has_key? ! ","  options_as_params _as_params "," options_as_params  dup "]}," ActionDispatch Routing RouteSet generate_extras":{"type":"method","name":"generate_extras","children":[],"call":[" generate ","params keys ","options delete ","generator params except keys ","generator params except ","generator params "," URI path "," URI "," path_for ","options merge ","options merge  delete "," generate  params except keys "," generate  params except "," generate  params ","options merge  merge "]}," ActionDispatch Routing RouteSet extra_keys":{"type":"method","name":"extra_keys","children":[],"call":[" generate_extras last "," generate_extras "]}," ActionDispatch Routing RouteSet Generator segment_keys":{"type":"method","name":"segment_keys","children":[],"call":[" set named_routes [] segment_keys "," set named_routes [] "," named_route "," set named_routes "," set "]}," ActionDispatch Routing RouteSet Generator named_route_exists?":{"type":"method","name":"named_route_exists?","children":[],"call":[" set named_routes [] "," named_route "," set named_routes "," set "]}," ActionDispatch Routing RouteSet Generator different_controller?":{"type":"method","name":"different_controller?","children":[],"call":[" controller to_param != "," current_controller to_param "," current_controller "," controller to_param "," controller "]}," ActionDispatch Routing RouteSet Generator raise_routing_error":{"type":"method","name":"raise_routing_error","children":[],"call":[" raise ","ActionController RoutingError  new "," options inspect "," options "]}," ActionDispatch Routing RouteSet Generator opts":{"type":"method","name":"opts","children":[],"call":["(send\n  (send\n    (lvar :param) :split\n    (str \"/\")) :map) join ","Rack Mount Utils  escape_uri ","param split map ","param split ","value to_param ","(send\n  (lvar :value) :map) join ","v to_param ","value map ","value is_a? ","name == "," lambda ","(send\n  (send\n    (lvar :value to_param ) :split\n    (str \"/\")) :map) join ","value to_param  split map ","value to_param  split ","value to_value to_param  ","v to_value to_param  "]}," ActionDispatch Routing RouteSet Generator generate":{"type":"method","name":"generate","children":[],"call":[" raise_routing_error "," script_name ","path << ","params to_query ","params any? ","params keys ","v ! ","params reject! ","@set set generate "," opts "," recall "," options "," named_route ","@set set "," raise ","@set generate ","ActionController RoutingError  new "," options inspect ","v to_param ! ","v to_param ","@set formatter generate ","@set formatter "," raise_routing_ActionController RoutingError  new  "]}," ActionDispatch Routing RouteSet Generator handle_nil_action!":{"type":"method","name":"handle_nil_action!","children":[],"call":[" recall []= "," options delete "," options "," recall "," options [] == "," options [] "," options []= "," options [] nil? "," options has_key? "]}," ActionDispatch Routing RouteSet Generator use_relative_controller!":{"type":"method","name":"use_relative_controller!","children":[],"call":["@options []= ","parts join ","old_parts [] << "," controller ","old_parts [] ","size -@ "," controller count + "," controller count "," current_controller split "," current_controller "," different_controller? "," named_route ! "," named_route "," controller start_with? ! "," controller start_with? ","old_parts [] <<  join ","old_old_parts [] <<  [] << "," current_controller split  [] << ","old_old_parts [] <<  [] "," current_controller split  [] "," controller count +  -@ "]}," ActionDispatch Routing RouteSet Generator normalize_controller_action_id!":{"type":"method","name":"normalize_controller_action_id!","children":[],"call":[" use_recall_for ","@recall [] "," current_controller "]}," ActionDispatch Routing RouteSet Generator normalize_options!":{"type":"method","name":"normalize_options!","children":[],"call":[" options []= "," options [] to_s "," options [] "," options ","(or\n  (send\n    (send nil :options) :[]\n    (sym :action))\n  (str \"index\")) to_s "," options key? "]}," ActionDispatch Routing RouteSet Generator use_recall_for":{"type":"method","name":"use_recall_for","children":[],"call":["@options []= ","@recall delete "," segment_keys include? "," segment_keys "," named_route_exists? ","@options [] == ","@recall [] ","@options [] ","@options key? ! ","@options key? "," named_route_exists? ! "]}," ActionDispatch Routing RouteSet Generator current_controller":{"type":"method","name":"current_controller","children":[],"call":["@recall [] "]}," ActionDispatch Routing RouteSet Generator controller":{"type":"method","name":"controller","children":[],"call":["@options [] "]}," ActionDispatch Routing RouteSet Generator initialize":{"type":"method","name":"initialize","children":[],"call":[" handle_nil_action! "," controller sub! "," controller "," use_relative_controller! "," normalize_controller_action_id! "," normalize_options! ","recall dup ","options dup ","options delete "," normalize_controller! "," normalize_action! "," normalize_recall! "]}," ActionDispatch Routing RouteSet add_route":{"type":"method","name":"add_route","children":[],"call":[" routes << "," routes "," named_routes []= "," named_routes ","@set add_route ","Route  new "," raise ","name to_s match ","name to_s ","name blank? ","route name ","route defaults ","route conditions ","route app "," build_conditions ","x to_sym ","path names map ","path names "," valid_conditions "," build_path ","conditions delete "," named_routes [] ! "," named_routes [] ","ActiveSupport Deprecation  warn ","(str \"            Using a dynamic :action segment in a route is deprecated and\\n\") squish ","route segment_keys include? ","route segment_keys ","(str \"            Using a dynamic :controller segment in a route is deprecated and\\n\") squish ","ActionDispatch  deprecator warn ","ActionDispatch  deprecator "," Route  new s << "," @set add_route s << "," Route  new s "," @set add_route s "," named_Route  new s []= "," named_@set add_route s []= "," named_Route  new s "," named_@set add_route s ","@set add_Route  new  ","@set add_@set add_route  ","Route  new  name ","@set add_route  name ","Route  new  defaults ","@set add_route  defaults ","Route  new  conditions ","@set add_route  conditions ","route  build_conditions  ","Route  new  app ","@set add_route  app "," build_ build_conditions  "," build_path  names map ","conditions delete  names map "," build_path  names ","conditions delete  names "," valid_ build_conditions  "," build_ build_path  "," build_conditions delete  "," build_conditions  delete "," named_Route  new s [] ! "," named_@set add_route s [] ! "," named_Route  new s [] "," named_@set add_route s [] ","(str \"            Using a dynamic :action segment in a Route  new  is deprecated and\\n\") squish ","(str \"            Using a dynamic :action segment in a @set add_route  is deprecated and\\n\") squish ","Route  new  segment_keys include? ","@set add_route  segment_keys include? ","Route  new  segment_keys ","@set add_route  segment_keys ","(str \"            Using a dynamic :controller segment in a Route  new  is deprecated and\\n\") squish ","(str \"            Using a dynamic :controller segment in a @set add_route  is deprecated and\\n\") squish "]}," ActionDispatch Routing RouteSet empty?":{"type":"method","name":"empty?","children":[],"call":[" routes empty? "," routes "]}," ActionDispatch Routing RouteSet url_helpers":{"type":"method","name":"url_helpers","children":[],"call":[" define_method "," singleton_class send "," singleton_class ","routes install_helpers "," included "," extend ","routes named_routes module ","routes named_routes "," delegate "," include ","Module  new "," private ","routes named_routes path_helpers_module ","routes named_routes url_helpers_module "," attr_reader "," generate_url_helpers ","@_routes optimize_routes_generation? ","@_routes url_for ","@_proxy _routes ","@_proxy polymorphic_path ","@_proxy polymorphic_url ","@_proxy optimize_routes_generation? ","@_proxy route_for ","@_proxy full_url_for ","@_proxy url_for ","proxy_class new ","Class  new "," redefine_singleton_method ","routes named_routes routes named_routes path_helpers_module _module ","routes named_routes routes named_routes url_helpers_module _module "," generate_routes named_routes url_helpers_module  ","proxy_class new  _routes ","proxy_class new  polymorphic_path ","proxy_class new  polymorphic_url ","proxy_class new  optimize_routes_generation? ","proxy_class new  route_for ","proxy_class new  full_url_for ","proxy_class new  url_for "]}," ActionDispatch Routing RouteSet install_helpers":{"type":"method","name":"install_helpers","children":[],"call":[" named_routes install "," named_routes "," include ","d module_eval "," Array each "," Array "]}," ActionDispatch Routing RouteSet clear!":{"type":"method","name":"clear!","children":[],"call":[" Rack Mount RouteSet  new "," request_class "," named_routes clear "," named_routes "," routes clear "," routes "," eval_block ","@prepend each "," formatter clear "," formatter "," set clear "," set ","@polymorphic_mappings clear "]}," ActionDispatch Routing RouteSet finalize!":{"type":"method","name":"finalize!","children":[],"call":["@set freeze "," install_helpers ","@set add_route "," eval_block ","@append each "]}," ActionDispatch Routing RouteSet draw":{"type":"method","name":"draw","children":[],"call":[" finalize! ","mapper instance_exec ","DeprecatedMapper  new ","block arity == ","block arity ","Mapper  new "," clear! "," eval_block ","Mapper  new  instance_exec "]}," ActionDispatch Routing RouteSet initialize":{"type":"method","name":"initialize","children":[],"call":[" clear! "," valid_conditions push "," valid_conditions "," valid_conditions delete "," valid_conditions= ","m to_sym ","request_class public_instance_methods map ","request_class public_instance_methods "," request_class= "," default_url_options= "," controller_namespaces= ","Set  new "," resources_path_names= "," class default_resources_path_names dup "," class default_resources_path_names "," class "," named_routes= ","NamedRouteCollection  new "," routes= ","Journey Formatter  new ","Journey Router  new ","Journey Routes  new ","@valid_conditions []= ","request_class public_instance_methods each ","(str \"ROUTES_\") freeze "," object_id "," draw_paths= "]}," ActionDispatch Routing RouteSet default_resources_path_names":{"type":"method","name":"default_resources_path_names","children":[],"call":[]}," ActionDispatch Routing RouteSet NamedRouteCollection define_url_helper":{"type":"method","name":"define_url_helper","children":[],"call":[" helpers << "," helpers ","@module module_eval ","186 + ","route segment_keys inspect ","route segment_keys "," hash_access_name "," url_helper_name ","195 + ","171 + ","172 + ","192 + ","197 + ","198 + ","204 + ","199 + ","210 + ","217 + ","213 + ","helper call "," define_method ","@module remove_possible_method ","UrlHelper  create ","options dup ","args pop ","args last is_a? ","args last ","mod module_eval "," raise ","args pop to_h ","last permitted? ","mod define_method "," UrlHelper  create s << "," UrlHelper  create s "," url_UrlHelper  create _name ","UrlHelper  create  call ","args pop  dup ","args args last  is_a? ","args args last  ","args last  permitted? "]}," ActionDispatch Routing RouteSet NamedRouteCollection define_hash_access":{"type":"method","name":"define_hash_access","children":[],"call":[" helpers << "," helpers ","@module module_eval ","160 + ","options inspect "," hash_access_name ","144 + ","145 + ","146 + ","166 + ","163 + ","route segment_keys inspect ","route segment_keys ","169 + ","164 + ","175 + ","182 + ","178 + "]}," ActionDispatch Routing RouteSet NamedRouteCollection define_named_route_methods":{"type":"method","name":"define_named_route_methods","children":[],"call":[" define_url_helper "," define_hash_access ","route defaults merge merge ","route defaults merge ","route defaults ","(pair\n  (sym :url)\n  (hash\n    (pair\n      (sym :only_path)\n      (false)))) each "," define_route defaults merge merge _access ","(pair\n  (sym :url)\n  (route defaults merge merge \n    (pair\n      (sym :only_path)\n      (false)))) each "]}," ActionDispatch Routing RouteSet NamedRouteCollection hash_access_name":{"type":"method","name":"hash_access_name","children":[],"call":[]}," ActionDispatch Routing RouteSet NamedRouteCollection url_helper_name":{"type":"method","name":"url_helper_name","children":[],"call":[]}," ActionDispatch Routing RouteSet NamedRouteCollection install":{"type":"method","name":"install","children":[],"call":["dest __send__ "," Array each "," Array "," reset! "]}," ActionDispatch Routing RouteSet NamedRouteCollection reset!":{"type":"method","name":"reset!","children":[],"call":[" add ","old_routes each "," clear! "," routes dup "," routes "," routes dup  each "]}," ActionDispatch Routing RouteSet NamedRouteCollection length":{"type":"method","name":"length","children":[],"call":[" routes length "," routes "]}," ActionDispatch Routing RouteSet NamedRouteCollection names":{"type":"method","name":"names","children":[],"call":[" routes keys "," routes "]}," ActionDispatch Routing RouteSet NamedRouteCollection each":{"type":"method","name":"each","children":[],"call":[" routes each "," routes "]}," ActionDispatch Routing RouteSet NamedRouteCollection get":{"type":"method","name":"get","children":[],"call":[" routes [] ","name to_sym "," routes "]}," ActionDispatch Routing RouteSet NamedRouteCollection add":{"type":"method","name":"add","children":[],"call":[" define_named_route_methods "," routes []= ","name to_sym "," routes ","@url_helpers << ","@path_helpers << "," define_url_helper ","route defaults ","@url_helpers_module send ","@path_helpers_module send "," routes key? ","@url_helpers_module undef_method ","@path_helpers_module undef_method ","UrlHelper  create ","@url_UrlHelper  create s << ","@path_UrlHelper  create s << "," define_url_UrlHelper  create  ","@url_UrlHelper  create s_module send ","@path_UrlHelper  create s_module send "," routes name to_sym ? ","@url_UrlHelper  create s_module undef_method ","@path_UrlHelper  create s_module undef_method "]}," ActionDispatch Routing RouteSet NamedRouteCollection clear!":{"type":"method","name":"clear!","children":[],"call":[" remove_method "," instance_methods each "," instance_methods ","Module  new "," remove_possible_method ","@module module_eval ","@helpers each ","@helpers clear ","@routes clear ","@module remove_possible_method ","@url_helpers clear ","@path_helpers clear ","@url_helpers_module send ","@url_helpers each ","@path_helpers_module send ","@path_helpers each ","@custom_helpers clear ","@url_helpers_module method_defined? ","@path_helpers_module method_defined? ","@custom_helpers each ","@url_helpers_module remove_method ","@path_helpers_module remove_method "]}," ActionDispatch Routing RouteSet NamedRouteCollection helper_names":{"type":"method","name":"helper_names","children":[],"call":[" module instance_methods map "," module instance_methods "," module ","@helpers map ","@path_helpers map + ","@url_helpers map ","@path_helpers map "]}," ActionDispatch Routing RouteSet NamedRouteCollection initialize":{"type":"method","name":"initialize","children":[],"call":[" clear! "," remove_method "," instance_methods each "," instance_methods ","Module  new ","Set  new "]}," ActionDispatch Routing RouteSet Dispatcher split_glob_param!":{"type":"method","name":"split_glob_param!","children":[],"call":["params []= ","URI  unescape ","params [] split map ","params [] split ","params [] ","URI  parser unescape ","URI  parser "]}," ActionDispatch Routing RouteSet Dispatcher merge_default_action!":{"type":"method","name":"merge_default_action!","children":[],"call":["params [] "]}," ActionDispatch Routing RouteSet Dispatcher dispatch":{"type":"method","name":"dispatch","children":[],"call":["controller action call ","controller action ","controller dispatch "]}," ActionDispatch Routing RouteSet Dispatcher controller_reference":{"type":"method","name":"controller_reference","children":[],"call":["controller get ","@controllers []= ","ActiveSupport Dependencies  ref ","controller_param camelize ","@controllers [] ","ActiveSupport Dependencies  reference ","ActiveSupport Dependencies  constantize ","@controller_class_names [] ","@controllers []=  get ","@controllers []  get ","@@controllers []= s []= ","@@controllers [] s []= ","@controllers []= _param camelize ","@controllers [] _param camelize ","@@controllers []= s [] ","@@controllers [] s [] ","@@controllers []= _class_names [] ","@@controllers [] _class_names [] "]}," ActionDispatch Routing RouteSet Dispatcher controller":{"type":"method","name":"controller","children":[],"call":[" raise ","e backtrace ","e message "," controller_reference ","params [] ","params key? ","ActiveSupport Inflector  constantize ","params [] camelize ","params has_key? ","controller get ","@controllers []= ","ActiveSupport Dependencies  ref ","controller_param camelize ","@controllers [] ","req controller_class "," @controllers []= _reference "," @controllers [] _reference ","@controllers []=  get ","@controllers []  get ","@@controllers []= s []= ","@@controllers [] s []= ","params []  camelize ","@controllers []= _param camelize ","@controllers [] _param camelize ","@@controllers []= s [] ","@@controllers [] s [] ","req @controllers []= _class ","req @controllers [] _class "]}," ActionDispatch Routing RouteSet Dispatcher prepare_params!":{"type":"method","name":"prepare_params!","children":[],"call":[" split_glob_param! "," merge_default_action! ","params []= ","URI  unescape ","value dup force_encoding ","value dup ","value respond_to? ","value is_a? ","params each "," normalize_controller! ","value dup force_encoding  dup force_encoding ","value dup force_encoding  dup ","value dup force_encoding  respond_to? ","value dup force_encoding  is_a? "]}," ActionDispatch Routing RouteSet Dispatcher call":{"type":"method","name":"call","children":[],"call":[" dispatch ","params [] "," controller ","@defaults key? "," prepare_params! ","env [] ","controller action call ","controller action "," raise ","value valid_encoding? ","value respond_to? ","params each ","env []  [] ","  controller  "," prepare_env [] ! "," controller  action call "," controller  action ","env []  each "]}," ActionDispatch Routing RouteSet Dispatcher initialize":{"type":"method","name":"initialize","children":[],"call":["options delete ","options [] ","ThreadSafe Cache  new "]}," ActionDispatch Routing Route valid_condition?":{"type":"method","name":"valid_condition?","children":[],"call":[" set valid_conditions include? "," set valid_conditions "," set "," segment_keys include? "," segment_keys "]}," ActionDispatch Routing Route to_s":{"type":"method","name":"to_s","children":[],"call":["%-6s %-40s %s % "," requirements inspect "," requirements "," path ","(or\n  (send nil :verb)\n  (sym :any)) to_s upcase ","(or\n  (send nil :verb)\n  (sym :any)) to_s "," verb "]}," ActionDispatch Routing Route to_a":{"type":"method","name":"to_a","children":[],"call":[]}," ActionDispatch Routing Route segment_keys":{"type":"method","name":"segment_keys","children":[],"call":["key to_sym "," conditions [] names compact map "," conditions [] names compact "," conditions [] names "," conditions [] "," conditions "]}," ActionDispatch Routing Route verb":{"type":"method","name":"verb","children":[],"call":["method to_s upcase ","method to_s ","method source upcase ","method source "," conditions [] "," conditions ","source [] ","source =~ ","@verbs join "," conditions []  to_s upcase "," conditions []  to_s "," conditions []  source upcase ","method method source upcase  upcase "," conditions []  source ","method method source upcase  ","method source upcase  [] ","method source upcase  =~ "]}," ActionDispatch Routing Route initialize":{"type":"method","name":"initialize","children":[],"call":[" valid_condition? ! "," valid_condition? ","@requirements delete_if ","k != ","@conditions delete_if ","h []= ","Rack Mount RegexpWithNamedGroups  new ","conditions inject ","conditions []= "," Rack Mount Strexp  compile ","conditions [] ","v == ","Regexp  compile ","SEPARATORS  join ","@requirements delete ","@requirements [] is_a? ","@requirements [] ","requirements merge ","@conditions []= ","@conditions [] "," verb ","@verbs empty? ","conditions dup ","requirements merge  delete_if ","conditions dup  delete_if ","requirements merge  delete ","requirements merge  [] is_a? ","requirements merge  [] ","conditions dup  []= ","conditions dup  [] "]}," ActionDispatch Routing PolymorphicRoutes extract_record":{"type":"method","name":"extract_record","children":[],"call":["record_or_hash_or_array [] ","record_or_hash_or_array last "]}," ActionDispatch Routing PolymorphicRoutes build_named_route_call":{"type":"method","name":"build_named_route_call","children":[],"call":[" action_prefix + ","route join "," action_prefix ","route << "," routing_type ","inflection == ","ActiveModel Naming  uncountable? ","route join singularize ","ActiveModel Naming  plural ","record is_a? "," extract_record ","ActiveModel Naming  plural singularize ","parent is_a? ","records map ","records pop ","records is_a? "," action_prefix + + "," routing_type to_s ","route singularize ","string << ","records inject "," raise ","ActiveModel Naming  route_key ","ActiveModel Naming  route_key singularize ","ActiveModel Naming  singular_route_key "," model_name_from_record_or_class route_key "," model_name_from_record_or_class "," model_name_from_record_or_class singular_route_key ","route singularize  join ","route singularize  << ","route singularize  join singularize "," extract_record  is_a? ","records pop  is_a? "," extract_ extract_record  "," extract_records pop  "," extract_record s map ","records pop s map "," extract_record s pop ","records pop s pop "," extract_record s is_a? ","records pop s is_a? ","route singularize  singularize "," extract_record s inject ","records pop s inject ","ActiveModel Naming  route singularize _key ","ActiveModel Naming  route singularize _key singularize ","ActiveModel Naming  singular_route singularize _key "," model_name_from_ extract_record _or_class route_key "," model_name_from_records pop _or_class route_key "," model_name_from_record_or_class route singularize _key "," model_name_from_ extract_record _or_class "," model_name_from_records pop _or_class "," model_name_from_ extract_record _or_class singular_route_key "," model_name_from_records pop _or_class singular_route_key "," model_name_from_record_or_class singular_route singularize _key "]}," ActionDispatch Routing PolymorphicRoutes routing_type":{"type":"method","name":"routing_type","children":[],"call":["options [] "]}," ActionDispatch Routing PolymorphicRoutes action_prefix":{"type":"method","name":"action_prefix","children":[],"call":["options [] "]}," ActionDispatch Routing PolymorphicRoutes polymorphic_path":{"type":"method","name":"polymorphic_path","children":[],"call":[" polymorphic_url ","options merge ","HelperMethodBuilder  polymorphic_method ","opts delete ","options dup "," polymorphic_path ","options delete ","record_or_hash_or_array merge ","Hash  === ","mapping call "," polymorphic_mapping ","record_or_hash_or_array merge  merge ","options dup  delete ","record_or_hash_or_array merge  dup ","record_or_hash_or_array merge  delete ","options delete _or_hash_or_array merge "," polymorphic_mapping  call "," polymorphic_ polymorphic_mapping  "]}," ActionDispatch Routing PolymorphicRoutes polymorphic_url":{"type":"method","name":"polymorphic_url","children":[],"call":[" send ","args << ","args last merge! ","args last ","args last kind_of? ","url_options empty? ","options except "," build_named_route_call ","arg is_a? ","args delete_if ","args pop ","record is_a? ","record persisted? ! ","record persisted? ","record respond_to? ","options [] to_s == ","options [] to_s ","options [] ","record_or_hash_or_array dup ","record to_model "," extract_record ","record_or_hash_or_array [] ","record_or_hash_or_array size == ","record_or_hash_or_array size ","record_or_hash_or_array compact ","record_or_hash_or_array kind_of? ","(or\n  (lvar :proxy)\n  (self)) send ","Array  === ","record_or_hash_or_array shift ","record_or_hash_or_array first is_a? ","record_or_hash_or_array first "," url_for "," _routes url_helpers __send__ "," _routes url_helpers "," _routes ","proxy send "," convert_to_model ","args collect! ","HelperMethodBuilder  polymorphic_method ","opts delete ","options dup "," polymorphic_url ","options delete ","record_or_hash_or_array merge ","Hash  === ","mapping call "," polymorphic_mapping ","record_or_hash_or_array dup  << ","record_or_hash_or_array dup  last merge! ","record_or_hash_or_array dup  last ","record_or_hash_or_array dup  last kind_of? ","options except  empty? ","url_record_or_hash_or_array merge  empty? ","record_or_hash_or_array merge  except "," build_ build_named_route_call _call ","record_or_hash_or_array dup  delete_if ","record_or_hash_or_array dup  pop ","record to_model  is_a? "," extract_record  is_a? "," convert_to_model  is_a? ","options delete  is_a? ","record to_model  persisted? ! "," extract_record  persisted? ! "," convert_to_model  persisted? ! ","options delete  persisted? ! ","record to_model  persisted? "," extract_record  persisted? "," convert_to_model  persisted? ","options delete  persisted? ","record to_model  respond_to? "," extract_record  respond_to? "," convert_to_model  respond_to? ","options delete  respond_to? ","record_or_hash_or_array merge  [] to_s == ","record_or_hash_or_array merge  [] to_s ","record_or_hash_or_array merge  [] ","record to_model _or_hash_or_array dup "," extract_record _or_hash_or_array dup "," convert_to_model _or_hash_or_array dup ","options delete _or_hash_or_array dup ","record_or_hash_or_array []  dup ","record_or_hash_or_array compact  dup ","record to_model  to_model "," extract_record  to_model "," convert_to_model  to_model ","options delete  to_model "," extract_record to_model  "," extract_ extract_record  "," extract_ convert_to_model  "," extract_options delete  ","record to_model _or_hash_or_array [] "," extract_record _or_hash_or_array [] "," convert_to_model _or_hash_or_array [] ","options delete _or_hash_or_array [] ","record_or_hash_or_array []  [] ","record_or_hash_or_array compact  [] ","record to_model _or_hash_or_array size == "," extract_record _or_hash_or_array size == "," convert_to_model _or_hash_or_array size == ","options delete _or_hash_or_array size == ","record_or_hash_or_array []  size == ","record_or_hash_or_array compact  size == ","record to_model _or_hash_or_array size "," extract_record _or_hash_or_array size "," convert_to_model _or_hash_or_array size ","options delete _or_hash_or_array size ","record_or_hash_or_array []  size ","record_or_hash_or_array compact  size ","record to_model _or_hash_or_array compact "," extract_record _or_hash_or_array compact "," convert_to_model _or_hash_or_array compact ","options delete _or_hash_or_array compact ","record_or_hash_or_array []  compact ","record_or_hash_or_array compact  compact ","record to_model _or_hash_or_array kind_of? "," extract_record _or_hash_or_array kind_of? "," convert_to_model _or_hash_or_array kind_of? ","options delete _or_hash_or_array kind_of? ","record_or_hash_or_array []  kind_of? ","record_or_hash_or_array compact  kind_of? ","(or\n  (lvar :record_or_hash_or_array shift )\n  (self)) send ","record to_model _or_hash_or_array shift "," extract_record _or_hash_or_array shift "," convert_to_model _or_hash_or_array shift ","options delete _or_hash_or_array shift ","record_or_hash_or_array []  shift ","record_or_hash_or_array compact  shift ","record to_model _or_hash_or_array first is_a? "," extract_record _or_hash_or_array first is_a? "," convert_to_model _or_hash_or_array first is_a? ","options delete _or_hash_or_array first is_a? ","record_or_hash_or_array []  first is_a? ","record_or_hash_or_array compact  first is_a? ","record to_model _or_hash_or_array first "," extract_record _or_hash_or_array first "," convert_to_model _or_hash_or_array first ","options delete _or_hash_or_array first ","record_or_hash_or_array []  first ","record_or_hash_or_array compact  first ","record_or_hash_or_array shift  send ","record_or_hash_or_array dup  collect! ","options dup  delete ","record_or_hash_or_array merge  dup ","record_or_hash_or_array merge  delete ","record to_model _or_hash_or_array merge "," extract_record _or_hash_or_array merge "," convert_to_model _or_hash_or_array merge ","options delete _or_hash_or_array merge ","record_or_hash_or_array []  merge ","record_or_hash_or_array compact  merge "," polymorphic_mapping  call "," polymorphic_ polymorphic_mapping  "]}," ActionDispatch Routing Mapper Shorthand match":{"type":"method","name":"match","children":[],"call":["options merge! delete ","options merge! ","name is_a? ","options find ","args pop ","args last is_a? ","args last ","args size == ","args size ","args pop  merge! delete ","args pop  merge! ","args pop  find "]}," ActionDispatch Routing Mapper Resources name_for_action":{"type":"method","name":"name_for_action","children":[],"call":["name select join presence ","name select join ","name select ","@scope [] "," shallow_scoping? "," parent_resource member_name "," parent_resource "," parent_resource collection_name ","Mapper  normalize_name "," prefix_name_for_action ","@scope [] present? ","name_prefix present? ","r name == ","r name ","@set routes find ","@set routes ","as nil? ","action nil? ","candidate !~ ","@set named_routes key? ","@set named_routes ","name compact join presence ","name compact join ","name compact ","@scope action_name "," has_named_route? ","candidate empty? ","action_name select join ","action_name select ","candidate match? ! ","candidate match? ","@scope action_name  select join presence ","@scope action_name  select join ","@scope action_name  select "," parent_resource  parent_resource member_name  "," parent_resource member_@scope action_name  "," parent_resource  parent_resource collection_name  "," parent_resource collection_@scope action_name  ","Mapper  normalize_@scope action_name  "," Mapper  normalize_name _name_for_action ","  prefix_name_for_action _name_for_action "," prefix_@scope action_name _for_action ","@scope []  present? ","name_Mapper  normalize_name  present? ","name_ prefix_name_for_action  present? ","@scope action_name _prefix present? ","r @scope action_name  == ","r @scope action_name  ","name select join presence  !~ ","name compact join presence  !~ ","action_name select join  !~ ","@set @scope action_name d_routes key? ","@set @scope action_name d_routes ","@scope action_name  compact join presence ","@scope action_name  compact join ","@scope action_name  compact ","@scope action_@scope action_name  ","@scope @scope action_name  "," has_@scope action_name d_route? ","name select join presence  empty? ","name compact join presence  empty? ","action_name select join  empty? ","action_@scope action_name  select join ","action_@scope action_name  select ","name select join presence  match? ! ","name compact join presence  match? ! ","action_name select join  match? ! ","name select join presence  match? ","name compact join presence  match? ","action_name select join  match? "]}," ActionDispatch Routing Mapper Resources prefix_name_for_action":{"type":"method","name":"prefix_name_for_action","children":[],"call":["action to_s "," canonical_action? ! "," canonical_action? ","@scope [] ","as to_s ","as present? ","prefix to_s tr ","prefix to_s ","Mapper  normalize_name ","prefix empty? ! ","prefix empty? ","prefix != "]}," ActionDispatch Routing Mapper Resources action_path":{"type":"method","name":"action_path","children":[],"call":["name to_s ","@scope [] [] ","name to_sym ","@scope [] ","path_names [] ","name empty? ! ","name empty? ","name is_a? ","name to_sym  to_s ","name to_sym  to_sym ","path_name to_sym s [] ","name to_sym  empty? ! ","name to_sym  empty? ","name to_sym  is_a? "]}," ActionDispatch Routing Mapper Resources path_for_action":{"type":"method","name":"path_for_action","children":[],"call":[" action_path ","prefix to_s "," canonical_action? ","path blank? ","@scope [] "," parent_resource path "," parent_resource "," shallow_scoping? "," parent_resource shallow_scope ","@scope [] to_s "," action_prefix to_s  ","@scope []  to_s ","prefix to_s  blank? "," parent_resource prefix to_s  "]}," ActionDispatch Routing Mapper Resources shallow_scoping?":{"type":"method","name":"shallow_scoping?","children":[],"call":["@scope [] == ","@scope [] "," shallow? "]}," ActionDispatch Routing Mapper Resources canonical_action?":{"type":"method","name":"canonical_action?","children":[],"call":["CANONICAL_ACTIONS  include? ","action to_s "," resource_method_scope? "]}," ActionDispatch Routing Mapper Resources id_constraint":{"type":"method","name":"id_constraint","children":[],"call":["@scope [] [] ","@scope [] "]}," ActionDispatch Routing Mapper Resources id_constraint?":{"type":"method","name":"id_constraint?","children":[],"call":["@scope [] [] is_a? ","@scope [] [] ","@scope [] ","@scope [] is_a? "]}," ActionDispatch Routing Mapper Resources nested_options":{"type":"method","name":"nested_options","children":[],"call":["options []= "," id_constraint ","(begin\n  (send\n    (send nil :parent_resource) :singular)) to_sym "," parent_resource singular "," parent_resource "," id_constraint? "," parent_resource member_name "," tap "," param_constraint "," parent_resource nested_param "," param_constraint? "]}," ActionDispatch Routing Mapper Resources member_scope":{"type":"method","name":"member_scope","children":[],"call":[" scope "," parent_resource member_scope "," parent_resource "," with_scope_level "]}," ActionDispatch Routing Mapper Resources collection_scope":{"type":"method","name":"collection_scope","children":[],"call":[" scope "," parent_resource collection_scope "," parent_resource "," with_scope_level "]}," ActionDispatch Routing Mapper Resources new_scope":{"type":"method","name":"new_scope","children":[],"call":[" scope "," parent_resource new_scope "," action_path "," parent_resource "," with_scope_level "]}," ActionDispatch Routing Mapper Resources resource_scope":{"type":"method","name":"resource_scope","children":[],"call":[" scope "," parent_resource resource_scope "," parent_resource "," with_scope_level ","resource is_a? ","@scope []= ","@nesting pop ","@nesting push ","@scope [] ","resource shallow= ","@scope parent ","@scope new "," controller ","resource resource_scope ","@scope parent  []= ","@scope new  []= ","@scope parent  [] ","@scope new  [] ","@scope parent  parent ","@scope new  parent ","@scope parent  new ","@scope new  new "]}," ActionDispatch Routing Mapper Resources with_scope_level":{"type":"method","name":"with_scope_level","children":[],"call":["@scope []= ","@scope [] ","@scope parent ","@scope new_level ","@scope parent  []= ","@scope new_level  []= ","@scope parent  [] ","@scope new_level  [] ","@scope parent  parent ","@scope new_level  parent ","@scope parent  new_level ","@scope new_level  new_level "]}," ActionDispatch Routing Mapper Resources with_exclusive_scope":{"type":"method","name":"with_exclusive_scope","children":[],"call":["@scope []= "," with_scope_level ","@scope [] ","@scope parent ","@scope new ","@scope parent  []= ","@scope new  []= ","@scope parent  [] ","@scope new  [] ","@scope parent  parent ","@scope new  parent ","@scope parent  new ","@scope new  new "]}," ActionDispatch Routing Mapper Resources resource_method_scope?":{"type":"method","name":"resource_method_scope?","children":[],"call":["(sym :collection) include? ","@scope [] ","@scope [] in? ","RESOURCE_METHOD_SCOPES  include? ","@scope resource_method_scope? "]}," ActionDispatch Routing Mapper Resources resource_scope?":{"type":"method","name":"resource_scope?","children":[],"call":["(sym :resource) include? ","@scope [] ","@scope [] in? ","RESOURCE_SCOPES  include? ","@scope resource_scope? "]}," ActionDispatch Routing Mapper Resources scope_action_options":{"type":"method","name":"scope_action_options","children":[],"call":["@scope [] slice ","@scope [] "]}," ActionDispatch Routing Mapper Resources scope_action_options?":{"type":"method","name":"scope_action_options?","children":[],"call":["@scope [] [] ","@scope [] ","@scope [] is_a? "]}," ActionDispatch Routing Mapper Resources action_options?":{"type":"method","name":"action_options?","children":[],"call":["options [] "]}," ActionDispatch Routing Mapper Resources apply_common_behavior_for":{"type":"method","name":"apply_common_behavior_for","children":[],"call":[" send ","resources pop "," nested "," resource_scope? ","options merge! "," scope_action_options "," scope_action_options? "," action_options? "," scope ","scope_options empty? ","options slice! ","(or-asgn\n  (send\n    (lvar :options) :[]\n    (sym :constraints))\n  (hash)) []= ","options delete ","options [] ","options [] is_a? ","options keys each ","options keys ","resources each ","resources length > ","resources length ","@scope [] == ","@scope [] "," shallow "," public_send ","options slice!  empty? "]}," ActionDispatch Routing Mapper Resources parent_resource":{"type":"method","name":"parent_resource","children":[],"call":["@scope [] "]}," ActionDispatch Routing Mapper Resources root":{"type":"method","name":"root","children":[],"call":[" scope "," parent_resource path "," parent_resource "," with_scope_level ","@scope [] == ","@scope [] ","options [] "," parent_resource collection_name "," raise ","options empty? ","path is_a? ","options []= ","@scope resources? "," match_root_route "," path_scope "]}," ActionDispatch Routing Mapper Resources match":{"type":"method","name":"match","children":[],"call":["options []= "," name_for_action ","options [] ","action to_s include? ","action to_s ","action to_s =~ "," path_for_action ","options delete ","args first "," match "," member ","args push ","@scope [] == ","@scope [] "," nested "," raise ","on inspect "," send ","VALID_ON_OPTIONS  include? ","options dup ","args each ","args length > ","args length ","options key? ","args extract_options! dup ","args extract_options! "," collection ","options reverse_merge "," action_path "," with_exclusive_name_prefix ","@scope []= "," parent_resource name_for_action "," parent_resource ","CRUD_ACTIONS  include? ","args first is_a? "," resource_scope? "," new "," action_name_prefix "," scope "," with_exclusive_scope "," path_for_custom_action "," resource_method_scope? ","action is_a? ","options [] ! "," decomposed_match ","paths each "," on inspect "," on ","VALID_ON_OPTIONS  include? ! ","(lvar :path) + ","rest pop ","name is_a? ","options find ","Hash  === ","rest empty? ","path_without_format gsub sub ","path_without_format gsub "," using_match_shorthand? ","path to_s sub ","path to_s ","route_options [] ","_path to_s sub ","_path to_s ","_path is_a? ","route_options [] tr! ","to =~ ","path_types fetch each ","path_types fetch "," get_to_from_path ","route_options []= ","ActiveSupport Deprecation  warn ","path inspect ","_path inspect ","option_path inspect ","paths group_by ","Mapping  check_via "," Array "," map_match "," defaults ","path nil? ","(str \"#\") match? ","to include? ","optioptions delete s []= ","args extract_options! dup  []= ","args extract_options!  []= "," name_for_args first  "," name_for_actioptions delete  ","optioptions delete s [] ","args extract_options! dup  [] ","args extract_options!  [] ","args first  to_s include? ","actioptions delete  to_s include? ","action  get_to_from_path _s include? ","action options delete _s include? ","args first  to_s ","actioptions delete  to_s ","action  get_to_from_path _s ","action options delete _s ","args first  to_s =~ ","actioptions delete  to_s =~ ","action  get_to_from_path _s =~ ","action options delete _s =~ ","  path_for_action _for_action ","  path_for_custom_action _for_action "," options delete _for_action "," path_for_args first  "," path_for_actioptions delete  ","optioptions delete s delete ","args extract_options! dup  delete ","args extract_options!  delete ","options delete  inspect ","optioptions delete s dup ","args extract_options! dup  dup ","args extract_options!  dup ","optioptions delete s key? ","args extract_options! dup  key? ","args extract_options!  key? ","args extract_optioptions delete s! dup ","args extract_args extract_options! dup ! dup ","args extract_args extract_options! ! dup ","args extract_optioptions delete s! ","args extract_args extract_options! dup ! ","args extract_args extract_options! ! "," collectioptions delete  ","optioptions delete s reverse_merge ","args extract_options! dup  reverse_merge ","args extract_options!  reverse_merge "," action_ path_for_action  "," action_ path_for_custom_action  "," action_options delete  "," args first _path "," actioptions delete _path "," parent_resource name_for_args first  "," parent_resource name_for_actioptions delete  "," args first _name_prefix "," actioptions delete _name_prefix ","  path_for_action _for_custom_action ","  path_for_custom_action _for_custom_action "," options delete _for_custom_action "," path_for_custom_args first  "," path_for_custom_actioptions delete  "," path_for_cus get_to_from_path m_action "," path_for_cusoptions delete m_action ","args first  is_a? ","actioptions delete  is_a? ","optioptions delete s [] ! ","args extract_options! dup  [] ! ","args extract_options!  [] ! "," path_for_action s each "," path_for_custom_action s each ","options delete s each ","(lvar :path) +  each "," options delete  inspect "," options delete  ","(lvar : path_for_action ) + ","(lvar : path_for_custom_action ) + ","(lvar :options delete ) + ","optioptions delete s find ","args extract_options! dup  find ","args extract_options!  find "," path_for_action _without_format gsub sub "," path_for_custom_action _without_format gsub sub ","options delete _without_format gsub sub ","path to_s sub  gsub sub ","_path to_s sub  gsub sub "," path_for_action _without_format gsub "," path_for_custom_action _without_format gsub ","options delete _without_format gsub ","path to_s sub  gsub ","_path to_s sub  gsub "," path_for_action  to_s sub "," path_for_custom_action  to_s sub ","options delete  to_s sub ","path  get_to_from_path _s sub ","path options delete _s sub "," path_for_action  to_s "," path_for_custom_action  to_s ","options delete  to_s ","path  get_to_from_path _s ","path options delete _s ","route_optioptions delete s [] ","route_args extract_options! dup  [] ","route_args extract_options!  [] ","options dup  [] ","_ path_for_action  to_s sub ","_ path_for_custom_action  to_s sub ","_options delete  to_s sub ","_path  get_to_from_path _s sub ","_path options delete _s sub ","_ path_for_action  to_s ","_ path_for_custom_action  to_s ","_options delete  to_s ","_path  get_to_from_path _s ","_path options delete _s ","_ path_for_action  is_a? ","_ path_for_custom_action  is_a? ","_options delete  is_a? ","route_optioptions delete s [] tr! ","route_args extract_options! dup  [] tr! ","route_args extract_options!  [] tr! ","options dup  [] tr! "," get_to_from_path  =~ ","options delete  =~ "," path_for_action _types fetch each "," path_for_custom_action _types fetch each ","options delete _types fetch each ","paths group_by  fetch each "," path_for_action _types fetch "," path_for_custom_action _types fetch ","options delete _types fetch ","paths group_by  fetch "," get_to_from_ path_for_action  "," get_to_from_ path_for_custom_action  "," get_to_from_options delete  "," get_ get_to_from_path _from_path "," get_options delete _from_path ","route_optioptions delete s []= ","route_args extract_options! dup  []= ","route_args extract_options!  []= ","options dup  []= ","ActiveSupport Deprecatioptions delete   warn "," path_for_action  inspect "," path_for_custom_action  inspect ","_ path_for_action  inspect ","_ path_for_custom_action  inspect ","_options delete  inspect ","option_ path_for_action  inspect ","option_ path_for_custom_action  inspect ","option_options delete  inspect ","optioptions delete _path inspect "," path_for_action s group_by "," path_for_custom_action s group_by ","options delete s group_by ","(lvar :path) +  group_by ","Mapping  check_Mapping  check_via  "," path_for_action  nil? "," path_for_custom_action  nil? ","options delete  nil? "," get_to_from_path  include? ","options delete  include? "]}," ActionDispatch Routing Mapper Resources shallow?":{"type":"method","name":"shallow?","children":[],"call":["@scope [] "," parent_resource instance_of? "," parent_resource "," parent_resource singleton? ! "," parent_resource singleton? "]}," ActionDispatch Routing Mapper Resources shallow":{"type":"method","name":"shallow","children":[],"call":[" scope ","@scope [] ","@scope parent ","@scope new ","@scope parent  [] ","@scope new  [] ","@scope parent  parent ","@scope new  parent ","@scope parent  new ","@scope new  new "]}," ActionDispatch Routing Mapper Resources namespace":{"type":"method","name":"namespace","children":[],"call":[" nested "," resource_scope? "]}," ActionDispatch Routing Mapper Resources nested":{"type":"method","name":"nested","children":[],"call":[" scope "," nested_options "," parent_resource nested_scope "," parent_resource ","@scope [] ","@scope [] blank? "," with_exclusive_scope "," shallow? "," with_scope_level "," raise "," resource_scope? "," parent_resource member_name "," parent_resource id_segment ","@scope [] == "," parent_resource nested_options "," parent_resource nested_prefix "," shallow_scope "," shallow_nesting_depth >= "," shallow_nesting_depth "," nesting_depth > "," nesting_depth "," shallow_nesting_depth > "," path_scope "]}," ActionDispatch Routing Mapper Resources new":{"type":"method","name":"new","children":[],"call":[" new_scope "," raise "," resource_scope? "," scope "," parent_resource member_name "," parent_resource "," new_scope_prefix "," with_scope_level "," parent_resource new_scope "," action_path "," path_scope "]}," ActionDispatch Routing Mapper Resources member":{"type":"method","name":"member","children":[],"call":[" member_scope "," raise "," resource_scope? "," scope "," parent_resource member_name "," parent_resource "," with_scope_level ","@scope [] == ","@scope [] "," parent_resource member_prefix "," parent_resource member_scope "," shallow_scope "," shallow? "," path_scope "]}," ActionDispatch Routing Mapper Resources collection":{"type":"method","name":"collection","children":[],"call":[" collection_scope "," raise ","@scope [] == ","@scope [] "," scope "," parent_resource collection_name "," parent_resource "," with_scope_level "," parent_resource collection_scope "," resource_scope? "," path_scope "]}," ActionDispatch Routing Mapper Resources resources":{"type":"method","name":"resources","children":[],"call":[" delete "," parent_resource actions include? "," parent_resource actions "," parent_resource "," put "," get "," member_scope "," new_scope "," post "," collection_scope "," block_given? "," resource_scope ","Resource  new ","resources pop "," apply_common_behavior_for ","resources extract_options! ","resource singular ","resource actions include? ","resource actions "," scope "," with_scope_level ","resource controller ","resource name to_s ","resource name "," verify_common_behavior_for ","resource options ","resource collection_options ","resource path ","(or\n  (send\n    (ivar :@scope) :[]\n    (sym :options))\n  (hash)) merge ","@scope [] "," member "," new "," collection ","resources extract_options! dup "," set_member_mappings_for_resource "," concerns ","options [] "," api_only? "," apply_action_options "," parent_Resource  new  actions include? "," parent_Resource  new  actions "," parent_Resource  new  "," Resource  new _scope ","Resource  new s pop ","resources extract_resources extract_options! ! ","resources extract_(or\n  (send\n    (ivar :@scope) :[]\n    (sym :options))\n  (hash)) merge ! ","resources extract_resources extract_options! dup ! ","resources extract_ apply_action_options ! ","Resource  new s extract_options! ","Resource  new  singular ","Resource  new  actions include? ","Resource  new  actions ","Resource  new  controller ","Resource  new  name to_s ","Resource  new  name ","resource resources extract_options!  ","resource (or\n  (send\n    (ivar :@scope) :[]\n    (sym :options))\n  (hash)) merge  ","resource resources extract_options! dup  ","resource  apply_action_options  ","Resource  new  options ","resource collection_resources extract_options!  ","resource collection_(or\n  (send\n    (ivar :@scope) :[]\n    (sym :options))\n  (hash)) merge  ","resource collection_resources extract_options! dup  ","resource collection_ apply_action_options  ","Resource  new  collection_options ","Resource  new  path ","(or\n  (send\n    (ivar :@scope) :[]\n    (sym :resources extract_options! ))\n  (hash)) merge ","(or\n  (send\n    (ivar :@scope) :[]\n    (sym :(or\n  (send\n    (ivar :@scope) :[]\n    (sym :options))\n  (hash)) merge ))\n  (hash)) merge ","(or\n  (send\n    (ivar :@scope) :[]\n    (sym :resources extract_options! dup ))\n  (hash)) merge ","(or\n  (send\n    (ivar :@scope) :[]\n    (sym : apply_action_options ))\n  (hash)) merge ","resources extract_resources extract_options! ! dup ","resources extract_(or\n  (send\n    (ivar :@scope) :[]\n    (sym :options))\n  (hash)) merge ! dup ","resources extract_resources extract_options! dup ! dup ","resources extract_ apply_action_options ! dup ","Resource  new s extract_options! dup "," set_member_mappings_for_Resource  new  ","resources extract_options!  [] ","(or\n  (send\n    (ivar :@scope) :[]\n    (sym :options))\n  (hash)) merge  [] ","resources extract_options! dup  [] "," apply_action_options  [] "," apply_action_resources extract_options!  "," apply_action_(or\n  (send\n    (ivar :@scope) :[]\n    (sym :options))\n  (hash)) merge  "," apply_action_resources extract_options! dup  "," apply_action_ apply_action_options  "]}," ActionDispatch Routing Mapper Resources resource":{"type":"method","name":"resource","children":[],"call":[" delete "," parent_resource actions include? "," parent_resource actions "," parent_resource "," put "," get "," member_scope "," new_scope "," post "," collection_scope "," block_given? "," resource_scope ","SingletonResource  new ","resources pop "," apply_common_behavior_for ","resources extract_options! ","resource singular ","resource actions include? ","resource actions "," with_scope_level "," scope ","resource controller ","resource name to_s ","resource name "," verify_common_behavior_for ","resource options ","resource path ","(or\n  (send\n    (ivar :@scope) :[]\n    (sym :options))\n  (hash)) merge ","@scope [] "," member "," new "," collection ","resources extract_options! dup "," set_member_mappings_for_resource "," concerns ","options [] "," api_only? "," apply_action_options "," parent_SingletonResource  new  actions include? "," parent_SingletonResource  new  actions "," parent_SingletonResource  new  "," SingletonResource  new _scope ","SingletonResource  new s pop ","resources extract_resources extract_options! ! ","resources extract_(or\n  (send\n    (ivar :@scope) :[]\n    (sym :options))\n  (hash)) merge ! ","resources extract_resources extract_options! dup ! ","resources extract_ apply_action_options ! ","SingletonResource  new s extract_options! ","SingletonResource  new  singular ","SingletonResource  new  actions include? ","SingletonResource  new  actions ","SingletonResource  new  controller ","SingletonResource  new  name to_s ","SingletonResource  new  name ","resource resources extract_options!  ","resource (or\n  (send\n    (ivar :@scope) :[]\n    (sym :options))\n  (hash)) merge  ","resource resources extract_options! dup  ","resource  apply_action_options  ","SingletonResource  new  options ","SingletonResource  new  path ","(or\n  (send\n    (ivar :@scope) :[]\n    (sym :resources extract_options! ))\n  (hash)) merge ","(or\n  (send\n    (ivar :@scope) :[]\n    (sym :(or\n  (send\n    (ivar :@scope) :[]\n    (sym :options))\n  (hash)) merge ))\n  (hash)) merge ","(or\n  (send\n    (ivar :@scope) :[]\n    (sym :resources extract_options! dup ))\n  (hash)) merge ","(or\n  (send\n    (ivar :@scope) :[]\n    (sym : apply_action_options ))\n  (hash)) merge ","resources extract_resources extract_options! ! dup ","resources extract_(or\n  (send\n    (ivar :@scope) :[]\n    (sym :options))\n  (hash)) merge ! dup ","resources extract_resources extract_options! dup ! dup ","resources extract_ apply_action_options ! dup ","SingletonResource  new s extract_options! dup "," set_member_mappings_for_SingletonResource  new  ","resources extract_options!  [] ","(or\n  (send\n    (ivar :@scope) :[]\n    (sym :options))\n  (hash)) merge  [] ","resources extract_options! dup  [] "," apply_action_options  [] "," apply_action_resources extract_options!  "," apply_action_(or\n  (send\n    (ivar :@scope) :[]\n    (sym :options))\n  (hash)) merge  "," apply_action_resources extract_options! dup  "," apply_action_ apply_action_options  "]}," ActionDispatch Routing Mapper Resources resources_path_names":{"type":"method","name":"resources_path_names","children":[],"call":["@scope [] merge! ","@scope [] "]}," ActionDispatch Routing Mapper Resources initialize":{"type":"method","name":"initialize","children":[],"call":["@scope []= ","@set resources_path_names "]}," ActionDispatch Routing Mapper Resources SingletonResource singular":{"type":"method","name":"singular","children":[],"call":[" name to_s "," name "]}," ActionDispatch Routing Mapper Resources SingletonResource plural":{"type":"method","name":"plural","children":[],"call":[" name to_s pluralize "," name to_s "," name "]}," ActionDispatch Routing Mapper Resources SingletonResource initialize":{"type":"method","name":"initialize","children":[],"call":["options delete ","(or\n  (send\n    (lvar :options) :delete\n    (sym :controller))\n  (send nil :plural)) to_s "," plural ","(or\n  (send\n    (lvar :options) :delete\n    (sym :path))\n  (ivar :@name)) to_s ","entities to_s ","options [] ","(or\n  (send\n    (lvar :options) :[]\n    (sym :controller))\n  (send nil :plural)) to_s ","(or\n  (send\n    (lvar :options) :delete\n    (sym :path))\n  (ivar :entities to_s )) to_s "]}," ActionDispatch Routing Mapper Resources Resource nested_scope":{"type":"method","name":"nested_scope","children":[],"call":[" singular "," path "," nested_param "]}," ActionDispatch Routing Mapper Resources Resource new_scope":{"type":"method","name":"new_scope","children":[],"call":[" path "]}," ActionDispatch Routing Mapper Resources Resource member_scope":{"type":"method","name":"member_scope","children":[],"call":[" path "," param "]}," ActionDispatch Routing Mapper Resources Resource resource_scope":{"type":"method","name":"resource_scope","children":[],"call":[" controller "]}," ActionDispatch Routing Mapper Resources Resource collection_name":{"type":"method","name":"collection_name","children":[],"call":[" plural "," singular == "," singular "," uncountable? "]}," ActionDispatch Routing Mapper Resources Resource singular":{"type":"method","name":"singular","children":[],"call":[" name to_s singularize "," name to_s "," name "]}," ActionDispatch Routing Mapper Resources Resource plural":{"type":"method","name":"plural","children":[],"call":[" name to_s "," name "," name to_s pluralize "]}," ActionDispatch Routing Mapper Resources Resource name":{"type":"method","name":"name","children":[],"call":[" plural "," options [] "," options "]}," ActionDispatch Routing Mapper Resources Resource actions":{"type":"method","name":"actions","children":[],"call":[" default_actions "," default_actions - "," Array map "," Array ","@options [] ","except map "," options [] "," options ","only map "," available_actions "," available_actions - ","@options []  map "," options []  map "]}," ActionDispatch Routing Mapper Resources Resource default_actions":{"type":"method","name":"default_actions","children":[],"call":[" class "," class default_actions "]}," ActionDispatch Routing Mapper Resources Resource initialize":{"type":"method","name":"initialize","children":[],"call":["options delete ","(or\n  (send\n    (lvar :options) :delete\n    (sym :controller))\n  (ivar :@name)) to_s ","(or\n  (send\n    (lvar :options) :delete\n    (sym :path))\n  (ivar :@name)) to_s ","entities to_s ","entities singularize ","entities pluralize ","@name singularize ","@name pluralize ","@name to_s pluralize ","@name to_s ","options [] ","(or\n  (send\n    (lvar :options) :[]\n    (sym :controller))\n  (ivar :@name)) to_s ","(or\n  (send\n    (lvar :options) :[]\n    (sym :path))\n  (ivar :@name)) to_s ","(or\n  (send\n    (lvar :options) :[]\n    (sym :param))\n  (sym :id)) to_sym "," raise ","options [] to_s include? ","options [] to_s ","(or\n  (send\n    (lvar :options) :delete\n    (sym :controller))\n  (ivar :entities to_s )) to_s ","(or\n  (send\n    (lvar :options) :delete\n    (sym :path))\n  (ivar :entities to_s )) to_s ","entities to_s  to_s ","entities to_s  singularize ","entities to_s  pluralize ","entities to_s  to_s pluralize ","(or\n  (send\n    (lvar :options) :[]\n    (sym :controller))\n  (ivar :entities to_s )) to_s ","(or\n  (send\n    (lvar :options) :[]\n    (sym :path))\n  (ivar :entities to_s )) to_s "]}," ActionDispatch Routing Mapper Scoping override_keys":{"type":"method","name":"override_keys","children":[],"call":["child key? "]}," ActionDispatch Routing Mapper Scoping merge_shallow_scope":{"type":"method","name":"merge_shallow_scope","children":[],"call":[]}," ActionDispatch Routing Mapper Scoping merge_options_scope":{"type":"method","name":"merge_options_scope","children":[],"call":["(or\n  (lvar :parent)\n  (hash)) except merge ","(or\n  (lvar :parent)\n  (hash)) except "," override_keys ","(or\n  (lvar :parent)\n  (hash)) merge ","(or\n  (lvar :parent)\n  (hash)) except merge! "]}," ActionDispatch Routing Mapper Scoping merge_blocks_scope":{"type":"method","name":"merge_blocks_scope","children":[],"call":["merged << ","parent dup ","(or\n  (lvar :parent)\n  (array)) + ","parent dup  << "]}," ActionDispatch Routing Mapper Scoping merge_defaults_scope":{"type":"method","name":"merge_defaults_scope","children":[],"call":[" merge_options_scope "]}," ActionDispatch Routing Mapper Scoping merge_constraints_scope":{"type":"method","name":"merge_constraints_scope","children":[],"call":[" merge_options_scope "]}," ActionDispatch Routing Mapper Scoping merge_path_names_scope":{"type":"method","name":"merge_path_names_scope","children":[],"call":[" merge_options_scope "]}," ActionDispatch Routing Mapper Scoping merge_controller_scope":{"type":"method","name":"merge_controller_scope","children":[],"call":["@scope [] "]}," ActionDispatch Routing Mapper Scoping merge_module_scope":{"type":"method","name":"merge_module_scope","children":[],"call":[]}," ActionDispatch Routing Mapper Scoping merge_shallow_prefix_scope":{"type":"method","name":"merge_shallow_prefix_scope","children":[],"call":[]}," ActionDispatch Routing Mapper Scoping merge_as_scope":{"type":"method","name":"merge_as_scope","children":[],"call":[]}," ActionDispatch Routing Mapper Scoping merge_shallow_path_scope":{"type":"method","name":"merge_shallow_path_scope","children":[],"call":["Mapper  normalize_path "]}," ActionDispatch Routing Mapper Scoping merge_path_scope":{"type":"method","name":"merge_path_scope","children":[],"call":["Mapper  normalize_path "]}," ActionDispatch Routing Mapper Scoping scope_options":{"type":"method","name":"scope_options","children":[],"call":["1 to_sym "," private_methods grep "," private_methods "]}," ActionDispatch Routing Mapper Scoping defaults":{"type":"method","name":"defaults","children":[],"call":[" scope ","@scope parent ","@scope new "," merge_defaults_scope ","@scope [] ","@scope parent  parent ","@scope new  parent ","@scope parent  new ","@scope new  new ","@scope parent  [] ","@scope new  [] "]}," ActionDispatch Routing Mapper Scoping constraints":{"type":"method","name":"constraints","children":[],"call":[" scope "]}," ActionDispatch Routing Mapper Scoping namespace":{"type":"method","name":"namespace","children":[],"call":[" scope ","(pair\n  (sym :path)\n  (lvar :path)) merge! ","path to_s ","defaults merge! ","options fetch "," path_scope ","options delete ","(pair\n  (sym :path to_s )\n  (lvar :path to_s )) merge! ","path to_s  to_s ","(pair\n  (sym :path)\n  (lvar :path)) merge!  fetch "," path to_s _scope ","(pair\n  (sym :path)\n  (lvar :path)) merge!  delete "]}," ActionDispatch Routing Mapper Scoping controller":{"type":"method","name":"controller","children":[],"call":[" scope ","options []= ","controller to_sym ","ActiveSupport Deprecation  warn ","@scope parent ","@scope new ","options empty? ","@scope parent  parent ","@scope new  parent ","@scope parent  new ","@scope new  new "]}," ActionDispatch Routing Mapper Scoping scope":{"type":"method","name":"scope","children":[],"call":["@scope []= ","recover [] ","recover has_key? "," scope_options each "," scope_options "," merge_options_scope ","@scope [] ","recover []= "," merge_blocks_scope "," send ","options delete ","options [] ","options []= ","options [] is_a? ","args first ","args first is_a? ","ActiveSupport Deprecation  warn "," caller ","options dup ","args extract_options! ","@scope merge! ","option == ","SCOPE_OPTIONS  each ","(or-asgn\n  (send\n    (lvar :options) :[]\n    (sym :defaults))\n  (hash)) reverse_merge! ","v is_a? ","URL_OPTIONS  include? ","options [] select ","args flatten join ","args flatten ","args any? ","args extract_options! dup ","options key? "," nested_scope? "," shallow? ","@scope parent ","@scope new ","scope []= ","@scope options each ","@scope options ","POISON  == "," raise ","defaults merge ","@scope parent  []= ","@scope new  []= "," scope_options dup  each "," scope_args extract_options!  each "," scope_args extract_options! dup  each "," scope_options dup  "," scope_args extract_options!  "," scope_args extract_options! dup  "," merge_options dup _scope "," merge_args extract_options! _scope "," merge_args extract_options! dup _scope ","@scope parent  [] ","@scope new  [] ","options dup  delete ","args extract_options!  delete ","args extract_options! dup  delete ","options dup  [] ","args extract_options!  [] ","args extract_options! dup  [] ","options dup  []= ","args extract_options!  []= ","args extract_options! dup  []= ","options dup  [] is_a? ","args extract_options!  [] is_a? ","args extract_options! dup  [] is_a? ","options dup  dup ","args extract_options!  dup ","args extract_options! dup  dup ","args extract_options dup ! ","args extract_args extract_options! ! ","args extract_args extract_options! dup ! ","@scope parent  merge! ","@scope new  merge! ","(or-asgn\n  (send\n    (lvar :options dup ) :[]\n    (sym :defaults))\n  (hash)) reverse_merge! ","(or-asgn\n  (send\n    (lvar :args extract_options! ) :[]\n    (sym :defaults))\n  (hash)) reverse_merge! ","(or-asgn\n  (send\n    (lvar :args extract_options! dup ) :[]\n    (sym :defaults))\n  (hash)) reverse_merge! ","options dup  [] select ","args extract_options!  [] select ","args extract_options! dup  [] select ","args extract_options dup ! dup ","args extract_args extract_options! ! dup ","args extract_args extract_options! dup ! dup ","options dup  key? ","args extract_options!  key? ","args extract_options! dup  key? ","@scope parent  parent ","@scope new  parent ","@scope parent  new ","@scope new  new ","@scope options dup  each ","@scope args extract_options!  each ","@scope args extract_options! dup  each ","@scope parent  options each ","@scope new  options each ","@scope options dup  ","@scope args extract_options!  ","@scope args extract_options! dup  ","@scope parent  options ","@scope new  options "]}," ActionDispatch Routing Mapper Scoping initialize":{"type":"method","name":"initialize","children":[],"call":[]}," ActionDispatch Routing Mapper HttpHelpers map_method":{"type":"method","name":"map_method","children":[],"call":[" match ","args push ","options []= ","args extract_options! ","args first ","options [] ","args first is_a? "," defaults ","options delete ","options key? ","args extract_options!  []= ","args extract_args extract_options! ! ","args extract_options!  [] ","args extract_options!  delete ","args extract_options!  key? "]}," ActionDispatch Routing Mapper HttpHelpers redirect":{"type":"method","name":"redirect","children":[],"call":["body length to_s ","body length ","uri to_s ","ERB Util  h ","req port ","uri port ","req standard_port? ","req host ","uri host ","req scheme ","uri scheme ","URI  parse ","path_proc call ","params << ","path_proc arity > ","path_proc arity ","req symbolized_path_parameters ","Request  new "," lambda ","options [] ","path % "," proc ","path is_a? ","args shift ","args pop ","args last is_a? ","args last ","req port == ","URI  parse  to_s ","Request  new  port ","URI  parse  port ","Request  new  standard_port? ","Request  new  host ","URI  parse  host ","Request  new  scheme ","URI  parse  scheme ","Request  new  symbolized_path_parameters ","args pop  [] ","Request  new  port == "]}," ActionDispatch Routing Mapper HttpHelpers delete":{"type":"method","name":"delete","children":[],"call":[" map_method "]}," ActionDispatch Routing Mapper HttpHelpers put":{"type":"method","name":"put","children":[],"call":[" map_method "]}," ActionDispatch Routing Mapper HttpHelpers post":{"type":"method","name":"post","children":[],"call":[" map_method "]}," ActionDispatch Routing Mapper HttpHelpers get":{"type":"method","name":"get","children":[],"call":[" map_method "]}," ActionDispatch Routing Mapper Base default_url_options=":{"type":"method","name":"default_url_options=","children":[],"call":["@set default_url_options= "]}," ActionDispatch Routing Mapper Base mount":{"type":"method","name":"mount","children":[],"call":[" match ","options merge "," raise ","options delete ","k respond_to? ","options find "," define_generate_prefix ","options [] "," app_name ","Hash  === "," name_for_action "," rails_app? ","options []= ","app railtie_name ","(str \"            Must be called with mount point\\n\") strip_heredoc ","app respond_to? ","(pair\n  (sym :to)\n  (lvar :app)) merge ","  rails_app? ? "]}," ActionDispatch Routing Mapper Base match":{"type":"method","name":"match","children":[],"call":["@set add_route ","Mapping  new to_route ","Mapping  new ","mapping to_route ","Mapping  new to_route  to_route ","Mapping  new  to_route "]}," ActionDispatch Routing Mapper Base root":{"type":"method","name":"root","children":[],"call":[" match ","options reverse_merge ","(pair\n  (sym :as)\n  (sym :root)) merge ","(pair\n  (sym :as)\n  (sym :root)) merge! ","options is_a? ","(pair\n  (sym :as)\n  (lvar :name)) merge! "," has_named_route? "]}," ActionDispatch Routing Mapper Base initialize":{"type":"method","name":"initialize","children":[],"call":[]}," ActionDispatch Routing Mapper normalize_name":{"type":"method","name":"normalize_name","children":[],"call":[]}," ActionDispatch Routing Mapper normalize_path":{"type":"method","name":"normalize_path","children":[],"call":[]}," ActionDispatch Routing Mapper Mapping default_action":{"type":"method","name":"default_action","children":[],"call":["@scope [] ","@options [] "," scope [] "," scope "," options [] "," options "]}," ActionDispatch Routing Mapper Mapping default_controller":{"type":"method","name":"default_controller","children":[],"call":["@scope [] ","@options [] ","@scope [] to_s ","@options [] to_s "," scope [] "," scope "," options [] "," options "]}," ActionDispatch Routing Mapper Mapping to":{"type":"method","name":"to","children":[],"call":["@options [] "," options [] "," options "]}," ActionDispatch Routing Mapper Mapping segment_keys":{"type":"method","name":"segment_keys","children":[],"call":["Rack Mount RegexpWithNamedGroups  new names ","Rack Mount RegexpWithNamedGroups  new ","Rack Mount Strexp  compile "," requirements ","Journey Path Pattern  new names ","Journey Path Pattern  new ","Journey Router Strexp  compile ","s to_sym "," path_pattern names map "," path_pattern names "," path_pattern "]}," ActionDispatch Routing Mapper Mapping request_method_condition":{"type":"method","name":"request_method_condition","children":[],"call":["Regexp  union ","m to_s upcase ","m to_s "," Array map "," Array ","@options [] ","via join ","m to_s dasherize upcase ","m to_s dasherize ","@options []  join "]}," ActionDispatch Routing Mapper Mapping constraints":{"type":"method","name":"constraints","children":[],"call":["k == "," segment_keys include? ","k to_s "," segment_keys "," requirements reject "," requirements ","constraints merge! "," options [] "," options "," options [] is_a? ","constraints []= ","Regexp  === "," options except each "," options except "," scope [] "," scope "," tap ","@conditions []= ","required_defaults << ","path_params include? ","options each_pair ","options group_by "]}," ActionDispatch Routing Mapper Mapping blocks":{"type":"method","name":"blocks","children":[],"call":["(send\n  (begin\n    (or\n      (send\n        (ivar :@scope) :[]\n        (sym :blocks))\n      (array))) :+\n  (array\n    (lvar :block))) compact ","(or\n  (send\n    (ivar :@scope) :[]\n    (sym :blocks))\n  (array)) + ","@scope [] ","@options [] ","@options [] is_a? ! ","@options [] is_a? ","@options [] present? ","constraints is_a? ! ","constraints is_a? ","constraints present? ","block << "," scope [] "," scope "," options [] "," options "," options [] is_a? ! "," options [] is_a? "," options [] present? "," verify_callable_constraint ","options_constraints is_a? ! ","options_constraints is_a? "," raise ","callable_constraint inspect ","callable_constraint respond_to? ","(send\n  (begin\n    (or\n      (send\n        (ivar :@scope) :[]\n        (sym :@options [] s))\n      (array))) :+\n  (array\n    (lvar :@options [] ))) compact ","(or\n  (send\n    (ivar :@scope) :[]\n    (sym :@options [] s))\n  (array)) + ","@options []  is_a? ! ","@options []  is_a? ","@options []  present? ","@options []  << ","options_@options []  is_a? ! ","options_@options []  is_a? "]}," ActionDispatch Routing Mapper Mapping default_controller_and_action":{"type":"method","name":"default_controller_and_action","children":[],"call":["hash delete ","hash [] blank? ","hash [] ","(pair\n  (sym :controller)\n  (lvar :controller)) tap "," raise "," segment_keys exclude? "," segment_keys ","action blank? ","controller blank? ","action to_s ","action is_a? ","controller to_s ","controller is_a? ","(send\n  (ivar :@scope) :[]\n  (sym :module)) compact join presence ","(send\n  (ivar :@scope) :[]\n  (sym :module)) compact join ","(send\n  (ivar :@scope) :[]\n  (sym :module)) compact ","@scope [] "," default_action "," default_controller "," to to_s "," to "," to is_a? "," to split "," to respond_to? ","defaults [] blank? ","defaults [] ","(pair\n  (sym :action)\n  (send\n    (send nil :to) :to_s)) merge ","defaults delete ","controller =~ ","hash []= ","message << ","controller !~ ","controller [] ","controller is_a? ! ","(pair\n  (sym :controller to_s )\n  (lvar :controller to_s )) tap ","(pair\n  (sym :(send\n  (ivar :@scope) :[]\n  (sym :module)) compact join presence )\n  (lvar :(send\n  (ivar :@scope) :[]\n  (sym :module)) compact join presence )) tap ","(pair\n  (sym :controller [] )\n  (lvar :controller [] )) tap ","action to_s  blank? "," to to_s  blank? ","controller to_s  blank? ","(send\n  (ivar :@scope) :[]\n  (sym :module)) compact join presence  blank? ","controller []  blank? ","action to_s  to_s "," to to_s  to_s ","action to_s  is_a? "," to to_s  is_a? ","controller to_s  to_s ","(send\n  (ivar :@scope) :[]\n  (sym :module)) compact join presence  to_s ","controller []  to_s ","controller to_s  is_a? ","(send\n  (ivar :@scope) :[]\n  (sym :module)) compact join presence  is_a? ","controller []  is_a? "," default_action to_s  "," default_ to to_s  "," default_controller to_s  "," default_(send\n  (ivar :@scope) :[]\n  (sym :module)) compact join presence  "," default_controller []  ","(pair\n  (sym :action to_s )\n  (send\n    (send nil :to) :to_s)) merge ","(pair\n  (sym : to to_s )\n  (send\n    (send nil :to) :to_s)) merge ","controller to_s  =~ ","(send\n  (ivar :@scope) :[]\n  (sym :module)) compact join presence  =~ ","controller []  =~ ","controller to_s  !~ ","(send\n  (ivar :@scope) :[]\n  (sym :module)) compact join presence  !~ ","controller []  !~ ","controller to_s  [] ","(send\n  (ivar :@scope) :[]\n  (sym :module)) compact join presence  [] ","controller []  [] ","controller to_s  is_a? ! ","(send\n  (ivar :@scope) :[]\n  (sym :module)) compact join presence  is_a? ! ","controller []  is_a? ! "]}," ActionDispatch Routing Mapper Mapping defaults":{"type":"method","name":"defaults","children":[],"call":["defaults []= ","IGNORE_OPTIONS  include? ","k to_sym ","v is_a? ","@options each ","defaults reverse_merge! ","@scope [] ","(or\n  (send\n    (ivar :@options) :[]\n    (sym :defaults))\n  (hash)) tap ","@options [] "," raise "," segment_keys exclude? "," segment_keys ","defaults [] blank? ","defaults [] "," default_controller ","(pair\n  (sym :action)\n  (send\n    (send nil :to) :to_s)) merge "," to to_s "," to "," to split "," to respond_to? ","defaults merge! "," default_controller_and_action "]}," ActionDispatch Routing Mapper Mapping requirements":{"type":"method","name":"requirements","children":[],"call":["requirements []= ","v is_a? ","@options each ","requirements reverse_merge! ","@scope [] ","(if\n  (send\n    (send\n      (ivar :@options) :[]\n      (sym :constraints)) :is_a?\n    (const nil :Hash))\n  (send\n    (ivar :@options) :[]\n    (sym :constraints))\n  (hash)) tap ","@options [] ","@options [] is_a? ","@set controller_constraints ","requirements [] "," returning ","(or\n  (send\n    (ivar :@options) :[]\n    (sym :constraints))\n  (hash)) tap "," raise ","requirement inspect ","requirement multiline? ","requirement source =~ ","requirement source ","requirements each ","requirements values grep each ","requirements values grep ","requirements values "]}," ActionDispatch Routing Mapper Mapping conditions":{"type":"method","name":"conditions","children":[],"call":["(pair\n  (sym :path_info)\n  (ivar :@path)) merge merge "," request_method_condition ","(pair\n  (sym :path_info)\n  (ivar :@path)) merge "," constraints "," build_conditions ","@set request_class "]}," ActionDispatch Routing Mapper Mapping app":{"type":"method","name":"app","children":[],"call":["Constraints  new ","@set request_class "," blocks ","Routing RouteSet Dispatcher  new "," defaults "," to "," to respond_to? "," endpoint "," dispatcher ","blocks any? ","Redirect  === "," defaults key? ","Routing RouteSet StaticDispatcher  new "," to < "," to is_a? "]}," ActionDispatch Routing Mapper Mapping normalize_path":{"type":"method","name":"normalize_path","children":[],"call":["path include? ","@options delete ","@options [] == ","@options [] ","@options reverse_merge! "," raise ","@scope [] ","path match ","Mapper  normalize_path ","path blank? ","path empty? ","@scope [] blank? ","path end_with? ","@options [] != ","1 to_sym ","Mapper  normalize_path  include? ","Mapper  normalize_path  match ","Mapper  normalize_Mapper  normalize_path  ","Mapper  normalize_path  blank? ","Mapper  normalize_path  empty? ","Mapper  normalize_path  end_with? "]}," ActionDispatch Routing Mapper Mapping using_match_shorthand?":{"type":"method","name":"using_match_shorthand?","children":[],"call":["path =~ ","options except empty? ","options except ","args first include? ! ","args first include? ","args first ","args present? ","(or\n  (send\n    (lvar :options) :[]\n    (sym :to))\n  (send\n    (lvar :options) :[]\n    (sym :action))) nil? ","options [] "]}," ActionDispatch Routing Mapper Mapping normalize_options!":{"type":"method","name":"normalize_options!","children":[],"call":["@options merge! "," default_controller_and_action ","Mapper  normalize_name ","@options [] ","path_without_format [] sub ","path_without_format [] ","@options [] blank? "," using_match_shorthand? ","@path sub ","path_without_format [] gsub "," raise ","requirement inspect ","requirement multiline? ","requirement source =~ ","requirement source "," constraints [] ! "," constraints [] "," constraints ","Regexp  === "," requirements each "," requirements ","path_without_format gsub [] sub ","path_without_format gsub [] ","path_without_format gsub "," scope [] "," scope ","path_without_format match ","1 to_sym ","@options [] != "," path sub "," path ","@options reverse_merge! ","options merge! "," check_controller_and_action "," add_controller_module "," default_action ","to_endpoint [] "," default_controller "," split_to "," to "," to respond_to? ","options [] ","path_params include? ","node name to_sym ","node name ","path_ast grep ","formatted != "," default_ add_controller_module _and_action ","@path sub  [] sub "," path sub  [] sub ","@path sub  [] "," path sub  [] ","@path sub  [] gsub "," path sub  [] gsub ","@path sub  gsub [] sub "," path sub  gsub [] sub ","@path sub  gsub [] "," path sub  gsub [] ","@path sub  gsub "," path sub  gsub ","@path sub  match "," path sub  match "," check_ add_controller_module _and_action "," add_ add_controller_module _module "," split_to  [] "," default_ add_controller_module  "]}," ActionDispatch Routing Mapper Mapping to_route":{"type":"method","name":"to_route","children":[],"call":["@options [] "," defaults "," requirements "," conditions "," app "," options [] "," options "," anchor "," as "]}," ActionDispatch Routing Mapper Mapping initialize":{"type":"method","name":"initialize","children":[],"call":[" normalize_options! "," normalize_path ","(or\n  (send\n    (ivar :@scope) :[]\n    (sym :options))\n  (hash)) merge ","@scope [] "," extract_path_and_options "," normalize_defaults! "," normalize_conditions! "," normalize_requirements! "," normalize_path! "," add_request_method ","@conditions []= "," normalize_format! ","@defaults [] ","Fixnum  === ","String  === ","URL_OPTIONS  include? ","options_constraints each "," split_constraints ","options_constraints is_a? "," blocks ","scope [] "," constraints "," path_params "," path_ast ","options delete "," Array ","Integer  === ","(or\n  (send\n    (lvar :split_options) :[]\n    (sym :required_defaults))\n  (array)) map ","split_options [] ","@requirements key? ! ","@requirements key? ","path_params include? ","formats [] merge merge "," normalize_defaults ","formats [] merge ","formats [] ","Hash  [] "," normalize_format "," verify_regexp_requirements ","requirements map grep ","requirements map ","constraints merge! ","Hash  [] merge ","options_constraints find_all ","scope_constraints merge "," add_wildcard_options ","ast find_all map ","ast find_all ","options [] "," intern ","scope_params [] ","scope_params [] merge ","wildcard_options merge! "," alter_regex_for_custom_routes ","node cat? ","wildcard_options [] ","node name to_sym ","node name ","node star? ","formatted != ","path_params << ","node to_sym ","node symbol? ","ast each ","Journey Path Pattern  new ","ast requirements= ","ast path_params include? ","ast path_params ","ast wildcard_options ","ast wildcard_options merge! ","Journey Ast  new "," normalize_ normalize_options! ! "," normalize_ add_wildcard_options ! "," normalize_wildcard_options merge! ! "," normalize_ast wildcard_options merge! ! "," normalize_ normalize_path!  ","(or\n  (send\n    (ivar :@scope) :[]\n    (sym : normalize_options! ))\n  (hash)) merge ","(or\n  (send\n    (ivar :@scope) :[]\n    (sym : add_wildcard_options ))\n  (hash)) merge ","(or\n  (send\n    (ivar :@scope) :[]\n    (sym :wildcard_options merge! ))\n  (hash)) merge ","(or\n  (send\n    (ivar :@scope) :[]\n    (sym :ast wildcard_options merge! ))\n  (hash)) merge "," extract_path_and_ normalize_options!  "," extract_path_and_ add_wildcard_options  "," extract_path_and_wildcard_options merge!  "," extract_path_and_ast wildcard_options merge!  "," extract_ normalize_path! _and_options "," normalize_ normalize_path! ! ","Hash  []  []= ","formats [] merge merge  [] ","Hash  [] merge  [] ","scope_params []  [] ","options_ constraints  each ","options_scope_constraints merge  each ","options_scope_params [] merge  each "," normalize_options! _constraints each "," add_wildcard_options _constraints each ","wildcard_options merge! _constraints each ","ast wildcard_options merge! _constraints each ","options delete  each "," split_ constraints  "," split_scope_constraints merge  "," split_scope_params [] merge  ","options_ constraints  is_a? ","options_scope_constraints merge  is_a? ","options_scope_params [] merge  is_a? "," normalize_options! _constraints is_a? "," add_wildcard_options _constraints is_a? ","wildcard_options merge! _constraints is_a? ","ast wildcard_options merge! _constraints is_a? ","options delete  is_a? ","  constraints  "," scope_constraints merge  "," scope_params [] merge  ","  path_params  "," ast find_all map  ","  normalize_path! _params "," path_ path_ast  "," path_Journey Ast  new  ","  normalize_path! _ast "," normalize_options!  delete "," add_wildcard_options  delete ","wildcard_options merge!  delete ","ast wildcard_options merge!  delete ","(or\n  (send\n    (lvar :split_ normalize_options! ) :[]\n    (sym :required_defaults))\n  (array)) map ","(or\n  (send\n    (lvar :split_ add_wildcard_options ) :[]\n    (sym :required_defaults))\n  (array)) map ","(or\n  (send\n    (lvar :split_wildcard_options merge! ) :[]\n    (sym :required_defaults))\n  (array)) map ","(or\n  (send\n    (lvar :split_ast wildcard_options merge! ) :[]\n    (sym :required_defaults))\n  (array)) map ","(or\n  (send\n    (lvar : constraints ) :[]\n    (sym :required_defaults))\n  (array)) map ","split_ normalize_options!  [] ","split_ add_wildcard_options  [] ","split_wildcard_options merge!  [] ","split_ast wildcard_options merge!  [] "," constraints  [] ","formats [] merge  key? ! ","formats [] merge  key? "," path_params  include? ","ast find_all map  include? "," normalize_path! _params include? "," normalize_format  [] merge merge "," normalize_format  [] merge "," normalize_format  [] "," constraints  merge! ","scope_constraints merge  merge! ","scope_params [] merge  merge! ","options_ constraints  find_all ","options_scope_constraints merge  find_all ","options_scope_params [] merge  find_all "," normalize_options! _constraints find_all "," add_wildcard_options _constraints find_all ","wildcard_options merge! _constraints find_all ","ast wildcard_options merge! _constraints find_all ","options delete  find_all ","scope_ constraints  merge ","scope_scope_constraints merge  merge ","scope_scope_params [] merge  merge "," add_wildcard_ normalize_options!  "," add_wildcard_ add_wildcard_options  "," add_wildcard_wildcard_options merge!  "," add_wildcard_ast wildcard_options merge!  "," path_ast  find_all map ","Journey Ast  new  find_all map "," path_ast  find_all ","Journey Ast  new  find_all "," normalize_options!  [] "," add_wildcard_options  [] ","wildcard_options merge!  [] ","ast wildcard_options merge!  [] ","wildcard_ normalize_options!  merge! ","wildcard_ add_wildcard_options  merge! ","wildcard_wildcard_options merge!  merge! ","wildcard_ast wildcard_options merge!  merge! ","wildcard_ normalize_options!  [] ","wildcard_ add_wildcard_options  [] ","wildcard_wildcard_options merge!  [] ","wildcard_ast wildcard_options merge!  [] ","options delete  != "," path_params  << ","ast find_all map  << "," normalize_path! _params << "," path_ast  each ","Journey Ast  new  each "," path_ast  requirements= ","Journey Ast  new  requirements= ","ast  path_params  include? ","ast ast find_all map  include? "," path_ast  path_params include? ","Journey Ast  new  path_params include? ","ast  normalize_path! _params include? ","ast  path_params  ","ast ast find_all map  "," path_ast  path_params ","Journey Ast  new  path_params ","ast  normalize_path! _params ","ast wildcard_ normalize_options!  ","ast wildcard_ add_wildcard_options  ","ast wildcard_wildcard_options merge!  ","ast wildcard_ast wildcard_options merge!  "," path_ast  wildcard_options ","Journey Ast  new  wildcard_options ","ast wildcard_ normalize_options!  merge! ","ast wildcard_ add_wildcard_options  merge! ","ast wildcard_wildcard_options merge!  merge! ","ast wildcard_ast wildcard_options merge!  merge! "," path_ast  wildcard_options merge! ","Journey Ast  new  wildcard_options merge! "]}," ActionDispatch Routing Mapper Constraints constraint_args":{"type":"method","name":"constraint_args","children":[],"call":["request symbolized_path_parameters ","constraint arity == ","constraint arity ","request path_parameters ","arity == ","arity < ","constraint method arity ","constraint method ","constraint respond_to? ","constraint constraint method arity  == ","constraint constraint arity  == ","constraint constraint method arity  ","constraint constraint arity  ","constraint method arity  == ","constraint arity  == ","constraint method arity  < ","constraint arity  < ","constraint method constraint method arity  ","constraint method constraint arity  "]}," ActionDispatch Routing Mapper Constraints call":{"type":"method","name":"call","children":[],"call":["@app call ","constraint call ! ","constraint call "," constraint_args ","constraint respond_to? ","constraint matches? ! ","constraint matches? ","@constraints each ","@request new ","Rack Request  new "," matches? ","@@request new uest new ","@Rack Request  new uest new "]}," ActionDispatch Routing Mapper Constraints initialize":{"type":"method","name":"initialize","children":[],"call":["app app ","app constraints ","app is_a? "," class ","app app  app app  ","app app  constraints ","app app  is_a? "]}," ActionDispatch Routing Mapper Constraints new":{"type":"method","name":"new","children":[],"call":[]}," ActionDispatch Routing DeprecatedMapper action_options_for":{"type":"method","name":"action_options_for","children":[],"call":["default_options merge merge ","resource requirements ","default_options merge "," add_conditions_for ","resource conditions ","default_options [] ","resource kind_of? ! ","resource kind_of? ","resource_options [] ","action to_s "]}," ActionDispatch Routing DeprecatedMapper add_conditions_for":{"type":"method","name":"add_conditions_for","children":[],"call":["options [] []= ","options [] ","method == ","(pair\n  (sym :conditions)\n  (send\n    (lvar :conditions) :dup)) tap ","conditions dup "," returning "]}," ActionDispatch Routing DeprecatedMapper map_resource_routes":{"type":"method","name":"map_resource_routes","children":[],"call":["map connect ","map named_route ","@set named_routes [] nil? ","@set named_routes [] ","route_name to_sym ","@set named_routes "," action_options_for ","resource has_action? ","  action_options_for _for "]}," ActionDispatch Routing DeprecatedMapper map_member_actions":{"type":"method","name":"map_member_actions","children":[],"call":[" map_resource_routes ","resource member_path ","resource singular ","resource shallow_name_prefix ","resource action_separator ","@set resources_path_names [] ","@set resources_path_names ","resource options [] [] ","resource options [] ","resource options ","resource options [] is_a? ","(lvar :method) flatten each ","(lvar :method) flatten ","actions each ","resource member_methods each ","resource member_methods ","ActionController Base  resources_path_names [] ","ActionController Base  resources_path_names "]}," ActionDispatch Routing DeprecatedMapper map_new_actions":{"type":"method","name":"map_new_actions","children":[],"call":[" map_resource_routes ","resource action_separator ","action == ","resource singular ","resource name_prefix ","resource new_path ","actions each ","resource new_methods each ","resource new_methods "]}," ActionDispatch Routing DeprecatedMapper map_default_singleton_actions":{"type":"method","name":"map_default_singleton_actions","children":[],"call":[" map_resource_routes ","resource singular ","resource shallow_name_prefix ","resource path "]}," ActionDispatch Routing DeprecatedMapper map_default_collection_actions":{"type":"method","name":"map_default_collection_actions","children":[],"call":[" map_resource_routes ","resource path ","index_route_name << ","resource uncountable? ","resource plural ","resource name_prefix "]}," ActionDispatch Routing DeprecatedMapper map_collection_actions":{"type":"method","name":"map_collection_actions","children":[],"call":[" map_resource_routes ","resource plural ","resource name_prefix ","resource action_separator ","resource path ","resource options [] [] ","resource options [] ","resource options ","resource options [] is_a? ","(lvar :method) flatten each ","(lvar :method) flatten ","actions each ","resource collection_methods each ","resource collection_methods "]}," ActionDispatch Routing DeprecatedMapper map_has_many_associations":{"type":"method","name":"map_has_many_associations","children":[],"call":[" resources ","options slice merge ","options [] ","resource nesting_name_prefix ","resource nesting_path_prefix ","options slice "," map_has_many_associations ","associations each ","options merge "]}," ActionDispatch Routing DeprecatedMapper map_associations":{"type":"method","name":"map_associations","children":[],"call":[" resource ","options slice merge ","options slice "," Array each "," Array ","options [] ","resource nesting_name_prefix ","options delete ","resource nesting_path_prefix "," map_has_many_associations "]}," ActionDispatch Routing DeprecatedMapper map_singleton_resource":{"type":"method","name":"map_singleton_resource","children":[],"call":[" map_default_singleton_actions "," map_member_actions "," map_new_actions "," map_collection_actions "," with_options ","options slice merge ","resource nesting_name_prefix ","resource nesting_path_prefix ","options slice "," block_given? "," map_associations ","resource controller ","SingletonResource  new ","@set resources_path_names ","SingletonResource  new  nesting_name_prefix ","SingletonResource  new  nesting_path_prefix ","SingletonResource  new  controller ","@set SingletonResource  new s_path_names "]}," ActionDispatch Routing DeprecatedMapper map_resource":{"type":"method","name":"map_resource","children":[],"call":[" map_member_actions "," map_new_actions "," map_default_collection_actions "," map_collection_actions "," with_options ","options slice merge ","resource nesting_name_prefix ","resource nesting_path_prefix ","options slice "," block_given? "," map_associations ","resource controller ","Resource  new ","@set resources_path_names ","Resource  new  nesting_name_prefix ","Resource  new  nesting_path_prefix ","Resource  new  controller ","@set Resource  new s_path_names "]}," ActionDispatch Routing DeprecatedMapper resource":{"type":"method","name":"resource","children":[],"call":[" map_singleton_resource ","options dup ","entities each ","entities extract_options! ","entities extract_options!  dup ","entities extract_entities extract_options! ! "]}," ActionDispatch Routing DeprecatedMapper resources":{"type":"method","name":"resources","children":[],"call":[" map_resource ","options dup ","entities each ","entities extract_options! ","entities extract_options!  dup ","entities extract_entities extract_options! ! "]}," ActionDispatch Routing DeprecatedMapper SingletonResource initialize":{"type":"method","name":"initialize","children":[],"call":["@singular to_s pluralize ","@singular to_s ","options [] "]}," ActionDispatch Routing DeprecatedMapper Resource add_default_action":{"type":"method","name":"add_default_action","children":[],"call":["(or-asgn\n  (send\n    (lvar :collection) :[]\n    (lvar :method))\n  (array)) unshift ","collection [] "]}," ActionDispatch Routing DeprecatedMapper Resource arrange_actions_by_methods":{"type":"method","name":"arrange_actions_by_methods","children":[],"call":["(or-asgn\n  (send\n    (lvar :flipped_hash) :[]\n    (lvar :value))\n  (array)) << ","flipped_hash [] ","(or\n  (lvar :actions)\n  (hash)) inject "]}," ActionDispatch Routing DeprecatedMapper Resource set_prefixes":{"type":"method","name":"set_prefixes","children":[],"call":[" options delete "," options "]}," ActionDispatch Routing DeprecatedMapper Resource action_allowed?":{"type":"method","name":"action_allowed?","children":[],"call":["except include? ! ","except include? ","except ! ","only include? ","only ! ","@allowed_actions values_at "]}," ActionDispatch Routing DeprecatedMapper Resource set_allowed_actions":{"type":"method","name":"set_allowed_actions","children":[],"call":["@allowed_actions []= ","a to_sym "," Array map "," Array ","except == ","only == ","@options values_at "]}," ActionDispatch Routing DeprecatedMapper Resource add_default_actions":{"type":"method","name":"add_default_actions","children":[],"call":[" add_default_action "," new_methods "," member_methods "]}," ActionDispatch Routing DeprecatedMapper Resource arrange_actions":{"type":"method","name":"arrange_actions","children":[],"call":[" arrange_actions_by_methods "," options delete "," options "]}," ActionDispatch Routing DeprecatedMapper Resource has_action?":{"type":"method","name":"has_action?","children":[],"call":[" action_allowed? ","DEFAULT_ACTIONS  include? ! ","DEFAULT_ACTIONS  include? "]}," ActionDispatch Routing DeprecatedMapper Resource uncountable?":{"type":"method","name":"uncountable?","children":[],"call":["@singular to_s == ","@plural to_s ","@singular to_s "]}," ActionDispatch Routing DeprecatedMapper Resource action_separator":{"type":"method","name":"action_separator","children":[],"call":["ActionController Base  resource_action_separator "]}," ActionDispatch Routing DeprecatedMapper Resource nesting_name_prefix":{"type":"method","name":"nesting_name_prefix","children":[],"call":[" singular "," shallow_name_prefix "]}," ActionDispatch Routing DeprecatedMapper Resource shallow_name_prefix":{"type":"method","name":"shallow_name_prefix","children":[],"call":[" name_prefix ","@options [] try ","@options [] "]}," ActionDispatch Routing DeprecatedMapper Resource nesting_path_prefix":{"type":"method","name":"nesting_path_prefix","children":[],"call":[" singular "," path_segment "," shallow_path_prefix "]}," ActionDispatch Routing DeprecatedMapper Resource member_path":{"type":"method","name":"member_path","children":[],"call":[" path_segment "," shallow_path_prefix "]}," ActionDispatch Routing DeprecatedMapper Resource shallow_path_prefix":{"type":"method","name":"shallow_path_prefix","children":[],"call":[" path_prefix ","@options [] try ","@options [] "]}," ActionDispatch Routing DeprecatedMapper Resource new_path":{"type":"method","name":"new_path","children":[],"call":[" path "," defaults [] [] "," defaults [] "," defaults "," options [] [] "," options [] "," options ","ActionController Base  resources_path_names [] ","ActionController Base  resources_path_names "]}," ActionDispatch Routing DeprecatedMapper Resource path":{"type":"method","name":"path","children":[],"call":[" path_segment "," path_prefix "]}," ActionDispatch Routing DeprecatedMapper Resource conditions":{"type":"method","name":"conditions","children":[],"call":["@options [] "]}," ActionDispatch Routing DeprecatedMapper Resource requirements":{"type":"method","name":"requirements","children":[],"call":["@requirements merge ","Routing SEPARATORS  join ","@requirements delete ","@options [] "]}," ActionDispatch Routing DeprecatedMapper Resource controller":{"type":"method","name":"controller","children":[],"call":["(or\n  (send\n    (send nil :options) :[]\n    (sym :controller))\n  (send nil :plural)) to_s "," plural "," options [] "," options "]}," ActionDispatch Routing DeprecatedMapper Resource initialize":{"type":"method","name":"initialize","children":[],"call":[" set_prefixes "," set_allowed_actions "," add_default_actions "," arrange_actions ","options delete "," plural to_s singularize "," plural to_s "," plural ","options [] "]}," ActionDispatch Routing DeprecatedMapper method_missing":{"type":"method","name":"method_missing","children":[],"call":[" named_route ","proc nil? ","args length >= ","args length "]}," ActionDispatch Routing DeprecatedMapper namespace":{"type":"method","name":"namespace","children":[],"call":[" with_options ","(pair\n  (sym :path_prefix)\n  (lvar :name)) merge ","(pair\n  (sym :path_prefix)\n  (dstr\n    (begin\n      (send\n        (lvar :options) :delete\n        (sym :path_prefix)))\n    (str \"/\")\n    (begin\n      (lvar :name)))) merge ","options delete ","options [] "]}," ActionDispatch Routing DeprecatedMapper named_route":{"type":"method","name":"named_route","children":[],"call":[" connect ","options []= "]}," ActionDispatch Routing DeprecatedMapper root":{"type":"method","name":"root","children":[],"call":[" named_route ","source_route defaults merge ","source_route conditions ","source_route defaults ","@set named_routes routes [] ","@set named_routes routes ","@set named_routes ","options is_a? ","@set named_routes routes []  defaults merge ","@set named_routes routes []  conditions ","@set named_routes routes []  defaults ","source_route defaults merge  is_a? "]}," ActionDispatch Routing DeprecatedMapper optionalize_trailing_dynamic_segments":{"type":"method","name":"optionalize_trailing_dynamic_segments","children":[],"call":["segments join ","segments unshift ","segments push ","index < ","length - ","defaults delete ","1 to_sym ","defaults [] nil? ","defaults [] ","defaults has_key? ","segment =~ ","(send\n  (lvar :segment) :=~\n  (regexp\n    (str \"^:\\\\w+\\\\(\\\\.:format\\\\)$\")\n    (regopt))) ! ","(send\n  (lvar :segment) :=~\n  (regexp\n    (str \"^:\\\\w+$\")\n    (regopt))) ! ","segment == ","segments include? ","required_segments each ","old_segments reverse each_with_index ","old_segments reverse ","old_segments length ","old_segments shift ","path split ","defaults keys compact ","defaults keys ","requirements keys ","path dup ","path =~ ","old_segments length  - ","requirements keys  each ","path split  reverse each_with_index ","path split  reverse ","old_segments old_segments length  ","path split  length ","path split  shift ","path dup  split ","path dup  dup ","path dup  =~ "]}," ActionDispatch Routing DeprecatedMapper connect":{"type":"method","name":"connect","children":[],"call":["@set add_route ","conditions []= ","Routing RouteSet Dispatcher  new "," raise ","defaults [] blank? ! ","defaults [] blank? ","defaults [] "," Rack Mount Utils  normalize_path ","1 to_sym ","path =~ "," optionalize_trailing_dynamic_segments ","path gsub ","path is_a? ","defaults []= ","defaults [] to_s ","@set controller_constraints ","requirements [] ","requirement inspect ","requirement multiline? ","requirement source =~ ","requirement source ","requirements each ","value to_param ","value is_a? ","k to_sym ","options delete ","requirements []= ","v is_a? ","options each ","method first ","method length == ","method length ","Regexp  union ","method length > ","HTTP_METHODS  include? ","m downcase to_sym ","m downcase ","m == ","m to_s upcase ","m to_s ","method map! ","(send\n  (lvar :conditions) :delete\n  (sym :method)) flatten compact ","(send\n  (lvar :conditions) :delete\n  (sym :method)) flatten ","conditions delete ","conditions dup ","options dup ","conditions dup  []= ","options delete  []= "," Rack Mount Utils  normalize_ Rack Mount Utils  normalize_path  "," Rack Mount Utils  normalize_ optionalize_trailing_dynamic_segments  "," Rack Mount Utils  normalize_path gsub  "," Rack Mount Utils  norm to_s upcase alize_path ","1 to_sym to_s upcase  "," Rack Mount Utils  normalize_path  =~ "," optionalize_trailing_dynamic_segments  =~ ","path gsub  =~ "," optionalize_trailing_dynam to_s upcase ic_segm to_s upcase ents "," Rack Mount Utils  normalize_path  gsub "," optionalize_trailing_dynamic_segments  gsub ","path gsub  gsub "," Rack Mount Utils  normalize_path  is_a? "," optionalize_trailing_dynamic_segments  is_a? ","path gsub  is_a? ","requirem to_s upcase ents [] ","requirem to_s upcase ent inspect ","requirem to_s upcase ent m to_s upcase ultiline? ","requirem to_s upcase ent source =~ ","requirem to_s upcase ent source ","requirem to_s upcase ents each ","options delete  to_param ","value to_param to_s upcase  ","options delete  is_a? ","k to_sym to_s upcase  ","options dup  delete ","requirem to_s upcase ents []= ","options dup  each ","method first  first ","Regexp  union  first ","(send\n  (lvar :conditions) :delete\n  (sym :method)) flatten compact  first ","m to_s upcase ethod first ","method first  length == ","Regexp  union  length == ","(send\n  (lvar :conditions) :delete\n  (sym :method)) flatten compact  length == ","m to_s upcase ethod length == ","method first  length ","Regexp  union  length ","(send\n  (lvar :conditions) :delete\n  (sym :method)) flatten compact  length ","m to_s upcase ethod length ","method first  length > ","Regexp  union  length > ","(send\n  (lvar :conditions) :delete\n  (sym :method)) flatten compact  length > ","m to_s upcase ethod length > ","m to_s upcase  downcase to_sym to_s upcase  ","m to_s upcase  downcase ","m to_s upcase  == ","m to_s upcase  to_s upcase ","m to_s upcase  to_s ","method first  map! ","Regexp  union  map! ","(send\n  (lvar :conditions) :delete\n  (sym :method)) flatten compact  map! ","m to_s upcase ethod m to_s upcase ap! ","(send\n  (lvar :conditions) :delete\n  (sym :method first )) flatten compact ","(send\n  (lvar :conditions) :delete\n  (sym :Regexp  union )) flatten compact ","(send\n  (lvar :conditions) :delete\n  (sym :(send\n  (lvar :conditions) :delete\n  (sym :method)) flatten compact )) flatten compact ","(send\n  (lvar :conditions) :delete\n  (sym to_s upcase  :m to_s upcase ethod)) flatten com to_s upcase pact ","(send\n  (lvar :conditions dup ) :delete\n  (sym :method)) flatten compact ","(send\n  (lvar :options delete ) :delete\n  (sym :method)) flatten compact ","(send\n  (lvar :conditions) :delete\n  (sym :method first )) flatten ","(send\n  (lvar :conditions) :delete\n  (sym :Regexp  union )) flatten ","(send\n  (lvar :conditions) :delete\n  (sym :(send\n  (lvar :conditions) :delete\n  (sym :method)) flatten compact )) flatten ","(send\n  (lvar :conditions) :delete\n  (sym to_s upcase  :m to_s upcase ethod)) flatten ","(send\n  (lvar :conditions dup ) :delete\n  (sym :method)) flatten ","(send\n  (lvar :options delete ) :delete\n  (sym :method)) flatten ","conditions dup  delete ","options delete  delete ","conditions dup  dup ","options delete  dup ","options dup  dup "]}," ActionDispatch Routing DeprecatedMapper initialize":{"type":"method","name":"initialize","children":[],"call":["ActiveSupport Deprecation  warn ","You are using the old router DSL which will be removed in Rails 3.1.  << "]}," ActionDispatch Routing RouteSet in_memory_controller_namespaces":{"type":"method","name":"in_memory_controller_namespaces","children":[],"call":["namespaces delete ","namespaces << ","klass name underscore split [] join ","klass name underscore split [] ","klass name underscore split ","klass name underscore ","klass name ","klass anonymous? ","ActionController Base  descendants each ","ActionController Base  descendants ","Set  new ","controller_name split [] join ","controller_name split [] ","controller_name split ","klass underscore ","ActionController Base  subclasses each ","ActionController Base  subclasses ","Set  new  delete ","Set  new  << ","klass underscore  split [] join ","klass underscore  split [] ","klass underscore  split "]}," ActionDispatch Routing RouteSet controller_constraints":{"type":"method","name":"controller_constraints","children":[],"call":["Regexp  compile ","source sort reverse join ","source sort reverse ","source sort ","source << ","CONTROLLER_REGEXP  source ","Regexp  escape ","namespaces map "," controller_namespaces + "," in_memory_controller_namespaces "," controller_namespaces "," controller_namespaces +  map "," controller_ controller_namespaces +  + "," in_memory_controller_ controller_namespaces +  "," controller_ controller_namespaces +  "]}," ActionDispatch Static directory_exist?":{"type":"method","name":"directory_exist?","children":[],"call":["File  readable? ","File  directory? ","File  join "," Rack Utils  unescape ","@file_server root "]}," ActionDispatch Static file_exist?":{"type":"method","name":"file_exist?","children":[],"call":["File  readable? ","File  file? ","File  join "," Rack Utils  unescape ","@file_server root "]}," ActionDispatch Static call":{"type":"method","name":"call","children":[],"call":["@app call ","@file_server call ","env []= "," file_exist? "," ActionController Base  page_cache_extension "," directory_exist? ","FILE_METHODS  include? ","env [] ","env [] chomp ","@file_handler call ","@file_handler match? ","req env ","@file_handler serve ","req path_info= ","req path_info chomp ","/ freeze ","req path_info ","req head? ","req get? ","ActionDispatch Request  new ","Rack Request  new ","@file_handler attempt ","@file_handler @file_handler match? ? ","ActionDispatch Request  new  env ","Rack Request  new  env ","req env [] chomp _info= ","req req path_info chomp _info= ","ActionDispatch Request  new  path_info= ","Rack Request  new  path_info= ","req env [] chomp _info chomp ","req req path_info chomp _info chomp ","ActionDispatch Request  new  path_info chomp ","Rack Request  new  path_info chomp ","req env [] chomp _info ","req req path_info chomp _info ","ActionDispatch Request  new  path_info ","Rack Request  new  path_info ","ActionDispatch Request  new  head? ","Rack Request  new  head? ","ActionDispatch Request  new  get? ","Rack Request  new  get? "]}," ActionDispatch Static initialize":{"type":"method","name":"initialize","children":[],"call":[" Rack File  new ","FileHandler  new ","headers []= ","Cache-Control freeze ","ActiveSupport Deprecation  warn ","deprecated_cache_control != "]}," ActionDispatch MiddlewareStack assert_index":{"type":"method","name":"assert_index","children":[],"call":[" raise ","index inspect "," index ","index is_a? "," middlewares index "," middlewares ","m klass == ","m klass "," get_class "," index_of "," ra index se "," ra middlewares index se "," ra index_of se "," index ndex  index nspect "," middlewares index ndex  middlewares index nspect "," index_of ndex  index_of nspect "," get_class  inspect ","  index ndex ","  middlewares index ndex ","  index_of ndex ","  get_class  "," index ndex  index s_a? "," middlewares index ndex  middlewares index s_a? "," index_of ndex  index_of s_a? "," get_class  is_a? "," m index ddlewares  index ndex "," m middlewares index ddlewares  middlewares index ndex "," m index_of ddlewares  index_of ndex "," middlewares  get_class  "," m index ddlewares "," m middlewares index ddlewares "," m index_of ddlewares ","  index ndex_of ","  middlewares index ndex_of ","  index_of ndex_of ","  get_class _of "]}," ActionDispatch MiddlewareStack build":{"type":"method","name":"build","children":[],"call":["e build "," reverse inject "," reverse "," raise "," active reverse inject "," active reverse "," active "," middlewares reverse inject "," middlewares reverse "," middlewares "," middlewares freeze reverse inject "," middlewares freeze reverse "," middlewares freeze ","e build_instrumented ","ActiveSupport Notifications  notifier listening? ","ActiveSupport Notifications  notifier "]}," ActionDispatch MiddlewareStack active":{"type":"method","name":"active","children":[],"call":["ActiveSupport Deprecation  warn "," caller ","All middlewares in the chain are active since the laziness  << ","middleware active? "," find_all ","All middlewares in the chaing are active since the laziness  << "]}," ActionDispatch MiddlewareStack use":{"type":"method","name":"use","children":[],"call":[" push "," class Middleware  new "," class ","Middleware  new "," middlewares push "," middlewares "," build_middleware ","  class Middleware  new s push "," Middleware  new s push ","  class Middleware  new s "," Middleware  new s "," build_ class Middleware  new  "," build_Middleware  new  "]}," ActionDispatch MiddlewareStack swap":{"type":"method","name":"swap","children":[],"call":[" delete "," insert_before "," middlewares delete_at ","index + "," middlewares "," insert "," assert_index "," assert_index  + "," assert_ assert_index  "]}," ActionDispatch MiddlewareStack insert_after":{"type":"method","name":"insert_after","children":[],"call":[" insert ","index + "," assert_index ","i + "," raise ","index inspect "," index ","index is_a? ","  index nsert "," assert_index  + "," index ndex + "," assert_ assert_index  "," assert_ index ndex "," index  + "," ra index se "," assert_index  inspect "," index ndex  index nspect ","  assert_index  ","  index ndex "," assert_index  is_a? "," index ndex  index s_a? "]}," ActionDispatch MiddlewareStack insert":{"type":"method","name":"insert","children":[],"call":[" class Middleware  new "," class "," assert_index ","Middleware  new "," index ","index is_a? "," middlewares insert "," middlewares "," build_middleware "," assert_ assert_index  "," assert_ index  ","  assert_index  ","  index  "," assert_index  is_a? "," index  is_a? ","  class Middleware  new s insert "," Middleware  new s insert ","  class Middleware  new s "," Middleware  new s "," build_ class Middleware  new  "," build_Middleware  new  "]}," ActionDispatch MiddlewareStack initialize":{"type":"method","name":"initialize","children":[],"call":["block call "," block_given? "]}," ActionDispatch MiddlewareStack Middleware normalize":{"type":"method","name":"normalize","children":[],"call":["object to_s strip sub ","object to_s strip ","object to_s "]}," ActionDispatch MiddlewareStack Middleware build":{"type":"method","name":"build","children":[],"call":[" klass new "," block "," args "," klass "," build_args ","InstrumentationProxy  new "," inspect "]}," ActionDispatch MiddlewareStack Middleware inspect":{"type":"method","name":"inspect","children":[],"call":[" klass to_s "," klass "," klass class to_s "," klass class "," klass is_a? "]}," ActionDispatch MiddlewareStack Middleware ==":{"type":"method","name":"==","children":[],"call":[" normalize == "," normalize ","@ref name "," klass == "," klass ","middleware klass ","ActiveSupport Inflector  constantize ","middleware to_s "," lazy_compare? "," klass name == "," klass name "]}," ActionDispatch MiddlewareStack Middleware klass":{"type":"method","name":"klass","children":[],"call":["@ref get ","ActiveSupport Inflector  constantize ","@klass to_s ","@klass call ","@klass respond_to? "," classcache [] "," classcache "]}," ActionDispatch MiddlewareStack Middleware initialize":{"type":"method","name":"initialize","children":[],"call":["ActiveSupport Dependencies Reference  new ","args << ","options empty? ","options delete ","options has_key? ","args extract_options! ","klass_or_name to_s ","@klass name ","klass_or_name respond_to? ","args extract_options!  empty? ","args extract_options!  delete ","args extract_options!  has_key? ","args extract_args extract_options! ! "]}," ActionDispatch ShowExceptions logger":{"type":"method","name":"logger","children":[],"call":["Logger  new ","Rails  logger "]}," ActionDispatch ShowExceptions clean_backtrace":{"type":"method","name":"clean_backtrace","children":[],"call":["exception backtrace ","Rails  backtrace_cleaner clean ","Rails  backtrace_cleaner ","Rails  respond_to? "]}," ActionDispatch ShowExceptions full_trace":{"type":"method","name":"full_trace","children":[],"call":[" clean_backtrace "]}," ActionDispatch ShowExceptions framework_trace":{"type":"method","name":"framework_trace","children":[],"call":[" clean_backtrace "]}," ActionDispatch ShowExceptions application_trace":{"type":"method","name":"application_trace","children":[],"call":[" clean_backtrace "]}," ActionDispatch ShowExceptions log_error":{"type":"method","name":"log_error","children":[],"call":[" logger fatal "," logger ","message << << "," application_trace join "," application_trace ","message << ","exception annoted_source_code to_s ","exception annoted_source_code ","exception respond_to? ","exception message ","exception class ","ActiveSupport Deprecation  silence ","(str \"\\n\") + + ","(str \"\\n\") + "," clean_backtrace join "," clean_backtrace ","exception to_s ","ActionView Template Error  === ","exception backtrace join ","exception backtrace "]}," ActionDispatch ShowExceptions public_path":{"type":"method","name":"public_path","children":[],"call":["Rails  public_path "]}," ActionDispatch ShowExceptions render":{"type":"method","name":"render","children":[],"call":["body bytesize to_s ","body bytesize ","body length to_s ","body length ","Response  default_charset "]}," ActionDispatch ShowExceptions status_code":{"type":"method","name":"status_code","children":[],"call":["Rack Utils  status_code ","@@rescue_responses [] ","exception class name ","exception class "]}," ActionDispatch ShowExceptions rescue_action_in_public":{"type":"method","name":"rescue_action_in_public","children":[],"call":[" render ","File  read ","File  exist? "," public_path ","I18n  locale "," status_code ","  status_code _code "]}," ActionDispatch ShowExceptions rescue_action_locally":{"type":"method","name":"rescue_action_locally","children":[],"call":[" render "," status_code ","template render ","@@rescue_templates [] ","exception class name ","exception class ","ActionView Base  new "," full_trace "," framework_trace "," application_trace ","ActionView Base  new  render ","@@rescue_ActionView Base  new s [] "]}," ActionDispatch ShowExceptions render_exception":{"type":"method","name":"render_exception","children":[],"call":["$stderr puts ","failsafe_error backtrace * ","failsafe_error backtrace "," rescue_action_in_public "," rescue_action_locally ","request local? ","Request  new "," log_error "," local_request? "," original_exception "," pass_response ","response [] [] == ","response [] [] ","response [] ","@exceptions_app call ","env []= ","wrapper exception ","wrapper status_code ","ExceptionWrapper  new ","env [] ","request env ","request path_info= ","request set_header ","request path_info ","request get_header ","wrapper unwrapped_exception ","request request_method= ","request raw_request_method "," fallback_to_html_format_if_invalid_mime_type ","Request  new  local? "," local_Request  new ? "," original_ original_exception  "," pass_@exceptions_app call  ","@exceptions_app call  [] [] == ","@exceptions_app call  [] [] ","@exceptions_app call  [] ","@ original_exception s_app call ","wrapper  original_exception  ","ExceptionWrapper  new  exception ","wrapper wrapper status_code _code ","ExceptionWrapper  new  status_code ","Request  new  env ","Request  new  path_info= ","Request  new  set_header ","Request  new  path_info ","Request  new  get_header ","wrapper unwrapped_ original_exception  ","ExceptionWrapper  new  unwrapped_exception ","Request  new  Request  new _method= ","Request  new  raw_Request  new _method "]}," ActionDispatch ShowExceptions call":{"type":"method","name":"call","children":[],"call":[" render_exception "," raise ","env [] == ","env [] ","env [] inspect ","headers [] == ","headers [] ","@app call ","request show_exceptions? ","ActionDispatch Request  new ","wrapper show? ","ExceptionWrapper  new ","request get_header ","ActionDispatch Request  new  show_exceptions? ","ExceptionWrapper  new  show? ","ActionDispatch Request  new  get_header "]}," ActionDispatch ShowExceptions initialize":{"type":"method","name":"initialize","children":[],"call":[" raise ","exceptions_app nil? ","ActiveSupport Deprecation  warn ","(true) include? "]}," ActionDispatch Session MemCacheStore destroy":{"type":"method","name":"destroy","children":[],"call":["@pool delete "," current_session_id "]}," ActionDispatch Session MemCacheStore set_session":{"type":"method","name":"set_session","children":[],"call":["@pool set ","options [] ","env [] ","env []  [] "]}," ActionDispatch Session MemCacheStore get_session":{"type":"method","name":"get_session","children":[],"call":["@pool get "," generate_sid "]}," ActionDispatch Session MemCacheStore initialize":{"type":"method","name":"initialize","children":[],"call":["Mutex  new "," raise ","s alive? ","@pool servers any? ","@pool servers ","MemCache  new ","@default_options [] ","options [] ","(pair\n  (sym :namespace)\n  (str \"rack:session\")) merge "," require ","(pair\n  (sym :namespace)\n  (str \"rack:session\")) merge  [] "]}," ActionDispatch Session CookieStore persistent_session_id!":{"type":"method","name":"persistent_session_id!","children":[],"call":[" generate_sid ","data [] ","(or-asgn\n  (lvasgn :data)\n  (hash)) merge! "," inject_persistent_session_id "," generate_sid public_id "]}," ActionDispatch Session CookieStore destroy":{"type":"method","name":"destroy","children":[],"call":[]}," ActionDispatch Session CookieStore set_session":{"type":"method","name":"set_session","children":[],"call":[" persistent_session_id! ","session_data merge ","session_data merge! ","session_data []= "]}," ActionDispatch Session CookieStore set_cookie":{"type":"method","name":"set_cookie","children":[],"call":["request cookie_jar signed []= ","request cookie_jar signed ","request cookie_jar ","ActionDispatch Request  new "," cookie_jar []= "," cookie_jar ","ActionDispatch Request  new  cookie_jar signed []= ","ActionDispatch Request  new  cookie_jar signed ","ActionDispatch Request  new  cookie_jar "]}," ActionDispatch Session CookieStore unpacked_cookie_data":{"type":"method","name":"unpacked_cookie_data","children":[],"call":["data stringify_keys! ","request cookie_jar signed [] ","request cookie_jar signed ","request cookie_jar ","ActionDispatch Request  new "," stale_session_check! ","env [] "," get_cookie ","req set_header ","req fetch_header ","request cookie_jar signed []  stringify_keys! "," get_cookie  stringify_keys! ","ActionDispatch Request  new  cookie_jar signed [] ","ActionDispatch Request  new  cookie_jar signed ","ActionDispatch Request  new  cookie_jar "]}," ActionDispatch Session CookieStore extract_session_id":{"type":"method","name":"extract_session_id","children":[],"call":["data [] "," unpacked_cookie_data "," unpacked_cookie_data [] "," stale_session_check! ","Rack Session SessionId  new "," unpacked_cookie_data  [] "," unpacked_cookie_ unpacked_cookie_data  "," unpacked_cookie_ unpacked_cookie_data  [] "]}," ActionDispatch Session CookieStore load_session":{"type":"method","name":"load_session","children":[],"call":["data [] "," persistent_session_id! "," unpacked_cookie_data ","data stringify_keys! "," unmarshal ","request cookies [] ","request cookies ","Rack Request  new ","request cookie_jar signed [] ","request cookie_jar signed ","request cookie_jar ","ActionDispatch Request  new "," stale_session_check! ","Rack Session SessionId  new "," persistent_session_id!  [] "," unpacked_cookie_data  [] ","request cookie_jar signed []  [] "," unpacked_cookie_ persistent_session_id!  "," unpacked_cookie_ unpacked_cookie_data  "," unpacked_cookie_request cookie_jar signed []  "," persistent_session_id!  stringify_keys! "," unpacked_cookie_data  stringify_keys! ","request cookie_jar signed []  stringify_keys! ","Rack Request  new  cookies [] ","ActionDispatch Request  new  cookies [] ","Rack Request  new  cookies ","ActionDispatch Request  new  cookies ","Rack Request  new  cookie_jar signed [] ","ActionDispatch Request  new  cookie_jar signed [] ","Rack Request  new  cookie_jar signed ","ActionDispatch Request  new  cookie_jar signed ","Rack Request  new  cookie_jar ","ActionDispatch Request  new  cookie_jar "]}," ActionDispatch Session CookieStore initialize":{"type":"method","name":"initialize","children":[],"call":[" freeze ","options merge! ","DEFAULT_OPTIONS  merge freeze ","DEFAULT_OPTIONS  merge "," verifier_for ","options delete ","options delete freeze "," ensure_secret_secure ","options [] "," ensure_session_key ","options []= ","options has_key? ","options symbolize_keys ","options key? ! ","options key? ","options symbolize_keys  merge! ","options symbolize_keys  delete ","options symbolize_keys  delete freeze ","options symbolize_keys  [] ","options symbolize_keys  []= ","options symbolize_keys  has_key? ","options symbolize_keys  symbolize_keys ","options symbolize_keys  key? ! ","options symbolize_keys  key? "]}," ActionDispatch Session AbstractStore destroy":{"type":"method","name":"destroy","children":[],"call":[" raise "]}," ActionDispatch Session AbstractStore set_session":{"type":"method","name":"set_session","children":[],"call":[" raise ","#set_session needs to be implemented and should return  << "]}," ActionDispatch Session AbstractStore get_session":{"type":"method","name":"get_session","children":[],"call":[" raise "]}," ActionDispatch Session AbstractStore exists?":{"type":"method","name":"exists?","children":[],"call":[" current_session_id present? "," current_session_id "]}," ActionDispatch Session AbstractStore stale_session_check!":{"type":"method","name":"stale_session_check!","children":[],"call":[" raise ","const_error class ","const_error message ","1 constantize ","argument_error message =~ ","argument_error message "]}," ActionDispatch Session AbstractStore ensure_session_key!":{"type":"method","name":"ensure_session_key!","children":[],"call":[" raise ","A key is required to write a  + + + ","A key is required to write a  + + ","A key is required to write a  + ","@key blank? "]}," ActionDispatch Session AbstractStore current_session_id":{"type":"method","name":"current_session_id","children":[],"call":["env [] [] ","env [] "]}," ActionDispatch Session AbstractStore extract_session_id":{"type":"method","name":"extract_session_id","children":[],"call":["request params [] ","request params ","request cookies [] ","request cookies ","ActionDispatch Request  new "," stale_session_check! ","ActionDispatch Request  new  params [] ","ActionDispatch Request  new  params ","ActionDispatch Request  new  cookies [] ","ActionDispatch Request  new  cookies "]}," ActionDispatch Session AbstractStore load_session":{"type":"method","name":"load_session","children":[],"call":[" get_session "," current_session_id "," stale_session_check! ","request params [] ","request params ","request cookies [] ","request cookies ","Rack Request  new "," generate_sid ","Rack Request  new  params [] ","Rack Request  new  params ","Rack Request  new  cookies [] ","Rack Request  new  cookies "," generate_ current_session_id  "," generate_request cookies []  "]}," ActionDispatch Session AbstractStore set_cookie":{"type":"method","name":"set_cookie","children":[],"call":["request cookie_jar []= ","request cookie_jar ","options [] nil? ! ","options [] nil? ","options [] ","request cookie_jar [] != ","request cookie_jar [] "," key ","ActionDispatch Request  new ","ActionDispatch Request  new  cookie_jar []= ","ActionDispatch Request  new  cookie_jar ","ActionDispatch Request  new  cookie_jar [] != ","ActionDispatch Request  new  cookie_jar [] "]}," ActionDispatch Session AbstractStore generate_sid":{"type":"method","name":"generate_sid","children":[],"call":["ActiveSupport SecureRandom  hex "]}," ActionDispatch Session AbstractStore prepare!":{"type":"method","name":"prepare!","children":[],"call":["env []= ","OptionsHash  new ","SessionHash  new ","@default_options dup "]}," ActionDispatch Session AbstractStore call":{"type":"method","name":"call","children":[],"call":[" set_cookie ","cookie merge! ","ActionDispatch Request  new ","cookie []= ","Time  now + ","options delete ","Time  now ","options [] nil? ","options [] "," set_session ","session_data to_hash "," generate_sid ","session_data send ","session_data loaded? ! ","session_data loaded? ","session_data is_a? ","session_data is_a? ! ","env [] ","@app call "," prepare! ","headers [] << ","headers [] ","headers []= ","headers [] blank? ","response [] ","cookie << ","expiry httpdate ","Rack Utils  escape + + ","Rack Utils  escape ","Rack Utils  escape + ","session_data send ! ","env []= ","@default_options dup ","SessionHash  new "," set_Rack Utils  escape + +  ","Rack Utils  escape + +  merge! ","Rack Utils  escape + +  []= ","env []  delete ","env []  [] nil? ","env []  [] "," set_SessionHash  new  ","session_data to_hash  to_hash ","env []  to_hash ","SessionHash  new _data to_hash ","session_data to_hash  send ","env []  send ","SessionHash  new _data send ","session_data to_hash  loaded? ! ","env []  loaded? ! ","SessionHash  new _data loaded? ! ","session_data to_hash  loaded? ","env []  loaded? ","SessionHash  new _data loaded? ","session_data to_hash  is_a? ","env []  is_a? ","SessionHash  new _data is_a? ","session_data to_hash  is_a? ! ","env []  is_a? ! ","SessionHash  new _data is_a? ! ","response []  [] << ","response []  [] ","response []  []= ","response []  [] blank? ","@app call  [] ","Rack Utils  escape + +  << ","Time  now +  httpdate ","session_data to_hash  send ! ","env []  send ! ","SessionHash  new _data send ! ","@default_env []  dup "]}," ActionDispatch Session AbstractStore initialize":{"type":"method","name":"initialize","children":[],"call":[" ensure_session_key! ","@default_options delete ","@default_options delete freeze ","DEFAULT_OPTIONS  merge ","@default_options [] ","options []= ","options delete ","options has_key? ","options symbolize_keys ","DEFAULT_OPTIONS  merge  delete ","@default_options symbolize_keys  delete ","DEFAULT_OPTIONS  merge  delete freeze ","@default_options symbolize_keys  delete freeze ","DEFAULT_OPTIONS  merge  [] ","@default_options symbolize_keys  [] ","options symbolize_keys  []= ","options symbolize_keys  delete ","options symbolize_keys  has_key? ","options symbolize_keys  symbolize_keys "]}," ActionDispatch Session AbstractStore SessionHash load!":{"type":"method","name":"load!","children":[],"call":[" replace ","session stringify_keys ","@env [] []= ","@env [] ","@by send ","(or-asgn\n  (send\n    (ivar :@env) :[]\n    (const nil :ENV_SESSION_OPTIONS_KEY))\n  (hash)) []= "," stale_session_check! "]}," ActionDispatch Session AbstractStore SessionHash load_for_write!":{"type":"method","name":"load_for_write!","children":[],"call":[" load! "," loaded? "]}," ActionDispatch Session AbstractStore SessionHash load_for_read!":{"type":"method","name":"load_for_read!","children":[],"call":[" load! "," exists? "," loaded? ! "," loaded? "]}," ActionDispatch Session AbstractStore SessionHash destroy":{"type":"method","name":"destroy","children":[],"call":["@env [] []= ","@env [] ","@by send "," clear "]}," ActionDispatch Session AbstractStore SessionHash loaded?":{"type":"method","name":"loaded?","children":[],"call":[]}," ActionDispatch Session AbstractStore SessionHash exists?":{"type":"method","name":"exists?","children":[],"call":["@by send "," instance_variable_defined? "]}," ActionDispatch Session AbstractStore SessionHash inspect":{"type":"method","name":"inspect","children":[],"call":[" load_for_read! "," load! "]}," ActionDispatch Session AbstractStore SessionHash delete":{"type":"method","name":"delete","children":[],"call":["key to_s "," load_for_write! "," load! "," clear ","ActiveSupport Deprecation  warn "," caller ","key nil? "]}," ActionDispatch Session AbstractStore SessionHash update":{"type":"method","name":"update","children":[],"call":["hash stringify_keys "," load_for_write! "," load! "," replace ","ActiveSupport Deprecation  warn "," caller ","hash nil? "]}," ActionDispatch Session AbstractStore SessionHash to_hash":{"type":"method","name":"to_hash","children":[],"call":["v nil? ","h delete_if "," replace "," load_for_read! "," replace  delete_if "]}," ActionDispatch Session AbstractStore SessionHash clear":{"type":"method","name":"clear","children":[],"call":[" load_for_write! "]}," ActionDispatch Session AbstractStore SessionHash []=":{"type":"method","name":"[]=","children":[],"call":["key to_s "," load_for_write! "," load! "]}," ActionDispatch Session AbstractStore SessionHash has_key?":{"type":"method","name":"has_key?","children":[],"call":["key to_s "," load_for_read! "]}," ActionDispatch Session AbstractStore SessionHash []":{"type":"method","name":"[]","children":[],"call":["key to_s "," load_for_read! "," load! "]}," ActionDispatch Session AbstractStore SessionHash initialize":{"type":"method","name":"initialize","children":[],"call":[]}," ActionDispatch Session AbstractStore OptionsHash load_session_id!":{"type":"method","name":"load_session_id!","children":[],"call":[" []= ","@by send "]}," ActionDispatch Session AbstractStore OptionsHash has_session_id?":{"type":"method","name":"has_session_id?","children":[],"call":[]}," ActionDispatch Session AbstractStore OptionsHash []":{"type":"method","name":"[]","children":[],"call":[" load_session_id! "," has_session_id? "," key? ","key == "]}," ActionDispatch Session AbstractStore OptionsHash initialize":{"type":"method","name":"initialize","children":[],"call":[" merge! "]}," ActionDispatch Rescue rescue_from":{"type":"method","name":"rescue_from","children":[],"call":["@rescuers []= ","exception to_s ","exception class name ","exception class ","exception is_a? ","exception class name  to_s ","exception class name  class name ","exception class name  class ","exception class name  is_a? "]}," ActionDispatch Rescue call":{"type":"method","name":"call","children":[],"call":[" raise ","rescuer call ","env []= ","@rescuers [] ","exception class name ","exception class ","@app call ","@rescuers []  call ","@@rescuers [] s [] "]}," ActionDispatch Rescue initialize":{"type":"method","name":"initialize","children":[],"call":[" instance_eval "," block_given? "," rescue_from ","rescuers each "]}," ActionDispatch RemoteIp call":{"type":"method","name":"call","children":[],"call":["@app call ","env []= ","RemoteIpGetter  new ","GetIp  new ","req env ","req remote_ip= "," proxies "," check_ip ","ActionDispatch Request  new ","ActionDispatch Request  new  env ","ActionDispatch Request  new  remote_ip= "]}," ActionDispatch RemoteIp initialize":{"type":"method","name":"initialize","children":[],"call":["Regexp  new ","regex << ","Regexp  union "," Array + "," Array ","custom_proxies respond_to? ","custom_proxies blank? ","ActiveSupport Deprecation  warn "," raise "]}," ActionDispatch RemoteIp RemoteIpGetter to_s":{"type":"method","name":"to_s","children":[],"call":["@env [] ","(send\n  (lvar :forwarded_ips) :reject) last ","ip =~ ","forwarded_ips reject "," raise ","@env [] inspect ","forwarded_ips include? ! ","forwarded_ips include? ","@env [] strip split ","@env [] strip "," remote_addrs first "," remote_addrs "," remote_addrs any? ","(send\n  (lvar :@env [] strip split ) :reject) last ","@env [] strip split  reject ","@env [] strip split  include? ! ","@env [] strip split  include? "]}," ActionDispatch RemoteIp RemoteIpGetter remote_addrs":{"type":"method","name":"remote_addrs","children":[],"call":["addr =~ ","list reject ","@env [] split ","@env [] ","@env [] split  reject "]}," ActionDispatch RemoteIp RemoteIpGetter initialize":{"type":"method","name":"initialize","children":[],"call":[]}," ActionDispatch ParamsParser logger":{"type":"method","name":"logger","children":[],"call":["Logger  new ","Rails  logger ","env [] ","ActiveSupport Logger  new "]}," ActionDispatch ParamsParser content_type_from_legacy_post_data_format_header":{"type":"method","name":"content_type_from_legacy_post_data_format_header","children":[],"call":["x_post_format to_s downcase ","x_post_format to_s ","env [] ","env []  to_s downcase ","env []  to_s "]}," ActionDispatch ParamsParser parse_formatted_parameters":{"type":"method","name":"parse_formatted_parameters","children":[],"call":["e backtrace ","e class ","e message ","request content_length ","request content_mime_type ","request raw_post "," raise "," logger debug "," logger ","data with_indifferent_access ","data is_a? ","request body rewind ","request body ","request body respond_to? ","ActiveSupport JSON  decode ","YAML  load ","Hash  from_xml ","request body read ","strategy call ","@parsers [] "," content_type_from_legacy_post_data_format_header ","request content_length zero? ","Request  new ","request content_type ","request body size == ","request body size ","Hash  from_xml with_indifferent_access ","request deep_munge ","request deep_munge with_indifferent_access ","ParseError  new ","Request Utils  deep_munge with_indifferent_access ","Request Utils  deep_munge ","Request  new  content_length ","Request  new  content_mime_type ","Request  new  raw_post ","ActiveSupport JSON  decode  with_indifferent_access ","request deep_munge  with_indifferent_access ","ActiveSupport JSON  decode  is_a? ","request deep_munge  is_a? ","Request  new  body rewind ","Request  new  body ","Request  new  body respond_to? ","Request  new  body read ","@parsers []  call "," content_type_from_legacy_post_ActiveSupport JSON  decode _format_header "," content_type_from_legacy_post_request deep_munge _format_header ","Request  new  content_length zero? ","Request  new  content_type ","Request  new  body size == ","Request  new  body size ","Request  new  deep_munge ","Request  new  deep_munge with_indifferent_access "]}," ActionDispatch ParamsParser call":{"type":"method","name":"call","children":[],"call":["@app call ","env []= "," parse_formatted_parameters "]}," ActionDispatch ParamsParser initialize":{"type":"method","name":"initialize","children":[],"call":["DEFAULT_PARSERS  merge "]}," ActionDispatch Head call":{"type":"method","name":"call","children":[],"call":["@app call ","env []= ","env [] == ","env [] "]}," ActionDispatch Head initialize":{"type":"method","name":"initialize","children":[],"call":[]}," ActionDispatch Flash call":{"type":"method","name":"call","children":[],"call":["session delete ","session [] empty? ","session [] ","session key? ","session []= ","flash_hash empty? ! ","flash_hash empty? ","env [] ","@app call ","flash sweep ","flash empty? ","new_hash close! ","env []= ","flash_hash dup ","session loaded? ","session respond_to? ! ","session respond_to? ","session [] nil? ","flash_hash to_session_value ","Request Session  find ","flash_hash present? ","env []  delete ","env []  [] empty? ","env []  [] ","env []  key? ","env []  []= ","env []  empty? ! ","session [] _hash empty? ! ","env []  empty? ","session [] _hash empty? ","session []  sweep ","session []  empty? ","flash_hash dup  close! ","env []  dup ","session [] _hash dup ","env []  loaded? ","env []  respond_to? ! ","env []  respond_to? ","env []  [] nil? ","env []  to_session_value ","session [] _hash to_session_value ","flash_hash to_env [] _value ","env []  present? ","session [] _hash present? "]}," ActionDispatch Flash initialize":{"type":"method","name":"initialize","children":[],"call":[]}," ActionDispatch Flash FlashHash use":{"type":"method","name":"use","children":[],"call":[" [] ","@used delete ","@used << "," Array each "," Array "," keys "]}," ActionDispatch Flash FlashHash notice=":{"type":"method","name":"notice=","children":[],"call":[" []= "]}," ActionDispatch Flash FlashHash notice":{"type":"method","name":"notice","children":[],"call":[" [] "]}," ActionDispatch Flash FlashHash alert=":{"type":"method","name":"alert=","children":[],"call":[" []= "]}," ActionDispatch Flash FlashHash alert":{"type":"method","name":"alert","children":[],"call":[" [] "]}," ActionDispatch Flash FlashHash sweep":{"type":"method","name":"sweep","children":[],"call":["@used delete ","(send\n  (ivar :@used) :-\n  (send nil :keys)) each ","@used - "," keys ","@used << "," delete ","@used include? "," keys each ","@discard replace ","@flashes keys ","@flashes delete ","@discard each "]}," ActionDispatch Flash FlashHash discard":{"type":"method","name":"discard","children":[],"call":[" use "," [] ","@discard merge "," Array "," keys ","k to_s "," k to_s eys ","k to_s  to_s "]}," ActionDispatch Flash FlashHash keep":{"type":"method","name":"keep","children":[],"call":[" use "," [] ","@discard subtract "," Array "," keys ","k to_s "," k to_s eys ","k to_s  to_s "]}," ActionDispatch Flash FlashHash now":{"type":"method","name":"now","children":[],"call":["FlashNow  new "]}," ActionDispatch Flash FlashHash replace":{"type":"method","name":"replace","children":[],"call":["Set  new ","@flashes replace ","@discard clear ","h stringify_keys "]}," ActionDispatch Flash FlashHash update":{"type":"method","name":"update","children":[],"call":[" keep ","h keys each ","h keys ","@flashes update ","@discard subtract ","h stringify_keys "," stringify_array "]}," ActionDispatch Flash FlashHash []=":{"type":"method","name":"[]=","children":[],"call":[" keep ","@flashes []= "," raise "," closed? ","@discard delete ","k to_s "," k to_s eep ","k to_s  to_s "]}," ActionDispatch Flash FlashHash initialize":{"type":"method","name":"initialize","children":[],"call":["Set  new ","flashes stringify_keys "," stringify_array "]}," ActionDispatch Flash FlashNow notice=":{"type":"method","name":"notice=","children":[],"call":[" []= "]}," ActionDispatch Flash FlashNow alert=":{"type":"method","name":"alert=","children":[],"call":[" []= "]}," ActionDispatch Flash FlashNow []":{"type":"method","name":"[]","children":[],"call":["@flash [] ","k to_s "]}," ActionDispatch Flash FlashNow []=":{"type":"method","name":"[]=","children":[],"call":["@flash discard ","@flash []= ","k to_s ","k to_s  to_s "]}," ActionDispatch Flash FlashNow initialize":{"type":"method","name":"initialize","children":[],"call":[]}," ActionDispatch Request flash":{"type":"method","name":"flash","children":[],"call":["Flash FlashHash  new "," session [] "," session ","@env [] ","(or\n  (send\n    (send nil :session) :[]\n    (str \"flash\"))\n  (send\n    (const\n      (const nil :Flash) :FlashHash) :new)) tap ","Flash FlashHash  from_session_value "]}," ActionDispatch Cookies call":{"type":"method","name":"call","children":[],"call":["headers []= ","headers [] join ","headers [] ","headers [] respond_to? ","cookie_jar write ","env [] ","@app call ","response to_a ","Rack Response  new ","cookie_jar close! ","ActionDispatch Request  new cookie_jar ","ActionDispatch Request  new ","cookie_jar committed? ","request cookie_jar ","request have_cookie_jar? ","Rack Response  [] ","env []  write ","ActionDispatch Request  new cookie_jar  write ","request cookie_jar  write ","Rack Response  new  to_a ","Rack Response  []  to_a ","@app call  to_a ","env []  close! ","ActionDispatch Request  new cookie_jar  close! ","request cookie_jar  close! ","ActionDispatch Request  new env []  ","ActionDispatch Request  new ActionDispatch Request  new cookie_jar  ","ActionDispatch Request  new request cookie_jar  ","env []  committed? ","ActionDispatch Request  new cookie_jar  committed? ","request cookie_jar  committed? ","request env []  ","request ActionDispatch Request  new cookie_jar  ","request request cookie_jar  ","ActionDispatch Request  new  cookie_jar ","request have_env [] ? ","request have_ActionDispatch Request  new cookie_jar ? ","request have_request cookie_jar ? ","ActionDispatch Request  new  have_cookie_jar? "]}," ActionDispatch Cookies initialize":{"type":"method","name":"initialize","children":[],"call":[]}," ActionDispatch Cookies SignedCookieJar ensure_secret_secure":{"type":"method","name":"ensure_secret_secure","children":[],"call":[" raise ","Secret should be something secure,  + + + ","Secret should be something secure,  + + ","Secret should be something secure,  + ","ActiveSupport SecureRandom  hex ","secret length < ","secret length ","A secret is required to generate an  + + + + ","A secret is required to generate an  + + + ","A secret is required to generate an  + + ","A secret is required to generate an  + ","secret blank? ","SecureRandom  hex "]}," ActionDispatch Cookies SignedCookieJar method_missing":{"type":"method","name":"method_missing","children":[],"call":["@parent_jar send ","ActiveSupport Deprecation  warn ","(begin\n  (lvar :method)) + "]}," ActionDispatch Cookies SignedCookieJar []=":{"type":"method","name":"[]=","children":[],"call":["@parent_jar []= "," raise ","options [] size > ","options [] size ","options [] ","@verifier generate ","options []= ","options symbolize_keys! ","options is_a? "," closed? "," serialize ","options [] bytesize > ","options [] bytesize "]}," ActionDispatch Cookies SignedCookieJar []":{"type":"method","name":"[]","children":[],"call":["@verifier verify ","@parent_jar [] "," verify "," deserialize "]}," ActionDispatch Cookies SignedCookieJar initialize":{"type":"method","name":"initialize","children":[],"call":["ActiveSupport MessageVerifier  new "," ensure_secret_secure ","ActionController Base  cookie_verifier_secret "," raise ","ActionController Base  config secret ","ActionController Base  config ","secret blank? ","key_generator generate_key ","@options [] "," digest "," key_generator generate_key "," request signed_cookie_salt "," request "," key_generator "," ensure_key_generator generate_key _secure "," ensure_ key_generator generate_key _secure ","ActionController Base  cookie_verifier_key_generator generate_key  ","ActionController Base  cookie_verifier_ key_generator generate_key  ","ActionController Base  config key_generator generate_key  ","ActionController Base  config  key_generator generate_key  ","key_generator generate_key  blank? "," key_generator generate_key  blank? "]}," ActionDispatch Cookies PermanentCookieJar method_missing":{"type":"method","name":"method_missing","children":[],"call":["@parent_jar send ","ActiveSupport Deprecation  warn ","(begin\n  (lvar :method)) + "]}," ActionDispatch Cookies PermanentCookieJar signed":{"type":"method","name":"signed","children":[],"call":["SignedCookieJar  new "]}," ActionDispatch Cookies PermanentCookieJar []=":{"type":"method","name":"[]=","children":[],"call":["@parent_jar []= ","options []= ","20 years from_now ","20 years ","options symbolize_keys! ","options is_a? "," raise "," closed? "]}," ActionDispatch Cookies PermanentCookieJar initialize":{"type":"method","name":"initialize","children":[],"call":[]}," ActionDispatch Cookies CookieJar write":{"type":"method","name":"write","children":[],"call":[" Rack Utils  delete_cookie_header! ","@delete_cookies each "," Rack Utils  set_cookie_header! ","@set_cookies each ","response delete_cookie ","response set_cookie "," write_cookie? ","headers []= "," make_set_cookie_header ","headers [] "," Rack Utils  delete_cookie_ make_set_cookie_header ! "," Rack Utils  set_cookie_ make_set_cookie_header ! "," make_set_cookie_header s []= "," make_set_cookie_ make_set_cookie_header  "," make_set_cookie_header s [] "]}," ActionDispatch Cookies CookieJar signed":{"type":"method","name":"signed","children":[],"call":["SignedCookieJar  new "]}," ActionDispatch Cookies CookieJar permanent":{"type":"method","name":"permanent","children":[],"call":["PermanentCookieJar  new "]}," ActionDispatch Cookies CookieJar delete":{"type":"method","name":"delete","children":[],"call":["@delete_cookies []= ","key to_s "," handle_options ","options symbolize_keys! ","options [] ","@cookies delete ","name to_s ","@cookies has_key? "]}," ActionDispatch Cookies CookieJar []=":{"type":"method","name":"[]=","children":[],"call":["@delete_cookies delete ","@set_cookies []= "," handle_options ","key to_s ","options [] ","options symbolize_keys! ","options is_a? ","@cookies []= "," raise "," closed? ","@cookies [] != ","@cookies [] ","name to_s "]}," ActionDispatch Cookies CookieJar handle_options":{"type":"method","name":"handle_options","children":[],"call":["options []= ","@host =~ ","options [] == ","options [] ","@host include? ","domain [] ","options [] find ","options [] is_a? ","@host !~ ","domain sub "," request host include? "," request host "," request "," request host =~ "," request host !~ ","options [] from_now ","options [] respond_to? "," request host end_with? "," request host == ","domain delete_prefix "," request host match? ! "," request host match? ","cookies_same_site_protection call "," request cookies_same_site_protection ","cookie_domain present? ","dot_splitted_host last join ","dot_splitted_host last ","(send\n  (regexp\n    (str \"([^.]{2,3}\\\\.[^.]{2})$\")\n    (regopt)) :match?\n  (send\n    (send nil :request) :host)) ! ","(str \"([^.]{2,3}\\\\.[^.]{2})$\") match? ","dot_splitted_host length >= ","dot_splitted_host length ","options [] present? ","dot_splitted_host length == ","dot_splitted_host include? "," request host split ","(send\n  (regexp\n    (str \"\\\\.[^.]{2,3}\\\\.[^.]{2}\\\\z\")\n    (regopt)) :match?\n  (send\n    (send nil :request) :host)) ! ","(str \"\\\\.[^.]{2,3}\\\\.[^.]{2}\\\\z\") match? ","options [] call ","options key? ","domain delete_prefix  [] ","domain delete_prefix  sub ","domain delete_prefix  delete_prefix "," request cookies_same_site_protection  call "," request  request cookies_same_site_protection  ","cookie_domain delete_prefix  present? ","dot_splitted_host last join  present? "," request host split  last join "," request host split  last "," request host split  length >= "," request host split  length "," request host split  length == "," request host split  include? "]}," ActionDispatch Cookies CookieJar []":{"type":"method","name":"[]","children":[],"call":["name to_s ","@cookies [] "]}," ActionDispatch Cookies CookieJar initialize":{"type":"method","name":"initialize","children":[],"call":[]}," ActionDispatch Cookies CookieJar build":{"type":"method","name":"build","children":[],"call":[]}," ActionDispatch Request cookie_jar":{"type":"method","name":"cookie_jar","children":[],"call":["Cookies CookieJar  build "," env [] "," env "," cookie_jar= "," cookies "," fetch_header ","action_dispatch.cookies freeze "]}," ActionDispatch Callbacks call":{"type":"method","name":"call","children":[],"call":["@app call "," _run_prepare_callbacks "," _run_call_callbacks "," run_callbacks "," raise "]}," ActionDispatch Callbacks initialize":{"type":"method","name":"initialize","children":[],"call":[" _run_prepare_callbacks "," run_callbacks ","ActiveSupport Deprecation  warn ","unused nil? "]}," ActionDispatch Callbacks after":{"type":"method","name":"after","children":[],"call":[" set_callback "]}," ActionDispatch Callbacks before":{"type":"method","name":"before","children":[],"call":[" set_callback "]}," ActionDispatch Callbacks to_prepare":{"type":"method","name":"to_prepare","children":[],"call":["ActiveSupport Reloader  to_prepare "]}," ActionDispatch BestStandardsSupport call":{"type":"method","name":"call","children":[],"call":["headers []= ","@app call ","headers [] << << ","@header to_s ","headers [] << ","headers [] ","headers [] [] "]}," ActionDispatch BestStandardsSupport initialize":{"type":"method","name":"initialize","children":[],"call":[]}," ActionDispatch Http URL named_host?":{"type":"method","name":"named_host?","children":[],"call":["(or\n  (send\n    (lvar :host) :nil?)\n  (send\n    (regexp\n      (str \"\\\\d{1,3}\\\\.\\\\d{1,3}\\\\.\\\\d{1,3}\\\\.\\\\d{1,3}$\")\n      (regopt)) :match\n    (lvar :host))) ! ","(str \"\\\\d{1,3}\\\\.\\\\d{1,3}\\\\.\\\\d{1,3}\\\\.\\\\d{1,3}$\") match ","host nil? ","IP_HOST_REGEXP  !~ ","IP_HOST_REGEXP  match? ! ","IP_HOST_REGEXP  match? "]}," ActionDispatch Http URL request_uri":{"type":"method","name":"request_uri","children":[],"call":[" fullpath ","ActiveSupport Deprecation  warn "," caller ","@env []= ","@env delete ","uri blank? ","env_qs empty? ","@env [] to_s ","@env [] ","uri sub ","@env [] to_s match ","uri sub  blank? ","@env [] to_s  blank? ","@env []  blank? ","@env [] to_s  empty? ","uri sub  sub ","@env [] to_s  sub ","@env []  sub "]}," ActionDispatch Http URL subdomain":{"type":"method","name":"subdomain","children":[],"call":[" subdomains join "," subdomains ","ActionDispatch Http URL  extract_subdomain "," host "]}," ActionDispatch Http URL subdomains":{"type":"method","name":"subdomains","children":[],"call":["parts [] ","(send\n  (lvar :tld_length) :+\n  (int 2)) -@ ","tld_length + "," host split "," host "," named_host? ","ActionDispatch Http URL  extract_subdomains "," host split  [] "]}," ActionDispatch Http URL domain":{"type":"method","name":"domain","children":[],"call":[" host split last join "," host split last ","1 + "," host split "," host "," named_host? ","ActionDispatch Http URL  extract_domain "]}," ActionDispatch Http URL server_port":{"type":"method","name":"server_port","children":[],"call":["@env [] to_i ","@env [] "," get_header to_i "," get_header "]}," ActionDispatch Http URL port_string":{"type":"method","name":"port_string","children":[],"call":[" port "," port == "," standard_port "," standard_port? "]}," ActionDispatch Http URL standard_port?":{"type":"method","name":"standard_port?","children":[],"call":[" port == "," standard_port "," port "]}," ActionDispatch Http URL standard_port":{"type":"method","name":"standard_port","children":[],"call":[" protocol ","https:// == "]}," ActionDispatch Http URL port":{"type":"method","name":"port","children":[],"call":[" standard_port ","1 to_i "," raw_host_with_port =~ "," raw_host_with_port "]}," ActionDispatch Http URL host_with_port":{"type":"method","name":"host_with_port","children":[],"call":[" port_string "," host "]}," ActionDispatch Http URL host":{"type":"method","name":"host","children":[],"call":[" raw_host_with_port sub "," raw_host_with_port "," freeze "]}," ActionDispatch Http URL raw_host_with_port":{"type":"method","name":"raw_host_with_port","children":[],"call":[" env [] "," env ","forwarded split last ","forwarded split "," env [] presence "," get_header "," server_addr "," server_name "," x_forwarded_host presence "," x_forwarded_host "," env []  split last "," env [] presence  split last "," x_forwarded_host presence  split last "," env []  split "," env [] presence  split "," x_forwarded_host presence  split "," x_ env [] _host presence "," x_ env [] presence _host presence "," x_ x_forwarded_host presence _host presence "," x_ env [] _host "," x_ env [] presence _host "," x_ x_forwarded_host presence _host "]}," ActionDispatch Http URL ssl?":{"type":"method","name":"ssl?","children":[],"call":["@env [] == ","@env [] "]}," ActionDispatch Http URL protocol":{"type":"method","name":"protocol","children":[],"call":[" ssl? "]}," ActionDispatch Http URL scheme":{"type":"method","name":"scheme","children":[],"call":[" ssl? "]}," ActionDispatch Http URL url":{"type":"method","name":"url","children":[],"call":[" protocol + + "," fullpath "," protocol + "," host_with_port "," protocol "," request_uri "]}," ActionDispatch Http Upload normalize_parameters":{"type":"method","name":"normalize_parameters","children":[],"call":["upload content_type= ","value [] ","upload original_path= ","upload extend ","value has_key? ","Hash  === ","UploadedFile  new ","value []  content_type= ","value []  original_path= ","value []  extend "]}," ActionDispatch Http UploadedFile original_filename":{"type":"method","name":"original_filename","children":[],"call":["File  basename "," original_path "," original_path =~ "," original_path blank? "]}," ActionDispatch Http UploadedFile extended":{"type":"method","name":"extended","children":[],"call":[]}," ActionDispatch Response assign_default_content_type_and_charset!":{"type":"method","name":"assign_default_content_type_and_charset!","children":[],"call":[" headers []= "," headers ","type << ","@content_type to_s dup ","@content_type to_s "," class default_charset "," class "," headers [] present? "," headers [] ","headers []= "," append_charset? ","@charset == ","headers [] present? ","headers [] "," set_content_type ","ct charset ","Mime  [] to_s ","Mime  [] ","ct mime_type "," parse_content_type "," content_type "," parsed_content_type_header "," media_type ","@content_type to_s dup  << ","@content_@content_type to_s dup  to_s dup ","@content_@content_type to_s dup  to_s "," set_content_@content_type to_s dup  "," parse_content_type  charset "," parsed_content_type_header  charset ","ct mime_@content_type to_s dup  "," parse_content_type  mime_type "," parsed_content_type_header  mime_type "," parse_content_@content_type to_s dup  "," content_@content_type to_s dup  "," parsed_content_@content_type to_s dup _header "," media_@content_type to_s dup  "]}," ActionDispatch Response cookies":{"type":"method","name":"cookies","children":[],"call":["cookies []= ","Rack Utils  unescape ","pair split map ","pair split ","cookie split first ","cookie split ","header each ","header split ","header respond_to? "," [] "," get_header ","cookie split first  split map ","cookie split first  split ","header split  each "," []  each "," get_header  each ","header split  split "," []  split "," get_header  split ","header split  respond_to? "," []  respond_to? "," get_header  respond_to? "," get_header split  "," get_ []  "," get_ get_header  "]}," ActionDispatch Response write":{"type":"method","name":"write","children":[],"call":["@writer call ","str to_s ","@stream write ","str to_s  to_s ","@str to_s eam write "]}," ActionDispatch Response each":{"type":"method","name":"each","children":[],"call":["@block call ","callback call ","part to_s ","@body each ","@body call "," lambda ","@body respond_to? "," sent! ","@stream each "," sending! "]}," ActionDispatch Response to_a":{"type":"method","name":"to_a","children":[],"call":[" []= "," [] join "," [] "," [] respond_to? "," handle_conditional_get! "," assign_default_content_type_and_charset! ","@cookie join ","@cookie blank? ","@header delete ","(int 204) include? ","@header []= ","@header [] join ","@header [] ","@header [] respond_to? "," rack_response ","@header to_hash "," commit! ","@headers to_hash "]}," ActionDispatch Response location=":{"type":"method","name":"location=","children":[],"call":[" headers []= "," headers "]}," ActionDispatch Response location":{"type":"method","name":"location","children":[],"call":[" headers [] "," headers "]}," ActionDispatch Response body_parts":{"type":"method","name":"body_parts","children":[],"call":["parts << ","@stream each "]}," ActionDispatch Response body=":{"type":"method","name":"body=","children":[],"call":["body respond_to? ","body == ","body respond_to? ! ","BodyBuster  new bust ","BodyBuster  new ","ActiveSupport Deprecation  warn "," caller "," build_buffer "," munge_body_object "," synchronize ","BodyBuster  new bust  respond_to? ","BodyBuster  new bust  == ","BodyBuster  new bust  respond_to? ! "," munge_BodyBuster  new bust _object "]}," ActionDispatch Response body":{"type":"method","name":"body","children":[],"call":["str << ","part to_s "," each ","strings join ","strings << ","@stream body "]}," ActionDispatch Response to_path":{"type":"method","name":"to_path","children":[],"call":["@body to_path "," stream to_path "," stream "]}," ActionDispatch Response respond_to?":{"type":"method","name":"respond_to?","children":[],"call":["@body respond_to? ","method to_sym == ","method to_sym "," stream respond_to? "," stream ","method to_s == ","method to_s "]}," ActionDispatch Response message":{"type":"method","name":"message","children":[],"call":["Rack Utils HTTP_STATUS_CODES  [] "]}," ActionDispatch Response code":{"type":"method","name":"code","children":[],"call":["@status to_s "]}," ActionDispatch Response response_code":{"type":"method","name":"response_code","children":[],"call":[]}," ActionDispatch Response status=":{"type":"method","name":"status=","children":[],"call":["Rack Utils  status_code "]}," ActionDispatch Response Setup initialize":{"type":"method","name":"initialize","children":[],"call":[" block_given? ","Mime Type  lookup ","content_type split "," [] "," body= ","@body << "," lambda "," status= "," header= "," []  split "]}," ActionDispatch Request local?":{"type":"method","name":"local?","children":[],"call":["local_ip === "," remote_ip "," remote_addr ","LOCALHOST  any? ","LOCALHOST  =~ ","LOCALHOST  match? "]}," ActionDispatch Request authorization":{"type":"method","name":"authorization","children":[],"call":["@env [] "," get_header "]}," ActionDispatch Request POST":{"type":"method","name":"POST","children":[],"call":[" normalize_parameters ","@env [] "," deep_munge "," raise ","ActionController BadRequest  new "," normalize_encode_params ","Utils  deep_munge ","e message "," request_parameters= ","Request Utils  normalize_encode_params "," parse_formatted_parameters "," params_parsers "," fetch_header ","Request Utils  check_param_encoding ","Request Utils  set_binary_encoding "," path_parameters [] "," path_parameters "]}," ActionDispatch Request GET":{"type":"method","name":"GET","children":[],"call":[" normalize_parameters ","@env [] "," deep_munge "," raise ","ActionController BadRequest  new "," normalize_encode_params ","Utils  deep_munge ","e message "," set_header ","Request Utils  normalize_encode_params ","Request Utils  check_param_encoding "," fetch_header ","Request Utils  set_binary_encoding "," path_parameters [] "," path_parameters "]}," ActionDispatch Request session_options=":{"type":"method","name":"session_options=","children":[],"call":["@env []= ","Session Options  set "]}," ActionDispatch Request session=":{"type":"method","name":"session=","children":[],"call":["@env []= ","Session  set "]}," ActionDispatch Request reset_session":{"type":"method","name":"reset_session","children":[],"call":["@env []= "," session= "," session destroy "," session "," session_options delete "," session_options "," session respond_to? "," flash= "," reset_csrf_token "]}," ActionDispatch Request body_stream":{"type":"method","name":"body_stream","children":[],"call":["@env [] "," get_header "]}," ActionDispatch Request form_data?":{"type":"method","name":"form_data?","children":[],"call":["FORM_DATA_MEDIA_TYPES  include? "," content_mime_type to_s "," content_mime_type "," content_type to_s "," content_type "," media_type "]}," ActionDispatch Request body":{"type":"method","name":"body","children":[],"call":["@env [] ","StringIO  new ","raw_post force_encoding ","raw_post respond_to? "," body_stream "," get_header ","raw_post dup force_encoding ","raw_post dup ","(send\n  (lvar :raw_post) :+@) force_encoding ","raw_post +@ ","@env []  force_encoding "," get_header  force_encoding ","raw_post dup force_encoding  force_encoding ","(send\n  (lvar :raw_post) :+@) force_encoding  force_encoding ","@env []  respond_to? "," get_header  respond_to? ","raw_post dup force_encoding  respond_to? ","(send\n  (lvar :raw_post) :+@) force_encoding  respond_to? ","@env []  dup force_encoding "," get_header  dup force_encoding ","raw_post dup force_encoding  dup force_encoding ","(send\n  (lvar :raw_post) :+@) force_encoding  dup force_encoding ","@env []  dup "," get_header  dup ","raw_post dup force_encoding  dup ","(send\n  (lvar :raw_post) :+@) force_encoding  dup ","(send\n  (lvar :@env [] ) :+@) force_encoding ","(send\n  (lvar : get_header ) :+@) force_encoding ","(send\n  (lvar :raw_post dup force_encoding ) :+@) force_encoding ","(send\n  (lvar :(send\n  (lvar :raw_post) :+@) force_encoding ) :+@) force_encoding ","@env []  +@ "," get_header  +@ ","raw_post dup force_encoding  +@ ","(send\n  (lvar :raw_post) :+@) force_encoding  +@ "]}," ActionDispatch Request raw_post":{"type":"method","name":"raw_post","children":[],"call":["@env [] "," body rewind "," body "," body respond_to? ","@env []= "," body read ","@env [] to_i ","@env include? ","raw_post_body rewind ","raw_post_body respond_to? ","raw_post_body read "," content_length "," get_header "," set_header "," has_header? "," body_stream rewind "," body_stream "," body_stream respond_to? "," read_body_stream "," body  rewind "," body  respond_to? "," body  read "]}," ActionDispatch Request server_software":{"type":"method","name":"server_software","children":[],"call":["1 downcase ","@env [] "," get_header "]}," ActionDispatch Request remote_ip":{"type":"method","name":"remote_ip","children":[],"call":["(or\n  (send\n    (ivar :@env) :[]\n    (str \"action_dispatch.remote_ip\"))\n  (send nil :ip)) to_s "," ip ","@env [] ","remote_ips last strip ","remote_ips last ","remote_ips pop ","ActionController Base  trusted_proxies =~ ","ActionController Base  trusted_proxies ","TRUSTED_PROXIES  =~ ","remote_ips size > ","remote_ips size "," raise ","ActionController ActionControllerError  new ","@env [] inspect ","remote_ips include? ! ","remote_ips include? ","ActionController Base  ip_spoofing_check ","@env include? ","@env [] split ","not_trusted_addrs first ","not_trusted_addrs empty? ","addr =~ ","remote_addr_list reject ","remote_addr_list blank? ","@env [] scan ","(or\n  (send nil :get_header\n    (str \"action_dispatch.remote_ip\"))\n  (send nil :ip)) to_s "," get_header "]}," ActionDispatch Request ip":{"type":"method","name":"ip","children":[],"call":[]}," ActionDispatch Request xml_http_request?":{"type":"method","name":"xml_http_request?","children":[],"call":["(send\n  (send\n    (ivar :@env) :[]\n    (str \"HTTP_X_REQUESTED_WITH\")) :!~\n  (regexp\n    (str \"XMLHttpRequest\")\n    (regopt :i))) ! ","@env [] !~ ","@env [] ","@env [] =~ "," get_header =~ "," get_header ","(str \"XMLHttpRequest\") match? "," get_ get_header  =~ "," get_ get_header  "]}," ActionDispatch Request content_length":{"type":"method","name":"content_length","children":[],"call":[" to_i "," raw_post bytesize "," raw_post "," headers key? "," headers "]}," ActionDispatch Request media_type":{"type":"method","name":"media_type","children":[],"call":[" content_mime_type to_s "," content_mime_type "," content_type to_s "," content_type "]}," ActionDispatch Request forgery_whitelisted?":{"type":"method","name":"forgery_whitelisted?","children":[],"call":[" content_mime_type verify_request? ! "," content_mime_type verify_request? "," content_mime_type "," content_mime_type nil? "," xhr? "," get? "," content_type verify_request? ! "," content_type verify_request? "," content_type "," content_type nil? "," method == "," method "]}," ActionDispatch Request fullpath":{"type":"method","name":"fullpath","children":[],"call":[]}," ActionDispatch Request headers":{"type":"method","name":"headers","children":[],"call":["Http Headers  new "]}," ActionDispatch Request head?":{"type":"method","name":"head?","children":[],"call":["HTTP_METHOD_LOOKUP  [] == ","HTTP_METHOD_LOOKUP  [] "," method "," request_method == "," request_method "]}," ActionDispatch Request delete?":{"type":"method","name":"delete?","children":[],"call":["HTTP_METHOD_LOOKUP  [] == ","HTTP_METHOD_LOOKUP  [] "," request_method "," method == "," method "]}," ActionDispatch Request put?":{"type":"method","name":"put?","children":[],"call":["HTTP_METHOD_LOOKUP  [] == ","HTTP_METHOD_LOOKUP  [] "," request_method "," method == "," method "]}," ActionDispatch Request post?":{"type":"method","name":"post?","children":[],"call":["HTTP_METHOD_LOOKUP  [] == ","HTTP_METHOD_LOOKUP  [] "," request_method "," method == "," method "]}," ActionDispatch Request get?":{"type":"method","name":"get?","children":[],"call":["HTTP_METHOD_LOOKUP  [] == ","HTTP_METHOD_LOOKUP  [] "," request_method "," method == "," method "]}," ActionDispatch Request method_symbol":{"type":"method","name":"method_symbol","children":[],"call":["HTTP_METHOD_LOOKUP  [] "," method "]}," ActionDispatch Request method":{"type":"method","name":"method","children":[],"call":[" raise ","HTTP_METHODS  to_sentence ","HTTP_METHOD_LOOKUP  [] "," env [] "," env "," check_method "," get_header ","args empty? "," check_ env []  "]}," ActionDispatch Request request_method_symbol":{"type":"method","name":"request_method_symbol","children":[],"call":["HTTP_METHOD_LOOKUP  [] "," request_method "]}," ActionDispatch Request request_method":{"type":"method","name":"request_method","children":[],"call":[" raise ","HTTP_METHODS  to_sentence ","HTTP_METHOD_LOOKUP  [] "," env [] "," env "," check_method "," check_ env []  "]}," ActionDispatch Request key?":{"type":"method","name":"key?","children":[],"call":["@env key? "," has_header? "]}," ActionDispatch Request new":{"type":"method","name":"new","children":[],"call":[]}," ActionDispatch Http Parameters normalize_parameters":{"type":"method","name":"normalize_parameters","children":[],"call":[" normalize_parameters ","value map ","h with_indifferent_access ","h []= ","value each "]}," ActionDispatch Http Parameters encode_params":{"type":"method","name":"encode_params","children":[],"call":[" encode_params ","v map! ","params each ","params is_a? ! ","params is_a? ","params force_encoding encode! ","params force_encoding ","ruby encoding_aware? "]}," ActionDispatch Http Parameters path_parameters":{"type":"method","name":"path_parameters","children":[],"call":["@env [] "," set_header "," get_header "]}," ActionDispatch Http Parameters symbolized_path_parameters":{"type":"method","name":"symbolized_path_parameters","children":[],"call":[" path_parameters symbolize_keys "," path_parameters ","@env [] ","ActiveSupport Deprecation  warn "]}," ActionDispatch Http Parameters path_parameters=":{"type":"method","name":"path_parameters=","children":[],"call":["@env []= ","@env delete "," set_header "," delete_header "," raise ","ActionController BadRequest  new ","e message ","Request Utils  check_param_encoding "," set_binary_encoding ","parameters [] ","Request Utils  set_binary_encoding "," set_binary_encoding  [] ","Request Utils  set_binary_encoding  [] "]}," ActionDispatch Http Parameters parameters":{"type":"method","name":"parameters","children":[],"call":[" encode_params with_indifferent_access "," encode_params ","params merge! "," path_parameters "," request_parameters merge "," query_parameters "," request_parameters ","@env [] "," request_parameters merge update with_indifferent_access "," request_parameters merge update ","params with_indifferent_access "," query_parameters dup "," set_header "," get_header "," set_binary_encoding ","params [] "," encode_ request_parameters merge  with_indifferent_access "," encode_ get_header  with_indifferent_access "," encode_ set_binary_encoding  with_indifferent_access "," encode_ request_parameters merge  "," encode_ get_header  "," encode_ set_binary_encoding  "," request_parameters merge  merge! "," get_header  merge! "," set_binary_encoding  merge! "," request_parameters merge  with_indifferent_access "," get_header  with_indifferent_access "," set_binary_encoding  with_indifferent_access "," request_parameters merge  [] "," get_header  [] "," set_binary_encoding  [] "]}," ActionDispatch Http ParameterFilter compile_filter":{"type":"method","name":"compile_filter","children":[],"call":["regexps << ","Regexp  new ","strings join ","strings empty? ","strings << ","item to_s ","blocks << ","@filters each "]}," ActionDispatch Http ParameterFilter compiled_filter":{"type":"method","name":"compiled_filter","children":[],"call":["filtered_params []= ","b call ","blocks each ","value dup ","value duplicable? ","key dup ","blocks present? "," filter ","v is_a? ","value map ","value is_a? ","key =~ ","regexps find ","original_params each "," lambda "," compile_filter ","CompiledFilter  compile ","value dup  dup "," filter  dup ","value dup  duplicable? "," filter  duplicable? ","key dup  dup ","value dup  map "," filter  map ","value dup  is_a? "," filter  is_a? ","key dup  =~ "]}," ActionDispatch Http ParameterFilter enabled?":{"type":"method","name":"enabled?","children":[],"call":["@filters present? "]}," ActionDispatch Http ParameterFilter filter":{"type":"method","name":"filter","children":[],"call":["params dup "," compiled_filter call "," compiled_filter "," enabled? "]}," ActionDispatch Http ParameterFilter initialize":{"type":"method","name":"initialize","children":[],"call":[]}," Mime []":{"type":"method","name":"[]","children":[],"call":["NullType  new ","Type  lookup_by_extension ","type is_a? ","NullType  instance "]}," Mime Mimes symbols":{"type":"method","name":"symbols","children":[],"call":["m to_sym "," map "]}," ActionDispatch Http MimeNegotiation negotiate_mime":{"type":"method","name":"negotiate_mime","children":[],"call":[" formats first "," formats ","order include? ","order first ","priority == "," formats each "," format "]}," ActionDispatch Http MimeNegotiation format=":{"type":"method","name":"format=","children":[],"call":["@env []= ","Mime Type  lookup_by_extension "," parameters [] "," parameters "," parameters []= ","extension to_s "," set_header "]}," ActionDispatch Http MimeNegotiation formats":{"type":"method","name":"formats","children":[],"call":[" accepts ","accept !~ "," xhr? "," Array ","Mime  [] "," parameters [] "," parameters ","@env [] ","accept include? ! ","accept include? "," valid_accept_header "," use_accept_header ","format ref == ","format ref ","format symbol ","v select "," set_header "," format_from_path_extension "," fetch_header "," params_readable? ","v select! "," accepts dup "," @env [] s ","@env []  !~ ","@en Array  [] ","@env []  include? ! ","@env []  include? "," valid_@env [] _header ","  Array alid_accept_header "," use_@env [] _header "," format_from_path_extension  ref == "," format_from_path_extension  ref "," format_from_path_extension  symbol "," Array  select ","  format_from_path_extension _from_path_extension "," Array  select! "," @env [] s dup "]}," ActionDispatch Http MimeNegotiation format":{"type":"method","name":"format","children":[],"call":[" formats first "," formats ","Mime NullType  instance "]}," ActionDispatch Http MimeNegotiation accepts":{"type":"method","name":"accepts","children":[],"call":["Mime Type  parse "," content_mime_type ","header empty? ","@env [] to_s strip ","@env [] to_s ","@env [] "," content_type "," set_header "," get_header to_s strip "," get_header to_s "," get_header "," fetch_header "," raise ","e message ","@env [] to_s strip  empty? "," get_header to_s strip  empty? ","@enMime Type  parse  [] to_s strip ","@enMime Type  parse  [] to_s ","@enMime Type  parse  [] "," set_@env [] to_s strip  "," set_ get_header to_s strip  "," get_@env [] to_s strip  to_s strip "," get_ get_header to_s strip  to_s strip "," get_@env [] to_s strip  to_s "," get_ get_header to_s strip  to_s "," get_@env [] to_s strip  "," get_ get_header to_s strip  "," fetch_@env [] to_s strip  "," fetch_ get_header to_s strip  "]}," ActionDispatch Http MimeNegotiation content_type":{"type":"method","name":"content_type","children":[],"call":[" content_mime_type to_s "," content_mime_type ","Mime Type  lookup ","1 strip downcase ","1 strip ","@env [] =~ ","@env [] ","ActiveSupport Deprecation  warn "," class return_only_media_type_on_content_type "," class "]}," ActionDispatch Http MimeNegotiation content_mime_type":{"type":"method","name":"content_mime_type","children":[],"call":["Mime Type  lookup ","1 strip downcase ","1 strip ","@env [] =~ ","@env [] "," set_header "," get_header =~ "," get_header "," fetch_header "," raise ","e message ","@enMime Type  lookup  [] =~ ","@enMime Type  lookup  [] "]}," ActionDispatch Http Headers env_name":{"type":"method","name":"env_name","children":[],"call":["header_name upcase gsub ","header_name upcase ","@@env_cache [] ","HTTP_ + ","CGI_VARIABLES  include? ","key upcase tr ","key upcase ","key =~ ","key to_s "," cgi_name ","@headers include? ","HTTP_HEADER  match? ","key prepend ","key tr! ","HTTP_ +  upcase tr ","key upcase tr  upcase tr ","key to_s  upcase tr ","key upcase  upcase tr ","HTTP_ +  upcase ","key upcase tr  upcase ","key to_s  upcase ","key upcase  upcase ","HTTP_ +  =~ ","key upcase tr  =~ ","key to_s  =~ ","key upcase  =~ ","HTTP_ +  to_s ","key upcase tr  to_s ","key to_s  to_s ","key upcase  to_s ","HTTP_ +  prepend ","key upcase tr  prepend ","key to_s  prepend ","key upcase  prepend ","HTTP_ +  tr! ","key upcase tr  tr! ","key to_s  tr! ","key upcase  tr! "]}," ActionDispatch Http Headers []":{"type":"method","name":"[]","children":[],"call":[" env_name "," include? ","@env [] ","@headers [] ","@req get_header "]}," ActionDispatch Http Headers initialize":{"type":"method","name":"initialize","children":[],"call":[" update ","args [] ","args [] is_a? ","args size == ","args size "]}," ActionDispatch Http FilterParameters parameter_filter_for":{"type":"method","name":"parameter_filter_for","children":[],"call":["ParameterFilter  new ","@@parameter_filter_for [] ","ActiveSupport ParameterFilter  new "]}," ActionDispatch Http FilterParameters env_filter":{"type":"method","name":"env_filter","children":[],"call":[" parameter_filter_for ","Array  wrap << ","Array  wrap ","@env [] "," Array + "," Array ","@env fetch "," fetch_header "]}," ActionDispatch Http FilterParameters parameter_filter":{"type":"method","name":"parameter_filter","children":[],"call":[" parameter_filter_for ","@env [] ","@env fetch "," fetch_header "," get_header "," has_header? "]}," ActionDispatch Http FilterParameters filtered_env":{"type":"method","name":"filtered_env","children":[],"call":[" env_filter filter "," env_filter ","filtered_env []= "," process_parameter_filter ","value is_a? ","key =~ ","filtered_env each ","@env dup ","@env dup  []= ","@env dup  each "]}," ActionDispatch Http FilterParameters filtered_parameters":{"type":"method","name":"filtered_parameters","children":[],"call":[" parameter_filter filter "," parameters "," parameter_filter "," process_parameter_filter "," parameters dup "," filtering_parameters? "]}," ActionDispatch Http Cache Response set_conditional_cache_control!":{"type":"method","name":"set_conditional_cache_control!","children":[],"call":[" headers []= ","options join "," headers ","options concat ","options << ","control [] ","max_age to_i ","@cache_control [] ","control empty? "," [] present? "," [] ","control [] join "," headers [] ","control merge! ","@cache_control [] uniq! ","cc_headers delete "," cache_control_headers "," _cache_control= "," _cache_control + "," _cache_control ","cache_control [] uniq! ","cache_control [] ","control []  to_i "," cache_control_headers  delete "]}," ActionDispatch Http Cache Response string_body?":{"type":"method","name":"string_body?","children":[],"call":["part is_a? ","@body all? ","@body respond_to? ","@blank ! "]}," ActionDispatch Http Cache Response nonempty_ok_response?":{"type":"method","name":"nonempty_ok_response?","children":[],"call":[" string_body? ","@status == "]}," ActionDispatch Http Cache Response handle_conditional_get!":{"type":"method","name":"handle_conditional_get!","children":[],"call":[" headers []= "," headers "," set_conditional_cache_control! "," body= "," status= "," request etag_matches? "," etag "," request "," etag= "," body "," nonempty_ok_response? ","@cache_control empty? ! ","@cache_control empty? "," last_modified? "," etag? "," _cache_control= "," _cache_control ! "," _cache_control "]}," ActionDispatch Http Cache Response etag=":{"type":"method","name":"etag=","children":[],"call":[" []= ","Digest MD5  hexdigest ","ActiveSupport Cache  expand_cache_key "," weak_etag= ","ActiveSupport Cache  expand_cache_ActiveSupport Cache  expand_cache_key  "]}," ActionDispatch Http Cache Response etag?":{"type":"method","name":"etag?","children":[],"call":[" etag "]}," ActionDispatch Http Cache Response etag":{"type":"method","name":"etag","children":[],"call":[]}," ActionDispatch Http Cache Response last_modified=":{"type":"method","name":"last_modified=","children":[],"call":[" headers []= ","utc_time httpdate "," headers "," set_header "]}," ActionDispatch Http Cache Response last_modified?":{"type":"method","name":"last_modified?","children":[],"call":[" headers include? "," headers "," has_header? "]}," ActionDispatch Http Cache Response last_modified":{"type":"method","name":"last_modified","children":[],"call":["Time  httpdate "," headers [] "," headers "," get_header "]}," ActionDispatch Http Cache Response initialize":{"type":"method","name":"initialize","children":[],"call":["@cache_control []= ","first to_sym ","segment split ","cache_control split each ","cache_control split "," [] ","@ []  []= "," []  split each "," []  split "]}," ActionDispatch Http Cache Request fresh?":{"type":"method","name":"fresh?","children":[],"call":[" etag_matches? ","response etag "," not_modified? ","response last_modified "," if_none_match "," if_modified_since ","  if_none_match _matches? ","response  if_none_match  ","response  if_modified_since  "]}," ActionDispatch Http Cache Request etag_matches?":{"type":"method","name":"etag_matches?","children":[],"call":[" if_none_match == "," if_none_match "," if_none_match_etags include? "," if_none_match_etags ","etag gsub ","validators include? "," if_none_match_etag gsub s include? "," if_none_match_etag gsub s ","etag gsub  gsub "," if_none_match_etags  include? "]}," ActionDispatch Http Cache Request not_modified?":{"type":"method","name":"not_modified?","children":[],"call":[" if_modified_since >= "," if_modified_since "]}," ActionDispatch Http Cache Request if_none_match":{"type":"method","name":"if_none_match","children":[],"call":[" env [] "," env "," get_header "]}," ActionDispatch Http Cache Request if_modified_since":{"type":"method","name":"if_modified_since","children":[],"call":["Time  rfc2822 "," env [] "," env "," get_header "]}," ActionController TestCase Behavior build_request_uri":{"type":"method","name":"build_request_uri","children":[],"call":["@request env []= ","@request env ","@controller config relative_url_root ","@controller config ","@routes url_for split ","@routes url_for ","options update ","@request symbolized_path_parameters ","@controller __send__ merge ","@controller __send__ ","@request env [] ","@controller respond_to? ","@routes path_for split ","@routes path_for ","ActiveSupport Deprecation  warn ","(str \"              Passing the `use_route` option in functional tests are deprecated.\\n\") squish ","options delete ","@request path_parameters ","@controller __send__ merge  update ","@controller __send__ merge  delete "]}," ActionController TestCase Behavior rescue_action_in_public!":{"type":"method","name":"rescue_action_in_public!","children":[],"call":["@request remote_addr= "]}," ActionController TestCase Behavior setup_controller_request_and_response":{"type":"method","name":"setup_controller_request_and_response","children":[],"call":["@controller params= ","@controller request= ","@request env delete ","@request env ","klass new "," class controller_class "," class ","TestResponse  new ","TestRequest  new "," warn ","@response request= "," build_response "," build_request ","klass < ","TestRequest  create ","@controller class ","klass new  params= ","klass new  request= ","TestRequest  new  env delete "," build_request  env delete ","TestRequest  create  env delete ","TestRequest  new  env "," build_request  env ","TestRequest  create  env "," class controller_class  new ","TestResponse  new  request= "," build_response  request= "," class controller_class  < ","klass new  class "]}," ActionController TestCase Behavior process":{"type":"method","name":"process","children":[],"call":["@request session delete ","@request session ","@request session [] blank? ","@request session [] ","@controller process_with_new_base_test "," include ","Base  class_eval "," build_request_uri ","@controller params merge! ","@controller params ","@controller request= ","@request session [] sweep ","@request session []= ","@request flash update ","@request flash ","@request session= ","ActionController TestSession  new ","session nil? ","@request assign_parameters ","action to_s ","@controller class name underscore sub ","@controller class name underscore ","@controller class name ","@controller class ","@request env []= ","@request env ","@controller params= ","@controller formats= ","@controller response_body= ","@response recycle! ","@request recycle! "," raise "," instance_variable_get nil? "," instance_variable_get ","(or\n  (send\n    (send nil :instance_variable_names) :include?\n    (lvar :iv_name))\n  (send\n    (send nil :instance_variable_names) :include?\n    (send\n      (lvar :iv_name) :to_sym))) ! "," instance_variable_names include? ","iv_name to_sym "," instance_variable_names ","(str \"@routes\") each ","@request cookies merge! ","@response cookies ","@request cookies ","@controller view_assigns ","@controller respond_to? ","@controller recycle! ","@controller class class_eval ","@controller class anonymous? "," paramify_values "," html_format? ","@controller class controller_path ","@request flash to_session_value ","@response prepare! ","cookies write ","@request env [] ","@controller process ","@request parameters [] ","@request parameters ","@controller response= ","@request session update ","@controller extend ","args shift ","http_method != ","args first is_a? ","args first "," handle_old_process_api "," caller "," check_required_ivars ","@response committed? ","@response sent! ","@request query_string= ","@request delete_header "," cookies update ","@request cookie_jar instance_variable_get ","@request cookie_jar "," cookies ","@request cookie_jar write ","@request cookie_jar committed? ","@request have_cookie_jar? ","@controller response ","@controller request ","@controller dispatch ","@request set_header ","@controller config relative_url_root ","@controller config ","@request fetch_header ","(send\n  (const nil :Mime) :[]\n  (sym :js)) join ","Mime  [] "," controller_class_name "," query_parameter_names "," generated_path ","@routes generate_extras ","parameters merge ","parameters symbolize_keys ","@response request= "," build_response ","TestRequest  new "," scrub_env! "," cookies to_header "," cookies update_cookies_from_jar ","parameters []= ","http_method to_s upcase ","http_method to_s "," non_kwarg_request_warning ","parameters is_a? ","args [] values_at ","args [] "," kwarg_request? ","format present? ","http_method present? ","body present? ","flash present? ","session present? ","parameters present? ","@request content_type= ","Mime  [] to_s ","@request env delete ","params symbolize_keys ","method to_s upcase ","method to_s ","(or\n  (lvar :params)\n  (hash)) symbolize_keys ","action to_s dup ","action to_s +@ "," process_controller_response "," setup_request ","@controller clear_instance_variables_between_requests ","@controller request  session delete ","TestRequest  new  session delete ","@controller request  session ","TestRequest  new  session ","@controller request  session [] blank? ","TestRequest  new  session [] blank? ","@controller request  session [] ","TestRequest  new  session [] ","@controller request  session [] sweep ","TestRequest  new  session [] sweep ","@controller request  session []= ","TestRequest  new  session []= ","@controller request  flash update ","TestRequest  new  flash update ","@controller request  flash ","TestRequest  new  flash ","@controller request  session= ","TestRequest  new  session= ","@request assign_ paramify_values  ","@request assign_parameters symbolize_keys  ","@request assign_params symbolize_keys  ","@request assign_(or\n  (lvar :params)\n  (hash)) symbolize_keys  ","@controller request  assign_parameters ","TestRequest  new  assign_parameters ","action to_s dup  to_s ","action to_s +@  to_s ","@controller class @request parameters []  underscore sub ","@controller class @request parameters []  underscore ","@controller class @request parameters []  ","@controller request  env []= ","TestRequest  new  env []= ","@controller request  env ","TestRequest  new  env ","@controller response  recycle! "," build_response  recycle! ","@controller request  recycle! ","TestRequest  new  recycle! ","(or\n  (send\n    (send nil :instance_variable_@request parameters [] s) :include?\n    (lvar :iv_@request parameters [] ))\n  (send\n    (send nil :instance_variable_@request parameters [] s) :include?\n    (send\n      (lvar :iv_@request parameters [] ) :to_sym))) ! "," instance_variable_@request parameters [] s include? ","iv_@request parameters []  to_sym "," instance_variable_@request parameters [] s ","@request @request env []  merge! ","@controller request  cookies merge! ","TestRequest  new  cookies merge! ","@response @request env []  ","@controller response  cookies "," build_response  cookies ","@request @request env []  ","@controller request  cookies ","TestRequest  new  cookies ","@controller request  flash to_session_value ","TestRequest  new  flash to_session_value ","@controller response  prepare! "," build_response  prepare! ","@request env []  write ","@controller request  env [] ","TestRequest  new  env [] ","@request  paramify_values  [] ","@request parameters symbolize_keys  [] ","@request params symbolize_keys  [] ","@request (or\n  (lvar :params)\n  (hash)) symbolize_keys  [] ","@controller request  parameters [] ","TestRequest  new  parameters [] ","@request  paramify_values  ","@request parameters symbolize_keys  ","@request params symbolize_keys  ","@request (or\n  (lvar :params)\n  (hash)) symbolize_keys  ","@controller request  parameters ","TestRequest  new  parameters ","@controller request  session update ","TestRequest  new  session update ","http_method to_s upcase  != ","method to_s upcase  != ","@controller response  committed? "," build_response  committed? ","@controller response  sent! "," build_response  sent! ","@controller request  query_string= ","TestRequest  new  query_string= ","@controller request  delete_header ","TestRequest  new  delete_header "," @request env []  update ","@controller request  cookie_jar instance_variable_get ","TestRequest  new  cookie_jar instance_variable_get ","@controller request  cookie_jar ","TestRequest  new  cookie_jar "," @request env []  ","@controller request  cookie_jar write ","TestRequest  new  cookie_jar write ","@controller request  cookie_jar committed? ","TestRequest  new  cookie_jar committed? ","@controller request  have_cookie_jar? ","TestRequest  new  have_cookie_jar? ","@controller request  set_header ","TestRequest  new  set_header ","@controller request  fetch_header ","TestRequest  new  fetch_header "," @controller class name underscore sub  "," @controller class controller_path  "," controller_class_@request parameters []  "," query_parameter_@request parameters [] s ","  generated_path  "," paramify_values  merge ","parameters symbolize_keys  merge ","params symbolize_keys  merge ","(or\n  (lvar :params)\n  (hash)) symbolize_keys  merge "," paramify_values  symbolize_keys ","parameters symbolize_keys  symbolize_keys ","params symbolize_keys  symbolize_keys ","(or\n  (lvar :params)\n  (hash)) symbolize_keys  symbolize_keys ","@controller response  request= "," build_response  request= "," @request env []  to_header "," @request env []  update_@request env [] _from_jar "," paramify_values  []= ","parameters symbolize_keys  []= ","params symbolize_keys  []= ","(or\n  (lvar :params)\n  (hash)) symbolize_keys  []= ","http_method to_s upcase  to_s upcase ","method to_s upcase  to_s upcase ","http_method to_s upcase  to_s ","method to_s upcase  to_s "," paramify_values  is_a? ","parameters symbolize_keys  is_a? ","params symbolize_keys  is_a? ","(or\n  (lvar :params)\n  (hash)) symbolize_keys  is_a? ","http_method to_s upcase  present? ","method to_s upcase  present? "," paramify_values  present? ","parameters symbolize_keys  present? ","params symbolize_keys  present? ","(or\n  (lvar :params)\n  (hash)) symbolize_keys  present? ","@controller request  content_type= ","TestRequest  new  content_type= ","@controller request  env delete ","TestRequest  new  env delete ","action to_s dup  to_s dup ","action to_s +@  to_s dup ","action to_s dup  to_s +@ ","action to_s +@  to_s +@ "]}," ActionController TestCase Behavior xml_http_request":{"type":"method","name":"xml_http_request","children":[],"call":["@request env delete ","@request env "," __send__ tap "," __send__ ","(const\n  (const nil :Mime) :JS) join ","@request env [] ","@request env []= "," returning ","(send\n  (const nil :Mime) :[]\n  (sym :js)) join ","Mime  [] ","ActiveSupport Deprecation  warn ","(str \"          xhr and xml_http_request methods are deprecated in favor of\\n\") strip_heredoc ","(str \"          `xhr` and `xml_http_request` are deprecated and will be removed in Rails 5.1.\\n\") strip_heredoc "]}," ActionController TestCase Behavior head":{"type":"method","name":"head","children":[],"call":[" process "," process_with_kwargs "]}," ActionController TestCase Behavior delete":{"type":"method","name":"delete","children":[],"call":[" process "," process_with_kwargs "]}," ActionController TestCase Behavior put":{"type":"method","name":"put","children":[],"call":[" process "," process_with_kwargs "]}," ActionController TestCase Behavior post":{"type":"method","name":"post","children":[],"call":[" process "," process_with_kwargs "]}," ActionController TestCase Behavior get":{"type":"method","name":"get","children":[],"call":[" process "," cookies update ","res cookies "," cookies "," process_with_kwargs "," process_with_kwargs  cookies "," process  cookies "]}," ActionController TestCase Behavior ClassMethods prepare_controller_class":{"type":"method","name":"prepare_controller_class","children":[],"call":["new_class send "]}," ActionController TestCase Behavior ClassMethods determine_default_controller_class":{"type":"method","name":"determine_default_controller_class","children":[],"call":["name sub constantize ","name sub ","name sub safe_constantize ","constant < ","Class  === "," determine_constant_from_test_name "]}," ActionController TestCase Behavior ClassMethods controller_class":{"type":"method","name":"controller_class","children":[],"call":[" controller_class= "," determine_default_controller_class "," name "," read_inheritable_attribute "," _controller_class "]}," ActionController TestCase Behavior ClassMethods controller_class=":{"type":"method","name":"controller_class=","children":[],"call":[" write_inheritable_attribute "," prepare_controller_class "," _controller_class= "]}," ActionController TestCase Behavior ClassMethods tests":{"type":"method","name":"tests","children":[],"call":[" controller_class= "," raise ","(begin\n  (send\n    (send\n      (lvar :controller_class) :to_s) :underscore)) camelize constantize ","(begin\n  (send\n    (send\n      (lvar :controller_class) :to_s) :underscore)) camelize ","controller_class to_s underscore ","controller_class to_s ","(begin\n  (send\n    (send\n      (lvar :controller_class) :to_s) :camelize)) constantize ","controller_class to_s camelize "]}," ActionController TestSession exists?":{"type":"method","name":"exists?","children":[],"call":[]}," ActionController TestRequest Result new_escaped":{"type":"method","name":"new_escaped","children":[],"call":[]}," ActionController TestRequest Result to_s":{"type":"method","name":"to_s","children":[],"call":[" join "]}," ActionController TemplateAssertions assert_template":{"type":"method","name":"assert_template","children":[],"call":[" assert ","@partials empty? ","@partials include? "," build_message ","@partials keys ","options [] ","@layouts empty? ","l =~ ","@layouts any? ","@layouts include? "," expected_layout ","@layouts keys ","options key? ","actual_count == ","expected_count to_i ","@partials [] "," assert_equal ","actual_locals [] ","expected_locals each_pair ","@locals [] ","expected_partial to_s sub ","expected_partial to_s ","t match ","rendered any? ","@templates blank? ","options nil? "," assert_block ","rendered keys join ","rendered keys ","options to_s ","Symbol  === "," validate_request! ","@layouts keys any? ","@layouts keys include? "," warn "," response body "," response ","expected_layout to_s ","@_partials empty? ","@_partials include? ","@_partials keys ","@_partials [] ","@_layouts empty? ","@_layouts keys any? ","@_layouts keys ","@_layouts keys include? ","rendered blank? ","t_splited last == ","t_splited last ","options_splited size ","t split ","options split "," raise "," assert_includes "," sprintf ","@_rendered_views view_rendered? ","expecting %s to be rendered with %s but was with %s % ","@_rendered_views locals_for ","@_rendered_views rendered_views ","expected %s to be rendered but it was not. % ","expected_partial to_s sub sub ","@_files keys ","options assert_valid_keys ","options empty? ! ","options empty? ","options inspect ","@_files blank? ","options to_s  [] ","@options [] s empty? ","@options [] s any? ","@options [] s include? "," expected_options []  "," options []  ","@options [] s keys ","options to_s  key? ","@partials []  == ","@_partials []  == ","options []  to_i ","@locals []  [] ","options []  each_pair ","options []  to_s sub ","options []  to_s ","options to_s  nil? ","options to_s  to_s ","@options [] s keys any? ","@options [] s keys include? ","expected_options []  to_s ","@_options [] s empty? ","@_options [] s keys any? ","@_options [] s keys ","@_options [] s keys include? ","t split  last == ","t split  last ","options to_s _splited size ","options split  size ","options to_s  split ","@_rendered_expected_partial to_s sub sub s expected_partial to_s sub sub _rendered? ","@_rendered_expected_partial to_s sub sub s locals_for ","@_rendered_expected_partial to_s sub sub s rendered_expected_partial to_s sub sub s ","options []  to_s sub sub ","options to_s  assert_valid_keys ","options to_s  empty? ! ","options to_s  empty? ","options to_s  inspect "]}," ActionController TemplateAssertions teardown_subscriptions":{"type":"method","name":"teardown_subscriptions","children":[],"call":["ActiveSupport Notifications  unsubscribe ","@_subscribers each "]}," ActionController TemplateAssertions setup_subscriptions":{"type":"method","name":"setup_subscriptions","children":[],"call":["@templates [] ","@partials [] ","path split last ","path split ","path =~ ","payload [] ","ActiveSupport Notifications  subscribe ","@layouts [] ","Hash  new ","@_templates [] ","@_partials [] ","@_layouts [] ","@_files [] ","@_subscribers << ","virtual_path split last ","virtual_path split ","virtual_path =~ "," instance_variable_set ","RENDER_TEMPLATE_INSTANCE_VARIABLES  each ","Hash  new  [] ","@path =~ s [] ","@virtual_path =~ s [] ","payload []  split last ","payload []  split ","payload []  =~ ","@_path =~ s [] ","@_virtual_path =~ s [] ","virtual_payload []  split last ","virtual_payload []  split ","virtual_payload []  =~ "]}," ActionController RecordIdentifier sanitize_dom_id":{"type":"method","name":"sanitize_dom_id","children":[],"call":[]}," ActionController RecordIdentifier record_key_for_dom_id":{"type":"method","name":"record_key_for_dom_id","children":[],"call":[" sanitize_dom_id ","key join ","record to_key ","record to_model ","record respond_to? ","record to_key  join ","record to_record to_key  ","record to_model  to_key ","record to_model  to_model ","record to_model  respond_to? "]}," ActionController Middleware index":{"type":"method","name":"index","children":[],"call":[" call "," env "]}," ActionController Middleware initialize":{"type":"method","name":"initialize","children":[],"call":[]}," ActionController Middleware process":{"type":"method","name":"process","children":[],"call":[" response_body= "," headers= "," status= ","response is_a? "]}," ActionController Middleware new":{"type":"method","name":"new","children":[],"call":["ActionMiddleware  new "]}," ActionController Middleware ActionMiddleware call":{"type":"method","name":"call","children":[],"call":["@controller build dispatch ","@controller build ","ActionDispatch Request  new "]}," ActionController Middleware ActionMiddleware initialize":{"type":"method","name":"initialize","children":[],"call":[]}," ActionController Metal action":{"type":"method","name":"action","children":[],"call":[]}," ActionController Metal call":{"type":"method","name":"call","children":[],"call":[]}," ActionController Metal middleware":{"type":"method","name":"middleware","children":[],"call":[]}," ActionController Metal use":{"type":"method","name":"use","children":[],"call":[" middleware_stack use "," middleware_stack "]}," ActionController Metal inherited":{"type":"method","name":"inherited","children":[],"call":["subclass class_eval ","subclass middleware_stack= "," middleware_stack dup "," middleware_stack "]}," ActionController Metal to_a":{"type":"method","name":"to_a","children":[],"call":[" response_body "," headers "," status "," response to_a "," response "]}," ActionController Metal dispatch":{"type":"method","name":"dispatch","children":[],"call":[" to_a "," process ","@_env []= ","request env ","request commit_flash "," set_response! "," set_request! ","request env  []= "]}," ActionController Metal response_body=":{"type":"method","name":"response_body=","children":[],"call":["val respond_to? ","val nil? ","val is_a? ","body respond_to? ","body nil? "," response body= "," response "," response reset_body! "," response write ","part empty? ","body each ","body is_a? "]}," ActionController Metal status=":{"type":"method","name":"status=","children":[],"call":["Rack Utils  status_code "]}," ActionController Metal status":{"type":"method","name":"status","children":[],"call":[]}," ActionController Metal location=":{"type":"method","name":"location=","children":[],"call":[" headers []= "," headers "]}," ActionController Metal location":{"type":"method","name":"location","children":[],"call":[" headers [] "," headers "]}," ActionController Metal content_type":{"type":"method","name":"content_type","children":[],"call":[" headers [] "," headers "]}," ActionController Metal content_type=":{"type":"method","name":"content_type=","children":[],"call":[" headers []= ","type to_s "," headers "]}," ActionController Metal params=":{"type":"method","name":"params=","children":[],"call":[]}," ActionController Metal params":{"type":"method","name":"params","children":[],"call":[" request parameters "," request "]}," ActionController Metal initialize":{"type":"method","name":"initialize","children":[],"call":[]}," ActionController Metal controller_name":{"type":"method","name":"controller_name","children":[],"call":[" class controller_name "," class "]}," ActionController MiddlewareStack Middleware valid?":{"type":"method","name":"valid?","children":[],"call":["@except include? ! ","@except include? ","@except present? ","@only include? ","@only present? ","@strategy call "]}," ActionController UrlFor ClassMethods action_methods":{"type":"method","name":"action_methods","children":[],"call":[" - "," _routes named_routes helper_names "," _routes named_routes "," _routes "," _router named_routes helper_names "," _router named_routes "," _router "]}," ActionController UrlFor _routes":{"type":"method","name":"_routes","children":[],"call":[" raise "]}," ActionController UrlFor url_options":{"type":"method","name":"url_options","children":[],"call":[" reverse_merge merge "," request script_name "," request "," reverse_merge "," request symbolized_path_parameters "," request protocol "," request host_with_port ","options freeze ","options []= "," request script_name dup ","@_url_options dup tap ","@_url_options dup "," _routes equal? "," env [] "," env "," _routes "," reverse_merge freeze "," request optional_port "," request host "," _routes object_id ","ORIGINAL_SCRIPT_NAME freeze ","action_dispatch.routes freeze ","(pair\n  (sym :host)\n  (send\n    (send nil :request) :host)) merge! freeze ","(pair\n  (sym :host)\n  (send\n    (send nil :request) :host)) merge! "," request path_parameters "," freeze "," request script_name empty? "," request original_script_name "," request engine_script_name "," request routes "," request  env []  "," request  request engine_script_name  ","@_url_options dup  freeze ","@_url_options dup  []= "," request  env []  dup "," request  request engine_script_name  dup ","@_url_@_url_options dup  dup tap ","@_url_@_url_options dup  dup "," request  env []  empty? "," request  request engine_script_name  empty? "," request  request original_script_name  "," request original_ env []  "," request original_ request engine_script_name  "," request engine_ env []  "," request engine_ request engine_script_name  "]}," ActionController Testing ClassMethods before_filters":{"type":"method","name":"before_filters","children":[],"call":["x name ","(send\n  (send nil :_process_action_callbacks) :find_all) map ","x kind == ","x kind "," _process_action_callbacks find_all "," _process_action_callbacks "]}," ActionController Testing headers=":{"type":"method","name":"headers=","children":[],"call":["@_response headers replace ","@_response headers ","ActionDispatch Response  new "]}," ActionController Testing set_test_assigns":{"type":"method","name":"set_test_assigns","children":[],"call":["@assigns []= "," instance_variable_get ","var [] ","(send\n  (send nil :instance_variable_names) :-\n  (send\n    (send\n      (self) :class) :protected_instance_variables)) each "," instance_variable_names - "," class protected_instance_variables "," class "," instance_variable_names "]}," ActionController Testing process_with_new_base_test":{"type":"method","name":"process_with_new_base_test","children":[],"call":[" set_test_assigns ","@_response prepare! ","cookies write ","@_request env [] ","@_request env "," process ","request parameters [] ","request parameters ","@_response request= "," response_body ","@_response body ","@_request env []  write "]}," ActionController Responder default_action":{"type":"method","name":"default_action","children":[],"call":["ACTIONS_FOR_VERBS  [] "," request request_method_symbol "," request "," request method "," request method_symbol ","DEFAULT_ACTIONS_FOR_VERBS  [] "]}," ActionController Responder has_errors?":{"type":"method","name":"has_errors?","children":[],"call":[" resource errors empty? ! "," resource errors empty? "," resource errors "," resource "," resource respond_to? "]}," ActionController Responder display":{"type":"method","name":"display","children":[],"call":[" controller render ","given_options merge! merge! "," format ","given_options merge! "," options "," controller "]}," ActionController Responder default_render":{"type":"method","name":"default_render","children":[],"call":["@default_response call "," options "," controller default_render "," controller "]}," ActionController Responder resource_location":{"type":"method","name":"resource_location","children":[],"call":[" resources "," options [] "," options "]}," ActionController Responder resourceful?":{"type":"method","name":"resourceful?","children":[],"call":[" resource respond_to? "," format "," resource "]}," ActionController Responder api_behavior":{"type":"method","name":"api_behavior","children":[],"call":[" head "," display "," api_location "," resource "," post? "," resource errors "," has_errors? "," get? "," raise "," resourceful? "," resource_location "," empty_resource "," has_empty_resource_definition? ","MissingRenderer  new "," format "," has_renderer? "]}," ActionController Responder navigation_behavior":{"type":"method","name":"navigation_behavior","children":[],"call":[" redirect_to "," navigation_location "," render "," default_action "," has_errors? "," raise "," get? "," resource_location "]}," ActionController Responder to_format":{"type":"method","name":"to_format","children":[],"call":[" api_behavior "," default_render "," raise "," resourceful? "," display_errors "," has_errors? ! "," has_errors? "," get? "," response_overridden? "]}," ActionController Responder to_html":{"type":"method","name":"to_html","children":[],"call":[" navigation_behavior "," default_render "]}," ActionController Responder respond":{"type":"method","name":"respond","children":[],"call":[" to_format "," send "," respond_to? "," format "]}," ActionController Responder call":{"type":"method","name":"call","children":[],"call":[]}," ActionController Responder initialize":{"type":"method","name":"initialize","children":[],"call":["options delete ","resources last ","@controller formats first ","@controller formats ","@controller request ","resources is_a? ","controller formats first ","controller formats ","controller request "]}," ActionController Rescue process_action":{"type":"method","name":"process_action","children":[],"call":[" raise "," rescue_with_handler "," show_detailed_exceptions? "," request env [] "," request env "," request "]}," ActionController Rescue rescue_with_handler":{"type":"method","name":"rescue_with_handler","children":[],"call":[" handler_for_rescue ","exception original_exception ","exception respond_to? ","exception cause ","cause_handler_index <= "," index_of_handler_for_rescue ","exception cause  original_exception cause  ","exception cause  respond_to? ","exception cause  cause "," index_of_handler_for_rescue  <= "]}," ActionController RequestForgeryProtection protect_from_forgery":{"type":"method","name":"protect_from_forgery","children":[],"call":[" before_filter "," request_forgery_protection_token "]}," ActionController Rendering _process_options":{"type":"method","name":"_process_options","children":[],"call":[" headers []= "," url_for "," headers "," content_type= "," status= ","options values_at "]}," ActionController Rendering _normalize_options":{"type":"method","name":"_normalize_options","children":[],"call":["options []= ","Rack Utils  status_code ","options [] ","options [] to_text ","options [] respond_to? ","options key? "," block_given? ","options merge! ","action delete ","options [] nil? ","options delete "," _any_render_format_is_nil? ","ERB Util  html_escape "," _normalize_text ","ActiveSupport Deprecation  warn ","(str \"          `render :text` is deprecated because it does not actually render a\\n\") squish "]}," ActionController Rendering _normalize_args":{"type":"method","name":"_normalize_args","children":[],"call":["options []= "," block_given? "]}," ActionController Rendering render":{"type":"method","name":"render","children":[],"call":[" response_body ","Mime  [] to_s ","Mime  [] "," formats first "," formats "," content_type "," raise ","args last [] mime_type to_s ","args last [] mime_type ","args last [] ","args last ","args << ","args last is_a? "," lookup_context rendered_format "," lookup_context "]}," ActionController Rendering process_action":{"type":"method","name":"process_action","children":[],"call":[" formats= ","x to_sym "," request formats map "," request formats "," request ","x ref "," request formats map compact "," request formats filter_map "]}," ActionController Renderers All _write_render_options":{"type":"method","name":"_write_render_options","children":[],"call":[]}," ActionController Renderers add":{"type":"method","name":"add","children":[],"call":[]}," ActionController Renderers render_to_body":{"type":"method","name":"render_to_body","children":[],"call":[" _handle_render_options "," _render_to_body_with_renderer "]}," ActionController Renderers ClassMethods use_renderers":{"type":"method","name":"use_renderers","children":[],"call":[" _write_render_options "," _renderers= ","new freeze ","new []= ","RENDERERS  [] ","args each "," _renderers dup "," _renderers ","renderers freeze "," _renderers + "," _ _renderers + = "," _renderers dup  freeze "," _renderers dup  []= "," _ _renderers +  dup "," _ _renderers +  "," _renderers +  freeze "," _ _renderers +  + "]}," ActionController Renderers ClassMethods _write_render_options":{"type":"method","name":"_write_render_options","children":[],"call":[" class_eval ","28 + ","renderers join "," _renderers map "," _renderers ","27 + "]}," ActionController add_renderer":{"type":"method","name":"add_renderer","children":[],"call":[]}," ActionController Redirecting _compute_redirect_to_location":{"type":"method","name":"_compute_redirect_to_location","children":[],"call":["(lvar :options) gsub "," url_for "," raise "," request headers [] "," request headers "," request "," request protocol + + "," request protocol + "," request host_with_port "," request protocol "," _compute_redirect_to_location ","options call ","(lvar :options) delete ","request headers [] ","request headers ","request protocol + + ","request protocol + ","request host_with_port ","request protocol ","ActiveSupport Deprecation  warn ","(str \"          `redirect_to :back` is deprecated and will be removed from Rails 5.1.\\n\") squish "," instance_eval ","options to_str "]}," ActionController Redirecting _extract_redirect_to_status":{"type":"method","name":"_extract_redirect_to_status","children":[],"call":["Rack Utils  status_code ","response_status [] ","response_status key? ","options delete ","options key? ","options is_a? ","response_options [] ","response_options key? ","Rack Utils  Rack Utils  status_code _code ","response_Rack Utils  status_code  [] ","response_Rack Utils  status_code  key? "]}," ActionController Redirecting redirect_to":{"type":"method","name":"redirect_to","children":[],"call":[" response_body= ","ERB Util  h "," location "," location= "," _compute_redirect_to_location "," status= "," _extract_redirect_to_status "," raise "," response_body ","ActionControllerError  new ","options nil? ","options is_a? ","ERB Util  unwrapped_html_escape "," request "," response location "," response "," _compute_safe_redirect_to_location "," _ensure_url_is_http_header_safe "," _enforce_open_redirect_protection "," _allow_other_host ","response_options delete ","response_options [] ","response_options key? "," _compute_ _compute_redirect_to_location  "," _compute_safe_ _compute_redirect_to_location  "]}," ActionController RackDelegation reset_session":{"type":"method","name":"reset_session","children":[],"call":["@_request reset_session "]}," ActionController RackDelegation response_body=":{"type":"method","name":"response_body=","children":[],"call":[" response body= "," response "]}," ActionController RackDelegation dispatch":{"type":"method","name":"dispatch","children":[],"call":["@_response request ","@_response request= "," request ","ActionDispatch Response  new ","ActionDispatch Request  new "," set_response! ","ActionDispatch Response  new  request ","ActionDispatch Response  new  request= "]}," ActionController MimeResponds Collector response_for":{"type":"method","name":"response_for","children":[],"call":["@responses [] "]}," ActionController MimeResponds Collector custom":{"type":"method","name":"custom","children":[],"call":["@responses [] ","@order << ","Mime Type  lookup ","mime_type to_s ","mime_type is_a? ","VariantCollector  new "," block_given? ","Mime Type  lookup  to_s ","Mime Type  lookup  is_a? "]}," ActionController MimeResponds Collector any":{"type":"method","name":"any","children":[],"call":[" custom "," send ","args each ","args any? "]}," ActionController MimeResponds Collector initialize":{"type":"method","name":"initialize","children":[],"call":[" send ","mimes each ","@responses []= ","(str \"Mime::\") constantize ","mime upcase ","Mime  [] "]}," ActionController MimeResponds retrieve_response_from_mimes":{"type":"method","name":"retrieve_response_from_mimes","children":[],"call":[" head ","collector response_for "," lookup_context freeze_formats ","format to_sym "," lookup_context ","format to_s "," content_type "," request negotiate_mime ","collector order "," request ","block call "," block_given? ","collector send ","mimes each "," collect_mimes_from_class_level "," default_render ","Collector  new "," formats= "," lookup_context freeze_ request negotiate_mime s "," request negotiate_mime  to_sym "," request negotiate_mime  to_s ","  request negotiate_mime s= "]}," ActionController MimeResponds collect_mimes_from_class_level":{"type":"method","name":"collect_mimes_from_class_level","children":[],"call":["config [] include? ","config [] ","config [] include? ! "," class mimes_for_respond_to [] "," class mimes_for_respond_to "," class "," class mimes_for_respond_to keys select "," class mimes_for_respond_to keys "," action_name to_sym "," action_name ","action in? ","action in? ! "," action_name to_s "," class mimes_for_respond_to []  [] include? "," class mimes_for_respond_to []  [] "," class mimes_for_respond_to []  [] include? ! ","  action_name to_sym _name to_sym ","  action_name to_s _name to_sym ","  action_name to_sym _name ","  action_name to_s _name "," action_name to_sym  in? "," action_name to_s  in? "," action_name to_sym  in? ! "," action_name to_s  in? ! ","  action_name to_sym _name to_s ","  action_name to_s _name to_s "]}," ActionController MimeResponds respond_with":{"type":"method","name":"respond_with","children":[],"call":["(or\n  (send\n    (lvar :options) :delete\n    (sym :responder))\n  (send\n    (send\n      (self) :class) :responder)) call "," class responder "," class ","options delete ","options merge! ","resources extract_options! "," retrieve_response_from_mimes "," raise ","In order to use respond_with, first you need to declare the formats your  << "," class mimes_for_respond_to empty? "," class mimes_for_respond_to ","resources size == ","resources size ","options []= ","collector response "," retrieve_collector_from_mimes ","defined_response call "," render ","options clone "," request variant "," request ","(or\n  (send\n    (lvar :resources extract_options! ) :delete\n    (sym :responder))\n  (send\n    (send\n      (self) :class) :responder)) call ","(or\n  (send\n    (lvar :options clone ) :delete\n    (sym :responder))\n  (send\n    (send\n      (self) :class) :responder)) call ","resources extract_options!  delete ","options clone  delete ","resources extract_options!  merge! ","options clone  merge! ","resources extract_resources extract_options! ! ","resources extract_options clone ! "," retrieve_ retrieve_response_from_mimes _from_mimes ","resources extract_options!  []= ","options clone  []= ","collector  retrieve_response_from_mimes  "," retrieve_collector_from_mimes  response "," retrieve_ retrieve_collector_from_mimes _from_mimes ","defined_ retrieve_response_from_mimes  call ","collector response  call ","resources extract_options!  clone ","options clone  clone "]}," ActionController MimeResponds respond_to":{"type":"method","name":"respond_to","children":[],"call":["response call "," retrieve_response_from_mimes "," raise "," block_given? ","mimes any? "," default_render ","collector response "," retrieve_collector_from_mimes "," render "," request variant "," request "," _process_format ","collector negotiate_format ","Collector  new ","block call "," _set_rendered_content_type "," media_type != "," media_type "," content_type != "," content_type ","collector any_response? "," retrieve_response_from_mimes  call ","collector response  call "," retrieve_ retrieve_response_from_mimes _from_mimes "," retrieve_collector response _from_mimes ","collector  retrieve_response_from_mimes  ","collector collector response  "," retrieve_collector_from_mimes  response ","Collector  new  response "," retrieve_ retrieve_collector_from_mimes _from_mimes "," retrieve_Collector  new _from_mimes "," _process_collector negotiate_format  "," retrieve_collector_from_mimes  negotiate_format ","Collector  new  negotiate_format ","collector negotiate_collector negotiate_format  ","collector any_ retrieve_response_from_mimes ? ","collector any_collector response ? "," retrieve_collector_from_mimes  any_response? ","Collector  new  any_response? "]}," ActionController MimeResponds ClassMethods clear_respond_to":{"type":"method","name":"clear_respond_to","children":[],"call":[" mimes_for_respond_to= ","ActiveSupport OrderedHash  new freeze ","ActiveSupport OrderedHash  new ","Hash  new freeze ","Hash  new "]}," ActionController MimeResponds ClassMethods respond_to":{"type":"method","name":"respond_to","children":[],"call":[" mimes_for_respond_to= ","new freeze ","new [] []= ","new [] ","except_actions empty? ","only_actions empty? ","new []= ","mime to_sym ","mimes each "," mimes_for_respond_to dup "," mimes_for_respond_to "," Array ","options delete ","mimes extract_options! "," Array map "," raise "," mime to_sym s_for_respond_to= "," mimes_for_respond_to dup  freeze "," mimes_for_respond_to dup  [] []= "," mimes_for_respond_to dup  [] "," Array  empty? "," Array map  empty? "," mimes_for_respond_to dup  []= ","mime to_sym  to_sym ","mime to_sym s each "," mime to_sym s_for_respond_to dup "," mime to_sym s_for_respond_to ","mimes extract_options!  delete ","mime to_sym s extract_options! ","mimes extract_mimes extract_options! ! "]}," ActionController Instrumentation ClassMethods log_process_action":{"type":"method","name":"log_process_action","children":[],"call":["messages << ","Views: %.1fms % ","view_runtime to_f ","payload [] "]}," ActionController Instrumentation append_info_to_payload":{"type":"method","name":"append_info_to_payload","children":[],"call":["payload []= "," view_runtime "]}," ActionController Instrumentation cleanup_view_runtime":{"type":"method","name":"cleanup_view_runtime","children":[],"call":[]}," ActionController Instrumentation redirect_to":{"type":"method","name":"redirect_to","children":[],"call":["payload []= "," location "," status ","ActiveSupport Notifications  instrument "," response location "," response "," response status "," response filtered_location "," request "]}," ActionController Instrumentation send_data":{"type":"method","name":"send_data","children":[],"call":["ActiveSupport Notifications  instrument "]}," ActionController Instrumentation send_file":{"type":"method","name":"send_file","children":[],"call":["ActiveSupport Notifications  instrument ","options merge "]}," ActionController Instrumentation render":{"type":"method","name":"render","children":[],"call":[" view_runtime= ","Benchmark  ms "," cleanup_view_runtime "]}," ActionController Instrumentation process_action":{"type":"method","name":"process_action","children":[],"call":[" append_info_to_payload ","payload []= "," response status "," response ","ActiveSupport Notifications  instrument ","raw_payload dup "," request fullpath "," request "," request method "," request formats map "," request formats "," request filtered_parameters "," action_name "," class name "," class "," request request_uri "," request format try "," request format "," request format ref "," request request_method "," request headers "," tap "," raise ","ActionDispatch ExceptionWrapper  status_code_for_exception ","error class name ","error class ","ActiveSupport ExecutionContext  []= "," request filtered_path "]}," ActionController ImplicitRender method_for_action":{"type":"method","name":"method_for_action","children":[],"call":[" template_exists? "," _prefix ","action_name to_s "," _prefixes "]}," ActionController ImplicitRender default_render":{"type":"method","name":"default_render","children":[],"call":[" render "," logger info "," action_name "," class name "," class "," logger "," raise "," request variant inspect "," request variant "," request "," request formats map inspect "," request formats map "," request formats "," interactive_browser_request? "," any_templates? "," _prefixes "," action_name to_s "," template_exists? "," block_given? "," request formats map join ","ActionController MissingExactTemplate  new "]}," ActionController ImplicitRender send_action":{"type":"method","name":"send_action","children":[],"call":[" default_render "," response_body "," respond_to? "," performed? "]}," ActionController HttpAuthentication Token authentication_request":{"type":"method","name":"authentication_request","children":[],"call":["controller __send__ ","controller headers []= ","realm gsub ","controller headers ","realm tr "," freeze ","\" freeze "]}," ActionController HttpAuthentication Token encode_credentials":{"type":"method","name":"encode_credentials","children":[],"call":["values * ","values << ","value to_s inspect ","value to_s ","options each ","token to_s inspect ","token to_s ","(dstr\n  (str \"token=\")\n  (begin\n    (send\n      (send\n        (lvar :token) :to_s) :inspect))) + ","options map ","(dstr\n  (begin\n    (const nil :TOKEN_KEY))\n  (begin\n    (send\n      (send\n        (lvar :token) :to_s) :inspect))) + ","(dstr\n  (str \"token=\")\n  (begin\n    (send\n      (send\n        (lvar :token) :to_s) :inspect))) +  * ","(dstr\n  (begin\n    (const nil :TOKEN_KEY))\n  (begin\n    (send\n      (send\n        (lvar :token) :to_s) :inspect))) +  * ","(dstr\n  (str \"token=\")\n  (begin\n    (send\n      (send\n        (lvar :token) :to_s) :inspect))) +  << ","(dstr\n  (begin\n    (const nil :TOKEN_KEY))\n  (begin\n    (send\n      (send\n        (lvar :token) :to_s) :inspect))) +  << "]}," ActionController HttpAuthentication Token token_and_options":{"type":"method","name":"token_and_options","children":[],"call":["values with_indifferent_access ","values delete ","memo update ","value gsub! ","value chomp! ","value split ","value strip! ","1 split inject ","1 split ","request authorization to_s [] ","request authorization to_s ","request authorization ","Hash  [] ","1 split map ","Hash  [] with_indifferent_access ","params shift last ","params shift "," token_params_from ","authorization_request [] ","params shift [] ","Hash  []  with_indifferent_access ","Hash  []  delete "," token_params_from  shift last "," token_params_from  shift "," token_ token_params_from _from ","request authorization to_s  [] "," token_params_from  shift [] "]}," ActionController HttpAuthentication Token authenticate":{"type":"method","name":"authenticate","children":[],"call":["login_procedure call ","token blank? ! ","token blank? "," token_and_options ","controller request "]}," ActionController HttpAuthentication Token ControllerMethods request_http_token_authentication":{"type":"method","name":"request_http_token_authentication","children":[],"call":["Token  authentication_request "]}," ActionController HttpAuthentication Token ControllerMethods authenticate_with_http_token":{"type":"method","name":"authenticate_with_http_token","children":[],"call":["Token  authenticate "]}," ActionController HttpAuthentication Token ControllerMethods authenticate_or_request_with_http_token":{"type":"method","name":"authenticate_or_request_with_http_token","children":[],"call":[" request_http_token_authentication "," authenticate_with_http_token "]}," ActionController HttpAuthentication Digest secret_token":{"type":"method","name":"secret_token","children":[],"call":[" raise ","secret blank? ","request env [] ","request env ","key_generator generate_key ","request http_auth_salt ","request key_generator ","request env []  blank? ","request env []  generate_key ","request key_generator  generate_key ","request request env []  ","request request http_auth_salt  ","request request key_generator  "]}," ActionController HideActions ClassMethods action_methods":{"type":"method","name":"action_methods","children":[],"call":["Set  new "," hidden_actions include? "," hidden_actions "," reject ","Set  new freeze "]}," ActionController HideActions ClassMethods visible_action?":{"type":"method","name":"visible_action?","children":[],"call":["@visible_actions []= "," hidden_actions include? ! "," hidden_actions include? "," hidden_actions ","@visible_actions [] ","@visible_actions key? "," action_methods include? "," action_methods "]}," ActionController HideActions ClassMethods inherited":{"type":"method","name":"inherited","children":[],"call":["klass class_eval ","klass instance_variable_set "]}," ActionController HideActions ClassMethods hide_action":{"type":"method","name":"hide_action","children":[],"call":[" hidden_actions= "," hidden_actions dup merge freeze "," hidden_actions dup merge ","args map "," hidden_actions dup "," hidden_actions "]}," ActionController HideActions method_for_action":{"type":"method","name":"method_for_action","children":[],"call":[" class visible_action? "," class "]}," ActionController Helpers ClassMethods modules_for_helpers":{"type":"method","name":"modules_for_helpers","children":[],"call":[" all_application_helpers ","args delete "]}," ActionController Helpers ClassMethods helpers_dir=":{"type":"method","name":"helpers_dir=","children":[],"call":[" helpers_path= ","Array  wrap ","ActiveSupport Deprecation  warn "," caller "," Array "]}," ActionController Helpers ClassMethods helpers_dir":{"type":"method","name":"helpers_dir","children":[],"call":[" helpers_path ","ActiveSupport Deprecation  warn "," caller "]}," ActionController Head head":{"type":"method","name":"head","children":[],"call":[" response_body= "," content_type= ","Mime  [] "," formats first "," formats "," location= "," url_for "," status= "," headers []= ","value to_s ","(send\n  (send\n    (send\n      (send\n        (lvar :key) :to_s) :dasherize) :split\n    (regexp\n      (str \"-\")\n      (regopt))) :map) join ","v capitalize ","key to_s dasherize split map ","key to_s dasherize split ","key to_s dasherize ","key to_s "," headers ","options each ","options delete ","status is_a? ","(send\n  (send\n    (send\n      (send\n        (lvar :key) :to_s) :dasherize) :split\n    (str \"-\")) :each) join ","v []= ","v [] chr upcase ","v [] chr ","v [] ","key to_s dasherize split each "," headers delete "," response charset= "," response "," include_content? "," status "," _status_code "," response_code ","ActiveSupport Deprecation  warn ","(str \"          \") squish ","status delete ","status [] "," raise ","status inspect "," media_type ","(send\n  (send\n    (send\n      (lvar :key) :to_s) :split\n    (regexp\n      (str \"[-_]\")\n      (regopt))) :each) join ","v [] upcase ","key to_s split each ","key to_s split ","f first "," options delete = ","  formats ormats  formats irst ","  formats ormats "," url_ formats or "," formats   formats irst "]}," ActionController Flash redirect_to":{"type":"method","name":"redirect_to","children":[],"call":[" flash update "," flash ","response_status_and_flash delete "," flash []= "," class _flash_types each "," class _flash_types "," class ","response_options_and_flash delete "," class _flash_response_status_and_flash delete s each "," class _flash_response_options_and_flash delete s each "," class _flash_response_status_and_flash delete s "," class _flash_response_options_and_flash delete s "]}," ActionController ConditionalGet expires_now":{"type":"method","name":"expires_now","children":[],"call":[" response cache_control replace "," response cache_control "," response "]}," ActionController ConditionalGet expires_in":{"type":"method","name":"expires_in","children":[],"call":[" response cache_control []= ","options map "," response cache_control "," response ","options delete "," response cache_control merge! "," response date= ","Time  now "," response date? "," response cache_control delete "]}," ActionController ConditionalGet stale?":{"type":"method","name":"stale?","children":[],"call":[" request fresh? ! "," request fresh? "," response "," request "," fresh_when "]}," ActionController ConditionalGet fresh_when":{"type":"method","name":"fresh_when","children":[],"call":[" head "," request fresh? "," response "," request "," response cache_control []= "," response cache_control ","options [] "," response last_modified= "," response etag= ","options assert_valid_keys ","(pair\n  (sym :etag)\n  (lvar :record)) merge ","record try ","record_or_options is_a? "," combine_etags ","(pair\n  (sym :etag)\n  (lvar :record)) merge! "," response weak_etag= "," response strong_etag= ","object try "," response cache_control merge! "," response cache_control delete ","(pair\n  (sym :etag)\n  (lvar :record)) merge  [] ","(pair\n  (sym :etag)\n  (lvar :record)) merge!  [] ","(pair\n  (sym :etag)\n  (lvar :record)) merge  assert_valid_keys ","(pair\n  (sym :etag)\n  (lvar :record)) merge!  assert_valid_keys ","record_or_(pair\n  (sym :etag)\n  (lvar :record)) merge  is_a? ","record_or_(pair\n  (sym :etag)\n  (lvar :record)) merge!  is_a? "]}," ActionController Compatibility performed?":{"type":"method","name":"performed?","children":[],"call":[" response_body "]}," ActionController Compatibility method_for_action":{"type":"method","name":"method_for_action","children":[],"call":[" respond_to? "," class protected_method_defined? "," class "," class public_method_defined? "]}," ActionController Compatibility _handle_method_missing":{"type":"method","name":"_handle_method_missing","children":[],"call":[" method_missing ","@_action_name to_sym ","ActiveSupport Deprecation  warn "," caller "]}," ActionController Compatibility render_to_body":{"type":"method","name":"render_to_body","children":[],"call":["options [] sub! ","options [] ","options key? ","options []= ","options [] nil? ","options delete == ","options delete ","options is_a? "]}," ActionController Compatibility _normalize_options":{"type":"method","name":"_normalize_options","children":[],"call":["options []= ","options [] nil? ","options [] ","options key? ","options delete == ","options delete ","ActiveSupport Deprecation  warn "," caller ","Giving a path to render :action is deprecated.  << ","options [] to_s include? ","options [] to_s "]}," ActionController Compatibility assign_shortcuts":{"type":"method","name":"assign_shortcuts","children":[],"call":["ActiveSupport Deprecation  warn "," caller "]}," ActionController Compatibility initialize_template_class":{"type":"method","name":"initialize_template_class","children":[],"call":["ActiveSupport Deprecation  warn "," caller "]}," ActionController Compatibility rescue_action":{"type":"method","name":"rescue_action","children":[],"call":[" raise ","env [] ","ActiveSupport Deprecation  warn "," caller "]}," ActionController LogSubscriber logger":{"type":"method","name":"logger","children":[],"call":["ActionController Base  logger "]}," ActionController LogSubscriber send_data":{"type":"method","name":"send_data","children":[],"call":[" info ","Sent data %s (%.1fms) % ","event duration ","event payload [] ","event payload "," format_duration ","event duration round "]}," ActionController LogSubscriber redirect_to":{"type":"method","name":"redirect_to","children":[],"call":[" info ","event payload [] ","event payload "]}," ActionController LogSubscriber send_file":{"type":"method","name":"send_file","children":[],"call":[" info ","message % ","event duration ","event payload [] ","event payload ","message << "," format_duration ","event duration round "]}," ActionController LogSubscriber process_action":{"type":"method","name":"process_action","children":[],"call":[" info ","message << ","additions join ","additions blank? ","(str \"Completed \") % ","event duration ","Rack Utils HTTP_STATUS_CODES  [] ","payload [] ","ActionController Base  log_process_action ","event payload ","Rack Utils  status_code ","ActionDispatch ShowExceptions  rescue_responses [] ","payload [] first ","ActionDispatch ShowExceptions  rescue_responses ","payload [] present? ","status nil? ","ActionDispatch ExceptionWrapper  new status_code ","ActionDispatch ExceptionWrapper  new ","ActionDispatch ExceptionWrapper  status_code_for_exception "," format_duration ","event duration round "," logger info? "," logger ","Rails  env development? ","Rails  env "," |  freeze ","additions empty? ","(str \"Completed \") dup ","(str \"Completed \") +@ ","additions << ","event allocations ","(dstr\n  (str \"Completed \")\n  (begin\n    (lvar :status))\n  (str \" \")\n  (begin\n    (send\n      (const\n        (const\n          (const nil :Rack) :Utils) :HTTP_STATUS_CODES) :[]\n      (lvar :status)))\n  (str \" in \")\n  (begin\n    (send\n      (send\n        (lvar :event) :duration) :round))\n  (str \"ms\")) +@ ","(str \"Completed \") %  << ","(str \"Completed \") dup  << ","(str \"Completed \") +@  << ","(dstr\n  (str \"Completed \")\n  (begin\n    (lvar :status))\n  (str \" \")\n  (begin\n    (send\n      (const\n        (const\n          (const nil :Rack) :Utils) :HTTP_STATUS_CODES) :[]\n      (lvar :status)))\n  (str \" in \")\n  (begin\n    (send\n      (send\n        (lvar :event) :duration) :round))\n  (str \"ms\")) +@  << ","ActionController Base  log_process_action  join ","ActionController Base  log_process_action  blank? ","event payload  [] ","event event payload  ","Rack Utils  payload [] _code ","Rack Utils  Rack Utils  status_code _code ","Rack Utils  ActionDispatch ExceptionWrapper  status_code_for_exception _code ","event payload  [] first ","event payload  [] present? ","payload []  nil? ","Rack Utils  status_code  nil? ","ActionDispatch ExceptionWrapper  status_code_for_exception  nil? ","ActionDispatch ExceptionWrapper  new payload [] _code ","ActionDispatch ExceptionWrapper  new Rack Utils  status_code _code ","ActionDispatch ExceptionWrapper  new ActionDispatch ExceptionWrapper  status_code_for_exception _code ","ActionDispatch ExceptionWrapper  payload [] _code_for_exception ","ActionDispatch ExceptionWrapper  Rack Utils  status_code _code_for_exception ","ActionDispatch ExceptionWrapper  ActionDispatch ExceptionWrapper  status_code_for_exception _code_for_exception ","ActionController Base  log_process_action  empty? ","ActionController Base  log_process_action  << ","(dstr\n  (str \"Completed \")\n  (begin\n    (lvar :payload [] ))\n  (str \" \")\n  (begin\n    (send\n      (const\n        (const\n          (const nil :Rack) :Utils) :HTTP_STATUS_CODES) :[]\n      (lvar :payload [] )))\n  (str \" in \")\n  (begin\n    (send\n      (send\n        (lvar :event) :duration) :round))\n  (str \"ms\")) +@ ","(dstr\n  (str \"Completed \")\n  (begin\n    (lvar :Rack Utils  status_code ))\n  (str \" \")\n  (begin\n    (send\n      (const\n        (const\n          (const nil :Rack) :Utils) :HTTP_STATUS_CODES) :[]\n      (lvar :Rack Utils  status_code )))\n  (str \" in \")\n  (begin\n    (send\n      (send\n        (lvar :event) :duration) :round))\n  (str \"ms\")) +@ ","(dstr\n  (str \"Completed \")\n  (begin\n    (lvar :ActionDispatch ExceptionWrapper  status_code_for_exception ))\n  (str \" \")\n  (begin\n    (send\n      (const\n        (const\n          (const nil :Rack) :Utils) :HTTP_STATUS_CODES) :[]\n      (lvar :ActionDispatch ExceptionWrapper  status_code_for_exception )))\n  (str \" in \")\n  (begin\n    (send\n      (send\n        (lvar :event) :duration) :round))\n  (str \"ms\")) +@ "]}," ActionController LogSubscriber start_processing":{"type":"method","name":"start_processing","children":[],"call":[" info ","params inspect ","params empty? ","payload [] first to_s upcase ","payload [] first to_s ","payload [] first ","payload [] ","payload [] except ","event payload ","format to_s upcase ","format to_s ","format is_a? "," logger info? "," logger ","format nil? ","params []= ","INTERNAL_PARAMS  include? ","payload [] each_pair ","payload [] except  inspect ","payload [] except  empty? ","event payload  [] first to_s upcase ","event payload  [] first to_s ","event payload  [] first ","event payload  [] ","event payload  [] except ","event event payload  ","format to_s upcase  to_s upcase ","payload []  to_s upcase ","format to_s upcase  to_s ","payload []  to_s ","format to_s upcase  is_a? ","payload []  is_a? ","format to_s upcase  nil? ","payload []  nil? ","payload [] except  []= ","event payload  [] each_pair "]}," ActionController Dispatcher new":{"type":"method","name":"new","children":[],"call":["Rails  application ","ActiveSupport Deprecation  warn "]}," ActionController Base DeprecatedBehavior exempt_from_layout":{"type":"method","name":"exempt_from_layout","children":[],"call":["ActiveSupport Deprecation  warn "," caller "]}," ActionController Base DeprecatedBehavior verify":{"type":"method","name":"verify","children":[],"call":["ActiveSupport Deprecation  warn "," caller ","verify was removed from Rails and is now available as a plugin.  << "]}," ActionController Base DeprecatedBehavior filter_parameter_logging":{"type":"method","name":"filter_parameter_logging","children":[],"call":["filter << ","filter concat ","Rails  application config filter_parameters ","Rails  application config ","Rails  application ","ActiveSupport Deprecation  warn "," caller ","Rails  application config filter_parameters  << ","Rails  application config filter_parameters  concat ","Rails  application config Rails  application config filter_parameters _parameters "]}," ActionController Base DeprecatedBehavior use_accept_header=":{"type":"method","name":"use_accept_header=","children":[],"call":[" use_accept_header "]}," ActionController Base DeprecatedBehavior use_accept_header":{"type":"method","name":"use_accept_header","children":[],"call":["ActiveSupport Deprecation  warn "]}," ActionController Base DeprecatedBehavior resource_action_separator=":{"type":"method","name":"resource_action_separator=","children":[],"call":["ActiveSupport Deprecation  warn "]}," ActionController Base DeprecatedBehavior resource_action_separator":{"type":"method","name":"resource_action_separator","children":[],"call":[]}," ActionController Base DeprecatedBehavior session=":{"type":"method","name":"session=","children":[],"call":["Rails  application config session_store ","Rails  application config ","Rails  application ","value delete ","Rails  application config secret_token= ","ActiveSupport Deprecation  warn "," caller ","ActionController::Base.session= is deprecated.  << ","Rails  application config session_Rails  application config session_store  ","Rails  application config value delete _token= "]}," ActionController Base DeprecatedBehavior session":{"type":"method","name":"session","children":[],"call":["ActiveSupport Deprecation  warn "," caller ","Disabling sessions for a single controller has been deprecated.  + + + ","Disabling sessions for a single controller has been deprecated.  + + ","Disabling sessions for a single controller has been deprecated.  + "]}," ActionController Base DeprecatedBehavior trusted_proxies":{"type":"method","name":"trusted_proxies","children":[],"call":["Rails  application config action_dispatch ip_spoofing_check= "," value ","Rails  application config action_dispatch ","Rails  application config ","Rails  application ","ActiveSupport Deprecation  warn "," caller ","ActionController::Base.trusted_proxies is deprecated.  << "]}," ActionController Base DeprecatedBehavior trusted_proxies=":{"type":"method","name":"trusted_proxies=","children":[],"call":["Rails  application config action_dispatch ip_spoofing_check= ","Rails  application config action_dispatch ","Rails  application config ","Rails  application ","ActiveSupport Deprecation  warn "," caller ","ActionController::Base.trusted_proxies= is deprecated.  << "]}," ActionController Base DeprecatedBehavior cookie_verifier_secret":{"type":"method","name":"cookie_verifier_secret","children":[],"call":["ActiveSupport Deprecation  warn "," caller "]}," ActionController Base DeprecatedBehavior cookie_verifier_secret=":{"type":"method","name":"cookie_verifier_secret=","children":[],"call":["ActiveSupport Deprecation  warn "," caller ","ActionController::Base.cookie_verifier_secret= is deprecated.  << "]}," ActionController Base DeprecatedBehavior ip_spoofing_check":{"type":"method","name":"ip_spoofing_check","children":[],"call":["Rails  application config action_dispatch ip_spoofing_check ","Rails  application config action_dispatch ","Rails  application config ","Rails  application ","ActiveSupport Deprecation  warn "," caller ","ActionController::Base.ip_spoofing_check is deprecated.  << "]}," ActionController Base DeprecatedBehavior ip_spoofing_check=":{"type":"method","name":"ip_spoofing_check=","children":[],"call":["Rails  application config action_dispatch ip_spoofing_check= ","Rails  application config action_dispatch ","Rails  application config ","Rails  application ","ActiveSupport Deprecation  warn "," caller ","ActionController::Base.ip_spoofing_check= is deprecated.  << "]}," ActionController Base DeprecatedBehavior allow_concurrency=":{"type":"method","name":"allow_concurrency=","children":[],"call":["Rails  application config allow_concurrency= ","Rails  application config ","Rails  application ","ActiveSupport Deprecation  warn "," caller ","ActionController::Base.allow_concurrency= is deprecated.  << "]}," ActionController Base DeprecatedBehavior allow_concurrency":{"type":"method","name":"allow_concurrency","children":[],"call":["Rails  application config allow_concurrency ","Rails  application config ","Rails  application ","ActiveSupport Deprecation  warn "," caller ","ActionController::Base.allow_concurrency is deprecated,  << "]}," ActionController Base DeprecatedBehavior consider_all_requests_local=":{"type":"method","name":"consider_all_requests_local=","children":[],"call":["Rails  application config consider_all_requests_local= ","Rails  application config ","Rails  application ","ActiveSupport Deprecation  warn "," caller ","ActionController::Base.consider_all_requests_local= is deprecated.  << "]}," ActionController Base DeprecatedBehavior consider_all_requests_local":{"type":"method","name":"consider_all_requests_local","children":[],"call":["Rails  application config consider_all_requests_local ","Rails  application config ","Rails  application ","ActiveSupport Deprecation  warn "," caller ","ActionController::Base.consider_all_requests_local is deprecated,  << "]}," ActionController Base DeprecatedBehavior relative_url_root=":{"type":"method","name":"relative_url_root=","children":[],"call":["ActiveSupport Deprecation  warn "," caller ","ActionController::Base.relative_url_root= is ineffective.  << "]}," ActionController Base DeprecatedBehavior relative_url_root":{"type":"method","name":"relative_url_root","children":[],"call":["ActiveSupport Deprecation  warn "," caller ","ActionController::Base.relative_url_root is ineffective.  << "]}," ActionController Caching caching_allowed?":{"type":"method","name":"caching_allowed?","children":[],"call":[" response status == "," response status "," response "," request get? "," request "]}," ActionController Caching ConfigMethods cache_configured?":{"type":"method","name":"cache_configured?","children":[],"call":[" cache_store "," perform_caching "]}," ActionController Caching ConfigMethods cache_store=":{"type":"method","name":"cache_store=","children":[],"call":[" config cache_store= ","ActiveSupport Cache  lookup_store "," config "]}," ActionController Caching ConfigMethods cache_store":{"type":"method","name":"cache_store","children":[],"call":[" config cache_store "," config "]}," ActionController Caching Pages ClassMethods instrument_page_cache":{"type":"method","name":"instrument_page_cache","children":[],"call":["ActiveSupport Notifications  instrument "]}," ActionController Caching Fragments instrument_fragment_cache":{"type":"method","name":"instrument_fragment_cache","children":[],"call":["ActiveSupport Notifications  instrument "," action_name "," controller_name "]}," ActionController Caching Actions _save_fragment":{"type":"method","name":"_save_fragment","children":[],"call":[" write_fragment ","content join ","content is_a? "," response_body "," caching_allowed? "," view_context content_for "," view_context ","content << "," response_body each ","content join  join "," response_body  join "," view_context content_for  join ","content join  is_a? "," response_body  is_a? "," view_context content_for  is_a? "," view_context content join _for "," view_context  response_body _for "," view_context  view_context content_for _for ","content join  << "," response_body  << "," view_context content_for  << "]}," ActionController Base inherited":{"type":"method","name":"inherited","children":[],"call":[]}," ActionController Base without_modules":{"type":"method","name":"without_modules","children":[],"call":[]}," AbstractController ViewPaths ClassMethods view_paths=":{"type":"method","name":"view_paths=","children":[],"call":[" _view_paths freeze "," _view_paths "," _view_paths= ","ActionView Base  process_view_paths ","paths is_a? ","ActionView PathSet  new ","Array  wrap "," Array "]}," AbstractController ViewPaths ClassMethods view_paths":{"type":"method","name":"view_paths","children":[],"call":[" _view_paths "]}," AbstractController ViewPaths ClassMethods prepend_view_path":{"type":"method","name":"prepend_view_path","children":[],"call":[" view_paths= "," Array + "," view_paths dup "," view_paths "," Array "," _view_paths= ","ActionView PathSet  new "]}," AbstractController ViewPaths ClassMethods append_view_path":{"type":"method","name":"append_view_path","children":[],"call":[" view_paths= "," view_paths dup + "," Array "," view_paths dup "," view_paths "," _view_paths= "," view_paths + "]}," AbstractController ViewPaths prepend_view_path":{"type":"method","name":"prepend_view_path","children":[],"call":[" lookup_context view_paths unshift "," lookup_context view_paths "," lookup_context "]}," AbstractController ViewPaths append_view_path":{"type":"method","name":"append_view_path","children":[],"call":[" lookup_context view_paths push "," lookup_context view_paths "," lookup_context "]}," AbstractController ViewPaths details_for_lookup":{"type":"method","name":"details_for_lookup","children":[],"call":[]}," AbstractController ViewPaths lookup_context":{"type":"method","name":"lookup_context","children":[],"call":["ActionView LookupContext  new "," details_for_lookup "," class _view_paths "," class "," _prefixes "]}," AbstractController Translation localize":{"type":"method","name":"localize","children":[],"call":["I18n  localize "]}," AbstractController Translation translate":{"type":"method","name":"translate","children":[],"call":["I18n  translate ","args []= "," action_name "," controller_path tr "," controller_path ","key [] == ","key [] ","key is_a? ","args first "," controller_path gsub ","options []= ","defaults << ","options [] ","key to_s first == ","key to_s first ","key to_s ","defaults flatten ","options dup ","options fetch "," raise_on_missing_translations ","key start_with? ","ActiveSupport HtmlSafeTranslation  translate "," controller_ controller_path tr  tr "," controller_ controller_path tr  ","args first  [] == ","args first  [] ","args first  is_a? "," controller_ controller_path tr  gsub ","options dup  []= ","options dup  [] ","args first  to_s first == ","args first  to_s first ","args first  to_s ","options dup  dup ","options dup  fetch ","args first  start_with? "]}," AbstractController Rendering _process_options":{"type":"method","name":"_process_options","children":[],"call":[]}," AbstractController Rendering _normalize_options":{"type":"method","name":"_normalize_options","children":[],"call":["(or\n  (send\n    (lvar :options) :[]\n    (sym :action))\n  (send nil :action_name)) to_s "," action_name ","options [] "," _prefix ","(send\n  (send\n    (lvar :options) :keys) :&\n  (array\n    (sym :partial)\n    (sym :file)\n    (sym :template))) empty? ","options keys & ","options keys ","options []= ","options [] == ","action index ","action to_s "," _prefixes ","(or\n  (send\n    (lvar :options) :[]\n    (sym :action to_s ))\n  (send nil :action to_s _name)) to_s "," action to_s _name ","action to_s  index ","action to_s  to_s "]}," AbstractController Rendering _normalize_args":{"type":"method","name":"_normalize_args","children":[],"call":["options merge! ","options []= ","action include? ","action to_s ","action is_a? "," raise ","action permitted? ","action respond_to? ","action to_s  include? ","action to_s  to_s ","action to_s  is_a? ","action to_s  permitted? ","action to_s  respond_to? "]}," AbstractController Rendering view_assigns":{"type":"method","name":"view_assigns","children":[],"call":["hash []= "," instance_variable_get ","name to_s [] ","name to_s ","variables each "," protected_instance_variables "," respond_to? "," instance_variable_names ","name length ","name [] "," instance_variables ","name slice ","variables each_with_object ","protected_vars include? ","variables reject! "," _protected_ivars "," instance_variables - "," instance_variable_names  each "," instance_variables  each "," instance_variables -  each "," protected_instance_ instance_variable_names  "," protected_instance_ instance_variables  "," protected_instance_ instance_variables -  "," instance_ instance_variable_names  "," instance_ instance_variables  "," instance_ instance_variables -  "," instance_variable_names  each_with_object "," instance_variables  each_with_object "," instance_variables -  each_with_object "," _protected_ivars  include? "," instance_variable_names  reject! "," instance_variables  reject! "," instance_variables -  reject! "," instance_ instance_variable_names  - "," instance_ instance_variables  - "," instance_ instance_variables -  - "]}," AbstractController Rendering _prefix":{"type":"method","name":"_prefix","children":[],"call":[" controller_path "]}," AbstractController Rendering _render_template":{"type":"method","name":"_render_template","children":[],"call":[" view_context render "," view_context "," view_context render_template "," view_renderer render "," view_renderer "," lookup_context rendered_format= "," lookup_context ","options [] "]}," AbstractController Rendering render_to_body":{"type":"method","name":"render_to_body","children":[],"call":[" _render_template "," _process_options "," _determine_template "," _render_partial ","options key? "]}," AbstractController Rendering render_to_string":{"type":"method","name":"render_to_string","children":[],"call":[" render_to_body "," _normalize_options "," _normalize_args ","AbstractController Rendering  body_to_s "," _normalize_render "," _normalize_ _normalize_args  "," _normalize_ _normalize_options  "," _normalize_ _normalize_render  "]}," AbstractController Rendering render":{"type":"method","name":"render","children":[],"call":[" response_body= "," render_to_string "," render_to_body "," _normalize_options "," _normalize_args "," _normalize_render "," response_body "," _process_format "," rendered_format "," _set_rendered_content_type "," _set_html_content_type ","options [] "," _set_vary_header "," _normalize_ _normalize_options  "," _normalize_ _normalize_args  "," _normalize_ _normalize_render  "," _normalize_options  [] "," _normalize_args  [] "," _normalize_render  [] "]}," AbstractController Rendering view_context":{"type":"method","name":"view_context","children":[],"call":[" view_context_class new "," view_assigns "," lookup_context "," view_context_class ","ActionView Base  for_controller "," view_renderer "]}," AbstractController Rendering initialize":{"type":"method","name":"initialize","children":[],"call":[]}," AbstractController Rendering view_context_class":{"type":"method","name":"view_context_class","children":[],"call":[" class view_context_class "," class "]}," AbstractController Rendering ClassMethods view_context_class":{"type":"method","name":"view_context_class","children":[],"call":[" helpers= ","controller _helpers "," include ","controller _routes url_helpers ","controller _routes ","controller respond_to? ","Class  new ","controller _router url_helpers ","controller _router ","ActionView Base  prepare "," _helpers "," respond_to? "," _routes ","routes mounted_helpers ","routes url_helpers ","  _helpers = ","controller _ _helpers  ","controller _routes url_ _helpers  ","controller _ _routes  url_helpers ","controller _ _routes  ","controller _router url_ _helpers  "," _ _helpers  "," _ _routes  ","routes mounted_ _helpers  "," _routes  mounted_helpers ","routes url_ _helpers  "," _routes  url_helpers "]}," AbstractController Rendering process":{"type":"method","name":"process","children":[],"call":["I18n  config= ","I18nProxy  new "," lookup_context ","I18n  config "]}," AbstractController I18nProxy locale=":{"type":"method","name":"locale=","children":[],"call":["@lookup_context locale= ","@lookup_context update_details ","@i18n_config locale ","@i18n_config locale= "]}," AbstractController I18nProxy locale":{"type":"method","name":"locale","children":[],"call":["@i18n_config locale ","@original_config locale "]}," AbstractController I18nProxy initialize":{"type":"method","name":"initialize","children":[],"call":["original_config original_config ","original_config respond_to? ","original_config original_config  original_config original_config  ","original_config original_config  respond_to? "]}," AbstractController DoubleRenderError initialize":{"type":"method","name":"initialize","children":[],"call":[]}," AbstractController Layouts _include_layout?":{"type":"method","name":"_include_layout?","children":[],"call":["options key? ","(send\n  (send\n    (lvar :options) :keys) :&\n  (array\n    (sym :text)\n    (sym :inline)\n    (sym :partial))) empty? ","options keys & ","options keys "]}," AbstractController Layouts _default_layout":{"type":"method","name":"_default_layout","children":[],"call":[" raise "," view_paths inspect "," view_paths "," class ","layout_name ! "," action_has_layout? ","@_layout inspect "," _layout "," _layout_for_name "," _action_has_layout? "," _layout ! ","e message "," _normalize_layout ","value ! "," _layout  ! "]}," AbstractController Layouts _layout_for_option":{"type":"method","name":"_layout_for_option","children":[],"call":[" raise ","name inspect "," _default_layout "," _layout_for_name ","Proc  new "," _normalize_layout "]}," AbstractController Layouts _layout":{"type":"method","name":"_layout","children":[],"call":[]}," AbstractController Layouts action_has_layout?":{"type":"method","name":"action_has_layout?","children":[],"call":[]}," AbstractController Layouts initialize":{"type":"method","name":"initialize","children":[],"call":[]}," AbstractController Layouts _normalize_options":{"type":"method","name":"_normalize_options","children":[],"call":["options []= ","value =~ "," _layout_for_option ","options delete ","options key? "," _include_layout? "," _layout_for_option  =~ "," _options delete _for_option "," _include_options delete ? "]}," AbstractController Layouts ClassMethods _write_layout_method":{"type":"method","name":"_write_layout_method","children":[],"call":[" private "," class_eval ","273 + "," _implied_layout_name ","_prefix inspect "," _implied_layout_name =~ "," name "," raise "," define_method ","252 + ","@_layout inspect "," remove_possible_method ","286 + ","267 + ","271 + ","250 + ","270 + ","249 + ","272 + ","_prefixes inspect ","251 + ","333 + ","inspect inspect ","prefixes inspect ","parent nil? ","parent inspect ","parent is_a? "," superclass instance_variable_get "," superclass ","332 + "," superclass instance_eval ","326 + "," _layout arity == "," _layout arity "," _layout "," protected "," _layout inspect ","321 + ","_prefix parent inspect  ","@_layout parent inspect  ","_prefixes parent inspect  ","parent inspect  parent inspect  ","prefixes parent inspect  "," superclass instance_variable_get  nil? ","parent parent inspect  "," superclass instance_variable_get  inspect "," superclass instance_variable_get  is_a? "," _layout parent inspect  "]}," AbstractController Layouts ClassMethods _implied_layout_name":{"type":"method","name":"_implied_layout_name","children":[],"call":[" controller_path "]}," AbstractController Layouts ClassMethods layout":{"type":"method","name":"layout","children":[],"call":[" _write_layout_method "," _layout_conditions= ","conditions []= ","a to_s "," Array map "," Array ","conditions each "," include ","conditions empty? "," _layout= "]}," AbstractController Layouts ClassMethods LayoutConditions action_has_layout?":{"type":"method","name":"action_has_layout?","children":[],"call":["except include? ! ","except include? "," action_name ","conditions [] ","only include? "," _layout_conditions ","conditions []  include? ! ","conditions []  include? "," _layout_conditions  [] "," _layout_ _layout_conditions  "]}," AbstractController Layouts ClassMethods inherited":{"type":"method","name":"inherited","children":[],"call":["klass _write_layout_method "," _write_layout_method ","klass class_eval "]}," AbstractController Helpers ClassMethods default_helper_module!":{"type":"method","name":"default_helper_module!","children":[],"call":[" raise ","e missing_name? ","e is_missing? "," helper ","module_name underscore "," name sub "," name "," freeze "," name delete_suffix "," name sub  underscore "]}," AbstractController Helpers ClassMethods modules_for_helpers":{"type":"method","name":"modules_for_helpers","children":[],"call":[" raise ","file_name camelize constantize ","file_name camelize "," require_dependency ","arg to_s underscore ","arg to_s ","args flatten map! ","args flatten ","MissingHelperError  new ","AbstractController Helpers MissingHelperError  new ","mod_name constantize ","(begin\n  (lvar :helper_prefix)) constantize ","helper_prefix camelize ","helper_prefix start_with? ","module_or_helper_prefix to_s ","modules_or_helper_prefixes flatten map! ","modules_or_helper_prefixes flatten ","file_name camelize  constantize ","(begin\n  (lvar :helper_prefix camelize )) constantize ","(begin\n  (lvar :module_or_helper_prefix to_s )) constantize ","helper_prefix camelize  camelize ","module_or_helper_prefix to_s  camelize ","helper_prefix camelize  start_with? ","module_or_helper_prefix to_s  start_with? ","module_or_helper_prefix camelize  to_s ","module_or_module_or_helper_prefix to_s  to_s ","modules_or_helper_prefix camelize es flatten map! ","modules_or_module_or_helper_prefix to_s es flatten map! ","modules_or_helper_prefix camelize es flatten ","modules_or_module_or_helper_prefix to_s es flatten "]}," AbstractController Helpers ClassMethods add_template_helper":{"type":"method","name":"add_template_helper","children":[],"call":[" include "," _helpers module_eval "," _helpers "]}," AbstractController Helpers ClassMethods clear_helpers":{"type":"method","name":"clear_helpers","children":[],"call":[" default_helper_module! "," anonymous? "," helper_method ","inherited_helper_methods each "," _helper_methods= ","Array  new "," _helpers= ","Module  new "," _helper_methods "," _helper_methods  each "]}," AbstractController Helpers ClassMethods helper":{"type":"method","name":"helper","children":[],"call":[" _helpers module_eval "," _helpers "," block_given? "," add_template_helper "," modules_for_helpers each "," modules_for_helpers "," _modules_for_helpers each "," _modules_for_helpers "," _helper_serial= ","AbstractController Helpers  next_serial + ","AbstractController Helpers  next_serial "," _helpers_for_modification module_eval "," _helpers_for_modification "," _helpers_for_modification include "," _helpers include? "]}," AbstractController Helpers ClassMethods helper_method":{"type":"method","name":"helper_method","children":[],"call":[" _helpers class_eval ","53 + "," _helpers ","meths each "," _helper_methods ","meths flatten! ","56 + ","meths flatten each ","meths flatten ","48 + ","47 + ","51 + ","68 + ","65 + ","66 + "," _helpers_for_modification class_eval "," _helpers_for_modification ","methods each ","location lineno ","location path "," caller_locations first "," caller_locations ","methods flatten! ","(str \"def \") lines map join ","(str \"def \") lines map ","(str \"def \") lines "," caller_locations first  lineno "," caller_locations first  path "," caller_ caller_locations first s first "," caller_ caller_locations first s "]}," AbstractController Helpers ClassMethods inherited":{"type":"method","name":"inherited","children":[],"call":[" default_helper_module! "," anonymous? ","klass class_eval ","klass _helpers= "," include ","Module  new "," _helpers "," name blank? "," name ","klass anonymous? ","klass _ _helpers = "," _ _helpers  "]}," AbstractController Collector method_missing":{"type":"method","name":"method_missing","children":[],"call":[" send ","AbstractController Collector  generate_method_for_mime ","Mime SET  include? ","Mime  const_get ","symbol to_s upcase ","symbol to_s ","symbol upcase "," raise ","Mime  const_defined? ","Mime  [] "," public_send "]}," AbstractController Collector generate_method_for_mime":{"type":"method","name":"generate_method_for_mime","children":[],"call":[]}," AbstractController Callbacks ClassMethods _insert_callbacks":{"type":"method","name":"_insert_callbacks","children":[],"call":["callbacks each ","callbacks push "," _normalize_callback_options ","callbacks pop ","callbacks last is_a? ","callbacks last ","callbacks extract_options! ","options delete ","options []= "," _normalize_callback_callbacks pop  "," _normalize_callback_callbacks extract_options!  ","callbacks extract_callbacks pop ! ","callbacks extract_callbacks extract_options! ! ","callbacks pop  delete ","callbacks extract_options!  delete ","callbacks pop  []= ","callbacks extract_options!  []= "]}," AbstractController Callbacks ClassMethods skip_filter":{"type":"method","name":"skip_filter","children":[],"call":[" skip_around_filter "," skip_after_filter "," skip_before_filter "," skip_action_callback ","ActiveSupport Deprecation  warn "," skip_around_action "," skip_after_action "," skip_before_action "]}," AbstractController Callbacks ClassMethods _normalize_callback_options":{"type":"method","name":"_normalize_callback_options","children":[],"call":["options []= ","(send\n  (send nil :Array\n    (lvar :except)) :map) join "," Array map "," Array ","options [] ","(send\n  (send nil :Array\n    (lvar :only)) :map) join "," _normalize_callback_option ","(send\n  (send nil :Array\n    (lvar :(send\n  (send nil :Array\n    (lvar :except)) :map) join )) :map) join ","(send\n  (send nil :Array\n    (lvar :options [] )) :map) join ","(send\n  (send nil :Array\n    (lvar :(send\n  (send nil :Array\n    (lvar :only)) :map) join )) :map) join "]}," AbstractController Callbacks process_action":{"type":"method","name":"process_action","children":[],"call":[" run_callbacks "," action_name "]}," AbstractController Base method_for_action":{"type":"method","name":"method_for_action","children":[],"call":[" respond_to? "," action_method? "]}," AbstractController Base _handle_action_missing":{"type":"method","name":"_handle_action_missing","children":[],"call":[" action_missing "]}," AbstractController Base process_action":{"type":"method","name":"process_action","children":[],"call":[" send_action "]}," AbstractController Base action_method?":{"type":"method","name":"action_method?","children":[],"call":[" class action_methods include? "," class action_methods "," class "]}," AbstractController Base action_methods":{"type":"method","name":"action_methods","children":[],"call":[" class action_methods "," class ","method =~ ","methods reject ","(send\n  (send nil :public_instance_methods\n    (true)) :map) to_set - + - "," hidden_actions ","(send\n  (send nil :public_instance_methods\n    (true)) :map) to_set - + ","m to_s "," public_instance_methods map "," public_instance_methods ","(send\n  (send nil :public_instance_methods\n    (true)) :map) to_set - "," internal_methods map "," internal_methods ","(send\n  (send nil :public_instance_methods\n    (true)) :map) to_set ","(send\n  (send\n    (begin\n      (send\n        (send\n          (send nil :public_instance_methods\n            (true)) :-\n          (send nil :internal_methods)) :+\n        (send nil :public_instance_methods\n          (false)))) :uniq) :map) - "," hidden_actions to_a ","x to_s ","(send\n  (send\n    (send nil :public_instance_methods\n      (true)) :-\n    (send nil :internal_methods)) :+\n  (send nil :public_instance_methods\n    (false))) uniq map ","(send\n  (send\n    (send nil :public_instance_methods\n      (true)) :-\n    (send nil :internal_methods)) :+\n  (send nil :public_instance_methods\n    (false))) uniq "," public_instance_methods - + "," public_instance_methods - ","Set  new ","methods to_set ","methods map! ","methods concat "," class action_(send\n  (send nil :public_instance_methods\n    (true)) :map) to_set - + -  "," class action_(send\n  (send\n    (begin\n      (send\n        (send\n          (send nil :public_instance_methods\n            (true)) :-\n          (send nil :internal_methods)) :+\n        (send nil :public_instance_methods\n          (false)))) :uniq) :map) -  "," class action_(send\n  (send\n    (send nil :public_instance_methods\n      (true)) :-\n    (send nil :internal_methods)) :+\n  (send nil :public_instance_methods\n    (false))) uniq map  "," class action_ public_instance_methods -  ","(send\n  (send nil :public_instance_methods\n    (true)) :map) to_set - + -  reject ","(send\n  (send\n    (begin\n      (send\n        (send\n          (send nil :public_instance_methods\n            (true)) :-\n          (send nil :internal_methods)) :+\n        (send nil :public_instance_methods\n          (false)))) :uniq) :map) -  reject ","(send\n  (send\n    (send nil :public_instance_methods\n      (true)) :-\n    (send nil :internal_methods)) :+\n  (send nil :public_instance_methods\n    (false))) uniq map  reject "," public_instance_methods -  reject ","(send\n  (send nil :public_instance_(send\n  (send nil :public_instance_methods\n    (true)) :map) to_set - + - \n    (true)) :map) to_set - + - ","(send\n  (send nil :public_instance_(send\n  (send\n    (begin\n      (send\n        (send\n          (send nil :public_instance_methods\n            (true)) :-\n          (send nil :internal_methods)) :+\n        (send nil :public_instance_methods\n          (false)))) :uniq) :map) - \n    (true)) :map) to_set - + - ","(send\n  (send nil :public_instance_(send\n  (send\n    (send nil :public_instance_methods\n      (true)) :-\n    (send nil :internal_methods)) :+\n  (send nil :public_instance_methods\n    (false))) uniq map \n    (true)) :map) to_set - + - ","(send\n  (send nil :public_instance_ public_instance_methods - \n    (true)) :map) to_set - + - ","(send\n  (send nil :public_instance_(send\n  (send nil :public_instance_methods\n    (true)) :map) to_set - + - \n    (true)) :map) to_set - + ","(send\n  (send nil :public_instance_(send\n  (send\n    (begin\n      (send\n        (send\n          (send nil :public_instance_methods\n            (true)) :-\n          (send nil :internal_methods)) :+\n        (send nil :public_instance_methods\n          (false)))) :uniq) :map) - \n    (true)) :map) to_set - + ","(send\n  (send nil :public_instance_(send\n  (send\n    (send nil :public_instance_methods\n      (true)) :-\n    (send nil :internal_methods)) :+\n  (send nil :public_instance_methods\n    (false))) uniq map \n    (true)) :map) to_set - + ","(send\n  (send nil :public_instance_ public_instance_methods - \n    (true)) :map) to_set - + "," public_instance_(send\n  (send nil :public_instance_methods\n    (true)) :map) to_set - + -  map "," public_instance_(send\n  (send\n    (begin\n      (send\n        (send\n          (send nil :public_instance_methods\n            (true)) :-\n          (send nil :internal_methods)) :+\n        (send nil :public_instance_methods\n          (false)))) :uniq) :map) -  map "," public_instance_(send\n  (send\n    (send nil :public_instance_methods\n      (true)) :-\n    (send nil :internal_methods)) :+\n  (send nil :public_instance_methods\n    (false))) uniq map  map "," public_instance_ public_instance_methods -  map "," public_instance_(send\n  (send nil :public_instance_methods\n    (true)) :map) to_set - + -  "," public_instance_(send\n  (send\n    (begin\n      (send\n        (send\n          (send nil :public_instance_methods\n            (true)) :-\n          (send nil :internal_methods)) :+\n        (send nil :public_instance_methods\n          (false)))) :uniq) :map) -  "," public_instance_(send\n  (send\n    (send nil :public_instance_methods\n      (true)) :-\n    (send nil :internal_methods)) :+\n  (send nil :public_instance_methods\n    (false))) uniq map  "," public_instance_ public_instance_methods -  ","(send\n  (send nil :public_instance_(send\n  (send nil :public_instance_methods\n    (true)) :map) to_set - + - \n    (true)) :map) to_set - ","(send\n  (send nil :public_instance_(send\n  (send\n    (begin\n      (send\n        (send\n          (send nil :public_instance_methods\n            (true)) :-\n          (send nil :internal_methods)) :+\n        (send nil :public_instance_methods\n          (false)))) :uniq) :map) - \n    (true)) :map) to_set - ","(send\n  (send nil :public_instance_(send\n  (send\n    (send nil :public_instance_methods\n      (true)) :-\n    (send nil :internal_methods)) :+\n  (send nil :public_instance_methods\n    (false))) uniq map \n    (true)) :map) to_set - ","(send\n  (send nil :public_instance_ public_instance_methods - \n    (true)) :map) to_set - "," internal_(send\n  (send nil :public_instance_methods\n    (true)) :map) to_set - + -  map "," internal_(send\n  (send\n    (begin\n      (send\n        (send\n          (send nil :public_instance_methods\n            (true)) :-\n          (send nil :internal_methods)) :+\n        (send nil :public_instance_methods\n          (false)))) :uniq) :map) -  map "," internal_(send\n  (send\n    (send nil :public_instance_methods\n      (true)) :-\n    (send nil :internal_methods)) :+\n  (send nil :public_instance_methods\n    (false))) uniq map  map "," internal_ public_instance_methods -  map "," internal_(send\n  (send nil :public_instance_methods\n    (true)) :map) to_set - + -  "," internal_(send\n  (send\n    (begin\n      (send\n        (send\n          (send nil :public_instance_methods\n            (true)) :-\n          (send nil :internal_methods)) :+\n        (send nil :public_instance_methods\n          (false)))) :uniq) :map) -  "," internal_(send\n  (send\n    (send nil :public_instance_methods\n      (true)) :-\n    (send nil :internal_methods)) :+\n  (send nil :public_instance_methods\n    (false))) uniq map  "," internal_ public_instance_methods -  ","(send\n  (send nil :public_instance_(send\n  (send nil :public_instance_methods\n    (true)) :map) to_set - + - \n    (true)) :map) to_set ","(send\n  (send nil :public_instance_(send\n  (send\n    (begin\n      (send\n        (send\n          (send nil :public_instance_methods\n            (true)) :-\n          (send nil :internal_methods)) :+\n        (send nil :public_instance_methods\n          (false)))) :uniq) :map) - \n    (true)) :map) to_set ","(send\n  (send nil :public_instance_(send\n  (send\n    (send nil :public_instance_methods\n      (true)) :-\n    (send nil :internal_methods)) :+\n  (send nil :public_instance_methods\n    (false))) uniq map \n    (true)) :map) to_set ","(send\n  (send nil :public_instance_ public_instance_methods - \n    (true)) :map) to_set ","(send\n  (send\n    (begin\n      (send\n        (send\n          (send nil :public_instance_(send\n  (send nil :public_instance_methods\n    (true)) :map) to_set - + - \n            (true)) :-\n          (send nil :internal_(send\n  (send nil :public_instance_methods\n    (true)) :map) to_set - + - )) :+\n        (send nil :public_instance_(send\n  (send nil :public_instance_methods\n    (true)) :map) to_set - + - \n          (false)))) :uniq) :map) - ","(send\n  (send\n    (begin\n      (send\n        (send\n          (send nil :public_instance_(send\n  (send\n    (begin\n      (send\n        (send\n          (send nil :public_instance_methods\n            (true)) :-\n          (send nil :internal_methods)) :+\n        (send nil :public_instance_methods\n          (false)))) :uniq) :map) - \n            (true)) :-\n          (send nil :internal_(send\n  (send\n    (begin\n      (send\n        (send\n          (send nil :public_instance_methods\n            (true)) :-\n          (send nil :internal_methods)) :+\n        (send nil :public_instance_methods\n          (false)))) :uniq) :map) - )) :+\n        (send nil :public_instance_(send\n  (send\n    (begin\n      (send\n        (send\n          (send nil :public_instance_methods\n            (true)) :-\n          (send nil :internal_methods)) :+\n        (send nil :public_instance_methods\n          (false)))) :uniq) :map) - \n          (false)))) :uniq) :map) - ","(send\n  (send\n    (begin\n      (send\n        (send\n          (send nil :public_instance_(send\n  (send\n    (send nil :public_instance_methods\n      (true)) :-\n    (send nil :internal_methods)) :+\n  (send nil :public_instance_methods\n    (false))) uniq map \n            (true)) :-\n          (send nil :internal_(send\n  (send\n    (send nil :public_instance_methods\n      (true)) :-\n    (send nil :internal_methods)) :+\n  (send nil :public_instance_methods\n    (false))) uniq map )) :+\n        (send nil :public_instance_(send\n  (send\n    (send nil :public_instance_methods\n      (true)) :-\n    (send nil :internal_methods)) :+\n  (send nil :public_instance_methods\n    (false))) uniq map \n          (false)))) :uniq) :map) - ","(send\n  (send\n    (begin\n      (send\n        (send\n          (send nil :public_instance_ public_instance_methods - \n            (true)) :-\n          (send nil :internal_ public_instance_methods - )) :+\n        (send nil :public_instance_ public_instance_methods - \n          (false)))) :uniq) :map) - ","(send\n  (send\n    (send nil :public_instance_(send\n  (send nil :public_instance_methods\n    (true)) :map) to_set - + - \n      (true)) :-\n    (send nil :internal_(send\n  (send nil :public_instance_methods\n    (true)) :map) to_set - + - )) :+\n  (send nil :public_instance_(send\n  (send nil :public_instance_methods\n    (true)) :map) to_set - + - \n    (false))) uniq map ","(send\n  (send\n    (send nil :public_instance_(send\n  (send\n    (begin\n      (send\n        (send\n          (send nil :public_instance_methods\n            (true)) :-\n          (send nil :internal_methods)) :+\n        (send nil :public_instance_methods\n          (false)))) :uniq) :map) - \n      (true)) :-\n    (send nil :internal_(send\n  (send\n    (begin\n      (send\n        (send\n          (send nil :public_instance_methods\n            (true)) :-\n          (send nil :internal_methods)) :+\n        (send nil :public_instance_methods\n          (false)))) :uniq) :map) - )) :+\n  (send nil :public_instance_(send\n  (send\n    (begin\n      (send\n        (send\n          (send nil :public_instance_methods\n            (true)) :-\n          (send nil :internal_methods)) :+\n        (send nil :public_instance_methods\n          (false)))) :uniq) :map) - \n    (false))) uniq map ","(send\n  (send\n    (send nil :public_instance_(send\n  (send\n    (send nil :public_instance_methods\n      (true)) :-\n    (send nil :internal_methods)) :+\n  (send nil :public_instance_methods\n    (false))) uniq map \n      (true)) :-\n    (send nil :internal_(send\n  (send\n    (send nil :public_instance_methods\n      (true)) :-\n    (send nil :internal_methods)) :+\n  (send nil :public_instance_methods\n    (false))) uniq map )) :+\n  (send nil :public_instance_(send\n  (send\n    (send nil :public_instance_methods\n      (true)) :-\n    (send nil :internal_methods)) :+\n  (send nil :public_instance_methods\n    (false))) uniq map \n    (false))) uniq map ","(send\n  (send\n    (send nil :public_instance_ public_instance_methods - \n      (true)) :-\n    (send nil :internal_ public_instance_methods - )) :+\n  (send nil :public_instance_ public_instance_methods - \n    (false))) uniq map ","(send\n  (send\n    (send nil :public_instance_(send\n  (send nil :public_instance_methods\n    (true)) :map) to_set - + - \n      (true)) :-\n    (send nil :internal_(send\n  (send nil :public_instance_methods\n    (true)) :map) to_set - + - )) :+\n  (send nil :public_instance_(send\n  (send nil :public_instance_methods\n    (true)) :map) to_set - + - \n    (false))) uniq ","(send\n  (send\n    (send nil :public_instance_(send\n  (send\n    (begin\n      (send\n        (send\n          (send nil :public_instance_methods\n            (true)) :-\n          (send nil :internal_methods)) :+\n        (send nil :public_instance_methods\n          (false)))) :uniq) :map) - \n      (true)) :-\n    (send nil :internal_(send\n  (send\n    (begin\n      (send\n        (send\n          (send nil :public_instance_methods\n            (true)) :-\n          (send nil :internal_methods)) :+\n        (send nil :public_instance_methods\n          (false)))) :uniq) :map) - )) :+\n  (send nil :public_instance_(send\n  (send\n    (begin\n      (send\n        (send\n          (send nil :public_instance_methods\n            (true)) :-\n          (send nil :internal_methods)) :+\n        (send nil :public_instance_methods\n          (false)))) :uniq) :map) - \n    (false))) uniq ","(send\n  (send\n    (send nil :public_instance_(send\n  (send\n    (send nil :public_instance_methods\n      (true)) :-\n    (send nil :internal_methods)) :+\n  (send nil :public_instance_methods\n    (false))) uniq map \n      (true)) :-\n    (send nil :internal_(send\n  (send\n    (send nil :public_instance_methods\n      (true)) :-\n    (send nil :internal_methods)) :+\n  (send nil :public_instance_methods\n    (false))) uniq map )) :+\n  (send nil :public_instance_(send\n  (send\n    (send nil :public_instance_methods\n      (true)) :-\n    (send nil :internal_methods)) :+\n  (send nil :public_instance_methods\n    (false))) uniq map \n    (false))) uniq ","(send\n  (send\n    (send nil :public_instance_ public_instance_methods - \n      (true)) :-\n    (send nil :internal_ public_instance_methods - )) :+\n  (send nil :public_instance_ public_instance_methods - \n    (false))) uniq "," public_instance_(send\n  (send nil :public_instance_methods\n    (true)) :map) to_set - + -  - + "," public_instance_(send\n  (send\n    (begin\n      (send\n        (send\n          (send nil :public_instance_methods\n            (true)) :-\n          (send nil :internal_methods)) :+\n        (send nil :public_instance_methods\n          (false)))) :uniq) :map) -  - + "," public_instance_(send\n  (send\n    (send nil :public_instance_methods\n      (true)) :-\n    (send nil :internal_methods)) :+\n  (send nil :public_instance_methods\n    (false))) uniq map  - + "," public_instance_ public_instance_methods -  - + "," public_instance_(send\n  (send nil :public_instance_methods\n    (true)) :map) to_set - + -  - "," public_instance_(send\n  (send\n    (begin\n      (send\n        (send\n          (send nil :public_instance_methods\n            (true)) :-\n          (send nil :internal_methods)) :+\n        (send nil :public_instance_methods\n          (false)))) :uniq) :map) -  - "," public_instance_(send\n  (send\n    (send nil :public_instance_methods\n      (true)) :-\n    (send nil :internal_methods)) :+\n  (send nil :public_instance_methods\n    (false))) uniq map  - "," public_instance_ public_instance_methods -  - ","(send\n  (send nil :public_instance_methods\n    (true)) :map) to_set - + -  to_set ","(send\n  (send\n    (begin\n      (send\n        (send\n          (send nil :public_instance_methods\n            (true)) :-\n          (send nil :internal_methods)) :+\n        (send nil :public_instance_methods\n          (false)))) :uniq) :map) -  to_set ","(send\n  (send\n    (send nil :public_instance_methods\n      (true)) :-\n    (send nil :internal_methods)) :+\n  (send nil :public_instance_methods\n    (false))) uniq map  to_set "," public_instance_methods -  to_set ","(send\n  (send nil :public_instance_methods\n    (true)) :map) to_set - + -  map! ","(send\n  (send\n    (begin\n      (send\n        (send\n          (send nil :public_instance_methods\n            (true)) :-\n          (send nil :internal_methods)) :+\n        (send nil :public_instance_methods\n          (false)))) :uniq) :map) -  map! ","(send\n  (send\n    (send nil :public_instance_methods\n      (true)) :-\n    (send nil :internal_methods)) :+\n  (send nil :public_instance_methods\n    (false))) uniq map  map! "," public_instance_methods -  map! ","(send\n  (send nil :public_instance_methods\n    (true)) :map) to_set - + -  concat ","(send\n  (send\n    (begin\n      (send\n        (send\n          (send nil :public_instance_methods\n            (true)) :-\n          (send nil :internal_methods)) :+\n        (send nil :public_instance_methods\n          (false)))) :uniq) :map) -  concat ","(send\n  (send\n    (send nil :public_instance_methods\n      (true)) :-\n    (send nil :internal_methods)) :+\n  (send nil :public_instance_methods\n    (false))) uniq map  concat "," public_instance_methods -  concat "]}," AbstractController Base controller_path":{"type":"method","name":"controller_path","children":[],"call":[" class controller_path "," class "," name sub underscore "," name sub "," name "," anonymous? "," freeze "," name delete_suffix underscore "," name delete_suffix "]}," AbstractController Base process":{"type":"method","name":"process","children":[],"call":[" process_action "," raise "," class name "," class "," method_for_action ","action to_s "," _find_action_name ","ActionNotFound  new "," _find_ method_for_action  "," _find_action to_s  "," _find_ _find_action_name  "]}," AbstractController Base method_added":{"type":"method","name":"method_added","children":[],"call":[" clear_action_methods! "]}," AbstractController Base clear_action_methods!":{"type":"method","name":"clear_action_methods!","children":[],"call":[]}," AbstractController Base hidden_actions":{"type":"method","name":"hidden_actions","children":[],"call":[]}," AbstractController Base internal_methods":{"type":"method","name":"internal_methods","children":[],"call":["controller public_instance_methods ","controller superclass ","controller abstract? ","controller public_instance_methods - ","controller superclass  public_instance_methods ","controller superclass  superclass ","controller superclass  abstract? ","controller superclass  public_instance_methods - "]}," AbstractController Base abstract!":{"type":"method","name":"abstract!","children":[],"call":[]}," ActionView Template partial?":{"type":"method","name":"partial?","children":[],"call":["@details [] "]}," ActionView Template Text mime_type":{"type":"method","name":"mime_type","children":[],"call":[]}," ActionView Template Text details":{"type":"method","name":"details","children":[],"call":["@content_type to_sym "]}," ActionView FileSystemResolverWithFallback to_s":{"type":"method","name":"to_s","children":[],"call":["@paths first to_s ","@paths first "]}," ActionView FileSystemResolverWithFallback find_templates":{"type":"method","name":"find_templates","children":[],"call":["template empty? ","p find_templates ","@paths each ","p find_templates  empty? ","p find_p find_templates s "]}," ActionView FileSystemResolverWithFallback initialize":{"type":"method","name":"initialize","children":[],"call":["FileSystemResolver  new "]}," ActionView PathResolver path_to_details":{"type":"method","name":"path_to_details","children":[],"call":["m [] gsub << ","details join ","m [] gsub ","m [] ","details pop to_sym ","details pop ","details last ","Mime  [] ","Template  handler_class_for_extension ","e empty? ","(or\n  (send\n    (lvar :m) :[]\n    (int 4))\n  (str \"\")) split reject ","(or\n  (send\n    (lvar :m) :[]\n    (int 4))\n  (str \"\")) split ","m [] == ","path match ","path match  [] gsub << ","path match  [] gsub ","path match  [] ","details pop to_sypath match  ","Mipath match e  [] ","Template  Template  handler_class_for_extension _class_for_extension ","Tepath match plate  handler_class_for_extension ","e epath match pty? ","(or\n  (send\n    (lvar :path match ) :[]\n    (int 4))\n  (str \"\")) split reject ","(or\n  (send\n    (lvar :path match ) :[]\n    (int 4))\n  (str \"\")) split ","path match  [] == ","path path match atch "]}," ActionView Resolver normalize_name":{"type":"method","name":"normalize_name","children":[],"call":["(lvar :prefix) compact join ","(lvar :prefix) compact ","parts pop ","name split ","name to_s gsub ","name to_s ","Template Handlers  extensions join ","Template Handlers  extensions ","name split  pop ","name to_s gsub  split ","name to_s gsub  to_s gsub ","name to_s gsub  to_s "]}," ActionView Resolver normalize_details":{"type":"method","name":"normalize_details","children":[],"call":["details []= ","v call ","details [] "," registered_details each "," registered_details ","details delete ","details [] == ","details dup ","details dup  []= ","details dup  [] "," registered_details dup  each "," registered_details dup  ","details dup  delete ","details dup  [] == ","details dup  dup "]}," ActionView Resolver find":{"type":"method","name":"find","children":[],"call":[" find_all first "," find_all "]}," ActionView Resolver register_detail":{"type":"method","name":"register_detail","children":[],"call":[]}," ActionView Handlers ERB compile":{"type":"method","name":"compile","children":[],"call":[" class erubis_implementation new src "," class erubis_implementation new "," class erb_trim_mode == "," class erb_trim_mode "," class "," class erubis_implementation ","template source gsub ","template source "," class erb_implementation new src "," class erb_implementation new "," class erb_implementation ","template template source gsub  gsub ","template template source gsub  "]}," ActionView Handlers Erubis add_postamble":{"type":"method","name":"add_postamble","children":[],"call":["src << "]}," ActionView Handlers Erubis add_expr_escaped":{"type":"method","name":"add_expr_escaped","children":[],"call":["src << << << ","src << << "," escaped_expr ","src << "]}," ActionView Handlers Erubis add_expr_literal":{"type":"method","name":"add_expr_literal","children":[],"call":["src << << << ","src << << ","src << ","code =~ "]}," ActionView Handlers Erubis add_text":{"type":"method","name":"add_text","children":[],"call":["src << << << ","src << << "," escape_text ","src << ","text empty? "]}," ActionView Handlers Erubis add_preamble":{"type":"method","name":"add_preamble","children":[],"call":["src << "]}," ActionView Template Error compute_backtrace":{"type":"method","name":"compute_backtrace","children":[],"call":["(begin\n  (send\n    (send nil :source_location) :capitalize)) + "," clean_backtrace join "," clean_backtrace "," source_extract "," source_location capitalize "," source_location "]}," ActionView Template Error backtrace":{"type":"method","name":"backtrace","children":[],"call":[]}," ActionView Template Error to_s":{"type":"method","name":"to_s","children":[],"call":["(str \"\\n\") + "," clean_backtrace join "," clean_backtrace "," source_extract "," source_location "," message "," class "]}," ActionView Template Error clean_backtrace":{"type":"method","name":"clean_backtrace","children":[],"call":[" original_exception backtrace "," original_exception ","Rails  backtrace_cleaner clean ","Rails  backtrace_cleaner ","Rails  respond_to? "]}," ActionView Rendering _render_layout":{"type":"method","name":"_render_layout","children":[],"call":[" _layout_for ","layout render "]}," ActionView Rendering render_template":{"type":"method","name":"render_template","children":[],"call":[" _render_template ","options values_at "," _evaluate_assigns_and_ivars "]}," ActionView Rendering _layout_for":{"type":"method","name":"_layout_for","children":[],"call":[" capture ","@_content_for [] "," block_given? ! "," block_given? "]}," ActionView Partials PartialRenderer _find_template":{"type":"method","name":"_find_template","children":[],"call":["@view find ","@view formats ","controller controller_path ","path include? ","@view controller ","@view controller  @view controller _path ","@view @view controller  "]}," ActionView Railties Subscriber from_rails_root":{"type":"method","name":"from_rails_root","children":[],"call":["string sub sub ","string sub ","Rails  root "]}," ActionView Railties Subscriber logger":{"type":"method","name":"logger","children":[],"call":["ActionController Base  logger "]}," ActionView Railties Subscriber render_template":{"type":"method","name":"render_template","children":[],"call":[" info ","message << "," (%.1fms) % ","event duration "," from_rails_root ","event payload [] ","event payload "]}," ActionView Helpers UrlHelper default_url_options":{"type":"method","name":"default_url_options","children":[],"call":[" controller send "," controller "]}," ActionView Helpers PrototypeHelper button_to_function":{"type":"method","name":"button_to_function","children":[],"call":[" tag ","html_options merge ","html_options [] ","args [] "," update_page "," block_given? ","args extract_options! symbolize_keys ","args extract_options! ","args extract_options! symbolize_keys  merge ","args extract_options! symbolize_keys  [] "]}," ActionView Helpers ActiveRecordInstanceTag column_type":{"type":"method","name":"column_type","children":[],"call":[" object send type "," object send "," object "]}," ActionView Helpers ActiveRecordInstanceTag error_wrapping":{"type":"method","name":"error_wrapping","children":[],"call":["Base  field_error_proc call ","Base  field_error_proc "," object errors [] any? "," object errors [] "," object errors "," object "," object errors respond_to? "," object respond_to? "]}," ActionView Helpers ActiveRecordInstanceTag to_tag":{"type":"method","name":"to_tag","children":[],"call":[" to_boolean_select_tag "," to_time_select_tag "," to_datetime_select_tag "," to_date_select_tag "," to_input_field_tag "," to_text_area_tag ","@method_name include? "," column_type "]}," ActionView Helpers ActiveRecordInstanceTag object":{"type":"method","name":"object","children":[],"call":["object to_model ","object respond_to? "]}," ActionView Helpers ActiveModelHelper default_input_block":{"type":"method","name":"default_input_block","children":[],"call":[" input ","column name ","column human_name ","Proc  new "]}," ActionView Helpers ActiveModelHelper all_input_tags":{"type":"method","name":"all_input_tags","children":[],"call":["(send\n  (send\n    (send\n      (lvar :record) :class) :content_columns) :collect) join ","input_block call ","record class content_columns collect ","record class content_columns ","record class "," default_input_block ","options [] "]}," ActionView Helpers ActiveModelHelper error_messages_for":{"type":"method","name":"error_messages_for","children":[],"call":[" content_tag ","contents << ","message blank? ","options [] ","header_message blank? ","(send\n  (lvar :objects) :sum) join ","ERB Util  html_escape ","object errors full_messages map ","object errors full_messages ","object errors ","objects sum ","locale t ","options include? ","options [] to_s gsub ","options [] to_s ","I18n  with_options ","params first ","html []= ","value blank? ","(sym :id) each ","count zero? ","sum + ","object errors count ","objects inject ","objects compact! ","object class model_name human downcase ","object class model_name human ","object class model_name ","object class ","object class respond_to? "," convert_to_model "," instance_variable_get ","object respond_to? ","Array  wrap map ","Array  wrap ","options delete ","params extract_options! symbolize_keys ","params extract_options! ","contents html_safe ","(send\n  (lvar :objects) :sum) join html_safe ","locale t  blank? ","options []  blank? ","params extract_options! symbolize_keys  [] ","header_locale t  blank? ","header_options []  blank? ","(send\n  (lvar : convert_to_model s) :sum) join ","(send\n  (lvar : instance_variable_get s) :sum) join ","object errors full_locale t s map ","object errors full_options [] s map "," convert_to_model  errors full_messages map "," instance_variable_get  errors full_messages map ","object errors full_locale t s ","object errors full_options [] s "," convert_to_model  errors full_messages "," instance_variable_get  errors full_messages "," convert_to_model  errors "," instance_variable_get  errors "," convert_to_model s sum "," instance_variable_get s sum ","params extract_options! symbolize_keys  include? ","params extract_options! symbolize_keys  [] to_s gsub ","params extract_options! symbolize_keys  [] to_s ","I18n  with_params extract_options! symbolize_keys  "," convert_to_model  errors count "," instance_variable_get  errors count "," convert_to_model s inject "," instance_variable_get s inject "," convert_to_model s compact! "," instance_variable_get s compact! "," convert_to_model  class model_name human downcase "," instance_variable_get  class model_name human downcase "," convert_to_model  class model_name human "," instance_variable_get  class model_name human "," convert_to_model  class model_name "," instance_variable_get  class model_name "," convert_to_model  class "," instance_variable_get  class "," convert_to_model  class respond_to? "," instance_variable_get  class respond_to? "," convert_to_model  respond_to? "," instance_variable_get  respond_to? ","params extract_options! symbolize_keys  delete ","params extract_params extract_options! symbolize_keys ! symbolize_keys ","params extract_params extract_options! symbolize_keys ! ","(send\n  (lvar : convert_to_model s) :sum) join html_safe ","(send\n  (lvar : instance_variable_get s) :sum) join html_safe "]}," ActionView Helpers ActiveModelHelper error_message_on":{"type":"method","name":"error_message_on","children":[],"call":[" content_tag ","options [] ","ERB Util  html_escape ","errors first ","obj errors [] ","obj errors "," instance_variable_get ","object respond_to? "," convert_to_model ","options reverse_merge! ","options []= ","args [] ","ActiveSupport Deprecation  warn "," caller ","error_message_on takes an option hash instead of separate  + ","args empty? ","args extract_options! ","(send\n  (send\n    (send\n      (lvar :options) :[]\n      (sym :prepend_text)) :html_safe) :<<\n  (send\n    (lvar :errors) :first)) safe_concat ","options [] html_safe << ","options [] html_safe ","(lvasgn :errors\n  (send\n    (send\n      (lvar :obj) :errors) :[]\n    (lvar :method))) presence ","args extract_options!  [] ","obj errors []  first ","obj obj errors []  [] ","obj obj errors []  "," convert_to_model  respond_to? ","args extract_options!  reverse_merge! ","args extract_options!  []= ","args extract_args extract_options! ! ","(send\n  (send\n    (send\n      (lvar :options) :[]\n      (sym :prepend_text)) :html_safe) :<<\n  (send\n    (lvar :obj errors [] ) :first)) safe_concat ","(send\n  (send\n    (send\n      (lvar :args extract_options! ) :[]\n      (sym :prepend_text)) :html_safe) :<<\n  (send\n    (lvar :errors) :first)) safe_concat ","args extract_options!  [] html_safe << ","args extract_options!  [] html_safe ","(lvasgn :obj errors [] \n  (send\n    (send\n      (lvar :obj) :obj errors [] ) :[]\n    (lvar :method))) presence "]}," ActionView Helpers ActiveModelHelper form":{"type":"method","name":"form","children":[],"call":["contents safe_concat "," submit_tag "," block_given? "," all_input_tags "," hidden_field ","record new_record? "," form_tag ","options [] ","options [] gsub capitalize ","options [] gsub "," url_for ","options symbolize_keys "," convert_to_model "," instance_variable_get ","record persisted? "," form_tag  safe_concat "," convert_to_model  new_ convert_to_model ? "," instance_variable_get  new_ instance_variable_get ? ","options symbolize_keys  [] ","options symbolize_keys  [] gsub capitalize ","options symbolize_keys  [] gsub ","options symbolize_keys  symbolize_keys "," convert_to_model  persisted? "," instance_variable_get  persisted? "]}," ActionView Helpers ActiveModelHelper input":{"type":"method","name":"input","children":[],"call":["InstanceTag  new to_tag ","InstanceTag  new "]}," ActionView Base punctuate_body!":{"type":"method","name":"punctuate_body!","children":[],"call":[" response body_parts << "," response body_parts "," response "," flush_output_buffer "]}," ActionView Base for_controller":{"type":"method","name":"for_controller","children":[],"call":[]}," ActionView Base reset_formats":{"type":"method","name":"reset_formats","children":[],"call":["Thread  current []= ","AbstractController HashKey  get ","I18n  locale "," class ","Thread  current "]}," ActionView Base config=":{"type":"method","name":"config=","children":[],"call":["ActiveSupport OrderedOptions  new merge ","ActiveSupport OrderedOptions  new "]}," ActionView Base config":{"type":"method","name":"config","children":[],"call":[" config= "]}," ActionDispatch Integration Session generic_url_rewriter":{"type":"method","name":"generic_url_rewriter","children":[],"call":["ActionController UrlRewriter  new ","ActionDispatch Request  new "," https? "," host "]}," ActionDispatch Integration Session url_for":{"type":"method","name":"url_for","children":[],"call":[" generic_url_rewriter rewrite "," generic_url_rewriter "," controller url_for "," controller "]}," ActionDispatch Assertions ResponseAssertions assert_template":{"type":"method","name":"assert_template","children":[],"call":[" assert ","@controller template rendered [] empty? ","@controller template rendered [] ","@controller template rendered ","@controller template ","p identifier match ","p identifier ","partials keys any? ","partials keys "," build_message ","options [] ","actual_count == ","expected_count to_i ","found second ","found nil? ","partials detect ","t match ","rendered any? ","@controller template rendered [] blank? ","options nil? "," assert_block ","rendered join ","t identifier ","(or\n  (send\n    (send\n      (send\n        (ivar :@controller) :template) :rendered) :[]\n    (sym :template))\n  (array)) map "," validate_request! ","@controller template rendered []  keys any? ","@controller template rendered []  keys ","found second  == ","options []  to_i ","@controller template rendered []  detect "]}," ActionDispatch Assertions ModelAssertions assert_valid":{"type":"method","name":"assert_valid","children":[],"call":[" assert ","record errors full_messages join ","record errors full_messages ","record errors ","record valid? "," ActiveSupport Deprecation  warn "," caller "]}," ActionDispatch Routing RouteSet build_expiry":{"type":"method","name":"build_expiry","children":[],"call":["expiry []= ","options [] to_param != ","recalled_value to_param ","options [] to_param ","options [] ","options key? ","recall inject "]}," ActionDispatch Routing RouteSet options_as_params":{"type":"method","name":"options_as_params","children":[],"call":["options_as_params []= ","options_as_params [] to_s ","options_as_params [] ","options [] ","options clone ","options clone  []= ","options clone  [] to_s ","options clone  [] "]}," ActionDispatch Routing Mapper Resources with_exclusive_name_prefix":{"type":"method","name":"with_exclusive_name_prefix","children":[],"call":["@scope []= ","prefix to_s ","@scope [] ","old_name_prefix blank? ! ","old_name_prefix blank? ","@scope []  blank? ! ","@scope []  blank? "]}," ActionDispatch Routing Mapper Resources verify_common_behavior_for":{"type":"method","name":"verify_common_behavior_for","children":[],"call":[" send ","resources pop "," nested ","@scope [] == ","@scope [] "," scope ","options delete ","resources each ","resources length > ","resources length "]}," ActionDispatch Routing Mapper Resources SingletonResource name":{"type":"method","name":"name","children":[],"call":[" singular "," options [] "," options "]}," ActionDispatch Routing Mapper Resources SingletonResource action_type":{"type":"method","name":"action_type","children":[],"call":[]}," ActionDispatch Routing Mapper Resources SingletonResource default_actions":{"type":"method","name":"default_actions","children":[],"call":[]}," ActionDispatch Routing Mapper Resources Resource id_segment":{"type":"method","name":"id_segment","children":[],"call":[" singular "]}," ActionDispatch Routing Mapper Resources Resource name_for_action":{"type":"method","name":"name_for_action","children":[],"call":[" member_name "," collection_name "," action_type "]}," ActionDispatch Routing Mapper Resources Resource member_name":{"type":"method","name":"member_name","children":[],"call":[" singular "]}," ActionDispatch Routing Mapper Resources Resource controller":{"type":"method","name":"controller","children":[],"call":[" plural "," options [] "," options "]}," ActionDispatch Routing Mapper Resources Resource action_type":{"type":"method","name":"action_type","children":[],"call":[]}," ActionDispatch Routing Mapper Scoping merge_resources_path_names_scope":{"type":"method","name":"merge_resources_path_names_scope","children":[],"call":[" merge_options_scope "]}," ActionDispatch Routing Mapper Scoping merge_namespace_scope":{"type":"method","name":"merge_namespace_scope","children":[],"call":[]}," ActionDispatch Routing Mapper Scoping merge_name_prefix_scope":{"type":"method","name":"merge_name_prefix_scope","children":[],"call":[]}," ActionDispatch Routing Mapper Scoping match":{"type":"method","name":"match","children":[],"call":["args push ","options []= ","@scope [] to_s ","@scope [] ","options [] == ","options [] ","options [] blank? ! ","options [] blank? ","(or\n  (send\n    (ivar :@scope) :[]\n    (sym :options))\n  (hash)) merge ","args extract_options! ","(or\n  (send\n    (ivar :@scope) :[]\n    (sym :options))\n  (hash)) merge  []= ","args extract_options!  []= ","(or\n  (send\n    (ivar :@scope) :[]\n    (sym :options))\n  (hash)) merge  [] == ","args extract_options!  [] == ","(or\n  (send\n    (ivar :@scope) :[]\n    (sym :options))\n  (hash)) merge  [] ","args extract_options!  [] ","(or\n  (send\n    (ivar :@scope) :[]\n    (sym :options))\n  (hash)) merge  [] blank? ! ","args extract_options!  [] blank? ! ","(or\n  (send\n    (ivar :@scope) :[]\n    (sym :options))\n  (hash)) merge  [] blank? ","args extract_options!  [] blank? ","(or\n  (send\n    (ivar :@scope) :[]\n    (sym :(or\n  (send\n    (ivar :@scope) :[]\n    (sym :options))\n  (hash)) merge ))\n  (hash)) merge ","(or\n  (send\n    (ivar :@scope) :[]\n    (sym :args extract_options! ))\n  (hash)) merge ","args extract_(or\n  (send\n    (ivar :@scope) :[]\n    (sym :options))\n  (hash)) merge ! ","args extract_args extract_options! ! "]}," ActionDispatch Routing Mapper Mapping using_to_shorthand?":{"type":"method","name":"using_to_shorthand?","children":[],"call":["options present? ","args empty? "]}," ActionDispatch Routing Mapper Mapping extract_path_and_options":{"type":"method","name":"extract_path_and_options","children":[],"call":[" normalize_path ","args first ","path gsub "," using_match_shorthand? ","options merge! delete ","options merge! ","name is_a? ","options find "," using_to_shorthand? ","args extract_options! ","path [] gsub ","path [] ","options [] ","path [] sub ","options []= ","@scope [] ","@scope [] nil? ","options [] to_s include? ","options [] to_s ","path_without_format [] gsub ","path_without_format [] ","path_without_format [] sub ","path sub ","options reverse_merge! "," raise ","path match "," normalize_args first  "," normalize_ normalize_path  ","args first  gsub "," normalize_path  gsub ","args extract_options!  merge! delete ","args extract_options!  merge! ","args extract_options!  find ","args extract_args extract_options! ! ","args first  [] gsub "," normalize_path  [] gsub ","args first  [] "," normalize_path  [] ","args extract_options!  [] ","args first  [] sub "," normalize_path  [] sub ","args extract_options!  []= ","args extract_options!  [] to_s include? ","args extract_options!  [] to_s ","args first _without_format [] gsub "," normalize_path _without_format [] gsub ","path sub  [] gsub ","args first _without_format [] "," normalize_path _without_format [] ","path sub  [] ","args first _without_format [] sub "," normalize_path _without_format [] sub ","path sub  [] sub ","args first  sub "," normalize_path  sub ","args extract_options!  reverse_merge! ","args first  match "," normalize_path  match "]}," ActionDispatch MiddlewareStack Middleware build_args":{"type":"method","name":"build_args","children":[],"call":["arg call ","arg respond_to? "," Array map "," Array "," args "]}," ActionDispatch MiddlewareStack Middleware lazy_compare?":{"type":"method","name":"lazy_compare?","children":[],"call":["object is_a? "]}," ActionDispatch MiddlewareStack Middleware active?":{"type":"method","name":"active?","children":[],"call":["@conditional call ","@conditional respond_to? "," klass "]}," ActionDispatch MiddlewareStack Middleware new":{"type":"method","name":"new","children":[],"call":[]}," ActionDispatch ShowExceptions local_request?":{"type":"method","name":"local_request?","children":[],"call":["request remote_ip == ","request remote_ip ","request remote_addr == ","request remote_addr ","LOCALHOST  any? ","local_ip === "]}," ActionDispatch Session CookieStore requires_session_id?":{"type":"method","name":"requires_session_id?","children":[],"call":["data key? ! ","data key? ","data respond_to? "]}," ActionDispatch Session CookieStore inject_persistent_session_id":{"type":"method","name":"inject_persistent_session_id","children":[],"call":[" generate_sid "," requires_session_id? "]}," ActionDispatch Session CookieStore generate_sid":{"type":"method","name":"generate_sid","children":[],"call":["ActiveSupport SecureRandom  hex "]}," ActionDispatch Session CookieStore verifier_for":{"type":"method","name":"verifier_for","children":[],"call":["ActiveSupport MessageVerifier  new ","secret call ","secret respond_to? "]}," ActionDispatch Session CookieStore ensure_secret_secure":{"type":"method","name":"ensure_secret_secure","children":[],"call":[" raise ","Secret should be something secure,  + + + ","Secret should be something secure,  + + ","Secret should be something secure,  + ","ActiveSupport SecureRandom  hex ","secret length < ","secret length ","A secret is required to generate an  + + + + + ","A secret is required to generate an  + + + + ","A secret is required to generate an  + + + ","A secret is required to generate an  + + ","A secret is required to generate an  + ","secret blank? ","secret is_a? "]}," ActionDispatch Session CookieStore ensure_session_key":{"type":"method","name":"ensure_session_key","children":[],"call":[" raise ","A key is required to write a  + + + + ","A key is required to write a  + + + ","A key is required to write a  + + ","A key is required to write a  + ","key blank? "]}," ActionDispatch Session CookieStore unmarshal":{"type":"method","name":"unmarshal","children":[],"call":[" persistent_session_id! ","@verifier verify "]}," ActionDispatch Session CookieStore marshal":{"type":"method","name":"marshal","children":[],"call":["@verifier generate "," persistent_session_id! "]}," ActionDispatch Session CookieStore build_cookie":{"type":"method","name":"build_cookie","children":[],"call":["Rack Utils  escape + + + ","Rack Utils  escape + + ","(send\n  (lvar :value) :map) join ","Rack Utils  escape ","value map ","Rack Utils  escape + ","Array  === ","value [] ","; expires= + ","value [] clone gmtime strftime ","value [] clone gmtime ","value [] clone ","; path= + ","; domain= + ","(send\n  (lvar :value [] ) :map) join ","value []  map ","value []  [] ","; ; expires= + = + ","value []  [] clone gmtime strftime ","value []  [] clone gmtime ","value []  [] clone ","; ; path= + = + ","; ; domain= + = + "]}," ActionDispatch Session CookieStore call":{"type":"method","name":"call","children":[],"call":["headers [] << ","headers [] ","headers []= ","headers [] blank? "," build_cookie ","cookie merge ","cookie []= ","Time  now + ","options [] ","Time  now ","options [] nil? ","Hash  new "," raise ","session_data size > ","session_data size "," marshal ","session_data to_hash ","session_data send ","session_data send ! ","session_data is_a? ","session_data is_a? ! ","env [] ","@app call ","env []= ","OptionsHash  new ","AbstractStore SessionHash  new "," build_ build_cookie  "," build_Hash  new  "," build_cookie  merge ","Hash  new  merge "," build_cookie  []= ","Hash  new  []= ","env []  [] ","env []  [] nil? "," marshal  size > ","env []  size > "," marshal  size ","env []  size "," marshal  to_hash ","env []  to_hash "," marshal  send ","env []  send "," marshal  send ! ","env []  send ! "," marshal  is_a? ","env []  is_a? "," marshal  is_a? ! ","env []  is_a? ! "]}," ActionDispatch Session CookieStore OptionsHash []":{"type":"method","name":"[]","children":[],"call":["@session_data [] ","key == "]}," ActionDispatch Session CookieStore OptionsHash initialize":{"type":"method","name":"initialize","children":[],"call":[" []= ","default_options each ","env [] "," merge! "]}," ActionDispatch Session AbstractStore SessionHash stale_session_check!":{"type":"method","name":"stale_session_check!","children":[],"call":[" raise ","const_error class ","const_error message ","1 constantize ","argument_error message =~ ","argument_error message "]}," ActionDispatch Session AbstractStore SessionHash close":{"type":"method","name":"close","children":[],"call":["ActiveSupport Deprecation  warn "," caller "]}," ActionDispatch Session AbstractStore SessionHash data":{"type":"method","name":"data","children":[],"call":[" to_hash ","ActiveSupport Deprecation  warn "," caller ","ActionDispatch::Session::AbstractStore::SessionHash#data  + "]}," ActionDispatch Session AbstractStore SessionHash session_id":{"type":"method","name":"session_id","children":[],"call":["@env [] [] ","@env [] ","ActiveSupport Deprecation  warn "," caller ","ActionDispatch::Session::AbstractStore::SessionHash#session_id  + "]}," ActionDispatch Cookies PermanentCookieJar controller":{"type":"method","name":"controller","children":[],"call":["@parent_jar controller "]}," ActionDispatch Cascade call":{"type":"method","name":"call","children":[],"call":["result [] [] == ","result [] [] ","result [] ","app call ","@apps each ","app call  [] [] == ","app call  [] [] ","app call  [] "]}," ActionDispatch Cascade initialize":{"type":"method","name":"initialize","children":[],"call":[]}," ActionDispatch Cascade new":{"type":"method","name":"new","children":[],"call":[]}," ActionDispatch Http URL path":{"type":"method","name":"path","children":[],"call":["path sub! ","ActionController Base  relative_url_root "," request_uri to_s [] "," request_uri to_s "," request_uri "," request_uri to_s []  sub! "]}," ActionDispatch Http URL query_string":{"type":"method","name":"query_string","children":[],"call":["@env [] to_s split [] ","@env [] to_s split ","@env [] to_s ","@env [] ","@env [] present? "]}," ActionDispatch Response delete_cookie":{"type":"method","name":"delete_cookie","children":[],"call":[" set_cookie ","(pair\n  (sym :value)\n  (str \"\")) merge ","Time  at ","cookie =~ ","Rack Utils  escape ","@cookie reject! "," Rack Utils  delete_cookie_header! "," header "]}," ActionDispatch Response set_cookie":{"type":"method","name":"set_cookie","children":[],"call":["@cookie << ","Rack Utils  escape + + + ","Rack Utils  escape + + ","(send\n  (lvar :value) :map) join ","Rack Utils  escape ","value map ","Rack Utils  escape + ","Array  === ","value [] ","; expires= + ","value [] clone gmtime strftime ","value [] clone gmtime ","value [] clone ","; path= + ","; domain= + "," Rack Utils  set_cookie_header! "," header ","@Rack Utils  escape + + +  << ","(send\n  (lvar :value [] ) :map) join ","value []  map ","value []  [] ","; ; expires= + = + ","value []  [] clone gmtime strftime ","value []  [] clone gmtime ","value []  [] clone ","; ; path= + = + ","; ; domain= + = + "," Rack Utils  set_Rack Utils  escape + + + _header! "]}," ActionDispatch Response initialize":{"type":"method","name":"initialize","children":[],"call":[" block_given? ","@body << "," lambda "," prepare_cache_control! ","Mime Type  lookup ","content_type split "," [] "," status= "," header= "," body= "," class default_charset "," class "," new_cond "," merge_default_headers "," class default_headers ","options fetch ","Header  new ","@headers []= ","Headers  new "," []  split ","  merge_default_headers = "," merge_default_ merge_default_headers s "," merge_options fetch  "," class default_ merge_default_headers s "," class options fetch  ","@ merge_default_headers s []= ","Header  new s []= ","Headers  new  []= "]}," ActionDispatch Http MimeNegotiation template_format":{"type":"method","name":"template_format","children":[],"call":[" xhr? "," parameters [] "," parameters "]}," ActionDispatch Http FilterParameters process_parameter_filter":{"type":"method","name":"process_parameter_filter","children":[],"call":["filtered_params []= ","b call ","blocks each ","value dup ","value duplicable? ","key dup ","blocks present? "," process_parameter_filter ","value map ","value is_a? ","key =~ ","regexps find ","original_params each "," compile_parameter_filter ","original_params dup "," filtering_parameters? "," compiled_parameter_filter_for call "," compiled_parameter_filter_for ","@env [] ","value dup  dup "," process_parameter_filter  dup ","value dup  duplicable? "," process_parameter_filter  duplicable? ","key dup  dup ","value dup  map "," process_parameter_filter  map ","value dup  is_a? "," process_parameter_filter  is_a? ","key dup  =~ "]}," ActionDispatch Http FilterParameters filtering_parameters?":{"type":"method","name":"filtering_parameters?","children":[],"call":["@env [] present? ","@env [] "]}," ActionDispatch Http FilterParameters compile_parameter_filter":{"type":"method","name":"compile_parameter_filter","children":[],"call":["regexps << ","Regexp  new ","strings join ","strings empty? ","strings << ","item to_s ","blocks << "," Array each "," Array ","@env [] ","filters each "]}," ActionDispatch Http Cache Response cache_control":{"type":"method","name":"cache_control","children":[],"call":[]}," ActionController UrlRewriter process_path_options":{"type":"method","name":"process_path_options","children":[],"call":["options update ","overwrite symbolize_keys ","@parameters symbolize_keys ","options delete ","options [] symbolize_keys ","options [] ","options symbolize_keys ","options symbolize_keys  update ","options delete  symbolize_keys ","options symbolize_keys  delete ","options symbolize_keys  [] symbolize_keys ","options symbolize_keys  [] ","options symbolize_keys  symbolize_keys "]}," ActionController TestCase build_request_uri":{"type":"method","name":"build_request_uri","children":[],"call":["@request request_uri= ","url rewrite ","ActionController UrlRewriter  new ","options update ","@controller __send__ ","@request env [] ","@request env ","@request env []= ","@controller config relative_url_root ","@controller config ","@routes url_for split ","@routes url_for ","@request symbolized_path_parameters ","@controller __send__ merge ","ActionController UrlRewriter  new  rewrite ","@controller __send__  update ","@controller __send__ merge  update ","@controller config relative_ActionController UrlRewriter  new _root ","@routes ActionController UrlRewriter  new _for split ","@routes ActionController UrlRewriter  new _for "]}," ActionController TestCase process":{"type":"method","name":"process","children":[],"call":["@request session delete ","@request session ","@request session [] blank? ","@request session [] ","@controller process_with_new_base_test "," include ","Base  class_eval "," build_request_uri ","@controller params merge! ","@controller params ","@controller request= ","@request session [] sweep ","@request session []= ","@request flash update ","@request flash ","@request session= ","ActionController TestSession  new ","session nil? ","@request assign_parameters ","action to_s ","@controller class name underscore sub ","@controller class name underscore ","@controller class name ","@controller class ","@request env []= ","@request env ","@controller params= ","@controller formats= ","@controller response_body= ","@response recycle! ","@request recycle! "," raise "," instance_variable_get nil? "," instance_variable_get ","(or\n  (send\n    (send nil :instance_variable_names) :include?\n    (lvar :iv_name))\n  (send\n    (send nil :instance_variable_names) :include?\n    (send\n      (lvar :iv_name) :to_sym))) ! "," instance_variable_names include? ","iv_name to_sym "," instance_variable_names ","(str \"@controller\") each ","(str \"@routes\") each "]}," ActionController TestCase xml_http_request":{"type":"method","name":"xml_http_request","children":[],"call":["@request env delete ","@request env "," returning "," __send__ ","(const\n  (const nil :Mime) :JS) join ","@request env [] ","@request env []= "]}," ActionController TestCase head":{"type":"method","name":"head","children":[],"call":[" process "]}," ActionController TestCase delete":{"type":"method","name":"delete","children":[],"call":[" process "]}," ActionController TestCase put":{"type":"method","name":"put","children":[],"call":[" process "]}," ActionController TestCase post":{"type":"method","name":"post","children":[],"call":[" process "]}," ActionController TestCase get":{"type":"method","name":"get","children":[],"call":[" process "]}," ActionController Railties Subscriber logger":{"type":"method","name":"logger","children":[],"call":["ActionController Base  logger "]}," ActionController Railties Subscriber send_data":{"type":"method","name":"send_data","children":[],"call":[" info ","Sent data %s (%.1fms) % ","event duration ","event payload [] ","event payload "]}," ActionController Railties Subscriber redirect_to":{"type":"method","name":"redirect_to","children":[],"call":[" info ","event payload [] ","event payload "]}," ActionController Railties Subscriber send_file":{"type":"method","name":"send_file","children":[],"call":[" info ","message % ","event duration ","event payload [] ","event payload ","message << "]}," ActionController Railties Subscriber process_action":{"type":"method","name":"process_action","children":[],"call":[" info ","message << ","payload [] ","additions join ","additions blank? ","Completed in %.0fms % ","event duration ","ActionController Base  log_process_action ","event payload ","Completed in %.0fms %  << ","event payload  [] ","ActionController Base  log_process_action  join ","ActionController Base  log_process_action  blank? ","event event payload  "]}," ActionController Railties Subscriber start_processing":{"type":"method","name":"start_processing","children":[],"call":[" info ","params inspect ","params empty? ","payload [] first to_s upcase ","payload [] first to_s ","payload [] first ","payload [] ","payload [] except ","event payload ","payload [] except  inspect ","payload [] except  empty? ","event payload  [] first to_s upcase ","event payload  [] first to_s ","event payload  [] first ","event payload  [] ","event payload  [] except ","event event payload  "]}," ActionController Metal ActionEndpoint call":{"type":"method","name":"call","children":[],"call":["@controller new dispatch ","@controller new "]}," ActionController Metal ActionEndpoint initialize":{"type":"method","name":"initialize","children":[],"call":[]}," ActionController Metal ActionEndpoint for":{"type":"method","name":"for","children":[],"call":[]}," ActionController UrlFor _url_rewriter":{"type":"method","name":"_url_rewriter","children":[],"call":[]}," ActionController UrlFor url_for":{"type":"method","name":"url_for","children":[],"call":[" polymorphic_url "," _url_rewriter rewrite "," rewrite_options "," _url_rewriter "]}," ActionController UrlFor rewrite_options":{"type":"method","name":"rewrite_options","children":[],"call":["defaults merge "," default_url_options ","options delete != ","options delete "," default_url_options  merge "]}," ActionController UrlFor default_url_options":{"type":"method","name":"default_url_options","children":[],"call":[" class default_url_options "," class "]}," ActionController Rendering format_for_text":{"type":"method","name":"format_for_text","children":[],"call":[" formats first "," formats "]}," ActionController Rendering _render_partial":{"type":"method","name":"_render_partial","children":[],"call":["options []= "," formats "," action_name ","options [] == ","options [] "]}," ActionController Rendering render_to_body":{"type":"method","name":"render_to_body","children":[],"call":[" _process_options "," _render_in_priorities ","options [] presence ","options [] "]}," ActionController RackDelegation params":{"type":"method","name":"params","children":[],"call":["@_request parameters "]}," ActionController HideActions action_method?":{"type":"method","name":"action_method?","children":[],"call":[" class hidden_actions include? ! "," class hidden_actions include? "," class hidden_actions "," class "," class visible_action? "]}," ActionController Helpers ClassMethods _modules_for_helpers":{"type":"method","name":"_modules_for_helpers","children":[],"call":[" all_application_helpers ","args delete "]}," ActionController Configuration ClassMethods config=":{"type":"method","name":"config=","children":[],"call":["@config merge! ","ActiveSupport OrderedHash  new ","ActiveSupport OrderedHash  new  merge! "]}," ActionController Configuration ClassMethods config":{"type":"method","name":"config","children":[],"call":[" default_config "," config "]}," ActionController Configuration ClassMethods default_config":{"type":"method","name":"default_config","children":[],"call":[]}," ActionController Configuration config=":{"type":"method","name":"config=","children":[],"call":[]}," ActionController Configuration config":{"type":"method","name":"config","children":[],"call":[" class config "," class "]}," ActionController Compatibility view_paths":{"type":"method","name":"view_paths","children":[],"call":[" view_context view_paths "," view_context "]}," ActionController Compatibility prepend_view_path":{"type":"method","name":"prepend_view_path","children":[],"call":[" view_paths unshift "," view_paths "]}," ActionController Compatibility append_view_path":{"type":"method","name":"append_view_path","children":[],"call":[" view_paths push "," view_paths "]}," ActionController Compatibility ClassMethods cache_store=":{"type":"method","name":"cache_store=","children":[],"call":["ActiveSupport Cache  lookup_store "]}," ActionController Compatibility ClassMethods rescue_action":{"type":"method","name":"rescue_action","children":[],"call":[" raise ","env [] "]}," ActionController Compatibility ClassMethods allow_concurrency=":{"type":"method","name":"allow_concurrency=","children":[],"call":["ActiveSupport Deprecation  warn ","ActionController::Base.allow_concurrency= is no longer effective.  << "]}," ActionController Compatibility ClassMethods allow_concurrency":{"type":"method","name":"allow_concurrency","children":[],"call":["Rails  application config allow_concurrency ","Rails  application config ","Rails  application ","ActiveSupport Deprecation  warn ","ActionController::Base.allow_concurrency is deprecated,  << "]}," ActionController Compatibility ClassMethods consider_all_requests_local=":{"type":"method","name":"consider_all_requests_local=","children":[],"call":["ActiveSupport Deprecation  warn ","ActionController::Base.consider_all_requests_local= is no longer effective.  << "]}," ActionController Compatibility ClassMethods consider_all_requests_local":{"type":"method","name":"consider_all_requests_local","children":[],"call":["Rails  application config consider_all_requests_local ","Rails  application config ","Rails  application ","ActiveSupport Deprecation  warn ","ActionController::Base.consider_all_requests_local is deprecated,  << "]}," ActionController Compatibility process_action":{"type":"method","name":"process_action","children":[],"call":[" template "]}," ActionController Compatibility template":{"type":"method","name":"template","children":[],"call":[" view_context "]}," ActionController Caching ClassMethods cache_configured?":{"type":"method","name":"cache_configured?","children":[],"call":[" cache_store "," perform_caching "]}," ActionController Caching cache_store=":{"type":"method","name":"cache_store=","children":[],"call":[]}," ActionController Caching Actions _render_cache_fragment":{"type":"method","name":"_render_cache_fragment","children":[],"call":[" render ","Mime  [] "]}," ActionController Base _url_rewriter":{"type":"method","name":"_url_rewriter","children":[],"call":["ActionController UrlRewriter  new "," params "," request "]}," ActionController Base subclasses":{"type":"method","name":"subclasses","children":[],"call":[]}," ActionController Base ImplicitRender method_for_action":{"type":"method","name":"method_for_action","children":[],"call":[" template_exists? "," controller_path "," formats ","action_name to_s "]}," ActionController Base ImplicitRender default_render":{"type":"method","name":"default_render","children":[],"call":[" render "]}," ActionController Base ImplicitRender send_action":{"type":"method","name":"send_action","children":[],"call":[" default_render "," response_body "]}," AbstractController Rendering ClassMethods view_paths=":{"type":"method","name":"view_paths=","children":[],"call":[" _view_paths freeze "," _view_paths "," _view_paths= ","ActionView Base  process_view_paths ","paths is_a? "," clear_template_caches! "]}," AbstractController Rendering ClassMethods view_paths":{"type":"method","name":"view_paths","children":[],"call":[" _view_paths "]}," AbstractController Rendering ClassMethods prepend_view_path":{"type":"method","name":"prepend_view_path","children":[],"call":[" view_paths= ","Array  wrap + "," view_paths dup "," view_paths ","Array  wrap "," clear_template_caches! "]}," AbstractController Rendering ClassMethods append_view_path":{"type":"method","name":"append_view_path","children":[],"call":[" view_paths= "," view_paths dup + ","Array  wrap "," view_paths dup "," view_paths "]}," AbstractController Rendering ClassMethods clear_template_caches!":{"type":"method","name":"clear_template_caches!","children":[],"call":[]}," AbstractController Rendering format_for_text":{"type":"method","name":"format_for_text","children":[],"call":["Mime  [] "]}," AbstractController Rendering with_template_cache":{"type":"method","name":"with_template_cache","children":[],"call":[]}," AbstractController Rendering template_exists?":{"type":"method","name":"template_exists?","children":[],"call":[" view_paths exists? ","options [] "," view_paths "]}," AbstractController Rendering find_template":{"type":"method","name":"find_template","children":[],"call":[" view_paths find ","options [] "," view_paths "]}," AbstractController Rendering _normalize_details":{"type":"method","name":"_normalize_details","children":[],"call":["details []= "," Array ","options [] "," formats "]}," AbstractController Rendering _determine_template":{"type":"method","name":"_determine_template","children":[],"call":[" find_template "," with_template_cache ","options [] "," _normalize_details "," _prefix ","(send\n  (send\n    (lvar :options) :keys) :&\n  (array\n    (sym :partial)\n    (sym :file)\n    (sym :template))) empty? ","options keys & ","options keys ","(or\n  (or\n    (send\n      (lvar :options) :[]\n      (sym :_template_name))\n    (send\n      (lvar :options) :[]\n      (sym :action)))\n  (send nil :action_name)) to_s "," action_name ","options []= ","options key? ","ActionView Template  new ","ActionView Template  handler_class_for_extension ","ActionView Template Text  new "," format_for_text "," find_ActionView Template  new  "," with_ActionView Template  new _cache "," _normalize_ _normalize_details  ","(send\n  (send\n    (lvar :options) :keys) :&\n  (array\n    (sym :partial)\n    (sym :file)\n    (sym :ActionView Template  new ))) empty? ","(or\n  (or\n    (send\n      (lvar :options) :[]\n      (sym :_template_(or\n  (or\n    (send\n      (lvar :options) :[]\n      (sym :_template_name))\n    (send\n      (lvar :options) :[]\n      (sym :action)))\n  (send nil :action_name)) to_s ))\n    (send\n      (lvar :options) :[]\n      (sym :action)))\n  (send nil :action_(or\n  (or\n    (send\n      (lvar :options) :[]\n      (sym :_template_name))\n    (send\n      (lvar :options) :[]\n      (sym :action)))\n  (send nil :action_name)) to_s )) to_s ","(or\n  (or\n    (send\n      (lvar :options) :[]\n      (sym :_ActionView Template  new _name))\n    (send\n      (lvar :options) :[]\n      (sym :action)))\n  (send nil :action_name)) to_s "," action_(or\n  (or\n    (send\n      (lvar :options) :[]\n      (sym :_template_name))\n    (send\n      (lvar :options) :[]\n      (sym :action)))\n  (send nil :action_name)) to_s  ","ActionView Template  ActionView Template  handler_class_for_extension _class_for_extension "]}," AbstractController Rendering body_to_s":{"type":"method","name":"body_to_s","children":[],"call":[]}," AbstractController Rendering view_paths":{"type":"method","name":"view_paths","children":[],"call":[" _view_paths "]}," AbstractController Rendering _render_partial":{"type":"method","name":"_render_partial","children":[],"call":[" view_context render_partial "," view_context "]}," AbstractController LocalizedCache with_template_cache":{"type":"method","name":"with_template_cache","children":[],"call":[" class template_cache [] [] "," class template_cache [] ","Thread  current [] ","Thread  current "," class template_cache "," class "]}," AbstractController LocalizedCache render":{"type":"method","name":"render","children":[],"call":["Thread  current []= ","HashKey  get ","I18n  locale "," formats "," class ","Thread  current "]}," AbstractController LocalizedCache ClassMethods template_cache":{"type":"method","name":"template_cache","children":[],"call":["h []= ","Hash  new "]}," AbstractController LocalizedCache ClassMethods clear_template_caches!":{"type":"method","name":"clear_template_caches!","children":[],"call":[" template_cache clear "," template_cache ","ActionView Partials PartialRenderer TEMPLATES  clear "]}," AbstractController HashKey inspect":{"type":"method","name":"inspect","children":[],"call":["@locale inspect ","@formats inspect "]}," AbstractController HashKey initialize":{"type":"method","name":"initialize","children":[],"call":["(lvar :formats) hash "]}," AbstractController HashKey get":{"type":"method","name":"get","children":[],"call":[]}," AbstractController Layouts _action_has_layout?":{"type":"method","name":"_action_has_layout?","children":[],"call":[]}," AbstractController Layouts _find_layout":{"type":"method","name":"_find_layout","children":[],"call":[" find_template ","details delete ","details key? "]}," AbstractController Layouts _determine_template":{"type":"method","name":"_determine_template","children":[],"call":["options []= "," _layout_for_option ","options [] details ","options [] ","options key? ","(send\n  (send\n    (lvar :options) :keys) :&\n  (array\n    (sym :text)\n    (sym :inline)\n    (sym :partial))) empty? ","options keys & ","options keys "," _options [] _for_option "]}," AbstractController Layouts _layout_for_name":{"type":"method","name":"_layout_for_name","children":[],"call":[" _find_layout "]}," AbstractController Layouts render_to_body":{"type":"method","name":"render_to_body","children":[],"call":["layout render ","options [] "," view_context "," _layout_for_option ","options [] details ","options delete ","options key? "," _layout_for_option  render ","options delete  render "," _ _layout_for_option _for_option "," _options delete _for_option "]}," AbstractController Layouts ClassMethods LayoutConditions _action_has_layout?":{"type":"method","name":"_action_has_layout?","children":[],"call":["except include? ! ","except include? "," action_name ","conditions [] ","only include? "," _layout_conditions ","conditions []  include? ! ","conditions []  include? "," _layout_conditions  [] "," _layout_ _layout_conditions  "]}," AbstractController Layouts ClassMethods cache_layout":{"type":"method","name":"cache_layout","children":[],"call":["layout []= ","layout [] ","layout key? ","Thread  current [] ","Thread  current ","layout Thread  current [] ? "]}," AbstractController Layouts ClassMethods clear_template_caches!":{"type":"method","name":"clear_template_caches!","children":[],"call":["@found_layouts clear "]}," AbstractController Helpers ClassMethods _modules_for_helpers":{"type":"method","name":"_modules_for_helpers","children":[],"call":[" raise ","file_name camelize constantize ","file_name camelize "," require_dependency ","arg to_s underscore ","arg to_s ","args flatten map! ","args flatten "]}," AbstractController Helpers next_serial":{"type":"method","name":"next_serial","children":[],"call":[]}," AbstractController Compatibility _default_layout":{"type":"method","name":"_default_layout","children":[],"call":[" _find_layout "," _layout "]}," AbstractController Compatibility _find_layout":{"type":"method","name":"_find_layout","children":[],"call":["details []= ","name =~ "]}," AbstractController Base initialize":{"type":"method","name":"initialize","children":[],"call":[]}," AbstractController Base descendants":{"type":"method","name":"descendants","children":[],"call":[]}," AbstractController Base inherited":{"type":"method","name":"inherited","children":[],"call":[" AbstractController Base  descendants << ","klass to_s "," AbstractController Base  descendants ","klass instance_variable_set ","klass instance_variable_defined? "]}," ActionView TestCase config":{"type":"method","name":"config","children":[],"call":["@controller config ","@controller respond_to? "]}," ActionView Handlers Erubis add_stmt":{"type":"method","name":"add_stmt","children":[],"call":["src << << ","src << ","code =~ "]}," ActionView Layouts _find_layout":{"type":"method","name":"_find_layout","children":[],"call":[" find_template "," with_fallbacks ","layout =~ "]}," ActionView Railties LogSubscriber from_rails_root":{"type":"method","name":"from_rails_root","children":[],"call":["string sub sub ","string sub ","Rails  root "]}," ActionView Railties LogSubscriber logger":{"type":"method","name":"logger","children":[],"call":["ActionController Base  logger "]}," ActionView Railties LogSubscriber render_template":{"type":"method","name":"render_template","children":[],"call":[" info ","message << "," (%.1fms) % ","event duration "," from_rails_root ","event payload [] ","event payload "]}," ActionView Helpers ActiveRecordInstanceTag error_message":{"type":"method","name":"error_message","children":[],"call":[" object errors [] "," object errors "," object "]}," ActionDispatch Routing Mapper Resources mount":{"type":"method","name":"mount","children":[],"call":[" match ","options merge "," raise ","options delete ","k respond_to? ","options find "]}," ActionDispatch Routing Mapper Resources SingletonResource member_name":{"type":"method","name":"member_name","children":[],"call":[" name "]}," ActionDispatch Routing Mapper Resources Resource nested_options":{"type":"method","name":"nested_options","children":[],"call":["options []= "," id_constraint ","(begin\n  (send nil :singular)) to_sym "," singular "," id_constraint? "," member_name "]}," ActionDispatch Routing Mapper Resources Resource collection_options":{"type":"method","name":"collection_options","children":[],"call":["options [] delete ","options [] ","options [] is_a? ","options []= ","options [] dup ","options delete ","(or\n  (send nil :options)\n  (hash)) dup tap ","(or\n  (send nil :options)\n  (hash)) dup "," options "]}," ActionDispatch Routing Mapper Resources Resource id_constraint":{"type":"method","name":"id_constraint","children":[],"call":[" constraints [] "," constraints "," options [] "," options "]}," ActionDispatch Routing Mapper Resources Resource id_constraint?":{"type":"method","name":"id_constraint?","children":[],"call":[" constraints [] is_a? "," constraints [] "," constraints "," options [] is_a? "," options [] "," options "]}," ActionDispatch Routing Mapper Resources Resource constraints":{"type":"method","name":"constraints","children":[],"call":[" options [] "," options "]}," ActionDispatch Routing Mapper Resources Resource uncountable?":{"type":"method","name":"uncountable?","children":[],"call":[" singular == "," plural "," singular "]}," ActionDispatch Routing Mapper Scoping merge_controller_namespace_scope":{"type":"method","name":"merge_controller_namespace_scope","children":[],"call":[]}," ActionDispatch Http FilterParameters compiled_parameter_filter_for":{"type":"method","name":"compiled_parameter_filter_for","children":[],"call":["filtered_params []= ","b call ","blocks each ","value dup ","value duplicable? ","key dup ","blocks present? "," process_parameter_filter ","v is_a? ","value map ","value is_a? ","key =~ ","regexps find ","original_params each "," lambda "," compile_parameter_filter ","@@compiled_parameter_filter_for [] ","value dup  dup "," process_parameter_filter  dup ","value dup  duplicable? "," process_parameter_filter  duplicable? ","key dup  dup ","value dup  map "," process_parameter_filter  map ","value dup  is_a? "," process_parameter_filter  is_a? ","key dup  =~ "]}," ActionController Railties UrlHelpers with":{"type":"method","name":"with","children":[],"call":[]}," ActionController Railties LogSubscriber logger":{"type":"method","name":"logger","children":[],"call":["ActionController Base  logger "]}," ActionController Railties LogSubscriber send_data":{"type":"method","name":"send_data","children":[],"call":[" info ","Sent data %s (%.1fms) % ","event duration ","event payload [] ","event payload "]}," ActionController Railties LogSubscriber redirect_to":{"type":"method","name":"redirect_to","children":[],"call":[" info ","event payload [] ","event payload "]}," ActionController Railties LogSubscriber send_file":{"type":"method","name":"send_file","children":[],"call":[" info ","message % ","event duration ","event payload [] ","event payload ","message << "]}," ActionController Railties LogSubscriber process_action":{"type":"method","name":"process_action","children":[],"call":[" info ","message << ","additions join ","additions blank? ","(str \"Completed \") % ","event duration ","Rack Utils HTTP_STATUS_CODES  [] ","payload [] ","ActionController Base  log_process_action ","event payload ","(str \"Completed \") %  << ","ActionController Base  log_process_action  join ","ActionController Base  log_process_action  blank? ","event payload  [] ","event event payload  "]}," ActionController Railties LogSubscriber start_processing":{"type":"method","name":"start_processing","children":[],"call":[" info ","params inspect ","params empty? ","payload [] first to_s upcase ","payload [] first to_s ","payload [] first ","payload [] ","payload [] except ","event payload ","payload [] except  inspect ","payload [] except  empty? ","event payload  [] first to_s upcase ","event payload  [] first to_s ","event payload  [] first ","event payload  [] ","event payload  [] except ","event event payload  "]}," ActionController UrlFor _router":{"type":"method","name":"_router","children":[],"call":[" raise "]}," ActionController RequestForgeryProtection allow_forgery_protection=":{"type":"method","name":"allow_forgery_protection=","children":[],"call":[" config allow_forgery_protection= "," config "]}," ActionController RequestForgeryProtection allow_forgery_protection":{"type":"method","name":"allow_forgery_protection","children":[],"call":[" config allow_forgery_protection "," config "]}," ActionController RequestForgeryProtection request_forgery_protection_token=":{"type":"method","name":"request_forgery_protection_token=","children":[],"call":[" config request_forgery_protection_token= "," config "]}," ActionController RequestForgeryProtection request_forgery_protection_token":{"type":"method","name":"request_forgery_protection_token","children":[],"call":[" config request_forgery_protection_token "," config "]}," ActionController RequestForgeryProtection ClassMethods allow_forgery_protection=":{"type":"method","name":"allow_forgery_protection=","children":[],"call":[" config allow_forgery_protection= "," config "]}," ActionController RequestForgeryProtection ClassMethods allow_forgery_protection":{"type":"method","name":"allow_forgery_protection","children":[],"call":[" config allow_forgery_protection "," config "]}," ActionController RequestForgeryProtection ClassMethods request_forgery_protection_token=":{"type":"method","name":"request_forgery_protection_token=","children":[],"call":[" config request_forgery_protection_token= "," config "]}," ActionController RequestForgeryProtection ClassMethods request_forgery_protection_token":{"type":"method","name":"request_forgery_protection_token","children":[],"call":[" config request_forgery_protection_token "," config "]}," ActionController Base use_accept_header=":{"type":"method","name":"use_accept_header=","children":[],"call":[" use_accept_header "]}," ActionController Base use_accept_header":{"type":"method","name":"use_accept_header","children":[],"call":["ActiveSupport Deprecation  warn "]}," ActionController Base resource_action_separator=":{"type":"method","name":"resource_action_separator=","children":[],"call":["ActiveSupport Deprecation  warn "]}," ActionController Base resource_action_separator":{"type":"method","name":"resource_action_separator","children":[],"call":[]}," ActionController Base session=":{"type":"method","name":"session=","children":[],"call":["Rails  application config session_store ","Rails  application config ","Rails  application ","value delete ","ActiveSupport Deprecation  warn "," caller ","ActionController::Base.session= is deprecated.  << ","Rails  application config session_Rails  application config session_store  "]}," ActionController Base session":{"type":"method","name":"session","children":[],"call":["ActiveSupport Deprecation  warn "," caller ","Disabling sessions for a single controller has been deprecated.  + + + ","Disabling sessions for a single controller has been deprecated.  + + ","Disabling sessions for a single controller has been deprecated.  + "]}," ActionController Base trusted_proxies":{"type":"method","name":"trusted_proxies","children":[],"call":["Rails  application config action_dispatch ip_spoofing_check= "," value ","Rails  application config action_dispatch ","Rails  application config ","Rails  application ","ActiveSupport Deprecation  warn "," caller ","ActionController::Base.trusted_proxies is deprecated.  << "]}," ActionController Base trusted_proxies=":{"type":"method","name":"trusted_proxies=","children":[],"call":["Rails  application config action_dispatch ip_spoofing_check= ","Rails  application config action_dispatch ","Rails  application config ","Rails  application ","ActiveSupport Deprecation  warn "," caller ","ActionController::Base.trusted_proxies= is deprecated.  << "]}," ActionController Base cookie_verifier_secret":{"type":"method","name":"cookie_verifier_secret","children":[],"call":["ActionController Base  config secret ","ActionController Base  config ","ActiveSupport Deprecation  warn "," caller ","ActionController::Base.cookie_verifier_secret is deprecated.  << "]}," ActionController Base cookie_verifier_secret=":{"type":"method","name":"cookie_verifier_secret=","children":[],"call":["ActionController Base  config secret= ","ActionController Base  config ","ActiveSupport Deprecation  warn "," caller ","ActionController::Base.cookie_verifier_secret= is deprecated.  << "]}," ActionController Base ip_spoofing_check":{"type":"method","name":"ip_spoofing_check","children":[],"call":["Rails  application config action_dispatch ip_spoofing_check ","Rails  application config action_dispatch ","Rails  application config ","Rails  application ","ActiveSupport Deprecation  warn "," caller ","ActionController::Base.ip_spoofing_check is deprecated.  << "]}," ActionController Base ip_spoofing_check=":{"type":"method","name":"ip_spoofing_check=","children":[],"call":["Rails  application config action_dispatch ip_spoofing_check= ","Rails  application config action_dispatch ","Rails  application config ","Rails  application ","ActiveSupport Deprecation  warn "," caller ","ActionController::Base.ip_spoofing_check= is deprecated.  << "]}," ActionController Base allow_concurrency=":{"type":"method","name":"allow_concurrency=","children":[],"call":["Rails  application config allow_concurrency= ","Rails  application config ","Rails  application ","ActiveSupport Deprecation  warn "," caller ","ActionController::Base.allow_concurrency= is deprecated.  << "]}," ActionController Base allow_concurrency":{"type":"method","name":"allow_concurrency","children":[],"call":["Rails  application config allow_concurrency ","Rails  application config ","Rails  application ","ActiveSupport Deprecation  warn "," caller ","ActionController::Base.allow_concurrency is deprecated,  << "]}," ActionController Base consider_all_requests_local=":{"type":"method","name":"consider_all_requests_local=","children":[],"call":["Rails  application config consider_all_requests_local= ","Rails  application config ","Rails  application ","ActiveSupport Deprecation  warn "," caller ","ActionController::Base.consider_all_requests_local= is deprecated.  << "]}," ActionController Base consider_all_requests_local":{"type":"method","name":"consider_all_requests_local","children":[],"call":["Rails  application config consider_all_requests_local ","Rails  application config ","Rails  application ","ActiveSupport Deprecation  warn "," caller ","ActionController::Base.consider_all_requests_local is deprecated,  << "]}," ActionController Base deprecated_config_writer":{"type":"method","name":"deprecated_config_writer","children":[],"call":[" class_eval ","25 + ","message inspect "]}," ActionController Base deprecated_config_reader":{"type":"method","name":"deprecated_config_reader","children":[],"call":[" class_eval ","13 + ","message inspect "]}," ActionController Base deprecated_config_accessor":{"type":"method","name":"deprecated_config_accessor","children":[],"call":[" deprecated_config_writer "," deprecated_config_reader "]}," AbstractController Base config":{"type":"method","name":"config","children":[],"call":["ActiveSupport InheritableOptions  new "," class config "," class "," superclass config "," superclass "," superclass < "]}," AbstractController Base configure":{"type":"method","name":"configure","children":[],"call":[" config "]}," AbstractController Assigns _evaluate_assigns":{"type":"method","name":"_evaluate_assigns","children":[],"call":["object instance_variable_set "," view_assigns each "," view_assigns "]}," AbstractController Assigns view_assigns":{"type":"method","name":"view_assigns","children":[],"call":["hash []= "," instance_variable_get ","variables each "," protected_instance_variables "," respond_to? "," instance_variable_names "," instance_variable_names  each "," protected_instance_ instance_variable_names  "]}," ActionView TestCase _router":{"type":"method","name":"_router","children":[],"call":["@controller _router ","@controller respond_to? "]}," ActionView TestCase Behavior _router":{"type":"method","name":"_router","children":[],"call":["@controller _router ","@controller respond_to? "]}," ActionView TestCase Behavior _view":{"type":"method","name":"_view","children":[],"call":["view output_buffer= "," output_buffer ","view singleton_class send ","view singleton_class ","@controller _router url_helpers ","@controller _router "," _helpers ","ActionView Base  new "," _assigns ","ActionController Base  view_paths ","ActionView Base  new  output_buffer= ","ActionView Base  new  singleton_class send ","ActionView Base  new  singleton_class ","ActionController Base  ActionView Base  new _paths "]}," ActionDispatch Routing Mapper Resources new_scope_prefix":{"type":"method","name":"new_scope_prefix","children":[],"call":["@scope [] [] ","@scope [] "]}," ActionDispatch Routing Mapper Resources action_name_prefix":{"type":"method","name":"action_name_prefix","children":[],"call":["@scope [] == ","@scope [] ","options [] == ","options [] "]}," ActionDispatch Routing Mapper Resources SingletonResource nested_options":{"type":"method","name":"nested_options","children":[],"call":[" member_name "]}," ActionDispatch Routing Mapper Resources SingletonResource nested_prefix":{"type":"method","name":"nested_prefix","children":[],"call":[]}," ActionDispatch Routing Mapper Resources SingletonResource member_prefix":{"type":"method","name":"member_prefix","children":[],"call":[]}," ActionDispatch Routing Mapper Resources Resource nested_prefix":{"type":"method","name":"nested_prefix","children":[],"call":[" id_segment "]}," ActionDispatch Routing Mapper Resources Resource member_prefix":{"type":"method","name":"member_prefix","children":[],"call":[]}," ActionDispatch Session CookieStore prepare!":{"type":"method","name":"prepare!","children":[],"call":["env []= ","OptionsHash  new ","SessionHash  new "]}," ActionDispatch Routing Mapper Resources path_for_custom_action":{"type":"method","name":"path_for_custom_action","children":[],"call":["@scope [] "," parent_resource path "," parent_resource "," shallow_scoping? "]}," ActionDispatch Routing Mapper Resources SingletonResource member_scope":{"type":"method","name":"member_scope","children":[],"call":[" path "]}," ActionDispatch Routing Mapper Resources Resource collection_scope":{"type":"method","name":"collection_scope","children":[],"call":[" path "]}," ActionController Responder format":{"type":"method","name":"format","children":[],"call":["@controller formats first ","@controller formats "]}," ActionController Responder request":{"type":"method","name":"request","children":[],"call":["@controller request "]}," ActionView TestCase Behavior view_assigns":{"type":"method","name":"view_assigns","children":[],"call":["Hash  [] "," instance_variable_get ","var [] to_sym ","var [] "," _user_defined_ivars map "," _user_defined_ivars ","var length ","ivar [] to_sym ","ivar [] "]}," ActionView TestCase Behavior _user_defined_ivars":{"type":"method","name":"_user_defined_ivars","children":[],"call":[" instance_variables map - "," instance_variables map "," instance_variables "," instance_variables - "]}," ActionView TestCase Behavior ClassMethods new":{"type":"method","name":"new","children":[],"call":[" include_helper_modules! "]}," ActionView PathResolver escape_entry":{"type":"method","name":"escape_entry","children":[],"call":["entry gsub "]}," ActionView Partials PartialRenderer collection_from_object":{"type":"method","name":"collection_from_object","children":[],"call":["@object to_ary ","@object respond_to? "]}," ActionView Helpers UrlHelper add_disable_with_to_attributes!":{"type":"method","name":"add_disable_with_to_attributes!","children":[],"call":["html_options []= "]}," I18n ExceptionHandler call":{"type":"method","name":"call","children":[],"call":[" html_safe ","options [] == ","options [] ","exception is_a? "]}," ActionView Base debug_rjs=":{"type":"method","name":"debug_rjs=","children":[],"call":[]}," ActionDispatch Routing Mapper Constraints matches?":{"type":"method","name":"matches?","children":[],"call":["constraint call ! ","constraint call "," constraint_args ","constraint respond_to? ","constraint matches? ! ","constraint matches? ","@constraints each ","@request new ","req reset_parameters ","@constraints all? ","@@request new uest new ","@request new  reset_parameters "]}," ActionDispatch Cookies CookieJar write_cookie?":{"type":"method","name":"write_cookie?","children":[],"call":["Rails  env development? ","Rails  env ","cookie [] ! ","cookie [] "," always_write_cookie "," request ssl? "," request "," request host end_with? "," request host "]}," ActionDispatch Http UploadedFile encode_filename":{"type":"method","name":"encode_filename","children":[],"call":["filename force_encoding encode! ","filename force_encoding ","ruby encoding_aware? "]}," ActionDispatch Http UploadedFile size":{"type":"method","name":"size","children":[],"call":["@tempfile size "]}," ActionDispatch Http UploadedFile rewind":{"type":"method","name":"rewind","children":[],"call":["@tempfile rewind "]}," ActionDispatch Http UploadedFile read":{"type":"method","name":"read","children":[],"call":["@tempfile read "]}," ActionDispatch Http UploadedFile path":{"type":"method","name":"path","children":[],"call":["@tempfile path "]}," ActionDispatch Http UploadedFile open":{"type":"method","name":"open","children":[],"call":["@tempfile open "]}," ActionDispatch Http UploadedFile initialize":{"type":"method","name":"initialize","children":[],"call":[" raise ","hash [] "," encode_filename ","@original_filename encode ","@original_filename force_encoding ","@original_filename encode! ","hash [] dup ","@headers force_encoding ","@headers encode! "," encode_filename  encode ","hash []  encode ","hash [] dup  encode "," encode_filename  force_encoding ","hash []  force_encoding ","hash [] dup  force_encoding "," encode_filename  encode! ","hash []  encode! ","hash [] dup  encode! "]}," Mime Type ref":{"type":"method","name":"ref","children":[],"call":[" to_s "," to_sym "," symbol "]}," ActionDispatch Http FilterParameters filtered_query_string":{"type":"method","name":"filtered_query_string","children":[],"call":[" parameter_filter filter first join "," parameter_filter filter first "," parameter_filter filter "," parameter_filter "," query_string gsub "," query_string "]}," ActionDispatch Http FilterParameters filtered_path":{"type":"method","name":"filtered_path","children":[],"call":[" filtered_query_string "," path "," query_string empty? "," query_string "]}," ActionController TemplateAssertions process":{"type":"method","name":"process","children":[],"call":["Hash  new "," reset_template_assertion "]}," ActionController Metal url_for":{"type":"method","name":"url_for","children":[],"call":[]}," ActionController Responder empty_json_resource":{"type":"method","name":"empty_json_resource","children":[],"call":[]}," ActionController Responder empty_resource":{"type":"method","name":"empty_resource","children":[],"call":[" send "," format "]}," ActionController Responder has_empty_resource_definition?":{"type":"method","name":"has_empty_resource_definition?","children":[],"call":[" respond_to? "," format "]}," ActionDispatch Request parse_query":{"type":"method","name":"parse_query","children":[],"call":[" deep_munge ","Utils  deep_munge "]}," ActionDispatch Request deep_munge":{"type":"method","name":"deep_munge","children":[],"call":["hash []= ","keys each ","hash [] == ","hash [] ","hash keys find_all ","hash keys "," deep_munge ","v grep ","hash each_value ","v compact! ","v empty? ","hash each ","Utils  deep_munge ","ActiveSupport Deprecation  warn "]}," Sprockets Railtie expand_css_compressor":{"type":"method","name":"expand_css_compressor","children":[],"call":["YUI CssCompressor  new "," require ","YUI JavaScriptCompressor  new ","Sass Engine  new render ","Sass Engine  new ","Object  new "]}," Sprockets Railtie expand_js_compressor":{"type":"method","name":"expand_js_compressor","children":[],"call":["YUI JavaScriptCompressor  new "," require ","Uglifier  new ","Closure Compiler  new "]}," Sprockets Helpers RailsHelper AssetPaths rewrite_extension":{"type":"method","name":"rewrite_extension","children":[],"call":["File  extname empty? ","File  extname ","File  extname != ","asset pathname to_s =~ ","asset pathname to_s ","asset pathname "," asset_environment [] "," asset_environment ","source_ext empty? ! ","source_ext empty? ","source_ext != "," exact_match_present? ","source_ext blank? ","ext == ","ext ! ","File  extname [] ","File  exists? "," asset_environment []  pathname to_s =~ "," asset_environment []  pathname to_s "," asset_environment []  pathname ","  asset_environment [] _environment [] ","  asset_environment [] _environment ","File  extname  empty? ! ","File  extname []  empty? ! ","File  extname  empty? ","File  extname []  empty? ","File  extname  != ","File  extname []  != ","File  extname  blank? ","File  extname []  blank? "]}," Sprockets Helpers RailsHelper AssetPaths rewrite_asset_path":{"type":"method","name":"rewrite_asset_path","children":[],"call":["source =~ ","File  join "," digest_for ","Rails  application config assets digest ","Rails  application config assets ","Rails  application config ","Rails  application ","source [] == ","source [] "," assets path "," performing_caching? "," assets "," asset_environment path "," asset_environment ","options [] == ","options [] ","options [] != "," digest_assets ","File  join  =~ "," digest_for  =~ ","File  join  [] == "," digest_for  [] == ","File  join  [] "," digest_for  [] "]}," Sprockets Helpers RailsHelper AssetPaths digest_for":{"type":"method","name":"digest_for","children":[],"call":[" raise ","AssetNotPrecompiledError  new ","asset digest_path "," asset_environment [] "," asset_environment ","Rails  application config assets compile ","Rails  application config assets ","Rails  application config ","Rails  application "," asset_digests [] "," asset_digests "," digest_assets "," compile_assets "," asset_environment []  digest_path ","asset  asset_digests [] _path ","  asset_environment [] _environment [] ","  asset_environment [] _environment ","Rails  application config  asset_environment [] s compile ","Rails  application config  asset_environment [] s ","  asset_environment [] _digests [] "," asset_ asset_digests [] s [] ","  asset_environment [] _digests "," asset_ asset_digests [] s "," digest_ asset_environment [] s ","  asset_digests [] _assets "," compile_ asset_environment [] s "]}," Sprockets Helpers RailsHelper AssetPaths asset_for":{"type":"method","name":"asset_for","children":[],"call":[" asset_environment [] "," asset_environment "," rewrite_extension "," is_uri? ","source to_s "," assets [] "," assets "," rewrite_extension  to_s ","source to_s  to_s "]}," Sprockets Helpers RailsHelper AssetPaths compute_source_path":{"type":"method","name":"compute_source_path","children":[],"call":[" asset_for "]}," Sprockets Helpers RailsHelper AssetPaths compute_public_path":{"type":"method","name":"compute_public_path","children":[],"call":[" asset_prefix "]}," Sprockets Helpers RailsHelper asset_environment":{"type":"method","name":"asset_environment","children":[],"call":["Rails  application assets ","Rails  application "]}," Sprockets Helpers RailsHelper asset_digests":{"type":"method","name":"asset_digests","children":[],"call":["Rails  application config assets digests ","Rails  application config assets ","Rails  application config ","Rails  application "]}," Sprockets Helpers RailsHelper asset_prefix":{"type":"method","name":"asset_prefix","children":[],"call":["Rails  application config assets prefix ","Rails  application config assets ","Rails  application config ","Rails  application "]}," Sprockets Helpers RailsHelper debug_assets?":{"type":"method","name":"debug_assets?","children":[],"call":[" params [] == "," params [] "," params ","Rails  application config assets debug ","Rails  application config assets ","Rails  application config ","Rails  application ","Rails  application config assets compile ","Rails  application config assets allow_debugging "," compile_assets? "]}," Sprockets Helpers RailsHelper asset_path":{"type":"method","name":"asset_path","children":[],"call":[" asset_paths compute_public_path "," asset_paths ","source logical_path ","source respond_to? ","options [] ","options merge "," asset_prefix "," asset_ asset_paths compute_public_path s compute_public_ asset_paths compute_public_path  "," asset_ asset_paths compute_public_path s ","source logical_ asset_paths compute_public_path  ","source logical_path  logical_path ","source logical_path  respond_to? "]}," Sprockets Helpers RailsHelper stylesheet_link_tag":{"type":"method","name":"stylesheet_link_tag","children":[],"call":["(send\n  (lvar :sources) :collect) join html_safe ","(send\n  (lvar :sources) :collect) join "," tag ","(pair\n  (str \"rel\")\n  (str \"stylesheet\")) merge ","options stringify_keys "," asset_path ","(send\n  (send\n    (lvar :asset) :to_a) :map) join html_safe ","(send\n  (send\n    (lvar :asset) :to_a) :map) join "," stylesheet_link_tag ","asset to_a map ","asset to_a "," asset_paths asset_for "," asset_paths ","sources collect ","options delete ","options key? "," debug_assets? ","sources extract_options! ","(pair\n  (sym :href)\n  (send nil :asset_path\n    (lvar :source)\n    (hash\n      (pair\n        (sym :ext)\n        (str \"css\"))\n      (pair\n        (sym :body)\n        (lvar :body))\n      (pair\n        (sym :protocol)\n        (sym :request))\n      (pair\n        (sym :digest)\n        (lvar :digest))))) merge! ","source to_s ","(pair\n  (sym :href)\n  (send nil :asset_path\n    (lvar :dep)\n    (hash\n      (pair\n        (sym :ext)\n        (str \"css\"))\n      (pair\n        (sym :body)\n        (true))\n      (pair\n        (sym :protocol)\n        (sym :request))\n      (pair\n        (sym :digest)\n        (lvar :digest))))) merge! ","dep to_s "," digest_assets? ","(pair\n  (sym :href)\n  (send nil :path_to_asset\n    (lvar :source)\n    (hash\n      (pair\n        (sym :ext)\n        (str \"css\"))\n      (pair\n        (sym :body)\n        (lvar :body))\n      (pair\n        (sym :protocol)\n        (sym :request))\n      (pair\n        (sym :digest)\n        (lvar :digest))))) merge! "," path_to_asset ","(pair\n  (sym :href)\n  (send nil :path_to_asset\n    (lvar :dep)\n    (hash\n      (pair\n        (sym :ext)\n        (str \"css\"))\n      (pair\n        (sym :body)\n        (true))\n      (pair\n        (sym :protocol)\n        (sym :request))\n      (pair\n        (sym :digest)\n        (lvar :digest))))) merge! ","dep pathname to_s ","dep pathname ","(send\n  (lvar :sources) :collect) uniq join html_safe ","(send\n  (lvar :sources) :collect) uniq join ","(send\n  (lvar :sources) :collect) uniq ","(send\n  (lvar :sources) :collect) flatten uniq join html_safe ","(send\n  (lvar :sources) :collect) flatten uniq join ","(send\n  (lvar :sources) :collect) flatten uniq ","(send\n  (lvar :sources) :collect) flatten ","sources extract_options!  stringify_keys ","(pair\n  (str \"rel\")\n  (str \"stylesheet\")) merge  stringify_keys ","  asset_paths asset_for _path ","(send\n  (send\n    (lvar : asset_paths asset_for ) :to_a) :map) join html_safe ","(send\n  (send\n    (lvar : asset_paths asset_for ) :to_a) :map) join "," asset_paths asset_for  to_a map "," asset_paths asset_for  to_a ","  asset_paths asset_for _paths  asset_paths asset_for _for ","  asset_paths asset_for _paths ","sources extract_options!  delete ","(pair\n  (str \"rel\")\n  (str \"stylesheet\")) merge  delete ","sources extract_options!  key? ","(pair\n  (str \"rel\")\n  (str \"stylesheet\")) merge  key? "," debug_ asset_paths asset_for s? ","  debug_assets? _assets? "," options delete _assets? ","sources extract_sources extract_options! ! ","sources extract_(pair\n  (str \"rel\")\n  (str \"stylesheet\")) merge ! ","(pair\n  (sym :href)\n  (send nil : asset_paths asset_for _path\n    (lvar :source)\n    (hash\n      (pair\n        (sym :ext)\n        (str \"css\"))\n      (pair\n        (sym :body)\n        (lvar :body))\n      (pair\n        (sym :protocol)\n        (sym :request))\n      (pair\n        (sym :digest)\n        (lvar :digest))))) merge! ","(pair\n  (sym :href)\n  (send nil :asset_path\n    (lvar :source)\n    (hash\n      (pair\n        (sym :ext)\n        (str \"css\"))\n      (pair\n        (sym :options delete )\n        (lvar :options delete ))\n      (pair\n        (sym :protocol)\n        (sym :request))\n      (pair\n        (sym :digest)\n        (lvar :digest))))) merge! ","(pair\n  (sym :href)\n  (send nil :asset_path\n    (lvar :source)\n    (hash\n      (pair\n        (sym :ext)\n        (str \"css\"))\n      (pair\n        (sym :body)\n        (lvar :body))\n      (pair\n        (sym :protocol)\n        (sym :request))\n      (pair\n        (sym : digest_assets? )\n        (lvar : digest_assets? ))))) merge! ","(pair\n  (sym :href)\n  (send nil :asset_path\n    (lvar :source)\n    (hash\n      (pair\n        (sym :ext)\n        (str \"css\"))\n      (pair\n        (sym :body)\n        (lvar :body))\n      (pair\n        (sym :protocol)\n        (sym :request))\n      (pair\n        (sym :options delete )\n        (lvar :options delete ))))) merge! ","(pair\n  (sym :href)\n  (send nil : asset_paths asset_for _path\n    (lvar :dep)\n    (hash\n      (pair\n        (sym :ext)\n        (str \"css\"))\n      (pair\n        (sym :body)\n        (true))\n      (pair\n        (sym :protocol)\n        (sym :request))\n      (pair\n        (sym :digest)\n        (lvar :digest))))) merge! ","(pair\n  (sym :href)\n  (send nil :asset_path\n    (lvar :dep)\n    (hash\n      (pair\n        (sym :ext)\n        (str \"css\"))\n      (pair\n        (sym :options delete )\n        (true))\n      (pair\n        (sym :protocol)\n        (sym :request))\n      (pair\n        (sym :digest)\n        (lvar :digest))))) merge! ","(pair\n  (sym :href)\n  (send nil :asset_path\n    (lvar :dep)\n    (hash\n      (pair\n        (sym :ext)\n        (str \"css\"))\n      (pair\n        (sym :body)\n        (true))\n      (pair\n        (sym :protocol)\n        (sym :request))\n      (pair\n        (sym : digest_assets? )\n        (lvar : digest_assets? ))))) merge! ","(pair\n  (sym :href)\n  (send nil :asset_path\n    (lvar :dep)\n    (hash\n      (pair\n        (sym :ext)\n        (str \"css\"))\n      (pair\n        (sym :body)\n        (true))\n      (pair\n        (sym :protocol)\n        (sym :request))\n      (pair\n        (sym :options delete )\n        (lvar :options delete ))))) merge! "," digest_ asset_paths asset_for s? ","  digest_assets? _assets? ","(pair\n  (sym :href)\n  (send nil :path_to_ asset_paths asset_for \n    (lvar :source)\n    (hash\n      (pair\n        (sym :ext)\n        (str \"css\"))\n      (pair\n        (sym :body)\n        (lvar :body))\n      (pair\n        (sym :protocol)\n        (sym :request))\n      (pair\n        (sym :digest)\n        (lvar :digest))))) merge! ","(pair\n  (sym :href)\n  (send nil :path_to_asset\n    (lvar :source)\n    (hash\n      (pair\n        (sym :ext)\n        (str \"css\"))\n      (pair\n        (sym :options delete )\n        (lvar :options delete ))\n      (pair\n        (sym :protocol)\n        (sym :request))\n      (pair\n        (sym :digest)\n        (lvar :digest))))) merge! ","(pair\n  (sym :href)\n  (send nil :path_to_asset\n    (lvar :source)\n    (hash\n      (pair\n        (sym :ext)\n        (str \"css\"))\n      (pair\n        (sym :body)\n        (lvar :body))\n      (pair\n        (sym :protocol)\n        (sym :request))\n      (pair\n        (sym : digest_assets? )\n        (lvar : digest_assets? ))))) merge! ","(pair\n  (sym :href)\n  (send nil :path_to_asset\n    (lvar :source)\n    (hash\n      (pair\n        (sym :ext)\n        (str \"css\"))\n      (pair\n        (sym :body)\n        (lvar :body))\n      (pair\n        (sym :protocol)\n        (sym :request))\n      (pair\n        (sym :options delete )\n        (lvar :options delete ))))) merge! "," path_to_ asset_paths asset_for  ","(pair\n  (sym :href)\n  (send nil :path_to_ asset_paths asset_for \n    (lvar :dep)\n    (hash\n      (pair\n        (sym :ext)\n        (str \"css\"))\n      (pair\n        (sym :body)\n        (true))\n      (pair\n        (sym :protocol)\n        (sym :request))\n      (pair\n        (sym :digest)\n        (lvar :digest))))) merge! ","(pair\n  (sym :href)\n  (send nil :path_to_asset\n    (lvar :dep)\n    (hash\n      (pair\n        (sym :ext)\n        (str \"css\"))\n      (pair\n        (sym :options delete )\n        (true))\n      (pair\n        (sym :protocol)\n        (sym :request))\n      (pair\n        (sym :digest)\n        (lvar :digest))))) merge! ","(pair\n  (sym :href)\n  (send nil :path_to_asset\n    (lvar :dep)\n    (hash\n      (pair\n        (sym :ext)\n        (str \"css\"))\n      (pair\n        (sym :body)\n        (true))\n      (pair\n        (sym :protocol)\n        (sym :request))\n      (pair\n        (sym : digest_assets? )\n        (lvar : digest_assets? ))))) merge! ","(pair\n  (sym :href)\n  (send nil :path_to_asset\n    (lvar :dep)\n    (hash\n      (pair\n        (sym :ext)\n        (str \"css\"))\n      (pair\n        (sym :body)\n        (true))\n      (pair\n        (sym :protocol)\n        (sym :request))\n      (pair\n        (sym :options delete )\n        (lvar :options delete ))))) merge! "]}," Sprockets Helpers RailsHelper javascript_include_tag":{"type":"method","name":"javascript_include_tag","children":[],"call":["(send\n  (lvar :sources) :collect) join html_safe ","(send\n  (lvar :sources) :collect) join "," content_tag ","(pair\n  (str \"type\")\n  (str \"text/javascript\")) merge ","options stringify_keys "," asset_path ","(send\n  (send\n    (lvar :asset) :to_a) :map) join html_safe ","(send\n  (send\n    (lvar :asset) :to_a) :map) join "," javascript_include_tag ","asset to_a map ","asset to_a "," asset_paths asset_for "," asset_paths ","sources collect ","options delete ","options key? "," debug_assets? ","sources extract_options! ","(pair\n  (sym :src)\n  (send nil :asset_path\n    (lvar :source)\n    (hash\n      (pair\n        (sym :ext)\n        (str \"js\"))\n      (pair\n        (sym :body)\n        (lvar :body))\n      (pair\n        (sym :digest)\n        (lvar :digest))))) merge! ","source to_s ","(pair\n  (sym :src)\n  (send nil :asset_path\n    (lvar :dep)\n    (hash\n      (pair\n        (sym :ext)\n        (str \"js\"))\n      (pair\n        (sym :body)\n        (true))\n      (pair\n        (sym :digest)\n        (lvar :digest))))) merge! ","dep to_s "," digest_assets? ","(pair\n  (sym :src)\n  (send nil :path_to_asset\n    (lvar :source)\n    (hash\n      (pair\n        (sym :ext)\n        (str \"js\"))\n      (pair\n        (sym :body)\n        (lvar :body))\n      (pair\n        (sym :digest)\n        (lvar :digest))))) merge! "," path_to_asset ","(pair\n  (sym :src)\n  (send nil :path_to_asset\n    (lvar :dep)\n    (hash\n      (pair\n        (sym :ext)\n        (str \"js\"))\n      (pair\n        (sym :body)\n        (true))\n      (pair\n        (sym :digest)\n        (lvar :digest))))) merge! ","dep pathname to_s ","dep pathname ","(send\n  (lvar :sources) :collect) uniq join html_safe ","(send\n  (lvar :sources) :collect) uniq join ","(send\n  (lvar :sources) :collect) uniq ","(send\n  (lvar :sources) :collect) flatten uniq join html_safe ","(send\n  (lvar :sources) :collect) flatten uniq join ","(send\n  (lvar :sources) :collect) flatten uniq ","(send\n  (lvar :sources) :collect) flatten ","sources extract_options!  stringify_keys ","(pair\n  (str \"type\")\n  (str \"text/javascript\")) merge  stringify_keys ","  asset_paths asset_for _path ","(send\n  (send\n    (lvar : asset_paths asset_for ) :to_a) :map) join html_safe ","(send\n  (send\n    (lvar : asset_paths asset_for ) :to_a) :map) join "," asset_paths asset_for  to_a map "," asset_paths asset_for  to_a ","  asset_paths asset_for _paths  asset_paths asset_for _for ","  asset_paths asset_for _paths ","sources extract_options!  delete ","(pair\n  (str \"type\")\n  (str \"text/javascript\")) merge  delete ","sources extract_options!  key? ","(pair\n  (str \"type\")\n  (str \"text/javascript\")) merge  key? "," debug_ asset_paths asset_for s? ","  debug_assets? _assets? "," options delete _assets? ","sources extract_sources extract_options! ! ","sources extract_(pair\n  (str \"type\")\n  (str \"text/javascript\")) merge ! ","(pair\n  (sym :src)\n  (send nil : asset_paths asset_for _path\n    (lvar :source)\n    (hash\n      (pair\n        (sym :ext)\n        (str \"js\"))\n      (pair\n        (sym :body)\n        (lvar :body))\n      (pair\n        (sym :digest)\n        (lvar :digest))))) merge! ","(pair\n  (sym :src)\n  (send nil :asset_path\n    (lvar :source)\n    (hash\n      (pair\n        (sym :ext)\n        (str \"js\"))\n      (pair\n        (sym :options delete )\n        (lvar :options delete ))\n      (pair\n        (sym :digest)\n        (lvar :digest))))) merge! ","(pair\n  (sym :src)\n  (send nil :asset_path\n    (lvar :source)\n    (hash\n      (pair\n        (sym :ext)\n        (str \"js\"))\n      (pair\n        (sym :body)\n        (lvar :body))\n      (pair\n        (sym : digest_assets? )\n        (lvar : digest_assets? ))))) merge! ","(pair\n  (sym :src)\n  (send nil :asset_path\n    (lvar :source)\n    (hash\n      (pair\n        (sym :ext)\n        (str \"js\"))\n      (pair\n        (sym :body)\n        (lvar :body))\n      (pair\n        (sym :options delete )\n        (lvar :options delete ))))) merge! ","(pair\n  (sym :src)\n  (send nil : asset_paths asset_for _path\n    (lvar :dep)\n    (hash\n      (pair\n        (sym :ext)\n        (str \"js\"))\n      (pair\n        (sym :body)\n        (true))\n      (pair\n        (sym :digest)\n        (lvar :digest))))) merge! ","(pair\n  (sym :src)\n  (send nil :asset_path\n    (lvar :dep)\n    (hash\n      (pair\n        (sym :ext)\n        (str \"js\"))\n      (pair\n        (sym :options delete )\n        (true))\n      (pair\n        (sym :digest)\n        (lvar :digest))))) merge! ","(pair\n  (sym :src)\n  (send nil :asset_path\n    (lvar :dep)\n    (hash\n      (pair\n        (sym :ext)\n        (str \"js\"))\n      (pair\n        (sym :body)\n        (true))\n      (pair\n        (sym : digest_assets? )\n        (lvar : digest_assets? ))))) merge! ","(pair\n  (sym :src)\n  (send nil :asset_path\n    (lvar :dep)\n    (hash\n      (pair\n        (sym :ext)\n        (str \"js\"))\n      (pair\n        (sym :body)\n        (true))\n      (pair\n        (sym :options delete )\n        (lvar :options delete ))))) merge! "," digest_ asset_paths asset_for s? ","  digest_assets? _assets? ","(pair\n  (sym :src)\n  (send nil :path_to_ asset_paths asset_for \n    (lvar :source)\n    (hash\n      (pair\n        (sym :ext)\n        (str \"js\"))\n      (pair\n        (sym :body)\n        (lvar :body))\n      (pair\n        (sym :digest)\n        (lvar :digest))))) merge! ","(pair\n  (sym :src)\n  (send nil :path_to_asset\n    (lvar :source)\n    (hash\n      (pair\n        (sym :ext)\n        (str \"js\"))\n      (pair\n        (sym :options delete )\n        (lvar :options delete ))\n      (pair\n        (sym :digest)\n        (lvar :digest))))) merge! ","(pair\n  (sym :src)\n  (send nil :path_to_asset\n    (lvar :source)\n    (hash\n      (pair\n        (sym :ext)\n        (str \"js\"))\n      (pair\n        (sym :body)\n        (lvar :body))\n      (pair\n        (sym : digest_assets? )\n        (lvar : digest_assets? ))))) merge! ","(pair\n  (sym :src)\n  (send nil :path_to_asset\n    (lvar :source)\n    (hash\n      (pair\n        (sym :ext)\n        (str \"js\"))\n      (pair\n        (sym :body)\n        (lvar :body))\n      (pair\n        (sym :options delete )\n        (lvar :options delete ))))) merge! "," path_to_ asset_paths asset_for  ","(pair\n  (sym :src)\n  (send nil :path_to_ asset_paths asset_for \n    (lvar :dep)\n    (hash\n      (pair\n        (sym :ext)\n        (str \"js\"))\n      (pair\n        (sym :body)\n        (true))\n      (pair\n        (sym :digest)\n        (lvar :digest))))) merge! ","(pair\n  (sym :src)\n  (send nil :path_to_asset\n    (lvar :dep)\n    (hash\n      (pair\n        (sym :ext)\n        (str \"js\"))\n      (pair\n        (sym :options delete )\n        (true))\n      (pair\n        (sym :digest)\n        (lvar :digest))))) merge! ","(pair\n  (sym :src)\n  (send nil :path_to_asset\n    (lvar :dep)\n    (hash\n      (pair\n        (sym :ext)\n        (str \"js\"))\n      (pair\n        (sym :body)\n        (true))\n      (pair\n        (sym : digest_assets? )\n        (lvar : digest_assets? ))))) merge! ","(pair\n  (sym :src)\n  (send nil :path_to_asset\n    (lvar :dep)\n    (hash\n      (pair\n        (sym :ext)\n        (str \"js\"))\n      (pair\n        (sym :body)\n        (true))\n      (pair\n        (sym :options delete )\n        (lvar :options delete ))))) merge! "]}," Sprockets Helpers RailsHelper asset_paths":{"type":"method","name":"asset_paths","children":[],"call":["paths asset_digests= "," asset_digests ","paths asset_prefix= "," asset_prefix ","paths asset_environment= "," asset_environment ","RailsHelper AssetPaths  new "," controller "," respond_to? ","Rails  application config ","Rails  application "," config ","paths digest_assets= "," digest_assets? ","paths compile_assets= "," compile_assets? ","RailsHelper AssetPaths  new  asset_digests= ","RailsHelper AssetPaths  new  asset_prefix= ","RailsHelper AssetPaths  new  asset_environment= ","  controller  ","Rails  application  config  ","  config  ","RailsHelper AssetPaths  new  digest_assets= ","RailsHelper AssetPaths  new  compile_assets= "]}," Sprockets LazyCompressor compress":{"type":"method","name":"compress","children":[],"call":[" compressor compress "," compressor "]}," Sprockets LazyCompressor compressor":{"type":"method","name":"compressor","children":[],"call":["NullCompressor  new ","@block call "]}," Sprockets LazyCompressor initialize":{"type":"method","name":"initialize","children":[],"call":[]}," Sprockets NullCompressor compress":{"type":"method","name":"compress","children":[],"call":[]}," ActionView FixtureResolver to_s":{"type":"method","name":"to_s","children":[],"call":["@hash keys join ","@hash keys "]}," ActionView TestCase Behavior Locals render":{"type":"method","name":"render","children":[],"call":[" locals []= "," locals ","options [] ","options key? "," block_given? "," rendered_views add "," rendered_views "]}," ActionView TestCase Behavior response_from_page":{"type":"method","name":"response_from_page","children":[],"call":["HTML Document  new root ","HTML Document  new ","@rendered blank? "]}," ActionView Template method_name":{"type":"method","name":"method_name","children":[],"call":["(str \"_\") gsub "," __id__ ","@identifier hash "," identifier_method_name "]}," ActionView Template locals_code":{"type":"method","name":"locals_code","children":[],"call":["(send\n  (ivar :@locals) :map) join ","@locals map "]}," ActionView Template handle_render_error":{"type":"method","name":"handle_render_error","children":[],"call":[" raise ","Template Error  new "," refresh ","view assigns ","view respond_to? ","e sub_template_of ","e is_a? ","template encode! ","template source ","view view assigns  ","e sub_ refresh _of "," refresh  encode! "," refresh  source "]}," ActionView Template compile!":{"type":"method","name":"compile!","children":[],"call":[" compile ","view singleton_class ","view is_a? ","@compile_mutex synchronize "]}," ActionView Template refresh":{"type":"method","name":"refresh","children":[],"call":["lookup find_template ","pieces join ","lookup disable_cache ","name sub! ! ! ","name sub! ! ","name sub! ","pieces pop ","@virtual_path split ","view lookup_context "," raise ","view lookup_context  find_template ","@virtual_path split  join ","view lookup_context  disable_cache ","pieces pop  sub! ! ! ","pieces pop  sub! ! ","pieces pop  sub! ","@virtual_path split  pop ","view view lookup_context _context "]}," ActionView Template supports_streaming?":{"type":"method","name":"supports_streaming?","children":[],"call":[" handler supports_streaming? "," handler "," handler respond_to? "]}," ActionView FallbackFileSystemResolver decorate":{"type":"method","name":"decorate","children":[],"call":["t virtual_path= "," each "]}," ActionView FallbackFileSystemResolver instances":{"type":"method","name":"instances","children":[],"call":[]}," ActionView OptimizedFileSystemResolver build_query":{"type":"method","name":"build_query","children":[],"call":["query << ","ext compact uniq each ","ext compact uniq ","ext compact ","exts each "," escape_entry ","File  join ","details [] ","EXTENSIONS  map ","ext compact each ","query + ","(send\n  (lvar :exts) :map) join ","(send\n  (send\n    (send\n      (lvar :ext) :compact) :uniq) :map) join ","ext compact uniq map ","exts map ","path to_s starts_with? ","@path to_s ","path to_s "," escape_entry  << ","File  join  << "," escape_entry  + ","File  join  + "]}," ActionView FileSystemResolver to_s":{"type":"method","name":"to_s","children":[],"call":["@path to_s "]}," ActionView PathResolver mtime":{"type":"method","name":"mtime","children":[],"call":["File  stat mtime ","File  stat ","File  mtime "]}," ActionView PathResolver build_query":{"type":"method","name":"build_query","children":[],"call":["File  expand_path ","query gsub! ","variants compact uniq join ","variants compact uniq ","variants compact ","details each "," escape_entry ","path name ","path partial? ","path prefix ","path prefix empty? ","@pattern dup ","exts each ","@pattern dup  gsub! ","path  escape_entry ? "]}," ActionView PathResolver initialize":{"type":"method","name":"initialize","children":[],"call":[]}," ActionView Resolver sort_locals":{"type":"method","name":"sort_locals","children":[],"call":["locals freeze ","locals sort! ","l to_s ","locals map ","locals sort freeze ","locals sort "]}," ActionView Resolver decorate":{"type":"method","name":"decorate","children":[],"call":[" build_path ","t virtual_path ","t formats= ","details [] ","t formats empty? ","t formats ","t locals= ","templates each "]}," ActionView Resolver build_path":{"type":"method","name":"build_path","children":[],"call":["Path  build ","Path  new "]}," ActionView Resolver Path initialize":{"type":"method","name":"initialize","children":[],"call":[" rebuild "]}," ActionView Resolver Path build":{"type":"method","name":"build","children":[],"call":[]}," ActionView Template Handlers handler_for_extension":{"type":"method","name":"handler_for_extension","children":[],"call":[" registered_template_handler "]}," ActionView Template Handlers ERB call":{"type":"method","name":"call","children":[],"call":[" class erb_implementation new src "," class erb_implementation new "," class erb_trim_mode == "," class erb_trim_mode "," class "," class erb_implementation ","template source dup ","template source ","erb encode! ","erb force_encoding "," valid_encoding ","template_source gsub ","template source dup force_encoding ","template source encoding_aware? "," class escape_whitelist include? ","template mime_type "," class escape_whitelist ","template type "," class template source dup _implementation new src "," class template_source gsub _implementation new src "," class template source dup _implementation new "," class template_source gsub _implementation new "," class template source dup _trim_mode == "," class template_source gsub _trim_mode == "," class template source dup _trim_mode "," class template_source gsub _trim_mode "," class template source dup _implementation "," class template_source gsub _implementation ","template source dup  encode! ","template_source gsub  encode! ","template source dup  force_encoding ","template_source gsub  force_encoding ","template source dup force_encoding  gsub "]}," ActionView Template Handlers ERB supports_streaming?":{"type":"method","name":"supports_streaming?","children":[],"call":[]}," ActionView Handlers Builder call":{"type":"method","name":"call","children":[],"call":["xml = ::Builder::XmlMarkup.new(:indent => 2); + + + ","xml = ::Builder::XmlMarkup.new(:indent => 2); + + ","template source ","xml = ::Builder::XmlMarkup.new(:indent => 2); + "," require "," require_engine "]}," ActionView Template Handler inherited":{"type":"method","name":"inherited","children":[],"call":[]}," ActionView TemplateRenderer find_layout":{"type":"method","name":"find_layout","children":[],"call":[" raise "," template_exists? "," update_details "," find_template "," with_fallbacks ","layout =~ "," with_layout_format "," resolve_layout "]}," ActionView TemplateRenderer render_with_layout":{"type":"method","name":"render_with_layout","children":[],"call":["view _layout_for ","layout render ","view view_flow set ","view view_flow "," find_layout ","locals keys "]}," ActionView TemplateRenderer render_template":{"type":"method","name":"render_template","children":[],"call":["view _layout_for ","template render "," instrument ","layout try ","template identifier "," render_with_layout "]}," ActionView TemplateRenderer determine_template":{"type":"method","name":"determine_template","children":[],"call":[" find_template ","options [] ","options [] respond_to? ","options key? ","Template  new ","Template  handler_for_extension "," with_fallbacks ","Template Text  new "," formats try "," formats ","options [] try "," raise "," find_file "," formats first ","options fetch keys ","options fetch ","Template  Template  handler_for_extension _for_extension ","options fetch options fetch keys  "]}," ActionView TemplateRenderer render":{"type":"method","name":"render","children":[],"call":[" render_template ","options [] "," freeze_formats ","template formats "," determine_template "," wrap_formats "," extract_format "," extract_details ","context rendered_format= ","context formats first ","context formats ","context formats= ","template formats empty? ","context rendered_format "," formats last "," formats ","template formats first "," prepend_formats ","@lookup_context formats= ","@lookup_context rendered_format "," formats first "," render_ determine_template  "," determine_template  formats "," determine_ determine_template  "," determine_template  formats empty? "," determine_template  formats first "]}," ActionView StreamingTemplateRenderer delayed_render":{"type":"method","name":"delayed_render","children":[],"call":["fiber resume ","fiber alive? ","view view_flow set ","view view_flow ","template render ","view view_flow= ","StreamingFlow  new ","output safe_concat ","view _layout_for ","layout render ","Fiber  new "," instrument ","layout try ","template identifier "," lambda ","ActionView StreamingBuffer  new ","ActionView StreamingBuffer  new  safe_concat "]}," ActionView StreamingTemplateRenderer render_template":{"type":"method","name":"render_template","children":[],"call":[" delayed_render ","Body  new "," find_layout ","locals keys ","template supports_streaming? "]}," ActionView StreamingTemplateRenderer Body log_error":{"type":"method","name":"log_error","children":[],"call":["logger fatal ","message << << ","exception backtrace join ","exception backtrace ","message << ","exception annoted_source_code to_s ","exception annoted_source_code ","exception respond_to? ","exception message ","exception class ","ActionController Base  logger ","ActionView Base  logger ","ActionController Base  logger  fatal ","ActionView Base  logger  fatal ","ActionController Base  ActionController Base  logger  ","ActionController Base  ActionView Base  logger  ","ActionView Base  ActionController Base  logger  ","ActionView Base  ActionView Base  logger  "]}," ActionView StreamingTemplateRenderer Body each":{"type":"method","name":"each","children":[],"call":["block call ","ActionView Base  streaming_completion_on_exception "," log_error ","@start call "]}," ActionView StreamingTemplateRenderer Body initialize":{"type":"method","name":"initialize","children":[],"call":[]}," ActionView Renderer _partial_renderer":{"type":"method","name":"_partial_renderer","children":[],"call":["PartialRenderer  new "]}," ActionView Renderer _template_renderer":{"type":"method","name":"_template_renderer","children":[],"call":["TemplateRenderer  new "]}," ActionView Renderer render_partial":{"type":"method","name":"render_partial","children":[],"call":[" _partial_renderer render "," _partial_renderer ","PartialRenderer  new render ","PartialRenderer  new "]}," ActionView Renderer render_template":{"type":"method","name":"render_template","children":[],"call":[" _template_renderer render "," _template_renderer ","TemplateRenderer  new render ","TemplateRenderer  new "]}," ActionView Renderer render_body":{"type":"method","name":"render_body","children":[],"call":["StreamingTemplateRenderer  new render ","StreamingTemplateRenderer  new "," render_partial ","options key? "]}," ActionView Renderer render":{"type":"method","name":"render","children":[],"call":[" render_template "," render_partial ","options key? "," raise ","options permitted? ! ","options permitted? ","options respond_to? ","options respond_to? ! ","options is_a? "]}," ActionView Renderer initialize":{"type":"method","name":"initialize","children":[],"call":[]}," ActionView PartialRenderer retrieve_variable":{"type":"method","name":"retrieve_variable","children":[],"call":["path [] to_sym ","path [] ","@options [] try ","@options [] ","(send\n  (ivar :@options) :fetch\n  (sym :as)) try ","@options fetch ","1 to_sym "," raise_invalid_identifier ","base =~ ","File  basename ","path [] == ","File  basename  =~ ","File  File  basename name "]}," ActionView PartialRenderer merge_path_into_partial":{"type":"method","name":"merge_path_into_partial","children":[],"call":["partial insert ","File  dirname ","partial gsub! ","overlap join ","overlap << ","dir == ","partial_array [] ","path_array each_with_index ","partial split [] ","partial split ","File  dirname split ","partial include? ","path include? ","partial split []  [] ","File  dirname split  each_with_index "]}," ActionView PartialRenderer partial_path":{"type":"method","name":"partial_path","children":[],"call":[" merge_path_into_partial ","@lookup_context prefixes first ","@lookup_context prefixes ","object class model_name partial_path dup tap ","object class model_name partial_path dup ","object class model_name partial_path ","object class model_name ","object class ","object to_model ","object respond_to? ","@partial_names [] ","object class name ","partial insert ","File  dirname ","path include? ","partial include? "," merge_prefix_into_object_path ","path dup "," raise ","ArgumentError  new ","object inspect ","klass model_name partial_path ","klass model_name ","ActiveSupport Deprecation  warn ","klass respond_to? ","object to_partial_path "," prefixed_partial_names [] "," prefixed_partial_names ","@view prefix_partial_path_with_controller_namespace "," merge_@lookup_context prefixes first _into_partial "," merge_object to_partial_path _into_partial "," merge_ raise _into_partial ","object class model_name partial_@lookup_context prefixes first  dup tap ","object class model_name partial_object to_partial_path  dup tap ","object class model_name partial_ raise  dup tap ","object to_model  class model_name partial_path dup tap ","object class model_name partial_@lookup_context prefixes first  dup ","object class model_name partial_object to_partial_path  dup ","object class model_name partial_ raise  dup ","object to_model  class model_name partial_path dup ","object class model_name partial_@lookup_context prefixes first  ","object class model_name partial_object to_partial_path  ","object class model_name partial_ raise  ","object to_model  class model_name partial_path ","object to_model  class model_name ","object to_model  class ","object to_model  to_model ","object to_model  respond_to? ","object to_model  class name ","@lookup_context prefixes first  include? ","object to_partial_path  include? "," raise  include? "," merge_prefix_into_object_@lookup_context prefixes first  "," merge_prefix_into_object_object to_partial_path  "," merge_prefix_into_object_ raise  "," merge_prefix_into_object to_model _path ","@lookup_context prefixes first  dup ","object to_partial_path  dup "," raise  dup ","object to_model  inspect ","klass model_name partial_@lookup_context prefixes first  ","klass model_name partial_object to_partial_path  ","klass model_name partial_ raise  ","object class  model_name partial_path ","object class  model_name ","object class  respond_to? ","object to_partial_@lookup_context prefixes first  ","object to_partial_object to_partial_path  ","object to_partial_ raise  ","object to_model  to_partial_path ","@view prefix_partial_@lookup_context prefixes first _with_controller_namespace ","@view prefix_partial_object to_partial_path _with_controller_namespace ","@view prefix_partial_ raise _with_controller_namespace "]}," ActionView PartialRenderer collection_without_template":{"type":"method","name":"collection_without_template","children":[],"call":["segments << ","template render ","locals []= ","data [] "," find_template ","keys + ","cache [] ","collection_data [] ","@collection each_with_index ","@locals keys ","@collection map ","@locals keys  + ","@locals @locals keys  "]}," ActionView PartialRenderer collection_with_template":{"type":"method","name":"collection_with_template","children":[],"call":["segments << ","template render ","locals []= ","locals [] ","@collection each ","layout render ","@collection map "," find_template ","@options [] "," find_template  render ","@options []  render "]}," ActionView PartialRenderer find_template":{"type":"method","name":"find_template","children":[],"call":["@lookup_context find_template ","@lookup_context prefixes ","path include? ","@lookup_context @lookup_context prefixes  "]}," ActionView PartialRenderer find_partial":{"type":"method","name":"find_partial","children":[],"call":[" find_template ","locals << ","@locals keys ","@locals keys  << ","@@locals keys  keys "]}," ActionView PartialRenderer collection_from_object":{"type":"method","name":"collection_from_object","children":[],"call":["@object to_ary ","@object respond_to? "]}," ActionView PartialRenderer collection":{"type":"method","name":"collection","children":[],"call":["collection to_ary ","collection respond_to? ","@options [] ","@options key? ","@options []  to_ary ","@options []  respond_to? "]}," ActionView PartialRenderer setup":{"type":"method","name":"setup","children":[],"call":[" retrieve_variable unshift "," retrieve_variable ","paths map! "," partial_path ","paths first ","paths uniq size == ","paths uniq size ","paths uniq ","@collection map "," collection "," collection_from_object ","options [] ","String  === "," extract_format "," raise ","ArgumentError  new ","(str \"The partial name (\") + + ","(str \"The partial name (\") + ","@variable to_s !~ ","@variable to_s "," extract_details "," prepend_formats "," retrieve_template_keys ","as to_sym "," raise_invalid_identifier ","as to_s =~ ","as to_s "," raise_invalid_option_as "," options [] _path "," collection  map ","(str \"The options []  name (\") + + ","(str \"The options []  name (\") + ","as to_sym  to_sym ","options []  to_sym ","as to_sym  to_s =~ ","options []  to_s =~ ","as to_sym  to_s ","options []  to_s "," raise_invalid_option_as to_sym  "," raise_invalid_option_options []  "]}," ActionView PartialRenderer render_partial":{"type":"method","name":"render_partial","children":[],"call":["layout render ","view _layout_for ","@template render ","locals []= ","locals [] "," find_template ","@options [] ","block ! ","layout to_s "," find_template  render ","@options []  render ","view _ find_template _for ","view _@options [] _for "," find_template  to_s ","@options []  to_s "]}," ActionView PartialRenderer render_collection":{"type":"method","name":"render_collection","children":[],"call":["result join html_safe ","result join "," collection_without_template "," collection_with_template "," find_template render "," find_template ","@options [] ","@options key? ","@collection blank? ","@locals keys "," collection_without_template  join html_safe "," collection_with_template  join html_safe "," collection_without_template  join "," collection_with_template  join "]}," ActionView PartialRenderer render":{"type":"method","name":"render","children":[],"call":[" render_partial "," instrument "," render_collection ","@collection size ","@template identifier "," find_partial "," wrap_formats "," setup "," formats first "," formats ","@template formats first ","@template formats ","@template formats present? ","@lookup_context rendered_format "," find_partial  identifier ","@template @template identifier  "," find_partial  formats first "," find_partial  formats "," find_partial  formats present? "]}," ActionView PartialRenderer initialize":{"type":"method","name":"initialize","children":[],"call":["PARTIAL_NAMES  [] ","@lookup_context prefixes first ","@lookup_context prefixes "]}," ActionView AbstractRenderer instrument":{"type":"method","name":"instrument","children":[],"call":["ActiveSupport Notifications  instrument "]}," ActionView AbstractRenderer formats_regexp":{"type":"method","name":"formats_regexp","children":[],"call":["Mime SET  symbols join ","Mime SET  symbols "]}," ActionView AbstractRenderer wrap_formats":{"type":"method","name":"wrap_formats","children":[],"call":[" update_details ","1 to_sym ","value sub! "," formats_regexp ","value is_a? "]}," ActionView AbstractRenderer render":{"type":"method","name":"render","children":[],"call":[" raise "]}," ActionView AbstractRenderer initialize":{"type":"method","name":"initialize","children":[],"call":[]}," ActionView LookupContext Details disable_cache":{"type":"method","name":"disable_cache","children":[],"call":[]}," ActionView Helpers UrlHelper link_to_remote_options?":{"type":"method","name":"link_to_remote_options?","children":[],"call":["options delete ","options key? ","options is_a? "]}," ActionView Helpers UrlHelper _routes_context":{"type":"method","name":"_routes_context","children":[],"call":[" controller "]}," ActionView Helpers RenderingHelper _layout_for":{"type":"method","name":"_layout_for","children":[],"call":[" capture ","name is_a? ! ","name is_a? ","args first ","args first  is_a? ! ","args first  is_a? "]}," ActionView Helpers RenderingHelper render":{"type":"method","name":"render","children":[],"call":[" view_renderer render_partial "," view_renderer "," view_renderer render ","options merge ","options [] "," block_given? "]}," ActionView Helpers OutputSafetyHelper safe_join":{"type":"method","name":"safe_join","children":[],"call":["(send\n  (lvar :array) :map) join html_safe ","(send\n  (lvar :array) :map) join ","ERB Util  html_escape ","array map "," html_safe "]}," ActionView Helpers OutputSafetyHelper raw":{"type":"method","name":"raw","children":[],"call":["stringish to_s html_safe ","stringish to_s "]}," ActionView Helpers FormTagHelper button_tag":{"type":"method","name":"button_tag","children":[],"call":[" content_tag ","options reverse_merge! ","options []= ","options delete ","options stringify_keys! ","content_or_options is_a? "," block_given? ","options stringify_keys ","ActiveSupport Deprecation  warn ","options stringify_keys  reverse_merge! ","options stringify_keys  []= ","options stringify_keys  delete ","options stringify_keys  stringify_keys! ","content_or_options stringify_keys  is_a? ","options stringify_keys  stringify_keys "]}," ActionView Helpers FormBuilder convert_to_model":{"type":"method","name":"convert_to_model","children":[],"call":["object to_model ","object respond_to? "]}," ActionView Helpers FormBuilder file_field":{"type":"method","name":"file_field","children":[],"call":["@template file_field "," objectify_options "," multipart= "]}," ActionView Helpers FormBuilder multipart=":{"type":"method","name":"multipart=","children":[],"call":[" parent_builder multipart= "," parent_builder ","parent_builder multipart= ","@options [] "," @options []  multipart= "," @options []  ","@options []  multipart= "]}," ActionView Helpers InstanceTag retrieve_autoindex":{"type":"method","name":"retrieve_autoindex","children":[],"call":[" raise ","object inspect ","object to_param ","object respond_to? ","@template_object instance_variable_get "," object "]}," ActionView Helpers InstanceTag retrieve_object":{"type":"method","name":"retrieve_object","children":[],"call":["@template_object instance_variable_get ","@template_object instance_variable_defined? "]}," ActionView Helpers InstanceTag to_number_field_tag":{"type":"method","name":"to_number_field_tag","children":[],"call":[" to_input_field_tag ","options update ","range max ","range min ","options delete ","options stringify_keys ","options [] ","options stringify_keys  update ","options stringify_keys  delete ","options stringify_keys  stringify_keys ","options stringify_keys  [] "]}," ActionView Helpers FormHelper instantiate_builder":{"type":"method","name":"instantiate_builder","children":[],"call":["builder new ","ActionView Base  default_form_builder ","options [] ","ActiveModel Naming  param_key ","args shift ","args extract_options! "," default_form_builder "," model_name_from_record_or_class param_key "," model_name_from_record_or_class ","args extract_options!  [] ","args extract_args extract_options! ! "]}," ActionView Helpers FormHelper convert_to_model":{"type":"method","name":"convert_to_model","children":[],"call":["object to_model ","object respond_to? "]}," ActionView Helpers DateHelper time_tag":{"type":"method","name":"time_tag","children":[],"call":[" content_tag ","options reverse_merge ","date_or_time rfc3339 ","date_or_time xmlschema ","date_or_time acts_like? ","I18n  l ","args first ","options delete ","args extract_options! ","date_or_time iso8601 ","args extract_options!  reverse_merge ","args extract_options!  delete ","args extract_args extract_options! ! "]}," ActionView Helpers CsrfHelper csrf_meta_tags":{"type":"method","name":"csrf_meta_tags","children":[],"call":["(send nil :tag\n  (str \"meta\")\n  (hash\n    (pair\n      (sym :name)\n      (str \"csrf-param\"))\n    (pair\n      (sym :content)\n      (send nil :request_forgery_protection_token)))) join html_safe ","(send nil :tag\n  (str \"meta\")\n  (hash\n    (pair\n      (sym :name)\n      (str \"csrf-param\"))\n    (pair\n      (sym :content)\n      (send nil :request_forgery_protection_token)))) join "," tag "," form_authenticity_token "," request_forgery_protection_token "," protect_against_forgery? "]}," ActionView Helpers ControllerHelper assign_controller":{"type":"method","name":"assign_controller","children":[],"call":["controller config inheritable_copy ","controller config ","controller respond_to? ","controller request "]}," ActionView Helpers CaptureHelper provide":{"type":"method","name":"provide","children":[],"call":["@view_flow append! "," capture "," block_given? "]}," ActionView Helpers AssetTagHelper StylesheetTagHelpers stylesheet_link_tag":{"type":"method","name":"stylesheet_link_tag","children":[],"call":["@stylesheet_include include_tag ","StylesheetIncludeTag  new "," asset_paths "," config "," sprockets_stylesheet_link_tag "," config use_sprockets "]}," ActionView Helpers AssetTagHelper StylesheetTagHelpers stylesheet_path":{"type":"method","name":"stylesheet_path","children":[],"call":[" asset_paths compute_public_path "," asset_paths "," asset_path "," config use_sprockets "," config "]}," ActionView Helpers AssetTagHelper StylesheetTagHelpers ClassMethods register_stylesheet_expansion":{"type":"method","name":"register_stylesheet_expansion","children":[],"call":["style_expansions []= ","(or\n  (send\n    (lvar :style_expansions) :[]\n    (lvar :key))\n  (array)) | "," Array ","style_expansions [] ","expansions each ","StylesheetIncludeTag  expansions ","StylesheetIncludeTag  expansions  []= ","(or\n  (send\n    (lvar :StylesheetIncludeTag  expansions ) :[]\n    (lvar :key))\n  (array)) | ","StylesheetIncludeTag  expansions  [] "]}," ActionView Helpers AssetTagHelper StylesheetIncludeTag custom_dir":{"type":"method","name":"custom_dir","children":[],"call":[" config stylesheets_dir "," config "]}," ActionView Helpers AssetTagHelper StylesheetIncludeTag asset_tag":{"type":"method","name":"asset_tag","children":[],"call":[" tag ","(pair\n  (str \"rel\")\n  (str \"stylesheet\")) merge ","ERB Util  html_escape "," path_to_asset "]}," ActionView Helpers AssetTagHelper StylesheetIncludeTag extension":{"type":"method","name":"extension","children":[],"call":[]}," ActionView Helpers AssetTagHelper StylesheetIncludeTag asset_name":{"type":"method","name":"asset_name","children":[],"call":[]}," ActionView Helpers AssetTagHelper JavascriptTagHelpers javascript_include_tag":{"type":"method","name":"javascript_include_tag","children":[],"call":["@javascript_include include_tag ","JavascriptIncludeTag  new "," asset_paths "," config "," sprockets_javascript_include_tag "," config use_sprockets "]}," ActionView Helpers AssetTagHelper JavascriptTagHelpers javascript_path":{"type":"method","name":"javascript_path","children":[],"call":[" asset_paths compute_public_path "," asset_paths "," asset_path "," config use_sprockets "," config "]}," ActionView Helpers AssetTagHelper JavascriptTagHelpers ClassMethods register_javascript_expansion":{"type":"method","name":"register_javascript_expansion","children":[],"call":["js_expansions []= ","(or\n  (send\n    (lvar :js_expansions) :[]\n    (lvar :key))\n  (array)) | "," Array ","js_expansions [] ","expansions each ","JavascriptIncludeTag  expansions ","JavascriptIncludeTag  expansions  []= ","(or\n  (send\n    (lvar :JavascriptIncludeTag  expansions ) :[]\n    (lvar :key))\n  (array)) | ","JavascriptIncludeTag  expansions  [] "]}," ActionView Helpers AssetTagHelper JavascriptIncludeTag add_application_js":{"type":"method","name":"add_application_js","children":[],"call":["expanded_sources << ","expanded_sources delete ","File  exist? ","File  join "," extension "," custom_dir ","sources include? "]}," ActionView Helpers AssetTagHelper JavascriptIncludeTag expand_sources":{"type":"method","name":"expand_sources","children":[],"call":[" add_application_js "," update_source_list "," determine_source "," expansions ","sources inject ","(send\n  (begin\n    (send\n      (send\n        (send nil :determine_source\n          (sym :defaults)\n          (send nil :expansions)) :dup) :&\n      (lvar :all_asset_files))) :+\n  (lvar :all_asset_files)) uniq ","(send\n  (send\n    (send nil :determine_source\n      (sym :defaults)\n      (send nil :expansions)) :dup) :&\n  (lvar :all_asset_files)) + "," determine_source dup & "," determine_source dup ","(send\n  (send nil :collect_asset_files\n    (send nil :custom_dir)\n    (begin\n      (if\n        (lvar :recursive)\n        (str \"**\") nil))\n    (dstr\n      (str \"*.\")\n      (begin\n        (send nil :extension)))) :-\n  (array\n    (str \"application\"))) << "," collect_asset_files - "," collect_asset_files "," extension "," custom_dir ","sources include? ","(send\n  (begin\n    (send\n      (send\n        (send nil :determine_source\n          (sym :defaults)\n          (send nil :expansions)) :dup) :&\n      (lvar :(send\n  (send nil :collect_asset_files\n    (send nil :custom_dir)\n    (begin\n      (if\n        (lvar :recursive)\n        (str \"**\") nil))\n    (dstr\n      (str \"*.\")\n      (begin\n        (send nil :extension)))) :-\n  (array\n    (str \"application\"))) << ))) :+\n  (lvar :(send\n  (send nil :collect_asset_files\n    (send nil :custom_dir)\n    (begin\n      (if\n        (lvar :recursive)\n        (str \"**\") nil))\n    (dstr\n      (str \"*.\")\n      (begin\n        (send nil :extension)))) :-\n  (array\n    (str \"application\"))) << )) uniq ","(send\n  (send\n    (send nil :determine_source\n      (sym :defaults)\n      (send nil :expansions)) :dup) :&\n  (lvar :(send\n  (send nil :collect_asset_files\n    (send nil :custom_dir)\n    (begin\n      (if\n        (lvar :recursive)\n        (str \"**\") nil))\n    (dstr\n      (str \"*.\")\n      (begin\n        (send nil :extension)))) :-\n  (array\n    (str \"application\"))) << )) + "]}," ActionView Helpers AssetTagHelper JavascriptIncludeTag custom_dir":{"type":"method","name":"custom_dir","children":[],"call":[" config javascripts_dir "," config "]}," ActionView Helpers AssetTagHelper JavascriptIncludeTag asset_tag":{"type":"method","name":"asset_tag","children":[],"call":[" content_tag ","(pair\n  (str \"type\")\n  (const\n    (const nil :Mime) :JS)) merge "," path_to_asset "]}," ActionView Helpers AssetTagHelper JavascriptIncludeTag extension":{"type":"method","name":"extension","children":[],"call":[]}," ActionView Helpers AssetTagHelper JavascriptIncludeTag asset_name":{"type":"method","name":"asset_name","children":[],"call":[]}," ActionView Helpers AssetTagHelper AssetPaths rails_asset_id":{"type":"method","name":"rails_asset_id","children":[],"call":[" add_to_asset_ids_cache "," cache_asset_ids ","File  mtime to_i to_s ","File  mtime to_i ","File  mtime ","File  exist? ","File  join "," config assets_dir "," config "," asset_ids_cache [] "," asset_ids_cache ","ENV  [] "," add_to_File  mtime to_i to_s s_cache "," add_to_ asset_ids_cache [] s_cache "," add_to_ENV  [] s_cache "," cache_File  mtime to_i to_s s "," cache_ asset_ids_cache [] s "," cache_ENV  [] s "," File  mtime to_i to_s s_cache [] ","  asset_ids_cache [] s_cache [] "," ENV  [] s_cache [] "," File  mtime to_i to_s s_cache ","  asset_ids_cache [] s_cache "," ENV  [] s_cache "]}," ActionView Helpers AssetTagHelper AssetPaths rewrite_asset_path":{"type":"method","name":"rewrite_asset_path","children":[],"call":["asset_id empty? "," rails_asset_id ","path % ","path is_a? ","path call ","path respond_to? "," config asset_path "," config ","source [] == ","source [] "," rails_asset_id  empty? "," rails_ rails_asset_id  "," config asset_path  % "," config asset_path  is_a? "," config asset_path  call "," config asset_path  respond_to? "," config asset_ config asset_path  "]}," ActionView Helpers AssetTagHelper AssetPaths rewrite_extension":{"type":"method","name":"rewrite_extension","children":[],"call":["File  exist? ","File  join "," config assets_dir "," config ","ext != ","source_ext [] ","source_ext empty? ","File  extname ","File  extname  [] ","File  extname  empty? "]}," ActionView Helpers AssetTagHelper AssetPaths add_to_asset_ids_cache":{"type":"method","name":"add_to_asset_ids_cache","children":[],"call":[" asset_ids_cache []= "," asset_ids_cache "," asset_ids_cache_guard synchronize "," asset_ids_cache_guard "]}," ActionView Helpers AssetTagHelper AssetIncludeTag asset_file_path!":{"type":"method","name":"asset_file_path!","children":[],"call":[" raise ","File  exist? "," path "," asset_paths is_uri? "," asset_paths "," asset_file_path "]}," ActionView Helpers AssetTagHelper AssetIncludeTag write_asset_file_contents":{"type":"method","name":"write_asset_file_contents","children":[],"call":["File  utime ","(send\n  (lvar :asset_paths) :map) max ","File  mtime "," asset_file_path! ","asset_paths map ","cache write "," join_asset_file_contents ","File  atomic_write ","FileUtils  mkdir_p ","File  dirname "," asset_file_path ","File  (send\n  (lvar :asset_paths) :map) max ime "]}," ActionView Helpers AssetTagHelper AssetIncludeTag join_asset_file_contents":{"type":"method","name":"join_asset_file_contents","children":[],"call":["(send\n  (lvar :paths) :collect) join ","File  read "," asset_file_path! ","paths collect "]}," ActionView Helpers AssetTagHelper AssetIncludeTag determine_source":{"type":"method","name":"determine_source","children":[],"call":[" raise ","source inspect ","collection [] "]}," ActionView Helpers AssetTagHelper AssetIncludeTag collect_asset_files":{"type":"method","name":"collect_asset_files","children":[],"call":["(send\n  (send\n    (const nil :Dir) :[]\n    (send\n      (const nil :File) :join\n      (splat\n        (send\n          (lvar :path) :compact)))) :collect) sort ","file [] sub ","file [] ","(send\n  (send\n    (send\n      (lvar :file) :size) :-\n    (send\n      (lvar :dir) :size)) :-\n  (int 1)) -@ ","file size - - ","file size - ","dir size ","file size ","Dir  [] collect ","Dir  [] ","File  join ","path compact ","path first ","(send\n  (send\n    (send\n      (lvar :file) :size) :-\n    (send\n      (lvar :path first ) :size)) :-\n  (int 1)) -@ ","path first  size "]}," ActionView Helpers AssetTagHelper AssetIncludeTag ensure_sources!":{"type":"method","name":"ensure_sources!","children":[],"call":[" asset_file_path! "," path_to_asset_source ","sources each "," path_to_asset "]}," ActionView Helpers AssetTagHelper AssetIncludeTag update_source_list":{"type":"method","name":"update_source_list","children":[],"call":["list concat ","source - ","list << ","list delete "]}," ActionView Helpers AssetTagHelper AssetIncludeTag expand_sources":{"type":"method","name":"expand_sources","children":[],"call":[" update_source_list "," determine_source "," expansions ","sources inject "," collect_asset_files "," extension "," custom_dir ","sources first == ","sources first "]}," ActionView Helpers AssetTagHelper AssetIncludeTag compute_paths":{"type":"method","name":"compute_paths","children":[],"call":[" path_to_asset_source "," expand_sources collect "," expand_sources "," asset_paths compute_public_path "," extension "," asset_name pluralize "," asset_name "," asset_paths "]}," ActionView Helpers AssetTagHelper AssetIncludeTag path_to_asset_source":{"type":"method","name":"path_to_asset_source","children":[],"call":[" asset_paths compute_source_path "," extension "," asset_name to_s pluralize "," asset_name to_s "," asset_name "," asset_paths "]}," ActionView Helpers AssetTagHelper AssetIncludeTag path_to_asset":{"type":"method","name":"path_to_asset","children":[],"call":[" asset_paths compute_public_path "," extension "," asset_name to_s pluralize "," asset_name to_s "," asset_name "," asset_paths ","options merge "]}," ActionView Helpers AssetTagHelper AssetIncludeTag include_tag":{"type":"method","name":"include_tag","children":[],"call":["(send\n  (lvar :sources) :collect) join html_safe ","(send\n  (lvar :sources) :collect) join "," asset_tag ","sources collect "," ensure_sources! "," expand_sources "," write_asset_file_contents "," compute_paths ","File  exists? "," config perform_caching "," config ","File  join "," custom_dir "," config assets_dir ","joined_name [] ","(if\n  (send\n    (lvar :cache) :==\n    (true))\n  (str \"all\")\n  (lvar :cache)) + "," extension ","cache == ","options delete ","sources extract_options! stringify_keys ","sources extract_options! ","(send\n  (lvar : expand_sources ) :collect) join html_safe ","(send\n  (lvar : expand_sources ) :collect) join "," expand_sources  collect "," ensure_ expand_sources ! "," expand_ expand_sources  ","(if\n  (send\n    (lvar :cache) :==\n    (true))\n  (str \"all\")\n  (lvar :cache)) +  [] ","sources extract_options! stringify_keys  delete "," expand_sources  extract_options! stringify_keys ","sources extract_sources extract_options! stringify_keys ! stringify_keys "," expand_sources  extract_options! ","sources extract_sources extract_options! stringify_keys ! "]}," ActionView Helpers AssetTagHelper AssetIncludeTag asset_tag":{"type":"method","name":"asset_tag","children":[],"call":[" raise "]}," ActionView Helpers AssetTagHelper AssetIncludeTag custom_dir":{"type":"method","name":"custom_dir","children":[],"call":[" raise "]}," ActionView Helpers AssetTagHelper AssetIncludeTag extension":{"type":"method","name":"extension","children":[],"call":[" raise "]}," ActionView Helpers AssetTagHelper AssetIncludeTag asset_name":{"type":"method","name":"asset_name","children":[],"call":[" raise "]}," ActionView Helpers AssetTagHelper AssetIncludeTag initialize":{"type":"method","name":"initialize","children":[],"call":[]}," ActionView Helpers AssetTagHelper AssetIncludeTag inherited":{"type":"method","name":"inherited","children":[],"call":[]}," ActionView Helpers AssetTagHelper asset_paths":{"type":"method","name":"asset_paths","children":[],"call":["AssetTagHelper AssetPaths  new "," controller "," config "]}," ActionView Helpers AssetTagHelper image_alt":{"type":"method","name":"image_alt","children":[],"call":["File  basename sub capitalize ","File  basename sub ","File  basename ","File  basename sub tr capitalize ","File  basename sub tr "]}," ActionView StreamingFlow inside_fiber?":{"type":"method","name":"inside_fiber?","children":[],"call":["Fiber  current object_id != ","Fiber  current object_id ","Fiber  current "]}," ActionView StreamingFlow append!":{"type":"method","name":"append!","children":[],"call":["@fiber resume ","@waiting_for == "]}," ActionView StreamingFlow get":{"type":"method","name":"get","children":[],"call":["view output_buffer ","view output_buffer= ","Fiber  yield "," inside_fiber? ","@content key? "]}," ActionView StreamingFlow initialize":{"type":"method","name":"initialize","children":[],"call":["Fiber  current object_id ","Fiber  current ","view view_flow content ","view view_flow ","view output_buffer "]}," ActionView OutputFlow append!":{"type":"method","name":"append!","children":[],"call":["@content [] << ","@content [] "]}," ActionView OutputFlow append":{"type":"method","name":"append","children":[],"call":["@content [] << ","@content [] "]}," ActionView OutputFlow set":{"type":"method","name":"set","children":[],"call":["@content []= "]}," ActionView OutputFlow get":{"type":"method","name":"get","children":[],"call":["@content [] "]}," ActionView OutputFlow initialize":{"type":"method","name":"initialize","children":[],"call":["h []= ","ActiveSupport SafeBuffer  new ","Hash  new "]}," ActionView Context _layout_for":{"type":"method","name":"_layout_for","children":[],"call":[" view_flow get html_safe "," view_flow get "," view_flow "]}," ActionView Context _prepare_context":{"type":"method","name":"_prepare_context","children":[],"call":["OutputFlow  new "]}," ActionView StreamingBuffer html_safe":{"type":"method","name":"html_safe","children":[],"call":[]}," ActionView StreamingBuffer html_safe?":{"type":"method","name":"html_safe?","children":[],"call":[]}," ActionView StreamingBuffer safe_concat":{"type":"method","name":"safe_concat","children":[],"call":["@block call ","value to_s "]}," ActionView StreamingBuffer <<":{"type":"method","name":"<<","children":[],"call":["@block call ","ERB Util  h ","value html_safe? ","value to_s ","ERB Util  h  html_safe? ","value to_s  html_safe? ","ERB Util  h  to_s ","value to_s  to_s "]}," ActionView StreamingBuffer initialize":{"type":"method","name":"initialize","children":[],"call":[]}," ActionView Base prepare":{"type":"method","name":"prepare","children":[],"call":[" helpers= "," include ","routes mounted_helpers ","routes url_helpers ","Class  new "]}," ActionView Base cache_template_loading=":{"type":"method","name":"cache_template_loading=","children":[],"call":["ActionView Resolver  caching= "]}," ActionView Base cache_template_loading":{"type":"method","name":"cache_template_loading","children":[],"call":["ActionView Resolver  caching? "]}," ActionView AssetPaths arity_of":{"type":"method","name":"arity_of","children":[],"call":["callable method arity ","callable method ","callable arity ","callable respond_to? "]}," ActionView AssetPaths current_request":{"type":"method","name":"current_request","children":[],"call":[" controller request "," controller "," has_request? "]}," ActionView AssetPaths asset_host_config":{"type":"method","name":"asset_host_config","children":[],"call":[" config asset_host "," config "," config action_controller asset_host "," config action_controller "," config action_controller present? "]}," ActionView AssetPaths relative_url_root":{"type":"method","name":"relative_url_root","children":[],"call":["config relative_url_root ","config action_controller ","config action_controller present? "," controller config "," controller "," controller respond_to? "," config relative_url_root "," config "," config action_controller relative_url_root "," config action_controller "," config action_controller present? "," controller config  relative_url_root "," controller config  action_controller "," controller config  action_controller present? "," controller  controller config  ","  controller config  relative_url_root ","  controller config  ","  controller config  action_controller relative_url_root ","  controller config  action_controller ","  controller config  action_controller present? "]}," ActionView AssetPaths compute_asset_host":{"type":"method","name":"compute_asset_host","children":[],"call":["host % ","Zlib  crc32 % ","Zlib  crc32 ","host =~ ","host call ","args << "," current_request "," has_request? ","arity < ","arity > "," invalid_asset_host! "," has_request? ! "," arity_of ","host respond_to? "," asset_host_config "," asset_host_config  % "," asset_host_config  =~ "," asset_host_config  call "," arity_of  < "," arity_of  > "," invalid_asset_ asset_host_config ! ","  arity_of _of "," asset_host_config  respond_to? "," asset_ asset_host_config _config "]}," ActionView AssetPaths invalid_asset_host!":{"type":"method","name":"invalid_asset_host!","children":[],"call":[" raise "]}," ActionView AssetPaths default_protocol":{"type":"method","name":"default_protocol","children":[],"call":[" has_request? ","@config default_asset_host_protocol ","@config action_controller default_asset_host_protocol ","@config action_controller ","@config action_controller present? ","@config default_asset_host_@config action_controller default_asset_host_protocol  ","@config action_controller default_asset_host_@config action_controller default_asset_host_protocol  "]}," ActionView AssetPaths compute_protocol":{"type":"method","name":"compute_protocol","children":[],"call":["@controller request protocol ","@controller request "," invalid_asset_host! "," default_protocol "]}," ActionView AssetPaths rewrite_host_and_protocol":{"type":"method","name":"rewrite_host_and_protocol","children":[],"call":["host nil? "," compute_protocol "," has_request? ! "," has_request? ","(or\n  (lvar :protocol)\n  (send nil :default_protocol)) == "," default_protocol "," is_uri? ! "," is_uri? "," compute_asset_host "," compute_asset_host  nil? "," compute_asset_ compute_asset_host  "]}," ActionView AssetPaths has_request?":{"type":"method","name":"has_request?","children":[],"call":[" controller respond_to? "," controller "]}," ActionView AssetPaths rewrite_relative_url_root":{"type":"method","name":"rewrite_relative_url_root","children":[],"call":["source starts_with? ! ","source starts_with? "]}," ActionView AssetPaths rewrite_asset_path":{"type":"method","name":"rewrite_asset_path","children":[],"call":[" raise "]}," ActionView AssetPaths rewrite_extension":{"type":"method","name":"rewrite_extension","children":[],"call":[" raise "]}," ActionView AssetPaths is_uri?":{"type":"method","name":"is_uri?","children":[],"call":["path =~ "]}," ActionView AssetPaths compute_source_path":{"type":"method","name":"compute_source_path","children":[],"call":["File  join "," config assets_dir "," config "," rewrite_extension ","sources << ","source [] == ","source [] "," rewrite_extension s << "," rewrite_extension  [] == "," rewrite_extension  [] "]}," ActionView AssetPaths compute_public_path":{"type":"method","name":"compute_public_path","children":[],"call":[" rewrite_host_and_protocol "," rewrite_relative_url_root "," relative_url_root "," has_request? "," rewrite_asset_path "," rewrite_extension "," is_uri? ","source to_s ","options [] "," rewrite_host_and_protocol  to_s "," rewrite_relative_url_root  to_s "," rewrite_asset_path  to_s "," rewrite_extension  to_s ","source to_s  to_s "]}," ActionView AssetPaths initialize":{"type":"method","name":"initialize","children":[],"call":[]}," ActionDispatch TestRequest escape_cookie":{"type":"method","name":"escape_cookie","children":[],"call":["Rack Utils  escape ","value to_s "]}," ActionDispatch Integration Runner integration_session":{"type":"method","name":"integration_session","children":[],"call":[" create_session "," app "]}," ActionDispatch Integration Runner respond_to?":{"type":"method","name":"respond_to?","children":[],"call":[" integration_session respond_to? "," integration_session "]}," ActionDispatch Assertions SelectorAssertions response_from_page":{"type":"method","name":"response_from_page","children":[],"call":[" html_document root "," html_document "]}," ActionDispatch Routing UrlFor _routes_context":{"type":"method","name":"_routes_context","children":[],"call":[]}," ActionDispatch Routing UrlFor _with_routes":{"type":"method","name":"_with_routes","children":[],"call":[]}," ActionDispatch Routing UrlFor initialize":{"type":"method","name":"initialize","children":[],"call":[]}," ActionDispatch Routing RoutesProxy method_missing":{"type":"method","name":"method_missing","children":[],"call":[" send "," class class_eval ","21 + "," class "," routes url_helpers respond_to? "," routes url_helpers "," routes ","25 + ","27 + ","28 + ","@helpers respond_to? ","29 + "," public_send ","32 + "," instance_eval "]}," ActionDispatch Routing RoutesProxy url_options":{"type":"method","name":"url_options","children":[],"call":[" scope url_options "," scope "," scope send "," routes "]}," ActionDispatch Routing RoutesProxy initialize":{"type":"method","name":"initialize","children":[],"call":[]}," ActionDispatch Routing RouteSet extract_authentication":{"type":"method","name":"extract_authentication","children":[],"call":["options delete ","options [] "]}," ActionDispatch Routing RouteSet _generate_prefix":{"type":"method","name":"_generate_prefix","children":[],"call":[]}," ActionDispatch Routing RouteSet define_mounted_helper":{"type":"method","name":"define_mounted_helper","children":[],"call":["MountedHelpers  class_eval ","RoutesProxy  new "," _routes_context "," define_method ","MountedHelpers  method_defined? ","357 + ","361 + ","356 + ","382 + ","378 + ","376 + ","392 + ","390 + ","385 + ","469 + ","423 + ","453 + ","478 + ","480 + ","routes url_helpers ","433 + ","424 + ","435 + ","473 + ","471 + ","481 + ","477 + ","467 + ","474 + ","476 + ","472 + ","493 + ","routes url_routes url_helpers  "]}," ActionDispatch Routing RouteSet mounted_helpers":{"type":"method","name":"mounted_helpers","children":[],"call":[]}," ActionDispatch Routing RouteSet eval_block":{"type":"method","name":"eval_block","children":[],"call":["mapper instance_exec ","mapper with_default_scope "," default_scope ","Mapper  new "," raise ","You are using the old router DSL which has been removed in Rails 3.1.  << << ","You are using the old router DSL which has been removed in Rails 3.1.  << ","block arity == ","block arity ","Mapper  new  instance_exec ","Mapper  new  with_default_scope "]}," ActionDispatch Routing RouteSet prepend":{"type":"method","name":"prepend","children":[],"call":["@prepend << "]}," ActionDispatch Routing RouteSet append":{"type":"method","name":"append","children":[],"call":["@append << "]}," ActionDispatch Routing Redirection redirection_proc":{"type":"method","name":"redirection_proc","children":[],"call":["body length to_s ","body length ","uri to_s ","ERB Util  h ","req port ","uri port ","req standard_port? ","req host ","uri host ","req scheme ","uri scheme ","URI  parse ","path_proc call ","params << ","path_proc arity > ","path_proc arity ","req symbolized_path_parameters ","Request  new "," lambda ","URI  parse  to_s ","Request  new  port ","URI  parse  port ","Request  new  standard_port? ","Request  new  host ","URI  parse  host ","Request  new  scheme ","URI  parse  scheme ","Request  new  symbolized_path_parameters "]}," ActionDispatch Routing Redirection options_proc":{"type":"method","name":"options_proc","children":[],"call":["ActionDispatch Http URL  url_for ","options reverse_merge ","request query_parameters ","request optional_port ","request host ","request protocol ","options delete % ","options delete ","options [] match ! ","options [] match ","options [] ","params empty? ","request path ","options [] nil? "," proc "," escape_path ","request request path  "," escape_request path  "]}," ActionDispatch Routing Redirection redirect":{"type":"method","name":"redirect","children":[],"call":[" redirection_proc "," raise ","path call "," proc ","path respond_to? "," options_proc ","options any? ","path % ","path match ! ","path match ","params empty? ","path is_a? ","args shift ","options delete ","args pop ","args last is_a? ","args last "," escape ","Redirect  new ","block call "," lambda ","ActiveSupport Deprecation  warn ","block arity ","block arity < ","block respond_to? ","String  === ","OptionRedirect  new ","deprecated_block call ","PathRedirect  new ","args extract_options! ","args shift  call ","args shift  respond_to? "," args pop _proc "," args extract_options! _proc ","args pop  any? ","args extract_options!  any? ","args shift  % ","args shift  match ! ","args shift  match ","args shift  is_a? ","args pop  delete ","args extract_options!  delete ","args extract_args pop ! ","args extract_args extract_options! ! "]}," ActionDispatch Routing Mapper initialize":{"type":"method","name":"initialize","children":[],"call":["@set resources_path_names ","Scope  new ","set draw_paths "]}," ActionDispatch Routing Mapper Base define_generate_prefix":{"type":"method","name":"define_generate_prefix","children":[],"call":["_routes url_helpers send ","_routes url_helpers ","options delete ","_route segment_keys each ","_route segment_keys ","options slice "," define_method ","app routes class_eval ","app routes ","app routes define_mounted_helper ","@set named_routes routes [] ","name to_sym ","@set named_routes routes ","@set named_routes ","app routes respond_to? ","app respond_to? ","prefix == ","prefix gsub ","app routes singleton_class class_eval ","app routes singleton_class "," redefine_method ","app routes extend ","options key? ","Module  new ","@set named_routes get ","prefix_options []= "," freeze ","script_namer call ","prefix_options reverse_merge! ","options [] slice ","options [] "," lambda ","_url_helpers send ","@set url_helpers ","_url_helpers public_send ","@set named_routes routes [] s url_helpers send ","@set named_routes get s url_helpers send ","@set named_routes routes [] s url_helpers ","@set named_routes get s url_helpers ","@set named_routes routes []  segment_keys each ","@set named_routes get  segment_keys each ","@set named_routes routes []  segment_keys ","@set named_routes get  segment_keys ","@set named@set named_routes routes [] s routes [] ","@set named@set named_routes get s routes [] ","@set named@set named_routes routes [] s routes ","@set named@set named_routes get s routes ","@set named@set named_routes routes [] s ","@set named@set named_routes get s ","_routes url_helpers send  == ","prefix gsub  == ","_routes url_helpers send  gsub ","prefix gsub  gsub ","@set named@set named_routes routes [] s get ","@set named@set named_routes get s get ","options slice  []= ","_routes url_helpers send _options []= ","prefix gsub _options []= ","options slice  reverse_merge! ","_routes url_helpers send _options reverse_merge! ","prefix gsub _options reverse_merge! ","@set url_helpers  send ","@set url_helpers  public_send "]}," ActionDispatch Routing Mapper Base app_name":{"type":"method","name":"app_name","children":[],"call":["ActiveSupport Inflector  underscore gsub ","ActiveSupport Inflector  underscore ","app class name ","app class ","app name ","app class is_a? ","app railtie_name ","app respond_to? ","ActiveSupport Inflector  underscore tr ","app is_a? "]}," ActionDispatch Routing Mapper Base with_default_scope":{"type":"method","name":"with_default_scope","children":[],"call":[" instance_exec "," scope "]}," ActionDispatch FileHandler ext":{"type":"method","name":"ext","children":[],"call":[" ActionController Base  page_cache_extension "," ActionController Base  default_static_extension "," ActionController Base  page_cache_ ActionController Base  page_cache_extension ension "," ActionController Base  page_cache_ ActionController Base  default_static_extension ension "," ActionController Base  default_static_ ActionController Base  page_cache_extension ension "," ActionController Base  default_static_ ActionController Base  default_static_extension ension "]}," ActionDispatch FileHandler call":{"type":"method","name":"call","children":[],"call":["@file_server call ","env []= ","headers []= "," content_type "," gzip_encoding_accepted? "," gzip_file_path ","env [] ","status == "," serve ","ActionDispatch Request  new ","Rack Request  new "," attempt "," gzip_file_env []  "]}," ActionDispatch FileHandler match?":{"type":"method","name":"match?","children":[],"call":["match sub! ","File  file? ","matches detect ","Dir  [] "," ext ","File  join "," Rack Utils  unescape ","path empty? ","path dup "," Rack Utils  escape "," escape_glob_chars "," unescape_path "," clean_path_info ","File  readable? ","path valid_encoding? ","paths detect ","Rack Utils  clean_path_info ","(lvar :path) map ","URI  parser unescape ","URI  parser ","p force_encoding "," valid_path? "," Rack Utils  escape_path ","UTF-8 freeze "," Rack Utils  unescape_path "," Rack Utils  clean_path_info "," Rack Utils  valid_path? ","p dup force_encoding ","p dup "," Rack Utils  escape_path b ","p b ","Dir  []  detect ","path dup  empty? "," unescape_path  empty? ","File  join  empty? ","URI  parser unescape  empty? ","Rack Utils  clean_path_info  empty? "," Rack Utils  unescape_path  empty? "," Rack Utils  clean_path_info  empty? ","path dup  dup "," unescape_path  dup ","File  join  dup ","URI  parser unescape  dup ","Rack Utils  clean_path_info  dup "," Rack Utils  unescape_path  dup "," Rack Utils  clean_path_info  dup "," unescape_path dup  "," unescape_ unescape_path  "," unescape_File  join  "," unescape_URI  parser unescape  "," unescape_Rack Utils  clean_path_info  "," unescape_ Rack Utils  unescape_path  "," unescape_ Rack Utils  clean_path_info  "," clean_path dup _info "," clean_ unescape_path _info "," clean_File  join _info "," clean_URI  parser unescape _info "," clean_Rack Utils  clean_path_info _info "," clean_ Rack Utils  unescape_path _info "," clean_ Rack Utils  clean_path_info _info ","path dup  valid_encoding? "," unescape_path  valid_encoding? ","File  join  valid_encoding? ","URI  parser unescape  valid_encoding? ","Rack Utils  clean_path_info  valid_encoding? "," Rack Utils  unescape_path  valid_encoding? "," Rack Utils  clean_path_info  valid_encoding? ","path dup s detect "," unescape_path s detect ","File  join s detect ","URI  parser unescape s detect ","Rack Utils  clean_path_info s detect "," Rack Utils  unescape_path s detect "," Rack Utils  clean_path_info s detect ","Rack Utils  clean_path dup _info ","Rack Utils  clean_ unescape_path _info ","Rack Utils  clean_File  join _info ","Rack Utils  clean_URI  parser unescape _info ","Rack Utils  clean_Rack Utils  clean_path_info _info ","Rack Utils  clean_ Rack Utils  unescape_path _info ","Rack Utils  clean_ Rack Utils  clean_path_info _info ","(lvar :path dup ) map ","(lvar : unescape_path ) map ","(lvar :File  join ) map ","(lvar :URI  parser unescape ) map ","(lvar :Rack Utils  clean_path_info ) map ","(lvar : Rack Utils  unescape_path ) map ","(lvar : Rack Utils  clean_path_info ) map "," valid_path dup ? "," valid_ unescape_path ? "," valid_File  join ? "," valid_URI  parser unescape ? "," valid_Rack Utils  clean_path_info ? "," valid_ Rack Utils  unescape_path ? "," valid_ Rack Utils  clean_path_info ? "," Rack Utils  escape_path dup  "," Rack Utils  escape_ unescape_path  "," Rack Utils  escape_File  join  "," Rack Utils  escape_URI  parser unescape  "," Rack Utils  escape_Rack Utils  clean_path_info  "," Rack Utils  escape_ Rack Utils  unescape_path  "," Rack Utils  escape_ Rack Utils  clean_path_info  "," Rack Utils  unescape_path dup  "," Rack Utils  unescape_ unescape_path  "," Rack Utils  unescape_File  join  "," Rack Utils  unescape_URI  parser unescape  "," Rack Utils  unescape_Rack Utils  clean_path_info  "," Rack Utils  unescape_ Rack Utils  unescape_path  "," Rack Utils  unescape_ Rack Utils  clean_path_info  "," Rack Utils  clean_path dup _info "," Rack Utils  clean_ unescape_path _info "," Rack Utils  clean_File  join _info "," Rack Utils  clean_URI  parser unescape _info "," Rack Utils  clean_Rack Utils  clean_path_info _info "," Rack Utils  clean_ Rack Utils  unescape_path _info "," Rack Utils  clean_ Rack Utils  clean_path_info _info "," Rack Utils  valid_path dup ? "," Rack Utils  valid_ unescape_path ? "," Rack Utils  valid_File  join ? "," Rack Utils  valid_URI  parser unescape ? "," Rack Utils  valid_Rack Utils  clean_path_info ? "," Rack Utils  valid_ Rack Utils  unescape_path ? "," Rack Utils  valid_ Rack Utils  clean_path_info ? "," Rack Utils  escape_path dup  b "," Rack Utils  escape_ unescape_path  b "," Rack Utils  escape_File  join  b "," Rack Utils  escape_URI  parser unescape  b "," Rack Utils  escape_Rack Utils  clean_path_info  b "," Rack Utils  escape_ Rack Utils  unescape_path  b "," Rack Utils  escape_ Rack Utils  clean_path_info  b "]}," ActionDispatch FileHandler initialize":{"type":"method","name":"initialize","children":[],"call":[" Rack File  new ","Regexp  escape ","root chomp ","root chomp b "," Array map | "," Array map "," Array "," Rack Files  new "]}," ActionDispatch MiddlewareStack delete":{"type":"method","name":"delete","children":[],"call":[" middlewares delete "," middlewares ","m klass == ","m klass "," middlewares delete_if "," get_class ","m name == ","target name ","m name "," middlewares reject! "," get_class  name "]}," ActionDispatch MiddlewareStack initialize_copy":{"type":"method","name":"initialize_copy","children":[],"call":[" middlewares= ","other middlewares dup ","other middlewares "]}," ActionDispatch MiddlewareStack []":{"type":"method","name":"[]","children":[],"call":[" middlewares [] "," middlewares "]}," ActionDispatch MiddlewareStack last":{"type":"method","name":"last","children":[],"call":[" middlewares last "," middlewares "]}," ActionDispatch MiddlewareStack size":{"type":"method","name":"size","children":[],"call":[" middlewares size "," middlewares "]}," ActionDispatch MiddlewareStack each":{"type":"method","name":"each","children":[],"call":["@middlewares each "]}," ActionDispatch ShowExceptions registered_original_exception?":{"type":"method","name":"registered_original_exception?","children":[],"call":["@@rescue_responses has_key? ","exception original_exception class name ","exception original_exception class ","exception original_exception ","exception respond_to? "]}," ActionDispatch ShowExceptions original_exception":{"type":"method","name":"original_exception","children":[],"call":["exception original_exception "," registered_original_exception? "]}," ActionDispatch Session AbstractStore destroy_session":{"type":"method","name":"destroy_session","children":[],"call":[" destroy ","ActiveSupport Deprecation  warn ","Implementing #destroy in session stores is deprecated.  << "]}," ActionDispatch Session StaleSessionCheck stale_session_check!":{"type":"method","name":"stale_session_check!","children":[],"call":[" raise ","const_error class ","const_error message ","1 constantize ","argument_error message =~ ","argument_error message ","Session contains objects whose class definition isn't available.\n + + ","Session contains objects whose class definition isn't available.\n + ","e backtrace "]}," ActionDispatch Session StaleSessionCheck extract_session_id":{"type":"method","name":"extract_session_id","children":[],"call":[" stale_session_check! "]}," ActionDispatch Session StaleSessionCheck load_session":{"type":"method","name":"load_session","children":[],"call":[" stale_session_check! "]}," ActionDispatch Session Compatibility initialize_sid":{"type":"method","name":"initialize_sid","children":[],"call":["@default_options delete "]}," ActionDispatch Session Compatibility generate_sid":{"type":"method","name":"generate_sid","children":[],"call":["sid encode! ","sid respond_to? ","SecureRandom  hex ","ActiveSupport SecureRandom  hex ","SecureRandom  hex  encode! ","ActiveSupport SecureRandom  hex  encode! ","SecureRandom  hex  respond_to? ","ActiveSupport SecureRandom  hex  respond_to? "]}," ActionDispatch Session Compatibility initialize":{"type":"method","name":"initialize","children":[],"call":["options [] ","SecureRandom  hex "]}," ActionDispatch Session DestroyableSession destroy":{"type":"method","name":"destroy","children":[],"call":["options []= ","@by send ","options [] ","@env [] "," clear ","@env []  []= ","@env []  [] "]}," ActionDispatch Reloader call":{"type":"method","name":"call","children":[],"call":[" raise "," run_callbacks ","response [] extend ","response [] ","@app call "," cleanup! ","response []= ","ActionDispatch BodyProxy  new "," prepare! ","@condition call "," module_hook "," Rack BodyProxy  new ","@app call  [] extend ","@app call  [] ","@app call  []= "]}," ActionDispatch Reloader CleanupOnClose close":{"type":"method","name":"close","children":[],"call":["ActionDispatch Reloader  cleanup! "]}," ActionDispatch Reloader initialize":{"type":"method","name":"initialize","children":[],"call":[" lambda "]}," ActionDispatch Reloader cleanup!":{"type":"method","name":"cleanup!","children":[],"call":[" run_callbacks "," validated? "]}," ActionDispatch Reloader prepare!":{"type":"method","name":"prepare!","children":[],"call":[" run_callbacks "," validated? "]}," ActionDispatch Reloader to_cleanup":{"type":"method","name":"to_cleanup","children":[],"call":[]}," ActionDispatch Reloader to_prepare":{"type":"method","name":"to_prepare","children":[],"call":[]}," ActionDispatch Flash FlashHash now_is_loaded?":{"type":"method","name":"now_is_loaded?","children":[],"call":["@now ! ! ","@now ! "]}," ActionDispatch Flash FlashHash close!":{"type":"method","name":"close!","children":[],"call":[]}," ActionDispatch Flash FlashHash each":{"type":"method","name":"each","children":[],"call":["@flashes each "]}," ActionDispatch Flash FlashHash clear":{"type":"method","name":"clear","children":[],"call":["@flashes clear ","@discard clear "]}," ActionDispatch Flash FlashHash empty?":{"type":"method","name":"empty?","children":[],"call":["@flashes empty? "]}," ActionDispatch Flash FlashHash to_hash":{"type":"method","name":"to_hash","children":[],"call":["@flashes dup "]}," ActionDispatch Flash FlashHash delete":{"type":"method","name":"delete","children":[],"call":["@flashes delete ","@discard delete ","key to_s ","key to_s  to_s "]}," ActionDispatch Flash FlashHash key?":{"type":"method","name":"key?","children":[],"call":["@flashes key? ","name to_s "]}," ActionDispatch Flash FlashHash keys":{"type":"method","name":"keys","children":[],"call":["@flashes keys "]}," ActionDispatch Flash FlashHash []":{"type":"method","name":"[]","children":[],"call":["@flashes [] ","k to_s "]}," ActionDispatch Flash FlashHash initialize_copy":{"type":"method","name":"initialize_copy","children":[],"call":["@now flash= ","other now dup ","other now ","other now_is_loaded? ","other now dup  flash= "]}," ActionDispatch Cookies CookieJar update":{"type":"method","name":"update","children":[],"call":["@cookies update ","other_hash stringify_keys "]}," ActionDispatch Cookies CookieJar key?":{"type":"method","name":"key?","children":[],"call":["@cookies key? ","name to_s "]}," ActionDispatch Cookies CookieJar close!":{"type":"method","name":"close!","children":[],"call":[]}," ActionDispatch ClosedError initialize":{"type":"method","name":"initialize","children":[],"call":[]}," ActionDispatch Http URL optional_port":{"type":"method","name":"optional_port","children":[],"call":[" port "," standard_port? "]}," ActionDispatch Http URL host_or_subdomain_and_domain":{"type":"method","name":"host_or_subdomain_and_domain","children":[],"call":["host << "," extract_domain ","options [] "," extract_subdomain ","(or\n  (send\n    (lvar :options) :[]\n    (sym :subdomain))\n  (send nil :extract_subdomain\n    (send\n      (lvar :options) :[]\n      (sym :host))\n    (lvar :tld_length))) to_param ","options [] == ","options [] nil? "," named_host? ! "," named_host? "]}," ActionDispatch Http URL rewrite_authentication":{"type":"method","name":"rewrite_authentication","children":[],"call":["Rack Utils  escape ","options [] "]}," ActionDispatch Http URL url_for":{"type":"method","name":"url_for","children":[],"call":["rewritten_url << ","Rack Mount Utils  escape_uri ","options [] to_param to_s ","options [] to_param ","options [] ","params to_query ","params empty? ","/ + ","path sub ","v to_param nil? ","v to_param ","params reject! ","options delete "," host_or_subdomain_and_domain "," rewrite_authentication ","rewritten_url match ","options [] == "," raise ","options [] present? ","Journey Router Utils  escape_fragment ","path ends_with? ! ","path ends_with? ","result << ","path include? "," build_host_url ","options slice ","options [] is_a? ","path << ","options delete to_s ","options delete to_s chomp ","options dup "," add_trailing_slash "," full_url_for "," path_for ","options dup  [] to_param to_s ","options dup  [] to_param ","options dup  [] ","options slice  to_query ","options []  to_query ","options slice  empty? ","options []  empty? ","options delete to_s chomp  sub ","options slice  reject! ","options []  reject! ","options dup  delete ","options dup  [] == ","options dup  [] present? ","options delete to_s chomp  ends_with? ! ","options delete to_s chomp  ends_with? "," build_host_url  << ","options delete to_s chomp  include? ","options dup  slice ","options dup  [] is_a? ","options delete to_s chomp  << ","options dup  delete to_s ","options dup  delete to_s chomp ","options dup  dup "," options delete to_s chomp _for "]}," ActionDispatch Http URL extract_subdomain":{"type":"method","name":"extract_subdomain","children":[],"call":[" extract_subdomains join "," extract_subdomains "]}," ActionDispatch Http URL extract_subdomains":{"type":"method","name":"extract_subdomains","children":[],"call":["parts [] ","(send\n  (lvar :tld_length) :+\n  (int 2)) -@ ","tld_length + ","host split "," named_host? "," extract_subdomains_from ","host split  [] "]}," ActionDispatch Http URL extract_domain":{"type":"method","name":"extract_domain","children":[],"call":["host split last join ","host split last ","1 + ","host split "," named_host? "," extract_domain_from "]}," ActionDispatch Response close":{"type":"method","name":"close","children":[],"call":["@body close ","@body respond_to? "," stream close "," stream "," stream respond_to? "]}," ActionDispatch Response BodyBuster write":{"type":"method","name":"write","children":[],"call":["@body << ","string to_s "]}," ActionDispatch Response BodyBuster bust":{"type":"method","name":"bust","children":[],"call":["body close ","body respond_to? ","body call "]}," ActionDispatch Response BodyBuster initialize":{"type":"method","name":"initialize","children":[],"call":[]}," ActionDispatch Request check_method":{"type":"method","name":"check_method","children":[],"call":[" raise ","HTTP_METHODS  to_sentence ","HTTP_METHOD_LOOKUP  [] ","HTTP_METHODS  [] ","HTTP_METHODS  [] join "]}," ActionDispatch RailsEntityStore write":{"type":"method","name":"write","children":[],"call":["@store write ","buf << "," slurp "]}," ActionDispatch RailsEntityStore read":{"type":"method","name":"read","children":[],"call":["body join "," open "," open  join "]}," ActionDispatch RailsEntityStore open":{"type":"method","name":"open","children":[],"call":["@store read "]}," ActionDispatch RailsEntityStore exist?":{"type":"method","name":"exist?","children":[],"call":["@store exist? "]}," ActionDispatch RailsEntityStore initialize":{"type":"method","name":"initialize","children":[],"call":[]}," ActionDispatch RailsEntityStore resolve":{"type":"method","name":"resolve","children":[],"call":[]}," ActionDispatch RailsMetaStore write":{"type":"method","name":"write","children":[],"call":["@store write ","Marshal  dump "]}," ActionDispatch RailsMetaStore read":{"type":"method","name":"read","children":[],"call":["Marshal  load ","@store read "]}," ActionDispatch RailsMetaStore initialize":{"type":"method","name":"initialize","children":[],"call":[]}," ActionDispatch RailsMetaStore resolve":{"type":"method","name":"resolve","children":[],"call":[]}," Mime Type unregister":{"type":"method","name":"unregister","children":[],"call":["v eql? ","EXTENSION_LOOKUP  delete_if ","LOOKUP  delete_if ","SET  delete_if "," remove_const ","Mime  instance_eval ","Mime  const_get ","symbol to_s upcase ","symbol to_s ","symbol upcase ","Mime  [] ","symbol downcase ","symbol to_s upcase  to_s upcase ","symbol upcase  to_s upcase ","symbol downcase  to_s upcase ","symbol to_s upcase  to_s ","symbol upcase  to_s ","symbol downcase  to_s ","symbol to_s upcase  upcase ","symbol upcase  upcase ","symbol downcase  upcase ","symbol to_s upcase  downcase ","symbol upcase  downcase ","symbol downcase  downcase "]}," Mime Type parse_data_with_trailing_star":{"type":"method","name":"parse_data_with_trailing_star","children":[],"call":["m =~ ","Mime SET  select ","m match? "]}," ActionDispatch Http MimeNegotiation use_accept_header":{"type":"method","name":"use_accept_header","children":[],"call":[" class ignore_accept_header ! "," class ignore_accept_header "," class "]}," ActionDispatch Http MimeNegotiation valid_accept_header":{"type":"method","name":"valid_accept_header","children":[],"call":[" accept !~ "," accept "," xhr? "," content_mime_type "," accept present? "," accept match? ! "," accept match? "]}," ActionDispatch Http Cache Response prepare_cache_control!":{"type":"method","name":"prepare_cache_control!","children":[],"call":["@cache_control []= ","first to_sym ","segment split ","cache_control split each ","cache_control split "," [] "," cache_control_headers ","@ []  []= "," cache_control_headers  []= "," []  split each "," []  split ","  [] _headers "]}," ActionController TestCase Behavior paramify_values":{"type":"method","name":"paramify_values","children":[],"call":["hash_or_array_or_value to_param "," paramify_values ","hash_or_array_or_value map ","Hash  [] ","hash_or_array_or_value []= ","hash_or_array_or_value each "]}," ActionController Railties Paths with":{"type":"method","name":"with","children":[],"call":[]}," ActionController Metal env":{"type":"method","name":"env","children":[],"call":["@_request env "]}," ActionController Testing recycle!":{"type":"method","name":"recycle!","children":[],"call":[]}," ActionController Streaming _render_template":{"type":"method","name":"_render_template","children":[],"call":["Rack Chunked Body  new "," view_renderer render_body "," view_context "," view_renderer ","options delete ","Body  new "]}," ActionController Streaming _process_options":{"type":"method","name":"_process_options","children":[],"call":[" headers delete "," headers "," headers []= "," headers [] ","options delete "," env [] == "," env [] "," env ","options [] "," request version == "," request version "," request "]}," ActionController Streaming _normalize_options":{"type":"method","name":"_normalize_options","children":[],"call":["options []= "," stream ","options key? "]}," ActionController Streaming _stream_filter":{"type":"method","name":"_stream_filter","children":[],"call":[" stream= "]}," ActionController Streaming ClassMethods stream":{"type":"method","name":"stream","children":[],"call":[" raise "," before_filter ","ActiveSupport Deprecation  warn "]}," ActionController Responder display_errors":{"type":"method","name":"display_errors","children":[],"call":[" controller render "," resource errors "," resource "," format "," controller "," resource_errors "]}," ActionController Responder to_js":{"type":"method","name":"to_js","children":[],"call":[" default_render "]}," ActionController Rendering render_to_string":{"type":"method","name":"render_to_string","children":[],"call":[" response_body= ","string << "," response_body each "," response_body ","result each ","result respond_to? "," dup "," +@ "," dup  << "," +@  << "]}," ActionController Renderers _handle_render_options":{"type":"method","name":"_handle_render_options","children":[],"call":[" send ","options delete ","name to_sym "," _process_options ","options key? "," _renderers each "," _renderers "]}," ActionController ParamsWrapper _wrapper_enabled?":{"type":"method","name":"_wrapper_enabled?","children":[],"call":[" request request_parameters [] ! "," request request_parameters [] "," _wrapper_key "," request request_parameters "," request "," _wrapper_formats include? "," _wrapper_formats "," request content_mime_type try "," request content_mime_type "," request content_mime_type ref "," request has_content_type? "," request request_parameters key? ! "," request request_parameters key? "," request parameters key? ! "," request parameters key? "," request parameters "," request content_mime_type  request content_mime_type try  "," request content_mime_type  request content_mime_type ref  "]}," ActionController ParamsWrapper _wrap_parameters":{"type":"method","name":"_wrap_parameters","children":[],"call":[" _wrapper_key ","parameters except ","exclude + "," _wrapper_options [] "," _wrapper_options ","parameters slice ","except + "," _wrapper_options exclude "," _wrapper_options include "," _extract_parameters "]}," ActionController ParamsWrapper _wrapper_formats":{"type":"method","name":"_wrapper_formats","children":[],"call":[" _wrapper_options [] "," _wrapper_options "," _wrapper_options format "]}," ActionController ParamsWrapper _wrapper_key":{"type":"method","name":"_wrapper_key","children":[],"call":[" _wrapper_options [] "," _wrapper_options "," _wrapper_options name "]}," ActionController ParamsWrapper process_action":{"type":"method","name":"process_action","children":[],"call":[" request filtered_parameters merge! "," request filtered_parameters "," request "," request request_parameters merge! "," request request_parameters "," request parameters merge! "," request parameters "," _wrap_parameters "," _wrapper_enabled? "," request filtered_parameters slice "," request request_parameters keys "," _extract_parameters "," request parameters [] present? "," request parameters [] "," _wrapper_key "," _perform_parameter_wrapping "]}," ActionController ParamsWrapper ClassMethods _set_wrapper_defaults":{"type":"method","name":"_set_wrapper_defaults","children":[],"call":[" _wrapper_options= ","options []= ","Array  wrap ","options [] ","Array  wrap collect "," controller_name singularize "," controller_name ","model to_s demodulize underscore ","model to_s demodulize ","model to_s "," _default_wrap_model "," anonymous? ","model attribute_names ","model attribute_names present? ","model respond_to? ","options dup ","model column_names ","model accessible_attributes to_a ","model accessible_attributes ","model accessible_attributes present? ","options has_key? "," _wrapper_options dup = ","options dup  []= ","options dup  [] ","options dup  dup ","options dup  has_key? "]}," ActionController ParamsWrapper ClassMethods _default_wrap_model":{"type":"method","name":"_default_wrap_model","children":[],"call":[" raise ","namespaces join ","namespaces last == ","namespaces last ","namespaces delete_at ","model_name split ","e message =~ ","e message ","model_name constantize "," name sub singularize "," name sub "," name "," anonymous? ","unscoped_model_name == ","model_name split last ","model_name safe_constantize "," name sub classify ","model_name split  join ","model_name split  last == ","model_name split  last ","model_name split  delete_at ","namespaces join  split "," name sub singularize  split "," name sub classify  split ","namespaces join  constantize "," name sub singularize  constantize "," name sub classify  constantize ","unscoped_namespaces join  == ","unscoped_ name sub singularize  == ","unscoped_ name sub classify  == ","model_name split last  == ","namespaces join  split last "," name sub singularize  split last "," name sub classify  split last ","namespaces join  safe_constantize "," name sub singularize  safe_constantize "," name sub classify  safe_constantize "]}," ActionController ParamsWrapper ClassMethods inherited":{"type":"method","name":"inherited","children":[],"call":["klass _set_wrapper_defaults ","klass _wrapper_options slice ","klass _wrapper_options ","klass _wrapper_options [] present? ","klass _wrapper_options [] ","klass _wrapper_options= ","params klass= ","klass _wrapper_options dup ","klass _wrapper_options format any? ","klass _wrapper_options format ","klass _wrapper_options dup  klass= "]}," ActionController ParamsWrapper ClassMethods wrap_parameters":{"type":"method","name":"wrap_parameters","children":[],"call":[" _set_wrapper_defaults "," _wrapper_options slice merge "," _wrapper_options slice "," _wrapper_options ","options merge "," _wrapper_options= ","opts klass= ","opts model= ","Options  from_hash "," _wrapper_options to_h slice merge "," _wrapper_options to_h slice "," _wrapper_options to_h "," _wrapper_options merge  slice merge "," _wrapper_options merge  slice "," _wrapper_options merge  ","options merge  merge "," _wrapper_options merge = ","Options  from_hash  klass= ","Options  from_hash  model= "," _wrapper_options merge  to_h slice merge "," _wrapper_options merge  to_h slice "," _wrapper_options merge  to_h "]}," ActionController HttpAuthentication Basic ControllerMethods ClassMethods http_basic_authenticate_with":{"type":"method","name":"http_basic_authenticate_with","children":[],"call":["password == ","options [] ","name == "," authenticate_or_request_with_http_basic "," before_filter ","options except ","ActiveSupport SecurityUtils  variable_size_secure_compare & ","ActiveSupport SecurityUtils  variable_size_secure_compare "," before_action ","ActiveSupport SecurityUtils  secure_compare & ","ActiveSupport SecurityUtils  secure_compare "," http_basic_authenticate_or_request_with "," raise ","password class ","password is_a? ","name class ","name is_a? "]}," ActionController Helpers ClassMethods all_helpers_from_path":{"type":"method","name":"all_helpers_from_path","children":[],"call":["helpers uniq! ","helpers sort! ","file sub ","Dir  [] map ","Dir  [] ","Regexp  quote ","_path to_s ","Array  wrap each ","Array  wrap ","names sort! "," Array flat_map "," Array ","\\1 freeze ","file [] ","_helper.rb size -@ - ","_helper.rb size -@ ","_helper.rb size ","_path to_s size + ","_path to_s size "]}," ActionController ForceSSL ClassMethods force_ssl":{"type":"method","name":"force_ssl","children":[],"call":[" redirect_to ","Rails  env development? ! ","Rails  env development? ","Rails  env "," request ssl? ! "," request ssl? "," request "," before_filter ","redirect_options merge! ","options delete "," request query_parameters "," force_ssl_redirect "," before_action ","options except ","options slice ","ActiveSupport Deprecation  warn ","(str \"          Controller-level `force_ssl` is deprecated and will be removed from\\n\") squish ","options except  merge! "]}," ActionController DataStreaming send_file_headers!":{"type":"method","name":"send_file_headers!","children":[],"call":[" response cache_control [] "," response cache_control "," response "," response sending_file= "," headers merge! "," headers "," content_type= "," raise ","options [] ","Mime  [] ","content_type is_a? ","options [] nil? ","(sym :type) each ","options update ","DEFAULT_SEND_FILE_OPTIONS  merge ","Mime Type  lookup_by_extension ","File  extname downcase tr ","File  extname downcase ","File  extname ","type_provided ! ","options has_key? ","options [] to_s "," headers []= ","disposition to_s ","disposition nil? ","options fetch ","File  extname downcase delete ","content_type nil? ","ActionDispatch Http ContentDisposition  format "," options [] = "," options fetch = ","options []  is_a? ","options fetch  is_a? ","Mime Type  lookup_by_Mime  []  ","options has_key?  ! ","options []  to_s ","options [] to_s  to_s ","disposition to_s  to_s ","options fetch  to_s ","options []  nil? ","options [] to_s  nil? ","disposition to_s  nil? ","options fetch  nil? "]}," ActionController DataStreaming send_data":{"type":"method","name":"send_data","children":[],"call":[" render ","options slice merge ","options slice "," send_file_headers! ","options dup "]}," ActionController DataStreaming send_file":{"type":"method","name":"send_file","children":[],"call":[" response_body= ","File  open "," content_type= ","options [] ","options key? "," status= "," send_file_headers! ","File  basename "," raise ","File  readable? ","File  file? ","FileBody  new "," response send_file "," response "]}," AbstractController ViewPaths _prefixes":{"type":"method","name":"_prefixes","children":[],"call":["parent_prefixes dup unshift "," controller_path ","parent_prefixes dup "," class parent_prefixes "," class "," class parent_prefixes  dup unshift "," class parent_prefixes  dup "," class  class parent_prefixes  "]}," AbstractController ViewPaths ClassMethods parent_prefixes":{"type":"method","name":"parent_prefixes","children":[],"call":["parent_controller superclass ","prefixes << ","parent_controller controller_path ","parent_controller abstract? "," superclass ","parent_controller superclass  superclass "," superclass  superclass ","parent_controller superclass  controller_path "," superclass  controller_path ","parent_controller superclass  abstract? "," superclass  abstract? "]}," AbstractController UrlFor ClassMethods action_methods":{"type":"method","name":"action_methods","children":[],"call":[" - "," _routes named_routes helper_names "," _routes named_routes "," _routes "]}," AbstractController UrlFor ClassMethods _routes":{"type":"method","name":"_routes","children":[],"call":[]}," AbstractController UrlFor _routes":{"type":"method","name":"_routes","children":[],"call":[" raise "]}," AbstractController Rendering _normalize_render":{"type":"method","name":"_normalize_render","children":[],"call":[" _normalize_options "," _normalize_args ","options []= "," request variant "," request "," request variant present? "," request nil? ! "," request nil? "," _process_variant "," _normalize_ _normalize_args  "," _normalize_args  []= "]}," AbstractController Rendering view_renderer":{"type":"method","name":"view_renderer","children":[],"call":["ActionView Renderer  new "," lookup_context "]}," AbstractController Rendering protected_instance_variables":{"type":"method","name":"protected_instance_variables","children":[],"call":[" config protected_instance_variables "," config "]}," AbstractController Railties RoutesHelpers with":{"type":"method","name":"with","children":[],"call":[]}," AbstractController Base available_action?":{"type":"method","name":"available_action?","children":[],"call":[" method_for_action present? "," method_for_action "," _find_action_name present? "," _find_action_name "]}," Sprockets Railtie asset_environment":{"type":"method","name":"asset_environment","children":[],"call":["env css_compressor= "," expand_css_compressor ","assets css_compressor ","env js_compressor= "," expand_js_compressor ","assets js_compressor ","env logger= ","Rails  logger ","env paths concat ","assets paths ","env paths ","env static_root= ","File  join ","assets prefix ","app root join ","app root ","Sprockets Environment  new ","app root to_s ","app config assets ","app config "," require ","assets compress ","LazyCompressor  new ","assets css_compressor == ","assets js_compressor == ","env cache= "," Rails  cache ","ActiveSupport Cache  lookup_store ","assets cache_store ","assets cache_store != ","env respond_to? "," Rails  logger ","env append_path ","assets paths each ","Sprockets Environment  new  css_compressor= ","app config assets  css_compressor ","Sprockets Environment  new  js_compressor= ","app config assets  js_compressor ","Sprockets Environment  new  logger= ","Sprockets Environment  new  paths concat ","app config assets  paths ","Sprockets Environment  new  paths ","Sprockets Environment  new  static_root= ","app config assets  prefix ","app config app config assets  ","app config assets  compress ","app config assets  css_compressor == ","app config assets  js_compressor == ","Sprockets Environment  new  cache= ","app config assets  cache_store ","app config assets  cache_store != ","Sprockets Environment  new  respond_to? ","Sprockets Environment  new  append_path ","app config assets  paths each "]}," Sprockets Railtie using_scss?":{"type":"method","name":"using_scss?","children":[],"call":[]}," Sprockets Railtie using_coffee?":{"type":"method","name":"using_coffee?","children":[],"call":[]}," ActionView Resolver Path rebuild":{"type":"method","name":"rebuild","children":[],"call":[" replace ","@virtual << ","prefix empty? "]}," ActionView Helpers SprocketsHelper AssetPaths performing_caching?":{"type":"method","name":"performing_caching?","children":[],"call":["Rails  application config action_controller perform_caching ","Rails  application config action_controller ","Rails  application config ","Rails  application ","@config perform_caching "]}," ActionView Helpers SprocketsHelper AssetPaths assets":{"type":"method","name":"assets","children":[],"call":["Rails  application assets ","Rails  application "]}," ActionView Helpers SprocketsHelper AssetPaths rewrite_extension":{"type":"method","name":"rewrite_extension","children":[],"call":["File  extname empty? ","File  extname "]}," ActionView Helpers SprocketsHelper AssetPaths rewrite_asset_path":{"type":"method","name":"rewrite_asset_path","children":[],"call":[" assets path "," performing_caching? "," assets ","source [] == ","source [] "]}," ActionView Helpers SprocketsHelper sprockets_asset_paths":{"type":"method","name":"sprockets_asset_paths","children":[],"call":["SprocketsHelper AssetPaths  new "," controller "," respond_to? "," config ","  controller  ","  config  "]}," ActionView Helpers SprocketsHelper sprockets_stylesheet_link_tag":{"type":"method","name":"sprockets_stylesheet_link_tag","children":[],"call":[" tag ","(pair\n  (str \"rel\")\n  (str \"stylesheet\")) merge ","options stringify_keys "," asset_path ","(pair\n  (str \"rel\")\n  (str \"stylesheet\")) merge  stringify_keys "]}," ActionView Helpers SprocketsHelper sprockets_javascript_include_tag":{"type":"method","name":"sprockets_javascript_include_tag","children":[],"call":[" content_tag ","(pair\n  (str \"type\")\n  (str \"text/javascript\")) merge ","options stringify_keys "," asset_path ","(pair\n  (str \"type\")\n  (str \"text/javascript\")) merge  stringify_keys "]}," ActionView Helpers SprocketsHelper asset_path":{"type":"method","name":"asset_path","children":[],"call":[" sprockets_asset_paths compute_public_path "," sprockets_asset_paths "]}," ActionView Helpers AssetTagHelper AssetPaths rewrite_host_and_protocol":{"type":"method","name":"rewrite_host_and_protocol","children":[],"call":[" rewrite_relative_url_root "," controller config relative_url_root "," controller config "," controller "]}," ActionView Helpers AssetTagHelper AssetPaths rewrite_relative_url_root":{"type":"method","name":"rewrite_relative_url_root","children":[],"call":["source starts_with? ! ","source starts_with? "]}," ActionView Helpers AssetTagHelper AssetIncludeTag asset_file_path":{"type":"method","name":"asset_file_path","children":[],"call":["File  join ","path split first ","path split "," config assets_dir "," config "]}," ActionView Helpers AssetPaths compute_asset_host":{"type":"method","name":"compute_asset_host","children":[],"call":["host % ","source hash % ","source hash ","host =~ ","host call "," controller request "," controller "," controller respond_to? ","host method arity ","host method ","host arity ","host is_a? ","host respond_to? "," config asset_host "," config "," config asset_host  % "," config asset_host  =~ "," config asset_host  call "," config asset_host  method arity "," config asset_host  method "," config asset_host  arity "," config asset_host  is_a? "," config asset_host  respond_to? "," config asset_ config asset_host  "]}," ActionView Helpers AssetPaths rewrite_host_and_protocol":{"type":"method","name":"rewrite_host_and_protocol","children":[],"call":[" controller request protocol "," controller request "," controller "," is_uri? ! "," is_uri? "," compute_asset_host "," rewrite_relative_url_root "," controller config relative_url_root "," controller config "," compute_asset_ compute_asset_host  "]}," ActionView Helpers AssetPaths rewrite_asset_path":{"type":"method","name":"rewrite_asset_path","children":[],"call":[" raise "]}," ActionView Helpers AssetPaths rewrite_extension":{"type":"method","name":"rewrite_extension","children":[],"call":[" raise "]}," ActionView Helpers AssetPaths is_uri?":{"type":"method","name":"is_uri?","children":[],"call":["path =~ "]}," ActionView Helpers AssetPaths compute_public_path":{"type":"method","name":"compute_public_path","children":[],"call":[" rewrite_host_and_protocol "," controller respond_to? "," controller "," rewrite_asset_path "," rewrite_extension "," is_uri? ","source to_s "," rewrite_host_and_protocol  to_s "," rewrite_asset_path  to_s "," rewrite_extension  to_s ","source to_s  to_s "]}," ActionView Helpers AssetPaths initialize":{"type":"method","name":"initialize","children":[],"call":[]}," ActionController ImplicitRender action_method?":{"type":"method","name":"action_method?","children":[],"call":[" template_exists? "," _prefixes ","action_name to_s "]}," Sprockets Helpers RailsHelper AssetPaths performing_caching?":{"type":"method","name":"performing_caching?","children":[],"call":["Rails  application config action_controller perform_caching ","Rails  application config action_controller ","Rails  application config ","Rails  application ","@config perform_caching "," config perform_caching "," config "," config action_controller perform_caching "," config action_controller "," config action_controller present? "]}," Sprockets Helpers RailsHelper AssetPaths assets":{"type":"method","name":"assets","children":[],"call":["Rails  application assets ","Rails  application "]}," ActionView Helpers AssetPaths rewrite_relative_url_root":{"type":"method","name":"rewrite_relative_url_root","children":[],"call":["source starts_with? ! ","source starts_with? "]}," Sprockets StaticCompiler path_for":{"type":"method","name":"path_for","children":[],"call":["asset logical_path ","asset digest_path "]}," Sprockets StaticCompiler compile_path?":{"type":"method","name":"compile_path?","children":[],"call":["File  fnmatch ","path to_s ","path call ","path match "," paths each "," paths "]}," Sprockets StaticCompiler write_asset":{"type":"method","name":"write_asset","children":[],"call":["asset write_to ","filename to_s =~ ","filename to_s ","FileUtils  mkdir_p ","File  dirname ","File  join "," target "," path_for tap "," path_for ","File  join  to_s =~ ","File  join  to_s "]}," Sprockets StaticCompiler write_manifest":{"type":"method","name":"write_manifest","children":[],"call":["YAML  dump ","File  open ","FileUtils  mkdir_p "]}," Sprockets StaticCompiler compile":{"type":"method","name":"compile","children":[],"call":[" write_manifest ","manifest []= "," write_asset "," env find_asset "," env "," compile_path? "," env each_logical_path ","asset write_to ","filename to_s =~ ","filename to_s ","FileUtils  mkdir_p ","File  dirname ","File  join "," target "," digest_asset ","logical_path sub! ","File  basename [] == ","File  basename [] ","File  basename "," aliased_path_for ","asset logical_path "," paths "," write_ env find_asset  "," env find_ env find_asset  "," env find_asset  write_to ","File  join  to_s =~ ","File  join  to_s "," digest_ env find_asset  "," env find_asset  logical_path "]}," Sprockets StaticCompiler initialize":{"type":"method","name":"initialize","children":[],"call":["options delete ","options key? "]}," Sprockets Helpers RailsHelper digest_assets?":{"type":"method","name":"digest_assets?","children":[],"call":["Rails  application config assets digest ","Rails  application config assets ","Rails  application config ","Rails  application "]}," Sprockets Helpers RailsHelper compile_assets?":{"type":"method","name":"compile_assets?","children":[],"call":["Rails  application config assets compile ","Rails  application config assets ","Rails  application config ","Rails  application "]}," Sprockets Helpers RailsHelper stylesheet_path":{"type":"method","name":"stylesheet_path","children":[],"call":[" asset_path "," path_to_asset "]}," Sprockets Helpers RailsHelper javascript_path":{"type":"method","name":"javascript_path","children":[],"call":[" asset_path "," path_to_asset "]}," Sprockets Helpers RailsHelper image_path":{"type":"method","name":"image_path","children":[],"call":[" asset_path "," path_to_asset "]}," Sprockets Helpers IsolatedHelper config":{"type":"method","name":"config","children":[],"call":["Rails  application config action_controller ","Rails  application config ","Rails  application "]}," Sprockets Helpers IsolatedHelper controller":{"type":"method","name":"controller","children":[],"call":[]}," Sprockets Bootstrap expand_css_compressor":{"type":"method","name":"expand_css_compressor","children":[],"call":["YUI CssCompressor  new "," require "]}," Sprockets Bootstrap expand_js_compressor":{"type":"method","name":"expand_js_compressor","children":[],"call":["YUI JavaScriptCompressor  new "," require ","Uglifier  new ","Closure Compiler  new "]}," Sprockets Bootstrap run":{"type":"method","name":"run","children":[],"call":["app assets= ","app assets index ","app assets ","config assets digest ","config assets "," mount ","config assets prefix ","app routes prepend ","app routes ","config assets compile ","app assets css_compressor= "," expand_css_compressor ","config assets css_compressor ","LazyCompressor  new ","config assets css_compressor == ","app assets js_compressor= "," expand_js_compressor ","config assets js_compressor ","config assets js_compressor == ","config assets compress ","app assets append_path ","config assets paths each ","config assets paths ","@app config ","Sprockets Compressors  registered_css_compressor ","Sprockets Compressors  registered_js_compressor "]}," Sprockets Bootstrap initialize":{"type":"method","name":"initialize","children":[],"call":[]}," ActionDispatch Cookies CookieJar each":{"type":"method","name":"each","children":[],"call":["@cookies each "]}," Sprockets StaticCompiler digest_asset":{"type":"method","name":"digest_asset","children":[],"call":["asset logical_path ","asset digest_path "," digest "]}," Sprockets StaticCompiler precompile_path?":{"type":"method","name":"precompile_path?","children":[],"call":["File  fnmatch ","path to_s ","path call ","path is_a? ","path match ","paths each "]}," Sprockets StaticCompiler precompile":{"type":"method","name":"precompile","children":[],"call":["manifest []= "," compile "," env find_asset "," env "," precompile_path? "," env each_logical_path ","Rails  application config assets digest= "," digest ","Rails  application config assets ","Rails  application config ","Rails  application "," env find_ env find_asset  ","Rails  application config  env find_asset s digest= ","Rails  application config  env find_asset s "]}," ActionDispatch IntegrationTest url_options":{"type":"method","name":"url_options","children":[],"call":[" integration_session url_options "," integration_session "," reset! "]}," ActionDispatch Integration Runner default_url_options=":{"type":"method","name":"default_url_options=","children":[],"call":[" integration_session default_url_options= "," integration_session "," reset! "," integration_session url_options "]}," ActionDispatch Integration Runner default_url_options":{"type":"method","name":"default_url_options","children":[],"call":[" integration_session default_url_options "," integration_session "," reset! "]}," ActionDispatch Integration Session url_options":{"type":"method","name":"url_options","children":[],"call":["url_options reverse_merge! "," https? "," host ","@app routes default_url_options ","@app routes ","@app routes respond_to? ","@app respond_to? "," controller url_options "," controller "," default_url_options dup tap "," default_url_options dup "," default_url_options "," controller respond_to? "]}," ActionDispatch Routing RoutesProxy respond_to?":{"type":"method","name":"respond_to?","children":[],"call":[" routes url_helpers respond_to? "," routes url_helpers "," routes ","@helpers respond_to? "]}," ActionDispatch Routing Redirection escape_path":{"type":"method","name":"escape_path","children":[],"call":["Hash  [] ","URI  parser escape ","URI  parser ","params map "]}," ActionDispatch Routing Redirection escape":{"type":"method","name":"escape","children":[],"call":["Hash  [] ","Rack Utils  escape ","params map "]}," ActionDispatch FileHandler escape_glob_chars":{"type":"method","name":"escape_glob_chars","children":[],"call":["path gsub ","path force_encoding ","path respond_to? "]}," ActionDispatch FileHandler unescape_path":{"type":"method","name":"unescape_path","children":[],"call":["URI  parser unescape ","URI  parser "]}," ActionDispatch Request original_url":{"type":"method","name":"original_url","children":[],"call":[" base_url + "," original_fullpath "," base_url "]}," ActionDispatch Request original_fullpath":{"type":"method","name":"original_fullpath","children":[],"call":[" fullpath "," env [] "," env "," get_header "]}," ActionDispatch Http Parameters reset_parameters":{"type":"method","name":"reset_parameters","children":[],"call":["@env delete "]}," ActionController TestCase Behavior html_format?":{"type":"method","name":"html_format?","children":[],"call":["format html? ","format nil? ","Mime  [] ","parameters [] ","parameters is_a? ","(send\n  (const nil :Mime) :fetch\n  (send\n    (lvar :parameters) :[]\n    (sym :format))) html? ","Mime  fetch ","parameters key? ","Mime  []  html? ","Mime  []  nil? ","(send\n  (const nil :Mime) :fetch\n  (send\n    (lvar :parameters) :[]\n    (sym :Mime  [] ))) html? "]}," Sprockets Helpers RailsHelper font_path":{"type":"method","name":"font_path","children":[],"call":[" path_to_asset "]}," Sprockets Compressors registered_js_compressor":{"type":"method","name":"registered_js_compressor","children":[],"call":[]}," Sprockets Compressors registered_css_compressor":{"type":"method","name":"registered_css_compressor","children":[],"call":[]}," Sprockets Compressors register_js_compressor":{"type":"method","name":"register_js_compressor","children":[],"call":[]}," Sprockets Compressors register_css_compressor":{"type":"method","name":"register_css_compressor","children":[],"call":[]}," ActionView Template encode!":{"type":"method","name":"encode!","children":[],"call":[" raise ","WrongEncodingError  new "," source "," source encode! "," source valid_encoding? ","@handler handles_encoding? ","@handler respond_to? ","magic_encoding ! "," source force_encoding ","Encoding  default_external "," source sub! "," source encoding == "," source encoding "," source encoding_aware? "," source valid_Encoding  default_external ? ","@handler handles_Encoding  default_external ? ","magic_Encoding  default_external  ! "," source force_Encoding  default_external  "," source Encoding  default_external  == "," source Encoding  default_external  "," source Encoding  default_external _aware? "]}," ActionView Handlers Builder require_engine":{"type":"method","name":"require_engine","children":[],"call":[" require "]}," ActionView TemplateRenderer resolve_layout":{"type":"method","name":"resolve_layout","children":[],"call":[" resolve_layout ","layout call "," raise "," template_exists? ","@details merge ","@lookup_context default_formats "," find_template "," with_fallbacks ","layout =~ "]}," ActionView PartialRenderer merge_prefix_into_object_path":{"type":"method","name":"merge_prefix_into_object_path","children":[],"call":["(send\n  (lvar :prefixes) :<<\n  (lvar :object_path)) join ","prefixes << ","dir == ","object_path_array [] ","prefix_array each_with_index ","object_path split [] ","object_path split ","File  dirname split ","File  dirname ","object_path include? ","prefix include? ","object_path split []  [] ","File  dirname split  each_with_index "]}," ActionView AbstractRenderer extract_format":{"type":"method","name":"extract_format","children":[],"call":["1 to_sym ","details [] ","ActiveSupport Deprecation  warn "," caller ","value sub! "," formats_regexp ","value is_a? "]}," ActionView AbstractRenderer extract_details":{"type":"method","name":"extract_details","children":[],"call":["details []= ","Array  wrap ","options [] ","@lookup_context registered_details each ","@lookup_context registered_details "," Array ","@lookup_context registered_details each_with_object "]}," ActionView PathSet typecast":{"type":"method","name":"typecast","children":[],"call":["OptimizedFileSystemResolver  new ","path to_s ","paths map "]}," ActionView PathSet +":{"type":"method","name":"+","children":[],"call":["PathSet  new "," paths + "," paths "]}," ActionView PathSet compact":{"type":"method","name":"compact","children":[],"call":["PathSet  new "," paths compact "," paths "]}," ActionView PathSet each":{"type":"method","name":"each","children":[],"call":[" paths each "," paths "]}," ActionView PathSet size":{"type":"method","name":"size","children":[],"call":[" paths size "," paths "]}," ActionView PathSet pop":{"type":"method","name":"pop","children":[],"call":[" paths pop "," paths "]}," ActionView PathSet include?":{"type":"method","name":"include?","children":[],"call":[" paths include? "," paths "]}," ActionView PathSet to_ary":{"type":"method","name":"to_ary","children":[],"call":[" paths dup "," paths "]}," ActionView PathSet initialize_copy":{"type":"method","name":"initialize_copy","children":[],"call":["other paths dup ","other paths "]}," ActionView LookupContext with_layout_format":{"type":"method","name":"with_layout_format","children":[],"call":[" _set_detail "," formats [] "," formats "," formats size == "," formats size "]}," ActionView LookupContext locale=":{"type":"method","name":"locale=","children":[],"call":[" default_locale ","I18n  locale ","config locale= ","I18n  config ","I18n  config original_config ","I18n  config respond_to? ","I18n  config  locale= ","I18n  config original_config  locale= ","I18n  I18n  config  ","I18n  I18n  config original_config  ","I18n  I18n  config  original_I18n  config  ","I18n  I18n  config original_config  original_I18n  config original_config  ","I18n  I18n  config  respond_to? ","I18n  I18n  config original_config  respond_to? "]}," ActionView LookupContext locale":{"type":"method","name":"locale","children":[],"call":["@details [] first ","@details [] "]}," ActionView LookupContext skip_default_locale!":{"type":"method","name":"skip_default_locale!","children":[],"call":[" locale= "]}," ActionView LookupContext formats=":{"type":"method","name":"formats=","children":[],"call":["values << ","values == ","values concat "," default_formats ","values delete "]}," ActionView LookupContext freeze_formats":{"type":"method","name":"freeze_formats","children":[],"call":[" formats= "]}," ActionView LookupContext ViewPaths detail_args_for":{"type":"method","name":"detail_args_for","children":[],"call":["DetailsKey  get ","@details merge "," details_key ","options empty? "]}," ActionView LookupContext DetailsCache _set_detail":{"type":"method","name":"_set_detail","children":[],"call":["@details []= ","@details dup ","@details dup  []= ","@details dup  dup "]}," ActionView LookupContext DetailsCache disable_cache":{"type":"method","name":"disable_cache","children":[],"call":[]}," ActionView LookupContext DetailsCache details_key":{"type":"method","name":"details_key","children":[],"call":["DetailsKey  get "]}," ActionView LookupContext DetailsKey clear":{"type":"method","name":"clear","children":[],"call":[]}," ActionView Helpers RecordTagHelper content_tag_for_single_record":{"type":"method","name":"content_tag_for_single_record","children":[],"call":[" content_tag "," capture ","block arity == ","block arity ","options merge! "," dom_id ","(begin\n  (send nil :dom_class\n    (lvar :record)\n    (lvar :prefix))) strip ","options [] "," dom_class ","prefix is_a? ","options dup "," block_given? ! "," block_given? ","options []= ","(send nil :dom_class\n  (lvar :record)\n  (lvar :prefix)) compact ","options dup  merge! ","options dup  [] ","options dup  dup ","options dup  []= "]}," ActionView Helpers FormTagHelper utf8_enforcer_tag":{"type":"method","name":"utf8_enforcer_tag","children":[],"call":[" tag ","&#x2713; html_safe "]}," ActionView Helpers InstanceTag select_content_tag":{"type":"method","name":"select_content_tag","children":[],"call":[" tag + "," tag ","html_options [] "," content_tag "," add_options "," value "," object "," add_default_name_and_id ","html_options stringify_keys ","html_options stringify_keys  [] ","html_options stringify_keys  stringify_keys "]}," ActionView Helpers FormBuilder button":{"type":"method","name":"button","children":[],"call":["@template button_tag "," submit_default_value ","value is_a? "]}," ActionView Helpers FormBuilder to_partial_path":{"type":"method","name":"to_partial_path","children":[],"call":[" class _to_partial_path "," class "]}," ActionView Helpers FormBuilder _to_partial_path":{"type":"method","name":"_to_partial_path","children":[],"call":[]}," ActionView Helpers DateHelperInstanceTag default_datetime":{"type":"method","name":"default_datetime","children":[],"call":["Time  utc_time ","default [] ","time send ","(sym :year) each ","Time  current ","options [] dup ","options [] ","Time  utc_Time  current  ","options [] dup  [] ","Time  current  send "]}," ActionView Helpers DateHelperInstanceTag datetime_selector":{"type":"method","name":"datetime_selector","children":[],"call":["DateTimeSelector  new ","options []= ","options has_key? ! ","options has_key? ","options [] ","options dup "," default_datetime "," value "," object ","options dup  []= ","options dup  has_key? ! ","options dup  has_key? ","options dup  [] ","options dup  dup "]}," ActionView Helpers DateHelperInstanceTag to_datetime_select_tag":{"type":"method","name":"to_datetime_select_tag","children":[],"call":[" datetime_selector select_datetime html_safe "," datetime_selector select_datetime "," datetime_selector "]}," ActionView Helpers DateHelperInstanceTag to_time_select_tag":{"type":"method","name":"to_time_select_tag","children":[],"call":[" datetime_selector select_time html_safe "," datetime_selector select_time "," datetime_selector "]}," ActionView Helpers DateHelperInstanceTag to_date_select_tag":{"type":"method","name":"to_date_select_tag","children":[],"call":[" datetime_selector select_date html_safe "," datetime_selector select_date "," datetime_selector "]}," ActionView Helpers AssetTagHelper font_path":{"type":"method","name":"font_path","children":[],"call":[" asset_paths compute_public_path "," asset_paths "]}," ActionDispatch Routing RouteSet build_conditions":{"type":"method","name":"build_conditions","children":[],"call":["(or\n  (send\n    (lvar :req_predicates) :include?\n    (lvar :k))\n  (send\n    (lvar :path_values) :include?\n    (lvar :k))) ! ","path_values include? ","req_predicates include? ","conditions delete_if ","conditions []= ","verbs join ","verbs empty? ","conditions [] ","current_conditions dup ","@request_class public_method_defined? ","k == ","conditions keep_if ","current_conditions dup  delete_if ","current_conditions dup  []= ","current_conditions dup  [] ","current_current_conditions dup  dup ","current_conditions dup  keep_if "]}," ActionDispatch Routing RouteSet build_path":{"type":"method","name":"build_path","children":[],"call":["Journey Path Pattern  new ","Journey Router Strexp  new ","x regexp= ","Regexp  union ","x regexp ","symbols each ","symbols concat ","(send\n  (send\n    (send\n      (lvar :pattern) :spec) :find_all\n    (block-pass\n      (sym :literal?))) :map) find_all ","builder followpos first ","builder followpos ","pattern spec find_all map ","pattern spec find_all ","pattern spec ","builder followpos first literal? ","pattern spec grep find_all ","pattern spec grep ","Journey GTG Builder  new ","(send\n  (send\n    (send\n      (lvar :Journey Path Pattern  new ) :spec) :find_all\n    (block-pass\n      (sym :literal?))) :map) find_all ","Journey GTG Builder  new  followpos first ","Journey GTG Builder  new  followpos ","Journey Path Pattern  new  spec find_all map ","Journey Path Pattern  new  spec find_all ","Journey Path Pattern  new  spec ","Journey GTG Builder  new  followpos first literal? ","Journey Path Pattern  new  spec grep find_all ","Journey Path Pattern  new  spec grep "]}," ActionDispatch Routing OptionRedirect path":{"type":"method","name":"path","children":[],"call":["ActionDispatch Http URL  url_for ","(pair\n  (sym :protocol)\n  (send\n    (lvar :request) :protocol)) merge "," options ","request query_parameters ","request path ","request optional_port ","request host ","request protocol ","url_options []= ","url_options [] % "," escape_path ","url_options [] ","url_options [] match ","params empty? ! ","params empty? ","(pair\n  (sym :protocol)\n  (send\n    (lvar :request) :protocol)) merge! ","request script_name "," relative_path? ","request script_name empty? ","url_options [] empty? "," options [] ","(pair\n  (sym :protocol)\n  (send\n    (lvar :request) :protocol)) merge  []= ","(pair\n  (sym :protocol)\n  (send\n    (lvar :request) :protocol)) merge!  []= ","(pair\n  (sym :protocol)\n  (send\n    (lvar :request) :protocol)) merge  [] % ","(pair\n  (sym :protocol)\n  (send\n    (lvar :request) :protocol)) merge!  [] % ","(pair\n  (sym :protocol)\n  (send\n    (lvar :request) :protocol)) merge  [] ","(pair\n  (sym :protocol)\n  (send\n    (lvar :request) :protocol)) merge!  [] ","(pair\n  (sym :protocol)\n  (send\n    (lvar :request) :protocol)) merge  [] match ","(pair\n  (sym :protocol)\n  (send\n    (lvar :request) :protocol)) merge!  [] match ","(pair\n  (sym :protocol)\n  (send\n    (lvar :request) :protocol)) merge  [] empty? ","(pair\n  (sym :protocol)\n  (send\n    (lvar :request) :protocol)) merge!  [] empty? "]}," ActionDispatch Routing Redirect path":{"type":"method","name":"path","children":[],"call":[" block call "," block "]}," ActionDispatch Routing Redirect call":{"type":"method","name":"call","children":[],"call":[" status ","body length to_s ","body length ","uri to_s ","ERB Util  h ","req port ","uri port ","req standard_port? ","req host ","uri host ","req scheme ","uri scheme ","URI  parse "," path ","req symbolized_path_parameters ","Request  new "," raise ","value valid_encoding? ","req symbolized_path_parameters each ","uri path= ","uri path ","req script_name "," relative_path? ","req script_name empty? ","uri path empty? "," serve ","response to_a ","payload []= ","response headers [] ","response headers "," build_response ","ActiveSupport Notifications  instrument ","URI  parse  to_s ","Request  new  port ","URI  parse  port ","Request  new  standard_port? ","Request  new  host ","URI  parse  host ","Request  new  scheme ","URI  parse  scheme ","Request  new  symbolized_path_parameters ","Request  new  symbolized_path_parameters each ","URI  parse  path= ","URI  parse  path ","Request  new  script_name ","Request  new  script_name empty? ","URI  parse  path empty? "," build_response  to_a "," build_response  headers [] "," build_response  headers "," build_ build_response  "]}," ActionDispatch Routing Redirect initialize":{"type":"method","name":"initialize","children":[],"call":[]}," ActionDispatch Routing Mapper Resources add_route":{"type":"method","name":"add_route","children":[],"call":["@set add_route ","mapping to_route ","Mapping  new ","options []= "," name_for_action ","options [] ","options delete ","options fetch ! ","options fetch ","action to_s include? ","action to_s ","action to_s =~ "," path_for_action ","action include? ","action =~ ","action to_s dup ","URI  parser escape ","URI  parser ","action tr ","Mapping  build "," raise ","path blank? ","Journey Parser  parse ","Mapping  normalize_path ","@scope [] ","(str \"^[\\\\w\\\\-/]+$\") match? ","URI DEFAULT_PARSER  escape ","Mapping  new  to_route ","Mapping  build  to_route "," name_for_action to_s dup  "," name_for_action to_s  ","action to_s dup  to_s include? ","action to_s  to_s include? ","action to_s dup  to_s ","action to_s  to_s ","action to_s dup  to_s =~ ","action to_s  to_s =~ ","  path_for_action _for_action "," Mapping  normalize_path _for_action "," path_for_action to_s dup  "," path_for_action to_s  ","action to_s dup  include? ","action to_s  include? ","action to_s dup  =~ ","action to_s  =~ ","action to_s dup  to_s dup ","action to_s  to_s dup ","action to_s dup  tr ","action to_s  tr "," path_for_action  blank? ","Mapping  normalize_path  blank? ","Mapping  normalize_ path_for_action  ","Mapping  normalize_Mapping  normalize_path  "]}," ActionDispatch Routing Mapper Resources decomposed_match":{"type":"method","name":"decomposed_match","children":[],"call":[" add_route "," decomposed_match "," member "," nested ","@scope [] "," send ","options delete ","@scope scope_level ","optioptions delete s delete "]}," ActionDispatch ShowExceptions pass_response":{"type":"method","name":"pass_response","children":[],"call":["Response  default_charset "]}," ActionDispatch ShowExceptions rescue_templates":{"type":"method","name":"rescue_templates","children":[],"call":["ExceptionWrapper  rescue_templates ","ActiveSupport Deprecation  warn "]}," ActionDispatch ShowExceptions rescue_responses":{"type":"method","name":"rescue_responses","children":[],"call":["ExceptionWrapper  rescue_responses ","ActiveSupport Deprecation  warn "]}," ActionDispatch Session CacheStore cache_key":{"type":"method","name":"cache_key","children":[],"call":[]}," ActionDispatch Session CacheStore destroy_session":{"type":"method","name":"destroy_session","children":[],"call":[" generate_sid ","@cache delete "," cache_key "]}," ActionDispatch Session CacheStore set_session":{"type":"method","name":"set_session","children":[],"call":["@cache delete ","@cache write ","options [] "," cache_key "," cache_ cache_key  "]}," ActionDispatch Session CacheStore get_session":{"type":"method","name":"get_session","children":[],"call":["@cache read "," cache_key "," generate_sid "]}," ActionDispatch Session CacheStore initialize":{"type":"method","name":"initialize","children":[],"call":["@cache options [] ","@cache options ","options [] ","Rails  cache "]}," ActionDispatch RequestId internal_request_id":{"type":"method","name":"internal_request_id","children":[],"call":["SecureRandom  hex ","SecureRandom  uuid "]}," ActionDispatch RequestId external_request_id":{"type":"method","name":"external_request_id","children":[],"call":["request_id gsub first ","request_id gsub ","env [] presence ","env [] ","env [] presence  gsub first ","env [] presence  gsub "]}," ActionDispatch RequestId call":{"type":"method","name":"call","children":[],"call":["headers []= ","env [] ","@app call ","env []= "," internal_request_id "," external_request_id ","@app call tap ","req request_id ","req request_id= "," make_request_id ","req x_request_id ","ActionDispatch Request  new ","req headers [] ","req headers "," internal_ActionDispatch Request  new uest_id "," external_ActionDispatch Request  new uest_id ","ActionDispatch Request  new  ActionDispatch Request  new uest_id ","ActionDispatch Request  new  ActionDispatch Request  new uest_id= "," make_ActionDispatch Request  new uest_id ","ActionDispatch Request  new  x_ActionDispatch Request  new uest_id ","ActionDispatch Request  new  headers [] ","ActionDispatch Request  new  headers "]}," ActionDispatch RequestId initialize":{"type":"method","name":"initialize","children":[],"call":[]}," ActionDispatch RemoteIp GetIp ips_from":{"type":"method","name":"ips_from","children":[],"call":["ip =~ ","@middleware proxies ","ips reject ","@env [] strip split ","@env [] strip ","@env [] ","ips select ","range begin == ","range end ","range begin ","IPAddr  new to_range ","IPAddr  new ","header strip split ","header strip ","ips select! ","@env [] strip split  reject ","header strip split  reject ","@env [] strip split  select ","header strip split  select ","IPAddr  new to_range  begin == ","IPAddr  new to_range  end ","IPAddr  new to_range  begin ","IPAddr  new to_IPAddr  new to_range  ","@env [] strip split  select! ","header strip split  select! "]}," ActionDispatch RemoteIp GetIp to_s":{"type":"method","name":"to_s","children":[],"call":[" calculate_ip "]}," ActionDispatch RemoteIp GetIp calculate_ip":{"type":"method","name":"calculate_ip","children":[],"call":[" ips_from first "," ips_from ","remote_addrs first ","forwarded_ips last "," raise ","@env [] inspect ","@env [] ","forwarded_ips include? ! ","forwarded_ips include? ","@middleware check_ip ","forwarded_ips present? "," filter_proxies first "," filter_proxies ","(lvar :forwarded_ips) flatten compact ","(lvar :forwarded_ips) flatten ","IP spoofing attack?!  + + ","IP spoofing attack?!  + ","client_ips last "," ips_from reverse "," ips_from last ","@req x_forwarded_for inspect ","@req x_forwarded_for ","@req client_ip inspect ","@req client_ip ","@req remote_addr ","ips last ","ips + ","ips compact! ","forwarded_ips + "," ips_from reverse! "," (lvar :forwarded_ips) flatten compact _from first "," forwarded_ips + _from first "," (lvar :forwarded_ips) flatten compact _from "," forwarded_ips + _from "," ips_from  first "," ips_from last s first "," ips_from  last "," ips_from reverse  last "," ips_from reverse!  last ","forwarded_(lvar :forwarded_ips) flatten compact  last ","forwarded_forwarded_ips +  last "," ips_from  include? ! "," ips_from reverse  include? ! "," ips_from reverse!  include? ! ","forwarded_(lvar :forwarded_ips) flatten compact  include? ! ","forwarded_forwarded_ips +  include? ! "," ips_from  include? "," ips_from reverse  include? "," ips_from reverse!  include? ","forwarded_(lvar :forwarded_ips) flatten compact  include? ","forwarded_forwarded_ips +  include? "," ips_from  present? "," ips_from reverse  present? "," ips_from reverse!  present? ","forwarded_(lvar :forwarded_ips) flatten compact  present? ","forwarded_forwarded_ips +  present? ","(lvar : ips_from ) flatten compact ","(lvar : ips_from reverse ) flatten compact ","(lvar : ips_from reverse! ) flatten compact ","(lvar :forwarded_(lvar :forwarded_ips) flatten compact ) flatten compact ","(lvar :forwarded_forwarded_ips + ) flatten compact ","(lvar : ips_from ) flatten ","(lvar : ips_from reverse ) flatten ","(lvar : ips_from reverse! ) flatten ","(lvar :forwarded_(lvar :forwarded_ips) flatten compact ) flatten ","(lvar :forwarded_forwarded_ips + ) flatten ","@env [] s last ","client_(lvar :forwarded_ips) flatten compact  last ","client_forwarded_ips +  last "," (lvar :forwarded_ips) flatten compact _from reverse "," forwarded_ips + _from reverse "," (lvar :forwarded_ips) flatten compact _from last "," forwarded_ips + _from last ","@req @env []  inspect ","@req @env []  ","@req  ips_from last  ","(lvar :forwarded_ips) flatten compact  last ","forwarded_ips +  last ","(lvar :forwarded_ips) flatten compact  + ","forwarded_ips +  + ","(lvar :forwarded_ips) flatten compact  compact! ","forwarded_ips +  compact! "," ips_from  + "," ips_from reverse  + "," ips_from reverse!  + ","forwarded_(lvar :forwarded_ips) flatten compact  + ","forwarded_forwarded_ips +  + "," (lvar :forwarded_ips) flatten compact _from reverse! "," forwarded_ips + _from reverse! "]}," ActionDispatch RemoteIp GetIp initialize":{"type":"method","name":"initialize","children":[],"call":["middleware proxies ","middleware check_ip "]}," ActionDispatch Reloader validated?":{"type":"method","name":"validated?","children":[],"call":[]}," ActionDispatch PublicExceptions render":{"type":"method","name":"render","children":[],"call":["body bytesize to_s ","body bytesize ","Response  default_charset "," render_html "," render_format ","body public_send ","body respond_to? ","content_type to_sym "]}," ActionDispatch PublicExceptions call":{"type":"method","name":"call","children":[],"call":[" render ","File  read ","File  exist? "," public_path ","I18n  locale ","env [] [] ","env [] ","Rack Utils HTTP_STATUS_CODES  fetch ","Rack Utils HTTP_STATUS_CODES  [] ","status to_i ","request formats first ","request formats ","ActionDispatch Request  new ","exception message ","request path_info [] to_i ","request path_info [] ","request path_info ","Mime  [] ","env [] []  to_i ","request path_info [] to_i  to_i ","ActionDispatch Request  new  formats first ","ActionDispatch Request  new  formats ","env []  message ","ActionDispatch Request  new  path_info [] to_i ","ActionDispatch Request  new  path_info [] ","ActionDispatch Request  new  path_info "]}," ActionDispatch PublicExceptions initialize":{"type":"method","name":"initialize","children":[],"call":[]}," ActionDispatch ExceptionWrapper backtrace_cleaner":{"type":"method","name":"backtrace_cleaner","children":[],"call":["@env [] "]}," ActionDispatch ExceptionWrapper clean_backtrace":{"type":"method","name":"clean_backtrace","children":[],"call":["@exception backtrace "," backtrace_cleaner clean "," backtrace_cleaner "," backtrace "]}," ActionDispatch ExceptionWrapper registered_original_exception?":{"type":"method","name":"registered_original_exception?","children":[],"call":["@@rescue_responses has_key? ","exception original_exception class name ","exception original_exception class ","exception original_exception ","exception respond_to? "]}," ActionDispatch ExceptionWrapper original_exception":{"type":"method","name":"original_exception","children":[],"call":["exception original_exception "," registered_original_exception? ","exception cause ","@@rescue_responses has_key? ","exception cause class name ","exception cause class "]}," ActionDispatch ExceptionWrapper full_trace":{"type":"method","name":"full_trace","children":[],"call":[" clean_backtrace "]}," ActionDispatch ExceptionWrapper framework_trace":{"type":"method","name":"framework_trace","children":[],"call":[" clean_backtrace "]}," ActionDispatch ExceptionWrapper application_trace":{"type":"method","name":"application_trace","children":[],"call":[" clean_backtrace "]}," ActionDispatch ExceptionWrapper status_code":{"type":"method","name":"status_code","children":[],"call":["Rack Utils  status_code ","@@rescue_responses [] ","@exception class name ","@exception class "," class status_code_for_exception "," class "," unwrapped_exception class name "," unwrapped_exception class "," unwrapped_exception "]}," ActionDispatch ExceptionWrapper rescue_template":{"type":"method","name":"rescue_template","children":[],"call":["@@rescue_templates [] ","@exception class name ","@exception class "]}," ActionDispatch ExceptionWrapper initialize":{"type":"method","name":"initialize","children":[],"call":[" original_exception "," expand_backtrace ","exception try try ","exception try ","exception is_a? ","exception cause is_a? ","exception cause "," wrapped_causes_for ","@exception class name ","@exception class "," build_backtrace ","ActiveSupport SyntaxErrorProxy  new ","exception class name ","exception class "," original_exception  class name ","ActiveSupport SyntaxErrorProxy  new  class name "," original_exception  class ","ActiveSupport SyntaxErrorProxy  new  class "]}," ActionDispatch DebugExceptions stderr_logger":{"type":"method","name":"stderr_logger","children":[],"call":["Logger  new ","ActiveSupport Logger  new "]}," ActionDispatch DebugExceptions logger":{"type":"method","name":"logger","children":[],"call":[" stderr_logger ","env [] ","ActionView Base  logger ","request logger "]}," ActionDispatch DebugExceptions log_error":{"type":"method","name":"log_error","children":[],"call":["logger fatal ","message << << ","trace join ","message << ","exception annoted_source_code to_s ","exception annoted_source_code ","exception respond_to? ","exception message ","exception class ","ActiveSupport Deprecation  silence ","wrapper framework_trace ","trace empty? ","wrapper application_trace ","wrapper exception "," logger "," log_array ","message concat ","exception annotated_source_code ","wrapper exception_trace ","wrapper rescue_response? "," log_rescued_responses? ! "," log_rescued_responses? ","wrapper annotated_source_code ","wrapper message ","wrapper exception_class_name "," logger  fatal ","wrapper framework_trace  join ","wrapper application_trace  join ","wrapper exception_trace  join ","wrapper exception  annoted_source_code to_s ","wrapper exception  annoted_source_code ","wrapper exception  respond_to? ","wrapper exception  message ","wrapper exception  class ","wrapper framework_wrapper framework_trace  ","wrapper framework_wrapper application_trace  ","wrapper framework_wrapper exception_trace  ","wrapper framework_trace  empty? ","wrapper application_trace  empty? ","wrapper exception_trace  empty? ","wrapper application_wrapper framework_trace  ","wrapper application_wrapper application_trace  ","wrapper application_wrapper exception_trace  ","wrapper wrapper exception  ","  logger  ","wrapper exception  annotated_source_code ","wrapper exception_wrapper framework_trace  ","wrapper exception_wrapper application_trace  ","wrapper exception_wrapper exception_trace  ","wrapper wrapper exception _trace ","wrapper wrapper exception _class_name "]}," ActionDispatch DebugExceptions render":{"type":"method","name":"render","children":[],"call":["body bytesize to_s ","body bytesize ","Response  default_charset "]}," ActionDispatch DebugExceptions render_exception":{"type":"method","name":"render_exception","children":[],"call":[" raise "," render ","wrapper status_code ","template render ","wrapper rescue_template ","ActionView Base  new ","wrapper full_trace ","wrapper framework_trace ","wrapper application_trace ","wrapper exception ","Request  new ","env [] "," log_error ","ExceptionWrapper  new ","wrapper file ","wrapper line_number ","wrapper source_extract "," routes_inspector ","request xhr? ","wrapper source_extracts ","source_to_show [] ","traces [] first ","traces [] ","wrapper rescue_template != ","traces [] empty? ","wrapper traces "," traces_from_wrapper "," render_for_default_application "," render_for_api_application ","request get_header "," render_for_browser_request "," render_for_api_request "," api_request? ","request formats first ","request formats ","Mime  [] ","ExceptionWrapper  new  status_code ","ActionView Base  new  render ","wrapper rescue_ActionView Base  new  ","ExceptionWrapper  new  rescue_template ","ExceptionWrapper  new  full_trace ","ExceptionWrapper  new  framework_trace ","ExceptionWrapper  new  application_trace ","ExceptionWrapper  new  exception ","ExceptionWrapper  new  file ","ExceptionWrapper  new  line_number ","ExceptionWrapper  new  source_extract ","Request  new  xhr? ","ExceptionWrapper  new  source_extracts ","traces [] first  [] ","wrapper traces  [] first "," traces_from_wrapper  [] first ","wrapper traces  [] "," traces_from_wrapper  [] ","wrapper rescue_ActionView Base  new  != ","ExceptionWrapper  new  rescue_template != ","wrapper traces  [] empty? "," traces_from_wrapper  [] empty? ","ExceptionWrapper  new  traces ","wrapper wrapper traces  ","wrapper  traces_from_wrapper  "," traces_from_ExceptionWrapper  new  "," wrapper traces _from_wrapper ","  traces_from_wrapper _from_wrapper ","Request  new  get_header "," render_for_browser_Request  new  "," render_for_api_Request  new  "," api_Request  new ? ","Request  new  formats first ","Request  new  formats "]}," ActionDispatch DebugExceptions call":{"type":"method","name":"call","children":[],"call":[" render_exception "," raise ","env [] == ","env [] ","env [] inspect ","body close ","body respond_to? ","response [] ","response [] [] == ","response [] [] ","@app call ","headers [] == ","headers [] ","request show_exceptions? ","ActionDispatch Request  new "," invoke_interceptors ","wrapper show? ","ExceptionWrapper  new ","request get_header ","response []  close ","response []  respond_to? ","@app call  [] ","@app call  [] [] == ","@app call  [] [] ","ActionDispatch Request  new  show_exceptions? ","ExceptionWrapper  new  show? ","ActionDispatch Request  new  get_header "]}," ActionDispatch DebugExceptions initialize":{"type":"method","name":"initialize","children":[],"call":[]}," ActionDispatch Cookies CookieJar recycle!":{"type":"method","name":"recycle!","children":[],"call":["@delete_cookies clear ","@set_cookies clear "]}," ActionDispatch Cookies CookieJar clear":{"type":"method","name":"clear","children":[],"call":[" delete ","@cookies each_key "]}," ActionDispatch BodyProxy method_missing":{"type":"method","name":"method_missing","children":[],"call":["@body __send__ "]}," ActionDispatch BodyProxy closed?":{"type":"method","name":"closed?","children":[],"call":[]}," ActionDispatch BodyProxy close":{"type":"method","name":"close","children":[],"call":["@block call ","@body close ","@body respond_to? "]}," ActionDispatch BodyProxy respond_to?":{"type":"method","name":"respond_to?","children":[],"call":["@body respond_to? "]}," ActionDispatch BodyProxy initialize":{"type":"method","name":"initialize","children":[],"call":[]}," ActionDispatch Request uuid":{"type":"method","name":"uuid","children":[],"call":[" env [] "," env "]}," Mime Type respond_to?":{"type":"method","name":"respond_to?","children":[],"call":["method to_s =~ ","method to_s "]}," ActionController Metal performed?":{"type":"method","name":"performed?","children":[],"call":[" response_body "," response committed? "," response "]}," ActionController Responder json_resource_errors":{"type":"method","name":"json_resource_errors","children":[],"call":[" resource errors "," resource "]}," ActionController Responder resource_errors":{"type":"method","name":"resource_errors","children":[],"call":[" resource errors "," resource "," send "," format "," respond_to? "]}," ActionController Rescue show_detailed_exceptions?":{"type":"method","name":"show_detailed_exceptions?","children":[],"call":[]}," ActionController Instrumentation halted_callback_hook":{"type":"method","name":"halted_callback_hook","children":[],"call":["ActiveSupport Notifications  instrument "]}," ActionController Compatibility default_charset=":{"type":"method","name":"default_charset=","children":[],"call":[]}," ActionController LogSubscriber halted_callback":{"type":"method","name":"halted_callback","children":[],"call":[" info ","event payload [] ","event payload ","event payload [] inspect "]}," AbstractController Layouts _normalize_layout":{"type":"method","name":"_normalize_layout","children":[],"call":["value !~ ","value is_a? "]}," AbstractController Layouts conditional_layout?":{"type":"method","name":"conditional_layout?","children":[],"call":[]}," AbstractController Layouts ClassMethods LayoutConditions conditional_layout?":{"type":"method","name":"conditional_layout?","children":[],"call":["except include? ! ","except include? "," action_name ","conditions [] ","only include? "," _layout_conditions ","conditions []  include? ! ","conditions []  include? "," _layout_conditions  [] "," _layout_ _layout_conditions  "]}," ActionDispatch Reloader module_hook":{"type":"method","name":"module_hook","children":[],"call":["middleware cleanup! "," define_method ","Module  new "]}," Sprockets StaticCompiler aliased_path_for":{"type":"method","name":"aliased_path_for","children":[],"call":["logical_path sub ","File  basename start_with? ","File  basename "]}," ActionView Helpers FormHelper default_form_builder":{"type":"method","name":"default_form_builder","children":[],"call":["builder constantize ","builder respond_to? ","ActionView Base  default_form_builder ","ActionView Base  default_form_builder  constantize ","ActionView Base  default_form_builder  respond_to? ","ActionView Base  default_form_ActionView Base  default_form_builder  "]}," ActionView Helpers ControllerHelper logger":{"type":"method","name":"logger","children":[],"call":[" controller logger "," controller "," controller respond_to? "]}," ActionDispatch Routing RouteSet Dispatcher normalize_controller!":{"type":"method","name":"normalize_controller!","children":[],"call":["params []= ","params [] underscore ","params [] ","params key? "]}," ActionDispatch Routing OptionRedirect escape_path":{"type":"method","name":"escape_path","children":[],"call":["Hash  [] ","URI  parser escape ","URI  parser ","params map "]}," ActionDispatch Routing PolymorphicRoutes convert_to_model":{"type":"method","name":"convert_to_model","children":[],"call":["object to_model ","object respond_to? "]}," ActionDispatch ExceptionWrapper status_code_for_exception":{"type":"method","name":"status_code_for_exception","children":[],"call":[]}," ActionController Responder response_overridden?":{"type":"method","name":"response_overridden?","children":[],"call":["@default_response present? "]}," ActionController MimeResponds Collector negotiate_format":{"type":"method","name":"negotiate_format","children":[],"call":["request negotiate_mime "," order ","@responses keys "]}," ActionController MimeResponds Collector response":{"type":"method","name":"response","children":[],"call":["@responses [] "," format ","@responses fetch ","variant_collector variant ","response call ","VariantCollector  new ","response arity == ","response arity ","response nil? ","response variant ","response is_a? ","VariantFilter  new "," lambda ","@@responses fetch s [] ","@@responses fetch s fetch ","VariantCollector  new  variant ","@responses fetch  call ","@responses fetch  arity == ","@responses fetch  arity ","@responses fetch  nil? ","@responses fetch  variant ","@responses fetch  is_a? "]}," ActionController MimeResponds retrieve_collector_from_mimes":{"type":"method","name":"retrieve_collector_from_mimes","children":[],"call":[" head "," lookup_context rendered_format= "," lookup_context formats first "," lookup_context formats "," lookup_context "," lookup_context formats= ","format to_sym ","format to_s "," content_type ","collector negotiate_format "," request ","block call "," block_given? ","Collector  new "," collect_mimes_from_class_level "," raise "," _process_format "," request variant "," lookup_context rendered_collector negotiate_format = "," lookup_context collector negotiate_format s first "," lookup_context collector negotiate_format s "," lookup_context collector negotiate_format s= ","collector negotiate_format  to_sym ","collector negotiate_format  to_s ","collector negotiate_collector negotiate_format  ","Collector  new  negotiate_format "," _process_collector negotiate_format  "]}," ActionController DataStreaming FileBody each":{"type":"method","name":"each","children":[],"call":["file read ","File  open "," to_path "]}," ActionController DataStreaming FileBody initialize":{"type":"method","name":"initialize","children":[],"call":[]}," Sprockets Helpers RailsHelper AssetPaths exact_match_present?":{"type":"method","name":"exact_match_present?","children":[],"call":["pathname to_s =~ ","Regexp  escape ","pathname to_s "," asset_environment resolve "," asset_environment "," asset_environment resolve  to_s =~ "," asset_environment resolve  to_s "]}," ActionView Template Handlers Erubis add_expr":{"type":"method","name":"add_expr","children":[],"call":[" add_expr_escaped "]}," ActionDispatch Routing RouteSet Generator normalize_controller!":{"type":"method","name":"normalize_controller!","children":[],"call":["@options []= "," controller sub "," controller "," controller [] "," controller start_with? ","/ freeze "]}," ActionDispatch Routing Mapper Resources using_match_shorthand?":{"type":"method","name":"using_match_shorthand?","children":[],"call":["path =~ ","(or\n  (send\n    (lvar :options) :[]\n    (sym :to))\n  (send\n    (lvar :options) :[]\n    (sym :action))) nil? ","options [] ","(str \"^/?[-\\\\w]+/[-\\\\w/]+$\") match? "]}," ActionView AbstractRenderer prepend_formats":{"type":"method","name":"prepend_formats","children":[],"call":["@lookup_context formats= ","formats | ","@lookup_context formats ","@lookup_context html_fallback_for_js ","formats empty? "," Array ","@lookup_context  Array = "," Array  | ","@lookup_context  Array  "," Array  empty? "]}," ActionDispatch Routing Mapper Scoping merge_action_scope":{"type":"method","name":"merge_action_scope","children":[],"call":[]}," AbstractController Base _valid_action_name?":{"type":"method","name":"_valid_action_name?","children":[],"call":["action_name to_s !~ ","Regexp  new ","action_name to_s ","action_name to_s include? ! ","action_name to_s include? "]}," AbstractController Base _find_action_name":{"type":"method","name":"_find_action_name","children":[],"call":[" method_for_action "," _valid_action_name? "]}," ActionView PathResolver find_template_paths":{"type":"method","name":"find_template_paths","children":[],"call":["sanitizer [] include? ! ","sanitizer [] include? ","sanitizer [] ","File  dirname ","File  directory? ","Dir  [] reject ","Dir  [] ","h []= ","Hash  new ","File  fnmatch ! ","File  fnmatch "]}," ActionDispatch FileHandler clean_path_info":{"type":"method","name":"clean_path_info","children":[],"call":[" File  join ","clean unshift ","parts first empty? ","parts first ","parts empty? ","clean << ","clean pop ","part == ","part empty? ","parts each ","path_info split ","path_info force_encoding ","path_info respond_to? ","path_info split  first empty? ","path_info split  first ","path_info split  empty? ","path_info split  each "]}," ActionView PathResolver inside_path?":{"type":"method","name":"inside_path?","children":[],"call":["filename start_with? ","File  join ","File  expand_path ","File  expand_path  start_with? ","File  expand_File  join  "]}," ActionView PathResolver reject_files_external_to_app":{"type":"method","name":"reject_files_external_to_app","children":[],"call":[" inside_path? ! "," inside_path? ","files reject "]}," Mime Type eql?":{"type":"method","name":"eql?","children":[],"call":["@symbol == ","other symbol ","@synonyms == ","other synonyms ","@string == ","other string "," class == ","other class "," class "]}," ActionView Resolver find_all_anywhere":{"type":"method","name":"find_all_anywhere","children":[],"call":[" find_templates "," cached "]}," ActionView PathSet _find_all":{"type":"method","name":"_find_all","children":[],"call":["templates empty? ","resolver find_all ","resolver find_all_anywhere "," paths each "," paths ","prefixes each ","String  === ","resolver find_all  empty? ","resolver find_all_anywhere  empty? "]}," ActionView PathSet find_file":{"type":"method","name":"find_file","children":[],"call":[" raise ","MissingTemplate  new "," _find_all first "," _find_all "]}," ActionView LookupContext ViewPaths find_file":{"type":"method","name":"find_file","children":[],"call":["@view_paths find_file "," args_for_lookup "]}," ActionView Helpers TagHelper tag_option":{"type":"method","name":"tag_option","children":[],"call":["value gsub ","&quot; freeze ","ERB Util  html_escape ","value join "," safe_join ","value is_a? ","value to_s ","ERB Util  h ","ERB Util  html_escape  gsub ","value join  gsub "," safe_join  gsub ","value to_s  gsub ","ERB Util  h  gsub ","ERB Util  html_escape  join ","value join  join "," safe_join  join ","value to_s  join ","ERB Util  h  join ","ERB Util  html_escape  is_a? ","value join  is_a? "," safe_join  is_a? ","value to_s  is_a? ","ERB Util  h  is_a? ","ERB Util  html_escape  to_s ","value join  to_s "," safe_join  to_s ","value to_s  to_s ","ERB Util  h  to_s "]}," ActionView eager_load!":{"type":"method","name":"eager_load!","children":[],"call":[]}," HTML Sanitizer validate_options":{"type":"method","name":"validate_options","children":[],"call":[" raise ","options [] is_a? ! ","options [] is_a? ","options [] "]}," ActionView TestCase Behavior RenderedViewsCollection view_rendered?":{"type":"method","name":"view_rendered?","children":[],"call":["value == ","actual_locals [] ","expected_locals all? "," locals_for any? "," locals_for "]}," ActionView TestCase Behavior RenderedViewsCollection rendered_views":{"type":"method","name":"rendered_views","children":[],"call":["@rendered_views keys "]}," ActionView TestCase Behavior RenderedViewsCollection locals_for":{"type":"method","name":"locals_for","children":[],"call":["@rendered_views [] "]}," ActionView TestCase Behavior RenderedViewsCollection add":{"type":"method","name":"add","children":[],"call":["@rendered_views [] << ","@rendered_views [] "]}," ActionView TestCase Behavior RenderedViewsCollection initialize":{"type":"method","name":"initialize","children":[],"call":["hash []= ","Hash  new "]}," ActionView TestCase Behavior rendered_views":{"type":"method","name":"rendered_views","children":[],"call":["RenderedViewsCollection  new "]}," ActionView Template type":{"type":"method","name":"type","children":[],"call":["Types  [] ","@formats first "]}," ActionView Template Types []":{"type":"method","name":"[]","children":[],"call":[]}," ActionView Template Types delegate_to":{"type":"method","name":"delegate_to","children":[],"call":[]}," ActionView Template Types Type ==":{"type":"method","name":"==","children":[],"call":[" symbol to_sym == ","type to_sym "," symbol to_sym "," symbol ","type blank? "]}," ActionView Template Types Type ref":{"type":"method","name":"ref","children":[],"call":[" to_s "," to_sym "]}," ActionView Template Types Type initialize":{"type":"method","name":"initialize","children":[],"call":["symbol to_sym "]}," ActionView Template Types Type []":{"type":"method","name":"[]","children":[],"call":[]}," ActionView Template Types Type register":{"type":"method","name":"register","children":[],"call":[]}," ActionView Template Text to_str":{"type":"method","name":"to_str","children":[],"call":[]}," ActionView Resolver Cache templates_have_changed?":{"type":"method","name":"templates_have_changed?","children":[],"call":["t updated_at > ","t updated_at ","fresh_templates any? ","cached_templates map max ","cached_templates map ","fresh_templates blank? != ","cached_templates blank? ","fresh_templates blank? "]}," ActionView Resolver Cache canonical_no_templates":{"type":"method","name":"canonical_no_templates","children":[],"call":["templates empty? "]}," ActionView Resolver Cache clear":{"type":"method","name":"clear","children":[],"call":["@data clear "]}," ActionView Resolver Cache cache":{"type":"method","name":"cache","children":[],"call":["@data [] [] [] [] []= "," canonical_no_templates ","@data [] [] [] [] ","@data [] [] [] ","@data [] [] ","@data [] "," templates_have_changed? ","@data [] [] [] [] [] ","Resolver  caching? "]}," ActionView Resolver Cache initialize":{"type":"method","name":"initialize","children":[],"call":["SmallCache  new "]}," ActionView Resolver Cache SmallCache initialize":{"type":"method","name":"initialize","children":[],"call":["options merge "]}," ActionView Resolver Path to_str":{"type":"method","name":"to_str","children":[],"call":[]}," ActionView Handlers Raw call":{"type":"method","name":"call","children":[],"call":["%q: + + ","%q: + ","template source gsub ","template source "]}," ActionView Template Handlers Erubis flush_newline_if_pending":{"type":"method","name":"flush_newline_if_pending","children":[],"call":["src << ","\n * ","@newline_pending > "]}," ActionView Template Error formatted_code_for":{"type":"method","name":"formatted_code_for","children":[],"call":["result << ","(str \"%\") % ","result update ","line_counter to_s ","output == ","source_code inject "]}," ActionView RoutingUrlFor optimize_routes_generation?":{"type":"method","name":"optimize_routes_generation?","children":[],"call":[" controller optimize_routes_generation? "," controller "," controller respond_to? "]}," ActionView RoutingUrlFor _routes_context":{"type":"method","name":"_routes_context","children":[],"call":[" controller "]}," ActionView RoutingUrlFor url_options":{"type":"method","name":"url_options","children":[],"call":[" controller url_options "," controller "," controller respond_to? "]}," ActionView RoutingUrlFor url_for":{"type":"method","name":"url_for","children":[],"call":[" polymorphic_path "," _back_url ","(pair\n  (sym :only_path)\n  (send\n    (send\n      (lvar :options) :[]\n      (sym :host)) :nil?)) merge! ","options symbolize_keys ","options [] nil? ","options [] ","(pair\n  (sym :only_path)\n  (send\n    (send\n      (lvar :(pair\n  (sym :only_path)\n  (send\n    (send\n      (lvar :options) :[]\n      (sym :host)) :nil?)) merge! ) :[]\n      (sym :host)) :nil?)) merge! ","(pair\n  (sym :only_path)\n  (send\n    (send\n      (lvar :options) :[]\n      (sym :host)) :nil?)) merge!  symbolize_keys ","(pair\n  (sym :only_path)\n  (send\n    (send\n      (lvar :options) :[]\n      (sym :host)) :nil?)) merge!  [] nil? ","(pair\n  (sym :only_path)\n  (send\n    (send\n      (lvar :options) :[]\n      (sym :host)) :nil?)) merge!  [] "]}," ActionView PartialRenderer raise_invalid_identifier":{"type":"method","name":"raise_invalid_identifier","children":[],"call":[" raise ","ArgumentError  new ","IDENTIFIER_ERROR_MESSAGE  % "]}," ActionView PartialRenderer retrieve_template_keys":{"type":"method","name":"retrieve_template_keys","children":[],"call":["keys << ","@locals keys ","@locals keys  << ","@locals @locals keys  "]}," ActionView PartialRenderer prefixed_partial_names":{"type":"method","name":"prefixed_partial_names","children":[],"call":["PREFIXED_PARTIAL_NAMES  [] "]}," ActionView RecordIdentifier record_key_for_dom_id":{"type":"method","name":"record_key_for_dom_id","children":[],"call":["key join "," convert_to_model to_key "," convert_to_model "," convert_to_model to_key  join "," convert_to_model to_ convert_to_model to_key  "]}," ActionView RecordIdentifier dom_id":{"type":"method","name":"dom_id","children":[],"call":[" dom_class "," record_key_for_dom_id "]}," ActionView RecordIdentifier dom_class":{"type":"method","name":"dom_class","children":[],"call":[" model_name_from_record_or_class param_key "," model_name_from_record_or_class "]}," ActionView ModelNaming model_name_from_record_or_class":{"type":"method","name":"model_name_from_record_or_class","children":[],"call":["(if\n  (send\n    (lvar :record_or_class) :is_a?\n    (const nil :Class))\n  (lvar :record_or_class)\n  (send\n    (send nil :convert_to_model\n      (lvar :record_or_class)) :class)) model_name "," convert_to_model class "," convert_to_model ","record_or_class is_a? "]}," ActionView ModelNaming convert_to_model":{"type":"method","name":"convert_to_model","children":[],"call":["object to_model ","object respond_to? "]}," ActionView Helpers UrlHelper method_tag":{"type":"method","name":"method_tag","children":[],"call":[" tag ","method to_s "]}," ActionView Helpers UrlHelper token_tag":{"type":"method","name":"token_tag","children":[],"call":[" tag "," request_forgery_protection_token to_s "," request_forgery_protection_token "," form_authenticity_token "," protect_against_forgery? ","token != "]}," ActionView Helpers UrlHelper _back_url":{"type":"method","name":"_back_url","children":[],"call":[" controller request env [] "," controller request env "," controller request "," controller "," controller respond_to? "]}," ActionView Helpers UrlHelper ClassMethods _url_for_modules":{"type":"method","name":"_url_for_modules","children":[],"call":[]}," ActionView Helpers TranslationHelper wrap_translate_defaults":{"type":"method","name":"wrap_translate_defaults","children":[],"call":["new_defaults << "," translate ","options merge "," lambda ","key is_a? ","defaults shift "," Array ","new_ Array  << ","defaults shift  is_a? "," Array  shift "]}," ActionView Helpers TextHelper cut_excerpt_part":{"type":"method","name":"cut_excerpt_part","children":[],"call":["part join ","part first ","part drop ","(send\n  (send\n    (lvar :part) :length) :-\n  (lvar :radius)) max ","part length - ","part length ","part_position == ","part size > ","part size ","part delete ","part split ","options fetch ","part first  join ","part split  join ","part first  first ","part split  first ","part first  drop ","part split  drop ","(send\n  (send\n    (lvar :part first ) :length) :-\n  (lvar :radius)) max ","(send\n  (send\n    (lvar :part split ) :length) :-\n  (lvar :radius)) max ","(send\n  (send\n    (lvar :part) :length) :-\n  (lvar :options fetch )) max ","part first  length - ","part split  length - ","part first  length ","part split  length ","part first _position == ","part split _position == ","part first  size > ","part split  size > ","part first  size ","part split  size ","part first  delete ","part split  delete ","part first  split ","part split  split "]}," ActionView Helpers TextHelper split_paragraphs":{"type":"method","name":"split_paragraphs","children":[],"call":["t gsub! ","text to_str gsub split map! ","text to_str gsub split ","text to_str gsub ","text to_str ","text blank? "]}," ActionView Helpers Tags WeekField format_date":{"type":"method","name":"format_date","children":[],"call":["value try "]}," ActionView Helpers Tags TimeZoneSelect render":{"type":"method","name":"render","children":[],"call":[" select_content_tag "," time_zone_options_for_select ","@options [] "," value "]}," ActionView Helpers Tags TimeZoneSelect initialize":{"type":"method","name":"initialize","children":[],"call":[]}," ActionView Helpers Tags TimeField format_date":{"type":"method","name":"format_date","children":[],"call":["value try "]}," ActionView Helpers Tags TextField field_type":{"type":"method","name":"field_type","children":[],"call":[" class field_type "," class "," name split last sub downcase "," name split last sub "," name split last "," name split "," name "]}," ActionView Helpers Tags TextField render":{"type":"method","name":"render","children":[],"call":[" tag "," add_default_name_and_id ","ERB Util  html_escape ","options [] ","options []= "," value_before_type_cast "," object ","options fetch "," field_type == "," field_type ","options key? ","@options stringify_keys "," block_given? ","@options stringify_keys  [] ","@options stringify_keys  []= ","@options stringify_keys  fetch ","@options stringify_keys  key? ","@@options stringify_keys  stringify_keys "]}," ActionView Helpers Tags TextArea render":{"type":"method","name":"render","children":[],"call":[" content_tag "," value_before_type_cast "," object ","options delete ","size split ","options []= ","size respond_to? "," add_default_name_and_id ","@options stringify_keys ","@options stringify_keys  delete ","options delete  split ","@options stringify_keys  []= ","options delete  respond_to? ","@@options stringify_keys  stringify_keys "]}," ActionView Helpers Tags Select grouped_choices?":{"type":"method","name":"grouped_choices?","children":[],"call":["Array  === ","@choices first last ","@choices first ","@choices first respond_to? ","@choices empty? ! ","@choices empty? "]}," ActionView Helpers Tags Select render":{"type":"method","name":"render","children":[],"call":[" select_content_tag "," options_for_select "," grouped_options_for_select "," grouped_choices? ","@options [] "," value ","@options fetch "]}," ActionView Helpers Tags Select initialize":{"type":"method","name":"initialize","children":[],"call":["@choices to_a ","@choices is_a? ","@choices to_a  to_a ","@choices to_a  is_a? "]}," ActionView Helpers Tags SearchField render":{"type":"method","name":"render","children":[],"call":["options []= ","options has_key? ","options [] "," request host split reverse join "," request host split reverse "," request host split "," request host "," request ","options [] == ","@options stringify_keys ","@options stringify_keys  []= ","@options stringify_keys  has_key? ","@options stringify_keys  [] ","@options stringify_keys  [] == ","@@options stringify_keys  stringify_keys "]}," ActionView Helpers Tags RadioButton checked?":{"type":"method","name":"checked?","children":[],"call":["value to_s == ","@tag_value to_s ","value to_s "]}," ActionView Helpers Tags RadioButton render":{"type":"method","name":"render","children":[],"call":[" tag "," add_default_name_and_id_for_value ","options []= "," input_checked? "," object ","@options stringify_keys ","@options stringify_keys  []= ","@@options stringify_keys  stringify_keys "]}," ActionView Helpers Tags RadioButton initialize":{"type":"method","name":"initialize","children":[],"call":[]}," ActionView Helpers Tags PasswordField render":{"type":"method","name":"render","children":[],"call":["(pair\n  (sym :value)\n  (nil)) merge! "]}," ActionView Helpers Tags NumberField render":{"type":"method","name":"render","children":[],"call":["options update ","range max ","range min ","options delete ","@options stringify_keys ","@options stringify_keys  update ","@options stringify_keys  delete ","@@options stringify_keys  stringify_keys "]}," ActionView Helpers Tags MonthField format_date":{"type":"method","name":"format_date","children":[],"call":["value try "]}," ActionView Helpers Tags Label render":{"type":"method","name":"render","children":[],"call":[" label_tag ","name_and_id [] ","@method_name humanize "," object class human_attribute_name "," object class "," object "," object class respond_to? ","@content to_s ","I18n  t presence ","I18n  t ","(begin\n  (lvar :key)) to_sym "," object class model_name i18n_key "," object class model_name "," object respond_to? ","tag_value present? ","@object_name gsub! ","@content blank? ","@template_object capture "," block_given? ","options []= ","options key? ","options delete "," add_default_name_and_id_for_value ","name_and_id delete ","name_and_id []= ","options dup ","@options stringify_keys ","options dup  [] ","@@content to_s  to_s ","@@template_object capture  to_s ","(begin\n  (lvar : object class model_name i18n_key )) to_sym "," object class model_name i18n_ object class model_name i18n_key  ","options delete  present? ","@@content to_s  blank? ","@@template_object capture  blank? ","@options stringify_keys  []= ","options  object class model_name i18n_key ? ","@options stringify_keys  key? ","@options stringify_keys  delete "," add_default_options dup _for_value ","options dup  delete ","options dup  []= ","@options stringify_keys  dup ","@options stringify_ object class model_name i18n_key s ","@@options stringify_keys  stringify_keys "]}," ActionView Helpers Tags Label initialize":{"type":"method","name":"initialize","children":[],"call":["options merge! ","content_or_options is_a? "]}," ActionView Helpers Tags GroupedCollectionSelect render":{"type":"method","name":"render","children":[],"call":[" select_content_tag "," option_groups_from_collection_for_select ","@options [] "," value ","@options fetch "]}," ActionView Helpers Tags GroupedCollectionSelect initialize":{"type":"method","name":"initialize","children":[],"call":[]}," ActionView Helpers Tags DatetimeLocalField format_date":{"type":"method","name":"format_date","children":[],"call":["value try "]}," ActionView Helpers Tags DatetimeLocalField field_type":{"type":"method","name":"field_type","children":[],"call":[]}," ActionView Helpers Tags DatetimeField format_date":{"type":"method","name":"format_date","children":[],"call":["value try "]}," ActionView Helpers Tags DatetimeField render":{"type":"method","name":"render","children":[],"call":["options []= "," format_date ","options [] "," value "," object ","@options fetch ","@options stringify_keys ","options fetch ","@options stringify_keys  []= ","@options stringify_keys  [] ","@@options stringify_keys  fetch ","@@options stringify_keys  stringify_keys ","@options stringify_keys  fetch "]}," ActionView Helpers Tags DateSelect default_datetime":{"type":"method","name":"default_datetime","children":[],"call":["Time  utc ","default [] ","time send ","(sym :year) each ","Time  current ","options [] dup ","options [] ","options [] dup  [] ","Time  current  send "]}," ActionView Helpers Tags DateSelect datetime_selector":{"type":"method","name":"datetime_selector","children":[],"call":["DateTimeSelector  new ","options []= ","options has_key? ! ","options has_key? ","options [] ","options dup "," default_datetime "," value "," object ","options fetch ","options dup  []= ","options dup  has_key? ! ","options dup  has_key? ","options dup  [] ","options dup  dup ","options dup  fetch "]}," ActionView Helpers Tags DateSelect select_type":{"type":"method","name":"select_type","children":[],"call":[" class select_type "," class "," name split last sub downcase "," name split last sub "," name split last "," name split "," name "]}," ActionView Helpers Tags DateSelect render":{"type":"method","name":"render","children":[],"call":[" error_wrapping "," datetime_selector send html_safe "," datetime_selector send "," select_type "," datetime_selector "]}," ActionView Helpers Tags DateSelect initialize":{"type":"method","name":"initialize","children":[],"call":[]}," ActionView Helpers Tags DateField format_date":{"type":"method","name":"format_date","children":[],"call":["value try "]}," ActionView Helpers Tags ColorField validate_color_string":{"type":"method","name":"validate_color_string","children":[],"call":["string downcase ","regex match "]}," ActionView Helpers Tags ColorField render":{"type":"method","name":"render","children":[],"call":["options []= "," validate_color_string "," value "," object ","@options fetch ","@options stringify_keys ","options fetch ","@options stringify_keys  []= ","@@options stringify_keys  fetch ","@@options stringify_keys  stringify_keys ","@options stringify_keys  fetch "]}," ActionView Helpers Tags CollectionSelect render":{"type":"method","name":"render","children":[],"call":[" select_content_tag "," options_from_collection_for_select ","@options [] "," value ","@options fetch "]}," ActionView Helpers Tags CollectionSelect initialize":{"type":"method","name":"initialize","children":[],"call":[]}," ActionView Helpers Tags CollectionRadioButtons render_component":{"type":"method","name":"render_component","children":[],"call":["builder radio_button + ","builder label ","builder radio_button "]}," ActionView Helpers Tags CollectionRadioButtons render":{"type":"method","name":"render","children":[],"call":[" render_component ","@template_object capture "," block_given? "," instantiate_builder "," render_collection "," instantiate_ instantiate_builder  "]}," ActionView Helpers Tags CollectionRadioButtons RadioButtonBuilder radio_button":{"type":"method","name":"radio_button","children":[],"call":["@template_object radio_button ","extra_html_options merge ","extra_extra_html_options merge  merge "]}," ActionView Helpers Tags CollectionHelpers render_collection":{"type":"method","name":"render_collection","children":[],"call":["(send\n  (ivar :@collection) :map) join html_safe ","(send\n  (ivar :@collection) :map) join "," default_html_options_for_collection "," value_for_collection ","@collection map ","  default_html_options_for_collection _for_collection ","  value_for_collection _for_collection "]}," ActionView Helpers Tags CollectionHelpers sanitize_attribute_name":{"type":"method","name":"sanitize_attribute_name","children":[],"call":[" sanitized_value "," sanitized_method_name "]}," ActionView Helpers Tags CollectionHelpers default_html_options_for_collection":{"type":"method","name":"default_html_options_for_collection","children":[],"call":["html_options []= ","option == "," Array map include? ","value to_s "," Array map "," Array ","current_value call ","current_value respond_to? ","current_value nil? ","@options [] ","(sym :checked) each ","@html_options dup ","@html_options dup  []= ","@options []  call ","@options []  respond_to? ","@options []  nil? ","@@html_options dup  dup "]}," ActionView Helpers Tags CollectionHelpers instantiate_builder":{"type":"method","name":"instantiate_builder","children":[],"call":["builder_class new "," sanitize_attribute_name "]}," ActionView Helpers Tags CollectionHelpers initialize":{"type":"method","name":"initialize","children":[],"call":[]}," ActionView Helpers Tags CollectionHelpers Builder label":{"type":"method","name":"label","children":[],"call":["@template_object label ","label_html_options merge ","@input_html_options slice merge ","@input_html_options slice ","label_label_html_options merge  merge ","label_@input_html_options slice merge  merge ","@input_label_html_options merge  slice merge ","@input_@input_html_options slice merge  slice merge ","@input_label_html_options merge  slice ","@input_@input_html_options slice merge  slice "]}," ActionView Helpers Tags CollectionHelpers Builder initialize":{"type":"method","name":"initialize","children":[],"call":[]}," ActionView Helpers Tags CollectionCheckBoxes render_component":{"type":"method","name":"render_component","children":[],"call":["builder check_box + ","builder label ","builder check_box "]}," ActionView Helpers Tags CollectionCheckBoxes render":{"type":"method","name":"render","children":[],"call":["rendered_collection + ","@template_object hidden_field_tag "," tag_name "," render_component ","@template_object capture "," block_given? "," instantiate_builder ","default_html_options []= "," render_collection ","@html_options [] "," hidden_field ","@template_object @template_object hidden_field_tag _field_tag "," instantiate_ instantiate_builder  "," @template_object hidden_field_tag _field "]}," ActionView Helpers Tags CollectionCheckBoxes CheckBoxBuilder check_box":{"type":"method","name":"check_box","children":[],"call":["@template_object check_box ","extra_html_options merge ","extra_extra_html_options merge  merge "]}," ActionView Helpers Tags Checkable input_checked?":{"type":"method","name":"input_checked?","children":[],"call":[" checked? "," value ","checked == ","options delete ","options has_key? "," options delete ? ","options delete  == "]}," ActionView Helpers Tags CheckBox hidden_field_for_checkbox":{"type":"method","name":"hidden_field_for_checkbox","children":[],"call":[" html_safe "," tag ","options slice merge! ","options slice "]}," ActionView Helpers Tags CheckBox checked?":{"type":"method","name":"checked?","children":[],"call":["value to_i == ","@checked_value to_i ","value to_i ","value include? ","value respond_to? ","value == ","@checked_value ! ! ","@checked_value ! "]}," ActionView Helpers Tags CheckBox render":{"type":"method","name":"render","children":[],"call":["hidden + "," hidden_field_for_checkbox "," tag ","options delete "," add_default_name_and_id "," add_default_name_and_id_for_value ","options [] ","options []= "," input_checked? "," object ","@options stringify_keys "," hidden_field_for_checkbox  + ","  hidden_field_for_checkbox _field_for_checkbox "," hidden_field_for_ tag  ","@options stringify_keys  delete ","@options stringify_keys  [] ","@options stringify_keys  []= ","@@options stringify_keys  stringify_keys "]}," ActionView Helpers Tags CheckBox initialize":{"type":"method","name":"initialize","children":[],"call":[]}," ActionView Helpers Tags Base add_options":{"type":"method","name":"add_options","children":[],"call":[" content_tag_string + + "," content_tag_string + "," content_tag_string "," prompt_text ","options [] ","value blank? ","options [] kind_of? "]}," ActionView Helpers Tags Base select_not_required?":{"type":"method","name":"select_not_required?","children":[],"call":["html_options [] to_i > ","html_options [] to_i ","html_options [] ","html_options [] ! "]}," ActionView Helpers Tags Base select_content_tag":{"type":"method","name":"select_content_tag","children":[],"call":[" tag + "," tag ","html_options [] ","options fetch "," content_tag "," add_options "," value "," object ","options [] "," select_not_required? "," add_default_name_and_id ","html_options stringify_keys ","html_options stringify_keys  [] ","  content_tag _not_required? ","html_options stringify_keys  stringify_keys "]}," ActionView Helpers Tags Base sanitized_value":{"type":"method","name":"sanitized_value","children":[],"call":["value to_s gsub gsub downcase ","value to_s gsub gsub ","value to_s gsub ","value to_s "]}," ActionView Helpers Tags Base sanitized_method_name":{"type":"method","name":"sanitized_method_name","children":[],"call":["@method_name sub "]}," ActionView Helpers Tags Base sanitized_object_name":{"type":"method","name":"sanitized_object_name","children":[],"call":["@object_name gsub sub ","@object_name gsub "]}," ActionView Helpers Tags Base tag_id_with_index":{"type":"method","name":"tag_id_with_index","children":[],"call":[" sanitized_method_name "," sanitized_object_name "]}," ActionView Helpers Tags Base tag_id":{"type":"method","name":"tag_id","children":[],"call":[" sanitized_method_name "," sanitized_object_name "]}," ActionView Helpers Tags Base tag_name_with_index":{"type":"method","name":"tag_name_with_index","children":[],"call":[" sanitized_method_name "]}," ActionView Helpers Tags Base tag_name":{"type":"method","name":"tag_name","children":[],"call":[" sanitized_method_name "]}," ActionView Helpers Tags Base add_default_name_and_id":{"type":"method","name":"add_default_name_and_id","children":[],"call":["options []= ","(send\n  (lvar :options) :delete\n  (str \"namespace\")) compact join presence ","(send\n  (lvar :options) :delete\n  (str \"namespace\")) compact join ","(send\n  (lvar :options) :delete\n  (str \"namespace\")) compact ","options [] ","options delete "," tag_id ","options fetch "," tag_name "," tag_id_with_index "," tag_name_with_index ","options has_key? "]}," ActionView Helpers Tags Base add_default_name_and_id_for_value":{"type":"method","name":"add_default_name_and_id_for_value","children":[],"call":[" sanitized_value ","options [] ","options [] present? ","specified_id blank? "," add_default_name_and_id ","tag_value nil? ","options []  blank? "]}," ActionView Helpers Tags Base retrieve_autoindex":{"type":"method","name":"retrieve_autoindex","children":[],"call":[" raise ","object inspect ","object to_param ","object respond_to? ","@template_object instance_variable_get "," object "]}," ActionView Helpers Tags Base retrieve_object":{"type":"method","name":"retrieve_object","children":[],"call":["@template_object instance_variable_get ","@template_object instance_variable_defined? "]}," ActionView Helpers Tags Base value_before_type_cast":{"type":"method","name":"value_before_type_cast","children":[],"call":[" value ","object send ","object respond_to? ","@method_name + ","object nil? "]}," ActionView Helpers Tags Base value":{"type":"method","name":"value","children":[],"call":["object send ","object public_send "]}," ActionView Helpers Tags Base render":{"type":"method","name":"render","children":[],"call":[" raise "]}," ActionView Helpers Tags Base initialize":{"type":"method","name":"initialize","children":[],"call":[" retrieve_autoindex ","Regexp  last_match pre_match ","Regexp  last_match "," retrieve_object ","options delete ","@object_name sub! ","method_name to_s dup ","method_name to_s ","object_name to_s dup ","object_name to_s "," retrieve_object _name sub! "]}," ActionView Helpers TagHelper boolean_tag_option":{"type":"method","name":"boolean_tag_option","children":[],"call":[]}," ActionView Helpers TagHelper data_tag_option":{"type":"method","name":"data_tag_option","children":[],"call":[" tag_option ","value to_json ","value is_a? ","key to_s dasherize ","key to_s ","value to_json  to_json ","value to_json  is_a? "]}," ActionView Helpers NumberHelper parse_float":{"type":"method","name":"parse_float","children":[],"call":[" raise "," Float "]}," ActionView Helpers NumberHelper valid_float?":{"type":"method","name":"valid_float?","children":[],"call":[" parse_float nil? ! "," parse_float nil? "," parse_float "]}," ActionView Helpers NumberHelper wrap_with_output_safety_handling":{"type":"method","name":"wrap_with_output_safety_handling","children":[],"call":["formatted_number html_safe ","number html_safe? "," raise ","valid_float ! "," valid_float? "," valid_float?  ! ","  valid_float? ? "]}," ActionView Helpers NumberHelper escape_unsafe_delimiters_and_separators":{"type":"method","name":"escape_unsafe_delimiters_and_separators","children":[],"call":["options []= ","ERB Util  html_escape ","options [] ","options [] html_safe? ! ","options [] html_safe? "]}," ActionView Helpers FormTagHelper week_field_tag":{"type":"method","name":"week_field_tag","children":[],"call":[" text_field_tag ","options stringify_keys update ","options stringify_keys "]}," ActionView Helpers FormTagHelper month_field_tag":{"type":"method","name":"month_field_tag","children":[],"call":[" text_field_tag ","options stringify_keys update ","options stringify_keys "]}," ActionView Helpers FormTagHelper datetime_local_field_tag":{"type":"method","name":"datetime_local_field_tag","children":[],"call":[" text_field_tag ","options stringify_keys update ","options stringify_keys "]}," ActionView Helpers FormTagHelper datetime_field_tag":{"type":"method","name":"datetime_field_tag","children":[],"call":[" text_field_tag ","options stringify_keys update ","options stringify_keys "]}," ActionView Helpers FormTagHelper time_field_tag":{"type":"method","name":"time_field_tag","children":[],"call":[" text_field_tag ","options stringify_keys update ","options stringify_keys "]}," ActionView Helpers FormTagHelper date_field_tag":{"type":"method","name":"date_field_tag","children":[],"call":[" text_field_tag ","options stringify_keys update ","options stringify_keys "]}," ActionView Helpers FormTagHelper color_field_tag":{"type":"method","name":"color_field_tag","children":[],"call":[" text_field_tag ","options stringify_keys update ","options stringify_keys "]}," ActionView Helpers FormBuilder collection_radio_buttons":{"type":"method","name":"collection_radio_buttons","children":[],"call":["@template collection_radio_buttons ","@default_options merge "," objectify_options "]}," ActionView Helpers FormBuilder collection_check_boxes":{"type":"method","name":"collection_check_boxes","children":[],"call":["@template collection_check_boxes ","@default_options merge "," objectify_options "]}," ActionView Helpers FormOptionsHelper prompt_text":{"type":"method","name":"prompt_text","children":[],"call":["I18n  translate ","prompt kind_of? ","I18n  translate  kind_of? "]}," ActionView Helpers FormOptionsHelper value_for_collection":{"type":"method","name":"value_for_collection","children":[],"call":["item send ","value call ","value respond_to? "]}," ActionView Helpers FormOptionsHelper collection_check_boxes":{"type":"method","name":"collection_check_boxes","children":[],"call":["Tags CollectionCheckBoxes  new render ","Tags CollectionCheckBoxes  new "]}," ActionView Helpers FormOptionsHelper collection_radio_buttons":{"type":"method","name":"collection_radio_buttons","children":[],"call":["Tags CollectionRadioButtons  new render ","Tags CollectionRadioButtons  new "]}," ActionView Helpers FormHelper week_field":{"type":"method","name":"week_field","children":[],"call":["Tags WeekField  new render ","Tags WeekField  new "]}," ActionView Helpers FormHelper month_field":{"type":"method","name":"month_field","children":[],"call":["Tags MonthField  new render ","Tags MonthField  new "]}," ActionView Helpers FormHelper datetime_local_field":{"type":"method","name":"datetime_local_field","children":[],"call":["Tags DatetimeLocalField  new render ","Tags DatetimeLocalField  new "]}," ActionView Helpers FormHelper datetime_field":{"type":"method","name":"datetime_field","children":[],"call":["Tags DatetimeField  new render ","Tags DatetimeField  new "]}," ActionView Helpers FormHelper time_field":{"type":"method","name":"time_field","children":[],"call":["Tags TimeField  new render ","Tags TimeField  new "]}," ActionView Helpers FormHelper date_field":{"type":"method","name":"date_field","children":[],"call":["Tags DateField  new render ","Tags DateField  new "]}," ActionView Helpers FormHelper color_field":{"type":"method","name":"color_field","children":[],"call":["Tags ColorField  new render ","Tags ColorField  new "]}," ActionView Helpers DateTimeSelector set_day_if_discarded":{"type":"method","name":"set_day_if_discarded","children":[],"call":["@datetime change ","@options [] ","@datetime change  change "]}," ActionView Helpers CacheHelper fragment_name_with_digest":{"type":"method","name":"fragment_name_with_digest","children":[],"call":["Digestor  digest "," view_cache_dependencies "," lookup_context "," formats last to_sym "," formats last "," formats "," Array "," controller url_for split last "," controller url_for split "," controller url_for "," controller ","name is_a? "]}," ActionView Helpers CacheHelper cache_fragment_name":{"type":"method","name":"cache_fragment_name","children":[],"call":[" fragment_name_with_digest ","options [] "]}," ActionView Helpers CacheHelper cache_unless":{"type":"method","name":"cache_unless","children":[],"call":[" cache_if ","condition ! "]}," ActionView Helpers CacheHelper cache_if":{"type":"method","name":"cache_if","children":[],"call":[" cache "]}," ActionView Helpers AssetUrlHelper font_url":{"type":"method","name":"font_url","children":[],"call":[" url_to_asset ","(pair\n  (sym :type)\n  (sym :font)) merge! "]}," ActionView Helpers AssetUrlHelper font_path":{"type":"method","name":"font_path","children":[],"call":[" path_to_asset ","(pair\n  (sym :type)\n  (sym :font)) merge! "]}," ActionView Helpers AssetUrlHelper audio_url":{"type":"method","name":"audio_url","children":[],"call":[" url_to_asset ","(pair\n  (sym :type)\n  (sym :audio)) merge! "]}," ActionView Helpers AssetUrlHelper audio_path":{"type":"method","name":"audio_path","children":[],"call":[" path_to_asset ","(pair\n  (sym :type)\n  (sym :audio)) merge! "]}," ActionView Helpers AssetUrlHelper video_url":{"type":"method","name":"video_url","children":[],"call":[" url_to_asset ","(pair\n  (sym :type)\n  (sym :video)) merge! "]}," ActionView Helpers AssetUrlHelper video_path":{"type":"method","name":"video_path","children":[],"call":[" path_to_asset ","(pair\n  (sym :type)\n  (sym :video)) merge! "]}," ActionView Helpers AssetUrlHelper image_url":{"type":"method","name":"image_url","children":[],"call":[" url_to_asset ","(pair\n  (sym :type)\n  (sym :image)) merge! "]}," ActionView Helpers AssetUrlHelper image_path":{"type":"method","name":"image_path","children":[],"call":[" path_to_asset ","(pair\n  (sym :type)\n  (sym :image)) merge! "]}," ActionView Helpers AssetUrlHelper stylesheet_url":{"type":"method","name":"stylesheet_url","children":[],"call":[" url_to_asset ","(pair\n  (sym :type)\n  (sym :stylesheet)) merge! "]}," ActionView Helpers AssetUrlHelper stylesheet_path":{"type":"method","name":"stylesheet_path","children":[],"call":[" path_to_asset ","(pair\n  (sym :type)\n  (sym :stylesheet)) merge! "]}," ActionView Helpers AssetUrlHelper javascript_url":{"type":"method","name":"javascript_url","children":[],"call":[" url_to_asset ","(pair\n  (sym :type)\n  (sym :javascript)) merge! "]}," ActionView Helpers AssetUrlHelper javascript_path":{"type":"method","name":"javascript_path","children":[],"call":[" path_to_asset ","(pair\n  (sym :type)\n  (sym :javascript)) merge! "]}," ActionView Helpers AssetUrlHelper compute_asset_host":{"type":"method","name":"compute_asset_host","children":[],"call":["request protocol "," config default_asset_host_protocol "," config ","options [] ","host =~ ","host % ","Zlib  crc32 % ","Zlib  crc32 ","host call ","args << ","arity < ","arity > ","host method arity ","host method ","host arity ","host respond_to? ","request base_url ","options [] == "," config asset_host "," request "," respond_to? "," request  protocol "," config default_asset_host % _protocol "," config default_asset_host call _protocol "," config default_asset_ config asset_host _protocol ","host %  =~ ","host call  =~ "," config asset_host  =~ ","host %  % ","host call  % "," config asset_host  % ","host %  call ","host call  call "," config asset_host  call ","host method arity  < ","host arity  < ","host method arity  > ","host arity  > ","host %  method arity ","host call  method arity "," config asset_host  method arity ","host method host method arity  ","host method host arity  ","host %  method ","host call  method "," config asset_host  method ","host %  arity ","host call  arity "," config asset_host  arity ","host host method arity  ","host host arity  ","host %  respond_to? ","host call  respond_to? "," config asset_host  respond_to? "," request  base_url "," config asset_host %  "," config asset_host call  "," config asset_ config asset_host  ","  request  "]}," ActionView Helpers AssetUrlHelper compute_asset_path":{"type":"method","name":"compute_asset_path","children":[],"call":["File  join ","ASSET_PUBLIC_DIRECTORIES  [] ","options [] "]}," ActionView Helpers AssetUrlHelper compute_asset_extname":{"type":"method","name":"compute_asset_extname","children":[],"call":["File  extname != ","File  extname ","ASSET_EXTENSIONS  [] ","options [] ","options [] == "]}," ActionView Helpers AssetUrlHelper asset_url":{"type":"method","name":"asset_url","children":[],"call":[" path_to_asset ","options merge "]}," ActionView Helpers AssetUrlHelper asset_path":{"type":"method","name":"asset_path","children":[],"call":[" compute_asset_host ","source starts_with? "," config relative_url_root "," config "," compute_asset_path ","source [] != ","source [] "," compute_asset_extname ","source sub ","source =~ ","source present? ","source to_s ","File  join "," compute_asset_ compute_asset_host  "," compute_asset_path  starts_with? ","source to_s  starts_with? ","File  join  starts_with? "," compute_asset_path  [] != ","source to_s  [] != ","File  join  [] != "," compute_asset_path  [] ","source to_s  [] ","File  join  [] "," compute_asset_ compute_asset_extname  "," compute_asset_path  sub ","source to_s  sub ","File  join  sub "," compute_asset_path  =~ ","source to_s  =~ ","File  join  =~ "," compute_asset_path  present? ","source to_s  present? ","File  join  present? "," compute_asset_path  to_s ","source to_s  to_s ","File  join  to_s "]}," ActionView Helpers AssetTagHelper multiple_sources_tag":{"type":"method","name":"multiple_sources_tag","children":[],"call":[" content_tag ","options []= "," send ","sources first "," safe_join "," tag ","sources map ","sources size > ","sources size "," block_given? ","sources flatten! ","sources extract_options! symbolize_keys ","sources extract_options! ","sources extract_options! symbolize_keys  []= ","sources extract_sources extract_options! symbolize_keys ! symbolize_keys ","sources extract_sources extract_options! symbolize_keys ! "]}," ActionView Helpers ActiveModelInstanceTag content_tag":{"type":"method","name":"content_tag","children":[],"call":[" error_wrapping "]}," ActionView PartialDigestor partial?":{"type":"method","name":"partial?","children":[],"call":[]}," ActionView Digestor injected_dependencies":{"type":"method","name":"injected_dependencies","children":[],"call":["Array  wrap "," options [] "," options "]}," ActionView Digestor dependency_digest":{"type":"method","name":"dependency_digest","children":[],"call":["(send\n  (lvar :template_digests) :+\n  (send nil :injected_dependencies)) join ","template_digests + "," injected_dependencies ","Digestor  digest "," finder "," format "," dependencies collect "," dependencies "]}," ActionView Digestor source":{"type":"method","name":"source","children":[],"call":[" template source "," template "]}," ActionView Digestor template":{"type":"method","name":"template","children":[],"call":[" finder find "," format "," partial? "," logical_name "," finder "]}," ActionView Digestor partial?":{"type":"method","name":"partial?","children":[],"call":[]}," ActionView Digestor logical_name":{"type":"method","name":"logical_name","children":[],"call":[" name gsub "," name "]}," ActionView Digestor logger":{"type":"method","name":"logger","children":[],"call":["ActionView Base  logger "]}," ActionView Digestor nested_dependencies":{"type":"method","name":"nested_dependencies","children":[],"call":["dependencies any? ","PartialDigestor  new nested_dependencies ","PartialDigestor  new "," finder "," format "," dependencies collect "," dependencies ","PartialDigestor  new nested_dependencies  any? ","PartialDigestor  new nested_PartialDigestor  new nested_dependencies  "," PartialDigestor  new nested_dependencies  collect "," PartialDigestor  new nested_dependencies  "]}," ActionView Digestor dependencies":{"type":"method","name":"dependencies","children":[],"call":["DependencyTracker  find_dependencies "," template "," name "]}," ActionView Digestor digest":{"type":"method","name":"digest","children":[],"call":[" logger try "," format "," name "," logger ","Digest MD5  hexdigest tap ","Digest MD5  hexdigest "," dependency_digest "," source "," compute_and_store_digest ","@@cache fetch ","@@digest_monitor synchronize ","@@cache [] ","(send\n  (array\n    (lvar :name)\n    (lvar :format)) :+\n  (send\n    (const nil :Array) :wrap\n    (send\n      (lvar :options) :[]\n      (sym :dependencies)))) join ","(lvar :name) + ","Array  wrap ","options [] "]}," ActionView Digestor initialize":{"type":"method","name":"initialize","children":[],"call":[]}," ActionView DependencyTracker ERBTracker explicit_dependencies":{"type":"method","name":"explicit_dependencies","children":[],"call":[" source scan flatten uniq "," source scan flatten "," source scan "," source "]}," ActionView DependencyTracker ERBTracker render_dependencies":{"type":"method","name":"render_dependencies","children":[],"call":["name gsub ","(send\n  (block\n    (send\n      (send\n        (send\n          (send\n            (send nil :source) :scan\n            (const nil :RENDER_DEPENDENCY)) :collect\n          (block-pass\n            (sym :second))) :uniq) :collect)\n    (args\n      (arg :name))\n    (block\n      (send\n        (lvar :name) :sub\n        (regexp\n          (str \"\\\\A@?([a-z]+\\\\.)*([a-z_]+)\\\\z\")\n          (regopt)))\n      (args)\n      (dstr\n        (begin\n          (send\n            (nth-ref 2) :pluralize))\n        (str \"/\")\n        (begin\n          (send\n            (nth-ref 2) :singularize))))) :collect) collect "," directory ","name include? ","(send\n  (send\n    (send\n      (send\n        (send nil :source) :scan\n        (const nil :RENDER_DEPENDENCY)) :collect\n      (block-pass\n        (sym :second))) :uniq) :collect) collect ","2 singularize ","2 pluralize ","name sub "," source scan collect uniq collect "," source scan collect uniq "," source scan collect "," source scan "," source ","(send\n  (block\n    (send\n      (send\n        (send\n          (send\n            (send nil :source) :scan\n            (const nil :RENDER_DEPENDENCY)) :collect\n          (block-pass\n            (sym :second))) :uniq) :collect)\n    (args\n      (arg :name))\n    (block\n      (send\n        (lvar :name) :sub\n        (regexp\n          (str \"\\\\A@?([a-z_]+\\\\.)*([a-z_]+)\\\\z\")\n          (regopt)))\n      (args)\n      (dstr\n        (begin\n          (send\n            (nth-ref 2) :pluralize))\n        (str \"/\")\n        (begin\n          (send\n            (nth-ref 2) :singularize))))) :collect) collect "]}," ActionView DependencyTracker ERBTracker directory":{"type":"method","name":"directory","children":[],"call":[" name split [] join "," name split [] "," name split "," name "]}," ActionView DependencyTracker ERBTracker source":{"type":"method","name":"source","children":[],"call":[" template source "," template "]}," ActionView DependencyTracker ERBTracker dependencies":{"type":"method","name":"dependencies","children":[],"call":[" render_dependencies + "," explicit_dependencies "," render_dependencies "]}," ActionView DependencyTracker ERBTracker initialize":{"type":"method","name":"initialize","children":[],"call":[]}," ActionView DependencyTracker ERBTracker call":{"type":"method","name":"call","children":[],"call":[]}," ActionView DependencyTracker remove_tracker":{"type":"method","name":"remove_tracker","children":[],"call":[]}," ActionView DependencyTracker register_tracker":{"type":"method","name":"register_tracker","children":[],"call":[]}," ActionView DependencyTracker find_dependencies":{"type":"method","name":"find_dependencies","children":[],"call":[]}," ActionView OutputBuffer safe_concat":{"type":"method","name":"safe_concat","children":[],"call":["value to_s ","value nil? "]}," ActionPack version":{"type":"method","name":"version","children":[],"call":[]}," ActionDispatch TestRequest default_env":{"type":"method","name":"default_env","children":[],"call":[]}," ActionDispatch Integration RequestHelpers patch_via_redirect":{"type":"method","name":"patch_via_redirect","children":[],"call":[" request_via_redirect ","ActiveSupport Deprecation  warn "]}," ActionDispatch Integration RequestHelpers patch":{"type":"method","name":"patch","children":[],"call":[" process "," process_with_kwargs "]}," ActionDispatch Assertions RoutingAssertions fail_on":{"type":"method","name":"fail_on","children":[],"call":[" raise ","e message "]}," ActionDispatch Routing UrlFor optimize_routes_generation?":{"type":"method","name":"optimize_routes_generation?","children":[],"call":[" default_url_options empty? "," default_url_options "," _routes optimize_routes_generation? "," _routes "]}," ActionDispatch Routing RouteSet optimize_routes_generation?":{"type":"method","name":"optimize_routes_generation?","children":[],"call":[" default_url_options empty? "," default_url_options "," mounted? ! "," mounted? "]}," ActionDispatch Routing RouteSet mounted?":{"type":"method","name":"mounted?","children":[],"call":[]}," ActionDispatch Routing RouteSet NamedRouteCollection UrlHelper handle_positional_args":{"type":"method","name":"handle_positional_args","children":[],"call":["result merge! ","Hash  [] ","keys zip ","inner_options keys ","options keys ","t url_options keys ","t url_options ","t respond_to? ","args size < ","keys size - ","keys size ","args size ","args size > ","options dup ","args extract_options! ","result []= ","value nil? ","key == ","args shift ","inner_options fetch ","keys each ","keys include? ","inner_options [] ","path_params each ","result keys ","controller_options keys ","path_params size - ","path_params size ","param == ","path_params include? ","path_params [] ","args each_with_index ","path_params delete ","inner_options each_key ","path_params dup ","(or\n  (send\n    (lvar :result) :[]\n    (sym :path_params))\n  (hash)) merge keys ","(or\n  (send\n    (lvar :result) :[]\n    (sym :path_params))\n  (hash)) merge ","result [] ","options dup  merge! ","args extract_options!  keys ","options dup  []= ","args extract_options!  fetch ","args extract_options!  [] ","path_path_params [] s each ","path_params dup  each ","options dup  keys ","path_path_params [] s size - ","path_params dup  size - ","path_path_params [] s size ","path_params dup  size ","path_params []  == ","path_path_params [] s include? ","path_params dup  include? ","path_path_params [] s [] ","path_params dup  [] ","path_path_params [] s delete ","path_params dup  delete ","args extract_options!  each_key ","path_path_params [] s dup ","path_params dup  dup ","(or\n  (send\n    (lvar :options dup ) :[]\n    (sym :path_params))\n  (hash)) merge keys ","(or\n  (send\n    (lvar :result) :[]\n    (sym :path_path_params [] s))\n  (hash)) merge keys ","(or\n  (send\n    (lvar :result) :[]\n    (sym :path_params dup ))\n  (hash)) merge keys ","(or\n  (send\n    (lvar :options dup ) :[]\n    (sym :path_params))\n  (hash)) merge ","(or\n  (send\n    (lvar :result) :[]\n    (sym :path_path_params [] s))\n  (hash)) merge ","(or\n  (send\n    (lvar :result) :[]\n    (sym :path_params dup ))\n  (hash)) merge ","options dup  [] "]}," ActionDispatch Routing RouteSet NamedRouteCollection UrlHelper call":{"type":"method","name":"call","children":[],"call":["t url_for "," handle_positional_args ","t _routes url_for "," url_strategy "," route_name ","t _routes "," deprecate_string_options ","controller_options merge ","t url_options "," deprecate_string_controller_options merge  ","controller_controller_options merge  merge ","t url_options  merge ","t url_controller_options merge  "]}," ActionDispatch Routing RouteSet NamedRouteCollection UrlHelper initialize":{"type":"method","name":"initialize","children":[],"call":["route segment_keys ","route segment_keys uniq "]}," ActionDispatch Routing RouteSet NamedRouteCollection UrlHelper OptimizedUrlHelper optimize_routes_generation?":{"type":"method","name":"optimize_routes_generation?","children":[],"call":["t send "]}," ActionDispatch Routing RouteSet NamedRouteCollection UrlHelper OptimizedUrlHelper optimized_helper":{"type":"method","name":"optimized_helper","children":[],"call":["path gsub! ","klass escape_fragment ","arg to_param ","@path_parts zip ","@string_route dup "," raise_generation_error ","parameterized_arg empty? ","parameterized_arg nil? ","(send\n  (ivar :@optimized_path) :map) join "," replace_segment ","@optimized_path map ","missing_keys empty? "," missing_keys ","Hash  [] "," parameterize_args ","@route format ","@string_route dup  gsub! ","@@string_route dup _parts zip ","arg to_param  empty? ","arg to_param  nil? ","(send\n  (ivar :@optimized_@string_route dup ) :map) join ","@optimized_@string_route dup  map "," missing_keys  empty? ","  missing_keys  "]}," ActionDispatch Routing RouteSet NamedRouteCollection UrlHelper OptimizedUrlHelper call":{"type":"method","name":"call","children":[],"call":["ActionDispatch Http URL  url_for ","options []= "," optimized_helper ","options merge! ","t url_options ","t respond_to? ","@options dup "," optimize_routes_generation? ","args last is_a? ! ","args last is_a? ","args last ","args size == "," arg_size ","args size ","@options []= ","@options merge! "," url_strategy call "," url_strategy ","t url_options merge ","inner_options ! ","original_script_name + ","t _routes find_script_name ","t _routes ","options delete ","url_strategy call ","path << ","path end_with? ! ","path end_with? ","options [] ","@options dup  []= ","t url_options merge  []= ","@options dup  merge! ","t url_options merge  merge! ","t url_@options dup  ","t url_t url_options merge  ","@@options dup  dup ","@t url_options merge  dup ","@@options dup  []= ","@t url_options merge  []= ","@@options dup  merge! ","@t url_options merge  merge! ","t url_@options dup  merge ","t url_t url_options merge  merge ","inner_@options dup  ! ","inner_t url_options merge  ! ","original_original_script_name +  + ","original_t _routes find_script_name  + ","options delete  + ","t _routes find_original_script_name +  ","t _routes find_t _routes find_script_name  ","@options dup  delete ","t url_options merge  delete "," optimized_helper  << "," optimized_helper  end_with? ! "," optimized_helper  end_with? ","@options dup  [] ","t url_options merge  [] "]}," ActionDispatch Routing RouteSet NamedRouteCollection UrlHelper OptimizedUrlHelper initialize":{"type":"method","name":"initialize","children":[],"call":["@route optimized_path ","@path_parts size ","@route required_parts "," string_route ","@required_parts size ","@route required_parts  size "]}," ActionDispatch Routing RouteSet NamedRouteCollection UrlHelper optimize_helper?":{"type":"method","name":"optimize_helper?","children":[],"call":[]}," ActionDispatch Routing RouteSet NamedRouteCollection UrlHelper create":{"type":"method","name":"create","children":[],"call":[]}," ActionDispatch Routing OptionRedirect inspect":{"type":"method","name":"inspect","children":[],"call":["(send\n  (send nil :options) :map) join "," options map "," options "," status "]}," ActionDispatch Routing PathRedirect escape":{"type":"method","name":"escape","children":[],"call":["Hash  [] ","Rack Utils  escape ","params map "]}," ActionDispatch Routing PathRedirect inspect":{"type":"method","name":"inspect","children":[],"call":[" block "," status "]}," ActionDispatch Routing PathRedirect path":{"type":"method","name":"path","children":[],"call":[" block % "," escape "," block "," block match ! "," block match ","params empty? "," interpolation_required? ","3 % "," escape_fragment ","2 % ","1 % "," escape_path "," escape_3 %  "," escape_1 %  "]}," ActionDispatch Routing Redirect inspect":{"type":"method","name":"inspect","children":[],"call":[" status "]}," ActionDispatch Routing Mapper Concerns concerns":{"type":"method","name":"concerns","children":[],"call":[" raise ","concern call ","@concerns [] ","args flatten each ","args flatten ","args extract_options! ","@concerns []  call ","@@concerns [] s [] ","args extract_args extract_options! ! "]}," ActionDispatch Routing Mapper Concerns concern":{"type":"method","name":"concern","children":[],"call":["@concerns []= ","mapper instance_exec "," lambda "]}," ActionDispatch Routing Mapper Resources set_member_mappings_for_resource":{"type":"method","name":"set_member_mappings_for_resource","children":[],"call":[" delete "," parent_resource actions include? "," parent_resource actions "," parent_resource "," put "," patch "," get "," member "]}," ActionDispatch Routing Mapper Resources param_constraint":{"type":"method","name":"param_constraint","children":[],"call":["@scope [] [] "," parent_resource param "," parent_resource ","@scope [] "]}," ActionDispatch Routing Mapper Resources param_constraint?":{"type":"method","name":"param_constraint?","children":[],"call":["@scope [] [] is_a? ","@scope [] [] "," parent_resource param "," parent_resource ","@scope [] "]}," ActionDispatch Routing Mapper Resources Resource nested_param":{"type":"method","name":"nested_param","children":[],"call":[" param "," singular "]}," ActionDispatch Routing Mapper HttpHelpers patch":{"type":"method","name":"patch","children":[],"call":[" map_method "]}," ActionDispatch Routing Mapper Mapping dispatcher":{"type":"method","name":"dispatcher","children":[],"call":["Routing RouteSet Dispatcher  new "," defaults ","@set dispatcher "]}," ActionDispatch Routing Mapper Mapping endpoint":{"type":"method","name":"endpoint","children":[],"call":[" dispatcher "," to "," to respond_to? "]}," ActionDispatch Routing Mapper Mapping strexp":{"type":"method","name":"strexp","children":[],"call":["Journey Router Strexp  compile "," requirements "," path "]}," ActionDispatch Routing Mapper Mapping path_pattern":{"type":"method","name":"path_pattern","children":[],"call":["Journey Path Pattern  new "," strexp "]}," ActionDispatch Routing Mapper Mapping normalize_conditions!":{"type":"method","name":"normalize_conditions!","children":[],"call":["@conditions merge! ","m to_s dasherize upcase ","m to_s dasherize ","m to_s "," Array map "," Array "," options [] "," options "," raise "," options [] blank? ","via_all ! "," options delete "," options [] == ","@conditions [] << ","@conditions [] ","Regexp  === ","IGNORE_OPTIONS  include? "," segment_keys include? "," segment_keys "," options each ","@conditions []= ","key == "," constraints each "," constraints "," path ","required_defaults << "," options [] _all ! "," options delete  ! "]}," ActionDispatch Routing Mapper Mapping normalize_defaults!":{"type":"method","name":"normalize_defaults!","children":[],"call":["@defaults []= "," options [] "," options ","String  === ","Regexp  === ","@defaults [] ","Fixnum  === ","URL_OPTIONS  include? "," options [] each "," options [] is_a? ","IGNORE_OPTIONS  include? "," options each ","@defaults merge! "," scope [] "," scope ","options each_pair "]}," ActionDispatch Routing Mapper Mapping verify_regexp_requirement":{"type":"method","name":"verify_regexp_requirement","children":[],"call":[" raise ","requirement inspect ","requirement multiline? ","requirement source =~ ","requirement source "]}," ActionDispatch Routing Mapper Mapping normalize_requirements!":{"type":"method","name":"normalize_requirements!","children":[],"call":["@requirements []= ","Regexp  compile "," options [] "," options ","String  === ","Regexp  === ","@requirements [] "," options [] == "," verify_regexp_requirement ","requirement is_a? ","key == "," segment_keys include? "," segment_keys "," constraints each "," constraints "," raise ","requirement inspect ","requirement multiline? ","requirement source =~ ","requirement source "]}," ActionDispatch Routing Mapper Mapping optional_format?":{"type":"method","name":"optional_format?","children":[],"call":[" path end_with? ! "," path end_with? "," path "," path include? ! "," path include? "," options [] != "," options [] "," options ","path end_with? ! ","path end_with? ","path include? ! ","path include? ","format != ","path !~ "]}," ActionDispatch Routing Mapper Mapping required_format?":{"type":"method","name":"required_format?","children":[],"call":[" options [] == "," options [] "," options "]}," ActionDispatch Routing Mapper Mapping normalize_path!":{"type":"method","name":"normalize_path!","children":[],"call":[" optional_format? "," required_format? ","Mapper  normalize_path "," raise ","@path blank? ","format == ","Mapper  normalize_Mapper  normalize_path  ","Mapper  normalize_path  blank? ","@Mapper  normalize_path  blank? "]}," ActionDispatch Routing HtmlTableFormatter result":{"type":"method","name":"result","children":[],"call":["@view raw ","@buffer join ","@view render "]}," ActionDispatch Routing HtmlTableFormatter no_routes":{"type":"method","name":"no_routes","children":[],"call":["@buffer << ","(str \"          <p>You don't have any routes defined!</p>\\n\") strip_heredoc "]}," ActionDispatch Routing HtmlTableFormatter header":{"type":"method","name":"header","children":[],"call":[]}," ActionDispatch Routing HtmlTableFormatter section":{"type":"method","name":"section","children":[],"call":["@buffer << ","@view render "]}," ActionDispatch Routing HtmlTableFormatter section_title":{"type":"method","name":"section_title","children":[],"call":["@buffer << "]}," ActionDispatch Routing HtmlTableFormatter initialize":{"type":"method","name":"initialize","children":[],"call":[]}," ActionDispatch Routing ConsoleFormatter widths":{"type":"method","name":"widths","children":[],"call":["(send\n  (lvar :routes) :map) max ","r [] length ","r [] ","routes map "]}," ActionDispatch Routing ConsoleFormatter draw_header":{"type":"method","name":"draw_header","children":[],"call":["URI Pattern ljust ","Verb ljust ","Prefix rjust "," widths "]}," ActionDispatch Routing ConsoleFormatter draw_section":{"type":"method","name":"draw_section","children":[],"call":["r [] ","r [] ljust ","r [] rjust ","routes map "," widths "," widths zip map "," widths zip ","(str \"Prefix\") map "]}," ActionDispatch Routing ConsoleFormatter no_routes":{"type":"method","name":"no_routes","children":[],"call":["@buffer << ","(str \"          You don't have any routes defined!\\n\") strip_heredoc ","routes none? "]}," ActionDispatch Routing ConsoleFormatter header":{"type":"method","name":"header","children":[],"call":["@buffer << "," draw_header "]}," ActionDispatch Routing ConsoleFormatter section":{"type":"method","name":"section","children":[],"call":["@buffer << "," draw_section "]}," ActionDispatch Routing ConsoleFormatter section_title":{"type":"method","name":"section_title","children":[],"call":["@buffer << "]}," ActionDispatch Routing ConsoleFormatter result":{"type":"method","name":"result","children":[],"call":["@buffer join "]}," ActionDispatch Routing ConsoleFormatter initialize":{"type":"method","name":"initialize","children":[],"call":[]}," ActionDispatch Routing RoutesInspector collect_engine_routes":{"type":"method","name":"collect_engine_routes","children":[],"call":["@engines []= "," collect_routes ","routes routes ","routes is_a? ","route rack_app routes ","route rack_app ","@engines [] ","route engine? ","route endpoint "," collect_route rack_app routes  ","route rack_app routes  route rack_app routes  ","route rack_app routes  is_a? ","route rack_app route rack_app routes  "]}," ActionDispatch Routing RoutesInspector collect_routes":{"type":"method","name":"collect_routes","children":[],"call":["route json_regexp ","route reqs ","route path ","route verb ","route name "," collect_engine_routes ","(send\n  (block\n    (send\n      (lvar :routes) :collect)\n    (args\n      (arg :route))\n    (send\n      (const nil :RouteWrapper) :new\n      (lvar :route))) :reject) collect ","route internal? ","(send\n  (lvar :routes) :collect) reject ","RouteWrapper  new ","routes collect ","(send\n  (lvar :routes) :collect) reject collect ","route source_location "]}," ActionDispatch Routing RoutesInspector filter_routes":{"type":"method","name":"filter_routes","children":[],"call":["route defaults [] == ","route defaults [] ","route defaults ","@routes select ","route_wrapper send =~ ","route_wrapper send ","filter any? ","RouteWrapper  new ","route defaults [] =~ ","value match? ","route_wrapper matches_filter? ","RouteWrapper  new  send =~ ","RouteWrapper  new  send ","RouteWrapper  new  matches_filter? "]}," ActionDispatch Routing RoutesInspector format":{"type":"method","name":"format","children":[],"call":["formatter result ","formatter section ","formatter section_title ","@engines each ","formatter header ","formatter no_routes ","routes none? "," collect_routes "," filter_routes "," normalize_filter ","formatter no_ collect_routes  "," collect_routes  none? "," collect_ collect_routes  "," filter_ collect_routes  "]}," ActionDispatch Routing RoutesInspector initialize":{"type":"method","name":"initialize","children":[],"call":[]}," ActionDispatch Routing RouteWrapper engine?":{"type":"method","name":"engine?","children":[],"call":[" rack_app respond_to? "," rack_app "," app engine? "," app "]}," ActionDispatch Routing RouteWrapper internal?":{"type":"method","name":"internal?","children":[],"call":[" path =~ ","Rails  application config assets prefix ","Rails  application config assets ","Rails  application config ","Rails  application "," path "," controller to_s =~ "," controller to_s "," controller "," controller =~ "," internal "]}," ActionDispatch Routing RouteWrapper action":{"type":"method","name":"action","children":[],"call":[" requirements [] "," requirements "," parts include? "," parts "]}," ActionDispatch Routing RouteWrapper controller":{"type":"method","name":"controller","children":[],"call":[" requirements [] "," requirements "," parts include? "," parts "]}," ActionDispatch Routing RouteWrapper reqs":{"type":"method","name":"reqs","children":[],"call":[" constraints to_s "," constraints "," constraints empty? "," endpoint "]}," ActionDispatch Routing RouteWrapper json_regexp":{"type":"method","name":"json_regexp","children":[],"call":["Regexp  new source ","Regexp  new "," regexp inspect sub sub sub sub sub gsub gsub gsub "," regexp inspect sub sub sub sub sub gsub gsub "," regexp inspect sub sub sub sub sub gsub "," regexp inspect sub sub sub sub sub "," regexp inspect sub sub sub sub "," regexp inspect sub sub sub "," regexp inspect sub sub "," regexp inspect sub "," regexp inspect "," regexp "]}," ActionDispatch Routing RouteWrapper regexp":{"type":"method","name":"regexp","children":[],"call":[" __getobj__ path to_regexp "," __getobj__ path "," __getobj__ "]}," ActionDispatch Routing RouteWrapper name":{"type":"method","name":"name","children":[],"call":[" to_s "]}," ActionDispatch Routing RouteWrapper path":{"type":"method","name":"path","children":[],"call":[" spec to_s "," spec "]}," ActionDispatch Routing RouteWrapper verb":{"type":"method","name":"verb","children":[],"call":[" source gsub "," source "]}," ActionDispatch Routing RouteWrapper rack_app":{"type":"method","name":"rack_app","children":[],"call":["class_name !~ ","ActionDispatch Routing Redirect  === "," rack_app ","app app ","class_name == ","app class name to_s ","app class name ","app class "," app app "," app "," app rack_app ","app class name to_s  !~ ","app class name to_s  == "]}," ActionDispatch Routing RouteWrapper constraints":{"type":"method","name":"constraints","children":[],"call":[" requirements except "," requirements "]}," ActionDispatch Routing RouteWrapper endpoint":{"type":"method","name":"endpoint","children":[],"call":[" action "," controller "," rack_app inspect "," rack_app "," app dispatcher? "," app "," rack_app is_a? "]}," ActionDispatch Request Session stringify_keys":{"type":"method","name":"stringify_keys","children":[],"call":["hash []= ","key to_s ","other each_with_object "]}," ActionDispatch Request Session load!":{"type":"method","name":"load!","children":[],"call":["@delegate replace "," stringify_keys "," options []= "," options ","@by load_session ","session stringify_keys "," enabled? "," exists? "]}," ActionDispatch Request Session load_for_write!":{"type":"method","name":"load_for_write!","children":[],"call":[" load! "," loaded? "," raise "," enabled? "]}," ActionDispatch Request Session load_for_read!":{"type":"method","name":"load_for_read!","children":[],"call":[" load! "," exists? "," loaded? ! "," loaded? "]}," ActionDispatch Request Session merge!":{"type":"method","name":"merge!","children":[],"call":["@delegate merge! "," load_for_write! "]}," ActionDispatch Request Session empty?":{"type":"method","name":"empty?","children":[],"call":["@delegate empty? "," load_for_read! "]}," ActionDispatch Request Session loaded?":{"type":"method","name":"loaded?","children":[],"call":[]}," ActionDispatch Request Session exists?":{"type":"method","name":"exists?","children":[],"call":["@by send ","@exists nil? "," enabled? ","@by send  nil? "]}," ActionDispatch Request Session inspect":{"type":"method","name":"inspect","children":[],"call":["(send\n  (send nil :object_id) :<<\n  (int 1)) to_s "," object_id << "," object_id "," class "," loaded? "]}," ActionDispatch Request Session delete":{"type":"method","name":"delete","children":[],"call":["@delegate delete ","key to_s "," load_for_write! "," load_for_delete! "]}," ActionDispatch Request Session update":{"type":"method","name":"update","children":[],"call":["@delegate update "," stringify_keys "," load_for_write! ","hash stringify_keys ","hash to_hash stringify_keys ","hash to_hash "," raise ","hash class name ","hash class ","hash respond_to? "]}," ActionDispatch Request Session to_hash":{"type":"method","name":"to_hash","children":[],"call":["v nil? ","@delegate dup delete_if ","@delegate dup "," load_for_read! "]}," ActionDispatch Request Session clear":{"type":"method","name":"clear","children":[],"call":["@delegate clear "," load_for_write! "," load_for_delete! "]}," ActionDispatch Request Session []=":{"type":"method","name":"[]=","children":[],"call":["@delegate []= ","key to_s "," load_for_write! "]}," ActionDispatch Request Session values":{"type":"method","name":"values","children":[],"call":["@delegate values "," load_for_read! "]}," ActionDispatch Request Session keys":{"type":"method","name":"keys","children":[],"call":["@delegate keys "," load_for_read! "]}," ActionDispatch Request Session has_key?":{"type":"method","name":"has_key?","children":[],"call":["@delegate key? ","key to_s "," load_for_read! "]}," ActionDispatch Request Session []":{"type":"method","name":"[]","children":[],"call":["@delegate [] ","key to_s "," load_for_read! "," id ","key == "," id public_id ","key to_s  to_s ","key to_s  == "]}," ActionDispatch Request Session destroy":{"type":"method","name":"destroy","children":[],"call":[" load_for_write! ","options []= ","@by send ","options [] "," options "," clear ","options id "," enabled? "]}," ActionDispatch Request Session options":{"type":"method","name":"options","children":[],"call":["Options  find "]}," ActionDispatch Request Session id":{"type":"method","name":"id","children":[],"call":[" options [] "," options "," options id "]}," ActionDispatch Request Session initialize":{"type":"method","name":"initialize","children":[],"call":[" with_indifferent_access "]}," ActionDispatch Request Session Options values_at":{"type":"method","name":"values_at","children":[],"call":["@delegate values_at "]}," ActionDispatch Request Session Options to_hash":{"type":"method","name":"to_hash","children":[],"call":["@delegate dup "]}," ActionDispatch Request Session Options []=":{"type":"method","name":"[]=","children":[],"call":["@delegate []= "]}," ActionDispatch Request Session Options []":{"type":"method","name":"[]","children":[],"call":["@delegate [] ","@delegate []= ","@by send ","@delegate fetch ","key == "]}," ActionDispatch Request Session Options initialize":{"type":"method","name":"initialize","children":[],"call":["default_options dup "]}," ActionDispatch Request Session Options find":{"type":"method","name":"find","children":[],"call":[]}," ActionDispatch Request Session Options set":{"type":"method","name":"set","children":[],"call":[]}," ActionDispatch Request Session set":{"type":"method","name":"set","children":[],"call":[]}," ActionDispatch Request Session find":{"type":"method","name":"find","children":[],"call":[]}," ActionDispatch Request Session create":{"type":"method","name":"create","children":[],"call":[]}," ActionDispatch MiddlewareStack unshift":{"type":"method","name":"unshift","children":[],"call":[" middlewares unshift "," middlewares "," class Middleware  new "," class "," build_middleware ","  class Middleware  new s unshift ","  class Middleware  new s "," build_ class Middleware  new  "]}," ActionDispatch SSL flag_cookies_as_secure!":{"type":"method","name":"flag_cookies_as_secure!","children":[],"call":["headers []= ","(send\n  (lvar :cookies) :map) join ","cookie !~ ","cookies map ","cookies split ","headers [] ","\n freeze ","Set-Cookie freeze ","(str \";\\\\s*secure\\\\s*(;|$)\") match? ! ","(str \";\\\\s*secure\\\\s*(;|$)\") match? "," Array map "," Array ","Gem Version  new < ","Gem Version  new ","(send\n  (lvar :cookies split ) :map) join ","(send\n  (lvar :headers [] ) :map) join ","cookies split  map ","headers []  map ","cookies split  split ","headers []  split "]}," ActionDispatch SSL hsts_headers":{"type":"method","name":"hsts_headers","children":[],"call":["@hsts [] ","@hsts [] to_i "]}," ActionDispatch SSL redirect_to_https":{"type":"method","name":"redirect_to_https","children":[],"call":[" hsts_headers merge ","url to_s "," hsts_headers ","url port= ","url host= ","url scheme= "," URI ","request url ","location << ","request fullpath ","port != ","request port ","request host ","@redirect fetch "," https_location_for "," redirection_status ","@redirect [] "," hsts_ hsts_headers merge  merge "," URI  to_s "," hsts_ hsts_headers merge  "," URI  port= "," URI  host= "," URI  scheme= ","request  URI  "]}," ActionDispatch SSL call":{"type":"method","name":"call","children":[],"call":[" redirect_to_https "," flag_cookies_as_secure! "," hsts_headers merge "," hsts_headers ","@app call ","request ssl? ","Request  new ","headers reverse_merge! ","@exclude call "," set_hsts_header! ","@app call tap ","@exclude call ! "," hsts_ hsts_headers merge  merge "," hsts_ hsts_headers merge  ","Request  new  ssl? "," hsts_headers merge  reverse_merge! "]}," ActionDispatch SSL initialize":{"type":"method","name":"initialize","children":[],"call":["options [] "," class default_hsts_options merge "," class default_hsts_options "," class ","@hsts == ","options fetch "," build_hsts_header "," normalize_hsts_options ","ActiveSupport Deprecation  warn ","(str \"          In Rails 5.1, The `:subdomains` option of HSTS config will be treated as true if\\n\") strip_heredoc ","hsts []= ","hsts [] nil? ","hsts [] ","hsts != ","@redirect ! "," proc ","@redirect [] ","options slice ","(str \"          The `:host` and `:port` options are moving within `:redirect`:\\n\") strip_heredoc "," class default_hsts_options merge  == ","options fetch  == ","options slice  ! ","options slice  [] "]}," ActionDispatch SSL default_hsts_options":{"type":"method","name":"default_hsts_options","children":[],"call":[]}," ActionDispatch Session CookieStore cookie_jar":{"type":"method","name":"cookie_jar","children":[],"call":["request cookie_jar signed_or_encrypted ","request cookie_jar ","ActionDispatch Request  new ","request cookie_jar signed ","ActionDispatch Request  new  cookie_jar signed_or_encrypted ","ActionDispatch Request  new  cookie_jar ","ActionDispatch Request  new  cookie_jar signed "]}," ActionDispatch Session CookieStore get_cookie":{"type":"method","name":"get_cookie","children":[],"call":[" cookie_jar [] "," cookie_jar "]}," ActionDispatch Session CookieStore destroy_session":{"type":"method","name":"destroy_session","children":[],"call":["env []= "," generate_sid ","options [] "]}," ActionDispatch Session SessionObject loaded_session?":{"type":"method","name":"loaded_session?","children":[],"call":["session loaded? ","session is_a? ! ","session is_a? "]}," ActionDispatch Session SessionObject prepare_session":{"type":"method","name":"prepare_session","children":[],"call":["Request Session  create "]}," ActionDispatch Session SessionRestoreError initialize":{"type":"method","name":"initialize","children":[],"call":["Session contains objects whose class definition isn't available.\n + + ","const_error class ","const_error message ","Session contains objects whose class definition isn't available.\n + "," set_backtrace ","$! backtrace ","$! class ","$! message ","ActiveSupport Deprecation  warn "," caller "]}," ActionDispatch RemoteIp GetIp filter_proxies":{"type":"method","name":"filter_proxies","children":[],"call":["ip =~ ","ips reject ","proxy === ","@proxies any? "]}," ActionDispatch PublicExceptions render_html":{"type":"method","name":"render_html","children":[],"call":[" render_format ","File  read ","File  exist? "," public_path ","I18n  locale "]}," ActionDispatch PublicExceptions render_format":{"type":"method","name":"render_format","children":[],"call":["body bytesize to_s ","body bytesize ","ActionDispatch Response  default_charset "]}," ActionDispatch ParamsParser ParseError initialize":{"type":"method","name":"initialize","children":[],"call":["$! message ","ActiveSupport Deprecation  warn "," caller "," class "]}," ActionDispatch Flash FlashHash to_session_value":{"type":"method","name":"to_session_value","children":[],"call":["@discard to_a "," empty? ","flashes_to_keep empty? ","@flashes except ","@flashes except  empty? "]}," ActionDispatch Flash FlashHash from_session_value":{"type":"method","name":"from_session_value","children":[],"call":[]}," ActionDispatch ExceptionWrapper source_fragment":{"type":"method","name":"source_fragment","children":[],"call":["Hash  [] ","(irange\n  (send\n    (lvar :start) :+\n    (int 1))\n  (begin\n    (send\n      (send\n        (lvar :lines) :count) :+\n      (lvar :start)))) zip flatten ","(irange\n  (send\n    (lvar :start) :+\n    (int 1))\n  (begin\n    (send\n      (send\n        (lvar :lines) :count) :+\n      (lvar :start)))) zip ","lines count + ","lines count ","start + ","file each_line drop take ","file each_line drop ","file each_line ","(send\n  (lvar :line) :-\n  (int 3)) max ","line - ","File  open ","File  exists? ","Rails  root join ","Rails  root ","Rails  respond_to? ","File  exist? "," extract_source_fragment_lines ","(irange\n  (send\n    (lvar :start) :+\n    (int 1))\n  (begin\n    (send\n      (send\n        (lvar :file each_line drop take ) :count) :+\n      (lvar :start)))) zip flatten ","(irange\n  (send\n    (lvar :(send\n  (lvar :line) :-\n  (int 3)) max ) :+\n    (int 1))\n  (begin\n    (send\n      (send\n        (lvar :lines) :count) :+\n      (lvar :(send\n  (lvar :line) :-\n  (int 3)) max )))) zip flatten ","(irange\n  (send\n    (lvar :start) :+\n    (int 1))\n  (begin\n    (send\n      (send\n        (lvar :file each_line drop take ) :count) :+\n      (lvar :start)))) zip ","(irange\n  (send\n    (lvar :(send\n  (lvar :line) :-\n  (int 3)) max ) :+\n    (int 1))\n  (begin\n    (send\n      (send\n        (lvar :lines) :count) :+\n      (lvar :(send\n  (lvar :line) :-\n  (int 3)) max )))) zip ","file each_line drop take  count + ","file each_line drop take  count ","(send\n  (lvar :line) :-\n  (int 3)) max  + "," extract_source_fragment_file each_line drop take  "]}," ActionDispatch ExceptionWrapper source_extract":{"type":"method","name":"source_extract","children":[],"call":[" source_fragment ","line to_i ","trace split "," application_trace first "," application_trace "," exception backtrace map "," exception backtrace "," exception "," application_trace first  split "," application_ application_trace first  first "," application_ application_trace first  "," exception back application_trace first  map "," exception back application_trace first  "]}," ActionDispatch DebugExceptions routes_inspector":{"type":"method","name":"routes_inspector","children":[],"call":["ActionDispatch Routing RoutesInspector  new ","@routes_app routes routes ","@routes_app routes ","exception is_a? ","@routes_app respond_to? ","exception template_error? ","exception routing_error? "]}," ActionDispatch Cookies UpgradeLegacyEncryptedCookieJar []":{"type":"method","name":"[]","children":[],"call":[" verify_and_upgrade_legacy_signed_message "," decrypt_and_verify ","@parent_jar [] "," deserialize "]}," ActionDispatch Cookies EncryptedCookieJar decrypt_and_verify":{"type":"method","name":"decrypt_and_verify","children":[],"call":["@encryptor decrypt_and_verify "]}," ActionDispatch Cookies EncryptedCookieJar []=":{"type":"method","name":"[]=","children":[],"call":["@parent_jar []= "," raise ","options [] size > ","options [] size ","options [] ","options []= ","@encryptor encrypt_and_sign ","options symbolize_keys! ","options is_a? "," serialize ","options [] bytesize > ","options [] bytesize "]}," ActionDispatch Cookies EncryptedCookieJar []":{"type":"method","name":"[]","children":[],"call":[" decrypt_and_verify ","@parent_jar [] ","@encryptor decrypt_and_verify "," deserialize "]}," ActionDispatch Cookies EncryptedCookieJar initialize":{"type":"method","name":"initialize","children":[],"call":["ActiveSupport MessageEncryptor  new ","key_generator generate_key ","@options [] "," raise ","You didn't set config.secret_key_base, which is required for this cookie jar.  + ","ActiveSupport LegacyKeyGenerator  === ","Encrypted Cookies must be used in conjunction with config.secret_key_base. + ","ActiveSupport DummyKeyGenerator  === ","You didn't set secrets.secret_key_base, which is required for this cookie jar.  + "," digest ","key_generator generate_key [] ","ActiveSupport MessageEncryptor  key_len "," key_generator generate_key "," request encrypted_signed_cookie_salt "," request "," key_generator "," request encrypted_cookie_salt "," key_generator generate_key [] ","You didn't set config.key_generator generate_key _key_base, which is required for this cookie jar.  + ","You didn't set config.key_generator generate_key [] _key_base, which is required for this cookie jar.  + ","You didn't set config. key_generator generate_key _key_base, which is required for this cookie jar.  + ","You didn't set config. key_generator generate_key [] _key_base, which is required for this cookie jar.  + ","Encrypted Cookies must be used in conjunction with config.key_generator generate_key _key_base. + ","Encrypted Cookies must be used in conjunction with config.key_generator generate_key [] _key_base. + ","Encrypted Cookies must be used in conjunction with config. key_generator generate_key _key_base. + ","Encrypted Cookies must be used in conjunction with config. key_generator generate_key [] _key_base. + ","You didn't set key_generator generate_key s.key_generator generate_key _key_base, which is required for this cookie jar.  + ","You didn't set key_generator generate_key [] s.key_generator generate_key [] _key_base, which is required for this cookie jar.  + ","You didn't set  key_generator generate_key s. key_generator generate_key _key_base, which is required for this cookie jar.  + ","You didn't set  key_generator generate_key [] s. key_generator generate_key [] _key_base, which is required for this cookie jar.  + "]}," ActionDispatch Cookies UpgradeLegacySignedCookieJar []":{"type":"method","name":"[]","children":[],"call":[" verify_and_upgrade_legacy_signed_message "," verify ","@parent_jar [] "," deserialize "," verify_and_upgrade_legacy_@parent_jar []  "]}," ActionDispatch Cookies SignedCookieJar verify":{"type":"method","name":"verify","children":[],"call":["@verifier verify "]}," ActionDispatch Cookies PermanentCookieJar []":{"type":"method","name":"[]","children":[],"call":["@parent_jar [] ","name to_s "," name to_s "," name "]}," ActionDispatch Cookies CookieJar deleted?":{"type":"method","name":"deleted?","children":[],"call":["@delete_cookies [] == ","@delete_cookies [] ","name to_s "," handle_options ","options symbolize_keys! ","key to_s "]}," ActionDispatch Cookies CookieJar fetch":{"type":"method","name":"fetch","children":[],"call":["@cookies fetch ","name to_s "]}," ActionDispatch Cookies CookieJar options_for_env":{"type":"method","name":"options_for_env","children":[],"call":[]}," ActionDispatch Cookies VerifyAndUpgradeLegacySignedMessage verify_and_upgrade_legacy_signed_message":{"type":"method","name":"verify_and_upgrade_legacy_signed_message","children":[],"call":[" []= ","@legacy_verifier verify tap ","@legacy_verifier verify "," deserialize tap "," deserialize "]}," ActionDispatch Cookies VerifyAndUpgradeLegacySignedMessage initialize":{"type":"method","name":"initialize","children":[],"call":["ActiveSupport MessageVerifier  new ","@options [] "," request secret_token "," request "]}," ActionDispatch Cookies ChainedCookieJars signed_or_encrypted":{"type":"method","name":"signed_or_encrypted","children":[],"call":[" signed "," encrypted ","@options [] present? ","@options [] "," request secret_key_base present? "," request secret_key_base "," request "]}," ActionDispatch Cookies ChainedCookieJars encrypted":{"type":"method","name":"encrypted","children":[],"call":["EncryptedCookieJar  new ","UpgradeLegacyEncryptedCookieJar  new ","@options [] "," upgrade_legacy_signed_cookies? ","EncryptedKeyRotatingCookieJar  new "]}," ActionDispatch Cookies ChainedCookieJars signed":{"type":"method","name":"signed","children":[],"call":["SignedCookieJar  new ","UpgradeLegacySignedCookieJar  new ","@options [] "," upgrade_legacy_signed_cookies? ","SignedKeyRotatingCookieJar  new "]}," ActionDispatch Cookies ChainedCookieJars permanent":{"type":"method","name":"permanent","children":[],"call":["PermanentCookieJar  new "]}," ActionDispatch Journey Visitors Dot terminal":{"type":"method","name":"terminal","children":[],"call":["@nodes << ","node object_id ","node left ","seed first << ","seed first "]}," ActionDispatch Journey Visitors Dot visit_OR":{"type":"method","name":"visit_OR","children":[],"call":["@nodes << ","node object_id ","seed first << ","seed first "]}," ActionDispatch Journey Visitors Dot visit_STAR":{"type":"method","name":"visit_STAR","children":[],"call":["@nodes << ","node object_id ","seed first << ","seed first "]}," ActionDispatch Journey Visitors Dot visit_CAT":{"type":"method","name":"visit_CAT","children":[],"call":["@nodes << ","node object_id ","seed first << ","seed first "]}," ActionDispatch Journey Visitors Dot visit_GROUP":{"type":"method","name":"visit_GROUP","children":[],"call":["@nodes << ","node object_id ","seed first << ","seed first "]}," ActionDispatch Journey Visitors Dot unary":{"type":"method","name":"unary","children":[],"call":["@edges << ","node left object_id ","node left ","node object_id ","seed last << ","seed last "]}," ActionDispatch Journey Visitors Dot nary":{"type":"method","name":"nary","children":[],"call":["@edges << ","c object_id ","node object_id ","node children each ","node children ","seed last concat ","node children map ","seed last "]}," ActionDispatch Journey Visitors Dot binary":{"type":"method","name":"binary","children":[],"call":["@edges << ","c object_id ","node object_id ","node children each ","node children ","seed last concat ","node children map ","seed last "]}," ActionDispatch Journey Visitors Dot accept":{"type":"method","name":"accept","children":[],"call":["@edges join ","@nodes join ","edges join ","nodes join "]}," ActionDispatch Journey Visitors Dot initialize":{"type":"method","name":"initialize","children":[],"call":[]}," ActionDispatch Journey Visitors Formatter visit_SYMBOL":{"type":"method","name":"visit_SYMBOL","children":[],"call":["Router Utils  escape_path "," consumed []= "," consumed "," options [] "," options ","node to_sym "," escape_segment "," escape_path ","name == "]}," ActionDispatch Journey Visitors Formatter nary":{"type":"method","name":"nary","children":[],"call":["(send\n  (send\n    (lvar :node) :children) :map) join "," visit ","node children map ","node children "]}," ActionDispatch Journey Visitors Formatter binary":{"type":"method","name":"binary","children":[],"call":["(send nil :visit\n  (send\n    (lvar :node) :left)) join "," visit ","node right ","node left "]}," ActionDispatch Journey Visitors Formatter terminal":{"type":"method","name":"terminal","children":[],"call":["node left "]}," ActionDispatch Journey Visitors Formatter visit_GROUP":{"type":"method","name":"visit_GROUP","children":[],"call":["route include? "," visit ","node left "," consumed == "," options "," consumed "," visit  include? "]}," ActionDispatch Journey Visitors Formatter initialize":{"type":"method","name":"initialize","children":[],"call":[]}," ActionDispatch Journey Visitors OptimizedPath visit_GROUP":{"type":"method","name":"visit_GROUP","children":[],"call":[]}," ActionDispatch Journey Visitors String visit_GROUP":{"type":"method","name":"visit_GROUP","children":[],"call":[" visit ","node left "," visit << ",") freeze ","seed << ","( freeze ","seed dup << ","seed dup "]}," ActionDispatch Journey Visitors String terminal":{"type":"method","name":"terminal","children":[],"call":["node left ","seed + "]}," ActionDispatch Journey Visitors String nary":{"type":"method","name":"nary","children":[],"call":["(send\n  (send\n    (lvar :node) :children) :map) join "," visit ","node children map ","node children ","string << ","| freeze ","last_child == ","node children inject ","node children last "," visit  << ","node children last  == "]}," ActionDispatch Journey Visitors String binary":{"type":"method","name":"binary","children":[],"call":["(send nil :visit\n  (send\n    (lvar :node) :left)) join "," visit ","node right ","node left "]}," ActionDispatch Journey Visitors Each visit":{"type":"method","name":"visit","children":[],"call":[" block call "," block ","block call "]}," ActionDispatch Journey Visitors Each initialize":{"type":"method","name":"initialize","children":[],"call":[]}," ActionDispatch Journey Visitors Visitor terminal":{"type":"method","name":"terminal","children":[],"call":[]}," ActionDispatch Journey Visitors Visitor visit_STAR":{"type":"method","name":"visit_STAR","children":[],"call":[" unary "]}," ActionDispatch Journey Visitors Visitor visit_GROUP":{"type":"method","name":"visit_GROUP","children":[],"call":[" unary "]}," ActionDispatch Journey Visitors Visitor unary":{"type":"method","name":"unary","children":[],"call":[" visit ","node left "]}," ActionDispatch Journey Visitors Visitor visit_OR":{"type":"method","name":"visit_OR","children":[],"call":[" nary "]}," ActionDispatch Journey Visitors Visitor nary":{"type":"method","name":"nary","children":[],"call":[" visit ","node children each ","node children "]}," ActionDispatch Journey Visitors Visitor visit_CAT":{"type":"method","name":"visit_CAT","children":[],"call":[" binary "]}," ActionDispatch Journey Visitors Visitor binary":{"type":"method","name":"binary","children":[],"call":[" visit ","node right ","node left "]}," ActionDispatch Journey Visitors Visitor visit":{"type":"method","name":"visit","children":[],"call":[" send ","DISPATCH_CACHE  [] ","node type "]}," ActionDispatch Journey Visitors Visitor accept":{"type":"method","name":"accept","children":[],"call":[" visit "]}," ActionDispatch Journey Scanner scan":{"type":"method","name":"scan","children":[],"call":["@ss scan ","text tr ","text tr! ","@ss skip "," dedup_scan ","text -@ ","@ss scan  tr "," dedup_scan  tr ","@ss scan  tr! "," dedup_scan  tr! ","@ss scan  -@ "," dedup_scan  -@ "]}," ActionDispatch Journey Scanner next_token":{"type":"method","name":"next_token","children":[],"call":["@ss eos? "," scan "]}," ActionDispatch Journey Scanner pre_match":{"type":"method","name":"pre_match","children":[],"call":["@ss pre_match "]}," ActionDispatch Journey Scanner pos":{"type":"method","name":"pos","children":[],"call":["@ss pos "]}," ActionDispatch Journey Scanner eos?":{"type":"method","name":"eos?","children":[],"call":["@ss eos? "]}," ActionDispatch Journey Scanner scan_setup":{"type":"method","name":"scan_setup","children":[],"call":["StringScanner  new "]}," ActionDispatch Journey Scanner initialize":{"type":"method","name":"initialize","children":[],"call":[]}," ActionDispatch Journey Routes clear_cache!":{"type":"method","name":"clear_cache!","children":[],"call":[]}," ActionDispatch Journey Routes add_route":{"type":"method","name":"add_route","children":[],"call":[" clear_cache! "," named_routes []= "," named_routes "," named_routes [] ! "," named_routes [] "," routes << "," routes ","route precedence= "," routes length ","Route  new "," partition_route ","mapping make_route "," named_Route  new s []= "," named_mapping make_route s []= "," named_Route  new s "," named_mapping make_route s "," named_Route  new s [] ! "," named_mapping make_route s [] ! "," named_Route  new s [] "," named_mapping make_route s [] "," Route  new s << "," mapping make_route s << "," Route  new s "," mapping make_route s ","Route  new  precedence= ","mapping make_route  precedence= "," Route  new s length "," mapping make_route s length "," partition_Route  new  "," partition_mapping make_route  ","mapping make_Route  new  ","mapping make_mapping make_route  "]}," ActionDispatch Journey Routes simulator":{"type":"method","name":"simulator","children":[],"call":["GTG Simulator  new ","GTG Builder  new transition_table ","GTG Builder  new "," ast "," ast nil? "]}," ActionDispatch Journey Routes ast":{"type":"method","name":"ast","children":[],"call":["Nodes Or  new ","asts empty? "," partitioned_routes first map "," partitioned_routes first "," partitioned_routes "," anchored_routes map "," anchored_routes "," partitioned_routes first map  empty? "," anchored_routes map  empty? "]}," ActionDispatch Journey Routes partitioned_routes":{"type":"method","name":"partitioned_routes","children":[],"call":["r ast grep all? ","r ast grep ","r ast ","r path anchored ","r path "," routes partition "," routes "]}," ActionDispatch Journey Routes clear":{"type":"method","name":"clear","children":[],"call":[" routes clear "," routes "," named_routes clear "," named_routes "," custom_routes clear "," custom_routes "," anchored_routes clear "," anchored_routes "]}," ActionDispatch Journey Routes each":{"type":"method","name":"each","children":[],"call":[" routes each "," routes "]}," ActionDispatch Journey Routes last":{"type":"method","name":"last","children":[],"call":[" routes last "," routes "]}," ActionDispatch Journey Routes length":{"type":"method","name":"length","children":[],"call":[" routes length "," routes "]}," ActionDispatch Journey Routes initialize":{"type":"method","name":"initialize","children":[],"call":[]}," ActionDispatch Journey Router get_routes_as_head":{"type":"method","name":"get_routes_as_head","children":[],"call":["routes flatten! ","route precedence= ","r precedence + ","r precedence ","Route  new tap ","Route  new ","r defaults ","r conditions merge ","r conditions ","r path ","r app ","r name ","(send\n  (lvar :routes) :select) map! ","(send\n  (send\n    (lvar :r) :verb) :===\n  (str \"HEAD\")) ! ","r verb === ","r verb ","routes select ","(or\n  (send\n    (send\n      (lvar :routes) :map\n      (block-pass\n        (sym :precedence))) :max)\n  (int 0)) + ","routes map max ","routes map ","route (or\n  (send\n    (send\n      (lvar :routes) :map\n      (block-pass\n        (sym :precedence))) :max)\n  (int 0)) + = ","r (or\n  (send\n    (send\n      (lvar :routes) :map\n      (block-pass\n        (sym :precedence))) :max)\n  (int 0)) +  + ","r (or\n  (send\n    (send\n      (lvar :routes) :map\n      (block-pass\n        (sym :precedence))) :max)\n  (int 0)) +  ","(or\n  (send\n    (send\n      (lvar :routes) :map\n      (block-pass\n        (sym :(or\n  (send\n    (send\n      (lvar :routes) :map\n      (block-pass\n        (sym :precedence))) :max)\n  (int 0)) + ))) :max)\n  (int 0)) + "]}," ActionDispatch Journey Router find_routes":{"type":"method","name":"find_routes","children":[],"call":["r defaults merge ","r defaults ","Hash  [] ","match_names zip find_all ","match_names zip ","Utils  unescape_uri ","match_data captures map ","match_data captures ","n to_sym ","match_data names map ","match_data names ","r path match ","req path_info ","r path ","routes map! ","r matches? ","routes sort_by! select! ","routes sort_by! ","routes concat "," get_routes_as_head "," filter_routes concat "," custom_routes find_all "," custom_routes "," filter_routes "," request_class new "," request_class ","path_parameters []= ","name to_sym ","match_data names zip ","r defaults dup "," match_routes "," match_head_routes ","req request_method == ","req request_method ","routes select! ","req env [] === ","req env [] ","req env ","req head? ","match_data [] ","i + ","match_data names each_with_index ","r path match? ","r path match  captures map ","r path match  captures ","r path match  names map ","r path match  names ","req path_Hash  []  "," request_class new  path_info ","req req path_info  "," filter_routes concat  map! "," match_routes  map! "," match_head_routes  map! "," filter_routes concat  sort_by! select! "," match_routes  sort_by! select! "," match_head_routes  sort_by! select! "," filter_routes concat  sort_by! "," match_routes  sort_by! "," match_head_routes  sort_by! "," filter_routes concat  concat "," match_routes  concat "," match_head_routes  concat "," get_ filter_routes concat _as_head "," get_ match_routes _as_head "," get_ match_head_routes _as_head "," filter_ filter_routes concat  concat "," filter_ match_routes  concat "," filter_ match_head_routes  concat "," custom_ filter_routes concat  find_all "," custom_ match_routes  find_all "," custom_ match_head_routes  find_all "," custom_ filter_routes concat  "," custom_ match_routes  "," custom_ match_head_routes  "," filter_ filter_routes concat  "," filter_ match_routes  "," filter_ match_head_routes  ","  request_class new uest_class new ","  request_class new uest_class ","r defaults dup  []= ","r path match  names zip "," match_ filter_routes concat  "," match_ match_routes  "," match_ match_head_routes  "," match_head_ filter_routes concat  "," match_head_ match_routes  "," match_head_ match_head_routes  "," request_class new   request_class new uest_method == "," request_class new   request_class new uest_method "," filter_routes concat  select! "," match_routes  select! "," match_head_routes  select! "," request_class new  env [] === "," request_class new  env [] "," request_class new  env "," request_class new  head? ","r path match  [] ","r path match  names each_with_index "]}," ActionDispatch Journey Router filter_routes":{"type":"method","name":"filter_routes","children":[],"call":["data memos "," simulator match "," simulator "," ast "," simulator memos "," simulator match  memos "]}," ActionDispatch Journey Router custom_routes":{"type":"method","name":"custom_routes","children":[],"call":[" partitioned_routes last "," partitioned_routes "," routes custom_routes "," routes "]}," ActionDispatch Journey Router simulator":{"type":"method","name":"simulator","children":[],"call":[" routes simulator "," routes "]}," ActionDispatch Journey Router ast":{"type":"method","name":"ast","children":[],"call":[" routes ast "," routes "]}," ActionDispatch Journey Router partitioned_routes":{"type":"method","name":"partitioned_routes","children":[],"call":[" routes partitioned_routes "," routes ","n default_regexp? ","r ast grep all? ","r ast grep ","r ast ","r path anchored ","r path "," routes partition ","r path requirements_anchored? "]}," ActionDispatch Journey Router visualizer":{"type":"method","name":"visualizer","children":[],"call":["tt visualizer ","v first ","groups values map ","groups values ","a to_s "," partitioned_routes first map group_by "," partitioned_routes first map "," partitioned_routes first "," partitioned_routes ","GTG Builder  new transition_table ","GTG Builder  new "," ast ","GTG Builder  new transition_table  visualizer "," partitioned_routes first map group_by  values map "," partitioned_routes first map group_by  values "]}," ActionDispatch Journey Router recognize":{"type":"method","name":"recognize","children":[],"call":["req env []= ","match post_match sub ","match post_match ","req env ","match to_s ","route path anchored ","route path "," find_routes each "," find_routes ","rails_req path_info= ","rails_req script_name= ","route defaults merge ","route defaults ","/ + ","rails_req path_info ","rails_req path_info start_with? "]}," ActionDispatch Journey Router call":{"type":"method","name":"call","children":[],"call":["env []= ","pass == ","headers [] ","route app call ","route app ","(or\n  (lvar :set_params)\n  (hash)) merge ","match post_match ","(send\n  (send\n    (lvar :script_name) :to_s) :+\n  (send\n    (lvar :match) :to_s)) chomp ","script_name to_s + ","match to_s ","script_name to_s ","route path anchored ","route path ","env values_at "," find_routes each "," find_routes ","Utils  normalize_path ","env [] "," normalize_path ","/ + ","matched_path start_with? ","path_info start_with? ","match post_match  start_with? "]}," ActionDispatch Journey Router initialize":{"type":"method","name":"initialize","children":[],"call":["options [] "]}," ActionDispatch Journey Router NullReq []":{"type":"method","name":"[]","children":[],"call":[" env [] "," env "]}," ActionDispatch Journey Router NullReq ip":{"type":"method","name":"ip","children":[],"call":[" env [] "," env "]}," ActionDispatch Journey Router NullReq path_info":{"type":"method","name":"path_info","children":[],"call":[" env [] "," env "]}," ActionDispatch Journey Router NullReq request_method":{"type":"method","name":"request_method","children":[],"call":[" env [] "," env "]}," ActionDispatch Journey Router NullReq initialize":{"type":"method","name":"initialize","children":[],"call":[]}," ActionDispatch Journey Router Utils unescape_uri":{"type":"method","name":"unescape_uri","children":[],"call":[]}," ActionDispatch Journey Router Utils escape_fragment":{"type":"method","name":"escape_fragment","children":[],"call":[]}," ActionDispatch Journey Router Utils escape_path":{"type":"method","name":"escape_path","children":[],"call":[]}," ActionDispatch Journey Router Utils normalize_path":{"type":"method","name":"normalize_path","children":[],"call":[]}," ActionDispatch Journey Router Strexp names":{"type":"method","name":"names","children":[],"call":["s tr ","@path scan map ","@path scan "]}," ActionDispatch Journey Router Strexp initialize":{"type":"method","name":"initialize","children":[],"call":[]}," ActionDispatch Journey Route verb":{"type":"method","name":"verb","children":[],"call":[" constraints [] "," constraints "," verbs join "," verbs "]}," ActionDispatch Journey Route ip":{"type":"method","name":"ip","children":[],"call":[" constraints [] "," constraints "]}," ActionDispatch Journey Route matches?":{"type":"method","name":"matches?","children":[],"call":["value === ","request send ","request send blank? ","request send present? ","value include? ","request send to_s ","request respond_to? "," constraints all? "," constraints "," match_verb "]}," ActionDispatch Journey Route required_defaults":{"type":"method","name":"required_defaults","children":[],"call":[" required_default? ! "," required_default? "," parts include? "," parts ","@defaults dup delete_if ","@defaults dup "]}," ActionDispatch Journey Route required_default?":{"type":"method","name":"required_default?","children":[],"call":["(or\n  (send\n    (send nil :constraints) :[]\n    (sym :required_defaults))\n  (array)) include? "," constraints [] "," constraints ","@_required_defaults include? "]}," ActionDispatch Journey Route required_parts":{"type":"method","name":"required_parts","children":[],"call":["n to_sym "," path required_names map "," path required_names "," path "]}," ActionDispatch Journey Route optional_parts":{"type":"method","name":"optional_parts","children":[],"call":["n to_sym "," path optional_names map "," path optional_names "," path "]}," ActionDispatch Journey Route optimized_path":{"type":"method","name":"optimized_path","children":[],"call":["Visitors OptimizedPath  new accept "," path spec "," path ","Visitors OptimizedPath  new "]}," ActionDispatch Journey Route format":{"type":"method","name":"format","children":[],"call":["Visitors Formatter  new accept "," path spec "," path ","Visitors Formatter  new "," required_parts include? ! "," required_parts include? "," required_parts ","value to_s == "," defaults [] to_s "," defaults [] "," defaults ","value to_s ","path_options delete_if ","@path_formatter evaluate "]}," ActionDispatch Journey Route parts":{"type":"method","name":"parts","children":[],"call":["n to_sym "," segments map "," segments "]}," ActionDispatch Journey Route score":{"type":"method","name":"score","children":[],"call":["score + "," required_defaults length * "," required_defaults length "," required_defaults ","(send\n  (lvar :supplied_keys) :&\n  (send\n    (send nil :path) :names)) length ","supplied_keys & "," path names "," path ","(send\n  (lvar :required_keys) :-\n  (lvar :supplied_keys)) empty? ","required_keys - ","(send\n  (lvar :constraints) :map) compact ","k to_s ","constraints map "," path required_names ","supplied_keys include? "," path names each ","required_keys each ","(send\n  (send\n    (send nil :required_defaults) :length) :*\n  (int 2)) + "," path names count "," path required_names each ","(send\n  (lvar :supplied_keys) :&\n  (send\n    (send nil :path) :names)) length  + ","(send\n  (lvar :(send\n  (lvar :constraints) :map) compact ) :&\n  (send\n    (send nil :path) :names)) length ","(send\n  (lvar :constraints) :map) compact  & ","(send\n  (lvar :required_keys) :-\n  (lvar :(send\n  (lvar :constraints) :map) compact )) empty? ","(send\n  (lvar : path required_names ) :-\n  (lvar :supplied_keys)) empty? "," path required_names  - ","(send\n  (lvar :constraints) :map) compact  include? "," path required_names  each "]}," ActionDispatch Journey Route required_keys":{"type":"method","name":"required_keys","children":[],"call":[" required_parts + "," required_defaults keys "," required_defaults "," required_parts "]}," ActionDispatch Journey Route segments":{"type":"method","name":"segments","children":[],"call":[" path names "," path "]}," ActionDispatch Journey Route requirements":{"type":"method","name":"requirements","children":[],"call":["(str \".+?\") == "," path requirements merge delete_if "," path requirements merge "," path requirements "," path ","@defaults merge delete_if ","@defaults merge "]}," ActionDispatch Journey Route ast":{"type":"method","name":"ast","children":[],"call":["n memo= ","decorated_ast grep each ","decorated_ast grep "," path ast "," path ","decorated_ast find_all each ","decorated_ast find_all "," path ast  grep each "," path ast  grep "," path ast  find_all each "," path ast  find_all "]}," ActionDispatch Journey Route initialize":{"type":"method","name":"initialize","children":[],"call":["app is_a? ","app app ","@path build_formatter ","@path ast route= ","@path ast ","@path ast root ","app app  is_a? ","app app  app app  "]}," ActionDispatch Journey Path Pattern offsets":{"type":"method","name":"offsets","children":[],"call":["viz accept "," spec ","RegexpOffsets  new ","@offsets << ","@offsets last ","@offsets push ","(send\n  (send\n    (send\n      (lvar :re) :match\n      (str \"\")) :length) :-\n  (int 1)) + ","re match length - ","re match length ","re match ","@requirements [] ","@requirements key? ","node to_sym "," spec find_all each "," spec find_all ","Regexp  union ","offsets << ","offsets last ","offsets push ","RegexpOffsets  new  accept ","viz accept  << ","viz accept  last ","viz accept  push ","node to_sym  to_sym "]}," ActionDispatch Journey Path Pattern regexp_visitor":{"type":"method","name":"regexp_visitor","children":[],"call":[]}," ActionDispatch Journey Path Pattern to_regexp":{"type":"method","name":"to_regexp","children":[],"call":[" regexp_visitor new accept "," spec "," regexp_visitor new "," regexp_visitor "]}," ActionDispatch Journey Path Pattern source":{"type":"method","name":"source","children":[],"call":[" to_regexp source "," to_regexp "]}," ActionDispatch Journey Path Pattern match":{"type":"method","name":"match","children":[],"call":["MatchData  new "," offsets "," names "," to_regexp match "," to_regexp "," to_regexp  to_regexp match  "]}," ActionDispatch Journey Path Pattern MatchData to_s":{"type":"method","name":"to_s","children":[],"call":["@match to_s "]}," ActionDispatch Journey Path Pattern MatchData post_match":{"type":"method","name":"post_match","children":[],"call":["@match post_match "]}," ActionDispatch Journey Path Pattern MatchData length":{"type":"method","name":"length","children":[],"call":["@offsets length "]}," ActionDispatch Journey Path Pattern MatchData []":{"type":"method","name":"[]","children":[],"call":["@match [] ","@offsets [] + ","@offsets [] ","x - "]}," ActionDispatch Journey Path Pattern MatchData captures":{"type":"method","name":"captures","children":[],"call":[" [] ","i + ","(send\n  (send nil :length) :-\n  (int 1)) times map ","(send\n  (send nil :length) :-\n  (int 1)) times "," length - "," length ","Array  new "]}," ActionDispatch Journey Path Pattern MatchData initialize":{"type":"method","name":"initialize","children":[],"call":[]}," ActionDispatch Journey Path Pattern UnanchoredRegexp accept":{"type":"method","name":"accept","children":[],"call":[" visit ","path == "," visit  == "]}," ActionDispatch Journey Path Pattern AnchoredRegexp visit_STAR":{"type":"method","name":"visit_STAR","children":[],"call":["@matchers [] ","node left to_sym ","node left "]}," ActionDispatch Journey Path Pattern AnchoredRegexp visit_SLASH":{"type":"method","name":"visit_SLASH","children":[],"call":["node left "]}," ActionDispatch Journey Path Pattern AnchoredRegexp visit_LITERAL":{"type":"method","name":"visit_LITERAL","children":[],"call":["Regexp  escape ","node left "]}," ActionDispatch Journey Path Pattern AnchoredRegexp visit_GROUP":{"type":"method","name":"visit_GROUP","children":[],"call":[" visit ","node left "]}," ActionDispatch Journey Path Pattern AnchoredRegexp visit_SYMBOL":{"type":"method","name":"visit_SYMBOL","children":[],"call":["@matchers [] ","@matchers key? ","node to_sym ","Regexp  union ","node to_sym  to_sym "]}," ActionDispatch Journey Path Pattern AnchoredRegexp visit_CAT":{"type":"method","name":"visit_CAT","children":[],"call":["(send nil :visit\n  (send\n    (lvar :node) :left)) join "," visit ","node right ","node left "]}," ActionDispatch Journey Path Pattern AnchoredRegexp accept":{"type":"method","name":"accept","children":[],"call":[" visit "]}," ActionDispatch Journey Path Pattern AnchoredRegexp initialize":{"type":"method","name":"initialize","children":[],"call":[]}," ActionDispatch Journey Path Pattern RegexpOffsets visit_SYMBOL":{"type":"method","name":"visit_SYMBOL","children":[],"call":["@capture_count << ","@capture_count last ","@capture_count push ","(send\n  (send\n    (send\n      (lvar :re) :match\n      (str \"\")) :length) :-\n  (int 1)) + ","re match length - ","re match length ","re match ","@matchers [] ","@matchers key? ","node to_sym ","node to_sym  to_sym "]}," ActionDispatch Journey Path Pattern RegexpOffsets visit":{"type":"method","name":"visit","children":[],"call":[]}," ActionDispatch Journey Path Pattern RegexpOffsets initialize":{"type":"method","name":"initialize","children":[],"call":[]}," ActionDispatch Journey Path Pattern optional_names":{"type":"method","name":"optional_names","children":[],"call":["(send\n  (send\n    (block\n      (send\n        (send\n          (send nil :spec) :grep\n          (const\n            (const nil :Nodes) :Group)) :map)\n      (args\n        (arg :group))\n      (send\n        (lvar :group) :grep\n        (const\n          (const nil :Nodes) :Symbol))) :flatten) :map) uniq ","n name ","(send\n  (send\n    (send nil :spec) :grep\n    (const\n      (const nil :Nodes) :Group)) :map) flatten map ","(send\n  (send\n    (send nil :spec) :grep\n    (const\n      (const nil :Nodes) :Group)) :map) flatten ","group grep "," spec grep map "," spec grep "," spec ","(send\n  (block\n    (send\n      (send\n        (send nil :spec) :grep\n        (const\n          (const nil :Nodes) :Group)) :flat_map)\n    (args\n      (arg :group))\n    (send\n      (lvar :group) :grep\n      (const\n        (const nil :Nodes) :Symbol))) :map) uniq ","(send\n  (send\n    (send nil :spec) :grep\n    (const\n      (const nil :Nodes) :Group)) :flat_map) map "," spec grep flat_map ","(send\n  (send\n    (send nil :spec) :find_all\n    (block-pass\n      (sym :group?))) :flat_map) map uniq ","(send\n  (send\n    (send nil :spec) :find_all\n    (block-pass\n      (sym :group?))) :flat_map) map ","group find_all "," spec find_all flat_map "," spec find_all "]}," ActionDispatch Journey Path Pattern required_names":{"type":"method","name":"required_names","children":[],"call":[" names - "," optional_names "," names "]}," ActionDispatch Journey Path Pattern names":{"type":"method","name":"names","children":[],"call":["n name "," spec grep map "," spec grep "," spec "," spec find_all map "," spec find_all "]}," ActionDispatch Journey Path Pattern ast":{"type":"method","name":"ast","children":[],"call":["node regexp= ","@requirements [] ","node to_sym ","node left ","@spec grep each ","@spec grep ","@spec find_all each ","@spec find_all ","node left  regexp= ","node @requirements [] gexp= ","@@requirements [] qui@requirements [] ments [] ","node left  to_sym ","node left  left ","@spec g@requirements [] p each ","@spec g@requirements [] p "]}," ActionDispatch Journey Path Pattern initialize":{"type":"method","name":"initialize","children":[],"call":[" raise ","strexp anchor ","strexp separators join ","strexp separators ","strexp requirements ","parser parse ","strexp path ","Journey Parser  new ","strexp ast ","ast names ","ast root ","Journey Parser  new  parse "]}," ActionDispatch Journey Parser next_token":{"type":"method","name":"next_token","children":[],"call":["@scanner next_token "]}," ActionDispatch Journey Parser parse":{"type":"method","name":"parse","children":[],"call":[" do_parse ","@scanner scan_setup "]}," ActionDispatch Journey Parser initialize":{"type":"method","name":"initialize","children":[],"call":["Scanner  new "]}," ActionDispatch Journey Parser _reduce_none":{"type":"method","name":"_reduce_none","children":[],"call":["val [] "]}," ActionDispatch Journey Parser _reduce_17":{"type":"method","name":"_reduce_17","children":[],"call":["Dot  new ","val first ","Literal  new "]}," ActionDispatch Journey Parser _reduce_16":{"type":"method","name":"_reduce_16","children":[],"call":["Literal  new ","val first ","Symbol  new "]}," ActionDispatch Journey Parser _reduce_15":{"type":"method","name":"_reduce_15","children":[],"call":["Symbol  new ","val first ","Slash  new "]}," ActionDispatch Journey Parser _reduce_14":{"type":"method","name":"_reduce_14","children":[],"call":["Slash  new "]}," ActionDispatch Journey Parser _reduce_9":{"type":"method","name":"_reduce_9","children":[],"call":["Star  new ","Symbol  new ","val last ","Or  new ","val first "]}," ActionDispatch Journey Parser _reduce_8":{"type":"method","name":"_reduce_8","children":[],"call":["Or  new ","val last ","val first "]}," ActionDispatch Journey Parser _reduce_7":{"type":"method","name":"_reduce_7","children":[],"call":["Group  new ","val [] "]}," ActionDispatch Journey Parser _reduce_2":{"type":"method","name":"_reduce_2","children":[],"call":["val first "]}," ActionDispatch Journey Parser _reduce_1":{"type":"method","name":"_reduce_1","children":[],"call":["Cat  new ","val last ","val first "]}," ActionDispatch Journey Nodes Or type":{"type":"method","name":"type","children":[],"call":[]}," ActionDispatch Journey Nodes Or initialize":{"type":"method","name":"initialize","children":[],"call":[]}," ActionDispatch Journey Nodes Cat type":{"type":"method","name":"type","children":[],"call":[]}," ActionDispatch Journey Nodes Binary children":{"type":"method","name":"children","children":[],"call":[" right "," left "]}," ActionDispatch Journey Nodes Binary initialize":{"type":"method","name":"initialize","children":[],"call":[]}," ActionDispatch Journey Nodes Star type":{"type":"method","name":"type","children":[],"call":[]}," ActionDispatch Journey Nodes Group type":{"type":"method","name":"type","children":[],"call":[]}," ActionDispatch Journey Nodes Unary children":{"type":"method","name":"children","children":[],"call":[" left "]}," ActionDispatch Journey Nodes Symbol symbol?":{"type":"method","name":"symbol?","children":[],"call":[]}," ActionDispatch Journey Nodes Symbol default_regexp?":{"type":"method","name":"default_regexp?","children":[],"call":[" regexp == "," regexp "]}," ActionDispatch Journey Nodes Symbol initialize":{"type":"method","name":"initialize","children":[],"call":["left tr "," freeze ","*: freeze ","left tr -@ "]}," ActionDispatch Journey Nodes Dummy literal?":{"type":"method","name":"literal?","children":[],"call":[]}," ActionDispatch Journey Nodes Dummy initialize":{"type":"method","name":"initialize","children":[],"call":[]}," ActionDispatch Journey Nodes Literal type":{"type":"method","name":"type","children":[],"call":[]}," ActionDispatch Journey Nodes Literal literal?":{"type":"method","name":"literal?","children":[],"call":[]}," ActionDispatch Journey Nodes Node literal?":{"type":"method","name":"literal?","children":[],"call":[]}," ActionDispatch Journey Nodes Node symbol?":{"type":"method","name":"symbol?","children":[],"call":[]}," ActionDispatch Journey Nodes Node type":{"type":"method","name":"type","children":[],"call":[" raise "]}," ActionDispatch Journey Nodes Node name":{"type":"method","name":"name","children":[],"call":[" left tr "," left "," freeze ","*: freeze "," left tr -@ "]}," ActionDispatch Journey Nodes Node to_sym":{"type":"method","name":"to_sym","children":[],"call":[" name to_sym "," name "]}," ActionDispatch Journey Nodes Node to_dot":{"type":"method","name":"to_dot","children":[],"call":["Visitors Dot  new accept ","Visitors Dot  new ","Visitors Dot INSTANCE  accept "]}," ActionDispatch Journey Nodes Node to_s":{"type":"method","name":"to_s","children":[],"call":["Visitors String  new accept ","Visitors String  new ","Visitors String INSTANCE  accept "]}," ActionDispatch Journey Nodes Node each":{"type":"method","name":"each","children":[],"call":["Visitors Each  new accept ","Visitors Each  new ","Visitors Each INSTANCE  accept "]}," ActionDispatch Journey Nodes Node initialize":{"type":"method","name":"initialize","children":[],"call":[]}," ActionDispatch Journey NFA TransitionTable inverted":{"type":"method","name":"inverted","children":[],"call":["@inverted [] [] << ","@inverted [] [] ","@inverted [] ","sym left ","sym regexp ","Nodes Symbol  === ","hash each ","@table each ","h []= ","j []= ","Hash  new ","sym left  left ","sym regexp  left ","sym left  regexp ","sym regexp  regexp "]}," ActionDispatch Journey NFA TransitionTable transitions":{"type":"method","name":"transitions","children":[],"call":["(send\n  (ivar :@table) :map) flatten ","hash map ","@table map ","@table flat_map "]}," ActionDispatch Journey NFA TransitionTable eclosure":{"type":"method","name":"eclosure","children":[],"call":["children uniq ","stack concat "," inverted [] [] "," inverted [] "," inverted ","children << ","seen []= ","seen [] ","stack pop ","stack empty? "," Array ","stack pop tack concat "," Array  concat ","stack pop een []= ","stack pop een [] ","stack pop tack pop "," Array  pop ","stack pop tack empty? "," Array  empty? "]}," ActionDispatch Journey NFA TransitionTable alphabet":{"type":"method","name":"alphabet","children":[],"call":["x to_s "," inverted values map flatten compact uniq sort_by "," inverted values map flatten compact uniq "," inverted values map flatten compact "," inverted values map flatten "," inverted values map "," inverted values "," inverted "," inverted values flat_map compact uniq sort_by "," inverted values flat_map compact uniq "," inverted values flat_map compact "," inverted values flat_map "]}," ActionDispatch Journey NFA TransitionTable move":{"type":"method","name":"move","children":[],"call":["(send\n  (send nil :Array\n    (lvar :t)) :map) flatten uniq ","(send\n  (send nil :Array\n    (lvar :t)) :map) flatten "," inverted [] [] "," inverted [] "," inverted ","(send\n  (send\n    (send\n      (send\n        (send nil :inverted) :[]\n        (lvar :s)) :keys) :compact) :find_all) map ","sym === "," inverted [] keys compact find_all "," inverted [] keys compact "," inverted [] keys "," Array map "," Array "]}," ActionDispatch Journey NFA TransitionTable following_states":{"type":"method","name":"following_states","children":[],"call":["(send\n  (send nil :Array\n    (lvar :t)) :map) flatten uniq ","(send\n  (send nil :Array\n    (lvar :t)) :map) flatten "," inverted [] [] "," inverted [] "," inverted "," Array map "," Array ","(send\n  (send nil :Array\n    (lvar :t)) :flat_map) uniq "," Array flat_map "]}," ActionDispatch Journey NFA TransitionTable generalized_table":{"type":"method","name":"generalized_table","children":[],"call":["gt add_memo "," memo "," eclosure sort last == "," accepting "," eclosure sort last "," eclosure sort "," eclosure ","@memos key? ","states find ","gt add_accepting ","state_id [] ","final_groups each ","s sort last == ","s sort last ","s sort ","state_id keys find_all ","state_id keys ","stack << ","gt []= ","next_state empty? "," following_states ","alphabet each ","marked []= ","state empty? ","marked [] ","stack pop ","stack empty? "," alphabet ","h []= ","h length ","Hash  new ","GTG TransitionTable  new ","GTG TransitionTable  new  add_memo ","stack pop s find ","GTG TransitionTable  new  add_accepting ","state_state_id []  [] ","stack pop _id [] ","state_state_id []  keys find_all ","stack pop _id keys find_all ","state_state_id []  keys ","stack pop _id keys ","GTG TransitionTable  new  []= "," eclosure  empty? ","next_stack pop  empty? "," following_stack pop s "," alphabet  each ","stack pop  empty? ","  alphabet  ","h lenGTG TransitionTable  new h "]}," ActionDispatch Journey NFA TransitionTable states":{"type":"method","name":"states","children":[],"call":["(send\n  (send\n    (ivar :@table) :keys) :+\n  (send\n    (send\n      (send\n        (ivar :@table) :values) :map\n      (block-pass\n        (sym :keys))) :flatten)) uniq ","@table keys + ","@table values map flatten ","@table values map ","@table values ","@table keys ","(send\n  (send\n    (ivar :@table) :keys) :+\n  (send\n    (send\n      (ivar :@table) :values) :flat_map\n    (block-pass\n      (sym :keys)))) uniq ","@table values flat_map "]}," ActionDispatch Journey NFA TransitionTable merge":{"type":"method","name":"merge","children":[],"call":["@table []= ","@table delete ","@memos []= ","@memos delete "]}," ActionDispatch Journey NFA TransitionTable []=":{"type":"method","name":"[]=","children":[],"call":["@table [] []= ","@table [] "]}," ActionDispatch Journey NFA TransitionTable memo":{"type":"method","name":"memo","children":[],"call":["@memos [] "]}," ActionDispatch Journey NFA TransitionTable add_memo":{"type":"method","name":"add_memo","children":[],"call":["@memos []= "]}," ActionDispatch Journey NFA TransitionTable accepting_states":{"type":"method","name":"accepting_states","children":[],"call":[" accepting "]}," ActionDispatch Journey NFA TransitionTable accepting?":{"type":"method","name":"accepting?","children":[],"call":[" accepting == "," accepting "]}," ActionDispatch Journey NFA TransitionTable initialize":{"type":"method","name":"initialize","children":[],"call":["h []= ","Hash  new "]}," ActionDispatch Journey NFA Simulator simulate":{"type":"method","name":"simulate","children":[],"call":["MatchData  new ","(send\n  (lvar :acceptance_states) :map) flatten compact ","(send\n  (lvar :acceptance_states) :map) flatten "," tt memo "," tt ","acceptance_states map ","acceptance_states empty? "," tt accepting? "," tt eclosure sort last "," tt eclosure sort "," tt eclosure ","state find_all "," tt move ","input scan ","input eos? ","StringScanner  new ","(send\n  (lvar :acceptance_states) :flat_map) compact ","acceptance_states flat_map ","(send\n  (lvar :acceptance_ tt eclosure s) :map) flatten compact ","(send\n  (lvar :acceptance_ tt eclosure s) :map) flatten ","acceptance_ tt eclosure s map ","acceptance_ tt eclosure s empty? "," tt eclosure  find_all ","StringScanner  new  scan ","StringScanner  new  eos? ","(send\n  (lvar :acceptance_ tt eclosure s) :flat_map) compact ","acceptance_ tt eclosure s flat_map "]}," ActionDispatch Journey NFA Simulator initialize":{"type":"method","name":"initialize","children":[],"call":[]}," ActionDispatch Journey NFA MatchData initialize":{"type":"method","name":"initialize","children":[],"call":[]}," ActionDispatch Journey NFA Dot to_dot":{"type":"method","name":"to_dot","children":[],"call":["edges join "," accepting_states join "," accepting_states "," transitions map "," transitions "]}," ActionDispatch Journey NFA Builder transition_table":{"type":"method","name":"transition_table","children":[],"call":["Visitor  new accept ","Visitor  new ","TransitionTable  new "]}," ActionDispatch Journey NFA Builder initialize":{"type":"method","name":"initialize","children":[],"call":[]}," ActionDispatch Journey NFA Visitor terminal":{"type":"method","name":"terminal","children":[],"call":["@tt add_memo ","node memo ","@tt accepting= ","@tt []= "]}," ActionDispatch Journey NFA Visitor visit_OR":{"type":"method","name":"visit_OR","children":[],"call":["@tt accepting= ","@tt []= ","child last ","child first ","children each "," visit ","node children map ","node children "]}," ActionDispatch Journey NFA Visitor visit_GROUP":{"type":"method","name":"visit_GROUP","children":[],"call":["@tt []= ","left last ","left first ","@tt accepting= "," visit ","node left "," visit  last "," visit  first ","node  visit  "]}," ActionDispatch Journey NFA Visitor visit_CAT":{"type":"method","name":"visit_CAT","children":[],"call":["right last ","left first ","@tt merge ","right first ","left last "," visit ","node right ","node left "," visit  last "," visit  first ","node  visit  "]}," ActionDispatch Journey NFA Visitor initialize":{"type":"method","name":"initialize","children":[],"call":[]}," ActionDispatch Journey GTG TransitionTable move_string":{"type":"method","name":"move_string","children":[],"call":["(send\n  (lvar :t) :map) compact ","@string_states [] [] ","@string_states [] ","t map ","t empty? ","states [] ","@string_@string_states []  [] [] ","@string_@string_states []  [] ","@string_states []  [] "]}," ActionDispatch Journey GTG TransitionTable move_regexp":{"type":"method","name":"move_regexp","children":[],"call":["(send\n  (lvar :t) :map) flatten compact uniq ","(send\n  (lvar :t) :map) flatten compact ","(send\n  (lvar :t) :map) flatten ","re === ","@regexp_states [] map ","@regexp_states [] ","t map ","t empty? ","states map ","@regexp_@regexp_states []  [] map ","@regexp_@regexp_states []  [] ","@regexp_states []  map "]}," ActionDispatch Journey GTG TransitionTable transitions":{"type":"method","name":"transitions","children":[],"call":["(send\n  (ivar :@string_states) :map) flatten + ","(send\n  (ivar :@regexp_states) :map) flatten ","hash map ","@regexp_states map ","(send\n  (ivar :@string_states) :map) flatten ","@string_states map ","(send\n  (ivar :@string_states) :flat_map) + ","@regexp_states flat_map ","@string_states flat_map ","(send\n  (ivar :@string_states) :flat_map) + + ","@stdparam_states flat_map "]}," ActionDispatch Journey GTG TransitionTable states":{"type":"method","name":"states","children":[],"call":["(send\n  (lvar :ss) :+\n  (lvar :rs)) uniq ","ss + ","@regexp_states keys + ","@regexp_states values map flatten ","@regexp_states values map ","@regexp_states values ","@regexp_states keys ","@string_states keys + ","@string_states values map flatten ","@string_states values map ","@string_states values ","@string_states keys ","@regexp_states values flat_map ","@string_states values flat_map ","(send\n  (send\n    (lvar :ss) :+\n    (lvar :ps)) :+\n  (lvar :rs)) uniq ","ss + + ","@stdparam_states keys + ","@stdparam_states values flat_map ","@stdparam_states values ","@stdparam_states keys ","(send\n  (lvar :ss) :+\n  (lvar :@regexp_states keys + )) uniq ","(send\n  (lvar :@string_states keys + ) :+\n  (lvar :rs)) uniq ","@string_states keys +  + ","(send\n  (send\n    (lvar :ss) :+\n    (lvar :ps)) :+\n  (lvar :@regexp_states keys + )) uniq ","(send\n  (send\n    (lvar :@string_states keys + ) :+\n    (lvar :ps)) :+\n  (lvar :rs)) uniq ","(send\n  (send\n    (lvar :ss) :+\n    (lvar :@stdparam_states keys + )) :+\n  (lvar :rs)) uniq ","@string_states keys +  + + "]}," ActionDispatch Journey GTG TransitionTable []=":{"type":"method","name":"[]=","children":[],"call":[" raise ","unknown symbol: %s % ","sym class ","@regexp_states [] []= ","@regexp_states [] ","@string_states [] []= ","@string_states [] ","to_mappings []= "," states_hash_for [] "," states_hash_for ","sym to_s ","sym == ","unknown sym to_s bol: %s % ","sym to_s  class ","sym to_s  to_s ","sym to_s  == "]}," ActionDispatch Journey GTG TransitionTable visualizer":{"type":"method","name":"visualizer","children":[],"call":["template result "," binding ","ERB  new "," require "," to_svg ","(send\n  (lvar :ast) :map) compact join ","(send\n  (lvar :ast) :map) compact ","n symbol ","(str \"xml\") shuffle first ","(str \"xml\") shuffle "," rand to_s "," rand ","n left ","ast map ","paths shuffle first map ","paths shuffle first ","paths shuffle "," to_json ","File  read ","File  join ","File  dirname ","(str \"xml\") sample ","paths sample map ","paths sample "," __dir__ ","(send\n  (lvar :ast) :filter_map) join ","ast filter_map ","ERB  new  result "," to_ to_svg  "]}," ActionDispatch Journey GTG TransitionTable to_svg":{"type":"method","name":"to_svg","children":[],"call":["svg join sub sub ","svg join sub ","svg join ","svg shift ","3 times ","f readlines ","f close_write ","f write "," to_dot ","IO  popen "]}," ActionDispatch Journey GTG TransitionTable to_json":{"type":"method","name":"to_json","children":[],"call":["JSON  dump ","simple_regexp [] []= ","re source ","simple_regexp [] ","hash each ","@regexp_states each ","h []= ","Hash  new "," require "]}," ActionDispatch Journey GTG TransitionTable move":{"type":"method","name":"move","children":[],"call":[" move_string concat "," move_regexp "," move_string ","(send\n  (lvar :t) :map) compact concat ","(send\n  (lvar :t) :map) compact ","states [] ","@string_states [] ","regexps concat ","re === ","states map ","@regexp_states [] ","t map ","t empty? ","strings concat ","strings << ","states [] nil? ","regexps << ","v nil? ! ","v nil? ","re match? ","states each ","t each ","next_states << ","(lvar :s) freeze ","(lvar :v) freeze ","full_string slice ","end_index - ","previous_start nil? ","(send\n  (lvar :states) :[]\n  (lvar :tok)) freeze ","@stdparam_states [] ","DEFAULT_EXP_ANCHORED  match? ","@string_states []  [] ","@regexp_states []  [] ","@stdparam_states []  [] ","@string_@string_states []  [] ","@string_@regexp_states []  [] ","@string_@stdparam_states []  [] ","@string_states []  map ","@regexp_states []  map ","@stdparam_states []  map ","@regexp_@string_states []  [] ","@regexp_@regexp_states []  [] ","@regexp_@stdparam_states []  [] ","@string_states []  [] nil? ","@regexp_states []  [] nil? ","@stdparam_states []  [] nil? ","@string_states []  each ","@regexp_states []  each ","@stdparam_states []  each ","next_@string_states []  << ","next_@regexp_states []  << ","next_@stdparam_states []  << ","(send\n  (lvar :@string_states [] ) :[]\n  (lvar :tok)) freeze ","(send\n  (lvar :@regexp_states [] ) :[]\n  (lvar :tok)) freeze ","(send\n  (lvar :@stdparam_states [] ) :[]\n  (lvar :tok)) freeze ","(send\n  (lvar :states) :[]\n  (lvar :full_string slice )) freeze ","@stdparam_@string_states []  [] ","@stdparam_@regexp_states []  [] ","@stdparam_@stdparam_states []  [] "]}," ActionDispatch Journey GTG TransitionTable eclosure":{"type":"method","name":"eclosure","children":[],"call":[" Array "]}," ActionDispatch Journey GTG TransitionTable memo":{"type":"method","name":"memo","children":[],"call":["@memos [] "]}," ActionDispatch Journey GTG TransitionTable add_memo":{"type":"method","name":"add_memo","children":[],"call":["@memos [] << ","@memos [] "]}," ActionDispatch Journey GTG TransitionTable accepting?":{"type":"method","name":"accepting?","children":[],"call":["@accepting [] "]}," ActionDispatch Journey GTG TransitionTable accepting_states":{"type":"method","name":"accepting_states","children":[],"call":["@accepting keys "]}," ActionDispatch Journey GTG TransitionTable add_accepting":{"type":"method","name":"add_accepting","children":[],"call":["@accepting []= "]}," ActionDispatch Journey GTG TransitionTable initialize":{"type":"method","name":"initialize","children":[],"call":["h []= ","Hash  new "]}," ActionDispatch Journey GTG Simulator simulate":{"type":"method","name":"simulate","children":[],"call":["MatchData  new ","(send\n  (lvar :acceptance_states) :map) flatten compact ","(send\n  (lvar :acceptance_states) :map) flatten "," tt memo "," tt ","acceptance_states map ","acceptance_states empty? "," tt accepting? ","state find_all "," tt move ","input scan ","StringScanner  new "," memos ","(send\n  (lvar :acceptance_ tt move s) :map) flatten compact ","(send\n  (lvar :acceptance_ tt move s) :map) flatten ","acceptance_ tt move s map ","acceptance_ tt move s empty? "," tt move  find_all ","StringScanner  new  scan "," (send\n  (lvar :acceptance_states) :map) flatten compact  "]}," ActionDispatch Journey GTG Simulator initialize":{"type":"method","name":"initialize","children":[],"call":[]}," ActionDispatch Journey GTG MatchData initialize":{"type":"method","name":"initialize","children":[],"call":[]}," ActionDispatch Journey GTG Builder symbol":{"type":"method","name":"symbol","children":[],"call":["edge left ","edge regexp ","edge symbol? "]}," ActionDispatch Journey GTG Builder build_followpos":{"type":"method","name":"build_followpos","children":[],"call":[" firstpos ","table [] "," lastpos each "," lastpos ","n right ","n left ","@ast each ","h []= ","Hash  new ","(send\n  (const nil :Hash) :new) compare_by_identity ","(send\n  (const nil :Hash) :new) compare_by_identity  [] "]}," ActionDispatch Journey GTG Builder followpos_table":{"type":"method","name":"followpos_table","children":[],"call":[" build_followpos "]}," ActionDispatch Journey GTG Builder followpos":{"type":"method","name":"followpos","children":[],"call":[" followpos_table [] "," followpos_table "]}," ActionDispatch Journey GTG Builder lastpos":{"type":"method","name":"lastpos","children":[],"call":[" raise ","unknown lastpos: %s % ","node class name ","node class "," lastpos ","node left "," nullable? ","node right "," lastpos | ","(send\n  (send\n    (lvar :node) :children) :map) flatten uniq ","(send\n  (send\n    (lvar :node) :children) :map) flatten ","node children map ","node children "," firstpos ","(send\n  (send\n    (lvar :node) :children) :flat_map) uniq ","node children flat_map ","(send\n  (send\n    (lvar :node) :children) :flat_map) tap "]}," ActionDispatch Journey GTG Builder firstpos":{"type":"method","name":"firstpos","children":[],"call":[" raise ","unknown firstpos: %s % ","node class name ","node class "," nullable? "," firstpos ","node left ","(send\n  (send\n    (lvar :node) :children) :map) flatten uniq ","(send\n  (send\n    (lvar :node) :children) :map) flatten ","node children map ","node children "," firstpos | ","node right ","(send\n  (send\n    (lvar :node) :children) :flat_map) uniq ","node children flat_map ","(send\n  (send\n    (lvar :node) :children) :flat_map) tap "]}," ActionDispatch Journey GTG Builder nullable?":{"type":"method","name":"nullable?","children":[],"call":[" raise ","unknown nullable: %s % ","node class name ","node class "," nullable? ","node left ","node left ! ","node right ","node children any? ","node children ","node regexp match? ","node regexp "]}," ActionDispatch Journey GTG Builder transition_table":{"type":"method","name":"transition_table","children":[],"call":["dstates << ","dtrans add_accepting ","state_id [] ","dtrans add_memo ","accepting_state memo ","accepting each "," followpos include? "," followpos ","ps find_all ","u include? ","dtrans []= ","state memo ","ps each ","Object  new ","u uniq == ","u uniq ","u empty? ","(send\n  (lvar :ps) :map) flatten ","ps map ","(send\n  (lvar :s) :group_by) each "," symbol ","s group_by ","marked []= ","marked [] ","dstates shift ","dstates empty? "," firstpos "," root ","h []= ","h length ","Hash  new ","TransitionTable  new ","ps flat_map ","@followpos [] include? ","@followpos [] ","pos == ","u all? ","(send\n  (const nil :Hash) :new) compare_by_identity "," compare_by_identity ","(send\n  (lvar :ps) :flat_map) uniq ","ddstates shift tatedstates shift  << ","dtrandstates shift  add_accepting ","TransitionTable  new  add_accepting ","dstates shift tate_id [] ","(send\n  (const nil :Hash) :new) compare_by_identity  [] ","dtrandstates shift  add_memo ","TransitionTable  new  add_memo ","accepting_dstates shift tate memo "," followpos incl(send\n  (lvar :ps) :map) flatten de? "," followpos incl(send\n  (lvar :ps) :flat_map) uniq de? "," followpodstates shift  include? "," followpodstates shift  ","pdstates shift  find_all ","(send\n  (lvar :ps) :map) flatten  incl(send\n  (lvar :ps) :map) flatten de? ","(send\n  (lvar :ps) :flat_map) uniq  incl(send\n  (lvar :ps) :flat_map) uniq de? ","dtrandstates shift  []= ","TransitionTable  new  []= ","dstates shift tate memo ","pdstates shift  each ","(send\n  (lvar :ps) :map) flatten  (send\n  (lvar :ps) :map) flatten niq == ","(send\n  (lvar :ps) :flat_map) uniq  (send\n  (lvar :ps) :flat_map) uniq niq == ","(send\n  (lvar :ps) :map) flatten  (send\n  (lvar :ps) :map) flatten niq ","(send\n  (lvar :ps) :flat_map) uniq  (send\n  (lvar :ps) :flat_map) uniq niq ","(send\n  (lvar :ps) :map) flatten  empty? ","(send\n  (lvar :ps) :flat_map) uniq  empty? ","(dstates shift end\n  (lvar :pdstates shift ) :map) flatten ","pdstates shift  map ","(send\n  (lvar :s) :gro(send\n  (lvar :ps) :map) flatten p_by) each ","(send\n  (lvar :s) :gro(send\n  (lvar :ps) :flat_map) uniq p_by) each ","(dstates shift end\n  (lvar :dstates shift ) :group_by) each "," dstates shift ymbol ","s gro(send\n  (lvar :ps) :map) flatten p_by ","s gro(send\n  (lvar :ps) :flat_map) uniq p_by ","dstates shift  group_by "," compare_by_identity  []= "," compare_by_identity  [] ","ddstates shift tatedstates shift  dstates shift hift ","ddstates shift tatedstates shift  empty? "," firdstates shift tpodstates shift  ","Hadstates shift h  new ","Trandstates shift itionTable  new ","pdstates shift  flat_map ","@followpos [] incl(send\n  (lvar :ps) :map) flatten de? ","@followpos [] incl(send\n  (lvar :ps) :flat_map) uniq de? ","@followpodstates shift  [] include? ","@followpodstates shift  [] ","podstates shift  == ","(send\n  (lvar :ps) :map) flatten  all? ","(send\n  (lvar :ps) :flat_map) uniq  all? ","(dstates shift end\n  (condstates shift t nil :Hadstates shift h) :new) compare_by_identity ","(send\n  (lvar :ps) :flat_map) (send\n  (lvar :ps) :map) flatten niq ","(send\n  (lvar :ps) :flat_map) (send\n  (lvar :ps) :flat_map) uniq niq ","(dstates shift end\n  (lvar :pdstates shift ) :flat_map) uniq "]}," ActionDispatch Journey GTG Builder initialize":{"type":"method","name":"initialize","children":[],"call":["Nodes Cat  new "," build_followpos "]}," ActionDispatch Journey Formatter cache":{"type":"method","name":"cache","children":[],"call":[" build_cache "]}," ActionDispatch Journey Formatter build_cache":{"type":"method","name":"build_cache","children":[],"call":["(or-asgn\n  (send\n    (lvar :leaf) :[]\n    (sym :___routes))\n  (array)) << ","leaf [] ","h [] ","route required_defaults inject ","route required_defaults "," routes each_with_index "," routes "," routes routes each_with_index "," routes routes "]}," ActionDispatch Journey Formatter verify_required_parts!":{"type":"method","name":"verify_required_parts!","children":[],"call":[" missing_keys empty? "," missing_keys "]}," ActionDispatch Journey Formatter possibles":{"type":"method","name":"possibles","children":[],"call":["(send\n  (lvar :cache) :fetch\n  (sym :___routes)) + ","(send\n  (block\n    (send\n      (lvar :options) :find_all)\n    (args\n      (arg :pair))\n    (send\n      (lvar :cache) :key?\n      (lvar :pair))) :map) flatten "," possibles ","depth + ","cache [] ","(send\n  (lvar :options) :find_all) map ","cache key? ","options find_all ","cache fetch ","(send\n  (lvar :options) :find_all) flat_map "]}," ActionDispatch Journey Formatter missing_keys":{"type":"method","name":"missing_keys","children":[],"call":["missing_keys << ","parts [] ","(str \"\\\\A\") === ","tests [] ","tests key? ","route required_parts each ","route required_parts ","route path requirements ","route path ","RegexCaseComparator DEFAULT_REGEX  === ","(str \"\\\\A\") match? ! ","(str \"\\\\A\") match? ","parts [] nil? ","tests [] match? ","route path requirements_for_missing_keys_check ","route path requirements  [] ","route path requirements_for_missing_keys_check  [] ","route path requirements  key? ","route path requirements_for_missing_keys_check  key? ","route path requirements  [] match? ","route path requirements_for_missing_keys_check  [] match? "]}," ActionDispatch Journey Formatter non_recursive":{"type":"method","name":"non_recursive","children":[],"call":["stack << ","c [] ","c key? ","options each ","routes concat ","stack shift ","stack any? ","queue << ","queue shift ","queue any? ","stastack shift k << ","staqueue shift k << ","stack shift  [] ","queue shift  [] ","stack shift  key? ","queue shift  key? ","options eastack shift h ","options eaqueue shift h ","routes stack shift onstack shift at ","routes queue shift onqueue shift at ","stastack shift k shift ","staqueue shift k shift ","stastack shift k any? ","staqueue shift k any? "]}," ActionDispatch Journey Formatter match_route":{"type":"method","name":"match_route","children":[],"call":["(send\n  (send\n    (lvar :hash) :[]\n    (lvar :score)) :sort_by) each ","hash [] sort_by ","hash [] ","score < ","hash keys sort reverse_each ","hash keys sort ","hash keys ","r score ","routes group_by "," non_recursive ","options to_a "," cache "," named_routes [] "," named_routes "," named_routes key? ","ActiveSupport Deprecation  warn ","(str \"                    You are trying to generate the URL for a named route called\\n\") squish ","name inspect ","warned ! ","h []= ","k to_s ","options each_with_object "," non_recursive  group_by "," named_ non_recursive  [] "," named_ non_recursive  "," named_ non_recursive  key? "]}," ActionDispatch Journey Formatter named_routes":{"type":"method","name":"named_routes","children":[],"call":[" routes named_routes "," routes "]}," ActionDispatch Journey Formatter extract_parameterized_parts":{"type":"method","name":"extract_parameterized_parts","children":[],"call":["parameterized_parts keep_if ","parameterized_parts []= ","parameterize call ","parameterized_parts each ","parameterized_parts delete ","(send\n  (send\n    (lvar :parameterized_parts) :keys) :-\n  (lvar :keys_to_keep)) each ","parameterized_parts keys - ","parameterized_parts keys ","(send\n  (send\n    (send\n      (lvar :route) :parts) :reverse) :drop_while) | ","route required_parts ","(or\n  (send\n    (lvar :options) :[]\n    (lvar :part))\n  (send\n    (lvar :recall) :[]\n    (lvar :part))) nil? ","recall [] ","options [] ","options key? ! ","options key? ","route parts reverse drop_while ","route parts reverse ","route parts ","recall merge ","keys_to_keep include? ! ","keys_to_keep include? ","parameterized_parts delete_if ","(send\n  (send\n    (send\n      (lvar :route) :parts) :reverse_each) :drop_while) | ","route parts reverse_each drop_while ","route parts reverse_each ","(or\n  (send\n    (lvar :options) :key?\n    (lvar :part))\n  (send\n    (send\n      (lvar :route) :scope_options) :key?\n    (lvar :part))) ! ","route scope_options key? ","route scope_options ","v to_param ","k == ","parameterized_parts compact! ","recall [] nil? ","options [] nil? ","recall merge  keep_if ","recall merge  []= ","recall merge  each ","recall merge  delete ","(send\n  (send\n    (lvar :parameterized_parts) :keys) :-\n  (lvar :(send\n  (send\n    (send\n      (lvar :route) :parts) :reverse) :drop_while) | )) each ","(send\n  (send\n    (lvar :parameterized_parts) :keys) :-\n  (lvar :(send\n  (send\n    (send\n      (lvar :route) :parts) :reverse_each) :drop_while) | )) each ","(send\n  (send\n    (lvar :recall merge ) :keys) :-\n  (lvar :keys_to_keep)) each ","recall merge  keys - ","recall merge  keys ","(send\n  (send\n    (send\n      (lvar :route) :parts) :reverse) :drop_while) |  include? ! ","(send\n  (send\n    (send\n      (lvar :route) :parts) :reverse_each) :drop_while) |  include? ! ","(send\n  (send\n    (send\n      (lvar :route) :parts) :reverse) :drop_while) |  include? ","(send\n  (send\n    (send\n      (lvar :route) :parts) :reverse_each) :drop_while) |  include? ","recall merge  delete_if ","recall merge  compact! "]}," ActionDispatch Journey Formatter clear":{"type":"method","name":"clear","children":[],"call":[]}," ActionDispatch Journey Formatter generate":{"type":"method","name":"generate","children":[],"call":[" raise ","message << ","missing_keys inspect ","constraints inspect ","route format ","route defaults key? ","route defaults ","parameterized_parts key? ","options dup delete_if ","options dup ","missing_keys empty? "," missing_keys ","route parts empty? ","route parts ","route requirements empty? ","route requirements ","name ! "," extract_parameterized_parts "," match_route ","recall merge ","route dispatcher? ","missing_keys sort inspect ","missing_keys sort ","Hash  [] inspect ","Hash  [] ","constraints sort ","required_parts include? ! ","required_parts include? ","value to_s == ","defaults [] to_s ","defaults [] ","value to_s ","parameterized_parts delete_if ","route required_parts ","path_parameters merge ","k to_s ","constraints sort_by ","missing_keys empty? ! ","parameterized_parts delete ","parameterized_parts [] to_s != ","parameterized_parts [] to_s ","parameterized_parts [] ","parameterized_parts [] present? ","defaults [] nil? ","route parts reverse_each ","value to_s != ","value present? ","parameterized_parts keep_if ","unmatched_keys sort inspect ","unmatched_keys sort ","unmatched_keys empty? ! ","unmatched_keys empty? ","(or\n  (lvar :missing_keys)\n  (array)) - ","(or\n  (lvar :missing_keys)\n  (array)) & ","constraints keys ","(str \"No route matches \") dup ","(str \"No route matches \") +@ ","MissingRoute  new "," routes ","RouteWithParams  new ","original_options key? ! ","original_options key? ","path_params key? ","options delete_if ","path_params merge ","options delete ","(str \"No route matches \") dup  << ","(str \"No route matches \") +@  << "," missing_keys  inspect ","(or\n  (lvar :missing_keys)\n  (array)) -  inspect ","recall merge  inspect ","path_parameters merge  inspect ","route route defaults  key? ","route route defaults  "," extract_parameterized_parts  key? ","path_params merge  dup delete_if ","path_params merge  dup "," missing_keys  empty? ","(or\n  (lvar :missing_keys)\n  (array)) -  empty? ","  missing_keys  "," (or\n  (lvar :missing_keys)\n  (array)) -  "," extract_ extract_parameterized_parts  "," missing_keys  sort inspect ","(or\n  (lvar :missing_keys)\n  (array)) -  sort inspect "," missing_keys  sort ","(or\n  (lvar :missing_keys)\n  (array)) -  sort ","recall merge  sort ","path_parameters merge  sort ","route required_parts  include? ! ","route required_parts  include? ","route defaults  [] to_s ","route defaults  [] "," extract_parameterized_parts  delete_if ","route route required_parts  ","recall merge  sort_by ","path_parameters merge  sort_by "," missing_keys  empty? ! ","(or\n  (lvar :missing_keys)\n  (array)) -  empty? ! "," extract_parameterized_parts  delete "," extract_parameterized_parts  [] to_s != "," extract_parameterized_parts  [] to_s "," extract_parameterized_parts  [] "," extract_parameterized_parts  [] present? ","route defaults  [] nil? "," extract_parameterized_parts  keep_if ","(or\n  (lvar :missing_keys)\n  (array)) &  sort inspect ","(or\n  (lvar :missing_keys)\n  (array)) &  sort ","(or\n  (lvar :missing_keys)\n  (array)) &  empty? ! ","(or\n  (lvar :missing_keys)\n  (array)) &  empty? ","(or\n  (lvar : missing_keys )\n  (array)) - ","(or\n  (lvar :(or\n  (lvar :missing_keys)\n  (array)) - )\n  (array)) - ","(or\n  (lvar : missing_keys )\n  (array)) & ","(or\n  (lvar :(or\n  (lvar :missing_keys)\n  (array)) - )\n  (array)) & ","recall merge  keys ","path_parameters merge  keys ","original_path_params merge  key? ! ","options dup  key? ! ","original_path_params merge  key? ","options dup  key? ","path_params merge  delete_if ","path_params merge  delete "]}," ActionDispatch Journey Formatter initialize":{"type":"method","name":"initialize","children":[],"call":[]}," ActionDispatch Http URL initialize":{"type":"method","name":"initialize","children":[],"call":[]}," ActionDispatch Http URL normalize_port":{"type":"method","name":"normalize_port","children":[],"call":["options [] ","options [] to_i == ","options [] to_i ","options [] == ","options [] nil? ","port to_i == ","port to_i "]}," ActionDispatch Http URL normalize_host":{"type":"method","name":"normalize_host","children":[],"call":["host << "," extract_domain ","options [] ","host empty? ","options [] to_param ","options [] present? "," extract_subdomain to_param "," extract_subdomain ","options key? ! ","options key? ","options [] == "," same_host? "," named_host? ! "," named_host? "," extract_domain_from ","subdomain to_param "," extract_subdomains_from join "," extract_subdomains_from ","domain nil? ","subdomain == ","options fetch "," dup "," +@ "," dup  << "," +@  << "," extract_options []  "," dup  empty? "," +@  empty? "," extract_suboptions []  to_param "," extract_options fetch  to_param "," extract_suboptions []  "," extract_options fetch  "," same_ dup ? "," same_ +@ ? "," named_ dup ? ! "," named_ +@ ? ! "," named_ dup ? "," named_ +@ ? "," extract_options [] _from ","suboptions []  to_param ","options fetch  to_param "," extract_suboptions [] s_from join "," extract_options fetch s_from join "," extract_suboptions [] s_from "," extract_options fetch s_from ","options []  nil? ","suboptions []  == ","options fetch  == "]}," ActionDispatch Http URL normalize_protocol":{"type":"method","name":"normalize_protocol","children":[],"call":[" raise ","options [] inspect ","options [] ","protocol inspect "," secure_protocol "]}," ActionDispatch Http URL same_host?":{"type":"method","name":"same_host?","children":[],"call":["options [] nil? ","options [] ","options key? ! ","options key? ","options [] == "]}," ActionDispatch Http URL build_host_url":{"type":"method","name":"build_host_url","children":[],"call":["result << ","options [] "," rewrite_authentication ","options []= "," normalize_port "," normalize_host "," normalize_protocol ","match [] ","options key? ","options [] == ","options [] match "," raise ","options [] blank? ","options delete "," host_or_subdomain_and_domain ","result match ","result concat ","Rack Utils  escape ","protocol dup ","protocol == ","host match ","protocol dup  << "," normalize_match []  "," normalize_ normalize_host  "," normalize_ normalize_protocol  ","options [] match  [] ","host match  [] ","options [] options [] match  ","options [] host match  ","  normalize_host _or_subdomain_and_domain "," match [] _or_subdomain_and_domain ","result options [] match  ","result host match  ","protocol dup  match ","protocol dup  concat "," normalize_protocol  dup "," normalize_protocol  == ","host options [] match  ","host host match  "," normalize_host  match ","match []  match "]}," ActionDispatch Http Upload normalize_encode_params":{"type":"method","name":"normalize_encode_params","children":[],"call":["UploadedFile  new ","value has_key? ","Hash  === "]}," ActionDispatch Http UploadedFile eof?":{"type":"method","name":"eof?","children":[],"call":["@tempfile eof? "]}," ActionDispatch Http UploadedFile close":{"type":"method","name":"close","children":[],"call":["@tempfile close "]}," ActionDispatch Response rack_response":{"type":"method","name":"rack_response","children":[],"call":["header delete ","NO_CONTENT_CODES  include? ","header []= ","header [] join ","header [] ","header [] respond_to? "," handle_conditional_get! "," assign_default_content_type_and_charset! ","(int 204) include? ","Rack BodyProxy  new "," remove_content_type! "," no_content_type ","RackBody  new "]}," ActionDispatch Response append_charset?":{"type":"method","name":"append_charset?","children":[],"call":["@charset != ","@sending_file ! "]}," ActionDispatch Response munge_body_object":{"type":"method","name":"munge_body_object","children":[],"call":["body respond_to? "]}," ActionDispatch Response build_buffer":{"type":"method","name":"build_buffer","children":[],"call":["Buffer  new "]}," ActionDispatch Response merge_default_headers":{"type":"method","name":"merge_default_headers","children":[],"call":["default merge ","default respond_to? "]}," ActionDispatch Response content_type=":{"type":"method","name":"content_type=","children":[],"call":["content_type to_s "," set_content_type "," class default_charset "," class ","header_info charset "," parse_content_type ","new_header_info mime_type ","prev_header_info mime_type ","prev_header_info charset ","new_header_info charset "," parsed_content_type_header "," parse_content_type  charset ","new_ parse_content_type  mime_type "," parse_content_type  mime_type ","prev_ parse_content_type  mime_type "," parsed_content_type_header  mime_type ","prev_ parse_content_type  charset "," parsed_content_type_header  charset ","new_ parse_content_type  charset "]}," ActionDispatch Response committed?":{"type":"method","name":"committed?","children":[],"call":[" synchronize "]}," ActionDispatch Response commit!":{"type":"method","name":"commit!","children":[],"call":["@cv broadcast "," synchronize "," before_committed "]}," ActionDispatch Response await_commit":{"type":"method","name":"await_commit","children":[],"call":["@cv wait_until "," synchronize "]}," ActionDispatch Response Buffer closed?":{"type":"method","name":"closed?","children":[],"call":[]}," ActionDispatch Response Buffer close":{"type":"method","name":"close","children":[],"call":["@response commit! "]}," ActionDispatch Response Buffer each":{"type":"method","name":"each","children":[],"call":["@buf each ","@response sent! ","@response sending! "," each_chunk "," enum_for "," block_given? "]}," ActionDispatch Response Buffer write":{"type":"method","name":"write","children":[],"call":["@buf push ","@response commit! "," raise "," closed? "]}," ActionDispatch Response Buffer initialize":{"type":"method","name":"initialize","children":[],"call":[]}," ActionDispatch Request patch?":{"type":"method","name":"patch?","children":[],"call":["HTTP_METHOD_LOOKUP  [] == ","HTTP_METHOD_LOOKUP  [] "," request_method "]}," ActionDispatch Request initialize":{"type":"method","name":"initialize","children":[],"call":[]}," ActionDispatch Http Parameters normalize_encode_params":{"type":"method","name":"normalize_encode_params","children":[],"call":["new_hash with_indifferent_access ","new_hash []= "," normalize_encode_params ","v map! ","k dup force_encoding encode! ","k dup force_encoding ","k dup ","k is_a? ","params each ","params is_a? ! ","params is_a? ","params force_encoding encode! ","params force_encoding ","(send\n  (lvar :params) :each_with_object\n  (hash)) with_indifferent_access ","val map! ","val is_a? ","key dup force_encoding encode! ","key dup force_encoding ","key dup ","key is_a? ","params each_with_object ","UploadedFile  new ","params has_key? "]}," ActionDispatch Http Parameters initialize":{"type":"method","name":"initialize","children":[],"call":[]}," ActionDispatch Http ParameterFilter CompiledFilter call":{"type":"method","name":"call","children":[],"call":["filtered_params []= ","b call "," blocks each "," blocks ","value dup ","value duplicable? ","key dup "," blocks any? "," call ","v is_a? ","value map ","value is_a? ","key =~ "," regexps any? "," regexps ","original_params each ","key duplicable? ","parents pop "," deep_regexps ","joined =~ "," deep_regexps any? ","parents join ","parents push ","original_params class new ","original_params class ","original_params class new  []= ","value dup  dup "," call  dup ","value dup  duplicable? "," call  duplicable? ","key dup  dup ","value dup  map "," call  map ","value dup  is_a? "," call  is_a? ","key dup  =~ ","key dup  duplicable? ","parents join  =~ "]}," ActionDispatch Http ParameterFilter CompiledFilter initialize":{"type":"method","name":"initialize","children":[],"call":["deep_regexps any? "]}," ActionDispatch Http ParameterFilter CompiledFilter compile":{"type":"method","name":"compile","children":[],"call":[]}," Mime NullType method_missing":{"type":"method","name":"method_missing","children":[],"call":["method to_s ends_with? ","method to_s ","method end_with? "]}," Mime NullType respond_to_missing?":{"type":"method","name":"respond_to_missing?","children":[],"call":["method to_s ends_with? ","method to_s ","method end_with? "]}," Mime NullType ref":{"type":"method","name":"ref","children":[],"call":[]}," Mime NullType nil?":{"type":"method","name":"nil?","children":[],"call":[]}," Mime Type respond_to_missing?":{"type":"method","name":"respond_to_missing?","children":[],"call":["method to_s ends_with? ","method to_s ","method end_with? "]}," Mime Type to_a":{"type":"method","name":"to_a","children":[],"call":[]}," Mime Type to_ary":{"type":"method","name":"to_ary","children":[],"call":[]}," Mime Type browser_generated_types":{"type":"method","name":"browser_generated_types","children":[],"call":[]}," Mime Type parse_trailing_star":{"type":"method","name":"parse_trailing_star","children":[],"call":[" parse_data_with_trailing_star ","accept_header =~ "]}," Mime Type register_callback":{"type":"method","name":"register_callback","children":[],"call":["@register_callbacks << "]}," Mime Type AcceptList exchange_xml_items":{"type":"method","name":"exchange_xml_items","children":[],"call":[" app_xml_idx "," text_xml_idx "," app_xml "," text_xml "," []= "]}," Mime Type AcceptList app_xml":{"type":"method","name":"app_xml","children":[],"call":[" [] "," app_xml_idx "]}," Mime Type AcceptList text_xml":{"type":"method","name":"text_xml","children":[],"call":[" [] "," text_xml_idx "]}," Mime Type AcceptList app_xml_idx":{"type":"method","name":"app_xml_idx","children":[],"call":[" index ","Mime XML  to_s ","Mime  [] to_s ","Mime  [] "]}," Mime Type AcceptList text_xml_idx":{"type":"method","name":"text_xml_idx","children":[],"call":[" index "]}," Mime Type AcceptList assort!":{"type":"method","name":"assort!","children":[],"call":[" to_a ","(send nil :map!) uniq! ","Mime Type  lookup ","i name "," map! "," app_xml "," [] "," []= "," app_xml_idx ","type name ends_with? ","type name ","type q < "," app_xml q ","type q ","idx < "," length "," text_xml name= ","Mime XML  to_s "," text_xml "," text_xml_idx "," delete_at "," exchange_xml_items "," app_xml_idx > "," app_xml q= ","(send\n  (send nil :text_xml) :q) max "," text_xml q "," sort! ","Mime  [] to_s ","Mime  [] "," app_xml_ app_xml_idx  "," []  name ends_with? "," []  name "," []  q < "," []  q "," app_xml_idx  < "," text_xml_ app_xml_idx  "," app_xml_ app_xml_idx  > "]}," Mime fetch":{"type":"method","name":"fetch","children":[],"call":["EXTENSION_LOOKUP  fetch ","type to_s ","type is_a? "]}," ActionDispatch Http MimeNegotiation formats=":{"type":"method","name":"formats=","children":[],"call":["@env []= ","Mime Type  lookup_by_extension ","extensions collect "," parameters []= ","extensions first to_s ","extensions first "," parameters "," set_header "]}," ActionDispatch Http Headers merge!":{"type":"method","name":"merge!","children":[],"call":[" []= "," env_name ","headers_or_env each ","@req set_header "]}," ActionDispatch Http Headers merge":{"type":"method","name":"merge","children":[],"call":["headers merge! ","Http Headers  new "," env dup "," env ","@req dup headers ","@req dup ","Http Headers  new  merge! ","@req dup headers  merge! ","@req dup Http Headers  new  ","@req dup @req dup headers  "]}," ActionDispatch Http Headers each":{"type":"method","name":"each","children":[],"call":["@env each ","@headers each ","@req each_header "]}," ActionDispatch Http Headers fetch":{"type":"method","name":"fetch","children":[],"call":["@env fetch "," env_name ","@headers fetch "," raise "," block_given? ","default == ","@req fetch_header "]}," ActionDispatch Http Headers key?":{"type":"method","name":"key?","children":[],"call":["@env key? ","@headers key? "," env_name ","@req has_header? "]}," ActionDispatch Http Headers []=":{"type":"method","name":"[]=","children":[],"call":["@env []= "," env_name ","@headers []= ","@req set_header "]}," ActionDispatch Http FilterRedirect location_filter_match?":{"type":"method","name":"location_filter_match?","children":[],"call":[" location match "," location ","Regexp  === "," location include? ","String  === "," location_filter any? "," location_filter ","filters any? "," location =~ "," location_filters any? "," location_filters "," location match? "]}," ActionDispatch Http FilterRedirect location_filter":{"type":"method","name":"location_filter","children":[],"call":[" request env [] "," request env "," request "," request present? "]}," ActionDispatch Http FilterRedirect filtered_location":{"type":"method","name":"filtered_location","children":[],"call":[" location "," location_filter_match? "," location_filter empty? ! "," location_filter empty? "," location_filter ","filters empty? ! ","filters empty? "," location_filter  empty? ! "," location_filter  empty? "]}," ActionDispatch Http FilterParameters initialize":{"type":"method","name":"initialize","children":[],"call":[]}," ActionDispatch Http Cache Response cache_control_headers":{"type":"method","name":"cache_control_headers","children":[],"call":["cache_control [] << ","cache_control [] ","cache_control []= ","key to_sym ","directive tr ","SPECIAL_KEYS  include? ","segment split "," cache_control_segments each "," cache_control_segments ","SPESHUL_KEYS  include? ","directive to_sym ","directive tr! ","directive tr  to_sym "]}," ActionDispatch Http Cache Response cache_control_segments":{"type":"method","name":"cache_control_segments","children":[],"call":["cache_control delete split ","cache_control delete "," [] "," _cache_control "," []  delete split "," _cache_control  delete split "," []  delete "," _cache_control  delete "," _ []  "," _ _cache_control  "]}," ActionDispatch Http Cache Response date=":{"type":"method","name":"date=","children":[],"call":[" headers []= ","utc_time httpdate "," headers "," set_header "]}," ActionDispatch Http Cache Response date?":{"type":"method","name":"date?","children":[],"call":[" headers include? "," headers "," has_header? "]}," ActionDispatch Http Cache Response date":{"type":"method","name":"date","children":[],"call":["Time  httpdate "," headers [] "," headers "," get_header "]}," ActionDispatch Http Cache Request if_none_match_etags":{"type":"method","name":"if_none_match_etags","children":[],"call":["etag gsub ","(if\n  (send nil :if_none_match)\n  (send\n    (send nil :if_none_match) :split\n    (regexp\n      (str \"\\\\s*,\\\\s*\")\n      (regopt)))\n  (array)) collect "," if_none_match split "," if_none_match "," if_none_match split each "]}," ActionController eager_load!":{"type":"method","name":"eager_load!","children":[],"call":[]}," ActionController TestCase Behavior handle_old_process_api":{"type":"method","name":"handle_old_process_api","children":[],"call":["args last ","args last is_a? ","args unshift ","ActiveSupport Deprecation  warn ","http_method is_a? ","args last  is_a? "]}," ActionController TestCase Behavior check_required_ivars":{"type":"method","name":"check_required_ivars","children":[],"call":[" raise "," instance_variable_get nil? "," instance_variable_get "," instance_variable_defined? ! "," instance_variable_defined? ","(sym :@routes) each "]}," ActionController TestCase Behavior build_response":{"type":"method","name":"build_response","children":[],"call":["TestResponse  new ","klass new ","klass create "]}," ActionController TestCase Behavior build_request":{"type":"method","name":"build_request","children":[],"call":["TestRequest  new "]}," ActionController TestCase Behavior patch":{"type":"method","name":"patch","children":[],"call":[" process "," process_with_kwargs "]}," ActionController TestSession load!":{"type":"method","name":"load!","children":[],"call":[]}," ActionController TestSession destroy":{"type":"method","name":"destroy","children":[],"call":[" clear "]}," ActionController TestSession values":{"type":"method","name":"values","children":[],"call":["@data values "]}," ActionController TestSession keys":{"type":"method","name":"keys","children":[],"call":["@data keys "]}," ActionController TestRequest default_env":{"type":"method","name":"default_env","children":[],"call":[]}," ActionController Railties Helpers inherited":{"type":"method","name":"inherited","children":[],"call":["klass helper ","ActionController Base  include_all_helpers ","klass superclass == ","klass superclass ","klass helpers_path= ","ActionController Helpers  helpers_path ","namespace railtie_helpers_paths ","m respond_to? ","klass parents detect ","klass parents ","klass respond_to? ","klass module_parents detect ","klass module_parents ","namespace railtie_helpers_ActionController Helpers  helpers_path  ","namespace railtie_helpers_namespace railtie_helpers_paths  "]}," ActionController ModelNaming model_name_from_record_or_class":{"type":"method","name":"model_name_from_record_or_class","children":[],"call":["(if\n  (send\n    (lvar :record_or_class) :is_a?\n    (const nil :Class))\n  (lvar :record_or_class)\n  (send\n    (send nil :convert_to_model\n      (lvar :record_or_class)) :class)) model_name "," convert_to_model class "," convert_to_model ","record_or_class is_a? "," convert_to_model model_name "]}," ActionController ModelNaming convert_to_model":{"type":"method","name":"convert_to_model","children":[],"call":["object to_model ","object respond_to? "]}," ActionController Testing Functional recycle!":{"type":"method","name":"recycle!","children":[],"call":[" params= "," formats= "," response_body= "]}," ActionController Testing Functional set_response!":{"type":"method","name":"set_response!","children":[],"call":[]}," ActionController StrongParameters params=":{"type":"method","name":"params=","children":[],"call":["Parameters  new ","value is_a? "]}," ActionController StrongParameters params":{"type":"method","name":"params","children":[],"call":["Parameters  new "," request parameters "," request "," request filtered_parameters "," action_name "," class name "," class "]}," ActionController Parameters hash_filter":{"type":"method","name":"hash_filter","children":[],"call":["params []= ","element permit ","Array  wrap ","filter [] "," class new "," class ","element respond_to? ","element is_a? "," each_element "," array_of_permitted_scalars_filter ","filter [] == "," slice each "," slice ","filter keys ","filter with_indifferent_access "," non_scalar? "," array_of_permitted_scalars? "," [] "," has_key? "," permit_any_in_parameters ","value is_a? "," class new  permit ","filter with_indifferent_access  [] "," class new  respond_to? "," class new  is_a? "," each_ class new  "," array_of_permitted_scalars_filter with_indifferent_access  ","filter with_indifferent_access  [] == ","filter with_indifferent_access  keys ","filter with_indifferent_access  with_indifferent_access "]}," ActionController Parameters array_of_permitted_scalars_filter":{"type":"method","name":"array_of_permitted_scalars_filter","children":[],"call":["params []= "," [] "," array_of_permitted_scalars? "," has_key? "]}," ActionController Parameters array_of_permitted_scalars?":{"type":"method","name":"array_of_permitted_scalars?","children":[],"call":[" permitted_scalar? ","value all? ","value is_a? "]}," ActionController Parameters permitted_scalar_filter":{"type":"method","name":"permitted_scalar_filter","children":[],"call":["params []= "," [] "," permitted_scalar? "," keys grep ","Regexp  escape "," keys "," has_key? ","$~ pre_match == ","$~ pre_match ","key =~ "," each_key ","permitted_key to_s ","permitted_key to_s  to_s "]}," ActionController Parameters permitted_scalar?":{"type":"method","name":"permitted_scalar?","children":[],"call":["value is_a? ","PERMITTED_SCALAR_TYPES  any? "]}," ActionController Parameters unpermitted_keys":{"type":"method","name":"unpermitted_keys","children":[],"call":[" keys - - "," keys - ","params keys "," keys "," always_permitted_parameters "]}," ActionController Parameters unpermitted_parameters!":{"type":"method","name":"unpermitted_parameters!","children":[],"call":[" raise ","ActionController UnpermittedParameters  new ","ActiveSupport Notifications  instrument "," class action_on_unpermitted_parameters "," class ","unpermitted_keys any? "," unpermitted_keys ","ActionController Base  logger debug ","unpermitted_keys join ","ActionController Base  logger "," unpermitted_keys  any? ","  unpermitted_keys  "," unpermitted_keys  join "]}," ActionController Parameters each_element":{"type":"method","name":"each_element","children":[],"call":["hash []= ","object each ","object class new ","object class ","k =~ ","object keys all? ","object keys ","object is_a? ","(send\n  (lvar :object) :map) compact ","object map "," fields_for_style? ","object fields_for_style? ","(send\n  (send\n    (lvar :object) :grep\n    (const nil :Parameters)) :map) compact ","object grep map ","object grep ","object each_nested_attribute ","object nested_attributes? "," specify_numeric_keys? ! "," specify_numeric_keys? ","object grep filter_map ","object class new  []= "]}," ActionController Parameters convert_hashes_to_parameters":{"type":"method","name":"convert_hashes_to_parameters","children":[],"call":[" []= "," class new "," class ","value is_a? ! ","value is_a? ","converted equal? ! ","converted equal? "," convert_value_to_parameters ","@parameters []= "," convert_value_to_parameters  equal? ! "," convert_value_to_parameters  equal? "]}," ActionController Parameters dup":{"type":"method","name":"dup","children":[],"call":["duplicate instance_variable_set "," tap ","duplicate permitted= "]}," ActionController Parameters slice":{"type":"method","name":"slice","children":[],"call":["new_instance instance_variable_set "," class new tap "," class new "," class ","new_instance permitted= "," new_instance_with_inherited_permitted_status ","@parameters slice "]}," ActionController Parameters fetch":{"type":"method","name":"fetch","children":[],"call":[" raise ","ActionController ParameterMissing  new "," convert_hashes_to_parameters ","value permit! "," permitted? "," class new "," class ","value is_a? "," convert_value_to_parameters ","args fetch "," block_given? ","@parameters fetch ","@parameters keys "," class new  permit! "," class new  is_a? "," convert_ class new _to_parameters "]}," ActionController Parameters []":{"type":"method","name":"[]","children":[],"call":[" convert_hashes_to_parameters ","@parameters [] "]}," ActionController Parameters permit":{"type":"method","name":"permit","children":[],"call":["params permit! "," unpermitted_parameters! "," class action_on_unpermitted_parameters "," class "," hash_filter "," permitted_scalar_filter ","filters flatten each ","filters flatten "," class new "," class new  permit! "]}," ActionController Parameters require":{"type":"method","name":"require","children":[],"call":[" raise ","ParameterMissing  new "," [] presence "," [] ","value == ","value present? "," require ","key map ","key is_a? ","@parameters keys "," []  == "," []  present? "]}," ActionController Parameters permit!":{"type":"method","name":"permit!","children":[],"call":[" [] permit! "," [] "," [] respond_to? "," convert_hashes_to_parameters "," each_pair ","_ permit! ","_ respond_to? ","Array  wrap each ","Array  wrap ","v permit! ","v respond_to? ","Array  wrap flatten each ","Array  wrap flatten "]}," ActionController Parameters permitted?":{"type":"method","name":"permitted?","children":[],"call":[]}," ActionController Parameters initialize":{"type":"method","name":"initialize","children":[],"call":[" class permit_all_parameters "," class ","parameters with_indifferent_access "," raise ","key class ","key is_a? ","parameters each_key "]}," ActionController UnpermittedParameters initialize":{"type":"method","name":"initialize","children":[],"call":["params join ","params size > ","params size ","(send\n  (lvar :params) :map) join ","params map "]}," ActionController ParameterMissing initialize":{"type":"method","name":"initialize","children":[],"call":[]}," ActionController RequestForgeryProtection ProtectionMethods Exception handle_unverified_request":{"type":"method","name":"handle_unverified_request","children":[],"call":[" raise "," warning_message "]}," ActionController RequestForgeryProtection ProtectionMethods Exception initialize":{"type":"method","name":"initialize","children":[],"call":[]}," ActionController RequestForgeryProtection ProtectionMethods ResetSession handle_unverified_request":{"type":"method","name":"handle_unverified_request","children":[],"call":["@controller reset_session "]}," ActionController RequestForgeryProtection ProtectionMethods ResetSession initialize":{"type":"method","name":"initialize","children":[],"call":[]}," ActionController RequestForgeryProtection ProtectionMethods NullSession NullCookieJar write":{"type":"method","name":"write","children":[],"call":[]}," ActionController RequestForgeryProtection ProtectionMethods NullSession NullCookieJar build":{"type":"method","name":"build","children":[],"call":[]}," ActionController RequestForgeryProtection ProtectionMethods NullSession NullSessionHash exists?":{"type":"method","name":"exists?","children":[],"call":[]}," ActionController RequestForgeryProtection ProtectionMethods NullSession NullSessionHash initialize":{"type":"method","name":"initialize","children":[],"call":[]}," ActionController RequestForgeryProtection ProtectionMethods NullSession handle_unverified_request":{"type":"method","name":"handle_unverified_request","children":[],"call":["request env []= ","NullCookieJar  build ","request env ","request session= ","NullSessionHash  new ","@controller request ","request cookie_jar= ","request session_options= ","request flash= ","@controller request  env []= ","@controller request  env ","@controller request  session= ","@controller @controller request  ","@controller request  cookie_jar= ","@controller request  session_options= ","@controller request  flash= "]}," ActionController RequestForgeryProtection ProtectionMethods NullSession initialize":{"type":"method","name":"initialize","children":[],"call":[]}," ActionController RequestForgeryProtection ClassMethods protection_method_class":{"type":"method","name":"protection_method_class","children":[],"call":[" raise ","ActionController RequestForgeryProtection ProtectionMethods  const_get ","name to_s classify ","name to_s "]}," ActionController RackDelegation set_response!":{"type":"method","name":"set_response!","children":[],"call":["@_response request= ","ActionDispatch Response  new ","ActionDispatch Response  new  request= "]}," ActionController ParamsWrapper ClassMethods _set_wrapper_options":{"type":"method","name":"_set_wrapper_options","children":[],"call":[" _wrapper_options= ","Options  from_hash "]}," ActionController ParamsWrapper Options _default_wrap_model":{"type":"method","name":"_default_wrap_model","children":[],"call":["namespaces join ","namespaces last == ","namespaces last ","namespaces delete_at ","model_name split ","model_name safe_constantize "," klass name sub classify "," klass name sub "," klass name "," klass "," klass anonymous? "," klass name delete_suffix classify "," klass name delete_suffix ","model_name split  join ","model_name split  last == ","model_name split  last ","model_name split  delete_at ","namespaces join  split "," klass name sub classify  split "," klass name delete_suffix classify  split ","namespaces join  safe_constantize "," klass name sub classify  safe_constantize "," klass name delete_suffix classify  safe_constantize "]}," ActionController ParamsWrapper Options name":{"type":"method","name":"name","children":[],"call":[" name= "," klass controller_name singularize "," klass controller_name "," klass ","m to_s demodulize underscore ","m to_s demodulize ","m to_s "," klass anonymous? "," synchronize "," model "," na model e= "," klass controller_na model e singularize "," klass controller_na model e "," model  to_s de model odulize underscore "," model  to_s de model odulize "," model  to_s "," klass anony model ous? ","  model odel "]}," ActionController ParamsWrapper Options include":{"type":"method","name":"include","children":[],"call":[" include= ","m attribute_names ","m attribute_names any? ","m respond_to? "," exclude "," synchronize "," model ","m attribute_names + ","m stored_attributes values flatten map ","m stored_attributes values flatten ","m stored_attributes values ","m stored_attributes ","m stored_attributes empty? ! ","m stored_attributes empty? "," include ","key to_s concat ","key to_s ","m nested_attributes_options keys map ","m nested_attributes_options keys ","m nested_attributes_options ","m nested_attributes_options keys any? ","key to_s dup concat ","key to_s dup ","(send\n  (send\n    (lvar :key) :to_s) :+@) concat ","key to_s +@ ","m attribute_aliases keys ","m attribute_aliases ","m attribute_aliases any? "," model  attribute_na model es "," model  attribute_na model es any? "," model  respond_to? ","  model odel "," model  attribute_na model es + "," model  stored_attributes values flatten  model ap "," model  stored_attributes values flatten "," model  stored_attributes values "," model  stored_attributes "," model  stored_attributes e model pty? ! "," model  stored_attributes e model pty? "," model  nested_attributes_options keys  model ap "," model  nested_attributes_options keys "," model  nested_attributes_options "," model  nested_attributes_options keys any? "," model  attribute_aliases keys "," model  attribute_aliases "," model  attribute_aliases any? "]}," ActionController ParamsWrapper Options model":{"type":"method","name":"model","children":[],"call":[" model= "," _default_wrap_model "," synchronize "]}," ActionController ParamsWrapper Options initialize":{"type":"method","name":"initialize","children":[],"call":[]}," ActionController ParamsWrapper Options from_hash":{"type":"method","name":"from_hash","children":[],"call":[]}," ActionController Live set_response!":{"type":"method","name":"set_response!","children":[],"call":["@_response request= ","Live Response  new ","request env [] == ","request env [] ","request env ","Live Response  new  request= "]}," ActionController Live response_body=":{"type":"method","name":"response_body=","children":[],"call":[" response stream close "," response stream "," response "," response close "]}," ActionController Live log_error":{"type":"method","name":"log_error","children":[],"call":["logger fatal ","message << << ","exception backtrace join ","exception backtrace ","message << ","exception annoted_source_code to_s ","exception annoted_source_code ","exception respond_to? ","exception message ","exception class ","ActionController Base  logger ","(str \"\\n\") dup ","exception annotated_source_code to_s ","exception annotated_source_code ","(str \"\\n\") +@ ","ActionController Base  logger  fatal ","(str \"\\n\") dup  << << ","(str \"\\n\") +@  << << ","(str \"\\n\") dup  << ","(str \"\\n\") +@  << ","exception (str \"\\n\") dup  ","exception (str \"\\n\") +@  ","ActionController Base  ActionController Base  logger  "]}," ActionController Live process":{"type":"method","name":"process","children":[],"call":["@_response await_commit ","@_response commit! ","@_response stream close ","@_response stream "," log_error ","@_response stream call_on_error ","@_response stream write ","ActionView Base  streaming_completion_on_exception "," request format == "," request format "," request ","t2 []= ","locals each ","t2 abort_on_exception= ","Thread  current ","Thread  new ","t1 [] ","t1 keys map ","t1 keys "," raise ","@_response committed? ","@_response status= ","e class == ","e class ","ActiveSupport Dependencies  interlock permit_concurrent_loads ","ActiveSupport Dependencies  interlock ","ActiveSupport Dependencies  interlock running "," new_controller_thread ","ActiveSupport IsolatedExecutionState  share_with ","Thread  current  []= ","Thread  current  abort_on_exception= ","Thread  current  [] ","Thread  current  keys map ","Thread  current  keys "]}," ActionController Live Response handle_conditional_get!":{"type":"method","name":"handle_conditional_get!","children":[],"call":[" committed? "]}," ActionController Live Response merge_default_headers":{"type":"method","name":"merge_default_headers","children":[],"call":["Header  new "]}," ActionController Live Response build_buffer":{"type":"method","name":"build_buffer","children":[],"call":["buf write ","body each ","Live Buffer  new ","Live Buffer  new  write "]}," ActionController Live Response commit!":{"type":"method","name":"commit!","children":[],"call":[" headers freeze "," headers "]}," ActionController Live Response Header to_hash":{"type":"method","name":"to_hash","children":[],"call":[" __getobj__ dup "," __getobj__ "]}," ActionController Live Response Header merge":{"type":"method","name":"merge","children":[],"call":[" class new "," __getobj__ merge "," __getobj__ "," class "]}," ActionController Live Response Header []=":{"type":"method","name":"[]=","children":[],"call":[" raise ","@response committed? "]}," ActionController Live Response Header initialize":{"type":"method","name":"initialize","children":[],"call":[]}," ActionController Live Buffer call_on_error":{"type":"method","name":"call_on_error","children":[],"call":["@error_callback call "]}," ActionController Live Buffer on_error":{"type":"method","name":"on_error","children":[],"call":[]}," ActionController Live Buffer close":{"type":"method","name":"close","children":[],"call":["@buf push ","@cv broadcast "," synchronize "]}," ActionController Live Buffer each":{"type":"method","name":"each","children":[],"call":["@buf pop ","@response sent! ","@response sending! "]}," ActionController Live Buffer write":{"type":"method","name":"write","children":[],"call":["@response headers delete ","@response headers ","@response headers []= ","@response committed? "," raise ","@buf clear "," connected? ","@response delete_header ","@response set_header ","@response headers [] "]}," ActionController Live Buffer initialize":{"type":"method","name":"initialize","children":[],"call":["SizedQueue  new "," new_cond "," lambda "," build_queue "," class queue_size "," class "]}," ActionController HttpAuthentication Token raw_params":{"type":"method","name":"raw_params","children":[],"call":["auth sub split ","auth sub ","_raw_params []= ","_raw_params first ","(send\n  (send\n    (lvar :_raw_params) :first) :=~\n  (regexp\n    (str \"\\\\A\")\n    (begin\n      (const nil :TOKEN_KEY))\n    (regopt))) ! ","_raw_params first =~ ","_raw_params first start_with? ! ","_raw_params first start_with? ","(send\n  (lvar :_raw_params) :first) ! ","_raw_params reject! ","auth sub split  []= ","auth sub split  first ","(send\n  (send\n    (lvar :auth sub split ) :first) :=~\n  (regexp\n    (str \"\\\\A\")\n    (begin\n      (const nil :TOKEN_KEY))\n    (regopt))) ! ","auth sub split  first =~ ","auth sub split  first start_with? ! ","auth sub split  first start_with? ","(send\n  (lvar :auth sub split ) :first) ! ","auth sub split  reject! "]}," ActionController HttpAuthentication Token rewrite_param_values":{"type":"method","name":"rewrite_param_values","children":[],"call":["param last gsub! ","param last ","array_params each ","(or\n  (send\n    (lvar :param) :[]\n    (int 1))\n  (str \"\")) gsub! ","param [] ","(or\n  (send\n    (lvar :param) :[]\n    (int 1))\n  (send\n    (str \"\") :dup)) gsub! "," dup ","(or\n  (send\n    (lvar :param) :[]\n    (int 1))\n  (send\n    (str \"\") :+@)) gsub! "," +@ "]}," ActionController HttpAuthentication Token params_array_from":{"type":"method","name":"params_array_from","children":[],"call":["param split ","raw_params map "]}," ActionController HttpAuthentication Token token_params_from":{"type":"method","name":"token_params_from","children":[],"call":[" rewrite_param_values "," params_array_from "," raw_params "]}," ActionController Head include_content?":{"type":"method","name":"include_content?","children":[],"call":[]}," ActionController ForceSSL force_ssl_redirect":{"type":"method","name":"force_ssl_redirect","children":[],"call":[" redirect_to ","options slice "," flash keep "," flash "," respond_to? ","ActionDispatch Http URL  url_for ","options merge! ","host_or_options is_a? "," request fullpath "," request "," request host "," request ssl? ","redirect_options merge! "," request query_parameters ","options []= "," request respond_to? "]}," ActionController Flash ClassMethods add_flash_types":{"type":"method","name":"add_flash_types","children":[],"call":[" _flash_types << "," _flash_types "," helper_method "," request flash [] "," request flash "," request "," define_method "," _flash_types include? ","types each "," respond_to? "]}," ActionController BadRequest initialize":{"type":"method","name":"initialize","children":[],"call":[" set_backtrace ","e backtrace ","e message ","$! backtrace ","ActiveSupport Deprecation  warn "," caller "]}," ActionController ConditionalGet combine_etags":{"type":"method","name":"combine_etags","children":[],"call":["(send\n  (send nil :etaggers) :map) compact "," instance_exec "," etaggers map "," etaggers ","etags unshift ","options [] ","(lvar :validator) compact ","(send\n  (send nil :etaggers) :map) compact  unshift "]}," ActionController ConditionalGet ClassMethods etag":{"type":"method","name":"etag","children":[],"call":[" etaggers "]}," ActionController LogSubscriber unpermitted_parameters":{"type":"method","name":"unpermitted_parameters","children":[],"call":[" debug ","unpermitted_keys join ","event payload [] ","event payload ","unpermitted_keys size > ","unpermitted_keys size ","(send\n  (lvar :unpermitted_keys) :map) join ","unpermitted_keys map "," color ","(send\n  (send\n    (send\n      (lvar :event) :payload) :[]\n    (sym :context)) :map) join ","event payload [] map ","event payload []  join ","event payload []  size > ","event payload []  size ","(send\n  (lvar :event payload [] ) :map) join ","event payload []  map ","(send\n  (send\n    (send\n      (lvar :event) :payload) :[]\n    (sym :(send\n  (send\n    (send\n      (lvar :event) :payload) :[]\n    (sym :context)) :map) join )) :map) join "]}," ActionController Caching view_cache_dependencies":{"type":"method","name":"view_cache_dependencies","children":[],"call":["(send\n  (send\n    (send\n      (self) :class) :_view_cache_dependencies) :map) compact "," instance_exec "," class _view_cache_dependencies map "," class _view_cache_dependencies "," class "]}," ActionController Caching ClassMethods view_cache_dependency":{"type":"method","name":"view_cache_dependency","children":[],"call":[" _view_cache_dependencies "]}," ActionController Caching page_cache_extension":{"type":"method","name":"page_cache_extension","children":[],"call":[]}," ActionController Caching page_cache_extension=":{"type":"method","name":"page_cache_extension=","children":[],"call":[]}," AbstractController Layouts _conditional_layout?":{"type":"method","name":"_conditional_layout?","children":[],"call":[]}," AbstractController Layouts ClassMethods LayoutConditions _conditional_layout?":{"type":"method","name":"_conditional_layout?","children":[],"call":["except include? ! ","except include? "," action_name ","conditions [] ","only include? "," _layout_conditions ","conditions []  include? ! ","conditions []  include? "," _layout_conditions  [] "," _layout_ _layout_conditions  "]}," AbstractController Helpers ClassMethods MissingHelperError initialize":{"type":"method","name":"initialize","children":[],"call":["Missing helper file helpers/%s.rb % "," set_backtrace ","error backtrace "," raise ","error path =~ ","error path "]}," AbstractController Callbacks ClassMethods skip_action_callback":{"type":"method","name":"skip_action_callback","children":[],"call":[" skip_around_action "," skip_after_action "," skip_before_action ","ActiveSupport Deprecation  warn "]}," AbstractController Callbacks ClassMethods _normalize_callback_option":{"type":"method","name":"_normalize_callback_option","children":[],"call":["options []= "," Array << "," Array ","options [] ","(send\n  (send nil :Array\n    (lvar :from)) :map) join "," Array map "," Array unshift ","_from include? ","c action_name "," proc "," Array map to_set ","options delete ","ActionFilter  new ","(send\n  (send nil :Array\n    (lvar :(send\n  (send nil :Array\n    (lvar :from)) :map) join )) :map) join ","(send\n  (send nil :Array\n    (lvar :options [] )) :map) join ","(send\n  (send nil :Array\n    (lvar :options delete )) :map) join ","(send\n  (send nil :Array\n    (lvar :ActionFilter  new )) :map) join ","_(send\n  (send nil :Array\n    (lvar :from)) :map) join  include? ","_options []  include? ","_options delete  include? ","_ActionFilter  new  include? "," Array map to_set  include? "]}," ActionDispatch Integration RequestHelpers options":{"type":"method","name":"options","children":[],"call":[" process "]}," ActionDispatch Routing RouteSet NamedRouteCollection UrlHelper OptimizedUrlHelper string_route":{"type":"method","name":"string_route","children":[],"call":["string_route gsub! ","route ast to_s dup ","route ast to_s ","route ast ","route ast to_s dup  gsub! "]}," ActionDispatch Routing Mapper Mapping normalize_format!":{"type":"method","name":"normalize_format!","children":[],"call":[" options delete "," options "," options [] == "," options [] "," options []= ","@defaults []= ","@requirements []= ","Regexp  compile ","String  === ","Regexp  === ","@requirements [] ","formatted == "]}," ActionDispatch Session UpgradeSignatureToEncryptionCookieStore signed_using_old_secret_cookie_jar":{"type":"method","name":"signed_using_old_secret_cookie_jar","children":[],"call":["request cookie_jar signed_using_old_secret ","request cookie_jar ","ActionDispatch Request  new ","ActionDispatch Request  new  cookie_jar signed_using_old_secret ","ActionDispatch Request  new  cookie_jar "]}," ActionDispatch Session UpgradeSignatureToEncryptionCookieStore get_cookie":{"type":"method","name":"get_cookie","children":[],"call":[" cookie_jar [] "," cookie_jar "," signed_using_old_secret_cookie_jar [] "," signed_using_old_secret_cookie_jar "]}," ActionDispatch Session EncryptedCookieStore cookie_jar":{"type":"method","name":"cookie_jar","children":[],"call":["request cookie_jar encrypted ","request cookie_jar ","ActionDispatch Request  new ","ActionDispatch Request  new  cookie_jar encrypted ","ActionDispatch Request  new  cookie_jar "]}," ActionDispatch Cookies EncryptedCookieJar method_missing":{"type":"method","name":"method_missing","children":[],"call":["ActiveSupport Deprecation  warn ","(begin\n  (lvar :method)) + "]}," ActionDispatch Cookies EncryptedCookieJar encrypted":{"type":"method","name":"encrypted","children":[],"call":["EncryptedCookieJar  new "]}," ActionDispatch Cookies EncryptedCookieJar signed":{"type":"method","name":"signed","children":[],"call":["SignedCookieJar  new "]}," ActionDispatch Cookies EncryptedCookieJar permanent":{"type":"method","name":"permanent","children":[],"call":["PermanentCookieJar  new "]}," ActionDispatch Cookies SignedCookieJar encrypted":{"type":"method","name":"encrypted","children":[],"call":["EncryptedCookieJar  new "]}," ActionDispatch Cookies SignedCookieJar signed":{"type":"method","name":"signed","children":[],"call":["SignedCookieJar  new "]}," ActionDispatch Cookies SignedCookieJar permanent":{"type":"method","name":"permanent","children":[],"call":["PermanentCookieJar  new "]}," ActionDispatch Cookies PermanentCookieJar encrypted":{"type":"method","name":"encrypted","children":[],"call":["EncryptedCookieJar  new "]}," ActionDispatch Cookies PermanentCookieJar permanent":{"type":"method","name":"permanent","children":[],"call":["PermanentCookieJar  new "]}," ActionDispatch Cookies CookieJar encrypted":{"type":"method","name":"encrypted","children":[],"call":["EncryptedCookieJar  new "]}," ActionDispatch Cookies CookieJar signed_using_old_secret":{"type":"method","name":"signed_using_old_secret","children":[],"call":["SignedCookieJar  new ","ActiveSupport DummyKeyGenerator  new ","@options [] "]}," ActionDispatch Http Headers cgi_name":{"type":"method","name":"cgi_name","children":[],"call":["k upcase gsub ","k upcase "]}," ActionController TestCase Behavior options":{"type":"method","name":"options","children":[],"call":[" process "]}," ActionView Digestor compute_and_store_digest":{"type":"method","name":"compute_and_store_digest","children":[],"call":["@@cache delete_pair ","stored_digest ! ","@@cache []= ","ActionView Resolver  caching? ","klass new digest ","klass new ","@@cache put_if_absent nil? ","@@cache put_if_absent ","name include? ","options [] ","stored_klass new digest  ! ","klass new klass new digest  "]}," ActionDispatch Routing RouteSet NamedRouteCollection UrlHelper OptimizedUrlHelper raise_generation_error":{"type":"method","name":"raise_generation_error","children":[],"call":[" raise ","message << ","missing_keys inspect ","Hash  [] inspect ","Hash  [] ","parts << ","missing_keys << ","parameterized_arg empty? ","parameterized_arg nil? ","arg to_param ","@path_parts zip ","missing_keys sort inspect ","missing_keys sort ","constraints inspect ","@route requirements merge sort ","@route requirements merge ","@route requirements ","k to_s ","@route requirements merge sort_by "," parameterize_args ","(str \"No route matches \") dup ","(str \"No route matches \") +@ ","(str \"No route matches \") dup  << ","(str \"No route matches \") +@  << ","arg to_param  empty? ","arg to_param  nil? ","Hash  []  inspect "]}," ActionDispatch Routing Redirect relative_path?":{"type":"method","name":"relative_path?","children":[],"call":["path [] != ","path [] ","path empty? ! ","path empty? ","path start_with? ! ","path start_with? "]}," ActionDispatch Routing Mapper Base has_named_route?":{"type":"method","name":"has_named_route?","children":[],"call":["@set named_routes routes [] ","name to_sym ","@set named_routes routes ","@set named_routes ","@set named_routes key? "]}," ActionDispatch Journey Route dispatcher?":{"type":"method","name":"dispatcher?","children":[],"call":["@app dispatcher? "]}," ActionDispatch Journey GTG TransitionTable states_hash_for":{"type":"method","name":"states_hash_for","children":[],"call":[" raise ","unknown symbol: %s % ","sym class ","sym == "]}," ActionController Parameters fields_for_style?":{"type":"method","name":"fields_for_style?","children":[],"call":["v is_a? ","k =~ ","object all? ","object is_a? ","@parameters all? "]}," ActionView Helpers Tags CollectionCheckBoxes hidden_field":{"type":"method","name":"hidden_field","children":[],"call":["@template_object hidden_field_tag "," tag_name "," tag_name_with_index ","@options [] ","@options has_key? ","@html_options [] "]}," ActionView Helpers NumberHelper escape_units":{"type":"method","name":"escape_units","children":[],"call":["Hash  [] ","ERB Util  html_escape ","units map "]}," ActionView Helpers NumberHelper escape_unsafe_options":{"type":"method","name":"escape_unsafe_options","children":[],"call":["options []= "," escape_units ","options [] ","Hash  === ","ERB Util  html_escape ","options [] html_safe? ! ","options [] html_safe? "]}," ActionDispatch Routing RouteSet NamedRouteCollection UrlHelper OptimizedUrlHelper missing_keys":{"type":"method","name":"missing_keys","children":[],"call":["(send\n  (lvar :args) :select) keys ","arg empty? ","arg nil? ","args select "]}," ActionDispatch Routing RouteSet NamedRouteCollection UrlHelper OptimizedUrlHelper parameterize_args":{"type":"method","name":"parameterize_args","children":[],"call":["@required_parts zip ","args map ","params []= ","value empty? ","value nil? ","args [] to_param ","args [] ","@required_parts [] ","@arg_size times ","args [] to_param  empty? ","args [] to_param  nil? "]}," ActionDispatch Routing RouteSet NamedRouteCollection UrlHelper OptimizedUrlHelper replace_segment":{"type":"method","name":"replace_segment","children":[],"call":["@klass escape_fragment ","params [] ","Symbol  === ","@klass escape_segment "]}," ActionDispatch Routing Mapper Resources shallow_scope":{"type":"method","name":"shallow_scope","children":[],"call":["@scope []= "," scope ","@scope [] ","@scope parent ","@scope new ","@scope parent  []= ","@scope new  []= ","@scope parent  [] ","@scope new  [] ","@scope parent  parent ","@scope new  parent ","@scope parent  new ","@scope new  new "]}," ActionDispatch Routing Mapper Resources shallow_nesting_depth":{"type":"method","name":"shallow_nesting_depth","children":[],"call":["@nesting select size ","@nesting select ","node frame [] shallow? ","node frame [] ","node frame ","(send\n  (ivar :@scope) :find_all) count ","@scope find_all "]}," ActionDispatch Routing Mapper Resources nesting_depth":{"type":"method","name":"nesting_depth","children":[],"call":["@nesting size "]}," ActionDispatch Routing Mapper Resources nested_scope?":{"type":"method","name":"nested_scope?","children":[],"call":["@scope [] == ","@scope [] ","@scope nested? "]}," ActionDispatch Routing Mapper Resources Resource shallow?":{"type":"method","name":"shallow?","children":[],"call":[]}," ActionDispatch Routing Mapper Resources Resource shallow=":{"type":"method","name":"shallow=","children":[],"call":[]}," ActionDispatch Journey Visitors OptimizedPath visit_STAR":{"type":"method","name":"visit_STAR","children":[],"call":[" visit ","node left "]}," ActionDispatch Journey Visitors OptimizedPath visit_SYMBOL":{"type":"method","name":"visit_SYMBOL","children":[],"call":["node left [] to_sym ","node left [] ","node left "]}," ActionDispatch Journey Visitors OptimizedPath visit_CAT":{"type":"method","name":"visit_CAT","children":[],"call":["(send nil :visit\n  (send\n    (lvar :node) :left)) flatten "," visit ","node right ","node left "]}," ActionDispatch Journey Visitors OptimizedPath accept":{"type":"method","name":"accept","children":[],"call":[" Array "," visit "]}," ActionDispatch Http URL add_trailing_slash":{"type":"method","name":"add_trailing_slash","children":[],"call":["path sub! ","path include? ! ","path include? "]}," ActionDispatch Response _status_code":{"type":"method","name":"_status_code","children":[],"call":[]}," ActionController Metal _status_code":{"type":"method","name":"_status_code","children":[],"call":[]}," ActionController Parameters convert_value_to_parameters":{"type":"method","name":"convert_value_to_parameters","children":[],"call":[" class new "," class ","value is_a? ! ","value is_a? "," converted_arrays << "," converted_arrays "," convert_value_to_parameters ","value map "," converted_arrays member? ! "," converted_arrays member? ","converted dup "]}," ActionController Parameters converted_arrays":{"type":"method","name":"converted_arrays","children":[],"call":["Set  new "]}," ActionController RequestForgeryProtection ProtectionMethods NullSession NullSessionHash destroy":{"type":"method","name":"destroy","children":[],"call":[]}," ActionController ParamsWrapper _extract_parameters":{"type":"method","name":"_extract_parameters","children":[],"call":["parameters except ","exclude + "," _wrapper_options exclude "," _wrapper_options ","parameters slice "," _wrapper_options include "," _wrapper_options exclude + "," _wrapper_options exclude +  + "," _wrapper_options  _wrapper_options exclude +  "," _wrapper_options  _wrapper_options exclude +  + "]}," ActionView PartialRenderer raise_invalid_option_as":{"type":"method","name":"raise_invalid_option_as","children":[],"call":[" raise ","ArgumentError  new ","OPTION_AS_ERROR_MESSAGE  % "]}," ActionPack gem_version":{"type":"method","name":"gem_version","children":[],"call":[]}," ActionDispatch Routing RouteSet Generator normalize_action!":{"type":"method","name":"normalize_action!","children":[],"call":["@recall []= ","@options delete ","@options [] == ","@options [] ","index freeze "]}," ActionDispatch Routing RouteSet Generator normalize_recall!":{"type":"method","name":"normalize_recall!","children":[],"call":["@recall [] "]}," ActionDispatch Routing PathRedirect interpolation_required?":{"type":"method","name":"interpolation_required?","children":[],"call":["string match ","params empty? ! ","params empty? "]}," ActionDispatch Routing Redirect escape_path":{"type":"method","name":"escape_path","children":[],"call":["Hash  [] ","Journey Router Utils  escape_path ","params map ","params transform_values "]}," ActionDispatch Routing Redirect escape_fragment":{"type":"method","name":"escape_fragment","children":[],"call":["Hash  [] ","Journey Router Utils  escape_fragment ","params map ","params transform_values "]}," ActionDispatch Routing Redirect escape":{"type":"method","name":"escape","children":[],"call":["Hash  [] ","Rack Utils  escape ","params map ","params transform_values "]}," ActionDispatch Request Utils deep_munge":{"type":"method","name":"deep_munge","children":[],"call":["keys pop "," deep_munge ","ActiveSupport Notifications  instrument ","hash []= ","v empty? ","v compact! ","v grep ","keys << ","hash each "," perform_deep_munge "]}," ActionDispatch Request Session fetch":{"type":"method","name":"fetch","children":[],"call":["@delegate fetch ","key to_s ","default == "," load_for_read! "]}," ActionDispatch Flash FlashHash stringify_array":{"type":"method","name":"stringify_array","children":[],"call":["item to_s ","item kind_of? ","array map "]}," ActionDispatch Cookies SerializedCookieJars serializer":{"type":"method","name":"serializer","children":[],"call":["@options [] "," request cookies_serializer "," request ","ActiveSupport Messages SerializerWithFallback  [] "]}," ActionDispatch Cookies SerializedCookieJars deserialize":{"type":"method","name":"deserialize","children":[],"call":[" serializer load "," serializer "," []= ","Marshal  load tap ","Marshal  load "," needs_migration? "," lambda "," serializer load tap "]}," ActionDispatch Cookies SerializedCookieJars serialize":{"type":"method","name":"serialize","children":[],"call":[" serializer dump "," serializer "]}," ActionDispatch Cookies SerializedCookieJars needs_migration?":{"type":"method","name":"needs_migration?","children":[],"call":["value start_with? ","@options [] == ","@options [] "," request cookies_serializer == "," request cookies_serializer "," request "]}," ActionDispatch Cookies NullSerializer dump":{"type":"method","name":"dump","children":[],"call":[]}," ActionDispatch Cookies NullSerializer load":{"type":"method","name":"load","children":[],"call":[]}," ActionDispatch Cookies JsonSerializer dump":{"type":"method","name":"dump","children":[],"call":[]}," ActionDispatch Cookies JsonSerializer load":{"type":"method","name":"load","children":[],"call":[]}," ActionDispatch Cookies CookieJar commit!":{"type":"method","name":"commit!","children":[],"call":["@delete_cookies freeze ","@set_cookies freeze "]}," ActionDispatch Cookies CookieJar committed?":{"type":"method","name":"committed?","children":[],"call":[]}," ActionDispatch Journey Visitors Formatter visit_CAT":{"type":"method","name":"visit_CAT","children":[],"call":["(lvar :left) join ","(and\n  (lvar :right)\n  (lvar :left)) ! "," visit ","node right ","node left ","(lvar : visit ) join ","(and\n  (lvar : visit )\n  (lvar :left)) ! ","(and\n  (lvar :right)\n  (lvar : visit )) ! ","node  visit  "]}," ActionDispatch Journey Visitors Formatter visit":{"type":"method","name":"visit","children":[],"call":[" visit_SYMBOL "," visit_CAT "," visit ","node left ","node type ","node to_sym "," visit_STAR "]}," ActionDispatch Journey GTG TransitionTable as_json":{"type":"method","name":"as_json","children":[],"call":["simple_regexp [] []= ","re source ","simple_regexp [] ","hash each ","@regexp_states each ","h []= ","Hash  new "]}," ActionDispatch Response before_sending":{"type":"method","name":"before_sending","children":[],"call":[" request commit_cookie_jar! "," request "," committed? "," headers freeze "," headers "," commit! ","@request commit_cookie_jar! "]}," ActionDispatch Response before_committed":{"type":"method","name":"before_committed","children":[],"call":[" handle_no_content! "," handle_conditional_get! "," assign_default_content_type_and_charset! "," committed? "," merge_and_normalize_cache_control! "]}," ActionDispatch Response sent?":{"type":"method","name":"sent?","children":[],"call":[" synchronize "]}," ActionDispatch Response sending?":{"type":"method","name":"sending?","children":[],"call":[" synchronize "]}," ActionDispatch Response sent!":{"type":"method","name":"sent!","children":[],"call":["@cv broadcast "," synchronize "]}," ActionDispatch Response sending!":{"type":"method","name":"sending!","children":[],"call":["@cv broadcast "," before_sending "," synchronize "]}," ActionDispatch Response await_sent":{"type":"method","name":"await_sent","children":[],"call":["@cv wait_until "," synchronize "]}," ActionDispatch Http MimeNegotiation variant=":{"type":"method","name":"variant=","children":[],"call":[" raise ","variant class ","v is_a? ","variant all? ","variant any? ","variant is_a? ","variant nil? ","ActiveSupport ArrayInquirer  new "," Array "," Array  class "," Array  all? "," Array  any? "," Array  is_a? "," Array  nil? "]}," ActionController LiveTestResponse body":{"type":"method","name":"body","children":[],"call":[]}," ActionController LiveTestResponse recycle!":{"type":"method","name":"recycle!","children":[],"call":[" initialize "]}," ActionController Parameters permitted=":{"type":"method","name":"permitted=","children":[],"call":[]}," ActionController Responder has_renderer?":{"type":"method","name":"has_renderer?","children":[],"call":["Renderers RENDERERS  include? "," format "]}," ActionController RequestForgeryProtection non_xhr_javascript_response?":{"type":"method","name":"non_xhr_javascript_response?","children":[],"call":[" request xhr? ! "," request xhr? "," request "," content_type =~ "," content_type ","(str \"\\\\A(?:text|application)/javascript\") match? "," media_type "]}," ActionController RequestForgeryProtection marked_for_same_origin_verification?":{"type":"method","name":"marked_for_same_origin_verification?","children":[],"call":[]}," ActionController RequestForgeryProtection mark_for_same_origin_verification!":{"type":"method","name":"mark_for_same_origin_verification!","children":[],"call":[" request get? "," request "]}," ActionController RequestForgeryProtection verify_same_origin_request":{"type":"method","name":"verify_same_origin_request","children":[],"call":[" raise "," logger warn "," logger "," non_xhr_javascript_response? "," marked_for_same_origin_verification? "," log_warning_on_csrf_failure "]}," ActionController Rendering _any_render_format_is_nil?":{"type":"method","name":"_any_render_format_is_nil?","children":[],"call":["options [] nil? ","options [] ","options key? ","RENDER_FORMATS_IN_PRIORITY  any? "]}," ActionController Rendering _normalize_text":{"type":"method","name":"_normalize_text","children":[],"call":["options []= ","options [] to_text ","options [] ","options [] respond_to? ","options key? ","RENDER_FORMATS_IN_PRIORITY  each "]}," ActionController Rendering _process_format":{"type":"method","name":"_process_format","children":[],"call":["format to_s "," content_type "," content_type= ","options [] ","format nil? "," headers delete "," headers "]}," ActionController Rendering _render_in_priorities":{"type":"method","name":"_render_in_priorities","children":[],"call":["options [] ","options key? ","RENDER_FORMATS_IN_PRIORITY  each "]}," ActionController MissingRenderer initialize":{"type":"method","name":"initialize","children":[],"call":[]}," ActionController MimeResponds Collector VariantCollector variant":{"type":"method","name":"variant","children":[],"call":["@variants [] ","@variants key? ","@variant each ","(send\n  (send\n    (ivar :@variants) :keys) :&\n  (ivar :@variant)) any? ","@variants keys & ","@variants keys ","@variant nil? ","name nil? "," variant_key ","@variant empty? "]}," ActionController MimeResponds Collector VariantCollector method_missing":{"type":"method","name":"method_missing","children":[],"call":["@variants []= "," block_given? "]}," ActionController MimeResponds Collector VariantCollector any":{"type":"method","name":"any","children":[],"call":["@variants []= ","args each ","a == ","args none? ","args any? "," block_given? "]}," ActionController MimeResponds Collector VariantCollector initialize":{"type":"method","name":"initialize","children":[],"call":[]}," ActionController Live Response before_sending":{"type":"method","name":"before_sending","children":[],"call":[" headers freeze "," headers "," request cookie_jar commit! "," request cookie_jar "," request "]}," ActionController Live Response before_committed":{"type":"method","name":"before_committed","children":[],"call":["jar write "," committed? "," request cookie_jar "," request "," request cookie_jar  write "," request cookie_ request cookie_jar  "]}," ActionController Live Buffer await_close":{"type":"method","name":"await_close","children":[],"call":["@cv wait_until "," synchronize "]}," ActionController Live SSE perform_write":{"type":"method","name":"perform_write","children":[],"call":["@stream write ","current_options [] ","WHITELISTED_OPTIONS  each ","@options merge stringify_keys ","@options merge ","json gsub ","\ndata:  freeze ","\n freeze ","PERMITTED_OPTIONS  each ","@options merge stringify_keys  [] "]}," ActionController Live SSE write":{"type":"method","name":"write","children":[],"call":[" perform_write ","ActiveSupport JSON  encode "]}," ActionController Live SSE close":{"type":"method","name":"close","children":[],"call":["@stream close "]}," ActionController Live SSE initialize":{"type":"method","name":"initialize","children":[],"call":[]}," ActionController LogSubscriber deep_munge":{"type":"method","name":"deep_munge","children":[],"call":[" debug ","event payload [] join ","event payload [] ","event payload "]}," ActionController Base _protected_ivars":{"type":"method","name":"_protected_ivars","children":[],"call":[]}," AbstractController Rendering _protected_ivars":{"type":"method","name":"_protected_ivars","children":[],"call":[]}," AbstractController Rendering _process_format":{"type":"method","name":"_process_format","children":[],"call":[]}," AbstractController Rendering rendered_format":{"type":"method","name":"rendered_format","children":[],"call":["Mime  [] "]}," AbstractController Helpers MissingHelperError initialize":{"type":"method","name":"initialize","children":[],"call":[" raise ","Missing helper file helpers/%s.rb % ","error path =~ ","error path "," set_backtrace ","error backtrace ","(str \"^\") match? "]}," ActionDispatch Journey Router normalize_path":{"type":"method","name":"normalize_path","children":[],"call":["path squeeze! "]}," ActionController MimeResponds Collector VariantFilter method_missing":{"type":"method","name":"method_missing","children":[],"call":["@variant nil? ","name == "," block_given? "]}," ActionController MimeResponds Collector VariantFilter initialize":{"type":"method","name":"initialize","children":[],"call":[]}," ActionDispatch Response remove_content_type!":{"type":"method","name":"remove_content_type!","children":[],"call":[" headers delete "," headers "]}," ActionDispatch TestResponse merge_default_headers":{"type":"method","name":"merge_default_headers","children":[],"call":[]}," ActionDispatch ExceptionWrapper expand_backtrace":{"type":"method","name":"expand_backtrace","children":[],"call":["@exception backtrace unshift flatten! ","@exception backtrace unshift ","@exception to_s split ","@exception to_s ","@exception backtrace "]}," ActionDispatch Journey Visitors Formatter visit_STAR":{"type":"method","name":"visit_STAR","children":[],"call":[" escape_path "," options [] ","node to_sym "," options "]}," ActionDispatch Journey Visitors Formatter escape_segment":{"type":"method","name":"escape_segment","children":[],"call":["Router Utils  escape_segment "]}," ActionDispatch Journey Visitors Formatter escape_path":{"type":"method","name":"escape_path","children":[],"call":["Router Utils  escape_path "]}," ActionDispatch Journey Router Utils escape_segment":{"type":"method","name":"escape_segment","children":[],"call":[]}," ActionDispatch Journey Router Utils UriEncoder percent_encode":{"type":"method","name":"percent_encode","children":[],"call":["safe << ","DEC2HEX  [] ","unsafe each_byte ","EMPTY  dup ","EMPTY  dup  << ","unEMPTY  dup  each_byte "]}," ActionDispatch Journey Router Utils UriEncoder escape":{"type":"method","name":"escape","children":[],"call":["(send\n  (lvar :component) :gsub\n  (lvar :pattern)) force_encoding "," percent_encode ","component gsub "]}," ActionDispatch Journey Router Utils UriEncoder unescape_uri":{"type":"method","name":"unescape_uri","children":[],"call":["(send\n  (lvar :uri) :gsub\n  (const nil :ESCAPED)) force_encoding ","(send\n  (send\n    (back-ref :$&) :[]\n    (int 1)\n    (int 2)) :hex) pack ","$& [] hex ","$& [] ","uri gsub ","uri encoding ","uri encoding == ","(send\n  (send\n    (lvar :match) :[]\n    (int 1)\n    (int 2)) :hex) pack ","match [] hex ","match [] ","(send\n  (lvar :uri) :gsub\n  (const nil :ESCAPED)) force_uri encoding  ","uri uri encoding  ","uri uri encoding  == "]}," ActionDispatch Journey Router Utils UriEncoder escape_segment":{"type":"method","name":"escape_segment","children":[],"call":[" escape "]}," ActionDispatch Journey Router Utils UriEncoder escape_path":{"type":"method","name":"escape_path","children":[],"call":[" escape "]}," ActionDispatch Journey Router Utils UriEncoder escape_fragment":{"type":"method","name":"escape_fragment","children":[],"call":[" escape "]}," ActionDispatch Journey Route glob?":{"type":"method","name":"glob?","children":[],"call":[" path spec grep empty? ! "," path spec grep empty? "," path spec grep "," path spec "," path "," path spec any? "," path ast glob? "," path ast "]}," ActionController HttpAuthentication Basic auth_param":{"type":"method","name":"auth_param","children":[],"call":["request authorization split second ","request authorization split ","request authorization ","request authorization to_s split second ","request authorization to_s split ","request authorization to_s "]}," ActionController HttpAuthentication Basic auth_scheme":{"type":"method","name":"auth_scheme","children":[],"call":["request authorization split first ","request authorization split ","request authorization ","request authorization to_s split first ","request authorization to_s split ","request authorization to_s "]}," ActionController HttpAuthentication Basic has_basic_credentials?":{"type":"method","name":"has_basic_credentials?","children":[],"call":[" auth_scheme == "," auth_scheme ","request authorization present? ","request authorization "," auth_scheme downcase == "," auth_scheme downcase "," user_name_and_password length == "," user_name_and_password length "," user_name_and_password "]}," ActionDispatch Journey Routes empty?":{"type":"method","name":"empty?","children":[],"call":[" routes empty? "," routes "]}," ActionDispatch IntegrationTest document_root_element":{"type":"method","name":"document_root_element","children":[],"call":[" html_document root "," html_document "]}," ActionDispatch Integration Runner remove!":{"type":"method","name":"remove!","children":[],"call":[]}," ActionDispatch Integration Session build_full_uri":{"type":"method","name":"build_full_uri","children":[],"call":["env [] "]}," ActionDispatch Assertions html_document":{"type":"method","name":"html_document","children":[],"call":["Nokogiri HTML Document  parse ","@response body ","Nokogiri XML Document  parse ","@response content_type =~ ","@response content_type ","Nokogiri HTML DocumentFragment  parse ","@response content_type to_s =~ ","@response content_type to_s ","@response content_type === ","@response content_type to_s end_with? ","@response media_type to_s end_with? ","@response media_type to_s ","@response media_type ","Rails Dom Testing  html_document parse ","Rails Dom Testing  html_document "]}," ActionDispatch Routing UrlFor _generate_paths_by_default":{"type":"method","name":"_generate_paths_by_default","children":[],"call":[]}," ActionDispatch Routing RouteSet path_for":{"type":"method","name":"path_for","children":[],"call":[" url_for "]}," ActionDispatch Routing RouteSet find_script_name":{"type":"method","name":"find_script_name","children":[],"call":["options delete "," find_relative_url_root "," relative_url_root "]}," ActionDispatch Routing RouteSet dispatcher":{"type":"method","name":"dispatcher","children":[],"call":["Routing RouteSet Dispatcher  new "]}," ActionDispatch Routing RouteSet NamedRouteCollection UrlHelper deprecate_string_options":{"type":"method","name":"deprecate_string_options","children":[],"call":["options []= ","option to_sym ","options delete ","deprecated_string_options each ","ActiveSupport Deprecation  warn ","deprecated_string_options join ","deprecated_string_options any? ","options keys & ","options keys ","options keys &  each ","options keys &  join ","options keys &  any? "]}," ActionDispatch Routing RouteSet NamedRouteCollection path_helpers_module":{"type":"method","name":"path_helpers_module","children":[],"call":["ActiveSupport Deprecation  warn ","meth to_s sub ","meth to_s "," define_method ","helpers each "," include ","Module  new "]}," ActionDispatch Routing RouteSet NamedRouteCollection key?":{"type":"method","name":"key?","children":[],"call":[" routes key? ","name to_sym "," routes "]}," ActionDispatch Routing RouteSet NamedRouteCollection helpers":{"type":"method","name":"helpers","children":[],"call":["@path_helpers + ","ActiveSupport Deprecation  warn ","(str \"            `named_routes.helpers` is deprecated, please use `route_defined?(route_name)`\\n\") squish "]}," ActionDispatch Routing RouteSet NamedRouteCollection route_defined?":{"type":"method","name":"route_defined?","children":[],"call":["@url_helpers include? ","@path_helpers include? ","name to_sym "]}," ActionDispatch Routing RouteSet Dispatcher serve":{"type":"method","name":"serve","children":[],"call":[" dispatch ","req env ","params [] "," controller ","@defaults key? "," prepare_params! ","req path_parameters ","req check_path_parameters! "," raise ","controller make_response! ","req path_parameters  [] ","  controller  "," prepare_req path_parameters ! "," controller  make_response! ","controller make_controller make_response! ponse! "]}," ActionDispatch Routing RouteSet Dispatcher dispatcher?":{"type":"method","name":"dispatcher?","children":[],"call":[]}," ActionDispatch Routing Redirect serve":{"type":"method","name":"serve","children":[],"call":[" status ","body length to_s ","body length ","uri to_s ","ERB Util  unwrapped_html_escape ","req port ","uri port ","req standard_port? ","req host ","uri host ","req scheme ","uri scheme ","uri path= ","req script_name ","req script_name empty? ","uri path empty? ","uri path "," relative_path? ","URI  parse "," path ","req path_parameters ","req check_path_parameters! ","req commit_flash ","URI  parse  to_s ","URI  parse  port ","URI  parse  host ","URI  parse  scheme ","URI  parse  path= ","URI  parse  path empty? ","URI  parse  path "]}," ActionDispatch Routing Redirect redirect?":{"type":"method","name":"redirect?","children":[],"call":[]}," ActionDispatch Routing PolymorphicRoutes HelperMethodBuilder get_method_for_string":{"type":"method","name":"get_method_for_string","children":[],"call":[" prefix + "," suffix "," prefix "]}," ActionDispatch Routing PolymorphicRoutes HelperMethodBuilder get_method_for_class":{"type":"method","name":"get_method_for_class","children":[],"call":[" prefix + "," suffix "," prefix ","@key_strategy call ","klass model_name "," get_method_for_string ","klass model_@key_strategy call  "]}," ActionDispatch Routing PolymorphicRoutes HelperMethodBuilder handle_list":{"type":"method","name":"handle_list","children":[],"call":[" prefix + ","route join "," prefix ","route << "," suffix ","@key_strategy call ","record to_model model_name ","record to_model ","record to_model model_name singular_route_key ","args << ","record persisted? ","record model_name ","record to_s ","parent to_model model_name singular_route_key ","parent to_model model_name ","parent to_model ","parent model_name singular_route_key ","parent model_name ","parent to_s ","record_list map ","record_list pop ","list dup ","model model_name ","model model_name singular_route_key ","model persisted? "," raise ","record_list pop  to_model model_name ","record to_record to_model  record to_model _name ","record_list pop  to_model ","record to_record to_model  ","record_list pop  to_model model_name singular_route_key ","record to_record to_model  record to_model _name singular_route_key ","record_list pop  persisted? ","record_list pop  model_name ","record record to_model _name ","record_list pop  to_s ","parent to_record to_model  record to_model _name singular_route_key ","parent to_record to_model  record to_model _name ","parent to_record to_model  ","parent record to_model _name singular_route_key ","parent record to_model _name ","record_list pop _list map ","list dup  map ","record_list pop _list pop ","list dup  pop ","record to_model  record to_model _name ","record to_model  record to_model _name singular_route_key ","record to_model  persisted? "]}," ActionDispatch Routing PolymorphicRoutes HelperMethodBuilder handle_model_call":{"type":"method","name":"handle_model_call","children":[],"call":["target send "," handle_model ","mapping call "," suffix == "," suffix "," polymorphic_mapping ","target public_send "," polymorphic_mapping  call "," polymorphic_ polymorphic_mapping  "]}," ActionDispatch Routing PolymorphicRoutes HelperMethodBuilder handle_model":{"type":"method","name":"handle_model","children":[],"call":[" prefix + "," suffix "," prefix ","@key_strategy call ","model model_name ","model model_name singular_route_key ","args << ","record persisted? ","record to_model ","model persisted? "," get_method_for_class "," get_method_for_string ","model model_@key_strategy call  ","record to_model  record to_model _name ","model model_@key_strategy call  singular_route_key ","record to_model  record to_model _name singular_route_key ","record to_record to_model  ","record to_model  persisted? "]}," ActionDispatch Routing PolymorphicRoutes HelperMethodBuilder handle_class_call":{"type":"method","name":"handle_class_call","children":[],"call":["target send "," get_method_for_class ","target public_send "]}," ActionDispatch Routing PolymorphicRoutes HelperMethodBuilder handle_class":{"type":"method","name":"handle_class","children":[],"call":[" get_method_for_class "]}," ActionDispatch Routing PolymorphicRoutes HelperMethodBuilder handle_string_call":{"type":"method","name":"handle_string_call","children":[],"call":["target send "," get_method_for_string ","target public_send "]}," ActionDispatch Routing PolymorphicRoutes HelperMethodBuilder handle_string":{"type":"method","name":"handle_string","children":[],"call":[" get_method_for_string "]}," ActionDispatch Routing PolymorphicRoutes HelperMethodBuilder initialize":{"type":"method","name":"initialize","children":[],"call":[]}," ActionDispatch Routing PolymorphicRoutes HelperMethodBuilder polymorphic_method":{"type":"method","name":"polymorphic_method","children":[],"call":[]}," ActionDispatch Routing PolymorphicRoutes HelperMethodBuilder plural":{"type":"method","name":"plural","children":[],"call":[]}," ActionDispatch Routing PolymorphicRoutes HelperMethodBuilder singular":{"type":"method","name":"singular","children":[],"call":[]}," ActionDispatch Routing PolymorphicRoutes HelperMethodBuilder build":{"type":"method","name":"build","children":[],"call":[]}," ActionDispatch Routing PolymorphicRoutes HelperMethodBuilder path":{"type":"method","name":"path","children":[],"call":[]}," ActionDispatch Routing PolymorphicRoutes HelperMethodBuilder url":{"type":"method","name":"url","children":[],"call":[]}," ActionDispatch Routing PolymorphicRoutes HelperMethodBuilder get":{"type":"method","name":"get","children":[],"call":[]}," ActionDispatch Routing PolymorphicRoutes polymorphic_path_for_action":{"type":"method","name":"polymorphic_path_for_action","children":[],"call":[" polymorphic_path ","options merge ","options merge  merge "]}," ActionDispatch Routing PolymorphicRoutes polymorphic_url_for_action":{"type":"method","name":"polymorphic_url_for_action","children":[],"call":[" polymorphic_url ","options merge "]}," ActionDispatch Routing Mapper Scope []=":{"type":"method","name":"[]=","children":[],"call":["@hash []= "]}," ActionDispatch Routing Mapper Scope []":{"type":"method","name":"[]","children":[],"call":["@parent [] ","@hash fetch ","scope frame [] ","scope frame ","node frame key? ","node frame "," find "]}," ActionDispatch Routing Mapper Scope fetch":{"type":"method","name":"fetch","children":[],"call":["@hash fetch "]}," ActionDispatch Routing Mapper Scope new_level":{"type":"method","name":"new_level","children":[],"call":[" class new "," class "," frame "]}," ActionDispatch Routing Mapper Scope new":{"type":"method","name":"new","children":[],"call":[" class new "," scope_level "," class "]}," ActionDispatch Routing Mapper Scope options":{"type":"method","name":"options","children":[],"call":[]}," ActionDispatch Routing Mapper Scope resource_scope?":{"type":"method","name":"resource_scope?","children":[],"call":["RESOURCE_SCOPES  include? "," scope_level "]}," ActionDispatch Routing Mapper Scope action_name":{"type":"method","name":"action_name","children":[],"call":[" scope_level "]}," ActionDispatch Routing Mapper Scope resource_method_scope?":{"type":"method","name":"resource_method_scope?","children":[],"call":["RESOURCE_METHOD_SCOPES  include? "," scope_level "]}," ActionDispatch Routing Mapper Scope resources?":{"type":"method","name":"resources?","children":[],"call":[" scope_level == "," scope_level "]}," ActionDispatch Routing Mapper Scope nested?":{"type":"method","name":"nested?","children":[],"call":[" scope_level == "," scope_level "]}," ActionDispatch Routing Mapper Scope initialize":{"type":"method","name":"initialize","children":[],"call":[]}," ActionDispatch Routing Mapper Base rails_app?":{"type":"method","name":"rails_app?","children":[],"call":["app < ","app is_a? "]}," ActionDispatch Routing Mapper Mapping path_ast":{"type":"method","name":"path_ast","children":[],"call":["parser parse ","Journey Parser  new ","Journey Parser  new  parse "]}," ActionDispatch Routing Mapper Mapping path_params":{"type":"method","name":"path_params","children":[],"call":["n name to_sym ","n name ","ast grep map ","ast grep "]}," ActionDispatch Routing Mapper Mapping translate_controller":{"type":"method","name":"translate_controller","children":[],"call":["controller to_s ","controller =~ ","Regexp  === ","(str \"\\\\A[a-z_0-9][a-z_0-9/]*\\\\z\") match? "]}," ActionDispatch Routing Mapper Mapping add_controller_module":{"type":"method","name":"add_controller_module","children":[],"call":["(lvar :modyoule) compact join ","(lvar :modyoule) compact ","controller [] ","controller =~ ","controller is_a? ! ","controller is_a? ","(str \"\\\\A/\") match? ","controller start_with? ","(lvar :modyoule) compact join -@ ","controller [] -@ "]}," ActionDispatch Routing Mapper Mapping split_to":{"type":"method","name":"split_to","children":[],"call":["ActiveSupport Deprecation  warn ","(str \"                Defining a route where `to` is a controller without an action is deprecated.\\n\") squish ","to split ","to to_s ","(str \"                Defining a route where `to` is a symbol is deprecated.\\n\") squish ","to =~ ","(str \"#\") match? ","to split map! "]}," ActionDispatch Routing Mapper Mapping check_part":{"type":"method","name":"check_part","children":[],"call":[" raise ","path_params include? ","hash []= "]}," ActionDispatch Routing Mapper Mapping check_controller_and_action":{"type":"method","name":"check_controller_and_action","children":[],"call":["part to_s ","part is_a? "," check_part "," raise ","message << "," translate_controller ","(str \"'\") dup ","(str \"'\") +@ ","(str \"'\") dup  << ","(str \"'\") +@  << "]}," ActionDispatch Routing Mapper Mapping add_request_method":{"type":"method","name":"add_request_method","children":[],"call":["conditions []= ","m to_s dasherize upcase ","m to_s dasherize ","m to_s ","via map "," raise ","via empty? ","via == "]}," ActionDispatch Routing Mapper Mapping verify_callable_constraint":{"type":"method","name":"verify_callable_constraint","children":[],"call":[" raise ","callable_constraint inspect ","callable_constraint respond_to? "]}," ActionDispatch Routing Mapper Mapping split_constraints":{"type":"method","name":"split_constraints","children":[],"call":["@conditions []= ","@requirements []= "," verify_regexp_requirement ","requirement is_a? ","key == ","path_params include? ","constraints each_pair ","constraints partition "]}," ActionDispatch Routing Mapper Mapping build":{"type":"method","name":"build","children":[],"call":[]}," ActionDispatch Routing Mapper Constraints serve":{"type":"method","name":"serve","children":[],"call":["@app call ","req env ","@app serve "," dispatcher? "," matches? ","@strategy call "]}," ActionDispatch Routing Mapper Constraints dispatcher?":{"type":"method","name":"dispatcher?","children":[],"call":["@strategy == "]}," ActionDispatch Routing Endpoint app":{"type":"method","name":"app","children":[],"call":[]}," ActionDispatch Routing Endpoint matches?":{"type":"method","name":"matches?","children":[],"call":[]}," ActionDispatch Routing Endpoint redirect?":{"type":"method","name":"redirect?","children":[],"call":[]}," ActionDispatch Routing Endpoint dispatcher?":{"type":"method","name":"dispatcher?","children":[],"call":[]}," ActionDispatch FileHandler gzip_file_path":{"type":"method","name":"gzip_file_path","children":[],"call":["File  exist? ","File  join "," Rack Utils  unescape "," content_type =~ "," content_type "," Rack Utils  unescape_path ","gzip_path b "," Rack Utils  unescape_path b "]}," ActionDispatch FileHandler gzip_encoding_accepted?":{"type":"method","name":"gzip_encoding_accepted?","children":[],"call":["env [] =~ ","env [] ","request accept_encoding =~ ","request accept_encoding ","enc =~ ","request accept_encoding any? "]}," ActionDispatch FileHandler content_type":{"type":"method","name":"content_type","children":[],"call":[" Rack Mime  mime_type "," File  extname ","text/plain freeze "]}," ActionDispatch ExceptionWrapper backtrace":{"type":"method","name":"backtrace","children":[],"call":[" Array ","@exception backtrace "]}," ActionDispatch ExceptionWrapper source_extracts":{"type":"method","name":"source_extracts","children":[],"call":[" source_fragment ","line to_i ","trace split "," backtrace map "," backtrace "," extract_file_and_line_number "," extract_source "," extract_file_and_line to_i  "]}," ActionDispatch ExceptionWrapper traces":{"type":"method","name":"traces","children":[],"call":["full_trace_with_ids << ","framework_trace_with_ids << ","appplication_trace_with_ids << "," application_trace include? "," application_trace "," full_trace each_with_index "," full_trace ","application_trace_with_ids << ","@exception object_id "]}," ActionDispatch Cookies SerializedCookieJars digest":{"type":"method","name":"digest","children":[],"call":["@options [] "," request cookies_digest "," request "]}," ActionDispatch Journey Visitors FormatBuilder visit_SYMBOL":{"type":"method","name":"visit_SYMBOL","children":[],"call":["Journey Format  required_segment ","Journey Format  required_path ","symbol == ","n to_sym ","n to_sym  == "]}," ActionDispatch Journey Visitors FormatBuilder visit_STAR":{"type":"method","name":"visit_STAR","children":[],"call":["Journey Format  required_path ","n left to_sym ","n left "]}," ActionDispatch Journey Visitors FormatBuilder visit_GROUP":{"type":"method","name":"visit_GROUP","children":[],"call":["Journey Format  new "," unary "]}," ActionDispatch Journey Visitors FormatBuilder binary":{"type":"method","name":"binary","children":[],"call":[" visit + "," visit ","node right ","node left "]}," ActionDispatch Journey Visitors FormatBuilder terminal":{"type":"method","name":"terminal","children":[],"call":["node left "]}," ActionDispatch Journey Visitors FormatBuilder accept":{"type":"method","name":"accept","children":[],"call":["Journey Format  new "]}," ActionDispatch Journey Visitors Visitor visit_DOT":{"type":"method","name":"visit_DOT","children":[],"call":[" terminal "]}," ActionDispatch Journey Visitors Visitor visit_SLASH":{"type":"method","name":"visit_SLASH","children":[],"call":[" terminal "]}," ActionDispatch Journey Visitors Visitor visit_SYMBOL":{"type":"method","name":"visit_SYMBOL","children":[],"call":[" terminal "]}," ActionDispatch Journey Visitors Visitor visit_LITERAL":{"type":"method","name":"visit_LITERAL","children":[],"call":[" terminal "]}," ActionDispatch Journey Format evaluate":{"type":"method","name":"evaluate","children":[],"call":["parts join ","parts []= ","parts [] evaluate ","parts [] ","@children each ","param escape "," freeze ","hash [] ","param name ","@parameters each ","@parts dup ","value nil? ","@parts dup  join ","@parts dup  []= ","@parts dup  [] evaluate ","@parts dup  [] ","parts []  escape ","parts []  name ","@parts [] eters each ","@@parts dup  dup ","hash []  nil? "]}," ActionDispatch Journey Format initialize":{"type":"method","name":"initialize","children":[],"call":["@parameters << ","@children << ","parts each_with_index "]}," ActionDispatch Journey Format required_segment":{"type":"method","name":"required_segment","children":[],"call":[]}," ActionDispatch Journey Format required_path":{"type":"method","name":"required_path","children":[],"call":[]}," ActionDispatch Journey Format Parameter escape":{"type":"method","name":"escape","children":[],"call":[" escaper call "," escaper "]}," ActionDispatch Journey Router match_routes":{"type":"method","name":"match_routes","children":[],"call":["r matches? ","routes select "]}," ActionDispatch Journey Router match_head_routes":{"type":"method","name":"match_head_routes","children":[],"call":["req request_method= "," match_routes ","head_routes empty? ","route verb == ","route verb ","routes delete_if ","routes reject ","routes select ","r matches? ","routes select! ","r requires_matching_verb? "," match_routes  empty? "]}," ActionDispatch Journey Router serve":{"type":"method","name":"serve","children":[],"call":["req path_parameters= ","req path_info= ","req script_name= ","pass == ","headers [] ","route app serve ","route app ","set_params merge ","/ + ","req path_info ","req path_info start_with? ","match post_match ","(send\n  (send\n    (lvar :script_name) :to_s) :+\n  (send\n    (lvar :match) :to_s)) chomp ","script_name to_s + ","match to_s ","script_name to_s ","route path anchored ","route path ","req script_name ","req path_parameters "," find_routes each "," find_routes ","route defaults merge ","val dup force_encoding ","val dup ","parameters transform_values ","route defaults ","tmp_params []= ","val force_encoding ","parameters each_pair ","req route_uri_pattern= ","route path spec to_s ","route path spec ","req path_route defaults merge = ","req req path_info = ","req req script_name = ","req path_parameters  merge ","req req path_info  ","req req path_info  start_with? ","(send\n  (send\n    (lvar :req script_name ) :to_s) :+\n  (send\n    (lvar :match) :to_s)) chomp ","req script_name  to_s + ","req script_name  to_s ","req req script_name  ","req path_route defaults merge  ","route defaults merge  transform_values ","set_params merge  []= ","route defaults merge  each_pair "]}," ActionDispatch Journey Router Strexp build":{"type":"method","name":"build","children":[],"call":[]}," ActionDispatch Journey Path Pattern build_formatter":{"type":"method","name":"build_formatter","children":[],"call":["Visitors FormatBuilder  new accept "," spec ","Visitors FormatBuilder  new "]}," ActionDispatch Journey Path Pattern from_string":{"type":"method","name":"from_string","children":[],"call":[]}," ActionDispatch Journey Parser _reduce_18":{"type":"method","name":"_reduce_18","children":[],"call":["Dot  new ","val first "]}," ActionDispatch Journey Parser _reduce_10":{"type":"method","name":"_reduce_10","children":[],"call":["Star  new ","Symbol  new ","val last "]}," ActionDispatch Journey Nodes Star name":{"type":"method","name":"name","children":[],"call":[" left name tr "," left name "," left "]}," ActionDispatch Journey GTG Simulator memos":{"type":"method","name":"memos","children":[],"call":["(send\n  (lvar :acceptance_states) :flat_map) compact "," tt memo "," tt ","acceptance_states flat_map ","acceptance_states empty? "," tt accepting? ","state find_all "," tt move ","input scan ","StringScanner  new ","memos concat ","state each_with_object ","idx nil? ","start_index + ","sym length ","(send\n  (lvar :acceptance_ tt move s) :flat_map) compact ","acceptance_ tt move s flat_map ","acceptance_ tt move s empty? "," tt move  find_all ","StringScanner  new  scan "," tt move  each_with_object ","input scan  length "]}," ActionDispatch Http URL extract_subdomains_from":{"type":"method","name":"extract_subdomains_from","children":[],"call":["parts [] ","(send\n  (lvar :tld_length) :+\n  (int 2)) -@ ","tld_length + ","host split ","host split  [] "]}," ActionDispatch Http URL extract_domain_from":{"type":"method","name":"extract_domain_from","children":[],"call":["host split last join ","host split last ","1 + ","host split "]}," ActionDispatch Http URL add_anchor":{"type":"method","name":"add_anchor","children":[],"call":["path << ","Journey Router Utils  escape_fragment ","anchor to_param ","anchor to_param to_s "]}," ActionDispatch Http URL add_params":{"type":"method","name":"add_params","children":[],"call":["path << ","params to_query ","params empty? ","v to_param nil? ","v to_param ","params reject! ","params is_a? ","query empty? ","params to_params to_query  ","params to_query  empty? "]}," ActionDispatch Http URL path_for":{"type":"method","name":"path_for","children":[],"call":[" add_anchor ","options [] ","options key? "," add_params "," add_trailing_slash ","path << ","options [] to_s chomp ","options [] to_s ","/ freeze ","path blank? ","options [] to_s chomp  << ","options [] to_s chomp  blank? "]}," ActionDispatch Http URL full_url_for":{"type":"method","name":"full_url_for","children":[],"call":[" build_host_url "," path_for "," raise ","options [] "," build_options [] _url "]}," ActionDispatch Response RackBody to_ary":{"type":"method","name":"to_ary","children":[],"call":["@response stream to_ary ","@response stream "]}," ActionDispatch Response RackBody to_path":{"type":"method","name":"to_path","children":[],"call":["@response stream to_path ","@response stream "]}," ActionDispatch Response RackBody respond_to?":{"type":"method","name":"respond_to?","children":[],"call":["@response stream respond_to? ","@response stream ","method to_s == ","method to_s ","method to_sym == ","method to_sym ","BODY_METHODS  key? "]}," ActionDispatch Response RackBody body":{"type":"method","name":"body","children":[],"call":["@response body "]}," ActionDispatch Response RackBody close":{"type":"method","name":"close","children":[],"call":["@response abort "]}," ActionDispatch Response RackBody each":{"type":"method","name":"each","children":[],"call":["@response each "]}," ActionDispatch Response RackBody initialize":{"type":"method","name":"initialize","children":[],"call":[]}," ActionDispatch Response to_ary":{"type":"method","name":"to_ary","children":[],"call":[" to_a ","ActiveSupport Deprecation  warn ","(str \"        `ActionDispatch::Response#to_ary` no longer performs implicit conversion\\n\") squish "]}," ActionDispatch Response abort":{"type":"method","name":"abort","children":[],"call":[" stream close "," stream "," stream respond_to? "," stream abort "]}," ActionDispatch Response Buffer abort":{"type":"method","name":"abort","children":[],"call":[]}," ActionDispatch Request request_method=":{"type":"method","name":"request_method=","children":[],"call":[" env []= "," env "," check_method "," set_header "]}," ActionDispatch Request check_path_parameters!":{"type":"method","name":"check_path_parameters!","children":[],"call":[" raise ","value valid_encoding? ","value respond_to? "," path_parameters each "," path_parameters ","value inspect "]}," ActionController TestCase Behavior document_root_element":{"type":"method","name":"document_root_element","children":[],"call":[" html_document root "," html_document "]}," ActionController TemplateAssertions reset_template_assertion":{"type":"method","name":"reset_template_assertion","children":[],"call":[" instance_variable_get clear "," instance_variable_get ","RENDER_TEMPLATE_INSTANCE_VARIABLES  each "," instance_variable_defined? "]}," ActionController Parameters new_instance_with_inherited_permitted_status":{"type":"method","name":"new_instance_with_inherited_permitted_status","children":[],"call":["new_instance permitted= "," class new tap "," class new "," class "]}," ActionController Parameters select!":{"type":"method","name":"select!","children":[],"call":[" convert_value_to_parameters ","@parameters select! "]}," ActionController Parameters delete":{"type":"method","name":"delete","children":[],"call":[" convert_hashes_to_parameters "," convert_value_to_parameters ","@parameters delete "]}," ActionController Parameters transform_keys":{"type":"method","name":"transform_keys","children":[],"call":[" new_instance_with_inherited_permitted_status "," block_given? ","@parameters transform_keys "," to_enum "]}," ActionController Parameters transform_values":{"type":"method","name":"transform_values","children":[],"call":[" new_instance_with_inherited_permitted_status "," block_given? ","@parameters transform_values "," convert_value_to_parameters "," to_enum "]}," ActionController Parameters extract!":{"type":"method","name":"extract!","children":[],"call":[" new_instance_with_inherited_permitted_status ","@parameters extract! "]}," ActionController Parameters each_pair":{"type":"method","name":"each_pair","children":[],"call":[" convert_hashes_to_parameters ","@parameters each_pair "," to_enum "," __callee__ "," block_given? "]}," ActionController Parameters to_unsafe_h":{"type":"method","name":"to_unsafe_h","children":[],"call":[" to_hash "," convert_parameters_to_hashes "]}," ActionController Parameters to_h":{"type":"method","name":"to_h","children":[],"call":[" slice permit! to_h "," slice permit! "," slice "," class always_permitted_parameters "," class "," to_hash "," permitted? "," convert_parameters_to_hashes "," raise "," class raise_on_unfiltered_parameters "]}," ActionController Parameters const_missing":{"type":"method","name":"const_missing","children":[],"call":[]}," ActionController RequestForgeryProtection xor_byte_strings":{"type":"method","name":"xor_byte_strings","children":[],"call":["(send\n  (send\n    (send\n      (lvar :s1) :bytes) :zip\n    (send\n      (lvar :s2) :bytes)) :map) pack ","c1 ^ ","s1 bytes zip map ","s1 bytes zip ","s2 bytes ","s1 bytes ","s2_bytes pack ","s2_bytes [] ","s1 each_byte with_index ","s1 each_byte ","s2 setbyte ","s1 getbyte ^ ","s2 getbyte ","s1 getbyte ","i < ","s1 bytesize ","s2 dup ","(send\n  (send\n    (send\n      (lvar :s1) :bytes) :zip\n    (send\n      (lvar :s2 dup ) :bytes)) :map) pack ","s2 dup  bytes ","s2 bytes  pack ","s2 dup _bytes pack ","s2 bytes  [] ","s2 dup _bytes [] ","s2 dup  setbyte ","s2 dup  getbyte ","s1 bytes1 bytesize  ","s2 dup  dup "]}," ActionController RequestForgeryProtection real_csrf_token":{"type":"method","name":"real_csrf_token","children":[],"call":["Base64  strict_decode64 ","session [] ","SecureRandom  base64 ","Base64  urlsafe_decode64 ","SecureRandom  urlsafe_base64 "," decode_csrf_token "," generate_csrf_token "," request env []= "," csrf_token_storage_strategy fetch "," request "," csrf_token_storage_strategy "," request env "," request env fetch "]}," ActionController RequestForgeryProtection compare_with_real_token":{"type":"method","name":"compare_with_real_token","children":[],"call":["ActiveSupport SecurityUtils  secure_compare "," real_csrf_token ","Rack Utils  secure_compare ","ActiveSupport SecurityUtils  fixed_length_secure_compare "]}," ActionController RequestForgeryProtection valid_authenticity_token?":{"type":"method","name":"valid_authenticity_token?","children":[],"call":[" compare_with_real_token "," xor_byte_strings ","masked_token [] ","masked_token length == ","AUTHENTICITY_TOKEN_LENGTH  * ","masked_token length ","Base64  strict_decode64 ","encoded_masked_token empty? ","encoded_masked_token nil? ","encoded_masked_token is_a? ! ","encoded_masked_token is_a? "," valid_per_form_csrf_token? "," unmask_token "," compare_with_global_token ","Base64  urlsafe_decode64 "," decode_csrf_token ","Base64  strict_decode64  [] ","Base64  urlsafe_decode64  [] "," decode_csrf_token  [] ","Base64  strict_decode64  length == ","Base64  urlsafe_decode64  length == "," decode_csrf_token  length == ","Base64  strict_decode64  length ","Base64  urlsafe_decode64  length "," decode_csrf_token  length ","encoded_Base64  strict_decode64  empty? ","encoded_Base64  urlsafe_decode64  empty? ","encoded_ decode_csrf_token  empty? ","encoded_Base64  strict_decode64  nil? ","encoded_Base64  urlsafe_decode64  nil? ","encoded_ decode_csrf_token  nil? ","encoded_Base64  strict_decode64  is_a? ! ","encoded_Base64  urlsafe_decode64  is_a? ! ","encoded_ decode_csrf_token  is_a? ! ","encoded_Base64  strict_decode64  is_a? ","encoded_Base64  urlsafe_decode64  is_a? ","encoded_ decode_csrf_token  is_a? "," valid_per_form_ xor_byte_strings ? "," valid_per_form_ unmask_token ? "," decode_ xor_byte_strings  "," decode_ unmask_token  "]}," ActionController RequestForgeryProtection masked_authenticity_token":{"type":"method","name":"masked_authenticity_token","children":[],"call":["Base64  strict_encode64 ","one_time_pad + "," xor_byte_strings "," real_csrf_token ","SecureRandom  random_bytes "," per_form_csrf_token "," normalize_action_path "," per_form_csrf_tokens ","form_options values_at "," mask_token ","Base64  urlsafe_encode64 "," global_csrf_token ","SecureRandom  random_bytes  + "," normalize_ normalize_action_path  "]}," ActionController Renderers remove":{"type":"method","name":"remove","children":[],"call":[]}," ActionController Renderers _render_with_renderer_method_name":{"type":"method","name":"_render_with_renderer_method_name","children":[],"call":[]}," ActionController Renderers _render_to_body_with_renderer":{"type":"method","name":"_render_to_body_with_renderer","children":[],"call":[" send ","options delete ","Renderers  _render_with_renderer_method_name "," _process_options ","options key? "," _renderers each "," _renderers ","Renderers  _render_with_renderer_Renderers  _render_with_renderer_method_name  "]}," ActionController remove_renderer":{"type":"method","name":"remove_renderer","children":[],"call":[]}," ActionController Live Buffer connected?":{"type":"method","name":"connected?","children":[],"call":["@aborted ! "]}," ActionController Live Buffer abort":{"type":"method","name":"abort","children":[],"call":["@buf clear "," synchronize "]}," ActionController EtagWithTemplateDigest lookup_and_digest_template":{"type":"method","name":"lookup_and_digest_template","children":[],"call":["ActionView Digestor  digest "," lookup_context "]}," ActionController EtagWithTemplateDigest pick_template_for_etag":{"type":"method","name":"pick_template_for_etag","children":[],"call":[" action_name "," controller_name ","options fetch "," controller_path ","options [] ","options [] == "," lookup_context find_all first "," lookup_context find_all "," _prefixes "," lookup_context "]}," ActionController EtagWithTemplateDigest determine_template_etag":{"type":"method","name":"determine_template_etag","children":[],"call":[" lookup_and_digest_template "," pick_template_for_etag "," lookup_and_digest_ pick_template_for_etag  "," pick_ pick_template_for_etag _for_etag "]}," AbstractController Base supports_path?":{"type":"method","name":"supports_path?","children":[],"call":[]}," ActionDispatch DebugExceptions traces_from_wrapper":{"type":"method","name":"traces_from_wrapper","children":[],"call":["application_trace + ","framework_trace map ","application_trace map ","wrapper full_trace ","wrapper framework_trace ","wrapper application_trace ","full_trace_with_ids << ","framework_trace_with_ids << ","framework_trace include? ","appplication_trace_with_ids << ","application_trace include? ","full_trace each_with_index ","wrapper application_trace  + ","wrapper framework_trace  map ","wrapper application_trace  map ","wrapper application_trace +  ","wrapper wrapper full_trace  ","wrapper wrapper framework_trace  ","wrapper wrapper application_trace  ","application_trace + _with_ids << ","wrapper full_trace _with_ids << ","wrapper framework_trace _with_ids << ","wrapper framework_trace  include? ","wrapper application_trace  include? ","application_trace +  each_with_index ","wrapper full_trace  each_with_index "]}," ActionController Parameters permit_all_parameters=":{"type":"method","name":"permit_all_parameters=","children":[],"call":[]}," ActionController Parameters permit_all_parameters":{"type":"method","name":"permit_all_parameters","children":[],"call":[]}," ActionDispatch Routing RouteSet generate_url_helpers":{"type":"method","name":"generate_url_helpers","children":[{"type":"method","name":"url_options","children":[],"asgn":[],"call":[]}],"call":[" private "," define_method "," singleton_class send "," singleton_class "," included "," extend "," include ","routes named_routes path_helpers_module ","routes named_routes ","routes named_routes url_helpers_module "," attr_reader "," delegate ","Module  new "," redefine_singleton_method ","@_proxy _routes ","@_proxy polymorphic_path ","@_proxy polymorphic_url ","@_proxy optimize_routes_generation? ","@_proxy route_for ","@_proxy full_url_for ","@_proxy url_for ","proxy_class new ","@_routes optimize_routes_generation? ","Class  new ","base include "," dup ","base _routes equal? ! ","base _routes equal? ","base _routes ","routes named_routes routes named_routes path_helpers_module _module ","routes named_routes routes named_routes url_helpers_module _module ","proxy_class new  _routes ","proxy_class new  polymorphic_path ","proxy_class new  polymorphic_url ","proxy_class new  optimize_routes_generation? ","proxy_class new  route_for ","proxy_class new  full_url_for ","proxy_class new  url_for "]}," ActionDispatch Routing RouteSet find_relative_url_root":{"type":"method","name":"find_relative_url_root","children":[],"call":[" relative_url_root ","options delete "]}," ActionDispatch FileHandler valid_path?":{"type":"method","name":"valid_path?","children":[],"call":["path include? ! ","path include? ","path valid_encoding? "]}," ActionController TestSession fetch":{"type":"method","name":"fetch","children":[],"call":["@data fetch ","key to_s "]}," ActionDispatch TestResponse parsed_body":{"type":"method","name":"parsed_body","children":[],"call":["@response_parser call "," body "," response_parser call "," response_parser "]}," ActionDispatch TestRequest create":{"type":"method","name":"create","children":[],"call":[]}," ActionDispatch IntegrationTest Behavior document_root_element":{"type":"method","name":"document_root_element","children":[],"call":[" html_document root "," html_document "]}," ActionDispatch IntegrationTest Behavior app":{"type":"method","name":"app","children":[],"call":[" class app "," class "]}," ActionDispatch IntegrationTest Behavior ClassMethods register_encoder":{"type":"method","name":"register_encoder","children":[],"call":["Integration Session RequestEncoder  register_encoder ","RequestEncoder  register_encoder "]}," ActionDispatch IntegrationTest Behavior ClassMethods app=":{"type":"method","name":"app=","children":[],"call":[]}," ActionDispatch IntegrationTest Behavior ClassMethods app":{"type":"method","name":"app","children":[],"call":["ActionDispatch  test_app "]}," ActionDispatch IntegrationTest UrlOptions url_options":{"type":"method","name":"url_options","children":[],"call":[" integration_session url_options "," integration_session "]}," ActionDispatch Integration Runner create_session":{"type":"method","name":"create_session","children":[],"call":["klass new "," include ","app routes mounted_helpers ","app routes ","app routes url_helpers ","app respond_to? ","Class  new ","APP_SESSIONS  [] ","app routes is_a? "]}," ActionDispatch Integration Runner before_setup":{"type":"method","name":"before_setup","children":[],"call":[]}," ActionDispatch Integration Session RequestEncoder register_encoder":{"type":"method","name":"register_encoder","children":[],"call":[]}," ActionDispatch Integration Session RequestEncoder encoder":{"type":"method","name":"encoder","children":[],"call":[]}," ActionDispatch Integration Session RequestEncoder parser":{"type":"method","name":"parser","children":[],"call":[]}," ActionDispatch Integration Session RequestEncoder encode_params":{"type":"method","name":"encode_params","children":[],"call":["@param_encoder call "]}," ActionDispatch Integration Session RequestEncoder content_type":{"type":"method","name":"content_type","children":[],"call":["@mime to_s "]}," ActionDispatch Integration Session RequestEncoder append_format_to":{"type":"method","name":"append_format_to","children":[],"call":["path << "]}," ActionDispatch Integration Session RequestEncoder initialize":{"type":"method","name":"initialize","children":[],"call":["(str \"to_\") to_proc ","@mime symbol "," lambda "," raise ","Mime  [] ","Mime  []  symbol "]}," ActionDispatch Integration Session non_kwarg_request_warning":{"type":"method","name":"non_kwarg_request_warning","children":[],"call":["ActiveSupport Deprecation  warn ","(str \"            ActionDispatch::IntegrationTest HTTP request methods will accept only\\n\") strip_heredoc ","REQUEST_KWARGS  join ","(str \"            Using positional arguments in integration tests has been deprecated,\\n\") strip_heredoc "]}," ActionDispatch Integration Session kwarg_request?":{"type":"method","name":"kwarg_request?","children":[],"call":["REQUEST_KWARGS  include? ","args [] keys any? ","args [] keys ","args [] ","args [] respond_to? "]}," ActionDispatch Integration Session process_with_kwargs":{"type":"method","name":"process_with_kwargs","children":[],"call":[" process ","args [] "," non_kwarg_request_warning ","args any? "," kwarg_request? "]}," ActionDispatch Assertions ResponseAssertions code_with_name":{"type":"method","name":"code_with_name","children":[],"call":["AssertionResponse  new code_and_name ","AssertionResponse  new ","RESPONSE_PREDICATES  invert [] ","(begin\n  (lvar :code_or_name)) to_sym ","RESPONSE_PREDICATES  invert ","RESPONSE_PREDICATES  values include? ","RESPONSE_PREDICATES  values ","RESPONSE_PREDICATES  value? ","(begin\n  (lvar :RESPONSE_PREDICATES  invert [] )) to_sym "]}," ActionDispatch Assertions ResponseAssertions location_if_redirected":{"type":"method","name":"location_if_redirected","children":[],"call":[" normalize_argument_to_redirection ","@response location ","@response location present? ","@response redirection? ","@response  normalize_argument_to_redirection  ","@response  normalize_argument_to_redirection  present? "]}," ActionDispatch Assertions ResponseAssertions generate_response_message":{"type":"method","name":"generate_response_message","children":[],"call":["(dstr\n  (str \"Expected response to be a <\")\n  (begin\n    (send nil :code_with_name\n      (lvar :expected)))\n  (str \">,\")) concat "," location_if_redirected "," code_with_name ","(str \"Expected response to be a <\") concat ","(dstr\n  (str \"Expected response to be a <\")\n  (begin\n    (send nil :code_with_name\n      (lvar :expected)))\n  (str \">,\")) concat concat "," response_body_if_short ","(dstr\n  (str \"Expected response to be a <\")\n  (begin\n    (send nil :code_with_name\n      (lvar :expected)))\n  (str \">,\")) dup concat concat ","(dstr\n  (str \"Expected response to be a <\")\n  (begin\n    (send nil :code_with_name\n      (lvar :expected)))\n  (str \">,\")) dup concat ","(dstr\n  (str \"Expected response to be a <\")\n  (begin\n    (send nil :code_with_name\n      (lvar :expected)))\n  (str \">,\")) dup ","(send\n  (dstr\n    (dstr\n      (str \"Expected response to be a <\")\n      (begin\n        (send nil :code_with_name\n          (lvar :expected)))\n      (str \">,\"))\n    (dstr\n      (str \" but was a <\")\n      (begin\n        (send nil :code_with_name\n          (lvar :actual)))\n      (str \">\"))) :+@) concat concat ","(send\n  (dstr\n    (dstr\n      (str \"Expected response to be a <\")\n      (begin\n        (send nil :code_with_name\n          (lvar :expected)))\n      (str \">,\"))\n    (dstr\n      (str \" but was a <\")\n      (begin\n        (send nil :code_with_name\n          (lvar :actual)))\n      (str \">\"))) :+@) concat ","(dstr\n  (str \"Expected response to be a <\")\n  (begin\n    (send nil :code_with_name\n      (lvar :expected)))\n  (str \">,\")) +@ "]}," ActionDispatch AssertionResponse name_from_code":{"type":"method","name":"name_from_code","children":[],"call":["Rack Utils HTTP_STATUS_CODES  [] ","GENERIC_RESPONSE_CODES  invert [] ","GENERIC_RESPONSE_CODES  invert "]}," ActionDispatch AssertionResponse code_from_name":{"type":"method","name":"code_from_name","children":[],"call":["Rack Utils SYMBOL_TO_STATUS_CODE  [] ","GENERIC_RESPONSE_CODES  [] "]}," ActionDispatch AssertionResponse code_and_name":{"type":"method","name":"code_and_name","children":[],"call":[" name "," code "]}," ActionDispatch AssertionResponse initialize":{"type":"method","name":"initialize","children":[],"call":[" raise "," code ","@name nil? "," name ","@code nil? "," name_from_code "," code_from_name ","code_or_name is_a? "," name_from_code  nil? "," code_from_name  nil? "]}," ActionDispatch Routing RouteSet make_request":{"type":"method","name":"make_request","children":[],"call":[" request_class new "," request_class "]}," ActionDispatch Routing RouteSet request_class":{"type":"method","name":"request_class","children":[],"call":[]}," ActionDispatch Routing RouteSet api_only?":{"type":"method","name":"api_only?","children":[],"call":["@config api_only "]}," ActionDispatch Routing RouteSet relative_url_root":{"type":"method","name":"relative_url_root","children":[],"call":["@config relative_url_root "]}," ActionDispatch Routing RouteSet new_with_config":{"type":"method","name":"new_with_config","children":[],"call":[]}," ActionDispatch Routing RouteSet StaticDispatcher controller":{"type":"method","name":"controller","children":[],"call":[]}," ActionDispatch Routing RouteSet StaticDispatcher initialize":{"type":"method","name":"initialize","children":[],"call":[]}," ActionDispatch Routing Mapper Scope frame":{"type":"method","name":"frame","children":[],"call":[]}," ActionDispatch Routing Mapper Scope each":{"type":"method","name":"each","children":[],"call":["node parent ","node equal? "," loop ","node parent  parent ","node parent  equal? "]}," ActionDispatch Routing Mapper Resources match_root_route":{"type":"method","name":"match_root_route","children":[],"call":[" match ","(pair\n  (sym :as)\n  (lvar :name)) merge! "," has_named_route? "," name_for_action ","(pair\n  (sym :as)\n  (sym :root)) merge "]}," ActionDispatch Routing Mapper Resources path_scope":{"type":"method","name":"path_scope","children":[],"call":["@scope parent ","@scope new "," merge_path_scope ","@scope [] ","@scope parent  parent ","@scope new  parent ","@scope parent  new ","@scope new  new ","@scope parent  [] ","@scope new  [] "]}," ActionDispatch Routing Mapper Resources api_only?":{"type":"method","name":"api_only?","children":[],"call":["@set api_only? "]}," ActionDispatch Routing Mapper Resources apply_action_options":{"type":"method","name":"apply_action_options","children":[],"call":["options merge "," scope_action_options "," action_options? "]}," ActionDispatch Routing Mapper Resources get_to_from_path":{"type":"method","name":"get_to_from_path","children":[],"call":["path_without_format gsub sub tr ","path_without_format gsub sub ","path_without_format gsub "," using_match_shorthand? ","path sub ","path_without_format delete_prefix sub tr ","path_without_format delete_prefix sub ","path_without_format delete_prefix ","path sub  gsub sub tr ","path sub  gsub sub ","path sub  gsub ","path sub  delete_prefix sub tr ","path sub  delete_prefix sub ","path sub  delete_prefix "]}," ActionDispatch Routing Mapper Resources SingletonResource singleton?":{"type":"method","name":"singleton?","children":[],"call":[]}," ActionDispatch Routing Mapper Resources Resource singleton?":{"type":"method","name":"singleton?","children":[],"call":[]}," ActionDispatch Routing Mapper Scoping merge_to_scope":{"type":"method","name":"merge_to_scope","children":[],"call":[]}," ActionDispatch Routing Mapper Scoping merge_format_scope":{"type":"method","name":"merge_format_scope","children":[],"call":[]}," ActionDispatch Routing Mapper Scoping merge_via_scope":{"type":"method","name":"merge_via_scope","children":[],"call":[]}," ActionDispatch Routing Mapper Mapping normalize_defaults":{"type":"method","name":"normalize_defaults","children":[],"call":["Hash  [] ","Regexp  === ","options reject "]}," ActionDispatch Routing Mapper Mapping verify_regexp_requirements":{"type":"method","name":"verify_regexp_requirements","children":[],"call":[" raise ","requirement inspect ","requirement multiline? ","requirement source =~ ","requirement source ","requirements each ","ANCHOR_CHARACTERS_REGEX  match? ","regex inspect ","wildcard_options key? ","regex multiline? ","regex source ","regex is_a? "]}," ActionDispatch Routing Mapper Mapping normalize_format":{"type":"method","name":"normalize_format","children":[],"call":["Regexp  compile "]}," ActionDispatch Routing Mapper Mapping add_wildcard_options":{"type":"method","name":"add_wildcard_options","children":[],"call":["(send\n  (send\n    (lvar :path_ast) :grep\n    (const\n      (const\n        (const nil :Journey) :Nodes) :Star)) :each_with_object\n  (hash)) merge ","hash [] ","node name to_sym ","node name ","path_ast grep each_with_object ","path_ast grep ","formatted != "]}," ActionDispatch Routing Mapper Mapping build_path":{"type":"method","name":"build_path","children":[],"call":["symbol regexp= ","Regexp  union ","symbol regexp ","node left ","node right left literal? ","node right left ","node right ","node right cat? ","node left symbol? ","node right literal? ","node right left symbol? ","node left literal? ","node right symbol? ","node cat? ","ast find_all ","Journey Path Pattern  new ","x regexp= ","x regexp ","symbols each ","symbols concat ","n right left ","n right ","(send\n  (lvar :ast) :find_all) map ","n right left symbol? ","n right cat? ","n left literal? ","n left ","n cat? ","n right left literal? ","n left symbol? ","node left  regexp= ","node right left  regexp= ","node right  regexp= ","node left  regexp ","node right left  regexp ","node right  regexp ","node left node left ? ","node left node right left ? ","node left node right ? ","node right left node left ? ","node right left node right left ? ","node right left node right ? ","node right node left ? ","node right node right left ? ","node right node right ? ","node left s each ","node right left s each ","node right s each ","(send\n  (lvar :ast) :find_all) map  each ","node left s concat ","node right left s concat ","node right s concat ","(send\n  (lvar :ast) :find_all) map  concat ","n right left node left ? ","n right left node right left ? ","n right left node right ? ","n left node left ? ","n left node right left ? ","n left node right ? "]}," ActionDispatch Routing Mapper Mapping request_method":{"type":"method","name":"request_method","children":[],"call":["Journey Route  verb_matcher ","@via map "]}," ActionDispatch Routing Mapper Mapping build_conditions":{"type":"method","name":"build_conditions","children":[],"call":["request_class public_method_defined? ","conditions keep_if ","current_conditions dup ","current_conditions dup  keep_if ","current_current_conditions dup  dup "]}," ActionDispatch Routing Mapper Mapping path":{"type":"method","name":"path","children":[],"call":[" build_path "," requirements ","Journey Path Pattern  new "]}," ActionDispatch Routing Mapper Mapping application":{"type":"method","name":"application","children":[],"call":[" app "]}," ActionDispatch Routing Mapper Mapping make_route":{"type":"method","name":"make_route","children":[],"call":["Journey Route  new "," request_method "," defaults "," required_defaults "," conditions "," path "," application "," scope_options "," route_source_location "," Journey Route  new _source_location "]}," ActionDispatch Routing Mapper Mapping check_via":{"type":"method","name":"check_via","children":[],"call":[]}," ActionDispatch Routing RoutesInspector normalize_filter":{"type":"method","name":"normalize_filter","children":[],"call":["filter [] downcase sub sub ","filter [] downcase sub ","filter [] downcase ","filter [] ","filter is_a? ","filter [] underscore sub ","filter [] underscore ","(send\n  (str \"/\") :+\n  (lvar :path)) squeeze ","/ + ","URI DEFAULT_PARSER  escape ","Regexp  new ","(send\n  (str \"/\") :+\n  (lvar :URI DEFAULT_PARSER  escape )) squeeze "]}," ActionDispatch Request Utils NoNilParamEncoder handle_array":{"type":"method","name":"handle_array","children":[],"call":[]}," ActionDispatch Request Utils ParamEncoder handle_array":{"type":"method","name":"handle_array","children":[],"call":[]}," ActionDispatch Request Utils ParamEncoder normalize_encode_params":{"type":"method","name":"normalize_encode_params","children":[],"call":[]}," ActionDispatch Request Utils check_param_encoding":{"type":"method","name":"check_param_encoding","children":[],"call":[]}," ActionDispatch Request Utils normalize_encode_params":{"type":"method","name":"normalize_encode_params","children":[],"call":[]}," ActionDispatch Request Session each":{"type":"method","name":"each","children":[],"call":[" to_hash each "," to_hash "]}," ActionDispatch Request Session Options id":{"type":"method","name":"id","children":[],"call":["@by send ","@delegate fetch "]}," ActionDispatch FileHandler serve":{"type":"method","name":"serve","children":[],"call":["request path_info= ","headers []= ","@file_server call ","request env "," content_type ","status == "," gzip_encoding_accepted? "," gzip_file_path ","request path_info ","headers update ","status != ","@file_server call tap "," Rack Utils  escape_path b "," Rack Utils  escape_path ","request request path_info _info= "," gzip_file_request path_info  ","request request path_info _info "," Rack Utils  escape_request path_info  b "," Rack Utils  escape_request path_info  "]}," ActionDispatch MiddlewareStack build_middleware":{"type":"method","name":"build_middleware","children":[],"call":["Middleware  new "," get_class ","klass == "]}," ActionDispatch MiddlewareStack get_class":{"type":"method","name":"get_class","children":[],"call":["ActiveSupport Deprecation  warn ","classcache [] ","klass to_s ","klass is_a? "]}," ActionDispatch MiddlewareStack Middleware name":{"type":"method","name":"name","children":[],"call":[" klass name "," klass "]}," ActionDispatch SSL https_location_for":{"type":"method","name":"https_location_for","children":[],"call":["location << ","request fullpath ","port != ","request port ","@redirect [] ","request host ","(str \"https://\") dup ","(str \"https://\") +@ ","(str \"https://\") dup  << ","(str \"https://\") +@  << "]}," ActionDispatch SSL build_hsts_header":{"type":"method","name":"build_hsts_header","children":[],"call":["value << ","hsts [] ","hsts [] to_i ","(str \"max-age=\") dup ","(str \"max-age=\") +@ ","(str \"max-age=\") dup  << ","(str \"max-age=\") +@  << "]}," ActionDispatch SSL normalize_hsts_options":{"type":"method","name":"normalize_hsts_options","children":[],"call":[" class default_hsts_options merge "," class default_hsts_options "," class "]}," ActionDispatch SSL set_hsts_header!":{"type":"method","name":"set_hsts_header!","children":[],"call":["headers [] ","Strict-Transport-Security freeze "]}," ActionDispatch Session CookieStore write_session":{"type":"method","name":"write_session","children":[],"call":["session_data []= ","SessionId  new ","sid public_id "]}," ActionDispatch Session CookieStore delete_session":{"type":"method","name":"delete_session","children":[],"call":["req set_header "," generate_sid ","options [] ","new_sid public_id "," generate_sid  public_id "]}," ActionDispatch Session CacheStore delete_session":{"type":"method","name":"delete_session","children":[],"call":[" generate_sid ","@cache delete "," cache_key ","sid public_id ","sid private_id "]}," ActionDispatch Session CacheStore write_session":{"type":"method","name":"write_session","children":[],"call":["@cache delete ","@cache write ","options [] "," cache_key ","sid private_id "," cache_ cache_key  "]}," ActionDispatch Session CacheStore find_session":{"type":"method","name":"find_session","children":[],"call":[" generate_sid ","@cache read "," cache_key "," get_session_with_fallback "," get_@cache read _with_fallback "," get_ get_session_with_fallback _with_fallback "]}," ActionDispatch Session Compatibility make_request":{"type":"method","name":"make_request","children":[],"call":["ActionDispatch Request  new "]}," ActionDispatch Session SessionRestoreError original_exception":{"type":"method","name":"original_exception","children":[],"call":[" cause ","ActiveSupport Deprecation  warn "," caller "]}," ActionDispatch RequestId make_request_id":{"type":"method","name":"make_request_id","children":[],"call":[" internal_request_id ","request_id gsub first ","request_id gsub "," freeze ","request_id presence "]}," ActionDispatch ParamsParser new":{"type":"method","name":"new","children":[],"call":[]}," ActionDispatch ParamsParser ParseError original_exception":{"type":"method","name":"original_exception","children":[],"call":[" cause ","ActiveSupport Deprecation  warn "," caller "]}," ActionDispatch Flash new":{"type":"method","name":"new","children":[],"call":[]}," ActionDispatch Flash RequestMethods reset_session":{"type":"method","name":"reset_session","children":[],"call":[" flash= "]}," ActionDispatch Flash RequestMethods commit_flash":{"type":"method","name":"commit_flash","children":[],"call":["session delete ","session [] nil? ","session [] ","session key? ","session loaded? ","session respond_to? ! ","session respond_to? "," flash= ","flash_hash dup ","session []= ","flash_hash to_session_value ","flash_hash present? "," flash_hash "," session "," session delete "," session [] nil? "," session [] "," session key? "," session loaded? "," flash_hash dup "," session []= "," flash_hash to_session_value "," flash_hash present? "," session enabled? "," flash_hash  dup "," flash_hash  to_session_value "," flash_hash  present? ","  flash_hash  ","  flash_hash  dup ","  flash_hash  to_session_value ","  flash_hash  present? "]}," ActionDispatch Flash RequestMethods flash_hash":{"type":"method","name":"flash_hash","children":[],"call":[" get_header "]}," ActionDispatch Flash RequestMethods flash=":{"type":"method","name":"flash=","children":[],"call":[" set_header "]}," ActionDispatch Flash RequestMethods flash":{"type":"method","name":"flash","children":[],"call":[" flash= ","Flash FlashHash  from_session_value "," session [] "," session "," flash_hash ","  flash_hash = ","  flash_hash _hash "]}," ActionDispatch Executor call":{"type":"method","name":"call","children":[],"call":["state complete! ","response << "," Rack BodyProxy  new ","response pop ","@app call ","@executor run! "," raise ","@executor error_reporter report ","@executor error_reporter ","@executor run!  complete! ","@app call  << ","@app call  pop "]}," ActionDispatch Executor initialize":{"type":"method","name":"initialize","children":[],"call":[]}," ActionDispatch ExceptionWrapper extract_file_and_line_number":{"type":"method","name":"extract_file_and_line_number","children":[],"call":["line to_i ","trace match ","trace lineno ","trace path "]}," ActionDispatch DebugExceptions log_array":{"type":"method","name":"log_array","children":[],"call":["logger fatal ","array map ","array join ","logger formatter tags_text ","logger formatter ","logger formatter respond_to? ","lines join ","lines empty? "," Array ","logger add ","request get_header "," Array  join "," Array  empty? "]}," ActionDispatch DebugExceptions create_template":{"type":"method","name":"create_template","children":[],"call":["DebugView  new ","wrapper file ","wrapper line_number ","wrapper source_extracts "," routes_inspector ","wrapper exception ","source_to_show [] ","traces [] first ","traces [] ","wrapper rescue_template != ","wrapper rescue_template ","traces [] empty? ","wrapper traces ","wrapper trace_to_show ","wrapper source_to_show_id ","traces [] first  [] ","wrapper traces  [] first ","wrapper traces  [] ","wrapper traces  [] empty? ","wrapper wrapper traces  ","wrapper source_to_show []  ","wrapper traces [] first _id "]}," ActionDispatch DebugExceptions render_for_api_application":{"type":"method","name":"render_for_api_application","children":[],"call":[" render ","wrapper status_code ","Mime  [] ","body to_json ","body public_send ","body respond_to? ","content_type to_sym ","request formats first ","request formats ","wrapper traces ","wrapper exception inspect ","wrapper exception ","Rack Utils HTTP_STATUS_CODES  fetch ","Rack Utils HTTP_STATUS_CODES  [] ","request formats first  to_sym ","request Mime  [] s first ","request Mime  [] s "]}," ActionDispatch DebugExceptions render_for_default_application":{"type":"method","name":"render_for_default_application","children":[],"call":[" render ","wrapper status_code ","template render ","request xhr? ","wrapper rescue_template "," create_template "," create_template  render ","wrapper rescue_ create_template  "," create_ create_template  "]}," ActionDispatch DebugExceptions DebugView debug_hash":{"type":"method","name":"debug_hash","children":[],"call":["(send\n  (block\n    (send\n      (send\n        (lvar :object) :to_hash) :sort_by)\n    (args\n      (arg :k)\n      (arg :_))\n    (send\n      (lvar :k) :to_s)) :map) join ","$! message ","v inspect ","(send\n  (send\n    (lvar :object) :to_hash) :sort_by) map ","k to_s ","object to_hash sort_by ","object to_hash "]}," ActionDispatch DebugExceptions DebugView debug_headers":{"type":"method","name":"debug_headers","children":[],"call":["headers inspect gsub ","headers inspect ","headers present? "]}," ActionDispatch DebugExceptions DebugView debug_params":{"type":"method","name":"debug_params","children":[],"call":["PP  pp ","clean_params empty? ","clean_params delete ","params clone "," dup ","params clone  empty? ","params clone  delete "]}," ActionDispatch Cookies EncryptedCookieJar commit":{"type":"method","name":"commit","children":[],"call":[" raise ","options [] bytesize > ","options [] bytesize ","options [] ","options []= ","@encryptor encrypt_and_sign "," serialize "]}," ActionDispatch Cookies EncryptedCookieJar parse":{"type":"method","name":"parse","children":[],"call":[" deserialize ","@encryptor decrypt_and_verify "]}," ActionDispatch Cookies SignedCookieJar commit":{"type":"method","name":"commit","children":[],"call":[" raise ","options [] bytesize > ","options [] bytesize ","options [] ","options []= ","@verifier generate "," serialize "]}," ActionDispatch Cookies SignedCookieJar parse":{"type":"method","name":"parse","children":[],"call":[" deserialize ","@verifier verified "]}," ActionDispatch Cookies SerializedCookieJars key_generator":{"type":"method","name":"key_generator","children":[],"call":[" request key_generator "," request "]}," ActionDispatch Cookies PermanentCookieJar commit":{"type":"method","name":"commit","children":[],"call":["options []= ","20 years from_now ","20 years "]}," ActionDispatch Cookies AbstractCookieJar commit":{"type":"method","name":"commit","children":[],"call":[]}," ActionDispatch Cookies AbstractCookieJar parse":{"type":"method","name":"parse","children":[],"call":[]}," ActionDispatch Cookies AbstractCookieJar request":{"type":"method","name":"request","children":[],"call":["@parent_jar request "]}," ActionDispatch Cookies AbstractCookieJar []=":{"type":"method","name":"[]=","children":[],"call":["@parent_jar []= "," commit ","options symbolize_keys! ","options is_a? "]}," ActionDispatch Cookies AbstractCookieJar []":{"type":"method","name":"[]","children":[],"call":[" parse ","@parent_jar [] ","name to_s ","result nil? "," parse  nil? "]}," ActionDispatch Cookies AbstractCookieJar initialize":{"type":"method","name":"initialize","children":[],"call":[]}," ActionDispatch Cookies CookieJar make_set_cookie_header":{"type":"method","name":"make_set_cookie_header","children":[],"call":[" Rack Utils  add_remove_cookie_to_header ","@delete_cookies inject "," Rack Utils  add_cookie_to_header "," write_cookie? ","@set_cookies inject "]}," ActionDispatch Cookies CookieJar escape":{"type":"method","name":"escape","children":[],"call":[" Rack Utils  escape "]}," ActionDispatch Cookies CookieJar to_header":{"type":"method","name":"to_header","children":[],"call":["(send\n  (ivar :@cookies) :map) join "," escape ","@cookies map "]}," ActionDispatch Cookies CookieJar update_cookies_from_jar":{"type":"method","name":"update_cookies_from_jar","children":[],"call":["@cookies update ","@delete_cookies key? ","request_jar reject ","@request cookie_jar instance_variable_get ","@request cookie_jar ","@set_cookies key? ","@request cookie_jar instance_variable_get  reject "]}," ActionDispatch Cookies VerifyAndUpgradeLegacySignedMessage parse":{"type":"method","name":"parse","children":[],"call":[" verify_and_upgrade_legacy_signed_message "]}," ActionDispatch Cookies ChainedCookieJars upgrade_legacy_signed_cookies?":{"type":"method","name":"upgrade_legacy_signed_cookies?","children":[],"call":[" request secret_key_base present? "," request secret_key_base "," request "," request secret_token present? "," request secret_token "]}," ActionDispatch Request cookies_digest":{"type":"method","name":"cookies_digest","children":[],"call":[" get_header "]}," ActionDispatch Request cookies_serializer":{"type":"method","name":"cookies_serializer","children":[],"call":[" get_header "]}," ActionDispatch Request secret_key_base":{"type":"method","name":"secret_key_base","children":[],"call":[" get_header "]}," ActionDispatch Request secret_token":{"type":"method","name":"secret_token","children":[],"call":[" get_header "]}," ActionDispatch Request encrypted_signed_cookie_salt":{"type":"method","name":"encrypted_signed_cookie_salt","children":[],"call":[" get_header "]}," ActionDispatch Request encrypted_cookie_salt":{"type":"method","name":"encrypted_cookie_salt","children":[],"call":[" get_header "]}," ActionDispatch Request signed_cookie_salt":{"type":"method","name":"signed_cookie_salt","children":[],"call":[" get_header "]}," ActionDispatch Request key_generator":{"type":"method","name":"key_generator","children":[],"call":[" get_header "]}," ActionDispatch Request cookie_jar=":{"type":"method","name":"cookie_jar=","children":[],"call":[" set_header ","action_dispatch.cookies freeze "]}," ActionDispatch Request have_cookie_jar?":{"type":"method","name":"have_cookie_jar?","children":[],"call":[" has_header? ","action_dispatch.cookies freeze "]}," ActionDispatch Request commit_cookie_jar!":{"type":"method","name":"commit_cookie_jar!","children":[],"call":[" cookie_jar commit! "," cookie_jar "]}," ActionDispatch Callbacks to_cleanup":{"type":"method","name":"to_cleanup","children":[],"call":["ActiveSupport Reloader  to_complete "]}," ActionDispatch Journey Visitors FunctionalVisitor visit_DOT":{"type":"method","name":"visit_DOT","children":[],"call":[" terminal "]}," ActionDispatch Journey Visitors FunctionalVisitor visit_SLASH":{"type":"method","name":"visit_SLASH","children":[],"call":[" terminal "]}," ActionDispatch Journey Visitors FunctionalVisitor visit_SYMBOL":{"type":"method","name":"visit_SYMBOL","children":[],"call":[" terminal "]}," ActionDispatch Journey Visitors FunctionalVisitor visit_LITERAL":{"type":"method","name":"visit_LITERAL","children":[],"call":[" terminal "]}," ActionDispatch Journey Visitors FunctionalVisitor terminal":{"type":"method","name":"terminal","children":[],"call":[]}," ActionDispatch Journey Visitors FunctionalVisitor visit_STAR":{"type":"method","name":"visit_STAR","children":[],"call":[" unary "]}," ActionDispatch Journey Visitors FunctionalVisitor visit_GROUP":{"type":"method","name":"visit_GROUP","children":[],"call":[" unary "]}," ActionDispatch Journey Visitors FunctionalVisitor unary":{"type":"method","name":"unary","children":[],"call":[" visit ","node left "]}," ActionDispatch Journey Visitors FunctionalVisitor visit_OR":{"type":"method","name":"visit_OR","children":[],"call":[" nary "]}," ActionDispatch Journey Visitors FunctionalVisitor nary":{"type":"method","name":"nary","children":[],"call":[" visit ","node children inject ","node children "]}," ActionDispatch Journey Visitors FunctionalVisitor visit_CAT":{"type":"method","name":"visit_CAT","children":[],"call":[" binary "]}," ActionDispatch Journey Visitors FunctionalVisitor binary":{"type":"method","name":"binary","children":[],"call":[" visit ","node left ","node right "]}," ActionDispatch Journey Visitors FunctionalVisitor visit":{"type":"method","name":"visit","children":[],"call":[" send ","DISPATCH_CACHE  [] ","node type "]}," ActionDispatch Journey Visitors FunctionalVisitor accept":{"type":"method","name":"accept","children":[],"call":[" visit "]}," ActionDispatch Journey Routes partition_route":{"type":"method","name":"partition_route","children":[],"call":[" custom_routes << "," custom_routes "," anchored_routes << "," anchored_routes ","route ast grep all? ","route ast grep ","route ast ","route path anchored ","route path ","route path requirements_anchored? "]}," ActionDispatch Journey Route match_verb":{"type":"method","name":"match_verb","children":[],"call":["m call ","@request_method_match any? "]}," ActionDispatch Journey Route verbs":{"type":"method","name":"verbs","children":[],"call":["@request_method_match map "]}," ActionDispatch Journey Route requires_matching_verb?":{"type":"method","name":"requires_matching_verb?","children":[],"call":["(send\n  (ivar :@request_method_match) :all?) ! ","x == ","@request_method_match all? "]}," ActionDispatch Journey Route build":{"type":"method","name":"build","children":[],"call":[]}," ActionDispatch Journey Route verb_matcher":{"type":"method","name":"verb_matcher","children":[],"call":[]}," ActionDispatch Journey Route VerbMatchers All verb":{"type":"method","name":"verb","children":[],"call":[]}," ActionDispatch Journey Route VerbMatchers All call":{"type":"method","name":"call","children":[],"call":[]}," ActionDispatch Journey Route VerbMatchers Unknown call":{"type":"method","name":"call","children":[],"call":["@verb === ","request request_method ","@verb == "]}," ActionDispatch Journey Route VerbMatchers Unknown initialize":{"type":"method","name":"initialize","children":[],"call":[]}," ActionDispatch Journey Path Pattern AnchoredRegexp visit_OR":{"type":"method","name":"visit_OR","children":[],"call":["children join "," visit ","node children map ","node children "]}," ActionDispatch Journey Path Pattern build":{"type":"method","name":"build","children":[],"call":[]}," ActionDispatch Journey Nodes Cat cat?":{"type":"method","name":"cat?","children":[],"call":[]}," ActionDispatch Journey Nodes Star star?":{"type":"method","name":"star?","children":[],"call":[]}," ActionDispatch Journey Nodes Group group?":{"type":"method","name":"group?","children":[],"call":[]}," ActionDispatch Journey Nodes Terminal terminal?":{"type":"method","name":"terminal?","children":[],"call":[]}," ActionDispatch Journey Nodes Node group?":{"type":"method","name":"group?","children":[],"call":[]}," ActionDispatch Journey Nodes Node cat?":{"type":"method","name":"cat?","children":[],"call":[]}," ActionDispatch Journey Nodes Node star?":{"type":"method","name":"star?","children":[],"call":[]}," ActionDispatch Journey Nodes Node terminal?":{"type":"method","name":"terminal?","children":[],"call":[]}," ActionDispatch Journey Formatter RegexCaseComparator ===":{"type":"method","name":"===","children":[],"call":[]}," ActionDispatch Response handle_no_content!":{"type":"method","name":"handle_no_content!","children":[],"call":["@header delete ","NO_CONTENT_CODES  include? ","@headers delete "]}," ActionDispatch Response set_content_type":{"type":"method","name":"set_content_type","children":[],"call":[" set_header ","type << ","(or\n  (lvar :content_type)\n  (str \"\")) dup ","charset to_s downcase ","charset to_s ","(or\n  (lvar :content_type)\n  (str \"\")) dup  << ","(or\n  (lvar :content_(or\n  (lvar :content_type)\n  (str \"\")) dup )\n  (str \"\")) dup "]}," ActionDispatch Response parse_content_type":{"type":"method","name":"parse_content_type","children":[],"call":["ContentTypeHeader  new ","type empty? ","content_type split "," get_header ","match [] ","CONTENT_TYPE_PARSER  match "," get_header  split ","CONTENT_TYPE_PARSER  match  [] ","CONTENT_TYPE_PARSER  CONTENT_TYPE_PARSER  match  "]}," ActionDispatch Response reset_body!":{"type":"method","name":"reset_body!","children":[],"call":[" build_buffer "]}," ActionDispatch Response send_file":{"type":"method","name":"send_file","children":[],"call":["FileBody  new "," commit! "]}," ActionDispatch Response FileBody each":{"type":"method","name":"each","children":[],"call":["file read ","File  open "," to_path "]}," ActionDispatch Response FileBody body":{"type":"method","name":"body","children":[],"call":["File  binread "," to_path "]}," ActionDispatch Response FileBody initialize":{"type":"method","name":"initialize","children":[],"call":[]}," ActionDispatch Response charset":{"type":"method","name":"charset","children":[],"call":[" class default_charset "," class ","header_info charset "," parse_content_type "," parsed_content_type_header "," parse_content_type  charset "," parsed_content_type_header  charset "]}," ActionDispatch Response charset=":{"type":"method","name":"charset=","children":[],"call":[" set_content_type "," class default_charset "," class ","header_info mime_type "," set_header "," == "," parse_content_type "," parsed_content_type_header "," parsed_content_type_header mime_type "," set_header_info mime_type  "," set_ parsed_content_type_header mime_type  "," parse_content_type  mime_type "," parsed_content_type_header  mime_type "," parse_header_info mime_type  "," parse_ parsed_content_type_header mime_type  "," parsed_header_info mime_type _header "," parsed_ parsed_content_type_header mime_type _header "," parsed_header_info mime_type _header mime_type "," parsed_ parsed_content_type_header mime_type _header mime_type "]}," ActionDispatch Response sending_file=":{"type":"method","name":"sending_file=","children":[],"call":[" charset= "," == "]}," ActionDispatch Response content_type":{"type":"method","name":"content_type","children":[],"call":[" parse_content_type mime_type "," parse_content_type "," parsed_content_type_header mime_type "," parsed_content_type_header "," presence ","content_type split [] presence ","content_type split [] ","content_type split ","ActiveSupport Deprecation  warn "," class return_only_media_type_on_content_type "," class "]}," ActionDispatch Response delete_header":{"type":"method","name":"delete_header","children":[],"call":[" headers delete "," headers ","@headers delete "]}," ActionDispatch Response set_header":{"type":"method","name":"set_header","children":[],"call":[" headers []= "," headers ","@headers []= "]}," ActionDispatch Response get_header":{"type":"method","name":"get_header","children":[],"call":[" headers [] "," headers ","@headers [] "]}," ActionDispatch Response has_header?":{"type":"method","name":"has_header?","children":[],"call":[" headers key? "," headers ","@headers key? "]}," ActionDispatch Response create":{"type":"method","name":"create","children":[],"call":[" default_headers "]}," ActionDispatch Response Buffer each_chunk":{"type":"method","name":"each_chunk","children":[],"call":["@buf each "]}," ActionDispatch Response Buffer body":{"type":"method","name":"body","children":[],"call":["buf << "," each "," dup "," +@ "," dup  << "," +@  << "]}," ActionDispatch Response Header to_hash":{"type":"method","name":"to_hash","children":[],"call":[" __getobj__ dup "," __getobj__ "]}," ActionDispatch Response Header merge":{"type":"method","name":"merge","children":[],"call":[" class new "," __getobj__ merge "," __getobj__ "," class "]}," ActionDispatch Response Header []=":{"type":"method","name":"[]=","children":[],"call":[" raise ","@response sent? ","@response sending? "]}," ActionDispatch Response Header initialize":{"type":"method","name":"initialize","children":[],"call":[]}," ActionDispatch Request ssl?":{"type":"method","name":"ssl?","children":[],"call":[" scheme == ","wss freeze "," scheme "]}," ActionDispatch Request commit_flash":{"type":"method","name":"commit_flash","children":[],"call":[]}," ActionDispatch Request logger":{"type":"method","name":"logger","children":[],"call":[" get_header ","action_dispatch.logger freeze "]}," ActionDispatch Request request_parameters=":{"type":"method","name":"request_parameters=","children":[],"call":[" set_header ","action_dispatch.request.request_parameters freeze "," raise ","params nil? "]}," ActionDispatch Request request_id=":{"type":"method","name":"request_id=","children":[],"call":[" set_header "]}," ActionDispatch Request request_id":{"type":"method","name":"request_id","children":[],"call":[" get_header "]}," ActionDispatch Request remote_ip=":{"type":"method","name":"remote_ip=","children":[],"call":[" set_header ","action_dispatch.remote_ip freeze "]}," ActionDispatch Request show_exceptions?":{"type":"method","name":"show_exceptions?","children":[],"call":["(send\n  (send nil :get_header\n    (send\n      (str \"action_dispatch.show_exceptions\") :freeze)) :==\n  (false)) ! "," get_header == "," get_header ","action_dispatch.show_exceptions freeze ","(send\n  (send nil :get_header\n    (str \"action_dispatch.show_exceptions\")) :==\n  (false)) ! "]}," ActionDispatch Request http_auth_salt":{"type":"method","name":"http_auth_salt","children":[],"call":[" get_header "]}," ActionDispatch Request controller_instance=":{"type":"method","name":"controller_instance=","children":[],"call":[" set_header ","action_controller.instance freeze "]}," ActionDispatch Request controller_instance":{"type":"method","name":"controller_instance","children":[],"call":[" get_header ","action_controller.instance freeze "]}," ActionDispatch Request engine_script_name=":{"type":"method","name":"engine_script_name=","children":[],"call":[" set_header ","name dup "," routes env_key "," routes "]}," ActionDispatch Request engine_script_name":{"type":"method","name":"engine_script_name","children":[],"call":[" get_header ","_routes env_key "]}," ActionDispatch Request routes=":{"type":"method","name":"routes=","children":[],"call":[" set_header ","action_dispatch.routes freeze "]}," ActionDispatch Request routes":{"type":"method","name":"routes","children":[],"call":[" get_header ","action_dispatch.routes freeze "]}," ActionDispatch Request controller_class":{"type":"method","name":"controller_class","children":[],"call":["ActiveSupport Dependencies  constantize ","controller_param camelize ","params [] ","params [] underscore ","params key? "," path_parameters "," check_path_parameters! "," controller_class_for ","params [] underscore  camelize "," path_parameters  [] "," path_parameters  [] underscore "," path_parameters  key? "]}," ActionDispatch Request call":{"type":"method","name":"call","children":[],"call":[]}," ActionDispatch Request action":{"type":"method","name":"action","children":[],"call":[]}," ActionDispatch Request empty":{"type":"method","name":"empty","children":[],"call":[]}," ActionDispatch Http Parameters params_parsers":{"type":"method","name":"params_parsers","children":[],"call":["ActionDispatch Request  parameter_parsers "]}," ActionDispatch Http Parameters parse_formatted_parameters":{"type":"method","name":"parse_formatted_parameters","children":[],"call":[" raise ","my_logger debug "," raw_post ","ActiveSupport Logger  new "," logger ","strategy call ","parsers fetch "," content_mime_type symbol "," content_mime_type "," content_length zero? "," content_length "," content_mime_type nil? "," log_parse_error_once "]}," ActionDispatch Http Parameters ClassMethods parameter_parsers=":{"type":"method","name":"parameter_parsers=","children":[],"call":["key symbol ","key respond_to? ","parsers transform_keys "]}," Mime AllType html?":{"type":"method","name":"html?","children":[],"call":[]}," Mime AllType all?":{"type":"method","name":"all?","children":[],"call":[]}," Mime AllType initialize":{"type":"method","name":"initialize","children":[],"call":[]}," Mime Type all?":{"type":"method","name":"all?","children":[],"call":[]}," Mime Type AcceptList find_item_by_name":{"type":"method","name":"find_item_by_name","children":[],"call":[]}," Mime Type AcceptList sort!":{"type":"method","name":"sort!","children":[],"call":[]}," Mime const_defined?":{"type":"method","name":"const_defined?","children":[],"call":["ActiveSupport Deprecation  warn ","(str \"          Accessing mime types via constants is deprecated.\\n\") squish ","Mime  [] ","sym downcase "]}," Mime const_missing":{"type":"method","name":"const_missing","children":[],"call":["Mime  [] ","ActiveSupport Deprecation  warn ","(str \"          Accessing mime types via constants is deprecated.\\n\") squish ","sym downcase "]}," Mime Mimes delete_if":{"type":"method","name":"delete_if","children":[],"call":["(send\n  (ivar :@mimes) :delete_if) tap ","@mimes delete_if ","@symbols delete ","x to_sym ","@symbols_set delete "]}," Mime Mimes <<":{"type":"method","name":"<<","children":[],"call":["@mimes << ","@symbols << ","type to_sym ","@symbols_set << "]}," Mime Mimes each":{"type":"method","name":"each","children":[],"call":["@mimes each "]}," Mime Mimes initialize":{"type":"method","name":"initialize","children":[],"call":["Set  new "]}," ActionDispatch Http MimeNegotiation format_from_path_extension":{"type":"method","name":"format_from_path_extension","children":[],"call":["Mime  [] ","match captures first ","match captures ","path match "," get_header ","@env [] "]}," ActionDispatch Http MimeNegotiation variant":{"type":"method","name":"variant","children":[],"call":["ActiveSupport ArrayInquirer  new "]}," ActionDispatch Http MimeNegotiation has_content_type?":{"type":"method","name":"has_content_type?","children":[],"call":[" has_header? "," get_header "]}," ActionDispatch Http Headers env":{"type":"method","name":"env","children":[],"call":["@req env dup ","@req env "]}," ActionDispatch Http Headers add":{"type":"method","name":"add","children":[],"call":["@req add_header "," env_name "]}," ActionDispatch Http Headers from_hash":{"type":"method","name":"from_hash","children":[],"call":[]}," ActionDispatch Http FilterRedirect location_filters":{"type":"method","name":"location_filters","children":[],"call":[" request get_header "," request "]}," ActionDispatch Http Cache Response generate_strong_etag":{"type":"method","name":"generate_strong_etag","children":[],"call":["Digest MD5  hexdigest ","ActiveSupport Cache  expand_cache_key ","ActiveSupport Digest  hexdigest "]}," ActionDispatch Http Cache Response generate_weak_etag":{"type":"method","name":"generate_weak_etag","children":[],"call":[" generate_strong_etag "]}," ActionDispatch Http Cache Response strong_etag?":{"type":"method","name":"strong_etag?","children":[],"call":[" weak_etag? ! "," weak_etag? "," etag? "]}," ActionDispatch Http Cache Response weak_etag?":{"type":"method","name":"weak_etag?","children":[],"call":[" etag starts_with? "," etag "," etag? "," etag start_with? "]}," ActionDispatch Http Cache Response strong_etag=":{"type":"method","name":"strong_etag=","children":[],"call":[" set_header "," generate_strong_etag "]}," ActionDispatch Http Cache Response weak_etag=":{"type":"method","name":"weak_etag=","children":[],"call":[" set_header "," generate_weak_etag "]}," ActionController TestCase Behavior non_kwarg_request_warning":{"type":"method","name":"non_kwarg_request_warning","children":[],"call":["ActiveSupport Deprecation  warn ","(str \"          ActionController::TestCase HTTP request methods will accept only\\n\") strip_heredoc ","(str \"          Using positional arguments in functional tests has been deprecated,\\n\") strip_heredoc "]}," ActionController TestCase Behavior kwarg_request?":{"type":"method","name":"kwarg_request?","children":[],"call":["REQUEST_KWARGS  include? ","args [] keys any? ","args [] keys ","args [] ","args [] keys size == ","args [] keys size ","args [] key? ","args [] respond_to? ","FORMAT_KWARGS  include? ","args [] keys all? ","args size == ","args size "]}," ActionController TestCase Behavior process_with_kwargs":{"type":"method","name":"process_with_kwargs","children":[],"call":[" process ","args unshift "," non_kwarg_request_warning ","args any? ","args first merge! ","args first "," kwarg_request? ","args unshift  unshift ","args unshift  any? ","args unshift  first merge! ","args unshift  first "]}," ActionController TestCase Behavior scrub_env!":{"type":"method","name":"scrub_env!","children":[],"call":["env delete ","k =~ ","env delete_if ","env []= ","StringIO  new ","k start_with? "]}," ActionController TestCase Behavior query_parameter_names":{"type":"method","name":"query_parameter_names","children":[],"call":["generated_extras [] + ","generated_extras [] "]}," ActionController TestCase Behavior generated_path":{"type":"method","name":"generated_path","children":[],"call":["generated_extras [] "]}," ActionController TestCase Behavior controller_class_name":{"type":"method","name":"controller_class_name","children":[],"call":["@controller class controller_path ","@controller class ","@controller class anonymous? "]}," ActionController TestRequest params_parsers":{"type":"method","name":"params_parsers","children":[],"call":[" merge "]}," ActionController TestRequest content_type":{"type":"method","name":"content_type","children":[],"call":[]}," ActionController TestRequest should_multipart?":{"type":"method","name":"should_multipart?","children":[],"call":["params values each ","params values ","value values each ","value values ","value each "," lambda "]}," ActionController TestRequest content_type=":{"type":"method","name":"content_type=","children":[],"call":[" set_header "]}," ActionController TestRequest query_string=":{"type":"method","name":"query_string=","children":[],"call":[" set_header "]}," ActionController TestRequest create":{"type":"method","name":"create","children":[],"call":[]}," ActionController TestRequest new_session":{"type":"method","name":"new_session","children":[],"call":[]}," ActionController Live new_controller_thread":{"type":"method","name":"new_controller_thread","children":[],"call":["t2 abort_on_exception= ","Thread  current ","Thread  new ","Thread  current  abort_on_exception= "]}," ActionController Renderer rack_value_for":{"type":"method","name":"rack_value_for","children":[],"call":["RACK_VALUE_TRANSLATION  fetch call ","RACK_VALUE_TRANSLATION  fetch ","value upcase -@ ","value upcase "]}," ActionController Renderer rack_key_for":{"type":"method","name":"rack_key_for","children":[],"call":["RACK_KEY_TRANSLATION  [] ","RACK_KEY_TRANSLATION  fetch ","key to_s "]}," ActionController Renderer normalize_keys":{"type":"method","name":"normalize_keys","children":[],"call":["new_env []= "," rack_value_for "," rack_key_for ","env each_pair ","new_env [] == ","new_env [] ","new_env key? ","defaults each_pair "," rack_ rack_key_for _for ","new_env  rack_key_for ? "]}," ActionController Renderer render":{"type":"method","name":"render","children":[],"call":["instance render_to_string ","instance set_response! "," controller make_response! "," controller ","instance set_request! "," controller new ","request routes= "," controller _routes ","ActionDispatch Request  new "," raise "," env_for_request "," controller new  render_to_string "," controller new  set_response! "," controller new  set_request! ","instance set_ActionDispatch Request  new ! ","ActionDispatch Request  new  routes= "," env_for_ActionDispatch Request  new  "]}," ActionController Renderer initialize":{"type":"method","name":"initialize","children":[],"call":[" normalize_keys ","defaults merge ","@env merge! "," normalize_env ","env blank? ","@defaults == "," normalize_keys  merge! "," normalize_env  merge! "]}," ActionController Renderer with_defaults":{"type":"method","name":"with_defaults","children":[],"call":[" class new "," defaults merge "," defaults "," env "," controller "," class ","@defaults merge "]}," ActionController Renderer new":{"type":"method","name":"new","children":[],"call":[" class new "," defaults "," controller "," class "]}," ActionController Renderer for":{"type":"method","name":"for","children":[],"call":["DEFAULTS  dup "]}," ActionController Metal reset_session":{"type":"method","name":"reset_session","children":[],"call":["@_request reset_session "]}," ActionController Metal set_request!":{"type":"method","name":"set_request!","children":[],"call":["@_request controller_instance= "]}," ActionController Metal set_response!":{"type":"method","name":"set_response!","children":[],"call":["body close ","body respond_to? "]}," ActionController Metal make_response!":{"type":"method","name":"make_response!","children":[],"call":[]}," ActionController MiddlewareStack build_middleware":{"type":"method","name":"build_middleware","children":[],"call":["Middleware  new "," get_class ","except any? ","only any? ","args << ","options empty? "," Array map "," Array ","options delete ","args extract_options! "," Array map  any? ","args extract_options!  empty? ","args extract_options!  delete ","args extract_args extract_options! ! "]}," ActionController Parameters non_scalar?":{"type":"method","name":"non_scalar?","children":[],"call":["value is_a? "]}," ActionController Parameters convert_parameters_to_hashes":{"type":"method","name":"convert_parameters_to_hashes","children":[],"call":["value send ","(send\n  (lvar :value) :transform_values) with_indifferent_access "," convert_parameters_to_hashes ","value transform_values ","value map ","value to_h ","(if\n  (send nil :block_given?)\n  (send\n    (lvar :transformed) :to_h\n    (block-pass\n      (lvar :block)))\n  (lvar :transformed)) with_indifferent_access ","transformed to_h "," block_given? "]}," ActionController Parameters method_missing":{"type":"method","name":"method_missing","children":[],"call":["@parameters public_send ","ActiveSupport Deprecation  warn ","(str \"          Method \") squish ","ActionPack  version ","@parameters respond_to? "]}," ActionController Parameters inspect":{"type":"method","name":"inspect","children":[],"call":[" class "]}," ActionController Parameters stringify_keys":{"type":"method","name":"stringify_keys","children":[],"call":[" dup "]}," ActionController Parameters merge":{"type":"method","name":"merge","children":[],"call":[" new_instance_with_inherited_permitted_status ","@parameters merge ","other_hash to_h "]}," ActionController Parameters values_at":{"type":"method","name":"values_at","children":[],"call":[" convert_value_to_parameters ","@parameters values_at "]}," ActionController Parameters reject!":{"type":"method","name":"reject!","children":[],"call":["@parameters reject! "]}," ActionController Parameters reject":{"type":"method","name":"reject","children":[],"call":[" new_instance_with_inherited_permitted_status ","@parameters reject "]}," ActionController Parameters select":{"type":"method","name":"select","children":[],"call":[" new_instance_with_inherited_permitted_status ","@parameters select "]}," ActionController Parameters transform_keys!":{"type":"method","name":"transform_keys!","children":[],"call":["@parameters transform_keys! "," to_enum "," block_given? "]}," ActionController Parameters transform_values!":{"type":"method","name":"transform_values!","children":[],"call":["@parameters transform_values! "," convert_value_to_parameters "," to_enum "," block_given? "]}," ActionController Parameters except":{"type":"method","name":"except","children":[],"call":[" new_instance_with_inherited_permitted_status ","@parameters except "]}," ActionController Parameters slice!":{"type":"method","name":"slice!","children":[],"call":["@parameters slice! "]}," ActionController Parameters dig":{"type":"method","name":"dig","children":[],"call":[" convert_value_to_parameters ","@parameters dig "," convert_hashes_to_parameters ","@parameters [] ","keys first "]}," ActionController Parameters []=":{"type":"method","name":"[]=","children":[],"call":["@parameters []= "]}," ActionController Parameters ==":{"type":"method","name":"==","children":[],"call":["@parameters == ","other with_indifferent_access ","ActiveSupport Deprecation  warn ","(str \"          Comparing equality between `ActionController::Parameters` and a\\n\") squish ","other is_a? "," parameters == ","other parameters "," parameters "," permitted? == ","other permitted? "," permitted? ","other respond_to? ","other_hash respond_to? ","other_hash with_indifferent_access ","other_hash is_a? ","ActionController  deprecator warn ","(str \"            Comparing equality between `ActionController::Parameters` and a\\n\") squish ","ActionController  deprecator ","Hash  === "," class allow_deprecated_parameters_hash_equality "," class "]}," ActionController RequestForgeryProtection normalize_action_path":{"type":"method","name":"normalize_action_path","children":[],"call":["uri path chomp ","uri path ","URI  parse ","action_path split first to_s chomp ","action_path split first to_s ","action_path split first ","action_path split ","URI  parse  path chomp ","URI  parse  path "]}," ActionController RequestForgeryProtection valid_request_origin?":{"type":"method","name":"valid_request_origin?","children":[],"call":[" request origin == "," request base_url "," request "," request origin "," request origin nil? "," forgery_protection_origin_check "," raise "]}," ActionController RequestForgeryProtection per_form_csrf_token":{"type":"method","name":"per_form_csrf_token","children":[],"call":["OpenSSL HMAC  digest ","(lvar :action_path) join ","method downcase "," real_csrf_token ","OpenSSL Digest SHA256  new "," csrf_token_hmac "]}," ActionController RequestForgeryProtection valid_per_form_csrf_token?":{"type":"method","name":"valid_per_form_csrf_token?","children":[],"call":["ActiveSupport SecurityUtils  secure_compare "," per_form_csrf_token "," request request_method "," request "," normalize_action_path "," request fullpath "," per_form_csrf_tokens ","ActiveSupport SecurityUtils  fixed_length_secure_compare "," request path chomp "," request path "]}," ActionController RequestForgeryProtection unmask_token":{"type":"method","name":"unmask_token","children":[],"call":[" xor_byte_strings ","masked_token [] "]}," ActionController RequestForgeryProtection request_authenticity_tokens":{"type":"method","name":"request_authenticity_tokens","children":[],"call":[" request x_csrf_token "," request "," form_authenticity_param "]}," ActionController RequestForgeryProtection any_authenticity_token_valid?":{"type":"method","name":"any_authenticity_token_valid?","children":[],"call":[" valid_authenticity_token? "," session "," request_authenticity_tokens any? "," request_authenticity_tokens "]}," ActionController Rendering _set_rendered_content_type":{"type":"method","name":"_set_rendered_content_type","children":[],"call":[" content_type= ","format to_s "," response content_type "," response "," response content_type ! "," response media_type ! "," response media_type "]}," ActionController Rendering _set_html_content_type":{"type":"method","name":"_set_html_content_type","children":[],"call":[" content_type= ","Mime  [] to_s ","Mime  [] "]}," ActionController Rendering ClassMethods inherited":{"type":"method","name":"inherited","children":[],"call":["klass setup_renderer! "]}," ActionController Rendering ClassMethods setup_renderer!":{"type":"method","name":"setup_renderer!","children":[],"call":["Renderer  for "]}," ActionController Redirecting redirect_back":{"type":"method","name":"redirect_back","children":[],"call":[" redirect_to "," request headers [] "," request headers "," request "," _url_host_allowed? "," request headers fetch "," redirect_back_or_to "]}," ActionController MimeResponds Collector VariantCollector variant_key":{"type":"method","name":"variant_key","children":[],"call":["@variants key? ","@variant find "]}," ActionController Live Buffer each_chunk":{"type":"method","name":"each_chunk","children":[],"call":["@buf pop ","ActiveSupport Dependencies  interlock permit_concurrent_loads ","ActiveSupport Dependencies  interlock "," loop "]}," ActionController Live ClassMethods make_response!":{"type":"method","name":"make_response!","children":[],"call":["res request= ","Live Response  new tap ","Live Response  new ","request get_header == ","request get_header "]}," ActionController ImplicitRender interactive_browser_request?":{"type":"method","name":"interactive_browser_request?","children":[],"call":[" request xhr? ! "," request xhr? "," request "," request format == ","Mime  [] "," request format "," request get? "]}," ActionController Helpers helpers":{"type":"method","name":"helpers","children":[],"call":[" view_context "]}," ActionController BadRequest original_exception":{"type":"method","name":"original_exception","children":[],"call":[" cause ","ActiveSupport Deprecation  warn "," caller "]}," ActionController ConditionalGet http_cache_forever":{"type":"method","name":"http_cache_forever","children":[],"call":[" stale? ","Time  new utc ","Time  new "," request fullpath "," request "," expires_in ","100 years ","Time  parse utc ","Time  parse "]}," ActionController BasicImplicitRender default_render":{"type":"method","name":"default_render","children":[],"call":[" head "]}," ActionController BasicImplicitRender send_action":{"type":"method","name":"send_action","children":[],"call":[" default_render "," performed? "," tap "]}," ActionController FormBuilder default_form_builder":{"type":"method","name":"default_form_builder","children":[],"call":[" class _default_form_builder "," class "]}," ActionController FormBuilder ClassMethods default_form_builder":{"type":"method","name":"default_form_builder","children":[],"call":[" _default_form_builder= "]}," ActionController Caching instrument_name":{"type":"method","name":"instrument_name","children":[],"call":["action_controller freeze "]}," ActionController Caching instrument_payload":{"type":"method","name":"instrument_payload","children":[],"call":[" action_name "," controller_name "]}," ActionController API without_modules":{"type":"method","name":"without_modules","children":[],"call":[]}," ActionController ApiRendering render_to_body":{"type":"method","name":"render_to_body","children":[],"call":[" _process_options "]}," AbstractController eager_load!":{"type":"method","name":"eager_load!","children":[],"call":[]}," AbstractController Rendering _set_rendered_content_type":{"type":"method","name":"_set_rendered_content_type","children":[],"call":[]}," AbstractController Rendering _set_html_content_type":{"type":"method","name":"_set_html_content_type","children":[],"call":[]}," AbstractController Caching cache":{"type":"method","name":"cache","children":[],"call":[" cache_store fetch ","ActiveSupport Cache  expand_cache_key "," cache_store "," cache_configured? "]}," AbstractController Caching view_cache_dependencies":{"type":"method","name":"view_cache_dependencies","children":[],"call":["(send\n  (send\n    (send\n      (self) :class) :_view_cache_dependencies) :map) compact "," instance_exec "," class _view_cache_dependencies map "," class _view_cache_dependencies "," class "," class _view_cache_dependencies filter_map "]}," AbstractController Caching ClassMethods view_cache_dependency":{"type":"method","name":"view_cache_dependency","children":[],"call":[" _view_cache_dependencies "]}," AbstractController Caching ConfigMethods cache_configured?":{"type":"method","name":"cache_configured?","children":[],"call":[" cache_store "," perform_caching "]}," AbstractController Caching ConfigMethods cache_store=":{"type":"method","name":"cache_store=","children":[],"call":[" config cache_store= ","ActiveSupport Cache  lookup_store "," config "]}," AbstractController Caching ConfigMethods cache_store":{"type":"method","name":"cache_store","children":[],"call":[" config cache_store "," config "]}," AbstractController Caching Fragments instrument_fragment_cache":{"type":"method","name":"instrument_fragment_cache","children":[],"call":["ActiveSupport Notifications  instrument "," instrument_name "," instrument_payload "," instrument_ instrument_payload  "]}," AbstractController Caching Fragments expire_fragment":{"type":"method","name":"expire_fragment","children":[],"call":[" cache_store delete "," cache_store "," cache_store delete_matched ","key is_a? "," instrument_fragment_cache "," fragment_cache_key "," cache_configured? "," combined_fragment_cache_key "," fragment_cache_key  is_a? "," combined_fragment_cache_key  is_a? "," fragment_cache_ fragment_cache_key  "," fragment_cache_ combined_fragment_cache_key  "," combined_fragment_cache_ fragment_cache_key  "," combined_fragment_cache_ combined_fragment_cache_key  "]}," AbstractController Caching Fragments fragment_exist?":{"type":"method","name":"fragment_exist?","children":[],"call":[" cache_store exist? "," cache_store "," instrument_fragment_cache "," fragment_cache_key "," cache_configured? "," combined_fragment_cache_key "," fragment_cache_ fragment_cache_key  "," fragment_cache_ combined_fragment_cache_key  "," combined_fragment_cache_ fragment_cache_key  "," combined_fragment_cache_ combined_fragment_cache_key  "]}," AbstractController Caching Fragments read_fragment":{"type":"method","name":"read_fragment","children":[],"call":["result html_safe ","result respond_to? "," cache_store read "," cache_store "," instrument_fragment_cache "," fragment_cache_key "," cache_configured? "," combined_fragment_cache_key "," cache_store read  html_safe "," cache_store read  respond_to? "," fragment_cache_ fragment_cache_key  "," fragment_cache_ combined_fragment_cache_key  "," combined_fragment_cache_ fragment_cache_key  "," combined_fragment_cache_ combined_fragment_cache_key  "]}," AbstractController Caching Fragments write_fragment":{"type":"method","name":"write_fragment","children":[],"call":[" cache_store write "," cache_store ","content to_str "," instrument_fragment_cache "," fragment_cache_key "," cache_configured? "," combined_fragment_cache_key ","content to_str  to_str "," fragment_cache_ fragment_cache_key  "," fragment_cache_ combined_fragment_cache_key  "," combined_fragment_cache_ fragment_cache_key  "," combined_fragment_cache_ combined_fragment_cache_key  "]}," AbstractController Caching Fragments fragment_cache_key":{"type":"method","name":"fragment_cache_key","children":[],"call":["ActiveSupport Cache  expand_cache_key "," url_for split last "," url_for split "," url_for ","key is_a? "," instance_exec "," class fragment_cache_keys map "," class fragment_cache_keys "," class ","ActiveSupport Deprecation  warn ","(str \"          Calling fragment_cache_key directly is deprecated and will be removed in Rails 6.0.\\n\") squish "]}," AbstractController Caching Fragments ClassMethods fragment_cache_key":{"type":"method","name":"fragment_cache_key","children":[],"call":[" lambda "," fragment_cache_keys "]}," AbstractController Base performed?":{"type":"method","name":"performed?","children":[],"call":[" response_body "]}," ActionDispatch LoadInterlock call":{"type":"method","name":"call","children":[],"call":["interlock done_running ","response []= ","Rack BodyProxy  new ","response [] ","@app call ","interlock start_running ","ActiveSupport Dependencies  interlock ","ActiveSupport Dependencies  interlock  done_running ","@app call  []= ","@app call  [] ","ActiveSupport Dependencies  interlock  start_running ","ActiveSupport Dependencies  ActiveSupport Dependencies  interlock  "]}," ActionDispatch LoadInterlock initialize":{"type":"method","name":"initialize","children":[],"call":[]}," ActionDispatch Http Parameters included":{"type":"method","name":"included","children":[],"call":[]}," ActionController Caching Fragments ClassMethods fragment_cache_key":{"type":"method","name":"fragment_cache_key","children":[],"call":[" lambda "," fragment_cache_keys "]}," ActionDispatch IntegrationTest register_encoder":{"type":"method","name":"register_encoder","children":[],"call":[]}," ActionDispatch TestResponse initialize":{"type":"method","name":"initialize","children":[],"call":["RequestEncoder  parser "," content_type "]}," ActionDispatch TestProcess FixtureFile fixture_file_upload":{"type":"method","name":"fixture_file_upload","children":[],"call":["Rack Test UploadedFile  new ","File  join "," class fixture_path "," class ","File  exist? ! ","File  exist? "," class respond_to? "," file_fixture "," class file_fixture_path ","ActiveSupport Deprecation  warn ","path relative_path_from "," Pathname ","path exist? "," class file_fixture_path ! ","Pathname  new join ","Pathname  new "," Pathname relative_path_from ","File  absolute_path "," Pathname != "," class fixture_File  join  "," class fixture_ file_fixture  "," class fixture_Pathname  new join  "," class file_fixture_File  join  "," class file_fixture_ file_fixture  "," class file_fixture_Pathname  new join  ","File  join  relative_File  join _from "," file_fixture  relative_ file_fixture _from ","Pathname  new join  relative_Pathname  new join _from ","File  join  exist? "," file_fixture  exist? ","Pathname  new join  exist? "," class file_fixture_File  join  ! "," class file_fixture_ file_fixture  ! "," class file_fixture_Pathname  new join  ! "," Pathname relative_File  join _from "," Pathname relative_ file_fixture _from "," Pathname relative_Pathname  new join _from ","File  absolute_File  join  ","File  absolute_ file_fixture  ","File  absolute_Pathname  new join  "]}," ActionDispatch RequestEncoder register_encoder":{"type":"method","name":"register_encoder","children":[],"call":[]}," ActionDispatch RequestEncoder encoder":{"type":"method","name":"encoder","children":[],"call":[]}," ActionDispatch RequestEncoder parser":{"type":"method","name":"parser","children":[],"call":[]}," ActionDispatch RequestEncoder encode_params":{"type":"method","name":"encode_params","children":[],"call":["@param_encoder call "]}," ActionDispatch RequestEncoder accept_header":{"type":"method","name":"accept_header","children":[],"call":["@mime to_s "]}," ActionDispatch RequestEncoder content_type":{"type":"method","name":"content_type","children":[],"call":["@mime to_s "]}," ActionDispatch RequestEncoder initialize":{"type":"method","name":"initialize","children":[],"call":["(str \"to_\") to_proc ","@mime symbol "," lambda "," raise ","Mime  [] ","Mime  []  symbol "]}," ActionDispatch RequestEncoder IdentityEncoder response_parser":{"type":"method","name":"response_parser","children":[],"call":[" lambda "]}," ActionDispatch RequestEncoder IdentityEncoder encode_params":{"type":"method","name":"encode_params","children":[],"call":[]}," ActionDispatch RequestEncoder IdentityEncoder accept_header":{"type":"method","name":"accept_header","children":[],"call":[]}," ActionDispatch RequestEncoder IdentityEncoder content_type":{"type":"method","name":"content_type","children":[],"call":[]}," ActionDispatch Routing Mapper Resources map_match":{"type":"method","name":"map_match","children":[],"call":[" decomposed_match ","options dup ","path_types fetch each ","path_types fetch "," get_to_from_path ","route_options [] ","route_options []= ","ActiveSupport Deprecation  warn ","_path inspect ","option_path inspect ","paths group_by ","options delete ","@scope [] ","Mapping  check_via "," Array ","options [] "," raise "," on inspect "," on ","VALID_ON_OPTIONS  include? ! ","VALID_ON_OPTIONS  include? ","(or\n  (send\n    (lvar :path_types) :[]\n    (const nil :Symbol))\n  (array)) each ","path_types [] ","(or\n  (send\n    (lvar :path_types) :[]\n    (const nil :String))\n  (array)) each ","on inspect ","optioptions [] s dup ","paths group_by  fetch each ","paths group_by  fetch "," get_ get_to_from_path _from_path "," get_options delete _from_path ","options dup  [] ","route_optioptions [] s [] ","options dup  []= ","route_optioptions [] s []= ","ActiveSupport Deprecatioptions []   warn ","options delete  inspect ","optioptions [] _path inspect ","optioptions [] s delete ","Mapping  check_Mapping  check_via  ","optioptions [] s [] "," options []  inspect "," options []  ","(or\n  (send\n    (lvar :paths group_by ) :[]\n    (const nil :Symbol))\n  (array)) each ","(or\n  (send\n    (lvar :path_types) :[]\n    (coptions [] st nil :Symbol))\n  (array)) each ","paths group_by  [] ","(or\n  (send\n    (lvar :paths group_by ) :[]\n    (const nil :String))\n  (array)) each ","(or\n  (send\n    (lvar :path_types) :[]\n    (coptions [] st nil :String))\n  (array)) each ","options []  inspect "]}," ActionDispatch SSL redirection_status":{"type":"method","name":"redirection_status","children":[],"call":["request head? ","request get? ","PERMANENT_REDIRECT_REQUEST_METHODS  include? ","request raw_request_method "]}," ActionDispatch DebugLocks blocked_by?":{"type":"method","name":"blocked_by?","children":[],"call":["other [] include? ","blocker [] ","other [] ","blocker equal? ","other [] ! ","all_threads all? ","victim [] include? ","victim [] ","blocker [] include? ! ","blocker [] include? ","blocker [] > ","victim [] ! ","victim equal? "]}," ActionDispatch DebugLocks render_details":{"type":"method","name":"render_details","children":[],"call":["str size ","(send\n  (lvar :threads) :map) join ","msg << ","info [] join ","info [] ","(send\n  (lvar :blockees) :map) join ","i [] ","blockees map ","blockees any? "," blocked_by? ","threads values ","threads values select ","(send\n  (lvar :blockers) :map) join ","blockers map ","blockers any? ","compat join ","c to_s inspect ","c to_s ","c == ","info [] map ","info [] to_s inspect ","info [] to_s ","info [] nil? ","thread status ","thread __id__ to_s ","thread __id__ ","lock_state << ","info [] > ","threads map ","info []= ","thread backtrace ","threads each with_index ","threads each ","ActiveSupport Dependencies  interlock raw_state ","ActiveSupport Dependencies  interlock ","(str \"Thread \") dup ","No lock dup ","Sharing dup ","Exclusive dup ","raw_threads each with_index ","raw_threads each ","(str \"Thread \") +@ ","No lock +@ ","Sharing +@ ","Exclusive +@ ","str size to_s ","ActionDispatch Response  default_charset ","(send\n  (lvar :threads) :map) join  size ","(str \"Thread \") dup  << ","(str \"Thread \") +@  << ","No lock dup  << ","Sharing dup  << ","Exclusive dup  << ","No lock +@  << ","Sharing +@  << ","Exclusive +@  << ","((send\n  (lvar :threads) :map) join  \"Thread \") dup ","((send\n  (lvar :threads) :map) join  \"Thread \") +@ ","(send\n  (lvar :threads) :map) join  size to_s "]}," ActionDispatch DebugLocks call":{"type":"method","name":"call","children":[],"call":["@app call "," render_details ","path == ","req path_info chomp ","/ freeze ","req path_info ","req get? ","ActionDispatch Request  new ","req path_info chomp  == ","req req path_info chomp _info chomp ","ActionDispatch Request  new  path_info chomp ","req req path_info chomp _info ","ActionDispatch Request  new  path_info ","ActionDispatch Request  new  get? "]}," ActionDispatch DebugLocks initialize":{"type":"method","name":"initialize","children":[],"call":[]}," ActionDispatch Response parsed_content_type_header":{"type":"method","name":"parsed_content_type_header","children":[],"call":[" parse_content_type "," get_header "]}," ActionController Parameters initialize_copy":{"type":"method","name":"initialize_copy","children":[],"call":["@parameters dup ","@parameters dup  dup "]}," ActionController Parameters deep_dup":{"type":"method","name":"deep_dup","children":[],"call":["duplicate permitted= "," class new tap "," class new ","@parameters deep_dup "," class "]}," ActionController Parameters init_with":{"type":"method","name":"init_with","children":[],"call":["coder map [] ","coder map ","coder map [] [] ","coder map [] with_indifferent_access ","coder map with_indifferent_access ","coder tag "]}," ActionController Parameters hook_into_yaml_loading":{"type":"method","name":"hook_into_yaml_loading","children":[],"call":[]}," ActionController Parameters merge!":{"type":"method","name":"merge!","children":[],"call":["@parameters merge! ","other_hash to_h "]}," ActionDispatch Integration Runner initialize":{"type":"method","name":"initialize","children":[],"call":[]}," ActionController Parameters respond_to?":{"type":"method","name":"respond_to?","children":[],"call":["@parameters respond_to? "]}," ActionController Parameters to_query":{"type":"method","name":"to_query","children":[],"call":["@parameters to_query "," to_h to_query "," to_h "," class raise_on_unfiltered_parameters "," class "]}," ActionController Parameters to_hash":{"type":"method","name":"to_hash","children":[],"call":["@parameters to_hash ","ActiveSupport Deprecation  warn ","(str \"          #to_hash unexpectedly ignores parameter filtering, and will change to enforce it in Rails 5.1.\\n\") squish "," to_h to_hash "," to_h "," class raise_on_unfiltered_parameters "," class "," permitted? "]}," ActionController UnfilteredParameters initialize":{"type":"method","name":"initialize","children":[],"call":[]}," ActionController Base make_response!":{"type":"method","name":"make_response!","children":[],"call":[]}," ActionDispatch Integration Runner respond_to_missing?":{"type":"method","name":"respond_to_missing?","children":[],"call":[" integration_session respond_to? "," integration_session "]}," ActionDispatch Integration Session build_expanded_path":{"type":"method","name":"build_expanded_path","children":[],"call":["location query ","location path "," block_given? ","URI  parse ","URI  parse  query ","location location path  ","URI  parse  path "]}," ActionDispatch Assertions ResponseAssertions response_body_if_short":{"type":"method","name":"response_body_if_short","children":[],"call":["@response body ","@response body size > ","@response body size "]}," ActionDispatch SystemTesting TestHelpers SetupAndTeardown after_teardown":{"type":"method","name":"after_teardown","children":[],"call":["Capybara  reset_sessions! "," take_failed_screenshot "]}," ActionDispatch SystemTesting TestHelpers SetupAndTeardown before_setup":{"type":"method","name":"before_setup","children":[],"call":[" host! "]}," ActionDispatch SystemTesting TestHelpers ScreenshotHelper supports_screenshot?":{"type":"method","name":"supports_screenshot?","children":[],"call":["Capybara  current_driver != ","Capybara  current_driver "]}," ActionDispatch SystemTesting TestHelpers ScreenshotHelper failed?":{"type":"method","name":"failed?","children":[],"call":[" skipped? ! "," skipped? "," passed? ! "," passed? "]}," ActionDispatch SystemTesting TestHelpers ScreenshotHelper inline_base64":{"type":"method","name":"inline_base64","children":[],"call":["Base64  encode64 gsub ","Base64  encode64 ","Base64  strict_encode64 "]}," ActionDispatch SystemTesting TestHelpers ScreenshotHelper display_image":{"type":"method","name":"display_image","children":[],"call":["message << "," inline_base64 ","File  read "," image_path ","File  basename "," output_type ","ENV  [] == ","ENV  [] "," absolute_image_path ","(str \"[Screenshot]: \") dup ","(str \"[Screenshot]: \") +@ ","(str \"[Screenshot HTML]: \") +@ "," html_path "," save_html? ","(str \"[Screenshot Image]: \") +@ ","(str \"[Screenshot]: \") dup  << ","(str \"[Screenshot]: \") +@  << ","(str \"[Screenshot Image]: \") +@  << ","  inline_base64 _path ","File  base inline_base64  "," absolute_ inline_base64 _path "]}," ActionDispatch SystemTesting TestHelpers ScreenshotHelper output_type":{"type":"method","name":"output_type","children":[],"call":["ENV  [] "]}," ActionDispatch SystemTesting TestHelpers ScreenshotHelper save_image":{"type":"method","name":"save_image","children":[],"call":[" page save_screenshot ","Rails  root join "," image_path ","Rails  root "," page "," absolute_image_path "]}," ActionDispatch SystemTesting TestHelpers ScreenshotHelper image_path":{"type":"method","name":"image_path","children":[],"call":[" image_name "," absolute_image_path relative_path_from to_s "," absolute_image_path relative_path_from ","Pathname  pwd "," absolute_image_path "," absolute_image_path to_s "]}," ActionDispatch SystemTesting TestHelpers ScreenshotHelper image_name":{"type":"method","name":"image_name","children":[],"call":[" method_name "," failed? "," method_name [] ","name [] "," unique "," method_name tr "," method_name gsub "," method_ method_name []  "," method_ method_name []  [] "," method_name []  [] "," method_ method_name []  tr "," method_ method_name []  gsub "]}," ActionDispatch SystemTesting TestHelpers ScreenshotHelper take_failed_screenshot":{"type":"method","name":"take_failed_screenshot","children":[],"call":[" take_screenshot "," supports_screenshot? "," failed? ","Capybara Session  instance_created? "," metadata []= "," relative_image_path "," metadata ","Minitest Runnable  method_defined? "]}," ActionDispatch SystemTesting TestHelpers ScreenshotHelper take_screenshot":{"type":"method","name":"take_screenshot","children":[],"call":[" puts "," display_image "," save_image "," image_path "," save_html "," save_html? "," increment_unique "," show "," html_from_env? "]}," ActionDispatch SystemTesting Server set_port":{"type":"method","name":"set_port","children":[],"call":["Capybara  always_include_port= "]}," ActionDispatch SystemTesting Server set_server":{"type":"method","name":"set_server","children":[],"call":["Capybara  server= "," class silence_puma "," class ","Capybara  server == ","Capybara  servers [] ","Capybara  servers ","Capybara  server "]}," ActionDispatch SystemTesting Server setup":{"type":"method","name":"setup","children":[],"call":[" set_port "," set_server "]}," ActionDispatch SystemTesting Server register":{"type":"method","name":"register","children":[],"call":["Rack Handler Puma  run ","Capybara  register_server "," class silence_puma "," class "]}," ActionDispatch SystemTesting Server run":{"type":"method","name":"run","children":[],"call":[" setup "," register "]}," ActionDispatch SystemTesting Driver setup":{"type":"method","name":"setup","children":[],"call":["Capybara  current_driver= "," name "]}," ActionDispatch SystemTesting Driver register":{"type":"method","name":"register","children":[],"call":["driver browser manage window size= ","Selenium WebDriver Dimension  new ","driver browser manage window ","driver browser manage ","driver browser ","Capybara Selenium Driver  new tap ","Capybara Selenium Driver  new ","(pair\n  (sym :browser)\n  (ivar :@browser)) merge ","Capybara  register_driver ","Capybara  default_driver= "," register_webkit "," register_poltergeist "," register_selenium "," define_browser_capabilities ","@browser capabilities ","@browser configure "," register_rack_test "," register_cuprite "," name "," register_playwright "]}," ActionDispatch SystemTesting Driver selenium?":{"type":"method","name":"selenium?","children":[],"call":["@name == "]}," ActionDispatch SystemTesting Driver use":{"type":"method","name":"use","children":[],"call":[" setup "," register "," selenium? "," rack_test? "," registerable? "]}," ActionDispatch SystemTesting Driver initialize":{"type":"method","name":"initialize","children":[],"call":["options [] ","Browser  new ","@browser preload ","name == "," require "," gem ","driver_type == ","ActiveSupport Deprecation  warn ","(str \"Poltergeist and capybara-webkit are not maintained already.\\n\") squish ","(sym :poltergeist) include? ","@options delete ","options []  preload ","Browser  new  preload ","options []  delete "]}," ActionDispatch SystemTestCase driven_by":{"type":"method","name":"driven_by","children":[],"call":[]}," ActionDispatch SystemTestCase start_application":{"type":"method","name":"start_application","children":[],"call":[]}," ActionDispatch SystemTestCase initialize":{"type":"method","name":"initialize","children":[],"call":[" class driver use "," class driver "," class "," class superclass driver use "," class superclass driver "," class superclass ","(send\n  (const nil :Class) :new) new "," default_url_options merge ","Capybara  app_host "," default_url_options "," include ","ActionDispatch  test_app routes url_helpers ","ActionDispatch  test_app routes ","ActionDispatch  test_app ","Class  new ","ActionDispatch  test_app routes mounted_helpers "," class driven_by "," class driver? "]}," ActionDispatch Routing UrlFor route_for":{"type":"method","name":"route_for","children":[],"call":[" public_send "]}," ActionDispatch Routing UrlFor full_url_for":{"type":"method","name":"full_url_for","children":[],"call":["HelperMethodBuilder  url handle_model_call ","HelperMethodBuilder  url ","HelperMethodBuilder  url handle_class_call "," polymorphic_url ","components extract_options! ","options dup ","HelperMethodBuilder  url handle_string_call "," _routes url_for "," _routes ","options to_h symbolize_keys reverse_merge! "," url_options ","options to_h symbolize_keys ","options to_h ","options delete "," url_options symbolize_keys "," raise ","ArgumentError  new ","options permitted? ","options symbolize_keys reverse_merge! ","options symbolize_keys ","options dup  extract_options! "]}," ActionDispatch Routing RoutesProxy respond_to_missing?":{"type":"method","name":"respond_to_missing?","children":[],"call":["@helpers respond_to? "]}," ActionDispatch Routing RouteSet CustomUrlHelper merge_defaults":{"type":"method","name":"merge_defaults","children":[],"call":[" defaults merge "," defaults "]}," ActionDispatch Routing RouteSet CustomUrlHelper eval_block":{"type":"method","name":"eval_block","children":[],"call":["t instance_exec "," block "," merge_defaults "]}," ActionDispatch Routing RouteSet CustomUrlHelper call":{"type":"method","name":"call","children":[],"call":["/ + ","url partition last ","url partition ","t full_url_for "," eval_block ","args extract_options! ","t url_for ","url_options push ","opts merge ","url_options extract_options! "," raise ","url_options to_h merge ","url_options to_h ","url_options permitted? ","url_options merge ","t full_url_for  partition last ","t full_url_for  partition ","t full_t full_url_for _for ","args extract_args extract_options! ! ","t t full_url_for _for ","t full_url_for _options push ","url_args extract_options!  push "," eval_block  push ","url_options extract_options!  merge ","t full_url_for _options extract_options! ","url_args extract_options!  extract_args extract_options! ! "," eval_block  extract_options! ","t full_url_for _options to_h merge ","url_args extract_options!  to_h merge "," eval_block  to_h merge ","t full_url_for _options to_h ","url_args extract_options!  to_h "," eval_block  to_h ","t full_url_for _options permitted? ","url_args extract_options!  permitted? "," eval_block  permitted? ","t full_url_for _options merge ","url_args extract_options!  merge "," eval_block  merge "]}," ActionDispatch Routing RouteSet CustomUrlHelper initialize":{"type":"method","name":"initialize","children":[],"call":[]}," ActionDispatch Routing RouteSet add_url_helper":{"type":"method","name":"add_url_helper","children":[],"call":[" named_routes add_url_helper "," named_routes "]}," ActionDispatch Routing RouteSet add_polymorphic_mapping":{"type":"method","name":"add_polymorphic_mapping","children":[],"call":["@polymorphic_mappings []= ","CustomUrlHelper  new "]}," ActionDispatch Routing RouteSet eager_load!":{"type":"method","name":"eager_load!","children":[],"call":[" routes each "," routes "," router eager_load! "," router "]}," ActionDispatch Routing RouteSet NamedRouteCollection add_url_helper":{"type":"method","name":"add_url_helper","children":[],"call":["helper call "," define_method ","@url_helpers_module module_eval ","@path_helpers_module module_eval ","CustomUrlHelper  new ","@custom_helpers << ","@url_helpers << ","@path_helpers << "," redefine_method ","CustomUrlHelper  new  call ","@url_CustomUrlHelper  new s_module module_eval ","@path_CustomUrlHelper  new s_module module_eval ","@custom_CustomUrlHelper  new s << ","@url_CustomUrlHelper  new s << ","@path_CustomUrlHelper  new s << "]}," ActionDispatch Routing PolymorphicRoutes HelperMethodBuilder polymorphic_mapping":{"type":"method","name":"polymorphic_mapping","children":[],"call":["target _routes polymorphic_mappings [] ","record class name ","record class ","target _routes polymorphic_mappings ","target _routes ","record to_model model_name name ","record to_model model_name ","record to_model ","record respond_to? "]}," ActionDispatch Routing PolymorphicRoutes polymorphic_mapping":{"type":"method","name":"polymorphic_mapping","children":[],"call":[" _routes polymorphic_mappings [] ","record class name ","record class "," _routes polymorphic_mappings "," _routes ","record to_model model_name name ","record to_model model_name ","record to_model ","record respond_to? "]}," ActionDispatch Routing Mapper Scope root?":{"type":"method","name":"root?","children":[],"call":["@parent null? "]}," ActionDispatch Routing Mapper Scope null?":{"type":"method","name":"null?","children":[],"call":["@parent nil? ","@hash nil? "]}," ActionDispatch Routing Mapper CustomUrls resolve":{"type":"method","name":"resolve","children":[],"call":["@set add_polymorphic_mapping ","args each ","args flatten ","args extract_options! "," raise ","@scope root? ","args flatten  each ","args flatten  flatten ","args flatten  extract_options! ","args extract_args extract_options! ! "]}," ActionDispatch Routing Mapper CustomUrls direct":{"type":"method","name":"direct","children":[],"call":["@set add_url_helper "," raise ","@scope root? "]}," ActionDispatch Request Utils each_param_value":{"type":"method","name":"each_param_value","children":[],"call":[]}," ActionDispatch DebugExceptions api_request?":{"type":"method","name":"api_request?","children":[],"call":["content_type html? ! ","content_type html? ","@response_format == "]}," ActionDispatch DebugExceptions render_for_api_request":{"type":"method","name":"render_for_api_request","children":[],"call":[" render ","wrapper status_code ","Mime  [] ","body to_json ","body public_send ","body respond_to? ","content_type to_sym ","wrapper traces ","wrapper exception inspect ","wrapper exception ","Rack Utils HTTP_STATUS_CODES  fetch ","Rack Utils HTTP_STATUS_CODES  [] ","wrapper exception_inspect "]}," ActionDispatch DebugExceptions render_for_browser_request":{"type":"method","name":"render_for_browser_request","children":[],"call":[" render ","wrapper status_code ","template render ","request xhr? ","wrapper rescue_template "," create_template "," create_template  render ","wrapper rescue_ create_template  "," create_ create_template  "]}," ActionDispatch DebugExceptions DebugView render":{"type":"method","name":"render","children":[],"call":["logger silence ","logger respond_to? ","ActionView Base  logger ","ActionView Base  logger  silence ","ActionView Base  logger  respond_to? ","ActionView Base  ActionView Base  logger  "]}," ActionDispatch Journey Format escape":{"type":"method","name":"escape","children":[],"call":[" escaper call "," escaper "]}," ActionDispatch Journey Router eager_load!":{"type":"method","name":"eager_load!","children":[],"call":[" simulator "]}," ActionDispatch Journey Route eager_load!":{"type":"method","name":"eager_load!","children":[],"call":[" required_defaults "," parts "," ast "," path eager_load! "," path "]}," ActionDispatch Journey Path Pattern eager_load!":{"type":"method","name":"eager_load!","children":[],"call":[" to_regexp "," offsets "," required_names "]}," ActionDispatch Request binary_params_for?":{"type":"method","name":"binary_params_for?","children":[],"call":[]}," ActionDispatch Http Parameters binary_params_for?":{"type":"method","name":"binary_params_for?","children":[],"call":[" controller_class binary_params_for? "," controller_class "," controller_class_for binary_params_for? "," controller_class_for "]}," ActionDispatch Http Parameters set_binary_encoding":{"type":"method","name":"set_binary_encoding","children":[],"call":["param force_encoding ","ActionDispatch Request Utils  each_param_value "," binary_params_for? ","params [] "," controller_class binary_params_for? "," controller_class ","controller valid_encoding? ","params except "]}," ActionDispatch Http Parameters ParseError initialize":{"type":"method","name":"initialize","children":[],"call":["$! message "]}," ActionController Metal binary_params_for?":{"type":"method","name":"binary_params_for?","children":[],"call":[]}," ActionController Parameters permit_any_in_array":{"type":"method","name":"permit_any_in_array","children":[],"call":["sanitized << "," permit_any_in_parameters "," permitted_scalar? "," lambda ","array each "," tap "," permit_any_in_array "]}," ActionController Parameters permit_any_in_parameters":{"type":"method","name":"permit_any_in_parameters","children":[],"call":["sanitized []= "," permit_any_in_parameters "," permit_any_in_array "," permitted_scalar? "," lambda ","params each "," class new tap "," class new "," class "]}," ActionController Parameters reverse_merge!":{"type":"method","name":"reverse_merge!","children":[],"call":["@parameters merge! ","other_hash to_h "]}," ActionController Parameters reverse_merge":{"type":"method","name":"reverse_merge","children":[],"call":[" new_instance_with_inherited_permitted_status ","other_hash to_h merge ","other_hash to_h "]}," ActionController Rendering _process_variant":{"type":"method","name":"_process_variant","children":[],"call":["options []= "," request variant "," request "," request variant present? "," request nil? ! "," request nil? "]}," ActionController ParameterEncoding ClassMethods skip_parameter_encoding":{"type":"method","name":"skip_parameter_encoding","children":[],"call":["@_parameter_encodings []= ","action to_s ","Hash  new "]}," ActionController ParameterEncoding ClassMethods binary_params_for?":{"type":"method","name":"binary_params_for?","children":[],"call":["@_parameter_encodings [] ","action to_s "]}," ActionController ParameterEncoding ClassMethods setup_param_encode":{"type":"method","name":"setup_param_encode","children":[],"call":["h []= ","Hash  new "]}," ActionController ParameterEncoding ClassMethods inherited":{"type":"method","name":"inherited","children":[],"call":["klass setup_param_encode "]}," AbstractController Rendering _process_variant":{"type":"method","name":"_process_variant","children":[],"call":[]}," ActionDispatch SystemTesting Driver run":{"type":"method","name":"run","children":[],"call":[" register "]}," ActionDispatch SystemTesting Browser setup":{"type":"method","name":"setup","children":[],"call":["Capybara  default_driver= ","@name to_sym "]}," ActionDispatch SystemTesting Browser register":{"type":"method","name":"register","children":[],"call":["driver browser manage window size= ","Selenium WebDriver Dimension  new ","driver browser manage window ","driver browser manage ","driver browser ","Capybara Selenium Driver  new tap ","Capybara Selenium Driver  new ","Capybara  register_driver "]}," ActionDispatch SystemTesting Browser run":{"type":"method","name":"run","children":[],"call":[" setup "," register "]}," ActionDispatch SystemTesting Browser initialize":{"type":"method","name":"initialize","children":[],"call":[" set_default_options "]}," ActionDispatch SystemTestCase selenium?":{"type":"method","name":"selenium?","children":[],"call":[]}," ActionDispatch SystemTestCase driver":{"type":"method","name":"driver","children":[],"call":[]}," ActionDispatch SystemTesting TestHelpers SetupAndTeardown host!":{"type":"method","name":"host!","children":[],"call":["Capybara  app_host= ","ActiveSupport Deprecation  warn "]}," ActionDispatch SystemTesting Driver register_webkit":{"type":"method","name":"register_webkit","children":[],"call":["driver resize_window ","Capybara Webkit Driver  new tap ","Capybara Webkit Driver  new ","Capybara Webkit Configuration  to_hash merge ","Capybara Webkit Configuration  to_hash ","driver resize_window_to ","driver current_window_handle "]}," ActionDispatch SystemTesting Driver register_poltergeist":{"type":"method","name":"register_poltergeist","children":[],"call":["Capybara Poltergeist Driver  new ","@options merge "]}," ActionDispatch SystemTesting Driver register_selenium":{"type":"method","name":"register_selenium","children":[],"call":["driver browser manage window size= ","Selenium WebDriver Dimension  new ","driver browser manage window ","driver browser manage ","driver browser ","Capybara Selenium Driver  new tap ","Capybara Selenium Driver  new ","(pair\n  (sym :browser)\n  (ivar :@browser)) merge ","(pair\n  (sym :browser)\n  (send\n    (ivar :@browser) :type)) merge "," browser_options ","@browser type ","(pair\n  (sym :browser)\n  (send nil :browser)) merge "," browser "]}," ActionDispatch SystemTesting Driver rack_test?":{"type":"method","name":"rack_test?","children":[],"call":["@name == "]}," ActionDispatch SystemTesting Driver registerable?":{"type":"method","name":"registerable?","children":[],"call":["(sym :selenium) include? "]}," ActionDispatch Routing RoutesProxy merge_script_names":{"type":"method","name":"merge_script_names","children":[],"call":["(send\n  (send\n    (send\n      (lvar :previous_script_name) :split\n      (str \"/\")) :slice\n    (int 0)\n    (lvar :context_parts)) :join\n  (str \"/\")) + ","previous_script_name split slice join ","previous_script_name split slice ","previous_script_name split ","previous_parts - + ","previous_parts - ","previous_script_name count ","new_script_name count ","(send\n  (send\n    (send\n      (lvar :previous_script_name) :split\n      (str \"/\")) :slice\n    (int 0)\n    (lvar :previous_parts - + )) :join\n  (str \"/\")) + ","previous_script_name count  - + ","previous_script_name count  - "]}," ActionDispatch SystemTesting TestHelpers ScreenshotHelper absolute_image_path":{"type":"method","name":"absolute_image_path","children":[],"call":["Rails  root join "," image_name ","Rails  root "," absolute_path "]}," ActionDispatch Request controller_class_for":{"type":"method","name":"controller_class_for","children":[],"call":["ActiveSupport Dependencies  constantize ","controller_param camelize ","name underscore "," raise ","MissingController  new ","error name ","error message ","const_name start_with? ","error missing_name ","error missing_name == ","controller_param camelize << ","const_name constantize ","name underscore  camelize ","controller_param camelize <<  start_with? ","name underscore  camelize << ","controller_param camelize <<  constantize "]}," ActionDispatch SystemTesting TestHelpers UndefMethods method_missing":{"type":"method","name":"method_missing","children":[],"call":[" raise ","METHODS  include? "]}," ActionDispatch SystemTesting Driver browser_options":{"type":"method","name":"browser_options","children":[],"call":["@options merge compact ","@options merge ","@browser options ","browser_options args << ","browser_options args ","Selenium WebDriver Chrome Options  new ","@browser == ","Selenium WebDriver Chrome Options  new  args << ","Selenium WebDriver Chrome Options  new  args "]}," ActionDispatch SystemTesting Browser headless_firefox_browser_options":{"type":"method","name":"headless_firefox_browser_options","children":[],"call":["options args << ","options args ","Selenium WebDriver Firefox Options  new "," capabilities "," capabilities args << "," capabilities args "," capabilities add_argument ","Selenium WebDriver Firefox Options  new  args << ","Selenium WebDriver Firefox Options  new  args "]}," ActionDispatch SystemTesting Browser headless_chrome_browser_options":{"type":"method","name":"headless_chrome_browser_options","children":[],"call":["options args << ","options args ","Selenium WebDriver Chrome Options  new ","Gem  win_platform? "," capabilities "," capabilities args << "," capabilities args "," capabilities add_argument ","Selenium WebDriver Chrome Options  new  args << ","Selenium WebDriver Chrome Options  new  args "]}," ActionDispatch SystemTesting Browser options":{"type":"method","name":"options","children":[],"call":[" headless_firefox_browser_options "," headless_chrome_browser_options "," name "]}," ActionDispatch SystemTesting Browser type":{"type":"method","name":"type","children":[],"call":[" name "]}," ActionDispatch Routing RouteSet recognize_path_with_request":{"type":"method","name":"recognize_path_with_request","children":[],"call":[" raise ","path inspect ","app rack_app routes recognize_path_with_request ","app rack_app routes ","app rack_app ","app engine? ","app matches? ","req path_parameters ","params [] camelize ","params [] ","req controller_class ","app dispatcher? ","route app ","req path_parameters= ","params []= ","URI  parser unescape ","URI  parser ","value dup force_encoding ","value dup ","value is_a? ","params each ","params merge! ","@router recognize ","URI DEFAULT_PARSER  unescape ","route app  rack_route app  routes recognize_path_with_request ","route app  rack_route app  routes ","route app  rack_route app  ","route app  engine? ","route app  matches? ","req app rack_app routes recognize_path_with_request  ","route app  dispatcher? ","route route app  ","req app rack_app routes recognize_path_with_request = ","value dup force_encoding  dup force_encoding ","value dup force_encoding  dup ","value dup force_encoding  is_a? "]}," ActionDispatch Routing Endpoint engine?":{"type":"method","name":"engine?","children":[],"call":[" rack_app < "," rack_app "," rack_app is_a? "," rack_app respond_to? "]}," ActionDispatch Routing Endpoint rack_app":{"type":"method","name":"rack_app","children":[],"call":[" app "]}," ActionDispatch Cookies EncryptedKeyRotatingCookieJar parse_legacy_signed_message":{"type":"method","name":"parse_legacy_signed_message","children":[],"call":["@legacy_verifier verified ","rotate call "," deserialize "]}," ActionDispatch Cookies EncryptedKeyRotatingCookieJar commit":{"type":"method","name":"commit","children":[],"call":[" raise ","options [] bytesize > ","options [] bytesize ","options [] ","options []= ","@encryptor encrypt_and_sign "," expiry_options "," serialize "," cookie_metadata "," check_for_overflow! "]}," ActionDispatch Cookies EncryptedKeyRotatingCookieJar parse":{"type":"method","name":"parse","children":[],"call":[" parse_legacy_signed_message ","@encryptor decrypt_and_verify "," deserialize "," lambda "]}," ActionDispatch Cookies EncryptedKeyRotatingCookieJar initialize":{"type":"method","name":"initialize","children":[],"call":["ActiveSupport MessageVerifier  new "," digest "," request secret_token "," request "," upgrade_legacy_signed_cookies? ","@encryptor rotate "," request key_generator generate_key "," request encrypted_signed_cookie_salt "," request key_generator ","ActiveSupport MessageEncryptor  key_len "," request encrypted_cookie_salt "," upgrade_legacy_hmac_aes_cbc_cookies? "," request cookies_rotations encrypted each "," request cookies_rotations encrypted "," request cookies_rotations ","ActiveSupport MessageEncryptor  new "," encrypted_cookie_cipher "," request authenticated_encrypted_cookie_salt "," request use_authenticated_cookie_encryption ","secrets extract_options! "," prepare_upgrade_legacy_hmac_aes_cbc_cookies? "," request  request key_generator generate_key _token ","ActiveSupport MessageEncryptor  new  rotate ","ActiveSupport MessageEncryptor  ActiveSupport MessageEncryptor  key_len  "," request key_generator generate_key s extract_options! ","secrets extract_secrets extract_options! ! "]}," ActionDispatch Cookies SignedKeyRotatingCookieJar commit":{"type":"method","name":"commit","children":[],"call":[" raise ","options [] bytesize > ","options [] bytesize ","options [] ","options []= ","@verifier generate "," expiry_options "," serialize "," cookie_metadata "," check_for_overflow! "]}," ActionDispatch Cookies SignedKeyRotatingCookieJar parse":{"type":"method","name":"parse","children":[],"call":["@verifier verified "," deserialize "," lambda "]}," ActionDispatch Cookies SignedKeyRotatingCookieJar initialize":{"type":"method","name":"initialize","children":[],"call":["@verifier rotate "," request secret_token "," request "," upgrade_legacy_signed_cookies? "," request cookies_rotations signed each "," request cookies_rotations signed "," request cookies_rotations ","ActiveSupport MessageVerifier  new "," signed_cookie_digest "," request key_generator generate_key "," request signed_cookie_salt "," request key_generator ","secrets extract_options! ","ActiveSupport MessageVerifier  new  rotate "," request  request key_generator generate_key _token "," request key_generator generate_key s extract_options! ","secrets extract_secrets extract_options! ! "]}," ActionDispatch Cookies AbstractCookieJar expiry_options":{"type":"method","name":"expiry_options","children":[],"call":["options [] ","options [] respond_to? "," request use_authenticated_cookie_encryption "," request "]}," ActionDispatch Cookies ChainedCookieJars signed_cookie_digest":{"type":"method","name":"signed_cookie_digest","children":[],"call":[" request signed_cookie_digest "," request "]}," ActionDispatch Cookies ChainedCookieJars encrypted_cookie_cipher":{"type":"method","name":"encrypted_cookie_cipher","children":[],"call":[" request encrypted_cookie_cipher "," request "]}," ActionDispatch Cookies ChainedCookieJars upgrade_legacy_hmac_aes_cbc_cookies?":{"type":"method","name":"upgrade_legacy_hmac_aes_cbc_cookies?","children":[],"call":[" request use_authenticated_cookie_encryption "," request "," request encrypted_cookie_salt present? "," request encrypted_cookie_salt "," request encrypted_signed_cookie_salt present? "," request encrypted_signed_cookie_salt "," request secret_key_base present? "," request secret_key_base "]}," ActionDispatch Request cookies_rotations":{"type":"method","name":"cookies_rotations","children":[],"call":[" get_header "]}," ActionDispatch Request signed_cookie_digest":{"type":"method","name":"signed_cookie_digest","children":[],"call":[" get_header "]}," ActionDispatch Request encrypted_cookie_cipher":{"type":"method","name":"encrypted_cookie_cipher","children":[],"call":[" get_header "]}," ActionDispatch Request use_authenticated_cookie_encryption":{"type":"method","name":"use_authenticated_cookie_encryption","children":[],"call":[" get_header "]}," ActionDispatch Request authenticated_encrypted_cookie_salt":{"type":"method","name":"authenticated_encrypted_cookie_salt","children":[],"call":[" get_header "]}," ActionDispatch Request send_early_hints":{"type":"method","name":"send_early_hints","children":[],"call":[" env [] call "," env [] "," env "]}," ActionDispatch ContentSecurityPolicy resolve_source":{"type":"method","name":"resolve_source","children":[],"call":[" raise ","source inspect ","context instance_exec ","context nil? ","source to_s "," apply_mapping ","resolved is_a? "," apply_mappings ","Array  wrap ","context instance_exec  is_a? "]}," ActionDispatch ContentSecurityPolicy build_directive":{"type":"method","name":"build_directive","children":[],"call":[" resolve_source ","sources map "]}," ActionDispatch ContentSecurityPolicy build_directives":{"type":"method","name":"build_directives","children":[],"call":[" build_directive join "," build_directive ","sources is_a? ","@directives map "," nonce_directive? "]}," ActionDispatch ContentSecurityPolicy apply_mapping":{"type":"method","name":"apply_mapping","children":[],"call":[" raise ","source inspect ","MAPPINGS  fetch "]}," ActionDispatch ContentSecurityPolicy apply_mappings":{"type":"method","name":"apply_mappings","children":[],"call":[" raise ","source inspect "," apply_mapping ","sources map "]}," ActionDispatch ContentSecurityPolicy build":{"type":"method","name":"build","children":[],"call":[" build_directives compact join "," build_directives compact "," build_directives "," build_directives compact join + ","nonce_directives nil? "]}," ActionDispatch ContentSecurityPolicy upgrade_insecure_requests":{"type":"method","name":"upgrade_insecure_requests","children":[],"call":["@directives delete ","@directives []= "]}," ActionDispatch ContentSecurityPolicy sandbox":{"type":"method","name":"sandbox","children":[],"call":["@directives delete ","@directives []= ","values first ","values empty? "]}," ActionDispatch ContentSecurityPolicy require_sri_for":{"type":"method","name":"require_sri_for","children":[],"call":["@directives delete ","@directives []= ","types first "]}," ActionDispatch ContentSecurityPolicy report_uri":{"type":"method","name":"report_uri","children":[],"call":["@directives []= "]}," ActionDispatch ContentSecurityPolicy plugin_types":{"type":"method","name":"plugin_types","children":[],"call":["@directives delete ","@directives []= ","types first "]}," ActionDispatch ContentSecurityPolicy block_all_mixed_content":{"type":"method","name":"block_all_mixed_content","children":[],"call":["@directives delete ","@directives []= "]}," ActionDispatch ContentSecurityPolicy initialize_copy":{"type":"method","name":"initialize_copy","children":[],"call":["other directives deep_dup ","other directives "," copy_directives "]}," ActionDispatch ContentSecurityPolicy initialize":{"type":"method","name":"initialize","children":[],"call":[" block_given? "]}," ActionDispatch ContentSecurityPolicy Request generate_content_security_policy_nonce":{"type":"method","name":"generate_content_security_policy_nonce","children":[],"call":[" content_security_policy_nonce_generator call "," content_security_policy_nonce_generator "]}," ActionDispatch ContentSecurityPolicy Request content_security_policy_nonce":{"type":"method","name":"content_security_policy_nonce","children":[],"call":[" set_header "," generate_content_security_policy_nonce "," get_header "," content_security_policy_nonce_generator "," generate_content_security_policy_ get_header  "," content_security_policy_ get_header _generator "]}," ActionDispatch ContentSecurityPolicy Request content_security_policy_nonce_generator=":{"type":"method","name":"content_security_policy_nonce_generator=","children":[],"call":[" set_header "]}," ActionDispatch ContentSecurityPolicy Request content_security_policy_nonce_generator":{"type":"method","name":"content_security_policy_nonce_generator","children":[],"call":[" get_header "]}," ActionDispatch ContentSecurityPolicy Request content_security_policy_report_only=":{"type":"method","name":"content_security_policy_report_only=","children":[],"call":[" set_header "]}," ActionDispatch ContentSecurityPolicy Request content_security_policy_report_only":{"type":"method","name":"content_security_policy_report_only","children":[],"call":[" get_header "]}," ActionDispatch ContentSecurityPolicy Request content_security_policy=":{"type":"method","name":"content_security_policy=","children":[],"call":[" set_header "]}," ActionDispatch ContentSecurityPolicy Request content_security_policy":{"type":"method","name":"content_security_policy","children":[],"call":[" get_header "]}," ActionDispatch ContentSecurityPolicy Middleware policy_present?":{"type":"method","name":"policy_present?","children":[],"call":["headers [] "]}," ActionDispatch ContentSecurityPolicy Middleware header_name":{"type":"method","name":"header_name","children":[],"call":["request content_security_policy_report_only "]}," ActionDispatch ContentSecurityPolicy Middleware html_response?":{"type":"method","name":"html_response?","children":[],"call":["content_type =~ ","headers [] ","(str \"html\") match? ","headers []  =~ "]}," ActionDispatch ContentSecurityPolicy Middleware call":{"type":"method","name":"call","children":[],"call":["headers []= ","policy build ","request controller_instance "," header_name ","policy directives [] << ","policy directives [] ","policy directives ","request content_security_policy_nonce ","request content_security_policy "," policy_present? "," html_response? ","@app call ","ActionDispatch Request  new ","request content_security_policy_nonce_directives ","status == ","request content_security_policy  build ","ActionDispatch Request  new  controller_instance ","request content_security_policy  directives [] << ","request content_security_policy  directives [] ","request content_security_policy  directives ","request content_security_policy_request content_security_policy_nonce  ","request content_security_request content_security_policy _nonce ","ActionDispatch Request  new  content_security_policy_nonce ","request content_security_request content_security_policy  ","ActionDispatch Request  new  content_security_policy "," request content_security_policy _present? "," html_@app call ? ","request content_security_policy_request content_security_policy_nonce _directives ","request content_security_request content_security_policy _nonce_directives ","ActionDispatch Request  new  content_security_policy_nonce_directives ","request content_security_policy_request content_security_policy_nonce_directives  "]}," ActionDispatch ContentSecurityPolicy Middleware initialize":{"type":"method","name":"initialize","children":[],"call":[]}," ActionDispatch Http Cache Response merge_and_normalize_cache_control!":{"type":"method","name":"merge_and_normalize_cache_control!","children":[],"call":[" _cache_control= ","options join ","options concat ","options << ","control [] ","max_age to_i "," _cache_control + ","control [] join "," _cache_control ","control empty? ","control merge! ","cache_control [] uniq! ","cache_control [] ","cc_headers delete "," cache_control_headers ","stale_if_error to_i ","stale_while_revalidate to_i ","control delete ","cache_control empty? ","cache_control any? "," _cache_ cache_control_headers = "," cache_control_headers  [] ","control []  to_i "," _cache_ cache_control_headers  + "," cache_control_headers  [] join "," _cache_ cache_control_headers  "," cache_control_headers  empty? "," cache_control_headers  merge! ","cache_ cache_control_headers  [] uniq! ","cache_ cache_control_headers  [] "," cache_control_headers  delete "," cache_ cache_control_headers _headers ","cache_ cache_control_headers  empty? ","cache_ cache_control_headers  any? "]}," ActionController RequestForgeryProtection ClassMethods skip_forgery_protection":{"type":"method","name":"skip_forgery_protection","children":[],"call":[" skip_before_action ","options reverse_merge "]}," ActionController Redirecting _url_host_allowed?":{"type":"method","name":"_url_host_allowed?","children":[],"call":[" URI host == "," request host "," request "," URI host "," URI ","url to_s "," URI host in? ","options [] ","(send\n  (send nil :request) :host) include? ","url to_s start_with? ","host nil? ","host == ","url to_s start_with? ! "," URI  URI host  == "," request  URI host  "," URI  URI host  "," URI  URI host  in? ","(send\n  (send nil :request) : URI host ) include? "," URI host  nil? "," URI host  == "]}," ActionController ContentSecurityPolicy current_content_security_policy":{"type":"method","name":"current_content_security_policy","children":[],"call":["ActionDispatch ContentSecurityPolicy  new "," request content_security_policy try "," request content_security_policy "," request "]}," ActionController ContentSecurityPolicy content_security_policy_nonce":{"type":"method","name":"content_security_policy_nonce","children":[],"call":[" request content_security_policy_nonce "," request "]}," ActionController ContentSecurityPolicy content_security_policy?":{"type":"method","name":"content_security_policy?","children":[],"call":[" request content_security_policy "," request "]}," ActionController ContentSecurityPolicy ClassMethods content_security_policy_report_only":{"type":"method","name":"content_security_policy_report_only","children":[],"call":[" request content_security_policy_report_only= "," request "," before_action "]}," ActionController ContentSecurityPolicy ClassMethods content_security_policy":{"type":"method","name":"content_security_policy","children":[],"call":[" request content_security_policy= "," request "," current_content_security_policy "," block_given? "," before_action "," request content_security_policy clone "," request content_security_policy "," instance_exec "," request content_security_ current_content_security_policy = "," request content_security_ request content_security_policy clone = "," current_content_security_ current_content_security_policy  "," current_content_security_ request content_security_policy clone  "," request content_security_ current_content_security_policy  clone "," request content_security_ request content_security_policy clone  clone "," request content_security_ current_content_security_policy  "," request content_security_ request content_security_policy clone  "]}," AbstractController Caching Fragments combined_fragment_cache_key":{"type":"method","name":"combined_fragment_cache_key","children":[],"call":["(sym :views) compact ","ENV  [] "," url_for split last "," url_for split "," url_for ","key is_a? "," instance_exec "," class fragment_cache_keys map "," class fragment_cache_keys "," class ","cache_key compact! ","cache_key flatten! "]}," ActionDispatch SystemTesting Driver browser":{"type":"method","name":"browser","children":[],"call":["@browser == "]}," ActionDispatch ContentSecurityPolicy copy_directives":{"type":"method","name":"copy_directives","children":[],"call":["sources map ","directives transform_values "]}," ActionDispatch ContentSecurityPolicy nonce_directive?":{"type":"method","name":"nonce_directive?","children":[],"call":["NONCE_DIRECTIVES  include? ","nonce_directives include? "]}," ActionDispatch Session CookieStore SessionId initialize":{"type":"method","name":"initialize","children":[],"call":[]}," ActionDispatch Session CacheStore get_session_with_fallback":{"type":"method","name":"get_session_with_fallback","children":[],"call":["@cache read "," cache_key ","sid public_id ","sid private_id "]}," ActionDispatch Session AbstractSecureStore set_cookie":{"type":"method","name":"set_cookie","children":[],"call":["request cookie_jar []= "," key ","request cookie_jar "]}," ActionDispatch Session AbstractSecureStore generate_sid":{"type":"method","name":"generate_sid","children":[],"call":["Rack Session SessionId  new "]}," ActionController RequestForgeryProtection csrf_token_hmac":{"type":"method","name":"csrf_token_hmac","children":[],"call":["OpenSSL HMAC  digest "," real_csrf_token ","OpenSSL Digest SHA256  new "]}," ActionController RequestForgeryProtection global_csrf_token":{"type":"method","name":"global_csrf_token","children":[],"call":[" csrf_token_hmac "]}," ActionController RequestForgeryProtection compare_with_global_token":{"type":"method","name":"compare_with_global_token","children":[],"call":["ActiveSupport SecurityUtils  fixed_length_secure_compare "," global_csrf_token "]}," ActionController RequestForgeryProtection mask_token":{"type":"method","name":"mask_token","children":[],"call":["Base64  strict_encode64 ","one_time_pad + "," xor_byte_strings ","SecureRandom  random_bytes ","Base64  urlsafe_encode64 delete ","Base64  urlsafe_encode64 "," encode_csrf_token ","SecureRandom  random_bytes  + "]}," ActionController RequestForgeryProtection decode_csrf_token":{"type":"method","name":"decode_csrf_token","children":[],"call":["Base64  urlsafe_decode64 ","Base64  strict_decode64 "," urlsafe_csrf_tokens "]}," ActionController RequestForgeryProtection encode_csrf_token":{"type":"method","name":"encode_csrf_token","children":[],"call":["Base64  strict_encode64 ","Base64  urlsafe_encode64 "," urlsafe_csrf_tokens "]}," ActionController RequestForgeryProtection urlsafe_decode64":{"type":"method","name":"urlsafe_decode64","children":[],"call":[" strict_decode64 ","str ljust ","(send\n  (send\n    (lvar :str) :length) :+\n  (int 3)) & ","3 ~ ","str length + ","str length ","str length % != ","str length % ","str end_with? ! ","str end_with? ","str tr "," str ljust ict_decode64 "," str tr ict_decode64 ","str ljust  ljust ","str tr  ljust ","(send\n  (send\n    (lvar :str ljust ) :length) :+\n  (int 3)) & ","(send\n  (send\n    (lvar :str tr ) :length) :+\n  (int 3)) & ","str ljust  length + ","str tr  length + ","str ljust  length ","str tr  length ","str ljust  length % != ","str tr  length % != ","str ljust  length % ","str tr  length % ","str ljust  end_with? ! ","str tr  end_with? ! ","str ljust  end_with? ","str tr  end_with? ","str ljust  tr ","str tr  tr "]}," ActionController RequestForgeryProtection urlsafe_encode64":{"type":"method","name":"urlsafe_encode64","children":[],"call":["str delete "," strict_encode64 tr "," strict_encode64 ","str delete  delete "," strict_encode64 tr  delete "," str delete ict_encode64 tr ","  strict_encode64 tr ict_encode64 tr "," str delete ict_encode64 ","  strict_encode64 tr ict_encode64 "]}," ActionController RequestForgeryProtection generate_csrf_token":{"type":"method","name":"generate_csrf_token","children":[],"call":["SecureRandom  base64 ","SecureRandom  urlsafe_base64 "," urlsafe_csrf_tokens "]}," ActionDispatch TestResponse response_parser":{"type":"method","name":"response_parser","children":[],"call":["RequestEncoder  parser "," media_type "," content_type "]}," ActionDispatch Assertions RoutingAssertions setup":{"type":"method","name":"setup","children":[],"call":[]}," ActionDispatch SystemTesting TestHelpers SetupAndTeardown before_teardown":{"type":"method","name":"before_teardown","children":[],"call":[" take_failed_screenshot "]}," ActionDispatch SystemTesting Driver define_browser_capabilities":{"type":"method","name":"define_browser_capabilities","children":[],"call":["@capabilities call "]}," ActionDispatch SystemTesting Browser preload":{"type":"method","name":"preload","children":[],"call":[" Selenium WebDriver Firefox  driver_path "," Selenium WebDriver Firefox Service  driver_path try "," Selenium WebDriver Firefox Service  driver_path "," Selenium WebDriver Service  respond_to? "," Selenium WebDriver Chrome  driver_path "," Selenium WebDriver Chrome Service  driver_path try "," Selenium WebDriver Chrome Service  driver_path "," type "]}," ActionDispatch SystemTesting Browser capabilities":{"type":"method","name":"capabilities","children":[],"call":[" Selenium WebDriver Firefox Options  new "," Selenium WebDriver Chrome Options  new "," type "]}," ActionDispatch Routing Mapper Resources Resource available_actions":{"type":"method","name":"available_actions","children":[],"call":[" default_actions "," Array map "," Array "]}," ActionDispatch Routing Mapper Mapping intern":{"type":"method","name":"intern","children":[],"call":["object -@ ","object is_a? "]}," ActionDispatch Routing ConsoleFormatter Expanded route_header":{"type":"method","name":"route_header","children":[],"call":["- * ","(send\n  (lvar :console_width) :-\n  (send\n    (lvar :header_prefix) :size)) max ","console_width - ","header_prefix size ","IO  console_size second ","IO  console_size ","(str \"--[ Route \") ljust ","(send\n  (lvar :IO  console_size second ) :-\n  (send\n    (lvar :header_prefix) :size)) max ","IO  console_size second  - "]}," ActionDispatch Routing ConsoleFormatter Expanded draw_expanded_section":{"type":"method","name":"draw_expanded_section","children":[],"call":["(begin\n  (send nil :route_header\n    (hash\n      (pair\n        (sym :index)\n        (send\n          (lvar :i) :+\n          (int 1)))))) chomp ","r [] "," route_header ","i + ","routes map each_with_index ","routes map ","r [] present? "]}," ActionDispatch Routing ConsoleFormatter Expanded section":{"type":"method","name":"section","children":[],"call":["@buffer << "," draw_expanded_section "]}," ActionDispatch Routing ConsoleFormatter Expanded section_title":{"type":"method","name":"section_title","children":[],"call":["@buffer << "]}," ActionDispatch Routing ConsoleFormatter Sheet widths":{"type":"method","name":"widths","children":[],"call":["(send\n  (lvar :routes) :map) max ","r [] length ","r [] ","routes map "]}," ActionDispatch Routing ConsoleFormatter Sheet draw_header":{"type":"method","name":"draw_header","children":[],"call":["URI Pattern ljust ","Verb ljust ","Prefix rjust "," widths "]}," ActionDispatch Routing ConsoleFormatter Sheet draw_section":{"type":"method","name":"draw_section","children":[],"call":["r [] ","r [] ljust ","r [] rjust ","routes map "," widths zip map "," widths zip "," widths ","(str \"Prefix\") map "]}," ActionDispatch Routing ConsoleFormatter Sheet header":{"type":"method","name":"header","children":[],"call":["@buffer << "," draw_header "]}," ActionDispatch Routing ConsoleFormatter Sheet section":{"type":"method","name":"section","children":[],"call":["@buffer << "," draw_section "]}," ActionDispatch Routing ConsoleFormatter Sheet section_title":{"type":"method","name":"section_title","children":[],"call":["@buffer << "]}," ActionDispatch Routing ConsoleFormatter Base no_routes":{"type":"method","name":"no_routes","children":[],"call":["@buffer << ","filter key? ","routes none? "]}," ActionDispatch Routing ConsoleFormatter Base header":{"type":"method","name":"header","children":[],"call":[]}," ActionDispatch Routing ConsoleFormatter Base section":{"type":"method","name":"section","children":[],"call":[]}," ActionDispatch Routing ConsoleFormatter Base section_title":{"type":"method","name":"section_title","children":[],"call":[]}," ActionDispatch Routing ConsoleFormatter Base result":{"type":"method","name":"result","children":[],"call":["@buffer join "]}," ActionDispatch Routing ConsoleFormatter Base initialize":{"type":"method","name":"initialize","children":[],"call":[]}," ActionDispatch Request Session dig":{"type":"method","name":"dig","children":[],"call":["@delegate dig ","key to_s ","i zero? ","keys map with_index ","keys map "," load_for_read! "]}," ActionDispatch MiddlewareStack InstrumentationProxy call":{"type":"method","name":"call","children":[],"call":["@middleware call ","ActiveSupport Notifications  instrument "]}," ActionDispatch MiddlewareStack InstrumentationProxy initialize":{"type":"method","name":"initialize","children":[],"call":[]}," ActionDispatch MiddlewareStack Middleware build_instrumented":{"type":"method","name":"build_instrumented","children":[],"call":["InstrumentationProxy  new "," inspect "," build "]}," ActionDispatch HostAuthorization mark_as_authorized":{"type":"method","name":"mark_as_authorized","children":[],"call":["request set_header ","request host "]}," ActionDispatch HostAuthorization authorized?":{"type":"method","name":"authorized?","children":[],"call":["@permissions allows? ","forwarded_host blank? ","request x_forwarded_host to_s split last to_s sub ","request x_forwarded_host to_s split last to_s ","request x_forwarded_host to_s split last ","request x_forwarded_host to_s split ","request x_forwarded_host to_s ","request x_forwarded_host ","request get_header to_s sub ","request get_header to_s ","request get_header ","forwarded_host [] ","forwarded_host nil? ","origin_host [] ","valid_host match ","request get_header to_s downcase ","request x_forwarded_host to_s split last to_s sub  blank? ","valid_host match  blank? ","request x_request x_forwarded_host to_s split last to_s sub  to_s split last to_s sub ","request x_valid_host match  to_s split last to_s sub ","request x_request x_forwarded_host to_s split last to_s sub  to_s split last to_s ","request x_valid_host match  to_s split last to_s ","request x_request x_forwarded_host to_s split last to_s sub  to_s split last ","request x_valid_host match  to_s split last ","request x_request x_forwarded_host to_s split last to_s sub  to_s split ","request x_valid_host match  to_s split ","request x_request x_forwarded_host to_s split last to_s sub  to_s ","request x_valid_host match  to_s ","request x_request x_forwarded_host to_s split last to_s sub  ","request x_valid_host match  ","request x_forwarded_host to_s split last to_s sub  [] ","valid_host match  [] ","request x_forwarded_host to_s split last to_s sub  nil? ","valid_host match  nil? ","request get_header to_s sub  [] ","request get_header  [] "]}," ActionDispatch HostAuthorization call":{"type":"method","name":"call","children":[],"call":["@response_app call ","@app call "," mark_as_authorized "," authorized? ","Request  new ","@permissions empty? "," excluded? ","env []= ","hosts empty? "," blocked_hosts "," blocked_hosts  empty? "," blocked_ blocked_hosts  "]}," ActionDispatch HostAuthorization initialize":{"type":"method","name":"initialize","children":[],"call":["Permissions  new ","ActiveSupport Deprecation  warn ","(str \"          `action_dispatch.hosts_response_app` is deprecated and will be ignored in Rails 6.2.\\n\") squish ","deprecated_response_app nil? ","DefaultResponseApp  new ","(str \"          `action_dispatch.hosts_response_app` is deprecated and will be ignored in Rails 7.0.\\n\") squish "]}," ActionDispatch HostAuthorization Permissions sanitize_string":{"type":"method","name":"sanitize_string","children":[],"call":["Regexp  escape ","host [] ","host start_with? "]}," ActionDispatch HostAuthorization Permissions sanitize_regexp":{"type":"method","name":"sanitize_regexp","children":[],"call":[]}," ActionDispatch HostAuthorization Permissions sanitize_hosts":{"type":"method","name":"sanitize_hosts","children":[],"call":[" sanitize_string "," sanitize_regexp "," Array map "," Array "]}," ActionDispatch HostAuthorization Permissions allows?":{"type":"method","name":"allows?","children":[],"call":["allowed === ","@hosts any? "," extract_hostname ","allowed is_a? "]}," ActionDispatch HostAuthorization Permissions empty?":{"type":"method","name":"empty?","children":[],"call":["@hosts empty? "]}," ActionDispatch HostAuthorization Permissions initialize":{"type":"method","name":"initialize","children":[],"call":[" sanitize_hosts "]}," ActionDispatch ExceptionWrapper wrapped_causes_for":{"type":"method","name":"wrapped_causes_for","children":[],"call":[" class new "," class "," causes_for map "," causes_for "]}," ActionDispatch ExceptionWrapper causes_for":{"type":"method","name":"causes_for","children":[],"call":["exception cause "," enum_for "," __method__ "," block_given? ","exception cause  cause "]}," ActionDispatch ExceptionWrapper source_to_show_id":{"type":"method","name":"source_to_show_id","children":[],"call":["(or\n  (send\n    (send\n      (send nil :traces) :[]\n      (send nil :trace_to_show)) :first)\n  (hash)) [] "," traces [] first "," traces [] "," trace_to_show "," traces "]}," ActionDispatch ExceptionWrapper trace_to_show":{"type":"method","name":"trace_to_show","children":[],"call":[" rescue_template != "," rescue_template "," traces [] empty? "," traces [] "," traces "]}," ActionDispatch ExceptionWrapper unwrapped_exception":{"type":"method","name":"unwrapped_exception","children":[],"call":[" exception "," exception cause "," wrapper_exceptions include? "," exception class to_s "," exception class "," wrapper_exceptions ","@exception cause "]}," ActionDispatch DebugView params_valid?":{"type":"method","name":"params_valid?","children":[],"call":["@request parameters "]}," ActionDispatch DebugView protect_against_forgery?":{"type":"method","name":"protect_against_forgery?","children":[],"call":[]}," ActionDispatch DebugView render":{"type":"method","name":"render","children":[],"call":["logger silence ","logger respond_to? ","ActionView Base  logger ","ActionView Base  logger  silence ","ActionView Base  logger  respond_to? ","ActionView Base  ActionView Base  logger  "]}," ActionDispatch DebugView debug_hash":{"type":"method","name":"debug_hash","children":[],"call":["(send\n  (block\n    (send\n      (send\n        (lvar :object) :to_hash) :sort_by)\n    (args\n      (arg :k)\n      (arg :_))\n    (send\n      (lvar :k) :to_s)) :map) join ","$! message ","v inspect ","(send\n  (send\n    (lvar :object) :to_hash) :sort_by) map ","k to_s ","object to_hash sort_by ","object to_hash "]}," ActionDispatch DebugView debug_headers":{"type":"method","name":"debug_headers","children":[],"call":["headers inspect gsub ","headers inspect ","headers present? "]}," ActionDispatch DebugView debug_params":{"type":"method","name":"debug_params","children":[],"call":["PP  pp "," +@ ","clean_params empty? ","clean_params delete ","params clone ","params clone  empty? ","params clone  delete "]}," ActionDispatch DebugView compiled_method_container":{"type":"method","name":"compiled_method_container","children":[],"call":[" class "]}," ActionDispatch DebugView initialize":{"type":"method","name":"initialize","children":[],"call":["ActionView LookupContext  new ","assigns [] ","RESCUES_TEMPLATE_PATHS  dup "]}," ActionDispatch DebugExceptions invoke_interceptors":{"type":"method","name":"invoke_interceptors","children":[],"call":[" log_error ","interceptor call ","@interceptors each ","ExceptionWrapper  new ","request get_header "]}," ActionDispatch DebugExceptions register_interceptor":{"type":"method","name":"register_interceptor","children":[],"call":[]}," ActionDispatch Cookies AbstractCookieJar cookie_metadata":{"type":"method","name":"cookie_metadata","children":[],"call":["metadata []= "," request use_cookies_with_metadata "," request "," expiry_options tap "," expiry_options "," expiry_options  []= "," request use_cookies_with_ expiry_options  "]}," ActionDispatch Request use_cookies_with_metadata":{"type":"method","name":"use_cookies_with_metadata","children":[],"call":[" get_header "]}," ActionDispatch ActionableExceptions redirect_to":{"type":"method","name":"redirect_to","children":[],"call":["body bytesize to_s ","body bytesize ","Response  default_charset ","ERB Util  unwrapped_html_escape ","uri scheme == ","uri scheme ","uri relative? ","URI  parse ","URI  parse  scheme == ","URI  parse  scheme ","URI  parse  relative? "]}," ActionDispatch ActionableExceptions actionable_request?":{"type":"method","name":"actionable_request?","children":[],"call":["request path == "," endpoint ","request path ","request post? ","request show_exceptions? ","request get_header "]}," ActionDispatch ActionableExceptions call":{"type":"method","name":"call","children":[],"call":[" redirect_to ","request params [] ","request params ","ActiveSupport ActionableError  dispatch ","request params [] to_s safe_constantize ","request params [] to_s ","@app call "," actionable_request? ","ActionDispatch Request  new ","ActionDispatch Request  new  params [] ","ActionDispatch Request  new  params ","ActionDispatch Request  new  params [] to_s safe_constantize ","ActionDispatch Request  new  params [] to_s "," actionable_ActionDispatch Request  new ? "]}," ActionDispatch ActionableExceptions initialize":{"type":"method","name":"initialize","children":[],"call":[]}," ActionDispatch Journey Scanner dedup_scan":{"type":"method","name":"dedup_scan","children":[],"call":["r -@ ","@ss scan ","@ss scan  -@ "]}," ActionDispatch Journey Path Pattern MatchData named_captures":{"type":"method","name":"named_captures","children":[],"call":["@names zip to_h ","@names zip "," captures "]}," ActionDispatch Journey Nodes Symbol type":{"type":"method","name":"type","children":[],"call":[]}," ActionDispatch Journey Nodes Dot type":{"type":"method","name":"type","children":[],"call":[]}," ActionDispatch Journey Nodes Slash type":{"type":"method","name":"type","children":[],"call":[]}," ActionDispatch Http UploadedFile to_io":{"type":"method","name":"to_io","children":[],"call":["@tempfile to_io "]}," ActionDispatch Http UploadedFile to_path":{"type":"method","name":"to_path","children":[],"call":["@tempfile to_path "]}," ActionDispatch Response media_type":{"type":"method","name":"media_type","children":[],"call":[" parsed_content_type_header mime_type "," parsed_content_type_header "]}," ActionDispatch Http Parameters log_parse_error_once":{"type":"method","name":"log_parse_error_once","children":[],"call":["parse_logger debug ","(str \"Error occurred while parsing request parameters.\\n\") chomp "," raw_post ","ActiveSupport Logger  new "," logger "]}," ActionDispatch ContentSecurityPolicy Request content_security_policy_nonce_directives=":{"type":"method","name":"content_security_policy_nonce_directives=","children":[],"call":[" set_header "]}," ActionDispatch ContentSecurityPolicy Request content_security_policy_nonce_directives":{"type":"method","name":"content_security_policy_nonce_directives","children":[],"call":[" get_header "]}," ActionDispatch Http ContentDisposition percent_escape":{"type":"method","name":"percent_escape","children":[],"call":["(send\n  (send\n    (lvar :char) :bytes) :map) join ","%%%02X % ","char bytes map ","char bytes ","string gsub "]}," ActionDispatch Http ContentDisposition to_s":{"type":"method","name":"to_s","children":[],"call":[" disposition "," utf8_filename "," ascii_filename "," filename "]}," ActionDispatch Http ContentDisposition utf8_filename":{"type":"method","name":"utf8_filename","children":[],"call":["filename*=UTF-8'' + "," percent_escape "," filename "]}," ActionDispatch Http ContentDisposition ascii_filename":{"type":"method","name":"ascii_filename","children":[],"call":["filename=\" + + ","filename=\" + "," percent_escape ","I18n  transliterate "," filename "]}," ActionDispatch Http ContentDisposition initialize":{"type":"method","name":"initialize","children":[],"call":[]}," ActionDispatch Http ContentDisposition format":{"type":"method","name":"format","children":[],"call":[]}," ActionController Parameters each_value":{"type":"method","name":"each_value","children":[],"call":[" convert_hashes_to_parameters ","@parameters each_pair "," to_enum "," block_given? "]}," ActionController ParamsWrapper _perform_parameter_wrapping":{"type":"method","name":"_perform_parameter_wrapping","children":[],"call":[" request filtered_parameters merge! "," request filtered_parameters "," request "," request request_parameters merge! "," request request_parameters "," request parameters merge! "," request parameters "," _wrap_parameters "," request filtered_parameters slice "," request request_parameters keys "]}," ActionController HttpAuthentication Basic ControllerMethods http_basic_authenticate_or_request_with":{"type":"method","name":"http_basic_authenticate_or_request_with","children":[],"call":["ActiveSupport SecurityUtils  secure_compare & ","ActiveSupport SecurityUtils  secure_compare "," authenticate_or_request_with_http_basic ","given_password to_s ","given_name to_s "]}," ActionController RespondToMismatchError initialize":{"type":"method","name":"initialize","children":[],"call":[]}," ActionController DefaultHeaders ClassMethods make_response!":{"type":"method","name":"make_response!","children":[],"call":["res request= ","ActionDispatch Response  create tap ","ActionDispatch Response  create "]}," ActionController Redirecting _compute_safe_redirect_to_location":{"type":"method","name":"_compute_safe_redirect_to_location","children":[],"call":[" _compute_redirect_to_location "," raise ","(str \"Unsafe redirect \") squish ","location inspect ","response_options fetch "," _url_host_allowed? ","response_options [] ","options is_a? ","location truncate inspect ","location truncate "," _compute_redirect_to_ _compute_redirect_to_location  "," _compute_redirect_to_location  inspect "," _compute_redirect_to_location  truncate inspect "," _compute_redirect_to_location  truncate "]}," ActionDispatch SystemTestCase method_missing":{"type":"method","name":"method_missing","children":[],"call":["@proxy_route send ","@proxy_route respond_to? "," url_helpers public_send "," url_helpers "," url_helpers respond_to? "]}," ActionDispatch Integration Runner assertions=":{"type":"method","name":"assertions=","children":[],"call":[" root_session assertions= "," root_session "]}," ActionDispatch Integration Runner assertions":{"type":"method","name":"assertions","children":[],"call":[" root_session assertions "," root_session "]}," ActionController TestSession dig":{"type":"method","name":"dig","children":[],"call":["@data dig ","key to_s ","i zero? ","keys map with_index ","keys map "]}," ActionDispatch HostAuthorization Permissions extract_hostname":{"type":"method","name":"extract_hostname","children":[],"call":["host slice "]}," ActionDispatch SystemTesting TestHelpers ScreenshotHelper save_html":{"type":"method","name":"save_html","children":[],"call":[" page save_page "," absolute_html_path "," page "]}," ActionDispatch SystemTesting TestHelpers ScreenshotHelper absolute_html_path":{"type":"method","name":"absolute_html_path","children":[],"call":[" absolute_path "]}," ActionDispatch SystemTesting TestHelpers ScreenshotHelper absolute_path":{"type":"method","name":"absolute_path","children":[],"call":["Rails  root join "," image_name ","Rails  root "," screenshots_dir "]}," ActionDispatch SystemTesting TestHelpers ScreenshotHelper html_path":{"type":"method","name":"html_path","children":[],"call":[" absolute_html_path to_s "," absolute_html_path "]}," ActionDispatch SystemTesting TestHelpers ScreenshotHelper unique":{"type":"method","name":"unique","children":[],"call":["(or\n  (send nil :_screenshot_counter)\n  (int 0)) to_s "," _screenshot_counter "," failed? "]}," ActionDispatch SystemTesting TestHelpers ScreenshotHelper increment_unique":{"type":"method","name":"increment_unique","children":[],"call":[]}," ActionDispatch SystemTesting TestHelpers ScreenshotHelper save_html?":{"type":"method","name":"save_html?","children":[],"call":["ENV  [] == ","ENV  [] "]}," ActionDispatch SystemTesting Browser set_headless_firefox_browser_options":{"type":"method","name":"set_headless_firefox_browser_options","children":[],"call":["capabilities args << ","capabilities args "," configure ","capabilities add_argument "]}," ActionDispatch SystemTesting Browser set_headless_chrome_browser_options":{"type":"method","name":"set_headless_chrome_browser_options","children":[],"call":["capabilities args << ","capabilities args ","Gem  win_platform? "," configure ","capabilities add_argument "]}," ActionDispatch SystemTesting Browser set_default_options":{"type":"method","name":"set_default_options","children":[],"call":[" set_headless_firefox_browser_options "," set_headless_chrome_browser_options "," name "]}," ActionDispatch SystemTesting Browser initialize_options":{"type":"method","name":"initialize_options","children":[],"call":[" Selenium WebDriver Firefox Options  new "," Selenium WebDriver Chrome Options  new "," type "]}," ActionDispatch SystemTesting Browser configure":{"type":"method","name":"configure","children":[],"call":[" options "," block_given? "," initialize_options "]}," ActionDispatch SystemTestCase respond_to_missing?":{"type":"method","name":"respond_to_missing?","children":[],"call":[" url_helpers respond_to? "," url_helpers "]}," ActionDispatch SystemTestCase url_helpers":{"type":"method","name":"url_helpers","children":[{"type":"method","name":"url_options","children":[],"asgn":[],"call":[" default_url_options reverse_merge ","Capybara  current_session server_url ","Capybara  current_session ","Capybara  app_host "," default_url_options "]}],"call":["(send\n  (const nil :Class) :new) new "," default_url_options reverse_merge ","Capybara  current_session server_url ","Capybara  current_session ","Capybara  app_host "," default_url_options "," include ","ActionDispatch  test_app routes mounted_helpers ","ActionDispatch  test_app routes ","ActionDispatch  test_app ","ActionDispatch  test_app routes url_helpers ","Class  new "," app_host "]}," ActionDispatch Routing Mapper Resources draw":{"type":"method","name":"draw","children":[],"call":[" instance_eval ","route_path to_s ","File  read "," raise ","(send\n  (ivar :@draw_paths) :map) join ","@draw_paths map ","File  exist? ","@draw_paths find "]}," ActionDispatch Routing Mapper HttpHelpers options":{"type":"method","name":"options","children":[],"call":[" map_method "]}," ActionDispatch Routing Mapper Mapping alter_regex_for_custom_routes":{"type":"method","name":"alter_regex_for_custom_routes","children":[],"call":["symbol regexp= ","Regexp  union ","symbol regexp ","node left ","node right left literal? ","node right left ","node right ","node right cat? ","node left symbol? ","node right literal? ","node right left symbol? ","node left literal? ","node right symbol? ","node left  regexp= ","node right left  regexp= ","node right  regexp= ","node left  regexp ","node right left  regexp ","node right  regexp ","node left node left ? ","node left node right left ? ","node left node right ? ","node right left node left ? ","node right left node right left ? ","node right left node right ? ","node right node left ? ","node right node right left ? ","node right node right ? "]}," ActionDispatch Routing ConsoleFormatter Expanded initialize":{"type":"method","name":"initialize","children":[],"call":[]}," ActionDispatch Request Utils CustomParamEncoder action_encoding_template":{"type":"method","name":"action_encoding_template","children":[],"call":[]}," ActionDispatch Request Utils CustomParamEncoder encode":{"type":"method","name":"encode","children":[],"call":[]}," ActionDispatch Request Utils set_binary_encoding":{"type":"method","name":"set_binary_encoding","children":[],"call":[]}," ActionDispatch FileHandler clean_path":{"type":"method","name":"clean_path","children":[],"call":[" Rack Utils  clean_path_info "," Rack Utils  valid_path? "," Rack Utils  unescape_path ","path_info chomp "," Rack Utils  clean_ Rack Utils  unescape_path _info "," Rack Utils  valid_ Rack Utils  unescape_path ? "," Rack Utils  unescape_ Rack Utils  unescape_path  "," Rack Utils  unescape_path _info chomp "]}," ActionDispatch FileHandler each_candidate_filepath":{"type":"method","name":"each_candidate_filepath","children":[],"call":[" Rack Mime  mime_type ","ext != "," ActionController Base  default_static_extension "," File  extname "," clean_path "," File  extname  != "," ActionController Base  default_static_ File  extname ension "," File   File  extname name "," clean_ clean_path  "]}," ActionDispatch FileHandler each_precompressed_filepath":{"type":"method","name":"each_precompressed_filepath","children":[],"call":["PRECOMPRESSED  fetch ","@precompressed each "]}," ActionDispatch FileHandler compressible?":{"type":"method","name":"compressible?","children":[],"call":["@compressible_content_types match? "]}," ActionDispatch FileHandler file_readable?":{"type":"method","name":"file_readable?","children":[],"call":["file_stat readable? ","file_stat file? ","File  stat ","File  join ","path b ","File  readable? ","File  file? ","File  stat  readable? ","File  stat  file? "]}," ActionDispatch FileHandler try_precompressed_files":{"type":"method","name":"try_precompressed_files","children":[],"call":["headers []= ","(str \"\\\\b\") match? ","accept_encoding any? ","content_encoding == "," file_readable? "," each_precompressed_filepath "]}," ActionDispatch FileHandler try_files":{"type":"method","name":"try_files","children":[],"call":[" file_readable? "," try_precompressed_files "," compressible? "]}," ActionDispatch FileHandler find_file":{"type":"method","name":"find_file","children":[],"call":[" try_files "," each_candidate_filepath "]}," ActionDispatch FileHandler attempt":{"type":"method","name":"attempt","children":[],"call":[" serve "," find_file ","request accept_encoding ","request path_info ","request head? ","request get? ","Rack Request  new ","Rack Request  new  accept_encoding ","Rack Request  new  path_info ","Rack Request  new  head? ","Rack Request  new  get? "]}," ActionDispatch MiddlewareStack move_after":{"type":"method","name":"move_after","children":[],"call":[" middlewares insert ","target_index + "," middlewares "," assert_index "," middlewares delete_at "," assert_index  + "]}," ActionDispatch MiddlewareStack move":{"type":"method","name":"move","children":[],"call":[" middlewares insert "," middlewares "," assert_index "," middlewares delete_at "]}," ActionDispatch HostAuthorization excluded?":{"type":"method","name":"excluded?","children":[],"call":["@exclude call "]}," ActionDispatch ExceptionWrapper exception_trace":{"type":"method","name":"exception_trace","children":[],"call":[" framework_trace "," silent_exceptions include? ! "," silent_exceptions include? "," silent_exceptions ","trace empty? "," application_trace "," framework_ framework_trace  "," framework_ application_trace  "," framework_trace  empty? "," application_trace  empty? "," application_ framework_trace  "," application_ application_trace  "]}," ActionDispatch Cookies MarshalWithJsonFallback dump":{"type":"method","name":"dump","children":[],"call":[]}," ActionDispatch Cookies MarshalWithJsonFallback load":{"type":"method","name":"load","children":[],"call":[]}," ActionDispatch Cookies ChainedCookieJars prepare_upgrade_legacy_hmac_aes_cbc_cookies?":{"type":"method","name":"prepare_upgrade_legacy_hmac_aes_cbc_cookies?","children":[],"call":[" request use_authenticated_cookie_encryption ! "," request use_authenticated_cookie_encryption "," request "," request authenticated_encrypted_cookie_salt present? "," request authenticated_encrypted_cookie_salt "," request secret_key_base present? "," request secret_key_base "]}," ActionDispatch Request cookies_same_site_protection":{"type":"method","name":"cookies_same_site_protection","children":[],"call":["Proc  new "," get_header "]}," ActionDispatch Journey Path Pattern requirements_for_missing_keys_check":{"type":"method","name":"requirements_for_missing_keys_check","children":[],"call":[" requirements transform_values "," requirements "]}," ActionDispatch Journey Path Pattern match?":{"type":"method","name":"match?","children":[],"call":[" to_regexp match? "," to_regexp "]}," ActionDispatch Journey Formatter MissingRoute message":{"type":"method","name":"message","children":[],"call":["message << "," unmatched_keys sort inspect "," unmatched_keys sort "," unmatched_keys "," unmatched_keys empty? ! "," unmatched_keys empty? "," missing_keys sort inspect "," missing_keys sort "," missing_keys "," missing_keys empty? ! "," missing_keys empty? ","(str \"No route matches \") +@ ","Hash  [] inspect ","Hash  [] ","k to_s "," constraints sort_by "," constraints ","(str \"No route matches \") +@  << "]}," ActionDispatch Journey Formatter MissingRoute params":{"type":"method","name":"params","children":[],"call":[" path "]}," ActionDispatch Journey Formatter MissingRoute path":{"type":"method","name":"path","children":[],"call":[" raise ","ActionController UrlGenerationError  new "," name "," routes "," message "]}," ActionDispatch Journey Formatter MissingRoute initialize":{"type":"method","name":"initialize","children":[],"call":[]}," ActionDispatch Journey Formatter RouteWithParams path":{"type":"method","name":"path","children":[],"call":["@route format "]}," ActionDispatch Journey Formatter RouteWithParams initialize":{"type":"method","name":"initialize","children":[],"call":[]}," ActionDispatch Response return_only_media_type_on_content_type":{"type":"method","name":"return_only_media_type_on_content_type","children":[],"call":[]}," ActionDispatch Response return_only_media_type_on_content_type=":{"type":"method","name":"return_only_media_type_on_content_type=","children":[],"call":[]}," ActionDispatch Request inspect":{"type":"method","name":"inspect","children":[],"call":[" remote_ip "," original_url dump "," original_url "," method "," class name "," class "]}," ActionDispatch Request action_encoding_template":{"type":"method","name":"action_encoding_template","children":[],"call":[]}," ActionDispatch PermissionsPolicy resolve_source":{"type":"method","name":"resolve_source","children":[],"call":[" raise ","source inspect ","context instance_exec ","context nil? ","source to_s "]}," ActionDispatch PermissionsPolicy build_directive":{"type":"method","name":"build_directive","children":[],"call":[" resolve_source ","sources map "]}," ActionDispatch PermissionsPolicy build_directives":{"type":"method","name":"build_directives","children":[],"call":[" build_directive join "," build_directive ","sources is_a? ","@directives map "]}," ActionDispatch PermissionsPolicy apply_mapping":{"type":"method","name":"apply_mapping","children":[],"call":[" raise ","source inspect ","MAPPINGS  fetch "]}," ActionDispatch PermissionsPolicy apply_mappings":{"type":"method","name":"apply_mappings","children":[],"call":[" raise ","source inspect "," apply_mapping ","sources map "]}," ActionDispatch PermissionsPolicy build":{"type":"method","name":"build","children":[],"call":[" build_directives compact join "," build_directives compact "," build_directives "]}," ActionDispatch PermissionsPolicy initialize_copy":{"type":"method","name":"initialize_copy","children":[],"call":["other directives deep_dup ","other directives "]}," ActionDispatch PermissionsPolicy initialize":{"type":"method","name":"initialize","children":[],"call":[" block_given? "]}," ActionDispatch PermissionsPolicy Request permissions_policy=":{"type":"method","name":"permissions_policy=","children":[],"call":[" set_header "]}," ActionDispatch PermissionsPolicy Request permissions_policy":{"type":"method","name":"permissions_policy","children":[],"call":[" get_header "]}," ActionDispatch PermissionsPolicy Middleware policy_empty?":{"type":"method","name":"policy_empty?","children":[],"call":[]}," ActionDispatch PermissionsPolicy Middleware policy_present?":{"type":"method","name":"policy_present?","children":[],"call":["headers [] "]}," ActionDispatch PermissionsPolicy Middleware html_response?":{"type":"method","name":"html_response?","children":[],"call":["(str \"html\") match? ","headers [] ","content_type include? ","headers []  include? "]}," ActionDispatch PermissionsPolicy Middleware call":{"type":"method","name":"call","children":[],"call":["headers delete "," policy_empty? ","headers []= ","policy build ","request controller_instance ","request permissions_policy "," policy_present? "," html_response? ","@app call ","ActionDispatch Request  new "," request permissions_policy _empty? ","request permissions_policy  build ","ActionDispatch Request  new  controller_instance ","request permissions_request permissions_policy  ","ActionDispatch Request  new  permissions_policy "," request permissions_policy _present? "," html_@app call ? "]}," ActionDispatch PermissionsPolicy Middleware initialize":{"type":"method","name":"initialize","children":[],"call":[]}," Mime NullType to_s":{"type":"method","name":"to_s","children":[],"call":[]}," Mime Type match?":{"type":"method","name":"match?","children":[],"call":["@string match? ","synonym to_s match? ","synonym to_s ","@synonyms any? ","Regexp  new ","Regexp  quote ","mime_type to_s "]}," ActionDispatch Http MimeNegotiation params_readable?":{"type":"method","name":"params_readable?","children":[],"call":[" parameters [] "," parameters "]}," ActionDispatch Http MimeNegotiation should_apply_vary_header?":{"type":"method","name":"should_apply_vary_header?","children":[],"call":[" valid_accept_header "," use_accept_header "," params_readable? ! "," params_readable? "]}," ActionController TestCase Behavior process_controller_response":{"type":"method","name":"process_controller_response","children":[],"call":["@response sent! ","@request query_string= ","@request delete_header ","@request session delete ","@request session ","@request session []= ","@request flash to_session_value ","@request flash ","@response prepare! ","cookies update ","@request cookie_jar instance_variable_get ","@request cookie_jar ","@request cookie_jar write ","@request cookie_jar committed? ","@request have_cookie_jar? ","@controller response ","@controller request ","@controller dispatch ","@controller recycle! "," wrap_execution ","@controller response  sent! ","@controller request  query_string= ","@controller request  delete_header ","@controller request  session delete ","@controller request  session ","@controller request  session []= ","@controller request  flash to_session_value ","@controller request  flash ","@controller response  prepare! ","@controller request  cookie_jar instance_variable_get ","@controller request  cookie_jar ","@controller request  cookie_jar write ","@controller request  cookie_jar committed? ","@controller request  have_cookie_jar? "]}," ActionController TestCase Behavior setup_request":{"type":"method","name":"setup_request","children":[],"call":["@request set_header ","@controller config relative_url_root ","@controller config ","@request fetch_header ","(send\n  (const nil :Mime) :[]\n  (sym :js)) join ","Mime  [] ","@request flash update ","@request flash ","@request session update ","@request session ","@request assign_parameters "," query_parameter_names "," generated_path ","@routes generate_extras ","parameters merge ","  generated_path  "]}," ActionController Metal action_encoding_template":{"type":"method","name":"action_encoding_template","children":[],"call":[]}," ActionController Parameters each_nested_attribute":{"type":"method","name":"each_nested_attribute","children":[],"call":["hash []= ","Parameters  nested_attribute? "," each "," class new "," class "," class new  []= "]}," ActionController Parameters nested_attributes?":{"type":"method","name":"nested_attributes?","children":[],"call":["Parameters  nested_attribute? ","@parameters any? "]}," ActionController Parameters compact_blank!":{"type":"method","name":"compact_blank!","children":[],"call":["v blank? "," reject! "]}," ActionController Parameters compact_blank":{"type":"method","name":"compact_blank","children":[],"call":["v blank? "," reject "]}," ActionController Parameters compact!":{"type":"method","name":"compact!","children":[],"call":["@parameters compact! "]}," ActionController Parameters compact":{"type":"method","name":"compact","children":[],"call":[" new_instance_with_inherited_permitted_status ","@parameters compact "]}," ActionController Parameters deep_transform_keys!":{"type":"method","name":"deep_transform_keys!","children":[],"call":["@parameters deep_transform_keys! "]}," ActionController Parameters deep_transform_keys":{"type":"method","name":"deep_transform_keys","children":[],"call":[" new_instance_with_inherited_permitted_status ","@parameters deep_transform_keys "]}," ActionController Parameters hash":{"type":"method","name":"hash","children":[],"call":["(send\n  (ivar :@parameters) :hash) hash ","@parameters hash ","(send\n  (self) :class) hash "," class "]}," ActionController Parameters nested_attribute?":{"type":"method","name":"nested_attribute?","children":[],"call":["value is_a? ","(str \"\\\\A-?\\\\d+\\\\z\") match? "]}," ActionController ParameterMissing Correction corrections":{"type":"method","name":"corrections","children":[],"call":["(send\n  (lvar :maybe_these) :sort_by) reverse first ","(send\n  (lvar :maybe_these) :sort_by) reverse ","DidYouMean Jaro  distance ","@error param to_s ","@error param ","maybe_these sort_by ","@error keys ","(send\n  (lvar :@error keys ) :sort_by) reverse first ","(send\n  (lvar :@error keys ) :sort_by) reverse ","@error keys  sort_by "]}," ActionController ParameterMissing Correction initialize":{"type":"method","name":"initialize","children":[],"call":[]}," ActionController Rendering _set_vary_header":{"type":"method","name":"_set_vary_header","children":[],"call":[" headers []= "," headers "," request should_apply_vary_header? "," request "," headers [] blank? "," headers [] "," response headers []= "," response headers "," response "," response headers [] blank? "," response headers [] "]}," ActionController PermissionsPolicy ClassMethods permissions_policy":{"type":"method","name":"permissions_policy","children":[],"call":[" request permissions_policy= "," request "," request permissions_policy clone "," request permissions_policy "," block_given? "," before_action "," instance_exec "," request permissions_ request permissions_policy clone = "," request permissions_ request permissions_policy clone  clone "," request permissions_ request permissions_policy clone  "]}," ActionController ParameterEncoding ClassMethods param_encoding":{"type":"method","name":"param_encoding","children":[],"call":["@_parameter_encodings [] []= ","param to_s ","@_parameter_encodings [] ","action to_s "]}," ActionController ParameterEncoding ClassMethods action_encoding_template":{"type":"method","name":"action_encoding_template","children":[],"call":["@_parameter_encodings [] ","action to_s ","@_parameter_encodings has_key? "]}," ActionController MimeResponds Collector any_response?":{"type":"method","name":"any_response?","children":[],"call":["@responses [] ","@responses fetch ! ","@responses fetch "," format "]}," ActionController Logging ClassMethods log_at":{"type":"method","name":"log_at","children":[],"call":[" around_action "," logger log_at "," logger "," lambda "]}," ActionController UrlGenerationError Correction corrections":{"type":"method","name":"corrections","children":[],"call":["(send\n  (lvar :maybe_these) :sort_by) reverse first ","(send\n  (lvar :maybe_these) :sort_by) reverse ","DidYouMean Jaro  distance ","@error route_name ","maybe_these sort_by ","@error method_name to_s ","@error method_name ","@error routes named_routes helper_names grep ","@error routes named_routes helper_names ","@error routes named_routes ","@error routes ","(send\n  (lvar :@error routes named_routes helper_names grep ) :sort_by) reverse first ","(send\n  (lvar :@error routes named_routes helper_names grep ) :sort_by) reverse ","@error routes named_routes helper_names grep  sort_by "]}," ActionController UrlGenerationError Correction initialize":{"type":"method","name":"initialize","children":[],"call":[]}," ActionController UrlGenerationError initialize":{"type":"method","name":"initialize","children":[],"call":[]}," AbstractController Rendering _set_vary_header":{"type":"method","name":"_set_vary_header","children":[],"call":[]}," AbstractController Helpers ClassMethods define_helpers_module":{"type":"method","name":"define_helpers_module","children":[],"call":["mod include ","klass const_set ","Module  new ","klass const_get ","klass const_defined? ","Module  new  include "]}," AbstractController Helpers ClassMethods _helpers_for_modification":{"type":"method","name":"_helpers_for_modification","children":[],"call":[" _helpers "," _helpers= "," define_helpers_module "," superclass _helpers "," superclass "]}," AbstractController Helpers _helpers":{"type":"method","name":"_helpers","children":[],"call":[" class _helpers "," class "]}," AbstractController Base inspect":{"type":"method","name":"inspect","children":[],"call":["%#016x % "," object_id << "," object_id "," class name "," class "]}," AbstractController ActionNotFound Correction corrections":{"type":"method","name":"corrections","children":[],"call":["(send\n  (lvar :maybe_these) :sort_by) reverse first ","(send\n  (lvar :maybe_these) :sort_by) reverse ","DidYouMean Jaro  distance ","@error action to_s ","@error action ","maybe_these sort_by ","@error controller class action_methods ","@error controller class ","@error controller ","(send\n  (lvar :@error controller class action_methods ) :sort_by) reverse first ","(send\n  (lvar :@error controller class action_methods ) :sort_by) reverse ","@error controller class action_methods  sort_by "]}," AbstractController ActionNotFound Correction initialize":{"type":"method","name":"initialize","children":[],"call":[]}," AbstractController ActionNotFound initialize":{"type":"method","name":"initialize","children":[],"call":[]}," ActionDispatch FeaturePolicy resolve_source":{"type":"method","name":"resolve_source","children":[],"call":[" raise ","source inspect ","context instance_exec ","context nil? ","source to_s "]}," ActionDispatch FeaturePolicy build_directive":{"type":"method","name":"build_directive","children":[],"call":[" resolve_source ","sources map "]}," ActionDispatch FeaturePolicy build_directives":{"type":"method","name":"build_directives","children":[],"call":[" build_directive join "," build_directive ","sources is_a? ","@directives map "]}," ActionDispatch FeaturePolicy apply_mapping":{"type":"method","name":"apply_mapping","children":[],"call":[" raise ","source inspect ","MAPPINGS  fetch "]}," ActionDispatch FeaturePolicy apply_mappings":{"type":"method","name":"apply_mappings","children":[],"call":[" raise ","source inspect "," apply_mapping ","sources map "]}," ActionDispatch FeaturePolicy build":{"type":"method","name":"build","children":[],"call":[" build_directives compact join "," build_directives compact "," build_directives "]}," ActionDispatch FeaturePolicy initialize_copy":{"type":"method","name":"initialize_copy","children":[],"call":["other directives deep_dup ","other directives "]}," ActionDispatch FeaturePolicy initialize":{"type":"method","name":"initialize","children":[],"call":[" block_given? "]}," ActionDispatch FeaturePolicy Request feature_policy=":{"type":"method","name":"feature_policy=","children":[],"call":[" set_header "]}," ActionDispatch FeaturePolicy Request feature_policy":{"type":"method","name":"feature_policy","children":[],"call":[" get_header "]}," ActionDispatch FeaturePolicy Middleware policy_empty?":{"type":"method","name":"policy_empty?","children":[],"call":[]}," ActionDispatch FeaturePolicy Middleware policy_present?":{"type":"method","name":"policy_present?","children":[],"call":["headers [] "]}," ActionDispatch FeaturePolicy Middleware html_response?":{"type":"method","name":"html_response?","children":[],"call":["(str \"html\") match? ","headers [] "]}," ActionDispatch FeaturePolicy Middleware call":{"type":"method","name":"call","children":[],"call":["headers delete "," policy_empty? ","headers []= ","policy build ","request controller_instance ","request feature_policy "," policy_present? "," html_response? ","@app call ","ActionDispatch Request  new "," request feature_policy _empty? ","request feature_policy  build ","ActionDispatch Request  new  controller_instance ","request feature_request feature_policy  ","ActionDispatch Request  new  feature_policy "," request feature_policy _present? "," html_@app call ? "]}," ActionDispatch FeaturePolicy Middleware initialize":{"type":"method","name":"initialize","children":[],"call":[]}," ActionController FeaturePolicy ClassMethods feature_policy":{"type":"method","name":"feature_policy","children":[],"call":[" request feature_policy= "," request "," request feature_policy clone "," request feature_policy "," block_given? "," before_action "," request feature_ request feature_policy clone = "," request feature_ request feature_policy clone  clone "," request feature_ request feature_policy clone  "]}," ActionController Live Buffer build_queue":{"type":"method","name":"build_queue","children":[],"call":["Queue  new ","SizedQueue  new "]}," ActionDispatch ShowExceptions fallback_to_html_format_if_invalid_mime_type":{"type":"method","name":"fallback_to_html_format_if_invalid_mime_type","children":[],"call":["request set_header ","request formats "]}," ActionDispatch HostAuthorization DefaultResponseApp available_logger":{"type":"method","name":"available_logger","children":[],"call":["ActionView Base  logger ","request logger "]}," ActionDispatch HostAuthorization DefaultResponseApp log_error":{"type":"method","name":"log_error","children":[],"call":["logger error ","request host "," class name "," class "," available_logger ","request env [] join ","request env [] ","request env "," available_logger  error "," available_ available_logger  "]}," ActionDispatch HostAuthorization DefaultResponseApp response":{"type":"method","name":"response","children":[],"call":["body bytesize to_s ","body bytesize ","Response  default_charset "]}," ActionDispatch HostAuthorization DefaultResponseApp response_body":{"type":"method","name":"response_body","children":[],"call":["template render ","DebugView  new ","request host ","request get_header ","request env [] ","request env ","DebugView  new  render "]}," ActionDispatch HostAuthorization DefaultResponseApp call":{"type":"method","name":"call","children":[],"call":[" response "," response_body "," log_error ","request xhr? ","Request  new ","Request  new  xhr? "]}," ActionController Redirecting _ensure_url_is_http_header_safe":{"type":"method","name":"_ensure_url_is_http_header_safe","children":[],"call":[" raise ","url match ","url match? "]}," ActionDispatch SystemTesting TestHelpers ScreenshotHelper screenshots_dir":{"type":"method","name":"screenshots_dir","children":[],"call":["Capybara  save_path presence ","Capybara  save_path "]}," ActionDispatch SystemTesting Driver register_rack_test":{"type":"method","name":"register_rack_test","children":[],"call":["Capybara RackTest Driver  new "]}," ActionDispatch SystemTesting Driver register_cuprite":{"type":"method","name":"register_cuprite","children":[],"call":["Capybara Cuprite Driver  new ","@options merge "]}," ActionDispatch Request Session load_for_delete!":{"type":"method","name":"load_for_delete!","children":[],"call":[" load! "," loaded? ! "," loaded? "," enabled? "]}," ActionDispatch Request Session enabled?":{"type":"method","name":"enabled?","children":[],"call":[]}," ActionDispatch Request Session disabled":{"type":"method","name":"disabled","children":[],"call":[]}," ActionDispatch MiddlewareStack index_of":{"type":"method","name":"index_of","children":[],"call":["m name == ","klass name ","m name "," middlewares index "," middlewares ","klass == ","m klass == ","m klass ","ActiveSupport Deprecation  warn ","(str \"            Rack::Runtime is removed from the default middleware stack in Rails\\n\") squish "," raise "]}," ActionDispatch MiddlewareStack delete!":{"type":"method","name":"delete!","children":[],"call":[" raise ","target inspect "," delete "]}," ActionDispatch ServerTiming call":{"type":"method","name":"call","children":[],"call":["headers []= ","header_info join ","events_collection sum ","events group_by map ","events group_by ","ActiveSupport Notifications  unsubscribe ","@app call ","events << ","ActiveSupport Notifications Event  new ","ActiveSupport Notifications  subscribe ","header_info prepend ","headers [] ","headers [] present? ","%s;dur=%.2f % ","response [] ","@subscriber collect_events ","response []  []= ","response []  [] ","response []  [] present? ","@app call  [] "]}," ActionDispatch ServerTiming initialize":{"type":"method","name":"initialize","children":[],"call":["@subscriber ensure_subscribed ","Subscriber  instance ","Subscriber  instance  ensure_subscribed "]}," ActionDispatch ExceptionWrapper rescue_response?":{"type":"method","name":"rescue_response?","children":[],"call":["@@rescue_responses key? "," exception class name "," exception class "," exception "]}," ActionDispatch DebugExceptions log_rescued_responses?":{"type":"method","name":"log_rescued_responses?","children":[],"call":["request get_header "]}," ActionDispatch RequestCookieMethods use_cookies_with_metadata":{"type":"method","name":"use_cookies_with_metadata","children":[],"call":[" get_header "]}," ActionDispatch RequestCookieMethods cookies_rotations":{"type":"method","name":"cookies_rotations","children":[],"call":[" get_header "]}," ActionDispatch RequestCookieMethods cookies_digest":{"type":"method","name":"cookies_digest","children":[],"call":[" get_header "]}," ActionDispatch RequestCookieMethods cookies_same_site_protection":{"type":"method","name":"cookies_same_site_protection","children":[],"call":["Proc  new "," get_header "]}," ActionDispatch RequestCookieMethods cookies_serializer":{"type":"method","name":"cookies_serializer","children":[],"call":[" get_header "]}," ActionDispatch RequestCookieMethods secret_key_base":{"type":"method","name":"secret_key_base","children":[],"call":[" get_header "]}," ActionDispatch RequestCookieMethods signed_cookie_digest":{"type":"method","name":"signed_cookie_digest","children":[],"call":[" get_header "]}," ActionDispatch RequestCookieMethods encrypted_cookie_cipher":{"type":"method","name":"encrypted_cookie_cipher","children":[],"call":[" get_header "]}," ActionDispatch RequestCookieMethods use_authenticated_cookie_encryption":{"type":"method","name":"use_authenticated_cookie_encryption","children":[],"call":[" get_header "]}," ActionDispatch RequestCookieMethods authenticated_encrypted_cookie_salt":{"type":"method","name":"authenticated_encrypted_cookie_salt","children":[],"call":[" get_header "]}," ActionDispatch RequestCookieMethods encrypted_signed_cookie_salt":{"type":"method","name":"encrypted_signed_cookie_salt","children":[],"call":[" get_header "]}," ActionDispatch RequestCookieMethods encrypted_cookie_salt":{"type":"method","name":"encrypted_cookie_salt","children":[],"call":[" get_header "]}," ActionDispatch RequestCookieMethods signed_cookie_salt":{"type":"method","name":"signed_cookie_salt","children":[],"call":[" get_header "]}," ActionDispatch RequestCookieMethods key_generator":{"type":"method","name":"key_generator","children":[],"call":[" get_header "]}," ActionDispatch RequestCookieMethods cookie_jar=":{"type":"method","name":"cookie_jar=","children":[],"call":[" set_header "]}," ActionDispatch RequestCookieMethods have_cookie_jar?":{"type":"method","name":"have_cookie_jar?","children":[],"call":[" has_header? "]}," ActionDispatch RequestCookieMethods commit_cookie_jar!":{"type":"method","name":"commit_cookie_jar!","children":[],"call":[" cookie_jar commit! "," cookie_jar "]}," ActionDispatch RequestCookieMethods cookie_jar":{"type":"method","name":"cookie_jar","children":[],"call":[" cookie_jar= ","Cookies CookieJar  build "," cookies "," fetch_header "]}," ActionDispatch Journey Path Pattern requirements_anchored?":{"type":"method","name":"requirements_anchored?","children":[],"call":["fwd literal? ","fwd nil? ! ","fwd nil? ","back literal? ","s regexp is_a? ","s regexp ","s symbol? ","terminals [] ","index + ","index - ","s type == ","s type ","index < ","terminals each_with_index "," ast terminals "," ast ","terminals []  literal? ","terminals []  nil? ! ","terminals []  nil? "," ast terminals  [] "," ast terminals  each_with_index "," ast  ast terminals  "]}," ActionDispatch Journey Nodes Star initialize":{"type":"method","name":"initialize","children":[],"call":[]}," ActionDispatch Journey Ast visit_tree":{"type":"method","name":"visit_tree","children":[],"call":[" terminals << "," terminals ","node terminal? "," wildcard_options [] ","node name to_sym ","node name "," wildcard_options ","formatted != "," stars << "," stars ","node star? "," symbols << "," symbols "," names << "," names "," path_params << ","node to_sym "," path_params ","node symbol? "," tree each "," tree "]}," ActionDispatch Journey Ast glob?":{"type":"method","name":"glob?","children":[],"call":[" stars any? "," stars "]}," ActionDispatch Journey Ast route=":{"type":"method","name":"route=","children":[],"call":["n memo= "," terminals each "," terminals "]}," ActionDispatch Journey Ast requirements=":{"type":"method","name":"requirements=","children":[],"call":["node regexp= ","requirements [] ","node to_sym ","(send\n  (send nil :symbols) :+\n  (send nil :stars)) each "," symbols + "," stars "," symbols ","node requirements [] gexp= ","requirements [] quirequirements [] ments [] "]}," ActionDispatch Journey Ast initialize":{"type":"method","name":"initialize","children":[],"call":[" visit_tree "]}," ActionDispatch Request default_session":{"type":"method","name":"default_session","children":[],"call":["Session  disabled "]}," ActionController TestCase Behavior wrap_execution":{"type":"method","name":"wrap_execution","children":[],"call":["Rails  application executor wrap ","Rails  application executor ","Rails  application ","ActionController TestCase  executor_around_each_request "]}," ActionController TestSession enabled?":{"type":"method","name":"enabled?","children":[],"call":[]}," ActionController Testing Functional clear_instance_variables_between_requests":{"type":"method","name":"clear_instance_variables_between_requests","children":[],"call":[" instance_variables "," remove_instance_variable ","new_ivars each "," instance_variables - "," instance_variables -  each "]}," ActionController Parameters specify_numeric_keys?":{"type":"method","name":"specify_numeric_keys?","children":[],"call":["(str \"\\\\A-?\\\\d+\\\\z\") match? ","filter keys any? ","filter keys ","filter respond_to? "]}," ActionController ParameterMissing corrections":{"type":"method","name":"corrections","children":[],"call":["DidYouMean SpellChecker  new correct "," param to_s "," param ","DidYouMean SpellChecker  new "," keys "]}," ActionController RequestForgeryProtection unverified_request_warning_message":{"type":"method","name":"unverified_request_warning_message","children":[],"call":[" request base_url "," request "," request origin "," valid_request_origin? "]}," ActionController RequestForgeryProtection ProtectionMethods NullSession NullSessionHash enabled?":{"type":"method","name":"enabled?","children":[],"call":[]}," ActionController Redirecting _enforce_open_redirect_protection":{"type":"method","name":"_enforce_open_redirect_protection","children":[],"call":[" raise ","location truncate inspect ","location truncate "," _url_host_allowed? "]}," ActionController Redirecting _allow_other_host":{"type":"method","name":"_allow_other_host","children":[],"call":[" raise_on_open_redirects ! "," raise_on_open_redirects "]}," ActionController Redirecting url_from":{"type":"method","name":"url_from","children":[],"call":[" _url_host_allowed? ","location presence ","location presence  presence "]}," ActionController Redirecting redirect_back_or_to":{"type":"method","name":"redirect_back_or_to","children":[],"call":[" redirect_to "," request referer "," request "," _url_host_allowed? ","allow_other_host ! "," _allow_other_host "]}," ActionController Live send_stream":{"type":"method","name":"send_stream","children":[],"call":[" response stream close "," response stream "," response "," response headers []= ","ActionDispatch Http ContentDisposition  format "," response headers ","Mime Type  lookup_by_extension ","File  extname downcase delete ","File  extname downcase ","File  extname ","Mime  [] to_s ","Mime  [] ","type is_a? "]}," ActionController Live Buffer writeln":{"type":"method","name":"writeln","children":[],"call":[" write ","string end_with? "]}," ActionController Flash ClassMethods action_methods":{"type":"method","name":"action_methods","children":[],"call":[" - "," _flash_types map to_set "," _flash_types map "," _flash_types "]}," ActionController UrlGenerationError corrections":{"type":"method","name":"corrections","children":[],"call":["DidYouMean SpellChecker  new correct "," route_name ","DidYouMean SpellChecker  new "," method_name to_s "," method_name "," routes "]}," ActionController ConditionalGet no_store":{"type":"method","name":"no_store","children":[],"call":[" response cache_control replace "," response cache_control "," response "]}," AbstractController Callbacks ActionFilter match?":{"type":"method","name":"match?","children":[],"call":["@actions include? ","controller action_name "," raise ","ActionNotFound  new ","@conditional_key inspect ","controller class name ","controller class ","@filters inspect ","@filters first inspect ","@filters first ","@filters length == ","@filters length ","controller available_action? ! ","controller available_action? ","@actions find ","controller raise_on_missing_callback_actions "]}," AbstractController Callbacks ActionFilter initialize":{"type":"method","name":"initialize","children":[],"call":[" Array map to_set "," Array map "," Array ","filters to_a "]}," AbstractController ActionNotFound corrections":{"type":"method","name":"corrections","children":[],"call":["DidYouMean SpellChecker  new correct "," action ","DidYouMean SpellChecker  new "," controller class action_methods "," controller class "," controller "]}," ActionDispatch MiddlewareStack FakeRuntime call":{"type":"method","name":"call","children":[],"call":["@app call "]}," ActionDispatch MiddlewareStack FakeRuntime initialize":{"type":"method","name":"initialize","children":[],"call":[]}," ActionController RequestForgeryProtection ensure_session_is_enabled!":{"type":"method","name":"ensure_session_is_enabled!","children":[],"call":[" raise ","ActiveSupport Deprecation  warn "," silence_disabled_session_errors "," session enabled? "," session "," session respond_to? ! "," session respond_to? "]}," ActionController RequestForgeryProtection DisabledSessionError initialize":{"type":"method","name":"initialize","children":[],"call":[]}," ActionController QueryTags expose_controller_to_query_logs":{"type":"method","name":"expose_controller_to_query_logs","children":[],"call":["ActiveRecord QueryLogs  set_context "]}," ActionController Parameters encode_with":{"type":"method","name":"encode_with","children":[],"call":["coder map= "]}," ActionDispatch ServerTiming unsubscribe":{"type":"method","name":"unsubscribe","children":[],"call":[]}," ActionDispatch ServerTiming Subscriber unsubscribe":{"type":"method","name":"unsubscribe","children":[],"call":["ActiveSupport Notifications  unsubscribe ","@mutex synchronize "]}," ActionDispatch ServerTiming Subscriber ensure_subscribed":{"type":"method","name":"ensure_subscribed","children":[],"call":["ActiveSupport Notifications  subscribe ","@mutex synchronize "]}," ActionDispatch ServerTiming Subscriber collect_events":{"type":"method","name":"collect_events","children":[],"call":["ActiveSupport IsolatedExecutionState  delete ","ActiveSupport IsolatedExecutionState  []= "]}," ActionDispatch ServerTiming Subscriber call":{"type":"method","name":"call","children":[],"call":["events << ","ActiveSupport IsolatedExecutionState  [] ","ActiveSupport IsolatedExecutionState  []  << "]}," ActionDispatch ServerTiming Subscriber initialize":{"type":"method","name":"initialize","children":[],"call":["Mutex  new "]}," ActionController Parameters eql?":{"type":"method","name":"eql?","children":[],"call":[" parameters eql? ","other parameters "," parameters "," permitted? == ","other permitted? "," permitted? "," class == ","other class "," class "]}," ActionDispatch HostAuthorization blocked_hosts":{"type":"method","name":"blocked_hosts","children":[],"call":["hosts << ","@permissions allows? ","forwarded_host blank? ","request x_forwarded_host ","request get_header "]}," ActionDispatch eager_load!":{"type":"method","name":"eager_load!","children":[],"call":["Routing  eager_load! "]}," ActionDispatch Session resolve_store":{"type":"method","name":"resolve_store","children":[],"call":[]}," ActionDispatch TestProcess FixtureFile file_fixture_upload":{"type":"method","name":"file_fixture_upload","children":[],"call":["Rack Test UploadedFile  new "," file_fixture ","File  exist? ! ","File  exist? "," class file_fixture_path "," class "," class file_fixture_ file_fixture  "]}," ActionDispatch Assertions RoutingAssertions reset_routes":{"type":"method","name":"reset_routes","children":[],"call":[]}," ActionDispatch Assertions RoutingAssertions create_routes":{"type":"method","name":"create_routes","children":[],"call":["@controller extend "," define_method ","Module  new "," include ","_routes url_helpers ","Class  new ","@controller view_context_class ","@controller respond_to? ","@controller singleton_class include ","@controller singleton_class ","@controller clone ","ActionDispatch Routing RouteSet  new ","@controller clone  extend ","@controller clone  view_context_class ","@controller clone  respond_to? ","@controller clone  singleton_class include ","@controller clone  singleton_class ","@controller clone  clone "]}," ActionDispatch Assertions RoutingAssertions ClassMethods with_routing":{"type":"method","name":"with_routing","children":[],"call":[" reset_routes "," teardown "," create_routes "," setup "]}," ActionDispatch SystemTesting TestHelpers ScreenshotHelper show":{"type":"method","name":"show","children":[],"call":[" puts "]}," ActionDispatch SystemTesting TestHelpers ScreenshotHelper relative_image_path":{"type":"method","name":"relative_image_path","children":[],"call":[" absolute_path relative_path_from ","Rails  root "," absolute_path "]}," ActionDispatch SystemTesting TestHelpers ScreenshotHelper html_from_env?":{"type":"method","name":"html_from_env?","children":[],"call":["ENV  [] == ","ENV  [] "]}," ActionDispatch SystemTesting Driver register_playwright":{"type":"method","name":"register_playwright","children":[],"call":["Capybara Playwright Driver  new ","(pair\n  (sym :screen)\n  (lvar :screen)) compact ","@screen_size [] "]}," ActionDispatch Routing RouteSet default_env":{"type":"method","name":"default_env","children":[],"call":["(pair\n  (str \"action_dispatch.routes\")\n  (self)) freeze ","uri path chomp ","uri path ","uri port ","uri host ","uri port == ","uri default_port ","uri scheme ","uri scheme == "," URI ","ActionDispatch Http URL  full_url_for "," default_url_options dup freeze "," default_url_options dup "," default_url_options "," default_url_options != "," URI  path chomp "," URI  path "," URI  port "," URI  host "," URI  port == "," URI  default_port "," URI  scheme "," URI  scheme == "," default_ default_url_options dup freeze  dup freeze "," default_ default_url_options dup freeze  dup "," default_ default_url_options dup freeze  "," default_ default_url_options dup freeze  != "]}," ActionDispatch Routing Redirect build_response":{"type":"method","name":"build_response","children":[],"call":["ActionDispatch Response  new "," status ","body length to_s ","body length ","ActionDispatch Response  default_charset ","uri to_s ","req commit_flash ","req port ","uri port ","req standard_port? ","req host ","uri host ","req scheme ","uri scheme ","uri path= ","req script_name ","req script_name empty? ","uri path empty? ","uri path "," relative_path? ","URI  parse "," path ","req path_parameters ","URI  parse  to_s ","URI  parse  port ","URI  parse  host ","URI  parse  scheme ","URI  parse  path= ","URI  parse  path empty? ","URI  parse  path "]}," ActionDispatch Routing Mapper Mapping route_source_location":{"type":"method","name":"route_source_location","children":[],"call":["caller_location lineno ","Mapper  backtrace_cleaner clean first ","Mapper  backtrace_cleaner clean ","caller_location path ","Mapper  backtrace_cleaner ","location path include? ! ","location path include? ","location path "," caller_locations find "," caller_locations ","File  expand_path "," __dir__ ","Mapper  route_source_locations "]}," ActionDispatch Routing ConsoleFormatter Unused no_routes":{"type":"method","name":"no_routes","children":[],"call":["@buffer << ","filter key? ","filter none? "]}," ActionDispatch Routing ConsoleFormatter Unused header":{"type":"method","name":"header","children":[],"call":["@buffer << ","route pluralize ","routes count "]}," ActionDispatch Routing RouteWrapper matches_filter?":{"type":"method","name":"matches_filter?","children":[],"call":["value match? "," public_send "," __getobj__ path match "," __getobj__ path "," __getobj__ ","filter == "]}," ActionDispatch Request Session id_was":{"type":"method","name":"id_was","children":[],"call":[" load_for_read! "]}," ActionDispatch Session SessionObject commit_session":{"type":"method","name":"commit_session","children":[],"call":["req commit_csrf_token "]}," ActionDispatch ExceptionWrapper extract_source_fragment_lines":{"type":"method","name":"extract_source_fragment_lines","children":[],"call":["Hash  [] ","(irange\n  (send\n    (lvar :start) :+\n    (int 1))\n  (begin\n    (send\n      (send\n        (lvar :lines) :count) :+\n      (lvar :start)))) zip flatten ","(irange\n  (send\n    (lvar :start) :+\n    (int 1))\n  (begin\n    (send\n      (send\n        (lvar :lines) :count) :+\n      (lvar :start)))) zip ","lines count + ","lines count ","start + ","source_lines drop take ","source_lines drop ","(send\n  (lvar :line) :-\n  (int 3)) max ","line - ","(irange\n  (send\n    (lvar :start) :+\n    (int 1))\n  (begin\n    (send\n      (send\n        (lvar :source_lines drop take ) :count) :+\n      (lvar :start)))) zip flatten ","(irange\n  (send\n    (lvar :(send\n  (lvar :line) :-\n  (int 3)) max ) :+\n    (int 1))\n  (begin\n    (send\n      (send\n        (lvar :lines) :count) :+\n      (lvar :(send\n  (lvar :line) :-\n  (int 3)) max )))) zip flatten ","(irange\n  (send\n    (lvar :start) :+\n    (int 1))\n  (begin\n    (send\n      (send\n        (lvar :source_lines drop take ) :count) :+\n      (lvar :start)))) zip ","(irange\n  (send\n    (lvar :(send\n  (lvar :line) :-\n  (int 3)) max ) :+\n    (int 1))\n  (begin\n    (send\n      (send\n        (lvar :lines) :count) :+\n      (lvar :(send\n  (lvar :line) :-\n  (int 3)) max )))) zip ","source_lines drop take  count + ","source_lines drop take  count ","(send\n  (lvar :line) :-\n  (int 3)) max  + ","source_source_lines drop take  drop take ","source_source_lines drop take  drop "]}," ActionDispatch ExceptionWrapper extract_source":{"type":"method","name":"extract_source","children":[],"call":[" source_fragment "," extract_file_and_line_number ","code []= ","code [] [] ","spot [] ","code [] ","line == "," extract_source_fragment_lines ","trace spot "," extract_file_and_spot [] _number "," extract_source_fragment_lines  []= "," extract_source_fragment_lines  [] [] ","trace spot  [] "," extract_source_fragment_lines  [] ","spot []  == "," extract_source_fragment_spot [] s ","trace trace spot  "]}," ActionDispatch ExceptionWrapper build_backtrace":{"type":"method","name":"build_backtrace","children":[],"call":["SourceMapLocation  new ","built_methods [] ","loc label to_s ","loc label ","built_methods key? ","(or\n  (send\n    (ivar :@exception) :backtrace_locations)\n  (array)) map ","@exception backtrace_locations ","built_methods []= ","template method_name ","resolver built_templates each ","resolver built_templates ","ActionView PathRegistry  all_resolvers each ","ActionView PathRegistry  all_resolvers "]}," ActionDispatch ExceptionWrapper SourceMapLocation spot":{"type":"method","name":"spot","children":[],"call":["@template translate_location "," __getobj__ ","@template spot ","RubyVM AbstractSyntaxTree  respond_to? ","@template translate_@template spot  "]}," ActionDispatch ExceptionWrapper SourceMapLocation initialize":{"type":"method","name":"initialize","children":[],"call":[]}," ActionDispatch ExceptionWrapper exception_id":{"type":"method","name":"exception_id","children":[],"call":[" exception object_id "," exception "]}," ActionDispatch ExceptionWrapper exception_inspect":{"type":"method","name":"exception_inspect","children":[],"call":[" exception inspect "," exception "]}," ActionDispatch ExceptionWrapper message":{"type":"method","name":"message","children":[],"call":[" exception message "," exception "]}," ActionDispatch ExceptionWrapper exception_name":{"type":"method","name":"exception_name","children":[],"call":[" exception cause class to_s "," exception cause class "," exception cause "," exception "]}," ActionDispatch ExceptionWrapper error_highlight_available?":{"type":"method","name":"error_highlight_available?","children":[],"call":["Gem Version  new >= ","Gem Version  new "]}," ActionDispatch ExceptionWrapper show?":{"type":"method","name":"show?","children":[],"call":["ActionDispatch  deprecator warn ","ActionDispatch  deprecator "," rescue_response? ","request get_header "]}," ActionDispatch ExceptionWrapper annotated_source_code":{"type":"method","name":"annotated_source_code","children":[],"call":[" exception annotated_source_code "," exception "," exception respond_to? "]}," ActionDispatch ExceptionWrapper actions":{"type":"method","name":"actions","children":[],"call":["ActiveSupport ActionableError  actions "]}," ActionDispatch ExceptionWrapper line_number":{"type":"method","name":"line_number","children":[],"call":["@exception line_number "]}," ActionDispatch ExceptionWrapper file_name":{"type":"method","name":"file_name","children":[],"call":["@exception file_name "]}," ActionDispatch ExceptionWrapper corrections":{"type":"method","name":"corrections","children":[],"call":["@exception corrections "]}," ActionDispatch ExceptionWrapper original_message":{"type":"method","name":"original_message","children":[],"call":["@exception original_message "]}," ActionDispatch ExceptionWrapper has_corrections?":{"type":"method","name":"has_corrections?","children":[],"call":["@exception respond_to? "]}," ActionDispatch ExceptionWrapper failures":{"type":"method","name":"failures","children":[],"call":["@exception failures "]}," ActionDispatch ExceptionWrapper has_cause?":{"type":"method","name":"has_cause?","children":[],"call":["@exception cause "]}," ActionDispatch ExceptionWrapper sub_template_message":{"type":"method","name":"sub_template_message","children":[],"call":["@exception sub_template_message "]}," ActionDispatch ExceptionWrapper template_error?":{"type":"method","name":"template_error?","children":[],"call":["@exception is_a? "]}," ActionDispatch ExceptionWrapper routing_error?":{"type":"method","name":"routing_error?","children":[],"call":["@exception is_a? "]}," ActionDispatch DebugView error_highlight_available?":{"type":"method","name":"error_highlight_available?","children":[],"call":["@exception_wrapper error_highlight_available? "]}," ActionDispatch Cookies SerializedCookieJars check_for_overflow!":{"type":"method","name":"check_for_overflow!","children":[],"call":[" raise ","options [] bytesize ","options [] ","options [] bytesize > "]}," ActionDispatch Cookies SerializedCookieJars commit":{"type":"method","name":"commit","children":[],"call":["options []= "," serializer dump ","options [] "," serializer "]}," ActionDispatch Cookies SerializedCookieJars parse":{"type":"method","name":"parse","children":[],"call":[" []= "," reserialize? "," serializer load "," serializer "]}," ActionDispatch Cookies SerializedCookieJars reserialize?":{"type":"method","name":"reserialize?","children":[],"call":[" serializer dumped? ! "," serializer dumped? "," serializer "," serializer != ","ActiveSupport Messages SerializerWithFallback  [] "," serializer is_a? "]}," ActionDispatch AssumeSSL call":{"type":"method","name":"call","children":[],"call":["@app call ","env []= "]}," ActionDispatch AssumeSSL initialize":{"type":"method","name":"initialize","children":[],"call":[]}," ActionDispatch LogSubscriber redirect":{"type":"method","name":"redirect","children":[],"call":["message << ","Rails  env development? ","Rails  env ","(str \"Completed \") +@ ","event duration round ","event duration ","Rack Utils HTTP_STATUS_CODES  [] ","payload [] "," info ","event payload ","(str \"Completed \") +@  << ","event payload  [] ","event event payload  "]}," ActionDispatch Response RackBody call":{"type":"method","name":"call","children":[],"call":["@response stream call ","@response stream "]}," ActionDispatch Response Buffer to_ary":{"type":"method","name":"to_ary","children":[],"call":["@buf to_ary "]}," ActionDispatch Request read_body_stream":{"type":"method","name":"read_body_stream","children":[],"call":[" body_stream read "," content_length "," body_stream "," headers key? "," headers "," body_stream rewind "," body_stream respond_to? "]}," ActionDispatch Request commit_csrf_token":{"type":"method","name":"commit_csrf_token","children":[],"call":[" controller_instance commit_csrf_token "," controller_instance "," controller_instance respond_to? "]}," ActionDispatch Request reset_csrf_token":{"type":"method","name":"reset_csrf_token","children":[],"call":[" controller_instance reset_csrf_token "," controller_instance "," controller_instance respond_to? "]}," ActionDispatch Request route_uri_pattern=":{"type":"method","name":"route_uri_pattern=","children":[],"call":[" set_header "]}," ActionDispatch Request route_uri_pattern":{"type":"method","name":"route_uri_pattern","children":[],"call":[" get_header "]}," Mime valid_symbols?":{"type":"method","name":"valid_symbols?","children":[],"call":["SET  valid_symbols? "]}," Mime symbols":{"type":"method","name":"symbols","children":[],"call":["SET  symbols "]}," Mime Mimes valid_symbols?":{"type":"method","name":"valid_symbols?","children":[],"call":["@symbols_set include? ","symbols all? "]}," ActionDispatch Http MimeNegotiation return_only_media_type_on_content_type":{"type":"method","name":"return_only_media_type_on_content_type","children":[],"call":["ActionDispatch  deprecator warn ","ActionDispatch  deprecator "]}," ActionDispatch Http MimeNegotiation return_only_media_type_on_content_type=":{"type":"method","name":"return_only_media_type_on_content_type=","children":[],"call":["ActionDispatch  deprecator warn ","ActionDispatch  deprecator "]}," ActionDispatch deprecator":{"type":"method","name":"deprecator","children":[],"call":[]}," ActionController TestSession id_was":{"type":"method","name":"id_was","children":[],"call":[]}," ActionController Renderer env_for_request":{"type":"method","name":"env_for_request","children":[],"call":[" controller _routes default_env merge "," controller _routes default_env "," controller _routes "," controller ","@env dup "," controller _routes nil? ","@env key? "]}," ActionController Renderer defaults":{"type":"method","name":"defaults","children":[],"call":["@defaults dup ","@defaults frozen? ","@defaults dup  dup ","@defaults dup  frozen? "]}," ActionController Renderer normalize_env":{"type":"method","name":"normalize_env","children":[],"call":[]}," ActionController Metal response=":{"type":"method","name":"response=","children":[],"call":[" set_response! "]}," ActionController UrlFor initialize":{"type":"method","name":"initialize","children":[],"call":[]}," ActionController Parameters extract_value":{"type":"method","name":"extract_value","children":[],"call":["@parameters [] "]}," ActionController Parameters has_value?":{"type":"method","name":"has_value?","children":[],"call":[" each_value include? "," convert_value_to_parameters "," each_value "]}," ActionController Parameters values":{"type":"method","name":"values","children":[],"call":[" to_enum to_a "," to_enum "]}," ActionController Streaming Body close":{"type":"method","name":"close","children":[],"call":["@body close ","@body respond_to? "]}," ActionController Streaming Body each":{"type":"method","name":"each","children":[],"call":["(send\n  (lvar :size) :to_s\n  (int 16)) join ","chunk b ","size to_s ","size == ","chunk bytesize ","@body each ","(send\n  (lvar :chunk bytesize ) :to_s\n  (int 16)) join ","chunk bytesize  to_s ","chunk bytesize  == ","chunk bytechunk bytesize  "]}," ActionController Streaming Body initialize":{"type":"method","name":"initialize","children":[],"call":[]}," ActionController RequestForgeryProtection commit_csrf_token":{"type":"method","name":"commit_csrf_token","children":[],"call":[" csrf_token_storage_strategy store "," csrf_token_storage_strategy ","csrf_token nil? ","request env [] ","request env "," request env [] _storage_strategy store "," request env [] _storage_strategy ","request env []  nil? "]}," ActionController RequestForgeryProtection reset_csrf_token":{"type":"method","name":"reset_csrf_token","children":[],"call":[" csrf_token_storage_strategy reset "," csrf_token_storage_strategy ","request env delete ","request env "]}," ActionController RequestForgeryProtection initialize":{"type":"method","name":"initialize","children":[],"call":[]}," ActionController RequestForgeryProtection CookieStore reset":{"type":"method","name":"reset","children":[],"call":["request cookie_jar delete ","request cookie_jar "]}," ActionController RequestForgeryProtection CookieStore store":{"type":"method","name":"store","children":[],"call":["request cookie_jar encrypted permanent []= ","(pair\n  (sym :token)\n  (lvar :csrf_token)) to_json ","request session id ","request session ","request cookie_jar encrypted permanent ","request cookie_jar encrypted ","request cookie_jar "]}," ActionController RequestForgeryProtection CookieStore fetch":{"type":"method","name":"fetch","children":[],"call":["value [] ","value dig == ","request session id_was ","request session ","value dig ","JSON  parse ","contents nil? ","request cookie_jar encrypted [] ","request cookie_jar encrypted ","request cookie_jar ","JSON  parse  [] ","JSON  parse  dig == ","JSON  parse  dig ","request cookie_jar encrypted []  nil? "]}," ActionController RequestForgeryProtection CookieStore initialize":{"type":"method","name":"initialize","children":[],"call":[]}," ActionController RequestForgeryProtection SessionStore reset":{"type":"method","name":"reset","children":[],"call":["request session delete ","request session "]}," ActionController RequestForgeryProtection SessionStore store":{"type":"method","name":"store","children":[],"call":["request session []= ","request session "]}," ActionController RequestForgeryProtection SessionStore fetch":{"type":"method","name":"fetch","children":[],"call":["request session [] ","request session "]}," ActionController RequestForgeryProtection ClassMethods is_storage_strategy?":{"type":"method","name":"is_storage_strategy?","children":[],"call":["object respond_to? "]}," ActionController RequestForgeryProtection ClassMethods storage_strategy":{"type":"method","name":"storage_strategy","children":[],"call":[" raise "," is_storage_strategy? ","CookieStore  new ","SessionStore  new "]}," ActionController Instrumentation initialize":{"type":"method","name":"initialize","children":[],"call":[" view_runtime= "]}," ActionController MissingExactTemplate initialize":{"type":"method","name":"initialize","children":[],"call":[]}," ActionController deprecator":{"type":"method","name":"deprecator","children":[],"call":[]}," AbstractController Helpers Resolution helper_modules_from_paths":{"type":"method","name":"helper_modules_from_paths","children":[],"call":[" modules_for_helpers "," all_helpers_from_path "]}," AbstractController Helpers Resolution all_helpers_from_path":{"type":"method","name":"all_helpers_from_path","children":[],"call":["helpers uniq! ","names sort! ","file [] ","_helper.rb size -@ - ","_helper.rb size -@ ","_helper.rb size ","_path to_s size + ","_path to_s size ","_path to_s ","Dir  [] map ","Dir  [] "," Array flat_map "," Array "]}," AbstractController Helpers Resolution modules_for_helpers":{"type":"method","name":"modules_for_helpers","children":[],"call":[" raise ","(begin\n  (lvar :helper_prefix)) constantize ","helper_prefix camelize ","helper_prefix start_with? ","module_or_helper_prefix to_s ","modules_or_helper_prefixes flatten map! ","modules_or_helper_prefixes flatten ","(begin\n  (lvar :helper_prefix camelize )) constantize ","(begin\n  (lvar :module_or_helper_prefix to_s )) constantize ","helper_prefix camelize  camelize ","module_or_helper_prefix to_s  camelize ","helper_prefix camelize  start_with? ","module_or_helper_prefix to_s  start_with? ","module_or_helper_prefix camelize  to_s ","module_or_module_or_helper_prefix to_s  to_s ","modules_or_helper_prefix camelize es flatten map! ","modules_or_module_or_helper_prefix to_s es flatten map! ","modules_or_helper_prefix camelize es flatten ","modules_or_module_or_helper_prefix to_s es flatten "]}," AbstractController Helpers DeprecatedMissingHelperError initialize":{"type":"method","name":"initialize","children":[],"call":[" raise ","Missing helper file helpers/%s.rb % ","(str \"^\") match? ","error path "," set_backtrace ","error backtrace "]}," AbstractController deprecator":{"type":"method","name":"deprecator","children":[],"call":[]}," AbstractController Base eager_load!":{"type":"method","name":"eager_load!","children":[],"call":[" action_methods "]}}