{" RedmineLdapSyncRedmineHooks controller_account_success_authentication_after":{"type":"method","name":"controller_account_success_authentication_after","children":[],"call":["user auth_source sync_groups ","user auth_source ","user auth_source auth_method_name == ","user auth_source auth_method_name ","context [] ","context []  auth_source sync_groups ","context []  auth_source ","context []  auth_source auth_method_name == ","context []  auth_source auth_method_name "]}," RedmineLdapSync RedmineExt UserPatch included":{"type":"method","name":"included","children":[{"type":"method","name":"add_to_domain_group","children":[],"asgn":[{"type":"local","name":"domain_group","value":"Group  create "},["Group  create "],{"type":"local","name":"domain_group","value":"Group  find_by_lastname "},["Group  find_by_lastname "],{"type":"local","name":"group_name","value":"Setting  plugin_redmine_ldap_sync [] [] "},["Setting  plugin_redmine_ldap_sync [] [] "]],"call":[" save ","domain_group users << ","domain_group users ","Group  create ","Group  find_by_lastname ","group_name present? ","Setting  plugin_redmine_ldap_sync [] [] ","Setting  plugin_redmine_ldap_sync [] "," auth_source name "," auth_source ","Setting  plugin_redmine_ldap_sync "," auth_source auth_method_name == "," auth_source auth_method_name "," auth_source "," auth_source "]}],"call":[]}," RedmineLdapSync RedmineExt AuthSourceLdapPatch included":{"type":"method","name":"included","children":[{"type":"method","name":"member_of?","children":[],"asgn":[{"type":"local","name":"user_filter","value":"Net LDAP Filter  eq "},["Net LDAP Filter  eq "],{"type":"local","name":"login_filter","value":"Net LDAP Filter  eq "},["Net LDAP Filter  eq "],{"type":"local","name":"ldap_con","value":" initialize_ldap_con "},[" initialize_ldap_con "]],"call":["entry [] include? ","entry [] ","ldap_con search ","user_filter & "," base_dn ","Net LDAP Filter  eq ","Net LDAP Filter  eq "," attr_login "," initialize_ldap_con "," account_password "," account "]},{"type":"method","name":"sync_groups","children":[],"asgn":[null,{"type":"local","name":"group","value":"Group  create "},["Group  create "],{"type":"local","name":"group","value":"Group  find_by_lastname "},["Group  find_by_lastname "],{"type":"local","name":"changes","value":" groups_changes "},[" groups_changes "]],"call":["group users delete ","group users ","g to_s == ","g to_s ","user groups detect ","user groups ","changes [] each ","changes [] ","group users << ","group users ","Group  create "," id ","Group  find_by_lastname ","g to_s == ","g to_s ","user groups detect ","user groups ","changes [] each ","changes [] "," groups_changes "," ldapsync_active? "]},{"type":"method","name":"sync_users","children":[],"asgn":[null,{"type":"local","name":"attrs","value":" get_user_dn "},[" get_user_dn "],{"type":"local","name":"user","value":"User  find_by_login "},["User  find_by_login "],{"type":"local","name":"user","value":"User  find_by_login "},["User  find_by_login "]],"call":[" sync_groups ","user language= ","Setting  default_language ","user login= ","User  create ","attrs except "," get_user_dn ","User  find_by_login "," ldap_users [] each "," ldap_users [] "," ldap_users ","user lock! ","User  find_by_login "," ldap_users [] each "," ldap_users [] "," ldap_users "," ldapsync_active? "]},{"type":"method","name":"ldap_users","children":[],"asgn":[null,null,{"type":"local","name":"user_filter","value":"Net LDAP Filter  eq "},["Net LDAP Filter  eq "],{"type":"local","name":"ldap_con","value":" initialize_ldap_con "},[" initialize_ldap_con "]],"call":["users [] << ","entry [] [] ","entry [] "," attr_login ","users [] ","users [] << ","entry [] [] ","entry [] "," attr_login ","users [] ","entry [] [] to_i & != ","entry [] [] to_i & ","entry [] [] to_i ","entry [] [] ","entry [] ","ldap_con search "," attr_login "," base_dn ","Net LDAP Filter  eq "," initialize_ldap_con "," account_password "," account "]},{"type":"method","name":"groups_changes","children":[],"asgn":[{"type":"local","name":"group","value":"entry [] [] "},["entry [] [] "],{"type":"local","name":"names_filter","value":"(send\n  (lvar :groups) :map) reduce "},["(send\n  (lvar :groups) :map) reduce "],null,null,{"type":"local","name":"names_filter","value":"(send\n  (lvar :user_groups) :map) reduce "},["(send\n  (lvar :user_groups) :map) reduce "],null,{"type":"local","name":"groups_base_dn","value":"Setting  plugin_redmine_ldap_sync [] [] "},["Setting  plugin_redmine_ldap_sync [] [] "],null,{"type":"local","name":"attr_groupname","value":"Setting  plugin_redmine_ldap_sync [] [] "},["Setting  plugin_redmine_ldap_sync [] [] "],{"type":"local","name":"group_filter","value":"Net LDAP Filter  eq "},["Net LDAP Filter  eq "],{"type":"local","name":"user_filter","value":"Net LDAP Filter  eq "},["Net LDAP Filter  eq "],{"type":"local","name":"login_filter","value":"Net LDAP Filter  eq "},["Net LDAP Filter  eq "],{"type":"local","name":"ldap_con","value":" initialize_ldap_con "},[" initialize_ldap_con "],null],"call":["changes [] include? ","changes [] ","changes [] reject! ","changes [] ","changes [] << ","changes [] ","groupname_filter =~ ","entry [] [] ","entry [] ","ldap search ","group_filter & ","(send\n  (lvar :groups) :map) reduce ","Net LDAP Filter  eq ","groups map ","g end_with? ","entry [] select ","entry [] ","ldap search ","user_filter & "," base_dn ","changes [] << ","entry [] [] ","entry [] ","changes [] ","ldap search ","group_filter & ","(send\n  (lvar :user_groups) :map) reduce ","Net LDAP Filter  eq ","g to_s ","user_groups map ","groupname_filter =~ ","g to_s ","user groups select ","user groups ","ldap_con open ","Setting  plugin_redmine_ldap_sync [] [] ","Setting  plugin_redmine_ldap_sync [] "," name ","Setting  plugin_redmine_ldap_sync ","Setting  plugin_redmine_ldap_sync [] [] ","Setting  plugin_redmine_ldap_sync [] "," name ","Setting  plugin_redmine_ldap_sync ","Setting  plugin_redmine_ldap_sync [] [] ","Setting  plugin_redmine_ldap_sync [] "," name ","Setting  plugin_redmine_ldap_sync ","Net LDAP Filter  eq ","Net LDAP Filter  eq ","Net LDAP Filter  eq ","user login "," attr_login "," initialize_ldap_con "," account_password "," account "," ldapsync_active? "]},{"type":"method","name":"ldapsync_active?","children":[],"asgn":[],"call":["Setting  plugin_redmine_ldap_sync [] [] ","Setting  plugin_redmine_ldap_sync [] "," name ","Setting  plugin_redmine_ldap_sync ","Setting  plugin_redmine_ldap_sync [] present? ","Setting  plugin_redmine_ldap_sync [] "," name ","Setting  plugin_redmine_ldap_sync "]}],"call":[]}," RedmineLdapSync RedmineExt SettingsHelperPatch included":{"type":"method","name":"included","children":[{"type":"method","name":"ldap_multiselect","children":[],"asgn":[null,null,null,{"type":"local","name":"setting_values","value":"@settings [] [] "},["@settings [] [] "]],"call":[" ldap_label html_safe + ","(send\n  (lvar :choices) :collect) join html_safe ","(send\n  (lvar :choices) :collect) join "," content_tag "," check_box_tag + ","text to_s "," check_box_tag ","setting_values include? "," l ","@plugin id ","choice is_a? ","choices collect "," ldap_label html_safe "," ldap_label ","setting_values is_a? ","@settings [] [] ","@settings [] ","@settings [] "]},{"type":"method","name":"ldap_label","children":[],"asgn":[{"type":"local","name":"label_text","value":" l + "},[" l + "],{"type":"local","name":"label","value":"options delete "},["options delete "]],"call":[" content_tag html_safe "," content_tag "," l + "," content_tag ","options delete "," l ","@plugin id ","label == ","options delete "]},{"type":"method","name":"ldap_text_field","children":[],"asgn":[{"type":"local","name":"ldap_settings","value":"@settings [] "},["@settings [] "],{"type":"local","name":"default","value":"options delete "},["options delete "]],"call":[" ldap_label html_safe + "," text_field_tag html_safe "," text_field_tag ","ldap_settings [] "," ldap_label html_safe "," ldap_label ","@settings [] ","options delete "]},{"type":"method","name":"ldap_check_box","children":[],"asgn":[{"type":"local","name":"ldap_settings","value":"@settings [] "},["@settings [] "],{"type":"local","name":"default","value":"options delete "},["options delete "]],"call":[" ldap_label html_safe + "," check_box_tag html_safe "," check_box_tag ","ldap_settings [] "," ldap_label html_safe "," ldap_label ","@settings [] ","options delete "]},{"type":"method","name":"ldap_select","children":[],"asgn":[{"type":"local","name":"ldap_settings","value":"@settings [] "},["@settings [] "],{"type":"local","name":"default","value":"options delete "},["options delete "],{"type":"local","name":"choices","value":"(array\n  (if\n    (send\n      (lvar :blank_text) :is_a?\n      (const nil :Symbol))\n    (send nil :l\n      (lvar :blank_text))\n    (lvar :blank_text))\n  (str \"\")) + "},["(array\n  (if\n    (send\n      (lvar :blank_text) :is_a?\n      (const nil :Symbol))\n    (send nil :l\n      (lvar :blank_text))\n    (lvar :blank_text))\n  (str \"\")) + "],{"type":"local","name":"blank_text","value":"options delete "},["options delete "]],"call":[" ldap_label html_safe + "," select_tag html_safe "," select_tag "," options_for_select ","ldap_settings [] "," ldap_label html_safe "," ldap_label ","@settings [] ","options delete ","(array\n  (if\n    (send\n      (lvar :blank_text) :is_a?\n      (const nil :Symbol))\n    (send nil :l\n      (lvar :blank_text))\n    (lvar :blank_text))\n  (str \"\")) + "," l ","blank_text is_a? ","options delete ","c to_s "," l ","@plugin id ","c is_a? ","choices map! "]}],"call":[]}," RedmineLdapSync RedmineExt UserDryRun included":{"type":"method","name":"included","children":[{"type":"method","name":"<<","children":[],"asgn":[],"call":[" puts ","groups map join ","groups map ","groups empty? "]},{"type":"method","name":"delete","children":[],"asgn":[],"call":[" puts ","groups map join ","groups map ","groups empty? "]}],"call":[]}," RedmineLdapSync RedmineExt UserDryRun InstanceMethods save":{"type":"method","name":"save","children":[],"call":[]}," RedmineLdapSync RedmineExt UserDryRun InstanceMethods update_attributes":{"type":"method","name":"update_attributes","children":[],"call":[]}," RedmineLdapSync RedmineExt UserDryRun InstanceMethods activate!":{"type":"method","name":"activate!","children":[],"call":[]}," RedmineLdapSync RedmineExt UserDryRun InstanceMethods lock!":{"type":"method","name":"lock!","children":[],"call":[]}," RedmineLdapSync RedmineExt UserDryRun ClassMethods create":{"type":"method","name":"create","children":[],"call":[" block_given? ","User  new "]}," RedmineLdapSync RedmineExt GroupDryRun included":{"type":"method","name":"included","children":[{"type":"method","name":"<<","children":[],"asgn":[],"call":[" puts "," proxy_association owner lastname "," proxy_association owner "," proxy_association "]}],"call":[]}," RedmineLdapSync RedmineExt GroupDryRun InstanceMethods find_or_create_by_lastname":{"type":"method","name":"find_or_create_by_lastname","children":[],"call":[" puts ","group valid? "," Group  new ","attributes merge ","group present? "," find_by_lastname "," Group  new  valid? "," find_by_lastname  valid? "," Group  new  present? "," find_by_lastname  present? "]}," StringPatch raw_utf8_encoded":{"type":"method","name":"raw_utf8_encoded","children":[],"call":[" force_encoding "," encode force_encoding "," encode "," encoding name != "," encoding name "," encoding "," respond_to? "]}," RedmineLdapSync CoreExt FileStorePatch included":{"type":"method","name":"included","children":[{"type":"method","name":"delete_unless","children":[],"asgn":[{"type":"local","name":"key","value":" file_path_key "},[" file_path_key "],{"type":"local","name":"options","value":" merged_options "},[" merged_options "]],"call":[" delete_entry "," file_path_key "," search_dir "," cache_path "," merged_options "]}],"call":[]}," User included":{"type":"method","name":"included","children":[],"call":[]}," User ClassMethods try_to_login_with_ldap_sync":{"type":"method","name":"try_to_login_with_ldap_sync","children":[],"call":[" raise ","user active? ","user auth_source sync_user ","user auth_source ","user try "," try_to_login_without_ldap_sync ","user auth_source locked_on_ldap? ","user sync_on_create! ","user new_record? "," try_to_login_without_ldap_sync  active? "," try_to_login_without_ldap_sync  auth_source sync_ try_to_login_without_ldap_sync  "," try_to_login_without_ldap_sync  auth_source "," try_to_login_without_ldap_sync  try "," try_to_login_without_ldap_sync  auth_source locked_on_ldap? "," try_to_login_without_ldap_sync  sync_on_create! "," try_to_login_without_ldap_sync  new_record? "]}," User InstanceMethods unset_admin!":{"type":"method","name":"unset_admin!","children":[],"call":[" update_attribute "]}," User InstanceMethods set_admin!":{"type":"method","name":"set_admin!","children":[],"call":[" update_attribute "]}," User InstanceMethods member_of_group?":{"type":"method","name":"member_of_group?","children":[],"call":[" groups exists? "," groups "]}," User InstanceMethods synced_fields=":{"type":"method","name":"synced_fields=","children":[],"call":[" custom_field_values= ","attrs except "," attributes= ","attrs slice "]}," User InstanceMethods set_default_values":{"type":"method","name":"set_default_values","children":[],"call":[" mail_notification= ","Setting  default_notification_option "," language= ","Setting  default_language "," custom_field_values= ","h []= ","f default_value ","f id ","custom_fields each_with_object ","UserCustomField  where ","UserCustomField  where  each_with_object "]}," User InstanceMethods add_to_fixed_group":{"type":"method","name":"add_to_fixed_group","children":[],"call":[" groups << "," Group  find_or_create_by_lastname "," auth_source fixed_group "," auth_source "," groups "," auth_source try "," Group  where first_or_create "," Group  where "]}," Group included":{"type":"method","name":"included","children":[],"call":[]}," Group InstanceMethods synced_fields=":{"type":"method","name":"synced_fields=","children":[],"call":[" custom_field_values= "]}," Group InstanceMethods set_default_values":{"type":"method","name":"set_default_values","children":[],"call":[" custom_field_values= ","h []= ","f default_value ","f id ","custom_fields each_with_object ","GroupCustomField  where ","GroupCustomField  where  each_with_object "]}," AuthSourceLdap included":{"type":"method","name":"included","children":[],"call":[]}," AuthSourceLdap ClassMethods running_rake!":{"type":"method","name":"running_rake!","children":[],"call":[" running_rake= "]}," AuthSourceLdap ClassMethods activate_users!":{"type":"method","name":"activate_users!","children":[],"call":[" activate_users= "]}," AuthSourceLdap InstanceMethods running_rake?":{"type":"method","name":"running_rake?","children":[],"call":[" running_rake "]}," AuthSourceLdap InstanceMethods activate_users?":{"type":"method","name":"activate_users?","children":[],"call":[" activate_users "]}," AuthSourceLdap InstanceMethods dyngroups_updated?":{"type":"method","name":"dyngroups_updated?","children":[],"call":[" dyngroups_updated "]}," AuthSourceLdap InstanceMethods error":{"type":"method","name":"error","children":[],"call":[" logger error "," logger "," puts "," running_rake? "]}," AuthSourceLdap InstanceMethods trace":{"type":"method","name":"trace","children":[],"call":[" puts ","msg nil? ! ","msg nil? "," running_rake? ","(sym :error) include? "," trace_level ","msg gsub gsub gsub downcase ","msg gsub gsub gsub ","msg gsub gsub ","msg gsub ","options [] ","options [] nil? ! ","options [] nil? "," trace_level == ","(sym :change) include? ","options reverse_merge! "," running_rake? ! "," logger error "," logger ","options [] == "," block_given? "]}," AuthSourceLdap InstanceMethods groups_changes_summary":{"type":"method","name":"groups_changes_summary","children":[],"call":["(send\n  (send\n    (lvar :chg) :[]\n    (erange\n      (int 0)\n      (int -1))) :join\n  (str \", \")) join ","chg [] ","chg [] join ","chg size > ","chg size ","chg size == ","chg << "," pluralize ","a + == ","a + ","nc > ","a == ","d > ","a > ","groups [] size - ","groups [] size ","groups [] ","deleted size ","added size "," running_rake? ","(sendeleted size \n  (sendeleted size \n    (lvar :chg) :[]\n    (erange\n      (int 0)\n      (int -1))) :join\n  (str \", \")) join ","(send\n  (send\n    (lvadded size r :chg) :[]\n    (eradded size nge\n      (int 0)\n      (int -1))) :join\n  (str \", \")) join "," pluradded size lize ","added size  + == ","added size  + ","groups [] size -  > ","added size  == ","deleted size  > ","added size  > ","deleted size eletedeleted size  size ","adeleted size deleted size edeleted size  size ","added size dded size "," running_radded size ke? "]}," AuthSourceLdap InstanceMethods pluralize":{"type":"method","name":"pluralize","children":[],"call":["n to_s ","n != ","word present? "]}," AuthSourceLdap InstanceMethods setting":{"type":"method","name":"setting","children":[],"call":["LdapSetting  find_by_auth_source_ldap_id "," id "]}," AuthSourceLdap InstanceMethods update_dyngroups_cache!":{"type":"method","name":"update_dyngroups_cache!","children":[],"call":[" dyngroups_updated= "," dyngroups_cache write "," dyngroups_cache ","mem_cache each ","mem_cache has_key? ","k == "," dyngroups_cache delete_unless ","opts []= "," setting dyngroups_cache_ttl to_f minutes "," setting dyngroups_cache_ttl to_f "," setting dyngroups_cache_ttl "," setting ","5 minutes "," setting dyngroups_enabled_with_ttl? ","t << ","m join ","(send\n  (lvar :mem_cache) :sort_by) reduce ","mem_cache sort_by "," trace "]}," AuthSourceLdap InstanceMethods update_closure_cache!":{"type":"method","name":"update_closure_cache!","children":[],"call":["disk_cache write ","mem_cache each ","mem_cache has_key? ","disk_cache delete_unless ","ActiveSupport Cache  lookup_store "," cache_root ","ActiveSupport Cache  lookup_store  write ","ActiveSupport Cache  lookup_store  delete_unless "]}," AuthSourceLdap InstanceMethods dyngroups_cache":{"type":"method","name":"dyngroups_cache","children":[],"call":["ActiveSupport Cache  lookup_store "," cache_root "]}," AuthSourceLdap InstanceMethods closure_cache":{"type":"method","name":"closure_cache","children":[],"call":["ActiveSupport Cache  lookup_store "," cache_root "]}," AuthSourceLdap InstanceMethods cache_root":{"type":"method","name":"cache_root","children":[],"call":["FileUtils  mkdir_p ","File  exists? ","Rails  root join "," id ","Rails  root ","File  exist? "]}," AuthSourceLdap InstanceMethods dyngroups_fresh?":{"type":"method","name":"dyngroups_fresh?","children":[],"call":["expired ! "," dyngroups_cache fetch "," dyngroups_cache ","opts []= "," setting dyngroups_cache_ttl to_f minutes "," setting dyngroups_cache_ttl to_f "," setting dyngroups_cache_ttl "," setting ","5 minutes "," setting dyngroups_enabled_with_ttl? "," dyngroups_updated? ! "," dyngroups_updated? "," running_rake? "]}," AuthSourceLdap InstanceMethods reset_parents_cache!":{"type":"method","name":"reset_parents_cache!","children":[],"call":["@parents_cache clear ","@parents_cache nil? "]}," AuthSourceLdap InstanceMethods parents_cache":{"type":"method","name":"parents_cache","children":[],"call":["ActiveSupport Cache  lookup_store "]}," AuthSourceLdap InstanceMethods new_memory_cache":{"type":"method","name":"new_memory_cache","children":[{"type":"method","name":"fetch","children":[],"asgn":[],"call":[]}],"call":[" []= ","Hash  new "]}," AuthSourceLdap InstanceMethods find_or_create_user":{"type":"method","name":"find_or_create_user","children":[],"call":[" trace ","user errors full_messages join ","user errors full_messages ","user errors ","user login ","user save ","u auth_source_id= "," id ","u synced_fields= "," get_user_fields ","u set_default_values ","u login= "," User  new "," setting create_users? "," setting ","user nil? ","user auth_source_id != ","user auth_source_id ","user present? "," User  where includes first "," User  where includes "," User  where ","username downcase ","User  table_name "," change ","mail_owner login ","mail_owner name ","User  name_formatter [] ","User  name_formatter ","User  find_by_mail ","user mail ","user errors added? ","username mb_chars downcase ","username mb_chars "," find_local_user ","user email_is_taken "," User  where includes first  errors full_messages join "," User  where includes first  errors full_messages "," User  where includes first  errors "," User  where includes first  login "," User  where includes first  save "," get_ User  where includes first _fields "," setting create_ User  where includes first s? "," User  where includes first  nil? "," User  where includes first  auth_source_id != "," User  where includes first  auth_source_id "," User  where includes first  present? "," User  where includes first name downcase ","User  find_by_mail  login ","User  find_by_mail  name "," User  where includes first  mail "," User  where includes first  errors added? "," User  where includes first name mb_chars downcase "," User  where includes first name mb_chars "," find_local_ User  where includes first  "," User  where includes first  email_is_taken "]}," AuthSourceLdap InstanceMethods find_or_create_group":{"type":"method","name":"find_or_create_group","children":[],"call":[" error ","group errors full_messages join ","group errors full_messages ","group errors ","group save ","g synced_fields= "," get_group_fields ","g set_default_values "," Group  new "," id "," setting create_groups? "," setting ","group nil? "," Group  where first "," Group  where ","groupname downcase "," change ","group name ","groupname mb_chars downcase ","groupname mb_chars "," Group  where first  errors full_messages join "," Group  where first  errors full_messages "," Group  where first  errors "," Group  where first  save "," get_ Group  where first _fields "," setting create_ Group  where first s? "," Group  where first  nil? "," Group  where first name downcase "," Group  where first  name "," Group  where first name mb_chars downcase "," Group  where first name mb_chars "]}," AuthSourceLdap InstanceMethods sync_group_fields":{"type":"method","name":"sync_group_fields","children":[],"call":[" trace ","group errors full_messages join ","group errors full_messages ","group errors ","group lastname ","group save ","group synced_fields= "," get_group_fields ","group name "," change "]}," AuthSourceLdap InstanceMethods sync_admin_privilege":{"type":"method","name":"sync_admin_privilege","children":[],"call":[" trace "," setting admin_group "," setting ","user unset_admin! ","user admin? ","user set_admin! ","user member_of_group? "," setting has_admin_group? "," change ","user login "]}," AuthSourceLdap InstanceMethods sync_user_status":{"type":"method","name":"sync_user_status","children":[],"call":[" trace ","user activate! ","user locked? "," activate_users? "," setting required_group "," setting ","user lock! ","user active? ","user member_of_group? "," setting has_required_group? "," account_disabled? "," change ","user login ","flags == ","disabled ! ","(or\n  (lvar :deleted)\n  (lvar :locked)) ! ","flags ! ","user member_of_group? ! ","user archive! "," account_locked? ","flags != ","(or\n  (lvar :flags == )\n  (lvar :locked)) ! "]}," AuthSourceLdap InstanceMethods sync_user_fields":{"type":"method","name":"sync_user_fields","children":[],"call":[" error ","user errors full_messages join ","user errors full_messages ","user errors ","user login ","user save ","user synced_fields= "," get_user_fields "," setting sync_user_fields? "," setting "," setting active? ","mail_owner login ","mail_owner name ","User  name_formatter [] ","User  name_formatter ","User  find_by_mail ","user mail ","user errors added? ","user email_is_taken ","User  find_by_mail  login ","User  find_by_mail  name "]}," AuthSourceLdap InstanceMethods sync_user_groups":{"type":"method","name":"sync_user_groups","children":[],"call":[" trace "," groups_changes_summary ","user groups delete ","user groups ","deleted empty? "," Group  where all "," Group  where ","deleted_groups any? ","changes [] map ","changes [] ","user groups << ","added present? ","(send\n  (send\n    (lvar :changes) :[]\n    (sym :added)) :map) compact "," find_or_create_group first "," find_or_create_group "," groups_changes ","user add_to_fixed_group ","user member_of_group? ! ","user member_of_group? "," setting fixed_group "," setting "," setting has_fixed_group? "," setting active? "," trace_groups_changes_summary ","user groups include? ","added reject ","g mb_chars downcase ","g mb_chars ","added empty? "," Group  where to_a "," groups_ groups_changes _summary "," Group  where all  empty? "," Group  where to_a  empty? "," Group  where all _groups any? "," Group  where to_a _groups any? ","changes [] map  any? "," groups_changes  [] map "," groups_changes  [] ","(send\n  (send\n    (lvar :changes) :[]\n    (sym :added)) :map) compact  present? ","(send\n  (send\n    (lvar :changes) :[]\n    (sym :(send\n  (send\n    (lvar :changes) :[]\n    (sym :added)) :map) compact )) :map) compact ","(send\n  (send\n    (lvar : groups_changes ) :[]\n    (sym :added)) :map) compact "," groups_ groups_changes  "," trace_groups_ groups_changes _summary ","(send\n  (send\n    (lvar :changes) :[]\n    (sym :added)) :map) compact  reject ","(send\n  (send\n    (lvar :changes) :[]\n    (sym :added)) :map) compact  empty? "]}," AuthSourceLdap InstanceMethods create_and_sync_group":{"type":"method","name":"create_and_sync_group","children":[],"call":[" sync_group_fields "," trace ","group name ","group nil? "," find_or_create_group "," setting groupname_regexp =~ "," setting groupname_regexp "," setting ","group_data [] first ","group_data [] "," setting group_data [] first _regexp =~ "," setting group_data [] first _regexp "]}," AuthSourceLdap InstanceMethods sync_user":{"type":"method","name":"sync_user","children":[],"call":[" sync_user_fields "," setting sync_fields_on_login? ! "," setting sync_fields_on_login? "," setting ","options [] "," sync_admin_privilege ","user locked? "," sync_user_status "," sync_user_groups "," setting sync_groups_on_login? ! "," setting sync_groups_on_login? ","user_data [] first ","user_data [] "," n "," find_user "," setting user_ldap_attrs_to_sync + "," ns "," setting user_ldap_attrs_to_sync ","user login "," setting has_account_flags? "," trace ","(or\n  (send nil :activate_users?)\n  (send\n    (send nil :setting) :has_required_group?)) ! "," setting has_required_group? "," activate_users? "," with_ldap_connection ","user_data present? ","user name ","options [] ! ","is_new_user ! "," find_user  [] first "," find_user  [] "," find_user  present? "]}," AuthSourceLdap InstanceMethods sync_users":{"type":"method","name":"sync_users","children":[],"call":[" update_closure_cache! "," setting nested_groups_enabled? "," setting "," sync_user ","user present? "," find_or_create_user "," ldap_users [] each "," ldap_users [] "," ldap_users "," trace ","user login ","user lock! ","user try "," users where first "," users where ","login downcase "," users "," with_ldap_connection "," new_memory_cache "," setting active? "," connect_as_user? "," change ","login mb_chars downcase ","login mb_chars "," find_local_user ","user name ","user archive! "," sync_ users where first  "," users where first  present? "," find_or_create_ users where first  "," ldap_ users where first s [] each "," ldap_ users where first s [] "," ldap_ users where first s "," users where first  login "," users where first  lock! "," users where first  try ","  users where first s where first ","  users where first s where ","  users where first s "," connect_as_ users where first ? "," find_local_ users where first  "," users where first  name "," users where first  archive! "]}," AuthSourceLdap InstanceMethods sync_groups":{"type":"method","name":"sync_groups","children":[],"call":[" create_and_sync_group "," find_all_dyngroups "," dyngroups_fresh? ! "," dyngroups_fresh? "," setting group_ldap_attrs_to_sync "," setting "," trace "," setting sync_dyngroups? "," n "," find_all_groups "," setting create_groups? "," setting sync_group_fields? "," with_ldap_connection "," setting active? "," connect_as_user? "]}," LdapSync Hooks view_layouts_base_html_head":{"type":"method","name":"view_layouts_base_html_head","children":[],"call":[" stylesheet_link_tag "]}," EntityManager with_ldap_connection":{"type":"method","name":"with_ldap_connection","children":[],"call":["thread []= ","ldap_con open "," initialize_ldap_con "," setting account_password "," setting "," setting account "," setting account sub ","Net LDAP DN  escape "," setting account include? ","thread [] ","thread [] present? ","Thread  current ","Thread  current  []= "," initialize_ldap_con  open "," initialize_ initialize_ldap_con  ","Thread  current  [] ","Thread  current  [] present? "]}," EntityManager cacheable_ber":{"type":"method","name":"cacheable_ber","children":[],"call":["HashWithIndifferentAccess  new ","Hash  [] ","v to_a ","h map ","result map ","HasHash  [] WitHash  [] IndifferentAccess  new ","HasHash  []   [] ","Hash  []  map "]}," EntityManager connect_as_user?":{"type":"method","name":"connect_as_user?","children":[],"call":[" setting account include? "," setting account "," setting "]}," EntityManager account_disabled?":{"type":"method","name":"account_disabled?","children":[],"call":[" setting account_disabled_proc try ! ! "," setting account_disabled_proc try ! "," setting account_disabled_proc try "," setting account_disabled_proc "," setting ","flags blank? "]}," EntityManager member_key":{"type":"method","name":"member_key","children":[],"call":["member [] "," setting base_dn length -@ - "," setting base_dn length -@ "," setting base_dn length "," setting base_dn "," setting "]}," EntityManager ns":{"type":"method","name":"ns","children":[],"call":[" setting ldap_attributes "," setting "]}," EntityManager n":{"type":"method","name":"n","children":[],"call":[" setting send "," setting "]}," EntityManager ldap_search":{"type":"method","name":"ldap_search","children":[],"call":["e [] ","result map ","result nil? "," block_given? ","ldap search ","Proc  new ","options []= ","attrs nil? ","attrs is_a? ","options [] "," raise ","os message ","os code ","ldap get_operation_result "," fail ","ldap search  map ","ldap search  nil? ","options []  nil? ","options []  is_a? ","ldap get_operation_result  message ","ldap get_operation_result  code ","ldap get_operation_ldap search  "]}," EntityManager find_all_users":{"type":"method","name":"find_all_users","children":[],"call":[" ldap_search "," block_given? "," setting base_dn "," setting "," setting ldap_filter "," setting filter present? "," setting filter ","Net LDAP Filter  eq "," setting class_user "," setting users_search_onelevel? "]}," EntityManager find_user":{"type":"method","name":"find_user","children":[],"call":["result first ","result present? "," block_given? ! "," block_given? "," ldap_search ","user_filter & "," setting base_dn "," setting ","Net LDAP Filter  eq "," setting login "," setting ldap_filter "," setting filter present? "," setting filter "," setting class_user "," ldap_search  first "," ldap_search  present? ","Net LDAP Filter  eq  & "]}," EntityManager find_all_dyngroups":{"type":"method","name":"find_all_dyngroups","children":[],"call":[" update_dyngroups_cache! ","options [] ","dyngroups [] << ","entry [] first ","entry [] ","dyngroups [] "," member_key ","member downcase ends_with? ","member downcase ","entry [] each "," block_given? "," find_all_groups ","h []= ","Hash  new "," setting base_dn downcase "," setting base_dn "," setting ","options reverse_merge "," n ","options reverse_merge  [] ","options reverse_merge  reverse_merge "]}," EntityManager find_all_groups":{"type":"method","name":"find_all_groups","children":[],"call":[" ldap_search "," block_given? "," setting groups_base_dn "," setting ","Net LDAP Filter  construct "," setting group_search_filter "," setting group_search_filter present? ","Net LDAP Filter  eq "," setting class_group ","options [] "," setting has_groups_base_dn? "," setting  setting groups_base_dn  "," setting has_ setting groups_base_dn ? "]}," EntityManager find_group":{"type":"method","name":"find_group","children":[],"call":["result first ","result present? "," block_given? ! "," block_given? "," find_all_groups ","Net LDAP Filter  eq "," setting groupname "," setting "," find_all_groups  first "," find_all_groups  present? "]}," EntityManager get_group_closure":{"type":"method","name":"get_group_closure","children":[],"call":[" get_group_closure ","closure include? ","group [] first ","group [] "," n ","parent_groups each_with_object ","closure << "," cacheable_ber "," find_all_groups map "," find_all_groups "," ns ","Net LDAP Filter  eq "," setting member_group "," setting "," find_group ","group is_a? ","Array  new ","(send\n  (send\n    (lvar :group) :[]\n    (send nil :n\n      (sym :parent_group))) :map) reduce "," setting group_parentid ","group [] map ","group [] present? "," setting nested_groups "," parents_cache fetch "," parents_cache "," get_ find_group _closure "," find_group  [] first "," find_group  [] ","parent_ find_group s each_with_object "," find_all_ find_group s map "," find_all_ find_group s "," setting member_ find_group  "," find_ find_group  "," find_group  is_a? ","(send\n  (send\n    (lvar : find_group ) :[]\n    (send nil :n\n      (sym :parent_ find_group ))) :map) reduce "," setting  find_group _parentid "," find_group  [] map "," find_group  [] present? "," setting nested_ find_group s "]}," EntityManager reload_dyngroups!":{"type":"method","name":"reload_dyngroups!","children":[],"call":[" find_all_dyngroups "," with_ldap_connection "]}," EntityManager get_dynamic_groups":{"type":"method","name":"get_dynamic_groups","children":[],"call":[" dyngroups_cache fetch "," member_key "," dyngroups_cache "," reload_dyngroups! "," dyngroups_fresh? "]}," EntityManager groups_changes":{"type":"method","name":"groups_changes","children":[],"call":[" reset_parents_cache! "," running_rake? ","user_groups include? ","group downcase ","changes [] delete_if ","changes [] ","groupname_regexp !~ "," get_dynamic_groups "," find_user first "," find_user ","user login "," setting sync_dyngroups? "," setting ","changes []= ","closure + ","groupname_regexp =~ "," get_group_closure select "," get_group_closure "," closure_cache fetch "," closure_cache ","changes [] inject ","Set  new "," setting nested_groups_enabled? ","changes [] << ","group first "," find_all_groups "," n ","(send\n  (lvar :groups) :map) reduce ","Net LDAP Filter  eq "," setting groupid ","groups map ","entry [] first ","entry [] "," ns "," setting member "," setting user_memberid != "," setting login "," setting user_memberid "," setting group_membership ","(send\n  (lvar :filtered_groups) :map) reduce "," setting groupname ","filtered_groups map ","user_groups select "," with_ldap_connection "," setting groupname_regexp ","g lastname downcase ","g lastname ","user groups map ","user groups "," setting active? "," get_primary_group "," setting has_primary_group? ","user_dn nil? "," find_user try ","entry present? "," setting user_memberid == ","g name downcase ","g name ","SortedSet  new ","user_entry []  include? "," setting groupname_regexp  !~ "," get_dynamic_entry []  "," setting sync_dynentry [] ? "," setting groupname_regexp  =~ "," setting nested_entry [] _enabled? "," find_all_entry []  ","(send\n  (lvar :entry [] ) :map) reduce ","entry []  map "," find_user  [] first "," find_user  [] "," setting user_entry [] first  != "," setting user_user login  != "," setting user_entry [] first  "," setting user_user login  ","(send\n  (lvar :filtered_entry [] ) :map) reduce ","filtered_entry []  map ","user_entry []  select "," setting  setting groupname_regexp  ","user entry []  map ","user entry []  ","entry [] first  nil? "," find_user  present? "," setting user_entry [] first  == "," setting user_user login  == "]}," EntityManager ldap_users":{"type":"method","name":"ldap_users","children":[],"call":[" trace ","deleted_users size ","changes [] size - ","changes [] size ","changes [] ","users_on_local - ","changes values sum map ","changes values sum ","changes values ","u login downcase ","u login "," users active map "," users active "," users "," find_all_users map "," find_all_users "," n ","changes [] << ","entry [] first ","entry [] "," account_disabled? "," ns "," setting has_account_flags? "," setting ","Set  new "," with_ldap_connection ","changes [] delete ","SortedSet  new ","changes []= ","changes [] to_a sort ","changes [] to_a "," account_locked? ","users_on_local -  size "]}," EntityManager get_group_fields":{"type":"method","name":"get_group_fields","children":[],"call":["fields []= ","value first ","f nil? "," setting group_fields_to_sync include? "," setting group_fields_to_sync "," setting "," setting group_field ","group_data inject "," find_group "," setting group_ldap_attrs_to_sync "," n "," with_ldap_connection ","value first blank? ","value nil? ","group_fields []= ","cf default_value ","cf id to_s ","cf id ","group_fields [] blank? ","group_fields [] "," group_required_custom_fields each "," group_required_custom_fields "," setting group_field ields []= ","value  setting group_field irst "," setting group_field  nil? "," setting group_ setting group_field ields_to_sync include? "," setting group_ setting group_field ields_to_sync "," setting group_ setting group_field ield ","  setting group_field ind_group ","value  setting group_field irst blank? ","group_ setting group_field ields []= ","c setting group_field  de setting group_field ault_value ","c setting group_field  id to_s ","c setting group_field  id ","group_ setting group_field ields [] blank? ","group_ setting group_field ields [] "," group_required_custom_ setting group_field ields each "," group_required_custom_ setting group_field ields "]}," EntityManager get_user_fields":{"type":"method","name":"get_user_fields","children":[],"call":["fields []= ","value first ","f nil? "," setting user_fields_to_sync include? "," setting user_fields_to_sync "," setting ","User STANDARD_FIELDS  include? "," setting user_field ","user_data inject "," find_user "," setting user_ldap_attrs_to_sync "," with_ldap_connection ","value first blank? ","value nil? ","user_fields []= ","cf default_value ","cf id to_s ","cf id ","user_fields [] blank? ","user_fields [] "," user_required_custom_fields each "," user_required_custom_fields ","user_data nil? ","fields_to_sync include? ","User STANDARD_FIELDS  + "," user_required_custom_fields map ","options try "," setting user_field ields []= ","value  setting user_field irst "," setting user_field  nil? "," setting user_ setting user_field ields_to_sync include? "," setting user_ setting user_fields_to_sync  include? "," setting user_ setting user_field ields_to_sync "," setting user_ setting user_fields_to_sync  "," setting user_ setting user_field ield ","  setting user_field ind_user "," setting user_ setting user_ldap_attrs_to_sync  ","value  setting user_field irst blank? ","user_ setting user_field ields []= ","c setting user_field  de setting user_field ault_value ","c setting user_field  id to_s ","c setting user_field  id ","user_ setting user_field ields [] blank? ","user_ setting user_field ields [] "," user_required_custom_ setting user_field ields each "," user_required_custom_ setting user_field ields "," setting user_field ields_to_sync include? "," setting user_fields_to_sync  include? "," user_required_custom_ setting user_field ields map "]}," User InstanceMethods save":{"type":"method","name":"save","children":[],"call":[]}," User InstanceMethods update_attributes":{"type":"method","name":"update_attributes","children":[],"call":[]}," User InstanceMethods activate!":{"type":"method","name":"activate!","children":[],"call":[]}," User InstanceMethods lock!":{"type":"method","name":"lock!","children":[],"call":[]}," User ClassMethods create":{"type":"method","name":"create","children":[],"call":[" block_given? ","User  new "]}," Group InstanceMethods find_or_create_by_lastname":{"type":"method","name":"find_or_create_by_lastname","children":[],"call":[" puts ","group valid? "," Group  new ","attributes merge ","group present? "," find_by_lastname "," Group  new  valid? "," find_by_lastname  valid? "," Group  new  present? "," find_by_lastname  present? "]}," String raw_utf8_encoded":{"type":"method","name":"raw_utf8_encoded","children":[],"call":[" encode force_encoding "," encode "," encoding name != "," encoding name "," encoding "," respond_to? "]}," FileStore delete_unless":{"type":"method","name":"delete_unless","children":[],"call":[" delete_entry "," file_path_key "," search_dir "," cache_path "," merged_options "," file_path_ file_path_key  "," merged_ merged_options  "]}," LdapSync VERSION to_s":{"type":"method","name":"to_s","children":[],"call":[]}," LdapSync VERSION to_a":{"type":"method","name":"to_a","children":[],"call":[]}," LdapSync VERSION revision":{"type":"method","name":"revision","children":[],"call":[]}," User InstanceMethods sync_on_create?":{"type":"method","name":"sync_on_create?","children":[],"call":["@sync_on_create == "]}," User InstanceMethods sync_on_create!":{"type":"method","name":"sync_on_create!","children":[],"call":[]}," User InstanceMethods sync_fields_and_groups":{"type":"method","name":"sync_fields_and_groups","children":[],"call":[" auth_source sync_user "," password "," login "," auth_source "," sync_on_create? "]}," AuthSourceLdap InstanceMethods trace_groups_changes_summary":{"type":"method","name":"trace_groups_changes_summary","children":[],"call":[" trace ","user login ","d > ","a > ","(send\n  (send\n    (lvar :chg) :[]\n    (erange\n      (int 0)\n      (int -1))) :join\n  (str \", \")) join ","chg [] ","chg [] join ","chg size > ","chg size ","chg size == ","chg << "," pluralize ","a + == ","a + ","nc > ","a == ","groups [] size - ","groups [] size ","groups [] ","deleted size ","added size "," running_rake? ","nc_names to_a join ","nc_names to_a ","deleted_names join ","added_names join ","(send\n  (send\n    (lvar :groups) :[]\n    (sym :added)) :map) - ","g mb_chars downcase to_s ","g mb_chars downcase ","g mb_chars ","groups [] map ","g lastname mb_chars downcase to_s ","g lastname mb_chars downcase ","g lastname mb_chars ","g lastname ","deleted map ","added map "," tradded size ce ","deleted size  > ","added size  > ","(sendeleted size \n  (sendeleted size \n    (lvar :chg) :[]\n    (erange\n      (int 0)\n      (int -1))) :join\n  (str \", \")) join ","(send\n  (send\n    (lvadded size r :chg) :[]\n    (eradded size nge\n      (int 0)\n      (int -1))) :join\n  (str \", \")) join "," pluradded size lize ","added size  + == ","added size  + ","groups [] size -  > ","added size  == ","deleted size eletedeleted size  size ","adeleted size deleted size edeleted size  size ","added size dded size "," running_radded size ke? ","groups [] size - _names to_a join ","nc_nadded size mes to_added size  join ","(send\n  (send\n    (lvar :groups) :[]\n    (sym :added)) :map) -  to_a join ","groups [] size - _names to_a ","nc_nadded size mes to_added size  ","(send\n  (send\n    (lvar :groups) :[]\n    (sym :added)) :map) -  to_a ","deleted size eletedeleted size _names join ","deleted_nadded size mes join ","adeleted size deleted size edeleted size _names join ","added size dded_nadded size mes join ","(sendeleted size \n  (sendeleted size \n    (lvar :groups) :[]\n    (sym :adeleted size deleted size edeleted size )) :map) - ","(send\n  (send\n    (lvadded size r :groups) :[]\n    (sym :added size dded)) :madded size p) - ","g mb_chars dowgroups [] size - ase to_s ","g mb_chars deleted size owncase to_s ","g mb_chadded size rs downcadded size se to_s ","g mb_chars dowgroups [] size - ase ","g mb_chars deleted size owncase ","g mb_chadded size rs downcadded size se ","g mb_chadded size rs ","groups [] madded size p ","g lastname mb_chars dowgroups [] size - ase to_s ","g lastname mb_chars deleted size owncase to_s ","g ladded size stnadded size me mb_chadded size rs downcadded size se to_s ","g lastname mb_chars dowgroups [] size - ase ","g lastname mb_chars deleted size owncase ","g ladded size stnadded size me mb_chadded size rs downcadded size se ","g ladded size stnadded size me mb_chadded size rs ","g ladded size stnadded size me ","deleted size eletedeleted size  map ","deleted madded size p ","adeleted size deleted size edeleted size  map ","added size dded madded size p "]}," AuthSourceLdap InstanceMethods locked_on_ldap?":{"type":"method","name":"locked_on_ldap?","children":[],"call":["user_groups include? ! ","user_groups include? "," setting required_group downcase "," setting required_group "," setting "," groups_changes [] map "," groups_changes [] "," groups_changes "," setting sync_groups_on_login? "," setting has_required_group? "," account_disabled? "," find_user first "," find_user "," n ","user login "," setting sync_fields_on_login? "," setting has_account_flags? "," with_ldap_connection ","options [] "," account_locked? "," groups_changes [] map  include? ! "," groups_changes [] map  include? "," setting has_account_ find_user first ? "]}," EntityManager error":{"type":"method","name":"error","children":[],"call":[" trace "]}," EntityManager change":{"type":"method","name":"change","children":[],"call":[" trace "]}," EntityManager info":{"type":"method","name":"info","children":[],"call":[" trace "]}," EntityManager group_required_custom_fields":{"type":"method","name":"group_required_custom_fields","children":[],"call":["GroupCustomField  select "]}," EntityManager user_required_custom_fields":{"type":"method","name":"user_required_custom_fields","children":[],"call":["UserCustomField  select "]}," EntityManager get_primary_group":{"type":"method","name":"get_primary_group","children":[],"call":[" find_all_groups first "," find_all_groups "," n ","Net LDAP Filter  eq "," setting primary_group "," setting ","primary_group_id nil? "," find_user first "," find_user ","user login "," find_user try "," find_user first  nil? "," find_user try  nil? "]}," AuthSourceLdap InstanceMethods find_local_user":{"type":"method","name":"find_local_user","children":[],"call":[" trace ","user login ","user auth_source_id != "," id ","user auth_source_id ","user present? "," User  where includes first "," User  where includes "," User  where ","username mb_chars downcase ","username mb_chars ","User  table_name "," User  where first "," User  where includes first  login "," User  where first  login "," User  where includes first  auth_source_id != "," User  where first  auth_source_id != "," User  where includes first  auth_source_id "," User  where first  auth_source_id "," User  where includes first  present? "," User  where first  present? "," User  where includes first name mb_chars downcase "," User  where first name mb_chars downcase "," User  where includes first name mb_chars "," User  where first name mb_chars "]}," User InstanceMethods email_is_taken":{"type":"method","name":"email_is_taken","children":[],"call":[" errors added? "," errors "," email_address errors added? "," email_address errors "," email_address "," respond_to? "]}," BerIdentifiedString initialize":{"type":"method","name":"initialize","children":[],"call":[" force_encoding "," valid_encoding? ","current_encoding == "," encoding "," encoding  == "]}," Migration []":{"type":"method","name":"[]","children":[],"call":[]}," User InstanceMethods archive!":{"type":"method","name":"archive!","children":[],"call":[" lock! ","m member_roles destroy_all ","m member_roles "," memberships each "," memberships "," groups destroy_all "," groups "]}," EntityManager account_locked?":{"type":"method","name":"account_locked?","children":[],"call":[" setting account_locked_proc try ! ! "," setting account_locked_proc try ! "," setting account_locked_proc try "," setting account_locked_proc "," setting ","flags blank? "]}}