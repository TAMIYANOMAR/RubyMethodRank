{" RedmineAudit Database parse_tds":{"type":"method","name":"parse_tds","children":[],"call":["res push ","fixed_versions push ","Gem Requirement  new ",">=  + ","versions last ","~>  + ","versions [] map ","versions [] ","versions length > ","versions length ","tds [] content split ","tds [] content ","tds [] ","(str \"Ruby on Rails vulnerability\") match ","res [] ","tds [] map + ","tds [] map ","Gem Version  new <=> ","Gem Version  new ","tds [] content split sort ","tds [] map +  push ","fixed_tds [] content split  push ","tds [] content split  last ","tds [] content split  [] map ","tds [] content split  [] ","tds [] content split  length > ","tds [] content split  length ","tds [] map +  [] "]}," RedmineAudit Database fetch_advisory_data":{"type":"method","name":"fetch_advisory_data","children":[],"call":[" open read "," open "]}," RedmineAudit Database advisories":{"type":"method","name":"advisories","children":[],"call":["unfixed_advisories push ","advisory vulnerable? ","@known_advisories each ","Gem Version  new ","v gsub ","@known_advisories << ","Advisory  new "," parse_tds ","tr xpath ","doc xpath xpath [] each ","doc xpath xpath [] ","doc xpath xpath ","doc xpath ","Nokogiri  HTML "," fetch_advisory_data ","@known_advisories nil? ","Nokogiri  HTML  xpath xpath [] each ","Nokogiri  HTML  xpath xpath [] ","Nokogiri  HTML  xpath xpath ","Nokogiri  HTML  xpath "]}," RedmineAudit Advisory vulnerable?":{"type":"method","name":"vulnerable?","children":[],"call":[" unaffected? ! "," unaffected? "," fixed? ! "," fixed? "]}," RedmineAudit Advisory fixed?":{"type":"method","name":"fixed?","children":[],"call":["fixed_version === "," fixed_versions any? "," fixed_versions "]}," RedmineAudit Advisory unaffected?":{"type":"method","name":"unaffected?","children":[],"call":["unaffected_version === "," unaffected_versions any? "," unaffected_versions "]}," RedmineAudit PluginDatabase fetch_advisory_data":{"type":"method","name":"fetch_advisory_data","children":[],"call":[" open read "," open "]}," RedmineAudit PluginDatabase advisories":{"type":"method","name":"advisories","children":[],"call":["unfixed_advisories [] push ","unfixed_advisories [] ","advisory vulnerable? ","Gem Version  new ","plugin version ","advisories each ","advisories empty? ","advisories nil? ","@known_advisories [] ","plugin id ","Redmine Plugin  all each ","Redmine Plugin  all ","@known_advisories [] << ","Advisory  new ","attrs [] ","Gem Requirement  new ","(or\n  (send\n    (lvar :attrs) :[]\n    (str \"patched_versions\"))\n  (array)) map ","(or\n  (send\n    (lvar :attrs) :[]\n    (str \"unaffected_versions\"))\n  (array)) map ","YAML  load each ","YAML  load "," fetch_advisory_data ","@known_advisories nil? ","unfixed_@known_advisories []  [] push ","unfixed_@known_advisories []  [] ","@known_advisories []  each ","@known_advisories []  empty? ","@known_advisories []  nil? ","@known_@known_advisories []  [] ","@known_@known_advisories []  [] << ","@known_@known_advisories []  nil? "]}," RedmineAudit cvss_to_severity":{"type":"method","name":"cvss_to_severity","children":[],"call":[" raise "," cvss_v3 "," cvss_v2 "]}," RedmineAudit vulnerable?":{"type":"method","name":"vulnerable?","children":[],"call":[" unaffected? ! "," unaffected? "," fixed? ! "," fixed? "]}," RedmineAudit fixed?":{"type":"method","name":"fixed?","children":[],"call":["fixed_version === "," fixed_versions any? "," fixed_versions "]}," RedmineAudit unaffected?":{"type":"method","name":"unaffected?","children":[],"call":["unaffected_version === "," unaffected_versions any? "," unaffected_versions "]}," RedmineAudit initialize":{"type":"method","name":"initialize","children":[],"call":[" []= "," [] nil? "," [] ","(sym :external_references) each "," severity= "," cvss_to_severity "," severity nil? "," severity "]}}