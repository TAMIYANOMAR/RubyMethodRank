{" GH with":{"type":"method","name":"with","children":[],"call":[]}," GH []":{"type":"method","name":"[]","children":[],"call":[]}," GH Wrapper path_for":{"type":"method","name":"path_for","children":[],"call":["uri request_uri "," raise ","uri host != "," api_host host "," api_host ","uri host ","Addressable URI  parse "," full_url request_uri "," full_url ","Addressable URI  parse  request_Addressable URI  parse  ","Addressable URI  parse  host != ","Addressable URI  parse  host "," full_url request_Addressable URI  parse  "]}," GH Wrapper full_url":{"type":"method","name":"full_url","children":[],"call":[" api_host + "," path_for "," api_host "," raise ","uri host != "," api_host host ","uri host ","Addressable URI  parse "," api_host +  host != "," api_host +  host "]}," GH Wrapper normalize_options":{"type":"method","name":"normalize_options","children":[],"call":["options [] ","Hash  === "]}," GH Wrapper setup":{"type":"method","name":"setup","children":[],"call":[" backend= "," class wraps new "," class wraps "," class ","Wrapper  === "]}," GH Wrapper modify":{"type":"method","name":"modify","children":[],"call":[" raise ","Error  new "]}," GH Wrapper inspect":{"type":"method","name":"inspect","children":[],"call":[" backend inspect "," backend "," class "]}," GH Wrapper frontend":{"type":"method","name":"frontend","children":[],"call":["@frontend frontend "]}," GH Wrapper frontend=":{"type":"method","name":"frontend=","children":[],"call":[]}," GH Wrapper backend=":{"type":"method","name":"backend=","children":[],"call":["layer frontend= "," reset "," backend "]}," GH Wrapper initialize":{"type":"method","name":"initialize","children":[],"call":[" public_send "," respond_to? ","options each_pair "," setup "," normalize_options ","@options each_pair "]}," GH Wrapper wraps":{"type":"method","name":"wraps","children":[],"call":[]}," GH Wrapper []":{"type":"method","name":"[]","children":[],"call":[" modify "," backend [] "," backend "," generate_response "," fetch_resource "]}," GH Stack build":{"type":"method","name":"build","children":[],"call":["klass new ","@options merge merge ","@options merge ","@stack reverse inject ","@stack reverse "]}," GH Stack use":{"type":"method","name":"use","children":[],"call":["@stack << "]}," GH Stack initialize":{"type":"method","name":"initialize","children":[],"call":[" instance_eval "]}," GH Response content_type":{"type":"method","name":"content_type","children":[],"call":[" headers [] "," headers "]}," GH Response dup_ivars":{"type":"method","name":"dup_ivars","children":[],"call":["@body dup ","@data dup ","@headers dup "]}," GH Response hash?":{"type":"method","name":"hash?","children":[],"call":[" respond_to? "]}," GH Response to_ary":{"type":"method","name":"to_ary","children":[],"call":["@data dup to_ary ","@data dup "," method_missing "," __method__ "," respond_to? "]}," GH Response to_hash":{"type":"method","name":"to_hash","children":[],"call":["@data dup to_hash ","@data dup "," method_missing "," __method__ "," respond_to? "]}," GH Response respond_to?":{"type":"method","name":"respond_to?","children":[],"call":[" data respond_to? "," data ","method to_s == ","method to_s "]}," GH Response to_s":{"type":"method","name":"to_s","children":[],"call":["@body dup "]}," GH Response dup":{"type":"method","name":"dup","children":[],"call":[" dup_ivars "]}," GH Response initialize":{"type":"method","name":"initialize","children":[],"call":["MultiJson  decode ","@body encode ","@body respond_to? ","MultiJson  encode "," raise ","body inspect ","body to_ary "," respond_to ","body to_hash ","body to_str "," content_type "," content_type != ","Hash  [] ","k downcase ","headers map "," fail ","url to_s ","@body force_encoding ","@body encode  encode ","body to_str  encode ","@body encode  respond_to? ","body to_str  respond_to? ","@body encode  force_encoding ","body to_str  force_encoding "]}," GH Remote modify":{"type":"method","name":"modify","children":[],"call":["Response  new ","body is_a? "]}," GH Remote []":{"type":"method","name":"[]","children":[],"call":[" modify ","response headers ","response body "," connection get "," headers "," path_for "," connection "," http "," frontend http "," frontend "," connection get  headers "," http  headers "," frontend http  headers "," connection get  body "," http  body "," frontend http  body "]}," GH Remote inspect":{"type":"method","name":"inspect","children":[],"call":[" api_host "," class "]}," GH Remote setup":{"type":"method","name":"setup","children":[],"call":["builder adapter ","options [] ","builder response ","builder request ","Faraday  new ","options [] try ","Addressable URI  parse ","api_host api_host ","api_host respond_to? ","options values_at ","@prefix << ","@api_host host ","faraday_options merge! ","faraday_options []= ","@headers []= ","@headers merge! ","builder use ","GH  const_get ","options [] camelize ","RUBY_ENGINE  == ","builder options []  ","api_host api_host  api_host api_host  ","api_host api_host  respond_to? ","Addressable URI  parse  host ","@api_host api_host  host "]}," GH Normalizer normalize":{"type":"method","name":"normalize","children":[],"call":[" normalize_response "," normalize_array "," normalize_hash "]}," GH Normalizer normalize_array":{"type":"method","name":"normalize_array","children":[],"call":[" normalize ","array map "]}," GH Normalizer normalize_key":{"type":"method","name":"normalize_key","children":[],"call":["Numeric  === ","value =~ "," normalize_key "]}," GH Normalizer normalize_url":{"type":"method","name":"normalize_url","children":[],"call":[" set_link ","Addressable URI  parse host == "," api_host host "," api_host ","Addressable URI  parse host ","Addressable URI  parse "]}," GH Normalizer normalize_user":{"type":"method","name":"normalize_user","children":[],"call":["hash [] ","hash delete "]}," GH Normalizer normalize_time":{"type":"method","name":"normalize_time","children":[],"call":["hash []= ","Time  at xmlschema ","Time  at ","key == "]}," GH Normalizer normalize_hash":{"type":"method","name":"normalize_hash","children":[],"call":[" normalize_user ","corrected []= "," normalize "," normalize_time "," normalize_url "," normalize_key ","hash each_pair ","corrected default_proc= ","hash default_proc "," normalize_ normalize_key  "]}," GH Normalizer normalize_response":{"type":"method","name":"normalize_response","children":[],"call":["response data= "," normalize ","response data ","response dup ","response dup  data= ","response dup  data ","response dup  dup "]}," GH Normalizer set_link":{"type":"method","name":"set_link","children":[],"call":[" links []= "," links "]}," GH Normalizer links":{"type":"method","name":"links","children":[],"call":["hash [] ","hash data ","hash respond_to? ","hash data  [] ","hash data  data ","hash data  respond_to? "]}," GH Normalizer modify":{"type":"method","name":"modify","children":[],"call":[" normalize "]}," GH Normalizer []":{"type":"method","name":"[]","children":[],"call":[" full_url to_s "," full_url "," links [] "," links ","result hash? ","result respond_to? "]}," Faraday TokenAuthentication call":{"type":"method","name":"call","children":[],"call":["@app call ","env [] []= ","env [] ","env [] [] "]}," Faraday TokenAuthentication initialize":{"type":"method","name":"initialize","children":[],"call":[]}," Faraday Retry call":{"type":"method","name":"call","children":[],"call":[" raise ","retries > ","@app call "]}," Faraday Retry initialize":{"type":"method","name":"initialize","children":[],"call":[]}," Faraday BasicAuthentication call":{"type":"method","name":"call","children":[],"call":["@app call ","env [] []= ","env [] ","env [] [] "]}," Faraday BasicAuthentication initialize":{"type":"method","name":"initialize","children":[],"call":["Base64  encode64 gsub ","Base64  encode64 ","(lvar :login) join "]}," GH Case respond_to":{"type":"method","name":"respond_to","children":[],"call":["o respond_to? "," proc "]}," GH Cache []":{"type":"method","name":"[]","children":[],"call":[" cache fetch "," path_for "," cache "," prefixed "]}," GH Cache setup":{"type":"method","name":"setup","children":[],"call":["SimpleCache  new "," cache ","ActiveSupport Cache  lookup_store ","Rails  cache "]}," GH Cache SimpleCache fetch":{"type":"method","name":"fetch","children":[],"call":["@old [] ","@new [] ","@new size > ","@new size ","@mutex lock ","@mutex synchronize "]}," GH Cache SimpleCache initialize":{"type":"method","name":"initialize","children":[],"call":["Mutex  new ","size / "]}," GH current=":{"type":"method","name":"current=","children":[],"call":[]}," GH current":{"type":"method","name":"current","children":[],"call":[]}," GH Wrapper setup_lazy_loading":{"type":"method","name":"setup_lazy_loading","children":[],"call":["fields [] ","hash merge! "," lazy_load "," setup_default_proc "," modify_hash "," lazy_load  [] "]}," GH Wrapper setup_default_proc":{"type":"method","name":"setup_default_proc","children":[],"call":["hash default_proc= ","block [] ","value nil? ","old_proc call "," proc ","hash default_proc ","block []  nil? ","old_proc call  nil? ","hash default_proc  call "]}," GH Wrapper modify_hash":{"type":"method","name":"modify_hash","children":[],"call":["corrected default_proc= ","hash default_proc ","corrected []= "," modify ","hash each_pair "]}," GH Wrapper modify_array":{"type":"method","name":"modify_array","children":[],"call":[" modify ","array map "]}," GH Wrapper modify_response":{"type":"method","name":"modify_response","children":[],"call":["Response  new ","result to_gh ","result respond_to? "," double_dispatch ","response data ","response url ","response headers "," double_dispatch  to_gh "," double_dispatch  respond_to? "]}," GH Wrapper double_dispatch":{"type":"method","name":"double_dispatch","children":[],"call":[" modify_unkown "," modify_integer "," respond_to "," modify_string "," modify_array "," modify_hash "," modify_response "," raise ","Error  new "," modify_unknown "]}," GH Wrapper prefix":{"type":"method","name":"prefix","children":[],"call":[" class name "," class "]}," GH Wrapper identifier":{"type":"method","name":"identifier","children":[],"call":[" backend prefixed "," backend "]}," GH Wrapper load":{"type":"method","name":"load","children":[],"call":[" modify "," backend load "," backend "]}," GH Wrapper reset":{"type":"method","name":"reset","children":[],"call":[" backend reset "," backend "]}," GH Wrapper prefixed":{"type":"method","name":"prefixed","children":[],"call":[" prefix + + "," identifier "," prefix + "," prefix "]}," GH Stack replace":{"type":"method","name":"replace","children":[],"call":["old_class == ","@stack map! "]}," GH Response to_gh":{"type":"method","name":"to_gh","children":[],"call":[]}," GH Remote identifier":{"type":"method","name":"identifier","children":[],"call":[" path_for "]}," GH Remote load":{"type":"method","name":"load","children":[],"call":[" modify "]}," GH Remote reset":{"type":"method","name":"reset","children":[],"call":[]}," GH Normalizer modify_key":{"type":"method","name":"modify_key","children":[],"call":["Numeric  === ","value =~ "," modify_key ","value to_s =~ ","value to_s "]}," GH Normalizer modify_url":{"type":"method","name":"modify_url","children":[],"call":[" set_link ","Addressable URI  parse host == "," api_host host "," api_host ","Addressable URI  parse host ","Addressable URI  parse ","hash []= ","value to_s start_with? "," api_host to_s ","value to_s "]}," GH Normalizer modify_user":{"type":"method","name":"modify_user","children":[],"call":["hash [] ","hash delete "," modify_user_fields "]}," GH Normalizer modify_time":{"type":"method","name":"modify_time","children":[],"call":["hash []= ","Time  at xmlschema ","Time  at ","key == ","time utc xmlschema ","time utc ","Time  parse ","value to_s "," raise ","value == ","RUBY_VERSION  < ","TIME_PATTERN  === ","TIME_KEYS  include? ","time xmlschema ","Time  parse  utc xmlschema ","Time  at  utc xmlschema ","Time  parse  utc ","Time  at  utc ","Time  parse  xmlschema ","Time  at  xmlschema "]}," GH Normalizer modify_hash":{"type":"method","name":"modify_hash","children":[],"call":[" modify_user ","corrected []= "," modify "," modify_time "," modify_url "," modify_key ","hash each_pair ","corrected default_proc= ","hash default_proc "," modify_ modify_key  "]}," GH Normalizer modify_response":{"type":"method","name":"modify_response","children":[],"call":["response data= "," modify ","response data ","response dup ","response dup  data= ","response dup  data ","response dup  dup "]}," GH LazyLoader lazy_load":{"type":"method","name":"lazy_load","children":[],"call":[" backend [] "," backend "," raise ","Error  new "," modify_hash "," backend [] data "]}," GH LazyLoader modify_hash":{"type":"method","name":"modify_hash","children":[],"call":[" setup_lazy_loading ","link [] ","hash [] try ","hash [] "," raise ","Error  new ","hash [] [] ","hash [] nil? ","hash [] try  [] ","hash [] []  [] "]}," GH Cache clear_all":{"type":"method","name":"clear_all","children":[],"call":[" cache clear "," cache "]}," GH Cache clear_partial":{"type":"method","name":"clear_partial","children":[],"call":[" cache delete_matched ","Regexp  new "," cache ","^ << ","Regexp  escape "," prefixed "," cache respond_to? "]}," GH Cache reset":{"type":"method","name":"reset","children":[],"call":[" clear_all "," clear_partial "]}," GH Cache SimpleCache clear":{"type":"method","name":"clear","children":[],"call":["@mutex synchronize "]}," GH set":{"type":"method","name":"set","children":[],"call":[]}," GH Wrapper generate_response":{"type":"method","name":"generate_response","children":[],"call":[" modify "," backend generate_response "," backend "]}," GH TokenCheck fetch_resource":{"type":"method","name":"fetch_resource","children":[],"call":[" check_token "]}," GH TokenCheck check_token":{"type":"method","name":"check_token","children":[],"call":[" raise "," http "," token "," client_id ","Basic %s % ","Base64  encode64 gsub ","Base64  encode64 "," client_secret ","GH  Error "," path_for "]}," GH TokenCheck setup":{"type":"method","name":"setup","children":[],"call":["options [] "]}," GH ResponseWrapper to_gh":{"type":"method","name":"to_gh","children":[],"call":[]}," GH Response ==":{"type":"method","name":"==","children":[],"call":["@data == "]}," GH Remote in_parallel":{"type":"method","name":"in_parallel","children":[],"call":[" raise "]}," GH Remote put":{"type":"method","name":"put","children":[],"call":[" frontend request "," frontend "," request "]}," GH Remote patch":{"type":"method","name":"patch","children":[],"call":[" frontend request "," frontend "," request "]}," GH Remote head":{"type":"method","name":"head","children":[],"call":[" frontend request "," frontend "]}," GH Remote delete":{"type":"method","name":"delete","children":[],"call":[" frontend request "," frontend "," request "]}," GH Remote post":{"type":"method","name":"post","children":[],"call":[" frontend request "," frontend "," modify ","response headers ","response body ","req body= ","Response  new to_s ","Response  new "," http "," headers "," path_for "," request "]}," GH Remote request":{"type":"method","name":"request","children":[],"call":[" frontend generate_response "," frontend ","req body= ","Response  new to_s ","Response  new "," frontend http "," headers "," path_for "," raise ","error info []= ","error info "," modify ","response headers ","response body "]}," GH Remote http":{"type":"method","name":"http","children":[],"call":[" raise ","Error  new "," connection run_request "," connection ","headers delete "]}," GH Remote generate_response":{"type":"method","name":"generate_response","children":[],"call":[" modify "," full_url ","url to_s empty? ","url to_s ","response env try ","response env ","response url ","response respond_to? ","response headers ","response body "," frontend full_url "," frontend ","response env [] "," full_ full_url  "," full_response env try  "," full_response url  "," full_ frontend full_url  "," full_response env []  "," full_url  to_s empty? ","response env try  to_s empty? ","response url  to_s empty? "," frontend full_url  to_s empty? ","response env []  to_s empty? "," full_url  to_s ","response env try  to_s ","response url  to_s "," frontend full_url  to_s ","response env []  to_s ","response  full_url  ","response response env try  ","response response url  ","response  frontend full_url  ","response response env []  "," frontend full_ full_url  "," frontend full_response env try  "," frontend full_response url  "," frontend full_ frontend full_url  "," frontend full_response env []  "]}," GH Remote fetch_resource":{"type":"method","name":"fetch_resource","children":[],"call":[" frontend http "," headers "," path_for "," frontend "," frontend path_for "]}," GH Parallel connection":{"type":"method","name":"connection","children":[],"call":["layer connection ","layer backend ","layer respond_to? "," backend ","layer backend  connection "," backend  connection ","layer backend  backend "," backend  backend ","layer backend  respond_to? "," backend  respond_to? "]}," GH Parallel in_parallel?":{"type":"method","name":"in_parallel?","children":[],"call":[]}," GH Parallel in_parallel":{"type":"method","name":"in_parallel","children":[],"call":["was nil? ","@queue clear ","dummy __delegate__= "," backend generate_response "," backend ","@queue each ","@mutex synchronize "," connection in_parallel "," connection ","@parallelize ! "," in_parallel? "]}," GH Parallel generate_response":{"type":"method","name":"generate_response","children":[],"call":["@queue << ","@mutex synchronize ","Dummy  new "," in_parallel? "]}," GH Parallel setup":{"type":"method","name":"setup","children":[],"call":["Mutex  new ","@parallelize nil? "]}," GH Parallel Dummy method_missing":{"type":"method","name":"method_missing","children":[],"call":[" __delegate__ __send__ "," __delegate__ "," Kernel  raise "," __delegate__ nil? "]}," GH Pagination modify_response":{"type":"method","name":"modify_response","children":[],"call":["Paginated  new ","response headers [] =~ ","response headers [] ","response headers ","response respond_to? "]}," GH Pagination fetch_resource":{"type":"method","name":"fetch_resource","children":[],"call":["url request_uri ","url query_values= ","params [] ","url query_values "," full_url "," frontend full_url "," frontend "," full_url  request_uri "," frontend full_url  request_uri "," full_url  query_values= "," frontend full_url  query_values= "," full_url  query_values "," frontend full_url  query_values "," full_ full_url  "," full_ frontend full_url  "," frontend full_ full_url  "," frontend full_ frontend full_url  "]}," GH Pagination Paginated next_page":{"type":"method","name":"next_page","children":[],"call":["@gh [] "]}," GH Pagination Paginated headers":{"type":"method","name":"headers","children":[],"call":["@page headers "]}," GH Pagination Paginated to_ary":{"type":"method","name":"to_ary","children":[],"call":[" to_a "]}," GH Pagination Paginated []":{"type":"method","name":"[]","children":[],"call":[" next_page [] ","value - ","@page size "," next_page ","@page [] ","value < "," raise ","value class ","value is_a? "]}," GH Pagination Paginated inspect":{"type":"method","name":"inspect","children":[],"call":[" first inspect "," first "]}," GH Pagination Paginated each":{"type":"method","name":"each","children":[],"call":[" next_page each "," next_page ","@page each "," enum_for "]}," GH Pagination Paginated initialize":{"type":"method","name":"initialize","children":[],"call":[]}," GH Normalizer modify_user_fields":{"type":"method","name":"modify_user_fields","children":[],"call":[" set_link ","hash [] "," links include? "," links ","hash []= ","hash delete ","Hash  === "]}," GH Normalizer generate_response":{"type":"method","name":"generate_response","children":[],"call":[" full_url to_s "," full_url "," links [] "," links ","result respond_to? "," frontend full_url to_s "," frontend full_url "," frontend "]}," GH NestedResources set_links":{"type":"method","name":"set_links","children":[],"call":[" add ","link path "]}," GH NestedResources nested":{"type":"method","name":"nested","children":[],"call":["new_link path ","new_link path= ","path start_with? ","link dup ","link dup  path ","link dup  path= "]}," GH NestedResources add":{"type":"method","name":"add","children":[],"call":[" nested ","hash [] [] ","hash [] "]}," GH NestedResources modify_hash":{"type":"method","name":"modify_hash","children":[],"call":[" set_links ","Addressable URI  parse ","link [] ","hash [] try ","hash [] ","hash [] [] ","hash [] nil? "," set_hash [] try s "," set_hash [] [] s ","hash [] try  [] ","hash [] []  [] "]}," GH MergeCommit url":{"type":"method","name":"url","children":[],"call":["hash [] [] [] ","hash [] [] ","hash [] "]}," GH MergeCommit update":{"type":"method","name":"update","children":[],"call":[" sleep ","hash merge! "," backend [] "," url "," backend "]}," GH MergeCommit force_merge_commit":{"type":"method","name":"force_merge_commit","children":[],"call":[" raise ","hash [] inspect ","hash [] "," update "," github_done_checking? ","Timeout  timeout ","hash []= "," frontend http body "," frontend http "," frontend ","hash [] [] [] + ","hash [] [] [] ","hash [] [] ","hash [] nil? "," fail "," sleep "]}," GH MergeCommit github_done_checking?":{"type":"method","name":"github_done_checking?","children":[],"call":[" fail "," url ","hash [] inspect ","hash [] "]}," GH MergeCommit has_merge_commit?":{"type":"method","name":"has_merge_commit?","children":[],"call":["hash [] "," force_merge_commit "]}," GH MergeCommit pull_request_refs":{"type":"method","name":"pull_request_refs","children":[],"call":["Hash  [] ","data [] merge ","data [] ","ref split last + ","ref split last ","ref split "," [] map "," [] "," git_url_for ","data []  split last + ","data []  split last ","data []  split "]}," GH MergeCommit git_url_for":{"type":"method","name":"git_url_for","children":[],"call":["hash [] [] [] gsub ","hash [] [] [] ","hash [] [] ","hash [] "]}," GH MergeCommit commit_for":{"type":"method","name":"commit_for","children":[],"call":[" git_url_for ","hash [] "]}," GH MergeCommit lazy_load":{"type":"method","name":"lazy_load","children":[],"call":[" raise ","Error  new "," commit_for ","hash [] ","fields [] "," pull_request_refs "," has_merge_commit? ","hash include? ","key =~ ","Hash  [] ","data [] merge ","data [] ","ref split last + ","ref split last ","ref split "," [] map "," [] ","hash [] [] [] gsub ","hash [] [] [] ","hash [] [] ","hash []= "," http body "," http ","hash [] [] [] + ","hash [] nil? "," force_merge_commit "," pull_request_refs  [] "," pull_request_data [] s ","data []  split last + ","data []  split last ","data []  split "]}," GH MergeCommit modify_hash":{"type":"method","name":"modify_hash","children":[],"call":[" raise ","Error  new "," setup_lazy_loading ","hash [] ","hash include? "]}," GH MergeCommit setup":{"type":"method","name":"setup","children":[],"call":["options [] "]}," GH LinkFollower lazy_load":{"type":"method","name":"lazy_load","children":[],"call":[" raise ","Error  new "," [] ","link [] ","hash [] [] ","hash [] "," backend [] "," backend ","hash [] []  [] "]}," GH LinkFollower modify_hash":{"type":"method","name":"modify_hash","children":[],"call":[" raise ","Error  new "," setup_lazy_loading ","hash [] "]}," GH Instrumentation instrument":{"type":"method","name":"instrument","children":[],"call":[" instrumenter call ","payload merge "," frontend "," instrumenter "]}," GH Instrumentation []":{"type":"method","name":"[]","children":[],"call":[" instrument "]}," GH Instrumentation load":{"type":"method","name":"load","children":[],"call":[" instrument "]}," GH Instrumentation http":{"type":"method","name":"http","children":[],"call":[" instrument "]}," GH Instrumentation setup":{"type":"method","name":"setup","children":[],"call":["ActiveSupport Notifications  method "," instrumenter ","Travis EventLogger  method "]}," GH FaradayAdapter perform_request":{"type":"method","name":"perform_request","children":[],"call":[" throw ","@app call ","env [] add_request ","env [] "]}," GH FaradayAdapter call":{"type":"method","name":"call","children":[],"call":[" catch "]}," GH FaradayAdapter setup_parallel_manager":{"type":"method","name":"setup_parallel_manager","children":[],"call":[]}," GH FaradayAdapter Manager run":{"type":"method","name":"run","children":[],"call":["env [] finish ","env [] ","headers []= ","http_response each_header ","env [] save_response ","http_response body ","http_response code to_i ","http_response code ","envs zip ","http pipeline ","env [] create_request ","envs map ","requests each ","Net HTTP Persistent  new ","@mutex synchronize ","h []= ","r each_header ","e [] save_response ","r body ","r code to_i ","r code ","e [] ","@requests each ","Net HTTP Persistent  new _response each_header ","Net HTTP Persistent  new _response body ","Net HTTP Persistent  new _response code to_i ","Net HTTP Persistent  new _response code ","Net HTTP Persistent  new  pipeline "]}," GH FaradayAdapter Manager add_request":{"type":"method","name":"add_request","children":[],"call":["@requests [] << ","@requests [] ","@mutex synchronize ","env []= ","env [] + ","env [] "]}," GH FaradayAdapter Manager initialize":{"type":"method","name":"initialize","children":[],"call":["Mutex  new "]}," GH Error entry":{"type":"method","name":"entry","children":[],"call":["(send\n  (send\n    (lvar :key) :to_s) :+\n  (str \": \")) ljust + ","(send\n  (send\n    (lvar :key) :to_s) :+\n  (str \": \")) ljust ","key to_s + ","key to_s ","(send\n  (send\n    (send\n      (lvar :value) :gsub\n      (regexp\n        (str \"[^\\\\n]{80}\")\n        (regopt))\n      (str \"\\\\0\\n\")) :lines) :map) join gsub ","(send\n  (send\n    (send\n      (lvar :value) :gsub\n      (regexp\n        (str \"[^\\\\n]{80}\")\n        (regopt))\n      (str \"\\\\0\\n\")) :lines) :map) join ","value gsub lines map ","value gsub lines ","value gsub ","value inspect ","String  === ","value message ","value class ","Exception  === ","value gsub! ","(send\n  (send\n    (send\n      (lvar :(send\n  (send\n    (send\n      (lvar :value) :gsub\n      (regexp\n        (str \"[^\\n]{80}\")\n        (regopt))\n      (str \"\\0\\n\")) :lines) :map) join gsub ) :gsub\n      (regexp\n        (str \"[^\\\\n]{80}\")\n        (regopt))\n      (str \"\\\\0\\n\")) :lines) :map) join gsub ","(send\n  (send\n    (send\n      (lvar :value inspect ) :gsub\n      (regexp\n        (str \"[^\\\\n]{80}\")\n        (regopt))\n      (str \"\\\\0\\n\")) :lines) :map) join gsub ","(send\n  (send\n    (send\n      (lvar :(send\n  (send\n    (send\n      (lvar :value) :gsub\n      (regexp\n        (str \"[^\\n]{80}\")\n        (regopt))\n      (str \"\\0\\n\")) :lines) :map) join gsub ) :gsub\n      (regexp\n        (str \"[^\\\\n]{80}\")\n        (regopt))\n      (str \"\\\\0\\n\")) :lines) :map) join ","(send\n  (send\n    (send\n      (lvar :value inspect ) :gsub\n      (regexp\n        (str \"[^\\\\n]{80}\")\n        (regopt))\n      (str \"\\\\0\\n\")) :lines) :map) join ","(send\n  (send\n    (send\n      (lvar :value) :gsub\n      (regexp\n        (str \"[^\\n]{80}\")\n        (regopt))\n      (str \"\\0\\n\")) :lines) :map) join gsub  gsub lines map ","value inspect  gsub lines map ","(send\n  (send\n    (send\n      (lvar :value) :gsub\n      (regexp\n        (str \"[^\\n]{80}\")\n        (regopt))\n      (str \"\\0\\n\")) :lines) :map) join gsub  gsub lines ","value inspect  gsub lines ","(send\n  (send\n    (send\n      (lvar :value) :gsub\n      (regexp\n        (str \"[^\\n]{80}\")\n        (regopt))\n      (str \"\\0\\n\")) :lines) :map) join gsub  gsub ","value inspect  gsub ","(send\n  (send\n    (send\n      (lvar :value) :gsub\n      (regexp\n        (str \"[^\\n]{80}\")\n        (regopt))\n      (str \"\\0\\n\")) :lines) :map) join gsub  inspect ","value inspect  inspect ","(send\n  (send\n    (send\n      (lvar :value) :gsub\n      (regexp\n        (str \"[^\\n]{80}\")\n        (regopt))\n      (str \"\\0\\n\")) :lines) :map) join gsub  message ","value inspect  message ","(send\n  (send\n    (send\n      (lvar :value) :gsub\n      (regexp\n        (str \"[^\\n]{80}\")\n        (regopt))\n      (str \"\\0\\n\")) :lines) :map) join gsub  class ","value inspect  class ","(send\n  (send\n    (send\n      (lvar :value) :gsub\n      (regexp\n        (str \"[^\\n]{80}\")\n        (regopt))\n      (str \"\\0\\n\")) :lines) :map) join gsub  gsub! ","value inspect  gsub! "]}," GH Error message":{"type":"method","name":"message","children":[],"call":["GH request failed\n + ","(send\n  (send nil :info) :map) join "," entry "," info map "," info "," payload inspect "," payload "," error message "," error "," short "," error class "]}," GH Error error":{"type":"method","name":"error","children":[],"call":[" info [] "," info "]}," GH Error payload":{"type":"method","name":"payload","children":[],"call":[" info [] "," info "]}," GH Error initialize":{"type":"method","name":"initialize","children":[],"call":["@info []= ","response body ","response headers ","response status ","response [] ","error response ","error respond_to? "," set_backtrace ","error backtrace ","info merge ","error error ","error info ","Hash  === ","info merge  []= ","@info merge  []= ","error response  body ","error response  headers ","error response  status ","error response  [] ","error error response  ","error error  response ","error error  respond_to? ","error error  backtrace ","info merge  merge ","error error  error error  ","error error  info ","error info merge  "]}," GH CustomLimit fetch_resource":{"type":"method","name":"fetch_resource","children":[],"call":["url request_uri ","url query_values= ","params []= "," client_secret "," client_id ","params include? ","url query_values "," full_url "," full_url  request_uri "," full_url  query_values= "," full_url  query_values "," full_ full_url  "]}," GH CustomLimit setup":{"type":"method","name":"setup","children":[],"call":["options [] "]}," GH Cache fetch_resource":{"type":"method","name":"fetch_resource","children":[],"call":[" cache fetch "," prefixed "," cache "]}," GH Error":{"type":"method","name":"Error","children":[],"call":[]}," GH TokenCheck http":{"type":"method","name":"http","children":[],"call":[" check_token "]}," GH Remote path_for":{"type":"method","name":"path_for","children":[],"call":[" frontend full_url request_uri "," frontend full_url "," frontend "]}," GH Remote full_url":{"type":"method","name":"full_url","children":[],"call":[" raise ","uri host != "," api_host host "," api_host ","uri host "," api_host + ","Addressable URI  parse ","key sub ","uri path= ","File  join ","uri path "," api_host path ","uri path start_with? ","uri absolute? "," api_host +  host != ","Addressable URI  parse  host != "," api_host +  host ","Addressable URI  parse  host "," api_host +  path= ","Addressable URI  parse  path= "," api_host +  path ","Addressable URI  parse  path "," api_host +  path start_with? ","Addressable URI  parse  path start_with? "," api_host +  absolute? ","Addressable URI  parse  absolute? "]}," GH CustomLimit full_url":{"type":"method","name":"full_url","children":[],"call":["url query_values= ","params []= "," client_secret "," client_id ","params include? ","url query_values "]}," GH method_missing":{"type":"method","name":"method_missing","children":[],"call":[]}," GH ResponseXHeaderFormatter response":{"type":"method","name":"response","children":[],"call":["(send\n  (send\n    (lvar :env) :response_headers) :select) sort to_h ","(send\n  (send\n    (lvar :env) :response_headers) :select) sort ","k =~ ","env response_headers select ","env response_headers "," info "]}," GH ResponseXHeaderFormatter request":{"type":"method","name":"request","children":[],"call":[]}," GH Error short":{"type":"method","name":"short","children":[],"call":["string [] + ","string [] ","string length < ","string length "]}," GH Error new":{"type":"method","name":"new","children":[],"call":[]}}