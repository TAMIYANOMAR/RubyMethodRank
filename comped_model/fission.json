{" Fission ui":{"type":"method","name":"ui","children":[],"call":["Fission UI  new "]}," Fission config":{"type":"method","name":"config","children":[],"call":["Fission Config  new ","Config  new "]}," Fission VM update_config":{"type":"method","name":"update_config","children":[],"call":[]}," Fission VM files_to_rename":{"type":"method","name":"files_to_rename","children":[],"call":[]}," Fission VM rename_vm_files":{"type":"method","name":"rename_vm_files","children":[],"call":[]}," Fission VM clone":{"type":"method","name":"clone","children":[],"call":[]}," Fission VM path":{"type":"method","name":"path","children":[],"call":["File  join ","Fission  config [] ","Fission  config "]}," Fission VM exists?":{"type":"method","name":"exists?","children":[],"call":[" conf_file successful? "," conf_file "]}," Fission VM conf_file":{"type":"method","name":"conf_file","children":[],"call":["File  join "," class path "," class ","Fission  ui output_and_exit ","Fission  ui ","output << ","File  dirname ","(send\n  (send\n    (lvar :conf_files) :sort) :map) join ","File  basename ","conf_files sort map ","conf_files sort ","conf_files include? ","conf_files first ","conf_files count ","Dir  glob ","response data gsub! ","response data ","response successful? ","response message= ","response code= ","response data= ","Response  new "," path ","(send\n  (send\n    (lvar :Dir  glob ) :sort) :map) join ","Dir  glob  sort map ","Dir  glob  sort ","Dir  glob  include? ","Dir  glob  first ","Dir  glob  count ","Response  new  data gsub! ","Response  new  data ","Response  new  successful? ","Response  new  message= ","Response  new  code= ","Response  new  data= "]}," Fission VM start":{"type":"method","name":"start","children":[],"call":["Fission  ui output ","Fission  ui ","$? exitstatus == ","$? exitstatus "," conf_file gsub "," conf_file ","Fission  config attributes [] gsub ","Fission  config attributes [] ","Fission  config attributes ","Fission  config ","command << ","args [] ","args [] blank? ! ","args [] blank? ","Response  from_command ","options [] blank? ","options [] ","conf_file_response data "," vmrun_cmd ","Response  new ","message << ","Fusion  running? ","conf_file_response successful? ","running_response data ","running_response successful? "," running? "," exists? ","Fission Action VM Starter  new start ","Fission Action VM Starter  new "," conf_file  data "," conf_file  successful? "," running?  data "," running?  successful? "]}," Fission VM initialize":{"type":"method","name":"initialize","children":[],"call":[]}," Fission UI output_and_exit":{"type":"method","name":"output_and_exit","children":[],"call":[" exit "," output "]}," Fission UI output":{"type":"method","name":"output","children":[],"call":["@stdout puts "]}," Fission UI initialize":{"type":"method","name":"initialize","children":[],"call":[]}," Numeric blank?":{"type":"method","name":"blank?","children":[],"call":[]}," String blank?":{"type":"method","name":"blank?","children":[],"call":[" !~ "]}," TrueClass blank?":{"type":"method","name":"blank?","children":[],"call":[]}," FalseClass blank?":{"type":"method","name":"blank?","children":[],"call":[]}," NilClass blank?":{"type":"method","name":"blank?","children":[],"call":[]}," Object presence":{"type":"method","name":"presence","children":[],"call":[" present? "]}," Object present?":{"type":"method","name":"present?","children":[],"call":[" blank? ! "," blank? "]}," Object blank?":{"type":"method","name":"blank?","children":[],"call":[" ! "," empty? "," respond_to? "]}," Class descendants":{"type":"method","name":"descendants","children":[],"call":["klass < ","ObjectSpace  each_object select ","ObjectSpace  each_object "]}," Fission Config load_from_file":{"type":"method","name":"load_from_file","children":[],"call":["@attributes merge! ","YAML  load_file ","File  file? "]}," Fission Config initialize":{"type":"method","name":"initialize","children":[],"call":["@attributes []= ","File  expand_path ","@attributes [] blank? ","@attributes [] "," load_from_file ","@attributes [] gsub "]}," Fission Command help":{"type":"method","name":"help","children":[],"call":[]}," Fission Command initialize":{"type":"method","name":"initialize","children":[],"call":["OpenStruct  new "," ui "]}," Fission Command Clone option_parser":{"type":"method","name":"option_parser","children":[],"call":["@options start= ","opts on ","opts banner= ","OptionParser  new ","opts separator "]}," Fission Command Clone execute":{"type":"method","name":"execute","children":[],"call":["@vm start ","Fission VM  new ","Fission  ui output ","Fission  ui ","@options start ","Fission VM  clone ","clone_options parse! "," option_parser ","Fission  ui output_and_exit ","Fission VM  exists? ","Fission VM  path ","@args [] ","@args first "," class help "," class "," args count > "," args count "," args ","@args count > ","@args count "," option_parser parse! "," output_and_exit ","clone_response code ","clone_response message ","start_response code ","start_response message "," output ","target_vm name ","start_response successful? ","target_vm start ","clone_response successful? ","VM  clone ","source_vm name "," incorrect_arguments ","Fission VM  new  start "," option_parser  parse! ","VM  clone  code ","VM  clone  message ","target_vm start  code ","target_vm start  message ","@args []  name ","Fission VM  new  name ","target_vm start  successful? ","@args []  start ","VM  clone  successful? ","@args first  name "]}," Fission Command Clone initialize":{"type":"method","name":"initialize","children":[],"call":["@options start= "]}," Fission CLI show_all_help":{"type":"method","name":"show_all_help","children":[],"call":[]}," Fission CLI commands_banner":{"type":"method","name":"commands_banner","children":[],"call":[]}," Fission CLI execute":{"type":"method","name":"execute","children":[],"call":["@cmd execute "]}," Fission VM all_running":{"type":"method","name":"all_running","children":[],"call":[]}," Fission VM all":{"type":"method","name":"all","children":[],"call":[]}," Fission VM suspend":{"type":"method","name":"suspend","children":[],"call":["Fission  ui output ","Fission  ui ","$? exitstatus == ","$? exitstatus "," conf_file gsub "," conf_file ","Fission  config attributes [] ","Fission  config attributes ","Fission  config ","Response  from_command ","command << ","conf_file_response data "," vmrun_cmd ","conf_file_response successful? ","Response  new ","running_response data ","running_response successful? "," running? "," exists? ","Fission Action VM Suspender  new suspend ","Fission Action VM Suspender  new "," conf_file  data "," conf_file  successful? "," running?  data "," running?  successful? "]}," Fission VM stop":{"type":"method","name":"stop","children":[],"call":["Fission  ui output ","Fission  ui ","$? exitstatus == ","$? exitstatus "," conf_file gsub "," conf_file ","Fission  config attributes [] ","Fission  config attributes ","Fission  config ","Response  from_command ","command << ","options [] blank? ","options [] ","conf_file_response data "," vmrun_cmd ","conf_file_response successful? ","Response  new ","running_response data ","running_response successful? "," running? "," exists? ","Fission Action VM Stopper  new stop ","Fission Action VM Stopper  new "," conf_file  data "," conf_file  successful? "," running?  data "," running?  successful? "]}," Fission UI output_printf":{"type":"method","name":"output_printf","children":[],"call":["@stdout send "]}," File binary?":{"type":"method","name":"binary?","children":[],"call":[]}," Fission Command Suspend option_parser":{"type":"method","name":"option_parser","children":[],"call":["opts banner= ","OptionParser  new ","@options all= ","opts on ","opts separator "]}," Fission Command Suspend execute":{"type":"method","name":"execute","children":[],"call":["@vm suspend ","Fission VM  new ","Fission  ui output ","Fission  ui ","Fission  ui output_and_exit ","VM  all_running include? ","VM  all_running ","Fission VM  path ","Fission VM  exists? "," args first "," args "," class help "," class "," args count == "," args count ","Fission VM  new suspend "," vms_to_suspend each "," vms_to_suspend ","@options all ! ","@options all ","@args count != ","@args count "," option_parser parse! "," option_parser "," output_and_exit ","response code ","response message "," output ","vm name ","response successful? ","vm suspend "," incorrect_arguments ","Fission VM  new  suspend ","vm suspend  code ","vm suspend  message ","vm suspend  successful? "]}," Fission Command Suspend initialize":{"type":"method","name":"initialize","children":[],"call":["@options all= "]}," Fission Command Stop option_parser":{"type":"method","name":"option_parser","children":[],"call":["opts banner= ","OptionParser  new ","opts separator "]}," Fission Command Stop execute":{"type":"method","name":"execute","children":[],"call":["@vm stop ","Fission VM  new ","Fission  ui output ","Fission  ui ","Fission  ui output_and_exit ","VM  all_running include? ","VM  all_running ","Fission VM  path ","Fission VM  exists? "," args first "," args "," class help "," class "," args count == "," args count ","@args first ","@args count == ","@args count "," output_and_exit ","response code ","response message "," output ","vm name ","response successful? ","vm stop ","VM  new "," incorrect_arguments ","Fission VM  new  stop ","@VM  new  stop ","vm stop  code ","vm stop  message ","VM  new  name ","vm stop  successful? ","VM  new  stop "]}," Fission Command Stop initialize":{"type":"method","name":"initialize","children":[],"call":[]}," Fission Command Status option_parser":{"type":"method","name":"option_parser","children":[],"call":["opts banner= ","OptionParser  new ","opts separator "]}," Fission Command Status execute":{"type":"method","name":"execute","children":[],"call":["Fission  ui output_printf ","longest_vm_name length ","Fission  ui ","all_running_vms include? ","VM  all each ","VM  all ","a length <=> ","b length ","a length ","all_vms max ","VM  all_running "," output_printf ","vms_status each_pair ","vms_status keys max ","vms_status keys ","response data "," output_and_exit ","response code ","response message ","response successful? ","VM  all_with_status ","vm name ","vm suspend_file_exists? ","all_running_vm_names include? ","all_vms each ","vm_names max ","v name ","all_vms collect ","response data collect ","VM  all_running  include? ","VM  all  max ","response data  max ","response data  each_pair ","response data  keys max ","response data  keys ","VM  all_with_status  data ","VM  all_running  data ","VM  all  data ","VM  all_with_status  code ","VM  all_running  code ","VM  all  code ","VM  all_with_status  message ","VM  all_running  message ","VM  all  message ","VM  all_with_status  successful? ","VM  all_running  successful? ","VM  all  successful? ","VM  all  each ","response data  each ","VM  all  collect ","response data  collect ","VM  all_with_status  data collect ","VM  all_running  data collect ","VM  all  data collect "]}," Fission Command Status initialize":{"type":"method","name":"initialize","children":[],"call":[]}," Fission Command Start option_parser":{"type":"method","name":"option_parser","children":[],"call":["opts banner= ","OptionParser  new ","@options headless= ","opts on ","opts separator "]}," Fission Command Start execute":{"type":"method","name":"execute","children":[],"call":["@vm start ","Fission VM  new ","Fission  ui output ","Fission  ui ","Fission  ui output_and_exit ","VM  all_running include? ","VM  all_running ","Fission VM  path ","Fission VM  exists? "," args first "," args "," class help "," class "," args count == "," args count ","Fission Fusion  is_running? ","@options headless ","@args first ","@args empty? "," option_parser parse! "," option_parser "," output_and_exit ","response code ","response message "," output ","vm name ","response successful? ","vm start ","start_args []= ","VM  new "," incorrect_arguments ","Fission VM  new  start ","@VM  new  start ","vm start  code ","vm start  message ","VM  new  name ","vm start  successful? ","VM  new  start "]}," Fission Command Start initialize":{"type":"method","name":"initialize","children":[],"call":["@options headless= "]}," Fission CLI commands":{"type":"method","name":"commands","children":[],"call":[]}," Fission VM vm_file_extensions":{"type":"method","name":"vm_file_extensions","children":[],"call":[]}," Fission VM delete":{"type":"method","name":"delete","children":[],"call":["Response  new ","Metadata  delete_vm_info "," path ","FileUtils  rm_rf ","running_response data ","running_response successful? "," running? "," exists? ","Fission Action VM Deleter  new delete ","Fission Action VM Deleter  new "," running?  data "," running?  successful? "]}," Fission VM snapshots":{"type":"method","name":"snapshots","children":[],"call":["Fission  ui output_and_exit ","Fission  ui ","Fission  ui output ","s strip ","snaps map ","s include? ! ","s include? ","output split select ","output split ","$? exitstatus == ","$? exitstatus "," conf_file gsub "," conf_file ","Fission  config attributes [] ","Fission  config attributes ","Fission  config ","response message= ","response data= ","response successful? ","Response  new ","command << ","conf_file_response data "," vmrun_cmd ","conf_file_response successful? "," exists? ","Fission Action Snapshot Lister  new snapshots ","Fission Action Snapshot Lister  new ","Response  new  message= ","Response  new  data= ","Response  new  successful? ","conf_file_Response  new  data "," conf_file  data ","conf_file_Response  new  successful? "," conf_file  successful? "]}," Fission VM revert_to_snapshot":{"type":"method","name":"revert_to_snapshot","children":[],"call":["Fission  ui output_and_exit ","Fission  ui ","Fission  ui output ","$? exitstatus == ","$? exitstatus "," conf_file gsub "," conf_file ","Fission  config attributes [] ","Fission  config attributes ","Fission  config ","Response  from_command ","command << ","conf_file_response data "," vmrun_cmd ","Response  new ","snapshots_response data include? ","snapshots_response data ","snapshots_response successful? "," snapshots ","conf_file_response successful? ","message << ","Fusion  running? "," exists? ","Fission Action Snapshot Reverter  new revert_to_snapshot ","Fission Action Snapshot Reverter  new "," conf_file  data "," snapshots  data include? "," snapshots  data "," snapshots  successful? "," conf_file  successful? "]}," Fission VM create_snapshot":{"type":"method","name":"create_snapshot","children":[],"call":["Fission  ui output_and_exit ","Fission  ui ","Fission  ui output ","$? exitstatus == ","$? exitstatus "," conf_file gsub "," conf_file ","Fission  config attributes [] ","Fission  config attributes ","Fission  config ","Response  from_command ","command << ","conf_file_response data "," vmrun_cmd ","Response  new ","snapshots_response data include? ","snapshots_response data ","snapshots_response successful? "," snapshots ","conf_file_response successful? ","running_response data ","running_response successful? "," running? "," exists? ","Fission Action Snapshot Creator  new create_snapshot ","Fission Action Snapshot Creator  new "," conf_file  data "," snapshots  data include? "," snapshots  data "," snapshots  successful? "," conf_file  successful? "," running?  data "," running?  successful? "]}," Fission Metadata delete_vm_favorite_entry":{"type":"method","name":"delete_vm_favorite_entry","children":[],"call":["vm [] == ","vm [] ","@content [] delete_if ","@content [] ","@content has_key? "]}," Fission Metadata delete_vm_restart_document":{"type":"method","name":"delete_vm_restart_document","children":[],"call":["p == ","@content [] delete_if ","@content [] ","@content has_key? "]}," Fission Metadata save":{"type":"method","name":"save","children":[],"call":["new_content save ","Fission  config attributes [] ","Fission  config attributes ","Fission  config ","new_content value= ","CFPropertyList  guess ","CFPropertyList List  new ","Fission  config [] ","CFPropertyList List  new  save ","CFPropertyList List  new  value= "]}," Fission Metadata load":{"type":"method","name":"load","children":[],"call":["CFPropertyList  native_types ","raw_data value ","CFPropertyList List  new ","Fission  config attributes [] ","Fission  config attributes ","Fission  config ","Fission  config [] ","CFPropertyList List  new  value "]}," Fission Metadata delete_vm_info":{"type":"method","name":"delete_vm_info","children":[],"call":[]}," Fission Fusion is_running?":{"type":"method","name":"is_running?","children":[],"call":[]}," Fission Command Suspend vms_to_suspend":{"type":"method","name":"vms_to_suspend","children":[],"call":["Fission  ui output_and_exit ","Fission  ui ","Fission  ui output ","VM  all_running include? ","VM  all_running ","Fission VM  path ","Fission VM  exists? ","@args first ","@options all ","VM  new "," output_and_exit ","response code ","response message ","response data ","response successful? ","VM  all_running  code ","VM  all_running  message ","VM  all_running  data ","VM  all_running  successful? "]}," Fission Command SnapshotRevert option_parser":{"type":"method","name":"option_parser","children":[],"call":["opts banner= ","OptionParser  new ","opts separator "]}," Fission Command SnapshotRevert execute":{"type":"method","name":"execute","children":[],"call":["@vm revert_to_snapshot ","Fission  ui output ","Fission  ui ","Fission  ui output_and_exit ","@vm snapshots include? ","@vm snapshots ","Fission VM  new ","Fission Fusion  is_running? ","Fission VM  path ","Fission VM  exists? ","@args take "," class help "," class ","@args count == ","@args count "," output_and_exit ","response code ","response message "," output ","response successful? ","vm revert_to_snapshot ","@args [] ","VM  new "," incorrect_arguments ","Fission VM  new  revert_to_snapshot ","@VM  new  revert_to_snapshot ","Fission VM  new  snapshots include? ","@VM  new  snapshots include? ","Fission VM  new  snapshots ","@VM  new  snapshots ","vm revert_to_snapshot  code ","vm revert_to_snapshot  message ","vm revert_to_snapshot  successful? ","VM  new  revert_to_snapshot "]}," Fission Command SnapshotRevert initialize":{"type":"method","name":"initialize","children":[],"call":[]}," Fission Command SnapshotList option_parser":{"type":"method","name":"option_parser","children":[],"call":["opts banner= ","OptionParser  new ","opts separator "]}," Fission Command SnapshotList execute":{"type":"method","name":"execute","children":[],"call":["Fission  ui output ","Fission  ui ","snaps join ","snaps any? ","@vm snapshots ","Fission VM  new ","Fission  ui output_and_exit ","Fission VM  path ","Fission VM  exists? ","@args first "," class help "," class ","@args count == ","@args count "," output_and_exit ","response code ","response message "," output ","vm name ","response data ","response successful? ","vm snapshots ","VM  new "," incorrect_arguments ","@vm snapshots  join ","response data  join ","@vm snapshots  any? ","response data  any? ","@vm @vm snapshots hots ","@vm response data hots ","Fission VM  new  snapshots ","@VM  new  snapshots ","vm snapshots  code ","vm snapshots  message ","VM  new  name ","vm snapshots  data ","vm snapshots  successful? ","vm @vm snapshots hots ","vm response data hots ","VM  new  snapshots "]}," Fission Command SnapshotList initialize":{"type":"method","name":"initialize","children":[],"call":[]}," Fission Command SnapshotCreate option_parser":{"type":"method","name":"option_parser","children":[],"call":["opts banner= ","OptionParser  new ","opts separator "]}," Fission Command SnapshotCreate execute":{"type":"method","name":"execute","children":[],"call":["@vm create_snapshot ","Fission  ui output ","Fission  ui ","Fission  ui output_and_exit ","@vm snapshots include? ","@vm snapshots ","Fission VM  new ","Fission VM  all_running include? ","Fission VM  all_running ","Fission VM  path ","Fission VM  exists? ","@args take "," class help "," class ","@args count == ","@args count "," output_and_exit ","response code ","response message "," output ","response successful? ","vm create_snapshot ","@args [] ","VM  new "," incorrect_arguments ","Fission VM  new  create_snapshot ","@VM  new  create_snapshot ","Fission VM  new  snapshots include? ","@VM  new  snapshots include? ","Fission VM  new  snapshots ","@VM  new  snapshots ","vm create_snapshot  code ","vm create_snapshot  message ","vm create_snapshot  successful? ","VM  new  create_snapshot "]}," Fission Command SnapshotCreate initialize":{"type":"method","name":"initialize","children":[],"call":[]}," Fission Command Delete option_parser":{"type":"method","name":"option_parser","children":[],"call":["@options force= ","opts on ","opts banner= ","OptionParser  new ","opts separator "]}," Fission Command Delete execute":{"type":"method","name":"execute","children":[],"call":["Fission  ui output ","Fission  ui ","Fission VM  delete ","Fission  ui output_and_exit ","@options force ","Fission Fusion  is_running? ","Fission Command Stop  new execute ","Fission Command Stop  new ","Fission VM  all_running include? ","Fission VM  all_running ","Fission VM  path ","Fission VM  exists? ","@args first "," class help "," class ","@args count < ","@args count "," option_parser parse! "," option_parser "," output_and_exit ","delete_response code ","delete_response message "," output ","delete_response successful? ","vm delete ","Fusion  running? ","running_response code ","running_response message ","Command Stop  new execute ","Command Stop  new ","vm name ","running_response data ","running_response successful? ","vm running? ","VM  new "," incorrect_arguments ","vm delete  code ","vm delete  message ","vm delete  successful? ","VM  new  delete ","vm running?  code ","vm running?  message ","VM  new  name ","vm running?  data ","vm running?  successful? ","VM  new  running? "]}," Fission Command Delete initialize":{"type":"method","name":"initialize","children":[],"call":["@options force= "]}," Fission CLI is_snapshot_command?":{"type":"method","name":"is_snapshot_command?","children":[],"call":[]}," Fission VM vmrun_cmd":{"type":"method","name":"vmrun_cmd","children":[],"call":["Fission  config [] ","Fission  config "]}," Fission VM clean_up_conf_file":{"type":"method","name":"clean_up_conf_file","children":[],"call":[]}," Fission VM all_with_status":{"type":"method","name":"all_with_status","children":[],"call":[]}," Fission VM running?":{"type":"method","name":"running?","children":[],"call":["response data= ","(send\n  (send\n    (lvar :all_running_response) :data) :collect) include? ","v name ","all_running_response data collect ","all_running_response data ","Response  new ","all_running_response successful? "," class all_running "," class ","Response  new  data= ","(send\n  (send\n    (lvar :all_running_Response  new ) :data) :collect) include? ","(send\n  (send\n    (lvar : class all_running ) :data) :collect) include? ","all_running_Response  new  data collect "," class all_running  data collect ","all_running_Response  new  data "," class all_running  data ","all_running_Response  new  successful? "," class all_running  successful? "]}," Fission VM suspend_file_exists?":{"type":"method","name":"suspend_file_exists?","children":[],"call":["File  file? ","File  join "," path "]}," Fission VM suspended?":{"type":"method","name":"suspended?","children":[],"call":["response data= "," suspend_file_exists? ","running_response data ","Response  new ","running_response successful? "," running? ","Response  new  data= ","running_Response  new  data "," running?  data ","running_Response  new  successful? "," running?  successful? "]}," Fission VM state":{"type":"method","name":"state","children":[],"call":["response data= ","suspended_response data ","suspended_response successful? "," suspended? ","running_response data ","Response  new ","running_response successful? "," running? ","Response  new  data= "," suspended?  data ","suspended_Response  new  data "," suspended?  successful? ","suspended_Response  new  successful? ","running_Response  new  data "," running?  data ","running_Response  new  successful? "," running?  successful? "]}," Fission VM network_info":{"type":"method","name":"network_info","children":[],"call":["response data [] []= ","lease_response data ip_address ","lease_response data ","response data [] ","response data ","lease_response successful? ","Fission Lease  find_by_mac_address ","response data []= ","line scan [] first ","line scan [] ","line scan ","f grep each ","f grep ","File  open ","conf_file_response data ","Response  new ","conf_file_response successful? "," conf_file ","k scan first ","k scan ","v =~ ","config_response data each_pair ","config_response data ","config_response successful? "," conf_file_data ","Response  new  data [] []= ","Fission Lease  find_by_mac_address  data ip_address ","lease_Response  new  data ip_address ","Fission Lease  find_by_mac_address  data ","lease_Response  new  data ","Response  new  data [] ","Response  new  data ","Fission Lease  find_by_mac_address  successful? ","lease_Response  new  successful? ","Fission Lease  find_by_line scan [] first _address ","Response  new  data []= ","conf_file_Response  new  data "," conf_file  data ","conf_file_Response  new  successful? "," conf_file  successful? ","config_Response  new  data each_pair "," conf_file_data  data each_pair ","config_Response  new  data "," conf_file_data  data ","config_Response  new  successful? "," conf_file_data  successful? "]}," Fission VM mac_addresses":{"type":"method","name":"mac_addresses","children":[],"call":["response data= ","n [] ","network_response data values collect ","network_response data values ","network_response data ","Response  new ","network_response successful? "," network_info ","Response  new  data= ","network_Response  new  data values collect "," network_info  data values collect ","network_Response  new  data values "," network_info  data values ","network_Response  new  data "," network_info  data ","network_Response  new  successful? "," network_info  successful? "]}," Fission Response from_command":{"type":"method","name":"from_command","children":[],"call":[]}," Fission Response successful?":{"type":"method","name":"successful?","children":[],"call":["@code == "]}," Fission Response initialize":{"type":"method","name":"initialize","children":[],"call":["args fetch "]}," Fission Lease parse":{"type":"method","name":"parse","children":[],"call":[]}," Fission Lease find_by_mac_address":{"type":"method","name":"find_by_mac_address","children":[],"call":[]}," Fission Lease all":{"type":"method","name":"all","children":[],"call":[]}," Fission Lease expired?":{"type":"method","name":"expired?","children":[],"call":["@end < ","DateTime  now "]}," Fission Lease initialize":{"type":"method","name":"initialize","children":[],"call":["args [] "]}," Fission Fusion running?":{"type":"method","name":"running?","children":[],"call":[]}," Fission Config []":{"type":"method","name":"[]","children":[],"call":["@attributes [] "]}," Fission CommandHelpers incorrect_arguments":{"type":"method","name":"incorrect_arguments","children":[],"call":[" output_and_exit "," output "," class help "," class "," command_name "]}," Fission Command ui":{"type":"method","name":"ui","children":[],"call":["UI  new "]}," Fission CLI ui":{"type":"method","name":"ui","children":[],"call":[]}," Fission VMConfiguration parse_line_data":{"type":"method","name":"parse_line_data","children":[],"call":["line strip gsub split ","line strip gsub ","line strip "]}," Fission VMConfiguration parse_vm_config_file":{"type":"method","name":"parse_vm_config_file","children":[],"call":["result []= ","data [] ","data [] nil? "," parse_line_data ","File  readlines inject ","File  readlines "," parse_line_data  [] "," parse_line_data  [] nil? "," parse_line_ parse_line_data  "]}," Fission VMConfiguration config_data":{"type":"method","name":"config_data","children":[],"call":["Response  new "," parse_vm_config_file ","conf_file_response data ","conf_file_response successful? ","@vm conf_file ","@vm exists? ","@vm conf_file  data ","@vm conf_file  successful? "]}," Fission VMConfiguration initialize":{"type":"method","name":"initialize","children":[],"call":[]}," Fission VM conf_file_data":{"type":"method","name":"conf_file_data","children":[],"call":["VMConfiguration  new config_data ","VMConfiguration  new "]}," Fission VM uuids":{"type":"method","name":"uuids","children":[],"call":["response data []= ","config_response data [] ","config_response data ","response data ","config_response data [] blank? ","(pair\n  (str \"bios\")\n  (str \"uuid.bios\")) each_pair ","Response  new ","config_response successful? "," conf_file_data ","Response  new  data []= ","config_Response  new  data [] "," conf_file_data  data [] ","config_Response  new  data "," conf_file_data  data ","Response  new  data ","config_Response  new  data [] blank? "," conf_file_data  data [] blank? ","config_Response  new  successful? "," conf_file_data  successful? "]}," Fission VM guestos":{"type":"method","name":"guestos","children":[],"call":["response data= ","config_response data fetch ","config_response data ","Response  new ","config_response successful? "," conf_file_data ","Response  new  data= ","config_Response  new  data fetch "," conf_file_data  data fetch ","config_Response  new  data "," conf_file_data  data ","config_Response  new  successful? "," conf_file_data  successful? "]}," Fission VM hardware_info":{"type":"method","name":"hardware_info","children":[],"call":["response data []= ","config_response data [] to_i ","config_response data [] ","config_response data ","response data ","config_response data [] blank? ","(pair\n  (str \"cpus\")\n  (str \"numvcpus\")) each_pair ","Response  new ","config_response successful? "," conf_file_data ","Response  new  data []= ","config_Response  new  data [] to_i "," conf_file_data  data [] to_i ","config_Response  new  data [] "," conf_file_data  data [] ","config_Response  new  data "," conf_file_data  data ","Response  new  data ","config_Response  new  data [] blank? "," conf_file_data  data [] blank? ","config_Response  new  successful? "," conf_file_data  successful? "]}," Fission VM delete_snapshot":{"type":"method","name":"delete_snapshot","children":[],"call":["Fission Action Snapshot Deleter  new delete_snapshot ","Fission Action Snapshot Deleter  new "]}," Fission Response from_shell_executor":{"type":"method","name":"from_shell_executor","children":[],"call":[]}," Fission CommandLineParser ui":{"type":"method","name":"ui","children":[],"call":["UI  new "]}," Fission CommandLineParser show_all_help":{"type":"method","name":"show_all_help","children":[],"call":[" commands_help "," ui output "," ui "]}," Fission CommandLineParser is_snapshot_command?":{"type":"method","name":"is_snapshot_command?","children":[],"call":["@commands include? ","@args take join ","@args take ","@args count > ","@args count ","@args first == ","@args first "]}," Fission CommandLineParser determine_command_provided":{"type":"method","name":"determine_command_provided","children":[],"call":[" exit "," show_all_help ","Command  const_get new ","@args drop ","Command  const_get ","(send\n  (send\n    (ivar :@args) :take\n    (int 2)) :map) join ","c capitalize ","@args take map ","@args take "," is_snapshot_command? ","@args first capitalize ","@args first ","@commands include? ","Command  const_get new s include? "]}," Fission CommandLineParser gather_commands_and_summaries":{"type":"method","name":"gather_commands_and_summaries","children":[],"call":["@command_names_and_summaries keys sort ","@command_names_and_summaries keys ","result []= ","cmd summary ","cmd command_name ","klass new ","Command  descendants inject ","Command  descendants ","klass new  summary ","klass new  command_name "]}," Fission CommandLineParser commands_help":{"type":"method","name":"commands_help","children":[],"call":[" ui output_printf ","longest_cmd length "," ui ","Hash  [] each_pair ","Hash  [] ","@command_names_and_summaries sort "," ui output ","longest length > ","cmd_name length ","longest length ","@commands inject "]}," Fission CommandLineParser setup_options_parser":{"type":"method","name":"setup_options_parser","children":[],"call":[" exit "," show_all_help ","opts on_head "," ui output "," ui ","opts banner= ","OptionParser  new "]}," Fission CommandLineParser command":{"type":"method","name":"command","children":[],"call":[]}," Fission CommandLineParser parse":{"type":"method","name":"parse","children":[],"call":[" exit "," show_all_help "," ui output "," ui "," determine_command_provided ","@options_parser order! "]}," Fission CommandLineParser initialize":{"type":"method","name":"initialize","children":[],"call":[" setup_options_parser "," gather_commands_and_summaries "]}," Fission CommandHelpers parse_arguments":{"type":"method","name":"parse_arguments","children":[],"call":[" output_and_exit "," class help "," class "," output "," option_parser parse! "," option_parser "]}," Fission Command summary":{"type":"method","name":"summary","children":[],"call":[" raise "]}," Fission Command command_name":{"type":"method","name":"command_name","children":[],"call":["klass class name split [] gsub gsub downcase ","klass class name split [] gsub gsub ","klass class name split [] gsub ","klass class name split [] ","klass class name split ","klass class name ","klass class "]}," Fission Command execute":{"type":"method","name":"execute","children":[],"call":[" parse_arguments "]}," Fission Command Suspend summary":{"type":"method","name":"summary","children":[],"call":[]}," Fission Command Stop summary":{"type":"method","name":"summary","children":[],"call":[]}," Fission Command Status summary":{"type":"method","name":"summary","children":[],"call":[]}," Fission Command Start summary":{"type":"method","name":"summary","children":[],"call":[]}," Fission Command SnapshotRevert summary":{"type":"method","name":"summary","children":[],"call":[]}," Fission Command SnapshotList summary":{"type":"method","name":"summary","children":[],"call":[]}," Fission Command SnapshotDelete summary":{"type":"method","name":"summary","children":[],"call":[]}," Fission Command SnapshotDelete option_parser":{"type":"method","name":"option_parser","children":[],"call":["opts separator ","opts banner= ","OptionParser  new "]}," Fission Command SnapshotDelete execute":{"type":"method","name":"execute","children":[],"call":[" output_and_exit ","response code ","response message "," output ","response successful? ","vm delete_snapshot ","@args [] ","VM  new "," incorrect_arguments ","@args count == ","@args count ","vm delete_snapshot  code ","vm delete_snapshot  message ","vm delete_snapshot  successful? ","VM  new  delete_snapshot "]}," Fission Command SnapshotCreate summary":{"type":"method","name":"summary","children":[],"call":[]}," Fission Command Info summary":{"type":"method","name":"summary","children":[],"call":[]}," Fission Command Info option_parser":{"type":"method","name":"option_parser","children":[],"call":["opts separator ","opts banner= ","OptionParser  new "]}," Fission Command Info execute":{"type":"method","name":"execute","children":[],"call":[" output_and_exit ","network_response code ","network_response message "," output ","k gsub ","data each_pair ","network_response data each_pair ","network_response data ","network_response successful? ","vm network_info ","hardware_response code ","hardware_response message ","hardware_response data each_pair ","hardware_response data ","hardware_response successful? ","vm hardware_info ","guest_os_response code ","guest_os_response message ","guest_os_response data ","guest_os_response data empty? ","guest_os_response successful? ","vm guestos ","vm name ","VM  new ","@args first "," incorrect_arguments ","@args count == ","@args count ","vm network_info  code ","vm network_info  message ","vm network_info  data each_pair ","vm network_info  data ","vm network_info  successful? ","VM  new  network_info ","vm hardware_info  code ","vm hardware_info  message ","vm hardware_info  data each_pair ","vm hardware_info  data ","vm hardware_info  successful? ","VM  new  hardware_info ","guest_guest_os_response data _response code ","vm guestos  code ","guest_guest_os_response data _response message ","vm guestos  message ","guest_guest_os_response data _response data ","vm guestos  data ","guest_guest_os_response data _response data empty? ","vm guestos  data empty? ","guest_guest_os_response data _response successful? ","vm guestos  successful? ","vm guestguest_os_response data  ","VM  new  guestos ","VM  new  name "]}," Fission Command Delete summary":{"type":"method","name":"summary","children":[],"call":[]}," Fission Command Clone summary":{"type":"method","name":"summary","children":[],"call":[]}," Fission CLI parse_arguments":{"type":"method","name":"parse_arguments","children":[],"call":["@parser command ","@parser parse "]}," Fission CLI initialize":{"type":"method","name":"initialize","children":[],"call":[" parse_arguments ","parser new "]}," Fission Action VM Suspender vmrun_cmd":{"type":"method","name":"vmrun_cmd","children":[],"call":["Fission  config [] ","Fission  config "]}," Fission Action VM Suspender suspend":{"type":"method","name":"suspend","children":[],"call":["Response  from_shell_executor ","command_exec execute ","Fission Action ShellExecutor  new ","command << ","conf_file_response data "," vmrun_cmd ","conf_file_response successful? ","@vm conf_file ","Response  new ","running_response data ","running_response successful? ","@vm running? ","@vm exists? ","Fission Action ShellExecutor  new  execute ","@vm conf_file  data ","@vm conf_file  successful? ","@vm running?  data ","@vm running?  successful? "]}," Fission Action VM Suspender initialize":{"type":"method","name":"initialize","children":[],"call":[]}," Fission Action VM Stopper vmrun_cmd":{"type":"method","name":"vmrun_cmd","children":[],"call":["Fission  config [] ","Fission  config "]}," Fission Action VM Stopper stop":{"type":"method","name":"stop","children":[],"call":["Response  from_shell_executor ","command_exec execute ","Fission Action ShellExecutor  new ","command << ","options [] blank? ","options [] ","conf_file_response data "," vmrun_cmd ","conf_file_response successful? ","@vm conf_file ","Response  new ","running_response data ","running_response successful? ","@vm running? ","@vm exists? ","Fission Action ShellExecutor  new  execute ","@vm conf_file  data ","@vm conf_file  successful? ","@vm running?  data ","@vm running?  successful? "]}," Fission Action VM Stopper initialize":{"type":"method","name":"initialize","children":[],"call":[]}," Fission Action VM Starter vmrun_cmd":{"type":"method","name":"vmrun_cmd","children":[],"call":["Fission  config [] ","Fission  config "]}," Fission Action VM Starter start":{"type":"method","name":"start","children":[],"call":["Response  from_shell_executor ","command_exec execute ","Fission Action ShellExecutor  new ","command << ","options [] blank? ","options [] ","conf_file_response data "," vmrun_cmd ","Response  new ","message << ","Fusion  running? ","conf_file_response successful? ","@vm conf_file ","running_response data ","running_response successful? ","@vm running? ","@vm exists? ","Fission Action ShellExecutor  new  execute ","@vm conf_file  data ","@vm conf_file  successful? ","@vm running?  data ","@vm running?  successful? "]}," Fission Action VM Starter initialize":{"type":"method","name":"initialize","children":[],"call":[]}," Fission Action VM Lister get_vm_objects_from_list_output":{"type":"method","name":"get_vm_objects_from_list_output","children":[],"call":["Fission VM  new ","File  basename ","File  dirname ","vms collect ","File  extname == ","File  extname ","File  exists? ","vm include? ","output split select ","output split "]}," Fission Action VM Lister determine_status":{"type":"method","name":"determine_status","children":[],"call":["vm suspend_file_exists? ","@all_running_vm_names include? ","vm name "]}," Fission Action VM Lister all_with_status":{"type":"method","name":"all_with_status","children":[],"call":["response data= ","result []= "," determine_status ","vm name ","all_vms inject ","v name ","running_response data collect ","running_response data ","Response  new ","running_response successful? "," all_running ","all_response data ","all_response successful? "," all ","Response  new  data= ","all_response data  inject ","running_Response  new  data collect "," all_running  data collect ","running_Response  new  data "," all_running  data ","running_Response  new  successful? "," all_running  successful? ","all_Response  new  data "," all  data ","all_Response  new  successful? "," all  successful? "]}," Fission Action VM Lister all_running":{"type":"method","name":"all_running","children":[],"call":["response message= ","result [] ","response data= "," get_vm_objects_from_list_output ","response successful? ","Response  new ","result [] exitstatus ","command_executor execute ","Fission Action ShellExecutor  new ","Fission  config [] ","Fission  config ","Response  new  message= ","command_executor execute  [] ","Response  new  data= ","Response  new  successful? ","command_executor execute  [] exitstatus ","Fission Action ShellExecutor  new  execute "]}," Fission Action VM Lister all":{"type":"method","name":"all","children":[],"call":["response data= ","Fission VM  new ","File  basename ","vm_dirs collect ","Response  new ","File  directory? ","Dir  [] select ","Dir  [] ","File  join ","Fission  config [] ","Fission  config ","Response  new  data= "]}," Fission Action VM Deleter vmrun_cmd":{"type":"method","name":"vmrun_cmd","children":[],"call":["Fission  config [] ","Fission  config "]}," Fission Action VM Deleter delete":{"type":"method","name":"delete","children":[],"call":["Response  new ","Metadata  delete_vm_info ","@vm path ","FileUtils  rm_rf ","running_response data ","running_response successful? ","@vm running? ","@vm exists? ","@vm running?  data ","@vm running?  successful? "]}," Fission Action VM Deleter initialize":{"type":"method","name":"initialize","children":[],"call":[]}," Fission Action VM Cloner vmrun_cmd":{"type":"method","name":"vmrun_cmd","children":[],"call":["Fission  config [] ","Fission  config "]}," Fission Action VM Cloner clean_up_conf_file":{"type":"method","name":"clean_up_conf_file","children":[],"call":["f print ","File  open ","content << ","content gsub strip ","content gsub ","content include? ","conf_items_patterns each_pair ","File  read ","File  read  << ","File  read  gsub strip ","File  read  gsub ","File  read  include? "]}," Fission Action VM Cloner update_config":{"type":"method","name":"update_config","children":[],"call":[" clean_up_conf_file ","ext == ","f print ","File  open ","(send\n  (const nil :File) :read\n  (lvar :file)) gsub ","File  read ","File  binary? ","File  join ","@target_vm path ","(str \".vmx\") each "," clean_up_conf_File  join  ","(send\n  (const nil :File) :read\n  (lvar :File  join )) gsub "]}," Fission Action VM Cloner vm_file_extensions":{"type":"method","name":"vm_file_extensions","children":[],"call":[]}," Fission Action VM Cloner files_to_rename":{"type":"method","name":"files_to_rename","children":[],"call":["files_which_match_source_vm + ","other_files << ","files_which_match_source_vm << ","f include? ","f == ","Dir  entries each ","Dir  entries ","@target_vm path "]}," Fission Action VM Cloner rename_vm_files":{"type":"method","name":"rename_vm_files","children":[],"call":["FileUtils  mv ","File  join ","file gsub ","@target_vm path ","File  exists? ","file partition first ","file partition ","file match ","File  extname == ","File  extname ","File  basename "," files_to_rename each "," files_to_rename "]}," Fission Action VM Cloner clone":{"type":"method","name":"clone","children":[],"call":["Response  new "," update_config ","@target_vm name ","@source_vm name "," rename_vm_files ","FileUtils  cp_r ","@target_vm path ","@source_vm path ","@target_vm exists? ","@source_vm exists? "]}," Fission Action VM Cloner initialize":{"type":"method","name":"initialize","children":[],"call":[]}," Fission Action Snapshot Reverter vmrun_cmd":{"type":"method","name":"vmrun_cmd","children":[],"call":["Fission  config [] ","Fission  config "]}," Fission Action Snapshot Reverter revert_to_snapshot":{"type":"method","name":"revert_to_snapshot","children":[],"call":["Response  from_shell_executor ","command_exec execute ","Fission Action ShellExecutor  new ","command << ","conf_file_response data "," vmrun_cmd ","Response  new ","snapshots_response data include? ","snapshots_response data ","snapshots_response successful? ","@vm snapshots ","conf_file_response successful? ","@vm conf_file ","message << ","Fusion  running? ","@vm exists? ","Fission Action ShellExecutor  new  execute ","@vm conf_file  data ","@vm snapshots  data include? ","@vm snapshots  data ","@vm snapshots  successful? ","@vm conf_file  successful? "]}," Fission Action Snapshot Reverter initialize":{"type":"method","name":"initialize","children":[],"call":[]}," Fission Action Snapshot Lister parse_snapshot_names_from_output":{"type":"method","name":"parse_snapshot_names_from_output","children":[],"call":["s strip ","snaps map ","s include? ! ","s include? ","cmd_output split select ","cmd_output split "]}," Fission Action Snapshot Lister vmrun_cmd":{"type":"method","name":"vmrun_cmd","children":[],"call":["Fission  config [] ","Fission  config "]}," Fission Action Snapshot Lister snapshots":{"type":"method","name":"snapshots","children":[],"call":["response message= ","result [] ","response data= "," parse_snapshot_names_from_output ","response successful? ","Response  new ","result [] exitstatus ","command_exec execute ","Fission Action ShellExecutor  new ","command << ","conf_file_response data "," vmrun_cmd ","conf_file_response successful? ","@vm conf_file ","@vm exists? ","Response  new  message= ","command_exec execute  [] ","Response  new  data= ","Response  new  successful? ","command_exec execute  [] exitstatus ","Fission Action ShellExecutor  new  execute ","conf_file_Response  new  data ","@vm conf_file  data ","conf_file_Response  new  successful? ","@vm conf_file  successful? "]}," Fission Action Snapshot Lister initialize":{"type":"method","name":"initialize","children":[],"call":[]}," Fission Action Snapshot Deleter vmrun_cmd":{"type":"method","name":"vmrun_cmd","children":[],"call":["Fission  config [] ","Fission  config "]}," Fission Action Snapshot Deleter delete_snapshot":{"type":"method","name":"delete_snapshot","children":[],"call":["Response  from_shell_executor ","command_exec execute ","Fission Action ShellExecutor  new ","command << ","conf_file_response data "," vmrun_cmd ","Response  new ","snapshots_response data include? ","snapshots_response data ","snapshots_response successful? ","@vm snapshots ","conf_file_response successful? ","@vm conf_file ","message << ","running_response data ","running_response successful? ","@vm running? ","Fusion  running? ","@vm exists? ","Fission Action ShellExecutor  new  execute ","@vm conf_file  data ","@vm snapshots  data include? ","@vm snapshots  data ","@vm snapshots  successful? ","@vm conf_file  successful? ","@vm running?  data ","@vm running?  successful? "]}," Fission Action Snapshot Deleter initialize":{"type":"method","name":"initialize","children":[],"call":[]}," Fission Action Snapshot Creator vmrun_cmd":{"type":"method","name":"vmrun_cmd","children":[],"call":["Fission  config [] ","Fission  config "]}," Fission Action Snapshot Creator create_snapshot":{"type":"method","name":"create_snapshot","children":[],"call":["Response  from_shell_executor ","command_exec execute ","Fission Action ShellExecutor  new ","command << ","conf_file_response data "," vmrun_cmd ","Response  new ","snapshots_response data include? ","snapshots_response data ","snapshots_response successful? ","@vm snapshots ","conf_file_response successful? ","@vm conf_file ","running_response data ","running_response successful? ","@vm running? ","@vm exists? ","Fission Action ShellExecutor  new  execute ","@vm conf_file  data ","@vm snapshots  data include? ","@vm snapshots  data ","@vm snapshots  successful? ","@vm conf_file  successful? ","@vm running?  data ","@vm running?  successful? "]}," Fission Action Snapshot Creator initialize":{"type":"method","name":"initialize","children":[],"call":[]}," Fission Action ShellExecutor execute":{"type":"method","name":"execute","children":[],"call":[]}," Fission Action ShellExecutor initialize":{"type":"method","name":"initialize","children":[],"call":[]}}