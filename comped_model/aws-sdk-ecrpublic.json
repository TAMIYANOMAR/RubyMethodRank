{" ECRPublic Resource client":{"type":"method","name":"client","children":[],"call":[]}," ECRPublic Resource initialize":{"type":"method","name":"initialize","children":[],"call":["Client  new ","options [] "]}," ECRPublic Errors UploadNotFoundException message":{"type":"method","name":"message","children":[],"call":["@data [] "]}," ECRPublic Errors UploadNotFoundException initialize":{"type":"method","name":"initialize","children":[],"call":[]}," ECRPublic Errors UnsupportedCommandException message":{"type":"method","name":"message","children":[],"call":["@data [] "]}," ECRPublic Errors UnsupportedCommandException initialize":{"type":"method","name":"initialize","children":[],"call":[]}," ECRPublic Errors ServerException message":{"type":"method","name":"message","children":[],"call":["@data [] "]}," ECRPublic Errors ServerException initialize":{"type":"method","name":"initialize","children":[],"call":[]}," ECRPublic Errors RepositoryPolicyNotFoundException message":{"type":"method","name":"message","children":[],"call":["@data [] "]}," ECRPublic Errors RepositoryPolicyNotFoundException initialize":{"type":"method","name":"initialize","children":[],"call":[]}," ECRPublic Errors RepositoryNotFoundException message":{"type":"method","name":"message","children":[],"call":["@data [] "]}," ECRPublic Errors RepositoryNotFoundException initialize":{"type":"method","name":"initialize","children":[],"call":[]}," ECRPublic Errors RepositoryNotEmptyException message":{"type":"method","name":"message","children":[],"call":["@data [] "]}," ECRPublic Errors RepositoryNotEmptyException initialize":{"type":"method","name":"initialize","children":[],"call":[]}," ECRPublic Errors RepositoryAlreadyExistsException message":{"type":"method","name":"message","children":[],"call":["@data [] "]}," ECRPublic Errors RepositoryAlreadyExistsException initialize":{"type":"method","name":"initialize","children":[],"call":[]}," ECRPublic Errors RegistryNotFoundException message":{"type":"method","name":"message","children":[],"call":["@data [] "]}," ECRPublic Errors RegistryNotFoundException initialize":{"type":"method","name":"initialize","children":[],"call":[]}," ECRPublic Errors ReferencedImagesNotFoundException message":{"type":"method","name":"message","children":[],"call":["@data [] "]}," ECRPublic Errors ReferencedImagesNotFoundException initialize":{"type":"method","name":"initialize","children":[],"call":[]}," ECRPublic Errors LimitExceededException message":{"type":"method","name":"message","children":[],"call":["@data [] "]}," ECRPublic Errors LimitExceededException initialize":{"type":"method","name":"initialize","children":[],"call":[]}," ECRPublic Errors LayersNotFoundException message":{"type":"method","name":"message","children":[],"call":["@data [] "]}," ECRPublic Errors LayersNotFoundException initialize":{"type":"method","name":"initialize","children":[],"call":[]}," ECRPublic Errors LayerPartTooSmallException message":{"type":"method","name":"message","children":[],"call":["@data [] "]}," ECRPublic Errors LayerPartTooSmallException initialize":{"type":"method","name":"initialize","children":[],"call":[]}," ECRPublic Errors LayerAlreadyExistsException message":{"type":"method","name":"message","children":[],"call":["@data [] "]}," ECRPublic Errors LayerAlreadyExistsException initialize":{"type":"method","name":"initialize","children":[],"call":[]}," ECRPublic Errors InvalidParameterException message":{"type":"method","name":"message","children":[],"call":["@data [] "]}," ECRPublic Errors InvalidParameterException initialize":{"type":"method","name":"initialize","children":[],"call":[]}," ECRPublic Errors InvalidLayerPartException message":{"type":"method","name":"message","children":[],"call":["@data [] "]}," ECRPublic Errors InvalidLayerPartException last_valid_byte_received":{"type":"method","name":"last_valid_byte_received","children":[],"call":["@data [] "]}," ECRPublic Errors InvalidLayerPartException upload_id":{"type":"method","name":"upload_id","children":[],"call":["@data [] "]}," ECRPublic Errors InvalidLayerPartException repository_name":{"type":"method","name":"repository_name","children":[],"call":["@data [] "]}," ECRPublic Errors InvalidLayerPartException registry_id":{"type":"method","name":"registry_id","children":[],"call":["@data [] "]}," ECRPublic Errors InvalidLayerPartException initialize":{"type":"method","name":"initialize","children":[],"call":[]}," ECRPublic Errors InvalidLayerException message":{"type":"method","name":"message","children":[],"call":["@data [] "]}," ECRPublic Errors InvalidLayerException initialize":{"type":"method","name":"initialize","children":[],"call":[]}," ECRPublic Errors ImageTagAlreadyExistsException message":{"type":"method","name":"message","children":[],"call":["@data [] "]}," ECRPublic Errors ImageTagAlreadyExistsException initialize":{"type":"method","name":"initialize","children":[],"call":[]}," ECRPublic Errors ImageNotFoundException message":{"type":"method","name":"message","children":[],"call":["@data [] "]}," ECRPublic Errors ImageNotFoundException initialize":{"type":"method","name":"initialize","children":[],"call":[]}," ECRPublic Errors ImageDigestDoesNotMatchException message":{"type":"method","name":"message","children":[],"call":["@data [] "]}," ECRPublic Errors ImageDigestDoesNotMatchException initialize":{"type":"method","name":"initialize","children":[],"call":[]}," ECRPublic Errors ImageAlreadyExistsException message":{"type":"method","name":"message","children":[],"call":["@data [] "]}," ECRPublic Errors ImageAlreadyExistsException initialize":{"type":"method","name":"initialize","children":[],"call":[]}," ECRPublic Errors EmptyUploadException message":{"type":"method","name":"message","children":[],"call":["@data [] "]}," ECRPublic Errors EmptyUploadException initialize":{"type":"method","name":"initialize","children":[],"call":[]}," ECRPublic Client errors_module":{"type":"method","name":"errors_module","children":[],"call":[]}," ECRPublic Client waiter_names":{"type":"method","name":"waiter_names","children":[],"call":[]}," ECRPublic Client build_request":{"type":"method","name":"build_request","children":[],"call":["Seahorse Client Request  new ","context []= ","Seahorse Client RequestContext  new "," config "," config api operation "," config api ","@handlers for ","Seahorse Client RequestContext  new  []= ","@@handlers for  for "]}," ECRPublic Client upload_layer_part":{"type":"method","name":"upload_layer_part","children":[],"call":["req send_request "," build_request "," build_request  send_ build_request uest "," build_ build_request uest "]}," ECRPublic Client set_repository_policy":{"type":"method","name":"set_repository_policy","children":[],"call":["req send_request "," build_request "," build_request  send_ build_request uest "," build_ build_request uest "]}," ECRPublic Client put_repository_catalog_data":{"type":"method","name":"put_repository_catalog_data","children":[],"call":["req send_request "," build_request "," build_request  send_ build_request uest "," build_ build_request uest "]}," ECRPublic Client put_registry_catalog_data":{"type":"method","name":"put_registry_catalog_data","children":[],"call":["req send_request "," build_request "," build_request  send_ build_request uest "," build_ build_request uest "]}," ECRPublic Client put_image":{"type":"method","name":"put_image","children":[],"call":["req send_request "," build_request "," build_request  send_ build_request uest "," build_ build_request uest "]}," ECRPublic Client initiate_layer_upload":{"type":"method","name":"initiate_layer_upload","children":[],"call":["req send_request "," build_request "," build_request  send_ build_request uest "," build_ build_request uest "]}," ECRPublic Client get_repository_policy":{"type":"method","name":"get_repository_policy","children":[],"call":["req send_request "," build_request "," build_request  send_ build_request uest "," build_ build_request uest "]}," ECRPublic Client get_repository_catalog_data":{"type":"method","name":"get_repository_catalog_data","children":[],"call":["req send_request "," build_request "," build_request  send_ build_request uest "," build_ build_request uest "]}," ECRPublic Client get_registry_catalog_data":{"type":"method","name":"get_registry_catalog_data","children":[],"call":["req send_request "," build_request "," build_request  send_ build_request uest "," build_ build_request uest "]}," ECRPublic Client get_authorization_token":{"type":"method","name":"get_authorization_token","children":[],"call":["req send_request "," build_request "," build_request  send_ build_request uest "," build_ build_request uest "]}," ECRPublic Client describe_repositories":{"type":"method","name":"describe_repositories","children":[],"call":["req send_request "," build_request "," build_request  send_ build_request uest "," build_ build_request uest "]}," ECRPublic Client describe_registries":{"type":"method","name":"describe_registries","children":[],"call":["req send_request "," build_request "," build_request  send_ build_request uest "," build_ build_request uest "]}," ECRPublic Client describe_images":{"type":"method","name":"describe_images","children":[],"call":["req send_request "," build_request "," build_request  send_ build_request uest "," build_ build_request uest "]}," ECRPublic Client describe_image_tags":{"type":"method","name":"describe_image_tags","children":[],"call":["req send_request "," build_request "," build_request  send_ build_request uest "," build_ build_request uest "]}," ECRPublic Client delete_repository_policy":{"type":"method","name":"delete_repository_policy","children":[],"call":["req send_request "," build_request "," build_request  send_ build_request uest "," build_ build_request uest "]}," ECRPublic Client delete_repository":{"type":"method","name":"delete_repository","children":[],"call":["req send_request "," build_request "," build_request  send_ build_request uest "," build_ build_request uest "]}," ECRPublic Client create_repository":{"type":"method","name":"create_repository","children":[],"call":["req send_request "," build_request "," build_request  send_ build_request uest "," build_ build_request uest "]}," ECRPublic Client complete_layer_upload":{"type":"method","name":"complete_layer_upload","children":[],"call":["req send_request "," build_request "," build_request  send_ build_request uest "," build_ build_request uest "]}," ECRPublic Client batch_delete_image":{"type":"method","name":"batch_delete_image","children":[],"call":["req send_request "," build_request "," build_request  send_ build_request uest "," build_ build_request uest "]}," ECRPublic Client batch_check_layer_availability":{"type":"method","name":"batch_check_layer_availability","children":[],"call":["req send_request "," build_request "," build_request  send_ build_request uest "," build_ build_request uest "]}," ECRPublic Client initialize":{"type":"method","name":"initialize","children":[],"call":[]}," ECRPublic Errors TooManyTagsException message":{"type":"method","name":"message","children":[],"call":["@data [] "]}," ECRPublic Errors TooManyTagsException initialize":{"type":"method","name":"initialize","children":[],"call":[]}," ECRPublic Errors InvalidTagParameterException message":{"type":"method","name":"message","children":[],"call":["@data [] "]}," ECRPublic Errors InvalidTagParameterException initialize":{"type":"method","name":"initialize","children":[],"call":[]}," ECRPublic Client untag_resource":{"type":"method","name":"untag_resource","children":[],"call":["req send_request "," build_request "," build_request  send_ build_request uest "," build_ build_request uest "]}," ECRPublic Client tag_resource":{"type":"method","name":"tag_resource","children":[],"call":["req send_request "," build_request "," build_request  send_ build_request uest "," build_ build_request uest "]}," ECRPublic Client list_tags_for_resource":{"type":"method","name":"list_tags_for_resource","children":[],"call":["req send_request "," build_request "," build_request  send_ build_request uest "," build_ build_request uest "]}," ECRPublic Plugins Endpoints add_handlers":{"type":"method","name":"add_handlers","children":[],"call":["handlers add "]}," ECRPublic Plugins Endpoints Handler parameters_for_operation":{"type":"method","name":"parameters_for_operation","children":[],"call":["Aws ECRPublic Endpoints UploadLayerPart  build ","Aws ECRPublic Endpoints UntagResource  build ","Aws ECRPublic Endpoints TagResource  build ","Aws ECRPublic Endpoints SetRepositoryPolicy  build ","Aws ECRPublic Endpoints PutRepositoryCatalogData  build ","Aws ECRPublic Endpoints PutRegistryCatalogData  build ","Aws ECRPublic Endpoints PutImage  build ","Aws ECRPublic Endpoints ListTagsForResource  build ","Aws ECRPublic Endpoints InitiateLayerUpload  build ","Aws ECRPublic Endpoints GetRepositoryPolicy  build ","Aws ECRPublic Endpoints GetRepositoryCatalogData  build ","Aws ECRPublic Endpoints GetRegistryCatalogData  build ","Aws ECRPublic Endpoints GetAuthorizationToken  build ","Aws ECRPublic Endpoints DescribeRepositories  build ","Aws ECRPublic Endpoints DescribeRegistries  build ","Aws ECRPublic Endpoints DescribeImages  build ","Aws ECRPublic Endpoints DescribeImageTags  build ","Aws ECRPublic Endpoints DeleteRepositoryPolicy  build ","Aws ECRPublic Endpoints DeleteRepository  build ","Aws ECRPublic Endpoints CreateRepository  build ","Aws ECRPublic Endpoints CompleteLayerUpload  build ","Aws ECRPublic Endpoints BatchDeleteImage  build ","Aws ECRPublic Endpoints BatchCheckLayerAvailability  build ","context operation_name "]}," ECRPublic Plugins Endpoints Handler apply_endpoint_headers":{"type":"method","name":"apply_endpoint_headers","children":[],"call":["context http_request headers []= ","context http_request headers ","context http_request ","(send\n  (send\n    (lvar :values) :compact) :map) join ","Seahorse Util  escape_header_list_string ","s to_s ","values compact map ","values compact ","headers each ","(send\n  (send\n    (lvar :(send\n  (send\n    (lvar :values) :compact) :map) join s) :compact) :map) join ","(send\n  (send\n    (lvar :values) :compact) :map) join s compact map ","(send\n  (send\n    (lvar :values) :compact) :map) join s compact "]}," ECRPublic Plugins Endpoints Handler call":{"type":"method","name":"call","children":[],"call":["@handler call ","context []= ","Aws Endpoints  resolve_auth_scheme "," apply_endpoint_headers ","endpoint headers ","context http_request endpoint= ","endpoint url ","context http_request ","context config endpoint_provider resolve_endpoint ","context config endpoint_provider ","context config "," parameters_for_operation ","context [] ","endpoint properties "," apply_context config endpoint_provider resolve_endpoint _headers ","context config endpoint_provider resolve_endpoint  headers ","context http_request context config endpoint_provider resolve_endpoint = ","context config endpoint_provider resolve_endpoint  url ","context config context config endpoint_provider resolve_endpoint _provider resolve_context config endpoint_provider resolve_endpoint  ","context config context config endpoint_provider resolve_endpoint _provider ","context config endpoint_provider resolve_endpoint  properties "]}," ECRPublic Endpoints UploadLayerPart build":{"type":"method","name":"build","children":[],"call":[]}," ECRPublic Endpoints UntagResource build":{"type":"method","name":"build","children":[],"call":[]}," ECRPublic Endpoints TagResource build":{"type":"method","name":"build","children":[],"call":[]}," ECRPublic Endpoints SetRepositoryPolicy build":{"type":"method","name":"build","children":[],"call":[]}," ECRPublic Endpoints PutRepositoryCatalogData build":{"type":"method","name":"build","children":[],"call":[]}," ECRPublic Endpoints PutRegistryCatalogData build":{"type":"method","name":"build","children":[],"call":[]}," ECRPublic Endpoints PutImage build":{"type":"method","name":"build","children":[],"call":[]}," ECRPublic Endpoints ListTagsForResource build":{"type":"method","name":"build","children":[],"call":[]}," ECRPublic Endpoints InitiateLayerUpload build":{"type":"method","name":"build","children":[],"call":[]}," ECRPublic Endpoints GetRepositoryPolicy build":{"type":"method","name":"build","children":[],"call":[]}," ECRPublic Endpoints GetRepositoryCatalogData build":{"type":"method","name":"build","children":[],"call":[]}," ECRPublic Endpoints GetRegistryCatalogData build":{"type":"method","name":"build","children":[],"call":[]}," ECRPublic Endpoints GetAuthorizationToken build":{"type":"method","name":"build","children":[],"call":[]}," ECRPublic Endpoints DescribeRepositories build":{"type":"method","name":"build","children":[],"call":[]}," ECRPublic Endpoints DescribeRegistries build":{"type":"method","name":"build","children":[],"call":[]}," ECRPublic Endpoints DescribeImages build":{"type":"method","name":"build","children":[],"call":[]}," ECRPublic Endpoints DescribeImageTags build":{"type":"method","name":"build","children":[],"call":[]}," ECRPublic Endpoints DeleteRepositoryPolicy build":{"type":"method","name":"build","children":[],"call":[]}," ECRPublic Endpoints DeleteRepository build":{"type":"method","name":"build","children":[],"call":[]}," ECRPublic Endpoints CreateRepository build":{"type":"method","name":"build","children":[],"call":[]}," ECRPublic Endpoints CompleteLayerUpload build":{"type":"method","name":"build","children":[],"call":[]}," ECRPublic Endpoints BatchDeleteImage build":{"type":"method","name":"build","children":[],"call":[]}," ECRPublic Endpoints BatchCheckLayerAvailability build":{"type":"method","name":"build","children":[],"call":[]}," ECRPublic EndpointProvider resolve_endpoint":{"type":"method","name":"resolve_endpoint","children":[],"call":["@provider resolve_endpoint "," raise ","Aws Endpoints Endpoint  new ","partition_result [] ","Aws Endpoints Matchers  boolean_equals? ","Aws Endpoints Matchers  attr ","Aws Endpoints Matchers  parse_url ","Aws Endpoints Matchers  set? ","Aws Endpoints Matchers  aws_partition ","parameters endpoint ","parameters use_fips ","parameters use_dual_stack ","parameters region ","@provider resolve_parameters endpoint  ","Aws Endpoints Matchers  aws_partition  [] ","Aws Endpoints Matchers  parse_Aws Endpoints Matchers  parse_url  ","parameters parameters endpoint  ","parameters parameters use_fips  ","parameters parameters use_dual_stack  ","parameters parameters region  "]}," ECRPublic EndpointProvider initialize":{"type":"method","name":"initialize","children":[],"call":["Aws Endpoints RulesProvider  new ","Aws Endpoints RuleSet  new ","endpoint_rules [] ","Aws Json  load ","Base64  decode64 ","Aws Json  load  [] "]}," ECRPublic initialize":{"type":"method","name":"initialize","children":[],"call":[" []= ","options [] "," raise "," [] nil? "," [] "]}," ECRPublic Errors RepositoryCatalogDataNotFoundException message":{"type":"method","name":"message","children":[],"call":["@data [] "]}," ECRPublic Errors RepositoryCatalogDataNotFoundException initialize":{"type":"method","name":"initialize","children":[],"call":[]}}