{" Webdrivers Geckodriver base_url":{"type":"method","name":"base_url","children":[],"call":[]}," Webdrivers Geckodriver decompress_file":{"type":"method","name":"decompress_file","children":[],"call":["ucf close ","ucf << ","entry read ","tar_extract each ","File  open "," file_name ","tar_extract rewind ","Gem Package TarReader  new ","Zlib GzipReader  open ","File  open  close ","File  open  << ","Gem Package TarReader  new  each ","Gem Package TarReader  new  rewind "]}," Webdrivers Geckodriver downloads":{"type":"method","name":"downloads","children":[],"call":["hash []= ","item [] ","items each_with_object ","item include? "," platform ","items select! ","items reject! ","doc css collect ","doc css ","Nokogiri XML  parse ","OpenURI  open_uri "," base_url "," normalize "," raise "," site_available? ","Webdrivers  logger debug ","ds keys ","Webdrivers  logger ","@downloads keys "," proxy_opt "," get ","Nokogiri HTML  parse "," normalize_version ","Nokogiri XML  parse  css collect ","Nokogiri HTML  parse  css collect ","Nokogiri XML  parse  css ","Nokogiri HTML  parse  css ","ds  normalize s ","ds  normalize_version s ","@downloads  normalize s ","@downloads  normalize_version s "]}," Webdrivers Geckodriver newest_version":{"type":"method","name":"newest_version","children":[],"call":["padded keys sort last ","padded keys sort ","padded keys ","hash []= ","matched [] "," sprintf ","version match "," downloads keys each_with_object "," downloads keys "," downloads ","version match  [] "]}," Webdrivers Geckodriver current_version":{"type":"method","name":"current_version","children":[],"call":["(begin\n  (send nil :binary_path)) match [] ","(begin\n  (send nil :binary_path)) match "," binary_path ","File  exists? "," normalize ","string match [] ","string match ","Webdrivers  logger debug "," binary ","Webdrivers  logger "," downloaded? "," normalize_version ","version match [] ","version match ","version nil? "," binary_version "," exists? "," normalize_ binary_version  "," binary_version  match [] "," binary_version  match "," binary_version  nil? "," binary_ binary_version  "]}," Webdrivers Geckodriver file_name":{"type":"method","name":"file_name","children":[],"call":[" platform == "," platform ","System  platform == ","System  platform "]}," Webdrivers Common internet_connection?":{"type":"method","name":"internet_connection?","children":[],"call":[" open "," base_url "]}," Webdrivers Common platform":{"type":"method","name":"platform","children":[],"call":["cfg [] =~ ","cfg [] ","Selenium WebDriver Platform  mac? ","Selenium WebDriver Platform  bitsize ","Selenium WebDriver Platform  linux? "]}," Webdrivers Common install_dir":{"type":"method","name":"install_dir","children":[],"call":["FileUtils  mkdir_p ","File  expand_path tap ","File  expand_path ","File  join ","ENV  [] ","Webdrivers  install_dir "]}," Webdrivers Common platform_install_dir":{"type":"method","name":"platform_install_dir","children":[],"call":["FileUtils  mkdir_p ","File  join tap ","File  join "," platform "," install_dir "]}," Webdrivers Common binary_path":{"type":"method","name":"binary_path","children":[],"call":["File  join "," file_name "," platform_install_dir "]}," Webdrivers Common download_url":{"type":"method","name":"download_url","children":[],"call":[" downloads [] "," newest_version "," downloads "," latest ","Gem Version  new ","version to_s ","version nil? ","version is_a? "," desired_version "," normalize_version "," required_version "," downloads keys max "," downloads keys "," required_version version empty? "," required_version version "," required_version == ","Webdrivers  logger debug "," file_name ","Webdrivers  logger "," direct_url tap "," direct_url "," download_version "]}," Webdrivers Common download":{"type":"method","name":"download","children":[],"call":["FileUtils  chmod "," binary_path "," raise ","File  exists? "," decompress_file ","saved_file write ","read_file read ","URI  parse open ","URI  parse ","File  open ","FileUtils  rm_f ","Dir  chdir "," platform_install_dir ","File  basename "," download_url "," newest_version == "," current_version "," newest_version "," base_url "," internet_connection? "," internet_connection? ! "," extract_file "," respond_to? "," binary "," install_dir "," downloads [] "," latest "," downloads ","Dir  mkdir ","Webdrivers  logger debug ","Webdrivers  logger ","file print "," open "," proxy_opt "," get ","FileUtils  mkdir_p "," desired_version "," site_available? ","File  exist? ","df close! ","df to_path ","Tempfile  open ","System  download "," driver_path ","Webdrivers  logger deprecate "," download_ download_url  "," download_ downloads []  "," base_ download_url  "," base_ downloads []  "]}," Webdrivers Common install":{"type":"method","name":"install","children":[],"call":[" exec "," binary_path "," download "]}," Webdrivers Chromedriver base_url":{"type":"method","name":"base_url","children":[],"call":[]}," Webdrivers Chromedriver decompress_file":{"type":"method","name":"decompress_file","children":[],"call":["Archive Zip  extract "," unzip_file ","filename gsub "," system "," untargz_file "]}," Webdrivers Chromedriver downloads":{"type":"method","name":"downloads","children":[],"call":["hash []= "," base_url ","item [] ","items each_with_object ","item include? "," platform ","items select! ","doc css collect ","doc css ","Nokogiri XML  parse ","OpenURI  open_uri "," normalize "," raise "," site_available? ","Webdrivers  logger debug ","ds keys ","Webdrivers  logger ","@downloads keys "," proxy_opt "," get ","doc css collect  each_with_object ","doc css collect  select! ","Nokogiri XML  parse  css collect ","Nokogiri XML  parse  css ","ds  normalize s ","@downloads  normalize s "]}," Webdrivers Chromedriver newest_version":{"type":"method","name":"newest_version","children":[],"call":["padded keys sort last ","padded keys sort ","padded keys ","hash []= ","matched [] "," sprintf ","version match "," downloads keys each_with_object "," downloads keys "," downloads ","version match  [] "]}," Webdrivers Chromedriver current_version":{"type":"method","name":"current_version","children":[],"call":["(begin\n  (send nil :binary_path)) match [] ","(begin\n  (send nil :binary_path)) match "," binary_path ","File  exists? "," normalize ","string match [] ","string match ","Webdrivers  logger debug "," binary ","Webdrivers  logger "," downloaded? ","ver [] "," normalize_version ","version [] ","version nil? "," binary_version "," exists? "," normalize_ binary_version  "," binary_version  [] "," binary_version  nil? "," binary_ binary_version  "]}," Webdrivers Chromedriver file_name":{"type":"method","name":"file_name","children":[],"call":[" platform == "," platform ","Selenium WebDriver Platform  windows? ","System  platform == ","System  platform ","System  wsl? ","System  wsl_v1? "]}," Webdrivers Common unzip_file":{"type":"method","name":"unzip_file","children":[],"call":["Archive Zip  extract ","filename gsub ","zip_file extract ","File  exist? ","FileUtils  mkdir_p ","File  dirname ","File  join ","f name ","Dir  pwd ","zip_file each ","Zip ZipFile  open ","FileUtils  rm_rf ","Zip File  open "]}," Webdrivers Common untargz_file":{"type":"method","name":"untargz_file","children":[],"call":["ucf close ","ucf << ","entry read ","tar_extract each ","File  open "," file_name ","tar_extract rewind ","Gem Package TarReader  new ","Zlib GzipReader  open ","File  basename ","File  open  close ","File  open  << ","Gem Package TarReader  new  each ","Gem Package TarReader  new  rewind "]}," Webdrivers Common decompress_file":{"type":"method","name":"decompress_file","children":[],"call":[" unzip_file "," untargz_file ","filename gsub "," system ","Webdrivers  logger debug ","Webdrivers  logger ","FileUtils  cp ","File  join ","Dir  pwd "]}," Webdrivers PhantomJS extract_file":{"type":"method","name":"extract_file","children":[],"call":["FileUtils  mv "," platform_install_dir "," file_name "]}," Webdrivers PhantomJS base_url":{"type":"method","name":"base_url","children":[],"call":[]}," Webdrivers PhantomJS downloads":{"type":"method","name":"downloads","children":[],"call":["hash []= ","item [] ","items each_with_object ","item include? ","items select! "," platform dup gsub gsub "," platform dup gsub "," platform dup "," platform ","doc css collect ","doc css ","Nokogiri XML  parse ","OpenURI  open_uri "," base_url ","Nokogiri XML  parse  css collect ","Nokogiri XML  parse  css "]}," Webdrivers PhantomJS newest_version":{"type":"method","name":"newest_version","children":[],"call":[" downloads keys sort last "," downloads keys sort "," downloads keys "," downloads "]}," Webdrivers PhantomJS current_version":{"type":"method","name":"current_version","children":[],"call":["(begin\n  (send nil :binary_path)) match [] ","(begin\n  (send nil :binary_path)) match "," binary_path ","File  exists? ","(begin\n  (send nil :binary_path)) strip match [] ","(begin\n  (send nil :binary_path)) strip match ","(begin\n  (send nil :binary_path)) strip "]}," Webdrivers PhantomJS file_name":{"type":"method","name":"file_name","children":[],"call":[" platform == "," platform "]}," Webdrivers IEDriver base_url":{"type":"method","name":"base_url","children":[],"call":[]}," Webdrivers IEDriver downloads":{"type":"method","name":"downloads","children":[],"call":["hash []= "," base_url ","item [] ","items each_with_object ","item include? ","items select! ","doc css collect ","doc css ","Nokogiri XML  parse ","OpenURI  open_uri ","doc css collect  each_with_object ","doc css collect  select! ","Nokogiri XML  parse  css collect ","Nokogiri XML  parse  css "]}," Webdrivers IEDriver newest_version":{"type":"method","name":"newest_version","children":[],"call":[" downloads keys sort last "," downloads keys sort "," downloads keys "," downloads "]}," Webdrivers IEDriver current_version":{"type":"method","name":"current_version","children":[],"call":["(begin\n  (send nil :binary_path)) strip match [] ","(begin\n  (send nil :binary_path)) strip match ","(begin\n  (send nil :binary_path)) strip "," binary_path ","File  exists? "]}," Webdrivers IEDriver file_name":{"type":"method","name":"file_name","children":[],"call":[]}," Webdrivers Edgedriver base_url":{"type":"method","name":"base_url","children":[],"call":[]}," Webdrivers Edgedriver download_url":{"type":"method","name":"download_url","children":[],"call":[" newest_version to_i >= "," newest_version to_i "," newest_version ","Webdrivers  logger debug ","Webdrivers  logger "," base_url ","System  platform ","System  platform == "," normalize_version "," required_version "," latest_version "," required_version == "," driver_filename "," newest_ normalize_version  to_i >= "," newest_ latest_version  to_i >= "," newest_ normalize_version  to_i "," newest_ latest_version  to_i "," newest_ normalize_version  "," newest_ latest_version  "," normalize_ normalize_version  "," normalize_ latest_version  "," required_ normalize_version  "," required_ latest_version  "," latest_ normalize_version  "," latest_ latest_version  "," required_ normalize_version  == "," required_ latest_version  == "," driver_ driver_filename  "]}," Webdrivers Edgedriver newest_version":{"type":"method","name":"newest_version","children":[],"call":["version [] [] ","version [] "]}," Webdrivers Edgedriver current_version":{"type":"method","name":"current_version","children":[],"call":[]}," Webdrivers Edgedriver file_name":{"type":"method","name":"file_name","children":[],"call":["System  platform == ","System  platform "]}," Selenium WebDriver IE driver_path":{"type":"method","name":"driver_path","children":[],"call":[]}," Selenium WebDriver Edge driver_path":{"type":"method","name":"driver_path","children":[],"call":[" se_driver_path ","Webdrivers  logger warn ","Webdrivers  logger ","Webdrivers MSWebdriver  ignore "]}," Selenium WebDriver Firefox driver_path":{"type":"method","name":"driver_path","children":[],"call":[]}," Selenium WebDriver Chrome driver_path":{"type":"method","name":"driver_path","children":[],"call":[]}," Webdrivers MSWebdriver base_url":{"type":"method","name":"base_url","children":[],"call":[]}," Webdrivers MSWebdriver download_url":{"type":"method","name":"download_url","children":[],"call":[" current to_i >= "," current to_i "," current "," raise "," site_available? ","Webdrivers  logger debug ","Webdrivers  logger "]}," Webdrivers MSWebdriver file_name":{"type":"method","name":"file_name","children":[],"call":[]}," Webdrivers MSWebdriver normalize":{"type":"method","name":"normalize","children":[],"call":["(send\n  (send\n    (send\n      (lvar :string) :match\n      (regexp\n        (str \"(\\\\d+)\\\\.(\\\\d+\\\\.\\\\d+)\")\n        (regopt))) :to_a) :map) [] join to_f ","(send\n  (send\n    (send\n      (lvar :string) :match\n      (regexp\n        (str \"(\\\\d+)\\\\.(\\\\d+\\\\.\\\\d+)\")\n        (regopt))) :to_a) :map) [] join ","(send\n  (send\n    (send\n      (lvar :string) :match\n      (regexp\n        (str \"(\\\\d+)\\\\.(\\\\d+\\\\.\\\\d+)\")\n        (regopt))) :to_a) :map) [] ","v tr ","string match to_a map ","string match to_a ","string match "]}," Webdrivers MSWebdriver latest":{"type":"method","name":"latest","children":[],"call":[]}," Webdrivers MSWebdriver current":{"type":"method","name":"current","children":[],"call":["version [] [] ","version [] ","Webdrivers  logger debug ","Webdrivers  logger ","build to_i ","version split [] ","version split ","version chomp! "," raise ","version empty? ","version split []  to_i "]}," Webdrivers IEdriver downloads":{"type":"method","name":"downloads","children":[],"call":["hash []= "," base_url "," normalize ","item [] ","items each_with_object ","item include? ","items select! ","doc css collect ","doc css ","Nokogiri XML  parse ","OpenURI  open_uri "," raise "," site_available? ","Webdrivers  logger debug ","ds keys ","Webdrivers  logger ","@downloads keys "," proxy_opt "," get "," normalize_version ","Network  get "," download_manifest each_with_object "," download_manifest ","item [] [] ","doc css collect  each_with_object ","doc css collect  select! ","Nokogiri XML  parse  css collect ","Nokogiri XML  parse  css ","ds  normalize s ","ds  normalize_version s ","@downloads  normalize s ","@downloads  normalize_version s "," normalize_ normalize_version  "]}," Webdrivers IEdriver base_url":{"type":"method","name":"base_url","children":[],"call":[]}," Webdrivers IEdriver file_name":{"type":"method","name":"file_name","children":[],"call":[]}," Webdrivers IEdriver normalize":{"type":"method","name":"normalize","children":[],"call":["string to_f ","Gem Version  new "]}," Webdrivers IEdriver current":{"type":"method","name":"current","children":[],"call":[" normalize ","string match [] ","string match "," puts "," binary "," downloaded? ","Webdrivers  logger debug ","Webdrivers  logger "]}," Webdrivers Geckodriver normalize":{"type":"method","name":"normalize","children":[],"call":["(send\n  (send\n    (send\n      (lvar :string) :match\n      (regexp\n        (str \"(\\\\d+)\\\\.(\\\\d+\\\\.\\\\d+)\")\n        (regopt))) :to_a) :map) [] join to_f ","(send\n  (send\n    (send\n      (lvar :string) :match\n      (regexp\n        (str \"(\\\\d+)\\\\.(\\\\d+\\\\.\\\\d+)\")\n        (regopt))) :to_a) :map) [] join ","(send\n  (send\n    (send\n      (lvar :string) :match\n      (regexp\n        (str \"(\\\\d+)\\\\.(\\\\d+\\\\.\\\\d+)\")\n        (regopt))) :to_a) :map) [] ","v tr ","string match to_a map ","string match to_a ","string match "]}," Webdrivers Geckodriver current":{"type":"method","name":"current","children":[],"call":[" normalize ","string match [] ","string match "," puts "," binary "," downloaded? ","Webdrivers  logger debug ","Webdrivers  logger "]}," Webdrivers Common site_available?":{"type":"method","name":"site_available?","children":[],"call":[" open "," base_url ","Webdrivers  logger info ","Webdrivers  logger ","Webdrivers  logger debug "," get ","ex inspect "]}," Webdrivers Common binary":{"type":"method","name":"binary","children":[],"call":["File  join "," file_name "," install_dir "," driver_path ","Webdrivers  logger deprecate ","Webdrivers  logger "]}," Webdrivers Common downloaded?":{"type":"method","name":"downloaded?","children":[],"call":["File  exist? "," binary ","Webdrivers  logger debug ","Webdrivers  logger "]}," Webdrivers Common remove":{"type":"method","name":"remove","children":[],"call":["FileUtils  rm_f "," binary ","Webdrivers  logger debug ","Webdrivers  logger "," raise ","attempts_made <= ","File  exist? "," sleep ","File  delete ","System  delete "," driver_path "," file_name gsub "," file_name ","System  install_dir "]}," Webdrivers Common latest":{"type":"method","name":"latest","children":[],"call":[" downloads keys sort last "," downloads keys sort "," downloads keys "," downloads "]}," Webdrivers Common update":{"type":"method","name":"update","children":[],"call":[" download "," remove "," binary "," current == "," latest "," current "," current nil? "," site_available? "," raise "," install_dir "," base_url "," file_name ","released nil? ","File  exist? ","Webdrivers  logger debug ","Webdrivers  logger ","File  exists? "," correct_binary? "," desired_version nil? "," desired_version "," current_version nil? "," current_version ","System  download "," driver_path "," download_url "," required_version != "," required_version "," latest  nil? "]}," Webdrivers Chromedriver normalize":{"type":"method","name":"normalize","children":[],"call":["string to_f ","string gsub to_f ","string gsub ","string size == ","string size "]}," Webdrivers Chromedriver current":{"type":"method","name":"current","children":[],"call":[" normalize ","string match [] ","string match "," puts "," binary "," downloaded? ","Webdrivers  logger debug ","Webdrivers  logger "]}," Webdrivers Chromedriver install_dir":{"type":"method","name":"install_dir","children":[],"call":["FileUtils  mkdir_p ","File  expand_path tap ","File  expand_path ","File  join ","ENV  [] "]}," Webdrivers Chromedriver unzip_file":{"type":"method","name":"unzip_file","children":[],"call":["zip_file extract ","FileUtils  mkdir_p ","File  dirname ","File  exist? ","FileUtils  rm_rf ","File  join ","f name ","Dir  pwd ","zip_file each ","Zip File  open "]}," Webdrivers Chromedriver untargz_file":{"type":"method","name":"untargz_file","children":[],"call":["File  basename ","ucf close ","ucf << ","entry read ","tar_extract each ","File  open "," file_name ","tar_extract rewind ","Gem Package TarReader  new ","Zlib GzipReader  open ","File  open  close ","File  open  << ","Gem Package TarReader  new  each ","Gem Package TarReader  new  rewind "]}," Webdrivers Chromedriver platform":{"type":"method","name":"platform","children":[],"call":["cfg [] =~ ","cfg [] ","Selenium WebDriver Platform  mac? ","Selenium WebDriver Platform  linux? "]}," Webdrivers Chromedriver site_available?":{"type":"method","name":"site_available?","children":[],"call":[" open "," base_url "]}," Webdrivers Chromedriver binary":{"type":"method","name":"binary","children":[],"call":["File  join "," file_name "," install_dir "]}," Webdrivers Chromedriver downloaded?":{"type":"method","name":"downloaded?","children":[],"call":["File  exist? "," binary "]}," Webdrivers Chromedriver download":{"type":"method","name":"download","children":[],"call":[" binary ","FileUtils  chmod "," raise ","File  exists? "," extract_file "," respond_to? "," decompress_file ","saved_file write ","read_file read ","URI  parse open ","URI  parse ","File  open ","FileUtils  rm_f ","Dir  chdir "," install_dir ","File  basename "," downloads [] "," latest "," downloads "]}," Webdrivers Chromedriver remove":{"type":"method","name":"remove","children":[],"call":["FileUtils  rm_f "," binary "]}," Webdrivers Chromedriver latest":{"type":"method","name":"latest","children":[],"call":[" downloads keys sort last "," downloads keys sort "," downloads keys "," downloads ","Gem Version  new "," get ","URI  join "," base_url "]}," Webdrivers Chromedriver update":{"type":"method","name":"update","children":[],"call":[" download "," remove "," binary "," current == "," latest "," current "," current nil? "," site_available? "]}," Webdrivers logger":{"type":"method","name":"logger","children":[],"call":["Webdrivers Logger  new "]}," Webdrivers Logger create_logger":{"type":"method","name":"create_logger","children":[],"call":["logger formatter= ","time strftime "," proc ","logger level= ","logger progname= "," Logger  new "," Logger  new  formatter= "," Logger  new  level= "," Logger  new  progname= "]}," Webdrivers Logger deprecate":{"type":"method","name":"deprecate","children":[],"call":[" warn "]}," Webdrivers Logger io":{"type":"method","name":"io","children":[],"call":["@logger instance_variable_get instance_variable_get ","@logger instance_variable_get "]}," Webdrivers Logger level=":{"type":"method","name":"level=","children":[],"call":[" raise ","@logger level= ","unknown freeze ","fatal freeze ","error freeze ","warn freeze ","info freeze ","debug freeze ","severity to_s downcase ","severity to_s ","severity is_a? "]}," Webdrivers Logger output=":{"type":"method","name":"output=","children":[],"call":[" create_logger ","@logger reopen ","@logger respond_to? "," create_logger  reopen "," create_logger  respond_to? "]}," Webdrivers Logger initialize":{"type":"method","name":"initialize","children":[],"call":[" create_logger "]}," Webdrivers Common proxy_opt":{"type":"method","name":"proxy_opt","children":[],"call":["ENV  [] "]}," Webdrivers configure":{"type":"method","name":"configure","children":[],"call":[]}," Webdrivers Common using_proxy":{"type":"method","name":"using_proxy","children":[],"call":["Webdrivers  proxy_port ","Webdrivers  proxy_addr "]}," Webdrivers Common http":{"type":"method","name":"http","children":[],"call":["Net HTTP  Proxy ","Webdrivers  proxy_pass ","Webdrivers  proxy_user ","Webdrivers  proxy_port ","Webdrivers  proxy_addr "," using_proxy "]}," Webdrivers Common get":{"type":"method","name":"get","children":[],"call":["response value "," get ","limit - ","Webdrivers  logger debug ","Webdrivers  logger ","response [] ","response body "," http get_response "," URI "," http "," raise ","limit == ","response inspect ","limit zero? "," http get_response  value "," http get_response  [] "," http get_response  body "," http get_ http get_response  "," http get_response  inspect "]}," Webdrivers MSWebdriver downloads":{"type":"method","name":"downloads","children":[],"call":["hash []= ","link [] ","link text scan first to_i ","link text scan first ","link text scan ","link text ","link text == ","array each_with_object ","Nokogiri  HTML xpath ","Nokogiri  HTML "," get "," base_url "," raise "," site_available? "," normalize "," normalize_version ","Nokogiri  HTML xpath  each_with_object "]}," Webdrivers MSWebdriver correct_binary?":{"type":"method","name":"correct_binary?","children":[],"call":["File  exist? "," binary "]}," Webdrivers MSWebdriver download":{"type":"method","name":"download","children":[],"call":[]}," Webdrivers Common correct_binary?":{"type":"method","name":"correct_binary?","children":[],"call":["File  exists? "," binary "," latest == "," current "," latest "," latest_version == "," current_version "," latest_version "," desired_version == "," desired_version ","File  exist? "," driver_path "," sufficient_binary? "," current_version == "," normalize_version "," required_version "," required_version version empty? "," required_version version "," required_version == "," download_version "]}," Webdrivers IEdriver latest":{"type":"method","name":"latest","children":[],"call":[" downloads keys sort last "," downloads keys sort "," downloads keys "," downloads "]}," Webdrivers Common normalize":{"type":"method","name":"normalize","children":[],"call":["Gem Version  new "]}," Webdrivers MSWebdriver version=":{"type":"method","name":"version=","children":[],"call":[" raise "]}," Webdrivers MSWebdriver windows_version":{"type":"method","name":"windows_version","children":[],"call":["build to_i ","Webdrivers  logger debug ","Webdrivers  logger ","version split [] ","version split ","version chomp! "," raise ","version empty? ","version split []  to_i "]}," Webdrivers IEdriver current_version":{"type":"method","name":"current_version","children":[],"call":[" normalize ","string match [] ","string match ","Webdrivers  logger debug "," binary ","Webdrivers  logger "," downloaded? "," normalize_version ","version match [] ","version match ","version nil? "," binary_version "," exists? "," normalize_ binary_version  "," binary_version  match [] "," binary_version  match "," binary_version  nil? "," binary_ binary_version  "]}," Webdrivers Common latest_version":{"type":"method","name":"latest_version","children":[],"call":[" downloads keys sort last "," downloads keys sort "," downloads keys "," downloads "," raise "," site_available? "," downloads keys max "]}," Webdrivers Common desired_version":{"type":"method","name":"desired_version","children":[],"call":["Gem Version  new "," version to_s "," version "," latest_version "," version nil? "," version is_a? "," normalize_version "," desired_version "," desired_version version empty? "," desired_version version ","Webdrivers  logger deprecate ","Webdrivers  logger "," class "," desired_version == "]}," Webdrivers Chromedriver latest_version":{"type":"method","name":"latest_version","children":[],"call":["Gem Version  new "," get ","URI  join "," base_url "," raise "," site_available? "," release_version ","Webdrivers  logger debug ","Webdrivers  logger "," release_version < "," normalize_version "," latest_point_release "," with_cache "," file_name "," browser_build_version "," current_build_version "," browser_build_version < "]}," Webdrivers net_http_ssl_fix":{"type":"method","name":"net_http_ssl_fix","children":[],"call":[" require "," raise "]}," Webdrivers Chromedriver chrome_on_mac":{"type":"method","name":"chrome_on_mac","children":[],"call":["Shellwords  escape ","(begin\n  (lvar :executable)) strip ","Webdrivers  logger debug ","Webdrivers  logger ","(begin\n  (send nil :browser_binary)) strip "," browser_binary ","(begin\n  (send\n    (const nil :Shellwords) :escape\n    (send nil :browser_binary))) strip ","System  call strip ","System  call ","(begin\n  (lvar :Shellwords  escape )) strip "]}," Webdrivers Chromedriver chrome_on_linux":{"type":"method","name":"chrome_on_linux","children":[],"call":["(begin\n  (lvar :executable)) strip ","Webdrivers  logger debug ","Webdrivers  logger ","(str \"which google-chrome\") strip ","(begin\n  (send nil :browser_binary)) strip "," browser_binary ","(begin\n  (send\n    (const nil :Shellwords) :escape\n    (send nil :browser_binary))) strip ","Shellwords  escape ","System  call strip ","System  call ","(begin\n  (lvar :(str \"which google-chrome\") strip )) strip ","(begin\n  (lvar :System  call strip )) strip "]}," Webdrivers Chromedriver chrome_on_windows":{"type":"method","name":"chrome_on_windows","children":[],"call":["(str \"powershell \") strip ","Webdrivers  logger debug ","Webdrivers  logger ","(str \"powershell (Get-ItemProperty '\") strip "," browser_binary ","(begin\n  (lvar :ver)) strip "," platform == "," platform ","RUBY_PLATFORM  == "]}," Webdrivers Chromedriver chrome_version":{"type":"method","name":"chrome_version","children":[],"call":["ver [] ","(send nil :platform) chomp "," raise "," chrome_on_mac "," chrome_on_linux "," chrome_on_windows "," platform ","ver empty? ","ver nil? "," normalize_version ","Webdrivers  logger debug ","Webdrivers  logger "," send chomp "," send ","System  platform ","ChromeFinder  version ","(send nil :platform) chomp  [] "," send chomp  [] ","(send nil :platform) chomp  empty? "," send chomp  empty? ","(send nil :platform) chomp  nil? "," send chomp  nil? "," normalize_(send nil :platform) chomp sion "," normalize_ send chomp sion ","Webdri(send nil :platform) chomp s  logger debug ","Webdri send chomp s  logger debug ","Webdri(send nil :platform) chomp s  logger ","Webdri send chomp s  logger ","ChromeFinder  (send nil :platform) chomp sion ","ChromeFinder   send chomp sion "]}," Webdrivers Chromedriver release_version":{"type":"method","name":"release_version","children":[],"call":[" chrome_version [] "," chrome_version "," normalize_version ","chrome segments [] join ","chrome segments [] ","chrome segments "," browser_version ","  normalize_version _version [] ","  normalize_version _version "," normalize_version  segments [] join "," normalize_version  segments [] "," normalize_version  segments "]}," Webdrivers Chromedriver browser_binary":{"type":"method","name":"browser_binary","children":[],"call":["Selenium WebDriver Chrome  path "]}," Webdrivers Common normalize_version":{"type":"method","name":"normalize_version","children":[],"call":["Gem Version  new ","version to_s "]}," Webdrivers Chromedriver download_url":{"type":"method","name":"download_url","children":[],"call":["Webdrivers  logger debug ","Webdrivers  logger "," platform "," desired_version "," base_url ","System  platform ","System  platform == "," normalize_version "," required_version "," latest_version "," required_version version empty? "," required_version version "," required_version == ","System  wsl? "," driver_filename "," desired_ normalize_version  "," desired_ latest_version  "," normalize_ normalize_version  "," normalize_ latest_version  "," required_ normalize_version  "," required_ latest_version  "," latest_ normalize_version  "," latest_ latest_version  "," required_ normalize_version   normalize_version  empty? "," required_ latest_version   latest_version  empty? "," required_ normalize_version   normalize_version  "," required_ latest_version   latest_version  "," required_ normalize_version  == "," required_ latest_version  == "," driver_ driver_filename  "]}," Webdrivers Chromedriver latest_point_release":{"type":"method","name":"latest_point_release","children":[],"call":[" raise ","version > ","Webdrivers  logger debug ","Webdrivers  logger "," normalize_version "," get ","URI  join "," base_url ","Network  get "," latest_patch_version ","version < "]}," Webdrivers System call":{"type":"method","name":"call","children":[],"call":["Webdrivers  logger debug ","Webdrivers  logger "," raise ","$CHILD_STATUS success? ","p close ","p read ","IO  popen ","IO  popen  close ","IO  popen  read ","IO  IO  popen oIO  popen en "]}," Webdrivers System bitsize":{"type":"method","name":"bitsize","children":[],"call":["Selenium WebDriver Platform  bitsize "]}," Webdrivers System platform":{"type":"method","name":"platform","children":[],"call":[" raise ","Selenium WebDriver Platform  windows? ","Selenium WebDriver Platform  mac? ","Selenium WebDriver Platform  linux? "]}," Webdrivers System unzip_file":{"type":"method","name":"unzip_file","children":[],"call":["zip_file extract ","FileUtils  mkdir_p ","File  dirname ","File  exist? "," delete ","File  join ","f name ","Dir  pwd ","zip_file each ","Zip File  open ","Webdrivers  logger debug ","Webdrivers  logger ","driver name ","zip_file get_entry "," driver_and_path ","Webzip_file get_entry s  logger debug ","Webzip_file get_entry s  logger ","zip_file get_entry  name "," zip_file get_entry _and_path "]}," Webdrivers System untargz_file":{"type":"method","name":"untargz_file","children":[],"call":["File  basename ","ucf << ","entry read ","tar_extract each ","File  open ","Gem Package TarReader  new ","Zlib GzipReader  open ","Webdrivers  logger debug ","Webdrivers  logger ","Gem Package TarReader  new  each "]}," Webdrivers System untarbz2_file":{"type":"method","name":"untarbz2_file","children":[],"call":[" call gsub "," call ","Webdrivers  logger debug ","Webdrivers  logger "]}," Webdrivers System decompress_file":{"type":"method","name":"decompress_file","children":[],"call":[" raise "," url ","File  exist? ","FileUtils  cp ","File  join ","Dir  pwd ","Webdrivers  logger debug ","Webdrivers  logger "," unzip_file "," untarbz2_file "," untargz_file ","File  basename ","tempfile to_path ","tempfile to_path  to_path "]}," Webdrivers System exists?":{"type":"method","name":"exists?","children":[],"call":["Webdrivers  logger debug ","Webdrivers  logger ","File  exist? "]}," Webdrivers System download_file":{"type":"method","name":"download_file","children":[],"call":["tempfile close! "," decompress_file ","Webdrivers  logger debug ","tempfile to_path ","Webdrivers  logger "," raise ","File  exist? ","file print ","Network  get ","Tempfile  open ","Dir  chdir "," install_dir ","File  basename "]}," Webdrivers System download":{"type":"method","name":"download","children":[],"call":["Webdrivers  logger debug ","Webdrivers  logger ","FileUtils  chmod "," download_file ","FileUtils  mkdir_p "," install_dir ","File  exist? "]}," Webdrivers System valid_cache?":{"type":"method","name":"valid_cache?","children":[],"call":["Time  now - < ","Webdrivers  cache_time ","Time  now - ","File  mtime ","Time  now ","File  exist? ","file_name gsub "," install_dir "]}," Webdrivers System cached_version":{"type":"method","name":"cached_version","children":[],"call":["File  open ","file_name gsub "," install_dir "]}," Webdrivers System cache_version":{"type":"method","name":"cache_version","children":[],"call":["file print ","File  open ","file_name gsub "," install_dir ","FileUtils  mkdir_p ","File  exist? "]}," Webdrivers System install_dir":{"type":"method","name":"install_dir","children":[],"call":["File  expand_path ","File  join ","ENV  [] ","Webdrivers  install_dir "]}," Webdrivers System delete":{"type":"method","name":"delete","children":[],"call":[" raise ","attempts_made <= ","File  exist? "," sleep ","File  delete ","Webdrivers  logger debug ","Webdrivers  logger "]}," Webdrivers Network using_proxy":{"type":"method","name":"using_proxy","children":[],"call":["Webdrivers  proxy_port ","Webdrivers  proxy_addr "]}," Webdrivers Network http":{"type":"method","name":"http","children":[],"call":["Net HTTP  Proxy ","Webdrivers  proxy_pass ","Webdrivers  proxy_user ","Webdrivers  proxy_port ","Webdrivers  proxy_addr "," using_proxy "]}," Webdrivers Network get_response":{"type":"method","name":"get_response","children":[],"call":[" get_response ","limit - ","Webdrivers  logger debug ","Webdrivers  logger ","response [] ","response is_a? ","response inspect "," raise "," http get_response "," URI "," http ","limit zero? "," get_ http get_response  "," http get_response  [] "," http get_response  is_a? "," http get_response  inspect "," http get_ http get_response  "]}," Webdrivers Network get_url":{"type":"method","name":"get_url","children":[],"call":[" get_response uri to_s "," get_response uri "," get_response ","Webdrivers  logger debug ","Webdrivers  logger "]}," Webdrivers Network get":{"type":"method","name":"get","children":[],"call":[" raise ","response message ","response code ","response class ","response body "," get_response ","Webdrivers  logger debug ","Webdrivers  logger "," get_response  message "," get_response  code "," get_response  class "," get_response  body "," get_ get_response  "]}," Selenium WebDriver Edge Service driver_path":{"type":"method","name":"driver_path","children":[],"call":[" se_driver_path ","Webdrivers  logger warn ","Webdrivers  logger ","Webdrivers MSWebdriver  ignore "]}," Webdrivers IEdriver latest_version":{"type":"method","name":"latest_version","children":[],"call":[" downloads keys max "," downloads keys "," downloads "," with_cache "," file_name "]}," Webdrivers Geckodriver platform_ext":{"type":"method","name":"platform_ext","children":[],"call":["System  bitsize ","System  platform ","System  apple_m1_architecture? "]}," Webdrivers Geckodriver direct_url":{"type":"method","name":"direct_url","children":[],"call":[" platform_ext "," base_url "]}," Webdrivers Geckodriver download_url":{"type":"method","name":"download_url","children":[],"call":[" direct_url "," required_version "," latest_version "," required_version version empty? "," required_version version "," required_version == "]}," Webdrivers Geckodriver latest_version":{"type":"method","name":"latest_version","children":[],"call":[" normalize_version ","Network  get_url [] ","Network  get_url "," base_url "," with_cache "," file_name "]}," Webdrivers Common with_cache":{"type":"method","name":"with_cache","children":[],"call":[" normalize_version ","System  cache_version ","Webdrivers  logger warn ","Webdrivers  logger "," cache_warning ","System  cached_version ","System  valid_cache? ","Common  cache_warning= ","Common  cache_warning ","Webdrivers  logger debug ","driver_build == "," exists? ","System  System  cached_version  "]}," Webdrivers Common binary_version":{"type":"method","name":"binary_version","children":[],"call":["Webdrivers  logger debug "," driver_path ","Webdrivers  logger ","System  call "]}," Webdrivers Common sufficient_binary?":{"type":"method","name":"sufficient_binary?","children":[],"call":[" exists? "]}," Webdrivers Common exists?":{"type":"method","name":"exists?","children":[],"call":["System  exists? "," driver_path "]}," Webdrivers Common driver_path":{"type":"method","name":"driver_path","children":[],"call":["File  join "," file_name ","System  install_dir ","System  escape_path ","File  absolute_path "]}," Webdrivers Common required_version":{"type":"method","name":"required_version","children":[],"call":[" normalize_version "]}," Webdrivers Common version=":{"type":"method","name":"version=","children":[],"call":[" required_version= ","Webdrivers  logger deprecate "," class ","Webdrivers  logger "]}," Webdrivers Common version":{"type":"method","name":"version","children":[],"call":[" required_version ","Webdrivers  logger deprecate "," class ","Webdrivers  logger "]}," Webdrivers cache_time":{"type":"method","name":"cache_time","children":[],"call":["(or\n  (ivar :@cache_time)\n  (send\n    (const nil :ENV) :[]\n    (str \"WD_CACHE_TIME\"))) to_i ","ENV  [] ","ENV  [] to_i ","(or\n  (or\n    (send\n      (const nil :ENV) :[]\n      (str \"WD_CACHE_TIME\"))\n    (ivar :@cache_time))\n  (const nil :DEFAULT_CACHE_TIME)) to_i ","@cache_time to_i "]}," Webdrivers Chromedriver sufficient_binary?":{"type":"method","name":"sufficient_binary?","children":[],"call":[" current_version segments first == "," release_version segments first "," release_version segments "," release_version "," current_version segments first "," current_version segments "," current_version "," current_version < "," normalize_version "," current_build_version == "," browser_build_version "," current_build_version "]}," Webdrivers Chromedriver chrome_on_win":{"type":"method","name":"chrome_on_win","children":[],"call":["System  call strip ","System  call ","Webdrivers  logger debug ","Webdrivers  logger ","RUBY_PLATFORM  == "," browser_binary "]}," Webdrivers cache_time=":{"type":"method","name":"cache_time=","children":[],"call":["Common  cache_warning= "]}," Webdrivers install_dir":{"type":"method","name":"install_dir","children":[],"call":["File  expand_path ","File  join ","ENV  [] "]}," Webdrivers ChromeFinder mac_version":{"type":"method","name":"mac_version","children":[],"call":["System  call ","Shellwords  escape "]}," Webdrivers ChromeFinder linux_version":{"type":"method","name":"linux_version","children":[],"call":["System  call ","Shellwords  escape "," wsl_version ","System  wsl? ","System  wsl_v1? "]}," Webdrivers ChromeFinder win_version":{"type":"method","name":"win_version","children":[],"call":["System  call "]}," Webdrivers ChromeFinder linux_location":{"type":"method","name":"linux_location","children":[],"call":["File  exist? ","files each ","directories each ","System  escape_path "," wsl_location ","System  wsl? ","System  wsl_v1? "]}," Webdrivers ChromeFinder mac_location":{"type":"method","name":"mac_location","children":[],"call":["File  exist? ","files each ","directories each ","File  expand_path ","System  escape_path "]}," Webdrivers ChromeFinder win_location":{"type":"method","name":"win_location","children":[],"call":["File  exist? ","ENV  [] ","envs each ","directories each ","Selenium WebDriver Chrome  path ","Selenium WebDriver Chrome  path nil? ","System  escape_path ","option gsub ","RUBY_PLATFORM  == ","option gsub  gsub "]}," Webdrivers ChromeFinder version":{"type":"method","name":"version","children":[],"call":["version [] ","Webdrivers  logger debug ","Webdrivers  logger "," raise ","version empty? ","version nil? "," send ","System  platform ","Selenium WebDriver Chrome  path "," location "," send  [] "," send  empty? "," send  nil? "]}," Webdrivers System escape_path":{"type":"method","name":"escape_path","children":[],"call":["Shellwords  escape ","path tr "," platform == "," platform "]}," Selenium WebDriver EdgeChrome driver_path":{"type":"method","name":"driver_path","children":[],"call":[]}," Webdrivers Edgedriver failed_to_find_message":{"type":"method","name":"failed_to_find_message","children":[],"call":[" base_url ","version > "," normalize_version ","str encode ","Network  get ","URI  join ","Network  get  encode "]}," Webdrivers Edgedriver latest_point_release":{"type":"method","name":"latest_point_release","children":[],"call":[" raise ","Webdrivers  logger debug ","Webdrivers  logger "," failed_to_find_message ","latest_release >= "," normalize_version ","str encode ","Network  get ","URI  join ","version segments [] ","version segments "," base_url "," normalize_version  >= ","Network  get  encode "]}," Webdrivers Edgedriver remove":{"type":"method","name":"remove","children":[],"call":[]}," Webdrivers Edgedriver browser_version":{"type":"method","name":"browser_version","children":[],"call":[" normalize_version ","EdgeFinder  version "]}," Webdrivers EdgeFinder mac_version":{"type":"method","name":"mac_version","children":[],"call":["System  call "]}," Webdrivers EdgeFinder linux_version":{"type":"method","name":"linux_version","children":[],"call":["System  call "]}," Webdrivers EdgeFinder win_version":{"type":"method","name":"win_version","children":[],"call":["System  call "]}," Webdrivers EdgeFinder linux_location":{"type":"method","name":"linux_location","children":[],"call":[" raise ","File  exist? ","files each ","directories each "]}," Webdrivers EdgeFinder mac_location":{"type":"method","name":"mac_location","children":[],"call":["File  exist? ","files each ","directories each ","File  expand_path "]}," Webdrivers EdgeFinder win_location":{"type":"method","name":"win_location","children":[],"call":["File  exist? ","ENV  [] ","envs each ","directories each "]}," Webdrivers EdgeFinder user_defined_location":{"type":"method","name":"user_defined_location","children":[],"call":["ENV  [] ","Webdrivers  logger debug ","Webdrivers  logger ","ENV  [] nil? ","Selenium WebDriver EdgeChrome  path ","Selenium WebDriver Edge  path "]}," Webdrivers EdgeFinder location":{"type":"method","name":"location","children":[],"call":[" send ","System  platform "," user_defined_location "," raise ","edge_bin nil? "]}," Webdrivers EdgeFinder version":{"type":"method","name":"version","children":[],"call":["version [] ","Webdrivers  logger debug ","Webdrivers  logger "," raise ","version empty? ","version nil? "," send "," location ","System  platform "," send  [] "," send  empty? "," send  nil? "]}," Webdrivers Chromedriver browser_version":{"type":"method","name":"browser_version","children":[],"call":[" normalize_version ","ChromeFinder  version "]}," Webdrivers ChromeFinder user_defined_location":{"type":"method","name":"user_defined_location","children":[],"call":["ENV  [] ","Webdrivers  logger debug ","Webdrivers  logger ","ENV  [] nil? ","Selenium WebDriver Chrome  path "]}," Webdrivers ChromeFinder location":{"type":"method","name":"location","children":[],"call":[" send ","System  platform "," user_defined_location "," raise ","chrome_bin nil? "]}," Webdrivers System to_wsl_path":{"type":"method","name":"to_wsl_path","children":[],"call":[" call chomp "," call "]}," Webdrivers System to_win32_path":{"type":"method","name":"to_win32_path","children":[],"call":[" call chomp "," call ","(str \"[a-z]:\\\\\\\\\") match? "]}," Webdrivers System wsl?":{"type":"method","name":"wsl?","children":[],"call":["File  open read include? ","File  open read ","File  open "," platform == "," platform ","File  open read downcase include? ","File  open read downcase "]}," Webdrivers Chromedriver browser_build_version":{"type":"method","name":"browser_build_version","children":[],"call":[" normalize_version "," browser_version segments [] join "," browser_version segments [] "," browser_version segments "," browser_version "]}," Webdrivers Chromedriver current_build_version":{"type":"method","name":"current_build_version","children":[],"call":[" normalize_version "," current_version segments [] join "," current_version segments [] "," current_version segments "," current_version "," current_version nil? "]}," Webdrivers ChromeFinder wsl_version":{"type":"method","name":"wsl_version","children":[],"call":[" win_version ","System  to_win32_path "]}," Webdrivers ChromeFinder wsl_location":{"type":"method","name":"wsl_location","children":[],"call":["File  exist? ","System  to_wsl_path ","roots each ","directories each ","ENV  [] match to_a ","ENV  [] match ","ENV  [] "]}," Webdrivers IEdriver download_manifest":{"type":"method","name":"download_manifest","children":[],"call":["item include? ","items select ","doc css collect ","doc css ","Nokogiri XML  parse ","Network  get "," base_url ","asset [] include? ","asset [] ","all_assets select ","(send\n  (send\n    (const nil :JSON) :parse\n    (lvar :json)) :map) flatten ","release [] ","JSON  parse map ","JSON  parse ","doc css collect  select ","Nokogiri XML  parse  css collect ","Nokogiri XML  parse  css ","(send\n  (send\n    (const nil :JSON) :parse\n    (lvar :json)) :map) flatten  select ","(send\n  (send\n    (const nil :JSON) :parse\n    (lvar :Network  get )) :map) flatten "]}," Webdrivers System wsl_v1?":{"type":"method","name":"wsl_v1?","children":[],"call":["File  open read include? ","File  open read ","File  open "," platform == "," platform "]}," Webdrivers System apple_m1_architecture?":{"type":"method","name":"apple_m1_architecture?","children":[],"call":["Webdrivers  logger debug ","Webdrivers  logger ","RUBY_PLATFORM  include? "," platform == "," platform "]}," Webdrivers Edgedriver driver_filename":{"type":"method","name":"driver_filename","children":[],"call":[" raise "," apple_m1_compatible? ","System  platform == ","System  platform ","System  bitsize ","System  wsl_v1? "," linux_compatible? "]}," Webdrivers Edgedriver apple_m1_compatible?":{"type":"method","name":"apple_m1_compatible?","children":[],"call":["Webdrivers  logger debug ","Webdrivers  logger ","driver_version >= "," normalize_version ","System  apple_m1_architecture? "]}," Webdrivers Chromedriver driver_filename":{"type":"method","name":"driver_filename","children":[],"call":[" raise "," apple_m1_compatible? ","System  platform == ","System  platform ","System  wsl_v1? "," apple_filename "]}," Webdrivers Chromedriver apple_m1_compatible?":{"type":"method","name":"apple_m1_compatible?","children":[],"call":["Webdrivers  logger debug ","Webdrivers  logger ","driver_version >= "," normalize_version ","System  apple_m1_architecture? "]}," Webdrivers IEdriver direct_url":{"type":"method","name":"direct_url","children":[],"call":[" downloads [] "," downloads "]}," Webdrivers Edgedriver direct_url":{"type":"method","name":"direct_url","children":[],"call":[" driver_filename "," base_url "]}," Webdrivers Edgedriver linux_compatible?":{"type":"method","name":"linux_compatible?","children":[],"call":["driver_version >= "," normalize_version ","System  platform == ","System  platform "]}," Webdrivers Common download_version":{"type":"method","name":"download_version","children":[],"call":[" required_version "," latest_version "," required_version == "]}," Webdrivers Chromedriver direct_url":{"type":"method","name":"direct_url","children":[],"call":[" driver_filename "," base_url "," direct_url_from_api "]}," Webdrivers Chromedriver apple_filename":{"type":"method","name":"apple_filename","children":[],"call":["driver_version >= "," normalize_version "," apple_m1_compatible? ","driver_version < "]}," Webdrivers System driver_and_path":{"type":"method","name":"driver_and_path","children":[],"call":["File  join ","File  basename ","driver name ","Dir  pwd ","File  basename == ","e name ","zip_file entries find ","zip_file entries ","zip_file get_entry ","zip_file get_entry  name "]}," Webdrivers Chromedriver direct_url_from_api":{"type":"method","name":"direct_url_from_api","children":[],"call":["(send\n  (block\n    (send\n      (block\n        (send\n          (block\n            (send\n              (block\n                (send\n                  (send\n                    (const nil :URI) :join\n                    (send nil :chrome_for_testing_base_url)\n                    (str \"known-good-versions-with-downloads.json\")) :then)\n                (args\n                  (arg :url))\n                (send\n                  (const nil :Network) :get\n                  (lvar :url))) :then)\n            (args\n              (arg :res))\n            (send\n              (const nil :JSON) :parse\n              (lvar :res)\n              (hash\n                (pair\n                  (sym :symbolize_names)\n                  (true))))) :then)\n        (args\n          (arg :json))\n        (block\n          (send\n            (send\n              (lvar :json) :[]\n              (sym :versions)) :find)\n          (args\n            (arg :e))\n          (send\n            (send\n              (lvar :e) :[]\n              (sym :version)) :==\n            (send\n              (lvar :driver_version) :to_s)))) :then)\n    (args\n      (arg :json))\n    (send\n      (lvar :json) :dig\n      (sym :downloads)\n      (sym :chromedriver))) :then) then ","e [] == "," driver_filename ","e [] ","json find ","(send\n  (block\n    (send\n      (block\n        (send\n          (block\n            (send\n              (send\n                (const nil :URI) :join\n                (send nil :chrome_for_testing_base_url)\n                (str \"known-good-versions-with-downloads.json\")) :then)\n            (args\n              (arg :url))\n            (send\n              (const nil :Network) :get\n              (lvar :url))) :then)\n        (args\n          (arg :res))\n        (send\n          (const nil :JSON) :parse\n          (lvar :res)\n          (hash\n            (pair\n              (sym :symbolize_names)\n              (true))))) :then)\n    (args\n      (arg :json))\n    (block\n      (send\n        (send\n          (lvar :json) :[]\n          (sym :versions)) :find)\n      (args\n        (arg :e))\n      (send\n        (send\n          (lvar :e) :[]\n          (sym :version)) :==\n        (send\n          (lvar :driver_version) :to_s)))) :then) then ","json dig ","(send\n  (block\n    (send\n      (block\n        (send\n          (send\n            (const nil :URI) :join\n            (send nil :chrome_for_testing_base_url)\n            (str \"known-good-versions-with-downloads.json\")) :then)\n        (args\n          (arg :url))\n        (send\n          (const nil :Network) :get\n          (lvar :url))) :then)\n    (args\n      (arg :res))\n    (send\n      (const nil :JSON) :parse\n      (lvar :res)\n      (hash\n        (pair\n          (sym :symbolize_names)\n          (true))))) :then) then ","driver_version to_s ","json [] find ","json [] ","(send\n  (block\n    (send\n      (send\n        (const nil :URI) :join\n        (send nil :chrome_for_testing_base_url)\n        (str \"known-good-versions-with-downloads.json\")) :then)\n    (args\n      (arg :url))\n    (send\n      (const nil :Network) :get\n      (lvar :url))) :then) then ","JSON  parse ","(send\n  (send\n    (const nil :URI) :join\n    (send nil :chrome_for_testing_base_url)\n    (str \"known-good-versions-with-downloads.json\")) :then) then ","Network  get ","URI  join then ","URI  join "," chrome_for_testing_base_url "," normalize_version < "," normalize_version "]}," Webdrivers Chromedriver latest_patch_version":{"type":"method","name":"latest_patch_version","children":[],"call":[" raise "," normalize_version ","(send\n  (block\n    (send\n      (block\n        (send\n          (send\n            (const nil :URI) :join\n            (send nil :chrome_for_testing_base_url)\n            (str \"latest-patch-versions-per-build.json\")) :then)\n        (args\n          (arg :url))\n        (send\n          (const nil :Network) :get\n          (lvar :url))) :then)\n    (args\n      (arg :res))\n    (send\n      (const nil :JSON) :parse\n      (lvar :res)\n      (hash\n        (pair\n          (sym :symbolize_names)\n          (true))))) :then) then ","json dig ","(send\n  (block\n    (send\n      (send\n        (const nil :URI) :join\n        (send nil :chrome_for_testing_base_url)\n        (str \"latest-patch-versions-per-build.json\")) :then)\n    (args\n      (arg :url))\n    (send\n      (const nil :Network) :get\n      (lvar :url))) :then) then ","JSON  parse ","(send\n  (send\n    (const nil :URI) :join\n    (send nil :chrome_for_testing_base_url)\n    (str \"latest-patch-versions-per-build.json\")) :then) then ","Network  get ","URI  join then ","URI  join "," chrome_for_testing_base_url "]}," Webdrivers Chromedriver chrome_for_testing_base_url":{"type":"method","name":"chrome_for_testing_base_url","children":[],"call":[]}}