{" Coveralls should_run?":{"type":"method","name":"should_run?","children":[],"call":[" puts ","[Coveralls] Creating a new job on Coveralls from local coverage results. cyan ","ENV  [] ","[Coveralls] Outside the Travis environment, not sending data. yellow ","Coveralls Output  puts "," run_locally "," testing "," will_run? "]}," Coveralls start!":{"type":"method","name":"start!","children":[],"call":[" SimpleCov  start "," puts ","[Coveralls] Using SimpleCov's default settings. green "," instance_eval ","[Coveralls] Using SimpleCov settings defined in block. green ","(str \"[Coveralls] Using SimpleCov's '\") green ","@@adapter == "," SimpleCov  add_filter "," block_given? ","Coveralls Output  puts "]}," Coveralls setup!":{"type":"method","name":"setup!","children":[],"call":[" puts ","[Coveralls] Couldn't find an appropriate adapter. red ","[Coveralls] Set up the SimpleCov formatter. green "," SimpleCov  formatter= ","@@adapter == "," require ","Coveralls Output  puts "]}," Coveralls wear!":{"type":"method","name":"wear!","children":[],"call":[" start! "," setup! "]}," Coveralls SimpleCov Formatter short_filename":{"type":"method","name":"short_filename","children":[],"call":["filename gsub gsub ","filename gsub "," SimpleCov  root ","filename gsub gsub  gsub gsub ","filename gsub gsub  gsub "]}," Coveralls SimpleCov Formatter output_message":{"type":"method","name":"output_message","children":[],"call":["result covered_percent round ","result covered_percent "]}," Coveralls SimpleCov Formatter format":{"type":"method","name":"format","children":[],"call":[" puts ","e response to_s red ","e response to_s ","e response ","e respond_to? ","line red ","e backtrace each ","e backtrace ","e message red ","e message ","e class to_s red ","e class to_s ","e class ","Coveralls encountered an exception: red ","API  post_json ","result created_at ","result command_name downcase ","result command_name ","source_files << ","properties []= ","file coverage "," short_filename ","file filename ","File  open read ","File  open ","result files each ","result files "," print ","cov red ","cov yellow ","f covered_percent > ","f covered_percent ","cov green ","f covered_percent round "," =>  white ","(begin\n  (send nil :short_filename\n    (send\n      (lvar :f) :filename))) cyan ","f filename ","[Coveralls] There are no covered files. yellow ","result files length > ","result files length ","Coveralls  should_run? ","ENV  [] "," display_error "," output_message "," display_result ","Coveralls  noisy? ","Coveralls Output  puts "," get_source_files "]}," Coveralls Configuration relevant_env":{"type":"method","name":"relevant_env","children":[],"call":[]}," Coveralls Configuration git":{"type":"method","name":"git","children":[],"call":[]}," Coveralls Configuration rails_root":{"type":"method","name":"rails_root","children":[],"call":[]}," Coveralls Configuration simplecov_root":{"type":"method","name":"simplecov_root","children":[],"call":[]}," Coveralls Configuration pwd":{"type":"method","name":"pwd","children":[],"call":[]}," Coveralls Configuration root":{"type":"method","name":"root","children":[],"call":[]}," Coveralls Configuration configuration_path":{"type":"method","name":"configuration_path","children":[],"call":[]}," Coveralls Configuration configuration":{"type":"method","name":"configuration","children":[],"call":[]}," Coveralls CommandLine ensure_can_run_locally!":{"type":"method","name":"ensure_can_run_locally!","children":[],"call":[" puts ","Please try again when you get your act together. red ","Coveralls cannot run locally because no repo_secret_token is set in .coveralls.yml red ","config [] nil? ","config [] ","Coveralls Configuration  configuration ","Coveralls Output  puts ","Coveralls Configuration  configuration  [] nil? ","Coveralls Configuration  configuration  [] ","Coveralls Configuration  Coveralls Configuration  configuration uration "]}," Coveralls CommandLine rspec":{"type":"method","name":"rspec","children":[],"call":["ENV  []= "," exec "," ensure_can_run_locally! "]}," Coveralls API apified_hash":{"type":"method","name":"apified_hash","children":[],"call":[]}," Coveralls API hash_to_file":{"type":"method","name":"hash_to_file","children":[],"call":[]}," Coveralls API endpoint_to_url":{"type":"method","name":"endpoint_to_url","children":[],"call":[]}," Coveralls API post_json":{"type":"method","name":"post_json","children":[],"call":[]}," Coveralls Configuration yaml_config":{"type":"method","name":"yaml_config","children":[],"call":[]}," Coveralls CommandLine open_token_based_url":{"type":"method","name":"open_token_based_url","children":[],"call":[" puts ","url gsub ","config [] ","Coveralls Configuration  configuration ","Coveralls Output  puts ","url gsub  gsub ","Coveralls Configuration  configuration  [] ","Coveralls Configuration  Coveralls Configuration  configuration uration "]}," Coveralls CommandLine last":{"type":"method","name":"last","children":[],"call":[" open_token_based_url "]}," Coveralls CommandLine service":{"type":"method","name":"service","children":[],"call":[" open_token_based_url "]}," Coveralls CommandLine open":{"type":"method","name":"open","children":[],"call":[" open_token_based_url "]}," Coveralls CommandLine report":{"type":"method","name":"report","children":[],"call":["ENV  []= "," exec "]}," Coveralls CommandLine push":{"type":"method","name":"push","children":[],"call":["ENV  []= "," exec "," ensure_can_run_locally! ","YAML  load_file [] ","YAML  load_file ","File  exists? ","File  exist? "," system ","cmds each "]}," Coveralls CommandLine version":{"type":"method","name":"version","children":[],"call":[" puts ","Coveralls Output  puts "]}," Coveralls API disable_net_blockers!":{"type":"method","name":"disable_net_blockers!","children":[],"call":[]}," Coveralls noisy?":{"type":"method","name":"noisy?","children":[],"call":["ENV  [] "," noisy "]}," Coveralls SimpleCov Formatter display_error":{"type":"method","name":"display_error","children":[],"call":[" puts ","e response to_s red ","e response to_s ","e response ","e respond_to? ","line red ","e backtrace each ","e backtrace ","e message red ","e message ","e class to_s red ","e class to_s ","e class ","Coveralls encountered an exception: red ","Coveralls Output  puts "]}," Coveralls SimpleCov Formatter display_result":{"type":"method","name":"display_result","children":[],"call":[" puts "," print ","cov red ","cov yellow ","f covered_percent > ","f covered_percent ","cov green ","f covered_percent round "," =>  white ","(begin\n  (send nil :short_filename\n    (send\n      (lvar :f) :filename))) cyan "," short_filename ","f filename ","result files each ","result files ","[Coveralls] There are no covered files. yellow ","result files length > ","result files length ","Coveralls Output  print "," short_filename to_s ","Coveralls Output  puts "]}," Coveralls push!":{"type":"method","name":"push!","children":[],"call":["Coveralls SimpleCov Formatter  new format ","Coveralls SimpleCov Formatter  new "," SimpleCov ResultMerger  merged_result "," require "," SimpleCov ResultMerger  merged_ SimpleCov ResultMerger  merged_result  "]}," Coveralls wear_merged!":{"type":"method","name":"wear_merged!","children":[],"call":[" start! "," SimpleCov  formatter= "," require "]}," Coveralls RakeTask initialize":{"type":"method","name":"initialize","children":[],"call":["Coveralls  push! "," require "," task "," desc "," namespace "]}," Coveralls NilFormatter format":{"type":"method","name":"format","children":[],"call":[]}," Coveralls Output print":{"type":"method","name":"print","children":[],"call":["Kernel  print "," format ","(or\n  (send\n    (lvar :options) :[]\n    (sym :output))\n  (send nil :output)) print "," output ","options [] "," silent? "]}," Coveralls Output puts":{"type":"method","name":"puts","children":[],"call":["Kernel  puts "," format ","(or\n  (send\n    (lvar :options) :[]\n    (sym :output))\n  (send nil :output)) puts "," output ","options [] "," silent? "]}," Coveralls Output format":{"type":"method","name":"format","children":[],"call":["Term ANSIColor  send ","options [] to_sym ","options [] ","Term ANSIColor  respond_to? ","color to_sym ","options [] split reverse_each ","options [] split "," require "," no_color? "]}," Coveralls will_run?":{"type":"method","name":"will_run?","children":[],"call":["ENV  [] "]}," Coveralls Output silent?":{"type":"method","name":"silent?","children":[],"call":["ENV  [] "]}," Coveralls Output output":{"type":"method","name":"output","children":[],"call":[]}," Coveralls Output no_color?":{"type":"method","name":"no_color?","children":[],"call":[]}," Coveralls Configuration set_service_params_for_generic_ci":{"type":"method","name":"set_service_params_for_generic_ci","children":[],"call":[]}," Coveralls Configuration set_service_params_for_coveralls_local":{"type":"method","name":"set_service_params_for_coveralls_local","children":[],"call":[]}," Coveralls Configuration set_service_params_for_jenkins":{"type":"method","name":"set_service_params_for_jenkins","children":[],"call":[]}," Coveralls Configuration set_service_params_for_semaphore":{"type":"method","name":"set_service_params_for_semaphore","children":[],"call":[]}," Coveralls Configuration set_service_params_for_circleci":{"type":"method","name":"set_service_params_for_circleci","children":[],"call":[]}," Coveralls Configuration set_service_params_for_travis":{"type":"method","name":"set_service_params_for_travis","children":[],"call":[]}," Coveralls Configuration set_service_params_for_tddium":{"type":"method","name":"set_service_params_for_tddium","children":[],"call":[]}," Coveralls Configuration set_service_params_for_appveyor":{"type":"method","name":"set_service_params_for_appveyor","children":[],"call":[]}," Coveralls Configuration set_standard_service_params_for_generic_ci":{"type":"method","name":"set_standard_service_params_for_generic_ci","children":[],"call":[]}," Coveralls SimpleCov Formatter get_source_files":{"type":"method","name":"get_source_files","children":[],"call":["source_files << ","properties [] []= ","properties [] ","line skipped? ","file lines each_with_index ","file lines ","properties []= ","file coverage dup ","file coverage "," short_filename ","file filename ","File  open read ","File  open ","result files each ","result files "]}," Coveralls API build_request_body":{"type":"method","name":"build_request_body","children":[],"call":[]}," Coveralls API build_request":{"type":"method","name":"build_request","children":[],"call":[]}," Coveralls API build_client":{"type":"method","name":"build_client","children":[],"call":[]}," Coveralls API endpoint_to_uri":{"type":"method","name":"endpoint_to_uri","children":[],"call":[]}," Coveralls Configuration set_service_params_for_gitlab":{"type":"method","name":"set_service_params_for_gitlab","children":[],"call":[]}}