{" Guard Spork run_on_change":{"type":"method","name":"run_on_change","children":[],"call":[" runner launch_sporks "," runner "," runner kill_sporks ","paths_or_symbol is_a? "]}," Guard Spork reload":{"type":"method","name":"reload","children":[],"call":[" runner launch_sporks "," runner "," runner kill_sporks "," relaunch_sporks "]}," Guard Spork start":{"type":"method","name":"start","children":[],"call":[" runner launch_sporks "," runner "," runner kill_sporks "," runner kill_global_sporks "]}," Guard Spork initialize":{"type":"method","name":"initialize","children":[],"call":["Runner  new "," runner reevaluate "," runner "]}," Guard Spork Runner cucumber?":{"type":"method","name":"cucumber?","children":[],"call":[" options [] != "," options [] "," options ","File  exist? ","Dir  pwd "]}," Guard Spork Runner rspec?":{"type":"method","name":"rspec?","children":[],"call":[" options [] != "," options [] "," options ","File  exist? ","Dir  pwd "]}," Guard Spork Runner bundler?":{"type":"method","name":"bundler?","children":[],"call":[" options [] != "," options [] "," options ","File  exist? ","Dir  pwd "]}," Guard Spork Runner sporked_gems":{"type":"method","name":"sporked_gems","children":[],"call":["gems join ","gems << "," cucumber? "," rspec? "," test_unit? "]}," Guard Spork Runner verify_launches":{"type":"method","name":"verify_launches","children":[],"call":["Notifier  notify "," sporked_gems ","UI  error ","UI  info "," print ","TCPSocket  new close ","TCPSocket  new "," options [] "," options "," cucumber? "," rspec? "," sleep ","30 times ","UI  reset_line "," options [] times "," test_unit? "," throw ","total_time to_i ","Time  now - ","Time  now "," wait_for_launch ","instances join ","Compat UI  notify ","Compat UI  error ","Compat UI  info ","Time  now -  to_i "]}," Guard Spork Runner spork_command":{"type":"method","name":"spork_command","children":[],"call":["cmd_parts join ","cmd_parts << "," options [] "," options "," bundler? "]}," Guard Spork Runner kill_sporks":{"type":"method","name":"kill_sporks","children":[],"call":[" system ","Process  kill "," spork_pids each "," spork_pids ","UI  debug "," spork_pids join "," Process  kill "," remove_children ","alive each ","alive map join ","alive map "," find_instances select "," find_instances ","Compat UI  debug "," find_instances select  each "," find_instances select  map join "," find_instances select  map "]}," Guard Spork Runner launch_sporks":{"type":"method","name":"launch_sporks","children":[],"call":[" verify_launches "," system "," spork_command "," cucumber? "," rspec? ","UI  info "," sporked_gems ","action capitalize "," spawn_child "," options [] "," options "," spawn "," test_unit? ","instances each ","instances join "," find_instances ","Notifier  notify ","Compat UI  info "," find_instances  each "," find_instances  join "," find_ find_instances  "]}," Guard Spork Runner initialize":{"type":"method","name":"initialize","children":[],"call":["options [] ","Signal  trap "," method ","ENV  [] ","options []= ","options [] == "," initialize_spork_instances ","2 * "]}," Guard Spork stop":{"type":"method","name":"stop","children":[],"call":[" runner kill_sporks "," runner "]}," Guard Spork Runner spork_pids":{"type":"method","name":"spork_pids","children":[],"call":["@children keys ","pid to_i ","(str \"ps aux | awk '/spork/&&!/awk/{print $2;}'\") split map ","(str \"ps aux | awk '/spork/&&!/awk/{print $2;}'\") split ","ENV  [] split map ","ENV  [] split ","ENV  [] "," ps_spork_pids "," options [] "," options ","ENV  [] == "]}," Guard Spork Runner terminated_children":{"type":"method","name":"terminated_children","children":[],"call":["stats << ","pid nil? ","Process  wait2 "," loop "," Process  wait2 "]}," Guard Spork Runner reap_children":{"type":"method","name":"reap_children","children":[],"call":["UI  debug ","@children delete ","stat pid "," terminated_children each "," terminated_children "," remove_children ","stat stat pid  "]}," Guard Spork Runner swap_env":{"type":"method","name":"swap_env","children":[],"call":["ENV  []= ","old_env [] ","env each ","old_env []= ","ENV  [] "]}," Guard Spork Runner ignore_control_signals":{"type":"method","name":"ignore_control_signals","children":[],"call":["Signal  trap "]}," Guard Spork Runner spawn_child":{"type":"method","name":"spawn_child","children":[],"call":["@children []= ","UI  debug "," exec "," swap_env ","RUBY_VERSION  > "," ignore_control_signals "," raise ","pid == "," fork ","ENV  []= ","env each "," add_children "," fork  == "]}," Guard Spork Runner test_unit?":{"type":"method","name":"test_unit?","children":[],"call":[" options [] != "," options [] "," options ","File  exist? ","Dir  pwd "]}," Guard Spork Runner remove_children":{"type":"method","name":"remove_children","children":[],"call":["ENV  []= ","pids join ","pids delete "," spork_pids "," spork_pids  join "," spork_pids  delete "," spork_ spork_pids  "]}," Guard Spork Runner add_children":{"type":"method","name":"add_children","children":[],"call":["ENV  []= ","pids join "," spork_pids << "," spork_pids "," spork_pids <<  join "," spork_ spork_pids <<  << "," spork_ spork_pids <<  "]}," Guard Spork Runner ps_spork_pids":{"type":"method","name":"ps_spork_pids","children":[],"call":["pid to_i ","(str \"ps aux | awk '/spork/&&!/awk/{print $2;}'\") split map ","(str \"ps aux | awk '/spork/&&!/awk/{print $2;}'\") split ","spork_pids << ","process pid ","process cmdline =~ ","process cmdline ","Sys ProcTable  ps reduce ","Sys ProcTable  ps ","SporkInstance  windows? "]}," Guard Spork Runner wait_for_launch":{"type":"method","name":"wait_for_launch","children":[],"call":["TCPSocket  new close ","TCPSocket  new "," options [] "," options "," cucumber? "," rspec? "," test_unit? "," sleep ","wait times ","not_running empty? ","instance running? ","not_running delete_if ","instances dup "," wait_or_loop ","instances dup  empty? ","instances dup  delete_if "]}," Guard Spork SporkInstance store_pid":{"type":"method","name":"store_pid","children":[],"call":["ENV  []= ","(send\n  (const nil :ENV) :[]\n  (str \"SPORK_PIDS\")) compact join ","(send\n  (const nil :ENV) :[]\n  (str \"SPORK_PIDS\")) compact "," pid to_s "," pid ","ENV  [] "]}," Guard Spork SporkInstance use_bundler?":{"type":"method","name":"use_bundler?","children":[],"call":[" options [] "," options "]}," Guard Spork SporkInstance env_exec":{"type":"method","name":"env_exec","children":[],"call":[" exec ","ENV  []= ","environment each_pair ","RUBY_VERSION  > "]}," Guard Spork SporkInstance command":{"type":"method","name":"command","children":[],"call":["parts join ","parts << "," port "," type == "," type "," use_bundler? "," use_foreman? "," options [] "," options "," port to_s "," options [] fetch "," foreman_options? "]}," Guard Spork SporkInstance running?":{"type":"method","name":"running?","children":[],"call":["TCPSocket  new close ","TCPSocket  new "," port "," pid "," running_on_windows? "," class windows? "," class "," alive? "]}," Guard Spork SporkInstance alive?":{"type":"method","name":"alive?","children":[],"call":["Process  waitpid nil? ","Process  waitpid "," pid "," Process  waitpid nil? "," Process  waitpid "," process alive? "," process "]}," Guard Spork SporkInstance stop":{"type":"method","name":"stop","children":[],"call":["Process  kill "," pid "," Process  kill "," process stop "," process "," kill_all_child_processes "," class windows? "," class "]}," Guard Spork SporkInstance start":{"type":"method","name":"start","children":[],"call":[" store_pid "," exec "," command "," env "," fork "," env_exec ","@process pid ","@process start ","@process io inherit! ","@process io ","@process environment merge! ","@process environment ","ChildProcess  build ","(str \"cmd\") + "," class windows? "," class "," env empty? "," Guard UI  debug ","Compat UI  debug ","ChildProcess  build  pid ","ChildProcess  build  start ","ChildProcess  build  io inherit! ","ChildProcess  build  io ","ChildProcess  build  environment merge! ","ChildProcess  build  environment ","(str \"(str \"cmd\") + \") + ","(str \" command \") + "]}," Guard Spork SporkInstance to_s":{"type":"method","name":"to_s","children":[],"call":[" type to_s "," type "]}," Guard Spork SporkInstance initialize":{"type":"method","name":"initialize","children":[],"call":[]}," Guard Spork Runner detect_cucumber":{"type":"method","name":"detect_cucumber","children":[],"call":["File  exist? "]}," Guard Spork Runner detect_rspec":{"type":"method","name":"detect_rspec","children":[],"call":["File  exist? "," options [] ! "," options [] "," options "," options [] nil? "]}," Guard Spork Runner detect_test_unit":{"type":"method","name":"detect_test_unit","children":[],"call":["File  exist? "]}," Guard Spork Runner detect_bundler":{"type":"method","name":"detect_bundler","children":[],"call":["File  exist? "]}," Guard Spork Runner should_use?":{"type":"method","name":"should_use?","children":[],"call":[" options [] "," options "," send "," options [] nil? "]}," Guard Spork Runner find_instances":{"type":"method","name":"find_instances","children":[],"call":["instance type == ","instance type "," spork_instances select "," spork_instances ","type nil? "]}," Guard Spork Runner kill_pids":{"type":"method","name":"kill_pids","children":[],"call":["Process  kill ","pids each ","UI  debug ","pids join "," Process  kill ","Compat UI  debug "]}," Guard Spork Runner initialize_spork_instances":{"type":"method","name":"initialize_spork_instances","children":[],"call":[" spork_instances << ","SporkInstance  new "," should_use? "," spork_instances "," options [] "," options ","(sym :rspec) each "," class spork_instance_class new "," class spork_instance_class "," class "]}," Guard Spork Runner reevaluate":{"type":"method","name":"reevaluate","children":[],"call":[" launch_sporks ","ENV  delete "," kill_pids ","ENV  [] split map ","ENV  [] split ","ENV  [] "]}," Guard Spork Runner kill_global_sporks!":{"type":"method","name":"kill_global_sporks!","children":[],"call":[" kill_pids "," ps_spork_pids "]}," Guard Spork Runner kill_global_sporks":{"type":"method","name":"kill_global_sporks","children":[],"call":[" kill_global_sporks! "," options [] "," options "," kill_pids "," ps_spork_pids "," class spork_instance_class spork_pids "," class spork_instance_class "," class "]}," Guard Spork Runner detect_minitest":{"type":"method","name":"detect_minitest","children":[],"call":[]}," Guard Spork SporkInstance use_foreman?":{"type":"method","name":"use_foreman?","children":[],"call":[" options [] "," options "]}," Guard Spork Runner detect_foreman":{"type":"method","name":"detect_foreman","children":[],"call":["File  exist? "]}," Guard Spork Runner wait_or_loop":{"type":"method","name":"wait_or_loop","children":[],"call":[" loop ","wait times "]}," Guard Spork run_on_changes":{"type":"method","name":"run_on_changes","children":[],"call":[" runner launch_sporks "," runner "," runner kill_sporks ","paths_or_symbol is_a? "]}," Guard Spork SporkInstance running_on_windows?":{"type":"method","name":"running_on_windows?","children":[],"call":["ts read_all size > ","ts read_all size ","ts read_all ","Rinda RingFinger  primary ","Rinda RingFinger  class_variable_set ","DRb  start_service ","Rinda RingFinger  primary  read_all size > ","Rinda RingFinger  primary  read_all size ","Rinda RingFinger  primary  read_all "]}," Guard Spork SporkInstance all_pids_for":{"type":"method","name":"all_pids_for","children":[],"call":[" all_pids_for ","process pid ","process ppid == ","process ppid ","Sys ProcTable  ps "]}," Guard Spork SporkInstance kill_all_child_processes":{"type":"method","name":"kill_all_child_processes","children":[],"call":["Process  kill "," all_pids_for each "," all_pids_for "," pid "]}," Guard Spork SporkInstance windows?":{"type":"method","name":"windows?","children":[],"call":[]}," Rinda RingFinger lookup_ring_any":{"type":"method","name":"lookup_ring_any","children":[],"call":["@rings push ","queue pop "," raise ","@primary nil? ","queue push "," lookup_ring ","Thread  new ","Queue  new ","Queue  new  pop ","queue pop  nil? ","Queue  new  push "]}," Guard Spork SporkWindowsInstance spork_processes":{"type":"method","name":"spork_processes","children":[],"call":[]}," Guard Spork SporkWindowsInstance all_pids_for":{"type":"method","name":"all_pids_for","children":[],"call":[" all_pids_for ","process [] ","process [] == ","processes inject "]}," Guard Spork SporkWindowsInstance kill_all_spork_processes":{"type":"method","name":"kill_all_spork_processes","children":[],"call":["Process  kill "," all_pids_for each "," all_pids_for "," class spork_processes "," class "," pid "]}," Guard Spork SporkWindowsInstance drb_ready?":{"type":"method","name":"drb_ready?","children":[],"call":["ts read_all size > ","ts read_all size ","ts read_all ","Rinda RingFinger  primary ","Rinda RingFinger  class_variable_set ","DRb  start_service ","Rinda RingFinger  primary  read_all size > ","Rinda RingFinger  primary  read_all size ","Rinda RingFinger  primary  read_all "]}," Guard Spork SporkWindowsInstance spork_pids":{"type":"method","name":"spork_pids","children":[],"call":[]}," Guard Spork SporkWindowsInstance running?":{"type":"method","name":"running?","children":[],"call":[" drb_ready? "]}," Guard Spork SporkWindowsInstance stop":{"type":"method","name":"stop","children":[],"call":[" kill_all_spork_processes "]}," Guard Spork SporkWindowsInstance command":{"type":"method","name":"command","children":[],"call":["(str \"cmd\") + "]}," Guard Spork SporkInstance spork_pids":{"type":"method","name":"spork_pids","children":[],"call":[]}," Guard Spork Runner spork_instance_class":{"type":"method","name":"spork_instance_class","children":[],"call":[]}," Guard Spork Runner windows?":{"type":"method","name":"windows?","children":[],"call":[]}," Guard Spork SporkInstance foreman_options?":{"type":"method","name":"foreman_options?","children":[],"call":[" options [] is_a? "," options [] "," options "]}," Guard Spork relaunch_sporks":{"type":"method","name":"relaunch_sporks","children":[],"call":[" runner launch_sporks "," runner "," runner kill_sporks "]}," Guard Spork run_on_modifications":{"type":"method","name":"run_on_modifications","children":[],"call":[" relaunch_sporks "]}," Guard Spork run_on_additions":{"type":"method","name":"run_on_additions","children":[],"call":[" relaunch_sporks "]}}