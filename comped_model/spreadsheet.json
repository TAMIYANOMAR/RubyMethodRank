{" Spreadsheet writer":{"type":"method","name":"writer","children":[],"call":["Excel Writer Workbook  new "]}," Spreadsheet open":{"type":"method","name":"open","children":[],"call":[" open ","File  open ","block call ","Excel Workbook  open ","io_or_path is_a? ","io_or_path respond_to? "," block_given? "]}," Spreadsheet Writer write_workbook":{"type":"method","name":"write_workbook","children":[],"call":["io write ","io rewind ","reader read ","reader rewind ","io == ","workbook io ","workbook io  read ","workbook io  rewind "]}," Spreadsheet Writer write":{"type":"method","name":"write","children":[],"call":[" write_workbook ","File  open ","@io_or_path is_a? ","@io_or_path respond_to? ","@io_or_path binmode "]}," Spreadsheet Writer initialize":{"type":"method","name":"initialize","children":[],"call":[]}," Spreadsheet Worksheet shorten":{"type":"method","name":"shorten","children":[],"call":["ary empty? ","ary pop ","ary last ! ","ary last ","ary empty? ! "]}," Spreadsheet Worksheet recalculate_dimensions":{"type":"method","name":"recalculate_dimensions","children":[],"call":["@dimensions []= ","(send\n  (lvar :compact) :collect) max ","row size ","compact collect ","(send\n  (lvar :compact) :collect) compact min ","(send\n  (lvar :compact) :collect) compact "," index_of_first ","@rows compact ","@rows size "," shorten "," puts "," caller ","@dimensions nil? ","row first_unused ","row first_used ","(send\n  (lvar :@rows compact ) :collect) max ","@rows compact  collect ","(send\n  (lvar :@rows compact ) :collect) @rows compact  min ","(send\n  (lvar :@rows compact ) :collect) @rows compact  ","@rows @rows compact  "]}," Spreadsheet Worksheet index_of_first":{"type":"method","name":"index_of_first","children":[],"call":["ary index ","ary find "]}," Spreadsheet Worksheet format_dates":{"type":"method","name":"format_dates","children":[],"call":["@workbook add_format ","row formats []= ","row formats ","Format  new "," client ","fmt datetime? ","@workbook formats find ","@workbook formats ","fmt date? ","row formats [] ","row each_with_index "]}," Spreadsheet Worksheet []=":{"type":"method","name":"[]=","children":[],"call":[" row []= "," row "]}," Spreadsheet Worksheet []":{"type":"method","name":"[]","children":[],"call":[" row [] "," row "]}," Spreadsheet Worksheet updated_from":{"type":"method","name":"updated_from","children":[],"call":[" row_updated ","row idx= "," row ","idx upto ","@rows size - ","@rows size ","index upto ","  row _updated "," row  idx= ","  row  ","@ row s size - ","@ row s size "]}," Spreadsheet Worksheet update_row":{"type":"method","name":"update_row","children":[],"call":[" row_updated ","Row  new "," shorten ","row []= ","cells size ","@rows [] "," @rows [] _updated ","@rows []  []= "," shorten  size ","@@rows [] s [] "]}," Spreadsheet Worksheet row_updated":{"type":"method","name":"row_updated","children":[],"call":[" format_dates ","@rows []= "," shorten ","opts [] ","@@rows []= s []= ","@ shorten s []= "]}," Spreadsheet Worksheet row_count":{"type":"method","name":"row_count","children":[],"call":[" dimensions [] - "," dimensions [] "," dimensions "]}," Spreadsheet Worksheet row":{"type":"method","name":"row","children":[],"call":["Row  new ","@rows [] "]}," Spreadsheet Worksheet replace_row":{"type":"method","name":"replace_row","children":[],"call":[" update_row ","cells concat ","Array  new ","row size - ","cells size ","row size ","cells size < ","@rows [] "," update_@rows []  ","@rows []  size - ","@rows []  size ","@@rows [] s [] "]}," Spreadsheet Worksheet inspect":{"type":"method","name":"inspect","children":[],"call":[" sprintf "," row_count "," object_id "," class ","(send\n  (lvar :names) :collect) join ","%s=%s % "," instance_variable_get ","names collect ","names delete "," instance_variables ","(send\n  (lvar : instance_variables ) :collect) join "," instance_variables  collect "," instance_variables  delete "," instance_(send\n  (lvar :names) :collect) join  "]}," Spreadsheet Worksheet insert_row":{"type":"method","name":"insert_row","children":[],"call":[" updated_from ","@rows insert ","Row  new "]}," Spreadsheet Worksheet encoding":{"type":"method","name":"encoding","children":[],"call":["@workbook encoding "]}," Spreadsheet Worksheet each":{"type":"method","name":"each","children":[],"call":["block call "," row ","skip upto "," dimensions [] - "," dimensions [] "," dimensions ","rows each "," block_given? ","(send\n  (send\n    (lvar :skip) :upto\n    (send\n      (send\n        (send nil :dimensions) :[]\n        (int 1)) :-\n      (int 1))) :map) to_enum ","skip upto map ","(send\n  (send\n    (lvar :skip) :upto\n    (send\n      (send\n        (send nil :dimensions) :[]\n        (int 1)) :-\n      (int 1))) :map) to_enum  each "]}," Spreadsheet Worksheet dimensions":{"type":"method","name":"dimensions","children":[],"call":[" recalculate_dimensions "]}," Spreadsheet Worksheet default_format=":{"type":"method","name":"default_format=","children":[],"call":[" add_format "]}," Spreadsheet Worksheet default_format":{"type":"method","name":"default_format","children":[],"call":["@workbook default_format "]}," Spreadsheet Worksheet delete_row":{"type":"method","name":"delete_row","children":[],"call":[" updated_from ","@rows delete_at "]}," Spreadsheet Worksheet column_count":{"type":"method","name":"column_count","children":[],"call":[" dimensions [] - "," dimensions [] "," dimensions "]}," Spreadsheet Worksheet cell":{"type":"method","name":"cell","children":[],"call":[" row [] "," row "]}," Spreadsheet Worksheet add_format":{"type":"method","name":"add_format","children":[],"call":["@workbook add_format "]}," Spreadsheet Worksheet initialize":{"type":"method","name":"initialize","children":[],"call":["opts [] "," sanitize_invalid_characters "]}," Spreadsheet Workbook writer":{"type":"method","name":"writer","children":[],"call":[" raise ","Excel Writer Workbook  new ","type == "]}," Spreadsheet Workbook write":{"type":"method","name":"write","children":[],"call":[" writer write "," writer ","io_path_or_writer write ","io_path_or_writer is_a? "]}," Spreadsheet Workbook worksheet":{"type":"method","name":"worksheet","children":[],"call":["sheet name == ","sheet name ","@worksheets find ","@worksheets [] "]}," Spreadsheet Workbook uninspect_variables":{"type":"method","name":"uninspect_variables","children":[],"call":[]}," Spreadsheet Workbook inspect":{"type":"method","name":"inspect","children":[],"call":[" sprintf "," object_id "," class ","(send\n  (send nil :uninspect_variables) :collect) join ","%s=%s[%i] % ","var size ","var class "," instance_variable_get "," uninspect_variables collect "," uninspect_variables ","(send\n  (begin\n    (send\n      (send nil :instance_variables) :-\n      (send nil :uninspect_variables))) :collect) join ","%s=%s % ","(send\n  (send nil :instance_variables) :-\n  (send nil :uninspect_variables)) collect "," instance_variables - "," instance_variables ","(send\n  (send nil :(send\n  (send nil :uninspect_variables) :collect) join _variables) :collect) join ","(send\n  (send nil :uninspect_ instance_variable_get iables) :collect) join ","(send\n  (send nil :uninspect_(send\n  (begin\n    (send\n      (send nil :instance_variables) :-\n      (send nil :uninspect_variables))) :collect) join ) :collect) join "," instance_variable_get  size "," instance_variable_get  class "," instance_ instance_variable_get iable_get "," (send\n  (send nil :uninspect_variables) :collect) join _variables collect "," uninspect_ instance_variable_get iables collect "," uninspect_(send\n  (begin\n    (send\n      (send nil :instance_variables) :-\n      (send nil :uninspect_variables))) :collect) join  collect "," (send\n  (send nil :uninspect_variables) :collect) join _variables "," uninspect_ instance_variable_get iables "," uninspect_(send\n  (begin\n    (send\n      (send nil :instance_variables) :-\n      (send nil :uninspect_variables))) :collect) join  ","(send\n  (begin\n    (send\n      (send nil :instance_variables) :-\n      (send nil :(send\n  (send nil :uninspect_variables) :collect) join _variables))) :collect) join ","(send\n  (begin\n    (send\n      (send nil :instance_ instance_variable_get iables) :-\n      (send nil :uninspect_ instance_variable_get iables))) :collect) join ","(send\n  (begin\n    (send\n      (send nil :instance_(send\n  (begin\n    (send\n      (send nil :instance_variables) :-\n      (send nil :uninspect_variables))) :collect) join ) :-\n      (send nil :uninspect_(send\n  (begin\n    (send\n      (send nil :instance_variables) :-\n      (send nil :uninspect_variables))) :collect) join ))) :collect) join ","(send\n  (send nil :instance_variables) :-\n  (send nil :(send\n  (send nil :uninspect_variables) :collect) join _variables)) collect ","(send\n  (send nil :instance_ instance_variable_get iables) :-\n  (send nil :uninspect_ instance_variable_get iables)) collect ","(send\n  (send nil :instance_(send\n  (begin\n    (send\n      (send nil :instance_variables) :-\n      (send nil :uninspect_variables))) :collect) join ) :-\n  (send nil :uninspect_(send\n  (begin\n    (send\n      (send nil :instance_variables) :-\n      (send nil :uninspect_variables))) :collect) join )) collect "," instance_ instance_variable_get iables - "," instance_(send\n  (begin\n    (send\n      (send nil :instance_variables) :-\n      (send nil :uninspect_variables))) :collect) join  - "," instance_ instance_variable_get iables "," instance_(send\n  (begin\n    (send\n      (send nil :instance_variables) :-\n      (send nil :uninspect_variables))) :collect) join  "]}," Spreadsheet Workbook format":{"type":"method","name":"format","children":[],"call":["fmt name == ","fmt name ","@formats find ","@formats [] ","Format  new "]}," Spreadsheet Workbook font":{"type":"method","name":"font","children":[],"call":["@fonts [] "]}," Spreadsheet Workbook create_worksheet":{"type":"method","name":"create_worksheet","children":[],"call":[" add_worksheet ","Worksheet  new "," client ","@worksheets size next ","@worksheets size ","opts [] "]}," Spreadsheet Workbook add_worksheet":{"type":"method","name":"add_worksheet","children":[],"call":["@worksheets push ","worksheet workbook= "]}," Spreadsheet Workbook add_format":{"type":"method","name":"add_format","children":[],"call":["@formats push uniq! ","@formats push ","@formats include? ! ","@formats include? ","@formats_set []= ","@formats_set [] ! ","@formats_set [] "]}," Spreadsheet Workbook add_font":{"type":"method","name":"add_font","children":[],"call":["@fonts push ","@fonts push uniq! "]}," Spreadsheet Workbook initialize":{"type":"method","name":"initialize","children":[],"call":["@formats push ","opts [] "," add_format "]}," Spreadsheet Row index_of_first":{"type":"method","name":"index_of_first","children":[],"call":["ary index ","ary find ","elm nil? ! ","elm nil? "]}," Spreadsheet Row inspect":{"type":"method","name":"inspect","children":[],"call":[" sprintf "," object_id "," class ","(send\n  (send nil :instance_variables) :collect) join ","%s=%s % "," instance_variable_get "," instance_variables collect "," instance_variables ","(send\n  (send nil :instance_(send\n  (send nil :instance_variables) :collect) join ) :collect) join "," instance_(send\n  (send nil :instance_variables) :collect) join  collect "," instance_(send\n  (send nil :instance_variables) :collect) join  "]}," Spreadsheet Row set_format":{"type":"method","name":"set_format","children":[],"call":["@worksheet row_updated ","@worksheet add_format ","@formats []= "]}," Spreadsheet Row format":{"type":"method","name":"format","children":[],"call":["@formats [] ","@worksheet column default_format ","@worksheet column "]}," Spreadsheet Row first_used":{"type":"method","name":"first_used","children":[],"call":[" index_of_first ","(send nil :index_of_first\n  (self)) compact min ","(send nil :index_of_first\n  (self)) compact "]}," Spreadsheet Row default_format=":{"type":"method","name":"default_format=","children":[],"call":["@worksheet add_format ","@worksheet row_updated "]}," Spreadsheet Row initialize":{"type":"method","name":"initialize","children":[],"call":[" size "," index_of_first ","cells pop ","cells last ! ","cells last ","cells empty? ! ","cells empty? "]}," Spreadsheet Row updater":{"type":"method","name":"updater","children":[],"call":["@worksheet row_updated "," define_method ","keys each "," class_eval "]}," Spreadsheet Format time?":{"type":"method","name":"time?","children":[],"call":["(str \"[hms]\") match ! ! ","(str \"[hms]\") match ! ","(str \"[hms]\") match ","@number_format to_s ","Regexp  new match ! ! ","Regexp  new match ! ","Regexp  new match ","Regexp  new "," client ","@regexes [] match ! ! ","@regexes [] match ! ","@regexes [] match ","@regexes [] "," number? ! "," number? "," matches_format? "]}," Spreadsheet Format datetime?":{"type":"method","name":"datetime?","children":[],"call":["(str \"([YMD].*[hms])|([hms].*[YMD])\") match ! ! ","(str \"([YMD].*[hms])|([hms].*[YMD])\") match ! ","(str \"([YMD].*[hms])|([hms].*[YMD])\") match ","@number_format to_s ","(str \"([YMD].*[HS])|([HS].*[YMD])\") match ! ! ","(str \"([YMD].*[HS])|([HS].*[YMD])\") match ! ","(str \"([YMD].*[HS])|([HS].*[YMD])\") match ","Regexp  new match ! ! ","Regexp  new match ! ","Regexp  new match ","Regexp  new "," client ","@regexes [] match ! ! ","@regexes [] match ! ","@regexes [] match ","@regexes [] "," number? ! "," number? "," matches_format? "]}," Spreadsheet Format date?":{"type":"method","name":"date?","children":[],"call":["(str \"[YMD]\") match ! ! ","(str \"[YMD]\") match ! ","(str \"[YMD]\") match ","@number_format to_s ","Regexp  new match ! ! ","Regexp  new match ! ","Regexp  new match ","Regexp  new "," client ","@regexes [] match ! ! ","@regexes [] match ! ","@regexes [] match ","@regexes [] "," number? ! "," number? "," matches_format? "]}," Spreadsheet Format center_across!":{"type":"method","name":"center_across!","children":[],"call":[" horizontal_align= "]}," Spreadsheet Format rotation=":{"type":"method","name":"rotation=","children":[],"call":[" raise ","rot % ","rot kind_of? ","rot to_s downcase == ","rot to_s downcase ","rot to_s "]}," Spreadsheet Format border_color=":{"type":"method","name":"border_color=","children":[],"call":[" send ","(sym :bottom_color=) each "]}," Spreadsheet Format border_color":{"type":"method","name":"border_color","children":[],"call":[]}," Spreadsheet Format border=":{"type":"method","name":"border=","children":[],"call":[" send ","(sym :bottom=) each "]}," Spreadsheet Format border":{"type":"method","name":"border","children":[],"call":[" left "," right "," top "," bottom "]}," Spreadsheet Format align=":{"type":"method","name":"align=","children":[],"call":[" vertical_align= "," horizontal_align= "]}," Spreadsheet Format initialize":{"type":"method","name":"initialize","children":[],"call":[" block_given? "," send ","@font send ","@font respond_to? ","opts each "," client ","Font  new ","Regexp  new "," update_format ","(str \"\\\\A\\\\[\\\\$\\\\-\\\\d+\\\\]\") to_s ","(str \"\\\\A\\\\[\\\\$\\\\-\\\\S+\\\\]\") to_s ","Font  new  send ","Font  new  respond_to? "]}," Spreadsheet Font key":{"type":"method","name":"key","children":[],"call":["key << << "," encoding to_s "," encoding ","key << "," family to_s "," family "," color to_s "," color "," underline to_s "," underline "," escapement to_s "," escapement "," shadow? "," outline? "," strikeout? "," italic? "," weight to_s "," weight "," size to_s "," size ","@name dup "," client "," build_key ","@previous_fast_key == "," fast_key ","@name dup  << << ","@name dup  << "," build_@name dup  ","@previous_fast_@name dup  == "," fast_@name dup  "]}," Spreadsheet Font bold=":{"type":"method","name":"bold=","children":[],"call":[" weight= "]}," Spreadsheet Font initialize":{"type":"method","name":"initialize","children":[],"call":[" name= "," send ","opts each "]}," Spreadsheet Worksheet write_row":{"type":"method","name":"write_row","children":[],"call":[" write "," write_column ","token is_a? ","data each ","data is_a? "]}," Spreadsheet Worksheet write_column":{"type":"method","name":"write_column","children":[],"call":[" write "," write_row ","token is_a? ","data each ","data is_a? "]}," Spreadsheet Worksheet write":{"type":"method","name":"write","children":[],"call":["row set_format ","row []= "," row "," write_row ","data is_a? "," row  set_format "," row  []= ","  row  "," write_ row  "]}," Spreadsheet Excel Workbook add_worksheet":{"type":"method","name":"add_worksheet","children":[],"call":[" create_worksheet ","name is_a? ","@changes store "]}," Spreadsheet Excel new":{"type":"method","name":"new","children":[],"call":[]}," Spreadsheet Excel ExcelCompatibleWorkbook close":{"type":"method","name":"close","children":[],"call":[" write "]}," Spreadsheet Excel ExcelCompatibleWorkbook initialize":{"type":"method","name":"initialize","children":[],"call":[]}," Spreadsheet Excel Writer Worksheet write_wsbool":{"type":"method","name":"write_wsbool","children":[],"call":[" write_op ","(lvar :value) pack ","a | ","b << ","weights shift ","bits inject "]}," Spreadsheet Excel Writer Worksheet write_saverecalc":{"type":"method","name":"write_saverecalc","children":[],"call":[" write_op ","(int 1) pack "]}," Spreadsheet Excel Writer Worksheet write_rows":{"type":"method","name":"write_rows","children":[],"call":[" write_rowblock "," row_blocks each "," row_blocks "]}," Spreadsheet Excel Writer Worksheet write_rowblock":{"type":"method","name":"write_rowblock","children":[],"call":[" write_cellblocks ","block each "," write_row "]}," Spreadsheet Excel Writer Worksheet write_row":{"type":"method","name":"write_row","children":[],"call":[" write_op ","data pack "," opcode "," binfmt + "," binfmt ","row height * ","row height ","row first_unused ","row first_used ","row idx ","row default_format ","(send\n  (lvar :row) :idx) pack ","height * ","xf_idx << ","@workbook xf_index ","@worksheet workbook ","height != ","row hidden? ","row collapsed? ","row outline_level & ","row outline_level ","(send\n  (lvar :height) :*\n  (const nil :TWIPS)) | ","height == ","(send\n  (lvar :height) :*\n  (const nil :TWIPS)) to_i | ","(send\n  (lvar :height) :*\n  (const nil :TWIPS)) to_i ","attrs pack ","attrs any? ","(send\n  (lvar :row) :idx) pack  pack ","attrs pack  pack "," bin binfmt +  + "," binrow default_format  + "," bin binfmt +  "," binrow default_format  ","row (send\n  (lvar :height) :*\n  (const nil :TWIPS)) |  * ","row height *  * ","row (send\n  (lvar :height) :*\n  (const nil :TWIPS)) to_i |  * ","row (send\n  (lvar :height) :*\n  (const nil :TWIPS)) |  ","row height *  ","row (send\n  (lvar :height) :*\n  (const nil :TWIPS)) to_i |  ","(send\n  (lvar :height) :*\n  (const nil :TWIPS)) |  * ","height *  * ","(send\n  (lvar :height) :*\n  (const nil :TWIPS)) to_i |  * ","@workbook xf_index  << ","(send\n  (lvar :height) :*\n  (const nil :TWIPS)) |  != ","height *  != ","(send\n  (lvar :height) :*\n  (const nil :TWIPS)) to_i |  != ","(send\n  (lvar :(send\n  (lvar :height) :*\n  (const nil :TWIPS)) | ) :*\n  (const nil :TWIPS)) | ","(send\n  (lvar :height * ) :*\n  (const nil :TWIPS)) | ","(send\n  (lvar :(send\n  (lvar :height) :*\n  (const nil :TWIPS)) to_i | ) :*\n  (const nil :TWIPS)) | ","(send\n  (lvar :height) :*\n  (const nil :TWIPS)) |  == ","height *  == ","(send\n  (lvar :height) :*\n  (const nil :TWIPS)) to_i |  == ","(send\n  (lvar :(send\n  (lvar :height) :*\n  (const nil :TWIPS)) | ) :*\n  (const nil :TWIPS)) to_i | ","(send\n  (lvar :height * ) :*\n  (const nil :TWIPS)) to_i | ","(send\n  (lvar :(send\n  (lvar :height) :*\n  (const nil :TWIPS)) to_i | ) :*\n  (const nil :TWIPS)) to_i | ","(send\n  (lvar :(send\n  (lvar :height) :*\n  (const nil :TWIPS)) | ) :*\n  (const nil :TWIPS)) to_i ","(send\n  (lvar :height * ) :*\n  (const nil :TWIPS)) to_i ","(send\n  (lvar :(send\n  (lvar :height) :*\n  (const nil :TWIPS)) to_i | ) :*\n  (const nil :TWIPS)) to_i "]}," Spreadsheet Excel Writer Worksheet write_rk":{"type":"method","name":"write_rk","children":[],"call":[" write_cell "," encode_rk "," encode_date ","row [] "]}," Spreadsheet Excel Writer Worksheet write_refmode":{"type":"method","name":"write_refmode","children":[],"call":[" write_op ","(lvar :mode) pack "]}," Spreadsheet Excel Writer Worksheet write_op":{"type":"method","name":"write_op","children":[],"call":["@io write ","(lvar :op) pack ","data size ","args join ","args join  size "]}," Spreadsheet Excel Writer Worksheet write_number":{"type":"method","name":"write_number","children":[],"call":[" write_cell ","row [] "," encode_date "]}," Spreadsheet Excel Writer Worksheet write_multiples":{"type":"method","name":"write_multiples","children":[],"call":[" write_mulrk "," write_mulblank ","multiples last "," write_rk ","multiples size > ","multiples size "]}," Spreadsheet Excel Writer Worksheet write_mulrk":{"type":"method","name":"write_mulrk","children":[],"call":[" write_op ","data pack ","fmt << "," opcode ","data push ","idx + ","multiples size "," encode_rk ","multiples each ","row idx ","@workbook xf_index ","row format ","@worksheet workbook ","multiples each_with_index ","idx + - ","(send\n  (lvar :fmt) :<<\n  (str \"v\")) join "]}," Spreadsheet Excel Writer Worksheet write_mulblank":{"type":"method","name":"write_mulblank","children":[],"call":[" write_op ","data pack "," opcode ","data push ","idx + ","multiples size ","@workbook xf_index ","row format ","@worksheet workbook ","multiples each_with_index ","row idx ","idx + - ","row formats [] ","row formats "]}," Spreadsheet Excel Writer Worksheet write_labelsst":{"type":"method","name":"write_labelsst","children":[],"call":[" write_cell ","@workbook sst_index ","row [] "]}," Spreadsheet Excel Writer Worksheet write_iteration":{"type":"method","name":"write_iteration","children":[],"call":[" write_op ","(lvar :its) pack "]}," Spreadsheet Excel Writer Worksheet write_from_scratch":{"type":"method","name":"write_from_scratch","children":[],"call":[" write_eof "," write_rows "," write_dimensions "," write_wsbool "," write_defaultrowheight "," write_saverecalc "," write_iteration "," write_refmode "," write_calccount "," write_bof "," write_colinfos "," write_defcolwidth "," write_hyperlink_table "," write_window2 "," write_guts "," write_merged_cells "," write_proctection "," write_margins "," write_pagesetup "]}," Spreadsheet Excel Writer Worksheet write_formula":{"type":"method","name":"write_formula","children":[],"call":[" write_op "," unicode_string ","cell value "," opcode ","cell value is_a? ","cell data ","(lvar :opts) pack ","cell shared ","(int 2) pack ","(int 3) pack ","value code ","(int 1) pack ","(int 0) pack ","(lvar :value) pack ","(send\n  (lvar :row) :idx) pack ","row idx ","row [] ","@workbook xf_index ","row format ","@worksheet workbook ","row formats [] ","row formats ","cell cell value  ","row []  value ","cell cell value  is_a? ","row []  value is_a? ","row []  data ","row []  shared ","cell value  code ","(lvar :cell value ) pack "]}," Spreadsheet Excel Writer Worksheet write_eof":{"type":"method","name":"write_eof","children":[],"call":[" write_op "]}," Spreadsheet Excel Writer Worksheet write_dimensions":{"type":"method","name":"write_dimensions","children":[],"call":[" write_op ","@worksheet dimensions pack "," binfmt ","@worksheet dimensions "]}," Spreadsheet Excel Writer Worksheet write_defaultrowheight":{"type":"method","name":"write_defaultrowheight","children":[],"call":[" write_op ","data pack "]}," Spreadsheet Excel Writer Worksheet write_changes":{"type":"method","name":"write_changes","children":[],"call":["@io write ","reader read ","endpos - ","reader seek ","pos + "," send "," write_rowblock ","row idx == ","row idx ","rows any? ","blocks find ","key is_a? ","pos - ","(send\n  (send\n    (lvar :offsets) :invert) :sort_by) each ","offsets invert sort_by ","offsets invert ","offsets store ","sst_status == ","@worksheet changes include? ","@worksheet changes ","@worksheet offsets each ","@worksheet offsets ","reader pos "," row_blocks ","@worksheet offset ","blocks delete ","pos > ","work each ","work sort_by ","work store ","idx <= ","row_offsets find ","work include? ! ","work include? ","changes include? ","@worksheet each ","row_offsets reverse! ","row_offsets sort! ","row_offsets push "," warn ","changes size > ","changes size "," write_guts "," write_colinfos ","@worksheet row outline_level= ","@worksheet row outline_level ","@worksheet row ","@worksheet row outline_level > ","@worksheet row_count times ","@worksheet row_count "," write_merged_cells "," write_margins "," write_pagesetup "," row_blocks  find ","row idx  is_a? ","@offsets invert sheet changes include? ","@worksheet @worksheet changes  include? ","@offsets invert sheet changes ","@worksheet @worksheet changes  ","@offsets invert sheet offsets each ","@offsets invert sheet offsets "," row_ row_blocks  ","@offsets invert sheet offset "," row_blocks  delete ","offsets invert  each ","offsets invert  sort_by ","offsets invert  store ","offsets invert  include? ! ","offsets invert  include? ","@worksheet changes  include? ","@offsets invert sheet each ","@worksheet changes  size > ","@worksheet changes  size ","@offsets invert sheet row outline_level= ","@offsets invert sheet row outline_level ","@offsets invert sheet row ","@offsets invert sheet row outline_level > ","@offsets invert sheet row_count times ","@offsets invert sheet row_count "]}," Spreadsheet Excel Writer Worksheet write_cellblocks":{"type":"method","name":"write_cellblocks","children":[],"call":[" write_multiples "," write_rk "," write_formula ","row [] is_a? ","row [] ","nxt < ","row size ","multiples push "," write_number ","cell to_s length > ","cell to_s length ","cell to_s ","cell is_a? "," write_labelsst "," write_boolerr "," write_blank ","row [] nil? ","idx + ","cell abs < ","cell abs ","multiples last is_a? ! ","multiples last is_a? ","cell class ","multiples last ","row each_with_index ","cell == ","cell abs > "," need_number? ","row formatted ","row formatted  [] is_a? ","row formatted  [] ","idx +  < ","row formatted  size ","row formatted  [] nil? ","row formatted  each_with_index ","  need_number? ? ","row formatted  formatted "]}," Spreadsheet Excel Writer Worksheet write_cell":{"type":"method","name":"write_cell","children":[],"call":[" write_op ","data pack "," binfmt "," opcode ","(send\n  (lvar :row) :idx) concat ","row idx ","@workbook xf_index ","row format ","@worksheet workbook ","row formats [] ","row formats ","(send\n  (lvar :row) :idx) concat  pack "]}," Spreadsheet Excel Writer Worksheet write_calccount":{"type":"method","name":"write_calccount","children":[],"call":[" write_op ","(lvar :count) pack "]}," Spreadsheet Excel Writer Worksheet write_boolerr":{"type":"method","name":"write_boolerr","children":[],"call":[" write_cell ","value code ","value is_a? ","row [] ","row []  code ","row []  is_a? "]}," Spreadsheet Excel Writer Worksheet write_bof":{"type":"method","name":"write_bof","children":[],"call":[" write_op ","data pack "]}," Spreadsheet Excel Writer Worksheet write_blank":{"type":"method","name":"write_blank","children":[],"call":[" write_cell "]}," Spreadsheet Excel Writer Worksheet strings":{"type":"method","name":"strings","children":[],"call":["memo concat ","cell is_a? ","row select ","@worksheet inject ","cell empty? ! ","cell empty? ","memo [] ","row each ","Hash  new "]}," Spreadsheet Excel Writer Worksheet size":{"type":"method","name":"size","children":[],"call":["@io size "]}," Spreadsheet Excel Writer Worksheet row_blocks":{"type":"method","name":"row_blocks","children":[],"call":["blocks last << ","blocks last ","blocks << ","idx % == ","idx % ","(send\n  (ivar :@worksheet) :reject) each_with_index ","row empty? ","@worksheet reject "]}," Spreadsheet Excel Writer Worksheet name":{"type":"method","name":"name","children":[],"call":[" unicode_string ","@worksheet name "]}," Spreadsheet Excel Writer Worksheet encode_rk":{"type":"method","name":"encode_rk","children":[],"call":["value | | ","value | ","(lvar :value) pack unpack ","(lvar :value) pack ","shifted unpack ","shifted reverse! ","value is_a? ","higher to_i ","higher == ","value * ","higher < ","higher is_a? ","higher to_i  | | ","higher to_i  | ","(lvar :higher to_i ) pack unpack ","(lvar :higher to_i ) pack ","(lvar :value) pack  unpack ","(lvar :value) pack  reverse! ","higher to_i  is_a? ","value *  to_i ","value *  == ","higher to_i  * ","value *  < ","value *  is_a? "]}," Spreadsheet Excel Writer Worksheet encode_date":{"type":"method","name":"encode_date","children":[],"call":["date > ","date - ","@worksheet workbook date_base ","@worksheet workbook ","DateTime  new ","date sec ","date min ","date hour ","date day ","date month ","date year ","date is_a? ","@workbook date_base ","LEAP_ERROR  > ","DateTime  new  > ","DateTime  new  - ","@worksheet workbook DateTime  new _base ","@worksheet workbook date_@workbook date_base  ","DateTime  new  sec ","DateTime  new  min ","DateTime  new  hour ","DateTime  new  day ","DateTime  new  month ","DateTime  new  year ","DateTime  new  is_a? ","@workbook DateTime  new _base ","@workbook date_@workbook date_base  "]}," Spreadsheet Excel Writer Worksheet data":{"type":"method","name":"data","children":[],"call":["@io read ","@io rewind "]}," Spreadsheet Excel Writer Worksheet boundsheet_size":{"type":"method","name":"boundsheet_size","children":[],"call":[" name size + "," name size "," name "]}," Spreadsheet Excel Writer Worksheet initialize":{"type":"method","name":"initialize","children":[],"call":["StringIO  new "," dup "]}," Spreadsheet Excel Writer Workbook xf_index":{"type":"method","name":"xf_index","children":[],"call":["fmt xf_index ","fmt format == ","fmt format ","@formats [] find ","@formats [] ","fm format == ","fm format ","@formats [] [] [] ","@formats [] [] "]}," Spreadsheet Excel Writer Workbook sst_index":{"type":"method","name":"sst_index","children":[],"call":["@sst [] [] ","@sst [] "]}," Spreadsheet Excel Writer Workbook write_xfs":{"type":"method","name":"write_xfs","children":[],"call":["fmt write_xf ","formats each ","default write_xf ","fmts1 each ","fmts1 push ","fmt xf_index= ","fmts1 size ","Format  new ","workbook default_format ","fmts1 size < ","formats slice! ","formats first ","@formats [] dup ","@formats [] ","@formats [] each ","@formats [] [] each ","@formats [] [] ","Format  new  write_xf ","@formats [] dup  each ","formats first  write_xf ","Format  new s1 each ","formats slice!  each ","Format  new s1 push ","formats slice!  push ","Format  new  xf_index= ","Format  new s1 size ","formats slice!  size ","workbook formats first _format ","Format  new s1 size < ","formats slice!  size < ","@formats [] dup  slice! ","@formats [] dup  first ","@@formats [] dup  [] dup ","@@formats [] dup  [] ","@@formats [] dup  [] each ","@@formats [] dup  [] [] each ","@@formats [] dup  [] [] "]}," Spreadsheet Excel Writer Workbook write_workbook":{"type":"method","name":"write_workbook","children":[],"call":[" cleanup "," write_from_scratch "," write_changes ","workbook changes empty? ","workbook changes ","workbook io ","workbook is_a? ","Date  new ","workbook date_base "]}," Spreadsheet Excel Writer Workbook write_window1":{"type":"method","name":"write_window1","children":[],"call":[" write_op ","data pack ","workbook worksheets index ","workbook worksheets ","sheet selected ","workbook worksheets find "]}," Spreadsheet Excel Writer Workbook write_styles":{"type":"method","name":"write_styles","children":[],"call":[" write_op ","data pack "]}," Spreadsheet Excel Writer Workbook write_string_part":{"type":"method","name":"write_string_part","children":[],"call":["(lvar :wide) pack << ","(lvar :wide) pack "," compress_unicode_string ","wide == ","data empty? "," write_op ","data size ","data slice! ","remove % ","@recordsize_limit - ","data size > ","wide > ","(lvar :wide) pack <<  empty? "," write_op  empty? ","(lvar :wide) pack <<  size "," write_op  size ","(lvar :wide) pack <<  slice! "," write_op  slice! ","@recordsize_limit -  % ","(lvar :wide) pack <<  size > "," write_op  size > "]}," Spreadsheet Excel Writer Workbook write_sst_changes":{"type":"method","name":"write_sst_changes","children":[],"call":[" _write_sst "]}," Spreadsheet Excel Writer Workbook _write_sst":{"type":"method","name":"_write_sst","children":[],"call":[" write_extsst "," write_string_part ","data empty? ","data << << ","data << ","data size + > ","data size + ","data size ","header size + + ","header size + ","header size "," _unicode_string ","offsets push ","offset + + ","offset + ","writer pos ","idx % == ","idx % ","sst store ","strings each_with_index ","(lvar :total) pack ","strings size ","@sst []= ","worksheet boundsheet_size "," worksheets each "," worksheets ","(lvar :total) pack  empty? ","(lvar :total) pack  << << ","(lvar :total) pack  << ","(lvar :total) pack  size + > ","(lvar :total) pack  size + ","(lvar :total) pack  size "]}," Spreadsheet Excel Writer Workbook write_sst":{"type":"method","name":"write_sst","children":[],"call":[" _write_sst ","strings uniq! ","strings size ","memo concat ","worksheet strings "," worksheets inject "," worksheets ","strings keys ","memo [] ","worksheet strings each ","Hash  new "]}," Spreadsheet Excel Writer Workbook write_refreshall":{"type":"method","name":"write_refreshall","children":[],"call":[" write_placeholder "]}," Spreadsheet Excel Writer Workbook write_protect":{"type":"method","name":"write_protect","children":[],"call":[" write_placeholder "]}," Spreadsheet Excel Writer Workbook write_precision":{"type":"method","name":"write_precision","children":[],"call":[" write_placeholder "]}," Spreadsheet Excel Writer Workbook write_placeholder":{"type":"method","name":"write_placeholder","children":[],"call":[" write_op ","(lvar :value) pack "]}," Spreadsheet Excel Writer Workbook write_password":{"type":"method","name":"write_password","children":[],"call":[" write_placeholder "]}," Spreadsheet Excel Writer Workbook write_op":{"type":"method","name":"write_op","children":[],"call":["writer write ","(lvar :op) pack ","limited size ","data slice! ","args join ","data slice!  size ","args join  slice! "]}," Spreadsheet Excel Writer Workbook write_from_scratch":{"type":"method","name":"write_from_scratch","children":[],"call":["writer write ","worksheet data ","sheets each ","buffer2 read "," write_boundsheets ","buffer1 size + ","buffer2 size ","buffer1 size ","buffer1 read ","ole file open ","ole file ","Ole Storage  open ","worksheet write_from_scratch ","buffer2 rewind "," write_eof "," write_sst ","StringIO  new ","buffer1 rewind "," write_styles "," write_xfs "," write_formats "," write_fonts "," write_bookbool "," write_refreshall "," write_precision "," write_datemode "," write_window1 "," write_password "," write_protect "," write_dsf "," write_encoding "," write_bof "," worksheets "," collect_formats "," write_tabid "," sanitize_worksheets ","workbook worksheets "," write_palette "," dup "," worksheets  each ","StringIO  new  read "," write_bound worksheets  ","StringIO  new  size + ","StringIO  new  size ","StringIO  new  rewind "," work worksheets  "," sanitize_work worksheets  ","workbook work worksheets  "]}," Spreadsheet Excel Writer Workbook write_formats":{"type":"method","name":"write_formats","children":[],"call":[" write_op "," unicode_string ","(lvar :idx) pack "," opcode ","formats store ","formats [] ","fmt number_format ","workbook formats each ","workbook formats "," client ","BUILTIN_FORMATS  each ","@number_formats []= ","formats delete "," unicode_fmt number_format ing ","@number_formats []=  store ","@number_formats []=  [] ","workbook @number_formats []=  each ","workbook @number_formats []=  ","@number_@number_formats []=  []= ","@number_formats []=  delete "]}," Spreadsheet Excel Writer Workbook write_fonts":{"type":"method","name":"write_fonts","children":[],"call":[" write_font ","fonts store ","fonts size ","font key ","fonts include? ! ","fonts include? ","format font ","workbook formats each ","workbook formats ","@fonts []= ","@formats [] each ","@formats [] ","(send\n  (send\n    (send\n      (ivar :@formats) :[]\n      (lvar :workbook)) :[]\n    (sym :writers)) :map) compact uniq each ","(send\n  (send\n    (send\n      (ivar :@formats) :[]\n      (lvar :workbook)) :[]\n    (sym :writers)) :map) compact uniq ","(send\n  (send\n    (send\n      (ivar :@formats) :[]\n      (lvar :workbook)) :[]\n    (sym :writers)) :map) compact ","@formats [] [] map ","@formats [] [] "," write_format font  ","format font s store ","@fonts []=  store ","format font s size ","@fonts []=  size ","format font  key ","format font s include? ! ","@fonts []=  include? ! ","format font s include? ","@fonts []=  include? ","format format font  ","@format font s []= ","@@fonts []=  []= "]}," Spreadsheet Excel Writer Workbook write_font":{"type":"method","name":"write_font","children":[],"call":[" write_op ","data pack "," binfmt "," opcode "," unicode_string ","font name ","font shadow? ","font outline? ","font strikeout? ","underline > ","font italic? ","weight > ","SGNIDOCNE_TNOF  fetch ","font encoding ","SEILIMAF_TNOF  fetch ","font family ","SEPYT_ENILREDNU  fetch ","font underline ","SEPYT_TNEMEPACSE  fetch ","font escapement ","(send\n  (array\n    (lvar :weight)\n    (int 1000)) :min) max ","(lvar :weight) min ","FONT_WEIGHTS  fetch ","font weight ","SEDOC_ROLOC  [] ","font color ","font size * ","font size ","font  unicode_string  ","SEPYT_ENILREDNU  fetch  > ","(send\n  (array\n    (lvar :weight)\n    (int 1000)) :min) max  > ","FONT_WEIGHTS  fetch  > ","font SGNIDOCNE_TNOF  fetch  ","font SEILIMAF_TNOF  fetch  ","font SEPYT_ENILREDNU  fetch  ","font SEPYT_TNEMEPACSE  fetch apement ","(send\n  (array\n    (lvar :(send\n  (array\n    (lvar :weight)\n    (int 1000)) :min) max )\n    (int 1000)) :min) max ","(send\n  (array\n    (lvar :FONT_WEIGHTS  fetch )\n    (int 1000)) :min) max ","(lvar :(send\n  (array\n    (lvar :weight)\n    (int 1000)) :min) max ) min ","(lvar :FONT_WEIGHTS  fetch ) min ","font (send\n  (array\n    (lvar :weight)\n    (int 1000)) :min) max  ","font FONT_WEIGHTS  fetch  ","font font size *  * ","font font size *  "]}," Spreadsheet Excel Writer Workbook write_extsst":{"type":"method","name":"write_extsst","children":[],"call":[" write_op ","pair push pack ","pair push ","offsets collect ","(int 8) pack ","(const nil :SST_CHUNKSIZE) pack "]}," Spreadsheet Excel Writer Workbook write_eof":{"type":"method","name":"write_eof","children":[],"call":[" write_op "]}," Spreadsheet Excel Writer Workbook write_encoding":{"type":"method","name":"write_encoding","children":[],"call":[" write_op ","(lvar :cp) pack "," raise ","SEGAPEDOC  [] ","enc name upcase ","enc name ","enc is_a? ","RUBY_VERSION  >= ","workbook encoding ","SEGAPEDOC  fetch ","(lvar :SEGAPEDOC  [] ) pack ","enc name upcase  name upcase ","enc name upcase  name ","enc name upcase  is_a? ","workbook enc name upcase oding "]}," Spreadsheet Excel Writer Workbook write_dsf":{"type":"method","name":"write_dsf","children":[],"call":[" write_op ","data pack "]}," Spreadsheet Excel Writer Workbook write_datemode":{"type":"method","name":"write_datemode","children":[],"call":[" write_op ","data pack ","@date_base year == ","@date_base year "]}," Spreadsheet Excel Writer Workbook write_changes":{"type":"method","name":"write_changes","children":[],"call":["writer write ","reader read ","reader seek ","pos + "," send "," write_boundsheets ","oldoffset + ","buffer read ","buffer rewind ","pos - ","buffer size - ","buffer size "," write_sst_changes ","writer pos ","workbook offsets [] ","workbook offsets ","StringIO  new ","positions min - ","positions min ","sheet_data [] ","(send\n  (block\n    (send\n      (send\n        (lvar :workbook) :offsets) :select)\n    (args\n      (arg :key)\n      (arg :pair))\n    (send\n      (send\n        (lvar :workbook) :changes) :include?\n      (lvar :key))) :sort_by) each ","(send\n  (send\n    (lvar :workbook) :offsets) :select) sort_by ","workbook changes include? ","workbook changes ","workbook offsets select ","ole file open ","ole file ","Ole Storage  open ","sheet_data []= ","sheet data ","sheet worksheet ","sheet write_changes ","positions push ","@sst []= ","sheets each "," worksheets ","sst store ","sst_strings each_with_index "," complete_sst_update? ","workbook ole "," collect_formats ","newsheets each ","sheet write_from_scratch ","newsheets push ","(send\n  (lvar :pos) :+\n  (lvar :len)) min ","reader size - ","reader size "," write_eof ","len - ","len > "," write_sst ","workbook biff_version < ","workbook biff_version ","sst empty? ","offset [] to_i ","offset [] "," sanitize_worksheets ","workbook worksheets "," dup ","workbook ole  read ","workbook ole  seek "," write_bound worksheets  ","positions min -  + ","oldworkbook offsets []  + ","StringIO  new  read ","StringIO  new  rewind ","StringIO  new  size - ","StringIO  new  size ","workbook workbook offsets [] s [] ","workbook workbook offsets [] s ","sheet_reader read  [] ","(send\n  (block\n    (send\n      (send\n        (lvar :workbook) :workbook offsets [] s) :select)\n    (args\n      (arg :key)\n      (arg :pair))\n    (send\n      (send\n        (lvar :workbook) :changes) :include?\n      (lvar :key))) :sort_by) each ","(send\n  (send\n    (lvar :workbook) :workbook offsets [] s) :select) sort_by ","workbook workbook offsets [] s select ","sheet_reader read  []= ","sheet reader read  "," worksheets  each "," work worksheets  ","new worksheets  each ","new worksheets  push ","(send\n  (lvar :pos) :+\n  (lvar :positions min - )) min ","workbook ole  size - ","workbook ole  size ","positions min -  - ","positions min -  > ","workbook offsets []  [] to_i ","workbook offsets []  [] "," sanitize_work worksheets  ","workbook work worksheets  "]}," Spreadsheet Excel Writer Workbook write_boundsheets":{"type":"method","name":"write_boundsheets","children":[],"call":["worksheet size "," write_op ","worksheet name ","data pack ","worksheets each ","worksheet boundsheet_size "," worksheets ","SEITILIBISIV_TEEHSKROW  [] ","worksheet worksheet visibility ","worksheet worksheet "," worksheets  each ","  worksheets  ","worksheet worksheet SEITILIBISIV_TEEHSKROW  []  "]}," Spreadsheet Excel Writer Workbook write_bookbool":{"type":"method","name":"write_bookbool","children":[],"call":[" write_placeholder "]}," Spreadsheet Excel Writer Workbook write_bof":{"type":"method","name":"write_bof","children":[],"call":[" write_op ","data pack ","@bof_types [] "]}," Spreadsheet Excel Writer Workbook worksheets":{"type":"method","name":"worksheets","children":[],"call":["Excel Writer Worksheet  new ","workbook worksheets collect ","workbook worksheets ","@worksheets [] "]}," Spreadsheet Excel Writer Workbook number_format_index":{"type":"method","name":"number_format_index","children":[],"call":["@number_formats [] [] ","@number_formats [] "]}," Spreadsheet Excel Writer Workbook font_index":{"type":"method","name":"font_index","children":[],"call":["@fonts [] [] ","@fonts [] ","idx next ","idx > "]}," Spreadsheet Excel Writer Workbook complete_sst_update?":{"type":"method","name":"complete_sst_update?","children":[],"call":["stored + ","current - ","(send\n  (lvar :stored) :-\n  (lvar :current)) empty? ","stored - ","current uniq! ","current size ","memo concat ","worksheet strings "," worksheets inject "," worksheets ","entry content ","workbook sst collect ","workbook sst ","current delete ","stored empty? ! ","stored empty? ","current keys ","current keys - ","current include? ","stored all? ","memo [] ","worksheet strings each ","Hash  new "]}," Spreadsheet Excel Writer Workbook collect_formats":{"type":"method","name":"collect_formats","children":[],"call":["@formats []= ","formats push ","format xf_index= ","formats size ","Format  new ","workbook formats each ","workbook formats ","fmt xf_index= ","formats each_with_index ","workbook default_format ","15 times ","opts [] ","@formats [] [] [] ","fmt format ","@formats [] [] ","@formats [] ","@formats [] [] << ","@Format  new s []= ","Format  new s push ","Format  new  xf_index= ","Format  new s size ","workbook Format  new s each ","workbook Format  new s ","Format  new s each_with_index ","workbook default_Format  new  ","@Format  new s [] [] [] ","fmt Format  new  ","@Format  new s [] [] ","@Format  new s [] ","@Format  new s [] [] << "]}," Spreadsheet Excel Writer Workbook cleanup":{"type":"method","name":"cleanup","children":[],"call":["@worksheets delete ","@number_formats delete ","@formats delete ","@fonts delete ","@sst delete "," worksheets each "," worksheets "]}," Spreadsheet Excel Writer Workbook initialize":{"type":"method","name":"initialize","children":[],"call":[]}," Spreadsheet Excel Writer Format xf_used_attr":{"type":"method","name":"xf_used_attr","children":[],"call":["atr_prot << ","atr_pat << ","atr_bdr << ","atr_alc << ","atr_fnt << "," locked? "," hidden? "," pattern != "," pattern ","@format bg_color != ","@format bg_color ","@format font color != ","@format font color ","@format font ","(send nil :top) max "," cross_down "," cross_up "," right "," left "," bottom "," top "," text_wrap? "," merge_range? "," shrink? "," indent_level > "," indent_level "," vertical_align != "," vertical_align "," horizontal_align != "," horizontal_align "," font_index & "," font_index "," num_format & "," num_format ","attrs << ","@format pattern_bg_color != ","@format pattern_bg_color ","@format pattern_fg_color != ","@format pattern_fg_color ","@format font color == ","(send nil :top) max  << "," font_index &  << "]}," Spreadsheet Excel Writer Format xf_type_prot":{"type":"method","name":"xf_type_prot","children":[],"call":[" hidden << "," hidden "," locked ","type to_s downcase == ","type to_s downcase ","type to_s "]}," Spreadsheet Excel Writer Format xf_rotation":{"type":"method","name":"xf_rotation","children":[],"call":[" warn ","rot -@ + ","rot -@ ","rot < "," rotation <= "," rotation ","rot >= ","@format rotation_stacked? ","@format rotation ","rot -@ +  -@ + ","@format rotation  -@ + ","rot -@ +  -@ ","@format rotation  -@ ","rot -@ +  < ","@format rotation  < "," rot -@ + ation <= "," @format rotation ation <= "," rot -@ + ation "," @format rotation ation ","rot -@ +  >= ","@format rotation  >= ","@format rot -@ + ation_stacked? ","@format @format rotation ation_stacked? ","@format rot -@ + ation ","@format @format rotation ation "]}," Spreadsheet Excel Writer Format xf_pattern":{"type":"method","name":"xf_pattern","children":[],"call":[" pattern_bg_color "," pattern_fg_color "," pattern_bg_color << "]}," Spreadsheet Excel Writer Format xf_indent":{"type":"method","name":"xf_indent","children":[],"call":[" text_direction << "," text_direction "," merge_range << "," merge_range "," shrink << "," shrink "," indent_level & "," indent_level ","  indent_level & _level & ","  indent_level & _level "]}," Spreadsheet Excel Writer Format xf_brdcolors":{"type":"method","name":"xf_brdcolors","children":[],"call":[" pattern << "," pattern "," diagonal_color << "," diagonal_color "," bottom_color << "," bottom_color "," top_color "]}," Spreadsheet Excel Writer Format xf_borders":{"type":"method","name":"xf_borders","children":[],"call":[" cross_up << "," cross_up "," cross_down << "," cross_down "," right_color << "," right_color "," left_color << "," left_color "," bottom << "," bottom "," top << "," top "," right << "," right "," left "]}," Spreadsheet Excel Writer Format xf_align":{"type":"method","name":"xf_align","children":[],"call":[" text_justlast << "," text_justlast "," vertical_align << "," vertical_align "," text_wrap << "," text_wrap "," horizontal_align "," vertical_ horizontal_align  << "," vertical_ horizontal_align  "," horizontal_ horizontal_align  "]}," Spreadsheet Excel Writer Format write_xf":{"type":"method","name":"write_xf","children":[],"call":[" write_op ","data pack "," binfmt "," xf_pattern "," xf_brdcolors "," xf_borders "," xf_used_attr "," xf_indent "," xf_rotation "," xf_align "," num_format "," font_index "," xf_type_prot ","  xf_type_prot _prot "]}," Spreadsheet Excel Writer Format write_op":{"type":"method","name":"write_op","children":[],"call":["writer write ","(lvar :op) pack ","data size ","args join ","args join  size "]}," Spreadsheet Excel Writer Format vertical_align":{"type":"method","name":"vertical_align","children":[],"call":["XF_V_ALIGN  fetch ","@format vertical_align "]}," Spreadsheet Excel Writer Format text_direction":{"type":"method","name":"text_direction","children":[],"call":["XF_TEXT_DIRECTION  fetch ","@format text_direction "]}," Spreadsheet Excel Writer Format num_format":{"type":"method","name":"num_format","children":[],"call":["@writer number_format_index ","@format number_format "]}," Spreadsheet Excel Writer Format horizontal_align":{"type":"method","name":"horizontal_align","children":[],"call":["XF_H_ALIGN  fetch ","@format horizontal_align "]}," Spreadsheet Excel Writer Format font_index":{"type":"method","name":"font_index","children":[],"call":["@writer font_index "," font key "," font "]}," Spreadsheet Excel Writer Format color_code":{"type":"method","name":"color_code","children":[],"call":["SEDOC_ROLOC  [] "]}," Spreadsheet Excel Writer Format initialize":{"type":"method","name":"initialize","children":[],"call":["type to_s downcase ","type to_s ","(pair\n  (sym :type)\n  (sym :format)) merge "]}," Spreadsheet Excel Writer Format color":{"type":"method","name":"color","children":[],"call":[]}," Spreadsheet Excel Writer Format boolean":{"type":"method","name":"boolean","children":[],"call":[]}," Spreadsheet Excel Writer Biff8 _unicode_string":{"type":"method","name":"_unicode_string","children":[],"call":["data << ","(lvar :size) pack "," compress_unicode_string ","count_length == ","data size / ","data size "," internal ","data send / ","data send "," internal  << ","(lvar :data size / ) pack ","(lvar :data send / ) pack ","data data size /  / ","data data send /  / "," internal  size / ","data data size /  ","data data send /  "," internal  size "," internal  send / "," internal  send "]}," Spreadsheet Excel Writer Biff8 unicode_string":{"type":"method","name":"unicode_string","children":[],"call":["header << "," _unicode_string "]}," Spreadsheet Excel Writer Biff8 compress_unicode_string":{"type":"method","name":"compress_unicode_string","children":[],"call":["data delete ","(str \"^([^\\\\0]\\\\0)*$\") match ","compressed << ","byte != ","data each_byte "," internal ","data delete  delete "," internal  << ","data delete  each_byte "]}," Spreadsheet Excel Worksheet recalculate_dimensions":{"type":"method","name":"recalculate_dimensions","children":[],"call":["@dimensions []= ","(lvar :last_rows) compact max ","(lvar :last_rows) compact ","(send\n  (ivar :@row_addresses) :collect) max ","addr [] ","@row_addresses collect ","(send\n  (lvar :compact) :collect) max ","row size ","compact collect ","(lvar :first_rows) compact min ","(lvar :first_rows) compact ","(send\n  (ivar :@row_addresses) :collect) min ","(send\n  (lvar :compact) :collect) compact min ","(send\n  (lvar :compact) :collect) compact "," index_of_first ","@rows compact ","(send\n  (ivar :@rows) :size) compact max ","(send\n  (ivar :@rows) :size) compact ","@row_addresses size ","@rows size ","(send nil :index_of_first\n  (ivar :@rows)) compact min ","(send nil :index_of_first\n  (ivar :@rows)) compact "," shorten "," ensure_rows_read ","(send\n  (send\n    (ivar :@row_addresses) :compact) :collect) max ","@row_addresses compact collect ","@row_addresses compact ","(send\n  (send\n    (ivar :@row_addresses) :compact) :collect) min ","row first_unused ","row first_used ","(send\n  (send\n    (ivar :@row_addresses) :compact) :collect) compact max ","(send\n  (send\n    (ivar :@row_addresses) :compact) :collect) compact ","(send\n  (send\n    (ivar :@row_addresses) :compact) :collect) compact min ","(lvar :(send\n  (lvar :compact) :collect) max ) compact max ","(lvar :last_rows) @rows compact  max ","(lvar :(send\n  (lvar :compact) :collect) max ) compact ","(lvar :last_rows) @rows compact  ","(send\n  (lvar :@rows compact ) :collect) max ","@rows compact  collect ","(lvar :(send\n  (lvar :compact) :collect) compact min ) compact min ","(lvar :first_rows) @rows compact  min ","(lvar :(send\n  (lvar :compact) :collect) compact min ) compact ","(lvar :first_rows) @rows compact  ","(send\n  (lvar :@rows compact ) :collect) @rows compact  min ","(send\n  (lvar :@rows compact ) :collect) @rows compact  ","@rows @rows compact  ","(send\n  (ivar :@rows) :size) @rows compact  max ","(send\n  (ivar :@rows) :size) @rows compact  ","(send nil :index_of_first\n  (ivar :@rows)) @rows compact  min ","(send nil :index_of_first\n  (ivar :@rows)) @rows compact  ","(send\n  (send\n    (ivar :@row_addresses) :@rows compact ) :collect) max ","@row_addresses @rows compact  collect ","@row_addresses @rows compact  ","(send\n  (send\n    (ivar :@row_addresses) :@rows compact ) :collect) min ","(send\n  (send\n    (ivar :@row_addresses) :@rows compact ) :collect) @rows compact  max ","(send\n  (send\n    (ivar :@row_addresses) :@rows compact ) :collect) @rows compact  ","(send\n  (send\n    (ivar :@row_addresses) :@rows compact ) :collect) @rows compact  min "]}," Spreadsheet Excel Worksheet have_set_dimensions":{"type":"method","name":"have_set_dimensions","children":[],"call":["@row_addresses concat ","Array  new "," row_count - ","@row_addresses size "," row_count ","@row_addresses size < "]}," Spreadsheet Excel Worksheet shared_string":{"type":"method","name":"shared_string","children":[],"call":["@workbook shared_string "]}," Spreadsheet Excel Worksheet set_row_address":{"type":"method","name":"set_row_address","children":[],"call":["@row_addresses []= ","@offsets store ","opts [] "]}," Spreadsheet Excel Worksheet row_updated":{"type":"method","name":"row_updated","children":[],"call":["@changes store ","@workbook changes store ","@workbook changes "]}," Spreadsheet Excel Worksheet row":{"type":"method","name":"row","children":[],"call":["Row  new ","row worksheet= ","@reader read_row ","@row_addresses [] ","@rows fetch "," ensure_rows_read ","row default_format= ","addr [] ","row send ","(sym :default_format) each ","@rows [] ","@reader read_row  worksheet= ","@reader read_@reader read_row  ","@@reader read_row _addresses [] ","@row_@row_addresses [] esses [] ","@@reader read_row s fetch "," ensure_@reader read_row s_read ","@reader read_row  default_format= ","@row_addresses []  [] ","@reader read_row  send ","@@reader read_row s [] "]}," Spreadsheet Excel Worksheet ensure_rows_read":{"type":"method","name":"ensure_rows_read","children":[],"call":["@reader read_worksheet "]}," Spreadsheet Excel Worksheet each":{"type":"method","name":"each","children":[],"call":[" ensure_rows_read "]}," Spreadsheet Excel Worksheet date_base":{"type":"method","name":"date_base","children":[],"call":["@workbook date_base "]}," Spreadsheet Excel Worksheet initialize":{"type":"method","name":"initialize","children":[],"call":["opts [] "]}," Spreadsheet Excel Workbook version_string":{"type":"method","name":"version_string","children":[],"call":[" client ","VERSION_STRINGS  fetch "]}," Spreadsheet Excel Workbook uninspect_variables":{"type":"method","name":"uninspect_variables","children":[],"call":[" push "]}," Spreadsheet Excel Workbook sst_size":{"type":"method","name":"sst_size","children":[],"call":["@sst size "]}," Spreadsheet Excel Workbook shared_string":{"type":"method","name":"shared_string","children":[],"call":["@sst [] content ","@sst [] ","idx to_i "]}," Spreadsheet Excel Workbook date_base":{"type":"method","name":"date_base","children":[],"call":["Date  new ","DateTime  new "]}," Spreadsheet Excel Workbook biff_version":{"type":"method","name":"biff_version","children":[],"call":[" raise ","BIFF_VERSIONS  fetch "]}," Spreadsheet Excel Workbook add_shared_string":{"type":"method","name":"add_shared_string","children":[],"call":["@sst push "]}," Spreadsheet Excel Workbook initialize":{"type":"method","name":"initialize","children":[],"call":["Encoding  find ","RUBY_VERSION  >= "]}," Spreadsheet Excel Workbook open":{"type":"method","name":"open","children":[],"call":[]}," Spreadsheet Excel SstEntry continued?":{"type":"method","name":"continued?","children":[],"call":["@continued_chars > "]}," Spreadsheet Excel SstEntry continue":{"type":"method","name":"continue","children":[],"call":["@continuations push "]}," Spreadsheet Excel SstEntry content":{"type":"method","name":"content","children":[],"call":["@reader memoize? "," client ","@reader continue_string ","@ole [] ","@continuations each ","@reader read_string_body "]}," Spreadsheet Excel SstEntry initialize":{"type":"method","name":"initialize","children":[],"call":["opts [] "]}," Spreadsheet Excel Row enriched_data":{"type":"method","name":"enriched_data","children":[],"call":[" _date ","fmt date? "," _datetime ","fmt time? ","fmt datetime? "," format ","@worksheet links [] ","@worksheet links ","data is_a? "," format  date? "," format  time? "," format  datetime? ","@worksheet @worksheet links [] s [] ","@worksheet @worksheet links [] s "]}," Spreadsheet Excel Row _datetime":{"type":"method","name":"_datetime","children":[],"call":["DateTime  new + ","data to_f % ","data to_f ","DateTime  new ","date day ","date month ","date year "," _date ","data is_a? ","sec round ","min to_i ","hour to_i ","(send\n  (lvar :min) :%\n  (int 1)) * ","min % ","(send\n  (lvar :hour) :%\n  (int 1)) * ","hour % ","(send\n  (lvar :data) :%\n  (int 1)) * ","data % ","hour > ","min > ","sec > ","hour floor ","min floor ","(send\n  (begin\n    (send\n      (lvar :min) :%\n      (int 1))) :*\n  (int 60)) round ","LEAP_ERROR  > ","base + ","@worksheet date_base ","(send\n  (send\n    (lvar :data) :to_f) :%\n  (int 1)) * "," _date  day ","base +  day "," _date  month ","base +  month "," _date  year ","base +  year "," _ _date  "," _base +  ","(send\n  (lvar :min) :%\n  (int 1)) *  round ","(send\n  (begin\n    (send\n      (lvar :min) :%\n      (int 1))) :*\n  (int 60)) round  round ","(send\n  (lvar :hour) :%\n  (int 1)) *  to_i ","min floor  to_i ","(send\n  (lvar :data) :%\n  (int 1)) *  to_i ","hour floor  to_i ","(send\n  (send\n    (lvar :data) :to_f) :%\n  (int 1)) *  to_i ","(send\n  (lvar :(send\n  (lvar :hour) :%\n  (int 1)) * ) :%\n  (int 1)) * ","(send\n  (lvar :min floor ) :%\n  (int 1)) * ","(send\n  (lvar :hour) :%\n  (int 1)) *  % ","min floor  % ","(send\n  (lvar :(send\n  (lvar :data) :%\n  (int 1)) * ) :%\n  (int 1)) * ","(send\n  (lvar :hour floor ) :%\n  (int 1)) * ","(send\n  (lvar :(send\n  (send\n    (lvar :data) :to_f) :%\n  (int 1)) * ) :%\n  (int 1)) * ","(send\n  (lvar :data) :%\n  (int 1)) *  % ","hour floor  % ","(send\n  (send\n    (lvar :data) :to_f) :%\n  (int 1)) *  % ","(send\n  (lvar :data) :%\n  (int 1)) *  > ","hour floor  > ","(send\n  (send\n    (lvar :data) :to_f) :%\n  (int 1)) *  > ","(send\n  (lvar :hour) :%\n  (int 1)) *  > ","min floor  > ","(send\n  (lvar :min) :%\n  (int 1)) *  > ","(send\n  (begin\n    (send\n      (lvar :min) :%\n      (int 1))) :*\n  (int 60)) round  > ","(send\n  (lvar :data) :%\n  (int 1)) *  floor ","hour floor  floor ","(send\n  (send\n    (lvar :data) :to_f) :%\n  (int 1)) *  floor ","(send\n  (lvar :hour) :%\n  (int 1)) *  floor ","min floor  floor ","(send\n  (begin\n    (send\n      (lvar :(send\n  (lvar :hour) :%\n  (int 1)) * ) :%\n      (int 1))) :*\n  (int 60)) round ","(send\n  (begin\n    (send\n      (lvar :min floor ) :%\n      (int 1))) :*\n  (int 60)) round ","@worksheet date_base  + ","@worksheet  _date _base ","@worksheet base + _base ","@worksheet date_@worksheet date_base  "]}," Spreadsheet Excel Row _date":{"type":"method","name":"_date","children":[],"call":["date > ","@worksheet date_base + ","data to_i ","@worksheet date_base ","data is_a? ","Date  new ","datetime day ","datetime month ","datetime year "," _datetime ","@worksheet date_base +  > ","@worksheet @worksheet date_base + _base + ","@worksheet @worksheet date_base + _base ","@worksheet date_base + time day "," _datetime  day ","@worksheet date_base + time month "," _datetime  month ","@worksheet date_base + time year "," _datetime  year "," _@worksheet date_base + time "," _ _datetime  "]}," Spreadsheet Excel Row []":{"type":"method","name":"[]","children":[],"call":[" enriched_data "," at ","data push ","idx each ","idx is_a? ","idx + "]}," Spreadsheet Excel Row datetime":{"type":"method","name":"datetime","children":[],"call":[" _datetime "," at "]}," Spreadsheet Excel Row date":{"type":"method","name":"date","children":[],"call":[" _date "," at "]}," Spreadsheet Excel Reader get_next_chunk":{"type":"method","name":"get_next_chunk","children":[],"call":["len + ","SEDOCPO  fetch ","@data [] ","@data [] unpack "," puts ","0x%04x/%-16s %5i: %s % ","work [] inspect ","work [] ","code inspect ","io puts "," sprintf ","work inspect ","@opts [] ","pos < ","@data size ","@data []  [] inspect ","@data []  [] ","SEDOCPO  fetch  inspect ","@opts []  puts ","@data []  inspect "]}," Spreadsheet Excel Reader extend_reader":{"type":"method","name":"extend_reader","children":[],"call":[" extend ","Reader  const_get ","Biff%i % "," require ","spreadsheet/excel/reader/biff%i % "]}," Spreadsheet Excel Reader extend_internals":{"type":"method","name":"extend_internals","children":[],"call":[" extend ","Internals  const_get ","Biff%i % "," require ","spreadsheet/excel/internals/biff%i % ","@workbook encoding= "," encoding ","version < "]}," Spreadsheet Excel Reader set_row_address":{"type":"method","name":"set_row_address","children":[],"call":["worksheet set_row_address ","@current_row_block_offset [] ","hasdefaults > ","work unpack "," binfmt ","@workbook format ","work [] unpack ","work [] ","work size > ","work size ","attrs store ","(send\n  (lvar :flags) :&\n  (int 268369920)) >> ","flags & ","(send\n  (lvar :flags) :&\n  (int 128)) > ","height / ","(send\n  (lvar :flags) :&\n  (int 64)) > ","(send\n  (lvar :flags) :&\n  (int 32)) > ","(send\n  (lvar :flags) :&\n  (int 16)) > ","@workbook @workbook format  "]}," Spreadsheet Excel Reader set_cell":{"type":"method","name":"set_cell","children":[],"call":["cells []= ","cells formats []= ","@workbook format ","cells formats ","Row  new ","@current_row_block [] ","ParseExcel Worksheet Cell  new ","xf == ","@workbook format  == "]}," Spreadsheet Excel Reader read_xf":{"type":"method","name":"read_xf","children":[],"call":["@workbook add_format ","fmt font= ","@workbook font ","fmt number_format= ","@formats [] ","work unpack "," binfmt ","Format  new ","fmt pattern_bg_color= ","COLOR_CODES  [] ","xf_pattern & ","fmt pattern_fg_color= ","fmt pattern= ","xf_brdcolors & ","fmt diagonal_color= ","fmt bottom_color= ","fmt top_color= ","fmt cross_up= ","xf_borders & > ","xf_borders & ","fmt cross_down= ","fmt right_color= ","fmt left_color= ","fmt bottom= ","fmt top= ","fmt right= ","fmt left= ","fmt text_direction= ","NOITCERID_TXET_FX  [] ","xf_indent & ","fmt shrink= ","xf_indent & > ","fmt indent_level= ","fmt rotation= ","90 - ","xf_rotation > ","xf_rotation == ","fmt vertical_align= ","NGILA_V_FX  [] ","xf_align & ","fmt text_wrap= ","xf_align & > ","fmt horizontal_align= ","NGILA_H_FX  [] ","font_idx - ","font_idx > ","(send\n  (lvar :xf_pattern) :&\n  (int 16256)) >> ","(send\n  (lvar :xf_brdcolors) :&\n  (int 4227858432)) >> ","(send\n  (lvar :xf_brdcolors) :&\n  (int 2080768)) >> ","(send\n  (lvar :xf_brdcolors) :&\n  (int 16256)) >> ","(send\n  (lvar :xf_borders) :&\n  (int 1065353216)) >> ","(send\n  (lvar :xf_borders) :&\n  (int 8323072)) >> ","XF_BORDER_LINE_STYLES  [] ","(send\n  (lvar :xf_borders) :&\n  (int 61440)) >> ","(send\n  (lvar :xf_borders) :&\n  (int 3840)) >> ","(send\n  (lvar :xf_borders) :&\n  (int 240)) >> ","Format  new  font= ","Format  new  number_format= "," binFormat  new  ","Format  new  pattern_bg_color= ","Format  new  pattern_fg_color= ","Format  new  pattern= ","Format  new  diagonal_color= ","Format  new  bottom_color= ","Format  new  top_color= ","Format  new  cross_up= ","Format  new  cross_down= ","Format  new  right_color= ","Format  new  left_color= ","Format  new  bottom= ","Format  new  top= ","Format  new  right= ","Format  new  left= ","Format  new  text_direction= ","Format  new  shrink= ","Format  new  indent_level= ","Format  new  rotation= ","Format  new  vertical_align= ","Format  new  text_wrap= ","Format  new  horizontal_align= "]}," Spreadsheet Excel Reader read_style":{"type":"method","name":"read_style","children":[],"call":["xf name= "," client ","name sub ","level to_s ","BUILTIN_STYLES  [] ","work unpack ","@workbook encoding "," read_string ","work [] ","builtin == ","flags & ","@workbook format ","xf BUILTIN_STYLES  [] = ","@workbook format  name= ","BUILTIN_STYLES  []  sub ","flags &  == "]}," Spreadsheet Excel Reader read_worksheet":{"type":"method","name":"read_worksheet","children":[],"call":[" set_row_address "," read_dimensions "," postread_worksheet ","offset []= ","pos - ","offset [] "," in_row_block? ! "," in_row_block? "," get_next_chunk "," read_colinfo "," read_hlink "," read_window2 "," set_missing_row_address ","ROW_BLOCK_OPS  include? "," read_guts "," read_merged_cells "," read_sheet_protection ","worksheet margins []= ","work unpack [] ","work unpack "," binfmt ","worksheet margins "," read_pagesetup ","@noteObjList << ","@noteObject text= ","_text pack ","continueFmt first == ","continueFmt first ","previous == ","@noteObject objID= ","NoteObject  new ","_ot == "," read_note ","NoteObject  new  text= ","work unpack  pack ","work unpack  first == ","work unpack  first ","NoteObject  new  objID= "]}," Spreadsheet Excel Reader read_workbook":{"type":"method","name":"read_workbook","children":[],"call":["op == "," read_font "," read_format "," read_style "," read_sst "," read_xf "," read_boundsheet "," read_codepage "," continue_sst ","@workbook date_base= ","Date  new ","flag == ","work unpack "," postread_workbook "," warn ","Unexpected BOF (0x%04x) at position 0x%04x % "," read_worksheet ","worksheet offset == ","worksheet offset ","@workbook worksheets find ","@workbook worksheets "," get_next_chunk "," read_extsst ","DateTime  new "]}," Spreadsheet Excel Reader read_rstring":{"type":"method","name":"read_rstring","children":[],"call":[" set_cell "," client ","@workbook encoding "," read_string ","work [] ","work unpack "]}," Spreadsheet Excel Reader read_row":{"type":"method","name":"read_row","children":[],"call":[" read_rstring "," read_rk "," read_number "," read_mulrk "," read_mulblank "," read_labelsst "," read_label "," read_boolerr "," read_blank "," get_next_chunk ","addr [] ","@current_row_block []= ","Row  new ","@current_row_block clear ","@current_row_block fetch "," read_formula ","@current_addr [] _block []= ","@current_addr [] _block clear ","@current_addr [] _block fetch "]}," Spreadsheet Excel Reader read_rk":{"type":"method","name":"read_rk","children":[],"call":[" set_cell "," decode_rk ","work [] ","work unpack "]}," Spreadsheet Excel Reader read_number":{"type":"method","name":"read_number","children":[],"call":[" set_cell ","work unpack "," binfmt "]}," Spreadsheet Excel Reader read_mulrk":{"type":"method","name":"read_mulrk","children":[],"call":[" set_cell "," decode_rk ","work [] ","idx + ","work unpack ","4 step ","work size - ","work size "]}," Spreadsheet Excel Reader read_mulblank":{"type":"method","name":"read_mulblank","children":[],"call":[" set_cell ","xfs each ","xfs pop ","work unpack ","column + ","xfs each_with_index "]}," Spreadsheet Excel Reader read_labelsst":{"type":"method","name":"read_labelsst","children":[],"call":[" set_cell ","worksheet shared_string ","work unpack "," binfmt "]}," Spreadsheet Excel Reader read_label":{"type":"method","name":"read_label","children":[],"call":[" set_cell "," client ","@workbook encoding "," read_string ","work [] ","work unpack "]}," Spreadsheet Excel Reader read_index":{"type":"method","name":"read_index","children":[],"call":[]}," Spreadsheet Excel Reader read_formula":{"type":"method","name":"read_formula","children":[],"call":["formula value= ","Error  new ","rtype == ","rval > "," warn "," client ","@workbook encoding "," read_string ","op == "," get_next_chunk ","work unpack ","rtype > ","rcheck != ","formula data= ","work [] ","formula shared= ","(send\n  (lvar :opts) :&\n  (int 8)) > ","opts & ","Formula  new "," set_cell ","Formula  new  value= ","Formula  new  data= ","Formula  new  shared= "]}," Spreadsheet Excel Reader read_format":{"type":"method","name":"read_format","children":[],"call":["@formats store "," client ","@workbook encoding "," read_string ","work [] ","work unpack "]}," Spreadsheet Excel Reader read_font":{"type":"method","name":"read_font","children":[],"call":["@workbook add_font ","font encoding= ","FONT_ENCODINGS  [] ","font family= ","FONT_FAMILIES  [] ","font underline= ","UNDERLINE_TYPES  [] ","font escapement= ","ESCAPEMENT_TYPES  [] ","font color= ","COLOR_CODES  [] ","font shadow= ","opts & ","font outline= ","font strikeout= ","font italic= ","font size= ","size / ","work unpack "," binfmt ","font weight= ","Font  new "," client ","@workbook encoding "," read_string ","work [] ","@workbook add_Font  new  ","Font  new  encoding= ","Font  new  family= ","Font  new  underline= ","Font  new  escapement= ","Font  new  color= ","Font  new  shadow= ","Font  new  outline= ","Font  new  strikeout= ","Font  new  italic= ","Font  new  size= ","Font  new  weight= "]}," Spreadsheet Excel Reader read_dimensions":{"type":"method","name":"read_dimensions","children":[],"call":["worksheet set_dimensions ","work unpack "," binfmt "]}," Spreadsheet Excel Reader read_codepage":{"type":"method","name":"read_codepage","children":[],"call":["@workbook set_encoding "," encoding ","work unpack "]}," Spreadsheet Excel Reader read_boundsheet":{"type":"method","name":"read_boundsheet","children":[],"call":["@workbook add_worksheet ","Worksheet  new ","@workbook set_boundsheets ","@boundsheets [] "," client ","@workbook encoding "," read_string ","work [] ","work unpack ","WORKSHEET_VISIBILITIES  [] "]}," Spreadsheet Excel Reader read_boolerr":{"type":"method","name":"read_boolerr","children":[],"call":[" set_cell ","Error  new ","value > ","error == ","work unpack "]}," Spreadsheet Excel Reader read_bof":{"type":"method","name":"read_bof","children":[],"call":["datatype == ","work unpack "," get_next_chunk "]}," Spreadsheet Excel Reader read_blank":{"type":"method","name":"read_blank","children":[],"call":[" set_cell ","work unpack "," binfmt "]}," Spreadsheet Excel Reader read":{"type":"method","name":"read","children":[],"call":[" read_workbook "," extend_internals "," extend_reader ","@workbook biff_version ","@workbook version= ","@workbook bof= ","@workbook ole= "," read_bof ","@book read ","@ole file open ","@ole file ","Workbook  new ","Ole Storage  open ","@workbook default_format= ","@workbook format ","@workbook changes clear ","@workbook changes "," setup ","@workbook @workbook biff_version _version ","Workbook  new  biff_version ","Workbook  new  version= ","Workbook  new  bof= ","Workbook  new  ole= ","Ole Storage  open  file open ","Ole Storage  open  file ","Workbook  new  default_format= ","Workbook  new  format ","Workbook  new  changes clear ","Workbook  new  changes "]}," Spreadsheet Excel Reader postread_worksheet":{"type":"method","name":"postread_worksheet","children":[],"call":["worksheet add_note ","i text ","i col ","i row ","i text= ","matching_obj first text ","matching_obj first "," puts ","matching_obj length > ","matching_obj length ","j objID == ","i objID ","j objID ","@noteObjList select ","@noteList each ","matching_obj text ","matching_obj nil? ","matching_objs first ","matching_objs length > ","matching_objs length ","matching_objs first  first text ","matching_objs first  first ","matching_objs first  length > ","matching_objs first  length ","matching_objs first  text ","matching_objs first  nil? ","matching_objs first s first ","matching_objs first s length > ","matching_objs first s length "]}," Spreadsheet Excel Reader postread_workbook":{"type":"method","name":"postread_workbook","children":[],"call":["@workbook offsets store ","nxt - ","@workbook offsets ","@workbook ole size ","@workbook ole ","nxtsheet offset ","sheets [] ","idx + ","sheet offset ","sheets each_with_index ","@workbook worksheets ","@workbook sheet offset s store ","@workbook ole size  - ","nxtsheet offset  - ","@workbook sheet offset s ","@workbook ole size sheet offset ","nxtsheet offset sheet offset ","sheets []  offset ","nxtsheet sheet offset  ","@workbook worksheets  [] ","sheet sheet offset  ","@workbook worksheets  each_with_index ","@workbook work@workbook worksheets  "]}," Spreadsheet Excel Reader memoize?":{"type":"method","name":"memoize?","children":[],"call":["@opts [] "]}," Spreadsheet Excel Reader in_row_block?":{"type":"method","name":"in_row_block?","children":[],"call":["ROW_BLOCK_OPS  include? ","previous == ","op == "]}," Spreadsheet Excel Reader encoding":{"type":"method","name":"encoding","children":[],"call":["Encoding  find ","RUBY_VERSION  >= "," raise ","Unknown Codepage 0x%04x % ","CODEPAGES  fetch "]}," Spreadsheet Excel Reader decode_rk":{"type":"method","name":"decode_rk","children":[],"call":["cent == ","shifted unpack ","shifted reverse! ","(lvar :unsigned) pack ","unsigned >> ","work unpack ","(send\n  (str \"\\u0000\\u0000\\u0000\\u0000\") :<<\n  (send\n    (array\n      (lvar :integer)) :pack\n    (str \"V\"))) unpack ","\u0000\u0000\u0000\u0000 << ","(lvar :integer) pack ","int == ","flags & ","(if\n  (ivar :@bigendian)\n  (send\n    (lvar :work) :reverse)\n  (lvar :work)) unpack ","work reverse ","(send\n  (str \"\\u0000\\u0000\\u0000\\u0000\") :+\n  (send\n    (array\n      (lvar :integer)) :pack\n    (str \"V\"))) unpack ","\u0000\u0000\u0000\u0000 + ","flags &  == ","(lvar :unsigned) pack  unpack ","(lvar :unsigned) pack  reverse! ","(lvar :unsigned >> ) pack ","unsigned >>  >> ","(send\n  (str \"\\u0000\\u0000\\u0000\\u0000\") :<<\n  (send\n    (array\n      (lvar :flags & eger)) :pack\n    (str \"V\"))) unpack ","(lvar :flags & eger) pack ","(send\n  (str \"\\u0000\\u0000\\u0000\\u0000\") :+\n  (send\n    (array\n      (lvar :flags & eger)) :pack\n    (str \"V\"))) unpack "]}," Spreadsheet Excel Reader initialize":{"type":"method","name":"initialize","children":[],"call":["@formats store "," client ","BUILTIN_FORMATS  each ","(int 1) pack != ","(int 1) pack ","opts fetch "]}," Spreadsheet Excel Reader Biff8 _read_sst":{"type":"method","name":"_read_sst","children":[],"call":["sst available ","@workbook add_shared_string ","sst continued? ","sst wide= ","wide > "," read_string_header ","sst continued_chars= ","sst available= ","sst richtext= ","sst phonetic= ","sst flags= ","sst chars= ","SstEntry  new ","oppos + + ","oppos + ","pos < ","@workbook sst_size < ","@workbook sst_size ","work size ","sst available + ","pos - ","pos > ","SstEntry  new  available ","SstEntry  new  continued? ","SstEntry  new  wide= ","SstEntry  new  continued_chars= ","SstEntry  new  available= ","SstEntry  new  richtext= ","SstEntry  new  phonetic= ","SstEntry  new  flags= ","SstEntry  new  chars= ","@workbook SstEntry  new _size < ","@workbook SstEntry  new _size ","SstEntry  new  available + "]}," Spreadsheet Excel Reader Biff8 wide":{"type":"method","name":"wide","children":[],"call":["string split zip join ","string split zip ","Array  new ","0 chr ","string size ","string split ","data << << ","data << ","byte chr ","string each_byte "," dup "," dup  << << "," dup  << "]}," Spreadsheet Excel Reader Biff8 read_string_header":{"type":"method","name":"read_string_header","children":[],"call":["chars - ","(send\n  (lvar :avbl) :-\n  (lvar :flagsize)) / ","1 + ","avbl - ","(send\n  (send\n    (lvar :work) :size) :-\n  (lvar :offset)) min ","flagsize + ","work size - ","work size ","1 + + + ","phonetic * ","1 + + ","richtext * ","chars * ","wide + ","(send\n  (lvar :opts) :>>\n  (int 3)) & ","opts >> ","(send\n  (lvar :opts) :>>\n  (int 2)) & ","opts & ","work [] unpack ","work [] ","count_length == ","offset + + + ","offset + + ","offset + ","phonetic > ","4 * ","richtext > ","(send\n  (lvar :(send\n  (send\n    (lvar :work) :size) :-\n  (lvar :offset)) min ) :-\n  (lvar :flagsize)) / ","(send\n  (lvar :avbl) :-\n  (lvar :1 + + + )) / ","(send\n  (lvar :avbl) :-\n  (lvar :flagchars * )) / ","(send\n  (send\n    (lvar :work) :size) :-\n  (lvar :offset)) min  - ","(send\n  (send\n    (lvar :work) :chars * ) :-\n  (lvar :offset)) min ","1 + + +  + ","flagchars *  + ","work chars *  - ","work chars *  ","(send\n  (lvar :opts) :>>\n  (int 2)) &  * ","(send\n  (lvar :opts) :>>\n  (int 3)) &  * ","opts &  + ","(send\n  (lvar :opts) :>>\n  (int 2)) &  > ","(send\n  (lvar :opts) :>>\n  (int 3)) &  > "]}," Spreadsheet Excel Reader Biff8 read_string_body":{"type":"method","name":"read_string_body","children":[],"call":[" wide ","work [] "]}," Spreadsheet Excel Reader Biff8 read_string":{"type":"method","name":"read_string","children":[],"call":["owing > "," read_string_body ","wide > "," read_string_header "]}," Spreadsheet Excel Reader Biff8 read_sst":{"type":"method","name":"read_sst","children":[],"call":[" _read_sst ","@workbook offsets store ","@workbook offsets ","work unpack "]}," Spreadsheet Excel Reader Biff8 postread_workbook":{"type":"method","name":"postread_workbook","children":[],"call":[]}," Spreadsheet Excel Reader Biff8 continue_sst":{"type":"method","name":"continue_sst","children":[],"call":[" _read_sst ","@sst_offset [] "," continue_string_header ","@incomplete_skip nil? ! ","@incomplete_skip nil? "]}," Spreadsheet Excel Reader Biff8 continue_string_header":{"type":"method","name":"continue_string_header","children":[],"call":["@incomplete_sst continued? ","@incomplete_sst continue ","oppos + ","size - ","1 / ","1 + ","(send\n  (lvar :work) :size) min ","owing * + ","owing * ","work size ","@incomplete_sst continued_chars ","opts & ","work unpack ","(send\n  (lvar :size) :-\n  (int 1)) / ","@workbook add_shared_string ","(send\n  (lvar :work) :size) min  - ","(send\n  (lvar :work) :(send\n  (lvar :work) :size) min ) min ","@incomplete_sst continued_chars  * + ","@incomplete_sst continued_chars  * ","work (send\n  (lvar :work) :size) min  ","@incomplete_sst continued_size -  ","@incomplete_sst continued_(send\n  (lvar :size) :-\n  (int 1)) /  ","(send\n  (lvar :(send\n  (lvar :work) :size) min ) :-\n  (int 1)) / "]}," Spreadsheet Excel Reader Biff8 continue_string":{"type":"method","name":"continue_string","children":[],"call":["size + ","head size >= ","chars * ","head size ","head << "," wide ","wide == ","work [] ","owing * ","wide + ","chars - ","head size / ","opts & ","work unpack ","owing *  + ","head owing *  >= ","head owing *  "," opts &  ","opts &  == ","chars -  * ","opts &  + ","head owing *  / "]}," Spreadsheet Excel Reader Biff5 read_string":{"type":"method","name":"read_string","children":[],"call":["work [] ","work unpack ","count_length == "]}," Spreadsheet Excel Offset append_features":{"type":"method","name":"append_features","children":[{"type":"method","name":"offset","children":[],"asgn":[null],"call":[" send "," respond_to? ","@offsets store "," instance_variable_set "," define_method "," instance_variable_set ","@changes store "," define_method "," attr_reader "," instance_methods include? ","key to_s "," instance_methods ","keys each "]}],"call":[]}," Spreadsheet Excel Offset initialize":{"type":"method","name":"initialize","children":[],"call":[]}," Spreadsheet Excel Internals opcode":{"type":"method","name":"opcode","children":[],"call":["OPCODES  [] "]}," Spreadsheet Excel Internals binfmt":{"type":"method","name":"binfmt","children":[],"call":["BINARY_FORMATS  [] "]}," Spreadsheet Excel Internals Biff8 binfmt":{"type":"method","name":"binfmt","children":[],"call":["BINARY_FORMATS  fetch "]}," Spreadsheet Excel Internals Biff5 binfmt":{"type":"method","name":"binfmt","children":[],"call":["BINARY_FORMATS  fetch "]}," Spreadsheet Excel Error value":{"type":"method","name":"value","children":[],"call":["ERROR_VALUES  fetch "]}," Spreadsheet Excel Error initialize":{"type":"method","name":"initialize","children":[],"call":[]}," Spreadsheet Encodings internal":{"type":"method","name":"internal","children":[],"call":["string split zip join ","string split zip ","Array  new ","0 chr ","string size ","string split ","iconv iconv ","Iconv  new ","Spreadsheet  client_encoding ","@@iconvs [] ","string encode ","string encode force_encoding ","string force_encoding ","string dup "," build_output_encoding ","string dup  split zip join ","string dup  split zip ","string dup  size ","string dup  split ","string dup  encode ","string dup  encode force_encoding ","string dup  force_encoding ","string dup  dup "]}," Spreadsheet Encodings client":{"type":"method","name":"client","children":[],"call":["string delete ","iconv iconv ","Iconv  new ","Spreadsheet  client_encoding ","@@iconvs [] ","string encode ","string force_encoding ","string dup ","string dup  delete ","string dup  encode ","string dup  force_encoding ","string dup  dup "]}," Spreadsheet Encodings ascii":{"type":"method","name":"ascii","children":[],"call":["string gsub ","@@utf16_ascii iconv ","string encode "]}," Spreadsheet Datatypes append_features":{"type":"method","name":"append_features","children":[{"type":"method","name":"boolean","children":[],"asgn":[null],"call":[" instance_variable_set ","arg ! ! ","arg ! ","arg == "," define_method "," instance_variable_set "," define_method "," instance_variable_get ! ! "," instance_variable_get ! "," instance_variable_get "," define_method "," instance_variable_get ! ! "," instance_variable_get ! "," instance_variable_get "," define_method ","args each "]},{"type":"method","name":"colors","children":[],"asgn":[{"type":"local","name":"name","value":"name to_s downcase to_sym "},["name to_s downcase to_sym "]],"call":[" raise "," instance_variable_set ","COLORS  include? ","name to_s downcase to_sym ","name to_s downcase ","name to_s "," define_method "," attr_reader ","args each "]},{"type":"method","name":"enum","children":[],"asgn":[{"type":"local","name":"valid","value":"(send\n  (lvar :values) :collect) join "},["(send\n  (lvar :values) :collect) join "],null,null],"call":[" instance_variable_set ","values first "," raise ","arg inspect ","(send\n  (lvar :values) :collect) join ","val inspect ","values collect "," instance_variable_set ","val === ","values any? ","aliases fetch ","arg to_s downcase gsub to_sym ","arg to_s downcase gsub ","arg to_s downcase ","arg to_s ","aliases fetch "," define_method ","values first "," instance_variable_get "," define_method ","aliases store ","values each ","aliases store ","aliases store ","synonyms each ","synonyms is_a? ","values pop each ","values pop ","values last is_a? ","values last "]}],"call":[]}," Spreadsheet ParseExcel Parser parse":{"type":"method","name":"parse","children":[],"call":["Spreadsheet  open "]}," Spreadsheet ParseExcel Worksheet Cell type":{"type":"method","name":"type","children":[],"call":["@value is_a? ","@format time? ","@format date? "]}," Spreadsheet ParseExcel Worksheet Cell to_s":{"type":"method","name":"to_s","children":[],"call":["@value to_s ","Iconv  new iconv ","Iconv  new "]}," Spreadsheet ParseExcel Worksheet Cell to_f":{"type":"method","name":"to_f","children":[],"call":["@value to_f "]}," Spreadsheet ParseExcel Worksheet Cell to_i":{"type":"method","name":"to_i","children":[],"call":["@value to_i "]}," Spreadsheet ParseExcel Worksheet Cell datetime":{"type":"method","name":"datetime","children":[],"call":["@row datetime "]}," Spreadsheet ParseExcel Worksheet Cell date":{"type":"method","name":"date","children":[],"call":["@row date "]}," Spreadsheet ParseExcel Worksheet Cell initialize":{"type":"method","name":"initialize","children":[],"call":["Spreadsheet  client_encoding "]}," Spreadsheet ParseExcel parse":{"type":"method","name":"parse","children":[],"call":[]}," Spreadsheet Worksheet format_column":{"type":"method","name":"format_column","children":[],"call":[" shorten "," format_column ","idx collect ","@columns []= ","Column  new ","opts []= "," new_format_column ","width is_a? "," format_Column  new  ","@Column  new s []= "," new_format_Column  new  "]}," Spreadsheet Worksheet column":{"type":"method","name":"column","children":[],"call":["Column  new "," default_format ","@columns [] "]}," Spreadsheet Excel Writer Worksheet write_defcolwidth":{"type":"method","name":"write_defcolwidth","children":[],"call":[" write_op ","(int 8) pack "]}," Spreadsheet Excel Writer Worksheet write_colinfos":{"type":"method","name":"write_colinfos","children":[],"call":["bunch clear "," write_colinfo ","cols [] != ","cols [] ","idx next ","bunch << ","cols each_with_index ","@worksheet columns ","@worksheet columns  [] != ","@worksheet columns  [] ","@worksheet columns  each_with_index "]}," Spreadsheet Excel Writer Worksheet write_colinfo":{"type":"method","name":"write_colinfo","children":[],"call":[" write_op ","data pack "," binfmt "," opcode ","xf_idx to_i ","width to_i ","bunch last idx ","bunch last ","col idx ","col collapsed? ","col outline_level to_i << ","col outline_level to_i ","col outline_level ","col hidden? ","@workbook xf_index ","col default_format ","@worksheet workbook ","col width to_f * ","col width to_f ","col width ","bunch first ","@workbook xf_index  to_i ","col width to_f *  to_i ","bunch first  idx ","bunch first  bunch first lapsed? ","bunch first  outline_level to_i << ","bunch first  outline_level to_i ","bunch first  outline_level ","bunch first  hidden? ","bunch first  default_format ","col col width to_f *  to_f * ","bunch first  width to_f * ","col col width to_f *  to_f ","bunch first  width to_f ","col col width to_f *  ","bunch first  width "]}," Spreadsheet Excel Writer Workbook write_tabid":{"type":"method","name":"write_tabid","children":[],"call":[" write_op ","(int 1) pack "]}," Spreadsheet Excel Worksheet column":{"type":"method","name":"column","children":[],"call":[" ensure_rows_read "]}," Spreadsheet Excel Reader read_colinfo":{"type":"method","name":"read_colinfo","children":[],"call":["worksheet columns []= ","worksheet columns ","column worksheet= ","Column  new ","opts & ","(send\n  (lvar :opts) :&\n  (int 4096)) > ","(send\n  (lvar :opts) :&\n  (int 1)) > ","width to_f / ","width to_f ","@workbook format ","first upto ","work unpack "," binfmt [] "," binfmt ","(send\n  (lvar :opts) :&\n  (int 1792)) / ","worksheet Column  new s []= ","worksheet Column  new s ","Column  new  worksheet= "]}," Spreadsheet Column ==":{"type":"method","name":"==","children":[],"call":[" outline_level == ","other outline_level "," outline_level "," collapsed == ","other collapsed "," collapsed "," hidden == ","other hidden "," hidden "," width == ","other width "," width "," default_format == ","other default_format "," default_format ","other is_a? "]}," Spreadsheet Column each":{"type":"method","name":"each","children":[],"call":["row [] "," idx ","@worksheet each "]}," Spreadsheet Column default_format=":{"type":"method","name":"default_format=","children":[],"call":["@worksheet add_format ","@worksheet column_updated "]}," Spreadsheet Column initialize":{"type":"method","name":"initialize","children":[],"call":[" default_format= "," send ","opts each ","opts [] "]}," Spreadsheet Worksheet last_row_index":{"type":"method","name":"last_row_index","children":[],"call":["(send\n  (send\n    (send nil :dimensions) :[]\n    (int 1)) :-\n  (int 1)) max "," dimensions [] - "," dimensions [] "," dimensions "]}," Spreadsheet Worksheet last_row":{"type":"method","name":"last_row","children":[],"call":[" row "," last_row_index "]}," Spreadsheet Link to_uri":{"type":"method","name":"to_uri","children":[],"call":["URI  parse "," href "]}," Spreadsheet Link href":{"type":"method","name":"href","children":[],"call":["href << << ","href << ","(or\n  (ivar :@url)\n  (ivar :@dos)) to_s dup ","(or\n  (ivar :@url)\n  (ivar :@dos)) to_s "," client ","(or\n  (ivar :@url)\n  (ivar :@dos)) to_s dup  << << ","(or\n  (ivar :@url)\n  (ivar :@dos)) to_s dup  << "]}," Spreadsheet Link initialize":{"type":"method","name":"initialize","children":[],"call":[]}," Spreadsheet Worksheet write_url":{"type":"method","name":"write_url","children":[],"call":[" row []= ","Link  new "," row "]}," Spreadsheet Excel Writer Worksheet write_hyperlink_table":{"type":"method","name":"write_hyperlink_table","children":[],"call":[" write_hlink ","row idx ","cell is_a? ","row each_with_index ","@worksheet each "]}," Spreadsheet Excel Writer Worksheet write_hlink":{"type":"method","name":"write_hlink","children":[],"call":[" write_op "," opcode ","tail push ","(send\n  (send\n    (lvar :frag) :size) :/\n  (int 2)) pack ","frag size / ","frag size "," internal dup << "," internal dup "," internal ","link fragment ","(str \"e0c9ea79f9bace118c8200aa004ba90b\") pack ","url size ","link url ","(send\n  (send\n    (lvar :frme) :size) :/\n  (int 2)) pack ","frme size / ","frme size ","link target_frame ","(send\n  (send\n    (lvar :desc) :size) :/\n  (int 2)) pack ","desc size / ","desc size ","link == ","(int 2) pack ","(str \"d0c9ea79f9bace118c8200aa004ba90b\") pack ","(lvar :row) pack ","(send\n  (send\n    (lvar : internal dup << ) :size) :/\n  (int 2)) pack "," internal dup <<  size / "," internal dup <<  size ","link  internal dup << ment ","link  internal dup <<  "]}," Spreadsheet Excel Worksheet add_link":{"type":"method","name":"add_link","children":[],"call":["@links store "]}," Spreadsheet Excel Reader read_hlink_string":{"type":"method","name":"read_hlink_string","children":[],"call":[" client ","work [] chomp ","work [] ","count * ","work unpack "]}," Spreadsheet Excel Reader read_hlink":{"type":"method","name":"read_hlink","children":[],"call":["worksheet add_link ","firstcol upto ","firstrow upto ","link << ","link href ","link empty? "," read_hlink_string ","link fragment= ","textmark > ","link url= "," client ","work [] ","total > ","work unpack ","count + ","link dos= ","prefix << ","work [] chomp "," internal * "," internal ","uid == ","has_link > ","unc > ","link target_frame= ","target > ","desc > ","Link  new ","opts & ","worksheet add_Link  new  ","Link  new  << ","Link  new  href ","Link  new  empty? "," read_hLink  new _string ","Link  new  fragment= ","opts &  > ","Link  new  url= ","Link  new  dos= "," internal *  << ","has_Link  new  > ","Link  new  target_frame= ","link opts & _frame= "]}," Spreadsheet Worksheet column_updated":{"type":"method","name":"column_updated","children":[],"call":["@columns []= "]}," Spreadsheet Column updater":{"type":"method","name":"updater","children":[],"call":["@worksheet column_updated "," send "," define_method "," alias_method "," instance_methods include? "," instance_methods ","keys each "]}," Spreadsheet Excel Row each":{"type":"method","name":"each","children":[],"call":["block call "," [] "," size times "," size "]}," Spreadsheet Row format_updater":{"type":"method","name":"format_updater","children":[],"call":["@worksheet row_updated "," send "," define_method "," alias_method "," instance_methods include? "," instance_methods ","keys each "]}," Spreadsheet Excel Writer Worksheet need_number?":{"type":"method","name":"need_number?","children":[],"call":["(str \"^[\\\\000\\\\001]\\\\000{3}\") match ! ","(str \"^[\\\\000\\\\001]\\\\000{3}\") match ","(send\n  (lvar :cell) :*\n  (int 100)) pack ","cell * ","cell is_a? ","cell abs > ","cell abs "," need_number? ","test1 > ","(send\n  (lvar :cell) :*\n  (int 100)) pack unpack ","higher to_i ","higher == ","cell nan? ! ","cell nan? ","cell *  to_i ","cell *  == "]}," Spreadsheet Excel Reader Biff8 read_extsst":{"type":"method","name":"read_extsst","children":[],"call":["@workbook offsets store ","@workbook offsets "]}," Spreadsheet Row formatted_size":{"type":"method","name":"formatted_size","children":[],"call":["fs > ","@formats size "," size ","@formats rcompact! ","Helpers  rcompact ","@formats size  > "]}," Spreadsheet Row formatted":{"type":"method","name":"formatted","children":[],"call":["copy concat ","Array  new ","@formats size - ","copy length ","@formats size ","copy length < ","@formats rcompact! "," dup ","Helpers  rcompact "," dup  concat "," dup  length "," dup  length < "]}," Array rcompact!":{"type":"method","name":"rcompact!","children":[],"call":[" pop "," last nil? "," last "," empty? ! "," empty? "]}," Array rcompact":{"type":"method","name":"rcompact","children":[],"call":[" dup rcompact! "," dup "]}," Spreadsheet Excel Writer Worksheet write_window2":{"type":"method","name":"write_window2","children":[],"call":[" write_op "," opcode ","(lvar :flags) pack "," binfmt ","@worksheet active ","@worksheet selected ","(send\n  (ivar :@worksheet) :froze_left) pack ","@worksheet froze_left ","@worksheet froze_top "," puts ","@worksheet has_frozen_panel? "]}," Spreadsheet Excel Reader setup":{"type":"method","name":"setup","children":[],"call":[" extend_internals "," extend_reader ","@workbook biff_version ","@workbook version= ","@workbook bof= ","@workbook ole= "," read_bof ","@book read ","@ole file open ","@ole file ","Workbook  new ","Ole Storage  open ","(str \"Book\") any? ","io rewind ","str force_encoding ","str respond_to? ","io string ","io respond_to? "," raise ","io set_encoding ","Gem Version  new >= ","Gem Version  new ","@workbook @workbook biff_version _version ","Workbook  new  biff_version ","Workbook  new  version= ","Workbook  new  bof= ","Workbook  new  ole= ","Ole Storage  open  file open ","Ole Storage  open  file ","(io string  \"Book\") any? ","io string  force_encoding ","io string  respond_to? ","io io string ing "]}," Spreadsheet Worksheet format_dates!":{"type":"method","name":"format_dates!","children":[],"call":["row set_format ","fmt number_format= ","row format dup ","row format "," client ","row format date_or_time? ","row formats [] ","row formats ","row each_with_index "," each ","new_format number_format= ","new_formats [] []= ","existing_format dup ","new_formats [] ","new_format ! ","new_formats [] [] ","row format dup  number_format= ","new_formats [] []=  number_format= ","new_formats [] []  number_format= ","new_formats [] []= s [] []= ","new_formats [] [] s [] []= ","row format  dup ","new_formats [] []= s [] ","new_formats [] [] s [] ","new_formats [] []=  ! ","new_formats [] []  ! ","new_formats [] []= s [] [] ","new_formats [] [] s [] [] "]}," Spreadsheet Worksheet active=":{"type":"method","name":"active=","children":[],"call":[" selected= "," warn "]}," Spreadsheet Worksheet active":{"type":"method","name":"active","children":[],"call":[" selected "," warn "]}," Spreadsheet Format date_or_time?":{"type":"method","name":"date_or_time?","children":[],"call":["(str \"[hmsYMD]\") match ! ! ","(str \"[hmsYMD]\") match ! ","(str \"[hmsYMD]\") match ","@number_format to_s ","Regexp  new match ! ! ","Regexp  new match ! ","Regexp  new match ","Regexp  new "," client ","@regexes [] match ! ! ","@regexes [] match ! ","@regexes [] match ","@regexes [] "," number? ! "," number? "," matches_format? "]}," Spreadsheet Excel Writer Workbook sanitize_worksheets":{"type":"method","name":"sanitize_worksheets","children":[],"call":["sheets first selected= ","sheets first ","sheet format_dates! ","sheet selected ","sheets each ","sheets blank? ","sheets empty? "]}," Spreadsheet Excel Reader read_window2":{"type":"method","name":"read_window2","children":[],"call":["worksheet selected= ","flags & > ","flags & ","work unpack "]}," Spreadsheet Encodings utf8":{"type":"method","name":"utf8","children":[],"call":["iconv iconv ","Iconv  new ","@@iconvs [] ","string encode ","string force_encoding ","string dup "," build_output_encoding ","string dup  encode ","string dup  force_encoding ","string dup  dup "]}," Spreadsheet Compatibility method_name":{"type":"method","name":"method_name","children":[],"call":["symbol to_s ","symbol to_sym "]}," Spreadsheet Compatibility ivar_name":{"type":"method","name":"ivar_name","children":[],"call":[]}," Spreadsheet Excel Reader set_missing_row_address":{"type":"method","name":"set_missing_row_address","children":[],"call":["worksheet set_row_address ","@current_row_block_offset [] ","worksheet offsets [] ","worksheet offsets ","work unpack "]}," Spreadsheet Excel Writer Worksheet write_guts":{"type":"method","name":"write_guts","children":[],"call":[" write_op ","data pack "," opcode ","col_outline_level + ","row_outline_level + ","col outline_level ","a outline_level <=> ","b outline_level ","a outline_level ","(send\n  (send\n    (ivar :@worksheet) :columns) :select) max ","x != ","@worksheet columns select ","@worksheet columns ","row outline_level ","(send\n  (send\n    (ivar :@worksheet) :rows) :select) max ","@worksheet rows select ","@worksheet rows ","col outline_level  + ","row outline_level  + "]}," Spreadsheet Excel Reader read_guts":{"type":"method","name":"read_guts","children":[],"call":["worksheet guts []= ","worksheet guts ","work unpack "]}," Spreadsheet Workbook sheet_count":{"type":"method","name":"sheet_count","children":[],"call":["@worksheets length "]}," Spreadsheet Worksheet merge_cells":{"type":"method","name":"merge_cells","children":[],"call":["@merged_cells push "]}," Spreadsheet Excel Writer Worksheet write_merged_cells":{"type":"method","name":"write_merged_cells","children":[],"call":[" write_op "," opcode ","(send\n  (array\n    (lvar :count)) :+\n  (send\n    (lvar :window) :flatten)) pack ","(lvar :count) + ","window flatten ","window size ","(lvasgn :window\n  (send\n    (lvar :merge_cells) :slice!\n    (erange\n      (int 0)\n      (int 1027)))) any? ","merge_cells slice! ","@worksheet merged_cells dup ","@worksheet merged_cells ","@worksheet merged_cells any? ","(send\n  (array\n    (lvar :window size )) :+\n  (send\n    (lvar :window) :flatten)) pack ","(send\n  (array\n    (lvar :count)) :+\n  (send\n    (lvar :merge_cells slice! ) :flatten)) pack ","(lvar :window size ) + ","merge_cells slice!  flatten ","merge_cells slice!  size ","(lvasgn :merge_cells slice! \n  (send\n    (lvar :merge_cells) :slice!\n    (erange\n      (int 0)\n      (int 1027)))) any? ","(lvasgn :window\n  (send\n    (lvar :@worksheet merged_cells dup ) :slice!\n    (erange\n      (int 0)\n      (int 1027)))) any? ","@worksheet merged_cells dup  slice! "]}," Spreadsheet Excel Reader read_merged_cells":{"type":"method","name":"read_merged_cells","children":[],"call":["worksheet merged_cells push "," read_range_address_list ","worksheet merged_cells "]}," Spreadsheet Excel Reader Biff8 read_range_address_list":{"type":"method","name":"read_range_address_list","children":[],"call":["results << ","work [] unpack ","work [] ","offset + ","count times ","work [] unpack first ","len < ","work [] unpack first  times "]}," Spreadsheet Excel Reader Biff5 read_range_address_list":{"type":"method","name":"read_range_address_list","children":[],"call":["results << ","work [] unpack ","work [] ","offset + ","count times ","work [] unpack first ","len < ","work [] unpack first  times "]}," Spreadsheet Helpers rcompact":{"type":"method","name":"rcompact","children":[],"call":["array pop ","array last nil? ","array last ","array empty? ! ","array empty? "]}," Spreadsheet Worksheet protect!":{"type":"method","name":"protect!","children":[],"call":["Excel Password  password_hash ","password size == ","password size ","password to_s ","Excel Password  password to_s _hash ","password to_s  size == ","password to_s  size ","password to_s  to_s "]}," Spreadsheet Worksheet protected?":{"type":"method","name":"protected?","children":[],"call":[]}," Spreadsheet Excel Writer Worksheet write_proctection":{"type":"method","name":"write_proctection","children":[],"call":[" write_op ","(send\n  (ivar :@worksheet) :password_hash) pack ","@worksheet password_hash "," opcode ","(int 1) pack ","@worksheet protected? "]}," Spreadsheet Excel Reader read_sheet_protection":{"type":"method","name":"read_sheet_protection","children":[],"call":["worksheet password_hash= ","data unpack first ","data unpack ","worksheet protect! ","data unpack first == "]}," Spreadsheet Excel Password rol15":{"type":"method","name":"rol15","children":[],"call":["(send\n  (lvar :new_hash) :&\n  (int 32767)) | ","new_hash >> ","new_hash & ","hash << ","(send\n  (lvar :hash << ) :&\n  (int 32767)) | ","hash <<  >> ","hash <<  & "]}," Spreadsheet Excel Password password_hash":{"type":"method","name":"password_hash","children":[],"call":["hash ^ ^ ","hash ^ ","password size "," rol15 ","chr [] ord ","chr [] ","password chars reverse_each ","password chars "," rol15  ^ ^ "," rol15  ^ "]}," Spreadsheet Font fast_key":{"type":"method","name":"fast_key","children":[],"call":[]}," Spreadsheet Font build_key":{"type":"method","name":"build_key","children":[],"call":["key join ","key << << "," client "," encoding to_s "," encoding ","key << "," family to_s "," family "," color to_s "," color "," underline to_s "," underline "," escapement to_s "," escapement "," shadow? "," outline? "," strikeout? "," italic? "," weight to_s "," weight "," size to_s "," size "]}," Spreadsheet Row default_format":{"type":"method","name":"default_format","children":[],"call":["@workbook default_format ","@worksheet default_format "]}," Spreadsheet Excel Writer Format style_code":{"type":"method","name":"style_code","children":[],"call":["SELYTS_ENIL_REDROB_FX  [] "]}," Spreadsheet Excel Writer Format line_style":{"type":"method","name":"line_style","children":[],"call":[]}," Spreadsheet Excel Row to_a":{"type":"method","name":"to_a","children":[],"call":[" [] "," length "]}," Spreadsheet Workbook set_custom_color":{"type":"method","name":"set_custom_color","children":[],"call":["@palette []= "," raise ","(irange\n  (int 0)\n  (int 255)) include? ! ","(irange\n  (int 0)\n  (int 255)) include? ","(lvar :red) find "]}," Spreadsheet Excel Writer Workbook default_palette":{"type":"method","name":"default_palette","children":[],"call":[]}," Spreadsheet Excel Writer Workbook write_palette":{"type":"method","name":"write_palette","children":[],"call":["writer write ","(send\n  (lvar :data) :collect) join ","c push pack ","c push ","data collect ","(send nil :opcode\n  (sym :palette)) pack ","data size ","2 + ","4 * "," opcode ","data []= "," raise ","data [] ","SEDOC_ROLOC  [] - ","SEDOC_ROLOC  [] ","idx kind_of? ","workbook palette each ","workbook palette "," default_palette ","(send\n  (lvar : default_palette ) :collect) join "," default_palette  collect "," default_palette  size "," default_palette  []= "," default_palette  [] ","SEDOC_ROLOC  [] -  kind_of? "]}," Spreadsheet Excel Rgb as_hex":{"type":"method","name":"as_hex","children":[],"call":[" to_i to_s "," to_i "]}," Spreadsheet Excel Rgb to_i":{"type":"method","name":"to_i","children":[],"call":["(send\n  (send nil :r) :*\n  (begin\n    (send\n      (int 256) :*\n      (int 256)))) + + "," b ","(send\n  (send nil :r) :*\n  (begin\n    (send\n      (int 256) :*\n      (int 256)))) + "," g * "," g "," r * ","256 * "," r "]}," Spreadsheet Excel Rgb initialize":{"type":"method","name":"initialize","children":[],"call":["b & ","g & ","r & "]}," Spreadsheet Excel Rgb to_rgb":{"type":"method","name":"to_rgb","children":[],"call":[]}," Spreadsheet Excel Worksheet rows":{"type":"method","name":"rows","children":[],"call":[" to_a "]}," Spreadsheet Format number?":{"type":"method","name":"number?","children":[],"call":["@regexes [] match ! ! ","@regexes [] match ! ","@regexes [] match ","@number_format to_s ","@regexes [] "," matches_format? "]}," Spreadsheet Workbook delete_worksheet":{"type":"method","name":"delete_worksheet","children":[],"call":["@worksheets delete_at "]}," Spreadsheet Excel Writer Worksheet write_margins":{"type":"method","name":"write_margins","children":[],"call":[" write_op ","(lvar :value) pack "," binfmt "," opcode ","(sym :left) include? ","@worksheet margins each ","@worksheet margins "]}," Spreadsheet Excel Writer Worksheet write_pagesetup":{"type":"method","name":"write_pagesetup","children":[],"call":[" write_op ","data pack "," binfmt "," opcode ","data []= ","@worksheet pagesetup [] ","@worksheet pagesetup ","@worksheet pagesetup [] == ","@worksheet pagesetup [] dup ","@worksheet pagesetup [] dup  pack ","@worksheet pagesetup [] dup  []= "]}," Spreadsheet Excel Worksheet pagesetup":{"type":"method","name":"pagesetup","children":[],"call":[" ensure_rows_read "]}," Spreadsheet Excel Worksheet margins":{"type":"method","name":"margins","children":[],"call":[" ensure_rows_read "]}," Spreadsheet Excel Reader read_pagesetup":{"type":"method","name":"read_pagesetup","children":[],"call":["worksheet pagesetup []= ","worksheet pagesetup ","data [] ","data [] == ","work unpack "," binfmt ","worksheet pagesetup delete_if ","work unpack  [] ","work unpack  [] == "]}," Spreadsheet Excel Worksheet add_note":{"type":"method","name":"add_note","children":[],"call":["@notes store "]}," Spreadsheet Excel Reader read_note":{"type":"method","name":"read_note","children":[],"call":["@noteList << ","@note objID= ","@note author= ","@note col= ","@note row= ","@note length= ","Note  new ","_objAuth pack ","work unpack ","_objAuthLenFmt == ","@11S + + ","@11S + ","(send\n  (lvar :_objAuthLen) :-\n  (int 1)) to_s ","_objAuthLen - ","@11C + + ","@11C + ","_objAuthLen > ","Note  new List << ","Note  new  objID= ","Note  new  author= ","Note  new  col= ","Note  new  row= ","Note  new  length= ","_objAuth pack  pack ","work unpack  pack ","_objAuth pack LenFmt == ","work unpack LenFmt == ","(send\n  (lvar :_objAuth pack Len) :-\n  (int 1)) to_s ","(send\n  (lvar :work unpack Len) :-\n  (int 1)) to_s ","_objAuth pack Len - ","work unpack Len - ","_objAuth pack Len > ","work unpack Len > "]}," Spreadsheet Excel Reader Biff8 unpack_string":{"type":"method","name":"unpack_string","children":[],"call":[" wide ","wide == ","work [] ","opts & ","work unpack "," opts &  ","opts &  == "]}," Spreadsheet Row update_format":{"type":"method","name":"update_format","children":[],"call":["@worksheet row_updated ","@worksheet add_format ","@formats [] ","@formats []= ","fmt update_format ","fmt font= ","fmt font clone ","fmt font "," default_format clone "," default_format ","@formats [] update_format "," default_format clone  update_format "," default_format clone  font= "," default_format clone  font clone "," default_format clone  font "]}," Spreadsheet Note initialize":{"type":"method","name":"initialize","children":[],"call":[]}," Spreadsheet Format update_format":{"type":"method","name":"update_format","children":[],"call":[" send ","@font send ","@font respond_to? ","opts each "]}," Spreadsheet NoteObject initialize":{"type":"method","name":"initialize","children":[],"call":[]}," Spreadsheet Excel Workbook inspect":{"type":"method","name":"inspect","children":[],"call":[" worksheets "]}," Spreadsheet Worksheet freeze!":{"type":"method","name":"freeze!","children":[],"call":["left to_i ","top to_i "]}," Spreadsheet Worksheet has_frozen_panel?":{"type":"method","name":"has_frozen_panel?","children":[],"call":["@froze_left > ","@froze_top > "]}," Spreadsheet Worksheet compact!":{"type":"method","name":"compact!","children":[],"call":["@dimensions []= ","@dimensions [] "," row [] empty? "," row [] "," row "," row [] nil? ","(irange\n  (send\n    (ivar :@dimensions) :[]\n    (int 0))\n  (send\n    (ivar :@dimensions) :[]\n    (int 1))) inject ","(irange\n  (send\n    (ivar :@dimensions) :[]\n    (int 2))\n  (send\n    (ivar :@dimensions) :[]\n    (int 3))) reverse_each ","(irange\n  (send\n    (ivar :@dimensions) :[]\n    (int 2))\n  (send\n    (ivar :@dimensions) :[]\n    (int 3))) each ","i + ","(send\n  (begin\n    (send\n      (lvar :i) :-\n      (send\n        (ivar :@dimensions) :[]\n        (int 1)))) :/\n  (int 2)) to_i + ","(send\n  (begin\n    (send\n      (lvar :i) :-\n      (send\n        (ivar :@dimensions) :[]\n        (int 1)))) :/\n  (int 2)) to_i ","(send\n  (lvar :i) :-\n  (send\n    (ivar :@dimensions) :[]\n    (int 1))) / ","i - ","@dimensions [] + ","(send\n  (begin\n    (send\n      (begin\n        (send\n          (lvar :i) :-\n          (send\n            (ivar :@dimensions) :[]\n            (int 1)))) :+\n      (int 1))) :/\n  (int 2)) to_i ","(send\n  (begin\n    (send\n      (lvar :i) :-\n      (send\n        (ivar :@dimensions) :[]\n        (int 1)))) :+\n  (int 1)) / ","(send\n  (lvar :i) :-\n  (send\n    (ivar :@dimensions) :[]\n    (int 1))) + "," row compact join empty? "," row compact join "," row compact "," row empty? ","i - > ","@dimensions [] - ","(erange\n  (send\n    (ivar :@dimensions) :[]\n    (int 0))\n  (send\n    (ivar :@dimensions) :[]\n    (int 1))) each "," recalculate_dimensions "," row [] to_s empty? "," row [] to_s ","row_size + ","(send\n  (begin\n    (send\n      (lvar :row_size) :-\n      (send\n        (ivar :@dimensions) :[]\n        (int 1)))) :/\n  (int 2)) to_i + ","(send\n  (begin\n    (send\n      (lvar :row_size) :-\n      (send\n        (ivar :@dimensions) :[]\n        (int 1)))) :/\n  (int 2)) to_i ","(send\n  (lvar :row_size) :-\n  (send\n    (ivar :@dimensions) :[]\n    (int 1))) / ","row_size - ","(send\n  (begin\n    (send\n      (begin\n        (send\n          (lvar :row_size) :-\n          (send\n            (ivar :@dimensions) :[]\n            (int 1)))) :+\n      (int 1))) :/\n  (int 2)) to_i ","(send\n  (begin\n    (send\n      (lvar :row_size) :-\n      (send\n        (ivar :@dimensions) :[]\n        (int 1)))) :+\n  (int 1)) / ","(send\n  (lvar :row_size) :-\n  (send\n    (ivar :@dimensions) :[]\n    (int 1))) + ","row_size - > ","@di + mensi + ons []= ","@d@dimensions [] + mens@dimensions [] + ons []= ","@d@dimensions [] - mens@dimensions [] - ons []= ","@di + mensi + ons [] ","@d@dimensions [] + mens@dimensions [] + ons [] ","@d@dimensions [] - mens@dimensions [] - ons [] "," row [] ni + l? "," row [] n@dimensions [] + l? "," row [] n@dimensions [] - l? ","(i + range\n  (send\n    (i + var :@di + mensi + ons) :[]\n    (i + nt 0))\n  (send\n    (i + var :@di + mensi + ons) :[]\n    (i + nt 1))) i + nject ","(@dimensions [] + range\n  (send\n    (@dimensions [] + var :@d@dimensions [] + mens@dimensions [] + ons) :[]\n    (@dimensions [] + nt 0))\n  (send\n    (@dimensions [] + var :@d@dimensions [] + mens@dimensions [] + ons) :[]\n    (@dimensions [] + nt 1))) @dimensions [] + nject ","(@dimensions [] - range\n  (send\n    (@dimensions [] - var :@d@dimensions [] - mens@dimensions [] - ons) :[]\n    (@dimensions [] - nt 0))\n  (send\n    (@dimensions [] - var :@d@dimensions [] - mens@dimensions [] - ons) :[]\n    (@dimensions [] - nt 1))) @dimensions [] - nject ","(i + range\n  (send\n    (i + var :@di + mensi + ons) :[]\n    (i + nt 2))\n  (send\n    (i + var :@di + mensi + ons) :[]\n    (i + nt 3))) reverse_each ","(@dimensions [] + range\n  (send\n    (@dimensions [] + var :@d@dimensions [] + mens@dimensions [] + ons) :[]\n    (@dimensions [] + nt 2))\n  (send\n    (@dimensions [] + var :@d@dimensions [] + mens@dimensions [] + ons) :[]\n    (@dimensions [] + nt 3))) reverse_each ","(@dimensions [] - range\n  (send\n    (@dimensions [] - var :@d@dimensions [] - mens@dimensions [] - ons) :[]\n    (@dimensions [] - nt 2))\n  (send\n    (@dimensions [] - var :@d@dimensions [] - mens@dimensions [] - ons) :[]\n    (@dimensions [] - nt 3))) reverse_each ","(i + range\n  (send\n    (i + var :@di + mensi + ons) :[]\n    (i + nt 2))\n  (send\n    (i + var :@di + mensi + ons) :[]\n    (i + nt 3))) each ","(@dimensions [] + range\n  (send\n    (@dimensions [] + var :@d@dimensions [] + mens@dimensions [] + ons) :[]\n    (@dimensions [] + nt 2))\n  (send\n    (@dimensions [] + var :@d@dimensions [] + mens@dimensions [] + ons) :[]\n    (@dimensions [] + nt 3))) each ","(@dimensions [] - range\n  (send\n    (@dimensions [] - var :@d@dimensions [] - mens@dimensions [] - ons) :[]\n    (@dimensions [] - nt 2))\n  (send\n    (@dimensions [] - var :@d@dimensions [] - mens@dimensions [] - ons) :[]\n    (@dimensions [] - nt 3))) each ","i +  + ","@dimensions [] +  + ","@dimensions [] -  + ","(send\n  (begi + n\n    (send\n      (lvar :i + ) :-\n      (send\n        (i + var :@di + mensi + ons) :[]\n        (i + nt 1)))) :/\n  (i + nt 2)) to_i +  + ","(send\n  (beg@dimensions [] + n\n    (send\n      (lvar :@dimensions [] + ) :-\n      (send\n        (@dimensions [] + var :@d@dimensions [] + mens@dimensions [] + ons) :[]\n        (@dimensions [] + nt 1)))) :/\n  (@dimensions [] + nt 2)) to_@dimensions [] +  + ","(send\n  (beg@dimensions [] - n\n    (send\n      (lvar :@dimensions [] - ) :-\n      (send\n        (@dimensions [] - var :@d@dimensions [] - mens@dimensions [] - ons) :[]\n        (@dimensions [] - nt 1)))) :/\n  (@dimensions [] - nt 2)) to_@dimensions [] -  + ","(send\n  (begin\n    (send\n      (lvar :i) :-\n      (send\n        (ivar :@dimensions) :[]\n        (int 1)))) :/\n  (int 2)) to(send\n  (begin\n    (send\n      (lvar :i) :-\n      (send\n        (ivar :@dimensions) :[]\n        (int 1)))) :/\n  (int 2)) to_i +  + ","(send\n  (begin\n    (send\n      (lvar :i) :-\n      (send\n        (ivar :@dimensions) :[]\n        (int 1)))) :/\n  (int 2)) to(send\n  (begin\n    (send\n      (lvar :row_size) :-\n      (send\n        (ivar :@dimensions) :[]\n        (int 1)))) :/\n  (int 2)) to_i +  + ","(send\n  (begi + n\n    (send\n      (lvar :i + ) :-\n      (send\n        (i + var :@di + mensi + ons) :[]\n        (i + nt 1)))) :/\n  (i + nt 2)) to_i +  ","(send\n  (beg@dimensions [] + n\n    (send\n      (lvar :@dimensions [] + ) :-\n      (send\n        (@dimensions [] + var :@d@dimensions [] + mens@dimensions [] + ons) :[]\n        (@dimensions [] + nt 1)))) :/\n  (@dimensions [] + nt 2)) to_@dimensions [] +  ","(send\n  (beg@dimensions [] - n\n    (send\n      (lvar :@dimensions [] - ) :-\n      (send\n        (@dimensions [] - var :@d@dimensions [] - mens@dimensions [] - ons) :[]\n        (@dimensions [] - nt 1)))) :/\n  (@dimensions [] - nt 2)) to_@dimensions [] -  ","(send\n  (begin\n    (send\n      (lvar :i) :-\n      (send\n        (ivar :@dimensions) :[]\n        (int 1)))) :/\n  (int 2)) to(send\n  (begin\n    (send\n      (lvar :i) :-\n      (send\n        (ivar :@dimensions) :[]\n        (int 1)))) :/\n  (int 2)) to_i +  ","(send\n  (begin\n    (send\n      (lvar :i) :-\n      (send\n        (ivar :@dimensions) :[]\n        (int 1)))) :/\n  (int 2)) to(send\n  (begin\n    (send\n      (lvar :row_size) :-\n      (send\n        (ivar :@dimensions) :[]\n        (int 1)))) :/\n  (int 2)) to_i +  ","(send\n  (lvar :i + ) :-\n  (send\n    (i + var :@di + mensi + ons) :[]\n    (i + nt 1))) / ","(send\n  (lvar :@dimensions [] + ) :-\n  (send\n    (@dimensions [] + var :@d@dimensions [] + mens@dimensions [] + ons) :[]\n    (@dimensions [] + nt 1))) / ","(send\n  (lvar :@dimensions [] - ) :-\n  (send\n    (@dimensions [] - var :@d@dimensions [] - mens@dimensions [] - ons) :[]\n    (@dimensions [] - nt 1))) / ","i +  - ","@dimensions [] +  - ","@dimensions [] -  - ","@di + mensi + ons [] + ","@d@dimensions [] + mens@dimensions [] + ons [] + ","@d@dimensions [] - mens@dimensions [] - ons [] + ","(send\n  (begi + n\n    (send\n      (begi + n\n        (send\n          (lvar :i + ) :-\n          (send\n            (i + var :@di + mensi + ons) :[]\n            (i + nt 1)))) :+\n      (i + nt 1))) :/\n  (i + nt 2)) to_i +  ","(send\n  (beg@dimensions [] + n\n    (send\n      (beg@dimensions [] + n\n        (send\n          (lvar :@dimensions [] + ) :-\n          (send\n            (@dimensions [] + var :@d@dimensions [] + mens@dimensions [] + ons) :[]\n            (@dimensions [] + nt 1)))) :+\n      (@dimensions [] + nt 1))) :/\n  (@dimensions [] + nt 2)) to_@dimensions [] +  ","(send\n  (beg@dimensions [] - n\n    (send\n      (beg@dimensions [] - n\n        (send\n          (lvar :@dimensions [] - ) :-\n          (send\n            (@dimensions [] - var :@d@dimensions [] - mens@dimensions [] - ons) :[]\n            (@dimensions [] - nt 1)))) :+\n      (@dimensions [] - nt 1))) :/\n  (@dimensions [] - nt 2)) to_@dimensions [] -  ","(send\n  (begin\n    (send\n      (begin\n        (send\n          (lvar :i) :-\n          (send\n            (ivar :@dimensions) :[]\n            (int 1)))) :+\n      (int 1))) :/\n  (int 2)) to(send\n  (begin\n    (send\n      (lvar :i) :-\n      (send\n        (ivar :@dimensions) :[]\n        (int 1)))) :/\n  (int 2)) to_i +  ","(send\n  (begin\n    (send\n      (begin\n        (send\n          (lvar :i) :-\n          (send\n            (ivar :@dimensions) :[]\n            (int 1)))) :+\n      (int 1))) :/\n  (int 2)) to(send\n  (begin\n    (send\n      (lvar :row_size) :-\n      (send\n        (ivar :@dimensions) :[]\n        (int 1)))) :/\n  (int 2)) to_i +  ","(send\n  (begi + n\n    (send\n      (lvar :i + ) :-\n      (send\n        (i + var :@di + mensi + ons) :[]\n        (i + nt 1)))) :+\n  (i + nt 1)) / ","(send\n  (beg@dimensions [] + n\n    (send\n      (lvar :@dimensions [] + ) :-\n      (send\n        (@dimensions [] + var :@d@dimensions [] + mens@dimensions [] + ons) :[]\n        (@dimensions [] + nt 1)))) :+\n  (@dimensions [] + nt 1)) / ","(send\n  (beg@dimensions [] - n\n    (send\n      (lvar :@dimensions [] - ) :-\n      (send\n        (@dimensions [] - var :@d@dimensions [] - mens@dimensions [] - ons) :[]\n        (@dimensions [] - nt 1)))) :+\n  (@dimensions [] - nt 1)) / ","(send\n  (lvar :i + ) :-\n  (send\n    (i + var :@di + mensi + ons) :[]\n    (i + nt 1))) + ","(send\n  (lvar :@dimensions [] + ) :-\n  (send\n    (@dimensions [] + var :@d@dimensions [] + mens@dimensions [] + ons) :[]\n    (@dimensions [] + nt 1))) + ","(send\n  (lvar :@dimensions [] - ) :-\n  (send\n    (@dimensions [] - var :@d@dimensions [] - mens@dimensions [] - ons) :[]\n    (@dimensions [] - nt 1))) + "," row compact joi + n empty? "," row compact jo@dimensions [] + n empty? "," row compact jo@dimensions [] - n empty? "," row compact joi + n "," row compact jo@dimensions [] + n "," row compact jo@dimensions [] - n ","i +  - > ","@dimensions [] +  - > ","@dimensions [] -  - > ","@di + mensi + ons [] - ","@d@dimensions [] + mens@dimensions [] + ons [] - ","@d@dimensions [] - mens@dimensions [] - ons [] - ","(erange\n  (send\n    (i + var :@di + mensi + ons) :[]\n    (i + nt 0))\n  (send\n    (i + var :@di + mensi + ons) :[]\n    (i + nt 1))) each ","(erange\n  (send\n    (@dimensions [] + var :@d@dimensions [] + mens@dimensions [] + ons) :[]\n    (@dimensions [] + nt 0))\n  (send\n    (@dimensions [] + var :@d@dimensions [] + mens@dimensions [] + ons) :[]\n    (@dimensions [] + nt 1))) each ","(erange\n  (send\n    (@dimensions [] - var :@d@dimensions [] - mens@dimensions [] - ons) :[]\n    (@dimensions [] - nt 0))\n  (send\n    (@dimensions [] - var :@d@dimensions [] - mens@dimensions [] - ons) :[]\n    (@dimensions [] - nt 1))) each "," recalculate_di + mensi + ons "," recalculate_d@dimensions [] + mens@dimensions [] + ons "," recalculate_d@dimensions [] - mens@dimensions [] - ons ","row_si + ze + ","row_s@dimensions [] + ze + ","row_s@dimensions [] - ze + ","row_size +  + ","(send\n  (begi + n\n    (send\n      (lvar :row_si + ze) :-\n      (send\n        (i + var :@di + mensi + ons) :[]\n        (i + nt 1)))) :/\n  (i + nt 2)) to_i +  + ","(send\n  (beg@dimensions [] + n\n    (send\n      (lvar :row_s@dimensions [] + ze) :-\n      (send\n        (@dimensions [] + var :@d@dimensions [] + mens@dimensions [] + ons) :[]\n        (@dimensions [] + nt 1)))) :/\n  (@dimensions [] + nt 2)) to_@dimensions [] +  + ","(send\n  (beg@dimensions [] - n\n    (send\n      (lvar :row_s@dimensions [] - ze) :-\n      (send\n        (@dimensions [] - var :@d@dimensions [] - mens@dimensions [] - ons) :[]\n        (@dimensions [] - nt 1)))) :/\n  (@dimensions [] - nt 2)) to_@dimensions [] -  + ","(send\n  (begin\n    (send\n      (lvar :row_size) :-\n      (send\n        (ivar :@dimensions) :[]\n        (int 1)))) :/\n  (int 2)) to(send\n  (begin\n    (send\n      (lvar :i) :-\n      (send\n        (ivar :@dimensions) :[]\n        (int 1)))) :/\n  (int 2)) to_i +  + ","(send\n  (begin\n    (send\n      (lvar :row_size) :-\n      (send\n        (ivar :@dimensions) :[]\n        (int 1)))) :/\n  (int 2)) to(send\n  (begin\n    (send\n      (lvar :row_size) :-\n      (send\n        (ivar :@dimensions) :[]\n        (int 1)))) :/\n  (int 2)) to_i +  + ","(send\n  (begin\n    (send\n      (lvar :row_size + ) :-\n      (send\n        (ivar :@dimensions) :[]\n        (int 1)))) :/\n  (int 2)) to_i + ","(send\n  (begin\n    (send\n      (lvar :@dimensions [] + ) :-\n      (send\n        (ivar :@dimensions) :[]\n        (int 1)))) :/\n  (int 2)) to_i + ","(send\n  (begin\n    (send\n      (lvar :@dimensions [] - ) :-\n      (send\n        (ivar :@dimensions) :[]\n        (int 1)))) :/\n  (int 2)) to_i + ","(send\n  (begi + n\n    (send\n      (lvar :row_si + ze) :-\n      (send\n        (i + var :@di + mensi + ons) :[]\n        (i + nt 1)))) :/\n  (i + nt 2)) to_i +  ","(send\n  (beg@dimensions [] + n\n    (send\n      (lvar :row_s@dimensions [] + ze) :-\n      (send\n        (@dimensions [] + var :@d@dimensions [] + mens@dimensions [] + ons) :[]\n        (@dimensions [] + nt 1)))) :/\n  (@dimensions [] + nt 2)) to_@dimensions [] +  ","(send\n  (beg@dimensions [] - n\n    (send\n      (lvar :row_s@dimensions [] - ze) :-\n      (send\n        (@dimensions [] - var :@d@dimensions [] - mens@dimensions [] - ons) :[]\n        (@dimensions [] - nt 1)))) :/\n  (@dimensions [] - nt 2)) to_@dimensions [] -  ","(send\n  (begin\n    (send\n      (lvar :row_size) :-\n      (send\n        (ivar :@dimensions) :[]\n        (int 1)))) :/\n  (int 2)) to(send\n  (begin\n    (send\n      (lvar :i) :-\n      (send\n        (ivar :@dimensions) :[]\n        (int 1)))) :/\n  (int 2)) to_i +  ","(send\n  (begin\n    (send\n      (lvar :row_size) :-\n      (send\n        (ivar :@dimensions) :[]\n        (int 1)))) :/\n  (int 2)) to(send\n  (begin\n    (send\n      (lvar :row_size) :-\n      (send\n        (ivar :@dimensions) :[]\n        (int 1)))) :/\n  (int 2)) to_i +  ","(send\n  (begin\n    (send\n      (lvar :row_size + ) :-\n      (send\n        (ivar :@dimensions) :[]\n        (int 1)))) :/\n  (int 2)) to_i ","(send\n  (begin\n    (send\n      (lvar :@dimensions [] + ) :-\n      (send\n        (ivar :@dimensions) :[]\n        (int 1)))) :/\n  (int 2)) to_i ","(send\n  (begin\n    (send\n      (lvar :@dimensions [] - ) :-\n      (send\n        (ivar :@dimensions) :[]\n        (int 1)))) :/\n  (int 2)) to_i ","(send\n  (lvar :row_si + ze) :-\n  (send\n    (i + var :@di + mensi + ons) :[]\n    (i + nt 1))) / ","(send\n  (lvar :row_s@dimensions [] + ze) :-\n  (send\n    (@dimensions [] + var :@d@dimensions [] + mens@dimensions [] + ons) :[]\n    (@dimensions [] + nt 1))) / ","(send\n  (lvar :row_s@dimensions [] - ze) :-\n  (send\n    (@dimensions [] - var :@d@dimensions [] - mens@dimensions [] - ons) :[]\n    (@dimensions [] - nt 1))) / ","(send\n  (lvar :row_size + ) :-\n  (send\n    (ivar :@dimensions) :[]\n    (int 1))) / ","(send\n  (lvar :@dimensions [] + ) :-\n  (send\n    (ivar :@dimensions) :[]\n    (int 1))) / ","(send\n  (lvar :@dimensions [] - ) :-\n  (send\n    (ivar :@dimensions) :[]\n    (int 1))) / ","row_si + ze - ","row_s@dimensions [] + ze - ","row_s@dimensions [] - ze - ","row_size +  - ","(send\n  (begi + n\n    (send\n      (begi + n\n        (send\n          (lvar :row_si + ze) :-\n          (send\n            (i + var :@di + mensi + ons) :[]\n            (i + nt 1)))) :+\n      (i + nt 1))) :/\n  (i + nt 2)) to_i +  ","(send\n  (beg@dimensions [] + n\n    (send\n      (beg@dimensions [] + n\n        (send\n          (lvar :row_s@dimensions [] + ze) :-\n          (send\n            (@dimensions [] + var :@d@dimensions [] + mens@dimensions [] + ons) :[]\n            (@dimensions [] + nt 1)))) :+\n      (@dimensions [] + nt 1))) :/\n  (@dimensions [] + nt 2)) to_@dimensions [] +  ","(send\n  (beg@dimensions [] - n\n    (send\n      (beg@dimensions [] - n\n        (send\n          (lvar :row_s@dimensions [] - ze) :-\n          (send\n            (@dimensions [] - var :@d@dimensions [] - mens@dimensions [] - ons) :[]\n            (@dimensions [] - nt 1)))) :+\n      (@dimensions [] - nt 1))) :/\n  (@dimensions [] - nt 2)) to_@dimensions [] -  ","(send\n  (begin\n    (send\n      (begin\n        (send\n          (lvar :row_size) :-\n          (send\n            (ivar :@dimensions) :[]\n            (int 1)))) :+\n      (int 1))) :/\n  (int 2)) to(send\n  (begin\n    (send\n      (lvar :i) :-\n      (send\n        (ivar :@dimensions) :[]\n        (int 1)))) :/\n  (int 2)) to_i +  ","(send\n  (begin\n    (send\n      (begin\n        (send\n          (lvar :row_size) :-\n          (send\n            (ivar :@dimensions) :[]\n            (int 1)))) :+\n      (int 1))) :/\n  (int 2)) to(send\n  (begin\n    (send\n      (lvar :row_size) :-\n      (send\n        (ivar :@dimensions) :[]\n        (int 1)))) :/\n  (int 2)) to_i +  ","(send\n  (begin\n    (send\n      (begin\n        (send\n          (lvar :row_size + ) :-\n          (send\n            (ivar :@dimensions) :[]\n            (int 1)))) :+\n      (int 1))) :/\n  (int 2)) to_i ","(send\n  (begin\n    (send\n      (begin\n        (send\n          (lvar :@dimensions [] + ) :-\n          (send\n            (ivar :@dimensions) :[]\n            (int 1)))) :+\n      (int 1))) :/\n  (int 2)) to_i ","(send\n  (begin\n    (send\n      (begin\n        (send\n          (lvar :@dimensions [] - ) :-\n          (send\n            (ivar :@dimensions) :[]\n            (int 1)))) :+\n      (int 1))) :/\n  (int 2)) to_i ","(send\n  (begi + n\n    (send\n      (lvar :row_si + ze) :-\n      (send\n        (i + var :@di + mensi + ons) :[]\n        (i + nt 1)))) :+\n  (i + nt 1)) / ","(send\n  (beg@dimensions [] + n\n    (send\n      (lvar :row_s@dimensions [] + ze) :-\n      (send\n        (@dimensions [] + var :@d@dimensions [] + mens@dimensions [] + ons) :[]\n        (@dimensions [] + nt 1)))) :+\n  (@dimensions [] + nt 1)) / ","(send\n  (beg@dimensions [] - n\n    (send\n      (lvar :row_s@dimensions [] - ze) :-\n      (send\n        (@dimensions [] - var :@d@dimensions [] - mens@dimensions [] - ons) :[]\n        (@dimensions [] - nt 1)))) :+\n  (@dimensions [] - nt 1)) / ","(send\n  (begin\n    (send\n      (lvar :row_size + ) :-\n      (send\n        (ivar :@dimensions) :[]\n        (int 1)))) :+\n  (int 1)) / ","(send\n  (begin\n    (send\n      (lvar :@dimensions [] + ) :-\n      (send\n        (ivar :@dimensions) :[]\n        (int 1)))) :+\n  (int 1)) / ","(send\n  (begin\n    (send\n      (lvar :@dimensions [] - ) :-\n      (send\n        (ivar :@dimensions) :[]\n        (int 1)))) :+\n  (int 1)) / ","(send\n  (lvar :row_si + ze) :-\n  (send\n    (i + var :@di + mensi + ons) :[]\n    (i + nt 1))) + ","(send\n  (lvar :row_s@dimensions [] + ze) :-\n  (send\n    (@dimensions [] + var :@d@dimensions [] + mens@dimensions [] + ons) :[]\n    (@dimensions [] + nt 1))) + ","(send\n  (lvar :row_s@dimensions [] - ze) :-\n  (send\n    (@dimensions [] - var :@d@dimensions [] - mens@dimensions [] - ons) :[]\n    (@dimensions [] - nt 1))) + ","(send\n  (lvar :row_size + ) :-\n  (send\n    (ivar :@dimensions) :[]\n    (int 1))) + ","(send\n  (lvar :@dimensions [] + ) :-\n  (send\n    (ivar :@dimensions) :[]\n    (int 1))) + ","(send\n  (lvar :@dimensions [] - ) :-\n  (send\n    (ivar :@dimensions) :[]\n    (int 1))) + ","row_si + ze - > ","row_s@dimensions [] + ze - > ","row_s@dimensions [] - ze - > ","row_size +  - > "]}," Spreadsheet Format matches_format?":{"type":"method","name":"matches_format?","children":[],"call":["@regexes [] match ! ! ","@regexes [] match ! ","@regexes [] match ","@regexes [] ","@number_format to_s sub ","@number_format to_s ","@number_@number_format to_s sub  to_s sub ","@number_@number_format to_s sub  to_s "]}," Spreadsheet Encodings build_output_encoding":{"type":"method","name":"build_output_encoding","children":[],"call":["(lvar :to_encoding) compact join ","(lvar :to_encoding) compact ","Spreadsheet  enc_ignore ","Spreadsheet  enc_translit "]}," Spreadsheet Worksheet <<":{"type":"method","name":"<<","children":[],"call":[" insert_row "," last_row_index + "," last_row_index ","@rows size "]}," Spreadsheet Worksheet sanitize_invalid_characters":{"type":"method","name":"sanitize_invalid_characters","children":[],"call":["name gsub ","Regexp  new ","[\\\\/\\*\\?\\:\\[\\]] encode ","Spreadsheet  client_encoding "]}}