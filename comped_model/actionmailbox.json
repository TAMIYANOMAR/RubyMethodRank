{" ActionMailbox TestHelper receive_inbound_email_from_source":{"type":"method","name":"receive_inbound_email_from_source","children":[],"call":[" create_inbound_email_from_source tap "," create_inbound_email_from_source "]}," ActionMailbox TestHelper receive_inbound_email_from_mail":{"type":"method","name":"receive_inbound_email_from_mail","children":[],"call":[" create_inbound_email_from_mail tap "," create_inbound_email_from_mail "]}," ActionMailbox TestHelper receive_inbound_email_from_fixture":{"type":"method","name":"receive_inbound_email_from_fixture","children":[],"call":[" create_inbound_email_from_fixture tap "," create_inbound_email_from_fixture "]}," ActionMailbox TestHelper create_inbound_email_from_source":{"type":"method","name":"create_inbound_email_from_source","children":[],"call":["ActionMailbox InboundEmail  create_and_extract_message_id! "]}," ActionMailbox TestHelper create_inbound_email_from_mail":{"type":"method","name":"create_inbound_email_from_mail","children":[],"call":[" create_inbound_email_from_source ","Mail  new to_s ","Mail  new ","mail to_s ","mail [] include_in_headers= ","mail [] "," create_inbound_eMail  new _from_source ","Mail  new  to_s ","Mail  new  [] include_in_headers= ","Mail  new  [] "]}," ActionMailbox TestHelper create_inbound_email_from_fixture":{"type":"method","name":"create_inbound_email_from_fixture","children":[],"call":[" create_inbound_email_from_source "," file_fixture read "," file_fixture "]}," ActionMailbox Routing route":{"type":"method","name":"route","children":[],"call":[" router route "," router "]}," ActionMailbox Routing routing":{"type":"method","name":"routing","children":[],"call":[" router add_routes "," router "]}," Router match_to_mailbox":{"type":"method","name":"match_to_mailbox","children":[],"call":["(send\n  (send nil :routes) :detect) try ","route match? "," routes detect "," routes "]}," Router route":{"type":"method","name":"route","children":[],"call":[" raise ","inbound_email bounced! ","mailbox receive "," match_to_mailbox "," match_to_mailbox  receive "," match_to_ match_to_mailbox  "]}," Router add_route":{"type":"method","name":"add_route","children":[],"call":[" routes append ","Route  new "," routes "]}," Router add_routes":{"type":"method","name":"add_routes","children":[],"call":[" add_route ","routes each "]}," Router initialize":{"type":"method","name":"initialize","children":[],"call":[]}," Route ensure_valid_address":{"type":"method","name":"ensure_valid_address","children":[],"call":[" raise "," address inspect "," address "," address respond_to? "," address is_a? ","(const nil :Symbol) any? "]}," Route mailbox_class":{"type":"method","name":"mailbox_class","children":[],"call":["(begin\n  (send\n    (send\n      (send nil :mailbox_name) :to_s) :camelize)) constantize "," mailbox_name to_s camelize "," mailbox_name to_s "," mailbox_name "]}," Route match?":{"type":"method","name":"match?","children":[],"call":[" address match? "," address "," address call ","inbound_email mail recipients any? ","inbound_email mail recipients ","inbound_email mail "," address casecmp? "]}," Route initialize":{"type":"method","name":"initialize","children":[],"call":[" ensure_valid_address "]}," ActionMailbox PostfixRelayer client":{"type":"method","name":"client","children":[],"call":["connection read_timeout= ","connection open_timeout= ","connection verify_mode= ","connection use_ssl= "," require "," uri scheme == "," uri scheme "," uri ","Net HTTP  new tap ","Net HTTP  new "," uri port "," uri host "]}," ActionMailbox PostfixRelayer post":{"type":"method","name":"post","children":[],"call":[" client post ","Base64  strict_encode64 "," username + + "," password "," username + "," username "," uri "," client "]}," ActionMailbox PostfixRelayer relay":{"type":"method","name":"relay","children":[],"call":["Result  new ","error message ","response code "," post "," post  code "]}," ActionMailbox PostfixRelayer initialize":{"type":"method","name":"initialize","children":[],"call":[" URI "]}," ActionMailbox PostfixRelayer Result failure?":{"type":"method","name":"failure?","children":[],"call":[" output match? "," output "]}," ActionMailbox PostfixRelayer Result success?":{"type":"method","name":"success?","children":[],"call":[" failure? ! "," failure? "]}," Message recipients":{"type":"method","name":"recipients","children":[],"call":[" Array + + + "," Array map "," Array "," header [] "," header "," Array + + "," bcc "," Array + "," cc "," to "]}," Mail from_source":{"type":"method","name":"from_source","children":[],"call":[]}," Message x_original_to_addresses":{"type":"method","name":"x_original_to_addresses","children":[],"call":["Mail Address  new ","header to_s "," Array collect "," Array "," header [] "," header "]}," Message bcc_addresses":{"type":"method","name":"bcc_addresses","children":[],"call":[" Array "," header [] "," header "]}," Message cc_addresses":{"type":"method","name":"cc_addresses","children":[],"call":[" Array "," header [] "," header "]}," Message to_addresses":{"type":"method","name":"to_addresses","children":[],"call":[" Array "," header [] "," header "]}," Message recipients_addresses":{"type":"method","name":"recipients_addresses","children":[],"call":[" to_addresses + + + "," x_original_to_addresses "," to_addresses + + "," bcc_addresses "," to_addresses + "," cc_addresses "," to_addresses "]}," Message from_address":{"type":"method","name":"from_address","children":[],"call":[" header [] "," header "]}," Address wrap":{"type":"method","name":"wrap","children":[],"call":[]}," Address ==":{"type":"method","name":"==","children":[],"call":[" to_s == ","other_address to_s "," to_s ","other_address is_a? "]}," ActionMailbox Callbacks ClassMethods around_processing":{"type":"method","name":"around_processing","children":[],"call":[" set_callback "]}," ActionMailbox Callbacks ClassMethods after_processing":{"type":"method","name":"after_processing","children":[],"call":[" set_callback "]}," ActionMailbox Callbacks ClassMethods before_processing":{"type":"method","name":"before_processing","children":[],"call":[" set_callback "]}," Base track_status_of_inbound_email":{"type":"method","name":"track_status_of_inbound_email","children":[],"call":[" raise "," inbound_email failed! "," inbound_email "," inbound_email delivered! "," inbound_email bounced? "," inbound_email processing! "]}," Base bounce_with":{"type":"method","name":"bounce_with","children":[],"call":["message deliver_later "," inbound_email bounced! "," inbound_email "]}," Base finished_processing?":{"type":"method","name":"finished_processing?","children":[],"call":[" inbound_email bounced? "," inbound_email "," inbound_email delivered? "]}," Base process":{"type":"method","name":"process","children":[],"call":[]}," Base perform_processing":{"type":"method","name":"perform_processing","children":[],"call":[" raise "," rescue_with_handler "," process "," run_callbacks "," track_status_of_inbound_email "]}," Base initialize":{"type":"method","name":"initialize","children":[],"call":[]}," Base receive":{"type":"method","name":"receive","children":[],"call":[]}," TestUnit Generators MailboxGenerator file_name":{"type":"method","name":"file_name","children":[],"call":[" sub "]}," TestUnit Generators MailboxGenerator create_test_files":{"type":"method","name":"create_test_files","children":[],"call":[" template ","File  join "," file_name "," class_path "]}," Rails Generators MailboxGenerator application_mailbox_file_name":{"type":"method","name":"application_mailbox_file_name","children":[],"call":[]}," Rails Generators MailboxGenerator file_name":{"type":"method","name":"file_name","children":[],"call":[" sub "]}," Rails Generators MailboxGenerator create_mailbox_file":{"type":"method","name":"create_mailbox_file","children":[],"call":[" template "," application_mailbox_file_name ","File  exist? ! ","File  exist? "," behavior == "," behavior "," in_root ","File  join "," file_name "," class_path "]}," ActionMailbox version":{"type":"method","name":"version","children":[],"call":[]}," ActionMailbox Router match_to_mailbox":{"type":"method","name":"match_to_mailbox","children":[],"call":["(send\n  (send nil :routes) :detect) try ","route match? "," routes detect "," routes "]}," ActionMailbox Router route":{"type":"method","name":"route","children":[],"call":[" raise ","inbound_email bounced! ","mailbox receive "," match_to_mailbox "," mailbox_for "," match_to_mailbox  receive "," mailbox_for  receive "," match_to_ match_to_mailbox  "," match_to_ mailbox_for  ","  match_to_mailbox _for ","  mailbox_for _for "]}," ActionMailbox Router add_route":{"type":"method","name":"add_route","children":[],"call":[" routes append ","Route  new "," routes "]}," ActionMailbox Router add_routes":{"type":"method","name":"add_routes","children":[],"call":[" add_route ","routes each "]}," ActionMailbox Router initialize":{"type":"method","name":"initialize","children":[],"call":[]}," ActionMailbox Route ensure_valid_address":{"type":"method","name":"ensure_valid_address","children":[],"call":[" raise "," address inspect "," address "," address respond_to? "," address is_a? ","(const nil :Symbol) any? "]}," ActionMailbox Route mailbox_class":{"type":"method","name":"mailbox_class","children":[],"call":["(begin\n  (send\n    (send\n      (send nil :mailbox_name) :to_s) :camelize)) constantize "," mailbox_name to_s camelize "," mailbox_name to_s "," mailbox_name "]}," ActionMailbox Route match?":{"type":"method","name":"match?","children":[],"call":[" address match? "," address "," address call ","inbound_email mail recipients any? ","inbound_email mail recipients ","inbound_email mail "," address casecmp? "]}," ActionMailbox Route initialize":{"type":"method","name":"initialize","children":[],"call":[" ensure_valid_address "]}," ActionMailbox Relayer client":{"type":"method","name":"client","children":[],"call":["connection read_timeout= ","connection open_timeout= ","connection verify_mode= ","connection use_ssl= "," require "," uri scheme == "," uri scheme "," uri ","Net HTTP  new tap ","Net HTTP  new "," uri port "," uri host "]}," ActionMailbox Relayer post":{"type":"method","name":"post","children":[],"call":[" client post ","Base64  strict_encode64 "," username + + "," password "," username + "," username "," uri "," client "]}," ActionMailbox Relayer relay":{"type":"method","name":"relay","children":[],"call":["Result  new ","error message ","response code "," post "," post  code "]}," ActionMailbox Relayer initialize":{"type":"method","name":"initialize","children":[],"call":[" URI "]}," ActionMailbox Relayer Result permanent_failure?":{"type":"method","name":"permanent_failure?","children":[],"call":[" status_code start_with? "," status_code "]}," ActionMailbox Relayer Result transient_failure?":{"type":"method","name":"transient_failure?","children":[],"call":[" status_code start_with? "," status_code "]}," ActionMailbox Relayer Result failure?":{"type":"method","name":"failure?","children":[],"call":[" permanent_failure? "," transient_failure? "]}," ActionMailbox Relayer Result success?":{"type":"method","name":"success?","children":[],"call":[" failure? ! "," failure? "]}," Mail Message recipients":{"type":"method","name":"recipients","children":[],"call":[" Array + + + "," Array map "," Array "," header [] "," header "," Array + + "," bcc "," Array + "," cc "," to "," Array + + + + "]}," Mail Message x_original_to_addresses":{"type":"method","name":"x_original_to_addresses","children":[],"call":["Mail Address  new ","header to_s "," Array collect "," Array "," header [] "," header "]}," Mail Message bcc_addresses":{"type":"method","name":"bcc_addresses","children":[],"call":[" Array "," header [] "," header "," address_list "]}," Mail Message cc_addresses":{"type":"method","name":"cc_addresses","children":[],"call":[" Array "," header [] "," header "," address_list "]}," Mail Message to_addresses":{"type":"method","name":"to_addresses","children":[],"call":[" Array "," header [] "," header "," address_list "]}," Mail Message recipients_addresses":{"type":"method","name":"recipients_addresses","children":[],"call":[" to_addresses + + + "," x_original_to_addresses "," to_addresses + + "," bcc_addresses "," to_addresses + "," cc_addresses "," to_addresses "," to_addresses + + + + "," x_forwarded_to_addresses "]}," Mail Message from_address":{"type":"method","name":"from_address","children":[],"call":[" header [] "," header "," address_list "]}," Mail Address wrap":{"type":"method","name":"wrap","children":[],"call":[]}," Mail Address ==":{"type":"method","name":"==","children":[],"call":[" to_s == ","other_address to_s "," to_s ","other_address is_a? "]}," ActionMailbox gem_version":{"type":"method","name":"gem_version","children":[],"call":[]}," ActionMailbox Callbacks around_processing":{"type":"method","name":"around_processing","children":[],"call":[" set_callback "]}," ActionMailbox Callbacks after_processing":{"type":"method","name":"after_processing","children":[],"call":[" set_callback "]}," ActionMailbox Callbacks before_processing":{"type":"method","name":"before_processing","children":[],"call":[" set_callback "]}," ActionMailbox Base track_status_of_inbound_email":{"type":"method","name":"track_status_of_inbound_email","children":[],"call":[" raise "," inbound_email failed! "," inbound_email "," inbound_email delivered! "," inbound_email bounced? "," inbound_email processing! "]}," ActionMailbox Base bounce_with":{"type":"method","name":"bounce_with","children":[],"call":["message deliver_later "," inbound_email bounced! "," inbound_email "]}," ActionMailbox Base finished_processing?":{"type":"method","name":"finished_processing?","children":[],"call":[" inbound_email bounced? "," inbound_email "," inbound_email delivered? "]}," ActionMailbox Base process":{"type":"method","name":"process","children":[],"call":[]}," ActionMailbox Base perform_processing":{"type":"method","name":"perform_processing","children":[],"call":[" raise "," rescue_with_handler "," process "," run_callbacks "," track_status_of_inbound_email ","ActiveSupport Notifications  instrument "," instrumentation_payload "]}," ActionMailbox Base initialize":{"type":"method","name":"initialize","children":[],"call":[]}," ActionMailbox Base receive":{"type":"method","name":"receive","children":[],"call":[]}," ActionMailbox Generators InstallGenerator create_migrations":{"type":"method","name":"create_migrations","children":[],"call":[" rails_command "]}," ActionMailbox Generators InstallGenerator add_action_mailbox_production_environment_config":{"type":"method","name":"add_action_mailbox_production_environment_config","children":[],"call":[" environment "]}," ActionMailbox Generators InstallGenerator create_action_mailbox_files":{"type":"method","name":"create_action_mailbox_files","children":[],"call":[" template "," say "]}," ActionMailbox Routing mailbox_for":{"type":"method","name":"mailbox_for","children":[],"call":[" router mailbox_for "," router "]}," ActionMailbox Router mailbox_for":{"type":"method","name":"mailbox_for","children":[],"call":["route match? "," routes detect "," routes "]}," Mail Message address_list":{"type":"method","name":"address_list","children":[],"call":["obj element "]}," Mail Message x_forwarded_to_addresses":{"type":"method","name":"x_forwarded_to_addresses","children":[],"call":["Mail Address  new ","header to_s "," Array collect "," Array "," header [] "," header "]}," ActionMailbox deprecator":{"type":"method","name":"deprecator","children":[],"call":[]}," ActionMailbox Base instrumentation_payload":{"type":"method","name":"instrumentation_payload","children":[],"call":[" inbound_email instrumentation_payload "," inbound_email "]}," ActionMailbox Base bounce_now_with":{"type":"method","name":"bounce_now_with","children":[],"call":["message deliver_now "," inbound_email bounced! "," inbound_email "]}}