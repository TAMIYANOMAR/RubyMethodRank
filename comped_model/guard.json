{" Guard run":{"type":"method","name":"run","children":[],"call":[" listener start "," listener "," listener stop ","UI  clear "," options [] "," options "," interactor start "," interactor "," interactor stop "," lock synchronize "," lock "," listener unlock "," interactor unlock "," interactor lock "," listener lock ","@lock synchronize ","@interactor start ","@interactor stop_if_not_current "," interactor stop_if_not_current "]}," Guard locate_guard":{"type":"method","name":"locate_guard","children":[],"call":["spec full_gem_path ","UI  error ","s name == ","s name ","Bundler  load specs find ","Bundler  load specs ","Bundler  load ","Gem  source_index find_name last full_gem_path ","Gem  source_index find_name last ","Gem  source_index find_name ","Gem  source_index ","Gem Specification  find_by_name full_gem_path ","Gem Specification  find_by_name ","Gem Version  create >= ","Gem Version  create ","(str \"gem open guard-\") chomp ","(str \"gem which guard/\") chomp "," Guard UI  error "]}," Guard get_guard_class":{"type":"method","name":"get_guard_class","children":[],"call":["UI  error ","c to_s downcase match ","name downcase ","c to_s downcase ","c to_s ","ObjectSpace  each_object detect ","ObjectSpace  each_object "," require ","loadError to_s ","const_name capitalize "," const_get ","c to_s downcase == ","const_name downcase "," constants find "," constants ","c to_s == ","1 upcase ","(send\n  (lvar :name) :gsub\n  (regexp\n    (str \"/(.?)\")\n    (regopt))) gsub ","name gsub ","name to_s ","klasses first ","klasses << ","klass to_s downcase match ","klass to_s downcase ","klass to_s ","klass_name to_s downcase == ","klass_name to_s downcase ","klass_name to_s "," try_to_load_gem ","name to_s downcase gsub ","name to_s downcase ","name downcase gsub "," Guard UI  error ","name to_s  downcase ","const_name to_s  capitalize ","name to_s downcase gsub  capitalize ","name downcase gsub  capitalize ","const_name to_s  downcase ","name to_s downcase gsub  downcase ","name downcase gsub  downcase ","(send\n  (lvar :name to_s ) :gsub\n  (regexp\n    (str \"/(.?)\")\n    (regopt))) gsub ","name to_s  gsub ","name to_s  to_s ","klass_name to_s  to_s downcase == ","klass_name to_s  to_s downcase ","klass_name to_s  to_s ","name to_s  to_s downcase gsub ","name to_s  to_s downcase ","name to_s  downcase gsub "]}," Guard add_guard":{"type":"method","name":"add_guard","children":[],"call":["@guards << ","guard_class new "," get_guard_class ","c to_s downcase match ","name downcase ","c to_s downcase ","c to_s ","ObjectSpace  each_object detect ","ObjectSpace  each_object "," require ","Hook  add_callback ","callback [] ","callbacks each ","UI  deprecation ","name to_sym == ","name to_sym ","name downcase == "," get_guard_class new "," Guard UI  deprecation ","@guard_class new s << ","@ get_guard_class new s << "," get_guard_class  new ","guard_class new _class new "," get_guard_class new _class new "," get_ get_guard_class  "," get_guard_class new _class "," get_ get_guard_class new _class "," get_ get_guard_class  new "," get_ get_guard_class new _class new "]}," Guard start":{"type":"method","name":"start","children":[],"call":[" listener start "," listener "," guards each "," guards ","UI  info ","Dir  pwd ","guard run_on_change ","paths empty? ","Watcher  match_files "," run "," listener on_change ","Interactor  init_signal_traps ","UI  error "," guards empty? ","Dsl  evaluate_guardfile ","Listener  new ","@interactor start ","Interactor  fabricate ","options [] "," run_supervised_task "," run_on_guards "," listener directory "," listener changed_files ","Watcher  match_files? ","Dsl  reevaluate_guardfile ","Watcher  match_guardfile? ","Notifier  turn_off ","Notifier  turn_on ","ENV  [] != ","ENV  [] "," setup ","g start ","Listener  init "," supervised_task "," run_on_change_for_all_guards ","Dsl  revaluate_guardfile ","UI  clear "," interactor start "," interactor "," run_guard_task "," Guard  guards empty? "," Guard  guards "," runner run "," runner "," within_preserved_state ","@allow_stop wait "," Guard UI  info "," Guard UI  debug ","@watchdirs join ","Watcher  match_files  empty? ","Interactor  fabricate  start "]}," Guard Watcher match_files":{"type":"method","name":"match_files","children":[],"call":[]}," Guard Watcher initialize":{"type":"method","name":"initialize","children":[],"call":["Regexp  new ","UI  info ","Regexp  new inspect ","* * + + ","* * ","* * + ","@pattern =~ ","@pattern is_a? "," Guard UI  info ","Pattern  create ","Regexp  new  =~ ","Pattern  create  =~ ","Regexp  new  is_a? ","Pattern  create  is_a? "]}," Guard UI color":{"type":"method","name":"color","children":[],"call":[" color_enabled? ","; + "," const_get ","color_option upcase ","(send\n  (lvar :color_option) :=~\n  (regexp\n    (str \"\\\\d+\")\n    (regopt))) ! ","color_option =~ ","color_option != ","color_option to_s ","color_options each ","color_option == "," const_get  upcase ","color_option to_s  upcase ","(send\n  (lvar : const_get ) :=~\n  (regexp\n    (str \"\\\\d+\")\n    (regopt))) ! ","(send\n  (lvar :color_option to_s ) :=~\n  (regexp\n    (str \"\\\\d+\")\n    (regopt))) ! "," const_get  =~ ","color_option to_s  =~ "," const_get  != ","color_option to_s  != "," const_get  to_s ","color_option to_s  to_s "," const_get s each ","color_option to_s s each "," const_get  == ","color_option to_s  == "]}," Guard UI reset_color":{"type":"method","name":"reset_color","children":[],"call":[" color "," deprecation "]}," Guard UI clear":{"type":"method","name":"clear","children":[],"call":[" system "," Guard  options [] "," Guard  options ","options [] "," Guard  options clear "," warning ","e inspect ","Terminal  clear ","opts [] "," fail ","@clearable nil? ","Guard  state session clear? ","Guard  state session ","Guard  state "," Guard Sheller  run "," Guard Terminal  clear "]}," Guard UI reset_line":{"type":"method","name":"reset_line","children":[],"call":[" print ","STDERR  print "," color_enabled? ","$stderr print "]}," Guard UI error":{"type":"method","name":"error","children":[],"call":[" puts ","STDERR  puts "," color + "," color "," reset_line ","options [] ","ENV  [] == ","ENV  [] "," logger error "," logger "," filter "," _filtered_logger_message "]}," Guard UI info":{"type":"method","name":"info","children":[],"call":[" puts "," reset_color ","message != "," clear "," Guard  options [] "," Guard  options ","options [] ","options key? "," reset_line ","ENV  [] == ","ENV  [] ","STDERR  puts "," color "," logger info "," logger "," filter "," _filtered_logger_message "]}," Guard Notifier image_path":{"type":"method","name":"image_path","children":[],"call":[" images_path join to_s "," images_path join "," images_path ","images_path join to_s ","images_path join ","Pathname  new join ","Pathname  new ","File  dirname "," Pathname  new join  join to_s "," Pathname  new join  join "," Pathname  new join  ","Pathname  new join  join to_s ","Pathname  new join  join "]}," Guard Notifier notify":{"type":"method","name":"notify","children":[],"call":[" Guard UI  error ","e message ","notification [] ","NOTIFIERS  [] notify ","options merge ","NOTIFIERS  [] "," notifications each "," notifications ","options delete "," image_path "," notification_type ","options [] "," enabled? "," notify_windows "," notify_linux "," notify_mac ","RbConfig CONFIG  [] "," get_notifier_module notify "," get_notifier_module ","notifier name ","notifier notify "," _get_notifier_module new ","notifier [] "," _get_notifier_module "," notifiers each "," notifiers "," Guard UI  debug ","e backtrace join ","e backtrace "," _notify ","@detected available each ","@detected available "," active? "," connect "," _client? ","opts dup ","  image_path _path "," notification_ notification_type  "," get_ _get_notifier_module new _module notify "," get_ _get_notifier_module new _module "," _get_notifier_module new  name "," _get_notifier_module new  notify "," _get_ _get_notifier_module new _module new "," _get_notifier_module new  [] "," _get_ _get_notifier_module new _module ","  _get_notifier_module new s each ","  _get_notifier_module new s "]}," Guard Listener bin_path":{"type":"method","name":"bin_path","children":[],"call":["File  expand_path ","File  join ","File  dirname "]}," Guard Listener update_last_event":{"type":"method","name":"update_last_event","children":[],"call":["Time  now "]}," Guard Listener recent_file?":{"type":"method","name":"recent_file?","children":[],"call":["File  mtime >= "," last_event ","File  mtime "]}," Guard Listener potentially_modified_files":{"type":"method","name":"potentially_modified_files","children":[],"call":["Dir  glob ","dirs map ","File  file? ","paths select ","Dir  glob select ","array << ","paths inject ","options [] "," exclude_ignored_paths ","(str \".\") include? ","File  basename ","Dir  glob reject ","d sub "," exclude_ignored_paths  select "," exclude_ignored_paths  inject "," exclude_ignored_ exclude_ignored_paths  "]}," Guard Listener modified_files":{"type":"method","name":"modified_files","children":[],"call":["file gsub ","Dir  pwd ","files map! "," recent_file? "," potentially_modified_files select "," potentially_modified_files "," relativize_paths ","files concat "," file_modified? "," update_last_event ","deleted_files compact ","@file_timestamp_hash delete ","@sha1_checksums_hash delete ","File  exists? ","@file_timestamp_hash collect "," watch_all_modifications? ","File  file? "," relativate_paths "]}," Guard Listener watch_change":{"type":"method","name":"watch_change","children":[],"call":[" callback call "," callback "," update_last_event "," modified_files ","line split "," pipe readline "," pipe "," pipe eof? ! "," pipe eof? "," modified_ modified_files  "," pipe readline  split "," pipe read pipe readline  "]}," Guard Listener stop":{"type":"method","name":"stop","children":[],"call":["Process  kill "," pipe pid "," pipe "]}," Guard Listener start":{"type":"method","name":"start","children":[],"call":[" watch_change ","IO  popen "," bin_path ","Sys Uname  sysname "," timestamp_files "," watch "," directory "," watch_all_modifications? "]}," Guard Listener on_change":{"type":"method","name":"on_change","children":[],"call":[]}," Guard Listener initialize":{"type":"method","name":"initialize","children":[],"call":[" update_last_event "," start_reactor ","options [] ","options fetch ","h []= ","k to_sym ","options inject ","directory to_s "]}," Guard Interactor init_signal_traps":{"type":"method","name":"init_signal_traps","children":[],"call":[]}," Guard Guard run_on_change":{"type":"method","name":"run_on_change","children":[],"call":[]}," Guard Guard run_all":{"type":"method","name":"run_all","children":[],"call":[]}," Guard Guard reload":{"type":"method","name":"reload","children":[],"call":[]}," Guard Guard stop":{"type":"method","name":"stop","children":[],"call":[]}," Guard Guard start":{"type":"method","name":"start","children":[],"call":[]}," Guard Guard init":{"type":"method","name":"init","children":[],"call":[]}," Guard Guard initialize":{"type":"method","name":"initialize","children":[],"call":["options delete to_sym ","options delete ","options [] "," _register_callbacks "," _set_instance_variables_from_options ","options merge "," Guard UI  deprecation "," Guard Deprecator GUARD_GUARD_DEPRECATION  % "," title ","UI  deprecation ","Deprecator GUARD_GUARD_DEPRECATION  % "]}," Guard Dsl watch":{"type":"method","name":"watch","children":[],"call":["@watchers << "," Guard Watcher  new ","Guard Watcher  new ","@plugin_options [] << ","Watcher  new ","@plugin_options [] "," watch "," guard "]}," Guard Dsl guard":{"type":"method","name":"guard","children":[],"call":[" Guard  add_guard ","definition call ","Guard  add_guard ","name to_s downcase ","name to_s ","options update "," block_given? ","watch_definition call ","name to_s downcase to_sym ","watch_and_callback_definition call "," Guard  add_plugin ","options merge! ","Guard  state session plugins add ","Guard  state session plugins ","Guard  state session ","Guard  state ","@plugin_options merge ","groups each ","@current_groups last ","options merge ","groups last each ","groups last ","options merge  merge "]}," Guard Dsl guardfile_included?":{"type":"method","name":"guardfile_included?","children":[],"call":[]}," Guard Dsl evaluate_guardfile":{"type":"method","name":"evaluate_guardfile","children":[],"call":["UI  error "," Guard  guards empty? "," Guard  guards "," Guard  guards nil? ! "," Guard  guards nil? "," instance_eval_guardfile "," guardfile_contents_with_user_config "," fetch_guardfile_contents ","options dup "," raise ","ArgumentError  new ","options is_a? "," exit "," new instance_eval "," guardfile_path ","File  read "," new ","File  exists? "," options= "]}," Guard CLI init":{"type":"method","name":"init","children":[],"call":["guard_class init "," Guard  get_guard_class "," exit "," Guard UI  error ","Dir  pwd ","guard_name nil? ","FileUtils  cp ","File  expand_path "," puts ","File  exist? ! ","File  exist? ","Guard  get_guard_class ","Guard UI  error "," Guard  initialize_template "," verify_bundler_presence "," Guard  initialize_all_templates "," options [] "," options "," Guard  create_guardfile "," Guard Guardfile  initialize_template "," Guard Guardfile  initialize_all_templates "," Guard Guardfile  create_guardfile ","guard_names each ","guard_names empty? ","plugin_names each ","plugin_names empty? "," _verify_bundler_presence ","generator initialize_template ","generator initialize_all_templates ","Guardfile Evaluator  new evaluate ","Guardfile Evaluator  new ","session evaluator_options ","generator create_guardfile ","Guard  state session ","Guard  state ","Guard  init ","Guardfile Generator  new ","env initialize_guardfile ","Cli Environments Valid  new "," Guard  reset_evaluator "," Guard  reset_options "," Guard  evaluator evaluate_guardfile "," Guard  evaluator "," Guard  reset_plugins "," Guard Guardfile Evaluator  new evaluate_guardfile "," Guard Guardfile Evaluator  new ","Guard  options "," Guard  get_guard_class  init ","Guard  get_guard_class  init "," Guard  get_ Guard  get_guard_class  "," Guard  get_Guard  get_guard_class  ","Guard  get_ Guard  get_guard_class  ","Guard  get_Guard  get_guard_class  ","Guardfile Generator  new  initialize_template ","Guardfile Generator  new  initialize_all_templates ","Guard  state session  evaluator_options ","Guardfile Generator  new  create_guardfile ","Guard  state Guard  state session  ","Cli Environments Valid  new  initialize_guardfile "]}," Guard CLI version":{"type":"method","name":"version","children":[],"call":[" Guard UI  info ","Guard UI  info "," verify_bundler_presence "," puts ","$stdout puts ","STDOUT  puts "]}," Guard CLI start":{"type":"method","name":"start","children":[],"call":[" Guard  start "," options ","Guard  start "," Guard  stop "," abort "," verify_bundler_presence "," options [] "," sleep "," Guard  running ","ENV  [] == ","ENV  [] "," _verify_bundler_presence "," _start "," exit ","Cli Environments Valid  new start_guard ","Cli Environments Valid  new "]}," Guard UI debug":{"type":"method","name":"debug","children":[],"call":[" puts "," Guard  options [] "," Guard  options ","ENV  [] == ","ENV  [] ","STDERR  puts "," color + "," color ","Time  now strftime ","Time  now "," reset_line ","options [] "," logger debug "," logger "," filter "," _filtered_logger_message "]}," stop":{"type":"method","name":"stop","children":[],"call":["@notifier stop "," sleep ","@fsevent stop "]}," run":{"type":"method","name":"run","children":[],"call":[" sleep ","@notifier run ","Thread  new ","@fsevent run "]}," FChange Watcher initialize":{"type":"method","name":"initialize","children":[],"call":[" raise ","SystemCallError  new ","path inspect ","@notifier add_watcher ","@id < ","Native  FindFirstChangeNotificationA ","Native Flags  to_mask "," proc ","Native  FindFirstChangeNotificationA  < "]}," FChange Watcher normalize_path":{"type":"method","name":"normalize_path","children":[],"call":["\\\\?\\ + ","Pathname  new realpath to_s ","Pathname  new realpath ","Pathname  new ","path size > ","path size ","Pathname  new real\\?\\ +  to_s ","Pathname  new real\\?\\ +  ","\\?\\ +  size > ","\\?\\ +  size "]}," FChange Watcher close":{"type":"method","name":"close","children":[],"call":[" raise ","SystemCallError  new ","@path inspect ","r == ","Native  FindCloseChangeNotification "," Native  FindCloseChangeNotification aise ","SystemCallENative  FindCloseChangeNotification Native  FindCloseChangeNotification oNative  FindCloseChangeNotification   new ","Native  FindCloseChangeNotification  == "]}," FChange Watcher callback!":{"type":"method","name":"callback!","children":[],"call":["@callback [] "]}," FChange Notifier close":{"type":"method","name":"close","children":[],"call":[]}," FChange Notifier read_events":{"type":"method","name":"read_events","children":[],"call":[" raise ","SystemCallError  new ","r == ","Native  FindNextChangeNotification ","@dwChangeHandles [] ","events << ","Event  new ","@watchers [] ","dwWaitStatus == ","WAIT_OBJECT_0  + ","@dwChangeHandles each_index ","Native  WaitForMultipleObjects ","@dwChangeHandles count "," Native  FindNextChangeNotification aise ","SystemCallENative  FindNextChangeNotification Native  FindNextChangeNotification oNative  FindNextChangeNotification   new ","Native  FindNextChangeNotification  == ","Event  new ents << ","@watcheNative  FindNextChangeNotification s [] ","Native  WaitForMultipleObjects  == ","Native  WaitFoNative  FindNextChangeNotification MultipleObjects "]}," FChange Notifier process":{"type":"method","name":"process","children":[],"call":["event callback! "," read_events each "," read_events "]}," FChange Notifier stop":{"type":"method","name":"stop","children":[],"call":[]}," FChange Notifier run":{"type":"method","name":"run","children":[],"call":[" process "]}," FChange Notifier watch":{"type":"method","name":"watch","children":[],"call":["Watcher  new ","flags freeze ","flags empty? ","flags - ","flags include? ","flags -  freeze ","flags -  empty? ","flags -  - ","flags -  include? "]}," FChange Notifier add_watcher":{"type":"method","name":"add_watcher","children":[],"call":[" dwChangeHandles pack ","L * "," dwChangeHandles count "," dwChangeHandles ","@dwChangeHandles push ","watcher id ","@watchers []= "]}," FChange Notifier initialize":{"type":"method","name":"initialize","children":[],"call":[]}," FChange Native Flags from_mask":{"type":"method","name":"from_mask","children":[],"call":[]}," FChange Native Flags to_mask":{"type":"method","name":"to_mask","children":[],"call":[]}," FChange Event callback!":{"type":"method","name":"callback!","children":[],"call":["@watcher callback! "]}," FChange Event initialize":{"type":"method","name":"initialize","children":[],"call":[]}," INotify Watcher initialize":{"type":"method","name":"initialize","children":[],"call":[" raise ","SystemCallError  new ","FFI  errno ","(str \"Failed to watch \") + ","path inspect ","@notifier watchers []= ","@notifier watchers ","@id < ","Native  inotify_add_watch ","Native Flags  to_mask ","path dup ","@notifier fd ","flags freeze "," proc ","Native  inotify_add_watch  < "]}," INotify Watcher close":{"type":"method","name":"close","children":[],"call":[" raise ","SystemCallError  new ","FFI  errno "," path inspect "," path ","Native  inotify_rm_watch == ","Native  inotify_rm_watch ","@notifier fd "]}," INotify Watcher callback!":{"type":"method","name":"callback!","children":[],"call":["@callback [] "]}," INotify Notifier readpartial":{"type":"method","name":"readpartial","children":[],"call":[" raise ","SystemCallError  new ","FFI  errno ","Error reading inotify events + ","buffer read_string ","size_read >= ","Native  read "," fd ","FFI MemoryPointer  new ","tries <= ","FFI  errno == "," to_io readpartial "," to_io "," class supports_ruby_io? "," class ","FFI MemoryPointer  new  read_string ","Native  read  >= "]}," INotify Notifier read_events":{"type":"method","name":"read_events","children":[],"call":["ev related replace freeze ","ev related replace ","evs - ","ev related ","evs each ","cookies each ","cookies [] << ","cookies [] ","ev cookie ","ev cookie == ","events << ","Event  consume "," raise ","tries == ","er errno == ","er errno "," readpartial ","64 * ","Native Event  size ","Event  consume  related replace freeze ","Event  consume  related replace ","Event  consume s - ","Event  consume  related ","Event  consume s each ","Event  consume  cookie ","Event  consume  cookie == ","Event  consume ents << ","Native Event  64 *  "]}," INotify Notifier close":{"type":"method","name":"close","children":[],"call":[" raise ","SystemCallError  new ","FFI  errno ","Failed to properly close inotify socket + ","Native  close == ","Native  close "]}," INotify Notifier process":{"type":"method","name":"process","children":[],"call":["event callback! "," read_events each "," read_events "]}," INotify Notifier stop":{"type":"method","name":"stop","children":[],"call":[]}," INotify Notifier run":{"type":"method","name":"run","children":[],"call":[" process "]}," INotify Notifier watch":{"type":"method","name":"watch","children":[],"call":[" watch ","event absolute_name ","event flags include? ! ","event flags include? ","event flags ","(send\n  (lvar :rec_flags) :&\n  (send\n    (lvar :event) :flags)) empty? ","rec_flags & ","callback call ","(send\n  (lvar :flags) :&\n  (send\n    (lvar :event) :flags)) empty? ! ","(send\n  (lvar :flags) :&\n  (send\n    (lvar :event) :flags)) empty? ","flags & ","flags include? ","(send\n  (lvar :flags) :-\n  (array\n    (sym :recursive))) | ","flags - ","File  directory? ","RECURSIVE_BLACKLIST  include? ! ","RECURSIVE_BLACKLIST  include? ","binary_d =~ ","d dup force_encoding ","d dup ","d respond_to? ","Dir  glob each ","Dir  glob ","File  join ","Watcher  new ","d dup force_encoding  =~ "]}," INotify Notifier to_io":{"type":"method","name":"to_io","children":[],"call":["IO  new "," raise ","NotImplementedError  new "," class supports_ruby_io? "," class "]}," INotify Notifier initialize":{"type":"method","name":"initialize","children":[],"call":[" raise ","SystemCallError  new ","FFI  errno ","Failed to initialize inotify + ","@fd < ","Native  inotify_init ","Native  inotify_init  < "]}," INotify Notifier supports_ruby_io?":{"type":"method","name":"supports_ruby_io?","children":[],"call":[]}," INotify Native Flags from_mask":{"type":"method","name":"from_mask","children":[],"call":[]}," INotify Native Flags to_mask":{"type":"method","name":"to_mask","children":[],"call":[]}," INotify Event size":{"type":"method","name":"size","children":[],"call":["@native size + ","@native [] ","@native size "]}," INotify Event callback!":{"type":"method","name":"callback!","children":[],"call":[" watcher callback! "," watcher "]}," INotify Event initialize":{"type":"method","name":"initialize","children":[],"call":[" raise ","Exception  new ","@native [] & != ","@native [] & ","@native [] ","data [] gsub ","data [] ","@native size ","Native Event  new ","FFI MemoryPointer  from_string ","Native Event  new  [] & != ","Native Event  new  [] & ","Native Event  new  [] ","Native Event  new  size "]}," INotify Event consume":{"type":"method","name":"consume","children":[],"call":[]}," INotify Event flags":{"type":"method","name":"flags","children":[],"call":["Native Flags  from_mask ","@native [] "]}," INotify Event absolute_name":{"type":"method","name":"absolute_name","children":[],"call":["File  join "," name "," watcher path "," watcher "," name empty? "]}," INotify Event watcher":{"type":"method","name":"watcher","children":[],"call":["@notifier watchers [] ","@notifier watchers "]}," FSEvent parse_options":{"type":"method","name":"parse_options","children":[],"call":["opts map ","opts push ","options [] ","opts concat "]}," FSEvent pipe":{"type":"method","name":"pipe","children":[],"call":["IO  popen ","(send\n  (send\n    (self) :class) :watcher_path) + + ","(send\n  (send\n    (self) :class) :watcher_path) + "," class watcher_path "," class "," shellescaped_paths "," options_string "]}," FSEvent shellescape":{"type":"method","name":"shellescape","children":[],"call":["str gsub! ","str dup ","str empty? ","str dup  gsub! ","str dup  dup ","str dup  empty? "]}," FSEvent shellescaped_paths":{"type":"method","name":"shellescaped_paths","children":[],"call":["(send\n  (ivar :@paths) :map) join "," shellescape ","@paths map "]}," FSEvent options_string":{"type":"method","name":"options_string","children":[],"call":["@options join "]}," FSEvent stop":{"type":"method","name":"stop","children":[],"call":[" pipe close "," pipe ","Process  kill "," pipe pid ","@pipe close ","@pipe pid ","@pipe nil? "]}," FSEvent run":{"type":"method","name":"run","children":[],"call":[" stop "," callback call "," callback ","dir != ","line split select ","line split "," pipe readline "," pipe ","IO  select ","@pipe readline "," open_pipe "," pipe readline  split select ","@pipe readline  split select "," pipe readline  split ","@pipe readline  split "," pipe read pipe readline  "," pipe read@pipe readline  ","@pipe read pipe readline  ","@pipe read@pipe readline  "," open_pipe  readline "]}," FSEvent watch":{"type":"method","name":"watch","children":[],"call":["options kind_of? "," parse_options ","watch_paths kind_of? "]}," Guard debug_command_execution":{"type":"method","name":"debug_command_execution","children":[],"call":[" original_backtick "," Guard UI  debug ","Kernel  send "," original_system ","args join "]}," Guard guard_gem_names":{"type":"method","name":"guard_gem_names","children":[],"call":["x name sub ","x name ","(send\n  (send\n    (const\n      (const nil :Gem) :Version) :create\n    (const\n      (const nil :Gem) :VERSION)) :>=\n  (send\n    (const\n      (const nil :Gem) :Version) :create\n    (str \"1.8.0\"))) map ","Gem  source_index find_name ","Gem  source_index ","x name =~ ","Gem Specification  find_all select ","Gem Specification  find_all ","Gem Version  create >= ","Gem Version  create ","File  exists? ","File  join ","x full_gem_path ","x name != "]}," Guard add_group":{"type":"method","name":"add_group","children":[],"call":["@groups << ","Group  new ","group nil? "," groups ","name to_sym ","name nil? "," Guard Group  new "," group ","@Group  new s << ","@ groups s << ","@ Guard Group  new s << ","@ group s << ","Group  new  nil? "," groups  nil? "," Guard Group  new  nil? "," group  nil? "," Group  new s ","  groups s ","  Guard Group  new s ","  group s "," Group  new  ","  groups  ","  Guard Group  new  ","  group  "]}," Guard guard_symbol":{"type":"method","name":"guard_symbol","children":[],"call":["group options [] ","group options "," groups ","guard group ","guard group class == ","guard group class "," groups  options [] "," groups  options ","  groups s ","guard  groups  ","guard  groups  class == ","guard  groups  class "]}," Guard run_supervised_task":{"type":"method","name":"run_supervised_task","children":[],"call":["UI  info ","guard class name ","guard class "," guards delete "," guards ","UI  error ","(begin\n  (send\n    (send\n      (lvar :guard) :class) :name)) + ","ex backtrace join ","ex backtrace ","ex message ","ex class ","task to_s ","guard hook ","guard send "," catch "," guard_symbol "]}," Guard deleted_paths":{"type":"method","name":"deleted_paths","children":[],"call":["f slice ","(send\n  (lvar :paths) :select) map ","f start_with? ","f respond_to? ","paths select "]}," Guard changed_paths":{"type":"method","name":"changed_paths","children":[],"call":["f start_with? ! ","f start_with? ","f respond_to? ! ","f respond_to? ","paths select "]}," Guard run_on_change_task":{"type":"method","name":"run_on_change_task","children":[],"call":[" run_supervised_task ","UI  debug ","deletions inspect ","guard class name ","guard class ","deletions empty? ","changes inspect ","changes empty? "," deleted_paths "," changed_paths ","Watcher  match_files "," deleted_paths  inspect "," deleted_paths  empty? "," changed_paths  inspect "," changed_paths  empty? "," deleted_Watcher  match_files  "," changed_Watcher  match_files  "]}," Guard run_on_guards":{"type":"method","name":"run_on_guards","children":[],"call":[" guards each "," guards ","group name "," catch ","groups each ","scopes [] "," scopes [] s each "," scopes [] s "]}," Guard run_on_change":{"type":"method","name":"run_on_change","children":[],"call":[" run_on_change_task "," run_on_guards "," run "," supervised_task ","UI  debug ","paths inspect ","guard class name ","guard class ","paths empty? ","Watcher  match_files "," guards each "," guards "," run_guard_task ","Watcher  match_files  inspect ","Watcher  match_files  empty? "]}," Guard pause":{"type":"method","name":"pause","children":[],"call":[" listener pause "," listener ","UI  info "," listener run "," listener clear_changed_files "," listener paused? "," listener lock "," listener unlock "," listener locked "," listener unpause "," Guard UI  info "]}," Guard run_all":{"type":"method","name":"run_all","children":[],"call":[" run_supervised_task "," run_on_guards "," run "," supervised_task "," guards each "," guards "," run_guard_task "," runner run "," runner ","UI  action_with_scopes ","UI  clear "," within_preserved_state "," Guard UI  action_with_scopes "," Guard UI  clear "," convert_scopes ","UI  action_with_ convert_scopes  "," Guard UI  action_with_ convert_scopes  "," convert_ convert_scopes  "]}," Guard reload":{"type":"method","name":"reload","children":[],"call":[" run_supervised_task "," run_on_guards "," run "," supervised_task "," guards each "," guards "," run_guard_task "," runner run "," runner ","Dsl  reevaluate_guardfile ","scopes empty? ","UI  action_with_scopes ","UI  clear "," within_preserved_state "," Guard Dsl  reevaluate_guardfile "," Guard UI  action_with_scopes "," Guard UI  clear "," convert_scopes "," convert_scopes  empty? ","UI  action_with_ convert_scopes  "," Guard UI  action_with_ convert_scopes  "," convert_ convert_scopes  "]}," Guard stop":{"type":"method","name":"stop","children":[],"call":[" abort "," listener stop "," listener "," interactor stop "," interactor "," run_supervised_task "," run_on_guards ","UI  info "," supervised_task "," guards each "," guards "," run_guard_task "," interactor lock "," listener lock "," runner run "," runner ","@allow_stop signal "," Guard UI  info "," within_preserved_state "," Guard  running= "," Guard Notifier  turn_off "," Guard UI  debug "]}," Guard reset_groups":{"type":"method","name":"reset_groups","children":[],"call":["Group  new ","DEFAULT_GROUPS  map "]}," Guard groups":{"type":"method","name":"groups","children":[],"call":["group name to_s =~ ","group name to_s ","group name ","@groups find_all ","group name == ","filter to_sym ","@groups find ","filter nil? ","@groups select "," fail ","filter inspect "]}," Guard guards":{"type":"method","name":"guards","children":[],"call":["guard send to_sym == ","v to_sym ","guard send to_sym ","guard send ","matches find_all ","guard class to_s downcase sub == ","v to_s downcase gsub ","v to_s downcase ","v to_s ","guard class to_s downcase sub ","guard class to_s downcase ","guard class to_s ","guard class ","k to_sym == ","k to_sym ","filter inject ","guard class to_s downcase sub =~ ","@guards find_all ","filter to_s downcase gsub ","filter to_s downcase ","filter to_s ","@guards find "]}," Guard setup":{"type":"method","name":"setup","children":[],"call":[" debug_command_execution ","@options [] ","UI  clear ","Listener  select_and_init "," reset_groups ","Mutex  new ","Notifier  turn_off ","options [] ","Notifier  turn_on ","ENV  [] != ","ENV  [] ","Dir  pwd ","File  expand_path ","Interactor  new ","Group  new "," Guard  pause ","@listener paused? ","Signal  trap ","Signal  list keys include? ","Signal  list keys ","Signal  list "," setup_interactor "," setup_notifier "," runner deprecation_warning "," runner ","UI  error ","@guards empty? ","Dsl  evaluate_guardfile "," setup_signal_traps "," setup_listener "," setup_guards "," setup_groups "," deprecated_options_warning ","Runner  new ","Listen Turnstile  new "," Guard UI  error "," Guard Dsl  evaluate_guardfile "," Guard UI  clear "," Guard Runner  new "," Guard UI  options []= "," Guard UI  options ","options dup ","Thread  abort_on_exception= ","@scope []= "," Guard  guards ","@options [] map "," Guard  groups ","Dir  chdir "," setup_scopes "," setup_from_guardfile "," setup_debug "," Array map "," Array ","@interactor handle_interrupt ","traps handle "," state session interactor_name == "," state session interactor_name "," state session "," state "," async_queue_add ","Notifier  connect "," state session notify_options ","Listen  send "," _listener_callback "," state session listener_args "," _evaluate "," state session evaluator_options ","Internals Queue  new "," init ","@listener ignore! ","ignores empty? "," state session guardfile_ignore_bang ","@listener ignore "," state session guardfile_ignore "," Guard Interactor  new "," options [] "," options "," Guard Notifier  connect "," _setup_listener "," setup_scope "," evaluate_guardfile "," _reset_all "," Guard UI  reset_and_clear "," watchdirs= ","Queue  new "," Guard Internals Debugging  start "," reset_options ","UI  reset_and_clear ","options dup  [] ","Listener  select_and_init  paused? ","Listen  send  paused? "," _setup_listener  paused? ","options dup  [] map ","Interactor  new  handle_interrupt "," Guard Interactor  new  handle_interrupt ","Listener  select_and_init  ignore! ","Listen  send  ignore! "," _setup_listener  ignore! "," state session guardfile_ignore_bang  empty? "," state session guardfile_ignore  empty? ","Listener  select_and_init  ignore ","Listen  send  ignore "," _setup_listener  ignore "]}," Guard initialize_template":{"type":"method","name":"initialize_template","children":[],"call":["UI  error ","const_name capitalize ","guard_name downcase ","guard_name downcase gsub "," Guard UI  info ","f puts ","File  open ","File  read ","File  join ","File  exist? ","guard_class init "," Guard  get_guard_class "," exit "," Guard UI  error ","Dir  pwd ","guard_name nil? ","FileUtils  cp ","File  exist? ! ","File  expand_path ","guard_name downcase gsub  capitalize "," Guard  get_guard_class  init "," Guard  get_ Guard  get_guard_class  "]}," Guard Watcher call_action":{"type":"method","name":"call_action","children":[],"call":["UI  error ","e backtrace join ","e backtrace ","e message ","@action call ","@action arity > ","@action arity "," Guard UI  error ","ex backtrace join ","ex backtrace ","ex message "]}," Guard Watcher match_guardfile?":{"type":"method","name":"match_guardfile?","children":[],"call":[]}," Guard Watcher match_file?":{"type":"method","name":"match_file?","children":[],"call":["file == ","file match ","@pattern is_a? "," match ","UI  info "," Guard UI  info "]}," Guard Watcher match_files?":{"type":"method","name":"match_files?","children":[],"call":[]}," Guard UI color_enabled?":{"type":"method","name":"color_enabled?","children":[],"call":[" info "," require ","ENV  [] ","RbConfig CONFIG  [] =~ ","RbConfig CONFIG  [] ","@color_enabled nil? ","Config CONFIG  [] =~ ","Config CONFIG  [] ","Gem  win_platform? "]}," Guard UI deprecation":{"type":"method","name":"deprecation","children":[],"call":["STDERR  puts "," color + "," color "," reset_line ","options [] ","ENV  [] == ","ENV  [] "," puts "," logger warn "," logger "," filter "," warning "," Guard  options show_deprecations "," Guard  options "," Guard  options [] "," format ","Thread  current backtrace [] join ","Thread  current backtrace [] ","Thread  current backtrace ","Thread  current "," fail "," Guard  options nil? ","Thread  current Thread  current backtrace [] join  [] join ","Thread  current Thread  current backtrace [] join  [] ","Thread  current Thread  current backtrace [] join  "]}," Guard Notifier Notifu notifu_type":{"type":"method","name":"notifu_type","children":[],"call":[]}," Guard Notifier Notifu notify":{"type":"method","name":"notify","children":[],"call":[" Notifu  show ","DEFAULTS  merge merge "," notifu_type ","DEFAULTS  merge "," require "," _notifu_type ","opts delete "," normalize_standard_options! "," class require_gem_safely "," class ","DEFAULTS  merge merge  delete "]}," Guard Notifier Notifu available?":{"type":"method","name":"available?","children":[],"call":[" Guard UI  error "," require ","RbConfig CONFIG  [] =~ ","RbConfig CONFIG  [] "]}," Guard Notifier Libnotify libnotify_urgency":{"type":"method","name":"libnotify_urgency","children":[],"call":[]}," Guard Notifier Libnotify notify":{"type":"method","name":"notify","children":[],"call":[" Libnotify  show ","DEFAULTS  merge merge "," libnotify_urgency ","DEFAULTS  merge "," require ","options [] "," _libnotify_urgency ","opts delete "," normalize_standard_options! "," class require_gem_safely "," class ","DEFAULTS  merge merge  [] ","DEFAULTS  merge merge  delete "," normalize_standard_DEFAULTS  merge merge ! "]}," Guard Notifier Libnotify available?":{"type":"method","name":"available?","children":[],"call":[" Guard UI  error "," require ","RbConfig CONFIG  [] =~ ","RbConfig CONFIG  [] "]}," Guard Notifier GrowlNotify notify":{"type":"method","name":"notify","children":[],"call":[" GrowlNotify  send_notification ","DEFAULTS  merge merge ","DEFAULTS  merge "," require ","opts delete ","opts delete to_s "," normalize_standard_options! "," class require_gem_safely "," class ","DEFAULTS  merge merge  delete ","DEFAULTS  merge merge  delete to_s "]}," Guard Notifier GrowlNotify available?":{"type":"method","name":"available?","children":[],"call":[" Guard UI  error ","c application_name= ","c default_notifications= ","c notifications= "," GrowlNotify  config "," GrowlNotify  application_name != "," GrowlNotify  application_name "," require ","RbConfig CONFIG  [] =~ ","RbConfig CONFIG  [] "]}," Guard Notifier Growl notify":{"type":"method","name":"notify","children":[],"call":[" Growl  notify ","DEFAULTS  merge merge ","DEFAULTS  merge "," require ","opts delete "," normalize_standard_options! "," class require_gem_safely "," class ","DEFAULTS  merge merge  delete "]}," Guard Notifier Growl available?":{"type":"method","name":"available?","children":[],"call":[" Guard UI  error "," Growl  installed? "," require ","RbConfig CONFIG  [] =~ ","RbConfig CONFIG  [] "]}," Guard Notifier GNTP notify":{"type":"method","name":"notify","children":[],"call":["gntp notify ","options merge "," registered! ","gntp register "," registered? "," GNTP  new ","options delete ","DEFAULTS  merge "," require ","File  expand_path ","File  join "," _client notify "," _client ","DEFAULTS  merge merge ","opts delete ","opts delete to_s "," normalize_standard_options! "," class require_gem_safely "," class "," GNTP  new  notify ","DEFAULTS  merge  merge "," GNTP  new  register ","DEFAULTS  merge  delete ","DEFAULTS  merge merge  delete ","DEFAULTS  merge merge  delete to_s "," normalize_standard_DEFAULTS  merge ! "]}," Guard Notifier GNTP available?":{"type":"method","name":"available?","children":[],"call":[" Guard UI  error "," require ","RbConfig CONFIG  [] =~ ","RbConfig CONFIG  [] "]}," Guard Notifier GNTP registered!":{"type":"method","name":"registered!","children":[],"call":[]}," Guard Notifier GNTP registered?":{"type":"method","name":"registered?","children":[],"call":[]}," Guard Notifier notification_type":{"type":"method","name":"notification_type","children":[],"call":[]}," Guard Notifier images_path":{"type":"method","name":"images_path","children":[],"call":["Pathname  new join ","Pathname  new ","File  dirname "]}," Guard Notifier auto_detect_notification":{"type":"method","name":"auto_detect_notification","children":[],"call":[" Guard UI  info "," add_notification ","(sym :growl_notify) any? ","(send\n  (const nil :NOTIFIERS) :map) any? ","n first ","NOTIFIERS  map ","(send\n  (lvar :group) :map) find ","group map ","NOTIFIERS  each "," notifications= "]}," Guard Notifier add_notification":{"type":"method","name":"add_notification","children":[],"call":[" notifications= "," notifications << "," notifications ","NOTIFIERS  [] available? ","NOTIFIERS  [] ","NOTIFIERS  has_key? "," turn_off ","name == ","notifier available? "," get_notifier_module "," get_notifier_module  available? "," get_ get_notifier_module _module "]}," Guard Notifier enabled?":{"type":"method","name":"enabled?","children":[],"call":["ENV  [] == ","ENV  [] "," _env notify? "," _env "]}," Guard Notifier turn_off":{"type":"method","name":"turn_off","children":[],"call":["ENV  []= ","notifier turn_off ","notification [] ","notifier respond_to? "," get_notifier_module "," notifications each "," notifications ","notifier_class turn_off ","notifier_class respond_to? "," _get_notifier_module ","notifier [] "," notifiers each "," notifiers "," _env notify_active= "," _env ","klass turn_off ","klass respond_to? ","@detected available each ","@detected available "," fail "," active? "," _check_server! "," get_notifier_module  turn_off "," get_notifier_module  respond_to? "," get_ get_notifier_module _module "," get_notifier_module _class turn_off "," _get_notifier_module  turn_off "," get_notifier_module _class respond_to? "," _get_notifier_module  respond_to? "," _get_ get_notifier_module _module "," get_notifier_module  [] ","  get_notifier_module s each ","  get_notifier_module s "]}," Guard Notifier turn_on":{"type":"method","name":"turn_on","children":[],"call":["ENV  []= "," Guard UI  info ","NOTIFIERS  [] to_s split last ","NOTIFIERS  [] to_s split ","NOTIFIERS  [] to_s ","NOTIFIERS  [] ","notification [] "," notifications each "," notifications "," notifications empty? "," auto_detect_notification "," Guard  options [] "," Guard  options "," Guard  options ! "," require_rbnotifu "," require_libnotify "," require_growl ","RbConfig CONFIG  [] "," get_notifier_module to_s split last "," get_notifier_module to_s split "," get_notifier_module to_s "," get_notifier_module ","notifier turn_on ","notifier respond_to? ","notifier_class turn_on ","notifier_class respond_to? ","notifier_class title "," _get_notifier_module ","notifier [] "," notifiers each "," notifiers "," turn_off "," notifiers empty? "," _auto_detect_notification "," Guard  options notify ","opts [] "," _env notify_active= "," _env ","klass turn_on ","klass respond_to? "," format ","klass title ","@detected available each ","@detected available "," fail "," active? "," enabled? "," _check_server! ","options [] ","(or\n  (send\n    (const\n      (cbase) :Guard) :options)\n  (hash)) [] "," get_ get_notifier_module _module to_s split last "," get_ get_notifier_module _module to_s split "," get_ get_notifier_module _module to_s "," get_ get_notifier_module _module "," get_notifier_module  turn_on "," get_notifier_module  respond_to? "," get_notifier_module _class turn_on "," _get_notifier_module  turn_on "," get_notifier_module _class respond_to? "," _get_notifier_module  respond_to? "," get_notifier_module _class title "," _get_notifier_module  title "," _get_ get_notifier_module _module "," get_notifier_module  [] ","  get_notifier_module s each ","  get_notifier_module s ","  get_notifier_module s empty? "]}," Guard Notifier clear_notifications":{"type":"method","name":"clear_notifications","children":[],"call":["ENV  []= "]}," Guard Notifier notifications=":{"type":"method","name":"notifications=","children":[],"call":["ENV  []= ","YAML  dump "]}," Guard Notifier notifications":{"type":"method","name":"notifications","children":[],"call":["YAML  load ","ENV  [] "]}," Guard Windows worker":{"type":"method","name":"worker","children":[],"call":[]}," Guard Windows watch":{"type":"method","name":"watch","children":[],"call":["@callback call ","files empty? "," modified_files ","File  expand_path ","event watcher path ","event watcher "," worker watch "," worker "," callback call "," callback "," update_last_event ","File  expand_path + "," modified_files  empty? "," modified_ modified_files  "]}," Guard Windows usable?":{"type":"method","name":"usable?","children":[],"call":[]}," Guard Windows stop":{"type":"method","name":"stop","children":[],"call":[" worker stop "," worker ","@fchange stop "]}," Guard Windows start":{"type":"method","name":"start","children":[],"call":[" worker run "," worker ","@fchange run "]}," Guard Windows initialize":{"type":"method","name":"initialize","children":[],"call":["FChange Notifier  new "]}," Guard Polling watch_change":{"type":"method","name":"watch_change","children":[],"call":[" sleep ","nap_time > ","@latency - ","Time  now to_f - ","Time  now to_f ","Time  now ","@callback call ","files empty? "," modified_files "," latency - "," latency "," callback call "," callback "," update_last_event ","Dir  pwd + ","Dir  pwd ","@stop ! "," relativate_paths ","@latency -  > "," latency -  > "," modified_files  empty? "," modified_ modified_files  "]}," Guard Polling watch":{"type":"method","name":"watch","children":[],"call":[" all_files "]}," Guard Polling stop":{"type":"method","name":"stop","children":[],"call":[]}," Guard Polling start":{"type":"method","name":"start","children":[],"call":[" watch_change "]}," Guard Polling initialize":{"type":"method","name":"initialize","children":[],"call":[]}," Guard Linux watch_change":{"type":"method","name":"watch_change","children":[],"call":["@callback call ","files empty? "," modified_files ","(send\n  (send\n    (ivar :@files) :shift\n    (send\n      (ivar :@files) :size)) :map) uniq ","File  dirname ","@files shift map ","@files shift ","@files size "," worker process "," worker "," sleep ","IO  select "," worker to_io ","RbConfig CONFIG  [] =~ ","RbConfig CONFIG  [] "," latency "," files clear "," files "," callback call "," callback ","file gsub ","Dir  pwd "," files map! "," files empty? "," inotify process "," inotify "," inotify to_io ","Config CONFIG  [] =~ ","Config CONFIG  [] ","@stop ! "," update_last_event "," files uniq! "," relativate_paths ","modified_files empty? ","(send\n  (send\n    (send nil :files) :shift\n    (send\n      (send nil :files) :size)) :map) uniq ","File  dirname + "," files shift map "," files shift "," files size "," modified_files  empty? "," modified_ modified_files  ","  modified_files  ","(send\n  (send\n    (ivar :@ modified_files ) :shift\n    (send\n      (ivar :@ modified_files ) :size)) :map) uniq ","@ modified_files  shift map ","@ modified_files  shift ","@ modified_files  size ","  modified_files  clear ","  modified_files  map! ","  modified_files  empty? ","  modified_files  uniq! ","modified_ modified_files  empty? ","(send\n  (send\n    (send nil : modified_files ) :shift\n    (send\n      (send nil : modified_files ) :size)) :map) uniq ","  modified_files  shift map ","  modified_files  shift ","  modified_files  size "]}," Guard Linux watch_change?":{"type":"method","name":"watch_change?","children":[],"call":["(and\n  (defined?\n    (ivar :@watch_change))\n  (ivar :@watch_change)) ! ! ","(and\n  (defined?\n    (ivar :@watch_change))\n  (ivar :@watch_change)) ! ","@watch_change ! ! ","@watch_change ! "]}," Guard Linux watch":{"type":"method","name":"watch","children":[],"call":["@files << ","event absolute_name ","event name == ","event name "," worker watch "," worker "]}," Guard Linux worker":{"type":"method","name":"worker","children":[],"call":[]}," Guard Linux usable?":{"type":"method","name":"usable?","children":[],"call":[]}," Guard Linux stop":{"type":"method","name":"stop","children":[],"call":[" inotify stop "," inotify "," sleep "," latency "]}," Guard Linux start":{"type":"method","name":"start","children":[],"call":[" watch_change "," watch_change? "]}," Guard Linux initialize":{"type":"method","name":"initialize","children":[],"call":["INotify Notifier  new "]}," Guard Darwin watch":{"type":"method","name":"watch","children":[],"call":["@callback call ","files empty? "," modified_files "," worker watch "," worker "," callback call "," callback "," update_last_event "," modified_files  empty? "," modified_ modified_files  "]}," Guard Darwin worker":{"type":"method","name":"worker","children":[],"call":[]}," Guard Darwin usable?":{"type":"method","name":"usable?","children":[],"call":[]}," Guard Darwin stop":{"type":"method","name":"stop","children":[],"call":[" worker stop "," worker ","@fsevent stop "," fsevent stop "," fsevent "]}," Guard Darwin start":{"type":"method","name":"start","children":[],"call":[" worker run "," worker ","@fsevent run "," fsevent run "," fsevent "]}," Guard Darwin initialize":{"type":"method","name":"initialize","children":[],"call":["FSEvent  new "]}," Guard Listener windows?":{"type":"method","name":"windows?","children":[],"call":[]}," Guard Listener linux?":{"type":"method","name":"linux?","children":[],"call":[]}," Guard Listener mac?":{"type":"method","name":"mac?","children":[],"call":[]}," Guard Listener sha1_checksum":{"type":"method","name":"sha1_checksum","children":[],"call":["Digest SHA1  file to_s ","Digest SHA1  file "]}," Guard Listener file_timestamp":{"type":"method","name":"file_timestamp","children":[],"call":["File  mtime to_i ","File  mtime "]}," Guard Listener set_sha1_checksums_hash":{"type":"method","name":"set_sha1_checksums_hash","children":[],"call":["@sha1_checksums_hash []= "," sha1_checksum "]}," Guard Listener set_file_timestamp_hash":{"type":"method","name":"set_file_timestamp_hash","children":[],"call":["@file_timestamp_hash []= "," file_timestamp "]}," Guard Listener file_content_modified?":{"type":"method","name":"file_content_modified?","children":[],"call":[" set_sha1_checksums_hash ","@sha1_checksums_hash [] != ","@sha1_checksums_hash [] "," sha1_checksums_hash [] != "," sha1_checksums_hash [] "," sha1_checksums_hash "," sha1_checksum "," set_sha1_ sha1_checksum s_hash ","@sha1_ sha1_checksum s_hash [] != ","@sha1_ sha1_checksum s_hash [] "," sha1_ sha1_checksum s_hash [] != "," sha1_ sha1_checksum s_hash [] "," sha1_ sha1_checksum s_hash "," sha1_ sha1_checksum  "]}," Guard Listener file_modified?":{"type":"method","name":"file_modified?","children":[],"call":[" set_file_timestamp_hash ","ts != ","@file_timestamp_hash [] "," file_timestamp "," watch_all_modifications? "," set_sha1_checksums_hash "," sha1_checksum ","mtime > ","last_event to_i "," file_content_modified? ","(lvar :mtime) max == ","(lvar :mtime) max ","File  mtime to_i ","File  mtime ","File  ctime to_i ","File  ctime ","File  mtime to_i > "," last_event to_i "," last_event ","File  mtime to_i == ","@last_event to_i "," file_timestamp  != ","File  mtime to_i  > ","(lvar :File  mtime to_i ) max == ","(lvar :File  mtime to_i ) max ","File  File  mtime to_i  to_i ","File  File  mtime to_i  ","File  File  ctime to_i  to_i ","File  File  ctime to_i  ","File  File  mtime to_i  to_i > ","File  File  mtime to_i  to_i == "]}," Guard Listener exclude_ignored_paths":{"type":"method","name":"exclude_ignored_paths","children":[],"call":["ignore_paths include? ","File  basename ","Dir  glob reject ","Dir  glob ","d sub ","dirs map "]}," Guard Listener timestamp_files":{"type":"method","name":"timestamp_files","children":[],"call":[" set_file_timestamp_hash "," file_timestamp "," all_files each "," all_files "," watch_all_modifications? "]}," Guard Listener watch_all_modifications?":{"type":"method","name":"watch_all_modifications?","children":[],"call":["@watch_all_modifications ! ! ","@watch_all_modifications ! "]}," Guard Listener relativize_paths?":{"type":"method","name":"relativize_paths?","children":[],"call":["@relativize_paths ! ! ","@relativize_paths ! "]}," Guard Listener relativize_paths":{"type":"method","name":"relativize_paths","children":[],"call":["path gsub ","paths map "," relativize_paths? "]}," Guard Listener all_files":{"type":"method","name":"all_files","children":[],"call":[" potentially_modified_files "," directory + "," directory "]}," Guard Listener watch":{"type":"method","name":"watch","children":[],"call":[" raise "]}," Guard Listener clear_changed_files":{"type":"method","name":"clear_changed_files","children":[],"call":["@changed_files clear "]}," Guard Listener run":{"type":"method","name":"run","children":[],"call":[]}," Guard Listener pause":{"type":"method","name":"pause","children":[],"call":[]}," Guard Listener start_reactor":{"type":"method","name":"start_reactor","children":[],"call":[" sleep "," Guard  run_on_change "," clear_changed_files ","@changed_files dup ","@paused ! ","@changed_files != "," loop ","Thread  new ","ENV  [] == ","ENV  [] ","@locked ! "," clear_@changed_files dup  ","@@changed_files dup  dup ","@@changed_files dup  != "]}," Guard Listener select_and_init":{"type":"method","name":"select_and_init","children":[],"call":["Dir  pwd "]}," Guard Listener paused?":{"type":"method","name":"paused?","children":[],"call":[]}," Guard SimpleInteractor read_line":{"type":"method","name":"read_line","children":[],"call":[" process_input ","line gsub chomp ","line gsub ","$stdin gets ","line chomp ","$stdin gets  gsub chomp ","$stdin gets  gsub ","$stdin gets  chomp "]}," Guard ReadlineInteractor restore_terminal_settings":{"type":"method","name":"restore_terminal_settings","children":[],"call":[" system "]}," Guard ReadlineInteractor store_terminal_settings":{"type":"method","name":"store_terminal_settings","children":[],"call":["(str \"stty -g\") chomp ","(str \"stty -g 2>/dev/null\") chomp "]}," Guard ReadlineInteractor stty_exists?":{"type":"method","name":"stty_exists?","children":[],"call":[" system "]}," Guard ReadlineInteractor prompt":{"type":"method","name":"prompt","children":[],"call":[" Guard  listener paused? "," Guard  listener "]}," Guard ReadlineInteractor completion_list":{"type":"method","name":"completion_list","children":[],"call":["COMPLETION_ACTIONS  + + - ","COMPLETION_ACTIONS  + + ","COMPLETION_ACTIONS  + ","guard class to_s downcase sub ","guard class to_s downcase ","guard class to_s ","guard class "," Guard  guards map "," Guard  guards ","group name to_s ","group name "," Guard  groups map "," Guard  groups "]}," Guard ReadlineInteractor auto_complete":{"type":"method","name":"auto_complete","children":[],"call":[" completion_list grep ","Regexp  escape "," completion_list "]}," Guard ReadlineInteractor read_line":{"type":"method","name":"read_line","children":[],"call":[" process_input ","Readline HISTORY  pop ","Readline HISTORY  to_a [] == ","Readline HISTORY  to_a [] ","Readline HISTORY  to_a ","line =~ ","line gsub! ","Readline  readline "," prompt "," require ","ReadReadline  readline  HISTORY  pop ","ReadReadline  readline  HISTORY  to_a [] == ","ReadReadline  readline  HISTORY  to_a [] ","ReadReadline  readline  HISTORY  to_a ","Readline  readline  =~ ","Readline  readline  gsub! ","ReadReadline  readline   readReadline  readline  "]}," Guard ReadlineInteractor stop":{"type":"method","name":"stop","children":[],"call":[" restore_terminal_settings "," stty_exists? ","RbReadline  _rl_erase_entire_line ","RbReadline  rl_outstream ","Readline  refresh_line ","Readline  respond_to? ","(const\n  (cbase) :JRUBY_VERSION) ! "]}," Guard ReadlineInteractor start":{"type":"method","name":"start","children":[],"call":[" store_terminal_settings "," stty_exists? "]}," Guard ReadlineInteractor initialize":{"type":"method","name":"initialize","children":[],"call":["Readline  completion_append_character= ","Readline  completion_proc= "," auto_complete "," proc "," Guard UI  info ","RbConfig CONFIG  [] =~ ","RbConfig CONFIG  [] "," require "]}," Guard Interactor action_from_entry":{"type":"method","name":"action_from_entry","children":[],"call":["NOTIFICATION_ENTRIES  include? ","HELP_ENTRIES  include? ","PAUSE_ENTRIES  include? ","RELOAD_ENTRIES  include? ","STOP_ENTRIES  include? ","PAUSE_ACTIONS  include? ","RELOAD_ACTIONS  include? ","STOP_ACTIONS  include? "]}," Guard Interactor scopes_from_entry":{"type":"method","name":"scopes_from_entry","children":[],"call":["scopes []= "," Guard  groups "," Guard  guards "," Guard   Guard  groups s "," Guard   Guard  guards s "]}," Guard Interactor extract_scopes_and_action":{"type":"method","name":"extract_scopes_and_action","children":[],"call":["entries empty? ","scopes empty? ! ","scopes empty? ","action ! "," action_from_entry ","entries [] "," scopes_from_entry ","entries length ","line split ","entry split "," extract_action "," extract_scopes ","line split  empty? ","entry split  empty? "," scopes_from_entry  empty? ! "," extract_scopes  empty? ! "," scopes_from_entry  empty? "," extract_scopes  empty? "," action_from_entry  ! "," extract_action  ! ","  action_from_entry _from_entry ","  extract_action _from_entry ","line split  [] ","entry split  [] ","  scopes_from_entry _from_entry ","  extract_scopes _from_entry ","line split  length ","entry split  length "," extract_ action_from_entry  "," extract_ extract_action  "," extract_ scopes_from_entry  "," extract_ extract_scopes  "]}," Guard Interactor help":{"type":"method","name":"help","children":[],"call":[" puts "]}," Guard Interactor toggle_notification":{"type":"method","name":"toggle_notification","children":[],"call":[" Guard Notifier  turn_on "," Guard Notifier  turn_off "," Guard UI  info ","ENV  [] == ","ENV  [] "]}," Guard Interactor reload":{"type":"method","name":"reload","children":[],"call":[" Guard  reload "," Guard Dsl  reevaluate_guardfile ","scopes empty? "," Guard UI  info "," Guard  supervised_task "," Guard  guards each "," Guard  guards "," Guard  run "]}," Guard Interactor process_input":{"type":"method","name":"process_input","children":[],"call":[" Guard UI  error "," toggle_notification "," Guard  run_all "," reload "," Guard  pause "," Guard  stop "," help "," extract_scopes_and_action ","Readline HISTORY  pop ","Readline HISTORY  to_a [] == ","Readline HISTORY  to_a [] ","Readline HISTORY  to_a ","line =~ "," exit "," Guard  reload "," Guard  runner run_on_changes "," Guard  runner "," Guard  within_preserved_state ","DslDescriber  show "," Guard  options "," Guard DslDescriber  show "]}," Guard Interactor read_line":{"type":"method","name":"read_line","children":[],"call":[" raise "," process_input ","Readline  readline "," prompt ","ReadReadline  readline   readReadline  readline  "]}," Guard Interactor stop":{"type":"method","name":"stop","children":[],"call":["@thread kill ","Thread  current == ","Thread  current "," abort "," Guard  supervised_task "," Guard  guards each "," Guard  guards "," Guard  listener stop "," Guard  listener ","UI  info ","ENV  [] == ","ENV  [] "," Guard UI  debug ","@thread ! "," restore_terminal_settings "," stty_exists? "," Guard UI  reset_line "," _restore_terminal_settings "," _stty_exists? "]}," Guard Interactor start":{"type":"method","name":"start","children":[],"call":[" read_line ","Thread  new ","@thread alive? ! ","@thread alive? ","@thread ! ","ENV  [] == ","ENV  [] "," Guard  run_all "," Guard  pause "," Guard  reload "," Guard  stop ","entry gsub! ","@locked ! ","$stdin gets "," loop "," unlock "," lock "," Guard Dsl  reevaluate_guardfile ","$stdin gets chomp ","@thread stop? ","scopes empty? "," extract_scopes_and_action "," Guard UI  debug "," exit ","Pry  start "," store_terminal_settings "," stty_exists? ","(str \"sleep\") include? ! ","(str \"sleep\") include? ","@thread status "," _store_terminal_settings "," _stty_exists? ","$stdin gets  gsub! ","$stdin gets chomp  gsub! "]}," Guard Interactor auto_detect":{"type":"method","name":"auto_detect","children":[],"call":[]}," Guard Interactor fabricate":{"type":"method","name":"fabricate","children":[],"call":[]}," Guard Interactor interactor=":{"type":"method","name":"interactor=","children":[],"call":[]}," Guard Hook reset_callbacks!":{"type":"method","name":"reset_callbacks!","children":[],"call":[]}," Guard Hook notify":{"type":"method","name":"notify","children":[],"call":["listener call "," callbacks [] each "," callbacks [] "," callbacks "]}," Guard Hook has_callback?":{"type":"method","name":"has_callback?","children":[],"call":[" callbacks [] include? "," callbacks [] "," callbacks "]}," Guard Hook add_callback":{"type":"method","name":"add_callback","children":[],"call":[" callbacks [] << "," callbacks [] "," callbacks ","_events each ","events is_a? "]}," Guard Hook callbacks":{"type":"method","name":"callbacks","children":[],"call":["hash []= ","Hash  new "]}," Guard Hook InstanceMethods hook":{"type":"method","name":"hook","children":[],"call":["Hook  notify "," class ","UI  debug ","(send\n  (lvar :event) :is_a?\n  (const nil :Symbol)) to_sym "," caller [] [] "," caller [] "," caller ","event is_a? "," Guard UI  debug "]}," Guard Hook included":{"type":"method","name":"included","children":[],"call":[]}," Guard Guard run_on_deletion":{"type":"method","name":"run_on_deletion","children":[],"call":[]}," Guard Group initialize":{"type":"method","name":"initialize","children":[],"call":["name to_sym "]}," Guard DslDescriber guard":{"type":"method","name":"guard","children":[],"call":["node [] << ","node [] ","@@guardfile_structure first ","@@guardfile_structure last "]}," Guard DslDescriber group":{"type":"method","name":"group","children":[],"call":[" block_given? ","@@guardfile_structure << ","name to_sym ","guard_definition call "]}," Guard DslDescriber guardfile_structure":{"type":"method","name":"guardfile_structure","children":[],"call":[]}," Guard DslDescriber show":{"type":"method","name":"show","children":[],"call":["UI  info ","(send\n  (send\n    (send\n      (lvar :guard) :[]\n      (sym :options)) :sort) :collect) join ","v inspect ","guard [] sort collect ","guard [] sort ","guard [] ","guard [] empty? ","group [] each ","group [] ","group [] empty? "," guardfile_structure each "," guardfile_structure "," evaluate_guardfile ","(send\n  (send\n    (block\n      (send\n        (send\n          (lvar :guard) :[]\n          (sym :options)) :inject\n        (hash))\n      (args\n        (arg :options)\n        (mlhs\n          (arg :k)\n          (arg :v)))\n      (begin\n        (send\n          (lvar :options) :[]=\n          (send\n            (lvar :k) :to_s)\n          (lvar :v))\n        (lvar :options))) :sort) :collect) join ","(send\n  (send\n    (lvar :guard) :[]\n    (sym :options)) :inject\n  (hash)) sort collect ","(send\n  (send\n    (lvar :guard) :[]\n    (sym :options)) :inject\n  (hash)) sort ","options []= ","k to_s ","guard [] inject "," Guard UI  info ","Terminal Table  new ","rows << ","group to_s ","values << << ","values << ","value inspect ","options << << ","options << ","name to_s ","(send\n  (send\n    (lvar :plugin) :options) :inject\n  (hash)) sort each ","(send\n  (send\n    (lvar :plugin) :options) :inject\n  (hash)) sort ","o []= ","plugin options inject ","plugin options ","plugins << ","plugin to_s "," Guard  guards each "," Guard  guards ","group name "," Guard  groups inject "," Guard  groups ","Formatador  display_compact_table ","rows drop ","option to_s ","index == ","options each_with_index ","options empty? ","plugin title ","group title "," Array each "," Array "," Guard  plugins "," _evaluate_guardfile ","prev_plugin != ","prev_group != ","objects each ","objects << ","raw_value inspect ","raw_value nil? ","options each ","plugins each ","plugins empty? ","Guard  state session plugins all ","Guard  state session plugins ","Guard  state session ","Guard  state ","groups each ","empty_plugin options= ","OpenStruct  new ","Guard  state session groups all ","Guard  state session groups ","final_rows drop ","option []= ","o tap ","groups each_with_object ","(send\n  (send\n    (send\n      (lvar :guard) :[]\n      (sym :(send\n  (send\n    (lvar :plugin) :options) :inject\n  (hash)) sort )) :sort) :collect) join ","(send\n  (send\n    (send\n      (lvar :guard) :[]\n      (sym :plugin options )) :sort) :collect) join ","(send\n  (send\n    (block\n      (send\n        (send\n          (lvar :guard) :[]\n          (sym :(send\n  (send\n    (lvar :plugin) :options) :inject\n  (hash)) sort )) :inject\n        (hash))\n      (args\n        (arg :(send\n  (send\n    (lvar :plugin) :options) :inject\n  (hash)) sort )\n        (mlhs\n          (arg :k)\n          (arg :v)))\n      (begin\n        (send\n          (lvar :(send\n  (send\n    (lvar :plugin) :options) :inject\n  (hash)) sort ) :[]=\n          (send\n            (lvar :k) :to_s)\n          (lvar :v))\n        (lvar :(send\n  (send\n    (lvar :plugin) :options) :inject\n  (hash)) sort ))) :sort) :collect) join ","(send\n  (send\n    (block\n      (send\n        (send\n          (lvar :guard) :[]\n          (sym :plugin options )) :inject\n        (hash))\n      (args\n        (arg :plugin options )\n        (mlhs\n          (arg :k)\n          (arg :v)))\n      (begin\n        (send\n          (lvar :plugin options ) :[]=\n          (send\n            (lvar :k) :to_s)\n          (lvar :v))\n        (lvar :plugin options ))) :sort) :collect) join ","(send\n  (send\n    (lvar :guard) :[]\n    (sym :(send\n  (send\n    (lvar :plugin) :options) :inject\n  (hash)) sort )) :inject\n  (hash)) sort collect ","(send\n  (send\n    (lvar :guard) :[]\n    (sym :plugin options )) :inject\n  (hash)) sort collect ","(send\n  (send\n    (lvar :guard) :[]\n    (sym :(send\n  (send\n    (lvar :plugin) :options) :inject\n  (hash)) sort )) :inject\n  (hash)) sort ","(send\n  (send\n    (lvar :guard) :[]\n    (sym :plugin options )) :inject\n  (hash)) sort ","(send\n  (send\n    (lvar :plugin) :options) :inject\n  (hash)) sort  []= ","plugin options  []= ","raw_value inspect s << << ","raw_value inspect s << ","raw_value inspect  inspect ","(send\n  (send\n    (lvar :plugin) :options) :inject\n  (hash)) sort  << << ","plugin options  << << ","(send\n  (send\n    (lvar :plugin) :options) :inject\n  (hash)) sort  << ","plugin options  << ","(send\n  (send\n    (lvar :plugin) :(send\n  (send\n    (lvar :plugin) :options) :inject\n  (hash)) sort ) :inject\n  (hash)) sort each ","(send\n  (send\n    (lvar :plugin) :plugin options ) :inject\n  (hash)) sort each ","(send\n  (send\n    (lvar :plugin) :(send\n  (send\n    (lvar :plugin) :options) :inject\n  (hash)) sort ) :inject\n  (hash)) sort ","(send\n  (send\n    (lvar :plugin) :plugin options ) :inject\n  (hash)) sort ","plugin (send\n  (send\n    (lvar :plugin) :options) :inject\n  (hash)) sort  inject ","plugin plugin options  inject ","plugin (send\n  (send\n    (lvar :plugin) :options) :inject\n  (hash)) sort  ","plugin plugin options  "," Array  << "," Guard  Guard  state session groups all  inject "," Guard   Guard  groups  inject "," Guard  Guard  state session groups all  "," Guard   Guard  groups  ","(send\n  (send\n    (lvar :plugin) :options) :inject\n  (hash)) sort  each_with_index ","plugin options  each_with_index ","(send\n  (send\n    (lvar :plugin) :options) :inject\n  (hash)) sort  empty? ","plugin options  empty? "," Guard   Array  ","raw_raw_value inspect  inspect ","raw_raw_value inspect  nil? ","(send\n  (send\n    (lvar :plugin) :options) :inject\n  (hash)) sort  each ","plugin options  each "," Array  each "," Array  empty? ","Guard  state session  Array  all ","Guard  state session  Array  ","Guard  state session groups all  each "," Guard  groups  each ","empty_plugin (send\n  (send\n    (lvar :plugin) :options) :inject\n  (hash)) sort = ","empty_plugin plugin options = ","OpenStruct  new  options= ","Guard  state session Guard  state session groups all  all ","Guard  state session  Guard  groups  all ","Guard  state session Guard  state session groups all  ","Guard  state session  Guard  groups  ","Guard  state session groups all  each_with_object "," Guard  groups  each_with_object "]}," Guard DslDescriber list":{"type":"method","name":"list","children":[],"call":["UI  info ","installed_guards include? "," Guard  guard_gem_names sort uniq each "," Guard  guard_gem_names sort uniq "," Guard  guard_gem_names sort "," Guard  guard_gem_names ","installed << ","guard [] ","group [] each ","group [] "," guardfile_structure inject "," guardfile_structure "," evaluate_guardfile ","installed include? ","guard [] to_s "," Guard UI  info ","Terminal Table  new ","rows << "," Guard  guards ","name capitalize "," Guard  guard_gem_names sort uniq inject ","Formatador  display_compact_table "," Guard  plugins "," Guard PluginUtil  plugin_names sort uniq inject "," Guard PluginUtil  plugin_names sort uniq "," Guard PluginUtil  plugin_names sort "," Guard PluginUtil  plugin_names "," _evaluate_guardfile ","final_rows << ","data each ","hash []= ","Guard  state session plugins all any? ","Guard  state session plugins all ","Guard  state session plugins ","Guard  state session ","Guard  state ","PluginUtil  plugin_names sort inject ","PluginUtil  plugin_names sort ","PluginUtil  plugin_names ","names inject "," Guard  plugins any? "," Guard  guard_gem_ Guard PluginUtil  plugin_names sort uniq  sort uniq each "," Guard  guard_gem_ Guard PluginUtil  plugin_names sort uniq  sort uniq "," Guard  guard_gem_ Guard PluginUtil  plugin_names sort uniq  sort "," Guard  guard_gem_ Guard PluginUtil  plugin_names sort uniq  "," Guard  guard_gem_ Guard PluginUtil  plugin_names sort uniq  sort uniq inject "," Guard PluginUtil  plugin_ Guard PluginUtil  plugin_names sort uniq  sort uniq inject "," Guard PluginUtil  plugin_ Guard PluginUtil  plugin_names sort uniq  sort uniq "," Guard PluginUtil  plugin_ Guard PluginUtil  plugin_names sort uniq  sort "," Guard PluginUtil  plugin_ Guard PluginUtil  plugin_names sort uniq  ","PluginUtil  plugin_ Guard PluginUtil  plugin_names sort uniq  sort inject ","PluginUtil  plugin_ Guard PluginUtil  plugin_names sort uniq  sort ","PluginUtil  plugin_ Guard PluginUtil  plugin_names sort uniq  "," Guard PluginUtil  plugin_names sort uniq  inject "]}," Guard DslDescriber evaluate_guardfile":{"type":"method","name":"evaluate_guardfile","children":[],"call":[" Guard  setup_guards "," Guard  setup_groups "," Guard  options= "]}," Guard Dsl ignore_paths":{"type":"method","name":"ignore_paths","children":[],"call":[" Guard  listener ignore_paths push "," Guard  listener ignore_paths "," Guard  listener ","UI  info ","paths join ","UI  deprecation "," Guard UI  deprecation "]}," Guard Dsl callback":{"type":"method","name":"callback","children":[],"call":["@callbacks << ","args [] ","args size > ","args size ","@plugin_options [] << ","@plugin_options [] "," fail "]}," Guard Dsl group":{"type":"method","name":"group","children":[],"call":[" block_given? "," Guard  add_group ","name to_s downcase ","name to_s ","@groups map include? ","@groups map ","@groups empty? ","name to_sym ","@@options [] ","guard_definition call ","@@options [] include? ","@@options [] empty? ","@groups include? "," Guard UI  error "," raise ","name to_sym == ","UI  error ","groups join ","@current_groups pop ","@current_groups push ","Guard  state session groups add ","Guard  state session groups ","Guard  state session ","Guard  state ","groups each "," fail ","group to_sym == ","group to_sym ","args pop ","args last is_a? ","args last "," Array ","name to_sym  to_s downcase ","name to_sym  to_s ","@ Array  map include? ","@ Array  map ","@ Array  empty? ","name to_sym  to_sym ","@@args pop  [] ","@@args pop  [] include? ","@@args pop  [] empty? ","@ Array  include? ","name to_sym  to_sym == "," Array  join ","@current_ Array  pop ","@current_ Array  push ","Guard  state session  Array  add ","Guard  state session  Array  "," Array  each "]}," Guard Dsl interactor":{"type":"method","name":"interactor","children":[],"call":[" Guard Interactor  interactor= ","interactor to_sym "," Guard UI  deprecation "," Guard  options []= "," Guard  options ","interactor == "," Guard Interactor  options= ","options is_a? "," Guard Interactor  enabled= ","options == ","Interactor  options= ","Interactor  enabled= "]}," Guard Dsl notification":{"type":"method","name":"notification","children":[],"call":[" Guard Notifier  add_notification ","notifier to_sym "," Guard Notifier  add_notifier ","options merge ","Notifier  add ","Guard  state session guardfile_notification= ","Guard  state session ","Guard  state ","Notifier  add_notifier "]}," Guard Dsl user_config_path":{"type":"method","name":"user_config_path","children":[],"call":["File  expand_path ","File  join "]}," Guard Dsl home_guardfile_path":{"type":"method","name":"home_guardfile_path","children":[],"call":["File  expand_path ","File  join "]}," Guard Dsl local_guardfile_path":{"type":"method","name":"local_guardfile_path","children":[],"call":["File  join ","Dir  pwd "]}," Guard Dsl guardfile_default_path":{"type":"method","name":"guardfile_default_path","children":[],"call":[" home_guardfile_path "," local_guardfile_path ","File  exist? "]}," Guard Dsl guardfile_contents_usable?":{"type":"method","name":"guardfile_contents_usable?","children":[],"call":[" guardfile_contents size >= ","guard :a size "," guardfile_contents size "," guardfile_contents "]}," Guard Dsl guardfile_path":{"type":"method","name":"guardfile_path","children":[],"call":["@@options [] ","File  join ","Dir  pwd "," options [] "," options "]}," Guard Dsl guardfile_contents_with_user_config":{"type":"method","name":"guardfile_contents_with_user_config","children":[],"call":["(send nil :guardfile_contents) join "," guardfile_contents ","File  read "," user_config_path ","File  exist? "," user_File  read _path "]}," Guard Dsl guardfile_contents":{"type":"method","name":"guardfile_contents","children":[],"call":["@@options [] "," options [] "," options "]}," Guard Dsl fetch_guardfile_contents":{"type":"method","name":"fetch_guardfile_contents","children":[],"call":[" exit ","UI  error ","@@options [] "," guardfile_contents_usable? "," read_guardfile "," guardfile_default_path ","File  exist? ","UI  info ","@@options []= "," guardfile_contents ","@@options has_key? "," Guard UI  error "," Guard UI  info "," options [] "," options "," options []= "]}," Guard Dsl read_guardfile":{"type":"method","name":"read_guardfile","children":[],"call":[" exit ","UI  error ","@@options []= ","File  read "," Guard UI  error "," options []= "," options "]}," Guard Dsl guardfile_include?":{"type":"method","name":"guardfile_include?","children":[],"call":[" guardfile_contents match "," guardfile_contents ","File  read match ","File  read "," guardfile_path "]}," Guard Dsl instance_eval_guardfile":{"type":"method","name":"instance_eval_guardfile","children":[],"call":[" exit ","UI  error "," new instance_eval ","@@options [] "," new "," Guard UI  error "," options [] "," options "]}," Guard Dsl reevaluate_guardfile":{"type":"method","name":"reevaluate_guardfile","children":[],"call":[" Guard  run_supervised_task "," Guard  run_on_guards ","Notifier  notify ","UI  info ","Dsl  evaluate_guardfile ","@@options delete "," Guard Notifier  clear_notifications "," Guard  reset_groups "," Guard  guards clear "," Guard  guards "," Guard  run "," Guard  groups clear "," Guard  groups "," Guard Notifier  notifications clear "," Guard Notifier  notifications ","UI  error "," Guard  guards empty? "," after_reevaluate_guardfile "," before_reevaluate_guardfile "," Guard Dsl  evaluate_guardfile "," options "]}," Guard CLI show":{"type":"method","name":"show","children":[],"call":[" Guard DslDescriber  show "," options "," Guard UI  info ","(send\n  (send\n    (lvar :guard) :[]\n    (sym :options)) :collect) join ","v inspect ","guard [] collect ","guard [] ","guard [] empty? ! ","guard [] empty? ","group [] each ","group [] ","group [] empty? ! ","group [] empty? "," Guard DslDescriber  guardfile_structure each "," Guard DslDescriber  guardfile_structure "," Guard DslDescriber  evaluate_guardfile ","Guard UI  info ","Guard DslDescriber  guardfile_structure each ","Guard DslDescriber  guardfile_structure ","Guard DslDescriber  evaluate_guardfile "," verify_bundler_presence "," puts "," Guard DslDescriber  new show "," Guard DslDescriber  new ","DslDescriber  new show ","DslDescriber  new "," _require_guardfile ","Cli Environments EvaluateOnly  new evaluate ","Cli Environments EvaluateOnly  new "]}," Guard CLI list":{"type":"method","name":"list","children":[],"call":[" Guard DslDescriber  list "," options "," Guard UI  info ","installed include? "," Guard  guard_gem_names sort each "," Guard  guard_gem_names sort "," Guard  guard_gem_names ","installed << ","x [] ","group [] each ","group [] "," Guard DslDescriber  guardfile_structure each "," Guard DslDescriber  guardfile_structure "," Guard DslDescriber  evaluate_guardfile ","Guard UI  info ","Guard  guard_gem_names sort uniq each ","Guard  guard_gem_names sort uniq ","Guard  guard_gem_names sort ","Guard  guard_gem_names ","guard [] ","Guard DslDescriber  guardfile_structure inject ","Guard DslDescriber  guardfile_structure ","Guard DslDescriber  evaluate_guardfile "," verify_bundler_presence "," puts "," Guard DslDescriber  new list "," Guard DslDescriber  new ","DslDescriber  new list ","DslDescriber  new "," _require_guardfile ","Cli Environments EvaluateOnly  new evaluate ","Cli Environments EvaluateOnly  new "]}," Guard Notifier libnotify_installed?":{"type":"method","name":"libnotify_installed?","children":[],"call":[]}," Guard Notifier growl_installed?":{"type":"method","name":"growl_installed?","children":[],"call":[]}," Guard Polling on_change":{"type":"method","name":"on_change","children":[],"call":[]}," Guard Linux on_change":{"type":"method","name":"on_change","children":[],"call":["@files << ","event absolute_name ","event name == ","event name "," inotify watch ","Dir  pwd "," inotify "]}," Guard Darwin on_change":{"type":"method","name":"on_change","children":[],"call":["callback call "," update_last_event "," modified_files ","@fsevent watch ","Dir  pwd "," modified_ modified_files  "]}," Guard Listener init":{"type":"method","name":"init","children":[],"call":[]}," Guard supervised_task":{"type":"method","name":"supervised_task","children":[],"call":["UI  info ","guard class name ","guard class "," Guard  guards delete "," Guard  guards ","UI  error ","task_to_supervise to_s ","guard send "," guards delete "," guards ","(begin\n  (send\n    (send\n      (lvar :guard) :class) :name)) + ","ex backtrace join ","ex backtrace ","ex message ","ex class ","guard hook "]}," Guard run_on_change_for_all_guards":{"type":"method","name":"run_on_change_for_all_guards","children":[],"call":[" run_on_change_for_all_guards ","new_modified_files empty? "," listener update_last_event "," listener "," listener modified_files ","Dir  pwd + ","Dir  pwd "," supervised_task ","paths empty? ","Watcher  match_files "," guards each "," guards "," run ","Watcher  match_files? ","new_modified_files empty? ! "," listener directory ","UI  debug ","paths inspect ","guard class name ","guard class "," listener modified_files  empty? ","Watcher  match_files  empty? "," listener modified_files  empty? ! ","Watcher  match_files  inspect "]}," Guard try_to_load_gem":{"type":"method","name":"try_to_load_gem","children":[],"call":[" require ","name downcase ","name to_s downcase ","name to_s "]}," Guard Notifier require_rbnotifu":{"type":"method","name":"require_rbnotifu","children":[],"call":["UI  info "," turn_off "," require "]}," Guard Notifier require_libnotify":{"type":"method","name":"require_libnotify","children":[],"call":["UI  info "," turn_off "," require "]}," Guard Notifier require_growl":{"type":"method","name":"require_growl","children":[],"call":["UI  info "," turn_off "," growl_library "," growl_library= "," try_growl "," try_ruby_gntp "," try_growl_notify "]}," Guard Notifier image_level":{"type":"method","name":"image_level","children":[],"call":[]}," Guard Notifier notify_windows":{"type":"method","name":"notify_windows","children":[],"call":["Notifu  show ","notification merge "," image_level "," require_rbnotifu "]}," Guard Notifier notify_linux":{"type":"method","name":"notify_linux","children":[],"call":["Libnotify  show ","notification merge "," image_path "," require_libnotify "]}," Guard Notifier notify_mac":{"type":"method","name":"notify_mac","children":[],"call":["Growl  notify ","(pair\n  (sym :name)\n  (const nil :APPLICATION_NAME)) merge "," gntp notify ","(pair\n  (sym :name)\n  (if\n    (send\n      (array\n        (sym :pending)\n        (sym :success)\n        (sym :failed)) :include?\n      (lvar :image))\n    (send\n      (lvar :image) :to_s)\n    (str \"notify\"))) merge ","image to_s ","(sym :pending) include? "," gntp ","notification delete ","GrowlNotify  send_notification ","(pair\n  (sym :description)\n  (lvar :message)) merge "," growl_library ","(pair\n  (sym :title)\n  (lvar :title)) merge "," image_path "," require_growl ","(pair\n  (sym :title)\n  (lvar :title)) merge  delete ","GrowlNotify  send_(pair\n  (sym :title)\n  (lvar :title)) merge  "]}," Guard Listener relativate_paths?":{"type":"method","name":"relativate_paths?","children":[],"call":["@relativate_paths ! ! ","@relativate_paths ! "]}," Guard Listener relativate_paths":{"type":"method","name":"relativate_paths","children":[],"call":["path gsub "," directory ","paths map "," relativate_paths? "]}," Guard Listener worker":{"type":"method","name":"worker","children":[],"call":[" raise "]}," Guard Interactor run_all":{"type":"method","name":"run_all","children":[],"call":[" Guard  supervised_task "," Guard  guards each "," Guard  guards "," Guard  run "]}," Guard Dsl revaluate_guardfile":{"type":"method","name":"revaluate_guardfile","children":[],"call":["Notifier  notify ","UI  info ","Dsl  evaluate_guardfile "," Guard  guards clear "," Guard  guards "]}," Guard Listener unlock":{"type":"method","name":"unlock","children":[],"call":[]}," Guard Listener lock":{"type":"method","name":"lock","children":[],"call":[]}," Guard Interactor unlock":{"type":"method","name":"unlock","children":[],"call":["@thread raise ","@thread == ","Thread  current ","@thread ! "]}," Guard Interactor lock":{"type":"method","name":"lock","children":[],"call":["@thread raise ","@thread == ","Thread  current ","@thread ! "]}," Guard Interactor initialize":{"type":"method","name":"initialize","children":[],"call":["Readline  completion_append_character= ","Readline  completion_proc= "," auto_complete "," proc "," Guard UI  info "," configure_prompt "," create_group_commands "," create_guard_commands "," create_command_aliases "," create_run_all_command "," load_guard_rc ","Pry  config history file= ","Pry  config history ","Pry  config ","ENV  [] == ","ENV  [] ","Pry  config should_load_local_rc= ","Pry  config should_load_rc= "," class options [] "," class options "," class "," add_hooks "," replace_reset_command ","File  expand_path "," _configure_prompt "," _create_group_commands "," _create_guard_commands "," _create_command_aliases "," _create_run_all_command "," _replace_reset_command "," _add_hooks ","job_klass new "," interactive? "," require "," class enabled? ","no_interaction ! "]}," Guard run_guard_task":{"type":"method","name":"run_guard_task","children":[],"call":[" run_supervised_task "," run_on_change_task ","task == "," guards each "," guards ","group name "," catch ","group options [] == ","group options [] ","group options "," groups each "," groups "]}," Guard Interactor stop_if_not_current":{"type":"method","name":"stop_if_not_current","children":[],"call":["@thread kill ","Thread  current == ","Thread  current "]}," Guard Notifier try_growl":{"type":"method","name":"try_growl","children":[],"call":[" require "]}," Guard Notifier try_ruby_gntp":{"type":"method","name":"try_ruby_gntp","children":[],"call":[" gntp register "," gntp "," gntp= ","GNTP  new "," require "]}," Guard Notifier try_growl_notify":{"type":"method","name":"try_growl_notify","children":[],"call":["UI  info "," turn_off ","c application_name= ","c notifications first ","c notifications ","c notifications= ","c default_notifications= ","GrowlNotify  config ","GrowlNotify  application_name != ","GrowlNotify  application_name "," require "]}," Guard Interactor prompt":{"type":"method","name":"prompt","children":[],"call":[" Guard  listener paused? "," Guard  listener "]}," Guard Interactor completion_list":{"type":"method","name":"completion_list","children":[],"call":["COMPLETION_ACTIONS  + + - ","COMPLETION_ACTIONS  + + ","COMPLETION_ACTIONS  + ","guard class to_s downcase sub ","guard class to_s downcase ","guard class to_s ","guard class "," Guard  guards map "," Guard  guards ","group name to_s ","group name "," Guard  groups map "," Guard  groups "]}," Guard Interactor auto_complete":{"type":"method","name":"auto_complete","children":[],"call":[" completion_list grep ","Regexp  escape "," completion_list "]}," Guard Watcher match":{"type":"method","name":"match","children":[],"call":["f == ","m []= ","m to_a ","f match ","@pattern is_a? ","f [] ","file start_with? ","@pattern match ","file == ","string_or_pathname to_s ","Pattern MatchResult  new ","m nil? "," pattern match "," pattern ","f []  == ","m to_a  []= ","f match  []= ","@pattern match  []= "," pattern match  []= ","m to_a  to_a ","f match  to_a ","@pattern match  to_a "," pattern match  to_a ","f m to_a atch ","f f match atch ","f @pattern match atch ","f  pattern match atch ","f []  match ","f []  [] ","f [] ile start_with? ","string_or_pathname to_s  start_with? ","@pattern m to_a atch ","@pattern f match atch ","@pattern @pattern match atch ","@pattern  pattern match atch ","f [] ile == ","string_or_pathname to_s  == ","string_or_pathnam to_a e to_s ","string_or_pathnaf match e to_s ","string_or_pathna@pattern match e to_s ","string_or_pathna pattern match e to_s ","m to_a  nil? ","f match  nil? ","@pattern match  nil? "," pattern match  nil? "," pattern m to_a atch "," pattern f match atch "," pattern @pattern match atch "," pattern  pattern match atch "]}," Guard UI warning":{"type":"method","name":"warning","children":[],"call":["STDERR  puts "," color + "," color "," reset_line ","options [] ","ENV  [] == ","ENV  [] "," logger warn "," logger "," filter "," _filtered_logger_message "]}," Guard CLI verify_bundler_presence":{"type":"method","name":"verify_bundler_presence","children":[],"call":[" Guard UI  warning ","ENV  [] "," Guard UI  info ","ENV  [] ! ","File  exists? "]}," xcb":{"type":"method","name":"xcb","children":[],"call":[" raise ","$? success? ","STDERR  puts ","Dir  chdir ","(const nil :XCODEBUILD) join "]}," Guard initialize_all_templates":{"type":"method","name":"initialize_all_templates","children":[],"call":[" initialize_template "," guard_gem_names each "," guard_gem_names "]}," Guard create_guardfile":{"type":"method","name":"create_guardfile","children":[],"call":[" abort "," Guard UI  error ","Dir  pwd ","options [] ","FileUtils  cp "," Guard UI  info ","File  exist? ! ","File  exist? "]}," Guard Notifier NotifySend to_command_string":{"type":"method","name":"to_command_string","children":[],"call":["cmd + ","supported include? ","options reduce "]}," Guard Notifier NotifySend notifysend_urgency":{"type":"method","name":"notifysend_urgency","children":[],"call":["(pair\n  (str \"failed\")\n  (str \"critical\")) fetch ","(pair\n  (str \"failed\")\n  (str \"normal\")) fetch "]}," Guard Notifier NotifySend notify":{"type":"method","name":"notify","children":[],"call":[" system "," to_command_string ","DEFAULTS  merge merge "," notifysend_urgency ","DEFAULTS  merge ","options [] "," to_arguments "," _to_arguments "," _notifysend_urgency ","opts delete "," title "," normalize_standard_options! ","Sheller  run ","opts [] ","DEFAULTS  merge merge  [] ","DEFAULTS  merge merge  delete "," normalize_standard_DEFAULTS  merge merge ! "]}," Guard Notifier NotifySend available?":{"type":"method","name":"available?","children":[],"call":[" Guard UI  error ","(str \"which notify-send\") empty? ! ","(str \"which notify-send\") empty? ","RbConfig CONFIG  [] =~ ","RbConfig CONFIG  [] "]}," Guard Dsl after_reevaluate_guardfile":{"type":"method","name":"after_reevaluate_guardfile","children":[],"call":[" Guard  run_supervised_task "," Guard  run_on_guards "," Guard Notifier  notify "," Guard UI  info "," Guard  guards empty? "," Guard  guards "," Guard Notifier  turn_on "," Guard Notifier  enabled? "," Guard  runner run "," Guard  runner "]}," Guard Dsl before_reevaluate_guardfile":{"type":"method","name":"before_reevaluate_guardfile","children":[],"call":["@@options delete "," Guard Notifier  clear_notifications "," Guard  reset_groups "," Guard  guards clear "," Guard  guards "," Guard  run_supervised_task "," Guard  run_on_guards "," Guard  setup_groups "," Guard  runner run "," Guard  runner "," options delete "," options "]}," FSEvent open_pipe":{"type":"method","name":"open_pipe","children":[],"call":["IO  popen ","(send\n  (send\n    (self) :class) :watcher_path) + + ","(send\n  (send\n    (self) :class) :watcher_path) + "," class watcher_path "," class "," shellescaped_paths "," options_string "]}," FSEvent initialize":{"type":"method","name":"initialize","children":[],"call":[" watch ","args nil? "]}," Guard deprecated_options_warning":{"type":"method","name":"deprecated_options_warning","children":[],"call":[" Guard UI  deprecation "," options [] "," options "]}," Guard within_preserved_state":{"type":"method","name":"within_preserved_state","children":[],"call":[" interactor start "," interactor "," interactor stop "," lock synchronize "," lock "]}," Guard setup_interactor":{"type":"method","name":"setup_interactor","children":[],"call":["@interactor start ","Interactor  fabricate "," options [] "," options "," Guard Interactor  fabricate "," Guard Interactor  new "," Guard Interactor  enabled ! "," Guard Interactor  enabled ","Interactor  fabricate  start "," Guard Interactor  fabricate  start "," Guard Interactor  new  start "]}," Guard setup_notifier":{"type":"method","name":"setup_notifier","children":[],"call":["Notifier  turn_off ","Notifier  turn_on ","ENV  [] != ","ENV  [] "," options [] "," options "," Guard Notifier  turn_off "," Guard Notifier  turn_on "]}," Guard setup_listener":{"type":"method","name":"setup_listener","children":[],"call":["Listen  to change ","Listen  to ","listener_options []= "," options [] "," options ","option to_sym "," options key? ","(str \"latency\") each "," runner run_on_changes "," runner ","Dsl  reevaluate_guardfile ","Watcher  match_guardfile? "," lambda "," Guard  within_preserved_state "," Guard Dsl  reevaluate_guardfile "," Guard Watcher  match_guardfile? ","@watchdirs + ","path sub ","path start_with? ","paths map! ","(lvar :modified) each ","@watchdirs each "]}," Guard setup_signal_traps":{"type":"method","name":"setup_signal_traps","children":[],"call":[" Guard  pause ","@listener paused? ","Signal  trap ","Signal  list keys include? ","Signal  list keys ","Signal  list "," Guard  stop "," interactor thread raise "," interactor thread "," interactor "," listener paused? "," listener "]}," Guard setup_guards":{"type":"method","name":"setup_guards","children":[],"call":[]}," Guard setup_groups":{"type":"method","name":"setup_groups","children":[],"call":["Group  new "]}," Guard UI action_with_scopes":{"type":"method","name":"action_with_scopes","children":[],"call":[" info ","scopes [] ","groups join ","groups empty? ","plugins join ","plugins empty? "," Guard  scope [] "," Guard  scope ","first_non_blank_scope map join ","first_non_blank_scope map ","first_non_blank_scope nil? "," _first_non_blank_scope ","groups map join ","groups map ","plugins map join ","plugins map ","titles join ","Guard  state scope titles ","Guard  state scope ","Guard  state "," _first_non_blank_scope  map join "," _first_non_blank_scope  map "," _first_non_blank_scope  nil? "," _ _first_non_blank_scope  ","Guard  state scope titles  join ","Guard  state scope Guard  state scope titles  "]}," Guard Runner clearable?":{"type":"method","name":"clearable?","children":[],"call":["removed_paths empty? ! ","removed_paths empty? ","guard respond_to? ","REMOVAL_TASKS  any? ","added_paths empty? ! ","added_paths empty? ","ADDITION_TASKS  any? ","modified_paths empty? ! ","modified_paths empty? ","MODIFICATION_TASKS  any? "]}," Guard Runner scoped_guards":{"type":"method","name":"scoped_guards","children":[],"call":[" Guard  guards each "," Guard  guards ","group name "," catch ","groups each "," Guard  groups ","scopes [] "," current_groups_scope each "," current_groups_scope ","guards each "," current_plugins_scope "," Guard UI  info ","current_plugin class name ","current_plugin class ","block_return nil? "," Guard  scopes [] s each "," Guard   current_plugins_scope  each "," Guard  scopes [] s "," Guard   current_plugins_scope  "," Guard  groups  each "," Guard   Guard  groups  "," current_ Guard  groups _scope each "," current_ Guard  groups _scope ","scopes [] s each "," current_plugins_scope  each "]}," Guard Runner run_first_task_found":{"type":"method","name":"run_first_task_found","children":[],"call":["UI  debug ","task_param inspect ","task to_s ","guard class name ","guard class "," run_supervised_task ","guard respond_to? ","tasks each ","enum next ","tasks to_enum "," Guard UI  debug ","enum next _param inspect ","enum next  to_s "," run_supervised_enum next  ","enum next s each ","tasks to_enum  next ","enum next s to_enum ","tasks to_tasks to_enum  "]}," Guard Runner stopping_symbol_for":{"type":"method","name":"stopping_symbol_for","children":[],"call":[]}," Guard Runner run_supervised_task":{"type":"method","name":"run_supervised_task","children":[],"call":["UI  info ","guard class name ","guard class "," Guard  guards delete "," Guard  guards ","UI  error ","(begin\n  (send\n    (send\n      (lvar :guard) :class) :name)) + ","ex backtrace join ","ex backtrace ","ex message ","ex class ","task to_s ","guard hook ","guard send "," catch ","Runner  stopping_symbol_for "," Guard  within_preserved_state "," raise "," Guard UI  info "," Guard UI  error "," Guard  plugins delete "," Guard  plugins "," class stopping_symbol_for "," class "," throw ","$! backtrace join ","$! backtrace ","$! message ","$! class "]}," Guard Runner run_on_changes":{"type":"method","name":"run_on_changes","children":[],"call":[" run_first_task_found ","removed_paths empty? ","added_paths empty? ","modified_paths empty? ","UI  clear "," clearable? ","Watcher  match_files "," scoped_guards ","removed_paths empty? ! ","added_paths empty? ! ","modified_paths empty? ! "," Guard UI  clear "," Guard Watcher  match_files "," Guard UI  clearable "," _run_first_task_found "," _clearable? "," _scoped_plugins "," _supervise ","plugin respond_to? ","tasks detect ","match_result empty? ","unmatched_paths empty? ","types each "," _run_group_plugins ","Guard  state scope grouped_plugins each ","Guard  state scope grouped_plugins ","Guard  state scope ","Guard  state ","UI  clearable "," Guard  evaluator reevaluate_guardfile "," Guard  evaluator "," Guard Watcher  match_guardfile? "," run_supervised_task ","guard respond_to? ","paths empty? ","Watcher  match_files  empty? "," Guard Watcher  match_files  empty? ","removed_ Guard Watcher  match_files  empty? ","added_ Guard Watcher  match_files  empty? ","modified_ Guard Watcher  match_files  empty? ","Watcher  match_files  empty? ! "," Guard Watcher  match_files  empty? ! ","removed_ Guard Watcher  match_files  empty? ! ","added_ Guard Watcher  match_files  empty? ! ","modified_ Guard Watcher  match_files  empty? ! ","unmatched_ Guard Watcher  match_files  empty? "]}," Guard Runner run":{"type":"method","name":"run","children":[],"call":[" run_supervised_task "," scoped_guards ","Lumberjack  unit_of_work ","guard respond_to? "," _scoped_plugins "," _supervise ","plugin respond_to? "," _run_group_plugins ","items each ","Guard  state scope grouped_plugins ","Guard  state scope ","Guard  state ","Guard  state scope grouped_plugins  each "]}," Guard Runner deprecation_warning":{"type":"method","name":"deprecation_warning","children":[],"call":["UI  deprecation ","RUN_ON_DELETION_DEPRECATION  % ","guard class name ","guard class ","guard respond_to? ","RUN_ON_CHANGE_DEPRECATION  % "," Guard  guards each "," Guard  guards "," Guard UI  deprecation "]}," Guard Guardfile initialize_all_templates":{"type":"method","name":"initialize_all_templates","children":[],"call":[" initialize_template "," Guard  guard_gem_names each "," Guard  guard_gem_names "]}," Guard Guardfile initialize_template":{"type":"method","name":"initialize_template","children":[],"call":["UI  error ","const_name capitalize ","guard_name downcase ","guard_name downcase gsub "," Guard UI  info ","f puts ","File  open ","File  read ","File  join ","File  exist? ","guard_class init "," Guard  get_guard_class "," duplicate_definitions? ","File  exists? ","guard_name downcase gsub  capitalize "," Guard  get_guard_class  init "," Guard  get_ Guard  get_guard_class  "]}," Guard Guardfile create_guardfile":{"type":"method","name":"create_guardfile","children":[],"call":[" abort "," Guard UI  error ","Dir  pwd ","options [] ","FileUtils  cp "," Guard UI  info ","File  exist? ! ","File  exist? "]}," Guard Guard to_s":{"type":"method","name":"to_s","children":[],"call":[" class to_s "," class "," class to_s downcase sub capitalize "," class to_s downcase sub "," class to_s downcase "]}," Guard Group to_s":{"type":"method","name":"to_s","children":[],"call":["@name to_s capitalize ","@name to_s "," options "," name "," class "]}," Guard Dsl filter":{"type":"method","name":"filter","children":[],"call":[" Guard  listener= "," Guard  listener filter "," Guard  listener "]}," Guard Dsl ignore":{"type":"method","name":"ignore","children":[],"call":[" Guard  listener= "," Guard  listener ignore "," Guard  listener ","Guard  listener ignore ","Guard  listener ","Guard  state session guardfile_ignore= ","Guard  state session ","Guard  state "]}," Guard Guard run_on_removals":{"type":"method","name":"run_on_removals","children":[],"call":[" run_on_changes "]}," Guard Guard run_on_modifications":{"type":"method","name":"run_on_modifications","children":[],"call":[" run_on_changes "]}," Guard Guard run_on_addtions":{"type":"method","name":"run_on_addtions","children":[],"call":[" run_on_changes "]}," Guard Guard run_on_changes":{"type":"method","name":"run_on_changes","children":[],"call":[" raise "]}," Guard ReadlineInteractor available?":{"type":"method","name":"available?","children":[],"call":[]}," Guard TerminalHelper restore_terminal_settings":{"type":"method","name":"restore_terminal_settings","children":[],"call":[" system "]}," Guard TerminalHelper store_terminal_settings":{"type":"method","name":"store_terminal_settings","children":[],"call":["(str \"stty -g 2>/dev/null\") chomp "]}," Guard TerminalHelper stty_exists?":{"type":"method","name":"stty_exists?","children":[],"call":[" system "]}," Guard TerminalHelper stop":{"type":"method","name":"stop","children":[],"call":[" restore_terminal_settings "," stty_exists? "]}," Guard TerminalHelper start":{"type":"method","name":"start","children":[],"call":[" store_terminal_settings "," stty_exists? "]}," Guard CompletionHelper completion_list":{"type":"method","name":"completion_list","children":[],"call":["COMPLETION_ACTIONS  + + - ","COMPLETION_ACTIONS  + + ","COMPLETION_ACTIONS  + ","guard class to_s downcase sub ","guard class to_s downcase ","guard class to_s ","guard class "," Guard  guards map "," Guard  guards ","group name to_s ","group name "," Guard  groups map "," Guard  groups "]}," Guard CompletionHelper auto_complete":{"type":"method","name":"auto_complete","children":[],"call":[" completion_list grep ","Regexp  escape "," completion_list "]}," Guard CoollineInteractor prompt":{"type":"method","name":"prompt","children":[],"call":[" Guard  listener paused? "," Guard  listener "]}," Guard CoollineInteractor read_line":{"type":"method","name":"read_line","children":[],"call":[" process_input ","coolline readline "," prompt ","cool completion_proc= "," auto_complete ","cool completed_word "," proc ","cool transform_proc= ","cool line ","Coolline  new ","coolcoolline readline  readcoolline readline  ","cool completed_cool completed_word  ","cool coolline readline  ","Coolcoolline readline   new "]}," Guard CoollineInteractor available?":{"type":"method","name":"available?","children":[],"call":[]}," Guard Interactor extract_action":{"type":"method","name":"extract_action","children":[],"call":["command first ","list include? ","ACTIONS  detect ","entries delete_if "]}," Guard Interactor extract_scopes":{"type":"method","name":"extract_scopes","children":[],"call":["scopes [] "," Guard  groups "," Guard  guards ","entries delete_if "," Guard   Guard  groups s "," Guard   Guard  guards s "]}," Guard Interactor available?":{"type":"method","name":"available?","children":[],"call":[]}," Guard Guard run_on_additions":{"type":"method","name":"run_on_additions","children":[],"call":[]}," Guard Notifier TerminalNotifier notify":{"type":"method","name":"notify","children":[],"call":[" TerminalNotifier  notify ","options delete ","options [] ","options []= ","(or\n  (send\n    (lvar :options) :[]\n    (sym :app_name))\n  (str \"Guard\")) join ","type downcase capitalize ","type downcase "," require "," TerminalNotifier Guard  execute ","options merge! ","type to_sym ","opts merge ","opts []= ","(block\n  (send\n    (lvar :opts) :delete\n    (sym :app_name))\n  (args)\n  (str \"Guard\")) join ","opts [] downcase capitalize ","opts [] downcase ","opts [] ","opts delete "," normalize_standard_options! "," class require_gem_safely "," class "," options [] "," options "]}," Guard Notifier TerminalNotifier available?":{"type":"method","name":"available?","children":[],"call":[" Guard UI  error "," TerminalNotifier  available? "," require "," TerminalNotifier Guard  available? "]}," Guard Notifier Emacs emacs_color":{"type":"method","name":"emacs_color","children":[],"call":["DEFAULTS  [] ","options fetch ","type to_sym ","options [] "]}," Guard Notifier Emacs notify":{"type":"method","name":"notify","children":[],"call":[" system "," emacs_color ","DEFAULTS  [] ","options [] ","DEFAULTS  merge "," run_cmd ","(str \"          (set-face-attribute 'mode-line nil\\n\") gsub strip ","(str \"          (set-face-attribute 'mode-line nil\\n\") gsub "," _run_cmd ","opts [] "," normalize_standard_options! "," emacs_ emacs_color  ","DEFAULTS  merge  [] "," normalize_standard_DEFAULTS  merge ! "]}," Guard Notifier Emacs available?":{"type":"method","name":"available?","children":[],"call":["result chomp! == ","result chomp! ","DEFAULTS  [] ","(str \"N/A\") include? ","options fetch "]}," Guard Notifier get_notifier_module":{"type":"method","name":"get_notifier_module","children":[],"call":["notifier last ","n first == ","n first ","NOTIFIERS  detect ","NOTIFIERS  flatten detect ","NOTIFIERS  flatten "]}," Guard UI clearable":{"type":"method","name":"clearable","children":[],"call":[]}," Guard Notifier Tmux tmux_color":{"type":"method","name":"tmux_color","children":[],"call":["DEFAULTS  [] ","options [] ","opts fetch ","(sym :success) include? ","type to_sym ","Defaults  option ","Defaults  [] ","opts [] ","type to_sym  to_sym "]}," Guard Notifier Tmux notify":{"type":"method","name":"notify","children":[],"call":[" system ","DEFAULTS  [] "," tmux_color "," display_message ","options [] "," run_client ","opts delete ","opts delete to_s ","opts fetch "," _run_client ","opts [] "," normalize_standard_options! ","color_locations each "," Array "," display_title ","Client  set "," _all? ","options each ","Defaults  option ","locations each ","options delete ","options delete to_s "," _quiet_option "," class _quiet_option "," class "," tmux_ tmux_color  "," Defaults  option  "," Array  [] ","opts fetch  [] "," normalize_standard_ Array ! "," normalize_standard_opts fetch ! "," tmux_color _locations each ","opts fetch s each "," Array  each ","color_ Array  each "," display_opts delete  "," display_options delete  ","opts fetch  each "," Array  delete ","opts fetch  delete "," Array  delete to_s ","opts fetch  delete to_s "]}," Guard Notifier Tmux available?":{"type":"method","name":"available?","children":[],"call":[" Guard UI  error ","ENV  [] nil? ","ENV  [] ","DEFAULTS  [] ","options fetch "]}," Guard UI calling_plugin_name":{"type":"method","name":"calling_plugin_name","children":[],"call":["(send\n  (send\n    (send\n      (lvar :name) :[]\n      (int 1)) :split\n    (str \"/\")) :map) join ","(send\n  (send\n    (lvar :part) :split\n    (regexp\n      (str \"[^a-z0-9]\")\n      (regopt :i))) :map) join ","word capitalize ","part split map ","part split ","name [] split map ","name [] split ","name [] ","(str \"(guard/[a-z_]*)(/[a-z_]*)?.rb:\") match "," caller [] "," caller ","part split map join ","(str \"(guard\\\\/[a-z_]*)(/[a-z_]*)?.rb:\") match ","(send\n  (send\n    (send\n      (lvar :(str \"(guard/[a-z_]*)(/[a-z_]*)?.rb:\") match ) :[]\n      (int 1)) :split\n    (str \"/\")) :map) join ","(send\n  (send\n    (send\n      (lvar :(str \"(guard\\/[a-z_]*)(/[a-z_]*)?.rb:\") match ) :[]\n      (int 1)) :split\n    (str \"/\")) :map) join ","(str \"(guard/[a-z_]*)(/[a-z_]*)?.rb:\") match  [] split map ","(str \"(guard\\/[a-z_]*)(/[a-z_]*)?.rb:\") match  [] split map ","(str \"(guard/[a-z_]*)(/[a-z_]*)?.rb:\") match  [] split ","(str \"(guard\\/[a-z_]*)(/[a-z_]*)?.rb:\") match  [] split ","(str \"(guard/[a-z_]*)(/[a-z_]*)?.rb:\") match  [] ","(str \"(guard\\/[a-z_]*)(/[a-z_]*)?.rb:\") match  [] "]}," Guard UI filter":{"type":"method","name":"filter","children":[],"call":["except match ! ","except match ","only match ","except ! ","only ! "," calling_plugin_name "," options [] "," options "," options except "," options only "," options []  match ! "," options except  match ! "," options []  match "," options except  match "," options only  match "," options []  ! "," options except  ! "," options only  ! "," options  options []  "," options  options except  "," options  options only  "]}," Guard UI options=":{"type":"method","name":"options=","children":[],"call":[" Guard Options  new ","Options  new ","Config  new "]}," Guard UI options":{"type":"method","name":"options","children":[],"call":[" Guard Options  new ","Options  new ","Config  new "]}," Guard UI logger":{"type":"method","name":"logger","children":[],"call":["Lumberjack Logger  new "," options ","options delete "," options dup ","opts delete "," options marshal_dump "," options fetch "," require "," options logger_config "," options device ","  options dup  "," options dup  delete ","  options dup  dup "," options marshal_dump  delete ","  options dup  marshal_dump ","  options dup  fetch ","  options dup  logger_config ","  options dup  device "]}," Guard Notifier Tmux display_message":{"type":"method","name":"display_message","children":[],"call":[" system ","DEFAULTS  [] ","display_time * ","message_format % ","message split join ","message split "," tmux_color ","options [] ","(begin\n  (lvar :type)) to_sym "," run_client "," _run_client ","opts fetch ","Client  display "," _all? ","Client  set ","Defaults  option "," _quiet_option "," class _quiet_option "," class ","opts fetch  * ","Defaults  option  * ","opts fetch  % ","message_(begin\n  (lvar :type)) to_sym  % "," tmux_ tmux_color  "," tmux_(begin\n  (lvar :type)) to_sym  "]}," Guard Notifier TerminalTitle set_terminal_title":{"type":"method","name":"set_terminal_title","children":[],"call":[" puts "]}," Guard Notifier TerminalTitle notify":{"type":"method","name":"notify","children":[],"call":[" set_terminal_title ","message sub! ","message sub sub ","message sub "," puts ","opts [] "," normalize_standard_options! ","STDOUT  puts "]}," Guard Notifier TerminalTitle available?":{"type":"method","name":"available?","children":[],"call":[]}," Guard Notifier toggle":{"type":"method","name":"toggle","children":[],"call":[" turn_on "," turn_off "," Guard UI  info ","ENV  [] == ","ENV  [] "," enabled? "," active? "," Guard UI  error "]}," Guard Interactor convert_scope":{"type":"method","name":"convert_scope","children":[],"call":["unknown << ","scopes [] << ","scopes [] ","session groups all first ","session groups all ","session groups ","session plugins all first ","session plugins all ","session plugins ","entries each ","Guard  state session ","Guard  state "," Guard  group "," Guard  plugin ","session session groups all first s all first ","session  Guard  group s all first ","Guard  state session  groups all first ","session session groups all first s all ","session  Guard  group s all ","Guard  state session  groups all ","session session groups all first s ","session  Guard  group s ","Guard  state session  groups ","session session plugins all first s all first ","session  Guard  plugin s all first ","Guard  state session  plugins all first ","session session plugins all first s all ","session  Guard  plugin s all ","Guard  state session  plugins all ","session session plugins all first s ","session  Guard  plugin s ","Guard  state session  plugins ","Guard  state Guard  state session  "," Guard  session groups all first  "," Guard   Guard  group  "," Guard  session plugins all first  "," Guard   Guard  plugin  "]}," Guard Interactor restore_terminal_settings":{"type":"method","name":"restore_terminal_settings","children":[],"call":[" system "]}," Guard Interactor store_terminal_settings":{"type":"method","name":"store_terminal_settings","children":[],"call":["(str \"stty -g 2>/dev/null\") chomp ","(str \"stty -g 2>\") chomp "]}," Guard Interactor stty_exists?":{"type":"method","name":"stty_exists?","children":[],"call":[" system ","@stty_exists nil? "]}," Guard Interactor configure_prompt":{"type":"method","name":"configure_prompt","children":[],"call":["Pry  config prompt= ","nest_level zero? ","Pry  view_clip "," Guard  listener paused? "," Guard  listener ","pry input_array size ","pry input_array "," proc ","Pry  config "," Guard  scope [] join "," Guard  scope [] "," Guard  scope "," Guard  scope [] empty? ! "," Guard  scope [] empty? ","Pry  view_Pry  view_clip  "]}," Guard Interactor create_group_commands":{"type":"method","name":"create_group_commands","children":[{"type":"method","name":"process","children":[],"asgn":[],"call":["Pry  run_command "," match "]}],"call":["Pry  run_command "," match "," group ","Pry  commands create_command ","Pry  commands ","name == ","group name to_s ","group name "," Guard  groups each "," Guard  groups ","group name to_s  == ","group group name to_s  to_s ","group group name to_s  "]}," Guard Interactor create_guard_commands":{"type":"method","name":"create_guard_commands","children":[{"type":"method","name":"process","children":[],"asgn":[],"call":["Pry  run_command "," match "]}],"call":["Pry  run_command "," match "," group ","Pry  commands create_command ","Pry  commands ","guard class to_s downcase sub ","guard class to_s downcase ","guard class to_s ","guard class "," Guard  guards each "," Guard  guards "]}," Guard Interactor create_command_aliases":{"type":"method","name":"create_command_aliases","children":[],"call":["Pry  commands alias_command ","command [] chr ","command [] ","Pry  commands ","(str \"help\") each ","command to_s ","SHORTCUTS  each "]}," Guard Interactor create_run_all_command":{"type":"method","name":"create_run_all_command","children":[],"call":["Pry  run_command ","Pry  commands block_command ","Pry  commands "]}," Guard Interactor load_guard_rc":{"type":"method","name":"load_guard_rc","children":[],"call":[" load ","File  exist? ","File  expand_path ","Pry  config hooks add_hook ","Pry  config hooks ","Pry  config "," class options [] "," class options "," class "]}," Guard Dsl logger":{"type":"method","name":"logger","children":[],"call":[" Guard UI  options= "," Guard UI  options merge "," Guard UI  options ","options []= ","Regexp  new ","(send\n  (send\n    (send\n      (array) :push\n      (send\n        (lvar :options) :[]\n        (lvar :name))) :flatten) :map) join ","Regexp  escape ","plugin to_s "," push flatten map "," push flatten "," push ","options [] ","(sym :only) each ","options delete "," Guard UI  warning ","(sym :debug) include? ","options [] to_sym "," Guard UI  options marshal_dump merge "," Guard UI  options marshal_dump "," Guard UI  options merge! ","UI  options merge! ","UI  options ","list join ","UI  warning ","WARN_INVALID_LOG_LEVEL  % "," format ","UI  options= ","UI  options merge ","(send\n  (send\n    (send\n      (array) :push\n      (send\n        (lvar :options) :[]\n        (lvar :name))) :flatten) :map) join  join "]}," Guard Interactor process":{"type":"method","name":"process","children":[],"call":[" Guard DslDescriber  show "," Guard  options "," output puts ","rest join "," output "," Guard  reload ","rest length == ","rest length "," Guard Interactor  convert_scope "," Guard  pause "," Guard Notifier  toggle "," Guard  runner run_on_changes "," Guard  runner "," Guard  within_preserved_state ","rest length != "," Guard  run_all "," Guard  scope= ","scope [] empty? ","scope [] ","rest empty? ","files empty? "," Guard DslDescriber  new show "," Guard DslDescriber  new "]}," Guard quit?":{"type":"method","name":"quit?","children":[],"call":["STDIN  read_nonblock "]}," Guard convert_scopes":{"type":"method","name":"convert_scopes","children":[],"call":["scopes delete ","scopes []= ","scopes [] "]}," Guard Runner current_groups_scope":{"type":"method","name":"current_groups_scope","children":[],"call":[" Guard  groups "," Guard  scope [] "," Guard  scope "," Guard  scope [] empty? ! "," Guard  scope [] empty? ","scopes [] ","scopes [] empty? ! ","scopes [] empty? "]}," Guard Runner current_plugins_scope":{"type":"method","name":"current_plugins_scope","children":[],"call":[" Guard  scope [] "," Guard  scope "," Guard  scope [] empty? ! "," Guard  scope [] empty? ","scopes [] ","scopes [] empty? ! ","scopes [] empty? "]}," Guard Notifier Tmux reset_options_store":{"type":"method","name":"reset_options_store","children":[],"call":[]}," Guard Notifier Tmux turn_off":{"type":"method","name":"turn_off","children":[],"call":[" system ","DEFAULTS  [] "," reset_options_store ","@options_store each "," run_client "," _run_client "," _reset_options_store ","options each "]}," Guard Notifier Tmux turn_on":{"type":"method","name":"turn_on","children":[],"call":[" system ","DEFAULTS  [] ","@options_store []= ","line chomp partition ","line chomp ","(begin\n  (send\n    (const nil :DEFAULTS) :[]\n    (sym :client))) each_line "," reset_options_store "," run_client "," _run_client "," options_store []= "," options_store "," _reset_options_store ","@options_store [] []= ","@options_store [] "," options_store [] "," _clients each "," _clients "]}," Guard Interactor enabled=":{"type":"method","name":"enabled=","children":[],"call":[]}," Guard Interactor enabled":{"type":"method","name":"enabled","children":[],"call":["@enabled nil? "]}," Guard Interactor options=":{"type":"method","name":"options=","children":[],"call":[]}," Guard Interactor options":{"type":"method","name":"options","children":[],"call":[]}," Guard Guardfile duplicate_definitions?":{"type":"method","name":"duplicate_definitions?","children":[],"call":[" Guard UI  info ","matches count to_s ","matches count ","matches count > ","guard_file to_s scan ","guard_file to_s ","guard_file to_s scan  count to_s ","guard_file to_s scan  count ","guard_file to_s scan  count > "]}," Guard Guard template":{"type":"method","name":"template","children":[],"call":[]}," Guard Dsl scope":{"type":"method","name":"scope","children":[],"call":[" Guard  options []= ","scopes [] "," Guard  options "," Guard  options [] empty? "," Guard  options [] "," Guard  setup_scope ","scope []= "," Array ","scope [] ","Guard  state session guardfile_scope ","Guard  state session ","Guard  state "]}," Guard Dsl filter!":{"type":"method","name":"filter!","children":[],"call":[" Guard  listener= "," Guard  listener filter! "," Guard  listener "]}," Guard Dsl ignore!":{"type":"method","name":"ignore!","children":[],"call":[" Guard  listener= "," Guard  listener ignore! "," Guard  listener ","@ignore_regexps << ","Guard  listener ignore! ","Guard  listener ","Guard  state session guardfile_ignore_bang= ","Guard  state session ","Guard  state "]}," Guard Interactor add_hooks":{"type":"method","name":"add_hooks","children":[],"call":[" system ","Pry  config hooks add_hook ","Pry  config hooks ","Pry  config "," stty_exists? "," load ","File  exist? ","File  expand_path "," class options [] "," class options "," class ","(or\n  (send\n    (send\n      (send\n        (self) :class) :options) :[]\n    (sym :guard_rc))\n  (const nil :GUARD_RC)) tap ","Dir  pwd + ","Dir  pwd "]}," Guard Interactor replace_reset_command":{"type":"method","name":"replace_reset_command","children":[],"call":[" exec "," output puts "," output ","Pry  commands command ","Pry  commands "]}," Guard Notifier FileNotifier write":{"type":"method","name":"write","children":[],"call":["File  write "]}," Guard Notifier FileNotifier notify":{"type":"method","name":"notify","children":[],"call":[" Guard UI  error "," write ","format % ","options [] ","options fetch ","DEFAULTS  [] "," _write ","opts [] ","opts fetch "," normalize_standard_options! ","options fetch  % ","opts fetch  % "]}," Guard Notifier FileNotifier available?":{"type":"method","name":"available?","children":[],"call":["options has_key? "]}," Guard Notifier Emacs run_cmd":{"type":"method","name":"run_cmd","children":[],"call":["IO  popen readlines ","IO  popen "]}," Guard setup_scopes":{"type":"method","name":"setup_scopes","children":[],"call":[" scope []= "," Guard  guards "," options [] map "," options [] "," options "," scope "," Guard  groups "]}," Guard setup_from_guardfile":{"type":"method","name":"setup_from_guardfile","children":[],"call":[" Guard UI  error ","@guards empty? "," Guard Dsl  evaluate_guardfile "," options "]}," Guard setup_debug":{"type":"method","name":"setup_debug","children":[],"call":[" debug_command_execution "," Guard UI  options []= "," Guard UI  options ","Thread  abort_on_exception= "," options [] "," options "]}," Guard Notifier Tmux run_client":{"type":"method","name":"run_client","children":[],"call":[" system ","DEFAULTS  [] "]}," Guard Notifier Tmux system":{"type":"method","name":"system","children":[],"call":["ENV  [] == ","ENV  [] "]}," Guard Notifier NotifySend to_arguments":{"type":"method","name":"to_arguments","children":[],"call":["cmd << << ","value to_s ","cmd << ","supported include? ","options reduce "]}," Guard add_plugin":{"type":"method","name":"add_plugin","children":[],"call":["@plugins << "," Guard PluginUtil  new initialize_plugin "," Guard PluginUtil  new "]}," Guard group":{"type":"method","name":"group","children":[],"call":[" groups first "," groups "]}," Guard plugin":{"type":"method","name":"plugin","children":[],"call":[" plugins first "," plugins "]}," Guard plugins":{"type":"method","name":"plugins","children":[],"call":["plugin group name == ","v to_sym ","plugin group name ","plugin group ","plugin name == ","v to_s downcase gsub ","v to_s downcase ","v to_s ","plugin name ","filter all? ","@plugins find_all ","plugin name =~ ","filter to_s downcase gsub ","filter to_s downcase ","filter to_s ","filter nil? ","@plugins select "]}," Guard UI _filtered_logger_message":{"type":"method","name":"_filtered_logger_message","children":[],"call":[" logger send "," logger "," reset_line ","options [] "," _filter "," color "]}," Guard UI _filter":{"type":"method","name":"_filter","children":[],"call":["except match ! ","except match ","only match ","except ! ","only ! "," calling_plugin_name "," options except "," options "," options only "," options [] ","(or\n  (lvar :only)\n  (lvar :except)) ! "," _calling_plugin_name "," options except  match ! "," options []  match ! ","except (or\n  (lvar :only)\n  (lvar :except)) !  ! "," options except  match "," options []  match ","except (or\n  (lvar :only)\n  (lvar :except)) !  "," options only  match ","only (or\n  (lvar :only)\n  (lvar :except)) !  "," options except  ! "," options []  ! "," options only  ! "," options  options except  "," options  options []  "," options  options only  ","(or\n  (lvar :only)\n  (lvar : options except )) ! ","(or\n  (lvar :only)\n  (lvar : options [] )) ! ","(or\n  (lvar : options only )\n  (lvar :except)) ! ","(or\n  (lvar : options [] )\n  (lvar :except)) ! "]}," Guard UI _first_non_blank_scope":{"type":"method","name":"_first_non_blank_scope","children":[],"call":["s empty? ! ","s empty? ","s nil? ! ","s nil? "," Guard  scope [] "," Guard  scope ","scope [] ","(sym :plugins) each "]}," Guard Setuper _debug_command_execution":{"type":"method","name":"_debug_command_execution","children":[],"call":["Kernel  send "," Guard UI  debug ","args join "]}," Guard Setuper _setup_notifier":{"type":"method","name":"_setup_notifier","children":[],"call":[" Guard Notifier  turn_off "," Guard Notifier  turn_on ","ENV  [] != ","ENV  [] "," options notify "," options "," options [] "]}," Guard Setuper _setup_signal_traps":{"type":"method","name":"_setup_signal_traps","children":[],"call":[" Guard  stop "," interactor thread raise "," interactor thread "," interactor ","Signal  trap ","Signal  list keys include? ","Signal  list keys ","Signal  list "," Guard  pause "," listener paused? "," listener "," within_preserved_state ","Thread  new "," interactor handle_interrupt "," async_queue_add "]}," Guard Setuper _setup_listener":{"type":"method","name":"_setup_listener","children":[],"call":["Listen  to ","@watchdirs + ","listener_options []= "," options send "," options ","option to_sym ","(str \"latency\") each "," runner run_on_changes "," runner "," within_preserved_state "," evaluator reevaluate_guardfile "," evaluator "," Guard Watcher  match_guardfile? ","path sub ","path start_with? ","paths map! ","(lvar :modified) each ","@watchdirs each "," lambda ","Listen  to change "," options [] ","(sym :latency) each ","Listen  on "," _listener_callback "," watchdirs + "," watchdirs "]}," Guard Setuper _setup_debug":{"type":"method","name":"_setup_debug","children":[],"call":[" _debug_command_execution "," Guard UI  options level= "," Guard UI  options ","Thread  abort_on_exception= "," Guard UI  options []= "]}," Guard Setuper _reset_lazy_accessors":{"type":"method","name":"_reset_lazy_accessors","children":[],"call":[]}," Guard Setuper evaluate_guardfile":{"type":"method","name":"evaluate_guardfile","children":[],"call":[" Guard UI  error "," plugins empty? "," plugins "," evaluator evaluate_guardfile "," evaluator "," _non_builtin_plugins? "," _pluginless_guardfile? "]}," Guard Setuper setup_scope":{"type":"method","name":"setup_scope","children":[],"call":[" scope []= "," Guard  plugin ","new_scope [] map ","new_scope [] "," scope ","new_scope [] any? "," Guard  add_group "," Guard  scope []= "," Guard  send ","scope [] map ","scope [] "," Guard  scope ","scope [] any? ","(pair\n  (sym :groups)\n  (sym :add_group)) each "," _prepare_scope "," Guard  scope= ","  _prepare_scope  []= ","new_ _prepare_scope  [] map ","new_ _prepare_scope  [] ","  _prepare_scope  ","new_ _prepare_scope  [] any? "," Guard   _prepare_scope  []= "," _prepare_scope  [] map "," _prepare_scope  [] "," Guard   _prepare_scope  "," _prepare_scope  [] any? "," _prepare_ _prepare_scope  "," Guard   _prepare_scope = "]}," Guard Setuper reset_scope":{"type":"method","name":"reset_scope","children":[],"call":[" Guard  scope= "]}," Guard Setuper reset_plugins":{"type":"method","name":"reset_plugins","children":[],"call":[]}," Guard Setuper reset_groups":{"type":"method","name":"reset_groups","children":[],"call":["Group  new ","DEFAULT_GROUPS  map "]}," Guard Setuper clear_options":{"type":"method","name":"clear_options","children":[],"call":[]}," Guard Setuper interactor":{"type":"method","name":"interactor","children":[],"call":[" Guard Interactor  new "," Guard Interactor  enabled ! "," Guard Interactor  enabled "," options no_interactions "," options "," options [] "]}," Guard Setuper evaluator":{"type":"method","name":"evaluator","children":[],"call":[" Guard Guardfile Evaluator  new "]}," Guard Setuper options":{"type":"method","name":"options","children":[],"call":[" Guard Options  new "]}," Guard Setuper setup":{"type":"method","name":"setup","children":[],"call":[" _setup_notifier "," setup_scope "," options plugin "," options "," options group "," evaluate_guardfile "," reset_scope "," reset_plugins "," reset_groups "," _setup_signal_traps "," _setup_listener "," _setup_debug "," options debug "," Guard UI  clear ","File  expand_path "," Array map "," Array "," options watchdir "," Guard Runner  new ","Dir  pwd ","Mutex  new "," _reset_lazy_accessors "," _setup_interactor "," Guard Guardfile Evaluator  new "," options [] "," _load_guardfile "," _setup_watchdirs ","Queue  new "," reset_evaluator "," reset_options "," Guard UI  setup "," Guard UI  reset_and_clear "," Guard Internals Debugging  start "]}," Guard Runner _find_non_empty_groups_scope":{"type":"method","name":"_find_non_empty_groups_scope","children":[],"call":[" _find_non_empty_scope "," Guard  groups "]}," Guard Runner _find_non_empty_plugins_scope":{"type":"method","name":"_find_non_empty_plugins_scope","children":[],"call":[" _find_non_empty_scope "," fail ","scope nil? "]}," Guard Runner _find_non_empty_scope":{"type":"method","name":"_find_non_empty_scope","children":[],"call":[" Array empty? ! "," Array empty? "," Array ","(send\n  (lvar :local_scope) :[]\n  (dsym\n    (begin\n      (lvar :type))\n    (str \"s\"))) compact find ","(send\n  (lvar :local_scope) :[]\n  (dsym\n    (begin\n      (lvar :type))\n    (str \"s\"))) compact ","additional_possibilities flatten "," Guard  scope [] "," Guard  scope ","local_scope [] ","type to_sym ","(send\n  (const\n    (cbase) :Guard) :group\n  (sym :common)) + "," Guard  group ","(send\n  (lvar :local_scope) :[]\n  (dsym\n    (begin\n      (lvar :type))\n    (str \"s\"))) compact detect "," Array compact empty? ! "," Array compact empty? "," Array compact ","found compact detect ","found compact "]}," Guard Runner _current_groups_scope":{"type":"method","name":"_current_groups_scope","children":[],"call":[" Guard  group ","group is_a? "," Array map "," Array "," _find_non_empty_groups_scope ","(send\n  (array\n    (send nil :_instantiate\n      (sym :group)\n      (sym :common))) :+\n  (send nil :Array\n    (lvar :found))) compact ","(send nil :_instantiate\n  (sym :group)\n  (sym :common)) + "," _instantiate ","g name == ","g name ","groups any? ","(send\n  (array\n    (send nil :_instantiate\n      (sym :group)\n      (sym :common))) :+\n  (send nil :Array\n    (lvar : _find_non_empty_groups_scope ))) compact "]}," Guard Runner _current_plugins_scope":{"type":"method","name":"_current_plugins_scope","children":[],"call":[" Guard  plugin ","plugin is_a? "," Array map "," Array "," _find_non_empty_plugins_scope "," _instantiate "," _find_non_empty_ _find_non_empty_plugins_scope _scope "]}," Guard Runner _clearable?":{"type":"method","name":"_clearable?","children":[],"call":["removed_paths empty? ! ","removed_paths empty? ","guard respond_to? ","REMOVAL_TASKS  any? ","added_paths empty? ! ","added_paths empty? ","ADDITION_TASKS  any? ","modified_paths empty? ! ","modified_paths empty? ","MODIFICATION_TASKS  any? "]}," Guard Runner _scoped_plugins":{"type":"method","name":"_scoped_plugins","children":[],"call":[" Guard UI  info ","current_plugin class name ","current_plugin class ","block_return nil? "," Guard  plugins each "," Guard  plugins ","group name "," catch "," _current_groups_scope each "," _current_groups_scope ","plugins each "," _current_plugins_scope "," fail ","group inspect ","group respond_to? ","scopes nil? "," Guard   _current_plugins_scope  each "," Guard   _current_plugins_scope  "," _current_plugins_scope  each "," _current_ _current_plugins_scope _scope "]}," Guard Runner _run_first_task_found":{"type":"method","name":"_run_first_task_found","children":[],"call":[" Guard UI  debug ","task_param inspect ","task to_s ","guard class name ","guard class "," run_supervised_task ","guard respond_to? ","tasks each "]}," Guard RakeTask initialize":{"type":"method","name":"initialize","children":[],"call":[" Guard CLI  start ","options split "," task "," desc "," namespace "," block_given? "]}," Guard PluginUtil _constant_name":{"type":"method","name":"_constant_name","children":[],"call":["1 upcase ","(send\n  (send nil :name) :gsub\n  (regexp\n    (str \"/(.?)\")\n    (regopt))) gsub "," name gsub "," name "]}," Guard PluginUtil _plugin_constant":{"type":"method","name":"_plugin_constant","children":[],"call":["c to_s downcase == "," _constant_name downcase "," _constant_name ","c to_s downcase ","c to_s "," Guard  constants find "," Guard  constants ","Guard  constants detect ","Guard  constants ","c to_s casecmp zero? ","c to_s casecmp "," Guard  constants detect "]}," Guard PluginUtil add_to_guardfile":{"type":"method","name":"add_to_guardfile","children":[],"call":[" Guard UI  info "," name ","f puts "," plugin_class template "," plugin_location "," plugin_class ","File  open ","File  read "," Guard  evaluator guardfile_include? "," Guard  evaluator ","UI  info ","INFO_ADDED_GUARD_TO_GUARDFILE  % ","klass template ","evaluator guardfile_include? ","evaluator evaluate ","Guardfile Evaluator  new ","Guard  state session evaluator_options ","Guard  state session ","Guard  state "," require "," require_relative "," fail "," Guard  evaluator nil? ","evaluator evaluate_guardfile ","Guard Guardfile Evaluator  new "," Guard  Guardfile Evaluator  new  guardfile_include? "," Guard  Guard Guardfile Evaluator  new  guardfile_include? "," Guard  Guardfile Evaluator  new  "," Guard  Guard Guardfile Evaluator  new  "," plugin_class  template ","Guardfile Evaluator  new  guardfile_include? ","Guard Guardfile Evaluator  new  guardfile_include? ","Guardfile Evaluator  new  evaluate ","Guard Guardfile Evaluator  new  evaluate ","Guard  state session Guardfile Evaluator  new _options ","Guard  state session Guard Guardfile Evaluator  new _options ","Guard  state session evaluator_Guard  state session evaluator_options  "," Guard  Guardfile Evaluator  new  nil? "," Guard  Guard Guardfile Evaluator  new  nil? ","Guardfile Evaluator  new  evaluate_guardfile ","Guard Guardfile Evaluator  new  evaluate_guardfile "]}," Guard PluginUtil plugin_class":{"type":"method","name":"plugin_class","children":[],"call":[" Guard UI  error ","loadError to_s "," _constant_name "," name downcase "," name ","options [] "," Guard  const_get "," _plugin_constant "," require ","(pair\n  (sym :fail_gracefully)\n  (false)) merge ","loadError backtrace join ","loadError backtrace ","typeError backtrace join ","typeError backtrace ","UI  error ","error backtrace join ","error backtrace ","ERROR_NO_GUARD_OR_CLASS  % ","Guard  const_get "," fail "," format "," _ _plugin_constant ant_name ","(pair\n  (sym :fail_gracefully)\n  (false)) merge  [] "," Guard   _plugin_constant _get "," _plugin_ _plugin_constant ant ","Guard   _plugin_constant _get "]}," Guard PluginUtil plugin_location":{"type":"method","name":"plugin_location","children":[],"call":[" Guard UI  error "," name ","Gem  source_index find_name last full_gem_path ","Gem  source_index find_name last ","Gem  source_index find_name ","Gem  source_index ","Gem Specification  find_by_name full_gem_path ","Gem Specification  find_by_name ","Gem Version  create >= ","Gem Version  create "," _full_gem_path ","UI  error "]}," Guard PluginUtil initialize_plugin":{"type":"method","name":"initialize_plugin","children":[],"call":[" plugin_class new "," plugin_class ","options delete "," plugin_class superclass == "," plugin_class superclass "," plugin_class superclass to_s == "," plugin_class superclass to_s "," fail ","klass new ","klass superclass to_s == ","klass superclass to_s ","klass superclass "," _constant_name inspect "," _constant_name ","klass ancestors include? ","klass ancestors "," plugin_class  new "," plugin_class  superclass to_s == "," plugin_class  superclass to_s "," plugin_class  superclass "," plugin_class  ancestors include? "," plugin_class  ancestors "]}," Guard PluginUtil initialize":{"type":"method","name":"initialize","children":[],"call":["name to_s sub ","name to_s "]}," Guard PluginUtil plugin_names":{"type":"method","name":"plugin_names","children":[],"call":[]}," Guard Plugin initialize":{"type":"method","name":"initialize","children":[],"call":[" _register_callbacks "," _set_instance_variables_from_options ","options delete ","Guard  state session groups add ","Guard  state session groups ","Guard  state session ","Guard  state "]}," Guard Plugin Hooker _register_callbacks":{"type":"method","name":"_register_callbacks","children":[],"call":[" class add_callback ","callback [] "," class "," callbacks each "," callbacks ","Hooker  add_callback "]}," Guard Plugin Hooker hook":{"type":"method","name":"hook","children":[],"call":["Hooker  notify ","hook_name to_sym "," Guard UI  debug "," caller [] [] "," caller [] "," caller ","event is_a? "," class "]}," Guard Plugin Hooker reset_callbacks!":{"type":"method","name":"reset_callbacks!","children":[],"call":[]}," Guard Plugin Hooker notify":{"type":"method","name":"notify","children":[],"call":[]}," Guard Plugin Hooker has_callback?":{"type":"method","name":"has_callback?","children":[],"call":[]}," Guard Plugin Hooker add_callback":{"type":"method","name":"add_callback","children":[],"call":[]}," Guard Plugin Hooker callbacks":{"type":"method","name":"callbacks","children":[],"call":[]}," Guard Plugin Base _set_instance_variables_from_options":{"type":"method","name":"_set_instance_variables_from_options","children":[],"call":["options delete "," Guard  add_group "]}," Guard Plugin Base to_s":{"type":"method","name":"to_s","children":[],"call":[" options "," callbacks "," watchers "," group "," name "," class "]}," Guard Plugin Base title":{"type":"method","name":"title","children":[],"call":[" class non_namespaced_classname "," class "]}," Guard Plugin Base name":{"type":"method","name":"name","children":[],"call":[" class non_namespaced_name "," class "]}," Guard Plugin Base ClassMethods template":{"type":"method","name":"template","children":[],"call":["File  read "," non_namespaced_name ","TEMPLATE_FORMAT  % "]}," Guard Plugin Base ClassMethods non_namespaced_name":{"type":"method","name":"non_namespaced_name","children":[],"call":[" non_namespaced_classname downcase "," non_namespaced_classname "]}," Guard Plugin Base ClassMethods non_namespaced_classname":{"type":"method","name":"non_namespaced_classname","children":[],"call":[" to_s sub "," to_s "]}," Guard Plugin Base included":{"type":"method","name":"included","children":[],"call":[]}," Guard Options initialize":{"type":"method","name":"initialize","children":[],"call":["default_opts dup merge ","opts dup ","default_opts dup ","default_opts merge "]}," Guard Notifier Tmux _reset_options_store":{"type":"method","name":"_reset_options_store","children":[],"call":["@options_store []= "," _clients each "," _clients "]}," Guard Notifier Tmux _run_client":{"type":"method","name":"_run_client","children":[],"call":[" system ","DEFAULTS  [] ","client strip "," _client_cmd_flag "," _clients each "," _clients ","@options fetch ","Sheller  run ","clients each "," _ _clients  each "," _ _clients  "," _clients  each "]}," Guard Notifier Tmux options_store":{"type":"method","name":"options_store","children":[],"call":[]}," Guard Notifier TerminalTitle turn_off":{"type":"method","name":"turn_off","children":[],"call":[]}," Guard Notifier TerminalNotifier _register!":{"type":"method","name":"_register!","children":[],"call":[]}," Guard Notifier TerminalNotifier gem_name":{"type":"method","name":"gem_name","children":[],"call":[]}," Guard Notifier TerminalNotifier supported_hosts":{"type":"method","name":"supported_hosts","children":[],"call":[]}," Guard Notifier Notifu _notifu_type":{"type":"method","name":"_notifu_type","children":[],"call":["type to_sym "]}," Guard Notifier Notifu gem_name":{"type":"method","name":"gem_name","children":[],"call":[]}," Guard Notifier Notifu supported_hosts":{"type":"method","name":"supported_hosts","children":[],"call":[]}," Guard Notifier NotifySend _register!":{"type":"method","name":"_register!","children":[],"call":[]}," Guard Notifier NotifySend _notifysend_binary_available?":{"type":"method","name":"_notifysend_binary_available?","children":[],"call":[]}," Guard Notifier NotifySend _to_arguments":{"type":"method","name":"_to_arguments","children":[],"call":["cmd << << ","value to_s ","cmd << ","supported include? ","options reduce ","opts reduce ","opts inject "]}," Guard Notifier NotifySend _notifysend_urgency":{"type":"method","name":"_notifysend_urgency","children":[],"call":["(pair\n  (str \"failed\")\n  (str \"normal\")) fetch ","(pair\n  (sym :failed)\n  (str \"normal\")) fetch "]}," Guard Notifier NotifySend supported_hosts":{"type":"method","name":"supported_hosts","children":[],"call":[]}," Guard Notifier Libnotify _libnotify_urgency":{"type":"method","name":"_libnotify_urgency","children":[],"call":[]}," Guard Notifier Libnotify supported_hosts":{"type":"method","name":"supported_hosts","children":[],"call":[]}," Guard Notifier GrowlNotify _register!":{"type":"method","name":"_register!","children":[],"call":[]}," Guard Notifier GrowlNotify supported_hosts":{"type":"method","name":"supported_hosts","children":[],"call":[]}," Guard Notifier Growl _register!":{"type":"method","name":"_register!","children":[],"call":[]}," Guard Notifier Growl supported_hosts":{"type":"method","name":"supported_hosts","children":[],"call":[]}," Guard Notifier GNTP _client":{"type":"method","name":"_client","children":[],"call":[" _register! "," GNTP  new ","CLIENT_DEFAULTS  [] ","opts delete "]}," Guard Notifier GNTP _register!":{"type":"method","name":"_register!","children":[],"call":["gntp_client register "," images_path join to_s "," images_path join "," images_path "]}," Guard Notifier GNTP gem_name":{"type":"method","name":"gem_name","children":[],"call":[]}," Guard Notifier GNTP supported_hosts":{"type":"method","name":"supported_hosts","children":[],"call":[]}," Guard Notifier FileNotifier _write":{"type":"method","name":"_write","children":[],"call":["File  write "]}," Guard Notifier Emacs _run_cmd":{"type":"method","name":"_run_cmd","children":[],"call":["IO  popen readlines ","IO  popen ","Sheller  run ","p close ","p readlines ","IO  IO  popen readlines oIO  popen readlines en readlines ","IO  IO  popen oIO  popen en readlines ","IO  IO  popen readlines oIO  popen readlines en ","IO  IO  popen oIO  popen en ","IO  popen readlines  close ","IO  popen  close ","IO  popen readlines  readlines ","IO  popen  readlines "]}," Guard Notifier Base _notification_type":{"type":"method","name":"_notification_type","children":[],"call":["image to_sym "]}," Guard Notifier Base _image_path":{"type":"method","name":"_image_path","children":[],"call":[" images_path join to_s "," images_path join ","image to_s "," images_path ","image to_sym "]}," Guard Notifier Base normalize_standard_options!":{"type":"method","name":"normalize_standard_options!","children":[],"call":["opts []= "," _image_path ","opts delete "," _notification_type ","opts fetch ","opts [] "]}," Guard Notifier Base _supported_host?":{"type":"method","name":"_supported_host?","children":[],"call":[]}," Guard Notifier Base images_path":{"type":"method","name":"images_path","children":[],"call":["Pathname  new join ","Pathname  new ","File  dirname ","Pathname  new dirname + ","Pathname  new dirname "]}," Guard Notifier Base name":{"type":"method","name":"name","children":[],"call":[" class name "," class "]}," Guard Notifier Base title":{"type":"method","name":"title","children":[],"call":[" class title "," class "]}," Guard Notifier Base require_gem_safely":{"type":"method","name":"require_gem_safely","children":[],"call":[]}," Guard Notifier Base gem_name":{"type":"method","name":"gem_name","children":[],"call":[]}," Guard Notifier Base notify":{"type":"method","name":"notify","children":[],"call":[" raise "," normalize_standard_options! ","opts replace "," options merge "," options "," options delete "]}," Guard Notifier Base available?":{"type":"method","name":"available?","children":[],"call":[]}," Guard Notifier Base supported_hosts":{"type":"method","name":"supported_hosts","children":[],"call":[]}," Guard Notifier Base initialize":{"type":"method","name":"initialize","children":[],"call":[]}," Guard Notifier _auto_detect_notification":{"type":"method","name":"_auto_detect_notification","children":[],"call":[" Guard UI  info "," add_notifier ","group find ","NOTIFIERS  each "," notifiers= ","group detect "]}," Guard Notifier _get_notifier_module":{"type":"method","name":"_get_notifier_module","children":[],"call":["notifier last ","n == ","group find ","NOTIFIERS  each ","group detect "]}," Guard Notifier add_notifier":{"type":"method","name":"add_notifier","children":[],"call":[" notifiers= "," notifiers << "," notifiers ","notifier_class available? "," _get_notifier_module "," turn_off ","name == "," _get_notifier_module  available? "]}," Guard Notifier clear_notifiers":{"type":"method","name":"clear_notifiers","children":[],"call":["ENV  []= "]}," Guard Notifier notifiers=":{"type":"method","name":"notifiers=","children":[],"call":["ENV  []= ","YAML  dump "]}," Guard Notifier notifiers":{"type":"method","name":"notifiers","children":[],"call":["YAML  load ","ENV  [] ","mod name ","@detected available map ","@detected available "]}," Guard Interactor _restore_terminal_settings":{"type":"method","name":"_restore_terminal_settings","children":[],"call":[" system "]}," Guard Interactor _store_terminal_settings":{"type":"method","name":"_store_terminal_settings","children":[],"call":["(str \"stty -g 2>\") chomp "]}," Guard Interactor _stty_exists?":{"type":"method","name":"_stty_exists?","children":[],"call":[" system ","@stty_exists nil? "]}," Guard Interactor _prompt":{"type":"method","name":"_prompt","children":[],"call":[" _scope_for_prompt ","nest_level zero? ","Pry  view_clip "," Guard  listener paused? "," Guard  listener ","pry input_array size ","pry input_array "," proc "," Guard  scope [] map join "," Guard  scope [] map "," Guard  scope [] "," Guard  scope "," Guard  scope [] empty? ! "," Guard  scope [] empty? "," _clip_name ","Pry  view_Pry  view_clip  "," _Pry  view_clip _name "]}," Guard Interactor _join_scope_for_prompt":{"type":"method","name":"_join_scope_for_prompt","children":[],"call":[" Guard  scope [] map join "," Guard  scope [] map "," Guard  scope [] "," Guard  scope "]}," Guard Interactor _scope_for_prompt":{"type":"method","name":"_scope_for_prompt","children":[],"call":[" _join_scope_for_prompt "," Guard  scope [] empty? "," Guard  scope [] "," Guard  scope ","(sym :plugins) each "," _join_scope "]}," Guard Interactor _configure_prompt":{"type":"method","name":"_configure_prompt","children":[],"call":["Pry  config prompt= "," _prompt ","Pry  config "]}," Guard Interactor _create_group_commands":{"type":"method","name":"_create_group_commands","children":[{"type":"method","name":"process","children":[],"asgn":[],"call":["Pry  run_command "," match "]}],"call":["Pry  run_command "," match "," group ","Pry  commands create_command ","group title ","group name to_s ","group name ","Pry  commands ","group name == "," Guard  groups each "," Guard  groups "]}," Guard Interactor _create_guard_commands":{"type":"method","name":"_create_guard_commands","children":[{"type":"method","name":"process","children":[],"asgn":[],"call":["Pry  run_command "," match "]}],"call":["Pry  run_command "," match "," group ","Pry  commands create_command ","guard_plugin title ","guard_plugin name ","Pry  commands "," Guard  plugins each "," Guard  plugins "]}," Guard Interactor _create_command_aliases":{"type":"method","name":"_create_command_aliases","children":[],"call":["Pry  commands alias_command ","command to_s ","Pry  commands ","SHORTCUTS  each "]}," Guard Interactor _create_run_all_command":{"type":"method","name":"_create_run_all_command","children":[],"call":["Pry  run_command ","Pry  commands block_command ","Pry  commands "]}," Guard Interactor _replace_reset_command":{"type":"method","name":"_replace_reset_command","children":[],"call":[" exec "," output puts "," output ","Pry  commands command ","Pry  commands "]}," Guard Interactor _add_restore_visibility_hook":{"type":"method","name":"_add_restore_visibility_hook","children":[],"call":[" system ","Pry  config hooks add_hook ","Pry  config hooks ","Pry  config "]}," Guard Interactor _add_load_project_guard_rc_hook":{"type":"method","name":"_add_load_project_guard_rc_hook","children":[],"call":[" load ","File  exist? ","Dir  pwd + ","Dir  pwd ","Pry  config hooks add_hook ","Pry  config hooks ","Pry  config "]}," Guard Interactor _add_load_guard_rc_hook":{"type":"method","name":"_add_load_guard_rc_hook","children":[],"call":[" load ","File  exist? ","File  expand_path ","(or\n  (send\n    (send\n      (send\n        (self) :class) :options) :[]\n    (sym :guard_rc))\n  (const nil :GUARD_RC)) tap "," class options [] "," class options "," class ","Pry  config hooks add_hook ","Pry  config hooks ","Pry  config "]}," Guard Interactor _add_hooks":{"type":"method","name":"_add_hooks","children":[],"call":[" _add_restore_visibility_hook "," _stty_exists? "," _add_load_project_guard_rc_hook "," _add_load_guard_rc_hook "," system ","Pry  config hooks add_hook ","Pry  config hooks ","Pry  config "," load ","File  exist? ","Dir  pwd + ","Dir  pwd ","File  expand_path ","(or\n  (send\n    (send\n      (send\n        (self) :class) :options) :[]\n    (sym :guard_rc))\n  (const nil :GUARD_RC)) tap "," class options [] "," class options "," class "," _add_load_Dir  pwd + _hook "]}," Guard Guardfile Generator initialize_all_templates":{"type":"method","name":"initialize_all_templates","children":[],"call":[" initialize_template "," Guard PluginUtil  plugin_names each "," Guard PluginUtil  plugin_names ","PluginUtil  plugin_names each ","PluginUtil  plugin_names "]}," Guard Guardfile Generator initialize_template":{"type":"method","name":"initialize_template","children":[],"call":["UI  error ","const_name capitalize ","plugin_name downcase ","plugin_name downcase gsub "," Guard UI  info ","f puts ","File  read ","File  join ","File  open ","File  exist? ","@options []= ","File  exists? ","plugin_util add_to_guardfile ","plugin_util plugin_class "," Guard PluginUtil  new "," _ui ","name gsub capitalize ","name gsub "," format ","guardfile binwrite ","(send\n  (const nil :HOME_TEMPLATES) :+\n  (lvar :plugin_name)) read ","HOME_TEMPLATES  + "," Pathname ","PluginUtil  new ","plugin_class template ","plugin_util plugin_location "," fail ","Pathname  new ","IO  read ","plugin_name downcase gsub  capitalize ","const_plugin_name downcase  capitalize ","plugin_plugin_name downcase  downcase ","plugin_plugin_name downcase  downcase gsub "," Guard PluginUtil  new  add_to_guardfile ","PluginUtil  new  add_to_guardfile ","plugin_util add_to_ Pathname  ","plugin_util add_to_Pathname  new  "," Guard PluginUtil  new  plugin_class ","PluginUtil  new  plugin_class ","plugin_util plugin_util plugin_class  ","plugin_name downcase  gsub capitalize ","plugin_name downcase  gsub "," Pathname  binwrite ","Pathname  new  binwrite ","(send\n  (const nil :HOME_TEMPLATES) :+\n  (lvar :plugin_plugin_name downcase )) read "," Pathplugin_name downcase  ","plugin_class plugin_class template  ","plugin_util plugin_class  template "," Guard PluginUtil  new  plugin_location ","PluginUtil  new  plugin_location ","Pathplugin_name downcase   new "]}," Guard Guardfile Generator create_guardfile":{"type":"method","name":"create_guardfile","children":[],"call":[" abort "," Guard UI  error ","Dir  pwd "," options [] "," options ","FileUtils  cp "," Guard UI  info ","File  exist? ! ","File  exist? ","path to_s "," _ui ","path exist? "," Pathname expand_path "," Pathname ","Pathname  new expand_path ","Pathname  new "," Pathname expand_path  to_s ","Pathname  new expand_path  to_s "," Pathname expand_path  exist? ","Pathname  new expand_path  exist? "," Pathname expand_ Pathname expand_path  "," Pathname expand_Pathname  new expand_path  ","Pathname  new expand_ Pathname expand_path  ","Pathname  new expand_Pathname  new expand_path  "]}," Guard Guardfile Generator initialize":{"type":"method","name":"initialize","children":[],"call":[]}," Guard Guardfile Evaluator _user_config_path":{"type":"method","name":"_user_config_path","children":[],"call":["File  expand_path ","File  join "]}," Guard Guardfile Evaluator _home_guardfile_path":{"type":"method","name":"_home_guardfile_path","children":[],"call":["File  expand_path ","File  join "]}," Guard Guardfile Evaluator _local_guardfile_path":{"type":"method","name":"_local_guardfile_path","children":[],"call":["File  join ","Dir  pwd ","File  expand_path "]}," Guard Guardfile Evaluator _guardfile_contents_usable?":{"type":"method","name":"_guardfile_contents_usable?","children":[],"call":[" guardfile_contents =~ "," guardfile_contents "]}," Guard Guardfile Evaluator _after_reevaluate_guardfile":{"type":"method","name":"_after_reevaluate_guardfile","children":[],"call":[" Guard  runner run "," Guard  runner "," Guard Notifier  notify "," Guard UI  info "," Guard  plugins empty? "," Guard  plugins "," Guard Notifier  turn_on "," Guard Notifier  enabled? "," Guard  setup_scope "," Guard  send ! "," Guard  send ","Guard Runner  new run ","Guard Runner  new "," Guard Notifier  connect "," Guard  options "]}," Guard Guardfile Evaluator _before_reevaluate_guardfile":{"type":"method","name":"_before_reevaluate_guardfile","children":[],"call":[" options guardfile_contents "," options "," Guard Notifier  clear_notifiers "," Guard  reset_plugins "," Guard  reset_groups "," Guard  runner run "," Guard  runner "," Guard  reset_scope "," Guard Notifier  disconnect ","Guard Runner  new run ","Guard Runner  new "]}," Guard Guardfile Evaluator _read_guardfile":{"type":"method","name":"_read_guardfile","children":[],"call":[" exit "," Guard UI  error ","ex inspect "," options guardfile_contents= ","File  read "," options "," options guardfile_path= "," options []= ","ex backtrace "]}," Guard Guardfile Evaluator _fetch_guardfile_contents":{"type":"method","name":"_fetch_guardfile_contents","children":[],"call":[" Guard UI  error "," _guardfile_contents_usable? "," exit "," _read_guardfile "," _guardfile_default_path ","File  exist? "," options guardfile "," options "," Guard UI  info "," options guardfile_path= "," options guardfile_contents "," _use_default_guardfile "," _use_provided_guardfile "," _use_inline_guardfile ","UI  error "," _use_default "," _use_provided "," _use_inline "]}," Guard Guardfile Evaluator _instance_eval_guardfile":{"type":"method","name":"_instance_eval_guardfile","children":[],"call":[" raise "," Guard UI  error "," Guard Dsl  new instance_eval "," options guardfile_path "," options "," Guard Dsl  new "," options [] ","Dsl  new evaluate ","Dsl  new ","UI  error "]}," Guard Guardfile Evaluator _guardfile_contents_without_user_config":{"type":"method","name":"_guardfile_contents_without_user_config","children":[],"call":[" options guardfile_contents "," options "," options [] "," fail "]}," Guard Guardfile Evaluator _guardfile_default_path":{"type":"method","name":"_guardfile_default_path","children":[],"call":[" _home_guardfile_path "," _local_guardfile_path ","File  exist? "]}," Guard Guardfile Evaluator guardfile_contents":{"type":"method","name":"guardfile_contents","children":[],"call":["(send nil :_guardfile_contents_without_user_config) compact join ","(send nil :_guardfile_contents_without_user_config) compact "," _guardfile_contents_without_user_config ","File  read "," _user_config_path ","File  exist? ","(send nil :_guardfile_contents_without_user_File  read ) compact join ","(send nil :_guardfile_contents_without_user_File  read ) compact "," _guardfile_contents_without_user_File  read  "," _user_File  read _path "]}," Guard Guardfile Evaluator guardfile_path":{"type":"method","name":"guardfile_path","children":[],"call":[" options guardfile_path "," options "," options [] "]}," Guard Guardfile Evaluator guardfile_include?":{"type":"method","name":"guardfile_include?","children":[],"call":[" _guardfile_contents_without_user_config match "," _guardfile_contents_without_user_config ","(str \"^\\\\s*guard\\\\s*\\\\(?\\\\s*['\\\":]\") match ","reader plugin_names include? ","reader plugin_names ","reader evaluate ","DslReader  new ","DslReader  new  plugin_names include? ","DslReader  new  plugin_names ","DslReader  new  evaluate "]}," Guard Guardfile Evaluator reevaluate_guardfile":{"type":"method","name":"reevaluate_guardfile","children":[],"call":[" _after_reevaluate_guardfile "," evaluate_guardfile "," _before_reevaluate_guardfile ","@guardfile_source == ","@source == "]}," Guard Guardfile Evaluator evaluate_guardfile":{"type":"method","name":"evaluate_guardfile","children":[],"call":[" _instance_eval_guardfile "," guardfile_contents "," _fetch_guardfile_contents "," Guard  add_builtin_plugins "," guardfile_path ","Guard  add_builtin_plugins "]}," Guard Guardfile Evaluator initialize":{"type":"method","name":"initialize","children":[],"call":[" Guard Options  new ","h []= ","opts [] ","(sym :guardfile) reduce ","(sym :guardfile) include? ","k to_sym ","opts select "," Pathname "," _from_deprecated ","Pathname  new "," _from_deprecated  [] "," _from_deprecated  select "]}," Guard Group title":{"type":"method","name":"title","children":[],"call":[" name to_s capitalize "," name to_s "," name "]}," Guard DslDescriber _evaluate_guardfile":{"type":"method","name":"_evaluate_guardfile","children":[],"call":[" Guard Guardfile Evaluator  new evaluate_guardfile "," Guard Guardfile Evaluator  new "," options "," Guard  restore_scope "," Guard  options "," Guard  save_scope "]}," Guard DslDescriber notifiers":{"type":"method","name":"notifiers","children":[],"call":["Formatador  display_compact_table ","rows drop ","rows << ","value inspect ","option to_s ","index == ","options each_with_index ","options empty? ","options delete ","defaults merge ","clazz const_get ","clazz const_defined? ","notifier [] ","n [] == ","n [] "," Guard Notifier  notifiers find "," Guard Notifier  notifiers ","clazz available? ","definition [] "," Guard Notifier NOTIFIERS  inject inject "," Guard Notifier NOTIFIERS  inject "," _evaluate_guardfile ","final_rows drop "," _add_row "," _merge_options ","detected detect ","merged_notifiers each_with_object ","supported inject ","Notifier  disconnect ","Notifier  notifiers ","Notifier  connect ","detected_names include? ","supported each_with_object ","item [] ","detected map ","Notifier  detected ","Notifier  supported "," Guard Notifier  notifiers detect ","defaults merge  each_with_index ","notifier []  each_with_index "," _merge_options  each_with_index ","defaults merge  empty? ","notifier []  empty? "," _merge_options  empty? ","defaults merge  delete ","notifier []  delete "," _merge_options  delete ","clazz const_get  merge ","definition []  const_get ","definition []  const_defined? ","definition []  available? "," _merge_defaults merge  "," _merge_notifier []  "," _merge_ _merge_options  ","Notifier  notifiers  detect ","Notifier  detected  detect ","supported inject  each_with_object "," Guard Notifier NOTIFIERS  inject  each_with_object ","Notifier  supported  inject ","detected_definition [] s include? ","Notifier  notifiers _names include? ","Notifier  detected _names include? ","Notifier  supported  each_with_object ","Notifier  notifiers  map ","Notifier  detected  map ","Notifier  Notifier  notifiers  ","Notifier  Notifier  detected  ","Notifier  Notifier  supported  "]}," Guard DslDescriber initialize":{"type":"method","name":"initialize","children":[],"call":[" Guard  reset_plugins "," Guard  reset_groups "," fail ","options nil? "," Guard  reset_options "," Guard  reset_scope "]}," Guard DeprecatedMethods guard_gem_names":{"type":"method","name":"guard_gem_names","children":[],"call":[" Guard PluginUtil  plugin_names "," Guard UI  deprecation ","PluginUtil  plugin_names ","UI  deprecation "]}," Guard DeprecatedMethods locate_guard":{"type":"method","name":"locate_guard","children":[],"call":[" Guard PluginUtil  new plugin_location "," Guard PluginUtil  new "," Guard UI  deprecation ","PluginUtil  new plugin_location ","PluginUtil  new ","UI  deprecation "]}," Guard DeprecatedMethods get_guard_class":{"type":"method","name":"get_guard_class","children":[],"call":[" Guard PluginUtil  new plugin_class "," Guard PluginUtil  new "," Guard UI  deprecation ","PluginUtil  new plugin_class ","PluginUtil  new ","UI  deprecation "]}," Guard DeprecatedMethods add_guard":{"type":"method","name":"add_guard","children":[],"call":[" add_plugin "," Guard UI  deprecation "]}," Guard DeprecatedMethods guards":{"type":"method","name":"guards","children":[],"call":[" plugins "," Guard UI  deprecation "]}," Guard Commander within_preserved_state":{"type":"method","name":"within_preserved_state","children":[],"call":[" interactor start "," interactor "," running "," interactor stop "," lock synchronize "," lock "]}," Guard Commander pause":{"type":"method","name":"pause","children":[],"call":[" listener pause "," listener "," Guard UI  info "," listener unpause "," listener paused? ","UI  info ","pause to_s upcase ","pause to_s "," listener send ","pause == "," fail ","expected inspect ","pause nil? ","states [] ","paused ! "," listener public_send "," listener states []  "," listener unstates []  "," listener states [] d? "," listener  listener paused? ? ","states []  to_s upcase ","states []  to_s ","states []  == ","states []  nil? ","states [] d ! "," listener paused?  ! "]}," Guard Commander run_all":{"type":"method","name":"run_all","children":[],"call":[" runner run "," runner "," Guard UI  action_with_scopes "," Guard UI  clear "," within_preserved_state "," setup "," running ","Guard Runner  new run ","Guard Runner  new ","UI  action_with_scopes ","UI  clear ","Runner  new run ","Runner  new "]}," Guard Commander reload":{"type":"method","name":"reload","children":[],"call":[" runner run "," runner "," evaluator reevaluate_guardfile "," evaluator ","scopes empty? "," Guard UI  action_with_scopes "," Guard UI  clear "," within_preserved_state "," setup "," running ","Runner  new run ","Runner  new ","Reevaluator  new reevaluate ","Reevaluator  new ","UI  action_with_scopes ","UI  clear ","Guard Runner  new run ","Guard Runner  new ","Guard Guardfile Evaluator  new reevaluate_guardfile ","Guard Guardfile Evaluator  new ","Guard  options "]}," Guard Commander stop":{"type":"method","name":"stop","children":[],"call":[" listener stop "," listener "," Guard UI  info "," Guard Notifier  turn_off "," runner run "," runner "," Guard UI  debug "," within_preserved_state "," setup "," running ","UI  info ","Notifier  disconnect ","Runner  new run ","Runner  new ","UI  debug "," interactor background "," interactor "," Guard Notifier  disconnect ","Guard Runner  new run ","Guard Runner  new "]}," Guard Commander start":{"type":"method","name":"start","children":[],"call":[" listener start "," listener "," Guard UI  info ","@watchdirs join "," runner run "," runner "," Guard UI  debug "," within_preserved_state "," setup "," running "," stop ","Guard  queue process ","Guard  queue ","Guard  queue pending? "," interactor foreground != "," interactor foreground "," interactor ","UI  info ","Guard  state session watchdirs join ","Guard  state session watchdirs ","Guard  state session ","Guard  state ","Runner  new run ","Runner  new ","UI  debug ","e status "," _interactor_loop "," Guard  watchdirs join "," Guard  watchdirs "," _process_queue "," pending_changes? ","Guard Runner  new run ","Guard Runner  new "]}," Guard CLI _verify_bundler_presence":{"type":"method","name":"_verify_bundler_presence","children":[],"call":[" Guard UI  info ","ENV  [] ! ","ENV  [] ","File  exists? ","UI  info ","File  exist? "]}," Guard CLI notifiers":{"type":"method","name":"notifiers","children":[],"call":[" Guard DslDescriber  new notifiers "," Guard DslDescriber  new "," options ","DslDescriber  new notifiers ","DslDescriber  new "," _require_guardfile ","Cli Environments EvaluateOnly  new evaluate ","Cli Environments EvaluateOnly  new "," Guard  reset_options "]}," Guard Setuper _setup_interactor":{"type":"method","name":"_setup_interactor","children":[],"call":[" Guard Interactor  new "," Guard Interactor  enabled ! "," Guard Interactor  enabled "," options no_interactions "," options "," options [] "]}," Guard Notifier Tmux _register!":{"type":"method","name":"_register!","children":[],"call":[]}," Guard Notifier Tmux _tmux_environment_available?":{"type":"method","name":"_tmux_environment_available?","children":[],"call":[]}," Guard Notifier Emacs _emacs_client_available?":{"type":"method","name":"_emacs_client_available?","children":[],"call":[]}," Guard Guardfile Evaluator _find_default_guardfile":{"type":"method","name":"_find_default_guardfile","children":[],"call":["File  exist? ","(send nil :_local_guardfile_path) find "," _home_guardfile_path "," _local_guardfile_path ","(send nil :_local_guardfile_path) detect "]}," Guard Guardfile Evaluator _use_default_guardfile":{"type":"method","name":"_use_default_guardfile","children":[],"call":[" exit "," Guard UI  error "," _read_guardfile "," _find_default_guardfile "]}," Guard Guardfile Evaluator _use_provided_guardfile":{"type":"method","name":"_use_provided_guardfile","children":[],"call":[" exit "," Guard UI  error "," options [] "," options "," Guard UI  info "," _read_guardfile ","File  exist? "," options []= ","File  expand_path ","@guardfile_source == ","@guardfile_source nil? "]}," Guard Guardfile Evaluator _use_inline_guardfile":{"type":"method","name":"_use_inline_guardfile","children":[],"call":[" options []= "," options "," Guard UI  info "," options [] ","@guardfile_source == ","@guardfile_source nil? "]}," Guard Interactor _clip_name":{"type":"method","name":"_clip_name","children":[],"call":["Pry  view_clip "]}," Guard _evaluate":{"type":"method","name":"_evaluate","children":[],"call":["UI  error ","e message ","UI  info ","evaluator path ","evaluator custom? ","evaluator inline? "," _pluginless_guardfile? ","UI  reset_and_clear "," state session clearing "," state session options [] "," state session options "," state session "," state ","evaluator evaluate ","Guardfile Evaluator  new ","Guardfile Evaluator  new  path ","Guardfile Evaluator  new  custom? ","Guardfile Evaluator  new  inline? ","Guardfile Evaluator  new  evaluate "]}," Guard _pluginless_guardfile?":{"type":"method","name":"_pluginless_guardfile?","children":[],"call":["plugins map == ","plugins map ","plugins empty? "," state session plugins all "," state session plugins "," state session "," state "," state session plugins all empty? "," plugins map == "," plugins map "," plugins "," plugins empty? "," state session plugins all  map == "," state session plugins all  map "," state session plugins all  empty? "," state session  state session plugins all  all "," state session  state session plugins all  "," state session  state session plugins all  all empty? ","  state session plugins all  map == ","  state session plugins all  map ","  state session plugins all  ","  state session plugins all  empty? "]}," Guard _listener_callback":{"type":"method","name":"_listener_callback","children":[],"call":[" async_queue_add "," _relevant_changes? "," _relative_pathnames "," lambda "," _guardfile_deprecated_check ","relative_paths [] "]}," Guard _relative_pathnames":{"type":"method","name":"_relative_pathnames","children":[],"call":[" _relative_pathname ","paths map "]}," Guard _relevant_changes?":{"type":"method","name":"_relevant_changes?","children":[],"call":["watcher match ","files any? ","watchers any? ","(send\n  (send\n    (lvar :scope) :grouped_plugins) :map) flatten ","plugins map flatten ","plugins map ","scope grouped_plugins map ","scope grouped_plugins ","Guard  state scope ","Guard  state ","changes values flatten ","changes values "," _scoped_watchers ","changes values flatten  any? ","(send\n  (send\n    (lvar :scope) :grouped_plugins) :map) flatten  any? "," _scoped_watchers  any? ","(send\n  (send\n    (lvar :Guard  state scope ) :grouped_plugins) :map) flatten ","Guard  state scope  grouped_plugins map ","Guard  state scope  grouped_plugins ","Guard  state Guard  state scope  "," _scoped_(send\n  (send\n    (lvar :scope) :grouped_plugins) :map) flatten  "," _scoped_ _scoped_watchers  "," _Guard  state scope d_watchers "]}," Guard async_queue_add":{"type":"method","name":"async_queue_add","children":[],"call":[" interactor background "," interactor ","Thread  new ","@queue << "]}," Guard init":{"type":"method","name":"init","children":[],"call":["Internals State  new "]}," Guard UI reset_and_clear":{"type":"method","name":"reset_and_clear","children":[],"call":[" clear "]}," Guard UI level=":{"type":"method","name":"level=","children":[],"call":[" logger level= "," logger ","@logger level= "," options logger_config level= "," options logger_config "," options "]}," Guard UI reset_logger":{"type":"method","name":"reset_logger","children":[],"call":[]}," Guard Terminal clear":{"type":"method","name":"clear","children":[],"call":[" fail ","exit_code == "," Guard Sheller  system ","Gem  win_platform? ","Shellany Sheller  system "]}," Guard Sheller _shellize_if_needed":{"type":"method","name":"_shellize_if_needed","children":[],"call":[]}," Guard Sheller _system_with_capture":{"type":"method","name":"_system_with_capture","children":[],"call":[]}," Guard Sheller _system_with_no_capture":{"type":"method","name":"_system_with_no_capture","children":[],"call":[]}," Guard Sheller system":{"type":"method","name":"system","children":[],"call":[]}," Guard Sheller stderr":{"type":"method","name":"stderr","children":[],"call":[" run "," ran? "]}," Guard Sheller stdout":{"type":"method","name":"stdout","children":[],"call":[" run "," ran? "]}," Guard Sheller ok?":{"type":"method","name":"ok?","children":[],"call":["@status success? "," run "," ran? "]}," Guard Sheller ran?":{"type":"method","name":"ran?","children":[],"call":[]}," Guard Sheller run":{"type":"method","name":"run","children":[],"call":[" ok? "," class _system_with_capture "," class "," ran? "," class _system "]}," Guard Sheller initialize":{"type":"method","name":"initialize","children":[],"call":[" fail ","args empty? "]}," Guard Runner _run_group_plugins":{"type":"method","name":"_run_group_plugins","children":[],"call":["UI  info "," format ","failed_plugin class name ","failed_plugin class ","plugins each "," catch "]}," Guard Runner _supervise":{"type":"method","name":"_supervise","children":[],"call":["UI  info ","plugin class name ","plugin class ","Guard  state session plugins remove ","Guard  state session plugins ","Guard  state session ","Guard  state ","UI  error ","$! backtrace join ","$! backtrace ","$! message ","$! class ","plugin hook "," throw ","plugin send "," catch "," class stopping_symbol_for "," class ","UI  options with_progname ","UI  options "," Guard UI  info "," Guard  remove_plugin "," Guard UI  error "]}," Guard Reevaluator _add_self_to_plugins":{"type":"method","name":"_add_self_to_plugins","children":[],"call":["Guard  state session plugins add ","Guard  state session plugins ","Guard  state session ","Guard  state ","Watcher  new "," _relative_pathname to_s "," _relative_pathname "," _evaluator path "," _evaluator "]}," Guard Reevaluator _evaluator":{"type":"method","name":"_evaluator","children":[],"call":["Guardfile Evaluator  new ","Guard  state session evaluator_options ","Guard  state session ","Guard  state "]}," Guard Reevaluator reevaluate":{"type":"method","name":"reevaluate","children":[],"call":["Runner  new run ","Runner  new ","Notifier  notify ","UI  info ","Guard  send ","Notifier  connect ","Guard  state session notify_options ","Guard  state session ","Guard  state ","evaluator evaluate ","Notifier  disconnect ","Guard  state reset_session ","evaluator inline? "," _evaluator "," _evaluator  evaluate "," _evaluator  inline? "," _ _evaluator  "]}," Guard Reevaluator run_on_modifications":{"type":"method","name":"run_on_modifications","children":[],"call":[" throw "," _add_self_to_plugins ","UI  warning "," reevaluate ","path == "," Pathname ","files any? ","evaluator path "," _evaluator "," Guard  restore_scope "," Guard  evaluator reevaluate_guardfile "," Guard  evaluator "," Guard  save_scope "," Guard Watcher  match_guardfile? "," Guard  add_plugin "," Guard Watcher  new "," Guard UI  warning ","Guard Guardfile Evaluator  new reevaluate_guardfile ","Guard Guardfile Evaluator  new ","Guard  options ","evaluator path  == ","evaluator evaluator path  "," _evaluator  path "," _ _evaluator  "," Guard   _evaluator  reevaluate_guardfile "," Guard   _evaluator  "]}," Guard PluginUtil _full_gem_path":{"type":"method","name":"_full_gem_path","children":[],"call":["Gem Specification  find_by_name full_gem_path ","Gem Specification  find_by_name "]}," Guard PluginUtil _gem_valid?":{"type":"method","name":"_gem_valid?","children":[],"call":["File  exist? ","File  join ","gem name ","gem full_gem_path ","gem name =~ ","gem name == "]}," Guard Plugin _register_callbacks":{"type":"method","name":"_register_callbacks","children":[],"call":[" class add_callback ","callback [] "," class "," callbacks each "," callbacks ","Hooker  add_callback "]}," Guard Plugin to_s":{"type":"method","name":"to_s","children":[],"call":[" options "," callbacks "," watchers "," group "," name "," class "]}," Guard Plugin title":{"type":"method","name":"title","children":[],"call":[" class non_namespaced_classname "," class "]}," Guard Plugin name":{"type":"method","name":"name","children":[],"call":[" class non_namespaced_name "," class "]}," Guard Plugin template":{"type":"method","name":"template","children":[],"call":[]}," Guard Plugin non_namespaced_name":{"type":"method","name":"non_namespaced_name","children":[],"call":[]}," Guard Plugin non_namespaced_classname":{"type":"method","name":"non_namespaced_classname","children":[],"call":[]}," Guard Plugin hook":{"type":"method","name":"hook","children":[],"call":[" class notify ","hook_name to_sym "," class ","UI  debug "," caller [] [] "," caller [] "," caller ","event is_a? "]}," Guard Plugin reset_callbacks!":{"type":"method","name":"reset_callbacks!","children":[],"call":[]}," Guard Plugin notify":{"type":"method","name":"notify","children":[],"call":[]}," Guard Plugin add_callback":{"type":"method","name":"add_callback","children":[],"call":[]}," Guard Plugin callbacks":{"type":"method","name":"callbacks","children":[],"call":[]}," Guard Notifier Tmux _all?":{"type":"method","name":"_all?","children":[],"call":["Defaults  option "," options "]}," Guard Notifier Tmux _session":{"type":"method","name":"_session","children":[],"call":[]}," Guard Notifier Tmux _end_session":{"type":"method","name":"_end_session","children":[],"call":[]}," Guard Notifier Tmux _start_session":{"type":"method","name":"_start_session","children":[],"call":[]}," Guard Notifier Tmux display_title":{"type":"method","name":"display_title","children":[],"call":["Client  set "," _all? ","title_format % ","message split first ","message split ","opts fetch ","Defaults  option ","(begin\n  (lvar :type)) to_sym ","options fetch "," _run_client ","DEFAULTS  [] "," _tmux_version >= "," _tmux_version "," _quiet_option "," class _quiet_option "," class ","opts fetch  % ","options fetch  % ","title_(begin\n  (lvar :type)) to_sym  % ","Defaults  option  fetch ","opts fetch  fetch "]}," Guard Notifier Tmux Session close":{"type":"method","name":"close","children":[],"call":["Client  unset ","options each ","@options_store each "]}," Guard Notifier Tmux Session initialize":{"type":"method","name":"initialize","children":[],"call":["@options_store []= ","(pair\n  (str \"status-left-bg\")\n  (nil)) merge ","Client  parse_options ","Client  clients each ","Client  clients "]}," Guard Notifier Tmux Client _run":{"type":"method","name":"_run","children":[],"call":["Sheller  run ","(send\n  (array\n    (const nil :CLIENT)) :+\n  (lvar :args)) join ","(const nil :CLIENT) + "]}," Guard Notifier Tmux Client _capture":{"type":"method","name":"_capture","children":[],"call":["Sheller  stdout ","(send\n  (array\n    (const nil :CLIENT)) :+\n  (lvar :args)) join ","(const nil :CLIENT) + "]}," Guard Notifier Tmux Client _parse_option":{"type":"method","name":"_parse_option","children":[],"call":["line partition map reject ","line partition map ","line partition "]}," Guard Notifier Tmux Client parse_options":{"type":"method","name":"parse_options","children":[],"call":["Hash  [] "," _parse_option ","output lines map ","output lines "," _capture "," _capture  lines map "," _capture  lines "]}," Guard Notifier Tmux Client unset":{"type":"method","name":"unset","children":[],"call":[" _run ","client strip "," set "]}," Guard Notifier Tmux Client display":{"type":"method","name":"display","children":[],"call":[" _run ","client strip ","Client  display "," clients each "," clients "]}," Guard Notifier Tmux Client set":{"type":"method","name":"set","children":[],"call":[" _run ","client strip ","Client  set "," clients each "," clients "]}," Guard Notifier Tmux Client clients":{"type":"method","name":"clients","children":[],"call":["ttys delete ","ttys split "," _capture ","ttys split  delete "," _capture  delete ","ttys split  split "," _capture  split "]}," Guard Notifier Tmux Client version":{"type":"method","name":"version","children":[],"call":[" Float "," _capture [] "," _capture "]}," Guard Notifier Tmux Defaults []":{"type":"method","name":"[]","children":[],"call":[]}," Guard Notifier Tmux Defaults option":{"type":"method","name":"option","children":[],"call":[]}," Guard Notifier _notify":{"type":"method","name":"_notify","children":[],"call":[" Guard UI  debug ","e backtrace join ","e backtrace "," Guard UI  error ","e message ","notifier name ","notifier notify ","message_options dup ","klass new ","klass new  name ","klass new  notify "]}," Guard Notifier _client?":{"type":"method","name":"_client?","children":[],"call":["pid != "," _env notify_pid "," _env "," _env notify_pid  != "," _env notify_ _env notify_pid  "]}," Guard Notifier _check_server!":{"type":"method","name":"_check_server!","children":[],"call":[" fail "," _client? "]}," Guard Notifier _create_env":{"type":"method","name":"_create_env","children":[],"call":["env create_method "," Integer ","data != ","Internals Environment  new tap ","Internals Environment  new "]}," Guard Notifier _env":{"type":"method","name":"_env","children":[],"call":[" _create_env ","Env  new "]}," Guard Notifier add":{"type":"method","name":"add","children":[],"call":["(or\n  (ivar :@detected)\n  (send\n    (const nil :Detected) :new\n    (const nil :SUPPORTED))) add ","Detected  new "," turn_off "," active? ","name == "," enabled? "," _check_server! "]}," Guard Notifier active?":{"type":"method","name":"active?","children":[],"call":[" _env notify_active? "," _env "]}," Guard Notifier disconnect":{"type":"method","name":"disconnect","children":[],"call":[" _env notify_pid= "," _env ","@detected reset ","@detected nil? "," turn_off "," active? "," _client? "]}," Guard Notifier connect":{"type":"method","name":"connect","children":[],"call":[" Guard UI  info ","e to_s "," turn_on ","@detected detect ","options [] "," enabled? "," fail "," active? "," _env notify_pid= "," _env "," _client? ","Detected  new ","Detected  new  detect "]}," Guard Notifier Detected _data":{"type":"method","name":"_data","children":[],"call":["@environment notifiers "]}," Guard Notifier Detected _to_module":{"type":"method","name":"_to_module","children":[],"call":["notifier last ","n == ","group detect ","@supported each "]}," Guard Notifier Detected add":{"type":"method","name":"add","children":[],"call":["item []= ","item [] == ","item [] ","all each ","@environment notifiers= ","all << ","klass available? ","names include? ","all map map ","all map ","@environment notifiers "," _to_module ","@environment notifiers  each ","@environment notifiers  << "," _to_module  available? ","all map map  include? ","@environment notifiers  map map ","@environment notifiers  map "]}," Guard Notifier Detected available":{"type":"method","name":"available","children":[],"call":["entry [] "," _to_module "," _data map "," _data "]}," Guard Notifier Detected detect":{"type":"method","name":"detect","children":[],"call":[" fail "," _data empty? "," _data "," add ","group detect ","@supported each "]}," Guard Notifier Detected reset":{"type":"method","name":"reset","children":[],"call":["@environment notifiers= "]}," Guard Notifier Detected initialize":{"type":"method","name":"initialize","children":[],"call":["YAML  load ","env create_method ","YAML  dump ","Internals Environment  new tap ","Internals Environment  new ","YamlEnvStorage  new "]}," Guard Jobs Sleep handle_interrupt":{"type":"method","name":"handle_interrupt","children":[],"call":["Thread  main raise ","Thread  main "]}," Guard Jobs Sleep background":{"type":"method","name":"background","children":[],"call":["Thread  main wakeup ","Thread  main "]}," Guard Jobs Sleep foreground":{"type":"method","name":"foreground","children":[],"call":["UI  debug "," sleep "," Guard UI  debug "]}," Guard Jobs PryWrapper _clip_name":{"type":"method","name":"_clip_name","children":[],"call":["Pry  view_clip "]}," Guard Jobs PryWrapper _prompt":{"type":"method","name":"_prompt","children":[],"call":[" _clip_name "," _scope_for_prompt ","nest_level zero? ","Guard  listener paused? ","Guard  listener ","pry input_array size ","pry input_array "," proc "," _history "," Guard  listener paused? "," Guard  listener "," _pry input_array size  "]}," Guard Jobs PryWrapper _scope_for_prompt":{"type":"method","name":"_scope_for_prompt","children":[],"call":["titles + ","titles == ","Guard  state scope titles join ","Guard  state scope titles ","Guard  state scope ","Guard  state "," _join_scope_for_prompt "," Guard  scope [] empty? ! "," Guard  scope [] empty? "," Guard  scope [] "," Guard  scope ","(sym :plugins) detect ","Guard  state scope titles join  + ","Guard  state scope titles join  == ","Guard  state scope Guard  state scope titles join  join ","Guard  state scope Guard  state scope titles join  "]}," Guard Jobs PryWrapper _configure_prompt":{"type":"method","name":"_configure_prompt","children":[],"call":["Pry  config prompt= "," _prompt ","Pry  config "," _pry_config prompt= "," _pry_config ","Pry Prompt  new ","Pry Prompt  is_a? ","Pry  config Pry Prompt  new = "," _Pry Prompt  new  "," _pry_config Pry Prompt  new = "]}," Guard Jobs PryWrapper _create_group_commands":{"type":"method","name":"_create_group_commands","children":[{"type":"method","name":"process","children":[],"asgn":[],"call":["Pry  run_command "," match "]}],"call":["Pry  run_command "," match "," group ","Pry  commands create_command ","group name to_s ","group name ","Pry  commands ","group title ","group name == ","Guard  state session groups all each ","Guard  state session groups all ","Guard  state session groups ","Guard  state session ","Guard  state "," _pry_commands create_command "," _pry_commands "," Guard  groups each "," Guard  groups "]}," Guard Jobs PryWrapper _create_guard_commands":{"type":"method","name":"_create_guard_commands","children":[{"type":"method","name":"process","children":[],"asgn":[],"call":["Pry  run_command "," match "]}],"call":["Pry  run_command "," match "," group ","Pry  commands create_command ","guard_plugin name ","Pry  commands ","guard_plugin title ","Guard  state session plugins all each ","Guard  state session plugins all ","Guard  state session plugins ","Guard  state session ","Guard  state "," _pry_commands create_command "," _pry_commands "," Guard  plugins each "," Guard  plugins "]}," Guard Jobs PryWrapper _create_command_aliases":{"type":"method","name":"_create_command_aliases","children":[],"call":["Pry  commands alias_command ","command to_s ","Pry  commands ","SHORTCUTS  each "," _pry_commands alias_command "," _pry_commands "]}," Guard Jobs PryWrapper _create_run_all_command":{"type":"method","name":"_create_run_all_command","children":[],"call":["Pry  run_command ","Pry  commands block_command ","Pry  commands "," _pry_commands block_command "," _pry_commands "]}," Guard Jobs PryWrapper _replace_reset_command":{"type":"method","name":"_replace_reset_command","children":[],"call":[" exec "," output puts "," output ","Pry  commands command ","Pry  commands "," _pry_commands command "," _pry_commands "]}," Guard Jobs PryWrapper _setup_commands":{"type":"method","name":"_setup_commands","children":[],"call":[" _create_group_commands "," _create_guard_commands "," _create_command_aliases "," _create_run_all_command "," _replace_reset_command "]}," Guard Jobs PryWrapper _add_restore_visibility_hook":{"type":"method","name":"_add_restore_visibility_hook","children":[],"call":["@terminal_settings echo ","Pry  config hooks add_hook ","Pry  config hooks ","Pry  config "," _pry_config hooks add_hook "," _pry_config hooks "," _pry_config "]}," Guard Jobs PryWrapper _add_load_project_guard_rc_hook":{"type":"method","name":"_add_load_project_guard_rc_hook","children":[],"call":[" load ","guard_rc exist? ","Pry  config hooks add_hook ","Pry  config hooks ","Pry  config "," _pry_config hooks add_hook "," _pry_config hooks "," _pry_config "]}," Guard Jobs PryWrapper _add_load_guard_rc_hook":{"type":"method","name":"_add_load_guard_rc_hook","children":[],"call":[" load ","p exist? ","guard_rc expand_path tap ","guard_rc expand_path ","Pry  config hooks add_hook ","Pry  config hooks ","Pry  config "," _pry_config hooks add_hook "," _pry_config hooks "," _pry_config "]}," Guard Jobs PryWrapper _add_hooks":{"type":"method","name":"_add_hooks","children":[],"call":[" _add_restore_visibility_hook ","@terminal_settings configurable? "," _add_load_project_guard_rc_hook ","Pathname  pwd + ","Pathname  pwd "," _add_load_guard_rc_hook "," Pathname ","options [] "]}," Guard Jobs PryWrapper _setup":{"type":"method","name":"_setup","children":[],"call":[" _configure_prompt "," _setup_commands ","Commands Scope  import ","Commands Show  import ","Commands Reload  import ","Commands Pause  import ","Commands Notification  import ","Commands Change  import ","Commands All  import "," _add_hooks ","Pry  config history file= ","File  expand_path ","Pry  config history ","Pry  config ","options [] ","Pry  config should_load_local_rc= ","Pry  config should_load_rc= "," _configure_history_file "," _pry_config should_load_local_rc= "," _pry_config "," _pry_config should_load_rc= "," Guard Commands Scope  import "," Guard Commands Show  import "," Guard Commands Reload  import "," Guard Commands Pause  import "," Guard Commands Notification  import "," Guard Commands Change  import "," Guard Commands All  import "]}," Guard Jobs PryWrapper _kill_pry":{"type":"method","name":"_kill_pry","children":[],"call":["@thread kill ","@thread nil? ","@mutex synchronize "]}," Guard Jobs PryWrapper _killed?":{"type":"method","name":"_killed?","children":[],"call":["th nil? ","@mutex synchronize "]}," Guard Jobs PryWrapper _switch_to_pry":{"type":"method","name":"_switch_to_pry","children":[],"call":["th join ","th nil? ","@thread join ","Pry  start ","Thread  new ","@mutex synchronize "]}," Guard Jobs PryWrapper handle_interrupt":{"type":"method","name":"handle_interrupt","children":[],"call":["thread raise "," fail "]}," Guard Jobs PryWrapper background":{"type":"method","name":"background","children":[],"call":[" _kill_pry "]}," Guard Jobs PryWrapper foreground":{"type":"method","name":"foreground","children":[],"call":["@terminal_settings restore ","UI  debug ","UI  reset_line "," _killed? "," _switch_to_pry ","@terminal_settings save "," Guard UI  debug "," Guard UI  reset_line ","thread nil? ","@thread join "," _start_pry "]}," Guard Jobs PryWrapper initialize":{"type":"method","name":"initialize","children":[],"call":[" _setup ","TerminalSettings  new ","Mutex  new "]}," Guard Jobs TerminalSettings configurable?":{"type":"method","name":"configurable?","children":[],"call":[]}," Guard Jobs TerminalSettings echo":{"type":"method","name":"echo","children":[],"call":["Sheller  run "," configurable? ","Shellany Sheller  run "," Guard Sheller  run "]}," Guard Jobs TerminalSettings save":{"type":"method","name":"save","children":[],"call":["Sheller  stdout chomp ","Sheller  stdout "," configurable? ","Shellany Sheller  stdout chomp ","Shellany Sheller  stdout "," Guard Sheller  stdout chomp "," Guard Sheller  stdout "]}," Guard Jobs TerminalSettings restore":{"type":"method","name":"restore","children":[],"call":["Sheller  run "," configurable? ","Shellany Sheller  run "," Guard Sheller  run "]}," Guard Jobs TerminalSettings initialize":{"type":"method","name":"initialize","children":[],"call":["Sheller  run ","Shellany Sheller  run "," Guard Sheller  run "]}," Guard Jobs Base handle_interrupt":{"type":"method","name":"handle_interrupt","children":[],"call":[]}," Guard Jobs Base background":{"type":"method","name":"background","children":[],"call":[]}," Guard Jobs Base foreground":{"type":"method","name":"foreground","children":[],"call":[]}," Guard Jobs Base initialize":{"type":"method","name":"initialize","children":[],"call":[]}," Guard Internals Traps handle":{"type":"method","name":"handle","children":[],"call":[]}," Guard Internals Tracing untrace":{"type":"method","name":"untrace","children":[],"call":[]}," Guard Internals Tracing trace":{"type":"method","name":"trace","children":[],"call":[]}," Guard Internals State reset_session":{"type":"method","name":"reset_session","children":[],"call":["Session  new ","@session options dup ","@session options ","Notifier  connect "," session notify_options "," session ","Runner  new run ","Runner  new ","block call ","Notifier  disconnect ","Session  new  options dup ","@session @session options dup  dup ","Session  new  options ","@session @session options dup  "," session notify_@session options dup  "]}," Guard Internals State initialize":{"type":"method","name":"initialize","children":[],"call":["Debugging  start "," session debug? "," session ","Scope  new ","Session  new "]}," Guard Internals Session interactor_name":{"type":"method","name":"interactor_name","children":[],"call":[]}," Guard Internals Session notify_options":{"type":"method","name":"notify_options","children":[],"call":["@options [] ","names include? ","@guardfile_notifier_options keys ","@guardfile_notifier_options keys  include? "]}," Guard Internals Session evaluator_options":{"type":"method","name":"evaluator_options","children":[],"call":["opts []= "," options [] "," options ","@options [] "]}," Guard Internals Session listener_args":{"type":"method","name":"listener_args","children":[],"call":["File  expand_path "," watchdirs map "," watchdirs ","listener_options []= "," options [] "," options ","(sym :latency) each ","@options [] "]}," Guard Internals Session watchdirs=":{"type":"method","name":"watchdirs=","children":[],"call":["File  expand_path ","dirs map ","Dir  pwd ","dirs empty? "]}," Guard Internals Session watchdirs":{"type":"method","name":"watchdirs","children":[],"call":[]}," Guard Internals Session debug?":{"type":"method","name":"debug?","children":[],"call":[]}," Guard Internals Session clearing?":{"type":"method","name":"clearing?","children":[],"call":[]}," Guard Internals Session clearing":{"type":"method","name":"clearing","children":[],"call":[]}," Guard Internals Session guardfile_scope":{"type":"method","name":"guardfile_scope","children":[],"call":[" fail ","opts inspect ","opts empty? "," Array ","opts delete ","scope dup "," Array + ","scope dup  inspect ","scope dup  empty? ","scope dup  delete "]}," Guard Internals Session initialize":{"type":"method","name":"initialize","children":[],"call":["@options [] "," Array ","Internals Groups  new ","Internals Plugins  new ","Options  new ","Groups  new ","Plugins  new ","Options  new  [] "]}," Guard Internals Session cmdline_plugins":{"type":"method","name":"cmdline_plugins","children":[],"call":["@cmdline_plugins dup freeze ","@cmdline_plugins dup "]}," Guard Internals Session cmdline_groups":{"type":"method","name":"cmdline_groups","children":[],"call":["@cmdline_groups dup freeze ","@cmdline_groups dup "]}," Guard Internals Scope _plugins":{"type":"method","name":"_plugins","children":[],"call":["Guard  state session plugins ","Guard  state session ","Guard  state "]}," Guard Internals Scope _groups":{"type":"method","name":"_groups","children":[],"call":["Guard  state session groups ","Guard  state session ","Guard  state "]}," Guard Internals Scope _find_non_empty_scope":{"type":"method","name":"_find_non_empty_scope","children":[],"call":["(send nil :Array\n  (send\n    (lvar :local_scope) :[]\n    (lvar :type))) map detect ","(send nil :Array\n  (send\n    (lvar :local_scope) :[]\n    (lvar :type))) map "," to_hash [] "," to_hash "," Array ","local_scope [] "]}," Guard Internals Scope _instantiate":{"type":"method","name":"_instantiate","children":[],"call":["Guard  state session send all first ","Guard  state session send all ","Guard  state session send ","(begin\n  (lvar :meth)) to_sym ","Guard  state session ","Guard  state ","obj is_a? "]}," Guard Internals Scope _build_scope":{"type":"method","name":"_build_scope","children":[],"call":["(if\n  (send\n    (lvar :type) :==\n    (sym :group))\n  (send nil :_groups)\n  (send nil :_plugins)) all first ","(if\n  (send\n    (lvar :type) :==\n    (sym :group))\n  (send nil :_groups)\n  (send nil :_plugins)) all "," _plugins "," _groups ","type == "," Array map "," Array ","source empty? ! ","source empty? ","(lvar :interactor) detect "," instance_variable_get ","Guard  state session send ","Guard  state session ","Guard  state ","(send\n  (send nil :Array\n    (lvar :items)) :map) compact ","(lvar : instance_variable_get ) detect "]}," Guard Internals Scope _scope_names":{"type":"method","name":"_scope_names","children":[],"call":["p name ","p respond_to? ","items map "," Array ","new_scope [] ","items empty? "," Array  map "," Array  empty? "]}," Guard Internals Scope titles":{"type":"method","name":"titles","children":[],"call":["hash [] map ","hash [] ","hash [] empty? "," to_hash ","groups empty? ","groups nil? ","plugins map ","plugins empty? ","plugins nil? ","hash []  empty? ","hash []  nil? ","hash []  map "]}," Guard Internals Scope from_interactor":{"type":"method","name":"from_interactor","children":[],"call":[" Array ","scope [] "]}," Guard Internals Scope grouped_plugins":{"type":"method","name":"grouped_plugins","children":[],"call":["Guard  state session plugins all ","group name ","Guard  state session plugins ","Guard  state session ","Guard  state ","plugin_or_group is_a? ","items map ","(send\n  (array\n    (send nil :_instantiate\n      (sym :group)\n      (sym :common))) :+\n  (send nil :Array\n    (lvar :found))) compact ","(send nil :_instantiate\n  (sym :group)\n  (sym :common)) + "," Array "," _instantiate ","g name == ","g name ","groups any? "," Array map ","Guard  state session groups all ","Guard  state session groups "," _find_non_empty_scope ","Guard  state session Guard  state session plugins all  all ","Guard  state session  _find_non_empty_scope  all ","Guard  state session Guard  state session plugins all  ","Guard  state session  _find_non_empty_scope  ","(send\n  (array\n    (send nil :_instantiate\n      (sym :group)\n      (sym :common))) :+\n  (send nil :Array\n    (lvar :found))) compact  map ","(send\n  (array\n    (send nil :_instantiate\n      (sym :group)\n      (sym :common))) :+\n  (send nil :Array\n    (lvar : _find_non_empty_scope ))) compact "]}," Guard Internals Scope to_hash":{"type":"method","name":"to_hash","children":[],"call":["(pair\n  (sym :plugins)\n  (send nil :_build_scope\n    (sym :plugin))) dup freeze ","(pair\n  (sym :plugins)\n  (send nil :_build_scope\n    (sym :plugin))) dup "," _build_scope ","(pair\n  (sym :plugins)\n  (send nil :_hashify_scope\n    (sym :plugin))) dup freeze ","(pair\n  (sym :plugins)\n  (send nil :_hashify_scope\n    (sym :plugin))) dup "," _hashify_scope "]}," Guard Internals Scope initialize":{"type":"method","name":"initialize","children":[],"call":[]}," Guard Internals Queue _run_actions":{"type":"method","name":"_run_actions","children":[],"call":[" fail ","action inspect ","@commander send ","@commander respond_to? ","namespaced_action to_s sub ","namespaced_action to_s ","args shift ","action_args dup ","actions each ","namespaced_action to_s sub  inspect ","namespaced_namespaced_action to_s sub  to_s sub ","args shift  to_s sub ","namespaced_namespaced_action to_s sub  to_s ","args shift  to_s ","action_args dup  shift ","namespaced_action to_s sub _args dup ","action_action_args dup  dup ","namespaced_action to_s sub s each "]}," Guard Internals Queue <<":{"type":"method","name":"<<","children":[],"call":["@queue << "]}," Guard Internals Queue pending?":{"type":"method","name":"pending?","children":[],"call":["@queue empty? ! ","@queue empty? "]}," Guard Internals Queue process":{"type":"method","name":"process","children":[],"call":["Runner  new run_on_changes ","changes values ","Runner  new ","changes values all? "," _run_actions ","changes [] ","item each ","actions << ","(lvasgn :item\n  (send\n    (ivar :@queue) :pop)) first is_a? ","(lvasgn :item\n  (send\n    (ivar :@queue) :pop)) first ","@queue pop "," pending? ","@queue pop  each ","(lvasgn :@queue pop \n  (send\n    (ivar :@queue) :pop)) first is_a? ","(lvasgn :@queue pop \n  (send\n    (ivar :@queue) :pop)) first "]}," Guard Internals Queue initialize":{"type":"method","name":"initialize","children":[],"call":[" Queue  new "]}," Guard Internals Plugins matcher_for":{"type":"method","name":"matcher_for","children":[],"call":["plugin group name == ","v to_sym ","plugin group name ","plugin group ","plugin name == ","v to_s downcase gsub ","v to_s downcase ","v to_s ","plugin name ","filter all? "," lambda ","plugin name =~ ","filter to_s downcase gsub ","filter to_s downcase ","filter to_s ","v to_s downcase delete ","filter to_s downcase delete "]}," Guard Internals Plugins add":{"type":"method","name":"add","children":[],"call":["@plugins << ","PluginUtil  new initialize_plugin ","PluginUtil  new "]}," Guard Internals Plugins remove":{"type":"method","name":"remove","children":[],"call":["@plugins delete "]}," Guard Internals Plugins all":{"type":"method","name":"all","children":[],"call":["matcher call ","@plugins select "," matcher_for ","filter nil? "," matcher_for  call ","  matcher_for _for "]}," Guard Internals Plugins initialize":{"type":"method","name":"initialize","children":[],"call":[]}," Guard Internals Helpers _relative_pathname":{"type":"method","name":"_relative_pathname","children":[],"call":["full_path relative_path_from ","Pathname  pwd "," Pathname "," Pathname  relative_path_from "]}," Guard Internals Groups matcher_for":{"type":"method","name":"matcher_for","children":[],"call":[" fail ","filter inspect ","group name to_s =~ ","group name to_s ","group name "," lambda ","group name == ","filter to_sym "]}," Guard Internals Groups add":{"type":"method","name":"add","children":[],"call":["@groups << "," fail ","options empty? ","name == ","Group  new tap ","Group  new "," all first "," all "]}," Guard Internals Groups all":{"type":"method","name":"all","children":[],"call":["matcher call ","@groups select "," matcher_for ","filter nil? "," matcher_for  call ","  matcher_for _for "]}," Guard Internals Groups initialize":{"type":"method","name":"initialize","children":[],"call":["Group  new ","DEFAULT_GROUPS  map "]}," Guard Internals Environment _sanitize":{"type":"method","name":"_sanitize","children":[],"call":["meth [] upcase ","meth [] "]}," Guard Internals Environment method_missing":{"type":"method","name":"method_missing","children":[],"call":["Loader  new load ","ENV  [] ","Loader  new ","ENV  []= ","Dumper  new dump ","Dumper  new ","args size == ","args size "," format "," _sanitize ","@methods [] "," fail ","@methods key? "]}," Guard Internals Environment create_method":{"type":"method","name":"create_method","children":[],"call":["@methods []= "," fail ","@methods key? "]}," Guard Internals Environment initialize":{"type":"method","name":"initialize","children":[],"call":[]}," Guard Internals Environment Dumper dump":{"type":"method","name":"dump","children":[],"call":["raw_value to_s ","raw_value nil? ","callback call "]}," Guard Internals Environment Dumper initialize":{"type":"method","name":"initialize","children":[],"call":[]}," Guard Internals Environment Loader _to_bool":{"type":"method","name":"_to_bool","children":[],"call":[" fail "]}," Guard Internals Environment Loader load":{"type":"method","name":"load","children":[],"call":[" _to_bool ","callback call "]}," Guard Internals Environment Loader initialize":{"type":"method","name":"initialize","children":[],"call":["meth to_s end_with? ","meth to_s "]}," Guard Internals Environment AlreadyExistsError message":{"type":"method","name":"message","children":[],"call":[" format ","@meth inspect "]}," Guard Internals Environment NoMethodError message":{"type":"method","name":"message","children":[],"call":[" format ","@meth inspect "]}," Guard Internals Environment MethodError initialize":{"type":"method","name":"initialize","children":[],"call":[]}," Guard Internals Debugging _untrace":{"type":"method","name":"_untrace","children":[],"call":[" Guard Internals Tracing  untrace ","Tracing  untrace "]}," Guard Internals Debugging _trace":{"type":"method","name":"_trace","children":[],"call":[" Guard Internals Tracing  trace ","Tracing  trace "]}," Guard Internals Debugging _reset":{"type":"method","name":"_reset","children":[],"call":[" _untrace ","TRACES  each "]}," Guard Internals Debugging _notify":{"type":"method","name":"_notify","children":[],"call":[" Guard UI  debug ","args join ","UI  debug "]}," Guard Internals Debugging stop":{"type":"method","name":"stop","children":[],"call":[" _reset "," Guard UI  level= ","UI  level= "]}," Guard Internals Debugging start":{"type":"method","name":"start","children":[],"call":[" _trace "," method ","TRACES  each "," Guard UI  level= ","Thread  abort_on_exception= ","UI  level= "]}," Guard Interactor enabled?":{"type":"method","name":"enabled?","children":[],"call":["@enabled nil? "]}," Guard Interactor handle_interrupt":{"type":"method","name":"handle_interrupt","children":[],"call":[" idle_job handle_interrupt "," idle_job "]}," Guard Interactor background":{"type":"method","name":"background","children":[],"call":[" idle_job background "," idle_job "]}," Guard Interactor foreground":{"type":"method","name":"foreground","children":[],"call":[" idle_job foreground "," idle_job "]}," Guard Interactor interactive?":{"type":"method","name":"interactive?","children":[],"call":[]}," Guard Guardfile Generator _ui":{"type":"method","name":"_ui","children":[],"call":[" Guard UI  send ","UI  send "]}," Pathname binwrite":{"type":"method","name":"binwrite","children":[],"call":["IO  binwrite "," to_s "]}," Guard Guardfile Evaluator _from_deprecated":{"type":"method","name":"_from_deprecated","children":[],"call":["res []= ","opts [] ","opts key? ","opts dup ","opts dup  []= "]}," Guard Guardfile Evaluator _guardfile_contents":{"type":"method","name":"_guardfile_contents","children":[],"call":["(ivar :@contents) compact join ","(ivar :@contents) compact "," Pathname expand_path read "," Pathname expand_path "," Pathname ","Pathname  new expand_path read ","Pathname  new expand_path ","Pathname  new "]}," Guard Guardfile Evaluator _read":{"type":"method","name":"_read","children":[],"call":[" abort "," Guard UI  error ","e backtrace ","e inspect "," fail ","full_path read "," Pathname expand_path "," Pathname ","UI  error ","Pathname  new expand_path ","Pathname  new ","path to_s "," Pathname expand_path  read ","Pathname  new expand_path  read "]}," Guard Guardfile Evaluator _use_default!":{"type":"method","name":"_use_default!","children":[],"call":[" fail "," _read ","guardfile == ","DEFAULT_GUARDFILES  last ","DEFAULT_GUARDFILES  each "]}," Guard Guardfile Evaluator _use_provided":{"type":"method","name":"_use_provided","children":[],"call":[" fail "," _read "," custom? "," exit "," Guard UI  error "," options [] "," options "," Guard UI  info "," _read_guardfile ","File  exist? "," options []= ","File  expand_path ","@source == ","@source nil? "]}," Guard Guardfile Evaluator _use_inline":{"type":"method","name":"_use_inline","children":[],"call":[" Guard UI  info "," options [] "," options ","@source == ","@source nil? ","UI  info "]}," Guard Guardfile Evaluator inline?":{"type":"method","name":"inline?","children":[],"call":["@type == "]}," Guard Guardfile Evaluator custom?":{"type":"method","name":"custom?","children":[],"call":["@type == "]}," Guard Guardfile Evaluator evaluate":{"type":"method","name":"evaluate","children":[],"call":["Dsl  new evaluate ","Dsl  new "," fail "," _guardfile_contents "," _use_default! "," _use_provided "," inline? "," _guardfile_ _guardfile_contents  "]}," Guard Guardfile Evaluator guardfile_source":{"type":"method","name":"guardfile_source","children":[],"call":[]}," Guard DslDescriber _add_row":{"type":"method","name":"_add_row","children":[],"call":["rows << "]}," Guard DslDescriber _merge_options":{"type":"method","name":"_merge_options","children":[],"call":["klass const_get merge ","klass const_get ","klass const_defined? ","notifier [] "]}," Guard Dsl _cleanup_backtrace":{"type":"method","name":"_cleanup_backtrace","children":[],"call":["path sub! ","File  realpath ","dirs detect ","raw_line sub ","raw_line split first ","raw_line split ","backtrace dup map ","backtrace dup ","dirs []= ","gem_paths each_with_index ","(or\n  (send\n    (const nil :ENV) :[]\n    (str \"GEM_PATH\"))\n  (str \"\")) split ","ENV  [] ","gem_env empty? ","Dir  pwd ","raw_line sub  sub! ","File  realraw_line sub  ","gem_raw_line sub s each_with_index ","(or\n  (send\n    (const nil :ENV) :[]\n    (str \"GEM_PATH\"))\n  (str \"\")) split  each_with_index "]}," Guard Dsl clearing":{"type":"method","name":"clearing","children":[],"call":["Guard  state session clearing ","on == ","Guard  state session ","Guard  state "]}," Guard Dsl directories":{"type":"method","name":"directories","children":[],"call":["Guard  state session watchdirs= ","Guard  state session ","Guard  state "," fail ","dir inspect ","Dir  exist? ","directories each "," Guard  watchdirs= "]}," Guard Dsl evaluate":{"type":"method","name":"evaluate","children":[],"call":[" raise "," format ","cleaned_backtrace join "," _cleanup_backtrace ","e backtrace "," instance_eval ","filename to_s "," _cleanup_backtrace  join "]}," Guard Deprecated Watcher ClassMethods match_guardfile?":{"type":"method","name":"match_guardfile?","children":[],"call":["File  expand_path == ","File  expand_path ","files any? ","evaluator guardfile_path "," Guard Guardfile Evaluator  new "," Guard  state session evaluator_options "," Guard  state session "," Guard  state ","UI  deprecation "," require ","File  expand_evaluator guardfile_path  == ","File  expand_evaluator guardfile_path  ","evaluator guardfile_evaluator guardfile_path  "," Guard Guardfile Evaluator  new  guardfile_path "," Guard  state session  Guard Guardfile Evaluator  new _options "," Guard  state session evaluator_ Guard  state session evaluator_options  "]}," Guard Deprecated Watcher add_deprecated":{"type":"method","name":"add_deprecated","children":[],"call":[]}," Guard Deprecated Guardfile ClassMethods initialize_all_templates":{"type":"method","name":"initialize_all_templates","children":[],"call":[" Guard Guardfile Generator  new initialize_all_templates "," Guard Guardfile Generator  new ","UI  deprecation "]}," Guard Deprecated Guardfile ClassMethods initialize_template":{"type":"method","name":"initialize_template","children":[],"call":[" Guard Guardfile Generator  new initialize_template "," Guard Guardfile Generator  new ","UI  deprecation "]}," Guard Deprecated Guardfile ClassMethods create_guardfile":{"type":"method","name":"create_guardfile","children":[],"call":[" Guard Guardfile Generator  new create_guardfile "," Guard Guardfile Generator  new ","UI  deprecation "]}," Guard Deprecated Guardfile add_deprecated":{"type":"method","name":"add_deprecated","children":[],"call":[]}," Guard Deprecated Guard ClassMethods options":{"type":"method","name":"options","children":[],"call":[" Guard  state session options "," Guard  state session "," Guard  state ","UI  deprecation ","(send\n  (const nil :Class) :new\n  (const nil :Hash)) new "," fail "," format ","hash key? "," private "," keys include? "," keys "," to_hash keys "," to_hash "," Guard  state session clearing ","hash fetch "," verify_key! "," to_hash to_a ","session interactor_name == ","session interactor_name ","session notify_options [] ","session notify_options "," Array map "," Array ","session watchdirs ","session debug? ","session clearing? ","Class  new "," delegate "," extend "," Guard  state  Guard  state session  options "," Guard  state  Guard  state session  "," to_hash  key? "," to_ to_hash  keys "," to_ to_hash  "," Guard  state  Guard  state session  clearing "," to_hash  fetch "," to_ to_hash  to_a "," Guard  state session  interactor_name == "," Guard  state session  interactor_name "," Guard  state session  notify_options [] "," Guard  state session  notify_options "," Guard  state session  watchdirs "," Guard  state session  debug? "," Guard  state session  clearing? "]}," Guard Deprecated Guard ClassMethods evaluate_guardfile":{"type":"method","name":"evaluate_guardfile","children":[],"call":[" Guard UI  error "," _pluginless_guardfile? ","evaluator evaluate "," Guard Guardfile Evaluator  new "," Guard  state session evaluator_options "," Guard  state session "," Guard  state ","UI  deprecation "," Guard Guardfile Evaluator  new  evaluate "," Guard  state session  Guard Guardfile Evaluator  new _options "," Guard  state session evaluator_ Guard  state session evaluator_options  "]}," Guard Deprecated Guard ClassMethods runner":{"type":"method","name":"runner","children":[],"call":[" Guard Runner  new ","UI  deprecation "]}," Guard Deprecated Guard ClassMethods reset_evaluator":{"type":"method","name":"reset_evaluator","children":[],"call":["UI  deprecation "]}," Guard Deprecated Guard ClassMethods evaluator":{"type":"method","name":"evaluator","children":[],"call":[" Guard Guardfile Evaluator  new "," Guard  state session evaluator_options "," Guard  state session "," Guard  state ","UI  deprecation "," Guard  options "," Guard  state session evaluator_ Guard  state session evaluator_options  "," Guard   Guard  state session evaluator_options  "]}," Guard Deprecated Guard ClassMethods lock":{"type":"method","name":"lock","children":[],"call":["UI  deprecation "]}," Guard Deprecated Guard ClassMethods running":{"type":"method","name":"running","children":[],"call":["UI  deprecation "]}," Guard Deprecated Guard ClassMethods guard_gem_names":{"type":"method","name":"guard_gem_names","children":[],"call":["PluginUtil  plugin_names ","UI  deprecation "]}," Guard Deprecated Guard ClassMethods locate_guard":{"type":"method","name":"locate_guard","children":[],"call":["PluginUtil  new plugin_location ","PluginUtil  new ","UI  deprecation "]}," Guard Deprecated Guard ClassMethods get_guard_class":{"type":"method","name":"get_guard_class","children":[],"call":["PluginUtil  new plugin_class ","PluginUtil  new ","UI  deprecation "]}," Guard Deprecated Guard ClassMethods add_guard":{"type":"method","name":"add_guard","children":[],"call":[" add_plugin "," Guard UI  deprecation "]}," Guard Deprecated Guard ClassMethods guards":{"type":"method","name":"guards","children":[],"call":[" plugins "," Guard UI  deprecation "," Guard  state session plugins all "," Guard  state session plugins "," Guard  state session "," Guard  state "]}," Guard Deprecated Guard add_deprecated":{"type":"method","name":"add_deprecated","children":[],"call":[]}," Guard Deprecated Evaluator reevaluate_guardfile":{"type":"method","name":"reevaluate_guardfile","children":[],"call":[" Guard Reevaluator  new reevaluate "," Guard Reevaluator  new ","UI  deprecation "," evaluate "," Guard  state reset_session "," Guard  state "," require "]}," Guard Deprecated Evaluator evaluate_guardfile":{"type":"method","name":"evaluate_guardfile","children":[],"call":[" evaluate ","UI  deprecation "]}," Guard Deprecated Evaluator add_deprecated":{"type":"method","name":"add_deprecated","children":[],"call":[]}," Guard Deprecated Dsl ClassMethods evaluate_guardfile":{"type":"method","name":"evaluate_guardfile","children":[],"call":[" Guard Guardfile Evaluator  new evaluate_guardfile "," Guard Guardfile Evaluator  new ","UI  deprecation "," require "]}," Guard Deprecated Dsl add_deprecated":{"type":"method","name":"add_deprecated","children":[],"call":[]}," Guard Config _create_env":{"type":"method","name":"_create_env","children":[],"call":["env create_method ","Internals Environment  new tap ","Internals Environment  new "]}," Guard Config _env":{"type":"method","name":"_env","children":[],"call":[" _create_env "]}," Guard Config silence_deprecations?":{"type":"method","name":"silence_deprecations?","children":[],"call":[" gem_silence_deprecations? "]}," Guard Config strict?":{"type":"method","name":"strict?","children":[],"call":[" _env strict? "," _env "]}," Guard Commands Show import":{"type":"method","name":"import","children":[{"type":"method","name":"process","children":[],"asgn":[],"call":[" Guard  async_queue_add "]}],"call":[]}," Guard Commands Scope import":{"type":"method","name":"import","children":[{"type":"method","name":"process","children":[],"asgn":[null,null],"call":["Guard  state scope from_interactor ","Guard  state scope ","Guard  state "," output puts "," output ","scope [] empty? ","scope [] ","scope [] empty? ","scope [] "," output puts ","unknown join "," output ","unknown empty? "," Guard Interactor  convert_scope "]}],"call":[]}," Guard Commands Reload import":{"type":"method","name":"import","children":[{"type":"method","name":"process","children":[],"asgn":[null,null],"call":[" Guard  async_queue_add "," output puts ","unknown join "," output ","unknown empty? ","Interactor  convert_scope "]}],"call":[]}," Guard Commands Pause import":{"type":"method","name":"import","children":[{"type":"method","name":"process","children":[],"asgn":[],"call":[" Guard  async_queue_add "]}],"call":[]}," Guard Commands Notification import":{"type":"method","name":"import","children":[{"type":"method","name":"process","children":[],"asgn":[],"call":[" Guard Notifier  toggle "]}],"call":[]}," Guard Commands Change import":{"type":"method","name":"import","children":[{"type":"method","name":"process","children":[],"asgn":[],"call":["Guard  async_queue_add "," output puts "," output ","files empty? "]}],"call":[]}," Guard Commands All import":{"type":"method","name":"import","children":[{"type":"method","name":"process","children":[],"asgn":[null,null],"call":[" Guard  async_queue_add "," output puts ","unknown join "," output ","unknown empty? ","Interactor  convert_scope "]}],"call":[]}," Guard Commander show":{"type":"method","name":"show","children":[],"call":["DslDescriber  new show ","DslDescriber  new "," Guard DslDescriber  new show "," Guard DslDescriber  new "," Guard  options "]}," Guard CLI _start":{"type":"method","name":"_start","children":[],"call":[" abort ","UI  error ","e message ","Guard  start "]}," Guard CLI _require_guardfile":{"type":"method","name":"_require_guardfile","children":[],"call":[" abort ","UI  error ","e message ","Guardfile Evaluator  new evaluate ","Guardfile Evaluator  new ","session evaluator_options ","Guard  state session ","Guard  state ","Guard  init ","Guard  state session  evaluator_options ","Guard  state Guard  state session  "]}," Guard ArubaAdapter execute":{"type":"method","name":"execute","children":[],"call":[" Guard UI  reset_logger "," Guard UI  logger close "," Guard UI  logger "," Guard UI  logger flush "," Guard  listener stop "," Guard  listener ","e status ","@stderr puts ","(send\n  (lvar :b) :map) join ","b map ","e class ","e message ","b shift ","e backtrace "," Guard CLI  start ","UI  reset_logger ","UI  logger close ","UI  logger ","UI  logger flush ","Guard  listener stop ","Guard  listener ","CLI  start ","b unshift ","(send\n  (lvar :e backtrace ) :map) join ","e backtrace  map ","e backtrace  shift ","e e backtrace acktrace ","e backtrace  unshift "]}," Guard ArubaAdapter execute!":{"type":"method","name":"execute!","children":[],"call":["@kernel exit "," execute "]}," Guard ArubaAdapter initialize":{"type":"method","name":"initialize","children":[],"call":[" Guard UI  options= "," Guard UI  options merge "," Guard UI  options ","ENV  [] == ","ENV  [] ","UI  options= ","UI  options merge ","UI  options "]}," Guard _guardfile_deprecated_check":{"type":"method","name":"_guardfile_deprecated_check","children":[],"call":[" exit ","UI  info "," format ","guardfiles inspect ","UI  warning ","(str \"^Guardfile$\") match ","guardfiles any? ","guardfiles empty? ","(str \"^(?:.+/)?Guardfile$\") match ","modified select ","modified map! "," Pathname expand_path == "," Pathname expand_path "," Pathname ","guardfiles detect "," Pathname realpath ","regexp match "," Pathname realpath s inspect "," Pathname realpath s any? "," Pathname realpath s empty? "," Pathname realpath s detect "]}," Guard Internals Session convert_scope":{"type":"method","name":"convert_scope","children":[],"call":["unknown << ","scopes [] << ","scopes [] "," groups all first "," groups all "," groups "," plugins all first "," plugins all "," plugins ","entries each ","  groups all first s all first ","  groups all first s all ","  groups all first s ","  plugins all first s all first ","  plugins all first s all ","  plugins all first s "]}," Guard Internals Session guardfile_ignore=":{"type":"method","name":"guardfile_ignore=","children":[],"call":[" Array flatten "," Array "]}," Guard Deprecated Guard ClassMethods scope=":{"type":"method","name":"scope=","children":[],"call":[" Guard  state scope from_interactor "," Guard  state scope "," Guard  state ","UI  deprecation "]}," Guard Deprecated Guard ClassMethods scope":{"type":"method","name":"scope","children":[],"call":[" Guard  state scope to_hash "," Guard  state scope "," Guard  state ","UI  deprecation "]}," Guard Deprecated Guard ClassMethods plugins":{"type":"method","name":"plugins","children":[],"call":[" Guard  state session plugins all "," Guard  state session plugins "," Guard  state session "," Guard  state ","UI  deprecation "]}," Guard Deprecated Guard ClassMethods groups":{"type":"method","name":"groups","children":[],"call":[" Guard  state session groups all "," Guard  state session groups "," Guard  state session "," Guard  state ","UI  deprecation "]}," Guard Deprecated Guard ClassMethods plugin":{"type":"method","name":"plugin","children":[],"call":[" Guard  state session plugins all first "," Guard  state session plugins all "," Guard  state session plugins "," Guard  state session "," Guard  state ","UI  deprecation "]}," Guard Deprecated Guard ClassMethods group":{"type":"method","name":"group","children":[],"call":[" Guard  state session groups all first "," Guard  state session groups all "," Guard  state session groups "," Guard  state session "," Guard  state ","UI  deprecation "]}," Guard Deprecated Guard ClassMethods add_plugin":{"type":"method","name":"add_plugin","children":[],"call":[" Guard  state session plugins add "," Guard  state session plugins "," Guard  state session "," Guard  state ","UI  deprecation "]}," Guard Deprecated Guard ClassMethods add_group":{"type":"method","name":"add_group","children":[],"call":[" Guard  state session groups add "," Guard  state session groups "," Guard  state session "," Guard  state ","UI  deprecation "]}," Guard Deprecated Guard ClassMethods listener=":{"type":"method","name":"listener=","children":[],"call":[" Guard  listener ","UI  deprecation "]}," Guard Config initialize":{"type":"method","name":"initialize","children":[],"call":[]}," Guard Cli Environments Valid initialize_guardfile":{"type":"method","name":"initialize_guardfile","children":[],"call":["generator initialize_template ","plugin_names each ","generator initialize_all_templates ","plugin_names empty? ","Guardfile Evaluator  new evaluate ","Guardfile Evaluator  new ","session evaluator_options ","generator create_guardfile ","Guardfile Generator  new ","Guard  state session ","Guard  state ","Guard  init ","@options [] ","UI  error ","e message ","Guardfile Generator  new  initialize_template ","Guardfile Generator  new  initialize_all_templates ","Guard  state session  evaluator_options ","Guardfile Generator  new  create_guardfile ","Guard  state Guard  state session  "]}," Guard Cli Environments Valid start_guard":{"type":"method","name":"start_guard","children":[],"call":[" abort ","UI  error ","e message ","Guard  start ","Bundler  new verify ","Bundler  new ","@options [] "]}," Guard Cli Environments Valid initialize":{"type":"method","name":"initialize","children":[],"call":[]}," Guard Cli Environments EvaluateOnly evaluate":{"type":"method","name":"evaluate","children":[],"call":[" abort ","UI  error ","e message ","Guardfile Evaluator  new evaluate ","Guardfile Evaluator  new ","session evaluator_options ","Guard  state session ","Guard  state ","Guard  init ","Guard  state session  evaluator_options ","Guard  state Guard  state session  "]}," Guard Cli Environments EvaluateOnly initialize":{"type":"method","name":"initialize","children":[],"call":[]}," Guard Cli Environments Bundler verify":{"type":"method","name":"verify","children":[],"call":["UI  info ","ENV  [] ","File  exist? "]}," Guard Internals Scope _hashify_scope":{"type":"method","name":"_hashify_scope","children":[],"call":["(send\n  (send nil :Array\n    (lvar :items)) :map) compact ","(if\n  (send\n    (lvar :type) :==\n    (sym :group))\n  (send nil :_groups)\n  (send nil :_plugins)) all first ","(if\n  (send\n    (lvar :type) :==\n    (sym :group))\n  (send nil :_groups)\n  (send nil :_plugins)) all "," _plugins "," _groups ","type == ","obj respond_to? "," Array map "," Array ","source empty? ! ","source empty? ","(lvar :interactor) detect "," instance_variable_get ","Guard  state session send ","Guard  state session ","Guard  state ","(lvar : instance_variable_get ) detect "]}," Guard Notifier detected":{"type":"method","name":"detected","children":[],"call":[]}," Guard Notifier supported":{"type":"method","name":"supported","children":[],"call":[]}," Guard Internals Session guardfile_notification=":{"type":"method","name":"guardfile_notification=","children":[],"call":["@guardfile_notifier_options merge! "]}," Guard CLI help":{"type":"method","name":"help","children":[],"call":[]}," Guard DslReader clearing":{"type":"method","name":"clearing","children":[],"call":[]}," Guard DslReader directories":{"type":"method","name":"directories","children":[],"call":[]}," Guard DslReader scope":{"type":"method","name":"scope","children":[],"call":[]}," Guard DslReader logger":{"type":"method","name":"logger","children":[],"call":[]}," Guard DslReader ignore!":{"type":"method","name":"ignore!","children":[],"call":[]}," Guard DslReader ignore":{"type":"method","name":"ignore","children":[],"call":[]}," Guard DslReader callback":{"type":"method","name":"callback","children":[],"call":[]}," Guard DslReader watch":{"type":"method","name":"watch","children":[],"call":[]}," Guard DslReader group":{"type":"method","name":"group","children":[],"call":[]}," Guard DslReader interactor":{"type":"method","name":"interactor","children":[],"call":[]}," Guard DslReader notification":{"type":"method","name":"notification","children":[],"call":[]}," Guard DslReader guard":{"type":"method","name":"guard","children":[],"call":["@plugin_names << ","name to_s "]}," Guard DslReader initialize":{"type":"method","name":"initialize","children":[],"call":[]}," Releaser _update_release":{"type":"method","name":"_update_release","children":[],"call":["STDOUT  puts ","gh_client update_release ","gh_release rels [] href ","gh_release rels [] ","gh_release rels "]}," Releaser _confirm_publish":{"type":"method","name":"_confirm_publish","children":[],"call":[" exit ","input == ","(str \"y\") include? ","STDIN  gets chomp downcase ","STDIN  gets chomp ","STDIN  gets ","STDOUT  puts "," loop ","STDIN  gets chomp downcase  == "]}," Releaser _detect_gh_release":{"type":"method","name":"_detect_gh_release","children":[],"call":["r draft == ","r draft ","r tag_name == ","r tag_name ","gh_releases detect ","gh_client releases ","gh_client releases  detect "]}," Releaser _success_summary":{"type":"method","name":"_success_summary","children":[],"call":["STDOUT  puts ","gh_release rels [] href ","gh_release rels [] ","gh_release rels ","gh_release rels [] gh_release rels [] href  "]}," Releaser _verify_tag_pushed":{"type":"method","name":"_verify_tag_pushed","children":[],"call":[" exit ","STDOUT  puts ","tag =~ ","tags detect ","(str \"git ls-remote --tags origin\") split ","(str \"git ls-remote --tags origin\") split  detect ","(str \"git ls-remote --(str \"git ls-remote --tags origin\") split  origin\") split "]}," Releaser _verify_released":{"type":"method","name":"_verify_released","children":[],"call":[" exit ","STDOUT  puts ","@version != ","Gems  info [] ","Gems  info "]}," Releaser github":{"type":"method","name":"github","children":[],"call":[" _success_summary "," _detect_gh_release "," _update_release "," _confirm_publish ","STDOUT  puts ","gh_release body ","Octokit Client  new "," require "," _verify_tag_pushed "," _verify_released "," _detect_ _detect_gh_release  "," _detect_gh_release  body "]}," Releaser rubygems":{"type":"method","name":"rubygems","children":[],"call":["Rake Task  [] invoke ","Rake Task  [] "," exit ","input == ","(str \"y\") include? ","STDIN  gets chomp downcase ","STDIN  gets chomp ","STDIN  gets ","STDOUT  puts "," loop ","STDIN  gets chomp downcase  == "]}," Releaser full":{"type":"method","name":"full","children":[],"call":[" github "," rubygems "]}," Releaser initialize":{"type":"method","name":"initialize","children":[],"call":[" fail ","options delete "]}," Guard Watcher Pattern create":{"type":"method","name":"create","children":[],"call":[]}," Guard Watcher Pattern SimplePath normalize":{"type":"method","name":"normalize","children":[],"call":["Pathname  new cleanpath to_s ","Pathname  new cleanpath ","Pathname  new "]}," Guard Watcher Pattern SimplePath match":{"type":"method","name":"match","children":[],"call":["@path == "," normalize "]}," Guard Watcher Pattern SimplePath initialize":{"type":"method","name":"initialize","children":[],"call":[" normalize "]}," Guard Watcher Pattern PathnamePath normalize":{"type":"method","name":"normalize","children":[],"call":["Pathname  new cleanpath ","Pathname  new "]}," Guard Watcher Pattern Matcher normalized":{"type":"method","name":"normalized","children":[],"call":["path to_s ","@matcher is_a? ","Pathname  new cleanpath ","Pathname  new ","Pathname  new cleanpath  to_s ","Pathname  new cleanPathname  new cleanpath  "]}," Guard Watcher Pattern Matcher match":{"type":"method","name":"match","children":[],"call":["@matcher match "," normalized "]}," Guard Watcher Pattern Matcher initialize":{"type":"method","name":"initialize","children":[],"call":[]}," Guard Watcher Pattern MatchResult []":{"type":"method","name":"[]","children":[],"call":["@match_result to_a [] ","@match_result to_a ","index zero? ","@match_result [] ","index is_a? "]}," Guard Watcher Pattern MatchResult initialize":{"type":"method","name":"initialize","children":[],"call":[]}," Guard Watcher Pattern DeprecatedRegexp show_deprecation":{"type":"method","name":"show_deprecation","children":[],"call":[]}," Guard Watcher Pattern DeprecatedRegexp deprecated?":{"type":"method","name":"deprecated?","children":[],"call":["regexp match ","@original_pattern is_a? "]}," Guard Watcher Pattern DeprecatedRegexp convert":{"type":"method","name":"convert","children":[],"call":[]}," Guard Watcher Pattern DeprecatedRegexp initialize":{"type":"method","name":"initialize","children":[],"call":[]}," Guard Guardfile Generator NoSuchPlugin message":{"type":"method","name":"message","children":[],"call":[" class_name "," plugin_name "]}," Guard Guardfile Generator NoSuchPlugin initialize":{"type":"method","name":"initialize","children":[],"call":["plugin_name delete capitalize ","plugin_name delete "]}," Guard UI _calling_plugin_name":{"type":"method","name":"_calling_plugin_name","children":[],"call":["(send\n  (send\n    (send\n      (lvar :name) :[]\n      (int 1)) :split\n    (str \"/\")) :map) join ","part split map join ","part split map ","part split ","name [] split map ","name [] split ","name [] ","name [] == ","(send\n  (send\n    (send nil :caller) :lazy) :map) reject take force first ","(send\n  (send\n    (send nil :caller) :lazy) :map) reject take force ","(send\n  (send\n    (send nil :caller) :lazy) :map) reject take ","(send\n  (send\n    (send nil :caller) :lazy) :map) reject ","(str \"(?<!guard\\\\/lib)\\\\/(guard\\\\/[a-z_]*)(/[a-z_]*)?.rb:\") match "," caller lazy map "," caller lazy "," caller ","(send\n  (send\n    (send\n      (lvar :(send\n  (send\n    (send nil :caller) :lazy) :map) reject take force first ) :[]\n      (int 1)) :split\n    (str \"/\")) :map) join ","(send\n  (send\n    (send nil :caller) :lazy) :map) reject take force first  [] split map ","(send\n  (send\n    (send nil :caller) :lazy) :map) reject take force first  [] split ","(send\n  (send\n    (send nil :caller) :lazy) :map) reject take force first  [] ","(send\n  (send\n    (send nil :caller) :lazy) :map) reject take force first  [] == "]}," Guard UI Logger Config level=":{"type":"method","name":"level=","children":[],"call":[" []= "]}," Guard UI Logger Config initialize":{"type":"method","name":"initialize","children":[],"call":[]}," Guard UI Config with_progname":{"type":"method","name":"with_progname","children":[],"call":[" block_given? ","Guard UI  logger set_progname ","Guard UI  logger ","Guard UI  logger respond_to? "]}," Guard UI Config []":{"type":"method","name":"[]","children":[],"call":["name to_s "," device ","name == "," logger_config [] "," logger_config ","DEPRECATED_OPTS  include? ","name to_s  to_s ","name to_s  == "]}," Guard UI Config except":{"type":"method","name":"except","children":[],"call":[" fetch "]}," Guard UI Config only":{"type":"method","name":"only","children":[],"call":[" fetch "]}," Guard UI Config device":{"type":"method","name":"device","children":[],"call":[" fetch "]}," Guard UI Config initialize":{"type":"method","name":"initialize","children":[],"call":["opts to_hash ","Logger Config  new ","deprecated_logger_opts []= ","opts delete ","option to_sym ","opts key? ","DEPRECATED_OPTS  each ","Guard Options  new ","Guard Options  new  to_hash ","deprecated_logger_Guard Options  new  []= ","Guard Options  new  delete ","Guard Options  new  key? "]}," Guard Options fetch":{"type":"method","name":"fetch","children":[],"call":["name to_s "]}," Guard Watcher ==":{"type":"method","name":"==","children":[],"call":[" pattern == ","other pattern "," pattern "," action == ","other action "," action "]}," Guard Watcher Pattern Matcher ==":{"type":"method","name":"==","children":[],"call":[" matcher == ","other matcher "," matcher "]}," Guard Jobs PryWrapper _history":{"type":"method","name":"_history","children":[],"call":["pry input_ring size ","pry input_ring ","pry input_array size ","pry input_array ","Gem Version  new < ","Gem Version  new ","pry respond_to? "]}," Guard Jobs PryWrapper _configure_history_file":{"type":"method","name":"_configure_history_file","children":[],"call":[" _pry_config history file= "," _pry_config history "," _pry_config "," _pry_config history_file= "," _pry_config respond_to? ","File  expand_path "]}," Guard Jobs PryWrapper _pry_commands":{"type":"method","name":"_pry_commands","children":[],"call":["Pry  commands "]}," Guard Jobs PryWrapper _pry_config":{"type":"method","name":"_pry_config","children":[],"call":["Pry  config "]}," Guard Notifier Tmux _tmux_version":{"type":"method","name":"_tmux_version","children":[],"call":["(str \"tmux -V\") chomp gsub to_f ","(str \"tmux -V\") chomp gsub ","(str \"tmux -V\") chomp "]}," Guard Plugin Hooker InstanceMethods _register_callbacks":{"type":"method","name":"_register_callbacks","children":[],"call":["Hooker  add_callback ","callback [] "," callbacks each "," callbacks "]}," Guard Plugin Hooker InstanceMethods hook":{"type":"method","name":"hook","children":[],"call":["Hooker  notify ","hook_name to_sym "," Guard UI  debug "," class "," caller [] [] "," caller [] "," caller ","event is_a? "]}," Guard Plugin Hooker included":{"type":"method","name":"included","children":[],"call":[]}," Guard Notifier Tmux _remove_old_clients":{"type":"method","name":"_remove_old_clients","children":[],"call":[" options_store delete "," options_store ","(send\n  (send\n    (send nil :options_store) :keys) :-\n  (send nil :_clients)) each "," options_store keys - "," _clients "," options_store keys "]}," Guard Notifier Tmux _client_cmd_flag":{"type":"method","name":"_client_cmd_flag","children":[],"call":[]}," Guard Notifier Tmux _clients":{"type":"method","name":"_clients","children":[],"call":["(str \" \") split ","DEFAULTS  [] "," class _client "," class "," class _clients "]}," Guard Setuper _listener_callback":{"type":"method","name":"_listener_callback","children":[],"call":[" runner run_on_changes ","all_changes values "," runner "," within_preserved_state "," _relevant_changes? "," _relative_paths ","removed dup ","added dup ","modified dup "," lambda "," async_queue_add "," _relative_pathnames "]}," Guard Setuper _relative_paths":{"type":"method","name":"_relative_paths","children":[],"call":["path sub! ","path start_with? ","paths each ","changes each "," watchdirs each "," watchdirs "]}," Guard Setuper _relevant_changes?":{"type":"method","name":"_relevant_changes?","children":[],"call":[" Guard Watcher  match_files? "," runner send "," runner ","changes values flatten ","changes values "," Guard Watcher  match_guardfile? ","changes [] ","watcher match ","files any? ","watchers any? "," _scoped_watchers "," Guard Watcher  match_changes values flatten ? ","changes values flatten  any? "," _scoped_watchers  any? "," _scoped_ _scoped_watchers  "]}," Guard Notifier Tmux _quiet_option":{"type":"method","name":"_quiet_option","children":[],"call":[" _tmux_version >= "," _tmux_version "]}," Guard scope=":{"type":"method","name":"scope=","children":[],"call":["@scope dup freeze ","@scope dup "]}," Guard Sheller _system":{"type":"method","name":"_system","children":[],"call":[]}," Guard Setuper _reset_for_tests":{"type":"method","name":"_reset_for_tests","children":[],"call":[" Guard  scope= "]}," Guard Setuper _non_builtin_plugins?":{"type":"method","name":"_non_builtin_plugins?","children":[],"call":[" plugins map != "," plugins map "," plugins "]}," Guard Setuper _prepare_scope":{"type":"method","name":"_prepare_scope","children":[],"call":[" Array ","scope [] ","groups empty? "," options [] "," options ","plugins empty? ","g name ","g respond_to? ","groups map! ","p name ","p respond_to? ","plugins map! "," fail "," options nil? "," Array  empty? "," Array  map! "]}," Guard Setuper _load_guardfile":{"type":"method","name":"_load_guardfile","children":[],"call":[" _setup_notifier "," setup_scope "," evaluate_guardfile "," _reset_all "]}," Guard Setuper _reset_all":{"type":"method","name":"_reset_all","children":[],"call":[" reset_scope "," reset_plugins "," reset_groups "]}," Guard Setuper _setup_watchdirs":{"type":"method","name":"_setup_watchdirs","children":[],"call":["File  expand_path ","dirs map ","Dir  pwd ","dirs empty? "," Array "," options [] "," options "," Array  map "," Array  empty? "]}," Guard Setuper _run_actions":{"type":"method","name":"_run_actions","children":[],"call":[" fail ","action inspect "," Guard  send "," Guard  respond_to? ","namespaced_action to_s sub ","namespaced_action to_s ","args shift ","action_args dup ","actions each ","namespaced_action to_s sub  inspect ","namespaced_namespaced_action to_s sub  to_s sub ","args shift  to_s sub ","namespaced_namespaced_action to_s sub  to_s ","args shift  to_s ","action_args dup  shift ","namespaced_action to_s sub _args dup ","action_action_args dup  dup ","namespaced_action to_s sub s each "]}," Guard Setuper _relative_pathnames":{"type":"method","name":"_relative_pathnames","children":[],"call":[" _relative_pathname ","paths map "]}," Guard Setuper _relative_pathname":{"type":"method","name":"_relative_pathname","children":[],"call":["full_path relative_path_from ","Pathname  pwd "," Pathname "," Pathname  relative_path_from "]}," Guard Setuper _scoped_watchers":{"type":"method","name":"_scoped_watchers","children":[],"call":["guard watchers "," runner send "," runner "]}," Guard Setuper _process_queue":{"type":"method","name":"_process_queue","children":[],"call":[" runner run_on_changes ","changes values "," runner "," _run_actions ","changes [] ","item each ","actions << ","(lvasgn :item\n  (send\n    (ivar :@queue) :pop)) first is_a? ","(lvasgn :item\n  (send\n    (ivar :@queue) :pop)) first ","@queue pop "," pending_changes? ","changes values all? ","@queue pop  each ","(lvasgn :@queue pop \n  (send\n    (ivar :@queue) :pop)) first is_a? ","(lvasgn :@queue pop \n  (send\n    (ivar :@queue) :pop)) first "]}," Guard Setuper add_builtin_plugins":{"type":"method","name":"add_builtin_plugins","children":[],"call":[" Guard  add_plugin "," Guard Watcher  new "," _relative_pathname to_s "," _relative_pathname "]}," Guard Setuper pending_changes?":{"type":"method","name":"pending_changes?","children":[],"call":["@queue empty? ! ","@queue empty? "]}," Guard Setuper async_queue_add":{"type":"method","name":"async_queue_add","children":[],"call":[" interactor background "," interactor ","Thread  new ","@queue << "]}," Guard Setuper restore_scope":{"type":"method","name":"restore_scope","children":[],"call":[" Guard  setup_scope "]}," Guard Setuper save_scope":{"type":"method","name":"save_scope","children":[],"call":[" _prepare_scope "," Guard  scope "]}," Guard Setuper reset_evaluator":{"type":"method","name":"reset_evaluator","children":[],"call":[" Guard Guardfile Evaluator  new "]}," Guard Setuper reset_options":{"type":"method","name":"reset_options","children":[],"call":[" Guard Options  new "]}," Guard Notifier Tmux _options_for_client":{"type":"method","name":"_options_for_client","children":[],"call":[]}," Guard Jobs PryWrapper _join_scope_for_prompt":{"type":"method","name":"_join_scope_for_prompt","children":[],"call":[" Guard  scope [] map join "," Guard  scope [] map "," Guard  scope [] "," Guard  scope "]}," Guard Jobs PryWrapper _start_pry":{"type":"method","name":"_start_pry","children":[],"call":["@thread join ","Pry  start ","Thread  new ","@mutex synchronize "]}," Guard Guardfile Evaluator _use_default":{"type":"method","name":"_use_default","children":[],"call":[" exit "," Guard UI  error "," _read_guardfile "," _find_default_guardfile "]}," Guard Commander _interactor_loop":{"type":"method","name":"_interactor_loop","children":[],"call":[" stop "," _process_queue "," pending_changes? "," interactor foreground != "," interactor foreground "," interactor "]}," Guard remove_plugin":{"type":"method","name":"remove_plugin","children":[],"call":["@plugins delete "]}," Guard scope":{"type":"method","name":"scope","children":[],"call":["@scope dup freeze ","@scope dup "," fail ","@scope nil? "]}," Guard UI setup":{"type":"method","name":"setup","children":[],"call":[" clear "]}," Guard Setuper _pluginless_guardfile?":{"type":"method","name":"_pluginless_guardfile?","children":[],"call":[" plugins map != "," plugins map "," plugins "]}," Guard Runner _instantiate":{"type":"method","name":"_instantiate","children":[],"call":[" Guard  send ","obj is_a? "]}," Guard DeprecatedMethods evaluator":{"type":"method","name":"evaluator","children":[],"call":[" Guard  instance_variable_get ","UI  deprecation "]}," Guard DeprecatedMethods lock":{"type":"method","name":"lock","children":[],"call":["UI  deprecation "]}," Guard DeprecatedMethods running":{"type":"method","name":"running","children":[],"call":["UI  deprecation "]}," Guard _reset_for_tests":{"type":"method","name":"_reset_for_tests","children":[],"call":[]}," Guard _reset_all":{"type":"method","name":"_reset_all","children":[],"call":[" reset_scope "," reset_plugins "," reset_groups "]}," Guard _run_actions":{"type":"method","name":"_run_actions","children":[],"call":[" fail ","action inspect "," Guard  send "," Guard  respond_to? ","namespaced_action to_s sub ","namespaced_action to_s ","args shift ","action_args dup ","actions each ","namespaced_action to_s sub  inspect ","namespaced_namespaced_action to_s sub  to_s sub ","args shift  to_s sub ","namespaced_namespaced_action to_s sub  to_s ","args shift  to_s ","action_args dup  shift ","namespaced_action to_s sub _args dup ","action_action_args dup  dup ","namespaced_action to_s sub s each "]}," Guard _scoped_watchers":{"type":"method","name":"_scoped_watchers","children":[],"call":["guard watchers ","Runner  new send ","Runner  new "]}," Guard _process_queue":{"type":"method","name":"_process_queue","children":[],"call":["Runner  new run_on_changes ","changes values ","Runner  new ","changes values all? "," _run_actions ","changes [] ","item each ","actions << ","(lvasgn :item\n  (send\n    (ivar :@queue) :pop)) first is_a? ","(lvasgn :item\n  (send\n    (ivar :@queue) :pop)) first ","@queue pop "," pending_changes? ","@queue pop  each ","(lvasgn :@queue pop \n  (send\n    (ivar :@queue) :pop)) first is_a? ","(lvasgn :@queue pop \n  (send\n    (ivar :@queue) :pop)) first "]}," Guard _setup_listener":{"type":"method","name":"_setup_listener","children":[],"call":["Listen  to "," _listener_callback "," watchdirs + "," watchdirs ","listener_options []= "," options [] "," options ","(sym :latency) each ","Listen  on "]}," Guard watchdirs=":{"type":"method","name":"watchdirs=","children":[],"call":["File  expand_path ","dirs map ","Dir  pwd ","dirs empty? "]}," Guard pending_changes?":{"type":"method","name":"pending_changes?","children":[],"call":["@queue empty? ! ","@queue empty? "]}," Guard evaluate_guardfile":{"type":"method","name":"evaluate_guardfile","children":[],"call":[" Guard UI  error "," _pluginless_guardfile? "," options []= ","evaluator guardfile_path "," options ","evaluator evaluate_guardfile ","Guard Guardfile Evaluator  new ","Guard Guardfile Evaluator  new  guardfile_path ","Guard Guardfile Evaluator  new  evaluate_guardfile "]}," Guard setup_scope":{"type":"method","name":"setup_scope","children":[],"call":[" Guard  scope= "," Guard  plugin ","scope [] map ","scope [] "," Guard  add_group "," _prepare_scope "," Guard   _prepare_scope = "," _prepare_scope  [] map "," _prepare_scope  [] "," _prepare_ _prepare_scope  "]}," Guard reset_plugins":{"type":"method","name":"reset_plugins","children":[],"call":[]}," Guard clear_options":{"type":"method","name":"clear_options","children":[],"call":[]}," Guard _scope_names":{"type":"method","name":"_scope_names","children":[],"call":["p name ","p respond_to? ","items map "," Array ","new_scope [] ","items empty? "," options [] "," options "," Array  map "," Array  empty? "]}," Guard _prepare_scope":{"type":"method","name":"_prepare_scope","children":[],"call":[" _scope_names "," fail "," options nil? "," options "]}," Guard restore_scope":{"type":"method","name":"restore_scope","children":[],"call":[" Guard  setup_scope "]}," Guard save_scope":{"type":"method","name":"save_scope","children":[],"call":[" _prepare_scope "," Guard  scope "]}," Guard reset_options":{"type":"method","name":"reset_options","children":[],"call":[" Guard Options  new "]}," Guard reset_scope":{"type":"method","name":"reset_scope","children":[],"call":[" Guard  scope= "]}," Guard add_builtin_plugins":{"type":"method","name":"add_builtin_plugins","children":[],"call":[" Guard  add_plugin "," Guard Watcher  new "," _relative_pathname to_s "," _relative_pathname "]}," Guard Internals Session clear?":{"type":"method","name":"clear?","children":[],"call":[]}}