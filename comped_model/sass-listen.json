{" Listen stop":{"type":"method","name":"stop","children":[],"call":["listener stop ","@listeners each ","Internals ThreadPool  stop "]}," Listen to":{"type":"method","name":"to","children":[],"call":["@listeners << ","Listener  new tap ","Listener  new "]}," Listen Silencer _init_ignores":{"type":"method","name":"_init_ignores","children":[],"call":["patterns compact flatten ","patterns compact ","patterns << "]}," Listen Silencer silenced?":{"type":"method","name":"silenced?","children":[],"call":["path =~ "," ignore_patterns any? "," ignore_patterns "," only_patterns any? "," only_patterns ","type == ","relative_path to_s ","relative_path to_s  =~ ","relative_relative_path to_s  to_s "]}," Listen Silencer configure":{"type":"method","name":"configure","children":[],"call":[" _init_ignores ","options [] "," Array "]}," Listen Silencer initialize":{"type":"method","name":"initialize","children":[],"call":[" configure "]}," Listen Silencer Controller _reconfigure_silencer":{"type":"method","name":"_reconfigure_silencer","children":[],"call":["@silencer configure ","@prev_silencer_options dup freeze ","@prev_silencer_options dup ","opts delete ","opts [] empty? ","opts [] ","opts key? ","Hash  [] "," Array flatten compact "," Array flatten "," Array ","opts map ","extra_options dup ","Hash  []  delete ","extra_options dup  delete ","Hash  []  [] empty? ","extra_options dup  [] empty? ","Hash  []  [] ","extra_options dup  [] ","Hash  []  key? ","extra_options dup  key? ","Hash  []  map ","extra_options dup  map "]}," Listen Silencer Controller replace_with_only":{"type":"method","name":"replace_with_only","children":[],"call":[" _reconfigure_silencer "]}," Listen Silencer Controller replace_with_bang_ignores":{"type":"method","name":"replace_with_bang_ignores","children":[],"call":[" _reconfigure_silencer "]}," Listen Silencer Controller append_ignores":{"type":"method","name":"append_ignores","children":[],"call":[" _reconfigure_silencer ","prev_ignores + "," Array ","@prev_silencer_options [] "," Array  + "]}," Listen Silencer Controller initialize":{"type":"method","name":"initialize","children":[],"call":[" _reconfigure_silencer ","Hash  [] ","rules compact ","opts [] ","opts key? ","(sym :only) map "]}," Listen Record _fast_try_file":{"type":"method","name":"_fast_try_file","children":[],"call":[" _fast_unset_path ","entry name ","entry relative "," _fast_update_file ","entry meta "]}," Listen Record _fast_build_dir":{"type":"method","name":"_fast_build_dir","children":[],"call":[" _fast_unset_path ","entry name ","entry relative "," _fast_try_file "," add_dir ","entry record_dir_key ","remaining << ","children each ","symlink_detector verify_unwatched! ","entry children ","remaining pop ","remaining pop  name ","remaining pop  relative ","remaining pop  record_dir_key ","entry children  each ","entry entry children  ","remaining pop  children "]}," Listen Record _fast_unset_path":{"type":"method","name":"_fast_unset_path","children":[],"call":[" tree [] delete "," tree [] "," tree "," tree key? "," tree delete ","(nil) include? "]}," Listen Record _fast_update_file":{"type":"method","name":"_fast_update_file","children":[],"call":[" tree [] []= ","(or\n  (send\n    (send\n      (send nil :tree) :[]\n      (lvar :dirname)) :[]\n    (lvar :basename))\n  (hash)) merge "," tree [] [] "," tree [] "," tree "," tree []= ","(or\n  (send\n    (send nil :tree) :[]\n    (lvar :basename))\n  (hash)) merge ","(nil) include? "]}," Listen Record tree":{"type":"method","name":"tree","children":[],"call":[]}," Listen Record _auto_hash":{"type":"method","name":"_auto_hash","children":[],"call":["h []= ","Hash  new "]}," Listen Record build":{"type":"method","name":"build","children":[],"call":[" _fast_build_dir ","remaining empty? ","remaining << ","Entry  new "," root "," Queue  new ","SymlinkDetector  new "," _auto_hash "," Queue  new  empty? "," Queue  new  << "]}," Listen Record dir_entries":{"type":"method","name":"dir_entries","children":[],"call":["result []= ","values key? ","subtree each "," tree [] ","rel_path to_s "," tree "," _auto_hash ","(nil) include? "," tree  each "]}," Listen Record file_data":{"type":"method","name":"file_data","children":[],"call":[" tree [] [] dup "," tree [] [] "," tree [] "," tree "," tree [] dup ","(nil) include? "," Pathname split map "," Pathname split "," Pathname "]}," Listen Record unset_path":{"type":"method","name":"unset_path","children":[],"call":[" _fast_unset_path "," Pathname split map "," Pathname split "," Pathname "]}," Listen Record update_file":{"type":"method","name":"update_file","children":[],"call":[" _fast_update_file "," Pathname split map "," Pathname split "," Pathname "]}," Listen Record add_dir":{"type":"method","name":"add_dir","children":[],"call":["@tree [] ","(nil) include? "]}," Listen Record initialize":{"type":"method","name":"initialize","children":[],"call":["directory to_s "," _auto_hash "]}," Listen Record SymlinkDetector _fail":{"type":"method","name":"_fail","children":[],"call":[" fail ","STDERR  puts "," format "]}," Listen Record SymlinkDetector verify_unwatched!":{"type":"method","name":"verify_unwatched!","children":[],"call":[" _fail ","entry sys_path ","@real_dirs add? ","entry real_path ","entry entry real_path  "]}," Listen Record SymlinkDetector initialize":{"type":"method","name":"initialize","children":[],"call":["Set  new "]}," Listen Record Entry _join":{"type":"method","name":"_join","children":[],"call":[" File  join ","args empty? ","(ivar :@relative) compact ","(ivar :@relative) compact  empty? "]}," Listen Record Entry real_path":{"type":"method","name":"real_path","children":[],"call":[" File  realpath "," sys_path "]}," Listen Record Entry sys_path":{"type":"method","name":"sys_path","children":[],"call":[" File  join ","(ivar :@root) compact "]}," Listen Record Entry record_dir_key":{"type":"method","name":"record_dir_key","children":[],"call":[" File  join ","(ivar :@relative) compact "]}," Listen Record Entry meta":{"type":"method","name":"meta","children":[],"call":["lstat mode ","lstat mtime to_f ","lstat mtime "," File  lstat "," sys_path "," File  lstat  mode "," File  lstat  mtime to_f "," File  lstat  mtime "," File   File  lstat  "]}," Listen Record Entry children":{"type":"method","name":"children","children":[],"call":["Entry  new ","(send\n  (send\n    (const nil :Dir) :entries\n    (send nil :sys_path)) :-\n  (array\n    (str \".\")\n    (str \"..\"))) map ","Dir  entries - ","Dir  entries "," sys_path "," _join "]}," Listen Record Entry initialize":{"type":"method","name":"initialize","children":[],"call":[]}," Listen QueueOptimizer _detect_possible_editor_save":{"type":"method","name":"_detect_possible_editor_save","children":[],"call":[" config silenced? "," Pathname "," config ","data [] ","changes each ","changes size == ","changes size "]}," Listen QueueOptimizer _reinterpret_related_changes":{"type":"method","name":"_reinterpret_related_changes","children":[],"call":["(send\n  (lvar :cookies) :map) flatten ","table fetch ","not_silenced map "," config silenced? "," Pathname "," config ","changes reject "," _detect_possible_editor_save ","cookies map "]}," Listen QueueOptimizer _calculate_add_remove_difference":{"type":"method","name":"_calculate_add_remove_difference","children":[],"call":["diff < ","added > ","diff zero? ","diff > "," config exist? "," config ","added - ","x == ","actions count ","added -  < ","added -  zero? ","added -  > "]}," Listen QueueOptimizer _logical_action_for":{"type":"method","name":"_logical_action_for","children":[],"call":[" _calculate_add_remove_difference ","x == ","actions detect ","actions << ","actions delete "]}," Listen QueueOptimizer _squash_changes":{"type":"method","name":"_squash_changes","children":[],"call":[" config debug ","squashed inspect "," config ","squashed [] << ","squashed [] ","type nil? ","actions each ","(pair\n  (sym :modified)\n  (array)) tap ","actions inspect ","path to_s "," _logical_action_for ","action_list map ","changes group_by map ","changes group_by ","dir + ","changes map "]}," Listen QueueOptimizer initialize":{"type":"method","name":"initialize","children":[],"call":[]}," Listen QueueOptimizer smoosh_changes":{"type":"method","name":"smoosh_changes","children":[],"call":[" _squash_changes "," _reinterpret_related_changes ","(or\n  (lvar :options)\n  (hash)) [] ","changes group_by "]}," Listen QueueOptimizer Config debug":{"type":"method","name":"debug","children":[],"call":["Listen  logger debug ","Listen  logger "]}," Listen QueueOptimizer Config silenced?":{"type":"method","name":"silenced?","children":[],"call":["@silencer silenced? "]}," Listen QueueOptimizer Config exist?":{"type":"method","name":"exist?","children":[],"call":[" Pathname exist? "," Pathname "]}," Listen QueueOptimizer Config initialize":{"type":"method","name":"initialize","children":[],"call":[]}," Listen Options method_missing":{"type":"method","name":"method_missing","children":[],"call":[" fail ","@options keys inspect ","@options keys ","name inspect ","@options [] ","@options key? "]}," Listen Options initialize":{"type":"method","name":"initialize","children":[],"call":[" fail ","Listen Logger  warn ","given_options inspect ","given_options empty? ","@options []= ","defaults [] ","given_options delete ","defaults keys each ","defaults keys ","opts dup ","opts dup  inspect ","opts dup  empty? ","opts dup  delete "]}," Listen setup_default_logger_if_unset":{"type":"method","name":"setup_default_logger_if_unset","children":[],"call":[]}," Listen logger=":{"type":"method","name":"logger=","children":[],"call":[]}," Listen logger":{"type":"method","name":"logger","children":[],"call":[]}," Listen Listener only":{"type":"method","name":"only","children":[],"call":["@silencer_controller replace_with_only "]}," Listen Listener ignore!":{"type":"method","name":"ignore!","children":[],"call":["@silencer_controller replace_with_bang_ignores "]}," Listen Listener ignore":{"type":"method","name":"ignore","children":[],"call":["@silencer_controller append_ignores "]}," Listen Listener paused?":{"type":"method","name":"paused?","children":[],"call":[" state == "," state "]}," Listen Listener processing?":{"type":"method","name":"processing?","children":[],"call":[" state == "," state "]}," Listen Listener pause":{"type":"method","name":"pause","children":[],"call":[" transition "]}," Listen Listener stop":{"type":"method","name":"stop","children":[],"call":[" transition "]}," Listen Listener start":{"type":"method","name":"start","children":[],"call":[" transition "," state == "," state "]}," Listen Listener initialize":{"type":"method","name":"initialize","children":[],"call":["Event Loop  new ","Event Config  new ","@backend min_delay_between_events ","QueueOptimizer  new ","QueueOptimizer Config  new ","Backend  new ","Silencer Controller  new ","@config silencer_rules ","Silencer  new ","@processor wakeup_on_event ","Event Queue  new ","Event Queue Config  new ","@config relative? ","Config  new ","dirs pop ","dirs last is_a? ","dirs last ","Backend  new  min_delay_between_events ","@config silencer_@config silencer_rules  ","@config Silencer  new _rules ","Config  new  silencer_rules ","Event Loop  new  wakeup_on_event ","Config  new  relative? "]}," Listen Listener Config adapter_select_options":{"type":"method","name":"adapter_select_options","children":[],"call":["Hash  [] ","valid_keys include? ","@options select ","(str \"force_polling\") map ","(str \"force_polling\") map  include? "]}," Listen Listener Config adapter_instance_options":{"type":"method","name":"adapter_instance_options","children":[],"call":["Hash  [] ","valid_keys include? ","@options select ","klass const_get keys ","klass const_get ","klass const_get keys  include? "]}," Listen Listener Config silencer_rules":{"type":"method","name":"silencer_rules","children":[],"call":[]}," Listen Listener Config min_delay_between_events":{"type":"method","name":"min_delay_between_events","children":[],"call":[]}," Listen Listener Config relative?":{"type":"method","name":"relative?","children":[],"call":[]}," Listen Listener Config initialize":{"type":"method","name":"initialize","children":[],"call":["@options [] ","DEFAULTS  merge ","DEFAULTS  merge  [] "]}," Listen Internals ThreadPool stop":{"type":"method","name":"stop","children":[],"call":[]}," Listen Internals ThreadPool add":{"type":"method","name":"add","children":[],"call":[]}," Listen FSM State valid_transition?":{"type":"method","name":"valid_transition?","children":[],"call":["@transitions include? ","new_state to_sym "]}," Listen FSM State call":{"type":"method","name":"call","children":[],"call":["obj instance_eval "]}," Listen FSM State initialize":{"type":"method","name":"initialize","children":[],"call":[" Array map "," Array "]}," Listen FSM current_state_name":{"type":"method","name":"current_state_name","children":[],"call":[" current_state name "," current_state "]}," Listen FSM current_state":{"type":"method","name":"current_state","children":[],"call":[" states [] "," states "]}," Listen FSM default_state":{"type":"method","name":"default_state","children":[],"call":[" class default_state "," class "]}," Listen FSM states":{"type":"method","name":"states","children":[],"call":[" class states "," class "]}," Listen FSM transition_with_callbacks!":{"type":"method","name":"transition_with_callbacks!","children":[],"call":["state_name call "," transition! ","state_name name "]}," Listen FSM validate_and_sanitize_new_state":{"type":"method","name":"validate_and_sanitize_new_state","children":[],"call":[" fail "," class ","state_name == "," default_state "," states [] "," states "," current_state transitions map join "," current_state transitions map "," current_state transitions "," current_state "," current_state valid_transition? ! "," current_state valid_transition? "," current_state_name == "," current_state_name ","state_name to_sym ","state_name to_sym  == "," current_state  current_state transitions map join _transition? ! "," current_state  current_state transitions map join _transition? "," current_state_name to_sym  == "," current_state_name to_sym  ","state_name to_sym  to_sym "]}," Listen FSM transition!":{"type":"method","name":"transition!","children":[],"call":[]}," Listen FSM transition":{"type":"method","name":"transition","children":[],"call":[" transition_with_callbacks! "," validate_and_sanitize_new_state "," validate_and_sanitize_ validate_and_sanitize_new_state  "]}," Listen FSM initialize":{"type":"method","name":"initialize","children":[],"call":[" class default_state "," class "]}," Listen FSM ClassMethods state":{"type":"method","name":"state","children":[],"call":[" states []= ","State  new ","options [] "," states "," default_state ","name to_sym ","args each ","h []= ","k to_s ","args pop each_with_object ","args pop ","args last is_a? ","args last ","name to_sym  to_sym "]}," Listen FSM ClassMethods states":{"type":"method","name":"states","children":[],"call":[]}," Listen FSM ClassMethods default_state":{"type":"method","name":"default_state","children":[],"call":["new_default to_sym "]}," Listen FSM included":{"type":"method","name":"included","children":[],"call":[]}," Listen File inaccurate_mac_time?":{"type":"method","name":"inaccurate_mac_time?","children":[],"call":[]}," Listen File change":{"type":"method","name":"change","children":[],"call":[]}," Listen Event Queue _safe_relative_from_cwd":{"type":"method","name":"_safe_relative_from_cwd","children":[],"call":["dir relative_path_from ","Pathname  pwd "," config relative? "," config "]}," Listen Event Queue pop":{"type":"method","name":"pop","children":[],"call":[" event_queue pop "," event_queue "]}," Listen Event Queue empty?":{"type":"method","name":"empty?","children":[],"call":[" event_queue empty? "," event_queue "]}," Listen Event Queue <<":{"type":"method","name":"<<","children":[],"call":[" block call "," block "," event_queue public_send "," event_queue "," _safe_relative_from_cwd "," fail ","path inspect ","path is_a? ","change inspect ","change is_a? ","type inspect ","(sym :dir) include? ","(sym : _safe_relative_from_cwd ) include? "]}," Listen Event Queue initialize":{"type":"method","name":"initialize","children":[],"call":[" Queue  new "]}," Listen Event Queue Config relative?":{"type":"method","name":"relative?","children":[],"call":[]}," Listen Event Queue Config initialize":{"type":"method","name":"initialize","children":[],"call":[]}," Listen Event Processor _process_changes":{"type":"method","name":"_process_changes","children":[],"call":["Listen Logger  debug "," _timestamp - "," _timestamp "," config call "," config ","result all? ","hash [] "," config optimize_changes "," config callable? ","changes << "," config event_queue pop "," config event_queue "," config event_queue empty? "," _reset_no_unprocessed_events "," config optimize_changes  [] "," config  config callable? ? "]}," Listen Event Processor _timestamp":{"type":"method","name":"_timestamp","children":[],"call":[" config timestamp "," config "]}," Listen Event Processor _flush_wakeup_reasons":{"type":"method","name":"_flush_wakeup_reasons","children":[],"call":[" block_given? ","reasons pop ","reasons empty? ","reasons pop s pop ","reasons pop s empty? "]}," Listen Event Processor _wait_until_events":{"type":"method","name":"_wait_until_events","children":[],"call":[" _timestamp "," _sleep "," config event_queue empty? "," config event_queue "," config "]}," Listen Event Processor _deadline":{"type":"method","name":"_deadline","children":[],"call":["@first_unprocessed_event_time + "]}," Listen Event Processor _reset_no_unprocessed_events":{"type":"method","name":"_reset_no_unprocessed_events","children":[],"call":[]}," Listen Event Processor _remember_time_of_first_unprocessed_event":{"type":"method","name":"_remember_time_of_first_unprocessed_event","children":[],"call":[" _timestamp "]}," Listen Event Processor _sleep":{"type":"method","name":"_sleep","children":[],"call":[" _remember_time_of_first_unprocessed_event "," config paused? "," config ","reason == "," _flush_wakeup_reasons "," _check_stopped "," config sleep "]}," Listen Event Processor _check_stopped":{"type":"method","name":"_check_stopped","children":[],"call":[" raise "," _flush_wakeup_reasons "," config stopped? "," config "]}," Listen Event Processor _wait_until_no_longer_paused":{"type":"method","name":"_wait_until_no_longer_paused","children":[],"call":[" _sleep "," config paused? "," config "]}," Listen Event Processor _wait_until_events_calm_down":{"type":"method","name":"_wait_until_events_calm_down","children":[],"call":[" _sleep ","diff <= "," _deadline - "," _deadline "," _timestamp "," loop "," _deadline -  <= "]}," Listen Event Processor loop_for":{"type":"method","name":"loop_for","children":[],"call":["Listen Logger  debug "," _process_changes "," _wait_until_no_longer_paused "," _wait_until_events_calm_down "," _wait_until_events "," loop "]}," Listen Event Processor initialize":{"type":"method","name":"initialize","children":[],"call":[" _reset_no_unprocessed_events "]}," Listen Event Loop _wakeup":{"type":"method","name":"_wakeup","children":[],"call":[" wait_thread wakeup "," wait_thread ","@reasons << "]}," Listen Event Loop _nice_error":{"type":"method","name":"_nice_error","children":[],"call":["Listen Logger  error "," format ","ex backtrace * ","ex backtrace "]}," Listen Event Loop _wait_until_resumed":{"type":"method","name":"_wait_until_resumed","children":[],"call":[" state= "," sleep ","ready_queue << "]}," Listen Event Loop _sleep":{"type":"method","name":"_sleep","children":[],"call":["Kernel  sleep "]}," Listen Event Loop _wait_for_changes":{"type":"method","name":"_wait_for_changes","children":[],"call":[" _nice_error ","processor loop_for ","config min_delay_between_events "," _wait_until_resumed ","Event Processor  new ","Event Processor  new  loop_for "]}," Listen Event Loop stopped?":{"type":"method","name":"stopped?","children":[],"call":[" wait_thread ! "," wait_thread "]}," Listen Event Loop teardown":{"type":"method","name":"teardown","children":[],"call":[" wait_thread join "," wait_thread "," _wakeup "," wait_thread alive? "]}," Listen Event Loop pause":{"type":"method","name":"pause","children":[],"call":[]}," Listen Event Loop resume":{"type":"method","name":"resume","children":[],"call":[" _wakeup "," wait_thread "," fail "," stopped? "]}," Listen Event Loop setup":{"type":"method","name":"setup","children":[],"call":["q pop ","Timeout  timeout ","Listen Logger  debug "," _wait_for_changes "," config ","Internals ThreadPool  add "," Queue  new "," Queue  new  pop "]}," Listen Event Loop processing?":{"type":"method","name":"processing?","children":[],"call":[" state == "," state "," paused? "," stopped? "]}," Listen Event Loop paused?":{"type":"method","name":"paused?","children":[],"call":[" state == "," state "," wait_thread "]}," Listen Event Loop wakeup_on_event":{"type":"method","name":"wakeup_on_event","children":[],"call":[" _wakeup "," wait_thread alive? "," wait_thread "," processing? "," stopped? "]}," Listen Event Loop initialize":{"type":"method","name":"initialize","children":[],"call":[" Queue  new "]}," Listen Event Config paused?":{"type":"method","name":"paused?","children":[],"call":[" listener state == "," listener state "," listener "]}," Listen Event Config stopped?":{"type":"method","name":"stopped?","children":[],"call":[" listener state == "," listener state "," listener "]}," Listen Event Config min_delay_between_events":{"type":"method","name":"min_delay_between_events","children":[],"call":[]}," Listen Event Config optimize_changes":{"type":"method","name":"optimize_changes","children":[],"call":["@queue_optimizer smoosh_changes "]}," Listen Event Config callable?":{"type":"method","name":"callable?","children":[],"call":[]}," Listen Event Config event_queue":{"type":"method","name":"event_queue","children":[],"call":[]}," Listen Event Config timestamp":{"type":"method","name":"timestamp","children":[],"call":["Time  now to_f ","Time  now "]}," Listen Event Config call":{"type":"method","name":"call","children":[],"call":["@block call "]}," Listen Event Config sleep":{"type":"method","name":"sleep","children":[],"call":["Kernel  sleep "]}," Listen Event Config initialize":{"type":"method","name":"initialize","children":[],"call":[]}," Listen Directory _change":{"type":"method","name":"_change","children":[],"call":[]}," Listen Directory _async_changes":{"type":"method","name":"_async_changes","children":[],"call":[]}," Listen Directory scan":{"type":"method","name":"scan","children":[],"call":[]}," Listen Forwarder start":{"type":"method","name":"start","children":[],"call":[" sleep ","listener processing? ","listener start ","Listen  to "," logger info "," logger ","modified empty? ","removed empty? ","added empty? ","@options [] "," proc ","Listen  to  processing? ","Listen  to  start "]}," Listen Forwarder initialize":{"type":"method","name":"initialize","children":[],"call":["@logger formatter= "," proc ","@logger level= "," Logger  new "," Logger  new  formatter= "," Logger  new  level= "]}," Listen CLI start":{"type":"method","name":"start","children":[],"call":["Listen Forwarder  new start ","Listen Forwarder  new "," options "]}," Listen Change invalidate":{"type":"method","name":"invalidate","children":[],"call":[" raise ","Listen Logger  error "," format ","ex backtrace * ","ex backtrace "," exinspect "," __method__ "," class "," config queue "," config ","options [] ","change ! ","File  change "," record ","Directory  scan ","type == ","options inspect ","Listen Logger  debug ","watched_dir + ","rel_path inspect "," config silenced? ","cookie ! ","Pathname  new "," record root ","File  change  ! ","options []  ! ","File  File  change  ","File  options []  ","Pathname  new  + ","rel_watched_dir +  inspect "]}," Listen Change initialize":{"type":"method","name":"initialize","children":[],"call":[]}," Listen Change Config queue":{"type":"method","name":"queue","children":[],"call":["@queue << "]}," Listen Change Config silenced?":{"type":"method","name":"silenced?","children":[],"call":["@silencer silenced? "," Pathname "]}," Listen Change Config initialize":{"type":"method","name":"initialize","children":[],"call":[]}," Listen Backend min_delay_between_events":{"type":"method","name":"min_delay_between_events","children":[],"call":[]}," Listen Backend stop":{"type":"method","name":"stop","children":[],"call":[" adapter stop "," adapter "]}," Listen Backend start":{"type":"method","name":"start","children":[],"call":[" adapter start "," adapter "]}," Listen Backend initialize":{"type":"method","name":"initialize","children":[],"call":["adapter_class new ","Adapter Config  new ","config adapter_instance_options "," DEFAULTS  [] ","config min_delay_between_events ","Adapter  select ","config adapter_select_options ","Adapter  select  new "]}," Listen Adapter _log":{"type":"method","name":"_log","children":[],"call":[]}," Listen Adapter _warn_polling_fallback":{"type":"method","name":"_warn_polling_fallback","children":[],"call":[]}," Listen Adapter _usable_adapter_class":{"type":"method","name":"_usable_adapter_class","children":[],"call":[]}," Listen Adapter select":{"type":"method","name":"select","children":[],"call":[]}," Listen Adapter Windows _change":{"type":"method","name":"_change","children":[],"call":["types include? ","(pair\n  (sym :modified)\n  (array\n    (sym :modified)\n    (sym :attrib))) each "]}," Listen Adapter Windows _process_event":{"type":"method","name":"_process_event","children":[],"call":[" raise "," _log "," format ","$ERROR_POSITION * ","event inspect "," _queue_change ","change type == ","change type "," Pathname dirname to_s "," Pathname dirname "," Pathname ","full_path directory? "," _change ","full_path relative_path_from to_s ","full_path relative_path_from ","change path "," Pathname  directory? "," Pathname  relative_path_from to_s "," Pathname  relative_path_from "]}," Listen Adapter Windows _run":{"type":"method","name":"_run","children":[],"call":["@worker run! "]}," Listen Adapter Windows _configure":{"type":"method","name":"_configure","children":[],"call":["callback call ","@worker watch_recursively ","dir to_s ","WDM Monitor  new "," _log "," require "]}," Listen Adapter Windows usable?":{"type":"method","name":"usable?","children":[],"call":[]}," Listen Adapter Polling _process_event":{"type":"method","name":"_process_event","children":[],"call":[" _queue_change "]}," Listen Adapter Polling _run":{"type":"method","name":"_run","children":[],"call":[" sleep ","nap_time > "," options latency - ","Time  now to_f - ","Time  now to_f ","Time  now "," options latency "," options ","callback call ","@polling_callbacks each "," loop "," options latency -  > "]}," Listen Adapter Polling _configure":{"type":"method","name":"_configure","children":[],"call":["@polling_callbacks << "]}," Listen Adapter Linux _stop":{"type":"method","name":"_stop","children":[],"call":["@worker close "]}," Listen Adapter Linux _dir_event?":{"type":"method","name":"_dir_event?","children":[],"call":["event flags include? ","event flags "]}," Listen Adapter Linux _change":{"type":"method","name":"_change","children":[],"call":["(send\n  (lvar :flags) :&\n  (lvar :event_flags)) empty? ","flags & ","(pair\n  (sym :modified)\n  (array\n    (sym :attrib)\n    (sym :close_write))) each "]}," Listen Adapter Linux _skip_event?":{"type":"method","name":"_skip_event?","children":[],"call":["(send\n  (send\n    (lvar :event) :flags) :&\n  (array\n    (sym :close)\n    (sym :modify))) any? ","event flags & ","event flags "," _dir_event? ","event name == ","event name "]}," Listen Adapter Linux _process_event":{"type":"method","name":"_process_event","children":[],"call":[" _queue_change ","cookie_params merge "," _change ","event flags "," _dir_event? ","event cookie ","event cookie zero? "," _skip_event? ","path dirname relative_path_from to_s ","path dirname relative_path_from ","path dirname ","event flags & ","ENV  [] ","event flags inspect "," _log ","path relative_path_from to_s ","path relative_path_from ","Pathname  new + ","event name ","Pathname  new ","event watcher path ","event watcher ","cookie_cookie_params merge  merge ","Pathname  new +  dirname relative_Pathname  new + _from to_s ","Pathname  new +  dirname relative_Pathname  new + _from ","Pathname  new +  dirname ","Pathname  new +  relative_Pathname  new + _from to_s ","Pathname  new +  relative_Pathname  new + _from ","event watcher Pathname  new +  "]}," Listen Adapter Linux _run":{"type":"method","name":"_run","children":[],"call":["@worker run "]}," Listen Adapter Linux _configure":{"type":"method","name":"_configure","children":[],"call":[" abort ","@worker watch "," options events "," options ","directory to_s "," INotify Notifier  new "," require "]}," Listen Adapter Darwin _to_array":{"type":"method","name":"_to_array","children":[],"call":["workers << ","queue pop ","queue empty? "]}," Listen Adapter Darwin _run_workers_in_background":{"type":"method","name":"_run_workers_in_background","children":[],"call":[" _run_worker ","Listen Internals ThreadPool  add ","workers each "]}," Listen Adapter Darwin _run_worker":{"type":"method","name":"_run_worker","children":[],"call":[" _log_exception "," caller ","worker run "," _log ","worker inspect "]}," Listen Adapter Darwin _process_event":{"type":"method","name":"_process_event","children":[],"call":[" _queue_change ","new_path relative_path_from to_s ","new_path relative_path_from "," _log ","Pathname  new ","path sub ","event each ","event inspect ","Pathname  new  relative_path_from to_s ","Pathname  new  relative_path_from "]}," Listen Adapter Darwin _run":{"type":"method","name":"_run","children":[],"call":[" _run_worker "," _run_workers_in_background "," _to_array ","@workers pop "]}," Listen Adapter Darwin _configure":{"type":"method","name":"_configure","children":[],"call":["@workers << ","worker watch ","dir to_s "," _log ","dir to_s inspect ","FSEvent  new tap ","FSEvent  new "," Queue  new "," options latency "," options "," require "]}," Listen Adapter Config initialize":{"type":"method","name":"initialize","children":[],"call":["Pathname  new realpath ","Pathname  new ","directory to_s ","directories map ","Dir  pwd ","directories to_a empty? ","directories to_a "]}," Listen Adapter BSD _find":{"type":"method","name":"_find","children":[],"call":["Find  send "]}," Listen Adapter BSD _watch_file":{"type":"method","name":"_watch_file","children":[],"call":[" _log ","e message ","queue watch_file "," options events "," options "]}," Listen Adapter BSD _watch_for_new_file":{"type":"method","name":"_watch_for_new_file","children":[],"call":[" _watch_file ","v path == ","file_path to_s ","v path ","queue watchers detect ","queue watchers "," _find "," _event_path to_s "," _event_path ","event watcher queue ","event watcher ","event watcher queue  watchers detect ","event watcher queue  watchers ","event watcher event watcher queue  "]}," Listen Adapter BSD _event_path":{"type":"method","name":"_event_path","children":[],"call":["Pathname  new ","event watcher path ","event watcher "]}," Listen Adapter BSD _change":{"type":"method","name":"_change","children":[],"call":["(send\n  (lvar :flags) :&\n  (lvar :event_flags)) empty? ","flags & ","(pair\n  (sym :modified)\n  (array\n    (sym :attrib)\n    (sym :extend))) each "]}," Listen Adapter BSD _process_event":{"type":"method","name":"_process_event","children":[],"call":[" _watch_for_new_file ","full_path directory? "," _queue_change "," _change ","event flags ","path to_s ","full_path relative_path_from ","full_path exist? "," _event_path ","full_full_path relative_path_from  directory? "," _event_path  directory? ","full_path relative_path_from  to_s ","full_full_path relative_path_from  relative_full_path relative_path_from _from "," _event_path  relative_path_from ","full_full_path relative_path_from  exist? "," _event_path  exist? "," _event_full_path relative_path_from  "]}," Listen Adapter BSD _run":{"type":"method","name":"_run","children":[],"call":["@worker run "]}," Listen Adapter BSD _configure":{"type":"method","name":"_configure","children":[],"call":[" _watch_file "," _find ","directory to_s ","KQueue Queue  new "]}," Listen Adapter BSD usable?":{"type":"method","name":"usable?","children":[],"call":[]}," Listen Adapter Base _log":{"type":"method","name":"_log","children":[],"call":[" class send "," class "]}," Listen Adapter Base _log_exception":{"type":"method","name":"_log_exception","children":[],"call":[" _log "," format ","caller_stack * ","$ERROR_POSITION * "]}," Listen Adapter Base _queue_change":{"type":"method","name":"_queue_change","children":[],"call":["@snapshots [] invalidate ","@snapshots [] "]}," Listen Adapter Base _timed":{"type":"method","name":"_timed","children":[],"call":[" raise ","Listen Logger  warn ","$ERROR_INFO inspect ","Listen Logger  info "," format ","Time  now to_f - ","Time  now to_f ","Time  now "]}," Listen Adapter Base _stop":{"type":"method","name":"_stop","children":[],"call":[]}," Listen Adapter Base usable?":{"type":"method","name":"usable?","children":[],"call":[]}," Listen Adapter Base stop":{"type":"method","name":"stop","children":[],"call":[" _stop "]}," Listen Adapter Base start":{"type":"method","name":"start","children":[],"call":[" raise "," _log_exception "," _run ","snapshot record build ","snapshot record "," _timed ","@snapshots values each ","@snapshots values ","Listen Internals ThreadPool  add "," caller dup "," caller "," _log "," started? "," configure "]}," Listen Adapter Base started?":{"type":"method","name":"started?","children":[],"call":[]}," Listen Adapter Base configure":{"type":"method","name":"configure","children":[],"call":["@snapshots []= ","Change  new ","Record  new "," config directories each "," config directories "," config ","Change Config  new "," config silencer "," config queue "," _configure ","@callbacks []= "," _process_event "," lambda ","@callbacks [] "," _log ","@Change  new s []= "]}," Listen Adapter Base initialize":{"type":"method","name":"initialize","children":[],"call":[" raise "," _log_exception "," caller ","Listen Options  new ","config adapter_options "," class const_get "," class "," fail ","config directories empty? ","config directories "]}," SassListen stop":{"type":"method","name":"stop","children":[],"call":["listener stop ","@listeners each ","Internals ThreadPool  stop "]}," SassListen to":{"type":"method","name":"to","children":[],"call":["@listeners << ","Listener  new tap ","Listener  new "]}," SassListen Silencer _init_ignores":{"type":"method","name":"_init_ignores","children":[],"call":["patterns compact flatten ","patterns compact ","patterns << "]}," SassListen Silencer silenced?":{"type":"method","name":"silenced?","children":[],"call":["path =~ "," ignore_patterns any? "," ignore_patterns "," only_patterns any? "," only_patterns ","type == ","relative_path to_s ","relative_path to_s  =~ ","relative_relative_path to_s  to_s "]}," SassListen Silencer configure":{"type":"method","name":"configure","children":[],"call":[" _init_ignores ","options [] "," Array "]}," SassListen Silencer initialize":{"type":"method","name":"initialize","children":[],"call":[" configure "]}," SassListen Silencer Controller _reconfigure_silencer":{"type":"method","name":"_reconfigure_silencer","children":[],"call":["@silencer configure ","@prev_silencer_options dup freeze ","@prev_silencer_options dup ","opts delete ","opts [] empty? ","opts [] ","opts key? ","Hash  [] "," Array flatten compact "," Array flatten "," Array ","opts map ","extra_options dup ","Hash  []  delete ","extra_options dup  delete ","Hash  []  [] empty? ","extra_options dup  [] empty? ","Hash  []  [] ","extra_options dup  [] ","Hash  []  key? ","extra_options dup  key? ","Hash  []  map ","extra_options dup  map "]}," SassListen Silencer Controller replace_with_only":{"type":"method","name":"replace_with_only","children":[],"call":[" _reconfigure_silencer "]}," SassListen Silencer Controller replace_with_bang_ignores":{"type":"method","name":"replace_with_bang_ignores","children":[],"call":[" _reconfigure_silencer "]}," SassListen Silencer Controller append_ignores":{"type":"method","name":"append_ignores","children":[],"call":[" _reconfigure_silencer ","prev_ignores + "," Array ","@prev_silencer_options [] "," Array  + "]}," SassListen Silencer Controller initialize":{"type":"method","name":"initialize","children":[],"call":[" _reconfigure_silencer ","Hash  [] ","rules compact ","opts [] ","opts key? ","(sym :only) map "]}," SassListen Record _fast_try_file":{"type":"method","name":"_fast_try_file","children":[],"call":[" _fast_unset_path ","entry name ","entry relative "," _fast_update_file ","entry meta "]}," SassListen Record _fast_build_dir":{"type":"method","name":"_fast_build_dir","children":[],"call":[" _fast_unset_path ","entry name ","entry relative "," _fast_try_file "," add_dir ","entry record_dir_key ","remaining << ","children each ","symlink_detector verify_unwatched! ","entry children ","remaining pop ","remaining pop  name ","remaining pop  relative ","remaining pop  record_dir_key ","entry children  each ","entry entry children  ","remaining pop  children "]}," SassListen Record _fast_unset_path":{"type":"method","name":"_fast_unset_path","children":[],"call":[" tree [] delete "," tree [] "," tree "," tree key? "," tree delete ","(nil) include? "]}," SassListen Record _fast_update_file":{"type":"method","name":"_fast_update_file","children":[],"call":[" tree [] []= ","(or\n  (send\n    (send\n      (send nil :tree) :[]\n      (lvar :dirname)) :[]\n    (lvar :basename))\n  (hash)) merge "," tree [] [] "," tree [] "," tree "," tree []= ","(or\n  (send\n    (send nil :tree) :[]\n    (lvar :basename))\n  (hash)) merge ","(nil) include? "]}," SassListen Record tree":{"type":"method","name":"tree","children":[],"call":[]}," SassListen Record _auto_hash":{"type":"method","name":"_auto_hash","children":[],"call":["h []= ","Hash  new "]}," SassListen Record build":{"type":"method","name":"build","children":[],"call":[" _fast_build_dir ","remaining empty? ","remaining << ","Entry  new "," root "," Queue  new ","SymlinkDetector  new "," _auto_hash "," Queue  new  empty? "," Queue  new  << "]}," SassListen Record dir_entries":{"type":"method","name":"dir_entries","children":[],"call":["result []= ","values key? ","subtree each "," tree [] ","rel_path to_s "," tree "," _auto_hash ","(nil) include? "," tree  each "]}," SassListen Record file_data":{"type":"method","name":"file_data","children":[],"call":[" tree [] [] dup "," tree [] [] "," tree [] "," tree "," tree [] dup ","(nil) include? "," Pathname split map "," Pathname split "," Pathname "]}," SassListen Record unset_path":{"type":"method","name":"unset_path","children":[],"call":[" _fast_unset_path "," Pathname split map "," Pathname split "," Pathname "]}," SassListen Record update_file":{"type":"method","name":"update_file","children":[],"call":[" _fast_update_file "," Pathname split map "," Pathname split "," Pathname "]}," SassListen Record add_dir":{"type":"method","name":"add_dir","children":[],"call":["@tree [] ","(nil) include? "]}," SassListen Record initialize":{"type":"method","name":"initialize","children":[],"call":["directory to_s "," _auto_hash "]}," SassListen Record SymlinkDetector _fail":{"type":"method","name":"_fail","children":[],"call":[" fail ","STDERR  puts "," format "]}," SassListen Record SymlinkDetector verify_unwatched!":{"type":"method","name":"verify_unwatched!","children":[],"call":[" _fail ","entry sys_path ","@real_dirs add? ","entry real_path ","entry entry real_path  "]}," SassListen Record SymlinkDetector initialize":{"type":"method","name":"initialize","children":[],"call":["Set  new "]}," SassListen Record Entry _entries":{"type":"method","name":"_entries","children":[],"call":[" raise ","Dir  entries ","directory ! "," File  directory? "," File  exist? ","RUBY_ENGINE  == "," File  directory?  ! "," File   File  directory? ? "]}," SassListen Record Entry _join":{"type":"method","name":"_join","children":[],"call":[" File  join ","args empty? ","(ivar :@relative) compact ","(ivar :@relative) compact  empty? "]}," SassListen Record Entry real_path":{"type":"method","name":"real_path","children":[],"call":[" File  realpath "," sys_path "]}," SassListen Record Entry sys_path":{"type":"method","name":"sys_path","children":[],"call":[" File  join ","(ivar :@root) compact "]}," SassListen Record Entry record_dir_key":{"type":"method","name":"record_dir_key","children":[],"call":[" File  join ","(ivar :@relative) compact "]}," SassListen Record Entry meta":{"type":"method","name":"meta","children":[],"call":["lstat mode ","lstat mtime to_f ","lstat mtime "," File  lstat "," sys_path "," File  lstat  mode "," File  lstat  mtime to_f "," File  lstat  mtime "," File   File  lstat  "]}," SassListen Record Entry children":{"type":"method","name":"children","children":[],"call":["Entry  new ","(send\n  (send nil :_entries\n    (send nil :sys_path)) :-\n  (array\n    (str \".\")\n    (str \"..\"))) map "," _entries - "," _entries "," sys_path "," _join "]}," SassListen Record Entry initialize":{"type":"method","name":"initialize","children":[],"call":[]}," SassListen QueueOptimizer _detect_possible_editor_save":{"type":"method","name":"_detect_possible_editor_save","children":[],"call":[" config silenced? "," Pathname "," config ","data [] ","changes each ","changes size == ","changes size "]}," SassListen QueueOptimizer _reinterpret_related_changes":{"type":"method","name":"_reinterpret_related_changes","children":[],"call":["(send\n  (lvar :cookies) :map) flatten ","table fetch ","not_silenced map "," config silenced? "," Pathname "," config ","changes reject "," _detect_possible_editor_save ","cookies map "]}," SassListen QueueOptimizer _calculate_add_remove_difference":{"type":"method","name":"_calculate_add_remove_difference","children":[],"call":["diff < ","added > ","diff zero? ","diff > "," config exist? "," config ","added - ","x == ","actions count ","added -  < ","added -  zero? ","added -  > "]}," SassListen QueueOptimizer _logical_action_for":{"type":"method","name":"_logical_action_for","children":[],"call":[" _calculate_add_remove_difference ","x == ","actions detect ","actions << ","actions delete "]}," SassListen QueueOptimizer _squash_changes":{"type":"method","name":"_squash_changes","children":[],"call":[" config debug ","squashed inspect "," config ","squashed [] << ","squashed [] ","type nil? ","actions each ","(pair\n  (sym :modified)\n  (array)) tap ","actions inspect ","path to_s "," _logical_action_for ","action_list map ","changes group_by map ","changes group_by ","dir + ","changes map "]}," SassListen QueueOptimizer initialize":{"type":"method","name":"initialize","children":[],"call":[]}," SassListen QueueOptimizer smoosh_changes":{"type":"method","name":"smoosh_changes","children":[],"call":[" _squash_changes "," _reinterpret_related_changes ","(or\n  (lvar :options)\n  (hash)) [] ","changes group_by "]}," SassListen QueueOptimizer Config debug":{"type":"method","name":"debug","children":[],"call":["SassListen  logger debug ","SassListen  logger "]}," SassListen QueueOptimizer Config silenced?":{"type":"method","name":"silenced?","children":[],"call":["@silencer silenced? "]}," SassListen QueueOptimizer Config exist?":{"type":"method","name":"exist?","children":[],"call":[" Pathname exist? "," Pathname "]}," SassListen QueueOptimizer Config initialize":{"type":"method","name":"initialize","children":[],"call":[]}," SassListen Options method_missing":{"type":"method","name":"method_missing","children":[],"call":[" fail ","@options keys inspect ","@options keys ","name inspect ","@options [] ","@options key? "]}," SassListen Options initialize":{"type":"method","name":"initialize","children":[],"call":[" fail ","SassListen Logger  warn ","given_options inspect ","given_options empty? ","@options []= ","defaults [] ","given_options delete ","defaults keys each ","defaults keys ","opts dup ","opts dup  inspect ","opts dup  empty? ","opts dup  delete "]}," SassListen setup_default_logger_if_unset":{"type":"method","name":"setup_default_logger_if_unset","children":[],"call":[]}," SassListen logger=":{"type":"method","name":"logger=","children":[],"call":[]}," SassListen logger":{"type":"method","name":"logger","children":[],"call":[]}," SassListen Listener only":{"type":"method","name":"only","children":[],"call":["@silencer_controller replace_with_only "]}," SassListen Listener ignore!":{"type":"method","name":"ignore!","children":[],"call":["@silencer_controller replace_with_bang_ignores "]}," SassListen Listener ignore":{"type":"method","name":"ignore","children":[],"call":["@silencer_controller append_ignores "]}," SassListen Listener paused?":{"type":"method","name":"paused?","children":[],"call":[" state == "," state "]}," SassListen Listener processing?":{"type":"method","name":"processing?","children":[],"call":[" state == "," state "]}," SassListen Listener pause":{"type":"method","name":"pause","children":[],"call":[" transition "]}," SassListen Listener stop":{"type":"method","name":"stop","children":[],"call":[" transition "]}," SassListen Listener start":{"type":"method","name":"start","children":[],"call":[" transition "," state == "," state "]}," SassListen Listener initialize":{"type":"method","name":"initialize","children":[],"call":["Event Loop  new ","Event Config  new ","@backend min_delay_between_events ","QueueOptimizer  new ","QueueOptimizer Config  new ","Backend  new ","Silencer Controller  new ","@config silencer_rules ","Silencer  new ","@processor wakeup_on_event ","Event Queue  new ","Event Queue Config  new ","@config relative? ","Config  new ","dirs pop ","dirs last is_a? ","dirs last ","Backend  new  min_delay_between_events ","@config silencer_@config silencer_rules  ","@config Silencer  new _rules ","Config  new  silencer_rules ","Event Loop  new  wakeup_on_event ","Config  new  relative? "]}," SassListen Listener Config adapter_select_options":{"type":"method","name":"adapter_select_options","children":[],"call":["Hash  [] ","valid_keys include? ","@options select ","(str \"force_polling\") map ","(str \"force_polling\") map  include? "]}," SassListen Listener Config adapter_instance_options":{"type":"method","name":"adapter_instance_options","children":[],"call":["Hash  [] ","valid_keys include? ","@options select ","klass const_get keys ","klass const_get ","klass const_get keys  include? "]}," SassListen Listener Config silencer_rules":{"type":"method","name":"silencer_rules","children":[],"call":[]}," SassListen Listener Config min_delay_between_events":{"type":"method","name":"min_delay_between_events","children":[],"call":[]}," SassListen Listener Config relative?":{"type":"method","name":"relative?","children":[],"call":[]}," SassListen Listener Config initialize":{"type":"method","name":"initialize","children":[],"call":["@options [] ","DEFAULTS  merge ","DEFAULTS  merge  [] "]}," SassListen Internals ThreadPool stop":{"type":"method","name":"stop","children":[],"call":[]}," SassListen Internals ThreadPool add":{"type":"method","name":"add","children":[],"call":[]}," SassListen FSM State valid_transition?":{"type":"method","name":"valid_transition?","children":[],"call":["@transitions include? ","new_state to_sym "]}," SassListen FSM State call":{"type":"method","name":"call","children":[],"call":["obj instance_eval "]}," SassListen FSM State initialize":{"type":"method","name":"initialize","children":[],"call":[" Array map "," Array "]}," SassListen FSM current_state_name":{"type":"method","name":"current_state_name","children":[],"call":[" current_state name "," current_state "]}," SassListen FSM current_state":{"type":"method","name":"current_state","children":[],"call":[" states [] "," states "]}," SassListen FSM default_state":{"type":"method","name":"default_state","children":[],"call":[" class default_state "," class "]}," SassListen FSM states":{"type":"method","name":"states","children":[],"call":[" class states "," class "]}," SassListen FSM transition_with_callbacks!":{"type":"method","name":"transition_with_callbacks!","children":[],"call":["state_name call "," transition! ","state_name name "]}," SassListen FSM validate_and_sanitize_new_state":{"type":"method","name":"validate_and_sanitize_new_state","children":[],"call":[" fail "," class ","state_name == "," default_state "," states [] "," states "," current_state transitions map join "," current_state transitions map "," current_state transitions "," current_state "," current_state valid_transition? ! "," current_state valid_transition? "," current_state_name == "," current_state_name ","state_name to_sym ","state_name to_sym  == "," current_state  current_state transitions map join _transition? ! "," current_state  current_state transitions map join _transition? "," current_state_name to_sym  == "," current_state_name to_sym  ","state_name to_sym  to_sym "]}," SassListen FSM transition!":{"type":"method","name":"transition!","children":[],"call":[]}," SassListen FSM transition":{"type":"method","name":"transition","children":[],"call":[" transition_with_callbacks! "," validate_and_sanitize_new_state "," validate_and_sanitize_ validate_and_sanitize_new_state  "]}," SassListen FSM initialize":{"type":"method","name":"initialize","children":[],"call":[" class default_state "," class "]}," SassListen FSM ClassMethods state":{"type":"method","name":"state","children":[],"call":[" states []= ","State  new ","options [] "," states "," default_state ","name to_sym ","args each ","h []= ","k to_s ","args pop each_with_object ","args pop ","args last is_a? ","args last ","name to_sym  to_sym "]}," SassListen FSM ClassMethods states":{"type":"method","name":"states","children":[],"call":[]}," SassListen FSM ClassMethods default_state":{"type":"method","name":"default_state","children":[],"call":["new_default to_sym "]}," SassListen FSM included":{"type":"method","name":"included","children":[],"call":[]}," SassListen File inaccurate_mac_time?":{"type":"method","name":"inaccurate_mac_time?","children":[],"call":[]}," SassListen File change":{"type":"method","name":"change","children":[],"call":[]}," SassListen Event Queue _safe_relative_from_cwd":{"type":"method","name":"_safe_relative_from_cwd","children":[],"call":["dir relative_path_from ","Pathname  pwd "," config relative? "," config "]}," SassListen Event Queue pop":{"type":"method","name":"pop","children":[],"call":[" event_queue pop "," event_queue "]}," SassListen Event Queue empty?":{"type":"method","name":"empty?","children":[],"call":[" event_queue empty? "," event_queue "]}," SassListen Event Queue <<":{"type":"method","name":"<<","children":[],"call":[" block call "," block "," event_queue public_send "," event_queue "," _safe_relative_from_cwd "," fail ","path inspect ","path is_a? ","change inspect ","change is_a? ","type inspect ","(sym :dir) include? ","(sym : _safe_relative_from_cwd ) include? "]}," SassListen Event Queue initialize":{"type":"method","name":"initialize","children":[],"call":[" Queue  new "]}," SassListen Event Queue Config relative?":{"type":"method","name":"relative?","children":[],"call":[]}," SassListen Event Queue Config initialize":{"type":"method","name":"initialize","children":[],"call":[]}," SassListen Event Processor _process_changes":{"type":"method","name":"_process_changes","children":[],"call":["SassListen Logger  debug "," _timestamp - "," _timestamp "," config call "," config ","result all? ","hash [] "," config optimize_changes "," config callable? ","changes << "," config event_queue pop "," config event_queue "," config event_queue empty? "," _reset_no_unprocessed_events "," config optimize_changes  [] "," config  config callable? ? "]}," SassListen Event Processor _timestamp":{"type":"method","name":"_timestamp","children":[],"call":[" config timestamp "," config "]}," SassListen Event Processor _flush_wakeup_reasons":{"type":"method","name":"_flush_wakeup_reasons","children":[],"call":[" block_given? ","reasons pop ","reasons empty? ","reasons pop s pop ","reasons pop s empty? "]}," SassListen Event Processor _wait_until_events":{"type":"method","name":"_wait_until_events","children":[],"call":[" _timestamp "," _sleep "," config event_queue empty? "," config event_queue "," config "]}," SassListen Event Processor _deadline":{"type":"method","name":"_deadline","children":[],"call":["@first_unprocessed_event_time + "]}," SassListen Event Processor _reset_no_unprocessed_events":{"type":"method","name":"_reset_no_unprocessed_events","children":[],"call":[]}," SassListen Event Processor _remember_time_of_first_unprocessed_event":{"type":"method","name":"_remember_time_of_first_unprocessed_event","children":[],"call":[" _timestamp "]}," SassListen Event Processor _sleep":{"type":"method","name":"_sleep","children":[],"call":[" _remember_time_of_first_unprocessed_event "," config paused? "," config ","reason == "," _flush_wakeup_reasons "," _check_stopped "," config sleep "]}," SassListen Event Processor _check_stopped":{"type":"method","name":"_check_stopped","children":[],"call":[" raise "," _flush_wakeup_reasons "," config stopped? "," config "]}," SassListen Event Processor _wait_until_no_longer_paused":{"type":"method","name":"_wait_until_no_longer_paused","children":[],"call":[" _sleep "," config paused? "," config "]}," SassListen Event Processor _wait_until_events_calm_down":{"type":"method","name":"_wait_until_events_calm_down","children":[],"call":[" _sleep ","diff <= "," _deadline - "," _deadline "," _timestamp "," loop "," _deadline -  <= "]}," SassListen Event Processor loop_for":{"type":"method","name":"loop_for","children":[],"call":["SassListen Logger  debug "," _process_changes "," _wait_until_no_longer_paused "," _wait_until_events_calm_down "," _wait_until_events "," loop "]}," SassListen Event Processor initialize":{"type":"method","name":"initialize","children":[],"call":[" _reset_no_unprocessed_events "]}," SassListen Event Loop _wakeup":{"type":"method","name":"_wakeup","children":[],"call":[" wait_thread wakeup "," wait_thread ","@reasons << "]}," SassListen Event Loop _nice_error":{"type":"method","name":"_nice_error","children":[],"call":["SassListen Logger  error "," format ","ex backtrace * ","ex backtrace "]}," SassListen Event Loop _wait_until_resumed":{"type":"method","name":"_wait_until_resumed","children":[],"call":[" state= "," sleep ","ready_queue << "]}," SassListen Event Loop _sleep":{"type":"method","name":"_sleep","children":[],"call":["Kernel  sleep "]}," SassListen Event Loop _wait_for_changes":{"type":"method","name":"_wait_for_changes","children":[],"call":[" _nice_error ","processor loop_for ","config min_delay_between_events "," _wait_until_resumed ","Event Processor  new ","Event Processor  new  loop_for "]}," SassListen Event Loop stopped?":{"type":"method","name":"stopped?","children":[],"call":[" wait_thread ! "," wait_thread "]}," SassListen Event Loop teardown":{"type":"method","name":"teardown","children":[],"call":[" wait_thread join "," wait_thread "," _wakeup "," wait_thread alive? "]}," SassListen Event Loop pause":{"type":"method","name":"pause","children":[],"call":[]}," SassListen Event Loop resume":{"type":"method","name":"resume","children":[],"call":[" _wakeup "," wait_thread "," fail "," stopped? "]}," SassListen Event Loop setup":{"type":"method","name":"setup","children":[],"call":["q pop ","Timeout  timeout ","SassListen Logger  debug "," _wait_for_changes "," config ","Internals ThreadPool  add "," Queue  new "," Queue  new  pop "]}," SassListen Event Loop processing?":{"type":"method","name":"processing?","children":[],"call":[" state == "," state "," paused? "," stopped? "]}," SassListen Event Loop paused?":{"type":"method","name":"paused?","children":[],"call":[" state == "," state "," wait_thread "]}," SassListen Event Loop wakeup_on_event":{"type":"method","name":"wakeup_on_event","children":[],"call":[" _wakeup "," wait_thread alive? "," wait_thread "," processing? "," stopped? "]}," SassListen Event Loop initialize":{"type":"method","name":"initialize","children":[],"call":[" Queue  new "]}," SassListen Event Config paused?":{"type":"method","name":"paused?","children":[],"call":[" listener state == "," listener state "," listener "]}," SassListen Event Config stopped?":{"type":"method","name":"stopped?","children":[],"call":[" listener state == "," listener state "," listener "]}," SassListen Event Config min_delay_between_events":{"type":"method","name":"min_delay_between_events","children":[],"call":[]}," SassListen Event Config optimize_changes":{"type":"method","name":"optimize_changes","children":[],"call":["@queue_optimizer smoosh_changes "]}," SassListen Event Config callable?":{"type":"method","name":"callable?","children":[],"call":[]}," SassListen Event Config event_queue":{"type":"method","name":"event_queue","children":[],"call":[]}," SassListen Event Config timestamp":{"type":"method","name":"timestamp","children":[],"call":["Time  now to_f ","Time  now "]}," SassListen Event Config call":{"type":"method","name":"call","children":[],"call":["@block call "]}," SassListen Event Config sleep":{"type":"method","name":"sleep","children":[],"call":["Kernel  sleep "]}," SassListen Event Config initialize":{"type":"method","name":"initialize","children":[],"call":[]}," SassListen Directory _children":{"type":"method","name":"_children","children":[],"call":[]}," SassListen Directory _change":{"type":"method","name":"_change","children":[],"call":[]}," SassListen Directory _async_changes":{"type":"method","name":"_async_changes","children":[],"call":[]}," SassListen Directory scan":{"type":"method","name":"scan","children":[],"call":[]}," SassListen Forwarder start":{"type":"method","name":"start","children":[],"call":[" sleep ","listener processing? ","listener start ","SassListen  to "," logger info "," logger ","modified empty? ","removed empty? ","added empty? ","@options [] "," proc ","SassListen  to  processing? ","SassListen  to  start "]}," SassListen Forwarder initialize":{"type":"method","name":"initialize","children":[],"call":["@logger formatter= "," proc ","@logger level= "," Logger  new "," Logger  new  formatter= "," Logger  new  level= "]}," SassListen CLI start":{"type":"method","name":"start","children":[],"call":["SassListen Forwarder  new start ","SassListen Forwarder  new "," options "]}," SassListen Change invalidate":{"type":"method","name":"invalidate","children":[],"call":[" raise ","SassListen Logger  error "," format ","ex backtrace * ","ex backtrace "," exinspect "," __method__ "," class "," config queue "," config ","options [] ","change ! ","File  change "," record ","Directory  scan ","type == ","options inspect ","SassListen Logger  debug ","watched_dir + ","rel_path inspect "," config silenced? ","cookie ! ","Pathname  new "," record root ","File  change  ! ","options []  ! ","File  File  change  ","File  options []  ","Pathname  new  + ","rel_watched_dir +  inspect "]}," SassListen Change initialize":{"type":"method","name":"initialize","children":[],"call":[]}," SassListen Change Config queue":{"type":"method","name":"queue","children":[],"call":["@queue << "]}," SassListen Change Config silenced?":{"type":"method","name":"silenced?","children":[],"call":["@silencer silenced? "," Pathname "]}," SassListen Change Config initialize":{"type":"method","name":"initialize","children":[],"call":[]}," SassListen Backend min_delay_between_events":{"type":"method","name":"min_delay_between_events","children":[],"call":[]}," SassListen Backend stop":{"type":"method","name":"stop","children":[],"call":[" adapter stop "," adapter "]}," SassListen Backend start":{"type":"method","name":"start","children":[],"call":[" adapter start "," adapter "]}," SassListen Backend initialize":{"type":"method","name":"initialize","children":[],"call":["adapter_class new ","Adapter Config  new ","config adapter_instance_options "," DEFAULTS  [] ","config min_delay_between_events ","Adapter  select ","config adapter_select_options ","Adapter  select  new "]}," SassListen Adapter _log":{"type":"method","name":"_log","children":[],"call":[]}," SassListen Adapter _warn_polling_fallback":{"type":"method","name":"_warn_polling_fallback","children":[],"call":[]}," SassListen Adapter _usable_adapter_class":{"type":"method","name":"_usable_adapter_class","children":[],"call":[]}," SassListen Adapter select":{"type":"method","name":"select","children":[],"call":[]}," SassListen Adapter Windows _change":{"type":"method","name":"_change","children":[],"call":["types include? ","(pair\n  (sym :modified)\n  (array\n    (sym :modified)\n    (sym :attrib))) each "]}," SassListen Adapter Windows _process_event":{"type":"method","name":"_process_event","children":[],"call":[" raise "," _log "," format ","$ERROR_POSITION * ","event inspect "," _queue_change ","change type == ","change type "," Pathname dirname to_s "," Pathname dirname "," Pathname ","full_path directory? "," _change ","full_path relative_path_from to_s ","full_path relative_path_from ","change path "," Pathname  directory? "," Pathname  relative_path_from to_s "," Pathname  relative_path_from "]}," SassListen Adapter Windows _run":{"type":"method","name":"_run","children":[],"call":["@worker run! "]}," SassListen Adapter Windows _configure":{"type":"method","name":"_configure","children":[],"call":["callback call ","@worker watch_recursively ","dir to_s ","WDM Monitor  new "," _log "," require "]}," SassListen Adapter Windows usable?":{"type":"method","name":"usable?","children":[],"call":[]}," SassListen Adapter Polling _process_event":{"type":"method","name":"_process_event","children":[],"call":[" _queue_change "]}," SassListen Adapter Polling _run":{"type":"method","name":"_run","children":[],"call":[" sleep ","nap_time > "," options latency - ","Time  now to_f - ","Time  now to_f ","Time  now "," options latency "," options ","callback call ","@polling_callbacks each "," loop "," options latency -  > "]}," SassListen Adapter Polling _configure":{"type":"method","name":"_configure","children":[],"call":["@polling_callbacks << "]}," SassListen Adapter Linux _stop":{"type":"method","name":"_stop","children":[],"call":["@worker close "]}," SassListen Adapter Linux _dir_event?":{"type":"method","name":"_dir_event?","children":[],"call":["event flags include? ","event flags "]}," SassListen Adapter Linux _change":{"type":"method","name":"_change","children":[],"call":["(send\n  (lvar :flags) :&\n  (lvar :event_flags)) empty? ","flags & ","(pair\n  (sym :modified)\n  (array\n    (sym :attrib)\n    (sym :close_write))) each "]}," SassListen Adapter Linux _skip_event?":{"type":"method","name":"_skip_event?","children":[],"call":["(send\n  (send\n    (lvar :event) :flags) :&\n  (array\n    (sym :close)\n    (sym :modify))) any? ","event flags & ","event flags "," _dir_event? ","event name == ","event name "]}," SassListen Adapter Linux _process_event":{"type":"method","name":"_process_event","children":[],"call":[" _queue_change ","cookie_params merge "," _change ","event flags "," _dir_event? ","event cookie ","event cookie zero? "," _skip_event? ","path dirname relative_path_from to_s ","path dirname relative_path_from ","path dirname ","event flags & ","ENV  [] ","event flags inspect "," _log ","path relative_path_from to_s ","path relative_path_from ","Pathname  new + ","event name ","Pathname  new ","event watcher path ","event watcher ","cookie_cookie_params merge  merge ","Pathname  new +  dirname relative_Pathname  new + _from to_s ","Pathname  new +  dirname relative_Pathname  new + _from ","Pathname  new +  dirname ","Pathname  new +  relative_Pathname  new + _from to_s ","Pathname  new +  relative_Pathname  new + _from ","event watcher Pathname  new +  "]}," SassListen Adapter Linux _run":{"type":"method","name":"_run","children":[],"call":["Thread  current []= ","Thread  current ","@worker run "]}," SassListen Adapter Linux _configure":{"type":"method","name":"_configure","children":[],"call":[" abort ","@worker watch "," options events "," options ","directory to_s "," INotify Notifier  new "," require "]}," SassListen Adapter Darwin _to_array":{"type":"method","name":"_to_array","children":[],"call":["workers << ","queue pop ","queue empty? "]}," SassListen Adapter Darwin _run_workers_in_background":{"type":"method","name":"_run_workers_in_background","children":[],"call":[" _run_worker ","SassListen Internals ThreadPool  add ","workers each "]}," SassListen Adapter Darwin _run_worker":{"type":"method","name":"_run_worker","children":[],"call":[" _log_exception "," caller ","worker run "," _log ","worker inspect "]}," SassListen Adapter Darwin _process_event":{"type":"method","name":"_process_event","children":[],"call":[" _queue_change ","new_path relative_path_from to_s ","new_path relative_path_from "," _log ","Pathname  new ","path sub ","event each ","event inspect ","Pathname  new  relative_path_from to_s ","Pathname  new  relative_path_from "]}," SassListen Adapter Darwin _run":{"type":"method","name":"_run","children":[],"call":[" _run_worker "," _run_workers_in_background "," _to_array ","@workers pop "]}," SassListen Adapter Darwin _configure":{"type":"method","name":"_configure","children":[],"call":["@workers << ","worker watch ","dir to_s "," _log ","dir to_s inspect ","FSEvent  new tap ","FSEvent  new "," Queue  new "," options latency "," options "]}," SassListen Adapter Darwin usable?":{"type":"method","name":"usable?","children":[],"call":[]}," SassListen Adapter Config initialize":{"type":"method","name":"initialize","children":[],"call":["Pathname  new realpath ","Pathname  new ","directory to_s ","directories map ","Dir  pwd ","directories to_a empty? ","directories to_a "]}," SassListen Adapter BSD _find":{"type":"method","name":"_find","children":[],"call":["Find  send "]}," SassListen Adapter BSD _watch_file":{"type":"method","name":"_watch_file","children":[],"call":[" _log ","e message ","queue watch_file "," options events "," options "]}," SassListen Adapter BSD _watch_for_new_file":{"type":"method","name":"_watch_for_new_file","children":[],"call":[" _watch_file ","v path == ","file_path to_s ","v path ","queue watchers detect ","queue watchers "," _find "," _event_path to_s "," _event_path ","event watcher queue ","event watcher ","event watcher queue  watchers detect ","event watcher queue  watchers ","event watcher event watcher queue  "]}," SassListen Adapter BSD _event_path":{"type":"method","name":"_event_path","children":[],"call":["Pathname  new ","event watcher path ","event watcher "]}," SassListen Adapter BSD _change":{"type":"method","name":"_change","children":[],"call":["(send\n  (lvar :flags) :&\n  (lvar :event_flags)) empty? ","flags & ","(pair\n  (sym :modified)\n  (array\n    (sym :attrib)\n    (sym :extend))) each "]}," SassListen Adapter BSD _process_event":{"type":"method","name":"_process_event","children":[],"call":[" _watch_for_new_file ","full_path directory? "," _queue_change "," _change ","event flags ","path to_s ","full_path relative_path_from ","full_path exist? "," _event_path ","full_full_path relative_path_from  directory? "," _event_path  directory? ","full_path relative_path_from  to_s ","full_full_path relative_path_from  relative_full_path relative_path_from _from "," _event_path  relative_path_from ","full_full_path relative_path_from  exist? "," _event_path  exist? "," _event_full_path relative_path_from  "]}," SassListen Adapter BSD _run":{"type":"method","name":"_run","children":[],"call":["@worker run "]}," SassListen Adapter BSD _configure":{"type":"method","name":"_configure","children":[],"call":[" _watch_file "," _find ","directory to_s ","KQueue Queue  new "]}," SassListen Adapter BSD usable?":{"type":"method","name":"usable?","children":[],"call":[]}," SassListen Adapter Base _log":{"type":"method","name":"_log","children":[],"call":[" class send "," class "]}," SassListen Adapter Base _log_exception":{"type":"method","name":"_log_exception","children":[],"call":[" _log "," format ","caller_stack * ","$ERROR_POSITION * "]}," SassListen Adapter Base _queue_change":{"type":"method","name":"_queue_change","children":[],"call":["@snapshots [] invalidate ","@snapshots [] "]}," SassListen Adapter Base _timed":{"type":"method","name":"_timed","children":[],"call":[" raise ","SassListen Logger  warn ","$ERROR_INFO inspect ","SassListen Logger  info "," format ","Time  now to_f - ","Time  now to_f ","Time  now "]}," SassListen Adapter Base _stop":{"type":"method","name":"_stop","children":[],"call":[]}," SassListen Adapter Base usable?":{"type":"method","name":"usable?","children":[],"call":[]}," SassListen Adapter Base stop":{"type":"method","name":"stop","children":[],"call":[" _stop "]}," SassListen Adapter Base start":{"type":"method","name":"start","children":[],"call":[" raise "," _log_exception "," _run ","snapshot record build ","snapshot record "," _timed ","@snapshots values each ","@snapshots values ","SassListen Internals ThreadPool  add "," caller dup "," caller "," _log "," started? "," configure "]}," SassListen Adapter Base started?":{"type":"method","name":"started?","children":[],"call":[]}," SassListen Adapter Base configure":{"type":"method","name":"configure","children":[],"call":["@snapshots []= ","Change  new ","Record  new "," config directories each "," config directories "," config ","Change Config  new "," config silencer "," config queue "," _configure ","@callbacks []= "," _process_event "," lambda ","@callbacks [] "," _log ","@Change  new s []= "]}," SassListen Adapter Base initialize":{"type":"method","name":"initialize","children":[],"call":[" raise "," _log_exception "," caller ","SassListen Options  new ","config adapter_options "," class const_get "," class "," fail ","config directories empty? ","config directories "]}}