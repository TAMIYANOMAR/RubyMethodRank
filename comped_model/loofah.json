{" Loofah scrub_document":{"type":"method","name":"scrub_document","children":[],"call":["Loofah  document scrub! ","Loofah  document "]}," Loofah scrub_fragment":{"type":"method","name":"scrub_fragment","children":[],"call":["Loofah  fragment scrub! ","Loofah  fragment "]}," Loofah fragment":{"type":"method","name":"fragment","children":[],"call":["Loofah HTML DocumentFragment  parse "]}," Loofah document":{"type":"method","name":"document","children":[],"call":["Loofah HTML Document  parse "," remove_comments_before_html_element "]}," Loofah Scrubber traverse_conditionally_bottom_up":{"type":"method","name":"traverse_conditionally_bottom_up","children":[],"call":[" send "," traverse_conditionally_bottom_up ","node children each ","node children "," scrub "," block call "," block "]}," Loofah Scrubber traverse_conditionally_top_down":{"type":"method","name":"traverse_conditionally_top_down","children":[],"call":[" traverse_conditionally_top_down ","node children each ","node children "," send "," scrub == "," scrub "," block call == "," block call "," block "]}," Loofah Scrubber whitewash":{"type":"method","name":"whitewash","children":[],"call":["node remove ","node namespaces empty? ","node namespaces ","node remove_attribute ","attr first ","node attributes each ","node attributes ","HTML5 HashedWhiteList ALLOWED_ELEMENTS  [] ","node name ","node type "]}," Loofah Scrubber strip":{"type":"method","name":"strip","children":[],"call":["node remove ","node before ","node inner_html "," sanitize "]}," Loofah Scrubber prune":{"type":"method","name":"prune","children":[],"call":["node remove "," sanitize "]}," Loofah Scrubber escape":{"type":"method","name":"escape","children":[],"call":["node remove ","node add_next_sibling ","Nokogiri XML Text  new ","node document ","node to_s "," sanitize "]}," Loofah Scrubber sanitize":{"type":"method","name":"sanitize","children":[],"call":["HTML5 Scrub  scrub_attributes ","HTML5 HashedWhiteList ALLOWED_ELEMENTS  [] ","node name ","node type "]}," Loofah ScrubberInstanceMethods text":{"type":"method","name":"text","children":[],"call":[" __sanitize_roots children inner_text "," __sanitize_roots children "," __sanitize_roots "]}," Loofah ScrubberInstanceMethods to_s":{"type":"method","name":"to_s","children":[],"call":[" __sanitize_roots children to_s "," __sanitize_roots children "," __sanitize_roots "]}," Loofah ScrubberInstanceMethods scrub!":{"type":"method","name":"scrub!","children":[],"call":[" raise ","Scrubber  traverse_conditionally_bottom_up ","method to_sym "," __sanitize_roots children each "," __sanitize_roots children "," __sanitize_roots ","Scrubber  traverse_conditionally_top_down "]}," Loofah HTML DocumentFragment __sanitize_roots":{"type":"method","name":"__sanitize_roots","children":[],"call":[" xpath first "," xpath "]}," Loofah HTML DocumentFragment parse":{"type":"method","name":"parse","children":[],"call":[" new ","Loofah HTML Document  new ","doc encoding= ","tags encoding name ","tags encoding ","tags respond_to? ","Loofah HTML Document  new  encoding= "]}," Loofah HTML Document __sanitize_roots":{"type":"method","name":"__sanitize_roots","children":[],"call":[" xpath "]}," Loofah warn_once":{"type":"method","name":"warn_once","children":[],"call":["@aooga []= "," warn ","@aooga [] ","@aooga key? "]}," Loofah sanitize_document":{"type":"method","name":"sanitize_document","children":[],"call":["Loofah  scrub_document to_xml ","Loofah  scrub_document "," warn_once "]}," Loofah sanitize":{"type":"method","name":"sanitize","children":[],"call":["Loofah  scrub_fragment to_xml ","Loofah  scrub_fragment "," warn_once "]}," Loofah whitewash_document":{"type":"method","name":"whitewash_document","children":[],"call":["Loofah  scrub_document to_s ","Loofah  scrub_document "," warn_once "]}," Loofah whitewash":{"type":"method","name":"whitewash","children":[],"call":["Loofah  scrub_fragment to_s ","Loofah  scrub_fragment "," warn_once "]}," Loofah strip_tags":{"type":"method","name":"strip_tags","children":[],"call":["Loofah  scrub_document text ","Loofah  scrub_document "," warn_once "]}," Loofah ActiveRecord html_document":{"type":"method","name":"html_document","children":[],"call":["record []= ","Loofah  scrub_document ","record [] "," before_save "," raise ","options [] "]}," Loofah ActiveRecord html_fragment":{"type":"method","name":"html_fragment","children":[],"call":["record []= ","Loofah  scrub_fragment ","record [] "," before_save "," raise ","options [] "]}," Loofah ActiveRecordExtension html_document":{"type":"method","name":"html_document","children":[],"call":["record []= ","Loofah  scrub_document to_s ","Loofah  scrub_document ","record [] "," before_save "," raise ","options [] "," before_validation "]}," Loofah ActiveRecordExtension html_fragment":{"type":"method","name":"html_fragment","children":[],"call":["record []= ","Loofah  scrub_fragment to_s ","Loofah  scrub_fragment ","record [] "," before_save "," raise ","options [] "," before_validation "]}," Loofah XssFoliate InstanceMethods xss_foliate_fields":{"type":"method","name":"xss_foliate_fields","children":[],"call":[" []= ","fragment text ","fragment nil? ","Loofah  scrub_fragment ","fragment to_s "," xss_foliate_options [] include? "," xss_foliate_options [] "," xss_foliate_options ","value is_a? ! ","value is_a? ","value nil? "," [] ","column name to_sym ","column name ","column type == ","column type "," class columns each "," class columns "," class "," xss_foliate_options nil? "," xss_foliated_with_standard_scrubber ","Loofah  scrub_fragment  text ","Loofah  scrub_fragment  nil? ","Loofah  scrub_Loofah  scrub_fragment  ","Loofah  scrub_fragment  to_s "," []  is_a? ! "," []  is_a? "," []  nil? "]}," Loofah XssFoliate ClassMethods xss_foliated?":{"type":"method","name":"xss_foliated?","children":[],"call":["(or\n  (send\n    (lvar :options) :nil?)\n  (send\n    (lvar :options) :empty?)) ! ","options empty? ","options nil? "," read_inheritable_attribute ","(or\n  (send\n    (lvar : read_inheritable_attribute ) :nil?)\n  (send\n    (lvar : read_inheritable_attribute ) :empty?)) ! "," read_inheritable_attribute  empty? "," read_inheritable_attribute  nil? "]}," Loofah XssFoliate ClassMethods xss_foliate":{"type":"method","name":"xss_foliate","children":[],"call":[" write_inheritable_attribute ","val to_sym "," Array collect "," Array ","options delete ","options [] ","ALIASED_OPTIONS  each ","options []= ","REAL_OPTIONS  each "," raise ","VALID_OPTIONS  include? ","options keys each ","options keys "," include "," class_inheritable_reader "," before_validation ","cb == ","cbs any? ","cbs nil? ! ","cbs nil? "," read_inheritable_attribute ","cb method == ","cb method "," before_validation_callback_chain any? "," before_validation_callback_chain "," respond_to? "," read_inheritable_attribute  any? "," read_inheritable_attribute  nil? ! "," read_inheritable_attribute  nil? "]}," Loofah Helpers sanitize":{"type":"method","name":"sanitize","children":[],"call":["Loofah  scrub_fragment to_s ","Loofah  scrub_fragment ","loofah_fragment to_s ","form remove ","loofah_fragment xpath each ","loofah_fragment xpath ","loofah_fragment scrub! ","Loofah  fragment ","Loofah  html4_fragment ","Loofah  fragment  to_s ","Loofah  html4_fragment  to_s ","Loofah  fragment  xpath each ","Loofah  html4_fragment  xpath each ","Loofah  fragment  xpath ","Loofah  html4_fragment  xpath ","Loofah  fragment  scrub! ","Loofah  html4_fragment  scrub! "]}," Loofah Helpers strip_tags":{"type":"method","name":"strip_tags","children":[],"call":["Loofah  fragment text ","Loofah  fragment ","Loofah  html4_fragment text ","Loofah  html4_fragment "]}," Loofah HTML DocumentFragment to_s":{"type":"method","name":"to_s","children":[],"call":[" __sanitize_roots children to_s "," __sanitize_roots children "," __sanitize_roots "," sanitize_roots children to_s "," sanitize_roots children "," sanitize_roots "," serialize_roots children to_s "," serialize_roots children "," serialize_roots "," serialize_root children to_s "," serialize_root children "," serialize_root "]}," Loofah scrub_xml_document":{"type":"method","name":"scrub_xml_document","children":[],"call":["Loofah  xml_document scrub! ","Loofah  xml_document "]}," Loofah scrub_xml_fragment":{"type":"method","name":"scrub_xml_fragment","children":[],"call":["Loofah  xml_fragment scrub! ","Loofah  xml_fragment "]}," Loofah xml_fragment":{"type":"method","name":"xml_fragment","children":[],"call":["Loofah XML DocumentFragment  parse "]}," Loofah xml_document":{"type":"method","name":"xml_document","children":[],"call":["Loofah XML Document  parse "]}," Loofah Scrubbers NoFollow scrub":{"type":"method","name":"scrub","children":[],"call":["node set_attribute ","node name == ","node name ","node type == ","node type "," append_attribute "]}," Loofah Scrubbers NoFollow initialize":{"type":"method","name":"initialize","children":[],"call":[]}," Loofah Scrubbers Whitewash scrub":{"type":"method","name":"scrub","children":[],"call":["node remove ","node namespaces empty? ","node namespaces ","node remove_attribute ","attr first ","node attributes each ","node attributes ","HTML5 HashedWhiteList ALLOWED_ELEMENTS  [] ","node name ","node type ","HTML5 HashedWhiteList ALLOWED_ELEMENTS_WITH_LIBXML2  [] ","HTML5 Scrub  allowed_element? "]}," Loofah Scrubbers Whitewash initialize":{"type":"method","name":"initialize","children":[],"call":[]}," Loofah Scrubbers Escape scrub":{"type":"method","name":"scrub","children":[],"call":["node remove ","node add_next_sibling ","Nokogiri XML Text  new ","node document ","node to_s "," html5lib_sanitize == "," html5lib_sanitize "]}," Loofah Scrubbers Escape initialize":{"type":"method","name":"initialize","children":[],"call":[]}," Loofah Scrubbers Prune scrub":{"type":"method","name":"scrub","children":[],"call":["node remove "," html5lib_sanitize == "," html5lib_sanitize "]}," Loofah Scrubbers Prune initialize":{"type":"method","name":"initialize","children":[],"call":[]}," Loofah Scrubbers Strip scrub":{"type":"method","name":"scrub","children":[],"call":["node remove ","node before ","node inner_html "," html5lib_sanitize == "," html5lib_sanitize ","node children ","Nokogiri XML Text  new ","node document ","Loofah  fragment scrub! to_html ","Loofah  fragment scrub! ","Loofah  fragment ","node children first to_html ","node children first ","node children first cdata? ","node children length == ","node children length "]}," Loofah Scrubbers Strip initialize":{"type":"method","name":"initialize","children":[],"call":[]}," Loofah Scrubber html5lib_sanitize":{"type":"method","name":"html5lib_sanitize","children":[],"call":["HTML5 Scrub  scrub_attributes ","HTML5 HashedWhiteList ALLOWED_ELEMENTS  [] ","node name ","node type ","HTML5 HashedWhiteList ALLOWED_ELEMENTS_WITH_LIBXML2  [] ","HTML5 Scrub  allowed_element? ","node before ","HTML5 Scrub  cdata_escape ","HTML5 Scrub  cdata_needs_escaping? "]}," Loofah Scrubber scrub":{"type":"method","name":"scrub","children":[],"call":[" raise "," class to_s "," class "]}," Loofah Scrubber traverse":{"type":"method","name":"traverse","children":[],"call":[" traverse_conditionally_top_down "," traverse_conditionally_bottom_up "," direction == "," direction "]}," Loofah Scrubber initialize":{"type":"method","name":"initialize","children":[],"call":[" raise ","(sym :top_down) include? ","options [] "]}," Loofah InstanceMethods text":{"type":"method","name":"text","children":[],"call":[" sanitize_roots children inner_text "," sanitize_roots children "," sanitize_roots "]}," Loofah InstanceMethods scrub!":{"type":"method","name":"scrub!","children":[],"call":["scrubber traverse "," sanitize_roots children each "," sanitize_roots children "," sanitize_roots "," raise ","scrubber inspect ","scrubber is_a? ","Scrubbers MAP  [] new ","Scrubbers MAP  [] ","Scrubbers MAP  [] new  traverse ","Scrubbers MAP  [] new  inspect ","Scrubbers MAP  [] new  is_a? "]}," Loofah HTML DocumentFragment sanitize_roots":{"type":"method","name":"sanitize_roots","children":[],"call":[" xpath first "," xpath "]}," Loofah HTML Document sanitize_roots":{"type":"method","name":"sanitize_roots","children":[],"call":[" xpath "]}," Loofah XML DocumentFragment sanitize_roots":{"type":"method","name":"sanitize_roots","children":[],"call":[]}," Loofah XML DocumentFragment parse":{"type":"method","name":"parse","children":[],"call":[" new ","Loofah XML Document  new ","doc encoding= ","tags encoding name ","tags encoding ","tags respond_to? ","Loofah XML Document  new  encoding= "]}," Loofah XML Document sanitize_roots":{"type":"method","name":"sanitize_roots","children":[],"call":[]}," Loofah DocumentDecorator initialize":{"type":"method","name":"initialize","children":[],"call":[" decorators << "," decorators "]}," Loofah ScrubBehavior resolve_scrubber":{"type":"method","name":"resolve_scrubber","children":[],"call":[" raise ","scrubber inspect ","scrubber is_a? ","Scrubbers MAP  [] new ","Scrubbers MAP  [] ","Scrubbers MAP  [] new  inspect ","Scrubbers MAP  [] new  is_a? "]}," Loofah ScrubBehavior NodeSet scrub!":{"type":"method","name":"scrub!","children":[],"call":["node scrub! "," each "]}," Loofah ScrubBehavior Node scrub!":{"type":"method","name":"scrub!","children":[],"call":["scrubber traverse ","node scrub! "," children each "," children "," root ","ScrubBehavior  resolve_scrubber "," children scrub! ","ScrubBehavior  resolve_scrubber  traverse ","ScrubBehavior  resolve_ScrubBehavior  resolve_scrubber  "]}," Loofah HTML DocumentFragment serialize_roots":{"type":"method","name":"serialize_roots","children":[],"call":[" xpath first "," xpath "]}," Loofah HTML DocumentFragment text":{"type":"method","name":"text","children":[],"call":[" serialize_roots children inner_text "," serialize_roots children "," serialize_roots "," encode_special_chars "]}," Loofah HTML Document text":{"type":"method","name":"text","children":[],"call":[" xpath inner_text "," xpath "," encode_special_chars "]}," Loofah XssFoliate xss_foliate_all_models":{"type":"method","name":"xss_foliate_all_models","children":[],"call":[]}," Loofah XssFoliate InstanceMethods xss_foliated_with_standard_scrubber":{"type":"method","name":"xss_foliated_with_standard_scrubber","children":[],"call":[" []= ","fragment to_s ","fragment nil? ","Loofah  scrub_fragment "," [] "," xss_foliate_options [] include? "," xss_foliate_options [] "," xss_foliate_options ","Loofah Scrubbers  scrubber_symbols each ","Loofah Scrubbers  scrubber_symbols ","Loofah  scrub_fragment  to_s ","Loofah  scrub_fragment  nil? ","Loofah  scrub_Loofah  scrub_fragment  "]}," Loofah Scrubbers scrubber_symbols":{"type":"method","name":"scrubber_symbols","children":[],"call":["MAP  keys "]}," Loofah Scrubbers NewlineBlockElements scrub":{"type":"method","name":"scrub","children":[],"call":["node remove ","node add_next_sibling ","Nokogiri XML Text  new ","node document ","node content ","Loofah HashedElements BLOCK_LEVEL  [] ","node name ","Loofah Elements BLOCK_LEVEL  include? ","Loofah Elements INLINE_LINE_BREAK  include? ","Loofah Elements LINEBREAKERS  include? "]}," Loofah Scrubbers NewlineBlockElements initialize":{"type":"method","name":"initialize","children":[],"call":[]}," Loofah MetaHelpers HashifiedConstants":{"type":"method","name":"HashifiedConstants","children":[],"call":[]}," Loofah TextBehavior to_text":{"type":"method","name":"to_text","children":[],"call":["Loofah Helpers  remove_extraneous_whitespace "," dup scrub! text "," dup scrub! "," dup ","Loofah  remove_extraneous_whitespace "]}," Loofah TextBehavior text":{"type":"method","name":"text","children":[],"call":[" encode_special_chars ","options [] == ","options [] "," serialize_root children inner_text "," serialize_root children "," serialize_root "," serialize_root children reject map join "," serialize_root children reject map "," serialize_root children reject "]}," Loofah HTML DocumentFragment serialize_root":{"type":"method","name":"serialize_root","children":[],"call":[" at_xpath "]}," Loofah HTML Document serialize_root":{"type":"method","name":"serialize_root","children":[],"call":[" at_xpath "]}," Loofah Helpers remove_extraneous_whitespace":{"type":"method","name":"remove_extraneous_whitespace","children":[],"call":["string gsub ","Loofah  remove_extraneous_whitespace "]}," Loofah MetaHelpers add_downcased_set_members_to_all_set_constants":{"type":"method","name":"add_downcased_set_members_to_all_set_constants","children":[],"call":["constant add ","member downcase ","constant dup each ","constant dup ","Set  === ","mojule const_get ","mojule constants each ","mojule constants ","mojule const_get  add ","mojule const_get  dup each ","mojule const_get  dup ","mojule mojule const_get s each ","mojule mojule const_get s "]}," Loofah Helpers ActionView WhiteListSanitizer sanitize_css":{"type":"method","name":"sanitize_css","children":[],"call":["Loofah Helpers  sanitize_css "]}," Loofah Helpers ActionView WhiteListSanitizer sanitize":{"type":"method","name":"sanitize","children":[],"call":["Loofah Helpers  sanitize "]}," Loofah Helpers ActionView FullSanitizer sanitize":{"type":"method","name":"sanitize","children":[],"call":["Loofah Helpers  strip_tags "]}," Loofah Helpers ActionView ClassMethods white_list_sanitizer":{"type":"method","name":"white_list_sanitizer","children":[],"call":[" Loofah Helpers ActionView WhiteListSanitizer  new "," safe_list_sanitizer "," warn "]}," Loofah Helpers ActionView ClassMethods full_sanitizer":{"type":"method","name":"full_sanitizer","children":[],"call":[" Loofah Helpers ActionView FullSanitizer  new "]}," Loofah Helpers sanitize_css":{"type":"method","name":"sanitize_css","children":[],"call":[" Loofah HTML5 Scrub  scrub_css "]}," Loofah Scrubbers Unprintable scrub":{"type":"method","name":"scrub","children":[],"call":["node content= ","node content gsub ","node content ","node type == ","node type "]}," Loofah Scrubbers Unprintable initialize":{"type":"method","name":"initialize","children":[],"call":[]}," Loofah HTML5 Scrub scrub_css":{"type":"method","name":"scrub_css","children":[],"call":["clean join ","clean << ","WhiteList ALLOWED_SVG_PROPERTIES  include? ","keyword !~ ","WhiteList ALLOWED_CSS_KEYWORDS  include? ! ","WhiteList ALLOWED_CSS_KEYWORDS  include? ","val split any? ","val split ","WhiteList SHORTHAND_CSS_PROPERTIES  include? ","prop split [] ","prop split ","WhiteList ALLOWED_CSS_PROPERTIES  include? ","prop downcase! ","val empty? ","style scan ","style =~ ","style to_s gsub ","style to_s ","Crass Parser  stringify ","sanitized_tree << << ","sanitized_tree << ","Crass  parse_properties first ","Crass  parse_properties "," sprintf ","value join ","value empty? ","(send\n  (send\n    (send\n      (lvar :node) :[]\n      (sym :value)) :split) :map) compact ","keyword =~ ","node [] split map ","node [] split ","node [] ","name split first ","name split ","node [] downcase ","(sym :url) include? ","child [] ","node [] any? ","node [] == ","style_tree each "," format ","value << ","(send\n  (send\n    (lvar :node) :[]\n    (sym :children)) :map) compact ","SafeList ALLOWED_CSS_KEYWORDS  include? ","SafeList SHORTHAND_CSS_PROPERTIES  include? ! ","SafeList SHORTHAND_CSS_PROPERTIES  include? ","SafeList ALLOWED_CSS_FUNCTIONS  include? ","child [] downcase ","child [] =~ ","node [] map ","SafeList ALLOWED_SVG_PROPERTIES  include? ","SafeList ALLOWED_CSS_PROPERTIES  include? ","WhiteList ALLOWED_CSS_FUNCTIONS  include? ! ","WhiteList ALLOWED_CSS_FUNCTIONS  include? ","child [] == ","CSS_PROPERTY_STRING_WITHOUT_EMBEDDED_QUOTES  match? ","url_flags include? ","SafeList ALLOWED_CSS_FUNCTIONS  include? ! ","child []  !~ ","clean join  scan ","style to_s gsub  scan ","clean join  =~ ","style to_s gsub  =~ ","clean join  to_s gsub ","style to_s gsub  to_s gsub ","clean join  to_s ","style to_s gsub  to_s ","(send\n  (send\n    (send\n      (lvar :node) :[]\n      (sym :value)) :split) :map) compact  join ","(send\n  (send\n    (lvar :node) :[]\n    (sym :children)) :map) compact  join ","(send\n  (send\n    (send\n      (lvar :node) :[]\n      (sym :value)) :split) :map) compact  empty? ","(send\n  (send\n    (lvar :node) :[]\n    (sym :children)) :map) compact  empty? ","(send\n  (send\n    (send\n      (lvar :node) :[]\n      (sym :(send\n  (send\n    (send\n      (lvar :node) :[]\n      (sym :value)) :split) :map) compact )) :split) :map) compact ","(send\n  (send\n    (send\n      (lvar :node) :[]\n      (sym :(send\n  (send\n    (lvar :node) :[]\n    (sym :children)) :map) compact )) :split) :map) compact ","child []  =~ ","node [] downcase  split first ","node [] downcase  split ","clean join _tree each ","style to_s gsub _tree each ","Crass  parse_properties  each ","(send\n  (send\n    (send\n      (lvar :node) :[]\n      (sym :value)) :split) :map) compact  << ","(send\n  (send\n    (lvar :node) :[]\n    (sym :children)) :map) compact  << "]}," Loofah HTML5 Scrub scrub_attributes":{"type":"method","name":"scrub_attributes","children":[],"call":["node remove_attribute ","attr_node name ","attr_node value !~ ","attr_node value ","node attribute_nodes each ","node attribute_nodes ","node []= "," scrub_css ","node attributes [] ","node attributes ","attr_node remove ","attr_node value =~ ","attr_name == ","WhiteList SVG_ALLOW_LOCAL_HREF  include? ","node name ","attr_node value= ","attr_node value gsub ","WhiteList SVG_ATTR_VAL_ALLOWS_REF  include? ","WhiteList ALLOWED_PROTOCOLS  include? ! ","WhiteList ALLOWED_PROTOCOLS  include? ","val_unescaped split [] ","val_unescaped split ","val_unescaped =~ ","CGI  unescapeHTML gsub downcase ","CGI  unescapeHTML gsub ","CGI  unescapeHTML ","WhiteList ATTR_VAL_IS_URI  include? ","WhiteList ALLOWED_ATTRIBUTES  include? ","attr_name =~ ","attr_node node_name ","attr_node namespace prefix ","attr_node namespace "," scrub_css_attribute ","WhiteList ALLOWED_URI_DATA_MEDIATYPES  include? ! ","WhiteList ALLOWED_URI_DATA_MEDIATYPES  include? ","mediatype split [] ","mediatype split ","val_unescaped split [] == "," force_correct_attribute_escaping! ","SafeList SVG_ALLOW_LOCAL_HREF  include? ","SafeList SVG_ATTR_VAL_ALLOWS_REF  include? ","SafeList ALLOWED_URI_DATA_MEDIATYPES  include? ! ","SafeList ALLOWED_URI_DATA_MEDIATYPES  include? ","SafeList ALLOWED_PROTOCOLS  include? ! ","SafeList ALLOWED_PROTOCOLS  include? ","SafeList ATTR_VAL_IS_URI  include? ","SafeList ALLOWED_ATTRIBUTES  include? ","attr_node name !~ "," scrub_attribute_that_allows_local_ref "," scrub_uri_attribute ","DATA_ATTRIBUTE_NAME  match? ","attr_node node_name  == ","CGI  unescapeHTML gsub downcase  split [] ","CGI  unescapeHTML gsub downcase  split ","CGI  unescapeHTML gsub downcase  =~ ","attr_node node_name  =~ ","val_unescaped split []  split [] ","val_unescaped split []  split ","CGI  unescapeHTML gsub downcase  split [] == "]}," Loofah HTML5 Scrub allowed_element?":{"type":"method","name":"allowed_element?","children":[],"call":[" Loofah HTML5 WhiteList ALLOWED_ELEMENTS_WITH_LIBXML2  include? "," Loofah HTML5 SafeList ALLOWED_ELEMENTS_WITH_LIBXML2  include? "]}," Loofah HTML5 Scrub scrub_css_attribute":{"type":"method","name":"scrub_css_attribute","children":[],"call":["style value= "," scrub_css ","style value ","node attributes [] ","node attributes ","node attributes []  value= ","node attributes []  value "]}," Loofah remove_extraneous_whitespace":{"type":"method","name":"remove_extraneous_whitespace","children":[],"call":["string gsub "]}," Loofah Scrubbers NoOpener scrub":{"type":"method","name":"scrub","children":[],"call":[" append_attribute ","node name == ","node name ","node type == ","node type "]}," Loofah Scrubbers NoOpener initialize":{"type":"method","name":"initialize","children":[],"call":[]}," Loofah Scrubber append_attribute":{"type":"method","name":"append_attribute","children":[],"call":["node set_attribute ","updated_value join ","current_values | ","current_value split ","node get_attribute ","current_values |  join ","current_value split  | "]}," Loofah remove_comments_before_html_element":{"type":"method","name":"remove_comments_before_html_element","children":[],"call":["child unlink ","child comment? ","doc children each ","doc children "]}," Loofah HTML5 Scrub force_correct_attribute_escaping!":{"type":"method","name":"force_correct_attribute_escaping!","children":[],"call":["attr_node value= ","(send\n  (send\n    (lvar :attr_node) :value) :gsub\n  (regexp\n    (str \"[ \\\"]\")\n    (regopt))) force_encoding ","% + ","m unpack join upcase ","m unpack join ","m unpack ","H2 * ","m bytesize ","attr_node value gsub ","attr_node value ","attr_node value encoding ","tag_name == ","node name ","tag_name nil? ","LibxmlWorkarounds BROKEN_ESCAPING_ATTRIBUTES_QUALIFYING_TAG  [] ","attr_node name ","LibxmlWorkarounds BROKEN_ESCAPING_ATTRIBUTES  include? ","node attribute_nodes each ","node attribute_nodes ","Nokogiri VersionInfo  instance libxml2? ","Nokogiri VersionInfo  instance ","(send\n  (send\n    (lvar :attr_node) :value) :gsub\n  (regexp\n    (str \"[ \\\"]\")\n    (regopt))) force_attr_node value encoding  ","attr_node value attr_node value encoding  ","LibxmlWorkarounds BROKEN_ESCAPING_ATTRIBUTES_QUALIFYING_TAG  []  == ","LibxmlWorkarounds BROKEN_ESCAPING_ATTRIBUTES_QUALIFYING_TAG  []  nil? "]}," Loofah Helpers ActionView SafeListSanitizer sanitize_css":{"type":"method","name":"sanitize_css","children":[],"call":["Loofah Helpers  sanitize_css "]}," Loofah Helpers ActionView SafeListSanitizer sanitize":{"type":"method","name":"sanitize","children":[],"call":["Loofah Helpers  sanitize "]}," Loofah Helpers ActionView ClassMethods safe_list_sanitizer":{"type":"method","name":"safe_list_sanitizer","children":[],"call":[" Loofah Helpers ActionView SafeListSanitizer  new "]}," Loofah HTML5 Scrub escape_tags":{"type":"method","name":"escape_tags","children":[],"call":["string encode! ","string gsub ","[<>&] encode ","Hash  [] ","s encode ","pair map ","TABLE_FOR_ESCAPE_HTML__  map ","string b ","string encode ","Encoding Converter  asciicompat_encoding ","enc dummy? ","string force_encoding ","string gsub! ","enc ascii_compatible? ","string encoding ","string gsub  encode! ","string b  encode! ","string encode  encode! ","string Encoding Converter  asciicompat_encoding ode! ","string string encoding ode! ","string gsub  gsub ","string b  gsub ","string encode  gsub ","[<>&] Encoding Converter  asciicompat_encoding ode ","[<>&] string encoding ode ","s Encoding Converter  asciicompat_encoding ode ","s string encoding ode ","string gsub  b ","string b  b ","string encode  b ","string gsub  encode ","string b  encode ","string encode  encode ","string Encoding Converter  asciicompat_encoding ode ","string string encoding ode ","Encoding Converter  asciicompat_Encoding Converter  asciicompat_encoding oding ","Encoding Converter  asciicompat_string encoding oding ","Encoding Converter  asciicompat_encoding  dummy? ","string encoding  dummy? ","string gsub  force_encoding ","string b  force_encoding ","string encode  force_encoding ","string force_Encoding Converter  asciicompat_encoding oding ","string force_string encoding oding ","string gsub  gsub! ","string b  gsub! ","string encode  gsub! ","Encoding Converter  asciicompat_encoding  ascii_compatible? ","string encoding  ascii_compatible? ","string gsub  encoding ","string b  encoding ","string encode  encoding ","string Encoding Converter  asciicompat_encoding oding ","string string encoding oding "]}," Loofah HTML5 Scrub cdata_escape":{"type":"method","name":"cdata_escape","children":[],"call":["node document create_cdata ","node document ","node document create_text_node ","Nokogiri  jruby? "," escape_tags ","node text "]}," Loofah HTML5 Scrub cdata_needs_escaping?":{"type":"method","name":"cdata_needs_escaping?","children":[],"call":["node parent name == ","node parent name ","node parent ","node text? ","Nokogiri  jruby? ","node cdata? "]}," Loofah HTML5 Scrub scrub_uri_attribute":{"type":"method","name":"scrub_uri_attribute","children":[],"call":["attr_node remove ","SafeList ALLOWED_URI_DATA_MEDIATYPES  include? ! ","SafeList ALLOWED_URI_DATA_MEDIATYPES  include? ","mediatype split [] ","mediatype split ","val_unescaped split [] ","val_unescaped split ","val_unescaped split [] == ","SafeList ALLOWED_PROTOCOLS  include? ! ","SafeList ALLOWED_PROTOCOLS  include? ","val_unescaped =~ ","CGI  unescapeHTML gsub downcase ","CGI  unescapeHTML gsub ","CGI  unescapeHTML ","attr_node value ","val_unescaped split []  split [] ","val_unescaped split []  split ","CGI  unescapeHTML gsub downcase  split [] ","CGI  unescapeHTML gsub downcase  split ","CGI  unescapeHTML gsub downcase  split [] == ","CGI  unescapeHTML gsub downcase  =~ "]}," Loofah HTML5 Scrub scrub_attribute_that_allows_local_ref":{"type":"method","name":"scrub_attribute_that_allows_local_ref","children":[],"call":["attr_node value= ","values join ","(send\n  (lvar :nodes) :map) compact ","node [] ","node [] start_with? ","nodes map ","Crass Parser  new parse_component_values ","Crass Parser  new ","attr_node value ","(send\n  (lvar :nodes) :map) compact  join ","(send\n  (lvar :Crass Parser  new parse_component_values ) :map) compact ","Crass Parser  new parse_component_values  map ","Crass Parser  new parse_component_(send\n  (lvar :nodes) :map) compact  "]}," Loofah scrub_html5_fragment":{"type":"method","name":"scrub_html5_fragment","children":[],"call":[" raise ","Loofah HTML5 DocumentFragment  parse scrub! ","Loofah HTML5 DocumentFragment  parse "]}," Loofah scrub_html5_document":{"type":"method","name":"scrub_html5_document","children":[],"call":[" raise ","Loofah HTML5 Document  parse scrub! ","Loofah HTML5 Document  parse "]}," Loofah html5_fragment":{"type":"method","name":"html5_fragment","children":[],"call":[" raise ","Loofah HTML5 DocumentFragment  parse "]}," Loofah html5_document":{"type":"method","name":"html5_document","children":[],"call":[" raise ","Loofah HTML5 Document  parse "]}," Loofah scrub_html4_fragment":{"type":"method","name":"scrub_html4_fragment","children":[],"call":["Loofah HTML4 DocumentFragment  parse scrub! ","Loofah HTML4 DocumentFragment  parse "]}," Loofah scrub_html4_document":{"type":"method","name":"scrub_html4_document","children":[],"call":["Loofah HTML4 Document  parse scrub! ","Loofah HTML4 Document  parse "]}," Loofah html4_fragment":{"type":"method","name":"html4_fragment","children":[],"call":["Loofah HTML4 DocumentFragment  parse "]}," Loofah html4_document":{"type":"method","name":"html4_document","children":[],"call":["Loofah HTML4 Document  parse "]}," Loofah html5_support?":{"type":"method","name":"html5_support?","children":[],"call":["Nokogiri  uses_gumbo? ","Gem Version  new > ","Gem Version  new "]}," Loofah HtmlFragmentBehavior serialize_root":{"type":"method","name":"serialize_root","children":[],"call":[" at_xpath "]}," Loofah HtmlFragmentBehavior to_s":{"type":"method","name":"to_s","children":[],"call":[" serialize_root children to_s "," serialize_root children "," serialize_root "]}," Loofah HtmlFragmentBehavior included":{"type":"method","name":"included","children":[],"call":["base extend "]}," Loofah HtmlFragmentBehavior ClassMethods document_klass":{"type":"method","name":"document_klass","children":[],"call":[" raise "," == ","Loofah  html5_support? "]}," Loofah HtmlFragmentBehavior ClassMethods parse":{"type":"method","name":"parse","children":[],"call":[" new ","doc encoding= ","tags encoding name ","tags encoding ","tags respond_to? "," document_klass new "," document_klass "," document_klass new  encoding= ","  document_klass new ument_klass new ","  document_klass new ument_klass "]}," Loofah HtmlDocumentBehavior serialize_root":{"type":"method","name":"serialize_root","children":[],"call":[" at_xpath "]}," Loofah HtmlDocumentBehavior included":{"type":"method","name":"included","children":[],"call":["base extend "]}," Loofah HtmlDocumentBehavior ClassMethods remove_comments_before_html_element":{"type":"method","name":"remove_comments_before_html_element","children":[],"call":["child unlink ","child comment? ","doc children each ","doc children "]}," Loofah HtmlDocumentBehavior ClassMethods parse":{"type":"method","name":"parse","children":[],"call":[" remove_comments_before_html_element "]}}