{" Terrapin OSDetector arch":{"type":"method","name":"arch","children":[],"call":[]}," Terrapin OSDetector path_separator":{"type":"method","name":"path_separator","children":[],"call":[]}," Terrapin OSDetector windows?":{"type":"method","name":"windows?","children":[],"call":[" unix? ! "," unix? "]}," Terrapin OSDetector unix?":{"type":"method","name":"unix?","children":[],"call":["RbConfig CONFIG  [] !~ ","RbConfig CONFIG  [] "]}," Terrapin OSDetector java?":{"type":"method","name":"java?","children":[],"call":[" arch =~ "," arch "]}," Terrapin CommandLine bit_bucket":{"type":"method","name":"bit_bucket","children":[],"call":["OS  unix? "]}," Terrapin CommandLine shell_quote":{"type":"method","name":"shell_quote","children":[],"call":["(send\n  (send\n    (lvar :string) :split\n    (str \"'\")\n    (int -1)) :map) join ","string split map ","string split ","string empty? ","OS  unix? ","string to_s ","string respond_to? ","string nil? ","(send\n  (send\n    (lvar :string to_s ) :split\n    (str \"'\")\n    (int -1)) :map) join ","string to_s  split map ","string to_s  split ","string to_s  empty? ","string to_s  to_s ","string to_s  respond_to? ","string to_s  nil? "]}," Terrapin CommandLine shell_quote_all_values":{"type":"method","name":"shell_quote_all_values","children":[],"call":[" Array map join "," Array map "," method "," Array "]}," Terrapin CommandLine stringify_keys":{"type":"method","name":"stringify_keys","children":[],"call":["Hash  [] ","k to_s ","hash map "]}," Terrapin CommandLine interpolate":{"type":"method","name":"interpolate","children":[],"call":[" shell_quote_all_values ","interpolations [] ","interpolations key? ","match tr ","pattern gsub "," stringify_keys "," stringify_keys  [] ","interpolations match tr ? "," stringify_keys  key? "," stringify_match tr s "]}," Terrapin CommandLine runner_options":{"type":"method","name":"runner_options","children":[],"call":[" class runner_options merge "," class runner_options "," class "]}," Terrapin CommandLine environment":{"type":"method","name":"environment","children":[],"call":[" class environment merge "," class environment "," class "]}," Terrapin CommandLine execute":{"type":"method","name":"execute","children":[],"call":[" runner call "," runner_options "," environment "," runner "]}," Terrapin CommandLine windows_path_prefix":{"type":"method","name":"windows_path_prefix","children":[],"call":["OS  path_separator "," class path "," class "]}," Terrapin CommandLine unix_path_prefix":{"type":"method","name":"unix_path_prefix","children":[],"call":["OS  path_separator "," class path "," class "]}," Terrapin CommandLine os_path_prefix":{"type":"method","name":"os_path_prefix","children":[],"call":[" windows_path_prefix "," unix_path_prefix ","OS  unix? "]}," Terrapin CommandLine path_prefix":{"type":"method","name":"path_prefix","children":[],"call":[" os_path_prefix "," class path empty? ! "," class path empty? "," class path "," class "," class path nil? ! "," class path nil? "]}," Terrapin CommandLine log":{"type":"method","name":"log","children":[],"call":["@logger info "]}," Terrapin CommandLine colored":{"type":"method","name":"colored","children":[],"call":["@logger tty? ","@logger respond_to? "]}," Terrapin CommandLine output":{"type":"method","name":"output","children":[],"call":["Output  new "]}," Terrapin CommandLine command_error_output":{"type":"method","name":"command_error_output","children":[],"call":[" output error_output "," output "]}," Terrapin CommandLine command_output":{"type":"method","name":"command_output","children":[],"call":[" output output "," output "]}," Terrapin CommandLine run":{"type":"method","name":"run","children":[],"call":[" command_output "," raise ","(dstr\n  (str \"Command '\")\n  (begin\n    (lvar :full_command))\n  (str \"' returned \")\n  (begin\n    (ivar :@exit_status))\n  (str \". Expected \")\n  (begin\n    (send\n      (ivar :@expected_outcodes) :join\n      (str \", \")))) join "," command_error_output ","@expected_outcodes join ","@expected_outcodes include? ","@exit_status == ","$? exitstatus ","$? respond_to? ","e message "," execute "," log "," colored "," command ","(dstr\n  (str \"Command '\")\n  (begin\n    (lvar :full_command))\n  (str \"' returned \")\n  (begin\n    (ivar :$? exitstatus ))\n  (str \". Expected \")\n  (begin\n    (send\n      (ivar :@expected_outcodes) :join\n      (str \", \")))) join ","(dstr\n  (str \"Command '\")\n  (begin\n    (lvar : command ))\n  (str \"' returned \")\n  (begin\n    (ivar :@exit_status))\n  (str \". Expected \")\n  (begin\n    (send\n      (ivar :@expected_outcodes) :join\n      (str \", \")))) join ","$? exitstatus  == ","e (dstr\n  (str \"Command '\")\n  (begin\n    (lvar :full_command))\n  (str \"' returned \")\n  (begin\n    (ivar :@exit_status))\n  (str \". Expected \")\n  (begin\n    (send\n      (ivar :@expected_outcodes) :join\n      (str \", \")))) join  "]}," Terrapin CommandLine command":{"type":"method","name":"command","children":[],"call":["cmd join strip ","cmd join ","cmd << "," bit_bucket "," interpolate "," path_prefix "]}," Terrapin CommandLine initialize":{"type":"method","name":"initialize","children":[],"call":["@options delete "," class logger "," class "," class runner ","options dup ","params dup ","binary dup ","params to_s dup ","params to_s "," raise ","options nil? ","options dup  delete "]}," Terrapin CommandLine best_runner":{"type":"method","name":"best_runner","children":[],"call":["(send\n  (array\n    (const nil :PosixRunner)\n    (const nil :ProcessRunner)\n    (const nil :BackticksRunner)) :detect) new ","runner supported? ","(const nil :PosixRunner) detect ","(send\n  (array\n    (const nil :ProcessRunner)\n    (const nil :BackticksRunner)) :detect) new ","(const nil :ProcessRunner) detect "]}," Terrapin CommandLine unfake!":{"type":"method","name":"unfake!","children":[],"call":[]}," Terrapin CommandLine fake!":{"type":"method","name":"fake!","children":[],"call":["FakeRunner  new "]}," Terrapin CommandLine runner":{"type":"method","name":"runner","children":[],"call":[" best_runner "]}," Terrapin CommandLine path=":{"type":"method","name":"path=","children":[],"call":[" Array flatten join ","OS  path_separator "," Array flatten "," Array "]}," Terrapin CommandLine path":{"type":"method","name":"path","children":[],"call":[]}," Terrapin CommandLine ProcessRunner waitpid":{"type":"method","name":"waitpid","children":[],"call":["Process  waitpid "]}," Terrapin CommandLine ProcessRunner spawn":{"type":"method","name":"spawn","children":[],"call":["Process  spawn "]}," Terrapin CommandLine ProcessRunner call":{"type":"method","name":"call","children":[],"call":["pipe output "," waitpid ","pipe read_and_then "," spawn ","options merge ","pipe pipe_options ","MultiPipe  new ","MultiPipe  new  output "," wait spawn  ","MultiPipe  new  read_and_then ","MultiPipe  new  MultiPipe  new _options "]}," Terrapin CommandLine ProcessRunner supported?":{"type":"method","name":"supported?","children":[],"call":[" class supported? "," class "]}," Terrapin CommandLine ProcessRunner available?":{"type":"method","name":"available?","children":[],"call":[]}," Terrapin CommandLine PosixRunner posix_spawn_gem_available?":{"type":"method","name":"posix_spawn_gem_available?","children":[],"call":[]}," Terrapin CommandLine PosixRunner waitpid":{"type":"method","name":"waitpid","children":[],"call":["Process  waitpid "]}," Terrapin CommandLine PosixRunner spawn":{"type":"method","name":"spawn","children":[],"call":["POSIX Spawn  spawn "]}," Terrapin CommandLine PosixRunner call":{"type":"method","name":"call","children":[],"call":["pipe output "," waitpid ","pipe read_and_then "," spawn ","options merge ","pipe pipe_options ","MultiPipe  new ","MultiPipe  new  output "," wait spawn  ","MultiPipe  new  read_and_then ","MultiPipe  new  MultiPipe  new _options "]}," Terrapin CommandLine PosixRunner supported?":{"type":"method","name":"supported?","children":[],"call":[" class supported? "," class "]}," Terrapin CommandLine PosixRunner available?":{"type":"method","name":"available?","children":[],"call":[]}," Terrapin CommandLine PopenRunner with_modified_environment":{"type":"method","name":"with_modified_environment","children":[],"call":["ClimateControl  modify "]}," Terrapin CommandLine PopenRunner call":{"type":"method","name":"call","children":[],"call":["Output  new ","pipe read ","IO  popen "," with_modified_environment "]}," Terrapin CommandLine PopenRunner supported?":{"type":"method","name":"supported?","children":[],"call":[" class supported? "," class "]}," Terrapin CommandLine FakeRunner ran?":{"type":"method","name":"ran?","children":[],"call":["command =~ ","Regexp  new ","@commands any? "]}," Terrapin CommandLine FakeRunner call":{"type":"method","name":"call","children":[],"call":["Output  new "," commands << "," commands "]}," Terrapin CommandLine FakeRunner initialize":{"type":"method","name":"initialize","children":[],"call":[]}," Terrapin CommandLine FakeRunner supported?":{"type":"method","name":"supported?","children":[],"call":[" class supported? "," class "]}," Terrapin CommandLine BackticksRunner with_modified_environment":{"type":"method","name":"with_modified_environment","children":[],"call":["ClimateControl  modify "]}," Terrapin CommandLine BackticksRunner call":{"type":"method","name":"call","children":[],"call":["Output  new "," with_modified_environment "]}," Terrapin CommandLine BackticksRunner supported?":{"type":"method","name":"supported?","children":[],"call":[" class supported? "," class "]}," Output to_s":{"type":"method","name":"to_s","children":[],"call":[" output to_s "," output "]}," Output initialize":{"type":"method","name":"initialize","children":[],"call":[]}," Terrapin CommandLine MultiPipe read_stream":{"type":"method","name":"read_stream","children":[],"call":["result << ","io read "]}," Terrapin CommandLine MultiPipe close_read":{"type":"method","name":"close_read","children":[],"call":["@stderr_in close ","@stdout_in close "]}," Terrapin CommandLine MultiPipe read":{"type":"method","name":"read","children":[],"call":[" read_stream "]}," Terrapin CommandLine MultiPipe close_write":{"type":"method","name":"close_write","children":[],"call":["@stderr_out close ","@stdout_out close "]}," Terrapin CommandLine MultiPipe read_and_then":{"type":"method","name":"read_and_then","children":[],"call":[" close_read ","block call "," read "," close_write "]}," Terrapin CommandLine MultiPipe output":{"type":"method","name":"output","children":[],"call":["Output  new "]}," Terrapin CommandLine MultiPipe pipe_options":{"type":"method","name":"pipe_options","children":[],"call":[]}," Terrapin CommandLine MultiPipe initialize":{"type":"method","name":"initialize","children":[],"call":["IO  pipe "]}}