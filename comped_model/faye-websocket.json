{" Faye WebSocket Protocol8Parser unmask":{"type":"method","name":"unmask","children":[],"call":["unmasked << ","byte ^ ","mask [] ","i % ","mask size > ","mask size ","payload each_with_index ","byte ^  ^ "]}," Faye WebSocket Protocol8Parser integer":{"type":"method","name":"integer","children":[],"call":["data << ","8 * ","bytes size - - ","bytes size - ","bytes size ","bytes each_with_index "]}," Faye WebSocket Protocol8Parser reset":{"type":"method","name":"reset","children":[],"call":[]}," Faye WebSocket Protocol8Parser emit_frame":{"type":"method","name":"emit_frame","children":[],"call":["@socket send ","@socket close ","ERRORS  [] ","payload size > ","payload size ","OPCODES  [] ","@closing_callback call ","WebSocket  encode ","payload [] ","WebSocket  valid_utf8? ! ","WebSocket  valid_utf8? ","ERROR_CODES  include? ","code < ","code >= ","payload size == ","256 * + ","256 * ","payload size >= ","@socket receive "," reset ","@mode == "," unmask "," unmask  size > "," unmask  size ","WebSocket  enERRORS  []  ","WebSocket  en256 * +  "," unmask  [] ","ERRORS  []  < ","256 * +  < ","ERRORS  []  >= ","256 * +  >= "," unmask  size == "," unmask  size >= "]}," Faye WebSocket Protocol8Parser parse_payload":{"type":"method","name":"parse_payload","children":[],"call":[" emit_frame ","@payload size < ","@payload size ","@payload << "]}," Faye WebSocket Protocol8Parser parse_mask":{"type":"method","name":"parse_mask","children":[],"call":["@mask size < ","@mask size ","@mask << "]}," Faye WebSocket Protocol8Parser parse_extended_length":{"type":"method","name":"parse_extended_length","children":[],"call":[" integer ","@length_buffer size == ","@length_buffer size ","@length_buffer << "," integer _buffer size == "," integer _buffer size "," integer _buffer << "]}," Faye WebSocket Protocol8Parser parse_length":{"type":"method","name":"parse_length","children":[],"call":["@length == ","@length <= ","data & ","(send\n  (lvar :data) :&\n  (const nil :MASK)) == "]}," Faye WebSocket Protocol8Parser parse_opcode":{"type":"method","name":"parse_opcode","children":[],"call":["@socket close ","ERRORS  [] ","OPENING_OPCODES  include? ","FRAGMENTED_OPCODES  include? ","OPCODES  values include? ","OPCODES  values ","data & ","(send\n  (lvar :data) :&\n  (const nil :FIN)) == ","(send\n  (lvar :data) :&\n  (lvar :rsv)) == ","(const nil :RSV1) any? "]}," Faye WebSocket Protocol8Parser close":{"type":"method","name":"close","children":[],"call":["@socket send ","ERRORS  [] "]}," Faye WebSocket Protocol8Parser frame":{"type":"method","name":"frame","children":[],"call":["WebSocket  encode + ","WebSocket  encode ","frame << ","mask pack ","data []= ","byte ^ ","mask [] ","i % ","data each_with_index "," rand ","(irange\n  (int 1)\n  (int 4)) map ","(send\n  (lvar :length) :>>\n  (int 32)) pack ","length & ","length >> ","(send\n  (lvar :masked) :|\n  (int 127)) chr ","masked | ","(lvar :length) pack ","(send\n  (lvar :masked) :|\n  (int 126)) chr ","(send\n  (lvar :masked) :|\n  (lvar :length)) chr ","data size ","(send\n  (const nil :FIN) :|\n  (send\n    (const nil :OPCODES) :[]\n    (lvar :type))) chr ","FIN  | ","OPCODES  [] ","(lvar :code) pack bytes to_a + ","(lvar :code) pack bytes to_a ","(lvar :code) pack bytes ","(lvar :code) pack ","data bytes to_a ","data bytes ","data respond_to? ","String  === ","(send\n  (const nil :FIN) :|\n  (send\n    (const nil :OPCODES) :[]\n    (lvar :type))) chr  << ","(lvar :code) pack bytes to_a +  []= ","data bytes to_a  []= ","(lvar :code) pack bytes to_a +  each_with_index ","data bytes to_a  each_with_index ","(send\n  (lvar :data size ) :>>\n  (int 32)) pack ","data size  & ","data size  >> ","(lvar :data size ) pack ","(send\n  (lvar :masked) :|\n  (lvar :data size )) chr ","(lvar :code) pack bytes to_a +  size ","data bytes to_a  size ","(lvar :code) pack bytes to_a +  bytes to_a ","data bytes to_a  bytes to_a ","(lvar :code) pack bytes to_a +  bytes ","data bytes to_a  bytes ","(lvar :code) pack bytes to_a +  respond_to? ","data bytes to_a  respond_to? "]}," Faye WebSocket Protocol8Parser parse":{"type":"method","name":"parse","children":[],"call":[" emit_frame ","@length == ","@stage == "," parse_payload "," parse_mask "," parse_extended_length "," parse_length "," parse_opcode ","data each_byte "]}," Faye WebSocket Protocol8Parser create_handshake":{"type":"method","name":"create_handshake","children":[],"call":["Handshake  new ","@socket uri "]}," Faye WebSocket Protocol8Parser handshake_response":{"type":"method","name":"handshake_response","children":[],"call":["upgrade << ","Base64  encode64 strip ","Base64  encode64 ","Digest SHA1  digest ","sec_key + ","String  === ","@socket env [] ","@socket env ","@socket env []  + "]}," Faye WebSocket Protocol8Parser version":{"type":"method","name":"version","children":[],"call":["@socket env [] ","@socket env "]}," Faye WebSocket Protocol8Parser initialize":{"type":"method","name":"initialize","children":[],"call":["options [] "," reset "]}," Faye WebSocket Protocol8Parser Handshake valid?":{"type":"method","name":"valid?","children":[],"call":["response [] == ","response [] ","connection split include? ","connection split ","upgrade =~ ","response code to_i == ","response code to_i ","response code ","Net HTTPResponse  read_new ","Net BufferedIO  new ","StringIO  new ","WebSocket  encode ","Net HTTPResponse  read_new  [] == ","Net HTTPResponse  read_new  [] ","Net HTTPResponse  read_new  code to_i == ","Net HTTPResponse  read_new  code to_i ","Net HTTPResponse  read_new  code "]}," Faye WebSocket Protocol8Parser Handshake complete?":{"type":"method","name":"complete?","children":[],"call":["@buffer [] == ","@buffer [] "]}," Faye WebSocket Protocol8Parser Handshake parse":{"type":"method","name":"parse","children":[],"call":[" complete? ","@buffer << ","message << ","data each_byte "]}," Faye WebSocket Protocol8Parser Handshake request_data":{"type":"method","name":"request_data","children":[],"call":["handshake << ","@uri query ","@uri path ","@uri host + ","@uri port ","@uri host "]}," Faye WebSocket Protocol8Parser Handshake initialize":{"type":"method","name":"initialize","children":[],"call":["Base64  encode64 strip ","Base64  encode64 ","Digest SHA1  digest ","@key + ","(send\n  (begin\n    (irange\n      (int 1)\n      (int 16))) :map) * "," rand chr "," rand ","(irange\n  (int 1)\n  (int 16)) map ","Base64  encode64 strip  + "]}," Faye WebSocket Draft76Parser big_endian":{"type":"method","name":"big_endian","children":[],"call":["string << ","(send\n  (send\n    (lvar :number) :>>\n    (lvar :offset)) :&\n  (int 255)) chr ","number >> & ","number >> ","(int 24) each "]}," Faye WebSocket Draft76Parser spaces_in_key":{"type":"method","name":"spaces_in_key","children":[],"call":["key scan size ","key scan "]}," Faye WebSocket Draft76Parser number_from_key":{"type":"method","name":"number_from_key","children":[],"call":["key scan join to_i ","key scan join ","key scan "]}," Faye WebSocket Draft76Parser handshake_response":{"type":"method","name":"handshake_response","children":[],"call":["upgrade << ","@socket url ","env [] ","Digest MD5  digest "," big_endian + + ","env [] read "," big_endian + "," big_endian "," number_from_key / "," spaces_in_key "," number_from_key ","@socket env "," handshake_signature ","@socket env  [] ","@socket env  [] read ","@socket @socket env  "," handshake_ handshake_signature  "]}," Faye WebSocket Draft76Parser version":{"type":"method","name":"version","children":[],"call":[]}," Faye WebSocket Client Connection write":{"type":"method","name":"write","children":[],"call":[" send_data "]}," Faye WebSocket Client Connection unbind":{"type":"method","name":"unbind","children":[],"call":[" parent close "," parent "," parent __send__ "]}," Faye WebSocket Client Connection receive_data":{"type":"method","name":"receive_data","children":[],"call":[" parent __send__ "," parent "]}," Faye WebSocket Client Connection connection_completed":{"type":"method","name":"connection_completed","children":[],"call":[" parent __send__ "," parent "]}," Faye WebSocket Client receive_data":{"type":"method","name":"receive_data","children":[],"call":["@parser parse "," dispatch_event ","event init_event ","Event  new "," receive_data ","@handshake valid? ","@handshake complete? ","@handshake parse ","WebSocket  encode ","@handshake protocol "," dispatch_Event  new  ","Event  new  init_Event  new  "," receive_WebSocket  encode  "]}," Faye WebSocket Client on_connect":{"type":"method","name":"on_connect","children":[],"call":["@stream write ","@handshake request_data ","@parser create_handshake ","@stream start_tls ","@uri scheme == ","@uri scheme ","worker start ","(pair\n  (sym :sni_hostname)\n  (send\n    (send\n      (const nil :URI) :parse\n      (ivar :@url)) :host)) merge ","URI  parse host ","URI  parse "," start_tls ","@driver start ","@parser create_handshake  request_data "]}," Faye WebSocket Client initialize":{"type":"method","name":"initialize","children":[],"call":["conn parent= ","EventMachine  connect ","@uri host ","@uri scheme == ","@uri scheme ","@uri port ","URI  parse ","Protocol8Parser  new "," finalize_close "," emit_error ","error message ","endpoint host ","@driver emit ","@proxy on ","@driver start ","@stream start_tls ","SECURE_PROTOCOLS  include? ","uri scheme ","@proxy set_header ","headers each ","proxy [] ","@driver proxy ","proxy fetch ","options fetch ","endpoint scheme ","DEFAULT_PORTS  [] ","endpoint port ","@driver status ","@driver headers ","@driver on ","(sym :open) each "," WebSocket Driver  client ","options [] ","(pair\n  (sym :sni_hostname)\n  (send\n    (lvar :uri) :host)) merge ","uri host "," configure_proxy "," on_network_error ","@endpoint host ","@endpoint scheme ","@endpoint port ","HybiParser  new "," finalize "," dispatch_event ","event init_event ","Event  new ","Event  create ","URI  parse  host ","@URI  parse  host ","URI  parse  scheme == ","@URI  parse  scheme == ","URI  parse  scheme ","@URI  parse  scheme ","URI  parse  port ","@URI  parse  port "," WebSocket Driver  client  emit ","@driver proxy  on ","@options fetch  on "," WebSocket Driver  client  start ","@driver proxy  set_header ","@options fetch  set_header ","proxy []  each ","options fetch  [] ","@driver options fetch  "," WebSocket Driver  client  proxy ","options fetch  fetch "," WebSocket Driver  client  status ","@driver proxy []  "," WebSocket Driver  client  headers "," WebSocket Driver  client  on ","(pair\n  (sym :sni_hostname)\n  (send\n    (lvar :URI  parse ) :host)) merge "," configure_options fetch  "," dispatch_Event  new  "," dispatch_Event  create  ","Event  new  init_Event  new  ","Event  create  init_Event  create  "]}," Faye WebSocket Event prevent_default":{"type":"method","name":"prevent_default","children":[],"call":[]}," Faye WebSocket Event stop_propagation":{"type":"method","name":"stop_propagation","children":[],"call":[]}," Faye WebSocket Event init_event":{"type":"method","name":"init_event","children":[],"call":[]}," Faye WebSocket Event initialize":{"type":"method","name":"initialize","children":[],"call":["metaclass __send__ ","options each "]}," Faye WebSocket API dispatch_event":{"type":"method","name":"dispatch_event","children":[],"call":["listener call "," args ","@listeners [] each ","@listeners [] "," event_type ","callback call "," __send__ ","event type ","event event_phase= ","event target= ","event current_target= "," __send__  call "]}," Faye WebSocket API remove_event_listener":{"type":"method","name":"remove_event_listener","children":[],"call":["@listeners [] delete_if ","listener method ","@listeners [] "," event_type ","@listeners delete "]}," Faye WebSocket API add_event_listener":{"type":"method","name":"add_event_listener","children":[],"call":["list << ","@listeners [] "," event_type "]}," Faye WebSocket API close":{"type":"method","name":"close","children":[],"call":["close call ","@parser close ","@parser respond_to? "," dispatch_event ","event init_event ","Event  new ","@stream close_connection_after_writing "," lambda ","(const nil :CLOSING) include? "," ready_state ","@driver close ","@ready_state == "," raise ","Failed to execute 'close' on WebSocket:  + + ","Failed to execute 'close' on WebSocket:  + ","code <= ","code >= ","code == "," begin_close ","EventMachine  add_timer ","@ready_state < ","EventMachine  cancel_timer ","finalize call "," dispatch_Event  new  ","Event  new  init_Event  new  "]}," Faye WebSocket API send":{"type":"method","name":"send","children":[],"call":["@stream write ","@parser frame ","WebSocket  encode ","String  === "," ready_state == "," ready_state ","@driver binary ","@driver text ","message to_s ","@ready_state > ","@ready_state == "," raise ","@send_buffer << ","data to_s ","Array  === ","@parser @parser frame  ","WebSocket  encode  to_s ","data to_s  to_s "]}," Faye WebSocket API receive":{"type":"method","name":"receive","children":[],"call":[" dispatch_event ","event data= ","event init_event ","Event  new "," ready_state == "," ready_state ","@ready_state == "," dispatch_Event  new  ","Event  new  data= ","Event  new  init_Event  new  "]}," Response each":{"type":"method","name":"each","children":[],"call":["@body each ","@body is_a? "," head "," websocket "]}," Request websocket?":{"type":"method","name":"websocket?","children":[],"call":["(str \"WebSocket\") include? ","@env [] ","@env [] split include? ","@env [] split "]}," Connection receive_data":{"type":"method","name":"receive_data","children":[],"call":[" close_connection "," log_error "," log "," process ","@response websocket= ","@response persistent! ","@request env []= ","@request env ","@request websocket? ","@request parse ","callback call ","@request env [] "," trace "," socket_stream receive "," socket_stream "," thin_receive_data ","@serving == ","@api websocket? ","@parser upgrade_data "," goliath_receive_data ","@request env []  call "]}," Faye WebSocket Draft76Parser parse":{"type":"method","name":"parse","children":[],"call":[" handshake_signature "]}," Faye WebSocket Draft76Parser handshake_signature":{"type":"method","name":"handshake_signature","children":[],"call":["Digest MD5  digest "," big_endian + + "," big_endian + "," big_endian "," number_from_key / "," spaces_in_key "," number_from_key ","env [] ","@socket env ","head empty? ","@socket env  [] ","@socket @socket env  "]}," Faye WebSocket Stream receive":{"type":"method","name":"receive","children":[],"call":["@socket_object __send__ "]}," Faye WebSocket Stream fail":{"type":"method","name":"fail","children":[],"call":["@socket_object __send__ "]}," Faye WebSocket rack_response":{"type":"method","name":"rack_response","children":[],"call":[" start_driver "]}," Faye WebSocket initialize":{"type":"method","name":"initialize","children":[],"call":["@driver start ","callback call ","@env [] ","Stream  new "," WebSocket Driver  rack ","options [] ","WebSocket  determine_url ","WebSocket  ensure_reactor_running "," ping ","@ping_id to_s ","EventMachine  add_periodic_timer ","@parser open? ","@stream write ","@parser handshake_response ","@callback call "," open ","EventMachine  next_tick ","WebSocket  parser new ","WebSocket  parser "," WebSocket Driver  rack  start ","@env []  call ","options [] _id to_s ","WebSocket  parser new  open? ","Stream  new  write ","WebSocket  parser new  handshake_response ","@@env []  call "]}," Faye WebSocket websocket?":{"type":"method","name":"websocket?","children":[],"call":[]}," Faye WebSocket secure_request?":{"type":"method","name":"secure_request?","children":[],"call":[]}," Faye WebSocket load_adapter":{"type":"method","name":"load_adapter","children":[],"call":[]}," Faye WebSocket ensure_reactor_running":{"type":"method","name":"ensure_reactor_running","children":[],"call":[]}," Faye WebSocket determine_url":{"type":"method","name":"determine_url","children":[],"call":[]}," Faye WebSocket API parse":{"type":"method","name":"parse","children":[],"call":["worker parse ","@driver parse "]}," Faye WebSocket API finalize_close":{"type":"method","name":"finalize_close","children":[],"call":[" dispatch_event ","event init_event ","Event  create ","@close_params [] ","EventMachine  cancel_timer ","@ready_state == "," dispatch_Event  create  ","Event  create  init_Event  create  "]}," Faye WebSocket API begin_close":{"type":"method","name":"begin_close","children":[],"call":[" finalize_close ","@stream close_connection_after_writing ","@ready_state == ","@stream close_connection ","options [] "]}," Faye WebSocket API emit_error":{"type":"method","name":"emit_error","children":[],"call":[" dispatch_event ","event init_event ","Event  create ","@ready_state >= "," dispatch_Event  create  ","Event  create  init_Event  create  "]}," Faye WebSocket API receive_message":{"type":"method","name":"receive_message","children":[],"call":[" dispatch_event ","event init_event ","Event  create ","@ready_state == ","event data= ","Event  new "," dispatch_Event  create  "," dispatch_Event  new  ","Event  create  init_Event  create  ","Event  new  init_Event  new  ","Event  create  data= ","Event  new  data= "]}," Faye WebSocket API open":{"type":"method","name":"open","children":[],"call":[" dispatch_event ","event init_event ","Event  create ","@ready_state == ","Event  new "," send ","buffer shift ","@parser open? ! ","@parser open? "," dispatch_Event  create  "," dispatch_Event  new  ","Event  create  init_Event  create  ","Event  new  init_Event  new  "]}," Faye WebSocket API protocol":{"type":"method","name":"protocol","children":[],"call":["@driver protocol "]}," Faye WebSocket API ping":{"type":"method","name":"ping","children":[],"call":["@driver ping ","@ready_state > "]}," Faye WebSocket API write":{"type":"method","name":"write","children":[],"call":["@stream write "]}," Faye WebSocket API initialize":{"type":"method","name":"initialize","children":[],"call":[" ping ","@ping_id to_s ","EventMachine  add_periodic_timer "," emit_error ","error message ","@driver on "," begin_close ","e code ","e reason "," receive_message ","e data "," open ","options [] ","@driver add_extension ","(splat\n  (send\n    (lvar :options) :[]\n    (sym :extensions))) each ","@driver set_header ","headers each "," WebSocket Driver  validate_options "," dispatch_event ","event init_event ","Event  new "," finalize ","Event  create ","options [] _id to_s ","options []  each "," dispatch_Event  new  "," dispatch_Event  create  ","Event  new  init_Event  new  ","Event  create  init_Event  create  "]}," API EventTarget flush":{"type":"method","name":"flush","children":[],"call":["listener call ","buffer each ","@buffers delete ","event_type to_s "," event_buffers delete "," event_buffers ","callback call "," event_buffers delete  each ","@ event_buffers delete s delete "," event_ event_buffers delete s delete "," event_ event_buffers delete s "]}," API EventTarget dispatch_event":{"type":"method","name":"dispatch_event","children":[],"call":[" emit ","event type ","listener call ","@buffers [] push ","@buffers [] ","k []= ","Hash  new ","count > "," listener_count "," instance_variable_get ","event event_phase= ","event target= ","event current_target= "," event_buffers [] push "," event_buffers [] "," event_buffers ","@listeners [] each ","@listeners [] ","callback call "," __send__ "," instance_variable_get  call "," listener_count  > "," listener_ listener_count  ","  instance_variable_get _count ","@ instance_variable_get s [] each ","@ instance_variable_get s [] "," __send__  call "]}," API EventTarget remove_event_listener":{"type":"method","name":"remove_event_listener","children":[],"call":[" remove_listener ","@listeners [] delete_if ","listener method ","@listeners [] ","@listeners delete "]}," API EventTarget add_listener":{"type":"method","name":"add_listener","children":[],"call":[" flush ","EventMachine  next_tick "]}," API EventTarget add_event_listener":{"type":"method","name":"add_event_listener","children":[],"call":[" add_listener ","list << ","@listeners [] "]}," API create":{"type":"method","name":"create","children":[],"call":[]}," API Event prevent_default":{"type":"method","name":"prevent_default","children":[],"call":[]}," API Event stop_propagation":{"type":"method","name":"stop_propagation","children":[],"call":[]}," API Event init_event":{"type":"method","name":"init_event","children":[],"call":[]}," API Event initialize":{"type":"method","name":"initialize","children":[],"call":[" instance_variable_set ","options each ","metaclass __send__ "]}," Faye WebSocket Adapter socket_connection?":{"type":"method","name":"socket_connection?","children":[],"call":[" eventsource? "," websocket? "]}," Faye WebSocket Adapter eventsource?":{"type":"method","name":"eventsource?","children":[],"call":["EventSource  eventsource? "," env ","Ev env ntSourc env    env v env ntsourc env ? ","  env nv "]}," Faye WebSocket Adapter websocket?":{"type":"method","name":"websocket?","children":[],"call":["WebSocket  websocket? "," env ","W env bSock env t  w env bsock env t? ","  env nv "]}," Faye RackStream write":{"type":"method","name":"write","children":[],"call":[" fail ","EOFError  === ","@stream_send call ","@rack_hijack_io write ","@rack_hijack_io_reader send_data "]}," Faye RackStream receive":{"type":"method","name":"receive","children":[],"call":[]}," Faye RackStream fail":{"type":"method","name":"fail","children":[],"call":[]}," Faye RackStream each":{"type":"method","name":"each","children":[],"call":[]}," Faye RackStream close_connection_after_writing":{"type":"method","name":"close_connection_after_writing","children":[],"call":["@connection close_connection_after_writing "," clean_rack_hijack "]}," Faye RackStream close_connection":{"type":"method","name":"close_connection","children":[],"call":["@connection close_connection "," clean_rack_hijack "]}," Faye RackStream clean_rack_hijack":{"type":"method","name":"clean_rack_hijack","children":[],"call":["@rack_hijack_io_reader close_connection_after_writing "]}," Faye RackStream initialize":{"type":"method","name":"initialize","children":[],"call":["@connection socket_stream= ","@connection respond_to? ","reader stream= ","EventMachine  attach ","socket_object env [] ","socket_object env ","socket_object env [] call "," hijack_rack_socket ","socket env [] ","socket env ","socket_object env []  socket_stream= ","socket env []  socket_stream= ","socket_object env []  respond_to? ","socket env []  respond_to? "]}," Faye RackStream Reader unbind":{"type":"method","name":"unbind","children":[],"call":[" stream fail "," stream "]}," Faye RackStream Reader receive_data":{"type":"method","name":"receive_data","children":[],"call":[" stream receive "," stream "]}," Faye EventSource Stream fail":{"type":"method","name":"fail","children":[],"call":["@socket_object close "]}," Faye EventSource close":{"type":"method","name":"close","children":[],"call":[" dispatch_event ","event init_event ","WebSocket API Event  create ","@stream close_connection_after_writing ","EventMachine  cancel_timer ","(const\n  (const\n    (const nil :WebSocket) :API) :CLOSING) include? ","WebSocket API Event  new ","(const nil :CLOSING) include? "," dispatch_WebSocket API Event  create  "," dispatch_WebSocket API Event  new  ","WebSocket API Event  create  init_WebSocket API Event  create  ","WebSocket API Event  new  init_WebSocket API Event  new  "]}," Faye EventSource ping":{"type":"method","name":"ping","children":[],"call":["@stream write ","@ready_state > "]}," Faye EventSource send":{"type":"method","name":"send","children":[],"call":["@stream write ","frame << ","options [] "," WebSocket Driver  encode gsub "," WebSocket Driver  encode ","message to_s ","@ready_state > ","WebSocket  encode gsub ","WebSocket  encode ","@ready_state == "," WebSocket Driver  encode gsub  to_s ","WebSocket  encode gsub  to_s "]}," Faye EventSource open":{"type":"method","name":"open","children":[],"call":[" dispatch_event ","event init_event ","WebSocket API Event  create ","@ready_state == ","WebSocket API Event  new "," dispatch_WebSocket API Event  create  "," dispatch_WebSocket API Event  new  ","WebSocket API Event  create  init_WebSocket API Event  create  ","WebSocket API Event  new  init_WebSocket API Event  new  "]}," Faye EventSource rack_response":{"type":"method","name":"rack_response","children":[],"call":[]}," Faye EventSource last_event_id":{"type":"method","name":"last_event_id","children":[],"call":["@env [] "]}," Faye EventSource initialize":{"type":"method","name":"initialize","children":[],"call":[" ping ","EventMachine  add_periodic_timer "," open ","EventMachine  next_tick ","@stream write ","HTTP/1.1 200 OK\r\n + + + + + + ","(send\n  (ivar :@retry) :*\n  (int 1000)) floor ","@retry * ","HTTP/1.1 200 OK\r\n + + + + + ","HTTP/1.1 200 OK\r\n + + + + ","headers to_s ","HTTP/1.1 200 OK\r\n + + + ","HTTP/1.1 200 OK\r\n + + ","HTTP/1.1 200 OK\r\n + ","callback call ","@env [] ","headers []= ","options [] each ","options [] "," WebSocket Driver Headers  new ","Stream  new ","EventSource  determine_url ","(or\n  (send\n    (lvar :options) :[]\n    (sym :retry))\n  (const nil :DEFAULT_RETRY)) to_f ","WebSocket  ensure_reactor_running ","Stream  new  write ","(send\n  (ivar :(or\n  (send\n    (lvar :options) :[]\n    (sym :retry))\n  (const nil :DEFAULT_RETRY)) to_f ) :*\n  (int 1000)) floor ","(or\n  (send\n    (lvar :options) :[]\n    (sym :retry))\n  (const nil :DEFAULT_RETRY)) to_f  * "," WebSocket Driver Headers  new  to_s ","@env []  call "," WebSocket Driver Headers  new  []= "]}," Faye EventSource determine_url":{"type":"method","name":"determine_url","children":[],"call":[]}," Faye EventSource eventsource?":{"type":"method","name":"eventsource?","children":[],"call":[]}," Response head":{"type":"method","name":"head","children":[],"call":[" thin_head "," status == "," status "," async "," goliath_head "]}," Connection process":{"type":"method","name":"process","children":[],"call":[" thin_process ","@response async= ","@response persistent! ","@request env []= ","@request env ","@request socket_connection? ","@request websocket? ","@serving != ","@request async_connection? "]}," Faye WebSocket RainbowsClient write_headers":{"type":"method","name":"write_headers","children":[],"call":["status == "," socket_connection? "," async_connection? "]}," Faye WebSocket RainbowsClient unbind":{"type":"method","name":"unbind","children":[],"call":[" socket_stream fail "," socket_stream "]}," Faye WebSocket RainbowsClient on_read":{"type":"method","name":"on_read","children":[],"call":[" app_call ","StringIO  new ","@input rewind ","@hp body_eof? "," websocket? ","@state == "]}," Faye WebSocket RainbowsClient app_call":{"type":"method","name":"app_call","children":[],"call":[" prepare_request_body "," websocket? ","@hp content_length == ","@hp content_length ","args first == ","args first ","@env []= "]}," Faye WebSocket RainbowsClient receive_data":{"type":"method","name":"receive_data","children":[],"call":[" socket_stream receive "," socket_stream ","@state == "]}," Response headers_output":{"type":"method","name":"headers_output","children":[],"call":[" goliath_headers_output "," status == "," status "]}," Request process":{"type":"method","name":"process","children":[],"call":[" goliath_process "," env []= "," conn "," env "]}," API call":{"type":"method","name":"call","children":[],"call":[" goliath_call "]}," Connection unbind":{"type":"method","name":"unbind","children":[],"call":[" socket_stream fail "," socket_stream "]}," Faye WebSocket start_driver":{"type":"method","name":"start_driver","children":[],"call":["@driver start ","EventMachine  schedule ","@driver nil? "]}," Faye RackStream hijack_rack_socket":{"type":"method","name":"hijack_rack_socket","children":[],"call":["queue pop ","EventMachine  reactor_running? ","queue push ","reader close_connection_after_writing ","reader stream= ","EventMachine  attach ","EventMachine  schedule ","Queue  new ","@socket_object env [] ","@socket_object env ","@socket_object env [] call ","Queue  new  pop ","Queue  new  push "]}," API EventTarget event_buffers":{"type":"method","name":"event_buffers","children":[],"call":["k []= ","Hash  new "]}," Faye WebSocket Client configure_proxy":{"type":"method","name":"configure_proxy","children":[],"call":["@driver start ","@stream start_tls ","(pair\n  (sym :sni_hostname)\n  (send\n    (lvar :uri) :host)) merge ","uri host ","SECURE_PROTOCOLS  include? ","uri scheme ","URI  parse ","@proxy on ","@proxy set_header ","headers each ","proxy [] ","@driver emit ","@driver proxy "," start_tls ","(pair\n  (sym :sni_hostname)\n  (send\n    (lvar :URI  parse ) :host)) merge ","URI  parse  host ","URI  parse  scheme ","@driver proxy  on ","@driver proxy  set_header ","proxy []  each "]}," Faye WebSocket SslVerifier identity_verified?":{"type":"method","name":"identity_verified?","children":[],"call":["OpenSSL SSL  verify_certificate_identity "]}," Faye WebSocket SslVerifier store_cert":{"type":"method","name":"store_cert","children":[],"call":[" raise ","error message == ","error message ","@cert_store add_cert ","error message =~ "]}," Faye WebSocket SslVerifier parse_cert":{"type":"method","name":"parse_cert","children":[],"call":["OpenSSL X509 Certificate  new "]}," Faye WebSocket SslVerifier should_verify?":{"type":"method","name":"should_verify?","children":[],"call":["@ssl_opts [] != ","@ssl_opts [] "]}," Faye WebSocket SslVerifier ssl_handshake_completed":{"type":"method","name":"ssl_handshake_completed","children":[],"call":[" raise "," identity_verified? "," should_verify? "]}," Faye WebSocket SslVerifier ssl_verify_peer":{"type":"method","name":"ssl_verify_peer","children":[],"call":[" store_cert "," raise ","@cert_store verify "," parse_cert "," should_verify? "]}," Faye WebSocket SslVerifier initialize":{"type":"method","name":"initialize","children":[],"call":["@cert_store set_default_paths ","@cert_store add_file ","(lvar :root) flatten each ","(lvar :root) flatten ","@ssl_opts [] ","OpenSSL X509 Store  new ","OpenSSL X509 Store  new  set_default_paths ","OpenSSL X509 Store  new  add_file ","(lvar :@ssl_opts [] ) flatten each ","(lvar :@ssl_opts [] ) flatten "]}," Faye WebSocket Client Connection ssl_handshake_completed":{"type":"method","name":"ssl_handshake_completed","children":[],"call":[" parent __send__ "," parent "]}," Faye WebSocket Client Connection ssl_verify_peer":{"type":"method","name":"ssl_verify_peer","children":[],"call":[" parent __send__ "," parent "]}," Faye WebSocket Client ssl_handshake_completed":{"type":"method","name":"ssl_handshake_completed","children":[],"call":[" on_network_error ","@ssl_verifier ssl_handshake_completed "]}," Faye WebSocket Client ssl_verify_peer":{"type":"method","name":"ssl_verify_peer","children":[],"call":[" on_network_error ","@ssl_verifier ssl_verify_peer "]}," Faye WebSocket Client on_network_error":{"type":"method","name":"on_network_error","children":[],"call":[" finalize_close "," emit_error ","error message "]}," Faye WebSocket Client start_tls":{"type":"method","name":"start_tls","children":[],"call":["@stream start_tls ","SslVerifier  new ","uri host ","(pair\n  (sym :sni_hostname)\n  (send\n    (lvar :uri) :host)) merge ","SECURE_PROTOCOLS  include? ","uri scheme "]}," Faye WebSocket HybiParser integer":{"type":"method","name":"integer","children":[],"call":["data << ","8 * ","bytes size - - ","bytes size - ","bytes size ","bytes each_with_index "]}," Faye WebSocket HybiParser reset":{"type":"method","name":"reset","children":[],"call":[]}," Faye WebSocket HybiParser emit_frame":{"type":"method","name":"emit_frame","children":[],"call":["@socket send ","@socket close ","ERRORS  [] ","payload size > ","payload size ","OPCODES  [] ","@closing_callback call ","WebSocket  encode ","payload [] ","WebSocket  valid_utf8? ! ","WebSocket  valid_utf8? ","ERROR_CODES  include? ","code < ","code >= ","payload size == ","256 * + ","256 * ","payload size >= ","@buffer concat ","@socket receive "," reset ","@mode == ","Mask  mask ","callback call ","@ping_callbacks delete ","@ping_callbacks [] ","WebSocketMask  mask ","Mask  mask  size > ","WebSocketMask  mask  size > ","Mask  mask  size ","WebSocketMask  mask  size ","@closing_@ping_callbacks []  call ","WebSocket  enERRORS  []  ","WebSocket  en256 * +  ","Mask  mask  [] ","WebSocketMask  mask  [] ","ERRORS  []  < ","256 * +  < ","ERRORS  []  >= ","256 * +  >= ","Mask  mask  size == ","WebSocketMask  mask  size == ","Mask  mask  size >= ","WebSocketMask  mask  size >= ","@ping_callbacks []  call ","@ping_@ping_callbacks [] s delete ","@ping_@ping_callbacks [] s [] "]}," Faye WebSocket HybiParser parse_extended_length":{"type":"method","name":"parse_extended_length","children":[],"call":[" integer "]}," Faye WebSocket HybiParser parse_length":{"type":"method","name":"parse_length","children":[],"call":["@length == ","@length <= ","data & ","(send\n  (lvar :data) :&\n  (const nil :MASK)) == "]}," Faye WebSocket HybiParser parse_opcode":{"type":"method","name":"parse_opcode","children":[],"call":["@socket close ","ERRORS  [] ","OPENING_OPCODES  include? ","FRAGMENTED_OPCODES  include? ","OPCODES  values include? ","OPCODES  values ","data & ","(send\n  (lvar :data) :&\n  (const nil :FIN)) == ","(send\n  (lvar :data) :&\n  (lvar :rsv)) == ","(const nil :RSV1) any? "]}," Faye WebSocket HybiParser close":{"type":"method","name":"close","children":[],"call":["@socket send ","ERRORS  [] "]}," Faye WebSocket HybiParser frame":{"type":"method","name":"frame","children":[],"call":["WebSocket  encode ","frame concat ","Mask  mask ","frame []= "," rand ","(send\n  (begin\n    (send\n      (lvar :code) :>>\n      (int 8))) :&\n  (const nil :BYTE)) + ","code & ","(send\n  (lvar :code) :>>\n  (int 8)) & ","code >> ","length & ","(send\n  (lvar :length) :>>\n  (int 8)) & ","length >> ","(send\n  (lvar :length) :>>\n  (int 16)) & ","(send\n  (lvar :length) :>>\n  (int 24)) & ","(send\n  (lvar :length) :>>\n  (int 32)) & ","(send\n  (lvar :length) :>>\n  (int 40)) & ","(send\n  (lvar :length) :>>\n  (int 48)) & ","(send\n  (lvar :length) :>>\n  (int 56)) & ","masked | ","length <= ","FIN  | ","Array  new ","header + ","buffer size + ","buffer size ","data bytes to_a ","data bytes ","data respond_to? ","OPCODES  [] ","String  === ","WebSocketMask  mask ","Array  new  concat ","Array  new  []= ","buffer size +  & ","(send\n  (lvar :buffer size + ) :>>\n  (int 8)) & ","buffer size +  >> ","(send\n  (lvar :buffer size + ) :>>\n  (int 16)) & ","(send\n  (lvar :buffer size + ) :>>\n  (int 24)) & ","(send\n  (lvar :buffer size + ) :>>\n  (int 32)) & ","(send\n  (lvar :buffer size + ) :>>\n  (int 40)) & ","(send\n  (lvar :buffer size + ) :>>\n  (int 48)) & ","(send\n  (lvar :buffer size + ) :>>\n  (int 56)) & ","buffer size +  <= ","Mask  mask  size + ","(send\n  (begin\n    (send\n      (lvar :code) :>>\n      (int 8))) :&\n  (const nil :BYTE)) +  size + ","data bytes to_a  size + ","WebSocketMask  mask  size + ","Mask  mask  size ","(send\n  (begin\n    (send\n      (lvar :code) :>>\n      (int 8))) :&\n  (const nil :BYTE)) +  size ","data bytes to_a  size ","WebSocketMask  mask  size "]}," Faye WebSocket HybiParser parse":{"type":"method","name":"parse","children":[],"call":[" emit_frame ","@reader read "," parse_extended_length "," parse_length ","buffer [] "," parse_opcode ","@reader put ","data bytes to_a ","data bytes ","@reader read  [] "]}," Faye WebSocket HybiParser create_handshake":{"type":"method","name":"create_handshake","children":[],"call":["Handshake  new ","@socket uri "]}," Faye WebSocket HybiParser handshake_response":{"type":"method","name":"handshake_response","children":[],"call":["(send\n  (lvar :headers) :+\n  (array\n    (str \"\")\n    (str \"\"))) join ","headers + ","headers << ","supported include? ","protos find ","protos split ","String  === ","@socket env [] ","@socket env ","Base64  encode64 strip ","Base64  encode64 ","Digest SHA1  digest ","sec_key + ","protos split  find ","@socket env []  find ","protos split  split ","@socket env []  split ","@socket env []  + "]}," Faye WebSocket HybiParser version":{"type":"method","name":"version","children":[],"call":["@socket env [] ","@socket env "]}," Faye WebSocket HybiParser initialize":{"type":"method","name":"initialize","children":[],"call":["@protocols split ","String  === ","options [] ","StreamReader  new "," reset ","@protocols split  split ","options []  split "]}," Faye WebSocket HybiParser StreamReader read_bytes":{"type":"method","name":"read_bytes","children":[],"call":["@queue shift ","length > ","@queue size "]}," Faye WebSocket HybiParser StreamReader put":{"type":"method","name":"put","children":[],"call":["@queue concat ","bytes size > ","bytes size "]}," Faye WebSocket HybiParser StreamReader read":{"type":"method","name":"read","children":[],"call":[" read_bytes "]}," Faye WebSocket HybiParser StreamReader initialize":{"type":"method","name":"initialize","children":[],"call":[]}," Faye WebSocket HybiParser Handshake valid?":{"type":"method","name":"valid?","children":[],"call":["response [] == ","response [] ","protocol ! ","@protocols ! ","connection split include? ","connection split ","upgrade =~ ","@protocols include? ","response code to_i == ","response code to_i ","response code ","Net HTTPResponse  read_new ","Net BufferedIO  new ","StringIO  new ","WebSocket  encode ","Net HTTPResponse  read_new  [] == ","Net HTTPResponse  read_new  [] ","response []  ! ","@response [] s ! ","response []  split include? ","response []  split ","response []  =~ ","@response [] s include? ","Net HTTPResponse  read_new  code to_i == ","Net HTTPResponse  read_new  code to_i ","Net HTTPResponse  read_new  code "]}," Faye WebSocket HybiParser Handshake complete?":{"type":"method","name":"complete?","children":[],"call":["@buffer [] == ","@buffer [] "]}," Faye WebSocket HybiParser Handshake parse":{"type":"method","name":"parse","children":[],"call":[" complete? ","@buffer << ","message << ","data each_byte "]}," Faye WebSocket HybiParser Handshake request_data":{"type":"method","name":"request_data","children":[],"call":["(send\n  (lvar :headers) :+\n  (array\n    (str \"\")\n    (str \"\"))) join ","headers + ","headers << ","@protocols * ","@uri query ","@uri path ","@uri host + ","@uri port ","@uri host ","@uri path == ","@uri @uri path  ","@uri @uri path  == "]}," Faye WebSocket HybiParser Handshake initialize":{"type":"method","name":"initialize","children":[],"call":["Base64  encode64 strip ","Base64  encode64 ","Digest SHA1  digest ","@key + ","(send\n  (begin\n    (irange\n      (int 1)\n      (int 16))) :map) * "," rand chr "," rand ","(irange\n  (int 1)\n  (int 16)) map ","Base64  encode64 strip  + "]}," Faye WebSocket Draft76Parser parse_leading_byte":{"type":"method","name":"parse_leading_byte","children":[],"call":["data == "]}," Faye WebSocket Draft76Parser close":{"type":"method","name":"close","children":[],"call":["callback call ","@socket send "]}," Faye WebSocket Adapter async_connection?":{"type":"method","name":"async_connection?","children":[],"call":[" eventsource? "," websocket? "]}," Faye Stream write":{"type":"method","name":"write","children":[],"call":["@stream_send call "]}," Faye Stream receive":{"type":"method","name":"receive","children":[],"call":["@web_socket __send__ "]}," Faye Stream fail":{"type":"method","name":"fail","children":[],"call":["@event_source close ","@web_socket close "]}," Faye Stream each":{"type":"method","name":"each","children":[],"call":[]}," Faye Stream initialize":{"type":"method","name":"initialize","children":[],"call":["@connection socket_stream= ","@connection respond_to? ","event_source env [] ","event_source env ","web_socket env [] ","web_socket env ","event_source env []  socket_stream= ","web_socket env []  socket_stream= ","event_source env []  respond_to? ","web_socket env []  respond_to? "]}," Faye WebSocket HybiParser ping":{"type":"method","name":"ping","children":[],"call":["@socket send ","@ping_callbacks []= "]}," Faye WebSocket HybiParser open?":{"type":"method","name":"open?","children":[],"call":[]}," Faye WebSocket Draft76Parser open?":{"type":"method","name":"open?","children":[],"call":["@handshake_complete ! ! ","@handshake_complete ! "]}," Faye WebSocket parse":{"type":"method","name":"parse","children":[],"call":[" open ","@stream write ","@parser parse "]}," Faye WebSocket protocol":{"type":"method","name":"protocol","children":[],"call":["@parser protocol "]}," Faye WebSocket ping":{"type":"method","name":"ping","children":[],"call":["@parser ping ","@parser respond_to? "]}," Faye WebSocket parser":{"type":"method","name":"parser","children":[],"call":[]}," Faye WebSocket valid_utf8?":{"type":"method","name":"valid_utf8?","children":[],"call":[]}," Faye WebSocket encode":{"type":"method","name":"encode","children":[],"call":[]}," Faye WebSocket utf8_string":{"type":"method","name":"utf8_string","children":[],"call":[]}," Faye WebSocket mask":{"type":"method","name":"mask","children":[],"call":[]}," Faye WebSocket rbx?":{"type":"method","name":"rbx?","children":[],"call":[]}," Faye WebSocket jruby?":{"type":"method","name":"jruby?","children":[],"call":[]}," Faye WebSocket write":{"type":"method","name":"write","children":[],"call":["@stream write "]}," Faye WebSocket API finalize":{"type":"method","name":"finalize","children":[],"call":[" dispatch_event ","event init_event ","Event  new ","@stream close_connection_after_writing ","EventMachine  cancel_timer ","@ready_state == ","Event  create "," dispatch_Event  new  "," dispatch_Event  create  ","Event  new  init_Event  new  ","Event  create  init_Event  create  "]}}