{" ActiveModel ForbiddenAttributesProtection sanitize_for_mass_assignment":{"type":"method","name":"sanitize_for_mass_assignment","children":[],"call":[" raise ","new_attributes permitted? ","new_attributes respond_to? ","new_attributes respond_to? ! ","options first ","options first  permitted? ","options first  respond_to? ","options first  respond_to? ! "]}," ActionController StrongParameters params=":{"type":"method","name":"params=","children":[],"call":["Parameters  new ","val is_a? "]}," ActionController StrongParameters params":{"type":"method","name":"params","children":[],"call":["Parameters  new "," request parameters "," request "]}," ActionController Parameters convert_hashes_to_parameters":{"type":"method","name":"convert_hashes_to_parameters","children":[],"call":[" []= "," class new "," class ","value is_a? ! ","value is_a? ","converted equal? "," convert_value_to_parameters ","converted equal? ! "," convert_value_to_parameters  equal? "," convert_value_to_parameters  equal? ! "]}," ActionController Parameters slice":{"type":"method","name":"slice","children":[],"call":[" class new "," class ","new_instance instance_variable_set "," class new tap "]}," ActionController Parameters fetch":{"type":"method","name":"fetch","children":[],"call":[" convert_hashes_to_parameters "," raise ","ActionController ParameterMissing  new "," key? "," block_given? "]}," ActionController Parameters []":{"type":"method","name":"[]","children":[],"call":[" convert_hashes_to_parameters "]}," ActionController Parameters permit":{"type":"method","name":"permit","children":[],"call":[" slice permit! "," slice ","params permit! ","params []= ","value permit ","Array  wrap ","filter [] "," class new "," class ","value respond_to? ! ","value respond_to? ","value is_a? ! ","value is_a? ","filter is_a? "," each_element ","key to_sym "," slice each ","filter keys "," [] ","filters each "," has_key? "," keys grep each "," keys grep ","Regexp  escape "," keys ","filter with_indifferent_access ","filter to_s "," unpermitted_parameters! "," class action_on_unpermitted_parameters "," hash_filter "," permitted_scalar_filter "," class new  permit! "," class new  []= "," class new  permit ","filter with_indifferent_access  [] "," class new  respond_to? ! "," class new  respond_to? "," class new  is_a? ! "," class new  is_a? ","filter with_indifferent_access  is_a? ","key to_sym  to_sym ","filter key to_sym s ","filter with_indifferent_access  keys ","filter with_indifferent_access s each "," has_key to_sym ? "," key to_sym s grep each "," key to_sym s grep "," key to_sym s ","filter with_indifferent_access  with_indifferent_access ","filter with_indifferent_access  to_s "," hash_filter with_indifferent_access  "," permitted_scalar_filter with_indifferent_access  "]}," ActionController Parameters required":{"type":"method","name":"required","children":[],"call":[" raise ","ActionController ParameterMissing  new "," [] presence "," [] "]}," ActionController Parameters permit!":{"type":"method","name":"permit!","children":[],"call":[" [] permit! "," [] "," [] respond_to? "," convert_hashes_to_parameters "," each_pair ","_ permit! ","_ respond_to? ","Array  wrap each ","Array  wrap "]}," ActionController Parameters initialize":{"type":"method","name":"initialize","children":[],"call":[]}," ActionController ParameterMissing initialize":{"type":"method","name":"initialize","children":[],"call":[]}," ActionController Parameters each_element":{"type":"method","name":"each_element","children":[],"call":["(send\n  (lvar :object) :map) compact ","object map ","object is_a? ","hash []= ","object each ","object class new ","object class ","k =~ ","object keys all? ","object keys ","value each ","value class new ","value class ","value keys all? ","value keys ","value is_a? ","(send\n  (lvar :value) :map) compact ","value map "," fields_for_style? ","object class new  []= ","value class new  []= "]}," ActionController Parameters dup":{"type":"method","name":"dup","children":[],"call":["duplicate instance_variable_set "," tap ","duplicate default= "," default "," class new tap "," class new "," class "]}," ActionController Parameters require":{"type":"method","name":"require","children":[],"call":[" raise ","ActionController ParameterMissing  new "," [] presence "," [] "]}," ActionController Parameters convert_value":{"type":"method","name":"convert_value","children":[],"call":["value dup replace "," convert_value ","value map ","value dup ","value is_a? "," class new_from_hash_copying_default "," class ","value class == ","value class "]}," Rails Generators StrongParametersControllerGenerator module_namespacing":{"type":"method","name":"module_namespacing","children":[],"call":[" block_given? "]}," ActionController Parameters unpermitted_keys":{"type":"method","name":"unpermitted_keys","children":[],"call":[" keys - - "," keys - ","params keys "," keys "]}," ActionController Parameters unpermitted_parameters!":{"type":"method","name":"unpermitted_parameters!","children":[],"call":[" raise ","ActionController UnpermittedParameters  new ","ActionController Base  logger debug ","unpermitted_keys join ","ActionController Base  logger "," class action_on_unpermitted_parameters "," class ","unpermitted_keys any? "," unpermitted_keys ","ActiveSupport Notifications  instrument "," unpermitted_keys  join "," unpermitted_keys  any? ","  unpermitted_keys  "]}," ActionController Parameters hash_filter":{"type":"method","name":"hash_filter","children":[],"call":["params []= ","element permit ","Array  wrap ","filter [] "," class new "," class ","element respond_to? ","element is_a? "," each_element "," array_of_permitted_scalars_filter ","filter [] == "," slice each "," slice ","filter keys ","filter with_indifferent_access ","filter [] [] == ","filter [] [] ","filter [] is_a? "," class new  permit ","filter with_indifferent_access  [] "," class new  respond_to? "," class new  is_a? "," each_ class new  "," array_of_permitted_scalars_filter with_indifferent_access  ","filter with_indifferent_access  [] == ","filter with_indifferent_access  keys ","filter with_indifferent_access  with_indifferent_access ","filter with_indifferent_access  [] [] == ","filter with_indifferent_access  [] [] ","filter with_indifferent_access  [] is_a? "]}," ActionController Parameters array_of_permitted_scalars_filter":{"type":"method","name":"array_of_permitted_scalars_filter","children":[],"call":["params []= "," [] "," array_of_permitted_scalars? "," has_key? ","hash [] ","hash has_key? "]}," ActionController Parameters permitted_scalar_filter":{"type":"method","name":"permitted_scalar_filter","children":[],"call":["params []= "," [] "," permitted_scalar? "," keys grep each "," keys grep ","Regexp  escape ","key to_s "," keys "," has_key? "]}," ActionController Parameters array_of_permitted_scalars?":{"type":"method","name":"array_of_permitted_scalars?","children":[],"call":[" permitted_scalar? ","value all? ","value is_a? "]}," ActionController Parameters permitted_scalar?":{"type":"method","name":"permitted_scalar?","children":[],"call":["value is_a? ","PERMITTED_SCALAR_TYPES  any? "]}," ActionController UnpermittedParameters initialize":{"type":"method","name":"initialize","children":[],"call":["params join "]}," StrongParameters LogSubscriber logger":{"type":"method","name":"logger","children":[],"call":["ActionController Base  logger "]}," StrongParameters LogSubscriber unpermitted_parameters":{"type":"method","name":"unpermitted_parameters","children":[],"call":[" debug ","unpermitted_keys join ","event payload [] ","event payload ","event payload []  join "]}," ActionController Parameters fields_for_style?":{"type":"method","name":"fields_for_style?","children":[],"call":["v is_a? ","k =~ ","object all? ","object is_a? "]}," ActionController Parameters convert_value_to_parameters":{"type":"method","name":"convert_value_to_parameters","children":[],"call":[" class new "," class ","value is_a? ! ","value is_a? "," convert_value_to_parameters ","value map "]}}