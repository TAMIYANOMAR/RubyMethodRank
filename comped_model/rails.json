{" DispatchServlet handle_dispatch":{"type":"method","name":"handle_dispatch","children":[],"call":[" p ","err backtrace ","res body= ","res []= ","val join ","header each ","header delete ","res status= ","1 to_i ","header [] [] ","header [] ","WEBrick HTTPUtils  parse_header ","data split ","$stdout read ","$stdout rewind "," load ","File  join ","@server_options [] ","CGI  send "," require ","StringIO  new ","req body ","env []= ","req request_uri query ","req request_uri ","req meta_vars clone ","req meta_vars ","res cookies concat ","res cookies ","env delete "," assign_status "," extract_header_and_body ","Dispatcher  dispatch ","CGI  new "," create_env_table "," set_charset ","ruby read ","ruby close_write ","ruby puts ","dispatch_rb_path inspect ","(or\n  (send\n    (lvar :req) :body)\n  (str \"\")) inspect ","env inspect ","IO  popen ","File  expand_path ","Config CONFIG  [] ","(str \"^/dispatch\\\\.(?:cgi|rb|fcgi)$\") match ","req request_uri path ","WEBrick HTTPUtils  parse_header  each ","WEBrick HTTPUtils  parse_header  delete ","WEBrick HTTPUtils  parse_header  [] [] ","WEBrick HTTPUtils  parse_header  [] ","WEBrick HTTPUtils  parse_WEBrick HTTPUtils  parse_header  ","$stdout read  split ","StringIO  new  split ","ruby read  split ","req meta_vars clone  []= ","req meta_vars clone  delete "," extract_WEBrick HTTPUtils  parse_header _and_body "," create_req meta_vars clone _table ","File  expand_path  inspect ","req meta_vars clone  inspect "]}," DispatchServlet remove_dot_html":{"type":"method","name":"remove_dot_html","children":[],"call":["req instance_variable_set ","req path != ","req path "]}," DispatchServlet add_dot_html":{"type":"method","name":"add_dot_html","children":[],"call":["req instance_variable_set ","req path != ","req path "]}," DispatchServlet handle_file":{"type":"method","name":"handle_file","children":[],"call":[" remove_dot_html ","res set_error ","@file_handler send "," add_dot_html ","req instance_variable_set ","path gsub! ","path << ","path != ","req path dup ","req path ","req dup "," p ","req dup  instance_variable_set ","req path dup  gsub! ","req path dup  << ","req path dup  != ","req req path dup  dup ","req dup  path dup ","req req path dup  ","req dup  path ","req dup  dup "]}," DispatchServlet do_GET":{"type":"method","name":"do_GET","children":[],"call":["REQUEST_MUTEX  unlock ","REQUEST_MUTEX  locked? "," raise ","req path "," handle_dispatch ","REQUEST_MUTEX  lock "," handle_file "," handle_mapped "," handle_index "]}," DispatchServlet initialize":{"type":"method","name":"initialize","children":[],"call":["WEBrick HTTPServlet FileHandler  new ","options [] ","Dir  chdir ","OPTIONS  [] ","File  directory? "]}," DispatchServlet dispatch":{"type":"method","name":"dispatch","children":[],"call":[]}," Rails Generator Spec lookup_class":{"type":"method","name":"lookup_class","children":[],"call":[" raise "," class_file "," class_name ","obj name split last == ","obj name split last ","obj name split ","obj name ","obj ancestors include? ","obj ancestors ","ObjectSpace  each_object "]}," Rails Generator Spec class_name":{"type":"method","name":"class_name","children":[],"call":[" name camelize "," name "]}," Rails Generator Spec class_file":{"type":"method","name":"class_file","children":[],"call":[" name "," path "]}," Rails Generator Spec klass":{"type":"method","name":"klass","children":[],"call":["@klass spec= "," lookup_class "," require "," class_file "," lookup_class  spec= "]}," Rails Generator Spec initialize":{"type":"method","name":"initialize","children":[],"call":[]}," Rails Generator SimpleLogger method_missing":{"type":"method","name":"method_missing","children":[],"call":[" log ","args first ","method to_s "]}," Rails Generator SimpleLogger outdent":{"type":"method","name":"outdent","children":[],"call":[" indent "," block call "," block "," block_given? "]}," Rails Generator SimpleLogger indent":{"type":"method","name":"indent","children":[],"call":[" outdent ","block call "," block_given? "]}," Rails Generator SimpleLogger log":{"type":"method","name":"log","children":[],"call":[" indent "," block_given? ","@out print ","%12s  %s%s\n % ","   * "," quiet "]}," Rails Generator SimpleLogger initialize":{"type":"method","name":"initialize","children":[],"call":[]}," Rails Generator Scripts Base usage_message":{"type":"method","name":"usage_message","children":[],"call":["usage << ","File  expand_path ","Object  const_defined? ","Dir  user_home ","names join ","names empty? ","source names ","source label to_s capitalize ","source label to_s ","source label ","Rails Generator Base  sources each ","Rails Generator Base  sources ","(send\n  (send\n    (const\n      (const\n        (const nil :Rails) :Generator) :Base) :sources) :inject\n  (hash)) each_pair ","mem [] ","Rails Generator Base  sources inject ","(send\n  (send\n    (const\n      (const\n        (const nil :Rails) :Generator) :Base) :sources) :inject\n  (array)) each ","pair [] ","mem << ","pair nil? ","mem assoc ","source names  join ","source names  empty? ","source source names  ","source source label to_s capitalize  to_s capitalize ","source source label to_s capitalize  to_s ","source source label to_s capitalize  ","(send\n  (send\n    (const\n      (const\n        (const nil :Rails) :Generator) :Base) :sources) :inject\n  (hash)) each_mem assoc  ","mem assoc  [] ","mem assoc  nil? "]}," Rails Generator Scripts Base banner":{"type":"method","name":"banner","children":[],"call":[]}," Rails Generator Scripts Base run":{"type":"method","name":"run","children":[],"call":[" raise "," puts ","e backtrace join ","e backtrace "," options [] "," options ","Rails Generator Base  instance command invoke! ","Rails Generator Base  instance command ","Rails Generator Base  instance ","args shift "," usage ","args empty? "," parse! ","args dup "]}," Scripts Update banner":{"type":"method","name":"banner","children":[],"call":[]}," Rails Generator Manifest send_actions":{"type":"method","name":"send_actions","children":[],"call":["target send ","actions each "]}," Rails Generator Manifest erase":{"type":"method","name":"erase","children":[],"call":[]}," Rails Generator Manifest rewind":{"type":"method","name":"rewind","children":[],"call":[" send_actions ","@actions reverse "]}," Rails Generator Manifest replay":{"type":"method","name":"replay","children":[],"call":[" send_actions "]}," Rails Generator Manifest method_missing":{"type":"method","name":"method_missing","children":[],"call":["@actions << "]}," Rails Generator Manifest initialize":{"type":"method","name":"initialize","children":[],"call":[" block_given? "]}," Rails Generator GemSource each":{"type":"method","name":"each","children":[],"call":["Spec  new "," label ","gem full_gem_path ","gem name sub ","gem name ","(send\n  (send\n    (send\n      (const nil :Gem) :cache) :search\n    (regexp\n      (str \"_generator$\")\n      (regopt))) :inject\n  (hash)) values each ","(send\n  (send\n    (send\n      (const nil :Gem) :cache) :search\n    (regexp\n      (str \"_generator$\")\n      (regopt))) :inject\n  (hash)) values ","latest []= ","gem version > ","hem version ","gem version ","hem nil? ","latest [] ","Gem  cache search inject ","Gem  cache search ","Gem  cache ","latest []  version ","latest []  nil? "]}," Rails Generator GemSource initialize":{"type":"method","name":"initialize","children":[],"call":[]}," Rails Generator PathSource each":{"type":"method","name":"each","children":[],"call":["Spec  new "," label ","File  basename ","File  directory? ","Dir  [] each ","Dir  [] "," path "]}," Rails Generator PathSource initialize":{"type":"method","name":"initialize","children":[],"call":[]}," Rails Generator Source names":{"type":"method","name":"names","children":[],"call":["(send nil :map) sort ","spec name "," map "]}," Rails Generator Source each":{"type":"method","name":"each","children":[],"call":[" raise "]}," Rails Generator Source initialize":{"type":"method","name":"initialize","children":[],"call":[]}," Rails Generator Lookup ClassMethods invalidate_cache!":{"type":"method","name":"invalidate_cache!","children":[],"call":[]}," Rails Generator Lookup ClassMethods cache":{"type":"method","name":"cache","children":[],"call":["cache + ","source map "," sources inject "," sources ","source to_a "]}," Rails Generator Lookup ClassMethods instance":{"type":"method","name":"instance","children":[],"call":[" lookup klass new "," full_options "," lookup klass "," lookup "]}," Rails Generator Lookup ClassMethods lookup":{"type":"method","name":"lookup","children":[],"call":[" raise ","spec name == ","spec name "," cache find "," cache ","@found [] ","generator_name to_s downcase ","generator_name to_s ","(send\n  (lvar :gns) :map) join ","sp name ","gns map ","gns length > ","gns length ","gns first ","gns length == ","spec name =~ "," cache select ","generator_name scan map ","generator_name scan ","generator_name to_s downcase  to_s downcase ","generator_name to_s downcase  to_s ","generator_name to_s downcase  scan map ","generator_name to_s downcase  scan "]}," Rails Generator Lookup ClassMethods use_component_sources!":{"type":"method","name":"use_component_sources!","children":[],"call":[" sources << ","PathSource  new ","File  dirname "," sources ","GemSource  new ","Object  const_defined? ","Dir  user_home "," reset_sources ","GemPathSource  new ","GemGeneratorSource  new ","Pathname  new relative_path_from ","Pathname  new ","File  expand_path ","Rails  configuration plugin_paths each ","Rails  configuration plugin_paths ","Rails  configuration ","Pathname  new Pathname  new relative_path_from _from "]}," Rails Generator Lookup ClassMethods use_application_sources!":{"type":"method","name":"use_application_sources!","children":[],"call":[" sources << ","PathSource  new ","File  dirname "," sources "," reset_sources "]}," Rails Generator Lookup ClassMethods reset_sources":{"type":"method","name":"reset_sources","children":[],"call":[" invalidate_cache! "," write_inheritable_attribute "]}," Rails Generator Lookup ClassMethods prepend_sources":{"type":"method","name":"prepend_sources","children":[],"call":[" invalidate_cache! "," write_inheritable_array ","args flatten + "," sources ","args flatten "]}," Rails Generator Lookup ClassMethods append_sources":{"type":"method","name":"append_sources","children":[],"call":[" invalidate_cache! "," sources concat ","args flatten "," sources "]}," Rails Generator Lookup ClassMethods sources":{"type":"method","name":"sources","children":[],"call":[" use_component_sources! "," read_inheritable_attribute "]}," Rails Generator Lookup instance":{"type":"method","name":"instance","children":[],"call":[" class instance "," class "]}," Rails Generator Lookup append_features":{"type":"method","name":"append_features","children":[],"call":[]}," user_home":{"type":"method","name":"user_home","children":[],"call":[]}," Object lookup_missing_generator":{"type":"method","name":"lookup_missing_generator","children":[],"call":[" const_missing_before_generators ","Rails Generator Base  lookup klass ","Rails Generator Base  lookup ","md captures first demodulize underscore ","md captures first demodulize ","md captures first ","md captures ","(str \"(.+)Generator$\") match ","class_id to_s ","(str \"(.+)Generator$\") match  captures first demodulize underscore ","(str \"(.+)Generator$\") match  captures first demodulize ","(str \"(.+)Generator$\") match  captures first ","(str \"(.+)Generator$\") match  captures "]}," ScaffoldGenerator model_instance":{"type":"method","name":"model_instance","children":[],"call":[" class_name constantize new "," class_name constantize "," class_name ","base const_set ","Class  new ","base const_defined? ","Module  new ","base const_get "," class_nesting split inject "," class_nesting split "," class_nesting "]}," ScaffoldGenerator create_sandbox":{"type":"method","name":"create_sandbox","children":[],"call":["sandbox suffix= "," suffix "," raise "," logger error "," class_name "," logger ","sandbox instance_variable_set ","sandbox model_instance "," singular_name ","sandbox model_instance= "," model_instance ","sandbox singular_name= ","sandbox form_action= ","action == ","ScaffoldingSandbox  new "," class_name tableize ","ScaffoldingSandbox  new  suffix= ","ScaffoldingSandbox  new  instance_variable_set ","ScaffoldingSandbox  new  model_instance ","ScaffoldingSandbox  new  model_instance= ","ScaffoldingSandbox  new  singular_name= ","ScaffoldingSandbox  new  form_action= "]}," ScaffoldGenerator suffix":{"type":"method","name":"suffix","children":[],"call":[" singular_name "," options [] "," options "]}," ScaffoldGenerator unscaffolded_actions":{"type":"method","name":"unscaffolded_actions","children":[],"call":[" args - "," scaffold_actions "," args "]}," ScaffoldGenerator scaffold_actions":{"type":"method","name":"scaffold_actions","children":[],"call":[" scaffold_views + "," scaffold_views "]}," ScaffoldGenerator scaffold_forms":{"type":"method","name":"scaffold_forms","children":[],"call":[]}," ScaffoldGenerator scaffold_views":{"type":"method","name":"scaffold_views","children":[],"call":[]}," ScaffoldGenerator banner":{"type":"method","name":"banner","children":[],"call":[]}," ScaffoldGenerator manifest":{"type":"method","name":"manifest","children":[],"call":["m template ","File  join "," controller_file_name "," controller_class_path "," unscaffolded_actions each "," unscaffolded_actions ","m complex_template "," singular_name "," create_sandbox "," lambda "," scaffold_forms each "," scaffold_forms "," scaffold_views each "," scaffold_views ","m directory ","m class_collisions "," controller_class_name ","m dependency "," record ","m route_resources ","(send nil :name) + "," name "," class_path "," class_name "," controller_class_File  join  "," class_File  join  "]}," ScaffoldGenerator initialize":{"type":"method","name":"initialize","children":[],"call":["@controller_class_nesting empty? "," inflect_names "," extract_modules ","@name pluralize "," args shift "," args ","ActiveRecord Base  pluralize_table_names ","base_name singularize ","@name singularize "," logger warning "," logger "," options [] ! "," options [] "," options ","@name == "," assign_names! ","@name singularize  pluralize ","@name singularize  singularize ","@name singularize  == "]}," InstanceTag to_datetime_select_tag":{"type":"method","name":"to_datetime_select_tag","children":[],"call":[",  + ","options inspect ","options empty? "]}," InstanceTag to_date_select_tag":{"type":"method","name":"to_date_select_tag","children":[],"call":[",  + ","options inspect ","options empty? "]}," InstanceTag to_text_area_tag":{"type":"method","name":"to_text_area_tag","children":[],"call":[",  + ","options inspect ","options empty? "]}," InstanceTag to_input_field_tag":{"type":"method","name":"to_input_field_tag","children":[],"call":[",  + ","options inspect ","options empty? "]}," ScaffoldingSandbox sandbox_binding":{"type":"method","name":"sandbox_binding","children":[],"call":[" binding "]}," ModelGenerator manifest":{"type":"method","name":"manifest","children":[],"call":["m template ","File  join "," table_name "," class_path "," file_name ","m directory ","m class_collisions "," class_name "," record "," singular_name "," plural_name ","ActiveRecord Base  pluralize_table_names ","m migration_template "," file_path gsub pluralize "," file_path gsub "," file_path "," class_name pluralize gsub "," class_name pluralize "," options [] "," options ","migration_name gsub ","migration_file_path pluralize ","migration_name pluralize ","migration_name pluralize  gsub "," class_name  gsub ","migration_file_path pluralize  pluralize "," file_path gsub  pluralize ","migration_name pluralize  pluralize "," class_name  pluralize "]}," MailerGenerator manifest":{"type":"method","name":"manifest","children":[],"call":["m template ","File  join "," table_name "," class_path "," file_name "," actions each "," actions ","m directory ","m class_collisions "," class_name "," record "," file_path "]}," ControllerGenerator manifest":{"type":"method","name":"manifest","children":[],"call":["m template ","File  join "," file_name "," class_path "," actions each "," actions ","m directory ","m class_collisions "," class_name "," record "," class_File  join  "]}," Rails Generator Commands Update directory":{"type":"method","name":"directory","children":[],"call":[]}," Rails Generator Commands Update complex_template":{"type":"method","name":"complex_template","children":[],"call":["file write ","File  open ","source_to_update gsub! "," render_template_part ","Regexp  quote "," template_part_mark ","template_options [] "," logger refreshing ","template_options [] gsub "," logger "," logger missing ","File  readlines join ","File  readlines "," destination_path ","File  readlines join  gsub! "]}," Rails Generator Commands Update template":{"type":"method","name":"template","children":[],"call":[]}," Rails Generator Commands Update file":{"type":"method","name":"file","children":[],"call":[]}," Rails Generator Commands List readme":{"type":"method","name":"readme","children":[],"call":[" logger readme ","args join "," logger "]}," Rails Generator Commands List directory":{"type":"method","name":"directory","children":[],"call":[" logger directory "," destination_path "," logger "]}," Rails Generator Commands List complex_template":{"type":"method","name":"complex_template","children":[],"call":[" logger template ","options [] "," logger "]}," Rails Generator Commands List template":{"type":"method","name":"template","children":[],"call":[" logger template "," logger "]}," Rails Generator Commands List file":{"type":"method","name":"file","children":[],"call":[" logger file "," logger "]}," Rails Generator Commands List class_collisions":{"type":"method","name":"class_collisions","children":[],"call":[" logger class_collisions ","class_names join "," logger "]}," Rails Generator Commands List dependency":{"type":"method","name":"dependency","children":[],"call":[" logger dependency ","options inspect ","args join "," logger "]}," Rails Generator Commands Destroy complex_template":{"type":"method","name":"complex_template","children":[],"call":[]}," Rails Generator Commands Destroy directory":{"type":"method","name":"directory","children":[],"call":["parts pop "," logger missing "," logger "," logger notempty ","FileUtils  rmdir "," options [] "," options "," logger rmdir ","Dir  [] empty? ","Dir  [] ","File  join ","File  exists? "," destination_path ","parts empty? ","relative_path split "," system "," options [] [] ","File  exist? ","relative_path split  pop "," destination_ destination_path  ","relative_path split  empty? ","relative_ destination_path  split "]}," Rails Generator Commands Destroy file":{"type":"method","name":"file","children":[],"call":[" logger missing "," logger ","FileUtils  rm ","options [] "," logger rm ","File  exists? "," destination_path "," system "," options [] [] "," options [] "," options ","File  exist? "," options [] [] [] ","  destination_path _path "]}," Rails Generator Commands Create find_synonyms":{"type":"method","name":"find_synonyms","children":[],"call":["data scan ","stream read gsub gsub ","stream read gsub ","stream read "," open ","SYNONYM_LOOKUP_URI  % "," timeout "," require ","stream read gsub scan uniq ","stream read gsub scan ","stream read gsub gsub  scan ","stream read gsub scan uniq  scan "]}," Rails Generator Commands Create raise_class_collision":{"type":"method","name":"raise_class_collision","children":[],"call":[" raise ","message << ","suggest join "," find_synonyms ","suggest any? "," find_synonyms  join "," find_synonyms  any? "]}," Rails Generator Commands Create readme":{"type":"method","name":"readme","children":[],"call":[" puts ","File  read "," source_path "," options [] "," options "," logger readme "," logger ","relative_sources flatten each ","relative_sources flatten "]}," Rails Generator Commands Create directory":{"type":"method","name":"directory","children":[],"call":["FileUtils  mkdir_p "," options [] "," options "," logger create "," logger "," logger exists ","File  exists? "," destination_path "," system ","File  directory? ","File  join ","stack reverse_each ","stack push ","File  dirname ","stack last ","File  dirname == ","File  exist? "," destination_ destination_path  "]}," Rails Generator Commands Create complex_template":{"type":"method","name":"complex_template","children":[],"call":[" template ","options [] []= "," render_template_part ","options [] ","template_options dup ","template_options dup  [] []= ","template_options dup  [] ","template_template_options dup  dup "]}," Rails Generator Commands Create template":{"type":"method","name":"template","children":[],"call":["ERB  new result ","ERB  new ","file read "," eval ","vars each "," binding ","template_options [] "," file ","  binding inding "]}," Rails Generator Commands Create file":{"type":"method","name":"file","children":[],"call":["FileUtils  chmod ","file_options [] ","df write ","sf read ","df puts ","line !~ ","sf gets "," block_given? ","File  open "," options [] "," options "," logger create "," logger "," raise "," logger skip "," logger force "," options [] inspect "," force_file_collision? "," options [] to_sym ","File  exists? "," destination_path "," source_path "," system "," logger identical "," identical? ","(or\n  (send\n    (lvar :file_options) :[]\n    (sym :collision))\n  (send\n    (send nil :options) :[]\n    (sym :collision))) to_sym ","dest write "," render_file ","File  exist? ","sf gets  !~ ","  destination_path _path ","  source_path _path "]}," Rails Generator Commands Create class_collisions":{"type":"method","name":"class_collisions","children":[],"call":[" raise_class_collision ","last const_defined? ","name camelize ","last const_get ","nesting inject ","nesting pop ","class_name split ","class_name strip empty? ","class_name strip ","class_name to_s ","class_names flatten each ","class_names flatten ","last_class const_defined? ","last_class const_get ","class_names shift ","extra << ","Object  method arity == ","Object  method arity ","Object  method ","nesting pop  camelize ","class_name split  inject ","class_name split  pop ","class_nesting pop  split ","class_name to_s  split ","class_nesting pop  strip empty? ","class_name to_s  strip empty? ","class_nesting pop  strip ","class_name to_s  strip ","class_nesting pop  to_s ","class_name to_s  to_s ","class_nesting pop s flatten each ","class_name to_s s flatten each ","class_nesting pop s flatten ","class_name to_s s flatten ","last_class const_get  const_defined? ","last_class const_get  const_get ","class_nesting pop s shift ","class_name to_s s shift "]}," Rails Generator Commands RewindBase invoke!":{"type":"method","name":"invoke!","children":[],"call":[" manifest rewind "," manifest "]}," Rails Generator Commands Base template_part_mark":{"type":"method","name":"template_part_mark","children":[],"call":[]}," Rails Generator Commands Base render_template_part":{"type":"method","name":"render_template_part","children":[],"call":["begin_mark + + ","begin_mark + "," template_part_mark ","template_options [] ","ERB  new result ","ERB  new ","File  readlines join ","File  readlines "," source_path ","template_options [] call sandbox_binding ","template_options [] call "," template_part_mark  + + "," template_part_mark  + "]}," Rails Generator Commands Base force_file_collision?":{"type":"method","name":"force_file_collision?","children":[],"call":[" raise ","$stdout puts "," spec name "," spec "," options []= "," options ","$stdin gets ","$stdout print "," puts ","temp path "," diff_cmd ","temp rewind ","temp write "," render_file ","Tempfile  open ","File  dirname ","File  basename ","$stdin gets chomp "]}," Rails Generator Commands Base readme":{"type":"method","name":"readme","children":[],"call":[]}," Rails Generator Commands Base class_collisions":{"type":"method","name":"class_collisions","children":[],"call":[]}," Rails Generator Commands Base dependency":{"type":"method","name":"dependency","children":[],"call":[" class new invoke! "," class new "," instance "," full_options "," class "," logger dependency "," logger "]}," Rails Generator Commands Base invoke!":{"type":"method","name":"invoke!","children":[],"call":[" manifest replay "," manifest "," after_generate "]}," Rails Generator Commands append_features":{"type":"method","name":"append_features","children":[],"call":[]}," Rails Generator Commands instance":{"type":"method","name":"instance","children":[],"call":[]}," Rails Generator NamedBase inflect_names":{"type":"method","name":"inflect_names","children":[],"call":["under pluralize ","camel underscore ","name camelize ","under under pluralize ize ","camel underscore  pluralize ","camel camel underscore score ","name camelize  underscore ","name name camelize ize "]}," Rails Generator NamedBase extract_modules":{"type":"method","name":"extract_modules","children":[],"call":["modules size ","(send\n  (lvar :modules) :map) join ","m camelize ","modules map ","(send\n  (lvar :path) :+\n  (array\n    (send\n      (lvar :name) :underscore))) join ","path + ","name underscore ","m underscore ","modules pop ","name split ","name include? ","name split  size ","(send\n  (lvar :name split ) :map) join ","name split  map ","(send\n  (lvar :path) :+\n  (array\n    (send\n      (lvar :modules pop ) :underscore))) join ","modules pop  underscore ","name split  pop ","modules pop  split ","modules pop  include? "]}," Rails Generator NamedBase assign_names!":{"type":"method","name":"assign_names!","children":[],"call":["@class_nesting empty? "," inflect_names "," extract_modules "," singular_name "," plural_name ","ActiveRecord Base  pluralize_table_names ","@class_nesting underscore << << ","@class_nesting underscore << ","@class_nesting underscore ","@table_name gsub! ","(const\n  (const nil :ActiveRecord) :Base) ! "," singular_name  gsub! "," plural_name  gsub! ","@class_nesting underscore << <<  gsub! "]}," Rails Generator NamedBase banner":{"type":"method","name":"banner","children":[],"call":[" spec name camelize "," spec name "," spec "]}," Rails Generator NamedBase initialize":{"type":"method","name":"initialize","children":[],"call":[" assign_names! ","@args shift ","runtime_args dup "," usage ","runtime_args empty? ","runtime_args dup  shift "]}," Rails Generator Base usage_message":{"type":"method","name":"usage_message","children":[],"call":["File  read ","File  join "," spec path "," spec "]}," Rails Generator Base banner":{"type":"method","name":"banner","children":[],"call":[" spec name "," spec "]}," Rails Generator Base record":{"type":"method","name":"record","children":[],"call":["Rails Generator Manifest  new "]}," Rails Generator Base destination_path":{"type":"method","name":"destination_path","children":[],"call":["File  join "," destination_root "]}," Rails Generator Base source_path":{"type":"method","name":"source_path","children":[],"call":["File  join "," class lookup path "," class lookup "," class "," source_root ","path nil? ","relative_source split "]}," Rails Generator Base manifest":{"type":"method","name":"manifest","children":[],"call":[" raise "," spec name "," spec "]}," Rails Generator Base initialize":{"type":"method","name":"initialize","children":[],"call":[" usage "," options [] "," options "," logger quiet= "," logger ","File  join "," spec path "," spec "," parse! "," extract_options! "," inflect_names ","args shift ","args dup ","args empty? "]}," Dispatcher reset_application":{"type":"method","name":"reset_application","children":[],"call":["Breakpoint  deactivate_drb ","Dependencies  remove_subclasses_for ","Dependencies  clear ","Controllers  clear! ","Dependencies  load? "," remove_class_hierarchy "," controller_class ","ActiveRecord Base  reset_column_information_and_inheritable_attributes_for_all_subclasses "]}," Dispatcher prepare_application":{"type":"method","name":"prepare_application","children":[],"call":["Controllers  const_load! ","Controllers  const_defined? ","Breakpoint  activate_drb ","(const nil :FastCGI) ! ","ActionController Routing Routes  reload ","Dependencies  load? "," prepare_breakpoint ","ActiveRecord Base  verify_active_connections! "," require_dependency ","Object  const_defined? "," run_preparation_callbacks "," preparation_callbacks_run= "]}," Dispatcher dispatch":{"type":"method","name":"dispatch","children":[],"call":[" reset_application ","ActionController Base  process_with_exception out ","ActionController Base  process_with_exception ","ActionController Routing Routes  recognize! process out ","ActionController Routing Routes  recognize! process ","ActionController Routing Routes  recognize! "," prepare_application ","ActionController CgiResponse  new ","ActionController CgiRequest  new "," reset_after_dispatch "," failsafe_response "," new_cgi ","CGI  new ","Breakpoint  deactivate_drb ","Dependencies  mechanism == ","Dependencies  mechanism "," controller_class process out "," controller_class process "," controller_class "," require_dependency "," controller_path "," module_name ","request parameters "," controller_name ","Breakpoint  activate_drb ","(const nil :FastCGI) ! ","Dependencies  load? "," require_or_load ","controller process_with_exception out ","controller process_with_exception ","controller process out ","controller process ","ActionController Routing Routes  recognize "," failsafe_ActionController CgiResponse  new  "," ActionController Routing Routes  recognize _class process out "," ActionController Routing Routes  recognize _class process "," ActionController Routing Routes  recognize _class "," ActionController Routing Routes  recognize _path ","ActionController CgiRequest  new  parameters "," ActionController Routing Routes  recognize _name ","ActionController Routing Routes  recognize  process_with_exception out ","ActionController Routing Routes  recognize  process_with_exception ","ActionController Routing Routes  recognize  process out ","ActionController Routing Routes  recognize  process "]}," CodeStatistics print_code_test_stats":{"type":"method","name":"print_code_test_stats","children":[],"call":[" puts "," sprintf ","tests to_f / ","tests to_f "," calculate_tests "," calculate_code ","code / "," calculate_tests  to_f / "," calculate_tests  to_f "," calculate_ calculate_tests  "," calculate_ calculate_code  "," calculate_code  / "]}," CodeStatistics print_line":{"type":"method","name":"print_line","children":[],"call":[" puts ","start + + + + + + ","loc_over_m to_s rjust ","loc_over_m to_s ","start + + + + + ","m_over_c to_s rjust ","m_over_c to_s ","start + + + + ","statistics [] to_s rjust ","statistics [] to_s ","statistics [] ","start + + + ","start + + ","start + ","name ljust ","(str \"Units\") include? ","(send\n  (send\n    (lvar :statistics) :[]\n    (str \"codelines\")) :/\n  (send\n    (lvar :statistics) :[]\n    (str \"methods\"))) - ","statistics [] / ","TEST_TYPES  include? ","(str \"| \") + + + + + + ","(str \"| \") + + + + + ","(str \"| \") + + + + ","(str \"| \") + + + ","(str \"| \") + + ","(str \"| \") + "]}," CodeStatistics print_splitter":{"type":"method","name":"print_splitter","children":[],"call":[" puts "]}," CodeStatistics print_header":{"type":"method","name":"print_header","children":[],"call":[" print_splitter "," puts "]}," CodeStatistics calculate_tests":{"type":"method","name":"calculate_tests","children":[],"call":["v [] ","(str \"Units\") include? ","@statistics each ","TEST_TYPES  include? "]}," CodeStatistics calculate_code":{"type":"method","name":"calculate_code","children":[],"call":["v [] ","(str \"Units\") include? ","@statistics each ","TEST_TYPES  include? "]}," CodeStatistics calculate_total":{"type":"method","name":"calculate_total","children":[],"call":["total [] ","pair each ","@statistics each_value "]}," CodeStatistics calculate_directory_statistics":{"type":"method","name":"calculate_directory_statistics","children":[],"call":["stats [] ","line =~ ","f gets ","File  open ","directory + + ","directory + ","file_name =~ ","newstats [] ","stats each "," calculate_directory_statistics ","(str \"^\\\\.\") !~ ","File  stat directory? ","File  stat ","Dir  foreach ","f gets  =~ ","File  open  gets ","File  open ile_name =~ "," calculate_directory_statistics  [] ","Dir  File  open oreach "]}," CodeStatistics calculate_statistics":{"type":"method","name":"calculate_statistics","children":[],"call":["stats []= "," calculate_directory_statistics ","pair last ","pair first ","@pairs inject "]}," CodeStatistics to_s":{"type":"method","name":"to_s","children":[],"call":[" print_code_test_stats "," print_splitter "," print_line ","@statistics [] ","pair first ","@pairs each "," print_header ","@statistics each "]}," CodeStatistics initialize":{"type":"method","name":"initialize","children":[],"call":[" calculate_total ","pairs length > ","pairs length "," calculate_statistics "]}," assert":{"type":"method","name":"assert","children":[],"call":["Breakpoint  assert ","Binding  of_caller "]}," breakpoint":{"type":"method","name":"breakpoint","children":[],"call":["Breakpoint  breakpoint ","Binding  of_caller "]}," IRB InputCompletor eval":{"type":"method","name":"eval","children":[],"call":[]}," IRB WorkSpace evaluate":{"type":"method","name":"evaluate","children":[],"call":[" old_evaluate ","result extend ","(true) include? ! ","(true) include? ","args [] != ","args [] ","Breakpoint  use_drb? "," old_evaluate  extend "]}," IRB Context evaluate":{"type":"method","name":"evaluate","children":[],"call":[" old_evaluate "," exit ","line chomp == ","line chomp "]}," IRB parse_opts":{"type":"method","name":"parse_opts","children":[],"call":[]}," IRB CurrentContext":{"type":"method","name":"CurrentContext","children":[{"type":"method","name":"last_value","children":[],"asgn":[],"call":[]}],"call":[]}," IRB start":{"type":"method","name":"start","children":[],"call":[]}," Breakpoint use_drb?":{"type":"method","name":"use_drb?","children":[],"call":["@use_drb == "]}," Breakpoint deactivate_drb":{"type":"method","name":"deactivate_drb","children":[],"call":["@service stop_service ","@service nil? "]}," Breakpoint activate_drb":{"type":"method","name":"activate_drb","children":[],"call":[" sleep ","DRbObject  new collision ","DRbObject  new ","DRb  start_service ","DRbService  new ","DRb  install_acl ","ACL  new "," Array each "," Array "]}," Breakpoint DRbService add_breakpoint":{"type":"method","name":"add_breakpoint","children":[],"call":["@handler call ","@handler untaint "," sleep ","workspace extend ","IRB WorkSpace  new ","IRB WorkSpace  new  extend "]}," Breakpoint DRbService ping":{"type":"method","name":"ping","children":[],"call":[]}," Breakpoint DRbService collision":{"type":"method","name":"collision","children":[],"call":["@collision_handler call ","@collision_handler untaint "," sleep "]}," Breakpoint DRbService initialize":{"type":"method","name":"initialize","children":[],"call":["IRB  run_config ","@CONF []= ","IRB  instance_eval "]}," Breakpoint assert":{"type":"method","name":"assert","children":[],"call":[" handle_breakpoint ","Binding  of_caller "," raise ","$DEBUG ! ","Breakpoint  asserts_cause_exceptions ","callstack first match captures ","callstack first match ","callstack first ","callstack slice! ","callstack first [] "," caller ","Breakpoint  optimize_asserts "," caller  first match captures "," caller  first match "," caller  first "," caller  slice! "," caller  first [] "]}," Breakpoint handle_breakpoint":{"type":"method","name":"handle_breakpoint","children":[],"call":["block call ","@drb_service add_breakpoint ","IRB  start ","IRB WorkSpace  new "," puts "," use_drb? ! "," use_drb? "," eval ","file inspect "," catch "]}," Breakpoint CommandBundle client":{"type":"method","name":"client","children":[],"call":["Client  new "," eval "," lambda ","Breakpoint  drb_service eval_handler ","Breakpoint  drb_service "," sleep ","Breakpoint  use_drb? "]}," Breakpoint CommandBundle source_lines":{"type":"method","name":"source_lines","children":[],"call":["lines [] ","end_line - ","start_line - ","break_line + ","(send\n  (lvar :break_line) :-\n  (lvar :context)) max ","break_line - ","line chomp ","File  readlines map ","File  readlines ","break_line +  - ","(send\n  (lvar :break_line) :-\n  (lvar :context)) max  - "]}," Breakpoint CommandBundle Client method_missing":{"type":"method","name":"method_missing","children":[],"call":["remote call_with_block "," eval ","block ! ","args empty? ","result extend ","(true) include? ","Marshal  dump inspect ","Marshal  dump "," eval  call_with_block "," eval  extend "]}," Breakpoint CommandBundle Client eval":{"type":"method","name":"eval","children":[],"call":["@eval_handler call "]}," Breakpoint CommandBundle Client initialize":{"type":"method","name":"initialize","children":[],"call":["eval_handler untaint "]}," Breakpoint breakpoint":{"type":"method","name":"breakpoint","children":[],"call":[" handle_breakpoint ","Binding  of_caller ","Executing break point  + + + ","Executing break point  + + ","Executing break point  + ","id inspect ","callstack first match captures ","callstack first match ","callstack first ","callstack slice! ","callstack first [] "," caller "," caller  first match captures "," caller  first match "," caller  first "," caller  slice! "," caller  first [] "]}," of_caller":{"type":"method","name":"of_caller","children":[],"call":[]}," create":{"type":"method","name":"create","children":[],"call":[]}," WebServiceGenerator manifest":{"type":"method","name":"manifest","children":[],"call":["m template ","File  join "," file_name "," class_path ","m directory ","m class_collisions "," class_name "," record "]}," ScaffoldGenerator model_name":{"type":"method","name":"model_name","children":[],"call":[" class_name demodulize "," class_name "]}," ScaffoldingSandbox default_input_block":{"type":"method","name":"default_input_block","children":[],"call":[" input ","column name ","column human_name ","Proc  new "]}," DispatchServlet service":{"type":"method","name":"service","children":[],"call":["REQUEST_MUTEX  unlock ","REQUEST_MUTEX  locked? "," raise ","req path "," handle_dispatch ","REQUEST_MUTEX  lock "," handle_file ","ActionController Base  allow_concurrency "]}," DispatchServlet assign_status":{"type":"method","name":"assign_status","children":[],"call":["header delete ","res status= ","1 to_i ","header [] [] ","header [] "]}," DispatchServlet extract_header_and_body":{"type":"method","name":"extract_header_and_body","children":[],"call":["WEBrick HTTPUtils  parse_header ","data split ","data read ","data rewind ","WEBrick HTTPUtils  parse_WEBrick HTTPUtils  parse_header  ","data read  split ","data read  read ","data read  rewind "]}," DispatchServlet create_env_table":{"type":"method","name":"create_env_table","children":[],"call":["env []= ","req request_uri query ","req request_uri ","env delete ","req meta_vars clone ","req meta_vars ","req meta_vars clone  []= ","req meta_vars clone  delete "]}," CGI initialize":{"type":"method","name":"initialize","children":[],"call":[" initialize_query ","CGI_COOKIES  dup ","CGI_PARAMS  dup "," warn "," extend ","Apache  request setup_cgi_env ","Apache  request ","ENV  key? ! ","ENV  key? "]}," CGI env_table":{"type":"method","name":"env_table","children":[],"call":[]}," CGI stdinput":{"type":"method","name":"stdinput","children":[],"call":[]}," Prof print_profile":{"type":"method","name":"print_profile","children":[],"call":[]}," MigrationGenerator manifest":{"type":"method","name":"manifest","children":[],"call":["m template ","File  join "," file_name ","Dir  glob size + ","Dir  glob size ","Dir  glob ","m directory "," record "," raise ","existing_migrations empty? ","m migration_template "," get_local_assigns ","Dir  glob  empty? "]}," RailsFCGIHandler run_gc!":{"type":"method","name":"run_gc!","children":[],"call":["GC  disable ","GC  start ","GC  enable "," gc_request_period "]}," RailsFCGIHandler restore!":{"type":"method","name":"restore!","children":[],"call":["ActionController Routing Routes  reload ","Dispatcher  reset_application! ","$\" replace "]}," RailsFCGIHandler mark!":{"type":"method","name":"mark!","children":[],"call":["$\" clone "]}," RailsFCGIHandler process_request":{"type":"method","name":"process_request","children":[],"call":[" dispatcher_error "," raise ","SignalException  === ","Dispatcher  dispatch "," with_signal_handler "," gc_countdown "," Rack Handler FastCGI  serve "]}," RailsFCGIHandler reload_handler":{"type":"method","name":"reload_handler","children":[],"call":[" dispatcher_log "," reload! "]}," RailsFCGIHandler graceful_exit_handler":{"type":"method","name":"graceful_exit_handler","children":[],"call":[" exit "," dispatcher_log "," processing "]}," RailsFCGIHandler install_signal_handler":{"type":"method","name":"install_signal_handler","children":[],"call":[" dispatcher_log "," trap "," method to_proc "," method ","SIGNALS  [] "," class method_defined? "," class ","SIGNALS  include? "]}," RailsFCGIHandler install_signal_handlers":{"type":"method","name":"install_signal_handlers","children":[],"call":[" install_signal_handler "," method to_proc "," method ","SIGNALS  each ","GLOBAL_SIGNALS  each "]}," RailsFCGIHandler dispatcher_error":{"type":"method","name":"dispatcher_error","children":[],"call":[" dispatcher_log ","(str \"Dispatcher failed to catch: \") + ","e backtrace join ","e backtrace ","e class "]}," RailsFCGIHandler dispatcher_log":{"type":"method","name":"dispatcher_log","children":[],"call":["STDERR  << ","log_error message ","log_error class ","@log_file_path inspect "," logger send "," logger ","Time  now strftime ","Time  now "]}," RailsFCGIHandler logger":{"type":"method","name":"logger","children":[],"call":["Logger  new "]}," RailsFCGIHandler process!":{"type":"method","name":"process!","children":[],"call":[" dispatcher_error ","Time  now ","Time  now - > ","Time  now - ","(send\n  (const nil :SignalException) :===\n  (lvar :fcgi_error)) ! ","SignalException  === "," dispatcher_log ","GC  enable "," run_gc! ","@gc_request_countdown <= "," gc_request_period "," when_ready == "," when_ready "," process_request "," restore! ","provider each_cgi "," mark! "," gc_countdown "," close_connection "," restart! "," reload! "," breakpoint! "," process_each_request! "," process_each_request "," mark_features! "]}," RailsFCGIHandler initialize":{"type":"method","name":"initialize","children":[],"call":[" dispatcher_log ","Time  now - ","Time  now "," install_signal_handlers "," block_given? "," gc_request_period= "," log_file_path= ","Dispatcher  new "]}," Dispatcher reset_after_dispatch":{"type":"method","name":"reset_after_dispatch","children":[],"call":["Breakpoint  deactivate_drb "," reset_application! ","Dependencies  load? ","ActiveRecord Base  clear_connection_cache! "]}," Dispatcher reset_application!":{"type":"method","name":"reset_application!","children":[],"call":["Dependencies  remove_subclasses_for ","Dependencies  clear ","Controllers  clear! ","ActiveRecord Base  reset_subclasses ","Class  remove_class ","Reloadable  reloadable_classes ","ActiveRecord Base  clear_reloadable_connections! ","ActiveSupport Deprecation  silence "]}," DispatchServlet set_charset":{"type":"method","name":"set_charset","children":[],"call":["(send\n  (lvar :ct) :find) << ","; charset= + ","x =~ ","ct find ","@server_options [] ","(send\n  (lvar :ct) :any?) ! ","ct any? ","header [] ","(send\n  (lvar :header [] ) :find) << ","header []  find ","(send\n  (lvar :header [] ) :any?) ! ","header []  any? "]}," create_fixtures":{"type":"method","name":"create_fixtures","children":[],"call":["Fixtures  create_fixtures ","RAILS_ROOT  + ","Test Unit TestCase  fixture_path ","ActiveSupport TestCase  fixture_path "]}," Rails Generator Commands Create identical?":{"type":"method","name":"identical?","children":[],"call":["source == ","IO  read ","File  open "," block_given? ","File  directory? ","IO  read  == "]}," OrderedOptions find_pair":{"type":"method","name":"find_pair","children":[],"call":["i first == ","i first "," each "]}," OrderedOptions method_missing":{"type":"method","name":"method_missing","children":[],"call":[" [] "," []= ","args first ","1 to_sym ","name to_s =~ ","name to_s "]}," OrderedOptions []":{"type":"method","name":"[]","children":[],"call":["pair last "," find_pair ","key to_sym "," find_pair  last "," find_ find_pair  "]}," OrderedOptions []=":{"type":"method","name":"[]=","children":[],"call":[" << ","pair << ","pair pop "," find_pair ","key to_sym "," find_pair  << "," find_pair  pop "," find_ find_pair  ","key to_sym  to_sym "]}," Rails Configuration default_whiny_nils":{"type":"method","name":"default_whiny_nils","children":[],"call":[]}," Rails Configuration default_breakpoint_server":{"type":"method","name":"default_breakpoint_server","children":[],"call":[]}," Rails Configuration default_cache_classes":{"type":"method","name":"default_cache_classes","children":[],"call":[]}," Rails Configuration default_dependency_mechanism":{"type":"method","name":"default_dependency_mechanism","children":[],"call":[]}," Rails Configuration default_controller_paths":{"type":"method","name":"default_controller_paths","children":[],"call":["File  join "," root_path ","paths concat "," builtin_directories "]}," Rails Configuration default_view_path":{"type":"method","name":"default_view_path","children":[],"call":["File  join "," root_path "]}," Rails Configuration default_database_configuration_file":{"type":"method","name":"default_database_configuration_file","children":[],"call":["File  join "," root_path "]}," Rails Configuration default_log_level":{"type":"method","name":"default_log_level","children":[],"call":[" environment == "," environment "]}," Rails Configuration default_log_path":{"type":"method","name":"default_log_path","children":[],"call":["File  join "," environment "," root_path "]}," Rails Configuration default_load_paths":{"type":"method","name":"default_load_paths","children":[],"call":["paths concat ","File  directory? ","(send\n  (array\n    (str \"app\")\n    (str \"app/models\")\n    (str \"app/controllers\")\n    (str \"app/helpers\")\n    (str \"app/apis\")\n    (str \"components\")\n    (str \"config\")\n    (str \"lib\")\n    (str \"vendor\")\n    (str \"vendor/rails/railties\")\n    (str \"vendor/rails/railties/lib\")\n    (str \"vendor/rails/actionpack/lib\")\n    (str \"vendor/rails/activesupport/lib\")\n    (str \"vendor/rails/activerecord/lib\")\n    (str \"vendor/rails/actionmailer/lib\")\n    (str \"vendor/rails/actionwebservice/lib\")) :map) select ","(str \"app\") map ","Dir  [] "," environment ","(send\n  (array\n    (str \"app\")\n    (str \"app/models\")\n    (str \"app/controllers\")\n    (str \"app/helpers\")\n    (str \"app/services\")\n    (str \"app/apis\")\n    (str \"components\")\n    (str \"config\")\n    (str \"lib\")\n    (str \"vendor\")\n    (str \"vendor/rails/railties\")\n    (str \"vendor/rails/railties/lib\")\n    (str \"vendor/rails/actionpack/lib\")\n    (str \"vendor/rails/activesupport/lib\")\n    (str \"vendor/rails/activerecord/lib\")\n    (str \"vendor/rails/actionmailer/lib\")\n    (str \"vendor/rails/actionwebservice/lib\")) :map) select "," root_path ","(send\n  (array\n    (str \"railties\")\n    (str \"railties/lib\")\n    (str \"actionpack/lib\")\n    (str \"activesupport/lib\")\n    (str \"activerecord/lib\")\n    (str \"actionmailer/lib\")\n    (str \"actionwebservice/lib\")) :map) select "," framework_root_path ","(str \"railties\") map ","(send\n  (array\n    (str \"app\")\n    (str \"app/models\")\n    (str \"app/controllers\")\n    (str \"app/helpers\")\n    (str \"app/services\")\n    (str \"app/apis\")\n    (str \"components\")\n    (str \"config\")\n    (str \"lib\")\n    (str \"vendor\")) :map) select "," builtin_directories ","(send\n  (array\n    (str \"app\")\n    (str \"app/models\")\n    (str \"app/controllers\")\n    (str \"app/helpers\")\n    (str \"app/services\")\n    (str \"components\")\n    (str \"config\")\n    (str \"lib\")\n    (str \"vendor\")) :map) select ","File  exists? ","(send\n  (array\n    (str \"app\")\n    (str \"app/metal\")\n    (str \"app/models\")\n    (str \"app/controllers\")\n    (str \"app/helpers\")\n    (str \"app/services\")\n    (str \"lib\")\n    (str \"vendor\")) :map) select "]}," Rails Configuration default_frameworks":{"type":"method","name":"default_frameworks","children":[],"call":[]}," Rails Configuration environment":{"type":"method","name":"environment","children":[],"call":[]}," Rails Configuration plugins_path":{"type":"method","name":"plugins_path","children":[],"call":[]}," Rails Configuration environment_path":{"type":"method","name":"environment_path","children":[],"call":[" environment "," root_path "]}," Rails Configuration database_configuration":{"type":"method","name":"database_configuration","children":[],"call":["YAML  load ","ERB  new result ","ERB  new ","IO  read "," database_configuration_file "," require "]}," Rails Configuration initialize":{"type":"method","name":"initialize","children":[],"call":[" send ","OrderedOptions  new "," default_frameworks "," database_configuration_file= "," default_database_configuration_file "," whiny_nils= "," default_whiny_nils "," breakpoint_server= "," default_breakpoint_server "," cache_classes= "," default_cache_classes "," controller_paths= "," default_controller_paths "," view_path= "," default_view_path "," log_level= "," default_log_level "," log_path= "," default_log_path "," load_paths= "," default_load_paths "," frameworks= "," plugin_paths= "," default_plugin_paths ","Rails OrderedOptions  new "," plugins= "," default_plugins "," load_once_paths= "," default_load_once_paths "," set_root_path! "," plugin_loader= "," default_plugin_loader "," plugin_locators= "," default_plugin_locators "," active_support= "," gems= "," default_gems "," routes_configuration_file= "," default_routes_configuration_file "," i18n= "," default_i18n "," dependency_loading= "," default_dependency_loading "," eager_load_paths= "," default_eager_load_paths "," preload_frameworks= "," default_preload_frameworks "," autoload_once_paths= "," default_autoload_once_paths "," autoload_paths= "," default_autoload_paths "]}," Rails Initializer intitialize_framework_settings":{"type":"method","name":"intitialize_framework_settings","children":[],"call":["base_class send "," configuration send each "," configuration send "," configuration ","framework to_s camelize constantize const_get ","framework to_s camelize constantize ","framework to_s camelize ","framework to_s "," configuration frameworks each "," configuration frameworks ","framework to_s camelize constantize const_get  send "]}," Rails Initializer initialize_whiny_nils":{"type":"method","name":"initialize_whiny_nils","children":[],"call":[" require "," configuration whiny_nils "," configuration "]}," Rails Initializer initialize_breakpoints":{"type":"method","name":"initialize_breakpoints","children":[],"call":["Object  const_set "," configuration breakpoint_server "," configuration "," silence_warnings "]}," Rails Initializer initialize_dependency_mechanism":{"type":"method","name":"initialize_dependency_mechanism","children":[],"call":["Dependencies  mechanism= "," configuration cache_classes "," configuration ","ActiveSupport Dependencies  mechanism= "]}," Rails Initializer initialize_routing":{"type":"method","name":"initialize_routing","children":[],"call":["Object  const_set ","Dependencies LoadingModule  root "," configuration controller_paths "," configuration ","ActionController Routing Routes  reload "," configuration frameworks include? "," configuration frameworks ","ActionController Routing  controller_paths= ","ActionController Routing Routes  configuration_file= "," configuration routes_configuration_file ","ActionController Routing Routes  reload! ","ActionController Routing Routes  add_configuration_file ","ActionController Routing  controller_paths "]}," Rails Initializer initialize_framework_views":{"type":"method","name":"initialize_framework_views","children":[],"call":[" configuration view_path "," configuration ","framework to_s camelize constantize const_get template_root ","framework to_s camelize constantize const_get ","framework to_s camelize constantize ","framework to_s camelize ","framework to_s ","(sym :action_controller) & "," configuration frameworks ","ActionController Base  view_paths= ","ActionController Base  view_paths empty? ","ActionController Base  view_paths "," configuration frameworks include? ","ActionMailer Base  template_root ","ActionView PathSet Path  new ","ActionController Base  view_paths blank? ","ActionMailer Base  template_root= ","ActionMailer Base  view_paths blank? ","ActionMailer Base  view_paths ","ActionView PathSet  type_cast "," configuration ActionView PathSet Path  new  "," configuration ActionView PathSet  type_cast  ","ActionController Base  ActionView PathSet Path  new s= ","ActionController Base  ActionView PathSet  type_cast s= ","ActionController Base  ActionView PathSet Path  new s empty? ","ActionController Base  ActionView PathSet  type_cast s empty? ","ActionController Base  ActionView PathSet Path  new s ","ActionController Base  ActionView PathSet  type_cast s ","ActionController Base  ActionView PathSet Path  new s blank? ","ActionController Base  ActionView PathSet  type_cast s blank? ","ActionMailer Base  ActionView PathSet Path  new s blank? ","ActionMailer Base  ActionView PathSet  type_cast s blank? ","ActionMailer Base  ActionView PathSet Path  new s ","ActionMailer Base  ActionView PathSet  type_cast s "]}," Rails Initializer initialize_framework_logging":{"type":"method","name":"initialize_framework_logging","children":[],"call":["framework to_s camelize constantize const_get logger ","framework to_s camelize constantize const_get ","framework to_s camelize constantize ","framework to_s camelize ","framework to_s ","(sym :active_record) & "," configuration frameworks "," configuration ","RAILS_CACHE  logger ","Rails  logger ","Rails  cache logger ","Rails  cache ","ActiveSupport Dependencies  logger "]}," Rails Initializer initialize_logger":{"type":"method","name":"initialize_logger","children":[],"call":["Object  const_set "," silence_warnings ","logger warn ","(str \"Rails Error: Unable to access log file. Please ensure that \") + "," configuration log_path "," configuration ","logger level= ","Logger  new ","Logger  const_get "," configuration log_level to_s upcase "," configuration log_level to_s "," configuration log_level "," configuration logger ","ActiveSupport BufferedLogger  new ","logger auto_flushing= "," configuration environment == "," configuration environment ","ActiveSupport BufferedLogger  const_get ","logger set_non_blocking_io ","Rails  logger ","Logger  new  warn "," configuration logger  warn ","ActiveSupport BufferedLogger  new  warn ","Logger  new  level= "," configuration logger  level= ","ActiveSupport BufferedLogger  new  level= "," configuration Logger  new  "," configuration  configuration logger  "," configuration ActiveSupport BufferedLogger  new  ","Logger  new  auto_flushing= "," configuration logger  auto_flushing= ","ActiveSupport BufferedLogger  new  auto_flushing= ","Logger  new  set_non_blocking_io "," configuration logger  set_non_blocking_io ","ActiveSupport BufferedLogger  new  set_non_blocking_io ","Rails  Logger  new  ","Rails   configuration logger  ","Rails  ActiveSupport BufferedLogger  new  "]}," Rails Initializer initialize_database":{"type":"method","name":"initialize_database","children":[],"call":["ActiveRecord Base  establish_connection ","ActiveRecord Base  configurations= "," configuration database_configuration "," configuration "," configuration frameworks include? "," configuration frameworks "]}," Rails Initializer load_environment":{"type":"method","name":"load_environment","children":[],"call":[" eval "," binding ","IO  read "," configuration environment_path "," configuration "," silence_warnings ","Object  const_set "," class const_get "," class ","(send\n  (send\n    (send\n      (self) :class) :constants) :-\n  (lvar :constants)) each "," class constants - "," class constants ","  configuration uration environment_path ","  configuration uration ","(send\n  (send\n    (send\n      (self) :class) : class constants ) :-\n  (lvar : class constants )) each "," class  class constants  - "," class  class constants  "]}," Rails Initializer load_plugins":{"type":"method","name":"load_plugins","children":[],"call":["$LOAD_PATH uniq! "," eval "," binding ","IO  read "," silence_warnings ","File  exist? ","$LOAD_PATH unshift ","File  directory? ","File  directory? ! ","File  basename [] == ","File  basename [] ","File  basename ","Dir  glob "," configuration plugins_path "," configuration "," load_plugin "," find_plugins each "," find_plugins "," configuration plugin_paths "," find_plugins sort each "," find_plugins sort "," raise ","path nil? ","File  basename == ","plugin_paths find "," configuration plugins each "," configuration plugins "," configuration plugins empty? ! "," configuration plugins empty? "," configuration plugins nil? "," plugin_loader load_plugins "," plugin_loader ","  configuration uration plugins_path ","  configuration uration ","  configuration uration plugin_paths "," configuration  find_plugins  "," find_plugins  find ","  configuration uration plugins each ","  configuration uration plugins ","  configuration uration plugins empty? ! ","  configuration uration plugins empty? ","  configuration uration plugins nil? "]}," Rails Initializer require_frameworks":{"type":"method","name":"require_frameworks","children":[],"call":[" require ","framework to_s "," configuration frameworks each "," configuration frameworks "," configuration "," raise ","e to_s "]}," Rails Initializer set_connection_adapters":{"type":"method","name":"set_connection_adapters","children":[],"call":["Object  const_set "," configuration connection_adapters "," configuration "]}," Rails Initializer set_load_path":{"type":"method","name":"set_load_path","children":[],"call":["$LOAD_PATH uniq! ","$LOAD_PATH unshift ","File  directory? "," configuration load_paths reverse each "," configuration load_paths reverse "," configuration load_paths "," configuration ","load_paths reverse_each "," configuration load_paths + "," configuration framework_paths "," configuration autoload_paths + "," configuration autoload_paths "," configuration  configuration load_paths +  reverse each "," configuration  configuration autoload_paths +  reverse each "," configuration  configuration load_paths +  reverse "," configuration  configuration autoload_paths +  reverse "," configuration  configuration load_paths +  "," configuration  configuration autoload_paths +  "," configuration load_paths +  reverse_each "," configuration autoload_paths +  reverse_each "," configuration  configuration load_paths +  + "," configuration  configuration autoload_paths +  + "," configuration auto configuration load_paths +  + "," configuration auto configuration autoload_paths +  + "," configuration auto configuration load_paths +  "," configuration auto configuration autoload_paths +  "]}," Rails Initializer process":{"type":"method","name":"process","children":[],"call":[" load_plugins "," load_environment "," intitialize_framework_settings "," initialize_whiny_nils "," initialize_breakpoints "," initialize_dependency_mechanism "," initialize_routing "," initialize_framework_views "," initialize_framework_logging "," initialize_logger "," initialize_database "," require_frameworks "," set_connection_adapters "," set_load_path "," initialize_framework_settings "," load_framework_info "," after_initialize "," add_support_load_paths "," initialize_temporary_directories "," check_ruby_version "," load_observers "," initialize_encoding "," set_autoload_paths "," load_application_initializers "," add_plugin_load_paths "," prepare_dispatcher "," check_gem_dependencies "," load_gems "," add_gem_load_paths "," initialize_time_zone "," initialize_temporary_session_directory "," initialize_framework_caches "," initialize_cache "," install_gem_spec_stubs ","Rails  configuration= "," configuration ","Rails  initialized= "," disable_dependency_loading "," load_application_classes "," load_view_paths "," initialize_i18n "," initialize_database_middleware "," gems_dependencies_loaded "," check_for_unbuilt_gems "," initialize_metal "," preload_frameworks "]}," Rails Initializer initialize":{"type":"method","name":"initialize","children":[],"call":["Set  new "]}," Rails Initializer run":{"type":"method","name":"run","children":[],"call":["Configuration  new "]}," RailsFCGIHandler close_connection":{"type":"method","name":"close_connection","children":[],"call":["cgi instance_variable_get finish ","cgi instance_variable_get ","request finish "]}," RailsFCGIHandler gc_countdown":{"type":"method","name":"gc_countdown","children":[],"call":[" run_gc! ","@gc_request_countdown <= "," gc_request_period "]}," RailsFCGIHandler reload!":{"type":"method","name":"reload!","children":[],"call":[" dispatcher_log "," restore! "," run_gc! "," gc_request_period "]}," RailsFCGIHandler restart!":{"type":"method","name":"restart!","children":[],"call":[" exec "," dispatcher_log ","(lvar :ruby) flatten join ","(lvar :ruby) flatten ","File  join + ","config [] ","File  join ","RAILS_DEFAULT_LOGGER  close "," logger close "," logger ","Rails  logger close ","Rails  logger ","(lvar :File  join + ) flatten join ","(lvar :File  join + ) flatten "]}," RailsFCGIHandler restart_handler":{"type":"method","name":"restart_handler","children":[],"call":[" dispatcher_log "," restart! "]}," RailsFCGIHandler exit_handler":{"type":"method","name":"exit_handler","children":[],"call":[" dispatcher_log "," throw "]}," Dispatcher prepare_breakpoint":{"type":"method","name":"prepare_breakpoint","children":[],"call":["Breakpoint  activate_drb ","(const nil :FastCGI) ! "," require "]}," Rails Initializer initialize_framework_settings":{"type":"method","name":"initialize_framework_settings","children":[],"call":["base_class send "," configuration send each "," configuration send "," configuration ","framework to_s camelize constantize const_get ","framework to_s camelize constantize ","framework to_s camelize ","framework to_s "," configuration frameworks each "," configuration frameworks ","ActiveSupport  send "," configuration active_support each "," configuration active_support ","framework to_s camelize constantize const_get  send "]}," PluginGenerator manifest":{"type":"method","name":"manifest","children":[],"call":["m template "," file_name "," plugin_path ","m directory "," record ","m class_collisions "," class_name "," class_path "]}," PluginGenerator initialize":{"type":"method","name":"initialize","children":[],"call":[" file_name ","runtime_args delete "]}," Commands List migration_template":{"type":"method","name":"migration_template","children":[],"call":[" logger migration_template "," file_name "," logger "]}," Commands Destroy migration_template":{"type":"method","name":"migration_template","children":[],"call":[" file "," existing_migrations each "," existing_migrations "," file_name "," raise "," migration_exists? "]}," Commands Create migration_template":{"type":"method","name":"migration_template","children":[],"call":[" template "," file_name "," next_migration_string "," raise "," existing_migrations first "," existing_migrations "," migration_exists? "]}," MigrationGenerator next_migration_string":{"type":"method","name":"next_migration_string","children":[],"call":["(str \"%.\") % "," next_migration_number "]}," MigrationGenerator next_migration_number":{"type":"method","name":"next_migration_number","children":[],"call":[" current_migration_number + "," current_migration_number "]}," MigrationGenerator current_migration_number":{"type":"method","name":"current_migration_number","children":[],"call":["n > ","File  basename split first to_i ","File  basename split first ","File  basename split ","File  basename ","Dir  glob inject ","Dir  glob ","File  basename split first to_i  > ","File  baseFile  basename split first to_i ame split first to_i ","File  baseFile  basename split first to_i ame split first ","File  baseFile  basename split first to_i ame split ","File  baseFile  basename split first to_i ame ","Dir  glob iFile  basename split first to_i ject "]}," MigrationGenerator migration_exists?":{"type":"method","name":"migration_exists?","children":[],"call":[" existing_migrations empty? ! "," existing_migrations empty? "," existing_migrations "]}," MigrationGenerator existing_migrations":{"type":"method","name":"existing_migrations","children":[],"call":["Dir  glob "]}," Rails Configuration default_plugin_paths":{"type":"method","name":"default_plugin_paths","children":[],"call":[" root_path "]}," Rails Configuration root_path":{"type":"method","name":"root_path","children":[],"call":[]}," Rails Initializer load_plugin":{"type":"method","name":"load_plugin","children":[],"call":[" loaded_plugins << "," loaded_plugins "," eval "," binding ","IO  read "," silence_warnings "," configuration ","$LOAD_PATH unshift ","File  file? ","File  directory? ","File  join "," raise "," plugin_path? "," loaded_plugins include? ","File  basename ","$LOAD_PATH insert ","application_lib_index + ","$LOAD_PATH index ","Dependencies  load_once_paths << ","Dependencies  load_once_paths ","Dependencies  load_paths << ","Dependencies  load_paths ","  configuration uration ","File  baseFile  basename  "]}," Rails Initializer plugin_path?":{"type":"method","name":"plugin_path?","children":[],"call":["File  file? ","File  join ","File  directory? "]}," Rails Initializer find_plugins":{"type":"method","name":"find_plugins","children":[],"call":[" find_plugins ","File  directory? ","plugins << "," plugin_path? ","Dir  glob each ","Dir  glob ","File  join ","base_paths flatten inject ","base_paths flatten "," plugin_enabled? "]}," Rails Initializer load_framework_info":{"type":"method","name":"load_framework_info","children":[],"call":[" require "]}," RailsFCGIHandler exit_now_handler":{"type":"method","name":"exit_now_handler","children":[],"call":[" exit "," dispatcher_log "]}," Dispatcher failsafe_response":{"type":"method","name":"failsafe_response","children":[],"call":["output write ","exception to_s + + ","exception backtrace join ","exception backtrace ","exception to_s + ","exception to_s ","IO  read ","File  exists? ","RAILS_DEFAULT_LOGGER  fatal ","RAILS_DEFAULT_LOGGER  nil? ! ","RAILS_DEFAULT_LOGGER  nil? ","File  join "]}," Dispatcher new_cgi":{"type":"method","name":"new_cgi","children":[],"call":["CGI  new "," failsafe_response "]}," tail_f":{"type":"method","name":"tail_f","children":[],"call":["input seek ","input tell "," sleep ","input eof? ","input gets "," loop "]}," SessionMigrationGenerator manifest":{"type":"method","name":"manifest","children":[],"call":["m migration_template "," record "," default_session_table_name "]}," SessionMigrationGenerator initialize":{"type":"method","name":"initialize","children":[],"call":["runtime_args << ","runtime_args empty? "]}," Rails Generator Commands List migration_template":{"type":"method","name":"migration_template","children":[],"call":[" logger migration_template "," file_name "," logger "," migration_directory "]}," Rails Generator Commands Destroy migration_template":{"type":"method","name":"migration_template","children":[],"call":[" file "," existing_migrations each "," existing_migrations "," file_name "," raise "," migration_exists? "," migration_directory "," puts ","template_options [] "]}," Rails Generator Commands Create migration_template":{"type":"method","name":"migration_template","children":[],"call":[" template "," file_name "," next_migration_string "," raise "," existing_migrations first "," existing_migrations "," migration_exists? "," migration_directory ","template_options [] "]}," Rails Generator Commands Base next_migration_string":{"type":"method","name":"next_migration_string","children":[],"call":["(str \"%.\") % "," next_migration_number ","Time  now utc strftime ","Time  now utc ","Time  now ","ActiveRecord Base  timestamped_migrations "]}," Rails Generator Commands Base next_migration_number":{"type":"method","name":"next_migration_number","children":[],"call":[" current_migration_number + "," current_migration_number "]}," Rails Generator Commands Base current_migration_number":{"type":"method","name":"current_migration_number","children":[],"call":["n > ","File  basename split first to_i ","File  basename split first ","File  basename split ","File  basename ","Dir  glob inject ","Dir  glob ","File  basename split first to_i  > ","File  baseFile  basename split first to_i ame split first to_i ","File  baseFile  basename split first to_i ame split first ","File  baseFile  basename split first to_i ame split ","File  baseFile  basename split first to_i ame ","Dir  glob iFile  basename split first to_i ject "]}," Rails Generator Commands Base migration_exists?":{"type":"method","name":"migration_exists?","children":[],"call":[" existing_migrations empty? ! "," existing_migrations empty? "," existing_migrations "]}," Rails Generator Commands Base existing_migrations":{"type":"method","name":"existing_migrations","children":[],"call":["Dir  glob ","Dir  glob grep "]}," Rails Generator Commands Base migration_directory":{"type":"method","name":"migration_directory","children":[],"call":[" directory "]}," DispatchServlet parse_uri":{"type":"method","name":"parse_uri","children":[],"call":[]}," DispatchServlet handle_mapped":{"type":"method","name":"handle_mapped","children":[],"call":[" handle_dispatch ","req request_uri query= ","req request_uri ","req request_uri path= ","req request_uri path + + ","req request_uri path + ","req request_uri path ","query << ","req request_uri query ","DispatchServlet  parse_uri ","(send\n  (lvar :mappings) :collect) join ","pair last ","pair first ","mappings collect ","req request_uri (send\n  (lvar :mappings) :collect) join = ","(send\n  (lvar :mappings) :collect) join  << ","req request_uri (send\n  (lvar :mappings) :collect) join  ","(send\n  (lvar :DispatchServlet  parse_uri ) :collect) join ","DispatchServlet  parse_uri  collect "]}," DispatchServlet handle_index":{"type":"method","name":"handle_index","children":[],"call":["res set_redirect ","@server_options [] ","req request_uri path == ","req request_uri path ","req request_uri "]}," Generator Mailer generate":{"type":"method","name":"generate","children":[],"call":[" generate_file "," binding "," table_name "," file_name ","@actions each ","FileUtils  mkdir_p "]}," Generator Model generate":{"type":"method","name":"generate","children":[],"call":["FileUtils  mkdir_p "," table_name "," generate_file "," file_name "]}," Generator Controller generate":{"type":"method","name":"generate","children":[],"call":[" generate_file "," binding "," file_name ","@actions each "," options []= "," options "," options [] "]}," Generator Base generate_file":{"type":"method","name":"generate_file","children":[],"call":["file write ","File  open ","ERB  new result ","ERB  new ","File  read "," binding ","FileUtils  mkdir_p ","File  dirname ","File  join "," rails_root "," template_root "]}," Generator Base initialize":{"type":"method","name":"initialize","children":[],"call":[" class template_root= "," class ","File  directory? ","File  join ","Inflector  pluralize ","Inflector  underscore ","Inflector  camelize "]}," DispatchServlet modules":{"type":"method","name":"modules","children":[],"call":[]}," Rails Generator Base usage_path":{"type":"method","name":"usage_path","children":[],"call":[" template_root "]}," Rails Generator Base extract_options!":{"type":"method","name":"extract_options!","children":[],"call":["args pop ","args last is_a? ","args last "]}," Rails Generator Base inflect_names":{"type":"method","name":"inflect_names","children":[],"call":["Inflector  pluralize ","Inflector  underscore ","Inflector  camelize ","Inflector  Inflector  pluralize ize ","Inflector  Inflector  underscore score ","Inflector  Inflector  camelize ize "]}," Rails Generator Base find_template_path":{"type":"method","name":"find_template_path","children":[],"call":["File  join ","Rails Generator  find_generator_path "," template_root ","path nil? ","template_name split ","Rails Generator  find_Rails Generator  find_generator_path  "]}," Rails Generator Base usage":{"type":"method","name":"usage","children":[],"call":[" raise ","File  read "," usage_path ","UsageError  new "]}," Rails Generator Base template":{"type":"method","name":"template","children":[],"call":["file write ","File  open ","ERB  new result ","ERB  new ","File  read "," binding ","FileUtils  mkdir_p ","File  dirname ","File  join "," destination_root "," find_template_path "," find_ find_template_path  "]}," Rails Generator Base generator":{"type":"method","name":"generator","children":[],"call":["Rails Generator  instance "]}," Rails Generator Base generator_name":{"type":"method","name":"generator_name","children":[],"call":[]}," Rails Generator find_generator_class":{"type":"method","name":"find_generator_class","children":[],"call":[" generator_classes [] first "," generator_classes [] "," generator_classes "]}," Rails Generator generator_classes":{"type":"method","name":"generator_classes","children":[],"call":["classes [] << ","classes [] ","Inflector  underscore ","md captures first ","md captures ","object < ","class_re match ","object name ","ObjectSpace  each_object ","h []= ","Hash  new ","class_re match  captures first ","class_re match  captures "]}," Rails Generator find_generator_path":{"type":"method","name":"find_generator_path","children":[],"call":[" generator_paths [] first "," generator_paths [] "," generator_paths "]}," Rails Generator generator_paths":{"type":"method","name":"generator_paths","children":[],"call":["@paths [] ","@paths []= ","paths [] << ","paths [] ","File  basename ","File  directory? ","Dir  [] each ","Dir  [] ","search_paths each ","h []= ","Hash  new "]}," Rails Generator generators":{"type":"method","name":"generators","children":[],"call":[" generator_paths keys uniq sort "," generator_paths keys uniq "," generator_paths keys "," generator_paths "]}," Rails Generator contrib_generators":{"type":"method","name":"contrib_generators","children":[],"call":[" generators "]}," Rails Generator builtin_generators":{"type":"method","name":"builtin_generators","children":[],"call":[" generators "]}," Rails Generator instance":{"type":"method","name":"instance","children":[],"call":["klass new "," raise "," find_generator_class ","Inflector  classify "," require ","File  directory? "," find_generator_path ","Inflector  underscore ","name downcase ","Object  const_get "," find_generator_class  new "," find_generator_ find_generator_path  ","Inflector  underscore  downcase "]}," Dispatcher module_name":{"type":"method","name":"module_name","children":[],"call":["parameters [] gsub untaint ","parameters [] gsub ","parameters [] ","parameters [] downcase gsub untaint ","parameters [] downcase gsub ","parameters [] downcase "]}," Dispatcher controller_name":{"type":"method","name":"controller_name","children":[],"call":["parameters [] gsub untaint ","parameters [] gsub ","parameters [] ","parameters [] downcase gsub untaint ","parameters [] downcase gsub ","parameters [] downcase "]}," Dispatcher controller_class_name":{"type":"method","name":"controller_class_name","children":[],"call":["Inflector  camelize ","controller_name camelize "]}," Dispatcher controller_class":{"type":"method","name":"controller_class","children":[],"call":["Object  const_get "," controller_class_name "]}," Dispatcher controller_path":{"type":"method","name":"controller_path","children":[],"call":["Inflector  underscore ","controller_name underscore "]}," Breakpoint DRbService unregister_collision_handler":{"type":"method","name":"unregister_collision_handler","children":[],"call":[" lambda "]}," Breakpoint DRbService register_collision_handler":{"type":"method","name":"register_collision_handler","children":[],"call":[]}," Breakpoint DRbService unregister_eval_handler":{"type":"method","name":"unregister_eval_handler","children":[],"call":[" lambda "]}," Breakpoint DRbService register_eval_handler":{"type":"method","name":"register_eval_handler","children":[],"call":[]}," Breakpoint DRbService unregister_handler":{"type":"method","name":"unregister_handler","children":[],"call":[]}," Breakpoint DRbService register_handler":{"type":"method","name":"register_handler","children":[],"call":[]}," Dispatcher remove_class_hierarchy":{"type":"method","name":"remove_class_hierarchy","children":[],"call":["klass superclass ","until_superclass == ","Object  send ","(begin\n  (lvar :klass)) intern "]}," Binding of_caller":{"type":"method","name":"of_caller","children":[],"call":[]}," Continuation create":{"type":"method","name":"create","children":[],"call":[]}," IntegrationTestGenerator manifest":{"type":"method","name":"manifest","children":[],"call":["m template ","File  join "," file_name "," class_path ","m directory ","m class_collisions "," class_name "," record "]}," OrderedHash find_pair":{"type":"method","name":"find_pair","children":[],"call":["i first == ","i first "," each "]}," OrderedHash keys":{"type":"method","name":"keys","children":[],"call":["i first "," collect "]}," OrderedHash []":{"type":"method","name":"[]","children":[],"call":["pair last "," find_pair "," find_pair  last "," find_ find_pair  "]}," OrderedHash []=":{"type":"method","name":"[]=","children":[],"call":[" << ","pair << ","pair pop "," find_pair "," find_pair  << "," find_pair  pop "," find_ find_pair  "]}," Rails Configuration framework_root_path":{"type":"method","name":"framework_root_path","children":[],"call":[" root_path "]}," Rails Configuration after_initialize_block":{"type":"method","name":"after_initialize_block","children":[],"call":[]}," Rails Configuration after_initialize":{"type":"method","name":"after_initialize","children":[],"call":[" after_initialize_blocks << "," after_initialize_blocks "]}," Rails Initializer after_initialize":{"type":"method","name":"after_initialize","children":[],"call":[" configuration after_initialize_block call "," configuration after_initialize_block "," configuration ","block call "," configuration after_initialize_blocks each "," configuration after_initialize_blocks "," gems_dependencies_loaded "]}," Rails Initializer initialize_temporary_directories":{"type":"method","name":"initialize_temporary_directories","children":[],"call":["ActionController Base  fragment_cache_store= ","File  exist? ","ActionController Base  session_options []= ","Dir  tmpdir ","ActionController Base  session_options "," configuration frameworks include? "," configuration frameworks "," configuration "," configuration root_path "]}," Rails Initializer add_support_load_paths":{"type":"method","name":"add_support_load_paths","children":[],"call":["$LOAD_PATH concat ","Dir  [] ","File  join ","File  dirname "]}," Rails Initializer check_ruby_version":{"type":"method","name":"check_ruby_version","children":[],"call":[" require "]}," RailsFCGIHandler breakpoint!":{"type":"method","name":"breakpoint!","children":[],"call":[" breakpoint "," dispatcher_log ","Breakpoint  activate_drb ","(const nil :FastCGI) ! "," require "]}," RailsFCGIHandler breakpoint_handler":{"type":"method","name":"breakpoint_handler","children":[],"call":[" dispatcher_log "]}," helper":{"type":"method","name":"helper","children":[],"call":["Object  new ","helper extend ","(begin\n  (lvar :h)) classify constantize ","(begin\n  (lvar :h)) classify ","helper_names each "," returning ","ApplicationController  helpers "]}," Module include_all_modules_from":{"type":"method","name":"include_all_modules_from","children":[],"call":[" include_all_modules_from "," send ","mod class == ","mod class ","parent_module const_get ","parent_module constants each ","parent_module constants "," include_all_parent_module const_get ules_from ","parent_module const_get  class == ","parent_module const_get  class ","parent_parent_module const_get ule const_get ","parent_parent_module const_get ule constants each ","parent_parent_module const_get ule constants "]}," reload!":{"type":"method","name":"reload!","children":[],"call":["Dispatcher  reset_application! "," puts ","dispatcher prepare_application ","dispatcher cleanup_application ","ActionController Dispatcher  new ","dispatcher reload_application ","Dispatcher  reload_application ","Dispatcher  cleanup_application ","ActionController Dispatcher  new  prepare_application ","ActionController Dispatcher  new  cleanup_application ","ActionController Dispatcher  new  reload_application "]}," new_session":{"type":"method","name":"new_session","children":[],"call":[" block_given? ","ActionController Integration Session  new "]}," app":{"type":"method","name":"app","children":[],"call":["sess host! "," new_session "]}," Rails Generator Options add_general_options!":{"type":"method","name":"add_general_options!","children":[],"call":[" options []= ","opt []= ","e chomp [] ","e chomp ","(str \"svn status\") inject "," options ","opt on ","opt separator ","opt [] []= ","opt [] ","e =~ ","(str \"git status\") inject "," options [] [] []= ","line chomp [] ","line chomp "," options [] [] "," options [] ","line =~ ","(str \"git status\") each_line "," options [] []= ","(str \"svn status\") each_line "]}," Rails Generator Options add_options!":{"type":"method","name":"add_options!","children":[],"call":[]}," Rails Generator Options banner":{"type":"method","name":"banner","children":[],"call":[]}," Rails Generator Options usage_message":{"type":"method","name":"usage_message","children":[],"call":[]}," Rails Generator Options usage":{"type":"method","name":"usage","children":[],"call":[" raise "]}," Rails Generator Options parse!":{"type":"method","name":"parse!","children":[],"call":[" options= "," full_options ","opt parse! "," add_general_options! "," add_options! ","opt banner= "," banner ","OptionParser  new "]}," Rails Generator Options full_options":{"type":"method","name":"full_options","children":[],"call":[" class full_options "," options merge "," options "," class "]}," Rails Generator Options default_options":{"type":"method","name":"default_options","children":[],"call":[" class default_options "," class "]}," Rails Generator Options mandatory_options":{"type":"method","name":"mandatory_options","children":[],"call":[" class mandatory_options "," class "]}," Rails Generator Options options":{"type":"method","name":"options","children":[],"call":[]}," Rails Generator Options ClassMethods full_options":{"type":"method","name":"full_options","children":[],"call":[" default_options merge merge "," mandatory_options "," default_options merge "," default_options "]}," Rails Generator Options ClassMethods default_options":{"type":"method","name":"default_options","children":[],"call":[" write_inheritable_attribute "," read_inheritable_attribute "]}," Rails Generator Options ClassMethods mandatory_options":{"type":"method","name":"mandatory_options","children":[],"call":[" write_inheritable_attribute "," read_inheritable_attribute "]}," Rails Generator Options ClassMethods inherited_with_options":{"type":"method","name":"inherited_with_options","children":[],"call":["sub extend "," inherited_without_options "," respond_to? "]}," Rails Generator Options append_features":{"type":"method","name":"append_features","children":[],"call":[]}," ModelGenerator add_options!":{"type":"method","name":"add_options!","children":[],"call":[" options []= "," options ","opt on ","opt separator "]}," AppGenerator mysql_socket_location":{"type":"method","name":"mysql_socket_location","children":[],"call":["File  exists? ","MYSQL_SOCKET_LOCATIONS  find ","RUBY_PLATFORM  =~ ","File  exist? ","(str \"/tmp/mysql.sock\") find "]}," AppGenerator add_options!":{"type":"method","name":"add_options!","children":[],"call":[" options []= "," options ","opt on ","opt separator ","DATABASES  join "]}," AppGenerator banner":{"type":"method","name":"banner","children":[],"call":[]}," AppGenerator manifest":{"type":"method","name":"manifest","children":[],"call":["m file ","(str \"server\") each ","m template ","(str \"404\") each ","(str \"about\") each "," options [] "," options "," mysql_socket_location "," options [] == ","File  basename ","File  expand_path ","m directory ","BASEDIRS  each "," record ","md5 hexdigest ","Rails SecretKeyGenerator  new generate_secret ","Rails SecretKeyGenerator  new ","md5 << "," String "," rand ","now usec ","now to_s ","Time  now ","Digest MD5  new ","ActiveSupport SecureRandom  hex "," create_log_files "," create_documentation_file "," create_public_files "," create_test_files "," create_script_files "," create_config_files "," create_app_files "," create_root_files "," create_directories ","Digest MD5  new  hexdigest ","Rails SecretKeyGenerator  new generate_Rails SecretKeyGenerator  new generate_secret  ","Rails SecretKeyGenerator  new generate_ActiveSupport SecureRandom  hex  ","Digest MD5  new  << ","Time  now  usec ","Time  now  to_s ","Time  Time  now  "]}," AppGenerator initialize":{"type":"method","name":"initialize","children":[],"call":[" args shift "," args "," usage ","DATABASES  join ","DATABASES  include? ! ","DATABASES  include? "," options [] "," options "," args empty? ","File  basename ","File  expand_path "]}," daemonize":{"type":"method","name":"daemonize","children":[],"call":["STDERR  reopen ","STDOUT  reopen ","STDIN  reopen ","File  umask ","Dir  chdir "," exit "," fork ","Process  setsid "]}," spawn_all":{"type":"method","name":"spawn_all","children":[],"call":[" spawn ","OPTIONS  [] + ","OPTIONS  [] ","OPTIONS  [] times "]}," spawn":{"type":"method","name":"spawn","children":[],"call":[" print "," system ","OPTIONS  [] ","srv close ","TCPServer  new ","TCPServer  new  close "]}," ProgramProcess to_s":{"type":"method","name":"to_s","children":[],"call":[]}," ProgramProcess restart":{"type":"method","name":"restart","children":[],"call":[]}," ProgramProcess usr1":{"type":"method","name":"usr1","children":[],"call":[]}," ProgramProcess kill":{"type":"method","name":"kill","children":[],"call":[]}," ProgramProcess graceful":{"type":"method","name":"graceful","children":[],"call":[]}," ProgramProcess reload":{"type":"method","name":"reload","children":[],"call":[]}," ProgramProcess initialize":{"type":"method","name":"initialize","children":[],"call":[]}," ProgramProcess process_lines_with_keyword":{"type":"method","name":"process_lines_with_keyword","children":[],"call":[]}," ProgramProcess find_by_keyword":{"type":"method","name":"find_by_keyword","children":[],"call":["(send\n  (send\n    (send nil :process_lines_with_keyword\n      (lvar :keyword)) :split\n    (str \"\\n\")) :collect) compact "," new ","command join ","line split ","line =~ "," process_lines_with_keyword split collect "," process_lines_with_keyword split "," process_lines_with_keyword "]}," ProgramProcess process_keywords":{"type":"method","name":"process_keywords","children":[],"call":["process send "," puts ","action capitalize ","processes each ","keywords join ","processes empty? ","(send\n  (lvar :keywords) :collect) flatten "," find_by_keyword ","keywords collect ","(send\n  (lvar :keywords) :collect) flatten  each ","(send\n  (lvar :keywords) :collect) flatten  empty? "]}," Rails Generator Options included":{"type":"method","name":"included","children":[],"call":[]}," Rails Generator Lookup included":{"type":"method","name":"included","children":[],"call":[]}," SessionMigrationGenerator default_session_table_name":{"type":"method","name":"default_session_table_name","children":[],"call":["session pluralize ","ActiveRecord Base  pluralize_table_names "]}," ScaffoldResourceGenerator model_name":{"type":"method","name":"model_name","children":[],"call":[" class_name demodulize "," class_name "]}," ScaffoldResourceGenerator scaffold_views":{"type":"method","name":"scaffold_views","children":[],"call":[]}," ScaffoldResourceGenerator banner":{"type":"method","name":"banner","children":[],"call":[]}," ScaffoldResourceGenerator manifest":{"type":"method","name":"manifest","children":[],"call":["m route_resources "," controller_file_name ","m migration_template "," file_path gsub pluralize "," file_path gsub "," file_path "," attributes "," class_name pluralize gsub "," class_name pluralize "," class_name "," options [] "," options ","m template ","File  join "," table_name "," file_name "," class_path "," controller_class_path "," scaffold_views ","m directory ","m class_collisions "," controller_class_name "," record "]}," ScaffoldResourceGenerator initialize":{"type":"method","name":"initialize","children":[],"call":["@controller_class_nesting empty? "," inflect_names "," extract_modules ","@name pluralize "]}," InstanceTag to_time_select_tag":{"type":"method","name":"to_time_select_tag","children":[],"call":[",  + ","options inspect ","options empty? "]}," ResourceGenerator model_name":{"type":"method","name":"model_name","children":[],"call":[" class_name demodulize "," class_name "]}," ResourceGenerator banner":{"type":"method","name":"banner","children":[],"call":[]}," ResourceGenerator manifest":{"type":"method","name":"manifest","children":[],"call":["m route_resources "," controller_file_name ","m migration_template "," file_path gsub pluralize "," file_path gsub "," file_path "," attributes "," class_name pluralize gsub "," class_name pluralize "," class_name "," options [] "," options ","m template ","File  join "," table_name "," file_name "," class_path "," controller_class_path ","m directory ","m class_collisions "," controller_class_name "," record ","m dependency ","(send nil :name) + "," name "]}," ResourceGenerator initialize":{"type":"method","name":"initialize","children":[],"call":["@controller_class_nesting empty? "," inflect_names "," extract_modules ","@name pluralize "]}," ObserverGenerator manifest":{"type":"method","name":"manifest","children":[],"call":["m template ","File  join "," file_name "," class_path ","m directory ","m class_collisions "," class_name "," record "]}," ModelGenerator banner":{"type":"method","name":"banner","children":[],"call":[" spec name "," spec "]}," Rails Generator GeneratedAttribute default":{"type":"method","name":"default","children":[],"call":["Date  today to_s ","Date  today ","Time  now to_s ","Time  now "," type "]}," Rails Generator GeneratedAttribute field_type":{"type":"method","name":"field_type","children":[],"call":[" type "]}," Rails Generator GeneratedAttribute initialize":{"type":"method","name":"initialize","children":[],"call":["ActiveRecord ConnectionAdapters Column  new ","type to_sym "]}," Rails Generator Commands List route_resources":{"type":"method","name":"route_resources","children":[],"call":[" logger route "," logger ","(send\n  (lvar :resources) :map) join ","r to_sym inspect ","r to_sym ","resources map "]}," Rails Generator Commands Destroy route_resources":{"type":"method","name":"route_resources","children":[],"call":[" gsub_file "," logger route "," logger ","(send\n  (lvar :resources) :map) join ","r to_sym inspect ","r to_sym ","resources map "]}," Rails Generator Commands Create render_file":{"type":"method","name":"render_file","children":[],"call":["content << ","file read ","line !~ ","file gets ","options [] "," block_given? ","File  open ","file gets  !~ "]}," Rails Generator Commands Create route_resources":{"type":"method","name":"route_resources","children":[],"call":[" gsub_file ","Regexp  escape "," options [] "," options "," logger route "," logger ","(send\n  (lvar :resources) :map) join ","r to_sym inspect ","r to_sym ","resources map "]}," Rails Generator Commands Base diff_cmd":{"type":"method","name":"diff_cmd","children":[],"call":["ENV  [] "]}," Rails Generator Commands Base gsub_file":{"type":"method","name":"gsub_file","children":[],"call":["file write ","File  open ","File  read gsub ","File  read "," destination_path "," destination_ destination_path  "]}," Rails Generator Commands included":{"type":"method","name":"included","children":[],"call":[]}," Rails Generator NamedBase attributes":{"type":"method","name":"attributes","children":[],"call":["Rails Generator GeneratedAttribute  new ","attribute split ","@args collect "]}," Rails Configuration default_plugins":{"type":"method","name":"default_plugins","children":[],"call":[]}," Rails Configuration default_load_once_paths":{"type":"method","name":"default_load_once_paths","children":[],"call":[]}," Rails Configuration framework_paths":{"type":"method","name":"framework_paths","children":[],"call":["File  directory? ","(send\n  (array\n    (str \"railties\")\n    (str \"railties/lib\")\n    (str \"actionpack/lib\")\n    (str \"activesupport/lib\")\n    (str \"activerecord/lib\")\n    (str \"actionmailer/lib\")\n    (str \"actionwebservice/lib\")) :map) select "," framework_root_path ","(str \"railties\") map ","(send\n  (lvar :paths) :map) select ","paths map ","paths << ","framework to_s gsub ","framework to_s "," frameworks include? "," frameworks ","(sym :active_record) each "]}," Rails Configuration builtin_directories":{"type":"method","name":"builtin_directories","children":[],"call":["Dir  [] "," environment == "," environment "]}," Rails Configuration to_prepare":{"type":"method","name":"to_prepare","children":[],"call":["Dispatcher  to_prepare "," require "," after_initialize "]}," Rails Initializer plugin_enabled?":{"type":"method","name":"plugin_enabled?","children":[],"call":[" configuration plugins include? ","File  basename "," configuration plugins "," configuration "," configuration plugins nil? "]}," Rails Initializer initialize_encoding":{"type":"method","name":"initialize_encoding","children":[],"call":["RUBY_VERSION  < "]}," Rails Initializer load_observers":{"type":"method","name":"load_observers","children":[],"call":["ActiveRecord Base  instantiate_observers "," configuration frameworks include? "," configuration frameworks "," configuration "," gems_dependencies_loaded "]}," Rails Initializer set_autoload_paths":{"type":"method","name":"set_autoload_paths","children":[],"call":[" configuration load_once_paths freeze "," configuration load_once_paths "," configuration "," abort ","extra * ","extra empty? ","Dependencies  load_once_paths - ","Dependencies  load_paths ","Dependencies  load_once_paths ","Dependencies  load_once_paths= "," configuration load_once_paths uniq ","Dependencies  load_paths= "," configuration load_paths uniq "," configuration load_paths ","ActiveSupport Dependencies  load_once_paths - ","ActiveSupport Dependencies  load_paths ","ActiveSupport Dependencies  load_once_paths ","ActiveSupport Dependencies  load_once_paths= ","ActiveSupport Dependencies  load_paths= "," configuration autoload_once_paths freeze "," configuration autoload_once_paths ","ActiveSupport Dependencies  autoload_once_paths - ","ActiveSupport Dependencies  autoload_paths ","ActiveSupport Dependencies  autoload_once_paths ","ActiveSupport Dependencies  autoload_once_paths= "," configuration autoload_once_paths uniq ","ActiveSupport Dependencies  autoload_paths= "," configuration autoload_paths uniq "," configuration autoload_paths ","Dependencies  load_once_paths -  * ","ActiveSupport Dependencies  load_once_paths -  * ","ActiveSupport Dependencies  autoload_once_paths -  * ","Dependencies  load_once_paths -  empty? ","ActiveSupport Dependencies  load_once_paths -  empty? ","ActiveSupport Dependencies  autoload_once_paths -  empty? "]}," RailsFCGIHandler process_each_request!":{"type":"method","name":"process_each_request!","children":[],"call":[" close_connection "," raise ","signal message == ","signal message "," gc_countdown "," breakpoint! "," restart! "," reload! "," when_ready "," process_request "," with_signal_handler ","provider each_cgi "]}," RailsFCGIHandler with_signal_handler":{"type":"method","name":"with_signal_handler","children":[],"call":[" install_signal_handler "]}," tail":{"type":"method","name":"tail","children":[],"call":[" sleep "," print ","contents length ","f read ","f mtime ","f mtime > ","f seek "," loop ","File  open ","Thread  new ","Time  now ","File  size ","f read  length "]}," Killer pid_files":{"type":"method","name":"pid_files","children":[],"call":["Dir  glob ","@pid_path + + ","@pid_path + "]}," Killer delete_pid_files":{"type":"method","name":"delete_pid_files","children":[],"call":["File  delete "," pid_files each "," pid_files "]}," Killer find_processes_via_grep":{"type":"method","name":"find_processes_via_grep","children":[],"call":["line [] to_i ","line [] ","lines map ","line =~ ","(str \"ps axww -o 'pid command' | grep \") split reject ","(str \"ps axww -o 'pid command' | grep \") split "]}," Killer find_processes":{"type":"method","name":"find_processes","children":[],"call":["File  read to_i ","File  read ","files collect "," find_processes_via_grep ","files empty? "," pid_files "," pid_files  collect "," pid_files  empty? "," pid_ pid_files  "]}," Killer terminating?":{"type":"method","name":"terminating?","children":[],"call":["(str \"kill\") include? "]}," Killer process":{"type":"method","name":"process","children":[],"call":[" delete_pid_files "," terminating? "," class send "," class "," puts ","action capitalize ","pids each "," warn ","@keyword inspect ","pids empty? "," find_processes "," new process "," new "," find_processes  each "," find_processes  empty? "]}," Killer initialize":{"type":"method","name":"initialize","children":[],"call":[]}," Killer usr1":{"type":"method","name":"usr1","children":[],"call":[]}," Killer kill":{"type":"method","name":"kill","children":[],"call":[]}," Killer graceful":{"type":"method","name":"graceful","children":[],"call":[]}," Killer restart":{"type":"method","name":"restart","children":[],"call":[]}," Killer reload":{"type":"method","name":"reload","children":[],"call":[]}," Inspector pid_files":{"type":"method","name":"pid_files","children":[],"call":["Dir  glob ","@pid_path + + ","@pid_path + "]}," Inspector pids":{"type":"method","name":"pids","children":[],"call":["File  read to_i ","File  read "," pid_files collect "," pid_files "]}," Inspector inspect":{"type":"method","name":"inspect","children":[],"call":[" puts ","header + ","lines join ","(begin\n  (send\n    (send\n      (const nil :OPTIONS) :[]\n      (sym :ps)) :%\n    (lvar :pid))) split [] ","(begin\n  (send\n    (send\n      (const nil :OPTIONS) :[]\n      (sym :ps)) :%\n    (lvar :pid))) split ","OPTIONS  [] % ","OPTIONS  [] "," pids collect "," pids ","(begin\n  (send\n    (send\n      (const nil :OPTIONS) :[]\n      (sym :ps)) :%\n    (int 1))) split [] + ","(begin\n  (send\n    (send\n      (const nil :OPTIONS) :[]\n      (sym :ps)) :%\n    (int 1))) split [] ","(begin\n  (send\n    (send\n      (const nil :OPTIONS) :[]\n      (sym :ps)) :%\n    (int 1))) split ","(begin\n  (send\n    (send\n      (const nil :OPTIONS) :[]\n      (sym :ps)) :%\n    (int 1))) split [] +  + "]}," Inspector initialize":{"type":"method","name":"initialize","children":[],"call":[]}," Handlers collision_handler":{"type":"method","name":"collision_handler","children":[],"call":[" puts ","root destroy ","Tk  messageBox "," withdraw ","TkRoot  new "," require ","RUBY_PLATFORM  [] ","(str \"  *** Breakpoint service collision ***\") join "]}," Handlers eval_handler":{"type":"method","name":"eval_handler","children":[],"call":["DRbObject  new "," eval "]}," Handlers breakpoint_handler":{"type":"method","name":"breakpoint_handler","children":[],"call":[" puts ","Options  [] ","IRB  start "]}," Breakpoint CommandBundle show_call_stack":{"type":"method","name":"show_call_stack","children":[],"call":["Pathname  new cleanpath to_s ","Pathname  new cleanpath ","Pathname  new "," client puts ","line [] ","base length + ","base length ","line index == ","line index "," client ","line sub! "," caller [] each "," caller [] "," caller ","Pathname  new cleanpath to_s  length + ","Pathname  new cleanpath to_s  length "]}," Breakpoint CommandBundle show_source_list":{"type":"method","name":"show_source_list","children":[],"call":["Pathname  new cleanpath to_s ","Pathname  new cleanpath ","Pathname  new "," client puts ","(str \"%0\") % ","start_line + "," client ","start_line + == ","result each_with_index ","(send\n  (send\n    (begin\n      (send\n        (lvar :break_line) :+\n        (lvar :context))) :to_s) :length) max ","(send\n  (lvar :break_line) :+\n  (lvar :context)) to_s length ","(send\n  (lvar :break_line) :+\n  (lvar :context)) to_s ","break_line + "," source_lines "]}," Rails Configuration set_root_path!":{"type":"method","name":"set_root_path!","children":[],"call":["Pathname  new realpath to_s ","Pathname  new realpath ","Pathname  new ","File  expand_path ","RUBY_PLATFORM  =~ "," raise ","File  directory? "," RAILS_ROOT  replace ","Object  const_set "," RAILS_ROOT  dup "]}," Dispatcher run_preparation_callbacks":{"type":"method","name":"run_preparation_callbacks","children":[],"call":[" preparation_callbacks_run= ","callback call "," preparation_callbacks each "," preparation_callbacks "," preparation_callbacks_run? "]}," Dispatcher to_prepare":{"type":"method","name":"to_prepare","children":[],"call":[" preparation_callbacks << "," preparation_callbacks ","callback []= ","ident == "," preparation_callbacks detect ","identifier nil? "]}," SourceAnnotationExtractor display":{"type":"method","name":"display","children":[],"call":[" puts ","note to_s ","results [] each ","results [] ","results keys sort each ","results keys sort ","results keys "]}," SourceAnnotationExtractor extract_annotations_from":{"type":"method","name":"extract_annotations_from","children":[],"call":["result empty? ","list << ","Annotation  new ","line =~ ","File  readlines inject ","File  readlines "]}," SourceAnnotationExtractor find_in":{"type":"method","name":"find_in","children":[],"call":["results update "," extract_annotations_from "," tag ","item =~ "," find_in ","File  directory? ","File  basename [] == ","File  basename [] ","File  basename ","Dir  glob "]}," SourceAnnotationExtractor find":{"type":"method","name":"find","children":[],"call":["h update "," find_in ","dirs inject "]}," SourceAnnotationExtractor initialize":{"type":"method","name":"initialize","children":[],"call":[]}," SourceAnnotationExtractor enumerate":{"type":"method","name":"enumerate","children":[],"call":[]}," SourceAnnotationExtractor Annotation to_s":{"type":"method","name":"to_s","children":[],"call":["s << "," text "," tag ","options [] ","[%3d]  % "," line ","[%3d]  %  << ","option[%3d]  %  [] "]}," Rails SecretKeyGenerator supports_prng?":{"type":"method","name":"supports_prng?","children":[],"call":[]}," Rails SecretKeyGenerator supports_openssl?":{"type":"method","name":"supports_openssl?","children":[],"call":[]}," Rails SecretKeyGenerator supports_urandom?":{"type":"method","name":"supports_urandom?","children":[],"call":[]}," Rails SecretKeyGenerator supports_win32_api?":{"type":"method","name":"supports_win32_api?","children":[],"call":[]}," Rails SecretKeyGenerator supports_secure_random?":{"type":"method","name":"supports_secure_random?","children":[],"call":[]}," Rails SecretKeyGenerator lastWin32ErrorMessage":{"type":"method","name":"lastWin32ErrorMessage","children":[],"call":["msg [] tr chomp ","msg [] tr ","msg [] ","format_message call ","format_message_ignore_inserts + ","\u0000 * ","get_last_error call ","Win32API  new ","\u0000 *  [] tr chomp ","\u0000 *  [] tr ","\u0000 *  [] ","Win32API  new  call ","Win32API  new _ignore_inserts + "]}," Rails SecretKeyGenerator generate_secret_with_prng":{"type":"method","name":"generate_secret_with_prng","children":[],"call":["sha hexdigest ","sha << "," String "," rand ","now usec ","now to_s ","Time  now ","Digest SHA2  new "," require ","Digest SHA2  new  hexdigest ","Digest SHA2  new  << ","Time  now  usec ","Time  now  to_s ","Time  Time  now  "]}," Rails SecretKeyGenerator generate_secret_with_urandom":{"type":"method","name":"generate_secret_with_urandom","children":[],"call":["File  read unpack [] ","File  read unpack ","File  read "]}," Rails SecretKeyGenerator generate_secret_with_openssl":{"type":"method","name":"generate_secret_with_openssl","children":[],"call":["OpenSSL Digest SHA512  new hexdigest ","OpenSSL Digest SHA512  new ","OpenSSL BN  rand to_s ","OpenSSL BN  rand ","OpenSSL Random  seed "," rand to_s + ","Time  now usec to_s ","Time  now usec ","Time  now "," rand to_s "," rand ","File  exist? ! ","File  exist? "," require "," generate_secret_with_prng ","OpenSSL OPENSSL_VERSION_NUMBER  > "]}," Rails SecretKeyGenerator generate_secret_with_secure_random":{"type":"method","name":"generate_secret_with_secure_random","children":[],"call":["SecureRandom  hex "," require "]}," Rails SecretKeyGenerator generate_secret_with_win32_api":{"type":"method","name":"generate_secret_with_win32_api","children":[],"call":["bytes unpack [] ","bytes unpack "," raise "," lastWin32ErrorMessage ","crypt_release_context call == ","crypt_release_context call ","crypt_gen_random call == ","crypt_gen_random call ","bytes size ","  * ","hProvStr unpack ","crypt_acquire_context call == ","crypt_acquire_context call ","Win32API  new "," require ","  *  unpack [] ","  *  unpack ","Win32API  new  call == ","Win32API  new  call ","  *  size "]}," Rails SecretKeyGenerator generate_secret":{"type":"method","name":"generate_secret","children":[],"call":[" send "," class send "," class ","GENERATORS  find ","ActiveSupport SecureRandom  hex "]}," Rails SecretKeyGenerator initialize":{"type":"method","name":"initialize","children":[],"call":[]}," Scripts Destroy usage_message":{"type":"method","name":"usage_message","children":[],"call":["usage << ","names join ","names empty? ","source names ","source label to_s capitalize ","source label to_s ","source label ","Rails Generator Base  sources each ","Rails Generator Base  sources ","source names  join ","source names  empty? ","source source names  ","source source label to_s capitalize  to_s capitalize ","source source label to_s capitalize  to_s ","source source label to_s capitalize  "]}," Rails Generator GemPathSource generator_full_paths":{"type":"method","name":"generator_full_paths","children":[],"call":["mem << ","Dir  [] each ","Dir  [] ","gem full_gem_path + ","gem full_gem_path ","(send\n  (send\n    (const nil :Gem) :cache) :inject\n  (hash)) values inject ","(send\n  (send\n    (const nil :Gem) :cache) :inject\n  (hash)) values ","latest []= ","gem name ","gem version > ","hem version ","gem version ","hem nil? ","latest [] ","Gem  cache inject ","Gem  cache ","latest []  version ","latest []  nil? "]}," Rails Generator GemPathSource each":{"type":"method","name":"each","children":[],"call":["Spec  new "," label ","File  dirname ","File  basename sub ","File  basename "," generator_full_paths each "," generator_full_paths "]}," Rails Generator GemGeneratorSource each":{"type":"method","name":"each","children":[],"call":["Spec  new "," label ","gem full_gem_path ","gem name sub ","gem name ","(send\n  (send\n    (send\n      (const nil :Gem) :cache) :search\n    (regexp\n      (str \"_generator$\")\n      (regopt))) :inject\n  (hash)) values each ","(send\n  (send\n    (send\n      (const nil :Gem) :cache) :search\n    (regexp\n      (str \"_generator$\")\n      (regopt))) :inject\n  (hash)) values ","latest []= ","gem version > ","hem version ","gem version ","hem nil? ","latest [] ","Gem  cache search inject ","Gem  cache search ","Gem  cache ","(send\n  (send\n    (send\n      (const nil :Gem) :cache) :search\n    (lvar :dependency)) :inject\n  (hash)) values each ","(send\n  (send\n    (send\n      (const nil :Gem) :cache) :search\n    (lvar :dependency)) :inject\n  (hash)) values ","Gem Dependency  new ","Gem Requirement  default ","latest []  version ","latest []  nil? ","(send\n  (send\n    (send\n      (const nil :Gem) :cache) :search\n    (lvar :Gem Dependency  new )) :inject\n  (hash)) values each ","(send\n  (send\n    (send\n      (const nil :Gem) :cache) :search\n    (lvar :Gem Dependency  new )) :inject\n  (hash)) values "]}," Rails Generator AbstractGemSource initialize":{"type":"method","name":"initialize","children":[],"call":[]}," ScaffoldGenerator add_options!":{"type":"method","name":"add_options!","children":[],"call":[" options []= "," options ","opt on ","opt separator "]}," ResourceGenerator add_options!":{"type":"method","name":"add_options!","children":[],"call":[" options []= "," options ","opt on ","opt separator "]}," MigrationGenerator get_local_assigns":{"type":"method","name":"get_local_assigns","children":[],"call":["assigns []= ","2 pluralize "," class_name underscore =~ "," class_name underscore "," class_name "," returning "," tap "]}," Rails Plugin evaluate_init_rb":{"type":"method","name":"evaluate_init_rb","children":[],"call":[" eval "," init_path "," binding ","IO  read ","initializer configuration "," silence_warnings "," has_init_file? ","initializer initializer configuration uration "]}," Rails Plugin has_init_file?":{"type":"method","name":"has_init_file?","children":[],"call":["File  file? "," init_path "]}," Rails Plugin has_lib_directory?":{"type":"method","name":"has_lib_directory?","children":[],"call":["File  directory? "," lib_path "]}," Rails Plugin init_path":{"type":"method","name":"init_path","children":[],"call":["File  join "," directory "," classic_init_path "," gem_init_path ","File  file? "]}," Rails Plugin lib_path":{"type":"method","name":"lib_path","children":[],"call":["File  join "," directory "]}," Rails Plugin report_nonexistant_or_empty_plugin!":{"type":"method","name":"report_nonexistant_or_empty_plugin!","children":[],"call":[" raise "," name "]}," Rails Plugin <=>":{"type":"method","name":"<=>","children":[],"call":[" name <=> ","other_plugin name "," name "]}," Rails Plugin loaded?":{"type":"method","name":"loaded?","children":[],"call":[]}," Rails Plugin load":{"type":"method","name":"load","children":[],"call":[" evaluate_init_rb "," report_nonexistant_or_empty_plugin! "," valid? "," loaded? "]}," Rails Plugin load_paths":{"type":"method","name":"load_paths","children":[],"call":[" lib_path "," has_lib_directory? "," report_nonexistant_or_empty_plugin! "," valid? ","(send\n  (array) :tap) flatten ","load_paths << "," app_paths "," has_app_directory? "," tap ","(send nil :returning\n  (array)) flatten "," returning "]}," Rails Plugin valid?":{"type":"method","name":"valid?","children":[],"call":[" has_init_file? "," has_lib_directory? ","File  directory? "," directory "," has_app_directory? "]}," Rails Plugin initialize":{"type":"method","name":"initialize","children":[],"call":["File  basename "]}," Rails Plugin FileSystemLocator locate_plugins_under":{"type":"method","name":"locate_plugins_under","children":[],"call":["plugins concat "," locate_plugins_under ","File  directory? ","plugins << "," create_plugin ","Dir  glob inject ","Dir  glob ","File  join ","Dir  glob sort inject ","Dir  glob sort "," create_plugin s concat "," locate_ create_plugin s_under "," create_plugin s << "," create_ create_plugin  "]}," Rails Plugin FileSystemLocator create_plugin":{"type":"method","name":"create_plugin","children":[],"call":["plugin valid? ","Rails Plugin  new ","Rails Plugin  new  valid? "]}," Rails Plugin FileSystemLocator plugins":{"type":"method","name":"plugins","children":[],"call":["(send\n  (send\n    (send\n      (send\n        (send nil :initializer) :configuration) :plugin_paths) :flatten) :inject\n  (array)) flatten ","plugins concat "," locate_plugins_under "," initializer configuration plugin_paths flatten inject "," initializer configuration plugin_paths flatten "," initializer configuration plugin_paths "," initializer configuration "," initializer "]}," Rails Plugin Locator plugin_names":{"type":"method","name":"plugin_names","children":[],"call":[" plugins map "," plugins "]}," Rails Plugin Locator each":{"type":"method","name":"each","children":[],"call":[" plugins each "," plugins "]}," Rails Plugin Locator plugins":{"type":"method","name":"plugins","children":[],"call":[" raise "," class "]}," Rails Plugin Locator initialize":{"type":"method","name":"initialize","children":[],"call":[]}," Rails Plugin Loader ensure_all_registered_plugins_are_loaded!":{"type":"method","name":"ensure_all_registered_plugins_are_loaded!","children":[],"call":[" raise ","missing_plugins to_sentence "," configuration plugins - "," plugins + "," plugins "," configuration plugins "," configuration "," loaded? ! "," loaded? ","plugin != "," configuration plugins detect "," explicit_plugin_loading_order? ","(send\n  (send nil :plugins) :map) + ","p name to_sym ","p name "," plugins map "," configuration plugins -  to_sentence "]}," Rails Plugin Loader loaded?":{"type":"method","name":"loaded?","children":[],"call":["plugin name == ","plugin_name to_s ","plugin name "," initializer loaded_plugins detect "," initializer loaded_plugins "," initializer "]}," Rails Plugin Loader registered_plugin_names":{"type":"method","name":"registered_plugin_names","children":[],"call":[" configuration plugins map "," configuration plugins "," configuration "]}," Rails Plugin Loader registered_plugins_names_plugin?":{"type":"method","name":"registered_plugins_names_plugin?","children":[],"call":[" registered_plugin_names include? "," registered_plugin_names ","plugin name "]}," Rails Plugin Loader explicitly_registered?":{"type":"method","name":"explicitly_registered?","children":[],"call":[" registered_plugin_names include? ","plugin name "," registered_plugin_names "," explicit_plugin_loading_order? "]}," Rails Plugin Loader explicitly_enabled?":{"type":"method","name":"explicitly_enabled?","children":[],"call":[" explicitly_registered? "," explicit_plugin_loading_order? ! "," explicit_plugin_loading_order? "]}," Rails Plugin Loader registered?":{"type":"method","name":"registered?","children":[],"call":[" registered_plugins_names_plugin? "," explicit_plugin_loading_order? "]}," Rails Plugin Loader explicit_plugin_loading_order?":{"type":"method","name":"explicit_plugin_loading_order?","children":[],"call":[" registered_plugin_names nil? ! "," registered_plugin_names nil? "," registered_plugin_names "]}," Rails Plugin Loader enabled?":{"type":"method","name":"enabled?","children":[],"call":[" registered? "," explicit_plugin_loading_order? ! "," explicit_plugin_loading_order? "]}," Rails Plugin Loader application_lib_index":{"type":"method","name":"application_lib_index","children":[],"call":["$LOAD_PATH index ","File  join "]}," Rails Plugin Loader effective_order_of":{"type":"method","name":"effective_order_of","children":[],"call":[" registered_plugin_names index "," registered_plugin_names ","plugin name "," explicitly_enabled? "]}," Rails Plugin Loader order_plugins":{"type":"method","name":"order_plugins","children":[],"call":[" effective_order_of <=> "," effective_order_of ","plugin_a <=> "," explicitly_enabled? ! "," explicitly_enabled? "," explicit_plugin_loading_order? ! "," explicit_plugin_loading_order? "]}," Rails Plugin Loader should_load?":{"type":"method","name":"should_load?","children":[],"call":["plugin valid? "," enabled? "]}," Rails Plugin Loader configuration":{"type":"method","name":"configuration","children":[],"call":[" initializer configuration "," initializer "]}," Rails Plugin Loader register_plugin_as_loaded":{"type":"method","name":"register_plugin_as_loaded","children":[],"call":[" initializer loaded_plugins << "," initializer loaded_plugins "," initializer "]}," Rails Plugin Loader locate_plugins":{"type":"method","name":"locate_plugins","children":[],"call":["(send\n  (send\n    (send nil :configuration) :plugin_locators) :map) flatten ","locator new plugins ","locator new "," initializer "," configuration plugin_locators map "," configuration plugin_locators "," configuration "]}," Rails Plugin Loader add_plugin_load_paths":{"type":"method","name":"add_plugin_load_paths","children":[],"call":["$LOAD_PATH uniq! ","Dependencies  load_once_paths << ","Dependencies  load_once_paths ","Dependencies  load_paths << ","Dependencies  load_paths ","$LOAD_PATH insert "," application_lib_index + "," application_lib_index ","plugin load_paths each ","plugin load_paths "," plugins each "," plugins ","Rails  configuration reload_plugins? ","Rails  configuration ","ActiveSupport Dependencies  load_once_paths << ","ActiveSupport Dependencies  load_once_paths ","ActiveSupport Dependencies  load_paths << ","ActiveSupport Dependencies  load_paths ","ActiveSupport Dependencies  autoload_once_paths << ","ActiveSupport Dependencies  autoload_once_paths "," configuration reload_plugins? "," configuration ","ActiveSupport Dependencies  autoload_paths << ","ActiveSupport Dependencies  autoload_paths "]}," Rails Plugin Loader load_plugins":{"type":"method","name":"load_plugins","children":[],"call":[" ensure_all_registered_plugins_are_loaded! "," register_plugin_as_loaded ","plugin load "," initializer "," plugins each "," plugins "," configure_engines "]}," Rails Plugin Loader all_plugins":{"type":"method","name":"all_plugins","children":[],"call":[" locate_plugins "]}," Rails Plugin Loader plugins":{"type":"method","name":"plugins","children":[],"call":[" order_plugins ","(send\n  (send nil :all_plugins) :select) sort "," should_load? "," all_plugins select "," all_plugins "]}," Rails Plugin Loader initialize":{"type":"method","name":"initialize","children":[],"call":[]}," Rails Configuration default_plugin_loader":{"type":"method","name":"default_plugin_loader","children":[],"call":[]}," Rails Configuration default_plugin_locators":{"type":"method","name":"default_plugin_locators","children":[],"call":["locators << "]}," Rails Configuration after_initialize_blocks":{"type":"method","name":"after_initialize_blocks","children":[],"call":[]}," Rails Configuration breakpoint_server":{"type":"method","name":"breakpoint_server","children":[],"call":["$stderr puts "]}," Rails Configuration plugins=":{"type":"method","name":"plugins=","children":[],"call":["p to_sym ","plugins map ","plugins nil? "]}," Rails Initializer load_application_initializers":{"type":"method","name":"load_application_initializers","children":[],"call":[" load ","Dir  [] sort each ","Dir  [] sort ","Dir  [] "," configuration root_path "," configuration "," gems_dependencies_loaded "]}," Rails Initializer plugin_loader":{"type":"method","name":"plugin_loader","children":[],"call":[" configuration plugin_loader new "," configuration plugin_loader "," configuration "]}," Rails Initializer add_plugin_load_paths":{"type":"method","name":"add_plugin_load_paths","children":[],"call":[" plugin_loader add_plugin_load_paths "," plugin_loader "]}," RailsFCGIHandler mark_features!":{"type":"method","name":"mark_features!","children":[],"call":["$\" clone "]}," RailsFCGIHandler process_each_request":{"type":"method","name":"process_each_request","children":[],"call":[" close_connection "," raise ","signal message == ","signal message "," restart! "," reload! "," when_ready "," process_request ","provider each_cgi "," throw "," catch ","provider each "]}," start_debugger":{"type":"method","name":"start_debugger","children":[],"call":[" exit "," puts ","Debugger  settings []= ","Debugger  settings ","Debugger  respond_to? ","Debugger  start "," require_library_or_gem "]}," Rails GemPlugin init_path":{"type":"method","name":"init_path","children":[],"call":["File  join "," directory "]}," Rails GemPlugin initialize":{"type":"method","name":"initialize","children":[],"call":["spec name ","File  join ","spec full_gem_path ","gem unpacked_paths first ","gem unpacked_paths ","gem frozen? "]}," Rails Plugin load_about_information":{"type":"method","name":"load_about_information","children":[],"call":["YAML  load ","File  read ","File  exist? ","File  join "]}," Rails Plugin about":{"type":"method","name":"about","children":[],"call":[" load_about_information "]}," Rails Plugin GemLocator plugins":{"type":"method","name":"plugins","children":[],"call":["Rails GemPlugin  new ","deps dependency_order collect ","deps dependency_order ","deps add ","specs empty? ","Gem DependencyList  new "," require ","specs compact! ","File  exist? ","File  join ","spec full_gem_path ","spec loaded_from ","Gem  loaded_specs values select ","Gem  loaded_specs values ","Gem  loaded_specs "," initializer configuration gems map "," initializer configuration gems "," initializer configuration "," initializer ","gem_index [] ","gem_index keys ","memo update ","gem specification "," initializer configuration gems inject ","Gem DependencyList  new  dependency_order collect ","Gem DependencyList  new  dependency_order ","Gem DependencyList  new  add "," initializer configuration gems map  empty? ","gem_index keys  empty? "," initializer configuration gems map  compact! ","gem_index keys  compact! ","Gem  loaded_ initializer configuration gems map  values select ","Gem  loaded_gem_index keys  values select ","Gem  loaded_ initializer configuration gems map  values ","Gem  loaded_gem_index keys  values ","Gem  loaded_ initializer configuration gems map  ","Gem  loaded_gem_index keys  "]}," Rails MongrelServer RailsHandler process":{"type":"method","name":"process","children":[],"call":["STDERR  puts ","rails_error backtrace join ","rails_error backtrace ","rails_error inspect ","Time  now httpdate ","Time  now ","response socket close ","response socket ","cgi out ","ActionController Dispatcher  dispatch ","response body ","cgi default_really_final= ","cgi handler= ","Mongrel CGIWrapper  new ","response socket closed? ","Mongrel CGIWrapper  new  out ","Mongrel CGIWrapper  new  default_really_final= ","Mongrel CGIWrapper  new  handler= "]}," Rails MongrelServer Restart run":{"type":"method","name":"run","children":[],"call":["MongrelServer  send_signal "]}," Rails MongrelServer Restart validate":{"type":"method","name":"validate","children":[],"call":[" valid_exists? ","Dir  chdir "," valid_dir? ","File  expand_path "]}," Rails MongrelServer Restart configure":{"type":"method","name":"configure","children":[],"call":[" options "]}," Rails MongrelServer Stop run":{"type":"method","name":"run","children":[],"call":["Mongrel  send_signal ","File  exist? "," sleep "," exit ","File  exist? ! ","@wait to_i times ","@wait to_i "]}," Rails MongrelServer Stop validate":{"type":"method","name":"validate","children":[],"call":[" valid_exists? ","Dir  chdir "," valid_dir? ","File  expand_path "]}," Rails MongrelServer Stop configure":{"type":"method","name":"configure","children":[],"call":[" options "]}," Rails MongrelServer Start tail":{"type":"method","name":"tail","children":[],"call":[" sleep "," print ","contents length ","f read ","f mtime ","f mtime > ","f seek "," loop ","File  open ","Thread  new ","Time  now ","File  size ","f read  length "]}," Rails MongrelServer Start start_debugger":{"type":"method","name":"start_debugger","children":[],"call":[" exit ","Mongrel  log ","Debugger  settings []= ","Debugger  settings ","Debugger  respond_to? ","Debugger  start "," require_library_or_gem "]}," Rails MongrelServer Start settings":{"type":"method","name":"settings","children":[],"call":["hash [] ","key to_sym ","key == "," instance_variable_get "," config_keys inject "," config_keys "]}," Rails MongrelServer Start config_keys":{"type":"method","name":"config_keys","children":[],"call":[]}," Rails MongrelServer Start load_config":{"type":"method","name":"load_config","children":[],"call":[" failure "," instance_variable_set ","key == "," config_keys include? "," config_keys ","key to_s ","settings each ","settings [] ","Mongrel  log ","YAML  load_file ","key to_s  == "," config_key to_s s include? "," config_key to_s s ","key to_s  to_s ","YAML  load_file  each ","YAML  load_file  [] "]}," Rails MongrelServer Start run":{"type":"method","name":"run","children":[],"call":[" exit ","Mongrel  log "," system ","config defaults [] ","config defaults ","config remove_pid_file ","config stop "," original_args join "," original_args ","RUBY_PLATFORM  =~ ","config needs_restart ","config join "," tail ","config write_pid_file ","config run "," setup_signals "," run_config "," defaults [] "," defaults "," load_plugins "," mount_rails "," uri "," defaults [] == ","dir_handler passthrough_missing_files= ","Mongrel DirHandler  new "," setup_mime_types "," debug "," listener "," daemonize ","File  exist? "," start_debugger ","Rails  version "," defaults []= ","RailsConfigurator  new "," settings ","f write "," settings to_yaml "," open ","File  expand_path ","Mongrel DirHandler  new  passthrough_missing_files= "]}," Rails MongrelServer Start validate":{"type":"method","name":"validate","children":[],"call":[" valid_group? "," valid_user? "," valid_dir? ","File  dirname "," valid_exists? "," valid? ","@prefix [] != ","@prefix [] ","@prefix [] == ","Dir  chdir ","File  expand_path "," load_config "]}," Rails MongrelServer Start configure":{"type":"method","name":"configure","children":[],"call":[" options ","ENV  [] "]}," Rails MongrelServer RailsConfigurator mount_rails":{"type":"method","name":"mount_rails","children":[],"call":[" uri ","Rails MongrelServer RailsHandler  new ","ActionController AbstractRequest  relative_url_root= "," defaults [] "," defaults "," require "," RAILS_ENV  replace ","ENV  []= ","ActionController Base  relative_url_root= "]}," Rails MongrelServer RailsConfigurator setup_mime_types":{"type":"method","name":"setup_mime_types","children":[],"call":["Mongrel DirHandler  add_mime_type ","mime each "," load_mime_map "," defaults [] "," defaults ","Mongrel  log ","Mongrel DirHandler  add_ load_mime_map _type "," load_mime_map  each "," load_ load_mime_map _map "]}," Rails MongrelServer send_signal":{"type":"method","name":"send_signal","children":[],"call":[]}," Rails GemDependency unpack_command":{"type":"method","name":"unpack_command","children":[],"call":["cmd << << ","@requirement to_s ","cmd << ","(str \"unpack\") << ","=  + "," specification version to_s "," specification version "," specification "," requirement "," name ","(str \"unpack\") <<  << << ","(str \"unpack\") <<  << "]}," Rails GemDependency install_command":{"type":"method","name":"install_command","children":[],"call":["cmd << << ","cmd << ","@requirement to_s ","(str \"install\") << "," requirement to_s "," requirement "," name ","(str \"install\") <<  << << ","(str \"install\") <<  << "]}," Rails GemDependency gem_command":{"type":"method","name":"gem_command","children":[],"call":["RUBY_PLATFORM  =~ "]}," Rails GemDependency specification":{"type":"method","name":"specification","children":[],"call":["(send\n  (send\n    (send\n      (const nil :Gem) :source_index) :search\n    (send\n      (const\n        (const nil :Gem) :Dependency) :new\n      (ivar :@name)\n      (ivar :@requirement))) :sort_by) last ","s version ","Gem  source_index search sort_by ","Gem  source_index search ","Gem Dependency  new ","Gem  source_index ","matches last ","@dep version_requirements= ","Gem Requirement  create ","existing_spec version "," raise ","existing_spec full_name ","spec version == ","spec version ","matches any? ","Gem  loaded_specs [] "," name ","Gem  loaded_specs ","matches << ","@@framework_gems [] "," framework_gem? ","Gem  source_index search  last ","@dep Gem Requirement  create = ","Gem  loaded_specs []  version ","Gem  loaded_specs []  full_name ","Gem  source_index search  any? ","Gem  source_index search  << "]}," Rails GemDependency ==":{"type":"method","name":"==","children":[],"call":[" requirement == ","other requirement "," requirement "," name == ","other name "," name ","Gem Dependency  === ","other class "]}," Rails GemDependency unpack_to":{"type":"method","name":"unpack_to","children":[],"call":["file puts "," specification to_yaml "," specification ","File  open ","File  join "," gem_dir ","Gem GemRunner  new run "," unpack_command ","Gem GemRunner  new ","Dir  chdir ","FileUtils  mkdir_p "," write_spec ","Gem Specification  load "," specification loaded_from "]}," Rails GemDependency install":{"type":"method","name":"install","children":[],"call":[" puts "," install_command join "," install_command "," gem_command "," installed? "]}," Rails GemDependency load_paths_added?":{"type":"method","name":"load_paths_added?","children":[],"call":[]}," Rails GemDependency loaded?":{"type":"method","name":"loaded?","children":[],"call":["(send\n  (lvar :gem_lib_files) :&\n  (gvar :$\")) empty? ! ","(send\n  (lvar :gem_lib_files) :&\n  (gvar :$\")) empty? ","gem_lib_files & ","f split [] ","f split ","gem_lib_files map! ","require_paths_regexp match ","gem_files select ","Regexp  new "," specification require_paths * "," specification require_paths "," specification "," specification files "," specification nil? "," vendor_rails? ","Regexp  new  match "," specification files  select "]}," Rails GemDependency frozen?":{"type":"method","name":"frozen?","children":[],"call":[" vendor_gem? "," vendor_rails? "]}," Rails GemDependency load":{"type":"method","name":"load","children":[],"call":[" puts ","$! backtrace each ","$! backtrace ","$! to_s "," require ","@load_paths_added == ","@lib == "," name "]}," Rails GemDependency gem_dir":{"type":"method","name":"gem_dir","children":[],"call":["File  join "," specification full_name "," specification "]}," Rails GemDependency dependencies":{"type":"method","name":"dependencies","children":[],"call":["all_dependencies uniq ","all_dependencies map flatten ","all_dependencies map ","GemDependency  new ","dependency version_requirements ","dependency name "," specification dependencies map "," specification dependencies "," specification "," framework_gem? "," specification nil? ","dependency requirement ","dependency respond_to? ","(send\n  (send\n    (send nil :specification) :dependencies) :reject) map ","dependency type == ","dependency type "," specification dependencies reject "," installed? "]}," Rails GemDependency add_load_paths":{"type":"method","name":"add_load_paths","children":[],"call":["$LOAD_PATH unshift ","File  exist? ","File  join ","unpacked_paths first "," gem ","args << ","@requirement to_s ","unpacked_paths empty? ","Dir  [] "," class unpacked_path "," class "," unpacked_paths ","@spec loaded_from include? ","@spec loaded_from ","Gem  loaded_specs [] "," name ","Gem  loaded_specs "," framework_gem? "," class add_frozen_gem_path "," requirement ","spec activate ","(send\n  (send\n    (const nil :Gem) :source_index) :find) last ","s satisfies_requirement? ","Gem  source_index find ","Gem  source_index ","Gem Dependency  new ","Dir  []  first "," unpacked_paths  first ","Dir  []  empty? "," unpacked_paths  empty? "," Dir  []  ","  unpacked_paths  ","Gem  loaded_specs []  loaded_from include? ","@(send\n  (send\n    (const nil :Gem) :source_index) :find) last  loaded_from include? ","Gem  loaded_specs []  loaded_from ","@(send\n  (send\n    (const nil :Gem) :source_index) :find) last  loaded_from ","Gem  loaded_(send\n  (send\n    (const nil :Gem) :source_index) :find) last s [] ","Gem  loaded_(send\n  (send\n    (const nil :Gem) :source_index) :find) last s ","(send\n  (send\n    (const nil :Gem) :source_index) :find) last  activate "]}," Rails GemDependency initialize":{"type":"method","name":"initialize","children":[],"call":["options [] ","name to_s ","@requirement instance_variable_get first last ","@requirement instance_variable_get first ","@requirement instance_variable_get ","Gem Requirement  create "," require ","Object  const_defined? ","Gem Dependency  new ","Gem Requirement  default ","Gem Requirement  create  instance_variable_get first last ","options []  instance_variable_get first last ","@Gem Requirement  default uirement instance_variable_get first last ","@Gem Requirement  create uirement instance_variable_get first last ","@options [] uirement instance_variable_get first last ","Gem Requirement  create  instance_variable_get first ","options []  instance_variable_get first ","@Gem Requirement  default uirement instance_variable_get first ","@Gem Requirement  create uirement instance_variable_get first ","@options [] uirement instance_variable_get first ","Gem Requirement  create  instance_variable_get ","options []  instance_variable_get ","@Gem Requirement  default uirement instance_variable_get ","@Gem Requirement  create uirement instance_variable_get ","@options [] uirement instance_variable_get "," Gem Requirement  default uire "," Gem Requirement  create uire "," options [] uire "]}," Rails GemDependency unpacked_path":{"type":"method","name":"unpacked_path","children":[],"call":[]}," Rails GemBuilder say":{"type":"method","name":"say","children":[],"call":[]}," Rails GemBuilder initialize":{"type":"method","name":"initialize","children":[],"call":[]}," Rails Configuration default_gems":{"type":"method","name":"default_gems","children":[],"call":[]}," Rails Configuration default_cache_store":{"type":"method","name":"default_cache_store","children":[],"call":[" root_path ","File  exist? "]}," Rails Configuration default_routes_configuration_file":{"type":"method","name":"default_routes_configuration_file","children":[],"call":["File  join "," root_path "]}," Rails Configuration gem":{"type":"method","name":"gem","children":[],"call":["@gems << ","Rails GemDependency  new "]}," Rails Configuration reload_plugins?":{"type":"method","name":"reload_plugins?","children":[],"call":["@reload_plugins ! ! ","@reload_plugins ! "]}," Rails Initializer prepare_dispatcher":{"type":"method","name":"prepare_dispatcher","children":[],"call":["Dispatcher  new send ","Dispatcher  new ","Dispatcher  define_dispatcher_callbacks "," configuration cache_classes "," configuration "," require "," configuration frameworks include? "," configuration frameworks ","Rails  logger ","Dispatcher  run_prepare_callbacks "]}," Rails Initializer initialize_time_zone":{"type":"method","name":"initialize_time_zone","children":[],"call":["ActiveRecord Base  default_timezone= ","ActiveRecord Base  time_zone_aware_attributes= "," configuration frameworks include? "," configuration frameworks "," configuration ","Time  zone_default= "," raise ","Time  send! "," configuration time_zone ","Time  __send__ ","Value assigned to config.time_zone not recognized. + ","Time  Time  send! = ","Time  Time  __send__ = "]}," Rails Initializer initialize_temporary_session_directory":{"type":"method","name":"initialize_temporary_session_directory","children":[],"call":["ActionController Base  session_options []= ","Dir  tmpdir ","File  exist? ","ActionController Base  session_options "," configuration root_path "," configuration "," configuration frameworks include? "," configuration frameworks "]}," Rails Initializer initialize_framework_caches":{"type":"method","name":"initialize_framework_caches","children":[],"call":["ActionController Base  cache_store "," configuration frameworks include? "," configuration frameworks "," configuration "]}," Rails Initializer initialize_cache":{"type":"method","name":"initialize_cache","children":[],"call":["Object  const_set ","ActiveSupport Cache  lookup_store "," configuration cache_store "," configuration "," silence_warnings "," configuration middleware insert_after ","RAILS_CACHE  middleware "," configuration middleware ","RAILS_CACHE  respond_to? "]}," Rails Initializer check_gem_dependencies":{"type":"method","name":"check_gem_dependencies","children":[],"call":[" puts ","gem name ","unloaded_gems each ","unloaded_gems size > ","unloaded_gems size ","g loaded? ","@configuration gems reject ","@configuration gems "," abort ","Gem  path * ","Gem  path ","Gem  ruby ","Gem  ruby_version ","(send\n  (lvar :unloaded_gems) :map) * ","gem requirement ","unloaded_gems map "]}," Rails Initializer load_gems":{"type":"method","name":"load_gems","children":[],"call":["@configuration gems each ","@configuration gems ","gem load "]}," Rails Initializer add_gem_load_paths":{"type":"method","name":"add_gem_load_paths","children":[],"call":["@configuration gems each ","@configuration gems "," require ","@configuration gems empty? ","gem add_load_paths ","Rails GemDependency  add_frozen_gem_path "]}," Rails Initializer install_gem_spec_stubs":{"type":"method","name":"install_gem_spec_stubs","children":[],"call":["Gem  loaded_specs []= ","s version= ","s name= ","Gem Specification  new ","Gem  loaded_specs ","stubs each ","Gem  loaded_specs key? ","stubs reject! "," require ","Rails  vendor_rails? "," abort ","Rails  respond_to? ","s loaded_from= "]}," Rails public_path=":{"type":"method","name":"public_path=","children":[],"call":[]}," Rails public_path":{"type":"method","name":"public_path","children":[],"call":["File  join "," root "]}," Rails version":{"type":"method","name":"version","children":[],"call":[]}," Rails cache":{"type":"method","name":"cache","children":[],"call":[]}," Rails env":{"type":"method","name":"env","children":[],"call":["ActiveSupport StringInquirer  new "," require "]}," Rails root":{"type":"method","name":"root","children":[],"call":["Pathname  new "]}," Rails logger":{"type":"method","name":"logger","children":[],"call":[]}," Rails configuration=":{"type":"method","name":"configuration=","children":[],"call":[]}," Rails configuration":{"type":"method","name":"configuration","children":[],"call":[]}," find_cmd":{"type":"method","name":"find_cmd","children":[],"call":[" abort ","commands join ","File  executable? ","File  join ","dirs_on_path detect ","commands detect ","commands map ","RUBY_PLATFORM  =~ ","ENV  [] to_s split ","ENV  [] to_s ","ENV  [] ","ENV  [] to_s split  detect "]}," Rails GemDependency unpacked_paths":{"type":"method","name":"unpacked_paths","children":[],"call":["Dir  [] ","File  join "," class unpacked_path "," class "]}," PerformanceTestGenerator manifest":{"type":"method","name":"manifest","children":[],"call":["m template ","File  join "," file_name "," class_path ","m directory ","m class_collisions "," class_name "," record "]}," Rails Generator GeneratedAttribute reference?":{"type":"method","name":"reference?","children":[],"call":["(sym :references) include? "," type "]}," Rails VendorGemSourceIndex size":{"type":"method","name":"size","children":[],"call":["@vendor_source_index size + ","@installed_source_index size ","@vendor_source_index size "]}," Rails VendorGemSourceIndex remove_spec":{"type":"method","name":"remove_spec","children":[],"call":["@vendor_source_index remove_spec "]}," Rails VendorGemSourceIndex add_spec":{"type":"method","name":"add_spec","children":[],"call":["@vendor_source_index add_spec "]}," Rails VendorGemSourceIndex each":{"type":"method","name":"each","children":[],"call":["@installed_source_index each ","@vendor_source_index each "]}," Rails VendorGemSourceIndex search":{"type":"method","name":"search","children":[],"call":["@installed_source_index search + ","@vendor_source_index search ","@installed_source_index search "]}," Rails VendorGemSourceIndex find_name":{"type":"method","name":"find_name","children":[],"call":["@installed_source_index find_name + ","@vendor_source_index find_name ","@installed_source_index find_name "]}," Rails VendorGemSourceIndex load_specification":{"type":"method","name":"load_specification","children":[],"call":["YAML  load_file ","File  exist? ","File  join "]}," Rails VendorGemSourceIndex version_for_dir":{"type":"method","name":"version_for_dir","children":[],"call":["Gem Version  new ","matches [] ","(str \"-([^-]+)$\") match ","s match ","d split find ","d split ","(str \"-([^-]+)$\") match  [] "]}," Rails VendorGemSourceIndex refresh!":{"type":"method","name":"refresh!","children":[{"type":"method","name":"full_gem_path","children":[],"asgn":[{"type":"local","name":"path","value":"File  join "},["File  join "]],"call":["File  join "," original_name "," installation_path ","File  directory? ","File  join "," full_name "," installation_path "]}],"call":["Gem SourceIndex  new ","vendor_gems []= ","File  basename ","File  join "," original_name "," installation_path ","File  directory? "," full_name ","spec loaded_from= ","$stderr puts ","(str \"config.gem: Unpacked gem \") + ","spec files= ","v gsub ","Dir  [] map ","Dir  [] ","spec name= ","(str \"^(.*)-[^-]+$\") match [] ","(str \"^(.*)-[^-]+$\") match ","spec require_paths << ","spec require_paths ","File  exist? ","spec require_paths= ","spec version= ","Gem Specification  new ","spec full_name ","spec full_name != "," load_specification "," version_for_dir ","Dir  [] each ","Rails GemDependency  unpacked_path ","s full_name ","s loaded_from empty? ","s loaded_from ","Gem  loaded_specs each ","Gem  loaded_specs ","@installed_source_index refresh! ","s loaded_from to_s empty? ","s loaded_from to_s "," installation_File  join  ","Gem Specification  new  loaded_from= "," load_specification  loaded_from= ","Gem Specification  new  files= "," load_specification  files= ","Gem Specification  new  name= "," load_specification  name= ","spec require_File  join s << ","Gem Specification  new  require_paths << "," load_specification  require_paths << ","spec require_File  join s ","Gem Specification  new  require_paths "," load_specification  require_paths ","spec require_File  join s= ","Gem Specification  new  require_paths= "," load_specification  require_paths= ","Gem Specification  new  version= "," load_specification  version= ","Gem Specification  new  full_name "," load_specification  full_name ","Gem Specification  new  full_name != "," load_specification  full_name != "," load_Gem Specification  new ification "," load_ load_specification ification ","Rails GemDependency  unpacked_File  join  ","Gem  loaded_Gem Specification  new s each ","Gem  loaded_ load_specification s each ","Gem  loaded_Gem Specification  new s ","Gem  loaded_ load_specification s "]}," Rails VendorGemSourceIndex initialize":{"type":"method","name":"initialize","children":[],"call":[" refresh! "]}," Rails VendorGemSourceIndex silence_spec_warnings=":{"type":"method","name":"silence_spec_warnings=","children":[],"call":[]}," Rails VendorGemSourceIndex silence_spec_warnings":{"type":"method","name":"silence_spec_warnings","children":[],"call":[]}," Rails Rack Static file_exist?":{"type":"method","name":"file_exist?","children":[],"call":["File  readable? ","File  file? ","File  join "," Rack Utils  unescape ","@file_server root "]}," Rails Rack Static call":{"type":"method","name":"call","children":[],"call":["@app call ","@file_server call ","env []= "," file_exist? ","FILE_METHODS  include? ","(if\n  (send\n    (lvar :path) :empty?)\n  (str \"index\")\n  (lvar :path)) + "," ActionController Base  page_cache_extension ","path empty? ","env [] ","env [] chomp "," directory_exist? ","(if\n  (send\n    (lvar :env [] chomp ) :empty?)\n  (str \"index\")\n  (lvar :env [] chomp )) + ","env [] chomp  empty? "]}," Rails Rack Static initialize":{"type":"method","name":"initialize","children":[],"call":[" Rack File  new ","File  join "]}," Rails Rack Logger call":{"type":"method","name":"call","children":[],"call":[" print ","contents length ","f mtime ","f read ","f mtime > ","f seek "," File  open ","@app call ","f read  length "]}," Rails Rack Logger initialize":{"type":"method","name":"initialize","children":[],"call":["Time  now "," File  size ","Pathname  new cleanpath ","Pathname  new "]}," Rails Plugin gem_init_path":{"type":"method","name":"gem_init_path","children":[],"call":["File  join "," directory "]}," Rails Plugin classic_init_path":{"type":"method","name":"classic_init_path","children":[],"call":["File  join "," directory "]}," Rails GemDependency hash":{"type":"method","name":"hash","children":[],"call":["@dep hash "]}," Rails GemDependency refresh_spec":{"type":"method","name":"refresh_spec","children":[],"call":[" puts "," name "," framework_gem? "," write_spec "," specification ","Gem Specification  load ","matches first loaded_from ","matches first ","File  exist? ","File  dirname "," spec_filename ","real_gems search ","Gem Dependency  new "," specification version ","Gem  source_index installed_source_index ","Gem  source_index ","real_gems search  first loaded_from ","real_gems search  first ","Gem  source_index installed_source_index  search "]}," Rails GemDependency write_spec":{"type":"method","name":"write_spec","children":[],"call":["file puts ","spec to_yaml ","File  open "," spec_filename "]}," Rails GemDependency requirement":{"type":"method","name":"requirement","children":[],"call":["r == ","Gem Requirement  default ","@dep version_requirements ","req == "," version_requirements ","@dep version_requirements  == "," version_requirements  == ","Gem Requi@dep version_requirements ement  default ","Gem Requi version_requirements ement  default ","@dep ve@dep version_requirements sion_@dep version_requirements equi@dep version_requirements ements ","@dep ve version_requirements sion_ version_requirements equi version_requirements ements ","@dep version_ version_requirements uirements ","@dep version_requirements eq == "," version_requirements eq == "," ve@dep version_requirements sion_@dep version_requirements equi@dep version_requirements ements "," ve version_requirements sion_ version_requirements equi version_requirements ements "," version_ version_requirements uirements "]}," Rails GemDependency name":{"type":"method","name":"name","children":[],"call":["@dep name to_s ","@dep name "]}," Rails GemDependency spec_filename":{"type":"method","name":"spec_filename","children":[],"call":["File  join "," gem_dir "]}," Rails GemDependency vendor_gem?":{"type":"method","name":"vendor_gem?","children":[],"call":["Gem  loaded_specs [] loaded_from include? "," class unpacked_path "," class ","Gem  loaded_specs [] loaded_from ","Gem  loaded_specs [] "," name ","Gem  loaded_specs ","Gem  loaded_specs has_key? ","File  exists? "," unpacked_gem_directory "," specification "]}," Rails GemDependency vendor_rails?":{"type":"method","name":"vendor_rails?","children":[],"call":["Gem  loaded_specs [] loaded_from empty? ","Gem  loaded_specs [] loaded_from ","Gem  loaded_specs [] "," name ","Gem  loaded_specs ","Gem  loaded_specs has_key? "]}," Rails GemDependency framework_gem?":{"type":"method","name":"framework_gem?","children":[],"call":["@@framework_gems has_key? "," name "]}," Rails GemDependency add_frozen_gem_path":{"type":"method","name":"add_frozen_gem_path","children":[],"call":[]}," Gem source_index=":{"type":"method","name":"source_index=","children":[],"call":[]}," Rails Configuration default_i18n":{"type":"method","name":"default_i18n","children":[],"call":["i18n load_path flatten! ","i18n load_path ","i18n load_path << ","Dir  [] ","File  join ","File  exist? ","i18n load_path= ","Rails OrderedOptions  new ","Rails OrderedOptions  new  load_path flatten! ","Rails OrderedOptions  new  load_path ","Rails OrderedOptions  new  load_path << ","Rails OrderedOptions  new  load_path= "]}," Rails Configuration default_dependency_loading":{"type":"method","name":"default_dependency_loading","children":[],"call":[]}," Rails Configuration default_eager_load_paths":{"type":"method","name":"default_eager_load_paths","children":[],"call":["File  directory? ","(send\n  (array\n    (str \"app/models\")\n    (str \"app/controllers\")\n    (str \"app/helpers\")) :map) select "," root_path ","(str \"app/models\") map ","(send\n  (array\n    (str \"app/metal\")\n    (str \"app/models\")\n    (str \"app/controllers\")\n    (str \"app/helpers\")) :map) select ","(str \"app/metal\") map "]}," Rails Configuration threadsafe!":{"type":"method","name":"threadsafe!","children":[],"call":[" action_controller allow_concurrency= "," action_controller "," dependency_loading= "," cache_classes= "," preload_frameworks= "]}," Rails Initializer disable_dependency_loading":{"type":"method","name":"disable_dependency_loading","children":[],"call":["ActiveSupport Dependencies  unhook! "," configuration dependency_loading ! "," configuration dependency_loading "," configuration "," configuration cache_classes "]}," Rails Initializer initialize_i18n":{"type":"method","name":"initialize_i18n","children":[],"call":["I18n  send ","I18n  load_path ","setting == "," configuration i18n each "," configuration i18n "," configuration "]}," Rails Initializer load_application_classes":{"type":"method","name":"load_application_classes","children":[],"call":[" require_dependency ","file sub ","Dir  glob sort each ","Dir  glob sort ","Dir  glob ","Regexp  escape "," configuration eager_load_paths each "," configuration eager_load_paths "," configuration "," configuration cache_classes "," configuration dependency_loading "]}," Rails Initializer load_view_paths":{"type":"method","name":"load_view_paths","children":[],"call":["ActionMailer Base  template_root load ","ActionMailer Base  template_root "," configuration frameworks include? "," configuration frameworks "," configuration ","ActionController Base  view_paths load ","ActionController Base  view_paths ","ActionView PathSet Path  eager_load_templates! "," configuration cache_classes ","ActionMailer Base  view_paths load! ","ActionMailer Base  view_paths ","ActionController Base  view_paths load! "]}," Rails initialized=":{"type":"method","name":"initialized=","children":[],"call":[]}," Rails initialized?":{"type":"method","name":"initialized?","children":[],"call":[]}," MongrelSpawner can_bind_to_custom_address?":{"type":"method","name":"can_bind_to_custom_address?","children":[],"call":[]}," MongrelSpawner spawn":{"type":"method","name":"spawn","children":[],"call":[]}," FcgiSpawner can_bind_to_custom_address?":{"type":"method","name":"can_bind_to_custom_address?","children":[],"call":[]}," FcgiSpawner spawn":{"type":"method","name":"spawn","children":[],"call":[]}," Spawner spawn_all":{"type":"method","name":"spawn_all","children":[],"call":[]}," Spawner record_pid":{"type":"method","name":"record_pid","children":[],"call":["Process  pid ","OPTIONS  [] "]}," RecursiveHTTPFetcher fetch_dir":{"type":"method","name":"fetch_dir","children":[],"call":[" pop_d ","@level > "," fetch "," links ","stream read "," open "," push_d ","File  basename "]}," RecursiveHTTPFetcher fetch":{"type":"method","name":"fetch","children":[],"call":[" download "," fetch_dir ","links == ","l =~ ","links each "]}," RecursiveHTTPFetcher download":{"type":"method","name":"download","children":[],"call":["file write ","stream read ","File  open ","File  join ","File  basename "," open "," puts "]}," RecursiveHTTPFetcher links":{"type":"method","name":"links","children":[],"call":["links << ","File  join ","link =~ ","link sub ","contents scan ","link sub s << ","link sub  =~ ","link sub  sub "]}," RecursiveHTTPFetcher pop_d":{"type":"method","name":"pop_d","children":[],"call":["File  dirname "]}," RecursiveHTTPFetcher push_d":{"type":"method","name":"push_d","children":[],"call":["FileUtils  mkdir_p ","File  join "]}," RecursiveHTTPFetcher ls":{"type":"method","name":"ls","children":[],"call":["(send\n  (ivar :@urls_to_fetch) :collect) flatten "," links ","stream read "," open ","(str \"svn ls \") split map ","(str \"svn ls \") split ","url =~ ","@urls_to_fetch collect "]}," RecursiveHTTPFetcher initialize":{"type":"method","name":"initialize","children":[],"call":["urls_to_fetch to_a ","urls_to_fetch lines ","RUBY_VERSION  >= "]}," Commands Info parse!":{"type":"method","name":"parse!","children":[],"call":[" puts "," Plugin  find info "," Plugin  find ","args each "," options parse! "," options "]}," Commands Info options":{"type":"method","name":"options","children":[],"call":["o define_head ","o banner= ","@base_command script_name ","o set_summary_indent ","OptionParser  new "]}," Commands Info initialize":{"type":"method","name":"initialize","children":[],"call":[]}," Commands Remove parse!":{"type":"method","name":"parse!","children":[],"call":[" Plugin  new uninstall "," Plugin  new ","args each ","@base_command environment root ","@base_command environment "," options parse! "," options ","@base_command environment @base_command environment root  "]}," Commands Remove options":{"type":"method","name":"options","children":[],"call":["o define_head ","o banner= ","@base_command script_name ","o set_summary_indent ","OptionParser  new "]}," Commands Remove initialize":{"type":"method","name":"initialize","children":[],"call":[]}," Commands Update parse!":{"type":"method","name":"parse!","children":[],"call":[" puts "," system ","File  directory? ","args each "," cd ","(send\n  (send\n    (const nil :Dir) :[]\n    (str \"vendor/plugins/*\")) :map) compact ","File  basename ","Dir  [] map ","Dir  [] ","args empty? ","@base_command environment root ","@base_command environment "," options parse! "," options ","(send\n  (send\n    (const nil :Dir) :[]\n    (str \"vendor/plugins/*\")) :map) compact  each ","(send\n  (send\n    (const nil :Dir) :[]\n    (str \"vendor/plugins/*\")) :map) compact  empty? ","@base_command environment @base_command environment root  "]}," Commands Update options":{"type":"method","name":"options","children":[],"call":["o define_head ","o on ","o banner= ","@base_command script_name ","o set_summary_indent ","OptionParser  new "]}," Commands Update initialize":{"type":"method","name":"initialize","children":[],"call":[]}," Commands Install parse!":{"type":"method","name":"parse!","children":[],"call":[" exit "," puts ","e inspect ","args inspect "," Plugin  find install "," Plugin  find ","args each "," determine_install_method ","@base_command environment "," options parse! "," options "," determine_ determine_install_method  ","@base_command @base_command environment  "]}," Commands Install determine_install_method":{"type":"method","name":"determine_install_method","children":[],"call":[" exit "," puts ","@method == ","best != ","@method != ","best == ","@base_command environment best_install_method ","@base_command environment ","@base_command environment best_install_method  != ","@base_command environment best_install_method  == ","@base_command environment @base_command environment best_install_method _install_method "]}," Commands Install options":{"type":"method","name":"options","children":[],"call":["o separator ","@options []= ","o on ","o define_head ","o banner= ","@base_command script_name ","o set_summary_indent ","OptionParser  new "]}," Commands Install initialize":{"type":"method","name":"initialize","children":[],"call":[]}," Commands Discover extract_repository_uri":{"type":"method","name":"extract_repository_uri","children":[],"call":["uri match [] ","uri match "]}," Commands Discover scrape":{"type":"method","name":"scrape","children":[],"call":[" puts ","$! to_s ","dupes << ","Repositories  instance exist? ","Repositories  instance ","dupes include? "," extract_repository_uri ","uri !~ ","uri =~ ","line =~ "," open each "," open "," require "," extract_repository_ extract_repository_uri  "," extract_repository_uri  !~ "," extract_repository_uri  =~ "]}," Commands Discover parse!":{"type":"method","name":"parse!","children":[],"call":["Repositories  instance save ","Repositories  instance "," puts ","@prompt ! ","Repositories  instance add "," throw "," exit ","$stdout puts ","$stdin gets !~ ","$stdin gets ","$stdout print "," catch "," scrape ","args each ","args empty? "," options parse! "," options "]}," Commands Discover options":{"type":"method","name":"options","children":[],"call":["v ! ","o on ","@list ! ","o separator ","o define_head ","o banner= ","@base_command script_name ","o set_summary_indent ","OptionParser  new "]}," Commands Discover initialize":{"type":"method","name":"initialize","children":[],"call":[]}," Commands Unsource parse!":{"type":"method","name":"parse!","children":[],"call":[" puts ","Repositories  instance save ","Repositories  instance ","uri ljust ","Repositories  instance remove ","args each "," options parse! "," options "]}," Commands Unsource options":{"type":"method","name":"options","children":[],"call":[" exit "," puts ","o on_tail ","o separator ","o define_head ","o banner= ","@base_command script_name ","o set_summary_indent ","OptionParser  new "]}," Commands Unsource initialize":{"type":"method","name":"initialize","children":[],"call":[]}," Commands Source parse!":{"type":"method","name":"parse!","children":[],"call":[" puts ","Repositories  instance save ","Repositories  instance ","uri ljust ","Repositories  instance add ","args each "," options parse! "," options "]}," Commands Source options":{"type":"method","name":"options","children":[],"call":["o define_head ","o banner= ","@base_command script_name ","o set_summary_indent ","OptionParser  new "]}," Commands Source initialize":{"type":"method","name":"initialize","children":[],"call":[]}," Commands Sources parse!":{"type":"method","name":"parse!","children":[],"call":[" puts ","repo uri ","Repositories  each "," options parse! "," options "]}," Commands Sources options":{"type":"method","name":"options","children":[],"call":["o on ","o separator ","o define_head ","o banner= ","@base_command script_name ","o set_summary_indent ","OptionParser  new "]}," Commands Sources initialize":{"type":"method","name":"initialize","children":[],"call":[]}," Commands List parse!":{"type":"method","name":"parse!","children":[],"call":[" puts ","(send\n  (send\n    (const nil :Dir) :[]\n    (str \"*\")) :select) each ","File  directory? ","Dir  [] select ","Dir  [] "," cd ","@base_command environment root ","@base_command environment ","plugin to_s ","plugin installed? ! ","plugin installed? ","(send\n  (ivar :@sources) :map) flatten each ","(send\n  (ivar :@sources) :map) flatten ","r plugins ","@sources map ","Repository  new ","@sources map! ","Repositories  instance all ","Repositories  instance ","@sources empty? "," options order! "," options ","(send\n  (ivar :Repositories  instance all ) :map) flatten each ","(send\n  (ivar :Repositories  instance all ) :map) flatten ","Repositories  instance all  map ","Repositories  instance all  map! ","Repositories  instance all  empty? "]}," Commands List options":{"type":"method","name":"options","children":[],"call":["o on ","o separator ","o define_head ","o banner= ","@base_command script_name ","o set_summary_indent ","OptionParser  new "]}," Commands List initialize":{"type":"method","name":"initialize","children":[],"call":[]}," Commands Plugin parse!":{"type":"method","name":"parse!","children":[],"call":[" exit "," puts "," options ","command parse! ","Commands  const_get new ","Commands  const_get ","command capitalize ","command =~ ","general shift "," options parse! "," split_args ","Commands  const_get new  parse! ","general shift  parse! ","Commands  const_get new  capitalize ","general shift  capitalize ","Commands  const_get new  =~ ","general shift  =~ "]}," Commands Plugin split_args":{"type":"method","name":"split_args","children":[],"call":["left << ","args shift ","args [] ","args [] =~ "]}," Commands Plugin options":{"type":"method","name":"options","children":[],"call":["o separator "," exit "," puts ","o on "," environment= ","RailsEnvironment  new ","o define_head ","o banner= ","o set_summary_indent ","OptionParser  new "]}," Commands Plugin environment=":{"type":"method","name":"environment=","children":[],"call":["RailsEnvironment  default= "]}," Commands Plugin initialize":{"type":"method","name":"initialize","children":[],"call":["File  basename ","RailsEnvironment  default root ","RailsEnvironment  default "]}," Repository index":{"type":"method","name":"index","children":[],"call":["RecursiveHTTPFetcher  new ls ","RecursiveHTTPFetcher  new "]}," Repository each":{"type":"method","name":"each","children":[],"call":[" plugins each "," plugins "]}," Repository plugins":{"type":"method","name":"plugins","children":[],"call":["Plugin  new ","File  join ","@plugins map! ","line !~ "," index reject "," index "," puts "]}," Repository initialize":{"type":"method","name":"initialize","children":[],"call":["uri chomp << ","uri chomp "]}," Repositories each":{"type":"method","name":"each","children":[],"call":["@repositories each "]}," Repositories instance":{"type":"method","name":"instance","children":[],"call":[]}," Repositories find_home":{"type":"method","name":"find_home","children":[],"call":["File  expand_path ","ENV  [] ","(str \"HOME\") each "]}," Repositories defaults":{"type":"method","name":"defaults","children":[],"call":[]}," Repositories save":{"type":"method","name":"save","children":[],"call":["f write ","repo uri "," each ","File  open "]}," Repositories load!":{"type":"method","name":"load!","children":[],"call":["Repository  new ","source strip ","(send\n  (send\n    (lvar :contents) :split\n    (regexp\n      (str \"\\\\n\")\n      (regopt))) :reject) map ","line =~ ","contents split reject ","contents split "," defaults ","contents empty? ","File  read ","File  exist? ","(send\n  (send\n    (lvar : defaults ) :split\n    (regexp\n      (str \"\\\\n\")\n      (regopt))) :reject) map ","(send\n  (send\n    (lvar :File  read ) :split\n    (regexp\n      (str \"\\\\n\")\n      (regopt))) :reject) map "," defaults  split reject ","File  read  split reject "," defaults  split ","File  read  split "," defaults  empty? ","File  read  empty? "]}," Repositories find_plugin":{"type":"method","name":"find_plugin","children":[],"call":["plugin name == ","plugin name ","repo each ","@repositories each "]}," Repositories all":{"type":"method","name":"all","children":[],"call":[]}," Repositories exist?":{"type":"method","name":"exist?","children":[],"call":["repo uri == ","repo uri ","@repositories detect "]}," Repositories remove":{"type":"method","name":"remove","children":[],"call":["repo uri == ","repo uri ","@repositories reject! "]}," Repositories add":{"type":"method","name":"add","children":[],"call":["@repositories push last ","@repositories push ","Repository  new ","repo uri == ","repo uri "," find "]}," Repositories initialize":{"type":"method","name":"initialize","children":[],"call":[" load! ","File  expand_path "]}," Plugin rails_env":{"type":"method","name":"rails_env","children":[],"call":["RailsEnvironment  default "]}," Plugin guess_name":{"type":"method","name":"guess_name","children":[],"call":["@name gsub! ","@name =~ ","File  basename ","File  dirname ","@name empty? ","@name == ","File  basename  gsub! ","File  basename  =~ ","File  basename  empty? ","File  basename  == "]}," Plugin svn_command":{"type":"method","name":"svn_command","children":[],"call":[" system "," puts ","options [] ","$verbose ! "," name "," uri "," mkdir_p "," rails_env root "," rails_env "," rails_env  rails_env root  "]}," Plugin install_using_git":{"type":"method","name":"install_using_git","children":[],"call":[" rm_rf "," puts "," system ","options [] ","$verbose ! "," uri ","Dir  chdir "," mkdir_p "," name "," rails_env root "," rails_env "," rails_env  rails_env root  "]}," Plugin install_using_http":{"type":"method","name":"install_using_http","children":[],"call":["fetcher fetch ","fetcher quiet= ","options [] ","RecursiveHTTPFetcher  new "," uri "," puts ","Dir  chdir "," mkdir_p "," rails_env root "," rails_env ","RecursiveHTTPFetcher  new  fetch ","RecursiveHTTPFetcher  new  quiet= "," rails_env  rails_env root  "]}," Plugin install_using_externals":{"type":"method","name":"install_using_externals","children":[],"call":[" install_using_checkout "," rails_env externals= "," rails_env ","externals push "," uri "," rails_env externals "," rails_env  rails_env externals = "," rails_env externals  push "," rails_env  rails_env externals  "]}," Plugin install_using_checkout":{"type":"method","name":"install_using_checkout","children":[],"call":[" svn_command "]}," Plugin install_using_export":{"type":"method","name":"install_using_export","children":[],"call":[" svn_command "]}," Plugin run_uninstall_hook":{"type":"method","name":"run_uninstall_hook","children":[],"call":[" load ","File  exist? "," name "," rails_env root "," rails_env "]}," Plugin run_install_hook":{"type":"method","name":"run_install_hook","children":[],"call":[" load ","File  exist? "," name "," rails_env root "," rails_env "]}," Plugin info":{"type":"method","name":"info","children":[],"call":["FileUtils  rm_rf "," svn_url? "," uri ","stream read "," open ","File  join "," system "," puts "," rails_env root "," rails_env "]}," Plugin uninstall":{"type":"method","name":"uninstall","children":[],"call":[" rails_env externals= "," rails_env "," name == "," name ","externals reject! "," rails_env externals "," puts "," rm_r "," run_uninstall_hook ","File  directory? "," rails_env root "," rails_env  rails_env externals = "," rails_env externals  reject! "," rails_env  rails_env externals  "]}," Plugin install":{"type":"method","name":"install","children":[],"call":[" run_install_hook "," send "," puts "," uri "," name "," installed? "," uninstall ","options [] "," git_url? "," svn_url? ","http == "," rails_env best_install_method? "," rails_env "]}," Plugin installed?":{"type":"method","name":"installed?","children":[],"call":[" uri == "," uri "," rails_env externals detect "," rails_env externals "," rails_env ","File  directory? "," name "," rails_env root "]}," Plugin git_url?":{"type":"method","name":"git_url?","children":[],"call":["@uri =~ "]}," Plugin svn_url?":{"type":"method","name":"svn_url?","children":[],"call":["@uri =~ "]}," Plugin to_s":{"type":"method","name":"to_s","children":[],"call":["@name ljust "]}," Plugin find":{"type":"method","name":"find","children":[],"call":[]}," Plugin initialize":{"type":"method","name":"initialize","children":[],"call":[" guess_name "]}," RailsEnvironment externals=":{"type":"method","name":"externals=","children":[],"call":[" system "," root ","file path ","file flush ","file write ","Tempfile  open ","(send\n  (lvar :items) :map) join ","uri chomp ","name ljust ","items map ","items is_a? ","(send\n  (lvar :(send\n  (lvar :items) :map) join ) :map) join ","(send\n  (lvar :items) :map) join  map ","(send\n  (lvar :items) :map) join  is_a? "]}," RailsEnvironment externals":{"type":"method","name":"externals","children":[],"call":["line strip split ","line strip ","(send\n  (lvar :ext) :reject) map ","line strip == ","ext reject "," root "," use_externals? ","(send\n  (lvar :lines) :reject) map ","lines reject ","ext lines ","ext respond_to? ","(send\n  (lvar :ext lines ) :reject) map ","ext lines  reject ","ext ext lines  "]}," RailsEnvironment best_install_method":{"type":"method","name":"best_install_method","children":[],"call":[" use_checkout? "," use_externals? "," use_svn? "]}," RailsEnvironment use_checkout?":{"type":"method","name":"use_checkout?","children":[],"call":["File  directory? "," root "]}," RailsEnvironment use_externals?":{"type":"method","name":"use_externals?","children":[],"call":["File  directory? "," root "," use_svn? "]}," RailsEnvironment use_svn?":{"type":"method","name":"use_svn?","children":[],"call":["$? success? ","$? nil? ! ","$? nil? "," silence_stderr "," require "]}," RailsEnvironment install":{"type":"method","name":"install","children":[],"call":["plugin install "," puts ","plugin nil? ","Plugins  [] ","Plugin  new ","name_uri_or_plugin =~ ","name_uri_or_plugin is_a? ","Plugins  []  install ","Plugin  new  install ","Plugins  []  nil? ","Plugin  new  nil? ","name_uri_or_Plugins  []  =~ ","name_uri_or_Plugin  new  =~ ","name_uri_or_Plugins  []  is_a? ","name_uri_or_Plugin  new  is_a? "]}," RailsEnvironment default=":{"type":"method","name":"default=","children":[],"call":[]}," RailsEnvironment default":{"type":"method","name":"default","children":[],"call":[]}," RailsEnvironment find":{"type":"method","name":"find","children":[],"call":[]}," RailsEnvironment initialize":{"type":"method","name":"initialize","children":[],"call":[]}," MetalGenerator manifest":{"type":"method","name":"manifest","children":[],"call":["m template ","File  join "," file_name ","m directory "," record "]}," HelperGenerator manifest":{"type":"method","name":"manifest","children":[],"call":["m template ","File  join "," file_name "," class_path ","m directory ","m class_collisions "," class_name "," record "]}," Rails TemplateRunner logger":{"type":"method","name":"logger","children":[],"call":["Rails Generator SimpleLogger  new "," require ","Rails Generator Base  logger "]}," Rails TemplateRunner log":{"type":"method","name":"log","children":[],"call":[" logger log "," logger "]}," Rails TemplateRunner destination_path":{"type":"method","name":"destination_path","children":[],"call":["File  join "," root "]}," Rails TemplateRunner append_file":{"type":"method","name":"append_file","children":[],"call":["file write ","File  open "," destination_path "," destination_ destination_path  "]}," Rails TemplateRunner gsub_file":{"type":"method","name":"gsub_file","children":[],"call":["file write ","File  open ","File  read gsub ","File  read "," destination_path "," destination_ destination_path  "]}," Rails TemplateRunner no?":{"type":"method","name":"no?","children":[],"call":[" yes? ! "," yes? "]}," Rails TemplateRunner yes?":{"type":"method","name":"yes?","children":[],"call":["answer == "," ask downcase "," ask "," ask downcase  == "]}," Rails TemplateRunner in_root":{"type":"method","name":"in_root","children":[],"call":["FileUtils  cd "," root "]}," Rails TemplateRunner inside":{"type":"method","name":"inside","children":[],"call":["block arity == ","block arity ","FileUtils  cd ","FileUtils  mkdir_p ","File  exist? ","File  join "," root "]}," Rails TemplateRunner ask":{"type":"method","name":"ask","children":[],"call":["STDIN  gets strip ","STDIN  gets "," log "]}," Rails TemplateRunner route":{"type":"method","name":"route","children":[],"call":[" gsub_file ","Regexp  escape "," in_root "," log "]}," Rails TemplateRunner freeze!":{"type":"method","name":"freeze!","children":[],"call":[" run "," in_root "," log "]}," Rails TemplateRunner capify!":{"type":"method","name":"capify!","children":[],"call":[" run "," in_root "," log "]}," Rails TemplateRunner rake":{"type":"method","name":"rake","children":[],"call":[" run "," in_root ","options [] "," log "]}," Rails TemplateRunner run_ruby_script":{"type":"method","name":"run_ruby_script","children":[],"call":[" run ","RUBY_PLATFORM  =~ "]}," Rails TemplateRunner run":{"type":"method","name":"run","children":[],"call":[" log ","Dir  pwd "]}," Rails TemplateRunner generate":{"type":"method","name":"generate","children":[],"call":[" run_ruby_script "," in_root ","args map flatten join ","args map flatten ","args map "," log "]}," Rails TemplateRunner initializer":{"type":"method","name":"initializer","children":[],"call":[" file "," log "]}," Rails TemplateRunner rakefile":{"type":"method","name":"rakefile","children":[],"call":[" file "," log "]}," Rails TemplateRunner lib":{"type":"method","name":"lib","children":[],"call":[" file "," log "]}," Rails TemplateRunner vendor":{"type":"method","name":"vendor","children":[],"call":[" file "," log "]}," Rails TemplateRunner git":{"type":"method","name":"git","children":[],"call":["Git  run "," log ","command each ","command to_s ","command is_a? "," in_root "]}," Rails TemplateRunner environment":{"type":"method","name":"environment","children":[],"call":[" append_file ","Array  wrap each ","Array  wrap ","options [] ","(begin\n  (lvar :match)) << "," gsub_file ","Regexp  escape ","options [] nil? "," in_root ","block call "," block_given? ","data ! ","block call  ! "]}," Rails TemplateRunner gem":{"type":"method","name":"gem","children":[],"call":[" environment ","gems_code << ","(send\n  (lvar :options) :inject\n  (array)) sort join ","(send\n  (lvar :options) :inject\n  (array)) sort ","result << ","h [] inspect gsub ","h [] inspect ","h [] ","options inject ","options any? ","options delete "," log "," options delete ironment "]}," Rails TemplateRunner plugin":{"type":"method","name":"plugin","children":[],"call":[" log "," run_ruby_script ","options [] "," in_root ","Git  run "]}," Rails TemplateRunner file":{"type":"method","name":"file","children":[],"call":["f write ","block call "," block_given? ","File  open "," inside ","File  basename ","File  dirname "," log "]}," Rails TemplateRunner load_template":{"type":"method","name":"load_template","children":[],"call":[" raise "," instance_eval "," in_root "," open read "," open "]}," Rails TemplateRunner initialize":{"type":"method","name":"initialize","children":[],"call":[" log "," load_template ","File  expand_path ","File  join ","Dir  pwd ","File  directory? "]}," Rails Svn checkout":{"type":"method","name":"checkout","children":[],"call":[]}," Rails Scm hash_to_parameters":{"type":"method","name":"hash_to_parameters","children":[],"call":[]}," Rails Git run":{"type":"method","name":"run","children":[],"call":[]}," Rails Git clone":{"type":"method","name":"clone","children":[],"call":[]}," AppGenerator create_javascript_files":{"type":"method","name":"create_javascript_files","children":[],"call":["m file ","(str \"prototype\") each "]}," AppGenerator create_rails_image":{"type":"method","name":"create_rails_image","children":[],"call":["m file "]}," AppGenerator create_browser_convention_files":{"type":"method","name":"create_browser_convention_files","children":[],"call":["m file "]}," AppGenerator create_welcome_file":{"type":"method","name":"create_welcome_file","children":[],"call":["m file "]}," AppGenerator create_error_files":{"type":"method","name":"create_error_files","children":[],"call":["m file ","(str \"404\") each "]}," AppGenerator create_dispatch_files":{"type":"method","name":"create_dispatch_files","children":[],"call":["m file "," options [] "," options "]}," AppGenerator create_environment_files":{"type":"method","name":"create_environment_files","children":[],"call":["m file ","m template "," options [] "," options "]}," AppGenerator create_locale_file":{"type":"method","name":"create_locale_file","children":[],"call":["m file "]}," AppGenerator create_initializer_files":{"type":"method","name":"create_initializer_files","children":[],"call":["m template ","ActiveSupport SecureRandom  hex ","m file ","(str \"backtrace_silencers\") each "]}," AppGenerator create_seeds_file":{"type":"method","name":"create_seeds_file","children":[],"call":["m file "]}," AppGenerator create_routes_file":{"type":"method","name":"create_routes_file","children":[],"call":["m file "]}," AppGenerator create_database_configuration_file":{"type":"method","name":"create_database_configuration_file","children":[],"call":["m template "," mysql_socket_location "," options [] == "," options [] "," options "]}," AppGenerator create_test_files":{"type":"method","name":"create_test_files","children":[],"call":["m file "]}," AppGenerator create_script_files":{"type":"method","name":"create_script_files","children":[],"call":["m file "," options [] "," options "," options [] == ","(str \"about\") each "]}," AppGenerator create_public_files":{"type":"method","name":"create_public_files","children":[],"call":[" create_javascript_files "," create_rails_image "," create_browser_convention_files "," create_welcome_file "," create_error_files "," create_dispatch_files "]}," AppGenerator create_log_files":{"type":"method","name":"create_log_files","children":[],"call":["m file ","(str \"server\") each "]}," AppGenerator create_documentation_file":{"type":"method","name":"create_documentation_file","children":[],"call":["m file "]}," AppGenerator create_config_files":{"type":"method","name":"create_config_files","children":[],"call":[" create_environment_files "," create_initializer_files "," create_seeds_file "," create_locale_file "," create_routes_file "," create_database_configuration_file "]}," AppGenerator create_app_files":{"type":"method","name":"create_app_files","children":[],"call":["m file "]}," AppGenerator create_root_files":{"type":"method","name":"create_root_files","children":[],"call":["m file "]}," AppGenerator create_directories":{"type":"method","name":"create_directories","children":[],"call":["m directory ","(str \"app/controllers\") each "]}," AppGenerator after_generate":{"type":"method","name":"after_generate","children":[],"call":["Rails TemplateRunner  new "," options [] "," options "]}," Rails Generator Base after_generate":{"type":"method","name":"after_generate","children":[],"call":[]}," Rails Rack Static directory_exist?":{"type":"method","name":"directory_exist?","children":[],"call":["File  readable? ","File  directory? ","File  join "," Rack Utils  unescape ","@file_server root "]}," Rails Rack Metal call":{"type":"method","name":"call","children":[],"call":["@app call ","result [] to_i == ","result [] to_i ","result [] ","app call ","@metals keys each ","@metals keys ","app call  [] to_i == ","app call  [] to_i ","app call  [] "]}," Rails Rack Metal initialize":{"type":"method","name":"initialize","children":[],"call":[" freeze ","@metals []= "," class metals each "," class metals "," class ","ActiveSupport OrderedHash  new ","ActiveSupport OrderedHash  new  []= "]}," Rails Rack Metal metals":{"type":"method","name":"metals","children":[],"call":[]}," Rails Rack LogTailer tail_log":{"type":"method","name":"tail_log","children":[],"call":["$stdout print ","contents size ","@file read ","mod > ","@file mtime to_f ","@file mtime ","@file seek ","@file read  size ","@file mtime to_f  > "]}," Rails Rack LogTailer call":{"type":"method","name":"call","children":[],"call":[" tail_log ","@app call "]}," Rails Rack LogTailer initialize":{"type":"method","name":"initialize","children":[],"call":[" File  open ","Time  now to_f ","Time  now "," File  size ","Pathname  new cleanpath ","Pathname  new ","Pathname  new cleanPathname  new cleanpath  "]}," Rails Rack Debugger call":{"type":"method","name":"call","children":[],"call":["@app call "]}," Rails Rack Debugger initialize":{"type":"method","name":"initialize","children":[],"call":[" exit "," puts "," Debugger  settings []= "," Debugger  settings "," Debugger  respond_to? "," Debugger  start "," require_library_or_gem ","ARGV  clear "]}," Rails Plugin has_app_directory?":{"type":"method","name":"has_app_directory?","children":[],"call":["File  directory? ","File  join "," directory "]}," Rails Plugin app_paths":{"type":"method","name":"app_paths","children":[],"call":[" metal_path "," controller_path ","File  join "," directory "]}," Rails Plugin locale_files":{"type":"method","name":"locale_files","children":[],"call":["Dir  [] ","File  join "," locale_path "]}," Rails Plugin locale_path":{"type":"method","name":"locale_path","children":[],"call":["File  join "," directory "]}," Rails Plugin routing_file":{"type":"method","name":"routing_file","children":[],"call":["File  join "," directory "]}," Rails Plugin metal_path":{"type":"method","name":"metal_path","children":[],"call":["File  join "," directory "]}," Rails Plugin controller_path":{"type":"method","name":"controller_path","children":[],"call":["File  join "," directory "]}," Rails Plugin view_path":{"type":"method","name":"view_path","children":[],"call":["File  join "," directory "]}," Rails Plugin localized?":{"type":"method","name":"localized?","children":[],"call":[" locale_files any? "," locale_files "]}," Rails Plugin routed?":{"type":"method","name":"routed?","children":[],"call":["File  exist? "," routing_file "]}," Rails Plugin engine?":{"type":"method","name":"engine?","children":[],"call":[" has_app_directory? "]}," Rails Plugin Loader add_engine_view_paths":{"type":"method","name":"add_engine_view_paths","children":[],"call":["ActionMailer Base  view_paths concat ","ActionMailer Base  view_paths "," configuration frameworks include? "," configuration frameworks "," configuration ","ActionController Base  view_paths concat ","ActionController Base  view_paths ","ActionView PathSet  new "," engines collect reverse "," engines collect "," engines ","ActionMailer Base  view_ActionView PathSet  new  concat ","ActionMailer Base  view_ActionView PathSet  new  ","ActionController Base  view_ActionView PathSet  new  concat ","ActionController Base  view_ActionView PathSet  new  "]}," Rails Plugin Loader add_engine_controller_paths":{"type":"method","name":"add_engine_controller_paths","children":[],"call":[" engines collect "," engines ","ActionController Routing  controller_paths "]}," Rails Plugin Loader add_engine_locales":{"type":"method","name":"add_engine_locales","children":[],"call":["locale_files - ","I18n  load_path "," engines select collect reverse flatten "," engines select collect reverse "," engines select collect "," engines select "," engines "," engines select collect reverse flatten  - "]}," Rails Plugin Loader add_engine_routing_configurations":{"type":"method","name":"add_engine_routing_configurations","children":[],"call":["ActionController Routing Routes  add_configuration_file "," engines select collect each "," engines select collect "," engines select "," engines "]}," Rails Plugin Loader configure_engines":{"type":"method","name":"configure_engines","children":[],"call":[" add_engine_view_paths "," add_engine_controller_paths "," add_engine_locales "," add_engine_routing_configurations "," engines any? "," engines "]}," Rails Plugin Loader engine_metal_paths":{"type":"method","name":"engine_metal_paths","children":[],"call":[" engines collect "," engines "]}," Rails Plugin Loader engines":{"type":"method","name":"engines","children":[],"call":[" plugins select "," plugins "]}," Rails GemDependency unpacked_specification_filename":{"type":"method","name":"unpacked_specification_filename","children":[],"call":["File  join "," unpacked_gem_directory "]}," Rails GemDependency unpacked_gem_directory":{"type":"method","name":"unpacked_gem_directory","children":[],"call":["File  join "," specification full_name "," specification "," unpack_base "]}," Rails GemDependency unpack_base":{"type":"method","name":"unpack_base","children":[],"call":["Rails GemDependency  unpacked_path "]}," Rails GemDependency write_specification":{"type":"method","name":"write_specification","children":[],"call":["file puts ","spec to_yaml ","File  open "," unpacked_specification_filename "]}," Rails GemDependency unpack":{"type":"method","name":"unpack","children":[],"call":["dep unpack "," dependencies each "," dependencies ","options [] "," write_specification ","Gem Specification  load "," specification loaded_from "," specification ","Gem GemRunner  new run "," unpack_command ","Gem GemRunner  new ","Dir  chdir "," unpack_base ","FileUtils  mkdir_p "," framework_gem? "," frozen? "]}," Rails GemDependency refresh":{"type":"method","name":"refresh","children":[],"call":[" puts "," name "," framework_gem? "," write_specification "," specification ","Gem Specification  load ","matches first loaded_from ","matches first "," frozen? ","real_gems search ","Gem Dependency  new "," specification version ","Gem  source_index installed_source_index ","Gem  source_index ","Rails VendorGemSourceIndex  silence_spec_warnings= ","real_gems search  first loaded_from ","real_gems search  first ","Gem  source_index installed_source_index  search "]}," Rails GemDependency build":{"type":"method","name":"build","children":[],"call":["dep build "," dependencies each "," dependencies "," puts "," unpacked_gem_directory ","Rails GemBuilder  new build_extensions ","Rails GemBuilder  new ","YAML  load_file "," unpacked_specification_filename ","File  exists? "," built? ! "," built? ","options [] "," specification nil? "," specification "," require "," unpacked_YAML  load_file ification_filename "," YAML  load_file ification nil? "," YAML  load_file ification "]}," Rails GemDependency installed?":{"type":"method","name":"installed?","children":[],"call":["Gem  loaded_specs keys include? "," name ","Gem  loaded_specs keys ","Gem  loaded_specs "]}," Rails GemDependency built?":{"type":"method","name":"built?","children":[],"call":["File  exists? ","File  join ","File  dirname "," unpacked_gem_directory "," specification extensions each "," specification extensions "," specification "," vendor_gem? "," frozen? "]}," Rails GemDependency specification=":{"type":"method","name":"specification=","children":[],"call":[]}," Rails GemDependency from_directory_name":{"type":"method","name":"from_directory_name","children":[],"call":[]}," Rails BacktraceFilterForTestUnit filter_backtrace_with_cleaning":{"type":"method","name":"filter_backtrace_with_cleaning","children":[],"call":["Rails  backtrace_cleaner clean ","Rails  backtrace_cleaner ","backtrace first split ","backtrace first ","backtrace size == ","backtrace size "," filter_backtrace_without_cleaning ","Rails  backtrace first split _cleaner clean ","Rails   filter_backtrace_without_cleaning _cleaner clean ","Rails  backtrace first split _cleaner ","Rails   filter_backtrace_without_cleaning _cleaner ","backtrace first split  first split "," filter_backtrace_without_cleaning  first split ","backtrace first split  first "," filter_backtrace_without_cleaning  first ","backtrace first split  size == "," filter_backtrace_without_cleaning  size == ","backtrace first split  size "," filter_backtrace_without_cleaning  size "," filter_backtrace first split _without_cleaning "," filter_ filter_backtrace_without_cleaning _without_cleaning "]}," Rails BacktraceFilterForTestUnit included":{"type":"method","name":"included","children":[],"call":[]}," Rails BacktraceCleaner add_gem_filters":{"type":"method","name":"add_gem_filters","children":[],"call":["line sub "," add_filter ","Rails GemDependency  unpacked_path sub ","Rails GemDependency  unpacked_path ","Gem  path each ","Gem  path "]}," Rails BacktraceCleaner initialize":{"type":"method","name":"initialize","children":[],"call":["line =~ "," add_silencer ","RAILS_GEMS  any? ","line include? ","ALL_NOISE  any? "," add_gem_filters ","line sub "," add_filter "]}," Rails Configuration default_preload_frameworks":{"type":"method","name":"default_preload_frameworks","children":[],"call":[]}," Rails Configuration default_autoload_once_paths":{"type":"method","name":"default_autoload_once_paths","children":[],"call":[]}," Rails Configuration default_autoload_paths":{"type":"method","name":"default_autoload_paths","children":[],"call":["paths concat "," builtin_directories ","File  directory? ","(send\n  (array\n    (str \"app\")\n    (str \"app/metal\")\n    (str \"app/models\")\n    (str \"app/controllers\")\n    (str \"app/helpers\")\n    (str \"app/services\")\n    (str \"lib\")\n    (str \"vendor\")) :map) select "," root_path ","(str \"app\") map ","Dir  [] "," environment ","File  exists? "]}," Rails Configuration middleware":{"type":"method","name":"middleware","children":[],"call":["ActionController Dispatcher  middleware "," require "]}," Rails Configuration load_once_paths=":{"type":"method","name":"load_once_paths=","children":[],"call":[" autoload_once_paths= ","$stderr puts "]}," Rails Configuration load_once_paths":{"type":"method","name":"load_once_paths","children":[],"call":[" autoload_once_paths ","$stderr puts "]}," Rails Configuration load_paths=":{"type":"method","name":"load_paths=","children":[],"call":[" autoload_paths= ","$stderr puts "]}," Rails Configuration load_paths":{"type":"method","name":"load_paths","children":[],"call":[" autoload_paths ","$stderr puts "]}," Rails Initializer initialize_metal":{"type":"method","name":"initialize_metal","children":[],"call":[" configuration middleware insert_before ","Rails Rack Metal  metals any? ","Rails Rack Metal  metals "," configuration middleware "," configuration "," plugin_loader engine_metal_paths "," plugin_loader ","Rails Rack Metal  metal_paths ","Rails Rack Metal  requested_metals= "," configuration metals "]}," Rails Initializer initialize_database_middleware":{"type":"method","name":"initialize_database_middleware","children":[],"call":[" configuration middleware use "," configuration middleware "," configuration "," configuration middleware insert_before ","ActionController Base  session_store name == ","ActionController Base  session_store name ","ActionController Base  session_store "," configuration frameworks include? "," configuration frameworks ","ActionController Base  session_store == "]}," Rails Initializer check_for_unbuilt_gems":{"type":"method","name":"check_for_unbuilt_gems","children":[],"call":[" abort ","Gem  path * ","Gem  path ","Gem  ruby ","Gem  ruby_version ","(send\n  (lvar :unbuilt_gems) :map) * ","gem requirement ","gem name ","unbuilt_gems map ","unbuilt_gems size > ","unbuilt_gems size ","@configuration gems select reject ","@configuration gems select ","@configuration gems ","(send\n  (lvar :@configuration gems select reject ) :map) * ","@configuration gems select reject  map ","@configuration gems select reject  size > ","@configuration gems select reject  size "]}," Rails Initializer preload_frameworks":{"type":"method","name":"preload_frameworks","children":[],"call":["toplevel load_all! ","toplevel respond_to? ","Object  const_get ","1 upcase ","framework to_s gsub ","framework to_s "," configuration frameworks each "," configuration frameworks "," configuration "," configuration preload_frameworks ","Object  const_get  load_all! ","Object  const_get  respond_to? "]}," Rails backtrace_cleaner":{"type":"method","name":"backtrace_cleaner","children":[],"call":["Rails BacktraceCleaner  new "," require "]}}