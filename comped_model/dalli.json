{" Dalli logger=":{"type":"method","name":"logger=","children":[],"call":[]}," Dalli default_logger":{"type":"method","name":"default_logger","children":[],"call":[]}," Dalli rails_logger":{"type":"method","name":"rails_logger","children":[],"call":[]}," Dalli logger":{"type":"method","name":"logger","children":[],"call":[]}," Dalli Server sasl_authentication":{"type":"method","name":"sasl_authentication","children":[],"call":[" raise ","status == ","Dalli  logger info ","Dalli  logger "," read ","count > ","extras == ","header unpack ","header ! ","socket write ","(const nil :REQUEST) pack ","FORMAT  [] ","mechanism size + ","msg size ","mechanism size ","OPCODES  [] ","sasl name ","sasl start [] ","sasl start "," SASL  new ","content split ","Dalli  logger debug "," username "," init_sasl ","(const\n  (cbase) :SASL) ! ","mechanism bytesize + ","msg bytesize ","mechanism bytesize "," write ","step != ","sasl failed? ","sasl receive ","socket read "," password ","mechanisms include? ! ","mechanisms include? "," read_header unpack "," read_header "," read gsub "," read  unpack ","socket read  unpack "," read  ! ","socket read  ! ","sasl name  size + ","sasl start []  size ","sasl name  size "," SASL  new  name "," SASL  new  start [] "," SASL  new  start "," read  split ","socket read  split "," read gsub  split "," init_ SASL  new  ","sasl name  bytesize + ","sasl start []  bytesize ","sasl name  bytesize "," SASL  new  failed? "," SASL  new  receive ","sasl name s include? ! ","content split  include? ! ","sasl name s include? ","content split  include? "," read_ read  unpack "," read_socket read  unpack "," read_ read  "," read_socket read  "]}," Dalli Server password":{"type":"method","name":"password","children":[],"call":["ENV  [] ","@options [] "]}," Dalli Server username":{"type":"method","name":"username","children":[],"call":["ENV  [] ","@options [] "]}," Dalli Server init_sasl":{"type":"method","name":"init_sasl","children":[],"call":[" require "]}," Dalli Server need_auth?":{"type":"method","name":"need_auth?","children":[],"call":["ENV  [] ","@options [] "]}," Dalli Server longlong":{"type":"method","name":"longlong","children":[],"call":["(send\n  (lvar :a) :<<\n  (int 32)) | ","a << ","a | ","b << "]}," Dalli Server split":{"type":"method","name":"split","children":[],"call":["4294967295 & ","n >> "]}," Dalli Server read":{"type":"method","name":"read","children":[],"call":[" raise ","$! message ","$! class name ","$! class "," down! ","IO  select ","value size == ","value size ","value << ","socket sysread ","count - "," loop ","value bytesize == ","value bytesize ","socket readfull "," failure! ","@sock readfull ","value inspect ","value size != "," connection "," connection sysread "]}," Dalli Server write":{"type":"method","name":"write","children":[],"call":[" raise ","$! class name ","$! class "," down! "," connection write "," connection ","socket write "," failure! ","@sock write "]}," Dalli Server connection":{"type":"method","name":"connection","children":[],"call":[" sasl_authentication ","Dalli Server  need_auth? ","sock setsockopt "," raise ","$! message "," port "," hostname ","sock connect_nonblock ","Socket  pack_sockaddr_in ","addr [] [] ","addr [] ","IO  select ","Socket  new ","Socket  const_get ","Socket  getaddrinfo ","@down_at == ","Time  now to_i ","Time  now "," up! "," down! ","KSocket  open ","Socket  new  setSocket  new opt ","KSocket  open  setKSocket  open opt ","Socket  new  connect_nonblock ","KSocket  open  connect_nonblock ","Socket  pack_Socket  new addr_in ","Socket  pack_KSocket  open addr_in ","Socket  pack_sockSocket  getaddrinfo _in ","Socket  getaddrinfo  [] [] ","Socket  getaddrinfo  [] ","Socket  getSocket  getaddrinfo info "]}," Dalli Server multi_response":{"type":"method","name":"multi_response","children":[],"call":["hash []= "," read ","body_length - - ","body_length - ","body_length - - > ","key_length == ","header unpack "," raise ","header ! "," loop "," deserialize "," read unpack [] "," read unpack "," read_header unpack "," read_header "," read _length == "," read  unpack "," read  ! "," read_ read  unpack "," read_ read  "]}," Dalli Server keyvalue_response":{"type":"method","name":"keyvalue_response","children":[],"call":["hash []= "," read ","body_length - ","body_length - > ","key_length == ","header unpack "," raise ","header ! "," loop "," read_header unpack "," read_header "," read _length == "," read  unpack "," read  ! "," read_ read  unpack "," read_ read  "]}," Dalli Server generic_response":{"type":"method","name":"generic_response","children":[],"call":["data [] ","extras != "," raise ","RESPONSE_CODES  [] ","status != ","status == "," read ","count > ","header unpack ","header ! "," deserialize ","data [] unpack [] ","data [] unpack "," read_header unpack "," read_header "," read  [] "," read  unpack "," read  ! "," read  [] unpack [] "," read  [] unpack "," read_ read  unpack "," read_ read  "]}," Dalli Server cas_response":{"type":"method","name":"cas_response","children":[],"call":["data [] ","extras != "," raise ","RESPONSE_CODES  [] ","status != ","status == "," read ","count > ","header unpack ","header ! "," deserialize ","data [] unpack [] ","data [] unpack "," read_header unpack "," read_header ","data []  [] "," read  [] "," deserialize  [] "," read  unpack "," read  ! ","data []  [] unpack [] "," read  [] unpack [] "," deserialize  [] unpack [] ","data []  [] unpack "," read  [] unpack "," deserialize  [] unpack "," read_ read  unpack "," read_ read  "]}," Dalli Server binary_version":{"type":"method","name":"binary_version","children":[],"call":[" generic_response "," write ","(const nil :REQUEST) pack ","FORMAT  [] ","OPCODES  [] "]}," Dalli Server text_version":{"type":"method","name":"text_version","children":[],"call":[" connection gets =~ "," connection gets "," connection "," write "]}," Dalli Server cas":{"type":"method","name":"cas","children":[],"call":[" cas_response "," write ","(const nil :REQUEST) pack ","FORMAT  [] ","key size ","OPCODES  [] ","key bytesize "," data_cas_response "]}," Dalli Server stats":{"type":"method","name":"stats","children":[],"call":[" keyvalue_response "," write ","(const nil :REQUEST) pack ","FORMAT  [] ","info size ","OPCODES  [] ","info bytesize "]}," Dalli Server replace":{"type":"method","name":"replace","children":[],"call":[" generic_response "," multi? "," write ","(const nil :REQUEST) pack ","FORMAT  [] ","value size + + ","value size + ","key size ","value size ","OPCODES  [] ","value bytesize + + ","value bytesize + ","key bytesize ","value bytesize "," serialize "," under_max_value_size? "," guard_max_value "," cas_response "," sanitize_ttl "," sanitize_ sanitize_ttl  "]}," Dalli Server prepend":{"type":"method","name":"prepend","children":[],"call":[" generic_response "," write ","(const nil :REQUEST) pack ","FORMAT  [] ","value size + ","key size ","value size ","OPCODES  [] ","value bytesize + ","key bytesize ","value bytesize "," write_append_prepend "]}," Dalli Server noop":{"type":"method","name":"noop","children":[],"call":[" multi_response "," write ","(const nil :REQUEST) pack ","FORMAT  [] ","OPCODES  [] "," write_noop "]}," Dalli Server incr":{"type":"method","name":"incr","children":[],"call":[" longlong ","body unpack "," generic_response "," write ","(const nil :REQUEST) pack ","FORMAT  [] ","key size + ","key size ","OPCODES  [] "," split ","key bytesize + ","key bytesize "," raise "," decr_incr "," generic_response  unpack "]}," Dalli Server decr":{"type":"method","name":"decr","children":[],"call":[" longlong ","body unpack "," generic_response "," write ","(const nil :REQUEST) pack ","FORMAT  [] ","key size + ","key size ","OPCODES  [] "," split ","key bytesize + ","key bytesize "," raise "," decr_incr "," generic_response  unpack "]}," Dalli Server delete":{"type":"method","name":"delete","children":[],"call":[" generic_response "," multi? "," write ","(const nil :REQUEST) pack ","FORMAT  [] ","key size ","OPCODES  [] ","key bytesize "]}," Dalli Server append":{"type":"method","name":"append","children":[],"call":[" generic_response "," write ","(const nil :REQUEST) pack ","FORMAT  [] ","value size + ","key size ","value size ","OPCODES  [] ","value bytesize + ","key bytesize ","value bytesize "," write_append_prepend "]}," Dalli Server add":{"type":"method","name":"add","children":[],"call":[" generic_response "," multi? "," write ","(const nil :REQUEST) pack ","FORMAT  [] ","value size + + ","value size + ","key size ","value size ","OPCODES  [] "," raise ","value size > ","value bytesize + + ","value bytesize + ","key bytesize ","value bytesize ","value bytesize > "," serialize "," under_max_value_size? "," guard_max_value "," cas_response "," sanitize_ttl "," sanitize_ sanitize_ttl  "]}," Dalli Server flush":{"type":"method","name":"flush","children":[],"call":[" generic_response "," write ","(const nil :REQUEST) pack ","FORMAT  [] ","OPCODES  [] "]}," Dalli Server set":{"type":"method","name":"set","children":[],"call":[" generic_response "," multi? "," write ","(const nil :REQUEST) pack ","FORMAT  [] ","value size + + ","value size + ","key size ","value size ","OPCODES  [] "," raise ","value size > ","value bytesize + + ","value bytesize + ","key bytesize ","value bytesize ","value bytesize > "," serialize "," under_max_value_size? "," guard_max_value "," cas_response "," sanitize_ttl "," sanitize_ sanitize_ttl  "]}," Dalli Server getkq":{"type":"method","name":"getkq","children":[],"call":[" write ","(const nil :REQUEST) pack ","FORMAT  [] ","key size ","OPCODES  [] ","key bytesize "]}," Dalli Server get":{"type":"method","name":"get","children":[],"call":[" generic_response "," write ","(const nil :REQUEST) pack ","FORMAT  [] ","key size ","OPCODES  [] ","key bytesize ","(and\n  (and\n    (lvar :options)\n    (send\n      (lvar :options) :is_a?\n      (const nil :Hash)))\n  (send\n    (lvar :options) :[]\n    (sym :cache_nils))) ! ! ","(and\n  (and\n    (lvar :options)\n    (send\n      (lvar :options) :is_a?\n      (const nil :Hash)))\n  (send\n    (lvar :options) :[]\n    (sym :cache_nils))) ! ","options [] ","options is_a? "]}," Dalli Server multi?":{"type":"method","name":"multi?","children":[],"call":["Thread  current [] ","Thread  current "]}," Dalli Server down!":{"type":"method","name":"down!","children":[],"call":["$! message ","Time  now to_i ","Time  now "," close "," raise "," port "," hostname ","x set_backtrace ","Dalli NetworkError  new ","$! backtrace ","$! message empty? ! ","$! message empty? ","$! class name ","$! class ","Dalli  logger warn ","Dalli  logger ","(begin\n  (send nil :hostname)) % ","Dalli  logger debug ","Time  now - "," name ","(begin\n  (send nil :name)) % ","Dalli NetworkError  new  set_backtrace "]}," Dalli Server detect_memcached_version":{"type":"method","name":"detect_memcached_version","children":[],"call":[" connection "," close "," raise ","Dalli  logger error ","Dalli  logger ","version < "," text_version "," binary_version "," username ","ENV  [] "," sleep "," text_version  < "," text_ text_version  "," binary_ text_version  "]}," Dalli Server unlock!":{"type":"method","name":"unlock!","children":[],"call":[]}," Dalli Server lock!":{"type":"method","name":"lock!","children":[],"call":[]}," Dalli Server close":{"type":"method","name":"close","children":[],"call":["@sock close "]}," Dalli Server alive?":{"type":"method","name":"alive?","children":[],"call":[" down! ","Dalli  logger info ","dne message "," port "," hostname ","Dalli  logger "," connection ","@down_at == ","Time  now to_i ","Time  now ","@sock closed? ! ","@sock closed? "," connect ","(str \"down_retry_delay not reached for \") % ","Dalli  logger debug ","@last_down_at + - ","@last_down_at + "," options [] "," options ","@last_down_at + >= ","@sock ! ! ","@sock ! "," name "]}," Dalli Server request":{"type":"method","name":"request","children":[],"call":[" down! ","Dalli  logger error ","ex backtrace join ","ex backtrace ","Dalli  logger ","ex message ","ex class name ","ex class "," raise "," send "," port "," hostname "," alive? "," puts ","args first "," verify_state "," name "]}," Dalli Server initialize":{"type":"method","name":"initialize","children":[],"call":["Dalli  logger debug ","Dalli  logger "," detect_memcached_version "," Integer ","attribs split ","DEFAULTS  merge "," request "," connection "," raise ","@version < "," parse_hostname "," detect_memcached_version  < "]}," SASL Plain start":{"type":"method","name":"start","children":[],"call":["(send\n  (send\n    (send nil :preferences) :authzid) :to_s) join "," preferences password "," preferences "," preferences username "," preferences authzid to_s "," preferences authzid "]}," SASL Mechanism receive":{"type":"method","name":"receive","children":[],"call":[]}," SASL Mechanism start":{"type":"method","name":"start","children":[],"call":[" raise "]}," SASL Mechanism failure?":{"type":"method","name":"failure?","children":[],"call":["@state == "]}," SASL Mechanism success?":{"type":"method","name":"success?","children":[],"call":["@state == "]}," SASL Mechanism initialize":{"type":"method","name":"initialize","children":[],"call":[]}," SASL new":{"type":"method","name":"new","children":[],"call":[]}," SASL Preferences want_anonymous?":{"type":"method","name":"want_anonymous?","children":[],"call":[]}," SASL Preferences password":{"type":"method","name":"password","children":[],"call":["ENV  [] "]}," SASL Preferences allow_plaintext?":{"type":"method","name":"allow_plaintext?","children":[],"call":[]}," SASL Preferences has_password?":{"type":"method","name":"has_password?","children":[],"call":[]}," SASL Preferences username":{"type":"method","name":"username","children":[],"call":["ENV  [] "]}," SASL Preferences digest_uri":{"type":"method","name":"digest_uri","children":[],"call":[" raise "]}," SASL Preferences realm":{"type":"method","name":"realm","children":[],"call":[" raise "]}," SASL Preferences authzid":{"type":"method","name":"authzid","children":[],"call":[]}," SASL Anonymous start":{"type":"method","name":"start","children":[],"call":[" preferences username to_s "," preferences username "," preferences "]}," Dalli Ring Entry initialize":{"type":"method","name":"initialize","children":[],"call":[]}," Dalli Ring binary_search":{"type":"method","name":"binary_search","children":[],"call":["idx + ","idx - ","comp > ","comp == ","ary [] value <=> ","ary [] value ","ary [] ","(send\n  (lvar :lower) :+\n  (lvar :upper)) / ","lower + ","lower <= ","ary size - ","ary size ","(send\n  (lvar :lower) :+\n  (lvar :upper)) /  + ","(send\n  (lvar :lower) :+\n  (lvar :upper)) /  - ","ary [] value <=>  > ","ary [] value <=>  == ","(send\n  (lvar :idx + ) :+\n  (lvar :upper)) / ","(send\n  (lvar :lower) :+\n  (lvar :idx - )) / ","(send\n  (lvar :lower) :+\n  (lvar :ary size - )) / ","idx +  + ","idx +  <= "]}," Dalli Ring entry_count_for":{"type":"method","name":"entry_count_for","children":[],"call":["(send\n  (begin\n    (send\n      (send\n        (lvar :total_servers) :*\n        (const nil :POINTS_PER_SERVER)) :*\n      (send\n        (lvar :server) :weight))) :/\n  (send nil :Float\n    (lvar :total_weight))) floor ","(send\n  (send\n    (lvar :total_servers) :*\n    (const nil :POINTS_PER_SERVER)) :*\n  (send\n    (lvar :server) :weight)) / "," Float ","total_servers * * ","server weight ","total_servers * "]}," Dalli Ring hash_for":{"type":"method","name":"hash_for","children":[],"call":["Zlib  crc32 "]}," Dalli Ring threadsafe!":{"type":"method","name":"threadsafe!","children":[],"call":["s extend ","@servers each "]}," Dalli Ring lock":{"type":"method","name":"lock","children":[],"call":["s unlock! ","@servers each ","s lock! "]}," Dalli Ring server_for_key":{"type":"method","name":"server_for_key","children":[],"call":[" raise "," hash_for ","server alive? ","@continuum [] server ","@continuum [] "," class binary_search "," class ","20 times ","@servers first "," binary_search ","@continuum size - ","@continuum size ","entryidx nil? ","entry value > ","entry value ","@continuum bsearch_index "," server_from_continuum ","@continuum [] server  alive? ","@servers first  alive? "," server_from_continuum  alive? ","@continuum [] @continuum [] server  ","@continuum [] @servers first  ","@continuum []  server_from_continuum  ","@@continuum [] server s first ","@@servers first s first ","@ server_from_continuum s first "," class binary_search  nil? "," binary_search  nil? ","@continuum size -  nil? "," @continuum [] server _from_continuum "," @servers first _from_continuum ","  server_from_continuum _from_continuum "]}," Dalli Ring initialize":{"type":"method","name":"initialize","children":[],"call":["options [] != ","options [] "," threadsafe! ","options [] == ","a value <=> ","b value ","a value ","continuum sort ","continuum << ","Dalli Ring Entry  new "," Integer ","hash [] ","Digest SHA1  hexdigest ","server port ","server hostname "," entry_count_for times "," entry_count_for ","servers size ","servers each ","memo + ","srv weight ","servers inject ","servers size > ","continuum sort_by ","server name "," build_continuum "," servers "," servers size > "," servers size ","protocol_implementation new ","servers_arg map ","a  Integer  <=> ","b  Integer  ","a  Integer  ","Digest SHA1  hexdigest  [] "]}," Dalli Threadsafe lock":{"type":"method","name":"lock","children":[],"call":["Monitor  new "]}," Dalli Threadsafe unlock!":{"type":"method","name":"unlock!","children":[],"call":[" lock mon_exit "," lock ","@lock mon_exit "]}," Dalli Threadsafe lock!":{"type":"method","name":"lock!","children":[],"call":[" lock mon_enter "," lock ","@lock mon_enter "]}," Dalli Threadsafe close":{"type":"method","name":"close","children":[],"call":[" lock synchronize "," lock ","@lock synchronize "]}," Dalli Threadsafe alive?":{"type":"method","name":"alive?","children":[],"call":[" lock synchronize "," lock ","@lock synchronize "]}," Dalli Threadsafe request":{"type":"method","name":"request","children":[],"call":[" lock synchronize "," lock ","@lock synchronize "]}," Dalli Client validate_key":{"type":"method","name":"validate_key","children":[],"call":["@options [] "," raise ","key inspect ","key length > ","key length ","key strip size == ","key strip size ","key strip ","key nil? ","key =~ ","key length == ","key ! "," key_with_namespace ","Digest MD5  hexdigest ","key [] ","212 - ","@options [] size ","(or\n  (send nil :namespace)\n  (str \"\")) size "," namespace ","digest_class hexdigest "," key_with_namespace  inspect "," key_with_namespace  length > "," key_with_namespace  length "," key_with_namespace  strip size == "," key_with_namespace  strip size "," key_with_namespace  strip "," key_with_namespace  nil? "," key_with_namespace  =~ "," key_with_namespace  length == "," key_with_namespace  ! ","  key_with_namespace _with_namespace "," key_with_namespace  [] "]}," Dalli Client perform":{"type":"method","name":"perform","children":[],"call":["server request "," ring server_for_key "," ring ","args []= "," validate_key ","key to_s ","key is_a? ! ","key is_a? ","args first ","@ring server_for_key ","Dalli  logger debug ","Dalli  logger ","e message "," key_with_namespace ","e inspect "," servers_in_use << "," servers_in_use ","blk call "," block_given? ","@key_manager validate_key "," ring server_for_key  request ","@ring server_for_key  request "," ring  ring server_for_key _for_key "," ring @ring server_for_key _for_key "," ring server_for_ validate_key  "," ring server_for_key to_s  "," ring server_for_args first  "," ring server_for_ key_with_namespace  "," ring server_for_@key_manager validate_key  "," validate_ validate_key  "," validate_key to_s  "," validate_args first  "," validate_ key_with_namespace  "," validate_@key_manager validate_key  "," validate_key  to_s ","key to_s  to_s ","args first  to_s "," key_with_namespace  to_s ","@key_manager validate_key  to_s "," validate_key  is_a? ! ","key to_s  is_a? ! ","args first  is_a? ! "," key_with_namespace  is_a? ! ","@key_manager validate_key  is_a? ! "," validate_key  is_a? ","key to_s  is_a? ","args first  is_a? "," key_with_namespace  is_a? ","@key_manager validate_key  is_a? ","@ring  ring server_for_key _for_key ","@ring @ring server_for_key _for_key ","@ring server_for_ validate_key  ","@ring server_for_key to_s  ","@ring server_for_args first  ","@ring server_for_ key_with_namespace  ","@ring server_for_@key_manager validate_key  ","  validate_key _with_namespace "," key to_s _with_namespace "," args first _with_namespace ","  key_with_namespace _with_namespace "," @key_manager validate_key _with_namespace ","  ring server_for_key s_in_use << "," @ring server_for_key s_in_use << ","  ring server_for_key s_in_use "," @ring server_for_key s_in_use ","@ validate_key _manager validate_ validate_key  ","@key to_s _manager validate_key to_s  ","@args first _manager validate_args first  ","@ key_with_namespace _manager validate_ key_with_namespace  ","@@key_manager validate_key _manager validate_@key_manager validate_key  "]}," Dalli Client env_servers":{"type":"method","name":"env_servers","children":[],"call":["ENV  [] split ","ENV  [] "]}," Dalli Client deserialize":{"type":"method","name":"deserialize","children":[],"call":[" raise "," Marshal  load ","options [] "]}," Dalli Client serialize":{"type":"method","name":"serialize","children":[],"call":[" Marshal  dump ","value to_s ","options [] "]}," Dalli Client ring":{"type":"method","name":"ring","children":[],"call":["Dalli Ring  new ","Dalli Server  new "," Array map "," Array "," env_servers ","@options merge ","uri port ","uri host ","server_options []= ","uri password ","uri user ","URI  parse ","s =~ ","@servers map ","@options fetch new ","@options fetch ","s start_with? "," protocol_implementation new "," protocol_implementation ","URI  parse  port ","URI  parse  host ","URI  parse  password ","URI  parse  user "]}," Dalli Client close":{"type":"method","name":"close","children":[],"call":["s close ","@ring servers map ","@ring servers ","@ring servers each "]}," Dalli Client stats":{"type":"method","name":"stats","children":[],"call":["memo []= ","s request ","s port ","s hostname "," ring servers inject "," ring servers "," ring ","@ring servers inject ","@ring servers ","values []= ","server request ","server alive? ","server port ","server hostname "," ring servers each ","type to_s ","(nil) include? ! ","(nil) include? ","server name ","server name to_s ","ALLOWED_STAT_KEYS  include? "]}," Dalli Client decr":{"type":"method","name":"decr","children":[],"call":[" perform "," raise ","amt < ","amt to_i ","@options [] ","@options [] to_i "," ttl_or_default ","amt negative? "," check_positive! "]}," Dalli Client incr":{"type":"method","name":"incr","children":[],"call":[" perform "," raise ","amt < ","amt to_i ","@options [] ","@options [] to_i "," ttl_or_default ","amt negative? "," check_positive! "]}," Dalli Client flush_all":{"type":"method","name":"flush_all","children":[],"call":[" flush "]}," Dalli Client flush":{"type":"method","name":"flush","children":[],"call":["s request "," ring servers map "," ring servers "," ring ","delay -@ ","@ring servers map ","@ring servers "]}," Dalli Client prepend":{"type":"method","name":"prepend","children":[],"call":[" perform ","value to_s "]}," Dalli Client append":{"type":"method","name":"append","children":[],"call":[" perform ","value to_s "]}," Dalli Client delete":{"type":"method","name":"delete","children":[],"call":[" perform "," delete_cas "]}," Dalli Client replace":{"type":"method","name":"replace","children":[],"call":[" perform "," serialize ","@options [] ","@options [] to_i "," ttl_or_default "," replace_cas "]}," Dalli Client add":{"type":"method","name":"add","children":[],"call":[" perform "," serialize ","@options [] ","@options [] to_i "," ttl_or_default "]}," Dalli Client set":{"type":"method","name":"set","children":[],"call":[" perform "," serialize ","@options [] ","@options [] to_i "," ttl_or_default "," set_cas "]}," Dalli Client cas":{"type":"method","name":"cas","children":[],"call":[" perform "," serialize ","block call "," deserialize ","value == ","value ! ","@options [] ","@options [] to_i "," cas_core "," ttl_or_default "," deserialize  == "," deserialize  ! "]}," Dalli Client fetch":{"type":"method","name":"fetch","children":[],"call":[" add "," block_given? ","val nil? "," get ","@options [] ","@options [] to_i "," ttl_or_default ","val == ","options merge ","options nil? "," not_found? ","req_options merge ","req_options nil? "," cache_nils "," get  nil? ","@options merge  [] ","@options merge  [] to_i "," get  == ","options merge  merge ","options merge  nil? "," val nil? ? "," val == ? ","req_options merge  merge ","req_options merge  nil? "]}," Dalli Client get_multi":{"type":"method","name":"get_multi","children":[],"call":["memo []= "," deserialize ","values inject ","hash merge! ","s request "," ring servers inject "," ring servers "," ring "," perform ","keys flatten each ","keys flatten "," ring lock ","keys pop ","keys last nil? ","keys last ","keys last is_a? ","keys empty? ","@ring servers inject ","@ring servers ","@ring lock ","Dalli  logger debug ","Dalli  logger ","e message ","values []= "," key_without_namespace ","server request each_pair ","server request ","server alive? "," ring servers each "," servers_in_use= ","e inspect "," servers_in_use each "," servers_in_use ","Set  new ","servers delete ","server multi_response_completed? ","server multi_response_nonblock each ","server multi_response_nonblock ","sock server ","readable each ","server multi_response_abort "," puts ","servers each ","readable nil? ","IO  select ","timeout - ","servers map ","elapsed > ","servers first options [] ","servers first options ","servers first ","Time  now - ","Time  now ","servers empty? ","s sock nil? ","s sock ","servers delete_if "," loop ","server multi_response_start ","server name ","groups keys ","server port ","server hostname ","groups each ","unfound_keys length ","groups delete "," ring server_for_key ","mapped_keys flatten group_by ","mapped_keys flatten "," validate_key ","a to_s ","keys flatten map ","hash []= ","data first "," get_multi_yielder ","Hash  new tap ","Hash  new "," block_given? ","check_keys empty? ","check_keys compact! ","keys flatten compact empty? ","keys flatten compact "," tap ","keys compact! ","keys flatten! "," pipelined_getter process "," pipelined_getter "," ring sock server s inject "," ring  servers_in_use=  inject "," ring groups keys  inject "," ring sock server s "," ring  servers_in_use=  "," ring groups keys  ","@ring sock server s inject ","@ring  servers_in_use=  inject ","@ring groups keys  inject ","@ring sock server s ","@ring  servers_in_use=  ","@ring groups keys  ","sock server  request each_pair ","sock server  request ","sock server  alive? "," ring sock server s each "," ring  servers_in_use=  each "," ring groups keys  each "," sock server s_in_use= ","  servers_in_use= _in_use= "," groups keys _in_use= "," sock server s_in_use each ","  servers_in_use= _in_use each "," groups keys _in_use each "," sock server s_in_use ","  servers_in_use= _in_use "," groups keys _in_use ","sock server s delete "," servers_in_use=  delete ","groups keys  delete ","sock server  multi_response_completed? ","sock server  multi_response_nonblock each ","sock server  multi_response_nonblock ","sock sock server  ","sock server  multi_response_abort ","sock server s each "," servers_in_use=  each ","groups keys  each ","servers first options []  - ","sock server s map "," servers_in_use=  map ","groups keys  map ","Time  now -  > ","servers first keys pop  [] ","sock server s first options [] "," servers_in_use=  first options [] ","groups keys  first options [] ","servers first keys pop  ","sock server s first options "," servers_in_use=  first options ","groups keys  first options ","sock server s first "," servers_in_use=  first ","groups keys  first ","sock server s empty? "," servers_in_use=  empty? ","groups keys  empty? ","sock server s delete_if "," servers_in_use=  delete_if ","groups keys  delete_if ","sock server  multi_response_start ","server multi_response_Time  now  ","sock server  name ","sock server  port ","sock server  hostname ","groups delete  length "," ring sock server _for_key ","keys flatten  empty? ","keys flatten  compact! "]}," Dalli Client get":{"type":"method","name":"get","children":[],"call":[" deserialize ","resp == ","resp ! "," perform ","resp nil? ","Not found == "," perform  == "," perform  ! "," perform  nil? "]}," Dalli Client multi":{"type":"method","name":"multi","children":[],"call":["Thread  current []= ","Thread  current ","Thread  current [] "]}," Dalli Client initialize":{"type":"method","name":"initialize","children":[],"call":[" env_servers "," extend ","options [] == ","options [] ","@ring threadsafe! ","Dalli Ring  new ","Dalli Server  new "," Array map "," Array "," normalize_options "," normalize_servers ","ENV  [] "," validate_servers_arg "," Dalli KeyManager  new "," Dalli ServersArgNormalizer  normalize_servers ","Dalli Ring  new  threadsafe! "]}," ActiveSupport Cache DalliStore escape_key":{"type":"method","name":"escape_key","children":[],"call":["@namespace call ","@namespace is_a? "]}," ActiveSupport Cache DalliStore expires_in":{"type":"method","name":"expires_in","children":[],"call":[" raise ","expires_in is_a? ! ","expires_in is_a? ","options [] "]}," ActiveSupport Cache DalliStore stats":{"type":"method","name":"stats","children":[],"call":["@data stats "]}," ActiveSupport Cache DalliStore clear":{"type":"method","name":"clear","children":[],"call":["@data flush_all "]}," ActiveSupport Cache DalliStore delete_matched":{"type":"method","name":"delete_matched","children":[],"call":[" raise "]}," ActiveSupport Cache DalliStore decrement":{"type":"method","name":"decrement","children":[],"call":[" logger error ","e message "," logger ","@data decr "," escape_key "," log ","response == "," e message "," e ","@data decr  == "]}," ActiveSupport Cache DalliStore increment":{"type":"method","name":"increment","children":[],"call":[" logger error ","e message "," logger ","@data incr "," escape_key "," log ","response == "," e message "," e ","@data incr  == "]}," ActiveSupport Cache DalliStore exist?":{"type":"method","name":"exist?","children":[],"call":[" read nil? ! "," read nil? "," read "]}," ActiveSupport Cache DalliStore delete":{"type":"method","name":"delete","children":[],"call":[" logger error ","e message "," logger ","@data delete "," escape_key "]}," ActiveSupport Cache DalliStore write":{"type":"method","name":"write","children":[],"call":[" logger error ","e message "," logger ","@data send "," expires_in "," escape_key ","options [] ","value to_s ","Marshal  dump ","value to_s  to_s ","Marshal  dump  to_s "]}," ActiveSupport Cache DalliStore read":{"type":"method","name":"read","children":[],"call":[" logger error ","e message "," logger ","@data get "," escape_key ","Marshal  load ","options [] ","value nil? ","Marshal  load  nil? ","@data get  nil? "]}," ActiveSupport Cache DalliStore reset":{"type":"method","name":"reset","children":[],"call":["@data reset ","@pool reset "]}," ActiveSupport Cache DalliStore read_multi":{"type":"method","name":"read_multi","children":[],"call":["results []= ","cache_keys [] ","values each ","@data get_multi ","keys_to_names keys ","cache_keys []= "," escape_key ","names each ","map []= ","names inject ","names pop ","names last is_a? ","names last ","Marshal  load "," escape_key s [] ","@data get_multi  each "," escape_key s []= "]}," ActiveSupport Cache DalliStore initialize":{"type":"method","name":"initialize","children":[],"call":[" extend "," class build_mem_cache ","addresses + "," class ","mem_cache_options delete ","options dup ","addresses extract_options! ","addresses flatten ","addresses first ","addresses first respond_to? ","mem_cache_options [] ","addresses flatten  + ","options dup  delete ","mem_cache_addresses extract_options!  delete ","addresses extract_options!  dup ","addresses extract_addresses extract_options! ! ","addresses flatten  extract_options! ","addresses flatten  flatten ","addresses flatten  first ","addresses flatten  first respond_to? ","options dup  [] ","mem_cache_addresses extract_options!  [] "]}," ActiveSupport Cache DalliStore build_mem_cache":{"type":"method","name":"build_mem_cache","children":[],"call":[]}," ActionDispatch Session DalliStore destroy":{"type":"method","name":"destroy","children":[],"call":["Rails  logger warn ","$! message ","Rails  logger ","@pool delete "," current_session_id "," session_key "," raise "]}," ActionDispatch Session DalliStore set_session":{"type":"method","name":"set_session","children":[],"call":["Rails  logger warn ","$! message ","Rails  logger ","@pool set ","options [] ","env [] "," session_key "," raise ","env []  [] "]}," ActionDispatch Session DalliStore get_session":{"type":"method","name":"get_session","children":[],"call":["Rails  logger warn ","$! message ","Rails  logger ","@pool get "," generate_sid "," session_key ","ex message "," raise ","ex message =~ ","sid empty? ! ","sid empty? "," generate_ generate_sid  "," generate_sid  empty? ! "," generate_sid  empty? "]}," ActionDispatch Session DalliStore reset":{"type":"method","name":"reset","children":[],"call":["@pool reset "]}," ActionDispatch Session DalliStore initialize":{"type":"method","name":"initialize","children":[],"call":["@default_options [] ","Dalli Client  new ","options [] ","(pair\n  (sym :namespace)\n  (str \"rack:session\")) merge ","@default_options [] ! ! ","@default_options [] ! ","(pair\n  (sym :namespace)\n  (str \"rack:session\")) merge  [] ","(pair\n  (sym :namespace)\n  (str \"rack:session\")) merge  [] ! ! ","(pair\n  (sym :namespace)\n  (str \"rack:session\")) merge  [] ! "]}," ActionController Session DalliStore destroy":{"type":"method","name":"destroy","children":[],"call":["@pool delete "," current_session_id ","Rails  logger warn ","$! message ","Rails  logger "]}," ActionController Session DalliStore set_session":{"type":"method","name":"set_session","children":[],"call":["@pool set ","options [] ","env [] ","Rails  logger warn ","$! message ","Rails  logger ","env []  [] "]}," ActionController Session DalliStore get_session":{"type":"method","name":"get_session","children":[],"call":["@pool get "," generate_sid ","Rails  logger warn ","$! message ","Rails  logger "]}," ActionController Session DalliStore initialize":{"type":"method","name":"initialize","children":[],"call":["Dalli Client  new ","@default_options [] ","(pair\n  (sym :namespace)\n  (str \"rack:session\")) merge ","options [] ","Rails  logger debug ","@default_options [] inspect ","Rails  logger ","(pair\n  (sym :namespace)\n  (str \"rack:session\")) merge  [] ","(pair\n  (sym :namespace)\n  (str \"rack:session\")) merge  [] inspect "]}," Dalli Server deserialize":{"type":"method","name":"deserialize","children":[],"call":[" raise ","Marshal  load ","(send\n  (lvar :flags) :&\n  (const nil :FLAG_MARSHALLED)) != ","flags & ","Zlib Inflate  inflate ","(send\n  (lvar :flags) :&\n  (const nil :FLAG_COMPRESSED)) != ","$! message ","Dalli  serializer load ","Dalli  serializer ","(send\n  (lvar :flags) :&\n  (const nil :FLAG_SERIALIZED)) != ","$! message !~ ","Dalli  compressor decompress ","Dalli  compressor "," serializer load "," serializer "," compressor decompress "," compressor "]}," Dalli Server serialize":{"type":"method","name":"serialize","children":[],"call":[" raise ","value bytesize > ","value bytesize ","Zlib Deflate  deflate ","value bytesize >= ","@options [] ","Marshal  dump ","value to_s ","options [] ","exc set_backtrace ","ex backtrace ","Dalli MarshalError  new ","ex message ","Dalli  serializer dump ","Dalli  serializer ","Dalli  compressor compress ","Dalli  compressor ","value bytesize <= ","@options [] ! "," compressor compress "," compressor "," serializer dump "," serializer ","Zlib Deflate  deflate  bytesize > ","value to_s  bytesize > ","Dalli  compressor compress  bytesize > "," compressor compress  bytesize > ","Zlib Deflate  deflate  bytesize ","value to_s  bytesize ","Dalli  compressor compress  bytesize "," compressor compress  bytesize ","Zlib Deflate  deflate  bytesize >= ","value to_s  bytesize >= ","Dalli  compressor compress  bytesize >= "," compressor compress  bytesize >= ","Zlib Deflate  deflate  to_s ","value to_s  to_s ","Dalli  compressor compress  to_s "," compressor compress  to_s ","Dalli MarshalError  new  set_backtrace ","Zlib Deflate  deflate  bytesize <= ","value to_s  bytesize <= ","Dalli  compressor compress  bytesize <= "," compressor compress  bytesize <= "]}," Dalli Server up!":{"type":"method","name":"up!","children":[],"call":["(begin\n  (send nil :hostname)) % "," port "," hostname ","Dalli  logger warn ","Dalli  logger ","Time  now - ","Time  now ","(begin\n  (send nil :name)) % "," name "]}," KSocket readfull":{"type":"method","name":"readfull","children":[],"call":[" raise ","IO  select ","value bytesize == ","value bytesize ","value << "," sysread ","count - "," loop "," kgio_read! "," options [] "," options "," options inspect "," read_nonblock ","String  new ","String  new  bytesize == ","String  new  bytesize ","String  new  << "]}," KSocket open":{"type":"method","name":"open","children":[],"call":[]}," KSocket wait_writable":{"type":"method","name":"wait_writable","children":[],"call":[" raise ","IO  select "]}," KSocket wait_readable":{"type":"method","name":"wait_readable","children":[],"call":[" raise ","IO  select "]}," KSocket kgio_wait_writable":{"type":"method","name":"kgio_wait_writable","children":[],"call":[" raise ","IO  select "," options [] "," options "]}," KSocket kgio_wait_readable":{"type":"method","name":"kgio_wait_readable","children":[],"call":[" raise ","IO  select "," options [] "," options "]}," Dalli Server connect":{"type":"method","name":"connect","children":[],"call":[" failure! "," raise "," up! "," sasl_authentication ","Dalli Server  need_auth? "," version ","KSocket  open "," options [] "," options "," port "," hostname ","Dalli  logger debug ","Dalli  logger "," need_auth? ","AsyncSocket  open ","(const nil :AsyncSocket) ! ","USocket  new ","@hostname =~ ","Process  pid ","KSocket TCP  open ","KSocket UNIX  open "," socket_type == "," socket_type "," name "]}," Dalli Server version":{"type":"method","name":"version","children":[],"call":[" generic_response "," write ","(const nil :REQUEST) pack ","FORMAT  [] ","OPCODES  [] "," write_generic "]}," Dalli Server failure!":{"type":"method","name":"failure!","children":[],"call":[" sleep "," options [] "," options "," down! ","@fail_count >= "," port "," hostname ","Dalli  logger info ","Dalli  logger "," raise "," close ","exception message ","exception class "," reconnect! ","Dalli  logger warn "," name "]}," Dalli Marshal prepend":{"type":"method","name":"prepend","children":[],"call":[" raise "]}," Dalli Marshal append":{"type":"method","name":"append","children":[],"call":[" raise "]}," Dalli Marshal deserialize":{"type":"method","name":"deserialize","children":[],"call":[" raise "," Marshal  load "]}," Dalli Marshal serialize":{"type":"method","name":"serialize","children":[],"call":[" Marshal  dump "]}," SASL DigestMD5 next_nc":{"type":"method","name":"next_nc","children":[],"call":["s length < ","s length ","@nonce_count to_s ","@nonce_count to_s  length < ","@nonce_count to_s  length ","@nonce_count to_@nonce_count to_s  "]}," SASL DigestMD5 response_value":{"type":"method","name":"response_value","children":[],"call":[" hh "," preferences digest_uri "," preferences ","qop downcase == ","qop downcase "," preferences authzid "," h "," preferences password "," preferences realm "," preferences username "," p "]}," SASL DigestMD5 hh":{"type":"method","name":"hh","children":[],"call":["Digest MD5  hexdigest "]}," SASL DigestMD5 h":{"type":"method","name":"h","children":[],"call":["Digest MD5  digest "]}," SASL DigestMD5 generate_nonce":{"type":"method","name":"generate_nonce","children":[],"call":["c =~ "," rand chr "," rand ","nonce length < ","nonce length "," rand chr  =~ "," rand  rand chr hr ","non rand chr e length < ","non rand chr e length "]}," SASL DigestMD5 encode_response":{"type":"method","name":"encode_response","children":[],"call":["(send\n  (lvar :response) :collect) join ","v sub! ","v include? ","response collect "," p "]}," SASL DigestMD5 decode_challenge":{"type":"method","name":"decode_challenge","children":[],"call":[" p ","challenge []= ","key == ","ch == ","state == ","value == ","ch =~ ","text scan "]}," SASL DigestMD5 receive":{"type":"method","name":"receive","children":[],"call":[" encode_response ","response []= "," response_value ","response [] "," preferences digest_uri "," preferences ","c [] "," next_nc "," generate_nonce "," preferences realm "," preferences username ","response [] nil? ","c [] == "," p "," decode_challenge ","message_name == "," en decode_challenge ode_response "," preferen decode_challenge es digest_uri "," preferen decode_challenge es "," decode_challenge  [] "," next_n decode_challenge  "," generate_non decode_challenge e "," preferen decode_challenge es realm "," preferen decode_challenge es username "," decode_challenge  [] == "," de decode_challenge ode_ decode_challenge hallenge "]}," SASL DigestMD5 start":{"type":"method","name":"start","children":[],"call":[" receive "]}," SASL DigestMD5 initialize":{"type":"method","name":"initialize","children":[],"call":[]}," Base64 decode64":{"type":"method","name":"decode64","children":[],"call":[]}," Base64 encode64":{"type":"method","name":"encode64","children":[],"call":[]}," ActionDispatch Session DalliStore session_key":{"type":"method","name":"session_key","children":[],"call":[]}," Client MemcacheClientCompatibility delete":{"type":"method","name":"delete","children":[],"call":[]}," Client MemcacheClientCompatibility get":{"type":"method","name":"get","children":[],"call":["Marshal  load ","bytes [] == ","bytes [] ","value unpack ","value size > ","value size ","options ! ","value is_a? ","value unpack  [] == ","value unpack  [] "]}," Client MemcacheClientCompatibility replace":{"type":"method","name":"replace","children":[],"call":["Dalli  logger error "," caller [] "," caller ","Dalli  logger ","options == "]}," Client MemcacheClientCompatibility add":{"type":"method","name":"add","children":[],"call":["Dalli  logger error "," caller [] "," caller ","Dalli  logger ","options == "]}," Client MemcacheClientCompatibility set":{"type":"method","name":"set","children":[],"call":["Dalli  logger error "," caller [] "," caller ","Dalli  logger ","options == "]}," Client MemcacheClientCompatibility initialize":{"type":"method","name":"initialize","children":[],"call":["Dalli  logger error ","Dalli  logger "]}," Dalli Threadsafe init_threadsafe":{"type":"method","name":"init_threadsafe","children":[],"call":["Monitor  new "]}," Dalli Threadsafe extended":{"type":"method","name":"extended","children":[],"call":[]}," AsyncSocket readfull":{"type":"method","name":"readfull","children":[],"call":["value bytesize == ","value bytesize ","value << "," read ","count - "," loop "]}," AsyncSocket open":{"type":"method","name":"open","children":[],"call":[]}," ActionDispatch Session DalliStore destroy_session":{"type":"method","name":"destroy_session","children":[],"call":["Rails  logger warn ","$! message ","Rails  logger ","@pool delete "," generate_sid ","options [] "," raise "]}," USocket readfull":{"type":"method","name":"readfull","children":[],"call":["value bytesize == ","value bytesize ","value << "," read ","count - "," loop "]}," Dalli Server is_unix_socket?":{"type":"method","name":"is_unix_socket?","children":[],"call":["(match-with-lvasgn\n  (regexp\n    (str \"^/(.+)$\")\n    (regopt))\n  (lvar :string)) ! ! ","(match-with-lvasgn\n  (regexp\n    (str \"^/(.+)$\")\n    (regopt))\n  (lvar :string)) ! "]}," Rack Session Dalli destroy_session":{"type":"method","name":"destroy_session","children":[],"call":[" generate_sid ","options [] ","@pool delete "," with_lock "," generate_sid_with ","dc delete "," with_block "]}," Rack Session Dalli set_session":{"type":"method","name":"set_session","children":[],"call":["@pool set ","expiry + ","expiry nil? ","options [] "," with_lock ","dc set "," ttl "," with_block ","expiry +  + ","options []  + ","expiry +  nil? ","options []  nil? "]}," Rack Session Dalli get_session":{"type":"method","name":"get_session","children":[],"call":[" raise ","sid inspect ","@pool add "," generate_sid ","@pool get "," with_lock ","sid empty? ! ","sid empty? ","dc add "," generate_sid_with ","dc get "," with_block "," generate_sid_with  inspect "," generate_ generate_sid_with  "," generate_sid_with  empty? ! "," generate_sid_with  empty? "," generate_ generate_sid_with _with "]}," Rack Session Dalli generate_sid":{"type":"method","name":"generate_sid","children":[],"call":["@pool get "," loop "," generate_sid_with ","@pool with "]}," Rack Session Dalli initialize":{"type":"method","name":"initialize","children":[],"call":["Dalli Client  new ","options [] ","DEFAULT_OPTIONS  include? ! ","DEFAULT_OPTIONS  include? ","@default_options reject ","@default_options [] "," Dalli Client  new ","Mutex  new ","@pool alive! ","@pool respond_to? ","ConnectionPool  new "," extract_dalli_options "," ttl "," build_data_source "]}," USocket initialize":{"type":"method","name":"initialize","children":[],"call":[" raise "]}," Dalli Server reset_stats":{"type":"method","name":"reset_stats","children":[],"call":[" generic_response "," write ","(const nil :REQUEST) pack ","FORMAT  [] ","reset bytesize ","OPCODES  [] "," write_generic "]}," Dalli Client normalize_options":{"type":"method","name":"normalize_options","children":[],"call":["opts [] ","opts []= ","opts delete ","Dalli  logger warn ","Dalli  logger "," raise ","opts [] inspect ","opts [] to_i ","opts [] respond_to? ! ","opts [] respond_to? "]}," Dalli Client key_without_namespace":{"type":"method","name":"key_without_namespace","children":[],"call":["key sub ","@options [] "," namespace ","Regexp  escape ","@optio namespace  [] "]}," Dalli Client key_with_namespace":{"type":"method","name":"key_with_namespace","children":[],"call":["@options [] "," namespace ","@optio namespace  [] "]}," Dalli Client reset_stats":{"type":"method","name":"reset_stats","children":[],"call":["server request ","server alive? "," ring servers map "," ring servers "," ring "]}," Dalli Server verify_state":{"type":"method","name":"verify_state","children":[],"call":[" failure! ","@pid != ","Process  pid ","RuntimeError  new "," reconnect! ","Dalli  logger info ","Dalli  logger "]}," Rack Session Dalli with_lock":{"type":"method","name":"with_lock","children":[],"call":["@mutex unlock ","@mutex locked? "," warn ","$! inspect ","@mutex lock ","env [] "," raise ","$! message =~ ","$! message "]}," Dalli Server touch":{"type":"method","name":"touch","children":[],"call":[" generic_response "," write ","(const nil :REQUEST) pack ","FORMAT  [] ","key bytesize + ","key bytesize ","OPCODES  [] "," write_generic "," sanitize_ttl "," sanitize_ sanitize_ttl  "]}," Dalli Client touch":{"type":"method","name":"touch","children":[],"call":["resp nil? "," perform ","@options [] to_i ","@options [] "," ttl_or_default "," perform  nil? "]}," Dalli serializer=":{"type":"method","name":"serializer=","children":[],"call":[]}," Dalli serializer":{"type":"method","name":"serializer","children":[],"call":[]}," Dalli compressor=":{"type":"method","name":"compressor=","children":[],"call":[]}," Dalli compressor":{"type":"method","name":"compressor","children":[],"call":[]}," Dalli Server under_max_value_size?":{"type":"method","name":"under_max_value_size?","children":[],"call":["value bytesize <= ","@options [] ","value bytesize ","Dalli  logger warn ","Dalli  logger "]}," Dalli Compressor decompress":{"type":"method","name":"decompress","children":[],"call":[]}," Dalli Compressor compress":{"type":"method","name":"compress","children":[],"call":[]}," Dalli Client servers_in_use=":{"type":"method","name":"servers_in_use=","children":[],"call":["Thread  current []= "," object_id ","Thread  current "]}," Dalli Client servers_in_use":{"type":"method","name":"servers_in_use","children":[],"call":["Thread  current [] "," object_id ","Thread  current "]}," KSocket read_available":{"type":"method","name":"read_available","children":[],"call":["value << "," read_nonblock "," loop "," raise "," kgio_tryread ","String  new ","String  new  << "]}," Dalli Server write_noop":{"type":"method","name":"write_noop","children":[],"call":[" write ","(const nil :REQUEST) pack ","FORMAT  [] ","OPCODES  [] "]}," Dalli Server multi_response_abort":{"type":"method","name":"multi_response_abort","children":[],"call":[" failure! ","RuntimeError  new "]}," Dalli Server multi_response_nonblock":{"type":"method","name":"multi_response_nonblock","children":[],"call":[" failure! ","values []= "," deserialize ","buf slice! ","body_length - - ","body_length - ","body_length - - > ","buf slice! unpack [] ","buf slice! unpack ","buf bytesize >= ","24 + ","buf bytesize ","key_length == ","header unpack ","buf slice ","@multi_buffer << ","@sock read_available "," raise ","@multi_buffer nil? ","pos + + ","pos + ","pos + + + ","buf slice unpack [] ","buf slice unpack ","buf bytesize - >= ","buf bytesize - ","buf slice! s []= ","buf slice s []= ","buf slice! _length == ","buf slice _length == ","buf slice  unpack ","pos + +  + + ","pos + +  + ","pos + +  + + + "]}," Dalli Server multi_response_completed?":{"type":"method","name":"multi_response_completed?","children":[],"call":["@multi_buffer nil? "]}," Dalli Server multi_response_start":{"type":"method","name":"multi_response_start","children":[],"call":[" write_noop "," verify_state ","String  new "]}," Dalli Server compressor":{"type":"method","name":"compressor","children":[],"call":["@options [] "]}," Dalli Server serializer":{"type":"method","name":"serializer","children":[],"call":["@options [] "]}," Dalli Threadsafe multi_response_abort":{"type":"method","name":"multi_response_abort","children":[],"call":["@lock synchronize "]}," Dalli Threadsafe multi_response_nonblock":{"type":"method","name":"multi_response_nonblock","children":[],"call":["@lock synchronize "]}," Dalli Threadsafe multi_response_start":{"type":"method","name":"multi_response_start","children":[],"call":["@lock synchronize "]}," Dalli GzipCompressor decompress":{"type":"method","name":"decompress","children":[],"call":[]}," Dalli GzipCompressor compress":{"type":"method","name":"compress","children":[],"call":[]}," Dalli Client namespace":{"type":"method","name":"namespace","children":[],"call":["@options [] ","@options [] call ","@options [] is_a? ","@options [] to_s ","@options [] call to_s "]}," Dalli Client normalize_servers":{"type":"method","name":"normalize_servers","children":[],"call":["servers split ","servers is_a? ","server split ","server is_a? "," Array flat_map "," Array "]}," Dalli Server guard_max_value":{"type":"method","name":"guard_max_value","children":[],"call":["Dalli  logger warn ","value bytesize ","@options [] ","Dalli  logger ","value bytesize <= ","Dalli  logger error "," raise "]}," Dalli Server send_multiget":{"type":"method","name":"send_multiget","children":[],"call":[" write ","req << ","(const nil :REQUEST) pack ","FORMAT  [] ","key bytesize ","OPCODES  [] ","keys each ","String  new ","String  new  << "]}," Dalli Server name":{"type":"method","name":"name","children":[],"call":[" port "," hostname "," socket_type == "," socket_type "]}," Dalli Server data_cas_response":{"type":"method","name":"data_cas_response","children":[],"call":[" deserialize ","data [] ","data [] unpack [] ","data [] unpack "," raise ","RESPONSE_CODES  [] ","status != ","status == "," read ","count > ","header unpack ","header ! "," read_header unpack "," read_header "," deserialize  [] "," read  [] "," deserialize  [] unpack [] "," read  [] unpack [] "," deserialize  [] unpack "," read  [] unpack "," read  unpack "," read  ! "," read_ read  unpack "," read_ read  "]}," Dalli Client get_multi_yielder":{"type":"method","name":"get_multi_yielder","children":[],"call":["servers delete ","server multi_response_completed? "," key_without_namespace ","server multi_response_nonblock each_pair ","server multi_response_nonblock ","sock server ","readable each ","server multi_response_abort ","server name ","Dalli  logger debug ","Dalli  logger ","servers each ","readable nil? ","IO  select ","timeout - ","servers map ","elapsed > ","servers first options [] ","servers first options ","servers first ","Time  now - ","Time  now ","servers empty? ","s sock nil? ","s sock ","servers delete_if "," loop "," perform_multi_response_start ","groups keys "," make_multi_get_requests ","unfound_keys length ","groups delete "," groups_for_keys "," ring lock "," ring ","keys empty? "," perform "," raise ","s multi_response_abort ","e inspect "," multi_yielder_loop ","sock server s delete "," perform_multi_response_start  delete ","groups keys  delete "," multi_yielder_loop  delete ","sock server  multi_response_completed? ","sock server  multi_response_nonblock each_pair ","sock server  multi_response_nonblock ","sock sock server  ","sock server  multi_response_abort ","sock server  name ","sock server s each "," perform_multi_response_start  each ","groups keys  each "," multi_yielder_loop  each ","servers first options []  - ","sock server s map "," perform_multi_response_start  map ","groups keys  map "," multi_yielder_loop  map ","Time  now -  > ","sock server s first options [] "," perform_multi_response_start  first options [] ","groups keys  first options [] "," multi_yielder_loop  first options [] ","sock server s first options "," perform_multi_response_start  first options ","groups keys  first options "," multi_yielder_loop  first options ","sock server s first "," perform_multi_response_start  first ","groups keys  first "," multi_yielder_loop  first ","sock server s empty? "," perform_multi_response_start  empty? ","groups keys  empty? "," multi_yielder_loop  empty? ","sock server s delete_if "," perform_multi_response_start  delete_if ","groups keys  delete_if "," multi_yielder_loop  delete_if "," perform_multi_response_Time  now  "," groups_for_keys  keys ","groups delete  length "," groups_for_keys  delete ","  groups_for_keys _for_keys "]}," Dalli Client perform_multi_response_start":{"type":"method","name":"perform_multi_response_start","children":[],"call":["servers delete ","Dalli  logger debug ","Dalli  logger ","e inspect ","server multi_response_start ","server alive? ","servers each ","deleted include? ","servers delete_if ","deleted append "," raise ","s multi_response_abort ","s sock nil? ","s sock "," abort_multi_response "]}," Dalli Client make_multi_get_requests":{"type":"method","name":"make_multi_get_requests","children":[],"call":["server port ","server hostname ","Dalli  logger debug ","Dalli  logger ","e inspect ","server request ","groups each ","server name "]}," Dalli Client mapped_keys":{"type":"method","name":"mapped_keys","children":[],"call":[" validate_key ","a to_s ","keys flatten map ","keys flatten ","keys_array map! ","keys flatten  map! "]}," Dalli Client groups_for_keys":{"type":"method","name":"groups_for_keys","children":[],"call":["Dalli  logger debug ","Dalli  logger "," ring server_for_key "," ring "," mapped_keys flatten group_by "," mapped_keys flatten "," mapped_keys ","keys group_by "," validate_key ","a to_s ","keys map! ","keys flatten! "," ring keys_grouped_by_server ","@key_manager validate_key "]}," Dalli Client with":{"type":"method","name":"with","children":[],"call":[]}," Dalli Client version":{"type":"method","name":"version","children":[],"call":["values []= ","server request ","server alive? ","server port ","server hostname "," ring servers each "," ring servers "," ring ","server name ","server name to_s "]}," Dalli Client delete_cas":{"type":"method","name":"delete_cas","children":[],"call":[" perform "]}," Dalli Client replace_cas":{"type":"method","name":"replace_cas","children":[],"call":[" perform ","@options [] to_i ","@options [] "," ttl_or_default "]}," Dalli Client set_cas":{"type":"method","name":"set_cas","children":[],"call":[" perform ","@options [] to_i ","@options [] "," ttl_or_default "]}," Dalli Client get_multi_cas":{"type":"method","name":"get_multi_cas","children":[],"call":["hash []= "," get_multi_yielder ","Hash  new tap ","Hash  new "," block_given? "," tap "," pipelined_getter process "," pipelined_getter "]}," Dalli Client get_cas":{"type":"method","name":"get_cas","children":[],"call":[" block_given? ","value == ","value ! "," perform "]}," Dalli Server parse_hostname":{"type":"method","name":"parse_hostname","children":[],"call":["res [] ","str match "," Integer "," raise ","hostnam =~ ","res [] == ","res nil? ","str match  [] ","str match  [] == ","str match  nil? "]}," Dalli Server read_header":{"type":"method","name":"read_header","children":[],"call":[" raise "," read "]}," Dalli Server sanitize_ttl":{"type":"method","name":"sanitize_ttl","children":[],"call":["Time  now to_i + ","Time  now to_i ","Time  now ","Dalli  logger debug ","Dalli  logger ","ttl > ","now + ","ttl_as_i > ","ttl_as_i <= ","ttl to_i ","Time  Time  now to_i  to_i + ","Time  Time  now to_i  to_i ","Time  Time  now to_i  ","Time  now to_i  + ","ttl to_i  > ","ttl to_i  <= "]}," Dalli Server write_generic":{"type":"method","name":"write_generic","children":[],"call":[" generic_response "," write "]}," Dalli Server write_append_prepend":{"type":"method","name":"write_append_prepend","children":[],"call":[" write_generic ","(const nil :REQUEST) pack ","FORMAT  [] ","value bytesize + ","key bytesize ","value bytesize ","OPCODES  [] "]}," Dalli Server decr_incr":{"type":"method","name":"decr_incr","children":[],"call":["body unpack first ","body unpack "," generic_response "," write ","(const nil :REQUEST) pack ","FORMAT  [] ","key bytesize + ","key bytesize ","OPCODES  [] "," split "," sanitize_ttl "," generic_response  unpack first "," generic_response  unpack "]}," Dalli Client alive!":{"type":"method","name":"alive!","children":[],"call":[" ring server_for_key "," ring "]}," Rack Session Dalli ttl":{"type":"method","name":"ttl","children":[],"call":["expire_after + ","expire_after nil? "]}," Rack Session Dalli with_block":{"type":"method","name":"with_block","children":[],"call":["@mutex unlock ","@mutex locked? "," warn ","$! inspect "," raise ","$! message =~ ","$! message ","@pool with ","@mutex lock ","env [] ","$ERROR_INFO inspect ","(str \"undefined class\") match? ","$ERROR_INFO message "]}," Rack Session Dalli generate_sid_with":{"type":"method","name":"generate_sid_with","children":[],"call":["dc get "," generate_sid "," generate_sid_super ","client get "," loop "," memcached_key_from_sid ","Rack Session SessionId  new ","raw_sid is_a? "," generate_ generate_sid  "," generate_ generate_sid_super  "," generate_Rack Session SessionId  new  "," generate_ generate_sid _super "," generate_ generate_sid_super _super "," generate_Rack Session SessionId  new _super "," memcached_key_from_ generate_sid  "," memcached_key_from_ generate_sid_super  "," memcached_key_from_Rack Session SessionId  new  "," memcached_ memcached_key_from_sid _from_sid ","raw_ generate_sid  is_a? ","raw_ generate_sid_super  is_a? ","raw_Rack Session SessionId  new  is_a? "," generate_sid  is_a? "]}," Rack Session Dalli extract_dalli_options":{"type":"method","name":"extract_dalli_options","children":[],"call":["mopts []= ","mopts key? ","popts []= ","mopts delete ","mopts [] ","DEFAULT_DALLI_OPTIONS  merge ","DEFAULT_OPTIONS  key? ","options reject ","options [] "," raise "," retrieve_pool_options ","client_options delete "," retrieve_client_options ","DEFAULT_DALLI_OPTIONS  merge  []= ","DEFAULT_DALLI_OPTIONS  merge  key? ","DEFAULT_DALLI_OPTIONS  merge  delete ","DEFAULT_DALLI_OPTIONS  merge  [] "," retrieve_client_options  delete "," retrieve_ retrieve_client_options  "]}," Rack Session Dalli delete_session":{"type":"method","name":"delete_session","children":[],"call":[" destroy_session ","req env "," generate_sid_with ","options [] ","dc delete "," memcached_key_from_sid "," with_dalli_client "," memcached_ memcached_key_from_sid _from_sid "]}," Rack Session Dalli write_session":{"type":"method","name":"write_session","children":[],"call":[" set_session ","req env ","dc set "," ttl ","options [] "," memcached_key_from_sid "," with_dalli_client "," memcached_ memcached_key_from_sid _from_sid "]}," Rack Session Dalli find_session":{"type":"method","name":"find_session","children":[],"call":[" get_session ","req env "," create_sid_with_empty_session ","existing_session nil? "," existing_session_for_sid "," with_dalli_client "," existing_session_for_sid  nil? ","  existing_session_for_sid _for_sid "]}," UNIX open":{"type":"method","name":"open","children":[],"call":[]}," UNIX initialize":{"type":"method","name":"initialize","children":[],"call":[" raise "]}," TCP open":{"type":"method","name":"open","children":[],"call":[]}," KSocket included":{"type":"method","name":"included","children":[],"call":[]}," KSocket InstanceMethods read_available":{"type":"method","name":"read_available","children":[],"call":["value << "," read_nonblock ","String  new "," loop ","String  new  << "]}," KSocket InstanceMethods readfull":{"type":"method","name":"readfull","children":[],"call":[" raise ","safe_options inspect ","(sym :username) include? "," options reject "," options ","IO  select "," options [] ","value bytesize == ","value bytesize ","value << "," read_nonblock ","count - ","String  new "," options inspect "," loop ","String  new  bytesize == ","String  new  bytesize ","String  new  << "]}," TCPSocketOptions setsockopts":{"type":"method","name":"setsockopts","children":[],"call":["sock setsockopt ","options [] "]}," Dalli Server reconnect!":{"type":"method","name":"reconnect!","children":[],"call":[" raise "," sleep "," options [] "," options "," close "]}," Dalli Client ttl_or_default":{"type":"method","name":"ttl_or_default","children":[],"call":[" raise ","(or\n  (lvar :ttl)\n  (send\n    (ivar :@options) :[]\n    (sym :expires_in))) to_i ","@options [] "]}," Dalli Client cas_core":{"type":"method","name":"cas_core","children":[],"call":[" perform "," ttl_or_default ","always_set ! ","value nil? ","value == ","value ! "]}," Dalli Client cas!":{"type":"method","name":"cas!","children":[],"call":[" cas_core "]}," Dalli Socket UNIX open":{"type":"method","name":"open","children":[],"call":[]}," Dalli Socket TCP open":{"type":"method","name":"open","children":[],"call":[]}," Dalli Socket SSLSocket options":{"type":"method","name":"options","children":[],"call":[" io options "," io "]}," Dalli Socket InstanceMethods safe_options":{"type":"method","name":"safe_options","children":[],"call":["(sym :username) include? "," options reject "," options "]}," Dalli Socket InstanceMethods read_available":{"type":"method","name":"read_available","children":[],"call":[" raise "," safe_options inspect "," safe_options ","value << ","result == "," read_nonblock "," loop "," +@ "," logged_options inspect "," logged_options ","WAIT_RCS  include? "," +@  << "," read_nonblock  == "]}," Dalli Socket InstanceMethods readfull":{"type":"method","name":"readfull","children":[],"call":["value bytesize == ","value bytesize "," raise "," safe_options inspect "," safe_options ","value << ","IO  select "," options [] "," options ","result == "," read_nonblock ","count - "," loop "," +@ "," append_to_buffer? ","String  new ","count + "," +@  bytesize == ","String  new  bytesize == "," +@  bytesize ","String  new  bytesize "," +@  << ","String  new  << "," read_nonblock  == "]}," Dalli Protocol Binary parse_hostname":{"type":"method","name":"parse_hostname","children":[],"call":[" Integer ","res [] "," raise ","hostnam start_with? ","res [] == ","res nil? ","str match ","str match  [] ","str match  [] == ","str match  nil? "]}," Dalli Protocol Binary sasl_authentication":{"type":"method","name":"sasl_authentication","children":[],"call":[" raise ","status == ","Dalli  logger info ","Dalli  logger "," read ","count > ","extras == "," read_header unpack "," read_header "," write ","(const nil :REQUEST) pack ","FORMAT  [] ","mechanism bytesize + ","msg bytesize ","mechanism bytesize ","OPCODES  [] "," password "," username ","mechanisms include? ","content split ","Dalli  logger debug "," read tr ","content split  include? "," read  split "," read tr  split "]}," Dalli Protocol Binary password":{"type":"method","name":"password","children":[],"call":["ENV  [] ","@options [] "]}," Dalli Protocol Binary username":{"type":"method","name":"username","children":[],"call":["ENV  [] ","@options [] "]}," Dalli Protocol Binary need_auth?":{"type":"method","name":"need_auth?","children":[],"call":["ENV  [] ","@options [] "]}," Dalli Protocol Binary split":{"type":"method","name":"split","children":[],"call":["4294967295 & ","n >> "]}," Dalli Protocol Binary connect":{"type":"method","name":"connect","children":[],"call":[" failure! "," raise "," up! "," version "," sasl_authentication "," need_auth? ","Dalli Socket TCP  open "," options "," port "," hostname ","Dalli Socket UNIX  open "," socket_type == "," socket_type ","Process  pid "," name ","Dalli  logger debug ","Dalli  logger "," authenticate_connection "," require_auth? "," memcached_socket ","@connection_manager establish_connection "]}," Dalli Protocol Binary read_header":{"type":"method","name":"read_header","children":[],"call":[" raise "," read "]}," Dalli Protocol Binary read":{"type":"method","name":"read","children":[],"call":[" failure! ","@sock readfull "," finish_request! "," start_request! "]}," Dalli Protocol Binary write":{"type":"method","name":"write","children":[],"call":[" failure! ","@sock write "," finish_request! "," start_request! "]}," Dalli Protocol Binary multi_response":{"type":"method","name":"multi_response","children":[],"call":["hash []= "," deserialize "," read ","body_length - - ","body_length - ","body_length - - > "," read unpack1 ","key_length == "," read_header unpack "," read_header "," loop "," read _length == "]}," Dalli Protocol Binary keyvalue_response":{"type":"method","name":"keyvalue_response","children":[],"call":["hash []= "," read ","body_length - ","body_length - > ","key_length == "," read_header unpack "," read_header "," loop "," read _length == "]}," Dalli Protocol Binary cas_response":{"type":"method","name":"cas_response","children":[],"call":[" raise ","RESPONSE_CODES  [] ","status != ","status == "," read ","count > "," read_header unpack "," read_header "]}," Dalli Protocol Binary generic_response":{"type":"method","name":"generic_response","children":[],"call":[" deserialize ","data byteslice ","data bytesize - ","data bytesize ","data byteslice unpack1 "," raise ","RESPONSE_CODES  [] ","status != ","status == "," read ","count > "," read_header unpack "," read_header "," read  byteslice "," read  bytesize - "," read  bytesize "," read  byteslice unpack1 "]}," Dalli Protocol Binary sanitize_ttl":{"type":"method","name":"sanitize_ttl","children":[],"call":["now + ","Dalli  logger debug ","Dalli  logger ","ttl_as_i > ","Time  now to_i ","Time  now ","ttl_as_i <= ","ttl to_i ","Time  now to_i  + ","ttl to_i  > ","Time  Time  now to_i  to_i ","Time  Time  now to_i  ","ttl to_i  <= "]}," Dalli Protocol Binary guard_max_value":{"type":"method","name":"guard_max_value","children":[],"call":[" raise ","value bytesize ","@options [] ","value bytesize <= "]}," Dalli Protocol Binary data_cas_response":{"type":"method","name":"data_cas_response","children":[],"call":[" deserialize ","data [] ","data [] unpack1 "," raise ","RESPONSE_CODES  [] ","status != ","status == "," read ","count > "," read_header unpack "," read_header "," deserialize  [] "," read  [] "," deserialize  [] unpack1 "," read  [] unpack1 "]}," Dalli Protocol Binary deserialize":{"type":"method","name":"deserialize","children":[],"call":[" raise ","$! message ","(str \"uninitialized constant\") match? ","(str \"undefined class|marshal data too short\") match? ","(str \"needs to have method `_load'|exception class/object expected|instance of IO needed|incompatible marshal file format\") match? "," serializer load "," serializer ","(send\n  (lvar :flags) :&\n  (const nil :FLAG_SERIALIZED)) != ","flags & "," compressor decompress "," compressor ","(send\n  (lvar :flags) :&\n  (const nil :FLAG_COMPRESSED)) != ","@value_compressor retrieve ","@ serializer load _compressor retrieve ","@ compressor decompress _compressor retrieve ","@@value_compressor retrieve _compressor retrieve "]}," Dalli Protocol Binary serialize":{"type":"method","name":"serialize","children":[],"call":[" compressor compress "," compressor ","value bytesize >= ","@options [] ","value bytesize ","options [] "," raise ","exc set_backtrace ","ex backtrace ","Dalli MarshalError  new ","ex message "," serializer dump "," serializer ","value to_s ","@value_compressor store "," compressor compress  bytesize >= ","value to_s  bytesize >= "," compressor compress  bytesize ","value to_s  bytesize ","Dalli MarshalError  new  set_backtrace "," compressor compress  to_s ","value to_s  to_s ","@ compressor compress _compressor store ","@value to_s _compressor store "]}," Dalli Protocol Binary gat":{"type":"method","name":"gat","children":[],"call":[" generic_response ","(and\n  (and\n    (lvar :options)\n    (send\n      (lvar :options) :is_a?\n      (const nil :Hash)))\n  (send\n    (lvar :options) :[]\n    (sym :cache_nils))) ! ! ","(and\n  (and\n    (lvar :options)\n    (send\n      (lvar :options) :is_a?\n      (const nil :Hash)))\n  (send\n    (lvar :options) :[]\n    (sym :cache_nils))) ! ","options [] ","options is_a? "," write ","(const nil :REQUEST) pack ","FORMAT  [] ","key bytesize + ","key bytesize ","OPCODES  [] "," sanitize_ttl ","TtlSanitizer  sanitize ","@response_processor generic_response "," cache_nils? ","RequestFormatter  standard_request "," response_processor generic_response "," response_processor "," response_processor get "," sanitize_ sanitize_ttl  "," sanitize_TtlSanitizer  sanitize  ","RequestFormatter  standard_(const nil :REQUEST) pack uest ","RequestFormatter  standard_RequestFormatter  standard_request uest "]}," Dalli Protocol Binary touch":{"type":"method","name":"touch","children":[],"call":[" write_generic ","(const nil :REQUEST) pack ","FORMAT  [] ","key bytesize + ","key bytesize ","OPCODES  [] "," sanitize_ttl ","TtlSanitizer  sanitize ","RequestFormatter  standard_request ","@response_processor generic_response "," write "," response_processor generic_response "," response_processor "," sanitize_ sanitize_ttl  "," sanitize_TtlSanitizer  sanitize  "]}," Dalli Protocol Binary version":{"type":"method","name":"version","children":[],"call":[" write_generic ","(const nil :REQUEST) pack ","FORMAT  [] ","OPCODES  [] ","RequestFormatter  standard_request ","@response_processor generic_response "," write "," response_processor generic_response "," response_processor "," response_processor version "]}," Dalli Protocol Binary cas":{"type":"method","name":"cas","children":[],"call":[" data_cas_response "," write ","(const nil :REQUEST) pack ","FORMAT  [] ","key bytesize ","OPCODES  [] ","@response_processor data_cas_response ","RequestFormatter  standard_request "," response_processor data_cas_response "," response_processor ","RequestFormatter  standard_(const nil :REQUEST) pack uest ","RequestFormatter  standard_RequestFormatter  standard_request uest "]}," Dalli Protocol Binary reset_stats":{"type":"method","name":"reset_stats","children":[],"call":[" write_generic ","(const nil :REQUEST) pack ","FORMAT  [] ","reset bytesize ","OPCODES  [] ","RequestFormatter  standard_request ","@response_processor generic_response "," write "," response_processor generic_response "," response_processor "," response_processor reset "]}," Dalli Protocol Binary stats":{"type":"method","name":"stats","children":[],"call":[" keyvalue_response "," write ","(const nil :REQUEST) pack ","FORMAT  [] ","info bytesize ","OPCODES  [] ","@response_processor multi_with_keys_response ","RequestFormatter  standard_request "," response_processor multi_with_keys_response "," response_processor "," response_processor stats ","RequestFormatter  standard_(const nil :REQUEST) pack uest ","RequestFormatter  standard_RequestFormatter  standard_request uest "]}," Dalli Protocol Binary prepend":{"type":"method","name":"prepend","children":[],"call":[" write_append_prepend "," quiet? "]}," Dalli Protocol Binary append":{"type":"method","name":"append","children":[],"call":[" write_append_prepend "," quiet? "]}," Dalli Protocol Binary noop":{"type":"method","name":"noop","children":[],"call":[" multi_response "," write_noop ","@response_processor multi_with_keys_response "," response_processor multi_with_keys_response "," response_processor "," response_processor consume_all_responses_until_noop "]}," Dalli Protocol Binary write_noop":{"type":"method","name":"write_noop","children":[],"call":[" write ","(const nil :REQUEST) pack ","FORMAT  [] ","OPCODES  [] ","RequestFormatter  standard_request ","RequestFormatter  standard_(const nil :REQUEST) pack uest ","RequestFormatter  standard_RequestFormatter  standard_request uest "]}," Dalli Protocol Binary write_generic":{"type":"method","name":"write_generic","children":[],"call":[" generic_response "," write ","@response_processor generic_response "]}," Dalli Protocol Binary write_append_prepend":{"type":"method","name":"write_append_prepend","children":[],"call":[" write_generic ","(const nil :REQUEST) pack ","FORMAT  [] ","value bytesize + ","key bytesize ","value bytesize ","OPCODES  [] ","RequestFormatter  standard_request ","@response_processor no_body_response "," quiet? "," write "," response_processor no_body_response "," response_processor "]}," Dalli Protocol Binary incr":{"type":"method","name":"incr","children":[],"call":[" decr_incr "," quiet? "]}," Dalli Protocol Binary decr":{"type":"method","name":"decr","children":[],"call":[" decr_incr "," quiet? "]}," Dalli Protocol Binary decr_incr":{"type":"method","name":"decr_incr","children":[],"call":["body unpack1 "," generic_response "," write ","(const nil :REQUEST) pack ","FORMAT  [] ","key bytesize + ","key bytesize ","OPCODES  [] "," split "," sanitize_ttl ","TtlSanitizer  sanitize ","@response_processor decr_incr_response ","RequestFormatter  decr_incr_request "," quiet? "," response_processor decr_incr_response "," response_processor "," response_processor decr_incr "," generic_response  unpack1 ","RequestFormatter  decr_incr_(const nil :REQUEST) pack uest "]}," Dalli Protocol Binary flush":{"type":"method","name":"flush","children":[],"call":[" generic_response "," write ","(const nil :REQUEST) pack ","FORMAT  [] ","OPCODES  [] ","@response_processor generic_response ","RequestFormatter  standard_request ","@response_processor no_body_response "," quiet? "," response_processor no_body_response "," response_processor ","RequestFormatter  standard_(const nil :REQUEST) pack uest ","RequestFormatter  standard_RequestFormatter  standard_request uest "]}," Dalli Protocol Binary delete":{"type":"method","name":"delete","children":[],"call":[" generic_response "," multi? "," write ","(const nil :REQUEST) pack ","FORMAT  [] ","key bytesize ","OPCODES  [] ","@response_processor generic_response ","RequestFormatter  standard_request ","@response_processor no_body_response "," quiet? "," response_processor delete_response "," response_processor "," response_processor delete ","RequestFormatter  standard_(const nil :REQUEST) pack uest ","RequestFormatter  standard_RequestFormatter  standard_request uest "]}," Dalli Protocol Binary replace":{"type":"method","name":"replace","children":[],"call":[" cas_response "," multi? "," write ","(const nil :REQUEST) pack ","FORMAT  [] ","value bytesize + + ","value bytesize + ","key bytesize ","value bytesize ","OPCODES  [] "," guard_max_value "," sanitize_ttl "," serialize ","TtlSanitizer  sanitize "," process_value_req "," storage_req "," quiet? "," sanitize_ sanitize_ttl  "," sanitize_TtlSanitizer  sanitize  "," process_value_(const nil :REQUEST) pack  "," storage_(const nil :REQUEST) pack  "]}," Dalli Protocol Binary add":{"type":"method","name":"add","children":[],"call":[" cas_response "," multi? "," write ","(const nil :REQUEST) pack ","FORMAT  [] ","value bytesize + + ","value bytesize + ","key bytesize ","value bytesize ","OPCODES  [] "," guard_max_value "," sanitize_ttl "," serialize ","TtlSanitizer  sanitize "," process_value_req "," storage_req "," quiet? "," sanitize_ sanitize_ttl  "," sanitize_TtlSanitizer  sanitize  "," process_value_(const nil :REQUEST) pack  "," storage_(const nil :REQUEST) pack  "]}," Dalli Protocol Binary set":{"type":"method","name":"set","children":[],"call":[" cas_response "," multi? "," write ","(const nil :REQUEST) pack ","FORMAT  [] ","value bytesize + + ","value bytesize + ","key bytesize ","value bytesize ","OPCODES  [] "," guard_max_value "," sanitize_ttl "," serialize ","TtlSanitizer  sanitize "," process_value_req "," storage_req "," quiet? "," sanitize_ sanitize_ttl  "," sanitize_TtlSanitizer  sanitize  "," process_value_(const nil :REQUEST) pack  "," storage_(const nil :REQUEST) pack  "]}," Dalli Protocol Binary send_multiget":{"type":"method","name":"send_multiget","children":[],"call":[" write ","req << ","(const nil :REQUEST) pack ","FORMAT  [] ","key bytesize ","OPCODES  [] ","keys each "," +@ ","RequestFormatter  standard_request "," +@  << ","RequestFormatter  standard_ +@ uest "]}," Dalli Protocol Binary get":{"type":"method","name":"get","children":[],"call":[" generic_response ","(and\n  (and\n    (lvar :options)\n    (send\n      (lvar :options) :is_a?\n      (const nil :Hash)))\n  (send\n    (lvar :options) :[]\n    (sym :cache_nils))) ! ! ","(and\n  (and\n    (lvar :options)\n    (send\n      (lvar :options) :is_a?\n      (const nil :Hash)))\n  (send\n    (lvar :options) :[]\n    (sym :cache_nils))) ! ","options [] ","options is_a? "," write ","(const nil :REQUEST) pack ","FORMAT  [] ","key bytesize ","OPCODES  [] ","@response_processor generic_response "," cache_nils? ","RequestFormatter  standard_request "," response_processor generic_response "," response_processor "," response_processor get ","RequestFormatter  standard_(const nil :REQUEST) pack uest ","RequestFormatter  standard_RequestFormatter  standard_request uest "]}," Dalli Protocol Binary multi?":{"type":"method","name":"multi?","children":[],"call":["Thread  current [] ","Thread  current "]}," Dalli Protocol Binary up!":{"type":"method","name":"up!","children":[],"call":["(begin\n  (send nil :name)) % "," name ","Dalli  logger warn ","Dalli  logger ","Time  now - ","Time  now "," reset_down_info "," log_up_detected "]}," Dalli Protocol Binary down!":{"type":"method","name":"down!","children":[],"call":[" raise "," name ","Dalli  logger warn ","Dalli  logger ","(begin\n  (send nil :name)) % ","Dalli  logger debug ","Time  now - ","Time  now "," close "," log_down_detected "]}," Dalli Protocol Binary failure!":{"type":"method","name":"failure!","children":[],"call":[" reconnect! "," down! ","@fail_count >= "," options [] "," options ","Dalli  logger warn ","Dalli  logger ","exception message ","exception class "," name "]}," Dalli Protocol Binary reconnect!":{"type":"method","name":"reconnect!","children":[],"call":[" raise "," sleep "," options [] "," options "," close "]}," Dalli Protocol Binary verify_state":{"type":"method","name":"verify_state","children":[],"call":[" reconnect! ","Dalli  logger info ","Dalli  logger ","@pid != ","Process  pid "," failure! ","RuntimeError  new "," reconnect_on_fork "," fork_detected? "," request_in_progress? "," verify_allowed_multi! "," multi? "," raise_down_error "," ensure_connected! "," verify_allowed_quiet! "," quiet? ","@connection_manager confirm_ready! "]}," Dalli Protocol Binary multi_response_abort":{"type":"method","name":"multi_response_abort","children":[],"call":[" failure! ","RuntimeError  new "," abort_request! "]}," Dalli Protocol Binary multi_response_nonblock":{"type":"method","name":"multi_response_nonblock","children":[],"call":[" failure! ","values []= "," deserialize ","pos + + ","pos + ","buf slice ","body_length - - ","body_length - ","pos + + + ","body_length - - > ","buf slice unpack1 ","buf bytesize - >= ","24 + ","buf bytesize - ","buf bytesize ","key_length == ","header unpack ","@multi_buffer << ","@sock read_available "," reconnect! ","@multi_buffer nil? ","@response_processor unpack_response_body ","ResponseProcessor RESP_HEADER_SIZE  + "," finish_multi_response ","key_len zero? ","@response_processor unpack_header ","buf slice s []= ","pos + +  + + ","pos + +  + ","buf slice _length - - ","buf slice _length - ","pos + +  + + + ","buf slice _length - - > ","buf slice _length == ","buf slice  unpack ","@response_processor unpack_response_buf slice  ","buf slice _len zero? ","@response_processor unpack_buf slice  "]}," Dalli Protocol Binary multi_response_completed?":{"type":"method","name":"multi_response_completed?","children":[],"call":["@multi_buffer nil? "]}," Dalli Protocol Binary multi_response_start":{"type":"method","name":"multi_response_start","children":[],"call":[" +@ "," write_noop "," verify_state "," start_request! "]}," Dalli Protocol Binary compressor":{"type":"method","name":"compressor","children":[],"call":["@options [] "]}," Dalli Protocol Binary serializer":{"type":"method","name":"serializer","children":[],"call":["@options [] "]}," Dalli Protocol Binary unlock!":{"type":"method","name":"unlock!","children":[],"call":[]}," Dalli Protocol Binary lock!":{"type":"method","name":"lock!","children":[],"call":[]}," Dalli Protocol Binary close":{"type":"method","name":"close","children":[],"call":["@sock close "," abort_request! "]}," Dalli Protocol Binary alive?":{"type":"method","name":"alive?","children":[],"call":["@sock ! ! ","@sock ! "," connect ","(str \"down_retry_delay not reached for \") % "," name ","Dalli  logger debug ","Dalli  logger ","@last_down_at + - ","Time  now ","@last_down_at + "," options [] "," options ","@last_down_at + >= "," reconnect_down_server? "," ensure_connected! "]}," Dalli Protocol Binary request":{"type":"method","name":"request","children":[],"call":[" down! ","Dalli  logger error ","ex backtrace join ","ex backtrace ","Dalli  logger ","ex message ","ex class name ","ex class "," raise ","args first "," send "," name "," alive? "," verify_state "," log_unexpected_err "," log_marshall_err "," raise_memcached_down_err "," log_marshal_err "]}," Dalli Protocol Binary name":{"type":"method","name":"name","children":[],"call":[" port "," hostname "," socket_type == "," socket_type "]}," Dalli Protocol Binary initialize":{"type":"method","name":"initialize","children":[],"call":["DEFAULTS  merge "," parse_hostname ","ValueCompressor  new ","ServerConfigParser  parse "," reset_down_info ","ResponseProcessor  new ","ValueMarshaller  new ","ResponseBuffer  new ","ConnectionManager  new ","client_options merge "]}," Dalli Client validate_servers_arg":{"type":"method","name":"validate_servers_arg","children":[],"call":[" raise ","servers is_a? ","servers nil? "]}," Dalli Client gat":{"type":"method","name":"gat","children":[],"call":[" perform "," ttl_or_default "]}," Dalli UNIX open":{"type":"method","name":"open","children":[],"call":[]}," Dalli UNIX initialize":{"type":"method","name":"initialize","children":[],"call":[" raise "]}," Dalli Protocol ValueCompressor compress_value?":{"type":"method","name":"compress_value?","children":[],"call":["req_options [] "," compress_by_default? ","req_options [] nil? ! ","req_options [] nil? ","value bytesize >= "," compression_min_size ","value bytesize "]}," Dalli Protocol ValueCompressor compression_min_size":{"type":"method","name":"compression_min_size","children":[],"call":["@compression_options [] "]}," Dalli Protocol ValueCompressor compressor":{"type":"method","name":"compressor","children":[],"call":["@compression_options [] "]}," Dalli Protocol ValueCompressor compress_by_default?":{"type":"method","name":"compress_by_default?","children":[],"call":["@compression_options [] "]}," Dalli Protocol ValueCompressor retrieve":{"type":"method","name":"retrieve","children":[],"call":[" raise ","$ERROR_INFO message "," compressor decompress "," compressor ","(send\n  (lvar :bitflags) :&\n  (const nil :FLAG_COMPRESSED)) != ","bitflags & "]}," Dalli Protocol ValueCompressor store":{"type":"method","name":"store","children":[],"call":[" compressor compress "," compressor "," compress_value? "]}," Dalli Protocol ValueCompressor initialize":{"type":"method","name":"initialize","children":[],"call":["DEFAULTS  merge ","OPTIONS  include? ","client_options select ","client_options []= ","client_options delete ","Dalli  logger warn ","Dalli  logger ","client_options key? ! ","client_options key? "]}," Dalli Protocol TtlSanitizer current_timestamp":{"type":"method","name":"current_timestamp","children":[],"call":[]}," Dalli Protocol TtlSanitizer as_timestamp":{"type":"method","name":"as_timestamp","children":[],"call":[]}," Dalli Protocol TtlSanitizer less_than_max_expiration_interval?":{"type":"method","name":"less_than_max_expiration_interval?","children":[],"call":[]}," Dalli Protocol TtlSanitizer sanitize":{"type":"method","name":"sanitize","children":[],"call":[]}," Dalli Protocol ServerConfigParser normalize_weight":{"type":"method","name":"normalize_weight","children":[],"call":[]}," Dalli Protocol ServerConfigParser normalize_port":{"type":"method","name":"normalize_port","children":[],"call":[]}," Dalli Protocol ServerConfigParser normalize_hostname":{"type":"method","name":"normalize_hostname","children":[],"call":[]}," Dalli Protocol ServerConfigParser attributes_for_tcp_socket":{"type":"method","name":"attributes_for_tcp_socket","children":[],"call":[]}," Dalli Protocol ServerConfigParser attributes_for_unix_socket":{"type":"method","name":"attributes_for_unix_socket","children":[],"call":[]}," Dalli Protocol ServerConfigParser deconstruct_string":{"type":"method","name":"deconstruct_string","children":[],"call":[]}," Dalli Protocol ServerConfigParser parse":{"type":"method","name":"parse","children":[],"call":[]}," Dalli Socket UNIX initialize":{"type":"method","name":"initialize","children":[],"call":[" raise "]}," Dalli Socket TCP wrapping_ssl_socket":{"type":"method","name":"wrapping_ssl_socket","children":[],"call":[]}," Dalli Socket TCP init_socket_options":{"type":"method","name":"init_socket_options","children":[],"call":[]}," Dalli Socket SSLSocket wait_writable":{"type":"method","name":"wait_writable","children":[],"call":[" to_io wait_writable "," to_io "]}," Dalli Socket SSLSocket wait_readable":{"type":"method","name":"wait_readable","children":[],"call":[" to_io wait_readable "," to_io "]}," Dalli Socket InstanceMethods logged_options":{"type":"method","name":"logged_options","children":[],"call":["FILTERED_OUT_OPTIONS  include? "," options reject "," options "]}," Dalli Socket InstanceMethods nonblock_timed_out?":{"type":"method","name":"nonblock_timed_out?","children":[],"call":[" wait_writable ! "," wait_writable "," options [] "," options ","result == "," wait_readable ! "," wait_readable "]}," Dalli Socket InstanceMethods append_to_buffer?":{"type":"method","name":"append_to_buffer?","children":[],"call":["WAIT_RCS  include? ! ","WAIT_RCS  include? "," raise "," logged_options inspect "," logged_options "," nonblock_timed_out? "]}," Dalli ServersArgNormalizer validate_type":{"type":"method","name":"validate_type","children":[],"call":[]}," Dalli ServersArgNormalizer apply_defaults":{"type":"method","name":"apply_defaults","children":[],"call":[]}," Dalli ServersArgNormalizer normalize_servers":{"type":"method","name":"normalize_servers","children":[],"call":[]}," Dalli Ring build_continuum":{"type":"method","name":"build_continuum","children":[],"call":["continuum sort_by ","continuum << ","Dalli Ring Entry  new "," Integer ","hash [] ","Digest SHA1  hexdigest ","server name "," entry_count_for times "," entry_count_for ","servers size ","servers each ","memo + ","srv weight ","servers inject ","Digest SHA1  hexdigest  [] "]}," Dalli Ring server_for_hash_key":{"type":"method","name":"server_for_hash_key","children":[],"call":["@continuum [] server ","@continuum [] ","@continuum size - ","@continuum size ","entryidx nil? ","entry value > ","entry value ","@continuum bsearch_index ","@continuum size -  nil? "]}," Dalli Ring socket_timeout":{"type":"method","name":"socket_timeout","children":[],"call":["@servers first socket_timeout ","@servers first "]}," Dalli Ring flush_multi_responses":{"type":"method","name":"flush_multi_responses","children":[],"call":["s request ","@servers each "]}," Dalli Ring keys_grouped_by_server":{"type":"method","name":"keys_grouped_by_server","children":[],"call":["Dalli  logger debug ","Dalli  logger "," server_for_key ","key_arr group_by "]}," Dalli Ring server_from_continuum":{"type":"method","name":"server_from_continuum","children":[],"call":[" hash_for ","server alive? "," server_for_hash_key ","20 times "," server_for_hash_key  alive? ","  server_for_hash_key _for_hash_key "]}," Dalli Protocol ValueSerializer serialize_value":{"type":"method","name":"serialize_value","children":[],"call":[" raise ","exc set_backtrace ","e backtrace ","Dalli MarshalError  new ","e message "," serializer dump "," serializer ","Dalli MarshalError  new  set_backtrace "]}," Dalli Protocol ValueSerializer serializer":{"type":"method","name":"serializer","children":[],"call":["@serialization_options [] "]}," Dalli Protocol ValueSerializer filter_name_error":{"type":"method","name":"filter_name_error","children":[],"call":[" raise ","err message ","err message include? "]}," Dalli Protocol ValueSerializer filter_argument_error":{"type":"method","name":"filter_argument_error","children":[],"call":[" raise ","err message ","ARGUMENT_ERR_REGEXP  match? "]}," Dalli Protocol ValueSerializer filter_type_error":{"type":"method","name":"filter_type_error","children":[],"call":[" raise ","err message ","TYPE_ERR_REGEXP  match? "]}," Dalli Protocol ValueSerializer retrieve":{"type":"method","name":"retrieve","children":[],"call":[" filter_name_error "," filter_argument_error "," filter_type_error "," serializer load "," serializer ","(send\n  (lvar :bitflags) :&\n  (const nil :FLAG_SERIALIZED)) != ","bitflags & "]}," Dalli Protocol ValueSerializer store":{"type":"method","name":"store","children":[],"call":["value to_s "," serialize_value ","(and\n  (lvar :req_options)\n  (send\n    (lvar :req_options) :[]\n    (sym :raw))) ! ","req_options [] "]}," Dalli Protocol ValueSerializer initialize":{"type":"method","name":"initialize","children":[],"call":["DEFAULTS  merge ","OPTIONS  include? ","protocol_options select "]}," Dalli Protocol ValueMarshaller error_if_over_max_value_bytes":{"type":"method","name":"error_if_over_max_value_bytes","children":[],"call":[" raise ","value bytesize "," value_max_bytes ","value bytesize <= "]}," Dalli Protocol ValueMarshaller value_max_bytes":{"type":"method","name":"value_max_bytes","children":[],"call":["@marshal_options [] "]}," Dalli Protocol ValueMarshaller retrieve":{"type":"method","name":"retrieve","children":[],"call":["@value_serializer retrieve ","@value_compressor retrieve ","@@value_compressor retrieve _serializer retrieve ","@@value_compressor retrieve _compressor retrieve "]}," Dalli Protocol ValueMarshaller store":{"type":"method","name":"store","children":[],"call":[" error_if_over_max_value_bytes ","@value_compressor store ","@value_serializer store "]}," Dalli Protocol ValueMarshaller initialize":{"type":"method","name":"initialize","children":[],"call":["DEFAULTS  merge ","OPTIONS  include? ","client_options select ","ValueCompressor  new ","ValueSerializer  new "]}," Dalli Protocol ServerConfigParser normalize_host_from_match":{"type":"method","name":"normalize_host_from_match","children":[],"call":[]}," Dalli Protocol ServerConfigParser parse_non_uri":{"type":"method","name":"parse_non_uri","children":[],"call":[]}," Dalli Protocol ServerConfigParser parse_uri":{"type":"method","name":"parse_uri","children":[],"call":[]}," Dalli Protocol Binary require_auth?":{"type":"method","name":"require_auth?","children":[],"call":[" username nil? ! "," username nil? "," username "]}," Dalli Protocol Binary memcached_socket":{"type":"method","name":"memcached_socket","children":[],"call":["Dalli Socket TCP  open "," options "," port "," hostname ","Dalli Socket UNIX  open "," socket_type == "," socket_type "]}," Dalli Protocol Binary process_value_req":{"type":"method","name":"process_value_req","children":[],"call":["@response_processor cas_response "," multi? "," write ","RequestFormatter  standard_request ","TtlSanitizer  sanitize ","@value_marshaller store ","RequestFormatter  standard_RequestFormatter  standard_request uest "]}," Dalli Protocol Binary cache_nils?":{"type":"method","name":"cache_nils?","children":[],"call":["opts [] ","opts is_a? "]}," Dalli Protocol Binary reset_down_info":{"type":"method","name":"reset_down_info","children":[],"call":[]}," Dalli Protocol Binary log_up_detected":{"type":"method","name":"log_up_detected","children":[],"call":[" format "," name ","Dalli  logger warn ","Dalli  logger ","Time  now - ","Time  now "]}," Dalli Protocol Binary log_down_detected":{"type":"method","name":"log_down_detected","children":[],"call":["Dalli  logger warn "," name ","Dalli  logger "," format ","Dalli  logger debug ","Time  now - ","Time  now "]}," Dalli Protocol Binary reconnect_on_fork":{"type":"method","name":"reconnect_on_fork","children":[],"call":[" reconnect! ","Dalli  logger info ","Dalli  logger "]}," Dalli Protocol Binary fork_detected?":{"type":"method","name":"fork_detected?","children":[],"call":["@pid != ","Process  pid "]}," Dalli Protocol Binary abort_request!":{"type":"method","name":"abort_request!","children":[],"call":[]}," Dalli Protocol Binary finish_request!":{"type":"method","name":"finish_request!","children":[],"call":[]}," Dalli Protocol Binary start_request!":{"type":"method","name":"start_request!","children":[],"call":[]}," Dalli Protocol Binary request_in_progress?":{"type":"method","name":"request_in_progress?","children":[],"call":[]}," Dalli Protocol Binary socket_timeout":{"type":"method","name":"socket_timeout","children":[],"call":["@options [] "]}," Dalli Protocol Binary finish_multi_response":{"type":"method","name":"finish_multi_response","children":[],"call":[" finish_request! "]}," Dalli Protocol Binary reconnect_down_server?":{"type":"method","name":"reconnect_down_server?","children":[],"call":[" format "," name ","Dalli  logger debug ","Dalli  logger ","time_to_next_reconnect positive? ","@last_down_at + - ","Time  now ","@last_down_at + "," options [] "," options ","@last_down_at + -  positive? "]}," Dalli Protocol Binary log_unexpected_err":{"type":"method","name":"log_unexpected_err","children":[],"call":["Dalli  logger error ","err backtrace join ","err backtrace ","Dalli  logger ","err message ","err class name ","err class "]}," Dalli Protocol Binary log_marshall_err":{"type":"method","name":"log_marshall_err","children":[],"call":["Dalli  logger error ","Dalli  logger ","err message "]}," Dalli Protocol Binary raise_memcached_down_err":{"type":"method","name":"raise_memcached_down_err","children":[],"call":[" raise "," name "]}," Dalli Protocol Binary SaslAuthentication authenticate_connection":{"type":"method","name":"authenticate_connection","children":[],"call":[" raise ","status == ","Dalli  logger info ","Dalli  logger ","status zero? "," authenticate_with_plain "," supported_mechanisms! ","Dalli  logger debug "," perform_auth_negotiation "," username ","status to_s "]}," Dalli Protocol Binary SaslAuthentication authenticate_with_plain":{"type":"method","name":"authenticate_with_plain","children":[],"call":["@response_processor auth_response "," write ","RequestFormatter  standard_request "," password "," username "]}," Dalli Protocol Binary SaslAuthentication supported_mechanisms!":{"type":"method","name":"supported_mechanisms!","children":[],"call":[" raise ","mechanisms include? "]}," Dalli Protocol Binary SaslAuthentication perform_auth_negotiation":{"type":"method","name":"perform_auth_negotiation","children":[],"call":["content split ","content tr ","@response_processor auth_response "," write ","RequestFormatter  standard_request ","content nil? "," response_processor auth_response "," response_processor "]}," Dalli Protocol Binary ResponseProcessor auth_response":{"type":"method","name":"auth_response","children":[],"call":[" read "," validate_auth_format "," read_header unpack "," read_header ","body_len positive? ","resp_header status ","resp_header extra_len ","resp_header body_len ","ResponseHeader  new ","resp_header body_len  positive? ","ResponseHeader  new  status ","ResponseHeader  new  extra_len ","resp_header resp_header body_len  ","ResponseHeader  new  body_len "]}," Dalli Protocol Binary ResponseProcessor validate_auth_format":{"type":"method","name":"validate_auth_format","children":[],"call":[" raise ","count positive? ","extra_len zero? "]}," Dalli Protocol Binary ResponseProcessor decr_incr_response":{"type":"method","name":"decr_incr_response","children":[],"call":["body unpack1 "," generic_response "," generic_response  unpack1 "]}," Dalli Protocol Binary ResponseProcessor multi_with_keys_response":{"type":"method","name":"multi_with_keys_response","children":[],"call":["hash []= "," unpack_response_body ","status zero? ","key_len zero? "," read_response "," loop ","resp_header key_len ","resp_header extra_len ","resp_header ok? ","resp_header key_len zero? "]}," Dalli Protocol Binary ResponseProcessor cas_response":{"type":"method","name":"cas_response","children":[],"call":[" data_cas_response last "," data_cas_response "]}," Dalli Protocol Binary ResponseProcessor data_cas_response":{"type":"method","name":"data_cas_response","children":[],"call":[" unpack_response_body last "," unpack_response_body "," raise_on_not_ok_status! "," not_stored? "," not_found? "," read_response ","resp_header cas ","resp_header key_len ","resp_header extra_len ","resp_header not_stored? ","resp_header not_found? "," raise_on_not_ok! "]}," Dalli Protocol Binary ResponseProcessor generic_response":{"type":"method","name":"generic_response","children":[],"call":[" unpack_response_body last "," unpack_response_body "," raise_on_not_ok_status! "," not_stored? "," not_found? "," read_response ","resp_header key_len ","resp_header extra_len ","resp_header not_stored? ","resp_header not_found? "," raise_on_not_ok! "]}," Dalli Protocol Binary ResponseProcessor raise_on_not_ok_status!":{"type":"method","name":"raise_on_not_ok_status!","children":[],"call":[" raise ","RESPONSE_CODES  [] ","status zero? ","resp_header status ","resp_header ok? "]}," Dalli Protocol Binary ResponseProcessor not_stored?":{"type":"method","name":"not_stored?","children":[],"call":["NOT_STORED_STATUSES  include? "]}," Dalli Protocol Binary ResponseProcessor not_found?":{"type":"method","name":"not_found?","children":[],"call":["status == "]}," Dalli Protocol Binary ResponseProcessor read_header":{"type":"method","name":"read_header","children":[],"call":[" raise "," read "]}," Dalli Protocol Binary ResponseProcessor unpack_response_body":{"type":"method","name":"unpack_response_body","children":[],"call":["@value_marshaller retrieve ","body byteslice ","body bytesize - ","extra_len + ","body bytesize ","key_len positive? ","body byteslice unpack1 ","extra_len positive? ","body byteslice force_encoding ","body unpack1 ","resp_header key_len ","resp_header extra_len ","@@value_marshaller retrieve _marshaller retrieve ","@body byteslice _marshaller retrieve ","resp_header extra_len  + ","body byteslice _len positive? ","body byteslice force_encoding _len positive? ","resp_header key_len  positive? ","resp_header extra_len  positive? ","resp_header body byteslice _len ","resp_header body byteslice force_encoding _len ","resp_header resp_header key_len  ","resp_header resp_header extra_len  "]}," Dalli Protocol Binary ResponseProcessor unpack_header":{"type":"method","name":"unpack_header","children":[],"call":["header unpack "]}," Dalli Protocol Binary ResponseProcessor read_response":{"type":"method","name":"read_response","children":[],"call":[" read ","body_len positive? "," unpack_header "," read_header ","resp_header body_len ","resp_header body_len positive? ","ResponseHeader  new "," read _len positive? ","resp_header  read _len ","ResponseHeader  new  body_len ","resp_header  read _len positive? ","ResponseHeader  new  body_len positive? "]}," Dalli Protocol Binary ResponseProcessor read":{"type":"method","name":"read","children":[],"call":["@io_source read "]}," Dalli Protocol Binary ResponseProcessor initialize":{"type":"method","name":"initialize","children":[],"call":[]}," Dalli Protocol Binary RequestFormatter as_8byte_uint":{"type":"method","name":"as_8byte_uint","children":[],"call":[]}," Dalli Protocol Binary RequestFormatter decr_incr_request":{"type":"method","name":"decr_incr_request","children":[],"call":[]}," Dalli Protocol Binary RequestFormatter standard_request":{"type":"method","name":"standard_request","children":[],"call":[]}," Dalli KeyManager prefix_length":{"type":"method","name":"prefix_length","children":[],"call":["TRUNCATED_KEY_TARGET_SIZE  + - ","TRUNCATED_KEY_SEPARATOR  length + ","digest length ","TRUNCATED_KEY_SEPARATOR  length ","TRUNCATED_KEY_TARGET_SIZE  + ","TRUNCATED_KEY_TARGET_SIZE  - "," namespace nil? "," namespace "]}," Dalli KeyManager truncated_key":{"type":"method","name":"truncated_key","children":[],"call":["key [] "," prefix_length "," digest_class hexdigest "," digest_class ","  digest_class hexdigest _class hex digest_class hexdigest  ","  digest_class hexdigest _class "]}," Dalli KeyManager namespace_from_options":{"type":"method","name":"namespace_from_options","children":[],"call":["raw_namespace to_s ","raw_namespace call to_s ","raw_namespace call ","raw_namespace is_a? ","@key_options [] ","@key_options []  to_s ","@key_options []  call to_s ","@key_options []  call ","@key_options []  is_a? "]}," Dalli KeyManager validate_digest_class_option":{"type":"method","name":"validate_digest_class_option","children":[],"call":[" raise ","opts [] respond_to? ","opts [] "]}," Dalli KeyManager namespace_regexp":{"type":"method","name":"namespace_regexp","children":[],"call":["(str \"\\\\A\") freeze ","Regexp  escape "," namespace "," namespace nil? "," evaluate_namespace "," namespace is_a? "]}," Dalli KeyManager digest_class":{"type":"method","name":"digest_class","children":[],"call":["@key_options [] "]}," Dalli KeyManager key_without_namespace":{"type":"method","name":"key_without_namespace","children":[],"call":["key sub "," namespace_regexp "," namespace nil? "," namespace "]}," Dalli KeyManager key_with_namespace":{"type":"method","name":"key_with_namespace","children":[],"call":[" namespace "," namespace nil? "," evaluate_namespace "]}," Dalli KeyManager validate_key":{"type":"method","name":"validate_key","children":[],"call":[" truncated_key ","key length > ","key length "," key_with_namespace "," raise "," truncated_ key_with_namespace  "," key_with_namespace  length > "," key_with_namespace  length ","  key_with_namespace _with_namespace "]}," Dalli KeyManager initialize":{"type":"method","name":"initialize","children":[],"call":[" namespace_from_options "," validate_digest_class_option ","DEFAULTS  merge ","OPTIONS  include? ","client_options select "]}," Dalli Client servers_with_data":{"type":"method","name":"servers_with_data","children":[],"call":["readable map ","readable nil? ","IO  select ","servers map "]}," Dalli Client respond_to_readable_server":{"type":"method","name":"respond_to_readable_server","children":[],"call":["server multi_response_completed? ","@key_manager key_without_namespace ","server multi_response_nonblock each_pair ","server multi_response_nonblock "]}," Dalli Client abort_multi_connections_w_timeout":{"type":"method","name":"abort_multi_connections_w_timeout","children":[],"call":["server name ","Dalli  logger debug ","Dalli  logger ","servers each "," abort_multi_response "]}," Dalli Client remaining_time":{"type":"method","name":"remaining_time","children":[],"call":["timeout - ","elapsed > ","Time  now - ","Time  now ","Time  now -  > "]}," Dalli Client multi_yielder_loop":{"type":"method","name":"multi_yielder_loop","children":[],"call":[" raise "," abort_multi_response ","servers delete "," respond_to_readable_server ","readable_servers each "," abort_multi_connections_w_timeout ","readable_servers empty? "," servers_with_data "," remaining_time "," servers_with_data  each "," servers_with_data  empty? "]}," Dalli Client abort_multi_response":{"type":"method","name":"abort_multi_response","children":[],"call":["servers each "]}," Dalli Client protocol_implementation":{"type":"method","name":"protocol_implementation","children":[],"call":["@options fetch ","@options [] "]}," Dalli Client cache_nils":{"type":"method","name":"cache_nils","children":[],"call":["@options [] "]}," Dalli Client not_found?":{"type":"method","name":"not_found?","children":[],"call":["val nil? ","val == "," cache_nils "]}," Rack Session Dalli with_dalli_client":{"type":"method","name":"with_dalli_client","children":[],"call":[" warn ","$ERROR_INFO inspect "," raise ","(str \"undefined class\") match? ","$ERROR_INFO message ","@data with ","$ERROR_INFO message include? "]}," Rack Session Dalli ensure_connection_pool_added!":{"type":"method","name":"ensure_connection_pool_added!","children":[],"call":[" raise "," warn "," require "]}," Rack Session Dalli retrieve_pool_options":{"type":"method","name":"retrieve_pool_options","children":[],"call":["pool_options []= ","options delete ","options [] "," tap "]}," Rack Session Dalli retrieve_client_options":{"type":"method","name":"retrieve_client_options","children":[],"call":["DEFAULT_DALLI_OPTIONS  merge ","DEFAULT_OPTIONS  key? ","options reject "]}," Rack Session Dalli build_data_source":{"type":"method","name":"build_data_source","children":[],"call":[" Dalli Client  new ","client_options merge ","ConnectionPool  new "," ensure_connection_pool_added! ","pool_options empty? "," extract_dalli_options "]}," Rack Session Dalli create_sid_with_empty_session":{"type":"method","name":"create_sid_with_empty_session","children":[],"call":["client add "," memcached_key_from_sid "," generate_sid_with "," loop "," memcached_key_from_ generate_sid_with  "," memcached_ memcached_key_from_sid _from_sid "," generate_ generate_sid_with _with "]}," Rack Session Dalli existing_session_for_sid":{"type":"method","name":"existing_session_for_sid","children":[],"call":["client get "," memcached_key_from_sid ","sid empty? ! ","sid empty? ","key nil? "," memcached_ memcached_key_from_sid _from_sid "," memcached_key_from_sid  nil? "]}," Rack Session Dalli memcached_key_from_sid":{"type":"method","name":"memcached_key_from_sid","children":[],"call":["sid private_id ","sid respond_to? "]}," Dalli Ring close":{"type":"method","name":"close","children":[],"call":["@servers each "]}," Dalli Ring pipeline_consume_and_ignore_responses":{"type":"method","name":"pipeline_consume_and_ignore_responses","children":[],"call":["s request ","@servers each "]}," Dalli Protocol ResponseBuffer completed?":{"type":"method","name":"completed?","children":[],"call":["@buffer nil? "]}," Dalli Protocol ResponseBuffer clear":{"type":"method","name":"clear","children":[],"call":[]}," Dalli Protocol ResponseBuffer reset":{"type":"method","name":"reset","children":[],"call":[" +@ "," b "]}," Dalli Protocol ResponseBuffer advance":{"type":"method","name":"advance","children":[],"call":["@buffer [] ","bytes_to_advance positive? ","@buffer byteslice ","@buffer []  [] ","@buffer byteslice  [] ","@buffer []  byteslice ","@buffer byteslice  byteslice "]}," Dalli Protocol ResponseBuffer process_single_response":{"type":"method","name":"process_single_response","children":[],"call":["@response_processor getk_response_from_buffer "," advance "]}," Dalli Protocol ResponseBuffer read":{"type":"method","name":"read","children":[],"call":["@buffer << ","@io_source read_nonblock "]}," Dalli Protocol ResponseBuffer initialize":{"type":"method","name":"initialize","children":[],"call":[]}," Dalli Protocol Binary pipelined_get":{"type":"method","name":"pipelined_get","children":[],"call":[" write ","req << ","RequestFormatter  standard_request ","keys each "," +@ "," +@  << ","RequestFormatter  standard_ +@ uest "]}," Dalli Protocol Binary verify_allowed_multi!":{"type":"method","name":"verify_allowed_multi!","children":[],"call":[" raise ","ALLOWED_MULTI_OPS  include? "]}," Dalli Protocol Binary connected?":{"type":"method","name":"connected?","children":[],"call":["@sock nil? ! ","@sock nil? "]}," Dalli Protocol Binary pipeline_response_abort":{"type":"method","name":"pipeline_response_abort","children":[],"call":[" failure! ","RuntimeError  new "," abort_request! "," response_buffer clear "," response_buffer "]}," Dalli Protocol Binary finish_pipeline":{"type":"method","name":"finish_pipeline","children":[],"call":[" finish_request! "," response_buffer clear "," response_buffer ","@connection_manager finish_request! "]}," Dalli Protocol Binary read_nonblock":{"type":"method","name":"read_nonblock","children":[],"call":["@sock read_available "]}," Dalli Protocol Binary process_outstanding_pipeline_requests":{"type":"method","name":"process_outstanding_pipeline_requests","children":[],"call":[" failure! "," pipeline_response ","values []= ","key nil? "," finish_pipeline ","status zero? ","bytes_to_advance positive? "," response_buffer read "," response_buffer "," reconnect_on_pipeline_complete! "]}," Dalli Protocol Binary reconnect_on_pipeline_complete!":{"type":"method","name":"reconnect_on_pipeline_complete!","children":[],"call":[" reconnect! "," pipeline_response_completed? ","@connection_manager reconnect! "," pipeline_complete? "]}," Dalli Protocol Binary pipeline_response":{"type":"method","name":"pipeline_response","children":[],"call":[" response_buffer process_single_response "," response_buffer "," response_buffer process_single_getk_response "]}," Dalli Protocol Binary pipeline_response_completed?":{"type":"method","name":"pipeline_response_completed?","children":[],"call":[" response_buffer completed? "," response_buffer "]}," Dalli Protocol Binary pipeline_response_start":{"type":"method","name":"pipeline_response_start","children":[],"call":[" start_request! "," response_buffer reset "," response_buffer "," write_noop "," verify_state "]}," Dalli Protocol Binary response_buffer":{"type":"method","name":"response_buffer","children":[],"call":["ResponseBuffer  new "]}," Dalli Protocol Binary ResponseProcessor getk_response_from_buffer":{"type":"method","name":"getk_response_from_buffer","children":[],"call":["resp_header cas ","resp_header status "," unpack_response_body ","resp_header key_len ","resp_header extra_len ","buf slice ","buf bytesize >= ","buf bytesize ","ResponseHeader SIZE  + ","body_len zero? ","resp_header body_len "," response_header_from_buffer "," contains_header? ","resp_header ok? ","buf byteslice "," response_header_from_buffer  cas "," response_header_from_buffer  status "," unpack_response_buf slice  "," unpack_response_buf byteslice  "," response_header_from_buffer  key_len "," response_header_from_buffer  extra_len ","buf slice _len zero? ","buf byteslice _len zero? ","resp_header body_len  zero? ","resp_header buf slice _len ","resp_header buf byteslice _len ","resp_header resp_header body_len  "," response_header_from_buffer  body_len "," response_header_from_buffer  ok? "]}," Dalli Protocol Binary ResponseProcessor response_header_from_buffer":{"type":"method","name":"response_header_from_buffer","children":[],"call":["ResponseHeader  new ","buf slice "]}," Dalli Protocol Binary ResponseProcessor contains_header?":{"type":"method","name":"contains_header?","children":[],"call":["buf bytesize >= ","buf bytesize "]}," Dalli Protocol Binary ResponseHeader not_stored?":{"type":"method","name":"not_stored?","children":[],"call":["NOT_STORED_STATUSES  include? "," status "]}," Dalli Protocol Binary ResponseHeader not_found?":{"type":"method","name":"not_found?","children":[],"call":[" status == "," status "]}," Dalli Protocol Binary ResponseHeader ok?":{"type":"method","name":"ok?","children":[],"call":[" status zero? "," status "]}," Dalli Protocol Binary ResponseHeader initialize":{"type":"method","name":"initialize","children":[],"call":["buf unpack "," raise ","buf bytesize >= ","buf bytesize "]}," Dalli PipelinedGetter groups_for_keys":{"type":"method","name":"groups_for_keys","children":[],"call":["unfound_keys length ","Dalli  logger debug ","Dalli  logger ","groups delete ","@ring keys_grouped_by_server ","@key_manager validate_key ","a to_s ","keys map! ","keys flatten! ","groups delete  length ","@ring keys_grouped_by_server  delete "]}," Dalli PipelinedGetter servers_with_response":{"type":"method","name":"servers_with_response","children":[],"call":["server_map [] ","readable map ","readable nil? ","IO  select ","server_map keys ","h []= ","s sock ","servers each_with_object ","servers empty? "]}," Dalli PipelinedGetter process_server":{"type":"method","name":"process_server","children":[],"call":["server pipeline_response_completed? ","@key_manager key_without_namespace ","server process_outstanding_pipeline_requests each_pair ","server process_outstanding_pipeline_requests ","server pipeline_complete? ","server pipeline_next_responses each_pair ","server pipeline_next_responses "]}," Dalli PipelinedGetter abort_with_timeout":{"type":"method","name":"abort_with_timeout","children":[],"call":["server name ","Dalli  logger debug ","Dalli  logger ","servers each "," abort_without_timeout "]}," Dalli PipelinedGetter remaining_time":{"type":"method","name":"remaining_time","children":[],"call":["timeout - ","elapsed > ","Time  now - ","Time  now ","Time  now -  > "]}," Dalli PipelinedGetter fetch_responses":{"type":"method","name":"fetch_responses","children":[],"call":[" raise "," abort_without_timeout ","servers delete "," process_server ","readable_servers each "," abort_with_timeout ","readable_servers empty? "," servers_with_response "," remaining_time ","servers empty? ","s connected? ! ","s connected? ","servers delete_if "," servers_with_response  each "," servers_with_response  empty? "]}," Dalli PipelinedGetter abort_without_timeout":{"type":"method","name":"abort_without_timeout","children":[],"call":["servers each "]}," Dalli PipelinedGetter finish_query_for_server":{"type":"method","name":"finish_query_for_server","children":[],"call":[" raise ","server name ","Dalli  logger debug ","Dalli  logger ","e inspect ","server pipeline_response_start ","server pipeline_response_setup "]}," Dalli PipelinedGetter finish_queries":{"type":"method","name":"finish_queries","children":[],"call":[" raise "," abort_without_timeout ","deleted include? ","servers delete_if ","deleted append "," finish_query_for_server ","server alive? ","servers each "]}," Dalli PipelinedGetter make_getkq_requests":{"type":"method","name":"make_getkq_requests","children":[],"call":["server name ","Dalli  logger debug ","Dalli  logger ","e inspect ","server request ","groups each "]}," Dalli PipelinedGetter setup_requests":{"type":"method","name":"setup_requests","children":[],"call":[" finish_queries ","groups keys "," make_getkq_requests "," groups_for_keys "," groups_for_keys  keys ","  groups_for_keys _for_keys "]}," Dalli PipelinedGetter process":{"type":"method","name":"process","children":[],"call":["Dalli  logger debug ","Dalli  logger ","e inspect "," fetch_responses ","@ring socket_timeout ","servers empty? ","s connected? ! ","s connected? ","servers delete_if "," loop ","Time  now "," setup_requests ","@ring lock ","keys empty? "," fetch_responses  empty? "," setup_requests  empty? "," fetch_responses  delete_if "," setup_requests  delete_if "]}," Dalli PipelinedGetter initialize":{"type":"method","name":"initialize","children":[],"call":[]}," Dalli Threadsafe pipeline_response_abort":{"type":"method","name":"pipeline_response_abort","children":[],"call":["@lock synchronize "]}," Dalli Threadsafe process_outstanding_pipeline_requests":{"type":"method","name":"process_outstanding_pipeline_requests","children":[],"call":["@lock synchronize "]}," Dalli Threadsafe pipeline_response_start":{"type":"method","name":"pipeline_response_start","children":[],"call":["@lock synchronize "]}," Dalli Client pipelined_getter":{"type":"method","name":"pipelined_getter","children":[],"call":["PipelinedGetter  new "," ring "]}," Dalli Protocol ResponseBuffer in_progress?":{"type":"method","name":"in_progress?","children":[],"call":["@buffer nil? ! ","@buffer nil? "]}," Dalli Protocol ResponseBuffer process_single_getk_response":{"type":"method","name":"process_single_getk_response","children":[],"call":[" advance ","@response_processor getk_response_from_buffer "]}," Dalli Protocol ConnectionManager log_up_detected":{"type":"method","name":"log_up_detected","children":[],"call":[" format "," name ","Dalli  logger warn ","Dalli  logger ","Time  now - ","Time  now "]}," Dalli Protocol ConnectionManager log_down_detected":{"type":"method","name":"log_down_detected","children":[],"call":["Dalli  logger warn "," name ","Dalli  logger "," format ","Dalli  logger debug ","Time  now - ","Time  now "]}," Dalli Protocol ConnectionManager fork_detected?":{"type":"method","name":"fork_detected?","children":[],"call":["@pid != ","Process  pid ","PIDCache  pid "]}," Dalli Protocol ConnectionManager close_on_fork":{"type":"method","name":"close_on_fork","children":[],"call":[" raise "," close ","Dalli  logger info ","Dalli  logger "]}," Dalli Protocol ConnectionManager log_warn_message":{"type":"method","name":"log_warn_message","children":[],"call":[" name ","err_or_string message ","err_or_string class ","err_or_string is_a? ","Dalli  logger warn ","Dalli  logger "]}," Dalli Protocol ConnectionManager memcached_socket":{"type":"method","name":"memcached_socket","children":[],"call":["Dalli Socket TCP  open "," options "," port "," hostname ","Dalli Socket UNIX  open "," socket_type == "," socket_type "]}," Dalli Protocol ConnectionManager reset_down_info":{"type":"method","name":"reset_down_info","children":[],"call":[]}," Dalli Protocol ConnectionManager reconnect!":{"type":"method","name":"reconnect!","children":[],"call":[" raise "," sleep "," options [] "," options "," close "]}," Dalli Protocol ConnectionManager error_on_request!":{"type":"method","name":"error_on_request!","children":[],"call":[" reconnect! "," down! ","@fail_count >= "," max_allowed_failures "," log_warn_message "]}," Dalli Protocol ConnectionManager max_allowed_failures":{"type":"method","name":"max_allowed_failures","children":[],"call":["@options [] "]}," Dalli Protocol ConnectionManager read_nonblock":{"type":"method","name":"read_nonblock","children":[],"call":["@sock read_available "]}," Dalli Protocol ConnectionManager write":{"type":"method","name":"write","children":[],"call":[" error_on_request! "," finish_request! ","@sock write "," start_request! "]}," Dalli Protocol ConnectionManager read":{"type":"method","name":"read","children":[],"call":[" error_on_request! "," finish_request! ","@sock readfull "," start_request! "]}," Dalli Protocol ConnectionManager abort_request!":{"type":"method","name":"abort_request!","children":[],"call":[]}," Dalli Protocol ConnectionManager finish_request!":{"type":"method","name":"finish_request!","children":[],"call":[" raise "]}," Dalli Protocol ConnectionManager start_request!":{"type":"method","name":"start_request!","children":[],"call":[" raise "]}," Dalli Protocol ConnectionManager request_in_progress?":{"type":"method","name":"request_in_progress?","children":[],"call":[]}," Dalli Protocol ConnectionManager connected?":{"type":"method","name":"connected?","children":[],"call":["@sock nil? ! ","@sock nil? "]}," Dalli Protocol ConnectionManager close":{"type":"method","name":"close","children":[],"call":[" abort_request! ","@sock close "]}," Dalli Protocol ConnectionManager confirm_ready!":{"type":"method","name":"confirm_ready!","children":[],"call":[" close_on_fork "," fork_detected? "," error_on_request! ","RuntimeError  new "," request_in_progress? "," close "]}," Dalli Protocol ConnectionManager socket_timeout":{"type":"method","name":"socket_timeout","children":[],"call":["@options [] "]}," Dalli Protocol ConnectionManager raise_down_error":{"type":"method","name":"raise_down_error","children":[],"call":[" raise "," name "]}," Dalli Protocol ConnectionManager down!":{"type":"method","name":"down!","children":[],"call":[" raise_down_error "," log_down_detected "," close "]}," Dalli Protocol ConnectionManager up!":{"type":"method","name":"up!","children":[],"call":[" reset_down_info "," log_up_detected "]}," Dalli Protocol ConnectionManager reconnect_down_server?":{"type":"method","name":"reconnect_down_server?","children":[],"call":[" format "," name ","Dalli  logger debug ","Dalli  logger ","time_to_next_reconnect positive? ","@last_down_at + - ","Time  now ","@last_down_at + "," options [] "," options ","@last_down_at + -  positive? "]}," Dalli Protocol ConnectionManager establish_connection":{"type":"method","name":"establish_connection","children":[],"call":[" error_on_request! ","Process  pid "," memcached_socket "," name ","Dalli  logger debug ","Dalli  logger ","PIDCache  pid "]}," Dalli Protocol ConnectionManager name":{"type":"method","name":"name","children":[],"call":[" port "," hostname "," socket_type == "," socket_type "]}," Dalli Protocol ConnectionManager initialize":{"type":"method","name":"initialize","children":[],"call":[" reset_down_info ","DEFAULTS  merge "]}," Dalli Protocol Binary log_marshal_err":{"type":"method","name":"log_marshal_err","children":[],"call":["Dalli  logger error ","Dalli  logger ","err message "]}," Dalli Protocol Binary storage_req":{"type":"method","name":"storage_req","children":[],"call":["@response_processor storage_response "," quiet? "," write ","RequestFormatter  standard_request ","TtlSanitizer  sanitize ","@value_marshaller store "," response_processor storage_response "," response_processor ","RequestFormatter  standard_RequestFormatter  standard_request uest "]}," Dalli Protocol Binary quiet?":{"type":"method","name":"quiet?","children":[],"call":["Thread  current [] ","Thread  current "]}," Dalli Protocol Binary verify_allowed_quiet!":{"type":"method","name":"verify_allowed_quiet!","children":[],"call":[" raise ","ALLOWED_QUIET_OPS  include? "]}," Dalli Protocol Binary ensure_connected!":{"type":"method","name":"ensure_connected!","children":[],"call":[" connected? "," connect "," reconnect_down_server? "]}," Dalli Protocol Binary pipeline_complete?":{"type":"method","name":"pipeline_complete?","children":[],"call":[" response_buffer in_progress? ! "," response_buffer in_progress? "," response_buffer "]}," Dalli Protocol Binary pipeline_abort":{"type":"method","name":"pipeline_abort","children":[],"call":["@connection_manager error_on_request! "," connected? ","@connection_manager abort_request! "," response_buffer clear "," response_buffer "]}," Dalli Protocol Binary pipeline_next_responses":{"type":"method","name":"pipeline_next_responses","children":[],"call":["@connection_manager error_on_request! "," pipeline_response ","values []= ","resp_header cas ","key nil? "," finish_pipeline ","resp_header ok? "," response_buffer read "," response_buffer "," reconnect_on_pipeline_complete! "]}," Dalli Protocol Binary pipeline_response_setup":{"type":"method","name":"pipeline_response_setup","children":[],"call":["@connection_manager start_request! "," response_buffer reset "," response_buffer "," write_noop "," verify_state "]}," Dalli Protocol Binary ResponseProcessor no_body_response":{"type":"method","name":"no_body_response","children":[],"call":[" raise_on_not_ok! ","resp_header not_stored? "," read_response "]}," Dalli Protocol Binary ResponseProcessor storage_response":{"type":"method","name":"storage_response","children":[],"call":["resp_header cas "," raise_on_not_ok! ","resp_header not_stored? "," read_response ","resp_header not_found? "]}," Dalli Protocol Binary ResponseProcessor raise_on_not_ok!":{"type":"method","name":"raise_on_not_ok!","children":[],"call":[" raise ","RESPONSE_CODES  [] ","resp_header status ","resp_header ok? "]}," Dalli Threadsafe pipeline_abort":{"type":"method","name":"pipeline_abort","children":[],"call":["@lock synchronize "]}," Dalli Threadsafe pipeline_next_responses":{"type":"method","name":"pipeline_next_responses","children":[],"call":["@lock synchronize "]}," Dalli Threadsafe pipeline_response_setup":{"type":"method","name":"pipeline_response_setup","children":[],"call":["@lock synchronize "]}," Dalli Client check_positive!":{"type":"method","name":"check_positive!","children":[],"call":[" raise ","amt negative? "]}," Dalli Client quiet":{"type":"method","name":"quiet","children":[],"call":["Thread  current []= ","Thread  current ","Thread  current [] "]}," Dalli Protocol Binary quiet_get_request":{"type":"method","name":"quiet_get_request","children":[],"call":["RequestFormatter  standard_request "]}," Dalli Protocol Binary response_processor":{"type":"method","name":"response_processor","children":[],"call":["ResponseProcessor  new "]}," Dalli Protocol Binary ResponseProcessor delete_response":{"type":"method","name":"delete_response","children":[],"call":[" raise_on_not_ok! ","resp_header not_stored? ","resp_header not_found? "," read_response "]}," Dalli Protocol Base log_unexpected_err":{"type":"method","name":"log_unexpected_err","children":[],"call":["Dalli  logger error ","err backtrace join ","err backtrace ","Dalli  logger ","err message ","err class name ","err class "]}," Dalli Protocol Base log_marshal_err":{"type":"method","name":"log_marshal_err","children":[],"call":["Dalli  logger error ","Dalli  logger ","err message "]}," Dalli Protocol Base reconnect_on_pipeline_complete!":{"type":"method","name":"reconnect_on_pipeline_complete!","children":[],"call":["@connection_manager reconnect! "," pipeline_complete? "]}," Dalli Protocol Base finish_pipeline":{"type":"method","name":"finish_pipeline","children":[],"call":["@connection_manager finish_request! "," response_buffer clear "," response_buffer "]}," Dalli Protocol Base pipeline_response":{"type":"method","name":"pipeline_response","children":[],"call":[" response_buffer process_single_getk_response "," response_buffer "]}," Dalli Protocol Base response_buffer":{"type":"method","name":"response_buffer","children":[],"call":["ResponseBuffer  new "," response_processor "]}," Dalli Protocol Base pipelined_get":{"type":"method","name":"pipelined_get","children":[],"call":[" write ","req << "," quiet_get_request ","keys each "," +@ "," +@  << "," quiet_get_ +@ uest "]}," Dalli Protocol Base connect":{"type":"method","name":"connect","children":[],"call":[" raise "," up! "," version "," authenticate_connection "," require_auth? ","@connection_manager establish_connection "]}," Dalli Protocol Base cache_nils?":{"type":"method","name":"cache_nils?","children":[],"call":["opts [] ","opts is_a? "]}," Dalli Protocol Base ensure_connected!":{"type":"method","name":"ensure_connected!","children":[],"call":[" connected? "," connect "," reconnect_down_server? "]}," Dalli Protocol Base verify_state":{"type":"method","name":"verify_state","children":[],"call":[" raise_down_error "," ensure_connected! "," verify_allowed_quiet! "," quiet? ","@connection_manager confirm_ready! "]}," Dalli Protocol Base quiet?":{"type":"method","name":"quiet?","children":[],"call":["Thread  current [] ","Thread  current "]}," Dalli Protocol Base require_auth?":{"type":"method","name":"require_auth?","children":[],"call":[" username nil? ! "," username nil? "," username "]}," Dalli Protocol Base password":{"type":"method","name":"password","children":[],"call":["ENV  [] ","@options [] ","ENV  fetch "]}," Dalli Protocol Base username":{"type":"method","name":"username","children":[],"call":["ENV  [] ","@options [] ","ENV  fetch "]}," Dalli Protocol Base pipeline_complete?":{"type":"method","name":"pipeline_complete?","children":[],"call":[" response_buffer in_progress? ! "," response_buffer in_progress? "," response_buffer "]}," Dalli Protocol Base pipeline_abort":{"type":"method","name":"pipeline_abort","children":[],"call":["@connection_manager error_on_request! "," connected? ","@connection_manager abort_request! "," response_buffer clear "," response_buffer "]}," Dalli Protocol Base pipeline_next_responses":{"type":"method","name":"pipeline_next_responses","children":[],"call":["@connection_manager error_on_request! "," pipeline_response ","values []= ","resp_header cas ","key nil? "," finish_pipeline ","resp_header ok? "," response_buffer read "," response_buffer "," reconnect_on_pipeline_complete! "," response_buffer process_single_getk_response ","status nil? "]}," Dalli Protocol Base pipeline_response_setup":{"type":"method","name":"pipeline_response_setup","children":[],"call":["@connection_manager start_request! "," response_buffer reset "," response_buffer "," write_noop "," verify_state "," verify_pipelined_state "]}," Dalli Protocol Base unlock!":{"type":"method","name":"unlock!","children":[],"call":[]}," Dalli Protocol Base lock!":{"type":"method","name":"lock!","children":[],"call":[]}," Dalli Protocol Base alive?":{"type":"method","name":"alive?","children":[],"call":[" ensure_connected! "]}," Dalli Protocol Base request":{"type":"method","name":"request","children":[],"call":[" down! "," log_unexpected_err "," raise "," log_marshal_err ","args first "," send "," verify_state "," close ","@connection_manager finish_request! ","opkey == ","@connection_manager start_request! "]}," Dalli Protocol Base initialize":{"type":"method","name":"initialize","children":[],"call":["ConnectionManager  new ","ValueMarshaller  new ","client_options merge ","ServerConfigParser  parse "]}," Dalli Protocol Binary ResponseProcessor consume_all_responses_until_noop":{"type":"method","name":"consume_all_responses_until_noop","children":[],"call":["resp_header key_len zero? ","resp_header key_len ","resp_header ok? "," read_response "," loop "]}," Dalli Protocol Binary ResponseProcessor version":{"type":"method","name":"version","children":[],"call":[" generic_response "]}," Dalli Protocol Binary ResponseProcessor reset":{"type":"method","name":"reset","children":[],"call":[" generic_response "]}," Dalli Protocol Binary ResponseProcessor flush":{"type":"method","name":"flush","children":[],"call":[" no_body_response "]}," Dalli Protocol Binary ResponseProcessor stats":{"type":"method","name":"stats","children":[],"call":["hash []= "," unpack_response_body ","resp_header ok? ","resp_header key_len zero? ","resp_header key_len "," read_response "," loop "]}," Dalli Protocol Binary ResponseProcessor decr_incr":{"type":"method","name":"decr_incr","children":[],"call":["body unpack1 "," generic_response "," generic_response  unpack1 "]}," Dalli Protocol Binary ResponseProcessor delete":{"type":"method","name":"delete","children":[],"call":[" raise_on_not_ok! ","resp_header not_stored? ","resp_header not_found? "," read_response "]}," Dalli Protocol Binary ResponseProcessor get":{"type":"method","name":"get","children":[],"call":[" unpack_response_body last "," unpack_response_body "," raise_on_not_ok! ","resp_header not_found? ","resp_header not_stored? "," read_response "]}," Dalli Protocol Meta authenticate_connection":{"type":"method","name":"authenticate_connection","children":[],"call":[" raise "]}," Dalli Protocol Meta write_noop":{"type":"method","name":"write_noop","children":[],"call":[" write ","RequestFormatter  meta_noop "]}," Dalli Protocol Meta version":{"type":"method","name":"version","children":[],"call":[" response_processor version "," response_processor "," write ","RequestFormatter  version "]}," Dalli Protocol Meta reset_stats":{"type":"method","name":"reset_stats","children":[],"call":[" response_processor reset "," response_processor "," write ","RequestFormatter  stats "]}," Dalli Protocol Meta stats":{"type":"method","name":"stats","children":[],"call":[" response_processor stats "," response_processor "," write ","RequestFormatter  stats "]}," Dalli Protocol Meta noop":{"type":"method","name":"noop","children":[],"call":[" response_processor consume_all_responses_until_mn "," response_processor "," write_noop "]}," Dalli Protocol Meta flush":{"type":"method","name":"flush","children":[],"call":[" response_processor flush "," response_processor "," quiet? "," write ","RequestFormatter  flush "]}," Dalli Protocol Meta decr_incr":{"type":"method","name":"decr_incr","children":[],"call":[" response_processor decr_incr "," response_processor "," quiet? "," write ","RequestFormatter  meta_arithmetic ","KeyRegularizer  encode ","TtlSanitizer  sanitize "]}," Dalli Protocol Meta incr":{"type":"method","name":"incr","children":[],"call":[" decr_incr "]}," Dalli Protocol Meta decr":{"type":"method","name":"decr","children":[],"call":[" decr_incr "]}," Dalli Protocol Meta delete":{"type":"method","name":"delete","children":[],"call":[" response_processor meta_delete "," response_processor "," quiet? "," write ","RequestFormatter  meta_delete ","KeyRegularizer  encode "]}," Dalli Protocol Meta write_append_prepend_req":{"type":"method","name":"write_append_prepend_req","children":[],"call":[" write ","RequestFormatter  meta_set "," quiet? ","KeyRegularizer  encode ","TtlSanitizer  sanitize "]}," Dalli Protocol Meta prepend":{"type":"method","name":"prepend","children":[],"call":[" response_processor meta_set_append_prepend "," response_processor "," quiet? "," write_append_prepend_req "]}," Dalli Protocol Meta append":{"type":"method","name":"append","children":[],"call":[" response_processor meta_set_append_prepend "," response_processor "," quiet? "," write_append_prepend_req "]}," Dalli Protocol Meta write_storage_req":{"type":"method","name":"write_storage_req","children":[],"call":[" write ","RequestFormatter  meta_set "," quiet? ","KeyRegularizer  encode ","TtlSanitizer  sanitize ","@value_marshaller store "]}," Dalli Protocol Meta replace":{"type":"method","name":"replace","children":[],"call":[" response_processor meta_set_with_cas "," response_processor "," quiet? "," write_storage_req "]}," Dalli Protocol Meta add":{"type":"method","name":"add","children":[],"call":[" response_processor meta_set_with_cas "," response_processor "," quiet? "," write_storage_req "]}," Dalli Protocol Meta set":{"type":"method","name":"set","children":[],"call":[" response_processor meta_set_with_cas "," response_processor "," quiet? "," write_storage_req "]}," Dalli Protocol Meta cas":{"type":"method","name":"cas","children":[],"call":[" response_processor meta_get_with_value_and_cas "," response_processor "," write ","RequestFormatter  meta_get ","KeyRegularizer  encode "]}," Dalli Protocol Meta touch":{"type":"method","name":"touch","children":[],"call":[" response_processor meta_get_without_value "," response_processor "," write ","RequestFormatter  meta_get ","KeyRegularizer  encode ","TtlSanitizer  sanitize "]}," Dalli Protocol Meta gat":{"type":"method","name":"gat","children":[],"call":[" response_processor meta_get_with_value "," cache_nils? "," response_processor "," write ","RequestFormatter  meta_get ","KeyRegularizer  encode ","TtlSanitizer  sanitize "]}," Dalli Protocol Meta quiet_get_request":{"type":"method","name":"quiet_get_request","children":[],"call":["RequestFormatter  meta_get ","KeyRegularizer  encode "]}," Dalli Protocol Meta get":{"type":"method","name":"get","children":[],"call":[" response_processor meta_get_with_value "," cache_nils? "," response_processor "," write ","RequestFormatter  meta_get ","KeyRegularizer  encode "]}," Dalli Protocol Meta response_processor":{"type":"method","name":"response_processor","children":[],"call":["ResponseProcessor  new "]}," Dalli Protocol Meta ResponseProcessor next_line_to_tokens":{"type":"method","name":"next_line_to_tokens","children":[],"call":[" read_line "," read_ read_line  "]}," Dalli Protocol Meta ResponseProcessor read_line":{"type":"method","name":"read_line","children":[],"call":["@io_source read_line "]}," Dalli Protocol Meta ResponseProcessor value_from_tokens":{"type":"method","name":"value_from_tokens","children":[],"call":["bitflags_token [] ","t start_with? ","tokens find "]}," Dalli Protocol Meta ResponseProcessor body_len_from_tokens":{"type":"method","name":"body_len_from_tokens","children":[],"call":[" value_from_tokens "]}," Dalli Protocol Meta ResponseProcessor key_from_tokens":{"type":"method","name":"key_from_tokens","children":[],"call":["KeyRegularizer  decode ","tokens any? "," value_from_tokens "]}," Dalli Protocol Meta ResponseProcessor cas_from_tokens":{"type":"method","name":"cas_from_tokens","children":[],"call":[" value_from_tokens "]}," Dalli Protocol Meta ResponseProcessor bitflags_from_tokens":{"type":"method","name":"bitflags_from_tokens","children":[],"call":[" value_from_tokens "]}," Dalli Protocol Meta ResponseProcessor error_on_unexpected!":{"type":"method","name":"error_on_unexpected!","children":[],"call":[" raise ","tokens first ","expected_codes include? "," next_line_to_tokens "," next_line_to_tokens  first "," next_line_to_ next_line_to_tokens  "]}," Dalli Protocol Meta ResponseProcessor header_from_buffer":{"type":"method","name":"header_from_buffer","children":[],"call":["buf split first ","buf split "]}," Dalli Protocol Meta ResponseProcessor contains_header?":{"type":"method","name":"contains_header?","children":[],"call":["buf include? "]}," Dalli Protocol Meta ResponseProcessor getk_response_from_buffer":{"type":"method","name":"getk_response_from_buffer","children":[],"call":[" full_response_from_buffer ","buf slice ","buf bytesize >= ","buf bytesize ","header_len + + ","TERMINATOR  length ","header_len + ","body_len zero? "," tokens_from_header_buffer "," contains_header? ","buf slice _len zero? "]}," Dalli Protocol Meta ResponseProcessor full_response_from_buffer":{"type":"method","name":"full_response_from_buffer","children":[],"call":[" key_from_tokens "," cas_from_tokens ","tokens first == ","tokens first ","@value_marshaller retrieve "," bitflags_from_tokens ","@@value_marshaller retrieve _marshaller retrieve "]}," Dalli Protocol Meta ResponseProcessor tokens_from_header_buffer":{"type":"method","name":"tokens_from_header_buffer","children":[],"call":[" body_len_from_tokens ","header bytesize + ","TERMINATOR  length ","header bytesize ","header split "," header_from_buffer ","  body_len_from_tokens _from_tokens "," body_len_from_header split  "," header_from_buffer  bytesize + "," header_from_buffer  bytesize "," header_from_buffer  split ","  header_from_buffer _from_buffer "]}," Dalli Protocol Meta ResponseProcessor consume_all_responses_until_mn":{"type":"method","name":"consume_all_responses_until_mn","children":[],"call":[" next_line_to_tokens ","tokens first != ","tokens first "," next_line_to_ next_line_to_tokens  "," next_line_to_tokens  first != "," next_line_to_tokens  first "]}," Dalli Protocol Meta ResponseProcessor version":{"type":"method","name":"version","children":[],"call":["tokens last "," error_on_unexpected! "," error_on_unexpected!  last "]}," Dalli Protocol Meta ResponseProcessor reset":{"type":"method","name":"reset","children":[],"call":[" error_on_unexpected! "]}," Dalli Protocol Meta ResponseProcessor flush":{"type":"method","name":"flush","children":[],"call":[" error_on_unexpected! "]}," Dalli Protocol Meta ResponseProcessor stats":{"type":"method","name":"stats","children":[],"call":[" next_line_to_tokens ","values []= ","tokens [] ","tokens first != ","tokens first "," error_on_unexpected! "," next_line_to_ next_line_to_tokens  "," next_line_to_ error_on_unexpected!  "," next_line_to_tokens  [] "," error_on_unexpected!  [] "," next_line_to_tokens  first != "," error_on_unexpected!  first != "," next_line_to_tokens  first "," error_on_unexpected!  first "]}," Dalli Protocol Meta ResponseProcessor decr_incr":{"type":"method","name":"decr_incr","children":[],"call":[" read_line to_i "," read_line ","tokens first == ","tokens first ","(const nil :NS) include? "," error_on_unexpected! "," error_on_unexpected!  first == "," error_on_unexpected!  first "]}," Dalli Protocol Meta ResponseProcessor meta_delete":{"type":"method","name":"meta_delete","children":[],"call":["tokens first == ","tokens first "," error_on_unexpected! "," error_on_unexpected!  first == "," error_on_unexpected!  first "]}," Dalli Protocol Meta ResponseProcessor meta_set_append_prepend":{"type":"method","name":"meta_set_append_prepend","children":[],"call":["tokens first == ","tokens first "," error_on_unexpected! "," error_on_unexpected!  first == "," error_on_unexpected!  first "]}," Dalli Protocol Meta ResponseProcessor meta_set_with_cas":{"type":"method","name":"meta_set_with_cas","children":[],"call":[" cas_from_tokens ","tokens first == ","tokens first "," error_on_unexpected! "," cas_from_ error_on_unexpected!  "," error_on_unexpected!  first == "," error_on_unexpected!  first "]}," Dalli Protocol Meta ResponseProcessor meta_get_without_value":{"type":"method","name":"meta_get_without_value","children":[],"call":["tokens first == ","tokens first "," error_on_unexpected! "," error_on_unexpected!  first == "," error_on_unexpected!  first "]}," Dalli Protocol Meta ResponseProcessor meta_get_with_value_and_cas":{"type":"method","name":"meta_get_with_value_and_cas","children":[],"call":["@value_marshaller retrieve "," bitflags_from_tokens "," read_line ","tokens first == ","tokens first "," cas_from_tokens "," error_on_unexpected! "," bitflags_from_ error_on_unexpected!  "," error_on_unexpected!  first == "," error_on_unexpected!  first ","  cas_from_tokens _from_tokens "," cas_from_ error_on_unexpected!  "]}," Dalli Protocol Meta ResponseProcessor meta_get_with_value":{"type":"method","name":"meta_get_with_value","children":[],"call":["@value_marshaller retrieve "," bitflags_from_tokens "," read_line ","tokens first == ","tokens first "," error_on_unexpected! "," bitflags_from_ error_on_unexpected!  "," error_on_unexpected!  first == "," error_on_unexpected!  first "]}," Dalli Protocol Meta ResponseProcessor initialize":{"type":"method","name":"initialize","children":[],"call":[]}," Dalli Protocol Meta RequestFormatter mode_to_token":{"type":"method","name":"mode_to_token","children":[],"call":[]}," Dalli Protocol Meta RequestFormatter stats":{"type":"method","name":"stats","children":[],"call":[]}," Dalli Protocol Meta RequestFormatter flush":{"type":"method","name":"flush","children":[],"call":[]}," Dalli Protocol Meta RequestFormatter version":{"type":"method","name":"version","children":[],"call":[]}," Dalli Protocol Meta RequestFormatter meta_noop":{"type":"method","name":"meta_noop","children":[],"call":[]}," Dalli Protocol Meta RequestFormatter meta_arithmetic":{"type":"method","name":"meta_arithmetic","children":[],"call":[]}," Dalli Protocol Meta RequestFormatter meta_delete":{"type":"method","name":"meta_delete","children":[],"call":[]}," Dalli Protocol Meta RequestFormatter meta_set":{"type":"method","name":"meta_set","children":[],"call":[]}," Dalli Protocol Meta RequestFormatter meta_get":{"type":"method","name":"meta_get","children":[],"call":[]}," Dalli Protocol Meta KeyRegularizer decode":{"type":"method","name":"decode","children":[],"call":[]}," Dalli Protocol Meta KeyRegularizer encode":{"type":"method","name":"encode","children":[],"call":[]}," Dalli Protocol ConnectionManager read_line":{"type":"method","name":"read_line","children":[],"call":[" error_on_request! "," finish_request! ","data nil? ","@sock gets "," start_request! ","@sock gets  nil? "]}," Dalli Protocol Base verify_allowed_quiet!":{"type":"method","name":"verify_allowed_quiet!","children":[],"call":[" raise ","ALLOWED_QUIET_OPS  include? "]}," Dalli Protocol Meta RequestFormatter parse_to_64_bit_int":{"type":"method","name":"parse_to_64_bit_int","children":[],"call":[]}," Dalli Protocol Meta RequestFormatter cas_string":{"type":"method","name":"cas_string","children":[],"call":[]}," Dalli KeyManager evaluate_namespace":{"type":"method","name":"evaluate_namespace","children":[],"call":[" namespace "," namespace call to_s "," namespace call "," namespace is_a? "]}," Dalli PIDCache pid":{"type":"method","name":"pid","children":[],"call":["Process  pid "]}," Dalli PIDCache CoreExt _fork":{"type":"method","name":"_fork","children":[],"call":["PIDCache  update! ","child_pid zero? "]}," Dalli PIDCache update!":{"type":"method","name":"update!","children":[],"call":["Process  pid "]}," Dalli Protocol ConnectionManager confirm_in_progress!":{"type":"method","name":"confirm_in_progress!","children":[],"call":[" close_on_fork "," fork_detected? "," raise "," request_in_progress? "]}," Dalli Protocol Base verify_pipelined_state":{"type":"method","name":"verify_pipelined_state","children":[],"call":[" raise_down_error "," connected? ","@connection_manager confirm_in_progress! "]}}