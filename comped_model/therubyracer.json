{" Object tap":{"type":"method","name":"tap","children":[],"call":[]}," V8 StackFrame to_s":{"type":"method","name":"to_s","children":[],"call":[" column "," line_number "," script_name "," function_name ","@native GetFunctionName ","at  + "," function_name empty? ! "," function_name empty? ","@context enter "]}," V8 StackFrame constructor?":{"type":"method","name":"constructor?","children":[],"call":["@native IsConstructor ","@context enter "]}," V8 StackFrame eval?":{"type":"method","name":"eval?","children":[],"call":["@native IsEval ","@context enter "]}," V8 StackFrame column":{"type":"method","name":"column","children":[],"call":["@native GetColumn ","@context enter "]}," V8 StackFrame line_number":{"type":"method","name":"line_number","children":[],"call":["@native GetLineNumber ","@context enter "]}," V8 StackFrame function_name":{"type":"method","name":"function_name","children":[],"call":["@to rb ","@native GetFunctionName ","@context to_ruby ","@context enter "]}," V8 StackFrame script_name":{"type":"method","name":"script_name","children":[],"call":["@to rb ","@native GetScriptName ","@context to_ruby ","@context enter "]}," V8 StackFrame initialize":{"type":"method","name":"initialize","children":[],"call":[]}," V8 StackTrace to_s":{"type":"method","name":"to_s","children":[],"call":["(send nil :map) join "," map "," map join "]}," V8 StackTrace each":{"type":"method","name":"each","children":[],"call":["V8 StackFrame  new ","@native GetFrame "," length - "," length ","@context enter "]}," V8 StackTrace length":{"type":"method","name":"length","children":[],"call":["@native GetFrameCount ","@context enter "]}," V8 StackTrace initialize":{"type":"method","name":"initialize","children":[],"call":["V8 Context  current "]}," V8 Portal v8":{"type":"method","name":"v8","children":[],"call":["@templates to_constructor allocate ","@templates to_constructor ","value class ","@proxies rb2js ","constructor function ","constructor exposed= ","C Date  New ","value to_f * ","value to_f ","o Set "," v8 ","value each ","C Object  New tap ","C Object  New ","a Set ","value each_with_index ","C Array  New tap ","C Array  New ","value length ","@templates to_function function ","@templates to_function ","C String  NewSymbol ","value to_s ","C String  New ","value instance_eval ","@instances [] ","f SetPrototype ","prototype SetPrototype ","(send\n  (const\n    (const nil :C) :FunctionTemplate) :New) GetFunction ","C FunctionTemplate  New "," rubytemplate NewInstance "," rubytemplate ","f SetHiddenValue ","C External  New ","@embedded_constructors [] GetFunction tap ","@embedded_constructors [] GetFunction ","@embedded_constructors [] ","@functions [] ","@templates to_@templates to_constructor  allocate ","@templates to_@templates to_constructor  ","@templates to_constructor  function ","@templates to_constructor  exposed= "," rubytemplate NewInstance  SetPrototype ","@embedded_@templates to_constructor s [] GetFunction tap ","@embedded_@templates to_constructor s [] GetFunction ","@embedded_@templates to_constructor s [] "]}," V8 Portal rb":{"type":"method","name":"rb","children":[],"call":["value IsEmpty ","V8 StackTrace  new ","Time  at ","value NumberValue / ","value NumberValue ","s force_encoding ","s respond_to? ","value Utf8Value tap ","value Utf8Value ","V8 Object  new ","V8 Array  new ","V8 Function  new ","@proxies js2rb "," peer "]}," V8 Portal open":{"type":"method","name":"open","children":[],"call":["@context native enter ","@context native "," block_given? "," lock "]}," V8 Portal lock":{"type":"method","name":"lock","children":[],"call":["lock delete ","V8 C Locker  new ","V8 C Locker  new  delete "]}," V8 Portal initialize":{"type":"method","name":"initialize","children":[],"call":["Caller  new ","Interceptors  new ","Templates  new ","Proxies  new ","h []= ","this SetHiddenValue ","C String  NewSymbol ","arguments This tap ","arguments This ","C External  New "," rubysend ","rbargs << "," rb ","arguments [] ","arguments Length - ","arguments Length ","arguments [] kind_of? ","arguments Length > ","template SetCallHandler ","@constructors [] ","Hash  new ","Functions  new ","@constructors [] GetFunction NewInstance ","@constructors [] GetFunction ","obj class ","args Set ","C Array  New ","template SetClassName ","rb:: + ","cls name =~ ","cls name ","template Inherit ","cls superclass ","cls superclass != ","cls != "," setuptemplate ","template InstanceTemplate ","template tap ","C  ThrowException ","C Exception  Error ","C String  New ","arguments Length == ","C FunctionTemplate  New "," Interceptor ","rbC Array  New  << ","@constructors []  SetCallHandler ","C Array  New  Set ","@constructors []  SetClassName ","@constructors []  Inherit "," setup@constructors []  ","@constructors []  InstanceTemplate ","@constructors []  tap "]}," V8 Portal Templates Release call":{"type":"method","name":"call","children":[],"call":["@releases delete ","@refs delete "]}," V8 Portal Templates Release initialize":{"type":"method","name":"initialize","children":[],"call":[]}," V8 Portal Templates release":{"type":"method","name":"release","children":[],"call":["@releases []= ","Release  new ","@Release  new s []= "]}," V8 Portal Templates proxies":{"type":"method","name":"proxies","children":[],"call":["@portal proxies "]}," V8 Portal Templates to_function":{"type":"method","name":"to_function","children":[],"call":["function template MakeWeak "," release ","function template ","@procs []= ","FunctionAdapter  new ","@procs [] ","code to_s ","@methods []= ","@methods [] ","@procs []=  template MakeWeak ","@methods []=  template MakeWeak ","@procs []=  template ","@methods []=  template "]}," V8 Portal Templates to_constructor":{"type":"method","name":"to_constructor","children":[],"call":["ObjectSpace  define_finalizer "," release ","@constructors []= ","ConstructorAdapter  new ","@constructors [] ","ruby_class object_id ","@@constructors []= s []= ","@@constructors [] s []= ","@@constructors []= s [] ","@@constructors [] s [] "]}," V8 Portal Templates initialize":{"type":"method","name":"initialize","children":[],"call":[]}," V8 Portal Proxies ClearRubyProxy call":{"type":"method","name":"call","children":[],"call":["@js2rb delete ","@rb2js delete ","@rb2js [] ","V8 C V8  AdjustAmountOfExternalAllocatedMemory ","-8 * ","@@rb2js [] 2rb delete ","@rb2@rb2js []  delete ","@rb2@rb2js []  [] "]}," V8 Portal Proxies ClearRubyProxy initialize":{"type":"method","name":"initialize","children":[],"call":[]}," V8 Portal Proxies ClearJSProxy call":{"type":"method","name":"call","children":[],"call":["@rb2js delete ","@js2rb delete ","@js2rb [] ","V8 C V8  AdjustAmountOfExternalAllocatedMemory ","-16 * ","@@js2rb [] 2js delete ","@js2@js2rb []  delete ","@js2@js2rb []  [] "]}," V8 Portal Proxies ClearJSProxy initialize":{"type":"method","name":"initialize","children":[],"call":[]}," V8 Portal Proxies empty?":{"type":"method","name":"empty?","children":[],"call":[" rb_empty? "," js_empty? "]}," V8 Portal Proxies rb_empty?":{"type":"method","name":"rb_empty?","children":[],"call":["@rb_proxies_js2rb empty? ","@rb_proxies_rb2js empty? "]}," V8 Portal Proxies js_empty?":{"type":"method","name":"js_empty?","children":[],"call":["@js_proxies_js2rb empty? ","@js_proxies_rb2js empty? "]}," V8 Portal Proxies rb_proxy_2_js_object":{"type":"method","name":"rb_proxy_2_js_object","children":[],"call":["@rb_proxies_rb2js [] ","proxy object_id "]}," V8 Portal Proxies js_object_2_rb_proxy":{"type":"method","name":"js_object_2_rb_proxy","children":[],"call":["@clear_rb_proxy call ","ObjectSpace  _id2ref ","@rb_proxies_js2rb [] ","ObjectSpace  _@rb_proxies_js2rb [] 2ref "]}," V8 Portal Proxies register_ruby_proxy":{"type":"method","name":"register_ruby_proxy","children":[],"call":["ObjectSpace  define_finalizer ","@rb_proxies_js2rb []= ","proxy object_id ","@rb_proxies_rb2js []= "," fail ","proxy inspect ","target kind_of? ","options [] ","V8 C V8  AdjustAmountOfExternalAllocatedMemory ","8 * ","options []  kind_of? "]}," V8 Portal Proxies js_proxy_2_rb_object":{"type":"method","name":"js_proxy_2_rb_object","children":[],"call":["@js_proxies_js2rb [] "]}," V8 Portal Proxies rb_object_2_js_proxy":{"type":"method","name":"rb_object_2_js_proxy","children":[],"call":["@js_proxies_rb2js [] "]}," V8 Portal Proxies register_javascript_proxy":{"type":"method","name":"register_javascript_proxy","children":[],"call":["proxy MakeWeak ","@js_proxies_rb2js []= ","@js_proxies_js2rb []= "," fail ","@js_proxies_rb2js [] ","proxy class ","proxy kind_of? ","options [] ","V8 C V8  AdjustAmountOfExternalAllocatedMemory ","16 * "]}," V8 Portal Proxies rb2js":{"type":"method","name":"rb2js","children":[],"call":[" register_javascript_proxy ","@js_proxies_rb2js [] ","V8 C Object  New "," block_given? "," rb_object_2_js_proxy "," rb_proxy_2_js_object "," register_javascript_V8 C Object  New  ","@ rb_object_2_js_proxy _proxies_rb2 rb_object_2_js_proxy  [] ","@ rb_proxy_2_js_object _proxies_rb2 rb_proxy_2_js_object  [] "," rb_object_2_js_V8 C Object  New  "," rb_object_2_ rb_object_2_js_proxy _proxy "," rb_object_2_ rb_proxy_2_js_object _proxy "," rb_V8 C Object  New _2_js_object "," rb_proxy_2_ rb_object_2_js_proxy _object "," rb_proxy_2_ rb_proxy_2_js_object _object "]}," V8 Portal Proxies js2rb":{"type":"method","name":"js2rb","children":[],"call":[" register_ruby_proxy ","js kind_of? ","Object  new "," block_given? "," js_object_2_rb_proxy "," js_proxy_2_rb_object "," register_ruby_Object  new  "," js_object_2_rb_Object  new  "," js_object_2_ js_object_2_rb_proxy _proxy "," js_object_2_ js_proxy_2_rb_object _proxy "," js_Object  new _2_rb_object "," js_proxy_2_ js_object_2_rb_proxy _object "," js_proxy_2_ js_proxy_2_rb_object _object "]}," V8 Portal Proxies initialize":{"type":"method","name":"initialize","children":[],"call":["ClearRubyProxy  new ","ClearJSProxy  new "]}," V8 Portal Interceptors IndexedPropertyEnumerator call":{"type":"method","name":"call","children":[],"call":["@access indices "," intercept "]}," V8 Portal Interceptors IndexedPropertyDeleter call":{"type":"method","name":"call","children":[],"call":["@access idelete "," intercept "]}," V8 Portal Interceptors IndexedPropertyQuery call":{"type":"method","name":"call","children":[],"call":["C Integer  New ","attributes flags ","result == ","@access indices "," intercept ","PropertyAttributes  new ","PropertyAttributes  new  flags "]}," V8 Portal Interceptors IndexedPropertySetter call":{"type":"method","name":"call","children":[],"call":["@access iset ","@to rb "," intercept "]}," V8 Portal Interceptors IndexedPropertyGetter call":{"type":"method","name":"call","children":[],"call":["@access iget "," intercept "]}," V8 Portal Interceptors NamedPropertyDeleter call":{"type":"method","name":"call","children":[],"call":["@access delete "," intercept "]}," V8 Portal Interceptors NamedPropertyEnumerator call":{"type":"method","name":"call","children":[],"call":["@access names to_a ","@access names "," intercept "]}," V8 Portal Interceptors NamedPropertyQuery call":{"type":"method","name":"call","children":[],"call":["C Integer  New ","attributes flags ","result == ","@access query ","@to rb "," intercept ","PropertyAttributes  new ","PropertyAttributes  new  flags "]}," V8 Portal Interceptors NamedPropertySetter call":{"type":"method","name":"call","children":[],"call":["@access set ","@to rb "," intercept "]}," V8 Portal Interceptors NamedPropertyGetter call":{"type":"method","name":"call","children":[],"call":["@access get ","@to rb "," intercept "]}," V8 Portal Interceptors Interceptor intercept":{"type":"method","name":"intercept","children":[],"call":["code call "," proc ","@to caller protect ","@to caller ","@to rb ","info This "]}," V8 Portal Interceptors Interceptor initialize":{"type":"method","name":"initialize","children":[],"call":["portal access "]}," V8 Portal Interceptors PropertyAttributes dont_delete":{"type":"method","name":"dont_delete","children":[],"call":[" tap "]}," V8 Portal Interceptors PropertyAttributes dont_enum":{"type":"method","name":"dont_enum","children":[],"call":[" tap "]}," V8 Portal Interceptors PropertyAttributes read_only":{"type":"method","name":"read_only","children":[],"call":[" tap "]}," V8 Portal Interceptors PropertyAttributes initialize":{"type":"method","name":"initialize","children":[],"call":[]}," V8 Portal Interceptors setup":{"type":"method","name":"setup","children":[],"call":["template SetIndexedPropertyHandler ","template SetNamedPropertyHandler "]}," V8 Portal Interceptors initialize":{"type":"method","name":"initialize","children":[],"call":["IndexedPropertyEnumerator  new ","IndexedPropertySetter  new ","IndexedPropertyGetter  new ","NamedPropertyEnumerator  new ","NamedPropertySetter  new ","NamedPropertyGetter  new "]}," V8 Portal FunctionAdapter BindAndCall call":{"type":"method","name":"call","children":[],"call":["method bind call ","method bind ","@portal caller protect ","@portal caller ","@portal rb ","arguments This ","rbargs << ","arguments [] ","arguments Length - ","arguments Length ","arguments Data ","arguments Data  bind call ","arguments Data  bind "]}," V8 Portal FunctionAdapter BoundCall call":{"type":"method","name":"call","children":[],"call":["@portal caller invoke ","@portal caller ","rbargs << ","@portal rb ","arguments [] ","arguments Length - ","arguments Length ","arguments Data "]}," V8 Portal FunctionAdapter Call call":{"type":"method","name":"call","children":[],"call":["@portal caller invoke ","@portal caller ","rbargs << ","@portal rb ","arguments [] ","arguments Length - ","arguments Length ","arguments This ","arguments Data "]}," V8 Portal FunctionAdapter Call initialize":{"type":"method","name":"initialize","children":[],"call":[]}," V8 Portal FunctionAdapter function":{"type":"method","name":"function","children":[],"call":["@template GetFunction "]}," V8 Portal FunctionAdapter initialize":{"type":"method","name":"initialize","children":[],"call":["V8 C FunctionTemplate  New ","Call  new ","BindAndCall  new ","BoundCall  new ","code respond_to? "]}," V8 Portal ConstructorAdapter portal":{"type":"method","name":"portal","children":[],"call":["@templates portal "]}," V8 Portal ConstructorAdapter proxies":{"type":"method","name":"proxies","children":[],"call":["@templates proxies "]}," V8 Portal ConstructorAdapter ruby_class":{"type":"method","name":"ruby_class","children":[],"call":["ObjectSpace  _id2ref "]}," V8 Portal ConstructorAdapter exposed=":{"type":"method","name":"exposed=","children":[],"call":[" template GetFunction SetPrototype "," template GetFunction "," template ","prototype SetPrototype ","C FunctionTemplate  New GetFunction ","C FunctionTemplate  New ","prototype_template NewInstance "," portal interceptors setup "," portal interceptors "," portal ","C ObjectTemplate  New ","@augmented ! ","prototype_template NewInstance  SetPrototype ","prototype_template NewInstance _template NewInstance ","C ObjectTemplate  New  NewInstance "]}," V8 Portal ConstructorAdapter invoke":{"type":"method","name":"invoke","children":[],"call":[" proxies register_javascript_proxy ","arguments This "," proxies "," ruby_class new "," ruby_class "," portal caller raw "," portal caller "," portal ","rbargs << ","@templates portal rb ","arguments [] ","@templates portal ","arguments Length - ","arguments Length ","arguments [] Value ","arguments [] kind_of? ","arguments Length > ","C  ThrowException ","C Exception  Error ","C String  New ","arguments Length == ","@exposed ! "]}," V8 Portal ConstructorAdapter enable":{"type":"method","name":"enable","children":[],"call":[]}," V8 Portal ConstructorAdapter disable":{"type":"method","name":"disable","children":[],"call":[]}," V8 Portal ConstructorAdapter allocate":{"type":"method","name":"allocate","children":[],"call":[" function NewInstance "," function ","arguments Set ","C External  New ","C Array  New ","C Array  New  Set "]}," V8 Portal ConstructorAdapter function":{"type":"method","name":"function","children":[],"call":["@template GetFunction "]}," V8 Portal ConstructorAdapter initialize":{"type":"method","name":"initialize","children":[],"call":[" template SetClassName "," template ","C String  NewSymbol ","rb:: + ","cls name =~ ","cls name ","@template Inherit ","templates to_constructor template ","templates to_constructor ","superclass != ","cls != ","cls superclass "," ruby_class "," portal interceptors setup ","@template InstanceTemplate "," portal interceptors "," portal ","C FunctionTemplate  New "," method "," ruby_class  name =~ "," ruby_class  name ","C FunctionTemplate  New  Inherit ","cls superclass  != "," ruby_class  != ","cls cls superclass  "," ruby_class  superclass ","C FunctionTemplate  New  InstanceTemplate "]}," V8 Portal Caller invoke":{"type":"method","name":"invoke","children":[],"call":["code call ","args slice ","code arity ","code arity >= "," protect ","args slice  slice "]}," V8 Portal Caller protect":{"type":"method","name":"protect","children":[],"call":["@portal v8 "," raw "]}," V8 Portal Caller raw":{"type":"method","name":"raw","children":[],"call":["V8 C  ThrowException ","error SetHiddenValue ","C External  New ","V8 C Exception  Error ","V8 C String  New ","e message "," raise ","V8 C Exception  Error  SetHiddenValue "]}," V8 Portal Caller initialize":{"type":"method","name":"initialize","children":[],"call":[]}," Object eval_js":{"type":"method","name":"eval_js","children":[],"call":["V8 Context  new eval ","V8 Context  new ","cxt eval ","V8 Context  open "]}," V8 Object method_missing":{"type":"method","name":"method_missing","children":[],"call":[" raise ","args length ","args empty? ","property methodcall ","property kind_of? "," [] "," respond_to? "," []= ","args first ","args length > ","name to_s =~ ","name to_s "," []  methodcall "," []  kind_of? "]}," V8 Object respond_to?":{"type":"method","name":"respond_to?","children":[],"call":[" [] != "," [] "]}," V8 Object each":{"type":"method","name":"each","children":[],"call":[" [] ","to rb ","@native GetPropertyNames ","@portal open ","To  rb ","@context enter "]}," V8 Object to_s":{"type":"method","name":"to_s","children":[],"call":["to rb ","@native ToString ","@portal open ","@native context open ","@native context ","To  rb ","@context enter "]}," V8 Object []=":{"type":"method","name":"[]=","children":[],"call":["@native Set ","to v8 ","@portal open ","value tap ","key to_s ","@native context open ","@native context ","To  v8 ","@context enter "]}," V8 Object []":{"type":"method","name":"[]","children":[],"call":["to rb ","@native Get ","to v8 ","@portal open ","To  ruby ","key to_s ","@native context open ","@native context ","To  v8 ","@context enter ","To  rb "]}," V8 Object initialize":{"type":"method","name":"initialize","children":[],"call":[" raise ","C Context  GetEntered "]}," V8 Function name=":{"type":"method","name":"name=","children":[],"call":["@native SetName ","to v8 ","@portal open ","name tap "]}," V8 Function name":{"type":"method","name":"name","children":[],"call":["to rb ","@native GetName ","@portal open "]}," V8 Function new":{"type":"method","name":"new","children":[],"call":["to rb ","@native NewInstance ","to v8 ","@portal open ","To  rb ","To  v8 ","@context enter "]}," V8 Function call":{"type":"method","name":"call","children":[],"call":[" methodcall ","@portal context native Global ","@portal context native ","@portal context ","@portal open ","To  ruby ","@native Call ","To  v8 ","args map "," raise ","JavascriptError  new ","try HasCaught ","@context enter ","C TryCatch  try ","@context Global "]}," V8 Function methodcall":{"type":"method","name":"methodcall","children":[],"call":[" raise ","JSError  new ","try HasCaught ","to rb ","@native Call ","to v8 ","C TryCatch  try ","@portal open ","JavascriptError  new ","To  ruby ","To  v8 ","@context enter ","To  rb "]}," V8 JSError Boundary initialize":{"type":"method","name":"initialize","children":[],"call":["frames [] "]}," V8 JSError syntax_error?":{"type":"method","name":"syntax_error?","children":[],"call":["type name == ","type name ","type kind_of? ","ex [] ","ex kind_of? ","@to rb ","try Exception ","type GetName AsciiValue == ","type GetName AsciiValue ","type GetName ","ex Get ","ex []  name == ","ex Get  name == ","ex []  name ","ex Get  name ","ex []  kind_of? ","ex Get  kind_of? ","@to rb  [] ","try Exception  [] ","@to rb  kind_of? ","try Exception  kind_of? ","ex []  GetName AsciiValue == ","ex Get  GetName AsciiValue == ","ex []  GetName AsciiValue ","ex Get  GetName AsciiValue ","ex []  GetName ","ex Get  GetName ","@to rb  Get ","try Exception  Get "]}," V8 JSError parse_js_frames":{"type":"method","name":"parse_js_frames","children":[],"call":["msg GetStartColumn + ","msg GetStartColumn ","msg GetLineNumber ","@to rb ","msg GetScriptResourceName ","try Message ","(send\n  (send\n    (send\n      (lvar :raw) :split\n      (str \"\\n\")) :[]\n    (irange\n      (int 1)\n      (int -1))) :tap) reject ","frame chomp! ","frame strip! ","frames each ","raw split [] tap ","raw split [] ","raw split "," syntax_error? ! "," syntax_error? ","raw empty? ! ","raw empty? ","try StackTrace ","frame strip! chomp! ","To  rb ","try Message  GetStartColumn + ","try Message  GetStartColumn ","try Message  GetLineNumber ","try Message  GetScriptResourceName ","(send\n  (send\n    (send\n      (lvar :@to rb ) :split\n      (str \"\\n\")) :[]\n    (irange\n      (int 1)\n      (int -1))) :tap) reject ","(send\n  (send\n    (send\n      (lvar :To  rb ) :split\n      (str \"\\n\")) :[]\n    (irange\n      (int 1)\n      (int -1))) :tap) reject ","@to rb  split [] tap ","To  rb  split [] tap ","@to rb  split [] ","To  rb  split [] ","@to rb  split ","To  rb  split ","@to rb  empty? ! ","To  rb  empty? ! ","@to rb  empty? ","To  rb  empty? "]}," V8 JSError backtrace":{"type":"method","name":"backtrace","children":[],"call":["mixed unshift ","f =~ ","rbframes reject! ","b jsframes ","b rbframes ","jsframes pop ","frame == ","jsframes last ","jscontext reverse_each ","b jsframes dup ","rbframes pop ","rbframes last ","rbcontext reverse_each ","b rbframes dup ","@boundaries each ","modifiers include? ","modifiers length == ","modifiers length ","b rbframes dup  reject! ","b b jsframes dup  ","b b rbframes dup  ","b jsframes dup  pop ","b jsframes dup  last ","b jsframes  reverse_each ","b b jsframes dup  dup ","b rbframes dup  pop ","b rbframes dup  last ","b rbframes  reverse_each ","b b rbframes dup  dup "]}," V8 JSError in_javascript?":{"type":"method","name":"in_javascript?","children":[],"call":[" in_ruby? ! "," in_ruby? "]}," V8 JSError in_ruby?":{"type":"method","name":"in_ruby?","children":[],"call":["@value kind_of? "]}," V8 JSError initialize_unsafe":{"type":"method","name":"initialize_unsafe","children":[],"call":["ex to_s ","@boundaries concat ","Boundary  new ","prev backtrace ","prev value ","prev boundaries ","prev kind_of? ","cause Value ","cause IsEmpty ! ","cause IsEmpty ","ex instance_variable_get GetHiddenValue ","ex instance_variable_get ","ex [] ","V8 Object  === "," parse_js_frames "," caller ","@to rb ","try Exception ","@boundaries first jsframes << ","@boundaries first jsframes ","@boundaries first ","To  rb ","@to rb  to_s ","To  rb  to_s ","cause Value  backtrace ","cause Value  value ","cause Value  boundaries ","cause Value  kind_of? ","ex instance_variable_get GetHiddenValue  Value ","ex instance_variable_get GetHiddenValue  IsEmpty ! ","ex instance_variable_get GetHiddenValue  IsEmpty ","@to rb  instance_variable_get GetHiddenValue ","To  rb  instance_variable_get GetHiddenValue ","@to rb  instance_variable_get ","To  rb  instance_variable_get ","@to rb  [] ","To  rb  [] "]}," V8 JSError initialize":{"type":"method","name":"initialize","children":[],"call":["e message ","Boundary  new ","e backtrace "," initialize_unsafe "]}," V8 C Context enter":{"type":"method","name":"enter","children":[],"call":[" Exit "," Enter "," IsEntered "," block_given? "]}," V8 Context passes_this_argument?":{"type":"method","name":"passes_this_argument?","children":[],"call":[]}," V8 Context stack":{"type":"method","name":"stack","children":[],"call":[]}," V8 Context []=":{"type":"method","name":"[]=","children":[],"call":["@global Set ","@to v8 ","@to open ","@native Global Set "," to_v8 ","@native Global "," enter ","scope Set ","key to_s ","@native Global tap ","value tap "," open ","@scope []= "]}," V8 Context []":{"type":"method","name":"[]","children":[],"call":["@to rb ","@global Get ","@to v8 ","@to open "," to_ruby ","@native Global Get "," to_v8 ","@native Global "," enter ","To  ruby ","key to_s "," open ","@scope [] "]}," V8 Context load":{"type":"method","name":"load","children":[],"call":[" eval ","File  open "," evaluate "]}," V8 Context eval":{"type":"method","name":"eval","children":[],"call":[" raise ","@to rb ","JSError  new ","try HasCaught ","script Run ","C Script  Compile ","@to v8 ","filename to_s ","javascript to_s ","@native enter ","C TryCatch  try ","@to lock ","javascript read ","StringIO  === ","IO  === "," to_ruby "," try ","V8 C Script  New ","source to_s "," enter ","source read ","script RunWithTimeout ","To  ruby ","@native eval ","JavascriptError  new ","result kind_of? ","@native eval tap ","@native open ","To  v8 ","To  rb ","C Script  Compile  Run ","javaC Script  Compile  to_s ","javascript read  to_s ","javaC Script  Compile  read ","javascript read  read ","source read  to_s ","source read  read ","C Script  Compile  RunWithTimeout ","JavaC Script  Compile Error  new ","script Run  kind_of? "]}," V8 Context initialize":{"type":"method","name":"initialize","children":[],"call":[" block_given? ","@global SetHiddenValue ","C External  New ","C String  NewSymbol ","@to rb ","constructor enable ","@to proxies register_javascript_proxy ","@to proxies ","@native Global ","@native enter ","C Context  New ","opts [] ","C ObjectTemplate  New ","constructor template InstanceTemplate ","constructor template ","constructor disable ","@to templates to_constructor ","with class ","@to templates ","@to lock ","Portal  new ","Access  new ","V8 C Context  New ","V8 C  Locker "," link "," enter ","global class to_template InstanceTemplate ","global class to_template ","global class ","Context  new enter ","Context  new ","options [] ","Conversion  new ","C Context  new ","V8 Object  new ","To  rb ","@native Global SetHiddenValue ","C String  New ","Access  rubyobject ","@to rubytemplate ","@native Global  SetHiddenValue ","@options []  SetHiddenValue ","Portal  new  rb ","@to templates to_constructor  enable ","Portal  new  proxies register_javascript_proxy ","Portal  new  proxies ","C Context  New  Global ","V8 C Context  New  Global ","C Context  new  Global ","C Context  New  enter ","V8 C Context  New  enter ","C Context  new  enter ","constructor C ObjectTemplate  New  InstanceTemplate ","@to templates to_constructor  template InstanceTemplate ","constructor C ObjectTemplate  New  ","@to templates to_constructor  template ","@to templates to_constructor  disable ","@to C ObjectTemplate  New s to_constructor ","@to templates to_@to templates to_constructor  ","Portal  new  templates to_constructor ","opts []  class ","@to C ObjectTemplate  New s ","Portal  new  templates ","Portal  new  lock ","global class to_C ObjectTemplate  New  InstanceTemplate ","options []  class to_template InstanceTemplate ","global class to_C ObjectTemplate  New  ","options []  class to_template ","options []  class ","C Context  New  Global SetHiddenValue ","V8 C Context  New  Global SetHiddenValue ","C Context  new  Global SetHiddenValue ","@to rubyC ObjectTemplate  New  ","Portal  new  rubytemplate "]}," V8 CLI Shell help":{"type":"method","name":"help","children":[],"call":[]}," V8 CLI Shell exit":{"type":"method","name":"exit","children":[],"call":["Kernel  exit "]}," V8 CLI Shell print":{"type":"method","name":"print","children":[],"call":[" puts "]}," V8 CLI Shell to_s":{"type":"method","name":"to_s","children":[],"call":[]}," V8 CLI repl":{"type":"method","name":"repl","children":[],"call":[]}," V8 CLI test":{"type":"method","name":"test","children":[],"call":[]}," V8 CLI load":{"type":"method","name":"load","children":[],"call":[]}," V8 CLI run":{"type":"method","name":"run","children":[],"call":[]}," V8 C Locker":{"type":"method","name":"Locker","children":[],"call":[]}," V8 Array length":{"type":"method","name":"length","children":[],"call":["@native Length "]}," V8 Array each":{"type":"method","name":"each","children":[],"call":["to rb ","@native Get ","@native Length - ","@native Length ","@portal open ","To  ruby ","@context enter ","To  rb "]}," V8 Access accessible_methods":{"type":"method","name":"accessible_methods","children":[],"call":["m =~ ","m == ","methods reject! ","methods merge ","m to_s ","ancestor public_instance_methods map ","ancestor public_instance_methods ","ancestor == ","ancestors shift ","obj class ancestors dup ","obj class ancestors ","obj class ","(send\n  (send\n    (lvar :obj) :public_methods\n    (false)) :map) to_set tap ","(send\n  (send\n    (lvar :obj) :public_methods\n    (false)) :map) to_set ","obj public_methods map ","obj public_methods ","ancestors shift  public_instance_methods map ","ancestors shift  public_instance_methods ","ancestors shift  == ","ancestors shift s shift ","obj class ancestors dup  shift ","obj class ancestors shift s dup ","obj class obj class ancestors dup  dup ","obj class ancestors shift s ","obj class obj class ancestors dup  "]}," V8 Access indices":{"type":"method","name":"indices","children":[],"call":["(irange\n  (int 0)\n  (send\n    (lvar :obj) :length)) to_a ","obj length ","obj respond_to? "]}," V8 Access names":{"type":"method","name":"names","children":[],"call":[" accessible_methods "]}," V8 Access iquery":{"type":"method","name":"iquery","children":[],"call":["attributes read_only ","obj respond_to? ","attributes dont_delete "]}," V8 Access query":{"type":"method","name":"query","children":[],"call":["attributes read_only ","obj respond_to? ","name + ","attributes dont_delete "]}," V8 Access iset":{"type":"method","name":"iset","children":[],"call":["obj send ","obj respond_to? "]}," V8 Access set":{"type":"method","name":"set","children":[],"call":["obj send ","obj respond_to? ","methods include? "," accessible_methods ","name + "," accessible_methods  include? "," accessible_ accessible_methods  "]}," V8 Access iget":{"type":"method","name":"iget","children":[],"call":["obj send ","obj respond_to? "]}," V8 Access get":{"type":"method","name":"get","children":[],"call":["obj send ","obj respond_to? ","method unbind ","method call ","method arity == ","method arity ","obj method ","methods include? "," accessible_methods ","obj method  unbind ","obj method  call ","obj method  arity == ","obj method  arity ","obj obj method  ","obj method s include? "," accessible_methods  include? "," accessible_obj method s "," accessible_ accessible_methods  "]}," V8 Weak Cell Storage populate":{"type":"method","name":"populate","children":[],"call":["V8 Weak Ref  new ","block call "]}," V8 Weak Cell Storage access":{"type":"method","name":"access","children":[],"call":[" populate ","@ref object "]}," V8 Weak Cell weakcell":{"type":"method","name":"weakcell","children":[],"call":["storage access "," instance_variable_set ","Storage  new "," instance_variable_get "," instance_variable_set  access "," instance_variable_get  access "]}," V8 Weak WeakValueMap []=":{"type":"method","name":"[]=","children":[],"call":["@values []= ","V8 Weak Ref  new ","ObjectSpace  define_finalizer "," class ensure_cleanup "," class "]}," V8 Weak WeakValueMap []":{"type":"method","name":"[]","children":[],"call":["ref object ","@values [] ","@values []  object "]}," V8 Weak WeakValueMap initialize":{"type":"method","name":"initialize","children":[],"call":[]}," V8 Weak Ref object":{"type":"method","name":"object","children":[],"call":["@ref __getobj__ "]}," V8 Weak Ref initialize":{"type":"method","name":"initialize","children":[],"call":[" WeakRef  new "]}," Object method_missing":{"type":"method","name":"method_missing","children":[],"call":[" raise ","args length ","args empty? ","property methodcall ","property kind_of? "," [] "," respond_to? "," []= ","args first ","args length > ","name to_s =~ ","name to_s "," []  methodcall "," []  kind_of? "]}," Object respond_to?":{"type":"method","name":"respond_to?","children":[],"call":[" [] != "," [] "]}," Object to_s":{"type":"method","name":"to_s","children":[],"call":["@context to_ruby ","@native ToString ","@context enter "]}," Object each":{"type":"method","name":"each","children":[],"call":["@context to_ruby ","@native Get ","names Get ","0 upto ","names Length - ","names Length ","@native GetPropertyNames ","@context enter ","names Get s Get ","@native GetPropertyNames  Get ","names Get s Length - ","@native GetPropertyNames  Length - ","names Get s Length ","@native GetPropertyNames  Length "]}," Object values":{"type":"method","name":"values","children":[],"call":["@context to_ruby ","@native Get ","names Get ","0 upto to_enum map ","0 upto to_enum ","0 upto ","names Length - ","names Length ","@native GetPropertyNames ","@context enter ","@native GetPropertyNames  Get ","@native GetPropertyNames  Length - ","@native GetPropertyNames  Length "]}," Object keys":{"type":"method","name":"keys","children":[],"call":["@context to_ruby ","names Get ","0 upto to_enum map ","0 upto to_enum ","0 upto ","names Length - ","names Length ","@native GetPropertyNames ","@context enter ","@native GetPropertyNames  Get ","@native GetPropertyNames  Length - ","@native GetPropertyNames  Length "]}," Object []=":{"type":"method","name":"[]=","children":[],"call":["@native Set ","@context to_v8 ","@context enter "]}," Object []":{"type":"method","name":"[]","children":[],"call":["@context to_ruby ","@native Get ","@context to_v8 ","@context enter "]}," Object initialize":{"type":"method","name":"initialize","children":[],"call":["@context link ","V8 C Object  New "," block_given? "," fail "," class ","V8 Context  current ","V8 Context  current  link "]}," Function new":{"type":"method","name":"new","children":[],"call":["@context to_ruby "," native NewInstance ","@context to_v8 ","args map "," native "," try ","@context enter "]}," Function call":{"type":"method","name":"call","children":[],"call":[" methodcall ","@context native Global ","@context native ","@context enter "]}," Function methodcall":{"type":"method","name":"methodcall","children":[],"call":["@context to_ruby "," native Call ","@context to_v8 ","args map "," native "," try ","@context native Global ","@context native ","@context enter "]}," Function initialize":{"type":"method","name":"initialize","children":[],"call":["V8 C FunctionTemplate  New GetFunction ","V8 C FunctionTemplate  New "]}," V8 Error":{"type":"method","name":"Error","children":[],"call":[]}," V8 Error Protect protect":{"type":"method","name":"protect","children":[],"call":["V8 C  ThrowException ","error SetHiddenValue ","V8 C External  New ","V8 C Exception  Error ","e message ","V8 C Exception  Error  SetHiddenValue "]}," V8 Error Try try":{"type":"method","name":"try","children":[],"call":[" raise ","V8  Error ","trycatch HasCaught ","V8 C  TryCatch "]}," V8 Error bilingual_backtrace":{"type":"method","name":"bilingual_backtrace","children":[],"call":["(send\n  (send nil :causes) :reduce\n  (hash\n    (pair\n      (sym :backtrace)\n      (array))\n    (pair\n      (sym :ruby)\n      (int -1))\n    (pair\n      (sym :javascript)\n      (int -1)))) [] ","javascript_frames length ","accumulator [] ","accumulator [] unshift ","cause javascript_backtrace to_a [] map ","cause javascript_backtrace to_a [] ","cause javascript_backtrace to_a ","cause javascript_backtrace ","cause respond_to? ","ruby_frames length ","cause send [] ","cause send ","accumulator tap "," causes reduce "," causes ","(send\n  (send nil :causes) :reduce\n  (hash\n    (pair\n      (sym :(send\n  (send nil :causes) :reduce\n  (hash\n    (pair\n      (sym :backtrace)\n      (array))\n    (pair\n      (sym :ruby)\n      (int -1))\n    (pair\n      (sym :javascript)\n      (int -1)))) [] )\n      (array))\n    (pair\n      (sym :ruby)\n      (int -1))\n    (pair\n      (sym :javascript)\n      (int -1)))) [] ","cause javascript_backtrace to_a [] map  length ","cause javascript_(send\n  (send nil :causes) :reduce\n  (hash\n    (pair\n      (sym :backtrace)\n      (array))\n    (pair\n      (sym :ruby)\n      (int -1))\n    (pair\n      (sym :javascript)\n      (int -1)))) []  to_a [] map ","cause javascript_(send\n  (send nil :causes) :reduce\n  (hash\n    (pair\n      (sym :backtrace)\n      (array))\n    (pair\n      (sym :ruby)\n      (int -1))\n    (pair\n      (sym :javascript)\n      (int -1)))) []  to_a [] ","cause javascript_(send\n  (send nil :causes) :reduce\n  (hash\n    (pair\n      (sym :backtrace)\n      (array))\n    (pair\n      (sym :ruby)\n      (int -1))\n    (pair\n      (sym :javascript)\n      (int -1)))) []  to_a ","cause javascript_(send\n  (send nil :causes) :reduce\n  (hash\n    (pair\n      (sym :backtrace)\n      (array))\n    (pair\n      (sym :ruby)\n      (int -1))\n    (pair\n      (sym :javascript)\n      (int -1)))) []  ","cause send []  length "]}," V8 Error in_ruby?":{"type":"method","name":"in_ruby?","children":[],"call":[" in_javascript? ! "," in_javascript? "]}," V8 Error in_javascript?":{"type":"method","name":"in_javascript?","children":[],"call":[" causes last is_a? "," class "," causes last "," causes "]}," V8 Error root_cause":{"type":"method","name":"root_cause","children":[],"call":[" causes last "," causes "]}," V8 Error backtrace":{"type":"method","name":"backtrace","children":[],"call":["frame =~ ","trace reject! ","modifiers include? "," bilingual_backtrace tap "," bilingual_backtrace ","modifiers length == ","modifiers length "]}," V8 Error causes":{"type":"method","name":"causes","children":[],"call":["current cause ","current respond_to? ","causes push ","current nil? "," tap ","current cause  cause ","current cause  respond_to? ","current cause  nil? "]}," V8 Error initialize":{"type":"method","name":"initialize","children":[],"call":[]}," Conversion to_v8":{"type":"method","name":"to_v8","children":[],"call":[]}," Conversion to_ruby":{"type":"method","name":"to_ruby","children":[],"call":[]}," Conversion NativeDate to_ruby":{"type":"method","name":"to_ruby","children":[],"call":[" Time  at "," NumberValue / "," NumberValue "]}," Conversion Time to_v8":{"type":"method","name":"to_v8","children":[],"call":["V8 C Date  New "," to_f * "," to_f "]}," Conversion Symbol to_v8":{"type":"method","name":"to_v8","children":[],"call":["V8 C String  NewSymbol "," to_s "]}," Conversion NativeString to_ruby":{"type":"method","name":"to_ruby","children":[],"call":[" Utf8Value "]}," Conversion String to_v8":{"type":"method","name":"to_v8","children":[],"call":["V8 C String  New "]}," Conversion Reference to_v8":{"type":"method","name":"to_v8","children":[],"call":["Reference  construct! "]}," Conversion Reference construct!":{"type":"method","name":"construct!","children":[],"call":[]}," Conversion Primitive to_v8":{"type":"method","name":"to_v8","children":[],"call":[]}," Conversion NativeObject to_v8":{"type":"method","name":"to_v8","children":[],"call":[]}," Conversion NativeObject to_ruby":{"type":"method","name":"to_ruby","children":[],"call":["wrap new "," IsFunction "," IsArray "]}," Conversion Object to_ruby":{"type":"method","name":"to_ruby","children":[],"call":[]}," Conversion Object to_v8":{"type":"method","name":"to_v8","children":[],"call":["Reference  construct! "]}," Conversion Method MethodCache []=":{"type":"method","name":"[]=","children":[],"call":["@map []= ","method to_s "]}," Conversion Method MethodCache []":{"type":"method","name":"[]","children":[],"call":["@map [] ","method to_s "]}," Conversion Method MethodCache initialize":{"type":"method","name":"initialize","children":[],"call":["V8 Weak WeakValueMap  new ","Ref WeakValueMap  new "]}," Conversion Method to_v8":{"type":"method","name":"to_v8","children":[],"call":["template GetFunction "," to_template ","@@method_cache [] "]}," Conversion Identity rb_idmap":{"type":"method","name":"rb_idmap","children":[],"call":["V8 Weak WeakValueMap  new ","Ref WeakValueMap  new "]}," Conversion Identity v8_idmap":{"type":"method","name":"v8_idmap","children":[],"call":["V8 Weak WeakValueMap  new ","Ref WeakValueMap  new "]}," Conversion Identity equate":{"type":"method","name":"equate","children":[],"call":[" rb_idmap []= ","ruby_object object_id "," rb_idmap "," v8_idmap []= ","v8_object GetIdentityHash "," v8_idmap "]}," Conversion Identity to_v8":{"type":"method","name":"to_v8","children":[],"call":[" rb_idmap [] ","ruby_object object_id "," rb_idmap ","ruby_object is_a? "]}," Conversion Identity to_ruby":{"type":"method","name":"to_ruby","children":[],"call":[" v8_idmap [] ","v8_object GetIdentityHash "," v8_idmap ","v8_object class <= ","v8_object class "]}," Conversion Hash to_v8":{"type":"method","name":"to_v8","children":[],"call":["object to_v8 ","object []= "," each ","V8 Object  new ","V8 Object  new  to_v8 ","V8 Object  new  []= "]}," Conversion Fundamental to_v8":{"type":"method","name":"to_v8","children":[],"call":["ruby_object to_v8 "]}," Conversion Fundamental to_ruby":{"type":"method","name":"to_ruby","children":[],"call":["v8_object to_ruby "]}," Conversion Fixnum to_v8":{"type":"method","name":"to_v8","children":[],"call":[" to_f to_v8 "," to_f "]}," Conversion Fixnum to_ruby":{"type":"method","name":"to_ruby","children":[],"call":[]}," Conversion Code InvocationHandler call":{"type":"method","name":"call","children":[],"call":["context to_v8 ","access methodcall ","context to_ruby ","arguments This ","args []= ","arguments [] ","i < ","args length ","0 upto ","args length - "," Array  new ","arguments Length ","context access ","V8 Context  current "," protect ","V8 Context  current  to_v8 ","context access  methodcall ","V8 Context  current  to_ruby "," Array  new  []= "," Array  new  length "," Array  new  length - ","context context access  ","V8 Context  current  access "]}," Conversion Code InvocationHandler initialize":{"type":"method","name":"initialize","children":[],"call":[]}," Conversion Code to_template":{"type":"method","name":"to_template","children":[],"call":["V8 C FunctionTemplate  New ","InvocationHandler  new "," weakcell "]}," Conversion Code to_v8":{"type":"method","name":"to_v8","children":[],"call":["V8 Context  link "," to_template GetFunction "," to_template "]}," Conversion ISet call":{"type":"method","name":"call","children":[],"call":[]}," Conversion IGet call":{"type":"method","name":"call","children":[],"call":[]}," Conversion Set call":{"type":"method","name":"call","children":[],"call":[]}," Conversion Get call":{"type":"method","name":"call","children":[],"call":[]}," Conversion Accessor intercept":{"type":"method","name":"intercept","children":[],"call":["context to_v8 ","block call ","context to_ruby "," protect "," proc ","info This ","context access ","V8 Context  current ","V8 Context  current  to_v8 ","V8 Context  current  to_ruby ","context context access  ","V8 Context  current  access "]}," Conversion Constructor Args to_args":{"type":"method","name":"to_args","children":[],"call":["args []= "," [] ","0 upto ","args length - ","args length "," Array  new "," Length "," Array  new  []= "," Array  new  length - "," Array  new  length "]}," Conversion Constructor Args context":{"type":"method","name":"context","children":[],"call":["V8 Context  current "]}," Conversion Constructor Args construct":{"type":"method","name":"construct","children":[],"call":[" context link "," This ","cls new "," to_args "," context "]}," Conversion Constructor Args link":{"type":"method","name":"link","children":[],"call":[" context link "," This ","external Value "," context "," This SetHiddenValue "," [] "," []  Value "]}," Conversion Constructor Args linkage_call?":{"type":"method","name":"linkage_call?","children":[],"call":[" [] IsExternal "," [] "," Length == "," Length "]}," Conversion Constructor call":{"type":"method","name":"call","children":[],"call":["arguments This ","arguments construct ","arguments link ","arguments linkage_call? "," protect ","arguments extend "]}," Conversion Constructor initialize":{"type":"method","name":"initialize","children":[],"call":[]}," Conversion Class to_template":{"type":"method","name":"to_template","children":[],"call":["template Inherit "," superclass to_template "," superclass "," superclass != "," != ","prototype SetIndexedPropertyHandler ","prototype SetNamedPropertyHandler ","template InstanceTemplate ","V8 C FunctionTemplate  New ","V8 Conversion Constructor  new "," weakcell ","Constructor  new ","V8 C FunctionTemplate  New  Inherit "," superclass to_V8 C FunctionTemplate  New  ","template InstanceTemplate  SetIndexedPropertyHandler ","template InstanceTemplate  SetNamedPropertyHandler ","V8 C FunctionTemplate  New  InstanceTemplate "]}," Conversion Array to_v8":{"type":"method","name":"to_v8","children":[],"call":["array to_v8 ","array []= "," each_with_index ","V8 Array  new "," length ","V8 Array  new  to_v8 ","V8 Array  new  []= "]}," V8 Context lock_scope_and_enter":{"type":"method","name":"lock_scope_and_enter","children":[],"call":["Context  current= ","@native Exit "," block_given? ","@native Enter ","V8 C  HandleScope ","V8 C  Locker ","Context  current ","Context  Context  current = ","Context  Context  current  "]}," V8 Context current=":{"type":"method","name":"current=","children":[],"call":[]}," V8 Context current":{"type":"method","name":"current","children":[],"call":[]}," V8 Context entered?":{"type":"method","name":"entered?","children":[],"call":["Context  current == ","Context  current "]}," V8 Context enter":{"type":"method","name":"enter","children":[],"call":[" lock_scope_and_enter "," entered? ! "," entered? "]}," V8 Context link":{"type":"method","name":"link","children":[],"call":["@conversion equate "]}," V8 Context to_v8":{"type":"method","name":"to_v8","children":[],"call":["@conversion to_v8 "]}," V8 Context to_ruby":{"type":"method","name":"to_ruby","children":[],"call":["@conversion to_ruby "]}," V8 Context scope":{"type":"method","name":"scope","children":[],"call":[" to_ruby ","@native Global "," enter "]}," V8 Context dispose":{"type":"method","name":"dispose","children":[{"type":"method","name":"enter","children":[],"asgn":[],"call":[]}],"call":[" fail ","V8 C V8  ContextDisposedNotification ","@native Dispose "]}," Array length":{"type":"method","name":"length","children":[],"call":["@native Length "]}," Array each":{"type":"method","name":"each","children":[],"call":["@context to_ruby ","@native Get ","0 upto ","@native Length - ","@native Length ","@context enter "]}," Array initialize":{"type":"method","name":"initialize","children":[],"call":["V8 C Array  New ","native_or_length is_a? "]}," Access Names special?":{"type":"method","name":"special?","children":[],"call":["@special [] ","name nil? ","m =~ ","m == "," lambda "]}," Access Names accessible_names":{"type":"method","name":"accessible_names","children":[],"call":["methods reject! "," special? ","methods merge ","m to_s ","ancestor public_instance_methods map ","ancestor public_instance_methods ","ancestor == ","ancestors shift ","obj class ancestors dup ","obj class ancestors ","obj class ","(send\n  (send\n    (lvar :obj) :public_methods\n    (false)) :map) to_set tap ","(send\n  (send\n    (lvar :obj) :public_methods\n    (false)) :map) to_set ","obj public_methods map ","obj public_methods ","ancestors shift  public_instance_methods map ","ancestors shift  public_instance_methods ","ancestors shift  == ","ancestors shift s shift ","obj class ancestors dup  shift ","obj class ancestors shift s dup ","obj class obj class ancestors dup  dup ","obj class ancestors shift s ","obj class obj class ancestors dup  "]}," Access Names delete":{"type":"method","name":"delete","children":[],"call":[]}," Access Names query":{"type":"method","name":"query","children":[],"call":["attributes read_only ","obj respond_to? ","name + ","attributes dont_delete "]}," Access Names set":{"type":"method","name":"set","children":[],"call":["obj send "," special? ! "," special? ","obj respond_to? ","methods include? "," accessible_names ","name + "," accessible_names  include? "]}," Access Names get":{"type":"method","name":"get","children":[],"call":["obj send "," special? ! "," special? ","obj respond_to? ","method unbind ","method call ","method arity == ","method arity ","obj method ","methods include? "," accessible_names ","obj method  unbind ","obj method  call ","obj method  arity == ","obj method  arity ","obj obj method  ","obj method s include? "," accessible_names  include? "]}," Access Names names":{"type":"method","name":"names","children":[],"call":[" accessible_names "]}," Access Invocation UnboundMethod methodcall":{"type":"method","name":"methodcall","children":[],"call":["access methodcall "," bind ","V8 Context  current access ","V8 Context  current ","V8 Context  current access  methodcall ","V8 Context  current V8 Context  current access  "]}," Access Invocation Method methodcall":{"type":"method","name":"methodcall","children":[],"call":[" fail "," call "," aritize ","this equal? ","context scope ","access methodcall "," unbind ","this class <= "," receiver class "," receiver ","this class ","context access ","V8 Context  current ","V8 Context  current  scope ","context access  methodcall ","context context access  ","V8 Context  current  access "]}," Access Invocation Proc methodcall":{"type":"method","name":"methodcall","children":[],"call":[" call "," aritize ","(lvar :this) concat "]}," Access Invocation Aritize aritize":{"type":"method","name":"aritize","children":[],"call":["args [] ","Array  new to_enum map ","Array  new to_enum ","Array  new "," arity "," arity < "]}," Access Invocation methodcall":{"type":"method","name":"methodcall","children":[],"call":["code methodcall "]}," Access Indices idelete":{"type":"method","name":"idelete","children":[],"call":[]}," Access Indices iquery":{"type":"method","name":"iquery","children":[],"call":["attributes read_only ","obj respond_to? ","attributes dont_delete "]}," Access Indices iset":{"type":"method","name":"iset","children":[],"call":["obj send ","obj respond_to? "]}," Access Indices iget":{"type":"method","name":"iget","children":[],"call":["obj send ","obj respond_to? "]}," Access Indices indices":{"type":"method","name":"indices","children":[],"call":["(irange\n  (int 0)\n  (send\n    (lvar :obj) :length)) to_a ","obj length ","obj respond_to? "]}," V8 Util Weakcell Storage populate":{"type":"method","name":"populate","children":[],"call":["Ref WeakReference  new ","block call "]}," V8 Util Weakcell Storage access":{"type":"method","name":"access","children":[],"call":[" populate ","@ref object "]}," V8 Util Weakcell weakcell":{"type":"method","name":"weakcell","children":[],"call":["storage access "," instance_variable_set ","Storage  new "," instance_variable_get "," instance_variable_set  access "," instance_variable_get  access "]}," Error Try try":{"type":"method","name":"try","children":[],"call":["V8  Error ","trycatch Exception ","trycatch HasCaught ","V8 C  TryCatch ","V8 Context  current "]}," Error Football kickoff!":{"type":"method","name":"kickoff!","children":[],"call":["V8 C  ThrowException ","error SetHiddenValue ","V8 C External  New ","V8 C Exception  Error "," message ","V8 C Exception  Error  SetHiddenValue "]}," Error Protect protect":{"type":"method","name":"protect","children":[],"call":["e kickoff! ","e extend "]}," Conversion Class ISet call":{"type":"method","name":"call","children":[],"call":[]}," Conversion Class IGet call":{"type":"method","name":"call","children":[],"call":[]}," Conversion Class Set call":{"type":"method","name":"call","children":[],"call":[]}," Conversion Class Get call":{"type":"method","name":"call","children":[],"call":[]}," Conversion Class Accessor intercept":{"type":"method","name":"intercept","children":[],"call":["context to_v8 ","block call ","context to_ruby "," protect "," proc ","info This ","context access ","V8 Context  current ","V8 Context  current  to_v8 ","V8 Context  current  to_ruby ","context context access  ","V8 Context  current  access "]}," Conversion Class Constructor Args to_args":{"type":"method","name":"to_args","children":[],"call":["args []= "," [] ","0 upto ","args length - ","args length "," Array  new "," Length "," Array  new  []= "," Array  new  length - "," Array  new  length "]}," Conversion Class Constructor Args context":{"type":"method","name":"context","children":[],"call":["V8 Context  current "]}," Conversion Class Constructor Args construct":{"type":"method","name":"construct","children":[],"call":[" context link "," This ","cls new "," to_args "," context "]}," Conversion Class Constructor Args link":{"type":"method","name":"link","children":[],"call":[" context link "," This ","external Value "," context "," This SetHiddenValue "," [] "," []  Value "]}," Conversion Class Constructor Args linkage_call?":{"type":"method","name":"linkage_call?","children":[],"call":[" [] IsExternal "," [] "," Length == "," Length "]}," Conversion Class Constructor call":{"type":"method","name":"call","children":[],"call":["arguments This ","arguments construct ","arguments link ","arguments linkage_call? "," protect ","arguments extend "]}," Conversion Class Constructor initialize":{"type":"method","name":"initialize","children":[],"call":[]}," V8 Weak WeakValueMap ensure_cleanup":{"type":"method","name":"ensure_cleanup","children":[],"call":[]}," Conversion Integer to_v8":{"type":"method","name":"to_v8","children":[],"call":[" to_f to_v8 "," to_f "]}," Conversion Integer to_ruby":{"type":"method","name":"to_ruby","children":[],"call":[]}," V8 To v8":{"type":"method","name":"v8","children":[],"call":["C FunctionTemplate  new GetFunction ","C FunctionTemplate  new ","value to_proc ","C String  new ","cxt Exit ","obj SetHiddenValue ","C External  Wrap ","C String  New ","rubyobject NewInstance ","cxt Enter ","C Context  New ","C Context  InContext ","rubyobject SetNamedPropertyHandler ","C ObjectTemplate  New ","C Date  New ","o Set ","To  v8 ","value each ","C Object  New tap ","C Object  New ","a Set ","value each_with_index ","C Array  New tap ","C Array  New ","value length ","template GetFunction ","V8 Function  rubycall ","rbargs << ","To  ruby ","arguments [] ","arguments Length - ","arguments Length ","C FunctionTemplate  New ","value to_s ","value instance_eval ","Access  [] GetFunction NewInstance ","Access  [] GetFunction ","Access  [] ","value class ","args Set ","C External  New ","f SetHiddenValue ","C String  NewSymbol ","Constructors  [] GetFunction tap ","Constructors  [] GetFunction ","Constructors  [] ","To  rb ","C Context  New  Exit ","rubyobject NewInstance  SetHiddenValue ","Access  [] GetFunction NewInstance  SetHiddenValue ","rubyrubyobject NewInstance ect NewInstance ","rubyAccess  [] GetFunction NewInstance ect NewInstance ","C ObjectTemplate  New  NewInstance ","C Context  New  Enter ","rubyrubyobject NewInstance ect SetNamedPropertyHandler ","rubyAccess  [] GetFunction NewInstance ect SetNamedPropertyHandler ","C ObjectTemplate  New  SetNamedPropertyHandler ","rbC Array  New  << ","C Array  New  Set "]}," V8 To ruby":{"type":"method","name":"ruby","children":[],"call":["V8 Object  new ","V8 Function  new ","Time  at ","value NumberValue ","value Utf8Value ","V8 Array  new "]}," V8 Context open":{"type":"method","name":"open","children":[],"call":[" raise ","JavascriptError  new ","result kind_of? ","block call tap ","block call ","@native open "," block_given? ","@native == ","C Context  GetCurrent "]}," V8 Context evaluate":{"type":"method","name":"evaluate","children":[],"call":[" eval "]}," V8 JavascriptError initialize":{"type":"method","name":"initialize","children":[],"call":["v8_message Get ","v8_message GetSourceLine ","v8_message GetLineNumber ","v8_message GetScriptResourceName ","To  ruby ","msg Get ","try StackTrace ","msg GetLineNumber ","msg GetSourceLine ","msg GetScriptResourceName ","try Message ","try Message  Get ","try Message  GetLineNumber ","try Message  GetSourceLine ","try Message  GetScriptResourceName "]}," V8 To camelcase":{"type":"method","name":"camelcase","children":[],"call":["1 upcase ","str to_s gsub ","str to_s "]}," V8 ContextError check_open":{"type":"method","name":"check_open","children":[],"call":[]}," V8 ContextError initialize":{"type":"method","name":"initialize","children":[],"call":[]}," V8 To perl_case":{"type":"method","name":"perl_case","children":[],"call":["(send\n  (lvar :str) :gsub\n  (regexp\n    (str \"([A-Z])([a-z])\")\n    (regopt))) downcase ","1 downcase ","str gsub "]}," V8 To camel_case":{"type":"method","name":"camel_case","children":[],"call":["1 upcase ","str to_s gsub ","str to_s "]}," V8 JavascriptError line_number":{"type":"method","name":"line_number","children":[],"call":["@native GetLineNumber "]}," V8 JavascriptError source_line":{"type":"method","name":"source_line","children":[],"call":["@native GetSourceLine "]}," V8 JavascriptError source_name":{"type":"method","name":"source_name","children":[],"call":["@native GetScriptResourceName "]}," V8 JavascriptError javascript_stacktrace":{"type":"method","name":"javascript_stacktrace","children":[],"call":["@native stack "]}," V8 CLI Shell evalrb":{"type":"method","name":"evalrb","children":[],"call":[" eval "]}," V8 Function rubycall":{"type":"method","name":"rubycall","children":[],"call":[]}," V8 JavascriptError check":{"type":"method","name":"check","children":[],"call":[]}," V8 NamedPropertyEnumerator call":{"type":"method","name":"call","children":[],"call":[]}," V8 NamedPropertySetter call":{"type":"method","name":"call","children":[],"call":[]}," V8 NamedPropertyGetter call":{"type":"method","name":"call","children":[],"call":[]}," V8 To peer":{"type":"method","name":"peer","children":[],"call":[" new ","external Value ","external IsEmpty ! ","external IsEmpty ","value GetHiddenValue ","C String  NewSymbol ","value GetHiddenValue  Value ","value GetHiddenValue  IsEmpty ! ","value GetHiddenValue  IsEmpty "]}," V8 To rb":{"type":"method","name":"rb","children":[],"call":["value IsEmpty ","Time  at ","value NumberValue ","value Utf8Value "," peer "]}," V8 Constructors []":{"type":"method","name":"[]","children":[],"call":[]}," V8 Access rubyobject":{"type":"method","name":"rubyobject","children":[],"call":[]}," V8 Access template":{"type":"method","name":"template","children":[],"call":["C  ThrowException ","C Exception  Error ","C String  New ","this SetHiddenValue ","arguments [] ","C String  NewSymbol ","arguments This tap ","arguments This ","arguments [] kind_of? ","arguments Length == ","arguments Length ","C FunctionTemplate  New "]}," V8 Access []":{"type":"method","name":"[]","children":[],"call":["@classes []= ","WeakRef  new ","cls object_id ","t SetClassName ","C String  NewSymbol ","rb:: + ","cls name =~ ","cls name ","t InstanceTemplate SetNamedPropertyHandler ","t InstanceTemplate "," template tap "," template "," [] ","@classes delete ","ref __getobj__ ","ref weakref_alive? ","@classes [] ","Access  setuptemplate ","@classes []  __getobj__ ","@classes []  weak@classes [] _alive? "]}," V8 Access initialize":{"type":"method","name":"initialize","children":[],"call":[]}," V8 Function rubysend":{"type":"method","name":"rubysend","children":[],"call":[]}," V8 Function rubyprotect":{"type":"method","name":"rubyprotect","children":[],"call":[]}," V8 IndexedPropertyEnumerator call":{"type":"method","name":"call","children":[],"call":[]}," V8 IndexedPropertySetter call":{"type":"method","name":"call","children":[],"call":[]}," V8 IndexedPropertyGetter call":{"type":"method","name":"call","children":[],"call":[]}," V8 AccessibleMethods accessible_methods":{"type":"method","name":"accessible_methods","children":[],"call":["m == ","methods reject! ","methods merge ","m to_s ","ancestor public_instance_methods map ","ancestor public_instance_methods ","ancestor == ","ancestors shift ","obj class ancestors dup ","obj class ancestors ","obj class ","(send\n  (send\n    (lvar :obj) :public_methods\n    (false)) :map) to_set tap ","(send\n  (send\n    (lvar :obj) :public_methods\n    (false)) :map) to_set ","obj public_methods map ","obj public_methods ","ancestors shift  public_instance_methods map ","ancestors shift  public_instance_methods ","ancestors shift  == ","ancestors shift s shift ","obj class ancestors dup  shift ","obj class ancestors shift s dup ","obj class obj class ancestors dup  dup ","obj class ancestors shift s ","obj class obj class ancestors dup  "]}," V8 Access setuptemplate":{"type":"method","name":"setuptemplate","children":[],"call":[]}," V8 Portal IndexedPropertyEnumerator call":{"type":"method","name":"call","children":[],"call":["@access indices "," intercept "]}," V8 Portal IndexedPropertyDeleter call":{"type":"method","name":"call","children":[],"call":["@access idelete "," intercept "]}," V8 Portal IndexedPropertyQuery call":{"type":"method","name":"call","children":[],"call":["C Integer  New ","attributes flags ","result == ","@access indices "," intercept ","PropertyAttributes  new ","PropertyAttributes  new  flags "]}," V8 Portal IndexedPropertySetter call":{"type":"method","name":"call","children":[],"call":["@access iset ","@to rb "," intercept "]}," V8 Portal IndexedPropertyGetter call":{"type":"method","name":"call","children":[],"call":["@access iget "," intercept "]}," V8 Portal NamedPropertyDeleter call":{"type":"method","name":"call","children":[],"call":["@access delete "," intercept "]}," V8 Portal NamedPropertyEnumerator call":{"type":"method","name":"call","children":[],"call":["@access names to_a ","@access names "," intercept "]}," V8 Portal NamedPropertyQuery call":{"type":"method","name":"call","children":[],"call":["C Integer  New ","attributes flags ","result == ","@access query ","@to rb "," intercept ","PropertyAttributes  new ","PropertyAttributes  new  flags "]}," V8 Portal NamedPropertySetter call":{"type":"method","name":"call","children":[],"call":["@access set ","@to rb "," intercept "]}," V8 Portal NamedPropertyGetter call":{"type":"method","name":"call","children":[],"call":["@access get ","@to rb "," intercept "]}," V8 Portal PropertyAttributes dont_delete":{"type":"method","name":"dont_delete","children":[],"call":[" tap "]}," V8 Portal PropertyAttributes dont_enum":{"type":"method","name":"dont_enum","children":[],"call":[" tap "]}," V8 Portal PropertyAttributes read_only":{"type":"method","name":"read_only","children":[],"call":[" tap "]}," V8 Portal PropertyAttributes initialize":{"type":"method","name":"initialize","children":[],"call":[]}," V8 Portal Interceptor":{"type":"method","name":"Interceptor","children":[],"call":["cls new "]}," V8 Portal Interceptor intercept":{"type":"method","name":"intercept","children":[],"call":["code call "," proc ","@to rubyprotect ","@to rb ","info This "]}," V8 Portal Interceptor initialize":{"type":"method","name":"initialize","children":[],"call":[]}," V8 Portal peer":{"type":"method","name":"peer","children":[],"call":[" new ","external Value ","external IsEmpty ! ","external IsEmpty ","value GetHiddenValue ","C String  NewSymbol ","value SetHiddenValue ","C External  New "," new tap ","value GetHiddenValue  Value ","value GetHiddenValue  IsEmpty ! ","value GetHiddenValue  IsEmpty "]}," V8 Portal setuptemplate":{"type":"method","name":"setuptemplate","children":[],"call":["t SetIndexedPropertyHandler ","t SetNamedPropertyHandler "]}," V8 Portal rubytemplate":{"type":"method","name":"rubytemplate","children":[],"call":[" setuptemplate ","C ObjectTemplate  New tap ","C ObjectTemplate  New "]}," V8 Portal rubysend":{"type":"method","name":"rubysend","children":[],"call":["obj send "," rubyprotect "]}," V8 Portal rubycall":{"type":"method","name":"rubycall","children":[],"call":["rubycode call "," rubyprotect "]}," V8 Portal rubyprotect":{"type":"method","name":"rubyprotect","children":[],"call":["V8 C  ThrowException ","error SetHiddenValue ","C External  New ","V8 C Exception  Error ","V8 C String  New ","e message "," raise "," v8 ","V8 C Exception  Error  SetHiddenValue "]}," V8 Portal Functions UnboundMethod":{"type":"method","name":"UnboundMethod","children":[],"call":["template GetFunction ","method bind call ","method bind ","@portal rubyprotect ","@portal rb ","arguments This ","rbargs << ","arguments [] ","arguments Length - ","arguments Length ","C FunctionTemplate  New ","@methods [] ","method to_s "]}," V8 Portal Functions Proc":{"type":"method","name":"Proc","children":[],"call":["template GetFunction ","@portal rubycall ","rbargs << ","@portal rb ","arguments [] ","arguments Length - ","arguments Length ","C FunctionTemplate  New ","@procs [] "]}," V8 Portal Functions []":{"type":"method","name":"[]","children":[],"call":[" send ","code class name ","code class "]}," V8 Portal Functions initialize":{"type":"method","name":"initialize","children":[],"call":[]}}