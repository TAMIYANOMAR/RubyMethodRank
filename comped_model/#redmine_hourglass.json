{" Hourglass redmine_has_advanced_queries?":{"type":"method","name":"redmine_has_advanced_queries?","children":[],"call":[]}," Hourglass Settings redmine_method_name":{"type":"method","name":"redmine_method_name","children":[],"call":[]}," Hourglass Settings set":{"type":"method","name":"set","children":[],"call":["Setting  method ","(begin\n  (send nil :redmine_method_name)) to_sym "," redmine_method_name "]}," Hourglass Settings get":{"type":"method","name":"get","children":[],"call":["Setting  method "," redmine_method_name to_sym "," redmine_method_name "]}," Hourglass Settings project_id_key":{"type":"method","name":"project_id_key","children":[],"call":["(begin\n  (lvar :project_id)) to_sym ","project_or_project_id id ","project_or_project_id is_a? ","(begin\n  (lvar :project_or_project_id id )) to_sym ","project_or_project_or_project_id id  id ","project_or_project_or_project_id id  is_a? "]}," Hourglass Settings parse_assign_params":{"type":"method","name":"parse_assign_params","children":[],"call":["new_settings deep_symbolize_keys ","new_settings is_a? ","options [] ","options is_a? ","(begin\n  (lvar :key)) to_sym ","key is_a? ","key == ","new_settings deep_symbolize_keys  deep_symbolize_keys ","new_settings deep_symbolize_keys  is_a? "]}," Hourglass Settings []=":{"type":"method","name":"[]=","children":[],"call":[" set call "," set ","settings merge! ","settings [] delete "," project_id_key ","settings [] ","settings [] []= "," project merge compact "," project merge "," project "," get call "," get "," parse_assign_params ","args reverse "," get call  merge! "," get call  [] delete "," get call  [] "," get call  [] []= "]}," Hourglass Settings []":{"type":"method","name":"[]","children":[],"call":["settings [] ","settings merge "," project "," get call except "," get call "," get ","settings merge  [] "," get call except  [] ","settings merge  merge "," get call except  merge "]}," Hourglass Settings project":{"type":"method","name":"project","children":[],"call":["projects [] "," project_id_key "," get call [] "," get call "," get "," get call []  [] "]}," Hourglass Settings global":{"type":"method","name":"global","children":[],"call":[" get call "," get "]}," Hourglass Settings defaults":{"type":"method","name":"defaults","children":[],"call":[]}," RedmineTimeTrackerImport stub_old_time_booking":{"type":"method","name":"stub_old_time_booking","children":[{"type":"method","name":"hours_spent","children":[],"asgn":[],"call":["(send\n  (begin\n    (send\n      (send\n        (send nil :started_on) :to_i) :-\n      (send\n        (send nil :stopped_at) :to_i))) :/\n  (float 3600.0)) to_f ","(send\n  (send\n    (send nil :started_on) :to_i) :-\n  (send\n    (send nil :stopped_at) :to_i)) / "," started_on to_i - "," stopped_at to_i "," stopped_at "," started_on to_i "," started_on "]}],"call":["Object  const_set ","(send\n  (begin\n    (send\n      (send\n        (send nil :started_on) :to_i) :-\n      (send\n        (send nil :stopped_at) :to_i))) :/\n  (float 3600.0)) to_f ","(send\n  (send\n    (send nil :started_on) :to_i) :-\n  (send\n    (send nil :stopped_at) :to_i)) / "," started_on to_i - "," stopped_at to_i "," stopped_at "," started_on to_i "," started_on "," belongs_to ","Class  new "]}," RedmineTimeTrackerImport stub_old_time_log":{"type":"method","name":"stub_old_time_log","children":[{"type":"method","name":"hours_spent","children":[],"asgn":[],"call":["(send\n  (begin\n    (send\n      (send\n        (send nil :started_on) :to_i) :-\n      (send\n        (send nil :stopped_at) :to_i))) :/\n  (float 3600.0)) to_f ","(send\n  (send\n    (send nil :started_on) :to_i) :-\n  (send\n    (send nil :stopped_at) :to_i)) / "," started_on to_i - "," stopped_at to_i "," stopped_at "," started_on to_i "," started_on "]},{"type":"method","name":"bookable_hours","children":[],"asgn":[],"call":[" hours_spent - "," hours_booked "," hours_spent "]},{"type":"method","name":"hours_booked","children":[],"asgn":[null,null],"call":["tb hours_spent "," time_bookings each "," time_bookings "]}],"call":["Object  const_set ","tb hours_spent "," time_bookings each "," time_bookings "," hours_spent - "," hours_booked "," hours_spent ","(send\n  (begin\n    (send\n      (send\n        (send nil :started_on) :to_i) :-\n      (send\n        (send nil :stopped_at) :to_i))) :/\n  (float 3600.0)) to_f ","(send\n  (send\n    (send nil :started_on) :to_i) :-\n  (send\n    (send nil :stopped_at) :to_i)) / "," started_on to_i - "," stopped_at to_i "," stopped_at "," started_on to_i "," started_on "," has_many ","Class  new "]}," RedmineTimeTrackerImport stub_old_plugin":{"type":"method","name":"stub_old_plugin","children":[],"call":[" stub_old_time_booking "," const_defined? "," stub_old_time_log ","Object  const_set ","Class  new "]}," RedmineTimeTrackerImport find_gaps":{"type":"method","name":"find_gaps","children":[],"call":["gaps << ","sorted last stop ","sorted last ","sorted last stop == ","sorted [] start ","sorted [] ","i + ","booking stop ","booking stop == ","sorted [] nil? ","sorted each_with_index ","sorted first start ","sorted first ","sorted first start == ","booking start ","bookings sort_by "]}," RedmineTimeTrackerImport log_errors":{"type":"method","name":"log_errors","children":[],"call":[" puts ","new attributes to_json ","new attributes ","new save ","new errors added? ","new errors ","new time_log errors added? ","new time_log errors ","new time_log ","new respond_to? ","new errors count == ","new errors count ","new errors full_messages to_sentence ","new errors full_messages ","old attributes to_json ","old attributes ","old id ","old class name ","old class "]}," RedmineTimeTrackerImport create_new_time_booking":{"type":"method","name":"create_new_time_booking","children":[],"call":[" log_errors ","new_time_booking save ","new_time_booking attributes= ","time_booking stopped_at ","time_booking started_on ","time_log_attributes []= ","new_time_booking time_log_id ","new_time_booking persisted? ","time_booking time_log user_id ","time_booking time_log ","time_booking time_log comments ","Hourglass TimeBooking  find_or_initialize_by ","time_booking time_entry_id ","Hourglass TimeBooking  find_or_initialize_by  save ","Hourglass TimeBooking  find_or_initialize_by  attributes= ","Hourglass TimeBooking  find_or_initialize_by  time_log_id ","Hourglass TimeBooking  find_or_initialize_by  persisted? "]}," RedmineTimeTrackerImport create_new_time_log":{"type":"method","name":"create_new_time_log","children":[],"call":[" log_errors ","new_time_log save ","new_time_log attributes= ","time_log comments ","Hourglass TimeLog  find_or_initialize_by ","time_log user_id ","Hourglass TimeLog  find_or_initialize_by  save ","Hourglass TimeLog  find_or_initialize_by  attributes= "]}," RedmineTimeTrackerImport create_new_time_tracker":{"type":"method","name":"create_new_time_tracker","children":[],"call":[" log_errors ","new_time_tracker save ","new_time_tracker attributes= ","time_tracker activity_id ","time_tracker issue_id ","time_tracker project_id ","time_tracker round ","time_tracker comments ","time_tracker started_on ","Hourglass TimeTracker  find_or_initialize_by ","time_tracker user_id ","Hourglass TimeTracker  find_or_initialize_by  save ","Hourglass TimeTracker  find_or_initialize_by  attributes= "]}," RedmineTimeTrackerImport start!":{"type":"method","name":"start!","children":[],"call":[" create_new_time_log "," find_gaps each "," find_gaps ","time_log stopped_at ","time_log started_on ","time_log time_bookings ","time_log bookable_hours > ","time_log bookable_hours ","time_log time_bookings empty? ","TimeLog  all each ","TimeLog  all "," create_new_time_booking ","TimeBooking  all each ","TimeBooking  all "," create_new_time_tracker ","TimeTracker  all each ","TimeTracker  all "," stub_old_plugin ","Redmine Plugin  installed? "]}," Hourglass RedminePatches UserPreferencePatch default_activity=":{"type":"method","name":"default_activity=","children":[],"call":[" []= "]}," Hourglass RedminePatches UserPreferencePatch default_activity":{"type":"method","name":"default_activity","children":[],"call":[" [] "]}," Hourglass RedminePatches UserPatch default_activity":{"type":"method","name":"default_activity","children":[],"call":["scope find_by ","system_wide_default name "," pref default_activity "," pref ","TimeEntryActivity  default ","TimeEntryActivity  default  name "]}," Hourglass RedminePatches UserPatch remove_references_before_destroy":{"type":"method","name":"remove_references_before_destroy","children":[],"call":["Hourglass TimeTracker  update_all "," id ","substitute id ","Hourglass TimeLog  update_all "," User  anonymous "," User  anonymous  id "]}," Hourglass RedminePatches TimeEntryActivityPatch applicable":{"type":"method","name":"applicable","children":[],"call":["TimeEntryActivity  shared active ","TimeEntryActivity  shared ","project activities ","project present? "]}," Hourglass RedminePatches SettingsControllerPatch hourglass_settings_params":{"type":"method","name":"hourglass_settings_params","children":[],"call":[" parse_int "," parse_float "," parse_boolean "," params [] transform_values "," params [] "," params "," params require permit "," params require ","  parse_float arse_int ","  parse_boolean arse_int ","  params [] transform_values arse_int ","  parse_float arse_float ","  parse_boolean arse_float ","  params [] transform_values arse_float ","  parse_float arse_boolean ","  parse_boolean arse_boolean ","  params [] transform_values arse_boolean ","  parse_float arams [] transform_values ","  parse_boolean arams [] transform_values ","  params [] transform_values arams [] transform_values ","  parse_float arams [] ","  parse_boolean arams [] ","  params [] transform_values arams [] ","  parse_float arams ","  parse_boolean arams ","  params [] transform_values arams ","  parse_float arams require  parse_float ermit ","  parse_boolean arams require  parse_boolean ermit ","  params [] transform_values arams require  params [] transform_values ermit ","  parse_float arams require ","  parse_boolean arams require ","  params [] transform_values arams require "]}," Hourglass RedminePatches SettingsControllerPatch plugin_with_hourglass":{"type":"method","name":"plugin_with_hourglass","children":[],"call":[" redirect_to "," plugin_settings_path "," flash []= "," l "," flash ","Hourglass Settings  []= "," hourglass_settings_params "," plugin_without_hourglass "," params [] == ","Hourglass PLUGIN_NAME  to_s "," params [] "," params "," request post? "," request "," hourglass_edit_update "]}," Hourglass RedminePatches QueryPatch validate_query_filters":{"type":"method","name":"validate_query_filters","children":[],"call":[" filters= "," operator_for == "," operator_for "," filters delete_if "," filters "," filters dup "]}," Hourglass RedminePatches QueryPatch prepended":{"type":"method","name":"prepended","children":[],"call":[]}," Hourglass RedminePatches ProjectsHelperPatch project_settings_tabs_with_hourglass":{"type":"method","name":"project_settings_tabs_with_hourglass","children":[],"call":["tabs << ","Hourglass PLUGIN_NAME  to_s ","User  current allowed_to? ","User  current ","@project module_enabled? "," project_settings_tabs_without_hourglass tap "," project_settings_tabs_without_hourglass "," method "]}," Hourglass RedminePatches ProjectPatch allowed_to_one_of_condition":{"type":"method","name":"allowed_to_one_of_condition","children":[],"call":["statement_stuff join ","statement_stuff << "," allowed_to_condition ","permissions each "]}," Hourglass RedminePatches MirrorAssetsPatch mirror_assets":{"type":"method","name":"mirror_assets","children":[],"call":["Hourglass Assets  compile ","Rails  env production? ","Rails  env "]}," RedmineHooks load_hourglass_helper":{"type":"method","name":"load_hourglass_helper","children":[],"call":["extendable class send ","extendable class "]}," RedmineHooks load!":{"type":"method","name":"load!","children":[],"call":[]}," RedmineHooks view_users_form_preferences":{"type":"method","name":"view_users_form_preferences","children":[],"call":["context [] render_to_string ","context slice ","context [] "," load_hourglass_helper "]}," RedmineHooks view_my_account_preferences":{"type":"method","name":"view_my_account_preferences","children":[],"call":["context [] render_to_string ","context slice ","context [] "," load_hourglass_helper "]}," RedmineHooks view_layouts_base_content":{"type":"method","name":"view_layouts_base_content","children":[],"call":["context [] render_to_string ","context [] "," load_hourglass_helper "]}," RedmineHooks view_layouts_base_html_head":{"type":"method","name":"view_layouts_base_html_head","children":[],"call":["context [] content_for "," stylesheet_link_tag ","context [] "," javascript_include_tag "," load_hourglass_helper "]}," RedmineHooks view_issues_context_menu_start":{"type":"method","name":"view_issues_context_menu_start","children":[],"call":["context [] render_to_string ","context [] ","context [] content_for "," load_hourglass_helper "]}," RedmineHooks view_issues_show_description_bottom":{"type":"method","name":"view_issues_show_description_bottom","children":[],"call":["context [] render_to_string ","context [] ","context [] content_for "," load_hourglass_helper "]}," DateTimeCalculations round?":{"type":"method","name":"round?","children":[],"call":["Hourglass Settings  [] ! ","Hourglass Settings  [] ","options [] ","options [] nil? ","Hourglass SettingsStorage  [] ! ","Hourglass SettingsStorage  [] "]}," DateTimeCalculations closest_booked_time_log":{"type":"method","name":"closest_booked_time_log","children":[],"call":["closest_time_logs last ","closest_time_logs first ","user hourglass_time_logs booked_on_project with_start_in_interval order ","user hourglass_time_logs booked_on_project with_start_in_interval ","user hourglass_time_logs booked_on_project ","user hourglass_time_logs ","start - ","start + "," round_carry_over_due ","user hourglass_time_logs booked_on_project with_start_in_interval order  last ","user hourglass_time_logs booked_on_project with_start_in_interval order  first "]}," DateTimeCalculations update_following_bookings":{"type":"method","name":"update_following_bookings","children":[],"call":[" raise ","booking persisted? ","booking update "," time_diff_in_hours ","next_time_log time_booking "," calculate_bookable_time ","booking rounding_carry_over ","next_time_log stop ","next_time_log start ","current_time_log == ","next_time_log ! "," closest_booked_time_log "," loop ","current_time_log start ","current_booking time_log ","next_time_log time_booking  persisted? ","next_time_log time_booking  update ","next_time_log time_next_time_log time_booking  "," closest_booked_time_log  time_booking ","next_time_log time_booking  rounding_carry_over "," closest_booked_time_log  stop "," closest_booked_time_log  start ","next_time_log current_time_log start  ","current_booking time_log  == "," closest_booked_time_log  ! ","current_time_log current_time_log start  ","current_booking time_log  start ","current_next_time_log time_booking  time_log "]}," DateTimeCalculations booking_process":{"type":"method","name":"booking_process","children":[],"call":[" update_following_bookings ","options [] "," raise ","time_booking persisted? ","ActiveRecord Base  transaction "," calculate_bookable_time ","previous_time_log time_booking rounding_carry_over ","previous_time_log time_booking ","options []= "," closest_booked_time_log "," round? "," closest_booked_time_log  time_booking rounding_carry_over ","previous_time_log time_booking  round? ing_carry_over "," closest_booked_time_log  time_booking ","  round? ? "]}," DateTimeCalculations calculate_bookable_time":{"type":"method","name":"calculate_bookable_time","children":[],"call":["start + "," round_interval "," time_diff "]}," DateTimeCalculations round_interval":{"type":"method","name":"round_interval","children":[],"call":["(send\n  (send\n    (send\n      (lvar :time_interval) :to_i) :/\n    (lvar :round_minimum_value)) :+\n  (lvar :round_multiplier)) * ","time_interval to_i / + ","time_interval to_i / ","time_interval to_i ","time_interval % < "," round_limit_in_seconds ","time_interval % ","time_interval % != "," round_minimum ","(send\n  (send\n    (send\n      (lvar :time_interval) :to_i) :/\n    (lvar : round_minimum )) :+\n  (lvar :round_multiplier)) * "]}," DateTimeCalculations hours_in_units":{"type":"method","name":"hours_in_units","children":[],"call":["result []= ","result shift divmod ","result shift ","(int 60) inject ","hours * "]}," DateTimeCalculations in_hours":{"type":"method","name":"in_hours","children":[],"call":["time_diff / ","1 hour to_f ","1 hour "]}," DateTimeCalculations time_diff_in_hours":{"type":"method","name":"time_diff_in_hours","children":[],"call":[" in_hours "," time_diff "]}," DateTimeCalculations time_diff":{"type":"method","name":"time_diff","children":[],"call":["(send\n  (lvar :time1) :-\n  (lvar :time2)) abs to_i ","(send\n  (lvar :time1) :-\n  (lvar :time2)) abs ","time1 - "]}," DateTimeCalculations round_carry_over_due":{"type":"method","name":"round_carry_over_due","children":[],"call":["(int 0) max ","Hourglass Settings  [] to_f hours to_i ","Hourglass Settings  [] to_f hours ","Hourglass Settings  [] to_f ","Hourglass Settings  [] ","Hourglass SettingsStorage  [] to_f hours to_i ","Hourglass SettingsStorage  [] to_f hours ","Hourglass SettingsStorage  [] to_f ","Hourglass SettingsStorage  [] "]}," DateTimeCalculations round_minimum":{"type":"method","name":"round_minimum","children":[],"call":["(int 1) max ","Hourglass Settings  [] to_f hours to_i ","Hourglass Settings  [] to_f hours ","Hourglass Settings  [] to_f ","Hourglass Settings  [] ","Hourglass SettingsStorage  [] to_f hours to_i ","Hourglass SettingsStorage  [] to_f hours ","Hourglass SettingsStorage  [] to_f ","Hourglass SettingsStorage  [] "]}," DateTimeCalculations round_limit_in_seconds":{"type":"method","name":"round_limit_in_seconds","children":[],"call":["(send\n  (lvar :l) :*\n  (send nil :round_minimum\n    (hash\n      (pair\n        (sym :project)\n        (lvar :project))))) to_i ","l * "," round_minimum ","(int 0) max ","(begin\n  (send\n    (send\n      (send\n        (const\n          (const nil :Hourglass) :Settings) :[]\n        (sym :round_limit)\n        (hash\n          (pair\n            (sym :project)\n            (lvar :project)))) :to_f) :/\n    (int 100))) min ","Hourglass Settings  [] to_f / ","Hourglass Settings  [] to_f ","Hourglass Settings  [] ","(begin\n  (send\n    (send\n      (send\n        (const\n          (const nil :Hourglass) :SettingsStorage) :[]\n        (sym :round_limit)\n        (hash\n          (pair\n            (sym :project)\n            (lvar :project)))) :to_f) :/\n    (int 100))) min ","Hourglass SettingsStorage  [] to_f / ","Hourglass SettingsStorage  [] to_f ","Hourglass SettingsStorage  [] ","(send\n  ((int 0) max var :(int 0) max ) :*\n  (send ni(int 0) max  :round_minimum\n    (hash\n      (pair\n        (sym :project)\n        ((int 0) max var :project))))) to_i ","(int 0) max  * ","(begin\n  (send\n    (send\n      (send\n        (const\n          (const ni(int 0) max  :Hourg(int 0) max ass) :Settings) :[]\n        (sym :round_(int 0) max imit)\n        (hash\n          (pair\n            (sym :project)\n            ((int 0) max var :project)))) :to_f) :/\n    (int 100))) min ","Hourg(int 0) max ass Settings  [] to_f / ","Hourg(int 0) max ass Settings  [] to_f ","Hourg(int 0) max ass Settings  [] ","(begin\n  (send\n    (send\n      (send\n        (const\n          (const ni(int 0) max  :Hourg(int 0) max ass) :SettingsStorage) :[]\n        (sym :round_(int 0) max imit)\n        (hash\n          (pair\n            (sym :project)\n            ((int 0) max var :project)))) :to_f) :/\n    (int 100))) min ","Hourg(int 0) max ass SettingsStorage  [] to_f / ","Hourg(int 0) max ass SettingsStorage  [] to_f ","Hourg(int 0) max ass SettingsStorage  [] "]}," Assets path":{"type":"method","name":"path","children":[],"call":["File  join "," asset_directory_map [] ","options [] "," asset_directory_map "," instance find_asset digest_path "," instance find_asset "," instance ","Rails  env production? ","Rails  env ","options [] present? "]}," Assets asset_directory_map":{"type":"method","name":"asset_directory_map","children":[],"call":[]}," Assets assets_directory_path":{"type":"method","name":"assets_directory_path","children":[],"call":["File  join ","Hourglass PLUGIN_NAME  to_s "]}," Assets asset_directories":{"type":"method","name":"asset_directories","children":[],"call":[" asset_directory_map values "," asset_directory_map "]}," Assets manifest":{"type":"method","name":"manifest","children":[],"call":["Sprockets Manifest  new ","File  join "," assets_directory_path "," instance "]}," Assets compile":{"type":"method","name":"compile","children":[],"call":[" manifest compile "," precompile "," manifest "]}," Assets precompile":{"type":"method","name":"precompile","children":[],"call":[]}," Assets initialize":{"type":"method","name":"initialize","children":[{"type":"method","name":"asset_path","children":[],"asgn":[],"call":["Hourglass Assets  path "]}],"call":["Hourglass Assets  path "," context_class class_eval "," context_class ","env css_compressor= ","env js_compressor= ","Rails  env production? ","Rails  env ","env append_path ","Rails  application assets paths each ","Rails  application assets paths ","Rails  application assets ","Rails  application ","File  join "," class asset_directories each "," class asset_directories "," class ","(str \"app\") each "]}," Hourglass AccessControl permissions_from_action":{"type":"method","name":"permissions_from_action","children":[],"call":["(send\n  (send\n    (const\n      (const nil :Redmine) :AccessControl) :permissions) :map) compact ","p name ","p actions include? ","p actions ","Redmine AccessControl  permissions map ","Redmine AccessControl  permissions ","action [] ","action is_a? "]}," Hourglass SettingsStorage redmine_method_name":{"type":"method","name":"redmine_method_name","children":[],"call":[]}," Hourglass SettingsStorage set":{"type":"method","name":"set","children":[],"call":["Setting  method ","(begin\n  (send nil :redmine_method_name)) to_sym "," redmine_method_name "]}," Hourglass SettingsStorage get":{"type":"method","name":"get","children":[],"call":["Setting  method "," redmine_method_name to_sym "," redmine_method_name "]}," Hourglass SettingsStorage project_id_key":{"type":"method","name":"project_id_key","children":[],"call":["(begin\n  (lvar :project_id)) to_sym ","project_or_project_id id ","project_or_project_id is_a? ","(begin\n  (lvar :project_or_project_id id )) to_sym ","project_or_project_or_project_id id  id ","project_or_project_or_project_id id  is_a? "]}," Hourglass SettingsStorage parse_assign_params":{"type":"method","name":"parse_assign_params","children":[],"call":["new_settings deep_symbolize_keys ","new_settings is_a? ","options [] ","options is_a? ","(begin\n  (lvar :key)) to_sym ","key is_a? ","key == ","new_settings deep_symbolize_keys  deep_symbolize_keys ","new_settings deep_symbolize_keys  is_a? "]}," Hourglass SettingsStorage []=":{"type":"method","name":"[]=","children":[],"call":[" set call "," set ","settings merge! ","settings [] delete "," project_id_key ","settings [] ","settings [] []= "," project merge compact "," project merge "," project "," get call "," get "," parse_assign_params ","args reverse "," get call  merge! "," get call  [] delete "," get call  [] "," get call  [] []= "]}," Hourglass SettingsStorage []":{"type":"method","name":"[]","children":[],"call":["settings [] ","settings merge "," project "," get call except "," get call "," get ","settings merge  [] "," get call except  [] ","settings merge  merge "," get call except  merge "]}," Hourglass SettingsStorage project":{"type":"method","name":"project","children":[],"call":["projects [] "," project_id_key "," get call [] "," get call "," get "," get call []  [] "]}," Hourglass SettingsStorage global":{"type":"method","name":"global","children":[],"call":[" get call "," get "]}," Hourglass SettingsStorage defaults":{"type":"method","name":"defaults","children":[],"call":[]}," Hourglass RedminePatches SettingsControllerPatch hourglass_edit_update":{"type":"method","name":"hourglass_edit_update","children":[],"call":[" render "," redirect_to "," plugin_settings_path "," flash []= "," l "," flash ","@settings update "," hourglass_settings_params "," request post? "," request ","Hourglass GlobalSettings  new ","@plugin settings [] ","@plugin settings ","Redmine Plugin  find "," params [] "," params ","Hourglass GlobalSettings  new  update ","Redmine Plugin  find  settings [] ","Redmine Plugin  find  settings "]}," Hourglass RedminePatches SettingsControllerPatch plugin":{"type":"method","name":"plugin","children":[],"call":[" hourglass_edit_update "," params [] == ","Hourglass PLUGIN_NAME  to_s "," params [] "," params "]}," Hourglass RedminePatches ProjectsHelperPatch hourglass_tab":{"type":"method","name":"hourglass_tab","children":[],"call":["tabs << ","Hourglass PLUGIN_NAME  to_s ","User  current allowed_to? ","User  current ","@project module_enabled? ","Hourglass ProjectSettings  load "]}," Hourglass RedminePatches ProjectsHelperPatch project_settings_tabs":{"type":"method","name":"project_settings_tabs","children":[],"call":[" tap "," method "]}," DateTimeCalculations calculate_stoppable_time":{"type":"method","name":"calculate_stoppable_time","children":[],"call":["(lvar :clamping_time) min ","clamp_limit != ","Time  now change + ","1 minute ","Time  now change ","Time  now ","(send\n  (lvar :start) :+\n  (lvar :clamp_limit)) change ","start + "," clamp_limit ","(lvar :(send\n  (lvar :start) :+\n  (lvar :clamp_limit)) change ) min "," clamp_limit  != ","(send\n  (lvar :start) :+\n  (lvar : clamp_limit )) change ","  clamp_limit  "]}," DateTimeCalculations clamp?":{"type":"method","name":"clamp?","children":[],"call":["clamping_time < ","clamp_limit == ","(send\n  (lvar :start) :+\n  (lvar :clamp_limit)) change ","start + ","Time  now change + ","1 minute ","Time  now change ","Time  now "," clamp_limit ","(send\n  (lvar :start) :+\n  (lvar :clamp_limit)) change  < "," clamp_limit  == ","(send\n  (lvar :start) :+\n  (lvar : clamp_limit )) change ","  clamp_limit  "]}," DateTimeCalculations clamp_limit":{"type":"method","name":"clamp_limit","children":[],"call":["(int 0) max ","Hourglass SettingsStorage  [] to_f hours to_i ","Hourglass SettingsStorage  [] to_f hours ","Hourglass SettingsStorage  [] to_f ","Hourglass SettingsStorage  [] "]}}