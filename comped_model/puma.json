{" Rack Handler Puma valid_options":{"type":"method","name":"valid_options","children":[],"call":[]}," Rack Handler Puma run":{"type":"method","name":"run","children":[],"call":[]}," Puma Utils query_parse":{"type":"method","name":"query_parse","children":[],"call":[]}," Puma Utils unescape":{"type":"method","name":"unescape","children":[],"call":[]}," Puma Utils escape":{"type":"method","name":"escape","children":[],"call":[]}," Puma ThreadPool shutdown":{"type":"method","name":"shutdown","children":[],"call":["w join ","@workers each ","@todo << ","@spawned times ","@auto_trim stop ","@workers first join ","@workers first ","@workers empty? ","@cond broadcast ","@mutex synchronize ","@workers empty? ! ","@not_full broadcast ","@not_empty broadcast ","@reaper stop ","threads each ","@workers dup ","t join ","t raise "," sleep ","threads empty? ","threads delete_if ","timeout times ","timeout == ","join call ","inner_timeout - ","Process  clock_gettime - ","Process  clock_gettime ","threads reject! "," lambda "," with_mutex ","t [] ","@shutdown_mutex synchronize "]}," Puma ThreadPool trim":{"type":"method","name":"trim","children":[],"call":["@todo << ","@spawned - > ","@spawned - ","@mutex synchronize ","@cond signal ","@waiting > ","@not_empty signal ","free > ","@waiting - ","@todo size "," with_mutex ","@waiting -  > "]}," Puma ThreadPool <<":{"type":"method","name":"<<","children":[],"call":["@todo << "," spawn_thread ","@spawned < ","@todo num_waiting == ","@todo num_waiting ","@cond signal ","@waiting == "," raise ","@mutex synchronize ","@waiting < ","@todo size ","@not_empty signal "," with_mutex "]}," Puma ThreadPool spawn_thread":{"type":"method","name":"spawn_thread","children":[],"call":["@workers << ","@mutex synchronize ","@workers delete ","block call ","todo pop ","Thread  new ","@cond wait ","@trim_requested > ","todo empty? ","mutex synchronize ","cond wait ","i new ","@extra map ","Thread  current []= ","Thread  current ","key == ","Thread  current keys each ","Thread  current keys ","todo shift ","not_empty wait ","not_full signal ","ThreadPool  clean_thread_locals ","STDERR  puts ","e class ","e message ","Thread  current name= ","puma %03i % ","Thread  current respond_to? ","Puma  set_thread_name ","threadpool %03i % "," trigger_out_of_band_hook ","Thread  exit ","%s threadpool %03i % ","%s tp %03i % "," trigger_before_thread_exit_hooks "," trigger_before_thread_start_hooks ","@todo pop ers << ","@todo shift ers << ","@todo pop ers delete ","@todo shift ers delete "]}," Puma ThreadPool backlog":{"type":"method","name":"backlog","children":[],"call":["@todo size ","@mutex synchronize "," with_mutex "]}," Puma ThreadPool initialize":{"type":"method","name":"initialize","children":[],"call":[" spawn_thread ","min times ","Mutex  new ","Queue  new ","@mutex synchronize ","ConditionVariable  new ","@min times "," Integer ","@not_full wait ","options [] "," Float ","Mutex  new  synchronize "," Integer  times ","ConditionVariable  new  wait "]}," Puma Server bonjour_registered?":{"type":"method","name":"bonjour_registered?","children":[],"call":[]}," Puma Server attempt_bonjour":{"type":"method","name":"attempt_bonjour","children":[],"call":["DNSSD  announce ","name gsub ","io kind_of? ","@ios each "," require "]}," Puma Server stop":{"type":"method","name":"stop","children":[],"call":["@thread join ","@notify << ","@persistent_wakeup close "," notify_safely "]}," Puma Server graceful_shutdown":{"type":"method","name":"graceful_shutdown","children":[],"call":["@thread_pool shutdown ","@events debug ","@thread_pool << ","Client  new ","@binder env ","sock accept_nonblock ","ios first each ","ios first ","IO  select ","@binder ios ","@options [] ","$stdout syswrite ","t backtrace join ","t backtrace ","t inspect ","i + ","threads each_with_index ","Process  pid ","threads size ","Thread  list ","timeout to_i ","@binder close ","@status != ","timeout to_f ","soClient  new k aClient  new Client  new ept_nonbloClient  new k ","sock accept_nonblock s first each ","IO  select  first each ","ios first eaClient  new h ","sock accept_nonblock s first ","IO  select  first ","IO  seleClient  new t ","@binder sock accept_nonblock s ","@binder IO  select  ","@optsock accept_nonblock ns [] ","t baClient  new ktraClient  new e join ","t baClient  new ktraClient  new e ","t inspeClient  new t ","Thread  list  each_with_index ","threads eaClient  new h_with_index ","Process  Process  pid  ","ProClient  new ess  pid ","Thread  list  size ","@options []  to_i ","@binder Client  new lose ","@options []  to_f "]}," Puma Server lowlevel_error":{"type":"method","name":"lowlevel_error","children":[],"call":["e backtrace join ","e backtrace ","e class ","e message ","handler call ","@options [] ","handler arity == ","handler arity ","e backtrace nil? ","e e backtrace join  join ","e e backtrace join  ","@options []  call ","@options []  arity == ","@options []  arity ","e e backtrace join  nil? "]}," Puma Server read_body":{"type":"method","name":"read_body","children":[],"call":["stream rewind ","stream write ","stream close ","client readpartial ","remain > ","remain % ","StringIO  new ","stream binmode ","Tempfile  new ","remain <= ","content_length - ","body size ","env [] to_i ","env [] ","cl to_i ","body bytesize ","body [] ","StringIO  new  rewind ","Tempfile  new  rewind ","StringIO  new  write ","Tempfile  new  write ","StringIO  new  close ","Tempfile  new  close ","content_length -  > ","content_length -  % ","StringIO  new  binmode ","Tempfile  new  binmode ","content_length -  <= ","env [] to_i  - ","cl to_i  - "]}," Puma Server handle_request":{"type":"method","name":"handle_request","children":[],"call":["o call ","after_reply each ","res_body close ","res_body respond_to? ","body close ","client flush ","client write ","part size to_s ","part size ","res_body each ","vs split each ","vs split ","headers each ","HTTP_STATUS_CODES  [] ","status to_s ","res_body [] size ","res_body [] ","res_body size == ","res_body size ","res_body kind_of? "," lowlevel_error ","@app call ","env []= ","env [] == ","env [] ","env [] != "," read_body "," normalize_env ","StringIO  new "," uncork_socket ","content_length to_s ","keep_alive ! ","status == "," cork_socket ","STATUS_WITH_NO_ENTITY_BODY  [] ","status < "," raise ","res_body == ","headers empty? ","part bytesize to_s ","part bytesize ","res_body [] bytesize ","@events unknown_error ","status to_i ","req body ","req io ","req env ","client syswrite "," fast_write ","response_hijack call ","lines to_s ","lines << ","lines append ","req hijacked ","status != ","vs to_s split each ","vs to_s split ","vs to_s ","vs respond_to? "," fetch_status_code ","req tempfile unlink ","req tempfile ","response_hijack ! ","client peercert ","part bytesize zero? ","k downcase ","env fetch downcase == ","env fetch downcase ","env fetch ","env fetch downcase != "," handle_app_response "," lambda ","vs to_s empty? ! ","vs to_s empty? ","@events log "," closed_socket? ","\r\n freeze "," v ","headers each_pair ","HTTP/1.1 103 Early Hints\r\n freeze "," possible_header_injection? ","env merge! ","env delete ","to_delete each ","to_add []= ","k gsub ","to_delete << ","k != ","k include? ","k start_with? ","env each "," default_server_port == "," default_server_port ","k tr ","@events debug_error ","@thread_pool with_force_shutdown ","env []=  each ","res_ read_body  close ","res_StringIO  new  close ","res_req body  close ","res_ read_body  respond_to? ","res_StringIO  new  respond_to? ","res_req body  respond_to? "," read_body  close ","StringIO  new  close ","req body  close ","req io  flush ","req io  write ","res_ read_body  each ","res_StringIO  new  each ","res_req body  each ","env [] == ers each ","status to_i  to_s ","res_ read_body  [] size ","res_StringIO  new  [] size ","res_req body  [] size ","res_ read_body  [] ","res_StringIO  new  [] ","res_req body  [] ","res_ read_body  size == ","res_StringIO  new  size == ","res_req body  size == ","res_ read_body  size ","res_StringIO  new  size ","res_req body  size ","res_ read_body  kind_of? ","res_StringIO  new  kind_of? ","res_req body  kind_of? ","req env  []= ","req env  [] == ","req env  [] ","req env  [] != "," read_ read_body  "," read_StringIO  new  "," read_req body  "," normalize_req env  ","res_body [] size  to_s ","res_body [] bytesize  to_s ","env [] ==  ! ","env [] !=  ! ","env fetch downcase ==  ! ","env fetch downcase !=  ! ","status to_i  == ","status to_i  < ","res_ read_body  == ","res_StringIO  new  == ","res_req body  == ","env [] == ers empty? ","res_ read_body  [] bytesize ","res_StringIO  new  [] bytesize ","res_req body  [] bytesize ","status to_i  to_i ","req  read_body  ","req StringIO  new  ","req req body  ","req req env  ","req io  syswrite ","status to_i  != "," fetch_status to_i _code ","req io  peercert ","req env  fetch downcase == ","req env  fetch downcase ","req env  fetch ","req env  fetch downcase != ","env [] == ers each_pair "," possible_env [] == er_injection? ","req env  merge! ","req env  delete ","req env  each "]}," Puma Server normalize_env":{"type":"method","name":"normalize_env","children":[],"call":["env []= ","client peeraddr last ","client peeraddr ","env [] "," raise ","uri path ","URI  parse ","host [] ","host size ","colon + ","host index ","host bytesize "," default_server_port ","addr empty? ","env key? ","client peerip ","uri query ","client peerclient peeraddr last  last ","client peerclient peerip  last ","client peerclient peeraddr last  ","client peerclient peerip  ","URI  parse  path ","env []  [] ","env []  size ","host index  + ","env []  index ","env []  bytesize ","client peeraddr last  empty? ","client peerip  empty? ","URI  parse  query "]}," Puma Server process_client":{"type":"method","name":"process_client","children":[],"call":["@events unknown_error ","client close ","@events parse_error "," raise ","data length >= ","data length ","data << ","chunk length == ","chunk length ","chunk ! ","client readpartial ","IO  select ","@proto_env dup ","HttpParser  new ","data slice! ","data size > ","data size "," handle_request ","parser body ","parser finished? ","parser execute ","nparsed < ","parser body size ","env [] ","parser reset ","ret first include? ","ret first ","data bytesize > ","data bytesize ","parser body bytesize ","proto_env dup ","data bytesize >= ","client env ","@reactor add ","client set_timeout ","client reset ","buffer reset ","client write_500 ","client write_400 ","@status == ","@events ssl_error ","ssl_socket peercert ","ssl_socket peeraddr last ","ssl_socket peeraddr ","client io ","ThreadPool  clean_thread_locals ","@options [] ","Thread  current purge_interrupt_queue ","Thread  current ","Thread  current respond_to? "," lowlevel_error ","requests >= ","client io << ","client env [] == ","client env [] ","client write_error ","@shutdown_mutex synchronize ","@thread_pool with_force_shutdown ","requests > "," client_error "," with_force_shutdown ","client finish ","client eagerly_finish ! ","client eagerly_finish ","Thread  current []= ","@thread_pool backlog > ","@thread_pool backlog ","requests + ","Puma Util  purge_interrupt_queue ","@log_writer unknown_error ","client io_buffer reset ","client io_buffer ","env [] ient env [] ose ","client readpartial  length >= ","client readpartial  length ","client readpartial  << ","client readpartial  length == ","client readpartial  ! ","env [] ient readpartial ","@proto_@proto_env dup  dup ","@proto_proto_env dup  dup ","client readpartial  slice! ","client readpartial  size > ","client readpartial  size ","HttpParser  new  body ","HttpParser  new  finished? ","HttpParser  new  execute ","parser execute  < ","HttpParser  new  body size ","@proto_env dup  [] ","proto_env dup  [] ","HttpParser  new  reset ","ret first inenv [] ude? ","IO  select  first include? ","IO  select  first ","client readpartial  bytesize > ","client readpartial  bytesize ","HttpParser  new  body bytesize ","proto_@proto_env dup  dup ","proto_proto_env dup  dup ","client readpartial  bytesize >= ","client @proto_env dup  ","client proto_env dup  ","env [] ient env ","env [] ient set_timeout ","env [] ient reset ","env [] ient write_500 ","env [] ient write_400 ","ssl_socket peerssl_socket peercert  ","client io  peercert ","ssl_socket peerssl_socket peeraddr last  last ","client io  peeraddr last ","ssl_socket peerssl_socket peeraddr last  ","client io  peeraddr ","env [] ient io ","ThreadPool  env [] ean_thread_locals ","ThreadPool  @options []  ","env [] ient io << ","client @proto_env dup  [] == ","client proto_env dup  [] == ","env [] ient env [] == ","client @proto_env dup  [] ","client proto_env dup  [] ","env [] ient env [] ","env [] ient write_error "," env [] ient_error ","env [] ient finish ","env [] ient eagerly_finish ! ","env [] ient eagerly_finish ","env [] ient io_buffer reset ","env [] ient io_buffer "]}," Puma Server handle_check":{"type":"method","name":"handle_check","children":[],"call":["@check read "]}," Puma Server run":{"type":"method","name":"run","children":[],"call":["i close ","@ios each "," graceful_shutdown ","@events unknown_error "," env "," client close "," client ","pool << ","sock accept "," handle_check ","sock == ","ios first each ","ios first ","IO  select ","Thread  new "," process_client ","ThreadPool  new ","BasicSocket  do_not_reverse_lookup= ","@status == ","@thread_pool auto_trim! ","File  unlink ","@unix_paths each ","@envs fetch "," handle_servers ","@reactor run_in_thread ","Reactor  new ","@reactor add ","client set_timeout ","client close ","@events parse_error ","client env ","client eagerly_finish ","client write_400 ","@events fire "," run_lopez_mode ","@mode == ","@thread_pool clean_thread_locals= ","@options [] ","client finish ","@thread_pool auto_reap! ","@events ssl_error ","ssl_socket peercert ","ssl_socket peeraddr last ","ssl_socket peeraddr ","client io ","Thread  current []= ","Thread  current ","Puma  set_thread_name ","client write_error ","@thread_pool out_of_band_hook= ","@events connection_error ","@shutdown_mutex synchronize ","@thread_pool with_force_shutdown ","Puma Util  pipe ","@reactor run "," method "," reactor_wakeup ","@IO  select  each ","IO  select  first each ","IO  select  first ","ThreadPool  new  auto_trim! ","Reactor  new  run_in_thread ","Reactor  new  add ","ThreadPool  new  clean_thread_locals= ","ThreadPool  new  auto_reap! ","ssl_socket peerssl_socket peercert  ","client io  peercert ","ssl_socket peerssl_socket peeraddr last  last ","client io  peeraddr last ","ssl_socket peerssl_socket peeraddr last  ","client io  peeraddr ","ThreadPool  new  out_of_band_hook= ","ThreadPool  new  with_force_shutdown ","Reactor  new  run "]}," Puma Server add_unix_listener":{"type":"method","name":"add_unix_listener","children":[],"call":["@ios << ","UNIXServer  new ","File  umask ","@unix_paths << ","@binder add_unix_listener ","@ioUNIXServer  new  << ","File  umaUNIXServer  new k ","@unix_pathUNIXServer  new  << ","@binder add_unix_liUNIXServer  new tener "]}," Puma Server add_tcp_listener":{"type":"method","name":"add_tcp_listener","children":[],"call":["@ios << ","TCPServer  new ","s setsockopt ","s listen ","@binder add_tcp_listener ","@ioTCPServer  new  << ","TCPServer  new  TCPServer  new etTCPServer  new ockopt ","TCPServer  new  liTCPServer  new ten ","@binder add_tcp_liTCPServer  new tener "]}," Puma Server initialize":{"type":"method","name":"initialize","children":[],"call":["QUERY_STRING freeze ","CONTENT_TYPE freeze ","SCRIPT_NAME freeze ","rack.run_once freeze ","rack.multiprocess freeze ","rack.multithread freeze ","events stderr ","rack.errors freeze ","rack.version freeze ","IO  pipe ","ENV  [] ","Binder  new ","Puma Util  pipe ","options [] ","options [] nil? ","options fetch ","Mutex  new ","(send\n  (send\n    (ivar :@options) :[]\n    (sym :environment)) :=~\n  (regexp\n    (str \"\\\\A(development|test)\\\\z\")\n    (regopt))) ! ! ","(send\n  (send\n    (ivar :@options) :[]\n    (sym :environment)) :=~\n  (regexp\n    (str \"\\\\A(development|test)\\\\z\")\n    (regopt))) ! ","@options [] =~ ","@options [] ","Puma  mri? "," log_writer ","@options fetch ","LogWriter  stdio ","UserFileDefaultOptions  new ","options is_a? ","Events  new ","(begin\n  (lvasgn :ary\n    (send\n      (ivar :@options) :[]\n      (sym :supported_http_methods)))) sort product to_h freeze ","(begin\n  (lvasgn :ary\n    (send\n      (ivar :@options) :[]\n      (sym :supported_http_methods)))) sort product to_h ","(begin\n  (lvasgn :ary\n    (send\n      (ivar :@options) :[]\n      (sym :supported_http_methods)))) sort product ","(begin\n  (lvasgn :ary\n    (send\n      (ivar :@options) :[]\n      (sym :supported_http_methods)))) sort ","@options [] == ","(send\n  (send\n    (ivar :UserFileDefaultOptions  new ) :[]\n    (sym :environment)) :=~\n  (regexp\n    (str \"\\\\A(development|test)\\\\z\")\n    (regopt))) ! ! ","(send\n  (send\n    (ivar :UserFileDefaultOptions  new ) :[]\n    (sym :environment)) :=~\n  (regexp\n    (str \"\\\\A(development|test)\\\\z\")\n    (regopt))) ! ","UserFileDefaultOptions  new  [] =~ ","UserFileDefaultOptions  new  [] ","UserFileDefaultOptions  new  fetch ","(begin\n  (lvasgn :ary\n    (send\n      (ivar :UserFileDefaultOptions  new ) :[]\n      (sym :supported_http_methods)))) sort product to_h freeze ","(begin\n  (lvasgn :@options [] \n    (send\n      (ivar :@options) :[]\n      (sym :supported_http_methods)))) sort product to_h freeze ","(begin\n  (lvasgn :ary\n    (send\n      (ivar :UserFileDefaultOptions  new ) :[]\n      (sym :supported_http_methods)))) sort product to_h ","(begin\n  (lvasgn :@options [] \n    (send\n      (ivar :@options) :[]\n      (sym :supported_http_methods)))) sort product to_h ","(begin\n  (lvasgn :ary\n    (send\n      (ivar :UserFileDefaultOptions  new ) :[]\n      (sym :supported_http_methods)))) sort product ","(begin\n  (lvasgn :@options [] \n    (send\n      (ivar :@options) :[]\n      (sym :supported_http_methods)))) sort product ","(begin\n  (lvasgn :ary\n    (send\n      (ivar :UserFileDefaultOptions  new ) :[]\n      (sym :supported_http_methods)))) sort ","(begin\n  (lvasgn :@options [] \n    (send\n      (ivar :@options) :[]\n      (sym :supported_http_methods)))) sort ","UserFileDefaultOptions  new  [] == "]}," Puma Gems optional":{"type":"method","name":"optional","children":[],"call":[" gem ","Kernel  require "]}," Puma Events strings":{"type":"method","name":"strings","children":[],"call":[]}," Puma Events unknown_error":{"type":"method","name":"unknown_error","children":[],"call":["@stderr puts ","error backtrace join ","error backtrace ","error inspect ","Time  now ","error render ","error respond_to? ","string_block join ","string_block << ","env [] ","@error_logger info "]}," Puma Events parse_error":{"type":"method","name":"parse_error","children":[],"call":["@stderr puts ","env inspect ","Time  now ","error inspect ","env [] ","@error_logger info "]}," Puma Events initialize":{"type":"method","name":"initialize","children":[],"call":["@stderr sync= ","@stdout sync= ","h []= ","Hash  new ","ENV  key? ","DefaultFormatter  new ","stderr dup ","stdout dup ","ErrorLogger  new ","stderr dup  sync= ","stdout dup  sync= "]}," Puma CLI run":{"type":"method","name":"run","children":[],"call":["server run join ","server run "," log ","server attempt_bonjour "," error ","server add_unix_listener ","uri path ","uri host ","server add_tcp_listener ","uri port ","uri scheme ","URI  parse ","@binds each ","@options [] ","server max_threads= ","server min_threads= ","Puma Server  new ","@binds empty? "," load_rackup "," raise ","File  exists? ","ARGV  shift ","@parser parse! ","Rack CommonLogger  new "," write_pid "," parse_options "," restart! ","File  unlink ","server stop ","status run ","status add_unix_listener ","status add_tcp_listener ","status max_threads= ","status min_threads= ","Puma App Status  new "," require "," write_state ","@argv shift ","@options [] each ","app auth_token= ","token == ","token empty? ","@config app ","server add_ssl_listener ","ctx verify_mode= ","ctx cert= ","OpenSSL X509 Certificate  new ","File  read ","params [] ","ctx key= ","OpenSSL PKey RSA  new ","OpenSSL SSL SSLContext  new ","Rack Utils  parse_query ","uri query "," Integer ","@status stop "," graceful_stop ","Signal  trap ","server begin_restart ","uri scheme == ","IO  for_fd close ","IO  for_fd ","@inherited_fds each ","@listeners << ","server inherited_ssl_listener ","@inherited_fds delete ","server inherit_unix_listener ","server inherit_tcp_listener ","ENV  [] "," set_rack_environment "," run_single "," run_cluster ","@options []= ","PidEvents  new ","@options [] > ","Dir  chdir "," exit ","@binder parse ","@runner before_restart ","@runner run "," set_process_title "," setup_signals ","Single  new ","Cluster  new "," clustered? ","Kernel  exec ","(send\n  (const nil :Gem) :ruby) + + ","(send\n  (const nil :Gem) :ruby) + ","Gem  ruby ","dirs join ","File  expand_path ","File  join ","Bundler  with_clean_env ","(send\n  (send\n    (lvar :puma) :runtime_dependencies) :map) join ","spec version to_s ","spec version ","d name ","Bundler  rubygems loaded_specs ","Bundler  rubygems ","puma runtime_dependencies map ","puma runtime_dependencies ","File  exist? ","dirs detect ","puma full_gem_path ","puma require_paths map ","puma require_paths "," prune_bundler? ","@events formatter= ","Events PidFormatter  new ","ENV  []= "," prune_bundler ","@control stop "," start_control "," delete_pidfile ","puma_lib_dir + ","$: detect ","(send\n  (const nil :Gem) :ruby) + + + ","(send\n  (lvar :dirs) :map) flatten ","dirs map ","@launcher run ","Puma Server  new  run join ","server rparams [] n join ","Puma Server  new  run ","server rparams [] n ","Puma Server  new  attempt_bonjour ","server attempt_bonjoparams [] r ","Puma Server  new  add_unix_listener ","server add_params [] nix_listener ","URI  parse  path ","params [] ri path ","URI  parse  host ","params [] ri host ","Puma Server  new  add_tcp_listener ","URI  parse  port ","params [] ri port ","URI  parse  scheme ","params [] ri scheme ","@optserver add_ssl_listener ns [] ","@optserver inherited_ssl_listener ns [] ","@optserver add_unix_listener ns [] ","@optserver inherit_unix_listener ns [] ","@optserver add_tcp_listener ns [] ","@optserver inherit_tcp_listener ns [] ","Puma Server  new  max_threads= ","server @options [] hreads= ","Puma Server  new  min_threads= ","Pparams [] ma Server  new "," load_@options []  "," load_rackparams [] p "," parse_optserver add_ssl_listener ns "," parse_optserver inherited_ssl_listener ns "," parse_optserver add_unix_listener ns "," parse_optserver inherit_unix_listener ns "," parse_optserver add_tcp_listener ns "," parse_optserver inherit_tcp_listener ns ","File  params [] nlink ","Puma Server  new  stop ","statparams [] s rparams [] n ","statparams [] s add_params [] nix_listener ","statparams [] s add_tcp_listener ","status @options [] hreads= ","statparams [] s max_threads= ","statparams [] s min_threads= ","Pparams [] ma App Statparams [] s  new "," reqparams [] ire ","@optserver add_ssl_listener ns [] each ","@optserver inherited_ssl_listener ns [] each ","@optserver add_unix_listener ns [] each ","@optserver inherit_unix_listener ns [] each ","@optserver add_tcp_listener ns [] each ","@optserver inherit_tcp_listener ns [] each ","Puma App Status  new  auth_token= ","@config app  auth_token= ","app auth_@options [] = ","app aparams [] th_token= ","@options []  == ","@options []  empty? ","@config Puma App Status  new  ","@config @config app  ","Puma Server  new  add_ssl_listener ","OpenSSL SSL SSLContext  new  verify_mode= ","OpenSSL SSL SSLContext  new  cert= ","Rack Utils  parse_query  [] ","OpenSSL SSL SSLContext  new  key= ","Rack Utils  parse_qparams [] ery ","URI  parse  query ","params [] ri qparams [] ery ","@Puma Server  new  stop ","@statparams [] s stop "," gracefparams [] l_stop ","Puma Server  new  begin_restart ","URI  parse  scheme == ","params [] ri scheme == ","IO  for_@inherited_fds delete  close ","IO  for_@inherited_fds delete  ","@inherited_@inherited_fds delete s each ","Puma Server  new  inherited_ssl_listener ","@inherited_@inherited_fds delete s delete ","Puma Server  new  inherit_unix_listener ","server inherit_params [] nix_listener ","Puma Server  new  inherit_tcp_listener "," rparams [] n_single "," rparams [] n_clparams [] ster ","@optserver add_ssl_listener ns []= ","@optserver inherited_ssl_listener ns []= ","@optserver add_unix_listener ns []= ","@optserver inherit_unix_listener ns []= ","@optserver add_tcp_listener ns []= ","@optserver inherit_tcp_listener ns []= ","@optserver add_ssl_listener ns [] > ","@optserver inherited_ssl_listener ns [] > ","@optserver add_unix_listener ns [] > ","@optserver inherit_unix_listener ns [] > ","@optserver add_tcp_listener ns [] > ","@optserver inherit_tcp_listener ns [] > ","Dir  ch@options []  ","@rparams [] nner before_restart ","Single  new  before_restart ","Cluster  new  before_restart ","@rparams [] nner rparams [] n ","Single  new  run ","Cluster  new  run "," setparams [] p_signals ","Clparams [] ster  new "," clparams [] stered? "," @options [] > ? ","(send\n  (const nil :Gem) :rparams [] by) + + ","(send\n  (const nil :Gem) :rparams [] by) + ","Gem  rparams [] by ","@options [] s join ","Bparams [] ndler  with_clean_env ","(send\n  (send\n    (lvar :pparams [] ma) :rparams [] ntime_dependencies) :map) join ","(send\n  (send\n    (lvar :Bundler  rubygems loaded_specs ) :runtime_dependencies) :map) join ","spec versserver add_ssl_listener n to_s ","spec versserver inherited_ssl_listener n to_s ","spec versserver add_unix_listener n to_s ","spec versserver inherit_unix_listener n to_s ","spec versserver add_tcp_listener n to_s ","spec versserver inherit_tcp_listener n to_s ","Bundler  rubygems loaded_specs  version to_s ","spec versserver add_ssl_listener n ","spec versserver inherited_ssl_listener n ","spec versserver add_unix_listener n ","spec versserver inherit_unix_listener n ","spec versserver add_tcp_listener n ","spec versserver inherit_tcp_listener n ","Bundler  rubygems loaded_specs  version ","Bparams [] ndler  rparams [] bygems loaded_specs ","Bundler  rubygems loaded_Bundler  rubygems loaded_specs s ","Bparams [] ndler  rparams [] bygems ","pparams [] ma rparams [] ntime_dependencies map ","Bundler  rubygems loaded_specs  runtime_dependencies map ","pparams [] ma rparams [] ntime_dependencies ","Bundler  rubygems loaded_specs  runtime_dependencies ","@options [] s detect ","pparams [] ma fparams [] ll_gem_path ","Bundler  rubygems loaded_specs  full_gem_path ","pparams [] ma reqparams [] ire_paths map ","Bundler  rubygems loaded_specs  require_paths map ","pparams [] ma reqparams [] ire_paths ","Bundler  rubygems loaded_specs  require_paths "," prparams [] ne_bparams [] ndler? ","PidEvents  new  formatter= "," prparams [] ne_bparams [] ndler ","@@options [] rol stop "," start_@options [] rol ","pparams [] ma_lib_dir + ","puma_lib_@options []  + ","Bundler  rubygems loaded_specs _lib_dir + ","(send\n  (const nil :Gem) :rparams [] by) + + + ","(send\n  (lvar :@options [] s) :map) flatten ","@options [] s map ","@laparams [] ncher rparams [] n "]}," Puma CLI load_rackup":{"type":"method","name":"load_rackup","children":[],"call":["@binds << ","key to_s [] == ","key to_s [] ","key to_s ","options each ","@options merge! ","Rack Builder  parse_file ","@options [] "]}," Puma CLI setup_options":{"type":"method","name":"setup_options","children":[],"call":[" exit "," log ","@parser on_tail ","@parser banner= ","@binds << ","o on ","@options []= ","arg to_i ","max to_i ","min to_i ","arg split ","OptionParser  new ","Dir  tmpdir ","(send\n  (send\n    (send\n      (const nil :Time) :now) :to_f) :*\n  (int 1000)) to_i ","Time  now to_f * ","Time  now to_f ","Time  now "," require "," raise ","arg != ","@options [] << ","@options [] ","$LOAD_PATH unshift "," puts ","d to_s "," unsupported "," jruby? "," windows? ","o on_tail ","o banner= ","@cli_options []= ","@cli_options [] << ","@cli_options [] ","(or-asgn\n  (send\n    (ivar :@cli_options) :[]\n    (sym :binds))\n  (array)) << ","binds << ","$stdout puts ","arg to_s ","c tag ","c workers ","c tcp_mode! ","c threads ","c state_path ","c restart_command ","c log_requests ","c quiet ","c prune_bundler ","c preload_app! ","c pidfile ","c bind ","c environment ","c directory ","c debug ","c daemonize ","@control_options []= ","Puma  jruby? ","c load ","Configuration  new ","user_config tag ","user_config workers ","user_config tcp_mode! ","user_config threads ","user_config state_path ","user_config restart_command ","user_config log_requests ","user_config quiet ","user_config prune_bundler ","user_config preload_app! ","user_config pidfile ","user_config bind ","user_config environment ","user_config directory ","user_config debug ","user_config daemonize ","file_config load ","user_config early_hints "," configure_control_url "," c extra_runtime_dependencies "," c ","user_config extra_runtime_dependencies ","user_config fork_worker ","args compact ","user_config bind_to_activated_sockets ","Events  new ","NullIO  new ","LogWriter  new ","Configuration DEFAULTS  [] ","user_config idle_timeout "," exi(send\n  (send\n    (send\n      (const nil :Time) :now) :to_f) :*\n  (int 1000)) to_i  ","@parser on_(send\n  (send\n    (send\n      (const nil :Time) :now) :to_f) :*\n  (int 1000)) to_i ail ","@op(send\n  (send\n    (send\n      (const nil :Time) :now) :to_f) :*\n  (int 1000)) to_i ions []= ","arg (send\n  (send\n    (send\n      (const nil :Time) :now) :to_f) :*\n  (int 1000)) to_i o_i ","max (send\n  (send\n    (send\n      (const nil :Time) :now) :to_f) :*\n  (int 1000)) to_i o_i ","min (send\n  (send\n    (send\n      (const nil :Time) :now) :to_f) :*\n  (int 1000)) to_i o_i ","arg spli(send\n  (send\n    (send\n      (const nil :Time) :now) :to_f) :*\n  (int 1000)) to_i  ","Op(send\n  (send\n    (send\n      (const nil :Time) :now) :to_f) :*\n  (int 1000)) to_i ionParser  new ","Dir  (send\n  (send\n    (send\n      (const nil :Time) :now) :to_f) :*\n  (int 1000)) to_i mpdir ","(send\n  (send\n    (send\n      (cons(send\n  (send\n    (send\n      (const nil :Time) :now) :to_f) :*\n  (int 1000)) to_i  nil :Time) :now) :(send\n  (send\n    (send\n      (const nil :Time) :now) :to_f) :*\n  (int 1000)) to_i o_f) :*\n  (in(send\n  (send\n    (send\n      (const nil :Time) :now) :to_f) :*\n  (int 1000)) to_i  1000)) (send\n  (send\n    (send\n      (const nil :Time) :now) :to_f) :*\n  (int 1000)) to_i o_i ","Time  now (send\n  (send\n    (send\n      (const nil :Time) :now) :to_f) :*\n  (int 1000)) to_i o_f * ","Time  now (send\n  (send\n    (send\n      (const nil :Time) :now) :to_f) :*\n  (int 1000)) to_i o_f ","@op(send\n  (send\n    (send\n      (const nil :Time) :now) :to_f) :*\n  (int 1000)) to_i ions [] << ","@op(send\n  (send\n    (send\n      (const nil :Time) :now) :to_f) :*\n  (int 1000)) to_i ions [] ","$LOAD_PATH unshif(send\n  (send\n    (send\n      (const nil :Time) :now) :to_f) :*\n  (int 1000)) to_i  "," pu(send\n  (send\n    (send\n      (const nil :Time) :now) :to_f) :*\n  (int 1000)) to_i s ","d (send\n  (send\n    (send\n      (const nil :Time) :now) :to_f) :*\n  (int 1000)) to_i o_s "," unsuppor(send\n  (send\n    (send\n      (const nil :Time) :now) :to_f) :*\n  (int 1000)) to_i ed ","o on_(send\n  (send\n    (send\n      (const nil :Time) :now) :to_f) :*\n  (int 1000)) to_i ail ","@cli_op(send\n  (send\n    (send\n      (const nil :Time) :now) :to_f) :*\n  (int 1000)) to_i ions []= ","@cli_op(send\n  (send\n    (send\n      (const nil :Time) :now) :to_f) :*\n  (int 1000)) to_i ions [] << ","@cli_op(send\n  (send\n    (send\n      (const nil :Time) :now) :to_f) :*\n  (int 1000)) to_i ions [] ","(or-asgn\n  (send\n    (ivar :@cli_op(send\n  (send\n    (send\n      (const nil :Time) :now) :to_f) :*\n  (int 1000)) to_i ions) :[]\n    (sym :binds))\n  (array)) << ","$s(send\n  (send\n    (send\n      (const nil :Time) :now) :to_f) :*\n  (int 1000)) to_i dou(send\n  (send\n    (send\n      (const nil :Time) :now) :to_f) :*\n  (int 1000)) to_i  pu(send\n  (send\n    (send\n      (const nil :Time) :now) :to_f) :*\n  (int 1000)) to_i s ","arg (send\n  (send\n    (send\n      (const nil :Time) :now) :to_f) :*\n  (int 1000)) to_i o_s ","c (send\n  (send\n    (send\n      (const nil :Time) :now) :to_f) :*\n  (int 1000)) to_i ag ","c (send\n  (send\n    (send\n      (const nil :Time) :now) :to_f) :*\n  (int 1000)) to_i cp_mode! ","c (send\n  (send\n    (send\n      (const nil :Time) :now) :to_f) :*\n  (int 1000)) to_i hreads ","c s(send\n  (send\n    (send\n      (const nil :Time) :now) :to_f) :*\n  (int 1000)) to_i a(send\n  (send\n    (send\n      (const nil :Time) :now) :to_f) :*\n  (int 1000)) to_i e_pa(send\n  (send\n    (send\n      (const nil :Time) :now) :to_f) :*\n  (int 1000)) to_i h ","c res(send\n  (send\n    (send\n      (const nil :Time) :now) :to_f) :*\n  (int 1000)) to_i ar(send\n  (send\n    (send\n      (const nil :Time) :now) :to_f) :*\n  (int 1000)) to_i _command ","c log_reques(send\n  (send\n    (send\n      (const nil :Time) :now) :to_f) :*\n  (int 1000)) to_i s ","c quie(send\n  (send\n    (send\n      (const nil :Time) :now) :to_f) :*\n  (int 1000)) to_i  ","c environmen(send\n  (send\n    (send\n      (const nil :Time) :now) :to_f) :*\n  (int 1000)) to_i  ","c direc(send\n  (send\n    (send\n      (const nil :Time) :now) :to_f) :*\n  (int 1000)) to_i ory ","@con(send\n  (send\n    (send\n      (const nil :Time) :now) :to_f) :*\n  (int 1000)) to_i rol_op(send\n  (send\n    (send\n      (const nil :Time) :now) :to_f) :*\n  (int 1000)) to_i ions []= ","Configura(send\n  (send\n    (send\n      (const nil :Time) :now) :to_f) :*\n  (int 1000)) to_i ion  new ","user_config (send\n  (send\n    (send\n      (const nil :Time) :now) :to_f) :*\n  (int 1000)) to_i ag ","user_config (send\n  (send\n    (send\n      (const nil :Time) :now) :to_f) :*\n  (int 1000)) to_i cp_mode! ","user_config (send\n  (send\n    (send\n      (const nil :Time) :now) :to_f) :*\n  (int 1000)) to_i hreads ","user_config s(send\n  (send\n    (send\n      (const nil :Time) :now) :to_f) :*\n  (int 1000)) to_i a(send\n  (send\n    (send\n      (const nil :Time) :now) :to_f) :*\n  (int 1000)) to_i e_pa(send\n  (send\n    (send\n      (const nil :Time) :now) :to_f) :*\n  (int 1000)) to_i h ","user_config res(send\n  (send\n    (send\n      (const nil :Time) :now) :to_f) :*\n  (int 1000)) to_i ar(send\n  (send\n    (send\n      (const nil :Time) :now) :to_f) :*\n  (int 1000)) to_i _command ","user_config log_reques(send\n  (send\n    (send\n      (const nil :Time) :now) :to_f) :*\n  (int 1000)) to_i s ","user_config quie(send\n  (send\n    (send\n      (const nil :Time) :now) :to_f) :*\n  (int 1000)) to_i  ","user_config environmen(send\n  (send\n    (send\n      (const nil :Time) :now) :to_f) :*\n  (int 1000)) to_i  ","user_config direc(send\n  (send\n    (send\n      (const nil :Time) :now) :to_f) :*\n  (int 1000)) to_i ory ","user_config early_hin(send\n  (send\n    (send\n      (const nil :Time) :now) :to_f) :*\n  (int 1000)) to_i s "," configure_con(send\n  (send\n    (send\n      (const nil :Time) :now) :to_f) :*\n  (int 1000)) to_i rol_url "," c ex(send\n  (send\n    (send\n      (const nil :Time) :now) :to_f) :*\n  (int 1000)) to_i ra_run(send\n  (send\n    (send\n      (const nil :Time) :now) :to_f) :*\n  (int 1000)) to_i ime_dependencies ","user_config ex(send\n  (send\n    (send\n      (const nil :Time) :now) :to_f) :*\n  (int 1000)) to_i ra_run(send\n  (send\n    (send\n      (const nil :Time) :now) :to_f) :*\n  (int 1000)) to_i ime_dependencies ","args compac(send\n  (send\n    (send\n      (const nil :Time) :now) :to_f) :*\n  (int 1000)) to_i  ","user_config bind_(send\n  (send\n    (send\n      (const nil :Time) :now) :to_f) :*\n  (int 1000)) to_i o_ac(send\n  (send\n    (send\n      (const nil :Time) :now) :to_f) :*\n  (int 1000)) to_i iva(send\n  (send\n    (send\n      (const nil :Time) :now) :to_f) :*\n  (int 1000)) to_i ed_socke(send\n  (send\n    (send\n      (const nil :Time) :now) :to_f) :*\n  (int 1000)) to_i s ","Even(send\n  (send\n    (send\n      (const nil :Time) :now) :to_f) :*\n  (int 1000)) to_i s  new ","LogWri(send\n  (send\n    (send\n      (const nil :Time) :now) :to_f) :*\n  (int 1000)) to_i er  new ","Configura(send\n  (send\n    (send\n      (const nil :Time) :now) :to_f) :*\n  (int 1000)) to_i ion DEFAULTS  [] ","user_config idle_(send\n  (send\n    (send\n      (const nil :Time) :now) :to_f) :*\n  (int 1000)) to_i imeou(send\n  (send\n    (send\n      (const nil :Time) :now) :to_f) :*\n  (int 1000)) to_i  "]}," Puma CLI error":{"type":"method","name":"error","children":[],"call":[" exit ","@stderr puts ","@events error "]}," Puma CLI log":{"type":"method","name":"log","children":[],"call":["@stdout puts ","@events log "]}," Puma CLI initialize":{"type":"method","name":"initialize","children":[],"call":[" setup_options ","Events  new "," generate_restart_data ","ENV  delete ","remove each ","remove << ","@inherited_fds []= ","fd to_i ","v split ","k =~ ","ENV  each ","ENV  [] ","@binder import_from_env ","Binder  new ","Puma Launcher  new ","c activate_control_app ","c stdout_redirect ","@conf configure "," exit ","c rackup ","@argv shift ","@parser parse! ","argv dup ","user_config activate_control_app ","user_config stdout_redirect ","file_config rackup ","Binder  new  import_from_env ","argv dup  shift ","@argv shift _config rackup "]}," Rack CommonLogger call":{"type":"method","name":"call","children":[],"call":[" log ","BodyProxy  new ","ary << "," lambda ","env [] ","Utils HeaderHash  new ","@app call ","Time  now "," log_hijacking ","env []  << "]}," Puma CLI parse_options":{"type":"method","name":"parse_options","children":[],"call":["@parser parse! ","@options []= ","Configuration  temp_path ","@options [] == ","@options [] ","@argv shift ","@config load ","Puma Configuration  new ","@argv last "," unsupported "," windows? "," jruby? ","Puma  cli_config= ","@options [] > "," clustered? "," find_config ","@config options ","@cli_options []= ","@config options  []= ","@config options  [] == ","@config options  [] ","Puma Configuration  new  load ","@config options  [] > ","Puma Configuration  new  options "]}," Puma CLI write_pid":{"type":"method","name":"write_pid","children":[],"call":["f puts ","Process  pid ","File  open ","@options [] "," delete_pidfile ","cur == "," at_exit ","Process  pid  == "]}," Puma ThreadPool auto_trim!":{"type":"method","name":"auto_trim!","children":[],"call":["@auto_trim start! ","AutoTrim  new ","Automaton  new ","AutoTrim  new  start! ","Automaton  new  start! "]}," Puma ThreadPool AutoTrim stop":{"type":"method","name":"stop","children":[],"call":["@thread wakeup "]}," Puma ThreadPool AutoTrim start!":{"type":"method","name":"start!","children":[],"call":[" sleep ","@pool trim ","Thread  new "]}," Puma ThreadPool AutoTrim initialize":{"type":"method","name":"initialize","children":[],"call":[]}," Puma Server halt":{"type":"method","name":"halt","children":[],"call":["@thread join ","@notify << ","@persistent_wakeup close "," notify_safely "]}," Puma Server running":{"type":"method","name":"running","children":[],"call":["@thread_pool spawned "]}," Puma Server backlog":{"type":"method","name":"backlog","children":[],"call":["@thread_pool backlog "]}," Puma Server uncork_socket":{"type":"method","name":"uncork_socket","children":[],"call":["socket setsockopt ","socket kind_of? ","Thread  current purge_interrupt_queue ","Thread  current ","Thread  current respond_to? ","skt setsockopt ","skt kind_of? ","socket to_io ","Puma Util  purge_interrupt_queue ","socket to_io  setsockopt ","socket to_io  kind_of? "]}," Puma Server cork_socket":{"type":"method","name":"cork_socket","children":[],"call":["socket setsockopt ","socket kind_of? ","Thread  current purge_interrupt_queue ","Thread  current ","Thread  current respond_to? ","skt setsockopt ","skt kind_of? ","socket to_io ","Puma Util  purge_interrupt_queue ","socket to_io  setsockopt ","socket to_io  kind_of? "]}," Puma NullIO close":{"type":"method","name":"close","children":[],"call":[]}," Puma NullIO rewind":{"type":"method","name":"rewind","children":[],"call":[]}," Puma NullIO read":{"type":"method","name":"read","children":[],"call":["count > "]}," Puma NullIO each":{"type":"method","name":"each","children":[],"call":[]}," Puma NullIO gets":{"type":"method","name":"gets","children":[],"call":[]}," Puma ControlCLI command_stats":{"type":"method","name":"command_stats","children":[],"call":[" puts ","rep split last ","rep split "," s read "," s "," s << "," connect ","sock read ","sock << ","@stdout puts "," request "," s read  split last ","sock read  split last "," s read  split ","sock read  split "," connect  read "," connect  << "]}," Puma ControlCLI command_restart":{"type":"method","name":"command_restart","children":[],"call":[" puts "," raise ","body != ","rep split last ","rep split ","sock read ","sock << "," connect ","@stdout puts "," request ","rep split last  != "," request  != ","sock read  split last ","sock read  split "," connect  read "," connect  << "]}," Puma ControlCLI command_halt":{"type":"method","name":"command_halt","children":[],"call":[" puts "," raise ","body != ","rep split last ","rep split "," s read "," s "," s << "," connect ","@stdout puts "," request ","rep split last  != "," request  != "," s read  split last "," s read  split "]}," Puma ControlCLI command_stop":{"type":"method","name":"command_stop","children":[],"call":[" puts "," raise ","body != ","rep split last ","rep split ","sock read ","sock << "," connect ","@stdout puts "," request ","rep split last  != "," request  != ","sock read  split last ","sock read  split "," connect  read "," connect  << "]}," Puma ControlCLI command_pid":{"type":"method","name":"command_pid","children":[],"call":[" puts ","@state [] ","@stdout puts "]}," Puma ControlCLI run":{"type":"method","name":"run","children":[],"call":[" raise "," __send__ "," respond_to? ","@argv shift ","YAML  load_file ","@parser parse! "," setup_options ","@state [] ","YAML  load ","File  read "," exit "," message ","e message "," send_signal "," send_request ","@options has_key? "," is_windows? "," prepare_configuration ","cli run ","Puma CLI  new "," require ","@options [] == ","@options [] "," start ","Puma Events  new ","(str \"-S\") + ","Puma  windows? ","@command == ","e backtrace ","NO_REQ_COMMANDS  include? ! ","NO_REQ_COMMANDS  include? ","YAML  load_file  [] ","YAML  load  [] ","Puma CLI  new  run "]}," Puma ControlCLI connect":{"type":"method","name":"connect","children":[],"call":[" raise ","UNIXSocket  new ","uri path ","uri host ","TCPSocket  new ","uri port ","uri scheme ","URI  parse ","@state [] ","@config options [] ","@config options ","URI  parse  path ","URI  parse  host ","URI  parse  port ","URI  parse  scheme "]}," Puma ControlCLI setup_options":{"type":"method","name":"setup_options","children":[],"call":["o on ","OptionParser  new "]}," Puma ControlCLI initialize":{"type":"method","name":"initialize","children":[],"call":[" exit ","@stdout puts ","e message "," raise ","@options [] ","COMMANDS  include? ","COMMANDS  join ","@options []= ","argv shift ","opts terminate ","opts order! "," puts ","o on_tail ","o on ","arg to_i ","o banner= ","OptionParser  new ","Puma Configuration  new load ","Puma Configuration  new ","File  exist? ","@options [] nil? ","@options [] == ","config options ","config load ","@cli_options [] ","@cli_options []= ","@cli_options [] nil? ","@cli_options [] == ","config options [] ","Puma Configuration  from_file ","@config_file nil? ","@config_file == ","argv dup ","e backtrace ","opts parse! ","(dstr\n  (str \"config/puma/\")\n  (begin\n    (ivar :@environment))\n  (str \".rb\")) find ","ENV  [] ","(dstr\n  (str \"config/puma/\")\n  (begin\n    (lvar :environment))\n  (str \".rb\")) find ","CMD_PATH_SIG_MAP  key? ","CMD_PATH_SIG_MAP  keys join ","CMD_PATH_SIG_MAP  keys "," require_relative ","config options  [] ","config options  []= ","config options  [] nil? ","config options  [] == ","Puma Configuration  new  options ","Puma Configuration  from_file  options ","Puma Configuration  new  load ","Puma Configuration  from_file  load ","Puma Configuration  new  options [] ","Puma Configuration  from_file  options [] ","@Puma Configuration  new _file nil? ","@Puma Configuration  from_file _file nil? ","@Puma Configuration  new _file == ","@Puma Configuration  from_file _file == ","(dstr\n  (str \"Puma Configuration  new /puma/\")\n  (begin\n    (ivar :@environment))\n  (str \".rb\")) find ","(dstr\n  (str \"Puma Configuration  from_file /puma/\")\n  (begin\n    (ivar :@environment))\n  (str \".rb\")) find ","(dstr\n  (str \"config/puma/\")\n  (begin\n    (ivar :ENV  [] ))\n  (str \".rb\")) find ","(dstr\n  (str \"Puma Configuration  new /puma/\")\n  (begin\n    (lvar :environment))\n  (str \".rb\")) find ","(dstr\n  (str \"Puma Configuration  from_file /puma/\")\n  (begin\n    (lvar :environment))\n  (str \".rb\")) find "]}," Puma CLI stop":{"type":"method","name":"stop","children":[],"call":["@server stop "," delete_pidfile ","@status stop ","@runner stop "]}," Puma CLI write_state":{"type":"method","name":"write_state","children":[],"call":["f write ","state to_yaml ","File  open ","state []= ","@options [] ","Process  pid "," require ","cfg options delete ","cfg options ","@config dup ","(sym :logger) each "," write_pid ","KEYS_NOT_TO_PERSIST_IN_STATE  each ","@config dup  options delete ","@config dup  options "]}," Puma CLI restart!":{"type":"method","name":"restart!","children":[],"call":["Kernel  exec ","Dir  chdir ","JRubyRestart  chdir_exec ","Gem  ruby "," require ","cmd split + ","cmd split ","@options [] ","ENV  []= ","io to_i ","@listeners each_with_index ","File  unlink ","uri path ","uri host ","uri scheme == ","uri scheme ","URI  parse ","io close ","blk call ","@options [] each ","RUBY_VERSION  < ","redirects []= ","@binder listeners each_with_index ","@binder listeners "," jruby? "," restart_args "," redirects "," windows? ","block call ","RUBY_VERSION  >= "," close_binder_listeners ","@options []  split + ","@options []  split ","URI  parse  path ","URI  parse  host ","URI  parse  scheme == ","URI  parse  scheme "]}," Puma CLI generate_restart_data":{"type":"method","name":"generate_restart_data","children":[],"call":["(send\n  (const nil :Gem) :ruby) + ","Gem  ruby ","File  exists? "," require ","Dir  pwd ","s_env dev == ","s_pwd dev ","s_env dev ","s_env ino == ","s_pwd ino ","s_env ino ","File  stat ","ENV  [] ","arg0 + ","ARGV  dup ","arg0 []= ","$: [] == ","$: [] ","File  expand_path ","@options []= ","arg0 + + ","File  exist? "," jruby? ","@argv dup ","@cli_options []= ","File  stat  dev == ","File  stat  dev ","File  stat  ino == ","File  stat  ino "]}," Puma CLI restart_on_stop!":{"type":"method","name":"restart_on_stop!","children":[],"call":[]}," Puma App Status call":{"type":"method","name":"call","children":[],"call":["@server running ","@server backlog ","@server stop ","@cli restart_on_stop! ","@server halt ","env [] "," authenticate ","@server begin_restart "," rack_response ","@cli stats ","@cli phased_restart ! ","@cli phased_restart ","@cli restart ","@cli halt ","@cli stop ","@cli reload_worker_directory ! ","@cli reload_worker_directory ","@cli send ! ","@cli send ","{ + + ","{ + ","(send\n  (send\n    (const nil :GC) :stat) :map) join ","GC  stat map ","GC  stat ","GC  start ","GC  stat to_json "," require ","env [] =~ ","Process  kill ","backtraces to_json ","backtraces << ","@cli thread_status ","@cli stats to_json ","env [] [] tr ","env [] [] ","@launcher thread_status ","@launcher stats to_json ","@launcher stats ","@launcher send ","@launcher phased_restart ","@launcher restart ","@launcher halt ","@launcher stop ","Puma JSON  generate ","Puma JSONSerialization  generate ","@launcher refork ","@se@server running ve@server running  @server running unning ","@se@server running ve@server running  backlog ","@server @server backlog acklog ","@se@server running ve@server running  stop ","@cli @server running esta@server running t_on_stop! ","@se@server running ve@server running  halt ","@se@server running ve@server running  begin_@server running esta@server running t ","@server @server backlog egin_restart "," @server running ack_@server running esponse ","@cli phased_@server running esta@server running t ! ","@cli phased_@server running esta@server running t ","@cli @server running esta@server running t ","@cli @server running eload_wo@server running ke@server running _di@server running ecto@server running y ! ","@cli @server running eload_wo@server running ke@server running _di@server running ecto@server running y ","GC  sta@server running t ","GC  stat to_{ + +  "," @server running equi@server running e ","P@server running ocess  kill ","backt@server running aces to_json ","@server backlog acktraces to_json ","backtraces to_{ + +  ","backt@server running aces << ","@server backlog acktraces << ","@cli th@server running ead_status ","@cli stats to_{ + +  ","env [] [] t@server running  ","@launche@server running  th@server running ead_status ","@launche@server running  stats to_json ","@launcher stats to_{ + +  ","@launche@server running  stats ","@launche@server running  send ","@launche@server running  phased_@server running esta@server running t ","@launche@server running  @server running esta@server running t ","@launche@server running  halt ","@launche@server running  stop ","Puma JSON  gene@server running ate ","Puma JSONSe@server running ialization  gene@server running ate ","@launche@server running  @server running efo@server running k "]}," Puma App Status initialize":{"type":"method","name":"initialize","children":[],"call":[]}," Puma JRubyRestart chdir_exec":{"type":"method","name":"chdir_exec","children":[],"call":[]}," Puma Configuration state_path":{"type":"method","name":"state_path","children":[],"call":["@options []= ","path to_s "]}," Puma Configuration threads":{"type":"method","name":"threads","children":[],"call":["@options []= "," raise ","min > "]}," Puma Configuration rackup":{"type":"method","name":"rackup","children":[],"call":["@options []= ","path to_s ","@options [] "]}," Puma Configuration quiet":{"type":"method","name":"quiet","children":[],"call":["@options []= "]}," Puma Configuration pidfile":{"type":"method","name":"pidfile","children":[],"call":["@options []= "]}," Puma Configuration bind":{"type":"method","name":"bind","children":[],"call":["@options [] << ","@options [] "]}," Puma Configuration activate_control_app":{"type":"method","name":"activate_control_app","children":[],"call":["@options []= "]}," Puma Configuration app":{"type":"method","name":"app","children":[],"call":["@options []= "," raise ","Rack CommonLogger  new ","@options [] ","@options [] << ","key to_s [] == ","key to_s [] ","key to_s ","options each ","@options merge! ","Rack Builder  parse_file ","File  exists? ","ConfigMiddleware  new ","@options [] == ","@options [] ! "," rackup ","TCPLogger  new "," require ","config_ru_binds empty? ","config_ru_binds << ","File  exist? "," load_rackup "," options [] "," options ","CommonLogger  new "," require_relative "]}," Puma Configuration temp_path":{"type":"method","name":"temp_path","children":[],"call":[]}," Puma Configuration load":{"type":"method","name":"load","children":[],"call":["@options [] << ","@options [] ","@options [] empty? "," instance_eval ","File  read "," setup_random_token ","@options []= ","Configuration  temp_path ","@options [] == ","DSL  new _load_from ","DSL  new "," infer_tag "," setup_control "," setup_binds ","DSL  load ","@options merge! "," default_options ","@cli_options [] ","@conf merge! ","@options shift ","files each ","files == ","files << ","File  exist? ","(dstr\n  (str \"config/puma/\")\n  (begin\n    (send\n      (ivar :@options) :[]\n      (sym :environment)))\n  (str \".rb\")) find ","files empty? ","@options all_of ","@file_dsl _load_from "," config_files each "," config_files ","@options reverse_shift ","Configuration  temp_@options []  ","Configuration  temp_Configuration  temp_path  ","@options all_of  each ","@options all_of  == ","@options all_of  << ","@options all_of  empty? "," config_@options all_of  each "," config_@options all_of  "]}," Puma Configuration initialize":{"type":"method","name":"initialize","children":[],"call":["@options [] ","@conf [] "," configure ","PluginLoader  new ","LeveledOptions  new "," default_options ","DSL  new ","@options default_options ","@options file_options ","@options user_options ","UserFileDefaultOptions  new "," puma_default_options merge "," puma_default_options ","default_options []= ","Puma  forkable? ","@options [] > ","@options [] ! ","LeveledOptions  new  [] ","UserFileDefaultOptions  new  [] ","  puma_default_options merge  ","LeveledOptions  new  default_options ","UserFileDefaultOptions  new  default_options ","@options  puma_default_options merge  ","LeveledOptions  new  file_options ","UserFileDefaultOptions  new  file_options ","LeveledOptions  new  user_options ","UserFileDefaultOptions  new  user_options "," puma_ puma_default_options merge  merge "," puma_ puma_default_options merge  "," puma_default_options merge  []= ","LeveledOptions  new  [] > ","UserFileDefaultOptions  new  [] > ","LeveledOptions  new  [] ! ","UserFileDefaultOptions  new  [] ! "]}," Puma ControlCLI request":{"type":"method","name":"request","children":[],"call":["rep last "," raise ","m [] ","m [] != ","m [] == ","(str \"HTTP/1.\\\\d (\\\\d+)\") match ","rep first ","sock read split ","sock read ","sock << ","@config options [] ","@config options ","sock read split  last ","(str \"HTTP/1.\\d (\\d+)\") match  [] ","(str \"HTTP/1.\\d (\\d+)\") match  [] != ","(str \"HTTP/1.\\d (\\d+)\") match  [] == ","(str \"HTTP/1.\\\\d (\\\\d+)\") (str \"HTTP/1.\\d (\\d+)\") match atch ","sock read split  first "]}," Puma Configuration DSL state_path":{"type":"method","name":"state_path","children":[],"call":["@options []= ","path to_s "]}," Puma Configuration DSL threads":{"type":"method","name":"threads","children":[],"call":["@options []= "," raise ","min > "," Integer "," Integer  > "]}," Puma Configuration DSL rackup":{"type":"method","name":"rackup","children":[],"call":["@options []= ","path to_s "]}," Puma Configuration DSL quiet":{"type":"method","name":"quiet","children":[],"call":["@options []= "]}," Puma Configuration DSL pidfile":{"type":"method","name":"pidfile","children":[],"call":["@options []= "]}," Puma Configuration DSL bind":{"type":"method","name":"bind","children":[],"call":["@options [] << ","@options [] "]}," Puma Configuration DSL activate_control_app":{"type":"method","name":"activate_control_app","children":[],"call":["@options []= ","opts [] "]}," Puma Configuration DSL app":{"type":"method","name":"app","children":[],"call":["@options []= "," raise "]}," Puma Configuration DSL _load_from":{"type":"method","name":"_load_from","children":[],"call":[" instance_eval ","File  read "]}," Puma Configuration DSL initialize":{"type":"method","name":"initialize","children":[],"call":[]}," Puma Configuration setup_random_token":{"type":"method","name":"setup_random_token","children":[],"call":["@options []= ","(send\n  (send\n    (begin\n      (irange\n        (int 0)\n        (lvar :count))) :to_a) :map) join "," rand to_s "," rand ","(irange\n  (int 0)\n  (lvar :count)) to_a map ","(irange\n  (int 0)\n  (lvar :count)) to_a ","token << ","b to_s ","bytes each_byte ","f read ","File  open ","File  exists? ","OpenSSL Random  random_bytes "," require ","File  exist? ","(send\n  (send\n    (begin\n      (irange\n        (int 0)\n        (lvar :count))) :to_a) :map) join  << ","f read  each_byte ","OpenSSL Random  random_bytes  each_byte ","OpenSSL Random  random_f read  ","OpenSSL Random  random_OpenSSL Random  random_bytes  "]}," Puma App Status authenticate":{"type":"method","name":"authenticate","children":[],"call":["env [] to_s split include? ","env [] to_s split ","env [] to_s ","env [] "]}," Puma Server add_ssl_listener":{"type":"method","name":"add_ssl_listener","children":[],"call":["@ios << ","OpenSSL SSL SSLServer  new ","@proto_env []= ","s listen ","s setsockopt ","TCPServer  new ","@envs []= ","env []= ","@proto_env dup ","@binder add_ssl_listener ","@ioTCPServer  new  << ","@proto_@proto_env dup  []= ","TCPServer  new  liTCPServer  new ten ","TCPServer  new  TCPServer  new etTCPServer  new ockopt ","@envTCPServer  new  []= ","@@proto_env dup s []= ","@proto_env dup  []= ","@proto_@proto_env dup  dup ","@binder add_TCPServer  new TCPServer  new l_liTCPServer  new tener ","@binder add_OpenSSL SSL SSLServer  new _listener "]}," Puma Configuration DSL ssl_bind":{"type":"method","name":"ssl_bind","children":[],"call":["@options [] << ","o join ","@options [] ","opts [] "]}," Puma Server begin_restart":{"type":"method","name":"begin_restart","children":[],"call":["@notify << ","@persistent_wakeup close "," notify_safely ","@thread join "]}," Puma Server inherit_unix_listener":{"type":"method","name":"inherit_unix_listener","children":[],"call":["@ios << ","UNIXServer  for_fd ","@unix_paths << ","@ioUNIXServer  for_fd  << ","@unix_pathUNIXServer  for_fd  << "]}," Puma Server inherited_ssl_listener":{"type":"method","name":"inherited_ssl_listener","children":[],"call":["@ios << ","OpenSSL SSL SSLServer  new ","TCPServer  for_fd ","@ioTCPServer  for_fd  << "]}," Puma Server inherit_tcp_listener":{"type":"method","name":"inherit_tcp_listener","children":[],"call":["@ios << ","TCPServer  for_fd ","@ioTCPServer  for_fd  << "]}," Puma Configuration DSL on_restart":{"type":"method","name":"on_restart","children":[],"call":["@options [] << ","@options [] "]}," Puma Configuration initialize_copy":{"type":"method","name":"initialize_copy","children":[],"call":["@options dup ","@conf dup ","@options dup  dup ","@conf dup  dup "]}," Puma CLI graceful_stop":{"type":"method","name":"graceful_stop","children":[],"call":[" log ","server stop "," delete_pidfile ","@status stop ","Time  now ","@runner stop_blocked ","@control stop "]}," Puma App Status rack_response":{"type":"method","name":"rack_response","children":[],"call":["body length to_s ","body length ","body bytesize to_s ","body bytesize "]}," Puma Server handle_servers":{"type":"method","name":"handle_servers","children":[],"call":["File  unlink ","@unix_paths each ","i close ","@ios each ","@status == "," graceful_shutdown ","@events unknown_error "," client close "," client ","pool << ","@envs fetch ","sock accept "," handle_check ","sock == ","ios first each ","ios first ","IO  select ","@reactor shutdown ","Client  new ","@reactor clear! ","@binder close ","@status != ","@notify close ","@check close ","STDERR  puts ","e backtrace ","e class ","e message ","@binder env ","sock accept_nonblock ","(lvar :check) + ","@binder ios ","@events fire ","pool wait_until_not_full ","io close ","client remote_addr_header= ","client peerip= ","@options [] ","Thread  current purge_interrupt_queue ","Thread  current ","Thread  current respond_to? ","@options [] each ","busy_threads == ","@check closed? ","pool wait_for_less_busy_worker ","@options [] to_f ","Puma Util  pipe ","@shutdown_mutex synchronize ","@events debug "," shutting_down? ","client listener= "," raise ","client expect_proxy_proto= ","io closed? ","(ivar :@check) each ","c send ","c listener= ","Client  new tap ","@log_writer unknown_error ","@log_writer debug ","c http_content_length_limit= ","@unix_paths eaClient  new h ","i Client  new lose ","@IO  select  each ","@ios eaClient  new h ","@sock accept_nonblock s each "," graClient  new eful_shutdown "," Client  new lient Client  new lose "," Client  new  close "," Client  new lient "," Client  new  ","@envs fetClient  new h ","soClient  new k aClient  new Client  new ept "," handle_Client  new heClient  new k ","soClient  new k == ","IO  select  first each ","ios first eaClient  new h ","sock accept_nonblock s first each ","IO  select  first ","sock accept_nonblock s first ","IO  seleClient  new t ","@reaClient  new tor shutdown ","@reaClient  new tor Client  new lear! ","@binder Client  new lose ","@notify Client  new lose ","@Client  new heClient  new k Client  new lose ","e baClient  new ktraClient  new e ","e Client  new lass ","soClient  new k aClient  new Client  new ept_nonbloClient  new k ","(lvar :Client  new heClient  new k) + ","@binder IO  select  ","@binder sock accept_nonblock s ","io Client  new lose ","sock accept_nonblock  close ","Client  new lient remote_addr_header= ","Client  new  remote_addr_header= ","client @options [] = ","Client  new lient peerip= ","Client  new  peerip= ","@optsock accept_nonblock ns [] ","Thread  Client  new urrent purge_interrupt_queue ","Thread  Client  new urrent ","Thread  Client  new urrent respond_to? ","@options [] eaClient  new h ","@optsock accept_nonblock ns [] each ","pool wait_until_not_full  == ","@Client  new heClient  new k Client  new losed? ","@optsock accept_nonblock ns [] to_f ","@shutdown_mutex synClient  new hronize ","Client  new lient listener= ","Client  new  listener= ","Client  new lient expeClient  new t_proxy_proto= ","Client  new  expect_proxy_proto= ","io Client  new losed? ","sock accept_nonblock  closed? ","(ivar :@Client  new heClient  new k) eaClient  new h ","Client  new  send ","Client  new  http_Client  new ontent_length_limit= "]}," Puma Events error":{"type":"method","name":"error","children":[],"call":[" exit ","@stderr puts "," format ","@error_logger info "]}," Puma Events log":{"type":"method","name":"log","children":[],"call":["@stdout puts "," format ","@stdout respond_to? ","@stdout flush ","@stdout sync "]}," Puma Configuration DSL environment":{"type":"method","name":"environment","children":[],"call":["@options []= "]}," Puma CLI delete_pidfile":{"type":"method","name":"delete_pidfile","children":[],"call":["File  unlink ","@options [] ","File  exist? ","File  exists? "]}," Puma CLI set_rack_environment":{"type":"method","name":"set_rack_environment","children":[],"call":["ENV  []= ","ENV  [] ","@options [] ","@options []= "," env "]}," Puma Reactor shutdown":{"type":"method","name":"shutdown","children":[],"call":["@trigger << ","@thread join ","Thread  current purge_interrupt_queue ","Thread  current ","Thread  current respond_to? ","@selector wakeup ","@input close "]}," Puma Reactor add":{"type":"method","name":"add","children":[],"call":[" calculate_sleep ","a timeout_at <=> ","b timeout_at ","a timeout_at ","@timeouts sort! ","@timeouts << ","c timeout_at ","@trigger << ","@input << ","@mutex synchronize ","@selector wakeup "]}," Puma Reactor calculate_sleep":{"type":"method","name":"calculate_sleep","children":[],"call":["diff < ","@timeouts first timeout_at to_f - ","Time  now to_f ","Time  now ","@timeouts first timeout_at to_f ","@timeouts first timeout_at ","@timeouts first ","@timeouts empty? ","@timeouts first value timeout_at to_f - ","@timeouts first value timeout_at to_f ","@timeouts first value timeout_at ","@timeouts first value ","@timeouts first timeout_at to_f -  < ","@timeouts first value timeout_at to_f -  < "]}," Puma Reactor run_in_thread":{"type":"method","name":"run_in_thread","children":[],"call":[" puts ","e backtrace "," p "," run ","Thread  new ","STDERR  puts ","e class ","e message ","@ready close ","@trigger close "," run_internal ","Puma  set_thread_name "]}," Puma Reactor run":{"type":"method","name":"run","children":[],"call":[" calculate_sleep ","@timeouts empty? ","c close ","sockets delete ","@timeouts shift ","@timeouts first timeout_at < ","@timeouts first timeout_at ","@timeouts first ","Time  now ","@events parse_error ","c env ","@app_pool << ","c try_to_finish ","@timeouts delete ","c timeout_at ","@input clear ","@ready read ","@mutex synchronize ","c == ","reads each ","ready [] ","IO  select ","s close ","s == ","sockets delete_if ","@ready close ","@trigger close ","c write_500 ","c write_400 "," run_internal "," select_loop ","Puma  set_thread_name ","Thread  new "," @timeouts shift al@timeouts shift ulate_sleep ","@timeouts shift  @timeouts shift lose ","so@timeouts shift kets delete ","Time  Time  now  ","@timeouts shift  env ","@timeouts shift  try_to_finish ","@timeouts shift  timeout_at ","@input @timeouts shift lear ","@IO  select  read ","@mutex syn@timeouts shift hronize ","@timeouts shift  == ","reads ea@timeouts shift h ","ready []  each ","IO  select  [] ","IO  sele@timeouts shift t ","s @timeouts shift lose ","so@timeouts shift kets delete_if ","@ready @timeouts shift lose ","@IO  select  close ","@trigger @timeouts shift lose ","@timeouts shift  write_500 ","@timeouts shift  write_400 "," sele@timeouts shift t_loop "]}," Puma Reactor initialize":{"type":"method","name":"initialize","children":[],"call":["IO  pipe ","Mutex  new ","server events ","Puma Util  pipe ","mon value= ","@selector register ","NIO Selector  new ","Queue  new "," require ","backend == "," raise ","NIO Selector  backends join ","NIO Selector  backends ","NIO Selector  backends include? "," NIO Selector  new ","NIO Selector  backends delete ","ArgumentError  new ","valid_backends join ","valid_backends include? "," NIO Selector  backends ","@selector register  value= ","NIO Selector  new  register "," NIO Selector  new  register "]}," Puma Client read_body":{"type":"method","name":"read_body","children":[],"call":["@body rewind ","remain <= ","@body write "," raise ","@body close ","@io readpartial ","remain > ","@io read_nonblock "," read_chunked_body "," set_ready "," read_@io readpartial ed_body "," read_@io read_nonblock ed_body "]}," Puma Client eagerly_finish":{"type":"method","name":"eagerly_finish","children":[],"call":[" try_to_finish ","IO  select "," jruby_start_try_to_finish ","@io kind_of? ","@to_io wait_readable "]}," Puma Client jruby_start_try_to_finish":{"type":"method","name":"jruby_start_try_to_finish","children":[],"call":[" raise ","@parsed_bytes >= "," setup_body ","@parser finished? ","@parser execute ","@buffer << ","e kind_of? ","@io sysread_nonblock "," read_body "," set_ready ","@parser execute  >= "]}," Puma Client try_to_finish":{"type":"method","name":"try_to_finish","children":[],"call":[" raise ","@parsed_bytes >= "," setup_body ","@parser finished? ","@parser execute ","@buffer << ","@io readpartial "," read_body ","@io read_nonblock "," set_ready "," try_to_parse_proxy_protocol "," in_data_phase "," above_http_content_limit ","@parser body bytesize ","@parser body "," env [] to_i "," env [] "," env ","@parser execute  >= "," in_@io readpartial _phase "," in_@io read_nonblock _phase "]}," Puma Client setup_body":{"type":"method","name":"setup_body","children":[],"call":["@body write ","StringIO  new ","body [] ","@body binmode ","Tempfile  new ","remain > ","remain <= ","cl to_i - ","body bytesize ","cl to_i ","body empty? ","@env [] ","@parser body "," setup_chunked_body ","CHUNKED  casecmp == ","CHUNKED  casecmp ","@io flush ","@io << ","@env [] == ","part strip ","te split each ","te split ","te include? ","te == "," set_ready ","Process  clock_gettime "," raise ","cl inspect ","cl =~ ","ALLOWED_TRANSFER_ENCODING  include? ","@env delete ","te_lwr == ","te_valid ! ","te_count >= ","te_count == ","te_ary last == ","te_ary last ","te_ary [] all? ","te_ary [] ","te_ary count ","te_lwr split ","te downcase ","@body unlink ","cl empty? ","CONTENT_LENGTH_VALUE_INVALID  match? ","StringIO  new  write ","Tempfile  new  write ","@@parser body  write ","@body wri@env []  ","@parser body  [] ","StringIO  new  binmode ","Tempfile  new  binmode ","@@parser body  binmode ","cl to_i -  > ","cl to_i -  <= ","@env []  to_i - ","@parser body  bytesize ","body by@env [] size ","@env []  to_i ","@parser body  empty? ","@parser @parser body  "," setup_chunked_@parser body  ","@env []  split each ","@env []  split ","te in@env [] ude? ","@env []  include? ","@env []  == ","Process  @env [] ock_gettime ","@env []  inspect ","@env []  =~ ","ALLOWED_TRANSFER_ENCODING  in@env [] ude? ","@env dele@env []  ","@env [] _lwr == ","te downcase  == ","@env [] _valid ! ","@env [] _count >= ","te_ary count  >= ","@env [] _count == ","te_ary count  == ","@env [] _ary last == ","te_lwr split  last == ","@env [] _ary last ","te_lwr split  last ","@env [] _ary [] all? ","te_lwr split  [] all? ","@env [] _ary [] ","te_lwr split  [] ","@env [] _ary count ","te_lwr split  count ","@env [] _lwr split ","te downcase  split ","@env []  downcase ","StringIO  new  unlink ","Tempfile  new  unlink ","@@parser body  unlink ","@env []  empty? "]}," Puma Client close":{"type":"method","name":"close","children":[],"call":["@io close ","Thread  current purge_interrupt_queue ","Thread  current ","Thread  current respond_to? ","Puma Util  purge_interrupt_queue "]}," Puma Client reset":{"type":"method","name":"reset","children":[],"call":[" raise ","@parsed_bytes >= "," setup_body ","@parser finished? ","@parser execute ","@proto_env dup ","@parser reset "," try_to_finish ","IO  select ","@to_io wait_readable "," try_to_parse_proxy_protocol ","@expect_proxy_proto ! ! ","@expect_proxy_proto ! ","@io_buffer reset ","@parser execute  >= "]}," Puma Client set_timeout":{"type":"method","name":"set_timeout","children":[],"call":["Time  now + ","Time  now ","Process  clock_gettime + ","Process  clock_gettime "]}," Puma Client inspect":{"type":"method","name":"inspect","children":[],"call":["@ready inspect "," object_id to_s "," object_id "]}," Puma Client initialize":{"type":"method","name":"initialize","children":[],"call":["HttpParser  new ","env dup ","io to_io ","env ! ","IOBuffer  new "," +@ ","String  new "]}," Puma Reactor clear!":{"type":"method","name":"clear!","children":[],"call":["@trigger << ","Thread  current purge_interrupt_queue ","Thread  current ","Thread  current respond_to? "]}," Puma Util pipe":{"type":"method","name":"pipe","children":[],"call":["IO  pipe "]}," Puma Server fast_write":{"type":"method","name":"fast_write","children":[],"call":["str byteslice ","n == ","str bytesize ","IO  select ","io syswrite ","left == ","str bytesize - "," raise ","IO  select ! ","str byteslice  byteslice ","io syswrite  == ","str byteslice  bytesize ","str bytesize -  == ","str byteslice  bytesize - "]}," Puma Server default_server_port":{"type":"method","name":"default_server_port","children":[],"call":["env [] == ","env [] ","env [] to_s [] == ","env [] to_s [] ","env [] to_s ","(str \"on\") include? "]}," Puma Server inherit_binder":{"type":"method","name":"inherit_binder","children":[],"call":[]}," Handler default":{"type":"method","name":"default","children":[],"call":[]}," Puma MiniSSL Server close":{"type":"method","name":"close","children":[],"call":["@socket close ","@socket closed? "]}," Puma MiniSSL Server accept_nonblock":{"type":"method","name":"accept_nonblock","children":[],"call":["Socket  new ","Engine  server ","@ctx cert ","@ctx key ","@socket accept_nonblock ","@ctx check "]}," Puma MiniSSL Server accept":{"type":"method","name":"accept","children":[],"call":["Socket  new ","Engine  server ","@ctx cert ","@ctx key ","@socket accept ","@ctx check "]}," Puma MiniSSL Server to_io":{"type":"method","name":"to_io","children":[],"call":[]}," Puma MiniSSL Server initialize":{"type":"method","name":"initialize","children":[],"call":["SSLContext  new "]}," Puma MiniSSL Context cert=":{"type":"method","name":"cert=","children":[],"call":[" raise ","File  exist? "," check_file "]}," Puma MiniSSL Context key=":{"type":"method","name":"key=","children":[],"call":[" raise ","File  exist? "," check_file "]}," Puma MiniSSL Socket peeraddr":{"type":"method","name":"peeraddr","children":[],"call":["@socket peeraddr "]}," Puma MiniSSL Socket close":{"type":"method","name":"close","children":[],"call":["@socket close ","Thread  current purge_interrupt_queue ","Thread  current ","Thread  current respond_to? "," read_and_drop == "," read_and_drop "," should_drop_bytes? ","(sym :timeout) include? ","@engine shutdown ","@engine inject ","@socket sysread ","@socket write ","@engine extract "," read_nonblock ","IO  select ","@engine init? ","Puma Util  purge_interrupt_queue "]}," Puma MiniSSL Socket flush":{"type":"method","name":"flush","children":[],"call":["@socket flush "]}," Puma MiniSSL Socket write":{"type":"method","name":"write","children":[],"call":["data [] ","data size ","need == ","@socket syswrite ","@engine extract ","@engine write ","data bytesize ","@socket write ","data empty? ","enc_wr empty? ","enc_wr << "," dup ","data byteslice "," +@ ","data []  [] ","data byteslice  [] ","data []  size ","data byteslice  size ","data size  == ","data bytesize  == ","data []  bytesize ","data byteslice  bytesize ","data []  empty? ","data byteslice  empty? ","@engine extract _wr empty? "," dup  empty? "," +@  empty? ","@engine extract _wr << "," dup  << "," +@  << ","data []  byteslice ","data byteslice  byteslice "]}," Puma MiniSSL Socket read_nonblock":{"type":"method","name":"read_nonblock","children":[],"call":["@socket write ","@engine extract ","@engine read ","@engine inject ","@socket read_nonblock "," engine_read_all ","IO  select ","@socket to_io ","data == ","@socket to_io __send__ ","@socket to_io respond_to? ","data ! ","data nil? "," raise ","SSLError  exception "," bad_tlsv1_3? ","@socket read_nonblock  == ","@socket read_nonblock  ! ","@socket read_nonblock  nil? "]}," Puma MiniSSL Socket readpartial":{"type":"method","name":"readpartial","children":[],"call":["@socket write ","@engine extract ","@engine read ","@engine inject ","@socket readpartial "]}," Puma MiniSSL Socket to_io":{"type":"method","name":"to_io","children":[],"call":[]}," Puma MiniSSL Socket initialize":{"type":"method","name":"initialize","children":[],"call":[]}," Puma IOBuffer capacity":{"type":"method","name":"capacity","children":[],"call":["@buf buf length ","@buf buf "]}," Puma IOBuffer used":{"type":"method","name":"used","children":[],"call":["@buf size "]}," Puma IOBuffer to_s":{"type":"method","name":"to_s","children":[],"call":["String  from_java_bytes ","@buf to_byte_array "," read "," rewind "]}," Puma IOBuffer append":{"type":"method","name":"append","children":[],"call":[" << ","strs each "," concat ","args each "," write "]}," Puma IOBuffer <<":{"type":"method","name":"<<","children":[],"call":["@buf write ","bytes length ","str to_java_bytes ","str to_java_bytes  length ","str to_java_str to_java_bytes  "]}," Puma IOBuffer reset":{"type":"method","name":"reset","children":[],"call":["@buf reset "," rewind "," truncate "]}," Puma IOBuffer initialize":{"type":"method","name":"initialize","children":[],"call":["JavaIOBuffer  new "," binmode "]}," Puma PidEvents error":{"type":"method","name":"error","children":[],"call":[]}," Puma PidEvents write":{"type":"method","name":"write","children":[],"call":[]}," Puma PidEvents log":{"type":"method","name":"log","children":[],"call":[]}," Puma Events write":{"type":"method","name":"write","children":[],"call":["@stdout write "," format "]}," Puma Delegation forward":{"type":"method","name":"forward","children":[],"call":[" module_eval "]}," Process daemon":{"type":"method","name":"daemon","children":[],"call":[]}," Puma ControlCLI send_signal":{"type":"method","name":"send_signal","children":[],"call":[" message ","@options [] "," puts ","Process  kill "," raise ","Process  getpgid "," start ","@options delete ","@options [] == "," pid ","@command == ","@stdout puts ","sig start_with? ","sig nil? ","CMD_PATH_SIG_MAP  [] ","@stdout flush ","@stdout sync ","Signal  list key? ","sig sub ","Signal  list "," @options []  ","CMD_PATH_SIG_MAP  []  start_with? ","CMD_PATH_SIG_MAP  []  nil? ","CMD_PATH_SIG_MAP  []  sub "]}," Puma ControlCLI send_request":{"type":"method","name":"send_request","children":[],"call":["@server close "," message ","@options [] "," raise ","@code != ","@code == ","response first split ","response first ","@server read split ","@server read ","@server << ","url + ","@options has_key? ","@options [] == ","uri scheme ","UNIXSocket  new ","uri path ","uri host ","TCPSocket  new ","uri port ","URI  parse ","response last ","response empty? ","data split ","@command == ","server close ","server closed? ! ","server closed? ","server read ","server << ","OpenSSL SSL SSLSocket  new tap ","OpenSSL SSL SSLSocket  new ","OpenSSL SSL SSLContext  new "," require ","server sysclose ","uri scheme == ","PRINTABLE_COMMANDS  include? ","(send\n  (send\n    (const\n      (const\n        (const nil :OpenSSL) :SSL) :SSLSocket) :new\n    (send\n      (const nil :TCPSocket) :new\n      (send\n        (lvar :uri) :host)\n      (send\n        (lvar :uri) :port))\n    (send\n      (const\n        (const\n          (const nil :OpenSSL) :SSL) :SSLContext) :new)) :tap) tap ","ssl sync_close= ","server syswrite ","NO_REQ_COMMANDS  include? ","@control_url start_with? ","host [] ","(send\n  (send\n    (const\n      (const\n        (const nil :OpenSSL) :SSL) :SSLSocket) :new\n    (send\n      (const nil :TCPSocket) :new\n      (lvar :host)\n      (send\n        (lvar :uri) :port))\n    (send\n      (const\n        (const\n          (const nil :OpenSSL) :SSL) :SSLContext) :new)) :tap) tap ","@server read split  first split ","data split  first split ","@server read split  first ","data split  first ","url +  + ","URI  parse  scheme ","URI  parse  path ","URI  parse  host ","uri host []  ","uri uri host  ","URI  parse  port ","@server read split  last ","data split  last ","@server read split  empty? ","data split  empty? ","@server read  split ","server read  split ","URI  parse  scheme == ","(send\n  (send\n    (const\n      (const\n        (const nil :OpenSSL) :SSL) :SSLSocket) :new\n    (send\n      (const nil :TCPSocket) :new\n      (send\n        (lvar :URI  parse ) :host)\n      (send\n        (lvar :URI  parse ) :port))\n    (send\n      (const\n        (const\n          (const nil :OpenSSL) :SSL) :SSLContext) :new)) :tap) tap ","(send\n  (send\n    (const\n      (const\n        (const nil :OpenSSL) :SSL) :SSLSocket) :new\n    (send\n      (const nil :TCPSocket) :new\n      (send\n        (lvar :uri) :host [] )\n      (send\n        (lvar :uri) :port))\n    (send\n      (const\n        (const\n          (const nil :OpenSSL) :SSL) :SSLContext) :new)) :tap) tap ","(send\n  (send\n    (const\n      (const\n        (const nil :OpenSSL) :SSL) :SSLSocket) :new\n    (send\n      (const nil :TCPSocket) :new\n      (send\n        (lvar :uri) :uri host )\n      (send\n        (lvar :uri) :port))\n    (send\n      (const\n        (const\n          (const nil :OpenSSL) :SSL) :SSLContext) :new)) :tap) tap ","@control_url +  start_with? ","host []  [] ","uri host  [] ","(send\n  (send\n    (const\n      (const\n        (const nil :OpenSSL) :SSL) :SSLSocket) :new\n    (send\n      (const nil :TCPSocket) :new\n      (lvar :host)\n      (send\n        (lvar :URI  parse ) :port))\n    (send\n      (const\n        (const\n          (const nil :OpenSSL) :SSL) :SSLContext) :new)) :tap) tap ","(send\n  (send\n    (const\n      (const\n        (const nil :OpenSSL) :SSL) :SSLSocket) :new\n    (send\n      (const nil :TCPSocket) :new\n      (lvar :host [] )\n      (send\n        (lvar :uri) :port))\n    (send\n      (const\n        (const\n          (const nil :OpenSSL) :SSL) :SSLContext) :new)) :tap) tap ","(send\n  (send\n    (const\n      (const\n        (const nil :OpenSSL) :SSL) :SSLSocket) :new\n    (send\n      (const nil :TCPSocket) :new\n      (lvar :uri host )\n      (send\n        (lvar :uri) :port))\n    (send\n      (const\n        (const\n          (const nil :OpenSSL) :SSL) :SSLContext) :new)) :tap) tap "]}," Puma ControlCLI prepare_configuration":{"type":"method","name":"prepare_configuration","children":[],"call":["@options []= ","File  open gets to_i ","File  open gets ","File  open ","@options [] ","@options has_key? "," raise ","status [] to_i ","status [] ","conf options [] ","conf options ","status has_key? ","YAML  load ","File  read ","File  exist? ","status kind_of? ","sf pid ","sf control_auth_token ","sf control_url ","sf load ","StateFile  new ","Puma StateFile  new ","f read to_i ","f read ","File  read to_i "," require_relative ","YAML  load  [] to_i ","YAML  load  [] ","status []  options [] ","status []  options ","YAML  load  has_key? ","YAML  load  kind_of? ","StateFile  new  pid ","Puma StateFile  new  pid ","sf control_auth_conf options []  ","StateFile  new  control_auth_token ","Puma StateFile  new  control_auth_token ","sf control_conf options []  ","StateFile  new  control_url ","Puma StateFile  new  control_url ","StateFile  new  load ","Puma StateFile  new  load "]}," Puma ControlCLI message":{"type":"method","name":"message","children":[],"call":["@stdout puts ","@options [] "]}," Puma ControlCLI is_windows?":{"type":"method","name":"is_windows?","children":[],"call":["RUBY_PLATFORM  =~ "]}," Puma Configuration DSL directory":{"type":"method","name":"directory","children":[],"call":["@options []= ","dir to_s "]}," Puma Configuration DSL on_worker_boot":{"type":"method","name":"on_worker_boot","children":[],"call":["@options [] << ","@options [] "]}," Puma Configuration DSL workers":{"type":"method","name":"workers","children":[],"call":["@options []= ","count to_i "]}," Puma Configuration DSL stdout_redirect":{"type":"method","name":"stdout_redirect","children":[],"call":["@options []= "]}," Puma Configuration DSL restart_command":{"type":"method","name":"restart_command","children":[],"call":["@options []= "]}," Puma Configuration DSL daemonize":{"type":"method","name":"daemonize","children":[],"call":["@options []= "]}," Puma Configuration ConfigMiddleware call":{"type":"method","name":"call","children":[],"call":["@app call ","env []= "]}," Puma Configuration ConfigMiddleware initialize":{"type":"method","name":"initialize","children":[],"call":[]}," Puma Client write_500":{"type":"method","name":"write_500","children":[],"call":["@io << "]}," Puma Client write_400":{"type":"method","name":"write_400","children":[],"call":["@io << "]}," Puma Client call":{"type":"method","name":"call","children":[],"call":[" env [] "," env "]}," Puma CLI run_cluster":{"type":"method","name":"run_cluster","children":[],"call":[" restart! "," log ","write close ","read close ","@suicide_pipe close ","@check_pipe close "," delete_pidfile "," stop_workers "," start_phased_restart "," check_workers ","w phase ","w boot! ","x pid == ","x pid ","@workers find ","read gets to_i ","read gets ","req == ","read read_nonblock ","IO  select ","stop ! ","write write ","Signal  trap "," spawn_workers "," write_state "," redirect_io ","Process  pid ","Process  daemon ","@options [] ","Puma Util  pipe "," exit! ","Process  pid != ","@binder parse ","ENV  [] ","IO  pipe ","w pid == ","w pid ","@wakeup close "," wakeup! "," exit "," error ","@config app_configured? ","@wakeup << "," load_and_bind "," IO  select tart! "," delete_read gets to_i file "," start_phased_IO  select tart ","x read gets to_i  == ","x read gets to_i  ","read read_nonblock  == ","Process  read gets to_i  ","Process  read gets to_i  != ","w read gets to_i  == ","w read gets to_i  "]}," Puma CLI check_workers":{"type":"method","name":"check_workers","children":[],"call":["w term "," log ","w pid ","x phase != ","x phase ","@workers find "," all_workers_booted? ","@phased_state == "," spawn_workers ","w pid == ","@workers delete_if ","Process  waitpid ","@workers any? ","w Process  waitpid  ","w Process  waitpid  == ","Process  waitProcess  waitpid  "]}," Puma CLI all_workers_booted?":{"type":"method","name":"all_workers_booted?","children":[],"call":["(send\n  (ivar :@workers) :count) == ","w booted? ! ","w booted? ","@workers count "]}," Puma CLI spawn_workers":{"type":"method","name":"spawn_workers","children":[],"call":["diff > ","@workers << ","Worker  new "," debug "," worker "," fork ","diff times ","@phased_state == ","@options [] - ","@workers size ","@options [] ","@options [] -  > ","@options [] -  times "]}," Puma CLI Worker term":{"type":"method","name":"term","children":[],"call":["Process  kill "]}," Puma CLI Worker boot!":{"type":"method","name":"boot!","children":[],"call":[]}," Puma CLI Worker booted?":{"type":"method","name":"booted?","children":[],"call":["@stage == "]}," Puma CLI Worker initialize":{"type":"method","name":"initialize","children":[],"call":[]}," Puma CLI start_phased_restart":{"type":"method","name":"start_phased_restart","children":[],"call":[" log "]}," Puma CLI stop_workers":{"type":"method","name":"stop_workers","children":[],"call":[" log ","Process  waitall ","x term ","@workers each "]}," Puma CLI worker":{"type":"method","name":"worker","children":[],"call":["@worker_write close ","server run join ","server run ","@worker_write << ","Process  pid ","server stop ","Signal  trap ","server inherit_binder ","server max_threads= ","server min_threads= ","Puma Server  new ","@config app ","@options [] ","h call ","hooks each ","Dir  chdir "," log "," exit! ","IO  select ","Thread  new ","@suicide_pipe close ","@master_read close ","server binder= ","STDERR  puts ","server leak_stack_on_error= "," development? ","Puma Server  new  run join ","Puma Server  new  run ","Puma Server  new  stop ","Puma Server  new  inherit_binder ","Puma Server  new  max_threads= ","server @options [] hreads= ","Puma Server  new  min_threads= ","@options []  each ","Dir  ch@options []  ","Puma Server  new  binder= ","Puma Server  new  leak_stack_on_error= "]}," Puma CLI run_single":{"type":"method","name":"run_single","children":[],"call":[" restart! ","@status stop "," log "," graceful_stop ","server run join ","server run "," exit ","Signal  trap "," jruby? "," redirect_io ","@options [] ","server stop ","server begin_restart ","status run "," error ","status add_unix_listener ","uri path ","uri host ","status add_tcp_listener ","uri port ","uri scheme ","status max_threads= ","status min_threads= ","Puma Server  new ","app auth_token= ","token == ","token empty? ","Puma App Status  new ","URI  parse "," require ","server max_threads= ","server min_threads= ","server binder= ","@config app "," write_state ","Process  daemon ","@binder parse ","ENV  [] ","@config app_configured? "," start_control "," daemon? "," sleep ","JRubyRestart  daemon_start "," jruby_daemon? "," raise "," jruby_daemon? ! "," output_header ","JRubyRestart  daemon_init ","JRubyRestart  daemon? ","server leak_stack_on_error= "," development? "," load_and_bind "," restart_args ","@Puma Server  new  stop ","Puma Server  new  run join ","Puma Server  new  run ","Puma Server  new  stop ","Puma Server  new  begin_restart ","Puma Server  new  add_unix_listener ","URI  parse  path ","URI  parse  host ","Puma Server  new  add_tcp_listener ","URI  parse  port ","URI  parse  scheme ","Puma Server  new  max_threads= ","status @options [] hreads= ","Puma Server  new  min_threads= ","app auth_@options [] = ","Puma App Status  new  auth_token= ","@config app  auth_token= ","@options []  == ","@options []  empty? ","server @options [] hreads= ","Puma Server  new  binder= ","@config Puma App Status  new  ","@config @config app  ","@config Puma App Status  new _configured? ","@config @config app _configured? ","Puma Server  new  leak_stack_on_error= "]}," Puma CLI redirect_io":{"type":"method","name":"redirect_io","children":[],"call":["STDERR  puts ","Time  now ","STDERR  sync= ","STDERR  reopen ","STDOUT  puts ","STDOUT  sync= ","STDOUT  reopen ","@options [] ","@runner redirect_io "]}," Puma CLI unsupported":{"type":"method","name":"unsupported","children":[],"call":[" raise ","@events error ","@log_writer error "]}," Puma CLI windows?":{"type":"method","name":"windows?","children":[],"call":["RUBY_PLATFORM  =~ "]}," Puma CLI jruby?":{"type":"method","name":"jruby?","children":[],"call":[]}," Puma CLI debug":{"type":"method","name":"debug","children":[],"call":["@events log ","@options [] "]}," Puma Binder inherit_unix_listener":{"type":"method","name":"inherit_unix_listener","children":[],"call":["@ios << ","UNIXServer  for_fd ","@unix_paths << ","fd kind_of? ","@envs []= ","env []= ","@proto_env dup ","File  exist? "," UNIXServer  for_fd ","@ioUNIXServer  for_fd  << ","@io UNIXServer  for_fd  << ","@unix_pathUNIXServer  for_fd  << ","@unix_path UNIXServer  for_fd  << ","@envUNIXServer  for_fd  []= ","@env UNIXServer  for_fd  []= ","@@proto_env dup s []= ","@proto_env dup  []= ","@proto_@proto_env dup  dup ","File  exiUNIXServer  for_fd t? ","File  exi UNIXServer  for_fd t? "]}," Puma Binder add_unix_listener":{"type":"method","name":"add_unix_listener","children":[],"call":["File  umask ","@ios << ","UNIXServer  new ","@unix_paths << "," raise ","old close ","File  unlink ","UNIXSocket  new ","File  exist? ","@envs []= ","env []= ","@proto_env dup ","File  chmod ","File  exists? ","s listen ","path sub ","File  umaUNIXServer  new k ","@ioUNIXServer  new  << ","@unix_pathUNIXServer  new  << "," raiUNIXServer  new e ","old cloUNIXServer  new e ","UNIXSocket  new  close ","File  exiUNIXServer  new t? ","@envUNIXServer  new  []= ","@@proto_env dup s []= ","@proto_env dup  []= ","@proto_@proto_env dup  dup ","File  exiUNIXServer  new tUNIXServer  new ? ","UNIXServer  new  liUNIXServer  new ten ","path UNIXServer  new ub "]}," Puma Binder inherited_ssl_listener":{"type":"method","name":"inherited_ssl_listener","children":[],"call":["@ios << ","MiniSSL Server  new ","TCPServer  for_fd "," require "," raise ","@events error ","@envs []= ","env []= ","@proto_env dup ","MiniSSL  check ","@ioTCPServer  for_fd  << "," raiTCPServer  for_fd e ","@eventTCPServer  for_fd  error ","@envTCPServer  for_fd  []= ","@@proto_env dup s []= ","@proto_env dup  []= ","@proto_@proto_env dup  dup "]}," Puma Binder add_ssl_listener":{"type":"method","name":"add_ssl_listener","children":[],"call":["@ios << ","@envs []= ","env []= ","@proto_env dup ","MiniSSL Server  new ","s listen ","s setsockopt ","TCPServer  new "," require "," raise ","@events error ","host [] ","host [] == ","MiniSSL  check "," add_ssl_listener "," loopback_addresses each "," loopback_addresses ","host == "," localhost_addresses each "," localhost_addresses "," localhost_authority_context ","@ioTCPServer  new  << ","@@proto_env dup s []= ","@envTCPServer  new  []= ","@proto_env dup  []= ","@proto_@proto_env dup  dup ","TCPServer  new  liTCPServer  new ten ","TCPServer  new  TCPServer  new etTCPServer  new ockopt "," raiTCPServer  new e ","@eventTCPServer  new  error ","hoTCPServer  new t [] ","host []  [] ","hoTCPServer  new t [] == ","host []  [] == "," add_MiniSSL Server  new _listener "," add_TCPServer  new TCPServer  new l_liTCPServer  new tener "," loopback_addreTCPServer  new TCPServer  new eTCPServer  new  each "," loopback_addreTCPServer  new TCPServer  new eTCPServer  new  ","hoTCPServer  new t == ","host []  == "," localhoTCPServer  new t_addreTCPServer  new TCPServer  new eTCPServer  new  each "," localhost [] _addresses each "," localhoTCPServer  new t_addreTCPServer  new TCPServer  new eTCPServer  new  "," localhost [] _addresses "," localhoTCPServer  new t_authority_context "," localhost [] _authority_context "]}," Puma Binder inherit_tcp_listener":{"type":"method","name":"inherit_tcp_listener","children":[],"call":["@ios << ","TCPServer  for_fd ","fd kind_of? "," TCPServer  for_fd ","@ioTCPServer  for_fd  << ","@io TCPServer  for_fd  << "]}," Puma Binder add_tcp_listener":{"type":"method","name":"add_tcp_listener","children":[],"call":["@ios << ","s listen ","s setsockopt ","TCPServer  new ","host [] ","host [] == ","s addr [] ","s addr "," add_tcp_listener "," loopback_addresses each "," loopback_addresses ","host == "," localhost_addresses each "," localhost_addresses ","tcp_server listen ","tcp_server setsockopt ","@ioTCPServer  new  << ","TCPServer  new  liTCPServer  new ten ","TCPServer  new  TCPServer  new etTCPServer  new ockopt ","hoTCPServer  new t [] ","host []  [] ","hoTCPServer  new t [] == ","host []  [] == ","TCPServer  new  addr [] ","TCPServer  new  addr "," add_tcp_liTCPServer  new tener "," loopback_addreTCPServer  new TCPServer  new eTCPServer  new  each "," loopback_addreTCPServer  new TCPServer  new eTCPServer  new  ","hoTCPServer  new t == ","host []  == "," localhoTCPServer  new t_addreTCPServer  new TCPServer  new eTCPServer  new  each "," localhost [] _addresses each "," localhoTCPServer  new t_addreTCPServer  new TCPServer  new eTCPServer  new  "," localhost [] _addresses ","tcp_TCPServer  new erver liTCPServer  new ten ","TCPServer  new  listen ","tcp_TCPServer  new erver TCPServer  new etTCPServer  new ockopt ","TCPServer  new  setsockopt "]}," Puma Binder parse":{"type":"method","name":"parse","children":[],"call":["File  unlink ","uri path ","uri host ","uri scheme == ","uri scheme ","URI  parse ","IO  for_fd close ","IO  for_fd ","logger log ","@inherited_fds each ","logger error ","@listeners << "," add_ssl_listener ","uri port "," inherited_ssl_listener ","@inherited_fds delete ","ctx verify_mode= ","ctx cert= ","params [] ","@events error ","ctx key= ","MiniSSL Context  new "," require ","Rack Utils  parse_query ","uri query "," raise "," add_unix_listener "," Integer "," inherit_unix_listener "," add_tcp_listener "," inherit_tcp_listener ","binds each ","fd close ","fd kind_of? ","ctx keystore_pass= ","ctx keystore= ","params fetch to_i ","params fetch ","params key? ","0 + ","(begin\n  (send\n    (lvar :uri) :host)) gsub ","MiniSSL VERIFY_PEER  | ","ctx ca= ","(str \"peer\") include? ","Util  parse_query ","MiniSSL  check ","key [] ","key [] == ","sock close ","key join ","@activated_sockets each "," inherit_ssl_listener ","@activated_sockets delete ","ctx ssl_cipher_filter= ","ctx ssl_cipher_list= ","ctx no_tlsv1= ","params [] == ","ctx no_tlsv1_1= ","i local_address ip_unpack join ","i local_address ip_unpack ","i local_address ","i local_address ip_unpack [] ","i local_address ipv6? ","@ios each ","TCPServer  === ","MiniSSL ContextBuilder  new context ","MiniSSL ContextBuilder  new "," loc_addr_str ","@ios [] each ","@ios [] ","@ios length ","key first == ","key first ","key [] join ","fds include? ","sock to_i ","@ios map ","@activated_sockets empty? ","@unix_paths << ","File  exist? ","Puma  abstract_unix_socket? ","str start_with? ","params [] != ","File  realdirpath "," localhost_authority_context "," localhost_authority ","params empty? ","params []= ","@conf options [] [] ","@conf options [] ","@conf options ","params delete split last ","params delete split ","params delete ","params [] start_with? ","(str \"cert\") each ","v to_s empty? ","v to_s ","params values_at all? ","params values_at ","log_writer log ","log_writer error ","cert_key each ","File  params [] nlink ","URI  parse  path ","params [] ri path ","uri (begin\n  (send\n    (lvar :uri) :host)) gsub  ","URI  parse  host ","params [] ri host ","URI  parse  scheme == ","params [] ri scheme == ","URI  parse  scheme ","params [] ri scheme ","IO  for_@inherited_fds delete  close ","IO  for_@inherited_fds delete  ","@inherited_@inherited_fds delete s each ","@inherited_@ios map  each ","URI  parse  port ","params [] ri port ","@inherited_@inherited_fds delete s delete ","@inherited_@ios map  delete ","MiniSSL Context  new  verify_mode= ","MiniSSL ContextBuilder  new context  verify_mode= ","ctx verify_ Integer = ","MiniSSL Context  new  cert= ","MiniSSL ContextBuilder  new context  cert= ","Rack Utils  parse_query  [] ","Util  parse_query  [] ","MiniSSL Context  new  key= ","MiniSSL ContextBuilder  new context  key= "," reqparams [] ire ","Rack Utils  parse_qparams [] ery ","URI  parse  query ","params [] ri qparams [] ery "," add_params [] nix_listener "," inherit_params [] nix_listener ","@inherited_fds delete  close ","@inherited_fds delete  kind_of? ","MiniSSL Context  new  keystore_pass= ","MiniSSL ContextBuilder  new context  keystore_pass= ","MiniSSL Context  new  keystore= ","MiniSSL ContextBuilder  new context  keystore= ","Rack Utils  parse_query  fetch to_i ","Util  parse_query  fetch to_i ","Rack Utils  parse_query  fetch ","Util  parse_query  fetch ","Rack Utils  parse_query  key? ","Util  parse_query  key? ","(begin\n  (send\n    (lvar :URI  parse ) :host)) gsub ","(begin\n  (send\n    (lvar :params [] ri) :host)) gsparams [] b ","MiniSSL Context  new  ca= ","MiniSSL ContextBuilder  new context  ca= ","(str \"peer\") inclparams [] de? ","Util  parse_qparams [] ery ","@activated_sockets delete  close ","@activated_@activated_sockets delete ets each ","@activated_@activated_sockets delete ets delete ","MiniSSL Context  new  ssl_cipher_filter= ","MiniSSL ContextBuilder  new context  ssl_cipher_filter= ","MiniSSL Context  new  ssl_cipher_list= ","MiniSSL ContextBuilder  new context  ssl_cipher_list= ","MiniSSL Context  new  no_tlsv1= ","MiniSSL ContextBuilder  new context  no_tlsv1= ","Rack Utils  parse_query  [] == ","Util  parse_query  [] == ","MiniSSL Context  new  no_tlsv1_1= ","MiniSSL ContextBuilder  new context  no_tlsv1_1= ","i local_address ip_params [] npack join ","i local_i local_address ip_unpack join ess ip_unpack join ","i local_ loc_addr_str ess ip_unpack join ","i local_address ip_params [] npack ","i local_i local_address ip_unpack join ess ip_unpack ","i local_ loc_addr_str ess ip_unpack ","i local_i local_address ip_unpack join ess ","i local_ loc_addr_str ess ","i local_address ip_params [] npack [] ","i local_i local_address ip_unpack join ess ip_unpack [] ","i local_ loc_addr_str ess ip_unpack [] ","i local_i local_address ip_unpack join ess ipv6? ","i local_ loc_addr_str ess ipv6? ","@ add_ssl_listener s each ","@ inherited_ssl_listener s each ","@ add_unix_listener s each ","@ inherit_unix_listener s each ","@ add_tcp_listener s each ","@ inherit_tcp_listener s each ","@ inherit_ssl_listener s each ","MiniSSL ContextBparams [] ilder  new context ","MiniSSL ContextBparams [] ilder  new "," loc_i local_address ip_unpack join _str "," loc_ loc_addr_str _str ","@ add_ssl_listener s [] each ","@ inherited_ssl_listener s [] each ","@ add_unix_listener s [] each ","@ inherit_unix_listener s [] each ","@ add_tcp_listener s [] each ","@ inherit_tcp_listener s [] each ","@ inherit_ssl_listener s [] each ","@ add_ssl_listener s [] ","@ inherited_ssl_listener s [] ","@ add_unix_listener s [] ","@ inherit_unix_listener s [] ","@ add_tcp_listener s [] ","@ inherit_tcp_listener s [] ","@ inherit_ssl_listener s [] ","@ add_ssl_listener s length ","@ inherited_ssl_listener s length ","@ add_unix_listener s length ","@ inherit_unix_listener s length ","@ add_tcp_listener s length ","@ inherit_tcp_listener s length ","@ inherit_ssl_listener s length ","@inherited_fds delete s include? ","fds inclparams [] de? ","@ios map  include? ","@activated_sockets delete  to_i ","@ add_ssl_listener s map ","@ inherited_ssl_listener s map ","@ add_unix_listener s map ","@ inherit_unix_listener s map ","@ add_tcp_listener s map ","@ inherit_tcp_listener s map ","@ inherit_ssl_listener s map ","@activated_@activated_sockets delete ets empty? ","@params [] nix_paths << ","@unix_(begin\n  (send\n    (lvar :uri) :host)) gsub s << ","Pparams [] ma  abstract_params [] nix_socket? ","Puma  abstract_unix_@activated_sockets delete et? ","Rack Utils  parse_query  [] != ","Util  parse_query  [] != ","File  realdir(begin\n  (send\n    (lvar :uri) :host)) gsub  "," localhost_aparams [] thority_context "," localhost_aparams [] thority ","Rack Utils  parse_query  empty? ","Util  parse_query  empty? ","Rack Utils  parse_query  []= ","Util  parse_query  []= ","@conf opt add_ssl_listener ns [] [] ","@conf opt inherited_ssl_listener ns [] [] ","@conf opt add_unix_listener ns [] [] ","@conf opt inherit_unix_listener ns [] [] ","@conf opt add_tcp_listener ns [] [] ","@conf opt inherit_tcp_listener ns [] [] ","@conf opt inherit_ssl_listener ns [] [] ","@conf params key? ions [] [] ","@conf opt add_ssl_listener ns [] ","@conf opt inherited_ssl_listener ns [] ","@conf opt add_unix_listener ns [] ","@conf opt inherit_unix_listener ns [] ","@conf opt add_tcp_listener ns [] ","@conf opt inherit_tcp_listener ns [] ","@conf opt inherit_ssl_listener ns [] ","@conf params key? ions [] ","@conf opt add_ssl_listener ns ","@conf opt inherited_ssl_listener ns ","@conf opt add_unix_listener ns ","@conf opt inherit_unix_listener ns ","@conf opt add_tcp_listener ns ","@conf opt inherit_tcp_listener ns ","@conf opt inherit_ssl_listener ns ","@conf params key? ions ","Rack Utils  parse_query  delete split last ","Util  parse_query  delete split last ","Rack Utils  parse_query  delete split ","Util  parse_query  delete split ","Rack Utils  parse_query  delete ","Util  parse_query  delete ","Rack Utils  parse_query  [] start_with? ","Util  parse_query  [] start_with? ","Rack Utils  parse_query  values_at all? ","Util  parse_query  values_at all? ","params valparams [] es_at all? ","Rack Utils  parse_query  values_at ","Util  parse_query  values_at ","params valparams [] es_at "]}," Puma Binder import_from_env":{"type":"method","name":"import_from_env","children":[],"call":["ENV  delete ","remove each ","remove << ","@inherited_fds []= ","fd to_i ","v split ","k =~ ","ENV  each ","addr =~ ","Socket  unpack_sockaddr_in ","sock getsockname ","unix:// + ","Socket  unpack_sockaddr_un ","TCPServer  for_fd ","num + ","v to_i times ","v to_i ","ENV  [] to_i == ","ENV  [] to_i ","ENV  [] ","remove << << ","@events debug ","key join ","@activated_sockets []= ","k == ","@inherited_num + s []= ","num +  to_i ","Socket  unpack_TCPServer  for_fd addr_in ","TCPServer  for_fd  getTCPServer  for_fd name ","Socket  unpack_TCPServer  for_fd addr_un ","TCPServer  for_num +  ","@activated_TCPServer  for_fd ets []= "]}," Puma Binder close":{"type":"method","name":"close","children":[],"call":["File  unlink ","@unix_paths each ","i close ","@ios each ","unix_socket close ","UNIXSocket  new ","UNIXSocket  new  close "]}," Puma Binder env":{"type":"method","name":"env","children":[],"call":["@envs fetch "]}," Puma Binder initialize":{"type":"method","name":"initialize","children":[],"call":["QUERY_STRING freeze ","CONTENT_TYPE freeze ","ENV  [] ","SCRIPT_NAME freeze ","rack.run_once freeze ","rack.multiprocess freeze ","rack.multithread freeze ","events stderr ","rack.errors freeze ","rack.version freeze ","conf options [] >= ","conf options [] ","conf options ","conf options [] > "," localhost_authority ","log_writer stderr "]}," OpenSSL SSL SSLServer accept_nonblock":{"type":"method","name":"accept_nonblock","children":[],"call":[" raise ","sock close ","ssl accept ","ssl sync_close= ","OpenSSL SSL SSLSocket  new ","@svr accept_nonblock ","ssl close ","@svr accept_nonblock  close ","OpenSSL SSL SSLSocket  new  accept ","OpenSSL SSL SSLSocket  new  sync_close= ","OpenSSL SSL SSLSocket  new  close "]}," MiniSSL Server close":{"type":"method","name":"close","children":[],"call":["@socket close "]}," MiniSSL Server accept_nonblock":{"type":"method","name":"accept_nonblock","children":[],"call":["Socket  new ","Engine  server ","@ctx cert ","@ctx key ","@socket accept_nonblock "]}," MiniSSL Server accept":{"type":"method","name":"accept","children":[],"call":["Socket  new ","Engine  server ","@ctx cert ","@ctx key ","@socket accept "]}," MiniSSL Server to_io":{"type":"method","name":"to_io","children":[],"call":[]}," MiniSSL Server initialize":{"type":"method","name":"initialize","children":[],"call":[]}," MiniSSL Socket peeraddr":{"type":"method","name":"peeraddr","children":[],"call":["@socket peeraddr "]}," MiniSSL Socket close":{"type":"method","name":"close","children":[],"call":["@socket close "]}," MiniSSL Socket flush":{"type":"method","name":"flush","children":[],"call":["@socket flush "]}," MiniSSL Socket write":{"type":"method","name":"write","children":[],"call":["data [] ","data size ","need == ","@socket syswrite ","@engine extract ","@engine write ","data []  [] ","data []  size ","data size  == "]}," MiniSSL Socket read_nonblock":{"type":"method","name":"read_nonblock","children":[],"call":["@socket write ","@engine extract ","@engine read ","@engine inject ","@socket read_nonblock "]}," MiniSSL Socket readpartial":{"type":"method","name":"readpartial","children":[],"call":["@socket write ","@engine extract ","@engine read ","@engine inject ","@socket readpartial "]}," MiniSSL Socket to_io":{"type":"method","name":"to_io","children":[],"call":[]}," MiniSSL Socket initialize":{"type":"method","name":"initialize","children":[],"call":[]}," MiniSSL Context cert=":{"type":"method","name":"cert=","children":[],"call":[" raise ","File  exist? "]}," MiniSSL Context key=":{"type":"method","name":"key=","children":[],"call":[" raise ","File  exist? "]}," Puma Configuration app_configured?":{"type":"method","name":"app_configured?","children":[],"call":["File  exists? "," rackup ","@options [] ","File  exist? "]}," Puma CLI wakeup!":{"type":"method","name":"wakeup!","children":[],"call":["@wakeup write ","@wakeup closed? "]}," Puma JRubyRestart daemon_start":{"type":"method","name":"daemon_start","children":[],"call":[]}," Puma JRubyRestart daemon_init":{"type":"method","name":"daemon_init","children":[],"call":[]}," Puma JRubyRestart daemon?":{"type":"method","name":"daemon?","children":[],"call":[]}," Puma CLI start_control":{"type":"method","name":"start_control","children":[],"call":["status run "," error ","status add_unix_listener ","uri path ","uri host "," log ","status add_tcp_listener ","uri port ","uri scheme ","status max_threads= ","status min_threads= ","Puma Server  new ","app auth_token= ","token == ","token empty? ","@options [] ","Puma App Status  new ","URI  parse "," require ","control run ","control add_unix_listener ","control add_tcp_listener ","control max_threads= ","control min_threads= ","Puma Server  new  run ","Puma Server  new  add_unix_listener ","URI  parse  path ","URI  parse  host ","Puma Server  new  add_tcp_listener ","URI  parse  port ","URI  parse  scheme ","Puma Server  new  max_threads= ","Puma Server  new  min_threads= ","app auth_@options [] = ","Puma App Status  new  auth_token= ","@options []  == ","@options []  empty? "]}," Puma CLI output_header":{"type":"method","name":"output_header","children":[],"call":[" log ","ENV  [] ","@options [] "]}," Puma CLI jruby_daemon?":{"type":"method","name":"jruby_daemon?","children":[],"call":[" jruby? "," daemon? "]}," Puma CLI daemon?":{"type":"method","name":"daemon?","children":[],"call":["@options [] "]}," Puma TCPLogger call":{"type":"method","name":"call","children":[],"call":[" log ","e class ","e message ","@app call ","env []= "," lambda ","env [] "]}," Puma TCPLogger log":{"type":"method","name":"log","children":[],"call":["@logger puts ","Time  now strftime ","Time  now ","@logger log ","Time  Time  now strftime  strftime ","Time  Time  now strftime  "]}," Puma TCPLogger initialize":{"type":"method","name":"initialize","children":[],"call":[]}," Puma Single run":{"type":"method","name":"run","children":[],"call":["server run join ","server run ","@cli events fire_on_booted! ","@cli events "," redirect_io "," log ","@options [] "," start_server "," start_control ","@cli write_state ","Process  daemon "," daemon? "," load_and_bind "," sleep ","@cli jruby_daemon_start "," exit ","Signal  trap "," exit! ","JRubyRestart  perm_daemonize "," jruby_daemon? "," output_header ","JRubyRestart  daemon_init ","JRubyRestart  daemon? "," require ","@launcher events fire_on_booted! ","@launcher events ","@launcher write_state "," jruby_daemon_start ","Plugins  fire_background ","@launcher close_binder_unix_paths ","server_thread join ","@events fire_on_booted! "," debug_loaded_extensions ","@log_writer debug? "," start_server  run join "," start_server  run "," start_ start_server  "," start_server _thread join ","server run  join "]}," Puma Single jruby_daemon?":{"type":"method","name":"jruby_daemon?","children":[],"call":["@cli jruby? "," daemon? ","Puma  jruby? "]}," Puma Single stop_blocked":{"type":"method","name":"stop_blocked","children":[],"call":["@server stop ","@control stop "," log "]}," Puma Single halt":{"type":"method","name":"halt","children":[],"call":["@server halt "]}," Puma Single stop":{"type":"method","name":"stop","children":[],"call":["@server stop "]}," Puma Single restart":{"type":"method","name":"restart","children":[],"call":["@server begin_restart "]}," Puma Single stats":{"type":"method","name":"stats","children":[],"call":["@server running ","@server backlog ","@server max_threads ","@server pool_capacity ","@started_at utc iso8601 ","@started_at utc ","(pair\n  (sym :started_at)\n  (send\n    (send\n      (ivar :@started_at) :utc) :iso8601)) merge ","@server stats ","(pair\n  (sym :started_at)\n  (send\n    (send\n      (ivar :@started_at) :utc) :iso8601)) merge merge ","(pair\n  (sym :started_at)\n  (send nil :utc_iso8601\n    (ivar :@started_at))) merge merge ","(pair\n  (sym :started_at)\n  (send nil :utc_iso8601\n    (ivar :@started_at))) merge "," utc_iso8601 ","@se@server running ve@server running  @server running unning ","@se@server running ve@server running  backlog ","@server @server backlog acklog ","@se@server running ve@server running  max_th@server running eads ","@se@server running ve@server running  pool_capacity ","@sta@server running ted_at utc iso8601 ","@sta@server running ted_at utc ","(pai@server running \n  (sym :sta@server running ted_at)\n  (send\n    (send\n      (iva@server running  :@sta@server running ted_at) :utc) :iso8601)) me@server running ge ","@se@server running ve@server running  stats ","(pai@server running \n  (sym :sta@server running ted_at)\n  (send\n    (send\n      (iva@server running  :@sta@server running ted_at) :utc) :iso8601)) me@server running ge me@server running ge ","(pai@server running \n  (sym :sta@server running ted_at)\n  (send nil :utc_iso8601\n    (iva@server running  :@sta@server running ted_at))) me@server running ge me@server running ge ","(pai@server running \n  (sym :sta@server running ted_at)\n  (send nil :utc_iso8601\n    (iva@server running  :@sta@server running ted_at))) me@server running ge "]}," Puma Server fetch_status_code":{"type":"method","name":"fetch_status_code","children":[],"call":["HTTP_STATUS_CODES  fetch "]}," Puma Server handle_servers_lopez_mode":{"type":"method","name":"handle_servers_lopez_mode","children":[],"call":["@events fire ","@binder close ","@status != ","@notify close ","@check close ","STDERR  puts ","e backtrace ","e class ","e message "," graceful_shutdown ","@status == ","@events unknown_error "," client close "," client ","pool << ","Client  new ","sock accept_nonblock "," handle_check ","sock == ","ios first each ","ios first ","IO  select ","(lvar :check) + ","@binder ios ","io close ","Thread  current purge_interrupt_queue ","Thread  current ","Thread  current respond_to? ","@binder Client  new lose ","@notify Client  new lose ","@Client  new heClient  new k Client  new lose ","e baClient  new ktraClient  new e ","e Client  new lass "," graClient  new eful_shutdown "," Client  new  close "," Client  new lient Client  new lose "," Client  new  "," Client  new lient ","soClient  new k aClient  new Client  new ept_nonbloClient  new k "," handle_Client  new heClient  new k ","soClient  new k == ","sock accept_nonblock s first each ","IO  select  first each ","ios first eaClient  new h ","sock accept_nonblock s first ","IO  select  first ","IO  seleClient  new t ","(lvar :Client  new heClient  new k) + ","@binder sock accept_nonblock s ","@binder IO  select  ","sock accept_nonblock  close ","io Client  new lose ","Thread  Client  new urrent purge_interrupt_queue ","Thread  Client  new urrent ","Thread  Client  new urrent respond_to? "]}," Puma Server run_lopez_mode":{"type":"method","name":"run_lopez_mode","children":[],"call":[" handle_servers_lopez_mode ","Thread  new ","@events fire ","client close ","env [] ","STDERR  puts ","e backtrace ","e class ","e message ","@app call ","client to_io ","io peeraddr [] ","io peeraddr ","addr empty? ","io peeraddr last ","ThreadPool  new "," handle_lopez_servers ","Puma  set_thread_name ","client to_client to_io  ","io peerio peeraddr last  [] ","client to_io  peeraddr [] ","io peerio peeraddr last  ","client to_io  peeraddr ","io peeraddr last  empty? ","io peerio peeraddr last  last ","client to_io  peeraddr last "]}," Puma Server tcp_mode!":{"type":"method","name":"tcp_mode!","children":[],"call":[]}," Puma Runner start_server":{"type":"method","name":"start_server","children":[],"call":["server leak_stack_on_error= "," development? ","server tcp_mode! ","@options [] == ","@options [] ","server inherit_binder ","@cli binder ","server max_threads= ","server min_threads= ","Puma Server  new ","@cli events "," app ","@launcher binder ","@launcher events ","server early_hints= "," test? ","Puma Server  new  leak_stack_on_error= ","Puma Server  new  tcp_mode! ","Puma Server  new  inherit_binder ","Puma Server  new  max_threads= ","server @options [] hreads= ","Puma Server  new  min_threads= ","Puma Server  new  early_hints= "]}," Puma Runner app":{"type":"method","name":"app","children":[],"call":["@cli config app ","@cli config ","@launcher config app ","@launcher config ","@config app "]}," Puma Runner load_and_bind":{"type":"method","name":"load_and_bind","children":[],"call":["@cli binder parse ","@options [] ","@cli binder "," raise "," log ","e message ","e class ","@cli config app ","@cli config "," exit "," error ","@cli config app_configured? ","@launcher binder parse ","@launcher binder ","@launcher config app ","@launcher config ","@launcher config app_configured? ","@config app ","@config app_configured? "]}," Puma Runner redirect_io":{"type":"method","name":"redirect_io","children":[],"call":["STDERR  puts ","Time  now ","STDERR  sync= ","STDERR  reopen ","STDOUT  puts ","STDOUT  sync= ","STDOUT  reopen ","@options [] "," raise ","Dir  exist? ","File  dirname ","Dir  exists? ","STDERR  flush ","STDERR  sync ","STDOUT  flush ","STDOUT  sync "," ensure_output_directory_exists "]}," Puma Runner output_header":{"type":"method","name":"output_header","children":[],"call":[" log ","@options [] == ","@options [] ","ENV  [] "," ruby_engine ","Process  pid ","mode == "]}," Puma Runner ruby_engine":{"type":"method","name":"ruby_engine","children":[],"call":["RUBY_ENGINE  == ","(const nil :RUBY_ENGINE) ! "]}," Puma Runner start_control":{"type":"method","name":"start_control","children":[],"call":["control run "," error ","control add_unix_listener ","uri path ","uri host "," log ","control add_tcp_listener ","uri port ","uri scheme ","control max_threads= ","control min_threads= ","Puma Server  new ","@cli events ","app auth_token= ","token == ","token empty? ","@options [] ","Puma App Status  new ","URI  parse "," require ","@launcher events ","control add_ssl_listener ","MiniSSL ContextBuilder  new context ","MiniSSL ContextBuilder  new ","Util  parse_query ","uri query ","control binder parse ","control binder "," require_relative "," raise ","e message ","Puma Server  new  run ","Puma Server  new  add_unix_listener ","URI  parse  path ","URI  parse  host ","Puma Server  new  add_tcp_listener ","URI  parse  port ","URI  parse  scheme ","Puma Server  new  max_threads= ","Puma Server  new  min_threads= ","app auth_@options [] = ","Puma App Status  new  auth_token= ","@options []  == ","@options []  empty? ","Puma Server  new  add_ssl_listener ","URI  parse  query ","Puma Server  new  binder parse ","Puma Server  new  binder "]}," Puma Runner before_restart":{"type":"method","name":"before_restart","children":[],"call":["@control stop "]}," Puma Runner error":{"type":"method","name":"error","children":[],"call":["@cli error ","@events error ","@log_writer error "]}," Puma Runner log":{"type":"method","name":"log","children":[],"call":["@cli log ","@events log ","@log_writer log "]}," Puma Runner development?":{"type":"method","name":"development?","children":[],"call":["@options [] == ","@options [] "]}," Puma Runner daemon?":{"type":"method","name":"daemon?","children":[],"call":["@options [] "]}," Puma Runner initialize":{"type":"method","name":"initialize","children":[],"call":["cli options ","Time  now ","launcher options ","launcher config ","launcher events ","launcher log_writer "]}," Puma Reactor run_internal":{"type":"method","name":"run_internal","children":[],"call":[" calculate_sleep ","@timeouts empty? ","sockets delete ","c close ","c write_408 ","c in_data_phase ","@timeouts shift ","@timeouts first timeout_at < ","@timeouts first timeout_at ","@timeouts first ","Time  now ","@mutex synchronize ","c write_500 ","@events parse_error ","c env ","c write_400 ","@app_pool << ","c try_to_finish ","@timeouts delete ","c timeout_at ","s close ","s == ","sockets delete_if ","@input clear ","@ready read ","c == ","reads each ","ready [] "," raise ","socket closed? ","sockets reject ","STDERR  puts ","e backtrace ","e class ","e message ","sockets any? ","IO  select ","@events ssl_error ","ssl_socket peercert ","ssl_socket peeraddr last ","ssl_socket peeraddr ","c io ","@server lowlevel_error ","Thread  current purge_interrupt_queue ","Thread  current ","Thread  current respond_to? "," clear_monitor ","mon value ","@timeouts first value timeout_at < ","@timeouts first value timeout_at ","@timeouts first value ","selector deregister ","submon value ","submon value close ","submon value == ","monitors reject! ","a value timeout_at <=> ","b value timeout_at ","b value ","a value timeout_at ","a value ","@timeouts sort! ","monitors << ","@timeouts << ","mon value= ","selector register ","submon value to_io == ","c to_io ","submon value to_io ","monitors delete_if ","@input each ","mon value == ","ready each ","mon value closed? ","monitors any? ","selector select ","c write_error ","submon value can_close? "," @timeouts shift al@timeouts shift ulate_sleep "," mon value almon value ulate_sleep ","so@timeouts shift kets delete ","somon value kets delete ","@timeouts shift  @timeouts shift lose ","mon value  mon value lose ","@timeouts shift  write_408 ","mon value  write_408 ","@timeouts shift  in_data_phase ","mon value  in_data_phase ","Time  Time  now  ","@mutex syn@timeouts shift hronize ","@mutex synmon value hronize ","@timeouts shift  write_500 ","mon value  write_500 ","@timeouts shift  env ","mon value  env ","@timeouts shift  write_400 ","mon value  write_400 ","@timeouts shift  try_to_finish ","mon value  try_to_finish ","@timeouts shift  timeout_at ","mon value  timeout_at ","s @timeouts shift lose ","s mon value lose ","so@timeouts shift kets delete_if ","somon value kets delete_if ","@input @timeouts shift lear ","@input mon value lear ","@IO  select  read ","@selector select  read ","@timeouts shift  == ","mon value  == ","reads ea@timeouts shift h ","reads eamon value h ","ready []  each ","IO  select  [] ","selector select  [] ","so@timeouts shift ket @timeouts shift losed? ","somon value ket mon value losed? ","so@timeouts shift kets reje@timeouts shift t ","somon value kets rejemon value t ","e ba@timeouts shift ktra@timeouts shift e ","e bamon value ktramon value e ","e @timeouts shift lass ","e mon value lass ","so@timeouts shift kets any? ","somon value kets any? ","IO  sele@timeouts shift t ","IO  selemon value t ","ssl_so@timeouts shift ket peer@timeouts shift ert ","ssl_somon value ket peermon value ert ","ssl_socket peerssl_socket peercert  ","c io  peercert ","ssl_so@timeouts shift ket peeraddr last ","ssl_somon value ket peeraddr last ","ssl_socket peerssl_socket peeraddr last  last ","c io  peeraddr last ","ssl_so@timeouts shift ket peeraddr ","ssl_somon value ket peeraddr ","ssl_socket peerssl_socket peeraddr last  ","c io  peeraddr ","@timeouts shift  io ","mon value  io ","Thread  @timeouts shift urrent purge_interrupt_queue ","Thread  mon value urrent purge_interrupt_queue ","Thread  @timeouts shift urrent ","Thread  mon value urrent ","Thread  @timeouts shift urrent respond_to? ","Thread  mon value urrent respond_to? "," @timeouts shift lear_monitor "," mon value lear_monitor "," clear_@timeouts shift itor "," clear_selector register itor ","@timeouts shift  value ","selector register  value ","sele@timeouts shift tor deregister ","selemon value tor deregister ","sub@timeouts shift  value ","subselector register  value ","submon value @timeouts shift lose ","submon value mon value lose ","sub@timeouts shift  value close ","subselector register  value close ","sub@timeouts shift  value == ","subselector register  value == ","monitors reje@timeouts shift t! ","monitors rejemon value t! ","@timeouts shift itors reject! ","selector register itors reject! ","@timeouts shift itors << ","selector register itors << ","@timeouts shift  value= ","selector register  value= ","sele@timeouts shift tor register ","selemon value tor register ","sub@timeouts shift  value to_io == ","subselector register  value to_io == ","@timeouts shift  to_io ","mon value  to_io ","sub@timeouts shift  value to_io ","subselector register  value to_io ","@timeouts shift itors delete_if ","selector register itors delete_if ","@input ea@timeouts shift h ","@input eamon value h ","@timeouts shift  value == ","selector register  value == ","ready ea@timeouts shift h ","ready eamon value h ","IO  select  each ","selector select  each ","mon value @timeouts shift losed? ","mon value mon value losed? ","@timeouts shift  value closed? ","selector register  value closed? ","@timeouts shift itors any? ","selector register itors any? ","sele@timeouts shift tor sele@timeouts shift t ","selemon value tor selemon value t ","@timeouts shift  write_error ","mon value  write_error ","submon value @timeouts shift an_@timeouts shift lose? ","submon value mon value an_mon value lose? ","sub@timeouts shift  value can_close? ","subselector register  value can_close? "]}," Rack CommonLogger log_hijacking":{"type":"method","name":"log_hijacking","children":[],"call":["logger write ","HIJACK_FORMAT  % ","now - ","env [] ","? + ","env [] empty? ","now strftime ","Time  now ","Time  now  - ","Time  now  strftime ","Time  Time  now  "]}," Puma MiniSSL Context keystore=":{"type":"method","name":"keystore=","children":[],"call":[" raise ","File  exist? "," check_file "]}," Puma MiniSSL Context initialize":{"type":"method","name":"initialize","children":[],"call":[]}," Puma MiniSSL Socket engine_read_all":{"type":"method","name":"engine_read_all","children":[],"call":["output << ","@engine read "," raise ","SSLError  exception "," bad_tlsv1_3? ","@engine read  << "]}," Puma JRubyRestart perm_daemonize":{"type":"method","name":"perm_daemonize","children":[],"call":[]}," Puma Events stdio":{"type":"method","name":"stdio","children":[],"call":[]}," Puma Events fire_on_booted!":{"type":"method","name":"fire_on_booted!","children":[],"call":["b call ","@on_booted each "," fire "]}," Puma Events on_booted":{"type":"method","name":"on_booted","children":[],"call":["@on_booted << "," register "]}," Puma Events debug":{"type":"method","name":"debug","children":[],"call":[" log "]}," Puma Events register":{"type":"method","name":"register","children":[],"call":["@hooks [] << ","@hooks [] "," raise "]}," Puma Events fire":{"type":"method","name":"fire","children":[],"call":["t call ","@hooks [] each ","@hooks [] "]}," Puma ControlCLI start":{"type":"method","name":"start","children":[],"call":["cli run ","Puma CLI  new ","Puma Events  new ","(str \"-C\") + ","@options [] ","(str \"-S\") + "," require ","File  exist? ","$0 gsub ","Puma LogWriter  new "," require_relative ","Puma CLI  new  run "]}," Puma Configuration DSL worker_shutdown_timeout":{"type":"method","name":"worker_shutdown_timeout","children":[],"call":["@options []= "]}," Puma Configuration DSL worker_timeout":{"type":"method","name":"worker_timeout","children":[],"call":["@options []= "]}," Puma Configuration DSL tag":{"type":"method","name":"tag","children":[],"call":["@options []= "]}," Puma Configuration DSL prune_bundler":{"type":"method","name":"prune_bundler","children":[],"call":["@options []= "]}," Puma Configuration DSL lowlevel_error_handler":{"type":"method","name":"lowlevel_error_handler","children":[],"call":["@options []= "," raise "]}," Puma Configuration DSL preload_app!":{"type":"method","name":"preload_app!","children":[],"call":["@options []= "]}," Puma Configuration DSL tcp_mode":{"type":"method","name":"tcp_mode","children":[],"call":["@options []= "]}," Puma Configuration DSL after_worker_boot":{"type":"method","name":"after_worker_boot","children":[],"call":["@options [] << ","@options [] "]}," Puma Configuration DSL on_worker_shutdown":{"type":"method","name":"on_worker_shutdown","children":[],"call":["@options [] << ","@options [] "]}," Puma Configuration DSL drain_on_shutdown":{"type":"method","name":"drain_on_shutdown","children":[],"call":["@options []= "]}," Puma Configuration DSL port":{"type":"method","name":"port","children":[],"call":["@options [] << ","@options [] "]}," String byteslice":{"type":"method","name":"byteslice","children":[],"call":[" dup force_encoding slice force_encoding "," dup force_encoding slice "," dup force_encoding "," dup "," encoding "," dup force_ encoding oding slice force_ encoding oding "," dup force_ encoding oding slice "," dup force_ encoding oding ","  encoding oding "]}," Puma Cluster run":{"type":"method","name":"run","children":[],"call":["@wakeup close ","read close ","@suicide_pipe close ","@check_pipe close "," stop_workers ","@status == "," check_workers "," start_phased_restart "," log ","w ping! ","w phase ","w index ","w boot! ","x pid == ","x pid ","@workers find ","read gets to_i ","read gets ","req == ","req ! ","read read_nonblock ","IO  select ","@cli events fire_on_booted! ","@cli events "," stop ","Signal  trap "," spawn_workers ","@cli write_state "," start_control "," redirect_io ","Process  daemon "," daemon? ","Puma Util  pipe "," exit! ","Process  pid != ","Process  pid "," wakeup! ","@workers last term ","@workers last ","@options [] ","@options [] >= ","@cli binder parse ","@cli binder "," exit "," error ","@cli config app_configured? ","@cli config ","after size - ","before size ","after size ","t backtrace first ","t backtrace ","t inspect ","threads each ","threads first respond_to? ","threads first ","after - ","after size > ","Thread  list "," load_and_bind "," preload? "," output_header ","h call ","hooks each ","w dead! "," phased_restart ","result sub chomp ","result sub ","result to_i ","@launcher events fire_on_booted! ","@launcher events ","@launcher config run_hooks ","@launcher config ","@launcher write_state "," setup_signals ","@launcher binder parse ","@launcher binder ","@launcher config app_configured? ","Plugins  fire_background ","@launcher close_binder_unix_paths ","w term ","w term? ","w instance_variable_set ","@launcher events fire ","Time  now ","w pid= ","w pid nil? ","w pid ","x index == ","x index ","result split map ","result split ","(int 0) max ","@next_check - "," nakayoshi_gc ","worker last_status empty? ","worker last_status ","@workers none? ","booted ! ","Puma Util  nakayoshi_gc ","t thread_variable_get ","Thread  list reject ","@events fire_on_booted! ","workers_not_booted zero? ","w uptime round ","w uptime "," single_worker_warning ","t is_a? ! ","t is_a? "," lambda ","read wait_readable ","w term! ","@events fire ","@config run_hooks ","@config app_configured? "," debug_loaded_extensions ","@log_writer debug? "," start_phased_IO  select tart ","x read gets to_i  == ","x result to_i  == ","x read gets to_i  ","x result to_i  ","read read_nonblock  == ","read read_nonblock  ! ","Process  read gets to_i  != ","Process  result to_i  != ","Process  read gets to_i  ","Process  result to_i  ","Thread  list  size - ","Thread  list reject  size - ","Thread  list  size ","Thread  list reject  size ","threads first IO  select pond_to? ","Thread  list  - ","Thread  list reject  - ","Thread  list  size > ","Thread  list reject  size > ","@options []  each "," phased_IO  select tart ","IO  select ult sub chomp ","read gets  sub chomp ","IO  select ult sub ","read gets  sub ","IO  select ult to_i ","read gets  to_i ","@launcher config run_@options []  ","w read gets to_i = ","w result to_i = ","w read gets to_i  nil? ","w result to_i  nil? ","w read gets to_i  ","w result to_i  ","IO  select ult split map ","read gets  split map ","IO  select ult split ","read gets  split ","Time  now  - ","@options []  zero? ","@config run_@options []  "]}," Puma Cluster preload?":{"type":"method","name":"preload?","children":[],"call":["@options [] "]}," Puma Cluster stats":{"type":"method","name":"stats","children":[],"call":["w booted? ","@workers count ","@workers size ","w phase != ","w phase ","[ + + ","[ + ","(send\n  (ivar :@workers) :map) join ","w last_status ","w last_checkin utc iso8601 ","w last_checkin utc ","w last_checkin ","w index ","w pid ","@workers map ","@started_at utc iso8601 ","@started_at utc ","w started_at utc iso8601 ","w started_at utc ","w started_at ","w [] ","worker_status count ","(pair\n  (sym :started_at)\n  (send\n    (send\n      (ivar :@started_at) :utc) :iso8601)) merge ","(pair\n  (sym :started_at)\n  (send nil :utc_iso8601\n    (ivar :@started_at))) merge "," utc_iso8601 ","[ + +  count "]}," Puma Cluster halt":{"type":"method","name":"halt","children":[],"call":[" wakeup! "]}," Puma Cluster stop_blocked":{"type":"method","name":"stop_blocked","children":[],"call":["Process  waitall ","@control stop "," wakeup! ","@status == "]}," Puma Cluster stop":{"type":"method","name":"stop","children":[],"call":[" wakeup! "]}," Puma Cluster phased_restart":{"type":"method","name":"phased_restart","children":[],"call":[" wakeup! ","@options [] ","refork ! "]}," Puma Cluster restart":{"type":"method","name":"restart","children":[],"call":[" stop "]}," Puma Cluster worker":{"type":"method","name":"worker","children":[],"call":["@worker_write close ","h call ","hooks each ","@options [] ","server run join ","server run ","io << "," sleep ","Process  pid ","Thread  new ","STDERR  puts ","@worker_write << ","server stop ","Signal  trap "," start_server "," log ","File  expand_path ","File  exist? ","ENV  [] ! ","ENV  [] "," exit! ","IO  select ","@suicide_pipe close ","@master_read close ","title << ","@options [] empty? ! ","@options [] empty? ","Dir  chdir ","@launcher config run_hooks ","@launcher config ","server running ","server backlog ","Thread  current purge_interrupt_queue ","Thread  current ","Thread  current respond_to? ","server max_threads ","server pool_capacity ","Puma  set_thread_name ","@launcher events ","restart_server pop ","server stats to_json ","server stats "," require ","restart_server << ","worker_pids << "," spawn_worker ","restart_server << << ","idx == "," nakayoshi_gc ","server begin_restart ","restart_server clear ","restart_server length > ","restart_server length ","idx to_i ","@fork_pipe gets "," wakeup! ","Process  wait ","worker_pids reject! ","Queue  new << << ","Queue  new << ","Queue  new ","@fork_writer close ","@options [] ! ","index == ","new_worker run ","Worker  new ","pipes []= "," preload? ","@woserver running keserver running _wserver running ite close ","@options []  each "," start_server  run join ","seserver running veserver running  server running un join "," start_server  run ","seserver running veserver running  server running un ","Pserver running ocess  pid ","Process   spawn_worker  ","Thserver running ead  new ","@woserver running keserver running _wserver running ite << "," start_server  stop ","seserver running veserver running  stop ","Signal  tserver running ap "," start_ start_server  "," staserver running t_seserver running veserver running  ","@masteserver running _server running ead close ","Dir  ch@options []  ","Diserver running   chdiserver running  ","@launcher config run_@options []  ","@launcheserver running  config server running un_hooks ","@launcheserver running  config "," start_server  running ","seserver running veserver running  server running unning "," start_server  backlog ","seserver running veserver running  backlog ","server server backlog acklog ","Thserver running ead  cuserver running server running ent puserver running ge_inteserver running server running upt_queue ","Thserver running ead  cuserver running server running ent ","Thserver running ead  cuserver running server running ent server running espond_to? "," start_server  max_threads ","seserver running veserver running  max_thserver running eads "," start_server  pool_capacity ","seserver running veserver running  pool_capacity ","Puma  set_thserver running ead_name ","@launcheserver running  events ","restart_ start_server  pop ","server running estaserver running t_seserver running veserver running  pop ","Queue  new << <<  pop "," start_server  stats to_json ","seserver running veserver running  stats to_json "," start_server  stats ","seserver running veserver running  stats "," server running equiserver running e ","restart_ start_server  << ","server running estaserver running t_seserver running veserver running  << ","Queue  new << <<  << ","woserver running keserver running _pids << ","worker_ spawn_worker s << "," spawn_woserver running keserver running  ","restart_ start_server  << << ","server running estaserver running t_seserver running veserver running  << << ","Queue  new << <<  << << ","idx to_i  == ","@fork_pipe gets  == "," start_server  begin_restart ","seserver running veserver running  begin_server running estaserver running t ","server server backlog egin_restart ","restart_ start_server  clear ","server running estaserver running t_seserver running veserver running  cleaserver running  ","Queue  new << <<  clear ","restart_ start_server  length > ","server running estaserver running t_seserver running veserver running  length > ","Queue  new << <<  length > ","restart_ start_server  length ","server running estaserver running t_seserver running veserver running  length ","Queue  new << <<  length ","idx to_i  to_i ","@fork_pipe gets  to_i ","@foserver running k_pipe gets ","Pserver running ocess  wait ","woserver running keserver running _pids server running eject! ","worker_ spawn_worker s reject! ","@foserver running k_wserver running iteserver running  close ","new_woserver running keserver running  server running un ","Worker  new  run ","Woserver running keserver running   new "," pserver running eload? "]}," Puma Cluster wakeup!":{"type":"method","name":"wakeup!","children":[],"call":["@wakeup write ","@wakeup closed? ","Thread  current purge_interrupt_queue ","Thread  current ","Thread  current respond_to? "]}," Puma Cluster check_workers":{"type":"method","name":"check_workers","children":[],"call":[" log ","w pid ","w signal ","w term ","@phased_state == ","x phase != ","x phase ","@workers find "," all_workers_booted? "," spawn_workers ","w pid == ","@workers delete_if ","Process  waitpid ","@workers any? "," sleep ","w kill ","w ping_timeout? ","@options [] ","@workers each ","Time  now + ","Time  now ","@next_check >= ","force ! ","w ping_timeout? ! ","w booted? ! ","w booted? "," cull_workers ","@workers reject! ","pids include? ","w dead? ","pids << "," wait_workers ","w term? ","(send\n  (send\n    (send\n      (ivar :@workers) :reject\n      (block-pass\n        (sym :term?))) :map\n    (block-pass\n      (sym :ping_timeout))) :min) compact min ","(send\n  (send\n    (send\n      (ivar :@workers) :reject\n      (block-pass\n        (sym :term?))) :map\n    (block-pass\n      (sym :ping_timeout))) :min) compact ","@workers reject map min ","@workers reject map ","@workers reject "," timeout_workers ","(send\n  (lvar :t) :min) compact min ","(send\n  (lvar :t) :min) compact ","t min ","t map! ","w Process  waitpid  ","w @workers reject erm ","@phased_s@workers reject a@workers reject e == "," all_workers_boo@workers reject ed? ","w Process  waitpid  == ","@workers dele@workers reject e_if ","Process  waitProcess  waitpid  ","Process  wai@workers reject pid ","w ping_@workers reject imeou@workers reject ? ","@op@workers reject ions [] ","Time  now +  >= ","(send\n  (send\n    (send\n      (ivar :@workers) :reject\n      (block-pass\n        (sym :term?))) :map\n    (block-pass\n      (sym :ping_timeout))) :min) compact min  >= ","(send\n  (lvar :t) :min) compact min  >= ","@nex@workers reject _check >= ","w ping_@workers reject imeou@workers reject ? ! ","w boo@workers reject ed? ! ","w boo@workers reject ed? ","@workers rejec@workers reject ! ","Process  waitpid s include? ","Process  waitpid s << "," wai@workers reject _workers ","w @workers reject erm? ","(send\n  (send\n    (send\n      (ivar :@workers) :rejec@workers reject \n      (block-pass\n        (sym :@workers reject erm?))) :map\n    (block-pass\n      (sym :ping_@workers reject imeou@workers reject ))) :min) compac@workers reject  min ","(send\n  (send\n    (send\n      (ivar :@workers) :rejec@workers reject \n      (block-pass\n        (sym :@workers reject erm?))) :map\n    (block-pass\n      (sym :ping_@workers reject imeou@workers reject ))) :min) compac@workers reject  ","@workers rejec@workers reject  map min ","@workers rejec@workers reject  map ","@workers rejec@workers reject  "," @workers reject imeou@workers reject _workers ","(send\n  (lvar :@workers reject ) :min) compac@workers reject  min ","(send\n  (lvar :@workers reject ) :min) compac@workers reject  ","@workers reject  min ","@workers reject  map! "]}," Puma Cluster all_workers_booted?":{"type":"method","name":"all_workers_booted?","children":[],"call":["(send\n  (ivar :@workers) :count) == ","w booted? ! ","w booted? ","@workers count "]}," Puma Cluster next_worker_index":{"type":"method","name":"next_worker_index","children":[],"call":["available_positions first ","all_positions to_a - ","all_positions to_a ","w index ","@workers map ","@options [] ","occupied_positions include? ! ","occupied_positions include? ","all_positions to_a -  first ","@workers map  include? ! ","@workers map  include? "]}," Puma Cluster spawn_workers":{"type":"method","name":"spawn_workers","children":[],"call":["diff > ","h call ","@options [] each ","@options [] ","@workers << ","Worker  new ","@cli debug "," worker "," fork "," next_worker_index ","diff times ","Process  pid ","@options [] - ","@workers size ","@phased_state == ","@launcher config run_hooks ","@launcher config "," debug "," exit! "," log ","pid ! ","diff < ","@fork_writer << ","x phase == ","x phase ","@workers all? "," spawn_worker ","idx != ","WorkerHandle  new ","@options [] -  > ","@options [] -  times ","Process   spawn_worker  "," spawn_worker  ! ","@options [] -  < "," next_worker_index  != "]}," Puma Cluster Worker hup":{"type":"method","name":"hup","children":[],"call":["Process  kill "]}," Puma Cluster Worker kill":{"type":"method","name":"kill","children":[],"call":["Process  kill "," term "]}," Puma Cluster Worker term":{"type":"method","name":"term","children":[],"call":["Process  kill ","Time  new ","(send\n  (send\n    (const nil :Time) :new) :-\n  (ivar :@first_term_sent)) > ","@options [] ","Time  new - ","Time  now ","(send\n  (send\n    (const nil :Time) :now) :-\n  (ivar :@first_term_sent)) > ","Time  now - "]}," Puma Cluster Worker ping_timeout?":{"type":"method","name":"ping_timeout?","children":[],"call":["Time  now - > ","Time  now - ","Time  now "]}," Puma Cluster Worker ping!":{"type":"method","name":"ping!","children":[],"call":["Time  now ","JSON  parse "," require "]}," Puma Cluster Worker boot!":{"type":"method","name":"boot!","children":[],"call":["Time  now "]}," Puma Cluster Worker booted?":{"type":"method","name":"booted?","children":[],"call":["@stage == "]}," Puma Cluster Worker initialize":{"type":"method","name":"initialize","children":[],"call":["Time  now ","pipes [] ","launcher options ","launcher events "]}," Puma Cluster redirect_io":{"type":"method","name":"redirect_io","children":[],"call":["x hup ","@workers each "]}," Puma Cluster start_phased_restart":{"type":"method","name":"start_phased_restart","children":[],"call":["Dir  chdir "," log ","@options [] ","@launcher restart_dir ","@events fire_on_restart! ","Dir  ch@options []  ","Dir  ch@launcher restart_dir  ","@launcher restart_@options []  ","@launcher restart_@launcher restart_dir  "]}," Puma Cluster stop_workers":{"type":"method","name":"stop_workers","children":[],"call":[" log ","Process  waitall ","x term ","@workers each ","Process  waitpid ","w pid "," format ","t_end - ","Process  clock_gettime "," sleep ","pids empty? ","pids reject! "," loop ","@workers map ","RUBY_VERSION  < ","@workers empty? "," wait_workers ","(send\n  (ivar :@workers) :reject) empty? ","w pid nil? ","@workers reject ","Process  clock_gettime  - ","@workers map  empty? ","@workers map  reject! "]}," Puma Cluster initialize":{"type":"method","name":"initialize","children":[],"call":["Time  now "]}," Puma Client write_408":{"type":"method","name":"write_408","children":[],"call":["@io << "]}," Puma Client in_data_phase":{"type":"method","name":"in_data_phase","children":[],"call":["@read_header ! ","(or\n  (ivar :@read_header)\n  (ivar :@read_proxy)) ! "]}," Puma CLI set_process_title":{"type":"method","name":"set_process_title","children":[],"call":[" title ","Process  setproctitle ","Process  respond_to? "]}," Puma CLI title":{"type":"method","name":"title","children":[],"call":["buffer << ","@options [] ","@options [] join ","@options [] empty? ! ","@options [] empty? "]}," Puma CLI halt":{"type":"method","name":"halt","children":[],"call":["@runner halt "]}," Puma CLI stats":{"type":"method","name":"stats","children":[],"call":["@runner stats "]}," Puma CLI phased_restart":{"type":"method","name":"phased_restart","children":[],"call":[" restart "," log ","@runner phased_restart ","@runner respond_to? "]}," Puma CLI restart":{"type":"method","name":"restart","children":[],"call":["@runner restart "]}," Puma CLI setup_signals":{"type":"method","name":"setup_signals","children":[],"call":[" exit "," graceful_stop ","Signal  trap "," jruby? "," log "," redirect_io "," stop "," phased_restart "," restart "]}," Puma CLI prune_bundler?":{"type":"method","name":"prune_bundler?","children":[],"call":["@options [] ! ","@options [] "," clustered? "]}," Puma CLI jruby_daemon_start":{"type":"method","name":"jruby_daemon_start","children":[],"call":["JRubyRestart  daemon_start "," restart_args "," require "]}," Puma CLI restart_args":{"type":"method","name":"restart_args","children":[],"call":["cmd split + ","cmd split ","@options [] ","@options []  split + ","@options []  split "]}," Puma CLI clustered?":{"type":"method","name":"clustered?","children":[],"call":["@options [] > ","@options [] "]}," Puma CLI find_config":{"type":"method","name":"find_config","children":[],"call":["@options []= ","File  exist? ","pos find "," env ","cfg == ","@options [] ","(dstr\n  (str \"config/puma/\")\n  (begin\n    (send nil :env))\n  (str \".rb\")) find ","@options [] == ","@cli_options [] ","@cli_options []= ","@cli_options [] == ","pos << ","ENV  [] ","@options []  == "]}," Puma CLI env":{"type":"method","name":"env","children":[],"call":["ENV  [] ","@options [] ","@cli_options [] "]}," configuration":{"type":"method","name":"configuration","children":[],"call":["config load ","Puma Configuration  new "," config_file "," require ","Puma Configuration  new  load "," Puma Configuration  new _file "]}," state_path":{"type":"method","name":"state_path","children":[],"call":[" puma_state "," configuration options [] "," configuration options "," configuration "," config_file "," fetch "]}," puma_env":{"type":"method","name":"puma_env","children":[],"call":[" fetch "]}," config_file":{"type":"method","name":"config_file","children":[],"call":[" puma_env ","File  exists? ","file ! "," fetch "," fetch  ! "]}," start_options":{"type":"method","name":"start_options","children":[],"call":[" shared_path "," state_path "," puma_socket "," puma_env "," config_file "," fetch "]}," Puma Configuration DSL clean_thread_locals":{"type":"method","name":"clean_thread_locals","children":[],"call":["@options []= "]}," Puma ThreadPool wait_until_not_full":{"type":"method","name":"wait_until_not_full","children":[],"call":["@not_full wait ","@todo size - < ","@max - ","@todo size - ","@todo size ","@mutex synchronize ","@todo size < ","@waiting > ","@max > ","@spawned - + ","@spawned - "," busy_threads < "," busy_threads "," with_mutex "," @spawned - +  < "," @spawned - +  "]}," Puma Events format":{"type":"method","name":"format","children":[],"call":[" formatter call "," formatter "]}," Puma Events PidFormatter call":{"type":"method","name":"call","children":[],"call":[]}," Puma Events DefaultFormatter call":{"type":"method","name":"call","children":[],"call":[]}," Puma Configuration DSL queue_requests":{"type":"method","name":"queue_requests","children":[],"call":["@options []= "]}," Puma Configuration infer_tag":{"type":"method","name":"infer_tag","children":[],"call":["File  basename ","Dir  getwd "]}," Puma Cluster reload_worker_directory":{"type":"method","name":"reload_worker_directory","children":[],"call":["Dir  chdir "," log ","@options [] ","@launcher restart_dir ","Dir  ch@options []  ","Dir  ch@launcher restart_dir  ","@launcher restart_@options []  ","@launcher restart_@launcher restart_dir  "]}," Puma Client finish":{"type":"method","name":"finish","children":[],"call":["IO  select "," try_to_finish "," raise "," write_error "," in_data_phase "," timeout! ","@to_io wait_readable "]}," Puma CLI reload_worker_directory":{"type":"method","name":"reload_worker_directory","children":[],"call":["@runner reload_worker_directory ","@runner respond_to? "]}," Puma DSL shutdown_debug":{"type":"method","name":"shutdown_debug","children":[],"call":["@options []= "]}," Puma DSL queue_requests":{"type":"method","name":"queue_requests","children":[],"call":["@options []= "]}," Puma DSL worker_shutdown_timeout":{"type":"method","name":"worker_shutdown_timeout","children":[],"call":["@options []= "," Integer "]}," Puma DSL worker_timeout":{"type":"method","name":"worker_timeout","children":[],"call":["@options []= "," Integer "," raise ","timeout <= ","@options fetch ","Configuration DEFAULTS  [] "," Integer  <= "]}," Puma DSL tag":{"type":"method","name":"tag","children":[],"call":["@options []= ","string to_s "]}," Puma DSL prune_bundler":{"type":"method","name":"prune_bundler","children":[],"call":["@options []= "]}," Puma DSL lowlevel_error_handler":{"type":"method","name":"lowlevel_error_handler","children":[],"call":["@options []= "," raise "]}," Puma DSL preload_app!":{"type":"method","name":"preload_app!","children":[],"call":["@options []= "]}," Puma DSL tcp_mode":{"type":"method","name":"tcp_mode","children":[],"call":["@options []= "]}," Puma DSL directory":{"type":"method","name":"directory","children":[],"call":["@options []= ","dir to_s "," worker_directory "]}," Puma DSL after_worker_boot":{"type":"method","name":"after_worker_boot","children":[],"call":["@options [] << ","@options [] "," _ary << "," _ary "]}," Puma DSL on_worker_fork":{"type":"method","name":"on_worker_fork","children":[],"call":["@options [] << ","@options [] "," _ary << "," _ary "," process_hook "," warn_if_in_single_mode "]}," Puma DSL on_worker_boot":{"type":"method","name":"on_worker_boot","children":[],"call":["@options [] << ","@options [] "," _ary << "," _ary "," process_hook "," warn_if_in_single_mode "]}," Puma DSL on_worker_shutdown":{"type":"method","name":"on_worker_shutdown","children":[],"call":["@options [] << ","@options [] "," _ary << "," _ary "," process_hook "," warn_if_in_single_mode "]}," Puma DSL workers":{"type":"method","name":"workers","children":[],"call":["@options []= ","count to_i "]}," Puma DSL state_path":{"type":"method","name":"state_path","children":[],"call":["@options []= ","path to_s "]}," Puma DSL ssl_bind":{"type":"method","name":"ssl_bind","children":[],"call":["@options [] << ","opts [] ","@options [] "," bind ","opts fetch ","(str \"peer\") include? ","opts fetch to_s "," class ssl_bind_str "," class "," add_pem_values_to_options_store "]}," Puma DSL threads":{"type":"method","name":"threads","children":[],"call":["@options []= "," raise ","min > "," Integer ","max < "," Integer  > "," Integer  < "]}," Puma DSL stdout_redirect":{"type":"method","name":"stdout_redirect","children":[],"call":["@options []= "]}," Puma DSL rackup":{"type":"method","name":"rackup","children":[],"call":["@options []= ","path to_s ","@options [] "]}," Puma DSL quiet":{"type":"method","name":"quiet","children":[],"call":["@options []= ","which ! "]}," Puma DSL pidfile":{"type":"method","name":"pidfile","children":[],"call":["@options []= ","path to_s "]}," Puma DSL restart_command":{"type":"method","name":"restart_command","children":[],"call":["@options []= ","cmd to_s "]}," Puma DSL on_restart":{"type":"method","name":"on_restart","children":[],"call":["@options [] << ","@options [] "," _ary << "," _ary "]}," Puma DSL environment":{"type":"method","name":"environment","children":[],"call":["@options []= "]}," Puma DSL drain_on_shutdown":{"type":"method","name":"drain_on_shutdown","children":[],"call":["@options []= "]}," Puma DSL daemonize":{"type":"method","name":"daemonize","children":[],"call":["@options []= "]}," Puma DSL clean_thread_locals":{"type":"method","name":"clean_thread_locals","children":[],"call":["@options []= "]}," Puma DSL port":{"type":"method","name":"port","children":[],"call":["@options [] << ","@options [] "," bind "," default_host ","URI Generic  build to_s ","URI Generic  build "," Integer "]}," Puma DSL bind":{"type":"method","name":"bind","children":[],"call":["@options [] << ","@options [] "," _ary << "," _ary "]}," Puma DSL activate_control_app":{"type":"method","name":"activate_control_app","children":[],"call":["@options []= ","opts [] ","Configuration  random_token ","Configuration  temp_path ","url == ","Configuration  temp_Configuration  temp_path  "]}," Puma DSL app":{"type":"method","name":"app","children":[],"call":["@options []= "," raise "]}," Puma DSL _load_from":{"type":"method","name":"_load_from","children":[],"call":[" instance_eval ","File  read "," _offer_plugins "]}," Puma DSL initialize":{"type":"method","name":"initialize","children":[],"call":[]}," Puma DSL load":{"type":"method","name":"load","children":[],"call":[" _ary << "," _ary ","@options [] << ","@options [] "]}," Puma Configuration setup_control":{"type":"method","name":"setup_control","children":[],"call":[" setup_random_token ","@options [] ","@options []= ","Configuration  temp_path ","@options [] == ","Configuration  temp_Configuration  temp_path  "]}," Puma Configuration setup_binds":{"type":"method","name":"setup_binds","children":[],"call":["@options [] uniq! ","@options [] ","@options [] << ","@options [] empty? "]}," Puma Configuration load_rackup":{"type":"method","name":"load_rackup","children":[],"call":["@options []= ","config_ru_binds empty? ","b << ","k start_with? ","rack_options each_with_object ","@options merge! ","Rack Builder  parse_file "," rackup "," raise ","File  exist? ","k to_s [] == ","k to_s [] ","k to_s ","k to_s start_with? ","Puma Rack Builder  parse_file ","config_ru_binds << ","rack_options each "," rack_builder parse_file "," rack_builder ","@options shift ","@options file_options []= ","@options file_options ","@options file_options merge! "]}," Puma CLI prune_bundler":{"type":"method","name":"prune_bundler","children":[],"call":["Kernel  exec ","(send\n  (const nil :Gem) :ruby) + ","deps join ","dirs join ","Gem  ruby ","File  expand_path ","File  join ","ENV  []= ","Bundler  with_clean_env ","ENV  [] "," log ","spec version to_s ","spec version ","d name ","Bundler  rubygems loaded_specs ","Bundler  rubygems ","puma runtime_dependencies map ","puma runtime_dependencies ","File  exist? ","dirs detect ","puma full_gem_path ","puma require_paths map ","puma require_paths ","Bundler  rubygems loaded_specs  version to_s ","Bundler  rubygems loaded_specs  version ","Bundler  rubygems loaded_Bundler  rubygems loaded_specs s ","Bundler  rubygems loaded_specs  runtime_dependencies map ","Bundler  rubygems loaded_specs  runtime_dependencies ","Bundler  rubygems loaded_specs  full_gem_path ","Bundler  rubygems loaded_specs  require_paths map ","Bundler  rubygems loaded_specs  require_paths "]}," Puma CLI close_binder_listeners":{"type":"method","name":"close_binder_listeners","children":[],"call":["File  unlink ","uri path ","uri host ","uri scheme == ","uri scheme ","URI  parse ","io close ","@binder listeners each ","@binder listeners ","URI  parse  path ","URI  parse  host ","URI  parse  scheme == ","URI  parse  scheme "]}," Puma Util HeaderHash replace":{"type":"method","name":"replace","children":[],"call":[" []= ","other each "," clear "]}," Puma Util HeaderHash merge":{"type":"method","name":"merge","children":[],"call":["hash merge! "," dup "," dup  merge! "]}," Puma Util HeaderHash merge!":{"type":"method","name":"merge!","children":[],"call":[" []= ","other each "]}," Puma Util HeaderHash include?":{"type":"method","name":"include?","children":[],"call":["@names include? ","k downcase "]}," Puma Util HeaderHash delete":{"type":"method","name":"delete","children":[],"call":["name downcase == ","name downcase ","@names delete_if ","@names delete ","k downcase "]}," Puma Util HeaderHash []=":{"type":"method","name":"[]=","children":[],"call":["@names []= "," delete ","@names [] != ","@names [] ","k downcase "]}," Puma Util HeaderHash []":{"type":"method","name":"[]","children":[],"call":["@names [] ","k downcase "]}," Puma Util HeaderHash to_hash":{"type":"method","name":"to_hash","children":[],"call":["hash []= "," each "]}," Puma Util HeaderHash each":{"type":"method","name":"each","children":[],"call":["v to_ary join ","v to_ary ","v respond_to? "]}," Puma Util HeaderHash initialize":{"type":"method","name":"initialize","children":[],"call":[" []= ","hash each "]}," Puma Util HeaderHash new":{"type":"method","name":"new","children":[],"call":[]}," Puma Util parse_query":{"type":"method","name":"parse_query","children":[],"call":["params []= ","params [] << ","params [] ","cur class == ","cur class ","p split map ","p split ","p empty? ","(or\n  (lvar :qs)\n  (str \"\")) split each ","(or\n  (lvar :qs)\n  (str \"\")) split "," method ","params []  class == ","params []  class "]}," Puma Util unescape":{"type":"method","name":"unescape","children":[],"call":["URI  decode_www_form_component "]}," Puma ThreadPool auto_reap!":{"type":"method","name":"auto_reap!","children":[],"call":["@reaper start! ","Reaper  new ","Automaton  new ","Reaper  new  start! ","Automaton  new  start! "]}," Puma ThreadPool Reaper stop":{"type":"method","name":"stop","children":[],"call":["@thread wakeup "]}," Puma ThreadPool Reaper start!":{"type":"method","name":"start!","children":[],"call":[" sleep ","@pool reap ","Thread  new "]}," Puma ThreadPool Reaper initialize":{"type":"method","name":"initialize","children":[],"call":[]}," Puma ThreadPool reap":{"type":"method","name":"reap","children":[],"call":["worker kill ","dead_workers each ","@workers reject ","@mutex synchronize ","dead_workers include? ","@workers delete_if "," with_mutex ","@workers reject  each ","@workers reject  include? "]}," Rack Builder generate_map":{"type":"method","name":"generate_map","children":[],"call":["URLMap  new ","mapped []= "," class new to_app "," class new "," class ","mapping each "," require "," require_relative "]}," Rack Builder call":{"type":"method","name":"call","children":[],"call":[" to_app call "," to_app "]}," Rack Builder to_app":{"type":"method","name":"to_app","children":[],"call":["@warmup call ","e [] ","@use reverse inject ","@use reverse "," fail "," generate_map "]}," Rack Builder map":{"type":"method","name":"map","children":[],"call":["@map []= "]}," Rack Builder warmup":{"type":"method","name":"warmup","children":[],"call":[]}," Rack Builder run":{"type":"method","name":"run","children":[],"call":[]}," Rack Builder use":{"type":"method","name":"use","children":[],"call":["@use << ","middleware new "," proc "," generate_map "]}," Rack Builder app":{"type":"method","name":"app","children":[],"call":[]}," Rack Builder initialize":{"type":"method","name":"initialize","children":[],"call":[" instance_eval "," block_given? "," require "]}," Rack Builder new_from_string":{"type":"method","name":"new_from_string","children":[],"call":[]}," Rack Builder parse_file":{"type":"method","name":"parse_file","children":[],"call":["Options  new "]}," Rack Options handler_opts":{"type":"method","name":"handler_opts","children":[],"call":["options [] ","info join ","has_options ! ","info << ","  -O %-21s %s % ","name to_s match ","name to_s ","server valid_options each ","server valid_options ","server name ","server respond_to? ","Rack Handler  default ","Rack Handler  get ","name to_s =~ ","(str \"^(Host|Port)[^a-zA-Z]\") match? "]}," Rack Options parse!":{"type":"method","name":"parse!","children":[],"call":["options []= ","args last "," abort ","opt_parser to_s "," warn ","e message ","opt_parser parse! "," exit "," puts ","Rack  release ","Rack  version ","opts on_tail "," handler_opts ","opts separator "," File  expand_path ","opts on ","name to_sym ","value nil? ","name split ","(or-asgn\n  (send\n    (lvar :options) :[]\n    (sym :include))\n  (array)) concat ","path split ","options [] "," eval ","opts banner= ","OptionParser  new "]}," PumaRackCompat const_missing":{"type":"method","name":"const_missing","children":[],"call":[]}," URI decode_www_form_component":{"type":"method","name":"decode_www_form_component","children":[],"call":[]}," URI decode_www_form":{"type":"method","name":"decode_www_form","children":[],"call":[]}," URI encode_www_form_component":{"type":"method","name":"encode_www_form_component","children":[],"call":[]}," Puma MiniSSL Context ca=":{"type":"method","name":"ca=","children":[],"call":[" raise ","File  exist? "," check_file "]}," Puma MiniSSL Socket peercert":{"type":"method","name":"peercert","children":[],"call":["OpenSSL X509 Certificate  new ","@engine peercert "]}," Puma Events ssl_error":{"type":"method","name":"ssl_error","children":[],"call":["@stderr puts ","error inspect ","Time  now ","peercert subject ","@error_logger info ","ssl_socket peercert ","ssl_socket peeraddr last ","ssl_socket peeraddr ","peercert peercert subject  ","ssl_socket peercert  subject ","ssl_socket ssl_socket peercert  "]}," Puma CommonLogger extract_content_length":{"type":"method","name":"extract_content_length","children":[],"call":["value to_s == ","value to_s ","headers [] ","headers []  to_s == ","headers []  to_s "]}," Puma CommonLogger log":{"type":"method","name":"log","children":[],"call":["logger << ","logger write ","logger respond_to? ","env [] ","FORMAT  % ","now - ","status to_s [] ","status to_s ","? + ","env [] empty? ","now strftime "," extract_content_length ","Time  now "," write ","Time  now  - ","Time  now  strftime "," extract_content_ extract_content_length  ","Time  Time  now  "]}," Puma CommonLogger log_hijacking":{"type":"method","name":"log_hijacking","children":[],"call":["logger write ","HIJACK_FORMAT  % ","now - ","env [] ","? + ","env [] empty? ","now strftime ","Time  now "," write ","Time  now  - ","Time  now  strftime ","Time  Time  now  "]}," Puma CommonLogger call":{"type":"method","name":"call","children":[],"call":["ary << "," log "," lambda ","env [] "," log_hijacking ","Util HeaderHash  new ","@app call ","Time  now ","env []  << "]}," Puma CommonLogger initialize":{"type":"method","name":"initialize","children":[],"call":[]}," puma_rails_additional_env":{"type":"method","name":"puma_rails_additional_env","children":[],"call":[" fetch "]}," Rack URLMap casecmp?":{"type":"method","name":"casecmp?","children":[],"call":["v1 casecmp zero? ","v1 casecmp ","v2 nil? ","v1 nil? ","v1 == "]}," Rack URLMap call":{"type":"method","name":"call","children":[],"call":["env []= ","app call ","script_name + ","rest [] == ","rest [] ","rest empty? ","rest ! ","m [] ","match match ","path to_s "," casecmp? ","sName + + ","sName + ","host ! ","@mapping each ","env [] ","script_namatch match e + ","env []  + ","m []  [] == ","m []  [] ","m []  empty? ","rest ematch match pty? ","m []  ! ","match match  [] ","match match atch match match atch ","env []  to_s "," casecmatch match p? ","sNamatch match e + + ","env []  + + ","sNamatch match e + ","@match match apping each "]}," Rack URLMap remap":{"type":"method","name":"remap","children":[],"call":["location size -@ ","location size ","host size -@ ","host size ","(send\n  (lvar :map) :map) sort_by ","Regexp  new ","Regexp  quote gsub ","Regexp  quote ","location chomp "," raise ","location [] == ","location [] ","location =~ ","map map ","location chomp  size -@ ","location chomp  size ","location chomp  chomp ","location chomp  [] == ","location chomp  [] ","location chomp  =~ "]}," Rack URLMap initialize":{"type":"method","name":"initialize","children":[],"call":[" remap "]}," Puma DSL before_fork":{"type":"method","name":"before_fork","children":[],"call":["@options [] << ","@options [] "," _ary << "," _ary "," warn_if_in_single_mode "]}," Puma Configuration default_options":{"type":"method","name":"default_options","children":[],"call":["ENV  [] "," lambda "," method "]}," Puma MiniSSL check":{"type":"method","name":"check","children":[],"call":[]}," Puma Configuration rack_builder":{"type":"method","name":"rack_builder","children":[],"call":[" require ","ENV  key? "]}," Puma DSL worker_boot_timeout":{"type":"method","name":"worker_boot_timeout","children":[],"call":["@options []= "," Integer "]}," Puma DSL set_remote_address":{"type":"method","name":"set_remote_address","children":[],"call":[" raise ","val inspect ","@options []= ","HTTP_ + ","hdr upcase gsub ","hdr upcase ","val [] ","127.0.0.1 freeze ","hdr upcase tr ","protocol_version inspect ","(sym :v1) include? ","protocol_version downcase to_sym ","protocol_version downcase ","val []  upcase gsub ","val []  upcase ","val []  upcase tr ","protocol_version downcase to_sym  inspect ","val []  inspect ","protocol_version downcase to_sym  downcase to_sym ","val []  downcase to_sym ","protocol_version downcase to_sym  downcase ","val []  downcase "]}," Puma Cluster Worker dead!":{"type":"method","name":"dead!","children":[],"call":[]}," Puma Cluster Worker dead?":{"type":"method","name":"dead?","children":[],"call":[]}," Puma Client peerip":{"type":"method","name":"peerip","children":[],"call":["@io peeraddr last ","@io peeraddr ","(or\n  (send\n    (ivar :@env) :[]\n    (ivar :@remote_addr_header))\n  (const nil :LOCALHOST_ADDR)) split first ","(or\n  (send\n    (ivar :@env) :[]\n    (ivar :@remote_addr_header))\n  (const nil :LOCALHOST_ADDR)) split ","@env [] ","(or\n  (send\n    (ivar :@env) :[]\n    (ivar :@remote_addr_header))\n  (const nil :LOCALHOST_IP)) split first ","(or\n  (send\n    (ivar :@env) :[]\n    (ivar :@remote_addr_header))\n  (const nil :LOCALHOST_IP)) split ","(or\n  (send\n    (ivar :@env) :[]\n    (ivar :@remote_addr_header))\n  (send\n    (send\n      (ivar :@io) :peeraddr) :last)) split first ","(or\n  (send\n    (ivar :@env) :[]\n    (ivar :@remote_addr_header))\n  (send\n    (send\n      (ivar :@io) :peeraddr) :last)) split "]}," Puma CLI load_and_bind":{"type":"method","name":"load_and_bind","children":[],"call":["@binder parse ","@options [] "," raise "," log ","@config app "," exit "," error ","@config app_configured? "]}," Puma CLI development?":{"type":"method","name":"development?","children":[],"call":["@options [] == ","@options [] "]}," Puma ThreadPool clean_thread_locals":{"type":"method","name":"clean_thread_locals","children":[],"call":[]}," Puma StateFile load":{"type":"method","name":"load","children":[],"call":["YAML  load ","File  read ","@options []= ","v gsub ","v to_f ","v to_i ","v strip ","ALLOWED_FIELDS  include? ","line split ","line start_with? ","File  read lines each ","File  read lines ","YAML  load  []= ","v strip  gsub ","v strip  to_f ","v strip  to_i ","v strip  strip "]}," Puma StateFile save":{"type":"method","name":"save","children":[],"call":["File  write ","YAML  dump ","file write ","file chmod ","File  open ","contents << ","v to_s include? ","v to_s ","k == ","v strip empty? ","v strip ","ALLOWED_FIELDS  include? ","@options each ","---\n dup ","---\n +@ ","YAML  dump  << ","---\n dup  << ","---\n +@  << "]}," Puma StateFile initialize":{"type":"method","name":"initialize","children":[],"call":[]}," Puma Single jruby_daemon_start":{"type":"method","name":"jruby_daemon_start","children":[],"call":["JRubyRestart  daemon_start "," restart_args "," require ","@launcher restart_args "]}," Puma Server handle_app_response":{"type":"method","name":"handle_app_response","children":[],"call":["o call ","after_reply each ","res_body close ","res_body respond_to? ","req tempfile unlink ","req tempfile ","body close "," uncork_socket "," raise ","client flush "," fast_write ","part bytesize to_s ","part bytesize ","part bytesize zero? ","res_body each ","response_hijack call ","lines to_s ","lines << ","response_hijack ! ","lines append ","content_length to_s ","status != ","keep_alive ! ","vs to_s split each ","vs to_s split ","vs to_s ","vs respond_to? ","k downcase ","headers each ","STATUS_WITH_NO_ENTITY_BODY  [] ","status < "," fetch_status_code ","status to_s ","status == ","env fetch downcase == ","env fetch downcase ","env fetch ","env fetch downcase != ","env [] == ","env [] "," cork_socket ","res_body [] bytesize ","res_body [] ","res_body size == ","res_body size ","res_body kind_of? ","req body ","req io ","env []  each ","res_req body  close ","res_req body  respond_to? ","req body  close ","req io  flush ","res_req body  each ","res_body [] bytesize  to_s ","env fetch downcase ==  ! ","env fetch downcase !=  ! ","env [] == ers each ","res_req body  [] bytesize ","res_req body  [] ","res_req body  size == ","res_req body  size ","res_req body  kind_of? ","req req body  "]}," Puma Runner debug":{"type":"method","name":"debug","children":[],"call":["@events log ","@options [] ","@log_writer log "]}," Puma Plugin workers_supported?":{"type":"method","name":"workers_supported?","children":[],"call":["Puma  windows? ","Puma  jruby? "]}," Puma Plugin in_background":{"type":"method","name":"in_background","children":[],"call":["Thread  new ","Plugins  add_background "]}," Puma Plugin initialize":{"type":"method","name":"initialize","children":[],"call":[]}," Puma Plugin create":{"type":"method","name":"create","children":[],"call":[]}," Puma Plugin extract_name":{"type":"method","name":"extract_name","children":[],"call":[]}," Puma PluginRegistry find":{"type":"method","name":"find","children":[],"call":[" raise ","@plugins [] "," require ","name to_s ","name to_s  to_s "]}," Puma PluginRegistry register":{"type":"method","name":"register","children":[],"call":["@plugins []= "]}," Puma PluginRegistry initialize":{"type":"method","name":"initialize","children":[],"call":[]}," Puma PluginLoader fire_starts":{"type":"method","name":"fire_starts","children":[],"call":["i start ","i respond_to? ","@instances each "]}," Puma PluginLoader create":{"type":"method","name":"create","children":[],"call":[" raise ","@instances << ","cls new ","Plugins  find ","Plugins  find  new "]}," Puma PluginLoader initialize":{"type":"method","name":"initialize","children":[],"call":[]}," start":{"type":"method","name":"start","children":[],"call":["launcher restart ","File  stat mtime > ","File  stat mtime ","File  stat "," sleep "," in_background ","File  write ","File  join ","mtime > ","File  exist? ","Puma SdNotify  status ","instance status "," loop ","launcher log_writer log ","sleep_time round ","launcher log_writer ","Puma SdNotify  watchdog ","ping_f round "," watchdog_sleep_time ","Puma SdNotify  watchdog? ","Puma SdNotify  reloading ","launcher events on_restart ","launcher events ","Puma SdNotify  stopping ","launcher events on_stopped ","Puma SdNotify  ready ","launcher events on_booted "," require_relative ","File  stat File  stat mtime  > ","File  stat File  stat mtime  ","File  stat mtime  > "," watchdog_sleep_time  round "]}," Puma NullIO write":{"type":"method","name":"write","children":[],"call":[]}," Puma NullIO puts":{"type":"method","name":"puts","children":[],"call":[]}," Puma NullIO sync=":{"type":"method","name":"sync=","children":[],"call":[]}," Puma NullIO size":{"type":"method","name":"size","children":[],"call":[]}," Puma Launcher setup_signals":{"type":"method","name":"setup_signals","children":[],"call":[" exit "," graceful_stop ","Signal  trap ","Puma  jruby? "," log ","@runner redirect_io "," stop "," phased_restart "," restart ","@runner redirected_io? "," raise ","@options [] "," log_thread_status ","@events log ","backtrace map "," thread_status ","@log_writer log "," do_graceful_stop "]}," Puma Launcher generate_restart_data":{"type":"method","name":"generate_restart_data","children":[],"call":["arg0 + ","arg0 + + ","arg0 []= ","$: [] == ","$: [] ","File  expand_path ","Gem  ruby ","File  exist? "," require ","Dir  pwd ","c worker_directory ","@config configure ","s_env dev == ","s_pwd dev ","s_env dev ","Puma  jruby? ","s_env ino == ","s_pwd ino ","s_env ino ","File  stat ","ENV  [] ","(lvar :lib) include? ","$LOAD_PATH [] ","Puma  windows? ","@options [] ","c worker_ENV  [] ectory ","c worker_@options [] ectory ","File  stat  dev == ","File  stat  dev ","File  stat  ino == ","File  stat  ino ","(lvar :File  expand_path ) include? "]}," Puma Launcher close_binder_listeners":{"type":"method","name":"close_binder_listeners","children":[],"call":["File  unlink ","uri path ","uri host ","uri scheme == ","uri scheme ","URI  parse ","io close ","@binder listeners each ","@binder listeners ","@binder close_listeners ","@runner close_control_listeners "," log ","Time  now ","@status == ","URI  parse  path ","URI  parse  host ","URI  parse  scheme == ","URI  parse  scheme "]}," Puma Launcher prune_bundler?":{"type":"method","name":"prune_bundler?","children":[],"call":["@options [] ! ","@options [] "," clustered? "]}," Puma Launcher environment":{"type":"method","name":"environment","children":[],"call":[]}," Puma Launcher set_rack_environment":{"type":"method","name":"set_rack_environment","children":[],"call":["ENV  []= "," environment ","@options []= "]}," Puma Launcher title":{"type":"method","name":"title","children":[],"call":["buffer << ","@options [] ","@options [] empty? ! ","@options [] empty? ","@options [] join "]}," Puma Launcher set_process_title":{"type":"method","name":"set_process_title","children":[],"call":[" title ","Process  setproctitle ","Process  respond_to? "]}," Puma Launcher graceful_stop":{"type":"method","name":"graceful_stop","children":[],"call":[" log ","Time  now ","@runner stop_blocked ","@events fire_on_stopped! "]}," Puma Launcher unsupported":{"type":"method","name":"unsupported","children":[],"call":[" raise ","@events error ","@log_writer error "]}," Puma Launcher restart_args":{"type":"method","name":"restart_args","children":[],"call":["cmd split + ","cmd split ","@options [] ","@options []  split + ","@options []  split "]}," Puma Launcher clustered?":{"type":"method","name":"clustered?","children":[],"call":["(or\n  (send\n    (ivar :@options) :[]\n    (sym :workers))\n  (int 0)) > ","@options [] "]}," Puma Launcher log":{"type":"method","name":"log","children":[],"call":["@events log ","@log_writer log "]}," Puma Launcher prune_bundler":{"type":"method","name":"prune_bundler","children":[],"call":["Kernel  exec ","(send\n  (const nil :Gem) :ruby) + ","deps join ","dirs join ","Gem  ruby ","File  expand_path ","File  join ","ENV  []= ","Bundler  with_clean_env ","ENV  [] "," log ","spec version to_s ","spec version ","d name ","Bundler  rubygems loaded_specs ","Bundler  rubygems ","puma runtime_dependencies map ","puma runtime_dependencies ","File  exist? ","dirs detect ","puma full_gem_path ","puma require_paths map ","puma require_paths ","RUBY_VERSION  >= "," puma_wild_location "," dependencies_and_files_to_require_after_prune "," require_rubygems_min_version! ","Gem Version  new "," with_unbundled_env ","Bundler  original_env [] ","Bundler  original_env "," files_to_require_after_prune "," files_to_require_after_prune  join ","Bundler  rubygems loaded_specs  version to_s ","Bundler  rubygems loaded_specs  version ","Bundler  rubygems loaded_Bundler  rubygems loaded_specs s ","Bundler  rubygems loaded_specs  runtime_dependencies map ","Bundler  rubygems loaded_specs  runtime_dependencies "," files_to_require_after_prune  detect ","Bundler  rubygems loaded_specs  full_gem_path ","Bundler  rubygems loaded_specs  require_paths map ","Bundler  rubygems loaded_specs  require_paths "," puma_File  expand_path _location "," Bundler  rubygems loaded_specs _wild_location "]}," Puma Launcher restart!":{"type":"method","name":"restart!","children":[],"call":["Kernel  exec ","RUBY_VERSION  >= ","Dir  chdir "," restart_args ","redirects []= ","io to_i ","ENV  []= ","@binder listeners each_with_index ","@binder listeners "," close_binder_listeners ","Puma  windows? ","JRubyRestart  chdir_exec "," require ","Puma  jruby? ","@config run_hooks ","@binder redirects_for_restart ","ENV  update ","@binder redirects_for_restart_env ","@events fire_on_restart! "," require_relative "]}," Puma Launcher reload_worker_directory":{"type":"method","name":"reload_worker_directory","children":[],"call":["@runner reload_worker_directory ","@runner respond_to? "]}," Puma Launcher connected_port":{"type":"method","name":"connected_port","children":[],"call":["@binder connected_port "]}," Puma Launcher run":{"type":"method","name":"run","children":[],"call":[" restart! ","@runner before_restart "," log "," graceful_stop ","@runner run "," set_process_title "," setup_signals ","@config plugins fire_starts ","@config plugins ","@config clamp ","ENV  replace ","ENV  to_h ","env []= ","(send\n  (lvar :env) :[]\n  (str \"RUBYOPT\")) join ","env [] ","env [] to_s include? ","env [] to_s ","Bundler ORIGINAL_ENV  dup ","(send\n  (lvar :env) :[]\n  (str \"RUBYOPT\")) join lstrip ","Bundler  clean_env ","@binder close_unix_paths "," close_binder_listeners ","@status == ","@runner stop_control "," integrate_with_systemd "," do_run_finished "," get_env ","Bundler ORIGINAL_ENV  dup  []= ","(send\n  (lvar :Bundler ORIGINAL_ENV  dup ) :[]\n  (str \"RUBYOPT\")) join ","Bundler ORIGINAL_ENV  dup  [] ","Bundler ORIGINAL_ENV  dup  [] to_s include? ","Bundler ORIGINAL_ENV  dup  [] to_s ","(send\n  (lvar :Bundler ORIGINAL_ENV  dup ) :[]\n  (str \"RUBYOPT\")) join lstrip ","Bundler  clean_Bundler ORIGINAL_ENV  dup  "," get_Bundler ORIGINAL_ENV  dup  "]}," Puma Launcher phased_restart":{"type":"method","name":"phased_restart","children":[],"call":[" restart "," log ","@runner phased_restart ","@runner respond_to? "]}," Puma Launcher restart":{"type":"method","name":"restart","children":[],"call":["@runner restart "]}," Puma Launcher stop":{"type":"method","name":"stop","children":[],"call":["@runner stop ","@events fire_on_stopped! "]}," Puma Launcher halt":{"type":"method","name":"halt","children":[],"call":["@runner halt "]}," Puma Launcher write_pid":{"type":"method","name":"write_pid","children":[],"call":[" delete_pidfile ","cur == ","Process  pid "," at_exit ","f puts ","File  open ","@options [] ","cur_pid == ","File  write ","Process  pid  == ","Process  pid _pid == "]}," Puma Launcher delete_pidfile":{"type":"method","name":"delete_pidfile","children":[],"call":["File  unlink ","File  exist? ","@options [] "]}," Puma Launcher write_state":{"type":"method","name":"write_state","children":[],"call":["sf save ","sf control_auth_token= ","@options [] ","sf control_url= ","sf pid= ","Process  pid ","StateFile  new "," write_pid "," require ","sf running_from= ","File  expand_path "," require_relative ","StateFile  new  save ","StateFile  new  control_auth_token= ","StateFile  new  control_url= ","StateFile  new  pid= ","StateFile  new  running_from= ","File  expand_@options []  "]}," Puma Launcher stats":{"type":"method","name":"stats","children":[],"call":["@runner stats "]}," Puma Launcher initialize":{"type":"method","name":"initialize","children":[],"call":["Single  new ","Cluster  new ","@options []= ","@events formatter= ","Events PidFormatter  new "," clustered? "," set_rack_environment ","@options [] "," prune_bundler "," prune_bundler? ","Dir  chdir "," unsupported ","Puma  windows? ","Puma  jruby? ","@config options ","@config load ","Puma  cli_config= ","Puma  cli_config ","conf environment "," generate_restart_data ","@binder import_from_env ","Binder  new ","@argv dup ","launcher_args [] ","@config clamp ","Puma  stats_object= ","Process  respond_to? ! ","Process  respond_to? "," options [] "," options ","ENV  delete ","@binder create_activated_fds each ","@binder create_activated_fds ","@binder create_inherited_fds each ","@binder create_inherited_fds "," log_config ","ENV  [] ","@config options []= ","@binder synthesize_binds_from_activated_fs ","@config options [] == ","@config options [] ","Puma  forkable? ! ","Puma  forkable? "," prune_bundler! ","@log_writer formatter= ","LogWriter PidFormatter  new ","Events  new ","@config plugins create ","@config plugins ","Puma  jruby? ! ","@log_writer custom_logger= ","@config options  []= ","@config options  [] ","Dir  ch@options []  ","Binder  new  import_from_env ","Binder  new  create_activated_fds each ","Binder  new  create_activated_fds ","Binder  new  create_inherited_fds each ","Binder  new  create_inherited_fds ","Binder  new  synthesize_binds_from_activated_fs "]}," Puma Events null":{"type":"method","name":"null","children":[],"call":[]}," Puma DSL _ary":{"type":"method","name":"_ary","children":[],"call":["@options cur [] ","@options cur "]}," Puma DSL worker_directory":{"type":"method","name":"worker_directory","children":[],"call":["@options []= ","dir to_s "," directory ","$stderr puts "]}," Puma DSL tcp_mode!":{"type":"method","name":"tcp_mode!","children":[],"call":["@options []= "]}," Puma DSL debug":{"type":"method","name":"debug","children":[],"call":["@options []= "]}," Puma DSL log_requests":{"type":"method","name":"log_requests","children":[],"call":["@options []= "]}," Puma DSL plugin":{"type":"method","name":"plugin","children":[],"call":["@plugins << ","@config load_plugin "]}," Puma DSL get":{"type":"method","name":"get","children":[],"call":["@options [] ","key to_sym "]}," Puma DSL inject":{"type":"method","name":"inject","children":[],"call":[" instance_eval "]}," Puma DSL _run":{"type":"method","name":"_run","children":[],"call":[" _offer_plugins ","blk call "]}," Puma DSL _offer_plugins":{"type":"method","name":"_offer_plugins","children":[],"call":["@plugins clear ","o config ","@options shift ","o respond_to? ","@plugins each "]}," Puma windows?":{"type":"method","name":"windows?","children":[],"call":[]}," Puma jruby?":{"type":"method","name":"jruby?","children":[],"call":[]}," Puma run":{"type":"method","name":"run","children":[],"call":[]}," Puma Configuration random_token":{"type":"method","name":"random_token","children":[],"call":[]}," Puma Configuration run_hooks":{"type":"method","name":"run_hooks","children":[],"call":["b call ","@options all_of each ","@options all_of ","events debug ","e backtrace join ","e backtrace ","events log ","e message ","e class ","log_writer debug ","log_writer log ","b [] call ","hook_data [] ","b [] ","Hash  new ","Array  === "]}," Puma Configuration load_plugin":{"type":"method","name":"load_plugin","children":[],"call":["@plugins create "]}," Puma Configuration environment":{"type":"method","name":"environment","children":[],"call":["@options [] "]}," Puma Configuration clamp":{"type":"method","name":"clamp","children":[],"call":["@options force_defaults ","@options shift ","@options finalize_values "]}," Puma Configuration flatten!":{"type":"method","name":"flatten!","children":[],"call":["@options flatten ","@options flatten  flatten "]}," Puma Configuration flatten":{"type":"method","name":"flatten","children":[],"call":[" dup flatten! "," dup "]}," Puma Configuration configure":{"type":"method","name":"configure","children":[],"call":["DSL  new _run ","DSL  new ","@options shift ","@default_dsl _offer_plugins ","@file_dsl _offer_plugins ","@user_dsl _offer_plugins "]}," Puma Configuration from_file":{"type":"method","name":"from_file","children":[],"call":[]}," Puma LeveledOptions force_defaults":{"type":"method","name":"force_defaults","children":[],"call":["@defaults []= ","v call ","v respond_to? ","@defaults each "]}," Puma LeveledOptions explain":{"type":"method","name":"explain","children":[],"call":[" puts ","o [] inspect ","o [] ","o keys sort each ","o keys sort ","o keys ","@set each "]}," Puma LeveledOptions flatten":{"type":"method","name":"flatten","children":[],"call":["options [] ","o each ","@set each "]}," Puma LeveledOptions merge!":{"type":"method","name":"merge!","children":[],"call":["@cur []= ","o each "]}," Puma LeveledOptions key?":{"type":"method","name":"key?","children":[],"call":["@default key? ","o key? ","@set each "]}," Puma LeveledOptions []=":{"type":"method","name":"[]=","children":[],"call":["@cur []= "]}," Puma LeveledOptions all_of":{"type":"method","name":"all_of","children":[],"call":["all << ","v kind_of? ","o [] ","@set each ","o []  kind_of? "]}," Puma LeveledOptions []":{"type":"method","name":"[]","children":[],"call":["v call ","v respond_to? ","@defaults [] ","o [] ","o key? ","@set each ","@set reverse_each ","@defaults []  call ","@defaults []  respond_to? ","@set re@defaults [] erse_each "]}," Puma LeveledOptions shift":{"type":"method","name":"shift","children":[],"call":["@set << "]}," Puma LeveledOptions initialize_copy":{"type":"method","name":"initialize_copy","children":[],"call":["@set last ","o dup ","@set map "]}," Puma LeveledOptions initialize":{"type":"method","name":"initialize","children":[],"call":["default dup ","default_options dup "]}," Puma Cluster setup_signals":{"type":"method","name":"setup_signals","children":[],"call":[" stop "," exit! "," log ","Process  pid != ","Process  pid ","Signal  trap "," wakeup! ","@workers last term ","@workers last ","@options [] ","@options [] >= "," raise "," stop_workers "," exit ","@launcher close_binder_listeners "," fork_worker! ","w last_status [] >= ","w last_status [] ","w last_status ","w phase == ","w phase ","w index == ","w index ","@launcher events register ","@launcher events ","(lvasgn :fork_requests\n  (send\n    (send\n      (ivar :@options) :[]\n      (sym :fork_worker)) :to_i)) > ","@options [] to_i ","@events fire_on_stopped! ","@events register ","(lvasgn :@options [] to_i \n  (send\n    (send\n      (ivar :@options) :[]\n      (sym :fork_worker)) :to_i)) > "]}," Puma DSL import":{"type":"method","name":"import","children":[],"call":["DSL  new _load_from ","DSL  new "," raise ","File  join ","File  dirname ","file [] == ","file [] ","File  extname == ","File  extname "]}," Puma LeveledOptions fetch":{"type":"method","name":"fetch","children":[],"call":[" [] "]}," Rack Handler Puma set_host_port_to_config":{"type":"method","name":"set_host_port_to_config","children":[],"call":[]}," Rack Handler Puma config":{"type":"method","name":"config","children":[],"call":[]}," Puma Server shutting_down?":{"type":"method","name":"shutting_down?","children":[],"call":["@status == "]}," Puma Server current":{"type":"method","name":"current","children":[],"call":["Thread  current [] ","Thread  current "]}," Puma Server notify_safely":{"type":"method","name":"notify_safely","children":[],"call":[" raise ","Thread  current purge_interrupt_queue ","Thread  current ","Thread  current respond_to? ","e message include? ","e message ","@notify << ","Puma Util  pipe ","Puma Util  purge_interrupt_queue "]}," Puma Server closed_socket?":{"type":"method","name":"closed_socket?","children":[],"call":["state == ","state <= ","state >= ","tcp_info unpack [] ","tcp_info unpack ","Thread  current purge_interrupt_queue ","Thread  current ","Thread  current respond_to? ","socket getsockopt ","socket kind_of? ","skt getsockopt ","skt kind_of? ","socket to_io ","Puma Util  purge_interrupt_queue ","tcp_info unpack []  == ","tcp_info unpack []  <= ","tcp_info unpack []  >= ","socket getsockopt  unpack [] ","skt getsockopt  unpack [] ","socket getsockopt  unpack ","skt getsockopt  unpack ","socket to_io  getsockopt ","socket to_io  kind_of? "]}," Puma Runner redirected_io?":{"type":"method","name":"redirected_io?","children":[],"call":["@options [] "]}," Puma PluginRegistry fire_background":{"type":"method","name":"fire_background","children":[],"call":["Thread  new ","@background each ","b call ","Puma  set_thread_name ","@background each_with_index "]}," Puma PluginRegistry add_background":{"type":"method","name":"add_background","children":[],"call":["@background << "]}," Puma NullIO eof?":{"type":"method","name":"eof?","children":[],"call":[]}," Puma MiniSSL Context check":{"type":"method","name":"check","children":[],"call":[" raise ","@cert_pem nil? ","@cert nil? ","@key_pem nil? ","@key nil? "]}," Puma MiniSSL Socket should_drop_bytes?":{"type":"method","name":"should_drop_bytes?","children":[],"call":["@engine shutdown ! ","@engine shutdown ","@engine init? "]}," Puma MiniSSL Socket read_and_drop":{"type":"method","name":"read_and_drop","children":[],"call":[" read_nonblock ","IO  select ","@socket read_nonblock ","@socket wait_readable "]}," Puma MiniSSL Socket write_nonblock":{"type":"method","name":"write_nonblock","children":[],"call":[" write "]}," Puma DSL after_worker_fork":{"type":"method","name":"after_worker_fork","children":[],"call":["@options []= ","@options [] "," _ary << "," _ary ","@options [] << "," process_hook "," warn_if_in_single_mode "]}," Puma DSL force_shutdown_after":{"type":"method","name":"force_shutdown_after","children":[],"call":["@options []= "," Integer "," Float "]}," Puma DSL first_data_timeout":{"type":"method","name":"first_data_timeout","children":[],"call":["@options []= "," Integer "]}," Puma DSL persistent_timeout":{"type":"method","name":"persistent_timeout","children":[],"call":["@options []= "," Integer "]}," Puma DSL clear_binds!":{"type":"method","name":"clear_binds!","children":[],"call":["@options []= "]}," Puma Configuration puma_default_options":{"type":"method","name":"puma_default_options","children":[],"call":["ENV  [] "," lambda "," method "," Integer "," default_max_threads ","defaults []= "," puma_options_from_env each "," puma_options_from_env ","DEFAULTS  dup ","DEFAULTS  dup  []= "]}," Puma UserFileDefaultOptions finalize_values":{"type":"method","name":"finalize_values","children":[],"call":["@default_options []= ","v call ","v respond_to? ","@default_options each "]}," Puma UserFileDefaultOptions all_of":{"type":"method","name":"all_of","children":[],"call":["user + + ","user + ","default compact! ","file compact! ","user compact! ","default is_a? ","file is_a? ","user is_a? "," default_options [] "," default_options "," file_options [] "," file_options "," user_options [] "," user_options "," user_options []  + + "," user_options []  + "," default_options []  compact! "," file_options []  compact! "," user_options []  compact! "," default_options []  is_a? "," file_options []  is_a? "," user_options []  is_a? ","  default_options [] _options [] ","  default_options [] _options ","  file_options [] _options [] ","  file_options [] _options ","  user_options [] _options [] ","  user_options [] _options "]}," Puma UserFileDefaultOptions fetch":{"type":"method","name":"fetch","children":[],"call":[" [] "," default_options [] "," default_options "," default_options key? "," file_options [] "," file_options "," file_options key? "," user_options [] "," user_options "," user_options key? "]}," Puma UserFileDefaultOptions []=":{"type":"method","name":"[]=","children":[],"call":[" user_options []= "," user_options "]}," Puma UserFileDefaultOptions []":{"type":"method","name":"[]","children":[],"call":[" default_options [] "," default_options "," default_options key? "," file_options [] "," file_options "," file_options key? "," user_options [] "," user_options "," user_options key? "," fetch "]}," Puma UserFileDefaultOptions initialize":{"type":"method","name":"initialize","children":[],"call":[]}," Puma CommonLogger write":{"type":"method","name":"write","children":[],"call":["logger << ","logger write ","logger respond_to? "," env [] "," env "]}," Puma Cluster cull_workers":{"type":"method","name":"cull_workers","children":[],"call":["worker term "," log ","worker pid ","worker index ","workers_to_cull each "," debug ","workers_to_cull inspect ","@workers [] ","diff -@ ","diff inspect ","diff < ","@workers size - ","@options [] ","@workers size ","workers each ","workers inspect "," workers_to_cull ","@workers []  each "," workers_to_cull _to_cull each ","@workers []  inspect "," workers_to_cull _to_cull inspect ","@ workers_to_cull  [] ","@workers size -  -@ ","@workers size -  inspect ","@workers size -  < ","@ workers_to_cull  size - ","@ workers_to_cull  size "," workers_to_cull  each "," workers_to_cull  inspect "," @workers []  ","  workers_to_cull _to_cull "]}," Puma Client read_chunked_body":{"type":"method","name":"read_chunked_body","children":[],"call":[" decode_chunk "," raise ","@body close ","@io read_nonblock "," set_ready ","@env []= ","@chunked_content_length to_s "," decode_@io read_nonblock  ","@@io read_nonblock ed_content_length to_s "]}," Puma Client decode_chunk":{"type":"method","name":"decode_chunk","children":[],"call":["len - ","part size ","@body << ","part [] ","got == ","got <= ","io read ","rest empty? ","@body rewind ","len == ","line strip to_i ","line strip ","line end_with? ","io gets ","io eof? ! ","io eof? ","StringIO  new ","@prev_chunk + ","@prev_chunk empty? ","chunk size ","chunk [] ","@partial_part_left - ","@partial_part_left <= ","@partial_part_left > ","rest [] ","rest start_with? "," set_ready ","@buffer empty? ","last_crlf_size - ","rest bytesize ","rest bytesize < ","\r\n bytesize "," write_chunk "," raise ","part end_with? ","chunk_hex to_i ","chunk_hex =~ ","line strip [] ","@partial_part_left == ","chunk size + ","rest index + ","CHUNK_VALID_ENDING_SIZE  * ","rest index ","CHUNK_VALID_ENDING  * ","CHUNK_VALID_ENDING_SIZE  - ","CHUNK_SIZE_INVALID  match? ","line strip to_i  - ","chunk_hex to_i  - ","io read  size ","io read  [] ","part size  == ","part size  <= ","StringIO  new  read ","io read  empty? ","rest []  empty? ","line strip to_i  == ","chunk_hex to_i  == ","io gets  strip to_i ","io gets  strip ","io gets  end_with? ","StringIO  new  gets ","StringIO  new  eof? ! ","StringIO  new  eof? ","@prev_chunk []  + ","@prev_chunk []  empty? ","chunk []  size ","chunk []  [] ","len -  - ","last_crlf_size -  - ","CHUNK_VALID_ENDING_SIZE  -  - ","@io read ial_io read _left - ","len -  <= ","last_crlf_size -  <= ","CHUNK_VALID_ENDING_SIZE  -  <= ","@io read ial_io read _left <= ","len -  > ","last_crlf_size -  > ","CHUNK_VALID_ENDING_SIZE  -  > ","@io read ial_io read _left > ","rest []  [] ","io read  start_with? ","rest []  start_with? ","\r\n bytesize  - ","io read  bytesize ","rest []  bytesize ","io read  bytesize < ","rest []  bytesize < "," write_chunk []  ","io read  end_with? ","chunk [] _hex to_i ","line strip []  to_i ","chunk [] _hex =~ ","line strip []  =~ ","io gets  strip [] ","len -  == ","last_crlf_size -  == ","CHUNK_VALID_ENDING_SIZE  -  == ","@io read ial_io read _left == ","chunk []  size + ","io read  index + ","rest []  index + ","io read  index ","rest []  index "]}," Puma Client setup_chunked_body":{"type":"method","name":"setup_chunked_body","children":[],"call":[" decode_chunk ","@body binmode ","Tempfile  new ","@env []= ","@chunked_content_length to_s ","@body unlink ","Tempfile  new  binmode ","Tempfile  new  unlink "]}," Puma Binder inherit_ssl_listener":{"type":"method","name":"inherit_ssl_listener","children":[],"call":["@ios << ","@envs []= ","env []= ","@proto_env dup ","MiniSSL Server  new ","TCPServer  for_fd ","fd kind_of? ","MiniSSL  check "," require "," raise "," TCPServer  for_fd "," localhost_authority_context ","@ioTCPServer  for_fd  << ","@io TCPServer  for_fd  << ","@@proto_env dup s []= ","@envTCPServer  for_fd  []= ","@env TCPServer  for_fd  []= ","@proto_env dup  []= ","@proto_@proto_env dup  dup "," raiTCPServer  for_fd e "," rai TCPServer  for_fd e "," localhoTCPServer  for_fd t_authority_context "," localho TCPServer  for_fd t_authority_context "]}," Puma Binder loopback_addresses":{"type":"method","name":"loopback_addresses","children":[],"call":["(send\n  (block\n    (send\n      (send\n        (const nil :Socket) :ip_address_list) :select)\n    (args\n      (arg :addrinfo))\n    (or\n      (send\n        (lvar :addrinfo) :ipv6_loopback?)\n      (send\n        (lvar :addrinfo) :ipv4_loopback?))) :map) uniq ","addrinfo ip_address ","(send\n  (send\n    (const nil :Socket) :ip_address_list) :select) map ","addrinfo ipv4_loopback? ","addrinfo ipv6_loopback? ","Socket  ip_address_list select ","Socket  ip_address_list ","t uniq! ","t map! "]}," Puma DSL early_hints":{"type":"method","name":"early_hints","children":[],"call":["@options []= "]}," Puma Configuration environment_str":{"type":"method","name":"environment_str","children":[],"call":[" environment "," environment call "," environment respond_to? "]}," Puma Configuration config_files":{"type":"method","name":"config_files","children":[],"call":["File  exist? ","(dstr\n  (str \"config/puma/\")\n  (begin\n    (send nil :environment_str))\n  (str \".rb\")) find "," environment_str ","files any? ","files == ","@options all_of ","(dstr\n  (str \"config/puma/\")\n  (begin\n    (send\n      (ivar :@options) :[]\n      (sym :environment)))\n  (str \".rb\")) find ","@options [] ","@options all_of  any? ","@options all_of  == "]}," Puma MiniSSL Socket closed?":{"type":"method","name":"closed?","children":[],"call":["@socket closed? "]}," Puma stats":{"type":"method","name":"stats","children":[],"call":[]}," Puma stats_object=":{"type":"method","name":"stats_object=","children":[],"call":[]}," Puma ThreadPool pool_capacity":{"type":"method","name":"pool_capacity","children":[],"call":[" waiting + ","@max - "," spawned "," waiting "]}," Puma Server pool_capacity":{"type":"method","name":"pool_capacity","children":[],"call":["@thread_pool pool_capacity "]}," Puma Runner test?":{"type":"method","name":"test?","children":[],"call":["@options [] == ","@options [] "]}," Puma CLI configure_control_url":{"type":"method","name":"configure_control_url","children":[],"call":[" unsupported ","Puma  jruby? "]}," Puma DSL default_host":{"type":"method","name":"default_host","children":[],"call":["@options [] ","Configuration DEFAULTS  [] "]}," Puma DSL set_default_host":{"type":"method","name":"set_default_host","children":[],"call":["@options []= "]}," Puma Server possible_header_injection?":{"type":"method","name":"possible_header_injection?","children":[],"call":["HTTP_INJECTION_REGEX  =~ ","header_value to_s "]}," Puma Binder localhost_addresses":{"type":"method","name":"localhost_addresses","children":[],"call":["addrs [] ","TCPSocket  gethostbyname ","addrs [] uniq ","TCPSocket  gethostbyname  [] ","TCPSocket  gethostbyname  [] uniq "]}," Puma LeveledOptions reverse_shift":{"type":"method","name":"reverse_shift","children":[],"call":["@set unshift "]}," Puma Reactor clear_monitor":{"type":"method","name":"clear_monitor","children":[],"call":["@monitors delete ","@selector deregister ","mon value "]}," Puma MiniSSL Context no_tlsv1=":{"type":"method","name":"no_tlsv1=","children":[],"call":[" raise ","(str \"true\") include? "]}," Puma DSL raise_exception_on_sigterm":{"type":"method","name":"raise_exception_on_sigterm","children":[],"call":["@options []= "]}," Puma DSL out_of_band":{"type":"method","name":"out_of_band","children":[],"call":["@options [] << ","@options [] "," process_hook "]}," Puma Client set_ready":{"type":"method","name":"set_ready","children":[],"call":["@env []= ","Process  clock_gettime - ","Process  clock_gettime "]}," Puma MiniSSL Context no_tlsv1_1=":{"type":"method","name":"no_tlsv1_1=","children":[],"call":[" raise ","(str \"true\") include? "]}," Puma DSL log_formatter":{"type":"method","name":"log_formatter","children":[],"call":["@options []= "]}," Puma Cluster wait_workers":{"type":"method","name":"wait_workers","children":[],"call":["w term ","w term? ","Process  wait ","w pid ","@workers reject! ","Process  kill ","w pid nil? "]}," Puma Cluster Worker term?":{"type":"method","name":"term?","children":[],"call":[]}," Puma set_thread_name":{"type":"method","name":"set_thread_name","children":[],"call":[]}," Puma ThreadPool Automaton stop":{"type":"method","name":"stop","children":[],"call":["@thread wakeup "]}," Puma ThreadPool Automaton start!":{"type":"method","name":"start!","children":[],"call":[" sleep ","@pool public_send ","Puma  set_thread_name ","Thread  new "]}," Puma ThreadPool Automaton initialize":{"type":"method","name":"initialize","children":[],"call":[]}," Puma Launcher require_rubygems_min_version!":{"type":"method","name":"require_rubygems_min_version!","children":[],"call":[" raise ","min_version <= ","Gem Version  new "]}," Puma Launcher log_thread_status":{"type":"method","name":"log_thread_status","children":[],"call":[" log ","thread backtrace join ","thread backtrace ","thread name ","thread respond_to? ","thread object_id to_s ","thread object_id ","thread [] ","Thread  list each ","Thread  list "]}," Puma Launcher require_paths_for_gem":{"type":"method","name":"require_paths_for_gem","children":[],"call":["gem_spec full_require_paths "]}," Puma Launcher spec_for_gem":{"type":"method","name":"spec_for_gem","children":[],"call":["Bundler  rubygems loaded_specs ","Bundler  rubygems "]}," Puma Launcher puma_wild_location":{"type":"method","name":"puma_wild_location","children":[],"call":["File  expand_path ","File  join ","File  exist? ","dirs detect "," require_paths_for_gem "," spec_for_gem "," require_paths_for_gem  detect "]}," Puma Launcher extra_runtime_deps_directories":{"type":"method","name":"extra_runtime_deps_directories","children":[],"call":["(send\n  (send nil :Array\n    (send\n      (ivar :@options) :[]\n      (sym :extra_runtime_dependencies))) :map) flatten compact ","(send\n  (send nil :Array\n    (send\n      (ivar :@options) :[]\n      (sym :extra_runtime_dependencies))) :map) flatten "," log "," require_paths_for_gem "," spec_for_gem "," Array map "," Array ","@options [] ","  spec_for_gem _for_gem "]}," Puma Launcher dependencies_and_files_to_require_after_prune":{"type":"method","name":"dependencies_and_files_to_require_after_prune","children":[],"call":[" require_paths_for_gem + "," extra_runtime_deps_directories "," require_paths_for_gem "," spec_for_gem version "," spec_for_gem ","d name ","puma runtime_dependencies map ","puma runtime_dependencies "," spec_for_gem  runtime_dependencies map "," spec_for_gem  runtime_dependencies "]}," Puma Launcher close_binder_unix_paths":{"type":"method","name":"close_binder_unix_paths","children":[],"call":["@binder close_unix_paths "]}," Puma DSL extra_runtime_dependencies":{"type":"method","name":"extra_runtime_dependencies","children":[],"call":["@options []= "," Array "]}," Puma Client write_error":{"type":"method","name":"write_error","children":[],"call":["@io << ","ERROR_RESPONSE  [] "]}," Puma Binder redirects_for_restart":{"type":"method","name":"redirects_for_restart","children":[],"call":["redirects []= ","io to_i ","ENV  []= ","@listeners each_with_index ","(send\n  (send nil :listeners) :map) to_h ","a [] to_i ","a [] "," listeners map "," listeners ","(send\n  (ivar :@listeners) :map) to_h ","@listeners map ","(send\n  (send nil :listeners) :map) to_h  []= ","(send\n  (ivar :@listeners) :map) to_h  []= "]}," Puma Binder close_unix_paths":{"type":"method","name":"close_unix_paths","children":[],"call":["File  unlink ","File  exist? ","@unix_paths each "]}," Puma Binder close_listeners":{"type":"method","name":"close_listeners","children":[],"call":["File  unlink ","uri path ","uri host ","uri scheme == ","uri scheme ","URI  parse ","io close ","@listeners each ","@unix_paths include? "," unix_paths include? "," unix_paths ","io closed? "," listeners each "," listeners ","File  exist? ","URI  parse  path ","URI  parse  host ","URI  parse  scheme == ","URI  parse  scheme "]}," Puma MiniSSL ContextBuilder context":{"type":"method","name":"context","children":[],"call":["ctx verify_mode= "," events error "," events ","MiniSSL VERIFY_PEER  | "," params [] "," params ","ctx no_tlsv1_1= "," params [] == ","ctx no_tlsv1= ","ctx ssl_cipher_filter= ","ctx ca= ","(str \"peer\") include? ","ctx cert= ","ctx key= ","ctx ssl_cipher_list= ","ctx keystore_pass= ","ctx keystore= ","MiniSSL Context  new ","ctx verification_flags= ","sum | ","(send\n  (send\n    (send\n      (send nil :params) :[]\n      (str \"verification_flags\")) :split\n    (str \",\")) :map) inject ","MiniSSL VERIFICATION_FLAGS  fetch "," params [] split map "," params [] split ","ctx cert_pem= "," params [] nil? ","ctx key_pem= "," log_writer error "," log_writer ","ctx reuse= ","ctx protocols= ","ctx cipher_suites= ","ctx truststore_type= ","ctx truststore_pass= ","ctx truststore= ","truststore eql? ","ctx keystore_type= ","ctx key_password_command= ","MiniSSL Context  new  verify_mode= ","MiniSSL Context  new  no_tlsv1_1= ","MiniSSL Context  new  no_tlsv1= ","MiniSSL Context  new  ssl_cipher_filter= ","MiniSSL Context  new  ca= ","MiniSSL Context  new  cert= ","MiniSSL Context  new  key= ","MiniSSL Context  new  ssl_cipher_list= ","MiniSSL Context  new  keystore_pass= ","MiniSSL Context  new  keystore= ","MiniSSL Context  new  verification_flags= ","MiniSSL Context  new  cert_pem= ","MiniSSL Context  new  key_pem= ","MiniSSL Context  new  reuse= ","MiniSSL Context  new  protocols= ","MiniSSL Context  new  cipher_suites= ","MiniSSL Context  new  truststore_type= ","ctx  params [] _type= ","MiniSSL Context  new  truststore_pass= ","ctx  params [] _pass= ","MiniSSL Context  new  truststore= ","ctx  params [] = "," params []  eql? ","MiniSSL Context  new  keystore_type= ","MiniSSL Context  new  key_password_command= "]}," Puma MiniSSL ContextBuilder initialize":{"type":"method","name":"initialize","children":[],"call":["MiniSSL  check "," require "]}," Puma Client write_chunk":{"type":"method","name":"write_chunk","children":[],"call":["@body write "]}," Puma stats_hash":{"type":"method","name":"stats_hash","children":[],"call":[]}," Puma ThreadPool wait_for_less_busy_worker":{"type":"method","name":"wait_for_less_busy_worker","children":[],"call":["@not_full wait "," busy_threads > "," busy_threads "," with_mutex ","delay_s > ","Puma  mri? "]}," Puma ThreadPool with_mutex":{"type":"method","name":"with_mutex","children":[],"call":["@mutex synchronize ","@mutex owned? "]}," Puma ThreadPool trigger_out_of_band_hook":{"type":"method","name":"trigger_out_of_band_hook","children":[],"call":["STDERR  puts ","e class ","e message "," out_of_band_hook each "," out_of_band_hook ","@spawned == "," out_of_band_hook any? ","@out_of_band each "]}," Puma ThreadPool busy_threads":{"type":"method","name":"busy_threads","children":[],"call":["@spawned - + ","@todo size ","@spawned - "," with_mutex "]}," Puma Server stats":{"type":"method","name":"stats","children":[],"call":["(send\n  (const nil :STAT_METHODS) :map) to_h "," send ","STAT_METHODS  map "]}," Puma Server tcp_cork_supported?":{"type":"method","name":"tcp_cork_supported?","children":[],"call":["Socket  const_defined? ","RbConfig CONFIG  [] =~ ","RbConfig CONFIG  [] "]}," Puma Runner close_control_listeners":{"type":"method","name":"close_control_listeners","children":[],"call":["@control binder close_listeners ","@control binder "]}," Puma Runner stop_control":{"type":"method","name":"stop_control","children":[],"call":["@control stop "]}," Puma MiniSSL Server addr":{"type":"method","name":"addr","children":[],"call":["@socket addr "]}," Puma MiniSSL Socket bad_tlsv1_3?":{"type":"method","name":"bad_tlsv1_3?","children":[],"call":["@engine ssl_vers_st == ","@engine ssl_vers_st "," ssl_version_state == "," ssl_version_state "]}," Puma MiniSSL Socket ssl_version_state":{"type":"method","name":"ssl_version_state","children":[],"call":["@engine ssl_vers_st "]}," Puma Launcher with_unbundled_env":{"type":"method","name":"with_unbundled_env","children":[],"call":["Bundler  with_unbundled_env ","Bundler  with_clean_env ","bundler_ver < ","Gem Version  new ","Gem Version  new  < "]}," Puma Launcher thread_status":{"type":"method","name":"thread_status","children":[],"call":["thread backtrace ","thread name ","thread respond_to? ","thread [] ","thread object_id to_s ","thread object_id ","Thread  list each ","Thread  list "]}," Puma Launcher connected_ports":{"type":"method","name":"connected_ports","children":[],"call":["@binder connected_ports "]}," Puma Events debug_error":{"type":"method","name":"debug_error","children":[],"call":["@error_logger debug "]}," Puma Events connection_error":{"type":"method","name":"connection_error","children":[],"call":["@error_logger info "]}," Puma ErrorLogger request_parsed?":{"type":"method","name":"request_parsed?","children":[],"call":["req env [] ","req env "]}," Puma ErrorLogger request_headers":{"type":"method","name":"request_headers","children":[],"call":["(send\n  (lvar :headers) :map) to_h inspect ","(send\n  (lvar :headers) :map) to_h ","key [] ","headers map ","key start_with? ","req env select ","req env "]}," Puma ErrorLogger request_title":{"type":"method","name":"request_title","children":[],"call":["REQUEST_FORMAT  % ","env [] ","req env ","req env  [] ","req req env  "]}," Puma ErrorLogger request_dump":{"type":"method","name":"request_dump","children":[],"call":["req body "," request_headers "]}," Puma ErrorLogger title":{"type":"method","name":"title","children":[],"call":["string_block join ","string_block << ","error inspect "," request_title "," request_parsed? ","Time  now ","options [] ","options []  inspect "," options [] uest_title "," options [] uest_parsed? "]}," Puma ErrorLogger debug":{"type":"method","name":"debug","children":[],"call":[" ioerr puts ","string_block join "," ioerr ","string_block << "," error_backtrace "," request_dump "," title ","options [] ","error backtrace "," request_parsed? "," log "," internal_write "," options [] _backtrace "," options [] uest_dump ","options []  backtrace "," options [] uest_parsed? "]}," Puma ErrorLogger info":{"type":"method","name":"info","children":[],"call":[" ioerr puts "," title "," ioerr "," log "," internal_write "]}," Puma ErrorLogger stdio":{"type":"method","name":"stdio","children":[],"call":[]}," Puma ErrorLogger initialize":{"type":"method","name":"initialize","children":[],"call":["ENV  key? ","@ioerr sync= "]}," Puma DSL nakayoshi_fork":{"type":"method","name":"nakayoshi_fork","children":[],"call":["@options []= "]}," Puma DSL fork_worker":{"type":"method","name":"fork_worker","children":[],"call":["@options []= "," Integer "]}," Puma DSL wait_for_less_busy_worker":{"type":"method","name":"wait_for_less_busy_worker","children":[],"call":["@options []= ","val to_f "]}," Puma DSL on_refork":{"type":"method","name":"on_refork","children":[],"call":["@options [] << ","@options [] "," process_hook "]}," Puma DSL state_permission":{"type":"method","name":"state_permission","children":[],"call":["@options []= "]}," Puma forkable?":{"type":"method","name":"forkable?","children":[],"call":[]}," Puma mri?":{"type":"method","name":"mri?","children":[],"call":[]}," Puma ssl?":{"type":"method","name":"ssl?","children":[],"call":[]}," Puma Configuration default_max_threads":{"type":"method","name":"default_max_threads","children":[],"call":["Puma  mri? "]}," Puma Cluster nakayoshi_gc":{"type":"method","name":"nakayoshi_gc","children":[],"call":[" log ","GC  compact ","GC  respond_to? ","GC  start ","4 times ","@options [] "]}," Puma Cluster timeout_workers":{"type":"method","name":"timeout_workers","children":[],"call":["w kill "," log ","w pid ","w ping_timeout <= ","Time  now ","w ping_timeout ","w term? ! ","w term? ","@workers each ","@options [] ","w booted? "]}," Puma Cluster fork_worker!":{"type":"method","name":"fork_worker!","children":[],"call":[" phased_restart ","worker phase ","w index == ","w index ","@workers find "]}," Puma Cluster spawn_worker":{"type":"method","name":"spawn_worker","children":[],"call":["@launcher config run_hooks ","@launcher events ","@launcher config "," exit! "," log ","pid ! "," worker "," fork ","@config run_hooks "]}," Puma Cluster Worker ping_timeout":{"type":"method","name":"ping_timeout","children":[],"call":["@last_checkin + ","@options [] "," booted? "]}," Puma Client can_close?":{"type":"method","name":"can_close?","children":[],"call":["@parsed_bytes == ","@requests_served > "]}," Puma Binder socket_activation_fd":{"type":"method","name":"socket_activation_fd","children":[],"call":["int + "]}," Puma Binder redirects_for_restart_env":{"type":"method","name":"redirects_for_restart_env","children":[],"call":["memo []= ","listen [] ","listen [] to_i "," listeners each_with_object with_index "," listeners each_with_object "," listeners ","@listeners each_with_object with_index ","@listeners each_with_object "]}," Puma Binder create_activated_fds":{"type":"method","name":"create_activated_fds","children":[],"call":["@events debug ","key join ","@activated_sockets []= ","addr =~ ","Socket  unpack_sockaddr_in ","sock getsockname ","Socket  unpack_sockaddr_un ","TCPServer  for_fd "," socket_activation_fd ","env_hash [] to_i times ","env_hash [] to_i ","env_hash [] ","env_hash [] to_i == ","env_hash [] inspect ","ENV  [] inspect ","ENV  [] ","@log_writer debug ","@activated_TCPServer  for_fd ets []= ","Socket  unpack_TCPServer  for_fd addr_in ","TCPServer  for_fd  getTCPServer  for_fd name ","Socket  unpack_TCPServer  for_fd addr_un "," TCPServer  for_fd et_activation_fd "]}," Puma Binder create_inherited_fds":{"type":"method","name":"create_inherited_fds","children":[],"call":["(send\n  (block\n    (send\n      (lvar :env_hash) :select)\n    (args\n      (arg :k)\n      (arg :v))\n    (send\n      (lvar :k) :=~\n      (regexp\n        (str \"PUMA_INHERIT_\\\\d+\")\n        (regopt)))) :each) keys ","@inherited_fds []= ","fd to_i ","v split ","(send\n  (lvar :env_hash) :select) each ","k =~ ","env_hash select "]}," Puma Binder connected_ports":{"type":"method","name":"connected_ports","children":[],"call":["(send\n  (send nil :ios) :map) uniq ","io addr [] ","io addr "," ios map "," ios ","t uniq! "]}," Puma ThreadPool with_force_shutdown":{"type":"method","name":"with_force_shutdown","children":[],"call":["t []= "," raise ","@shutdown_mutex synchronize ","Thread  current ","Thread  current  []= ","@shuThread  current down_muThread  current ex synchronize ","Thread  currenThread  current  "]}," Puma Server closed_socket_supported?":{"type":"method","name":"closed_socket_supported?","children":[],"call":["Socket  const_defined? ","RbConfig CONFIG  [] =~ ","RbConfig CONFIG  [] "]}," Puma Util nakayoshi_gc":{"type":"method","name":"nakayoshi_gc","children":[],"call":["events log ","GC  compact ","GC  respond_to? ","GC  start ","4 times "]}," Puma Server client_error":{"type":"method","name":"client_error","children":[],"call":["@events unknown_error ","client write_error ","@events parse_error ","@events ssl_error ","client io "," lowlevel_error ","client env ","(const nil :ConnectionError) include? ","e class "," write_response ","@log_writer unknown_error ","@log_writer parse_error ","@log_writer ssl_error "," response_to_error "]}," Puma Server with_force_shutdown":{"type":"method","name":"with_force_shutdown","children":[],"call":["client timeout! ","@thread_pool with_force_shutdown "]}," Puma Server reactor_wakeup":{"type":"method","name":"reactor_wakeup","children":[],"call":["client close "," client_error ","client timeout! ","client timeout == ","client timeout ","@thread_pool << ","client can_close? ! ","client can_close? ","client try_to_finish ","@queue_requests ! ","client set_timeout "]}," Puma Request str_headers":{"type":"method","name":"str_headers","children":[],"call":["lines << ","res_info [] ","res_info [] ! ","lines append "," possible_header_injection? ","vs to_s split each ","vs to_s split ","vs to_s ","vs to_s empty? ! ","vs to_s empty? ","vs respond_to? ","res_info []= ","k downcase ","headers each ","STATUS_WITH_NO_ENTITY_BODY  [] ","status < "," fetch_status_code ","status to_s ","status == ","env fetch downcase == ","env fetch downcase ","env fetch ","env fetch downcase != ","env [] == ","env [] "," illegal_header_value? "," illegal_header_key? ","IO  select ! ","IO  select ","client listener ","@thread_pool busy_threads < ","@thread_pool busy_threads ","requests < ","client listener to_io wait_readable ! ","client listener to_io wait_readable ","client listener to_io ","io_buffer << ","resp_info [] ","resp_info [] ! ","io_buffer append ","ary each ","vs empty? ! ","vs empty? ","vs is_a? ","resp_info []= "]}," Puma Request str_early_hints":{"type":"method","name":"str_early_hints","children":[],"call":["(begin\n  (lvar :eh_str)) freeze ","eh_str << "," possible_header_injection? ","vs to_s split each ","vs to_s split ","vs to_s ","vs to_s empty? ! ","vs to_s empty? ","vs respond_to? ","headers each_pair ","HTTP/1.1 103 Early Hints\r\n dup "," illegal_header_value? "," illegal_header_key? ","HTTP/1.1 103 Early Hints\r\n +@ ","eh_str freeze ","(or\n  (send\n    (send\n      (lvar :vs) :to_s) :empty?)\n  (send\n    (send nil :illegal_header_value?\n      (lvar :vs)) :!)) ! "," illegal_header_value? ! "," +@ ","(begin\n  (lvar :HTTP/1.1 103 Early Hints\r\n dup )) freeze ","(begin\n  (lvar :HTTP/1.1 103 Early Hints\r\n +@ )) freeze ","(begin\n  (lvar : +@ )) freeze ","HTTP/1.1 103 Early Hints\r\n dup  << ","HTTP/1.1 103 Early Hints\r\n +@  << "," +@  << ","HTTP/1.1 103 Early Hints\r\n dup  freeze ","HTTP/1.1 103 Early Hints\r\n +@  freeze "," +@  freeze "]}," Puma Request req_env_post_parse":{"type":"method","name":"req_env_post_parse","children":[],"call":["env merge! ","env delete ","to_delete each ","to_add []= ","k tr ","to_delete << ","k != ","k include? ","k start_with? ","env each "]}," Puma Request possible_header_injection?":{"type":"method","name":"possible_header_injection?","children":[],"call":["(send\n  (const nil :HTTP_INJECTION_REGEX) :=~\n  (send\n    (lvar :header_value) :to_s)) ! ! ","(send\n  (const nil :HTTP_INJECTION_REGEX) :=~\n  (send\n    (lvar :header_value) :to_s)) ! ","HTTP_INJECTION_REGEX  =~ ","header_value to_s "]}," Puma Request normalize_env":{"type":"method","name":"normalize_env","children":[],"call":["env []= ","addr empty? ","client peerip ","env key? ","env [] ","uri query "," raise ","uri path ","URI  parse "," default_server_port ","host [] ","host bytesize ","colon + ","host index ","host start_with? ! ","host start_with? ","host rindex ","client peer_family == ","client peer_family ","env [] to_s ","client peerip  empty? ","URI  parse  query ","URI  parse  path ","env []  [] ","env []  bytesize ","host index  + ","host rindex  + ","env []  index ","env []  start_with? ! ","env []  start_with? ","env []  rindex "]}," Puma Request fetch_status_code":{"type":"method","name":"fetch_status_code","children":[],"call":["HTTP_STATUS_CODES  fetch "]}," Puma Request fast_write":{"type":"method","name":"fast_write","children":[],"call":["str byteslice ","n == ","str bytesize "," raise ","IO  select ! ","IO  select ","io syswrite ","io wait_writable ","str byteslice  byteslice ","io syswrite  == ","str byteslice  bytesize "]}," Puma Request default_server_port":{"type":"method","name":"default_server_port","children":[],"call":["env [] == ","env [] ","env [] to_s [] == ","env [] to_s [] ","env [] to_s ","(str \"on\") include? "]}," Puma Request handle_request":{"type":"method","name":"handle_request","children":[],"call":["res_info [] ","o call ","after_reply each ","res_body close ","res_body respond_to? ","client tempfile unlink ","client tempfile ","body close "," uncork_socket "," raise ","io flush "," fast_write ","part bytesize to_s << << << ","part bytesize to_s << << ","part bytesize to_s << ","part bytesize to_s ","part bytesize ","part bytesize zero? ","res_body each ","response_hijack call ","lines to_s ","lines << ","response_hijack ! ","lines append ","content_length to_s ","status != "," str_headers "," cork_socket ","res_info []= ","res_body [] bytesize ","res_body [] ","res_body size == ","res_body size ","res_body kind_of? "," lowlevel_error ","@events unknown_error ","@events log ","res_body == ","headers empty? ","status == ","status to_i ","client hijacked ","@app call ","@thread_pool with_force_shutdown ","env []= "," req_env_post_parse ","@events debug_error "," str_early_hints "," lambda "," default_server_port == "," default_server_port ","env [] == ","env [] ","client body ","io peercert "," normalize_env "," closed_socket? ","client io ","client env "," write_response ","@log_writer debug_error "," prepare_response ","@log_writer unknown_error ","@log_writer log ","SUPPORTED_HTTP_METHODS  include? "," fast_write_str ","socket peercert ","after_reply empty? ","app_body close ","app_body respond_to? ","io_buffer reset ","client io_buffer ","client http_content_length_limit_exceeded ","@supported_http_methods key? ","@supported_http_methods == ","(lvasgn :str\n  (send nil :str_early_hints\n    (lvar :headers))) empty? ","env []=  each ","res_client body  close ","res_client body  respond_to? ","client body  close "," uncork_client io  ","client io  flush ","res_client body  each ","res_info []  call ","res_info []  ! ","res_info []  to_s ","status to_i  != "," part bytesize to_s << << << _headers ","  str_early_hints _headers "," str_env [] == ers "," cork_client io  ","res_client body  [] bytesize ","res_client body  [] ","res_client body  size == ","res_client body  size ","res_client body  kind_of? ","res_client body  == ","env [] == ers empty? ","status to_i  == ","status to_i  to_i ","client env  []= "," req_client env _post_parse "," part bytesize to_s << << << _early_hints ","  str_early_hints _early_hints ","client env  [] == ","client env  [] ","client client body  ","client io  peercert "," normalize_client env  "," closed_client io ? ","client client io  ","client client env  "," fast_write_part bytesize to_s << << <<  "," fast_write_ str_early_hints  ","env []=  empty? ","app_client body  close ","app_client body  respond_to? ","client io _buffer reset ","client io_buffer  reset ","client client io _buffer ","client client io_buffer  ","client http_res_info [] _limit_exceeded ","(lvasgn :part bytesize to_s << << << \n  (send nil :part bytesize to_s << << << _early_hints\n    (lvar :headers))) empty? ","(lvasgn : str_early_hints \n  (send nil : str_early_hints _early_hints\n    (lvar :headers))) empty? ","(lvasgn :str\n  (send nil :str_early_hints\n    (lvar :env [] == ers))) empty? "]}," Puma Reactor wakeup!":{"type":"method","name":"wakeup!","children":[],"call":["@timeouts delete ","@selector deregister ","@block call ","client to_io "]}," Puma Reactor register":{"type":"method","name":"register","children":[],"call":["@timeouts << ","@selector register value= ","@selector register ","client to_io "]}," Puma Reactor select_loop":{"type":"method","name":"select_loop","children":[],"call":["@selector close ","@timeouts each ","STDERR  puts ","e backtrace ","e class ","e message ","@timeouts sort_by! "," register ","client io_ok? ","@input pop ","@input empty? ","timed_out each "," method ","t timeout == ","t timeout ","@timeouts take_while "," wakeup! ","mon value ","@selector select ","earliest timeout ","@timeouts first ","@input closed? ","NoMethodError  === ","@input pop  io_ok? ","@timeouts first  timeout "]}," Puma QueueClose push":{"type":"method","name":"push","children":[],"call":[" raise "," closed? "]}," Puma QueueClose closed?":{"type":"method","name":"closed?","children":[],"call":[]}," Puma QueueClose close":{"type":"method","name":"close","children":[],"call":[" push "," num_waiting times "," num_waiting "]}," Puma QueueClose initialize":{"type":"method","name":"initialize","children":[],"call":[]}," Puma Launcher files_to_require_after_prune":{"type":"method","name":"files_to_require_after_prune","children":[],"call":[" require_paths_for_gem + "," extra_runtime_deps_directories "," require_paths_for_gem "," spec_for_gem "]}," Puma Cluster WorkerHandle hup":{"type":"method","name":"hup","children":[],"call":["Process  kill "]}," Puma Cluster WorkerHandle kill":{"type":"method","name":"kill","children":[],"call":[" term "]}," Puma Cluster WorkerHandle term":{"type":"method","name":"term","children":[],"call":["Process  kill ","Time  now ","(send\n  (send\n    (const nil :Time) :now) :-\n  (ivar :@first_term_sent)) > ","@options [] ","Time  now - "]}," Puma Cluster WorkerHandle ping_timeout":{"type":"method","name":"ping_timeout","children":[],"call":["@last_checkin + ","@options [] "," booted? "]}," Puma Cluster WorkerHandle ping!":{"type":"method","name":"ping!","children":[],"call":["JSON  parse "," require ","Time  now ","hash []= ","captures [] to_i ","captures [] ","key to_sym ","captures names inject ","captures names ","status match ","status match  [] to_i ","status match  [] ","status match  names inject ","status match  names "]}," Puma Cluster WorkerHandle term?":{"type":"method","name":"term?","children":[],"call":[]}," Puma Cluster WorkerHandle boot!":{"type":"method","name":"boot!","children":[],"call":["Time  now "]}," Puma Cluster WorkerHandle booted?":{"type":"method","name":"booted?","children":[],"call":["@stage == "]}," Puma Cluster WorkerHandle initialize":{"type":"method","name":"initialize","children":[],"call":["Time  now "]}," Puma Cluster Worker wakeup!":{"type":"method","name":"wakeup!","children":[],"call":["Thread  current purge_interrupt_queue ","Thread  current ","Thread  current respond_to? ","@wakeup write ","@wakeup closed? "]}," Puma Cluster Worker spawn_worker":{"type":"method","name":"spawn_worker","children":[],"call":["@launcher config run_hooks ","@launcher events ","@launcher config "," exit! "," log ","pid ! ","new_worker run ","Worker  new "," master "," fork ","@config run_hooks ","Worker  new  run "]}," Puma Cluster Worker run":{"type":"method","name":"run","children":[],"call":["@worker_write close ","@worker_write << ","Process  pid ","@launcher config run_hooks ","@launcher events "," index ","@launcher config ","server_thread join "," sleep ","Thread  current purge_interrupt_queue ","Thread  current ","Thread  current respond_to? ","io << ","server stats to_json ","server stats "," require ","Puma  set_thread_name ","Thread  new ","server run ","restart_server pop ","STDERR  puts ","restart_server << ","server stop ","restart_server clear ","Signal  trap ","worker_pids << "," spawn_worker ","restart_server << << ","idx == ","Puma Util  nakayoshi_gc ","@options [] ","server begin_restart ","restart_server length > ","restart_server length ","idx to_i ","@fork_pipe gets "," wakeup! ","Process  wait ","worker_pids reject! "," index == ","Queue  new << << ","Queue  new << ","Queue  new "," start_server "," log ","File  expand_path ","File  exist? ","ENV  [] ! ","ENV  [] "," exit! ","IO  select ","@options [] empty? ! ","@options [] empty? "," master ","server requests_count ","server max_threads ","server pool_capacity ","server running ","server backlog "," exit ","e backtrace [] ","e backtrace ","@check_pipe wait_readable ","Puma Util  purge_interrupt_queue ","@config run_hooks ","e backtrace join "," debug_loaded_extensions ","@log_writer debug? ","Process   spawn_worker  ","server run  join ","Queue  new << <<  pop ","Queue  new << <<  << ","Queue  new << <<  clear ","worker_ spawn_worker s << ","Queue  new << <<  << << ","idx to_i  == ","@fork_pipe gets  == ","Queue  new << <<  length > ","Queue  new << <<  length ","idx to_i  to_i ","@fork_pipe gets  to_i ","worker_ spawn_worker s reject! "]}," Puma Client timeout!":{"type":"method","name":"timeout!","children":[],"call":[" raise "," write_error "," in_data_phase "]}," Puma Client timeout":{"type":"method","name":"timeout","children":[],"call":["(send\n  (ivar :@timeout_at) :-\n  (send\n    (const nil :Process) :clock_gettime\n    (const\n      (const nil :Process) :CLOCK_MONOTONIC))) max ","@timeout_at - ","Process  clock_gettime "]}," Puma Client io_ok?":{"type":"method","name":"io_ok?","children":[],"call":[" closed? ! "," closed? ","@to_io is_a? "]}," Puma Systemd log":{"type":"method","name":"log","children":[],"call":["@events log ","@log_writer log "]}," Puma Systemd watchdog_sleep_time":{"type":"method","name":"watchdog_sleep_time","children":[],"call":["sec_f / ","usec / "," Integer ","ENV  [] ","usec /  / "," Integer  / "]}," Puma Systemd start_watchdog":{"type":"method","name":"start_watchdog","children":[],"call":["SdNotify  watchdog "," sleep "," loop ","Thread  new "," log ","ping_f round "," watchdog_sleep_time ","SdNotify  watchdog? "," watchdog_sleep_time  round "]}," Puma Systemd hook_events":{"type":"method","name":"hook_events","children":[],"call":["SdNotify  reloading ","@events on_restart ","SdNotify  stopping ","@events on_stopped ","SdNotify  ready ","@events on_booted "]}," Puma Systemd initialize":{"type":"method","name":"initialize","children":[],"call":[]}," Puma Request illegal_header_value?":{"type":"method","name":"illegal_header_value?","children":[],"call":["(send\n  (const nil :ILLEGAL_HEADER_VALUE_REGEX) :=~\n  (send\n    (lvar :header_value) :to_s)) ! ! ","(send\n  (const nil :ILLEGAL_HEADER_VALUE_REGEX) :=~\n  (send\n    (lvar :header_value) :to_s)) ! ","ILLEGAL_HEADER_VALUE_REGEX  =~ ","header_value to_s "]}," Puma Request illegal_header_key?":{"type":"method","name":"illegal_header_key?","children":[],"call":["(send\n  (const nil :ILLEGAL_HEADER_KEY_REGEX) :=~\n  (send\n    (lvar :header_key) :to_s)) ! ! ","(send\n  (const nil :ILLEGAL_HEADER_KEY_REGEX) :=~\n  (send\n    (lvar :header_key) :to_s)) ! ","ILLEGAL_HEADER_KEY_REGEX  =~ ","header_key to_s "]}," Puma Launcher log_config":{"type":"method","name":"log_config","children":[],"call":[" log ","@config final_options each ","@config final_options "]}," Puma Launcher integrate_with_systemd":{"type":"method","name":"integrate_with_systemd","children":[],"call":["systemd start_watchdog ","systemd hook_events ","Systemd  new "," log "," require ","ENV  [] "," require_relative ","Systemd  new  start_watchdog ","Systemd  new  hook_events "]}," Puma JSON serialize_object_key":{"type":"method","name":"serialize_object_key","children":[],"call":[" raise ","value class "," serialize_string ","value to_s "]}," Puma JSON serialize_string":{"type":"method","name":"serialize_string","children":[],"call":["output << ","\\u%.4X % ","character ord ","value gsub "]}," Puma JSON serialize_value":{"type":"method","name":"serialize_value","children":[],"call":[" raise ","value class ","output << "," serialize_string ","value to_s "," serialize_value ","index != ","value each_with_index "," serialize_object_key "]}," Puma JSON generate":{"type":"method","name":"generate","children":[],"call":["io string "," serialize_value ","StringIO  open "]}," Puma Events fire_on_stopped!":{"type":"method","name":"fire_on_stopped!","children":[],"call":[" fire "]}," Puma Events fire_on_restart!":{"type":"method","name":"fire_on_restart!","children":[],"call":[" fire "]}," Puma Events on_stopped":{"type":"method","name":"on_stopped","children":[],"call":[" register "]}," Puma Events on_restart":{"type":"method","name":"on_restart","children":[],"call":[" register "]}," Puma DSL max_fast_inline":{"type":"method","name":"max_fast_inline","children":[],"call":["@options []= "," Float "]}," Puma DSL bind_to_activated_sockets":{"type":"method","name":"bind_to_activated_sockets","children":[],"call":["@options []= "]}," Puma DSL ssl_bind_str":{"type":"method","name":"ssl_bind_str","children":[],"call":[]}," Puma Configuration final_options":{"type":"method","name":"final_options","children":[],"call":["@options final_options "]}," Puma UserFileDefaultOptions final_options":{"type":"method","name":"final_options","children":[],"call":[" default_options merge merge "," user_options "," default_options merge "," file_options "," default_options "]}," Puma Binder synthesize_binds_from_activated_fs":{"type":"method","name":"synthesize_binds_from_activated_fs","children":[],"call":["binds | ","activated_binds << ","bind start_with? ","bind == ","binds find "," activated_sockets keys each "," activated_sockets keys "," activated_sockets "," activated_sockets any? "]}," Puma NullIO string":{"type":"method","name":"string","children":[],"call":[]}," Puma MiniSSL Server closed?":{"type":"method","name":"closed?","children":[],"call":["@socket closed? "]}," Puma ErrorLogger log":{"type":"method","name":"log","children":[],"call":[" ioerr flush "," ioerr "," ioerr sync "," ioerr puts "]}," Puma DSL io_selector_backend":{"type":"method","name":"io_selector_backend","children":[],"call":["@options []= ","backend to_sym "]}," Puma Binder loc_addr_str":{"type":"method","name":"loc_addr_str","children":[],"call":["loc_addr ip_unpack join ","loc_addr ip_unpack ","loc_addr ip_unpack [] ","loc_addr ipv6? ","io to_io local_address ","io to_io ","io to_io local_address  ip_unpack join ","io to_io local_address  ip_unpack ","io to_io local_address  ip_unpack [] ","io to_io local_address  ipv6? "]}," Puma NullIO flush":{"type":"method","name":"flush","children":[],"call":[]}," Puma NullIO sync":{"type":"method","name":"sync","children":[],"call":[]}," Puma DSL mutate_stdout_and_stderr_to_sync_on_write":{"type":"method","name":"mutate_stdout_and_stderr_to_sync_on_write","children":[],"call":["@options []= "]}," Puma abstract_unix_socket?":{"type":"method","name":"abstract_unix_socket?","children":[],"call":[]}," Puma QueueClose pop":{"type":"method","name":"pop","children":[],"call":[" empty? "," closed? ","non_block ! "]}," Puma DSL silence_single_worker_warning":{"type":"method","name":"silence_single_worker_warning","children":[],"call":["@options []= "]}," Puma Cluster single_worker_warning":{"type":"method","name":"single_worker_warning","children":[],"call":[" log ","@options [] ","@options [] != "]}," Puma Cluster WorkerHandle uptime":{"type":"method","name":"uptime","children":[],"call":["Time  now - "," started_at ","Time  now "]}," Puma JSONSerialization serialize_object_key":{"type":"method","name":"serialize_object_key","children":[],"call":[" raise ","value class "," serialize_string ","value to_s "]}," Puma JSONSerialization serialize_string":{"type":"method","name":"serialize_string","children":[],"call":["output << ","\\u%.4X % ","character ord ","value gsub "]}," Puma JSONSerialization serialize_value":{"type":"method","name":"serialize_value","children":[],"call":[" raise ","value class ","output << "," serialize_string ","value to_s "," serialize_value ","index != ","value each_with_index "," serialize_object_key "]}," Puma JSONSerialization generate":{"type":"method","name":"generate","children":[],"call":["io string "," serialize_value ","StringIO  open "]}," Puma DSL rack_url_scheme":{"type":"method","name":"rack_url_scheme","children":[],"call":["@options []= "]}," Puma Client expect_proxy_proto=":{"type":"method","name":"expect_proxy_proto=","children":[],"call":[]}," Puma Client try_to_parse_proxy_protocol":{"type":"method","name":"try_to_parse_proxy_protocol","children":[],"call":["@buffer size > ","@buffer size ","md post_match ","md [] split [] ","md [] split ","md [] ","PROXY_PROTOCOL_V1_REGEX  match ","@buffer include? ","@expect_proxy_proto == ","md post_match  size > ","md post_match  size ","PROXY_PROTOCOL_V1_REGEX  match  post_match ","PROXY_PROTOCOL_V1_REGEX  match  [] split [] ","PROXY_PROTOCOL_V1_REGEX  match  [] split ","PROXY_PROTOCOL_V1_REGEX  match  [] ","md post_match  include? "]}," Puma Binder localhost_authority_context":{"type":"method","name":"localhost_authority_context","children":[],"call":["MiniSSL ContextBuilder  new context ","MiniSSL ContextBuilder  new ","File  join ","File  expand_path "," localhost_authority certificate_path "," localhost_authority "," localhost_authority key_path "," localhost_authority respond_to? ","(sym :key_path) all? "]}," Puma Binder localhost_authority":{"type":"method","name":"localhost_authority","children":[],"call":["Localhost Authority  fetch ","Puma IS_JRUBY  ! "]}," Puma Util purge_interrupt_queue":{"type":"method","name":"purge_interrupt_queue","children":[],"call":["Thread  current purge_interrupt_queue ","Thread  current ","Thread  current respond_to? "]}," Puma Runner ensure_output_directory_exists":{"type":"method","name":"ensure_output_directory_exists","children":[],"call":[" raise ","Dir  exist? ","File  dirname "]}," Puma Runner wakeup!":{"type":"method","name":"wakeup!","children":[],"call":["Puma Util  purge_interrupt_queue ","@wakeup write ","@wakeup closed? "]}," Puma Request write_response":{"type":"method","name":"write_response","children":[],"call":["res_info [] ","o call ","after_reply each ","res_body close ","res_body respond_to? ","client tempfile unlink ","client tempfile ","client body close ","client body "," uncork_socket "," raise ","io flush "," fast_write ","part bytesize to_s << ","part bytesize to_s ","part bytesize ","part bytesize zero? ","res_body each ","response_hijack call ","lines to_s ","lines << ","response_hijack ! ","lines append ","content_length to_s ","status != "," str_headers "," cork_socket ","res_info []= ","res_body [] bytesize ","res_body [] ","res_body size == ","res_body size ","res_body kind_of? ","env [] ","env [] == ","lines clear "," closed_socket? ","client io ","client env ","client io  flush ","res_info []  call ","res_info []  ! ","res_info []  to_s "," str_env [] == ers ","client env  [] ","client env  [] == ","client client io  ","client client env  "]}," Puma MiniSSL Context key_pem=":{"type":"method","name":"key_pem=","children":[],"call":[" raise ","key_pem is_a? "]}," Puma MiniSSL Context cert_pem=":{"type":"method","name":"cert_pem=","children":[],"call":[" raise ","cert_pem is_a? "]}," Puma DSL add_pem_values_to_options_store":{"type":"method","name":"add_pem_values_to_options_store","children":[],"call":["opts []= ","@options [] << ","opts [] ","@options [] ","@options [] length ","(sym :cert) each "]}," Puma DSL worker_culling_strategy":{"type":"method","name":"worker_culling_strategy","children":[],"call":["@options []= "," raise ","(sym :youngest) include? ! ","(sym :youngest) include? ","strategy to_sym "]}," Puma DSL worker_check_interval":{"type":"method","name":"worker_check_interval","children":[],"call":["@options []= "," Integer "]}," Puma osx?":{"type":"method","name":"osx?","children":[],"call":[]}," Puma Cluster cull_start_index":{"type":"method","name":"cull_start_index","children":[],"call":["diff -@ ","@options [] "]}," Puma Cluster workers_to_cull":{"type":"method","name":"workers_to_cull","children":[],"call":["workers [] "," cull_start_index ","w index == ","w index ","workers reject! ","@options [] ","@workers sort_by ","@workers sort_by  [] ","@workers sort_by  reject! ","@@workers sort_by  sort_by "]}," Puma Cluster WorkerHandle term!":{"type":"method","name":"term!","children":[],"call":[]}," Puma Util escape":{"type":"method","name":"escape","children":[],"call":["URI  encode_www_form_component "]}," Puma NullIO closed?":{"type":"method","name":"closed?","children":[],"call":[]}," Puma MiniSSL Context check_file":{"type":"method","name":"check_file","children":[],"call":[" raise ","File  readable? ","File  exist? "]}," Puma Launcher refork":{"type":"method","name":"refork","children":[],"call":[" log ","@runner fork_worker! ","@options [] ","@runner respond_to? "," clustered? "]}," Puma Runner stats":{"type":"method","name":"stats","children":[],"call":[]}," Puma Request fast_write_response":{"type":"method","name":"fast_write_response","children":[],"call":[" raise "," fast_write_str ","io_buffer to_s ","io_buffer length zero? ","io_buffer length ","io_buffer reset ","io_buffer length > ","io_buffer write ","part bytesize zero? ","part bytesize ","body each ","io_buffer append ","byte_size to_s ","(lvasgn :byte_size\n  (send\n    (lvar :part) :bytesize)) zero? ","body_first bytesize >= ","body_first bytesize ","body_first is_a? ","body first ","body length == ","body length ","body is_a? ","body close ","IO  copy_stream ","body sysread ","content_length <= ","io_buffer << ","part bytesize to_s ","body read ","body respond_to? ","socket flush ","byte_size to_s << ","io_buffer read_and_reset ","body_first bytesize < ","chunk bytesize to_s ","chunk bytesize ","part nil? ","body read  bytesize zero? ","body read  bytesize ","part bytesize  to_s ","(lvasgn :part bytesize \n  (send\n    (lvar :part) :bytesize)) zero? ","(lvasgn :byte_size\n  (send\n    (lvar :body read ) :bytesize)) zero? ","body first  bytesize >= ","body first  bytesize ","body first  is_a? ","body read  bytesize to_s ","part bytesize  to_s << ","body first  bytesize < ","body read  nil? "]}," Puma Request fast_write_str":{"type":"method","name":"fast_write_str","children":[],"call":[" raise ","socket wait_writable ","socket syswrite ","str byteslice ","n zero? ","n < ","str bytesize ","socket write_nonblock "]}," Puma Request prepare_response":{"type":"method","name":"prepare_response","children":[],"call":["@log_writer debug_error ","o call ","after_reply each ","after_reply empty? ","client tempfile ","app_body close ","app_body respond_to? "," uncork_socket ","io_buffer reset "," fast_write_response ","content_length to_i ","response_hijack call "," fast_write_str ","io_buffer to_s ","io_buffer << ","resp_info [] ","response_hijack ! ","io_buffer append ","content_length to_s ","status != "," cork_socket ","app_body respond_to? ! ","resp_info []= ","body size ","File  open ","File  readable? ","app_body to_path ","app_body is_a? ! ","app_body is_a? ","app_body size ","body << ","part bytesize ","app_body each ","array_body map ","app_body to_ary ","resp_info [] ! "," str_headers "," closed_socket? ","env [] ","client io ","client env ","body close ","io_buffer read_and_reset ","socket flush ","res_body respond_to? ! ","res_body respond_to? ","res_body to_hash [] ","res_body to_hash ","res_body bytesize ","res_body filename ","res_body is_a? ! ","res_body is_a? ","res_body to_path ","body sum ","res_body to_ary ","client listener to_io wait_readable ! ","client listener to_io wait_readable ","client listener to_io ","client listener ","@thread_pool busy_threads < ","@thread_pool busy_threads ","requests < ","client io_buffer ","status == ","array_body is_a? ","content_length ! ","array_body compact ","app_File  open  close ","app_array_body compact  close ","app_File  open  respond_to? ","app_array_body compact  respond_to? "," uncork_client io  ","client io_buffer  reset ","resp_info []  to_i ","res_body bytesize  to_i ","body size  to_i ","body sum  to_i ","content_app_body size  to_i ","resp_info []  call ","client io_buffer  to_s ","client io_buffer  << "," str_headers  [] ","resp_info []  ! ","client io_buffer  append ","resp_info []  to_s ","res_body bytesize  to_s ","body size  to_s ","body sum  to_s ","content_app_body size  to_s "," cork_client io  ","app_File  open  respond_to? ! ","app_array_body compact  respond_to? ! "," str_headers  []= ","File  open  size ","array_body compact  size ","app_File  open  to_path ","app_array_body compact  to_path ","app_File  open  is_a? ! ","app_array_body compact  is_a? ! ","app_File  open  is_a? ","app_array_body compact  is_a? ","app_File  open  size ","app_array_body compact  size ","File  open  << ","array_body compact  << ","app_File  open  each ","app_array_body compact  each ","array_File  open  map ","array_array_body compact  map ","app_body to_ary  map ","res_body to_ary  map ","app_File  open  to_ary ","app_array_body compact  to_ary "," str_headers  [] ! "," closed_client io ? ","client env  [] ","client client env  ","File  open  close ","array_body compact  close ","client io_buffer  read_and_reset ","client io  flush ","res_File  open  respond_to? ! ","res_array_body compact  respond_to? ! ","res_File  open  respond_to? ","res_array_body compact  respond_to? ","res_File  open  to_hash [] ","res_array_body compact  to_hash [] ","res_File  open  to_hash ","res_array_body compact  to_hash ","res_File  open  bytesize ","res_array_body compact  bytesize ","res_File  open  filename ","res_array_body compact  filename ","res_File  open  is_a? ! ","res_array_body compact  is_a? ! ","res_File  open  is_a? ","res_array_body compact  is_a? ","res_File  open  to_path ","res_array_body compact  to_path ","File  open  sum ","array_body compact  sum ","res_File  open  to_ary ","res_array_body compact  to_ary ","client client io_buffer  ","array_File  open  is_a? ","array_array_body compact  is_a? ","app_body to_ary  is_a? ","res_body to_ary  is_a? ","res_body bytesize  ! ","body size  ! ","body sum  ! ","content_app_body size  ! ","array_File  open  compact ","array_array_body compact  compact ","app_body to_ary  compact ","res_body to_ary  compact "]}," Puma MiniSSL Context reuse=":{"type":"method","name":"reuse=","children":[],"call":["reuse_str delete to_i ","reuse_str delete ","time to_i ","size to_i ","reuse_str split ","reuse_str to_i "]}," Puma MiniSSL Context protocols=":{"type":"method","name":"protocols=","children":[],"call":["list split map ","list split ","list is_a? ","list split map  split map ","list split map  split ","list split map  is_a? "]}," Puma MiniSSL Context cipher_suites=":{"type":"method","name":"cipher_suites=","children":[],"call":["list split map ","list split ","list is_a? ","list split map  split map ","list split map  split ","list split map  is_a? "]}," Puma MiniSSL Context truststore_type=":{"type":"method","name":"truststore_type=","children":[],"call":[" raise ","type inspect ","(str \"pkcs12\") include? "]}," Puma MiniSSL Context keystore_type=":{"type":"method","name":"keystore_type=","children":[],"call":[" raise ","type inspect ","(str \"pkcs12\") include? "]}," Puma MiniSSL Context truststore=":{"type":"method","name":"truststore=","children":[],"call":[" raise ","File  exist? ","truststore eql? "]}," Puma LogWriter debug_error":{"type":"method","name":"debug_error","children":[],"call":["@error_logger debug "]}," Puma LogWriter unknown_error":{"type":"method","name":"unknown_error","children":[],"call":["@error_logger info "]}," Puma LogWriter ssl_error":{"type":"method","name":"ssl_error","children":[],"call":["@error_logger info ","peercert subject ","ssl_socket peercert ","ssl_socket peeraddr last ","ssl_socket peeraddr ","peercert peercert subject  ","ssl_socket peercert  subject ","ssl_socket ssl_socket peercert  "]}," Puma LogWriter parse_error":{"type":"method","name":"parse_error","children":[],"call":["@error_logger info "]}," Puma LogWriter connection_error":{"type":"method","name":"connection_error","children":[],"call":["@error_logger info "]}," Puma LogWriter format":{"type":"method","name":"format","children":[],"call":[" formatter call "," formatter "]}," Puma LogWriter error":{"type":"method","name":"error","children":[],"call":[" exit ","@error_logger info ","@formatter call "]}," Puma LogWriter debug":{"type":"method","name":"debug","children":[],"call":[" log "]}," Puma LogWriter internal_write":{"type":"method","name":"internal_write","children":[],"call":["@stdout flush ","@stdout sync ","@stdout write ","@stdout wait_writable ","@stdout is_a? ","LOG_QUEUE  pop ","LOG_QUEUE  << "]}," Puma LogWriter write":{"type":"method","name":"write","children":[],"call":[" internal_write ","@formatter call "]}," Puma LogWriter log":{"type":"method","name":"log","children":[],"call":[" internal_write ","@formatter call ","@custom_logger write "," format "]}," Puma LogWriter null":{"type":"method","name":"null","children":[],"call":[]}," Puma LogWriter stdio":{"type":"method","name":"stdio","children":[],"call":[]}," Puma LogWriter strings":{"type":"method","name":"strings","children":[],"call":[]}," Puma LogWriter initialize":{"type":"method","name":"initialize","children":[],"call":["ErrorLogger  new ","ENV  key? ","DefaultFormatter  new "]}," Puma LogWriter PidFormatter call":{"type":"method","name":"call","children":[],"call":[]}," Puma LogWriter DefaultFormatter call":{"type":"method","name":"call","children":[],"call":[]}," Puma Launcher prune_bundler!":{"type":"method","name":"prune_bundler!","children":[],"call":["BundlePruner  new prune ","BundlePruner  new ","@options [] "," prune_bundler? "]}," Puma Launcher do_restart":{"type":"method","name":"do_restart","children":[],"call":[" restart! ","@runner stop_control ","ENV  replace "," log "]}," Puma Launcher do_graceful_stop":{"type":"method","name":"do_graceful_stop","children":[],"call":["@runner stop_blocked ","@events fire_on_stopped! "]}," Puma Launcher do_forceful_stop":{"type":"method","name":"do_forceful_stop","children":[],"call":["@runner stop_control "," log "]}," Puma Launcher do_run_finished":{"type":"method","name":"do_run_finished","children":[],"call":[" close_binder_listeners ","@status == "," do_restart "," do_graceful_stop "," do_forceful_stop "]}," Puma Launcher get_env":{"type":"method","name":"get_env","children":[],"call":["ENV  to_h ","env []= ","(send\n  (lvar :env) :[]\n  (str \"RUBYOPT\")) join lstrip ","(send\n  (lvar :env) :[]\n  (str \"RUBYOPT\")) join ","env [] ","env [] to_s include? ","env [] to_s ","Bundler ORIGINAL_ENV  dup ","Bundler ORIGINAL_ENV  dup  []= ","(send\n  (lvar :Bundler ORIGINAL_ENV  dup ) :[]\n  (str \"RUBYOPT\")) join lstrip ","(send\n  (lvar :Bundler ORIGINAL_ENV  dup ) :[]\n  (str \"RUBYOPT\")) join ","Bundler ORIGINAL_ENV  dup  [] ","Bundler ORIGINAL_ENV  dup  [] to_s include? ","Bundler ORIGINAL_ENV  dup  [] to_s "]}," Puma Launcher BundlePruner log":{"type":"method","name":"log","children":[],"call":["@log_writer log "]}," Puma Launcher BundlePruner require_paths_for_gem":{"type":"method","name":"require_paths_for_gem","children":[],"call":["gem_spec full_require_paths "]}," Puma Launcher BundlePruner spec_for_gem":{"type":"method","name":"spec_for_gem","children":[],"call":["Bundler  rubygems loaded_specs ","Bundler  rubygems "]}," Puma Launcher BundlePruner puma_require_paths":{"type":"method","name":"puma_require_paths","children":[],"call":[" require_paths_for_gem "," spec_for_gem "]}," Puma Launcher BundlePruner extra_runtime_deps_paths":{"type":"method","name":"extra_runtime_deps_paths","children":[],"call":["t compact! ","t flatten! "," log "," require_paths_for_gem "," spec_for_gem ","@extra_runtime_dependencies map ","  spec_for_gem _for_gem "]}," Puma Launcher BundlePruner paths_to_require_after_prune":{"type":"method","name":"paths_to_require_after_prune","children":[],"call":[" puma_require_paths + "," extra_runtime_deps_paths "," puma_require_paths "]}," Puma Launcher BundlePruner with_unbundled_env":{"type":"method","name":"with_unbundled_env","children":[],"call":["Bundler  with_unbundled_env ","Bundler  with_clean_env ","bundler_ver < ","Gem Version  new ","Gem Version  new  < "]}," Puma Launcher BundlePruner puma_wild_path":{"type":"method","name":"puma_wild_path","children":[],"call":["File  expand_path ","File  join ","File  exist? "," puma_require_paths detect "," puma_require_paths "]}," Puma Launcher BundlePruner require_rubygems_min_version!":{"type":"method","name":"require_rubygems_min_version!","children":[],"call":[" raise ","min_version <= ","Gem Version  new ","Gem Version  new  <= "]}," Puma Launcher BundlePruner prune":{"type":"method","name":"prune","children":[],"call":["Kernel  exec ","(send\n  (const nil :Gem) :ruby) + ","dirs join "," puma_wild_path ","Gem  ruby ","ENV  []= "," with_unbundled_env ","Bundler  original_env [] ","Bundler  original_env ","ENV  [] "," log "," paths_to_require_after_prune "," require_rubygems_min_version! "," paths_to_require_after_prune  join "]}," Puma Launcher BundlePruner initialize":{"type":"method","name":"initialize","children":[],"call":[" Array "]}," Puma IOBuffer empty?":{"type":"method","name":"empty?","children":[],"call":[" length zero? "," length "]}," Puma ErrorLogger internal_write":{"type":"method","name":"internal_write","children":[],"call":["@ioerr flush ","@ioerr sync ","@ioerr write ","@ioerr wait_writable ","@ioerr is_a? ","LOG_QUEUE  pop ","LOG_QUEUE  << "]}," Puma DSL process_hook":{"type":"method","name":"process_hook","children":[],"call":[" raise "," method ","@options [] << ","@options [] ","key nil? ","key to_sym ","ON_WORKER_KEY  include? ","key class "]}," Puma Configuration puma_options_from_env":{"type":"method","name":"puma_options_from_env","children":[],"call":["ENV  [] "," Integer "]}," Puma Client peer_family":{"type":"method","name":"peer_family","children":[],"call":["@io local_address afamily ","@io local_address "]}," Puma IOBuffer read_and_reset":{"type":"method","name":"read_and_reset","children":[],"call":[" rewind "," truncate "," read "]}," Puma Runner utc_iso8601":{"type":"method","name":"utc_iso8601","children":[],"call":["val utc strftime ","val utc "]}," Puma RackHandler set_host_port_to_config":{"type":"method","name":"set_host_port_to_config","children":[],"call":["config port "," Puma Configuration DEFAULTS  [] ","config bind ","uri to_s ","uri port ","URI  parse ","host =~ ","host [] == ","host [] ","config clear_binds! ","URI  parse  to_s ","URI  parse  port "]}," Puma RackHandler valid_options":{"type":"method","name":"valid_options","children":[],"call":[]}," Puma RackHandler run":{"type":"method","name":"run","children":[],"call":[" puts ","launcher stop ","launcher run "," block_given? "," Puma Launcher  new "," Puma LogWriter  stdio "," Puma LogWriter  strings ","options delete "," config "," Puma Launcher  new  stop "," Puma Launcher  new  run ","  config ig "]}," Puma RackHandler config":{"type":"method","name":"config","children":[],"call":["user_config app "," set_host_port_to_config ","default_options [] ","file_config set_default_host ","options [] ","user_config threads ","options delete split ","options delete ","user_config environment ","Rack CommonLogger  new "," require "," Puma Configuration  new ","default_options []= ","(send\n  (send\n    (lvar :options) :keys) :-\n  (lvar :user_supplied_options)) each ","options keys - ","options keys ","DEFAULT_OPTIONS  dup "," require_relative ","default_options merge "," Puma Events  new "," Rack CommonLogger  new ","user_config Rack CommonLogger  new  ","user_config  Rack CommonLogger  new  ","DEFAULT_OPTIONS  dup  [] ","DEFAULT_OPTIONS  dup  []= ","(send\n  (send\n    (lvar :options) :keys) :-\n  (lvar :options delete )) each ","DEFAULT_OPTIONS  dup  merge "]}," Puma SdNotify notify":{"type":"method","name":"notify","children":[],"call":[]}," Puma SdNotify watchdog?":{"type":"method","name":"watchdog?","children":[],"call":[]}," Puma SdNotify fdstore":{"type":"method","name":"fdstore","children":[],"call":[]}," Puma SdNotify watchdog":{"type":"method","name":"watchdog","children":[],"call":[]}," Puma SdNotify mainpid":{"type":"method","name":"mainpid","children":[],"call":[]}," Puma SdNotify errno":{"type":"method","name":"errno","children":[],"call":[]}," Puma SdNotify status":{"type":"method","name":"status","children":[],"call":[]}," Puma SdNotify stopping":{"type":"method","name":"stopping","children":[],"call":[]}," Puma SdNotify reloading":{"type":"method","name":"reloading","children":[],"call":[]}," Puma SdNotify ready":{"type":"method","name":"ready","children":[],"call":[]}," Puma Runner debug_loaded_extensions":{"type":"method","name":"debug_loaded_extensions","children":[],"call":["@log_writer debug ","$LOADED_FEATURES grep each ","$LOADED_FEATURES grep ","RbConfig CONFIG  [] "]}," Rack Handler default":{"type":"method","name":"default","children":[],"call":[]}," Rackup Handler default":{"type":"method","name":"default","children":[],"call":[]}," common_message":{"type":"method","name":"common_message","children":[],"call":["stats [] "]}," booted_workers":{"type":"method","name":"booted_workers","children":[],"call":[" stats fetch "," stats "]}," workers":{"type":"method","name":"workers","children":[],"call":[" stats fetch "," stats "]}," clustered?":{"type":"method","name":"clustered?","children":[],"call":[" stats has_key? "," stats "]}," stats":{"type":"method","name":"stats","children":[],"call":["Puma  stats_hash "]}," watchdog_sleep_time":{"type":"method","name":"watchdog_sleep_time","children":[],"call":["sec_f / ","usec / "," Integer ","ENV  [] ","usec /  / "," Integer  / "]}," status":{"type":"method","name":"status","children":[],"call":[" common_message "," stats "," workers "," booted_workers ","(send\n  (send\n    (send nil :stats) :[]\n    (sym :worker_status)) :map) join ","worker [] "," stats [] map "," stats [] "," clustered? "]}," Puma LogWriter debug?":{"type":"method","name":"debug?","children":[],"call":[]}," Puma DSL http_content_length_limit":{"type":"method","name":"http_content_length_limit","children":[],"call":["@options []= "]}," Puma Client above_http_content_limit":{"type":"method","name":"above_http_content_limit","children":[],"call":[]}," Puma DSL warn_if_in_single_mode":{"type":"method","name":"warn_if_in_single_mode","children":[],"call":["LogWriter  stdio log ","LogWriter  stdio ","(or\n  (send\n    (ivar :@options) :[]\n    (sym :workers))\n  (int 0)) == ","@options [] "]}," Puma DSL on_booted":{"type":"method","name":"on_booted","children":[],"call":["@config options [] on_booted ","@config options [] ","@config options "]}," Puma DSL silence_fork_callback_warning":{"type":"method","name":"silence_fork_callback_warning","children":[],"call":["@options []= "]}," Puma DSL custom_logger":{"type":"method","name":"custom_logger","children":[],"call":["@options []= "]}," Puma MiniSSL Context key_password":{"type":"method","name":"key_password","children":[],"call":[" raise ","status exitstatus ","stdout_str chomp ","status success? ","Open3  capture3 ","@key_password_command nil? "]}," Puma MiniSSL Context key_password_command=":{"type":"method","name":"key_password_command=","children":[],"call":[]}," Puma DSL supported_http_methods":{"type":"method","name":"supported_http_methods","children":[],"call":[" raise ","@options []= ","ary empty? ! ","ary empty? ","methods == ","methods grep uniq ","methods grep ","Array  === ","methods grep uniq  empty? ! ","methods grep uniq  empty? "]}," Puma ThreadPool trigger_before_thread_exit_hooks":{"type":"method","name":"trigger_before_thread_exit_hooks","children":[],"call":["STDERR  puts ","e message ","e class ","b call ","@before_thread_exit each "]}," Puma ThreadPool trigger_before_thread_start_hooks":{"type":"method","name":"trigger_before_thread_start_hooks","children":[],"call":["STDERR  puts ","e message ","e class ","b call ","@before_thread_start each "]}," Puma Server connected_ports":{"type":"method","name":"connected_ports","children":[],"call":["@binder connected_ports "]}," Puma Server response_to_error":{"type":"method","name":"response_to_error","children":[],"call":["client write_error "," prepare_response "," lowlevel_error ","client env "]}," Puma DSL on_thread_exit":{"type":"method","name":"on_thread_exit","children":[],"call":["@options [] << ","@options [] "]}," Puma DSL on_thread_start":{"type":"method","name":"on_thread_start","children":[],"call":["@options [] << ","@options [] "]}," Puma DSL idle_timeout":{"type":"method","name":"idle_timeout","children":[],"call":["@options []= "," Integer "]}," Puma Client closed?":{"type":"method","name":"closed?","children":[],"call":["@to_io closed? "]}}