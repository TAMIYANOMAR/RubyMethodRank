{" RBPDF getPathPaintOperator":{"type":"method","name":"getPathPaintOperator","children":[],"call":[" getPathPaintOperator ","default empty? ! ","default empty? "]}," RBPDF setTextRenderingMode":{"type":"method","name":"setTextRenderingMode","children":[],"call":["stroke * ","clip == ","stroke > ","fill == ","stroke < "]}," RBPDF revstrpos":{"type":"method","name":"revstrpos","children":[],"call":["length - - ","needle length ","length - ","pos nil? ","haystack reverse index ","needle reverse ","haystack reverse ","offset abs ","offset > ","haystack length ","haystack length  - - ","needle haystack length  ","haystack length  - ","haystack reverse index  nil? ","offset abs  abs ","offset abs  > ","haystack haystack length  "]}," RBPDF empty_string":{"type":"method","name":"empty_string","children":[],"call":["str length == ","str length ","str is_a? ","str nil? "]}," RBPDF objclone":{"type":"method","name":"objclone","children":[],"call":["Marshal  load ","Marshal  dump ","newobj pages= ","object pages dup ","object pages ","newobj prev_pages= ","object prev_pages dup ","object prev_pages ","newobj cache_file_length= ","object cache_file_length dup ","object cache_file_length ","object dup ","object dup  pages= ","object dup  prev_pages= ","object dup  cache_file_length= "]}," RBPDF rollbackTransaction":{"type":"method","name":"rollbackTransaction","children":[],"call":[" eval ","key to_s != ","key to_s ","objvars each ","@objcopy instance_variables "," destroy ","File  delete ","file path ","File  exist? ","@prev_pages [] path ","@prev_pages [] ","@pages each_with_index ","File  truncate ","@objcopy cache_file_length each ","@objcopy cache_file_length ","@objcopy diskcache ","@objcopy instance_variables  each "]}," RBPDF commitTransaction":{"type":"method","name":"commitTransaction","children":[],"call":["@objcopy destroy ","File  delete ","file path ","@prev_pages compact each ","@prev_pages compact ","@objcopy diskcache "]}," RBPDF startTransaction":{"type":"method","name":"startTransaction","children":[],"call":[" objclone "," commitTransaction "]}," RBPDF addHTMLTOC":{"type":"method","name":"addHTMLTOC","children":[],"call":[" movePage ","0 upto ","numpages - "," Bookmark "," setPageBuffer ","temppage gsub "," UTF8ToUTF16BE ","sfillu + ","sfill + ","nu + ","ns + ","  * ","ku length - ","ns length ","ku length ","k length - ","k length "," formatTOCPageNumber ","n + ","n >= "," escape "," utf8StrRev "," UTF8ToLatin1 ","{ + + ","{ + ","{# + + ","{# + ","n to_s ","1 upto "," getPageBuffer ","page_first upto "," empty_string ! "," empty_string ","page_last - + ","page_last - "," getPage "," writeHTML ","<a href=\"# + + + + ","<a href=\"# + + + ","<a href=\"# + + ","<a href=\"# + ","outline [] to_s ","outline [] ","row gsub ","templates [] ","@current_font [] == ","@current_font [] ","@outlines each_with_index "," rtl_text_dir "," Error ","x [] ","@outlines sort_by "," UTF8ToUTF16BE mpages - ","sfillu + mpages - ","nu + mpages - ","page_last - +  - "," Boo{# + + mar{# + +  ","temppage gsub  gsub "," getPageBuffer  gsub ","  *  + ","  * u + "," UTF8ToUTF16BE  + ","sfillu +  + ","nu +  + ","sfill +  + ","ns +  + "," formatTOCPageNumber  + ","{ + +  length - ","{# + + u length - ","sfill +  length ","ns +  length "," formatTOCPageNumber  length ","{ + +  length ","{# + + u length ","{# + +  length - ","{# + +  length "," getPage  upto "," getPage  - + "," getPage  - ","<a href=\"# + + + +  gsub ","row gsub  gsub ","templates []  gsub "]}," RBPDF addTOC":{"type":"method","name":"addTOC","children":[],"call":[" movePage ","0 upto ","numpages - "," Bookmark "," setPageBuffer ","temppage gsub "," UTF8ToUTF16BE ","sfillu + + ","sfillu + ","sfill + + ","sfill + ","nu + + ","nu + ","ns + + ","ns + ","filler * ","ku length - - ","ku length - ","ns length ","ku length ","k length - - ","k length - ","k length "," formatTOCPageNumber ","n + ","n >= "," escape "," utf8StrRev "," UTF8ToLatin1 ","{ + + ","{ + ","{# + + ","{# + ","n to_s ","1 upto "," getPageBuffer ","page_first upto "," empty_string ! "," empty_string ","page_last - + ","page_last - "," getPage "," SetX "," Cell ","  + + + ","  + + ","  + ","pagenum + + + ","pagenum + + ","pagenum + ","numfills > ","(send\n  (lvar :fw) :/\n  (send nil :GetStringWidth\n    (lvar :filler))) floor ","fw / "," GetStringWidth ","tw - - ","32 chr ","tw - ","@w - - ","@w - ","@x - ","@current_font [] == ","@current_font [] ","outline [] to_s ","outline [] "," SetFont "," Write "," SetLink "," AddLink ","spacer * ","fontsize - ","fontstyle + ","outline [] == ","@outlines each_with_index "," GetX "," GetStringWidth * "," rtl_text_dir "," Error ","x [] ","@outlines sort_by "," UTF8ToUTF16BE mpages - ","sfillu + + mpages - ","nu + + mpages - ","page_last - +  - "," Boo{# + + mar{# + +  ","temppage gsub  gsub "," getPageBuffer  gsub ","filler *  + + ","filler * u + + ","filler *  + ","filler * u + "," UTF8ToUTF16BE  + + ","sfillu + +  + + ","nu + +  + + "," UTF8ToUTF16BE  + ","sfillu + +  + ","nu + +  + ","sfill + +  + + ","ns + +  + + "," formatTOCPageNumber  + + ","sfill + +  + ","ns + +  + "," formatTOCPageNumber  + ","{ + +  length - - ","{# + + u length - - ","{ + +  length - ","{# + + u length - ","sfill + +  length ","ns + +  length "," formatTOCPageNumber  length ","{ + +  length ","{# + + u length ","{# + +  length - - ","{# + +  length - ","{# + +  length "," getPage  upto "," getPage  - + "," getPage  - ","page UTF8ToUTF16BE m + + + ","pagesfillu + + m + + + ","pagenu + + m + + + ","  + + +  + + + ","pagenum + + +  + + + ","{ + +  + + + ","{# + +  + + + ","outline []  + + + ","page UTF8ToUTF16BE m + + ","pagesfillu + + m + + ","pagenu + + m + + ","  + + +  + + ","pagenum + + +  + + ","{ + +  + + ","{# + +  + + ","outline []  + + ","page UTF8ToUTF16BE m + ","pagesfillu + + m + ","pagenu + + m + ","  + + +  + ","pagenum + + +  + ","{ + +  + ","{# + +  + ","outline []  + "," UTF8ToUTF16BE mfills > ","sfillu + + mfills > ","nu + + mfills > ","(send\n  (lvar :fw) :/\n  (send nil :GetStringWidth\n    (lvar :filler))) floor  > ","(send\n  (lvar :tw - - ) :/\n  (send nil :GetStringWidth\n    (lvar :filler))) floor ","(send\n  (lvar :f@w - - ) :/\n  (send nil :GetStringWidth\n    (lvar :filler))) floor ","tw - -  / ","f@w - -  / ","@w - -  - - ","@x -  - - ","t@w - -  - - ","@w - -  - ","@x -  - ","t@w - -  - ","@@w - -  - - ","@@w - -  - "," SetLin{# + +  "," AddLin{# + +  "," GetStringWidth *  * ","@outlines each_@w - - ith_index "]}," RBPDF deletePage":{"type":"method","name":"deletePage","children":[],"call":[" lastPage ","@links []= ","link [] == ","link [] ","@links [] []= ","link [] - ","@links [] ","link [] > ","tmplinks each_with_index ","@outlines []= ","outline [] == ","outline [] ","@outlines [] []= ","outline [] - ","@outlines [] ","outline [] > ","tmpoutlines each_with_index ","@pageopen []= ","@pageopen [] ","@newpagegroup []= ","@newpagegroup [] ","@page_annots []= ","@page_annots [] ","@transfmrk []= ","@transfmrk [] ","@footerlen []= ","@footerlen [] ","@footerpos []= ","@footerpos [] ","@intmrk []= ","@pagelen []= ","@pagedim []= ","@pages []= "," page_annots [] "," page_annots ","@intmrk [] ","@pagelen [] ","@pagedim [] ","@pages [] ","i + ","page upto ","@numpages - ","page > ","link nil? "]}," RBPDF movePage":{"type":"method","name":"movePage","children":[],"call":[" lastPage ","@links [] []= ","@links [] ","link [] == ","link [] ","link [] + ","link [] < ","link [] >= ","link nil? ","tmplinks each_with_index ","@outlines [] []= ","@outlines [] ","outline [] == ","outline [] ","outline [] + ","outline [] < ","outline [] >= ","tmpoutlines each_with_index ","@newpagegroup []= ","@newpagegroup [] ","@page_annots []= ","@page_annots [] ","@transfmrk []= ","@transfmrk [] ","@footerlen []= ","@footerlen [] ","@footerpos []= ","@footerpos [] ","@intmrk []= ","@pagelen []= ","@pagedim []= ","@pages []= "," footerpos [] "," footerpos ","@intmrk [] ","@pagelen [] ","@pagedim [] ","@pages [] ","i - ","frompage downto ","topage + "," endPage ","frompage == ","frompage <= ","frompage > "]}," RBPDF getFontBuffer":{"type":"method","name":"getFontBuffer","children":[],"call":["@fonts [] ","@fonts [] nil? ! ","@fonts [] nil? ","Marshal  load "," readDiskCache "]}," RBPDF setFontSubBuffer":{"type":"method","name":"setFontSubBuffer","children":[],"call":["@fonts [] []= ","@fonts [] "," writeDiskCache ","Marshal  dump ","tmpfont []= "," getFontBuffer "," setFontBuffer ","@fonts [] nil? "," getFontBuffer  []= "]}," RBPDF setFontBuffer":{"type":"method","name":"setFontBuffer","children":[],"call":["@fontkeys push ","@fontkeys include? ! ","@fontkeys include? ","@fonts []= "," writeDiskCache ","Marshal  dump ","@fonts [] "," getObjFilename ","@fonts [] nil? "]}," RBPDF getImageBuffer":{"type":"method","name":"getImageBuffer","children":[],"call":["@images [] ","@images [] nil? ! ","@images [] nil? ","Marshal  load "," readDiskCache "]}," RBPDF setImageSubBuffer":{"type":"method","name":"setImageSubBuffer","children":[],"call":["@images [] []= ","@images [] "," writeDiskCache ","Marshal  dump ","tmpimg []= "," getImageBuffer "," setImageBuffer ","@images [] nil? "," getImageBuffer  []= "]}," RBPDF setImageBuffer":{"type":"method","name":"setImageBuffer","children":[],"call":["@imagekeys push ","@imagekeys include? ! ","@imagekeys include? ","@images []= "," writeDiskCache ","Marshal  dump ","@images [] "," getObjFilename ","image + ","File  basename ","@images [] nil? "]}," RBPDF getPageBuffer":{"type":"method","name":"getPageBuffer","children":[],"call":["@pages [] ","@pages [] nil? ! ","@pages [] nil? "," readDiskCache "]}," RBPDF setPageBuffer":{"type":"method","name":"setPageBuffer","children":[],"call":["@pagelen []= ","data length ","@pagelen [] ","@pagelen [] nil? ! ","@pagelen [] nil? ","@pages []= ","@pages [] << ","@pages [] "," writeDiskCache "," getObjFilename ","page + ","page to_s ","@prev_pages []= ","@prev_pages [] nil? ","@prev_pages [] ","append ! ","@pages [] nil? "]}," RBPDF getBuffer":{"type":"method","name":"getBuffer","children":[],"call":[" readDiskCache "]}," RBPDF setBuffer":{"type":"method","name":"setBuffer","children":[],"call":["@buffer << "," writeDiskCache "," getObjFilename "," empty_string ","@buffer path ","@buffer nil? ","data length "," getObjFilename  << "," getObjFilename  path "," getObjFilename  nil? "]}," RBPDF readDiskCache":{"type":"method","name":"readDiskCache","children":[],"call":["data << ","f read "," open ","filename path ","filename path  path "]}," RBPDF writeDiskCache":{"type":"method","name":"writeDiskCache","children":[],"call":["data length ","@cache_file_length [] ","@cache_file_length []= ","append == ","@cache_file_length [] nil? ","f close ","f write "," Error ","Unable to write cache file:  + ","f ! "," open ","filename path ","@cache_ open ile_length [] ","@cache_ open ile_length []= ","@cache_ open ile_length [] nil? "," open  close "," open  write ","Unable to write cache  open ile:  + "," open  ! "," open ilename path ","filename path  path "]}," RBPDF getObjFilename":{"type":"method","name":"getObjFilename","children":[],"call":["tmpFile close ","tmpFile binmode ","Tempfile  new ","name + ","Tempfile  new  close ","Tempfile  new  binmode "]}," RBPDF setGraphicVars":{"type":"method","name":"setGraphicVars","children":[],"call":[" SetFont "," empty_string "," out "," + + + + + + + + + + + + "," + + + + + + + + + + + "," + + + + + + + + + + "," + + + + + + + + + "," + + + + + + + + "," + + + + + + + "," + + + + + + "," + + + + + "," + + + + "," + + + "," + + "," + ","gvars [] "]}," RBPDF getGraphicVars":{"type":"method","name":"getGraphicVars","children":[],"call":[]}," RBPDF putHtmlListBullet":{"type":"method","name":"putHtmlListBullet","children":[],"call":[" Write "," GetStringWidth ","textitem + ",". + "," empty_string ! "," empty_string ","@listcount [] to_s ","@listcount [] "," unichr ","945 + - ","945 + ","(send\n  (send\n    (int 65) :+\n    (send\n      (ivar :@listcount) :[]\n      (ivar :@listnum))) :-\n  (int 1)) chr ","65 + - ","65 + ","(send\n  (send\n    (int 97) :+\n    (send\n      (ivar :@listcount) :[]\n      (ivar :@listnum))) :-\n  (int 1)) chr ","97 + - ","97 + "," intToRoman ","(send nil :intToRoman\n  (send\n    (ivar :@listcount) :[]\n    (ivar :@listnum))) downcase "," sprintf "," Rect ","@y + ","(send\n  (ivar :@lasth) :-\n  (lvar :l)) / ","@lasth - ","size / "," Circle ","@lasth / ","@x + ","2 * ","fill << ","listtype == ","deftypes [] ","(send\n  (lvar :listdepth) :-\n  (int 1)) % ","listdepth - "," Wsize / ite "," GetStsize / ingWidth ","textitem +  + ",". +  + ","@listcount [] to_s  + "," unichr  + ","(send\n  (send\n    (int 65) :+\n    (send\n      (ivar :@listcount) :[]\n      (ivar :@listnum))) :-\n  (int 1)) chr  + ","(send\n  (send\n    (int 97) :+\n    (send\n      (ivar :@listcount) :[]\n      (ivar :@listnum))) :-\n  (int 1)) chr  + "," intToRoman  + ","(send nil :intToRoman\n  (send\n    (ivar :@listcount) :[]\n    (ivar :@listnum))) downcase  + "," sprintf  + "," empty_stsize / ing ! "," empty_stsize / ing ","@size / istcount [] to_s ","@size / istcount [] "," unichsize /  ","(send\n  (send\n    (int 65) :+\n    (send\n      (ivar :@size / istcount) :[]\n      (ivar :@size / istnum))) :-\n  (int 1)) chr ","(send\n  (send\n    (int 65) :+\n    (send\n      (ivasize /  :@listcount) :[]\n      (ivasize /  :@listnum))) :-\n  (int 1)) chsize /  ","(send\n  (send\n    (int 97) :+\n    (send\n      (ivar :@size / istcount) :[]\n      (ivar :@size / istnum))) :-\n  (int 1)) chr ","(send\n  (send\n    (int 97) :+\n    (send\n      (ivasize /  :@listcount) :[]\n      (ivasize /  :@listnum))) :-\n  (int 1)) chsize /  ","(send nisize /  :intToRoman\n  (send\n    (ivar :@size / istcount) :[]\n    (ivar :@size / istnum))) downcase ","(send nil :intToRoman\n  (send\n    (ivasize /  :@listcount) :[]\n    (ivasize /  :@listnum))) downcase "," spsize / intf ","(send\n  (ivar :@size / asth) :-\n  (size / var :size / )) / ","(send\n  (ivasize /  :@lasth) :-\n  (lvasize /  :l)) / ","@size / asth - "," Circsize / e "," Cisize / cle ","@size / asth / ","fisize / size /  << ","size / isttype == ","deftypes []  == ","(send\n  (size / var :size / istdepth) :-\n  (int 1)) % ","(send\n  (lvasize /  :listdepth) :-\n  (int 1)) % ","size / istdepth - "]}," RBPDF intToRoman":{"type":"method","name":"intToRoman","children":[],"call":["roman << ","number >= "]}," RBPDF getHTMLUnitToUnits":{"type":"method","name":"getHTMLUnitToUnits","children":[],"call":[" pixelsToUnits ","value / ","(send\n  (lvar :value) :*\n  (int 12)) / ","value * ","(send\n  (send\n    (lvar :value) :/\n    (float 25.4)) :*\n  (ivar :@dpi)) / ","value / * ","(send\n  (send\n    (lvar :value) :/\n    (float 2.54)) :*\n  (ivar :@dpi)) / ","(send\n  (lvar :value) :*\n  (ivar :@dpi)) / ","refsize / ","(send\n  (lvar :value) :*\n  (lvar :refsize)) / ","munit [] ","supportedunits include? ","munit empty? ","htmlval scan ","mnum [] to_f ","mnum [] ","mnum empty? ","htmlval to_f ","htmlval is_a? ","mnum [] to_f  / ","htmlval to_f  / ","(send\n  (lvar :mnum [] to_f ) :*\n  (int 12)) / ","(send\n  (lvar :htmlval to_f ) :*\n  (int 12)) / ","mnum [] to_f  * ","htmlval to_f  * ","(send\n  (send\n    (lvar :mnum [] to_f ) :/\n    (float 25.4)) :*\n  (ivar :@dpi)) / ","(send\n  (send\n    (lvar :htmlval to_f ) :/\n    (float 25.4)) :*\n  (ivar :@dpi)) / ","mnum [] to_f  / * ","htmlval to_f  / * ","(send\n  (send\n    (lvar :mnum [] to_f ) :/\n    (float 2.54)) :*\n  (ivar :@dpi)) / ","(send\n  (send\n    (lvar :htmlval to_f ) :/\n    (float 2.54)) :*\n  (ivar :@dpi)) / ","(send\n  (lvar :mnum [] to_f ) :*\n  (ivar :@dpi)) / ","(send\n  (lvar :htmlval to_f ) :*\n  (ivar :@dpi)) / ","(send\n  (lvar :mnum [] to_f ) :*\n  (lvar :refsize)) / ","(send\n  (lvar :htmlval to_f ) :*\n  (lvar :refsize)) / ","mmunit []  [] ","htmlval scan  [] ","supportedmunit [] s include? ","mmunit []  empty? ","htmlval scan  empty? ","htmlval scan  [] to_f "]}," RBPDF setHtmlVSpace":{"type":"method","name":"setHtmlVSpace","children":[],"call":[]}," RBPDF swapMargins":{"type":"method","name":"swapMargins","children":[],"call":["@original_l_margin - "]}," RBPDF SetBooklet":{"type":"method","name":"SetBooklet","children":[],"call":["outer >= ","inner >= "]}," RBPDF addHTMLVertSpace":{"type":"method","name":"addHTMLVertSpace","children":[],"call":[" Ln ","hbz + ","hb - ","hb < "]}," RBPDF closeHTMLTagHandler":{"type":"method","name":"closeHTMLTagHandler","children":[],"call":[" checkPageBreak ","@page_break_trigger + ","@page % == ","@page % ","@page % != ","@rtl ! ","pba == ","dom [] [] [] ","dom [] [] ","dom [] "," addHTMLVertSpace ","@font_size * ","@listnum <= "," SetXY "," GetY - ","0.3 * / ","0.3 * ","parent [] "," GetY "," GetX "," GetY + ","0.7 * / ","0.7 * ","table_el [] [] != ","table_el [] [] ","table_el [] ","table_el [] [] nil? ","@pagedim [] []= ","@pagedim [] ","@thead_margins [] ","@thead_margins [] nil? ! ","@thead_margins [] nil? "," deletePage ","@pageopen [] ","@page == ","@numpages - ","parent [] nil? ! ","parent [] nil? ","in_table_head ! ","@pagedim [] [] - ","@pagedim [] [] ","@pagedim [] [] != ","end_page > "," Ln "," getHTMLUnitToUnits ","table_el [] [] nil? ! ","(send\n  (lvar :ccode) :+\n  (str \"\\n\")) length ","ccode + "," setPageBuffer ","pstart + + + ","pstart + + ","pstart + ","pagebuff [] "," getPageBuffer ","@intmrk [] ","@footerpos [] ","@transfmrk [] ","@transfmrk [] nil? ! ","@transfmrk [] nil? ","fill == ","border != ","@fill_color + + "," getCellCode ","@fill_color + ","endy - ","(send\n  (send\n    (lvar :cellpos) :[]\n    (str \"endx\")) :-\n  (send\n    (lvar :cellpos) :[]\n    (str \"startx\"))) abs ","cellpos [] - ","cellpos [] "," SetFillColorArray ","cellpos [] != ","cellpos [] nil? ! ","cellpos [] nil? "," setPage ","cborder != ","page > "," getBorderMode "," getPageHeight - - "," getBreakMargin "," getPageHeight - "," getPageHeight ","page == ","startpage upto ","table_el [] [] [] ","cellpos []= ","cellpos [] >= ","parent [] each_with_index ","table_el [] each_with_index ","dom [] dup ","dom [] [] [] []= ","trwsp [] == "," prevtrkey ","trwsp [] ","trwsp [] > ","dom [] [] each_with_index ","dom [] [] nil? ! ","dom [] [] nil? ","dom [] []= ","dom [] [] > ","trwsp [] >= ","dom [] [] [] [] ","table_el [] [] to_i > ","table_el [] [] to_i ","table_el [] nil? ! ","table_el [] nil? ","tag [] == ","tag [] ","@page > ","dom [] [] [] nil? ! ","dom [] [] [] nil? ","@y < ","dom [] [] >= ","@page_break_trigger - ","@num_columns > ","dom [] [] [] [] == ","(send\n  (send\n    (send\n      (send\n        (lvar :dom) :[]\n        (lvar :table_el)) :[]\n      (str \"rowspans\")) :[]\n    (lvar :k)) :[]\n  (str \"endy\")) max ","(send\n  (send\n    (send\n      (send\n        (lvar :dom) :[]\n        (lvar :table_el)) :[]\n      (str \"rowspans\")) :[]\n    (lvar :k)) :[]\n  (str \"endpage\")) max ","dom [] [] [] [] > ","parent []= ","maxbottomliney - ","n * ","tag [] =~ ","@tagvspaces [] [] [] ","@tagvspaces [] [] ","@tagvspaces [] ","(send\n  (send\n    (lvar :parent) :[]\n    (str \"fontsize\")) :/\n  (ivar :@k)) * ","parent [] / ","@tagvspaces [] [] [] >= ","dom [] [] == ","key + ","dom [] nil? ","dom [] [] != ","hbz / ","dom [] [] [] == "," endy - eckPageBreak ","  getPageHeight - - eckPageBreak ","dom [] [] []  == ","@fo@tagvspaces [] [] [] t_size * ","@list@tagvspaces [] [] [] um <= ","dom []  [] ","dom [] dup  [] ","pare@tagvspaces [] [] [] t [] ","dom [] dup  [] [] != ","dom [] []  [] [] != ","dom [] dup  [] [] ","dom [] []  [] [] ","dom [] []  [] ","dom [] dup  [] [] nil? ","dom [] []  [] [] nil? ","table_el [] [] @tagvspaces [] [] [] il? ","@thead_margi@tagvspaces [] [] [] s [] ","@thead_margi@tagvspaces [] [] [] s [] @tagvspaces [] [] [] il? ! ","@thead_margi@tagvspaces [] [] [] s [] @tagvspaces [] [] [] il? ","@pageope@tagvspaces [] [] []  [] ","@@tagvspaces [] [] [] umpages - ","dom []  [] nil? ! ","dom [] dup  [] nil? ! ","pare@tagvspaces [] [] [] t [] @tagvspaces [] [] [] il? ! ","dom []  [] nil? ","dom [] dup  [] nil? ","pare@tagvspaces [] [] [] t [] @tagvspaces [] [] [] il? ","i@tagvspaces [] [] [] _table_head ! ","parent []  > ","table_el [] [] []  > ","e@tagvspaces [] [] [] d_page > "," L@tagvspaces [] [] []  "," getHTMLU@tagvspaces [] [] [] itToU@tagvspaces [] [] [] its ","dom [] dup  [] [] nil? ! ","dom [] []  [] [] nil? ! ","table_el [] [] @tagvspaces [] [] [] il? ! ","(send\n  (lvar :@fill_color + + ) :+\n  (str \"\\n\")) length ","(se@tagvspaces [] [] [] d\n  (lvar :ccode) :+\n  (str \"\\@tagvspaces [] [] [] \")) le@tagvspaces [] [] [] gth ","@fill_color + +  + ","pagebuff []  + + + ","pagebuff []  + + ","pagebuff []  + "," getPageBuffer  [] ","@i@tagvspaces [] [] [] tmrk [] ","@tra@tagvspaces [] [] [] sfmrk [] ","@tra@tagvspaces [] [] [] sfmrk [] @tagvspaces [] [] [] il? ! ","@tra@tagvspaces [] [] [] sfmrk [] @tagvspaces [] [] [] il? ","parent []  - ","table_el [] [] []  - ","e@tagvspaces [] [] [] dy - ","(se@tagvspaces [] [] [] d\n  (se@tagvspaces [] [] [] d\n    (lvar :cellpos) :[]\n    (str \"e@tagvspaces [] [] [] dx\")) :-\n  (se@tagvspaces [] [] [] d\n    (lvar :cellpos) :[]\n    (str \"startx\"))) abs ","cellpos [] @tagvspaces [] [] [] il? ! ","cellpos [] @tagvspaces [] [] [] il? "," getBorderMode  != "," getBreakMargi@tagvspaces [] [] []  ","parent []  upto ","table_el [] [] []  upto ","dom [] dup  [] [] [] ","dom [] []  [] [] [] ","parent [] eaendy - _with_index ","parent [] ea getPageHeight - - _with_index ","dom []  [] each_with_index ","dom [] dup  [] each_with_index ","pare@tagvspaces [] [] [] t [] each_with_i@tagvspaces [] [] [] dex ","table_el [] eaendy - _with_index ","table_el [] ea getPageHeight - - _with_index ","dom [] []  [] each_with_index ","table_el [] each_with_i@tagvspaces [] [] [] dex ","dom [] [] eaendy - _with_index ","dom [] [] ea getPageHeight - - _with_index ","dom [] [] each_with_i@tagvspaces [] [] [] dex ","dom [] [] @tagvspaces [] [] [] il? ! ","dom [] [] @tagvspaces [] [] [] il? ","dom [] dup  [] [] to_i > ","dom [] []  [] [] to_i > ","dom [] dup  [] [] to_i ","dom [] []  [] [] to_i ","dom [] []  [] nil? ! ","table_el [] @tagvspaces [] [] [] il? ! ","dom [] []  [] nil? ","table_el [] @tagvspaces [] [] [] il? ","dom [] dup  [] == ","dom [] [] [] @tagvspaces [] [] [] il? ! ","dom [] [] [] @tagvspaces [] [] [] il? ","parent []  < ","dom [] []  < ","@@tagvspaces [] [] [] um_colum@tagvspaces [] [] [] s > ","(send\n  (send\n    (send\n      (send\n        (lvar :dom) :[]\n        (lvar :table_el)) :[]\n      (str \"rowspans\")) :[]\n    (lvar :k)) :[]\n  (str \"parent [] \")) max ","(send\n  (send\n    (send\n      (send\n        (lvar :dom) :[]\n        (lvar :table_el)) :[]\n      (str \"rowspans\")) :[]\n    (lvar :k)) :[]\n  (str \"table_el [] [] [] \")) max ","(send\n  (send\n    (send\n      (send\n        (lvar :dom) :[]\n        (lvar :dom [] dup )) :[]\n      (str \"rowspans\")) :[]\n    (lvar :k)) :[]\n  (str \"endy\")) max ","(send\n  (send\n    (send\n      (send\n        (lvar :dom) :[]\n        (lvar :dom [] [] )) :[]\n      (str \"rowspans\")) :[]\n    (lvar :k)) :[]\n  (str \"endy\")) max ","(se@tagvspaces [] [] [] d\n  (se@tagvspaces [] [] [] d\n    (se@tagvspaces [] [] [] d\n      (se@tagvspaces [] [] [] d\n        (lvar :dom) :[]\n        (lvar :table_el)) :[]\n      (str \"rowspa@tagvspaces [] [] [] s\")) :[]\n    (lvar :k)) :[]\n  (str \"e@tagvspaces [] [] [] dy\")) max ","(send\n  (send\n    (send\n      (send\n        (lvar :dom) :[]\n        (lvar :dom [] dup )) :[]\n      (str \"rowspans\")) :[]\n    (lvar :k)) :[]\n  (str \"endpage\")) max ","(send\n  (send\n    (send\n      (send\n        (lvar :dom) :[]\n        (lvar :dom [] [] )) :[]\n      (str \"rowspans\")) :[]\n    (lvar :k)) :[]\n  (str \"endpage\")) max ","(se@tagvspaces [] [] [] d\n  (se@tagvspaces [] [] [] d\n    (se@tagvspaces [] [] [] d\n      (se@tagvspaces [] [] [] d\n        (lvar :dom) :[]\n        (lvar :table_el)) :[]\n      (str \"rowspa@tagvspaces [] [] [] s\")) :[]\n    (lvar :k)) :[]\n  (str \"e@tagvspaces [] [] [] dpage\")) max ","dom []  []= ","dom [] dup  []= ","pare@tagvspaces [] [] [] t []= ","maxbottomli@tagvspaces [] [] [] ey - ","@tagvspaces [] [] []  * ","dom [] dup  [] =~ ","@dom [] dup vspaces [] [] [] ","@dom [] dup vspaces [] [] ","@dom [] dup vspaces [] ","(send\n  (send\n    (lvar :dom [] ) :[]\n    (str \"fontsize\")) :/\n  (ivar :@k)) * ","(send\n  (send\n    (lvar :dom [] dup ) :[]\n    (str \"fontsize\")) :/\n  (ivar :@k)) * ","(se@tagvspaces [] [] [] d\n  (se@tagvspaces [] [] [] d\n    (lvar :pare@tagvspaces [] [] [] t) :[]\n    (str \"fo@tagvspaces [] [] [] tsize\")) :/\n  (ivar :@k)) * ","dom []  [] / ","dom [] dup  [] / ","pare@tagvspaces [] [] [] t [] / ","@dom [] dup vspaces [] [] [] >= ","dom [] @tagvspaces [] [] [] il? ","maxbottomliney -  / ","n * z / "]}," RBPDF openHTMLTagHandler":{"type":"method","name":"openHTMLTagHandler","children":[],"call":[" checkPageBreak ","@page_break_trigger + ","@page % == ","@page % ","@page % != ","@rtl ! ","pba == ","dom [] [] [] ","dom [] [] ","dom [] "," addHTMLVertSpace "," SetXY "," GetY + ","(send\n  (float 0.3) :*\n  (ivar :@font_size_pt)) / ","0.3 * "," GetY "," GetX "," GetY - ","(send\n  (float 0.7) :*\n  (ivar :@font_size_pt)) / ","0.7 * "," empty_string ! "," empty_string ","parent [] ","parent [] [] ","@listcount []= ","tag [] [] to_i ","tag [] [] ","tag [] ","tag [] [] nil? ! ","tag [] [] nil? ","@listcount [] ","@listordered [] ","@listnum == ","tag [] [] to_i - ","@listordered []= ","tag [] == "," Ln "," Write ","File  basename + ","File  basename ","img_name nil? ","result_img == "," logger error ","err message "," logger ","@img_rb_y - ","tag [] / ","(send\n  (send\n    (ivar :@img_rb_y) :+\n    (lvar :prevy)) :-\n  (begin\n    (send\n      (send\n        (lvar :tag) :[]\n        (str \"fontsize\")) :/\n      (ivar :@k)))) / ","@img_rb_y + - ","@img_rb_y + "," Image "," getHTMLUnitToUnits ","tag [] [] empty? ! ","tag [] [] empty? "," SetLink "," AddLink ","imglink sub to_i ","imglink sub ","imglink [] == ","imglink [] ","@href [] ","@href [] nil? ! ","@href [] nil? ","2 * "," GetStringWidth ","32 chr ","dom [] [] == ","key - ","dom [] [] nil? ! ","dom [] [] nil? ","dom [] nil? ! ","dom [] nil? ","tag [] []= "," get_image_filename "," getImageFileType ","@href []= "," get_sever_url ","tag [] key? ","key + ","hrHeight / "," SetLineWidth "," Line ","x + "," GetLineWidth ","tag [] [] != ","@w - - ","@w - ","tag [] != ","tag [] nil? ! ","tag [] nil? ","dom [] []= ","(send\n  (int 2) :*\n  (lvar :cp)) + + ","(send\n  (int 2) :*\n  (lvar :cp)) + ","@thead_margins []= ","@thead_margins empty? ","@thead_margins nil? ","dom [] [] [] != ","dom [] [] [] nil? ","@font_size * ","(send\n  (send\n    (lvar :parent) :[]\n    (str \"fontsize\")) :/\n  (ivar :@k)) * ","parent [] / ","n > ","@htmlvspace <= ","n * ","tag [] =~ ","@tagvspaces [] [] [] ","@tagvspaces [] [] ","@tagvspaces [] ","(send\n  (send\n    (lvar :tag) :[]\n    (str \"fontsize\")) :/\n  (ivar :@k)) * ","@tagvspaces [] [] [] >= "," setTempRTL ","key == "," SetRightMargin "," SetLeftMargin ","@y + ","@line_width * ","@r_margin + ","@l_margin + ","ih != ","@line_width / ","cp < ","@thead_margins [] < ","@thead_margins [] ","tag []= ","tmpFile delete ","tmpFile nil? ","tmpFile path "," get_image_file ","tag [] [] =~ ","1 hex chr ","1 hex ","tag [] [] gsub! ","CGI  unescape ","tmpFile close "," proc_image_file "," ComboBox "," ListBox ","prop []= ","(lvar :w) max ","values << ","opts [] ","val split ","val index ","options each ","tag [] [] split ","tag [] [] to_i + "," TextField ","tag [] [] to_i * * ","tag [] [] to_i * ","opt []= "," Button "," GetStringWidth * ","FB_ + ","action []= ","@form_mode == ","@form_enctype == "," RadioButton "," CheckBox "," rand to_s "," rand ","tag [] [] == ","@@k_path_url + ","(send nil :request) to_s "," request "," c@font_size * eckPageBreak "," ctag [] [] to_i * * eckPageBreak ","@imglink sub to_i _break_trigger + ","@imglink sub to_i  % == ","@imglink sub to_i  % ","@imglink sub to_i  % != ","dom [] [] []  == ","(se@tagvspaces [] [] [] d\n  (float 0.3) :*\n  (ivar :@fo@tagvspaces [] [] [] t_size_pt)) / ","(se@tagvspaces [] [] [] d\n  (float 0.7) :*\n  (ivar :@fo@tagvspaces [] [] [] t_size_pt)) / "," empt GetY _string ! "," empty_stri@tagvspaces [] [] [] g ! "," empt GetY _string "," empty_stri@tagvspaces [] [] [] g ","pare@tagvspaces [] [] [] t [] ","dom []  [] ","pare@tagvspaces [] [] [] t [] [] ","dom []  [] [] ","@listcou@tagvspaces [] [] [] t []= ","dom []  [] [] to_i ","tag [] [] @tagvspaces [] [] [] il? ! ","dom []  [] [] nil? ! ","tag [] [] @tagvspaces [] [] [] il? ","dom []  [] [] nil? ","@listcou@tagvspaces [] [] [] t [] ","@list@tagvspaces [] [] [] um == ","dom []  [] [] to_i - ","dom []  [] == "," L@tagvspaces [] [] []  ","File  base@tagvspaces [] [] [] ame + ","File  basetag [] []  + ","File  base@tagvspaces [] [] [] ame ","File  basetag [] []  ","tag [] []  nil? ","img_@tagvspaces [] [] [] ame @tagvspaces [] [] [] il? ","img_tag [] []  nil? ","tag [] [] _name nil? "," Image  == ","result_tag [] []  == ","@img_rb_ GetY  - ","@tag [] [] _rb_y - ","dom []  [] / ","(send\n  (send\n    (ivar :@img_rb_ GetY ) :+\n    (lvar :prev GetY )) :-\n  (begin\n    (send\n      (send\n        (lvar :tag) :[]\n        (str \"fontsize\")) :/\n      (ivar :@k)))) / ","(se@tagvspaces [] [] [] d\n  (se@tagvspaces [] [] [] d\n    (ivar :@img_rb_y) :+\n    (lvar :prevy)) :-\n  (begi@tagvspaces [] [] [] \n    (se@tagvspaces [] [] [] d\n      (se@tagvspaces [] [] [] d\n        (lvar :tag) :[]\n        (str \"fo@tagvspaces [] [] [] tsize\")) :/\n      (ivar :@k)))) / ","(send\n  (send\n    (ivar :@img_rb_y) :+\n    (lvar :prevy)) :-\n  (begin\n    (send\n      (send\n        (lvar :dom [] ) :[]\n        (str \"fontsize\")) :/\n      (ivar :@k)))) / ","(send\n  (send\n    (ivar :@tag [] [] _rb_y) :+\n    (lvar :prevy)) :-\n  (begin\n    (send\n      (send\n        (lvar :tag) :[]\n        (str \"fontsize\")) :/\n      (ivar :@k)))) / ","@img_rb_ GetY  + - ","@tag [] [] _rb_y + - ","@img_rb_ GetY  + ","@tag [] [] _rb_y + "," getHTMLU@tagvspaces [] [] [] itToU@tagvspaces [] [] [] its ","tag [] [] empt GetY ? ! ","dom []  [] [] empty? ! ","tag [] [] empt GetY ? ","dom []  [] [] empty? "," SetLi@tagvspaces [] [] [] k "," AddLi@tagvspaces [] [] [] k "," AddLink  sub to_i ","@href []  sub to_i ","imgli@tagvspaces [] [] [] k sub to_i ","tag [] [] link sub to_i "," AddLink  sub ","@href []  sub ","imgli@tagvspaces [] [] [] k sub ","tag [] [] link sub "," AddLink  [] == ","@href []  [] == ","imgli@tagvspaces [] [] [] k [] == ","tag [] [] link [] == "," AddLink  [] ","@href []  [] ","imgli@tagvspaces [] [] [] k [] ","tag [] [] link [] ","@@font_size * ref [] ","@tag [] [] to_i * * ref [] ","@href [] @tagvspaces [] [] [] il? ! ","@@font_size * ref [] nil? ! ","@tag [] [] to_i * * ref [] nil? ! ","@href [] @tagvspaces [] [] [] il? ","@@font_size * ref [] nil? ","@tag [] [] to_i * * ref [] nil? "," GetStri@tagvspaces [] [] [] gWidth "," GetStringWidt@font_size *  "," GetStringWidttag [] [] to_i * *  ","32 c@font_size * r ","32 ctag [] [] to_i * * r ","ke GetY  - ","dom [] [] @tagvspaces [] [] [] il? ! ","dom [] [] @tagvspaces [] [] [] il? ","dom [] @tagvspaces [] [] [] il? ! ","dom [] @tagvspaces [] [] [] il? ","dom []  [] []= "," get_image_file@tagvspaces [] [] [] ame "," get_image_filetag [] []  "," getImageFileT GetY pe ","@@font_size * ref []= ","@tag [] [] to_i * * ref []= ","tag [] ke GetY ? ","dom []  [] key? ","ke GetY  + "," GetLineWidth  / "," getHTMLUnitToUnits  / ","@font_size * rHeig@font_size * t / ","tag [] [] to_i * * rHeigtag [] [] to_i * * t / "," SetLi@tagvspaces [] [] [] eWidth "," SetLineWidt@font_size *  "," SetLineWidttag [] [] to_i * *  "," Li@tagvspaces [] [] [] e "," GetX  + "," GetLi@tagvspaces [] [] [] eWidth "," GetLineWidt@font_size *  "," GetLineWidttag [] [] to_i * *  ","dom []  [] [] != ","@(lvar :w) max  - - ","@tag [] [] to_i * *  - - ","@ GetStringWidth *  - - ","@(lvar :w) max  - ","@tag [] [] to_i * *  - ","@ GetStringWidth *  - ","dom []  [] != ","tag [] @tagvspaces [] [] [] il? ! ","dom []  [] nil? ! ","tag [] @tagvspaces [] [] [] il? ","dom []  [] nil? ","(send\n  (int 2) :*\n  (lvar : getHTMLUnitToUnits )) + + ","(send\n  (int 2) :*\n  (lvar :@line_width / )) + + ","(se@tagvspaces [] [] [] d\n  (i@tagvspaces [] [] [] t 2) :*\n  (lvar :cp)) + + ","(send\n  (int 2) :*\n  (lvar : getHTMLUnitToUnits )) + ","(send\n  (int 2) :*\n  (lvar :@line_width / )) + ","(se@tagvspaces [] [] [] d\n  (i@tagvspaces [] [] [] t 2) :*\n  (lvar :cp)) + ","dom [] [] _margins []= ","@thead_margi@tagvspaces [] [] [] s []= ","@t@font_size * ead_margins []= ","@ttag [] [] to_i * * ead_margins []= ","@thead_margins empt GetY ? ","dom [] [] _margins empty? ","@thead_margi@tagvspaces [] [] [] s empty? ","@t@font_size * ead_margins empty? ","@ttag [] [] to_i * * ead_margins empty? ","dom [] [] _margins nil? ","@thead_margi@tagvspaces [] [] [] s @tagvspaces [] [] [] il? ","@t@font_size * ead_margins nil? ","@ttag [] [] to_i * * ead_margins nil? ","dom [] [] [] @tagvspaces [] [] [] il? ","@fo@tagvspaces [] [] [] t_size * ","(se@tagvspaces [] [] [] d\n  (se@tagvspaces [] [] [] d\n    (lvar :pare@tagvspaces [] [] [] t) :[]\n    (str \"fo@tagvspaces [] [] [] tsize\")) :/\n  (ivar :@k)) * ","(send\n  (send\n    (lvar :dom [] ) :[]\n    (str \"fontsize\")) :/\n  (ivar :@k)) * ","pare@tagvspaces [] [] [] t [] / ","@tagvspaces [] [] []  > ","@@font_size * tmlvspace <= ","@tag [] [] to_i * * tmlvspace <= ","@tagvspaces [] [] []  * ","dom []  [] =~ ","@dom [] vspaces [] [] [] ","@dom [] vspaces [] [] ","@dom [] vspaces [] ","(se@tagvspaces [] [] [] d\n  (se@tagvspaces [] [] [] d\n    (lvar :tag) :[]\n    (str \"fo@tagvspaces [] [] [] tsize\")) :/\n  (ivar :@k)) * ","@dom [] vspaces [] [] [] >= ","ke GetY  == "," SetRightMargi@tagvspaces [] [] []  "," SetRig@font_size * tMargin "," SetRigtag [] [] to_i * * tMargin "," SetLeftMargi@tagvspaces [] [] []  ","@img_rb_y -  + ","(send\n  (send\n    (ivar :@img_rb_y) :+\n    (lvar :prevy)) :-\n  (begin\n    (send\n      (send\n        (lvar :tag) :[]\n        (str \"fontsize\")) :/\n      (ivar :@k)))) /  + ","@ GetY  + ","@li@tagvspaces [] [] [] e_width * ","@line_(lvar :w) max idth * ","@line_tag [] [] to_i * * idth * ","@line_ GetStringWidth * idth * ","@line_widt@font_size *  * ","@line_widttag [] [] to_i * *  * ","@r_margi@tagvspaces [] [] []  + ","@l_margi@tagvspaces [] [] []  + "," getHTMLUnitToUnits  != ","i@font_size *  != ","itag [] [] to_i * *  != ","@li@tagvspaces [] [] [] e_width / ","@line_(lvar :w) max idth / ","@line_tag [] [] to_i * * idth / ","@line_ GetStringWidth * idth / ","@line_widt@font_size *  / ","@line_widttag [] [] to_i * *  / "," getHTMLUnitToUnits  < ","@line_width /  < ","dom [] [] _margins [] < ","@thead_margi@tagvspaces [] [] [] s [] < ","@t@font_size * ead_margins [] < ","@ttag [] [] to_i * * ead_margins [] < ","dom [] [] _margins [] ","@thead_margi@tagvspaces [] [] [] s [] ","@t@font_size * ead_margins [] ","@ttag [] [] to_i * * ead_margins [] ","dom []  []= "," get_image_file  delete ","tmpFile @tagvspaces [] [] [] il? "," get_image_file  nil? "," get_image_file  path ","tmpFile pat@font_size *  ","tmpFile pattag [] [] to_i * *  ","dom []  [] [] =~ ","1 he GetX  chr ","1 @font_size * ex c@font_size * r ","1 tag [] [] to_i * * ex ctag [] [] to_i * * r ","1 he GetX  ","1 @font_size * ex ","1 tag [] [] to_i * * ex ","dom []  [] [] gsub! ","CGI  u@tagvspaces [] [] [] escape "," get_image_file  close "," ComboBo GetX  "," ListBo GetX  ","(lvar :w) ma GetX  ","(lvar :(lvar :w) max ) max ","(lvar :tag [] [] to_i * * ) max ","(lvar : GetStringWidth * ) max ","tag [] [] s << ","val split  [] ","val inde GetX  ","val i@tagvspaces [] [] [] dex ","optio@tagvspaces [] [] [] s each ","tag [] [] split  each ","options eac@font_size *  ","options eactag [] [] to_i * *  ","dom []  [] [] split ","dom []  [] [] to_i + "," Te GetX tField ","dom []  [] [] to_i * * ","dom []  [] [] to_i * "," Butto@tagvspaces [] [] []  "," GetStri@tagvspaces [] [] [] gWidth * "," GetStringWidt@font_size *  * "," GetStringWidttag [] [] to_i * *  * ","actio@tagvspaces [] [] []  []= ","tag [] []  == ","@form_enc getImageFileType  == ","@form_enct GetY pe == ","@form_e@tagvspaces [] [] [] ctype == "," RadioButto@tagvspaces [] [] []  "," CheckBo GetX  "," C@font_size * eckBox "," Ctag [] [] to_i * * eckBox "," ra@tagvspaces [] [] [] d to_s "," ra@tagvspaces [] [] [] d ","dom []  [] [] == ","@@k_pat@font_size * _url + ","@@k_pattag [] [] to_i * * _url + ","(se@tagvspaces [] [] [] d @tagvspaces [] [] [] il :request) to_s "]}," RBPDF writeHTML":{"type":"method","name":"writeHTML","children":[],"call":["@pagedim [] [] ","@pagedim [] ","@page > "," setGraphicVars ","@y < "," Ln ","(and\n  (lvar :cell)\n  (begin\n    (send\n      (send\n        (send\n          (lvar :dom) :[]\n          (send\n            (lvar :key) :-\n            (int 1))) :[]\n        (str \"value\")) :==\n      (str \"table\")))) ! ","dom [] [] == ","dom [] [] ","dom [] ","key - ","@page_annots [] [] [] ","@page_annots [] [] ","@page_annots [] ","pak >= ","@page_annots [] each_with_index ","@page_annots [] nil? ! ","@page_annots [] nil? ","(send\n  (send\n    (send\n      (send\n        (send\n          (lvar :pstart) :+\n          (str \"\\nq\\n\")) :+\n        (lvar :trx)) :+\n      (str \"\\n\")) :+\n    (lvar :pmid)) :+\n  (str \"\\nQ\\n\")) length ","pstart + + + + + ","pstart + + + + ","pstart + + + ","pstart + + ","pstart + "," setPageBuffer ","pstart + + + + + + "," sprintf ","yshift * ","t_x * ","yshift < ","t_x != ","mdiff -@ ","(send\n  (lvar :tw) :-\n  (lvar :linew)) abs ","tw - ","@current_font [] == ","@current_font [] ","pmid index to_i == "," revstrpos to_i "," revstrpos ","pmid index to_i ","pmid index "," revstrpos to_i == ","[( + + ","32 chr ","[( + ","0 chr ","plalign == "," revstrpos to_i + ","@rtl ! ","mdiff / ","(send\n  (lvar :mdiff) :/\n  (int 2)) -@ "," GetStringWidth ","prevrMargin - ","@r_margin != ","prevlMargin - ","@l_margin != ","plalign nil? ! ","plalign nil? "," getPageBuffer [] "," getPageBuffer ","midpos - ","midpos > ","@footerpos [] ","@footerpos []= ","@pagelen [] - ","@footerlen [] ","@pagelen [] ","@in_footer ! ","@footerlen [] nil? ! ","@footerlen [] nil? ","opentagpos nil? ! ","opentagpos nil? ","(lvar :opentagpos) min ","(send\n  (ivar :@endlinex) :-\n  (lvar :startlinex)) abs ","@endlinex - ","yshift > ","minstartliney - ","startlinex nil? ! ","startlinex nil? "," checkPageBreak ! "," checkPageBreak ","@page_break_trigger + "," eval ","this_method_vars each "," rollbackTransaction ","@start_transaction_page == ","@numpages - ","undo ! ","dom [] [] [] == ","dom [] [] [] ","dom [] [] ! ","dom [] [] nil? ","loop < ","dom [] []= ","strrest lstrip ","strrest rstrip "," isRTLTextDir ","strrest strip ","@href [] ","@href empty? ! ","@href empty? ","strrest == ","strrest length > ","strrest length ","strrest nil? ! ","strrest nil? "," Write "," addHtmlLink ","dom [] [] != ","dom [] [] empty? ! ","dom [] [] empty? ","prelen > ","postlen == ","dom [] [] length ","dom [] [] lstrip ","dom [] [] rstrip + ","dom [] [] rstrip ","@premode ! ","tmpstr << ","lsp > ","(send\n  (send\n    (lvar :dom) :[]\n    (lvar :key)) :[]\n  (str \"value\")) strip ","rsp -@ ","rsp > ","len1 - ","dom [] [] rstrip length ","dom [] [] lstrip length ","(send\n  (ivar :@y) :+\n  (send\n    (send\n      (lvar :pfontsize) :*\n      (ivar :@cell_height_ratio)) :/\n    (ivar :@k))) max ","@y + ","pfontsize * / ","pfontsize * ","(ivar :@y) min ","(send\n  (send\n    (send\n      (send\n        (send\n          (send\n            (begin\n              (send\n                (lvar :pfontsize) :-\n                (lvar :curfontsize))) :*\n            (ivar :@cell_height_ratio)) :/\n          (ivar :@k)) :+\n        (lvar :pfontascent)) :-\n      (lvar :curfontascent)) :-\n    (lvar :pfontdescent)) :+\n  (lvar :curfontdescent)) / ","(send\n  (lvar :pfontsize) :-\n  (lvar :curfontsize)) * / + - - + ","(send\n  (lvar :pfontsize) :-\n  (lvar :curfontsize)) * / + - - ","(send\n  (lvar :pfontsize) :-\n  (lvar :curfontsize)) * / + - ","(send\n  (lvar :pfontsize) :-\n  (lvar :curfontsize)) * / + ","(send\n  (lvar :pfontsize) :-\n  (lvar :curfontsize)) * / ","(send\n  (lvar :pfontsize) :-\n  (lvar :curfontsize)) * ","pfontsize - "," getFontDescent "," getFontAscent ","pfontsize != ","curfontsize > ","curfontsize is_a? ","pfontsize > ","pfontsize is_a? ","@font_size * "," SetFont "," putHtmlListBullet ","startliney + "," empty_string ! "," empty_string ","dom [] [] length > ","prev_numpages > "," closeHTMLTagHandler "," openHTMLTagHandler ","cellspacingx / ","@pagedim [] [] - ","dom [] [] [] []= ","trwsp [] < ","trwsp [] ","(send\n  (send\n    (lvar :dom) :[]\n    (lvar :trid)) :[]\n  (str \"endy\")) max ","trwsp [] == ","dom [] [] nil? ! ","trwsp [] > ","dom [] [] each_with_index ","trsid - ","(ivar :@page) max ","(ivar :@y) max ","@page == ","rowspan <= ","cellid - "," MultiCell ","dom [] [] dup ","rowspan > ","dom [] [] size ","dom [] [] push ","dom [] [] [] [] ","rsendx + ","@y - ","rsstartx < ","@x + + + ","@x + + ","@x + ","rsstartx > ","@x - - - ","@x - - ","@x - ","@pagedim [] [] != ","rsk < ","dom [] [] [] to_i ","dom [] [] [] nil? ! ","dom [] [] [] nil? "," setPage ","(and\n  (and\n    (and\n      (send\n        (send\n          (lvar :dom) :[]\n          (lvar :key)) :[]\n        (str \"tag\"))\n      (send\n        (send\n          (send\n            (lvar :dom) :[]\n            (lvar :key)) :[]\n          (str \"opening\")) :!))\n    (begin\n      (send\n        (send\n          (send\n            (lvar :dom) :[]\n            (lvar :key)) :[]\n          (str \"value\")) :==\n        (lvar :tagtype))))\n  (begin\n    (send\n      (send\n        (send\n          (lvar :dom) :[]\n          (lvar :key)) :[]\n        (str \"parent\")) :==\n      (lvar :parentid)))) ! ","key < "," getHTMLUnitToUnits ","colspan * + ","(send\n  (lvar :colspan) :-\n  (int 1)) * ","colspan - ","colspan * ","table_columns_width / ","table_width - ","cellspacing * ","dom [] [] - ","cellspacing -@ ","@w - - ","@w - "," SetFillColorArray ","wfill == ","@page_annots [] length ","pbrk ! ","endlinepos nil? ! ","endlinepos nil? ","startlinepage == ","(send\n  (ivar :@font_size_pt) :/\n  (float 0.7)) / ","@font_size_pt / ","(send\n  (float 0.3) :*\n  (ivar :@font_size_pt)) / ","0.3 * ","(send\n  (send\n    (send\n      (lvar :pstart) :+\n      (str \"\\n\")) :+\n    (lvar :pmid)) :+\n  (str \"\\nBT 0 Tw ET\\n\")) length ","pmid gsub! ","(send\n  (send\n    (send\n      (lvar :pstart) :+\n      (str \"\\n\")) :+\n    (lvar :pmid)) :+\n  (str \"\\n\")) length ","pmidtemp sub ","matches1 gsub ",")  + + ",")  + ","0 chr + ","matches1 gsub! ","1 gsub ","pmidtemp =~ ","pmidtemp gsub! ","(send\n  (begin\n    (send\n      (lvar :spacewidth) :*\n      (send\n        (lvar :pac) :[]\n        (str \"numspaces\")))) :-\n  (lvar :one_space_width)) / ","(send\n  (lvar :spacewidth) :*\n  (send\n    (lvar :pac) :[]\n    (str \"numspaces\"))) - ","spacewidth * ","pac [] ","(send\n  (lvar :spacewidth) :*\n  (send\n    (lvar :pac) :[]\n    (str \"numspaces\"))) / ","(send\n  (lvar :spacew) :-\n  (lvar :one_space_width)) / ","spacew - ","cxpos > ","pac [] * <= ","currentxpos + ","pac [] * ","pac [] * >= ","currentxpos - ","pac [] >= ","@l_margin + + ","@l_margin + ","currentxpos / ","pmid sub! "," + + + + + + + + + + + + + + "," + + + + + + + + + + + + + "," + + + + + + + + + + + + "," + + + + + + + + + + + "," + + + + + + + + + + "," + + + + + + + + + ","5 to_f + ","5 to_f "," + + + + + + + + "," + + + + + + + "," + + + + + + "," + + + + + ","3 to_f + ","3 to_f "," + + + + "," + + + "," + + "," + ","1 to_f + ","1 to_f ","1 to_i ","pmid =~ ","lnstring [] [] ","lnstring [] ","strcount - ","strcount > ","currentxpos > ","nsmax - ","currentxpos < ","tvalue count ","lnstring [] [] rstrip ","strcount == ","pmid_mark == ","strcount <= ","pmid_b + + + + + + ","pmid_b + + + + + ","pmid_b + + + + ","pmid_b + + + ","pmid_b + + ","pmid_b + ","pmid [] ","epsposend - ","epsposbeg nil? ","prev_epsposbeg - ","q + ","offset < ","epsposend > ","epsposbeg === ","offset > ","epsposbeg > ","(send\n  (ivar :@epsmarker) :+\n  (str \"Q\")) length ","@epsmarker + ","epsposend nil? ","pmid_offset + ","$& length "," Error ","offset == ","offset + ","pmid [] == ","offset - ","offset != ","stroffset <= ","stroffset != ","-1000 * / / ","-1000 * / ","-1000 * ","(send\n  (lvar :tw) :-\n  (lvar :linew)) + ","no * ","(send\n  (begin\n    (send\n      (begin\n        (send\n          (lvar :tw) :-\n          (lvar :linew))) :+\n      (begin\n        (send\n          (begin\n            (send\n              (lvar :no) :-\n              (lvar :ns))) :*\n          (lvar :spacelen))))) :/\n  (begin\n    (if\n      (lvar :ns)\n      (lvar :ns)\n      (int 1)))) * ","(send\n  (begin\n    (send\n      (lvar :tw) :-\n      (lvar :linew))) :+\n  (begin\n    (send\n      (begin\n        (send\n          (lvar :no) :-\n          (lvar :ns))) :*\n      (lvar :spacelen)))) / ","(send\n  (lvar :no) :-\n  (lvar :ns)) * ","no - ","@l_margin - + - ","@l_margin - + ","@l_margin - ","lnstring [] []= ","lnstring [] [] count ","lnstring [] [] lstrip ","kk == ","lnstring [] [] gsub! ","0 upto ","lnstring length - ","lnstring length "," getSpaceString ","lnstring empty? ! ","lnstring empty? ","pmidtemp scan ","@num_columns > "," SetDrawColorArray "," SetTextColorArray "," setTextRenderingMode ","@textrendermode > ","(send\n  (ivar :@textrendermode) :%\n  (int 2)) == ","@textrendermode % ","(send\n  (ivar :@y) :+\n  (begin\n    (send\n      (begin\n        (send\n          (lvar :fontsize) :*\n          (ivar :@cell_height_ratio))) :/\n      (ivar :@k)))) max ","(send\n  (lvar :fontsize) :*\n  (ivar :@cell_height_ratio)) / ","fontsize * ","(send\n  (send\n    (send\n      (send\n        (begin\n          (send\n            (send\n              (begin\n                (send\n                  (lvar :curfontsize) :-\n                  (lvar :fontsize))) :*\n              (ivar :@cell_height_ratio)) :/\n            (ivar :@k))) :+\n        (lvar :curfontascent)) :-\n      (lvar :fontascent)) :-\n    (lvar :curfontdescent)) :+\n  (lvar :fontdescent)) / ","(send\n  (send\n    (begin\n      (send\n        (lvar :curfontsize) :-\n        (lvar :fontsize))) :*\n    (ivar :@cell_height_ratio)) :/\n  (ivar :@k)) + - - + ","(send\n  (send\n    (begin\n      (send\n        (lvar :curfontsize) :-\n        (lvar :fontsize))) :*\n    (ivar :@cell_height_ratio)) :/\n  (ivar :@k)) + - - ","(send\n  (send\n    (begin\n      (send\n        (lvar :curfontsize) :-\n        (lvar :fontsize))) :*\n    (ivar :@cell_height_ratio)) :/\n  (ivar :@k)) + - ","(send\n  (send\n    (begin\n      (send\n        (lvar :curfontsize) :-\n        (lvar :fontsize))) :*\n    (ivar :@cell_height_ratio)) :/\n  (ivar :@k)) + ","(send\n  (lvar :curfontsize) :-\n  (lvar :fontsize)) * / ","(send\n  (lvar :curfontsize) :-\n  (lvar :fontsize)) * ","curfontsize - ","@cntmrk [] ","@page_annots [] length - ","@page_annots [] delete_at ","@page_annots [] push= ","tstart + + + + + + ","tstart + + + + + ","tstart + + + + ","tstart + + + ","tstart + + ","tstart + ","pagebuff [] ","curpos - ","@newline ! ","maxel - ","fontsize != ","curfontsize >= ","fontsize >= ","fontsize is_a? ","fontstyle != ","fontname != ","(send\n  (send\n    (begin\n      (send\n        (send\n          (lvar :curfontsize) :*\n          (ivar :@cell_height_ratio)) :/\n        (ivar :@k))) :+\n    (lvar :curfontascent)) :-\n  (lvar :curfontdescent)) / - ","(send\n  (send\n    (begin\n      (send\n        (send\n          (lvar :curfontsize) :*\n          (ivar :@cell_height_ratio)) :/\n        (ivar :@k))) :+\n    (lvar :curfontascent)) :-\n  (lvar :curfontdescent)) / ","(send\n  (send\n    (lvar :curfontsize) :*\n    (ivar :@cell_height_ratio)) :/\n  (ivar :@k)) + - ","(send\n  (send\n    (lvar :curfontsize) :*\n    (ivar :@cell_height_ratio)) :/\n  (ivar :@k)) + ","curfontsize * / ","curfontsize * ","@page_annots [] push ","curfontsize / ","autolinebreak ! ","@x + > ","@x - < ","dom [] [] [] to_i > ","key == ","(or\n  (begin\n    (and\n      (and\n        (and\n          (send\n            (send\n              (lvar :dom) :[]\n              (lvar :key)) :[]\n            (str \"tag\"))\n          (send\n            (send\n              (lvar :dom) :[]\n              (lvar :key)) :[]\n            (str \"opening\")))\n        (begin\n          (send\n            (send\n              (send\n                (lvar :dom) :[]\n                (lvar :key)) :[]\n              (str \"value\")) :==\n            (str \"tr\"))))\n      (begin\n        (or\n          (send\n            (send\n              (send\n                (lvar :dom) :[]\n                (lvar :key)) :[]\n              (str \"thead\")) :nil?)\n          (send\n            (send\n              (send\n                (lvar :dom) :[]\n                (lvar :key)) :[]\n              (str \"thead\")) :!)))))\n  (begin\n    (and\n      (and\n        (send\n          (send\n            (lvar :dom) :[]\n            (lvar :key)) :[]\n          (str \"tag\"))\n        (send\n          (send\n            (send\n              (lvar :dom) :[]\n              (lvar :key)) :[]\n            (str \"opening\")) :!))\n      (begin\n        (send\n          (send\n            (send\n              (lvar :dom) :[]\n              (lvar :key)) :[]\n            (str \"value\")) :==\n          (str \"table\")))))) ! "," writeHTML ","this_method_vars []= ","Marshal  load ","Marshal  dump ","curfontstyle dup ","curfontname dup ","align dup ","html dup "," startTransaction ","dom [] [] []= ","@page % == ","@page % ","@page % != ","dom size "," getHtmlDomArray ","@customlistindent >= ","2 * "," getGraphicVars ","cell == ","reseth == ","ln == ","@nested_table == ","(send\n  (lvar :mdiff) :/\n  (float 2.0)) -@ ","@line_width / ","currentcmargin < ","@in_thead ! ","@thead_margins [] ","dom [] [] to_i > ","dom [] [] to_i "," addHtmlAnchor ","dom [] [] strip length > ","dom [] [] strip length ","dom [] [] strip ","pmid dup ","dom [] [] strip length == "," setGraphicVa sprintf  ","dom [] []  < ","(and\n  (lvar :cell)\n  (begin\n    (send\n      (send\n        (send\n          (lvar : getHtmlDomArray ) :[]\n          (send\n            (lvar :key) :-\n            (int 1))) :[]\n        (str \"value\")) :==\n      (str \"table\")))) ! ","(and\n  (lvar :cell)\n  (begin\n    (send\n      (send\n        (send\n          (lvar : closeHTMLTagHandler ) :[]\n          (send\n            (lvar :key) :-\n            (int 1))) :[]\n        (str \"value\")) :==\n      (str \"table\")))) ! ","(and\n  (lvar :cell)\n  (begin\n    (send\n      (send\n        (send\n          (lvar : openHTMLTagHandler ) :[]\n          (send\n            (lvar :key) :-\n            (int 1))) :[]\n        (str \"value\")) :==\n      (str \"table\")))) ! "," getHtmlDomArray  [] [] == "," closeHTMLTagHandler  [] [] == "," openHTMLTagHandler  [] [] == "," getHtmlDomArray  [] [] "," closeHTMLTagHandler  [] [] "," openHTMLTagHandler  [] [] "," getHtmlDomArray  [] "," closeHTMLTagHandler  [] "," openHTMLTagHandler  [] ","@page_annots [] each_@w - - ith_index ","@page_annots [] each_@x - ith_index ","(send\n  (send\n    (send\n      (send\n        (send\n          (lvar :pstart) :+\n          (str \"\\nq\\n\")) :+\n        (lvar : sprintf )) :+\n      (str \"\\n\")) :+\n    (lvar :pmid)) :+\n  (str \"\\nQ\\n\")) length ","(send\n  (send\n    (send\n      (send\n        (send\n          (lvar :pstart) :+\n          (str \"\\nq\\n\")) :+\n        (lvar :trx)) :+\n      (str \"\\n\")) :+\n    (lvar : getPageBuffer [] )) :+\n  (str \"\\nQ\\n\")) length ","(send\n  (send\n    (send\n      (send\n        (send\n          (lvar :pstart) :+\n          (str \"\\nq\\n\")) :+\n        (lvar :trx)) :+\n      (str \"\\n\")) :+\n    (lvar :pmidtemp sub )) :+\n  (str \"\\nQ\\n\")) length ","(send\n  (send\n    (send\n      (send\n        (send\n          (lvar :pstart) :+\n          (str \"\\nq\\n\")) :+\n        (lvar :trx)) :+\n      (str \"\\n\")) :+\n    (lvar :pmid_b + + + + + + )) :+\n  (str \"\\nQ\\n\")) length ","(send\n  (send\n    (send\n      (send\n        (send\n          (lvar : getPageBuffer [] ) :+\n          (str \"\\nq\\n\")) :+\n        (lvar :trx)) :+\n      (str \"\\n\")) :+\n    (lvar :pmid)) :+\n  (str \"\\nQ\\n\")) length "," getPageBuffer []  + + + + + "," getPageBuffer []  + + + + "," getPageBuffer []  + + + "," getPageBuffer []  + + "," getPageBuffer []  + "," getPageBuffer []  + + + + + + ","minstartliney -  * ","mdiff -@  * ","(send\n  (lvar :mdiff) :/\n  (int 2)) -@  * ","@l_margin - + -  * ","@l_margin - +  * ","(send\n  (lvar :mdiff) :/\n  (float 2.0)) -@  * ","minstartliney -  < ","mdiff -@  != ","(send\n  (lvar :mdiff) :/\n  (int 2)) -@  != ","@l_margin - + -  != ","@l_margin - +  != ","(send\n  (lvar :mdiff) :/\n  (float 2.0)) -@  != ","(send\n  (lvar :tw) :-\n  (lvar :linew)) abs  -@ ","(send\n  (lvar :tw) :-\n  (lvar :(send\n  (ivar :@endlinex) :-\n  (lvar :startlinex)) abs )) abs ","(send\n  (lvar :t@w - - ) :-\n  (lvar :line@w - - )) abs ","(send\n  (lvar :t@x - ) :-\n  (lvar :line@x - )) abs ","t@w - -  - ","t@x -  - "," getPageBuffer []  index to_i == ","pmidtemp sub  index to_i == ","pmid_b + + + + + +  index to_i == "," getPageBuffer []  index to_i ","pmidtemp sub  index to_i ","pmid_b + + + + + +  index to_i "," getPageBuffer []  index ","pmidtemp sub  index ","pmid_b + + + + + +  index ","pdom [] []  == ","(send\n  (lvar :tw) :-\n  (lvar :linew)) abs  / ","(send\n  (lvar :(send\n  (lvar :tw) :-\n  (lvar :linew)) abs ) :/\n  (int 2)) -@ ","@pagedim [] []  != ","@thead_margins []  != ","pdom [] []  nil? ! ","pdom [] []  nil? ","@footerpos []  - ","(lvar :opentagpos) min  - ","@footerpos []  > ","(lvar :opentagpos) min  > ","@footerpos []  nil? ! ","@footerpos []  nil? ","(lvar :@footerpos [] ) min ","(send\n  (ivar :@en@pagedim [] [] - inex) :-\n  (lvar :startlinex)) abs ","@en@pagedim [] [] - inex - ","minstartliney -  > ","(ivar :@y) min  - ","this_method_va sprintf  each "," getHtmlDomArray  [] [] [] == "," closeHTMLTagHandler  [] [] [] == "," openHTMLTagHandler  [] [] [] == "," getHtmlDomArray  [] [] [] "," closeHTMLTagHandler  [] [] [] "," openHTMLTagHandler  [] [] [] "," getHtmlDomArray  [] [] ! "," closeHTMLTagHandler  [] [] ! "," openHTMLTagHandler  [] [] ! "," getHtmlDomArray  [] [] nil? "," closeHTMLTagHandler  [] [] nil? "," openHTMLTagHandler  [] [] nil? "," getHtmlDomArray  [] []= "," closeHTMLTagHandler  [] []= "," openHTMLTagHandler  [] []= "," Write  lstrip "," addHtmlLink  lstrip "," Write  rstrip "," addHtmlLink  rstrip ","strrest  sprintf trip "," Write  strip "," addHtmlLink  strip "," Write  == "," addHtmlLink  == "," Write  length > "," addHtmlLink  length > "," Write  length "," addHtmlLink  length "," Write  nil? ! "," addHtmlLink  nil? ! "," Write  nil? "," addHtmlLink  nil? "," getHtmlDomArray  [] [] != "," closeHTMLTagHandler  [] [] != "," openHTMLTagHandler  [] [] != "," getHtmlDomArray  [] [] empty? ! "," closeHTMLTagHandler  [] [] empty? ! "," openHTMLTagHandler  [] [] empty? ! "," getHtmlDomArray  [] [] empty? "," closeHTMLTagHandler  [] [] empty? "," openHTMLTagHandler  [] [] empty? ","dom [] [] length  > ","dom [] [] length  == "," getHtmlDomArray  [] [] length "," closeHTMLTagHandler  [] [] length "," openHTMLTagHandler  [] [] length "," getHtmlDomArray  [] [] lstrip "," closeHTMLTagHandler  [] [] lstrip "," openHTMLTagHandler  [] [] lstrip ","dom [] []  sprintf trip + "," getHtmlDomArray  [] [] rstrip + "," closeHTMLTagHandler  [] [] rstrip + "," openHTMLTagHandler  [] [] rstrip + ","dom [] []  sprintf trip "," getHtmlDomArray  [] [] rstrip "," closeHTMLTagHandler  [] [] rstrip "," openHTMLTagHandler  [] [] rstrip ","len1 -  > ","(send\n  (send\n    (lvar : getHtmlDomArray ) :[]\n    (lvar :key)) :[]\n  (str \"value\")) strip ","(send\n  (send\n    (lvar : closeHTMLTagHandler ) :[]\n    (lvar :key)) :[]\n  (str \"value\")) strip ","(send\n  (send\n    (lvar : openHTMLTagHandler ) :[]\n    (lvar :key)) :[]\n  (str \"value\")) strip ","len1 -  -@ "," sprintf p -@ "," sprintf p > ","dom [] [] length  - ","dom [] []  sprintf trip length "," getHtmlDomArray  [] [] rstrip length "," closeHTMLTagHandler  [] [] rstrip length "," openHTMLTagHandler  [] [] rstrip length "," getHtmlDomArray  [] [] lstrip length "," closeHTMLTagHandler  [] [] lstrip length "," openHTMLTagHandler  [] [] lstrip length ","(send\n  (ivar :dom [] [] ) :+\n  (send\n    (send\n      (lvar :pfontsize) :*\n      (ivar :@cell_height_ratio)) :/\n    (ivar :@k))) max ","(send\n  (ivar :@y) :+\n  (send\n    (send\n      (lvar :pdom [] [] ) :*\n      (ivar :@cell_height_ratio)) :/\n    (ivar :@k))) max ","(send\n  (ivar :@y) :+\n  (send\n    (send\n      (lvar :pfontsize) :*\n      (ivar :dom [] [] )) :/\n    (ivar :@k))) max ","dom [] []  + ","pdom [] []  * / ","pdom [] []  * ","(ivar :dom [] [] ) min ","(send\n  (send\n    (send\n      (send\n        (send\n          (send\n            (begin\n              (send\n                (lvar :pfontsize) :-\n                (lvar :curfontsize))) :*\n            (ivar :@cell_height_ratio)) :/\n          (ivar :@k)) :+\n        (lvar :pfontascent)) :-\n      (lvar :curfontascent)) :-\n    (lvar : getFontDescent )) :+\n  (lvar :curfontdescent)) / ","(send\n  (send\n    (send\n      (send\n        (send\n          (send\n            (begin\n              (send\n                (lvar :pfontsize) :-\n                (lvar :curfontsize))) :*\n            (ivar :@cell_height_ratio)) :/\n          (ivar :@k)) :+\n        (lvar : getFontAscent )) :-\n      (lvar :curfontascent)) :-\n    (lvar :pfontdescent)) :+\n  (lvar :curfontdescent)) / ","(send\n  (send\n    (send\n      (send\n        (send\n          (send\n            (begin\n              (send\n                (lvar :pfontsize) :-\n                (lvar :curfontsize))) :*\n            (ivar :@cell_height_ratio)) :/\n          (ivar :@k)) :+\n        (lvar :pfontascent)) :-\n      (lvar :curfontascent)) :-\n    (lvar :p getFontDescent )) :+\n  (lvar :cur getFontDescent )) / ","(send\n  (send\n    (send\n      (send\n        (send\n          (send\n            (begin\n              (send\n                (lvar :pfontsize) :-\n                (lvar :curfontsize))) :*\n            (ivar :@cell_height_ratio)) :/\n          (ivar :@k)) :+\n        (lvar :p getFontAscent )) :-\n      (lvar :cur getFontAscent )) :-\n    (lvar :pfontdescent)) :+\n  (lvar :curfontdescent)) / ","(send\n  (send\n    (send\n      (send\n        (send\n          (send\n            (begin\n              (send\n                (lvar :pdom [] [] ) :-\n                (lvar :curdom [] [] ))) :*\n            (ivar :@cell_height_ratio)) :/\n          (ivar :@k)) :+\n        (lvar :pfontascent)) :-\n      (lvar :curfontascent)) :-\n    (lvar :pfontdescent)) :+\n  (lvar :curfontdescent)) / ","(send\n  (send\n    (send\n      (send\n        (send\n          (send\n            (begin\n              (send\n                (lvar :pfontsize) :-\n                (lvar :curfontsize))) :*\n            (ivar :dom [] [] )) :/\n          (ivar :@k)) :+\n        (lvar :pfontascent)) :-\n      (lvar :curfontascent)) :-\n    (lvar :pfontdescent)) :+\n  (lvar :curfontdescent)) / ","(send\n  (send\n    (send\n      (send\n        (send\n          (send\n            (begin\n              (send\n                (lvar :pfontsize) :-\n                (lvar :curfontsize))) :*\n            (ivar :@cell_height_ratio)) :/\n          (ivar :@k)) :+\n        (lvar :pfontascent)) :-\n      (lvar :curfontascent)) :-\n    (lvar :pfontdescent)) :+\n  (lvar : getFontDescent )) / ","(send\n  (send\n    (send\n      (send\n        (send\n          (send\n            (begin\n              (send\n                (lvar :pfontsize) :-\n                (lvar :curfontsize))) :*\n            (ivar :@cell_height_ratio)) :/\n          (ivar :@k)) :+\n        (lvar :pfontascent)) :-\n      (lvar : getFontAscent )) :-\n    (lvar :pfontdescent)) :+\n  (lvar :curfontdescent)) / ","(send\n  (lvar :pdom [] [] ) :-\n  (lvar :curdom [] [] )) * / + - - + ","(send\n  (lvar :pdom [] [] ) :-\n  (lvar :curdom [] [] )) * / + - - ","(send\n  (lvar :pdom [] [] ) :-\n  (lvar :curdom [] [] )) * / + - ","(send\n  (lvar :pdom [] [] ) :-\n  (lvar :curdom [] [] )) * / + ","(send\n  (lvar :pdom [] [] ) :-\n  (lvar :curdom [] [] )) * / ","(send\n  (lvar :pdom [] [] ) :-\n  (lvar :curdom [] [] )) * ","pdom [] []  - ","pdom [] []  != ","curdom [] []  > ","curdom [] []  is_a? ","pdom [] []  > ","pdom [] []  is_a? "," getHtmlDomArray  [] [] length > "," closeHTMLTagHandler  [] [] length > "," openHTMLTagHandler  [] [] length > "," closeHTMLTagHan@pagedim [] [] - er "," openHTMLTagHan@pagedim [] [] - er ","cellen1 - acingx / ","cellspacing -@  / "," getHTMLUnitToUnits x / "," getHtmlDomArray  [] [] [] []= "," closeHTMLTagHandler  [] [] [] []= "," openHTMLTagHandler  [] [] [] []= ","dom [] [] []  [] < ","tr@w - - sp [] < ","tr@x - sp [] < ","dom [] [] []  [] ","tr@w - - sp [] ","tr@x - sp [] ","(send\n  (send\n    (lvar :dom) :[]\n    (lvar :dom [] [] )) :[]\n  (str \"endy\")) max ","(send\n  (send\n    (lvar : getHtmlDomArray ) :[]\n    (lvar :trid)) :[]\n  (str \"endy\")) max ","(send\n  (send\n    (lvar : closeHTMLTagHandler ) :[]\n    (lvar :trid)) :[]\n  (str \"endy\")) max ","(send\n  (send\n    (lvar : openHTMLTagHandler ) :[]\n    (lvar :trid)) :[]\n  (str \"endy\")) max ","dom [] [] []  [] == ","tr@w - - sp [] == ","tr@x - sp [] == "," getHtmlDomArray  [] [] nil? ! "," closeHTMLTagHandler  [] [] nil? ! "," openHTMLTagHandler  [] [] nil? ! ","dom [] [] []  [] > ","tr@w - - sp [] > ","tr@x - sp [] > "," getHtmlDomArray  [] [] each_with_index "," closeHTMLTagHandler  [] [] each_with_index "," openHTMLTagHandler  [] [] each_with_index ","dom [] [] each_@w - - ith_index ","dom [] [] each_@x - ith_index ","dom [] [] size  - ","t sprintf id - ","(ivar :dom [] [] ) max ","dom [] [] [] to_i  <= ","ro@w - - span <= ","ro@x - span <= "," getHtmlDomArray  [] [] dup "," closeHTMLTagHandler  [] [] dup "," openHTMLTagHandler  [] [] dup ","dom [] [] [] to_i  > ","ro@w - - span > ","ro@x - span > "," getHtmlDomArray  [] [] size "," closeHTMLTagHandler  [] [] size "," openHTMLTagHandler  [] [] size "," getHtmlDomArray  [] [] push "," closeHTMLTagHandler  [] [] push "," openHTMLTagHandler  [] [] push "," getHtmlDomArray  [] [] [] [] "," closeHTMLTagHandler  [] [] [] [] "," openHTMLTagHandler  [] [] [] [] ","trwsp []  + "," sprintf endx + ","dom [] []  - ","trwsp []  < "," sprintf startx < ","rsendx +  + + + ","rsendx +  + + ","rsendx +  + ","trwsp []  > "," sprintf startx > ","rsendx +  - - - ","rsendx +  - - ","rsendx +  - "," sprintf k < "," getHtmlDomArray  [] [] [] to_i "," closeHTMLTagHandler  [] [] [] to_i "," openHTMLTagHandler  [] [] [] to_i "," getHtmlDomArray  [] [] [] nil? ! "," closeHTMLTagHandler  [] [] [] nil? ! "," openHTMLTagHandler  [] [] [] nil? ! "," getHtmlDomArray  [] [] [] nil? "," closeHTMLTagHandler  [] [] [] nil? "," openHTMLTagHandler  [] [] [] nil? ","(and\n  (and\n    (and\n      (send\n        (send\n          (lvar :dom) :[]\n          (lvar :key)) :[]\n        (str \"tag\"))\n      (send\n        (send\n          (send\n            (lvar :dom) :[]\n            (lvar :key)) :[]\n          (str \"opening\")) :!))\n    (begin\n      (send\n        (send\n          (send\n            (lvar :dom) :[]\n            (lvar :key)) :[]\n          (str \"value\")) :==\n        (lvar :dom [] [] ))))\n  (begin\n    (send\n      (send\n        (send\n          (lvar :dom) :[]\n          (lvar :key)) :[]\n        (str \"parent\")) :==\n      (lvar :parentid)))) ! ","(and\n  (and\n    (and\n      (send\n        (send\n          (lvar : getHtmlDomArray ) :[]\n          (lvar :key)) :[]\n        (str \"tag\"))\n      (send\n        (send\n          (send\n            (lvar : getHtmlDomArray ) :[]\n            (lvar :key)) :[]\n          (str \"opening\")) :!))\n    (begin\n      (send\n        (send\n          (send\n            (lvar : getHtmlDomArray ) :[]\n            (lvar :key)) :[]\n          (str \"value\")) :==\n        (lvar :tagtype))))\n  (begin\n    (send\n      (send\n        (send\n          (lvar : getHtmlDomArray ) :[]\n          (lvar :key)) :[]\n        (str \"parent\")) :==\n      (lvar :parentid)))) ! ","(and\n  (and\n    (and\n      (send\n        (send\n          (lvar : closeHTMLTagHandler ) :[]\n          (lvar :key)) :[]\n        (str \"tag\"))\n      (send\n        (send\n          (send\n            (lvar : closeHTMLTagHandler ) :[]\n            (lvar :key)) :[]\n          (str \"opening\")) :!))\n    (begin\n      (send\n        (send\n          (send\n            (lvar : closeHTMLTagHandler ) :[]\n            (lvar :key)) :[]\n          (str \"value\")) :==\n        (lvar :tagtype))))\n  (begin\n    (send\n      (send\n        (send\n          (lvar : closeHTMLTagHandler ) :[]\n          (lvar :key)) :[]\n        (str \"parent\")) :==\n      (lvar :parentid)))) ! ","(and\n  (and\n    (and\n      (send\n        (send\n          (lvar : openHTMLTagHandler ) :[]\n          (lvar :key)) :[]\n        (str \"tag\"))\n      (send\n        (send\n          (send\n            (lvar : openHTMLTagHandler ) :[]\n            (lvar :key)) :[]\n          (str \"opening\")) :!))\n    (begin\n      (send\n        (send\n          (send\n            (lvar : openHTMLTagHandler ) :[]\n            (lvar :key)) :[]\n          (str \"value\")) :==\n        (lvar :tagtype))))\n  (begin\n    (send\n      (send\n        (send\n          (lvar : openHTMLTagHandler ) :[]\n          (lvar :key)) :[]\n        (str \"parent\")) :==\n      (lvar :parentid)))) ! ","colen1 - an * + ","dom [] [] []  * + ","(send\n  (lvar :colen1 - an) :-\n  (int 1)) * ","(send\n  (lvar :dom [] [] [] ) :-\n  (int 1)) * ","colen1 - an - ","dom [] [] []  - ","colen1 - an * ","dom [] [] []  * ","table_width -  / ","table_columns_@w - - idth / ","table_columns_@x - idth / "," getHTMLUnitToUnits  - ","table_@w - - idth - ","table_@x - idth - ","cellen1 - acing * "," getHTMLUnitToUnits  * "," getHtmlDomArray  [] [] - "," closeHTMLTagHandler  [] [] - "," openHTMLTagHandler  [] [] - ","cellen1 - acing -@ "," getHTMLUnitToUnits  -@ ","@@w - -  - - ","@@x -  - - ","@@w - -  - ","@@x -  - ","@w - - fill == ","@x - fill == "," checkPageBreak  ! ","(send\n  (send\n    (send\n      (send\n        (send\n          (lvar :pstart) :+\n          (str \"\\nq\\n\")) :+\n        (lvar :trx)) :+\n      (str \"\\n\")) :+\n    (lvar :pmid)) :+\n  (str \"\\nQ\\n\")) length  nil? ! ","(send\n  (send\n    (send\n      (lvar :pstart) :+\n      (str \"\\n\")) :+\n    (lvar :pmid)) :+\n  (str \"\\nBT 0 Tw ET\\n\")) length  nil? ! ","(send\n  (send\n    (send\n      (lvar :pstart) :+\n      (str \"\\n\")) :+\n    (lvar :pmid)) :+\n  (str \"\\n\")) length  nil? ! ","en@pagedim [] [] - inepos nil? ! ","(send\n  (send\n    (send\n      (send\n        (send\n          (lvar :pstart) :+\n          (str \"\\nq\\n\")) :+\n        (lvar :trx)) :+\n      (str \"\\n\")) :+\n    (lvar :pmid)) :+\n  (str \"\\nQ\\n\")) length  nil? ","(send\n  (send\n    (send\n      (lvar :pstart) :+\n      (str \"\\n\")) :+\n    (lvar :pmid)) :+\n  (str \"\\nBT 0 Tw ET\\n\")) length  nil? ","(send\n  (send\n    (send\n      (lvar :pstart) :+\n      (str \"\\n\")) :+\n    (lvar :pmid)) :+\n  (str \"\\n\")) length  nil? ","en@pagedim [] [] - inepos nil? ","(send\n  (send\n    (send\n      (lvar :pstart) :+\n      (str \"\\n\")) :+\n    (lvar : getPageBuffer [] )) :+\n  (str \"\\nBT 0 Tw ET\\n\")) length ","(send\n  (send\n    (send\n      (lvar :pstart) :+\n      (str \"\\n\")) :+\n    (lvar :pmidtemp sub )) :+\n  (str \"\\nBT 0 Tw ET\\n\")) length ","(send\n  (send\n    (send\n      (lvar :pstart) :+\n      (str \"\\n\")) :+\n    (lvar :pmid_b + + + + + + )) :+\n  (str \"\\nBT 0 Tw ET\\n\")) length ","(send\n  (send\n    (send\n      (lvar : getPageBuffer [] ) :+\n      (str \"\\n\")) :+\n    (lvar :pmid)) :+\n  (str \"\\nBT 0 Tw ET\\n\")) length ","(send\n  (send\n    (send\n      (lvar :pstart) :+\n      (str \"\\n\")) :+\n    (lvar :pmid)) :+\n  (str \"\\nBT 0 T@w - -  ET\\n\")) length ","(send\n  (send\n    (send\n      (lvar :pstart) :+\n      (str \"\\n\")) :+\n    (lvar :pmid)) :+\n  (str \"\\nBT 0 T@x -  ET\\n\")) length "," getPageBuffer []  gsub! ","pmidtemp sub  gsub! ","pmid_b + + + + + +  gsub! ","(send\n  (send\n    (send\n      (lvar :pstart) :+\n      (str \"\\n\")) :+\n    (lvar : getPageBuffer [] )) :+\n  (str \"\\n\")) length ","(send\n  (send\n    (send\n      (lvar :pstart) :+\n      (str \"\\n\")) :+\n    (lvar :pmidtemp sub )) :+\n  (str \"\\n\")) length ","(send\n  (send\n    (send\n      (lvar :pstart) :+\n      (str \"\\n\")) :+\n    (lvar :pmid_b + + + + + + )) :+\n  (str \"\\n\")) length ","(send\n  (send\n    (send\n      (lvar : getPageBuffer [] ) :+\n      (str \"\\n\")) :+\n    (lvar :pmid)) :+\n  (str \"\\n\")) length "," getPageBuffer [] temp sub ","pmidtemp sub temp sub ","pmid_b + + + + + + temp sub ","pmid dup  sub ","1 gsub  gsub ","1 gsub  gsub! "," getPageBuffer [] temp =~ ","pmidtemp sub temp =~ ","pmid_b + + + + + + temp =~ ","pmid dup  =~ "," getPageBuffer [] temp gsub! ","pmidtemp sub temp gsub! ","pmid_b + + + + + + temp gsub! ","pmid dup  gsub! ","(send\n  (begin\n    (send\n      (lvar :spacewidth) :*\n      (send\n        (lvar :pac) :[]\n        (str \"numspaces\")))) :-\n  (lvar : GetStringWidth )) / ","(send\n  (begin\n    (send\n      (lvar :spacewidth * idth) :*\n      (send\n        (lvar :pac) :[]\n        (str \"numspaces\")))) :-\n  (lvar :one_space_width)) / ","(send\n  (begin\n    (send\n      (lvar :(send\n  (begin\n    (send\n      (begin\n        (send\n          (lvar :tw) :-\n          (lvar :linew))) :+\n      (begin\n        (send\n          (begin\n            (send\n              (lvar :no) :-\n              (lvar :ns))) :*\n          (lvar :spacelen))))) :/\n  (begin\n    (if\n      (lvar :ns)\n      (lvar :ns)\n      (int 1)))) * ) :*\n      (send\n        (lvar :pac) :[]\n        (str \"numspaces\")))) :-\n  (lvar :one_space_width)) / ","(send\n  (begin\n    (send\n      (lvar :space@w - - idth) :*\n      (send\n        (lvar :pac) :[]\n        (str \"numspaces\")))) :-\n  (lvar :one_space_@w - - idth)) / ","(send\n  (begin\n    (send\n      (lvar :space@x - idth) :*\n      (send\n        (lvar :pac) :[]\n        (str \"numspaces\")))) :-\n  (lvar :one_space_@x - idth)) / ","(send\n  (lvar :spacewidth * idth) :*\n  (send\n    (lvar :pac) :[]\n    (str \"numspaces\"))) - ","(send\n  (lvar :(send\n  (begin\n    (send\n      (begin\n        (send\n          (lvar :tw) :-\n          (lvar :linew))) :+\n      (begin\n        (send\n          (begin\n            (send\n              (lvar :no) :-\n              (lvar :ns))) :*\n          (lvar :spacelen))))) :/\n  (begin\n    (if\n      (lvar :ns)\n      (lvar :ns)\n      (int 1)))) * ) :*\n  (send\n    (lvar :pac) :[]\n    (str \"numspaces\"))) - ","(send\n  (lvar :space@w - - idth) :*\n  (send\n    (lvar :pac) :[]\n    (str \"numspaces\"))) - ","(send\n  (lvar :space@x - idth) :*\n  (send\n    (lvar :pac) :[]\n    (str \"numspaces\"))) - ","spacewidth * idth * ","(send\n  (begin\n    (send\n      (begin\n        (send\n          (lvar :tw) :-\n          (lvar :linew))) :+\n      (begin\n        (send\n          (begin\n            (send\n              (lvar :no) :-\n              (lvar :ns))) :*\n          (lvar :spacelen))))) :/\n  (begin\n    (if\n      (lvar :ns)\n      (lvar :ns)\n      (int 1)))) *  * ","space@w - - idth * ","space@x - idth * ","(send\n  (lvar :spacewidth * idth) :*\n  (send\n    (lvar :pac) :[]\n    (str \"numspaces\"))) / ","(send\n  (lvar :(send\n  (begin\n    (send\n      (begin\n        (send\n          (lvar :tw) :-\n          (lvar :linew))) :+\n      (begin\n        (send\n          (begin\n            (send\n              (lvar :no) :-\n              (lvar :ns))) :*\n          (lvar :spacelen))))) :/\n  (begin\n    (if\n      (lvar :ns)\n      (lvar :ns)\n      (int 1)))) * ) :*\n  (send\n    (lvar :pac) :[]\n    (str \"numspaces\"))) / ","(send\n  (lvar :space@w - - idth) :*\n  (send\n    (lvar :pac) :[]\n    (str \"numspaces\"))) / ","(send\n  (lvar :space@x - idth) :*\n  (send\n    (lvar :pac) :[]\n    (str \"numspaces\"))) / ","(send\n  (lvar :spacew) :-\n  (lvar : GetStringWidth )) / ","(send\n  (lvar :spacewidth * ) :-\n  (lvar :one_space_width)) / ","(send\n  (lvar :space@w - - ) :-\n  (lvar :one_space_@w - - idth)) / ","(send\n  (lvar :space@x - ) :-\n  (lvar :one_space_@x - idth)) / ","spacewidth *  - ","space@w - -  - ","space@x -  - ","currentxpos /  > ","1 to_i  + ","1 to_i  - ","@pagedim [] []  + + ","@thead_margins []  + + ","@pagedim [] []  + ","@thead_margins []  + ","1 to_i  / "," getPageBuffer []  sub! ","pmidtemp sub  sub! ","pmid_b + + + + + +  sub! "," getPageBuffer []  =~ ","pmidtemp sub  =~ ","pmid_b + + + + + +  =~ ","pmidtemp scan  [] [] ","pmidtemp scan  [] ","1 to_i  > ","1 to_i  < ","lnstring [] []  count ","lnstring [] [] rstrip  count ","lnstring [] [] lstrip  count ","lnstring [] []  sprintf trip ","pmidtemp scan  [] [] rstrip "," getPageBuffer [] _mark == ","pmidtemp sub _mark == ","pmid_b + + + + + + _mark == ","pmid [] ark == "," getPageBuffer [] _b + + + + + + ","pmidtemp sub _b + + + + + + ","pmid_b + + + + + + _b + + + + + + ","pmid []  + + + + + + "," getPageBuffer [] _b + + + + + ","pmidtemp sub _b + + + + + ","pmid_b + + + + + + _b + + + + + ","pmid []  + + + + + "," getPageBuffer [] _b + + + + ","pmidtemp sub _b + + + + ","pmid_b + + + + + + _b + + + + ","pmid []  + + + + "," getPageBuffer [] _b + + + ","pmidtemp sub _b + + + ","pmid_b + + + + + + _b + + + ","pmid []  + + + "," getPageBuffer [] _b + + ","pmidtemp sub _b + + ","pmid_b + + + + + + _b + + ","pmid []  + + "," getPageBuffer [] _b + ","pmidtemp sub _b + ","pmid_b + + + + + + _b + ","pmid []  + "," getPageBuffer []  [] ","pmidtemp sub  [] ","pmid_b + + + + + +  [] ","pmid index  - ","pmid index  nil? ","prev_pmid index  - ","pmid_offset +  < ","pmid index  < ","pmid index  > ","pmid index  === ","pmid_offset +  > "," getPageBuffer [] _offset + ","pmidtemp sub _offset + ","pmid_b + + + + + + _offset + ","pmid_pmid_offset +  + ","pmid_pmid index  + ","pmid index  + ","pmid_offset +  == ","pmid index  == ","pmid_offset +  + "," getPageBuffer []  [] == ","pmidtemp sub  [] == ","pmid_b + + + + + +  [] == ","pmid_offset +  - ","pmid_offset +  != ","pmid index  != ","strpmid_offset +  <= ","strpmid index  <= ","pmid index  <= ","strpmid_offset +  != ","strpmid index  != ","(send\n  (lvar :tw) :-\n  (lvar :(send\n  (ivar :@endlinex) :-\n  (lvar :startlinex)) abs )) + ","(send\n  (lvar :t@w - - ) :-\n  (lvar :line@w - - )) + ","(send\n  (lvar :t@x - ) :-\n  (lvar :line@x - )) + ","(send\n  (begin\n    (send\n      (begin\n        (send\n          (lvar :tw) :-\n          (lvar :(send\n  (ivar :@endlinex) :-\n  (lvar :startlinex)) abs ))) :+\n      (begin\n        (send\n          (begin\n            (send\n              (lvar :no) :-\n              (lvar :ns))) :*\n          (lvar :spacelen))))) :/\n  (begin\n    (if\n      (lvar :ns)\n      (lvar :ns)\n      (int 1)))) * ","(send\n  (begin\n    (send\n      (begin\n        (send\n          (lvar :t@w - - ) :-\n          (lvar :line@w - - ))) :+\n      (begin\n        (send\n          (begin\n            (send\n              (lvar :no) :-\n              (lvar :ns))) :*\n          (lvar :spacelen))))) :/\n  (begin\n    (if\n      (lvar :ns)\n      (lvar :ns)\n      (int 1)))) * ","(send\n  (begin\n    (send\n      (begin\n        (send\n          (lvar :t@x - ) :-\n          (lvar :line@x - ))) :+\n      (begin\n        (send\n          (begin\n            (send\n              (lvar :no) :-\n              (lvar :ns))) :*\n          (lvar :spacelen))))) :/\n  (begin\n    (if\n      (lvar :ns)\n      (lvar :ns)\n      (int 1)))) * ","(send\n  (begin\n    (send\n      (lvar :tw) :-\n      (lvar :(send\n  (ivar :@endlinex) :-\n  (lvar :startlinex)) abs ))) :+\n  (begin\n    (send\n      (begin\n        (send\n          (lvar :no) :-\n          (lvar :ns))) :*\n      (lvar :spacelen)))) / ","(send\n  (begin\n    (send\n      (lvar :t@w - - ) :-\n      (lvar :line@w - - ))) :+\n  (begin\n    (send\n      (begin\n        (send\n          (lvar :no) :-\n          (lvar :ns))) :*\n      (lvar :spacelen)))) / ","(send\n  (begin\n    (send\n      (lvar :t@x - ) :-\n      (lvar :line@x - ))) :+\n  (begin\n    (send\n      (begin\n        (send\n          (lvar :no) :-\n          (lvar :ns))) :*\n      (lvar :spacelen)))) / ","@pagedim [] []  - + - ","@thead_margins []  - + - ","@pagedim [] []  - + ","@thead_margins []  - + ","@pagedim [] []  - ","@thead_margins []  - ","pmidtemp scan  [] []= ","pmidtemp scan  [] [] count ","pmidtemp scan  [] [] lstrip ","pmidtemp scan  [] [] gsub! ","pmidtemp scan  length - ","pmidtemp scan  length ","pmidtemp scan  empty? ! ","pmidtemp scan  empty? "," getPageBuffer [] temp scan ","pmidtemp sub temp scan ","pmid_b + + + + + + temp scan ","pmid dup  scan "," SetDra@w - - ColorArray "," SetDra@x - ColorArray ","(send\n  (ivar :dom [] [] ) :+\n  (begin\n    (send\n      (begin\n        (send\n          (lvar :fontsize) :*\n          (ivar :@cell_height_ratio))) :/\n      (ivar :@k)))) max ","(send\n  (ivar :@y) :+\n  (begin\n    (send\n      (begin\n        (send\n          (lvar :dom [] [] ) :*\n          (ivar :@cell_height_ratio))) :/\n      (ivar :@k)))) max ","(send\n  (ivar :@y) :+\n  (begin\n    (send\n      (begin\n        (send\n          (lvar :fontsize) :*\n          (ivar :dom [] [] ))) :/\n      (ivar :@k)))) max ","(send\n  (lvar :dom [] [] ) :*\n  (ivar :@cell_height_ratio)) / ","(send\n  (lvar :fontsize) :*\n  (ivar :dom [] [] )) / ","dom [] []  * ","(send\n  (send\n    (send\n      (send\n        (begin\n          (send\n            (send\n              (begin\n                (send\n                  (lvar :curfontsize) :-\n                  (lvar :fontsize))) :*\n              (ivar :@cell_height_ratio)) :/\n            (ivar :@k))) :+\n        (lvar :curfontascent)) :-\n      (lvar :fontascent)) :-\n    (lvar :cur getFontDescent )) :+\n  (lvar : getFontDescent )) / ","(send\n  (send\n    (send\n      (send\n        (begin\n          (send\n            (send\n              (begin\n                (send\n                  (lvar :curfontsize) :-\n                  (lvar :fontsize))) :*\n              (ivar :@cell_height_ratio)) :/\n            (ivar :@k))) :+\n        (lvar :cur getFontAscent )) :-\n      (lvar : getFontAscent )) :-\n    (lvar :curfontdescent)) :+\n  (lvar :fontdescent)) / ","(send\n  (send\n    (send\n      (send\n        (begin\n          (send\n            (send\n              (begin\n                (send\n                  (lvar :curdom [] [] ) :-\n                  (lvar :dom [] [] ))) :*\n              (ivar :@cell_height_ratio)) :/\n            (ivar :@k))) :+\n        (lvar :curfontascent)) :-\n      (lvar :fontascent)) :-\n    (lvar :curfontdescent)) :+\n  (lvar :fontdescent)) / ","(send\n  (send\n    (send\n      (send\n        (begin\n          (send\n            (send\n              (begin\n                (send\n                  (lvar :curfontsize) :-\n                  (lvar :fontsize))) :*\n              (ivar :dom [] [] )) :/\n            (ivar :@k))) :+\n        (lvar :curfontascent)) :-\n      (lvar :fontascent)) :-\n    (lvar :curfontdescent)) :+\n  (lvar :fontdescent)) / ","(send\n  (send\n    (send\n      (send\n        (begin\n          (send\n            (send\n              (begin\n                (send\n                  (lvar :curfontsize) :-\n                  (lvar :fontsize))) :*\n              (ivar :@cell_height_ratio)) :/\n            (ivar :@k))) :+\n        (lvar :curfontascent)) :-\n      (lvar :fontascent)) :-\n    (lvar : getFontDescent )) :+\n  (lvar :fontdescent)) / ","(send\n  (send\n    (send\n      (send\n        (begin\n          (send\n            (send\n              (begin\n                (send\n                  (lvar :curfontsize) :-\n                  (lvar :fontsize))) :*\n              (ivar :@cell_height_ratio)) :/\n            (ivar :@k))) :+\n        (lvar : getFontAscent )) :-\n      (lvar :fontascent)) :-\n    (lvar :curfontdescent)) :+\n  (lvar :fontdescent)) / ","(send\n  (send\n    (begin\n      (send\n        (lvar :curdom [] [] ) :-\n        (lvar :dom [] [] ))) :*\n    (ivar :@cell_height_ratio)) :/\n  (ivar :@k)) + - - + ","(send\n  (send\n    (begin\n      (send\n        (lvar :curfontsize) :-\n        (lvar :fontsize))) :*\n    (ivar :dom [] [] )) :/\n  (ivar :@k)) + - - + ","(send\n  (send\n    (begin\n      (send\n        (lvar :curdom [] [] ) :-\n        (lvar :dom [] [] ))) :*\n    (ivar :@cell_height_ratio)) :/\n  (ivar :@k)) + - - ","(send\n  (send\n    (begin\n      (send\n        (lvar :curfontsize) :-\n        (lvar :fontsize))) :*\n    (ivar :dom [] [] )) :/\n  (ivar :@k)) + - - ","(send\n  (send\n    (begin\n      (send\n        (lvar :curdom [] [] ) :-\n        (lvar :dom [] [] ))) :*\n    (ivar :@cell_height_ratio)) :/\n  (ivar :@k)) + - ","(send\n  (send\n    (begin\n      (send\n        (lvar :curfontsize) :-\n        (lvar :fontsize))) :*\n    (ivar :dom [] [] )) :/\n  (ivar :@k)) + - ","(send\n  (send\n    (begin\n      (send\n        (lvar :curdom [] [] ) :-\n        (lvar :dom [] [] ))) :*\n    (ivar :@cell_height_ratio)) :/\n  (ivar :@k)) + ","(send\n  (send\n    (begin\n      (send\n        (lvar :curfontsize) :-\n        (lvar :fontsize))) :*\n    (ivar :dom [] [] )) :/\n  (ivar :@k)) + ","(send\n  (lvar :curdom [] [] ) :-\n  (lvar :dom [] [] )) * / ","(send\n  (lvar :curdom [] [] ) :-\n  (lvar :dom [] [] )) * ","curdom [] []  - ","pagebuff []  + + + + + + ","pagebuff []  + + + + + ","pagebuff []  + + + + ","pagebuff []  + + + ","pagebuff []  + + ","pagebuff []  + "," getPageBuffer  [] ","@pagelen []  - ","@pagelen [] -  - ","@ne@w - - line ! ","@ne@x - line ! ","dom size  - ","dom [] []  != ","curdom [] []  >= ","dom [] []  >= ","dom [] []  is_a? ","(send\n  (send\n    (begin\n      (send\n        (send\n          (lvar :curfontsize) :*\n          (ivar :@cell_height_ratio)) :/\n        (ivar :@k))) :+\n    (lvar :curfontascent)) :-\n  (lvar :cur getFontDescent )) / - ","(send\n  (send\n    (begin\n      (send\n        (send\n          (lvar :curfontsize) :*\n          (ivar :@cell_height_ratio)) :/\n        (ivar :@k))) :+\n    (lvar :cur getFontAscent )) :-\n  (lvar :curfontdescent)) / - ","(send\n  (send\n    (begin\n      (send\n        (send\n          (lvar :curdom [] [] ) :*\n          (ivar :@cell_height_ratio)) :/\n        (ivar :@k))) :+\n    (lvar :curfontascent)) :-\n  (lvar :curfontdescent)) / - ","(send\n  (send\n    (begin\n      (send\n        (send\n          (lvar :curfontsize) :*\n          (ivar :dom [] [] )) :/\n        (ivar :@k))) :+\n    (lvar :curfontascent)) :-\n  (lvar :curfontdescent)) / - ","(send\n  (send\n    (begin\n      (send\n        (send\n          (lvar :curfontsize) :*\n          (ivar :@cell_height_ratio)) :/\n        (ivar :@k))) :+\n    (lvar :curfontascent)) :-\n  (lvar : getFontDescent )) / - ","(send\n  (send\n    (begin\n      (send\n        (send\n          (lvar :curfontsize) :*\n          (ivar :@cell_height_ratio)) :/\n        (ivar :@k))) :+\n    (lvar : getFontAscent )) :-\n  (lvar :curfontdescent)) / - ","(send\n  (send\n    (begin\n      (send\n        (send\n          (lvar :curfontsize) :*\n          (ivar :@cell_height_ratio)) :/\n        (ivar :@k))) :+\n    (lvar :curfontascent)) :-\n  (lvar :cur getFontDescent )) / ","(send\n  (send\n    (begin\n      (send\n        (send\n          (lvar :curfontsize) :*\n          (ivar :@cell_height_ratio)) :/\n        (ivar :@k))) :+\n    (lvar :cur getFontAscent )) :-\n  (lvar :curfontdescent)) / ","(send\n  (send\n    (begin\n      (send\n        (send\n          (lvar :curdom [] [] ) :*\n          (ivar :@cell_height_ratio)) :/\n        (ivar :@k))) :+\n    (lvar :curfontascent)) :-\n  (lvar :curfontdescent)) / ","(send\n  (send\n    (begin\n      (send\n        (send\n          (lvar :curfontsize) :*\n          (ivar :dom [] [] )) :/\n        (ivar :@k))) :+\n    (lvar :curfontascent)) :-\n  (lvar :curfontdescent)) / ","(send\n  (send\n    (begin\n      (send\n        (send\n          (lvar :curfontsize) :*\n          (ivar :@cell_height_ratio)) :/\n        (ivar :@k))) :+\n    (lvar :curfontascent)) :-\n  (lvar : getFontDescent )) / ","(send\n  (send\n    (begin\n      (send\n        (send\n          (lvar :curfontsize) :*\n          (ivar :@cell_height_ratio)) :/\n        (ivar :@k))) :+\n    (lvar : getFontAscent )) :-\n  (lvar :curfontdescent)) / ","(send\n  (send\n    (lvar :curdom [] [] ) :*\n    (ivar :@cell_height_ratio)) :/\n  (ivar :@k)) + - ","(send\n  (send\n    (lvar :curfontsize) :*\n    (ivar :dom [] [] )) :/\n  (ivar :@k)) + - ","(send\n  (send\n    (lvar :curdom [] [] ) :*\n    (ivar :@cell_height_ratio)) :/\n  (ivar :@k)) + ","(send\n  (send\n    (lvar :curfontsize) :*\n    (ivar :dom [] [] )) :/\n  (ivar :@k)) + ","curdom [] []  * / ","curdom [] []  * ","curdom [] []  / ","rsendx +  + > ","rsendx +  - < "," getHtmlDomArray  [] [] [] to_i > "," closeHTMLTagHandler  [] [] [] to_i > "," openHTMLTagHandler  [] [] [] to_i > ","(or\n  (begin\n    (and\n      (and\n        (and\n          (send\n            (send\n              (lvar : getHtmlDomArray ) :[]\n              (lvar :key)) :[]\n            (str \"tag\"))\n          (send\n            (send\n              (lvar : getHtmlDomArray ) :[]\n              (lvar :key)) :[]\n            (str \"opening\")))\n        (begin\n          (send\n            (send\n              (send\n                (lvar : getHtmlDomArray ) :[]\n                (lvar :key)) :[]\n              (str \"value\")) :==\n            (str \"tr\"))))\n      (begin\n        (or\n          (send\n            (send\n              (send\n                (lvar : getHtmlDomArray ) :[]\n                (lvar :key)) :[]\n              (str \"thead\")) :nil?)\n          (send\n            (send\n              (send\n                (lvar : getHtmlDomArray ) :[]\n                (lvar :key)) :[]\n              (str \"thead\")) :!)))))\n  (begin\n    (and\n      (and\n        (send\n          (send\n            (lvar : getHtmlDomArray ) :[]\n            (lvar :key)) :[]\n          (str \"tag\"))\n        (send\n          (send\n            (send\n              (lvar : getHtmlDomArray ) :[]\n              (lvar :key)) :[]\n            (str \"opening\")) :!))\n      (begin\n        (send\n          (send\n            (send\n              (lvar : getHtmlDomArray ) :[]\n              (lvar :key)) :[]\n            (str \"value\")) :==\n          (str \"table\")))))) ! ","(or\n  (begin\n    (and\n      (and\n        (and\n          (send\n            (send\n              (lvar : closeHTMLTagHandler ) :[]\n              (lvar :key)) :[]\n            (str \"tag\"))\n          (send\n            (send\n              (lvar : closeHTMLTagHandler ) :[]\n              (lvar :key)) :[]\n            (str \"opening\")))\n        (begin\n          (send\n            (send\n              (send\n                (lvar : closeHTMLTagHandler ) :[]\n                (lvar :key)) :[]\n              (str \"value\")) :==\n            (str \"tr\"))))\n      (begin\n        (or\n          (send\n            (send\n              (send\n                (lvar : closeHTMLTagHandler ) :[]\n                (lvar :key)) :[]\n              (str \"thead\")) :nil?)\n          (send\n            (send\n              (send\n                (lvar : closeHTMLTagHandler ) :[]\n                (lvar :key)) :[]\n              (str \"thead\")) :!)))))\n  (begin\n    (and\n      (and\n        (send\n          (send\n            (lvar : closeHTMLTagHandler ) :[]\n            (lvar :key)) :[]\n          (str \"tag\"))\n        (send\n          (send\n            (send\n              (lvar : closeHTMLTagHandler ) :[]\n              (lvar :key)) :[]\n            (str \"opening\")) :!))\n      (begin\n        (send\n          (send\n            (send\n              (lvar : closeHTMLTagHandler ) :[]\n              (lvar :key)) :[]\n            (str \"value\")) :==\n          (str \"table\")))))) ! ","(or\n  (begin\n    (and\n      (and\n        (and\n          (send\n            (send\n              (lvar : openHTMLTagHandler ) :[]\n              (lvar :key)) :[]\n            (str \"tag\"))\n          (send\n            (send\n              (lvar : openHTMLTagHandler ) :[]\n              (lvar :key)) :[]\n            (str \"opening\")))\n        (begin\n          (send\n            (send\n              (send\n                (lvar : openHTMLTagHandler ) :[]\n                (lvar :key)) :[]\n              (str \"value\")) :==\n            (str \"tr\"))))\n      (begin\n        (or\n          (send\n            (send\n              (send\n                (lvar : openHTMLTagHandler ) :[]\n                (lvar :key)) :[]\n              (str \"thead\")) :nil?)\n          (send\n            (send\n              (send\n                (lvar : openHTMLTagHandler ) :[]\n                (lvar :key)) :[]\n              (str \"thead\")) :!)))))\n  (begin\n    (and\n      (and\n        (send\n          (send\n            (lvar : openHTMLTagHandler ) :[]\n            (lvar :key)) :[]\n          (str \"tag\"))\n        (send\n          (send\n            (send\n              (lvar : openHTMLTagHandler ) :[]\n              (lvar :key)) :[]\n            (str \"opening\")) :!))\n      (begin\n        (send\n          (send\n            (send\n              (lvar : openHTMLTagHandler ) :[]\n              (lvar :key)) :[]\n            (str \"value\")) :==\n          (str \"table\")))))) ! "," @w - - riteHTML "," @x - riteHTML ","this_method_va sprintf  []= ","Ma sprintf hal  load ","Ma sprintf hal  dump ","curdom [] []  dup "," getHtmlDomArray  [] [] []= "," closeHTMLTagHandler  [] [] []= "," openHTMLTagHandler  [] [] []= "," getHtmlDomArray  size "," closeHTMLTagHandler  size "," openHTMLTagHandler  size "," getGraphicVa sprintf  ","(send\n  (lvar :(send\n  (lvar :tw) :-\n  (lvar :linew)) abs ) :/\n  (float 2.0)) -@ ","@line_@w - - idth / ","@line_@x - idth / "," getHTMLUnitToUnits  < ","@line_width /  < "," getHtmlDomArray  [] [] to_i > "," closeHTMLTagHandler  [] [] to_i > "," openHTMLTagHandler  [] [] to_i > "," getHtmlDomArray  [] [] to_i "," closeHTMLTagHandler  [] [] to_i "," openHTMLTagHandler  [] [] to_i "," getHtmlDomArray  [] [] strip length > "," closeHTMLTagHandler  [] [] strip length > "," openHTMLTagHandler  [] [] strip length > "," getHtmlDomArray  [] [] strip length "," closeHTMLTagHandler  [] [] strip length "," openHTMLTagHandler  [] [] strip length "," getHtmlDomArray  [] [] strip "," closeHTMLTagHandler  [] [] strip "," openHTMLTagHandler  [] [] strip "," getPageBuffer []  dup ","pmidtemp sub  dup ","pmid_b + + + + + +  dup "," getHtmlDomArray  [] [] strip length == "," closeHTMLTagHandler  [] [] strip length == "," openHTMLTagHandler  [] [] strip length == "]}," RBPDF writeHTMLCell":{"type":"method","name":"writeHTMLCell","children":[],"call":[" MultiCell "," Error "]}," RBPDF getSpaceString":{"type":"method","name":"getSpaceString","children":[],"call":["0 chr + ","32 chr ","0 chr ","@current_font [] == ","@current_font [] "]}," RBPDF get_sever_url":{"type":"method","name":"get_sever_url","children":[],"call":["url [] == ","url [] "," empty_string ! "," empty_string "]}," RBPDF get_image_filename":{"type":"method","name":"get_image_filename","children":[],"call":["attrname gsub ","testscrtype query empty? ","testscrtype query ","testscrtype query nil? ","URI  parse ","File  join ","ERB Util  url_encode ","File  basename ","File  dirname ","CGI  escape ","attrname gsub  gsub ","URI  parse  query empty? ","URI  parse  query ","URI  parse  query nil? "]}," RBPDF getHtmlDomArray":{"type":"method","name":"getHtmlDomArray","children":[],"call":["dom [] []= ","level [] ","dom [] "," unhtmlentities gsub "," unhtmlentities ","dom [] [] [] == ","dom [] [] [] ","dom [] [] ","dom [] [] [] nil? ! ","dom [] [] [] nil? "," getHTMLUnitToUnits ","dom [] [] [] [] upcase ","dom [] [] [] [] ","dom [] [] != "," empty_string ! "," empty_string "," convertHTMLColorToDec ","dom [] [] == ","dom [] [] nil? ","dom [] [] []= ","dom [] [] [] to_i ","dom [] [] push ","dom [] [] << ","dom [] [] + ","(send\n  (int 4) :-\n  (send\n    (send\n      (send\n        (send\n          (lvar :dom) :[]\n          (lvar :key)) :[]\n        (str \"value\")) :[]\n      (int 1)\n      (int 1)) :to_i)) * ","4 - ","dom [] [] [] to_i < ","dom [] [] [] to_i > ","dom [] [] * ","dom [] [] - ","dom [] [] [] [] to_i ","dom [] [] [] [] == ","key > ","@fontkeys include? ","@fontlist include? ","font downcase strip ","font downcase ","fontslist each ","dom [] [] [] downcase split ","dom [] [] [] downcase ","dec [] == ","dec [] ","dec strip ","decors each ","dom [] [] [] [] downcase == ","dom [] [] [] [] downcase ","lineheight to_f * ","lineheight to_f ","lineheight =~ ","dom [] [] [] strip ","dom [] [] [] downcase strip ","value strip ","name downcase ","style_array each ","dom [] [] [] scan "," getTagStyleFromCSS ","css empty? ! ","css empty? ","attr_array each ","element scan ","dom [] [] dup ","level push ","element [] != ","element [] ","dom [] [] gsub ","a [] ","dom [] [] upto ","a [] dup ","(send\n  (send\n    (send\n      (lvar :dom) :[]\n      (lvar :key)) :[]\n    (str \"parent\")) :+\n  (int 1)) upto ","key - ","dom [] [] nil? ! ","level pop ","level length > ","level length ","element [] == ","blocktags include? ","tagname == ","tag [] downcase ","tag [] ","x length == ","x length ","element scan flatten delete_if ","element scan flatten ","element =~ ","dom []= ","elkey < ","@strokecolor dup ","@fgcolor dup ","ActiveSupport OrderedHash  new ","@textrendermode > ","(send\n  (ivar :@textrendermode) :%\n  (int 2)) == ","@textrendermode % ","@font_style dup ","@font_family dup ","a size ","x empty? ","html split compact delete_if ","html split compact ","html split ","html gsub! ","(send\n  (lvar :html_a) :+\n  (lvar :html_b)) length ","html_a + ","html_a + + ","html [] ","pos + ","html_b gsub ","html_b =~ ","pos - + ","pos - ","(lvasgn :pos\n  (send\n    (lvar :html) :index\n    (str \"</pre>\")\n    (lvar :offset))) != ","html index ","offset < ","html length ","%s % "," sanitize "," ActionView Base  sanitized_allowed_css_properties= ","css merge "," extractCSSproperties ","media [] ","type [] == ","type [] ","type empty? ","media [] scan ","matches each ","matches empty? ","html scan ","res body ","Net HTTP  get_response ","uri host ! ","uri host ","uri scheme ! ","uri scheme "," URI ","cssdata << ","f read "," open ","File  exists? ","uri_path join ","uri split each ","uri split ","uri sub! ","Rails  root join ","Rails  root ","uri =~ ","type [] [] strip ","type [] [] ","link [] scan ","link [] ","type [] [] == ","html force_encoding ","html respond_to? ","dom [] [] =~ ","<style> + + + + + ","<style> + + + + ","<style> + + + ","<style> + + ","<style> + ","html dup ","dom [] [] gsub sub "," sanitize_html ","File  exist? ","3 == ","2 != ","3 != ","2 == ","element scan [] ","html_a length + ","html_b length ","html_a length ","html_b gsub! "," unhtml_a + + entities gsub "," un%s % entities gsub "," unhtml dup entities gsub "," un sanitize_html entities gsub "," unhtml_a + + entities "," un%s % entities "," unhtml dup entities "," un sanitize_html entities ","@font downcase strip keys include? ","@font downcase strip list include? ","font downcase strip  downcase strip ","font downcase strip  downcase ","font downcase strip slist each ","dom [] [] [] downcase split  each ","dec strip  [] == ","dec strip  [] ","dec strip  strip ","dec strip ors each ","lineheight to_f *  to_f * ","dom [] [] [] strip  to_f * ","lineheight to_f *  to_f ","dom [] [] [] strip  to_f ","lineheight to_f *  =~ ","dom [] [] [] strip  =~ ","dom [] [] [] scan  each ","css merge  empty? ! ","css merge  empty? ","element scan  each ","element scan []  each ","element []  scan ","a []  scan ","element []  [] != ","a []  [] != ","element []  [] ","a []  [] ","element []  [] == ","a []  [] == ","tag [] downcase  == ","element []  scan flatten delete_if ","a []  scan flatten delete_if ","element []  scan flatten ","a []  scan flatten ","element []  =~ ","a []  =~ ","@font downcase strip _style dup ","@font downcase strip _family dup ","html_a + +  split compact delete_if ","%s %  split compact delete_if ","html dup  split compact delete_if "," sanitize_html  split compact delete_if ","html_a + +  split compact ","%s %  split compact ","html dup  split compact "," sanitize_html  split compact ","html_a + +  split ","%s %  split ","html dup  split "," sanitize_html  split ","html_a + +  gsub! ","%s %  gsub! ","html dup  gsub! "," sanitize_html  gsub! ","(send\n  (lvar :html_a + + _a) :+\n  (lvar :html_a + + _b)) length ","(send\n  (lvar :%s % _a) :+\n  (lvar :%s % _b)) length ","(send\n  (lvar :html dup _a) :+\n  (lvar :html dup _b)) length ","(send\n  (lvar : sanitize_html _a) :+\n  (lvar : sanitize_html _b)) length ","(send\n  (lvar :html_a) :+\n  (lvar :html_b gsub )) length ","(send\n  (lvar :html_a) :+\n  (lvar :html [] )) length ","(send\n  (lvar :html [] ) :+\n  (lvar :html_b)) length ","html_a + + _a + ","%s % _a + ","html dup _a + "," sanitize_html _a + ","html []  + ","html_a + + _a + + ","%s % _a + + ","html dup _a + + "," sanitize_html _a + + ","html []  + + ","html_a + +  [] ","%s %  [] ","html dup  [] "," sanitize_html  [] ","html index  + ","html_a + + _b gsub ","%s % _b gsub ","html dup _b gsub "," sanitize_html _b gsub ","html_b gsub  gsub ","html []  gsub ","html_a + + _b =~ ","%s % _b =~ ","html dup _b =~ "," sanitize_html _b =~ ","html_b gsub  =~ ","html []  =~ ","html index  - + ","html index  - ","(lvasgn :pos\n  (send\n    (lvar :html) :index\n    (str \"</pre>\")\n    (lvar :(send\n  (lvar :html_a) :+\n  (lvar :html_b)) length ))) != ","(lvasgn :pos\n  (send\n    (lvar :html) :index\n    (str \"</pre>\")\n    (lvar :html_a length + ))) != ","(lvasgn :pos\n  (send\n    (lvar :html_a + + ) :index\n    (str \"</pre>\")\n    (lvar :offset))) != ","(lvasgn :pos\n  (send\n    (lvar :%s % ) :index\n    (str \"</pre>\")\n    (lvar :offset))) != ","(lvasgn :pos\n  (send\n    (lvar :html dup ) :index\n    (str \"</pre>\")\n    (lvar :offset))) != ","(lvasgn :pos\n  (send\n    (lvar : sanitize_html ) :index\n    (str \"</pre>\")\n    (lvar :offset))) != ","(lvasgn :html index \n  (send\n    (lvar :html) :index\n    (str \"</pre>\")\n    (lvar :offset))) != ","html_a + +  index ","%s %  index ","html dup  index "," sanitize_html  index ","(send\n  (lvar :html_a) :+\n  (lvar :html_b)) length  < ","html_a length +  < ","html_a + +  length ","%s %  length ","html dup  length "," sanitize_html  length "," ActionView Base  sanitized_allowed_css merge _properties= ","css merge  merge ","media [] scan  [] == ","link [] scan  [] == ","media [] scan  [] ","link [] scan  [] ","media [] scan  empty? ","link [] scan  empty? ","html scan  each ","html scan  empty? ","html_a + +  scan ","%s %  scan ","html dup  scan "," sanitize_html  scan ","Net HTTP  get_response  body ","Net HTTP  get_Net HTTP  get_response ponse "," URI  host ! ","type [] [] strip  host ! "," URI  host ","type [] [] strip  host "," URI  scheme ! ","type [] [] strip  scheme ! "," URI  scheme ","type [] [] strip  scheme ","css merge data << ","media []  << ","res body  << "," URI _path join ","type [] [] strip _path join ","uri_path join  join ","Rails  root join  join "," URI  split each ","type [] [] strip  split each "," URI  split ","type [] [] strip  split "," URI  sub! ","type [] [] strip  sub! "," URI  =~ ","type [] [] strip  =~ ","media [] scan  [] [] strip ","link [] scan  [] [] strip ","media [] scan  [] [] ","link [] scan  [] [] ","media [] scan  [] [] == ","link [] scan  [] [] == ","html_a + +  force_encoding ","%s %  force_encoding ","html dup  force_encoding "," sanitize_html  force_encoding ","html_a + +  respond_to? ","%s %  respond_to? ","html dup  respond_to? "," sanitize_html  respond_to? ","html Net HTTP  get_response pond_to? ","html_a + +  dup ","%s %  dup ","html dup  dup "," sanitize_html  dup "," sanitize_html_a + +  "," sanitize_%s %  "," sanitize_html dup  "," sanitize_ sanitize_html  ","element []  scan [] ","a []  scan [] ","html_a + + _a length + ","%s % _a length + ","html dup _a length + "," sanitize_html _a length + ","html []  length + ","html_a + + _b length ","%s % _b length ","html dup _b length "," sanitize_html _b length ","html_b gsub  length ","html []  length ","html_a + + _a length ","%s % _a length ","html dup _a length "," sanitize_html _a length ","html_a + + _b gsub! ","%s % _b gsub! ","html dup _b gsub! "," sanitize_html _b gsub! ","html_b gsub  gsub! ","html []  gsub! "]}," RBPDF getTagStyleFromCSS":{"type":"method","name":"getTagStyleFromCSS","children":[],"call":["tagstyle gsub! ","tagstyle << ","; + ","dom [] [] [] ","dom [] [] ","dom [] "," isValidCSSSelectorForTag ","selector [] ","selector index ","css each ","selector []  [] ","selector []  index "]}," RBPDF isValidCSSSelectorForTag":{"type":"method","name":"isValidCSSSelectorForTag","children":[],"call":[" isValidCSSSelectorForTag ","dom [] [] ","dom [] ","(send\n  (lvar :key) :-\n  (int 1)) downto ","dom [] [] + ","key - ","dom [] [] > ","selector [] ","offset > ","(send nil :attrib) == "," attrib ","dom [] [] [] scan empty? ! ","dom [] [] [] scan empty? ","dom [] [] [] scan ","dom [] [] [] ","dom [] [] [] == ","dom [] [] [] index != ","dom [] [] [] index ","val == "," substr ","val length -@ ","val length ","dom [] [] [] split include? ","dom [] [] [] split ","attrmatch [] ","attrmatch [] downcase ","attrmatch empty? ! ","attrmatch empty? ","attrib scan ","attrib sub == ","attrib sub ","attrib [] ","attrib empty? ! ","attrib empty? ","lasttag == ","3 strip downcase ","3 strip ","2 strip downcase ","2 strip ","$& length ","selector index ","dom [] [] [] downcase ","dom [] [] [] empty? ! ","dom [] [] [] empty? ","attrib [] == ","dom [] [] [] [] ","attrmatch [] [] ","attrmatch [] [] downcase ","(send\n  (lvar :dom [] [] ) :-\n  (int 1)) downto ","dom [] []  - ","selector []  [] ","(send nil :attrmatch [] downcase rib) == ","(send nil :attrmatch [] [] downcase rib) == ","(send nil :3 strip downcase ) == "," attrmatch [] downcase rib "," attrmatch [] [] downcase rib "," 3 strip downcase  ","attrmatch []  == ","attrmatch [] []  == ","attrmatch []  length -@ ","attrmatch [] []  length -@ ","attrmatch []  length ","attrmatch [] []  length ","attrmatch [] downcase rmatch [] ","attrmatch [] [] downcase rmatch [] ","attrib scan  [] ","attrmatch [] downcase rmatch [] downcase ","attrmatch [] [] downcase rmatch [] downcase ","attrib scan  [] downcase ","attrmatch [] downcase rmatch empty? ! ","attrmatch [] [] downcase rmatch empty? ! ","attrib scan  empty? ! ","attrmatch [] downcase rmatch empty? ","attrmatch [] [] downcase rmatch empty? ","attrib scan  empty? ","attrmatch [] downcase rib scan ","attrmatch [] [] downcase rib scan ","3 strip downcase  scan ","attrmatch [] downcase rib sub == ","attrmatch [] [] downcase rib sub == ","3 strip downcase  sub == ","attrmatch [] downcase rib sub ","attrmatch [] [] downcase rib sub ","3 strip downcase  sub ","attrmatch [] downcase rib [] ","attrmatch [] [] downcase rib [] ","3 strip downcase  [] ","attrmatch [] downcase rib empty? ! ","attrmatch [] [] downcase rib empty? ! ","3 strip downcase  empty? ! ","attrmatch [] downcase rib empty? ","attrmatch [] [] downcase rib empty? ","3 strip downcase  empty? ","2 strip downcase  == ","lastdom [] []  == ","selector []  index ","attrmatch [] downcase rib [] == ","attrmatch [] [] downcase rib [] == ","3 strip downcase  [] == ","attrmatch [] downcase rmatch [] [] ","attrmatch [] [] downcase rmatch [] [] ","attrib scan  [] [] ","attrmatch [] downcase rmatch [] [] downcase ","attrmatch [] [] downcase rmatch [] [] downcase ","attrib scan  [] [] downcase "]}," RBPDF extractCSSproperties":{"type":"method","name":"extractCSSproperties","children":[],"call":["cssdata []= ","block [] ","specificity + + ","specificity + ","a to_s + + + ","d to_s ","a to_s + + ","c to_s ","a to_s + ","b to_s ","a to_s ","selector scan size ","selector scan ","(send\n  (str \" \") :+\n  (lvar :selector)) scan size ","(send\n  (str \" \") :+\n  (lvar :selector)) scan ","  + ","cssblocks each ","cssblocks delete_at ","cssblocks push ","sel strip ","selectors each ","block [] split ","block [] index ","cssblocks each_with_index ","cssblocks []= ","block split ","matches each_with_index ","cssdata split ","cssdata chop ","cssdata [] == ","cssdata [] ","cssdata << ","cssblocks [] ","cssblocks [] empty? ! ","cssblocks [] empty? ","cssdata gsub! ","type [] ","matches each ","matches empty? ","cssdata scan ","cssdata lstrip ","cssdata empty? ","cssdata gsub ","cssblocks_tmp push ","css(send\n  (str \" \") :+\n  (lvar :selector)) scan size ata []= ","selector scan size ssdata []= ","cssdata chop  []= ","cssdata lstrip  []= ","cssdata gsub  []= ","bloselector scan size k [] ","selector scan size lock [] ","a to_s + + +  + + ","speselector scan size ifiselector scan size ity + + ","a to_s + + +  + ","speselector scan size ifiselector scan size ity + ","(send\n  (str \" \") :+\n  (lvar :selector)) scan size  to_s ","selector scan size  to_s ","seleselector scan size tor sselector scan size an size ","block []  scan size ","seleselector scan size tor sselector scan size an ","block []  scan ","(sen(send\n  (str \" \") :+\n  (lvar :selector)) scan size \n  (str \" \") :+\n  (lvar :selector)) scan size ","(send\n  (str \" \") :+\n  (lvar :seleselector scan size tor)) sselector scan size an size ","(send\n  (str \" \") :+\n  (lvar :block [] )) scan size ","(sen(send\n  (str \" \") :+\n  (lvar :selector)) scan size \n  (str \" \") :+\n  (lvar :selector)) scan ","(send\n  (str \" \") :+\n  (lvar :seleselector scan size tor)) sselector scan size an ","(send\n  (str \" \") :+\n  (lvar :block [] )) scan ","selector scan size ssbloselector scan size ks easelector scan size h ","cssselector scan size locks each ","cssblocks (send\n  (str \" \") :+\n  (lvar :selector)) scan size elete_at ","selector scan size ssbloselector scan size ks delete_at ","cssselector scan size locks delete_at ","selector scan size ssbloselector scan size ks push ","cssselector scan size locks push ","seleselector scan size tors easelector scan size h ","block [] s each ","block [] split  each ","bloselector scan size k [] split ","selector scan size lock [] split ","block [] in(send\n  (str \" \") :+\n  (lvar :selector)) scan size ex ","bloselector scan size k [] index ","selector scan size lock [] index ","cssblocks each_with_in(send\n  (str \" \") :+\n  (lvar :selector)) scan size ex ","selector scan size ssbloselector scan size ks easelector scan size h_with_index ","cssselector scan size locks each_with_index ","selector scan size ssbloselector scan size ks []= ","cssselector scan size locks []= ","bloselector scan size k split ","selector scan size lock split ","matches each_with_in(send\n  (str \" \") :+\n  (lvar :selector)) scan size ex ","matselector scan size hes easelector scan size h_with_index ","cssdata split  each_with_index ","cssdata scan  each_with_index ","css(send\n  (str \" \") :+\n  (lvar :selector)) scan size ata split ","selector scan size ssdata split ","cssdata chop  split ","cssdata lstrip  split ","cssdata gsub  split ","css(send\n  (str \" \") :+\n  (lvar :selector)) scan size ata chop ","selector scan size ssdata selector scan size hop ","cssdata chop  chop ","cssdata lstrip  chop ","cssdata gsub  chop ","css(send\n  (str \" \") :+\n  (lvar :selector)) scan size ata [] == ","selector scan size ssdata [] == ","cssdata chop  [] == ","cssdata lstrip  [] == ","cssdata gsub  [] == ","css(send\n  (str \" \") :+\n  (lvar :selector)) scan size ata [] ","selector scan size ssdata [] ","cssdata chop  [] ","cssdata lstrip  [] ","cssdata gsub  [] ","css(send\n  (str \" \") :+\n  (lvar :selector)) scan size ata << ","selector scan size ssdata << ","cssdata chop  << ","cssdata lstrip  << ","cssdata gsub  << ","selector scan size ssbloselector scan size ks [] ","cssselector scan size locks [] ","selector scan size ssbloselector scan size ks [] empty? ! ","cssselector scan size locks [] empty? ! ","selector scan size ssbloselector scan size ks [] empty? ","cssselector scan size locks [] empty? ","css(send\n  (str \" \") :+\n  (lvar :selector)) scan size ata gsub! ","selector scan size ssdata gsub! ","cssdata gsuselector scan size ! ","cssdata chop  gsub! ","cssdata lstrip  gsub! ","cssdata gsub  gsub! ","matselector scan size hes easelector scan size h ","cssdata split  each ","cssdata scan  each ","matselector scan size hes empty? ","cssdata split  empty? ","cssdata scan  empty? ","css(send\n  (str \" \") :+\n  (lvar :selector)) scan size ata scan ","selector scan size ssdata sselector scan size an ","cssdata chop  scan ","cssdata lstrip  scan ","cssdata gsub  scan ","css(send\n  (str \" \") :+\n  (lvar :selector)) scan size ata lstrip ","selector scan size ssdata lstrip ","cssdata chop  lstrip ","cssdata lstrip  lstrip ","cssdata gsub  lstrip ","css(send\n  (str \" \") :+\n  (lvar :selector)) scan size ata empty? ","selector scan size ssdata empty? ","cssdata chop  empty? ","cssdata lstrip  empty? ","cssdata gsub  empty? ","css(send\n  (str \" \") :+\n  (lvar :selector)) scan size ata gsub ","selector scan size ssdata gsub ","cssdata gsuselector scan size  ","cssdata chop  gsub ","cssdata lstrip  gsub ","cssdata gsub  gsub ","selector scan size ssbloselector scan size ks_tmp push ","cssselector scan size locks_tmp push "]}," RBPDF getFontStyle":{"type":"method","name":"getFontStyle","children":[],"call":[]}," RBPDF getFontFamily":{"type":"method","name":"getFontFamily","children":[],"call":[]}," RBPDF getFontSizePt":{"type":"method","name":"getFontSizePt","children":[],"call":[]}," RBPDF getFontSize":{"type":"method","name":"getFontSize","children":[],"call":[]}," RBPDF getOriginalMargins":{"type":"method","name":"getOriginalMargins","children":[],"call":[]}," RBPDF getMargins":{"type":"method","name":"getMargins","children":[],"call":[]}," RBPDF PieSectorXY":{"type":"method","name":"PieSectorXY","children":[],"call":[" out "," outellipticalarc ","360 - + ","360 - "," getPathPaintOperator ","@w - "," outelliptic360 - + l360 - + rc "," getP360 - + thP360 - + intOper360 - + tor "]}," RBPDF PieSector":{"type":"method","name":"PieSector","children":[],"call":[" PieSectorXY "]}," RBPDF setViewerPreferences":{"type":"method","name":"setViewerPreferences","children":[],"call":[]}," RBPDF setPDFVersion":{"type":"method","name":"setPDFVersion","children":[],"call":[]}," RBPDF getCellHeightRatio":{"type":"method","name":"getCellHeightRatio","children":[],"call":[]}," RBPDF setCellHeightRatio":{"type":"method","name":"setCellHeightRatio","children":[],"call":[]}," RBPDF setJPEGQuality":{"type":"method","name":"setJPEGQuality","children":[],"call":["quality > ","quality < "]}," RBPDF setAlpha":{"type":"method","name":"setAlpha","children":[],"call":[" setExtGState "," addExtGState ","/ + "]}," RBPDF putextgstates":{"type":"method","name":"putextgstates","children":[],"call":[" out ","out << "," / + + + ","v to_s "," / + + "," / + "," sprintf ","v is_a? ","@extgstates [] [] each ","@extgstates [] [] ","@extgstates [] ","@extgstates [] []= "," newobj ","1 upto ","@extgstates length "," sprintf  to_s "," sprintf  is_a? "," @extgstates length wobj "]}," RBPDF setExtGState":{"type":"method","name":"setExtGState","children":[],"call":[" out "," sprintf "]}," RBPDF addExtGState":{"type":"method","name":"addExtGState","children":[],"call":["@extgstates [] []= ","@extgstates [] ","@extgstates [] [] == ","@extgstates [] [] ","1 upto ","n - ","@extgstates length + ","@extgstates length ","@extgstates length +  - ","@extgstates le@extgstates length + gth + ","@extgstates le@extgstates length + gth "]}," RBPDF setVisibility":{"type":"method","name":"setVisibility","children":[],"call":[" Error ","Incorrect visibility:  + "," out "]}," RBPDF putocg":{"type":"method","name":"putocg","children":[],"call":[" out ","<< /Type /OCG /Name  + + ","<< /Type /OCG /Name  + "," textstring "," newobj "]}," RBPDF PageNoFormatted":{"type":"method","name":"PageNoFormatted","children":[],"call":[" formatPageNumber "," PageNo "]}," RBPDF formatTOCPageNumber":{"type":"method","name":"formatTOCPageNumber","children":[],"call":[" number_with_delimiter "]}," RBPDF formatPageNumber":{"type":"method","name":"formatPageNumber","children":[],"call":[" number_with_delimiter "]}," RBPDF getPageNumGroupAlias":{"type":"method","name":"getPageNumGroupAlias","children":[],"call":["@currpagegroup gsub ","{ + + ","{ + ","@current_font [] == ","@current_font [] "]}," RBPDF getPageGroupAlias":{"type":"method","name":"getPageGroupAlias","children":[],"call":["{ + + ","{ + ","@current_font [] == ","@current_font [] "]}," RBPDF getGroupPageNoFormatted":{"type":"method","name":"getGroupPageNoFormatted","children":[],"call":[" formatPageNumber "," getGroupPageNo "]}," RBPDF getGroupPageNo":{"type":"method","name":"getGroupPageNo","children":[],"call":["@pagegroups [] "]}," RBPDF getAliasNumPage":{"type":"method","name":"getAliasNumPage","children":[],"call":["{ + + ","{ + ","@current_font [] == ","@current_font [] "]}," RBPDF AliasNumPage":{"type":"method","name":"AliasNumPage","children":[],"call":[]}," RBPDF getAliasNbPages":{"type":"method","name":"getAliasNbPages","children":[],"call":["{ + + ","{ + ","@current_font [] == ","@current_font [] "]}," RBPDF AliasNbPages":{"type":"method","name":"AliasNbPages","children":[],"call":[]}," RBPDF startPageGroup":{"type":"method","name":"startPageGroup","children":[],"call":["@newpagegroup []= ","@page + ","page empty? ","page zero? ","page is_a? ! ","page is_a? ","@new@page + group []= ","@@page +  + ","@page +  empty? ","@page +  zero? ","@page +  is_a? ! ","@page +  is_a? "]}," RBPDF putbookmarks":{"type":"method","name":"putbookmarks","children":[],"call":[" out ","<</Type /Outlines /First  + + + + ","<</Type /Outlines /First  + + + ","(send\n  (lvar :n) :+\n  (send\n    (lvar :lru) :[]\n    (int 0))) to_s ","n + ","lru [] ","<</Type /Outlines /First  + + ","<</Type /Outlines /First  + ","n to_s "," newobj ","out << ","  + "," sprintf ","@pagedim [] [] - ","o [] * ","o [] ","@pagedim [] [] ","@pagedim [] ","1 + ","2 * "," /Last  + + "," /Last  + ","(send\n  (lvar :n) :+\n  (send\n    (lvar :o) :[]\n    (sym :last))) to_s ","o [] nil? ! ","o [] nil? "," /First  + + "," /First  + ","(send\n  (lvar :n) :+\n  (send\n    (lvar :o) :[]\n    (sym :first))) to_s "," /Next  + + "," /Next  + ","(send\n  (lvar :n) :+\n  (send\n    (lvar :o) :[]\n    (sym :next))) to_s "," /Prev  + + "," /Prev  + ","(send\n  (lvar :n) :+\n  (send\n    (lvar :o) :[]\n    (sym :prev))) to_s "," /Parent  + + "," /Parent  + ","(send\n  (lvar :n) :+\n  (send\n    (lvar :o) :[]\n    (sym :parent))) to_s ","<</Title  + "," textstring ","title strip gsub ","title strip ","title gsub ","o [] gsub ","@outlines each_with_index ","@n + ","lru []= ","@outlines [] []= ","@outlines [] ","i > ","o [] <= ","o [] > ","o [] - ","x [] ","@outlines sort_by ","nb == ","@outlines size "," <</Title  +  ","<</Type /Outli@n + es /First  + + + + ","<</Type /Outli@n + es /First  + + + ","(se@n + d\n  (lvar :@n + ) :+\n  (se@n + d\n    (lvar :lru) :[]\n    (i@n + t 0))) to_s ","@n +  + ","<</Type /Outli@n + es /First  + + ","<</Type /Outli@n + es /First  + ","@n +  to_s "," @n + ewobj ","<</Title  +  << "," spri@n + tf ","(se@n + d\n  (lvar :@n + ) :+\n  (se@n + d\n    (lvar :o) :[]\n    (sym :last))) to_s ","o [] @n + il? ! ","o [] @n + il? ","(se@n + d\n  (lvar :@n + ) :+\n  (se@n + d\n    (lvar :o) :[]\n    (sym :first))) to_s ","(se@n + d\n  (lvar :@n + ) :+\n  (se@n + d\n    (lvar :o) :[]\n    (sym :@n + ext))) to_s ","(se@n + d\n  (lvar :@n + ) :+\n  (se@n + d\n    (lvar :o) :[]\n    (sym :prev))) to_s ","(send\n  (lvar :n) :+\n  (send\n    (lvar :o) :[]\n    (sym :lru [] ))) to_s "," /Pare@n + t  + + "," /Pare@n + t  + ","(se@n + d\n  (lvar :@n + ) :+\n  (se@n + d\n    (lvar :o) :[]\n    (sym :pare@n + t))) to_s "," textstri@n + g ","title strip gsub  strip gsub ","title gsub  strip gsub ","o [] gsub  strip gsub ","title strip gsub  strip ","title gsub  strip ","o [] gsub  strip ","title strip gsub  gsub ","title gsub  gsub ","o [] gsub  gsub ","@<</Title  + lines each_with_index ","@outli@n + es each_with_i@n + dex ","@@n +  + ","@<</Title  + lines [] []= ","@outli@n + es [] []= ","@<</Title  + lines [] ","@outli@n + es [] ","@<</Title  + lines sort_by ","@outli@n + es sort_by ","@n + b == ","@outlines size  == ","@<</Title  + lines size ","@outli@n + es size "]}," RBPDF Bookmark":{"type":"method","name":"Bookmark","children":[],"call":["@outlines push "," PageNo ","page nil? "," GetY ","y == ","level > ","lastoutline [] + ","lastoutline [] ","@outlines [] ","level < "," PageNo  nil? "," GetY  == ","@outlines []  [] + ","@outlines []  [] "]}," RBPDF utf8Bidi":{"type":"method","name":"utf8Bidi","children":[],"call":["ordarray push ","chardata [] [] ","chardata [] ","0 upto ","numchars - ","ordarray concat ","revarr reverse! ","revarr push ","chardata [] []= ","@@unicode_mirror [] ","@@unicode_mirror [] nil? ","chardata [] [] >= ","maxlevel downto ","chardata size ","chardata2 delete_at ","value [] == ","value [] ","chardata2 each_with_index ","chardata2 [] []= ","@@diacritics [] ","chardata2 [] [] ","chardata2 [] ","i + ","cw [] nil? ","cw [] ","@@diacritics [] nil? ! ","@@diacritics [] nil? ","chardata2 [] [] == ","@current_font [] ","charAL [] [] ","charAL [] ","x - ","arabicarr [] [] ","arabicarr [] ","thischar [] ","arabicarr [] [] nil? ! ","arabicarr [] [] nil? ","arabicarr [] nil? ! ","arabicarr [] nil? ","endedletter include? ","prevchar [] ","prevchar != ","i - ","chardata [] [] == ","thischar [] == ","i > ","nextchar [] == ","nextchar [] ","nextchar != ","prevchar [] == ","@@unicode [] == ","@@unicode [] ","nextchar [] != ","x > ","alfletter include? ","x + ","x + < ","i + < ","charAL [] []= ","charAL []= ","chardata [] [] != ","j == ","j < ","(send\n  (send\n    (lvar :chardata) :[]\n    (lvar :i)) :[]\n  (sym :level)) max ","odd == ","chardata [] [] % ","i + == ","levcount > ","levcount == ","levcount downto ","chardata length ","chardata push ","ta [] ","@@unicode [] nil? ! ","@@unicode [] nil? ","dos != ","ta [] != ","(if\n  (send\n    (lvar :cel) :>\n    (send\n      (lvar :match) :[]\n      (sym :cel)))\n  (lvar :cel)\n  (send\n    (lvar :match) :[]\n    (sym :cel))) % == ","(if\n  (send\n    (lvar :cel) :>\n    (send\n      (lvar :match) :[]\n      (sym :cel)))\n  (lvar :cel)\n  (send\n    (lvar :match) :[]\n    (sym :cel))) % ","match [] ","cel > ","remember pop ","remember [] [] == ","remember [] [] ","remember [] ","remember length - ","remember length ","ta [] == ","cel % == ","cel % ","remember push ","next_level < ","cel + - ","cel + ","cel + + ","pel % == ","pel % ","type == ","forcertl == ","ta length ","str =~ ","str force_encoding ","str respond_to? "," UTF8ArrSubString "," empty_string ","str dup ","numchars times ","ordarray << ","revarr << ","(send\n  (lvar :numchars) :-\n  (int 1)) times ","@@unicode [] =~ ","chardata [] dup ","c == ","chardata [] [] =~ ","prevlevel != ","next_non_space_char == ","next_non_space_char =~ ","ni nil? ","item [] !~ ","item [] ","chardata [] index ","ni > ","ni nil? ! ","remember [] [] =~ ","remember << ","chardata << ","chardir nil? ","ta [] !~ "," setFontSubBuffer ","@current_font [] []= ","chardata dup ","chardata2 reject ","remember empty? ","chardata [] [] hardata [] [] ","chardata [] [] hardata [] ","chardata size  - ","chardata length  - ","ta length  - ","n@@unicode_mirror [] chars - ","numchardata [] [] hars - ","ordarray chardata [] [] onchardata [] [] at ","chardata [] [] hardata [] []= ","@@unichardata [] [] ode_mirror [] ","@@unichardata [] [] ode_mirror [] nil? ","chardata [] [] hardata [] [] >= ","mathischar [] level downto ","(send\n  (send\n    (lvar :chardata) :[]\n    (lvar :i)) :[]\n  (sym :level)) max  downto ","chardata [] [] hardata size ","chardata [] [] hardata2 delete_at ","chardata dup  delete_at ","chardata2 each_with_indethischar []  ","chardata [] [] hardata2 eachardata [] [] h_with_index ","chardata dup  each_with_index ","chardata [] [] hardata2 [] []= ","chardata dup  [] []= ","@@diachardata [] [] ritichardata [] [] s [] ","chardata [] [] hardata2 [] [] ","chardata dup  [] [] ","chardata [] [] hardata2 [] ","chardata dup  [] ","@current_font []  [] nil? ","chardata [] [] w [] nil? ","@current_font []  [] ","chardata [] [] w [] ","@@diachardata [] [] ritichardata [] [] s [] nil? ! ","@@diachardata [] [] ritichardata [] [] s [] nil? ","chardata [] [] hardata2 [] [] == ","chardata dup  [] [] == ","@chardata [] [] urrent_font [] ","chardata [] [] harAL [] [] ","chardata [] [] harAL [] ","thischar []  - ","arabichardata [] [] arr [] [] ","arabichardata [] [] arr [] ","chardata []  [] ","chardata [] dup  [] ","thischardata [] [] har [] ","arabichardata [] [] arr [] [] nil? ! ","arabichardata [] [] arr [] [] nil? ","arabichardata [] [] arr [] nil? ! ","arabichardata [] [] arr [] nil? ","endedletter inchardata [] [] lude? ","charAL []  [] ","prevchardata [] [] har [] ","charAL []  != ","chardata []  != ","prevchardata [] [] har != ","chardata [] [] hardata [] [] == ","chardata []  [] == ","chardata [] dup  [] == ","thischardata [] [] har [] == ","charAL []  [] == ","nethischar [] tchar [] == ","nextchardata [] [] har [] == ","nethischar [] tchar [] ","nextchardata [] [] har [] ","nethischar [] tchar != ","nextchardata [] [] har != ","prevchardata [] [] har [] == ","@@unichardata [] [] ode [] == ","@@unichardata [] [] ode [] ","charAL []  [] != ","chardata []  [] != ","nethischar [] tchar [] != ","nextchardata [] [] har [] != ","thischar []  > ","alfletter inchardata [] [] lude? ","thischar []  + ","thischar []  + < ","chardata [] [] harAL [] []= ","chardata [] [] harAL []= ","chardata [] [] hardata [] [] != ","i +  == ","i +  < ","(send\n  (send\n    (lvar :chardata) :[]\n    (lvar :i)) :[]\n  (sym :level)) mathischar []  ","(send\n  (send\n    (lvar :chardata [] [] hardata) :[]\n    (lvar :i)) :[]\n  (sym :level)) max ","chardata [] [] %  == ","chardata [] [] hardata [] [] % ","levchardata [] [] ount > ","levchardata [] [] ount == ","levchardata [] [] ount downto ","chardata [] [] hardata length ","chardata [] [] hardata push ","@@unichardata [] [] ode [] nil? ! ","@@unichardata [] [] ode [] nil? ","match []  != ","(if\n  (send\n    (lvar :match [] ) :>\n    (send\n      (lvar :match) :[]\n      (sym :match [] )))\n  (lvar :match [] )\n  (send\n    (lvar :match) :[]\n    (sym :match [] ))) % == ","(if\n  (send\n    (lvar :cel) :>\n    (send\n      (lvar :remember pop ) :[]\n      (sym :cel)))\n  (lvar :cel)\n  (send\n    (lvar :remember pop ) :[]\n    (sym :cel))) % == ","(if\n  (send\n    (lvar :chardata [] [] el) :>\n    (send\n      (lvar :matchardata [] [] h) :[]\n      (sym :chardata [] [] el)))\n  (lvar :chardata [] [] el)\n  (send\n    (lvar :matchardata [] [] h) :[]\n    (sym :chardata [] [] el))) % == ","(if\n  (send\n    (lvar :match [] ) :>\n    (send\n      (lvar :match) :[]\n      (sym :match [] )))\n  (lvar :match [] )\n  (send\n    (lvar :match) :[]\n    (sym :match [] ))) % ","(if\n  (send\n    (lvar :cel) :>\n    (send\n      (lvar :remember pop ) :[]\n      (sym :cel)))\n  (lvar :cel)\n  (send\n    (lvar :remember pop ) :[]\n    (sym :cel))) % ","(if\n  (send\n    (lvar :chardata [] [] el) :>\n    (send\n      (lvar :matchardata [] [] h) :[]\n      (sym :chardata [] [] el)))\n  (lvar :chardata [] [] el)\n  (send\n    (lvar :matchardata [] [] h) :[]\n    (sym :chardata [] [] el))) % ","remember pop  [] ","matchardata [] [] h [] ","match []  > ","chardata [] [] el > ","match []  % == ","chardata [] [] el % == ","match []  % ","chardata [] [] el % ","nethischar [] t_level < ","cel + -  < ","cel + +  < ","match []  + - ","chardata [] [] el + - ","match []  + ","chardata [] [] el + ","match []  + + ","chardata [] [] el + + ","@@unicode []  == ","forchardata [] [] ertl == "," UTF8ArrSubString  =~ ","str dup  =~ "," UTF8ArrSubString  force_encoding ","str dup  force_encoding ","str forchardata [] [] e_enchardata [] [] oding "," UTF8ArrSubString  respond_to? ","str dup  respond_to? "," empty_ UTF8ArrSubString ing "," empty_str dup ing "," UTF8ArrSubString  dup ","str dup  dup ","chardata size  times ","chardata length  times ","ta length  times ","n@@unicode_mirror [] chars times ","numchardata [] [] hars times ","(send\n  (lvar :chardata size ) :-\n  (int 1)) times ","(send\n  (lvar :chardata length ) :-\n  (int 1)) times ","(send\n  (lvar :ta length ) :-\n  (int 1)) times ","(send\n  (lvar :n@@unicode_mirror [] chars) :-\n  (int 1)) times ","(send\n  (lvar :numchardata [] [] hars) :-\n  (int 1)) times ","@@unichardata [] [] ode [] =~ ","chardata [] [] hardata [] dup ","chardata [] []  == ","chardata [] [] hardata [] [] =~ ","chardata [] []  != ","nethischar [] t_non_space_char == ","next_non_spachardata [] [] e_chardata [] [] har == ","nethischar [] t_non_space_char =~ ","next_non_spachardata [] [] e_chardata [] [] har =~ ","chardata [] []  =~ ","chardata [] indethischar []  ","chardata [] [] hardata [] index ","chardata [] [] hardata << ","@@unicode []  nil? ","chardata [] [] hardir nil? ","@chardata [] [] urrent_font [] []= ","chardata [] [] hardata dup ","chardata2 rei + ect ","chardata [] [] hardata2 rejechardata [] [] t ","chardata dup  reject "]}," RBPDF utf8StrArrRev":{"type":"method","name":"utf8StrArrRev","children":[],"call":[" arrUTF8ToUTF16BE "," utf8Bidi "]}," RBPDF utf8StrRev":{"type":"method","name":"utf8StrRev","children":[],"call":[" utf8StrArrRev "," UTF8StringToArray "]}," RBPDF Arrow":{"type":"method","name":"Arrow","children":[],"call":[" Polygon ","y1 + ","arm_size * "," Math  sin ","dir_angle - ","x1 + "," Math  cos ","dir_angle + "," Line ","(send\n  (lvar :arm_size) :-\n  (ivar :@line_width)) * ","arm_size - ","head_style > ","arm_angle * / ","arm_angle * ","2 * ","dir_angle < "," Math  atan2 ","x0 - ","y0 - "," Math  atan2  - "," Math  atan2  + ","arm_angle * /  * / ","arm_angle * /  * "," Math  atan2  < "]}," RBPDF RoundedRectXY":{"type":"method","name":"RoundedRectXY","children":[],"call":[" out "," outLine ","x + "," outCurve ","yc - ","xc - ","rx * ","ry * ","round_corner [] == ","round_corner [] ","y + ","yc + ","y + - ","xc + ","x + - "," outPoint ","4 / * "," Math  sqrt - "," Math  sqrt ","4 / "," SetLineStyle ","op == "," getPathPaintOperator "," SetFillColorArray "," != ","style index "," Rect ","rx == ","round_corner == ","style nil? ","y +  - ","y + -  - ","x +  - ","x + -  - ","y +  + ","y + -  + ","x +  + ","x + -  + "," getPathPaintOperator  == "]}," RBPDF RoundedRect":{"type":"method","name":"RoundedRect","children":[],"call":[" RoundedRectXY "]}," RBPDF StarPolygon":{"type":"method","name":"StarPolygon","children":[],"call":[" Polygon ","visited [] ","visited []= ","p push ","p2 [] ","i * + ","i * ","visited push ","p2 push ","y0 + ","r * "," Math  cos ","x0 + "," Math  sin ","a * / ","a * ","angle + ","i * / ","0 upto ","nv - "," Circle ","nv < ","draw_circle == "," Mangle + th  cos "," Mangle + th  sin ","angle +  * / ","angle +  * ","angle + ngle + ","drangle + w_circle == "]}," RBPDF RegularPolygon":{"type":"method","name":"RegularPolygon","children":[],"call":[" Polygon ","p push ","y0 + ","r * "," Math  cos ","x0 + "," Math  sin ","a * / ","a * ","angle + ","i * / ","i * ","0 upto ","ns - "," Circle ","3 > ","draw_circle == "," Mangle + th  cos "," Mangle + th  sin ","angle +  * / ","angle +  * ","angle + ngle + ","drangle + w_circle == "]}," RBPDF Polygon":{"type":"method","name":"Polygon","children":[],"call":[" out "," outLine ","p [] ","i + ","2 step ","nc - "," outPoint ","i - "," SetLineStyle ","line_style [] ","line_style [] is_a? ","line_style [] != ","i / - ","i / ","op == ","line_style is_a? "," getPathPaintOperator "," SetFillColorArray "," != ","style index ","line_style []= ","p []= ","nc + ","0 upto ","nc / ","p length ","style nil? ","p length  - "," getPathPaintOperator  == ","p length  + ","p length  / "]}," RBPDF PolyLine":{"type":"method","name":"PolyLine","children":[],"call":[" Polygon "]}," RBPDF Circle":{"type":"method","name":"Circle","children":[],"call":[" Ellipse "]}," RBPDF outellipticalarc":{"type":"method","name":"outellipticalarc","children":[],"call":[" outLine "," outCurve ","@h - ","py2 - ","px2 - ","py1 + ","px1 + ","alpha * ","(send\n  (send\n    (send\n      (lvar :rx) :-@) :*\n    (lvar :sin_xang)) :*\n  (lvar :sin_ang)) + ","ry * * ","ry * ","rx -@ * * ","rx -@ * ","rx -@ ","(send\n  (send\n    (send\n      (lvar :rx) :-@) :*\n    (lvar :cos_xang)) :*\n  (lvar :sin_ang)) - ","y0 + + ","y0 + ","rx * * ","rx * ","x0 + - ","x0 + "," Math  sin "," Math  cos ","as + ","i * ","1 upto "," outPoint "," Math  sin * / "," Math  sin * "," Math  sqrt - "," Math  sqrt ","4 + ","3 * "," Math  tan ** "," Math  tan ","arcang / ","total_angle / ","nc round + ","nc round ","2 * / ","2 * ","total_angle abs ","nc < ","af - ","as > ","af < ","as < "," Math  atan2 "," Math  cos / "," Math  sin / ","angf * / ","angf * ","angs * / ","angs * ","xang * / ","xang * ","ry == ","rx == ","y0 + +  - ","x0 + -  - ","y0 + +  + ","x0 + -  + "," Math  sin * /  * ","(send\n  (send\n    (send\n      (lvar :rx) :-@) :*\n    (lvar :sin_xang)) :*\n  (lvar : Math  sin )) + ","(send\n  (send\n    (send\n      (lvar :rx) :-@) :*\n    (lvar : Math  sin )) :*\n  (lvar :sin_ang)) + ","(send\n  (send\n    (send\n      (lvar :rx) :-@) :*\n    (lvar :sin_xas + )) :*\n  (lvar :sin_as + )) + ","(send\n  (send\n    (send\n      (lvar :rx) :-@) :*\n    (lvar :sin_xang * / )) :*\n  (lvar :sin_ang)) + ","(send\n  (send\n    (send\n      (lvar :rx) :-@) :*\n    (lvar :cos_xang)) :*\n  (lvar : Math  sin )) - ","(send\n  (send\n    (send\n      (lvar :rx) :-@) :*\n    (lvar : Math  cos )) :*\n  (lvar :sin_ang)) - ","(send\n  (send\n    (send\n      (lvar :rx) :-@) :*\n    (lvar :cos_xas + )) :*\n  (lvar :sin_as + )) - ","(send\n  (send\n    (send\n      (lvar :rx) :-@) :*\n    (lvar :cos_xang * / )) :*\n  (lvar :sin_ang)) - ","@h -  + + ","@h -  + "," Math  atan2  + ","arcas +  / ","total_angle /  / ","total_as + le / ","af -  / ","nc round +  round + ","nc round +  round ","total_as + le abs ","af -  abs ","nc round +  < "," Math  atan2  - "," Math  atan2  > "," Math  atan2  < ","as + f * / ","angf * /  * / ","as + f * ","angf * /  * ","as + s * / ","angs * /  * / ","as + s * ","angs * /  * ","xas +  * / ","xang * /  * / ","xas +  * ","xang * /  * "]}," RBPDF Ellipse":{"type":"method","name":"Ellipse","children":[],"call":[" out "," outellipticalarc "," SetLineStyle ","line_style empty? ! ","line_style empty? ","op == "," getPathPaintOperator "," SetFillColorArray "," != ","style index ","ry == "," empty_string ","style nil? "," getPathPaintOperator  == "]}," RBPDF Curve":{"type":"method","name":"Curve","children":[],"call":[" out "," outCurve "," outPoint "," SetLineStyle "," getPathPaintOperator "," SetFillColorArray ","style index != ","style index "]}," RBPDF Rect":{"type":"method","name":"Rect","children":[],"call":[" Line ","border_style [] ","y + ","x + ","border_style [] nil? ! ","border_style [] nil? ","border_style2 []= ","line [] ","0 upto ","length - ","line length ","border_style each "," outRect "," SetLineStyle ","border_style ! "," getPathPaintOperator "," SetFillColorArray ","fill_color empty? ! ","fill_color empty? ","style index != ","style index ","line length  - ","line line length  "]}," RBPDF Line":{"type":"method","name":"Line","children":[],"call":[" out "," outLine "," outPoint "," SetLineStyle ","style is_a? "]}," RBPDF outCurveY":{"type":"method","name":"outCurveY","children":[],"call":[" out "," sprintf ","(send\n  (ivar :@h) :-\n  (lvar :y3)) * ","@h - ","x3 * ","(send\n  (ivar :@h) :-\n  (lvar :y1)) * ","x1 * "]}," RBPDF outCurveV":{"type":"method","name":"outCurveV","children":[],"call":[" out "," sprintf ","(send\n  (ivar :@h) :-\n  (lvar :y3)) * ","@h - ","x3 * ","(send\n  (ivar :@h) :-\n  (lvar :y2)) * ","x2 * "]}," RBPDF outCurve":{"type":"method","name":"outCurve","children":[],"call":[" out "," sprintf ","(send\n  (ivar :@h) :-\n  (lvar :y3)) * ","@h - ","x3 * ","(send\n  (ivar :@h) :-\n  (lvar :y2)) * ","x2 * ","(send\n  (ivar :@h) :-\n  (lvar :y1)) * ","x1 * "]}," RBPDF outRect":{"type":"method","name":"outRect","children":[],"call":[" out "," sprintf ","h -@ * ","h -@ ","w * ","(send\n  (ivar :@h) :-\n  (lvar :y)) * ","@h - ","x * "]}," RBPDF outLine":{"type":"method","name":"outLine","children":[],"call":[" out "," sprintf ","(send\n  (ivar :@h) :-\n  (lvar :y)) * ","@h - ","x * "]}," RBPDF outPoint":{"type":"method","name":"outPoint","children":[],"call":[" out "," sprintf ","(send\n  (ivar :@h) :-\n  (lvar :y)) * ","@h - ","x * "]}," RBPDF SetLineStyle":{"type":"method","name":"SetLineStyle","children":[],"call":[" SetDrawColorArray ","style [] ","style [] nil? ! ","style [] nil? "," out "," sprintf ","dash_string << ","v to_f ","i != ","tab each_with_index ","dash split ","dash =~ ","dash != ","ja [] to_s + ","ja [] to_s ","ja [] ","ja [] nil? ! ","ja [] nil? ","ca [] to_s + ","ca [] to_s ","ca [] ","ca [] nil? ! ","ca [] nil? "," SetLineWidth ","style is_a? ","dash is_a? ","style [] _string << ","dash split  each_with_index ","style []  split ","style []  =~ ","style []  != ","style []  is_a? "]}," RBPDF GetLineWidth":{"type":"method","name":"GetLineWidth","children":[],"call":[]}," RBPDF SetLineWidth":{"type":"method","name":"SetLineWidth","children":[],"call":[" out ","@page > "," sprintf ","width * "]}," RBPDF Transform":{"type":"method","name":"Transform","children":[],"call":["@transfmrk []= ","@pagelen [] ","@transfmrk [] nil? ! ","@transfmrk [] nil? ","@transfmrk [] ","@transfmatrix [] push ","tm [] ","@transfmatrix [] "," out "," sprintf "]}," RBPDF Rotate":{"type":"method","name":"Rotate","children":[],"call":[" Transform ","tm []= ","y - - ","tm [] * ","tm [] ","y - ","x + - ","x + ","tm [] -@ "," Math  sin ","angle * / ","angle * "," Math  cos ","(send\n  (ivar :@h) :-\n  (lvar :y)) * ","@h - ","y == ","x == ","(send\n  (ivar :@h) :-\n  (lvar :y)) *  - - ","(send\n  (ivar :@h) :-\n  (lvar :y)) *  - ","(send\n  (ivar :@h) :-\n  (lvar :(send\n  (ivar :@h) :-\n  (lvar :y)) * )) * ","(send\n  (ivar :@h) :-\n  (lvar :y)) *  == "]}," RBPDF StopTransform":{"type":"method","name":"StopTransform","children":[],"call":["@transfmrk []= ","@transfmatrix [] pop ","@transfmatrix [] "," out "]}," RBPDF StartTransform":{"type":"method","name":"StartTransform","children":[],"call":["@transfmatrix []= ","@transfmrk []= ","@pagelen [] "," out "]}," RBPDF encrypt_data":{"type":"method","name":"encrypt_data","children":[],"call":[]}," RBPDF unhtmlentities":{"type":"method","name":"unhtmlentities","children":[],"call":["@@decoder decode ","CGI  unescapeHTML ","@@decoder nil? "]}," RBPDF pixelsToUnits":{"type":"method","name":"pixelsToUnits","children":[],"call":["px to_f / ","@img_scale * ","px to_f "]}," RBPDF convertHTMLColorToDec":{"type":"method","name":"convertHTMLColorToDec","children":[],"call":["returncolor []= ","color_code [] hex ","color_code [] ","(send\n  (lvar :b) :+\n  (lvar :b)) hex ","b + ","(send\n  (lvar :g) :+\n  (lvar :g)) hex ","g + ","(send\n  (lvar :r) :+\n  (lvar :r)) hex ","r + ","color_code length ","color sub ","@@webcolor [] ","color [] chr != ","color [] chr ","color [] ","returncolor [] to_i ","returncolor [] ","codes gsub ","color [] == ","codes split ","ActiveSupport OrderedHash  new ","color length == ","color length ","dotpos + ","(lvasgn :dotpos\n  (send\n    (lvar :color) :index\n    (str \".\"))) nil? ! ","(lvasgn :dotpos\n  (send\n    (lvar :color) :index\n    (str \".\"))) nil? ","color index ","color downcase ","color gsub ","color_code [] etucolor_code [] ncolocolor_code []  []= ","codes split  []= ","ActiveSupport OrderedHash  new  []= ","returncolor []  []= ","returncolor downcase  []= ","returncolor gsub  []= ","colocolor_code [] _code [] hex ","color sub  [] hex ","@@webcolor []  [] hex ","color [] _code [] hex ","color downcase _code [] hex ","color gsub _code [] hex ","colocolor_code [] _code [] ","color sub  [] ","@@webcolor []  [] ","color [] _code [] ","color downcase _code [] ","color gsub _code [] ","(send\n  (lvar :color_code [] ) :+\n  (lvar :color_code [] )) hex ","(send\n  (lvacolor_code []  :b) :+\n  (lvacolor_code []  :b)) hex ","color_code []  + ","(send\n  (lvacolor_code []  :g) :+\n  (lvacolor_code []  :g)) hex ","(send\n  (lvacolor_code []  :color_code [] ) :+\n  (lvacolor_code []  :color_code [] )) hex ","color_code lencolor_code [] th ","colocolor_code [] _code length ","color sub  length ","@@webcolor []  length ","color [] _code length ","color downcase _code length ","color gsub _code length ","color sucolor_code []  ","colocolor_code []  sub ","color []  sub ","color downcase  sub ","color gsub  sub ","@@wecolor_code [] color [] ","@@webcolocolor_code []  [] ","@@webcolor downcase  [] ","@@webcolor gsub  [] ","colocolor_code []  [] chcolor_code []  != ","color []  [] chr != ","color downcase  [] chr != ","color gsub  [] chr != ","colocolor_code []  [] chcolor_code []  ","color []  [] chr ","color downcase  [] chr ","color gsub  [] chr ","colocolor_code []  [] ","color []  [] ","color downcase  [] ","color gsub  [] ","color_code [] etucolor_code [] ncolocolor_code []  [] to_i ","codes split  [] to_i ","ActiveSupport OrderedHash  new  [] to_i ","returncolor []  [] to_i ","returncolor downcase  [] to_i ","returncolor gsub  [] to_i ","color_code [] etucolor_code [] ncolocolor_code []  [] ","codes split  [] ","ActiveSupport OrderedHash  new  [] ","returncolor []  [] ","returncolor downcase  [] ","returncolor gsub  [] ","codes gsucolor_code []  ","codes color_code [] sub ","codes gsub  gsub ","color sub  gsub ","colocolor_code []  [] == ","color []  [] == ","color downcase  [] == ","color gsub  [] == ","codes gsub  split ","color sub  split ","ActiveSuppocolor_code [] t Ocolor_code [] decolor_code [] edHash  new ","color lencolor_code [] th == ","colocolor_code []  length == ","color []  length == ","color downcase  length == ","color gsub  length == ","color lencolor_code [] th ","colocolor_code []  length ","color []  length ","color downcase  length ","color gsub  length ","color index  + ","(lvascolor_code [] n :dotpos\n  (send\n    (lvar :color) :index\n    (str \".\"))) nil? ! ","(lvasgn :dotpos\n  (send\n    (lvacolor_code []  :colocolor_code [] ) :index\n    (stcolor_code []  \".\"))) nil? ! ","(lvasgn :dotpos\n  (send\n    (lvar :color [] ) :index\n    (str \".\"))) nil? ! ","(lvasgn :dotpos\n  (send\n    (lvar :color downcase ) :index\n    (str \".\"))) nil? ! ","(lvasgn :dotpos\n  (send\n    (lvar :color gsub ) :index\n    (str \".\"))) nil? ! ","(lvasgn :color index \n  (send\n    (lvar :color) :index\n    (str \".\"))) nil? ! ","(lvascolor_code [] n :dotpos\n  (send\n    (lvar :color) :index\n    (str \".\"))) nil? ","(lvasgn :dotpos\n  (send\n    (lvacolor_code []  :colocolor_code [] ) :index\n    (stcolor_code []  \".\"))) nil? ","(lvasgn :dotpos\n  (send\n    (lvar :color [] ) :index\n    (str \".\"))) nil? ","(lvasgn :dotpos\n  (send\n    (lvar :color downcase ) :index\n    (str \".\"))) nil? ","(lvasgn :dotpos\n  (send\n    (lvar :color gsub ) :index\n    (str \".\"))) nil? ","(lvasgn :color index \n  (send\n    (lvar :color) :index\n    (str \".\"))) nil? ","colocolor_code []  index ","color []  index ","color downcase  index ","color gsub  index ","colocolor_code []  downcase ","color []  downcase ","color downcase  downcase ","color gsub  downcase ","color gsucolor_code []  ","color color_code [] sub ","colocolor_code []  gsub ","color []  gsub ","color downcase  gsub ","color gsub  gsub "]}," RBPDF addHtmlLink":{"type":"method","name":"addHtmlLink","children":[],"call":[" SetTextColorArray "," SetFont "," Write ","@font_style + ","style == ","color empty? "," SetLink "," AddLink ","url sub to_i ","url sub ","url [] == ","url [] "," empty_string ! "," empty_string ","@html_anchor_links []= ","anchor to_i "," AddLink  sub to_i "," AddLink  sub "," AddLink  [] == "," AddLink  [] ","@html_url sub _links []= ","url sub  to_i "]}," RBPDF GetPDFData":{"type":"method","name":"GetPDFData","children":[],"call":[" getPDFData "," warn "]}," RBPDF getPDFData":{"type":"method","name":"getPDFData","children":[],"call":[" Close ","@state < "]}," RBPDF SetLanguageArray":{"type":"method","name":"SetLanguageArray","children":[],"call":[" setLanguageArray "," warn "]}," RBPDF setLanguageArray":{"type":"method","name":"setLanguageArray","children":[],"call":["@l [] == ","@l [] "]}," RBPDF getFooterFont":{"type":"method","name":"getFooterFont","children":[],"call":[]}," RBPDF SetFooterFont":{"type":"method","name":"SetFooterFont","children":[],"call":[" setFooterFont "," warn "]}," RBPDF setFooterFont":{"type":"method","name":"setFooterFont","children":[],"call":[]}," RBPDF getHeaderFont":{"type":"method","name":"getHeaderFont","children":[],"call":[]}," RBPDF SetHeaderFont":{"type":"method","name":"SetHeaderFont","children":[],"call":[" setHeaderFont "," warn "]}," RBPDF setHeaderFont":{"type":"method","name":"setHeaderFont","children":[],"call":[]}," RBPDF arrUTF8ToUTF16BE":{"type":"method","name":"arrUTF8ToUTF16BE","children":[],"call":["outstr << ","(send\n  (lvar :w2) :&\n  (int 255)) chr ","w2 & ","(send\n  (lvar :w2) :>>\n  (int 8)) chr ","w2 >> ","(send\n  (lvar :w1) :&\n  (int 255)) chr ","w1 & ","(send\n  (lvar :w1) :>>\n  (int 8)) chr ","w1 >> ","56320 | ","char & ","55296 | ","char >> ","(send\n  (lvar :char) :&\n  (int 255)) chr ","(send\n  (lvar :char) :>>\n  (int 8)) chr ","char < ","char == ","unicode each ","(send\n  (lvar :56320 | ) :&\n  (int 255)) chr ","56320 |  & ","(send\n  (lvar :56320 | ) :>>\n  (int 8)) chr ","56320 |  >> ","(send\n  (lvar :55296 | ) :&\n  (int 255)) chr ","55296 |  & ","(send\n  (lvar :55296 | ) :>>\n  (int 8)) chr ","55296 |  >> "]}," RBPDF UTF8ArrToLatin1":{"type":"method","name":"UTF8ArrToLatin1","children":[],"call":["outarr push ","char == ","@@utf8tolatin [] ","@@utf8tolatin key? ","char < ","unicode each ","@current_font [] == ","@current_font [] ","@is_unicode ! "]}," RBPDF UTF8ToLatin1":{"type":"method","name":"UTF8ToLatin1","children":[],"call":["outstr << ","char == ","@@utf8tolatin [] chr ","@@utf8tolatin [] ","@@utf8tolatin key? ","char chr ","char < ","unicode each "," UTF8StringToArray ","@is_unicode ! "," UTF8StringToArray  each ","@is_ UTF8StringToArray  ! "]}," RBPDF UTF8ToUTF16BE":{"type":"method","name":"UTF8ToUTF16BE","children":[],"call":[" arrUTF8ToUTF16BE "," UTF8StringToArray ","@is_unicode ! ","@is_ UTF8StringToArray  ! "]}," RBPDF UTF8StringToArray":{"type":"method","name":"UTF8StringToArray","children":[],"call":["@cache_utf8_string_to_array []= ","unicode << ","char >= ","char <= ","bytes [] << ","(send\n  (send\n    (lvar :numbytes) :-\n    (lvar :j)) :-\n  (int 1)) * ","numbytes - - ","numbytes - ","bytes [] ","1 upto ","bytes length == ","bytes length ","bytes << ","char - ","(send\n  (lvar :char) :>>\n  (int 6)) == ","char >> ","(send\n  (lvar :char) :-\n  (int 240)) << ","(send\n  (lvar :char) :>>\n  (int 3)) == ","(send\n  (lvar :char) :-\n  (int 224)) << ","(send\n  (lvar :char) :>>\n  (int 4)) == ","(send\n  (lvar :char) :-\n  (int 192)) << ","(send\n  (lvar :char) :>>\n  (int 5)) == ","str each_byte ","str to_s ","strarr []= ","char unpack [] ","char unpack ","strarr each_with_index ","str split ","@is_unicode ! ","@cache_utf8_string_to_array shift ","@cache_size_utf8_string_to_array >= ","@cache_utf8_string_to_array [] ","unicode dup ","strarr dup ","@cache_utf8_string_to_array [] dup "," setFontSubBuffer ","@current_font [] ","@current_font [] []= ","unicode push ","unichar >= ","@cache_utf8_str to_s ing_to_array []= ","bytes []  >= ","bytes []  <= ","bytes []  - ","(send\n  (lvar :bytes [] ) :>>\n  (int 6)) == ","bytes []  >> ","(send\n  (lvar :bytes [] ) :-\n  (int 240)) << ","(send\n  (lvar :bytes [] ) :>>\n  (int 3)) == ","(send\n  (lvar :bytes [] ) :-\n  (int 224)) << ","(send\n  (lvar :bytes [] ) :>>\n  (int 4)) == ","(send\n  (lvar :bytes [] ) :-\n  (int 192)) << ","(send\n  (lvar :bytes [] ) :>>\n  (int 5)) == ","str to_s  each_byte ","str to_s  to_s ","str to_s arr []= ","str split  []= ","bytes []  unpack [] ","bytes []  unpack ","str to_s arr each_with_index ","str split  each_with_index ","str to_s  split ","@cache_utf8_str to_s ing_to_array shift ","@cache_size_utf8_str to_s ing_to_array >= ","@cache_utf8_str to_s ing_to_array [] ","str to_s arr dup ","str split  dup ","@cache_utf8_str to_s ing_to_array [] dup ","unibytes []  >= "]}," RBPDF out":{"type":"method","name":"out","children":[],"call":[" setBuffer ","s to_s + ","s to_s "," setPageBuffer ","(send\n  (send\n    (lvar :s) :to_s) :+\n  (str \"\\n\")) length ","@footerpos [] ","page + + + ","page + + ","page + ","pagebuff [] ","@footerlen [] -@ ","@footerlen [] ","@footerlen [] -@ - "," getPageBuffer ","@footerlen [] > ","@footerlen [] nil? ! ","@footerlen [] nil? ","@in_footer ! ","@state == ","s force_encoding ","s respond_to? ","@tmp_buffer << ","@pagebuff [] pos [] ","pagebuff []  + + + ","pagebuff []  + + ","pagebuff []  + ","pagebuff [] buff [] "," getPageBuffer  [] ","@pagebuff [] len [] -@ ","@pagebuff [] len [] ","@pagebuff [] len [] -@ - ","@pagebuff [] len [] > ","@pagebuff [] len [] nil? ! ","@pagebuff [] len [] nil? ","@in_pagebuff []  ! "]}," RBPDF putstream":{"type":"method","name":"putstream","children":[],"call":[" out "," getstream "]}," RBPDF getstream":{"type":"method","name":"getstream","children":[],"call":["stream\n + + ","stream\n + "," encrypt_data ","n <= "," getrawstream "," encrypt_data tream\n + + "," encrypt_data tream\n + "," getraw encrypt_data tream "]}," RBPDF escapetext":{"type":"method","name":"escapetext","children":[],"call":[" escape "," utf8StrRev "," UTF8ToLatin1 ","@current_font [] == ","@current_font [] "," rtl_text_dir "," e utf8StrRev cape "," e UTF8ToLatin1 cape "]}," RBPDF textannobjstring":{"type":"method","name":"textannobjstring","children":[],"call":[" dataannobjstring "," UTF8ToUTF16BE "," dataannobj UTF8ToUTF16BE tring "]}," RBPDF textstring":{"type":"method","name":"textstring","children":[],"call":[" datastring "," UTF8ToUTF16BE "," data UTF8ToUTF16BE tring "]}," RBPDF datestring":{"type":"method","name":"datestring","children":[],"call":[" datastring ","D: + ","Time  now strftime insert + ","Time  now strftime insert ","Time  now strftime ","Time  now "]}," RBPDF dataannobjstring":{"type":"method","name":"dataannobjstring","children":[],"call":["( + + ","( + "," escape "," encrypt_data ","@annot_obj_id + "," e encrypt_data cape "]}," RBPDF datastring":{"type":"method","name":"datastring","children":[],"call":["( + + ","( + "," escape "," encrypt_data "," e encrypt_data cape "]}," RBPDF escape":{"type":"method","name":"escape","children":[],"call":["s gsub gsub gsub gsub ","13 chr ","s gsub gsub gsub ","s gsub gsub ","s gsub "]}," RBPDF freadint":{"type":"method","name":"freadint","children":[],"call":["a [] ","f read unpack ","f read ","f read unpack  [] ","f ref read unpack d unpf read unpack ck ","f ref read unpack d "]}," RBPDF dooverlinew":{"type":"method","name":"dooverlinew","children":[],"call":[" sprintf ","w * ","(send\n  (send\n    (ivar :@h) :-\n    (lvar :y)) :+\n  (ivar :@font_ascent)) * - ","(send\n  (send\n    (ivar :@h) :-\n    (lvar :y)) :+\n  (ivar :@font_ascent)) * ","@h - + ","@h - ","x * ","@current_font [] -@ / * ","@current_font [] -@ / ","@current_font [] -@ ","@current_font [] "]}," RBPDF dooverline":{"type":"method","name":"dooverline","children":[],"call":[" dooverlinew "," GetStringWidth "," dooverline GetStringWidth  "]}," RBPDF dolinethroughw":{"type":"method","name":"dolinethroughw","children":[],"call":[" sprintf ","w * ","(send\n  (ivar :@h) :-\n  (lvar :y)) * + + ","@font_size_pt / ","(send\n  (ivar :@h) :-\n  (lvar :y)) * + ","(send\n  (ivar :@h) :-\n  (lvar :y)) * ","@h - ","x * ","@current_font [] -@ / * ","@current_font [] -@ / ","@current_font [] -@ ","@current_font [] "]}," RBPDF dolinethrough":{"type":"method","name":"dolinethrough","children":[],"call":[" dolinethroughw "," GetStringWidth "," dolinethrough GetStringWidth  "]}," RBPDF dounderlinew":{"type":"method","name":"dounderlinew","children":[],"call":[" sprintf ","w * ","(send\n  (ivar :@h) :-\n  (lvar :y)) * + ","(send\n  (ivar :@h) :-\n  (lvar :y)) * ","@h - ","x * ","@current_font [] -@ / * ","@current_font [] -@ / ","@current_font [] -@ ","@current_font [] "]}," RBPDF dounderline":{"type":"method","name":"dounderline","children":[],"call":[" dounderlinew "," GetStringWidth "," dounderline GetStringWidth  "]}," RBPDF newobj":{"type":"method","name":"newobj","children":[],"call":[" out ","@n to_s + ","@n to_s ","@offsets []= "]}," RBPDF endpage":{"type":"method","name":"endpage","children":[],"call":[" setVisibility "]}," RBPDF beginpage":{"type":"method","name":"beginpage","children":[],"call":["@pagegroups [] ","@pagegroups []= ","{nb + + ","{nb + ","n to_s ","@pagegroups size + ","@pagegroups size ","@newpagegroup [] nil? ! ","@newpagegroup [] nil? ","@newpagegroup [] ","@w - "," setPageFormat "," setPageOrientation ","@pagedim []= ","@pagedim [] ","@page - "," empty_string ","@fw_pt > "," setPageBuffer ","{@pagegroups size + b + + ","{@pagegroups size + b + ","@pagegroups size +  to_s ","@@pagegroups size + ewpagegroup [] @pagegroups size + il? ! ","@@pagegroups size + ewpagegroup [] @pagegroups size + il? ","@@pagegroups size + ewpagegroup [] "," setPageOrie@pagegroups size + tatio@pagegroups size +  "," empty_stri@pagegroups size + g "]}," RBPDF enddoc":{"type":"method","name":"enddoc","children":[],"call":["File  delete ","@fonts [] path ","@fonts [] ","@fontkeys each ","@images [] path ","@images [] ","@imagekeys each "," out "," puttrailer "," sprintf ","@offsets [] ","(send\n  (ivar :@annots_start_obj_id) :+\n  (int 1)) upto ","@annots_start_obj_id + ","(send\n  (ivar :@annots_start_obj_id) :+\n  (int 1)) to_s + + ","(send\n  (ivar :@annot_obj_id) :-\n  (ivar :@annots_start_obj_id)) to_s ","@annot_obj_id - ","(send\n  (ivar :@annots_start_obj_id) :+\n  (int 1)) to_s + ","(send\n  (ivar :@annots_start_obj_id) :+\n  (int 1)) to_s ","@annot_obj_id > ","filedata [] ","@embeddedfiles each ","@embedded_start_obj_id to_s + + ","@embeddedfiles length to_s ","@embeddedfiles length ","@embedded_start_obj_id to_s + ","@embedded_start_obj_id to_s ","@embeddedfiles length > ","@embeddedfiles nil? ! ","@embeddedfiles nil? ","1 upto ","0  + ","(send\n  (ivar :@n) :+\n  (int 1)) to_s ","@n + "," putcatalog "," putinfo "," putresources "," putpages "," putheader ","(send\n  (ivar :@apxo_start_obj_id) :+\n  (int 1)) upto ","@apxo_start_obj_id + ","(send\n  (ivar :@apxo_start_obj_id) :+\n  (int 1)) to_s + + ","(send\n  (ivar :@apxo_obj_id) :-\n  (ivar :@apxo_start_obj_id)) to_s ","@apxo_obj_id - ","(send\n  (ivar :@apxo_start_obj_id) :+\n  (int 1)) to_s + ","(send\n  (ivar :@apxo_start_obj_id) :+\n  (int 1)) to_s ","@apxo_obj_id > ","(send\n  (ivar :@js_start_obj_id) :+\n  (int 1)) upto ","@js_start_obj_id + ","(send\n  (ivar :@js_start_obj_id) :+\n  (int 1)) to_s + + ","(send\n  (ivar :@js_obj_id) :-\n  (ivar :@js_start_obj_id)) to_s ","@js_obj_id - ","(send\n  (ivar :@js_start_obj_id) :+\n  (int 1)) to_s + ","(send\n  (ivar :@js_start_obj_id) :+\n  (int 1)) to_s ","@js_obj_id > "]}," RBPDF putheader":{"type":"method","name":"putheader","children":[],"call":[" out ","%PDF- + "]}," RBPDF puttrailer":{"type":"method","name":"puttrailer","children":[],"call":[" out ","out << "," /Info  + + "," /Info  + ","(send\n  (ivar :@n) :-\n  (int 1)) to_s ","@n - "," /Root  + + "," /Root  + ","@n to_s "," /Size  + ","(send\n  (ivar :@n) :+\n  (int 1)) to_s ","@n + "]}," RBPDF putviewerpreferences":{"type":"method","name":"putviewerpreferences","children":[],"call":["out << "," /NumCopies  + ","@viewer_preferences [] to_s ","@viewer_preferences [] "," /PrintPageRange [ + + "," /PrintPageRange [ + ","print_page_range_num sub ","print_page_range_num << ","  + + ","  + ","(send\n  (lvar :v) :-\n  (int 1)) to_s ","v - ","@viewer_preferences [] each "," /Duplex / + "," empty_string ! "," empty_string "," /PrintScaling / + "," /PrintClip / + "," /PrintArea / + "," /ViewClip / + "," /ViewArea / + "," /NonFullScreenPageMode / + ","@viewer_preferences [] == "]}," RBPDF putcatalog":{"type":"method","name":"putcatalog","children":[],"call":[" out ","out << "," /OCProperties <</OCGs [ + + + + + + + + + + "," /OCProperties <</OCGs [ + + + + + + + + + "," /OCProperties <</OCGs [ + + + + + + + + "," /OCProperties <</OCGs [ + + + + + + + "," /OCProperties <</OCGs [ + + + + + + "," /OCProperties <</OCGs [ + + + + + "," /OCProperties <</OCGs [ + + + + "," /OCProperties <</OCGs [ + + + "," /OCProperties <</OCGs [ + + "," /OCProperties <</OCGs [ + ","<</Event /Print /OCGs [ + + + + + + + + ","<</Event /Print /OCGs [ + + + + + + + ","<</Event /Print /OCGs [ + + + + + + ","<</Event /Print /OCGs [ + + + + + ","<</Event /Print /OCGs [ + + + + ","<</Event /Print /OCGs [ + + + ","<</Event /Print /OCGs [ + + ","<</Event /Print /OCGs [ + ","@n_ocg_view to_s + ","@n_ocg_view to_s ","@n_ocg_print to_s + ","@n_ocg_print to_s ","  + "," putviewerpreferences "," /Outlines  + + "," /Outlines  + ","@outline_root to_s ","@outlines size > ","@outlines size "," /JavaScript  + + "," /JavaScript  + ","@js_objects empty? ! ","@js_objects empty? ","@javascript empty? ! ","@javascript empty? "," /Lang / + ","@l [] "," /PageMode / + "," empty_string ! "," empty_string "," /PageLayout / + "," /OpenAction [3 0 R /XYZ null null  + + "," /OpenAction [3 0 R /XYZ null null  + ","@zoom_mode / ","@zoom_mode is_a? ! ","@zoom_mode is_a? ","@zoom_mode == "," newobj ","(send\n  (ivar :@zoom_mode) :/\n  (float 100.0)) to_s ","@sig_obj_id + ","@signature_data [] > ","@signature_data [] "," /Q  + ","@fontkeys index + ","@fontkeys index ","@font_obj_ids [] ","fontkey + ","@annotation_fonts each ","@annotation_fonts empty? ","objrefs << ","@form_obj_id each ","@form_obj_id empty? ! ","@form_obj_id empty? "," /OCPro@n_ocg_print to_s + erties <</OCGs [ + + + + + + + + + + "," /OCPro@n_ocg_print to_s + erties <</OCGs [ + + + + + + + + + "," /OCPro@n_ocg_print to_s + erties <</OCGs [ + + + + + + + + "," /OCPro@n_ocg_print to_s + erties <</OCGs [ + + + + + + + "," /OCPro@n_ocg_print to_s + erties <</OCGs [ + + + + + + "," /OCPro@n_ocg_print to_s + erties <</OCGs [ + + + + + "," /OCPro@n_ocg_print to_s + erties <</OCGs [ + + + + "," /OCPro@n_ocg_print to_s + erties <</OCGs [ + + + "," /OCPro@n_ocg_print to_s + erties <</OCGs [ + + "," /OCPro@n_ocg_print to_s + erties <</OCGs [ + ","<</E@n_ocg_view to_s + ent /Print /OCGs [ + + + + + + + + ","<</E@n_ocg_view to_s + ent /Print /OCGs [ + + + + + + + ","<</E@n_ocg_view to_s + ent /Print /OCGs [ + + + + + + ","<</E@n_ocg_view to_s + ent /Print /OCGs [ + + + + + ","<</E@n_ocg_view to_s + ent /Print /OCGs [ + + + + ","<</E@n_ocg_view to_s + ent /Print /OCGs [ + + + ","<</E@n_ocg_view to_s + ent /Print /OCGs [ + + ","<</E@n_ocg_view to_s + ent /Print /OCGs [ + ","@n_ocg_@n_ocg_view to_s + iew to_s + ","@n_ocg_@n_ocg_view to_s + iew to_s ","@n_ocg_@n_ocg_print to_s + rint to_s + ","@n_ocg_@n_ocg_print to_s + rint to_s "," put@n_ocg_view to_s + iewerpreferences "," @n_ocg_print to_s + utviewer@n_ocg_print to_s + references "," /Ja@n_ocg_view to_s + aScript  + + "," /JavaScri@n_ocg_print to_s + t  + + "," /Ja@n_ocg_view to_s + aScript  + "," /JavaScri@n_ocg_print to_s + t  + ","@js_objects em@n_ocg_print to_s + ty? ! ","@js_objects em@n_ocg_print to_s + ty? ","@jav<</Event /Print /OCGs [ + + + + + + + + cript empty? ! ","@ja@n_ocg_view to_s + ascript empty? ! ","@javascri@n_ocg_print to_s + t em@n_ocg_print to_s + ty? ! ","@jav<</Event /Print /OCGs [ + + + + + + + + cript empty? ","@ja@n_ocg_view to_s + ascript empty? ","@javascri@n_ocg_print to_s + t em@n_ocg_print to_s + ty? "," em@n_ocg_print to_s + ty_string ! "," em@n_ocg_print to_s + ty_string "," /O@n_ocg_print to_s + enAction [3 0 R /XYZ null null  + + "," /O@n_ocg_print to_s + enAction [3 0 R /XYZ null null  + ","(send\n  (i@n_ocg_view to_s + ar :@zoom_mode) :/\n  (float 100.0)) to_s ","@annotation_fonts em@n_ocg_print to_s + ty? ","@form_obj_id em@n_ocg_print to_s + ty? ! ","@form_obj_id em@n_ocg_print to_s + ty? "]}," RBPDF putinfo":{"type":"method","name":"putinfo","children":[],"call":[" out ","out << "," /ModDate  + "," datestring "," /CreationDate  + "," /Producer  + "," textstring "," /Creator  + "," empty_string ! "," empty_string "," /Keywords  + "," /Subject  + "," /Author  + "," /Title  + "," newobj "]}," RBPDF putresources":{"type":"method","name":"putresources","children":[],"call":[" putannotsobjs "," putEmbeddedFiles "," putbookmarks "," putresourcedict ","@offsets []= "," putspotcolors "," putimages "," putfonts "," putocg "," putextgstates "," mapLinksToHtmlAnchors "," putjavascript "]}," RBPDF putresourcedict":{"type":"method","name":"putresourcedict","children":[],"call":[" out ","out << ","  + + ","  + ","extgstate [] to_s ","extgstate [] "," /GS + ","k to_s "," / + ","@extgstates each_with_index "," /Properties <</OC1  + + + + "," /Properties <</OC1  + + + ","@n_ocg_view to_s "," /Properties <</OC1  + + "," /Properties <</OC1  + ","@n_ocg_print to_s "," /I + + + + "," /I + + + ","info [] to_s ","info [] "," /I + + "," /I + "," getImageBuffer ","@imagekeys each "," /F + + + + "," /F + + + ","font [] to_s ","font [] "," /F + + "," /F + "," getFontBuffer ","@fontkeys each "," getImageBuffer  [] to_s "," getImageBuffer  [] "," getFontBuffer  [] to_s "," getFontBuffer  [] ","@ getFontBuffer keys each "]}," RBPDF putspotcolors":{"type":"method","name":"putspotcolors","children":[],"call":[" out ","out << ","  + "," sprintf ","color [] / ","color [] ","[/Separation / + ","name gsub ","@spot_colors [] []= ","@spot_colors [] "," newobj ","@spot_colors each "," [/Separation / +  ","[/Separation / +  << "]}," RBPDF putimages":{"type":"method","name":"putimages","children":[],"call":[" out ","<< + + + + + + ","<< + + + + + "," getstream ","<< + + + + ","<< + + + ","pal length to_s ","pal length ","<< + + ","<< + ","info [] ","Zlib Deflate  deflate "," newobj ","info [] == ","out << ","  + "," /Length  + + "," /Length  + ","info [] length to_s ","info [] length "," /Mask [ + + "," /Mask [ + ","trns << ","info [] [] + + + ","info [] [] + + ","info [] [] ","info [] [] + ","0 upto ","info [] kind_of? ","info [] nil? ! ","info [] nil? "," /Filter / + "," /BitsPerComponent  + ","info [] to_s "," /ColorSpace / + "," /ColorSpace [/Indexed /DeviceRGB  + + + + "," /ColorSpace [/Indexed /DeviceRGB  + + + ","(send\n  (ivar :@n) :+\n  (int 1)) to_s ","@n + "," /ColorSpace [/Indexed /DeviceRGB  + + "," /ColorSpace [/Indexed /DeviceRGB  + ","(send\n  (send\n    (send\n      (send\n        (lvar :info) :[]\n        (str \"pal\")) :length) :/\n    (int 3)) :-\n  (int 1)) to_s ","info [] length / - ","info [] length / "," /SMask  + + "," /SMask  + ","(send\n  (ivar :@n) :-\n  (int 1)) to_s ","@n - ","info key? "," /Height  + "," /Width  + "," setImageSubBuffer "," getImageBuffer ","@imagekeys each ","count_info times ","info [] [] to_s + + + ","info [] [] to_s + + ","info [] [] to_s ","info [] [] to_s + ","info []  length to_s ","Zlib Deflate  deflate  length to_s ","info []  length ","Zlib Deflate  deflate  length "," getImageBuffer  [] "," getImageBuffer  [] == "," getImageBuffer  [] length to_s "," getImageBuffer  [] length "," getImageBuffer  [] [] + + + "," getImageBuffer  [] [] + + "," getImageBuffer  [] [] "," getImageBuffer  [] [] + "," getImageBuffer  [] kind_of? "," getImageBuffer  [] nil? ! "," getImageBuffer  [] nil? "," getImageBuffer  [] to_s ","(send\n  (send\n    (send\n      (send\n        (lvar :info) :[]\n        (str \"info [] \")) :length) :/\n    (int 3)) :-\n  (int 1)) to_s ","(send\n  (send\n    (send\n      (send\n        (lvar :info) :[]\n        (str \"Zlib Deflate  deflate \")) :length) :/\n    (int 3)) :-\n  (int 1)) to_s ","(send\n  (send\n    (send\n      (send\n        (lvar : getImageBuffer ) :[]\n        (str \"pal\")) :length) :/\n    (int 3)) :-\n  (int 1)) to_s "," getImageBuffer  [] length / - "," getImageBuffer  [] length / "," getImageBuffer  key? ","info [] length  times ","count_ getImageBuffer  times "," getImageBuffer  [] [] to_s + + + "," getImageBuffer  [] [] to_s + + "," getImageBuffer  [] [] to_s "," getImageBuffer  [] [] to_s + "]}," RBPDF putcidfont0":{"type":"method","name":"putcidfont0","children":[],"call":[" out ","s + ","s << "," / + + + + "," / + + + ","v to_s "," / + + "," / + "," sprintf ","v is_a? ","k != ","font [] each ","font [] ","<</Type /FontDescriptor /FontName / + "," newobj ","out << ","\n + "," putfontwidths "," /DW  + ","font [] to_s "," /FontDescriptor  + + "," /FontDescriptor  + ","(send\n  (ivar :@n) :+\n  (int 1)) to_s ","@n + "," /CIDSystemInfo << + + "," /CIDSystemInfo << + ","cidinfo << "," /Supplement  + ","font [] [] to_s ","font [] [] "," /Ordering  + "," datastring ","/Registry  + "," /BaseFont / + "," /DescendantFonts [ + + "," /DescendantFonts [ + "," /Encoding / + "," /Name /F + ","name + + ","name + ","font merge ","cw []= ","uni < ","uni2cid [] + ","uni2cid [] ","font [] [] nil? ","<</Type /FontDescriptor /FontName / +  + ","<</Type /FontDescriptor /FontName / +  << "," sprintf  to_s ","v to_<</Type /FontDescriptor /FontName / +  "," <</Type /FontDescriptor /FontName / + printf "," sprintf  is_a? ","v i<</Type /FontDescriptor /FontName / + _a? ","font merge  [] each ","font merge  [] ","<</Type /FontDe<</Type /FontDescriptor /FontName / + criptor /FontName / + "," putfontwidth<</Type /FontDescriptor /FontName / +  "," putfont merge widths ","font [] to_<</Type /FontDescriptor /FontName / +  ","font merge  [] to_s "," /FontDe<</Type /FontDescriptor /FontName / + criptor  + + "," /FontDe<</Type /FontDescriptor /FontName / + criptor  + ","(send\n  (i sprintf ar :@n) :+\n  (int 1)) to_s ","(<</Type /FontDescriptor /FontName / + end\n  (ivar :@n) :+\n  (int 1)) to_<</Type /FontDescriptor /FontName / +  "," /CIDSy<</Type /FontDescriptor /FontName / + temInfo << + + "," /CIDSy<</Type /FontDescriptor /FontName / + temInfo << + ","/Registry  +  << ","font [] [] to_<</Type /FontDescriptor /FontName / +  ","font merge  [] [] to_s ","font merge  [] [] "," data<</Type /FontDescriptor /FontName / + tring ","/Regi<</Type /FontDescriptor /FontName / + try  + "," /Ba<</Type /FontDescriptor /FontName / + eFont / + "," /De<</Type /FontDescriptor /FontName / + cendantFont<</Type /FontDescriptor /FontName / +  [ + + "," /De<</Type /FontDescriptor /FontName / + cendantFont<</Type /FontDescriptor /FontName / +  [ + ","font []  + + ","font []  + ","font merge  merge ","font [] []  [] + ","font [] []  [] ","font merge  [] [] nil? "]}," RBPDF puttruetypeunicode":{"type":"method","name":"puttruetypeunicode","children":[],"call":[" out ","out << ","  + "," getstream ","f read "," open ","fontfile [] == ","fontfile [] ","<</Length  + + ","<</Length  + ","size to_s ","File  size "," Error ","Font file not found:  + "," empty_string ","File  exists? "," getfontpath ","fontdir + ","fontdir != ","font [] downcase ","font [] "," newobj "," empty_string ! ","@font_files [] [] ","@font_files [] "," /FontFile2  + + "," /FontFile2  + ","@font_files [] [] to_s "," / + + + ","value to_s "," / + + "," / + ","key to_s "," sprintf ","value is_a? ","font [] each "," /FontName / + "," /CIDToGIDMap  + + "," /CIDToGIDMap  + ","(send\n  (ivar :@n) :+\n  (int 2)) to_s ","@n + ","\n + "," putfontwidths "," /DW  + + "," /DW  + ","font [] to_s "," /FontDescriptor  + + "," /FontDescriptor  + ","(send\n  (ivar :@n) :+\n  (int 1)) to_s "," /CIDSystemInfo << + + "," /CIDSystemInfo << + ","cidinfo << "," /Supplement  + ","font [] [] to_s ","font [] [] "," /Ordering  + "," datastring ","/Registry  + "," /BaseFont / + "," /DescendantFonts [ + + "," /DescendantFonts [ + "," /Encoding / + "," /Name /F + "," /BaseFont / + + ","fontname << ","subtag + ","subtag gsub ","File  exist? ","stream length "," getrawstream ","Zlib Deflate  deflate "," <</Length  + +  ","<</Length  + +  << "," get getrawstream  "," getZlib Deflate  deflate  "," getfontpath  [] == ","fontdir +  [] == "," getfontpath  [] ","fontdir +  [] ","File  size  to_s ","File  File  size  ","@font_files [] []  + ","@font_files [] []  != "," sprintf  to_s "," sprintf  is_a? ","/Registry  +  << ","subtag gsub  + "," sprintf  + ","subtag gsub  gsub "," sprintf  gsub "," getrawstream  length ","Zlib Deflate  deflate  length "," getraw getrawstream  "," getrawZlib Deflate  deflate  "]}," RBPDF putType0":{"type":"method","name":"putType0","children":[],"call":[" out ","/FontName / + ","font [] "," newobj ","w + ","font [] [] to_s + ","font [] [] to_s ","font [] [] ","font [] keys sort each ","font [] keys sort ","font [] keys ","/FontDescriptor  + + ","/FontDescriptor  + ","(send\n  (ivar :@n) :+\n  (int 1)) to_s ","@n + ","/CIDSystemInfo <</Registry (Adobe) /Ordering ( + + + + ","/CIDSystemInfo <</Registry (Adobe) /Ordering ( + + + ","/CIDSystemInfo <</Registry (Adobe) /Ordering ( + + ","/CIDSystemInfo <</Registry (Adobe) /Ordering ( + ","/BaseFont / + ","/DescendantFonts [ + + ","/DescendantFonts [ + ","/Encoding / + ","/BaseFont / + + + ","/BaseFont / + + "]}," RBPDF putfontwidths":{"type":"method","name":"putfontwidths","children":[],"call":["/W [ + + ","/W [ + ","w << ","  + + + + ","  + + + ","ws join ","  + + ","  + ","k to_s ","  + + + + + ","ws [] to_s ","ws [] ","(send\n  (send\n    (lvar :k) :+\n    (send\n      (lvar :ws) :length)) :-\n  (int 1)) to_s ","k + - ","k + ","ws length ","ws uniq length == ","ws uniq length ","ws uniq ","range each_with_index ","range_interval []= ","cws > ","range_interval [] nil? ! ","range_interval [] nil? ","range_interval [] ","range []= ","range [] concat ","range [] ","cws < ","prevint ! ","k == ","range [] push ","range [] pop ","width == ","range [] [] ","cid == ","prevcid + ","width != ","font [] ","font_cw each ","font [] sort ","font [] [] nil? ","font [] [] ","cid > ","ws length  > ","ws length  < ","font [] sort  each "]}," RBPDF putfonts":{"type":"method","name":"putfonts","children":[],"call":["@font_obj_ids []= "," send "," Error ","Unsupported font type:  + "," respond_to? ","put + ","type downcase "," out ","s + ","s << "," /FontFile + + + + "," /FontFile + + + ","@font_files [] [] ","@font_files [] ","font [] "," /FontFile + + "," /FontFile + ","type == "," empty_string ! "," empty_string "," / + + + + "," / + + + "," / + + "," / + "," sprintf ","fdv is_a? ","font [] each ","<</Type /FontDescriptor /FontName / + "," newobj ","cw [] + ","cw [] ","i chr ","32 upto ","out << "," /Encoding  + + "," /Encoding  + ","(send\n  (lvar :nf) :+\n  (send\n    (lvar :font) :[]\n    (str \"diff\"))) to_s ","nf + ","font [] nil? ! ","font [] nil? "," /FontDescriptor  + + "," /FontDescriptor  + ","(send\n  (ivar :@n) :+\n  (int 2)) to_s ","@n + "," /Widths  + + "," /Widths  + ","(send\n  (ivar :@n) :+\n  (int 1)) to_s "," /Name /F + ","font [] to_s "," /BaseFont / + "," /Subtype / + "," putType0 ","@annotation_fonts []= ","name downcase == ","name downcase ","name downcase != "," getFontBuffer "," setFontSubBuffer ","@fontkeys each ","  + "," getstream "," /Length2  + + "," /Length2  + ","info [] to_s ","info [] ","info [] nil? ! ","info [] nil? "," /Length1  + ","<</Length  + ","font length to_s ","font length ","@font_files [] []= ","font [] + ","info [] + ","font [] [] == ","font [] [] ","compressed ! ","file [] == ","file [] ","f read "," open ","File  exist? "," getfontpath ","fontdir + ","fontdir != ","file downcase ","@font_files each ","<</Type /Encoding /BaseEncoding /WinAnsiEncoding /Differences [ + + ","<</Type /Encoding /BaseEncoding /WinAnsiEncoding /Differences [ + ","@diffs each ","Zlib Deflate  deflate "," getTrueTypeFontSubset ","fontinfo [] ","info [] each ","Zlib Inflate  inflate ","Object  const_defined? ","<< /Type /Encoding /BaseEncoding /WinAnsiEncoding /Differences [ + + ","<< /Type /Encoding /BaseEncoding /WinAnsiEncoding /Differences [ + ","@fontkeys each_with_index ","@font_ send s []= ","@font_ newobj s []= ","@font_obj_id<</Type /FontDescriptor /FontName / +  []= ","@ getFontBuffer _obj_ids []= ","@font [] + _obj_ids []= ","@font [] _obj_ids []= ","@f read _obj_ids []= ","@Zlib Deflate  deflate _obj_ids []= ","@ getTrueTypeFontSubset _obj_ids []= ","@Zlib Inflate  inflate _obj_ids []= "," <</Type /FontDescriptor /FontName / + end ","Un<</Type /FontDescriptor /FontName / + upported font type:  + ","Unsupported font font [] :  + ","Unsupported  getFontBuffer  type:  + ","Unsupported font [] +  type:  + ","Unsupported font []  type:  + ","Unsupported f read  type:  + ","Unsupported Zlib Deflate  deflate  type:  + ","Unsupported  getTrueTypeFontSubset  type:  + ","Unsupported Zlib Inflate  inflate  type:  + "," re<</Type /FontDescriptor /FontName / + pond_to? ","type downca<</Type /FontDescriptor /FontName / + e ","font []  downcase "," <</Length  +  ","<</Type /FontDescriptor /FontName / +  + ","<</Type /FontDescriptor /FontName / +  << ","@font_file<</Type /FontDescriptor /FontName / +  [] [] ","@ getFontBuffer _files [] [] ","@font [] + _files [] [] ","@font [] _files [] [] ","@f read _files [] [] ","@Zlib Deflate  deflate _files [] [] ","@ getTrueTypeFontSubset _files [] [] ","@Zlib Inflate  inflate _files [] [] ","@font_file downcase s [] [] ","@font_file<</Type /FontDescriptor /FontName / +  [] ","@ getFontBuffer _files [] ","@font [] + _files [] ","@font [] _files [] ","@f read _files [] ","@Zlib Deflate  deflate _files [] ","@ getTrueTypeFontSubset _files [] ","@Zlib Inflate  inflate _files [] ","@font_file downcase s [] "," getFontBuffer  [] ","font [] +  [] ","font []  [] ","f read  [] ","Zlib Deflate  deflate  [] "," getTrueTypeFontSubset  [] ","Zlib Inflate  inflate  [] ","font []  == "," empty_<</Type /FontDescriptor /FontName / + tring ! "," empty_<</Type /FontDescriptor /FontName / + tring "," <</Type /FontDescriptor /FontName / + printf "," sprintf  is_a? ","fdv i<</Type /FontDescriptor /FontName / + _a? "," getFontBuffer  [] each ","font [] +  [] each ","font []  [] each ","f read  [] each ","Zlib Deflate  deflate  [] each "," getTrueTypeFontSubset  [] each ","Zlib Inflate  inflate  [] each ","<</Type /FontDe<</Type /FontDescriptor /FontName / + criptor /FontName / + ","font []  [] + ","<</Length  +  << ","(<</Type /FontDescriptor /FontName / + end\n  (lvar :nf) :+\n  (<</Type /FontDescriptor /FontName / + end\n    (lvar :font) :[]\n    (<</Type /FontDescriptor /FontName / + tr \"diff\"))) to_<</Type /FontDescriptor /FontName / +  ","(send\n  (lvar :nf) :+\n  (send\n    (lvar : getFontBuffer ) :[]\n    (str \"diff\"))) to_s ","(send\n  (lvar :nf) :+\n  (send\n    (lvar :font [] + ) :[]\n    (str \"diff\"))) to_s ","(send\n  (lvar :nf) :+\n  (send\n    (lvar :font [] ) :[]\n    (str \"diff\"))) to_s ","(send\n  (lvar :nf) :+\n  (send\n    (lvar :f read ) :[]\n    (str \"diff\"))) to_s ","(send\n  (lvar :nf) :+\n  (send\n    (lvar :Zlib Deflate  deflate ) :[]\n    (str \"diff\"))) to_s ","(send\n  (lvar :nf) :+\n  (send\n    (lvar : getTrueTypeFontSubset ) :[]\n    (str \"diff\"))) to_s ","(send\n  (lvar :nf) :+\n  (send\n    (lvar :Zlib Inflate  inflate ) :[]\n    (str \"diff\"))) to_s "," getFontBuffer  [] nil? ! ","font [] +  [] nil? ! ","font []  [] nil? ! ","f read  [] nil? ! ","Zlib Deflate  deflate  [] nil? ! "," getTrueTypeFontSubset  [] nil? ! ","Zlib Inflate  inflate  [] nil? ! "," getFontBuffer  [] nil? ","font [] +  [] nil? ","font []  [] nil? ","f read  [] nil? ","Zlib Deflate  deflate  [] nil? "," getTrueTypeFontSubset  [] nil? ","Zlib Inflate  inflate  [] nil? "," /FontDe<</Type /FontDescriptor /FontName / + criptor  + + "," /FontDe<</Type /FontDescriptor /FontName / + criptor  + ","(<</Type /FontDescriptor /FontName / + end\n  (ivar :@n) :+\n  (int 2)) to_<</Type /FontDescriptor /FontName / +  "," /Width<</Type /FontDescriptor /FontName / +   + + "," /Width<</Type /FontDescriptor /FontName / +   + ","(<</Type /FontDescriptor /FontName / + end\n  (ivar :@n) :+\n  (int 1)) to_<</Type /FontDescriptor /FontName / +  ","font [] to_<</Type /FontDescriptor /FontName / +  "," getFontBuffer  [] to_s ","font [] +  [] to_s ","font []  [] to_s ","f read  [] to_s ","Zlib Deflate  deflate  [] to_s "," getTrueTypeFontSubset  [] to_s ","Zlib Inflate  inflate  [] to_s "," /Ba<</Type /FontDescriptor /FontName / + eFont / + "," /Subfont []  / + ","@annotation_font<</Type /FontDescriptor /FontName / +  []= ","@annotation_ getFontBuffer s []= ","@annotation_font [] + s []= ","@annotation_font [] s []= ","@annotation_f read s []= ","@annotation_Zlib Deflate  deflate s []= ","@annotation_ getTrueTypeFontSubset s []= ","@annotation_Zlib Inflate  inflate s []= ","name downca<</Type /FontDescriptor /FontName / + e == ","font []  downcase == ","name downca<</Type /FontDescriptor /FontName / + e ","name downca<</Type /FontDescriptor /FontName / + e != ","font []  downcase != "," <</Type /FontDescriptor /FontName / + etFontSubBuffer ","@fontkey<</Type /FontDescriptor /FontName / +  each ","@ getFontBuffer keys each ","@font [] + keys each ","@font [] keys each ","@f read keys each ","@Zlib Deflate  deflate keys each ","@ getTrueTypeFontSubset keys each ","@Zlib Inflate  inflate keys each "," get<</Type /FontDescriptor /FontName / + tream ","info [] to_<</Type /FontDescriptor /FontName / +  ","font length to_<</Type /FontDescriptor /FontName / +  "," getFontBuffer  length to_s ","font [] +  length to_s ","font []  length to_s ","f read  length to_s ","Zlib Deflate  deflate  length to_s "," getTrueTypeFontSubset  length to_s ","Zlib Inflate  inflate  length to_s "," getFontBuffer  length ","font [] +  length ","font []  length ","f read  length ","Zlib Deflate  deflate  length "," getTrueTypeFontSubset  length ","Zlib Inflate  inflate  length ","@font_file<</Type /FontDescriptor /FontName / +  [] []= ","@ getFontBuffer _files [] []= ","@font [] + _files [] []= ","@font [] _files [] []= ","@f read _files [] []= ","@Zlib Deflate  deflate _files [] []= ","@ getTrueTypeFontSubset _files [] []= ","@Zlib Inflate  inflate _files [] []= ","@font_file downcase s [] []= "," getFontBuffer  [] + ","font [] +  [] + ","f read  [] + ","Zlib Deflate  deflate  [] + "," getTrueTypeFontSubset  [] + ","Zlib Inflate  inflate  [] + "," getFontBuffer  [] [] == ","font [] +  [] [] == ","font []  [] [] == ","f read  [] [] == ","Zlib Deflate  deflate  [] [] == "," getTrueTypeFontSubset  [] [] == ","Zlib Inflate  inflate  [] [] == "," getFontBuffer  [] [] ","font [] +  [] [] ","font []  [] [] ","f read  [] [] ","Zlib Deflate  deflate  [] [] "," getTrueTypeFontSubset  [] [] ","Zlib Inflate  inflate  [] [] ","compre<</Type /FontDescriptor /FontName / + <</Type /FontDescriptor /FontName / + ed ! ","file downcase  [] == ","file downcase  [] ","File  exi<</Type /FontDescriptor /FontName / + t? "," get getFontBuffer path "," getfont [] + path "," getfont [] path "," getf read path "," getZlib Deflate  deflate path "," get getTrueTypeFontSubset path "," getZlib Inflate  inflate path "," getFontBuffer dir + ","font [] + dir + ","font [] dir + ","f read dir + ","Zlib Deflate  deflate dir + "," getTrueTypeFontSubset dir + ","Zlib Inflate  inflate dir + ","info []  + "," getFontBuffer dir != ","font [] + dir != ","font [] dir != ","f read dir != ","Zlib Deflate  deflate dir != "," getTrueTypeFontSubset dir != ","Zlib Inflate  inflate dir != ","info []  != ","file downca<</Type /FontDescriptor /FontName / + e ","file downcase  downcase ","@font_file<</Type /FontDescriptor /FontName / +  each ","@ getFontBuffer _files each ","@font [] + _files each ","@font [] _files each ","@f read _files each ","@Zlib Deflate  deflate _files each ","@ getTrueTypeFontSubset _files each ","@Zlib Inflate  inflate _files each ","@font_file downcase s each ","<</Type /Encoding /Ba<</Type /FontDescriptor /FontName / + eEncoding /WinAn<</Type /FontDescriptor /FontName / + iEncoding /Difference<</Type /FontDescriptor /FontName / +  [ + + ","<</Type /Encoding /Ba<</Type /FontDescriptor /FontName / + eEncoding /WinAn<</Type /FontDescriptor /FontName / + iEncoding /Difference<</Type /FontDescriptor /FontName / +  [ + ","@diff<</Type /FontDescriptor /FontName / +  each "," getTrueTypeFontSub<</Type /FontDescriptor /FontName / + et "," getFontBuffer info [] ","font [] + info [] ","font [] info [] ","f read info [] ","Zlib Deflate  deflate info [] "," getTrueTypeFontSubset info [] ","Zlib Inflate  inflate info [] ","Object  con<</Type /FontDescriptor /FontName / + t_defined? ","<< /Type /Encoding /Ba<</Type /FontDescriptor /FontName / + eEncoding /WinAn<</Type /FontDescriptor /FontName / + iEncoding /Difference<</Type /FontDescriptor /FontName / +  [ + + ","<< /Type /Encoding /Ba<</Type /FontDescriptor /FontName / + eEncoding /WinAn<</Type /FontDescriptor /FontName / + iEncoding /Difference<</Type /FontDescriptor /FontName / +  [ + ","@fontkey<</Type /FontDescriptor /FontName / +  each_with_index ","@ getFontBuffer keys each_with_index ","@font [] + keys each_with_index ","@font [] keys each_with_index ","@f read keys each_with_index ","@Zlib Deflate  deflate keys each_with_index ","@ getTrueTypeFontSubset keys each_with_index ","@Zlib Inflate  inflate keys each_with_index "]}," RBPDF putAPXObject":{"type":"method","name":"putAPXObject","children":[],"call":[" out ","out << ","  + "," getstream "," /Length  + ","stream length to_s ","stream length "," /BBox [0 0  + + "," /BBox [0 0  + "," sprintf ","Zlib Deflate  deflate ","@apxo_obj_id + ","@offsets []= ","stream strip ","@apxo_obj_id to_s + ","@apxo_obj_id to_s "," @apxo_obj_id +  "," @apxo_obj_id to_s +  ","@apxo_obj_id +  << ","@apxo_obj_id to_s +  << "," getZlib Deflate  deflate  "," getstream strip  ","Zlib Deflate  deflate  length to_s ","stream strip  length to_s ","Zlib Deflate  deflate  length ","stream strip  length ","Zlib Deflate  deflate  strip ","stream strip  strip "]}," RBPDF putannotsobjs":{"type":"method","name":"putannotsobjs","children":[],"call":["@form_obj_id push= ","@radiobutton_groups [] [] ! ","@radiobutton_groups [] [] ","pl [] ","@radiobutton_groups [] "," out ","@annot_obj_id to_s + + + ","@annot_obj_id to_s + + ","@annot_obj_id to_s + ","@annot_obj_id to_s ","@offsets []= ","annots << ","copt to_i to_s + ","copt to_i to_s ","copt to_i ","pl [] [] each ","pl [] [] ","pl [] [] empty? ! ","pl [] [] empty? ","pl [] [] is_a? "," /TI  + ","pl [] [] to_i to_s ","pl [] [] to_i ","  + "," textannobjstring "," [ + + + + "," [ + + + ","copt [] "," [ + + "," [ + ","copt is_a? "," /Q  + ","pl [] [] <= ","pl [] [] >= "," /DA ( + + "," /DA ( + "," /AA <<  + + "," /AA <<  + "," /A <<  + + "," /A <<  + "," sprintf ","optval is_a? ","pl [] [] eath "," /MaxLen  + "," /Ff  + ","1 << ","val - "," /TM  + "," dataannobjstring "," /TU  + "," /T  + "," /Parent  + + "," /Parent  + "," /TP  + ","pl [] [] [] ","pl [] [] [] <= ","pl [] [] [] >= ","pl [] [] [] [] ","pl [] [] [] [] [] ","pl [] [] [] [] empty? ! ","pl [] [] [] [] empty? ","pl [] [] [] [] is_a? "," /S / + ","if_s include? "," /SW / + ","if_sw include? ","pl [] [] [] empty? ! ","pl [] [] [] empty? ","pl [] [] [] is_a? "," /IX  + + "," /IX  + ","info [] ","info != "," getImageBuffer "," /RI  + + "," /RI  + "," /I  + + "," /I  + "," /AC  + + "," /AC  + "," /RC  + + "," /RC  + "," /CA  + + "," /CA  + ","col / ","col >= ","col <= ","col to_i ","pl [] [] [] each ","pl [] [] [] != "," /R  + "," /H / + ","hmode include? "," /Name / + ","iconsapp include? ","pl [] [] nil? ! ","pl [] [] nil? "," /Sound <</Type /Filespec /F  + + + + "," /Sound <</Type /Filespec /F  + + + ","@embeddedfiles [] [] ","@embeddedfiles [] "," /Sound <</Type /Filespec /F  + + "," /Sound <</Type /Filespec /F  + ","@embeddedfiles [] [] nil? ! ","@embeddedfiles [] [] nil? ","File  basename "," /FS <</Type /Filespec /F  + + + + "," /FS <</Type /Filespec /F  + + + ","@embeddedfiles [] [] to_s "," /FS <</Type /Filespec /F  + + "," /FS <</Type /Filespec /F  + "," /LE / + ","lineendings include? "," /RD [ + + "," /RD [ + ","pl [] [] [] * "," /IT / + ","tfit include? ","cl * ","(str \"opt\") [] nil? ! ","(str \"opt\") [] nil? ","(str \"opt\") [] "," /DS  + ","hmodes include? ","@pagedim [] [] - ","l [] * ","l [] ","@pagedim [] [] ","@pagedim [] ","1 + ","2 * ","@links [] "," /A <</S /URI /URI  + + "," /A <</S /URI /URI  + "," unhtmlentities ","pl [] is_a? ","pl [] [] == "," /State / + ","states include? "," /StateModel / + ","pl [] []= ","statemodels include? "," /Open  + ","pl [] [] downcase == ","pl [] [] downcase "," /Subj  + "," /CreationDate  + "," datestring ","pl [] [] to_f ","markups include? ","pl [] [] [] nil? ! ","pl [] [] [] nil? "," markups include? "," markups ","dash to_i + ","dash to_i ","pl [] [] [] to_i ","pl [] [] [] to_i + ","pl [] [] length >= ","pl [] [] length ","cord to_i to_s ","cord to_i ","bstyles include? "," /W  + ","  + + "," putAPXObject "," / + + + + "," / + + + "," / + + "," / + ","apdef each ","apdef is_a? ","apmode upcase "," /AP <<  + + "," /AP <<  + "," /AS / + "," /F  + ","val to_i ","f downcase "," /M  + "," /NM  + "," /P  + + "," /P  + ","@page_obj_id [] to_s ","@page_obj_id [] "," /Contents  + "," /FT / + ","ft include? "," /Rect [ + + "," /Rect [ + "," /Subtype / + ","b + ","a + ","pl [] * ","(send\n  (send\n    (lvar :pl) :[]\n    (str \"y\")) :+\n  (send\n    (lvar :pl) :[]\n    (str \"h\"))) * ","pl [] + ","pl []= ","pl_opt []= ","keys [] ","keys [] downcase ","pl [] inject ","@radiobutton_groups [] []= ","@annot_obj_id + + + ","@annot_obj_id + + ","@annot_obj_id + "," /V / + "," defval ","data [] ","data [] != ","@radiobutton_groups [] [] each ","@radiobutton_groups [] [] is_a? ","@page_annots [] each_with_index ","@page_annots [] ","@page_annots [] nil? ! ","@page_annots [] nil? ","1 upto ","@form_obj_id << ","(and\n  (send\n    (ivar :@radiobutton_groups) :[]\n    (lvar :n))\n  (send\n    (send\n      (ivar :@radiobutton_groups) :[]\n      (lvar :n)) :[]\n    (send\n      (lvar :pl) :[]\n      (str \"txt\")))) ! ","@form_opl [] [] [] * j_id push= ","@form_o@pagedim [] [] - j_id push= ","@fopl [] [] [] * m_obj_id push= ","@form_obj_ipl [] *  push= ","@radiopl [] [] [] * utton_groups [] [] ! ","@radio@pagedim [] [] - utton_groups [] [] ! ","@radiobupl [] [] [] * pl [] [] [] * on_groups [] [] ! ","@pl [] [] [] * adiobutton_gpl [] [] [] * oups [] [] ! ","@rapl [] * iobutton_groups [] [] ! ","@rpl [] * diobutton_groups [] [] ! ","@radiopl [] [] [] * utton_groups [] [] ","@radio@pagedim [] [] - utton_groups [] [] ","@radiobupl [] [] [] * pl [] [] [] * on_groups [] [] ","@pl [] [] [] * adiobutton_gpl [] [] [] * oups [] [] ","@rapl [] * iobutton_groups [] [] ","@rpl [] * diobutton_groups [] [] ","ppl [] [] [] *  [] ","p@links []  [] ","@radiopl [] [] [] * utton_groups [] ","@radio@pagedim [] [] - utton_groups [] ","@radiobupl [] [] [] * pl [] [] [] * on_groups [] ","@pl [] [] [] * adiobutton_gpl [] [] [] * oups [] ","@rapl [] * iobutton_groups [] ","@rpl [] * diobutton_groups [] "," oupl [] [] [] *  ","@annot_opl [] [] [] * j_id to_s + + + ","@annot_o@pagedim [] [] - j_id to_s + + + ","@annopl [] [] [] * _obj_id pl [] [] [] * o_s + + + ","@annot_obj_ipl [] *  to_s + + + ","@pl [] * nnot_obj_id to_s + + + ","@annot_opl [] [] [] * j_id to_s + + ","@annot_o@pagedim [] [] - j_id to_s + + ","@annopl [] [] [] * _obj_id pl [] [] [] * o_s + + ","@annot_obj_ipl [] *  to_s + + ","@pl [] * nnot_obj_id to_s + + ","@annot_opl [] [] [] * j_id to_s + ","@annot_o@pagedim [] [] - j_id to_s + ","@annopl [] [] [] * _obj_id pl [] [] [] * o_s + ","@annot_obj_ipl [] *  to_s + ","@pl [] * nnot_obj_id to_s + ","@annot_opl [] [] [] * j_id to_s ","@annot_o@pagedim [] [] - j_id to_s ","@annopl [] [] [] * _obj_id pl [] [] [] * o_s ","@annot_obj_ipl [] *  to_s ","@pl [] * nnot_obj_id to_s ","@offsepl [] [] [] * s []= ","annopl [] [] [] * s << ","pl [] * nnots << ","coppl [] [] [] *  pl [] [] [] * o_i pl [] [] [] * o_s + ","pl [] * opt to_i to_s + ","coppl [] [] [] *  pl [] [] [] * o_i pl [] [] [] * o_s ","pl [] * opt to_i to_s ","coppl [] [] [] *  pl [] [] [] * o_i ","pl [] * opt to_i ","ppl [] [] [] *  [] [] each ","p@links []  [] [] each ","pl [] [] eapl [] * h ","pl [] [] epl [] * ch ","ppl [] [] [] *  [] [] ","p@links []  [] [] ","pl [] [] emppl [] [] [] * y? ! ","ppl [] [] [] *  [] [] empty? ! ","p@links []  [] [] empty? ! ","pl [] [] emppl [] [] [] * y? ","ppl [] [] [] *  [] [] empty? ","p@links []  [] [] empty? ","ppl [] [] [] *  [] [] is_a? ","p@links []  [] [] is_a? ","pl [] [] is_pl [] * ? ","pl [] [] pl [] [] [] * o_i pl [] [] [] * o_s ","ppl [] [] [] *  [] [] to_i to_s ","p@links []  [] [] to_i to_s ","pl [] [] pl [] [] [] * o_i ","ppl [] [] [] *  [] [] to_i ","p@links []  [] [] to_i "," textannopl [] [] [] * jstring "," textanno@pagedim [] [] - jstring "," pl [] [] [] * expl [] [] [] * annobjspl [] [] [] * ring "," textannobjstpl [] [] [] * ing "," textpl [] * nnobjstring ","coppl [] [] [] *  [] ","pl [] * opt [] ","coppl [] [] [] *  is_a? ","pl [] * opt is_a? ","copt is_pl [] * ? ","ppl [] [] [] *  [] [] <= ","p@links []  [] [] <= ","ppl [] [] [] *  [] [] >= ","p@links []  [] [] >= "," sprinpl [] [] [] * f "," sppl [] [] [] * intf "," sprintf  is_a? ","oppl [] [] [] * val is_a? ","optvapl [] [] [] *  is_a? ","optva@links []  is_a? ","optpl [] [] to_i  is_a? ","optvpl [] * l is_pl [] * ? ","pl [] [] eapl [] [] [] * h ","ppl [] [] [] *  [] [] eath ","p@links []  [] [] eath ","pl [] [] epl [] * th "," /Mpl [] * xLen  + ","vapl [] [] [] *  - ","va@links []  - ","pl [] [] to_i  - ","vpl [] * l - "," dataannopl [] [] [] * jstring "," dataanno@pagedim [] [] - jstring "," dapl [] [] [] * aannobjspl [] [] [] * ring "," dataannobjstpl [] [] [] * ing "," pl [] * ataannobjstring "," dpl [] * tpl [] * pl [] * nnobjstring "," /Parenpl [] [] [] *   + + "," /Papl [] [] [] * ent  + + "," /Ppl [] * rent  + + "," /Parenpl [] [] [] *   + "," /Papl [] [] [] * ent  + "," /Ppl [] * rent  + ","ppl [] [] [] *  [] [] [] ","p@links []  [] [] [] ","ppl [] [] [] *  [] [] [] <= ","p@links []  [] [] [] <= ","ppl [] [] [] *  [] [] [] >= ","p@links []  [] [] [] >= ","ppl [] [] [] *  [] [] [] [] ","p@links []  [] [] [] [] ","ppl [] [] [] *  [] [] [] [] [] ","p@links []  [] [] [] [] [] ","pl [] [] [] [] emppl [] [] [] * y? ! ","ppl [] [] [] *  [] [] [] [] empty? ! ","p@links []  [] [] [] [] empty? ! ","pl [] [] [] [] emppl [] [] [] * y? ","ppl [] [] [] *  [] [] [] [] empty? ","p@links []  [] [] [] [] empty? ","ppl [] [] [] *  [] [] [] [] is_a? ","p@links []  [] [] [] [] is_a? ","pl [] [] [] [] is_pl [] * ? ","if_s incpl [] [] [] * ude? ","if_s inc@links [] ude? ","if_s inclupl [] * e? ","if_s inpl [] * lude? ","if_sw incpl [] [] [] * ude? ","if_sw inc@links [] ude? ","if_sw inclupl [] * e? ","if_sw inpl [] * lude? ","pl [] [] [] emppl [] [] [] * y? ! ","ppl [] [] [] *  [] [] [] empty? ! ","p@links []  [] [] [] empty? ! ","pl [] [] [] emppl [] [] [] * y? ","ppl [] [] [] *  [] [] [] empty? ","p@links []  [] [] [] empty? ","ppl [] [] [] *  [] [] [] is_a? ","p@links []  [] [] [] is_a? ","pl [] [] [] is_pl [] * ? "," getImageBuffer  [] "," getImageBuffer  != "," gepl [] [] [] * ImageBuffer "," getImageBuffepl [] [] [] *  "," getImpl [] * geBuffer ","col to_i  / ","copl [] [] [] *  / ","co@links []  / ","pl [] * ol / ","col to_i  >= ","copl [] [] [] *  >= ","co@links []  >= ","pl [] * ol >= ","col to_i  <= ","copl [] [] [] *  <= ","co@links []  <= ","pl [] * ol <= ","col to_i  to_i ","col pl [] [] [] * o_i ","copl [] [] [] *  to_i ","co@links []  to_i ","pl [] * ol to_i ","ppl [] [] [] *  [] [] [] each ","p@links []  [] [] [] each ","pl [] [] [] eapl [] * h ","pl [] [] [] epl [] * ch ","ppl [] [] [] *  [] [] [] != ","p@links []  [] [] [] != ","hmode incpl [] [] [] * ude? ","hmode inc@links [] ude? ","hmopl [] * e inclupl [] * e? ","hmode inpl [] * lude? "," /Npl [] * me / + ","iconsapp incpl [] [] [] * ude? ","iconsapp inc@links [] ude? ","iconsapp inclupl [] * e? ","ipl [] * onsapp inpl [] * lude? ","iconspl [] * pp include? ","ppl [] [] [] *  [] [] nipl [] [] [] * ? ! ","p@links []  [] [] ni@links [] ? ! ","ppl [] [] [] *  [] [] nipl [] [] [] * ? ","p@links []  [] [] ni@links [] ? "," /Sound <</Type /Fipl [] [] [] * espec /F  + + + + "," /Sound <</Type /Fi@links [] espec /F  + + + + "," /Sounpl [] *  <</Type /Filespec /F  + + + + "," /Sound <</Type /Filespepl [] *  /F  + + + + "," /Sound <</Type /Fipl [] [] [] * espec /F  + + + "," /Sound <</Type /Fi@links [] espec /F  + + + "," /Sounpl [] *  <</Type /Filespec /F  + + + "," /Sound <</Type /Filespepl [] *  /F  + + + ","@empl [] [] [] * eddedfiles [] [] ","@em@pagedim [] [] - eddedfiles [] [] ","@embeddedfipl [] [] [] * es [] [] ","@embeddedfi@links [] es [] [] ","@embepl [] * pl [] * epl [] * files [] [] ","@empl [] [] [] * eddedfiles [] ","@em@pagedim [] [] - eddedfiles [] ","@embeddedfipl [] [] [] * es [] ","@embeddedfi@links [] es [] ","@embepl [] * pl [] * epl [] * files [] "," /Sound <</Type /Fipl [] [] [] * espec /F  + + "," /Sound <</Type /Fi@links [] espec /F  + + "," /Sounpl [] *  <</Type /Filespec /F  + + "," /Sound <</Type /Filespepl [] *  /F  + + "," /Sound <</Type /Fipl [] [] [] * espec /F  + "," /Sound <</Type /Fi@links [] espec /F  + "," /Sounpl [] *  <</Type /Filespec /F  + "," /Sound <</Type /Filespepl [] *  /F  + ","@empl [] [] [] * eddedfiles [] [] nil? ! ","@em@pagedim [] [] - eddedfiles [] [] nil? ! ","@embeddedfipl [] [] [] * es [] [] nipl [] [] [] * ? ! ","@embeddedfi@links [] es [] [] ni@links [] ? ! ","@embepl [] * pl [] * epl [] * files [] [] nil? ! ","@empl [] [] [] * eddedfiles [] [] nil? ","@em@pagedim [] [] - eddedfiles [] [] nil? ","@embeddedfipl [] [] [] * es [] [] nipl [] [] [] * ? ","@embeddedfi@links [] es [] [] ni@links [] ? ","@embepl [] * pl [] * epl [] * files [] [] nil? ","File  pl [] [] [] * asename ","File  @pagedim [] [] - asename ","Fipl [] [] [] * e  basename ","Fi@links [] e  basename ","File  bpl [] * senpl [] * me "," /FS <</Type /Fipl [] [] [] * espec /F  + + + + "," /FS <</Type /Fi@links [] espec /F  + + + + "," /FS <</Type /Filespepl [] *  /F  + + + + "," /FS <</Type /Fipl [] [] [] * espec /F  + + + "," /FS <</Type /Fi@links [] espec /F  + + + "," /FS <</Type /Filespepl [] *  /F  + + + ","@empl [] [] [] * eddedfiles [] [] to_s ","@em@pagedim [] [] - eddedfiles [] [] to_s ","@embeddedfiles [] [] pl [] [] [] * o_s ","@embeddedfipl [] [] [] * es [] [] to_s ","@embeddedfi@links [] es [] [] to_s ","@embepl [] * pl [] * epl [] * files [] [] to_s "," /FS <</Type /Fipl [] [] [] * espec /F  + + "," /FS <</Type /Fi@links [] espec /F  + + "," /FS <</Type /Filespepl [] *  /F  + + "," /FS <</Type /Fipl [] [] [] * espec /F  + "," /FS <</Type /Fi@links [] espec /F  + "," /FS <</Type /Filespepl [] *  /F  + ","pl [] [] [] * ineendings incpl [] [] [] * ude? ","@links [] ineendings inc@links [] ude? ","lineenpl [] * ings inclupl [] * e? ","lineendings inpl [] * lude? ","ppl [] [] [] *  [] [] [] * ","p@links []  [] [] [] * ","pl [] [] [] * fipl [] [] [] *  include? ","tfit incpl [] [] [] * ude? ","tfit inc@links [] ude? ","tfit inclupl [] * e? ","tfit inpl [] * lude? ","cpl [] [] [] *  * ","c@links []  * ","pl [] * l * ","(spl [] [] [] * r \"oppl [] [] [] * \") [] nil? ! ","(stpl [] [] [] *  \"opt\") [] nil? ! ","(str \"opt\") [] nipl [] [] [] * ? ! ","(str \"opt\") [] ni@links [] ? ! ","(spl [] [] [] * r \"oppl [] [] [] * \") [] nil? ","(stpl [] [] [] *  \"opt\") [] nil? ","(str \"opt\") [] nipl [] [] [] * ? ","(str \"opt\") [] ni@links [] ? ","(spl [] [] [] * r \"oppl [] [] [] * \") [] ","(stpl [] [] [] *  \"opt\") [] ","hmodes incpl [] [] [] * ude? ","hmodes inc@links [] ude? ","hmopl [] * es inclupl [] * e? ","hmodes inpl [] * lude? ","@pagepl [] * im [] [] - ","@ppl [] * gedim [] [] - ","pl [] [] [] *  [] * ","@links []  [] * ","pl [] [] [] *  [] ","@links []  [] ","@pagepl [] * im [] [] ","@ppl [] * gedim [] [] ","@pagepl [] * im [] ","@ppl [] * gedim [] ","@pl [] [] [] * inks [] ","@@links [] inks [] "," unhpl [] [] [] * mlenpl [] [] [] * ipl [] [] [] * ies "," unhtmpl [] [] [] * entities "," unhtm@links [] entities ","ppl [] [] [] *  [] is_a? ","p@links []  [] is_a? ","pl [] is_pl [] * ? ","ppl [] [] [] *  [] [] == ","p@links []  [] [] == "," /Spl [] [] [] * apl [] [] [] * e / + "," /Stpl [] * te / + ","spl [] [] [] * apl [] [] [] * es include? ","states incpl [] [] [] * ude? ","states inc@links [] ude? ","states inclupl [] * e? ","states inpl [] * lude? ","stpl [] * tes include? "," /Spl [] [] [] * apl [] [] [] * eModel / + "," /StateModepl [] [] [] *  / + "," /StateMode@links []  / + "," /StateMopl [] * el / + "," /Stpl [] * teModel / + ","ppl [] [] [] *  [] []= ","p@links []  [] []= ","spl [] [] [] * apl [] [] [] * emodels include? ","statemodepl [] [] [] * s incpl [] [] [] * ude? ","statemode@links [] s inc@links [] ude? ","statemopl [] * els inclupl [] * e? ","statemodels inpl [] * lude? ","stpl [] * temodels include? ","ppl [] [] [] *  [] [] downcase == ","p@links []  [] [] downcase == ","pl [] [] pl [] * owncase == ","pl [] [] downpl [] * ase == ","pl [] [] downcpl [] * se == ","ppl [] [] [] *  [] [] downcase ","p@links []  [] [] downcase ","pl [] [] pl [] * owncase ","pl [] [] downpl [] * ase ","pl [] [] downcpl [] * se "," /Supl [] [] [] * j  + "," /Su@pagedim [] [] - j  + "," /Creapl [] [] [] * ionDapl [] [] [] * e  + "," /Cpl [] [] [] * eationDate  + "," /Crepl [] * tionDpl [] * te  + "," dapl [] [] [] * espl [] [] [] * ring "," datestpl [] [] [] * ing "," pl [] * atestring "," dpl [] * testring ","pl [] [] pl [] [] [] * o_f ","ppl [] [] [] *  [] [] to_f ","p@links []  [] [] to_f ","mapl [] [] [] * kups include? ","markups incpl [] [] [] * ude? ","markups inc@links [] ude? ","markups inclupl [] * e? ","markups inpl [] * lude? ","mpl [] * rkups include? ","ppl [] [] [] *  [] [] [] nipl [] [] [] * ? ! ","p@links []  [] [] [] ni@links [] ? ! ","ppl [] [] [] *  [] [] [] nipl [] [] [] * ? ","p@links []  [] [] [] ni@links [] ? "," mapl [] [] [] * kups include? "," markups incpl [] [] [] * ude? "," markups inc@links [] ude? "," markups inclupl [] * e? "," markups inpl [] * lude? "," mpl [] * rkups include? "," mapl [] [] [] * kups "," mpl [] * rkups ","dash pl [] [] [] * o_i + ","pl [] * ash to_i + ","dpl [] * sh to_i + ","dash pl [] [] [] * o_i ","pl [] * ash to_i ","dpl [] * sh to_i ","pl [] [] [] pl [] [] [] * o_i ","ppl [] [] [] *  [] [] [] to_i ","p@links []  [] [] [] to_i ","pl [] [] [] pl [] [] [] * o_i + ","ppl [] [] [] *  [] [] [] to_i + ","p@links []  [] [] [] to_i + ","pl [] [] lengpl [] [] [] * h >= ","ppl [] [] [] *  [] [] pl [] [] [] * ength >= ","p@links []  [] [] @links [] ength >= ","pl [] [] lengpl [] [] [] * h ","ppl [] [] [] *  [] [] pl [] [] [] * ength ","p@links []  [] [] @links [] ength ","cord pl [] [] [] * o_i pl [] [] [] * o_s ","copl [] [] [] * d to_i to_s ","corpl [] *  to_i to_s ","pl [] * ord to_i to_s ","cord pl [] [] [] * o_i ","copl [] [] [] * d to_i ","corpl [] *  to_i ","pl [] * ord to_i ","pl [] [] [] * styles include? ","@pagedim [] [] - styles include? ","bspl [] [] [] * yles include? ","bstypl [] [] [] * es incpl [] [] [] * ude? ","bsty@links [] es inc@links [] ude? ","bstyles inclupl [] * e? ","bstyles inpl [] * lude? "," putAPXOpl [] [] [] * ject "," putAPXO@pagedim [] [] - ject "," pupl [] [] [] * APXObjecpl [] [] [] *  "," putAPXObjepl [] * t ","appl [] * ef each ","apdef eapl [] * h ","pl [] * pdef epl [] * ch ","appl [] * ef is_a? ","pl [] * pdef is_pl [] * ? ","apmopl [] * e upcase ","apmode uppl [] * ase ","pl [] * pmode upcpl [] * se ","val pl [] [] [] * o_i ","vapl [] [] [] *  to_i ","va@links []  to_i ","pl [] [] to_i  to_i ","vpl [] * l to_i ","f pl [] * owncase ","f downpl [] * ase ","f downcpl [] * se ","@page_opl [] [] [] * j_id [] to_s ","@page_o@pagedim [] [] - j_id [] to_s ","@page_obj_id [] pl [] [] [] * o_s ","@page_obj_ipl [] *  [] to_s ","@ppl [] * ge_obj_id [] to_s ","@page_opl [] [] [] * j_id [] ","@page_o@pagedim [] [] - j_id [] ","@page_obj_ipl [] *  [] ","@ppl [] * ge_obj_id [] "," /Conpl [] [] [] * enpl [] [] [] * s  + ","fpl [] [] [] *  include? ","ft incpl [] [] [] * ude? ","ft inc@links [] ude? ","ft inclupl [] * e? ","ft inpl [] * lude? "," /Recpl [] [] [] *  [ + + "," /Repl [] * t [ + + "," /Recpl [] [] [] *  [ + "," /Repl [] * t [ + "," /Supl [] [] [] * type / + "," /Su@pagedim [] [] - type / + "," /Subpl [] [] [] * ype / + ","pl [] [] [] *  + ","@pagedim [] [] -  + ","pl [] *  + ","ppl [] [] [] *  [] * ","p@links []  [] * ","(send\n  (send\n    (lvar :pl) :[]\n    (spl [] [] [] * r \"y\")) :+\n  (send\n    (lvar :pl) :[]\n    (spl [] [] [] * r \"h\"))) * ","(send\n  (send\n    (lvapl [] [] [] *  :pl) :[]\n    (stpl [] [] [] *  \"y\")) :+\n  (send\n    (lvapl [] [] [] *  :pl) :[]\n    (stpl [] [] [] *  \"h\"))) * ","(send\n  (send\n    (pl [] [] [] * var :ppl [] [] [] * ) :[]\n    (str \"y\")) :+\n  (send\n    (pl [] [] [] * var :ppl [] [] [] * ) :[]\n    (str \"h\"))) * ","(send\n  (send\n    (@links [] var :p@links [] ) :[]\n    (str \"y\")) :+\n  (send\n    (@links [] var :p@links [] ) :[]\n    (str \"h\"))) * ","(senpl [] * \n  (senpl [] * \n    (lvar :pl) :[]\n    (str \"y\")) :+\n  (senpl [] * \n    (lvar :pl) :[]\n    (str \"h\"))) * ","(send\n  (send\n    (lvpl [] * r :pl) :[]\n    (str \"y\")) :+\n  (send\n    (lvpl [] * r :pl) :[]\n    (str \"h\"))) * ","ppl [] [] [] *  [] + ","p@links []  [] + ","ppl [] [] [] *  []= ","p@links []  []= ","pl_oppl [] [] [] *  []= ","ppl [] [] [] * _opt []= ","p@links [] _opt []= ","keys [] pl [] * owncase ","keys [] downpl [] * ase ","keys [] downcpl [] * se ","pl [] injecpl [] [] [] *  ","ppl [] [] [] *  [] inject ","p@links []  [] inject ","pl [] injepl [] * t ","@radiopl [] [] [] * utton_groups [] []= ","@radio@pagedim [] [] - utton_groups [] []= ","@radiobupl [] [] [] * pl [] [] [] * on_groups [] []= ","@pl [] [] [] * adiobutton_gpl [] [] [] * oups [] []= ","@rapl [] * iobutton_groups [] []= ","@rpl [] * diobutton_groups [] []= ","@annot_opl [] [] [] * j_id + + + ","@annot_o@pagedim [] [] - j_id + + + ","@annopl [] [] [] * _obj_id + + + ","@annot_obj_ipl [] *  + + + ","@pl [] * nnot_obj_id + + + ","@annot_opl [] [] [] * j_id + + ","@annot_o@pagedim [] [] - j_id + + ","@annopl [] [] [] * _obj_id + + ","@annot_obj_ipl [] *  + + ","@pl [] * nnot_obj_id + + ","@annot_opl [] [] [] * j_id + ","@annot_o@pagedim [] [] - j_id + ","@annopl [] [] [] * _obj_id + ","@annot_obj_ipl [] *  + ","@pl [] * nnot_obj_id + "," defvapl [] [] [] *  "," defva@links []  "," defpl [] [] to_i  "," pl [] * efval "," defvpl [] * l "," data []  ","dapl [] [] [] * a [] ","pl [] * ata [] ","dpl [] * tpl [] *  [] ","dapl [] [] [] * a [] != ","pl [] * ata [] != ","dpl [] * tpl [] *  [] != ","@radiopl [] [] [] * utton_groups [] [] each ","@radio@pagedim [] [] - utton_groups [] [] each ","@radiobupl [] [] [] * pl [] [] [] * on_groups [] [] each ","@pl [] [] [] * adiobutton_gpl [] [] [] * oups [] [] each ","@rapl [] * iobutton_groups [] [] each ","@radiobutton_groups [] [] eapl [] * h ","@rpl [] * diobutton_groups [] [] epl [] * ch ","@radiopl [] [] [] * utton_groups [] [] is_a? ","@radio@pagedim [] [] - utton_groups [] [] is_a? ","@radiobupl [] [] [] * pl [] [] [] * on_groups [] [] is_a? ","@pl [] [] [] * adiobutton_gpl [] [] [] * oups [] [] is_a? ","@rapl [] * iobutton_groups [] [] is_a? ","@rpl [] * diobutton_groups [] [] is_pl [] * ? ","@page_annopl [] [] [] * s [] each_wipl [] [] [] * h_index ","@page_annots [] each_with_inpl [] * ex ","@page_annots [] eapl [] * h_with_index ","@ppl [] * ge_pl [] * nnots [] epl [] * ch_with_index ","@page_annopl [] [] [] * s [] ","@ppl [] * ge_pl [] * nnots [] ","@page_annopl [] [] [] * s [] nil? ! ","@page_annots [] nipl [] [] [] * ? ! ","@page_annots [] ni@links [] ? ! ","@ppl [] * ge_pl [] * nnots [] nil? ! ","@page_annopl [] [] [] * s [] nil? ","@page_annots [] nipl [] [] [] * ? ","@page_annots [] ni@links [] ? ","@ppl [] * ge_pl [] * nnots [] nil? ","1 uppl [] [] [] * o ","@form_opl [] [] [] * j_id << ","@form_o@pagedim [] [] - j_id << ","@fopl [] [] [] * m_obj_id << ","@form_obj_ipl [] *  << ","(and\n  (send\n    (ivar :@radiopl [] [] [] * utton_groups) :[]\n    (lvar :n))\n  (send\n    (send\n      (ivar :@radiopl [] [] [] * utton_groups) :[]\n      (lvar :n)) :[]\n    (send\n      (lvar :pl) :[]\n      (str \"txt\")))) ! ","(and\n  (send\n    (ivar :@radio@pagedim [] [] - utton_groups) :[]\n    (lvar :n))\n  (send\n    (send\n      (ivar :@radio@pagedim [] [] - utton_groups) :[]\n      (lvar :n)) :[]\n    (send\n      (lvar :pl) :[]\n      (str \"txt\")))) ! ","(and\n  (send\n    (ivar :@radiobupl [] [] [] * pl [] [] [] * on_groups) :[]\n    (lvar :n))\n  (send\n    (send\n      (ivar :@radiobupl [] [] [] * pl [] [] [] * on_groups) :[]\n      (lvar :n)) :[]\n    (send\n      (lvar :pl) :[]\n      (spl [] [] [] * r \"pl [] [] [] * xpl [] [] [] * \")))) ! ","(and\n  (send\n    (ivapl [] [] [] *  :@pl [] [] [] * adiobutton_gpl [] [] [] * oups) :[]\n    (lvapl [] [] [] *  :n))\n  (send\n    (send\n      (ivapl [] [] [] *  :@pl [] [] [] * adiobutton_gpl [] [] [] * oups) :[]\n      (lvapl [] [] [] *  :n)) :[]\n    (send\n      (lvapl [] [] [] *  :pl) :[]\n      (stpl [] [] [] *  \"txt\")))) ! ","(and\n  (send\n    (ivar :@radiobutton_groups) :[]\n    (pl [] [] [] * var :n))\n  (send\n    (send\n      (ivar :@radiobutton_groups) :[]\n      (pl [] [] [] * var :n)) :[]\n    (send\n      (pl [] [] [] * var :ppl [] [] [] * ) :[]\n      (str \"txt\")))) ! ","(and\n  (send\n    (ivar :@radiobutton_groups) :[]\n    (@links [] var :n))\n  (send\n    (send\n      (ivar :@radiobutton_groups) :[]\n      (@links [] var :n)) :[]\n    (send\n      (@links [] var :p@links [] ) :[]\n      (str \"txt\")))) ! ","(anpl [] * \n  (senpl [] * \n    (ivar :@rapl [] * iobutton_groups) :[]\n    (lvar :n))\n  (senpl [] * \n    (senpl [] * \n      (ivar :@rapl [] * iobutton_groups) :[]\n      (lvar :n)) :[]\n    (senpl [] * \n      (lvar :pl) :[]\n      (str \"txt\")))) ! ","(pl [] * nd\n  (send\n    (ivpl [] * r :@rpl [] * diobutton_groups) :[]\n    (lvpl [] * r :n))\n  (send\n    (send\n      (ivpl [] * r :@rpl [] * diobutton_groups) :[]\n      (lvpl [] * r :n)) :[]\n    (send\n      (lvpl [] * r :pl) :[]\n      (str \"txt\")))) ! "]}," RBPDF getannotsrefs":{"type":"method","name":"getannotsrefs","children":[],"call":["out << ","  + ","@signature_data [] ","n == ","  + + ","@curr_annot_obj_id to_s ","@radio_groups include? ! ","@radio_groups include? ","0 upto ","num_annots - ","@page_annots [] length ","@page_annots [] ","@page_annots [] length  - "]}," RBPDF putannotsrefs":{"type":"method","name":"putannotsrefs","children":[],"call":[" out "," getannotsrefs "]}," RBPDF putpages":{"type":"method","name":"putpages","children":[],"call":[" out ","out << "," ] /Count  + + "," ] /Count  + ","nb to_s ","  + + ","  + ","page_obj to_s ","page_obj nil? ","@page_obj_id each ","@offsets []= ","File  delete ","@pages [] path ","@pages [] ","<< + + + + + + ","<< + + + + + "," getstream ","<< + + + + ","<< + + + ","p length to_s ","p length ","<< + + ","<< + "," newobj ","Zlib Deflate  deflate "," /PZ  + ","@pagedim [] [] to_s ","@pagedim [] [] ","@pagedim [] "," getannotsrefs "," /B  + ","@pagedim [] [] [] "," /SS  + "," /Di  + "," /M / + "," /Dm / + "," /D  + ","@pagedim [] [] [] to_s "," /S / + "," /Dur  + ","@pagedim [] [] empty? ! ","@pagedim [] [] empty? "," /Rotate  + "," /Contents  + + "," /Contents  + ","(send\n  (ivar :@n) :+\n  (int 1)) to_s ","@n + "," sprintf ","dash * ","dashes each ","@pagedim [] [] [] [] "," /W  + ","(send\n  (send\n    (send\n      (send\n        (send\n          (ivar :@pagedim) :[]\n          (lvar :n)) :[]\n        (str \"BoxColorInfo\")) :[]\n      (lvar :box)) :[]\n    (str \"W\")) :*\n  (ivar :@k)) to_s ","@pagedim [] [] [] [] * ","color [] / ","color [] "," / + + "," / + ","boxes each "," /LastModified  + "," datestring ","@page_obj_id []= ","temppage gsub "," UTF8ToUTF16BE "," formatPageNumber "," escape "," utf8StrRev ","{ + + ","{ + "," UTF8ToLatin1 ","k gsub ","k dup ","@pagegroups each ","@newpagegroup [] nil? ! ","@newpagegroup [] nil? ","@newpagegroup [] ","@pagegroups empty? ! ","@pagegroups empty? "," getPageBuffer ","1 upto "," rtl_text_dir ","Zlib Deflate  deflate age_obj to_s ","Zlib Deflate  deflate age_obj nil? ","@Zlib Deflate  deflate age_obj_id each ","@Zlib Deflate  deflate ages [] Zlib Deflate  deflate ath ","@Zlib Deflate  deflate ages [] ","Zlib Deflate  deflate  length to_s ","Zlib Deflate  deflate  length ","@Zlib Deflate  deflate agedim [] [] to_s ","@Zlib Deflate  deflate agedim [] [] ","@Zlib Deflate  deflate agedim [] ","@Zlib Deflate  deflate agedim [] [] [] ","@Zlib Deflate  deflate agedim [] [] [] to_s ","@Zlib Deflate  deflate agedim [] [] emZlib Deflate  deflate ty? ! ","@Zlib Deflate  deflate agedim [] [] emZlib Deflate  deflate ty? "," sZlib Deflate  deflate rintf ","@pagedim [] [] [] []  each ","@Zlib Deflate  deflate agedim [] [] [] [] ","(send\n  (send\n    (send\n      (send\n        (send\n          (ivar :@Zlib Deflate  deflate agedim) :[]\n          (lvar :n)) :[]\n        (str \"BoxColorInfo\")) :[]\n      (lvar :box)) :[]\n    (str \"W\")) :*\n  (ivar :@k)) to_s ","@Zlib Deflate  deflate agedim [] [] [] [] * ","@pagedim [] [] [] []  [] / ","@pagedim [] [] [] []  [] ","@Zlib Deflate  deflate age_obj_id []= ","temZlib Deflate  deflate Zlib Deflate  deflate age gsub ","temppage gsub  gsub "," getPageBuffer  gsub "," escaZlib Deflate  deflate e ","k duZlib Deflate  deflate  ","@Zlib Deflate  deflate agegrouZlib Deflate  deflate s each ","@newZlib Deflate  deflate agegrouZlib Deflate  deflate  [] nil? ! ","@newZlib Deflate  deflate agegrouZlib Deflate  deflate  [] nil? ","@newZlib Deflate  deflate agegrouZlib Deflate  deflate  [] ","@Zlib Deflate  deflate agegrouZlib Deflate  deflate s emZlib Deflate  deflate ty? ! ","@Zlib Deflate  deflate agegrouZlib Deflate  deflate s emZlib Deflate  deflate ty? ","1 uZlib Deflate  deflate to "]}," RBPDF begindoc":{"type":"method","name":"begindoc","children":[],"call":[" out ","%PDF- + "]}," RBPDF getfontpath":{"type":"method","name":"getfontpath","children":[],"call":["File  exists? ","File  join ","File  dirname ","File  exist? "]}," RBPDF dochecks":{"type":"method","name":"dochecks","children":[],"call":[" setlocale "," sprintf != "," sprintf "," Error ","1.1 == "]}," RBPDF destroy":{"type":"method","name":"destroy","children":[],"call":[" eval ","val to_s != ","val to_s ","preserve_objcopy ! ","val != "," instance_variables each "," instance_variables ","File  delete ","@buffer path "," empty_string ! "," empty_string ","val nil? ! ","val nil? "]}," RBPDF Output":{"type":"method","name":"Output","children":[],"call":[" destroy "," Error ","Incorrect output destination:  + "," getBuffer ","data << ","f read "," open ","dest == ","f write ","FileUtils  copy ","@buffer path ","name == ","dest upcase "," Close ","@state < "," lastPage "," dest upcase roy ","Incorrect output dest upcase ination:  + ","dest upcase  == ","dest upcase  upcase "]}," RBPDF SetXY":{"type":"method","name":"SetXY","children":[],"call":[" SetX "," SetY "]}," RBPDF SetY":{"type":"method","name":"SetY","children":[],"call":["@y > ","@y < ","@h + ","y >= ","@w - ","rtloff ! ","@h +  > ","@h +  < "]}," RBPDF SetX":{"type":"method","name":"SetX","children":[],"call":["@w + ","x >= ","x abs ","@w - ","rtloff ! "]}," RBPDF GetY":{"type":"method","name":"GetY","children":[],"call":[]}," RBPDF GetAbsX":{"type":"method","name":"GetAbsX","children":[],"call":[]}," RBPDF GetX":{"type":"method","name":"GetX","children":[],"call":["@w - "]}," RBPDF Ln":{"type":"method","name":"Ln","children":[],"call":["h is_a? ","@l_margin + ","@w - - ","@w - ","@x == ","@columns [] [] ","@columns [] ","@y == ","@num_columns > ","@l_margin +  == ","@w - -  == "]}," RBPDF ImagePngAlpha":{"type":"method","name":"ImagePngAlpha","children":[],"call":["tempfile_plain delete ","tempfile_alpha delete "," Image ","tempfile_plain path ","tempfile_alpha path "," imageToPNG "," image_alpha_mask ","tempfile_plain == ","info [] != ","info [] "," parsepng ","tempfile_plain close ","tempfile_alpha close ","tempfile_alpha == "," imageToPNG  delete "," image_alpha_mask  delete "," imageToPNG  path "," image_alpha_mask  path "," imageToPNG  == "," parsepng  [] != "," parsepng  [] "," imageToPNG  close "," image_alpha_mask  close "," image_alpha_mask  == "]}," RBPDF image_alpha_mask":{"type":"method","name":"image_alpha_mask","children":[],"call":["tmpFile close ","tmpFile nil? ","tmpFile print ","img to_blob ","tmpFile binmode ","Tempfile  new ","img2 negate ","img separate ","Magick ImageList  new ","tmpFile fsync ","img alpha= ","img alpha? ","img alpha ","Object  const_defined? ","mogrify separate ","mogrify channel ","img combine_options ","(str \"rgba\") include? ","img [] downcase ","img [] ","img format ","MiniMagick Image  open ","img format= ","img [] downcase split first ","img [] downcase split ","Tempfile  new  close ","Tempfile  new  nil? ","Tempfile  new  print ","img2 negate  to_blob ","Magick ImageList  new  to_blob ","MiniMagick Image  open  to_blob ","Tempfile  new  binmode ","img2 negate 2 negate ","Magick ImageList  new 2 negate ","MiniMagick Image  open 2 negate ","img separate  negate ","img2 negate  separate ","Magick ImageList  new  separate ","MiniMagick Image  open  separate ","Tempfile  new  fsync ","img2 negate  alpha= ","Magick ImageList  new  alpha= ","MiniMagick Image  open  alpha= ","img2 negate  alpha? ","Magick ImageList  new  alpha? ","MiniMagick Image  open  alpha? ","img2 negate  alpha ","Magick ImageList  new  alpha ","MiniMagick Image  open  alpha ","img2 negate  combine_options ","Magick ImageList  new  combine_options ","MiniMagick Image  open  combine_options ","img2 negate  [] downcase ","Magick ImageList  new  [] downcase ","MiniMagick Image  open  [] downcase ","img2 negate  [] ","Magick ImageList  new  [] ","MiniMagick Image  open  [] ","img2 negate  format ","Magick ImageList  new  format ","MiniMagick Image  open  format ","img2 negate  format= ","Magick ImageList  new  format= ","MiniMagick Image  open  format= ","img2 negate  [] downcase split first ","Magick ImageList  new  [] downcase split first ","MiniMagick Image  open  [] downcase split first ","img2 negate  [] downcase split ","Magick ImageList  new  [] downcase split ","MiniMagick Image  open  [] downcase split "]}," RBPDF parsepng":{"type":"method","name":"parsepng","children":[],"call":["f close ","f nil? ","pal empty? ","colspace == ","f read ","n + ","type == ","data << ","pos != ","t include? ","0 chr ","t [] ","t [] unpack [] ","t [] unpack ","(int 1) unpack [] ","(int 1) unpack ","ct == "," freadint ","/DecodeParms <</Predictor 15 /Colors  + + + + + + ","/DecodeParms <</Predictor 15 /Colors  + + + + + ","w to_s ","/DecodeParms <</Predictor 15 /Colors  + + + + ","/DecodeParms <</Predictor 15 /Colors  + + + ","bpc to_s ","/DecodeParms <</Predictor 15 /Colors  + + ","/DecodeParms <</Predictor 15 /Colors  + ","(if\n  (send\n    (lvar :ct) :==\n    (int 2))\n  (int 3)\n  (int 1)) to_s ","f read unpack [] != ","f read unpack [] ","f read unpack "," Error ","No RMagick: Alpha channel not supported:  + ","Object  const_defined? ","No RMagick: 16-bit depth not supported:  + ","bpc > ","Incorrect PNG file:  + ","f read != ","Not a PNG file:  + ","137 chr + + + + + ","10 chr ","137 chr + + + + ","26 chr ","137 chr + + + ","137 chr + + ","13 chr ","137 chr + ","137 chr "," open ","No RMagick/MiniMagick : 16-bit depth not supported:  + ","No RMagick/MiniMagick : Alpha channel not supported:  + ","trns << ","n times "," open  close ","f  freadint il? "," open  nil? ","pal empf read y? ","f read  empty? "," open  read "," freadint  + ","f read ype == ","f read  == ","daf read a << ","t include?  != ","f read  include? ","t i freadint clude? ","0 c freadint r ","f read  [] ","f read  [] unpack [] ","t [] u freadint pack [] ","f read  [] unpack ","t [] u freadint pack ","(inf read  1) unpack [] ","(i freadint t 1) u freadint pack [] ","(inf read  1) unpack ","(i freadint t 1) u freadint pack ","cf read  == ","f read unpack []  == "," freadinf read  "," freadi freadint t ","  open readint ","/DecodeParms <</Predicf read or 15 /Colors  + + + + + + ","/DecodeParms <</Predif read unpack [] or 15 /Colors  + + + + + + ","/DecodeParms <</Predicf read or 15 /Colors  + + + + + ","/DecodeParms <</Predif read unpack [] or 15 /Colors  + + + + + ","w f read o_s "," freadint  to_s ","/DecodeParms <</Predicf read or 15 /Colors  + + + + ","/DecodeParms <</Predif read unpack [] or 15 /Colors  + + + + ","/DecodeParms <</Predicf read or 15 /Colors  + + + ","/DecodeParms <</Predif read unpack [] or 15 /Colors  + + + ","bpc f read o_s ","f read unpack []  to_s ","/DecodeParms <</Predicf read or 15 /Colors  + + ","/DecodeParms <</Predif read unpack [] or 15 /Colors  + + ","/DecodeParms <</Predicf read or 15 /Colors  + ","/DecodeParms <</Predif read unpack [] or 15 /Colors  + ","(if\n  (send\n    (lvar :cf read ) :==\n    (inf read  2))\n  (inf read  3)\n  (inf read  1)) f read o_s ","(if\n  (se freadint d\n    (lvar :ct) :==\n    (i freadint t 2))\n  (i freadint t 3)\n  (i freadint t 1)) to_s ","(if\n  (send\n    (lvar :f read unpack [] ) :==\n    (int 2))\n  (int 3)\n  (int 1)) to_s ","(i open \n  (send\n    (lvar :ct) :==\n    (int 2))\n  (int 3)\n  (int 1)) to_s ","f read u freadint pack [] != "," open  read unpack [] != ","f read u freadint pack [] "," open  read unpack [] ","f read u freadint pack "," open  read unpack ","No RMagick: Alpha channel nof read  supporf read ed:  + ","No RMagick: Alpha cha freadint  freadint el  freadint ot supported:  + ","No RMagick: Alp freadint a c freadint annel not supported:  + ","Objecf read   consf read _defined? ","Object  co freadint st_defi freadint ed? ","Objef read unpack []   const_defined? ","Object  const_de open ined? ","No RMagick: 16-bif read  depf read h nof read  supporf read ed:  + ","No RMagick: 16-bit depth  freadint ot supported:  + ","No RMagick: 16-bit dept freadint  not supported:  + ","f read unpack []  > ","Incorrecf read  PNG file:  + ","I freadint correct PNG file:  + ","Incorref read unpack []  PNG file:  + ","Incorrect PNG  open ile:  + "," open  read != ","Nof read  a PNG file:  + ","Not a PNG  open ile:  + ","137 c freadint r + + + + + ","10 c freadint r ","137 c freadint r + + + + ","26 c freadint r ","137 c freadint r + + + ","137 c freadint r + + ","13 c freadint r ","137 c freadint r + ","137 c freadint r "," ope freadint  ","No RMagick/MiniMagick : 16-bif read  depf read h nof read  supporf read ed:  + ","No RMagick/Mi freadint iMagick : 16-bit depth  freadint ot supported:  + ","No RMagick/MiniMagick : 16-bit dept freadint  not supported:  + ","No RMagick/MiniMagick : Alpha channel nof read  supporf read ed:  + ","No RMagick/Mi freadint iMagick : Alpha cha freadint  freadint el  freadint ot supported:  + ","No RMagick/MiniMagick : Alp freadint a c freadint annel not supported:  + ","t []  << ","t [] unpack []  << ","f read rns << ","tr freadint s << ","n f read imes "," freadint  times "]}," RBPDF imageToPNG":{"type":"method","name":"imageToPNG","children":[],"call":["tmpFile close ","tmpFile nil? ","tmpFile print ","img to_blob ","tmpFile binmode ","Tempfile  new ","_ + + ","_ + ","File  basename ","img opacity= ","img format= ","Magick ImageList  new ","img alpha? ","img alpha= ","tmpFile fsync ","img alpha ","Object  const_defined? ","(str \"rgba\") include? ","img [] downcase ","img [] ","mogrify alpha ","img combine_options ","img format ","MiniMagick Image  open ","Magick  const_defined? ","img [] downcase split first ","img [] downcase split ","Tempfile  new  close ","Tempfile  new  nil? ","Tempfile  new  print ","Magick ImageList  new  to_blob ","MiniMagick Image  open  to_blob ","Tempfile  new  binmode ","Magick ImageList  new  opacity= ","MiniMagick Image  open  opacity= ","Magick ImageList  new  format= ","MiniMagick Image  open  format= ","Magick ImageList  new  alpha? ","MiniMagick Image  open  alpha? ","Magick ImageList  new  alpha= ","MiniMagick Image  open  alpha= ","Tempfile  new  fsync ","Magick ImageList  new  alpha ","MiniMagick Image  open  alpha ","Magick ImageList  new  [] downcase ","MiniMagick Image  open  [] downcase ","Magick ImageList  new  [] ","MiniMagick Image  open  [] ","Magick ImageList  new  combine_options ","MiniMagick Image  open  combine_options ","Magick ImageList  new  format ","MiniMagick Image  open  format ","Magick ImageList  new  [] downcase split first ","MiniMagick Image  open  [] downcase split first ","Magick ImageList  new  [] downcase split ","MiniMagick Image  open  [] downcase split "]}," RBPDF parsejpeg":{"type":"method","name":"parsejpeg","children":[],"call":["a [] ","data << ","f read "," open ","a [] nil? ! ","a [] nil? ","a [] == "," Error ","Not a JPEG file:  + ","a [] != ","Missing or incorrect image file:  + ","a empty? ","a nil? ","a == "," getimagesize "," getimagesize  [] ","d getimagesize t getimagesize  << ","f re getimagesize d "," getimagesize  [] nil? ! "," getimagesize  [] nil? "," getimagesize  [] == ","Not  getimagesize  JPEG file:  + "," getimagesize  [] != ","Missing or incorrect im getimagesize ge file:  + "," getimagesize  empty? "," getimagesize  nil? "," getimagesize  == "," getim getimagesize gesize "]}," RBPDF Image":{"type":"method","name":"Image","children":[],"call":["info [] "," SetY ","y + ","(send\n  (lvar :h) :/\n  (int 2)) round ","h / "," Link ","link empty? ! ","link empty? "," Cell ","border != "," out "," sprintf ","(send\n  (ivar :@h) :-\n  (begin\n    (send\n      (lvar :y) :+\n      (lvar :h)))) * ","@h - ","h * ","w * ","ximg * ","ximg + ","@w - - ","@w - ","palign == ","(send\n  (send\n    (send\n      (ivar :@w) :+\n      (ivar :@l_margin)) :-\n    (ivar :@r_margin)) :-\n  (lvar :w)) / ","@w + - - ","@w + - ","@w + ","x - "," setImageBuffer ","info []= ","imgmask != ","@imagekeys include? ! ","@imagekeys include? ","info == ","tmpname delete "," parsejpeg ","tmpname path ","tmpname close ","tmpname print "," quality= ","img to_blob ","tmpname binmode ","Tempfile  new ","File  basename ","img format= ","img resize ","Magick ImageList  new ","Object  const_defined? ","info ! "," ImagePngAlpha "," send "," Error ","Unsupported image type:  + "," respond_to? ","parse + ","tmpFile delete "," parsepng ","tmpFile path "," imageToPNG ","type == ","resize ! ","type downcase! "," getImageFileType ","oldsize < ","info [] * "," getImageBuffer ","newsize >= ","resize == ","pixw * ","neww * ","(send\n  (send\n    (send\n      (lvar :h) :*\n      (ivar :@k)) :*\n    (lvar :dpi)) :/\n  (ivar :@dpi)) round ","h * * / ","h * * ","(send\n  (send\n    (send\n      (lvar :w) :*\n      (ivar :@k)) :*\n    (lvar :dpi)) :/\n  (ivar :@dpi)) round ","w * * / ","w * * ","w / ","(send\n  (lvar :x) :-\n  (lvar :w)) < ","(send\n  (lvar :x) :+\n  (lvar :w)) > ","x + ","@rtl ! ","@page_break_trigger - ","(send\n  (lvar :y) :+\n  (lvar :h)) > ","@x - ","prev_x - "," checkPageBreak ","(send\n  (ivar :@t_margin) :+\n  (lvar :h)) > ","@t_margin + ","h * / ","w * / ","(send\n  (begin\n    (send\n      (lvar :w) :*\n      (lvar :pixh))) :/\n  (begin\n    (send\n      (lvar :h) :*\n      (lvar :pixw)))) < ","(send\n  (lvar :w) :*\n  (lvar :pixh)) / ","h > ","w > ","h <= ","w <= "," pixelsToUnits ","imsize [] ","[Image] Unable to get image width and height:  + "," getHTMLUnitToUnits * * "," getHTMLUnitToUnits * "," getHTMLUnitToUnits ","imsize == ","Missing image file:  + ","imsize nil? "," getimagesize ","file gsub ","file length == ","file length ","file nil? ","y == ","x == ","h == ","w == "," != ","ismask == ","tmpFile != ","type downcase ","(send\n  (lvar :h) :/\n  (float 2.0)) round ","@in_thead ! "," empty_string ! "," empty_string ","tmpname fsync ","tmpFile close ","Unable to get image width and height:  + ","Can't get image dimension. :  + ","Image file is not found. :  + ","File  exist? ","img format ","MiniMagick Image  open ","image quality= "," parsejpeg  [] "," send  [] "," parsepng  [] "," getImageBuffer  [] "," ImagePngAlpha  [] ","(send\n  (lvar :w / ) :/\n  (int 2)) round ","(send\n  (lvar :@page_break_trigger - ) :/\n  (int 2)) round ","(send\n  (lvar :w * / ) :/\n  (int 2)) round ","(send\n  (lvar : pixelsToUnits ) :/\n  (int 2)) round ","w /  / ","@page_break_trigger -  / ","w * /  / "," pixelsToUnits  / ","(send\n  (ivar :@w / ) :-\n  (begin\n    (send\n      (lvar :y) :+\n      (lvar :w / )))) * ","(send\n  (ivar :@@page_break_trigger - ) :-\n  (begin\n    (send\n      (lvar :y) :+\n      (lvar :@page_break_trigger - )))) * ","(send\n  (ivar :@w * / ) :-\n  (begin\n    (send\n      (lvar :y) :+\n      (lvar :w * / )))) * ","(send\n  (ivar :@ pixelsToUnits ) :-\n  (begin\n    (send\n      (lvar :y) :+\n      (lvar : pixelsToUnits )))) * ","@w /  - ","@@page_break_trigger -  - ","@w * /  - ","@ pixelsToUnits  - ","w /  * ","@page_break_trigger -  * ","w * /  * "," pixelsToUnits  * ","x -  * ","@w - -  * ","h *  * ","h * /  * ","(send\n  (send\n    (send\n      (ivar :@w) :+\n      (ivar :@l_margin)) :-\n    (ivar :@r_margin)) :-\n  (lvar :w)) /  * ","xMagick ImageList  new  * ","xMiniMagick Image  open  * ","@w - -  + ","(send\n  (send\n    (send\n      (ivar :@w) :+\n      (ivar :@l_margin)) :-\n    (ivar :@r_margin)) :-\n  (lvar :w)) /  + ","x -  + ","xMagick ImageList  new  + ","xMiniMagick Image  open  + ","@x -  - - ","@@w - -  - - ","@h *  - - ","@h * /  - - ","@ pixelsToUnits  - - ","@x -  - ","@@w - -  - ","@h *  - ","@h * /  - ","(send\n  (send\n    (send\n      (ivar :@x - ) :+\n      (ivar :@l_margin)) :-\n    (ivar :@r_margin)) :-\n  (lvar :x - )) / ","(send\n  (send\n    (send\n      (ivar :@@w - - ) :+\n      (ivar :@l_margin)) :-\n    (ivar :@r_margin)) :-\n  (lvar :@w - - )) / ","(send\n  (send\n    (send\n      (ivar :@h * ) :+\n      (ivar :@l_margin)) :-\n    (ivar :@r_margin)) :-\n  (lvar :h * )) / ","(send\n  (send\n    (send\n      (ivar :@h * / ) :+\n      (ivar :@l_margin)) :-\n    (ivar :@r_margin)) :-\n  (lvar :h * / )) / ","(send\n  (send\n    (send\n      (ivar :@ pixelsToUnits ) :+\n      (ivar :@l_margin)) :-\n    (ivar :@r_margin)) :-\n  (lvar : pixelsToUnits )) / ","@x -  + - - ","@@w - -  + - - ","@h *  + - - ","@h * /  + - - ","@ pixelsToUnits  + - - ","@x -  + - ","@@w - -  + - ","@h *  + - ","@h * /  + - ","@ pixelsToUnits  + - ","@x -  + ","@@w - -  + ","@h *  + ","@h * /  + ","@ pixelsToUnits  + "," parsejpeg  []= "," send  []= "," parsepng  []= "," getImageBuffer  []= "," ImagePngAlpha  []= ","Magick ImageList  new mask != ","MiniMagick Image  open mask != "," parsejpeg  == "," send  == "," parsepng  == "," getImageBuffer  == "," ImagePngAlpha  == ","Tempfile  new  delete ","Tempfile  new  path ","tmpname patw /  ","tmpname pat@page_break_trigger -  ","tmpname patw * /  ","tmpname pat pixelsToUnits  ","Tempfile  new  close ","Tempfile  new  print ","Magick ImageList  new  to_blob ","MiniMagick Image  open  to_blob ","Tempfile  new  binmode ","Tempfile  nex -  ","Tempfile  ne@w - -  ","Tempfile  neh *  ","Tempfile  neh * /  ","Tempfile  ne pixelsToUnits  ","Tempfile gsub   new ","Magick ImageList  new  format= ","MiniMagick Image  open  format= ","Magick ImageList  new  resize ","MiniMagick Image  open  resize ","Magick ImageList  nex -  ","Magick ImageList  ne@w - -  ","Magick ImageList  neh *  ","Magick ImageList  neh * /  ","Magick ImageList  ne pixelsToUnits  "," parsejpeg  ! "," send  ! "," parsepng  ! "," getImageBuffer  ! "," ImagePngAlpha  ! "," ImagePngAlpw / a "," ImagePngAlp@page_break_trigger - a "," ImagePngAlpw * / a "," ImagePngAlp pixelsToUnits a "," ImagePngAl getHTMLUnitToUnits * * a ","Unsupported image  getImageFileType :  + ","Unsupported image type downcase :  + "," imageToPNG  delete "," imageToPNG  path ","tmpFile patw /  ","tmpFile pat@page_break_trigger -  ","tmpFile patw * /  ","tmpFile pat pixelsToUnits  "," getImageFileType  == ","type downcase  == "," getImageFileType  downcase! ","type downcase  downcase! ","type dox - ncase! ","type do@w - - ncase! ","type doh * ncase! ","type doh * / ncase! ","type do pixelsToUnits ncase! ","info [] *  < "," parsejpeg  [] * "," send  [] * "," parsepng  [] * "," getImageBuffer  [] * "," ImagePngAlpha  [] * ","neww *  >= ","nex - size >= ","ne@w - - size >= ","neh * size >= ","neh * / size >= ","ne pixelsToUnits size >= ","pixx -  * ","pix@w - -  * ","pixh *  * ","pixh * /  * ","pix pixelsToUnits  * ","imsize []  * ","(send\n  (send\n    (send\n      (lvar :w) :*\n      (ivar :@k)) :*\n    (lvar :dpi)) :/\n  (ivar :@dpi)) round  * ","nex - x -  * ","ne@w - - @w - -  * ","neh * h *  * ","neh * / h * /  * ","ne pixelsToUnits  pixelsToUnits  * ","(send\n  (send\n    (send\n      (lvar :w / ) :*\n      (ivar :@k)) :*\n    (lvar :dpi)) :/\n  (ivar :@dpi)) round ","(send\n  (send\n    (send\n      (lvar :@page_break_trigger - ) :*\n      (ivar :@k)) :*\n    (lvar :dpi)) :/\n  (ivar :@dpi)) round ","(send\n  (send\n    (send\n      (lvar :w * / ) :*\n      (ivar :@k)) :*\n    (lvar :dpi)) :/\n  (ivar :@dpi)) round ","(send\n  (send\n    (send\n      (lvar : pixelsToUnits ) :*\n      (ivar :@k)) :*\n    (lvar :dpi)) :/\n  (ivar :@dpi)) round ","w /  * * / ","@page_break_trigger -  * * / ","w * /  * * / "," pixelsToUnits  * * / ","w /  * * ","@page_break_trigger -  * * ","w * /  * * "," pixelsToUnits  * * ","(send\n  (send\n    (send\n      (lvar :x - ) :*\n      (ivar :@k)) :*\n    (lvar :dpi)) :/\n  (ivar :@dpi)) round ","(send\n  (send\n    (send\n      (lvar :@w - - ) :*\n      (ivar :@k)) :*\n    (lvar :dpi)) :/\n  (ivar :@dpi)) round ","(send\n  (send\n    (send\n      (lvar :h * ) :*\n      (ivar :@k)) :*\n    (lvar :dpi)) :/\n  (ivar :@dpi)) round ","(send\n  (send\n    (send\n      (lvar :h * / ) :*\n      (ivar :@k)) :*\n    (lvar :dpi)) :/\n  (ivar :@dpi)) round ","x -  * * / ","@w - -  * * / ","h *  * * / ","h * /  * * / ","x -  * * ","@w - -  * * ","h *  * * ","h * /  * * ","x -  / ","@w - -  / ","h *  / ","h * /  / ","(send\n  (lvar :x) :-\n  (lvar :x - )) < ","(send\n  (lvar :x) :-\n  (lvar :@w - - )) < ","(send\n  (lvar :x) :-\n  (lvar :h * )) < ","(send\n  (lvar :x) :-\n  (lvar :h * / )) < ","(send\n  (lvar :x) :-\n  (lvar : pixelsToUnits )) < ","(send\n  (lvar :x) :+\n  (lvar :x - )) > ","(send\n  (lvar :x) :+\n  (lvar :@w - - )) > ","(send\n  (lvar :x) :+\n  (lvar :h * )) > ","(send\n  (lvar :x) :+\n  (lvar :h * / )) > ","(send\n  (lvar :x) :+\n  (lvar : pixelsToUnits )) > ","(send\n  (lvar :y) :+\n  (lvar :w / )) > ","(send\n  (lvar :y) :+\n  (lvar :@page_break_trigger - )) > ","(send\n  (lvar :y) :+\n  (lvar :w * / )) > ","(send\n  (lvar :y) :+\n  (lvar : pixelsToUnits )) > "," cw / eckPageBreak "," c@page_break_trigger - eckPageBreak "," cw * / eckPageBreak "," c pixelsToUnits eckPageBreak ","(send\n  (ivar :@t_margin) :+\n  (lvar :w / )) > ","(send\n  (ivar :@t_margin) :+\n  (lvar :@page_break_trigger - )) > ","(send\n  (ivar :@t_margin) :+\n  (lvar :w * / )) > ","(send\n  (ivar :@t_margin) :+\n  (lvar : pixelsToUnits )) > ","w /  * / ","@page_break_trigger -  * / ","w * /  * / "," pixelsToUnits  * / ","x -  * / ","@w - -  * / ","h *  * / ","h * /  * / ","(send\n  (begin\n    (send\n      (lvar :w) :*\n      (lvar :pixw / ))) :/\n  (begin\n    (send\n      (lvar :w / ) :*\n      (lvar :pixw)))) < ","(send\n  (begin\n    (send\n      (lvar :w) :*\n      (lvar :pix@page_break_trigger - ))) :/\n  (begin\n    (send\n      (lvar :@page_break_trigger - ) :*\n      (lvar :pixw)))) < ","(send\n  (begin\n    (send\n      (lvar :w) :*\n      (lvar :pixw * / ))) :/\n  (begin\n    (send\n      (lvar :w * / ) :*\n      (lvar :pixw)))) < ","(send\n  (begin\n    (send\n      (lvar :w) :*\n      (lvar :pix pixelsToUnits ))) :/\n  (begin\n    (send\n      (lvar : pixelsToUnits ) :*\n      (lvar :pixw)))) < ","(send\n  (begin\n    (send\n      (lvar :x - ) :*\n      (lvar :pixh))) :/\n  (begin\n    (send\n      (lvar :h) :*\n      (lvar :pixx - )))) < ","(send\n  (begin\n    (send\n      (lvar :@w - - ) :*\n      (lvar :pixh))) :/\n  (begin\n    (send\n      (lvar :h) :*\n      (lvar :pix@w - - )))) < ","(send\n  (begin\n    (send\n      (lvar :h * ) :*\n      (lvar :pixh))) :/\n  (begin\n    (send\n      (lvar :h) :*\n      (lvar :pixh * )))) < ","(send\n  (begin\n    (send\n      (lvar :h * / ) :*\n      (lvar :pixh))) :/\n  (begin\n    (send\n      (lvar :h) :*\n      (lvar :pixh * / )))) < ","(send\n  (begin\n    (send\n      (lvar : pixelsToUnits ) :*\n      (lvar :pixh))) :/\n  (begin\n    (send\n      (lvar :h) :*\n      (lvar :pix pixelsToUnits )))) < ","(send\n  (begin\n    (send\n      (lvar :w) :*\n      (lvar :imsize [] ))) :/\n  (begin\n    (send\n      (lvar :h) :*\n      (lvar :pixw)))) < ","(send\n  (begin\n    (send\n      (lvar :w) :*\n      (lvar :pixh))) :/\n  (begin\n    (send\n      (lvar :h) :*\n      (lvar :imsize [] )))) < ","(send\n  (lvar :w) :*\n  (lvar :pixw / )) / ","(send\n  (lvar :w) :*\n  (lvar :pix@page_break_trigger - )) / ","(send\n  (lvar :w) :*\n  (lvar :pixw * / )) / ","(send\n  (lvar :w) :*\n  (lvar :pix pixelsToUnits )) / ","(send\n  (lvar :x - ) :*\n  (lvar :pixh)) / ","(send\n  (lvar :@w - - ) :*\n  (lvar :pixh)) / ","(send\n  (lvar :h * ) :*\n  (lvar :pixh)) / ","(send\n  (lvar :h * / ) :*\n  (lvar :pixh)) / ","(send\n  (lvar : pixelsToUnits ) :*\n  (lvar :pixh)) / ","(send\n  (lvar :w) :*\n  (lvar :imsize [] )) / ","w /  > ","@page_break_trigger -  > ","w * /  > "," pixelsToUnits  > ","x -  > ","@w - -  > ","h *  > ","h * /  > ","w /  <= ","@page_break_trigger -  <= ","w * /  <= "," pixelsToUnits  <= ","x -  <= ","@w - -  <= ","h *  <= ","h * /  <= "," getimagesize  [] ","[Image] Unable to get image widtw /  and w / eigw / t:  + ","[Image] Unable to get image widt@page_break_trigger -  and @page_break_trigger - eig@page_break_trigger - t:  + ","[Image] Unable to get image widtw * /  and w * / eigw * / t:  + ","[Image] Unable to get image widt pixelsToUnits  and  pixelsToUnits eig pixelsToUnits t:  + ","[Image] Unable to get image x - idth and height:  + ","[Image] Unable to get image @w - - idth and height:  + ","[Image] Unable to get image h * idth and height:  + ","[Image] Unable to get image h * / idth and height:  + ","[Image] Unable to get image  pixelsToUnits idth and height:  + "," getimagesize  == ","Missing image file gsub :  + "," getimagesize  nil? ","file gsub  gsub ","file lengtw /  == ","file lengt@page_break_trigger -  == ","file lengtw * /  == ","file lengt pixelsToUnits  == ","file gsub  length == ","file lengtw /  ","file lengt@page_break_trigger -  ","file lengtw * /  ","file lengt pixelsToUnits  ","file gsub  length ","file gsub  nil? ","w /  == ","@page_break_trigger -  == ","w * /  == "," pixelsToUnits  == ","x -  == ","@w - -  == ","h *  == ","h * /  == "," imageToPNG  != "," getImageFileType  downcase ","type downcase  downcase ","type dox - ncase ","type do@w - - ncase ","type doh * ncase ","type doh * / ncase ","type do pixelsToUnits ncase ","(send\n  (lvar :w / ) :/\n  (float 2.0)) round ","(send\n  (lvar :@page_break_trigger - ) :/\n  (float 2.0)) round ","(send\n  (lvar :w * / ) :/\n  (float 2.0)) round ","(send\n  (lvar : pixelsToUnits ) :/\n  (float 2.0)) round ","@in_tw / ead ! ","@in_t@page_break_trigger - ead ! ","@in_tw * / ead ! ","@in_t pixelsToUnits ead ! ","Tempfile  new  fsync "," imageToPNG  close ","Unable to get image widtw /  and w / eigw / t:  + ","Unable to get image widt@page_break_trigger -  and @page_break_trigger - eig@page_break_trigger - t:  + ","Unable to get image widtw * /  and w * / eigw * / t:  + ","Unable to get image widt pixelsToUnits  and  pixelsToUnits eig pixelsToUnits t:  + ","Unable to get image x - idth and height:  + ","Unable to get image @w - - idth and height:  + ","Unable to get image h * idth and height:  + ","Unable to get image h * / idth and height:  + ","Unable to get image  pixelsToUnits idth and height:  + ","Image file gsub  is not found. :  + ","Magick ImageList  new  format ","MiniMagick Image  open  format "]}," RBPDF getImageFileType":{"type":"method","name":"getImageFileType","children":[],"call":["type == ","fileinfo sub downcase ","fileinfo sub ","fileinfo != ","File  extname ","imgfile nil? ","mime [] strip ","mime [] ","mime [] empty? ! ","mime [] empty? ","mime [] == ","mime length > ","mime length ","iminfo [] split ","iminfo [] ","iminfo [] empty? ! ","iminfo [] empty? ","iminfo is_a? ","fileinfo sub downcase  == ","File  extname  sub downcase ","File  extname  sub ","File  extname  != ","iminfo [] split  [] strip ","iminfo [] split  [] ","iminfo [] split  [] empty? ! ","iminfo [] split  [] empty? ","iminfo [] split  [] == ","iminfo [] split  length > ","iminfo [] split  length "]}," RBPDF unichr":{"type":"method","name":"unichr","children":[],"call":["(send\n  (int 240) :|\n  (send\n    (lvar :c) :>>\n    (int 18))) chr + + + ","(send\n  (int 128) :|\n  (send\n    (lvar :c) :&\n    (int 63))) chr ","128 | ","c & ","(send\n  (int 240) :|\n  (send\n    (lvar :c) :>>\n    (int 18))) chr + + ","(send\n  (int 128) :|\n  (send\n    (send\n      (lvar :c) :>>\n      (int 6)) :&\n    (int 63))) chr ","c >> & ","c >> ","(send\n  (int 240) :|\n  (send\n    (lvar :c) :>>\n    (int 18))) chr + ","(send\n  (int 128) :|\n  (send\n    (send\n      (lvar :c) :>>\n      (int 12)) :&\n    (int 63))) chr ","(send\n  (int 240) :|\n  (send\n    (lvar :c) :>>\n    (int 18))) chr ","240 | ","c <= ","(send\n  (int 224) :|\n  (send\n    (lvar :c) :>>\n    (int 12))) chr + + ","(send\n  (int 224) :|\n  (send\n    (lvar :c) :>>\n    (int 12))) chr + ","(send\n  (int 224) :|\n  (send\n    (lvar :c) :>>\n    (int 12))) chr ","224 | ","(send\n  (int 192) :|\n  (send\n    (lvar :c) :>>\n    (int 6))) chr + ","(send\n  (int 192) :|\n  (send\n    (lvar :c) :>>\n    (int 6))) chr ","192 | ","c chr ","@is_unicode ! "]}," RBPDF UTF8ArrayToUniArray":{"type":"method","name":"UTF8ArrayToUniArray","children":[],"call":["string << "," unichr ","ta each "]}," RBPDF UniArrSubString":{"type":"method","name":"UniArrSubString","children":[],"call":["string << ","uniarr [] ","start upto ","last - "]}," RBPDF UTF8ArrSubString":{"type":"method","name":"UTF8ArrSubString","children":[],"call":["string << "," unichr ","strarr [] ","start upto ","last - "]}," RBPDF getRemainingWidth":{"type":"method","name":"getRemainingWidth","children":[],"call":["@w - - ","@w - ","@x - "]}," RBPDF Write":{"type":"method","name":"Write","children":[],"call":[" UniArrSubString "," Cell ","tmpstr rstrip "," isRTLTextDir ","maxh == ","startx + ","startx - "," GetArrStringWidth "," utf8Bidi ","chars [] ","nb - ","l > ","w - ","2 * "," getRemainingWidth "," AcceptPageBreak ","@in_footer ! ","@y + > ","@y + ","i + ","sep + ","shy_char_left + + ","shy_char_left + ","startx + + ","startx - - ","sep + - ","firstblock ! ","i - ","@x >= ","@l_margin + ","@rtl ! ","@x <= ","@w - - ","@w - ","sep == ","(send\n  (lvar :l) :+\n  (lvar :tmp_shy_replacement_width)) > ","l + ","c == "," GetCharWidth ","@current_font [] == ","@current_font [] ","pc == "," unichr =~ "," unichr ","c != ","(send\n  (ivar :@y) :+\n  (ivar :@lasth)) > ","align == ","@y >= ","maxh > ","i < "," GetCharWidth > ","chrwidth > ","firstline ! ","@x - ","@y + - - ","@y + - ","chars size "," UTF8ArrayToUniArray "," UTF8StringToArray ","txt =~ ","@tmprtl == ","s =~ ","txt gsub ","txt length == ","txt length ","txt force_encoding ","txt respond_to? ","txt dup "," rtl_text_dir "," Error "," Ce GetArrStringWidth  GetArrStringWidth  ","tmpstr rstrip  rstrip "," UniArrSubString  rstrip ","tmptxt gsub tr rtxt gsub trip "," itxt gsub RTLTextDir ","txt gsub tartx + ","txt gsub tartx - ","chars [] hars [] "," UTF8StringToArray  [] ","chartxt gsub  [] ","chars size  - "," GetArrStringWidth  > "," getRemainingWidth  - ","@w - -  - ","@x -  - "," Achars [] chars [] eptPageBreak ","txt gsub ep + ","shy_char_ GetArrStringWidth eft + + ","shy_chars [] har_left + + ","txt gsub hy_char_left + + ","shy_char_ GetArrStringWidth eft + ","shy_chars [] har_left + ","txt gsub hy_char_left + ","txt gsub tartx + + ","txt gsub tartx - - ","txt gsub ep + - ","firstb GetArrStringWidth ock ! ","firstblochars [] k ! ","firtxt gsub tblock ! ","@ GetArrStringWidth _margin + ","@rt GetArrStringWidth  ! ","@ getRemainingWidth  - - ","@@w - -  - - ","@@x -  - - ","@ getRemainingWidth  - ","@@w - -  - ","@@x -  - ","txt gsub ep == ","(send\n  (lvar :l) :+\n  (lvar :tmp_shy_replacement_ getRemainingWidth idth)) > ","(send\n  (lvar :l) :+\n  (lvar :tmp_shy_replacement_@w - - idth)) > ","(send\n  (lvar :l) :+\n  (lvar :tmp_shy_replacement_@x - idth)) > ","(send\n  ( GetArrStringWidth var : GetArrStringWidth ) :+\n  ( GetArrStringWidth var :tmp_shy_rep GetArrStringWidth acement_width)) > ","(send\n  (lvar :l) :+\n  (lvar :tmp_shy_replachars [] ement_width)) > ","(send\n  (lvar :l) :+\n  (lvar :tmp_ GetCharWidth )) > ","(txt gsub end\n  (lvar :l) :+\n  (lvar :tmp_txt gsub hy_replacement_width)) > "," GetArrStringWidth  + ","chars []  == ","@chars [] urrent_font [] == ","@chars [] urrent_font [] ","pchars []  == "," unichars [] hr =~ "," unichars [] hr ","chars []  != ","(send\n  (ivar :@y) :+\n  (ivar :@ GetArrStringWidth asth)) > ","(txt gsub end\n  (ivar :@y) :+\n  (ivar :@latxt gsub th)) > ","a GetArrStringWidth ign == ","chr getRemainingWidth idth > ","chr@w - - idth > ","chr@x - idth > ","chars [] hrwidth > "," GetCharWidth  > ","first GetArrStringWidth ine ! ","firtxt gsub tline ! ","chars [] hars size "," UTF8StringToArray  size ","chartxt gsub  txt gsub ize ","txt dup  =~ ","@tmprt GetArrStringWidth  == ","txt gsub  =~ ","txt gtxt gsub ub ","txt dup  gsub ","txt  GetArrStringWidth ength == ","txt dup  length == ","txt  GetArrStringWidth ength ","txt dup  length ","txt forchars [] e_enchars [] oding ","txt dup  force_encoding ","txt retxt gsub pond_to? ","txt dup  respond_to? ","txt dup  dup "," rt GetArrStringWidth _text_dir "]}," RBPDF getStringHeight":{"type":"method","name":"getStringHeight","children":[],"call":["2 * ","(send\n  (ivar :@lasth) :-\n  (ivar :@font_size)) < ","@lasth - ","lineWidth / ","cellMargin < ","lineWidth <= "," empty_string ","cellMargin <= ","lines * ","@font_size * "," getNumLines ","lineWidth /  < ","lineWidth /  <= "," getNumLines  * "]}," RBPDF getNumLines":{"type":"method","name":"getNumLines","children":[],"call":["lastSeparator != ","sum + >= ","sum + "," unichr =~ "," unichr ","chars [] ","charsWidth [] ","i < ","chars length ","chars reverse! ","charsWidth reverse! "," GetArrStringWidth "," utf8Bidi "," UTF8StringToArray ","@font_size * ","w - ","2 * ","lineWidth / ","cellMargin < ","lineWidth <= "," empty_string ","cellMargin <= ","@w - - ","@w - ","@x - ","w <= ","chars [] == "," rtl_text_dir "," utf8Bidi  [] "," UTF8StringToArray  [] "," GetArrStringWidth  [] "," utf8Bidi Width [] "," UTF8StringToArray Width [] ","chars chars length  "," utf8Bidi  length "," UTF8StringToArray  length "," utf8Bidi  reverse! "," UTF8StringToArray  reverse! "," GetArrStringWidth  reverse! "," utf8Bidi Width reverse! "," UTF8StringToArray Width reverse! ","@w - -  - ","@x -  - ","lineWidth /  < ","lineWidth /  <= ","@@w - -  - - ","@@x -  - - ","@@w - -  - ","@@x -  - ","@w - -  <= ","@x -  <= "," utf8Bidi  [] == "," UTF8StringToArray  [] == "]}," RBPDF getBorderMode":{"type":"method","name":"getBorderMode","children":[],"call":["cborder << "," != ","border index ","@opencell ! ","border == "]}," RBPDF MultiCell":{"type":"method","name":"MultiCell","children":[],"call":[" setContentMark "," SetX ","x + "," setPage ","ln == "," SetY ","ln > "," SetRightMargin "," SetLeftMargin "," GetY ","(send\n  (lvar :ccode) :+\n  (str \"\\n\")) length ","ccode + "," setPageBuffer ","pstart + + + ","pstart + + ","pstart + ","pagebuff [] to_s ","pagebuff [] "," getPageBuffer ","@intmrk [] ","@footerpos [] ","@transfmrk [] ","@transfmrk [] nil? ! ","@transfmrk [] nil? ","fill == ","border != "," getCellCode ","(lvar :h) max ","currentY - ","cborder != ","@pagedim [] [] - ","@pagedim [] [] ","@pagedim [] ","@pagedim [] [] != ","@rtl ! ","page > "," getBorderMode ","@h - - ","@h - ","resth > ","page == ","end_page > "," checkPageBreak ","@page_break_trigger + ","skip <= ","tmpresth > ","end_page - ","@line_width / ","(send\n  (ivar :@lasth) :-\n  (ivar :@font_size)) < ","@lasth - "," Write "," writeHTML ","@c_margin < ","@w - - ","@w - ","@x - ","w <= "," empty_string "," GetX "," empty_string ! ","h - ","@page_break_trigger - ","y + > ","y + ","@in_footer ! ","@font_size * ","h is_a? ","w is_a? "," Error "," GetX  + "," SetRig(lvar :h) max tMargin "," SetRig@h - - tMargin "," SetRigcurrentY - tMargin ","(send\n  (lvar : getCellCode ) :+\n  (str \"\\n\")) length ","(send\n  (lvar :ccode) :+\n  (str \"\\n\")) lengt(lvar :h) max  ","(send\n  (lvar :ccode) :+\n  (str \"\\n\")) lengt@h - -  ","(send\n  (lvar :ccode) :+\n  (str \"\\n\")) lengtcurrentY -  "," getCellCode  + ","pagebuff []  + + + ","pagebuff []  + + ","pagebuff []  + "," getPageBuffer  [] to_s "," getPageBuffer  [] ","(lvar :(lvar :h) max ) max ","(lvar :@h - - ) max ","(lvar :currentY - ) max ","(lvar :h) ma GetX  "," GetY  - "," getBorderMode  != ","@(lvar :h) max  - - ","@@h - -  - - ","@currentY -  - - ","@(lvar :h) max  - ","@@h - -  - ","@currentY -  - ","rest(lvar :h) max  > ","rest@h - -  > ","restcurrentY -  > ","h -  > "," c(lvar :h) max eckPageBreak "," c@h - - eckPageBreak "," ccurrentY - eckPageBreak ","end_page -  <= ","tmprest(lvar :h) max  > ","tmprest@h - -  > ","tmprestcurrentY -  > ","tmph -  > ","@line_widt(lvar :h) max  / ","@line_widt@h - -  / ","@line_widtcurrentY -  / ","@line_@w - - idth / ","@line_@x - idth / ","(send\n  (ivar :@last(lvar :h) max ) :-\n  (ivar :@font_size)) < ","(send\n  (ivar :@last@h - - ) :-\n  (ivar :@font_size)) < ","(send\n  (ivar :@lastcurrentY - ) :-\n  (ivar :@font_size)) < ","(send\n  (ivar :@font_size * ) :-\n  (ivar :@font_size)) < ","@last(lvar :h) max  - ","@last@h - -  - ","@lastcurrentY -  - ","@font_size *  - "," @w - - riteHTML "," @x - riteHTML ","@line_width /  < ","@@w - -  - - ","@@x -  - - ","@@w - -  - ","@@x -  - ","@ GetX  - ","@w - -  <= ","@x -  <= "," empt GetY _string "," empt GetY _string ! ","(lvar :h) max  - ","@h - -  - ","currentY -  - "," GetY  + > "," GetY  + ","(lvar :h) max  is_a? ","@h - -  is_a? ","currentY -  is_a? ","@w - -  is_a? ","@x -  is_a? "]}," RBPDF getCellCode":{"type":"method","name":"getCellCode","children":[],"call":["gstyles + "," + + + + + + + + + + + + "," + + + + + + + + + + + "," + + + + + + + + + + "," + + + + + + + + + "," + + + + + + + + "," + + + + + + + "," + + + + + + "," + + + + + "," + + + + "," + + + "," + + "," + ","@w - ","ln == ","y + ","ln to_i > ","ln to_i ","rs << ","align == ","(or\n  (begin\n    (send\n      (send\n        (ivar :@current_font) :[]\n        (str \"type\")) :==\n      (str \"TrueTypeUnicode\")))\n  (begin\n    (send\n      (send\n        (ivar :@current_font) :[]\n        (str \"type\")) :==\n      (str \"cidfont0\")))) ! ","@current_font [] == ","@current_font [] ","stretch > "," Link ","(send\n  (lvar :h) :-\n  (ivar :@font_size)) / ","h - ","link != ","link is_a? ","link empty? ! ","link empty? ","s << ","  + "," dooverlinew "," dolinethroughw "," dounderlinew "," sprintf ","xdk + ","xshift * "," escape "," arrUTF8ToUTF16BE "," GetArrStringWidth ","(send\n  (lvar :uniarr) :select) length * ","(send\n  (lvar :uniarr) :select) length ","item == ","uniarr select ","spacewidth != ","(send\n  (lvar :uk) :%\n  (int 2)) == ","uk % ","uniblock each_with_index ","(send\n  (send\n    (lvar :w) :-\n    (lvar :txwidth)) :-\n  (begin\n    (send\n      (int 2) :*\n      (ivar :@c_margin)))) / ","w - - ","2 * ","w - ","(send\n  (send\n    (ivar :@h) :-\n    (lvar :basefonty)) :+\n  (begin\n    (send\n      (float 0.2) :*\n      (ivar :@font_size)))) * ","@h - + ","0.2 * ","@h - ","uniblock nil? ! ","uniblock nil? ","(send\n  (ivar :@h) :-\n  (lvar :basefonty)) * ","xdx * ","@x + ","@x - - ","@x - ","(send\n  (lvar :w) :-\n  (lvar :width)) / ","txt2 gsub ","(send\n  (begin\n    (send\n      (send\n        (lvar :w) :-\n        (lvar :width)) :-\n      (begin\n        (send\n          (int 2) :*\n          (ivar :@c_margin))))) :/\n  (begin\n    (if\n      (lvar :ns)\n      (lvar :ns)\n      (int 1)))) * ","(send\n  (send\n    (lvar :w) :-\n    (lvar :width)) :-\n  (begin\n    (send\n      (int 2) :*\n      (ivar :@c_margin)))) / ",")  + + ",")  + ","0 chr + ","32 chr ","0 chr ","-1000 * / / ","-1000 * / ","-1000 * "," GetStringWidth ","txt gsub ","ns > ","txt count ","q  + + ","q  + ","stretch == ","ratio * ","(send\n  (begin\n    (send\n      (send\n        (lvar :w) :-\n        (lvar :width)) :-\n      (begin\n        (send\n          (int 2) :*\n          (ivar :@c_margin))))) :*\n  (ivar :@k)) / ","txt_length > ","(send\n  (send\n    (lvar :w) :-\n    (lvar :width)) :-\n  (begin\n    (send\n      (int 2) :*\n      (ivar :@c_margin)))) * "," GetNumChars - "," GetNumChars ","(send\n  (lvar :stretch) :%\n  (int 2)) == ","stretch % ","ratio > ","ratio < ","(send\n  (lvar :w) :-\n  (begin\n    (send\n      (int 2) :*\n      (ivar :@c_margin)))) / ","width <= ","uniblock [] push ","unicode [] ","uniblock [] ","unicode []= ","uniblock []= ","topchar inclue? ","i - ","topsym include? ","1 upto ","numchars - ","unicode length ","@@k_thai_topchars == "," utf8Bidi "," UTF8StringToArray "," UTF8ToLatin1 ","txt != ","(send\n  (ivar :@h) :-\n  (begin\n    (send\n      (lvar :y) :+\n      (lvar :h)))) * ","(send\n  (send\n    (lvar :x) :+\n    (lvar :w)) :+\n  (lvar :lm)) * ","x + + ","x + ","(send\n  (lvar :x) :-\n  (lvar :lm)) * ","x - ","(send\n  (send\n    (lvar :x) :-\n    (lvar :w)) :+\n  (lvar :lm)) * ","x - + ","border include? ","(send\n  (ivar :@h) :-\n  (begin\n    (send\n      (send\n        (lvar :y) :+\n        (lvar :h)) :+\n      (lvar :lm)))) * ","y + + ","(send\n  (send\n    (ivar :@h) :-\n    (lvar :y)) :+\n  (lvar :lm)) * ","(send\n  (lvar :x) :+\n  (lvar :w)) * ","x * ","(send\n  (ivar :@h) :-\n  (lvar :y)) * ","(send\n  (lvar :x) :-\n  (lvar :w)) * ","@line_width / ","border is_a? ","h -@ * ","h -@ ","w * ","@x * ","(send\n  (ivar :@x) :-\n  (lvar :w)) * ","border to_i == ","border to_i ","fill == ","@w - - ","w <= "," empty_string ","(send\n  (send\n    (lvar :h) :+\n    (ivar :@font_ascent)) :-\n  (ivar :@font_descent)) / ","h + - ","h + ","y + - - ","y + - ","h / ","(send\n  (send\n    (lvar :h) :+\n    (ivar :@font_ascent)) :+\n  (ivar :@font_descent)) / ","h + + ","@font_ascent + + ","@font_ascent + ","h - - ","(send\n  (send\n    (lvar :h) :-\n    (ivar :@font_ascent)) :-\n  (ivar :@font_descent)) / ","h - - - ","h < ","@font_size * ","ignore_min_height ! "," removeSHY ","txt nil? "," rtl_text_dir ","link >= "," + + + + + + + + + + + +  + ","gs(send\n  (send\n    (ivar :@h) :-\n    (lvar :basefonty)) :+\n  (begin\n    (send\n      (float 0.2) :*\n      (ivar :@font_size)))) * les + ","@@w - -  - ","@x -  - ","gstyles +  << ","(or\n  (begin\n    (send\n      (send\n        (ivar :@current_font) :[]\n        (str \"(send\n  (send\n    (ivar :@h) :-\n    (lvar :basefonty)) :+\n  (begin\n    (send\n      (float 0.2) :*\n      (ivar :@font_size)))) * pe\")) :==\n      (str \"TrueTypeUnicode\")))\n  (begin\n    (send\n      (send\n        (ivar :@current_font) :[]\n        (str \"(send\n  (send\n    (ivar :@h) :-\n    (lvar :basefonty)) :+\n  (begin\n    (send\n      (float 0.2) :*\n      (ivar :@font_size)))) * pe\")) :==\n      (str \"cidfont0\")))) ! ","link emp(send\n  (send\n    (ivar :@h) :-\n    (lvar :basefonty)) :+\n  (begin\n    (send\n      (float 0.2) :*\n      (ivar :@font_size)))) * ? ! ","link emp(send\n  (send\n    (ivar :@h) :-\n    (lvar :basefonty)) :+\n  (begin\n    (send\n      (float 0.2) :*\n      (ivar :@font_size)))) * ? "," dooverline@w - -  "," dooverlinex -  "," dolinethrough@w - -  "," dolinethroughx -  "," dounderline@w - -  "," dounderlinex -  ","xdx *  + ","spacew -  != ","space GetStringWidth  != ","(send\n  (begin\n    (send\n      (send\n        (lvar :w) :-\n        (lvar :width)) :-\n      (begin\n        (send\n          (int 2) :*\n          (ivar :@c_margin))))) :/\n  (begin\n    (if\n      (lvar :ns)\n      (lvar :ns)\n      (int 1)))) *  != ","-1000 * / /  != ","space@w - - idth != ","spacex - idth != ","uniblock each_@w - - ith_index ","uniblock each_x - ith_index ","(send\n  (send\n    (lvar :w) :-\n    (lvar :txw - )) :-\n  (begin\n    (send\n      (int 2) :*\n      (ivar :@c_margin)))) / ","(send\n  (send\n    (lvar :w) :-\n    (lvar :tx GetStringWidth )) :-\n  (begin\n    (send\n      (int 2) :*\n      (ivar :@c_margin)))) / ","(send\n  (send\n    (lvar :w) :-\n    (lvar : GetStringWidth )) :-\n  (begin\n    (send\n      (int 2) :*\n      (ivar :@c_margin)))) / ","(send\n  (send\n    (lvar :@w - - ) :-\n    (lvar :tx@w - - idth)) :-\n  (begin\n    (send\n      (int 2) :*\n      (ivar :@c_margin)))) / ","(send\n  (send\n    (lvar :x - ) :-\n    (lvar :txx - idth)) :-\n  (begin\n    (send\n      (int 2) :*\n      (ivar :@c_margin)))) / ","@w - -  - - ","x -  - - ","@w - -  - ","x -  - ","(send\n  (send\n    (ivar :@h) :-\n    (lvar :basefon(send\n  (send\n    (ivar :@h) :-\n    (lvar :basefonty)) :+\n  (begin\n    (send\n      (float 0.2) :*\n      (ivar :@font_size)))) * )) :+\n  (begin\n    (send\n      (float 0.2) :*\n      (ivar :@font_size)))) * ","(send\n  (send\n    (ivar :@h) :-\n    (lvar :y + )) :+\n  (begin\n    (send\n      (float 0.2) :*\n      (ivar :@font_size)))) * ","(send\n  (send\n    (ivar :@h) :-\n    (lvar :y + - - )) :+\n  (begin\n    (send\n      (float 0.2) :*\n      (ivar :@font_size)))) * ","(send\n  (send\n    (ivar :@h) :-\n    (lvar :y + + )) :+\n  (begin\n    (send\n      (float 0.2) :*\n      (ivar :@font_size)))) * ","(send\n  (ivar :@h) :-\n  (lvar :basefon(send\n  (send\n    (ivar :@h) :-\n    (lvar :basefonty)) :+\n  (begin\n    (send\n      (float 0.2) :*\n      (ivar :@font_size)))) * )) * ","(send\n  (ivar :@h) :-\n  (lvar :y + )) * ","(send\n  (ivar :@h) :-\n  (lvar :y + - - )) * ","(send\n  (ivar :@h) :-\n  (lvar :y + + )) * ","@x +  * ","@x - -  * ","xw - -  * ","x(send\n  (lvar :w) :-\n  (lvar :width)) /  * ","@w -  + ","@w -  - - ","@w -  - ","(send\n  (lvar :w) :-\n  (lvar :w - )) / ","(send\n  (lvar :w) :-\n  (lvar : GetStringWidth )) / ","(send\n  (lvar :@w - - ) :-\n  (lvar :@w - - idth)) / ","(send\n  (lvar :x - ) :-\n  (lvar :x - idth)) / ","txt2 gsub  gsub "," escape  gsub "," arrUTF8ToUTF16BE  gsub "," UTF8ToLatin1  gsub "," removeSHY 2 gsub ","(send\n  (begin\n    (send\n      (send\n        (lvar :w) :-\n        (lvar :w - )) :-\n      (begin\n        (send\n          (int 2) :*\n          (ivar :@c_margin))))) :/\n  (begin\n    (if\n      (lvar :ns)\n      (lvar :ns)\n      (int 1)))) * ","(send\n  (begin\n    (send\n      (send\n        (lvar :w) :-\n        (lvar : GetStringWidth )) :-\n      (begin\n        (send\n          (int 2) :*\n          (ivar :@c_margin))))) :/\n  (begin\n    (if\n      (lvar :ns)\n      (lvar :ns)\n      (int 1)))) * ","(send\n  (begin\n    (send\n      (send\n        (lvar :w) :-\n        (lvar :width)) :-\n      (begin\n        (send\n          (int 2) :*\n          (ivar :@c_margin))))) :/\n  (begin\n    (if\n      (lvar :txt count )\n      (lvar :txt count )\n      (int 1)))) * ","(send\n  (begin\n    (send\n      (send\n        (lvar :@w - - ) :-\n        (lvar :@w - - idth)) :-\n      (begin\n        (send\n          (int 2) :*\n          (ivar :@c_margin))))) :/\n  (begin\n    (if\n      (lvar :ns)\n      (lvar :ns)\n      (int 1)))) * ","(send\n  (begin\n    (send\n      (send\n        (lvar :x - ) :-\n        (lvar :x - idth)) :-\n      (begin\n        (send\n          (int 2) :*\n          (ivar :@c_margin))))) :/\n  (begin\n    (if\n      (lvar :ns)\n      (lvar :ns)\n      (int 1)))) * ","(send\n  (send\n    (lvar :w) :-\n    (lvar :w - )) :-\n  (begin\n    (send\n      (int 2) :*\n      (ivar :@c_margin)))) / ","(send\n  (send\n    (lvar :@w - - ) :-\n    (lvar :@w - - idth)) :-\n  (begin\n    (send\n      (int 2) :*\n      (ivar :@c_margin)))) / ","(send\n  (send\n    (lvar :x - ) :-\n    (lvar :x - idth)) :-\n  (begin\n    (send\n      (int 2) :*\n      (ivar :@c_margin)))) / "," removeSHY  gsub ","txt count  > "," removeSHY  count ","(send\n  (lvar :w) :-\n  (begin\n    (send\n      (int 2) :*\n      (ivar :@c_margin)))) /  * ","(send\n  (begin\n    (send\n      (send\n        (lvar :w) :-\n        (lvar :w - )) :-\n      (begin\n        (send\n          (int 2) :*\n          (ivar :@c_margin))))) :*\n  (ivar :@k)) / ","(send\n  (begin\n    (send\n      (send\n        (lvar :w) :-\n        (lvar : GetStringWidth )) :-\n      (begin\n        (send\n          (int 2) :*\n          (ivar :@c_margin))))) :*\n  (ivar :@k)) / ","(send\n  (begin\n    (send\n      (send\n        (lvar :@w - - ) :-\n        (lvar :@w - - idth)) :-\n      (begin\n        (send\n          (int 2) :*\n          (ivar :@c_margin))))) :*\n  (ivar :@k)) / ","(send\n  (begin\n    (send\n      (send\n        (lvar :x - ) :-\n        (lvar :x - idth)) :-\n      (begin\n        (send\n          (int 2) :*\n          (ivar :@c_margin))))) :*\n  (ivar :@k)) / "," GetNumChars -  > "," removeSHY _length > ","(send\n  (send\n    (lvar :w) :-\n    (lvar :w - )) :-\n  (begin\n    (send\n      (int 2) :*\n      (ivar :@c_margin)))) * ","(send\n  (send\n    (lvar :w) :-\n    (lvar : GetStringWidth )) :-\n  (begin\n    (send\n      (int 2) :*\n      (ivar :@c_margin)))) * ","(send\n  (send\n    (lvar :@w - - ) :-\n    (lvar :@w - - idth)) :-\n  (begin\n    (send\n      (int 2) :*\n      (ivar :@c_margin)))) * ","(send\n  (send\n    (lvar :x - ) :-\n    (lvar :x - idth)) :-\n  (begin\n    (send\n      (int 2) :*\n      (ivar :@c_margin)))) * "," GetNumChagstyles +  - "," GetNumChagstyles +  ","(send\n  (lvar :w) :-\n  (begin\n    (send\n      (int 2) :*\n      (ivar :@c_margin)))) /  > ","(send\n  (lvar :w) :-\n  (begin\n    (send\n      (int 2) :*\n      (ivar :@c_margin)))) /  < ","(send\n  (lvar :@w - - ) :-\n  (begin\n    (send\n      (int 2) :*\n      (ivar :@c_margin)))) / ","(send\n  (lvar :x - ) :-\n  (begin\n    (send\n      (int 2) :*\n      (ivar :@c_margin)))) / ","w -  <= "," GetStringWidth  <= ","@w - - idth <= ","x - idth <= "," utf8Bidi  [] "," UTF8StringToArray  [] "," utf8Bidi  []= "," UTF8StringToArray  []= ","numchagstyles +  - ","unicode length  - "," utf8Bidi  length "," UTF8StringToArray  length ","@@k_thai_topchagstyles +  == "," removeSHY  != ","(send\n  (send\n    (lvar :x) :+\n    (lvar :w)) :+\n  (lvar :@line_width / )) * ","(send\n  (send\n    (lvar :x) :+\n    (lvar :@w - - )) :+\n  (lvar :lm)) * ","(send\n  (send\n    (lvar :x) :+\n    (lvar :x - )) :+\n  (lvar :lm)) * ","(send\n  (lvar :x) :-\n  (lvar :@line_width / )) * ","(send\n  (send\n    (lvar :x) :-\n    (lvar :w)) :+\n  (lvar :@line_width / )) * ","(send\n  (send\n    (lvar :x) :-\n    (lvar :@w - - )) :+\n  (lvar :lm)) * ","(send\n  (send\n    (lvar :x) :-\n    (lvar :x - )) :+\n  (lvar :lm)) * ","(send\n  (ivar :@h) :-\n  (begin\n    (send\n      (send\n        (lvar :y) :+\n        (lvar :h)) :+\n      (lvar :@line_width / )))) * ","(send\n  (send\n    (ivar :@h) :-\n    (lvar :y)) :+\n  (lvar :@line_width / )) * ","(send\n  (lvar :x) :+\n  (lvar :@w - - )) * ","(send\n  (lvar :x) :+\n  (lvar :x - )) * ","(send\n  (lvar :x) :-\n  (lvar :@w - - )) * ","(send\n  (lvar :x) :-\n  (lvar :x - )) * ","@line_w -  / ","@line_ GetStringWidth  / ","@line_@w - - idth / ","@line_x - idth / ","@w - -  * ","x -  * ","@w -  * ","(send\n  (ivar :@w - ) :-\n  (lvar :w)) * ","(send\n  (ivar :@x) :-\n  (lvar :@w - - )) * ","(send\n  (ivar :@x) :-\n  (lvar :x - )) * ","@@w - -  - - ","@x -  - - ","@w - -  <= ","x -  <= "," emp(send\n  (send\n    (ivar :@h) :-\n    (lvar :basefonty)) :+\n  (begin\n    (send\n      (float 0.2) :*\n      (ivar :@font_size)))) * _string "," removeSHY  nil? "]}," RBPDF removeSHY":{"type":"method","name":"removeSHY","children":[],"call":["txt force_encoding ","txt respond_to? ","txt gsub! ","@is_unicode ! ","txt dup ","txt dup  force_encoding ","txt dup  respond_to? ","txt dup  gsub! ","txt dup  dup "]}," RBPDF Cell":{"type":"method","name":"Cell","children":[],"call":[" out "," getCellCode "," checkPageBreak ","h < ","@font_size * ","ignore_min_height ! "," Error "]}," RBPDF BreakThePage?":{"type":"method","name":"BreakThePage?","children":[],"call":[" AcceptPageBreak ","@in_footer ! ","(send\n  (ivar :@y) :+\n  (lvar :h)) > ","@y + "," warn "]}," RBPDF checkPageBreak":{"type":"method","name":"checkPageBreak","children":[],"call":["current_page != ","x + ","@pagedim [] [] - ","@pagedim [] [] ","@pagedim [] ","@pagedim [] [] != ","x - ","@page - "," AddPage "," AcceptPageBreak ","@in_footer ! ","y + > ","y + "," empty_string "]}," RBPDF AcceptPageBreak":{"type":"method","name":"AcceptPageBreak","children":[],"call":[]}," RBPDF Text":{"type":"method","name":"Text","children":[],"call":[" Cell "," SetXY "," setTextRenderingMode ","fstroke == "]}," RBPDF putEmbeddedFiles":{"type":"method","name":"putEmbeddedFiles","children":[],"call":[" out ","out << ","  + "," getstream ","filedata [] ","<</Type /EmbeddedFile + + + + ","<</Type /EmbeddedFile + + + ","data length to_s ","data length ","<</Type /EmbeddedFile + + ","<</Type /EmbeddedFile + ","filedata [] to_s + ","filedata [] to_s ","@offsets []= ","Zlib Deflate  deflate ","f read "," open ","@embeddedfiles each "," filedata [] to_s +  ","filedata [] to_s +  << ","fileZlib Deflate  deflate  [] ","filef read  [] ","Zlib Deflate  deflate  length to_s ","f read  length to_s ","Zlib Deflate  deflate  length ","f read  length ","fileZlib Deflate  deflate  [] to_s + ","filef read  [] to_s + ","fileZlib Deflate  deflate  [] to_s ","filef read  [] to_s "]}," RBPDF Annotation":{"type":"method","name":"Annotation","children":[],"call":[" Image ","opt [] [] ","opt [] ","File  exist? ","@embeddedfiles []= ","@embeddedfiles length + ","@embeddedfiles length ","File  basename ","@embeddedfiles [] nil? ","@embeddedfiles [] "," empty_string ! "," empty_string ","opt [] == ","@page_annots [] push ","@page_annots [] ","@page <= ","@h - ","y / ","x / ","(send\n  (lvar :y) :-\n  (send\n    (array\n      (lvar :y1)\n      (lvar :y2)\n      (lvar :y3)\n      (lvar :y4)) :min)) / ","y - ","(lvar :y1) min ","(send\n  (send\n    (array\n      (lvar :x1)\n      (lvar :x2)\n      (lvar :x3)\n      (lvar :x4)) :max) :-\n  (lvar :x)) / ","(lvar :x1) max - ","(lvar :x1) max ","(lvar :y1) max ","(lvar :x1) min ","(send\n  (send\n    (lvar :ctm) :[]\n    (str \"b\")) :*\n  (lvar :xt)) + + ","ctm [] ","(send\n  (send\n    (lvar :ctm) :[]\n    (str \"b\")) :*\n  (lvar :xt)) + ","ctm [] * ","(send\n  (send\n    (lvar :ctm) :[]\n    (str \"a\")) :*\n  (lvar :xt)) + + ","(send\n  (send\n    (lvar :ctm) :[]\n    (str \"a\")) :*\n  (lvar :xt)) + ","x + ","h * ","w * ","(send\n  (ivar :@h) :-\n  (lvar :y)) * ","x * ","ctm [] nil? ! ","ctm [] nil? ","@transfmatrix [] [] ","@transfmatrix [] ","maxid downto ","@transfmatrix [] length - ","@transfmatrix [] length ","@transfmatrix_key downto ","@transfmatrix nil? ! ","@transfmatrix nil? ","y == ","x == ","File  ex / ist? ","File  e(lvar :x1) min ist? ","File  ex * ist? ","@embeddedfiles lengt(send\n  (lvar :y) :-\n  (send\n    (array\n      (lvar :y1)\n      (lvar :y2)\n      (lvar :y3)\n      (lvar :y4)) :min)) /  + ","@embeddedfiles length *  + ","@embeddedfiles lengt(send\n  (lvar :y) :-\n  (send\n    (array\n      (lvar :y1)\n      (lvar :y2)\n      (lvar :y3)\n      (lvar :y4)) :min)) /  ","@embeddedfiles length *  "," empt@h - _string ! "," empt(lvar :y1) max _string ! "," empt(send\n  (ivar :@h) :-\n  (lvar :y)) * _string ! "," empt@h - _string "," empt(lvar :y1) max _string "," empt(send\n  (ivar :@h) :-\n  (lvar :y)) * _string ","@page_annots [] pus(send\n  (lvar :y) :-\n  (send\n    (array\n      (lvar :y1)\n      (lvar :y2)\n      (lvar :y3)\n      (lvar :y4)) :min)) /  ","@page_annots [] push *  ","@(send\n  (lvar :y) :-\n  (send\n    (array\n      (lvar :y1)\n      (lvar :y2)\n      (lvar :y3)\n      (lvar :y4)) :min)) /  - ","@h *  - ","@h -  / ","(lvar :y1) max  / ","(send\n  (ivar :@h) :-\n  (lvar :y)) *  / ","x /  / ","(lvar :x1) min  / ","x *  / ","(send\n  (lvar :@h - ) :-\n  (send\n    (arra@h - \n      (lvar :@h - 1)\n      (lvar :@h - 2)\n      (lvar :@h - 3)\n      (lvar :@h - 4)) :min)) / ","(send\n  (lvar :(lvar :y1) max ) :-\n  (send\n    (arra(lvar :y1) max \n      (lvar :(lvar :y1) max 1)\n      (lvar :(lvar :y1) max 2)\n      (lvar :(lvar :y1) max 3)\n      (lvar :(lvar :y1) max 4)) :min)) / ","(send\n  (lvar :(send\n  (ivar :@h) :-\n  (lvar :y)) * ) :-\n  (send\n    (arra(send\n  (ivar :@h) :-\n  (lvar :y)) * \n      (lvar :(send\n  (ivar :@h) :-\n  (lvar :y)) * 1)\n      (lvar :(send\n  (ivar :@h) :-\n  (lvar :y)) * 2)\n      (lvar :(send\n  (ivar :@h) :-\n  (lvar :y)) * 3)\n      (lvar :(send\n  (ivar :@h) :-\n  (lvar :y)) * 4)) :min)) / ","(send\n  (lvar :y) :-\n  (send\n    (array\n      (lvar :y1)\n      (lvar :y2)\n      (lvar :y3)\n      (lvar :(send\n  (send\n    (lvar :ctm) :[]\n    (str \"b\")) :*\n  (lvar :xt)) + + )) :min)) / ","(send\n  (lvar :y) :-\n  (send\n    (array\n      (lvar :y1)\n      (lvar :y2)\n      (lvar :(send\n  (send\n    (lvar :ctm) :[]\n    (str \"b\")) :*\n  (lvar :xt)) + + )\n      (lvar :y4)) :min)) / ","(send\n  (lvar :y) :-\n  (send\n    (array\n      (lvar :y1)\n      (lvar :(send\n  (send\n    (lvar :ctm) :[]\n    (str \"b\")) :*\n  (lvar :xt)) + + )\n      (lvar :y3)\n      (lvar :y4)) :min)) / ","(send\n  (lvar :y) :-\n  (send\n    (array\n      (lvar :(send\n  (send\n    (lvar :ctm) :[]\n    (str \"b\")) :*\n  (lvar :xt)) + + )\n      (lvar :y2)\n      (lvar :y3)\n      (lvar :y4)) :min)) / ","@h -  - ","(lvar :y1) max  - ","(send\n  (ivar :@h) :-\n  (lvar :y)) *  - ","(lvar :@h - 1) min ","(lvar :(lvar :y1) max 1) min ","(lvar :(send\n  (ivar :@h) :-\n  (lvar :y)) * 1) min ","(lvar :(send\n  (send\n    (lvar :ctm) :[]\n    (str \"b\")) :*\n  (lvar :xt)) + + ) min ","(send\n  (send\n    (arra@h - \n      (lvar :x1)\n      (lvar :x2)\n      (lvar :x3)\n      (lvar :x4)) :max) :-\n  (lvar :x)) / ","(send\n  (send\n    (arra(lvar :y1) max \n      (lvar :x1)\n      (lvar :x2)\n      (lvar :x3)\n      (lvar :x4)) :max) :-\n  (lvar :x)) / ","(send\n  (send\n    (arra(send\n  (ivar :@h) :-\n  (lvar :y)) * \n      (lvar :x1)\n      (lvar :x2)\n      (lvar :x3)\n      (lvar :x4)) :max) :-\n  (lvar :x)) / ","(send\n  (send\n    (array\n      (lvar :x / 1)\n      (lvar :x / 2)\n      (lvar :x / 3)\n      (lvar :x / 4)) :max / ) :-\n  (lvar :x / )) / ","(send\n  (send\n    (array\n      (lvar :(lvar :x1) min 1)\n      (lvar :(lvar :x1) min 2)\n      (lvar :(lvar :x1) min 3)\n      (lvar :(lvar :x1) min 4)) :ma(lvar :x1) min ) :-\n  (lvar :(lvar :x1) min )) / ","(send\n  (send\n    (array\n      (lvar :x * 1)\n      (lvar :x * 2)\n      (lvar :x * 3)\n      (lvar :x * 4)) :max * ) :-\n  (lvar :x * )) / ","(send\n  (send\n    (array\n      (lvar :x1)\n      (lvar :x2)\n      (lvar :x3)\n      (lvar :(send\n  (send\n    (lvar :ctm) :[]\n    (str \"a\")) :*\n  (lvar :xt)) + + )) :max) :-\n  (lvar :x)) / ","(send\n  (send\n    (array\n      (lvar :x1)\n      (lvar :x2)\n      (lvar :(send\n  (send\n    (lvar :ctm) :[]\n    (str \"a\")) :*\n  (lvar :xt)) + + )\n      (lvar :x4)) :max) :-\n  (lvar :x)) / ","(send\n  (send\n    (array\n      (lvar :x1)\n      (lvar :(send\n  (send\n    (lvar :ctm) :[]\n    (str \"a\")) :*\n  (lvar :xt)) + + )\n      (lvar :x3)\n      (lvar :x4)) :max) :-\n  (lvar :x)) / ","(send\n  (send\n    (array\n      (lvar :(send\n  (send\n    (lvar :ctm) :[]\n    (str \"a\")) :*\n  (lvar :xt)) + + )\n      (lvar :x2)\n      (lvar :x3)\n      (lvar :x4)) :max) :-\n  (lvar :x)) / ","(lvar :x / 1) max /  - ","(lvar :(lvar :x1) min 1) ma(lvar :x1) min  - ","(lvar :x * 1) max *  - ","(lvar :(send\n  (send\n    (lvar :ctm) :[]\n    (str \"a\")) :*\n  (lvar :xt)) + + ) max - ","(lvar :x / 1) max /  ","(lvar :(lvar :x1) min 1) ma(lvar :x1) min  ","(lvar :x * 1) max *  ","(lvar :(send\n  (send\n    (lvar :ctm) :[]\n    (str \"a\")) :*\n  (lvar :xt)) + + ) max ","(lvar :@h - 1) max ","(lvar :(lvar :y1) max 1) max ","(lvar :(send\n  (ivar :@h) :-\n  (lvar :y)) * 1) max ","(lvar :y1) max /  ","(lvar :y1) ma(lvar :x1) min  ","(lvar :y1) max *  ","(lvar :(send\n  (send\n    (lvar :ctm) :[]\n    (str \"b\")) :*\n  (lvar :xt)) + + ) max ","(lvar :x / 1) min ","(lvar :(lvar :x1) min 1) min ","(lvar :x * 1) min ","(lvar :(send\n  (send\n    (lvar :ctm) :[]\n    (str \"a\")) :*\n  (lvar :xt)) + + ) min ","(send\n  (send\n    (lvar :ctm) :[]\n    (str \"b\")) :*\n  (lvar :x / t)) + + ","(send\n  (send\n    (lvar :ctm) :[]\n    (str \"b\")) :*\n  (lvar :(lvar :x1) min t)) + + ","(send\n  (send\n    (lvar :ctm) :[]\n    (str \"b\")) :*\n  (lvar :x * t)) + + ","(send\n  (send\n    (lvar :ctm) :[]\n    (str \"b\")) :*\n  (lvar :x + )) + + ","(send\n  (send\n    (lvar :@transfmatrix [] [] ) :[]\n    (str \"b\")) :*\n  (lvar :xt)) + + ","@transfmatrix [] []  [] ","(send\n  (send\n    (lvar :ctm) :[]\n    (str \"b\")) :*\n  (lvar :x / t)) + ","(send\n  (send\n    (lvar :ctm) :[]\n    (str \"b\")) :*\n  (lvar :(lvar :x1) min t)) + ","(send\n  (send\n    (lvar :ctm) :[]\n    (str \"b\")) :*\n  (lvar :x * t)) + ","(send\n  (send\n    (lvar :ctm) :[]\n    (str \"b\")) :*\n  (lvar :x + )) + ","(send\n  (send\n    (lvar :@transfmatrix [] [] ) :[]\n    (str \"b\")) :*\n  (lvar :xt)) + ","@transfmatrix [] []  [] * ","(send\n  (send\n    (lvar :ctm) :[]\n    (str \"a\")) :*\n  (lvar :x / t)) + + ","(send\n  (send\n    (lvar :ctm) :[]\n    (str \"a\")) :*\n  (lvar :(lvar :x1) min t)) + + ","(send\n  (send\n    (lvar :ctm) :[]\n    (str \"a\")) :*\n  (lvar :x * t)) + + ","(send\n  (send\n    (lvar :ctm) :[]\n    (str \"a\")) :*\n  (lvar :x + )) + + ","(send\n  (send\n    (lvar :@transfmatrix [] [] ) :[]\n    (str \"a\")) :*\n  (lvar :xt)) + + ","(send\n  (send\n    (lvar :ctm) :[]\n    (str \"a\")) :*\n  (lvar :x / t)) + ","(send\n  (send\n    (lvar :ctm) :[]\n    (str \"a\")) :*\n  (lvar :(lvar :x1) min t)) + ","(send\n  (send\n    (lvar :ctm) :[]\n    (str \"a\")) :*\n  (lvar :x * t)) + ","(send\n  (send\n    (lvar :ctm) :[]\n    (str \"a\")) :*\n  (lvar :x + )) + ","(send\n  (send\n    (lvar :@transfmatrix [] [] ) :[]\n    (str \"a\")) :*\n  (lvar :xt)) + ","x /  + ","(lvar :x1) min  + ","x *  + ","(send\n  (lvar :y) :-\n  (send\n    (array\n      (lvar :y1)\n      (lvar :y2)\n      (lvar :y3)\n      (lvar :y4)) :min)) /  * ","h *  * ","(send\n  (send\n    (array\n      (lvar :x1)\n      (lvar :x2)\n      (lvar :x3)\n      (lvar :x4)) :max) :-\n  (lvar :x)) /  * ","w *  * ","(send\n  (ivar :@h) :-\n  (lvar :@h - )) * ","(send\n  (ivar :@h) :-\n  (lvar :(lvar :y1) max )) * ","(send\n  (ivar :@h) :-\n  (lvar :(send\n  (ivar :@h) :-\n  (lvar :y)) * )) * ","(send\n  (ivar :@(send\n  (lvar :y) :-\n  (send\n    (array\n      (lvar :y1)\n      (lvar :y2)\n      (lvar :y3)\n      (lvar :y4)) :min)) / ) :-\n  (lvar :y)) * ","(send\n  (ivar :@h * ) :-\n  (lvar :y)) * ","x /  * ","(lvar :x1) min  * ","x *  * ","@transfmatrix [] []  [] nil? ! ","@transfmatrix [] []  [] nil? ","@transfmatrix /  [] [] ","@transfmatri(lvar :x1) min  [] [] ","@transfmatrix *  [] [] ","@transfmatrix /  [] ","@transfmatri(lvar :x1) min  [] ","@transfmatrix *  [] ","max / id downto ","ma(lvar :x1) min id downto ","max * id downto ","maxid do(send\n  (send\n    (array\n      (lvar :x1)\n      (lvar :x2)\n      (lvar :x3)\n      (lvar :x4)) :max) :-\n  (lvar :x)) / nto ","maxid dow * nto ","@transfmatrix [] length -  downto ","@transfmatrix /  [] length - ","@transfmatri(lvar :x1) min  [] length - ","@transfmatrix *  [] length - ","@transfmatrix [] lengt(send\n  (lvar :y) :-\n  (send\n    (array\n      (lvar :y1)\n      (lvar :y2)\n      (lvar :y3)\n      (lvar :y4)) :min)) /  - ","@transfmatrix [] length *  - ","@transfmatrix /  [] length ","@transfmatri(lvar :x1) min  [] length ","@transfmatrix *  [] length ","@transfmatrix [] lengt(send\n  (lvar :y) :-\n  (send\n    (array\n      (lvar :y1)\n      (lvar :y2)\n      (lvar :y3)\n      (lvar :y4)) :min)) /  ","@transfmatrix [] length *  ","@transfmatrix_ke@h -  downto ","@transfmatrix_ke(lvar :y1) max  downto ","@transfmatrix_ke(send\n  (ivar :@h) :-\n  (lvar :y)) *  downto ","@transfmatrix / _key downto ","@transfmatri(lvar :x1) min _key downto ","@transfmatrix * _key downto ","@transfmatrix_key do(send\n  (send\n    (array\n      (lvar :x1)\n      (lvar :x2)\n      (lvar :x3)\n      (lvar :x4)) :max) :-\n  (lvar :x)) / nto ","@transfmatrix_key dow * nto ","@transfmatrix /  nil? ! ","@transfmatri(lvar :x1) min  nil? ! ","@transfmatrix *  nil? ! ","@transfmatrix /  nil? ","@transfmatri(lvar :x1) min  nil? ","@transfmatrix *  nil? ","@h -  == ","(lvar :y1) max  == ","(send\n  (ivar :@h) :-\n  (lvar :y)) *  == ","x /  == ","(lvar :x1) min  == ","x *  == "]}," RBPDF Link":{"type":"method","name":"Link","children":[],"call":[" Annotation "]}," RBPDF SetLink":{"type":"method","name":"SetLink","children":[],"call":["@links []= ","page == ","y == "]}," RBPDF AddLink":{"type":"method","name":"AddLink","children":[],"call":["@links []= ","@links length + ","@links length ","@li@links length + ks []= ","@li@links length ks []= ","@li@links length + ks le@links length + gth + ","@li@links length ks le@links length gth + ","@li@links length + ks le@links length + gth ","@li@links length ks le@links length gth "]}," RBPDF SetDefaultMonospacedFont":{"type":"method","name":"SetDefaultMonospacedFont","children":[],"call":[]}," RBPDF getFontAscent":{"type":"method","name":"getFontAscent","children":[],"call":["0.85 * ","font [] [] * / ","font [] [] * ","font [] [] ","font [] ","font [] [] > "," getFontBuffer ","fontdata [] "," AddFont ","size / "," getFontBuffer  [] [] * / "," getFontBuffer  [] [] * "," getFontBuffer  [] [] "," getFontBuffer  [] "," getFontBuffer  [] [] > "," getFontBuffer data [] "," AddFont  [] "]}," RBPDF getFontDescent":{"type":"method","name":"getFontDescent","children":[],"call":["0.15 * ","font [] [] -@ * / ","font [] [] -@ * ","font [] [] -@ ","font [] [] ","font [] ","font [] [] <= "," getFontBuffer ","fontdata [] "," AddFont ","size / "," getFontBuffer  [] [] -@ * / "," getFontBuffer  [] [] -@ * "," getFontBuffer  [] [] -@ "," getFontBuffer  [] [] "," getFontBuffer  [] "," getFontBuffer  [] [] <= "," getFontBuffer data [] "," AddFont  [] "]}," RBPDF SetFontSize":{"type":"method","name":"SetFontSize","children":[],"call":[" out "," sprintf ","@current_font [] ","@current_font [] nil? ! ","@current_font [] nil? ","@page > ","0.15 * ","@current_font [] [] -@ * / ","@current_font [] [] -@ * ","@current_font [] [] -@ ","@current_font [] [] ","@current_font [] [] <= ","@current_font [] [] nil? ! ","@current_font [] [] nil? ","0.85 * ","@current_font [] [] * / ","@current_font [] [] * ","@current_font [] [] > ","size to_f / ","size to_f "]}," RBPDF SetFont":{"type":"method","name":"SetFont","children":[],"call":[" SetFontSize "," getFontBuffer ","fontdata [] "," AddFont ","size == "," AddFont  [] "]}," RBPDF AddFont":{"type":"method","name":"AddFont","children":[],"call":["@font_files []= ","font_desc [] ","font_desc [] != ","font_desc [] == "," empty_string ! "," empty_string "," setFontSubBuffer ","@diffs []= ","nb + ","d == ","@diffs [] == ","@diffs [] ","1 upto ","@diffs length ","font_desc [] empty? ! ","font_desc [] empty? ","font_desc [] nil? ! ","font_desc [] nil? "," setFontBuffer "," Error ","Unknow font type:  + + ","Unknow font type:  + "," type ","font_desc []= ","@core_fonts [] ","desc []= ","desc [] ","bistyle index != ","bistyle index ","font_desc [] + ","styles [] ","font_desc [] [] ","desc [] > ","desc [] nil? ! ","desc [] nil? ","font_desc [] []= ","The font definition file has a bad format:  + + ","The font definition file has a bad format:  + ","font_desc [] dup ","RBPDFFontDescriptor  font ","Could not include font definition file:  + + ","Could not include font definition file:  + "," require ","File  exists? "," getfontpath ","fontdir + ","fontdir != ","family gsub + ","family gsub ","family gsub + + ","style downcase ","fontdir << ","fontdir == ","File  dirname "," getFontBuffer != "," getFontBuffer ","style + + + ","style + + ","style + ","family + ","style << ","tempstyle index != ","tempstyle index ","style upcase ","family == ","@is_unicode ! ","family downcase ","@font_files [] [] push ","@font_files [] [] ","@font_files [] ","@font_files [] [] include? ","@font_files [] []= ","@font_files [] nil? ","Array  new ","subset nil? ","RBPDFFontDescriptor  font dup ","File  exist? ","fontname + ","font_nb + esc [] ","font_font_desc [] dup  [] ","RBPDFFontDescriptor  font  [] ","RBPDFFontDescriptor  font dup  [] ","font_nb + esc [] != ","font_font_desc [] dup  [] != ","RBPDFFontDescriptor  font  [] != ","RBPDFFontDescriptor  font dup  [] != ","font_nb + esc [] == ","font_font_desc [] dup  [] == ","RBPDFFontDescriptor  font  [] == ","RBPDFFontDescriptor  font dup  [] == ","@nb + iffs []= ","@diffs length  + ","nb +  == ","@nb + iffs [] == ","@nb + iffs [] ","@nb + iffs length ","font_nb + esc [] empty? ! ","font_font_desc [] dup  [] empty? ! ","RBPDFFontDescriptor  font  [] empty? ! ","RBPDFFontDescriptor  font dup  [] empty? ! ","font_nb + esc [] empty? ","font_font_desc [] dup  [] empty? ","RBPDFFontDescriptor  font  [] empty? ","RBPDFFontDescriptor  font dup  [] empty? ","font_nb + esc [] nil? ! ","font_font_desc [] dup  [] nil? ! ","RBPDFFontDescriptor  font  [] nil? ! ","RBPDFFontDescriptor  font dup  [] nil? ! ","font_nb + esc [] nil? ","font_font_desc [] dup  [] nil? ","RBPDFFontDescriptor  font  [] nil? ","RBPDFFontDescriptor  font dup  [] nil? ","font_nb + esc []= ","font_font_desc [] dup  []= ","RBPDFFontDescriptor  font  []= ","RBPDFFontDescriptor  font dup  []= ","nb + esc []= ","font_desc [] dup  []= ","nb + esc [] ","font_desc [] dup  [] ","bistyle innb + ex != ","bistyle innb + ex ","font_nb + esc [] + ","font_font_desc [] dup  [] + ","RBPDFFontDescriptor  font  [] + ","RBPDFFontDescriptor  font dup  [] + ","font_nb + esc [] [] ","font_font_desc [] dup  [] [] ","RBPDFFontDescriptor  font  [] [] ","RBPDFFontDescriptor  font dup  [] [] ","nb + esc [] > ","font_desc [] dup  [] > ","nb + esc [] nil? ! ","font_desc [] dup  [] nil? ! ","nb + esc [] nil? ","font_desc [] dup  [] nil? ","font_nb + esc [] []= ","font_font_desc [] dup  [] []= ","RBPDFFontDescriptor  font  [] []= ","RBPDFFontDescriptor  font dup  [] []= ","The font nb + efinition file has a banb +  format:  + + ","The font nb + efinition file has a banb +  format:  + ","font_nb + esc [] nb + up ","font_font_desc [] dup  [] dup ","RBPDFFontDescriptor  font  [] dup ","RBPDFFontDescriptor  font dup  [] dup ","Coulnb +  not inclunb + e font nb + efinition file:  + + ","Coulnb +  not inclunb + e font nb + efinition file:  + ","fontnb + ir + ","File  dirname  + ","fontnb + ir != ","File  dirname  != ","family downcase  gsub + ","family downcase  gsub ","family downcase  gsub + + ","style nb + owncase ","fontnb + ir << ","File  dirname  << ","fontnb + ir == ","File  dirname  == ","File  nb + irname ","family downcase  + ","tempstyle innb + ex != ","style upcase  index != ","tempstyle innb + ex ","style upcase  index ","family downcase  == ","@is_uniconb + e ! ","family nb + owncase ","family downcase  downcase ","@font_files [] [] inclunb + e? ","RBPDFFontDescriptor  font nb + up ","family gsub +  + "]}," RBPDF getFontsList":{"type":"method","name":"getFontsList","children":[],"call":["@fontlist push ","File  basename downcase ","File  basename ","Dir  glob each ","Dir  glob ","File  join "," getfontpath "]}," RBPDF GetNumChars":{"type":"method","name":"GetNumChars","children":[],"call":["s length "," UTF8StringToArray length "," UTF8StringToArray ","@current_font [] == ","@current_font [] "]}," RBPDF GetCharWidth":{"type":"method","name":"GetCharWidth","children":[],"call":["w * / ","w * ","cw [] ","cw [] nil? ! ","cw [] nil? ","@current_font [] ","@current_font [] nil? ! ","@current_font [] nil? ","char == ","cw []  * / ","@current_font []  * / ","cw []  * ","@current_font []  * ","ccw []  [] ","c@current_font []  [] ","@current_font []  [] ","ccw []  [] nil? ! ","c@current_font []  [] nil? ! ","@current_font []  [] nil? ! ","ccw []  [] nil? ","c@current_font []  [] nil? ","@current_font []  [] nil? "]}," RBPDF GetArrStringWidth":{"type":"method","name":"GetArrStringWidth","children":[],"call":[" SetFont "," empty_string ! "," empty_string ","wa push "," GetCharWidth ","sa each "," UTF8ArrToLatin1 "," UTF8ArrToLatin1  each "]}," RBPDF GetStringWidth":{"type":"method","name":"GetStringWidth","children":[],"call":[" GetArrStringWidth "," utf8Bidi "," UTF8StringToArray "," rtl_text_dir "]}," RBPDF SetTextColor":{"type":"method","name":"SetTextColor","children":[],"call":["@fill_color != ","@fgcolor []= "," sprintf ","col4 / ","col3 / ","col2 / ","col1 / ","col4 == ","col3 == ","col2 == ","col4 is_a? ","col3 is_a? ","col2 is_a? ","col1 is_a? "]}," RBPDF SetTextColorArray":{"type":"method","name":"SetTextColorArray","children":[],"call":[" SetTextColor ","r >= ","color [] ","color [] nil? ! ","color [] nil? ","color values ","color is_a? ","color nil? "," SetTextColocolor []  ","color []  >= ","colocolor []  [] ","color values  [] ","colocolor []  [] nil? ! ","color values  [] nil? ! ","colocolor []  [] nil? ","color values  [] nil? ","colocolor []  values ","color values  values ","colocolor []  is_a? ","color values  is_a? ","colocolor []  nil? ","color values  nil? "]}," RBPDF SetFillColor":{"type":"method","name":"SetFillColor","children":[],"call":[" out ","@page > ","@fill_color != ","@bgcolor []= "," sprintf ","col4 / ","col3 / ","col2 / ","col1 / ","col4 == ","col3 == ","col2 == ","col4 is_a? ","col3 is_a? ","col2 is_a? ","col1 is_a? "," sprintf  != "]}," RBPDF SetFillColorArray":{"type":"method","name":"SetFillColorArray","children":[],"call":[" SetFillColor ","r >= ","color [] ","color [] nil? ! ","color [] nil? ","color values ","color is_a? ","color nil? ! ","color nil? "," SetFillColocolor []  ","color []  >= ","colocolor []  [] ","color values  [] ","colocolor []  [] nil? ! ","color values  [] nil? ! ","colocolor []  [] nil? ","color values  [] nil? ","colocolor []  values ","color values  values ","colocolor []  is_a? ","color values  is_a? ","colocolor []  nil? ! ","color values  nil? ! ","colocolor []  nil? ","color values  nil? "]}," RBPDF SetDrawColor":{"type":"method","name":"SetDrawColor","children":[],"call":[" out ","@draw_color + ","@page > ","@strokecolor []= "," sprintf ","col4 / ","col3 / ","col2 / ","col1 / ","col4 == ","col3 == ","col2 == ","col4 is_a? ","col3 is_a? ","col2 is_a? ","col1 is_a? "," sprintf  + "]}," RBPDF SetDrawColorArray":{"type":"method","name":"SetDrawColorArray","children":[],"call":[" SetDrawColor ","r >= ","color [] ","color [] nil? ! ","color [] nil? ","color values ","color is_a? ","color nil? ! ","color nil? "," SetDcolor [] awColocolor []  ","color []  >= ","colocolor []  [] ","color values  [] ","colocolor []  [] nil? ! ","color values  [] nil? ! ","colocolor []  [] nil? ","color values  [] nil? ","colocolor []  values ","color values  values ","colocolor []  is_a? ","color values  is_a? ","colocolor []  nil? ! ","color values  nil? ! ","colocolor []  nil? ","color values  nil? "]}," RBPDF AddSpotColor":{"type":"method","name":"AddSpotColor","children":[],"call":["@spot_colors []= ","1 + ","@spot_colors length ","@spot_colors [] nil? ","@spot_colors [] ","@spot_colors [] n1 + l? "]}," RBPDF PageNo":{"type":"method","name":"PageNo","children":[],"call":[]}," RBPDF setTableHeader":{"type":"method","name":"setTableHeader","children":[],"call":["@pagedim [] []= ","@pagedim [] ","@thead_margins []= ","@thead_margins [] nil? ","@thead_margins [] "," writeHTML ","@w - ","@pagedim [] [] ","@in_thead ! "," empty_string ! "," empty_string ","@thead_margins [] nil? ! ","@num_columns > "]}," RBPDF setFooter":{"type":"method","name":"setFooter","children":[],"call":["@footerlen []= ","@pagelen [] - + ","@pagelen [] - ","@footerpos [] ","@pagelen [] "," setGraphicVars "," out "," SetXY "," Footer "," SetFont ","@footer_font [] ","@h - ","@footerpos []= "," getGraphicVars "]}," RBPDF setHeader":{"type":"method","name":"setHeader","children":[],"call":[" out "," SetXY "," Header "," SetFont ","@header_font [] "]}," RBPDF Footer":{"type":"method","name":"Footer","children":[],"call":[" Cell "," SetX ","ormargins [] "," getRTL "," SetY ","w_page + + + + "," getPageGroupAlias ","w_page + + + ","w_page + + "," getPageNumGroupAlias ","w_page + "," getAliasNbPages "," getAliasNumPage ","@pagegroups empty? ","@l [] ","@l [] nil? ","@l nil? "," SetLineStyle ","0.85 / "," getScaleFactor "," SetTextColor "," getOriginalMargins "," GetY "," getOriginalMargins  [] ","@l []  + + + + ","@l []  + + + ","@l []  + + ","@l []  + "]}," RBPDF Header":{"type":"method","name":"Header","children":[],"call":[" Cell "," SetX ","ormargins [] "," getRTL "," SetY ","(send\n  (float 2.835) :/\n  (send nil :getScaleFactor)) + "," GetY ","imgy > ","2.835 / "," getScaleFactor "," SetLineStyle ","0.85 / "," MultiCell ","headerdata [] "," SetFont ","headerfont [] ","headerfont [] + "," SetTextColor ","ormargins [] + ","headerdata [] * ","(send\n  (begin\n    (send\n      (send nil :getCellHeightRatio) :*\n      (send\n        (lvar :headerfont) :[]\n        (int 2)))) :/\n  (send nil :getScaleFactor)) round ","(send\n  (send nil :getCellHeightRatio) :*\n  (send\n    (lvar :headerfont) :[]\n    (int 2))) / "," getCellHeightRatio * "," getCellHeightRatio "," Write ","File  basename "," getImageRBY ","result_img != "," Image ","@@k_path_images + ","headerdata [] != "," getHeaderData "," getHeaderFont "," getOriginalMargins "," getOriginalMargins  [] "," GetY  > "," getImageRBY  > "," getHeaderData  [] "," getHeaderFont  [] "," getHeaderFont  [] + "," getOriginalMargins  [] + "," getHeaderData  [] * ","(send\n  (begin\n    (send\n      (send nil :getCellHeightRatio) :*\n      (send\n        (lvar : getHeaderFont ) :[]\n        (int 2)))) :/\n  (send nil :getScaleFactor)) round ","(send\n  (send nil :getCellHeightRatio) :*\n  (send\n    (lvar : getHeaderFont ) :[]\n    (int 2))) / "," Image  != "," getHeaderData  [] != "]}," RBPDF getImageRBY":{"type":"method","name":"getImageRBY","children":[],"call":[]}," RBPDF getImageRBX":{"type":"method","name":"getImageRBX","children":[],"call":[]}," RBPDF SetPrintFooter":{"type":"method","name":"SetPrintFooter","children":[],"call":[" setPrintFooter "," warn "]}," RBPDF setPrintFooter":{"type":"method","name":"setPrintFooter","children":[],"call":[]}," RBPDF SetPrintHeader":{"type":"method","name":"SetPrintHeader","children":[],"call":[" setPrintHeader "," warn "]}," RBPDF setPrintHeader":{"type":"method","name":"setPrintHeader","children":[],"call":[]}," RBPDF getFooterMargin":{"type":"method","name":"getFooterMargin","children":[],"call":[]}," RBPDF SetFooterMargin":{"type":"method","name":"SetFooterMargin","children":[],"call":[" setFooterMargin "," warn "]}," RBPDF setFooterMargin":{"type":"method","name":"setFooterMargin","children":[],"call":[]}," RBPDF getHeaderMargin":{"type":"method","name":"getHeaderMargin","children":[],"call":[]}," RBPDF SetHeaderMargin":{"type":"method","name":"SetHeaderMargin","children":[],"call":[" setHeaderMargin "," warn "]}," RBPDF setHeaderMargin":{"type":"method","name":"setHeaderMargin","children":[],"call":[]}," RBPDF getHeaderData":{"type":"method","name":"getHeaderData","children":[],"call":["ret []= "]}," RBPDF SetHeaderData":{"type":"method","name":"SetHeaderData","children":[],"call":[" setHeaderData "," warn "]}," RBPDF setHeaderData":{"type":"method","name":"setHeaderData","children":[],"call":[]}," RBPDF setContentMark":{"type":"method","name":"setContentMark","children":[],"call":["@cntmrk []= ","@pagelen [] ","@pagelen [] - ","@footerlen [] ","page <= "]}," RBPDF setPageMark":{"type":"method","name":"setPageMark","children":[],"call":[" setContentMark ","@intmrk []= ","@pagelen [] "]}," RBPDF startPage":{"type":"method","name":"startPage","children":[],"call":[" setTableHeader "," setPageMark "," setGraphicVars "," setHeader ","@pageopen []= "," beginpage "," getGraphicVars "," swapMargins "," Open ","@state == "," SetY "," setPage ","@page + ","@numpages > "]}," RBPDF endPage":{"type":"method","name":"endPage","children":[],"call":["@pageopen []= "," endpage "," setFooter ","@pageopen [] ! ","@pageopen [] ","@numpages > ","@page == "]}," RBPDF AddPage":{"type":"method","name":"AddPage","children":[],"call":[" startPage "," endPage ","@original_r_margin nil? ","@original_l_margin nil? "]}," RBPDF endTOCPage":{"type":"method","name":"endTOCPage","children":[],"call":[" endPage "]}," RBPDF addTOCPage":{"type":"method","name":"addTOCPage","children":[],"call":[" AddPage "]}," RBPDF getNumPages":{"type":"method","name":"getNumPages","children":[],"call":[]}," RBPDF getPage":{"type":"method","name":"getPage","children":[],"call":[]}," RBPDF lastPage":{"type":"method","name":"lastPage","children":[],"call":[" setPage "," getNumPages "]}," RBPDF setPage":{"type":"method","name":"setPage","children":[],"call":[" Error ","@pagedim [] [] - ","@pagedim [] [] ","@pagedim [] ","@pagedim [] [] != "," SetY "," SetAutoPageBreak ","pnum <= ","pnum > ","pnum == "]}," RBPDF Close":{"type":"method","name":"Close","children":[],"call":[" enddoc "," setVisibility "," out "," Cell "," setAlpha "," SetTextColor "," SetFont ","@h - ","1 / "," SetAutoPageBreak "," lastPage "," endPage "," AddPage ","@page == ","@state == "," resetLinksAfterCurrentPage "]}," RBPDF Open":{"type":"method","name":"Open","children":[],"call":[]}," RBPDF Error":{"type":"method","name":"Error","children":[],"call":[" raise "," destroy "," logger error "," logger ","err backtrace each ","err backtrace ","err message ","err class != ","err class "," caller first "," caller "]}," RBPDF SetCreator":{"type":"method","name":"SetCreator","children":[],"call":[]}," RBPDF SetKeywords":{"type":"method","name":"SetKeywords","children":[],"call":[]}," RBPDF SetAuthor":{"type":"method","name":"SetAuthor","children":[],"call":[]}," RBPDF SetSubject":{"type":"method","name":"SetSubject","children":[],"call":[]}," RBPDF SetTitle":{"type":"method","name":"SetTitle","children":[],"call":[]}," RBPDF SetCompression":{"type":"method","name":"SetCompression","children":[],"call":["Object  const_defined? "]}," RBPDF SetDisplayMode":{"type":"method","name":"SetDisplayMode","children":[],"call":[" Error ","Incorrect zoom display mode:  + ","zoom is_a? ! ","zoom is_a? ","zoom == "]}," RBPDF SetAutoPageBreak":{"type":"method","name":"SetAutoPageBreak","children":[],"call":["@h - "]}," RBPDF SetCellPadding":{"type":"method","name":"SetCellPadding","children":[],"call":[]}," RBPDF SetRightMargin":{"type":"method","name":"SetRightMargin","children":[],"call":["@w - ","@x > ","@page > ","@w -  > "]}," RBPDF SetTopMargin":{"type":"method","name":"SetTopMargin","children":[],"call":["@y < ","@page > "]}," RBPDF SetLeftMargin":{"type":"method","name":"SetLeftMargin","children":[],"call":["@x < ","@page > "]}," RBPDF SetMargins":{"type":"method","name":"SetMargins","children":[],"call":["right == "]}," RBPDF GetScaleFactor":{"type":"method","name":"GetScaleFactor","children":[],"call":[" getScaleFactor "," warn "]}," RBPDF getScaleFactor":{"type":"method","name":"getScaleFactor","children":[],"call":[]}," RBPDF GetBreakMargin":{"type":"method","name":"GetBreakMargin","children":[],"call":[" getBreakMargin "," warn "]}," RBPDF getBreakMargin":{"type":"method","name":"getBreakMargin","children":[],"call":["@pagedim [] [] ","@pagedim [] ","pagenum empty? ","pagenum zero? ","pagenum is_a? ! ","pagenum is_a? "]}," RBPDF GetPageHeight":{"type":"method","name":"GetPageHeight","children":[],"call":[" getPageHeight "," warn "]}," RBPDF getPageHeight":{"type":"method","name":"getPageHeight","children":[],"call":[]}," RBPDF GetPageWidth":{"type":"method","name":"GetPageWidth","children":[],"call":[" getPageWidth "," warn "]}," RBPDF getPageWidth":{"type":"method","name":"getPageWidth","children":[],"call":[]}," RBPDF getPageDimensions":{"type":"method","name":"getPageDimensions","children":[],"call":["@pagedim [] ","pagenum empty? ","pagenum zero? ","pagenum is_a? ! ","pagenum is_a? "]}," RBPDF GetImageScale":{"type":"method","name":"GetImageScale","children":[],"call":[" getImageScale "," warn "]}," RBPDF getImageScale":{"type":"method","name":"getImageScale","children":[],"call":[]}," RBPDF SetImageScale":{"type":"method","name":"SetImageScale","children":[],"call":[" setImageScale "," warn "]}," RBPDF setImageScale":{"type":"method","name":"setImageScale","children":[],"call":[]}," RBPDF getLastH":{"type":"method","name":"getLastH","children":[],"call":[]}," RBPDF setLastH":{"type":"method","name":"setLastH","children":[],"call":[]}," RBPDF isRTLTextDir":{"type":"method","name":"isRTLTextDir","children":[],"call":["@tmprtl == ","@tmprtl != "]}," RBPDF setTempRTL":{"type":"method","name":"setTempRTL","children":[],"call":["@rtl ! "]}," RBPDF getRTL":{"type":"method","name":"getRTL","children":[],"call":[]}," RBPDF setRTL":{"type":"method","name":"setRTL","children":[],"call":[" Ln ","enable != "]}," RBPDF setPageOrientation":{"type":"method","name":"setPageOrientation","children":[],"call":["@pagedim [] ","@pagedim [] []= "," SetAutoPageBreak ","2 * / ","2 * ","@b_margin nil? "," empty_string ","@auto_page_break nil? ","@h_pt / ","@w_pt / "," swapPageBoxCoordinates ","(send\n  (send\n    (send\n      (send\n        (ivar :@pagedim) :[]\n        (ivar :@page)) :[]\n      (str \"MediaBox\")) :[]\n    (str \"ury\")) :-\n  (ivar :@w_pt)) abs < ","(send\n  (send\n    (send\n      (send\n        (ivar :@pagedim) :[]\n        (ivar :@page)) :[]\n      (str \"MediaBox\")) :[]\n    (str \"ury\")) :-\n  (ivar :@w_pt)) abs ","@pagedim [] [] [] - ","@pagedim [] [] [] ","@pagedim [] [] ","(send\n  (send\n    (send\n      (send\n        (ivar :@pagedim) :[]\n        (ivar :@page)) :[]\n      (str \"MediaBox\")) :[]\n    (str \"urx\")) :-\n  (ivar :@h_pt)) abs < ","(send\n  (send\n    (send\n      (send\n        (ivar :@pagedim) :[]\n        (ivar :@page)) :[]\n      (str \"MediaBox\")) :[]\n    (str \"urx\")) :-\n  (ivar :@h_pt)) abs ","orientation != ","valid_orientations include? ","orientation [] upcase ","orientation [] ","orientation empty? ","@fw_pt > ","@pagedim [] [] nil? "," setPageBoxes ","@fh_pt / ","@fw_pt / ","@pagedim [] nil? ","@h_pt / _pt / ","@w_pt / _pt / ","(send\n  (send\n    (send\n      (send\n        (ivar :@pagedim) :[]\n        (ivar :@page)) :[]\n      (str \"MediaBox\")) :[]\n    (str \"ury\")) :-\n  (ivar :@w_pt / _pt)) abs < ","(send\n  (send\n    (send\n      (send\n        (ivar :@pagedim) :[]\n        (ivar :@page)) :[]\n      (str \"MediaBox\")) :[]\n    (str \"ury\")) :-\n  (ivar :@w_pt / _pt)) abs ","(send\n  (send\n    (send\n      (send\n        (ivar :@pagedim) :[]\n        (ivar :@page)) :[]\n      (str \"MediaBox\")) :[]\n    (str \"urx\")) :-\n  (ivar :@h_pt / _pt)) abs < ","(send\n  (send\n    (send\n      (send\n        (ivar :@pagedim) :[]\n        (ivar :@page)) :[]\n      (str \"MediaBox\")) :[]\n    (str \"urx\")) :-\n  (ivar :@h_pt / _pt)) abs ","orientation [] upcase  != ","valid_orientation [] upcase s include? ","orientation [] upcase  [] upcase ","orientation [] upcase  [] ","orientation [] upcase  empty? "]}," RBPDF swapPageBoxCoordinates":{"type":"method","name":"swapPageBoxCoordinates","children":[],"call":["@pagedim [] [] []= ","@pagedim [] [] ","@pagedim [] ","@pagedim [] [] [] ","pageboxes each "]}," RBPDF setPageBoxes":{"type":"method","name":"setPageBoxes","children":[],"call":["@pagedim [] [] []= ","ury * ","@pagedim [] [] ","@pagedim [] ","urx * ","lly * ","llx * ","@pagedim [] []= ","pageboxes include? ","@pagedim []= ","@pagedim [] nil? "]}," RBPDF setPageFormat":{"type":"method","name":"setPageFormat","children":[],"call":[" setPageOrientation ","@pagedim [] [] []= ","@pagedim [] [] ","@pagedim [] ","format [] [] to_f ","format [] [] ","format [] ","format [] [] == ","format [] [] === ","format [] [] to_i ","valid_effect include? ","valid_vals include? ","stansition_styles include? ","@pagedim [] []= ","format [] to_f ","format [] to_i ","(send\n  (send\n    (lvar :format) :[]\n    (str \"Rotate\")) :%\n  (int 90)) == ","format [] % "," setPageBoxes ","pf [] * ","pf [] "," getPageSizeFromFormat ","format []= ","format [] nil? ","format [] is_a? ","(send\n  (send\n    (send\n      (lvar :format) :[]\n      (str \"MediaBox\")) :[]\n    (str \"ury\")) :-\n  (send\n    (send\n      (lvar :format) :[]\n      (str \"MediaBox\")) :[]\n    (str \"lly\"))) * ","format [] [] - ","(send\n  (send\n    (send\n      (lvar :format) :[]\n      (str \"MediaBox\")) :[]\n    (str \"urx\")) :-\n  (send\n    (send\n      (lvar :format) :[]\n      (str \"MediaBox\")) :[]\n    (str \"llx\"))) * ","format is_a? ","@pagedim []= ","format empty? ! ","format empty? "," getPageSizeFromFormat  [] * "," getPageSizeFromFormat  [] "]}," RBPDF getPageSizeFromFormat":{"type":"method","name":"getPageSizeFromFormat","children":[],"call":["format upcase "]}," RBPDF setPageUnit":{"type":"method","name":"setPageUnit","children":[],"call":[" setPageOrientation ","@cur_orientation nil? "," Error ","@dpi / ","unit downcase ","unit downcase  downcase "]}," RBPDF initialize":{"type":"method","name":"initialize","children":[],"call":[" SetFont ","@bgcolor []= ","ActiveSupport OrderedHash  new ","@strokecolor []= ","@fgcolor []= "," getFontsList "," SetCompression "," SetDisplayMode "," SetAutoPageBreak ","2 * "," sprintf ","@line_width * ","0.57 / ","margin / "," SetMargins ","28.35 / "," setPageFormat "," setPageUnit ","HTMLEntities  new "," dochecks ","Rails  root join to_s ","Rails  root join ","Rails  root ","Dir  tmpdir "," require ","RBPDFFontDescriptor  getfontpath ","ActiveSupport OrderedHash  new  []= ","0.57 /  * ","28.35 /  / "]}," RBPDF logger":{"type":"method","name":"logger","children":[],"call":["Rails  logger ","Logger  new "," require "]}," RBPDFFontDescriptor define":{"type":"method","name":"define","children":[],"call":[]}," RBPDFFontDescriptor font":{"type":"method","name":"font","children":[],"call":[]}," Rbpdf getimagesize":{"type":"method","name":"getimagesize","children":[],"call":["out []= ","image channel_depth ","image image_type to_s != ","image image_type to_s ","image image_type ","image colorspace to_s == ","image colorspace to_s ","image colorspace ","image mime_type ","image columns ","image rows ","Magick ImageList  new ","Object  const_defined? "," freadint ","f read != ","f read ","137 chr + + + + + ","10 chr ","137 chr + + + + ","26 chr ","137 chr + + + ","137 chr + + ","13 chr ","137 chr + ","137 chr "," open ","type == ","File  extname ","Hash  new ","File  exists? ","image class_type to_s == ","image class_type to_s ","image class_type ","image image_type to_s == ","image colorspace to_s downcase ","out [] ","File  exist? "," Error ","No RMagick: Non-PNG file is not supported.:  + ","image [] to_i ","image [] ","image colorspace downcase == ","image colorspace downcase ","image [] downcase ","image height ","image width ","MiniMagick Image  open ","No Mini Magick: Non-PNG file is not supported.:  + ","image [] downcase split first ","image [] downcase split ","Hash  new  []= ","Magick ImageList  new  channel_depth ","MiniMagick Image  open  channel_depth ","Magick ImageList  new  Magick ImageList  new _type to_s != ","MiniMagick Image  open  MiniMagick Image  open _type to_s != ","image image_File  extname  to_s != ","Magick ImageList  new  Magick ImageList  new _type to_s ","MiniMagick Image  open  MiniMagick Image  open _type to_s ","image image_File  extname  to_s ","Magick ImageList  new  Magick ImageList  new _type ","MiniMagick Image  open  MiniMagick Image  open _type ","image image_File  extname  ","Magick ImageList  new  colorspace to_s == ","MiniMagick Image  open  colorspace to_s == ","Magick ImageList  new  colorspace to_s ","MiniMagick Image  open  colorspace to_s ","Magick ImageList  new  colorspace ","MiniMagick Image  open  colorspace ","Magick ImageList  new  mime_type ","MiniMagick Image  open  mime_type ","image mime_File  extname  ","Magick ImageList  new  columns ","MiniMagick Image  open  columns ","Magick ImageList  new  rows ","MiniMagick Image  open  rows ","File  extname  == ","Magick ImageList  new  class_type to_s == ","MiniMagick Image  open  class_type to_s == ","image class_File  extname  to_s == ","Magick ImageList  new  class_type to_s ","MiniMagick Image  open  class_type to_s ","image class_File  extname  to_s ","Magick ImageList  new  class_type ","MiniMagick Image  open  class_type ","image class_File  extname  ","Magick ImageList  new  Magick ImageList  new _type to_s == ","MiniMagick Image  open  MiniMagick Image  open _type to_s == ","image image_File  extname  to_s == ","Magick ImageList  new  colorspace to_s downcase ","MiniMagick Image  open  colorspace to_s downcase ","Hash  new  [] ","Magick ImageList  new  [] to_i ","MiniMagick Image  open  [] to_i ","Magick ImageList  new  [] ","MiniMagick Image  open  [] ","Magick ImageList  new  colorspace downcase == ","MiniMagick Image  open  colorspace downcase == ","Magick ImageList  new  colorspace downcase ","MiniMagick Image  open  colorspace downcase ","Magick ImageList  new  [] downcase ","MiniMagick Image  open  [] downcase ","Magick ImageList  new  height ","MiniMagick Image  open  height ","image image rows  ","image image height  ","Magick ImageList  new  width ","MiniMagick Image  open  width ","image image columns  ","image image width  ","Magick ImageList  new  [] downcase split first ","MiniMagick Image  open  [] downcase split first ","Magick ImageList  new  [] downcase split ","MiniMagick Image  open  [] downcase split "]}," RBPDF rtl_text_dir":{"type":"method","name":"rtl_text_dir","children":[],"call":["@tmprtl != "]}," RBPDF sanitize_html":{"type":"method","name":"sanitize_html","children":[],"call":["%s % "," sanitize ","&lt;/ + ","(send\n  (lvar :html) :gsub\n  (regexp\n    (str \"(<+)([^/a-zA-Z])\")\n    (regopt))) gsub ","CGI  escapeHTML + ","CGI  escapeHTML ","html gsub ","(send\n  (lvar :%s % ) :gsub\n  (regexp\n    (str \"(<+)([^/a-zA-Z])\")\n    (regopt))) gsub ","%s %  gsub "]}," RBPDF resetLinksAfterCurrentPage":{"type":"method","name":"resetLinksAfterCurrentPage","children":[],"call":["link []= ","link [] > ","link [] ","link present? ","@links each "]}," RBPDF getHtmlAnchorPosition":{"type":"method","name":"getHtmlAnchorPosition","children":[],"call":["@html_anchors [] "]}," RBPDF addHtmlAnchor":{"type":"method","name":"addHtmlAnchor","children":[],"call":["@html_anchors []= "]}," RBPDF getFontSubsetting":{"type":"method","name":"getFontSubsetting","children":[],"call":[]}," RBPDF setFontSubsetting":{"type":"method","name":"setFontSubsetting","children":[],"call":["subset == "]}," RBPDF mapLinksToHtmlAnchors":{"type":"method","name":"mapLinksToHtmlAnchors","children":[],"call":["@links []= ","links each ","link_anchor == ","@html_anchor_links find_all ","@html_anchors each "]}," RBPDF getTTFtableChecksum":{"type":"method","name":"getTTFtableChecksum","children":[],"call":["sum [] ","(lvar :sum) pack unpack ","(lvar :sum) pack ","v [] ","table [] unpack ","table [] ","tlen times ","length / ","(lvar :sum) pack unpack  [] ","(lvar :(lvar :sum) pack unpack ) pack unpack ","(ltable [] unpack ar :sum) pack unpack ","(lvar :(lvar :sum) pack unpack ) pack ","(ltable [] unpack ar :sum) pack ","table [] unpack  [] ","length /  times "]}," RBPDF getTrueTypeFontSubset":{"type":"method","name":"getTrueTypeFontSubset","children":[],"call":["font [] + + ","font [] ","table [] [] + ","table [] [] ","table [] ","font [] + ","(lvar :checkSumAdjustment) pack ","2981146554 - "," getTTFtableChecksum ","font length ","font << ","data [] ","table each ","(send\n  (lvar :data) :[]\n  (str \"length\")) pack ","(send\n  (send\n    (lvar :data) :[]\n    (str \"offset\")) :+\n  (lvar :offset)) pack ","data [] + ","(send\n  (lvar :data) :[]\n  (str \"checkSum\")) pack ","numTables * ","(lvar :rangeShift) pack ","(lvar :entrySelector) pack ","(lvar :searchRange) pack ","numTables * - ","2 ** * ","2 ** ","(send\n  (send\n    (const nil :Math) :log\n    (lvar :numTables)) :/\n  (send\n    (const nil :Math) :log\n    (float 2.0))) floor ","Math  log / ","Math  log ","(lvar :numTables) pack ","table length ","(int 65536) pack ","table [] []= ","table [] [] << ","\u0000 * ","pad != ","4 - ","table [] [] % ","glyf length ","table []= ","loca length ","table delete ","table [] [] [] + + ","table [] [] [] ","table [] [] [] + ","tag == ","table_names include? ","loca << ","(lvar :offset) pack ","newIndexToLoc each ","(send\n  (lvar :offset) :/\n  (int 2)) pack ","offset / ","newIndexToLoc []= ","glyf << ","indexToLoc [] - ","indexToLoc [] ","glyphID + ","char nil? ","subsetglyphs each_with_index ","Array  new ","indexToLoc length ","subsetglyphs delete_at ","(send\n  (lvar :flags) :&\n  (int 32)) == ","flags & ","(send\n  (lvar :flags) :&\n  (int 128)) != ","(send\n  (lvar :flags) :&\n  (int 64)) != ","(send\n  (lvar :flags) :&\n  (int 8)) != ","(send\n  (lvar :flags) :&\n  (int 1)) != ","subsetglyphs []= ","subsetglyphs [] nil? ","subsetglyphs [] "," getUSHORT "," loop ","numberOfContours < "," getSHORT ","val nil? ","subsetchars [] ","startCharCode upto "," getULONG ","nGroups times ","k + ","numChars times ","entryCount times ","g < ","idDelta [] - ","idDelta [] ","glyphIdArray [] ","(send\n  (send\n    (lvar :idRangeOffset) :[]\n    (lvar :k)) :/\n  (int 2)) + - ","segCount - ","(send\n  (send\n    (lvar :idRangeOffset) :[]\n    (lvar :k)) :/\n  (int 2)) + ","c - ","startCount [] ","idRangeOffset [] / ","idRangeOffset [] ","idRangeOffset [] == ","startCount [] upto ","endCount [] ","segCount times ","glyphIdArray []= ","gidlen times ","(send\n  (lvar :length) :/\n  (int 2)) - - ","4 * ","(send\n  (lvar :length) :/\n  (int 2)) - ","length / ","idRangeOffset []= ","idDelta []= ","startCount []= ","endCount []= "," getUSHORT / "," getBYTE ","256 times ","enctable [] ","enctable [] == ","encodingTables each ","encodingTables [] []= ","encodingTables [] ","numEncodingTables times ","indexToLoc []= ","n times ","table [] [] / "," getUSHORT * "," getSHORT == "," getULONG != ","numTables times ","subsetglyphs_tmp []= ","font [] + +  [] + + ","fotable [] [] / t [] + + ","font [] + +  [] ","fotable [] [] / t [] ","font [] + +  [] + ","fotable [] [] / t [] + ","(lvar :2981146554 - ) pack ","(lvar :k + hek + kSumAdjustment) pak + k ","(lvar :checkSumAdjustmetable [] [] / t) pack ","  getUSHORT etTTFtableChecksum "," glyphIdArray [] etTTFtableChecksum ","  getBYTE etTTFtableChecksum "," getTTFtableChek + ksum ","font [] + +  length ","font indexToLoc [] -  ","font  getUSHORT  ","font len getUSHORT th ","font lenglyphIdArray [] th ","font len getBYTE th ","fotable [] [] / t letable [] [] / gth ","font [] + +  << ","fotable [] [] / t << ","table eak + h ","(send\n  (lvar :data) :[]\n  (str \"indexToLoc [] - \")) pack ","(send\n  (lvar :data) :[]\n  (str \" getUSHORT \")) pack ","(send\n  (lvar :data) :[]\n  (str \"len getUSHORT th\")) pack ","(send\n  (lvar :data) :[]\n  (str \"lenglyphIdArray [] th\")) pack ","(send\n  (lvar :data) :[]\n  (str \"len getBYTE th\")) pack ","(send\n  (lvar :data) :[]\n  (str \"length\")) pak + k ","(setable [] [] / d\n  (lvar :data) :[]\n  (str \"letable [] [] / gth\")) pack ","(send\n  (send\n    (lvar :data) :[]\n    (str \"numTables * \")) :+\n  (lvar :numTables * )) pack ","(send\n  (send\n    (lvar :data) :[]\n    (str \"table [] [] + \")) :+\n  (lvar :table [] [] + )) pack ","(send\n  (send\n    (lvar :data) :[]\n    (str \"table [] [] \")) :+\n  (lvar :table [] [] )) pack ","(send\n  (send\n    (lvar :data) :[]\n    (str \"offset\")) :+\n  (lvar :offset)) pak + k ","(setable [] [] / d\n  (setable [] [] / d\n    (lvar :data) :[]\n    (str \"offset\")) :+\n  (lvar :offset)) pack ","(send\n  (lvar :data) :[]\n  (str \"k + hek + kSum\")) pak + k ","(setable [] [] / d\n  (lvar :data) :[]\n  (str \"checkSum\")) pack ","table length  * "," getUSHORT  * ","table [] [] / umTables * ","(lvar :numTables * - ) pack ","(lvar :ran getUSHORT eShift) pack ","(lvar :ranglyphIdArray [] eShift) pack ","(lvar :ran getBYTE eShift) pack ","(lvar :rangeShift) pak + k ","(lvar :ratable [] [] / geShift) pack ","(lvar :(send\n  (send\n    (const nil :Math) :log\n    (lvar :numTables)) :/\n  (send\n    (const nil :Math) :log\n    (float 2.0))) floor ) pack ","(lvar :entrySelek + tor) pak + k ","(lvar :etable [] [] / trySelector) pack ","(lvar :2 ** * ) pack ","(lvar :searchRan getUSHORT e) pack ","(lvar :searchRanglyphIdArray [] e) pack ","(lvar :searchRan getBYTE e) pack ","(lvar :seark + hRange) pak + k ","(lvar :searchRatable [] [] / ge) pack ","table length  * - "," getUSHORT  * - ","table [] [] / umTables * - ","(send\n  (send\n    (const nil :Math) :log\n    (lvar :table length )) :/\n  (send\n    (const nil :Math) :log\n    (float 2.0))) floor ","(send\n  (send\n    (const nil :Math) :log\n    (lvar : getUSHORT )) :/\n  (send\n    (const nil :Math) :log\n    (float 2.0))) floor ","(send\n  (send\n    (const nil :Math) :lo getUSHORT \n    (lvar :numTables)) :/\n  (send\n    (const nil :Math) :lo getUSHORT \n    (float 2.0))) floor ","(send\n  (send\n    (const nil :Math) :loglyphIdArray [] \n    (lvar :numTables)) :/\n  (send\n    (const nil :Math) :loglyphIdArray [] \n    (float 2.0))) floor ","(send\n  (send\n    (const nil :Math) :lo getBYTE \n    (lvar :numTables)) :/\n  (send\n    (const nil :Math) :lo getBYTE \n    (float 2.0))) floor ","(send\n  (send\n    (k + onst nil :Math) :log\n    (lvar :numTables)) :/\n  (send\n    (k + onst nil :Math) :log\n    (float 2.0))) floor ","(setable [] [] / d\n  (setable [] [] / d\n    (cotable [] [] / st table [] [] / il :Math) :log\n    (lvar :table [] [] / umTables)) :/\n  (setable [] [] / d\n    (cotable [] [] / st table [] [] / il :Math) :log\n    (float 2.0))) floor ","Math  lo getUSHORT  / ","Math  loglyphIdArray []  / ","Math  lo getBYTE  / ","Math  lo getUSHORT  ","Math  loglyphIdArray []  ","Math  lo getBYTE  ","(lvar :table length ) pack ","(lvar : getUSHORT ) pack ","(lvar :numTables) pak + k ","(lvar :table [] [] / umTables) pack ","table indexToLoc [] -  ","table  getUSHORT  ","table len getUSHORT th ","table lenglyphIdArray [] th ","table len getBYTE th ","table letable [] [] / gth ","(int 65536) pak + k ","(itable [] [] / t 65536) pack ","4 -  != ","glyf indexToLoc [] -  ","glyf  getUSHORT  "," getUSHORT lyf len getUSHORT th ","glyphIdArray [] lyf lenglyphIdArray [] th "," getBYTE lyf len getBYTE th ","glyf letable [] [] / gth ","loca indexToLoc [] -  ","loca  getUSHORT  ","loca len getUSHORT th ","loca lenglyphIdArray [] th ","loca len getBYTE th ","lok + a length ","loca letable [] [] / gth ","ta getUSHORT  == ","taglyphIdArray []  == ","ta getBYTE  == ","font []  == ","table_names ink + lude? ","table_table [] [] / ames itable [] [] / clude? ","lok + a << ","(lvar :numTables * ) pack ","(lvar :table [] [] + ) pack ","(lvar :table [] [] ) pack ","(lvar :offset) pak + k ","Array  new  each ","newIndexToLok +  eak + h ","table [] [] / ewItable [] [] / dexToLoc each ","(send\n  (lvar :numTables * ) :/\n  (int 2)) pack ","(send\n  (lvar :table [] [] + ) :/\n  (int 2)) pack ","(send\n  (lvar :table [] [] ) :/\n  (int 2)) pack ","(send\n  (lvar :offset) :/\n  (int 2)) pak + k ","(setable [] [] / d\n  (lvar :offset) :/\n  (itable [] [] / t 2)) pack ","numTables *  / ","table [] [] +  / ","table [] []  / ","Array  new  []= ","newIndexToLok +  []= ","table [] [] / ewItable [] [] / dexToLoc []= "," getUSHORT lyf << ","glyphIdArray [] lyf << "," getBYTE lyf << ","indexToLok +  [] - ","itable [] [] / dexToLoc [] - ","indexToLok +  [] ","itable [] [] / dexToLoc [] "," getUSHORT lyphID + ","glyphIdArray [] lyphID + "," getBYTE lyphID + ","k + har nil? ","char table [] [] / il? ","subset getUSHORT lyphs each_with_index ","subsetglyphIdArray [] lyphs each_with_index ","subset getBYTE lyphs each_with_index ","subsetglyphs eak + h_with_index ","subsetglyphs each_with_itable [] [] / dex ","Array  table [] [] / ew ","indexToLoc indexToLoc [] -  ","indexToLoc  getUSHORT  ","indexToLoc len getUSHORT th ","indexToLoc lenglyphIdArray [] th ","indexToLoc len getBYTE th ","indexToLok +  length ","itable [] [] / dexToLoc letable [] [] / gth ","subset getUSHORT lyphs delete_at ","subsetglyphIdArray [] lyphs delete_at ","subset getBYTE lyphs delete_at ","(send\n  (lvar : getUSHORT ) :&\n  (int 32)) == ","(send\n  (lvar :fla getUSHORT s) :&\n  (int 32)) == ","(send\n  (lvar :flaglyphIdArray [] s) :&\n  (int 32)) == ","(send\n  (lvar :fla getBYTE s) :&\n  (int 32)) == ","(setable [] [] / d\n  (lvar :flags) :&\n  (itable [] [] / t 32)) == "," getUSHORT  & ","fla getUSHORT s & ","flaglyphIdArray [] s & ","fla getBYTE s & ","(send\n  (lvar : getUSHORT ) :&\n  (int 128)) != ","(send\n  (lvar :fla getUSHORT s) :&\n  (int 128)) != ","(send\n  (lvar :flaglyphIdArray [] s) :&\n  (int 128)) != ","(send\n  (lvar :fla getBYTE s) :&\n  (int 128)) != ","(setable [] [] / d\n  (lvar :flags) :&\n  (itable [] [] / t 128)) != ","(send\n  (lvar : getUSHORT ) :&\n  (int 64)) != ","(send\n  (lvar :fla getUSHORT s) :&\n  (int 64)) != ","(send\n  (lvar :flaglyphIdArray [] s) :&\n  (int 64)) != ","(send\n  (lvar :fla getBYTE s) :&\n  (int 64)) != ","(setable [] [] / d\n  (lvar :flags) :&\n  (itable [] [] / t 64)) != ","(send\n  (lvar : getUSHORT ) :&\n  (int 8)) != ","(send\n  (lvar :fla getUSHORT s) :&\n  (int 8)) != ","(send\n  (lvar :flaglyphIdArray [] s) :&\n  (int 8)) != ","(send\n  (lvar :fla getBYTE s) :&\n  (int 8)) != ","(setable [] [] / d\n  (lvar :flags) :&\n  (itable [] [] / t 8)) != ","(send\n  (lvar : getUSHORT ) :&\n  (int 1)) != ","(send\n  (lvar :fla getUSHORT s) :&\n  (int 1)) != ","(send\n  (lvar :flaglyphIdArray [] s) :&\n  (int 1)) != ","(send\n  (lvar :fla getBYTE s) :&\n  (int 1)) != ","(setable [] [] / d\n  (lvar :flags) :&\n  (itable [] [] / t 1)) != ","subset getUSHORT lyphs []= ","subsetglyphIdArray [] lyphs []= ","subset getBYTE lyphs []= ","subset getUSHORT lyphs [] nil? ","subsetglyphIdArray [] lyphs [] nil? ","subset getBYTE lyphs [] nil? ","subsetglyphs [] table [] [] / il? ","subset getUSHORT lyphs [] ","subsetglyphIdArray [] lyphs [] ","subset getBYTE lyphs [] ","  getUSHORT etUSHORT "," glyphIdArray [] etUSHORT ","  getBYTE etUSHORT "," getSHORT  < ","table [] [] / umberOfCotable [] [] / tours < ","  getUSHORT etSHORT "," glyphIdArray [] etSHORT ","  getBYTE etSHORT ","val table [] [] / il? ","subsetk + hars [] ","indexToLoc [] CharCode upto "," getULONG  upto ","  getUSHORT etULONG "," glyphIdArray [] etULONG ","  getBYTE etULONG "," getULONG  times ","table [] [] / Groups times ","table [] [] / umChars times "," getUSHORT  times ","etable [] [] / tryCoutable [] [] / t times "," getUSHORT  < ","glyphIdArray []  < "," getBYTE  < "," getUSHORT lyphIdArray [] ","glyphIdArray [] lyphIdArray [] "," getBYTE lyphIdArray [] ","(send\n  (send\n    (lvar :idRan getUSHORT eOffset) :[]\n    (lvar :k)) :/\n  (int 2)) + - ","(send\n  (send\n    (lvar :idRanglyphIdArray [] eOffset) :[]\n    (lvar :k)) :/\n  (int 2)) + - ","(send\n  (send\n    (lvar :idRan getBYTE eOffset) :[]\n    (lvar :k)) :/\n  (int 2)) + - ","(setable [] [] / d\n  (setable [] [] / d\n    (lvar :idRatable [] [] / geOffset) :[]\n    (lvar :k)) :/\n  (itable [] [] / t 2)) + - ","se getUSHORT Count - ","seglyphIdArray [] Count - ","se getBYTE Count - "," getUSHORT /  - ","segCoutable [] [] / t - ","(send\n  (send\n    (lvar :idRan getUSHORT eOffset) :[]\n    (lvar :k)) :/\n  (int 2)) + ","(send\n  (send\n    (lvar :idRanglyphIdArray [] eOffset) :[]\n    (lvar :k)) :/\n  (int 2)) + ","(send\n  (send\n    (lvar :idRan getBYTE eOffset) :[]\n    (lvar :k)) :/\n  (int 2)) + ","(setable [] [] / d\n  (setable [] [] / d\n    (lvar :idRatable [] [] / geOffset) :[]\n    (lvar :k)) :/\n  (itable [] [] / t 2)) + ","k +  - ","indexToLoc [] Count [] ","startCoutable [] [] / t [] ","idRan getUSHORT eOffset [] / ","idRanglyphIdArray [] eOffset [] / ","idRan getBYTE eOffset [] / ","idRatable [] [] / geOffset [] / ","idRan getUSHORT eOffset [] ","idRanglyphIdArray [] eOffset [] ","idRan getBYTE eOffset [] ","idRatable [] [] / geOffset [] ","idRan getUSHORT eOffset [] == ","idRanglyphIdArray [] eOffset [] == ","idRan getBYTE eOffset [] == ","idRatable [] [] / geOffset [] == ","indexToLoc [] Count [] upto ","startCoutable [] [] / t [] upto ","etable [] [] / dCoutable [] [] / t [] ","se getUSHORT Count times ","seglyphIdArray [] Count times ","se getBYTE Count times "," getUSHORT /  times ","segCoutable [] [] / t times "," getUSHORT lyphIdArray []= ","glyphIdArray [] lyphIdArray []= "," getBYTE lyphIdArray []= "," getUSHORT idlen times ","glyphIdArray [] idlen times "," getBYTE idlen times ","(send\n  (send\n    (lvar :idRangeOffset) :[]\n    (lvar :k)) :/\n  (int 2)) + - len times ","(send\n  (lvar :length) :/\n  (int 2)) - -  times ","gidletable [] [] /  times ","(send\n  (lvar :indexToLoc [] - ) :/\n  (int 2)) - - ","(send\n  (lvar : getUSHORT ) :/\n  (int 2)) - - ","(send\n  (lvar :len getUSHORT th) :/\n  (int 2)) - - ","(send\n  (lvar :lenglyphIdArray [] th) :/\n  (int 2)) - - ","(send\n  (lvar :len getBYTE th) :/\n  (int 2)) - - ","(setable [] [] / d\n  (lvar :letable [] [] / gth) :/\n  (itable [] [] / t 2)) - - ","(send\n  (lvar :indexToLoc [] - ) :/\n  (int 2)) - ","(send\n  (lvar : getUSHORT ) :/\n  (int 2)) - ","(send\n  (lvar :len getUSHORT th) :/\n  (int 2)) - ","(send\n  (lvar :lenglyphIdArray [] th) :/\n  (int 2)) - ","(send\n  (lvar :len getBYTE th) :/\n  (int 2)) - ","(setable [] [] / d\n  (lvar :letable [] [] / gth) :/\n  (itable [] [] / t 2)) - ","indexToLoc [] -  / "," getUSHORT  / ","len getUSHORT th / ","lenglyphIdArray [] th / ","len getBYTE th / ","letable [] [] / gth / ","idRan getUSHORT eOffset []= ","idRanglyphIdArray [] eOffset []= ","idRan getBYTE eOffset []= ","idRatable [] [] / geOffset []= ","indexToLoc [] Count []= ","startCoutable [] [] / t []= ","etable [] [] / dCoutable [] [] / t []= ","  getUSHORT etUSHORT / "," glyphIdArray [] etUSHORT / ","  getBYTE etUSHORT / ","  getUSHORT etBYTE "," glyphIdArray [] etBYTE ","  getBYTE etBYTE ","enk + table [] ","etable [] [] / ctable [] ","enk + table [] == ","etable [] [] / ctable [] == ","encodin getUSHORT Tables each ","encodinglyphIdArray [] Tables each ","encodin getBYTE Tables each ","enk + odingTables eak + h ","etable [] [] / coditable [] [] / gTables each ","encodin getUSHORT Tables [] []= ","encodinglyphIdArray [] Tables [] []= ","encodin getBYTE Tables [] []= ","enk + odingTables [] []= ","etable [] [] / coditable [] [] / gTables [] []= ","encodin getUSHORT Tables [] ","encodinglyphIdArray [] Tables [] ","encodin getBYTE Tables [] ","enk + odingTables [] ","etable [] [] / coditable [] [] / gTables [] ","numEncodin getUSHORT Tables times ","numEncodinglyphIdArray [] Tables times ","numEncodin getBYTE Tables times ","numEnk + odingTables times ","table [] [] / umEtable [] [] / coditable [] [] / gTables times ","indexToLok +  []= ","itable [] [] / dexToLoc []= ","table [] [] /  times ","  getUSHORT etUSHORT * "," glyphIdArray [] etUSHORT * ","  getBYTE etUSHORT * ","  getUSHORT etSHORT == "," glyphIdArray [] etSHORT == ","  getBYTE etSHORT == ","  getUSHORT etULONG != "," glyphIdArray [] etULONG != ","  getBYTE etULONG != ","table length  times ","table [] [] / umTables times ","subset getUSHORT lyphs_tmp []= ","subsetglyphIdArray [] lyphs_tmp []= ","subset getBYTE lyphs_tmp []= "]}," RBPDF getBYTE":{"type":"method","name":"getBYTE","children":[],"call":["v [] to_i ","v [] ","str [] unpack ","str [] ","str [] unpack  [] to_i ","str [] unpack  [] "]}," RBPDF getSHORT":{"type":"method","name":"getSHORT","children":[],"call":["v [] to_i ","v [] ","str [] unpack ","str [] ","str [] unpack  [] to_i ","str [] unpack  [] "]}," RBPDF getUSHORT":{"type":"method","name":"getUSHORT","children":[],"call":["v [] to_i ","v [] ","str [] unpack ","str [] ","str [] unpack  [] to_i ","str [] unpack  [] "]}," RBPDF getULONG":{"type":"method","name":"getULONG","children":[],"call":["v [] to_i ","v [] ","str [] unpack ","str [] ","str [] unpack  [] to_i ","str [] unpack  [] "]}," RBPDF get_image_file":{"type":"method","name":"get_image_file","children":[],"call":["tmpFile close ","tmpFile nil? ","tmpFile print ","res body ","http get ","uri path ","Net HTTP  start ","uri port ","uri host ","tmpFile binmode ","Tempfile  new ","File  extname ","URI  parse ","File  join ","ERB Util  url_encode ","File  basename ","File  dirname ","CGI  escape ","tmpFile fsync ","Tempfile  new  close ","Tempfile  new  nil? ","Tempfile  new  print ","http get  body ","URI  parse  path ","URI  parse  port ","URI  parse  host ","Tempfile  new  binmode ","File  File  extname  ","Tempfile  new  fsync "]}," RBPDF proc_image_file":{"type":"method","name":"proc_image_file","children":[],"call":["tmpFile close "," logger error ","err message "," logger ","tmpFile path "," get_image_file ","src =~ "," get_image_file  close "," get_image_file  path "]}," RBPDF getrawstream":{"type":"method","name":"getrawstream","children":[],"call":[" encrypt_data ","n <= "]}," RBPDF Button":{"type":"method","name":"Button","children":[],"call":[" Annotation ","opt []= "," addJavascriptObject ","opt [] << ","opt [] ","val to_i ","1 << ","val each ","val is_a? ","key == "," textstring ","val empty? ! ","val empty? "," datastring ","bmode include? ","action each ","action is_a? ","action empty? ","popt merge "," setGraphicVars ","popt [] [] << ","popt [] [] ","popt [] "," multi_cell "," SetFillColor "," SetLineStyle "," getGraphicVars ","popt [] []= ","popt []= "," sprintf ","fontkey + ","@annotation_fonts []= ","@annotation_fonts include? ","@fontkeys index "," getAnnotOptFromJSProp ","prop []= "," getFormDefaultProp merge "," getFormDefaultProp ","@javascript << "," addfield ","y == ","x == ","popt merge  []= ","popt merge  [] << ","popt merge  [] ","ppopt merge  merge "," getAnnotOptFromJSProp  merge ","ppopt merge  [] [] << "," getAnnotOptFromJSProp  [] [] << ","ppopt merge  [] [] "," getAnnotOptFromJSProp  [] [] ","ppopt merge  [] "," getAnnotOptFromJSProp  [] ","ppopt merge  [] []= "," getAnnotOptFromJSProp  [] []= ","ppopt merge  []= "," getAnnotOptFromJSProp  []= ","@fontkeys index  + ","@@fontkeys index s index "," getFormDefaultProp merge  []= "]}," RBPDF CheckBox":{"type":"method","name":"CheckBox","children":[],"call":[" Annotation ","opt []= "," empty_string ","popt merge ","popt [] [] []= ","popt [] [] ","popt [] ","popt [] []= ","popt []= "," sprintf ","fontkey + ","@annotation_fonts []= ","@annotation_fonts include? ","@fontkeys index "," AddFont "," getAnnotOptFromJSProp ","prop []= "," getFormDefaultProp merge "," getFormDefaultProp ","prop [] "," addfield ","y == ","x == ","popt merge  []= ","ppopt merge  merge "," getAnnotOptFromJSProp  merge ","ppopt merge  [] [] []= "," getAnnotOptFromJSProp  [] [] []= ","ppopt merge  [] [] "," getAnnotOptFromJSProp  [] [] ","ppopt merge  [] "," getAnnotOptFromJSProp  [] ","ppopt merge  [] []= "," getAnnotOptFromJSProp  [] []= ","ppopt merge  []= "," getAnnotOptFromJSProp  []= ","@fontkeys index  + ","@@fontkeys index s index "," getFormDefaultProp merge  []= "," getFormDefaultProp merge  [] "]}," RBPDF ComboBox":{"type":"method","name":"ComboBox","children":[],"call":[" Annotation ","opt []= ","popt merge "," setGraphicVars ","popt [] [] << ","popt [] [] ","popt [] "," multi_cell "," getGraphicVars ","popt [] []= ","popt []= "," sprintf ","fontkey + ","s << ","v [] ","v is_a? ","values each ","@annotation_fonts []= ","@annotation_fonts include? ","@fontkeys index "," getAnnotOptFromJSProp ","prop []= "," getFormDefaultProp merge "," getFormDefaultProp ","@javascript << ","s [] "," addfield ","y == ","x == ","popt merge  []= ","ppopt merge  merge "," getAnnotOptFromJSProp  merge ","ppopt merge  [] [] << "," getAnnotOptFromJSProp  [] [] << ","ppopt merge  [] [] "," getAnnotOptFromJSProp  [] [] ","ppopt merge  [] "," getAnnotOptFromJSProp  [] ","ppopt merge  [] []= "," getAnnotOptFromJSProp  [] []= ","ppopt merge  []= "," getAnnotOptFromJSProp  []= ","@fontkeys index  + ","@@fontkeys index s index "," getFormDefaultProp merge  []= "]}," RBPDF ListBox":{"type":"method","name":"ListBox","children":[],"call":[" Annotation ","opt []= ","popt merge "," setGraphicVars ","popt [] [] << ","popt [] [] ","popt [] "," multi_cell "," getGraphicVars ","popt [] []= ","popt []= "," sprintf ","fontkey + ","s << ","v [] ","v is_a? ","values each ","@annotation_fonts []= ","@annotation_fonts include? ","@fontkeys index "," getAnnotOptFromJSProp "," getFormDefaultProp merge "," getFormDefaultProp ","@javascript << ","s [] "," addfield ","y == ","x == ","popt merge  []= ","ppopt merge  merge "," getAnnotOptFromJSProp  merge ","ppopt merge  [] [] << "," getAnnotOptFromJSProp  [] [] << ","ppopt merge  [] [] "," getAnnotOptFromJSProp  [] [] ","ppopt merge  [] "," getAnnotOptFromJSProp  [] ","ppopt merge  [] []= "," getAnnotOptFromJSProp  [] []= ","ppopt merge  []= "," getAnnotOptFromJSProp  []= ","@fontkeys index  + ","@@fontkeys index s index "]}," RBPDF RadioButton":{"type":"method","name":"RadioButton","children":[],"call":[" Annotation ","opt []= ","popt merge ","popt [] []= ","popt [] ","popt [] [] []= ","popt [] [] ","popt []= "," sprintf ","fontkey + ","@annotation_fonts []= ","@annotation_fonts include? ","@fontkeys index "," AddFont "," getAnnotOptFromJSProp ","prop []= "," getFormDefaultProp merge "," getFormDefaultProp ","@radiobutton_groups [] [] << ","@annot_obj_id + ","@radiobutton_groups [] [] ","@radiobutton_groups [] ","@radio_groups << ","@radiobutton_groups [] []= "," empty_string "," addfield ","y == ","x == ","popt merge  []= ","ppopt merge  merge "," getAnnotOptFromJSProp  merge ","ppopt merge  [] []= "," getAnnotOptFromJSProp  [] []= ","ppopt merge  [] "," getAnnotOptFromJSProp  [] ","ppopt merge  [] [] []= "," getAnnotOptFromJSProp  [] [] []= ","ppopt merge  [] [] "," getAnnotOptFromJSProp  [] [] ","ppopt merge  []= "," getAnnotOptFromJSProp  []= ","@fontkeys index  + ","@@fontkeys index s index "," getFormDefaultProp merge  []= "]}," RBPDF TextField":{"type":"method","name":"TextField","children":[],"call":[" Annotation ","opt []= ","opt delete ","popt merge ","popt [] []= ","popt [] "," setGraphicVars ","popt [] [] << ","popt [] [] "," multi_cell ","opt [] "," getGraphicVars "," empty_string ! "," empty_string ","popt []= "," sprintf ","fontkey + ","@annotation_fonts []= ","@annotation_fonts include? ","@fontkeys index "," getAnnotOptFromJSProp "," getFormDefaultProp merge "," getFormDefaultProp "," addfield ","y == ","x == ","popt merge  []= ","popt merge  delete ","ppopt merge  merge "," getAnnotOptFromJSProp  merge ","ppopt merge  [] []= "," getAnnotOptFromJSProp  [] []= ","ppopt merge  [] "," getAnnotOptFromJSProp  [] ","ppopt merge  [] [] << "," getAnnotOptFromJSProp  [] [] << ","ppopt merge  [] [] "," getAnnotOptFromJSProp  [] [] ","popt merge  [] ","ppopt merge  []= "," getAnnotOptFromJSProp  []= ","@fontkeys index  + ","@@fontkeys index s index "]}," RBPDF getFormDefaultProp":{"type":"method","name":"getFormDefaultProp","children":[],"call":[]}," RBPDF setFormDefaultProp":{"type":"method","name":"setFormDefaultProp","children":[],"call":[]}," RBPDF getAnnotOptFromJSProp":{"type":"method","name":"getAnnotOptFromJSProp","children":[],"call":["opt []= ","prop [] ","opt [] []= ","opt [] ","prop [] [] ","prop [] each_with_index ","prop [] is_a? ","1 << ","(send\n  (int 1) :<<\n  (int 2)) ~ ","prop [] == ","prop [] to_i "," convertHTMLColorToDec ","opt [] [] []= ","opt [] [] ","opt [] [] [] []= ","opt [] [] [] "]}," RBPDF addfield":{"type":"method","name":"addfield","children":[],"call":["@javascript << "," JScolor ","k [] == ","k [] ","prop each "," sprintf ","(send\n  (send\n    (ivar :@h) :-\n    (lvar :y)) :-\n  (lvar :h)) * + ","(send\n  (send\n    (ivar :@h) :-\n    (lvar :y)) :-\n  (lvar :h)) * ","@h - - ","@h - ","(send\n  (lvar :x) :+\n  (lvar :w)) * ","x + ","(send\n  (ivar :@h) :-\n  (lvar :y)) * + ","(send\n  (ivar :@h) :-\n  (lvar :y)) * ","x * "," PageNo - "," PageNo ","x - ","(send\n  (lvar :x - ) :+\n  (lvar :w)) * ","x -  + ","x -  * ","x -  - "]}," RBPDF JScolor":{"type":"method","name":"JScolor","children":[],"call":["color. + "," Error ","Invalid color:  + ","aColors include? "," sprintf ","color [] to_i / ","color [] to_i ","color [] ","color [] == "]}," RBPDF putjavascript":{"type":"method","name":"putjavascript","children":[],"call":[" out "," textstring ","val [] ","@offsets []= ","@js_objects each ","@js_objects empty? ","out << "," newobj ","@javascript empty? ","@n + "," sprintf ","@javascript index "]}," RBPDF addJavascriptObject":{"type":"method","name":"addJavascriptObject","children":[],"call":["@js_objects []= "]}," RBPDF IncludeJS":{"type":"method","name":"IncludeJS","children":[],"call":["@javascript << "]}}