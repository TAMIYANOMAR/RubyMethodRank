{" Sentry sdk_meta":{"type":"method","name":"sdk_meta","children":[],"call":[]}," Sentry Rails Overrides OldStreamingReporter log_error_with_raven":{"type":"method","name":"log_error_with_raven","children":[],"call":[" log_error_without_raven ","Sentry  capture_exception ","Sentry Rails  capture_exception "]}," Sentry Rails Overrides OldStreamingReporter included":{"type":"method","name":"included","children":[],"call":[]}," Sentry Rails Overrides StreamingReporter log_error":{"type":"method","name":"log_error","children":[],"call":["Sentry  capture_exception ","Sentry Rails  capture_exception "]}," Sentry Rails Overrides DebugExceptionsCatcher render_exception":{"type":"method","name":"render_exception","children":[],"call":["Sentry  capture_exception ","scope set_rack_env ","Sentry  with_scope ","env_or_request env ","env_or_request respond_to? ","scope set_rack_env_or_request env  ","env_or_request env _or_request env_or_request env  ","env_or_request env _or_request respond_to? "]}," Sentry Rails ControllerTransaction included":{"type":"method","name":"included","children":[],"call":[]}," Sentry Rails ControllerMethods with_request_scope":{"type":"method","name":"with_request_scope","children":[],"call":["scope set_rack_env "," request env "," request ","Sentry  with_scope "]}," Sentry Rails ControllerMethods capture_exception":{"type":"method","name":"capture_exception","children":[],"call":["Sentry  capture_exception "," with_request_scope ","Sentry Rails  capture_exception "]}," Sentry Rails ControllerMethods capture_message":{"type":"method","name":"capture_message","children":[],"call":["Sentry  capture_message "," with_request_scope ","Sentry Rails  capture_message "]}," Sentry Rails Configuration initialize":{"type":"method","name":"initialize","children":[],"call":["Set  new "," Rails  application config assets prefix "," Rails  application config assets "," Rails  application config "," Rails  application ","Sentry Rails ACTIVE_SUPPORT_LOGGER_SUBSCRIPTION_ITEMS_DEFAULT  dup "]}," Sentry Configuration post_initialization_callback":{"type":"method","name":"post_initialization_callback","children":[],"call":["@excluded_exceptions concat ","Sentry Rails Configuration  new ","@excluded_exceptions concat  concat "]}," Sentry Rails CaptureException collect_exception":{"type":"method","name":"collect_exception","children":[],"call":["env [] "]}," Sentry Rails Breadcrumb ActiveSupportLogger detach":{"type":"method","name":"detach","children":[],"call":[" ActiveSupport Notifications  unsubscribe "]}," Sentry Rails Breadcrumb ActiveSupportLogger inject":{"type":"method","name":"inject","children":[],"call":[" add "," ActiveSupport Notifications  subscribe ","started is_a? "]}," Sentry Rails Breadcrumb ActiveSupportLogger add":{"type":"method","name":"add","children":[],"call":["crumb timestamp= ","started to_i ","crumb category= ","crumb data= ","Sentry  get_current_scope breadcrumbs record ","Sentry  get_current_scope breadcrumbs ","Sentry  get_current_scope ","Sentry  add_breadcrumb ","Sentry Breadcrumb  new ","data delete ","data dup ","data key? ","data key ","data is_a? "," cleanup_data ","name start_with? ","data slice ","ALLOWED_LIST  [] ","@allowed_keys [] ","Sentry Breadcrumb  new  timestamp= ","Sentry Breadcrumb  new  category= ","Sentry Breadcrumb  new  data= ","crumb data dup = ","crumb data slice = ","Sentry  get_current_scope breadSentry Breadcrumb  new s record ","Sentry  get_current_scope breadSentry Breadcrumb  new s ","Sentry  add_breadSentry Breadcrumb  new  ","Sentry BreadSentry Breadcrumb  new   new ","data dup  delete ","data slice  delete ","data dup  dup ","data slice  dup ","data dup  key? ","data slice  key? ","data dup  key ","data slice  key ","data dup  is_a? ","data slice  is_a? "," cleanup_data dup  "," cleanup_data slice  ","data dup  slice ","data slice  slice ","@ALLOWED_LIST  []  [] "]}," Sentry Rails BacktraceCleaner initialize":{"type":"method","name":"initialize","children":[],"call":["line sub ","line =~ "," add_filter ","line from ","@root size ","line start_with? ","Sentry  configuration project_root ","Sentry  configuration "," remove_silencers! "]}," Sentry Rails ActiveJobExtensions sentry_context":{"type":"method","name":"sentry_context","children":[],"call":["ctx []= ","job provider_job_id ","job respond_to? ","job locale ","job job_id ","job scheduled_at ","job arguments ","job class name ","job class "," locale "," provider_job_id "," job_id "," scheduled_at "," arguments "," class name "," class "," sentry_serialize_arguments "]}," Sentry Rails ActiveJobExtensions already_supported_by_specific_integration?":{"type":"method","name":"already_supported_by_specific_integration?","children":[],"call":["ALREADY_SUPPORTED_SENTRY_ADAPTERS  include? ","job class queue_adapter class to_s ","job class queue_adapter class ","job class queue_adapter ","job class ","Sentry  configuration rails skippable_job_adapters include? ","Sentry  configuration rails skippable_job_adapters ","Sentry  configuration rails ","Sentry  configuration "]}," Sentry Rails ActiveJobExtensions capture_and_reraise_with_sentry":{"type":"method","name":"capture_and_reraise_with_sentry","children":[],"call":[" raise ","Sentry  capture_exception "," sentry_context "," rescue_with_handler ","block call ","Sentry Rails  capture_exception ","job provider_job_id ","job job_id "," finish_transaction ","scope set_span ","Sentry  start_transaction ","scope transaction_name ","scope set_transaction_name ","job class name ","job class ","job is_a? "," provider_job_id "," job_id "," finish_sentry_transaction "," is_a? "," class name "," class "," finish_Sentry  start_transaction  ","Sentry  start_Sentry  start_transaction  ","scope Sentry  start_transaction _name ","scope set_Sentry  start_transaction _name "," finish_sentry_Sentry  start_transaction  "]}," Sentry Rails ActiveJobExtensions included":{"type":"method","name":"included","children":[],"call":[]}," Sentry Rails Tracing get_current_transaction":{"type":"method","name":"get_current_transaction","children":[],"call":[]}," Sentry Rails Tracing remove_active_support_notifications_patch":{"type":"method","name":"remove_active_support_notifications_patch","children":[{"type":"method","name":"instrument","children":[],"asgn":[],"call":[]}],"call":[]}," Sentry Rails Tracing patch_active_support_notifications":{"type":"method","name":"patch_active_support_notifications","children":[{"type":"method","name":"instrument","children":[],"asgn":[{"type":"local","name":"is_public_event","value":"name [] != "},["name [] != "]],"call":["payload []= ","Time  now utc to_f ","Time  now utc ","Time  now ","name [] != ","name [] "]}],"call":[]}," Sentry Rails Tracing unsubscribe_tracing_events":{"type":"method","name":"unsubscribe_tracing_events","children":[],"call":[]}," Sentry Rails Tracing subscribe_tracing_events":{"type":"method","name":"subscribe_tracing_events","children":[],"call":[]}," Sentry Rails Tracing ActiveRecordSubscriber subscribe!":{"type":"method","name":"subscribe!","children":[],"call":[]}," Sentry Rails Tracing ActionViewSubscriber unsubscribe!":{"type":"method","name":"unsubscribe!","children":[],"call":[]}," Sentry Rails Tracing ActionViewSubscriber subscribe!":{"type":"method","name":"subscribe!","children":[],"call":[]}," Sentry Rails Tracing ActionControllerSubscriber subscribe!":{"type":"method","name":"subscribe!","children":[],"call":[]}," Sentry Rails Tracing AbstractSubscriber record_on_current_span":{"type":"method","name":"record_on_current_span","children":[],"call":[" block_given? ","span set_timestamp ","span start_timestamp + ","duration / ","span start_timestamp ","transaction start_child ","transaction sampled ","scope get_transaction ","Sentry  get_current_scope ","options [] ","child_span set_timestamp ","child_span start_timestamp + ","child_span start_timestamp ","Sentry  with_child_span ","transaction start_child  set_timestamp ","transaction start_child  start_timestamp + ","transaction start_child  start_timestamp ","scope get_transaction  start_child ","scope get_transaction  sampled ","scope get_scope get_transaction  ","Sentry  get_current_scope  get_transaction ","Sentry  get_current_Sentry  get_current_scope  ","child_transaction start_child  set_timestamp ","child_transaction start_child  start_timestamp + ","child_transaction start_child  start_timestamp ","Sentry  with_child_transaction start_child  "]}," Sentry Rails Tracing AbstractSubscriber subscribe_to_event":{"type":"method","name":"subscribe_to_event","children":[],"call":["event payload ","event duration ","Tracing  get_current_transaction ","ActiveSupport Notifications  subscribe ","finish to_f - ","start to_f ","finish to_f "," Rails  version to_i == "," Rails  version to_i "," Rails  version ","ActiveSupport Notifications Event  new ","event_names each ","ActiveSupport Notifications Event  new  payload ","event finish to_f -  ","ActiveSupport Notifications Event  new  duration ","ActiveSupport Notifications Event  new _names each "]}," Sentry Rails Tracing AbstractSubscriber unsubscribe!":{"type":"method","name":"unsubscribe!","children":[],"call":["ActiveSupport Notifications  unsubscribe "," EVENT_NAMES  each "]}," Sentry Rails Tracing AbstractSubscriber subscribe!":{"type":"method","name":"subscribe!","children":[],"call":[" raise "]}," Sentry Railtie activate_tracing":{"type":"method","name":"activate_tracing","children":[],"call":["Sentry Rails Tracing  patch_active_support_notifications ","Sentry Rails Tracing  subscribe_tracing_events ","Sentry  configuration tracing_enabled? ","Sentry  configuration ","Sentry Rails Tracing  register_subscribers ","Sentry  configuration rails tracing_subscribers ","Sentry  configuration rails ","Sentry  configuration instrumenter == ","Sentry  configuration instrumenter ","Sentry Rails Tracing  register_Sentry  configuration rails tracing_subscribers  ","Sentry  configuration rails tracing_Sentry  configuration rails tracing_subscribers  "]}," Sentry Railtie override_streaming_reporter":{"type":"method","name":"override_streaming_reporter","children":[],"call":["ActionView StreamingTemplateRenderer Body  send ","ActiveSupport  on_load "," require "]}," Sentry Railtie override_exceptions_handling":{"type":"method","name":"override_exceptions_handling","children":[],"call":["exceptions_class send "," require ","Sentry  configuration rails report_rescued_exceptions ","Sentry  configuration rails ","Sentry  configuration "]}," Sentry Railtie setup_backtrace_cleanup_callback":{"type":"method","name":"setup_backtrace_cleanup_callback","children":[],"call":["Sentry  configuration backtrace_cleanup_callback= ","backtrace_cleaner clean "," lambda ","Sentry  configuration ","Sentry Rails BacktraceCleaner  new ","Sentry  configuration backtrace_cleanup_callback ","Sentry Rails BacktraceCleaner  new  clean "]}," Sentry Railtie inject_breadcrumbs_logger":{"type":"method","name":"inject_breadcrumbs_logger","children":[],"call":["Sentry Rails Breadcrumb ActiveSupportLogger  inject "," require ","Sentry  configuration breadcrumbs_logger include? ","Sentry  configuration breadcrumbs_logger ","Sentry  configuration ","Sentry Rails Breadcrumb MonotonicActiveSupportLogger  inject "," warn "," Rails  version to_f < "," Rails  version to_f "," Rails  version ","Sentry  configuration rails active_support_logger_subscription_items ","Sentry  configuration rails "]}," Sentry Railtie extend_controller_methods":{"type":"method","name":"extend_controller_methods","children":[],"call":["ActionController Live  send "," include ","ActiveSupport  on_load "," require "]}," Sentry Railtie extend_active_job":{"type":"method","name":"extend_active_job","children":[],"call":["ActiveJob Base  send "," require "]}," Sentry Railtie configure_sentry_logger":{"type":"method","name":"configure_sentry_logger","children":[],"call":["Sentry  configuration logger= "," Rails  logger ","Sentry  configuration "]}," Sentry Rails CaptureExceptions collect_exception":{"type":"method","name":"collect_exception","children":[],"call":["env [] "]}," Sentry Rails RescuedExceptionInterceptor call":{"type":"method","name":"call","children":[],"call":[" raise ","env []= ","Sentry  configuration rails report_rescued_exceptions ","Sentry  configuration rails ","Sentry  configuration ","@app call ","Sentry  initialized? ","scope set_rack_env ","scope rack_env dup ","scope rack_env ","Sentry  get_current_scope ","request show_exceptions? ","ActionDispatch Request  new ","event transaction= ","scope add_event_processor ","scope transaction_name ","copied_env []= "," report_rescued_exceptions? ","Sentry Rails  capture_exception ","Sentry  get_current_scope  set_rack_env ","Sentry  get_current_scope  rack_env dup ","Sentry  get_current_scope  rack_env ","Sentry  get_current_Sentry  get_current_scope  ","ActionDispatch Request  new  show_exceptions? ","event scope transaction_name = ","Sentry  get_current_scope  add_event_processor ","Sentry  get_current_scope  transaction_name ","scope scope transaction_name _name ","scope rack_env dup  []= "]}," Sentry Rails RescuedExceptionInterceptor initialize":{"type":"method","name":"initialize","children":[],"call":[]}," Sentry Rails CaptureExceptions capture_exception":{"type":"method","name":"capture_exception","children":[],"call":["Sentry Rails  capture_exception ","current_scope set_transaction_name ","current_scope rack_env [] ","current_scope rack_env ","Sentry  get_current_scope ","env []= ","event event_id ","Sentry Rails  capture_exception tap ","Sentry  configuration rails report_rescued_exceptions ! ","Sentry  configuration rails report_rescued_exceptions ","Sentry  configuration rails ","Sentry  configuration "," show_exceptions? ","env [] ","request show_exceptions? ","ActionDispatch Request  new ","Sentry  get_current_scope  set_transaction_name ","Sentry  get_current_scope  rack_env [] ","Sentry  get_current_scope  rack_env ","Sentry  get_Sentry  get_current_scope  ","ActionDispatch Request  new  show_exceptions? "]}," Sentry Rails CaptureExceptions transaction_op":{"type":"method","name":"transaction_op","children":[],"call":["rails.request freeze ","http.server freeze "]}," Sentry Rails Breadcrumb ActiveSupportLogger cleanup_data":{"type":"method","name":"cleanup_data","children":[],"call":["data delete ","data key? ","IGNORED_DATA_TYPES  each "]}," Sentry Railtie configure_project_root":{"type":"method","name":"configure_project_root","children":[],"call":["Sentry  configuration project_root= "," Rails  root to_s "," Rails  root ","Sentry  configuration "]}," Sentry Railtie override_file_handler":{"type":"method","name":"override_file_handler","children":[],"call":["ActionDispatch FileHandler  send ","ActiveSupport  on_load "," require "]}," Sentry Rails Overrides FileHandler serve":{"type":"method","name":"serve","children":[],"call":["current_transaction instance_variable_set ","Sentry  get_current_scope span ","Sentry  get_current_scope ","Sentry  initialized? ","Sentry  get_current_scope span  instance_variable_set "]}," Sentry Rails CaptureExceptions finish_span":{"type":"method","name":"finish_span","children":[],"call":["span finish ","span set_http_status ","span name match? ! ","span name match? ","span name ","@assets_regex nil? "]}," Sentry Rails CaptureExceptions initialize":{"type":"method","name":"initialize","children":[],"call":[" Rails  application config assets prefix "," Rails  application config assets "," Rails  application config "," Rails  application ","Sentry  configuration rails assets_regexp ","Sentry  configuration rails ","Sentry  configuration ","Sentry  initialized? "]}," Sentry Railtie configure_trusted_proxies":{"type":"method","name":"configure_trusted_proxies","children":[],"call":[" Array "," Rails  application config action_dispatch trusted_proxies "," Rails  application config action_dispatch "," Rails  application config "," Rails  application ","Sentry  configuration trusted_proxies ","Sentry  configuration "]}," Sentry Rails CaptureExceptions start_transaction":{"type":"method","name":"start_transaction","children":[],"call":["transaction instance_variable_set ","transaction name match? ","transaction name ","Sentry  start_transaction ","Sentry Transaction  from_sentry_trace ","options merge! ","scope transaction_name match? ","scope transaction_name "," transaction_op ","env [] ","scope transaction_source ","Sentry  continue_trace ","Sentry Transaction  from_sentry_trace  instance_variable_set ","Sentry  continue_trace  instance_variable_set ","Sentry Transaction  from_sentry_trace  name match? ","Sentry  continue_trace  name match? ","Sentry Transaction  from_sentry_trace  name ","Sentry  continue_trace  name ","Sentry  start_Sentry Transaction  from_sentry_trace  ","Sentry  start_Sentry  continue_trace  ","Sentry Transaction  from_env []  ","scope Sentry Transaction  from_sentry_trace _name match? ","scope Sentry  continue_trace _name match? ","scope Sentry Transaction  from_sentry_trace _name ","scope Sentry  continue_trace _name "," Sentry Transaction  from_sentry_trace _op "," Sentry  continue_trace _op ","scope Sentry Transaction  from_sentry_trace _source ","scope Sentry  continue_trace _source "]}," Sentry BackgroundWorker perform":{"type":"method","name":"perform","children":[],"call":["block call ","ActiveRecord Base  connection_pool with_connection ","ActiveRecord Base  connection_pool ","@executor post "]}," Sentry Rails ActiveJobExtensions finish_transaction":{"type":"method","name":"finish_transaction","children":[],"call":["transaction finish ","transaction set_http_status "]}," Sentry Railtie patch_background_worker":{"type":"method","name":"patch_background_worker","children":[],"call":[" require "]}," Sentry Rails Tracing subscribers":{"type":"method","name":"subscribers","children":[],"call":[]}," Sentry Rails Tracing register_subscribers":{"type":"method","name":"register_subscribers","children":[],"call":[]}," Sentry Rails RescuedExceptionInterceptor report_rescued_exceptions?":{"type":"method","name":"report_rescued_exceptions?","children":[],"call":["Sentry  configuration rails report_rescued_exceptions ","Sentry  configuration rails ","Sentry  configuration "]}," Sentry Rails InstrumentPayloadCleanupHelper cleanup_data":{"type":"method","name":"cleanup_data","children":[],"call":["data delete ","data key? ","IGNORED_DATA_TYPES  each "]}," Sentry Rails Breadcrumb MonotonicActiveSupportLogger detach":{"type":"method","name":"detach","children":[],"call":[" ActiveSupport Notifications  unsubscribe "]}," Sentry Rails Breadcrumb MonotonicActiveSupportLogger inject":{"type":"method","name":"inject","children":[],"call":[" add ","started is_a? "," ActiveSupport Notifications  monotonic_subscribe "]}," Sentry Rails Breadcrumb MonotonicActiveSupportLogger add":{"type":"method","name":"add","children":[],"call":["Sentry  add_breadcrumb ","Sentry Breadcrumb  new ","started to_i "," cleanup_data ","data dup ","data is_a? ","name start_with? ","Sentry  add_breadSentry Breadcrumb  new  ","Sentry BreadSentry Breadcrumb  new   new "," cleanup_data dup  ","data dup  dup ","data dup  is_a? "]}," Sentry Rails Tracing subscribed_tracing_events":{"type":"method","name":"subscribed_tracing_events","children":[],"call":[]}," Sentry Rails Tracing ActiveStorageSubscriber subscribe!":{"type":"method","name":"subscribe!","children":[],"call":[]}," Sentry BackgroundWorker _perform":{"type":"method","name":"_perform","children":[],"call":["block call ","ActiveRecord Base  connection_pool with_connection ","ActiveRecord Base  connection_pool ","ActiveRecord Base  connection_pool release_connection ","ActiveRecord Base  connected? "]}," Sentry Rails ActiveJobExtensions already_supported_by_sentry_integration?":{"type":"method","name":"already_supported_by_sentry_integration?","children":[],"call":["Sentry  configuration rails skippable_job_adapters include? "," class queue_adapter class to_s "," class queue_adapter class "," class queue_adapter "," class ","Sentry  configuration rails skippable_job_adapters ","Sentry  configuration rails ","Sentry  configuration "]}," Sentry Rails ActiveJobExtensions finish_sentry_transaction":{"type":"method","name":"finish_sentry_transaction","children":[],"call":["transaction finish ","transaction set_http_status "]}," Sentry Rails ActiveJobExtensions perform_now":{"type":"method","name":"perform_now","children":[],"call":[" capture_and_reraise_with_sentry ","Sentry  with_scope "," already_supported_by_sentry_integration? ","Sentry  initialized? ! ","Sentry  initialized? ","SentryReporter  record "]}," Sentry Rails ActionCableExtensions Channel Actions dispatch_action":{"type":"method","name":"dispatch_action","children":[],"call":["ErrorHandler  capture "," class name "," class "," connection env "," connection "," params "]}," Sentry Rails ActionCableExtensions Channel Subscriptions sentry_capture":{"type":"method","name":"sentry_capture","children":[],"call":["ErrorHandler  capture "," class name "," class "," connection env "," connection "," params "]}," Sentry Rails ActionCableExtensions Channel Subscriptions included":{"type":"method","name":"included","children":[],"call":[]}," Sentry Rails ActionCableExtensions Connection handle_close":{"type":"method","name":"handle_close","children":[],"call":["ErrorHandler  capture "," class name "," class "," env "]}," Sentry Rails ActionCableExtensions Connection handle_open":{"type":"method","name":"handle_open","children":[],"call":["ErrorHandler  capture "," class name "," class "," env "]}," Sentry Rails ActionCableExtensions ErrorHandler finish_transaction":{"type":"method","name":"finish_transaction","children":[],"call":["transaction finish ","transaction set_http_status "]}," Sentry Rails ActionCableExtensions ErrorHandler start_transaction":{"type":"method","name":"start_transaction","children":[],"call":["Sentry  start_transaction ","Sentry Transaction  from_sentry_trace ","rails.action_cable freeze ","env [] ","scope transaction_source ","scope transaction_name ","Sentry  continue_trace ","Sentry  start_Sentry Transaction  from_sentry_trace  ","Sentry  start_Sentry  continue_trace  ","Sentry Transaction  from_env []  ","scope Sentry Transaction  from_sentry_trace _source ","scope Sentry  continue_trace _source ","scope Sentry Transaction  from_sentry_trace _name ","scope Sentry  continue_trace _name "]}," Sentry Rails ActionCableExtensions ErrorHandler capture":{"type":"method","name":"capture","children":[],"call":[" raise "," finish_transaction ","Sentry Rails  capture_exception ","block call ","scope set_span "," start_transaction ","scope transaction_name ","scope set_transaction_name ","scope set_context ","scope set_rack_env ","Sentry  with_scope ","connection env ","connection respond_to? ","Sentry  initialized? "," finish_ start_transaction  "," start_ start_transaction  ","scope  start_transaction _name ","scope set_ start_transaction _name ","scope set_rack_connection env  ","connection connection env  "]}," Sentry Railtie register_error_subscriber":{"type":"method","name":"register_error_subscriber","children":[],"call":["app executor error_reporter subscribe ","Sentry Rails ErrorSubscriber  new ","app executor error_reporter ","app executor "," require "]}," Sentry Rails ErrorSubscriber report":{"type":"method","name":"report","children":[],"call":["Sentry Rails  capture_exception ","error instance_variable_get ","tags merge! ","context delete ","context dup ","context [] is_a? ","context [] ","tags []= ","SKIP_SOURCES  match? ","context dup  delete ","context dup  dup ","context dup  [] is_a? ","context dup  [] "]}," Sentry Rails ActiveJobExtensions sentry_serialize_arguments":{"type":"method","name":"sentry_serialize_arguments","children":[],"call":["argument to_global_id to_s ","argument to_global_id ","v respond_to? "," lambda "," sentry_serialize_arguments ","argument map ","argument transform_values "]}," Sentry Rails ActiveJobExtensions SentryReporter sentry_serialize_arguments":{"type":"method","name":"sentry_serialize_arguments","children":[],"call":["argument to_global_id to_s ","argument to_global_id ","v respond_to? "," lambda "," sentry_serialize_arguments ","argument map ","argument transform_values "]}," Sentry Rails ActiveJobExtensions SentryReporter sentry_context":{"type":"method","name":"sentry_context","children":[],"call":["job locale ","job provider_job_id ","job job_id ","job scheduled_at "," sentry_serialize_arguments ","job arguments ","job class name ","job class "]}," Sentry Rails ActiveJobExtensions SentryReporter finish_sentry_transaction":{"type":"method","name":"finish_sentry_transaction","children":[],"call":["transaction finish ","transaction set_http_status "]}," Sentry Rails ActiveJobExtensions SentryReporter record":{"type":"method","name":"record","children":[],"call":[" raise ","Sentry Rails  capture_exception ","job provider_job_id ","job job_id "," sentry_context "," finish_sentry_transaction "," tap ","scope set_span ","Sentry  start_transaction ","scope transaction_name ","job is_a? ","scope set_transaction_name ","job class name ","job class ","Sentry  with_scope ","scope transaction_source "," finish_sentry_Sentry  start_transaction  ","Sentry  start_Sentry  start_transaction  ","scope Sentry  start_transaction _name ","scope set_Sentry  start_transaction _name ","scope Sentry  start_transaction _source "]}," Sentry Rails ControllerTransaction sentry_around_action":{"type":"method","name":"sentry_around_action","children":[],"call":["child_span set_data "," request params "," request "," request path "," request method "," request format ","child_span set_http_status "," response status "," response ","Sentry  with_child_span ","Sentry  get_current_scope set_transaction_name ","Sentry  get_current_scope "," action_name "," class ","Sentry  initialized? "]}," Sentry Rails CaptureExceptions show_exceptions?":{"type":"method","name":"show_exceptions?","children":[],"call":["request show_exceptions? ","ActionDispatch ExceptionWrapper  new show? ","ActionDispatch ExceptionWrapper  new ","ActionDispatch Request  new ","ActionDispatch Request  new  show_exceptions? "]}}