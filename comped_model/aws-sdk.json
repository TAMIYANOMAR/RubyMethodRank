{" AWS XmlGrammar StubResponse without_wrapper":{"type":"method","name":"without_wrapper","children":[],"call":["child_rules [] ","customizations [] each_pair ","customizations [] "]}," AWS XmlGrammar StubResponse wrappers":{"type":"method","name":"wrappers","children":[],"call":["wrappers each_pair ","wrappers [] [] []= ","child_rules merge ","wrappers [] [] ","wrappers [] ","child_rules [] first ","child_rules [] ","customizations [] each_pair ","customizations [] "]}," AWS XmlGrammar StubResponse add_indexes_to_context":{"type":"method","name":"add_indexes_to_context","children":[],"call":["MetaUtils  extend_method ","indexes each ","customizations [] ","customizations []  each "]}," AWS XmlGrammar StubResponse add_child_elements_to_context":{"type":"method","name":"add_child_elements_to_context","children":[],"call":["StubResponse  new ","MetaUtils  extend_method "," stub_methods ","child_rules [] ","child_rules [] format_value ","child_rules [] empty? ","child_rules [] call ","Inflection  ruby_name "," without_wrapper ","Inflection  Inflection  ruby_name  "]}," AWS XmlGrammar StubResponse add_wrappers_to_context":{"type":"method","name":"add_wrappers_to_context","children":[],"call":["StubResponse  new ","MetaUtils  extend_method "," wrappers "]}," AWS XmlGrammar StubResponse stub_methods":{"type":"method","name":"stub_methods","children":[],"call":[" add_indexes_to_context "," add_child_elements_to_context "," add_wrappers_to_context "]}," AWS XmlGrammar StubResponse inspect":{"type":"method","name":"inspect","children":[],"call":["(send\n  (lvar :methods) :collect) sort join ","(send\n  (lvar :methods) :collect) sort ","methods collect "," public_methods - ","Object  public_methods "," public_methods ","(send\n  (lvar : public_methods - ) :collect) sort join ","(send\n  (lvar : public_methods - ) :collect) sort "," public_methods -  collect "," public_ public_methods -  - ","Object  public_ public_methods -  "," public_ public_methods -  "]}," AWS XmlGrammar StubResponse initialize":{"type":"method","name":"initialize","children":[],"call":[" stub_methods "]}," AWS XmlGrammar RootFrame initialize":{"type":"method","name":"initialize","children":[],"call":[]}," AWS XmlGrammar Frame initial_customizations":{"type":"method","name":"initial_customizations","children":[],"call":[]}," AWS XmlGrammar Frame customizations_for_child":{"type":"method","name":"customizations_for_child","children":[],"call":["CustomizationContext  new ","@customizations [] [] ","@customizations [] "]}," AWS XmlGrammar Frame ruby_name":{"type":"method","name":"ruby_name","children":[],"call":["Inflection  ruby_name "," element_name ","@customizations [] "]}," AWS XmlGrammar Frame default_value":{"type":"method","name":"default_value","children":[],"call":["Base64  decode64 ","@text strip ","@context encoding == ","@context encoding ","@context respond_to? "]}," AWS XmlGrammar Frame wrapper_methods":{"type":"method","name":"wrapper_methods","children":[],"call":["@customizations [] "]}," AWS XmlGrammar Frame wrapped?":{"type":"method","name":"wrapped?","children":[],"call":["@customizations [] "]}," AWS XmlGrammar Frame collected?":{"type":"method","name":"collected?","children":[],"call":["@customizations [] "]}," AWS XmlGrammar Frame ignored?":{"type":"method","name":"ignored?","children":[],"call":["@customizations [] "]}," AWS XmlGrammar Frame forced?":{"type":"method","name":"forced?","children":[],"call":["@customizations [] "]}," AWS XmlGrammar Frame add_mutators":{"type":"method","name":"add_mutators","children":[],"call":[" instance_variable_get ","MetaUtils  extend_method "," context "," instance_variable_set "," context respond_to? ","variable_name to_s gsub ","variable_name to_s "," context kind_of? ","variable_name to_s gsub  to_s gsub ","variable_name to_s gsub  to_s "]}," AWS XmlGrammar Frame add_mutators_for":{"type":"method","name":"add_mutators_for","children":[],"call":[" add_mutators ","child_frame getter ","child_frame setter ","child_frame ruby_name "," context kind_of? "," context "]}," AWS XmlGrammar Frame invoke_setter":{"type":"method","name":"invoke_setter","children":[],"call":[" context send ","child_frame setter "," context "," context __set_data__ ","child_frame getter "," context kind_of? "]}," AWS XmlGrammar Frame wrapper_customizations":{"type":"method","name":"wrapper_customizations","children":[],"call":["customizations merge! ","additional []= ","@customizations [] merge ","additional [] ","@customizations [] ","wrapper_frames [] ","customizations []= ","CustomizationContext  new ","CustomizationContext  new  merge! ","wrapper_frames []  []= ","@CustomizationContext  new  [] merge ","wrapper_frames []  [] ","@CustomizationContext  new  [] ","@customizations []  [] ","CustomizationContext  new  []= "]}," AWS XmlGrammar Frame wrapper_frame_for":{"type":"method","name":"wrapper_frame_for","children":[],"call":["Frame  new "," wrapper_customizations ","method_name to_s ","@wrapper_frames [] "]}," AWS XmlGrammar Frame consume_in_wrapper":{"type":"method","name":"consume_in_wrapper","children":[],"call":[" consume_child_frame ","wrapper_frame consume_child_frame ","child_frame customizations= ","child_frame dup ","child_frame customizations merge ","child_frame customizations "," add_mutators "," wrapper_frame_for "," consume_child_frame dup  ","wrapper_frame consume_child_frame dup  "," wrapper_frame_for  consume_child_frame ","child_frame dup  customizations= ","child_frame child_frame customizations merge = ","child_frame dup  dup ","child_frame dup  customizations merge ","child_frame child_frame customizations merge  merge ","child_frame dup  customizations ","child_frame child_frame customizations merge  ","  wrapper_frame_for _for "]}," AWS XmlGrammar Frame construct_context":{"type":"method","name":"construct_context","children":[],"call":["Context  new "," instance_eval ","@customizations [] "]}," AWS XmlGrammar Frame consume_initial_frame":{"type":"method","name":"consume_initial_frame","children":[],"call":[" invoke_setter ","child_frame value ","child_frame initial_collection ","child_frame collected? "," add_mutators_for ","child_frame forced? "]}," AWS XmlGrammar Frame index":{"type":"method","name":"index","children":[],"call":[" context send "," context "," root_frame index "," root_frame "," root_frame == "]}," AWS XmlGrammar Frame add_to_collection":{"type":"method","name":"add_to_collection","children":[],"call":["@customizations [] call ","@customizations [] "]}," AWS XmlGrammar Frame initial_collection":{"type":"method","name":"initial_collection","children":[],"call":["@customizations [] call ","@customizations [] "]}," AWS XmlGrammar Frame getter":{"type":"method","name":"getter","children":[],"call":["@customizations [] "]}," AWS XmlGrammar Frame setter":{"type":"method","name":"setter","children":[],"call":["@customizations [] "]}," AWS XmlGrammar Frame context":{"type":"method","name":"context","children":[],"call":[" construct_context "," parent_frame context "," parent_frame "," ignored? "]}," AWS XmlGrammar Frame value":{"type":"method","name":"value","children":[],"call":[" default_value ","@customizations [] format_value ","@customizations [] "]}," AWS XmlGrammar Frame add_text":{"type":"method","name":"add_text","children":[],"call":["@text << "]}," AWS XmlGrammar Frame close":{"type":"method","name":"close","children":[],"call":[" index []= "," context "," index ","(lvar :key) flatten each ","(lvar :key) flatten ","block call ","@customizations [] ","(lvar :block call ) flatten each ","(lvar :block call ) flatten "]}," AWS XmlGrammar Frame consume_child_frame":{"type":"method","name":"consume_child_frame","children":[],"call":[" invoke_setter ","child_frame value ","child_frame add_to_collection "," context send ","child_frame getter "," context ","child_frame collected? "," add_mutators_for ","child_frame forced? "," consume_in_wrapper ","child_frame wrapper_methods each ","child_frame wrapper_methods ","child_frame wrapped? ","child_frame ignored? "]}," AWS XmlGrammar Frame build_child_frame":{"type":"method","name":"build_child_frame","children":[],"call":["Frame  new "," root_frame "]}," AWS XmlGrammar Frame initialize":{"type":"method","name":"initialize","children":[],"call":[" consume_initial_frame "," wrapper_frame_for ","@customizations [] keys each ","@customizations [] keys ","@customizations [] "," build_child_frame "," context send "," context "," add_mutators "," context __set_data__ "," context kind_of? ","indexes each ","@root_frame == ","options [] ","@parent_frame customizations_for_child ","options []  [] keys each ","@parent_frame customizations_for_child  [] keys each ","options []  [] keys ","@parent_frame customizations_for_child  [] keys ","options []  [] ","@parent_frame customizations_for_child  [] ","@customizations []  each ","options []  == ","options []  customizations_for_child "]}," AWS XmlGrammar NokogiriAdapter error":{"type":"method","name":"error","children":[],"call":[]}," AWS XmlGrammar NokogiriAdapter end_element_namespace":{"type":"method","name":"end_element_namespace","children":[],"call":[" end_element "]}," AWS XmlGrammar NokogiriAdapter start_element_namespace":{"type":"method","name":"start_element_namespace","children":[],"call":[" start_element ","att value ","att localname ","attrs map "]}," AWS XmlGrammar NokogiriAdapter end_document":{"type":"method","name":"end_document","children":[],"call":[]}," AWS XmlGrammar NokogiriAdapter start_document":{"type":"method","name":"start_document","children":[],"call":[]}," AWS XmlGrammar NokogiriAdapter xmldecl":{"type":"method","name":"xmldecl","children":[],"call":[]}," AWS XmlGrammar REXMLSaxParserAdapter text":{"type":"method","name":"text","children":[],"call":[" characters "]}," AWS XmlGrammar REXMLSaxParserAdapter tag_end":{"type":"method","name":"tag_end","children":[],"call":[" end_element "]}," AWS XmlGrammar REXMLSaxParserAdapter tag_start":{"type":"method","name":"tag_start","children":[],"call":[" start_element "]}," AWS XmlGrammar Parser characters":{"type":"method","name":"characters","children":[],"call":["@frame add_text "]}," AWS XmlGrammar Parser end_element":{"type":"method","name":"end_element","children":[],"call":["@frame parent_frame ","parent_frame consume_child_frame ","@frame close ","@frame parent_frame  parent_frame ","@frame @frame parent_frame  ","@frame parent_frame  consume_child_frame ","@frame parent_frame  close "]}," AWS XmlGrammar Parser start_element":{"type":"method","name":"start_element","children":[],"call":["@frame consume_child_frame ","attr_frame add_text ","@frame build_child_frame ","attrs each ","RootFrame  new ","RootFrame  new  consume_child_frame ","@frame build_child_frame  consume_child_frame ","@frame build_child_frame  add_text ","RootFrame  new  build_child_frame ","@frame build_child_frame  build_child_frame "]}," AWS XmlGrammar Parser initialize":{"type":"method","name":"initialize","children":[],"call":[]}," AWS XmlGrammar ValueFormatter format_value":{"type":"method","name":"format_value","children":[],"call":[]}," AWS XmlGrammar ValueFormatter extend_format_value":{"type":"method","name":"extend_format_value","children":[],"call":["MetaUtils  extend_method "]}," AWS XmlGrammar customizations=":{"type":"method","name":"customizations=","children":[],"call":[]}," AWS XmlGrammar customizations_for":{"type":"method","name":"customizations_for","children":[],"call":["CustomizationContext  new "," customizations [] [] "," customizations [] "," customizations ","@parent [] [] ","@parent [] "]}," AWS XmlGrammar customizations":{"type":"method","name":"customizations","children":[],"call":["CustomizationContext  new "]}," AWS XmlGrammar validate_config_method":{"type":"method","name":"validate_config_method","children":[],"call":[" raise ","allow_methods include? ","method to_s "]}," AWS XmlGrammar parse_config_item":{"type":"method","name":"parse_config_item","children":[],"call":["(lvar :arg) flatten ","method kind_of? ","item to_a first ","item to_a "]}," AWS XmlGrammar validate_args":{"type":"method","name":"validate_args","children":[],"call":[" raise ","arity == ","args length > ","args length "," method arity "," method "," method arity  == "," method  method arity  "]}," AWS XmlGrammar config_eval":{"type":"method","name":"config_eval","children":[],"call":[" config_eval "," element "," send "," validate_args "," validate_config_method "," parse_config_item ","config each "]}," AWS XmlGrammar eval_customization_context":{"type":"method","name":"eval_customization_context","children":[],"call":[" block_given? "," customizations_for "]}," AWS XmlGrammar initial_customizations":{"type":"method","name":"initial_customizations","children":[],"call":["CustomizationContext  new "]}," AWS XmlGrammar eql?":{"type":"method","name":"eql?","children":[],"call":[" customizations == ","other customizations "," customizations "]}," AWS XmlGrammar construct_value":{"type":"method","name":"construct_value","children":[],"call":["@current []= "]}," AWS XmlGrammar wrapper":{"type":"method","name":"wrapper","children":[],"call":["@current [] << ","@current [] "," element ","(or\n  (send\n    (lvar :options) :[]\n    (sym :for))\n  (array)) each ","options [] ","@current [] []= "," raise ","NotImplementedError  new ","can't customize wrapped  + ","customizations [] empty? ","customizations [] "," eval_customization_context ","CustomizationContext  new "," block_given? "," eval_customization_context  [] empty? "," eval_customization_context  [] "]}," AWS XmlGrammar map":{"type":"method","name":"map","children":[],"call":[" map_entry "," rename "," element "," ignore "]}," AWS XmlGrammar map_entry":{"type":"method","name":"map_entry","children":[],"call":["@current []= ","hash []= ","entry value ","entry key "," lambda "," rename "," element "," collect_values "]}," AWS XmlGrammar list":{"type":"method","name":"list","children":[],"call":[" collect_values "," block_given? "," rename "," element "," ignore "]}," AWS XmlGrammar format_value":{"type":"method","name":"format_value","children":[],"call":["@current [] extend_format_value ","@current [] ","ValueFormatter  new "]}," AWS XmlGrammar symbol_value":{"type":"method","name":"symbol_value","children":[],"call":["Inflection  ruby_name to_sym ","Inflection  ruby_name ","(str \"\") include? "," format_value "]}," AWS XmlGrammar float_value":{"type":"method","name":"float_value","children":[],"call":["value to_f ","value nil? "," format_value "]}," AWS XmlGrammar integer_value":{"type":"method","name":"integer_value","children":[],"call":["value to_i ","value nil? "," format_value "]}," AWS XmlGrammar datetime_like_value":{"type":"method","name":"datetime_like_value","children":[],"call":["klass parse ","klass send ","elem to_i ","value tr chop split map ","value tr chop split ","value tr chop ","value tr ","value tr == "," format_value "]}," AWS XmlGrammar time_value":{"type":"method","name":"time_value","children":[],"call":[" datetime_like_value "]}," AWS XmlGrammar datetime_value":{"type":"method","name":"datetime_value","children":[],"call":[" datetime_like_value "]}," AWS XmlGrammar boolean_value":{"type":"method","name":"boolean_value","children":[],"call":["(lvar :value) == "," format_value ","@current []= "]}," AWS XmlGrammar index":{"type":"method","name":"index","children":[],"call":["@current []= ","(or-asgn\n  (send\n    (ivar :@customizations) :[]\n    (sym :index_names))\n  (array)) << ","@customizations [] "]}," AWS XmlGrammar collect_values":{"type":"method","name":"collect_values","children":[],"call":[" force ","@current []= ","ary << "," lambda "]}," AWS XmlGrammar force":{"type":"method","name":"force","children":[],"call":["@current []= "]}," AWS XmlGrammar rename":{"type":"method","name":"rename","children":[],"call":["@current []= ","new_name to_s "]}," AWS XmlGrammar ignore":{"type":"method","name":"ignore","children":[],"call":["@current []= "]}," AWS XmlGrammar add_method":{"type":"method","name":"add_method","children":[],"call":["MetaUtils  extend_method "," format_value "]}," AWS XmlGrammar element":{"type":"method","name":"element","children":[],"call":[" eval_customization_context "]}," AWS XmlGrammar customize":{"type":"method","name":"customize","children":[],"call":["grammar module_eval "," block_given? ","grammar config_eval ","grammar customizations= "," customizations deep_copy "," customizations ","Class  new ","Class  new  module_eval ","Class  new  config_eval ","Class  new  customizations= "]}," AWS XmlGrammar simulate":{"type":"method","name":"simulate","children":[],"call":["StubResponse  new "," customizations "]}," AWS XmlGrammar parse":{"type":"method","name":"parse","children":[],"call":["REXML Parsers StreamParser  new parse ","REXML Parsers StreamParser  new ","REXML Source  new ","parser extend ","Parser  new "," customizations ","Nokogiri XML SAX Parser  new parse ","xml strip ","Nokogiri XML SAX Parser  new ","xml empty? ","Context  new ","options [] ","Parser  new  extend "]}," AWS XmlGrammar CustomizationContext recompute_accessors":{"type":"method","name":"recompute_accessors","children":[],"call":[" []= ","ruby_name != "," [] ","Inflection  ruby_name ","(or\n  (send\n    (self) :[]\n    (sym :renamed))\n  (send\n    (self) :[]\n    (sym :name))) to_s ","Inflection  ruby_name  != ","Inflection  Inflection  ruby_name  "]}," AWS XmlGrammar CustomizationContext deep_copy":{"type":"method","name":"deep_copy","children":[],"call":["copy []= "," deep_copy ","value is_a? ","value deep_copy ","hash inject ","hash class new ","hash class ","hash merge "," deep_copy  is_a? ","value deep_copy  is_a? "," deep_copy  deep_copy ","value deep_copy  deep_copy "]}," AWS XmlGrammar CustomizationContext changed_renamed":{"type":"method","name":"changed_renamed","children":[],"call":[" recompute_accessors "]}," AWS XmlGrammar CustomizationContext changed_boolean":{"type":"method","name":"changed_boolean","children":[],"call":[" recompute_accessors "]}," AWS XmlGrammar CustomizationContext []=":{"type":"method","name":"[]=","children":[],"call":[" send "," respond_to? "]}," AWS XmlGrammar CustomizationContext initialize":{"type":"method","name":"initialize","children":[],"call":[" recompute_accessors "," []= "," original_store "]}," AWS XmlGrammar Context __set_data__":{"type":"method","name":"__set_data__","children":[],"call":["@data []= ","getter to_sym "]}," AWS XmlGrammar Context inspect":{"type":"method","name":"inspect","children":[],"call":["(send\n  (lvar :methods) :reject) join ","m =~ ","methods reject ","@data keys ","(send\n  (lvar :@data keys ) :reject) join ","@data keys  reject "]}," AWS XmlGrammar Context respond_to?":{"type":"method","name":"respond_to?","children":[],"call":["@data key? ","m to_sym "]}," AWS XmlGrammar Context method_missing":{"type":"method","name":"method_missing","children":[],"call":["@data [] ","@data key? ","m to_sym ","@data m to_sym ? "]}," AWS XmlGrammar Context id":{"type":"method","name":"id","children":[],"call":["@data [] "]}," AWS XmlGrammar Context initialize":{"type":"method","name":"initialize","children":[],"call":[]}," AWS SQS queues":{"type":"method","name":"queues","children":[],"call":["QueueCollection  new "," config "]}," AWS SQS Request full_url":{"type":"method","name":"full_url","children":[],"call":["URI HTTP  build ","URI  parse ","url_param value ","p name == ","p name "," params find "," params "]}," AWS SQS Request host":{"type":"method","name":"host","children":[],"call":[" full_url host "," full_url "]}," AWS SQS Request path":{"type":"method","name":"path","children":[],"call":[" full_url path "," full_url "]}," AWS SQS ReceivedSNSMessage to_h":{"type":"method","name":"to_h","children":[],"call":["data [] ","Time  parse ","JSON  parse ","Base64  decode64 ","JSON  parse  [] "]}," AWS SQS ReceivedSNSMessage unsubscribe_url":{"type":"method","name":"unsubscribe_url","children":[],"call":[" to_h [] "," to_h "]}," AWS SQS ReceivedSNSMessage signing_cert_url":{"type":"method","name":"signing_cert_url","children":[],"call":[" to_h [] "," to_h "]}," AWS SQS ReceivedSNSMessage message_id":{"type":"method","name":"message_id","children":[],"call":[" to_h [] "," to_h "]}," AWS SQS ReceivedSNSMessage published_at":{"type":"method","name":"published_at","children":[],"call":[" to_h [] "," to_h "]}," AWS SQS ReceivedSNSMessage signature_version":{"type":"method","name":"signature_version","children":[],"call":[" to_h [] "," to_h "]}," AWS SQS ReceivedSNSMessage signature":{"type":"method","name":"signature","children":[],"call":[" to_h [] "," to_h "]}," AWS SQS ReceivedSNSMessage message_type":{"type":"method","name":"message_type","children":[],"call":[" to_h [] "," to_h "]}," AWS SQS ReceivedSNSMessage topic":{"type":"method","name":"topic","children":[],"call":["SNS Topic  new "," config "," topic_arn "]}," AWS SQS ReceivedSNSMessage topic_arn":{"type":"method","name":"topic_arn","children":[],"call":[" to_h [] "," to_h "]}," AWS SQS ReceivedSNSMessage body":{"type":"method","name":"body","children":[],"call":[" to_h [] "," to_h "]}," AWS SQS ReceivedSNSMessage encoded_body":{"type":"method","name":"encoded_body","children":[],"call":[]}," AWS SQS ReceivedSNSMessage initialize":{"type":"method","name":"initialize","children":[],"call":[]}," AWS SQS ReceivedMessage approximate_first_receive_timestamp":{"type":"method","name":"approximate_first_receive_timestamp","children":[],"call":["Time  at ","timestamp to_i / ","timestamp to_i "," attributes [] "," attributes "," attributes []  to_i / "," attributes []  to_i "]}," AWS SQS ReceivedMessage approximate_receive_count":{"type":"method","name":"approximate_receive_count","children":[],"call":["count to_i "," attributes [] "," attributes "," attributes []  to_i "]}," AWS SQS ReceivedMessage sent_timestamp":{"type":"method","name":"sent_timestamp","children":[],"call":[" p ","timestamp to_i ","Time  at ","timestamp to_i / "," attributes [] "," attributes "," attributes []  to_i "," attributes []  to_i / "]}," AWS SQS ReceivedMessage sender_id":{"type":"method","name":"sender_id","children":[],"call":[" attributes [] "," attributes "]}," AWS SQS ReceivedMessage visibility_timeout=":{"type":"method","name":"visibility_timeout=","children":[],"call":[" client change_message_visibility "," handle "," queue url "," queue "," client "]}," AWS SQS ReceivedMessage delete":{"type":"method","name":"delete","children":[],"call":[" client delete_message "," handle "," queue url "," queue "," client "]}," AWS SQS ReceivedMessage as_sns_message":{"type":"method","name":"as_sns_message","children":[],"call":["ReceivedSNSMessage  new "," config "," body "]}," AWS SQS ReceivedMessage initialize":{"type":"method","name":"initialize","children":[],"call":["opts [] "]}," AWS SQS QueueCollection []":{"type":"method","name":"[]","children":[],"call":["Queue  new "," config "]}," AWS SQS QueueCollection with_prefix":{"type":"method","name":"with_prefix","children":[],"call":[" class new "," config "," class "]}," AWS SQS QueueCollection each":{"type":"method","name":"each","children":[],"call":[" [] "," client list_queues queue_urls each "," client list_queues queue_urls "," client list_queues "," client ","options []= "," prefix "," client list_queues [] each "," client list_queues [] "," client list_ [] s  [] _urls each "," client list_ [] s  [] _urls "," client list_ [] s "," client list_ [] s [] each "," client list_ [] s [] "]}," AWS SQS QueueCollection create":{"type":"method","name":"create","children":[],"call":["Queue  new "," config ","resp queue_url "," client create_queue ","opts merge "," client ","response [] ","client_opts []= ","attributes merge ","v to_s ","Core Inflection  class_name ","k to_s ","options inject ","options empty? ","options []= ","policy to_json ","policy is_a? ","options [] ","options delete ","response queue_url "," client create_queue  queue_url "," client create_queue onse [] "," client create_queue  [] ","options []  to_json ","options []  is_a? "," client create_queue onse queue_url "]}," AWS SQS QueueCollection initialize":{"type":"method","name":"initialize","children":[],"call":["opts [] "]}," AWS SQS Queue set_attribute":{"type":"method","name":"set_attribute","children":[],"call":[" client set_queue_attributes "," url "," client "]}," AWS SQS Queue get_attribute":{"type":"method","name":"get_attribute","children":[],"call":["resp attributes [] ","resp attributes "," client get_queue_attributes ","(lvar :name) uniq "," url "," client "," client get_queue_attributes  attributes [] "," client get_queue_attributes  attributes "]}," AWS SQS Queue call_message_block":{"type":"method","name":"call_message_block","children":[],"call":["message delete "," raise ","block call ","messages each "]}," AWS SQS Queue receive_opts":{"type":"method","name":"receive_opts","children":[],"call":["receive_opts []= ","Inflection  class_name ","name to_s ","name kind_of? ","ReceivedMessage ATTRIBUTE_ALIASES  [] ","name to_sym ","ReceivedMessage ATTRIBUTE_ALIASES  key? ","names map ","opts [] "," url ","Core Inflection  class_name ","Inflection  class_Inflection  class_name  ","Inflection  class_ReceivedMessage ATTRIBUTE_ALIASES  []  ","Inflection  class_Core Inflection  class_name  ","Inflection  class_name  to_s ","ReceivedMessage ATTRIBUTE_ALIASES  []  to_s ","Core Inflection  class_name  to_s ","Inflection  class_name  kind_of? ","ReceivedMessage ATTRIBUTE_ALIASES  []  kind_of? ","Core Inflection  class_name  kind_of? ","Inflection  class_name  to_sym ","ReceivedMessage ATTRIBUTE_ALIASES  []  to_sym ","Core Inflection  class_name  to_sym ","Inflection  class_name s map ","ReceivedMessage ATTRIBUTE_ALIASES  [] s map ","Core Inflection  class_name s map ","opts []  map ","Core Inflection  class_Inflection  class_name  ","Core Inflection  class_ReceivedMessage ATTRIBUTE_ALIASES  []  ","Core Inflection  class_Core Inflection  class_name  "]}," AWS SQS Queue hit_timeout?":{"type":"method","name":"hit_timeout?","children":[],"call":["Time  now - > ","Time  now - ","Time  now ","initial_timeout != ","initial_timeout ! ","opts [] ","opts []  != ","opts []  ! "]}," AWS SQS Queue inspect":{"type":"method","name":"inspect","children":[],"call":[" url "," class "]}," AWS SQS Queue ==":{"type":"method","name":"==","children":[],"call":["other url == "," url ","other url ","other kind_of? "]}," AWS SQS Queue policy=":{"type":"method","name":"policy=","children":[],"call":[" set_attribute ","policy to_json "]}," AWS SQS Queue policy":{"type":"method","name":"policy","children":[],"call":["policy queue= ","policy extend ","SQS Policy  from_json "," get_attribute ","SQS Policy  from_json  queue= ","SQS Policy  from_json  extend "]}," AWS SQS Queue PolicyProxy delete":{"type":"method","name":"delete","children":[],"call":[" queue client send "," queue client "," queue "]}," AWS SQS Queue PolicyProxy change":{"type":"method","name":"change","children":[],"call":[" queue policy= "," queue "]}," AWS SQS Queue exists?":{"type":"method","name":"exists?","children":[],"call":[" client get_queue_attributes "," url "," client "]}," AWS SQS Queue arn":{"type":"method","name":"arn","children":[],"call":[" get_attribute "]}," AWS SQS Queue message_retention_period=":{"type":"method","name":"message_retention_period=","children":[],"call":[" set_attribute ","period to_s "]}," AWS SQS Queue message_retention_period":{"type":"method","name":"message_retention_period","children":[],"call":[" get_attribute to_i "," get_attribute "]}," AWS SQS Queue maximum_message_size=":{"type":"method","name":"maximum_message_size=","children":[],"call":[" set_attribute ","size to_s "]}," AWS SQS Queue maximum_message_size":{"type":"method","name":"maximum_message_size","children":[],"call":[" get_attribute to_i "," get_attribute "]}," AWS SQS Queue last_modified_timestamp":{"type":"method","name":"last_modified_timestamp","children":[],"call":["Time  at "," get_attribute to_i "," get_attribute "]}," AWS SQS Queue created_timestamp":{"type":"method","name":"created_timestamp","children":[],"call":["Time  at "," get_attribute to_i "," get_attribute "]}," AWS SQS Queue visibility_timeout=":{"type":"method","name":"visibility_timeout=","children":[],"call":[" set_attribute ","timeout to_s "]}," AWS SQS Queue visibility_timeout":{"type":"method","name":"visibility_timeout","children":[],"call":[" get_attribute to_i "," get_attribute "]}," AWS SQS Queue approximate_number_of_messages_not_visible":{"type":"method","name":"approximate_number_of_messages_not_visible","children":[],"call":[" get_attribute to_i "," get_attribute "]}," AWS SQS Queue approximate_number_of_messages":{"type":"method","name":"approximate_number_of_messages","children":[],"call":[" get_attribute to_i "," get_attribute "]}," AWS SQS Queue poll":{"type":"method","name":"poll","children":[],"call":[" hit_timeout? ","Kernel  sleep ","poll_interval == ","Time  now "," receive_messages "," loop ","opts []= ","opts delete ","opts key? ","opts [] ","opts has_key? "]}," AWS SQS Queue receive_message":{"type":"method","name":"receive_message","children":[],"call":["messages first ","opts [] != ","opts [] "," call_message_block ","ReceivedMessage  new ","m attributes ","m md5_of_body ","m body ","m receipt_handle ","m message_id ","resp messages map ","resp messages "," client receive_message "," receive_opts "," client ","m [] ","resp [] map ","resp [] "," raise ","Errors ChecksumError  new ","failed empty? "," verify_receive_message_checksum ","(or\n  (send\n    (lvar :resp) :[]\n    (sym :response_metadata))\n  (hash)) [] "," client receive_message  messages map "," client receive_message  messages "," client receive_message  [] map "," client receive_message  [] "," verify_receive_message_checksum  empty? ","(or\n  (send\n    (lvar : client receive_message ) :[]\n    (sym : client receive_message onse_metadata))\n  (hash)) [] "]}," AWS SQS Queue send_message":{"type":"method","name":"send_message","children":[],"call":["msg md5= ","resp md5_of_message_body ","msg message_id= ","resp message_id ","SentMessage  new "," client send_message "," url "," client ","response [] ","client_opts []= ","options dup "," verify_send_message_checksum ","msg md5 ","response md5_of_message_body ","response message_id ","msg request_id= ","(or\n  (send\n    (lvar :response) :[]\n    (sym :response_metadata))\n  (hash)) [] ","SentMessage  new  md5= "," client send_message  md5_of_message_body ","SentMessage  new  message_id= "," client send_message  message_id "," client send_message onse [] "," client send_message  [] ","options dup  []= ","SentMessage  new  md5 "," client send_message onse md5_of_message_body "," client send_message onse message_id ","SentMessage  new  request_id= ","(or\n  (send\n    (lvar : client send_message onse) :[]\n    (sym : client send_message onse_metadata))\n  (hash)) [] ","(or\n  (send\n    (lvar : client send_message ) :[]\n    (sym : client send_message _metadata))\n  (hash)) [] "]}," AWS SQS Queue delete":{"type":"method","name":"delete","children":[],"call":[" client delete_queue "," url "," client "]}," AWS SQS Queue initialize":{"type":"method","name":"initialize","children":[],"call":[]}," AWS SQS Policy Statement resource_arn":{"type":"method","name":"resource_arn","children":[],"call":["resource to_s ","URI  parse path ","URI  parse ","resource url "]}," AWS SQS Errors error_class":{"type":"method","name":"error_class","children":[],"call":[]}," AWS SNS subscriptions":{"type":"method","name":"subscriptions","children":[],"call":["SubscriptionCollection  new "," config "]}," AWS SNS topics":{"type":"method","name":"topics","children":[],"call":["TopicCollection  new "," config "]}," AWS SNS TopicSubscriptionCollection request_opts":{"type":"method","name":"request_opts","children":[],"call":[" topic arn "," topic "]}," AWS SNS TopicSubscriptionCollection list_request":{"type":"method","name":"list_request","children":[],"call":[]}," AWS SNS TopicSubscriptionCollection initialize":{"type":"method","name":"initialize","children":[],"call":[]}," AWS SNS TopicCollection each":{"type":"method","name":"each","children":[],"call":["Topic  new "," config ","t topic_arn ","response topics each ","response topics "," client list_topics "," client ","response next_token ","response data [] ","response data ","t Topic  new _arn ","response Topic  new s each "," client list_topics  topics each ","response Topic  new s "," client list_topics  topics "," client list_Topic  new s "," client list_topics  next_token ","response response next_token  ","response response data []  "," client list_topics  data [] "," client list_topics  data "]}," AWS SNS TopicCollection []":{"type":"method","name":"[]","children":[],"call":["Topic  new "," config "," raise ","topic_arn =~ "]}," AWS SNS TopicCollection create":{"type":"method","name":"create","children":[],"call":["Topic  new "," config ","response topic_arn "," client create_topic "," client "," client create_topic  topic_arn "]}," AWS SNS Topic endpoint_opts":{"type":"method","name":"endpoint_opts","children":[],"call":[" raise ","opts [] ","endpoint include? ","endpoint =~ ","endpoint to_s ","endpoint scheme ","endpoint kind_of? ","endpoint arn ","endpoint policy= ","policy allow where is "," arn ","policy allow where ","policy allow ","SQS Policy  new ","endpoint policy ","opts [] == ","endpoint is_a? ","endpoint gsub ","endpoint gsub =~ "]}," AWS SNS Topic PolicyProxy change":{"type":"method","name":"change","children":[],"call":[" topic policy= "," topic "]}," AWS SNS Topic set_attribute":{"type":"method","name":"set_attribute","children":[],"call":[" client send "," arn "," client "]}," AWS SNS Topic parse_policy":{"type":"method","name":"parse_policy","children":[],"call":["policy topic= ","policy extend ","SNS Policy  from_json ","SNS Policy  from_json  topic= ","SNS Policy  from_json  extend "]}," AWS SNS Topic ==":{"type":"method","name":"==","children":[],"call":["other arn == "," arn ","other arn ","other kind_of? "]}," AWS SNS Topic to_h":{"type":"method","name":"to_h","children":[],"call":["attributes [] to_i ","attributes [] "," parse_policy "," name "," arn "," client get_topic_attributes attributes "," client get_topic_attributes "," client "," client get_topic_attributes attributes  [] to_i "," client get_topic_attributes attributes  [] "," client get_topic_ client get_topic_attributes attributes   client get_topic_attributes attributes  "," client get_topic_ client get_topic_attributes attributes  "]}," AWS SNS Topic delete":{"type":"method","name":"delete","children":[],"call":[" client delete_topic "," arn "," client "]}," AWS SNS Topic publish":{"type":"method","name":"publish","children":[],"call":["response message_id "," client publish "," client ","publish_opts []= "," arn ","options [] ","message to_json ","message []= ","protocol to_s gsub ","protocol to_s ","(sym :http) each ","response [] "," client publish  message_id "," client publish  [] "]}," AWS SNS Topic policy=":{"type":"method","name":"policy=","children":[],"call":[" set_attribute ","policy to_json ","policy is_a? "]}," AWS SNS Topic policy":{"type":"method","name":"policy","children":[],"call":[" to_h [] "," to_h "]}," AWS SNS Topic num_subscriptions_deleted":{"type":"method","name":"num_subscriptions_deleted","children":[],"call":[" to_h [] "," to_h "]}," AWS SNS Topic num_subscriptions_pending":{"type":"method","name":"num_subscriptions_pending","children":[],"call":[" to_h [] "," to_h "]}," AWS SNS Topic num_subscriptions_confirmed":{"type":"method","name":"num_subscriptions_confirmed","children":[],"call":[" to_h [] "," to_h "]}," AWS SNS Topic owner":{"type":"method","name":"owner","children":[],"call":[" to_h [] "," to_h "]}," AWS SNS Topic display_name=":{"type":"method","name":"display_name=","children":[],"call":[" set_attribute "]}," AWS SNS Topic display_name":{"type":"method","name":"display_name","children":[],"call":[" to_h [] "," to_h "]}," AWS SNS Topic subscriptions":{"type":"method","name":"subscriptions","children":[],"call":["TopicSubscriptionCollection  new "]}," AWS SNS Topic confirm_subscription":{"type":"method","name":"confirm_subscription","children":[],"call":["Subscription  new "," config ","resp subscription_arn "," client confirm_subscription "," client ","opts merge "," arn ","resp [] ","options merge ","options []= ","options [] "," client confirm_subscription  subscription_arn "," client confirm_subscription  [] "]}," AWS SNS Topic subscribe":{"type":"method","name":"subscribe","children":[],"call":["Subscription  new "," config ","arn =~ ","resp subscription_arn "," client subscribe "," client "," endpoint_opts merge "," arn "," endpoint_opts ","resp [] ","resp subscription_arn  =~ ","resp []  =~ ","resp subscription_resp subscription_arn  ","resp subscription_resp []  "," client subscribe  subscription_arn "," resp subscription_arn  "," resp []  "," client subscribe  [] "]}," AWS SNS Topic name":{"type":"method","name":"name","children":[],"call":[" arn split [] "," arn split "," arn "]}," AWS SNS Topic initialize":{"type":"method","name":"initialize","children":[],"call":[]}," AWS SNS SubscriptionCollection request_opts":{"type":"method","name":"request_opts","children":[],"call":[]}," AWS SNS SubscriptionCollection list_request":{"type":"method","name":"list_request","children":[],"call":[]}," AWS SNS SubscriptionCollection []":{"type":"method","name":"[]","children":[],"call":["Subscription  new "," config "]}," AWS SNS SubscriptionCollection each":{"type":"method","name":"each","children":[],"call":["resp next_token ","Subscription  new "," config ","Topic  new ","sub topic_arn ","sub owner ","sub protocol tr to_sym ","sub protocol tr ","sub protocol ","sub endpoint ","sub subscription_arn ","resp subscriptions each ","resp subscriptions "," client send "," list_request "," client ","opts []= "," request_opts ","next_token nil? ","resp data [] ","resp data ","resp resp next_token  ","resp resp data []  "," client send  next_token ","sub Subscription  new _arn ","resp Subscription  new s each "," client send  subscriptions each ","resp Subscription  new s "," client send  subscriptions "," request_opts  []= "," request_ request_opts  ","resp next_token  nil? ","resp data []  nil? "," client send  data [] "," client send  data "]}," AWS SNS Subscription ==":{"type":"method","name":"==","children":[],"call":["other arn == "," arn ","other arn ","other kind_of? "]}," AWS SNS Subscription inspect":{"type":"method","name":"inspect","children":[],"call":[" arn "," class "]}," AWS SNS Subscription exists?":{"type":"method","name":"exists?","children":[],"call":["collection include? ","SubscriptionCollection  new "," config ","TopicSubscriptionCollection  new "," topic "," get_attributes ","SubscriptionCollection  new  include? ","TopicSubscriptionCollection  new  include? "]}," AWS SNS Subscription unsubscribe":{"type":"method","name":"unsubscribe","children":[],"call":[" client unsubscribe "," arn "," client "]}," AWS SNS Subscription initialize":{"type":"method","name":"initialize","children":[],"call":["opts [] "]}," AWS SNS Policy Statement resource_arn":{"type":"method","name":"resource_arn","children":[],"call":["resource arn "]}," AWS SNS Client Options api_config":{"type":"method","name":"api_config","children":[],"call":[]}," AWS SimpleEmailService nest_options":{"type":"method","name":"nest_options","children":[],"call":["hash [] ","hash []= ","options [] ","keys last == ","key to_s ","keys last ","(send\n  (lvar :keys) :collect) each ","k to_sym ","keys collect ","accepted_options each_pair ","hash []  [] ","hash []  []= "]}," AWS SimpleEmailService require_each":{"type":"method","name":"require_each","children":[],"call":[" raise ","options [] ","keys each "]}," AWS SimpleEmailService require_one_of":{"type":"method","name":"require_one_of","children":[],"call":[" raise ","(send\n  (lvar :keys) :collect) join ","keys collect ","options [] ","keys any? "]}," AWS SimpleEmailService statistics":{"type":"method","name":"statistics","children":[],"call":["stats << ","data complaints ","data bounces ","data rejects ","data delivery_attempts ","data timestamp "," client get_send_statistics send_data_points inject "," client get_send_statistics send_data_points "," client get_send_statistics "," client ","data [] ","response data [] collect ","response data [] ","response data "," client get_send_statistics  data [] collect "," client get_send_statistics  data [] "," client get_send_statistics  data "]}," AWS SimpleEmailService quotas":{"type":"method","name":"quotas","children":[],"call":["Quotas  new to_h ","Quotas  new "," config "]}," AWS SimpleEmailService send_raw_email":{"type":"method","name":"send_raw_email","children":[],"call":[" client send_raw_email "," client ","send_opts []= ","(send\n  (lvar :options) :[]\n  (sym :to)) flatten ","options [] ","send_opts [] []= ","raw_message to_s ","send_opts [] ","raw_message destinations ","raw_message respond_to? ","raw_message message_id= ","response data [] ","response data ","raw_message from first ","raw_message from ","raw_message class name == ","raw_message class name ","raw_message class "," client send_raw_email  data [] "," client send_raw_email  data "]}," AWS SimpleEmailService send_email":{"type":"method","name":"send_email","children":[],"call":[" client send_email "," nest_options "," client ","options []= ","(send\n  (lvar :options) :[]\n  (lvar :key)) flatten ","options [] ","(sym :to) each "," require_one_of "," require_each "]}," AWS SimpleEmailService email_addresses":{"type":"method","name":"email_addresses","children":[],"call":["EmailAddressCollection  new "," config "]}," AWS SimpleEmailService Quotas inspect":{"type":"method","name":"inspect","children":[],"call":[" to_h inspect "," to_h "," class "," to_hash inspect "," to_hash "]}," AWS SimpleEmailService Quotas to_h":{"type":"method","name":"to_h","children":[],"call":["response sent_last_24_hours to_i ","response sent_last_24_hours ","response max_send_rate to_f ","response max_send_rate ","response max_24_hour_send to_i ","response max_24_hour_send "," client get_send_quota "," client "," client get_send_quota  sent_last_24_hours to_i "," client get_send_quota  sent_last_24_hours "," client get_send_quota  max_send_rate to_f "," client get_send_quota  max_send_rate "," client get_send_quota  max_24_hour_send to_i "," client get_send_quota  max_24_hour_send "]}," AWS SimpleEmailService Quotas sent_last_24_hours":{"type":"method","name":"sent_last_24_hours","children":[],"call":[" to_h [] "," to_h "]}," AWS SimpleEmailService Quotas max_send_rate":{"type":"method","name":"max_send_rate","children":[],"call":[" to_h [] "," to_h "]}," AWS SimpleEmailService Quotas max_24_hour_send":{"type":"method","name":"max_24_hour_send","children":[],"call":[" to_h [] "," to_h "]}," AWS SimpleEmailService EmailAddressCollection each":{"type":"method","name":"each","children":[],"call":["response verified_email_addresses each ","response verified_email_addresses "," client list_verified_email_addresses "," client "," client list_verified_email_addresses  verified_email_addresses each "," client list_verified_email_addresses  verified_email_addresses "]}," AWS SimpleEmailService EmailAddressCollection include?":{"type":"method","name":"include?","children":[],"call":[]}," AWS SimpleEmailService EmailAddressCollection delete":{"type":"method","name":"delete","children":[],"call":[" client delete_verified_email_address "," client "]}," AWS SimpleEmailService EmailAddressCollection verify":{"type":"method","name":"verify","children":[],"call":[" client verify_email_address "," client "]}," AWS SimpleEmailService Client Options api_config":{"type":"method","name":"api_config","children":[],"call":[]}," AWS SimpleDB consistent_reads_state":{"type":"method","name":"consistent_reads_state","children":[],"call":[]}," AWS SimpleDB in_consistent_reads_block?":{"type":"method","name":"in_consistent_reads_block?","children":[],"call":[]}," AWS SimpleDB consistent_reads":{"type":"method","name":"consistent_reads","children":[],"call":[]}," AWS SimpleDB domains":{"type":"method","name":"domains","children":[],"call":["DomainCollection  new "," config "]}," AWS SimpleDB PutAttributes do_put":{"type":"method","name":"do_put","children":[],"call":[" client put_attributes "," client ","opts delete ","opts [] empty? ","opts [] "," expect_condition_opts "," item name "," item "," item domain name "," item domain ","attribute_hashes empty? "]}," AWS SimpleDB PutAttributes attribute_hashes":{"type":"method","name":"attribute_hashes","children":[],"call":["attribute_hashes << ","value to_s ","attribute_name to_s ","(sym :if) include? ","(lvar :values) flatten each ","(lvar :values) flatten ","attributes each_pair "]}," AWS SimpleDB ItemData item":{"type":"method","name":"item","children":[],"call":[" domain [] "," name "," domain "," domain items [] "," domain items "]}," AWS SimpleDB ItemData initialize":{"type":"method","name":"initialize","children":[],"call":["m [] << ","att value ","m [] ","att name ","obj attributes inject ","obj attributes ","obj respond_to? ","obj name ","opts [] ","attributes [] << ","attr [] ","attributes [] ","obj [] each ","obj [] ","opts []  attributes inject ","opts []  attributes ","opts []  respond_to? ","opts []  name ","opts []  [] each ","opts []  [] "]}," AWS SimpleDB ItemCollection coerce_attribute":{"type":"method","name":"coerce_attribute","children":[],"call":["` + + ","` + ","name to_s gsub ","name to_s "]}," AWS SimpleDB ItemCollection coerce_substitution":{"type":"method","name":"coerce_substitution","children":[],"call":["' + + ","' + ","subst to_s gsub ","subst to_s ","( + + ","( + ","(send\n  (send\n    (lvar :subst) :flatten) :map) join "," coerce_substitution ","subst flatten map ","subst flatten ","subst kind_of? "]}," AWS SimpleDB ItemCollection replace_named_placeholders":{"type":"method","name":"replace_named_placeholders","children":[],"call":[" raise ","ArgumentError  new ","str scan ","str gsub "," coerce_substitution ","name to_sym inspect ","name to_sym ","named each ","orig_str include? ","str gsub  scan ","str gsub  gsub ","orig_str gsub  include? "]}," AWS SimpleDB ItemCollection replace_positional_placeders":{"type":"method","name":"replace_positional_placeders","children":[],"call":[" coerce_substitution ","substitutions shift "," raise ","ArgumentError  new ","substitutions empty? ","str gsub "]}," AWS SimpleDB ItemCollection replace_placeholders_outside_quotes":{"type":"method","name":"replace_placeholders_outside_quotes","children":[],"call":[" replace_named_placeholders "," replace_positional_placeders ","str dup "," replace_named_placeholders  dup "]}," AWS SimpleDB ItemCollection replace_placeholders":{"type":"method","name":"replace_placeholders","children":[],"call":[" raise ","ArgumentError  new ","substitutions inspect ","substitutions empty? "," replace_placeholders_outside_quotes ","(send\n  (send\n    (lvar :str) :scan\n    (const nil :OUTSIDE_QUOTES_REGEX)) :map) join ","(lvar :before) join ","(lvar :before) map ","str scan map ","str scan ","str =~ ","substitutions pop ","substitutions last kind_of? ","substitutions last ","(send\n  (send\n    (lvar :(send\n  (send\n    (lvar :str) :scan\n    (const nil :OUTSIDE_QUOTES_REGEX)) :map) join ) :scan\n    (const nil :OUTSIDE_QUOTES_REGEX)) :map) join ","(send\n  (send\n    (lvar :str) :scan\n    (const nil :OUTSIDE_QUOTES_REGEX)) :map) join  scan map ","(send\n  (send\n    (lvar :str) :scan\n    (const nil :OUTSIDE_QUOTES_REGEX)) :map) join  scan ","(send\n  (send\n    (lvar :str) :scan\n    (const nil :OUTSIDE_QUOTES_REGEX)) :map) join  =~ "]}," AWS SimpleDB ItemCollection collection_with":{"type":"method","name":"collection_with","children":[],"call":["ItemCollection  new ","(pair\n  (sym :limit)\n  (send nil :limit)) merge "," sort_instructions "," conditions "," limit "," domain ","(pair\n  (sym :output_list)\n  (send nil :output_list)) merge "," output_list "]}," AWS SimpleDB ItemCollection order_by_clause":{"type":"method","name":"order_by_clause","children":[],"call":[" ORDER BY  + "," sort_instructions "]}," AWS SimpleDB ItemCollection where_clause":{"type":"method","name":"where_clause","children":[],"call":[" WHERE  + ","all_conditions join ","all_conditions empty? ","all_conditions << "," coerce_attribute + "," coerce_attribute "," conditions dup "," conditions ","conditions join ","conditions empty? ","conditions << "," conditions dup  join ","all_ conditions dup  join "," conditions dup  empty? ","all_ conditions dup  empty? "," conditions dup  << ","all_ conditions dup  << ","  conditions dup  dup ","  conditions dup  "]}," AWS SimpleDB ItemCollection limit_clause":{"type":"method","name":"limit_clause","children":[],"call":[" limit "]}," AWS SimpleDB ItemCollection select_expression":{"type":"method","name":"select_expression","children":[],"call":["(str \"SELECT \") + + + "," limit_clause ","(str \"SELECT \") + + "," order_by_clause ","(str \"SELECT \") + "," where_clause "," domain name "," domain ","expression compact join ","expression compact ","expression << "," output_list ","options [] "]}," AWS SimpleDB ItemCollection select_request":{"type":"method","name":"select_request","children":[],"call":[" client select "," client ","opts [] << ","opts [] ","opts [] gsub! ","opts []= "," consistent_read "," select_expression ","options [] "]}," AWS SimpleDB ItemCollection perform_select":{"type":"method","name":"perform_select","children":[],"call":["response items size ","response items ","response next_token "," select_request ","(send\n  (send nil :limit) :-\n  (lvar :total)) min "," limit - "," limit ","total < "," limit nil? "," Integer ","options [] "," select_request  items size "," select_request  items ","response response next_token  ","response options []  "," select_request  next_token "]}," AWS SimpleDB ItemCollection handle_query_options":{"type":"method","name":"handle_query_options","children":[],"call":[" send send ","args + "," send ","options delete ","option_args kind_of? ","options [] ","(send\n  (send\n    (lvar :options) :keys) :&\n  (array\n    (sym :where)\n    (sym :order)\n    (sym :limit))) first ","options keys & ","options keys ","args pop ","args last kind_of? ","args last ","query_options each ","query_options empty? ! ","query_options empty? ","args << ","collection send ","args last is_a? ","args pop  delete ","options []  kind_of? ","args pop  [] ","(send\n  (send\n    (lvar :args pop ) :keys) :&\n  (array\n    (sym :where)\n    (sym :order)\n    (sym :limit))) first ","args pop  keys & ","args pop  keys ","(send\n  (send\n    (lvar :options) :keys) :&\n  (array\n    (sym :where)\n    (sym :order)\n    (sym :limit))) first s each ","query_args pop  each ","query_options ea send h ","options keys &  each ","(send\n  (send\n    (lvar :options) :keys) :&\n  (array\n    (sym :where)\n    (sym :order)\n    (sym :limit))) first s empty? ! ","query_args pop  empty? ! ","options keys &  empty? ! ","(send\n  (send\n    (lvar :options) :keys) :&\n  (array\n    (sym :where)\n    (sym :order)\n    (sym :limit))) first s empty? ","query_args pop  empty? ","options keys &  empty? "," send olle send tion send ","collection send  send "]}," AWS SimpleDB ItemCollection limit":{"type":"method","name":"limit","children":[],"call":[" collection_with "," Integer ","args first ","args empty? "]}," AWS SimpleDB ItemCollection order":{"type":"method","name":"order","children":[],"call":[" collection_with ","attribute to_s ","order to_s =~ ","order to_s "," coerce_attribute "]}," AWS SimpleDB ItemCollection where":{"type":"method","name":"where","children":[],"call":[" collection_with "," conditions + "," conditions ","(begin\n  (lvar :name)) + "," coerce_substitution ","value end ","value begin ","(str \"(\") + ","value exclude_end? "," coerce_attribute ","conditions map "," replace_placeholders ","(begin\n  (lvar : coerce_attribute )) + "]}," AWS SimpleDB ItemCollection count":{"type":"method","name":"count","children":[],"call":["response next_token ","count_attribute value to_i ","count_attribute value ","domain_item attributes first ","domain_item attributes ","response items first ","response items "," select_request ","count < "," limit "," limit nil? ","options merge "," handle_query_options ","c count ","response [] ","collection count ","response response next_token  ","response response []  "," select_request  next_token ","domain_item attributes first  value to_i ","domain_item attributes first  value ","response items first  attributes first ","response items first  attributes "," select_request  items first "," select_request  items ","options merge  merge "," handle_query_options merge  "," select_request  [] "]}," AWS SimpleDB ItemCollection select":{"type":"method","name":"select","children":[],"call":["ItemData  new "," domain ","response items each ","response items "," perform_select ","options merge ","(send\n  (send\n    (array\n      (lvar :attributes)) :flatten) :collect) join "," coerce_attribute ","(lvar :attributes) flatten collect ","(lvar :attributes) flatten ","attributes empty? ","Enumerator  new "," block_given? "," handle_query_options ","attributes + ","attributes pop ","attributes last is_a? ","attributes last ","c select ","collection each "," collection_with ","(send\n  (send\n    (lvar :attributes) :flatten) :map) join ","attributes flatten map ","attributes flatten ","collection select ","attributes pop  merge "," handle_query_attributes pop  "," collection_with  each ","  collection_with _with "," collection_with  select "]}," AWS SimpleDB ItemCollection each":{"type":"method","name":"each","children":[],"call":[" [] ","item name ","response items each ","response items "," perform_select "," select ","options delete "," handle_query_options ","c each ","collection each "]}," AWS SimpleDB ItemCollection []":{"type":"method","name":"[]","children":[],"call":["Item  new ","item_name to_s "," domain "]}," AWS SimpleDB ItemCollection create":{"type":"method","name":"create","children":[],"call":["item attributes replace ","item attributes "," [] "," []  attributes replace "," []  attributes "]}," AWS SimpleDB ItemCollection initialize":{"type":"method","name":"initialize","children":[],"call":["options [] "]}," AWS SimpleDB Item data":{"type":"method","name":"data","children":[],"call":["ItemData  new "," domain "," name "," client get_attributes "," client ","get_opts []= "," consistent_read "," domain name ","r data "," client get_att client get_attributes ibutes "," consistent_ client get_attributes ead "," client get_attributes  data "]}," AWS SimpleDB Item delete":{"type":"method","name":"delete","children":[],"call":[" client delete_attributes "," client ","delete_opts delete ","delete_opts [] empty? ","delete_opts [] ","delete_opts []= "," expect_condition_opts "," name "," domain name "," domain "]}," AWS SimpleDB Item attributes":{"type":"method","name":"attributes","children":[],"call":["AttributeCollection  new "]}," AWS SimpleDB Item initialize":{"type":"method","name":"initialize","children":[],"call":[]}," AWS SimpleDB ExpectConditionOption expect_condition_opts":{"type":"method","name":"expect_condition_opts","children":[],"call":["expected << ","value to_s ","expected_name to_s ","value to_a first ","value to_a ","opts each ","expected first ","expected empty? "]}," AWS SimpleDB DomainMetadata to_h":{"type":"method","name":"to_h","children":[],"call":["h []= ","meta send ","ATTRIBUTES  inject "," client domain_metadata "," domain name "," domain "," client "," client domain_metadata  send "," client domain_ client domain_metadata data "]}," AWS SimpleDB DomainMetadata timestamp":{"type":"method","name":"timestamp","children":[],"call":[" to_h [] "," to_h "]}," AWS SimpleDB DomainMetadata attribute_values_size_bytes":{"type":"method","name":"attribute_values_size_bytes","children":[],"call":[" to_h [] "," to_h "]}," AWS SimpleDB DomainMetadata attribute_value_count":{"type":"method","name":"attribute_value_count","children":[],"call":[" to_h [] "," to_h "]}," AWS SimpleDB DomainMetadata attribute_names_size_bytes":{"type":"method","name":"attribute_names_size_bytes","children":[],"call":[" to_h [] "," to_h "]}," AWS SimpleDB DomainMetadata attribute_name_count":{"type":"method","name":"attribute_name_count","children":[],"call":[" to_h [] "," to_h "]}," AWS SimpleDB DomainMetadata item_names_size_bytes":{"type":"method","name":"item_names_size_bytes","children":[],"call":[" to_h [] "," to_h "]}," AWS SimpleDB DomainMetadata item_count":{"type":"method","name":"item_count","children":[],"call":[" to_h [] "," to_h "]}," AWS SimpleDB DomainMetadata initialize":{"type":"method","name":"initialize","children":[],"call":[]}," AWS SimpleDB DomainCollection domain_named":{"type":"method","name":"domain_named","children":[],"call":["Domain  new "," config ","name to_s "]}," AWS SimpleDB DomainCollection each":{"type":"method","name":"each","children":[],"call":[" domain_named ","list domain_names each ","list domain_names ","list domain_names length ","list next_token "," client list_domains "," client ","list_options []= ","(send\n  (lvar :total_limit) :-\n  (lvar :received)) min ","total_limit - ","received < ","total_limit nil? ","options [] ","list [] each ","list [] ","list [] size "," client list_domains  domain_names each "," client list_domains  domain_names "," client list_domains  domain_names length ","list list next_token  ","list list []  "," client list_domains  next_token "," client  client list_domains _domains "," client list_domains _options []= ","(send\n  (lvar :total_(send\n  (lvar :total_limit) :-\n  (lvar :received)) min ) :-\n  (lvar :received)) min ","(send\n  (lvar :options [] ) :-\n  (lvar :received)) min ","total_(send\n  (lvar :total_limit) :-\n  (lvar :received)) min  - ","options []  - ","total_(send\n  (lvar :total_limit) :-\n  (lvar :received)) min  nil? ","options []  nil? "," client list_domains  [] each "," client list_domains  [] "," client list_domains  [] size "]}," AWS SimpleDB DomainCollection []":{"type":"method","name":"[]","children":[],"call":[" domain_named ","Domain  new "," config ","domain_name to_s "]}," AWS SimpleDB DomainCollection create":{"type":"method","name":"create","children":[],"call":[" domain_named "," client create_domain "," client "," [] "]}," AWS SimpleDB Domain inspect":{"type":"method","name":"inspect","children":[],"call":[" name "," class "]}," AWS SimpleDB Domain items":{"type":"method","name":"items","children":[],"call":["ItemCollection  new "]}," AWS SimpleDB Domain metadata":{"type":"method","name":"metadata","children":[],"call":["DomainMetadata  new "]}," AWS SimpleDB Domain exists?":{"type":"method","name":"exists?","children":[],"call":[" client domain_metadata "," name "," client "]}," AWS SimpleDB Domain delete!":{"type":"method","name":"delete!","children":[],"call":[" client delete_domain "," name "," client "]}," AWS SimpleDB Domain delete":{"type":"method","name":"delete","children":[],"call":[" client delete_domain "," name "," client "," raise ","delete called without :force  + "," empty? "]}," AWS SimpleDB Domain empty?":{"type":"method","name":"empty?","children":[],"call":[" metadata item_count == "," metadata item_count "," metadata "]}," AWS SimpleDB Domain initialize":{"type":"method","name":"initialize","children":[],"call":[]}," AWS SimpleDB DeleteAttributes delete_attribute_values":{"type":"method","name":"delete_attribute_values","children":[],"call":[" client delete_attributes "," client ","opts delete ","opts [] empty? ","opts [] ","opts [] << ","attribute_value []= ","value == ","name to_s ","(lvar :values) flatten each ","(lvar :values) flatten ","name != ","attributes each "," expect_condition_opts "," item name "," item "," item domain name "," item domain "]}," AWS SimpleDB DeleteAttributes delete_named_attributes":{"type":"method","name":"delete_named_attributes","children":[],"call":[" client delete_attributes "," client ","attributes empty? ","opts delete ","opts [] empty? ","opts [] "," expect_condition_opts "," item name "," item "," item domain name "," item domain ","n to_s ","attribute_names flatten collect ","attribute_names flatten ","attribute_names pop ","attribute_names last kind_of? ","attribute_names last "]}," AWS SimpleDB ConsistentReadOption consistent_read":{"type":"method","name":"consistent_read","children":[],"call":[" config simple_db_consistent_reads? "," config ","SimpleDB  send ","options [] ","options has_key? "]}," AWS SimpleDB Client valid_domain_name?":{"type":"method","name":"valid_domain_name?","children":[],"call":[" class valid_domain_name? "," class "]}," AWS SimpleDB AttributeCollection delete":{"type":"method","name":"delete","children":[],"call":[" delete_named_attributes "," delete_attribute_values ","args first ","args first kind_of? ","args size == ","args size "]}," AWS SimpleDB AttributeCollection to_h":{"type":"method","name":"to_h","children":[],"call":["hash [] << ","hash [] "," each_value "]}," AWS SimpleDB AttributeCollection put":{"type":"method","name":"put","children":[],"call":[" do_put "," attribute_hashes ","options [] "]}," AWS SimpleDB AttributeCollection add":{"type":"method","name":"add","children":[],"call":[" do_put "," attribute_hashes "]}," AWS SimpleDB AttributeCollection replace":{"type":"method","name":"replace","children":[],"call":[" do_put "," attribute_hashes "]}," AWS SimpleDB AttributeCollection each":{"type":"method","name":"each","children":[],"call":["yielded []= "," [] ","yielded [] "," each_value "]}," AWS SimpleDB AttributeCollection each_value":{"type":"method","name":"each_value","children":[],"call":["attribute value ","attribute name ","list attributes each ","list attributes "," client get_attributes "," consistent_read "," item name "," item "," item domain name "," item domain "," client "," client get_attributes  attributes each "," client get_attributes  attributes "]}," AWS SimpleDB AttributeCollection []=":{"type":"method","name":"[]=","children":[],"call":[" [] set "," [] "]}," AWS SimpleDB AttributeCollection []":{"type":"method","name":"[]","children":[],"call":["Attribute  new ","attribute_name to_s "," item "]}," AWS SimpleDB AttributeCollection initialize":{"type":"method","name":"initialize","children":[],"call":[]}," AWS SimpleDB Attribute put":{"type":"method","name":"put","children":[],"call":[" do_put "," attribute_hashes ","Hash  [] "," name ","values pop ","values last kind_of? ","values last "]}," AWS SimpleDB Attribute values":{"type":"method","name":"values","children":[],"call":["values << "," each "]}," AWS SimpleDB Attribute each":{"type":"method","name":"each","children":[],"call":["attribute value ","resp attributes each ","resp attributes "," client get_attributes "," consistent_read "," name "," item name "," item "," item domain name "," item domain "," client "," client get_attributes  attributes each "," client get_attributes  attributes "]}," AWS SimpleDB Attribute delete":{"type":"method","name":"delete","children":[],"call":[" delete_attribute_values ","Hash  [] merge ","Hash  [] "," name "," delete_named_attributes ","values empty? ","values pop ","values last kind_of? ","values last "]}," AWS SimpleDB Attribute add":{"type":"method","name":"add","children":[],"call":[" put "]}," AWS SimpleDB Attribute set":{"type":"method","name":"set","children":[],"call":[" put "]}," AWS SimpleDB Attribute initialize":{"type":"method","name":"initialize","children":[],"call":[]}," AWS ServiceInterface inspect":{"type":"method","name":"inspect","children":[],"call":[" class "]}," AWS ServiceInterface initialize":{"type":"method","name":"initialize","children":[],"call":[" config send ","Inflection  ruby_name + ","Inflection  ruby_name "," class to_s "," class "," config ","@config with ","AWS  config ","options [] ","@config with  with ","options []  with "]}," AWS ServiceInterface included":{"type":"method","name":"included","children":[],"call":[]}," AWS S3 buckets":{"type":"method","name":"buckets","children":[],"call":["BucketCollection  new "]}," AWS S3 UploadedPartCollection pagination_markers":{"type":"method","name":"pagination_markers","children":[],"call":[]}," AWS S3 UploadedPartCollection list_request":{"type":"method","name":"list_request","children":[],"call":[" client list_parts "," client "]}," AWS S3 UploadedPartCollection limit_param":{"type":"method","name":"limit_param","children":[],"call":[]}," AWS S3 UploadedPartCollection list_options":{"type":"method","name":"list_options","children":[],"call":["opts merge! "," upload id "," upload "," upload object key "," upload object "," upload object bucket name "," upload object bucket "]}," AWS S3 UploadedPartCollection each_member_in_page":{"type":"method","name":"each_member_in_page","children":[],"call":["UploadedPart  new ","part_info part_number "," upload ","page parts each ","page parts ","part_info etag ","UploadedPart  new _info UploadedPart  new _number ","page UploadedPart  new s each ","page UploadedPart  new s ","UploadedPart  new _info etag "]}," AWS S3 UploadedPartCollection []":{"type":"method","name":"[]","children":[],"call":["UploadedPart  new "," upload "]}," AWS S3 UploadedPartCollection initialize":{"type":"method","name":"initialize","children":[],"call":[]}," AWS S3 UploadedPart get_attribute":{"type":"method","name":"get_attribute","children":[],"call":[" raise ","part send ","part part_number == "," part_number ","part part_number ","resp parts first ","resp parts "," client list_parts "," part_number - "," upload id "," upload "," upload object key "," upload object "," upload object bucket name "," upload object bucket "," client ","resp parts first  send ","resp parts first  resp parts first _number == "," resp parts first _number ","resp parts first  resp parts first _number ","resp resp parts first s first "," client list_parts  parts first ","resp resp parts first s "," client list_parts  parts "," client list_resp parts first s "," resp parts first _number - "]}," AWS S3 UploadedPart etag":{"type":"method","name":"etag","children":[],"call":[" get_attribute "]}," AWS S3 UploadedPart last_modified":{"type":"method","name":"last_modified","children":[],"call":[" get_attribute "]}," AWS S3 UploadedPart size":{"type":"method","name":"size","children":[],"call":[" get_attribute "]}," AWS S3 UploadedPart ==":{"type":"method","name":"==","children":[],"call":["other part_number == "," part_number ","other part_number ","other upload == "," upload ","other upload ","other kind_of? "]}," AWS S3 UploadedPart initialize":{"type":"method","name":"initialize","children":[],"call":["opts [] "]}," AWS S3 Tree parent":{"type":"method","name":"parent","children":[],"call":[]}," AWS S3 Tree initialize":{"type":"method","name":"initialize","children":[],"call":[]}," AWS S3 Tree Parent inspect":{"type":"method","name":"inspect","children":[],"call":[" prefix "," collection bucket name "," collection bucket "," collection "," class "]}," AWS S3 Tree Parent children":{"type":"method","name":"children","children":[],"call":["Tree ChildCollection  new "," append? "," prefix "," delimiter "," collection "]}," AWS S3 Tree Parent append?":{"type":"method","name":"append?","children":[],"call":[]}," AWS S3 Tree Parent initialize":{"type":"method","name":"initialize","children":[],"call":["options [] ","(pair\n  (sym :prefix)\n  (nil)) merge ","(pair\n  (sym :prefix)\n  (nil)) merge  [] "]}," AWS S3 Tree LeafNode inspect":{"type":"method","name":"inspect","children":[],"call":[" key ","@member bucket name ","@member bucket "," class "]}," AWS S3 Tree LeafNode upload":{"type":"method","name":"upload","children":[],"call":[" raise ","@member kind_of? "]}," AWS S3 Tree LeafNode version":{"type":"method","name":"version","children":[],"call":[" raise ","@member kind_of? "]}," AWS S3 Tree LeafNode object":{"type":"method","name":"object","children":[],"call":["@member object ","@member kind_of? "]}," AWS S3 Tree LeafNode leaf?":{"type":"method","name":"leaf?","children":[],"call":[]}," AWS S3 Tree LeafNode branch?":{"type":"method","name":"branch?","children":[],"call":[]}," AWS S3 Tree LeafNode key":{"type":"method","name":"key","children":[],"call":["@member key "]}," AWS S3 Tree LeafNode initialize":{"type":"method","name":"initialize","children":[],"call":[]}," AWS S3 Tree ChildCollection prefix_with_delim":{"type":"method","name":"prefix_with_delim","children":[],"call":[" delimiter "," prefix "," prefix =~ "," prefix nil? "," append? "]}," AWS S3 Tree ChildCollection each":{"type":"method","name":"each","children":[],"call":["BranchNode  new "," append? "," delimiter "," parent ","member respond_to? ","LeafNode  new ","collection each ","collection with_prefix "," prefix_with_delim "," collection ","collection with_prefix  each "," collection  each ","collection with_prefix  with_prefix "," collection  with_prefix ","collection with_ prefix_with_delim  ","  prefix_with_delim _with_delim "," collection with_prefix  ","  collection  "]}," AWS S3 Tree ChildCollection append?":{"type":"method","name":"append?","children":[],"call":[]}," AWS S3 Tree ChildCollection initialize":{"type":"method","name":"initialize","children":[],"call":["options [] ","(pair\n  (sym :prefix)\n  (nil)) merge ","(pair\n  (sym :prefix)\n  (nil)) merge  [] "]}," AWS S3 Tree BranchNode as_tree":{"type":"method","name":"as_tree","children":[],"call":["Tree  new "," append? "," delimiter "," prefix "," collection "]}," AWS S3 Tree BranchNode leaf?":{"type":"method","name":"leaf?","children":[],"call":[]}," AWS S3 Tree BranchNode branch?":{"type":"method","name":"branch?","children":[],"call":[]}," AWS S3 Tree BranchNode initialize":{"type":"method","name":"initialize","children":[],"call":["options merge ","collection prefix "]}," AWS S3 S3Object optimal_part_size":{"type":"method","name":"optimal_part_size","children":[],"call":["(send\n  (begin\n    (send\n      (send\n        (lvar :total_size) :to_f) :/\n      (send\n        (lvar :maximum_parts) :to_f))) :ceil) max to_i ","(send\n  (begin\n    (send\n      (send\n        (lvar :total_size) :to_f) :/\n      (send\n        (lvar :maximum_parts) :to_f))) :ceil) max ","(send\n  (send\n    (lvar :total_size) :to_f) :/\n  (send\n    (lvar :maximum_parts) :to_f)) ceil ","total_size to_f / ","maximum_parts to_f ","total_size to_f "," config s3_multipart_min_part_size "," config ","options [] "," config s3_multipart_max_parts ","(send\n  (begin\n    (send\n      (send\n        (lvar :total_size) :to_f) :/\n      (send\n        (lvar : config s3_multipart_max_parts ) :to_f))) :ceil) max to_i ","(send\n  (begin\n    (send\n      (send\n        (lvar :total_size) :to_f) :/\n      (send\n        (lvar : config s3_multipart_max_parts ) :to_f))) :ceil) max ","(send\n  (send\n    (lvar :total_size) :to_f) :/\n  (send\n    (lvar : config s3_multipart_max_parts ) :to_f)) ceil "," config s3_multipart_max_parts  to_f "]}," AWS S3 S3Object each_part":{"type":"method","name":"each_part","children":[],"call":["stream read ","stream eof? ! ","stream eof? "," data_stream_from ","data_options merge "," optimal_part_size "," content_length_from "," data_stream_from  read "," data_stream_from  eof? ! "," data_stream_from  eof? "," data_ data_stream_from _from "," optimal_ optimal_part_size  "]}," AWS S3 S3Object use_multipart?":{"type":"method","name":"use_multipart?","children":[],"call":["size > "," content_length_from ","data_options merge ","options [] ! ","options [] "," config s3_multipart_threshold "," config "," estimated_content_length > "," multipart_threshold "," estimated_content_length "," content_length_from  > "]}," AWS S3 S3Object compute_put_options":{"type":"method","name":"compute_put_options","children":[],"call":["options_or_data [] ","options_or_data kind_of? "," raise ","ArgumentError  new ","options [] "]}," AWS S3 S3Object request_for_signing":{"type":"method","name":"request_for_signing","children":[],"call":["req add_param ","options [] ","param to_s tr ","param to_s ","options key? ","REQUEST_PARAMETERS  each ","req host= "," config s3_endpoint "," config ","req key= "," key ","req bucket= "," bucket name "," bucket ","Request  new ","req force_path_style= ","options fetch "," config s3_force_path_style ","req port= "," config s3_port ","(int 443) include? ","Request  new  add_param ","Request  new  host= ","Request  new  key= ","Request  new  bucket= ","Request  new  force_path_style= ","Request  new  port= ","req  config s3_port = "," config s3_ config s3_port  "]}," AWS S3 S3Object http_method":{"type":"method","name":"http_method","children":[],"call":["symbol to_s upcase ","symbol to_s "]}," AWS S3 S3Object expiration_timestamp":{"type":"method","name":"expiration_timestamp","children":[],"call":["(send\n  (send\n    (const nil :Time) :now) :+\n  (send\n    (int 60) :*\n    (int 60))) to_i ","Time  now + ","60 * ","Time  now ","Time  parse to_i ","Time  parse ","(send\n  (send\n    (const nil :Time) :now) :+\n  (lvar :input)) to_i ","input to_s ","input to_i ","input to_int ","input respond_to? ","(send\n  (send\n    (const nil :Time) :now) :+\n  (lvar :input to_int )) to_i ","input to_int  to_s ","input to_int  to_i ","input to_int  to_int ","input to_int  respond_to? "]}," AWS S3 S3Object signature":{"type":"method","name":"signature","children":[],"call":[" config signer sign "," config signer "," config ","(lvar :method) join ","request canonicalized_resource ","Core Signer  sign "," config credential_provider secret_access_key "," config credential_provider ","parts join ","parts << "," config credential_provider session_token ","options [] ","options [] to_s ","request http_method "," config signer session_token ","Core Signers Base  sign ","Core Signers S3  canonicalized_resource "," config credential_provider  config credential_provider secret_access_key _access_key "," config credential_provider session_ config credential_provider session_token  "," config signer session_ config credential_provider session_token  "]}," AWS S3 S3Object build_uri":{"type":"method","name":"build_uri","children":[],"call":["uri_class build ","request querystring ","request path ","request host ","request port ","options [] "]}," AWS S3 S3Object presigned_post":{"type":"method","name":"presigned_post","children":[],"call":["PresignedPost  new ","options merge "," key "," bucket "]}," AWS S3 S3Object public_url":{"type":"method","name":"public_url","children":[],"call":[" build_uri ","options [] != ","options [] "," request_for_signing ","options []= "," config use_ssl? "," config ","options key? ","  request_for_signing uest_for_signing "]}," AWS S3 S3Object url_for":{"type":"method","name":"url_for","children":[],"call":[" build_uri ","options [] != ","options [] ","req add_param "," signature "," config signer access_key_id "," config signer "," config "," expiration_timestamp "," http_method "," request_for_signing "," config credential_provider session_token "," config credential_provider "," config credential_provider access_key_id ","req http_method= ","options []= "," config use_ssl? ","options key? ","options dup "," config signer session_token ","options [] to_s sub ","options [] to_s "," raise ","msg << ","options [] inspect "," presign_v4 "," presign_v3 "," config s3_signature_version ","options fetch ","options dup  [] != ","options dup  [] "," request_for_signing  add_param "," http_ http_method  ","  request_for_signing uest_for_signing ","req http_ http_method = "," request_for_signing  http_method= ","options dup  []= ","options dup  key? ","options dup  dup ","options dup  [] to_s sub ","options dup  [] to_s ","options dup  [] inspect ","options dup  fetch "]}," AWS S3 S3Object acl=":{"type":"method","name":"acl=","children":[],"call":[" client set_object_acl "," key "," bucket name "," bucket "," client "," client put_object_acl "," acl_options merge "," acl_options ","client_opts []= "]}," AWS S3 S3Object acl":{"type":"method","name":"acl","children":[],"call":["acl object= ","acl extend "," client get_object_acl acl "," client get_object_acl "," key "," bucket name "," bucket "," client ","AccessControlList  new ","resp data "," client get_object_acl acl  object= ","AccessControlList  new  object= "," client get_object_acl acl  extend ","AccessControlList  new  extend "," client get_object_ client get_object_acl acl   client get_object_acl acl  "," client get_object_AccessControlList  new  AccessControlList  new  "," client get_object_ client get_object_acl acl  "," client get_object_AccessControlList  new  "," client get_object_acl  data "]}," AWS S3 S3Object ACLProxy change":{"type":"method","name":"change","children":[],"call":[" object acl= "," object "]}," AWS S3 S3Object read":{"type":"method","name":"read","children":[],"call":[" client get_object data "," client get_object "," client ","options []= "," key "," bucket name "," bucket ","resp_data [] "," block_given? "," get_object "," get_encrypted_object "," should_decrypt? "," client get_object data [] "," get_object  [] "]}," AWS S3 S3Object copy_to":{"type":"method","name":"copy_to","children":[],"call":["target copy_from ","copy_opts delete ","options dup ","S3Object  new "," bucket ","Bucket  new "," config ","options [] ","target is_a? ","S3Object  new  copy_from ","options dup  delete ","S3Object  new  is_a? "]}," AWS S3 S3Object copy_from":{"type":"method","name":"copy_from","children":[],"call":[" client copy_object "," client ","copy_opts []= ","options [] "," bucket name "," bucket ","options [] name ","source object key ","source object ","source object bucket name ","source object bucket ","source version_id ","source key ","source bucket name ","source bucket "," key "," multipart_copy "," use_multipart_copy? ","options []= ","options delete "," add_sse_options "," copy_cse_materials ","options key? ","(sym :metadata) any? ","options delete name ","options dup "," add_configured_write_options ","options [] merge ","options dup  [] ","options dup  [] name ","options dup  []= ","options dup  delete "," add_sse_options dup  ","options dup  key? ","options dup  delete name ","options dup  dup "," add_configured_write_options dup  ","options dup  [] merge "]}," AWS S3 S3Object multipart_uploads":{"type":"method","name":"multipart_uploads","children":[],"call":["ObjectUploadCollection  new "]}," AWS S3 S3Object multipart_upload":{"type":"method","name":"multipart_upload","children":[],"call":["upload close "," block_given? "," multipart_uploads create "," multipart_uploads "," raise ","upload abort "," add_sse_options ","options dup "," add_configured_write_options "," multipart_uploads create  close "," multipart_ multipart_uploads create s create "," multipart_ multipart_uploads create s "," multipart_uploads create  abort "," add_sse_options dup  ","options dup  dup "," add_configured_write_options dup  "]}," AWS S3 S3Object write":{"type":"method","name":"write","children":[],"call":["ObjectVersion  new ","resp version_id "," client put_object ","opts merge merge ","opts merge "," client "," key "," bucket name "," bucket ","upload add_part "," each_part "," multipart_upload ","put_options delete "," use_multipart? "," compute_put_options "," write_with_put_object "," write_with_multipart "," add_cse_options "," add_sse_options "," add_storage_class_option "," compute_write_options "," add_configured_write_options ","resp data [] ","resp data ","put_options []= ","acl to_s tr ","acl to_s ","put_options [] "," client put_object  version_id ","put_ compute_write_options  delete "," compute_put_ compute_write_options  "," add_cse_ compute_write_options  "," add_sse_ compute_write_options  "," compute_write_ compute_write_options  "," add_configured_write_ compute_write_options  "," client put_object  data [] "," client put_object  data ","put_ compute_write_options  []= ","put_options []  to_s tr ","put_options []  to_s ","put_ compute_write_options  [] "]}," AWS S3 S3Object versions":{"type":"method","name":"versions","children":[],"call":["ObjectVersionCollection  new "]}," AWS S3 S3Object metadata":{"type":"method","name":"metadata","children":[],"call":["ObjectMetadata  new ","options []= "," config "]}," AWS S3 S3Object delete":{"type":"method","name":"delete","children":[],"call":[" client delete_object "," client ","options []= "," key "," bucket name "," bucket "," key + ","options [] ","options merge "]}," AWS S3 S3Object content_type":{"type":"method","name":"content_type","children":[],"call":[" head content_type "," head "," head [] "]}," AWS S3 S3Object content_length":{"type":"method","name":"content_length","children":[],"call":[" head content_length "," head "," head [] "]}," AWS S3 S3Object etag":{"type":"method","name":"etag","children":[],"call":[" head etag "," head "," head [] "]}," AWS S3 S3Object head":{"type":"method","name":"head","children":[],"call":[" client head_object ","options merge "," key "," bucket name "," bucket "," client "]}," AWS S3 S3Object ==":{"type":"method","name":"==","children":[],"call":["other key == "," key ","other key ","other bucket == "," bucket ","other bucket ","other kind_of? "]}," AWS S3 S3Object inspect":{"type":"method","name":"inspect","children":[],"call":[" key "," bucket name "," bucket "," class "]}," AWS S3 S3Object initialize":{"type":"method","name":"initialize","children":[],"call":[]}," AWS S3 Request query_parameters":{"type":"method","name":"query_parameters","children":[],"call":[]}," AWS S3 Request sub_resources":{"type":"method","name":"sub_resources","children":[],"call":[]}," AWS S3 Request add_authorization!":{"type":"method","name":"add_authorization!","children":[],"call":[" headers []= ","signer access_key_id "," headers ","URI  escape ","signer sign "," string_to_sign ","signer session_token ","signer respond_to? ","credentials access_key_id ","Core Signer  sign ","credentials secret_access_key ","credentials session_token ","signer session_signer session_token  ","signer session_credentials session_token  ","credentials credentials secret_access_key _access_key ","credentials session_signer session_token  ","credentials session_credentials session_token  "]}," AWS S3 Request query_parameters_for_signature":{"type":"method","name":"query_parameters_for_signature","children":[],"call":[" class query_parameters include? ","p name "," class query_parameters "," class "," params select "," params "]}," AWS S3 Request sub_resource_params":{"type":"method","name":"sub_resource_params","children":[],"call":[" class sub_resources include? ","p name "," class sub_resources "," class "," params select "," params "]}," AWS S3 Request canonicalized_headers":{"type":"method","name":"canonicalized_headers","children":[],"call":["x_amz == ","(send\n  (lvar :x_amz) :collect) join ","x_amz collect ","x_amz sort_by ","name downcase ","name to_s =~ ","name to_s "," headers select "," headers ","value to_s strip ","value to_s ","(send\n  (lvar :x_amz) :collect) join  == ","(send\n  (lvar :(send\n  (lvar :x_amz) :collect) join ) :collect) join ","(send\n  (lvar :x_amz) :collect) join  collect ","(send\n  (lvar :x_amz) :collect) join  sort_by "]}," AWS S3 Request canonicalized_resource":{"type":"method","name":"canonicalized_resource","children":[],"call":["parts join ","parts << ","(send\n  (send\n    (lvar :params) :sort) :collect) join ","p to_s ","params sort collect ","params sort ","params empty? "," sub_resource_params + "," query_parameters_for_signature "," sub_resource_params "," path "," bucket ","Client  dns_compatible_bucket_name? ","Client  path_style_bucket_name? ! ","Client  path_style_bucket_name? "," path_style? ! "," path_style? "]}," AWS S3 Request signing_string_date":{"type":"method","name":"signing_string_date","children":[],"call":["Time  now rfc822 ","Time  now "," headers [] "," headers ","k to_s =~ ","k to_s "," headers detect ","Time  now httpdate "]}," AWS S3 Request string_to_sign":{"type":"method","name":"string_to_sign","children":[],"call":["(send nil :http_method) flatten compact join ","(send nil :http_method) flatten compact ","(send nil :http_method) flatten "," canonicalized_resource "," canonicalized_headers "," signing_string_date "," headers values_at join "," headers values_at "," headers "," http_method "]}," AWS S3 Request body":{"type":"method","name":"body","children":[],"call":["@body_stream rewind ","@body_stream read "]}," AWS S3 Request body=":{"type":"method","name":"body=","children":[],"call":["StringIO  new "]}," AWS S3 Request querystring":{"type":"method","name":"querystring","children":[],"call":[" url_encoded_params "]}," AWS S3 Request path":{"type":"method","name":"path","children":[],"call":["parts join ","parts << "," key "," bucket ","Client  dns_compatible_bucket_name? "," bucket nil? ","Client  path_style_bucket_name? "," escape_path "," path_style? "]}," AWS S3 Request host":{"type":"method","name":"host","children":[],"call":[" bucket ","Client  dns_compatible_bucket_name? ","Client  path_style_bucket_name? "," path_style? "]}," AWS S3 Request storage_class=":{"type":"method","name":"storage_class=","children":[],"call":[" headers []= "," headers ","storage_class to_s upcase ","storage_class to_s ","storage_class kind_of? "]}," AWS S3 Request canned_acl=":{"type":"method","name":"canned_acl=","children":[],"call":[" headers []= "," headers ","acl to_s gsub ","acl to_s ","acl kind_of? "]}," AWS S3 Request metadata=":{"type":"method","name":"metadata=","children":[],"call":[" headers []= "," headers "," Array each "," Array "]}," AWS S3 PresignedPost build_uri":{"type":"method","name":"build_uri","children":[],"call":["uri_class build ","request querystring ","request path ","request host "," secure? "]}," AWS S3 PresignedPost key_conditions":{"type":"method","name":"key_conditions","children":[],"call":[" key "," key [] "," key include? "]}," AWS S3 PresignedPost range_conditions":{"type":"method","name":"range_conditions","children":[],"call":[" split_range "," content_length "]}," AWS S3 PresignedPost ignored_conditions":{"type":"method","name":"ignored_conditions","children":[],"call":[" ignored_fields map "," ignored_fields "]}," AWS S3 PresignedPost generate_conditions":{"type":"method","name":"generate_conditions","children":[],"call":["(send\n  (send nil :conditions) :inject\n  (array)) + + + + + "," ignored_conditions ","(send\n  (send nil :conditions) :inject\n  (array)) + + + + "," range_conditions ","(send\n  (send nil :conditions) :inject\n  (array)) + + + ","Hash  [] "," optional_fields map "," optional_fields ","(send\n  (send nil :conditions) :inject\n  (array)) + + "," key_conditions ","(send\n  (send nil :conditions) :inject\n  (array)) + "," bucket name "," bucket "," conditions inject "," conditions ","conditions << "," config credential_provider session_token "," config credential_provider "," config ","list + "," config signer session_token "," config signer "," config credential_provider session_ config credential_provider session_token  "," config signer session_ config credential_provider session_token  "]}," AWS S3 PresignedPost field_name":{"type":"method","name":"field_name","children":[],"call":["field_name []= ","field_name [] upcase ","field_name [] ","m upcase ","option_name to_s tr gsub ","option_name to_s tr ","option_name to_s ","option_name to_s downcase "]}," AWS S3 PresignedPost optional_fields":{"type":"method","name":"optional_fields","children":[],"call":["fields []= ","value to_s ","@metadata each ","fields [] tr ","fields [] ","@fields [] to_s ","@fields [] "," field_name ","(send\n  (const nil :SPECIAL_FIELDS) :&\n  (send\n    (ivar :@fields) :keys)) inject ","SPECIAL_FIELDS  & ","@fields keys "," field_value ","@fields keys inject "]}," AWS S3 PresignedPost split_range":{"type":"method","name":"split_range","children":[],"call":["range end ","range end - ","range exclude_end? ","range begin "," range_value "," range_value  end "," range_value  end - "," range_value  exclude_end? "," range_value  begin ","  range_value _value "]}," AWS S3 PresignedPost range_value":{"type":"method","name":"range_value","children":[],"call":[]}," AWS S3 PresignedPost format_expiration":{"type":"method","name":"format_expiration","children":[],"call":["time utc iso8601 ","time utc ","Time  parse ","Time  now + ","Time  now ","time to_s ","Time  now utc + ","60 * ","Time  now utc "," expires "]}," AWS S3 PresignedPost with_condition":{"type":"method","name":"with_condition","children":[],"call":[" refine ","(or-asgn\n  (send\n    (lvar :conditions) :[]\n    (lvar :field))\n  (array)) << ","conditions [] "," conditions dup "," conditions ","(or-asgn\n  (send\n    (lvar : conditions dup ) :[]\n    (lvar :field))\n  (array)) << "," conditions dup  [] ","  conditions dup  dup ","  conditions dup  "]}," AWS S3 PresignedPost refine":{"type":"method","name":"refine","children":[],"call":[" class new ","(pair\n  (sym :conditions)\n  (send nil :conditions)) merge merge ","(pair\n  (sym :conditions)\n  (send nil :conditions)) merge "," content_length "," secure? "," metadata "," key "," conditions "," bucket "," class "," expires "," ignored_fields "]}," AWS S3 PresignedPost with_prefix_condition":{"type":"method","name":"with_prefix_condition","children":[],"call":[" with_condition "," field_name ","  field_name  "]}," AWS S3 PresignedPost with_equality_condition":{"type":"method","name":"with_equality_condition","children":[],"call":[" with_condition ","Hash  [] "," field_name ","  field_name  "]}," AWS S3 PresignedPost fields":{"type":"method","name":"fields","children":[],"call":["(pair\n  (str \"AWSAccessKeyId\")\n  (send\n    (send\n      (send nil :config) :signer) :access_key_id)) merge "," optional_fields "," policy "," key "," config signer access_key_id "," config signer "," config "," config signer sign ","fields merge ","fields []= "," config credential_provider session_token "," config credential_provider ","(pair\n  (str \"AWSAccessKeyId\")\n  (send\n    (send\n      (send nil :config) :credential_provider) :access_key_id)) merge "," config credential_provider access_key_id ","Core Signer  sign "," config credential_provider secret_access_key "," config signer session_token ","Core Signers Base  sign "," optional_(pair\n  (str \"AWSAccessKeyId\")\n  (send\n    (send\n      (send nil :config) :credential_provider) :access_key_id)) merge  "," optional_(pair\n  (str \"AWSAccessKeyId\")\n  (send\n    (send\n      (send nil :config) :signer) :access_key_id)) merge  ","(pair\n  (str \"AWSAccessKeyId\")\n  (send\n    (send\n      (send nil :config) :credential_provider) :access_key_id)) merge  merge ","(pair\n  (str \"AWSAccessKeyId\")\n  (send\n    (send\n      (send nil :config) :signer) :access_key_id)) merge  merge ","(pair\n  (str \"AWSAccessKeyId\")\n  (send\n    (send\n      (send nil :config) :credential_provider) :access_key_id)) merge  []= ","(pair\n  (str \"AWSAccessKeyId\")\n  (send\n    (send\n      (send nil :config) :signer) :access_key_id)) merge  []= "," config credential_provider session_ config credential_provider session_token  "," config credential_provider  config credential_provider secret_access_key _access_key "," config signer session_ config credential_provider session_token  "]}," AWS S3 PresignedPost policy":{"type":"method","name":"policy","children":[],"call":["Base64  encode64 ","(pair\n  (str \"expiration\")\n  (send nil :format_expiration)) to_json "," generate_conditions "," format_expiration ","Base64  encode64 tr ","(pair\n  (str \"expiration\")\n  (send nil :format_expiration)) to_(pair\n  (str \"expiration\")\n  (send nil :format_expiration)) to_json  "]}," AWS S3 PresignedPost where_metadata":{"type":"method","name":"where_metadata","children":[],"call":[" where "]}," AWS S3 PresignedPost where":{"type":"method","name":"where","children":[],"call":["ConditionBuilder  new "," raise ","ArgumentError  new ","field =~ ","(sym :key) include? "]}," AWS S3 PresignedPost ConditionBuilder in":{"type":"method","name":"in","children":[],"call":["@post refine "]}," AWS S3 PresignedPost ConditionBuilder starts_with":{"type":"method","name":"starts_with","children":[],"call":["@post with_prefix_condition "]}," AWS S3 PresignedPost ConditionBuilder is":{"type":"method","name":"is","children":[],"call":["@post with_equality_condition "," in ","@field == "]}," AWS S3 PresignedPost ConditionBuilder initialize":{"type":"method","name":"initialize","children":[],"call":[]}," AWS S3 PresignedPost url":{"type":"method","name":"url","children":[],"call":[" build_uri ","req host= "," config s3_endpoint "," config ","req bucket= "," bucket name "," bucket ","Request  new ","Request  new  host= ","Request  new  bucket= "]}," AWS S3 PresignedPost secure?":{"type":"method","name":"secure?","children":[],"call":[]}," AWS S3 PresignedPost initialize":{"type":"method","name":"initialize","children":[],"call":["opts [] ","(send\n  (lvar :opts) :[]\n  (sym :ignore)) flatten compact ","(send\n  (lvar :opts) :[]\n  (sym :ignore)) flatten "," range_value ","@fields []= ","opts key? ","SPECIAL_FIELDS  each ","opts [] != ","@fields delete ","@fields [] nil? ","@fields [] "," config s3_server_side_encryption "," config ","@fields key? ","SPECIAL_FIELDS  include? ","opts each "]}," AWS S3 PrefixedCollection list_options":{"type":"method","name":"list_options","children":[],"call":["opts []= "," prefix "]}," AWS S3 PrefixedCollection with_prefix":{"type":"method","name":"with_prefix","children":[],"call":[" class new "," bucket "," class "," raise ","(str \"invalid prefix mode `\") + "]}," AWS S3 PrefixedCollection initialize":{"type":"method","name":"initialize","children":[],"call":["args push ","options [] ","args pop ","args last is_a? ","args last ","args pop  [] "]}," AWS S3 PrefixAndDelimiterCollection list_options":{"type":"method","name":"list_options","children":[],"call":["opts []= ","options [] ","options key? "]}," AWS S3 PrefixAndDelimiterCollection each_member_in_page":{"type":"method","name":"each_member_in_page","children":[],"call":[" with_prefix ","page common_prefixes each ","page common_prefixes ","p [] "]}," AWS S3 PrefixAndDelimiterCollection as_tree":{"type":"method","name":"as_tree","children":[],"call":["Tree  new ","(pair\n  (sym :prefix)\n  (send nil :prefix)) merge "," prefix "]}," AWS S3 PrefixAndDelimiterCollection each":{"type":"method","name":"each","children":[],"call":[" each_member_in_page "," each_page "]}," AWS S3 Policy Statement resource_arn":{"type":"method","name":"resource_arn","children":[],"call":["resource prefix ","resource bucket name ","resource bucket ","resource key ","resource name "]}," AWS S3 PaginatedCollection page_size":{"type":"method","name":"page_size","children":[],"call":["prefixes size ","resp common_prefixes ","resp respond_to? ","resp common_prefixes  size ","resp common_resp common_prefixes  "]}," AWS S3 PaginatedCollection next_markers":{"type":"method","name":"next_markers","children":[],"call":["markers []= ","page send "," pagination_markers inject "," pagination_markers ","page data [] ","page data ","page data [] s []= ","page send s []= "," pagination_page data [] s inject "," pagination_page send s inject "," pagination_page data [] s "," pagination_page send s "]}," AWS S3 PaginatedCollection pagination_markers":{"type":"method","name":"pagination_markers","children":[],"call":[]}," AWS S3 PaginatedCollection limit_param":{"type":"method","name":"limit_param","children":[],"call":[" raise "]}," AWS S3 PaginatedCollection list_options":{"type":"method","name":"list_options","children":[],"call":["opts []= "," bucket name "," bucket "," respond_to? "]}," AWS S3 PaginatedCollection list_request":{"type":"method","name":"list_request","children":[],"call":[" raise "]}," AWS S3 PaginatedCollection each_page":{"type":"method","name":"each_page","children":[],"call":["page truncated? "," page_size "," next_markers "," list_request ","page_opts []= ","(send\n  (lvar :limit) :-\n  (lvar :received)) min ","limit - "," limit_param ","page_opts merge! ","opts dup "," loop ","options [] "," list_options "," list_request  truncated? ","  list_request _size "," next_ next_markers  "," list_request _opts []= ","opts dup  []= ","page_ list_options  []= ","(send\n  (lvar :options [] ) :-\n  (lvar :received)) min ","options []  - "," options [] _param "," list_request _opts merge! ","opts dup  merge! ","page_ list_options  merge! "," list_options  dup "]}," AWS S3 PaginatedCollection each_member_in_page":{"type":"method","name":"each_member_in_page","children":[],"call":[]}," AWS S3 PaginatedCollection each":{"type":"method","name":"each","children":[],"call":[" each_member_in_page "," each_page "]}," AWS S3 ObjectVersionCollection each":{"type":"method","name":"each","children":[],"call":["version key == "," object key "," object ","version key "," object bucket versions with_prefix each "," object bucket versions with_prefix "," object bucket versions "," object bucket "]}," AWS S3 ObjectVersionCollection latest":{"type":"method","name":"latest","children":[],"call":[" find "]}," AWS S3 ObjectVersionCollection []":{"type":"method","name":"[]","children":[],"call":["ObjectVersion  new "," object "]}," AWS S3 ObjectVersionCollection initialize":{"type":"method","name":"initialize","children":[],"call":[]}," AWS S3 ObjectVersion inspect":{"type":"method","name":"inspect","children":[],"call":[" version_id "," object key "," object "," object bucket name "," object bucket "," class "]}," AWS S3 ObjectVersion ==":{"type":"method","name":"==","children":[],"call":["other version_id == "," version_id ","other version_id ","other object == "," object ","other object ","other kind_of? "]}," AWS S3 ObjectVersion delete_marker?":{"type":"method","name":"delete_marker?","children":[],"call":[" metadata [] "," metadata ","@delete_marker nil? "]}," AWS S3 ObjectVersion latest?":{"type":"method","name":"latest?","children":[],"call":[" object versions latest version_id == "," version_id "," object versions latest version_id "," object versions latest "," object versions "," object "]}," AWS S3 ObjectVersion delete":{"type":"method","name":"delete","children":[],"call":[" object delete "," object ","options [] "]}," AWS S3 ObjectVersion read":{"type":"method","name":"read","children":[],"call":[" object read ","options merge "," object "]}," AWS S3 ObjectVersion metadata":{"type":"method","name":"metadata","children":[],"call":[" object metadata "," object "]}," AWS S3 ObjectVersion content_type":{"type":"method","name":"content_type","children":[],"call":[" head content_type "," head "]}," AWS S3 ObjectVersion content_length":{"type":"method","name":"content_length","children":[],"call":[" head content_length "," head "]}," AWS S3 ObjectVersion etag":{"type":"method","name":"etag","children":[],"call":[" head etag "," head "]}," AWS S3 ObjectVersion head":{"type":"method","name":"head","children":[],"call":[" object head "," object "]}," AWS S3 ObjectVersion key":{"type":"method","name":"key","children":[],"call":[" object key "," object "]}," AWS S3 ObjectVersion bucket":{"type":"method","name":"bucket","children":[],"call":[" object bucket "," object "]}," AWS S3 ObjectVersion initialize":{"type":"method","name":"initialize","children":[],"call":["options [] "]}," AWS S3 ObjectUploadCollection []":{"type":"method","name":"[]","children":[],"call":["MultipartUpload  new "," object "]}," AWS S3 ObjectUploadCollection each":{"type":"method","name":"each","children":[],"call":["upload object key == ","@object key ","upload object key ","upload object ","@all_uploads each "]}," AWS S3 ObjectUploadCollection create":{"type":"method","name":"create","children":[],"call":["MultipartUpload  new "," object "," client initiate_multipart_upload upload_id "," client initiate_multipart_upload "," client ","(pair\n  (sym :bucket_name)\n  (send\n    (send\n      (send nil :object) :bucket) :name)) merge "," object key "," object bucket name "," object bucket ","options []= ","options delete "," client initiate_multipart_upload upload_ client initiate_multipart_upload upload_id  "]}," AWS S3 ObjectUploadCollection initialize":{"type":"method","name":"initialize","children":[],"call":["MultipartUploadCollection  new with_prefix ","object key ","MultipartUploadCollection  new ","object bucket "]}," AWS S3 ObjectMetadata to_h":{"type":"method","name":"to_h","children":[],"call":[" client head_object meta "," client head_object "," client ","options []= "," object key "," object "," object bucket name "," object bucket "]}," AWS S3 ObjectMetadata method_missing":{"type":"method","name":"method_missing","children":[],"call":[" [] ","args empty? ! ","args empty? "]}," AWS S3 ObjectMetadata []":{"type":"method","name":"[]","children":[],"call":[" to_h [] ","name to_s "," to_h "]}," AWS S3 ObjectMetadata initialize":{"type":"method","name":"initialize","children":[],"call":["options [] "]}," AWS S3 ObjectCollection next_markers":{"type":"method","name":"next_markers","children":[],"call":["last key ","page contents last ","page contents "," raise ","marker nil? ","page [] last [] ","page [] last ","page [] ","page [] size > ","page [] size ","page contents last  key ","page contents page contents last  ","page [] last []  nil? ","page []  nil? ","page [] page contents last  [] ","page [] page contents last  "]}," AWS S3 ObjectCollection page_size":{"type":"method","name":"page_size","children":[],"call":[" + ","resp contents size ","resp contents "]}," AWS S3 ObjectCollection limit_param":{"type":"method","name":"limit_param","children":[],"call":[]}," AWS S3 ObjectCollection list_request":{"type":"method","name":"list_request","children":[],"call":[" client list_objects "," client "]}," AWS S3 ObjectCollection each_member_in_page":{"type":"method","name":"each_member_in_page","children":[],"call":["S3Object  new ","content key "," bucket ","page contents each ","page contents "]}," AWS S3 ObjectCollection each":{"type":"method","name":"each","children":[],"call":[]}," AWS S3 ObjectCollection with_prefix":{"type":"method","name":"with_prefix","children":[],"call":[]}," AWS S3 ObjectCollection []":{"type":"method","name":"[]","children":[],"call":["S3Object  new ","key to_s "," bucket "]}," AWS S3 ObjectCollection create":{"type":"method","name":"create","children":[],"call":[" [] write "," [] "]}," AWS S3 ObjectCollection initialize":{"type":"method","name":"initialize","children":[],"call":[]}," AWS S3 MultipartUploadCollection page_size":{"type":"method","name":"page_size","children":[],"call":[" + ","resp uploads size ","resp uploads "]}," AWS S3 MultipartUploadCollection pagination_markers":{"type":"method","name":"pagination_markers","children":[],"call":[" + "]}," AWS S3 MultipartUploadCollection limit_param":{"type":"method","name":"limit_param","children":[],"call":[]}," AWS S3 MultipartUploadCollection list_request":{"type":"method","name":"list_request","children":[],"call":[" client list_multipart_uploads "," client "]}," AWS S3 MultipartUploadCollection each_member_in_page":{"type":"method","name":"each_member_in_page","children":[],"call":["MultipartUpload  new ","u upload_id ","S3Object  new ","u key "," bucket ","page uploads each ","page uploads ","u MultipartUpload  new _id ","page MultipartUpload  new s each ","page MultipartUpload  new s "]}," AWS S3 MultipartUploadCollection initialize":{"type":"method","name":"initialize","children":[],"call":[]}," AWS S3 MultipartUpload base_opts":{"type":"method","name":"base_opts","children":[],"call":["opts []= "," upload_id "," object key "," object "," object bucket name "," object bucket "]}," AWS S3 MultipartUpload get_complete_opts":{"type":"method","name":"get_complete_opts","children":[],"call":["part_numbers include? ! ","part_numbers include? ","part [] ","complete_opts [] reject! ","complete_opts [] "," base_opts merge ","part etag ","part part_number ","parts_resp parts map ","parts_resp parts "," base_opts "," client list_parts "," client ","parts reject! ","parts << "," parts each "," parts "," base_opts merge  [] reject! "," base_opts merge  [] "," client list_parts  parts map "," client list_parts  parts "]}," AWS S3 MultipartUpload inspect":{"type":"method","name":"inspect","children":[],"call":[" id "," object key "," object "," object bucket name "," object bucket "," class "]}," AWS S3 MultipartUpload completed_parts":{"type":"method","name":"completed_parts","children":[],"call":["a [] <=> ","b [] ","a [] ","@completed_parts values sort ","@completed_parts values "]}," AWS S3 MultipartUpload parts":{"type":"method","name":"parts","children":[],"call":["UploadedPartCollection  new "]}," AWS S3 MultipartUpload close":{"type":"method","name":"close","children":[],"call":[" complete "," abort "," completed_parts empty? "," completed_parts "," aborted? "]}," AWS S3 MultipartUpload complete":{"type":"method","name":"complete","children":[],"call":[" object ","ObjectVersion  new ","resp version_id "," client complete_multipart_upload "," client "," raise ","complete_opts [] empty? ","complete_opts [] "," get_complete_opts ","ArgumentError  new ","part part_number ","cannot complete an upload with parts  + ","part upload == ","part upload ","parts map "," base_opts merge "," completed_parts "," base_opts ","parts first ","parts flatten ","resp data [] ","resp data ","EmptyUploadError  new "," client complete_multipart_upload  version_id "," get_complete_opts  [] empty? "," base_opts merge  [] empty? "," get_complete_opts  [] "," base_opts merge  [] "," get_ get_complete_opts  "," get_ base_opts merge  ","cannot complete an upload with parts flatten   + ","parts flatten  map "," completed_parts flatten  ","parts flatten  first ","parts flatten  flatten "," client complete_multipart_upload  data [] "," client complete_multipart_upload  data "]}," AWS S3 MultipartUpload add_part":{"type":"method","name":"add_part","children":[],"call":["UploadedPart  new ","@completed_parts []= ","resp etag ","@completed_mutex synchronize "," client upload_part "," client ","part_options [] ","part_options []= ","@increment_mutex synchronize ","part_options merge! "," base_opts merge "," base_opts ","data_or_options kind_of? "," client upload_part  etag "," base_opts merge  [] "," base_opts merge  []= "," base_opts merge  merge! "]}," AWS S3 MultipartUpload aborted?":{"type":"method","name":"aborted?","children":[],"call":[]}," AWS S3 MultipartUpload abort":{"type":"method","name":"abort","children":[],"call":[" client abort_multipart_upload "," base_opts "," client "," aborted? "]}," AWS S3 MultipartUpload reduced_redundancy?":{"type":"method","name":"reduced_redundancy?","children":[],"call":[" storage_class == "," storage_class "]}," AWS S3 MultipartUpload storage_class":{"type":"method","name":"storage_class","children":[],"call":[" client list_parts storage_class downcase to_sym "," client list_parts storage_class downcase "," client list_parts storage_class "," client list_parts "," base_opts "," client "]}," AWS S3 MultipartUpload owner":{"type":"method","name":"owner","children":[],"call":[" client list_parts owner "," client list_parts "," base_opts "," client "]}," AWS S3 MultipartUpload initiator":{"type":"method","name":"initiator","children":[],"call":[" client list_parts initiator "," client list_parts "," base_opts "," client "]}," AWS S3 MultipartUpload exists?":{"type":"method","name":"exists?","children":[],"call":[" client list_parts "," base_opts "," client "]}," AWS S3 MultipartUpload ==":{"type":"method","name":"==","children":[],"call":["other id == "," id ","other id ","other object == "," object ","other object ","other kind_of? "]}," AWS S3 MultipartUpload bucket":{"type":"method","name":"bucket","children":[],"call":[" object bucket "," object "]}," AWS S3 MultipartUpload initialize":{"type":"method","name":"initialize","children":[],"call":["Mutex  new "]}," AWS S3 DataOptions validate_data!":{"type":"method","name":"validate_data!","children":[],"call":[" raise ","data must be provided as a String,  + ","data respond_to? ","data method arity != ","data method arity ","data method ","data kind_of? ","filename kind_of? ","block arity == ","block arity ","(lvar :data) compact size > ","(lvar :data) compact size ","(lvar :data) compact ","options [] ","msg << "," io_like? "," block_given? ","(lvar :data) compact count > ","(lvar :data) compact count ","options []  must be provided as a String,  + ","options []  respond_to? ","options []  method arity != ","options []  method arity ","options []  method ","options []  kind_of? ","options [] name kind_of? ","(lvar :options [] ) compact size > ","(lvar :options [] ) compact size ","(lvar :options [] ) compact ","(lvar :options [] ) compact count > ","(lvar :options [] ) compact count "]}," AWS S3 DataOptions content_length_from":{"type":"method","name":"content_length_from","children":[],"call":[" raise ","content_length was not provided  + ","data length ","data respond_to? ","data size ","data bytesize ","File  size ","data path ","data is_a? ","data to_s ","options [] ","options []  length ","options []  respond_to? ","options []  size ","options []  bytesize ","options []  path ","options []  is_a? ","options []  to_s "]}," AWS S3 DataOptions data_stream_from":{"type":"method","name":"data_stream_from","children":[],"call":["File  open ","options [] ","data to_s ","data is_a? ","StringIO  new ","data force_encoding ","data respond_to? ","file_opts << ","Object  const_defined? ","buffer rewind "," block_given? "," validate_data! ","options []  to_s ","options []  is_a? ","options []  force_encoding ","options []  respond_to? ","StringIO  new  rewind "," validate_options [] ! "]}," AWS S3 Client Validators xml_validation_message":{"type":"method","name":"xml_validation_message","children":[],"call":["REXML Document  new ","obj to_xml ","obj respond_to? ","obj to_str ","obj to_xml  to_xml ","obj to_str  to_xml ","obj to_xml  respond_to? ","obj to_str  respond_to? ","obj to_xml  to_str ","obj to_str  to_str "]}," AWS S3 Client Validators json_validation_message":{"type":"method","name":"json_validation_message","children":[],"call":["JSON  parse ","obj to_json ","obj respond_to? ","obj to_str ","obj to_json  to_json ","obj to_str  to_json ","obj to_json  respond_to? ","obj to_str  respond_to? ","obj to_json  to_str ","obj to_str  to_str "]}," AWS S3 Client Validators validate_parts!":{"type":"method","name":"validate_parts!","children":[],"call":["p [] to_i < ","p [] to_i ","p [] ","parts any? ","(send\n  (lvar :parts) :all?) ! ","parts all? ","p kind_of? ","parts empty? ","parts kind_of? ! ","parts kind_of? "," validate! "]}," AWS S3 Client Validators require_upload_id!":{"type":"method","name":"require_upload_id!","children":[],"call":["upload_id to_s empty? ","upload_id to_s "," validate! "]}," AWS S3 Client Validators require_acl!":{"type":"method","name":"require_acl!","children":[],"call":[" xml_validation_message ","acl == ","acl nil? ","acl inspect ","acl respond_to? ! ","acl respond_to? ","AccessControlList  new validate! ","AccessControlList  new ","acl kind_of? "," validate! "," raise ","missing a required ACL option, must provide an ACL  + ","acl_options include? ","options keys any? ","options keys "]}," AWS S3 Client Validators require_policy!":{"type":"method","name":"require_policy!","children":[],"call":[" json_validation_message ","policy == ","policy nil? "," validate! "]}," AWS S3 Client Validators validate_bucket_name!":{"type":"method","name":"validate_bucket_name!","children":[],"call":["bucket_name =~ ","(irange\n  (int 3)\n  (int 255)) include? ! ","(irange\n  (int 3)\n  (int 255)) include? ","bucket_name size ","bucket_name !~ ","may only contain lowercase letters, numbers, periods (.),  + ","bucket_name == ","bucket_name nil? "," validate! ","may only contain uppercase letters, lowercase letters, numbers, periods (.),  + "]}," AWS S3 Client Validators require_bucket_name!":{"type":"method","name":"require_bucket_name!","children":[],"call":[" raise ","(nil) include? "]}," AWS S3 Client Validators validate_key!":{"type":"method","name":"validate_key!","children":[],"call":["key == ","key nil? "," validate! "]}," AWS S3 Client Validators validate!":{"type":"method","name":"validate!","children":[],"call":[" raise "]}," AWS S3 Client Validators dns_compatible_bucket_name?":{"type":"method","name":"dns_compatible_bucket_name?","children":[],"call":["bucket_name [] ","bucket_name [] == ","bucket_name size > ","bucket_name size "," valid_bucket_name? ! "," valid_bucket_name? ","bucket_name =~ ","bucket_name !~ "]}," AWS S3 Client Validators valid_bucket_name?":{"type":"method","name":"valid_bucket_name?","children":[],"call":[" validate_bucket_name! "]}," AWS S3 Client new_request":{"type":"method","name":"new_request","children":[],"call":["S3 Request  new ","req force_path_style= "," config s3_force_path_style? "," config ","S3 Request  new  force_path_style= "]}," AWS S3 Client set_request_data":{"type":"method","name":"set_request_data","children":[],"call":["request headers []= "," content_length_from ","request headers ","request body_stream= "," data_stream_from "]}," AWS S3 Client should_retry?":{"type":"method","name":"should_retry?","children":[],"call":[" xml_error_response? ","response request_type == ","response request_type "," extract_error_code "," extract_error_details "]}," AWS S3 Client xml_error_response?":{"type":"method","name":"xml_error_response?","children":[],"call":["XmlGrammar  parse respond_to? ","XmlGrammar  parse ","response http_response body ","response http_response ","response request_type == ","response request_type ","response http_response status >= ","response http_response status ","Core XmlGrammar  parse respond_to? ","Core XmlGrammar  parse "]}," AWS S3 Client object_method":{"type":"method","name":"object_method","children":[],"call":[]}," AWS S3 Client bucket_method":{"type":"method","name":"bucket_method","children":[],"call":[]}," AWS S3 Client XML HasCommonPrefixes included":{"type":"method","name":"included","children":[],"call":[]}," AWS S3 BucketVersionCollection page_size":{"type":"method","name":"page_size","children":[],"call":[" + ","resp versions size ","resp versions "]}," AWS S3 BucketVersionCollection pagination_markers":{"type":"method","name":"pagination_markers","children":[],"call":[" + "]}," AWS S3 BucketVersionCollection limit_param":{"type":"method","name":"limit_param","children":[],"call":[]}," AWS S3 BucketVersionCollection list_request":{"type":"method","name":"list_request","children":[],"call":[" client list_object_versions "," client "]}," AWS S3 BucketVersionCollection each_member_in_page":{"type":"method","name":"each_member_in_page","children":[],"call":["ObjectVersion  new ","version delete_marker? ","version version_id "," bucket objects [] ","version key "," bucket objects "," bucket ","page versions each ","page versions ","version last_modified "]}," AWS S3 BucketVersionCollection each":{"type":"method","name":"each","children":[],"call":[]}," AWS S3 BucketVersionCollection latest":{"type":"method","name":"latest","children":[],"call":[" find "," first "]}," AWS S3 BucketVersionCollection initialize":{"type":"method","name":"initialize","children":[],"call":[]}," AWS S3 BucketCollection bucket_named":{"type":"method","name":"bucket_named","children":[],"call":["S3 Bucket  new "," config ","name to_s "]}," AWS S3 BucketCollection each":{"type":"method","name":"each","children":[],"call":[" bucket_named ","response owner ","b name ","response buckets each ","response buckets "," client list_buckets "," client "," client list_buckets  owner "," client list_buckets  buckets each "," client list_buckets  buckets "]}," AWS S3 BucketCollection []":{"type":"method","name":"[]","children":[],"call":[" bucket_named "]}," AWS S3 BucketCollection create":{"type":"method","name":"create","children":[],"call":[" bucket_named "," client create_bucket ","options merge "," client ","options []= "," config s3_endpoint match [] "," config s3_endpoint match "," config s3_endpoint "," config ","options [] "," config s3_endpoint == ","acl to_s tr ","acl to_s "," guess_constraint ","options []  to_s tr ","options []  to_s "," guess_ guess_constraint  "]}," AWS S3 Bucket presigned_post":{"type":"method","name":"presigned_post","children":[],"call":["PresignedPost  new "]}," AWS S3 Bucket as_tree":{"type":"method","name":"as_tree","children":[],"call":[" objects as_tree "," objects "]}," AWS S3 Bucket policy=":{"type":"method","name":"policy=","children":[],"call":[" client set_bucket_policy "," name "," client "]}," AWS S3 Bucket policy":{"type":"method","name":"policy","children":[],"call":["policy bucket= ","policy extend "," client get_bucket_policy policy "," client get_bucket_policy "," name "," client ","Policy  from_json ","resp data [] ","resp data "," client get_bucket_policy policy  bucket= ","Policy  from_json  bucket= "," client get_bucket_policy policy  extend ","Policy  from_json  extend "," client get_bucket_ client get_bucket_policy policy   client get_bucket_policy policy  "," client get_bucket_Policy  from_json  Policy  from_json  "," client get_bucket_ client get_bucket_policy policy  "," client get_bucket_Policy  from_json  "," client get_bucket_policy  data [] "," client get_bucket_policy  data "]}," AWS S3 Bucket PolicyProxy delete":{"type":"method","name":"delete","children":[],"call":[" bucket client delete_bucket_policy "," bucket name "," bucket "," bucket client "]}," AWS S3 Bucket PolicyProxy change":{"type":"method","name":"change","children":[],"call":[" bucket policy= "," bucket "]}," AWS S3 Bucket acl=":{"type":"method","name":"acl=","children":[],"call":[" client set_bucket_acl "," name "," client "," acl_options merge "," acl_options "]}," AWS S3 Bucket acl":{"type":"method","name":"acl","children":[],"call":["acl bucket= ","acl extend "," client get_bucket_acl acl "," client get_bucket_acl "," name "," client ","AccessControlList  new ","resp data "," client get_bucket_acl acl  bucket= ","AccessControlList  new  bucket= "," client get_bucket_acl acl  extend ","AccessControlList  new  extend "," client get_bucket_ client get_bucket_acl acl   client get_bucket_acl acl  "," client get_bucket_AccessControlList  new  AccessControlList  new  "," client get_bucket_ client get_bucket_acl acl  "," client get_bucket_AccessControlList  new  "," client get_bucket_acl  data "]}," AWS S3 Bucket ACLProxy change":{"type":"method","name":"change","children":[],"call":[" bucket acl= "," bucket "]}," AWS S3 Bucket multipart_uploads":{"type":"method","name":"multipart_uploads","children":[],"call":["MultipartUploadCollection  new "]}," AWS S3 Bucket versions":{"type":"method","name":"versions","children":[],"call":["BucketVersionCollection  new "]}," AWS S3 Bucket objects":{"type":"method","name":"objects","children":[],"call":["ObjectCollection  new "]}," AWS S3 Bucket exists?":{"type":"method","name":"exists?","children":[],"call":[" versioned? "]}," AWS S3 Bucket eql?":{"type":"method","name":"eql?","children":[],"call":[" == "]}," AWS S3 Bucket ==":{"type":"method","name":"==","children":[],"call":["other name == "," name ","other name ","other kind_of? "]}," AWS S3 Bucket inspect":{"type":"method","name":"inspect","children":[],"call":[" name "]}," AWS S3 Bucket owner":{"type":"method","name":"owner","children":[],"call":[" client list_buckets owner "," client list_buckets "," client "]}," AWS S3 Bucket delete!":{"type":"method","name":"delete!","children":[],"call":[" delete ","version delete "," versions each "," versions "," clear! "," objects delete "," objects "," versions each_batch "]}," AWS S3 Bucket delete":{"type":"method","name":"delete","children":[],"call":[" client delete_bucket "," client "]}," AWS S3 Bucket versioning_state":{"type":"method","name":"versioning_state","children":[],"call":[" client get_bucket_versioning status "," client get_bucket_versioning "," client "]}," AWS S3 Bucket versioning_enabled?":{"type":"method","name":"versioning_enabled?","children":[],"call":[" versioning_state == "," versioning_state "]}," AWS S3 Bucket suspend_versioning":{"type":"method","name":"suspend_versioning","children":[],"call":[" client set_bucket_versioning "," client ","opts [] "]}," AWS S3 Bucket enable_versioning":{"type":"method","name":"enable_versioning","children":[],"call":[" client set_bucket_versioning "," client ","opts [] "]}," AWS S3 Bucket location_constraint":{"type":"method","name":"location_constraint","children":[],"call":[" client get_bucket_location location_constraint "," client get_bucket_location "," name "," client "]}," AWS S3 Bucket empty?":{"type":"method","name":"empty?","children":[],"call":[" versions first "," versions "]}," AWS S3 Bucket url":{"type":"method","name":"url","children":[],"call":[" name "," client dns_compatible_bucket_name? "," client "]}," AWS S3 Bucket initialize":{"type":"method","name":"initialize","children":[],"call":["options [] "]}," AWS S3 ACLObject included":{"type":"method","name":"included","children":[],"call":[]}," AWS S3 ACLObject ClassMethods add_xml_child":{"type":"method","name":"add_xml_child","children":[],"call":[" send ","MetaUtils  class_extend_method ","Core MetaUtils  class_extend_method "]}," AWS S3 ACLObject ClassMethods body_xml_list_content":{"type":"method","name":"body_xml_list_content","children":[],"call":["list_content empty? ","(send\n  (lvar :list) :map) join ","member to_s ","list map "," add_xml_child ","(send\n  (lvar :list) :map) join  empty? "]}," AWS S3 ACLObject ClassMethods body_xml_content":{"type":"method","name":"body_xml_content","children":[],"call":["value to_s "," add_xml_child "]}," AWS S3 ACLObject ClassMethods body_xml_string_content":{"type":"method","name":"body_xml_string_content","children":[],"call":["REXML Text  normalize ","value to_s "," add_xml_child "]}," AWS S3 ACLObject ClassMethods validate_list":{"type":"method","name":"validate_list","children":[],"call":["member validate! "," send each "," send "," raise ","MetaUtils  class_extend_method ","Core MetaUtils  class_extend_method "]}," AWS S3 ACLObject ClassMethods validate_object":{"type":"method","name":"validate_object","children":[],"call":[" send validate! "," send "," raise ","MetaUtils  class_extend_method ","Core MetaUtils  class_extend_method "]}," AWS S3 ACLObject ClassMethods validate_string":{"type":"method","name":"validate_string","children":[],"call":[" raise "," send ","MetaUtils  class_extend_method ","Core MetaUtils  class_extend_method "]}," AWS S3 ACLObject ClassMethods object_list_setter":{"type":"method","name":"object_list_setter","children":[],"call":[" instance_variable_set ","klass new ","member kind_of? ","value map "," validate_input "," define_method "]}," AWS S3 ACLObject ClassMethods object_setter":{"type":"method","name":"object_setter","children":[],"call":[" instance_variable_set ","klass new ","value kind_of? "," validate_input "," define_method ","klass new  kind_of? "]}," AWS S3 ACLObject ClassMethods input_validator":{"type":"method","name":"input_validator","children":[],"call":[" send ","  + ","MetaUtils  class_extend_method ","blk object_id ","Core MetaUtils  class_extend_method "]}," AWS S3 ACLObject ClassMethods object_list_input_validator":{"type":"method","name":"object_list_input_validator","children":[],"call":[" raise ","ArgumentError  new ","(str \"expected array\") + + ","(str \"expected array\") + ","member kind_of? ","klass new validate! ","klass new ","value each ","expected array + ","value kind_of? "," input_validator "]}," AWS S3 ACLObject ClassMethods object_input_validator":{"type":"method","name":"object_input_validator","children":[],"call":[" raise ","ArgumentError  new ","(str \"expected \") + ","value kind_of? ","value nil? ","klass new validate! ","klass new "," input_validator "]}," AWS S3 ACLObject ClassMethods string_input_validator":{"type":"method","name":"string_input_validator","children":[],"call":[" raise ","ArgumentError  new ","expected string + ","value respond_to? "," input_validator "]}," AWS S3 ACLObject ClassMethods setter_option":{"type":"method","name":"setter_option","children":[],"call":[" send "," validate_input ","opts [] ","opts has_key? ","method_name to_sym "," instance_variable_set "," block_given? ","args last ","MetaUtils  class_extend_method ","Core MetaUtils  class_extend_method ","opts has_method_name to_sym ? "]}," AWS S3 ACLObject ClassMethods object_list_attr":{"type":"method","name":"object_list_attr","children":[],"call":[" body_xml_list_content "," validate_list "," object_list_input_validator "," object_list_setter ","options [] "," setter_option "," attr_reader ","Inflection  ruby_name ","options [] to_s ","klass name [] ","klass name ","Core Inflection  ruby_name "]}," AWS S3 ACLObject ClassMethods object_attr":{"type":"method","name":"object_attr","children":[],"call":[" body_xml_content "," validate_object ","options [] "," object_input_validator "," object_setter "," setter_option "," attr_reader ","Inflection  ruby_name ","klass name [] ","klass name ","Core Inflection  ruby_name "]}," AWS S3 ACLObject ClassMethods string_attr":{"type":"method","name":"string_attr","children":[],"call":[" body_xml_string_content "," validate_string ","options [] "," string_input_validator "," setter_option "," attr_accessor ","Inflection  ruby_name ","Core Inflection  ruby_name "]}," AWS S3 ACLObject validate_input":{"type":"method","name":"validate_input","children":[],"call":[" send "]}," AWS S3 ACLObject validate!":{"type":"method","name":"validate!","children":[],"call":[]}," AWS S3 ACLObject valid?":{"type":"method","name":"valid?","children":[],"call":[" validate! "]}," AWS S3 ACLObject to_xml":{"type":"method","name":"to_xml","children":[],"call":[" to_s "]}," AWS S3 ACLObject to_s":{"type":"method","name":"to_s","children":[],"call":[" element_name "," body_xml "," stag "," body_xml empty? "]}," AWS S3 ACLObject element_name":{"type":"method","name":"element_name","children":[],"call":[" class name [] "," class name "," class "]}," AWS S3 ACLObject stag":{"type":"method","name":"stag","children":[],"call":[" element_name "]}," AWS S3 ACLObject body_xml":{"type":"method","name":"body_xml","children":[],"call":[]}," AWS S3 ACLObject initialize":{"type":"method","name":"initialize","children":[],"call":[]}," AWS S3 AccessControlList grant":{"type":"method","name":"grant","children":[],"call":["GrantBuilder  new ","Grant  new "]}," AWS S3 AccessControlList GrantBuilder to":{"type":"method","name":"to","children":[],"call":["@acl grants << ","@acl grants ","@grant grantee= "]}," AWS S3 AccessControlList GrantBuilder initialize":{"type":"method","name":"initialize","children":[],"call":[]}," AWS S3 AccessControlList element_name":{"type":"method","name":"element_name","children":[],"call":[]}," AWS S3 AccessControlList stag":{"type":"method","name":"stag","children":[],"call":[" + "]}," AWS S3 AccessControlList Permission body_xml":{"type":"method","name":"body_xml","children":[],"call":[" name to_s upcase "," name to_s "," name "]}," AWS S3 AccessControlList Permission initialize":{"type":"method","name":"initialize","children":[],"call":["name to_sym "," raise ","name respond_to? "]}," AWS S3 AccessControlList Grantee type_for_attr":{"type":"method","name":"type_for_attr","children":[],"call":["(pair\n  (sym :amazon_customer_email)\n  (str \"AmazonCustomerByEmail\")) [] "]}," AWS S3 AccessControlList Grantee signal_attribute":{"type":"method","name":"signal_attribute","children":[],"call":[" send ","SIGNAL_ATTRIBUTES  find "]}," AWS S3 AccessControlList Grantee stag":{"type":"method","name":"stag","children":[],"call":[" + + "," type_for_attr "," + "," signal_attribute "," type_for_ signal_attribute  "," signal_ signal_attribute ibute "]}," AWS S3 AccessControlList Grantee validate!":{"type":"method","name":"validate!","children":[],"call":[" raise "," display_name ","attr != ","missing amazon_customer_email, canonical_user_id,  + "," signal_attribute "," signal_attribute  != "," signal_ signal_attribute ibute "]}," AWS ResponseCache cached":{"type":"method","name":"cached","children":[],"call":["@indexed_responses [] ","resp cache_key "]}," AWS ResponseCache select":{"type":"method","name":"select","children":[],"call":["block call ","block nil? ","(send\n  (lvar :types) :map) include? ","resp request_type to_s ","resp request_type ","t to_s ","types map "," cached_responses select "," cached_responses "]}," AWS ResponseCache add":{"type":"method","name":"add","children":[],"call":["ResourceCache  new ","@indexed_responses []= ","resp cache_key ","resp respond_to? "," cached_responses unshift "," cached_responses "]}," AWS ResponseCache initialize":{"type":"method","name":"initialize","children":[],"call":["ResourceCache  new "]}," AWS Response serialize_options_array":{"type":"method","name":"serialize_options_array","children":[],"call":["[ + + ","[ + ","(send\n  (lvar :ary) :map) join "," serialize_options_value ","ary map "]}," AWS Response serialize_options_value":{"type":"method","name":"serialize_options_value","children":[],"call":["value inspect "," serialize_options_array "," serialize_options_hash "]}," AWS Response serialize_options_hash":{"type":"method","name":"serialize_options_hash","children":[],"call":["( + + ","( + ","(send\n  (send\n    (send\n      (lvar :hash) :keys) :sort_by\n    (block-pass\n      (sym :to_s))) :map) join "," serialize_options_value ","hash [] ","hash keys sort_by map ","hash keys sort_by ","hash keys "]}," AWS Response serialized_options":{"type":"method","name":"serialized_options","children":[],"call":[" serialize_options_hash "," request_options "]}," AWS Response cache_key":{"type":"method","name":"cache_key","children":[],"call":["(send\n  (send nil :http_request) :access_key_id) join "," serialized_options "," request_type "," http_request host "," http_request "," http_request access_key_id "]}," AWS Response inspect":{"type":"method","name":"inspect","children":[],"call":[" class "," request_type "]}," AWS Response timeout?":{"type":"method","name":"timeout?","children":[],"call":[" http_response timeout? "," http_response "]}," AWS Response throttled?":{"type":"method","name":"throttled?","children":[],"call":["parsed_body code == ","parsed_body code ","parsed_body respond_to? ","XmlGrammar  parse "," http_response body "," http_response "," successful? ! "," successful? ","XmlGrammar  parse  code == ","XmlGrammar  parse  code ","XmlGrammar  parse  respond_to? "]}," AWS Response successful?":{"type":"method","name":"successful?","children":[],"call":[" error nil? "," error "]}," AWS Response initialize":{"type":"method","name":"initialize","children":[],"call":[" rebuild_request ","http_request ! "]}," AWS ResourceCache get":{"type":"method","name":"get","children":[],"call":["@cache [] [] ","@cache [] "," raise "," cached? "]}," AWS ResourceCache cached?":{"type":"method","name":"cached?","children":[],"call":["attributes key? ","@cache [] ","attributes has_key? ","@cache []  key? ","@cache []  has_key? "]}," AWS ResourceCache store":{"type":"method","name":"store","children":[],"call":["(or-asgn\n  (send\n    (ivar :@cache) :[]\n    (lvar :key))\n  (hash)) merge! ","@cache [] "]}," AWS ResourceCache initialize":{"type":"method","name":"initialize","children":[],"call":[]}," AWS Record as_set":{"type":"method","name":"as_set","children":[],"call":[]}," AWS Record as_array":{"type":"method","name":"as_array","children":[],"call":[]}," AWS Record domain_prefix":{"type":"method","name":"domain_prefix","children":[],"call":[]}," AWS Record domain_prefix=":{"type":"method","name":"domain_prefix=","children":[],"call":[]}," AWS Record PresenceValidator message":{"type":"method","name":"message","children":[],"call":[" options [] "," options "]}," AWS Record PresenceValidator validate_attribute":{"type":"method","name":"validate_attribute","children":[],"call":["record errors add "," message ","record errors ","value blank? ","value respond_to? ","value empty? ","value == ","value !~ ","value is_a? ","value nil? "]}," AWS Record NumericalityValidator as_integer":{"type":"method","name":"as_integer","children":[],"call":["Kernel  Integer "]}," AWS Record NumericalityValidator as_number":{"type":"method","name":"as_number","children":[],"call":["Kernel  Float "]}," AWS Record NumericalityValidator message_for":{"type":"method","name":"message_for","children":[],"call":["error_type to_s gsub ","error_type to_s "," options [] "," options "]}," AWS Record NumericalityValidator validate_attribute":{"type":"method","name":"validate_attribute","children":[],"call":["record errors add ","record errors "," message_for ","method call ","value send "," options [] "," options "," options [] call ","record send "," options has_key? ","COMPARISONS  each "," as_number "," as_integer "," each_value ","  message_for _for "," as_number  send "," as_integer  send "," each_ as_number  "," each_ as_integer  "]}," AWS Record NumericalityValidator read_attribute_for_validation":{"type":"method","name":"read_attribute_for_validation","children":[],"call":["record send ","record respond_to? "]}," AWS Record NumericalityValidator setup":{"type":"method","name":"setup","children":[],"call":[" ensure_type "," ensure_exclusive "]}," AWS Record LengthValidator interpolate":{"type":"method","name":"interpolate","children":[],"call":["msg gsub! ","value to_s ","values each_pair ","message_with_placeholders dup ","message_with_placeholders dup  gsub! "]}," AWS Record LengthValidator too_long":{"type":"method","name":"too_long","children":[],"call":[" interpolate "," options [] "," options "]}," AWS Record LengthValidator too_short":{"type":"method","name":"too_short","children":[],"call":[" interpolate "," options [] "," options "]}," AWS Record LengthValidator wrong_length":{"type":"method","name":"wrong_length","children":[],"call":[" interpolate "," options [] "," options "]}," AWS Record LengthValidator validate_attribute":{"type":"method","name":"validate_attribute","children":[],"call":["record errors add "," too_long ","record errors ","length > "," options [] "," options "," too_short ","length < ","within last ","within first "," wrong_length ","length == ","value to_s length ","value to_s ","value length ","value respond_to? "," each_value ","value to_s length  > ","value length  > ","value to_s length  < ","value length  < "," options []  last "," options []  first "," wrong_value to_s length  "," wrong_value length  ","value to_s length  == ","value length  == ","value to_s value to_s length  ","value to_s value length  ","value value to_s length  ","value value length  "]}," AWS Record LengthValidator setup":{"type":"method","name":"setup","children":[],"call":[" ensure_type "," ensure_exclusive "," ensure_at_least_one "]}," AWS Record InclusionValidator message":{"type":"method","name":"message","children":[],"call":[" options [] "," options "]}," AWS Record InclusionValidator value_included?":{"type":"method","name":"value_included?","children":[],"call":[" options [] include? "," options [] "," options "," options [] cover? "," options [] respond_to? "]}," AWS Record InclusionValidator validate_attribute":{"type":"method","name":"validate_attribute","children":[],"call":["record errors add "," message ","record errors "," value_included? ","value all? ","value is_a? "," each_value "," value_ value_included? ? "]}," AWS Record InclusionValidator setup":{"type":"method","name":"setup","children":[],"call":[" ensure_type "," ensure_present "]}," AWS Record FormatValidator message":{"type":"method","name":"message","children":[],"call":[" options [] "," options "]}," AWS Record FormatValidator validate_attribute":{"type":"method","name":"validate_attribute","children":[],"call":["record errors add "," message ","record errors ","value to_s !~ "," options [] "," options ","value to_s ","value to_s =~ "," each_value "]}," AWS Record FormatValidator setup":{"type":"method","name":"setup","children":[],"call":[" ensure_at_least_one "," ensure_type "]}," AWS Record ExclusionValidator message":{"type":"method","name":"message","children":[],"call":[" options [] "," options "]}," AWS Record ExclusionValidator validate_attribute":{"type":"method","name":"validate_attribute","children":[],"call":["record errors add "," message ","record errors "," value_included? "," each_value "," value_ value_included? ? "]}," AWS Record ExclusionValidator setup":{"type":"method","name":"setup","children":[],"call":[" ensure_type "," ensure_present "]}," AWS Record CountValidator interpolate":{"type":"method","name":"interpolate","children":[],"call":["msg gsub! ","value to_s ","values each_pair ","message_with_placeholders dup ","message_with_placeholders dup  gsub! "]}," AWS Record CountValidator too_many":{"type":"method","name":"too_many","children":[],"call":[" interpolate "," options [] "," options "]}," AWS Record CountValidator too_few":{"type":"method","name":"too_few","children":[],"call":[" interpolate "," options [] "," options "]}," AWS Record CountValidator wrong_number":{"type":"method","name":"wrong_number","children":[],"call":[" interpolate "," options [] "," options "]}," AWS Record CountValidator validate_attribute":{"type":"method","name":"validate_attribute","children":[],"call":["record errors add "," too_many ","record errors ","count > "," options [] "," options "," too_few ","count < ","within last ","within first "," wrong_number ","count == ","value count "," options []  last "," options []  first "]}," AWS Record CountValidator setup":{"type":"method","name":"setup","children":[],"call":[" ensure_type "," ensure_exclusive "," ensure_at_least_one "]}," AWS Record ConfirmationValidator message":{"type":"method","name":"message","children":[],"call":[" options [] "," options "]}," AWS Record ConfirmationValidator validate_attribute":{"type":"method","name":"validate_attribute","children":[],"call":["record errors add "," message ","record errors ","value == ","record send "]}," AWS Record ConfirmationValidator setup":{"type":"method","name":"setup","children":[],"call":[" add_accessors "," attribute_names collect "," attribute_names "]}," AWS Record BlockValidator validate_attribute":{"type":"method","name":"validate_attribute","children":[],"call":[" block call "," block "]}," AWS Record BlockValidator initialize":{"type":"method","name":"initialize","children":[],"call":[]}," AWS Record AcceptanceValidator message":{"type":"method","name":"message","children":[],"call":[" options [] "," options "]}," AWS Record AcceptanceValidator validate_attribute":{"type":"method","name":"validate_attribute","children":[],"call":["record errors add "," message ","record errors ","value == "," options [] "," options "," options has_key? "]}," AWS Record AcceptanceValidator setup":{"type":"method","name":"setup","children":[],"call":[" add_accessors "," attribute_names "," set_default "]}," AWS Record Validator set_default":{"type":"method","name":"set_default","children":[],"call":[" options []= "," options "," options has_key? "]}," AWS Record Validator ensure_at_least_one":{"type":"method","name":"ensure_at_least_one","children":[],"call":[" raise ","(send\n  (lvar :keys) :collect) join ","keys collect ","found count >= ","found count "," options has_key? "," options ","keys select "]}," AWS Record Validator ensure_present":{"type":"method","name":"ensure_present","children":[],"call":[" raise "," options has_key? "," options ","keys each "]}," AWS Record Validator ensure_exclusive":{"type":"method","name":"ensure_exclusive","children":[],"call":[" raise ","conflicts first ","conflicts empty? "," options has_key? "," options ","others flatten select ","others flatten "," Array each "," Array ","key_groups - ","key_groups each ","key_groups -  flatten select ","key_groups -  flatten "]}," AWS Record Validator ensure_is":{"type":"method","name":"ensure_is","children":[],"call":[" raise ","(send\n  (lvar :values) :map) join ","v to_s ","v is_a? ","values map ","values include? "," options [] "," options "," options has_key? ","keys each "," Array ","(send\n  (lvar : Array ) :map) join "," Array  map "," Array  include? "]}," AWS Record Validator ensure_type":{"type":"method","name":"ensure_type","children":[],"call":[" raise ","expected join ","expected count == ","expected count ","type to_s ","types map "," options [] is_a? "," options [] "," options ","types none? "," options has_key? ","keys each "," Array "," Array  map "," Array  none? "]}," AWS Record Validator passes_on_condition?":{"type":"method","name":"passes_on_condition?","children":[],"call":[" raise ","record persisted? ","record new_record? "," options [] "," options "]}," AWS Record Validator passes_unless_condition?":{"type":"method","name":"passes_unless_condition?","children":[],"call":[" raise ","record send ! ","record send "," options [] "," options "," options [] call ! "," options [] call "]}," AWS Record Validator passes_if_condition?":{"type":"method","name":"passes_if_condition?","children":[],"call":[" raise ","record send "," options [] "," options "," options [] call "]}," AWS Record Validator reject_unknown_options":{"type":"method","name":"reject_unknown_options","children":[],"call":[" raise ","(send\n  (lvar :invalid_keys) :collect) join ","invalid_keys collect ","invalid_keys length > ","invalid_keys length ","invalid_keys first ","invalid_keys length == "," options keys - "," class "," options keys "," options ","(send\n  (lvar : options keys - ) :collect) join "," options keys -  collect "," options keys -  length > "," options keys -  length "," options keys -  first "," options keys -  length == "]}," AWS Record Validator read_attribute_for_validation":{"type":"method","name":"read_attribute_for_validation","children":[],"call":["record send "]}," AWS Record Validator validate_attributes":{"type":"method","name":"validate_attributes","children":[],"call":[" validate_attribute "," options [] "," options ","value nil? "," read_attribute_for_validation "," attribute_names each "," attribute_names "," blank? "," read_attribute_for_validation  nil? "]}," AWS Record Validator add_accessors":{"type":"method","name":"add_accessors","children":[],"call":["klass send ","methods include? ","attr to_s ","accessors each ","m to_s ","klass instance_methods collect ","klass instance_methods "]}," AWS Record Validator each_value":{"type":"method","name":"each_value","children":[],"call":["value each "]}," AWS Record Validator setup":{"type":"method","name":"setup","children":[],"call":[]}," AWS Record Validator validate":{"type":"method","name":"validate","children":[],"call":[" validate_attributes "," passes_unless_condition? "," passes_if_condition? "," passes_on_condition? "]}," AWS Record Validator initialize":{"type":"method","name":"initialize","children":[],"call":[" setup "," ensure_is "," ensure_type "," reject_unknown_options ","attribute_names pop ","attribute_names last is_a? ","attribute_names last ","attribute_names map "]}," AWS Record Validations validators":{"type":"method","name":"validators","children":[],"call":[]}," AWS Record Validations validates_presence_of":{"type":"method","name":"validates_presence_of","children":[],"call":[" validators << ","PresenceValidator  new "," validators "]}," AWS Record Validations validates_numericality_of":{"type":"method","name":"validates_numericality_of","children":[],"call":[" validators << ","NumericalityValidator  new "," validators "]}," AWS Record Validations validates_length_of":{"type":"method","name":"validates_length_of","children":[],"call":[" validators << ","LengthValidator  new "," validators "]}," AWS Record Validations validates_inclusion_of":{"type":"method","name":"validates_inclusion_of","children":[],"call":[" validators << ","InclusionValidator  new "," validators "]}," AWS Record Validations validates_format_of":{"type":"method","name":"validates_format_of","children":[],"call":[" validators << ","FormatValidator  new "," validators "]}," AWS Record Validations validates_exclusion_of":{"type":"method","name":"validates_exclusion_of","children":[],"call":[" validators << ","ExclusionValidator  new "," validators "]}," AWS Record Validations validates_each":{"type":"method","name":"validates_each","children":[],"call":[" validators << ","BlockValidator  new "," validators "," raise "," block_given? "]}," AWS Record Validations validates_count_of":{"type":"method","name":"validates_count_of","children":[],"call":[" validators << ","CountValidator  new "," validators "]}," AWS Record Validations validates_confirmation_of":{"type":"method","name":"validates_confirmation_of","children":[],"call":[" validators << ","ConfirmationValidator  new "," validators "]}," AWS Record Validations validates_acceptance_of":{"type":"method","name":"validates_acceptance_of","children":[],"call":[" validators << ","AcceptanceValidator  new "," validators "]}," AWS Record Validations extended":{"type":"method","name":"extended","children":[],"call":[]}," AWS Record Scope _item_collection":{"type":"method","name":"_item_collection","children":[],"call":["items where ","Record  as_array each ","Record  as_array ","@options [] ","items limit ","items order "," base_class sdb_domain items "," base_class sdb_domain "," base_class "," raise "," _domain ","@options [] each ","items where  where ","items limit  where ","items order  where "," base_class sdb_domain items  where ","items where  limit ","items limit  limit ","items order  limit "," base_class sdb_domain items  limit ","items where  order ","items limit  order ","items order  order "," base_class sdb_domain items  order "," base_class sdb_domain items where  "," base_class sdb_domain items limit  "," base_class sdb_domain items order  "," base_class sdb_domain  base_class sdb_domain items  "]}," AWS Record Scope _handle_options":{"type":"method","name":"_handle_options","children":[],"call":["scope send ","args is_a? ","method == ","options each_pair "," raise ","scope send  send "]}," AWS Record Scope _merge_scope":{"type":"method","name":"_merge_scope","children":[],"call":["merged send ","merged where ","opt_value each ","opt_name == ","(nil) include? ","scope instance_variable_get each_pair ","scope instance_variable_get "," raise ","merged send  send ","merged where  send ","merged send  where ","merged where  where "]}," AWS Record Scope method_missing":{"type":"method","name":"method_missing","children":[],"call":[" _merge_scope "," base_class send "," base_class "]}," AWS Record Scope _with":{"type":"method","name":"_with","children":[],"call":["Scope  new ","@options merge "," base_class "," class new "," class "]}," AWS Record Scope _each_object":{"type":"method","name":"_each_object","children":[],"call":["obj send ","item_data attributes ","item_data name "," base_class new "," base_class ","items select each ","items select "," _item_collection "," raise "," _domain "," base_class new  send "," _item_collection  select each "," _item_collection  select "]}," AWS Record Scope _empty?":{"type":"method","name":"_empty?","children":[],"call":["@options == "]}," AWS Record Scope each":{"type":"method","name":"each","children":[],"call":["Enumerator  new "," _each_object "," block_given? "," to_enum "]}," AWS Record Scope limit":{"type":"method","name":"limit","children":[],"call":[" _with "]}," AWS Record Scope order":{"type":"method","name":"order","children":[],"call":[" _with "]}," AWS Record Scope where":{"type":"method","name":"where","children":[],"call":[" _with ","Record  as_array + ","Record  as_array ","@options [] "," raise ","conditions empty? ","@options [] + "]}," AWS Record Scope count":{"type":"method","name":"count","children":[],"call":[" _item_collection count "," _item_collection ","scope count ","scope != "," _handle_options "," _handle_options  count "," _handle_options  != "]}," AWS Record Scope find":{"type":"method","name":"find","children":[],"call":[" raise ","object nil? ","scope where limit first ","scope where limit ","scope where "," base_class [] "," base_class ","scope send ","scope limit first ","scope limit ","id_or_mode == "," _handle_options "," base_class find_by_id ","scope _shard ","scope limit to_a first ","scope limit to_a ","scope _domain ","scope where limit first  nil? "," _handle_options  where limit first "," _handle_options  where limit "," _handle_options  where "," _handle_options  send "," _handle_options  limit first "," _handle_options  limit "," _handle_options  _shard "," _handle_options  limit to_a first "," _handle_options  limit to_a "," _handle_options  _domain "]}," AWS Record Scope initialize":{"type":"method","name":"initialize","children":[],"call":["@options []= ","@options delete ","@options [] ","options dup ","base_class domain_name ","options dup  []= ","options dup  delete ","options dup  [] "]}," AWS Record Naming model_name":{"type":"method","name":"model_name","children":[],"call":["ActiveModel Name  new "," class "," kind_of? "]}," AWS Record FinderMethods optimistic_locking_attr":{"type":"method","name":"optimistic_locking_attr","children":[],"call":[]}," AWS Record FinderMethods optimistic_locking":{"type":"method","name":"optimistic_locking","children":[],"call":[" integer_attr "]}," AWS Record FinderMethods scope":{"type":"method","name":"scope","children":[],"call":[" extend "," define_method ","Module  new "," lambda "," raise "," block_given? "]}," AWS Record FinderMethods attributes":{"type":"method","name":"attributes","children":[],"call":[]}," AWS Record FinderMethods create_domain":{"type":"method","name":"create_domain","children":[],"call":["AWS SimpleDB  new domains create "," domain_name ","AWS SimpleDB  new domains ","AWS SimpleDB  new "]}," AWS Record FinderMethods sdb_domain":{"type":"method","name":"sdb_domain","children":[],"call":["AWS SimpleDB  new domains [] "," domain_name ","AWS SimpleDB  new domains ","AWS SimpleDB  new "]}," AWS Record FinderMethods domain_name":{"type":"method","name":"domain_name","children":[],"call":["Record  domain_prefix "," to_s "]}," AWS Record FinderMethods set_domain_name":{"type":"method","name":"set_domain_name","children":[],"call":[]}," AWS Record FinderMethods _new_scope":{"type":"method","name":"_new_scope","children":[],"call":["Scope  new "]}," AWS Record FinderMethods limit":{"type":"method","name":"limit","children":[],"call":[" _new_scope limit "," _new_scope "]}," AWS Record FinderMethods order":{"type":"method","name":"order","children":[],"call":[" _new_scope order "," _new_scope "]}," AWS Record FinderMethods where":{"type":"method","name":"where","children":[],"call":[" _new_scope where "," _new_scope "]}," AWS Record FinderMethods first":{"type":"method","name":"first","children":[],"call":[" _new_scope find "," _new_scope "," _new_scope first "]}," AWS Record FinderMethods count":{"type":"method","name":"count","children":[],"call":[" find count "," find "," _new_scope count "," _new_scope "]}," AWS Record FinderMethods all":{"type":"method","name":"all","children":[],"call":[" find "," _new_scope find "," _new_scope "]}," AWS Record FinderMethods find":{"type":"method","name":"find","children":[],"call":[" _new_scope find "," _new_scope "]}," AWS Record FinderMethods []":{"type":"method","name":"[]","children":[],"call":["obj send "," new "," raise ","data empty? "," sdb_domain items [] data attributes "," sdb_domain items [] data "," sdb_domain items [] "," sdb_domain items "," sdb_domain "," new  send "," sdb_domain items [] data attributes  empty? "," sdb_domain items []  sdb_domain items [] data attributes  attributes "," sdb_domain items []  sdb_domain items [] data attributes  "]}," AWS Record EmptyRecordError initialize":{"type":"method","name":"initialize","children":[],"call":[]}," AWS Record InvalidRecordError initialize":{"type":"method","name":"initialize","children":[],"call":["record errors full_messages join ","record errors full_messages ","record errors "]}," AWS Record UndefinedAttributeError initalize":{"type":"method","name":"initalize","children":[],"call":[]}," AWS Record Errors clear!":{"type":"method","name":"clear!","children":[],"call":[" delete "," keys each "," keys "]}," AWS Record Errors to_hash":{"type":"method","name":"to_hash","children":[],"call":["hash [] << ","message dup ","hash [] "," each "]}," AWS Record Errors full_messages":{"type":"method","name":"full_messages","children":[],"call":["messages << ","attr_name capitalize gsub ","attr_name capitalize ","error_message dup "," each "]}," AWS Record Errors each":{"type":"method","name":"each","children":[],"call":["error_messages each "]}," AWS Record Errors count":{"type":"method","name":"count","children":[],"call":[" values flatten length "," values flatten "," values "]}," AWS Record Errors add_to_base":{"type":"method","name":"add_to_base","children":[],"call":[" add "]}," AWS Record Errors []=":{"type":"method","name":"[]=","children":[],"call":[" [] "," [] << "," has_key? "]}," AWS Record Errors []":{"type":"method","name":"[]","children":[],"call":[]}," AWS Record Base errors":{"type":"method","name":"errors","children":[],"call":["Errors  new "]}," AWS Record DirtyTracking clear_changes!":{"type":"method","name":"clear_changes!","children":[],"call":[" orig_values clear "," orig_values "]}," AWS Record DirtyTracking if_tracking_changes":{"type":"method","name":"if_tracking_changes","children":[],"call":[]}," AWS Record DirtyTracking ignore_changes":{"type":"method","name":"ignore_changes","children":[],"call":[]}," AWS Record DirtyTracking clear_change!":{"type":"method","name":"clear_change!","children":[],"call":[" orig_values delete "," orig_values "]}," AWS Record DirtyTracking orig_values":{"type":"method","name":"orig_values","children":[],"call":[]}," AWS Record DirtyTracking attribute_will_change!":{"type":"method","name":"attribute_will_change!","children":[],"call":[" orig_values []= "," orig_values ","was clone "," __send__ "," orig_values has_key? ","attribute name "," class attribute_for "," class "," __send__  clone ","attribute attribute name  "]}," AWS Record DirtyTracking reset_attribute!":{"type":"method","name":"reset_attribute!","children":[],"call":[" __send__ "," attribute_was "]}," AWS Record DirtyTracking attribute_was":{"type":"method","name":"attribute_was","children":[],"call":[" __send__ "," orig_values [] "," orig_values "," orig_values has_key? ","attribute name "," class attribute_for "," class ","attribute attribute name  "]}," AWS Record DirtyTracking attribute_change":{"type":"method","name":"attribute_change","children":[],"call":[" __send__ ","attribute name "," orig_values [] "," orig_values "," orig_values has_key? "," class attribute_for "," class "]}," AWS Record DirtyTracking attribute_changed?":{"type":"method","name":"attribute_changed?","children":[],"call":[" orig_values keys include? "," orig_values keys "," orig_values "]}," AWS Record DirtyTracking changes":{"type":"method","name":"changes","children":[],"call":["changes []= "," attribute_change "," changed inject "," changed "]}," AWS Record DirtyTracking changed":{"type":"method","name":"changed","children":[],"call":[" orig_values keys "," orig_values "]}," AWS Record DirtyTracking changed?":{"type":"method","name":"changed?","children":[],"call":[" orig_values empty? ! "," orig_values empty? "," orig_values "]}," AWS Record Conversion to_param":{"type":"method","name":"to_param","children":[],"call":[" to_key join "," to_key "," persisted? "]}," AWS Record Conversion to_key":{"type":"method","name":"to_key","children":[],"call":[" id "," persisted? "]}," AWS Record Conversion to_model":{"type":"method","name":"to_model","children":[],"call":[]}," AWS Record Base attribute_for":{"type":"method","name":"attribute_for","children":[],"call":[]}," AWS Record Base serialize":{"type":"method","name":"serialize","children":[],"call":["values << ","attribute serialize ","Record  as_array inject ","Record  as_array "," type_cast "]}," AWS Record Base type_cast":{"type":"method","name":"type_cast","children":[],"call":["attribute type_cast ","Set  new ","values compact ","values << ","Record  as_array inject ","Record  as_array ","attribute set? "]}," AWS Record Base touch_timestamps":{"type":"method","name":"touch_timestamps","children":[],"call":[" __send__ "," attribute_changed? ! "," attribute_changed? "," class attributes [] "," class attributes "," class ","attributes each ","Time  now "]}," AWS Record Base populate_id":{"type":"method","name":"populate_id","children":[],"call":["UUIDTools UUID  random_create to_s ","UUIDTools UUID  random_create "]}," AWS Record Base if_locks_optimistically":{"type":"method","name":"if_locks_optimistically","children":[],"call":["opt_lock_attr name "," class optimistic_locking_attr "," class "," class optimistic_locking_attr  name "]}," AWS Record Base add_optimistic_lock_expectation":{"type":"method","name":"add_optimistic_lock_expectation","children":[],"call":["options []= ","was to_s "," attribute_was "," if_locks_optimistically "," attribute_was  to_s "," attribute_ attribute_was  "]}," AWS Record Base increment_optimistic_lock_value":{"type":"method","name":"increment_optimistic_lock_value","children":[],"call":[" []= "," [] "," if_locks_optimistically "]}," AWS Record Base serialize_attributes":{"type":"method","name":"serialize_attributes","children":[],"call":[" raise ","EmptyRecordError  new ","hash empty? ","hash []= ","values empty? "," serialize ","@_data [] "," class attributes each_pair "," class attributes "," class "," serialize  empty? "]}," AWS Record Base update":{"type":"method","name":"update","children":[],"call":[" sdb_item attributes delete ","to_delete + "," sdb_item attributes "," sdb_item "," sdb_item attributes replace ","to_update merge ","to_delete empty? "," add_optimistic_lock_expectation ","to_delete << ","to_update []= ","attribute_values [] "," changed each "," changed "," serialize_attributes "," increment_optimistic_lock_value "," touch_timestamps "," changed? ","attribute_attribute_values []  [] "," serialize_attributes  [] "]}," AWS Record Base create":{"type":"method","name":"create","children":[],"call":[" sdb_item attributes add "," sdb_item attributes "," sdb_item "," add_optimistic_lock_expectation "," serialize_attributes "," increment_optimistic_lock_value "," touch_timestamps "," populate_id "]}," AWS Record Base deserialize_item_data":{"type":"method","name":"deserialize_item_data","children":[],"call":["data []= ","attribute deserialize ","values first ","values map ","attribute set? ","marked_for_deletion include? "," class attributes [] "," class attributes "," class ","item_data each_pair ","item_data [] "," class attributes []  deserialize "," class attributes []  set? "," class  class attributes [] s [] "," class  class attributes [] s "]}," AWS Record Base hydrate":{"type":"method","name":"hydrate","children":[],"call":[" bulk_assign "," deserialize_item_data "," ignore_changes ","@_data []= ","attribute name "," class attributes values each "," class attributes values "," class attributes "," class "]}," AWS Record Base bulk_assign":{"type":"method","name":"bulk_assign","children":[],"call":[" __send__ ","hash each_pair "]}," AWS Record Base delete_item":{"type":"method","name":"delete_item","children":[],"call":[" sdb_item delete "," sdb_item "," add_optimistic_lock_expectation "]}," AWS Record Base assign_default_values":{"type":"method","name":"assign_default_values","children":[],"call":["@_data []= ","attribute default_value ","attribute name ","attribute default_value clone "," class attributes values each "," class attributes values "," class attributes "," class "," ignore_changes "]}," AWS Record Base sdb_item":{"type":"method","name":"sdb_item","children":[],"call":[" class sdb_domain items [] "," id "," class sdb_domain items "," class sdb_domain "," class "," sdb_domain items [] "," sdb_domain items "," sdb_domain "]}," AWS Record Base []":{"type":"method","name":"[]","children":[],"call":[" type_cast ","@_data [] ","attribute name "," class attribute_for "," class "]}," AWS Record Base []=":{"type":"method","name":"[]=","children":[],"call":["@_data []= ","attribute name "," attribute_will_change! "," clear_change! ","original_value == "," type_cast "," attribute_was "," if_tracking_changes "," class attribute_for "," class "," type_cast  == "]}," AWS Record Base deleted?":{"type":"method","name":"deleted?","children":[],"call":["@_deleted ! ! ","@_deleted ! "," persisted? "]}," AWS Record Base delete":{"type":"method","name":"delete","children":[],"call":[" raise "," delete_item "," deleted? "," persisted? "]}," AWS Record Base update_attributes!":{"type":"method","name":"update_attributes!","children":[],"call":[" raise ","InvalidRecordError  new "," update_attributes "]}," AWS Record Base update_attributes":{"type":"method","name":"update_attributes","children":[],"call":[" save "," bulk_assign "]}," AWS Record Base save!":{"type":"method","name":"save!","children":[],"call":[" raise ","InvalidRecordError  new "," save "]}," AWS Record Base save":{"type":"method","name":"save","children":[],"call":[" clear_changes! "," create "," update "," persisted? "," valid? "]}," AWS Record Base valid?":{"type":"method","name":"valid?","children":[],"call":[" errors empty? "," errors "," validate "," run_validations "]}," AWS Record Base new_record?":{"type":"method","name":"new_record?","children":[],"call":[" persisted? ! "," persisted? "]}," AWS Record Base persisted?":{"type":"method","name":"persisted?","children":[],"call":["@_persisted ! ! ","@_persisted ! "]}," AWS Record Base attributes":{"type":"method","name":"attributes","children":[],"call":["hash []= "," __send__ "," class attributes keys inject "," class attributes keys "," class attributes "," class ","attributes []= "," id "," persisted? ","IndifferentHash  new ","Core IndifferentHash  new "," class IndifferentHash  new  keys inject "," class Core IndifferentHash  new  keys inject "," class IndifferentHash  new  keys "," class Core IndifferentHash  new  keys "," class IndifferentHash  new  "," class Core IndifferentHash  new  ","IndifferentHash  new  []= ","Core IndifferentHash  new  []= "]}," AWS Record Base id":{"type":"method","name":"id","children":[],"call":[]}," AWS Record Base initialize":{"type":"method","name":"initialize","children":[],"call":[" bulk_assign "," assign_default_values "," class domain_name "," class ","attributes delete ","attributes dup "]}," AWS Record StringAttribute allow_set?":{"type":"method","name":"allow_set?","children":[],"call":[]}," AWS Record StringAttribute serialize":{"type":"method","name":"serialize","children":[],"call":[]}," AWS Record StringAttribute type_cast":{"type":"method","name":"type_cast","children":[],"call":[]}," AWS Record SortableIntegerAttribute check_range":{"type":"method","name":"check_range","children":[],"call":[]}," AWS Record SortableIntegerAttribute offset_and_precision":{"type":"method","name":"offset_and_precision","children":[],"call":[]}," AWS Record SortableIntegerAttribute deserialize":{"type":"method","name":"deserialize","children":[],"call":[]}," AWS Record SortableIntegerAttribute serialize":{"type":"method","name":"serialize","children":[],"call":[]}," AWS Record SortableIntegerAttribute initialize":{"type":"method","name":"initialize","children":[],"call":[" raise ","range first is_a? ","range first ","range is_a? ","options [] ","options []  first is_a? ","options []  first ","options []  is_a? "]}," AWS Record SortableFloatAttribute deserialize":{"type":"method","name":"deserialize","children":[],"call":[]}," AWS Record SortableFloatAttribute serialize":{"type":"method","name":"serialize","children":[],"call":[]}," AWS Record SortableFloatAttribute initialize":{"type":"method","name":"initialize","children":[],"call":[" raise ","range first is_a? ","range first ","range is_a? ","options [] ","options []  first is_a? ","options []  first ","options []  is_a? "]}," AWS Record IntegerAttribute allow_set?":{"type":"method","name":"allow_set?","children":[],"call":[]}," AWS Record IntegerAttribute serialize":{"type":"method","name":"serialize","children":[],"call":[]}," AWS Record IntegerAttribute type_cast":{"type":"method","name":"type_cast","children":[],"call":[]}," AWS Record FloatAttribute allow_set?":{"type":"method","name":"allow_set?","children":[],"call":[]}," AWS Record FloatAttribute serialize":{"type":"method","name":"serialize","children":[],"call":[]}," AWS Record FloatAttribute type_cast":{"type":"method","name":"type_cast","children":[],"call":[]}," AWS Record DateTimeAttribute allow_set?":{"type":"method","name":"allow_set?","children":[],"call":[]}," AWS Record DateTimeAttribute serialize":{"type":"method","name":"serialize","children":[],"call":[]}," AWS Record DateTimeAttribute type_cast":{"type":"method","name":"type_cast","children":[],"call":[]}," AWS Record BooleanAttribute allow_set?":{"type":"method","name":"allow_set?","children":[],"call":[]}," AWS Record BooleanAttribute serialize":{"type":"method","name":"serialize","children":[],"call":[]}," AWS Record BooleanAttribute type_cast":{"type":"method","name":"type_cast","children":[],"call":[]}," AWS Record AttributeMacros add_attribute":{"type":"method","name":"add_attribute","children":[],"call":[" reset_attribute! "," define_method "," attribute_will_change! "," attribute_was "," attribute_change "," attribute_changed? ","@_data [] "," [] "," []= "," attributes []= "," attributes ","attribute name "]}," AWS Record AttributeMacros timestamps":{"type":"method","name":"timestamps","children":[],"call":[" datetime_attr "]}," AWS Record AttributeMacros datetime_attr":{"type":"method","name":"datetime_attr","children":[],"call":[" add_attribute ","DateTimeAttribute  new "]}," AWS Record AttributeMacros boolean_attr":{"type":"method","name":"boolean_attr","children":[],"call":[" __send__ ! ! "," __send__ ! "," __send__ ","attr name "," define_method "," add_attribute ","BooleanAttribute  new "," add_attribute  name "," add_ add_attribute ibute "]}," AWS Record AttributeMacros sortable_float_attr":{"type":"method","name":"sortable_float_attr","children":[],"call":[" add_attribute ","SortableFloatAttribute  new "]}," AWS Record AttributeMacros float_attr":{"type":"method","name":"float_attr","children":[],"call":[" add_attribute ","FloatAttribute  new "]}," AWS Record AttributeMacros sortable_integer_attr":{"type":"method","name":"sortable_integer_attr","children":[],"call":[" add_attribute ","SortableIntegerAttribute  new "]}," AWS Record AttributeMacros integer_attr":{"type":"method","name":"integer_attr","children":[],"call":[" add_attribute ","IntegerAttribute  new "]}," AWS Record AttributeMacros string_attr":{"type":"method","name":"string_attr","children":[],"call":[" add_attribute ","StringAttribute  new "]}," AWS Record Attribute expect":{"type":"method","name":"expect","children":[],"call":[]}," AWS Record Attribute allow_set?":{"type":"method","name":"allow_set?","children":[],"call":[]}," AWS Record Attribute deserialize":{"type":"method","name":"deserialize","children":[],"call":[" class deserialize "," options "," class "]}," AWS Record Attribute serialize":{"type":"method","name":"serialize","children":[],"call":[" class serialize "," options "," class "]}," AWS Record Attribute type_cast":{"type":"method","name":"type_cast","children":[],"call":[" class type_cast "," options "," class "]}," AWS Record Attribute default_value":{"type":"method","name":"default_value","children":[],"call":[" options [] "," options "]}," AWS Record Attribute set?":{"type":"method","name":"set?","children":[],"call":[" options [] "," options "]}," AWS Record Attribute initialize":{"type":"method","name":"initialize","children":[],"call":[" raise "," class "," class allow_set? ! "," class allow_set? ","options [] ","options dup ","name to_s "]}," AWS Rails rails_logger":{"type":"method","name":"rails_logger","children":[],"call":[]}," AWS Rails rails_root":{"type":"method","name":"rails_root","children":[],"call":[]}," AWS Rails rails_env":{"type":"method","name":"rails_env","children":[],"call":[]}," AWS Rails log_to_rails_logger":{"type":"method","name":"log_to_rails_logger","children":[],"call":[]}," AWS Rails add_action_mailer_delivery_method":{"type":"method","name":"add_action_mailer_delivery_method","children":[],"call":[]}," AWS Rails load_yaml_config":{"type":"method","name":"load_yaml_config","children":[],"call":[]}," AWS Rails setup":{"type":"method","name":"setup","children":[],"call":[]}," AWS Policy Statement resource_arn":{"type":"method","name":"resource_arn","children":[],"call":["resource to_s "]}," AWS Policy Statement resource_arns":{"type":"method","name":"resource_arns","children":[],"call":[" resource_arn "," resources map "," resources "]}," AWS Policy Statement translated_excluded_actions":{"type":"method","name":"translated_excluded_actions","children":[],"call":[" translate_action "," excluded_actions map "," excluded_actions "]}," AWS Policy Statement translated_actions":{"type":"method","name":"translated_actions","children":[],"call":[" translate_action "," actions map "," actions "]}," AWS Policy Statement translate_action":{"type":"method","name":"translate_action","children":[],"call":[" class ACTION_MAPPING  [] "," class "," raise "," class ACTION_MAPPING  has_key? ","symbolized action names are only accepted by service  + "," class == "]}," AWS Policy Statement principals_hash":{"type":"method","name":"principals_hash","children":[],"call":["principal == "," principals map "," principals "]}," AWS Policy Statement coerce_array_option":{"type":"method","name":"coerce_array_option","children":[],"call":[" send ","value kind_of? "]}," AWS Policy Statement parse_condition_option":{"type":"method","name":"parse_condition_option","children":[],"call":[" conditions= ","ConditionBlock  new "]}," AWS Policy Statement parse_resource_option":{"type":"method","name":"parse_resource_option","children":[],"call":[" coerce_array_option "]}," AWS Policy Statement parse_principal_option":{"type":"method","name":"parse_principal_option","children":[],"call":[" coerce_array_option ","value [] ","value kind_of? "]}," AWS Policy Statement parse_not_action_option":{"type":"method","name":"parse_not_action_option","children":[],"call":[" coerce_array_option "]}," AWS Policy Statement parse_action_option":{"type":"method","name":"parse_action_option","children":[],"call":[" coerce_array_option "]}," AWS Policy Statement parse_sid_option":{"type":"method","name":"parse_sid_option","children":[],"call":[" sid= "]}," AWS Policy Statement parse_effect_option":{"type":"method","name":"parse_effect_option","children":[],"call":[" effect= "]}," AWS Policy Statement parse_options":{"type":"method","name":"parse_options","children":[],"call":[" send "," respond_to? ","name sub! ","Inflection  ruby_name ","name to_s ","options each ","Inflection  ruby_name  sub! ","Inflection  ruby_Inflection  ruby_name  ","Inflection  ruby_name  to_s "]}," AWS Policy Statement to_h":{"type":"method","name":"to_h","children":[],"call":["stmt []= "," translated_actions "," translated_excluded_actions "," translated_actions empty? "," translated_actions ! "," conditions to_h "," conditions "," resource_arns "," principals_hash ","Inflection  class_name "," effect to_s "," effect "," sid ","stmt delete "," conditions to_h empty? "," conditions ! "]}," AWS Policy Statement exclude_actions":{"type":"method","name":"exclude_actions","children":[],"call":[" excluded_actions push "," excluded_actions "]}," AWS Policy Statement include_actions":{"type":"method","name":"include_actions","children":[],"call":[" actions push "," actions "]}," AWS Policy Statement initialize":{"type":"method","name":"initialize","children":[],"call":[" block_given? "," parse_options "," conditions= ","ConditionBlock  new "," sid= ","UUIDTools UUID  timestamp_create to_s ","UUIDTools UUID  timestamp_create ","UUIDTools UUID  timestamp_create to_s tr "]}," AWS Policy ConditionBlock strip_modifiers":{"type":"method","name":"strip_modifiers","children":[],"call":["operator to_s sub to_sym ","operator to_s sub ","operator to_s ","opts []= ","operator to_s =~ ","Inflection  ruby_name to_sym ","Inflection  ruby_name ","MODIFIERS  each ","operator to_s sub to_sym  to_s sub to_sym ","operator to_s sub to_sym  to_s sub ","operator to_s sub to_sym  to_s ","operator to_s sub to_sym  to_s =~ ","Inflection  Inflection  ruby_name to_sym  to_sym ","Inflection  Inflection  ruby_name to_sym  "]}," AWS Policy ConditionBlock convert_value":{"type":"method","name":"convert_value","children":[],"call":["value strftime ","Time  parse iso8601 ","Time  parse ","value to_s "]}," AWS Policy ConditionBlock type_notation":{"type":"method","name":"type_notation","children":[],"call":[]}," AWS Policy ConditionBlock base_translate":{"type":"method","name":"base_translate","children":[],"call":["modifiers join "," type_notation "]}," AWS Policy ConditionBlock translate_not_arn_like":{"type":"method","name":"translate_not_arn_like","children":[],"call":[]}," AWS Policy ConditionBlock translate_is_arn_like":{"type":"method","name":"translate_is_arn_like","children":[],"call":[]}," AWS Policy ConditionBlock translate_not_arn":{"type":"method","name":"translate_not_arn","children":[],"call":[]}," AWS Policy ConditionBlock translate_is_arn":{"type":"method","name":"translate_is_arn","children":[],"call":[]}," AWS Policy ConditionBlock translate_not_ip_address":{"type":"method","name":"translate_not_ip_address","children":[],"call":[]}," AWS Policy ConditionBlock translate_is_ip_address":{"type":"method","name":"translate_is_ip_address","children":[],"call":[]}," AWS Policy ConditionBlock translate_gte":{"type":"method","name":"translate_gte","children":[],"call":[" translate_greater_than "]}," AWS Policy ConditionBlock translate_greater_than":{"type":"method","name":"translate_greater_than","children":[],"call":[" base_translate ","opts [] "]}," AWS Policy ConditionBlock translate_lte":{"type":"method","name":"translate_lte","children":[],"call":[" translate_less_than "]}," AWS Policy ConditionBlock translate_less_than":{"type":"method","name":"translate_less_than","children":[],"call":[" base_translate ","opts [] "]}," AWS Policy ConditionBlock translate_not_like":{"type":"method","name":"translate_not_like","children":[],"call":[" base_translate "]}," AWS Policy ConditionBlock translate_like":{"type":"method","name":"translate_like","children":[],"call":[" base_translate "]}," AWS Policy ConditionBlock translate_not":{"type":"method","name":"translate_not","children":[],"call":[" base_translate ","opts [] "]}," AWS Policy ConditionBlock translate_is":{"type":"method","name":"translate_is","children":[],"call":[" base_translate ","opts [] "," type_notation == "," type_notation "]}," AWS Policy ConditionBlock translate_operator":{"type":"method","name":"translate_operator","children":[],"call":[" send "," raise ","ArgumentError  new "," respond_to? "," strip_modifiers ","operator kind_of? "]}," AWS Policy ConditionBlock valid_operator?":{"type":"method","name":"valid_operator?","children":[],"call":[" translate_operator "]}," AWS Policy ConditionBlock translate_key":{"type":"method","name":"translate_key","children":[],"call":["Inflection  class_name ","key to_s ","s3_name tr! ","s3_name == ","key to_s =~ ","key kind_of? ","Inflection  class_name  tr! ","Inflection  class_name  == "]}," AWS Policy ConditionBlock filter_conditions":{"type":"method","name":"filter_conditions","children":[],"call":["m delete ","m [] empty? ","m [] ","m []= ","m2 []= "," block_given? ! "," block_given? ","keys inject ","conditions inject "]}," AWS Policy ConditionBlock match_key":{"type":"method","name":"match_key","children":[],"call":[" translate_key == "," translate_key "]}," AWS Policy ConditionBlock match_operator":{"type":"method","name":"match_operator","children":[],"call":[" translate_operator == "," translate_operator ","Date  today ","op =~ "]}," AWS Policy ConditionBlock match_triple":{"type":"method","name":"match_triple","children":[],"call":[" match_key "," match_operator "," send ","type == ","(lvar :value) flatten first ","(lvar :value) flatten ","  send _key ","  send _operator ","(lvar :(lvar :value) flatten first ) flatten first ","(lvar :(lvar :value) flatten first ) flatten "]}," AWS Policy ConditionBlock values":{"type":"method","name":"values","children":[],"call":["(send\n  (send\n    (ivar :@conditions) :values) :map) compact flatten ","(send\n  (send\n    (ivar :@conditions) :values) :map) compact ","keys values ","@conditions values map ","@conditions values "]}," AWS Policy ConditionBlock keys":{"type":"method","name":"keys","children":[],"call":["(send\n  (send\n    (ivar :@conditions) :values) :map) compact flatten uniq ","(send\n  (send\n    (ivar :@conditions) :values) :map) compact flatten ","(send\n  (send\n    (ivar :@conditions) :values) :map) compact ","keys keys ","@conditions values map ","@conditions values "]}," AWS Policy ConditionBlock operators":{"type":"method","name":"operators","children":[],"call":["@conditions keys "]}," AWS Policy ConditionBlock []":{"type":"method","name":"[]","children":[],"call":[" class new "," class "," match_triple "," filter_conditions "," valid_operator? ","args each "]}," AWS Policy ConditionBlock to_h":{"type":"method","name":"to_h","children":[],"call":[]}," AWS Policy ConditionBlock add":{"type":"method","name":"add","children":[],"call":["op []= "," translate_key "," raise ","op [] ","@conditions [] "," translate_operator ","values first "," convert_value ","values map ","operator kind_of? "," translate_ translate_operator  "," translate_operator  kind_of? "]}," AWS Policy ConditionBlock initialize":{"type":"method","name":"initialize","children":[],"call":[" filter_conditions "]}," AWS Policy deny":{"type":"method","name":"deny","children":[],"call":["ConditionBuilder  new ","stmt conditions "," statements << "," statements "," class Statement  new ","opts merge "," class "," class Statement  new  conditions "]}," AWS Policy allow":{"type":"method","name":"allow","children":[],"call":["ConditionBuilder  new ","stmt conditions "," statements << "," statements "," class Statement  new ","opts merge "," class "," class Statement  new  conditions "]}," AWS Policy ConditionBuilder where":{"type":"method","name":"where","children":[],"call":["OperatorBuilder  new ","@conditions add "]}," AWS Policy ConditionBuilder initialize":{"type":"method","name":"initialize","children":[],"call":[]}," AWS Policy OperatorBuilder method_missing":{"type":"method","name":"method_missing","children":[],"call":["@condition_builder conditions add ","@condition_builder conditions "]}," AWS Policy OperatorBuilder initialize":{"type":"method","name":"initialize","children":[],"call":[]}," AWS Policy from_json":{"type":"method","name":"from_json","children":[],"call":[]}," AWS Policy to_json":{"type":"method","name":"to_json","children":[],"call":[" to_h to_json "," to_h "]}," AWS Policy to_h":{"type":"method","name":"to_h","children":[],"call":["st to_h "," statements map "," statements "," id "," version "]}," AWS Policy hash_without_ids":{"type":"method","name":"hash_without_ids","children":[],"call":["statement delete ","hash [] each ","hash [] ","hash delete "," to_h "," to_h  [] each "," to_h  [] "," to_h  delete "]}," AWS Policy ==":{"type":"method","name":"==","children":[],"call":[" hash_without_ids == ","other hash_without_ids "," hash_without_ids ","other kind_of? "]}," AWS Policy initialize":{"type":"method","name":"initialize","children":[],"call":[" block_given? ","opts [] ","opts has_key? ","UUIDTools UUID  timestamp_create to_s ","UUIDTools UUID  timestamp_create "," class Statement  new "," class ","(send\n  (send\n    (lvar :opts) :values_at\n    (sym :statements)\n    (str \"Statement\")) :select) flatten map ","(send\n  (send\n    (lvar :opts) :values_at\n    (sym :statements)\n    (str \"Statement\")) :select) flatten ","a kind_of? ","opts values_at select ","opts values_at ","UUIDTools UUID  timestamp_create to_s tr "]}," AWS OptionGrammar ModuleMethods apply_rename_descriptor":{"type":"method","name":"apply_rename_descriptor","children":[],"call":["method call ","MetaUtils  extend_method ","m method ","opts delete ","new_name to_sym ","opts []= ","opts [] ","name to_sym ","opts key? ","opts dup "," raise ","ArgumentError  new "," ruby_name ","m method  call ","MetaUtils  extend_m method  ","m m method  ","opts dup  delete ","new_ ruby_name  to_sym ","opts dup  []= ","opts dup  [] "," ruby_name  to_sym ","opts dup  key? ","opts dup  dup "," ruby_ ruby_name  "]}," AWS OptionGrammar ModuleMethods apply_list_descriptor":{"type":"method","name":"apply_list_descriptor","children":[],"call":["Http Request Param  new ","i > ","values << ","member to_s ","name + + ","i to_s ","name + ","value each ","MetaUtils  extend_method "," ruby_name "," raise ","ArgumentError  new ","(str \"expected value for option \") + ","value respond_to? "]}," AWS OptionGrammar ModuleMethods apply_string_descriptor":{"type":"method","name":"apply_string_descriptor","children":[],"call":[" raise ","ArgumentError  new "," ruby_name ","value respond_to? ","MetaUtils  extend_method "]}," AWS OptionGrammar ModuleMethods apply_integer_descriptor":{"type":"method","name":"apply_integer_descriptor","children":[],"call":[" raise ","ArgumentError  new "," ruby_name ","value respond_to? ","MetaUtils  extend_method "]}," AWS OptionGrammar ModuleMethods apply_required_descriptor":{"type":"method","name":"apply_required_descriptor","children":[],"call":[" raise ","ArgumentError  new ","opts key? ","name to_sym ","MetaUtils  extend_method "," ruby_name "," ruby_name  to_sym "," ruby_ ruby_name  "]}," AWS OptionGrammar ModuleMethods parse_option":{"type":"method","name":"parse_option","children":[],"call":[" raise ","ArgumentError  new ","expected an array for  + + ","value_desc inspect ","expected an array for  + ","value_desc kind_of? ","value_desc nil? ","name to_s ","option to_a first ","option to_a ","option size > ","option size ","option empty? ","option kind_of? ","name to_s  to_s "]}," AWS OptionGrammar ModuleMethods included":{"type":"method","name":"included","children":[],"call":["m extend "]}," AWS OptionGrammar ModuleMethods request_params":{"type":"method","name":"request_params","children":[],"call":["(send\n  (lvar :options) :map) flatten "," option request_params "," option ","name to_s ","options map "," validate ","name to_s  to_s "]}," AWS OptionGrammar ModuleMethods validate":{"type":"method","name":"validate","children":[],"call":[" raise ","ArgumentError  new ","option ruby_name ","options has_key? ","option ruby_name to_sym ","option required? ! ","option required? "," supported_options each "," supported_options "," option validate "," option ","name to_s ","options each ","option ruby_name to_s  ","option ruby_name to_s  to_sym ","name to_s  to_s "]}," AWS OptionGrammar ModuleMethods supported_options":{"type":"method","name":"supported_options","children":[],"call":[]}," AWS OptionGrammar ModuleMethods option":{"type":"method","name":"option","children":[],"call":[]}," AWS OptionGrammar ModuleMethods customize":{"type":"method","name":"customize","children":[],"call":["opt validate ","MetaUtils  extend_method ","opt ruby_name ","supported_ary each ","supported_ruby_names [] ","memo []= ","supported_ary inject ","supported_options values ","supported_options []= ","option name ","option extend_with_config ","DefaultOption  new ","supported_options [] "," parse_option ","config kind_of? ","config each ","opt name ","m supported_options inject ","m supported_options ","Class  new ","MetaUtils  extend_Class  new ethod ","opt ruby_naClass  new e ","supported_options values  each ","supported_ruby_naClass  new es [] ","Class  new eClass  new o []= ","supported_options values  inject ","supported_option extend_with_config s values ","supported_option extend_with_config s []= ","option extend_with_config  name ","option naClass  new e ","option extend_with_config  extend_with_config ","supported_option extend_with_config s [] "," parse_option extend_with_config  ","opt naClass  new e ","m supported_option extend_with_config s inject ","Class  new  supported_options inject ","m supported_option extend_with_config s ","Class  new  supported_options "]}," AWS OptionGrammar DefaultOption extend_with_config":{"type":"method","name":"extend_with_config","children":[],"call":["mod apply ","Descriptors  const_get ","Inflection  class_name ","name to_s ","desc to_a first ","desc to_a ","desc kind_of? ","descriptors each "," clone ","Descriptors  const_get  apply ","Inflection  Inflection  class_name  "]}," AWS OptionGrammar DefaultOption context_description":{"type":"method","name":"context_description","children":[],"call":[" ruby_name "]}," AWS OptionGrammar DefaultOption format_error":{"type":"method","name":"format_error","children":[],"call":["FormatError  new "," context_description ","  context_description _description "]}," AWS OptionGrammar DefaultOption required?":{"type":"method","name":"required?","children":[],"call":[]}," AWS OptionGrammar DefaultOption encode_value":{"type":"method","name":"encode_value","children":[],"call":[]}," AWS OptionGrammar DefaultOption prefixed_name":{"type":"method","name":"prefixed_name","children":[],"call":[" name "]}," AWS OptionGrammar DefaultOption request_params":{"type":"method","name":"request_params","children":[],"call":["Http Request Param  new "," encode_value "," prefixed_name "]}," AWS OptionGrammar DefaultOption ruby_name":{"type":"method","name":"ruby_name","children":[],"call":["Inflection  ruby_name "," name "]}," AWS OptionGrammar DefaultOption initialize":{"type":"method","name":"initialize","children":[],"call":[]}," AWS OptionGrammar Descriptors Structure request_params":{"type":"method","name":"request_params","children":[],"call":["(send\n  (lvar :values) :map) flatten "," member_option request_params "," prefixed_name "," member_option ","name to_s ","values map "," prefixed_name to_s  ","name to_s  to_s "]}," AWS OptionGrammar Descriptors Structure validate":{"type":"method","name":"validate","children":[],"call":[" raise ","ArgumentError  new ","option ruby_name ","value has_key? ! ","value has_key? ","option ruby_name to_sym ","option required? "," member_options each "," member_options "," member_option validate "," member_option ","name to_s ","value each "," context_description "," format_error ","value respond_to? ","option ruby_name to_s  ","option ruby_name to_s  to_sym ","name to_s  to_s ","  context_description _description "]}," AWS OptionGrammar Descriptors Structure apply":{"type":"method","name":"apply","children":[],"call":[]}," AWS OptionGrammar Descriptors ListMember prefixed_name":{"type":"method","name":"prefixed_name","children":[],"call":[]}," AWS OptionGrammar Descriptors ListMember initialize":{"type":"method","name":"initialize","children":[],"call":["options [] "]}," AWS OptionGrammar Descriptors MemberedList join":{"type":"method","name":"join","children":[],"call":[]}," AWS OptionGrammar Descriptors ListMethods InstanceMethods join":{"type":"method","name":"join","children":[],"call":[]}," AWS OptionGrammar Descriptors ListMethods InstanceMethods request_params":{"type":"method","name":"request_params","children":[],"call":["Http Request Param  new "," prefixed_name ","params empty? ","params << "," member_option request_params "," member_option "," prefixed_name + + ","(send\n  (send\n    (lvar :params) :size) :+\n  (int 1)) to_s ","params size + ","params size "," prefixed_name + "," join ","value each "," prefixed_ prefixed_name + +  "," prefixed_ prefixed_name + +  + + "," prefixed_ prefixed_name + +  + "]}," AWS OptionGrammar Descriptors ListMethods InstanceMethods validate":{"type":"method","name":"validate","children":[],"call":[" member_option validate "," context_description "," member_option ","value each "," raise "," format_error ","value respond_to? "]}," AWS OptionGrammar Descriptors ListMethods ClassMethods apply":{"type":"method","name":"apply","children":[],"call":["MetaUtils  extend_method ","member_option extend_with_config ","ListMember  new ","option member_option ","option respond_to? ","member_option extend_with_config  extend_with_config ","option member_option  extend_with_config ","option member_option extend_with_config  ","option option member_option  "]}," AWS OptionGrammar Descriptors Rename apply":{"type":"method","name":"apply","children":[],"call":[]}," AWS OptionGrammar Descriptors Required required?":{"type":"method","name":"required?","children":[],"call":[]}," AWS OptionGrammar Descriptors Boolean encode_value":{"type":"method","name":"encode_value","children":[],"call":["value to_s "]}," AWS OptionGrammar Descriptors Boolean validate":{"type":"method","name":"validate","children":[],"call":[" raise "," format_error ","value == "]}," AWS OptionGrammar Descriptors Integer encode_value":{"type":"method","name":"encode_value","children":[],"call":["value to_s "]}," AWS OptionGrammar Descriptors Integer validate":{"type":"method","name":"validate","children":[],"call":[" raise "," format_error ","value respond_to? "]}," AWS OptionGrammar Descriptors Blob encode_value":{"type":"method","name":"encode_value","children":[],"call":["Base64  encode64 ","value to_s "]}," AWS OptionGrammar Descriptors Blob validate":{"type":"method","name":"validate","children":[],"call":[" raise "," format_error ","value respond_to? "]}," AWS OptionGrammar Descriptors String encode_value":{"type":"method","name":"encode_value","children":[],"call":["value to_s "]}," AWS OptionGrammar Descriptors String validate":{"type":"method","name":"validate","children":[],"call":[" raise "," format_error ","value respond_to? "]}," AWS OptionGrammar Descriptors Timestamp encode_value":{"type":"method","name":"encode_value","children":[],"call":["value to_s "]}," AWS OptionGrammar Descriptors Timestamp validate":{"type":"method","name":"validate","children":[],"call":[]}," AWS OptionGrammar Descriptors NoArgs apply":{"type":"method","name":"apply","children":[],"call":["option extend "]}," AWS OptionGrammar FormatError to_s":{"type":"method","name":"to_s","children":[],"call":[" context_description "," expectation "]}," AWS OptionGrammar FormatError initialize":{"type":"method","name":"initialize","children":[],"call":[]}," AWS Naming service_ruby_name":{"type":"method","name":"service_ruby_name","children":[],"call":["Inflection  ruby_name "," service_name "]}," AWS Naming service_name":{"type":"method","name":"service_name","children":[],"call":[" name split [] "," name split "," name "," debugger "," name == "]}," AWS Model inspect":{"type":"method","name":"inspect","children":[],"call":[" class "]}," AWS Model config_prefix":{"type":"method","name":"config_prefix","children":[],"call":["Inflection  ruby_name "," class to_s split [] "," class to_s split "," class to_s "," class "]}," AWS Model client":{"type":"method","name":"client","children":[],"call":["@config send "," config_prefix "]}," AWS Model initialize":{"type":"method","name":"initialize","children":[],"call":["AWS  config ","args first config ","args first ","args first respond_to? ","options [] ","args last ","args last kind_of? ","args last  [] "]}," AWS MetaUtils extend":{"type":"method","name":"extend","children":[],"call":["object extend ","Module  new "]}," AWS MetaUtils class_extend_method":{"type":"method","name":"class_extend_method","children":[],"call":["klass send "," define_method ","Module  new "]}," AWS MetaUtils extend_method":{"type":"method","name":"extend_method","children":[],"call":["object extend "," define_method ","Module  new "]}," AWS LazyErrorClasses included":{"type":"method","name":"included","children":[],"call":[]}," AWS LazyErrorClasses ClassMethods included":{"type":"method","name":"included","children":[],"call":[" raise ","NotImplementedError  new ","(begin\n  (self)) + + ","(begin\n  (self)) + "]}," AWS LazyErrorClasses ClassMethods error_class":{"type":"method","name":"error_class","children":[],"call":[" module_eval ","code gsub "]}," AWS LazyErrorClasses ClassMethods const_missing":{"type":"method","name":"const_missing","children":[],"call":[" const_set "," include ","Class  new "," const_defined? "," const_missing_mutex synchronize "," const_missing_mutex "]}," AWS Inflection class_name":{"type":"method","name":"class_name","children":[],"call":["m [] upcase ","m [] ","(send\n  (lvar :name) :sub\n  (regexp\n    (str \"^(.)\")\n    (regopt))) gsub ","m upcase ","name sub "]}," AWS Inflection ruby_name":{"type":"method","name":"ruby_name","children":[],"call":["aws_name sub gsub scan join downcase ","aws_name sub gsub scan join ","aws_name sub gsub scan ","aws_name sub gsub ","aws_name sub ","aws_name == "]}," AWS IndifferentHash _convert_key":{"type":"method","name":"_convert_key","children":[],"call":["key to_s ","key is_a? "]}," AWS IndifferentHash delete":{"type":"method","name":"delete","children":[],"call":[" _convert_key "]}," AWS IndifferentHash fetch":{"type":"method","name":"fetch","children":[],"call":[" _convert_key "]}," AWS IndifferentHash has_key?":{"type":"method","name":"has_key?","children":[],"call":[" _convert_key "]}," AWS IndifferentHash merge":{"type":"method","name":"merge","children":[],"call":[" dup merge! "," dup "]}," AWS IndifferentHash merge!":{"type":"method","name":"merge!","children":[],"call":[" []= ","hash each_pair "]}," AWS IndifferentHash []":{"type":"method","name":"[]","children":[],"call":[" _getter "," _convert_key "]}," AWS IndifferentHash []=":{"type":"method","name":"[]=","children":[],"call":[" _setter "," _convert_key "]}," AWS IndifferentHash initialize":{"type":"method","name":"initialize","children":[],"call":[" merge! ","args first is_a? ","args first "]}," AWS IgnoreResultElement process_customizations":{"type":"method","name":"process_customizations","children":[],"call":[]}," AWS Http Response header":{"type":"method","name":"header","children":[],"call":["header_value first ","header_value is_a? ","header_name downcase == ","name to_s downcase ","name to_s ","header_name downcase "," headers each_pair "," headers "]}," AWS Http Response initialize":{"type":"method","name":"initialize","children":[],"call":[" block_given? ","options [] "]}," AWS Http Request Param escape":{"type":"method","name":"escape","children":[],"call":["CGI  escape gsub ","CGI  escape ","value to_s ","value encode ","value respond_to? ","value encode  to_s ","value encode  encode ","value encode  respond_to? "]}," AWS Http Request Param encoded":{"type":"method","name":"encoded","children":[],"call":[" escape "," name "," value "]}," AWS Http Request Param ==":{"type":"method","name":"==","children":[],"call":[" to_s == ","other to_s "," to_s ","other kind_of? "]}," AWS Http Request Param to_s":{"type":"method","name":"to_s","children":[],"call":[" name "," value "]}," AWS Http Request Param <=>":{"type":"method","name":"<=>","children":[],"call":["@name <=> ","other name "]}," AWS Http Request Param initialize":{"type":"method","name":"initialize","children":[],"call":[]}," AWS Http Request CaseInsensitiveHash has_key?":{"type":"method","name":"has_key?","children":[],"call":["key to_s downcase ","key to_s "]}," AWS Http Request CaseInsensitiveHash []":{"type":"method","name":"[]","children":[],"call":["key to_s downcase ","key to_s "]}," AWS Http Request CaseInsensitiveHash []=":{"type":"method","name":"[]=","children":[],"call":["key to_s downcase ","key to_s "]}," AWS Http Request body":{"type":"method","name":"body","children":[],"call":[" url_encoded_params "]}," AWS Http Request querystring":{"type":"method","name":"querystring","children":[],"call":[]}," AWS Http Request url_encoded_params":{"type":"method","name":"url_encoded_params","children":[],"call":["(send\n  (send\n    (ivar :@params) :sort) :collect) join ","p encoded ","@params sort collect ","@params sort ","@params empty? "]}," AWS Http Request uri":{"type":"method","name":"uri","children":[],"call":[" path "," querystring "]}," AWS Http Request get_param":{"type":"method","name":"get_param","children":[],"call":[" raise ","p name == ","p name ","@params detect "]}," AWS Http Request add_param":{"type":"method","name":"add_param","children":[],"call":["@params << ","Param  new ","name_or_param kind_of? "]}," AWS Http Request use_ssl?":{"type":"method","name":"use_ssl?","children":[],"call":[]}," AWS Http Request use_ssl=":{"type":"method","name":"use_ssl=","children":[],"call":[]}," AWS Http Request initialize":{"type":"method","name":"initialize","children":[],"call":["CaseInsensitiveHash  new "]}," AWS Http HTTPartyHandler handle":{"type":"method","name":"handle","children":[],"call":["response headers= ","http_response to_hash ","response status= ","http_response code to_i ","http_response code ","response body= ","http_response body ","response timeout= "," class send ","request body "," class ","headers []= ","value to_s ","request headers each_pair ","request headers ","request http_method downcase ","request http_method ","request uri ","request host ","request use_ssl? ","opts []= ","request ssl_ca_file ","request ssl_verify_peer? ","request proxy_uri port ","request proxy_uri ","request proxy_uri to_s "," default_request_options merge "," default_request_options ","request proxy_uri host "," class send  to_hash "," class send  code to_i "," class send  code "," class send  body ","request http_request http_method downcase  downcase ","request http_request http_method downcase  "," default_request_options merge  []= "]}," AWS Http Handler sleep_with_callback":{"type":"method","name":"sleep_with_callback","children":[],"call":["Kernel  sleep "]}," AWS Http Handler handle_async":{"type":"method","name":"handle_async","children":[],"call":["handle signal_success ","handle signal_failure "," handle ","Thread  new "]}," AWS Http Handler handle":{"type":"method","name":"handle","children":[],"call":["@base handle "]}," AWS Http Handler initialize":{"type":"method","name":"initialize","children":[],"call":[" raise "," define_method ","MetaUtils  extend ","@base handle_async ","MetaUtils  extend_method ","block arity == ","block arity ","base respond_to? "]}," AWS Http CurbHandler make_easy_handle":{"type":"method","name":"make_easy_handle","children":[],"call":["thread run ","response status= ","curl response_code ","response body= ","curl body_str ","curl on_complete ","curl delete= ","curl post_body= ","request body ","curl put_data= ","curl head= ","request http_method ","header_data length ","response headers []= ","response headers ","header_data strip split ","header_data strip ","curl on_header ","curl headers= ","request headers ","Curl Easy  new "," puts ","request uri ","request host ","request use_ssl? ","curl proxy_port= ","proxy port ","curl proxy_url= ","proxy to_s ","request proxy_uri ","Curl Easy  new  response_code ","Curl Easy  new  body_str ","Curl Easy  new  on_complete ","Curl Easy  new  delete= ","Curl Easy  new  post_body= ","Curl Easy  new  put_data= ","Curl Easy  new  head= ","Curl Easy  new  on_header ","Curl Easy  new  headers= ","Curl Easy  new  proxy_port= ","curl request proxy_uri _port= ","request proxy_uri  port ","Curl Easy  new  proxy_url= ","curl request proxy_uri _url= ","request proxy_uri  to_s ","request request proxy_uri _uri "]}," AWS Http CurbHandler start_processor":{"type":"method","name":"start_processor","children":[],"call":["Thread  stop ","@q empty? ","@sem unlock "," fill_multi ","@q slice! ","@sem try_lock ","@q empty? ! ","@multi perform ","items empty? ","@sem synchronize "," loop ","Thread  new ","@q slice!  empty? "]}," AWS Http CurbHandler fill_multi":{"type":"method","name":"fill_multi","children":[],"call":["@multi add "," make_easy_handle ","items each ","items ea make_easy_handle h "]}," AWS Http CurbHandler handle":{"type":"method","name":"handle","children":[],"call":["Thread  stop ","@processor wakeup ","@q << ","Thread  current ","@sem synchronize "," raise ","request http_method ","(str \"GET\") include? "]}," AWS Http CurbHandler initialize":{"type":"method","name":"initialize","children":[],"call":[" start_processor ","Curl Multi  new ","Mutex  new "]}," AWS Http BuiltinHandler handle":{"type":"method","name":"handle","children":[],"call":["response headers= ","http_response to_hash ","response status= ","http_response code to_i ","http_response code ","response body= ","http_response body ","http request ","request body ","http_request_class new ","request uri "," raise ","request http_method ","headers []= ","value to_s ","request headers each_pair ","request headers ","http start ","http cert_store= ","store set_default_paths ","OpenSSL X509 Store  new ","http verify_mode= ","http use_ssl= ","request use_ssl? ","Net HTTP  new ","request host ","Net HTTP  new _response to_hash ","Net HTTP  new _response code to_i ","Net HTTP  new _response code ","Net HTTP  new _response body ","Net HTTP  new  request ","http_request_class new _class new ","Net HTTP  new _request_class new ","request Net HTTP  new _method ","Net HTTP  new  start ","http cert_OpenSSL X509 Store  new = ","Net HTTP  new  cert_store= ","OpenSSL X509 Store  new  set_default_paths ","Net HTTP  new  verify_mode= ","Net HTTP  new  use_ssl= "]}," AWS Errors ModeledError error_grammar":{"type":"method","name":"error_grammar","children":[],"call":[" class "]}," AWS Errors ModeledError extract_message":{"type":"method","name":"extract_message","children":[],"call":[" error_grammar parse message "," error_grammar parse "," error_grammar "]}," AWS Errors ModeledError parse_body":{"type":"method","name":"parse_body","children":[],"call":[" error_grammar parse "," error_grammar "]}," AWS Errors ModeledError include_error_type":{"type":"method","name":"include_error_type","children":[],"call":[" extend "," http_response status >= "," http_response status "," http_response "]}," AWS Errors ModeledError initialize":{"type":"method","name":"initialize","children":[],"call":[" parse_body ","resp body "," include_error_type "," message ","req kind_of? "]}," AWS Errors ExceptionMixinClassMethods new":{"type":"method","name":"new","children":[],"call":["e extend ","Base  new ","Base  new  Base  new xtBase  new nd ","BasBase  new   nBase  new w "]}," AWS Errors Base initialize":{"type":"method","name":"initialize","children":[],"call":["http_response body "," http_response body "," http_response "," include_error_type ","req nil? ","req is_a? "]}," AWS EC2 snapshots":{"type":"method","name":"snapshots","children":[],"call":["SnapshotCollection  new "," config "]}," AWS EC2 reserved_instances_offerings":{"type":"method","name":"reserved_instances_offerings","children":[],"call":["ReservedInstancesOfferingCollection  new "," config "]}," AWS EC2 reserved_instances":{"type":"method","name":"reserved_instances","children":[],"call":["ReservedInstancesCollection  new "," config "]}," AWS EC2 volumes":{"type":"method","name":"volumes","children":[],"call":["VolumeCollection  new "," config "]}," AWS EC2 images":{"type":"method","name":"images","children":[],"call":["ImageCollection  new "," config "]}," AWS EC2 availability_zones":{"type":"method","name":"availability_zones","children":[],"call":["AvailabilityZoneCollection  new "," config "]}," AWS EC2 regions":{"type":"method","name":"regions","children":[],"call":["RegionCollection  new "," config "]}," AWS EC2 tags":{"type":"method","name":"tags","children":[],"call":["TagCollection  new "," config "]}," AWS EC2 key_pairs":{"type":"method","name":"key_pairs","children":[],"call":["KeyPairCollection  new "," config "]}," AWS EC2 elastic_ips":{"type":"method","name":"elastic_ips","children":[],"call":["ElasticIpCollection  new "," config "]}," AWS EC2 security_groups":{"type":"method","name":"security_groups","children":[],"call":["SecurityGroupCollection  new "," config "]}," AWS EC2 instances":{"type":"method","name":"instances","children":[],"call":["InstanceCollection  new "," config "]}," AWS EC2 VolumeCollection member_class":{"type":"method","name":"member_class","children":[],"call":[]}," AWS EC2 VolumeCollection create":{"type":"method","name":"create","children":[],"call":["Volume  new "," config ","resp volume_id "," client create_volume "," client ","opts []= ","snapshot id ","opts delete ","Volume  new_from ","options []= ","options delete "," client create_volume  volume_id ","opts delete  id ","options delete  id "]}," AWS EC2 VolumeCollection each":{"type":"method","name":"each","children":[],"call":["Volume  new "," config ","v volume_id ","resp volume_set each ","resp volume_set "," filtered_request ","Volume  new_from ","v Volume  new _id ","v Volume  new_from _id ","resp Volume  new _set each ","resp Volume  new_from _set each "," filtered_request  volume_set each ","resp Volume  new _set ","resp Volume  new_from _set "," filtered_request  volume_set "]}," AWS EC2 Volume find_in_response":{"type":"method","name":"find_in_response","children":[],"call":["resp volume_index [] "," id ","resp volume_index "]}," AWS EC2 Volume availability_zone":{"type":"method","name":"availability_zone","children":[],"call":["AvailabilityZone  new "," config "," availability_zone_name "," availability_zone_ availability_zone_name  "]}," AWS EC2 Volume snapshot":{"type":"method","name":"snapshot","children":[],"call":["Snapshot  new "," config "," snapshot_id ","  snapshot_id  "]}," AWS EC2 Volume exists?":{"type":"method","name":"exists?","children":[],"call":["resp volume_index key? "," id ","resp volume_index "," client describe_volumes "," client "," client describe_volumes  volume_index key? "," client describe_volumes  volume_index "]}," AWS EC2 Volume attachments":{"type":"method","name":"attachments","children":[],"call":["AttachmentCollection  new "," config "]}," AWS EC2 Volume detach_from":{"type":"method","name":"detach_from","children":[],"call":["a delete ","Attachment  new "," config ","Instance  new ","instance id ","Attachment  new  delete ","AttAttachment  new chment  new ","InstAttachment  new nce  new ","instAttachment  new nce id "]}," AWS EC2 Volume attach_to":{"type":"method","name":"attach_to","children":[],"call":["Attachment  new "," config ","resp device ","Instance  new ","resp instance_id "," client attach_volume ","instance id "," id "," client "," client attach_volume  device "," client attach_volume  instance_id ","resp Instance  new _id ","Instance  new  id "]}," AWS EC2 Volume create_snapshot":{"type":"method","name":"create_snapshot","children":[],"call":["SnapshotCollection  new create ","SnapshotCollection  new "," config ","opts []= "]}," AWS EC2 Volume delete":{"type":"method","name":"delete","children":[],"call":[" client delete_volume "," id "," client "]}," AWS EC2 Volume initialize":{"type":"method","name":"initialize","children":[],"call":[]}," AWS EC2 TaggedItem tagging_resource_type":{"type":"method","name":"tagging_resource_type","children":[],"call":["Inflection  ruby_name tr ","Inflection  ruby_name "," class to_s "," class ","Core Inflection  ruby_name tr ","Core Inflection  ruby_name "]}," AWS EC2 TaggedItem cached_tags":{"type":"method","name":"cached_tags","children":[],"call":["hash []= ","tag value ","tag key ","obj tag_set inject ","obj tag_set "," find_in_response ","cache select each ","cache select "," describe_call_name to_sym "," describe_call_name ","AWS  response_cache "," find_in_response  tag_set inject "," find_in_response  tag_set ","AWS  response_cache  select each ","AWS  response_cache  select ","AWS  response_AWS  response_cache  "]}," AWS EC2 TaggedItem tags":{"type":"method","name":"tags","children":[],"call":["ResourceTagCollection  new "," config "]}," AWS EC2 TaggedItem clear_tags":{"type":"method","name":"clear_tags","children":[],"call":[" client delete_tags "," id "," client "]}," AWS EC2 TaggedItem add_tag":{"type":"method","name":"add_tag","children":[],"call":["Tag  new ","options merge "," config "," client create_tags ","options [] to_s ","options [] "," id "," client "]}," AWS EC2 TaggedCollection tagged_values":{"type":"method","name":"tagged_values","children":[],"call":[" filter "]}," AWS EC2 TaggedCollection tagged":{"type":"method","name":"tagged","children":[],"call":[" filter "]}," AWS EC2 TagCollection member_class":{"type":"method","name":"member_class","children":[],"call":[]}," AWS EC2 TagCollection each":{"type":"method","name":"each","children":[],"call":["Tag  new ","tag key ","ResourceObject  new "," config ","tag resource_type ","tag resource_id ","resource_class new ","EC2  const_get ","EC2  const_defined? ","Inflection  class_name ","response tag_set each ","response tag_set "," filtered_request ","Core Inflection  class_name ","tag ResourceObject  new _type ","tag resource_class new _type ","tag ResourceObject  new _id ","tag resource_class new _id ","ResourceObject  new _class new ","resource_class new _class new ","EC2  const_get  new "," filtered_request  tag_set each "," filtered_request  tag_set "]}," AWS EC2 TagCollection []":{"type":"method","name":"[]","children":[],"call":[]}," AWS EC2 TagCollection create":{"type":"method","name":"create","children":[],"call":["Tag  new "," config "," client create_tags ","resource id "," client ","options [] to_s ","options [] "]}," AWS EC2 ResourceObject cached_tags":{"type":"method","name":"cached_tags","children":[],"call":[]}," AWS EC2 ResourceObject tagging_resource_type":{"type":"method","name":"tagging_resource_type","children":[],"call":[]}," AWS EC2 ResourceObject initialize":{"type":"method","name":"initialize","children":[],"call":["options [] "]}," AWS EC2 Tag describe_call":{"type":"method","name":"describe_call","children":[],"call":[" client describe_tags "," resource send "," resource "," resource tagging_resource_type "," key "," client "]}," AWS EC2 Tag find_in_response":{"type":"method","name":"find_in_response","children":[],"call":["resp tag_index [] "," response_index_key ","resp tag_index "]}," AWS EC2 Tag response_index_key":{"type":"method","name":"response_index_key","children":[],"call":[" key "," resource send "," resource "," resource tagging_resource_type "," resource tagging_resource_ resource tagging_resource_type  "]}," AWS EC2 Tag local_cache_key":{"type":"method","name":"local_cache_key","children":[],"call":[" response_index_key "," class "]}," AWS EC2 Tag inspect":{"type":"method","name":"inspect","children":[],"call":[" local_cache_key "," class "]}," AWS EC2 Tag delete":{"type":"method","name":"delete","children":[],"call":[" client delete_tags "," resource id "," resource "," client ","tag_opts []= "," key "]}," AWS EC2 Tag value":{"type":"method","name":"value","children":[],"call":[]}," AWS EC2 Tag initialize":{"type":"method","name":"initialize","children":[],"call":["key to_s "]}," AWS EC2 SnapshotCollection member_class":{"type":"method","name":"member_class","children":[],"call":[]}," AWS EC2 SnapshotCollection create":{"type":"method","name":"create","children":[],"call":["Snapshot  new "," config ","resp snapshot_id "," client create_snapshot "," client ","opts []= ","volume id ","opts delete "," client create_snapshot  snapshot_id ","opts delete  id "]}," AWS EC2 SnapshotCollection each":{"type":"method","name":"each","children":[],"call":["Snapshot  new "," config ","v snapshot_id ","resp snapshot_set each ","resp snapshot_set "," filtered_request ","opts []= ","id to_s ","@restorable_by map ","@restorable_by empty? ","@owners map ","@owners empty? ","Snapshot  new_from ","details [] ","resp [] each ","resp [] ","v Snapshot  new _id ","v Snapshot  new_from _id ","resp Snapshot  new _set each ","resp Snapshot  new_from _set each "," filtered_request  snapshot_set each ","resp Snapshot  new _set ","resp Snapshot  new_from _set "," filtered_request  snapshot_set "," filtered_request  [] each "," filtered_request  [] "]}," AWS EC2 Snapshot find_in_response":{"type":"method","name":"find_in_response","children":[],"call":["resp snapshot_index [] "," id ","resp snapshot_index "]}," AWS EC2 Snapshot __permissions_attribute__":{"type":"method","name":"__permissions_attribute__","children":[],"call":[]}," AWS EC2 Snapshot volume":{"type":"method","name":"volume","children":[],"call":["Volume  new "," config "," volume_id "]}," AWS EC2 Snapshot exists?":{"type":"method","name":"exists?","children":[],"call":["resp snapshot_set empty? ! ","resp snapshot_set empty? ","resp snapshot_set "," client describe_snapshots "," id "," client "," client describe_snapshots  snapshot_set empty? ! "," client describe_snapshots  snapshot_set empty? "," client describe_snapshots  snapshot_set "]}," AWS EC2 Snapshot create_volume":{"type":"method","name":"create_volume","children":[],"call":["VolumeCollection  new create ","opts merge ","VolumeCollection  new "," config ","volumes create ","options merge ","VolumeCollection  new  create "]}," AWS EC2 Snapshot delete":{"type":"method","name":"delete","children":[],"call":[" client delete_snapshot "," id "," client "]}," AWS EC2 Snapshot initialize":{"type":"method","name":"initialize","children":[],"call":[]}," AWS EC2 SecurityGroupCollection member_class":{"type":"method","name":"member_class","children":[],"call":[]}," AWS EC2 SecurityGroupCollection each":{"type":"method","name":"each","children":[],"call":["SecurityGroup  new "," config ","info owner_id ","info group_description ","info group_name ","info group_id ","response security_group_info each ","response security_group_info "," filtered_request ","SecurityGroup  new_from ","info SecurityGroup  new _description ","info SecurityGroup  new_from _description ","info SecurityGroup  new _name ","info SecurityGroup  new_from _name ","info SecurityGroup  new _id ","info SecurityGroup  new_from _id ","response security_SecurityGroup  new _info each ","response security_SecurityGroup  new_from _info each "," filtered_request  security_group_info each ","response security_SecurityGroup  new _info ","response security_SecurityGroup  new_from _info "," filtered_request  security_group_info "]}," AWS EC2 SecurityGroupCollection []":{"type":"method","name":"[]","children":[],"call":["SecurityGroup  new "," config "]}," AWS EC2 SecurityGroupCollection create":{"type":"method","name":"create","children":[],"call":["SecurityGroup  new "," config ","response group_id "," client create_security_group "," client ","options [] ","create_opts []= ","create_opts [] ","vpc_id id ","vpc_id is_a? "," filter_value_for "," client create_security_group  group_id ","vpc_id id  id ","options []  id ","vpc_id id  is_a? ","options []  is_a? "]}," AWS EC2 SecurityGroup format_permission":{"type":"method","name":"format_permission","children":[],"call":["permission []= ","groups empty? ","ip_ranges collect ","ip_ranges empty? "," raise ","invalid ingress ip permission,  + ","invalid ingress ip permission, hashes  + ","groups << ","where has_key? ","where owner_id ","where id ","ip_ranges << ","sources each ","sources << ","sources empty? "," Array last to_i "," Array last "," Array "," Array first to_i "," Array first ","protocol to_s downcase ","protocol to_s "]}," AWS EC2 SecurityGroup find_in_response":{"type":"method","name":"find_in_response","children":[],"call":["resp security_group_index [] "," id ","resp security_group_index "]}," AWS EC2 SecurityGroup describe_call_name":{"type":"method","name":"describe_call_name","children":[],"call":[" class describe_call_name "," class "]}," AWS EC2 SecurityGroup inflected_name":{"type":"method","name":"inflected_name","children":[],"call":[]}," AWS EC2 SecurityGroup resource_type":{"type":"method","name":"resource_type","children":[],"call":[]}," AWS EC2 SecurityGroup delete":{"type":"method","name":"delete","children":[],"call":[" client delete_security_group "," id "," client "]}," AWS EC2 SecurityGroup revoke_ingress":{"type":"method","name":"revoke_ingress","children":[],"call":[" client revoke_security_group_ingress "," id "," client "," format_permission ","permission revoke ","IpPermission  new "," parse_ingress_sources "," ingress_opts "," format_IpPermission  new  ","IpPermission  new  revoke "]}," AWS EC2 SecurityGroup authorize_ingress":{"type":"method","name":"authorize_ingress","children":[],"call":[" client authorize_security_group_ingress "," id "," client "," format_permission ","permission authorize ","IpPermission  new "," parse_ingress_sources "," ingress_opts "," format_IpPermission  new  ","IpPermission  new  authorize "]}," AWS EC2 SecurityGroup disallow_ping":{"type":"method","name":"disallow_ping","children":[],"call":[" revoke_ingress ","sources << ","sources empty? "]}," AWS EC2 SecurityGroup allow_ping":{"type":"method","name":"allow_ping","children":[],"call":[" authorize_ingress ","sources << ","sources empty? "]}," AWS EC2 SecurityGroup ip_permissions":{"type":"method","name":"ip_permissions","children":[],"call":["IpPermissionCollection  new "," config "]}," AWS EC2 SecurityGroup description":{"type":"method","name":"description","children":[],"call":[]}," AWS EC2 SecurityGroup owner_id":{"type":"method","name":"owner_id","children":[],"call":[]}," AWS EC2 SecurityGroup name":{"type":"method","name":"name","children":[],"call":[]}," AWS EC2 SecurityGroup exists?":{"type":"method","name":"exists?","children":[],"call":[" client describe_security_groups security_group_index key? "," id "," client describe_security_groups security_group_index "," client describe_security_groups "," client "]}," AWS EC2 SecurityGroup initialize":{"type":"method","name":"initialize","children":[],"call":["options [] "]}," AWS EC2 SecurityGroup IpPermissionCollection each":{"type":"method","name":"each","children":[],"call":["IpPermission  new "," config ","p to_port ","p from_port ","p ip_protocol ","ip cidr_ip ","p ip_ranges collect ","p ip_ranges ","SecurityGroup  new ","group user_id ","group group_name ","group group_id ","p groups collect ","p groups "," security_group ip_permissions_list each "," security_group ip_permissions_list "," security_group "," security_group ip_IpPermission  new s_list each "," security_group ip_IpPermission  new s_list "]}," AWS EC2 SecurityGroup IpPermissionCollection initialize":{"type":"method","name":"initialize","children":[],"call":["options [] ! ! ","options [] ! ","options [] "]}," AWS EC2 SecurityGroup IpPermission revoke":{"type":"method","name":"revoke","children":[],"call":[" security_group revoke_ingress "," port_range "," protocol "," security_group "," groups + "," ip_ranges "," groups "," client send "," format_permission "," security_group id "," client "," egress? "," update_sg "]}," AWS EC2 SecurityGroup IpPermission authorize":{"type":"method","name":"authorize","children":[],"call":[" security_group authorize_ingress "," port_range "," protocol "," security_group "," groups + "," ip_ranges "," groups "," client send "," format_permission "," security_group id "," client "," egress? "," update_sg "]}," AWS EC2 SecurityGroup IpPermission initialize":{"type":"method","name":"initialize","children":[],"call":[" Array ","options [] "," Array last "," Array first ","protocol to_s downcase to_sym ","protocol to_s downcase ","protocol to_s "," Array last to_i "," Array first to_i ","protocol == ","ports is_a? "]}," AWS EC2 ResourceTagCollection cached_tags":{"type":"method","name":"cached_tags","children":[],"call":["@resource cached_tags ","@resource respond_to? ","@resource @resource cached_tags _tags "]}," AWS EC2 ResourceTagCollection to_h":{"type":"method","name":"to_h","children":[],"call":["hash []= ","tag value ","tag key ","@tags filtered_request tag_set inject ","@tags filtered_request tag_set ","@tags filtered_request "," cached_tags ","  cached_tags _tags "]}," AWS EC2 ResourceTagCollection values_at":{"type":"method","name":"values_at","children":[],"call":["hash [] ","keys map ","hash []= ","tag value ","tag key ","tag_set inject ","@tags filter filtered_request tag_set ","@tags filter filtered_request ","@tags filter ","k to_s ","cached values_at "," cached_tags ","@tags filter filtered_request tag_set  inject ","@tags filter filtered_request @tags filter filtered_request tag_set  "," cached_tags  values_at ","  cached_tags _tags "]}," AWS EC2 ResourceTagCollection each":{"type":"method","name":"each","children":[],"call":["tag value ","tag key ","blk arity == ","blk arity ","@tags filtered_request tag_set each ","@tags filtered_request tag_set ","@tags filtered_request ","cached each "," cached_tags "," cached_tags  each ","  cached_tags _tags "]}," AWS EC2 ResourceTagCollection clear":{"type":"method","name":"clear","children":[],"call":[" client delete_tags ","@resource send "," client "]}," AWS EC2 ResourceTagCollection delete":{"type":"method","name":"delete","children":[],"call":[" client delete_tags ","key to_s ","keys map ","@resource send "," client ","keys empty? "]}," AWS EC2 ResourceTagCollection method_missing":{"type":"method","name":"method_missing","children":[],"call":[" send ","m to_s [] ","m to_s ","m to_s [] == "," [] ","args empty? "]}," AWS EC2 ResourceTagCollection set":{"type":"method","name":"set","children":[],"call":[" client create_tags ","key to_s ","tags map ","@resource send "," client "]}," AWS EC2 ResourceTagCollection add":{"type":"method","name":"add","children":[],"call":["@tags create ","key to_s "]}," AWS EC2 ResourceTagCollection []=":{"type":"method","name":"[]=","children":[],"call":[" delete ","@tags create ","key to_s "]}," AWS EC2 ResourceTagCollection has_value?":{"type":"method","name":"has_value?","children":[],"call":["@tags filter to_a empty? ! ","@tags filter to_a empty? ","@tags filter to_a ","@tags filter ","value to_s ","cached values include? ","cached values "," cached_tags "," cached_tags  values include? "," cached_tags  values ","  cached_tags _tags "]}," AWS EC2 ResourceTagCollection has_key?":{"type":"method","name":"has_key?","children":[],"call":["@tags filter to_a empty? ! ","@tags filter to_a empty? ","@tags filter to_a ","@tags filter ","key to_s ","cached has_key? "," cached_tags "," cached_tags  has_key? ","  cached_tags _tags "]}," AWS EC2 ResourceTagCollection empty?":{"type":"method","name":"empty?","children":[],"call":["@tags to_a empty? ","@tags to_a ","cached empty? "," cached_tags "," cached_tags  empty? ","  cached_tags _tags "]}," AWS EC2 ResourceTagCollection []":{"type":"method","name":"[]","children":[],"call":["Tag  new value ","Tag  new "," config ","cached [] ","key to_s "," cached_tags "," cached_tags  [] ","  cached_tags _tags "]}," AWS EC2 ResourceTagCollection initialize":{"type":"method","name":"initialize","children":[],"call":["TagCollection  new filter filter ","@resource tagging_resource_type ","TagCollection  new filter ","@resource send ","TagCollection  new "," config "]}," AWS EC2 Resource mutable_attribute":{"type":"method","name":"mutable_attribute","children":[],"call":["AttributeBuilder  eval ","(pair\n  (sym :value_wrapper)\n  (true)) merge "," add_to_attribute_map "," attributes_from_describe_attribute_response "," populate_from "," describe_attribute_call_name "," set_mutable_attribute "," define_method ","opts [] == ","opts [] "," describe_attribute_call "," retrieve_attribute ","request_name [] downcase + ","request_name [] ","request_name [] downcase ","Inflection  class_name ","name to_s ","request_name [] downcase +  [] downcase + ","Inflection  class_name  [] downcase + ","request_name [] downcase +  [] ","Inflection  class_name  [] ","request_name [] downcase +  [] downcase ","Inflection  class_name  [] downcase "]}," AWS EC2 Resource define_describe_call_getter":{"type":"method","name":"define_describe_call_getter","children":[],"call":[" define_method "," instance_eval ","@memoized_attributes [] ","@memoized_attributes has_key? "," lambda ","opts [] "]}," AWS EC2 Resource add_to_attribute_map":{"type":"method","name":"add_to_attribute_map","children":[],"call":["MetaUtils  extend_method ","all_attributes []= "," send "," respond_to? "," send  []= "]}," AWS EC2 Resource describe_call_attribute":{"type":"method","name":"describe_call_attribute","children":[],"call":["AttributeBuilder  eval ","MetaUtils  extend_method ","all_memoized << "," memoized_attributes ","opts [] "," add_to_attribute_map "," attributes_from_response_object "," find_in_response "," populate_from "," describe_call_name "," raise ","Inflection  ruby_name tr ","Inflection  ruby_name "," class name "," class "," describe_call "," retrieve_attribute "," define_describe_call_getter "," attribute "," memoized_attributes  << "," attributes_from_response_ find_in_response ect "," describe_call_Inflection  ruby_name tr  ","Inflection  ruby_Inflection  ruby_name tr  tr ","Inflection  ruby_Inflection  ruby_name tr  "," class Inflection  ruby_name tr  "]}," AWS EC2 Resource memoized_attributes":{"type":"method","name":"memoized_attributes","children":[],"call":[]}," AWS EC2 Resource AttributeBuilder eval":{"type":"method","name":"eval","children":[],"call":[]}," AWS EC2 Resource AttributeBuilder translate_output":{"type":"method","name":"translate_output","children":[],"call":["@klass send "," output_translator "]}," AWS EC2 Resource AttributeBuilder translate_input":{"type":"method","name":"translate_input","children":[],"call":["@klass send "]}," AWS EC2 Resource AttributeBuilder initialize":{"type":"method","name":"initialize","children":[],"call":[" translate_output "," translate_input "]}," AWS EC2 Resource InflectionMethods output_translator":{"type":"method","name":"output_translator","children":[],"call":[]}," AWS EC2 Resource InflectionMethods plural_name":{"type":"method","name":"plural_name","children":[],"call":["name + ","name [] == ","name [] "," inflected_name "," inflected_name  + "," inflected_name  [] == "," inflected_name  [] "," inflected_ inflected_name  "]}," AWS EC2 Resource InflectionMethods class_name":{"type":"method","name":"class_name","children":[],"call":[" class name "," class "," name "," kind_of? "]}," AWS EC2 Resource InflectionMethods inflected_name":{"type":"method","name":"inflected_name","children":[],"call":["Inflection  ruby_name "," class_name ","Core Inflection  ruby_name "]}," AWS EC2 Resource InflectionMethods describe_attribute_call_name":{"type":"method","name":"describe_attribute_call_name","children":[],"call":[" inflected_name "]}," AWS EC2 Resource InflectionMethods describe_call_name":{"type":"method","name":"describe_call_name","children":[],"call":[" plural_name "]}," AWS EC2 Resource attributes_from_describe_attribute_response":{"type":"method","name":"attributes_from_describe_attribute_response","children":[],"call":["Hash  [] "," send ","resp send "," class mutable_attributes [] ","response_att to_sym "," class mutable_attributes "," class ","Inflection  ruby_name ","resp request_options [] == "," __resource_id__ ","resp request_options [] "," response_id_method to_sym "," response_id_method ","resp request_options ","Inflection  ruby_name  to_sym "]}," AWS EC2 Resource attributes_from_response_object":{"type":"method","name":"attributes_from_response_object","children":[],"call":["atts []= "," send ","obj send ","obj respond_to? "," class describe_call_attributes each "," class describe_call_attributes "," class "]}," AWS EC2 Resource set_mutable_attribute":{"type":"method","name":"set_mutable_attribute","children":[],"call":[" client send "," client "," inflected_name ","opts []= "," __resource_id__ ","(begin\n  (send nil :inflected_name)) to_sym "," send "," respond_to? ","  client send ond_to? "]}," AWS EC2 Resource get_mutable_attribute":{"type":"method","name":"get_mutable_attribute","children":[],"call":["att value ","att respond_to? ","resp send "," client send ","Hash  [] "," __resource_id__ "," inflected_name "," client ","att_name [] downcase + ","att_name [] ","att_name [] downcase ","Inflection  class_name ","name to_s ","resp send  value ","resp send  respond_to? ","att  client send ond_to? "," client send  send ","resp send _name [] downcase + ","att_name [] downcase +  [] downcase + ","Inflection  class_name  [] downcase + ","resp send _name [] ","att_name [] downcase +  [] ","Inflection  class_name  [] ","resp send _name [] downcase ","att_name [] downcase +  [] downcase ","Inflection  class_name  [] downcase "]}," AWS EC2 Resource describe_attribute_call":{"type":"method","name":"describe_attribute_call","children":[],"call":[" client send ","Hash  [] "," __resource_id__ "," response_id_method to_sym "," response_id_method "," client "," describe_attribute_call_name ","attr_opt_name [] downcase + ","attr_opt_name [] ","attr_opt_name [] downcase ","Inflection  class_name ","attribute get_as to_s ","attribute get_as ","Core Inflection  class_name ","attribute from to_s ","attribute from "," describe_attribute_call_ describe_attribute_call_name  ","attr_opt_ describe_attribute_call_name  [] downcase + ","attr_opt_name [] downcase +  [] downcase + ","Inflection  class_name  [] downcase + ","Core Inflection  class_name  [] downcase + ","attr_opt_ describe_attribute_call_name  [] ","attr_opt_name [] downcase +  [] ","Inflection  class_name  [] ","Core Inflection  class_name  [] ","attr_opt_ describe_attribute_call_name  [] downcase ","attr_opt_name [] downcase +  [] downcase ","Inflection  class_name  [] downcase ","Core Inflection  class_name  [] downcase ","Inflection  class_ describe_attribute_call_name  ","Core Inflection  class_ describe_attribute_call_name  "]}," AWS EC2 Resource describe_call":{"type":"method","name":"describe_call","children":[],"call":[" raise "," client send ","Hash  [] "," __resource_id__ ","(send\n  (send\n    (send nil :response_id_method) :to_s) :+\n  (str \"s\")) to_sym "," response_id_method to_s + "," response_id_method to_s "," response_id_method "," client "," client respond_to? "," class describe_call_name "," class "," describe_call_name "," class describe_call_ class describe_call_name  "," describe_call_ class describe_call_name  "]}," AWS EC2 Resource resource_id_method":{"type":"method","name":"resource_id_method","children":[],"call":[" raise "," respond_to? "," method owner != "," method owner "," method "]}," AWS EC2 Resource response_id_method":{"type":"method","name":"response_id_method","children":[],"call":[" inflected_name + + "," resource_id_method to_s "," resource_id_method "," inflected_name + "," inflected_name "]}," AWS EC2 Resource find_in_response":{"type":"method","name":"find_in_response","children":[],"call":["obj send == "," __resource_id__ ","obj send "," response_id_method ","resp send find ","resp send "," plural_name + "," plural_name "," send ","provider finder_method ","provider request_types include? ","response request_type ","provider request_types "," class attribute_providers each "," class attribute_providers "," class "]}," AWS EC2 Resource __resource_id__":{"type":"method","name":"__resource_id__","children":[],"call":[" send "," resource_id_method "]}," AWS EC2 Resource ==":{"type":"method","name":"==","children":[],"call":[" __resource_id__ == ","other __resource_id__ "," __resource_id__ ","other kind_of? "," class "]}," AWS EC2 Resource attributes_from_response":{"type":"method","name":"attributes_from_response","children":[],"call":["@memoized_attributes []= ","atts [] "," class memoized_attributes each "," class memoized_attributes "," class "]}," AWS EC2 Resource local_cache_key":{"type":"method","name":"local_cache_key","children":[],"call":[" __resource_id__ "," class "]}," AWS EC2 Resource inspect":{"type":"method","name":"inspect","children":[],"call":[" __resource_id__ "," class "]}," AWS EC2 Resource initialize":{"type":"method","name":"initialize","children":[],"call":["@memoized_attributes []= ","options [] ","options key? "," class memoized_attributes each "," class memoized_attributes "," class ","options kind_of? ","args last ","args last  [] ","args last  key? ","args last  kind_of? "]}," AWS EC2 ReservedInstancesOfferingCollection each":{"type":"method","name":"each","children":[],"call":["ReservedInstancesOffering  new "," config ","item reserved_instances_offering_id ","response reserved_instances_offerings_set each ","response reserved_instances_offerings_set "," filtered_request ","ReservedInstancesOffering  new_from "," filtered_request  reserved_instances_offerings_set each "," filtered_request  reserved_instances_offerings_set "]}," AWS EC2 ReservedInstancesOfferingCollection member_class":{"type":"method","name":"member_class","children":[],"call":[]}," AWS EC2 ReservedInstancesOffering purchase":{"type":"method","name":"purchase","children":[],"call":["ReservedInstances  new "," config ","response reserved_instances_id "," client purchase_reserved_instances_offering "," client ","options []= "," id ","options [] "," client purchase_reserved_instances_offering  reserved_instances_id "]}," AWS EC2 ReservedInstancesOffering initialize":{"type":"method","name":"initialize","children":[],"call":[]}," AWS EC2 ReservedInstancesCollection each":{"type":"method","name":"each","children":[],"call":["ReservedInstances  new "," config ","item reserved_instances_id ","response reserved_instances_set each ","response reserved_instances_set "," filtered_request ","ReservedInstances  new_from ","item ReservedInstances  new s_id ","item ReservedInstances  new_from s_id ","response ReservedInstances  new s_set each ","response ReservedInstances  new_from s_set each "," filtered_request  reserved_instances_set each ","response ReservedInstances  new s_set ","response ReservedInstances  new_from s_set "," filtered_request  reserved_instances_set "]}," AWS EC2 ReservedInstancesCollection member_class":{"type":"method","name":"member_class","children":[],"call":[]}," AWS EC2 ReservedInstances initialize":{"type":"method","name":"initialize","children":[],"call":[]}," AWS EC2 RegionCollection member_class":{"type":"method","name":"member_class","children":[],"call":[]}," AWS EC2 RegionCollection []":{"type":"method","name":"[]","children":[],"call":[]}," AWS EC2 RegionCollection each":{"type":"method","name":"each","children":[],"call":["Region  new "," config ","r region_endpoint ","r region_name ","response region_info each ","response region_info "," filtered_request ","r Region  new _endpoint ","r Region  new _name ","response Region  new _info each "," filtered_request  region_info each ","response Region  new _info "," filtered_request  region_info "]}," AWS EC2 Region find_in_response":{"type":"method","name":"find_in_response","children":[],"call":["r region_name == "," name ","r region_name ","resp region_info find ","resp region_info "]}," AWS EC2 Region exists?":{"type":"method","name":"exists?","children":[],"call":[" client describe_regions region_info empty? ! "," client describe_regions region_info empty? "," client describe_regions region_info "," client describe_regions "," name "," client "]}," AWS EC2 Region endpoint":{"type":"method","name":"endpoint","children":[],"call":[]}," AWS EC2 Region initialize":{"type":"method","name":"initialize","children":[],"call":["@client config ","Client  new ","options merge "," endpoint ","options [] ","Client  new  config "]}," AWS EC2 PermissionCollection modify_params":{"type":"method","name":"modify_params","children":[],"call":["Hash  [] "," inflected_permissions_attribute ","@resource send ","(begin\n  (send nil :resource_name)) to_sym "," resource_name "]}," AWS EC2 PermissionCollection modify":{"type":"method","name":"modify","children":[],"call":[" client send "," modify_call "," client "," modify_params ","Hash  [] ","users map ","users empty? "]}," AWS EC2 PermissionCollection resource_name":{"type":"method","name":"resource_name","children":[],"call":["@resource send "]}," AWS EC2 PermissionCollection permissions_attribute":{"type":"method","name":"permissions_attribute","children":[],"call":["@resource __permissions_attribute__ "]}," AWS EC2 PermissionCollection inflected_permissions_attribute":{"type":"method","name":"inflected_permissions_attribute","children":[],"call":["Inflection  ruby_name to_sym ","Inflection  ruby_name "," permissions_attribute ","Core Inflection  ruby_name to_sym ","Core Inflection  ruby_name "]}," AWS EC2 PermissionCollection describe_params":{"type":"method","name":"describe_params","children":[],"call":["Hash  [] "," permissions_attribute ","@resource send ","(begin\n  (send nil :resource_name)) to_sym "," resource_name "]}," AWS EC2 PermissionCollection reset_call":{"type":"method","name":"reset_call","children":[],"call":[" resource_name "]}," AWS EC2 PermissionCollection modify_call":{"type":"method","name":"modify_call","children":[],"call":[" resource_name "]}," AWS EC2 PermissionCollection describe_call":{"type":"method","name":"describe_call","children":[],"call":[" resource_name "]}," AWS EC2 PermissionCollection reset":{"type":"method","name":"reset","children":[],"call":[" client send "," reset_params "," reset_call "," client "]}," AWS EC2 PermissionCollection remove":{"type":"method","name":"remove","children":[],"call":[" modify "]}," AWS EC2 PermissionCollection add":{"type":"method","name":"add","children":[],"call":[" modify "]}," AWS EC2 PermissionCollection public=":{"type":"method","name":"public=","children":[],"call":[" client send "," modify_params "," modify_call "," client "]}," AWS EC2 PermissionCollection private?":{"type":"method","name":"private?","children":[],"call":[" public? ! "," public? "]}," AWS EC2 PermissionCollection public?":{"type":"method","name":"public?","children":[],"call":["permission group == ","permission group ","permission respond_to? ","resp send any? ","resp send "," inflected_permissions_attribute "," client send "," describe_params "," describe_call "," client ","permission [] == ","permission [] ","permission  client send ond_to? "," client send  send any? "," client send  send "]}," AWS EC2 PermissionCollection empty?":{"type":"method","name":"empty?","children":[],"call":[" size == "," size "]}," AWS EC2 PermissionCollection size":{"type":"method","name":"size","children":[],"call":["sum + "," inject "]}," AWS EC2 PermissionCollection each":{"type":"method","name":"each","children":[],"call":["permission user_id ","permission respond_to? ","resp send each ","resp send "," inflected_permissions_attribute "," client send "," describe_params "," describe_call "," client ","permission [] ","permission permission user_id  ","permission permission []  ","permission  client send ond_to? "," client send  send each "," client send  send "]}," AWS EC2 PermissionCollection initialize":{"type":"method","name":"initialize","children":[],"call":[]}," AWS EC2 KeyPairCollection create_or_import":{"type":"method","name":"create_or_import","children":[],"call":["KeyPair  new ","response key_name ","options []= ","response key_material ","response respond_to? ","response key_fingerprint "," client send "," client ","h []= ","v last to_s ","v last ","v first ","options inject ","options merge "," config ","response data [] ","response data ","response [] "," client send  key_name "," client send  key_material "," client send  respond_to? "," client send  key_fingerprint "," client send  data [] "," client send  data "," client send  [] "]}," AWS EC2 KeyPairCollection member_class":{"type":"method","name":"member_class","children":[],"call":[]}," AWS EC2 KeyPairCollection each":{"type":"method","name":"each","children":[],"call":["KeyPair  new "," config ","kp key_fingerprint ","kp key_name ","response key_set each ","response key_set "," filtered_request "," filtered_request  key_set each "," filtered_request  key_set "]}," AWS EC2 KeyPairCollection []":{"type":"method","name":"[]","children":[],"call":[]}," AWS EC2 KeyPairCollection import":{"type":"method","name":"import","children":[],"call":[" create_or_import ","Base64  encode64 ","public_key to_s "]}," AWS EC2 KeyPairCollection create":{"type":"method","name":"create","children":[],"call":[" create_or_import "]}," AWS EC2 KeyPair find_in_response":{"type":"method","name":"find_in_response","children":[],"call":["resp key_index [] "," name ","resp key_index "]}," AWS EC2 KeyPair response_id_method":{"type":"method","name":"response_id_method","children":[],"call":[]}," AWS EC2 KeyPair delete":{"type":"method","name":"delete","children":[],"call":[" client delete_key_pair "," name "," client "]}," AWS EC2 KeyPair private_key":{"type":"method","name":"private_key","children":[],"call":[" raise "]}," AWS EC2 KeyPair fingerprint":{"type":"method","name":"fingerprint","children":[],"call":[]}," AWS EC2 KeyPair exists?":{"type":"method","name":"exists?","children":[],"call":[" client describe_key_pairs key_set empty? ! "," client describe_key_pairs key_set empty? "," client describe_key_pairs key_set "," client describe_key_pairs "," name "," client ","resp key_set empty? ! ","resp key_set empty? ","resp key_set "," client describe_key_pairs  key_set empty? ! "," client describe_key_pairs  key_set empty? "," client describe_key_pairs  key_set "]}," AWS EC2 KeyPair initialize":{"type":"method","name":"initialize","children":[],"call":["options [] ","name to_s "]}," AWS EC2 InstanceCollection group_opts":{"type":"method","name":"group_opts","children":[],"call":[" raise ","ArgumentError  new ","members of security_groups must be  + ","g name ","(lvar :groups) flatten map ","(lvar :groups) flatten "]}," AWS EC2 InstanceCollection count_opts":{"type":"method","name":"count_opts","children":[],"call":["count end ","count end - ","count exclude_end? ","count begin ","opts [] ","opts []  end ","opts []  end - ","opts []  exclude_end? ","opts []  begin "]}," AWS EC2 InstanceCollection member_class":{"type":"method","name":"member_class","children":[],"call":[]}," AWS EC2 InstanceCollection []":{"type":"method","name":"[]","children":[],"call":[]}," AWS EC2 InstanceCollection each":{"type":"method","name":"each","children":[],"call":["Instance  new "," config ","i instance_id ","r instances_set each ","r instances_set ","response reservation_set each ","response reservation_set "," filtered_request ","reservation instances_set each ","reservation instances_set ","Instance  new_from ","i Instance  new_from _id ","r Instance  new_from s_set each ","r Instance  new_from s_set "," filtered_request  reservation_set each "," filtered_request  reservation_set ","reservation Instance  new_from s_set each ","reservation Instance  new_from s_set "]}," AWS EC2 InstanceCollection create":{"type":"method","name":"create","children":[],"call":[" [] ","i instance_id ","resp instances_set map ","resp instances_set ","resp instances_set first instance_id ","resp instances_set first ","opts [] == ","opts [] "," client run_instances "," client ","opts []= ","UUIDTools UUID  timestamp_create to_s ","UUIDTools UUID  timestamp_create "," group_opts ","opts delete ","opts [] to_s "," translate_block_device_mappings ","Base64  encode64 strip ","Base64  encode64 "," count_opts merge "," count_opts ","key_pair name ","ramdisk id ","kernel id ","image id ","options [] == ","options [] ","options []= ","options delete ","options [] to_s "," count_options merge "," count_options "," security_group_opts ","placement empty? ","placement []= ","i [] ","resp [] map ","resp [] "," subnet_id_option ","options [] is_a? ","network_interface empty? ","network_interface []= "," Array ","SecureRandom  uuid "," client run_instances  instances_set map "," client run_instances  instances_set "," client run_instances  instances_set first instance_id "," client run_instances  instances_set first "," count_opts merge  [] == "," count_opts merge  [] "," count_opts merge  []= "," group_ count_opts merge  "," count_opts merge  delete "," count_opts merge  [] to_s "," count_ count_opts merge  merge "," count_ count_opts merge  ","opts delete  name ","options delete  name ","opts delete  id ","options delete  id "," count_options merge  [] == "," count_options merge  [] "," count_options merge  []= "," count_options merge  delete "," count_options merge  [] to_s "," count_ count_options merge  merge "," count_ count_options merge  "," security_group_ count_opts merge  "," client run_instances  [] map "," client run_instances  [] ","  subnet_id_option _option "," count_options merge  [] is_a? "]}," AWS EC2 Instance attributes_from_response_object":{"type":"method","name":"attributes_from_response_object","children":[],"call":["atts []= ","obj instance_state name tr to_sym ","obj instance_state name tr ","obj instance_state name ","obj instance_state ","obj respond_to? ","obj [] name tr to_sym ","obj [] name tr ","obj [] name ","obj [] "]}," AWS EC2 Instance translate_block_device_mappings":{"type":"method","name":"translate_block_device_mappings","children":[],"call":["m []= ","Attachment  new "," config ","mapping device_name ","Volume  new ","mapping ebs volume_id ","mapping ebs ","mappings inject "]}," AWS EC2 Instance find_in_response":{"type":"method","name":"find_in_response","children":[],"call":["resp instance_index [] "," id ","resp instance_index "]}," AWS EC2 Instance elastic_ip":{"type":"method","name":"elastic_ip","children":[],"call":["ElasticIpCollection  new filter first ","ElasticIpCollection  new filter "," id ","ElasticIpCollection  new "," config ","ips filter first ","ips filter ","ElasticIpCollection  new  filter first ","ElasticIpCollection  new  filter "]}," AWS EC2 Instance has_elastic_ip?":{"type":"method","name":"has_elastic_ip?","children":[],"call":[" elastic_ip nil? ! "," elastic_ip nil? "," elastic_ip "]}," AWS EC2 Instance disassociate_elastic_ip":{"type":"method","name":"disassociate_elastic_ip","children":[],"call":[" raise "," id ","ip disassociate "," elastic_ip "," elastic_ip  disassociate "," elastic_ elastic_ip  "]}," AWS EC2 Instance associate_elastic_ip":{"type":"method","name":"associate_elastic_ip","children":[],"call":[" client associate_address "," id ","elastic_ip to_s "," client ","client_opts []= ","elastic_ip allocation_id ","elastic_ip is_a? "," vpc? "]}," AWS EC2 Instance status":{"type":"method","name":"status","children":[],"call":[" client describe_instances "," id "," client "," retrieve_attribute "]}," AWS EC2 Instance block_device_mappings":{"type":"method","name":"block_device_mappings","children":[],"call":["m []= ","Attachment  new "," config ","Volume  new ","mapping ebs volume_id ","mapping ebs ","mapping device_name ","(or\n  (send nil :block_device_mapping)\n  (array)) inject "," block_device_mapping ","mapping ebs Volume  new _id ","mapping mapping device_name _name ","(or\n  (send nil :block_mapping device_name _mapping)\n  (array)) inject "," block_mapping device_name _mapping "]}," AWS EC2 Instance reset_ramdisk_id":{"type":"method","name":"reset_ramdisk_id","children":[],"call":[" client reset_instance_attribute return "," client reset_instance_attribute "," id "," client "]}," AWS EC2 Instance reset_kernel_id":{"type":"method","name":"reset_kernel_id","children":[],"call":[" client reset_instance_attribute return "," client reset_instance_attribute "," id "," client "]}," AWS EC2 Instance reservation_attribute":{"type":"method","name":"reservation_attribute","children":[],"call":[]}," AWS EC2 Instance create_image":{"type":"method","name":"create_image","children":[],"call":["ImageCollection  new create ","options merge "," id ","ImageCollection  new "," config ","images create ","ImageCollection  new  create "]}," AWS EC2 Instance key_pair":{"type":"method","name":"key_pair","children":[],"call":["KeyPair  new "," config "," key_name "]}," AWS EC2 Instance image":{"type":"method","name":"image","children":[],"call":["Image  new "," config "," image_id "]}," AWS EC2 Instance availability_zone":{"type":"method","name":"availability_zone","children":[],"call":["p availability_zone "," placement "," placement  availability_zone ","  placement lacement "]}," AWS EC2 Instance spot_instance?":{"type":"method","name":"spot_instance?","children":[],"call":[" instance_lifecycle == "," instance_lifecycle "]}," AWS EC2 Instance security_groups":{"type":"method","name":"security_groups","children":[],"call":[" group_set ","SecurityGroup  new "," config ","g group_name ","g group_id ","(or\n  (send nil :group_set)\n  (array)) collect "]}," AWS EC2 Instance monitoring_enabled=":{"type":"method","name":"monitoring_enabled=","children":[],"call":[" client unmonitor_instances "," id "," client "," client monitor_instances "," disable_monitoring "," enable_monitoring "]}," AWS EC2 Instance monitoring_enabled?":{"type":"method","name":"monitoring_enabled?","children":[],"call":[" monitoring == "," monitoring "]}," AWS EC2 Instance stop":{"type":"method","name":"stop","children":[],"call":[" instance_action "]}," AWS EC2 Instance start":{"type":"method","name":"start","children":[],"call":[" instance_action "]}," AWS EC2 Instance reboot":{"type":"method","name":"reboot","children":[],"call":[" instance_action "]}," AWS EC2 Instance terminate":{"type":"method","name":"terminate","children":[],"call":[" instance_action "]}," AWS EC2 Instance instance_action":{"type":"method","name":"instance_action","children":[],"call":[" client send "," id "," client "]}," AWS EC2 Instance exists?":{"type":"method","name":"exists?","children":[],"call":[" client describe_instances instance_index key? "," id "," client describe_instances instance_index "," client describe_instances "," client "]}," AWS EC2 Instance initialize":{"type":"method","name":"initialize","children":[],"call":[]}," AWS EC2 ImageCollection preserved_options":{"type":"method","name":"preserved_options","children":[],"call":[" merge "]}," AWS EC2 ImageCollection member_class":{"type":"method","name":"member_class","children":[],"call":[]}," AWS EC2 ImageCollection create":{"type":"method","name":"create","children":[],"call":[" [] ","resp image_id "," raise ","expected instance_id, image_location,  + "," client register_image "," client ","options []= "," translate_block_device_mappings ","options [] ","ramdisk id ","options delete ","kernel id "," client create_image ","Image  new "," config ","options delete  id "]}," AWS EC2 ImageCollection each":{"type":"method","name":"each","children":[],"call":["Image  new "," config ","i image_id ","response images_set each ","response images_set "," filtered_request ","opts []= ","id to_s ","@executable_users map ","@executable_users empty? ","@owners map ","@owners empty? ","Image  new_from ","i Image  new _id ","i Image  new_from _id ","response Image  new s_set each ","response Image  new_from s_set each "," filtered_request  images_set each ","response Image  new s_set ","response Image  new_from s_set "," filtered_request  images_set "]}," AWS EC2 ImageCollection executable_by":{"type":"method","name":"executable_by","children":[],"call":[" collection_with ","@executable_users + "]}," AWS EC2 ImageCollection with_owner":{"type":"method","name":"with_owner","children":[],"call":[" collection_with ","@owners + "]}," AWS EC2 ImageCollection []":{"type":"method","name":"[]","children":[],"call":[]}," AWS EC2 ImageCollection initialize":{"type":"method","name":"initialize","children":[],"call":["options [] "]}," AWS EC2 Image find_in_response":{"type":"method","name":"find_in_response","children":[],"call":["resp image_index [] "," id ","resp image_index "]}," AWS EC2 Image __permissions_attribute__":{"type":"method","name":"__permissions_attribute__","children":[],"call":[]}," AWS EC2 Image ramdisk":{"type":"method","name":"ramdisk","children":[],"call":["Image  new "," config "," ramdisk_id "," ramdisk_ ramdisk_id  "]}," AWS EC2 Image kernel":{"type":"method","name":"kernel","children":[],"call":["Image  new "," config "," kernel_id "," kernel_ kernel_id  "]}," AWS EC2 Image exists?":{"type":"method","name":"exists?","children":[],"call":["resp images_set empty? ! ","resp images_set empty? ","resp images_set "," client describe_images "," id "," client "," client describe_images  images_set empty? ! "," client describe_images  images_set empty? "," client describe_images  images_set "]}," AWS EC2 Image run_instances":{"type":"method","name":"run_instances","children":[],"call":["InstanceCollection  new create ","opts merge ","InstanceCollection  new "," config "," run_instance ","options merge "]}," AWS EC2 Image run_instance":{"type":"method","name":"run_instance","children":[],"call":["InstanceCollection  new create ","opts merge ","InstanceCollection  new "," config ","instances create ","options merge ","InstanceCollection  new  create "]}," AWS EC2 Image deregister":{"type":"method","name":"deregister","children":[],"call":[" client deregister_image "," id "," client "]}," AWS EC2 Image initialize":{"type":"method","name":"initialize","children":[],"call":[]}," AWS EC2 HasPermissions permissions":{"type":"method","name":"permissions","children":[],"call":["PermissionCollection  new "," config "]}," AWS EC2 HasPermissions public=":{"type":"method","name":"public=","children":[],"call":[" permissions public= "," permissions "]}," AWS EC2 HasPermissions private?":{"type":"method","name":"private?","children":[],"call":[" permissions private? "," permissions "]}," AWS EC2 HasPermissions public?":{"type":"method","name":"public?","children":[],"call":[" permissions public? "," permissions "]}," AWS EC2 FilteredCollection collection_with":{"type":"method","name":"collection_with","children":[],"call":[" class new "," preserved_options merge "," preserved_options "," class "]}," AWS EC2 FilteredCollection preserved_options":{"type":"method","name":"preserved_options","children":[],"call":[" config "]}," AWS EC2 FilteredCollection filtered_request":{"type":"method","name":"filtered_request","children":[],"call":[" client send "," client ","options []= ","@filters empty? "]}," AWS EC2 FilteredCollection filter":{"type":"method","name":"filter","children":[],"call":[" collection_with ","filters << ","values flatten ","@filters dup ","@filters dup  << ","@@filters dup  dup "]}," AWS EC2 FilteredCollection initialize":{"type":"method","name":"initialize","children":[],"call":["options [] "]}," AWS EC2 ElasticIpCollection member_class":{"type":"method","name":"member_class","children":[],"call":[]}," AWS EC2 ElasticIpCollection each":{"type":"method","name":"each","children":[],"call":["ElasticIp  new "," config ","address public_ip ","response addresses_set each ","response addresses_set "," filtered_request ","options []= ","address instance_id ","ElasticIp  new_from "," filtered_request  addresses_set each "," filtered_request  addresses_set "]}," AWS EC2 ElasticIpCollection []":{"type":"method","name":"[]","children":[],"call":[]}," AWS EC2 ElasticIpCollection create":{"type":"method","name":"create","children":[],"call":["ElasticIp  new "," config ","response public_ip "," client allocate_address "," client ","client_opts []= ","options [] "," client allocate_address  public_ip "]}," AWS EC2 ElasticIp __resource_id__":{"type":"method","name":"__resource_id__","children":[],"call":[" public_ip "]}," AWS EC2 ElasticIp find_in_response":{"type":"method","name":"find_in_response","children":[],"call":["resp address_index [] "," public_ip ","resp address_index "]}," AWS EC2 ElasticIp response_id_method":{"type":"method","name":"response_id_method","children":[],"call":[]}," AWS EC2 ElasticIp resource_id_method":{"type":"method","name":"resource_id_method","children":[],"call":[]}," AWS EC2 ElasticIp to_s":{"type":"method","name":"to_s","children":[],"call":[" public_ip to_s "," public_ip "]}," AWS EC2 ElasticIp disassociate":{"type":"method","name":"disassociate","children":[],"call":[" client disassociate_address "," public_ip "," client "," resource_options "," association_id "," vpc? "]}," AWS EC2 ElasticIp delete":{"type":"method","name":"delete","children":[],"call":[" client release_address "," public_ip "," client "," resource_options "," allocation_id "," vpc? "]}," AWS EC2 ElasticIp instance":{"type":"method","name":"instance","children":[],"call":["Instance  new "," config "," instance_id "," associated? ","  instance_id  "]}," AWS EC2 ElasticIp associated?":{"type":"method","name":"associated?","children":[],"call":[" instance_id ! ! "," instance_id ! "," instance_id ","(or\n  (send nil :instance_id)\n  (send nil :association_id)) ! ! ","(or\n  (send nil :instance_id)\n  (send nil :association_id)) ! "," association_id "]}," AWS EC2 ElasticIp instance_id":{"type":"method","name":"instance_id","children":[],"call":[]}," AWS EC2 ElasticIp describe_call_name":{"type":"method","name":"describe_call_name","children":[],"call":[" class describe_call_name "," class "]}," AWS EC2 ElasticIp initialize":{"type":"method","name":"initialize","children":[],"call":["options [] "]}," AWS EC2 ConfigTransform capitalize_input_descriptors":{"type":"method","name":"capitalize_input_descriptors","children":[],"call":["d merge "," capitalize_input_descriptors ","d [] ","d key? ","d kind_of? "," capitalize_input_structure ","desc map "]}," AWS EC2 ConfigTransform capitalize_input_structure":{"type":"method","name":"capitalize_input_structure","children":[],"call":["m []= "," capitalize_input_descriptors ","name [] upcase + ","name [] ","name [] upcase ","struct inject ","name [] upcase +  [] upcase + ","name [] upcase +  [] ","name [] upcase +  [] upcase "]}," AWS EC2 ConfigTransform transform":{"type":"method","name":"transform","children":[],"call":["op_config []= "," capitalize_input_structure ","op_config [] ","api_config [] each ","api_config [] ","op_config [] first values first ","op_config [] first values ","op_config [] first ","api_config [] [] ","(str \"RunInstances\") each ","api_config [] []  []= ","api_config [] []  [] ","api_config [] []  [] first values first ","api_config [] []  [] first values ","api_config [] []  [] first "]}," AWS EC2 Collection member_class":{"type":"method","name":"member_class","children":[],"call":[" raise "]}," AWS EC2 Collection []":{"type":"method","name":"[]","children":[],"call":[" member_class new "," config ","id to_s "," member_class "]}," AWS EC2 BlockDeviceMappings translate_block_device_mappings":{"type":"method","name":"translate_block_device_mappings","children":[],"call":[" raise ","ArgumentError  new ","values of block_device_mappings must  + ","entry []= ","dest []= ","snapshot id ","dest delete ","device kind_of? ","mapping map ","mapping kind_of? ","dest delete  id "]}," AWS EC2 AvailabilityZoneCollection member_class":{"type":"method","name":"member_class","children":[],"call":[]}," AWS EC2 AvailabilityZoneCollection each":{"type":"method","name":"each","children":[],"call":["AvailabilityZone  new "," config ","Region  new ","az region_name ","az zone_name ","resp availability_zone_info each ","resp availability_zone_info "," filtered_request ","az AvailabilityZone  new _name ","resp availability_AvailabilityZone  new _info each "," filtered_request  availability_zone_info each ","resp availability_AvailabilityZone  new _info "," filtered_request  availability_zone_info "]}," AWS EC2 AvailabilityZone get_attribute":{"type":"method","name":"get_attribute","children":[],"call":["az send ","resp availability_zone_info first ","resp availability_zone_info "," client describe_availability_zones "," name "," client ","resp availability_zone_info first  send "," client describe_availability_zones  availability_zone_info first "," client describe_availability_zones  availability_zone_info "]}," AWS EC2 AvailabilityZone find_in_response":{"type":"method","name":"find_in_response","children":[],"call":["az zone_name == "," name ","az zone_name ","resp availability_zone_info find ","resp availability_zone_info "]}," AWS EC2 AvailabilityZone inflected_name":{"type":"method","name":"inflected_name","children":[],"call":[" class inflected_name "," class "]}," AWS EC2 AvailabilityZone messages":{"type":"method","name":"messages","children":[],"call":[]}," AWS EC2 AvailabilityZone state":{"type":"method","name":"state","children":[],"call":[]}," AWS EC2 AvailabilityZone region":{"type":"method","name":"region","children":[],"call":["Region  new "," config "," region_name "]}," AWS EC2 AvailabilityZone initialize":{"type":"method","name":"initialize","children":[],"call":["opts [] ","options []= ","options [] name ","options [] "]}," AWS EC2 AttachmentCollection each":{"type":"method","name":"each","children":[],"call":["Attachment  new "," config ","att device "," volume ","Instance  new ","att instance_id "," volume attachment_set each "," volume attachment_set ","item device ","item instance_id ","att Instance  new _id "," volume Attachment  new _set each "," volume Attachment  new _set ","item Instance  new _id "]}," AWS EC2 AttachmentCollection initialize":{"type":"method","name":"initialize","children":[],"call":[]}," AWS EC2 Attachment describe_attachment":{"type":"method","name":"describe_attachment","children":[],"call":["att device == "," device ","att device ","att volume_id == "," volume id "," volume ","att volume_id ","att instance_id == "," instance id "," instance ","att instance_id ","attachments find ","volume attachment_set ","resp volume_index [] ","resp volume_index "," describe_call "," find_attachment ","att resp volume_index [] _id == "," resp volume_index []  id "," resp volume_index []  ","att resp volume_index [] _id ","volume attachment_set  find ","resp volume_index []  attachment_set ","resp resp volume_index [] _index [] "," describe_call  volume_index [] ","resp resp volume_index [] _index "," describe_call  volume_index "]}," AWS EC2 Attachment describe_call":{"type":"method","name":"describe_call","children":[],"call":[" client describe_volumes "," volume id "," volume "," client "]}," AWS EC2 Attachment attributes_from_response_object":{"type":"method","name":"attributes_from_response_object","children":[],"call":["atts []= ","attachment delete_on_termination? ","attachment respond_to? ","attachment attach_time ","attachment status to_sym ","attachment status "]}," AWS EC2 Attachment ==":{"type":"method","name":"==","children":[],"call":["other device == "," device ","other device ","other instance == "," instance ","other instance ","other volume == "," volume ","other volume ","other kind_of? "]}," AWS EC2 Attachment exists?":{"type":"method","name":"exists?","children":[],"call":[" describe_attachment nil? ! "," describe_attachment nil? "," describe_attachment "]}," AWS EC2 Attachment delete_on_termination?":{"type":"method","name":"delete_on_termination?","children":[],"call":[" describe_call "," retrieve_attribute "]}," AWS EC2 Attachment attach_time":{"type":"method","name":"attach_time","children":[],"call":[" describe_call "," retrieve_attribute "]}," AWS EC2 Attachment status":{"type":"method","name":"status","children":[],"call":[" describe_call "," retrieve_attribute "]}," AWS EC2 Attachment delete":{"type":"method","name":"delete","children":[],"call":[" client detach_volume ","opts merge "," device "," instance id "," instance "," volume id "," volume "," client ","options merge "," resource_options "]}," AWS EC2 Attachment initialize":{"type":"method","name":"initialize","children":[],"call":[]}," AWS DefaultSigner sign":{"type":"method","name":"sign","children":[],"call":["Base64  encode64 strip ","Base64  encode64 ","OpenSSL HMAC  digest "," secret_access_key ","OpenSSL Digest Digest  new "]}," AWS DefaultSigner initialize":{"type":"method","name":"initialize","children":[],"call":[" raise "]}," AWS ConfiguredXmlGrammars included":{"type":"method","name":"included","children":[],"call":[]}," AWS ConfiguredXmlGrammars ClassMethods input_or_output":{"type":"method","name":"input_or_output","children":[],"call":[]}," AWS ConfiguredXmlGrammars ClassMethods base_grammar":{"type":"method","name":"base_grammar","children":[],"call":[" const_get "," const_defined? "]}," AWS ConfiguredOptionGrammars included":{"type":"method","name":"included","children":[],"call":[]}," AWS ConfiguredOptionGrammars ClassMethods input_or_output":{"type":"method","name":"input_or_output","children":[],"call":[]}," AWS ConfiguredOptionGrammars ClassMethods base_grammar":{"type":"method","name":"base_grammar","children":[],"call":[" const_get "," const_defined? "]}," AWS ConfiguredGrammars ClassMethods define_configured_grammars":{"type":"method","name":"define_configured_grammars","children":[],"call":[" const_set "," base_grammar customize "," base_grammar "," process_customizations ","data [] "," input_or_output "," api_config [] each "," api_config [] "," api_config "," process_ process_customizations  "]}," AWS ConfiguredGrammars ClassMethods process_customizations":{"type":"method","name":"process_customizations","children":[],"call":[]}," AWS ConfiguredGrammars ClassMethods input_or_output":{"type":"method","name":"input_or_output","children":[],"call":[" raise "]}," AWS ConfiguredGrammars ClassMethods operation_grammar":{"type":"method","name":"operation_grammar","children":[],"call":[" const_get "," const_defined? "]}," AWS ConfiguredGrammars ClassMethods base_grammar":{"type":"method","name":"base_grammar","children":[],"call":[" raise "]}," AWS ConfiguredClientMethods included":{"type":"method","name":"included","children":[],"call":[]}," AWS ConfiguredClientMethods ClassMethods operation_xml_grammar":{"type":"method","name":"operation_xml_grammar","children":[],"call":[" XML  const_get "," XML  const_defined? "]}," AWS ConfiguredClientMethods ClassMethods configure_client":{"type":"method","name":"configure_client","children":[],"call":["request add_param ","option_grammar request_params each ","option_grammar request_params "," configure_request "," add_client_request_method "," XML  operation_grammar ","Inflection  ruby_name to_sym ","Inflection  ruby_name "," Options  operation_grammar "," api_config [] each "," api_config [] "," api_config "," define_configured_grammars "," include "," Options  module_eval "," Options  include? "," XML  module_eval "," XML  include? "," Options  operation_grammar  request_params each "," Options  operation_grammar  request_params "]}," AWS Configuration add_parameter_type":{"type":"method","name":"add_parameter_type","children":[],"call":["klass new ","@options [] "," define_method ","@options []= ","@create_options []= ","@create_options [] == ","@create_options [] ","@overridden include? ","create_options []= "," send ","options [] each ","options [] "]}," AWS Configuration inspect":{"type":"method","name":"inspect","children":[],"call":[" class "," class name "]}," AWS Configuration s3_multipart_max_parts":{"type":"method","name":"s3_multipart_max_parts","children":[],"call":["@options [] "]}," AWS Configuration s3_multipart_min_part_size":{"type":"method","name":"s3_multipart_min_part_size","children":[],"call":["@options [] "]}," AWS Configuration s3_multipart_threshold":{"type":"method","name":"s3_multipart_threshold","children":[],"call":["@options [] "]}," AWS Configuration stub_requests?":{"type":"method","name":"stub_requests?","children":[],"call":["@options [] "]}," AWS Configuration logger":{"type":"method","name":"logger","children":[],"call":["@options [] "]}," AWS Configuration signer":{"type":"method","name":"signer","children":[],"call":["DefaultSigner  new "," secret_access_key "," access_key_id ","@options [] "," raise "," session_token "]}," AWS Configuration http_handler":{"type":"method","name":"http_handler","children":[],"call":["@options [] "]}," AWS Configuration user_agent_prefix":{"type":"method","name":"user_agent_prefix","children":[],"call":["@options [] "]}," AWS Configuration simple_db_consistent_reads?":{"type":"method","name":"simple_db_consistent_reads?","children":[],"call":["@options [] "]}," AWS Configuration sqs_endpoint":{"type":"method","name":"sqs_endpoint","children":[],"call":["@options [] "]}," AWS Configuration sns_endpoint":{"type":"method","name":"sns_endpoint","children":[],"call":["@options [] "]}," AWS Configuration simple_email_service_endpoint":{"type":"method","name":"simple_email_service_endpoint","children":[],"call":["@options [] "]}," AWS Configuration simple_db_endpoint":{"type":"method","name":"simple_db_endpoint","children":[],"call":["@options [] "]}," AWS Configuration ec2_endpoint":{"type":"method","name":"ec2_endpoint","children":[],"call":["@options [] "]}," AWS Configuration s3_endpoint":{"type":"method","name":"s3_endpoint","children":[],"call":["@options [] "]}," AWS Configuration max_retries":{"type":"method","name":"max_retries","children":[],"call":["@options [] "]}," AWS Configuration with":{"type":"method","name":"with","children":[],"call":[" class new ","@options merge merge ","@options merge "," class ","@overridden + ","k to_sym ","options keys map ","options keys ","values merge "," supplied == "," supplied "," supplied merge ","h []= ","kv last ","kv first to_sym ","kv first ","options inject ","@created dup ","@@overridden +  + "," supplied merge  merge "]}," AWS Configuration secret_access_key":{"type":"method","name":"secret_access_key","children":[],"call":["@options [] "]}," AWS Configuration access_key_id":{"type":"method","name":"access_key_id","children":[],"call":["@options [] "]}," AWS Configuration use_ssl?":{"type":"method","name":"use_ssl?","children":[],"call":["@options [] "]}," AWS Configuration initialize":{"type":"method","name":"initialize","children":[],"call":["@options []= ","k to_sym ","options each ","ENV  [] ","(pair\n  (str \"AWS_ACCESS_KEY_ID\")\n  (sym :access_key_id)) each_pair ","5 * * ","5 * ","16 * * ","16 * ","Http HTTPartyHandler  new ","Set  new ","options keys map ","options keys ","options delete ","File  expand_path ","File  dirname + ","File  dirname "," supplied []= "," supplied "," class accepted_options include? "," class accepted_options "," class ","opt_name to_sym ","options each_pair ","opt_name to_sym  to_sym "]}," AWS Configurable included":{"type":"method","name":"included","children":[],"call":[]}," AWS Configurable ClassMethods make_configurable":{"type":"method","name":"make_configurable","children":[],"call":["Configuration  add_parameter_type "]}," AWS stub!":{"type":"method","name":"stub!","children":[],"call":[" config "]}," AWS response_cache":{"type":"method","name":"response_cache","children":[],"call":["ResponseCache  new ","Thread  current [] [] ","Thread  current [] ","Thread  current "," memoizing? ","Core ResponseCache  new "]}," AWS resource_cache":{"type":"method","name":"resource_cache","children":[],"call":["ResourceCache  new ","Thread  current [] [] ","Thread  current [] ","Thread  current "," memoizing? ","Core ResourceCache  new "]}," AWS memoize":{"type":"method","name":"memoize","children":[],"call":[" stop_memoizing "," block_given? "," start_memoizing "," memoizing? "]}," AWS memoizing?":{"type":"method","name":"memoizing?","children":[],"call":["Thread  current [] nil? ! ","Thread  current [] nil? ","Thread  current [] ","Thread  current "]}," AWS stop_memoizing":{"type":"method","name":"stop_memoizing","children":[],"call":["Thread  current []= ","Thread  current "]}," AWS start_memoizing":{"type":"method","name":"start_memoizing","children":[],"call":["Thread  current [] ","Thread  current "]}," AWS config":{"type":"method","name":"config","children":[],"call":["@@config with ","options empty? ","Configuration  new ","Core Configuration  new ","@@config with  with "]}," AWS Cacheable included":{"type":"method","name":"included","children":[],"call":[]}," AWS Cacheable ClassMethods populate_from":{"type":"method","name":"populate_from","children":[],"call":["MetaUtils  extend_method ","new_request_types uniq! "," request_types + "," request_types "," define_method "," request_types +  uniq! "]}," AWS Cacheable ClassMethods request_types":{"type":"method","name":"request_types","children":[],"call":[]}," AWS Cacheable retrieve_attribute":{"type":"method","name":"retrieve_attribute","children":[],"call":[" raise ","NoData  new ","resp request_type ","attributes [] ","attributes key? ","cache resource_cache store "," cache_key ","cache resource_cache ","AWS  response_cache "," attributes_from_response ","cache select each ","cache select "," request_types ","cache resource_cache get ","cache resource_cache cached? ","response request_type ","attr name ","attr request_types "," attributes_from_response  [] "," attributes_from_response  key? ","AWS  response_cache  resource_AWS  response_cache  store "," AWS  response_cache _key ","AWS  response_cache  resource_AWS  response_cache  ","AWS  response_AWS  response_cache  ","  attributes_from_response _from_response ","AWS  response_cache  select each ","AWS  response_cache  select ","AWS  response_cache  resource_AWS  response_cache  get ","AWS  response_cache  resource_AWS  response_cache  AWS  response_cache d? "]}," AWS Cacheable request_types":{"type":"method","name":"request_types","children":[],"call":[" class request_types "," class "]}," AWS Cacheable attributes_from_response":{"type":"method","name":"attributes_from_response","children":[],"call":[" send "," respond_to? ","response request_type "]}," AWS Cacheable cache_key":{"type":"method","name":"cache_key","children":[],"call":[" config signer access_key_id + + + + "," local_cache_key "," config signer access_key_id + + + "," config signer access_key_id + + "," config send "," config "," config signer access_key_id + "," config signer access_key_id "," config signer "," class service_ruby_name + "," class service_ruby_name "," class "," config signer access_key_id + + + + + + "," config signer access_key_id + + + + + "," class name "]}," AWS Cacheable local_cache_key":{"type":"method","name":"local_cache_key","children":[],"call":[" raise "]}," AWS BaseClient ClientRequestMethodBuilder simulate_response":{"type":"method","name":"simulate_response","children":[],"call":["MetaUtils  class_extend_method "]}," AWS BaseClient ClientRequestMethodBuilder process_response":{"type":"method","name":"process_response","children":[],"call":["MetaUtils  class_extend_method "]}," AWS BaseClient ClientRequestMethodBuilder configure_request":{"type":"method","name":"configure_request","children":[],"call":["@client_class send ","m module_eval ","Module  new ","block arity == ","block arity ","MetaUtils  class_extend_method ","Module  new  Module  new odule_eval ","MetaUtils  class_extend_Module  new ethod "]}," AWS BaseClient ClientRequestMethodBuilder initialize":{"type":"method","name":"initialize","children":[],"call":[" instance_eval "," simulate_response "," process_response "," configure_request "]}," AWS BaseClient add_client_request_method":{"type":"method","name":"add_client_request_method","children":[],"call":[]}," AWS BaseClient user_agent_string":{"type":"method","name":"user_agent_string","children":[],"call":["user_agent << ","AWS  memoizing? ","user_agent strip! ","%s aws-sdk-ruby/1.0 %s/%s %s % "," config user_agent_prefix "," config ","(str \"%s aws-sdk-ruby/\") % ","%s aws-sdk-ruby/1.0 %s/%s %s %  << ","(str \"%s aws-sdk-ruby/\") %  << ","%s aws-sdk-ruby/1.0 %s/%s %s %  strip! ","(str \"%s aws-sdk-ruby/\") %  strip! "," config %s aws-sdk-ruby/1.0 %s/%s %s % _prefix "," config (str \"%s aws-sdk-ruby/\") % _prefix "]}," AWS BaseClient client_request":{"type":"method","name":"client_request","children":[],"call":["cache add ","AWS  response_cache "," send ","response on_success "," make_sync_request "," make_async_request ","options [] ","cached_response cached= ","cache cached "," class CACHEABLE_REQUESTS  include? "," class ","response request_options= ","response request_type= "," new_response ","response http_request= "," stub_for "," config stub_requests? "," config ","http_request add_authorization! "," signer ","http_request headers []= "," user_agent_string ","http_request headers ","http_request use_ssl= "," config use_ssl? ","http_request host= "," endpoint "," new_request ","opts delete ","options dup "," log_client_request "," return_or_raise ","http_request ssl_ca_file= "," config ssl_ca_file ","http_request ssl_verify_peer= "," config ssl_verify_peer? ","http_request proxy_uri= "," config proxy_uri ","client send "," build_request ","AWS  response_cache  add ","AWS  response_AWS  response_cache  ","AWS   new_response _cache ","AWS   stub_for _cache "," new_response  on_success "," stub_for  on_success ","AWS  response_cache d_response AWS  response_cache d= ","cache cached  cached= ","cached_ new_response  cached= ","cached_ stub_for  cached= ","AWS  response_cache  AWS  response_cache d "," new_response  request_options= "," stub_for  request_options= "," new_response  request_type= "," stub_for  request_type= "," new_ new_response  "," new_ stub_for  "," new_response  http_request= "," stub_for  http_request= ","response  new_request = "," new_request  add_authorization! "," new_request  headers []= "," new_request  headers "," new_request  use_ssl= "," new_request  host= ","options dup  delete "," new_request  ssl_ca_file= "," new_request  ssl_verify_peer= "," new_request  proxy_uri= "]}," AWS BaseClient service_module":{"type":"method","name":"service_module","children":[],"call":["AWS  const_get "," class to_s [] "," class to_s "," class "]}," AWS BaseClient xml_error_grammar":{"type":"method","name":"xml_error_grammar","children":[],"call":[" service_module ","service_module Errors  const_defined? "," service_module const_defined? "]}," AWS BaseClient xml_error_response?":{"type":"method","name":"xml_error_response?","children":[],"call":[" xml_error_grammar parse respond_to? "," xml_error_grammar parse ","response http_response body ","response http_response "," xml_error_grammar ","response http_response status >= ","response http_response status "]}," AWS BaseClient populate_error":{"type":"method","name":"populate_error","children":[],"call":["response error= ","Errors ClientError  new ","response http_response ","response http_request ","status >= ","Errors ServerError  new ","service_module Errors  error_class new ","service_module Errors  error_class "," service_module ","Timeout Error  new ","response timeout? "," xml_error_grammar parse code "," xml_error_grammar parse ","response http_response body "," xml_error_grammar "," xml_error_response? ","response http_response status ","response http_response status  >= "," xml_error_grammar parse  xml_error_grammar parse code  ","response http_response response http_response status  "]}," AWS BaseClient return_or_raise":{"type":"method","name":"return_or_raise","children":[],"call":[" raise ","response error ","options [] "]}," AWS BaseClient should_retry?":{"type":"method","name":"should_retry?","children":[],"call":["response error kind_of? ","response error ","response throttled? ","response timeout? "]}," AWS BaseClient scaling_factor":{"type":"method","name":"scaling_factor","children":[],"call":["0.5 + ","Kernel  rand * ","Kernel  rand ","response throttled? "]}," AWS BaseClient sleep_durations":{"type":"method","name":"sleep_durations","children":[],"call":["(send\n  (int 2) :**\n  (lvar :n)) * ","2 ** ","Array  new "," config max_retries "," config "," scaling_factor "," scaling_ scaling_factor  "]}," AWS BaseClient retry_server_errors":{"type":"method","name":"retry_server_errors","children":[],"call":["Kernel  sleep ","sleeps shift ","sleeps empty? "," should_retry? "," sleep_durations ","response rebuild_request "," sleep_durations  shift "," sleep_durations  empty? "]}," AWS BaseClient make_sync_request":{"type":"method","name":"make_sync_request","children":[],"call":["response signal_success ","response error "," populate_error ","@http_handler handle ","response http_request ","response http_response= ","AWS Http Response  new "," retry_server_errors ","response AWS Http Response  new = "]}," AWS BaseClient async_request_with_retries":{"type":"method","name":"async_request_with_retries","children":[],"call":["@http_handler handle_async ","response http_response ","response signal_success ","response signal_failure ","response error "," async_request_with_retries ","@http_handler sleep_with_callback ","retry_delays shift ","retry_delays empty? ! ","retry_delays empty? "," should_retry? "," sleep_durations "," populate_error ","response error= ","StandardError  new ","handle on_complete ","handle extend ","Object  new ","response http_response= ","AWS Http Response  new ","response http_request ","response rebuild_request ","@http_Object  new r Object  new _async ","@http_Object  new r sleep_with_callback ","Object  new  on_complete ","Object  new  extend "]}," AWS BaseClient make_async_request":{"type":"method","name":"make_async_request","children":[],"call":[" async_request_with_retries ","response http_request "]}," AWS BaseClient log_client_request_on_success":{"type":"method","name":"log_client_request_on_success","children":[],"call":[" log ","pattern % ","pattern << ","response cached ","parts << ","response error message ","response error ","response error class ","options inspect ","time real "," class service_name "," class ","response http_response status ","response http_response "," class  class service_name _name ","response http_response response http_response status  "]}," AWS BaseClient log_client_request":{"type":"method","name":"log_client_request","children":[],"call":[" log_client_request_on_success ","response on_success ","options [] ","Benchmark  measure "]}," AWS BaseClient log":{"type":"method","name":"log","children":[],"call":[" config logger send ","message + "," config logger "," config "]}," AWS BaseClient new_response":{"type":"method","name":"new_response","children":[],"call":["Response  new "]}," AWS BaseClient new_request":{"type":"method","name":"new_request","children":[],"call":["req add_param "," class ","Time  now utc strftime ","Time  now utc ","Time  now ","req headers []= ","req headers ","req http_method= "," class REQUEST_CLASS  new "," class REQUEST_CLASS  new  add_param "," class REQUEST_CLASS  new  headers []= "," class REQUEST_CLASS  new  headers "," class REQUEST_CLASS  new  http_method= "]}," AWS BaseClient new_stub_for":{"type":"method","name":"new_stub_for","children":[],"call":["response signal_success "," send ","response request_options= ","response request_type= ","Response  new ","Http Response  new ","Http Request  new ","Response  new  signal_success ","Response  new  request_options= ","Response  new  request_type= "]}," AWS BaseClient stub_for":{"type":"method","name":"stub_for","children":[],"call":[" new_stub_for ","@stubs [] "]}," AWS BaseClient with_config":{"type":"method","name":"with_config","children":[],"call":[" class new "," class "]}," AWS BaseClient with_options":{"type":"method","name":"with_options","children":[],"call":[" with_config "," config with "," config "]}," AWS BaseClient with_http_handler":{"type":"method","name":"with_http_handler","children":[],"call":[" with_options ","Http Handler  new "]}," AWS BaseClient endpoint":{"type":"method","name":"endpoint","children":[],"call":[" config send "," class service_ruby_name "," class "," config "]}," AWS BaseClient initialize":{"type":"method","name":"initialize","children":[],"call":["@config http_handler ","@config signer ","@config with ","AWS  config ","options [] ","options []= ","options delete "," class service_ruby_name "," class ","options_without_config delete ","options dup ","@config with  http_handler ","options []  http_handler ","options_without_config delete  http_handler ","@config with  signer ","options []  signer ","options_without_config delete  signer ","@config with  with ","options []  with ","options_without_config delete  with ","options dup  delete "]}," AWS AuthorizeV3 add_authorization!":{"type":"method","name":"add_authorization!","children":[],"call":[" headers []= ","parts join "," headers ","parts << ","signer sign "," string_to_sign "," access_key_id "," access_key_id= ","signer access_key_id "]}," AWS AuthorizeV3 string_to_sign":{"type":"method","name":"string_to_sign","children":[],"call":["Time  now rfc822 ","Time  now "," headers [] "," headers "]}," AWS AuthorizeV2 add_authorization!":{"type":"method","name":"add_authorization!","children":[],"call":[" add_param ","signer sign "," string_to_sign "," access_key_id "," access_key_id= ","signer access_key_id "]}," AWS AuthorizeV2 string_to_sign":{"type":"method","name":"string_to_sign","children":[],"call":["parts join ","(send\n  (send\n    (send nil :params) :sort) :collect) join ","p encoded "," params sort collect "," params sort "," params "," path "," host "," http_method "]}," AWS AsyncHandle __send_signal":{"type":"method","name":"__send_signal","children":[],"call":["blk call ","(send\n  (ivar :@_async_callbacks) :map) compact each ","(send\n  (ivar :@_async_callbacks) :map) compact ","cb [] ","@_async_callbacks map "]}," AWS AsyncHandle on_complete":{"type":"method","name":"on_complete","children":[],"call":["(or-asgn\n  (ivasgn :@_async_callbacks)\n  (array)) << ","blk call "," lambda ","@_async_status nil? ! ","@_async_status nil? "]}," AWS AsyncHandle on_failure":{"type":"method","name":"on_failure","children":[],"call":["(or-asgn\n  (ivasgn :@_async_callbacks)\n  (array)) << ","blk call ","@_async_status == "]}," AWS AsyncHandle on_success":{"type":"method","name":"on_success","children":[],"call":["(or-asgn\n  (ivasgn :@_async_callbacks)\n  (array)) << ","blk call ","@_async_status == "]}," AWS AsyncHandle signal_failure":{"type":"method","name":"signal_failure","children":[],"call":[" __send_signal "]}," AWS AsyncHandle signal_success":{"type":"method","name":"signal_success","children":[],"call":[" __send_signal "]}," AWS ApiConfigTransform rename_input_list_to_membered_list":{"type":"method","name":"rename_input_list_to_membered_list","children":[],"call":[]}," AWS ApiConfig api_config":{"type":"method","name":"api_config","children":[],"call":["YAML  load ","config_file read ","(send\n  (gvar :$:) :map) compact sort last ","(send\n  (gvar :$:) :map) compact sort ","(send\n  (gvar :$:) :map) compact ","(send\n  (send\n    (lvar :config_dir) :children) :select) sort last ","(send\n  (send\n    (lvar :config_dir) :children) :select) sort ","child basename to_s =~ "," service_name ","child basename to_s ","child basename ","config_dir children select ","config_dir children ","config_dir directory? ","Pathname  new + + ","Pathname  new + ","Pathname  new ","$: map ","(send\n  (gvar :$:) :map) compact sort last  read ","(send\n  (send\n    (lvar :Pathname  new + + ) :children) :select) sort last ","(send\n  (send\n    (lvar :Pathname  new + + ) :children) :select) sort ","Pathname  new + +  children select ","Pathname  new + +  children ","Pathname  new + +  directory? "]}," AWS Http Request ssl_ca_file":{"type":"method","name":"ssl_ca_file","children":[],"call":[]}," AWS Http Request ssl_ca_file=":{"type":"method","name":"ssl_ca_file=","children":[],"call":[]}," AWS Http Request ssl_verify_peer?":{"type":"method","name":"ssl_verify_peer?","children":[],"call":[]}," AWS Http Request ssl_verify_peer=":{"type":"method","name":"ssl_verify_peer=","children":[],"call":[]}," AWS Configuration ssl_ca_file":{"type":"method","name":"ssl_ca_file","children":[],"call":["@options [] "]}," AWS Configuration ssl_verify_peer?":{"type":"method","name":"ssl_verify_peer?","children":[],"call":["@options [] "]}," AWS S3 Client Validators path_style_bucket_name?":{"type":"method","name":"path_style_bucket_name?","children":[],"call":["bucket_name =~ "," dns_compatible_bucket_name? "]}," AWS Record Scopes _new_scope":{"type":"method","name":"_new_scope","children":[],"call":["Scope  new "]}," AWS Record Scopes scope":{"type":"method","name":"scope","children":[],"call":[" extend "," define_method ","Module  new "," lambda "," raise "," block_given? "]}," AWS Record OptimisticLocking optimistic_locking_attr":{"type":"method","name":"optimistic_locking_attr","children":[],"call":[]}," AWS Record OptimisticLocking optimistic_locking":{"type":"method","name":"optimistic_locking","children":[],"call":[" integer_attr "]}," AWS Record Base sdb_domain":{"type":"method","name":"sdb_domain","children":[],"call":["AWS SimpleDB  new domains [] "," domain_name ","AWS SimpleDB  new domains ","AWS SimpleDB  new "," class sdb_domain "," domain "," class "," sdb domains [] "," sdb domains "," sdb "]}," AWS Record Base create_domain":{"type":"method","name":"create_domain","children":[],"call":["AWS SimpleDB  new domains create "," domain_name ","AWS SimpleDB  new domains ","AWS SimpleDB  new "," sdb domains create "," sdb domains "," sdb "]}," AWS Record Base domain_name":{"type":"method","name":"domain_name","children":[],"call":["Record  domain_prefix "," to_s ","name name ","name is_a? "," name ","name nil? ","name name  name name  "," name   name  ","name name  is_a? "," name  is_a? "," name name  ","  name  ","name name  nil? "," name  nil? "]}," AWS Record Base set_domain_name":{"type":"method","name":"set_domain_name","children":[],"call":[]}," AWS Http HTTPartyHandler initialize":{"type":"method","name":"initialize","children":[],"call":[]}," AWS EC2 Image add_product_codes":{"type":"method","name":"add_product_codes","children":[],"call":[" client modify_image_attribute "," client ","opts []= ","product_codes flatten "," id ","client_opts []= "]}," AWS Configuration proxy_uri":{"type":"method","name":"proxy_uri","children":[],"call":["URI  parse ","@options [] to_s ","@options [] "]}," AWS UriEscape escape_path":{"type":"method","name":"escape_path","children":[],"call":["(send\n  (send\n    (lvar :value) :split\n    (str \"/\")) :map) join "," escape ","value split map ","value split ","escaped << ","leading + + ","leading + ","value scan "]}," AWS UriEscape escape":{"type":"method","name":"escape","children":[],"call":["CGI  escape gsub ","CGI  escape ","value to_s ","value encode ","value respond_to? ","value encode  to_s ","value encode  encode ","value encode  respond_to? "]}," AWS S3 S3Object last_modified":{"type":"method","name":"last_modified","children":[],"call":[" head last_modified "," head "," head [] "]}," AWS S3 S3Object exists?":{"type":"method","name":"exists?","children":[],"call":[" head "]}," AWS S3 Errors NoSuchKey initialize":{"type":"method","name":"initialize","children":[],"call":[]}," AWS S3 Errors NoSuchKey code":{"type":"method","name":"code","children":[],"call":[]}," AWS S3 Errors NotModified initialize":{"type":"method","name":"initialize","children":[],"call":[]}," AWS S3 Errors NotModified code":{"type":"method","name":"code","children":[],"call":[]}," AWS S3 Client populate_error":{"type":"method","name":"populate_error","children":[],"call":["response error= ","EMPTY_BODY_ERRORS  [] new ","response http_response ","response http_request ","EMPTY_BODY_ERRORS  [] ","response http_response body nil? ","response http_response body ","EMPTY_BODY_ERRORS  include? ","response http_response status ","resp error= ","error_class new ","resp http_response ","resp http_request ","resp http_response body nil? ","resp http_response body ","resp http_response status "," empty_response_body? ","EMPTY_BODY_ERRORS  []  new "]}," AWS STS get_session":{"type":"method","name":"get_session","children":[],"call":["credentials expiration ","credentials session_token ","credentials secret_access_key ","credentials access_key_id ","resp credentials "," client send "," client ","opts []= ","opts delete ","opts [] ","credentials delete ","resp [] dup ","resp [] ","resp credentials  expiration ","resp [] dup  expiration ","resp credentials  session_token ","resp [] dup  session_token ","resp credentials  secret_access_key ","resp [] dup  secret_access_key ","resp credentials  access_key_id ","resp [] dup  access_key_id ","resp resp credentials  ","resp resp [] dup  "," client send  credentials ","resp credentials  delete ","resp [] dup  delete "," client send  [] dup "," client send  [] "]}," AWS STS new_federated_session":{"type":"method","name":"new_federated_session","children":[],"call":["FederatedSession  new ","session_opts merge! ","resp packed_policy_size ","resp federated_user arn ","resp federated_user ","resp federated_user federated_user_id "," get_session ","opts []= ","opts [] to_json ","opts [] ","opts [] respond_to? ","opts [] ! ","opts [] kind_of? ","opts merge ","resp [] ","resp [] [] ","session_opts merge  merge! ","opts merge  []= ","opts merge  [] to_json ","opts merge  [] ","opts merge  [] respond_to? ","opts merge  [] ! ","opts merge  [] kind_of? ","opts merge  merge "]}," AWS STS new_session":{"type":"method","name":"new_session","children":[],"call":["Session  new "," get_session "]}," AWS STS Session initialize":{"type":"method","name":"initialize","children":[],"call":["opts [] "]}," AWS STS Policy to_h":{"type":"method","name":"to_h","children":[],"call":["h delete "]}," AWS STS FederatedSession initialize":{"type":"method","name":"initialize","children":[],"call":["opts [] "]}," AWS S3 S3Object reduced_redundancy=":{"type":"method","name":"reduced_redundancy=","children":[],"call":[" copy_from "," key "]}," AWS S3 ObjectMetadata []=":{"type":"method","name":"[]=","children":[],"call":[" object copy_from "," object key "," object ","metadata []= ","name to_s "," to_h dup "," to_h "," raise ","cannot change the metadata of an object version;  + "," to_h dup  []= ","cannot change the  to_h dup  of an object version;  + "]}," AWS Response rebuild_request":{"type":"method","name":"rebuild_request","children":[],"call":["@request_builder call "]}," AWS OptionGrammar Descriptors Pattern apply":{"type":"method","name":"apply","children":[],"call":[]}," AWS Configuration sts_endpoint":{"type":"method","name":"sts_endpoint","children":[],"call":["@options [] "]}," AWS Configuration session_token":{"type":"method","name":"session_token","children":[],"call":["@options [] "]}," AWS ClientLogging sanitize_hash":{"type":"method","name":"sanitize_hash","children":[],"call":["{ + + ","{ + ","(send\n  (lvar :hash) :map) sort join ","(send\n  (lvar :hash) :map) sort "," sanitize_value ","hash map "]}," AWS ClientLogging sanitize_array":{"type":"method","name":"sanitize_array","children":[],"call":["[ + + ","[ + ","(send\n  (lvar :ary) :map) join "," sanitize_value ","ary map ","(send\n  (lvar :array) :map) join ","array map "]}," AWS ClientLogging sanitize_file":{"type":"method","name":"sanitize_file","children":[],"call":["File  size ","file path "]}," AWS ClientLogging sanitize_string":{"type":"method","name":"sanitize_string","children":[],"call":["str inspect ","str size ","str [] ","str size > ","inspected size > ","summary size ","inspected size "," summarize_string ","str inspect  size > "," summarize_string  size ","str inspect  size "]}," AWS ClientLogging sanitize_value":{"type":"method","name":"sanitize_value","children":[],"call":["value inspect "," sanitize_string "," sanitize_file "," sanitize_array "," sanitize_hash ","{ + + ","{ + "]}," AWS ClientLogging log_client_request_on_success":{"type":"method","name":"log_client_request_on_success","children":[],"call":[" log ","pattern % ","pattern << ","response cached ","parts << ","response error message ","response error ","response error class "," sanitize_options ","time real "," class service_name "," class ","response http_response status ","response http_response "," class  class service_name _name ","response http_response response http_response status  "]}," AWS ClientLogging log":{"type":"method","name":"log","children":[],"call":[" config logger send ","message + "," config logger "," config "]}," AWS ClientLogging sanitize_options":{"type":"method","name":"sanitize_options","children":[],"call":[" sanitize_hash "]}," AWS ClientLogging log_client_request":{"type":"method","name":"log_client_request","children":[],"call":[" log_client_request_on_success ","response on_complete ","options [] ","Benchmark  measure "]}," AWS BaseClient build_request":{"type":"method","name":"build_request","children":[],"call":["http_request add_authorization! "," signer ","http_request headers []= "," user_agent_string ","http_request headers "," send ","http_request ssl_ca_file= "," config ssl_ca_file "," config ","http_request ssl_verify_peer= "," config ssl_verify_peer? ","http_request use_ssl= "," config use_ssl? ","http_request proxy_uri= "," config proxy_uri ","http_request host= "," endpoint "," new_request ","opts delete ","options dup "," new_request  add_authorization! "," new_request  headers []= "," new_request  headers "," new_request  ssl_ca_file= "," new_request  ssl_verify_peer= "," new_request  use_ssl= "," new_request  proxy_uri= "," new_request  host= ","options dup  delete "]}," AWS AuthorizeWithSessionToken add_authorization!":{"type":"method","name":"add_authorization!","children":[],"call":[" add_param ","signer session_token ","signer respond_to? ","signer session_signer session_token  "]}," AWS Resource AttributeProvider attributes_from_response_object":{"type":"method","name":"attributes_from_response_object","children":[],"call":["attributes []= ","attr translate_output_value ","v value ","options [] ","resp_obj send ","resp_obj respond_to? ","attr get_as ","@klass attributes [] ","@klass attributes ","@provides each ","@klass attributes [] ibutes []= ","attr translate_output_attr translate_output_value alue ","attr translate_output_v value alue ","attr translate_output_resp_obj send alue ","@klass attributes []  translate_output_value ","attr translate_output_value  attr translate_output_value alue ","v value  v value alue ","resp_obj send  resp_obj send alue ","@klass attributes []  get_as ","@klass @klass attributes [] ibutes [] ","@klass @klass attributes [] ibutes ","@proattr translate_output_value ides each ","@prov value ides each ","@proresp_obj send ides each "]}," AWS Resource AttributeProvider attributes_from_response":{"type":"method","name":"attributes_from_response","children":[],"call":[" attributes_from_response_object ","resource send "," finder_method "," attributes_from_resource send  "]}," AWS Resource AttributeProvider provides":{"type":"method","name":"provides","children":[],"call":["@provides []= ","attr request_types push "," request_types ","attr request_types ","@klass attributes [] ","@klass attributes ","attr_names each ","attr_names pop ","attr_names last is_a? ","attr_names last ","@klass attributes []  request_types push ","@klass attributes []  request_types ","@klass @klass attributes [] ibutes [] ","@klass @klass attributes [] ibutes ","@klass attributes [] _names each ","@klass attributes [] _names pop ","@klass attributes [] _names last is_a? ","@klass attributes [] _names last "]}," AWS Resource AttributeProvider finder_method":{"type":"method","name":"finder_method","children":[],"call":[]}," AWS Resource AttributeProvider find":{"type":"method","name":"find","children":[],"call":["@klass send "," finder_method "]}," AWS Resource AttributeProvider initialize":{"type":"method","name":"initialize","children":[],"call":["klass attribute_providers length ","klass attribute_providers "]}," AWS Resource Attribute translate_output_value":{"type":"method","name":"translate_output_value","children":[],"call":["@output_translator call ","value tr downcase to_sym ","value tr downcase ","value tr ","@options [] ","@translates_nil != ","value nil? "]}," AWS Resource Attribute translate_input_value":{"type":"method","name":"translate_input_value","children":[],"call":["@input_translator call "]}," AWS Resource Attribute translates_output":{"type":"method","name":"translates_output","children":[],"call":["options [] "]}," AWS Resource Attribute translates_input":{"type":"method","name":"translates_input","children":[],"call":[]}," AWS Resource Attribute static?":{"type":"method","name":"static?","children":[],"call":["@options [] == ","@options [] "]}," AWS Resource Attribute mutable?":{"type":"method","name":"mutable?","children":[],"call":["@options [] == ","@options [] "]}," AWS Resource Attribute set_as":{"type":"method","name":"set_as","children":[],"call":[" name ","@options [] "]}," AWS Resource Attribute get_as":{"type":"method","name":"get_as","children":[],"call":[" name ","@options [] "]}," AWS Resource Attribute initialize":{"type":"method","name":"initialize","children":[],"call":[]}," AWS Resource provider":{"type":"method","name":"provider","children":[],"call":[" attribute_providers << "," attribute_providers "," block_given? ","AttributeProvider  new "," attribute_AttributeProvider  new s << "," attribute_AttributeProvider  new s "]}," AWS Resource populates_from":{"type":"method","name":"populates_from","children":[],"call":["provider provides "," attributes keys "," attributes ","provider find "," provider "," provider  provides "," provider  find ","  provider  "]}," AWS Resource define_attribute_setter":{"type":"method","name":"define_attribute_setter","children":[],"call":[" static_attributes []= ","attribute name "," static_attributes ","attribute static? "," update_resource ","attribute translate_input_value "," define_method ","attribute name to_s sub + ","attribute name to_s sub ","attribute name to_s "]}," AWS Resource define_attribute_getter":{"type":"method","name":"define_attribute_getter","children":[],"call":[" raise "," ruby_name tr "," ruby_name "," get_resource "," retrieve_attribute "," static_attributes [] ","attribute name "," static_attributes "," static_attributes has_key? "," define_method "," ruby_ ruby_name tr  tr "," ruby_ ruby_name tr  ","attribute  ruby_name tr  "]}," AWS Resource mutable_attribute":{"type":"method","name":"mutable_attribute","children":[],"call":[" attribute ","options merge "]}," AWS Resource attribute":{"type":"method","name":"attribute","children":[],"call":[" attributes []= ","attr name "," attributes "," define_attribute_setter ","attr mutable? "," define_attribute_getter ","attr instance_eval "," block_given? ","Attribute  new "," Attribute  new ibutes []= ","Attribute  new  name "," Attribute  new ibutes "," define_Attribute  new ibute_setter ","Attribute  new  mutable? "," define_Attribute  new ibute_getter ","Attribute  new  instance_eval "]}," AWS Resource attribute_providers_for":{"type":"method","name":"attribute_providers_for","children":[],"call":["provider request_types include? ","provider request_types "," attribute_providers select "," attribute_providers "]}," AWS Resource attribute_providers":{"type":"method","name":"attribute_providers","children":[],"call":[]}," AWS Resource attributes":{"type":"method","name":"attributes","children":[],"call":[" raise ","Hash  new "]}," AWS Resource new_from":{"type":"method","name":"new_from","children":[],"call":["resource send "," new "," new  send "]}," AWS Resource cache_static_attributes":{"type":"method","name":"cache_static_attributes","children":[],"call":[" static_attributes []= "," static_attributes "," class attributes [] static? "," class attributes [] "," class attributes "," class ","attributes each_pair ","provider attributes_from_response_object "," class attribute_providers_for each "," class attribute_providers_for "," static_provider attributes_from_response_object  []= "," static_provider attributes_from_response_object  "," class provider attributes_from_response_object  [] static? "," class provider attributes_from_response_object  [] "," class provider attributes_from_response_object  ","provider attributes_from_response_object  each_pair ","provider provider attributes_from_response_object _from_response_object "]}," AWS Resource attributes_from_response":{"type":"method","name":"attributes_from_response","children":[],"call":["attributes empty? "," static_attributes []= "," static_attributes "," class attributes [] static? "," class attributes [] "," class attributes "," class ","attributes each ","attributes merge! ","provider attributes_from_response "," class attribute_providers_for each "," class attribute_providers_for ","resp request_type "]}," AWS Resource ruby_name":{"type":"method","name":"ruby_name","children":[],"call":["Inflection  ruby_name "," class name "," class "]}," AWS Resource static_attributes":{"type":"method","name":"static_attributes","children":[],"call":[]}," AWS Resource local_cache_key":{"type":"method","name":"local_cache_key","children":[],"call":["(send\n  (send nil :resource_identifiers) :collect) join ","value to_s "," resource_identifiers collect "," resource_identifiers "]}," AWS Resource resource_options":{"type":"method","name":"resource_options","children":[],"call":["Hash  [] merge ","Hash  [] "," resource_identifiers "]}," AWS Resource resource_identifiers":{"type":"method","name":"resource_identifiers","children":[],"call":[" raise "]}," AWS Resource update_resource":{"type":"method","name":"update_resource","children":[],"call":[" raise "]}," AWS Resource get_resource":{"type":"method","name":"get_resource","children":[],"call":[" raise "]}," AWS Resource ==":{"type":"method","name":"==","children":[],"call":[" resource_identifiers == ","other resource_identifiers "," resource_identifiers ","other kind_of? "," class "]}," AWS Resource inspect":{"type":"method","name":"inspect","children":[],"call":["identifiers join "," class ","identifiers << ","attr name ","a get_as == ","a get_as "," class attributes values find "," class attributes values "," class attributes "," resource_identifiers each "," resource_identifiers "]}," AWS Resource initialize":{"type":"method","name":"initialize","children":[],"call":[" static_attributes []= "," static_attributes "," class attributes [] static? "," class attributes [] "," class attributes "," class "," class attributes has_key? ","options each_pair ","args last ","args last is_a? ","args last  each_pair "]}," AWS IAM account_summary":{"type":"method","name":"account_summary","children":[],"call":["h []= ","Inflection  ruby_name to_sym ","Inflection  ruby_name "," client get_account_summary summary_map inject "," client get_account_summary summary_map "," client get_account_summary "," client ","Core Inflection  ruby_name to_sym ","Core Inflection  ruby_name ","h merge "," client get_account_summary data [] inject "," client get_account_summary data [] "," client get_account_summary data "]}," AWS IAM account_aliases":{"type":"method","name":"account_aliases","children":[],"call":["AccountAliasCollection  new "," config "]}," AWS IAM remove_account_alias":{"type":"method","name":"remove_account_alias","children":[],"call":[" account_aliases delete "," account_aliases "," account_aliases each "]}," AWS IAM account_alias":{"type":"method","name":"account_alias","children":[],"call":[" account_aliases first "," account_aliases "]}," AWS IAM account_alias=":{"type":"method","name":"account_alias=","children":[],"call":[" account_aliases create "," account_aliases "," remove_account_alias ","account_alias nil? "]}," AWS IAM server_certificates":{"type":"method","name":"server_certificates","children":[],"call":["ServerCertificateCollection  new "," config "]}," AWS IAM signing_certificates":{"type":"method","name":"signing_certificates","children":[],"call":["SigningCertificateCollection  new "," config "]}," AWS IAM access_keys":{"type":"method","name":"access_keys","children":[],"call":["AccessKeyCollection  new "," config "]}," AWS IAM groups":{"type":"method","name":"groups","children":[],"call":["GroupCollection  new "," config "]}," AWS IAM users":{"type":"method","name":"users","children":[],"call":["UserCollection  new "," config "]}," AWS IAM UserPolicyCollection initialize":{"type":"method","name":"initialize","children":[],"call":[]}," AWS IAM UserPolicy delete":{"type":"method","name":"delete","children":[],"call":[" client delete_user_policy "," name "," user name "," user "," client "]}," AWS IAM UserPolicy policy=":{"type":"method","name":"policy=","children":[],"call":[" client put_user_policy "," client ","options []= "," name "," user name "," user ","policy to_json ","policy is_a? "]}," AWS IAM UserPolicy policy":{"type":"method","name":"policy","children":[],"call":["policy user_policy= ","policy extend ","Policy  from_json ","URI  decode ","response policy_document "," client get_user_policy "," name "," user name "," user "," client ","Policy  from_json  user_Policy  from_json = ","Policy  from_json  extend ","response Policy  from_json _document "," client get_user_policy  policy_document "," client get_user_Policy  from_json  "]}," AWS IAM UserPolicy PolicyProxy change":{"type":"method","name":"change","children":[],"call":[" user_policy policy= "," user_policy "]}," AWS IAM UserPolicy initialize":{"type":"method","name":"initialize","children":[],"call":[]}," AWS IAM UserGroupCollection each_item":{"type":"method","name":"each_item","children":[],"call":["Group  new_from "," config ","g group_name ","response groups each ","response groups ","g Group  new_from _name ","response Group  new_from s each ","response Group  new_from s "]}," AWS IAM UserGroupCollection request_method":{"type":"method","name":"request_method","children":[],"call":[]}," AWS IAM UserGroupCollection each":{"type":"method","name":"each","children":[],"call":["options merge "," user name "," user "]}," AWS IAM UserGroupCollection clear":{"type":"method","name":"clear","children":[],"call":[" remove "," each "]}," AWS IAM UserGroupCollection remove":{"type":"method","name":"remove","children":[],"call":[" client remove_user_from_group "," user name "," user ","group name "," client "]}," AWS IAM UserGroupCollection add":{"type":"method","name":"add","children":[],"call":[" client add_user_to_group "," user name "," user ","group name "," client "]}," AWS IAM UserGroupCollection initialize":{"type":"method","name":"initialize","children":[],"call":[]}," AWS IAM UserCollection each_item":{"type":"method","name":"each_item","children":[],"call":["User  new_from "," config ","item user_name ","response users each ","response users ","item User  new_from _name ","response User  new_from s each ","response User  new_from s "]}," AWS IAM UserCollection enumerator":{"type":"method","name":"enumerator","children":[],"call":[]}," AWS IAM UserCollection each":{"type":"method","name":"each","children":[],"call":[]}," AWS IAM UserCollection []":{"type":"method","name":"[]","children":[],"call":["User  new "," config ","name to_s "]}," AWS IAM UserCollection create":{"type":"method","name":"create","children":[],"call":["User  new_from "," config ","resp user user_name ","resp user "," client create_user "," client ","create_opts []= ","options [] "," client create_user  user user_name "," client create_user  user "]}," AWS IAM User resource_identifiers":{"type":"method","name":"resource_identifiers","children":[],"call":[" name "]}," AWS IAM User groups":{"type":"method","name":"groups","children":[],"call":["UserGroupCollection  new "]}," AWS IAM User access_keys":{"type":"method","name":"access_keys","children":[],"call":["AccessKeyCollection  new "]}," AWS IAM User login_profile":{"type":"method","name":"login_profile","children":[],"call":["LoginProfile  new "]}," AWS IAM User mfa_devices":{"type":"method","name":"mfa_devices","children":[],"call":["MFADeviceCollection  new "]}," AWS IAM User signing_certificates":{"type":"method","name":"signing_certificates","children":[],"call":["SigningCertificateCollection  new "," config "]}," AWS IAM User policies":{"type":"method","name":"policies","children":[],"call":["UserPolicyCollection  new "]}," AWS IAM User delete!":{"type":"method","name":"delete!","children":[],"call":[" delete "," login_profile delete "," login_profile "," login_profile exists? "," signing_certificates clear "," signing_certificates "," mfa_devices clear "," mfa_devices "," policies clear "," policies "," access_keys clear "," access_keys "," groups clear "," groups "]}," AWS IAM User delete":{"type":"method","name":"delete","children":[],"call":[" client delete_user "," resource_options "," client "]}," AWS IAM User initialize":{"type":"method","name":"initialize","children":[],"call":["options []= "]}," AWS IAM SigningCertificateCollection new_options":{"type":"method","name":"new_options","children":[],"call":[" config "," user "]}," AWS IAM SigningCertificateCollection each_item":{"type":"method","name":"each_item","children":[],"call":["SigningCertificate  new_from "," new_options ","item certificate_id ","response certificates each ","response certificates ","item SigningCertificate  new_from ificate_id ","response SigningCertificate  new_from ificates each ","response SigningCertificate  new_from ificates "]}," AWS IAM SigningCertificateCollection each":{"type":"method","name":"each","children":[],"call":["each_options []= "," user name "," user ","options dup ","options dup  []= "]}," AWS IAM SigningCertificateCollection clear":{"type":"method","name":"clear","children":[],"call":["certificate delete "," each "]}," AWS IAM SigningCertificateCollection []":{"type":"method","name":"[]","children":[],"call":["SigningCertificate  new "," new_options ","certificate_id to_s "]}," AWS IAM SigningCertificateCollection upload":{"type":"method","name":"upload","children":[],"call":["SigningCertificate  new_from "," new_options ","resp certificate certificate_id ","resp certificate "," client upload_signing_certificate "," client ","options []= "," user name "," user "," client upload_signing_certificate  certificate certificate_id "," client upload_signing_certificate  certificate "]}," AWS IAM SigningCertificateCollection initialize":{"type":"method","name":"initialize","children":[],"call":["options [] "]}," AWS IAM SigningCertificate matches_response_object?":{"type":"method","name":"matches_response_object?","children":[],"call":["user_name == "," user_name ","obj certificate_id == "," id ","obj certificate_id ","obj user_name ","obj respond_to? ","obj user_name  == "," obj user_name  ","obj obj user_name  "]}," AWS IAM SigningCertificate get_resource":{"type":"method","name":"get_resource","children":[],"call":[" client list_signing_certificates "," client "," user name "," user "]}," AWS IAM SigningCertificate resource_identifiers":{"type":"method","name":"resource_identifiers","children":[],"call":["identifiers << "," user name "," user "," id "]}," AWS IAM SigningCertificate delete":{"type":"method","name":"delete","children":[],"call":[" client delete_signing_certificate "," resource_options "," client "]}," AWS IAM SigningCertificate deactivate!":{"type":"method","name":"deactivate!","children":[],"call":[" status= "]}," AWS IAM SigningCertificate activate!":{"type":"method","name":"activate!","children":[],"call":[" status= "]}," AWS IAM SigningCertificate inactive?":{"type":"method","name":"inactive?","children":[],"call":[" status == "," status "]}," AWS IAM SigningCertificate active?":{"type":"method","name":"active?","children":[],"call":[" status == "," status "]}," AWS IAM SigningCertificate user_name":{"type":"method","name":"user_name","children":[],"call":["@user name "]}," AWS IAM SigningCertificate initialize":{"type":"method","name":"initialize","children":[],"call":["options [] "]}," AWS IAM ServerCertificateCollection each_item":{"type":"method","name":"each_item","children":[],"call":["ServerCertificate  new_from "," config ","sc server_certificate_name ","response server_certificate_metadata_list each ","response server_certificate_metadata_list ","sc server_ServerCertificate  new_from _name ","response server_ServerCertificate  new_from _metadata_list each ","response server_ServerCertificate  new_from _metadata_list "]}," AWS IAM ServerCertificateCollection enumerator":{"type":"method","name":"enumerator","children":[],"call":[]}," AWS IAM ServerCertificateCollection each":{"type":"method","name":"each","children":[],"call":[]}," AWS IAM ServerCertificateCollection []":{"type":"method","name":"[]","children":[],"call":["ServerCertificate  new "," config "]}," AWS IAM ServerCertificateCollection upload":{"type":"method","name":"upload","children":[],"call":["ServerCertificate  new "," config ","resp server_certificate_metadata server_certificate_name ","resp server_certificate_metadata "," client upload_server_certificate "," client ","client_opts []= ","(str \"/\") sub sub ","(str \"/\") sub ","client_opts [] ","client_opts delete ","options dup "," client upload_server_certificate  server_certificate_metadata server_certificate_name "," client upload_server_certificate  server_certificate_metadata ","options dup  []= ","options dup  [] ","options dup  delete "]}," AWS IAM ServerCertificate response_objects":{"type":"method","name":"response_objects","children":[],"call":["meta server_certificate_name == "," name ","meta server_certificate_name ","cert server_certificate_metadata ","resp server_certificate ","cert server_certificate_metadata  server_certificate_name == ","meta server_resp server_certificate ificate_name == ","cert server_certificate_metadata  server_certificate_name ","meta server_resp server_certificate ificate_name ","cert server_certificate_cert server_certificate_metadata data ","resp server_certificate  server_resp server_certificate ificate_metadata ","resp server_resp server_certificate ificate "]}," AWS IAM ServerCertificate resource_identifiers":{"type":"method","name":"resource_identifiers","children":[],"call":[" name "]}," AWS IAM ServerCertificate delete":{"type":"method","name":"delete","children":[],"call":[" client delete_server_certificate "," resource_options "," client "]}," AWS IAM ServerCertificate initialize":{"type":"method","name":"initialize","children":[],"call":["opts []= "]}," AWS IAM Resource update_prefix":{"type":"method","name":"update_prefix","children":[],"call":[]}," AWS IAM Resource prefix_update_attributes":{"type":"method","name":"prefix_update_attributes","children":[],"call":[]}," AWS IAM Resource update_resource_client_method":{"type":"method","name":"update_resource_client_method","children":[],"call":[" ruby_name "]}," AWS IAM Resource get_resource_client_method":{"type":"method","name":"get_resource_client_method","children":[],"call":[" ruby_name "]}," AWS IAM Resource get_resource":{"type":"method","name":"get_resource","children":[],"call":[" client send "," resource_options "," get_resource_client_method "," client "]}," AWS IAM Resource update_resource":{"type":"method","name":"update_resource","children":[],"call":[" client send ","options merge "," resource_options "," client "," update_resource_client_method ","attr set_as "," class update_prefix "," class "," update_resource_ update_resource_client_method  "]}," AWS IAM Resource exists?":{"type":"method","name":"exists?","children":[],"call":[" get_resource "]}," AWS IAM PolicyCollection each_item":{"type":"method","name":"each_item","children":[],"call":["response policy_names each ","response policy_names ","response data [] each ","response data [] ","response data "]}," AWS IAM PolicyCollection resource_name":{"type":"method","name":"resource_name","children":[],"call":["1 downcase "," raise "," class name =~ "," class name "," class "]}," AWS IAM PolicyCollection client_opts":{"type":"method","name":"client_opts","children":[],"call":["Hash  [] merge ","Hash  [] "," send name "," send "," resource_name "]}," AWS IAM PolicyCollection delete_policy":{"type":"method","name":"delete_policy","children":[],"call":[" client send "," client_opts "," resource_name "," client "]}," AWS IAM PolicyCollection request_method":{"type":"method","name":"request_method","children":[],"call":[" resource_name "]}," AWS IAM PolicyCollection put_policy":{"type":"method","name":"put_policy","children":[],"call":[" client send "," client_opts "," resource_name "," client "]}," AWS IAM PolicyCollection get_policy":{"type":"method","name":"get_policy","children":[],"call":[" client send "," client_opts "," resource_name "," client "]}," AWS IAM PolicyCollection to_h":{"type":"method","name":"to_h","children":[],"call":["hash []= "," inject "]}," AWS IAM PolicyCollection each":{"type":"method","name":"each","children":[],"call":[" [] ","block arity == ","block arity "," client_opts ","opts delete ","opts dup "," client_opts dup  ","opts dup  delete ","opts dup  dup "]}," AWS IAM PolicyCollection has_key?":{"type":"method","name":"has_key?","children":[],"call":[" get_policy "]}," AWS IAM PolicyCollection clear":{"type":"method","name":"clear","children":[],"call":[" delete "," keys each "," keys "]}," AWS IAM PolicyCollection values":{"type":"method","name":"values","children":[],"call":[" enumerator "]}," AWS IAM PolicyCollection keys":{"type":"method","name":"keys","children":[],"call":[" enumerator "]}," AWS IAM PolicyCollection values_at":{"type":"method","name":"values_at","children":[],"call":[" [] ","names map "]}," AWS IAM PolicyCollection delete":{"type":"method","name":"delete","children":[],"call":[" delete_policy "]}," AWS IAM PolicyCollection []=":{"type":"method","name":"[]=","children":[],"call":[" put_policy ","document to_json ","document kind_of? ! ","document kind_of? ","document respond_to? ","document to_json  to_json ","document to_json  kind_of? ! ","document to_json  kind_of? ","document to_json  respond_to? "]}," AWS IAM PolicyCollection []":{"type":"method","name":"[]","children":[],"call":["Policy  from_json ","URI  unescape ","resp policy_document "," get_policy "," get_policy  policy_document "]}," AWS IAM Policy Statement resource_arn":{"type":"method","name":"resource_arn","children":[],"call":["resource arn "]}," AWS IAM Policy to_h":{"type":"method","name":"to_h","children":[],"call":["statement delete ","hash [] each ","hash [] ","hash delete "]}," AWS IAM MFADeviceCollection each_item":{"type":"method","name":"each_item","children":[],"call":["MFADevice  new ","item serial_number "," user ","response mfa_devices each ","response mfa_devices ","VirtualMfaDevice  new_from "," config ","item serial_number =~ ","response MFADevice  new s each ","response VirtualMfaDevice  new_from s each ","response MFADevice  new s ","response VirtualMfaDevice  new_from s "]}," AWS IAM MFADeviceCollection enumerator":{"type":"method","name":"enumerator","children":[],"call":[]}," AWS IAM MFADeviceCollection each":{"type":"method","name":"each","children":[],"call":["options merge "," user name "," user "]}," AWS IAM MFADeviceCollection clear":{"type":"method","name":"clear","children":[],"call":["device delete "," each ","device deactivate "]}," AWS IAM MFADeviceCollection []":{"type":"method","name":"[]","children":[],"call":["MFADevice  new "," user "]}," AWS IAM MFADeviceCollection disable":{"type":"method","name":"disable","children":[],"call":[" [] disable "," [] "]}," AWS IAM MFADeviceCollection enable":{"type":"method","name":"enable","children":[],"call":[" [] "," client enable_mfa_device ","authentication_code_2 to_s ","authentication_code_1 to_s "," user name "," user "," client "]}," AWS IAM MFADeviceCollection initialize":{"type":"method","name":"initialize","children":[],"call":[]}," AWS IAM MFADevice deactivate":{"type":"method","name":"deactivate","children":[],"call":[" client deactivate_mfa_device "," serial_number "," user name "," user "," client "]}," AWS IAM MFADevice initialize":{"type":"method","name":"initialize","children":[],"call":[]}," AWS IAM LoginProfile resource_identifiers":{"type":"method","name":"resource_identifiers","children":[],"call":[" user name "," user "]}," AWS IAM LoginProfile exists?":{"type":"method","name":"exists?","children":[],"call":[" client get_login_profile "," resource_options "," client "]}," AWS IAM LoginProfile delete":{"type":"method","name":"delete","children":[],"call":[" client delete_login_profile "," resource_options "," client "]}," AWS IAM LoginProfile password=":{"type":"method","name":"password=","children":[],"call":[" client create_login_profile "," client "," client update_login_profile "," resource_options "," resource_ resource_options  "]}," AWS IAM LoginProfile initialize":{"type":"method","name":"initialize","children":[],"call":[]}," AWS IAM GroupUserCollection each_item":{"type":"method","name":"each_item","children":[],"call":["User  new_from "," config ","u user_name ","response users each ","response users ","u User  new_from _name ","response User  new_from s each ","response User  new_from s "]}," AWS IAM GroupUserCollection request_method":{"type":"method","name":"request_method","children":[],"call":[]}," AWS IAM GroupUserCollection each":{"type":"method","name":"each","children":[],"call":["options merge "," group name "," group "]}," AWS IAM GroupUserCollection clear":{"type":"method","name":"clear","children":[],"call":[" remove "," each "]}," AWS IAM GroupUserCollection remove":{"type":"method","name":"remove","children":[],"call":[" client remove_user_from_group ","user name "," group name "," group "," client "]}," AWS IAM GroupUserCollection add":{"type":"method","name":"add","children":[],"call":[" client add_user_to_group ","user name "," group name "," group "," client "]}," AWS IAM GroupUserCollection initialize":{"type":"method","name":"initialize","children":[],"call":[]}," AWS IAM GroupPolicyCollection initialize":{"type":"method","name":"initialize","children":[],"call":[]}," AWS IAM GroupCollection each_item":{"type":"method","name":"each_item","children":[],"call":["Group  new_from "," config ","item group_name ","response groups each ","response groups ","item Group  new_from _name ","response Group  new_from s each ","response Group  new_from s "]}," AWS IAM GroupCollection []":{"type":"method","name":"[]","children":[],"call":["Group  new "," config "]}," AWS IAM GroupCollection enumerator":{"type":"method","name":"enumerator","children":[],"call":[]}," AWS IAM GroupCollection each":{"type":"method","name":"each","children":[],"call":[]}," AWS IAM GroupCollection create":{"type":"method","name":"create","children":[],"call":["Group  new "," config ","resp group group_name ","resp group "," client create_group "," client ","client_opts []= ","(str \"/\") sub sub ","(str \"/\") sub ","client_opts [] ","(pair\n  (sym :group_name)\n  (lvar :name)) merge "," client create_group  group group_name "," client create_group  group ","(pair\n  (sym :group_name)\n  (lvar :name)) merge  []= ","(pair\n  (sym :group_name)\n  (lvar :name)) merge  [] "]}," AWS IAM Group resource_identifiers":{"type":"method","name":"resource_identifiers","children":[],"call":[" name "]}," AWS IAM Group policies":{"type":"method","name":"policies","children":[],"call":["GroupPolicyCollection  new "]}," AWS IAM Group users":{"type":"method","name":"users","children":[],"call":["GroupUserCollection  new "]}," AWS IAM Group delete":{"type":"method","name":"delete","children":[],"call":[" client delete_group "," name "," client "]}," AWS IAM Group exists?":{"type":"method","name":"exists?","children":[],"call":[]}," AWS IAM Group initialize":{"type":"method","name":"initialize","children":[],"call":["options []= "]}," AWS IAM Collection limit_key":{"type":"method","name":"limit_key","children":[],"call":[]}," AWS IAM Collection next_token_key":{"type":"method","name":"next_token_key","children":[],"call":[]}," AWS IAM Collection request_method":{"type":"method","name":"request_method","children":[],"call":["Inflection  ruby_name sub ","Inflection  ruby_name "," class name "," class ","Core Inflection  ruby_name sub ","Core Inflection  ruby_name ","Inflection  ruby_Inflection  ruby_name sub  sub ","Inflection  ruby_Core Inflection  ruby_name sub  sub ","Inflection  ruby_Inflection  ruby_name sub  ","Inflection  ruby_Core Inflection  ruby_name sub  "," class Inflection  ruby_name sub  "," class Core Inflection  ruby_name sub  ","Core Inflection  ruby_Inflection  ruby_name sub  sub ","Core Inflection  ruby_Core Inflection  ruby_name sub  sub ","Core Inflection  ruby_Inflection  ruby_name sub  ","Core Inflection  ruby_Core Inflection  ruby_name sub  "]}," AWS IAM Collection WithPrefix with_prefix":{"type":"method","name":"with_prefix","children":[],"call":[" class new "," config "," class ","(str \"/\") sub "]}," AWS IAM Collection WithPrefix each":{"type":"method","name":"each","children":[],"call":["options []= ","(str \"/\") sub ","options [] ","options delete ","options key? ","(pair\n  (sym :path_prefix)\n  (send nil :prefix)) merge "," prefix ","(pair\n  (sym :path_prefix)\n  (send nil :prefix)) merge  []= ","(pair\n  (sym :path_prefix)\n  (send nil :prefix)) merge  [] ","(pair\n  (sym :path_prefix)\n  (send nil :prefix)) merge  delete ","(pair\n  (sym :path_prefix)\n  (send nil :prefix)) merge  key? ","(pair\n  (sym :path_options [] )\n  (send nil :options [] )) merge "," options []  "]}," AWS IAM Collection WithPrefix initialize":{"type":"method","name":"initialize","children":[],"call":["options [] "]}," AWS IAM AccountAliasCollection each_item":{"type":"method","name":"each_item","children":[],"call":["response account_aliases each ","response account_aliases ","response data [] each ","response data [] ","response data "]}," AWS IAM AccountAliasCollection request_method":{"type":"method","name":"request_method","children":[],"call":[]}," AWS IAM AccountAliasCollection delete":{"type":"method","name":"delete","children":[],"call":[" client delete_account_alias "," client "]}," AWS IAM AccountAliasCollection create":{"type":"method","name":"create","children":[],"call":[" client create_account_alias "," client "]}," AWS IAM AccessKeyCollection new_options":{"type":"method","name":"new_options","children":[],"call":[" config "," user "]}," AWS IAM AccessKeyCollection each_item":{"type":"method","name":"each_item","children":[],"call":["AccessKey  new_from "," new_options ","item access_key_id ","response access_key_metadata each ","response access_key_metadata ","item AccessKey  new_from _id ","response AccessKey  new_from _metadata each ","response AccessKey  new_from _metadata "]}," AWS IAM AccessKeyCollection each":{"type":"method","name":"each","children":[],"call":["each_options []= "," user name "," user ","options dup ","options dup  []= "]}," AWS IAM AccessKeyCollection clear":{"type":"method","name":"clear","children":[],"call":["access_key delete "," each "]}," AWS IAM AccessKeyCollection []":{"type":"method","name":"[]","children":[],"call":["AccessKey  new "," new_options "]}," AWS IAM AccessKeyCollection create":{"type":"method","name":"create","children":[],"call":["AccessKey  new_from "," new_options ","resp access_key access_key_id ","resp access_key "," client create_access_key "," client ","options []= "," user name "," user "," client create_access_key  access_key access_key_id "," client create_access_key  access_key "]}," AWS IAM AccessKeyCollection initialize":{"type":"method","name":"initialize","children":[],"call":["options [] "]}," AWS IAM AccessKey matches_response_object?":{"type":"method","name":"matches_response_object?","children":[],"call":["user_name == "," user_name ","obj access_key_id == "," id ","obj access_key_id ","obj user_name ","obj respond_to? ","obj user_name  == "," obj user_name  ","obj obj user_name  "]}," AWS IAM AccessKey get_resource":{"type":"method","name":"get_resource","children":[],"call":[" client list_access_keys "," client "," user name "," user "]}," AWS IAM AccessKey resource_identifiers":{"type":"method","name":"resource_identifiers","children":[],"call":["identifiers << "," user name "," user "," id "]}," AWS IAM AccessKey credentials":{"type":"method","name":"credentials","children":[],"call":[" secret "," id "]}," AWS IAM AccessKey delete":{"type":"method","name":"delete","children":[],"call":[" client delete_access_key "," resource_options "," client "]}," AWS IAM AccessKey deactivate!":{"type":"method","name":"deactivate!","children":[],"call":[" status= "]}," AWS IAM AccessKey activate!":{"type":"method","name":"activate!","children":[],"call":[" status= "]}," AWS IAM AccessKey inactive?":{"type":"method","name":"inactive?","children":[],"call":[" status == "," status "]}," AWS IAM AccessKey active?":{"type":"method","name":"active?","children":[],"call":[" status == "," status "]}," AWS IAM AccessKey user_name":{"type":"method","name":"user_name","children":[],"call":["@user name "]}," AWS IAM AccessKey secret":{"type":"method","name":"secret","children":[],"call":[" raise "," secret_value "]}," AWS IAM AccessKey initialize":{"type":"method","name":"initialize","children":[],"call":["options [] ","options []= ","options has_key? "]}," AWS EC2 Tag get_resource":{"type":"method","name":"get_resource","children":[],"call":[" client describe_tags "," resource send "," resource "," resource tagging_resource_type "," key "," client "]}," AWS EC2 SnapshotCollection preserved_options":{"type":"method","name":"preserved_options","children":[],"call":[" merge "]}," AWS EC2 SnapshotCollection restorable_by":{"type":"method","name":"restorable_by","children":[],"call":[" collection_with ","@restorable_by + "]}," AWS EC2 SnapshotCollection with_owner":{"type":"method","name":"with_owner","children":[],"call":[" collection_with ","@owners + "]}," AWS EC2 SnapshotCollection initialize":{"type":"method","name":"initialize","children":[],"call":["options [] "]}," AWS EC2 Resource update_resource":{"type":"method","name":"update_resource","children":[],"call":[" client send "," client "," inflected_name ","options []= "," __resource_id__ ","attribute set_as ","value is_a? "]}," AWS EC2 Resource retrieve_attribute":{"type":"method","name":"retrieve_attribute","children":[],"call":[" class attributes [] "," class attributes "," class ","attribute_or_attribute_name is_a? "," class  class attributes [] s [] "," class  class attributes [] s "," class attributes [] _or_ class attributes [] _name is_a? "]}," AWS EC2 Resource get_resource":{"type":"method","name":"get_resource","children":[],"call":[" describe_call "]}," AWS EC2 Resource resource_identifiers":{"type":"method","name":"resource_identifiers","children":[],"call":[" send "," resource_id_method "]}," AWS EC2 InstanceCollection count_options":{"type":"method","name":"count_options","children":[],"call":["count end ","count end - ","count exclude_end? ","count begin ","options [] ","options []  end ","options []  end - ","options []  exclude_end? ","options []  begin "]}," AWS EC2 Instance get_resource":{"type":"method","name":"get_resource","children":[],"call":[" describe_call "," describe_attribute_call "," class mutable_describe_attributes include? ","attribute name "," class mutable_describe_attributes "," class "]}," AWS EC2 Instance disable_monitoring":{"type":"method","name":"disable_monitoring","children":[],"call":[" client unmonitor_instances "," id "," client "]}," AWS EC2 Instance enable_monitoring":{"type":"method","name":"enable_monitoring","children":[],"call":[" client monitor_instances "," id "," client "]}," AWS EC2 Instance mutable_describe_attribute":{"type":"method","name":"mutable_describe_attribute","children":[],"call":[]}," AWS EC2 Instance mutable_describe_call_attribute":{"type":"method","name":"mutable_describe_call_attribute","children":[],"call":[]}," AWS EC2 Instance describe_call_attribute":{"type":"method","name":"describe_call_attribute","children":[],"call":[]}," AWS EC2 Instance mutable_describe_attributes":{"type":"method","name":"mutable_describe_attributes","children":[],"call":[]}," AWS EC2 Instance describe_call_attributes":{"type":"method","name":"describe_call_attributes","children":[],"call":[]}," AWS EC2 Instance reservation_attributes":{"type":"method","name":"reservation_attributes","children":[],"call":[]}," AWS EC2 Image block_device_mappings":{"type":"method","name":"block_device_mappings","children":[],"call":["h []= ","mapping ebs ","mapping device_name ","(or\n  (send nil :block_device_mapping)\n  (array)) inject "," block_device_mapping ","mapping [] ","mapping mapping []  "]}," AWS EC2 AvailabilityZone describe_call_name":{"type":"method","name":"describe_call_name","children":[],"call":[]}," AWS EC2 Attachment resource_identifiers":{"type":"method","name":"resource_identifiers","children":[],"call":[" device "," instance id "," instance "," volume id "," volume "]}," AWS Configuration iam_endpoint":{"type":"method","name":"iam_endpoint","children":[],"call":["@options [] "]}," AWS Collections PagedWithLimits limit_key":{"type":"method","name":"limit_key","children":[],"call":[" raise "]}," AWS Collections PagedWithLimits each_response":{"type":"method","name":"each_response","children":[],"call":[" next_token_for "," client send ","options merge "," request_method "," client ","page_opts []= ","max_items min "," limit_key ","max_items << ","limit - "," next_token_key ","limit == ","next_token nil? ","  next_token_for _for ","  next_token_for _key "," next_token_for  nil? "]}," AWS Collections PagedWithLimits first":{"type":"method","name":"first","children":[],"call":[" enumerator first "," enumerator "]}," AWS Collections Paged next_token_for":{"type":"method","name":"next_token_for","children":[],"call":["response send ","response respond_to? "," next_token_key "]}," AWS Collections Paged next_token_key":{"type":"method","name":"next_token_key","children":[],"call":[" raise "]}," AWS Collections Paged each_response":{"type":"method","name":"each_response","children":[],"call":[" next_token_for "," client send ","options merge "," request_method "," client ","page_opts []= "," next_token_key ","next_token nil? ","  next_token_for _for ","  next_token_for _key "," next_token_for  nil? "]}," AWS Collections Basic each_item":{"type":"method","name":"each_item","children":[],"call":[" raise "]}," AWS Collections Basic request_method":{"type":"method","name":"request_method","children":[],"call":[" raise "]}," AWS Collections Basic each_response":{"type":"method","name":"each_response","children":[],"call":[" client send "," request_method "," client "]}," AWS Collections Basic in_groups_of":{"type":"method","name":"in_groups_of","children":[],"call":["group empty? ","group size == ","group size ","group << ","batch each "," each_batch "]}," AWS Collections Basic each_batch":{"type":"method","name":"each_batch","children":[],"call":["batch size ","(op-asgn\n  (lvasgn :total) :+\n  (int 1)) == ","batch << "," each_item "," each_response ","options delete ","options dup ","options dup  delete ","options dup  dup "]}," AWS Collections Basic each":{"type":"method","name":"each","children":[],"call":["batch each "," each_batch "]}," AWS Collections Basic enumerator":{"type":"method","name":"enumerator","children":[],"call":["Enumerator  new "]}," AWS ClientLogging summarize_string":{"type":"method","name":"summarize_string","children":[],"call":["str size ","str [] inspect ","str [] "]}," AWS Configuration add_option_with_needs":{"type":"method","name":"add_option_with_needs","children":[],"call":["@created [] [] ","@created [] ","@created [] []= ","create_block call ","@created [] [] == ","@created key? "," send ","needs collect "," supplied [] "," supplied "," supplied has_key? "," define_method "," accepted_options << "," accepted_options ","@created []= "]}," AWS Configuration add_option":{"type":"method","name":"add_option","children":[],"call":[" alias_method ","options [] ","transform call "," supplied [] "," supplied "," supplied has_key? "," define_method "," accepted_options << "," accepted_options "]}," AWS Configuration accepted_options":{"type":"method","name":"accepted_options","children":[],"call":["Set  new "]}," AWS Configuration supplied":{"type":"method","name":"supplied","children":[],"call":[]}," AWS Configuration ==":{"type":"method","name":"==","children":[],"call":[" supplied == ","other supplied "," supplied ","other is_a? "," class "]}," AWS Configuration to_h":{"type":"method","name":"to_h","children":[],"call":["h []= "," send "," class accepted_options inject "," class accepted_options "," class "]}," AWS BaseClient configure_client":{"type":"method","name":"configure_client","children":[],"call":[]}," AWS EC2 SecurityGroup ensure_vpc":{"type":"method","name":"ensure_vpc","children":[],"call":[" raise "," vpc? "]}," AWS EC2 SecurityGroup parse_sources":{"type":"method","name":"parse_sources","children":[],"call":["ips << ","groups empty? ","ips empty? "," raise ","invalid ingress ip permission,  + ","invalid ip permission hash,  + ","groups << ","SecurityGroup  new "," config ","source [] ","source has_key? ","sources each ","source keys - == ","source keys - ","source keys ","source source_security_group ","source owner_id ","source id ","SecurityGroup  new s empty? ","SecurityGroup  new s << ","source source_security_SecurityGroup  new  "]}," AWS EC2 SecurityGroup parse_egress_args":{"type":"method","name":"parse_egress_args","children":[],"call":["options []= ","groups empty? ","ips empty? "," parse_sources ","options [] ","args pop ","last key? ","last is_a? ","args last "," ensure_vpc ","args pop  []= ","args pop  [] ","args last  key? ","args last  is_a? ","args args last  "]}," AWS EC2 SecurityGroup parse_ingress_sources":{"type":"method","name":"parse_ingress_sources","children":[],"call":["options []= ","groups empty? ","ips empty? "," parse_sources "]}," AWS EC2 SecurityGroup revoke_egress":{"type":"method","name":"revoke_egress","children":[],"call":["permission revoke ","IpPermission  new "," parse_egress_args "," client revoke_security_group_egress "," egress_opts "," id "," client ","IpPermission  new  revoke "]}," AWS EC2 SecurityGroup authorize_egress":{"type":"method","name":"authorize_egress","children":[],"call":["permission authorize ","IpPermission  new "," parse_egress_args "," client authorize_security_group_egress "," egress_opts "," id "," client ","IpPermission  new  authorize "]}," AWS EC2 SecurityGroup egress_ip_permissions":{"type":"method","name":"egress_ip_permissions","children":[],"call":["EgressIpPermissionCollection  new "," config "]}," AWS EC2 SecurityGroup ingress_ip_permissions":{"type":"method","name":"ingress_ip_permissions","children":[],"call":["IpPermissionCollection  new "," config ","IngressIpPermissionCollection  new "]}," AWS EC2 SecurityGroup vpc?":{"type":"method","name":"vpc?","children":[],"call":[" vpc_id "]}," AWS EC2 SecurityGroup IpPermission format_permission":{"type":"method","name":"format_permission","children":[],"call":["permission []= ","list << ","group owner_id ","group id "," groups inject "," groups "," groups empty? "," ip_ranges collect "," ip_ranges "," ip_ranges empty? "," port_range last "," port_range "," port_range first "," protocol to_s "," protocol "," protocol == "]}," AWS EC2 SecurityGroup IpPermission ==":{"type":"method","name":"==","children":[],"call":["other egress == "," egress? ","other egress ","other groups == "," groups ","other groups ","other ip_ranges == "," ip_ranges ","other ip_ranges ","other port_range == "," port_range ","other port_range ","other protocol == "," protocol ","other protocol ","other security_group == "," security_group ","other security_group ","other is_a? "]}," AWS EC2 SecurityGroup IpPermission egress?":{"type":"method","name":"egress?","children":[],"call":[]}," AWS EC2 SecurityGroup EgressIpPermissionCollection each":{"type":"method","name":"each","children":[],"call":["IpPermission  new "," config ","p ip_protocol "," security_group ","SecurityGroup  new ","group vpc_id ","group user_id ","group group_name ","group group_id ","p groups collect ","p groups ","ip cidr_ip ","p ip_ranges collect ","p ip_ranges ","p to_port ","p from_port ","p respond_to? "," security_group ip_permissions_list_egress each "," security_group ip_permissions_list_egress "," security_group vpc_id ","group [] ","p [] "," security_group ip_IpPermission  new s_list_egress each "," security_group ip_IpPermission  new s_list_egress "]}," AWS EC2 InstanceCollection security_group_opts":{"type":"method","name":"security_group_opts","children":[],"call":["options []= ","ids empty? ","names empty? ","g id ","groups collect ","ec2 security_groups filter ","ec2 security_groups ","EC2  new "," config ","options [] "," raise ",":security_groups may only contain  + ","ids << ","names << "," Array each "," Array ","options delete ","ec2 security_groups filter  collect ","ec2 security_ec2 security_groups filter  filter ","EC2  new  security_groups filter ","ec2 security_ec2 security_groups filter  ","EC2  new  security_groups ",":security_ec2 security_groups filter  may only contain  + "]}," AWS EC2 Instance dedicated_tenancy?":{"type":"method","name":"dedicated_tenancy?","children":[],"call":["p tenancy == ","p tenancy "," placement "," placement  tenancy == "," placement  tenancy ","  placement lacement "]}," AWS add_service":{"type":"method","name":"add_service","children":[],"call":["Core Configuraiton  add_option_with_needs ","Core Configuraiton  add_option ","AWS  const_get Client  new ","AWS  const_get "," lambda "]}," AWS Core XmlGrammar StubResponse without_wrapper":{"type":"method","name":"without_wrapper","children":[],"call":["child_rules [] ","customizations [] each_pair ","customizations [] "]}," AWS Core XmlGrammar StubResponse wrappers":{"type":"method","name":"wrappers","children":[],"call":["wrappers each_pair ","wrappers [] [] []= ","child_rules merge ","wrappers [] [] ","wrappers [] ","child_rules [] first ","child_rules [] ","customizations [] each_pair ","customizations [] "]}," AWS Core XmlGrammar StubResponse add_indexes_to_context":{"type":"method","name":"add_indexes_to_context","children":[],"call":["MetaUtils  extend_method ","indexes each ","customizations [] ","customizations []  each "]}," AWS Core XmlGrammar StubResponse add_child_elements_to_context":{"type":"method","name":"add_child_elements_to_context","children":[],"call":["StubResponse  new ","MetaUtils  extend_method "," stub_methods ","child_rules [] ","child_rules [] format_value ","child_rules [] empty? ","child_rules [] call ","Inflection  ruby_name "," without_wrapper ","Inflection  Inflection  ruby_name  "]}," AWS Core XmlGrammar StubResponse add_wrappers_to_context":{"type":"method","name":"add_wrappers_to_context","children":[],"call":["StubResponse  new ","MetaUtils  extend_method "," wrappers "]}," AWS Core XmlGrammar StubResponse stub_methods":{"type":"method","name":"stub_methods","children":[],"call":[" add_indexes_to_context "," add_child_elements_to_context "," add_wrappers_to_context "]}," AWS Core XmlGrammar StubResponse inspect":{"type":"method","name":"inspect","children":[],"call":["(send\n  (lvar :methods) :collect) sort join ","(send\n  (lvar :methods) :collect) sort ","methods collect "," public_methods - ","Object  public_methods "," public_methods ","(send\n  (lvar : public_methods - ) :collect) sort join ","(send\n  (lvar : public_methods - ) :collect) sort "," public_methods -  collect "," public_ public_methods -  - ","Object  public_ public_methods -  "," public_ public_methods -  "]}," AWS Core XmlGrammar StubResponse initialize":{"type":"method","name":"initialize","children":[],"call":[" stub_methods "]}," AWS Core XmlGrammar RootFrame initialize":{"type":"method","name":"initialize","children":[],"call":[]}," AWS Core XmlGrammar Frame initial_customizations":{"type":"method","name":"initial_customizations","children":[],"call":[]}," AWS Core XmlGrammar Frame customizations_for_child":{"type":"method","name":"customizations_for_child","children":[],"call":["CustomizationContext  new ","@customizations [] [] ","@customizations [] "]}," AWS Core XmlGrammar Frame ruby_name":{"type":"method","name":"ruby_name","children":[],"call":["Inflection  ruby_name "," element_name ","@customizations [] "]}," AWS Core XmlGrammar Frame default_value":{"type":"method","name":"default_value","children":[],"call":["Base64  decode64 ","@text strip ","@context encoding == ","@context encoding ","@context respond_to? "]}," AWS Core XmlGrammar Frame wrapper_methods":{"type":"method","name":"wrapper_methods","children":[],"call":["@customizations [] "]}," AWS Core XmlGrammar Frame wrapped?":{"type":"method","name":"wrapped?","children":[],"call":["@customizations [] "]}," AWS Core XmlGrammar Frame collected?":{"type":"method","name":"collected?","children":[],"call":["@customizations [] "]}," AWS Core XmlGrammar Frame ignored?":{"type":"method","name":"ignored?","children":[],"call":["@customizations [] "]}," AWS Core XmlGrammar Frame forced?":{"type":"method","name":"forced?","children":[],"call":["@customizations [] "]}," AWS Core XmlGrammar Frame add_mutators":{"type":"method","name":"add_mutators","children":[],"call":[" instance_variable_get ","MetaUtils  extend_method "," context "," instance_variable_set "," context respond_to? ","variable_name to_s gsub ","variable_name to_s "," context kind_of? ","variable_name to_s gsub  to_s gsub ","variable_name to_s gsub  to_s "]}," AWS Core XmlGrammar Frame add_mutators_for":{"type":"method","name":"add_mutators_for","children":[],"call":[" add_mutators ","child_frame getter ","child_frame setter ","child_frame ruby_name "," context kind_of? "," context "]}," AWS Core XmlGrammar Frame invoke_setter":{"type":"method","name":"invoke_setter","children":[],"call":[" context send ","child_frame setter "," context "," context __set_data__ ","child_frame getter "," context kind_of? "]}," AWS Core XmlGrammar Frame wrapper_customizations":{"type":"method","name":"wrapper_customizations","children":[],"call":["customizations merge! ","additional []= ","@customizations [] merge ","additional [] ","@customizations [] ","wrapper_frames [] ","customizations []= ","CustomizationContext  new ","CustomizationContext  new  merge! ","wrapper_frames []  []= ","@CustomizationContext  new  [] merge ","wrapper_frames []  [] ","@CustomizationContext  new  [] ","@customizations []  [] ","CustomizationContext  new  []= "]}," AWS Core XmlGrammar Frame wrapper_frame_for":{"type":"method","name":"wrapper_frame_for","children":[],"call":["Frame  new "," wrapper_customizations ","method_name to_s ","@wrapper_frames [] "]}," AWS Core XmlGrammar Frame consume_in_wrapper":{"type":"method","name":"consume_in_wrapper","children":[],"call":[" consume_child_frame ","wrapper_frame consume_child_frame ","child_frame customizations= ","child_frame dup ","child_frame customizations merge ","child_frame customizations "," add_mutators "," wrapper_frame_for "," consume_child_frame dup  ","wrapper_frame consume_child_frame dup  "," wrapper_frame_for  consume_child_frame ","child_frame dup  customizations= ","child_frame child_frame customizations merge = ","child_frame dup  dup ","child_frame dup  customizations merge ","child_frame child_frame customizations merge  merge ","child_frame dup  customizations ","child_frame child_frame customizations merge  ","  wrapper_frame_for _for "]}," AWS Core XmlGrammar Frame construct_context":{"type":"method","name":"construct_context","children":[],"call":["Context  new "," instance_eval ","@customizations [] "]}," AWS Core XmlGrammar Frame consume_initial_frame":{"type":"method","name":"consume_initial_frame","children":[],"call":[" invoke_setter ","child_frame value ","child_frame initial_collection ","child_frame collected? "," add_mutators_for ","child_frame forced? "]}," AWS Core XmlGrammar Frame index":{"type":"method","name":"index","children":[],"call":[" context send "," context "," root_frame index "," root_frame "," root_frame == "]}," AWS Core XmlGrammar Frame add_to_collection":{"type":"method","name":"add_to_collection","children":[],"call":["@customizations [] call ","@customizations [] "]}," AWS Core XmlGrammar Frame initial_collection":{"type":"method","name":"initial_collection","children":[],"call":["@customizations [] call ","@customizations [] "]}," AWS Core XmlGrammar Frame getter":{"type":"method","name":"getter","children":[],"call":["@customizations [] "]}," AWS Core XmlGrammar Frame setter":{"type":"method","name":"setter","children":[],"call":["@customizations [] "]}," AWS Core XmlGrammar Frame context":{"type":"method","name":"context","children":[],"call":[" construct_context "," parent_frame context "," parent_frame "," ignored? "]}," AWS Core XmlGrammar Frame value":{"type":"method","name":"value","children":[],"call":[" default_value ","@customizations [] format_value ","@customizations [] "]}," AWS Core XmlGrammar Frame add_text":{"type":"method","name":"add_text","children":[],"call":["@text << "]}," AWS Core XmlGrammar Frame close":{"type":"method","name":"close","children":[],"call":[" index []= "," context "," index ","(lvar :key) flatten each ","(lvar :key) flatten ","block call ","@customizations [] ","(lvar :block call ) flatten each ","(lvar :block call ) flatten "]}," AWS Core XmlGrammar Frame consume_child_frame":{"type":"method","name":"consume_child_frame","children":[],"call":[" invoke_setter ","child_frame value ","child_frame add_to_collection "," context send ","child_frame getter "," context ","child_frame collected? "," add_mutators_for ","child_frame forced? "," consume_in_wrapper ","child_frame wrapper_methods each ","child_frame wrapper_methods ","child_frame wrapped? ","child_frame ignored? "]}," AWS Core XmlGrammar Frame build_child_frame":{"type":"method","name":"build_child_frame","children":[],"call":["Frame  new "," root_frame "]}," AWS Core XmlGrammar Frame initialize":{"type":"method","name":"initialize","children":[],"call":[" consume_initial_frame "," wrapper_frame_for ","@customizations [] keys each ","@customizations [] keys ","@customizations [] "," build_child_frame "," context send "," context "," add_mutators "," context __set_data__ "," context kind_of? ","indexes each ","@root_frame == ","options [] ","@parent_frame customizations_for_child ","options []  [] keys each ","@parent_frame customizations_for_child  [] keys each ","options []  [] keys ","@parent_frame customizations_for_child  [] keys ","options []  [] ","@parent_frame customizations_for_child  [] ","@customizations []  each ","options []  == ","options []  customizations_for_child "]}," AWS Core XmlGrammar NokogiriAdapter error":{"type":"method","name":"error","children":[],"call":[]}," AWS Core XmlGrammar NokogiriAdapter end_element_namespace":{"type":"method","name":"end_element_namespace","children":[],"call":[" end_element "]}," AWS Core XmlGrammar NokogiriAdapter start_element_namespace":{"type":"method","name":"start_element_namespace","children":[],"call":[" start_element ","att value ","att localname ","attrs map "]}," AWS Core XmlGrammar NokogiriAdapter end_document":{"type":"method","name":"end_document","children":[],"call":[]}," AWS Core XmlGrammar NokogiriAdapter start_document":{"type":"method","name":"start_document","children":[],"call":[]}," AWS Core XmlGrammar NokogiriAdapter xmldecl":{"type":"method","name":"xmldecl","children":[],"call":[]}," AWS Core XmlGrammar REXMLSaxParserAdapter text":{"type":"method","name":"text","children":[],"call":[" characters "]}," AWS Core XmlGrammar REXMLSaxParserAdapter tag_end":{"type":"method","name":"tag_end","children":[],"call":[" end_element "]}," AWS Core XmlGrammar REXMLSaxParserAdapter tag_start":{"type":"method","name":"tag_start","children":[],"call":[" start_element "]}," AWS Core XmlGrammar Parser characters":{"type":"method","name":"characters","children":[],"call":["@frame add_text "]}," AWS Core XmlGrammar Parser end_element":{"type":"method","name":"end_element","children":[],"call":["@frame parent_frame ","parent_frame consume_child_frame ","@frame close ","@frame parent_frame  parent_frame ","@frame @frame parent_frame  ","@frame parent_frame  consume_child_frame ","@frame parent_frame  close "]}," AWS Core XmlGrammar Parser start_element":{"type":"method","name":"start_element","children":[],"call":["@frame consume_child_frame ","attr_frame add_text ","@frame build_child_frame ","attrs each ","RootFrame  new ","RootFrame  new  consume_child_frame ","@frame build_child_frame  consume_child_frame ","@frame build_child_frame  add_text ","RootFrame  new  build_child_frame ","@frame build_child_frame  build_child_frame "]}," AWS Core XmlGrammar Parser initialize":{"type":"method","name":"initialize","children":[],"call":[]}," AWS Core XmlGrammar ValueFormatter format_value":{"type":"method","name":"format_value","children":[],"call":[]}," AWS Core XmlGrammar ValueFormatter extend_format_value":{"type":"method","name":"extend_format_value","children":[],"call":["MetaUtils  extend_method "]}," AWS Core XmlGrammar customizations=":{"type":"method","name":"customizations=","children":[],"call":[]}," AWS Core XmlGrammar customizations_for":{"type":"method","name":"customizations_for","children":[],"call":["CustomizationContext  new "," customizations [] [] "," customizations [] "," customizations ","@parent [] [] ","@parent [] "]}," AWS Core XmlGrammar customizations":{"type":"method","name":"customizations","children":[],"call":["CustomizationContext  new "]}," AWS Core XmlGrammar validate_config_method":{"type":"method","name":"validate_config_method","children":[],"call":[" raise ","allow_methods include? ","method to_s "]}," AWS Core XmlGrammar parse_config_item":{"type":"method","name":"parse_config_item","children":[],"call":["(lvar :arg) flatten ","method kind_of? ","item to_a first ","item to_a "]}," AWS Core XmlGrammar validate_args":{"type":"method","name":"validate_args","children":[],"call":[" raise ","arity == ","args length > ","args length "," method arity "," method "," method arity  == "," method  method arity  "]}," AWS Core XmlGrammar config_eval":{"type":"method","name":"config_eval","children":[],"call":[" config_eval "," element "," send "," validate_args "," validate_config_method "," parse_config_item ","config each "]}," AWS Core XmlGrammar eval_customization_context":{"type":"method","name":"eval_customization_context","children":[],"call":[" block_given? "," customizations_for "]}," AWS Core XmlGrammar initial_customizations":{"type":"method","name":"initial_customizations","children":[],"call":["CustomizationContext  new "]}," AWS Core XmlGrammar eql?":{"type":"method","name":"eql?","children":[],"call":[" customizations == ","other customizations "," customizations "]}," AWS Core XmlGrammar construct_value":{"type":"method","name":"construct_value","children":[],"call":["@current []= "]}," AWS Core XmlGrammar wrapper":{"type":"method","name":"wrapper","children":[],"call":["@current [] << ","@current [] "," element ","(or\n  (send\n    (lvar :options) :[]\n    (sym :for))\n  (array)) each ","options [] ","@current [] []= "," raise ","NotImplementedError  new ","can't customize wrapped  + ","customizations [] empty? ","customizations [] "," eval_customization_context ","CustomizationContext  new "," block_given? "," eval_customization_context  [] empty? "," eval_customization_context  [] "]}," AWS Core XmlGrammar map":{"type":"method","name":"map","children":[],"call":[" map_entry "," rename "," element "," ignore "]}," AWS Core XmlGrammar map_entry":{"type":"method","name":"map_entry","children":[],"call":["@current []= ","hash []= ","entry value ","entry key "," lambda "," rename "," element "," collect_values "]}," AWS Core XmlGrammar list":{"type":"method","name":"list","children":[],"call":[" collect_values "," block_given? "," rename "," element "," ignore "]}," AWS Core XmlGrammar format_value":{"type":"method","name":"format_value","children":[],"call":["@current [] extend_format_value ","@current [] ","ValueFormatter  new "]}," AWS Core XmlGrammar symbol_value":{"type":"method","name":"symbol_value","children":[],"call":["Inflection  ruby_name to_sym ","Inflection  ruby_name ","(str \"\") include? "," format_value "]}," AWS Core XmlGrammar float_value":{"type":"method","name":"float_value","children":[],"call":["value to_f ","value nil? "," format_value "]}," AWS Core XmlGrammar integer_value":{"type":"method","name":"integer_value","children":[],"call":["value to_i ","value nil? "," format_value "]}," AWS Core XmlGrammar datetime_like_value":{"type":"method","name":"datetime_like_value","children":[],"call":["klass parse ","klass send ","elem to_i ","value tr chop split map ","value tr chop split ","value tr chop ","value tr ","value tr == "," format_value "]}," AWS Core XmlGrammar time_value":{"type":"method","name":"time_value","children":[],"call":[" datetime_like_value "]}," AWS Core XmlGrammar datetime_value":{"type":"method","name":"datetime_value","children":[],"call":[" datetime_like_value "]}," AWS Core XmlGrammar boolean_value":{"type":"method","name":"boolean_value","children":[],"call":["(lvar :value) == "," format_value ","@current []= "]}," AWS Core XmlGrammar index":{"type":"method","name":"index","children":[],"call":["@current []= ","(or-asgn\n  (send\n    (ivar :@customizations) :[]\n    (sym :index_names))\n  (array)) << ","@customizations [] "]}," AWS Core XmlGrammar collect_values":{"type":"method","name":"collect_values","children":[],"call":[" force ","@current []= ","ary << "," lambda "]}," AWS Core XmlGrammar force":{"type":"method","name":"force","children":[],"call":["@current []= "]}," AWS Core XmlGrammar rename":{"type":"method","name":"rename","children":[],"call":["@current []= ","new_name to_s "]}," AWS Core XmlGrammar ignore":{"type":"method","name":"ignore","children":[],"call":["@current []= "]}," AWS Core XmlGrammar add_method":{"type":"method","name":"add_method","children":[],"call":["MetaUtils  extend_method "," format_value "]}," AWS Core XmlGrammar element":{"type":"method","name":"element","children":[],"call":[" eval_customization_context "]}," AWS Core XmlGrammar customize":{"type":"method","name":"customize","children":[],"call":["grammar module_eval "," block_given? ","grammar config_eval ","grammar customizations= "," customizations deep_copy "," customizations ","Class  new ","Class  new  module_eval ","Class  new  config_eval ","Class  new  customizations= "]}," AWS Core XmlGrammar simulate":{"type":"method","name":"simulate","children":[],"call":["StubResponse  new "," customizations "]}," AWS Core XmlGrammar parse":{"type":"method","name":"parse","children":[],"call":["REXML Parsers StreamParser  new parse ","REXML Parsers StreamParser  new ","REXML Source  new ","parser extend ","Parser  new "," customizations ","Nokogiri XML SAX Parser  new parse ","xml strip ","Nokogiri XML SAX Parser  new ","xml empty? ","Context  new ","options [] ","Parser  new  extend "]}," AWS Core XmlGrammar CustomizationContext recompute_accessors":{"type":"method","name":"recompute_accessors","children":[],"call":[" []= ","ruby_name != "," [] ","Inflection  ruby_name ","(or\n  (send\n    (self) :[]\n    (sym :renamed))\n  (send\n    (self) :[]\n    (sym :name))) to_s ","Inflection  ruby_name  != ","Inflection  Inflection  ruby_name  "]}," AWS Core XmlGrammar CustomizationContext deep_copy":{"type":"method","name":"deep_copy","children":[],"call":["hash merge ","copy []= "," deep_copy ","value is_a? ","value deep_copy ","hash inject "," deep_copy  is_a? ","value deep_copy  is_a? "," deep_copy  deep_copy ","value deep_copy  deep_copy "]}," AWS Core XmlGrammar CustomizationContext changed_renamed":{"type":"method","name":"changed_renamed","children":[],"call":[" recompute_accessors "]}," AWS Core XmlGrammar CustomizationContext changed_boolean":{"type":"method","name":"changed_boolean","children":[],"call":[" recompute_accessors "]}," AWS Core XmlGrammar CustomizationContext []=":{"type":"method","name":"[]=","children":[],"call":[" send "," respond_to? "]}," AWS Core XmlGrammar CustomizationContext initialize":{"type":"method","name":"initialize","children":[],"call":[" recompute_accessors "," original_store "]}," AWS Core XmlGrammar Context __set_data__":{"type":"method","name":"__set_data__","children":[],"call":["@data []= ","getter to_sym "]}," AWS Core XmlGrammar Context inspect":{"type":"method","name":"inspect","children":[],"call":["(send\n  (lvar :methods) :reject) join ","m =~ ","methods reject ","@data keys ","(send\n  (lvar :@data keys ) :reject) join ","@data keys  reject "]}," AWS Core XmlGrammar Context respond_to?":{"type":"method","name":"respond_to?","children":[],"call":["@data key? ","m to_sym "]}," AWS Core XmlGrammar Context method_missing":{"type":"method","name":"method_missing","children":[],"call":["@data [] ","@data key? ","m to_sym ","@data m to_sym ? "]}," AWS Core XmlGrammar Context id":{"type":"method","name":"id","children":[],"call":["@data [] "]}," AWS Core XmlGrammar Context initialize":{"type":"method","name":"initialize","children":[],"call":[]}," AWS Core UriEscape escape_path":{"type":"method","name":"escape_path","children":[],"call":["escaped << ","leading + + ","leading + "," escape ","value scan "]}," AWS Core UriEscape escape":{"type":"method","name":"escape","children":[],"call":["CGI  escape gsub ","CGI  escape ","value to_s ","value encode ","value respond_to? ","CGI  escape gsub gsub ","value encode  to_s ","value encode  encode ","value encode  respond_to? "]}," AWS Core ServiceInterface inspect":{"type":"method","name":"inspect","children":[],"call":[" class "]}," AWS Core ServiceInterface initialize":{"type":"method","name":"initialize","children":[],"call":[" config send ","Inflection  ruby_name + ","Inflection  ruby_name "," class to_s "," class "," config ","@config with ","AWS  config ","options [] ","@config send "," class name split last "," class name split "," class name ","options delete ","options dup ","@config with  with ","options []  with ","options dup  [] ","@config with  send ","options []  send ","options dup  delete ","options dup  dup "]}," AWS Core ServiceInterface included":{"type":"method","name":"included","children":[],"call":[]}," AWS Core ResponseCache cached":{"type":"method","name":"cached","children":[],"call":["@indexed_responses [] ","resp cache_key "]}," AWS Core ResponseCache select":{"type":"method","name":"select","children":[],"call":["block call ","block nil? ","(send\n  (lvar :types) :map) include? ","resp request_type to_s ","resp request_type ","t to_s ","types map "," cached_responses select "," cached_responses "]}," AWS Core ResponseCache add":{"type":"method","name":"add","children":[],"call":["ResourceCache  new ","@indexed_responses []= ","resp cache_key ","resp respond_to? "," cached_responses unshift "," cached_responses "]}," AWS Core ResponseCache initialize":{"type":"method","name":"initialize","children":[],"call":["ResourceCache  new "]}," AWS Core Response serialize_options_array":{"type":"method","name":"serialize_options_array","children":[],"call":["[ + + ","[ + ","(send\n  (lvar :ary) :map) join "," serialize_options_value ","ary map ","(send\n  (lvar :array) :map) join ","array map "]}," AWS Core Response serialize_options_value":{"type":"method","name":"serialize_options_value","children":[],"call":["value inspect "," serialize_options_array "," serialize_options_hash "]}," AWS Core Response serialize_options_hash":{"type":"method","name":"serialize_options_hash","children":[],"call":["( + + ","( + ","(send\n  (send\n    (send\n      (lvar :hash) :keys) :sort_by\n    (block-pass\n      (sym :to_s))) :map) join "," serialize_options_value ","hash [] ","hash keys sort_by map ","hash keys sort_by ","hash keys "]}," AWS Core Response serialized_options":{"type":"method","name":"serialized_options","children":[],"call":[" serialize_options_hash "," request_options "]}," AWS Core Response cache_key":{"type":"method","name":"cache_key","children":[],"call":["(send\n  (send nil :http_request) :access_key_id) join "," serialized_options "," request_type "," http_request host "," http_request "," http_request access_key_id ","(send nil :api_version) join "," api_version "]}," AWS Core Response inspect":{"type":"method","name":"inspect","children":[],"call":[" class "," request_type "," data inspect "," data "]}," AWS Core Response timeout?":{"type":"method","name":"timeout?","children":[],"call":[" http_response timeout? "," http_response "]}," AWS Core Response throttled?":{"type":"method","name":"throttled?","children":[],"call":["parsed_body code == ","parsed_body code ","parsed_body respond_to? ","XmlGrammar  parse "," http_response body "," http_response "," successful? ! "," successful? ","error code == ","error code ","error respond_to? ","error error ","error [] == ","error [] ","XML Parser  new parse ","XML Parser  new ","XmlGrammar  parse  code == ","XmlGrammar  parse  code ","XmlGrammar  parse  respond_to? ","error error  code == ","error []  code == ","XML Parser  new parse  code == ","error error  code ","error []  code ","XML Parser  new parse  code ","error error  respond_to? ","error []  respond_to? ","XML Parser  new parse  respond_to? ","error error  error error  ","XmlGrammar  parse  XmlGrammar  parse  ","error []  error []  ","XML Parser  new parse  XML Parser  new parse  ","error error  [] == ","XmlGrammar  parse  [] == ","error []  [] == ","XML Parser  new parse  [] == ","error error  [] ","XmlGrammar  parse  [] ","error []  [] ","XML Parser  new parse  [] "]}," AWS Core Response successful?":{"type":"method","name":"successful?","children":[],"call":[" error nil? "," error "]}," AWS Core Response rebuild_request":{"type":"method","name":"rebuild_request","children":[],"call":["@request_builder call ","@http_request body_stream rewind ","@http_request body_stream "," build_request ","@request_builder call  body_stream rewind ","@request_builder call  body_stream "]}," AWS Core Response initialize":{"type":"method","name":"initialize","children":[],"call":[" rebuild_request ","http_request ! "," build_request "]}," AWS Core ResourceCache get":{"type":"method","name":"get","children":[],"call":["@cache [] [] ","@cache [] "," raise "," cached? "]}," AWS Core ResourceCache cached?":{"type":"method","name":"cached?","children":[],"call":["attributes has_key? ","@cache [] ","@cache []  has_key? "]}," AWS Core ResourceCache store":{"type":"method","name":"store","children":[],"call":["(or-asgn\n  (send\n    (ivar :@cache) :[]\n    (lvar :key))\n  (hash)) merge! ","@cache [] "]}," AWS Core ResourceCache initialize":{"type":"method","name":"initialize","children":[],"call":[]}," AWS Core Resource AttributeProvider attributes_from_response_object":{"type":"method","name":"attributes_from_response_object","children":[],"call":["attributes []= ","attr translate_output_value ","v value ","options [] ","resp_obj send ","resp_obj respond_to? ","attr get_as ","@klass attributes [] ","@klass attributes ","@provides each ","attributes merge ","v [] ","v nil? ","method to_s ","v key? ","methods each ","(or\n  (send\n    (lvar :options) :[]\n    (sym :from))\n  (send\n    (lvar :attr) :from)) flatten ","attr from ","@provides inject ","resp_obj [] ","resp_obj key? ","(or\n  (send\n    (lvar :options) :[]\n    (sym :get_as))\n  (send\n    (lvar :attr) :get_as)) flatten ","@klass attributes [] ibutes []= ","attr translate_output_attr translate_output_value alue ","attr translate_output_v value alue ","attr translate_output_resp_obj send alue ","attr translate_output_v [] alue ","attr translate_output_resp_obj [] alue ","@klass attributes []  translate_output_value ","attr translate_output_value  attr translate_output_value alue ","v value  v value alue ","resp_obj send  resp_obj send alue ","v []  v [] alue ","resp_obj []  resp_obj [] alue ","@klass attributes []  get_as ","@klass @klass attributes [] ibutes [] ","@klass @klass attributes [] ibutes ","@proattr translate_output_value ides each ","@prov value ides each ","@proresp_obj send ides each ","@prov [] ides each ","@proresp_obj [] ides each ","@klass attributes [] ibutes merge ","attr translate_output_value  [] ","v value  [] ","resp_obj send  [] ","v []  [] ","resp_obj []  [] ","attr translate_output_value  nil? ","v value  nil? ","resp_obj send  nil? ","v []  nil? ","resp_obj []  nil? ","attr translate_output_value  key? ","v value  key? ","resp_obj send  key? ","v []  key? ","resp_obj []  key? ","(or\n  (send\n    (lvar :options) :[]\n    (sym :from))\n  (send\n    (lvar :attr) :from)) flatten  each ","(or\n  (send\n    (lvar :options) :[]\n    (sym :get_as))\n  (send\n    (lvar :attr) :get_as)) flatten  each ","(or\n  (send\n    (lattr translate_output_value ar :options) :[]\n    (sym :from))\n  (send\n    (lattr translate_output_value ar :attr) :from)) flatten ","(or\n  (send\n    (lv value ar :options) :[]\n    (sym :from))\n  (send\n    (lv value ar :attr) :from)) flatten ","(or\n  (send\n    (lresp_obj send ar :options) :[]\n    (sym :from))\n  (send\n    (lresp_obj send ar :attr) :from)) flatten ","(or\n  (send\n    (lv [] ar :options) :[]\n    (sym :from))\n  (send\n    (lv [] ar :attr) :from)) flatten ","(or\n  (send\n    (lresp_obj [] ar :options) :[]\n    (sym :from))\n  (send\n    (lresp_obj [] ar :attr) :from)) flatten ","(or\n  (send\n    (lvar :options) :[]\n    (sym :from))\n  (send\n    (lvar :@klass attributes [] ) :from)) flatten ","@klass attributes []  from ","@proattr translate_output_value ides inject ","@prov value ides inject ","@proresp_obj send ides inject ","@prov [] ides inject ","@proresp_obj [] ides inject ","(or\n  (send\n    (lattr translate_output_value ar :options) :[]\n    (sym :get_as))\n  (send\n    (lattr translate_output_value ar :attr) :get_as)) flatten ","(or\n  (send\n    (lv value ar :options) :[]\n    (sym :get_as))\n  (send\n    (lv value ar :attr) :get_as)) flatten ","(or\n  (send\n    (lresp_obj send ar :options) :[]\n    (sym :get_as))\n  (send\n    (lresp_obj send ar :attr) :get_as)) flatten ","(or\n  (send\n    (lv [] ar :options) :[]\n    (sym :get_as))\n  (send\n    (lv [] ar :attr) :get_as)) flatten ","(or\n  (send\n    (lresp_obj [] ar :options) :[]\n    (sym :get_as))\n  (send\n    (lresp_obj [] ar :attr) :get_as)) flatten ","(or\n  (send\n    (lvar :options) :[]\n    (sym :get_as))\n  (send\n    (lvar :@klass attributes [] ) :get_as)) flatten "]}," AWS Core Resource AttributeProvider attributes_from_response":{"type":"method","name":"attributes_from_response","children":[],"call":[" attributes_from_response_object ","resource send "," finder_method "," attributes_from_resource send  "]}," AWS Core Resource AttributeProvider provides":{"type":"method","name":"provides","children":[],"call":["@provides []= ","attr request_types push "," request_types ","attr request_types ","@klass attributes [] ","@klass attributes ","attr_names each ","attr_names pop ","attr_names last is_a? ","attr_names last ","@klass attributes []  request_types push ","@klass attributes []  request_types ","@klass @klass attributes [] ibutes [] ","@klass @klass attributes [] ibutes ","@klass attributes [] _names each ","@klass attributes [] _names pop ","@klass attributes [] _names last is_a? ","@klass attributes [] _names last "]}," AWS Core Resource AttributeProvider finder_method":{"type":"method","name":"finder_method","children":[],"call":[" request_types join "," request_types "]}," AWS Core Resource AttributeProvider find":{"type":"method","name":"find","children":[],"call":["@klass send "," finder_method "]}," AWS Core Resource AttributeProvider initialize":{"type":"method","name":"initialize","children":[],"call":["klass attribute_providers length ","klass attribute_providers "]}," AWS Core Resource Attribute translate_output_value":{"type":"method","name":"translate_output_value","children":[],"call":["@output_translator call ","value tr downcase to_sym ","value tr downcase ","value tr ","@options [] ","@translates_nil != ","value nil? ","Time  at ","value to_i "]}," AWS Core Resource Attribute translate_input_value":{"type":"method","name":"translate_input_value","children":[],"call":["@input_translator call "]}," AWS Core Resource Attribute translates_output":{"type":"method","name":"translates_output","children":[],"call":["options [] "]}," AWS Core Resource Attribute translates_input":{"type":"method","name":"translates_input","children":[],"call":[]}," AWS Core Resource Attribute static?":{"type":"method","name":"static?","children":[],"call":["@options [] == ","@options [] "]}," AWS Core Resource Attribute mutable?":{"type":"method","name":"mutable?","children":[],"call":["@options [] == ","@options [] "]}," AWS Core Resource Attribute set_as":{"type":"method","name":"set_as","children":[],"call":[" name ","@options [] "]}," AWS Core Resource Attribute get_as":{"type":"method","name":"get_as","children":[],"call":[" name ","@options [] "]}," AWS Core Resource Attribute initialize":{"type":"method","name":"initialize","children":[],"call":[]}," AWS Core Resource provider":{"type":"method","name":"provider","children":[],"call":[" attribute_providers << "," attribute_providers "," block_given? ","AttributeProvider  new "," attribute_AttributeProvider  new s << "," attribute_AttributeProvider  new s "]}," AWS Core Resource populates_from":{"type":"method","name":"populates_from","children":[],"call":["provider provides "," attributes keys "," attributes ","provider find "," provider "," provider  provides "," provider  find ","  provider  "]}," AWS Core Resource define_attribute_setter":{"type":"method","name":"define_attribute_setter","children":[],"call":[" static_attributes []= ","attribute name "," static_attributes ","attribute static? "," update_resource ","attribute translate_input_value "," define_method ","attribute name to_s sub + ","attribute name to_s sub ","attribute name to_s "]}," AWS Core Resource define_attribute_getter":{"type":"method","name":"define_attribute_getter","children":[],"call":[" raise "," ruby_name tr "," ruby_name "," get_resource "," retrieve_attribute "," static_attributes [] ","attribute name "," static_attributes "," static_attributes has_key? "," define_method "," ruby_ ruby_name tr  tr "," ruby_ ruby_name tr  ","attribute  ruby_name tr  "]}," AWS Core Resource mutable_attribute":{"type":"method","name":"mutable_attribute","children":[],"call":[" attribute ","options merge "]}," AWS Core Resource attribute":{"type":"method","name":"attribute","children":[],"call":[" attributes []= ","attr name "," attributes "," define_attribute_setter ","attr mutable? "," define_attribute_getter ","attr instance_eval "," block_given? ","Attribute  new "," alias_method ","options [] "," Attribute  new ibutes []= ","Attribute  new  name "," Attribute  new ibutes "," define_Attribute  new ibute_setter ","Attribute  new  mutable? "," define_Attribute  new ibute_getter ","Attribute  new  instance_eval "]}," AWS Core Resource attribute_providers_for":{"type":"method","name":"attribute_providers_for","children":[],"call":["provider request_types include? ","provider request_types "," attribute_providers select "," attribute_providers "]}," AWS Core Resource attribute_providers":{"type":"method","name":"attribute_providers","children":[],"call":[]}," AWS Core Resource attributes":{"type":"method","name":"attributes","children":[],"call":[" raise ","Hash  new "]}," AWS Core Resource new_from":{"type":"method","name":"new_from","children":[],"call":["resource send "," new "," new  send "]}," AWS Core Resource cache_static_attributes":{"type":"method","name":"cache_static_attributes","children":[],"call":[" static_attributes []= "," static_attributes "," class attributes [] static? "," class attributes [] "," class attributes "," class ","attributes each_pair ","provider attributes_from_response_object "," class attribute_providers_for each "," class attribute_providers_for "," static_provider attributes_from_response_object  []= "," static_provider attributes_from_response_object  "," class provider attributes_from_response_object  [] static? "," class provider attributes_from_response_object  [] "," class provider attributes_from_response_object  ","provider attributes_from_response_object  each_pair ","provider provider attributes_from_response_object _from_response_object "]}," AWS Core Resource attributes_from_response":{"type":"method","name":"attributes_from_response","children":[],"call":["attributes empty? "," static_attributes []= "," static_attributes "," class attributes [] static? "," class attributes [] "," class attributes "," class ","attributes each ","attributes merge! ","provider attributes_from_response "," class attribute_providers_for each "," class attribute_providers_for ","resp request_type ","attributes each_pair ","hash merge ","attributes inject ","attributes compact! ","attributes << "]}," AWS Core Resource ruby_name":{"type":"method","name":"ruby_name","children":[],"call":["Inflection  ruby_name "," class name "," class "]}," AWS Core Resource static_attributes":{"type":"method","name":"static_attributes","children":[],"call":[]}," AWS Core Resource local_cache_key":{"type":"method","name":"local_cache_key","children":[],"call":["(send\n  (send nil :resource_identifiers) :collect) join ","value to_s "," resource_identifiers collect "," resource_identifiers "]}," AWS Core Resource resource_options":{"type":"method","name":"resource_options","children":[],"call":["Hash  [] merge ","Hash  [] "," resource_identifiers "]}," AWS Core Resource resource_identifiers":{"type":"method","name":"resource_identifiers","children":[],"call":[" raise "]}," AWS Core Resource update_resource":{"type":"method","name":"update_resource","children":[],"call":[" raise "]}," AWS Core Resource get_resource":{"type":"method","name":"get_resource","children":[],"call":[" raise "]}," AWS Core Resource ==":{"type":"method","name":"==","children":[],"call":[" resource_identifiers == ","other resource_identifiers "," resource_identifiers ","other kind_of? "," class "]}," AWS Core Resource inspect":{"type":"method","name":"inspect","children":[],"call":["identifiers join "," class ","identifiers << ","attr name ","a get_as == ","a get_as "," class attributes values find "," class attributes values "," class attributes "," resource_identifiers each "," resource_identifiers ","a from == ","a from "]}," AWS Core Resource initialize":{"type":"method","name":"initialize","children":[],"call":[" static_attributes []= "," static_attributes "," class attributes [] static? "," class attributes [] "," class attributes "," class "," class attributes has_key? ","options each_pair ","args last ","args last is_a? ","args last  each_pair "]}," AWS Core Policy Statement resource_arn":{"type":"method","name":"resource_arn","children":[],"call":["resource to_s "]}," AWS Core Policy Statement resource_arns":{"type":"method","name":"resource_arns","children":[],"call":[" resource_arn "," resources map "," resources "]}," AWS Core Policy Statement translated_excluded_actions":{"type":"method","name":"translated_excluded_actions","children":[],"call":[" translate_action "," excluded_actions map "," excluded_actions "]}," AWS Core Policy Statement translated_actions":{"type":"method","name":"translated_actions","children":[],"call":[" translate_action "," actions map "," actions "]}," AWS Core Policy Statement translate_action":{"type":"method","name":"translate_action","children":[],"call":[" class ACTION_MAPPING  [] "," class "," raise "," class ACTION_MAPPING  has_key? ","symbolized action names are only accepted by service  + "," class == "]}," AWS Core Policy Statement principals_hash":{"type":"method","name":"principals_hash","children":[],"call":["principal == "," principals map "," principals "]}," AWS Core Policy Statement coerce_array_option":{"type":"method","name":"coerce_array_option","children":[],"call":[" send ","value kind_of? "]}," AWS Core Policy Statement parse_condition_option":{"type":"method","name":"parse_condition_option","children":[],"call":[" conditions= ","ConditionBlock  new "]}," AWS Core Policy Statement parse_resource_option":{"type":"method","name":"parse_resource_option","children":[],"call":[" coerce_array_option "]}," AWS Core Policy Statement parse_principal_option":{"type":"method","name":"parse_principal_option","children":[],"call":[" coerce_array_option ","value [] ","value kind_of? "]}," AWS Core Policy Statement parse_not_action_option":{"type":"method","name":"parse_not_action_option","children":[],"call":[" coerce_array_option "]}," AWS Core Policy Statement parse_action_option":{"type":"method","name":"parse_action_option","children":[],"call":[" coerce_array_option "]}," AWS Core Policy Statement parse_sid_option":{"type":"method","name":"parse_sid_option","children":[],"call":[" sid= "]}," AWS Core Policy Statement parse_effect_option":{"type":"method","name":"parse_effect_option","children":[],"call":[" effect= "]}," AWS Core Policy Statement parse_options":{"type":"method","name":"parse_options","children":[],"call":[" send "," respond_to? ","name sub! ","Inflection  ruby_name ","name to_s ","options each ","Inflection  ruby_name  sub! ","Inflection  ruby_Inflection  ruby_name  ","Inflection  ruby_name  to_s "]}," AWS Core Policy Statement to_h":{"type":"method","name":"to_h","children":[],"call":["stmt []= "," translated_actions "," translated_excluded_actions "," translated_actions empty? "," translated_actions ! ","stmt delete "," principals_hash "," conditions to_h empty? "," conditions to_h "," conditions "," conditions ! "," resource_arns ","Inflection  class_name "," effect to_s "," effect "," sid "," excluded_resource_arns "]}," AWS Core Policy Statement exclude_actions":{"type":"method","name":"exclude_actions","children":[],"call":[" excluded_actions push "," excluded_actions "]}," AWS Core Policy Statement include_actions":{"type":"method","name":"include_actions","children":[],"call":[" actions push "," actions "]}," AWS Core Policy Statement initialize":{"type":"method","name":"initialize","children":[],"call":[" block_given? "," parse_options "," conditions= ","ConditionBlock  new "," sid= ","UUIDTools UUID  timestamp_create to_s tr ","UUIDTools UUID  timestamp_create to_s ","UUIDTools UUID  timestamp_create ","SecureRandom  uuid tr ","SecureRandom  uuid "]}," AWS Core Policy ConditionBlock strip_modifiers":{"type":"method","name":"strip_modifiers","children":[],"call":["operator to_s sub to_sym ","operator to_s sub ","operator to_s ","opts []= ","operator to_s =~ ","Inflection  ruby_name to_sym ","Inflection  ruby_name ","MODIFIERS  each ","operator to_s sub to_sym  to_s sub to_sym ","operator to_s sub to_sym  to_s sub ","operator to_s sub to_sym  to_s ","operator to_s sub to_sym  to_s =~ ","Inflection  Inflection  ruby_name to_sym  to_sym ","Inflection  Inflection  ruby_name to_sym  "]}," AWS Core Policy ConditionBlock convert_value":{"type":"method","name":"convert_value","children":[],"call":["value strftime ","Time  parse iso8601 ","Time  parse ","value to_s "]}," AWS Core Policy ConditionBlock type_notation":{"type":"method","name":"type_notation","children":[],"call":[]}," AWS Core Policy ConditionBlock base_translate":{"type":"method","name":"base_translate","children":[],"call":["modifiers join "," type_notation "]}," AWS Core Policy ConditionBlock translate_not_arn_like":{"type":"method","name":"translate_not_arn_like","children":[],"call":[]}," AWS Core Policy ConditionBlock translate_is_arn_like":{"type":"method","name":"translate_is_arn_like","children":[],"call":[]}," AWS Core Policy ConditionBlock translate_not_arn":{"type":"method","name":"translate_not_arn","children":[],"call":[]}," AWS Core Policy ConditionBlock translate_is_arn":{"type":"method","name":"translate_is_arn","children":[],"call":[]}," AWS Core Policy ConditionBlock translate_not_ip_address":{"type":"method","name":"translate_not_ip_address","children":[],"call":[]}," AWS Core Policy ConditionBlock translate_is_ip_address":{"type":"method","name":"translate_is_ip_address","children":[],"call":[]}," AWS Core Policy ConditionBlock translate_gte":{"type":"method","name":"translate_gte","children":[],"call":[" translate_greater_than "]}," AWS Core Policy ConditionBlock translate_greater_than":{"type":"method","name":"translate_greater_than","children":[],"call":[" base_translate ","opts [] "]}," AWS Core Policy ConditionBlock translate_lte":{"type":"method","name":"translate_lte","children":[],"call":[" translate_less_than "]}," AWS Core Policy ConditionBlock translate_less_than":{"type":"method","name":"translate_less_than","children":[],"call":[" base_translate ","opts [] "]}," AWS Core Policy ConditionBlock translate_not_like":{"type":"method","name":"translate_not_like","children":[],"call":[" base_translate "]}," AWS Core Policy ConditionBlock translate_like":{"type":"method","name":"translate_like","children":[],"call":[" base_translate "]}," AWS Core Policy ConditionBlock translate_not":{"type":"method","name":"translate_not","children":[],"call":[" base_translate ","opts [] "]}," AWS Core Policy ConditionBlock translate_is":{"type":"method","name":"translate_is","children":[],"call":[" base_translate ","opts [] "," type_notation == "," type_notation "]}," AWS Core Policy ConditionBlock translate_operator":{"type":"method","name":"translate_operator","children":[],"call":[" send "," raise ","ArgumentError  new "," respond_to? "," strip_modifiers ","operator kind_of? "]}," AWS Core Policy ConditionBlock valid_operator?":{"type":"method","name":"valid_operator?","children":[],"call":[" translate_operator "]}," AWS Core Policy ConditionBlock translate_key":{"type":"method","name":"translate_key","children":[],"call":["Inflection  class_name ","key to_s ","s3_name tr! ","s3_name == ","key to_s =~ ","key kind_of? ","Inflection  class_name  tr! ","Inflection  class_name  == "]}," AWS Core Policy ConditionBlock filter_conditions":{"type":"method","name":"filter_conditions","children":[],"call":["m delete ","m [] empty? ","m [] ","m []= ","m2 []= "," block_given? ! "," block_given? ","keys inject ","conditions inject "]}," AWS Core Policy ConditionBlock match_key":{"type":"method","name":"match_key","children":[],"call":[" translate_key == "," translate_key "]}," AWS Core Policy ConditionBlock match_operator":{"type":"method","name":"match_operator","children":[],"call":[" translate_operator == "," translate_operator ","Date  today ","op =~ "]}," AWS Core Policy ConditionBlock match_triple":{"type":"method","name":"match_triple","children":[],"call":[" match_key "," match_operator "," send ","type == ","(lvar :value) flatten first ","(lvar :value) flatten ","  send _key ","  send _operator ","(lvar :(lvar :value) flatten first ) flatten first ","(lvar :(lvar :value) flatten first ) flatten "]}," AWS Core Policy ConditionBlock values":{"type":"method","name":"values","children":[],"call":["(send\n  (send\n    (ivar :@conditions) :values) :map) compact flatten ","(send\n  (send\n    (ivar :@conditions) :values) :map) compact ","keys values ","@conditions values map ","@conditions values "]}," AWS Core Policy ConditionBlock keys":{"type":"method","name":"keys","children":[],"call":["(send\n  (send\n    (ivar :@conditions) :values) :map) compact flatten uniq ","(send\n  (send\n    (ivar :@conditions) :values) :map) compact flatten ","(send\n  (send\n    (ivar :@conditions) :values) :map) compact ","keys keys ","@conditions values map ","@conditions values "]}," AWS Core Policy ConditionBlock operators":{"type":"method","name":"operators","children":[],"call":["@conditions keys "]}," AWS Core Policy ConditionBlock []":{"type":"method","name":"[]","children":[],"call":[" class new "," class "," match_triple "," filter_conditions "," valid_operator? ","args each "]}," AWS Core Policy ConditionBlock to_h":{"type":"method","name":"to_h","children":[],"call":[]}," AWS Core Policy ConditionBlock add":{"type":"method","name":"add","children":[],"call":["op []= "," translate_key "," raise ","op [] ","@conditions [] "," translate_operator ","values first "," convert_value ","values map ","operator kind_of? "," translate_ translate_operator  "," translate_operator  kind_of? "]}," AWS Core Policy ConditionBlock initialize":{"type":"method","name":"initialize","children":[],"call":[" filter_conditions "]}," AWS Core Policy deny":{"type":"method","name":"deny","children":[],"call":["ConditionBuilder  new ","stmt conditions "," statements << "," statements "," class Statement  new ","opts merge "," class "," class Statement  new  conditions "]}," AWS Core Policy allow":{"type":"method","name":"allow","children":[],"call":["ConditionBuilder  new ","stmt conditions "," statements << "," statements "," class Statement  new ","opts merge "," class "," class Statement  new  conditions "]}," AWS Core Policy ConditionBuilder where":{"type":"method","name":"where","children":[],"call":["OperatorBuilder  new ","@conditions add "]}," AWS Core Policy ConditionBuilder initialize":{"type":"method","name":"initialize","children":[],"call":[]}," AWS Core Policy OperatorBuilder method_missing":{"type":"method","name":"method_missing","children":[],"call":["@condition_builder conditions add ","@condition_builder conditions "]}," AWS Core Policy OperatorBuilder initialize":{"type":"method","name":"initialize","children":[],"call":[]}," AWS Core Policy from_json":{"type":"method","name":"from_json","children":[],"call":[]}," AWS Core Policy to_json":{"type":"method","name":"to_json","children":[],"call":[" to_h to_json "," to_h "]}," AWS Core Policy to_h":{"type":"method","name":"to_h","children":[],"call":["st to_h "," statements map "," statements "," id "," version "]}," AWS Core Policy hash_without_ids":{"type":"method","name":"hash_without_ids","children":[],"call":["statement delete ","hash [] each ","hash [] ","hash delete "," to_h "," to_h  [] each "," to_h  [] "," to_h  delete "]}," AWS Core Policy ==":{"type":"method","name":"==","children":[],"call":[" hash_without_ids == ","other hash_without_ids "," hash_without_ids ","other kind_of? "]}," AWS Core Policy initialize":{"type":"method","name":"initialize","children":[],"call":[" block_given? ","opts [] ","opts has_key? ","UUIDTools UUID  timestamp_create to_s tr ","UUIDTools UUID  timestamp_create to_s ","UUIDTools UUID  timestamp_create "," class Statement  new "," class ","(send\n  (send\n    (lvar :opts) :values_at\n    (sym :statements)\n    (str \"Statement\")) :select) flatten map ","(send\n  (send\n    (lvar :opts) :values_at\n    (sym :statements)\n    (str \"Statement\")) :select) flatten ","a kind_of? ","opts values_at select ","opts values_at ","SecureRandom  uuid tr ","SecureRandom  uuid "]}," AWS Core OptionGrammar ModuleMethods apply_rename_descriptor":{"type":"method","name":"apply_rename_descriptor","children":[],"call":["method call ","MetaUtils  extend_method ","m method ","opts delete ","new_name to_sym ","opts []= ","opts [] ","name to_sym ","opts key? ","opts dup "," raise ","ArgumentError  new "," ruby_name ","m method  call ","MetaUtils  extend_m method  ","m m method  ","opts dup  delete ","new_ ruby_name  to_sym ","opts dup  []= ","opts dup  [] "," ruby_name  to_sym ","opts dup  key? ","opts dup  dup "," ruby_ ruby_name  "]}," AWS Core OptionGrammar ModuleMethods apply_list_descriptor":{"type":"method","name":"apply_list_descriptor","children":[],"call":["Http Request Param  new ","i > ","values << ","member to_s ","name + + ","i to_s ","name + ","value each ","MetaUtils  extend_method "," ruby_name "," raise ","ArgumentError  new ","(str \"expected value for option \") + ","value respond_to? "]}," AWS Core OptionGrammar ModuleMethods apply_string_descriptor":{"type":"method","name":"apply_string_descriptor","children":[],"call":[" raise ","ArgumentError  new "," ruby_name ","value respond_to? ","MetaUtils  extend_method "]}," AWS Core OptionGrammar ModuleMethods apply_integer_descriptor":{"type":"method","name":"apply_integer_descriptor","children":[],"call":[" raise ","ArgumentError  new "," ruby_name ","value respond_to? ","MetaUtils  extend_method "]}," AWS Core OptionGrammar ModuleMethods apply_required_descriptor":{"type":"method","name":"apply_required_descriptor","children":[],"call":[" raise ","ArgumentError  new ","opts key? ","name to_sym ","MetaUtils  extend_method "," ruby_name "," ruby_name  to_sym "," ruby_ ruby_name  "]}," AWS Core OptionGrammar ModuleMethods parse_option":{"type":"method","name":"parse_option","children":[],"call":[" raise ","ArgumentError  new ","expected an array for  + + ","value_desc inspect ","expected an array for  + ","value_desc kind_of? ","value_desc nil? ","name to_s ","option to_a first ","option to_a ","option size > ","option size ","option empty? ","option kind_of? ","name to_s  to_s "]}," AWS Core OptionGrammar ModuleMethods included":{"type":"method","name":"included","children":[],"call":["m extend "]}," AWS Core OptionGrammar ModuleMethods request_params":{"type":"method","name":"request_params","children":[],"call":["(send\n  (lvar :options) :map) flatten "," option request_params "," option ","name to_s ","options map "," validate ","name to_s  to_s "]}," AWS Core OptionGrammar ModuleMethods validate":{"type":"method","name":"validate","children":[],"call":[" raise ","ArgumentError  new ","option ruby_name ","options has_key? ","option ruby_name to_sym ","option required? ! ","option required? "," supported_options each "," supported_options "," option validate "," option ","name to_s ","options each ","option ruby_name to_s  ","option ruby_name to_s  to_sym ","name to_s  to_s "]}," AWS Core OptionGrammar ModuleMethods supported_options":{"type":"method","name":"supported_options","children":[],"call":[]}," AWS Core OptionGrammar ModuleMethods option":{"type":"method","name":"option","children":[],"call":[]}," AWS Core OptionGrammar ModuleMethods customize":{"type":"method","name":"customize","children":[],"call":["opt validate ","MetaUtils  extend_method ","opt ruby_name ","supported_ary each ","supported_ruby_names [] ","memo []= ","supported_ary inject ","supported_options values ","supported_options []= ","option name ","option extend_with_config ","DefaultOption  new ","supported_options [] "," parse_option ","config kind_of? ","config each ","opt name ","m supported_options inject ","m supported_options ","Class  new ","MetaUtils  extend_Class  new ethod ","opt ruby_naClass  new e ","supported_options values  each ","supported_ruby_naClass  new es [] ","Class  new eClass  new o []= ","supported_options values  inject ","supported_option extend_with_config s values ","supported_option extend_with_config s []= ","option extend_with_config  name ","option naClass  new e ","option extend_with_config  extend_with_config ","supported_option extend_with_config s [] "," parse_option extend_with_config  ","opt naClass  new e ","m supported_option extend_with_config s inject ","Class  new  supported_options inject ","m supported_option extend_with_config s ","Class  new  supported_options "]}," AWS Core OptionGrammar DefaultOption extend_with_config":{"type":"method","name":"extend_with_config","children":[],"call":["mod apply ","Descriptors  const_get ","Inflection  class_name ","name to_s ","desc to_a first ","desc to_a ","desc kind_of? ","descriptors each "," clone ","name == ","Descriptors  const_get  apply ","Inflection  Inflection  class_name  "]}," AWS Core OptionGrammar DefaultOption context_description":{"type":"method","name":"context_description","children":[],"call":[" ruby_name "]}," AWS Core OptionGrammar DefaultOption format_error":{"type":"method","name":"format_error","children":[],"call":["FormatError  new "," context_description ","  context_description _description "]}," AWS Core OptionGrammar DefaultOption required?":{"type":"method","name":"required?","children":[],"call":[]}," AWS Core OptionGrammar DefaultOption encode_value":{"type":"method","name":"encode_value","children":[],"call":[]}," AWS Core OptionGrammar DefaultOption prefixed_name":{"type":"method","name":"prefixed_name","children":[],"call":[" name "]}," AWS Core OptionGrammar DefaultOption request_params":{"type":"method","name":"request_params","children":[],"call":["Http Request Param  new "," encode_value "," prefixed_name "]}," AWS Core OptionGrammar DefaultOption ruby_name":{"type":"method","name":"ruby_name","children":[],"call":["Inflection  ruby_name "," name "]}," AWS Core OptionGrammar DefaultOption initialize":{"type":"method","name":"initialize","children":[],"call":[]}," AWS Core OptionGrammar Descriptors Structure request_params":{"type":"method","name":"request_params","children":[],"call":["(send\n  (lvar :values) :map) flatten "," member_option request_params "," prefixed_name "," member_option ","name to_s ","values map "," prefixed_name to_s  ","name to_s  to_s "]}," AWS Core OptionGrammar Descriptors Structure validate":{"type":"method","name":"validate","children":[],"call":[" raise ","ArgumentError  new ","option ruby_name ","value has_key? ! ","value has_key? ","option ruby_name to_sym ","option required? "," member_options each "," member_options "," member_option validate "," member_option ","name to_s ","value each "," context_description "," format_error ","value respond_to? ","option name ","option ruby_name to_s  ","option ruby_name to_s  to_sym ","name to_s  to_s ","  context_description _description ","option name to_s  "]}," AWS Core OptionGrammar Descriptors Structure apply":{"type":"method","name":"apply","children":[],"call":[]}," AWS Core OptionGrammar Descriptors ListMember prefixed_name":{"type":"method","name":"prefixed_name","children":[],"call":[]}," AWS Core OptionGrammar Descriptors ListMember initialize":{"type":"method","name":"initialize","children":[],"call":["options [] "]}," AWS Core OptionGrammar Descriptors MemberedList join":{"type":"method","name":"join","children":[],"call":[]}," AWS Core OptionGrammar Descriptors ListMethods InstanceMethods join":{"type":"method","name":"join","children":[],"call":[]}," AWS Core OptionGrammar Descriptors ListMethods InstanceMethods request_params":{"type":"method","name":"request_params","children":[],"call":["Http Request Param  new "," prefixed_name ","params empty? ","params << "," member_option request_params "," member_option "," prefixed_name + + ","(send\n  (send\n    (lvar :params) :size) :+\n  (int 1)) to_s ","params size + ","params size "," prefixed_name + "," join ","value each "," prefixed_ prefixed_name + +  "," prefixed_ prefixed_name + +  + + "," prefixed_ prefixed_name + +  + "]}," AWS Core OptionGrammar Descriptors ListMethods InstanceMethods validate":{"type":"method","name":"validate","children":[],"call":[" member_option validate "," context_description "," member_option ","value each "," raise "," format_error ","value respond_to? "]}," AWS Core OptionGrammar Descriptors ListMethods ClassMethods apply":{"type":"method","name":"apply","children":[],"call":["MetaUtils  extend_method ","member_option extend_with_config ","ListMember  new ","option member_option ","option respond_to? ","descriptors << ","descriptor [] ","descriptor is_a? ","member_descriptors each ","member_option extend_with_config  extend_with_config ","option member_option  extend_with_config ","option member_option extend_with_config  ","option option member_option  "]}," AWS Core OptionGrammar Descriptors Pattern apply":{"type":"method","name":"apply","children":[],"call":[]}," AWS Core OptionGrammar Descriptors Rename apply":{"type":"method","name":"apply","children":[],"call":[]}," AWS Core OptionGrammar Descriptors Required required?":{"type":"method","name":"required?","children":[],"call":[]}," AWS Core OptionGrammar Descriptors Boolean encode_value":{"type":"method","name":"encode_value","children":[],"call":["value to_s "]}," AWS Core OptionGrammar Descriptors Boolean validate":{"type":"method","name":"validate","children":[],"call":[" raise "," format_error ","value == "]}," AWS Core OptionGrammar Descriptors Integer encode_value":{"type":"method","name":"encode_value","children":[],"call":["value to_s "]}," AWS Core OptionGrammar Descriptors Integer validate":{"type":"method","name":"validate","children":[],"call":[" raise "," format_error ","value respond_to? "]}," AWS Core OptionGrammar Descriptors Blob encode_value":{"type":"method","name":"encode_value","children":[],"call":["Base64  encode64 ","value to_s ","(send\n  (lvar :value) :to_s) pack gsub ","(send\n  (lvar :value) :to_s) pack ","Base64  strict_encode64 "]}," AWS Core OptionGrammar Descriptors Blob validate":{"type":"method","name":"validate","children":[],"call":[" raise "," format_error ","value respond_to? "]}," AWS Core OptionGrammar Descriptors String encode_value":{"type":"method","name":"encode_value","children":[],"call":["value to_s "]}," AWS Core OptionGrammar Descriptors String validate":{"type":"method","name":"validate","children":[],"call":[" raise "," format_error ","value respond_to? "]}," AWS Core OptionGrammar Descriptors Timestamp encode_value":{"type":"method","name":"encode_value","children":[],"call":["value to_s "]}," AWS Core OptionGrammar Descriptors Timestamp validate":{"type":"method","name":"validate","children":[],"call":[]}," AWS Core OptionGrammar Descriptors NoArgs apply":{"type":"method","name":"apply","children":[],"call":["option extend "]}," AWS Core OptionGrammar FormatError to_s":{"type":"method","name":"to_s","children":[],"call":[" context_description "," expectation "]}," AWS Core OptionGrammar FormatError initialize":{"type":"method","name":"initialize","children":[],"call":[]}," AWS Core Naming service_ruby_name":{"type":"method","name":"service_ruby_name","children":[],"call":["Inflection  ruby_name "," service_name "]}," AWS Core Naming service_name":{"type":"method","name":"service_name","children":[],"call":[" name split [] "," name split "," name "]}," AWS Core Model inspect":{"type":"method","name":"inspect","children":[],"call":[" class "]}," AWS Core Model config_prefix":{"type":"method","name":"config_prefix","children":[],"call":["Inflection  ruby_name "," class to_s split [] "," class to_s split "," class to_s "," class "]}," AWS Core Model client":{"type":"method","name":"client","children":[],"call":["@config send "," config_prefix "]}," AWS Core Model initialize":{"type":"method","name":"initialize","children":[],"call":["AWS  config ","args first config ","args first ","args first respond_to? ","options [] ","args last ","args last kind_of? ","args last  [] "]}," AWS Core MetaUtils extend":{"type":"method","name":"extend","children":[],"call":["object extend ","Module  new "]}," AWS Core MetaUtils class_extend_method":{"type":"method","name":"class_extend_method","children":[],"call":["klass send "," define_method ","Module  new "]}," AWS Core MetaUtils extend_method":{"type":"method","name":"extend_method","children":[],"call":["object extend "," define_method ","Module  new "]}," AWS Core LazyErrorClasses included":{"type":"method","name":"included","children":[],"call":[]}," AWS Core LazyErrorClasses ClassMethods included":{"type":"method","name":"included","children":[],"call":[" raise ","NotImplementedError  new ","(begin\n  (self)) + + ","(begin\n  (self)) + "]}," AWS Core LazyErrorClasses ClassMethods error_class":{"type":"method","name":"error_class","children":[],"call":[" module_eval ","code gsub ","code gsub gsub "]}," AWS Core LazyErrorClasses ClassMethods const_missing":{"type":"method","name":"const_missing","children":[],"call":[" const_set "," include ","Class  new "," const_defined? "," const_missing_mutex synchronize "," const_missing_mutex "]}," AWS Core Inflection class_name":{"type":"method","name":"class_name","children":[],"call":["m [] upcase ","m [] ","(send\n  (lvar :name) :sub\n  (regexp\n    (str \"^(.)\")\n    (regopt))) gsub ","m upcase ","name sub "]}," AWS Core Inflection ruby_name":{"type":"method","name":"ruby_name","children":[],"call":["aws_name sub gsub scan join downcase ","aws_name sub gsub scan join ","aws_name sub gsub scan ","aws_name sub gsub ","aws_name sub ","aws_name == ","inflector [] ","inflector []= ","key sub gsub scan join downcase ","key sub gsub scan join ","key sub gsub scan ","key sub gsub ","key sub ","Hash  new "]}," AWS Core IndifferentHash _convert_key":{"type":"method","name":"_convert_key","children":[],"call":["key to_s ","key is_a? "]}," AWS Core IndifferentHash delete":{"type":"method","name":"delete","children":[],"call":[" _convert_key "]}," AWS Core IndifferentHash fetch":{"type":"method","name":"fetch","children":[],"call":[" _convert_key "]}," AWS Core IndifferentHash has_key?":{"type":"method","name":"has_key?","children":[],"call":[" _convert_key "]}," AWS Core IndifferentHash merge":{"type":"method","name":"merge","children":[],"call":[" dup merge! "," dup "]}," AWS Core IndifferentHash merge!":{"type":"method","name":"merge!","children":[],"call":[" []= ","hash each_pair "]}," AWS Core IndifferentHash []":{"type":"method","name":"[]","children":[],"call":[" _getter "," _convert_key "]}," AWS Core IndifferentHash []=":{"type":"method","name":"[]=","children":[],"call":[" _setter "," _convert_key "]}," AWS Core IndifferentHash initialize":{"type":"method","name":"initialize","children":[],"call":[" merge! ","args first is_a? ","args first "]}," AWS Core IgnoreResultElement process_customizations":{"type":"method","name":"process_customizations","children":[],"call":[]}," AWS Core Http Response header":{"type":"method","name":"header","children":[],"call":["header_value first ","header_value is_a? ","header_name downcase == ","name to_s downcase ","name to_s ","header_name downcase "," headers each_pair "," headers "]}," AWS Core Http Response initialize":{"type":"method","name":"initialize","children":[],"call":[" block_given? ","options [] "]}," AWS Core Http Request Param encoded":{"type":"method","name":"encoded","children":[],"call":[" escape "," name "," value "]}," AWS Core Http Request Param ==":{"type":"method","name":"==","children":[],"call":[" to_s == ","other to_s "," to_s ","other kind_of? "]}," AWS Core Http Request Param to_s":{"type":"method","name":"to_s","children":[],"call":[" name "," value "]}," AWS Core Http Request Param <=>":{"type":"method","name":"<=>","children":[],"call":["@name <=> ","other name "," name <=> "," name "]}," AWS Core Http Request Param initialize":{"type":"method","name":"initialize","children":[],"call":[]}," AWS Core Http Request CaseInsensitiveHash has_key?":{"type":"method","name":"has_key?","children":[],"call":["key to_s downcase ","key to_s "]}," AWS Core Http Request CaseInsensitiveHash []":{"type":"method","name":"[]","children":[],"call":["key to_s downcase ","key to_s "]}," AWS Core Http Request CaseInsensitiveHash []=":{"type":"method","name":"[]=","children":[],"call":["key to_s downcase ","key to_s "]}," AWS Core Http Request body":{"type":"method","name":"body","children":[],"call":[" url_encoded_params ","StringIO  new ","@body_stream rewind ","@body_stream respond_to? ","@body_stream read ","StringIO  new  rewind ","@body_stream read _stream rewind ","StringIO  new  respond_to? ","@body_stream read _stream respond_to? ","StringIO  new  read ","@body_stream read _stream read "]}," AWS Core Http Request querystring":{"type":"method","name":"querystring","children":[],"call":[" uri split [] "," uri split "," uri "]}," AWS Core Http Request url_encoded_params":{"type":"method","name":"url_encoded_params","children":[],"call":["(send\n  (send\n    (ivar :@params) :sort) :collect) join ","p encoded ","@params sort collect ","@params sort ","@params empty? "," params sort collect join "," params sort collect "," params sort "," params "," params empty? "]}," AWS Core Http Request uri":{"type":"method","name":"uri","children":[],"call":[" path "," querystring "]}," AWS Core Http Request get_param":{"type":"method","name":"get_param","children":[],"call":[" raise ","p name == ","p name ","@params detect "]}," AWS Core Http Request add_param":{"type":"method","name":"add_param","children":[],"call":["@params << ","Param  new ","name_or_param kind_of? "]}," AWS Core Http Request ssl_ca_file":{"type":"method","name":"ssl_ca_file","children":[],"call":[]}," AWS Core Http Request ssl_ca_file=":{"type":"method","name":"ssl_ca_file=","children":[],"call":[]}," AWS Core Http Request ssl_verify_peer?":{"type":"method","name":"ssl_verify_peer?","children":[],"call":[]}," AWS Core Http Request ssl_verify_peer=":{"type":"method","name":"ssl_verify_peer=","children":[],"call":[]}," AWS Core Http Request use_ssl?":{"type":"method","name":"use_ssl?","children":[],"call":[]}," AWS Core Http Request use_ssl=":{"type":"method","name":"use_ssl=","children":[],"call":[]}," AWS Core Http Request initialize":{"type":"method","name":"initialize","children":[],"call":["CaseInsensitiveHash  new "]}," AWS Core Http NetHttpHandler build_request":{"type":"method","name":"build_request","children":[],"call":["net_http_req body= ","request body ","req_class new ","request uri "," raise ","request http_method ","headers []= ","value to_s ","request headers each_pair ","request headers ","req_class new  body= "]}," AWS Core Http NetHttpHandler build_http":{"type":"method","name":"build_http","children":[],"call":["http use_ssl= ","http verify_mode= ","http ca_file= ","request ssl_ca_file ","request ssl_verify_peer? ","request use_ssl? ","Net HTTP  new ","http_args << ","proxy password ","proxy user ","proxy port ","proxy host ","proxy request_uri ","proxy respond_to? ","request proxy_uri ","request host ","Net HTTP  new  use_ssl= ","Net HTTP  new  verify_mode= ","Net HTTP  new  ca_file= ","Net HTTP  new _args << ","request proxy_uri  password ","request proxy_uri  user ","request proxy_uri  port ","request proxy_uri  host ","request proxy_uri  request_uri ","request proxy_uri  respond_to? ","request request proxy_uri _uri "]}," AWS Core Http NetHttpHandler http_session_for":{"type":"method","name":"http_session_for","children":[],"call":["http finish ","http started? ","http start "," build_http "," build_http  finish "," build_http  started? "," build_http  start "," build_ build_http  "]}," AWS Core Http NetHttpHandler handle":{"type":"method","name":"handle","children":[],"call":["response timeout= ","response headers= ","http_resp to_hash ","response status= ","http_resp code to_i ","http_resp code ","response body= ","http_resp body ","http request "," build_request "," http_session_for ","response network_error= "," raise ","net_http_resp read_body ","response status < ","response status "," block_given? ","net_http_resp to_hash ","net_http_resp code to_i ","net_http_resp code "," build_net_http_request ","http continue_timeout= ","request continue_timeout ","http respond_to? ","http read_timeout= ","request read_timeout ","@pool session_for ","request endpoint ","act_length != ","request http_method != ","request http_method ","exp_length nil? == ","exp_length nil? ","response body bytesize ","response body ","response body nil? ","data bytesize "," determine_expected_content_length ","http_response to_hash ","http_response code to_i ","http_response code ","http_response body ","connection request "," class pool connection_for ","request host "," class pool "," class ","options []= ","request ssl_ca_file ","request ssl_verify_peer? ","request proxy_uri ","request use_ssl? ","request ssl_ca_path ","connection read_timeout= ","data empty? ","request port "," pool connection_for "," pool ","http_resp read_body ","http request  to_hash ","http request  code to_i ","http request  code ","http request  body ","net_http request  read_body ","net_http request  to_hash ","net_http request  code to_i ","net_http request  code "," determine_expected_content_length  nil? == "," determine_expected_content_length  nil? ","http request onse to_hash ","connection request  to_hash ","http request onse code to_i ","connection request  code to_i ","http request onse code ","connection request  code ","http request onse body ","connection request  body "," class pool connection_for  request "," pool connection_for  request "," class pool  class pool connection_for _for "," class pool  pool connection_for _for "," class pool connection_for  read_timeout= "," pool connection_for  read_timeout= "," pool  class pool connection_for _for "," pool  pool connection_for _for ","http request  read_body "]}," AWS Core Http HTTPartyHandler handle":{"type":"method","name":"handle","children":[],"call":["response headers= ","http_response to_hash ","response status= ","http_response code to_i ","http_response code ","response body= ","http_response body ","response timeout= "," class send "," class ","opts []= ","headers []= ","value to_s ","request headers each_pair ","request headers ","request http_method downcase ","request http_method ","request uri ","request host ","request ssl_ca_file ","request ssl_verify_peer? ","request use_ssl? ","request proxy_uri port ","request proxy_uri ","request proxy_uri host "," default_request_options merge ","request body "," default_request_options ","request port ","http_response nil? "," class send  to_hash "," class send  code to_i "," class send  code "," class send  body "," default_request_options merge  []= ","request http_request http_method downcase  downcase ","request http_request http_method downcase  "," class send  nil? "]}," AWS Core Http HTTPartyHandler initialize":{"type":"method","name":"initialize","children":[],"call":[]}," AWS Core Http Handler sleep_with_callback":{"type":"method","name":"sleep_with_callback","children":[],"call":["Kernel  sleep "]}," AWS Core Http Handler handle_async":{"type":"method","name":"handle_async","children":[],"call":["handle signal_success ","handle signal_failure "," handle ","Thread  new "]}," AWS Core Http Handler handle":{"type":"method","name":"handle","children":[],"call":["@base handle "]}," AWS Core Http Handler initialize":{"type":"method","name":"initialize","children":[],"call":[" raise "," define_method ","MetaUtils  extend ","@base handle_async ","MetaUtils  extend_method ","block arity == ","block arity ","base respond_to? "," extend "," eval ","Module  new ","(int 2) include? "]}," AWS Core Http CurbHandler make_easy_handle":{"type":"method","name":"make_easy_handle","children":[],"call":["thread run ","response status= ","curl response_code ","response body= ","curl body_str ","curl on_complete ","curl delete= ","curl post_body= ","request body ","curl put_data= ","curl head= ","request http_method ","header_data length ","response headers []= ","response headers ","header_data strip split ","header_data strip ","curl on_header ","curl proxy_port= ","proxy port ","curl proxy_url= ","proxy to_s ","request proxy_uri ","curl headers= ","request headers ","Curl Easy  new ","request uri ","request host ","request use_ssl? ","buffer read ","buffer rewind ","chunk size ","buffer << ","curl on_body ","read_block call ","StringIO  new ","curl headers []= ","curl headers [] ","curl headers ","header_data =~ ","request headers each ","request port ","buffer join ","Curl Easy  new  response_code ","Curl Easy  new  body_str ","Curl Easy  new  on_complete ","Curl Easy  new  delete= ","Curl Easy  new  post_body= ","Curl Easy  new  put_data= ","Curl Easy  new  head= ","Curl Easy  new  on_header ","curl request proxy_uri _port= ","Curl Easy  new  proxy_port= ","request proxy_uri  port ","curl request proxy_uri _url= ","Curl Easy  new  proxy_url= ","request proxy_uri  to_s ","request request proxy_uri _uri ","Curl Easy  new  headers= ","StringIO  new  read ","StringIO  new  rewind ","StringIO  new  << ","Curl Easy  new  on_body ","Curl Easy  new  headers []= ","Curl Easy  new  headers [] ","Curl Easy  new  headers ","StringIO  new  join "]}," AWS Core Http CurbHandler start_processor":{"type":"method","name":"start_processor","children":[],"call":["Thread  stop ","@q empty? ","@sem unlock "," fill_multi ","@q slice! ","@sem try_lock ","@q empty? ! ","@multi perform ","items empty? ","@sem synchronize "," loop ","Thread  new ","@q slice!  empty? "]}," AWS Core Http CurbHandler fill_multi":{"type":"method","name":"fill_multi","children":[],"call":["@multi add "," make_easy_handle ","items each ","items ea make_easy_handle h "]}," AWS Core Http CurbHandler handle":{"type":"method","name":"handle","children":[],"call":["Thread  stop ","@processor wakeup ","@q << ","Thread  current ","@sem synchronize "," raise ","request http_method ","(str \"GET\") include? "," start_processor "]}," AWS Core Http CurbHandler initialize":{"type":"method","name":"initialize","children":[],"call":[" start_processor ","Curl Multi  new ","Mutex  new "]}," AWS Core DefaultSigner sign":{"type":"method","name":"sign","children":[],"call":["Base64  encode64 strip ","Base64  encode64 ","OpenSSL HMAC  digest "," secret_access_key ","OpenSSL Digest Digest  new "]}," AWS Core DefaultSigner initialize":{"type":"method","name":"initialize","children":[],"call":[" raise "]}," AWS Core ConfiguredXmlGrammars included":{"type":"method","name":"included","children":[],"call":[]}," AWS Core ConfiguredXmlGrammars ClassMethods input_or_output":{"type":"method","name":"input_or_output","children":[],"call":[]}," AWS Core ConfiguredXmlGrammars ClassMethods base_grammar":{"type":"method","name":"base_grammar","children":[],"call":[" const_get "," const_defined? "]}," AWS Core ConfiguredOptionGrammars included":{"type":"method","name":"included","children":[],"call":[]}," AWS Core ConfiguredOptionGrammars ClassMethods input_or_output":{"type":"method","name":"input_or_output","children":[],"call":[]}," AWS Core ConfiguredOptionGrammars ClassMethods base_grammar":{"type":"method","name":"base_grammar","children":[],"call":[" const_get "," const_defined? "]}," AWS Core ConfiguredGrammars ClassMethods define_configured_grammars":{"type":"method","name":"define_configured_grammars","children":[],"call":[" const_set "," base_grammar customize "," base_grammar "," process_customizations ","data [] "," input_or_output "," api_config [] each "," api_config [] "," api_config "," process_ process_customizations  "]}," AWS Core ConfiguredGrammars ClassMethods process_customizations":{"type":"method","name":"process_customizations","children":[],"call":[]}," AWS Core ConfiguredGrammars ClassMethods input_or_output":{"type":"method","name":"input_or_output","children":[],"call":[" raise "]}," AWS Core ConfiguredGrammars ClassMethods operation_grammar":{"type":"method","name":"operation_grammar","children":[],"call":[" const_get "," const_defined? "]}," AWS Core ConfiguredGrammars ClassMethods base_grammar":{"type":"method","name":"base_grammar","children":[],"call":[" raise "]}," AWS Core ConfiguredClientMethods included":{"type":"method","name":"included","children":[],"call":[]}," AWS Core ConfiguredClientMethods ClassMethods operation_xml_grammar":{"type":"method","name":"operation_xml_grammar","children":[],"call":[" XML  const_get "," XML  const_defined? "]}," AWS Core ConfiguredClientMethods ClassMethods configure_client":{"type":"method","name":"configure_client","children":[],"call":["request add_param ","option_grammar request_params each ","option_grammar request_params "," configure_request "," add_client_request_method "," XML  operation_grammar ","Inflection  ruby_name to_sym ","Inflection  ruby_name "," Options  operation_grammar "," api_config [] each "," api_config [] "," api_config "," define_configured_grammars "," include "," Options  module_eval "," Options  include? "," XML  module_eval "," XML  include? "," Options  operation_grammar  request_params each "," Options  operation_grammar  request_params "]}," AWS Core Configuration add_service":{"type":"method","name":"add_service","children":[],"call":[" add_option_with_needs "," add_option ","AWS  const_get Client  new ","AWS  const_get "," lambda ","config region ","AWS  const_get global_endpoint? ","matches [] ","endpoint match ","endpoint =~ ","config send ","config use_ssl? ","endpoint_builder call ","endpoint_pattern % ","config send [] ","svc old_name ","svc method_name ","SERVICES  [] ","options merge ","client_options [] ","config endpoint_region "," enpoint match "," enpoint ","Endpoints  hostname ","AWS  const_get new "," config ","Region  send ","config config send []  ","config config endpoint_region  ","AWS  const_get global_config send ? ","AWS  const_get global_config send [] ? ","endpoint match  [] "," enpoint match  [] ","config send  match ","config send []  match ","config send  =~ ","config send []  =~ ","config send _builder call ","config send [] _builder call ","config send _pattern % ","config send [] _pattern % ","SERVICES  []  old_name ","SERVICES  []  method_name ","client_options []  merge ","client_client_options []  [] ","config config send _region ","config config send [] _region ","config endpoint_config send []  ","config endpoint_config endpoint_region  "]}," AWS Core Configuration add_option_with_needs":{"type":"method","name":"add_option_with_needs","children":[],"call":["@created [] [] ","@created [] ","@created [] []= ","create_block call ","@created []= ","@created [] [] == ","@created key? "," send ","needs collect "," supplied [] "," supplied "," supplied has_key? "," define_method "," accepted_options << "," accepted_options ","created []= ","h merge ","needs inject "]}," AWS Core Configuration add_option":{"type":"method","name":"add_option","children":[],"call":[" alias_method ","options [] ","transform call "," supplied [] "," supplied "," supplied has_key? "," define_method "," accepted_options << "," accepted_options ","default_override call "]}," AWS Core Configuration accepted_options":{"type":"method","name":"accepted_options","children":[],"call":["Set  new "]}," AWS Core Configuration supplied":{"type":"method","name":"supplied","children":[],"call":[]}," AWS Core Configuration inspect":{"type":"method","name":"inspect","children":[],"call":[" class name "," class "]}," AWS Core Configuration ==":{"type":"method","name":"==","children":[],"call":[" supplied == ","other supplied "," supplied ","other is_a? "," class "]}," AWS Core Configuration to_h":{"type":"method","name":"to_h","children":[],"call":["h []= "," send "," class accepted_options inject "," class accepted_options "," class ","h merge "]}," AWS Core Configuration with":{"type":"method","name":"with","children":[],"call":[" class new ","values merge ","@created dup "," class "," supplied == "," supplied "," supplied merge ","h []= ","kv last ","kv first to_sym ","kv first ","options inject "," supplied merge  merge "]}," AWS Core Configuration initialize":{"type":"method","name":"initialize","children":[],"call":[" supplied []= "," supplied "," class accepted_options include? "," class accepted_options "," class ","opt_name to_sym ","options each_pair ","options delete ","options []= ","opt_name to_sym  to_sym "]}," AWS Core Collections PagedWithLimits limit_key":{"type":"method","name":"limit_key","children":[],"call":[" raise "]}," AWS Core Collections PagedWithLimits each_response":{"type":"method","name":"each_response","children":[],"call":[" next_token_for "," client send ","options merge "," request_method "," client ","page_opts []= ","max_items min "," limit_key ","max_items << ","limit - "," next_token_key ","limit == ","next_token nil? ","  next_token_for _for ","  next_token_for _key "," next_token_for  nil? "]}," AWS Core Collections PagedWithLimits first":{"type":"method","name":"first","children":[],"call":[" enumerator first "," enumerator "]}," AWS Core Collections Paged next_token_for":{"type":"method","name":"next_token_for","children":[],"call":["response send ","response respond_to? "," next_token_key "]}," AWS Core Collections Paged next_token_key":{"type":"method","name":"next_token_key","children":[],"call":[" raise "]}," AWS Core Collections Paged each_response":{"type":"method","name":"each_response","children":[],"call":[" next_token_for "," client send ","options merge "," request_method "," client ","page_opts []= "," next_token_key ","next_token nil? ","  next_token_for _for ","  next_token_for _key "," next_token_for  nil? "]}," AWS Core Collections Basic each_item":{"type":"method","name":"each_item","children":[],"call":[" raise "]}," AWS Core Collections Basic request_method":{"type":"method","name":"request_method","children":[],"call":[" raise "]}," AWS Core Collections Basic each_response":{"type":"method","name":"each_response","children":[],"call":[" client send "," request_method "," client "]}," AWS Core Collections Basic in_groups_of":{"type":"method","name":"in_groups_of","children":[],"call":["group empty? ","group size == ","group size ","group << ","batch each "," each_batch "]}," AWS Core Collections Basic each_batch":{"type":"method","name":"each_batch","children":[],"call":["batch size ","(op-asgn\n  (lvasgn :total) :+\n  (int 1)) == ","batch << "," each_item "," each_response ","options delete ","options dup ","options dup  delete ","options dup  dup "]}," AWS Core Collections Basic each":{"type":"method","name":"each","children":[],"call":["batch each "," each_batch "]}," AWS Core Collections Basic enumerator":{"type":"method","name":"enumerator","children":[],"call":["Enumerator  new "]}," AWS Core ClientLogging sanitize_hash":{"type":"method","name":"sanitize_hash","children":[],"call":["(send\n  (lvar :hash) :map) sort join ","(send\n  (lvar :hash) :map) sort "," sanitize_value ","hash map "]}," AWS Core ClientLogging sanitize_array":{"type":"method","name":"sanitize_array","children":[],"call":["[ + + ","[ + ","(send\n  (lvar :array) :map) join "," sanitize_value ","array map "]}," AWS Core ClientLogging sanitize_file":{"type":"method","name":"sanitize_file","children":[],"call":["File  size ","file path "]}," AWS Core ClientLogging summarize_string":{"type":"method","name":"summarize_string","children":[],"call":["str size ","str [] inspect ","str [] ","str inspect [] "," config logger_truncate_strings_at "," config ","str inspect "]}," AWS Core ClientLogging sanitize_string":{"type":"method","name":"sanitize_string","children":[],"call":["inspected size > ","summary size ","inspected size ","str inspect "," summarize_string "," config logger_truncate_strings_at "," config ","str inspect  size > "," summarize_string  size ","str inspect  size "]}," AWS Core ClientLogging sanitize_value":{"type":"method","name":"sanitize_value","children":[],"call":["value inspect "," sanitize_string "," sanitize_file "," sanitize_array ","{ + + ","{ + "," sanitize_hash "]}," AWS Core ClientLogging log_client_request_on_success":{"type":"method","name":"log_client_request_on_success","children":[],"call":[" log ","pattern % ","pattern << ","response cached ","parts << ","response error message ","response error ","response error class "," sanitize_options ","time real "," class service_name "," class ","response http_response status ","response http_response ","response retry_count "," class  class service_name _name ","response http_response response http_response status  "]}," AWS Core ClientLogging log":{"type":"method","name":"log","children":[],"call":[" config logger send ","message + "," config logger "," config "]}," AWS Core ClientLogging sanitize_options":{"type":"method","name":"sanitize_options","children":[],"call":[" sanitize_hash "]}," AWS Core ClientLogging log_client_request":{"type":"method","name":"log_client_request","children":[],"call":[" log_client_request_on_success ","response on_complete ","options [] ","Benchmark  measure "," config logger "," config "]}," AWS Core Client ClientRequestMethodBuilder simulate_response":{"type":"method","name":"simulate_response","children":[],"call":["MetaUtils  class_extend_method "]}," AWS Core Client ClientRequestMethodBuilder process_response":{"type":"method","name":"process_response","children":[],"call":["MetaUtils  class_extend_method "]}," AWS Core Client ClientRequestMethodBuilder configure_request":{"type":"method","name":"configure_request","children":[],"call":["@client_class send ","m module_eval ","Module  new ","block arity == ","block arity ","MetaUtils  class_extend_method ","Module  new  Module  new odule_eval ","MetaUtils  class_extend_Module  new ethod "]}," AWS Core Client ClientRequestMethodBuilder initialize":{"type":"method","name":"initialize","children":[],"call":[" instance_eval "," simulate_response "," process_response "," configure_request "]}," AWS Core Client configure_client":{"type":"method","name":"configure_client","children":[],"call":[]}," AWS Core Client add_client_request_method":{"type":"method","name":"add_client_request_method","children":[],"call":[" module_eval ","method_name inspect ","ClientRequestMethodBuilder  new "," operations << "," operations "]}," AWS Core Client user_agent_string":{"type":"method","name":"user_agent_string","children":[],"call":["user_agent << ","AWS  memoizing? ","user_agent strip! ","(str \"%s aws-sdk-ruby/\") % "," config user_agent_prefix "," config ","(str \"%s aws-sdk-ruby/\") %  << ","(str \"%s aws-sdk-ruby/\") %  strip! "," config (str \"%s aws-sdk-ruby/\") % _prefix "]}," AWS Core Client build_request":{"type":"method","name":"build_request","children":[],"call":["http_request add_authorization! "," signer ","http_request headers []= "," user_agent_string ","http_request headers "," send ","http_request ssl_ca_file= "," config ssl_ca_file "," config ","http_request ssl_verify_peer= "," config ssl_verify_peer? ","http_request use_ssl= "," config use_ssl? ","http_request proxy_uri= "," config proxy_uri ","http_request host= "," endpoint "," new_request ","opts delete ","options dup ","http_request continue_timeout= ","@config http_continue_timeout ","http_request headers [] to_i > ","@config http_continue_threshold ","http_request headers [] to_i ","http_request headers [] ","http_request region= "," config send "," service_ruby_name ","http_request port= "," port ","http_request service_ruby_name= ","http_request access_key_id= "," credential_provider access_key_id "," credential_provider ","http_request ssl_ca_path= "," config ssl_ca_path ","http_request service= "," class name split [] "," class name split "," class name "," class ","http_request read_timeout= "," config http_read_timeout ","http_request default_read_timeout= "," http_read_timeout ","@config http_read_timeout "," new_request  add_authorization! "," new_request  headers []= "," new_request  headers "," new_request  ssl_ca_file= "," new_request  ssl_verify_peer= "," new_request  use_ssl= "," new_request  proxy_uri= "," new_request  host= ","options dup  delete "," new_request  continue_timeout= "," new_request  headers [] to_i > "," new_request  headers [] to_i "," new_request  headers [] "," new_request  region= "," new_request  port= "," new_request  service_ruby_name= "," new_request  access_key_id= "," new_request  ssl_ca_path= "," new_request  service= "," new_request  read_timeout= "," new_request  default_read_timeout= "]}," AWS Core Client client_request":{"type":"method","name":"client_request","children":[],"call":["cache add ","AWS  response_cache "," send ","response on_success "," make_sync_request "," make_async_request ","options [] ","cached_response cached= ","cache cached "," class CACHEABLE_REQUESTS  include? "," class ","response request_options= ","response request_type= ","client send "," new_response ","response http_request= "," build_request "," stub_for "," config stub_requests? "," config "," log_client_request "," return_or_raise ","response http_request body_stream close ","response http_request body_stream ","response http_request ","response http_request body_stream is_a? ","response on_complete "," cacheable_request? ","req add_authorization! "," credential_provider ","AWS  response_cache  add ","AWS  response_AWS  response_cache  ","AWS   stub_for _cache "," stub_for  on_success "," make_sync_client send uest "," make_async_client send uest ","AWS  response_cache d_response AWS  response_cache d= ","cache cached  cached= ","cached_ stub_for  cached= ","AWS  response_cache  AWS  response_cache d "," stub_for  request_options= ","response client send uest_options= "," stub_for  request_type= ","response client send uest_type= "," new_ stub_for  "," stub_for  http_request= ","response http_client send uest= "," build_client send uest "," config stub_client send uests? "," log_client_client send uest "," stub_for  http_request body_stream close ","response http_client send uest body_stream close "," stub_for  http_request body_stream ","response http_client send uest body_stream "," stub_for  http_request ","response http_client send uest "," stub_for  http_request body_stream is_a? ","response http_client send uest body_stream is_a? "," stub_for  on_complete "," AWS  response_cache able_request? "," cacheable_client send uest? ","client send  add_authorization! "]}," AWS Core Client service_module":{"type":"method","name":"service_module","children":[],"call":["AWS  const_get "," class to_s [] "," class to_s "," class "]}," AWS Core Client xml_error_grammar":{"type":"method","name":"xml_error_grammar","children":[],"call":[" service_module ","service_module Errors  const_defined? "," service_module const_defined? "]}," AWS Core Client xml_error_response?":{"type":"method","name":"xml_error_response?","children":[],"call":[" xml_error_grammar parse respond_to? "," xml_error_grammar parse ","response http_response body ","response http_response "," xml_error_grammar ","response http_response status >= ","response http_response status "]}," AWS Core Client populate_error":{"type":"method","name":"populate_error","children":[],"call":["response error= ","Errors ClientError  new ","response http_response ","response http_request ","status >= ","Errors ServerError  new ","service_module Errors  error_class new ","service_module Errors  error_class "," service_module ","Timeout Error  new ","response timeout? "," xml_error_grammar parse code "," xml_error_grammar parse ","response http_response body "," xml_error_grammar "," xml_error_response? ","response http_response status "," error_class new "," error_class ","response http_response network_error ","response network_error? "," extract_error_details "," extract_error_code "," extract_error ","NetworkError  new ","response http_response status  >= "," xml_error_grammar parse  xml_error_grammar parse code  "," xml_error_grammar parse  extract_error_code  ","response http_response response http_response status  "," extract_error_ xml_error_grammar parse code  "," extract_error_ extract_error_code  "]}," AWS Core Client return_or_raise":{"type":"method","name":"return_or_raise","children":[],"call":[" raise ","response error ","options [] "]}," AWS Core Client should_retry?":{"type":"method","name":"should_retry?","children":[],"call":["response error kind_of? ","response error ","response throttled? ","response timeout? ","response safe_to_retry? "," retryable_error? "," expired_credentials? "]}," AWS Core Client scaling_factor":{"type":"method","name":"scaling_factor","children":[],"call":["0.5 + ","Kernel  rand * ","Kernel  rand ","response throttled? "," throttled? "]}," AWS Core Client sleep_durations":{"type":"method","name":"sleep_durations","children":[],"call":["(send\n  (int 2) :**\n  (lvar :n)) * ","2 ** ","Array  new "," config max_retries "," config "," scaling_factor "," expired_credentials? "," scaling_ scaling_factor  "]}," AWS Core Client retry_server_errors":{"type":"method","name":"retry_server_errors","children":[],"call":["response rebuild_request ","Kernel  sleep ","sleeps shift ","sleeps empty? "," should_retry? "," sleep_durations "," rebuild_http_request "," sleep_durations  shift "," sleep_durations  empty? "]}," AWS Core Client make_sync_request":{"type":"method","name":"make_sync_request","children":[],"call":["response signal_success ","response error "," populate_error ","@http_handler handle ","response http_request ","response http_response= ","Http Response  new "," retry_server_errors ","response http_response body ","response http_response "," log_warning ","msg << ","response http_response status < ","response http_response status "," block_given? ","response Http Response  new = ","response Http Response  new  body ","response Http Response  new  ","response Http Response  new  status < ","response Http Response  new  status "]}," AWS Core Client async_request_with_retries":{"type":"method","name":"async_request_with_retries","children":[],"call":["@http_handler handle_async ","response http_response ","response signal_success ","response signal_failure ","response error "," async_request_with_retries ","response http_request ","@http_handler sleep_with_callback ","retry_delays shift ","response rebuild_request ","retry_delays empty? ! ","retry_delays empty? "," should_retry? "," sleep_durations "," populate_error ","response error= ","StandardError  new ","handle on_complete ","handle extend ","Object  new ","response http_response= ","Http Response  new "," rebuild_http_request ","@http_Object  new r Object  new _async ","@http_Object  new r sleep_with_callback ","Object  new  on_complete ","Object  new  extend "]}," AWS Core Client make_async_request":{"type":"method","name":"make_async_request","children":[],"call":[" async_request_with_retries ","response http_request "]}," AWS Core Client new_response":{"type":"method","name":"new_response","children":[],"call":["Response  new ","resp config= "," config ","resp api_version= "," class ","Response  new  config= ","Response  new  api_version= "]}," AWS Core Client new_request":{"type":"method","name":"new_request","children":[],"call":["req add_param "," class ","Time  now utc strftime ","Time  now utc ","Time  now ","req headers []= ","req headers ","req http_method= "," class REQUEST_CLASS  new "," class name   (regopt)  sub eval Request  new "," eval "," class name sub "," class name ","Http Request  new "," class REQUEST_CLASS  new  add_param "," class REQUEST_CLASS  new  headers []= "," class REQUEST_CLASS  new  headers "," class REQUEST_CLASS  new  http_method= "]}," AWS Core Client new_stub_for":{"type":"method","name":"new_stub_for","children":[],"call":["response signal_success "," send ","response request_options= ","response request_type= ","Response  new ","Http Response  new ","Http Request  new ","Response  new  signal_success ","Response  new  request_options= ","Response  new  request_type= "]}," AWS Core Client stub_for":{"type":"method","name":"stub_for","children":[],"call":[" new_stub_for ","@stubs [] "]}," AWS Core Client with_config":{"type":"method","name":"with_config","children":[],"call":[" class new "," class "]}," AWS Core Client with_options":{"type":"method","name":"with_options","children":[],"call":[" with_config "," config with "," config "]}," AWS Core Client with_http_handler":{"type":"method","name":"with_http_handler","children":[],"call":[" with_options ","Http Handler  new "]}," AWS Core Client endpoint":{"type":"method","name":"endpoint","children":[],"call":[" config send "," class service_ruby_name "," class "," config "]}," AWS Core Client initialize":{"type":"method","name":"initialize","children":[],"call":["@config http_handler ","@config signer ","@config with ","AWS  config ","options_without_config delete ","options dup ","options []= ","options delete "," class service_ruby_name "," class ","options [] ","@config http_read_timeout "," config send "," service_ruby_name "," config ","@config credential_provider ","(sym :endpoint) each ","@config send ","@config with  http_handler ","options_without_config delete  http_handler ","options delete  http_handler ","@config with  signer ","options_without_config delete  signer ","options delete  signer ","@config with  with ","options_without_config delete  with ","options delete  with ","options dup  delete ","options dup _without_config delete ","options dup  dup ","options dup  []= ","options dup  [] ","@config with  http_read_timeout ","options_without_config delete  http_read_timeout ","options delete  http_read_timeout ","@config with  credential_provider ","options_without_config delete  credential_provider ","options delete  credential_provider ","@config with  send ","options_without_config delete  send ","options delete  send "]}," AWS Core Cacheable retrieve_attribute":{"type":"method","name":"retrieve_attribute","children":[],"call":[" raise ","NoData  new ","response request_type ","attributes [] ","attr name ","attributes key? ","cache resource_cache store "," cache_key ","cache resource_cache ","AWS  response_cache "," attributes_from_response ","cache select each ","cache select ","attr request_types ","cache resource_cache get ","cache resource_cache cached? "," attributes_from_response  [] "," attributes_from_response  key? ","AWS  response_cache  resource_AWS  response_cache  store "," AWS  response_cache _key ","AWS  response_cache  resource_AWS  response_cache  ","AWS  response_AWS  response_cache  ","  attributes_from_response _from_response ","AWS  response_cache  select each ","AWS  response_cache  select ","AWS  response_cache  resource_AWS  response_cache  get ","AWS  response_cache  resource_AWS  response_cache  AWS  response_cache d? "]}," AWS Core Cacheable cache_key":{"type":"method","name":"cache_key","children":[],"call":[" config signer access_key_id + + + + + + "," local_cache_key "," config signer access_key_id + + + + + "," config signer access_key_id + + + + "," class name "," class "," config signer access_key_id + + + "," config signer access_key_id + + "," config send "," config "," config signer access_key_id + "," config signer access_key_id "," config signer "," class service_ruby_name + "," class service_ruby_name "," config credential_provider access_key_id + + + + + + "," config credential_provider access_key_id + + + + + "," config credential_provider access_key_id + + + + "," config credential_provider access_key_id + + + "," config credential_provider access_key_id + + "," config region "," config credential_provider access_key_id + "," config credential_provider access_key_id "," config credential_provider "]}," AWS Core Cacheable local_cache_key":{"type":"method","name":"local_cache_key","children":[],"call":[" raise "]}," AWS Core Cacheable included":{"type":"method","name":"included","children":[],"call":[]}," AWS Core Autoloader autoload":{"type":"method","name":"autoload","children":[],"call":["@autoloads []= ","@klass autoload "]}," AWS Core Autoloader initialize":{"type":"method","name":"initialize","children":[],"call":["klass name gsub downcase ","klass name gsub ","klass name "]}," AWS autoloads":{"type":"method","name":"autoloads","children":[],"call":[]}," AWS eager_autoload!":{"type":"method","name":"eager_autoload!","children":[],"call":[" eager_autoload! ","const is_a? ","klass_or_module const_get "," require ","klass_or_module autoload? ","klass_or_module constants each ","klass_or_module constants ","visited << ","visited include? ","klass_or_module const_get  is_a? ","klass_or_module klass_or_module const_get _get ","klass_or_module klass_or_module const_get ants each ","klass_or_module klass_or_module const_get ants "]}," AWS register_autoloads":{"type":"method","name":"register_autoloads","children":[],"call":[]}," AWS Core AuthorizeWithSessionToken add_authorization!":{"type":"method","name":"add_authorization!","children":[],"call":[" add_param ","signer session_token ","signer respond_to? ","signer session_signer session_token  "]}," AWS Core AuthorizeV3 add_authorization!":{"type":"method","name":"add_authorization!","children":[],"call":[" headers []= ","parts join "," headers ","parts << ","signer sign "," string_to_sign "," access_key_id "," access_key_id= ","signer access_key_id "]}," AWS Core AuthorizeV3 string_to_sign":{"type":"method","name":"string_to_sign","children":[],"call":["Time  now rfc822 ","Time  now "," headers [] "," headers "]}," AWS Core AuthorizeV2 add_authorization!":{"type":"method","name":"add_authorization!","children":[],"call":[" add_param ","signer sign "," string_to_sign "," access_key_id "," access_key_id= ","signer access_key_id "]}," AWS Core AuthorizeV2 string_to_sign":{"type":"method","name":"string_to_sign","children":[],"call":["parts join ","(send\n  (send\n    (send nil :params) :sort) :collect) join ","p encoded "," params sort collect "," params sort "," params "," path "," host "," http_method "]}," AWS Core AsyncHandle __send_signal":{"type":"method","name":"__send_signal","children":[],"call":["blk call ","(send\n  (ivar :@_async_callbacks) :map) compact each ","(send\n  (ivar :@_async_callbacks) :map) compact ","cb [] ","@_async_callbacks map ","block call "]}," AWS Core AsyncHandle on_complete":{"type":"method","name":"on_complete","children":[],"call":["(or-asgn\n  (ivasgn :@_async_callbacks)\n  (array)) << ","blk call "," lambda ","@_async_status nil? ! ","@_async_status nil? ","block call "]}," AWS Core AsyncHandle on_failure":{"type":"method","name":"on_failure","children":[],"call":["(or-asgn\n  (ivasgn :@_async_callbacks)\n  (array)) << ","blk call ","@_async_status == ","block call "]}," AWS Core AsyncHandle on_success":{"type":"method","name":"on_success","children":[],"call":["(or-asgn\n  (ivasgn :@_async_callbacks)\n  (array)) << ","blk call ","@_async_status == ","block call "]}," AWS Core AsyncHandle signal_failure":{"type":"method","name":"signal_failure","children":[],"call":[" __send_signal "]}," AWS Core AsyncHandle signal_success":{"type":"method","name":"signal_success","children":[],"call":[" __send_signal "]}," AWS Core ApiConfigTransform rename_input_list_to_membered_list":{"type":"method","name":"rename_input_list_to_membered_list","children":[],"call":[]}," AWS Core ApiConfig api_config":{"type":"method","name":"api_config","children":[],"call":["YAML  load ","config_file read ","(send\n  (gvar :$:) :map) compact sort last ","(send\n  (gvar :$:) :map) compact sort ","(send\n  (gvar :$:) :map) compact ","(send\n  (send\n    (lvar :config_dir) :children) :select) sort last ","(send\n  (send\n    (lvar :config_dir) :children) :select) sort ","child basename to_s =~ "," service_name ","child basename to_s ","child basename ","config_dir children select ","config_dir children ","config_dir directory? ","Pathname  new + + ","Pathname  new + ","Pathname  new ","$: map ","(send\n  (gvar :$:) :map) compact sort last  read ","(send\n  (send\n    (lvar :Pathname  new + + ) :children) :select) sort last ","(send\n  (send\n    (lvar :Pathname  new + + ) :children) :select) sort ","Pathname  new + +  children select ","Pathname  new + +  children ","Pathname  new + +  directory? "]}," AWS Support Request service":{"type":"method","name":"service","children":[],"call":[]}," AWS STS assume_role":{"type":"method","name":"assume_role","children":[],"call":[" client assume_role data "," client assume_role "," client "]}," AWS STS Request service":{"type":"method","name":"service","children":[],"call":[]}," AWS STS Client initialize":{"type":"method","name":"initialize","children":[],"call":[" raise ","AWS Security Token Service (STS) requires ssl but the  + "," config use_ssl? "," config "]}," AWS StorageGateway Request service":{"type":"method","name":"service","children":[],"call":[]}," AWS SQS Request service":{"type":"method","name":"service","children":[],"call":[]}," AWS SQS ReceivedSNSMessage body_message_as_h":{"type":"method","name":"body_message_as_h","children":[],"call":["JSON  parse "," to_h [] "," to_h "]}," AWS SQS ReceivedSNSMessage raw_message":{"type":"method","name":"raw_message","children":[],"call":[]}," AWS SQS QueueCollection _each_item":{"type":"method","name":"_each_item","children":[],"call":[" [] ","resp data [] each ","resp data [] ","resp data "," client list_queues "," client ","options []= "," prefix "," client list_queues  data [] each "," client list_queues  data [] "," client list_queues  data "," client list_ [] s "]}," AWS SQS QueueCollection url_for":{"type":"method","name":"url_for","children":[],"call":[" client get_queue_url [] "," client get_queue_url ","client_opts merge "," client ","client_opts []= "," client get_queue_url queue_url "]}," AWS SQS QueueCollection named":{"type":"method","name":"named","children":[],"call":[" [] "," url_for "]}," AWS SQS Queue batch_failures":{"type":"method","name":"batch_failures","children":[],"call":["failures << ","details []= ","entry [] ","failure [] ","e [] == ","e [] ","entries find ","response [] inject ","response [] ","failure sender_fault? ","failure message ","failure code ","failure id ","response failed inject ","response failed ","failure [] to_i "]}," AWS SQS Queue batch_change_visibility":{"type":"method","name":"batch_change_visibility","children":[],"call":[" raise ","Errors BatchChangeVisibilityError  new ","failures empty? "," batch_failures "," client change_message_visibility_batch "," url "," client ","entries << ","entries size to_s ","entries size ","msg handle ","msg is_a? ","messages each ","m [] ","args collect ","args shift ","args first is_a? ","args first ","args flatten "," batch_failures  empty? "," batch_ batch_failures  ","msg msg handle  ","args flatten  collect ","args flatten  shift ","args flatten  first is_a? ","args flatten  first ","args flatten  flatten "]}," AWS SQS Queue batch_delete":{"type":"method","name":"batch_delete","children":[],"call":[" raise ","Errors BatchDeleteError  new ","failures empty? "," batch_failures "," client delete_message_batch "," url "," client ","entries << ","n to_s ","msg handle ","msg is_a? ","messages flatten each_with_index ","messages flatten "," batch_failures  empty? "," batch_ batch_failures  ","msg msg handle  "]}," AWS SQS Queue batch_send":{"type":"method","name":"batch_send","children":[],"call":[" raise ","Errors BatchSendError  new ","failed empty? ","msg md5= ","sent [] ","msg message_id= ","SentMessage  new ","response [] collect ","response [] "," batch_failures "," client send_message_batch "," client ","client_opts []= "," url ","entry []= ","n to_s ","entries each_with_index ","entries each ","options [] ","entries collect ","entries pop ","entries last is_a? ","entries last ","entries first is_a? ","entries first ","messages flatten ","Errors ChecksumError  new ","checksum_failed empty? ! ","checksum_failed empty? ","failed empty? ! ","Errors BatchSendMultiError  new "," verify_send_message_batch_checksum ","sent md5_of_message_body ","sent message_id ","response successful collect ","response successful "," batch_failures  empty? ","SentMessage  new  md5= ","SentMessage  new  message_id= "," client send_message_batch  [] collect "," client send_message_batch  [] ","messages flatten  each_with_index ","messages flatten  each ","entries pop  [] ","messages flatten  collect ","messages flatten  pop ","messages flatten  last is_a? ","messages flatten  last ","messages flatten  first is_a? ","messages flatten  first ","checksum_ batch_failures  empty? ! "," verify_send_message_batch_checksum  empty? ! ","checksum_ batch_failures  empty? "," verify_send_message_batch_checksum  empty? "," batch_failures  empty? ! "," client send_message_batch  successful collect "," client send_message_batch  successful "]}," AWS SQS Queue approximate_number_of_messages_delayed":{"type":"method","name":"approximate_number_of_messages_delayed","children":[],"call":[" get_attribute to_i "," get_attribute "]}," AWS SQS Queue wait_time_seconds=":{"type":"method","name":"wait_time_seconds=","children":[],"call":[" set_attribute ","seconds to_s "]}," AWS SQS Queue wait_time_seconds":{"type":"method","name":"wait_time_seconds","children":[],"call":[" get_attribute to_i "," get_attribute "]}," AWS SQS Queue delay_seconds=":{"type":"method","name":"delay_seconds=","children":[],"call":[" set_attribute ","seconds to_s "]}," AWS SQS Queue delay_seconds":{"type":"method","name":"delay_seconds","children":[],"call":[" get_attribute to_i "," get_attribute "]}," AWS SQS Errors BatchSendError initialize":{"type":"method","name":"initialize","children":[],"call":["failures size "]}," AWS SQS Errors BatchChangeVisibilityError initialize":{"type":"method","name":"initialize","children":[],"call":["failures size "]}," AWS SQS Errors BatchDeleteError initialize":{"type":"method","name":"initialize","children":[],"call":["failures size "]}," AWS SQS Client build_request":{"type":"method","name":"build_request","children":[],"call":["request region= ","matches [] ","request host match ","request host ","request uri= ","url request_uri ","request host= ","url host ","URI  parse ","url_param value ","p name == ","p name ","request params find ","request params "," raise ","url class == ","url class ","request host match  [] ","URI  parse  request_uri ","URI  parse  host ","URI  parse _param value ","URI  parse  class == ","URI  parse  class "]}," AWS SNS TopicSubscriptionCollection request_options":{"type":"method","name":"request_options","children":[],"call":[" topic arn "," topic "]}," AWS SNS TopicSubscriptionCollection client_method":{"type":"method","name":"client_method","children":[],"call":[]}," AWS SNS TopicCollection _each_item":{"type":"method","name":"_each_item","children":[],"call":["resp data [] ","resp data ","Topic  new "," config ","details [] ","resp data [] each "," client list_topics "," client ","options []= "," client list_topics  data [] "," client list_topics  data "," client list_topics  data [] each "," client list_Topic  new s "]}," AWS SNS Topic update_delivery_policy":{"type":"method","name":"update_delivery_policy","children":[],"call":[" set_attribute "]}," AWS SNS Topic eql?":{"type":"method","name":"eql?","children":[],"call":["other arn == "," arn ","other arn ","other kind_of? "]}," AWS SNS Topic effective_delivery_policy_json":{"type":"method","name":"effective_delivery_policy_json","children":[],"call":[" to_h [] "," to_h "]}," AWS SNS Topic delivery_policy_json":{"type":"method","name":"delivery_policy_json","children":[],"call":[" to_h [] "," to_h "]}," AWS SNS SubscriptionCollection request_options":{"type":"method","name":"request_options","children":[],"call":[]}," AWS SNS SubscriptionCollection client_method":{"type":"method","name":"client_method","children":[],"call":[]}," AWS SNS SubscriptionCollection _each_item":{"type":"method","name":"_each_item","children":[],"call":["resp data [] ","resp data ","Subscription  new "," config ","sub [] ","sub [] tr to_sym ","sub [] tr ","resp data [] each "," client send ","options merge "," request_options "," client_method "," client ","options []= "," client send  data [] "," client send  data "," client send  data [] each "]}," AWS SNS Subscription get_attributes":{"type":"method","name":"get_attributes","children":[],"call":[" client get_subscription_attributes attributes "," client get_subscription_attributes "," arn "," client "]}," AWS SNS Subscription update_delivery_policy":{"type":"method","name":"update_delivery_policy","children":[],"call":[" client set_subscription_attributes "," client ","client_opts []= "," arn "," update_subscription_attribute "]}," AWS SNS Subscription eql?":{"type":"method","name":"eql?","children":[],"call":["other arn == "," arn ","other arn ","other kind_of? "]}," AWS SNS Subscription effective_delivery_policy_json":{"type":"method","name":"effective_delivery_policy_json","children":[],"call":[" get_attributes [] "," get_attributes "]}," AWS SNS Subscription delivery_policy_json":{"type":"method","name":"delivery_policy_json","children":[],"call":[" get_attributes [] "," get_attributes "]}," AWS SNS Subscription confirmation_authenticated?":{"type":"method","name":"confirmation_authenticated?","children":[],"call":[" get_attributes [] "," get_attributes "]}," AWS SNS Subscription topic":{"type":"method","name":"topic","children":[],"call":["Topic  new "," config "," topic_arn "]}," AWS SNS Subscription topic_arn":{"type":"method","name":"topic_arn","children":[],"call":[" get_attributes [] "," get_attributes "]}," AWS SNS Subscription owner_id":{"type":"method","name":"owner_id","children":[],"call":[" get_attributes [] "," get_attributes "]}," AWS SNS HasDeliveryPolicy update_delivery_policy":{"type":"method","name":"update_delivery_policy","children":[],"call":[" raise "]}," AWS SNS HasDeliveryPolicy parse_delivery_policy":{"type":"method","name":"parse_delivery_policy","children":[],"call":["JSON  parse ","policy_json nil? "]}," AWS SNS HasDeliveryPolicy effective_delivery_policy_json":{"type":"method","name":"effective_delivery_policy_json","children":[],"call":[" raise "]}," AWS SNS HasDeliveryPolicy delivery_policy_json":{"type":"method","name":"delivery_policy_json","children":[],"call":[" raise "]}," AWS SNS HasDeliveryPolicy delivery_policy=":{"type":"method","name":"delivery_policy=","children":[],"call":[" update_delivery_policy ","policy to_json "]}," AWS SNS HasDeliveryPolicy effective_delivery_policy":{"type":"method","name":"effective_delivery_policy","children":[],"call":[" parse_delivery_policy "," effective_delivery_policy_json "]}," AWS SNS HasDeliveryPolicy delivery_policy":{"type":"method","name":"delivery_policy","children":[],"call":[" parse_delivery_policy "," delivery_policy_json "]}," AWS SimpleWorkflow domains":{"type":"method","name":"domains","children":[],"call":["DomainCollection  new "," config "]}," AWS SimpleWorkflow WorkflowTypeCollection register":{"type":"method","name":"register","children":[],"call":[" [] "," client register_workflow_type "," client ","options []= ","task_list to_s ","options [] "," duration_opts "," upcase_opts "," domain name "," domain ","options []  to_s "]}," AWS SimpleWorkflow WorkflowType workflow_executions":{"type":"method","name":"workflow_executions","children":[],"call":["WorkflowExecutionCollection  new with_workflow_type ","WorkflowExecutionCollection  new "," domain "]}," AWS SimpleWorkflow WorkflowType count_executions":{"type":"method","name":"count_executions","children":[],"call":[" domain workflow_executions count "," domain workflow_executions "," domain ","options []= "]}," AWS SimpleWorkflow WorkflowType start_execution":{"type":"method","name":"start_execution","children":[],"call":[" domain workflow_executions [] "," domain workflow_executions "," domain ","response data [] ","response data ","options [] "," client start_workflow_execution "," client "," start_execution_opts ","options []= "," domain name "," client start_workflow_execution  data [] "," client start_workflow_execution  data "]}," AWS SimpleWorkflow WorkflowExecutionCollection to_timestamp":{"type":"method","name":"to_timestamp","children":[],"call":["Time  parse to_i ","Time  parse ","time to_s ","time to_i "]}," AWS SimpleWorkflow WorkflowExecutionCollection time_filter":{"type":"method","name":"time_filter","children":[],"call":["options []= ","options [] "," raise ","open_or_closed == ","options key? ","time_filter []= "," to_timestamp ","options delete ","(array\n  (str \"start\")\n  (str \"started\")) each ","Time  parse to_i ","Time  parse "]}," AWS SimpleWorkflow WorkflowExecutionCollection handle_options":{"type":"method","name":"handle_options","children":[],"call":["options []= ","type version ","type name ","type is_a? ","options delete ","options [] []= ","options [] "," time_filter ","status to_s upcase ","status to_s "," domain name "," domain ","@defaults merge ","@defaults merge  []= ","options delete  version ","options delete  name ","options delete  is_a? ","@defaults merge  delete ","@defaults merge  [] []= ","@defaults merge  [] ","options delete  to_s upcase ","options delete  to_s "]}," AWS SimpleWorkflow WorkflowExecutionCollection _each_item":{"type":"method","name":"_each_item","children":[],"call":["response data [] ","response data ","WorkflowExecution  new_from "," domain ","desc [] [] ","desc [] ","response data [] each "," client send "," client ","client_opts []= ","client_opts key? "," handle_options "," client send  data [] "," client send  data "," client send  data [] each "]}," AWS SimpleWorkflow WorkflowExecutionCollection collection_with":{"type":"method","name":"collection_with","children":[],"call":[" class new ","defaults merge "," domain "," class ","@defaults merge ","@defaults merge  merge ","@@defaults merge  merge "]}," AWS SimpleWorkflow WorkflowExecutionCollection each":{"type":"method","name":"each","children":[],"call":[]}," AWS SimpleWorkflow WorkflowExecutionCollection count":{"type":"method","name":"count","children":[],"call":["Count  new ","response data [] ","response data "," client send "," client "," handle_options "," client send  data [] "," client send  data "]}," AWS SimpleWorkflow WorkflowExecutionCollection reverse_order":{"type":"method","name":"reverse_order","children":[],"call":[" collection_with "]}," AWS SimpleWorkflow WorkflowExecutionCollection closed_after":{"type":"method","name":"closed_after","children":[],"call":[" collection_with "]}," AWS SimpleWorkflow WorkflowExecutionCollection closed_before":{"type":"method","name":"closed_before","children":[],"call":[" collection_with "]}," AWS SimpleWorkflow WorkflowExecutionCollection closed_between":{"type":"method","name":"closed_between","children":[],"call":[" closed_after closed_before "," closed_after "]}," AWS SimpleWorkflow WorkflowExecutionCollection started_after":{"type":"method","name":"started_after","children":[],"call":[" collection_with "]}," AWS SimpleWorkflow WorkflowExecutionCollection started_before":{"type":"method","name":"started_before","children":[],"call":[" collection_with "]}," AWS SimpleWorkflow WorkflowExecutionCollection started_between":{"type":"method","name":"started_between","children":[],"call":[" started_after started_before "," started_after "]}," AWS SimpleWorkflow WorkflowExecutionCollection tagged":{"type":"method","name":"tagged","children":[],"call":[" collection_with "]}," AWS SimpleWorkflow WorkflowExecutionCollection with_workflow_type":{"type":"method","name":"with_workflow_type","children":[],"call":[" collection_with "]}," AWS SimpleWorkflow WorkflowExecutionCollection with_workflow_id":{"type":"method","name":"with_workflow_id","children":[],"call":[" collection_with "]}," AWS SimpleWorkflow WorkflowExecutionCollection with_status":{"type":"method","name":"with_status","children":[],"call":[" collection_with "]}," AWS SimpleWorkflow WorkflowExecutionCollection terminate":{"type":"method","name":"terminate","children":[],"call":[" client terminate_workflow_execution "," client "," upcase_opts ","options []= "," domain name "," domain "]}," AWS SimpleWorkflow WorkflowExecutionCollection request_cancel":{"type":"method","name":"request_cancel","children":[],"call":[" client request_cancel_workflow_execution "," client ","options []= "," domain name "," domain "]}," AWS SimpleWorkflow WorkflowExecutionCollection signal":{"type":"method","name":"signal","children":[],"call":[" client signal_workflow_execution "," client ","options []= "," domain name "," domain "]}," AWS SimpleWorkflow WorkflowExecutionCollection at":{"type":"method","name":"at","children":[],"call":["WorkflowExecution  new "," domain "]}," AWS SimpleWorkflow WorkflowExecutionCollection initialize":{"type":"method","name":"initialize","children":[],"call":["defaults []= ","options [] ","options has_key? ","FILTERS  inject ","options [] ! ! ","options [] ! "]}," AWS SimpleWorkflow WorkflowExecution resource_options":{"type":"method","name":"resource_options","children":[],"call":[" run_id "," workflow_id "," domain name "," domain "]}," AWS SimpleWorkflow WorkflowExecution resource_identifiers":{"type":"method","name":"resource_identifiers","children":[],"call":[" run_id "," workflow_id "," domain name "," domain "]}," AWS SimpleWorkflow WorkflowExecution count_executions":{"type":"method","name":"count_executions","children":[],"call":[" domain workflow_executions count "," domain workflow_executions "," domain ","options []= "," workflow_id "]}," AWS SimpleWorkflow WorkflowExecution terminate":{"type":"method","name":"terminate","children":[],"call":[" domain workflow_executions terminate "," workflow_id "," domain workflow_executions "," domain ","options []= "," run_id "]}," AWS SimpleWorkflow WorkflowExecution request_cancel":{"type":"method","name":"request_cancel","children":[],"call":[" domain workflow_executions request_cancel "," workflow_id "," domain workflow_executions "," domain "," run_id "]}," AWS SimpleWorkflow WorkflowExecution signal":{"type":"method","name":"signal","children":[],"call":[" domain workflow_executions signal "," workflow_id "," domain workflow_executions "," domain ","options []= "," run_id "]}," AWS SimpleWorkflow WorkflowExecution parent":{"type":"method","name":"parent","children":[],"call":[" domain workflow_executions [] ","parent [] "," domain workflow_executions "," domain "," parent_details "," parent_details  [] ","  parent_details _details "]}," AWS SimpleWorkflow WorkflowExecution workflow_type":{"type":"method","name":"workflow_type","children":[],"call":["WorkflowType  new ","type [] "," domain "," type_details "," type_details  [] ","  type_details _details "]}," AWS SimpleWorkflow WorkflowExecution history_events":{"type":"method","name":"history_events","children":[],"call":["HistoryEventCollection  new "]}," AWS SimpleWorkflow WorkflowExecution tags":{"type":"method","name":"tags","children":[],"call":[" tag_list "]}," AWS SimpleWorkflow WorkflowExecution open_decision_task_count":{"type":"method","name":"open_decision_task_count","children":[],"call":[" open_counts [] "," open_counts "]}," AWS SimpleWorkflow WorkflowExecution open_timer_count":{"type":"method","name":"open_timer_count","children":[],"call":[" open_counts [] "," open_counts "]}," AWS SimpleWorkflow WorkflowExecution open_activity_task_count":{"type":"method","name":"open_activity_task_count","children":[],"call":[" open_counts [] "," open_counts "]}," AWS SimpleWorkflow WorkflowExecution open_child_workflow_execution_count":{"type":"method","name":"open_child_workflow_execution_count","children":[],"call":[" open_counts [] "," open_counts "]}," AWS SimpleWorkflow WorkflowExecution closed?":{"type":"method","name":"closed?","children":[],"call":[" open? ! "," open? "]}," AWS SimpleWorkflow WorkflowExecution open?":{"type":"method","name":"open?","children":[],"call":[" status == "," status "]}," AWS SimpleWorkflow WorkflowExecution cancel_requested?":{"type":"method","name":"cancel_requested?","children":[],"call":[" cancel_requested "]}," AWS SimpleWorkflow WorkflowExecution status":{"type":"method","name":"status","children":[],"call":[" close_status "," execution_status == "," execution_status ","AWS  memoize "]}," AWS SimpleWorkflow WorkflowExecution initialize":{"type":"method","name":"initialize","children":[],"call":[]}," AWS SimpleWorkflow TypeCollection _each_item":{"type":"method","name":"_each_item","children":[],"call":["response data [] ","response data "," member_class new_from ","desc [] [] ","desc [] "," domain "," member_class ","response data [] each "," client send "," client "," member_class type_key ","Core Inflection  ruby_name "," member_class name ","options []= ","options has_key? ","options [] "," domain name "," client send  data [] "," client send  data "," client send  data [] each "," member_class  member_class new_from _key "," member_class  member_class type_key  ","Core Inflection  Core Inflection  ruby_name  "]}," AWS SimpleWorkflow TypeCollection member_class":{"type":"method","name":"member_class","children":[],"call":["SimpleWorkflow  const_get "," class name split last sub "," class name split last "," class name split "," class name "," class "," class  class name split last sub  split last sub "," class  class name split last sub  split last "," class  class name split last sub  split "," class  class name split last sub  "]}," AWS SimpleWorkflow TypeCollection collection_with":{"type":"method","name":"collection_with","children":[],"call":[" class new ","(pair\n  (sym :registration_status)\n  (ivar :@registration_status)) merge "," config "," domain "," class "]}," AWS SimpleWorkflow TypeCollection named":{"type":"method","name":"named","children":[],"call":[" collection_with ","name to_s "]}," AWS SimpleWorkflow TypeCollection reverse_order":{"type":"method","name":"reverse_order","children":[],"call":[" collection_with "]}," AWS SimpleWorkflow TypeCollection deprecated":{"type":"method","name":"deprecated","children":[],"call":[" collection_with "]}," AWS SimpleWorkflow TypeCollection register":{"type":"method","name":"register","children":[],"call":[" raise "]}," AWS SimpleWorkflow TypeCollection []":{"type":"method","name":"[]","children":[],"call":[" member_class new "," domain "," member_class "]}," AWS SimpleWorkflow TypeCollection initialize":{"type":"method","name":"initialize","children":[],"call":["options [] ! ! ","options [] ! ","options [] ","options key? ","options [] to_s upcase ","options [] to_s "]}," AWS SimpleWorkflow Type type_key":{"type":"method","name":"type_key","children":[],"call":[]}," AWS SimpleWorkflow Type ruby_name":{"type":"method","name":"ruby_name","children":[],"call":[]}," AWS SimpleWorkflow Type resource_options":{"type":"method","name":"resource_options","children":[],"call":[" version "," name "," class ruby_name "," class "," domain name "," domain "]}," AWS SimpleWorkflow Type resource_identifiers":{"type":"method","name":"resource_identifiers","children":[],"call":[" version "," name "," domain name "," domain "]}," AWS SimpleWorkflow Type deprecated?":{"type":"method","name":"deprecated?","children":[],"call":[" status == "," status "]}," AWS SimpleWorkflow Type deprecate":{"type":"method","name":"deprecate","children":[],"call":[" client send "," resource_options "," class ruby_name "," class "," client "]}," AWS SimpleWorkflow Type initialize":{"type":"method","name":"initialize","children":[],"call":["version to_s ","name to_s "]}," AWS SimpleWorkflow Resource info_attribute":{"type":"method","name":"info_attribute","children":[],"call":[]}," AWS SimpleWorkflow Resource config_attribute":{"type":"method","name":"config_attribute","children":[],"call":[]}," AWS SimpleWorkflow Resource type_attribute":{"type":"method","name":"type_attribute","children":[],"call":[]}," AWS SimpleWorkflow Resource info_attributes":{"type":"method","name":"info_attributes","children":[],"call":[]}," AWS SimpleWorkflow Resource config_attributes":{"type":"method","name":"config_attributes","children":[],"call":[]}," AWS SimpleWorkflow Resource type_attributes":{"type":"method","name":"type_attributes","children":[],"call":[]}," AWS SimpleWorkflow Resource get_resource":{"type":"method","name":"get_resource","children":[],"call":[" client send "," resource_options "," client ","Core Inflection  ruby_name "," class name "," class "]}," AWS SimpleWorkflow Resource attribute":{"type":"method","name":"attribute","children":[],"call":[]}," AWS SimpleWorkflow Resource exists?":{"type":"method","name":"exists?","children":[],"call":[" get_resource ! ! "," get_resource ! "," get_resource "]}," AWS SimpleWorkflow OptionFormatters start_execution_opts":{"type":"method","name":"start_execution_opts","children":[],"call":["options []= ","options [] to_s ","options [] ","options has_key? "," duration_opts "," upcase_opts "," raise ","expected workflow_type to be a WorkflowType object or  + ","workflow_type keys length == ","workflow_type keys length ","workflow_type keys ","workflow_type [] is_a? ","workflow_type [] ","workflow_type is_a? ","options [] []= ","workflow_type version ","workflow_type name ","UUIDTools UUID  random_create to_s ","UUIDTools UUID  random_create ","SecureRandom  uuid "]}," AWS SimpleWorkflow OptionFormatters duration_opts":{"type":"method","name":"duration_opts","children":[],"call":["options []= ","options [] to_s upcase ","options [] to_s ","options [] ","opt_names each "]}," AWS SimpleWorkflow OptionFormatters upcase_opts":{"type":"method","name":"upcase_opts","children":[],"call":["options []= ","options [] to_s upcase ","options [] to_s ","options [] ","options has_key? ","opt_names each "]}," AWS SimpleWorkflow OptionFormatters identity_opt":{"type":"method","name":"identity_opt","children":[],"call":["Process  pid ","Socket  gethostname ","options [] "]}," AWS SimpleWorkflow HistoryEventCollection _each_item":{"type":"method","name":"_each_item","children":[],"call":["response data [] ","response data ","HistoryEvent  new "," workflow_execution ","response data [] each "," client get_workflow_execution_history "," client ","options []= ","options has_key? "," workflow_execution run_id "," workflow_execution workflow_id "," workflow_execution domain name "," workflow_execution domain "," client get_workflow_execution_history  data [] "," client get_workflow_execution_history  data "," client get_workflow_execution_history  data [] each "]}," AWS SimpleWorkflow HistoryEventCollection reverse_order":{"type":"method","name":"reverse_order","children":[],"call":[" class new "," workflow_execution "," class "]}," AWS SimpleWorkflow HistoryEventCollection initialize":{"type":"method","name":"initialize","children":[],"call":["options [] ! ! ","options [] ! ","options [] ","options key? "]}," AWS SimpleWorkflow HistoryEvent Attributes _camel_case":{"type":"method","name":"_camel_case","children":[],"call":["key []= ","key [] downcase ","key [] ","(send\n  (send\n    (send\n      (lvar :key) :to_s) :split\n    (regexp\n      (str \"_\")\n      (regopt))) :collect) join ","k []= ","k [] upcase ","k [] ","key to_s split collect ","key to_s split ","key to_s ","(send\n  (send\n    (send\n      (lvar :key) :to_s) :split\n    (regexp\n      (str \"_\")\n      (regopt))) :collect) join  []= ","(send\n  (send\n    (send\n      (lvar :key) :to_s) :split\n    (regexp\n      (str \"_\")\n      (regopt))) :collect) join  [] downcase ","(send\n  (send\n    (send\n      (lvar :key) :to_s) :split\n    (regexp\n      (str \"_\")\n      (regopt))) :collect) join  [] ","(send\n  (send\n    (send\n      (lvar :(send\n  (send\n    (send\n      (lvar :key) :to_s) :split\n    (regexp\n      (str \"_\")\n      (regopt))) :collect) join ) :to_s) :split\n    (regexp\n      (str \"_\")\n      (regopt))) :collect) join ","(send\n  (send\n    (send\n      (lvar :key) :to_s) :split\n    (regexp\n      (str \"_\")\n      (regopt))) :collect) join  to_s split collect ","(send\n  (send\n    (send\n      (lvar :key) :to_s) :split\n    (regexp\n      (str \"_\")\n      (regopt))) :collect) join  to_s split ","(send\n  (send\n    (send\n      (lvar :key) :to_s) :split\n    (regexp\n      (str \"_\")\n      (regopt))) :collect) join  to_s "]}," AWS SimpleWorkflow HistoryEvent Attributes _snake_case":{"type":"method","name":"_snake_case","children":[],"call":["Core Inflection  ruby_name to_sym ","Core Inflection  ruby_name ","key to_s "]}," AWS SimpleWorkflow HistoryEvent Attributes _cast":{"type":"method","name":"_cast","children":[],"call":["Attributes  new "," _cast ","value collect ","@workflow_execution domain workflow_executions [] ","@workflow_execution domain workflow_executions ","@workflow_execution domain ","value [] ","@workflow_execution domain workflow_types [] ","@workflow_execution domain workflow_types ","@workflow_execution domain activity_types [] ","@workflow_execution domain activity_types ","value downcase to_sym ","value downcase ","value to_i ","value to_s =~ ","value to_s "]}," AWS SimpleWorkflow HistoryEvent Attributes _key_string":{"type":"method","name":"_key_string","children":[],"call":[" keys map join "," keys map "," keys "]}," AWS SimpleWorkflow HistoryEvent Attributes inspect":{"type":"method","name":"inspect","children":[],"call":[" to_h inspect "," to_h "]}," AWS SimpleWorkflow HistoryEvent Attributes to_h":{"type":"method","name":"to_h","children":[],"call":["h []= ","value to_h ","value is_a? "," _snake_case ","v to_h ","v is_a? ","value map "," _cast ","@data inject "," _cast  to_h "," _cast  is_a? "," _cast  map "]}," AWS SimpleWorkflow HistoryEvent Attributes method_missing":{"type":"method","name":"method_missing","children":[],"call":[" [] "]}," AWS SimpleWorkflow HistoryEvent Attributes key?":{"type":"method","name":"key?","children":[],"call":["@data key? "," _camel_case "]}," AWS SimpleWorkflow HistoryEvent Attributes keys":{"type":"method","name":"keys","children":[],"call":[" _snake_case ","@data keys collect ","@data keys "]}," AWS SimpleWorkflow HistoryEvent Attributes []":{"type":"method","name":"[]","children":[],"call":[" raise "," _key_string "," _cast ","@data [] ","@data key? "," _camel_case "," _ _camel_case _string ","@data  _camel_case ? "]}," AWS SimpleWorkflow HistoryEvent Attributes initialize":{"type":"method","name":"initialize","children":[],"call":[]}," AWS SimpleWorkflow HistoryEvent inspect":{"type":"method","name":"inspect","children":[],"call":[" to_h inspect "," to_h "," class name "," class "]}," AWS SimpleWorkflow HistoryEvent to_json":{"type":"method","name":"to_json","children":[],"call":["@details to_json "]}," AWS SimpleWorkflow HistoryEvent to_h":{"type":"method","name":"to_h","children":[],"call":[" attributes to_h "," attributes "," created_at "," event_id "," event_type "]}," AWS SimpleWorkflow HistoryEvent initialize":{"type":"method","name":"initialize","children":[],"call":["Attributes  new ","@details [] ","attributes_key []= ","attributes_key [] downcase ","attributes_key [] "," event_type ","Time  at ","JSON  parse ","details is_a? ","JSON  parse  [] "]}," AWS SimpleWorkflow DomainCollection _each_item":{"type":"method","name":"_each_item","children":[],"call":["response data [] ","response data ","Domain  new_from "," config ","desc [] ","response data [] each "," client list_domains "," client ","options []= ","options has_key? ","options [] "," client list_domains  data [] "," client list_domains  data "," client list_domains  data [] each "," client list_Domain  new_from s "]}," AWS SimpleWorkflow DomainCollection collection_with":{"type":"method","name":"collection_with","children":[],"call":[" class new ","(pair\n  (sym :registration_status)\n  (ivar :@registration_status)) merge "," config "," class "]}," AWS SimpleWorkflow DomainCollection reverse_order":{"type":"method","name":"reverse_order","children":[],"call":[" collection_with "]}," AWS SimpleWorkflow DomainCollection deprecated":{"type":"method","name":"deprecated","children":[],"call":[" collection_with "]}," AWS SimpleWorkflow DomainCollection registered":{"type":"method","name":"registered","children":[],"call":[" collection_with "]}," AWS SimpleWorkflow DomainCollection []":{"type":"method","name":"[]","children":[],"call":["Domain  new "," config "]}," AWS SimpleWorkflow DomainCollection register":{"type":"method","name":"register","children":[],"call":["Domain  new ","client_opts merge "," config ","client_opts []= ","retention_period to_s downcase to_sym ","retention_period to_s downcase ","retention_period to_s ","retention_period to_i ","retention_period to_s =~ "," client register_domain "," client "," duration_opts ","options [] "]}," AWS SimpleWorkflow DomainCollection initialize":{"type":"method","name":"initialize","children":[],"call":["options [] ! ! ","options [] ! ","options [] ","options key? ","options [] to_s upcase ","options [] to_s "]}," AWS SimpleWorkflow Domain resource_identifiers":{"type":"method","name":"resource_identifiers","children":[],"call":[" name "]}," AWS SimpleWorkflow Domain deprecate":{"type":"method","name":"deprecate","children":[],"call":[" client deprecate_domain "," name "," client "]}," AWS SimpleWorkflow Domain deprecated?":{"type":"method","name":"deprecated?","children":[],"call":[" status == "," status "]}," AWS SimpleWorkflow Domain activity_tasks":{"type":"method","name":"activity_tasks","children":[],"call":["ActivityTaskCollection  new "]}," AWS SimpleWorkflow Domain decision_tasks":{"type":"method","name":"decision_tasks","children":[],"call":["DecisionTaskCollection  new "]}," AWS SimpleWorkflow Domain workflow_executions":{"type":"method","name":"workflow_executions","children":[],"call":["WorkflowExecutionCollection  new "]}," AWS SimpleWorkflow Domain activity_types":{"type":"method","name":"activity_types","children":[],"call":["ActivityTypeCollection  new "]}," AWS SimpleWorkflow Domain workflow_types":{"type":"method","name":"workflow_types","children":[],"call":["WorkflowTypeCollection  new "]}," AWS SimpleWorkflow Domain initialize":{"type":"method","name":"initialize","children":[],"call":["name to_s "]}," AWS SimpleWorkflow DecisionTaskCollection poll":{"type":"method","name":"poll","children":[],"call":[" poll_for_single_task "," loop "]}," AWS SimpleWorkflow DecisionTaskCollection poll_for_single_task":{"type":"method","name":"poll_for_single_task","children":[],"call":["decision_task complete! ","decision_task responded? "," block_given? ","DecisionTask  new ","response data "," domain ","response data [] "," client poll_for_decision_task "," client ","client_opts []= ","options [] ","options key? "," identity_opt "," domain name ","DecisionTask  new  complete! ","DecisionTask  new  responded? "," client poll_for_decision_task  data "," client poll_for_decision_task  data [] "," client poll_for_DecisionTask  new  "]}," AWS SimpleWorkflow DecisionTaskCollection count":{"type":"method","name":"count","children":[],"call":["Count  new ","response data [] ","response data "," client count_pending_decision_tasks "," client ","options []= "," domain name "," domain "," client count_pending_decision_tasks  data [] "," client count_pending_decision_tasks  data "]}," AWS SimpleWorkflow DecisionTaskCollection initialize":{"type":"method","name":"initialize","children":[],"call":[]}," AWS SimpleWorkflow DecisionTask _each_event":{"type":"method","name":"_each_event","children":[],"call":[" event_id > "," event_id ","prev_event_id nil? ","Core MetaUtils  extend_method ","HistoryEvent  new "," workflow_execution ","events each "," previous_started_event_id "," HistoryEvent  new _id > "," HistoryEvent  new _id ","prev_HistoryEvent  new _id nil? "," previous_started_event_id  nil? ","HistoryEvent  new s each "," previous_started_HistoryEvent  new _id "]}," AWS SimpleWorkflow DecisionTask _events":{"type":"method","name":"_events","children":[],"call":["response data [] ","response data "," _each_event "," client poll_for_decision_task "," client ","@request_options merge "," next_token "," client poll_for_decision_task  data [] "," client poll_for_decision_task  data ","@request_@request_options merge  merge "," response data []  ","  next_token  "]}," AWS SimpleWorkflow DecisionTask _new_events":{"type":"method","name":"_new_events","children":[],"call":["event new? "," _events "]}," AWS SimpleWorkflow DecisionTask add_decision":{"type":"method","name":"add_decision","children":[],"call":["@decisions << ","Core Inflection  class_name ","decision_type to_s "]}," AWS SimpleWorkflow DecisionTask workflow_execution_opts":{"type":"method","name":"workflow_execution_opts","children":[],"call":[" raise ","expected workflow_execution to be a WorkflowExecution  + ","options []= ","workflow_execution is_a? ","options merge! ","workflow_execution keys length == ","workflow_execution keys length ","workflow_execution keys ","workflow_execution [] is_a? ","workflow_execution [] ","workflow_execution run_id ","workflow_execution workflow_id "]}," AWS SimpleWorkflow DecisionTask start_child_workflow_execution":{"type":"method","name":"start_child_workflow_execution","children":[],"call":["options [] "," add_decision "," start_execution_opts "]}," AWS SimpleWorkflow DecisionTask request_cancel_external_workflow_execution":{"type":"method","name":"request_cancel_external_workflow_execution","children":[],"call":[" add_decision "," workflow_execution_opts "]}," AWS SimpleWorkflow DecisionTask signal_external_workflow_execution":{"type":"method","name":"signal_external_workflow_execution","children":[],"call":[" add_decision ","options []= "," workflow_execution_opts "]}," AWS SimpleWorkflow DecisionTask cancel_timer":{"type":"method","name":"cancel_timer","children":[],"call":[" add_decision "]}," AWS SimpleWorkflow DecisionTask start_timer":{"type":"method","name":"start_timer","children":[],"call":["options [] "," add_decision "," duration_opts ","options []= ","UUIDTools UUID  random_create to_s ","UUIDTools UUID  random_create ","SecureRandom  uuid "]}," AWS SimpleWorkflow DecisionTask record_marker":{"type":"method","name":"record_marker","children":[],"call":[" add_decision ","options merge "]}," AWS SimpleWorkflow DecisionTask continue_as_new_workflow_execution":{"type":"method","name":"continue_as_new_workflow_execution","children":[],"call":[" add_decision "," start_execution_opts "]}," AWS SimpleWorkflow DecisionTask cancel_workflow_execution":{"type":"method","name":"cancel_workflow_execution","children":[],"call":[" add_decision "]}," AWS SimpleWorkflow DecisionTask fail_workflow_execution":{"type":"method","name":"fail_workflow_execution","children":[],"call":[" add_decision "]}," AWS SimpleWorkflow DecisionTask complete_workflow_execution":{"type":"method","name":"complete_workflow_execution","children":[],"call":[" add_decision "]}," AWS SimpleWorkflow DecisionTask request_cancel_activity_task":{"type":"method","name":"request_cancel_activity_task","children":[],"call":[" add_decision ","activity_or_activity_id activity_id ","activity_or_activity_id is_a? ","activity_or_activity_activity_or_activity_id activity_id  activity_activity_or_activity_id activity_id  ","activity_or_activity_activity_or_activity_id activity_id  is_a? "]}," AWS SimpleWorkflow DecisionTask schedule_activity_task":{"type":"method","name":"schedule_activity_task","children":[],"call":[" add_decision ","options []= ","options [] "," duration_opts "," raise ","activity_type version ","activity_type name ","activity_type keys length == ","activity_type keys length ","activity_type keys ","activity_type [] is_a? ","activity_type [] ","UUIDTools UUID  random_create to_s ","UUIDTools UUID  random_create ","SecureRandom  uuid "]}," AWS SimpleWorkflow DecisionTask responded?":{"type":"method","name":"responded?","children":[],"call":["@responded ! ! ","@responded ! "]}," AWS SimpleWorkflow DecisionTask complete!":{"type":"method","name":"complete!","children":[],"call":[" client respond_decision_task_completed "," client ","options []= ","@decisions empty? "," task_token "," raise "," responded? "]}," AWS SimpleWorkflow DecisionTask new_events":{"type":"method","name":"new_events","children":[],"call":[" enum_for "]}," AWS SimpleWorkflow DecisionTask events":{"type":"method","name":"events","children":[],"call":[" enum_for "]}," AWS SimpleWorkflow DecisionTask initialize":{"type":"method","name":"initialize","children":[],"call":["data [] ","WorkflowType  new ","data [] [] ","WorkflowExecution  new "]}," AWS SimpleWorkflow Count ==":{"type":"method","name":"==","children":[],"call":["other truncated? == "," truncated? ","other truncated? ","other count == "," count ","other count ","other is_a? "]}," AWS SimpleWorkflow Count truncated?":{"type":"method","name":"truncated?","children":[],"call":[]}," AWS SimpleWorkflow Count initialize":{"type":"method","name":"initialize","children":[],"call":[]}," AWS SimpleWorkflow Client build_request":{"type":"method","name":"build_request","children":[],"call":["request read_timeout= ","request headers [] =~ ","request headers [] ","request headers "]}," AWS SimpleWorkflow Client cacheable_request?":{"type":"method","name":"cacheable_request?","children":[],"call":[" class CACHEABLE_REQUESTS  include? "," class ","options keys include? ","options keys ","name == "]}," AWS SimpleWorkflow ActivityTypeCollection register":{"type":"method","name":"register","children":[],"call":[" [] "," client register_activity_type "," client ","options []= ","task_list to_s ","options [] "," duration_opts "," domain name "," domain ","options []  to_s "]}," AWS SimpleWorkflow ActivityTaskCollection poll":{"type":"method","name":"poll","children":[],"call":[" poll_for_single_task "," loop "]}," AWS SimpleWorkflow ActivityTaskCollection poll_for_single_task":{"type":"method","name":"poll_for_single_task","children":[],"call":[" raise ","activity_task fail! ","e backtrace join ","e backtrace ","e message ","activity_task responded? ","activity_task cancel! ","activity_task complete! "," block_given? ","ActivityTask  new ","response data "," domain ","response data [] "," client poll_for_activity_task "," client ","client_opts []= "," identity_opt "," domain name ","options [] ","ActivityTask  new  fail! ","ActivityTask  new  responded? ","ActivityTask  new  cancel! ","ActivityTask  new  complete! "," client poll_for_activity_task  data "," client poll_for_activity_task  data [] "," client poll_for_ActivityTask  new  "]}," AWS SimpleWorkflow ActivityTaskCollection count":{"type":"method","name":"count","children":[],"call":["Count  new ","response data [] ","response data "," client count_pending_activity_tasks "," client ","options []= "," domain name "," domain "," client count_pending_activity_tasks  data [] "," client count_pending_activity_tasks  data "]}," AWS SimpleWorkflow ActivityTaskCollection initialize":{"type":"method","name":"initialize","children":[],"call":[]}," AWS SimpleWorkflow ActivityTask respond":{"type":"method","name":"respond","children":[],"call":[" client send "," client ","options []= "," task_token "," raise "," responded? "]}," AWS SimpleWorkflow ActivityTask responded?":{"type":"method","name":"responded?","children":[],"call":["@responded ! ! ","@responded ! "]}," AWS SimpleWorkflow ActivityTask fail!":{"type":"method","name":"fail!","children":[],"call":[" respond "]}," AWS SimpleWorkflow ActivityTask cancel!":{"type":"method","name":"cancel!","children":[],"call":[" respond "]}," AWS SimpleWorkflow ActivityTask complete!":{"type":"method","name":"complete!","children":[],"call":[" respond "]}," AWS SimpleWorkflow ActivityTask record_heartbeat!":{"type":"method","name":"record_heartbeat!","children":[],"call":[" raise ","response data [] ","response data "," client record_activity_task_heartbeat "," client ","client_opts []= ","options [] "," task_token "," client record_activity_task_heartbeat  data [] "," client record_activity_task_heartbeat  data "]}," AWS SimpleWorkflow ActivityTask initialize":{"type":"method","name":"initialize","children":[],"call":["domain workflow_executions [] ","domain workflow_executions ","data [] [] ","data [] ","domain activity_types [] ","domain activity_types "]}," AWS SimpleEmailService identities":{"type":"method","name":"identities","children":[],"call":["IdentityCollection  new "," config "]}," AWS SimpleEmailService Request service":{"type":"method","name":"service","children":[],"call":[]}," AWS SimpleEmailService Quotas to_hash":{"type":"method","name":"to_hash","children":[],"call":["response sent_last_24_hours to_i ","response sent_last_24_hours ","response max_send_rate to_f ","response max_send_rate ","response max_24_hour_send to_i ","response max_24_hour_send "," client get_send_quota "," client "," client get_send_quota  sent_last_24_hours to_i "," client get_send_quota  sent_last_24_hours "," client get_send_quota  max_send_rate to_f "," client get_send_quota  max_send_rate "," client get_send_quota  max_24_hour_send to_i "," client get_send_quota  max_24_hour_send "]}," AWS SimpleEmailService IdentityCollection _each_item":{"type":"method","name":"_each_item","children":[],"call":["resp data [] ","resp data "," [] ","resp data [] each "," client list_identities "," client ","options []= "," client list_identities  data [] "," client list_identities  data "," client list_identities  data [] each "]}," AWS SimpleEmailService IdentityCollection domains":{"type":"method","name":"domains","children":[],"call":[" class new "," config "," class "]}," AWS SimpleEmailService IdentityCollection email_addresses":{"type":"method","name":"email_addresses","children":[],"call":[" class new "," config "," class "]}," AWS SimpleEmailService IdentityCollection []":{"type":"method","name":"[]","children":[],"call":["Identity  new "," config "]}," AWS SimpleEmailService IdentityCollection verify":{"type":"method","name":"verify","children":[],"call":["Identity  new "," config ","resp data [] ","resp data "," client verify_domain_identity "," client "," client verify_email_identity ","email_or_domain =~ "," client verify_domain_identity  data [] "," client verify_email_identity  data [] "," client verify_domain_identity  data "," client verify_email_identity  data "]}," AWS SimpleEmailService IdentityCollection initialize":{"type":"method","name":"initialize","children":[],"call":["options [] "]}," AWS SimpleEmailService Identity update_resource":{"type":"method","name":"update_resource","children":[],"call":[" client send "," client "," raise ","attr name ","client_opts []= "," identity "]}," AWS SimpleEmailService Identity get_resource":{"type":"method","name":"get_resource","children":[],"call":[" client send "," identity "," client ","attr name to_s ","attr name "," client get_identity_verification_attributes ","client_opts []= "," client get_identity_notification_attributes ","attr name to_s match "]}," AWS SimpleEmailService Identity resource_identifiers":{"type":"method","name":"resource_identifiers","children":[],"call":[" identity "]}," AWS SimpleEmailService Identity exists?":{"type":"method","name":"exists?","children":[],"call":["resp [] [] ! ! ","resp [] [] ! ","resp [] [] "," identity ","resp [] "," client get_identity_verification_attributes "," client "," get_resource [] [] ! ! "," get_resource [] [] ! "," get_resource [] [] "," get_resource [] "," get_resource "," client get_identity_verification_attributes  [] [] ! ! "," client get_identity_verification_attributes  [] [] ! "," client get_identity_verification_attributes  [] [] "," client get_identity_verification_attributes  [] "]}," AWS SimpleEmailService Identity delete":{"type":"method","name":"delete","children":[],"call":[" client delete_identity "," identity "," client "]}," AWS SimpleEmailService Identity pending?":{"type":"method","name":"pending?","children":[],"call":[" verification_status == "," verification_status "]}," AWS SimpleEmailService Identity verified?":{"type":"method","name":"verified?","children":[],"call":[" verification_status == "," verification_status "]}," AWS SimpleEmailService Identity domain?":{"type":"method","name":"domain?","children":[],"call":[" email_address? ! "," email_address? "]}," AWS SimpleEmailService Identity email_address?":{"type":"method","name":"email_address?","children":[],"call":[" identity match "," identity "," identity =~ "]}," AWS SimpleEmailService Identity complaint_topic":{"type":"method","name":"complaint_topic","children":[],"call":["SNS Topic  new "," config "," complaint_topic_arn "," complaint_topic_ complaint_topic_arn  "]}," AWS SimpleEmailService Identity complaint_topic=":{"type":"method","name":"complaint_topic=","children":[],"call":[" complaint_topic_arn= ","topic arn ","topic respond_to? "," complaint_topic_topic arn = ","topic topic arn  "]}," AWS SimpleEmailService Identity bounce_topic":{"type":"method","name":"bounce_topic","children":[],"call":["SNS Topic  new "," config "," bounce_topic_arn "," bounce_topic_ bounce_topic_arn  "]}," AWS SimpleEmailService Identity bounce_topic=":{"type":"method","name":"bounce_topic=","children":[],"call":[" bounce_topic_arn= ","topic arn ","topic respond_to? "," bounce_topic_topic arn = ","topic topic arn  "]}," AWS SimpleEmailService Identity verify_dkim":{"type":"method","name":"verify_dkim","children":[],"call":[" raise "," reps [] "," reps "," client verify_domain_dkim "," identity "," client "," domain? ","resp [] "," client verify_domain_dkim  [] "]}," AWS SimpleEmailService Identity initialize":{"type":"method","name":"initialize","children":[],"call":[]}," AWS SimpleDB ItemCollection _each_item":{"type":"method","name":"_each_item","children":[],"call":["response [] ","ItemData  new "," domain ","response items each ","response items "," [] ","item name "," output_list == "," output_list "," select_request ","collection _each_item "," handle_query_options ","response next_token "," select_request  [] "," select_request  items each "," select_request  items "," select_request  next_token "]}," AWS SimpleDB ItemCollection each_batch":{"type":"method","name":"each_batch","children":[],"call":["collection each_batch "," handle_query_options "]}," AWS SimpleDB Item ==":{"type":"method","name":"==","children":[],"call":["other name == "," name ","other name ","other domain == "," domain ","other domain ","other is_a? "]}," AWS SimpleDB DomainCollection _each_item":{"type":"method","name":"_each_item","children":[],"call":["resp data [] ","resp data "," [] ","resp data [] each "," client list_domains "," client ","options []= "," client list_domains  data [] "," client list_domains  data "," client list_domains  data [] each "]}," AWS SimpleDB Domain ==":{"type":"method","name":"==","children":[],"call":["other config simple_db_endpoint == "," config simple_db_endpoint "," config ","other config simple_db_endpoint ","other config ","other name == "," name ","other name ","other is_a? "]}," AWS S3 WebsiteConfiguration deep_copy":{"type":"method","name":"deep_copy","children":[],"call":["Marshal  load ","Marshal  dump "]}," AWS S3 WebsiteConfiguration error_document_key=":{"type":"method","name":"error_document_key=","children":[],"call":["@options [] []= ","@options [] ","@options delete "]}," AWS S3 WebsiteConfiguration error_document_key":{"type":"method","name":"error_document_key","children":[],"call":["(or\n  (send\n    (ivar :@options) :[]\n    (sym :error_document))\n  (hash)) [] ","@options [] "]}," AWS S3 WebsiteConfiguration index_document_suffix=":{"type":"method","name":"index_document_suffix=","children":[],"call":["@options [] []= ","@options [] ","@options delete "]}," AWS S3 WebsiteConfiguration index_document_suffix":{"type":"method","name":"index_document_suffix","children":[],"call":["(or\n  (send\n    (ivar :@options) :[]\n    (sym :index_document))\n  (hash)) [] ","@options [] "]}," AWS S3 WebsiteConfiguration initialize":{"type":"method","name":"initialize","children":[],"call":["@options []= ","@options empty? "," deep_copy "," error_key "," index_suffix "," deep_copy  []= "," deep_copy  empty? "]}," AWS S3 S3Object decode64":{"type":"method","name":"decode64","children":[],"call":["Base64  decode64 "]}," AWS S3 S3Object encode64":{"type":"method","name":"encode64","children":[],"call":["Base64  encode64 split * ","Base64  encode64 split ","Base64  encode64 "]}," AWS S3 S3Object add_storage_class_option":{"type":"method","name":"add_storage_class_option","children":[],"call":["options []= ","options [] == ","options [] "]}," AWS S3 S3Object encryption_key_for":{"type":"method","name":"encryption_key_for","children":[],"call":[" config s3_encryption_key "," config ","options [] "]}," AWS S3 S3Object write_with_put_object":{"type":"method","name":"write_with_put_object","children":[],"call":["ObjectVersion  new ","resp data [] ","resp data "," client put_object "," client ","options []= "," key "," bucket name "," bucket "," clean_up_options ","data rewind ","data size ","data << ","options [] read ","4 * ","options [] ","StringIO  new "," client put_object  data [] ","resp StringIO  new  [] "," client put_object  data ","resp StringIO  new  ","StringIO  new  rewind ","StringIO  new  size ","StringIO  new  << "]}," AWS S3 S3Object write_with_multipart":{"type":"method","name":"write_with_multipart","children":[],"call":["upload add_part ","options [] read ","options [] ","options [] eof? "," multipart_upload ","options delete "," clean_up_options "," compute_part_size "," compute_ compute_part_size  "]}," AWS S3 S3Object clean_up_options":{"type":"method","name":"clean_up_options","children":[],"call":["options delete "]}," AWS S3 S3Object copy_cse_materials":{"type":"method","name":"copy_cse_materials","children":[],"call":[" bucket objects [] copy_from ","source bucket objects [] ","source bucket objects ","source bucket "," bucket objects [] "," bucket objects "," bucket "," key ","source key ","options []= ","(or\n  (send\n    (lvar :options) :[]\n    (sym :metadata))\n  (hash)) merge ","options [] ","cse_materials [] ","cse_materials []= ","meta [] ","source metadata to_h ","source metadata ","(or\n  (send\n    (lvar :options) :[]\n    (sym :source metadata to_h data))\n  (hash)) merge ","source metadata to_h  [] ","source source metadata to_h data to_h ","source source metadata to_h data "]}," AWS S3 S3Object get_inst_file_materials":{"type":"method","name":"get_inst_file_materials","children":[],"call":["JSON  parse values_at ","JSON  parse ","obj read "," bucket objects [] "," key "," bucket objects "," bucket "," bucket objects []  read "," bucket  bucket objects [] ects [] "," bucket  bucket objects [] ects "]}," AWS S3 S3Object get_metadata_materials":{"type":"method","name":"get_metadata_materials","children":[],"call":[" metadata to_h values_at "," metadata to_h "," metadata ","opts []= ","options [] "]}," AWS S3 S3Object decryption_materials":{"type":"method","name":"decryption_materials","children":[],"call":[" raise ","msg << ","location inspect "," get_inst_file_materials "," get_metadata_materials "]}," AWS S3 S3Object decode_envelope_key":{"type":"method","name":"decode_envelope_key","children":[],"call":[" decode64 "," raise "," decrypt ","options [] "]}," AWS S3 S3Object decryption_cipher":{"type":"method","name":"decryption_cipher","children":[],"call":[" remove_cse_options "," get_aes_cipher "," decode_envelope_key "," decryption_materials "," config s3_encryption_materials_location "," config ","options [] "," check_encryption_materials "," encryption_key_for "]}," AWS S3 S3Object remove_cse_options":{"type":"method","name":"remove_cse_options","children":[],"call":["options delete "]}," AWS S3 S3Object store_encryption_materials":{"type":"method","name":"store_encryption_materials","children":[],"call":[" raise ","msg << ","cse_location inspect "," bucket objects [] write "," bucket objects [] "," key "," bucket objects "," bucket ","(pair\n  (str \"x-amz-crypto-instr-file\")\n  (str \"\")) merge ","JSON  generate ","options [] merge! ","options [] "," config s3_encryption_materials_location "," config "]}," AWS S3 S3Object build_cse_metadata":{"type":"method","name":"build_cse_metadata","children":[],"call":["options [] merge! ","options [] ","options delete ","orig_headers []= "," config s3_encryption_matdesc "," config ","options []= "]}," AWS S3 S3Object encode_envelope_key":{"type":"method","name":"encode_envelope_key","children":[],"call":[" encode64 "," encrypt "]}," AWS S3 S3Object add_cse_options":{"type":"method","name":"add_cse_options","children":[],"call":[" remove_cse_options ","options []= "," get_encrypted_size ","options [] ","CipherIO  new "," store_encryption_materials "," build_cse_metadata "," encode_envelope_key "," generate_aes_key "," get_aes_cipher "," check_encryption_materials "," encryption_key_for "," get_aes_ get_aes_cipher  "]}," AWS S3 S3Object add_sse_options":{"type":"method","name":"add_sse_options","children":[],"call":["options delete ","options [] nil? ","options [] ","options []= "," config s3_server_side_encryption "," config ","options key? ","options [] == "]}," AWS S3 S3Object estimated_content_length":{"type":"method","name":"estimated_content_length","children":[],"call":[" raise ","unknown content length, must set :content_length or  + ","options [] "]}," AWS S3 S3Object compute_part_size":{"type":"method","name":"compute_part_size","children":[],"call":["(send\n  (begin\n    (send\n      (send\n        (lvar :estimated_size) :to_f) :/\n      (lvar :max_parts))) :ceil) max to_i ","(send\n  (begin\n    (send\n      (send\n        (lvar :estimated_size) :to_f) :/\n      (lvar :max_parts))) :ceil) max ","(send\n  (send\n    (lvar :estimated_size) :to_f) :/\n  (lvar :max_parts)) ceil ","estimated_size to_f / ","estimated_size to_f "," estimated_content_length "," config s3_multipart_min_part_size "," config ","options [] "," config s3_multipart_max_parts ","16 - ","part_size % ","(send\n  (begin\n    (send\n      (send\n        (lvar : estimated_content_length ) :to_f) :/\n      (lvar :max_parts))) :ceil) max to_i ","(send\n  (begin\n    (send\n      (send\n        (lvar : estimated_content_length ) :to_f) :/\n      (lvar :max_parts))) :ceil) max ","(send\n  (send\n    (lvar : estimated_content_length ) :to_f) :/\n  (lvar :max_parts)) ceil "," estimated_content_length  to_f / "," estimated_content_length  to_f "," config s3_multipart_min_(send\n  (begin\n    (send\n      (send\n        (lvar :estimated_size) :to_f) :/\n      (lvar :max_parts))) :ceil) max to_i  ","(send\n  (begin\n    (send\n      (send\n        (lvar :estimated_size) :to_f) :/\n      (lvar :max_parts))) :ceil) max to_i  % "]}," AWS S3 S3Object multipart_threshold":{"type":"method","name":"multipart_threshold","children":[],"call":[" config s3_multipart_threshold "," config ","options [] "]}," AWS S3 S3Object get_encrypted_object":{"type":"method","name":"get_encrypted_object","children":[],"call":["cipher update + ","cipher final ","cipher update "," get_object [] "," get_object "," block_given? "," decryption_cipher "]}," AWS S3 S3Object get_object":{"type":"method","name":"get_object","children":[],"call":[" client get_object data "," client get_object "," client "," client get_object data [] "]}," AWS S3 S3Object should_decrypt?":{"type":"method","name":"should_decrypt?","children":[],"call":[" config s3_encryption_key "," config ","options [] "]}," AWS S3 S3Object multipart_copy":{"type":"method","name":"multipart_copy","children":[],"call":["upload copy_part ","options merge ","options [] ","pos + - ","pos + ","source_length - ","pos + >= ","pos >= "," multipart_upload ","options delete "," clean_up_options "," compute_part_size "," raise ","unknown content length, must set :content_length  + ","options delete  - "," compute_ compute_part_size  "]}," AWS S3 S3Object use_multipart_copy?":{"type":"method","name":"use_multipart_copy?","children":[],"call":["options [] "]}," AWS S3 S3Object move_to":{"type":"method","name":"move_to","children":[],"call":[" delete "," copy_to ","  copy_to _to "]}," AWS S3 S3Object restore":{"type":"method","name":"restore","children":[],"call":[" client restore_object ","options [] "," key "," bucket name "," bucket "," client "]}," AWS S3 S3Object restored_object?":{"type":"method","name":"restored_object?","children":[],"call":[" head [] ! ! "," head [] ! "," head [] "," head "," head restore_expiration_date ! ! "," head restore_expiration_date ! "," head restore_expiration_date "]}," AWS S3 S3Object restore_expiration_date":{"type":"method","name":"restore_expiration_date","children":[],"call":[" head [] "," head "," head restore_expiration_date "]}," AWS S3 S3Object restore_in_progress?":{"type":"method","name":"restore_in_progress?","children":[],"call":[" head [] "," head "," head restore_in_progress "]}," AWS S3 S3Object server_side_encryption?":{"type":"method","name":"server_side_encryption?","children":[],"call":[" server_side_encryption nil? ! "," server_side_encryption nil? "," server_side_encryption "]}," AWS S3 S3Object server_side_encryption":{"type":"method","name":"server_side_encryption","children":[],"call":[" head [] "," head "," head server_side_encryption "]}," AWS S3 S3Object expiration_rule_id":{"type":"method","name":"expiration_rule_id","children":[],"call":[" head [] "," head "," head expiration_date "," head expiration_rule_id "]}," AWS S3 S3Object expiration_date":{"type":"method","name":"expiration_date","children":[],"call":[" head [] "," head "," head expiration_date "]}," AWS S3 Request uri":{"type":"method","name":"uri","children":[],"call":["uri << "," url_encoded_params ","/ + ","parts join ","parts << "," escape_path "," key "," bucket "," path_style? "," escape_/ +  "," / + _style? "]}," AWS S3 Request path_style?":{"type":"method","name":"path_style?","children":[],"call":["Client  path_style_bucket_name? "," bucket "," force_path_style "]}," AWS S3 Request server_side_encryption=":{"type":"method","name":"server_side_encryption=","children":[],"call":[" headers []= "," headers ","sse to_s upcase ","sse to_s ","sse is_a? "]}," AWS S3 PresignedPost field_value":{"type":"method","name":"field_value","children":[],"call":["@fields [] to_s ","@fields [] ","value to_s ","value to_s upcase ","value kind_of? ","@fields [] to_s tr ","@fields []  to_s ","@fields []  to_s upcase ","@fields []  kind_of? "]}," AWS S3 PaginatedCollection _each_item":{"type":"method","name":"_each_item","children":[],"call":[" next_markers ","response data [] ","response data "," each_member_in_page "," list_request ","options []= "," limit_param ","options merge! ","markers empty? ","markers nil? "," list_options ","response truncated? "," list_request  data [] "," list_request  data "," list_options  []= "," list_options  merge! "," list_ list_options  "," list_request  truncated? "]}," AWS S3 ObjectVersion url_for":{"type":"method","name":"url_for","children":[],"call":[" object url_for ","options merge "," version_id "," object "]}," AWS S3 ObjectCollection BatchHelper process_batch":{"type":"method","name":"process_batch","children":[],"call":["@after_batch call ","@block call "]}," AWS S3 ObjectCollection BatchHelper complete!":{"type":"method","name":"complete!","children":[],"call":[" process_batch ","@batch empty? "]}," AWS S3 ObjectCollection BatchHelper add":{"type":"method","name":"add","children":[],"call":[" process_batch ","@batch size == ","@batch size ","@batch << "]}," AWS S3 ObjectCollection BatchHelper after_batch":{"type":"method","name":"after_batch","children":[],"call":[]}," AWS S3 ObjectCollection BatchHelper initialize":{"type":"method","name":"initialize","children":[],"call":[]}," AWS S3 ObjectCollection delete_all":{"type":"method","name":"delete_all","children":[],"call":[" raise ","Errors BatchDeleteError  new ","error_counts empty? ","error_counts [] ","error error_counts each_pair ","error error_counts "," delete "," each_batch "]}," AWS S3 ObjectCollection delete_if":{"type":"method","name":"delete_if","children":[],"call":[" raise ","Errors BatchDeleteError  new ","error_counts empty? ","batch_helper complete! ","batch_helper add "," each ","error_counts [] ","error error_counts each_pair ","error error_counts "," delete ","BatchHelper  new "]}," AWS S3 ObjectCollection delete":{"type":"method","name":"delete","children":[],"call":[" raise ","Errors BatchDeleteError  new ","error_counts empty? ","batch_helper complete! ","batch_helper add ","objects each ","error_counts [] ","error code ","response errors each ","response errors ","batch_helper after_batch "," client delete_objects "," client ","client_opts []= "," bucket name "," bucket ","BatchHelper  new ","objects must be keys (strings or hashes with :key and  + + "," object class name "," object class "," object ","objects must be keys (strings or hashes with :key and  + ","obj version_id ","obj key ","objects flatten collect ","objects flatten ","objects pop ","objects [] is_a? ","objects [] ","objects size == ","objects size ","obj class name ","obj class ","objects pop  []= "]}," AWS S3 MultipartUpload copy_part":{"type":"method","name":"copy_part","children":[],"call":["UploadedPart  new ","@completed_parts []= ","resp [] ","@completed_mutex synchronize "," client copy_part "," client ","part_options [] ","part_options []= ","@increment_mutex synchronize ","part_options merge! "," base_opts merge "," base_opts "," client copy_part  [] "," base_opts merge  [] "," base_opts merge  []= "," base_opts merge  merge! "]}," AWS S3 Errors IncorrectClientSideEncryptionKey initialize":{"type":"method","name":"initialize","children":[],"call":[]}," AWS S3 Errors BatchDeleteError initialize":{"type":"method","name":"initialize","children":[],"call":["sum + ","error_counts values inject ","error_counts values "]}," AWS S3 EncryptionUtils get_cipher_size":{"type":"method","name":"get_cipher_size","children":[],"call":[" raise ","msg << "]}," AWS S3 EncryptionUtils get_encrypted_size":{"type":"method","name":"get_encrypted_size","children":[],"call":["(send\n  (begin\n    (send\n      (lvar :size) :/\n      (int 16))) :+\n  (int 1)) * ","(send\n  (lvar :size) :/\n  (int 16)) + ","size / "]}," AWS S3 EncryptionUtils get_aes_cipher":{"type":"method","name":"get_aes_cipher","children":[],"call":["cipher iv= ","cipher key= ","cipher decrypt ","cipher encrypt ","mode == ","OpenSSL Cipher  new "," get_cipher_size ","key length ","OpenSSL Cipher  new  iv= ","OpenSSL Cipher  new  key= ","OpenSSL Cipher  new  decrypt ","OpenSSL Cipher  new  encrypt "," get_OpenSSL Cipher  new _size "," get_ get_cipher_size  "]}," AWS S3 EncryptionUtils generate_aes_key":{"type":"method","name":"generate_aes_key","children":[],"call":[" block_given? ","cipher random_iv ","cipher random_key "]}," AWS S3 EncryptionUtils check_encryption_materials":{"type":"method","name":"check_encryption_materials","children":[],"call":[" raise ","mode == ","key private? "]}," AWS S3 EncryptionUtils decrypt":{"type":"method","name":"decrypt","children":[],"call":[" raise ","cipher update + ","cipher final ","cipher update "," get_aes_cipher ","key private_decrypt "," get_aes_cipher  update + "," get_aes_cipher  final "," get_aes_cipher  update "," get_aes_ get_aes_cipher  "]}," AWS S3 EncryptionUtils encrypt":{"type":"method","name":"encrypt","children":[],"call":["cipher update + ","cipher final ","cipher update "," get_aes_cipher ","key public_encrypt "," warn "," get_cipher_size < "," get_cipher_size ","key length ","key public_key n num_bits < ","key public_key n num_bits ","key public_key n ","key public_key ","data length "," get_aes_cipher  update + "," get_aes_cipher  final "," get_aes_cipher  update "," get_aes_ get_aes_cipher  "," get_ get_aes_cipher _size < "," get_ get_aes_cipher _size "]}," AWS S3 DataOptions IOProxy read_all":{"type":"method","name":"read_all","children":[],"call":["buffer read ","buffer rewind ","buffer << "," read_chunk ","1024 * * ","1024 * ","StringIO  new "," read "," eof? ","StringIO  new  read ","StringIO  new  rewind ","StringIO  new  << "]}," AWS S3 DataOptions IOProxy read_chunk":{"type":"method","name":"read_chunk","children":[],"call":["buffer read ","buffer size < ","buffer size ","buffer rewind ","@write_block call ","StringIO  new ","StringIO  new  read ","StringIO  new  size < ","StringIO  new  size ","StringIO  new  rewind "]}," AWS S3 DataOptions IOProxy eof?":{"type":"method","name":"eof?","children":[],"call":[]}," AWS S3 DataOptions IOProxy read":{"type":"method","name":"read","children":[],"call":["output_buffer replace "," read_all "," read_chunk ","buffer read ","buffer size == ","buffer size ","buffer size < ","buffer rewind ","@write_block call ","StringIO  new ","output_StringIO  new  replace ","StringIO  new  read ","StringIO  new  size == ","StringIO  new  size ","StringIO  new  size < ","StringIO  new  rewind "]}," AWS S3 DataOptions IOProxy initialize":{"type":"method","name":"initialize","children":[],"call":[" raise ","msg << ","write_block arity == ","write_block arity "]}," AWS S3 DataOptions open_file":{"type":"method","name":"open_file","children":[],"call":["Core ManagedFile  open ","File  open ","file_opts << ","Object  const_defined? "]}," AWS S3 DataOptions io_like?":{"type":"method","name":"io_like?","children":[],"call":["io respond_to? "]}," AWS S3 DataOptions try_to_determine_content_length":{"type":"method","name":"try_to_determine_content_length","children":[],"call":["options []= ","File  size ","data path ","data respond_to? ","data length ","data size ","data bytesize ","options [] ","options []  path ","options []  respond_to? ","options []  length ","options []  size ","options []  bytesize "]}," AWS S3 DataOptions convert_data_to_io_obj":{"type":"method","name":"convert_data_to_io_obj","children":[],"call":[" raise ","msg << ","options []= "," io_like? "," open_file ","data to_s ","data is_a? ","StringIO  new ","data force_encoding ","data respond_to? ","IOProxy  new "," block_given? ","options delete ","data dup ","data frozen? ","options delete  to_s ","data dup  to_s ","options delete  is_a? ","data dup  is_a? ","options delete  force_encoding ","data dup  force_encoding ","options delete  respond_to? ","data dup  respond_to? ","options delete  dup ","data dup  dup ","options delete  frozen? ","data dup  frozen? "]}," AWS S3 DataOptions rename_file_to_data":{"type":"method","name":"rename_file_to_data","children":[],"call":["options []= "," open_file ","file is_a? ","options delete "," open_options delete  ","options delete  is_a? "]}," AWS S3 DataOptions convert_args_to_options_hash":{"type":"method","name":"convert_args_to_options_hash","children":[],"call":[" raise ","args count ","args [] merge ","args [] ","args [] is_a? "]}," AWS S3 DataOptions compute_write_options":{"type":"method","name":"compute_write_options","children":[],"call":[" try_to_determine_content_length "," convert_data_to_io_obj "," rename_file_to_data "," validate_data! "," convert_args_to_options_hash "," convert_args_to_ convert_args_to_options_hash _hash "]}," AWS S3 CORSRuleCollection rule_hashes":{"type":"method","name":"rule_hashes","children":[],"call":[" raise ","msg << ","rule class name ","rule class ","(send\n  (lvar :rule) :map) flatten "," rule_hashes ","rule map ","rule to_h "]}," AWS S3 CORSRuleCollection _each_item":{"type":"method","name":"_each_item","children":[],"call":["CORSRule  new ","resp data [] each ","resp data [] ","resp data "," client get_bucket_cors ","options merge "," bucket name "," bucket "," client "," client get_bucket_cors  data [] each "," client get_bucket_cors  data [] "," client get_bucket_cors  data "]}," AWS S3 CORSRuleCollection clear":{"type":"method","name":"clear","children":[],"call":[" client delete_bucket_cors "," bucket name "," bucket "," client "]}," AWS S3 CORSRuleCollection delete_if":{"type":"method","name":"delete_if","children":[],"call":[" set ","rules << "," each "]}," AWS S3 CORSRuleCollection add":{"type":"method","name":"add","children":[],"call":[" set "]}," AWS S3 CORSRuleCollection set":{"type":"method","name":"set","children":[],"call":[" client put_bucket_cors "," bucket name "," bucket "," client "," rule_hashes "," clear ","rules == "," raise ","rules empty? "," rule_hashes  == "," rule_hashes  empty? "]}," AWS S3 CORSRuleCollection initialize":{"type":"method","name":"initialize","children":[],"call":[]}," AWS S3 CORSRule to_h":{"type":"method","name":"to_h","children":[],"call":["h []= "," expose_headers "," expose_headers empty? "," max_age_seconds "," allowed_headers "," allowed_headers empty? "," allowed_origins "," allowed_methods "," id "]}," AWS S3 CORSRule initialize":{"type":"method","name":"initialize","children":[],"call":["options [] "]}," AWS S3 Client Validators require_part_number!":{"type":"method","name":"require_part_number!","children":[],"call":["part_number to_s empty? ","part_number to_s "," validate! "]}," AWS S3 Client Validators set_body_stream_and_content_length":{"type":"method","name":"set_body_stream_and_content_length","children":[],"call":["request body_stream= ","options [] ","request headers []= ","request headers "," raise ","msg << "]}," AWS S3 Client extract_object_headers":{"type":"method","name":"extract_object_headers","children":[],"call":["resp data []= ","sse downcase to_sym ","sse downcase ","resp data ","resp http_response header ","resp http_response ","length to_i ","Time  parse ","(pair\n  (str \"x-amz-version-id\")\n  (sym :version_id)) each_pair ","1 == ","restore first =~ ","restore first ","DateTime  parse ","resp http_response headers [] ","resp http_response headers ","expiry first =~ ","expiry first ","meta []= ","(lvar :value) flatten join ","(lvar :value) flatten ","name =~ ","resp http_response headers each_pair ","resp http_response header  downcase to_sym ","resp http_response header  downcase ","resp http_response header  to_i ","resp http_response headers []  first =~ ","resp http_response headers []  first ","(lvar :resp http_response header ) flatten join ","(lvar :resp http_response header ) flatten "]}," AWS S3 Client parse_copy_part_response":{"type":"method","name":"parse_copy_part_response","children":[],"call":[" data []= ","(lvar :header) flatten first ","(lvar :header) flatten "," data ","resp http_response headers [] ","resp http_response headers ","resp http_response ","resp []= ","doc root elements [] text ","doc root elements [] ","doc root elements ","doc root ","REXML Document  new ","resp http_response body ","(lvar :resp http_response headers [] ) flatten first ","(lvar :resp http_response headers [] ) flatten ","resp http_response resp http_response headers [] s [] ","resp http_response resp http_response headers [] s ","REXML Document  new  root elements [] text ","REXML Document  new  root elements [] ","REXML Document  new  root elements ","REXML Document  new  root "]}," AWS S3 Client md5":{"type":"method","name":"md5","children":[],"call":["Base64  encode64 strip ","Base64  encode64 ","Digest MD5  digest ","OpenSSL Digest MD5  digest "]}," AWS S3 Client is_xml?":{"type":"method","name":"is_xml?","children":[],"call":["REXML Document  new has_elements? ","REXML Document  new "]}," AWS S3 Client move_access_control_policy":{"type":"method","name":"move_access_control_policy","children":[],"call":["options []= ","options delete to_xml ","options delete ","acl respond_to? "," is_xml? ","acl is_a? ","options [] ","options []  respond_to? ","options []  is_a? "]}," AWS S3 Client retryable_error?":{"type":"method","name":"retryable_error?","children":[],"call":[" extract_error_details ","response request_type == ","response request_type ","response error is_a? ","response error "," failed_multipart_upload? "]}," AWS S3 Client extract_error_details":{"type":"method","name":"extract_error_details","children":[],"call":["error [] ","Core XML Parser  parse ","response http_response body ","response http_response ","response request_type == ","response request_type ","response http_response status >= ","response http_response status ","Core XML Parser  parse  [] ","response http_response response http_response body  "]}," AWS S3 CipherIO handle_finish":{"type":"method","name":"handle_finish","children":[],"call":["@final size > ","@final size ","@final [] ","@final size - ","free_space - ","chunk << "," cipher final "," cipher ","free_space > ","bytes - ","chunk size ","@final []  size > "," cipher final  size > ","@final []  size "," cipher final  size ","@final []  [] "," cipher final  [] ","@final []  size - "," cipher final  size - ","bytes -  - ","bytes -  > "]}," AWS S3 CipherIO read_all":{"type":"method","name":"read_all","children":[],"call":["data << "," cipher final "," cipher "," cipher update ","body length > ","body length ","@stream read "," cipher update  << ","@stream read  length > ","@stream read  length "]}," AWS S3 CipherIO read_chunk":{"type":"method","name":"read_chunk","children":[],"call":[" cipher final "," cipher "," handle_finish "," cipher update ","chunk length > ","chunk length ","@stream read ","@stream read  length > ","@stream read  length "]}," AWS S3 CipherIO reset_cipher":{"type":"method","name":"reset_cipher","children":[],"call":["@orig_cipher clone "]}," AWS S3 CipherIO eof?":{"type":"method","name":"eof?","children":[],"call":[]}," AWS S3 CipherIO read":{"type":"method","name":"read","children":[],"call":["output_buffer replace "," read_all "," read_chunk "]}," AWS S3 CipherIO initialize":{"type":"method","name":"initialize","children":[],"call":["EncryptionUtils  get_encrypted_size ","Core MetaUtils  extend_method ","@stream rewind "," reset_cipher ","@stream respond_to? ","cipher clone "]}," AWS S3 BucketTagCollection inspect":{"type":"method","name":"inspect","children":[],"call":[" to_h inspect "," to_h "]}," AWS S3 BucketTagCollection eql?":{"type":"method","name":"eql?","children":[],"call":[" to_h == "," to_h "]}," AWS S3 BucketTagCollection to_h":{"type":"method","name":"to_h","children":[],"call":[" client get_bucket_tagging data [] "," client get_bucket_tagging data "," client get_bucket_tagging "," bucket name "," bucket "," client "]}," AWS S3 BucketTagCollection clear":{"type":"method","name":"clear","children":[],"call":[" client delete_bucket_tagging "," bucket name "," bucket "," client "]}," AWS S3 BucketTagCollection set":{"type":"method","name":"set","children":[],"call":[" client put_bucket_tagging "," bucket name "," bucket "," client "," clear ","tags empty? ","tags nil? "]}," AWS S3 BucketTagCollection []=":{"type":"method","name":"[]=","children":[],"call":[" set "," to_h merge "," to_h "]}," AWS S3 BucketTagCollection []":{"type":"method","name":"[]","children":[],"call":[" to_h [] "," to_h "]}," AWS S3 BucketTagCollection initialize":{"type":"method","name":"initialize","children":[],"call":[]}," AWS S3 BucketLifecycleConfiguration parse_xml":{"type":"method","name":"parse_xml","children":[],"call":["Rule  new ","r [] ","opts []= ","r [] [] ","Client XML GetBucketLifecycleConfiguration  parse rules map ","Client XML GetBucketLifecycleConfiguration  parse rules ","Client XML GetBucketLifecycleConfiguration  parse ","r status ","r expiration days ","r expiration ","r prefix ","r id "]}," AWS S3 BucketLifecycleConfiguration Rule convert_time_value":{"type":"method","name":"convert_time_value","children":[],"call":["Date  parse ","value to_s ","value is_a? ","value nil? "]}," AWS S3 BucketLifecycleConfiguration Rule eql?":{"type":"method","name":"eql?","children":[],"call":["other status == "," status ","other status ","other glacier_transition_time == "," glacier_transition_time ","other glacier_transition_time ","other expiration_time == "," expiration_time ","other expiration_time ","other prefix == "," prefix ","other prefix ","other id == "," id ","other id ","other configuration bucket == "," configuration bucket "," configuration ","other configuration bucket ","other configuration ","other is_a? ","other expiration_days == "," expiration_days ","other expiration_days ","other noncurrent_version_expiration_days == "," noncurrent_version_expiration_days ","other noncurrent_version_expiration_days ","other noncurrent_version_transition_days == "," noncurrent_version_transition_days ","other noncurrent_version_transition_days "]}," AWS S3 BucketLifecycleConfiguration Rule disabled!":{"type":"method","name":"disabled!","children":[],"call":[" status= "]}," AWS S3 BucketLifecycleConfiguration Rule disabled?":{"type":"method","name":"disabled?","children":[],"call":[" status == "," status "]}," AWS S3 BucketLifecycleConfiguration Rule enable!":{"type":"method","name":"enable!","children":[],"call":[" status= "]}," AWS S3 BucketLifecycleConfiguration Rule enabled?":{"type":"method","name":"enabled?","children":[],"call":[" status == "," status "]}," AWS S3 BucketLifecycleConfiguration Rule glacier_transition_time=":{"type":"method","name":"glacier_transition_time=","children":[],"call":[" convert_time_value "]}," AWS S3 BucketLifecycleConfiguration Rule expiration_time=":{"type":"method","name":"expiration_time=","children":[],"call":[" convert_time_value "]}," AWS S3 BucketLifecycleConfiguration Rule initialize":{"type":"method","name":"initialize","children":[],"call":[" status= "," expiration_time= "," send "," respond_to? ","options each ","Hash  === "]}," AWS S3 BucketLifecycleConfiguration persist":{"type":"method","name":"persist","children":[],"call":[" bucket lifecycle_configuration= "," bucket "," rules empty? "," rules ","force == "]}," AWS S3 BucketLifecycleConfiguration to_xml":{"type":"method","name":"to_xml","children":[],"call":["(send\n  (const\n    (const\n      (const nil :Nokogiri) :XML) :Builder) :new) doc root to_xml ","(send\n  (const\n    (const\n      (const nil :Nokogiri) :XML) :Builder) :new) doc root ","(send\n  (const\n    (const\n      (const nil :Nokogiri) :XML) :Builder) :new) doc ","xml Date ","rule glacier_transition_time to_s ","rule glacier_transition_time ","xml Days ","Integer  === ","xml StorageClass ","xml Transition ","rule expiration_time to_s ","rule expiration_time ","xml Expiration ","xml Status ","rule status ","xml Prefix ","rule prefix ","xml ID ","rule id ","xml Rule "," rules each "," rules ","xml LifecycleConfiguration ","Nokogiri XML Builder  new ","(send\n  (lvar :xml) :LifecycleConfiguration) strip ","rule expiration_days ","Builder XmlMarkup  new ","xml NoncurrentDays ","rule noncurrent_version_expiration_days ","xml NoncurrentVersionExpiration ","rule noncurrent_version_transition_days ","xml NoncurrentVersionTransition ","(send\n  (const\n    (const\n      (const nil :Nokogiri) :XML) :Builder) :new) doc root to_Builder XmlMarkup  new  ","Builder XmlMarkup  new  Date ","Builder XmlMarkup  new  Days ","Builder XmlMarkup  new  StorageClass ","Builder XmlMarkup  new  Transition ","Builder XmlMarkup  new  Expiration ","Builder XmlMarkup  new  Status ","Builder XmlMarkup  new  Prefix ","Builder XmlMarkup  new  ID ","Builder XmlMarkup  new  Rule ","Builder XmlMarkup  new  LifecycleConfiguration ","(send\n  (lvar :Builder XmlMarkup  new ) :LifecycleConfiguration) strip ","Builder XmlMarkup  new  NoncurrentDays ","Builder XmlMarkup  new  NoncurrentVersionExpiration ","Builder XmlMarkup  new  NoncurrentVersionTransition "]}," AWS S3 BucketLifecycleConfiguration clear":{"type":"method","name":"clear","children":[],"call":[" bucket lifecycle_configuration= "," bucket "]}," AWS S3 BucketLifecycleConfiguration replace":{"type":"method","name":"replace","children":[],"call":[" update "]}," AWS S3 BucketLifecycleConfiguration update":{"type":"method","name":"update","children":[],"call":[" persist "," instance_eval "," block_given? "," instance_exec "]}," AWS S3 BucketLifecycleConfiguration remove_rule":{"type":"method","name":"remove_rule","children":[],"call":["r id != ","r id "," rules select "," rules ","rule_id id ","rule_id is_a? "," raise ","rule_id nil? ","rule_id id  id ","rule_id id  is_a? ","rule_id id  nil? "]}," AWS S3 BucketLifecycleConfiguration add_rule":{"type":"method","name":"add_rule","children":[],"call":[" rules << "," rules ","Rule  new ","options [] ","options [] == ","UUIDTools UUID  random_create to_s ","UUIDTools UUID  random_create ","options []= ","Hash  === ","SecureRandom  uuid "," Rule  new s << "," Rule  new s "]}," AWS S3 BucketLifecycleConfiguration rules":{"type":"method","name":"rules","children":[],"call":[" parse_xml ","response http_response body ","response http_response "," bucket client get_bucket_lifecycle_configuration "," bucket client "," bucket "," bucket name "," bucket client get_bucket_lifecycle_configuration  http_ bucket client get_bucket_lifecycle_configuration  body "," bucket client get_bucket_lifecycle_configuration  http_ bucket client get_bucket_lifecycle_configuration  "]}," AWS S3 BucketLifecycleConfiguration initialize":{"type":"method","name":"initialize","children":[],"call":["options [] == ","options [] "," parse_xml "]}," AWS S3 Bucket lifecycle_configuration=":{"type":"method","name":"lifecycle_configuration=","children":[],"call":["BucketLifecycleConfiguration  new "," client set_bucket_lifecycle_configuration "," client ","client_opts []= "," name ","config to_xml ","config is_a? "," client delete_bucket_lifecycle_configuration ","config nil? ","config to_config to_xml  "]}," AWS S3 Bucket lifecycle_configuration":{"type":"method","name":"lifecycle_configuration","children":[],"call":["BucketLifecycleConfiguration  new "]}," AWS S3 Bucket clear!":{"type":"method","name":"clear!","children":[],"call":[" objects delete "," objects "," versions each_batch "," versions "]}," AWS S3 Bucket cors=":{"type":"method","name":"cors=","children":[],"call":[" cors set "," cors "]}," AWS S3 Bucket cors":{"type":"method","name":"cors","children":[],"call":["CORSRuleCollection  new "]}," AWS S3 Bucket tags=":{"type":"method","name":"tags=","children":[],"call":[" tags set "," tags "]}," AWS S3 Bucket tags":{"type":"method","name":"tags","children":[],"call":["BucketTagCollection  new "]}," AWS S3 Bucket website?":{"type":"method","name":"website?","children":[],"call":[" website_configuration ! ! "," website_configuration ! "," website_configuration "]}," AWS S3 Bucket remove_website_configuration":{"type":"method","name":"remove_website_configuration","children":[],"call":[" client delete_bucket_website "," name "," client "]}," AWS S3 Bucket website_configuration=":{"type":"method","name":"website_configuration=","children":[],"call":[" remove_website_configuration "," client put_bucket_website "," client ","client_opts []= "," name ","website_configuration to_hash ","website_configuration to_hash  []= "]}," AWS S3 Bucket website_configuration":{"type":"method","name":"website_configuration","children":[],"call":["WebsiteConfiguration  new ","resp data "," client get_bucket_website "," name "," client "," client get_bucket_website  data "]}," AWS S3 Bucket configure_website":{"type":"method","name":"configure_website","children":[],"call":[" website_configuration= "," block_given? ","WebsiteConfiguration  new "," website_configuration ","  website_configuration uration= ","  website_configuration uration "]}," AWS S3 ACLOptions ucfirst":{"type":"method","name":"ucfirst","children":[],"call":["str [] upcase + ","str [] ","str [] upcase "]}," AWS S3 ACLOptions format_grantee":{"type":"method","name":"format_grantee","children":[],"call":[" raise ","type [] ","type [] downcase ","(send\n  (send\n    (send\n      (lvar :type) :to_s) :split\n    (str \"_\")) :map) join "," ucfirst ","type to_s split map ","type to_s split ","type to_s ","grantee to_a flatten ","grantee to_a ","grantee keys count != ","grantee keys count ","grantee keys ","(send\n  (send\n    (send\n      (lvar :type) :to_s) :split\n    (str \"_\")) :map) join  [] ","(send\n  (send\n    (send\n      (lvar :type) :to_s) :split\n    (str \"_\")) :map) join  [] downcase ","(send\n  (send\n    (send\n      (lvar :(send\n  (send\n    (send\n      (lvar :type) :to_s) :split\n    (str \"_\")) :map) join ) :to_s) :split\n    (str \"_\")) :map) join ","(send\n  (send\n    (send\n      (lvar :type) :to_s) :split\n    (str \"_\")) :map) join  to_s split map ","(send\n  (send\n    (send\n      (lvar :type) :to_s) :split\n    (str \"_\")) :map) join  to_s split ","(send\n  (send\n    (send\n      (lvar :type) :to_s) :split\n    (str \"_\")) :map) join  to_s "]}," AWS S3 ACLOptions format_grants":{"type":"method","name":"format_grants","children":[],"call":["grants []= ","(send\n  (lvar :grantees) :map) join "," format_grantee ","grantees map ","grantees is_a? ","acl_hash each_pair "]}," AWS S3 ACLOptions xml?":{"type":"method","name":"xml?","children":[],"call":["REXML Document  new has_elements? ","REXML Document  new "]}," AWS S3 ACLOptions grant_hash?":{"type":"method","name":"grant_hash?","children":[],"call":["grant_keys include? ","acl_hash keys all? ","acl_hash keys "]}," AWS S3 ACLOptions acl_options":{"type":"method","name":"acl_options","children":[],"call":[" raise ","AccessControlList  new to_xml ","AccessControlList  new "," format_grants "," grant_hash? ","acl to_xml "," xml? ","acl to_s tr ","acl to_s "]}," AWS Route53 hosted_zones":{"type":"method","name":"hosted_zones","children":[],"call":["HostedZoneCollection  new "," config "]}," AWS Route53 ResourceRecordSetCollection _each_item":{"type":"method","name":"_each_item","children":[],"call":["resp data [] ","resp data ","ResourceRecordSet  new_from "," config "," hosted_zone_id ","details [] ","resp data [] each "," client list_resource_record_sets "," client ","options []= ","next_token [] ","@filters merge "," client list_resource_record_sets  data [] "," client list_resource_record_sets  data "," client list_resource_record_sets  data [] each ","@filters merge  []= "]}," AWS Route53 ResourceRecordSetCollection create":{"type":"method","name":"create","children":[],"call":["ResourceRecordSet  new "," config "," hosted_zone_id ","options [] ","batch call ","batch << ","CreateRequest  new ","ChangeBatch  new ","ChangeBatch  new  call ","ChangeBatch  new  << "]}," AWS Route53 ResourceRecordSetCollection []":{"type":"method","name":"[]","children":[],"call":["ResourceRecordSet  new "," config "," hosted_zone_id "]}," AWS Route53 ResourceRecordSetCollection initialize":{"type":"method","name":"initialize","children":[],"call":["options [] "]}," AWS Route53 ResourceRecordSet delete_options":{"type":"method","name":"delete_options","children":[],"call":["options []= "," resource_records "," resource_records empty? ! "," resource_records empty? "," ttl "," region "," weight "," alias_target "," set_identifier ","AWS  memoize "," type "," name "," health_check_id "," failover "]}," AWS Route53 ResourceRecordSet get_resource":{"type":"method","name":"get_resource","children":[],"call":[" client list_resource_record_sets "," client ","options []= "," hosted_zone_id "," set_identifier "," type "," name "]}," AWS Route53 ResourceRecordSet resource_identifiers":{"type":"method","name":"resource_identifiers","children":[],"call":[" set_identifier "," type "," name "]}," AWS Route53 ResourceRecordSet new_delete_request":{"type":"method","name":"new_delete_request","children":[],"call":["DeleteRequest  new ","options [] "," delete_options "," delete_options  [] "," delete_ delete_options  "]}," AWS Route53 ResourceRecordSet new_create_request":{"type":"method","name":"new_create_request","children":[],"call":["CreateRequest  new ","create_options [] "," delete_options merge "," delete_options "," delete_options merge  [] "]}," AWS Route53 ResourceRecordSet new_change_batch":{"type":"method","name":"new_change_batch","children":[],"call":["ChangeBatch  new ","options merge "," config "," hosted_zone_id "]}," AWS Route53 ResourceRecordSet delete":{"type":"method","name":"delete","children":[],"call":["batch call ","batch << "," new_delete_request "," new_change_batch ","DeleteRequest  new ","delete_options [] ","ChangeBatch  new ","options merge "," config "," hosted_zone_id ","delete_options []= "," resource_records "," ttl "," region "," weight "," alias_target "," set_identifier "," type "," name "," new_change_batch  call ","ChangeBatch  new  call "," new_change_batch  << ","ChangeBatch  new  << "," new_change_ new_change_batch  "," new_change_ChangeBatch  new  "]}," AWS Route53 ResourceRecordSet update":{"type":"method","name":"update","children":[],"call":["@create_options [] ","batch call ","batch << "," new_create_request "," new_delete_request ","AWS  memoize "," new_change_batch ","create_options [] ","CreateRequest  new ","DeleteRequest  new ","delete_options [] ","ChangeBatch  new ","options merge "," config "," hosted_zone_id ","delete_options merge ","delete_options []= "," resource_records "," ttl "," region "," weight "," alias_target "," set_identifier "," type "," name "," new_change_request ","@delete_options merge  [] "," new_change_batch  call ","ChangeBatch  new  call "," new_change_batch  << ","ChangeBatch  new  << "," new_change_ new_change_batch  "," new_change_ChangeBatch  new  ","delete_options merge  [] "]}," AWS Route53 ResourceRecordSet exists?":{"type":"method","name":"exists?","children":[],"call":["(send\n  (send\n    (send\n      (send nil :get_resource) :data) :[]\n    (sym :resource_record_sets)) :find) nil? ! ","(send\n  (send\n    (send\n      (send nil :get_resource) :data) :[]\n    (sym :resource_record_sets)) :find) nil? ","details [] == "," type ","details [] "," name "," set_identifier "," get_resource data [] find "," get_resource data [] "," get_resource data "," get_resource "]}," AWS Route53 ResourceRecordSet resource_records=":{"type":"method","name":"resource_records=","children":[],"call":["@create_options []= "]}," AWS Route53 ResourceRecordSet ttl=":{"type":"method","name":"ttl=","children":[],"call":["@create_options []= "]}," AWS Route53 ResourceRecordSet region=":{"type":"method","name":"region=","children":[],"call":["@create_options []= "]}," AWS Route53 ResourceRecordSet weight=":{"type":"method","name":"weight=","children":[],"call":["@create_options []= "]}," AWS Route53 ResourceRecordSet alias_target=":{"type":"method","name":"alias_target=","children":[],"call":["@create_options []= "]}," AWS Route53 ResourceRecordSet set_identifier=":{"type":"method","name":"set_identifier=","children":[],"call":["@create_options []= "]}," AWS Route53 ResourceRecordSet type=":{"type":"method","name":"type=","children":[],"call":["@create_options []= "]}," AWS Route53 ResourceRecordSet name=":{"type":"method","name":"name=","children":[],"call":["@create_options []= "]}," AWS Route53 ResourceRecordSet initialize":{"type":"method","name":"initialize","children":[],"call":["options [] "]}," AWS Route53 HostedZoneCollection _each_item":{"type":"method","name":"_each_item","children":[],"call":["resp data [] ","resp data ","HostedZone  new_from "," config ","details [] ","resp data [] each "," client list_hosted_zones "," client ","options []= ","@filters merge "," client list_hosted_zones  data [] "," client list_hosted_zones  data "," client list_hosted_zones  data [] each "," client list_HostedZone  new_from s ","@filters merge  []= "]}," AWS Route53 HostedZoneCollection create":{"type":"method","name":"create","children":[],"call":["HostedZone  new_from "," config ","resp [] [] ","resp [] ","ChangeInfo  new_from "," client create_hosted_zone "," client ","options [] []= ","options delete ","options [] ","options []= ","Time  now httpdate ","Time  now "," client create_hosted_zone  [] [] "," client create_hosted_zone  [] "]}," AWS Route53 HostedZoneCollection []":{"type":"method","name":"[]","children":[],"call":["HostedZone  new "," config "]}," AWS Route53 HostedZoneCollection initialize":{"type":"method","name":"initialize","children":[],"call":["options [] "]}," AWS Route53 HostedZone get_resource":{"type":"method","name":"get_resource","children":[],"call":[" client get_hosted_zone "," id "," client "]}," AWS Route53 HostedZone resource_identifiers":{"type":"method","name":"resource_identifiers","children":[],"call":[" caller_reference "," name "," id "]}," AWS Route53 HostedZone resource_record_sets":{"type":"method","name":"resource_record_sets","children":[],"call":["ResourceRecordSetCollection  new "," config "," id "]}," AWS Route53 HostedZone exists?":{"type":"method","name":"exists?","children":[],"call":[" get_resource data [] [] == "," path "," get_resource data [] [] "," get_resource data [] "," get_resource data "," get_resource "]}," AWS Route53 HostedZone delete":{"type":"method","name":"delete","children":[],"call":["ChangeInfo  new_from "," config ","resp [] [] ","resp [] "," client delete_hosted_zone "," id "," client "," client delete_hosted_zone  [] [] "," client delete_hosted_zone  [] "]}," AWS Route53 HostedZone path":{"type":"method","name":"path","children":[],"call":[" id "]}," AWS Route53 HostedZone initialize":{"type":"method","name":"initialize","children":[],"call":["options [] ","id sub "]}," AWS Route53 ChangeInfo get_resource":{"type":"method","name":"get_resource","children":[],"call":[" client get_change "," id "," client "]}," AWS Route53 ChangeInfo resource_identifiers":{"type":"method","name":"resource_identifiers","children":[],"call":[" id "]}," AWS Route53 ChangeInfo exists?":{"type":"method","name":"exists?","children":[],"call":[" get_resource data [] [] == "," id "," get_resource data [] [] "," get_resource data [] "," get_resource data "," get_resource "]}," AWS Route53 ChangeInfo initialize":{"type":"method","name":"initialize","children":[],"call":[]}," AWS Route53 DeleteRequest initialize":{"type":"method","name":"initialize","children":[],"call":[]}," AWS Route53 CreateRequest initialize":{"type":"method","name":"initialize","children":[],"call":[]}," AWS Route53 ChangeRequest to_hash":{"type":"method","name":"to_hash","children":[],"call":["q [] []= ","@change_options [] ","q [] "," type "," name ","q []= "," action "]}," AWS Route53 ChangeRequest initialize":{"type":"method","name":"initialize","children":[],"call":[]}," AWS Route53 ChangeBatch to_hash":{"type":"method","name":"to_hash","children":[],"call":["q [] [] << ","change to_hash ","q [] [] ","q [] "," each ","q [] []= "," comment ","q []= "," hosted_zone_id "]}," AWS Route53 ChangeBatch length":{"type":"method","name":"length","children":[],"call":["@changes length "]}," AWS Route53 ChangeBatch each":{"type":"method","name":"each","children":[],"call":["@changes each "]}," AWS Route53 ChangeBatch call":{"type":"method","name":"call","children":[],"call":["ChangeInfo  new_from "," config ","resp [] [] ","resp [] "," client change_resource_record_sets ","options merge "," to_hash "," client "," client change_resource_record_sets  [] [] "," client change_resource_record_sets  [] "]}," AWS Route53 ChangeBatch push":{"type":"method","name":"push","children":[],"call":["@changes push "]}," AWS Route53 ChangeBatch initialize":{"type":"method","name":"initialize","children":[],"call":["options [] "]}," AWS Redshift Request service":{"type":"method","name":"service","children":[],"call":[]}," AWS Record table_prefix":{"type":"method","name":"table_prefix","children":[],"call":[]}," AWS Record table_prefix=":{"type":"method","name":"table_prefix=","children":[],"call":[]}," AWS Record MethodValidator validate_attributes":{"type":"method","name":"validate_attributes","children":[],"call":["record send "," attribute_names each "," attribute_names "]}," AWS Record Validator blank?":{"type":"method","name":"blank?","children":[],"call":["value ! ","value !~ "]}," AWS Record Validations validate":{"type":"method","name":"validate","children":[],"call":[" validators << ","MethodValidator  new "," validators "]}," AWS Record Scope _shard":{"type":"method","name":"_shard","children":[],"call":[" base_class shard_name "," base_class ","@options [] "]}," AWS Record Scope first":{"type":"method","name":"first","children":[],"call":[" _handle_options find "," _handle_options "]}," AWS Record Scope shard":{"type":"method","name":"shard","children":[],"call":[" _with "]}," AWS Record Scope new":{"type":"method","name":"new","children":[],"call":[" base_class new "," base_class "," _shard ","attributes [] ","attributes delete ","attributes dup ","options merge! ","conditions first ","conditions first is_a? ","conditions size == ","conditions size ","@options [] each ","@options [] ","options []= "," _domain ","options key? ","attributes dup  [] ","attributes dup  delete ","attributes dup  dup "]}," AWS Record Model delete_storage":{"type":"method","name":"delete_storage","children":[],"call":[" sdb_item delete "," opt_lock_conditions "," sdb_item "]}," AWS Record Model update_storage":{"type":"method","name":"update_storage","children":[],"call":[" sdb_item attributes delete ","to_delete + "," sdb_item attributes "," sdb_item "," sdb_item attributes replace ","to_update merge ","to_delete empty? ","to_update merge! "," opt_lock_conditions ","to_delete << ","to_update []= ","attribute_values [] "," changed each "," changed "," serialize_attributes ","attribute_attribute_values []  [] "," serialize_attributes  [] "]}," AWS Record Model create_storage":{"type":"method","name":"create_storage","children":[],"call":[" sdb_item attributes add ","to_add merge "," opt_lock_conditions "," sdb_item attributes "," sdb_item "," serialize_attributes "," serialize_attributes  merge "]}," AWS Record Model deserialize_item_data":{"type":"method","name":"deserialize_item_data","children":[],"call":["data []= ","attribute deserialize ","values first ","values map ","attribute set? ","marked_for_deletion include? "," class attributes [] "," class attributes "," class ","item_data each_pair ","item_data [] "," class attributes []  deserialize "," class attributes []  set? "," class  class attributes [] s [] "," class  class attributes [] s "]}," AWS Record Model sdb_domain":{"type":"method","name":"sdb_domain","children":[],"call":[" class sdb_domain "," shard "," class "," sdb domains [] "," sdb_domain_name "," sdb domains "," sdb "]}," AWS Record Model sdb_item":{"type":"method","name":"sdb_item","children":[],"call":[" sdb_domain items [] "," id "," sdb_domain items "," sdb_domain "]}," AWS Record Model sdb":{"type":"method","name":"sdb","children":[],"call":["AWS SimpleDB  new "]}," AWS Record Model sdb_domain_name":{"type":"method","name":"sdb_domain_name","children":[],"call":[" shard_name ","AWS Record  domain_prefix "]}," AWS Record Model create_domain":{"type":"method","name":"create_domain","children":[],"call":[" sdb domains create "," sdb_domain_name "," sdb domains "," sdb "]}," AWS Record Model Scope _item_collection":{"type":"method","name":"_item_collection","children":[],"call":["items where ","@options [] each ","@options [] ","items limit ","items order "," base_class sdb_domain items "," base_class sdb_domain "," _shard "," base_class ","items where  where ","items limit  where ","items order  where "," base_class sdb_domain items  where ","items where  limit ","items limit  limit ","items order  limit "," base_class sdb_domain items  limit ","items where  order ","items limit  order ","items order  order "," base_class sdb_domain items  order "," base_class sdb_domain items where  "," base_class sdb_domain items limit  "," base_class sdb_domain items order  "," base_class sdb_domain  base_class sdb_domain items  "]}," AWS Record Model Scope _handle_options":{"type":"method","name":"_handle_options","children":[],"call":["scope send ","args is_a? ","method == ","options each_pair ","scope send  send "]}," AWS Record Model Scope _merge_scope":{"type":"method","name":"_merge_scope","children":[],"call":["merged send ","merged where ","opt_value each ","opt_name == ","(nil) include? ","scope instance_variable_get each_pair ","scope instance_variable_get ","merged send  send ","merged where  send ","merged send  where ","merged where  where "]}," AWS Record Model Scope _each_object":{"type":"method","name":"_each_object","children":[],"call":["obj send ","item_data attributes ","item_data name "," base_class new "," _shard "," base_class ","items select each ","items select "," _item_collection "," base_class new  send "," _item_collection  select each "," _item_collection  select "]}," AWS Record Model Scope order":{"type":"method","name":"order","children":[],"call":[" _with "]}," AWS Record Model Scope where":{"type":"method","name":"where","children":[],"call":[" _with ","@options [] + ","@options [] "," raise ","conditions empty? "]}," AWS Record Model Scope new":{"type":"method","name":"new","children":[],"call":["attributes merge! ","conditions first ","conditions first is_a? ","conditions size == ","conditions size ","@options [] each ","@options [] ","attributes dup ","attributes dup  merge! ","attributes dup  dup "]}," AWS Record Model Scope initialize":{"type":"method","name":"initialize","children":[],"call":["@options [] "]}," AWS Record Model limit":{"type":"method","name":"limit","children":[],"call":[" new_scope limit "," new_scope "]}," AWS Record Model order":{"type":"method","name":"order","children":[],"call":[" new_scope order "," new_scope "]}," AWS Record Model where":{"type":"method","name":"where","children":[],"call":[" new_scope where "," new_scope "]}," AWS Record Model first":{"type":"method","name":"first","children":[],"call":[" new_scope first "," new_scope "]}," AWS Record Model count":{"type":"method","name":"count","children":[],"call":[" new_scope count "," new_scope "]}," AWS Record Model each":{"type":"method","name":"each","children":[],"call":[" all each "," all "]}," AWS Record Model all":{"type":"method","name":"all","children":[],"call":[" new_scope find "," new_scope "]}," AWS Record Model shard":{"type":"method","name":"shard","children":[],"call":[" new_scope shard "," new_scope "]}," AWS Record Model find":{"type":"method","name":"find","children":[],"call":[" new_scope find "," new_scope "]}," AWS Record Model find_by_id":{"type":"method","name":"find_by_id","children":[],"call":["obj send "," new "," raise ","data empty? ","domain items [] data attributes ","domain items [] data ","domain items [] ","domain items "," sdb_domain ","options [] "," new  send ","domain items [] data attributes  empty? ","domain items [] domain items [] data attributes  attributes "," sdb_domain  items [] data attributes ","domain items [] domain items [] data attributes  "," sdb_domain  items [] data "," sdb_domain  items [] "," sdb_domain  items "," sdb_ sdb_domain  "]}," AWS Record Model timestamps":{"type":"method","name":"timestamps","children":[],"call":[" datetime_attr "]}," AWS Record Model date_attr":{"type":"method","name":"date_attr","children":[],"call":[" add_attribute ","Record Attributes DateAttr  new "]}," AWS Record Model datetime_attr":{"type":"method","name":"datetime_attr","children":[],"call":[" add_attribute ","Record Attributes DateTimeAttr  new "]}," AWS Record Model boolean_attr":{"type":"method","name":"boolean_attr","children":[],"call":[" __send__ ! ! "," __send__ ! "," __send__ ","attr name "," define_method "," add_attribute ","Attributes BooleanAttr  new "," add_attribute  name "," add_ add_attribute ibute "]}," AWS Record Model sortable_float_attr":{"type":"method","name":"sortable_float_attr","children":[],"call":[" add_attribute ","Attributes SortableFloatAttr  new "]}," AWS Record Model float_attr":{"type":"method","name":"float_attr","children":[],"call":[" add_attribute ","Attributes FloatAttr  new "]}," AWS Record Model sortable_integer_attr":{"type":"method","name":"sortable_integer_attr","children":[],"call":[" add_attribute ","Attributes SortableIntegerAttr  new "]}," AWS Record Model integer_attr":{"type":"method","name":"integer_attr","children":[],"call":[" add_attribute ","Attributes IntegerAttr  new "]}," AWS Record Model string_attr":{"type":"method","name":"string_attr","children":[],"call":[" add_attribute ","Record Attributes StringAttr  new "]}," AWS Record Model Attributes SortableFloatAttr deserialize":{"type":"method","name":"deserialize","children":[],"call":[]}," AWS Record Model Attributes SortableFloatAttr serialize":{"type":"method","name":"serialize","children":[],"call":[]}," AWS Record Model Attributes SortableFloatAttr initialize":{"type":"method","name":"initialize","children":[],"call":[" raise ","range first is_a? ","range first ","range is_a? ","options [] ","options []  first is_a? ","options []  first ","options []  is_a? "]}," AWS Record Model Attributes SortableIntegerAttr check_range":{"type":"method","name":"check_range","children":[],"call":[]}," AWS Record Model Attributes SortableIntegerAttr offset_and_precision":{"type":"method","name":"offset_and_precision","children":[],"call":[]}," AWS Record Model Attributes SortableIntegerAttr deserialize":{"type":"method","name":"deserialize","children":[],"call":[]}," AWS Record Model Attributes SortableIntegerAttr serialize":{"type":"method","name":"serialize","children":[],"call":[]}," AWS Record Model Attributes SortableIntegerAttr initialize":{"type":"method","name":"initialize","children":[],"call":[" raise ","range first is_a? ","range first ","range is_a? ","options [] ","options []  first is_a? ","options []  first ","options []  is_a? "]}," AWS Record Model Attributes FloatAttr serialize":{"type":"method","name":"serialize","children":[],"call":[]}," AWS Record Model Attributes IntegerAttr serialize":{"type":"method","name":"serialize","children":[],"call":[]}," AWS Record Model Attributes BooleanAttr serialize":{"type":"method","name":"serialize","children":[],"call":[]}," AWS Record HashModel deserialize_item_data":{"type":"method","name":"deserialize_item_data","children":[],"call":["hash []= ","attribute deserialize ","value map ","value is_a? "," class attributes [] "," class attributes "," class ","data inject "," class attributes []  deserialize "," class  class attributes [] s [] "," class  class attributes [] s "]}," AWS Record HashModel delete_storage":{"type":"method","name":"delete_storage","children":[],"call":[" dynamo_db_item delete "," opt_lock_conditions "," dynamo_db_item "]}," AWS Record HashModel update_storage":{"type":"method","name":"update_storage","children":[],"call":["u set ","u delete ","value == ","value nil? "," serialize_attribute ","@_data [] "," class attribute_for "," class "," changed each "," changed "," dynamo_db_item attributes update "," opt_lock_conditions "," dynamo_db_item attributes "," dynamo_db_item "," serialize_attribute  == "," serialize_attribute  nil? "," serialize_ class attribute_for  "," class  class attribute_for _for "," dynamo_db_item  class attribute_for s update "," dynamo_db_item  class attribute_for s "]}," AWS Record HashModel create_storage":{"type":"method","name":"create_storage","children":[],"call":[" dynamo_db_table items create "," opt_lock_conditions "," dynamo_db_table items "," dynamo_db_table "," serialize_attributes merge "," serialize_attributes "," serialize_ serialize_attributes merge  merge "," serialize_ serialize_attributes merge  "]}," AWS Record HashModel dynamo_db_table":{"type":"method","name":"dynamo_db_table","children":[],"call":[" class dynamo_db_table "," shard "," class ","table hash_key= "," dynamo_db tables [] "," dynamo_db_table_name "," dynamo_db tables "," dynamo_db "," hash_key "," class dynamo_db_ dynamo_db tables []  "," dynamo_db tables []  hash_key= "," dynamo_db  dynamo_db tables [] s [] "," dynamo_db_ dynamo_db tables [] _name "," dynamo_db  dynamo_db tables [] s "]}," AWS Record HashModel dynamo_db_item":{"type":"method","name":"dynamo_db_item","children":[],"call":[" dynamo_db_table items [] "," id "," dynamo_db_table items "," dynamo_db_table "," hash_key "]}," AWS Record HashModel dynamo_db":{"type":"method","name":"dynamo_db","children":[],"call":["AWS DynamoDB  new "]}," AWS Record HashModel dynamo_db_table_name":{"type":"method","name":"dynamo_db_table_name","children":[],"call":[" shard_name ","Record  table_prefix "]}," AWS Record HashModel create_table":{"type":"method","name":"create_table","children":[],"call":[" dynamo_db tables create "," dynamo_db tables "," dynamo_db ","create_opts []= "," dynamo_db_table_name ","options [] "," hash_key "," dynamo_db_ dynamo_db_table_name  "]}," AWS Record HashModel Scope _item_collection":{"type":"method","name":"_item_collection","children":[],"call":[" base_class dynamo_db_table items "," base_class dynamo_db_table "," _shard "," base_class "]}," AWS Record HashModel Scope _handle_options":{"type":"method","name":"_handle_options","children":[],"call":["scope send ","options each_pair ","scope send  send "]}," AWS Record HashModel Scope _merge_scope":{"type":"method","name":"_merge_scope","children":[],"call":["merged send ","(nil) include? ","scope instance_variable_get each_pair ","scope instance_variable_get ","merged send  send "]}," AWS Record HashModel Scope _each_object":{"type":"method","name":"_each_object","children":[],"call":["obj send ","item_data attributes ","item_data attributes [] "," base_class new "," _shard "," base_class ","items select each ","items select ","@options [] "," _item_collection "," base_class new  send "," _item_collection  select each "," _item_collection  select "]}," AWS Record HashModel limit":{"type":"method","name":"limit","children":[],"call":[" new_scope limit "," new_scope "]}," AWS Record HashModel first":{"type":"method","name":"first","children":[],"call":[" new_scope first "," new_scope "]}," AWS Record HashModel count":{"type":"method","name":"count","children":[],"call":[" new_scope count "," new_scope "," options "]}," AWS Record HashModel each":{"type":"method","name":"each","children":[],"call":[" all each "," all "]}," AWS Record HashModel all":{"type":"method","name":"all","children":[],"call":[" new_scope find "," new_scope "]}," AWS Record HashModel shard":{"type":"method","name":"shard","children":[],"call":[" new_scope shard "," new_scope "]}," AWS Record HashModel find":{"type":"method","name":"find","children":[],"call":[" new_scope find "," new_scope "]}," AWS Record HashModel find_by_id":{"type":"method","name":"find_by_id","children":[],"call":["obj send "," new "," raise ","data empty? ","table items [] attributes to_h ","table items [] attributes ","table items [] ","table items "," dynamo_db_table ","options [] "," new  send ","table items [] attributes to_h  empty? "," dynamo_db_table  items [] attributes to_h "," dynamo_db_table  items [] attributes "," dynamo_db_table  items [] "," dynamo_db_table  items "," dynamo_db_ dynamo_db_table  "]}," AWS Record HashModel timestamps":{"type":"method","name":"timestamps","children":[],"call":[" datetime_attr "]}," AWS Record HashModel binary_attr":{"type":"method","name":"binary_attr","children":[],"call":[]}," AWS Record HashModel date_attr":{"type":"method","name":"date_attr","children":[],"call":[" add_attribute ","Attributes DateAttr  new "]}," AWS Record HashModel datetime_attr":{"type":"method","name":"datetime_attr","children":[],"call":[" add_attribute ","Attributes DateTimeAttr  new "]}," AWS Record HashModel boolean_attr":{"type":"method","name":"boolean_attr","children":[],"call":[" __send__ ! ! "," __send__ ! "," __send__ ","attr name "," define_method "," add_attribute ","Attributes BooleanAttr  new "," add_attribute  name "," add_ add_attribute ibute "]}," AWS Record HashModel float_attr":{"type":"method","name":"float_attr","children":[],"call":[" add_attribute ","Attributes FloatAttr  new "]}," AWS Record HashModel integer_attr":{"type":"method","name":"integer_attr","children":[],"call":[" add_attribute ","Attributes IntegerAttr  new "]}," AWS Record HashModel string_attr":{"type":"method","name":"string_attr","children":[],"call":[" add_attribute ","Attributes StringAttr  new "]}," AWS Record Attributes DateTimeAttr allow_set?":{"type":"method","name":"allow_set?","children":[],"call":[]}," AWS Record Attributes DateTimeAttr serialize":{"type":"method","name":"serialize","children":[],"call":[]}," AWS Record Attributes DateTimeAttr type_cast":{"type":"method","name":"type_cast","children":[],"call":[]}," AWS Record Attributes DateAttr allow_set?":{"type":"method","name":"allow_set?","children":[],"call":[]}," AWS Record Attributes DateAttr serialize":{"type":"method","name":"serialize","children":[],"call":[]}," AWS Record Attributes DateAttr type_cast":{"type":"method","name":"type_cast","children":[],"call":[]}," AWS Record Attributes FloatAttr allow_set?":{"type":"method","name":"allow_set?","children":[],"call":[]}," AWS Record Attributes FloatAttr serialize":{"type":"method","name":"serialize","children":[],"call":[]}," AWS Record Attributes FloatAttr type_cast":{"type":"method","name":"type_cast","children":[],"call":[]}," AWS Record Attributes IntegerAttr allow_set?":{"type":"method","name":"allow_set?","children":[],"call":[]}," AWS Record Attributes IntegerAttr serialize":{"type":"method","name":"serialize","children":[],"call":[]}," AWS Record Attributes IntegerAttr type_cast":{"type":"method","name":"type_cast","children":[],"call":[]}," AWS Record Attributes BooleanAttr allow_set?":{"type":"method","name":"allow_set?","children":[],"call":[]}," AWS Record Attributes BooleanAttr serialize":{"type":"method","name":"serialize","children":[],"call":[]}," AWS Record Attributes BooleanAttr type_cast":{"type":"method","name":"type_cast","children":[],"call":[]}," AWS Record Attributes StringAttr allow_set?":{"type":"method","name":"allow_set?","children":[],"call":[]}," AWS Record Attributes StringAttr serialize":{"type":"method","name":"serialize","children":[],"call":[]}," AWS Record Attributes StringAttr type_cast":{"type":"method","name":"type_cast","children":[],"call":[]}," AWS Record Attributes BaseAttr expect":{"type":"method","name":"expect","children":[],"call":[]}," AWS Record Attributes BaseAttr allow_set?":{"type":"method","name":"allow_set?","children":[],"call":[]}," AWS Record Attributes BaseAttr deserialize":{"type":"method","name":"deserialize","children":[],"call":[" class deserialize "," options "," class "]}," AWS Record Attributes BaseAttr serialize":{"type":"method","name":"serialize","children":[],"call":[" class serialize "," options "," class "]}," AWS Record Attributes BaseAttr type_cast":{"type":"method","name":"type_cast","children":[],"call":[" class type_cast "," options "," class "]}," AWS Record Attributes BaseAttr persist_as":{"type":"method","name":"persist_as","children":[],"call":["(or\n  (send\n    (send nil :options) :[]\n    (sym :persist_as))\n  (ivar :@name)) to_s "," options [] "," options "]}," AWS Record Attributes BaseAttr default_value":{"type":"method","name":"default_value","children":[],"call":[" options [] "," options "," options [] call "," options [] is_a? "]}," AWS Record Attributes BaseAttr set?":{"type":"method","name":"set?","children":[],"call":[" options [] "," options "]}," AWS Record Attributes BaseAttr initialize":{"type":"method","name":"initialize","children":[],"call":[" raise "," class "," class allow_set? ! "," class allow_set? ","options [] ","options dup ","name to_s "]}," AWS Record AbstractBase ClassMethods create_impl":{"type":"method","name":"create_impl","children":[],"call":["obj send "," new "," send ","attributes map ","attributes is_a? "," new  send "]}," AWS Record AbstractBase ClassMethods add_attribute":{"type":"method","name":"add_attribute","children":[],"call":[" reset_attribute! "," define_method "," attribute_will_change! "," attribute_was "," attribute_change "," attribute_changed? ","@_data [] "," [] "," []= "," attributes []= "," attributes ","attribute name "]}," AWS Record AbstractBase ClassMethods attribute_for":{"type":"method","name":"attribute_for","children":[],"call":[" block_given? "," raise ","UndefinedAttributeError  new ","attribute_name to_s "," attributes [] "," attributes "," attributes [] _name to_s ","  attributes [] s [] ","  attributes [] s "]}," AWS Record AbstractBase ClassMethods attributes":{"type":"method","name":"attributes","children":[],"call":[]}," AWS Record AbstractBase ClassMethods optimistic_locking_attr":{"type":"method","name":"optimistic_locking_attr","children":[],"call":[]}," AWS Record AbstractBase ClassMethods optimistic_locking?":{"type":"method","name":"optimistic_locking?","children":[],"call":["@optimistic_locking_attr ! ! ","@optimistic_locking_attr ! "]}," AWS Record AbstractBase ClassMethods optimistic_locking":{"type":"method","name":"optimistic_locking","children":[],"call":[" integer_attr "]}," AWS Record AbstractBase ClassMethods new_scope":{"type":"method","name":"new_scope","children":[],"call":[" Scope  new "]}," AWS Record AbstractBase ClassMethods create!":{"type":"method","name":"create!","children":[],"call":[" create_impl "]}," AWS Record AbstractBase ClassMethods create":{"type":"method","name":"create","children":[],"call":[" create_impl "]}," AWS Record AbstractBase ClassMethods scope":{"type":"method","name":"scope","children":[],"call":[" extend "," define_method ","Module  new "," lambda "]}," AWS Record AbstractBase ClassMethods shard_name":{"type":"method","name":"shard_name","children":[],"call":["name name gsub ","Record  domain_prefix ","name name ","Record  table_prefix "," name ","name is_a? ","name nil? ","name name  name name  gsub "," name   name  gsub ","name name  name name  "," name   name  "," name name  ","  name  ","name name  is_a? "," name  is_a? ","name name  nil? "," name  nil? "]}," AWS Record AbstractBase ClassMethods set_shard_name":{"type":"method","name":"set_shard_name","children":[],"call":[]}," AWS Record AbstractBase InstanceMethods delete_storage":{"type":"method","name":"delete_storage","children":[],"call":[" raise "]}," AWS Record AbstractBase InstanceMethods update_storage":{"type":"method","name":"update_storage","children":[],"call":[" raise "]}," AWS Record AbstractBase InstanceMethods create_storage":{"type":"method","name":"create_storage","children":[],"call":[" raise "]}," AWS Record AbstractBase InstanceMethods hydrate":{"type":"method","name":"hydrate","children":[],"call":[" bulk_assign "," deserialize_item_data "," ignore_changes ","@_data []= ","attribute name "," class attributes values each "," class attributes values "," class attributes "," class "]}," AWS Record AbstractBase InstanceMethods serialize_attribute":{"type":"method","name":"serialize_attribute","children":[],"call":["attribute serialize ","type_casted_value map "," type_cast "," type_cast  map "]}," AWS Record AbstractBase InstanceMethods serialize_attributes":{"type":"method","name":"serialize_attributes","children":[],"call":[" raise ","EmptyRecordError  new ","hash empty? ","hash []= ","(nil) include? "," serialize_attribute ","@_data [] "," class attributes each_pair "," class attributes "," class "]}," AWS Record AbstractBase InstanceMethods type_cast":{"type":"method","name":"type_cast","children":[],"call":["attribute type_cast ","Set  new ","values compact ","values << ","Record  as_array inject ","Record  as_array ","attribute set? "]}," AWS Record AbstractBase InstanceMethods flatten_date_parts":{"type":"method","name":"flatten_date_parts","children":[],"call":["hash []= ","DateTime  new ","Date  new ","Time  local ","values [] ","now day ","now month ","now year ","Time  now ","values size ","hash [] ","multi_attributes each ","multi_attributes << ","hash [] []= ","value to_i ","index to_i - ","index to_i ","key to_s split ","key to_s ","key =~ ","attributes inject ","Set  new ","hash []  [] ","Time  now  day ","Time  now  month ","Time  now  year ","Time  Time  now  ","hash []  size ","Set  new  each ","Set  new  << "]}," AWS Record AbstractBase InstanceMethods bulk_assign":{"type":"method","name":"bulk_assign","children":[],"call":[" __send__ "," flatten_date_parts each_pair "," flatten_date_parts "]}," AWS Record AbstractBase InstanceMethods assign_default_values":{"type":"method","name":"assign_default_values","children":[],"call":["@_data []= ","attribute default_value ","attribute name ","attribute default_value clone "," class attributes values each "," class attributes values "," class attributes "," class "," ignore_changes ","default clone ","attribute attribute default_value _value ","attribute attribute default_value _value clone ","attribute default_value  clone "]}," AWS Record AbstractBase InstanceMethods opt_lock_conditions":{"type":"method","name":"opt_lock_conditions","children":[],"call":["conditions []= ","lock_attr name ","lock_attr serialize "," attribute_was "," if_locks_optimistically "," attribute_ attribute_was  "]}," AWS Record AbstractBase InstanceMethods if_locks_optimistically":{"type":"method","name":"if_locks_optimistically","children":[],"call":[" class optimistic_locking_attr "," class "]}," AWS Record AbstractBase InstanceMethods increment_optimistic_lock_value":{"type":"method","name":"increment_optimistic_lock_value","children":[],"call":[" []= ","lock_attr name ","value + "," [] "," if_locks_optimistically "," []  + "]}," AWS Record AbstractBase InstanceMethods touch_timestamps":{"type":"method","name":"touch_timestamps","children":[],"call":[" __send__ "," attribute_changed? ! "," attribute_changed? "," class attributes [] "," class attributes "," class ","attributes each ","Time  now ","Time  Time  now  "]}," AWS Record AbstractBase InstanceMethods populate_id":{"type":"method","name":"populate_id","children":[],"call":["UUIDTools UUID  random_create to_s downcase ","UUIDTools UUID  random_create to_s ","UUIDTools UUID  random_create "]}," AWS Record AbstractBase InstanceMethods update":{"type":"method","name":"update","children":[],"call":[" update_storage "," increment_optimistic_lock_value "," touch_timestamps "," changed? "]}," AWS Record AbstractBase InstanceMethods create":{"type":"method","name":"create","children":[],"call":[" create_storage "," increment_optimistic_lock_value "," touch_timestamps "," populate_id "]}," AWS Record AbstractBase InstanceMethods []":{"type":"method","name":"[]","children":[],"call":[" type_cast ","@_data [] ","attribute name "," class attribute_for "," class "]}," AWS Record AbstractBase InstanceMethods []=":{"type":"method","name":"[]=","children":[],"call":["@_data []= ","attribute name "," attribute_will_change! "," clear_change! ","original_value == "," type_cast "," attribute_was "," if_tracking_changes "," class attribute_for "," class "," type_cast  == "]}," AWS Record AbstractBase InstanceMethods deleted?":{"type":"method","name":"deleted?","children":[],"call":["@_deleted ! ! ","@_deleted ! "," persisted? "]}," AWS Record AbstractBase InstanceMethods delete":{"type":"method","name":"delete","children":[],"call":[" raise "," delete_storage "," deleted? "," persisted? "]}," AWS Record AbstractBase InstanceMethods update_attributes!":{"type":"method","name":"update_attributes!","children":[],"call":[" raise ","InvalidRecordError  new "," update_attributes "]}," AWS Record AbstractBase InstanceMethods update_attributes":{"type":"method","name":"update_attributes","children":[],"call":[" save "," bulk_assign "]}," AWS Record AbstractBase InstanceMethods save!":{"type":"method","name":"save!","children":[],"call":[" raise ","InvalidRecordError  new "," save "]}," AWS Record AbstractBase InstanceMethods save":{"type":"method","name":"save","children":[],"call":[" clear_changes! "," create "," update "," persisted? "," valid? "]}," AWS Record AbstractBase InstanceMethods errors":{"type":"method","name":"errors","children":[],"call":["Errors  new "]}," AWS Record AbstractBase InstanceMethods valid?":{"type":"method","name":"valid?","children":[],"call":[" errors empty? "," errors "," run_validations ","opts [] ","(pair\n  (sym :validate)\n  (true)) merge ","opts nil? ","(pair\n  (sym :validate)\n  (true)) merge  [] ","(pair\n  (sym :validate)\n  (true)) merge  nil? "]}," AWS Record AbstractBase InstanceMethods new_record?":{"type":"method","name":"new_record?","children":[],"call":[" persisted? ! "," persisted? "]}," AWS Record AbstractBase InstanceMethods persisted?":{"type":"method","name":"persisted?","children":[],"call":["@_persisted ! ! ","@_persisted ! "]}," AWS Record AbstractBase InstanceMethods attributes=":{"type":"method","name":"attributes=","children":[],"call":[" bulk_assign "]}," AWS Record AbstractBase InstanceMethods attributes":{"type":"method","name":"attributes","children":[],"call":["hash merge "," __send__ "," class attributes keys inject "," class attributes keys "," class attributes "," class ","attributes []= "," id "," persisted? ","Core IndifferentHash  new "," class Core IndifferentHash  new  keys inject "," class Core IndifferentHash  new  keys "," class Core IndifferentHash  new  ","Core IndifferentHash  new  []= "]}," AWS Record AbstractBase InstanceMethods id":{"type":"method","name":"id","children":[],"call":[]}," AWS Record AbstractBase InstanceMethods shard":{"type":"method","name":"shard","children":[],"call":[]}," AWS Record AbstractBase InstanceMethods initialize":{"type":"method","name":"initialize","children":[],"call":[" bulk_assign "," assign_default_values "," class shard_name "," class ","attributes delete ","attributes dup ","attributes dup  delete ","attributes dup  dup "]}," AWS Record AbstractBase extended":{"type":"method","name":"extended","children":[],"call":[]}," AWS RDS db_snapshots":{"type":"method","name":"db_snapshots","children":[],"call":["DBSnapshotCollection  new "," config "]}," AWS RDS db_instances":{"type":"method","name":"db_instances","children":[],"call":["DBInstanceCollection  new "," config "]}," AWS RDS DBSnapshotCollection _each_item":{"type":"method","name":"_each_item","children":[],"call":["response data [] ","response data ","DBSnapshot  new_from "," config ","details [] ","response data [] each "," client describe_db_snapshots "," client ","options []= ","(send\n  (array\n    (int 20)\n    (lvar :max_records)) :max) min ","(int 20) max ","@filters merge "," client describe_db_snapshots  data [] "," client describe_db_snapshots  data "," client describe_db_snapshots  data [] each "," client describe_DBSnapshot  new_from s ","@filters merge  []= "]}," AWS RDS DBSnapshotCollection filter":{"type":"method","name":"filter","children":[],"call":["DBSnapshotCollection  new ","options []= "," config ","@filters merge ","name to_s to_sym ","name to_s "]}," AWS RDS DBSnapshotCollection with_type":{"type":"method","name":"with_type","children":[],"call":[" filter "]}," AWS RDS DBSnapshotCollection db_instance":{"type":"method","name":"db_instance","children":[],"call":[" filter ","id to_s downcase ","id to_s ","db_instance id ","db_instance is_a? ","db_instance id  to_s downcase ","db_instance id  to_s ","db_instance db_instance id  "]}," AWS RDS DBSnapshotCollection []":{"type":"method","name":"[]","children":[],"call":["DBSnapshot  new "," config "]}," AWS RDS DBSnapshotCollection initialize":{"type":"method","name":"initialize","children":[],"call":["options [] "]}," AWS RDS DBSnapshot get_resource":{"type":"method","name":"get_resource","children":[],"call":[" client describe_db_snapshots "," client ","options []= "," db_snapshot_identifier "]}," AWS RDS DBSnapshot resource_identifiers":{"type":"method","name":"resource_identifiers","children":[],"call":[" id "]}," AWS RDS DBSnapshot exists?":{"type":"method","name":"exists?","children":[],"call":[" get_resource "]}," AWS RDS DBSnapshot restore_instance":{"type":"method","name":"restore_instance","children":[],"call":[" client restore_db_instance_from_db_snapshot "," client "," db_instance_id ","options [] ","options []= "," db_snapshot_identifier "]}," AWS RDS DBSnapshot delete":{"type":"method","name":"delete","children":[],"call":[" client delete_db_snapshot "," db_snapshot_identifier "," client "]}," AWS RDS DBSnapshot copy":{"type":"method","name":"copy","children":[],"call":["DBSnapshot  new_from "," config ","resp [] "," client copy_db_snapshot "," client ","options []= "," id "," client copy_db_snapshot  [] "]}," AWS RDS DBSnapshot db_instance":{"type":"method","name":"db_instance","children":[],"call":["DBInstance  new "," config "," db_instance_id "]}," AWS RDS DBSnapshot initialize":{"type":"method","name":"initialize","children":[],"call":[]}," AWS RDS DBInstanceCollection _each_item":{"type":"method","name":"_each_item","children":[],"call":["response data [] ","response data ","DBInstance  new_from "," config ","details [] ","response data [] each "," client describe_db_instances "," client ","options []= ","(send\n  (array\n    (int 20)\n    (lvar :max_records)) :max) min ","(int 20) max "," client describe_db_instances  data [] "," client describe_db_instances  data "," client describe_db_instances  data [] each "," client describe_DBInstance  new_from s "]}," AWS RDS DBInstanceCollection create":{"type":"method","name":"create","children":[],"call":["DBInstance  new_from "," config ","resp [] "," client create_db_instance "," client ","options []= "," client create_db_instance  [] "]}," AWS RDS DBInstanceCollection []":{"type":"method","name":"[]","children":[],"call":["DBInstance  new "," config ","db_instance_id to_s downcase ","db_instance_id to_s "]}," AWS RDS DBInstance get_resource":{"type":"method","name":"get_resource","children":[],"call":[" client describe_db_instances "," id "," client "]}," AWS RDS DBInstance resource_identifiers":{"type":"method","name":"resource_identifiers","children":[],"call":[" id "]}," AWS RDS DBInstance exists?":{"type":"method","name":"exists?","children":[],"call":[" get_resource "," fail "," id to_s empty? "," id to_s "," id "]}," AWS RDS DBInstance delete":{"type":"method","name":"delete","children":[],"call":[" client delete_db_instance ","options merge "," id "," client "]}," AWS RDS DBInstance reboot":{"type":"method","name":"reboot","children":[],"call":[" client reboot_db_instance ","options merge "," id "," client "]}," AWS RDS DBInstance create_snapshot":{"type":"method","name":"create_snapshot","children":[],"call":["DBSnapshot  new_from "," config ","resp [] "," client create_db_snapshot "," client ","options []= "," db_instance_identifier "," client create_db_snapshot  [] "]}," AWS RDS DBInstance snapshots":{"type":"method","name":"snapshots","children":[],"call":["DBSnapshotCollection  new db_instance ","DBSnapshotCollection  new "," config "]}," AWS RDS DBInstance modify":{"type":"method","name":"modify","children":[],"call":[" client modify_db_instance ","options merge "," id "," client "]}," AWS RDS DBInstance vpc":{"type":"method","name":"vpc","children":[],"call":["EC2 VPC  new "," config "," vpc_id "]}," AWS RDS DBInstance initialize":{"type":"method","name":"initialize","children":[],"call":[]}," AWS OpsWorks Request service":{"type":"method","name":"service","children":[],"call":[]}," AWS IAM account_password_policy":{"type":"method","name":"account_password_policy","children":[],"call":["hash merge ","policy send ","method to_s sub to_sym ","method to_s sub ","method to_s ","(sym :minimum_password_length) inject "," client get_account_password_policy password_policy "," client get_account_password_policy "," client "," client get_account_password_policy password_policy  send "," client get_account_password_ client get_account_password_policy password_policy  password_ client get_account_password_policy password_policy  "," client get_account_password_ client get_account_password_policy password_policy  "]}," AWS IAM delete_account_password_policy":{"type":"method","name":"delete_account_password_policy","children":[],"call":[" client delete_account_password_policy "," client "]}," AWS IAM update_account_password_policy":{"type":"method","name":"update_account_password_policy","children":[],"call":[" client update_account_password_policy "," client "]}," AWS IAM change_password":{"type":"method","name":"change_password","children":[],"call":[" client change_password "," client ","client_opts []= "]}," AWS IAM virtual_mfa_devices":{"type":"method","name":"virtual_mfa_devices","children":[],"call":["VirtualMfaDeviceCollection  new "," config "]}," AWS IAM VirtualMfaDeviceCollection each_item":{"type":"method","name":"each_item","children":[],"call":["VirtualMfaDevice  new_from "," config ","d serial_number ","response virtual_mfa_devices each ","response virtual_mfa_devices ","response virtual_mfa_VirtualMfaDevice  new_from s each ","response virtual_mfa_VirtualMfaDevice  new_from s "]}," AWS IAM VirtualMfaDeviceCollection limit_key":{"type":"method","name":"limit_key","children":[],"call":[]}," AWS IAM VirtualMfaDeviceCollection next_token_key":{"type":"method","name":"next_token_key","children":[],"call":[]}," AWS IAM VirtualMfaDeviceCollection request_method":{"type":"method","name":"request_method","children":[],"call":[]}," AWS IAM VirtualMfaDeviceCollection []":{"type":"method","name":"[]","children":[],"call":["VirtualMfaDevice  new "," config "]}," AWS IAM VirtualMfaDeviceCollection create":{"type":"method","name":"create","children":[],"call":["VirtualMfaDevice  new_from "," config ","resp virtual_mfa_device serial_number ","resp virtual_mfa_device "," client create_virtual_mfa_device "," client ","client_opts []= ","options dup "," client create_virtual_mfa_device  virtual_mfa_device serial_number "," client create_virtual_mfa_device  virtual_mfa_device ","options dup  []= "]}," AWS IAM VirtualMfaDevice resource_identifiers":{"type":"method","name":"resource_identifiers","children":[],"call":[" serial_number "]}," AWS IAM VirtualMfaDevice get_resource":{"type":"method","name":"get_resource","children":[],"call":[" client list_virtual_mfa_devices "," client "]}," AWS IAM VirtualMfaDevice format_auth_code":{"type":"method","name":"format_auth_code","children":[],"call":[" sprintf ","code is_a? "]}," AWS IAM VirtualMfaDevice delete":{"type":"method","name":"delete","children":[],"call":[" client delete_virtual_mfa_device "," resource_options "," client "]}," AWS IAM VirtualMfaDevice deactivate":{"type":"method","name":"deactivate","children":[],"call":[" client deactivate_mfa_device "," client ","client_opts []= "," serial_number "," user name "," user "]}," AWS IAM VirtualMfaDevice enabled?":{"type":"method","name":"enabled?","children":[],"call":[" enable_date ! ! "," enable_date ! "," enable_date "]}," AWS IAM VirtualMfaDevice enable":{"type":"method","name":"enable","children":[],"call":[" client enable_mfa_device "," format_auth_code "," serial_number "," client ","user name ","user is_a? "]}," AWS IAM VirtualMfaDevice user":{"type":"method","name":"user","children":[],"call":["User  new "," config ","details user_name "," user_details "," user_details  user_name "," user_ user_details  "]}," AWS IAM VirtualMfaDevice initialize":{"type":"method","name":"initialize","children":[],"call":[]}," AWS IAM ServerCertificateCollection create":{"type":"method","name":"create","children":[],"call":["ServerCertificate  new "," config ","resp [] [] ","resp [] "," client upload_server_certificate "," client ","client_opts []= ","(str \"/\") sub sub ","(str \"/\") sub ","client_opts [] ","client_opts delete ","options dup "," client upload_server_certificate  [] [] "," client upload_server_certificate  [] ","options dup  []= ","options dup  [] ","options dup  delete "]}," AWS IAM Request service":{"type":"method","name":"service","children":[],"call":[]}," AWS IAM GroupUserCollection _each_item":{"type":"method","name":"_each_item","children":[],"call":["User  new_from "," config ","u user_name ","response users each ","response users "," client get_group "," group name "," group "," client ","u User  new_from _name ","response User  new_from s each "," client get_group  users each ","response User  new_from s "," client get_group  users "]}," AWS IAM Collection _each_item":{"type":"method","name":"_each_item","children":[],"call":["response data [] ","response data "," each_item "," client send "," request_method "," client ","options []= ","response marker ","response respond_to? "," client send  data [] "," client send  data "," client send  marker "," client send  respond_to? "]}," AWS IAM Collection WithPrefix _each_item":{"type":"method","name":"_each_item","children":[],"call":["options []= ","(str \"/\") sub "," prefix ","options delete "]}," AWS Glacier vaults":{"type":"method","name":"vaults","children":[],"call":["VaultCollection  new "," account_id "," config "]}," AWS Glacier intialize":{"type":"method","name":"intialize","children":[],"call":["options [] "]}," AWS Glacier VaultCollection _each_item":{"type":"method","name":"_each_item","children":[],"call":["resp [] ","Vault  new_from "," account_id "," config ","v [] ","resp [] each "," client list_vaults "," client ","options []= "," client list_vaults  [] "," client list_vaults  [] each "," client list_Vault  new_from s "]}," AWS Glacier VaultCollection []":{"type":"method","name":"[]","children":[],"call":["Vault  new "," account_id "," config "]}," AWS Glacier VaultCollection create":{"type":"method","name":"create","children":[],"call":[" [] "," client create_vault "," client ","options []= "," account_id "]}," AWS Glacier VaultCollection initialize":{"type":"method","name":"initialize","children":[],"call":["options [] "]}," AWS Glacier Vault resource_identifiers":{"type":"method","name":"resource_identifiers","children":[],"call":[" account_id "," name "]}," AWS Glacier Vault get_resource":{"type":"method","name":"get_resource","children":[],"call":[" client describe_vault "," resource_options "," client "]}," AWS Glacier Vault delete":{"type":"method","name":"delete","children":[],"call":[" client delete_vault "," resource_options "," client "]}," AWS Glacier Vault notification_configuration=":{"type":"method","name":"notification_configuration=","children":[],"call":[" client delete_vault_notifications "," resource_options "," client "," client set_vault_notifications ","opts [] []= ","cfg events ","opts [] ","cfg sns_topic arn ","cfg sns_topic ","opts []= ","opts merge! "]}," AWS Glacier Vault notification_configuration":{"type":"method","name":"notification_configuration","children":[],"call":["cfg events= ","resp [] ","cfg sns_topic= ","SNS Topic  new "," config ","VaultNotificationConfiguration  new "," client get_vault_notifications "," resource_options "," client ","VaultNotificationConfiguration  new  events= "," client get_vault_notifications  [] ","VaultNotificationConfiguration  new  sns_topic= "]}," AWS Glacier Vault configure_notifications":{"type":"method","name":"configure_notifications","children":[],"call":[" notification_configuration= ","cfg events= ","cfg sns_topic= ","SNS Topic  new "," config ","VaultNotificationConfiguration  new ","topic arn ","topic is_a? ","VaultNotificationConfiguration  new  events= ","VaultNotificationConfiguration  new  sns_topic= "]}," AWS Glacier Vault archives":{"type":"method","name":"archives","children":[],"call":["ArchiveCollection  new "," account_id "]}," AWS Glacier Vault exists?":{"type":"method","name":"exists?","children":[],"call":[" client describe_vault "," account_id "," name "," client "]}," AWS Glacier Vault initialize":{"type":"method","name":"initialize","children":[],"call":[]}," AWS Glacier Resource initialize":{"type":"method","name":"initialize","children":[],"call":["options [] ","args last ","args last is_a? ","args last  [] "]}," AWS Glacier Request service":{"type":"method","name":"service","children":[],"call":[]}," AWS Glacier Client build_request":{"type":"method","name":"build_request","children":[],"call":["request headers []= ","request headers "," class const_get "," class "]}," AWS Glacier ArchiveCollection compute_tree_hash":{"type":"method","name":"compute_tree_hash","children":[],"call":["(send\n  (send\n    (send\n      (lvar :hashes) :first) :bytes) :map) join ","x to_i to_s rjust ","x to_i to_s ","x to_i ","hashes first bytes map ","hashes first bytes ","hashes first ","digest digest ","digest update ","digest reset ","hashes each_slice map ","hashes each_slice ","hashes count == ","hashes count ","OpenSSL Digest Digest  new ","OpenSSL Digest  new ","digest update to_s ","h1 + ","OpenSSL Digest Digest  new  OpenSSL Digest Digest  new  ","OpenSSL Digest  new  OpenSSL Digest  new  ","OpenSSL Digest Digest  new  update ","OpenSSL Digest  new  update ","OpenSSL Digest Digest  new  reset ","OpenSSL Digest  new  reset ","OpenSSL Digest Digest  new  update to_s ","OpenSSL Digest  new  update to_s "]}," AWS Glacier ArchiveCollection compute_checksums":{"type":"method","name":"compute_checksums","children":[],"call":[" compute_tree_hash ","digest to_s ","data rewind ","digest update ","tree_digest reset ","tree_parts << ","tree_digest update digest ","tree_digest update ","data read ","1024 * ","data eof? ","OpenSSL Digest Digest  new ","OpenSSL Digest  new ","tree_digest update to_s ","OpenSSL Digest Digest  new  to_s ","OpenSSL Digest  new  to_s ","OpenSSL Digest Digest  new  update ","OpenSSL Digest  new  update ","OpenSSL Digest Digest  new  reset ","OpenSSL Digest  new  reset ","tree_OpenSSL Digest Digest  new  reset ","tree_OpenSSL Digest  new  reset ","OpenSSL Digest Digest  new  update digest ","OpenSSL Digest  new  update digest ","tree_OpenSSL Digest Digest  new  update OpenSSL Digest Digest  new  ","tree_OpenSSL Digest  new  update OpenSSL Digest  new  ","tree_OpenSSL Digest Digest  new  update ","tree_OpenSSL Digest  new  update ","OpenSSL Digest Digest  new  update to_s ","OpenSSL Digest  new  update to_s ","tree_OpenSSL Digest Digest  new  update to_s ","tree_OpenSSL Digest  new  update to_s "]}," AWS Glacier ArchiveCollection io_like?":{"type":"method","name":"io_like?","children":[],"call":["data respond_to? "]}," AWS Glacier ArchiveCollection convert_to_io":{"type":"method","name":"convert_to_io","children":[],"call":[" raise "," io_like? ","Core ManagedFile  open ","data is_a? "]}," AWS Glacier ArchiveCollection []":{"type":"method","name":"[]","children":[],"call":["Archive  new "," account_id "," config "," vault "]}," AWS Glacier ArchiveCollection create":{"type":"method","name":"create","children":[],"call":[" [] ","resp [] "," client upload_archive "," client ","upload_options []= ","options [] "," account_id "," vault name "," vault "," compute_checksums "," convert_to_io ","options []= "," client upload_archive  [] "]}," AWS Glacier ArchiveCollection initialize":{"type":"method","name":"initialize","children":[],"call":["options [] "]}," AWS Glacier Archive resource_identifiers":{"type":"method","name":"resource_identifiers","children":[],"call":[" account_id "," archive_id "," vault name "," vault "]}," AWS Glacier Archive delete":{"type":"method","name":"delete","children":[],"call":[" client delete_archive "," resource_options "," client "]}," AWS Glacier Archive initialize":{"type":"method","name":"initialize","children":[],"call":[]}," AWS Errors MissingCredentialsError initialize":{"type":"method","name":"initialize","children":[],"call":[]}," AWS Errors Base include_error_type":{"type":"method","name":"include_error_type","children":[],"call":[" extend "," http_response status >= "," http_response status "," http_response "]}," AWS EMR job_flows":{"type":"method","name":"job_flows","children":[],"call":["JobFlowCollection  new "," config "]}," AWS EMR JobFlowCollection _each_item":{"type":"method","name":"_each_item","children":[],"call":["JobFlow  new_from "," config ","details [] ","resp data [] each ","resp data [] ","resp data "," client describe_job_flows ","@filters merge "," client "," client describe_job_flows  data [] each "," client describe_job_flows  data [] "," client describe_job_flows  data "," client describe_JobFlow  new_from s "]}," AWS EMR JobFlowCollection filter":{"type":"method","name":"filter","children":[],"call":["JobFlowCollection  new ","options []= "," config ","@filters merge ","name to_s to_sym ","name to_s "]}," AWS EMR JobFlowCollection created_after":{"type":"method","name":"created_after","children":[],"call":[" filter ","time iso8601 ","time respond_to? ","time to_i ","time iso8601  iso8601 ","time iso8601  respond_to? ","time iso8601  to_i "]}," AWS EMR JobFlowCollection created_before":{"type":"method","name":"created_before","children":[],"call":[" filter ","time iso8601 ","time respond_to? ","time to_i ","time iso8601  iso8601 ","time iso8601  respond_to? ","time iso8601  to_i "]}," AWS EMR JobFlowCollection with_state":{"type":"method","name":"with_state","children":[],"call":[" filter ","states flatten "]}," AWS EMR JobFlowCollection with_id":{"type":"method","name":"with_id","children":[],"call":[" filter ","ids flatten "]}," AWS EMR JobFlowCollection create":{"type":"method","name":"create","children":[],"call":[" [] ","resp data [] ","resp data "," client run_job_flow "," client ","options [] ","options []= "," client run_job_flow  data [] "," client run_job_flow  data "]}," AWS EMR JobFlowCollection []":{"type":"method","name":"[]","children":[],"call":["JobFlow  new "," config "]}," AWS EMR JobFlowCollection initialize":{"type":"method","name":"initialize","children":[],"call":["options [] "]}," AWS EMR JobFlow get_resource":{"type":"method","name":"get_resource","children":[],"call":[" client describe_job_flows "," job_flow_id "," client "]}," AWS EMR JobFlow resource_identifiers":{"type":"method","name":"resource_identifiers","children":[],"call":[" job_flow_id "]}," AWS EMR JobFlow exists?":{"type":"method","name":"exists?","children":[],"call":[" get_resource data [] empty? ! "," get_resource data [] empty? "," get_resource data [] "," get_resource data "," get_resource "]}," AWS EMR JobFlow terminate":{"type":"method","name":"terminate","children":[],"call":[" client terminate_job_flows "," job_flow_id "," client "]}," AWS EMR JobFlow set_visible_to_all_users":{"type":"method","name":"set_visible_to_all_users","children":[],"call":[" client set_visible_to_all_users "," client ","options []= "," job_flow_id "]}," AWS EMR JobFlow set_termination_protection":{"type":"method","name":"set_termination_protection","children":[],"call":[" client set_termination_protection "," client ","options []= "," job_flow_id "]}," AWS EMR JobFlow disable_termination_protection":{"type":"method","name":"disable_termination_protection","children":[],"call":[" set_termination_protection "]}," AWS EMR JobFlow enable_termination_protection":{"type":"method","name":"enable_termination_protection","children":[],"call":[" set_termination_protection "]}," AWS EMR JobFlow instance_groups":{"type":"method","name":"instance_groups","children":[],"call":["InstanceGroupCollection  new "]}," AWS EMR JobFlow add_steps":{"type":"method","name":"add_steps","children":[],"call":[" client add_job_flow_steps "," client ","options []= ","steps flatten "," job_flow_id "]}," AWS EMR JobFlow availability_zone":{"type":"method","name":"availability_zone","children":[],"call":["AWS EC2  new availability_zones [] ","AWS EC2  new availability_zones ","AWS EC2  new "," config "," availability_zone_name "," availability_zone_ availability_zone_name  "]}," AWS EMR JobFlow slave_instance":{"type":"method","name":"slave_instance","children":[],"call":["AWS EC2  new instances [] ","AWS EC2  new instances ","AWS EC2  new "," config "," slave_instance_id "," slave_ slave_instance_id  "]}," AWS EMR JobFlow master_instance":{"type":"method","name":"master_instance","children":[],"call":["AWS EC2  new instances [] ","AWS EC2  new instances ","AWS EC2  new "," config "," master_instance_id "," master_ master_instance_id  "]}," AWS EMR JobFlow initialize":{"type":"method","name":"initialize","children":[],"call":[]}," AWS EMR InstanceGroupCollection _each_item":{"type":"method","name":"_each_item","children":[],"call":["InstanceGroup  new_from ","details [] "," job_flow "," job_flow instance_group_details each "," job_flow instance_group_details "," job_flow instance_InstanceGroup  new_from _details each "," job_flow instance_InstanceGroup  new_from _details "]}," AWS EMR InstanceGroupCollection create":{"type":"method","name":"create","children":[],"call":[" [] ","resp data [] first ","resp data [] ","resp data "," client add_instance_groups "," client ","client_opts []= "," job_flow job_flow_id "," job_flow ","options []= ","options [] to_s ","options [] "," client add_instance_groups  data [] first "," client add_instance_groups  data [] "," client add_instance_groups  data "]}," AWS EMR InstanceGroupCollection []":{"type":"method","name":"[]","children":[],"call":["InstanceGroup  new "," job_flow "]}," AWS EMR InstanceGroupCollection initialize":{"type":"method","name":"initialize","children":[],"call":[]}," AWS EMR InstanceGroup find_in_response":{"type":"method","name":"find_in_response","children":[],"call":["ig [] == "," instance_group_id ","ig [] ","job [] [] each ","job [] [] ","job [] ","job [] == "," job_flow job_flow_id "," job_flow ","resp data [] each ","resp data [] ","resp data "]}," AWS EMR InstanceGroup get_resource":{"type":"method","name":"get_resource","children":[],"call":[" client describe_job_flows "," job_flow id "," job_flow "," client "]}," AWS EMR InstanceGroup resource_identifiers":{"type":"method","name":"resource_identifiers","children":[],"call":[" id "," job_flow id "," job_flow "]}," AWS EMR InstanceGroup exists?":{"type":"method","name":"exists?","children":[],"call":[" find_in_response ! ! "," find_in_response ! "," find_in_response "," get_resource "]}," AWS EMR InstanceGroup modify":{"type":"method","name":"modify","children":[],"call":[" client modify_instance_groups "," client ","options []= ","options delete ","options [] "," instance_group_id "]}," AWS EMR InstanceGroup set_instance_count":{"type":"method","name":"set_instance_count","children":[],"call":[" modify "]}," AWS EMR InstanceGroup initialize":{"type":"method","name":"initialize","children":[],"call":[]}," AWS ELB load_balancers":{"type":"method","name":"load_balancers","children":[],"call":["LoadBalancerCollection  new "," config "]}," AWS ELB Request service":{"type":"method","name":"service","children":[],"call":[]}," AWS ELB LoadBalancerPolicyCollection _each_item":{"type":"method","name":"_each_item","children":[],"call":["LoadBalancerPolicy  new_from ","desc policy_name "," load_balancer ","response policy_descriptions each ","response policy_descriptions "," client describe_load_balancer_policies "," client ","options []= "," load_balancer name "," client describe_load_balancer_policies  policy_descriptions each "," client describe_load_balancer_policies  policy_descriptions "]}," AWS ELB LoadBalancerPolicyCollection []":{"type":"method","name":"[]","children":[],"call":["LoadBalancerPolicy  new "," load_balancer "]}," AWS ELB LoadBalancerPolicyCollection create":{"type":"method","name":"create","children":[],"call":["LoadBalancerPolicy  new ","type to_s "," load_balancer "," client create_load_balancer_policy ","name to_s "," load_balancer name "," client ","attribute_list << ","value to_s ","(lvar :values) flatten each ","(lvar :values) flatten ","attributes each "]}," AWS ELB LoadBalancerPolicyCollection initialize":{"type":"method","name":"initialize","children":[],"call":[]}," AWS ELB LoadBalancerPolicy get_resource":{"type":"method","name":"get_resource","children":[],"call":[" client describe_load_balancer_policies "," load_balancer name "," load_balancer "," client "]}," AWS ELB LoadBalancerPolicy resource_identifiers":{"type":"method","name":"resource_identifiers","children":[],"call":[" name "," load_balancer name "," load_balancer "]}," AWS ELB LoadBalancerPolicy exists?":{"type":"method","name":"exists?","children":[],"call":["d policy_name == "," name ","d policy_name ","r policy_descriptions find ","r policy_descriptions "," get_resource "," get_resource  policy_desc get_resource iptions find "," get_resource  policy_desc get_resource iptions "," get_ get_resource esou get_resource ce "]}," AWS ELB LoadBalancerPolicy delete":{"type":"method","name":"delete","children":[],"call":[" client delete_load_balancer_policy "," name "," load_balancer name "," load_balancer "," client "]}," AWS ELB LoadBalancerPolicy attributes":{"type":"method","name":"attributes","children":[],"call":["attributes [] << ","desc attribute_value ","attributes [] ","desc attribute_name "," policy_attribute_descriptions each "," policy_attribute_descriptions "]}," AWS ELB LoadBalancerPolicy initialize":{"type":"method","name":"initialize","children":[],"call":["options merge ","name to_s "]}," AWS ELB LoadBalancerCollection _each_item":{"type":"method","name":"_each_item","children":[],"call":["LoadBalancer  new_from "," config ","description [] ","response data [] each ","response data [] ","response data "," client describe_load_balancers "," client ","description load_balancer_name ","response load_balancer_descriptions each ","response load_balancer_descriptions "," client describe_load_balancers  data [] each "," client describe_load_balancers  data [] "," client describe_load_balancers  data "," client describe_LoadBalancer  new_from s ","description LoadBalancer  new_from _name ","response LoadBalancer  new_from _descriptions each "," client describe_load_balancers  load_balancer_descriptions each ","response LoadBalancer  new_from _descriptions "," client describe_load_balancers  load_balancer_descriptions "]}," AWS ELB LoadBalancerCollection []":{"type":"method","name":"[]","children":[],"call":["LoadBalancer  new "," config "]}," AWS ELB LoadBalancerCollection create":{"type":"method","name":"create","children":[],"call":["LoadBalancer  new "," config ","resp [] "," client create_load_balancer "," client ","options []= ","name to_s ","subnet id ","subnet is_a? ","(lvar :subnets) flatten map ","(lvar :subnets) flatten ","options [] ","group id ","group is_a? ","(lvar :groups) flatten map ","(lvar :groups) flatten ","zone name ","zone is_a? ","(lvar :zones) flatten map ","(lvar :zones) flatten "," format_listener_opts ","(lvar :listeners) flatten map ","(lvar :listeners) flatten ","opts []= ","response dns_name ","(send\n  (lvar :options) :[]\n  (sym :listeners)) flatten collect ","(send\n  (lvar :options) :[]\n  (sym :listeners)) flatten ","(send\n  (lvar :options) :[]\n  (sym :availability_zones)) flatten collect ","(send\n  (lvar :options) :[]\n  (sym :availability_zones)) flatten "," raise "," client create_load_balancer  [] ","(lvar :options [] ) flatten map ","(lvar :options [] ) flatten "," client create_load_balancer onse dns_name "," client create_load_balancer  dns_name ","(send\n  (lvar :options) :[]\n  (sym :options [] )) flatten collect ","(send\n  (lvar :options) :[]\n  (sym :options [] )) flatten ","(send\n  (lvar :options) :[]\n  (sym :availability_options [] )) flatten collect ","(send\n  (lvar :options) :[]\n  (sym :availability_options [] )) flatten "]}," AWS ELB LoadBalancer get_resource":{"type":"method","name":"get_resource","children":[],"call":[" client describe_load_balancers "," name "," client "]}," AWS ELB LoadBalancer resource_identifiers":{"type":"method","name":"resource_identifiers","children":[],"call":[" name "]}," AWS ELB LoadBalancer delete":{"type":"method","name":"delete","children":[],"call":[" client delete_load_balancer "," name "," client "]}," AWS ELB LoadBalancer exists?":{"type":"method","name":"exists?","children":[],"call":[" client describe_load_balancers "," name "," client "]}," AWS ELB LoadBalancer source_security_group":{"type":"method","name":"source_security_group","children":[],"call":[" source_security_group_owner_alias "," source_security_group_name "," security_group_description owner_alias "," security_group_description "," security_group_description group_name "]}," AWS ELB LoadBalancer security_groups":{"type":"method","name":"security_groups","children":[],"call":["EC2 SecurityGroup  new "," config "," security_group_ids collect "," security_group_ids "]}," AWS ELB LoadBalancer subnets":{"type":"method","name":"subnets","children":[],"call":["EC2 Subnet  new "," config "," subnet_ids map "," subnet_ids "]}," AWS ELB LoadBalancer configure_health_check":{"type":"method","name":"configure_health_check","children":[],"call":[" client configure_health_check "," name "," client "," health_check merge "," health_check "," health_check_configuration merge "," health_check_configuration "]}," AWS ELB LoadBalancer backend_server_policies":{"type":"method","name":"backend_server_policies","children":[],"call":["BackendServerPolicyCollection  new "]}," AWS ELB LoadBalancer instances":{"type":"method","name":"instances","children":[],"call":["InstanceCollection  new "]}," AWS ELB LoadBalancer policies":{"type":"method","name":"policies","children":[],"call":["LoadBalancerPolicyCollection  new "]}," AWS ELB LoadBalancer listeners":{"type":"method","name":"listeners","children":[],"call":["ListenerCollection  new "]}," AWS ELB LoadBalancer availability_zones":{"type":"method","name":"availability_zones","children":[],"call":["AvailabilityZoneCollection  new "]}," AWS ELB LoadBalancer initialize":{"type":"method","name":"initialize","children":[],"call":["options merge ","name to_s "]}," AWS ELB ListenerOpts format_listener_opts":{"type":"method","name":"format_listener_opts","children":[],"call":["options []= ","cert arn ","cert is_a? ","options delete ","options [] to_s upcase ","options [] to_s ","options [] ","(sym :protocol) each ","options delete  arn ","options delete  is_a? "]}," AWS ELB ListenerCollection _each_item":{"type":"method","name":"_each_item","children":[],"call":["Listener  new "," load_balancer ","options merge! ","description [] ","options []= "," config ","description [] [] "," load_balancer listener_descriptions each "," load_balancer listener_descriptions ","desc load_balancer_port ","opts []= ","desc ssl_certificate_id ","desc respond_to? ","desc instance_protocol ","desc instance_port ","desc protocol ","desc listener ","desc listener ription [] ","desc listener ription [] [] "," load_balancer Listener  new _descriptions each "," load_balancer listener_desc listener riptions each "," load_balancer Listener  new _descriptions "," load_balancer listener_desc listener riptions ","desc load_balancer_description [] []  ","desc listener  load_balancer_port ","desc listener  ssl_certificate_id ","desc listener  respond_to? ","desc listener  instance_protocol ","desc instance_description [] []  ","desc listener  instance_port ","desc listener  protocol ","desc Listener  new  ","desc listener  listener "]}," AWS ELB ListenerCollection []":{"type":"method","name":"[]","children":[],"call":["Listener  new "," config "," load_balancer "]}," AWS ELB ListenerCollection create":{"type":"method","name":"create","children":[],"call":["Listener  new ","options merge "," config ","options [] "," load_balancer "," client create_load_balancer_listeners "," load_balancer name "," client "," format_listener_opts "]}," AWS ELB ListenerCollection initialize":{"type":"method","name":"initialize","children":[],"call":[]}," AWS ELB Listener _description":{"type":"method","name":"_description","children":[],"call":["desc [] [] == "," port ","desc [] [] ","desc [] "," load_balancer listener_descriptions find "," load_balancer listener_descriptions "," load_balancer ","desc listener load_balancer_port == ","desc listener load_balancer_port ","desc listener "]}," AWS ELB Listener eql?":{"type":"method","name":"eql?","children":[],"call":["other port == "," port ","other port ","other load_balancer == "," load_balancer ","other load_balancer ","other is_a? "]}," AWS ELB Listener inspect":{"type":"method","name":"inspect","children":[],"call":[" port "," class name "," class "]}," AWS ELB Listener delete":{"type":"method","name":"delete","children":[],"call":[" client delete_load_balancer_listeners "," port "," load_balancer name "," load_balancer "," client "]}," AWS ELB Listener exists?":{"type":"method","name":"exists?","children":[],"call":[" _description nil? ! "," _description nil? "," _description "]}," AWS ELB Listener remove_policy":{"type":"method","name":"remove_policy","children":[],"call":[" client set_load_balancer_policies_of_listener "," port "," load_balancer name "," load_balancer "," client "]}," AWS ELB Listener policy=":{"type":"method","name":"policy=","children":[],"call":["LoadBalancerPolicy  new "," config "," load_balancer "," client set_load_balancer_policies_of_listener "," port "," load_balancer name "," client ","policy_or_policy_name to_s ","policy_or_policy_name name ","policy_or_policy_name is_a? ","policy_or_policy_or_policy_name to_s  to_s ","policy_or_policy_or_policy_name name  to_s ","policy_or_policy_or_policy_name to_s  name ","policy_or_policy_or_policy_name name  name ","policy_or_policy_or_policy_name to_s  is_a? ","policy_or_policy_or_policy_name name  is_a? "]}," AWS ELB Listener policy":{"type":"method","name":"policy","children":[],"call":[" load_balancer policies [] "," load_balancer policies "," load_balancer "," _description [] first "," _description [] "," _description "," _description policy_names first "," _description policy_names "," _description  _description [] first s first "," _description  _description policy_names first s first "," _description  _description [] first s "," _description  _description policy_names first s "]}," AWS ELB Listener server_certificate":{"type":"method","name":"server_certificate","children":[],"call":["cert arn == ","cert arn ","iam server_certificates find ","iam server_certificates ","IAM  new "," config ","desc [] [] ","desc [] ","AWS  memoize "," _description ","desc listener ssl_certificate_id ","desc listener ","desc listener respond_to? ","cert desc [] []  == ","cert desc listener ssl_certificate_id  == ","cert desc [] []  ","cert desc listener ssl_certificate_id  ","IAM  new  server_certificates find ","IAM  new  server_certificates "," _description  [] [] "," _description  [] "," _ _description ription "," _description  listener ssl_certificate_id "," _description  listener "," _description  listener respond_to? "]}," AWS ELB Listener server_certificate=":{"type":"method","name":"server_certificate=","children":[],"call":[" client set_load_balancer_listener_ssl_certificate "," port "," load_balancer name "," load_balancer "," client ","server_certificate arn ","server_certificate is_a? ","server_certificate server_certificate arn  "]}," AWS ELB Listener instance_protocol":{"type":"method","name":"instance_protocol","children":[],"call":["proto to_s downcase to_sym ","proto to_s downcase ","proto to_s "," _description [] [] "," _description [] "," _description "," _description listener instance_protocol "," _description listener "]}," AWS ELB Listener instance_port":{"type":"method","name":"instance_port","children":[],"call":[" _description [] [] "," _description [] "," _description "," _description listener instance_port "," _description listener "]}," AWS ELB Listener protocol":{"type":"method","name":"protocol","children":[],"call":["proto to_s downcase to_sym ","proto to_s downcase ","proto to_s "," _description [] [] "," _description [] "," _description "," _description listener protocol "," _description listener "]}," AWS ELB Listener initialize":{"type":"method","name":"initialize","children":[],"call":["options [] ","port to_i "]}," AWS ELB InstanceCollection _each_item":{"type":"method","name":"_each_item","children":[],"call":[" [] ","instance [] "," load_balancer instance_descriptions each "," load_balancer instance_descriptions "," load_balancer ","instance instance_id "," []  [] "," load_balancer  [] _descriptions each "," load_balancer  [] _descriptions "," []   [] _id "]}," AWS ELB InstanceCollection instance_ids":{"type":"method","name":"instance_ids","children":[],"call":["instance id ","instances flatten collect ","instances flatten "]}," AWS ELB InstanceCollection deregister":{"type":"method","name":"deregister","children":[],"call":[" client deregister_instances_from_load_balancer "," instance_ids "," load_balancer name "," load_balancer "," client "]}," AWS ELB InstanceCollection register":{"type":"method","name":"register","children":[],"call":[" client register_instances_with_load_balancer "," instance_ids "," load_balancer name "," load_balancer "," client "]}," AWS ELB InstanceCollection health":{"type":"method","name":"health","children":[],"call":["state reason_code ","state state ","state description "," [] ","state instance_id "," client describe_instance_health instance_states map "," client describe_instance_health instance_states "," client describe_instance_health "," client ","opts []= ","instance_ids empty? "," load_balancer name "," load_balancer "," instance_ids "," instance_ids  empty? ","  instance_ids  "]}," AWS ELB InstanceCollection []":{"type":"method","name":"[]","children":[],"call":["load_balancer instances deregister ","load_balancer instances ","Core MetaUtils  extend_method ","health delete ","load_balancer instances health first ","load_balancer instances health "," id ","EC2  new instances [] ","EC2  new instances ","EC2  new "," config "," load_balancer ","load_balancer EC2  new instances [] s deregister "," load_balancer  instances deregister ","load_balancer EC2  new instances [] s "," load_balancer  instances ","load_balancer instances health first  delete ","load_balancer instances load_balancer instances health first  first ","load_balancer EC2  new instances [] s health first "," load_balancer  instances health first ","load_balancer instances load_balancer instances health first  ","load_balancer EC2  new instances [] s health "," load_balancer  instances health ","EC2  new EC2  new instances [] s [] ","EC2  new EC2  new instances [] s ","  load_balancer  "]}," AWS ELB InstanceCollection initialize":{"type":"method","name":"initialize","children":[],"call":[]}," AWS ELB Errors error_class":{"type":"method","name":"error_class","children":[],"call":[]}," AWS ELB BackendServerPolicyCollection _each_item":{"type":"method","name":"_each_item","children":[],"call":[" load_balancer policies [] "," load_balancer policies "," load_balancer ","desc [] each ","desc [] ","desc [] == ","instance_port nil? "," load_balancer backend_server_descriptions each "," load_balancer backend_server_descriptions ","options [] ","desc policy_names collect ","desc policy_names ","desc instance_port == ","desc instance_port ","options []  nil? ","desc  load_balancer policies [] _names collect ","desc  load_balancer policies [] _names ","desc options []  == ","desc options []  "]}," AWS ELB BackendServerPolicyCollection policy_name":{"type":"method","name":"policy_name","children":[],"call":["policy to_s ","policy name "]}," AWS ELB BackendServerPolicyCollection []=":{"type":"method","name":"[]=","children":[],"call":[" client set_load_balancer_policies_for_backend_server ","(send nil :policy_name\n  (lvar :policy)) compact "," policy_name ","instance_port to_i "," load_balancer name "," load_balancer "," client "]}," AWS ELB BackendServerPolicyCollection []":{"type":"method","name":"[]","children":[],"call":[" enum first "," enum "]}," AWS ELB BackendServerPolicyCollection initialize":{"type":"method","name":"initialize","children":[],"call":[]}," AWS ELB AvailabilityZoneCollection _each_item":{"type":"method","name":"_each_item","children":[],"call":["EC2 AvailabilityZone  new "," config "," load_balancer availability_zone_names each "," load_balancer availability_zone_names "," load_balancer "," load_balancer EC2 AvailabilityZone  new _names each "," load_balancer EC2 AvailabilityZone  new _names "]}," AWS ELB AvailabilityZoneCollection disable":{"type":"method","name":"disable","children":[],"call":[" client disable_availability_zones_for_load_balancer "," load_balancer name "," load_balancer "," client ","av to_s ","av name ","av is_a? ","availability_zones flatten collect ","availability_zones flatten "]}," AWS ELB AvailabilityZoneCollection enable":{"type":"method","name":"enable","children":[],"call":[" client enable_availability_zones_for_load_balancer "," load_balancer name "," load_balancer "," client ","av to_s ","av name ","av is_a? ","availability_zones flatten collect ","availability_zones flatten "]}," AWS ELB AvailabilityZoneCollection initialize":{"type":"method","name":"initialize","children":[],"call":[]}," AWS ElasticTranscoder Request service":{"type":"method","name":"service","children":[],"call":[]}," AWS ElasticTranscoder Client extract_error_details":{"type":"method","name":"extract_error_details","children":[],"call":["json [] ","headers [] first split [] ","headers [] first split ","headers [] first ","headers [] ","response http_response headers ","response http_response "," JSON  load ","response http_response body ","response http_response status >= ","response http_response status ","response http_response headers  [] first split [] ","response http_response headers  [] first split ","response http_response headers  [] first ","response http_response headers  [] ","response http_response response http_response headers  ","response http_response response http_response body  "]}," AWS ElasticBeanstalk Request service":{"type":"method","name":"service","children":[],"call":[]}," AWS EC2 export_tasks":{"type":"method","name":"export_tasks","children":[],"call":["ExportTaskCollection  new "," config "]}," AWS EC2 vpn_connections":{"type":"method","name":"vpn_connections","children":[],"call":["VPNConnectionCollection  new "," config "]}," AWS EC2 dhcp_options":{"type":"method","name":"dhcp_options","children":[],"call":["DHCPOptionsCollection  new "," config "]}," AWS EC2 vpn_gateways":{"type":"method","name":"vpn_gateways","children":[],"call":["VPNGatewayCollection  new "," config "]}," AWS EC2 customer_gateways":{"type":"method","name":"customer_gateways","children":[],"call":["CustomerGatewayCollection  new "," config "]}," AWS EC2 internet_gateways":{"type":"method","name":"internet_gateways","children":[],"call":["InternetGatewayCollection  new "," config "]}," AWS EC2 network_interfaces":{"type":"method","name":"network_interfaces","children":[],"call":["NetworkInterfaceCollection  new "," config "]}," AWS EC2 route_tables":{"type":"method","name":"route_tables","children":[],"call":["RouteTableCollection  new "," config "]}," AWS EC2 network_acls":{"type":"method","name":"network_acls","children":[],"call":["NetworkACLCollection  new "," config "]}," AWS EC2 subnets":{"type":"method","name":"subnets","children":[],"call":["SubnetCollection  new "," config "]}," AWS EC2 vpcs":{"type":"method","name":"vpcs","children":[],"call":["VPCCollection  new "," config "]}," AWS EC2 VPNGatewayCollection _each_item":{"type":"method","name":"_each_item","children":[],"call":["VPNGateway  new_from "," config ","g vpn_gateway_id ","response vpn_gateway_set each ","response vpn_gateway_set "," filtered_request ","g vpn_VPNGateway  new_from _id ","response vpn_VPNGateway  new_from _set each "," filtered_request  vpn_gateway_set each ","response vpn_VPNGateway  new_from _set "," filtered_request  vpn_gateway_set "]}," AWS EC2 VPNGatewayCollection []":{"type":"method","name":"[]","children":[],"call":["VPNGateway  new "," config "]}," AWS EC2 VPNGatewayCollection create":{"type":"method","name":"create","children":[],"call":["VPNGateway  new_from "," config ","resp vpn_gateway vpn_gateway_id ","resp vpn_gateway "," client create_vpn_gateway "," client ","client_opts []= ","az name ","az is_a? ","options [] "," client create_vpn_gateway  vpn_gateway vpn_gateway_id "," client create_vpn_gateway  vpn_gateway ","az name  name ","options []  name ","az name  is_a? ","options []  is_a? "]}," AWS EC2 VPNGateway vpc_id":{"type":"method","name":"vpc_id","children":[],"call":["vpc vpc_id ","vpc is_a? "]}," AWS EC2 VPNGateway exists?":{"type":"method","name":"exists?","children":[],"call":[" client describe_vpn_gateways "," id "," client "]}," AWS EC2 VPNGateway delete":{"type":"method","name":"delete","children":[],"call":[" client delete_vpn_gateway "," client ","client_opts []= "," vpn_gateway_id "]}," AWS EC2 VPNGateway vpn_connections":{"type":"method","name":"vpn_connections","children":[],"call":["connections filter "," id ","VPNConnectionCollection  new "," config ","VPNConnectionCollection  new  filter "]}," AWS EC2 VPNGateway detach":{"type":"method","name":"detach","children":[],"call":[" client detach_vpn_gateway "," client ","client_opts []= "," vpc_id "," vpn_gateway_id "]}," AWS EC2 VPNGateway attach":{"type":"method","name":"attach","children":[],"call":["Attachment  new ","resp attachment "," client attach_vpn_gateway "," client ","client_opts []= "," vpc_id "," vpn_gateway_id "," client attach_vpn_gateway  attachment "]}," AWS EC2 VPNGateway vpc":{"type":"method","name":"vpc","children":[],"call":["attachment vpc "," attachments first "," attachments "," attachments first  vpc ","  attachments first s first ","  attachments first s "]}," AWS EC2 VPNGateway attachments":{"type":"method","name":"attachments","children":[],"call":["Attachment  new "," attachment_set map "," attachment_set "]}," AWS EC2 VPNGateway initialize":{"type":"method","name":"initialize","children":[],"call":[]}," AWS EC2 VPNGateway Attachment delete":{"type":"method","name":"delete","children":[],"call":[" vpn_gateway detach "," vpc "," vpn_gateway "]}," AWS EC2 VPNGateway Attachment initialize":{"type":"method","name":"initialize","children":[],"call":["details state to_sym ","details state ","VPC  new ","vpn_gateway config ","details vpc_id "]}," AWS EC2 VPNConnectionCollection vpn_gateway_id":{"type":"method","name":"vpn_gateway_id","children":[],"call":["gateway_id id ","gateway_id is_a? "," filter_value_for ","options [] ","options delete ","gateway_id id  id ","options delete  id ","gateway_id id  is_a? ","options delete  is_a? "]}," AWS EC2 VPNConnectionCollection customer_gateway_id":{"type":"method","name":"customer_gateway_id","children":[],"call":["gateway_id id ","gateway_id is_a? "," filter_value_for ","options [] ","options delete ","gateway_id id  id ","options delete  id ","gateway_id id  is_a? ","options delete  is_a? "]}," AWS EC2 VPNConnectionCollection _each_item":{"type":"method","name":"_each_item","children":[],"call":["VPNConnection  new_from "," config ","c vpn_connection_id ","response vpn_connection_set each ","response vpn_connection_set "," filtered_request ","c VPNConnection  new_from _id ","response VPNConnection  new_from _set each "," filtered_request  vpn_connection_set each ","response VPNConnection  new_from _set "," filtered_request  vpn_connection_set "]}," AWS EC2 VPNConnectionCollection []":{"type":"method","name":"[]","children":[],"call":["VPNConnection  new "," config "]}," AWS EC2 VPNConnectionCollection create":{"type":"method","name":"create","children":[],"call":["VPNConnection  new_from "," config ","resp vpn_connection vpn_connection_id ","resp vpn_connection "," client create_vpn_connection "," client ","client_opts []= ","options [] "," vpn_gateway_id "," customer_gateway_id "," client create_vpn_connection  vpn_connection vpn_connection_id "," client create_vpn_connection  vpn_connection "]}," AWS EC2 VPNConnection delete":{"type":"method","name":"delete","children":[],"call":[" client delete_vpn_connection "," client ","client_opts []= "," vpn_connection_id "]}," AWS EC2 VPNConnection vgw_telemetry":{"type":"method","name":"vgw_telemetry","children":[],"call":["Telemetry  new "," vgw_telemetry_details collect "," vgw_telemetry_details "]}," AWS EC2 VPNConnection customer_gateway":{"type":"method","name":"customer_gateway","children":[],"call":["CustomerGateway  new "," config "," customer_gateway_id "]}," AWS EC2 VPNConnection vpn_gateway":{"type":"method","name":"vpn_gateway","children":[],"call":["VPNGateway  new "," config "," vpn_gateway_id "]}," AWS EC2 VPNConnection initialize":{"type":"method","name":"initialize","children":[],"call":[]}," AWS EC2 VPNConnection Telemetry initialize":{"type":"method","name":"initialize","children":[],"call":["details accepted_route_count ","details status_message ","details last_status_change ","details status downcase to_sym ","details status downcase ","details status ","details outside_ip_address "]}," AWS EC2 VPCCollection _each_item":{"type":"method","name":"_each_item","children":[],"call":["VPC  new_from "," config ","v vpc_id ","response vpc_set each ","response vpc_set "," filtered_request "," filtered_request  vpc_set each "," filtered_request  vpc_set "]}," AWS EC2 VPCCollection []":{"type":"method","name":"[]","children":[],"call":["VPC  new "," config "]}," AWS EC2 VPCCollection create":{"type":"method","name":"create","children":[],"call":["VPC  new_from "," config ","resp vpc vpc_id ","resp vpc "," client create_vpc "," client ","client_opts []= ","options [] to_s ","options [] ","options key? "," client create_vpc  vpc vpc_id "," client create_vpc  vpc "]}," AWS EC2 VPC dhcp_options=":{"type":"method","name":"dhcp_options=","children":[],"call":["dhcp_options associate ","DHCPOptions  new "," config ","dhcp_options is_a? ","DHCPOptions  new  associate ","DHCPOptions  new  is_a? "]}," AWS EC2 VPC dhcp_options":{"type":"method","name":"dhcp_options","children":[],"call":["DHCPOptions  new "," config "," dhcp_options_id "]}," AWS EC2 VPC vpn_gateway":{"type":"method","name":"vpn_gateway","children":[],"call":["gateways filter first ","gateways filter "," vpc_id ","VPNGatewayCollection  new "," config ","VPNGatewayCollection  new  filter first ","VPNGatewayCollection  new  filter "]}," AWS EC2 VPC internet_gateway=":{"type":"method","name":"internet_gateway=","children":[],"call":["internet_gateway attach ","InternetGateway  new "," config ","internet_gateway is_a? ","gateway detach "," internet_gateway ","InternetGateway  new  attach ","internet_ internet_gateway  attach ","InternetGateway  new  is_a? ","internet_ internet_gateway  is_a? "," internet_gateway  detach "," InternetGateway  new  "," internet_ internet_gateway  "]}," AWS EC2 VPC internet_gateway":{"type":"method","name":"internet_gateway","children":[],"call":["gateways filter first ","gateways filter "," vpc_id ","InternetGatewayCollection  new "," config ","InternetGatewayCollection  new  filter first ","InternetGatewayCollection  new  filter "]}," AWS EC2 VPC network_interfaces":{"type":"method","name":"network_interfaces","children":[],"call":["NetworkInterfaceCollection  new filter "," id ","NetworkInterfaceCollection  new "," config "]}," AWS EC2 VPC route_tables":{"type":"method","name":"route_tables","children":[],"call":["RouteTableCollection  new filter "," vpc_id ","RouteTableCollection  new "," config "]}," AWS EC2 VPC network_acls":{"type":"method","name":"network_acls","children":[],"call":["NetworkACLCollection  new filter "," vpc_id ","NetworkACLCollection  new "," config "]}," AWS EC2 VPC subnets":{"type":"method","name":"subnets","children":[],"call":["SubnetCollection  new filter "," vpc_id ","SubnetCollection  new "," config "]}," AWS EC2 VPC security_groups":{"type":"method","name":"security_groups","children":[],"call":["SecurityGroupCollection  new filter "," vpc_id ","SecurityGroupCollection  new "," config "]}," AWS EC2 VPC instances":{"type":"method","name":"instances","children":[],"call":["InstanceCollection  new filter "," vpc_id ","InstanceCollection  new "," config "]}," AWS EC2 VPC delete":{"type":"method","name":"delete","children":[],"call":[" client delete_vpc "," vpc_id "," client "]}," AWS EC2 VPC initialize":{"type":"method","name":"initialize","children":[],"call":[]}," AWS EC2 SubnetCollection _each_item":{"type":"method","name":"_each_item","children":[],"call":["Subnet  new_from "," config ","s subnet_id ","response subnet_set each ","response subnet_set "," filtered_request ","s Subnet  new_from _id ","response Subnet  new_from _set each "," filtered_request  subnet_set each ","response Subnet  new_from _set "," filtered_request  subnet_set "]}," AWS EC2 SubnetCollection az_option":{"type":"method","name":"az_option","children":[],"call":["options [] ","options [] name ","options [] is_a? "]}," AWS EC2 SubnetCollection []":{"type":"method","name":"[]","children":[],"call":["Subnet  new "," config "]}," AWS EC2 SubnetCollection create":{"type":"method","name":"create","children":[],"call":["Subnet  new_from "," config ","resp subnet subnet_id ","resp subnet "," client create_subnet "," client ","client_opts []= "," az_option ","options [] "," vpc_id_option "," client create_subnet  subnet subnet_id "," client create_subnet  subnet "]}," AWS EC2 Subnet delete":{"type":"method","name":"delete","children":[],"call":[" client delete_subnet "," subnet_id "," client "]}," AWS EC2 Subnet network_interfaces":{"type":"method","name":"network_interfaces","children":[],"call":["NetworkInterfaceCollection  new filter "," id ","NetworkInterfaceCollection  new "," config "]}," AWS EC2 Subnet instances":{"type":"method","name":"instances","children":[],"call":["InstanceCollection  new filter "," id ","InstanceCollection  new "," config "]}," AWS EC2 Subnet availability_zone":{"type":"method","name":"availability_zone","children":[],"call":["AvailabilityZone  new "," config "," availability_zone_name "]}," AWS EC2 Subnet route_table_association":{"type":"method","name":"route_table_association","children":[],"call":["a main? ","assocs find ","a subnet == ","a subnet ","(send\n  (const nil :AWS) :memoize) flatten "," vpc route_tables map "," vpc route_tables "," vpc ","AWS  memoize ","(send\n  (const nil :AWS) :memoize) flatten  find "]}," AWS EC2 Subnet set_route_table":{"type":"method","name":"set_route_table","children":[],"call":["RouteTable Association  new "," subnet_id ","resp new_association_id "," client replace_route_table_association "," client ","client_opts []= ","assoc association_id ","response association_id "," client associate_route_table ","assoc main? "," route_table_association ","route_table id ","RouteTable  new "," config ","route_table is_a? ","resp new_resp new_association_id  ","resp new_response association_id  "," client replace_route_table_association  new_association_id ","resp new_ route_table_association iation_id "," client replace_route_table_ route_table_association iation "," client replace_RouteTable  new _association ","assoc resp new_association_id  ","assoc response association_id  "," route_table_association   route_table_association iation_id ","response resp new_association_id  ","response response association_id  "," client replace_route_table_association onse association_id "," client associate_route_table  association_id ","response  route_table_association iation_id "," client  route_table_association iate_route_table "," client associate_RouteTable  new  "," route_table_association  main? "," route_table_ route_table_association iation "," RouteTable  new _association ","RouteTable  new  id ","RouteTable  new  is_a? "]}," AWS EC2 Subnet route_table":{"type":"method","name":"route_table","children":[],"call":[" route_table_association route_table "," route_table_association "]}," AWS EC2 Subnet network_acl_association":{"type":"method","name":"network_acl_association","children":[],"call":["a subnet == ","a subnet ","associations find ","(send\n  (const nil :AWS) :memoize) flatten "," vpc network_acls map "," vpc network_acls "," vpc ","AWS  memoize ","associations first ","(send\n  (const nil :AWS) :memoize) flatten  find ","(send\n  (const nil :AWS) :memoize) flatten  first "]}," AWS EC2 Subnet network_acl=":{"type":"method","name":"network_acl=","children":[],"call":[" network_acl_association replace_network_acl "," network_acl_association "]}," AWS EC2 Subnet network_acl":{"type":"method","name":"network_acl","children":[],"call":[" network_acl_association network_acl "," network_acl_association "]}," AWS EC2 Subnet vpc":{"type":"method","name":"vpc","children":[],"call":["VPC  new "," config "," vpc_id "]}," AWS EC2 Subnet initialize":{"type":"method","name":"initialize","children":[],"call":[]}," AWS EC2 SecurityGroup egress_opts":{"type":"method","name":"egress_opts","children":[],"call":["opts []= ","groups empty? ","ips empty? "," parse_sources ","ports last to_i ","ports last ","ports first to_i ","ports first "," Array ","options [] ","options [] is_a? ","options [] to_s downcase ","options [] to_s ","(nil) include? ","args pop ","last key? ","last is_a? ","args last "," ensure_vpc "," Array last to_i "," Array last "," Array first to_i "," Array first "," Array  last to_i ","options []  last to_i ","ports args last  to_i "," Array  last ","options []  last ","ports args last  "," Array  first to_i ","options []  first to_i "," Array  first ","options []  first ","args pop  [] ","args pop  [] is_a? ","args pop  [] to_s downcase ","args pop  [] to_s ","args last  key? ","args last  is_a? ","args args last  "," Array args last  to_i "," Array args last  "]}," AWS EC2 SecurityGroup ingress_opts":{"type":"method","name":"ingress_opts","children":[],"call":["opts []= ","groups empty? ","ips empty? "," parse_sources ","ports last to_i ","ports last ","ports first to_i ","ports first "," Array ","ports is_a? ","protocol to_s downcase ","protocol to_s ","protocol == "," Array last to_i "," Array last "," Array first to_i "," Array first "," Array  last to_i "," Array  last "," Array  first to_i "," Array  first "," Array  is_a? "]}," AWS EC2 SecurityGroup <=>":{"type":"method","name":"<=>","children":[],"call":[" id <=> ","other id "," id "]}," AWS EC2 SecurityGroup vpc":{"type":"method","name":"vpc","children":[],"call":["VPC  new "," config "," vpc_id "]}," AWS EC2 SecurityGroup instances":{"type":"method","name":"instances","children":[],"call":["instances filter "," group_id "," vpc? ","InstanceCollection  new "," config ","InstanceCollection  new  filter "]}," AWS EC2 SecurityGroup EgressIpPermissionCollection initialize":{"type":"method","name":"initialize","children":[],"call":["options merge "]}," AWS EC2 SecurityGroup IpPermissionCollection _each_item":{"type":"method","name":"_each_item","children":[],"call":["IpPermission  new "," config "," egress? ","p [] "," security_group ","SecurityGroup  new "," security_group vpc_id ","group [] ","p [] collect ","ip [] "," security_group send each "," security_group send "]}," AWS EC2 SecurityGroup IpPermission update_sg":{"type":"method","name":"update_sg","children":[],"call":[" security_group send "," port_range "," protocol "," security_group ","sources << ","opts []= "," egress? "," groups "," ip_ranges "]}," AWS EC2 SecurityGroup IpPermission eql?":{"type":"method","name":"eql?","children":[],"call":["other egress? == "," egress? ","other egress? ","other groups sort == "," groups sort "," groups ","other groups sort ","other groups ","other ip_ranges sort == "," ip_ranges sort "," ip_ranges ","other ip_ranges sort ","other ip_ranges ","other port_range == "," port_range ","other port_range ","other protocol == "," protocol ","other protocol ","other security_group == "," security_group ","other security_group ","other is_a? ","other egress == ","other egress ","other groups == ","other ip_ranges == "]}," AWS EC2 RouteTableCollection _each_item":{"type":"method","name":"_each_item","children":[],"call":["RouteTable  new_from "," config ","t route_table_id ","response route_table_set each ","response route_table_set "," filtered_request ","t RouteTable  new_from _id ","response RouteTable  new_from _set each "," filtered_request  route_table_set each ","response RouteTable  new_from _set "," filtered_request  route_table_set "]}," AWS EC2 RouteTableCollection main_route_table":{"type":"method","name":"main_route_table","children":[],"call":["rt main? "," find ","AWS  memoize ","@main nil? "]}," AWS EC2 RouteTableCollection []":{"type":"method","name":"[]","children":[],"call":["RouteTable  new "," config "]}," AWS EC2 RouteTableCollection create":{"type":"method","name":"create","children":[],"call":["RouteTable  new_from "," config ","resp route_table route_table_id ","resp route_table "," client create_route_table "," client ","client_opts []= "," vpc_id_option "," client create_route_table  route_table route_table_id "," client create_route_table  route_table "]}," AWS EC2 RouteTable route_options":{"type":"method","name":"route_options","children":[],"call":["client_opts []= ","interface id ","interface is_a? ","options [] ","instance id ","instance is_a? ","gateway id ","gateway is_a? "," route_table_id ","interface id  id ","options []  id ","interface id  is_a? ","options []  is_a? ","instance id  id ","instance id  is_a? ","gateway id  id ","gateway id  is_a? "]}," AWS EC2 RouteTable delete":{"type":"method","name":"delete","children":[],"call":[" client delete_route_table "," route_table_id "," client "]}," AWS EC2 RouteTable delete_route":{"type":"method","name":"delete_route","children":[],"call":[" client delete_route "," route_options "," client "]}," AWS EC2 RouteTable replace_route":{"type":"method","name":"replace_route","children":[],"call":[" client replace_route "," route_options "," client "]}," AWS EC2 RouteTable create_route":{"type":"method","name":"create_route","children":[],"call":[" client create_route "," route_options "," client "]}," AWS EC2 RouteTable routes":{"type":"method","name":"routes","children":[],"call":["Route  new "," route_set map "," route_set "]}," AWS EC2 RouteTable associations":{"type":"method","name":"associations","children":[],"call":["Association  new ","details [] "," association_set collect "," association_set ","details route_table_association_id ","details subnet_id ","details respond_to? ","details details subnet_id  "]}," AWS EC2 RouteTable subnets":{"type":"method","name":"subnets","children":[],"call":["subnets + ","list << ","associated_subnets include? ","all_subnets inject "," vpc route_tables map flatten map flatten compact "," vpc route_tables map flatten map flatten "," vpc route_tables map flatten map "," vpc route_tables map flatten "," vpc route_tables map "," vpc route_tables "," vpc "," vpc subnets to_a "," vpc subnets ","AWS  memoize ","subnets compact! ","subnets include? "," associations map "," associations "," associations map  + "," vpc route_tables map flatten map flatten compact  include? ","associated_ associations map  include? "," vpc subnets to_a  inject ","all_ associations map  inject "," vpc  associations map  to_a "," vpc  associations map  "," associations map  compact! "," associations map  include? "]}," AWS EC2 RouteTable vpc":{"type":"method","name":"vpc","children":[],"call":["VPC  new "," config "," vpc_id "]}," AWS EC2 RouteTable main?":{"type":"method","name":"main?","children":[],"call":["(send\n  (send nil :associations) :find) ! ! ","(send\n  (send nil :associations) :find) ! ","a main? "," associations find "," associations ","@main nil? ","(send\n  (send nil :associations) :find) ! !  nil? "]}," AWS EC2 RouteTable initialize":{"type":"method","name":"initialize","children":[],"call":[]}," AWS EC2 RouteTable Route delete":{"type":"method","name":"delete","children":[],"call":[" route_table delete_route "," destination_cidr_block "," route_table "]}," AWS EC2 RouteTable Route replace":{"type":"method","name":"replace","children":[],"call":[" route_table replace_route "," destination_cidr_block "," route_table "]}," AWS EC2 RouteTable Route initialize":{"type":"method","name":"initialize","children":[],"call":["details state to_sym ","details state ","(pair\n  (str \"CreateRoute\")\n  (sym :create_route)) [] ","details origin "," network_interface "," instance "," internet_gateway ","NetworkInterface  new ","route_table config ","route_table vpc_id ","details [] ","Instance  new ","InternetGateway  new ","details destination_cidr_block ","details network_interface_id ","details respond_to? ","details instance_owner_id ","details instance_id ","details gateway_id "]}," AWS EC2 RouteTable Association delete":{"type":"method","name":"delete","children":[],"call":[" route_table client disassociate_route_table "," association_id "," route_table client "," route_table "]}," AWS EC2 RouteTable Association initialize":{"type":"method","name":"initialize","children":[],"call":["Subnet  new ","route_table config "]}," AWS EC2 Region eql?":{"type":"method","name":"eql?","children":[],"call":["other endpoint == "," endpoint ","other endpoint ","other name == "," name ","other name ","other is_a? "]}," AWS EC2 NetworkInterfaceCollection _each_item":{"type":"method","name":"_each_item","children":[],"call":["NetworkInterface  new_from "," config ","n network_interface_id ","resp network_interface_set each ","resp network_interface_set "," filtered_request ","n NetworkInterface  new_from _id ","resp NetworkInterface  new_from _set each "," filtered_request  network_interface_set each ","resp NetworkInterface  new_from _set "," filtered_request  network_interface_set "]}," AWS EC2 NetworkInterfaceCollection groups_options":{"type":"method","name":"groups_options","children":[],"call":["sg id ","sg is_a? ","(lvar :groups) flatten map ","(lvar :groups) flatten ","options [] ","(lvar :options [] ) flatten map ","(lvar :options [] ) flatten "]}," AWS EC2 NetworkInterfaceCollection []":{"type":"method","name":"[]","children":[],"call":["NetworkInterface  new "," config "]}," AWS EC2 NetworkInterfaceCollection create":{"type":"method","name":"create","children":[],"call":["NetworkInterface  new_from "," config ","resp network_interface network_interface_id ","resp network_interface "," client create_network_interface "," client ","client_opts []= "," groups_options ","options [] ","options key? "," subnet_id_option "," client create_network_interface  network_interface network_interface_id "," client create_network_interface  network_interface ","  groups_options _options "]}," AWS EC2 NetworkInterface exists?":{"type":"method","name":"exists?","children":[],"call":[" get_resource "]}," AWS EC2 NetworkInterface delete":{"type":"method","name":"delete","children":[],"call":[" client delete_network_interface "," client ","client_opts []= "," network_interface_id "]}," AWS EC2 NetworkInterface detach":{"type":"method","name":"detach","children":[],"call":[" raise ","attachment detach "," attachment "," attachment  detach ","  attachment  "]}," AWS EC2 NetworkInterface attach":{"type":"method","name":"attach","children":[],"call":[" client attach_network_interface "," client ","client_opts []= ","options [] "," network_interface_id ","instance instance_id ","instance is_a? ","instance instance instance_id  "]}," AWS EC2 NetworkInterface attachment":{"type":"method","name":"attachment","children":[],"call":["Attachment  new "," attachment_details "," attachment_ attachment_details  "]}," AWS EC2 NetworkInterface instance":{"type":"method","name":"instance","children":[],"call":["attachment instance "," attachment "," attachment  instance ","  attachment  "]}," AWS EC2 NetworkInterface set_security_groups":{"type":"method","name":"set_security_groups","children":[],"call":[" groups= ","g security_group_id ","g is_a? ","(lvar :groups) flatten collect ","(lvar :groups) flatten "]}," AWS EC2 NetworkInterface security_groups":{"type":"method","name":"security_groups","children":[],"call":["SecurityGroup  new "," config ","g group_name ","g group_id "," groups collect "," groups "]}," AWS EC2 NetworkInterface availability_zone":{"type":"method","name":"availability_zone","children":[],"call":["AvailabilityZone  new "," config "," availability_zone_name "]}," AWS EC2 NetworkInterface elastic_ip":{"type":"method","name":"elastic_ip","children":[],"call":["ElasticIp  new ","association [] ","association merge "," config "," association "," association  [] "," association  merge ","  association  "]}," AWS EC2 NetworkInterface subnet":{"type":"method","name":"subnet","children":[],"call":["Subnet  new "," config "," vpc_id "," subnet_id "]}," AWS EC2 NetworkInterface vpc":{"type":"method","name":"vpc","children":[],"call":["VPC  new "," config "," vpc_id "]}," AWS EC2 NetworkInterface initialize":{"type":"method","name":"initialize","children":[],"call":[]}," AWS EC2 NetworkInterface Attachment detach":{"type":"method","name":"detach","children":[],"call":[" network_interface client detach_network_interface "," network_interface client "," network_interface ","client_opts []= ","options [] == ","options [] "," attachment_id "]}," AWS EC2 NetworkInterface Attachment delete_on_termination=":{"type":"method","name":"delete_on_termination=","children":[],"call":[" network_interface client modify_network_interface_attribute "," network_interface client "," network_interface ","opts [] []= ","opts [] "," id ","opts []= "," network_interface id "]}," AWS EC2 NetworkInterface Attachment initialize":{"type":"method","name":"initialize","children":[],"call":["details [] ","details [] to_sym ","Instance  new ","network_interface config ","details delete_on_termination? ","details attach_time ","details status to_sym ","details status ","details device_index ","details instance_owner_id ","details instance_id ","details attachment_id "]}," AWS EC2 NetworkACLCollection _each_item":{"type":"method","name":"_each_item","children":[],"call":["NetworkACL  new_from "," config ","a network_acl_id ","response network_acl_set each ","response network_acl_set "," filtered_request ","a NetworkACL  new_from _id ","response NetworkACL  new_from _set each "," filtered_request  network_acl_set each ","response NetworkACL  new_from _set "," filtered_request  network_acl_set "]}," AWS EC2 NetworkACLCollection []":{"type":"method","name":"[]","children":[],"call":["NetworkACL  new "," config "]}," AWS EC2 NetworkACLCollection create":{"type":"method","name":"create","children":[],"call":["NetworkACL  new_from "," config ","resp network_acl network_acl_id ","resp network_acl "," client create_network_acl "," client ","client_opts []= "," vpc_id_option "," client create_network_acl  network_acl network_acl_id "," client create_network_acl  network_acl "]}," AWS EC2 NetworkACL entry_options":{"type":"method","name":"entry_options","children":[],"call":["entry_opts [] []= ","options [] last ","options [] ","entry_opts [] ","options [] first ","entry_opts []= ","options key? ","options [] to_s ","options [] to_s downcase "," network_acl_id "," raise ","(true) include? "]}," AWS EC2 NetworkACL delete":{"type":"method","name":"delete","children":[],"call":[" client delete_network_acl "," network_acl_id "," client "]}," AWS EC2 NetworkACL delete_entry":{"type":"method","name":"delete_entry","children":[],"call":[" client delete_network_acl_entry "," client ","client_opts []= ","egress_or_ingress == "," network_acl_id "," raise ","(sym :ingress) include? "]}," AWS EC2 NetworkACL replace_entry":{"type":"method","name":"replace_entry","children":[],"call":[" client replace_network_acl_entry "," entry_options "," client "]}," AWS EC2 NetworkACL create_entry":{"type":"method","name":"create_entry","children":[],"call":[" client create_network_acl_entry "," entry_options "," client "]}," AWS EC2 NetworkACL entries":{"type":"method","name":"entries","children":[],"call":["Entry  new "," entry_set map "," entry_set "]}," AWS EC2 NetworkACL associations":{"type":"method","name":"associations","children":[],"call":["Association  new ","assoc network_acl_association_id ","Subnet  new "," config "," vpc_id ","assoc subnet_id "," association_set map "," association_set ","assoc Subnet  new _id "]}," AWS EC2 NetworkACL subnets":{"type":"method","name":"subnets","children":[],"call":[" associations map "," associations "]}," AWS EC2 NetworkACL vpc":{"type":"method","name":"vpc","children":[],"call":["VPC  new "," config "," vpc_id "]}," AWS EC2 NetworkACL initialize":{"type":"method","name":"initialize","children":[],"call":[]}," AWS EC2 NetworkACL Entry delete":{"type":"method","name":"delete","children":[],"call":[" network_acl delete_entry "," rule_number "," egress? "," network_acl "]}," AWS EC2 NetworkACL Entry replace":{"type":"method","name":"replace","children":[],"call":[" network_acl replace_entry ","options merge "," rule_number "," network_acl "]}," AWS EC2 NetworkACL Entry egress?":{"type":"method","name":"egress?","children":[],"call":[]}," AWS EC2 NetworkACL Entry ingress?":{"type":"method","name":"ingress?","children":[],"call":[]}," AWS EC2 NetworkACL Entry deny?":{"type":"method","name":"deny?","children":[],"call":["@action == "]}," AWS EC2 NetworkACL Entry allow?":{"type":"method","name":"allow?","children":[],"call":["@action == "]}," AWS EC2 NetworkACL Entry initialize":{"type":"method","name":"initialize","children":[],"call":["range [] ","details [] ","type_code [] ","@egress ! ","details [] to_sym ","details [] to_i ","details port_range to ","details port_range ","details port_range from ","details respond_to? ","details icmp_type_code code ","details icmp_type_code ","details icmp_type_code type ","details cidr_block ","details egress? ","details rule_action to_sym ","details rule_action ","details protocol to_i ","details protocol ","details rule_number ","details []  [] ","details []  ! ","details egress?  ! ","details port_details []  to ","details port_details []  ","details port_details []  from ","details icmp_details []  code ","details icmp_details []  ","details icmp_details []  type "]}," AWS EC2 NetworkACL Association replace_network_acl":{"type":"method","name":"replace_network_acl","children":[],"call":[" subnet client replace_network_acl_association "," association_id "," subnet client "," subnet ","network_acl id ","network_acl is_a? "]}," AWS EC2 NetworkACL Association initialize":{"type":"method","name":"initialize","children":[],"call":[]}," AWS EC2 InternetGatewayCollection _each_item":{"type":"method","name":"_each_item","children":[],"call":["InternetGateway  new_from "," config ","g internet_gateway_id ","response internet_gateway_set each ","response internet_gateway_set "," filtered_request ","g internet_InternetGateway  new_from _id ","response internet_InternetGateway  new_from _set each "," filtered_request  internet_gateway_set each ","response internet_InternetGateway  new_from _set "," filtered_request  internet_gateway_set "]}," AWS EC2 InternetGatewayCollection []":{"type":"method","name":"[]","children":[],"call":["InternetGateway  new "," config "]}," AWS EC2 InternetGatewayCollection create":{"type":"method","name":"create","children":[],"call":[" [] ","response internet_gateway internet_gateway_id ","response internet_gateway "," client create_internet_gateway "," client "," client create_internet_gateway  internet_gateway internet_gateway_id "," client create_internet_gateway  internet_gateway "]}," AWS EC2 InternetGateway vpc_id_option":{"type":"method","name":"vpc_id_option","children":[],"call":["vpc vpc_id ","vpc is_a? "]}," AWS EC2 InternetGateway exists?":{"type":"method","name":"exists?","children":[],"call":[" get_resource "]}," AWS EC2 InternetGateway delete":{"type":"method","name":"delete","children":[],"call":[" client delete_internet_gateway "," client ","client_opts []= "," internet_gateway_id "]}," AWS EC2 InternetGateway detach":{"type":"method","name":"detach","children":[],"call":[" client detach_internet_gateway "," client ","client_opts []= "," vpc_id_option "," internet_gateway_id "]}," AWS EC2 InternetGateway attach":{"type":"method","name":"attach","children":[],"call":[" client attach_internet_gateway "," client ","client_opts []= "," vpc_id_option "," internet_gateway_id "]}," AWS EC2 InternetGateway vpc=":{"type":"method","name":"vpc=","children":[],"call":[" attach ","attachment delete "," attachments first "," attachments "," attachments first  delete ","  attachments first s first ","  attachments first s "]}," AWS EC2 InternetGateway vpc":{"type":"method","name":"vpc","children":[],"call":["attachment vpc "," attachments first "," attachments "," attachments first  vpc ","  attachments first s first ","  attachments first s "]}," AWS EC2 InternetGateway attachments":{"type":"method","name":"attachments","children":[],"call":["Attachment  new "," attachment_set map "," attachment_set "]}," AWS EC2 InternetGateway initialize":{"type":"method","name":"initialize","children":[],"call":[]}," AWS EC2 InternetGateway Attachment delete":{"type":"method","name":"delete","children":[],"call":[" internet_gateway detach "," vpc "," internet_gateway "]}," AWS EC2 InternetGateway Attachment initialize":{"type":"method","name":"initialize","children":[],"call":["details state to_sym ","details state ","VPC  new ","internet_gateway config ","details vpc_id "]}," AWS EC2 Instance export_to_s3":{"type":"method","name":"export_to_s3","children":[],"call":["ExportTask  new_from "," config ","resp [] [] ","resp [] "," client create_instance_export_task "," client ","opts [] []= ","options [] ","opts [] ","options key? ","(sym :disk_image_format) each ","opts []= "," instance_id ","bucket to_s ","bucket name ","bucket is_a? "," client create_instance_export_task  [] [] "," client create_instance_export_task  [] "]}," AWS EC2 Instance console_output":{"type":"method","name":"console_output","children":[],"call":["Base64  decode64 "," client get_console_output output "," client get_console_output "," id "," client "," client get_console_output [] "," client get_console_ client get_console_output output   client get_console_output output  "," client get_console_ client get_console_output []   client get_console_output []  "," client get_console_ client get_console_output output  "," client get_console_ client get_console_output []  "," client get_console_ client get_console_output output  [] "," client get_console_ client get_console_output []  [] "]}," AWS EC2 Instance block_devices":{"type":"method","name":"block_devices","children":[],"call":[" block_device_mapping to_a "," block_device_mapping "]}," AWS EC2 Instance attachments":{"type":"method","name":"attachments","children":[],"call":["m []= ","Attachment  new "," config ","Volume  new ","mapping [] [] ","mapping [] ","(or\n  (send nil :block_device_mapping)\n  (array)) inject "," block_device_mapping ","(or\n  (send nil :block_mapping [] _mapping)\n  (array)) inject "," block_mapping [] _mapping "]}," AWS EC2 Instance attach_network_interface":{"type":"method","name":"attach_network_interface","children":[],"call":["i attach ","NetworkInterface  new "," config ","network_interface attach ","network_interface is_a? ","NetworkInterface  new  attach "," confNetworkInterface  new g ","network_NetworkInterface  new nterface attach ","network_NetworkInterface  new nterface NetworkInterface  new s_a? "]}," AWS EC2 Instance network_interfaces":{"type":"method","name":"network_interfaces","children":[],"call":["NetworkInterface  new_from "," config ","ni network_interface_id "," network_interface_set collect "," network_interface_set "]}," AWS EC2 Instance subnet":{"type":"method","name":"subnet","children":[],"call":["Subnet  new "," config "," vpc_id "," subnet_id "]}," AWS EC2 Instance vpc":{"type":"method","name":"vpc","children":[],"call":["VPC  new "," config "," vpc_id "]}," AWS EC2 Instance vpc?":{"type":"method","name":"vpc?","children":[],"call":[" vpc_id ! ! "," vpc_id ! "," vpc_id "]}," AWS EC2 Image block_devices":{"type":"method","name":"block_devices","children":[],"call":[" block_device_mapping to_a "," block_device_mapping "]}," AWS EC2 FilteredCollection filter_value_for":{"type":"method","name":"filter_value_for","children":[],"call":["filter [] first ","filter [] ","filter [] == ","@filters each "]}," AWS EC2 FilteredCollection subnet_id_option":{"type":"method","name":"subnet_id_option","children":[],"call":["subnet_id id ","subnet_id is_a? "," filter_value_for ","options [] ","options delete ","subnet_id id  id ","options delete  id ","subnet_id id  is_a? ","options delete  is_a? "]}," AWS EC2 FilteredCollection vpc_id_option":{"type":"method","name":"vpc_id_option","children":[],"call":["vpc_id id ","vpc_id is_a? "," filter_value_for ","options [] ","vpc_id id  id ","options []  id ","vpc_id id  is_a? ","options []  is_a? "]}," AWS EC2 ExportTaskCollection _each_item":{"type":"method","name":"_each_item","children":[],"call":["ExportTask  new_from "," config ","details [] ","resp data [] each ","resp data [] ","resp data "," filtered_request "," filtered_request  data [] each "," filtered_request  data [] "," filtered_request  data "]}," AWS EC2 ExportTaskCollection []":{"type":"method","name":"[]","children":[],"call":["ExportTask  new "," config "]}," AWS EC2 ExportTask cancel":{"type":"method","name":"cancel","children":[],"call":[" client cancel_export_task "," export_task_id "," client "]}," AWS EC2 ExportTask s3_object":{"type":"method","name":"s3_object","children":[],"call":[" s3_bucket objects [] "," s3_key "," s3_bucket objects "," s3_bucket "]}," AWS EC2 ExportTask s3_bucket":{"type":"method","name":"s3_bucket","children":[],"call":["S3 Bucket  new "," config "," s3_bucket_name "]}," AWS EC2 ExportTask instance":{"type":"method","name":"instance","children":[],"call":["Instance  new "," config "," instance_id "]}," AWS EC2 ExportTask initialize":{"type":"method","name":"initialize","children":[],"call":[]}," AWS EC2 ElasticIp exists?":{"type":"method","name":"exists?","children":[],"call":[" get_resource "]}," AWS EC2 ElasticIp associate":{"type":"method","name":"associate","children":[],"call":["resp data [] ","resp data "," client associate_address "," client ","client_opts []= "," public_ip "," allocation_id "," vpc? ","value id ","value is_a? ","options [] ","(sym :instance) each ","opt to_s ","opt to_s + ","opt to_s == "," client associate_address  data [] "," client associate_address  data ","options []  id ","options []  is_a? "]}," AWS EC2 ElasticIp network_interface":{"type":"method","name":"network_interface","children":[],"call":["NetworkInterface  new "," config "," network_interface_id "]}," AWS EC2 ElasticIp vpc?":{"type":"method","name":"vpc?","children":[],"call":[" domain == "," domain "]}," AWS EC2 DHCPOptionsCollection _each_item":{"type":"method","name":"_each_item","children":[],"call":["DHCPOptions  new_from "," config ","opts dhcp_options_id ","response dhcp_options_set each ","response dhcp_options_set "," filtered_request ","opts dhcp_DHCPOptions  new_from _id ","response dhcp_DHCPOptions  new_from _set each "," filtered_request  dhcp_options_set each ","response dhcp_DHCPOptions  new_from _set "," filtered_request  dhcp_options_set "]}," AWS EC2 DHCPOptionsCollection []":{"type":"method","name":"[]","children":[],"call":["DHCPOptions  new "," config "]}," AWS EC2 DHCPOptionsCollection create":{"type":"method","name":"create","children":[],"call":["DHCPOptions  new_from "," config ","resp dhcp_options dhcp_options_id ","resp dhcp_options "," client create_dhcp_options "," client ","client_opts []= ","configurations << ","values map ","values is_a? ","opt to_s gsub ","opt to_s ","options each_pair "," client create_dhcp_options  dhcp_options dhcp_options_id ","resp dhcp_opt to_s gsub ions dhcp_opt to_s gsub ions_id "," client create_dhcp_options  dhcp_options ","resp dhcp_opt to_s gsub ions "," client create_dhcp_opt to_s gsub ions ","client_opt to_s gsub s []= ","opt to_s gsub  to_s gsub ","opt to_s gsub  to_s ","opt to_s gsub ions each_pair "]}," AWS EC2 DHCPOptions vpc_id_option":{"type":"method","name":"vpc_id_option","children":[],"call":["vpc vpc_id ","vpc is_a? "]}," AWS EC2 DHCPOptions exists?":{"type":"method","name":"exists?","children":[],"call":[" get_resource "]}," AWS EC2 DHCPOptions vpcs":{"type":"method","name":"vpcs","children":[],"call":["vpcs filter "," dhcp_options_id ","VPCCollection  new "," config ","VPCCollection  new  filter "]}," AWS EC2 DHCPOptions delete":{"type":"method","name":"delete","children":[],"call":[" client delete_dhcp_options "," client ","client_opts []= "," dhcp_options_id "]}," AWS EC2 DHCPOptions associate":{"type":"method","name":"associate","children":[],"call":[" client associate_dhcp_options "," client ","client_opts []= "," vpc_id_option "," dhcp_options_id "]}," AWS EC2 DHCPOptions configuration":{"type":"method","name":"configuration","children":[],"call":["config merge ","values first to_i ","values first ","key == ","v [] ","opt [] map ","opt [] ","opt [] gsub to_sym ","opt [] gsub "," dhcp_configuration_set to_a inject "," dhcp_configuration_set to_a "," dhcp_configuration_set ","opt value_set map ","opt value_set ","opt key gsub to_sym ","opt key gsub ","opt key "," dhcp_configuration_set inject ","values first to_i  first to_i ","values first  first to_i ","opt value_set map  first to_i ","values first to_i  first ","values first  first ","opt value_set map  first ","opt [] gsub to_sym  == ","opt key gsub to_sym  == ","opt opt [] gsub to_sym  gsub to_sym ","opt opt key gsub to_sym  gsub to_sym ","opt opt [] gsub to_sym  gsub ","opt opt key gsub to_sym  gsub ","opt opt [] gsub to_sym  ","opt opt key gsub to_sym  "]}," AWS EC2 DHCPOptions initialize":{"type":"method","name":"initialize","children":[],"call":[]}," AWS EC2 CustomerGatewayCollection _each_item":{"type":"method","name":"_each_item","children":[],"call":["CustomerGateway  new_from "," config ","g customer_gateway_id ","response customer_gateway_set each ","response customer_gateway_set "," filtered_request ","g customer_CustomerGateway  new_from _id ","response customer_CustomerGateway  new_from _set each "," filtered_request  customer_gateway_set each ","response customer_CustomerGateway  new_from _set "," filtered_request  customer_gateway_set "]}," AWS EC2 CustomerGatewayCollection []":{"type":"method","name":"[]","children":[],"call":["CustomerGateway  new "," config "]}," AWS EC2 CustomerGatewayCollection create":{"type":"method","name":"create","children":[],"call":["CustomerGateway  new_from "," config ","resp customer_gateway customer_gateway_id ","resp customer_gateway "," client create_customer_gateway "," client ","client_opts []= ","options [] "," client create_customer_gateway  customer_gateway customer_gateway_id "," client create_customer_gateway  customer_gateway "]}," AWS EC2 CustomerGateway exists?":{"type":"method","name":"exists?","children":[],"call":[" client describe_customer_gateways "," id "," client "]}," AWS EC2 CustomerGateway delete":{"type":"method","name":"delete","children":[],"call":[" client delete_customer_gateway "," client ","client_opts []= "," customer_gateway_id "]}," AWS EC2 CustomerGateway vpn_connections":{"type":"method","name":"vpn_connections","children":[],"call":["connections filter "," id ","VPNConnectionCollection  new "," config ","VPNConnectionCollection  new  filter "]}," AWS EC2 CustomerGateway initialize":{"type":"method","name":"initialize","children":[],"call":[]}," AWS EC2 Attachment find_attachment":{"type":"method","name":"find_attachment","children":[],"call":["att device == "," device ","att device ","att volume_id == "," volume id "," volume ","att volume_id ","att instance_id == "," instance id "," instance ","att instance_id ","attachments find ","vol attachment_set ","resp volume_index [] ","resp volume_index ","att resp volume_index [] ume_id == "," resp volume_index [] ume id "," resp volume_index [] ume ","att resp volume_index [] ume_id ","vol attachment_set  find ","resp volume_index []  attachment_set ","resp resp volume_index [] ume_index [] ","resp resp volume_index [] ume_index "]}," AWS DynamoDB batch_write":{"type":"method","name":"batch_write","children":[],"call":["batch process! ","BatchWrite  new "," config ","BatchWrite  new  process! "]}," AWS DynamoDB batch_get":{"type":"method","name":"batch_get","children":[],"call":["batch to_enum ","BatchGet  new "," config ","batch enumerator ","BatchGet  new  to_enum ","BatchGet  new  enumerator "]}," AWS DynamoDB tables":{"type":"method","name":"tables","children":[],"call":["TableCollection  new "," config "]}," AWS DynamoDB Types raise_error":{"type":"method","name":"raise_error","children":[],"call":[" raise "]}," AWS DynamoDB Types type_indicator":{"type":"method","name":"type_indicator","children":[],"call":[" raise_error ","value class ","value == ","member_indicator != ","member_indicator to_s size > ","member_indicator to_s size ","member_indicator to_s "," type_indicator ","value each ","value respond_to? ","value kind_of? "," type_indicator  != "," type_indicator  to_s size > "," type_indicator  to_s size "," type_indicator  to_s "]}," AWS DynamoDB Types cast_binary":{"type":"method","name":"cast_binary","children":[],"call":["DynamoDB Binary  new "]}," AWS DynamoDB Types cast_number":{"type":"method","name":"cast_number","children":[],"call":["number to_f ","BigDecimal  new ","number to_s ","cfg dynamo_db_big_decimals ","AWS  config ","options [] "," config "," respond_to? "," config  dynamo_db_big_decimals "]}," AWS DynamoDB Types format_attribute_value":{"type":"method","name":"format_attribute_value","children":[],"call":["value map ","indicator == ","value to_s ","value == "," type_indicator ","Hash  [] ","value map  map ","value to_s  map "," type_indicator  == ","value map  to_s ","value to_s  to_s ","value map  == ","value to_s  == "," type_ type_indicator  "]}," AWS DynamoDB Types values_from_response_hash":{"type":"method","name":"values_from_response_hash","children":[],"call":["h update "," value_from_response ","hash inject "]}," AWS DynamoDB Types value_from_response":{"type":"method","name":"value_from_response","children":[],"call":["Set  [] "," cast_binary ","value map "," cast_number ","hash to_a first ","hash to_a "," BigDecimal ","v to_s ","value to_s "]}," AWS DynamoDB TableCollection schema_element":{"type":"method","name":"schema_element","children":[],"call":["type to_s [] upcase ","type to_s [] ","type to_s ","name to_s "," raise ","(sym :string) include? ","desc to_a first ","desc to_a ","type == "]}," AWS DynamoDB TableCollection key_schema":{"type":"method","name":"key_schema","children":[],"call":["schema []= "," schema_element ","options values_at "]}," AWS DynamoDB TableCollection _each_item":{"type":"method","name":"_each_item","children":[],"call":["response data [] ","response data ","Table  new "," config ","response data [] each "," client list_tables "," client ","options []= "," client list_tables  data [] "," client list_tables  data "," client list_tables  data [] each "]}," AWS DynamoDB TableCollection []":{"type":"method","name":"[]","children":[],"call":["Table  new "," config "]}," AWS DynamoDB TableCollection create":{"type":"method","name":"create","children":[],"call":["Table  new "," config "," client create_table "," client "," key_schema ","name to_s "]}," AWS DynamoDB Table resource_identifiers":{"type":"method","name":"resource_identifiers","children":[],"call":[" name "]}," AWS DynamoDB Table get_resource":{"type":"method","name":"get_resource","children":[],"call":[" client describe_table "," resource_options "," client "]}," AWS DynamoDB Table batch_delete":{"type":"method","name":"batch_delete","children":[],"call":["batch process! ","batch delete ","BatchWrite  new "," config ","BatchWrite  new  process! ","BatchWrite  new  delete "]}," AWS DynamoDB Table batch_write":{"type":"method","name":"batch_write","children":[],"call":["batch process! ","batch write ","BatchWrite  new "," config ","BatchWrite  new  process! ","BatchWrite  new  write "]}," AWS DynamoDB Table batch_put":{"type":"method","name":"batch_put","children":[],"call":["batch process! ","batch put ","BatchWrite  new "," config "," options ","BatchWrite  new  process! ","BatchWrite  new  put "]}," AWS DynamoDB Table batch_get":{"type":"method","name":"batch_get","children":[],"call":["enum each "," block_given? ","batch to_enum ","batch table "," name ","BatchGet  new "," config ","batch to_enum  each ","batch to_batch to_enum  ","BatchGet  new  to_enum ","BatchGet  new  table "]}," AWS DynamoDB Table exists?":{"type":"method","name":"exists?","children":[],"call":[" get_resource "]}," AWS DynamoDB Table items":{"type":"method","name":"items","children":[],"call":["ItemCollection  new "]}," AWS DynamoDB Table delete":{"type":"method","name":"delete","children":[],"call":[" client delete_table "," name "," client "]}," AWS DynamoDB Table range_key=":{"type":"method","name":"range_key=","children":[],"call":[" static_attributes []= ","PrimaryKeyElement  from_description "," static_attributes "," raise "," schema_loaded? "]}," AWS DynamoDB Table hash_key=":{"type":"method","name":"hash_key=","children":[],"call":[" static_attributes []= ","PrimaryKeyElement  from_description "," static_attributes "]}," AWS DynamoDB Table load_schema":{"type":"method","name":"load_schema","children":[],"call":[" hash_key "]}," AWS DynamoDB Table assert_schema!":{"type":"method","name":"assert_schema!","children":[],"call":[" raise "," schema_loaded? "]}," AWS DynamoDB Table schema_loaded?":{"type":"method","name":"schema_loaded?","children":[],"call":[" static_attributes include? "," static_attributes "]}," AWS DynamoDB Table composite_key?":{"type":"method","name":"composite_key?","children":[],"call":[" simple_key? ! "," simple_key? "]}," AWS DynamoDB Table simple_key?":{"type":"method","name":"simple_key?","children":[],"call":[" range_key nil? "," range_key "]}," AWS DynamoDB Table write_capacity_units=":{"type":"method","name":"write_capacity_units=","children":[],"call":[" provision_throughput "]}," AWS DynamoDB Table read_capacity_units=":{"type":"method","name":"read_capacity_units=","children":[],"call":[" provision_throughput "]}," AWS DynamoDB Table provision_throughput":{"type":"method","name":"provision_throughput","children":[],"call":[" client update_table "," client ","client_opts []= "," name "," write_capacity_units ","options [] "," read_capacity_units "]}," AWS DynamoDB Table range_key":{"type":"method","name":"range_key","children":[],"call":[" range_key_without_schema_override "," static_attributes [] "," static_attributes "," schema_loaded? "]}," AWS DynamoDB Table initialize":{"type":"method","name":"initialize","children":[],"call":[]}," AWS DynamoDB Resource attribute":{"type":"method","name":"attribute","children":[],"call":[]}," AWS DynamoDB Request service":{"type":"method","name":"service","children":[],"call":[]}," AWS DynamoDB PrimaryKeyElement from_description":{"type":"method","name":"from_description","children":[],"call":[]}," AWS DynamoDB PrimaryKeyElement initialize":{"type":"method","name":"initialize","children":[],"call":["ATTRIBUTE_TYPES  [] ","hash [] "]}," AWS DynamoDB Keys item_key_hash":{"type":"method","name":"item_key_hash","children":[],"call":["key []= "," format_attribute_value ","item range_value ","item table composite_key? ","item table ","item hash_value ","item table assert_schema! "]}," AWS DynamoDB Keys item_key_options":{"type":"method","name":"item_key_options","children":[],"call":["extra merge ","item table name ","item table "," item_key_hash "," item_ item_key_hash _hash "]}," AWS DynamoDB ItemData initialize":{"type":"method","name":"initialize","children":[],"call":["opts [] "]}," AWS DynamoDB ItemCollection request_includes_key?":{"type":"method","name":"request_includes_key?","children":[],"call":["requested_atts include? "," table range_key name "," table range_key "," table "," table hash_key name "," table hash_key "," table composite_key? "," table simple_key? ","requested_atts nil? ","options [] ","options []  include? ","options []  nil? "]}," AWS DynamoDB ItemCollection _yield_items":{"type":"method","name":"_yield_items","children":[],"call":["Item  new_from "," table ","response data [] each ","response data [] ","response data ","ItemData  new "," values_from_response_hash "," request_includes_key? ","response request_options "," table assert_schema! "]}," AWS DynamoDB ItemCollection _each_item":{"type":"method","name":"_each_item","children":[],"call":["response data [] ","response data "," _yield_items "," client send "," client ","options [] ","options delete ","options []= "," client send  data [] "," client send  data "]}," AWS DynamoDB ItemCollection refine":{"type":"method","name":"refine","children":[],"call":[" class new "," table "," class ","(pair\n  (sym :scan_filters)\n  (send nil :scan_filters)) merge "," scan_filters "]}," AWS DynamoDB ItemCollection with_filter":{"type":"method","name":"with_filter","children":[],"call":[" refine "," scan_filters merge "," scan_filters "," raise "," scan_filters key? "," format_attribute_value ","values map "]}," AWS DynamoDB ItemCollection query":{"type":"method","name":"query","children":[],"call":[" enumerator "," each ","options []= ","att to_s ","select map ","select == ","options delete "," format_attribute_value "," raise ","RANGE_KEY_OPTIONS  each ","range end ","range begin ","range kind_of? ","options [] ","options merge ","options merge  []= ","options delete  map ","options delete  == ","options merge  delete "," format_attribute_options delete  ","options delete  end ","options delete  begin ","options delete  kind_of? ","options merge  [] ","options merge  merge "]}," AWS DynamoDB ItemCollection count":{"type":"method","name":"count","children":[],"call":["sum + ","sum + >= "," enumerator inject "," enumerator ","options [] ","options []= ","options delete ","options key? ","options merge ","options merge  [] ","options merge  []= ","options merge  delete ","options merge  key? ","options merge  merge "]}," AWS DynamoDB ItemCollection select":{"type":"method","name":"select","children":[],"call":[" enumerator "," each "," block_given? ","options []= ","att to_s ","attributes map ","attributes empty? ","options merge ","attributes pop ","attributes last kind_of? ","attributes last ","options merge  []= ","attributes pop  []= ","options merge  merge ","attributes pop  merge "]}," AWS DynamoDB ItemCollection each":{"type":"method","name":"each","children":[],"call":["options [] << "," table range_key name "," table range_key "," table ","options [] "," table composite_key? ","options []= "," table hash_key name "," table hash_key "," scan_filters "," scan_filters empty? ","options merge "," table name "," table assert_schema! "," where each "," where ","options delete ","options merge  [] << ","options merge  [] ","options merge  []= ","options merge  merge ","options merge  delete "]}," AWS DynamoDB ItemCollection where":{"type":"method","name":"where","children":[],"call":["FilterBuilder  new ","filter to_s ","items with_filter ","name to_s ","value end ","value begin ","filter inject "]}," AWS DynamoDB ItemCollection FilterBuilder between":{"type":"method","name":"between","children":[],"call":["@items with_filter "," attribute "]}," AWS DynamoDB ItemCollection FilterBuilder in":{"type":"method","name":"in","children":[],"call":["@items with_filter "," attribute "]}," AWS DynamoDB ItemCollection FilterBuilder begins_with":{"type":"method","name":"begins_with","children":[],"call":["@items with_filter "," attribute "]}," AWS DynamoDB ItemCollection FilterBuilder does_not_contain":{"type":"method","name":"does_not_contain","children":[],"call":["@items with_filter "," attribute "]}," AWS DynamoDB ItemCollection FilterBuilder contains":{"type":"method","name":"contains","children":[],"call":["@items with_filter "," attribute "]}," AWS DynamoDB ItemCollection FilterBuilder not_null":{"type":"method","name":"not_null","children":[],"call":["@items with_filter "," attribute "]}," AWS DynamoDB ItemCollection FilterBuilder is_null":{"type":"method","name":"is_null","children":[],"call":["@items with_filter "," attribute "]}," AWS DynamoDB ItemCollection FilterBuilder gte":{"type":"method","name":"gte","children":[],"call":["@items with_filter "," attribute "]}," AWS DynamoDB ItemCollection FilterBuilder lte":{"type":"method","name":"lte","children":[],"call":["@items with_filter "," attribute "]}," AWS DynamoDB ItemCollection FilterBuilder greater_than":{"type":"method","name":"greater_than","children":[],"call":["@items with_filter "," attribute "]}," AWS DynamoDB ItemCollection FilterBuilder less_than":{"type":"method","name":"less_than","children":[],"call":["@items with_filter "," attribute "]}," AWS DynamoDB ItemCollection FilterBuilder not_equal_to":{"type":"method","name":"not_equal_to","children":[],"call":["@items with_filter "," attribute "]}," AWS DynamoDB ItemCollection FilterBuilder equals":{"type":"method","name":"equals","children":[],"call":["@items with_filter "," attribute "]}," AWS DynamoDB ItemCollection FilterBuilder initialize":{"type":"method","name":"initialize","children":[],"call":[]}," AWS DynamoDB ItemCollection at":{"type":"method","name":"at","children":[],"call":["Item  new "," table "," raise ","range_value ! "," table composite_key? "," table assert_schema! "]}," AWS DynamoDB ItemCollection []":{"type":"method","name":"[]","children":[],"call":["Item  new "," table "," raise "," table simple_key? "," table assert_schema! "]}," AWS DynamoDB ItemCollection create":{"type":"method","name":"create","children":[],"call":[" values_from_response_hash ","resp data [] ","resp data ","options [] ","Item  new_from "," table "," client put_item "," client ","client_opts []= ","options [] to_s upcase ","options [] to_s ","expected empty? "," expect_conditions "," table name ","hash update "," format_attribute_value ","key to_s ","attributes inject "," table assert_schema! "," values_from_ client put_item onse_hash "," client put_item  data [] "," client put_item  data "," client put_Item  new_from  "," expect_conditions  empty? "]}," AWS DynamoDB ItemCollection initialize":{"type":"method","name":"initialize","children":[],"call":["opts [] "]}," AWS DynamoDB Item resource_identifiers":{"type":"method","name":"resource_identifiers","children":[],"call":[" range_value "," hash_value "," table name "," table "]}," AWS DynamoDB Item new_from":{"type":"method","name":"new_from","children":[],"call":[]}," AWS DynamoDB Item attributes":{"type":"method","name":"attributes","children":[],"call":["AttributeCollection  new "]}," AWS DynamoDB Item exists?":{"type":"method","name":"exists?","children":[],"call":["resp data key? ","resp data "," client get_item "," client ","client_opts []= "," table hash_key name "," table hash_key "," table "," item_key_options "," client get_item  data key? "," client get_item  data "," item_key_options  []= "]}," AWS DynamoDB Item delete":{"type":"method","name":"delete","children":[],"call":[" values_from_response_hash ","resp data [] ","resp data ","options [] "," client delete_item "," client ","client_opts []= ","options [] to_s upcase ","options [] to_s ","expected empty? "," expect_conditions "," item_key_options "," values_from_ client delete_item onse_hash "," client delete_item  data [] "," client delete_item  data "," item_key_options  []= "," expect_conditions  empty? "]}," AWS DynamoDB Item initialize":{"type":"method","name":"initialize","children":[],"call":["args pop ","args last kind_of? ","args last "]}," AWS DynamoDB Expectations expect_conditions":{"type":"method","name":"expect_conditions","children":[],"call":["expected []= ","name to_s ","(send\n  (lvar :options) :[]\n  (sym :unless_exists)) flatten each ","(send\n  (lvar :options) :[]\n  (sym :unless_exists)) flatten ","options [] "," format_attribute_value ","options [] each "]}," AWS DynamoDB ClientBase calculate_crc32":{"type":"method","name":"calculate_crc32","children":[],"call":["Zlib  crc32 ","response http_response body ","response http_response "]}," AWS DynamoDB ClientBase crc32_is_valid?":{"type":"method","name":"crc32_is_valid?","children":[],"call":["crcs [] to_i == "," calculate_crc32 ","crcs [] to_i ","crcs [] ","response http_response headers [] ","response http_response headers ","response http_response "," config dynamo_db_crc32 "," config ","response http_response headers []  [] to_i == ","response http_response headers []  [] to_i ","response http_response headers []  [] "]}," AWS DynamoDB ClientBase sleep_durations":{"type":"method","name":"sleep_durations","children":[],"call":["50 * / ","50 * ","2 ** ","n - ","n == ","(erange\n  (int 0)\n  (lvar :retry_count)) map "," config max_retries "," config "," config max_retries == "," expired_credentials? "]}," AWS DynamoDB ClientBase retryable_error?":{"type":"method","name":"retryable_error?","children":[],"call":[" config dynamo_db_retry_throughput_errors? "," config ","response error "]}," AWS DynamoDB ClientBase extract_error_details":{"type":"method","name":"extract_error_details","children":[],"call":[" crc32_is_valid? == "," crc32_is_valid? ","response http_response status == ","response http_response status ","response http_response "]}," AWS DynamoDB BatchWrite str2sym":{"type":"method","name":"str2sym","children":[],"call":[" raise ","type inspect ","key_desc [] ","key_desc keys first ","key_desc keys ","key_desc to_a flatten ","key_desc to_a ","key_desc keys first  inspect "]}," AWS DynamoDB BatchWrite convert_delete_item":{"type":"method","name":"convert_delete_item","children":[],"call":["key []= "," str2sym ","item [] "]}," AWS DynamoDB BatchWrite convert_put_item":{"type":"method","name":"convert_put_item","children":[],"call":["attributes []= "," str2sym ","item each_pair "]}," AWS DynamoDB BatchWrite convert_unprocessed_items":{"type":"method","name":"convert_unprocessed_items","children":[],"call":["request_items [] << "," convert_delete_item ","item [] "," convert_put_item ","request keys first ","request keys ","request_items [] ","request values first ","request values ","requests each ","items each_pair ","items empty? ","request_request values first s [] << "," convert_delete_request values first  ","request values first  [] "," convert_put_request values first  ","request_request values first s [] ","request values first s each_pair ","request values first s empty? "]}," AWS DynamoDB BatchWrite format_delete":{"type":"method","name":"format_delete","children":[],"call":["item []= "," format_attribute_value ","keys last ","keys count > ","keys count ","keys first ","keys is_a? "]}," AWS DynamoDB BatchWrite format_put":{"type":"method","name":"format_put","children":[],"call":["hash merge "," format_attribute_value ","key to_s ","attributes inject "]}," AWS DynamoDB BatchWrite table_items":{"type":"method","name":"table_items","children":[],"call":["@request_items [] "," table_name "]}," AWS DynamoDB BatchWrite table_name":{"type":"method","name":"table_name","children":[],"call":["table to_s ","table name ","table is_a? "]}," AWS DynamoDB BatchWrite process!":{"type":"method","name":"process!","children":[],"call":["opts []= "," convert_unprocessed_items ","response data [] ","response data "," client batch_write_item "," client ","opts [] ","@request_items empty? "," convert_response data [] _items "," client batch_write_item  data [] "," client batch_write_item  data "]}," AWS DynamoDB BatchWrite write":{"type":"method","name":"write","children":[],"call":["items << "," format_delete ","del each ","options [] "," format_put ","put each "," table_items "," table_items  << "," format_options [] ete ","options []  each "," format_options []  "," table_ table_items  "]}," AWS DynamoDB BatchWrite delete":{"type":"method","name":"delete","children":[],"call":[" write "]}," AWS DynamoDB BatchWrite put":{"type":"method","name":"put","children":[],"call":[" write ","items flatten "]}," AWS DynamoDB BatchWrite initialize":{"type":"method","name":"initialize","children":[],"call":[]}," AWS DynamoDB BatchGet convert_unprocessed_keys":{"type":"method","name":"convert_unprocessed_keys","children":[],"call":["request_items [] []= ","key []= ","str2sym call ","desc [] ","keys [] collect ","keys [] ","request_items [] ","request_items []= ","response data [] each_pair ","response data [] ","response data "," raise ","key_desc to_a flatten ","key_desc to_a "," lambda ","response data [] empty? "]}," AWS DynamoDB BatchGet each_attributes":{"type":"method","name":"each_attributes","children":[],"call":[" each "]}," AWS DynamoDB BatchGet each":{"type":"method","name":"each","children":[],"call":["options []= "," convert_unprocessed_keys "," values_from_response_hash ","details [] each ","details [] ","response data [] each_pair ","response data [] ","response data "," client batch_get_item "," client ","options [] "," values_from_ client batch_get_item _hash "," client batch_get_item  data [] each_pair "," client batch_get_item  data [] "," client batch_get_item  data "]}," AWS DynamoDB BatchGet items":{"type":"method","name":"items","children":[],"call":[" table ","item table ","(lvar :items) flatten each ","(lvar :items) flatten "]}," AWS DynamoDB BatchGet table":{"type":"method","name":"table","children":[],"call":["@request_items [] merge! ","@request_items [] ","@request_items [] [] ","@request_items [] []= "," raise ","When batch getting attributes, you may only provide  + + ","When batch getting attributes, you may only provide  + ","@request_items [] [] != ","@request_items has_key? "," format_attribute_value ","item [] "," item_key_hash ","items collect ","(lvar :attributes) flatten ","attributes == ","table to_s ","table name ","table is_a? ","When batch getting (lvar :attributes) flatten , you may only provide  + + ","When batch getting (lvar :attributes) flatten , you may only provide  + ","(lvar :(lvar :attributes) flatten ) flatten ","(lvar :attributes) flatten  == ","table to_s  to_s ","table name  to_s ","table to_s  name ","table name  name ","table to_s  is_a? ","table name  is_a? "]}," AWS DynamoDB BatchGet initialize":{"type":"method","name":"initialize","children":[],"call":[]}," AWS DynamoDB AttributeCollection do_updates":{"type":"method","name":"do_updates","children":[],"call":[" values_from_response_hash ","resp data [] ","resp data ","options [] "," client update_item "," item_key_options "," client ","client_opts []= ","expected empty? "," expect_conditions ","options [] to_s upcase ","options [] to_s ","client_opts [] empty? ","client_opts [] "," values_from_ client update_item onse_hash "," client update_item  data [] "," client update_item  data "," expect_conditions  empty? "]}," AWS DynamoDB AttributeCollection get_item":{"type":"method","name":"get_item","children":[],"call":["resp data [] ","resp data "," client get_item "," item_key_options "," client ","their_options merge "," client get_item  data [] "," client get_item  data "," item_key_their_options merge  ","their_their_options merge  merge "]}," AWS DynamoDB AttributeCollection item_key_options":{"type":"method","name":"item_key_options","children":[],"call":[" item "]}," AWS DynamoDB AttributeCollection to_hash":{"type":"method","name":"to_hash","children":[],"call":[" values_from_response_hash "," get_item "]}," AWS DynamoDB AttributeCollection values_at":{"type":"method","name":"values_at","children":[],"call":[" values_from_response_hash values_at "," values_from_response_hash "," get_item ","a to_s ","attributes map! ","attributes empty? ","attributes pop ","attributes last kind_of? ","attributes last "]}," AWS DynamoDB AttributeCollection update":{"type":"method","name":"update","children":[],"call":[" do_updates ","builder updates ","UpdateBuilder  new ","UpdateBuilder  new  updates "]}," AWS DynamoDB AttributeCollection UpdateBuilder add_updates":{"type":"method","name":"add_updates","children":[],"call":[" raise "," updates merge! "," updates "]}," AWS DynamoDB AttributeCollection UpdateBuilder attribute_updates":{"type":"method","name":"attribute_updates","children":[],"call":[" add_updates ","new_updates update "," format_attribute_value ","(lvar :value) flatten ","our_opts [] ","name to_s ","attributes inject "," format_attribute_(lvar :value) flatten  ","(lvar :(lvar :value) flatten ) flatten ","name to_s  to_s "]}," AWS DynamoDB AttributeCollection UpdateBuilder delete":{"type":"method","name":"delete","children":[],"call":[" add_updates ","u update ","name to_s ","args inject "," attribute_updates ","args shift ","args first kind_of? ","args first "]}," AWS DynamoDB AttributeCollection UpdateBuilder add":{"type":"method","name":"add","children":[],"call":[" attribute_updates "]}," AWS DynamoDB AttributeCollection UpdateBuilder set":{"type":"method","name":"set","children":[],"call":[" delete "," attribute_updates ","attributes []= ","to_delete << ","value == ","attributes inject "]}," AWS DynamoDB AttributeCollection UpdateBuilder initialize":{"type":"method","name":"initialize","children":[],"call":[]}," AWS DynamoDB AttributeCollection delete":{"type":"method","name":"delete","children":[],"call":["u delete "," update ","args pop ","args last kind_of? ","args last ","args shift ","args first kind_of? ","args first "]}," AWS DynamoDB AttributeCollection add":{"type":"method","name":"add","children":[],"call":["u add "," update "]}," AWS DynamoDB AttributeCollection set":{"type":"method","name":"set","children":[],"call":["u set "," update "]}," AWS DynamoDB AttributeCollection []=":{"type":"method","name":"[]=","children":[],"call":[" set "]}," AWS DynamoDB AttributeCollection []":{"type":"method","name":"[]","children":[],"call":[" value_from_response ","response_attributes [] "," get_item ","attribute to_s "," get_item  [] ","response_attribute to_s s [] ","attribute to_s  to_s "]}," AWS DynamoDB AttributeCollection each_value":{"type":"method","name":"each_value","children":[],"call":[" block_given? "," each "]}," AWS DynamoDB AttributeCollection each_key":{"type":"method","name":"each_key","children":[],"call":[" block_given? "," each "]}," AWS DynamoDB AttributeCollection each":{"type":"method","name":"each","children":[],"call":[" to_hash each "," to_hash "," to_h each "," to_h "]}," AWS DynamoDB AttributeCollection initialize":{"type":"method","name":"initialize","children":[],"call":[]}," AWS DirectConnect Request service":{"type":"method","name":"service","children":[],"call":[]}," AWS DataPipeline Request service":{"type":"method","name":"service","children":[],"call":[]}," AWS api_versions":{"type":"method","name":"api_versions","children":[],"call":["hash []= ","versions [] ","versions keys sort_by inject ","versions keys sort_by ","versions keys ","versions []= ","SERVICES  [] [] ","SERVICES  [] ","versions [] << ","path match ","Dir  glob each ","Dir  glob ","File  join ","File  dirname ","SERVICES  [] full_name "]}," AWS patch_net_http_100_continue!":{"type":"method","name":"patch_net_http_100_continue!","children":[],"call":["AWS Core Http  patch_net_http_100_continue! "," require "]}," AWS regions":{"type":"method","name":"regions","children":[],"call":["Core RegionCollection  new "]}," AWS Core XML Stub apply_empty_indexes":{"type":"method","name":"apply_empty_indexes","children":[],"call":[" apply_empty_indexes ","data []= ","index [] ","child_rules [] ","rules [] each_pair ","rules [] "," apply_empty_child_rules [] es ","child_rules []  [] "]}," AWS Core XML Stub stub_data_for":{"type":"method","name":"stub_data_for","children":[],"call":["data []= ","Date  parse ","Time  now to_s ","Time  now ","child_rules [] "," stub_data_for ","child_rules [] empty? ! ","child_rules [] empty? ","Inflection  ruby_name to_sym ","Inflection  ruby_name ","name to_s ","data [] ","rules [] each_pair ","rules [] ","data []  []= "," stub_data [] _for ","data []  [] "]}," AWS Core XML Stub simulate":{"type":"method","name":"simulate","children":[],"call":[" apply_empty_indexes "," rules "," stub_data_for "," rules [] "," stub_ stub_data_for _for "]}," AWS Core XML Stub initialize":{"type":"method","name":"initialize","children":[],"call":[]}," AWS Core XML SaxHandlers REXML tag_end":{"type":"method","name":"tag_end","children":[],"call":[" end_element "]}," AWS Core XML SaxHandlers REXML tag_start":{"type":"method","name":"tag_start","children":[],"call":[" start_element "]}," AWS Core XML SaxHandlers REXML sax_parse":{"type":"method","name":"sax_parse","children":[],"call":[" REXML Parsers StreamParser  new parse "," REXML Parsers StreamParser  new "," REXML Source  new "]}," AWS Core XML SaxHandlers Ox attr":{"type":"method","name":"attr","children":[],"call":[" attributes ","name to_s "]}," AWS Core XML SaxHandlers Ox start_element":{"type":"method","name":"start_element","children":[],"call":["name to_s "]}," AWS Core XML SaxHandlers Ox sax_parse":{"type":"method","name":"sax_parse","children":[],"call":[" Ox  sax_parse ","StringIO  new "]}," AWS Core XML SaxHandlers Nokogiri characters":{"type":"method","name":"characters","children":[],"call":[" text "," set_text "]}," AWS Core XML SaxHandlers Nokogiri end_element_namespace":{"type":"method","name":"end_element_namespace","children":[],"call":[" end_element "]}," AWS Core XML SaxHandlers Nokogiri start_element_namespace":{"type":"method","name":"start_element_namespace","children":[],"call":[" start_element ","hash merge ","attr value ","attr localname ","attributes map inject ","attributes map "]}," AWS Core XML SaxHandlers Nokogiri error":{"type":"method","name":"error","children":[],"call":[]}," AWS Core XML SaxHandlers Nokogiri end_document":{"type":"method","name":"end_document","children":[],"call":[]}," AWS Core XML SaxHandlers Nokogiri start_document":{"type":"method","name":"start_document","children":[],"call":[]}," AWS Core XML SaxHandlers Nokogiri xmldecl":{"type":"method","name":"xmldecl","children":[],"call":[]}," AWS Core XML SaxHandlers Nokogiri sax_parse":{"type":"method","name":"sax_parse","children":[],"call":[" Nokogiri XML SAX Parser  new parse "," Nokogiri XML SAX Parser  new "]}," AWS Core XML SaxHandlers LibXML on_characters":{"type":"method","name":"on_characters","children":[],"call":[" text "]}," AWS Core XML SaxHandlers LibXML on_end_element_ns":{"type":"method","name":"on_end_element_ns","children":[],"call":[" end_element "]}," AWS Core XML SaxHandlers LibXML on_start_element_ns":{"type":"method","name":"on_start_element_ns","children":[],"call":[" start_element "]}," AWS Core XML SaxHandlers LibXML sax_parse":{"type":"method","name":"sax_parse","children":[],"call":["sax_parser parse ","sax_parser callbacks= "," LibXML XML SaxParser  string "," LibXML XML SaxParser  string  parse "," LibXML XML SaxParser  string  callbacks= "]}," AWS Core XML RootFrame setup_indexes":{"type":"method","name":"setup_indexes","children":[],"call":[" setup_indexes ","@indexes []= ","index [] ","child_rules [] ","rules [] each_pair ","rules [] "," setup_child_rules [] es ","@child_rules [] es []= ","child_rules []  [] "]}," AWS Core XML RootFrame inflect":{"type":"method","name":"inflect","children":[],"call":["Inflection  ruby_name to_sym ","Inflection  ruby_name ","@inflected [] "]}," AWS Core XML RootFrame add_to_index":{"type":"method","name":"add_to_index","children":[],"call":["@indexes [] []= ","@indexes [] "]}," AWS Core XML RootFrame value":{"type":"method","name":"value","children":[],"call":["value merge ","v is_a? ","@data values find ","@data values "]}," AWS Core XML RootFrame build_child_frame":{"type":"method","name":"build_child_frame","children":[],"call":["Frame  new "," rules "]}," AWS Core XML RootFrame initialize":{"type":"method","name":"initialize","children":[],"call":[" setup_indexes "]}," AWS Core XML Parser sax_handler":{"type":"method","name":"sax_handler","children":[],"call":["SaxHandlers REXML  new "," rules ","SaxHandlers Nokogiri  new "]}," AWS Core XML Parser parse":{"type":"method","name":"parse","children":[],"call":[" sax_handler parse "," sax_handler ","xml empty? ","xml nil? "]}," AWS Core XML Parser simulate":{"type":"method","name":"simulate","children":[],"call":["XML Stub  simulate "," rules "]}," AWS Core XML Parser initialize":{"type":"method","name":"initialize","children":[],"call":[]}," AWS Core XML Grammar context_for_child":{"type":"method","name":"context_for_child","children":[],"call":["@context [] [] ","@context [] "]}," AWS Core XML Grammar http_trait":{"type":"method","name":"http_trait","children":[],"call":[]}," AWS Core XML Grammar position":{"type":"method","name":"position","children":[],"call":[]}," AWS Core XML Grammar enum":{"type":"method","name":"enum","children":[],"call":[]}," AWS Core XML Grammar eql?":{"type":"method","name":"eql?","children":[],"call":[" rules == ","other rules "," rules ","other is_a? "]}," AWS Core XML Grammar symbol_value":{"type":"method","name":"symbol_value","children":[],"call":["@context []= "]}," AWS Core XML Grammar float_value":{"type":"method","name":"float_value","children":[],"call":["@context []= "]}," AWS Core XML Grammar integer_value":{"type":"method","name":"integer_value","children":[],"call":["@context []= "]}," AWS Core XML Grammar string_value":{"type":"method","name":"string_value","children":[],"call":["@context []= "]}," AWS Core XML Grammar time_value":{"type":"method","name":"time_value","children":[],"call":["@context []= "]}," AWS Core XML Grammar datetime_value":{"type":"method","name":"datetime_value","children":[],"call":["@context []= "]}," AWS Core XML Grammar blob_value":{"type":"method","name":"blob_value","children":[],"call":["@context []= "]}," AWS Core XML Grammar boolean_value":{"type":"method","name":"boolean_value","children":[],"call":["@context []= "]}," AWS Core XML Grammar construct_value":{"type":"method","name":"construct_value","children":[],"call":[" raise "]}," AWS Core XML Grammar wrapper":{"type":"method","name":"wrapper","children":[],"call":[" context_for_child []= "," context_for_child ","options [] each ","options [] "]}," AWS Core XML Grammar map":{"type":"method","name":"map","children":[],"call":[" map_entry "," rename "," element "," ignore "]}," AWS Core XML Grammar map_entry":{"type":"method","name":"map_entry","children":[],"call":["@context []= "]}," AWS Core XML Grammar list":{"type":"method","name":"list","children":[],"call":[" collect_values "," block_given? "," rename "," element "," ignore "]}," AWS Core XML Grammar default_value":{"type":"method","name":"default_value","children":[],"call":["@context [] []= ","@context [] "]}," AWS Core XML Grammar index":{"type":"method","name":"index","children":[],"call":["@context []= ","options merge "]}," AWS Core XML Grammar collect_values":{"type":"method","name":"collect_values","children":[],"call":["@context []= "]}," AWS Core XML Grammar force":{"type":"method","name":"force","children":[],"call":["@context []= "]}," AWS Core XML Grammar rename":{"type":"method","name":"rename","children":[],"call":["@context []= "," inflect "]}," AWS Core XML Grammar ignore":{"type":"method","name":"ignore","children":[],"call":["@context []= "]}," AWS Core XML Grammar element":{"type":"method","name":"element","children":[],"call":["block arity == ","block arity "," block_given? "," context_for_child "]}," AWS Core XML Grammar inflect":{"type":"method","name":"inflect","children":[],"call":["Inflection  ruby_name to_sym ","Inflection  ruby_name ","value to_s "]}," AWS Core XML Grammar validate_args":{"type":"method","name":"validate_args","children":[],"call":[" raise ","arity == ","args length > ","args length "," method arity "," method "," method arity  == "," method  method arity  "]}," AWS Core XML Grammar validate_config_method":{"type":"method","name":"validate_config_method","children":[],"call":[" raise ","allow_methods include? ","method to_s "]}," AWS Core XML Grammar parse_customization_item":{"type":"method","name":"parse_customization_item","children":[],"call":["(lvar :arg) flatten ","method kind_of? ","item to_a first ","item to_a "]}," AWS Core XML Grammar apply_customizations":{"type":"method","name":"apply_customizations","children":[],"call":[" apply_customizations "," element "," send "," validate_args "," validate_config_method "," parse_customization_item ","customizations each "]}," AWS Core XML Grammar deep_copy":{"type":"method","name":"deep_copy","children":[],"call":[]}," AWS Core XML Grammar parse":{"type":"method","name":"parse","children":[],"call":["Data  new ","Parser  parse "," rules "]}," AWS Core XML Grammar customize":{"type":"method","name":"customize","children":[],"call":[" class customize "," class "]}," AWS Core XML Grammar customize!":{"type":"method","name":"customize!","children":[],"call":[" instance_eval "," block_given? "," apply_customizations "]}," AWS Core XML Grammar initialize":{"type":"method","name":"initialize","children":[],"call":["options [] ","options key? "]}," AWS Core XML FrameStack text":{"type":"method","name":"text","children":[],"call":["@frame add_text "]}," AWS Core XML FrameStack end_element":{"type":"method","name":"end_element","children":[],"call":["@frame parent_frame ","parent consume_child_frame ","@frame parent_frame  parent_frame ","@frame @frame parent_frame _frame ","@frame parent_frame  consume_child_frame "]}," AWS Core XML FrameStack attributes":{"type":"method","name":"attributes","children":[],"call":["@frame consume_child_frame ","attr_frame add_text ","@frame build_child_frame ","attributes each_pair ","@frame build_child_frame  add_text "]}," AWS Core XML FrameStack start_element":{"type":"method","name":"start_element","children":[],"call":[" attributes ","@frame build_child_frame ","@frame build_child_frame  build_child_frame "]}," AWS Core XML FrameStack parse":{"type":"method","name":"parse","children":[],"call":["@frame value "," sax_parse "]}," AWS Core XML FrameStack sax_parse":{"type":"method","name":"sax_parse","children":[],"call":[" raise "]}," AWS Core XML FrameStack initialize":{"type":"method","name":"initialize","children":[],"call":["RootFrame  new "]}," AWS Core XML Frame datetime_like_value":{"type":"method","name":"datetime_like_value","children":[],"call":["klass parse ","klass send ","p to_i ","@text tr chop split map ","@text tr chop split ","@text tr chop ","@text tr ","@text tr == ","parts []= ","parts [] * ","parts [] "]}," AWS Core XML Frame data_context_for":{"type":"method","name":"data_context_for","children":[],"call":[" data "," data [] ","child_frame wrapper ","child_frame wrapped? "]}," AWS Core XML Frame map_value":{"type":"method","name":"map_value","children":[],"call":[" data [] "," root_frame inflect ","@rules [] last ","@rules [] "," root_frame "," data "]}," AWS Core XML Frame map_key":{"type":"method","name":"map_key","children":[],"call":[" data [] "," root_frame inflect ","@rules [] first ","@rules [] "," root_frame "," data "]}," AWS Core XML Frame wrapped?":{"type":"method","name":"wrapped?","children":[],"call":["@rules [] "]}," AWS Core XML Frame map?":{"type":"method","name":"map?","children":[],"call":["@rules [] "]}," AWS Core XML Frame list?":{"type":"method","name":"list?","children":[],"call":["@rules [] "]}," AWS Core XML Frame forced?":{"type":"method","name":"forced?","children":[],"call":["@rules [] "]}," AWS Core XML Frame ignored?":{"type":"method","name":"ignored?","children":[],"call":["@rules [] "]}," AWS Core XML Frame value":{"type":"method","name":"value","children":[],"call":[" raise ","Core Inflection  ruby_name to_sym ","Core Inflection  ruby_name ","Base64  decode64 ","@text == ","@text to_f ","@text to_i "," datetime_like_value "," rules [] "," rules "," rules [] == ","@text nil? "," data ","@text strip "," data [] == "," data [] "," data empty? ! "," data empty? "]}," AWS Core XML Frame add_text":{"type":"method","name":"add_text","children":[],"call":["@text << "]}," AWS Core XML Frame keys_from_path":{"type":"method","name":"keys_from_path","children":[],"call":[" keys_from_path ","path dup ","value each ","value is_a? ","path empty? ","data [] ","path shift ","data []  each ","data []  is_a? "]}," AWS Core XML Frame index_keys_for":{"type":"method","name":"index_keys_for","children":[],"call":[" raise "," keys_from_path ","path dup "," data ","index_opts [] ","(send\n  (lvar :parts) :map) join "," data [] ","parts map "," keys_from_index_opts []  "," index_opts [] s_from_path ","index_opts []  dup ","(send\n  (lvar :index_opts [] ) :map) join ","index_opts []  map "]}," AWS Core XML Frame close":{"type":"method","name":"close","children":[],"call":[" root_frame add_to_index "," data ","index [] "," root_frame "," index_keys_for ","@rules [] "," root_frame add_to_@rules []  ","@rules []  [] "," @rules [] _keys_for "]}," AWS Core XML Frame consume_child_frame":{"type":"method","name":"consume_child_frame","children":[],"call":["context []= ","context [] []= ","child_frame map_value ","child_frame map_key ","context [] ","child_frame map? ","context [] << ","child_frame list? "," data_context_for ","child_frame value ","child_frame ruby_name ","child_frame ignored? ","child_frame close "," data_context_for  []= "," data_context_for  [] []= ","child_frame child_frame map? _value ","child_frame map_child_frame value  ","child_frame child_frame map? _key "," data_context_for  [] ","child_frame child_frame map? ? "," data_context_for  [] << "," data_ data_context_for _for ","child_frame child_frame value  ","child_frame child_frame ruby_name  "]}," AWS Core XML Frame build_child_frame":{"type":"method","name":"build_child_frame","children":[],"call":["Frame  new "," rules_for "," root_frame "]}," AWS Core XML Frame known_child_frames":{"type":"method","name":"known_child_frames","children":[],"call":[" build_child_frame "," rules [] keys map "," rules [] keys "," rules [] "," rules "]}," AWS Core XML Frame rules_for":{"type":"method","name":"rules_for","children":[],"call":[" rules [] [] "," rules [] "," rules "]}," AWS Core XML Frame ruby_name":{"type":"method","name":"ruby_name","children":[],"call":[" root_frame inflect "," element_name "," root_frame "," rules [] "," rules "]}," AWS Core XML Frame data":{"type":"method","name":"data","children":[],"call":[" parent_frame data "," parent_frame "," ignored? "]}," AWS Core XML Frame initialize":{"type":"method","name":"initialize","children":[],"call":["context []= ","child_frame value ","child_frame ruby_name ","child_frame forced? ","child_frame map? ","child_frame list? "," data_context_for "," known_child_frames each "," known_child_frames "," merge ","rules [] ","@rules [] "," data_context_for  []= "," data_ data_context_for _for "]}," AWS Core Signer hmac":{"type":"method","name":"hmac","children":[],"call":["OpenSSL HMAC  digest ","OpenSSL Digest Digest  new "]}," AWS Core Signer sign":{"type":"method","name":"sign","children":[],"call":["Base64  encode64 strip ","Base64  encode64 "," hmac "]}," AWS Core Signature Version4 hexhmac":{"type":"method","name":"hexhmac","children":[],"call":["OpenSSL HMAC  hexdigest ","OpenSSL Digest Digest  new "]}," AWS Core Signature Version4 hmac":{"type":"method","name":"hmac","children":[],"call":["OpenSSL HMAC  digest ","OpenSSL Digest Digest  new "]}," AWS Core Signature Version4 hexdigest":{"type":"method","name":"hexdigest","children":[],"call":["digest hexdigest ","digest update ","value rewind ","value read ","1024 * ","value respond_to? ","Digest SHA256  new ","Digest SHA256  new  hexDigest SHA256  new  ","Digest SHA256  new  update "]}," AWS Core Signature Version4 canonical_header_values":{"type":"method","name":"canonical_header_values","children":[],"call":["values map join gsub strip ","values map join gsub ","values map join ","values map ","values is_a? ","values map map join ","values map map "]}," AWS Core Signature Version4 canonical_headers":{"type":"method","name":"canonical_headers","children":[],"call":["(send\n  (lvar :headers) :map) join "," canonical_header_values ","headers map ","headers sort_by ","headers << ","k == "," headers each_pair "," headers ","header first == ","header first ","k to_s downcase ","k to_s ","(send\n  (lvar :headers sort_by ) :map) join ","headers sort_by  map ","headers sort_by  sort_by ","headers sort_by  << "," headers sort_by  each_pair "," headers sort_by  "]}," AWS Core Signature Version4 signed_headers":{"type":"method","name":"signed_headers","children":[],"call":["to_sign sort join ","to_sign sort ","to_sign delete ","k to_s downcase ","k to_s "," headers keys map "," headers keys "," headers "]}," AWS Core Signature Version4 service":{"type":"method","name":"service","children":[],"call":[" raise "]}," AWS Core Signature Version4 canonical_request":{"type":"method","name":"canonical_request","children":[],"call":["parts join ","parts << "," headers [] "," headers "," signed_headers "," canonical_headers + "," canonical_headers "," querystring "," path "," http_method "," hex16 "," hash "," payload "," canonical_querystring "," canonical_uri "," action_name "," body "]}," AWS Core Signature Version4 credential_string":{"type":"method","name":"credential_string","children":[],"call":["parts join ","parts << "," service "," region ","datetime [] "]}," AWS Core Signature Version4 string_to_sign":{"type":"method","name":"string_to_sign","children":[],"call":["parts join ","parts << "," hexdigest "," canonical_request "," credential_string "," hex16 "," hash "]}," AWS Core Signature Version4 signature":{"type":"method","name":"signature","children":[],"call":[" hexhmac "," string_to_sign "," hmac "," service "," region ","datetime [] ","AWS4 + ","credentials secret_access_key ","signer secret_access_key "]}," AWS Core Signature Version4 authorization":{"type":"method","name":"authorization","children":[],"call":["parts join ","parts << "," signature "," signed_headers "," credential_string ","credentials access_key_id "," hex16 "," access_key_id "]}," AWS Core Signature Version4 add_authorization!":{"type":"method","name":"add_authorization!","children":[],"call":[" headers []= "," authorization "," headers "," hexdigest "," body "," headers [] ","credentials session_token "," host ","Time  now utc strftime ","Time  now utc ","Time  now ","signer session_token "," access_key_id= ","signer access_key_id "]}," AWS Core Signature Version4 included":{"type":"method","name":"included","children":[],"call":[]}," AWS Core Signature Version3HTTPS string_to_sign":{"type":"method","name":"string_to_sign","children":[],"call":["Time  now httpdate ","Time  now "," headers [] "," headers ","Time  now rfc822 "]}," AWS Core Signature Version3HTTPS signature":{"type":"method","name":"signature","children":[],"call":["Signer  sign "," string_to_sign ","credentials secret_access_key "]}," AWS Core Signature Version3HTTPS add_authorization!":{"type":"method","name":"add_authorization!","children":[],"call":[" headers []= ","credentials session_token "," headers ","parts join ","parts << "," signature "," access_key_id "," access_key_id= ","credentials access_key_id "]}," AWS Core Signature Version3HTTPS included":{"type":"method","name":"included","children":[],"call":[]}," AWS Core Signature Version3 headers_to_sign":{"type":"method","name":"headers_to_sign","children":[],"call":["header =~ ","header == "," headers keys select "," headers keys "," headers "]}," AWS Core Signature Version3 canonical_headers":{"type":"method","name":"canonical_headers","children":[],"call":["(send\n  (send nil :headers_to_sign) :map) sort join ","(send\n  (send nil :headers_to_sign) :map) sort ","value strip ","name downcase strip ","name downcase "," headers [] "," headers "," headers_to_sign map "," headers_to_sign "," headers []  strip "]}," AWS Core Signature Version3 string_to_sign":{"type":"method","name":"string_to_sign","children":[],"call":["OpenSSL Digest SHA256  digest ","(send nil :http_method) join "," body "," canonical_headers "," http_method "]}," AWS Core Signature Version3 signature":{"type":"method","name":"signature","children":[],"call":["Signer  sign "," string_to_sign ","credentials secret_access_key "]}," AWS Core Signature Version3 add_authorization!":{"type":"method","name":"add_authorization!","children":[],"call":[" headers []= ","AWS3  + + + + "," signature ","AWS3  + + + "," headers_to_sign join "," headers_to_sign ","AWS3  + + ","AWS3  + ","credentials access_key_id "," headers ","credentials session_token "," host "," headers [] ","Time  now httpdate ","Time  now ","signer access_key_id ","signer sign ","OpenSSL Digest SHA256  digest "," string_to_sign ","signer session_token ","signer respond_to? ","Time  now rfc822 "," access_key_id= "," sign ","credentials secret_access_key "," signer sign  "]}," AWS Core Signature Version3 included":{"type":"method","name":"included","children":[],"call":[]}," AWS Core Signature Version2 string_to_sign":{"type":"method","name":"string_to_sign","children":[],"call":["(send nil :http_method) join ","(send\n  (send\n    (send nil :params) :sort) :collect) join ","p encoded "," params sort collect "," params sort "," params "," path ","host to_s downcase ","host to_s "," http_method "," port "," host "]}," AWS Core Signature Version2 signature":{"type":"method","name":"signature","children":[],"call":["Signer  sign "," string_to_sign ","credentials secret_access_key "]}," AWS Core Signature Version2 add_authorization!":{"type":"method","name":"add_authorization!","children":[],"call":[" body= "," url_encoded_params "," add_param "," signature ","credentials session_token ","credentials access_key_id ","signer sign "," string_to_sign ","signer session_token ","signer respond_to? "," access_key_id "," access_key_id= ","signer access_key_id "," sign ","credentials secret_access_key ","credentials session_credentials session_token  ","credentials session_signer session_token  ","signer session_credentials session_token  ","signer session_signer session_token  "]}," AWS Core RESTXMLClient extract_error_details":{"type":"method","name":"extract_error_details","children":[],"call":["error [] ","errors_module GRAMMAR  parse "," errors_module ","response http_response body ","response http_response ","response http_response status >= ","response http_response status ","errors_module GRAMMAR  parse  [] ","errors_module GRAMMAR  parse s_module GRAMMAR  parse "," errors_module GRAMMAR  parse s_module ","response http_response response http_response body  "]}," AWS Core RESTXMLClient response_parser_for":{"type":"method","name":"response_parser_for","children":[],"call":[]}," AWS Core RESTXMLClient request_builder_for":{"type":"method","name":"request_builder_for","children":[],"call":[]}," AWS Core RESTResponseParser simulate":{"type":"method","name":"simulate","children":[],"call":[]}," AWS Core RESTResponseParser extract_data":{"type":"method","name":"extract_data","children":[],"call":["data []= ","(lvar :header) flatten first ","(lvar :header) flatten ","response http_response headers [] ","header_name downcase ","response http_response headers ","response http_response ","(or\n  (send\n    (ivar :@http) :[]\n    (sym :response_headers))\n  (hash)) each_pair ","@http [] ","@parser parse ","response http_response body ","@parser parse  []= ","(lvar :response http_response headers [] ) flatten first ","(lvar :response http_response headers [] ) flatten ","response http_response response http_response headers [] s [] ","response http_response headers [] _name downcase ","response http_response response http_response headers [] s ","(or\n  (send\n    (ivar :@http) :[]\n    (sym :response_response http_response headers [] s))\n  (hash)) each_pair "]}," AWS Core RESTResponseParser initialize":{"type":"method","name":"initialize","children":[],"call":[" raise ","options [] inspect ","options [] ","Core JSONParser  new ","operation [] ","XML Parser  new "]}," AWS Core RESTRequestBuilder streaming_param":{"type":"method","name":"streaming_param","children":[],"call":["@rules [] [] == ","@rules [] [] ","@rules [] ","@http [] "]}," AWS Core RESTRequestBuilder populate_body":{"type":"method","name":"populate_body","children":[],"call":["request body= ","@serializer serialize ","request headers []= ","params [] size ","params [] ","request headers ","request body_stream= "," streaming_param ","params empty? "," size "]}," AWS Core RESTRequestBuilder extract_headers":{"type":"method","name":"extract_headers","children":[],"call":["headers []= ","params [] ","params key? ","(or\n  (send\n    (ivar :@http) :[]\n    (sym :request_headers))\n  (hash)) each_pair ","@http [] ","params delete "]}," AWS Core RESTRequestBuilder extract_uri":{"type":"method","name":"extract_uri","children":[],"call":["uri << ","querystring_parts join ","querystring_parts empty? ","querystring_parts << ","part sub ","UriEscape  escape ","params delete ","param_name to_sym ","part match [] ","part match ","querystring to_s split each ","querystring to_s split ","querystring to_s "," raise ","param_name sub to_sym ","param_name sub ","path gsub ","@http [] split ","@http [] ","param_name [] ","param_name [] to_sym ","UriEscape  escape s delete ","params delete s delete ","UriEscape  escape _name to_sym ","params delete _name to_sym ","part match []  to_sym ","UriEscape  escape _name sub to_sym ","params delete _name sub to_sym ","part match []  sub to_sym ","UriEscape  escape _name sub ","params delete _name sub ","part match []  sub ","UriEscape  escape _name [] ","params delete _name [] ","part match []  [] ","UriEscape  escape _name [] to_sym ","params delete _name [] to_sym ","part match []  [] to_sym "]}," AWS Core RESTRequestBuilder populate_headers":{"type":"method","name":"populate_headers","children":[],"call":["request headers []= ","request headers "," extract_headers each_pair "," extract_headers "]}," AWS Core RESTRequestBuilder populate_uri":{"type":"method","name":"populate_uri","children":[],"call":["request uri= "," extract_uri "]}," AWS Core RESTRequestBuilder populate_method":{"type":"method","name":"populate_method","children":[],"call":["request http_method= ","@http [] "]}," AWS Core RESTRequestBuilder populate_request":{"type":"method","name":"populate_request","children":[],"call":[" populate_body "," populate_headers "," populate_uri "," populate_method ","@validator validate! ","request body= "," build_body ","request headers []= ","request headers "," extract_headers each_pair "," extract_headers ","request uri= "," extract_uri ","request http_method= ","@http [] "]}," AWS Core RESTRequestBuilder initialize":{"type":"method","name":"initialize","children":[],"call":[" raise ","options [] ","Options JSONSerializer  new ","@http [] ","Options XMLSerializer  new ","operation [] ","Options Validator  new ","operation []  [] "]}," AWS Core RESTJSONClient extract_error_details":{"type":"method","name":"extract_error_details","children":[],"call":["json [] "," JSON  load ","response http_response body ","response http_response ","response http_response status >= ","response http_response status ","response http_response response http_response body  "]}," AWS Core RESTJSONClient response_parser_for":{"type":"method","name":"response_parser_for","children":[],"call":[]}," AWS Core RESTJSONClient request_builder_for":{"type":"method","name":"request_builder_for","children":[],"call":[]}," AWS Core Response method_missing":{"type":"method","name":"method_missing","children":[],"call":["Core Data  new send ","Core Data  new "," data "]}," AWS Core Response build_request":{"type":"method","name":"build_request","children":[],"call":["@request_builder call "]}," AWS Core Response safe_to_retry?":{"type":"method","name":"safe_to_retry?","children":[],"call":["@http_request body_stream respond_to? ","@http_request body_stream ","@http_request body_stream nil? "]}," AWS Core Response network_error?":{"type":"method","name":"network_error?","children":[],"call":[" http_response network_error? "," http_response "]}," AWS Core Response []":{"type":"method","name":"[]","children":[],"call":[" data [] "," data "]}," AWS Core Resource Attribute from":{"type":"method","name":"from","children":[],"call":[" name ","@options [] "]}," AWS Core Resource define_attribute_type":{"type":"method","name":"define_attribute_type","children":[],"call":[" class_eval "]}," AWS Core Resource eql?":{"type":"method","name":"eql?","children":[],"call":["other resource_identifiers == "," resource_identifiers ","other resource_identifiers ","other kind_of? "," class "," resource_identifiers == "]}," AWS Core RegionCollection load_data":{"type":"method","name":"load_data","children":[],"call":["JSON  parse ","Net HTTP  get ","http get ","Net HTTP  Proxy ","proxy port ","proxy host ","proxy nil? ","AWS  config proxy_uri ","AWS  config ","Net HTTP  Proxy  get ","AWS  config proxy_uri  port ","AWS  config proxy_uri  host ","AWS  config proxy_uri  nil? ","AWS  config AWS  config proxy_uri _uri "]}," AWS Core RegionCollection data":{"type":"method","name":"data","children":[],"call":[" load_data "]}," AWS Core RegionCollection clear!":{"type":"method","name":"clear!","children":[],"call":[]}," AWS Core RegionCollection public_regions":{"type":"method","name":"public_regions","children":[],"call":["r =~ ","regions reject ","data [] keys ","data [] ","data [] [] ","@service endpoint_prefix "," class data "," class ","@service global_endpoint? ","(send\n  (lvar :regions) :reject) reject ","Endpoints  endpoints ","data [] keys  reject ","data [] []  reject "," class data  [] keys ","Endpoints  endpoints  [] keys "," class data  [] ","Endpoints  endpoints  [] "," class data  [] [] ","Endpoints  endpoints  [] [] "," class  class data  "," class Endpoints  endpoints  ","(send\n  (lvar :data [] keys ) :reject) reject ","(send\n  (lvar :data [] [] ) :reject) reject "]}," AWS Core RegionCollection each":{"type":"method","name":"each","children":[],"call":[" [] "," public_regions each "," public_regions "]}," AWS Core RegionCollection []":{"type":"method","name":"[]","children":[],"call":["Region  new "," config "]}," AWS Core RegionCollection initialize":{"type":"method","name":"initialize","children":[],"call":["options [] ","AWS  config "]}," AWS Core Region initialize":{"type":"method","name":"initialize","children":[],"call":["@config with ","AWS  config ","options [] ","@config with  with "]}," AWS Core QueryResponseParser simulate":{"type":"method","name":"simulate","children":[],"call":["@parser simulate "]}," AWS Core QueryResponseParser extract_data":{"type":"method","name":"extract_data","children":[],"call":["@parser parse ","response http_response body ","response http_response "]}," AWS Core QueryResponseParser initialize":{"type":"method","name":"initialize","children":[],"call":["XML Parser  new "]}," AWS Core QueryRequestBuilder populate_request":{"type":"method","name":"populate_request","children":[],"call":["request body= ","request url_encoded_params ","request add_param ","@grammar request_params each ","@grammar request_params ","request headers []= ","request headers ","Time  now utc strftime ","Time  now utc ","Time  now ","Time  Time  now utc strftime  utc strftime ","Time  Time  now utc strftime  utc ","Time  Time  now utc strftime  "]}," AWS Core QueryRequestBuilder initialize":{"type":"method","name":"initialize","children":[],"call":["OptionGrammar  customize ","operation [] "]}," AWS Core QueryClient extract_error_details":{"type":"method","name":"extract_error_details","children":[],"call":["error [] ","errors_module GRAMMAR  parse "," errors_module ","response http_response body ","response http_response ","response http_response status >= ","response http_response status ","errors_module GRAMMAR  parse  [] ","errors_module GRAMMAR  parse s_module GRAMMAR  parse "," errors_module GRAMMAR  parse s_module ","response http_response response http_response body  "]}," AWS Core QueryClient response_parser_for":{"type":"method","name":"response_parser_for","children":[],"call":[]}," AWS Core QueryClient request_builder_for":{"type":"method","name":"request_builder_for","children":[],"call":[]}," AWS Core Policy Statement excluded_resource_arn":{"type":"method","name":"excluded_resource_arn","children":[],"call":["excluded_resource to_s "]}," AWS Core Policy Statement excluded_resource_arns":{"type":"method","name":"excluded_resource_arns","children":[],"call":[" excluded_resource_arn "," excluded_resources map "," excluded_resources "]}," AWS Core Policy Statement parse_not_resource_option":{"type":"method","name":"parse_not_resource_option","children":[],"call":[" coerce_array_option "]}," AWS Core PageResult more?":{"type":"method","name":"more?","children":[],"call":[" next_token ! ! "," next_token ! "," next_token "]}," AWS Core PageResult last_page?":{"type":"method","name":"last_page?","children":[],"call":[" next_token nil? "," next_token "]}," AWS Core PageResult next_page":{"type":"method","name":"next_page","children":[],"call":[" collection page "," next_token "," per_page "," collection "," raise "," last_page? "]}," AWS Core PageResult initialize":{"type":"method","name":"initialize","children":[],"call":[]}," AWS Core Options XMLSerializer xml_ordered_members":{"type":"method","name":"xml_ordered_members","children":[],"call":["(send\n  (lvar :members) :inject\n  (array)) sort_by map ","(send\n  (lvar :members) :inject\n  (array)) sort_by ","list << ","member [] ","members inject "]}," AWS Core Options XMLSerializer hash_members_xml":{"type":"method","name":"hash_members_xml","children":[],"call":[" to_xml ","rules [] ","hash [] ","hash key? "," xml_ordered_members each "," xml_ordered_members "]}," AWS Core Options XMLSerializer to_xml":{"type":"method","name":"to_xml","children":[],"call":["builder send "," to_xml ","rules [] ","value each "," hash_members_xml ","Inflection  class_name ","opt_name to_s ","opt_name is_a? ","builder tag! ","rules [] [] ","value each_pair ","value [] ","value key? "," xml_ordered_members each "," xml_ordered_members "]}," AWS Core Options XMLSerializer serialize":{"type":"method","name":"serialize","children":[],"call":["xml doc root to_xml ","xml doc root ","xml doc "," hash_members_xml ","xml send "," namespace ","Nokogiri XML Builder  new "," rules "," operation_name "," rules [] [] "," rules [] ","request_options [] "," http [] "," http ","xml join "," to_xml ","request_options each_pair ","builder tag! ","Builder XmlMarkup  new ","Nokogiri XML Builder  new  doc root to_Nokogiri XML Builder  new  ","Nokogiri XML Builder  new  doc root ","Nokogiri XML Builder  new  doc "," hash_members_Nokogiri XML Builder  new  ","Nokogiri XML Builder  new  send ","  rules  ","  rules [] []  ","  rules  [] [] ","  rules [] []  [] [] ","  rules  [] ","  rules [] []  [] ","Nokogiri XML Builder  new  join "," to_Nokogiri XML Builder  new  ","Builder XmlMarkup  new  tag! "]}," AWS Core Options XMLSerializer initialize":{"type":"method","name":"initialize","children":[],"call":["Validator  new "," rules ","operation [] "]}," AWS Core Options Validator format_error":{"type":"method","name":"format_error","children":[],"call":[" raise "]}," AWS Core Options Validator validate_blob":{"type":"method","name":"validate_blob","children":[],"call":[]}," AWS Core Options Validator validate_timestamp":{"type":"method","name":"validate_timestamp","children":[],"call":["value to_s "]}," AWS Core Options Validator validate_integer":{"type":"method","name":"validate_integer","children":[],"call":["value to_int "," format_error ","value respond_to? "]}," AWS Core Options Validator validate_boolean":{"type":"method","name":"validate_boolean","children":[],"call":[" format_error ","(true) include? "]}," AWS Core Options Validator validate_string":{"type":"method","name":"validate_string","children":[],"call":["value to_str ","value to_str sub ","rules [] "," format_error ","value respond_to? "]}," AWS Core Options Validator validate_array":{"type":"method","name":"validate_array","children":[],"call":["values << "," validate_value ","rules [] ","values size ","value each "," format_error ","value respond_to? "]}," AWS Core Options Validator validate_map":{"type":"method","name":"validate_map","children":[],"call":["values []= "," validate_value ","rules [] ","k inspect ","value inject "," format_error ","value respond_to? "]}," AWS Core Options Validator validate_hash":{"type":"method","name":"validate_hash","children":[],"call":[" validate! ","rules [] ","value to_hash "," format_error ","value respond_to? "]}," AWS Core Options Validator validate_value":{"type":"method","name":"validate_value","children":[],"call":[" send ","args first [] ","args first "]}," AWS Core Options Validator validate!":{"type":"method","name":"validate!","children":[],"call":["options merge "," validate_value ","rules [] "," raise ","opt_name inspect ","rules key? ","request_options inject ","request_options key? ","opt_rules [] ","rules each_pair "]}," AWS Core Options Validator initialize":{"type":"method","name":"initialize","children":[],"call":[]}," AWS Core Options JSONSerializer normalize_value":{"type":"method","name":"normalize_value","children":[],"call":["Base64  encode64 strip ","Base64  encode64 ","value read ","h merge "," normalize_value ","rules [] ","value inject ","value map "," normalize_keys "]}," AWS Core Options JSONSerializer normalize_keys":{"type":"method","name":"normalize_keys","children":[],"call":["h merge "," normalize_value ","Inflection  class_name ","k to_s ","child_rules [] ","rules [] ","values inject ","rules []  [] "]}," AWS Core Options JSONSerializer serialize":{"type":"method","name":"serialize","children":[],"call":["JSON  pretty_generate ","data values first ","data values ","v [] == ","v [] "," rules any? "," rules "," normalize_keys ","request_options [] ","data values first  values first "," normalize_keys  values first ","data values first  values "," normalize_keys  values ","request_options []  [] "]}," AWS Core Options JSONSerializer initialize":{"type":"method","name":"initialize","children":[],"call":["rules [] [] ","rules [] "]}," AWS Core OptionGrammar MapOption param_name=":{"type":"method","name":"param_name=","children":[],"call":[]}," AWS Core OptionGrammar MapOption param_name":{"type":"method","name":"param_name","children":[],"call":[" name "]}," AWS Core OptionGrammar ModuleMethods to_json":{"type":"method","name":"to_json","children":[],"call":[" to_h to_json "," to_h "]}," AWS Core OptionGrammar ModuleMethods to_h":{"type":"method","name":"to_h","children":[],"call":["hash []= ","option hash_format ","option name "," option ","name to_s ","options inject "," validate "," option  hash_format "," option  name ","  option  "," option s inject "]}," AWS Core OptionGrammar DefaultOption hash_format":{"type":"method","name":"hash_format","children":[],"call":[]}," AWS Core OptionGrammar Descriptors Bigdecimal hash_format":{"type":"method","name":"hash_format","children":[],"call":[" BigDecimal ","value to_s "]}," AWS Core OptionGrammar Descriptors Bigdecimal validate":{"type":"method","name":"validate","children":[],"call":[" raise "," format_error ","value respond_to? ","value kind_of? "]}," AWS Core OptionGrammar Descriptors Map value_option":{"type":"method","name":"value_option","children":[],"call":["MapOption  new ","options [] "]}," AWS Core OptionGrammar Descriptors Map key_option":{"type":"method","name":"key_option","children":[],"call":["MapOption  new ","options [] "]}," AWS Core OptionGrammar Descriptors Map hash_format":{"type":"method","name":"hash_format","children":[],"call":["hash []= "," value_option hash_format "," value_option "," key_option hash_format "," key_option ","value inject "]}," AWS Core OptionGrammar Descriptors Map request_params":{"type":"method","name":"request_params","children":[],"call":["params << ","Http Request Param  new ","common_prefix + "," value_option param_name "," value_option "," key_option param_name "," key_option "," prefixed_name ","params size / + ","params size / ","params size ","values inject "," separator "," value_option request_params "," key_option request_params "]}," AWS Core OptionGrammar Descriptors Map validate":{"type":"method","name":"validate","children":[],"call":[" value_option validate "," value_option "," key_option validate "," key_option ","value each "," context_description "," raise "," format_error ","value respond_to? ","  context_description _description "]}," AWS Core OptionGrammar Descriptors Map apply":{"type":"method","name":"apply","children":[],"call":[]}," AWS Core OptionGrammar Descriptors Structure hash_format":{"type":"method","name":"hash_format","children":[],"call":["hash []= ","option hash_format ","option name "," member_option ","name to_s ","hash inject "," member_option  hash_format "," member_option  name "," member_ member_option  "]}," AWS Core OptionGrammar Descriptors ListMethods InstanceMethods hash_format":{"type":"method","name":"hash_format","children":[],"call":[" member_option hash_format "," member_option ","value map "]}," AWS Core OptionGrammar Descriptors Float encode_value":{"type":"method","name":"encode_value","children":[],"call":["value to_f to_s ","value to_f "]}," AWS Core OptionGrammar Descriptors Float validate":{"type":"method","name":"validate","children":[],"call":[" raise "," format_error ","value respond_to? ","value kind_of? "]}," AWS Core OptionGrammar Descriptors Position apply":{"type":"method","name":"apply","children":[],"call":[]}," AWS Core OptionGrammar Descriptors Blob hash_format":{"type":"method","name":"hash_format","children":[],"call":["(send\n  (lvar :value) :to_s) pack gsub ","(send\n  (lvar :value) :to_s) pack ","value to_s ","Base64  encode64 strip ","Base64  encode64 ","Base64  strict_encode64 "]}," AWS Core ManagedFile open":{"type":"method","name":"open","children":[],"call":[]}," AWS Core LogFormatter colored":{"type":"method","name":"colored","children":[],"call":["LogFormatter  new ","pattern join + ","pattern join ","pattern << "]}," AWS Core LogFormatter debug":{"type":"method","name":"debug","children":[],"call":["LogFormatter  new ","pattern join + ","pattern join ","pattern << ","uri_pattern join ","sig_pattern join ","+ + ","- * ","uri_pattern << ","sig_pattern << "]}," AWS Core LogFormatter short":{"type":"method","name":"short","children":[],"call":["LogFormatter  new ","pattern join + ","pattern join ","pattern << "]}," AWS Core LogFormatter default":{"type":"method","name":"default","children":[],"call":["LogFormatter  new ","pattern join + ","pattern join ","pattern << "]}," AWS Core LogFormatter summarize_array":{"type":"method","name":"summarize_array","children":[],"call":["[ + + ","[ + ","(send\n  (lvar :array) :map) join "," summarize_value ","array map "]}," AWS Core LogFormatter summarize_file":{"type":"method","name":"summarize_file","children":[],"call":["File  size "]}," AWS Core LogFormatter summarize_string":{"type":"method","name":"summarize_string","children":[],"call":["str inspect ","str size ","str [] inspect ","str [] ","str size > "," max_string_size ","  max_string_size _string_size "]}," AWS Core LogFormatter summarize_value":{"type":"method","name":"summarize_value","children":[],"call":["value inspect "," summarize_file ","value path "," summarize_array ","{ + + ","{ + "," summarize_hash "," summarize_string "]}," AWS Core LogFormatter summarize_hash":{"type":"method","name":"summarize_hash","children":[],"call":["(send\n  (lvar :hash) :map) sort join ","(send\n  (lvar :hash) :map) sort "," summarize_value ","key inspect ","hash map "]}," AWS Core LogFormatter _http_response_body":{"type":"method","name":"_http_response_body","children":[],"call":["response http_response body ","response http_response "]}," AWS Core LogFormatter _http_response_headers":{"type":"method","name":"_http_response_headers","children":[],"call":["response http_response headers inspect ","response http_response headers ","response http_response "]}," AWS Core LogFormatter _http_response_status":{"type":"method","name":"_http_response_status","children":[],"call":["response http_response status ","response http_response "]}," AWS Core LogFormatter _http_request_proxy_uri":{"type":"method","name":"_http_request_proxy_uri","children":[],"call":["response config proxy_uri ","response config ","response http_request proxy_uri ","response http_request "]}," AWS Core LogFormatter _http_request_body":{"type":"method","name":"_http_request_body","children":[],"call":["response http_request body ","response http_request "]}," AWS Core LogFormatter _http_request_headers":{"type":"method","name":"_http_request_headers","children":[],"call":["response http_request headers inspect ","response http_request headers ","response http_request "]}," AWS Core LogFormatter _http_request_uri":{"type":"method","name":"_http_request_uri","children":[],"call":["response http_request uri ","response http_request "]}," AWS Core LogFormatter _http_request_port":{"type":"method","name":"_http_request_port","children":[],"call":["response http_request port ","response http_request "]}," AWS Core LogFormatter _http_request_host":{"type":"method","name":"_http_request_host","children":[],"call":["response http_request host ","response http_request "]}," AWS Core LogFormatter _http_request_protocol":{"type":"method","name":"_http_request_protocol","children":[],"call":["response http_request use_ssl? ","response http_request "]}," AWS Core LogFormatter _http_request_method":{"type":"method","name":"_http_request_method","children":[],"call":["response http_request http_method ","response http_request "]}," AWS Core LogFormatter _error_message":{"type":"method","name":"_error_message","children":[],"call":["response error message ","response error "]}," AWS Core LogFormatter _error_class":{"type":"method","name":"_error_class","children":[],"call":["response error class name ","response error class ","response error "]}," AWS Core LogFormatter _duration":{"type":"method","name":"_duration","children":[],"call":["(send\n  (str \"%.06f\") :%\n  (send\n    (lvar :response) :duration)) sub ","%.06f % ","response duration "]}," AWS Core LogFormatter _retry_count":{"type":"method","name":"_retry_count","children":[],"call":["response retry_count "]}," AWS Core LogFormatter _options":{"type":"method","name":"_options","children":[],"call":[" summarize_hash ","response request_options "]}," AWS Core LogFormatter _operation":{"type":"method","name":"_operation","children":[],"call":["response request_type "]}," AWS Core LogFormatter _region":{"type":"method","name":"_region","children":[],"call":["response http_request region ","response http_request "]}," AWS Core LogFormatter _service":{"type":"method","name":"_service","children":[],"call":["response http_request class name split [] ","response http_request class name split ","response http_request class name ","response http_request class ","response http_request ","response http_request service "]}," AWS Core LogFormatter method_missing":{"type":"method","name":"method_missing","children":[],"call":["method_name to_s [] ","method_name to_s ","method_name to_s chars first == ","method_name to_s chars first ","method_name to_s chars "]}," AWS Core LogFormatter eql?":{"type":"method","name":"eql?","children":[],"call":["other pattern == "," pattern ","other pattern ","other is_a? "," class "]}," AWS Core LogFormatter format":{"type":"method","name":"format","children":[],"call":[" send ","sym [] "," pattern gsub "," pattern "]}," AWS Core LogFormatter initialize":{"type":"method","name":"initialize","children":[],"call":["options [] "]}," AWS Core LazyErrorClasses error_class":{"type":"method","name":"error_class","children":[],"call":[" module_eval ","code gsub gsub ","code gsub "]}," AWS Core LazyErrorClasses const_missing":{"type":"method","name":"const_missing","children":[],"call":[" const_set "," extend ","Class  new "," const_missing_mutex synchronize "," const_missing_mutex "," const_get "," error_const_set? "]}," AWS Core LazyErrorClasses extended":{"type":"method","name":"extended","children":[],"call":[]}," AWS Core JSONResponseParser translate_value":{"type":"method","name":"translate_value","children":[],"call":["BigDecimal  new ","rule [] == ","rule [] ","Time  at ","Base64  decode64 "," translate_map "," translate_hash "," translate_value ","value map ","value is_a? "]}," AWS Core JSONResponseParser translate_map":{"type":"method","name":"translate_map","children":[],"call":["data merge "," translate_value ","rules [] ","values inject "]}," AWS Core JSONResponseParser translate_hash":{"type":"method","name":"translate_hash","children":[],"call":[" translate ","rules [] "]}," AWS Core JSONResponseParser translate":{"type":"method","name":"translate","children":[],"call":["data merge "," translate_value ","values [] ","rule [] ","values key? ","rules inject "]}," AWS Core JSONResponseParser simulate":{"type":"method","name":"simulate","children":[],"call":[]}," AWS Core JSONResponseParser extract_data":{"type":"method","name":"extract_data","children":[],"call":[" translate ","JSON  load ","(nil) include? ","response http_response body ","response http_response ","response http_response response http_response body  "]}," AWS Core JSONResponseParser initialize":{"type":"method","name":"initialize","children":[],"call":[]}," AWS Core JSONRequestBuilder populate_request":{"type":"method","name":"populate_request","children":[],"call":["request body= ","@grammar to_json ","request headers []= ","request headers "]}," AWS Core JSONRequestBuilder initialize":{"type":"method","name":"initialize","children":[],"call":["OptionGrammar  customize ","operation [] ","api [] ","api [] + ","target_prefix + "]}," AWS Core JSONParser translate_value":{"type":"method","name":"translate_value","children":[],"call":["BigDecimal  new ","rule [] == ","rule [] ","Time  at ","Base64  decode64 "," translate_map "," translate_hash "," translate_value ","value map ","value is_a? "]}," AWS Core JSONParser translate_map":{"type":"method","name":"translate_map","children":[],"call":["data merge "," translate_value ","rules [] ","values inject "]}," AWS Core JSONParser translate_hash":{"type":"method","name":"translate_hash","children":[],"call":[" translate ","rules [] "]}," AWS Core JSONParser translate":{"type":"method","name":"translate","children":[],"call":["data merge "," translate_value ","values [] ","rule [] ","values key? ","rules inject ","values [] nil? ! ","values [] nil? "]}," AWS Core JSONParser parse":{"type":"method","name":"parse","children":[],"call":[" translate ","JSON  load ","(nil) include? "]}," AWS Core JSONParser initialize":{"type":"method","name":"initialize","children":[],"call":[]}," AWS Core JSONClient extract_error_details":{"type":"method","name":"extract_error_details","children":[],"call":["json [] ","code == ","type split last ","type split "," JSON  load ","response http_response body ","response http_response ","response http_response status >= ","response http_response status ","matches [] ","type match ","type split last  == ","matches []  == ","json []  split last ","json []  split ","response http_response response http_response body  ","type match  [] ","json []  match "]}," AWS Core JSONClient response_parser_for":{"type":"method","name":"response_parser_for","children":[],"call":[]}," AWS Core JSONClient request_builder_for":{"type":"method","name":"request_builder_for","children":[],"call":[]}," AWS Core Http Response network_error?":{"type":"method","name":"network_error?","children":[],"call":[]}," AWS Core Http Request body_stream":{"type":"method","name":"body_stream","children":[],"call":["StringIO  new "]}," AWS Core Http Request body_stream=":{"type":"method","name":"body_stream=","children":[],"call":[]}," AWS Core Http Request body=":{"type":"method","name":"body=","children":[],"call":[" headers delete "," headers "," headers []= ","body bytesize ","body size "]}," AWS Core Http Request path":{"type":"method","name":"path","children":[],"call":[" uri split [] "," uri split "," uri "]}," AWS Core Http Request port":{"type":"method","name":"port","children":[],"call":[" use_ssl? "]}," AWS Core Http Request endpoint":{"type":"method","name":"endpoint","children":[],"call":[" host "," port "," port == "," use_ssl "]}," AWS Core Http Expect100Continue20 new_transport_request":{"type":"method","name":"new_transport_request","children":[],"call":[" raise ","@socket close ","@socket closed? ! ","@socket closed? "," D ","IDEMPOTENT_METHODS_  include? ","req method ","count == "," block_given? ","res reading_body ","req response_body_permitted? ","res uri= ","req uri ","res decode_content= ","req decode_content ","Net HTTPResponse  read_new ","res kind_of? ","req exec "," edit_path ","req path "," catch "," begin_transport ","Net HTTPResponse  read_new  reading_body ","req Net HTTPResponse  read_new ponse_body_permitted? ","Net HTTPResponse  read_new  uri= ","Net HTTPResponse  read_new  decode_content= ","Net HTTPResponse  read_new  kind_of? "]}," AWS Core Http Expect100Continue19 new_transport_request":{"type":"method","name":"new_transport_request","children":[],"call":[" raise ","@socket close ","@socket closed? ! ","@socket closed? "," D "," end_transport "," block_given? ","res reading_body ","req response_body_permitted? ","Net HTTPResponse  read_new ","res kind_of? ","req exec "," edit_path ","req path "," catch "," begin_transport ","Net HTTPResponse  read_new  reading_body ","req Net HTTPResponse  read_new ponse_body_permitted? ","Net HTTPResponse  read_new  kind_of? "]}," AWS Core Http patch_net_http_100_continue!":{"type":"method","name":"patch_net_http_100_continue!","children":[],"call":[]}," AWS Core Http NetHttpHandler build_net_http_request":{"type":"method","name":"build_net_http_request","children":[],"call":["net_http_req body_stream= ","request body_stream ","request_class new ","request uri "," raise ","request http_method ","headers []= ","value to_s ","request headers each_pair ","request headers ","net_http_req body= ","request body ","request_class new  body_stream= ","request_class new  body= "]}," AWS Core Http NetHttpHandler initialize":{"type":"method","name":"initialize","children":[],"call":["ConnectionPool  new ","options [] ","Net HTTP ConnectionPool  new "]}," AWS Core Http ConnectionPool SessionExtensions finish":{"type":"method","name":"finish","children":[],"call":[]}," AWS Core Http ConnectionPool SessionExtensions last_used":{"type":"method","name":"last_used","children":[],"call":[]}," AWS Core Http ConnectionPool SessionExtensions request":{"type":"method","name":"request","children":[],"call":["Time  now "]}," AWS Core Http ConnectionPool _clean":{"type":"method","name":"_clean","children":[],"call":["session finish ","now - > "," http_idle_timeout ","now - ","session last_used ","session last_used nil? ","sessions delete_if ","@pool each_pair ","Time  now ","Time  now  - > ","Time  now  - ","Time  Time  now  "]}," AWS Core Http ConnectionPool start_session":{"type":"method","name":"start_session","children":[],"call":["http start ","http use_ssl= ","http verify_mode= ","http ca_path= "," ssl_ca_path ","http ca_file= "," ssl_ca_file "," ssl_verify_peer? ","endpoint scheme == ","endpoint scheme ","http open_timeout= "," http_open_timeout ","http set_debug_output "," logger "," http_wire_trace? ","http extend ","Net HTTP  new ","args compact ","args << "," proxy_uri password "," proxy_uri "," proxy_uri user "," proxy_uri port "," proxy_uri host ","endpoint port ","endpoint host ","URI  parse ","URI  decode ","Net HTTP  new  start ","Net HTTP  new  use_ssl= ","Net HTTP  new  verify_mode= ","Net HTTP  new  ca_path= ","Net HTTP  new  ca_file= ","URI  parse  scheme == ","URI  parse  scheme ","Net HTTP  new  open_timeout= "," Net HTTP  new _open_timeout ","Net HTTP  new  set_debug_output "," Net HTTP  new _wire_trace? ","Net HTTP  new  extend ","URI  parse  port ","URI  parse  host "]}," AWS Core Http ConnectionPool pool_options":{"type":"method","name":"pool_options","children":[],"call":["options [] ","URI  parse ","options [] to_s ","options [] ! ! ","options [] ! ","options key? ","Logger  new "]}," AWS Core Http ConnectionPool pools":{"type":"method","name":"pools","children":[],"call":["@pools values ","@pools dup "]}," AWS Core Http ConnectionPool new":{"type":"method","name":"new","children":[],"call":["@pools [] ","@pools_mutex synchronize "," pool_options ","@pools << "," build "," pool_ pool_options  "]}," AWS Core Http ConnectionPool empty!":{"type":"method","name":"empty!","children":[],"call":["@pool clear ","sessions each ","@pool each_pair ","@pool_mutex synchronize "]}," AWS Core Http ConnectionPool clean!":{"type":"method","name":"clean!","children":[],"call":[" _clean ","@pool_mutex synchronize "]}," AWS Core Http ConnectionPool size":{"type":"method","name":"size","children":[],"call":["sessions size ","@pool each_pair ","@pool_mutex synchronize "]}," AWS Core Http ConnectionPool session_for":{"type":"method","name":"session_for","children":[],"call":["@pool [] << ","@pool [] ","@pool_mutex synchronize "," raise ","session finish ","session continue_timeout= "," http_continue_timeout ","session respond_to? ","session read_timeout= "," http_read_timeout "," start_session ","@pool [] shift "," _clean ","endpoint to_s ","@pool [] shift  finish ","@pool [] shift  continue_timeout= ","@pool [] shift  respond_to? ","@pool [] shift  read_timeout= "," start_@pool [] shift  ","endpoint to_s  to_s "]}," AWS Core Http ConnectionPool request":{"type":"method","name":"request","children":[],"call":["http request "," session_for "]}," AWS Core Http ConnectionPool options":{"type":"method","name":"options","children":[],"call":["(send\n  (const nil :OPTIONS) :inject\n  (hash)) freeze ","options []= "," send ","OPTIONS  inject "]}," AWS Core Http ConnectionPool initialize":{"type":"method","name":"initialize","children":[],"call":["pool [] ","pool []= ","Hash  new ","Mutex  new "," instance_variable_set ","options each_pair "]}," AWS Core Deprecations deprecated":{"type":"method","name":"deprecated","children":[],"call":[" send "," warn "," define_method "," alias_method ","msg << ","options [] "," name "]}," AWS Core Data List kind_of?":{"type":"method","name":"kind_of?","children":[],"call":["klass == "]}," AWS Core Data List inject":{"type":"method","name":"inject","children":[],"call":["Data  cast ","@data inject "]}," AWS Core Data List to_ary":{"type":"method","name":"to_ary","children":[],"call":[]}," AWS Core Data List inspect":{"type":"method","name":"inspect","children":[],"call":["@data inspect "]}," AWS Core Data List initialize":{"type":"method","name":"initialize","children":[],"call":[]}," AWS Core Data cast":{"type":"method","name":"cast","children":[],"call":["Data List  new ","Data  new "]}," AWS Core Data _remove_question_mark":{"type":"method","name":"_remove_question_mark","children":[],"call":["method_name sub ","method_name to_s sub to_sym ","method_name to_s sub ","method_name to_s "]}," AWS Core Data kind_of?":{"type":"method","name":"kind_of?","children":[],"call":["klass == "]}," AWS Core Data inspect":{"type":"method","name":"inspect","children":[],"call":["@data inspect "]}," AWS Core Data respond_to?":{"type":"method","name":"respond_to?","children":[],"call":["@data respond_to? ","@data key? "," _remove_question_mark "]}," AWS Core Data to_a":{"type":"method","name":"to_a","children":[],"call":["@data to_a "]}," AWS Core Data to_hash":{"type":"method","name":"to_hash","children":[],"call":[]}," AWS Core Data initialize":{"type":"method","name":"initialize","children":[],"call":[]}," AWS Core Data method_missing":{"type":"method","name":"method_missing","children":[],"call":["Data  cast ","@data [] ","@data has_key? "," _remove_question_mark "," block_given? ! "," block_given? ","args empty? ","@data has_ _remove_question_mark ? "]}," AWS Core Data MethodMissingProxy _data":{"type":"method","name":"_data","children":[],"call":[]}," AWS Core Data MethodMissingProxy method_missing":{"type":"method","name":"method_missing","children":[],"call":["Data  cast ","@data send ","values flatten map ","values flatten "," block_given? "]}," AWS Core Data MethodMissingProxy dup":{"type":"method","name":"dup","children":[],"call":["Data  cast ","@data dup "]}," AWS Core Data MethodMissingProxy eql?":{"type":"method","name":"eql?","children":[],"call":["@data == ","other _data ","other is_a? "]}," AWS Core Data MethodMissingProxy []":{"type":"method","name":"[]","children":[],"call":["Data  cast ","@data [] "]}," AWS Core Data MethodMissingProxy id":{"type":"method","name":"id","children":[],"call":[" id "," [] "]}," AWS Core CredentialProviders FakeProvider random_chars":{"type":"method","name":"random_chars","children":[],"call":["(send\n  (begin\n    (irange\n      (int 1)\n      (lvar :count))) :map) join ","chars [] "," rand ","chars size ","(irange\n  (int 1)\n  (lvar :count)) map ","(irange\n  (str \"0\")\n  (str \"9\")) to_a + + ","(irange\n  (str \"A\")\n  (str \"Z\")) to_a ","(irange\n  (str \"0\")\n  (str \"9\")) to_a + ","(irange\n  (str \"a\")\n  (str \"z\")) to_a ","(irange\n  (str \"0\")\n  (str \"9\")) to_a ","(irange\n  (str \"0\")\n  (str \"9\")) to_a + +  [] ","(irange\n  (str \"0\")\n  (str \"9\")) to_a + +  size "]}," AWS Core CredentialProviders FakeProvider fake_session_token":{"type":"method","name":"fake_session_token","children":[],"call":[" random_chars "]}," AWS Core CredentialProviders FakeProvider fake_secret_access_key":{"type":"method","name":"fake_secret_access_key","children":[],"call":[" random_chars "]}," AWS Core CredentialProviders FakeProvider fake_access_key_id":{"type":"method","name":"fake_access_key_id","children":[],"call":["AKIA + "," random_chars upcase "," random_chars "]}," AWS Core CredentialProviders FakeProvider initialize":{"type":"method","name":"initialize","children":[],"call":[" fake_session_token ","options [] ","options delete "," fake_secret_access_key "," fake_access_key_id "]}," AWS Core CredentialProviders SessionProvider cached_session":{"type":"method","name":"cached_session","children":[],"call":["@session_mutex synchronize "]}," AWS Core CredentialProviders SessionProvider refresh_session":{"type":"method","name":"refresh_session","children":[],"call":["sts new_session ","@session_mutex synchronize ","AWS STS  new ","@static credentials merge ","@static credentials ","AWS STS  new  new_session ","sts new_session _mutex synchronize "]}," AWS Core CredentialProviders SessionProvider get_credentials":{"type":"method","name":"get_credentials","children":[],"call":["session credentials "," cached_session "," refresh_session ","session nil? "," cached_session  credentials "," cached_ cached_session  "," refresh_ cached_session  "," cached_session  nil? "]}," AWS Core CredentialProviders SessionProvider refresh":{"type":"method","name":"refresh","children":[],"call":[" orig_refresh "," refresh_session "]}," AWS Core CredentialProviders SessionProvider initialize":{"type":"method","name":"initialize","children":[],"call":["Mutex  new "," raise ","@static session_token ","StaticProvider  new ","StaticProvider  new  session_token "]}," AWS Core CredentialProviders SessionProvider for":{"type":"method","name":"for","children":[],"call":["@session_providers []= "," new ","long_term_credentials [] ","@create_mutex synchronize "]}," AWS Core CredentialProviders EC2Provider get":{"type":"method","name":"get","children":[],"call":[" raise ","response body ","response code to_i == ","response code to_i ","response code ","session request ","Net HTTP Get  new ","session request  body ","session request  code to_i == ","session request  code to_i ","session request  code "]}," AWS Core CredentialProviders EC2Provider get_credentials":{"type":"method","name":"get_credentials","children":[],"call":["Time  parse ","session [] ","credentials []= ","http finish ","JSON  parse "," get ","path << "," get lines map first "," get lines map "," get lines ","http start ","http set_debug_output "," http_debug_output ","http read_timeout= "," http_read_timeout ","http open_timeout= "," http_open_timeout ","Net HTTP  new "," port "," ip_address ","JSON  parse  [] ","Net HTTP  new  finish ","Net HTTP  new  start ","Net HTTP  new  set_debug_output "," Net HTTP  new _debug_output ","Net HTTP  new  read_timeout= "," Net HTTP  new _read_timeout ","Net HTTP  new  open_timeout= "," Net HTTP  new _open_timeout "]}," AWS Core CredentialProviders EC2Provider credentials":{"type":"method","name":"credentials","children":[],"call":[" refresh ","@credentials_expiration utc <= ","Time  now utc - ","5 * ","Time  now utc ","Time  now ","@credentials_expiration utc ","Time  now utc + ","15 * "]}," AWS Core CredentialProviders EC2Provider initialize":{"type":"method","name":"initialize","children":[],"call":["options [] "]}," AWS Core CredentialProviders ENVProvider get_credentials":{"type":"method","name":"get_credentials","children":[],"call":["credentials []= ","ENV  [] ","key to_s upcase ","key to_s ","KEYS  each ","credentials merge! ","CredentialFileProvider  new get_credentials ","CredentialFileProvider  new ","@suffixes [] "]}," AWS Core CredentialProviders ENVProvider initialize":{"type":"method","name":"initialize","children":[],"call":[]}," AWS Core CredentialProviders StaticProvider get_credentials":{"type":"method","name":"get_credentials","children":[],"call":[]}," AWS Core CredentialProviders StaticProvider initialize":{"type":"method","name":"initialize","children":[],"call":["@static_credentials []= ","static_credentials [] ","KEYS  each "," raise ","opt_name inspect ","KEYS  include? ","static_credentials keys each ","static_credentials keys "]}," AWS Core CredentialProviders DefaultProvider refresh":{"type":"method","name":"refresh","children":[],"call":["provider refresh "," providers each "," providers "]}," AWS Core CredentialProviders DefaultProvider credentials":{"type":"method","name":"credentials","children":[],"call":[" raise ","provider credentials "," providers each "," providers ","provider set? "]}," AWS Core CredentialProviders DefaultProvider initialize":{"type":"method","name":"initialize","children":[],"call":["@providers << ","EC2Provider  new ","ENVProvider  new ","StaticProvider  new ","SharedCredentialFileProvider  new ","Dir  home "]}," AWS Core CredentialProviders Provider get_credentials":{"type":"method","name":"get_credentials","children":[],"call":[" raise "]}," AWS Core CredentialProviders Provider refresh":{"type":"method","name":"refresh","children":[],"call":[]}," AWS Core CredentialProviders Provider session_token":{"type":"method","name":"session_token","children":[],"call":[" credentials [] "," credentials "]}," AWS Core CredentialProviders Provider secret_access_key":{"type":"method","name":"secret_access_key","children":[],"call":[" credentials [] "," credentials "]}," AWS Core CredentialProviders Provider access_key_id":{"type":"method","name":"access_key_id","children":[],"call":[" credentials [] "," credentials "]}," AWS Core CredentialProviders Provider credentials":{"type":"method","name":"credentials","children":[],"call":["@cached_credentials dup "," raise ","creds [] "," get_credentials "," set? "," get_credentials  [] "]}," AWS Core Configuration eql?":{"type":"method","name":"eql?","children":[],"call":[" supplied == ","other supplied "," supplied ","other is_a? "," class "]}," AWS Core Configuration credentials":{"type":"method","name":"credentials","children":[],"call":["credentials []= "," credential_provider send "," credential_provider ","(sym :access_key_id) each "," session_token "," secret_access_key "," access_key_id "]}," AWS Core Collection _limit":{"type":"method","name":"_limit","children":[],"call":[]}," AWS Core Collection _extract_limit":{"type":"method","name":"_extract_limit","children":[],"call":["limit to_i ","limit == "," _limit ","options delete ","limit to_i  to_i ","limit to_i  == "," _limit to_i  "]}," AWS Core Collection _extract_batch_size":{"type":"method","name":"_extract_batch_size","children":[],"call":["batch_size to_i ","batch_size == ","options delete ","batch_size to_i  to_i ","options delete  to_i ","batch_size to_i  == ","options delete  == "]}," AWS Core Collection _extract_next_token":{"type":"method","name":"_extract_next_token","children":[],"call":["next_token == ","options delete ","options delete  == "]}," AWS Core Collection _each_item":{"type":"method","name":"_each_item","children":[],"call":[" raise "]}," AWS Core Collection _each_batch":{"type":"method","name":"_each_batch","children":[],"call":[" raise "]}," AWS Core Collection page":{"type":"method","name":"page","children":[],"call":["Core PageResult  new ","items << "," each ","each_opts []= ","per_page to_i ","(nil) include? ","each_opts delete ","options dup ","options dup  []= ","per_page to_i  to_i ","each_opts delete  to_i ","options dup  delete "]}," AWS Core Collection in_groups_of":{"type":"method","name":"in_groups_of","children":[],"call":["group empty? ","group size == ","group size ","group << ","batch each "," each_batch "]}," AWS Core Collection first":{"type":"method","name":"first","children":[],"call":[" enum first "," enum ","options merge "]}," AWS Core Collection enum":{"type":"method","name":"enum","children":[],"call":[" to_enum ","Enumerator  new "]}," AWS Core Collection each_batch":{"type":"method","name":"each_batch","children":[],"call":[" _each_batch ","options dup "," raise "]}," AWS Core Collection each":{"type":"method","name":"each","children":[],"call":["batch each "," each_batch "]}," AWS Core Collection WithNextToken _extract_next_token":{"type":"method","name":"_extract_next_token","children":[],"call":["next_token [] "]}," AWS Core Collection WithNextToken _each_batch":{"type":"method","name":"_each_batch","children":[],"call":["next_token nil? ","batch << ","simulated_next_token []= ","offset + ","collected < ","skipped < "," _each_item ","options dup ","limit == "," _extract_next_token "," _extract_limit "," _extract_limit  == "," _extract_ _extract_limit  "]}," AWS Core Collection WithLimitAndNextToken _each_batch":{"type":"method","name":"_each_batch","children":[],"call":["batch << "," _each_item ","options dup ","max min ","max << ","limit - ","limit == ","next_token nil? "," _extract_next_token "," _extract_batch_size "," _extract_limit ","max min  min ","max min  << "," _extract_limit  - "," _extract_limit  == "," _extract_next_token  nil? "," _extract_ _extract_next_token  "," _extract_ _extract_batch_size  "," _extract_ _extract_limit  "]}," AWS Core Collection Simple _each_batch":{"type":"method","name":"_each_batch","children":[],"call":["batch << ","batch size < ","batch size ","skipped < "," _each_item ","options dup ","next_token to_i - ","next_token to_i "," _extract_next_token "," _extract_limit "," _extract_next_token  to_i - "," _extract_next_token  to_i "," _extract_ _extract_next_token  "," _extract_ _extract_limit  "]}," AWS Core Client define_client_method":{"type":"method","name":"define_client_method","children":[],"call":["response data= ","parser simulate "," simulate_response ","parser extract_data "," process_response ","builder populate_request "," configure_request "," add_client_request_method "," response_parsers []= "," response_parsers "," request_builders []= "," request_builders "]}," AWS Core Client define_client_methods":{"type":"method","name":"define_client_methods","children":[],"call":[" define_client_method ","operation [] "," response_parser_for "," request_builder_for ","api_config [] each ","api_config [] "," load_api_config "," const_set "," response_ response_parser_for _for "," request_ request_builder_for _for "," load_api_config  [] each "," load_api_config  [] "," load_ load_api_config  "]}," AWS Core Client load_api_config":{"type":"method","name":"load_api_config","children":[],"call":["YAML  load ","File  read "," service_name ","File  dirname "]}," AWS Core Client response_parser_for":{"type":"method","name":"response_parser_for","children":[],"call":[" raise "]}," AWS Core Client request_builder_for":{"type":"method","name":"request_builder_for","children":[],"call":[" raise "]}," AWS Core Client response_parsers":{"type":"method","name":"response_parsers","children":[],"call":[]}," AWS Core Client request_builders":{"type":"method","name":"request_builders","children":[],"call":[]}," AWS Core Client operations":{"type":"method","name":"operations","children":[],"call":[" class operations "," class "," client_class operations "," client_class "," name match "," name "]}," AWS Core Client cacheable_request?":{"type":"method","name":"cacheable_request?","children":[],"call":[" class CACHEABLE_REQUESTS  include? "," class "]}," AWS Core Client errors_module":{"type":"method","name":"errors_module","children":[],"call":["AWS  const_get "," class to_s [] "," class to_s "," class "]}," AWS Core Client error_class":{"type":"method","name":"error_class","children":[],"call":[" errors_module error_class "," errors_module "]}," AWS Core Client extract_error_details":{"type":"method","name":"extract_error_details","children":[],"call":[" raise "]}," AWS Core Client log_response":{"type":"method","name":"log_response","children":[],"call":[" config logger send "," config log_level "," config "," config logger "," config log_formatter format "," config log_formatter "]}," AWS Core Client log_client_request":{"type":"method","name":"log_client_request","children":[],"call":[" log_response ","response on_complete ","options [] ","response duration= ","Time  now - ","Time  now "," config logger "," config "]}," AWS Core Client redirected?":{"type":"method","name":"redirected?","children":[],"call":["response http_response status == ","response http_response status ","response http_response "]}," AWS Core Client throttled?":{"type":"method","name":"throttled?","children":[],"call":["response error code == ","response error code ","response error ","response error code to_s match ","response error code to_s ","response error respond_to? "]}," AWS Core Client expired_credentials?":{"type":"method","name":"expired_credentials?","children":[],"call":["response error code == ","response error code ","response error ","response error code to_s match ","response error code to_s ","response error respond_to? "]}," AWS Core Client retryable_error?":{"type":"method","name":"retryable_error?","children":[],"call":["response error kind_of? ","response error "," redirected? "," throttled? ","response network_error? "," expired_credentials? ","response throttled? "]}," AWS Core Client rebuild_http_request":{"type":"method","name":"rebuild_http_request","children":[],"call":["response retry_count ","response http_request uri= ","loc path ","response http_request ","response http_request port= ","loc port ","response http_request host= ","loc host ","AWS Core MetaUtils  extend_method ","URI  parse ","response http_response headers [] first ","response http_response headers [] ","response http_response headers ","response http_response "," redirected? ","response rebuild_request "," credential_provider refresh "," credential_provider "," expired_credentials? ","URI  parse  path ","URI  parse  port ","URI  parse  host "]}," AWS Core Client log_warning":{"type":"method","name":"log_warning","children":[],"call":["$stderr puts "," config logger warn "," config logger "," config ","[aws-sdk-gem-warning]  + "]}," AWS CloudWatch metrics":{"type":"method","name":"metrics","children":[],"call":["MetricCollection  new ","options merge "," config "]}," AWS CloudWatch alarm_history_items":{"type":"method","name":"alarm_history_items","children":[],"call":["AlarmHistoryItemCollection  new "," config "]}," AWS CloudWatch alarms":{"type":"method","name":"alarms","children":[],"call":["AlarmCollection  new "," config "]}," AWS CloudWatch put_metric_data":{"type":"method","name":"put_metric_data","children":[],"call":[" client put_metric_data "," client "]}," AWS CloudWatch MetricStatistics _each_item":{"type":"method","name":"_each_item","children":[],"call":[" datapoints each "," datapoints "]}," AWS CloudWatch MetricStatistics initialize":{"type":"method","name":"initialize","children":[],"call":[]}," AWS CloudWatch MetricCollection _each_item":{"type":"method","name":"_each_item","children":[],"call":["resp data [] ","resp data ","Metric  new_from ","details merge "," config ","details [] ","resp data [] each "," client list_metrics "," client ","options []= ","@filters merge "," client list_metrics  data [] "," client list_metrics  data "," client list_metrics  data [] each "," client list_Metric  new_from s ","@filters merge  []= "]}," AWS CloudWatch MetricCollection with_dimensions":{"type":"method","name":"with_dimensions","children":[],"call":[" filter ","dimensions flatten ","@filters [] ","(or\n  (send\n    (ivar :@filters) :[]\n    (sym :dimensions))\n  (array)) + "]}," AWS CloudWatch MetricCollection with_dimension":{"type":"method","name":"with_dimension","children":[],"call":[" with_dimensions "]}," AWS CloudWatch MetricCollection with_metric_name":{"type":"method","name":"with_metric_name","children":[],"call":[" filter "]}," AWS CloudWatch MetricCollection with_namespace":{"type":"method","name":"with_namespace","children":[],"call":[" filter "]}," AWS CloudWatch MetricCollection filter":{"type":"method","name":"filter","children":[],"call":["MetricCollection  new "," config ","@filters merge ","name to_s to_sym ","name to_s ","@@filters merge  merge "]}," AWS CloudWatch MetricCollection initialize":{"type":"method","name":"initialize","children":[],"call":["options [] "]}," AWS CloudWatch MetricAlarmCollection _each_item":{"type":"method","name":"_each_item","children":[],"call":["resp data [] ","resp data ","Alarm  new_from "," config ","details [] ","resp data [] each "," client describe_alarms_for_metric "," client ","options []= "," metric dimensions "," metric "," metric dimensions empty? "," metric metric_name "," metric namespace ","@filters merge "," client describe_alarms_for_metric  data [] "," client describe_alarms_for_metric  data "," client describe_alarms_for_metric  data [] each "," client describe_Alarm  new_from s_for_metric ","@filters merge  []= "]}," AWS CloudWatch MetricAlarmCollection with_unit":{"type":"method","name":"with_unit","children":[],"call":[" filter "]}," AWS CloudWatch MetricAlarmCollection with_statistic":{"type":"method","name":"with_statistic","children":[],"call":[" filter "]}," AWS CloudWatch MetricAlarmCollection with_period":{"type":"method","name":"with_period","children":[],"call":[" filter "]}," AWS CloudWatch MetricAlarmCollection filter":{"type":"method","name":"filter","children":[],"call":["MetricAlarmCollection  new "," metric ","@filters merge ","name to_s to_sym ","name to_s ","@@filters merge  merge "]}," AWS CloudWatch MetricAlarmCollection create":{"type":"method","name":"create","children":[],"call":["options []= "," metric dimensions "," metric "," metric dimensions empty? "," metric metric_name "," metric namespace "]}," AWS CloudWatch MetricAlarmCollection []":{"type":"method","name":"[]","children":[],"call":["Alarm  new ","options []= "," config "," metric dimensions "," metric "," metric dimensions empty? "," metric name "," metric namespace "]}," AWS CloudWatch MetricAlarmCollection initialize":{"type":"method","name":"initialize","children":[],"call":["options merge ","metric config "]}," AWS CloudWatch Metric get_resource":{"type":"method","name":"get_resource","children":[],"call":[" client list_metrics "," resource_options "," client "]}," AWS CloudWatch Metric resource_identifiers":{"type":"method","name":"resource_identifiers","children":[],"call":[" dimensions "," metric_name "," namespace "]}," AWS CloudWatch Metric exists?":{"type":"method","name":"exists?","children":[],"call":[" get_resource data [] empty? ! "," get_resource data [] empty? "," get_resource data [] "," get_resource data "," get_resource "]}," AWS CloudWatch Metric statistics":{"type":"method","name":"statistics","children":[],"call":["MetricStatistics  new ","resp [] "," client get_metric_statistics "," client ","options [] ","options []= ","stop iso8601 ","stop respond_to? ","start iso8601 ","start respond_to? "," dimensions "," dimensions empty? "," metric_name "," namespace ","options delete "," client get_metric_statistics  [] ","options delete  iso8601 ","stop  client get_metric_statistics ond_to? ","options delete  respond_to? ","start  client get_metric_statistics ond_to? "]}," AWS CloudWatch Metric put_data":{"type":"method","name":"put_data","children":[],"call":[" client put_metric_data "," client ","options []= ","data merge ","metric_data flatten map ","metric_data flatten "," namespace ","metric_opts []= "," dimensions "," dimensions empty? "," metric_name "]}," AWS CloudWatch Metric alarms":{"type":"method","name":"alarms","children":[],"call":["MetricAlarmCollection  new "," config "]}," AWS CloudWatch Metric initialize":{"type":"method","name":"initialize","children":[],"call":["options [] "]}," AWS CloudWatch AlarmHistoryItemCollection _each_item":{"type":"method","name":"_each_item","children":[],"call":["resp data [] ","resp data ","AlarmHistoryItem  new ","resp data [] each "," client describe_alarm_history "," client ","options []= ","@filters merge "," client describe_alarm_history  data [] "," client describe_alarm_history  data "," client describe_alarm_history  data [] each ","@filters merge  []= "]}," AWS CloudWatch AlarmHistoryItemCollection with_type":{"type":"method","name":"with_type","children":[],"call":[" filter "]}," AWS CloudWatch AlarmHistoryItemCollection with_end_date":{"type":"method","name":"with_end_date","children":[],"call":[" filter ","date iso8601 ","date respond_to? ","date iso8601  iso8601 ","date iso8601  respond_to? "]}," AWS CloudWatch AlarmHistoryItemCollection with_start_date":{"type":"method","name":"with_start_date","children":[],"call":[" filter ","date iso8601 ","date respond_to? ","date iso8601  iso8601 ","date iso8601  respond_to? "]}," AWS CloudWatch AlarmHistoryItemCollection with_alarm_name":{"type":"method","name":"with_alarm_name","children":[],"call":[" filter "]}," AWS CloudWatch AlarmHistoryItemCollection filter":{"type":"method","name":"filter","children":[],"call":["AlarmHistoryItemCollection  new "," config ","@filters merge ","name to_s to_sym ","name to_s ","@@filters merge  merge "]}," AWS CloudWatch AlarmHistoryItemCollection initialize":{"type":"method","name":"initialize","children":[],"call":["options [] "]}," AWS CloudWatch AlarmHistoryItem initialize":{"type":"method","name":"initialize","children":[],"call":["options [] "]}," AWS CloudWatch AlarmCollection _each_item":{"type":"method","name":"_each_item","children":[],"call":["resp data [] ","resp data ","Alarm  new_from "," config ","details [] ","resp data [] each "," client describe_alarms "," client ","options []= ","@filters merge "," client describe_alarms  data [] "," client describe_alarms  data "," client describe_alarms  data [] each "," client describe_Alarm  new_from s ","@filters merge  []= "]}," AWS CloudWatch AlarmCollection with_state_value":{"type":"method","name":"with_state_value","children":[],"call":[" filter "]}," AWS CloudWatch AlarmCollection with_name":{"type":"method","name":"with_name","children":[],"call":[" filter ","names flatten "]}," AWS CloudWatch AlarmCollection with_name_prefix":{"type":"method","name":"with_name_prefix","children":[],"call":[" filter "]}," AWS CloudWatch AlarmCollection with_action_prefix":{"type":"method","name":"with_action_prefix","children":[],"call":[" filter "]}," AWS CloudWatch AlarmCollection filter":{"type":"method","name":"filter","children":[],"call":["AlarmCollection  new "," config ","@filters merge ","name to_s to_sym ","name to_s ","@@filters merge  merge "]}," AWS CloudWatch AlarmCollection delete":{"type":"method","name":"delete","children":[],"call":[" client delete_alarms ","alarm_names flatten "," client "]}," AWS CloudWatch AlarmCollection create":{"type":"method","name":"create","children":[],"call":[" [] "," client put_metric_alarm "," client ","options []= "]}," AWS CloudWatch AlarmCollection []":{"type":"method","name":"[]","children":[],"call":["Alarm  new "," config "]}," AWS CloudWatch AlarmCollection initialize":{"type":"method","name":"initialize","children":[],"call":["options [] "]}," AWS CloudWatch Alarm get_resource":{"type":"method","name":"get_resource","children":[],"call":[" client describe_alarms "," alarm_name "," client "]}," AWS CloudWatch Alarm resource_identifiers":{"type":"method","name":"resource_identifiers","children":[],"call":[" alarm_name "]}," AWS CloudWatch Alarm set_state":{"type":"method","name":"set_state","children":[],"call":[" client set_alarm_state "," client ","options []= "," alarm_name "]}," AWS CloudWatch Alarm history_items":{"type":"method","name":"history_items","children":[],"call":["AlarmHistoryItemCollection  new with_alarm_name "," name ","AlarmHistoryItemCollection  new "," config "]}," AWS CloudWatch Alarm exists?":{"type":"method","name":"exists?","children":[],"call":[" get_resource data [] empty? ! "," get_resource data [] empty? "," get_resource data [] "," get_resource data "," get_resource "]}," AWS CloudWatch Alarm enable":{"type":"method","name":"enable","children":[],"call":[" client enable_alarm_actions "," alarm_name "," client "]}," AWS CloudWatch Alarm disable":{"type":"method","name":"disable","children":[],"call":[" client disable_alarm_actions "," alarm_name "," client "]}," AWS CloudWatch Alarm delete":{"type":"method","name":"delete","children":[],"call":[" client delete_alarms "," alarm_name "," client "]}," AWS CloudWatch Alarm update":{"type":"method","name":"update","children":[],"call":[" client put_metric_alarm "," client ","options []= "," alarm_name "]}," AWS CloudWatch Alarm metric":{"type":"method","name":"metric","children":[],"call":["Metric  new "," metric_name "," namespace ","options []= "," config "," dimensions "," dimensions empty? "]}," AWS CloudWatch Alarm initialize":{"type":"method","name":"initialize","children":[],"call":[]}," AWS CloudFront Request string_to_sign":{"type":"method","name":"string_to_sign","children":[],"call":["Time  now httpdate ","Time  now "," headers [] "," headers ","Time  now rfc822 "]}," AWS CloudFront Request signature":{"type":"method","name":"signature","children":[],"call":["Core Signer  sign "," string_to_sign ","credentials secret_access_key "]}," AWS CloudFront Request add_authorization!":{"type":"method","name":"add_authorization!","children":[],"call":[" headers []= "," headers "," signature "," access_key_id ","credentials session_token "," access_key_id= ","credentials access_key_id "]}," AWS CloudFormation estimate_template_cost":{"type":"method","name":"estimate_template_cost","children":[],"call":[" client estimate_template_cost url "," client estimate_template_cost "," client "," apply_parameters "," apply_template ","client_opts []= "]}," AWS CloudFormation validate_template":{"type":"method","name":"validate_template","children":[],"call":["results []= ","e message ","e code "," client validate_template data "," client validate_template "," client "," apply_template ","client_opts []= ","resp parameters collect ","resp parameters ","resp respond_to? ","resp send ","(sym :capabilities) each "," client validate_template  parameters collect "," client validate_template  parameters "," client validate_template   client validate_template ond_to? "," client validate_template  send "]}," AWS CloudFormation stack_resource":{"type":"method","name":"stack_resource","children":[],"call":["StackResource  new_from ","details logical_resource_id ","Stack  new "," config ","details stack_name ","response stack_resources first ","response stack_resources "," client describe_stack_resources "," client ","client_opts []= ","args [] ","args first ","args size == ","args size ","response stack_resources first  logical_resource_id ","response stack_resources first  stack_name "," client describe_stack_resources  stack_resources first "," client describe_stack_resources  stack_resources "]}," AWS CloudFormation stack_summaries":{"type":"method","name":"stack_summaries","children":[],"call":["StackSummaryCollection  new "," config "]}," AWS CloudFormation stacks":{"type":"method","name":"stacks","children":[],"call":["StackCollection  new "," config "]}," AWS CloudFormation StackSummaryCollection _each_item":{"type":"method","name":"_each_item","children":[],"call":["resp data [] ","resp data ","resp data [] each "," client list_stacks "," client ","options []= ","resp next_token ","resp respond_to? ","summary to_hash ","resp stack_summaries each ","resp stack_summaries ","client_opts []= "," client list_stacks  data [] "," client list_stacks  data "," client list_stacks  data [] each "," client list_stacks  next_token ","resp resp next_token  ","resp resp data []  "," client list_stacks   client list_stacks ond_to? "," client list_stacks  stack_summaries each "," client list_stacks  stack_summaries "]}," AWS CloudFormation StackSummaryCollection with_status":{"type":"method","name":"with_status","children":[],"call":["StackSummaryCollection  new "," config ","status_filters flatten map map ","status_filters flatten map ","status_filters flatten "]}," AWS CloudFormation StackSummaryCollection initialize":{"type":"method","name":"initialize","children":[],"call":["options [] "]}," AWS CloudFormation StackResourceSummaryCollection _each_item":{"type":"method","name":"_each_item","children":[],"call":["resp data [] ","resp data ","resp data [] each "," client list_stack_resources "," client ","options []= "," stack name "," stack ","resp next_token ","resp respond_to? ","summary to_hash ","resp stack_resource_summaries each ","resp stack_resource_summaries "," client list_stack_resources  data [] "," client list_stack_resources  data "," client list_stack_resources  data [] each "," client list_stack_resources  next_token ","resp resp next_token  ","resp resp data []  "," client list_stack_resources   client list_stack_resources ond_to? "," client list_stack_resources  stack_resource_summaries each "," client list_stack_resources  stack_resource_summaries "]}," AWS CloudFormation StackResourceSummaryCollection initialize":{"type":"method","name":"initialize","children":[],"call":[]}," AWS CloudFormation StackResourceCollection _each_item":{"type":"method","name":"_each_item","children":[],"call":["StackResource  new_from ","details logical_resource_id ","response stack_resources each ","response stack_resources "," client describe_stack_resources "," client ","options []= "," stack name "," stack ","response StackResource  new_from s each "," client describe_stack_resources  stack_resources each ","response StackResource  new_from s "," client describe_stack_resources  stack_resources "," client describe_StackResource  new_from s "]}," AWS CloudFormation StackResourceCollection []":{"type":"method","name":"[]","children":[],"call":["StackResource  new "," stack "]}," AWS CloudFormation StackResourceCollection initialize":{"type":"method","name":"initialize","children":[],"call":[]}," AWS CloudFormation StackResource get_resource":{"type":"method","name":"get_resource","children":[],"call":[" client describe_stack_resource "," resource_options "," client "]}," AWS CloudFormation StackResource resource_identifiers":{"type":"method","name":"resource_identifiers","children":[],"call":[" logical_resource_id "," stack name "," stack "]}," AWS CloudFormation StackResource initialize":{"type":"method","name":"initialize","children":[],"call":[]}," AWS CloudFormation StackOutput eql?":{"type":"method","name":"eql?","children":[],"call":["other description == "," description ","other description ","other value == "," value ","other value ","other key == "," key ","other key ","other stack == "," stack ","other stack ","other is_a? "]}," AWS CloudFormation StackOutput initialize":{"type":"method","name":"initialize","children":[],"call":[]}," AWS CloudFormation StackOptions apply_timeout":{"type":"method","name":"apply_timeout","children":[],"call":["options []= ","options delete "]}," AWS CloudFormation StackOptions apply_parameters":{"type":"method","name":"apply_parameters","children":[],"call":["options []= ","list << ","key to_s ","params inject ","params is_a? ","options [] ","options []  inject ","options []  is_a? "]}," AWS CloudFormation StackOptions apply_notification_arns":{"type":"method","name":"apply_notification_arns","children":[],"call":["options []= ","topic arn ","topic is_a? "," Array collect "," Array ","options delete "]}," AWS CloudFormation StackOptions apply_disable_rollback":{"type":"method","name":"apply_disable_rollback","children":[],"call":["options []= ","options [] == ","options [] "]}," AWS CloudFormation StackOptions apply_template":{"type":"method","name":"apply_template","children":[],"call":["opts []= ","template to_json ","template read ","template to_s ","template match ","opts delete ","opts delete  to_json ","opts delete  read ","opts delete  to_s ","opts delete  match "]}," AWS CloudFormation StackOptions apply_stack_name":{"type":"method","name":"apply_stack_name","children":[],"call":["options []= "]}," AWS CloudFormation StackEventCollection _each_item":{"type":"method","name":"_each_item","children":[],"call":["StackEvent  new "," stack ","resp data [] each ","resp data [] ","resp data "," client describe_stack_events "," client ","options []= "," stack name ","details to_hash ","resp stack_events each ","resp stack_events "," client describe_stack_events  data [] each "," client describe_stack_events  data [] "," client describe_stack_events  data "," client describe_stack_StackEvent  new s ","resp stack_StackEvent  new s each "," client describe_stack_events  stack_events each ","resp stack_StackEvent  new s "," client describe_stack_events  stack_events "]}," AWS CloudFormation StackEventCollection initialize":{"type":"method","name":"initialize","children":[],"call":[]}," AWS CloudFormation StackEvent initialize":{"type":"method","name":"initialize","children":[],"call":[" instance_variable_set ","details each_pair "]}," AWS CloudFormation StackCollection _each_item":{"type":"method","name":"_each_item","children":[],"call":["resp [] ","Stack  new_from "," config ","summary [] ","resp [] each "," client describe_stacks "," client ","options []= "," client list_stacks ","@status_filters empty? ","data [] "," client send ","summary stack_name "," client describe_stacks stacks each "," client describe_stacks stacks "," client describe_stacks data [] each "," client describe_stacks data [] "," client describe_stacks data "," client describe_stacks  [] "," client list_stacks  [] "," client send  [] "," client describe_stacks  [] each "," client list_stacks  [] each "," client send  [] each "," client describe_Stack  new_from s "," client list_Stack  new_from s ","summary Stack  new_from _name "," client describe_Stack  new_from s Stack  new_from s each "," client describe_Stack  new_from s Stack  new_from s "," client describe_Stack  new_from s data [] each "," client describe_Stack  new_from s data [] "," client describe_Stack  new_from s data "]}," AWS CloudFormation StackCollection with_status":{"type":"method","name":"with_status","children":[],"call":["StackCollection  new "," config ","@status_filters + ","status_filter to_s upcase ","status_filter to_s ","status_filters flatten map map ","status_filters flatten map ","status_filters flatten ","@status_@status_filters +  + ","status_@status_filters +  flatten map map ","status_@status_filters +  flatten map ","status_@status_filters +  flatten "]}," AWS CloudFormation StackCollection []":{"type":"method","name":"[]","children":[],"call":["Stack  new "," config "]}," AWS CloudFormation StackCollection create":{"type":"method","name":"create","children":[],"call":["Stack  new ","resp stack_id "," config "," client create_stack "," client "," apply_timeout "," apply_parameters "," apply_notification_arns "," apply_disable_rollback "," apply_template "," apply_stack_name ","client_opts []= ","options dup "," client create_stack  stack_id ","options dup  []= "]}," AWS CloudFormation StackCollection initialize":{"type":"method","name":"initialize","children":[],"call":["options [] "]}," AWS CloudFormation Stack get_resource":{"type":"method","name":"get_resource","children":[],"call":[" client describe_stacks "," resource_options "," client "," client get_template ","attribute name == ","attribute name "]}," AWS CloudFormation Stack resource_identifiers":{"type":"method","name":"resource_identifiers","children":[],"call":[" name "]}," AWS CloudFormation Stack exists?":{"type":"method","name":"exists?","children":[],"call":[" client describe_stacks "," resource_options "," client "]}," AWS CloudFormation Stack delete":{"type":"method","name":"delete","children":[],"call":[" client delete_stack "," name "," client "]}," AWS CloudFormation Stack estimate_template_cost":{"type":"method","name":"estimate_template_cost","children":[],"call":["cloud_formation estimate_template_cost "," parameters "," template ","CloudFormation  new "," config ","CloudFormation  new  estimate_template_cost "]}," AWS CloudFormation Stack update":{"type":"method","name":"update","children":[],"call":[" client update_stack "," client "," apply_parameters "," apply_template "," apply_stack_name "," name ","options dup "]}," AWS CloudFormation Stack resource_summaries":{"type":"method","name":"resource_summaries","children":[],"call":["StackResourceSummaryCollection  new "]}," AWS CloudFormation Stack resources":{"type":"method","name":"resources","children":[],"call":["StackResourceCollection  new "]}," AWS CloudFormation Stack events":{"type":"method","name":"events","children":[],"call":["StackEventCollection  new "]}," AWS CloudFormation Stack outputs":{"type":"method","name":"outputs","children":[],"call":["StackOutput  new ","o values_at "," output_details collect "," output_details ","o description ","o output_value ","o output_key "]}," AWS CloudFormation Stack initialize":{"type":"method","name":"initialize","children":[],"call":[]}," AWS CloudFormation Request service":{"type":"method","name":"service","children":[],"call":[]}," AWS AutoScaling metric_collection_granularities":{"type":"method","name":"metric_collection_granularities","children":[],"call":[" client describe_metric_collection_types granularities map "," client describe_metric_collection_types granularities "," client describe_metric_collection_types "," client "]}," AWS AutoScaling metric_collection_types":{"type":"method","name":"metric_collection_types","children":[],"call":[" client describe_metric_collection_types metrics map "," client describe_metric_collection_types metrics "," client describe_metric_collection_types "," client "]}," AWS AutoScaling scaling_process_types":{"type":"method","name":"scaling_process_types","children":[],"call":[" client describe_scaling_process_types processes map "," client describe_scaling_process_types processes "," client describe_scaling_process_types "," client "]}," AWS AutoScaling adjustment_types":{"type":"method","name":"adjustment_types","children":[],"call":[" client describe_adjustment_types adjustment_types map "," client describe_adjustment_types adjustment_types "," client describe_adjustment_types "," client "]}," AWS AutoScaling notification_types":{"type":"method","name":"notification_types","children":[],"call":["resp auto_scaling_notification_types "," client describe_auto_scaling_notification_types "," client "," client describe_auto_scaling_notification_types  auto_scaling_notification_types "]}," AWS AutoScaling scheduled_actions":{"type":"method","name":"scheduled_actions","children":[],"call":["ScheduledActionCollection  new "," config "]}," AWS AutoScaling activities":{"type":"method","name":"activities","children":[],"call":["ActivityCollection  new "," config "]}," AWS AutoScaling instances":{"type":"method","name":"instances","children":[],"call":["InstanceCollection  new "," config "]}," AWS AutoScaling notification_configurations":{"type":"method","name":"notification_configurations","children":[],"call":["NotificationConfigurationCollection  new "," config "]}," AWS AutoScaling tags":{"type":"method","name":"tags","children":[],"call":["TagCollection  new "," config "]}," AWS AutoScaling groups":{"type":"method","name":"groups","children":[],"call":["GroupCollection  new "," config "]}," AWS AutoScaling launch_configurations":{"type":"method","name":"launch_configurations","children":[],"call":["LaunchConfigurationCollection  new "," config "]}," AWS AutoScaling TagCollection _each_item":{"type":"method","name":"_each_item","children":[],"call":["resp data [] ","resp data ","Tag  new ","tag to_hash merge "," config ","tag to_hash ","resp tags each ","resp tags "," client describe_tags "," client ","options []= ","@filters empty? ","resp next_token ","resp respond_to? "," client describe_tags  data [] "," client describe_tags  data "," client describe_tags  tags each "," client describe_tags  tags "," client describe_tags  next_token "," client describe_tags   client describe_tags ond_to? "]}," AWS AutoScaling TagCollection filter":{"type":"method","name":"filter","children":[],"call":["TagCollection  new "," config ","@filters + ","values flatten map ","values flatten ","name to_s gsub ","name to_s ","values flatten map  flatten map ","values flatten map  flatten ","name to_s gsub  to_s gsub ","name to_s gsub  to_s "]}," AWS AutoScaling TagCollection initialize":{"type":"method","name":"initialize","children":[],"call":["options delete "]}," AWS AutoScaling Tag delete":{"type":"method","name":"delete","children":[],"call":[" resource delete_tags "," resource "]}," AWS AutoScaling Tag resource":{"type":"method","name":"resource","children":[],"call":[]}," AWS AutoScaling Tag initialize":{"type":"method","name":"initialize","children":[],"call":[" merge! "," raise ","options [] ","Group  new ","options delete "]}," AWS AutoScaling ScheduledActionCollection _each_item":{"type":"method","name":"_each_item","children":[],"call":["resp data [] ","resp data ","ScheduledAction  new_from "," config ","details scheduled_action_name ","resp scheduled_update_group_actions each ","resp scheduled_update_group_actions "," client describe_scheduled_actions ","options merge "," client ","options []= ","Group  new ","details [] ","resp next_token ","resp respond_to? "," client describe_scheduled_actions  data [] "," client describe_scheduled_actions  data ","details ScheduledAction  new_from _name "," client describe_scheduled_actions  scheduled_update_group_actions each ","resp scheduled_update_Group  new _actions each "," client describe_scheduled_actions  scheduled_update_group_actions ","resp scheduled_update_Group  new _actions "," client describe_ScheduledAction  new_from s "," client describe_scheduled_actions  next_token "," client describe_scheduled_actions   client describe_scheduled_actions ond_to? "]}," AWS AutoScaling ScheduledActionCollection filter_opts":{"type":"method","name":"filter_opts","children":[],"call":["opts []= ","options [] iso8601 ","options [] ","options [] is_a? ","(sym :end_time) each ","g name ","g is_a? ","options []  name ","options []  is_a? "]}," AWS AutoScaling ScheduledActionCollection auto_scaling_group_name_opt":{"type":"method","name":"auto_scaling_group_name_opt","children":[],"call":[" raise ","group name ","group is_a? ","@filters [] ","options delete ","group name  name ","options delete  name ","group name  is_a? ","options delete  is_a? "]}," AWS AutoScaling ScheduledActionCollection filter":{"type":"method","name":"filter","children":[],"call":["ScheduledActionCollection  new ","init_opts [] merge! "," filter_opts ","init_opts [] ","init_opts []= "," config "]}," AWS AutoScaling ScheduledActionCollection []":{"type":"method","name":"[]","children":[],"call":["ScheduledAction  new ","options []= ","@filters [] "," config "," raise ","uou must filter this collection by a group to get a  + ","Group  new ","uou must filter this collection by a @filters []  to get a  + ","uou must filter this collection by a Group  new  to get a  + "]}," AWS AutoScaling ScheduledActionCollection create":{"type":"method","name":"create","children":[],"call":["scheduled_action update ","ScheduledAction  new "," config "," auto_scaling_group_name_opt ","group name "," auto_scaling_group ","ScheduledAction  new  update "," auto_scaling_ auto_scaling_group _name_opt "," auto_scaling_group  name "," auto_scaling_ auto_scaling_group  "]}," AWS AutoScaling ScheduledActionCollection initialize":{"type":"method","name":"initialize","children":[],"call":["options [] "]}," AWS AutoScaling ScheduledAction get_resource":{"type":"method","name":"get_resource","children":[],"call":[" client describe_scheduled_actions "," client ","client_opts []= "," name "," auto_scaling_group_name "]}," AWS AutoScaling ScheduledAction resource_identifiers":{"type":"method","name":"resource_identifiers","children":[],"call":[" name "," auto_scaling_group_name "]}," AWS AutoScaling ScheduledAction delete":{"type":"method","name":"delete","children":[],"call":[" client delete_scheduled_action "," client ","client_opts []= "," auto_scaling_group_name "," name "," resource_options "]}," AWS AutoScaling ScheduledAction exists?":{"type":"method","name":"exists?","children":[],"call":["resp scheduled_update_group_actions empty? ! ","resp scheduled_update_group_actions empty? ","resp scheduled_update_group_actions "," client describe_scheduled_actions "," client ","client_opts []= "," name "," auto_scaling_group_name "," client describe_scheduled_actions  scheduled_update_group_actions empty? ! "," client describe_scheduled_actions  scheduled_update_group_actions empty? "," client describe_scheduled_actions  scheduled_update_group_actions "]}," AWS AutoScaling ScheduledAction update":{"type":"method","name":"update","children":[],"call":[" client put_scheduled_update_group_action "," client ","client_opts []= ","client_opts [] iso8601 ","client_opts [] ","client_opts [] is_a? ","(sym :start_time) each "," auto_scaling_group_name "," name ","options dup ","options []= ","options [] iso8601 ","options [] ","options [] is_a? ","options update "," resource_options ","options dup  []= ","options dup  [] iso8601 ","options dup  [] ","options dup  [] is_a? "]}," AWS AutoScaling ScheduledAction group":{"type":"method","name":"group","children":[],"call":["Group  new "," config "," auto_scaling_group_name "]}," AWS AutoScaling ScheduledAction initialize":{"type":"method","name":"initialize","children":[],"call":[]}," AWS AutoScaling ScalingPolicyOptions scaling_policy_options":{"type":"method","name":"scaling_policy_options","children":[],"call":["opts []= ","options [] ","options key? ","(sym :cooldown) each ","auto_scaling_group name "]}," AWS AutoScaling ScalingPolicyCollection _each_item":{"type":"method","name":"_each_item","children":[],"call":["resp data [] ","resp data ","ScalingPolicy  new_from ","details policy_name "," group ","resp scaling_policies each ","resp scaling_policies "," client describe_policies "," client ","options []= "," group name ","resp next_token ","resp respond_to? "," client describe_policies  data [] "," client describe_policies  data "," client describe_policies  scaling_policies each "," client describe_policies  scaling_policies "," client describe_policies  next_token "," client describe_policies   client describe_policies ond_to? "]}," AWS AutoScaling ScalingPolicyCollection []":{"type":"method","name":"[]","children":[],"call":["ScalingPolicy  new "," group "]}," AWS AutoScaling ScalingPolicyCollection create":{"type":"method","name":"create","children":[],"call":["scaling_policy put "," [] "," []  put "]}," AWS AutoScaling ScalingPolicyCollection initialize":{"type":"method","name":"initialize","children":[],"call":[]}," AWS AutoScaling ScalingPolicy resource_identifiers":{"type":"method","name":"resource_identifiers","children":[],"call":[" name "," group "]}," AWS AutoScaling ScalingPolicy get_resource":{"type":"method","name":"get_resource","children":[],"call":[" client describe_policies "," client ","client_opts []= "," name "," group name "," group "]}," AWS AutoScaling ScalingPolicy exists?":{"type":"method","name":"exists?","children":[],"call":["resp scaling_policies empty? ! ","resp scaling_policies empty? ","resp scaling_policies "," client describe_policies "," client ","client_opts []= "," name "," group name "," group "," client describe_policies  scaling_policies empty? ! "," client describe_policies  scaling_policies empty? "," client describe_policies  scaling_policies "]}," AWS AutoScaling ScalingPolicy delete":{"type":"method","name":"delete","children":[],"call":[" client delete_policy "," client ","client_opts []= "," name "," group name "," group "]}," AWS AutoScaling ScalingPolicy execute":{"type":"method","name":"execute","children":[],"call":[" client execute_policy "," client ","client_opts []= ","options [] == ","options [] "," name "," group name "," group "]}," AWS AutoScaling ScalingPolicy update":{"type":"method","name":"update","children":[],"call":[" static_attributes []= ","resp policy_arn "," static_attributes "," client put_scaling_policy "," client "," scaling_policy_options "," name "," group "," client put_scaling_policy  policy_arn "]}," AWS AutoScaling ScalingPolicy initialize":{"type":"method","name":"initialize","children":[],"call":[]}," AWS AutoScaling Request service":{"type":"method","name":"service","children":[],"call":[]}," AWS AutoScaling NotificationConfigurationCollection each":{"type":"method","name":"each","children":[],"call":["NotificationConfiguration  new ","Group  new "," config ","topics each_pair ","groups each_pair ","resp data [] ","resp data ","groups [] [] << ","c notification_type ","groups [] [] ","c topic_arn ","groups [] ","c auto_scaling_group_name ","resp notification_configurations each ","resp notification_configurations "," client describe_notification_configurations "," client ","client_opts []= ","@group name ","resp next_token ","resp respond_to? "," client describe_notification_configurations  data [] "," client describe_notification_configurations  data ","c auto_scaling_c auto_scaling_group_name  ","resp NotificationConfiguration  new urations each "," client describe_notification_configurations  notification_configurations each ","resp NotificationConfiguration  new urations "," client describe_notification_configurations  notification_configurations "," client describe_NotificationConfiguration  new urations ","resp resp data []  ","resp resp next_token  "," client describe_notification_configurations  next_token "," client describe_notification_configurations   client describe_notification_configurations ond_to? "]}," AWS AutoScaling NotificationConfigurationCollection create":{"type":"method","name":"create","children":[],"call":["notification_config notification_types= ","NotificationConfiguration  new ","AutoScaling  new notification_types ","AutoScaling  new "," config ","options [] "," raise ","Group  new ","group is_a? ","options [] arn ","options [] is_a? ","NotificationConfiguration  new  notification_types= ","notification_config notification_AutoScaling  new notification_types = ","notification_config notification_options [] = ","AutoScaling  new notification_AutoScaling  new notification_types  ","AutoScaling  new notification_options []  ","Group  new  is_a? ","options []  is_a? "]}," AWS AutoScaling NotificationConfigurationCollection initialize":{"type":"method","name":"initialize","children":[],"call":["options [] "]}," AWS AutoScaling NotificationConfiguration eql?":{"type":"method","name":"eql?","children":[],"call":["other notification_types == "," notification_types ","other notification_types ","other topic_arn == "," topic_arn ","other topic_arn ","other group == "," group ","other group ","other is_a? "]}," AWS AutoScaling NotificationConfiguration delete":{"type":"method","name":"delete","children":[],"call":[" group client delete_notification_configuration "," group client "," group ","client_opts []= "," topic_arn "," group name "]}," AWS AutoScaling NotificationConfiguration notification_types=":{"type":"method","name":"notification_types=","children":[],"call":["notification_types flatten "," group client put_notification_configuration "," group client "," group ","client_opts []= "," group name "," topic_arn "]}," AWS AutoScaling NotificationConfiguration topic":{"type":"method","name":"topic","children":[],"call":["SNS Topic  new "," group config "," group "," topic_arn "]}," AWS AutoScaling NotificationConfiguration initialize":{"type":"method","name":"initialize","children":[],"call":[]}," AWS AutoScaling LaunchConfigurationCollection user_data_opt":{"type":"method","name":"user_data_opt","children":[],"call":["Base64  encode64 ","options [] "]}," AWS AutoScaling LaunchConfigurationCollection security_groups_opt":{"type":"method","name":"security_groups_opt","children":[],"call":["sg id ","sg is_a? ","options [] collect ","options [] "]}," AWS AutoScaling LaunchConfigurationCollection key_name_opt":{"type":"method","name":"key_name_opt","children":[],"call":["key_pair name ","key_pair is_a? ","options [] ","options []  name ","options []  is_a? "]}," AWS AutoScaling LaunchConfigurationCollection instance_monitoring_opt":{"type":"method","name":"instance_monitoring_opt","children":[],"call":["options [] == ","options [] "]}," AWS AutoScaling LaunchConfigurationCollection image_id_opt":{"type":"method","name":"image_id_opt","children":[],"call":["image image_id ","image is_a? "]}," AWS AutoScaling LaunchConfigurationCollection _each_item":{"type":"method","name":"_each_item","children":[],"call":["resp data [] ","resp data ","LaunchConfiguration  new_from "," config ","details launch_configuration_name ","resp launch_configurations each ","resp launch_configurations "," client describe_launch_configurations "," client ","options []= ","resp next_token ","resp respond_to? "," client describe_launch_configurations  data [] "," client describe_launch_configurations  data ","details LaunchConfiguration  new_from _name ","resp LaunchConfiguration  new_from s each "," client describe_launch_configurations  launch_configurations each ","resp LaunchConfiguration  new_from s "," client describe_launch_configurations  launch_configurations "," client describe_LaunchConfiguration  new_from s "," client describe_launch_configurations  next_token "," client describe_launch_configurations   client describe_launch_configurations ond_to? "]}," AWS AutoScaling LaunchConfigurationCollection []":{"type":"method","name":"[]","children":[],"call":["LaunchConfiguration  new "," config "]}," AWS AutoScaling LaunchConfigurationCollection create":{"type":"method","name":"create","children":[],"call":["LaunchConfiguration  new "," config ","client_opts [] "," client create_launch_configuration "," client ","client_opts []= ","options [] ","options key? ","(sym :iam_instance_profile) each "," user_data_opt "," security_groups_opt "," key_name_opt "," instance_monitoring_opt "," image_id_opt "]}," AWS AutoScaling LaunchConfiguration get_resource":{"type":"method","name":"get_resource","children":[],"call":[" client describe_launch_configurations "," client ","client_opts []= "," name "]}," AWS AutoScaling LaunchConfiguration resource_identifiers":{"type":"method","name":"resource_identifiers","children":[],"call":[" name "]}," AWS AutoScaling LaunchConfiguration delete":{"type":"method","name":"delete","children":[],"call":[" client delete_launch_configuration "," resource_options "," client "]}," AWS AutoScaling LaunchConfiguration exists?":{"type":"method","name":"exists?","children":[],"call":[" get_resource launch_configurations first ! ! "," get_resource launch_configurations first ! "," get_resource launch_configurations first "," get_resource launch_configurations "," get_resource "]}," AWS AutoScaling LaunchConfiguration security_groups":{"type":"method","name":"security_groups","children":[],"call":["ec2 security_groups filter to_a ","ec2 security_groups filter ","ec2 security_groups ","EC2  new "," config ","EC2 SecurityGroup  new ","names_or_ids collect ","str match ","names_or_ids all? "," security_group_details ","EC2  new  security_groups filter to_a ","EC2  new  security_groups filter ","EC2  new  security_groups "," security_group_details  collect "," security_group_details  all? "]}," AWS AutoScaling LaunchConfiguration key_pair":{"type":"method","name":"key_pair","children":[],"call":["EC2 KeyPair  new "," config "," key_name "]}," AWS AutoScaling LaunchConfiguration image":{"type":"method","name":"image","children":[],"call":["EC2 Image  new "," config "," image_id "]}," AWS AutoScaling LaunchConfiguration initialize":{"type":"method","name":"initialize","children":[],"call":["options merge "]}," AWS AutoScaling InstanceCollection _each_item":{"type":"method","name":"_each_item","children":[],"call":["resp data [] ","resp data ","Instance  new_from "," config ","details instance_id ","resp auto_scaling_instances each ","resp auto_scaling_instances "," client describe_auto_scaling_instances "," client ","options []= ","resp next_token ","resp respond_to? "," client describe_auto_scaling_instances  data [] "," client describe_auto_scaling_instances  data ","details Instance  new_from _id ","resp auto_scaling_Instance  new_from s each "," client describe_auto_scaling_instances  auto_scaling_instances each ","resp auto_scaling_Instance  new_from s "," client describe_auto_scaling_instances  auto_scaling_instances "," client describe_auto_scaling_Instance  new_from s "," client describe_auto_scaling_instances  next_token "," client describe_auto_scaling_instances   client describe_auto_scaling_instances ond_to? "]}," AWS AutoScaling InstanceCollection []":{"type":"method","name":"[]","children":[],"call":["Instance  new "," config "]}," AWS AutoScaling Instance get_resource":{"type":"method","name":"get_resource","children":[],"call":[" client describe_auto_scaling_instances "," client ","client_opts []= "," instance_id "]}," AWS AutoScaling Instance resource_identifiers":{"type":"method","name":"resource_identifiers","children":[],"call":[" instance_id "]}," AWS AutoScaling Instance terminate":{"type":"method","name":"terminate","children":[],"call":["Activity  new_from "," config ","resp activity activity_id ","resp activity "," client terminate_instance_in_auto_scaling_group "," client ","client_opts []= "," instance_id "," client terminate_instance_in_auto_scaling_group  activity activity_id "," client terminate_instance_in_auto_scaling_group  activity "]}," AWS AutoScaling Instance exists?":{"type":"method","name":"exists?","children":[],"call":[" get_resource auto_scaling_instances empty? ! "," get_resource auto_scaling_instances empty? "," get_resource auto_scaling_instances "," get_resource "]}," AWS AutoScaling Instance set_health":{"type":"method","name":"set_health","children":[],"call":[" client set_instance_health "," client ","client_opts []= ","options [] == ","options [] "," instance_id "]}," AWS AutoScaling Instance launch_configuration":{"type":"method","name":"launch_configuration","children":[],"call":["LaunchConfiguration  new "," config "," launch_configuration_name "]}," AWS AutoScaling Instance availability_zone":{"type":"method","name":"availability_zone","children":[],"call":["EC2 AvailabilityZone  new "," config "," availability_zone_name "]}," AWS AutoScaling Instance auto_scaling_group":{"type":"method","name":"auto_scaling_group","children":[],"call":["Group  new "," config "," auto_scaling_group_name "]}," AWS AutoScaling Instance ec2_instance":{"type":"method","name":"ec2_instance","children":[],"call":["EC2 Instance  new "," config "," instance_id "]}," AWS AutoScaling Instance initialize":{"type":"method","name":"initialize","children":[],"call":[]}," AWS AutoScaling GroupOptions tags_opt":{"type":"method","name":"tags_opt","children":[],"call":["tag []= ","tag key? ","options [] map each ","options [] map ","options [] "]}," AWS AutoScaling GroupOptions health_check_type_opt":{"type":"method","name":"health_check_type_opt","children":[],"call":["options [] to_s upcase ","options [] to_s ","options [] "]}," AWS AutoScaling GroupOptions subnets_opt":{"type":"method","name":"subnets_opt","children":[],"call":["(send\n  (send\n    (lvar :options) :[]\n    (sym :subnets)) :collect) join ","subnet id ","subnet is_a? ","options [] collect ","options [] "]}," AWS AutoScaling GroupOptions load_balancers_opt":{"type":"method","name":"load_balancers_opt","children":[],"call":["lb name ","lb is_a? ","options [] collect ","options [] "]}," AWS AutoScaling GroupOptions az_opt":{"type":"method","name":"az_opt","children":[],"call":["zone name ","zone is_a? ","zones map ","options [] ","options []  map "]}," AWS AutoScaling GroupOptions launch_config_opt":{"type":"method","name":"launch_config_opt","children":[],"call":["lc name ","lc is_a? ","options [] ","options []  name ","options []  is_a? "]}," AWS AutoScaling GroupOptions group_options":{"type":"method","name":"group_options","children":[],"call":["group_opts []= ","options [] ","options key? ","(sym :min_size) each "," tags_opt "," health_check_type_opt "," subnets_opt "," az_opt "," launch_config_opt "]}," AWS AutoScaling GroupCollection _each_item":{"type":"method","name":"_each_item","children":[],"call":["resp data [] ","resp data ","Group  new_from "," config ","details auto_scaling_group_name ","resp auto_scaling_groups each ","resp auto_scaling_groups "," client describe_auto_scaling_groups "," client ","options []= ","resp next_token ","resp respond_to? "," client describe_auto_scaling_groups  data [] "," client describe_auto_scaling_groups  data ","details auto_scaling_Group  new_from _name ","resp auto_scaling_Group  new_from s each "," client describe_auto_scaling_groups  auto_scaling_groups each ","resp auto_scaling_Group  new_from s "," client describe_auto_scaling_groups  auto_scaling_groups "," client describe_auto_scaling_Group  new_from s "," client describe_auto_scaling_groups  next_token "," client describe_auto_scaling_groups   client describe_auto_scaling_groups ond_to? "]}," AWS AutoScaling GroupCollection []":{"type":"method","name":"[]","children":[],"call":["Group  new "," config "]}," AWS AutoScaling GroupCollection create":{"type":"method","name":"create","children":[],"call":[" [] "," client create_auto_scaling_group "," client ","group_opts []= ","balancer name ","balancer is_a? ","balancers collect ","options [] "," group_options "," raise "," group_options  []= ","options []  collect "]}," AWS AutoScaling Group get_resource":{"type":"method","name":"get_resource","children":[],"call":[" client describe_auto_scaling_groups "," name "," client "]}," AWS AutoScaling Group resource_identifiers":{"type":"method","name":"resource_identifiers","children":[],"call":[" name "]}," AWS AutoScaling Group exists?":{"type":"method","name":"exists?","children":[],"call":["resp auto_scaling_groups empty? ! ","resp auto_scaling_groups empty? ","resp auto_scaling_groups "," client describe_auto_scaling_groups "," client ","client_opts []= "," name "," client describe_auto_scaling_groups  auto_scaling_groups empty? ! "," client describe_auto_scaling_groups  auto_scaling_groups empty? "," client describe_auto_scaling_groups  auto_scaling_groups "]}," AWS AutoScaling Group delete!":{"type":"method","name":"delete!","children":[],"call":[" delete "]}," AWS AutoScaling Group delete":{"type":"method","name":"delete","children":[],"call":[" client delete_auto_scaling_group "," client ","client_opts []= "," name ","options [] == ","options [] "]}," AWS AutoScaling Group delete_all_tags":{"type":"method","name":"delete_all_tags","children":[],"call":[" delete_tags "," tags "]}," AWS AutoScaling Group delete_tags":{"type":"method","name":"delete_tags","children":[],"call":[" client delete_tags "," client ","tag to_hash merge "," name ","tag to_hash ","tags flatten collect ","tags flatten "]}," AWS AutoScaling Group update":{"type":"method","name":"update","children":[],"call":[" client update_auto_scaling_group "," client ","group_opts merge "," name ","group_opts empty? "," client create_or_update_tags ","tag []= ","tags map each ","tags map ","group_opts delete "," group_options "," group_options  merge "," group_options  empty? "," client create_or_update_group_opts delete  ","group_opts delete  map each ","group_opts delete  map "," group_options  delete "]}," AWS AutoScaling Group disable_all_metrics_collection":{"type":"method","name":"disable_all_metrics_collection","children":[],"call":[" disable_metrics_collection "]}," AWS AutoScaling Group disable_metrics_collection":{"type":"method","name":"disable_metrics_collection","children":[],"call":[" client disable_metrics_collection "," client ","client_opts []= ","metrics flatten "," name "]}," AWS AutoScaling Group enable_all_metrics_collection":{"type":"method","name":"enable_all_metrics_collection","children":[],"call":[" enable_metrics_collection "]}," AWS AutoScaling Group enable_metrics_collection":{"type":"method","name":"enable_metrics_collection","children":[],"call":[" client enable_metrics_collection "," client ","client_opts []= ","metrics flatten "," name "]}," AWS AutoScaling Group resume_all_processes":{"type":"method","name":"resume_all_processes","children":[],"call":[" resume_processes "]}," AWS AutoScaling Group resume_processes":{"type":"method","name":"resume_processes","children":[],"call":[" client resume_processes "," client ","client_opts []= ","processes flatten "," name "]}," AWS AutoScaling Group suspend_all_processes":{"type":"method","name":"suspend_all_processes","children":[],"call":[" suspend_processes "]}," AWS AutoScaling Group suspend_processes":{"type":"method","name":"suspend_processes","children":[],"call":[" client suspend_processes "," client ","client_opts []= ","processes flatten "," name "]}," AWS AutoScaling Group set_desired_capacity":{"type":"method","name":"set_desired_capacity","children":[],"call":[" client set_desired_capacity "," client ","client_opts []= ","options [] == ","options [] "," name "]}," AWS AutoScaling Group load_balancers":{"type":"method","name":"load_balancers","children":[],"call":["ELB LoadBalancer  new "," config "," load_balancer_names collect "," load_balancer_names "]}," AWS AutoScaling Group availability_zones":{"type":"method","name":"availability_zones","children":[],"call":["EC2 AvailabilityZone  new "," config "," availability_zone_names collect "," availability_zone_names "]}," AWS AutoScaling Group subnets":{"type":"method","name":"subnets","children":[],"call":["EC2 Subnet  new "," config "," vpc_zone_identifier to_s split collect "," vpc_zone_identifier to_s split "," vpc_zone_identifier to_s "," vpc_zone_identifier "]}," AWS AutoScaling Group ec2_instances":{"type":"method","name":"ec2_instances","children":[],"call":["instances tagged tagged_values "," name ","instances tagged ","EC2 InstanceCollection  new "," config ","instances filter ","EC2 InstanceCollection  new  tagged tagged_values ","EC2 InstanceCollection  new  tagged ","EC2 InstanceCollection  new  filter "]}," AWS AutoScaling Group auto_scaling_instances":{"type":"method","name":"auto_scaling_instances","children":[],"call":["Instance  new_from "," config "," name ","details instance_id "," instances collect "," instances "]}," AWS AutoScaling Group activities":{"type":"method","name":"activities","children":[],"call":["ActivityCollection  new "]}," AWS AutoScaling Group launch_configuration":{"type":"method","name":"launch_configuration","children":[],"call":["LaunchConfiguration  new "," config "," launch_configuration_name "]}," AWS AutoScaling Group tags":{"type":"method","name":"tags","children":[],"call":["Tag  new ","tag to_hash merge "," config ","tag to_hash "," tag_details collect "," tag_details "]}," AWS AutoScaling Group scheduled_actions":{"type":"method","name":"scheduled_actions","children":[],"call":["actions filter ","ScheduledActionCollection  new "," config ","ScheduledActionCollection  new  filter "]}," AWS AutoScaling Group notification_configurations":{"type":"method","name":"notification_configurations","children":[],"call":["NotificationConfigurationCollection  new "]}," AWS AutoScaling Group scaling_policies":{"type":"method","name":"scaling_policies","children":[],"call":["ScalingPolicyCollection  new "]}," AWS AutoScaling Group initialize":{"type":"method","name":"initialize","children":[],"call":[]}," AWS AutoScaling ActivityCollection _each_item":{"type":"method","name":"_each_item","children":[],"call":["resp data [] ","resp data ","Activity  new_from "," config ","details activity_id ","resp activities each ","resp activities "," client describe_scaling_activities "," client ","options []= ","@group name ","resp next_token ","resp respond_to? "," client describe_scaling_activities  data [] "," client describe_scaling_activities  data ","details Activity  new_from _id "," client describe_scaling_activities  activities each "," client describe_scaling_activities  activities "," client describe_scaling_activities  next_token "," client describe_scaling_activities   client describe_scaling_activities ond_to? "]}," AWS AutoScaling ActivityCollection []":{"type":"method","name":"[]","children":[],"call":["Activity  new "," config "]}," AWS AutoScaling ActivityCollection initialize":{"type":"method","name":"initialize","children":[],"call":["options [] "]}," AWS AutoScaling Activity resource_identifiers":{"type":"method","name":"resource_identifiers","children":[],"call":[" activity_id "]}," AWS AutoScaling Activity get_resource":{"type":"method","name":"get_resource","children":[],"call":[" client describe_scaling_activities "," client ","client_opts []= "," activity_id "]}," AWS AutoScaling Activity exists?":{"type":"method","name":"exists?","children":[],"call":["resp activities empty? ! ","resp activities empty? ","resp activities "," client describe_scaling_activities "," client ","client_opts []= "," activity_id "," client describe_scaling_activities  activities empty? ! "," client describe_scaling_activities  activities empty? "," client describe_scaling_activities  activities "]}," AWS AutoScaling Activity group":{"type":"method","name":"group","children":[],"call":["Group  new "," config "," auto_scaling_group_name "]}," AWS AutoScaling Activity initialize":{"type":"method","name":"initialize","children":[],"call":[]}," AWS RDS Request service":{"type":"method","name":"service","children":[],"call":[]}," AWS SimpleEmailService settings":{"type":"method","name":"settings","children":[],"call":[]}," AWS SNS Request service":{"type":"method","name":"service","children":[],"call":[]}," AWS S3 Client empty_response_body?":{"type":"method","name":"empty_response_body?","children":[],"call":["response_body == ","response_body nil? "]}," AWS SNS FromAutoScaling instance_id":{"type":"method","name":"instance_id","children":[],"call":[" body [] "," body "]}," AWS SNS FromAutoScaling status_code":{"type":"method","name":"status_code","children":[],"call":[" body [] "," body "]}," AWS SNS FromAutoScaling group_name":{"type":"method","name":"group_name","children":[],"call":[" body [] "," body "]}," AWS SNS FromAutoScaling event":{"type":"method","name":"event","children":[],"call":["e =~ "," body [] "," body "," body []  =~ "]}," AWS SNS FromAutoScaling body":{"type":"method","name":"body","children":[],"call":[" parse_from "," raw [] "," raw "]}," AWS SNS FromAutoScaling applicable?":{"type":"method","name":"applicable?","children":[],"call":["sns [] =~ ","sns [] "]}," AWS SNS FromAutoScaling extended":{"type":"method","name":"extended","children":[],"call":[]}," AWS SNS Message https_get":{"type":"method","name":"https_get","children":[],"call":["http finish ","http request ","Net HTTP Get  new ","uri request_uri ","http start ","http verify_mode= ","http use_ssl= ","Net HTTP  new ","uri port ","uri host ","URI  parse ","Net HTTP  new  finish ","Net HTTP  new  request ","URI  parse  request_URI  parse  ","Net HTTP  new  start ","Net HTTP  new  verify_mode= ","Net HTTP  new  use_ssl= ","URI  parse  port ","URI  parse  host "]}," AWS SNS Message download":{"type":"method","name":"download","children":[],"call":[" raise ","tries < ","resp body "," https_get ","url =~ ","File  extname == ","File  extname ","uri path ","uri host match ","uri host ","uri scheme == ","uri scheme ","URI  parse "," https_get  body ","URI  parse  path ","URI  parse  host match ","URI  parse  host ","URI  parse  scheme == ","URI  parse  scheme "]}," AWS SNS Message canonical_string":{"type":"method","name":"canonical_string","children":[],"call":[" type "," topic_arn "," timestamp "," subject "," subject empty? "," subject nil? "," message_id "," message ","text << << ","text << ","value empty? ","value nil? ","@raw [] ","SIGNABLE_KEYS  each ","@raw []  empty? ","@raw []  nil? "]}," AWS SNS Message get_public_key_from":{"type":"method","name":"get_public_key_from","children":[],"call":["OpenSSL PKey RSA  new ","x509 public_key ","OpenSSL X509 Certificate  new "," download ","OpenSSL X509 Certificate  new  public_key "]}," AWS SNS Message decode":{"type":"method","name":"decode","children":[],"call":["Base64  decode64 "]}," AWS SNS Message parse_from":{"type":"method","name":"parse_from","children":[],"call":["JSON  parse "]}," AWS SNS Message unsubscribe_url":{"type":"method","name":"unsubscribe_url","children":[],"call":["@raw [] "]}," AWS SNS Message signing_cert_url":{"type":"method","name":"signing_cert_url","children":[],"call":["@raw [] "]}," AWS SNS Message signature_version":{"type":"method","name":"signature_version","children":[],"call":["@raw [] "]}," AWS SNS Message signature":{"type":"method","name":"signature","children":[],"call":["@raw [] "]}," AWS SNS Message timestamp":{"type":"method","name":"timestamp","children":[],"call":["@raw [] "]}," AWS SNS Message message":{"type":"method","name":"message","children":[],"call":["@raw [] "]}," AWS SNS Message subject":{"type":"method","name":"subject","children":[],"call":["@raw [] "]}," AWS SNS Message topic_arn":{"type":"method","name":"topic_arn","children":[],"call":["@raw [] "]}," AWS SNS Message message_id":{"type":"method","name":"message_id","children":[],"call":["@raw [] "]}," AWS SNS Message type":{"type":"method","name":"type","children":[],"call":["@raw [] =~ ","@raw [] "]}," AWS SNS Message authentic?":{"type":"method","name":"authentic?","children":[],"call":["public_key verify "," canonical_string ","OpenSSL Digest SHA1  new "," get_public_key_from "," signing_cert_url "," decode "," signature "," get_public_key_from  verify "," get_ get_public_key_from _from "]}," AWS SNS Message []":{"type":"method","name":"[]","children":[],"call":["@raw [] "]}," AWS SNS Message initialize":{"type":"method","name":"initialize","children":[],"call":[" extend ","FromAutoScaling  applicable? "," parse_from ","sns is_a? "]}," AWS S3 Client failed_multipart_upload?":{"type":"method","name":"failed_multipart_upload?","children":[],"call":[" extract_error_details ","response request_type == ","response request_type "]}," AWS Route53 ResourceRecordSet health_check_id=":{"type":"method","name":"health_check_id=","children":[],"call":["@create_options []= "]}," AWS Route53 ResourceRecordSet failover=":{"type":"method","name":"failover=","children":[],"call":["@create_options []= "]}," AWS reset_memoization":{"type":"method","name":"reset_memoization","children":[],"call":["Thread  current []= ","Thread  current "]}," AWS SvcDetails initialize":{"type":"method","name":"initialize","children":[],"call":["options [] "]}," AWS SimpleDB V20090415 valid_domain_name?":{"type":"method","name":"valid_domain_name?","children":[],"call":[" class valid_domain_name? "," class "]}," AWS Record Model populate_id":{"type":"method","name":"populate_id","children":[],"call":["UUIDTools UUID  random_create to_s downcase ","UUIDTools UUID  random_create to_s ","UUIDTools UUID  random_create ","SecureRandom  uuid "]}," AWS Record Model hydrate":{"type":"method","name":"hydrate","children":[],"call":[]}," AWS Record Model attributes":{"type":"method","name":"attributes","children":[],"call":["attributes []= "," id "," persisted? "]}," AWS Record Model id":{"type":"method","name":"id","children":[],"call":[]}," AWS Record HashModel populate_id":{"type":"method","name":"populate_id","children":[],"call":[" []= ","UUIDTools UUID  random_create to_s downcase ","UUIDTools UUID  random_create to_s ","UUIDTools UUID  random_create ","hash_key name ","hash_key options [] ","hash_key options "," class hash_key_attribute "," class ","SecureRandom  uuid "," class hash_key_attribute  name "," class hash_key_attribute  options [] "," class hash_key_attribute  options "," class  class hash_key_attribute _attribute "]}," AWS Record HashModel add_attribute":{"type":"method","name":"add_attribute","children":[],"call":[" set_hash_key_attribute ","attribute options [] ","attribute options "]}," AWS Record HashModel set_hash_key_attribute":{"type":"method","name":"set_hash_key_attribute","children":[],"call":[" remove_attribute "," hash_key_attribute "," hash_key_attribute options [] "," hash_key_attribute options "]}," AWS Record HashModel hash_key_attribute":{"type":"method","name":"hash_key_attribute","children":[],"call":[]}," AWS Record HashModel hash_key":{"type":"method","name":"hash_key","children":[],"call":[" hash_key_attribute name "," hash_key_attribute "," [] "," class hash_key "," class "]}," AWS Record HashModel inherited":{"type":"method","name":"inherited","children":[],"call":[]}," AWS Record AbstractBase ClassMethods remove_attribute":{"type":"method","name":"remove_attribute","children":[],"call":[" attributes delete ","attribute name "," attributes ","validator attribute_names delete ","validator attribute_names "," validators each "," validators "," send "]}," AWS DynamoDB ClientV2 new":{"type":"method","name":"new","children":[],"call":["Client  new ","options merge "]}," AWS Core CredentialProviders CredentialFileProvider get_credentials":{"type":"method","name":"get_credentials","children":[],"call":["fh close ","credentials []= ","CREDENTIAL_FILE_KEY_MAP  [] ","KEYS  include? ","line strip split ","line strip ","fh each_line ","File  open "," credential_file ","File  readable? ","File  exist? "]}," AWS Core CredentialProviders CredentialFileProvider initialize":{"type":"method","name":"initialize","children":[],"call":[]}," AWS Core Client configured_version":{"type":"method","name":"configured_version","children":[],"call":["AWS  config send [] ","AWS  config send ","AWS  config ","AWS SERVICES  [] method_name ","AWS SERVICES  [] "," name split [] "," name split "," name ","config send [] ","config send "]}," AWS Core Client client_api_version":{"type":"method","name":"client_api_version","children":[],"call":[" const_get "," configured_version ","options [] ","AWS  config "]}," AWS Core Client client_class":{"type":"method","name":"client_class","children":[],"call":[" const_get "," client_api_version gsub "," client_api_version "," name =~ "," name "]}," AWS Core Client new":{"type":"method","name":"new","children":[],"call":["client send "," client_class allocate "," client_class ","args last ","args last is_a? "," client_class allocate  send ","  client_class allocate _class allocate ","  client_class allocate _class "]}," AWS Core Client inspect":{"type":"method","name":"inspect","children":[],"call":[" class name "," class "]}," AWS EC2 ReservedInstancesOfferingCollection _each_item":{"type":"method","name":"_each_item","children":[],"call":["resp [] ","ReservedInstancesOffering  new_from "," config ","item reserved_instances_offering_id ","resp reserved_instances_offerings_set each ","resp reserved_instances_offerings_set "," filtered_request ","options []= "," filtered_request  [] "," filtered_request  reserved_instances_offerings_set each "," filtered_request  reserved_instances_offerings_set "]}," AWS DynamoDB Client calculate_crc32":{"type":"method","name":"calculate_crc32","children":[],"call":["Zlib  crc32 ","response http_response body ","response http_response "]}," AWS DynamoDB Client crc32_is_valid?":{"type":"method","name":"crc32_is_valid?","children":[],"call":["crcs [] to_i == "," calculate_crc32 ","crcs [] to_i ","crcs [] ","response http_response headers [] ","response http_response headers ","response http_response "," config dynamo_db_crc32 "," config ","response http_response headers []  [] to_i == ","response http_response headers []  [] to_i ","response http_response headers []  [] "]}," AWS DynamoDB Client sleep_durations":{"type":"method","name":"sleep_durations","children":[],"call":["50 * / ","50 * ","2 ** ","n - ","n == ","(erange\n  (int 0)\n  (lvar :retry_count)) map "," config max_retries "," config "," config max_retries == "," expired_credentials? "," possible_expired_credentials? "]}," AWS DynamoDB Client retryable_error?":{"type":"method","name":"retryable_error?","children":[],"call":[" config dynamo_db_retry_throughput_errors? "," config ","response error ","response error is_a? "]}," AWS DynamoDB Client extract_error_details":{"type":"method","name":"extract_error_details","children":[],"call":[" crc32_is_valid? == "," crc32_is_valid? ","response http_response status == ","response http_response status ","response http_response "]}," AWS CloudFront Request service":{"type":"method","name":"service","children":[],"call":[]}," AWS SNS Message token":{"type":"method","name":"token","children":[],"call":["@raw [] "]}," AWS SNS Message subscribe_url":{"type":"method","name":"subscribe_url","children":[],"call":["@raw [] "]}," AWS EMR Request service":{"type":"method","name":"service","children":[],"call":[]}," AWS Core Http NetHttpHandler determine_expected_content_length":{"type":"method","name":"determine_expected_content_length","children":[],"call":["header first to_i ","header first ","header is_a? ","response headers [] ","response headers ","response headers []  first to_i ","response headers []  first ","response headers []  is_a? ","response response headers [] s [] ","response response headers [] s "]}," AWS SQS Queue verify_receive_message_checksum":{"type":"method","name":"verify_receive_message_checksum","children":[],"call":["invalid_msgs << "," is_checksum_valid ","msg [] ","response [] each ","response [] ","response [] nil? "]}," AWS SQS Queue verify_send_message_batch_checksum":{"type":"method","name":"verify_send_message_batch_checksum","children":[],"call":["failed << "," is_checksum_valid ","entry [] ","msg [] ","e [] == ","e [] ","entries find ","response [] each ","response [] "]}," AWS SQS Queue verify_send_message_checksum":{"type":"method","name":"verify_send_message_checksum","children":[],"call":[" raise ","Errors ChecksumError  new "," is_checksum_valid "]}," AWS SQS Queue calculate_checksum":{"type":"method","name":"calculate_checksum","children":[],"call":["Digest MD5  hexdigest "]}," AWS SQS Queue is_checksum_valid":{"type":"method","name":"is_checksum_valid","children":[],"call":[" calculate_checksum == "," calculate_checksum "," config sqs_verify_checksums? "," config "]}," AWS SQS Errors BatchSendMultiError initialize":{"type":"method","name":"initialize","children":[],"call":["@errors << ","error_set each "]}," AWS SQS Errors ChecksumError initialize":{"type":"method","name":"initialize","children":[],"call":["@failures size ","failures is_a? "]}," AWS SimpleWorkflow Request service":{"type":"method","name":"service","children":[],"call":[]}," AWS DynamoDB initialize":{"type":"method","name":"initialize","children":[],"call":["options [] []= ","options [] ","options dup "," warn ","options [] [] ","options dup  [] []= ","options dup  [] ","options dup  dup ","options dup  [] [] "]}," AWS Core XML SaxHandlers Nokogiri comment":{"type":"method","name":"comment","children":[],"call":[]}," AWS Core Configuration endpoint_region":{"type":"method","name":"endpoint_region","children":[],"call":[" region "," supplied [] ","svc old_name "," supplied ","(or\n  (send\n    (send nil :supplied) :[]\n    (send\n      (lvar :svc) :method_name))\n  (hash)) [] ","svc method_name "]}," AWS S3 V20060301 object_method":{"type":"method","name":"object_method","children":[],"call":[]}," AWS S3 Client Validators require_allowed_origins!":{"type":"method","name":"require_allowed_origins!","children":[],"call":["(send\n  (lvar :allowed_origins) :all?) ! ","x kind_of? ","allowed_origins all? ","allowed_origins kind_of? ! ","allowed_origins kind_of? "," validate! "]}," AWS S3 Client Validators require_allowed_methods!":{"type":"method","name":"require_allowed_methods!","children":[],"call":["(send\n  (lvar :allowed_methods) :all?) ! ","x kind_of? ","allowed_methods all? ","allowed_methods kind_of? ! ","allowed_methods kind_of? "," validate! "]}," AWS S3 S3Object add_configured_write_options":{"type":"method","name":"add_configured_write_options","children":[],"call":["options delete ","options [] == ","options [] ","options []= "," config s3_server_side_encryption "," config ","options key? "]}," AWS S3 Client add_sse_to_response":{"type":"method","name":"add_sse_to_response","children":[],"call":["Core MetaUtils  extend_method ","value downcase to_sym ","value downcase ","response http_response header ","response http_response ","response data []= ","response data ","sse downcase to_sym ","sse downcase ","response http_response header  downcase to_sym ","response http_response header  downcase ","value downcase to_sym  downcase to_sym ","sse downcase to_sym  downcase to_sym ","value downcase to_sym  downcase ","sse downcase to_sym  downcase "]}," AWS Record Base attributes=":{"type":"method","name":"attributes=","children":[],"call":[" bulk_assign "]}," AWS ELB LoadBalancer health_check_configuration":{"type":"method","name":"health_check_configuration","children":[],"call":["cfg timeout ","cfg target ","cfg interval ","cfg unhealthy_threshold ","cfg healthy_threshold "," health_check_description "," health_check_description  timeout "," health_check_description  target "," health_check_description  interval "," health_check_description  unhealthy_threshold "," health_check_description  healthy_threshold "]}," AWS ELB Listener ==":{"type":"method","name":"==","children":[],"call":["other port == "," port ","other port ","other load_balancer == "," load_balancer ","other load_balancer ","other is_a? "]}," AWS EC2 SecurityGroup IngressIpPermissionCollection each":{"type":"method","name":"each","children":[],"call":["IpPermission  new "," config ","p ip_protocol "," security_group ","SecurityGroup  new ","group user_id ","group group_name ","group group_id ","p groups collect ","p groups ","ip cidr_ip ","p ip_ranges collect ","p ip_ranges ","p to_port ","p from_port "," security_group ip_permissions_list each "," security_group ip_permissions_list ","p respond_to? ","p [] "," security_group ip_IpPermission  new s_list each "," security_group ip_IpPermission  new s_list "]}," AWS EC2 SecurityGroup IngressIpPermissionCollection initialize":{"type":"method","name":"initialize","children":[],"call":[]}," AWS Core Collection Simple _each_item":{"type":"method","name":"_each_item","children":[],"call":[" raise "]}," AWS Core Collection Simple each_batch":{"type":"method","name":"each_batch","children":[],"call":["batch << ","batch size < ","batch size ","total <= "," _each_item ","each_opts dup ","next_token to_i - ","next_token to_i ","each_opts delete ","options dup ","limit to_i ","options dup  dup ","each_opts delete  to_i - ","each_opts delete  to_i ","options dup  delete ","limit to_i  to_i "]}," AWS Core Collection Limitable _limit":{"type":"method","name":"_limit","children":[],"call":[]}," AWS Core Collection Limitable _each_item":{"type":"method","name":"_each_item","children":[],"call":[" raise "]}," AWS Core Collection Limitable each_batch":{"type":"method","name":"each_batch","children":[],"call":["batch << "," _each_item ","each_opts dup ","max min ","max << ","limit - ","limit == ","next_token nil? ","each_opts delete "," _limit ","options dup ","batch_size to_i ","limit to_i ","options dup  dup ","max min  min ","max min  << ","limit to_i  - ","limit to_i  == ","each_opts delete  nil? ","options dup  delete "," _limit to_i  ","each_opts delete  to_i ","batch_size to_i  to_i ","limit to_i  to_i "]}," AWS Core Collection Batchable _each_item":{"type":"method","name":"_each_item","children":[],"call":[" raise "]}," AWS Core Collection Batchable _next_token_key":{"type":"method","name":"_next_token_key","children":[],"call":[]}," AWS Core Collection Batchable _next_token_for":{"type":"method","name":"_next_token_for","children":[],"call":["response send ","response respond_to? "," _next_token_key "]}," AWS Core Collection Batchable _each_response":{"type":"method","name":"_each_response","children":[],"call":[" _next_token_for "," client send ","options merge "," request_method "," client ","page_opts []= "," next_token_key ","next_token nil? "," _ _next_token_for _for ","  _next_token_for _key "," _next_token_for  nil? "]}," AWS Core Collection Batchable each_batch":{"type":"method","name":"each_batch","children":[],"call":["batch size ","(op-asgn\n  (lvasgn :total) :+\n  (int 1)) == ","batch << "," each_item "," _each_response ","options delete ","(nil) include? ","options [] ","options dup ","total == "," _each_item ","each_opts dup ","next_token nil? ","each_opts delete "," raise ","options dup  delete ","options dup  [] ","options dup  dup "]}," AWS Record Scope domain":{"type":"method","name":"domain","children":[],"call":[" _with "]}," AWS Record FinderMethods domain":{"type":"method","name":"domain","children":[],"call":[" _new_scope domain "," _new_scope "]}," AWS Record Scope _domain":{"type":"method","name":"_domain","children":[],"call":["@options [] "]}," AWS Record FinderMethods find_by_id":{"type":"method","name":"find_by_id","children":[],"call":["obj send "," new "," raise ","data empty? "," sdb_domain items [] data attributes "," sdb_domain items [] data "," sdb_domain items [] "," sdb_domain items "," sdb_domain ","options [] ","domain items [] data attributes ","domain items [] data ","domain items [] ","domain items "," new  send "," sdb_domain items [] data attributes  empty? ","domain items [] data attributes  empty? "," sdb_domain items []  sdb_domain items [] data attributes  attributes "," sdb_domain items [] domain items [] data attributes  attributes "," sdb_ sdb_domain  items [] data attributes "," sdb_domain items []  sdb_domain items [] data attributes  "," sdb_domain items [] domain items [] data attributes  "," sdb_ sdb_domain  items [] data "," sdb_ sdb_domain  items [] "," sdb_ sdb_domain  items "," sdb_ sdb_domain  ","domain items []  sdb_domain items [] data attributes  attributes ","domain items [] domain items [] data attributes  attributes "," sdb_domain  items [] data attributes ","domain items []  sdb_domain items [] data attributes  ","domain items [] domain items [] data attributes  "," sdb_domain  items [] data "," sdb_domain  items [] "," sdb_domain  items "]}," ConnectionPool _clean":{"type":"method","name":"_clean","children":[],"call":["idle_session finish ","now - > "," idle_timeout ","now - ","idle_session last_used_at ","idle_session last_used_at nil? ","@pool delete_if ","Time  now ","Time  now  - > ","Time  now  - ","Time  Time  now  "]}," ConnectionPool session_for":{"type":"method","name":"session_for","children":[],"call":["Session  for "," open_timeout ","session nil? ","@pool delete ","idle_session key == ","connection key ","idle_session key ","@pool find "," _clean ","@pool_mutex synchronize "," logger "," log_wire_trace? "," http_wire_trace? ","@pool << "," raise ","session finish "," _create_session ","Session  for  nil? "," _create_session  nil? ","idle_Session  for  key == ","idle_ _create_session  key == ","idle_Session  for  key ","idle_ _create_session  key ","  logger  ","Session  for  finish "," _create_session  finish "," _create_Session  for  "," _create_ _create_session  "]}," ConnectionPool empty!":{"type":"method","name":"empty!","children":[],"call":["@pool each ","@pool_mutex synchronize "]}," ConnectionPool clean!":{"type":"method","name":"clean!","children":[],"call":[" _clean ","@pool_mutex synchronize "]}," ConnectionPool size":{"type":"method","name":"size","children":[],"call":["@pool size ","@pool_mutex synchronize "]}," ConnectionPool request":{"type":"method","name":"request","children":[],"call":["@pool << ","@pool_mutex synchronize "," raise ","session request ","session http_session read_timeout= ","connection read_timeout ","session http_session "," session_for ","retried ! ","SOCKET_ERRORS  include? ","error class ","session finish ","session read_timeout= "," session_for  request "," session_for  http_ session_for  read_timeout= "," session_for  http_ session_for  ","  session_for _for "," session_for  finish "," session_for  read_timeout= "]}," ConnectionPool connection_for":{"type":"method","name":"connection_for","children":[],"call":[" block_given? ","Connection  new "]}," ConnectionPool initialize":{"type":"method","name":"initialize","children":[],"call":["options [] ","Mutex  new ","Logger  new ","options [] ! ! ","options [] ! "," http_wire_trace? "]}," ConnectionPool Session for":{"type":"method","name":"for","children":[],"call":["Session  new ","connection key ","http start ","http use_ssl= ","http verify_mode= ","http ca_path= ","connection ssl_ca_path ","http ca_file= ","connection ssl_ca_file ","connection ssl_verify_peer? ","connection ssl? ","http open_timeout= ","Net HTTP  new ","http_args << ","connection proxy_password ","connection proxy_user ","connection proxy_port ","connection proxy_address ","connection proxy? ","connection port ","connection host ","http set_debug_output ","Net HTTP  new  start ","Net HTTP  new  use_ssl= ","Net HTTP  new  verify_mode= ","Net HTTP  new  ca_path= ","Net HTTP  new  ca_file= ","Net HTTP  new  open_timeout= ","Net HTTP  new _args << ","Net HTTP  new  set_debug_output "]}," ConnectionPool Session finish":{"type":"method","name":"finish","children":[],"call":[" http_session finish "," http_session "," http_session started? "]}," ConnectionPool Session request":{"type":"method","name":"request","children":[],"call":["Time  now "," http_session request "," http_session "]}," ConnectionPool Session initialize":{"type":"method","name":"initialize","children":[],"call":["Time  now "]}," ConnectionPool Connection key":{"type":"method","name":"key","children":[],"call":["(send\n  (array\n    (str \"host\")\n    (str \"port\")\n    (str \"ssl\")\n    (str \"ssl_verify_peer\")\n    (str \"ssl_ca_file\")\n    (str \"ssl_ca_path\")\n    (str \"proxy_address\")\n    (str \"proxy_port\")\n    (str \"proxy_user\")\n    (str \"proxy_password\")) :map) join "," send to_s "," send ","(str \"host\") map "]}," ConnectionPool Connection request":{"type":"method","name":"request","children":[],"call":[" pool request "," pool "]}," ConnectionPool Connection proxy?":{"type":"method","name":"proxy?","children":[],"call":[" proxy_address ! ! "," proxy_address ! "," proxy_address "]}," ConnectionPool Connection ssl_verify_peer?":{"type":"method","name":"ssl_verify_peer?","children":[],"call":[]}," ConnectionPool Connection ssl?":{"type":"method","name":"ssl?","children":[],"call":[]}," ConnectionPool Connection initialize":{"type":"method","name":"initialize","children":[],"call":["options [] ","uri password ","uri user ","uri port ","uri host ","URI  parse ","uri is_a? ","options key? "," port == "," port ","URI  parse  password ","options []  password ","URI  parse  user ","options []  user ","URI  parse  port ","options []  port ","URI  parse  host ","options []  host ","URI  parse  is_a? ","options []  is_a? "]}," AWS Record Base sdb":{"type":"method","name":"sdb","children":[],"call":["AWS SimpleDB  new "]}," AWS Record Base domain":{"type":"method","name":"domain","children":[],"call":[]}," AWS Record DateAttribute allow_set?":{"type":"method","name":"allow_set?","children":[],"call":[]}," AWS Record DateAttribute serialize":{"type":"method","name":"serialize","children":[],"call":[]}," AWS Record DateAttribute type_cast":{"type":"method","name":"type_cast","children":[],"call":[]}," AWS Record AttributeMacros date_attr":{"type":"method","name":"date_attr","children":[],"call":[" add_attribute ","DateAttribute  new "]}," AWS Core Http NetHttpHandler pool":{"type":"method","name":"pool","children":[],"call":[]}," AWS Core OptionGrammar Descriptors Map MapOption param_name=":{"type":"method","name":"param_name=","children":[],"call":[]}," AWS Core OptionGrammar Descriptors Map MapOption param_name":{"type":"method","name":"param_name","children":[],"call":[" name "]}," AWS DynamoDB ItemCollection first":{"type":"method","name":"first","children":[],"call":[" each "]}," AWS Core XML SaxHandlers REXML text":{"type":"method","name":"text","children":[],"call":[" set_text "]}," AWS Core XML FrameStack set_text":{"type":"method","name":"set_text","children":[],"call":["@frame add_text "]}," AWS Core RESTRequestBuilder size":{"type":"method","name":"size","children":[],"call":["File  size ","payload path ","payload size ","payload respond_to? "]}," AWS AutoScaling ScheduledActionCollection auto_scaling_group":{"type":"method","name":"auto_scaling_group","children":[],"call":[" raise ","Group  new "," config ","group is_a? ","@filters [] ","options delete ","Group  new  is_a? ","options delete  is_a? "]}," AWS AutoScaling ScheduledAction auto_scaling_group_name":{"type":"method","name":"auto_scaling_group_name","children":[],"call":[" group name "," group "]}," AWS CloudTrail Request service":{"type":"method","name":"service","children":[],"call":[]}," AWS SNS Subscription update_subscription_attribute":{"type":"method","name":"update_subscription_attribute","children":[],"call":[" client set_subscription_attributes "," client ","client_opts []= "," arn "]}," AWS SNS Subscription raw_message_delivery=":{"type":"method","name":"raw_message_delivery=","children":[],"call":[" update_subscription_attribute "]}," AWS SNS Subscription raw_message_delivery":{"type":"method","name":"raw_message_delivery","children":[],"call":["raw_value downcase == ","raw_value downcase "," get_attributes [] "," get_attributes "," get_attributes []  downcase == "," get_attributes []  downcase "]}," AWS CloudWatch Request service":{"type":"method","name":"service","children":[],"call":[]}," AWS S3 Client extract_error_code":{"type":"method","name":"extract_error_code","children":[],"call":["parse code ","parse respond_to? ","Core XmlGrammar  parse ","response http_response body ","response http_response ","response request_type == ","response request_type ","response http_response status >= ","response http_response status ","Core XmlGrammar  parse  code ","Core XmlGrammar  parse  respond_to? ","Core XmlGrammar  Core XmlGrammar  parse  ","response http_response response http_response body  "]}," AWS DynamoDB Request string_to_sign":{"type":"method","name":"string_to_sign","children":[],"call":["(send nil :http_method) join "," body "," canonical_headers "," http_method "]}," AWS DynamoDB Request canonical_headers":{"type":"method","name":"canonical_headers","children":[],"call":["(send\n  (send nil :headers_to_sign) :map) sort join ","(send\n  (send nil :headers_to_sign) :map) sort ","value strip ","name downcase strip ","name downcase "," headers [] "," headers "," headers_to_sign map "," headers_to_sign "," headers []  strip "]}," AWS DynamoDB Request headers_to_sign":{"type":"method","name":"headers_to_sign","children":[],"call":["header =~ ","header == "," headers keys select "," headers keys "," headers "," headers keys sort select "," headers keys sort "]}," AWS DynamoDB Request add_authorization!":{"type":"method","name":"add_authorization!","children":[],"call":[" headers []= ","AWS3  + + + + ","AWS3  + + + "," headers_to_sign join "," headers_to_sign ","AWS3  + + ","AWS3  + ","signer access_key_id "," headers ","signer sign ","OpenSSL Digest SHA256  digest "," string_to_sign ","signer session_token "," raise "," host "," headers [] ","Time  now rfc822 ","Time  now "," access_key_id= "]}," AWS DynamoDB Request initialize":{"type":"method","name":"initialize","children":[],"call":[" headers []= "," headers "]}," AWS DynamoDB Errors ModeledError code":{"type":"method","name":"code","children":[],"call":[" class name =~ "," class name "," class "]}," AWS DynamoDB Errors ModeledError include_error_type":{"type":"method","name":"include_error_type","children":[],"call":[" extend ","response status >= ","response status "]}," AWS DynamoDB Errors ModeledError extract_message":{"type":"method","name":"extract_message","children":[],"call":[" code "," code == ","JSON  load [] ","JSON  load ","response body ","response body != "]}," AWS DynamoDB Errors ModeledError initialize":{"type":"method","name":"initialize","children":[],"call":[" include_error_type "," extract_message "," extract_ extract_message  "]}," AWS DynamoDB Client possible_expired_credentials?":{"type":"method","name":"possible_expired_credentials?","children":[],"call":["response error is_a? ","response error "," signer respond_to? "," signer "]}," AWS DynamoDB Client rebuild_http_request":{"type":"method","name":"rebuild_http_request","children":[],"call":[" signer refresh_session "," signer "," possible_expired_credentials? "]}," AWS DynamoDB Client should_retry?":{"type":"method","name":"should_retry?","children":[],"call":[" config dynamo_db_retry_throughput_errors? "," config ","response error is_a? ","response error "," possible_expired_credentials? "]}," AWS DynamoDB Client extract_error_code":{"type":"method","name":"extract_error_code","children":[],"call":["type =~ ","json [] ","JSON  load ","response http_response body ","response http_response ","response http_response status >= ","response http_response status ","response http_response status == ","json []  =~ ","response http_response response http_response body  "]}," AWS DynamoDB Client new_request":{"type":"method","name":"new_request","children":[],"call":["req headers []= ","req headers "]}," AWS DynamoDB Client initialize":{"type":"method","name":"initialize","children":[],"call":["Core SessionSigner  for "," config "," config signer session_token nil? "," config signer session_token "," config signer ","Core CredentialProviders SessionProvider  for "," credential_provider credentials "," credential_provider "," credential_provider session_token nil? "," credential_provider session_token "]}," AWS DynamoDB AttributeCollection to_h":{"type":"method","name":"to_h","children":[],"call":[" values_from_response_hash "," get_item "]}," AWS Core SessionSigner short_term_signer":{"type":"method","name":"short_term_signer","children":[],"call":["DefaultSigner  new "," session_token "," secret_access_key "," access_key_id "]}," AWS Core SessionSigner session":{"type":"method","name":"session","children":[],"call":[" get_session "," refresh_session ","session expires_at < ","Time  now + ","15 * ","Time  now ","session expires_at ","session nil? "," get_ get_session  "," refresh_ get_session  "," get_session  expires_at < "," get_session  expires_at "," get_session  nil? "]}," AWS Core SessionSigner get_session":{"type":"method","name":"get_session","children":[],"call":["@session_mutex synchronize "]}," AWS Core SessionSigner refresh_session":{"type":"method","name":"refresh_session","children":[],"call":["sts new_session ","@session_mutex synchronize ","AWS STS  new ","AWS STS  new  new_session ","sts new_session _mutex synchronize "]}," AWS Core SessionSigner session_token":{"type":"method","name":"session_token","children":[],"call":[" session credentials [] "," session credentials "," session "]}," AWS Core SessionSigner secret_access_key":{"type":"method","name":"secret_access_key","children":[],"call":[" session credentials [] "," session credentials "," session "]}," AWS Core SessionSigner access_key_id":{"type":"method","name":"access_key_id","children":[],"call":[" session credentials [] "," session credentials "," session "]}," AWS Core SessionSigner sign":{"type":"method","name":"sign","children":[],"call":[" short_term_signer sign "," short_term_signer "]}," AWS Core SessionSigner initialize":{"type":"method","name":"initialize","children":[],"call":["Mutex  new "]}," AWS Core SessionSigner for":{"type":"method","name":"for","children":[],"call":[]}," AWS Core ConfiguredJsonClientMethods included":{"type":"method","name":"included","children":[],"call":[]}," AWS Core ConfiguredJsonClientMethods ClassMethods configure_client":{"type":"method","name":"configure_client","children":[],"call":["MetaUtils  extend_method "," simulate_response ","JSON  load ","response http_response body ","response http_response "," process_response ","request body= ","option_grammar to_json ","request headers []= ","target_prefix + ","request headers "," configure_request "," add_client_request_method ","Inflection  ruby_name to_sym ","Inflection  ruby_name "," Options  operation_grammar "," api_config [] each "," api_config [] "," api_config "," define_configured_grammars "," include "," Options  module_eval "," Options  include? ","response_body == "," Options  operation_grammar  to_json ","response http_response body  == "]}," AWS Core Client extract_error_code":{"type":"method","name":"extract_error_code","children":[],"call":["parse code ","parse respond_to? "," xml_error_grammar parse "," xml_error_grammar ","response http_response body ","response http_response ","response http_response status >= ","response http_response status "," xml_error_grammar parse  code "," xml_error_grammar parse  respond_to? "," xml_error_grammar  xml_error_grammar parse  ","response http_response response http_response body  "]}," AWS Core XmlGrammar blob_value":{"type":"method","name":"blob_value","children":[],"call":["Base64  decode64 "," format_value "]}," AWS Core JsonClient extract_error_code":{"type":"method","name":"extract_error_code","children":[],"call":["type =~ ","json [] ","JSON  load ","response http_response body ","response http_response ","response http_response status >= ","response http_response status ","json []  =~ ","response http_response response http_response body  "]}," AWS Core JsonClient new_request":{"type":"method","name":"new_request","children":[],"call":["req headers []= ","req headers "]}," AWS Core Http Request param_value_for":{"type":"method","name":"param_value_for","children":[],"call":["param value ","p name == ","p name ","@params detect "]}," AWS Core Http Request ssl_ca_path":{"type":"method","name":"ssl_ca_path","children":[],"call":[]}," AWS Core Http Request ssl_ca_path=":{"type":"method","name":"ssl_ca_path=","children":[],"call":[]}," AWS SimpleWorkflow Request read_timeout":{"type":"method","name":"read_timeout","children":[],"call":[" headers [] =~ "," headers [] "," headers "]}," AWS SimpleWorkflow Request string_to_sign":{"type":"method","name":"string_to_sign","children":[],"call":["(send nil :http_method) join "," body "," canonical_headers "," http_method "]}," AWS SimpleWorkflow Request canonical_headers":{"type":"method","name":"canonical_headers","children":[],"call":["(send\n  (send nil :headers_to_sign) :map) sort join ","(send\n  (send nil :headers_to_sign) :map) sort ","value strip ","name downcase strip ","name downcase "," headers [] "," headers "," headers_to_sign map "," headers_to_sign "," headers []  strip "]}," AWS SimpleWorkflow Request headers_to_sign":{"type":"method","name":"headers_to_sign","children":[],"call":["header =~ ","header == "," headers keys select "," headers keys "," headers "]}," AWS SimpleWorkflow Request add_authorization!":{"type":"method","name":"add_authorization!","children":[],"call":[" headers []= ","AWS3  + + + + ","AWS3  + + + "," headers_to_sign join "," headers_to_sign ","AWS3  + + ","AWS3  + ","signer access_key_id "," headers ","signer sign ","OpenSSL Digest SHA256  digest "," string_to_sign "," host "," headers [] ","Time  now rfc822 ","Time  now "," access_key_id= "]}," AWS SimpleWorkflow Errors ModeledError code":{"type":"method","name":"code","children":[],"call":[" class name =~ "," class name "," class "]}," AWS SimpleWorkflow Errors ModeledError include_error_type":{"type":"method","name":"include_error_type","children":[],"call":[" extend ","response status >= ","response status "]}," AWS SimpleWorkflow Errors ModeledError extract_message":{"type":"method","name":"extract_message","children":[],"call":[" code ","JSON  load [] ","JSON  load ","response body "]}," AWS SimpleWorkflow Errors ModeledError initialize":{"type":"method","name":"initialize","children":[],"call":[" include_error_type "," extract_message "," extract_ extract_message  "]}," AWS Core Http Request port=":{"type":"method","name":"port=","children":[],"call":[]}," AWS Core AuthorizeV4 hash":{"type":"method","name":"hash","children":[],"call":["Digest SHA256  digest "]}," AWS Core AuthorizeV4 hmac":{"type":"method","name":"hmac","children":[],"call":["OpenSSL HMAC  digest ","OpenSSL Digest Digest  new "]}," AWS Core AuthorizeV4 hex16":{"type":"method","name":"hex16","children":[],"call":["string unpack first ","string unpack "]}," AWS Core AuthorizeV4 canonical_header_values":{"type":"method","name":"canonical_header_values","children":[],"call":["values map map join ","values map map ","values map ","values is_a? "]}," AWS Core AuthorizeV4 canonical_headers":{"type":"method","name":"canonical_headers","children":[],"call":["(send\n  (lvar :headers) :map) join "," canonical_header_values ","headers map ","headers sort_by ","headers << ","header first == ","header first ","k to_s downcase ","k to_s "," headers each_pair "," headers ","(send\n  (lvar :headers sort_by ) :map) join ","headers sort_by  map ","headers sort_by  sort_by ","headers sort_by  << "," headers sort_by  each_pair "," headers sort_by  "]}," AWS Core AuthorizeV4 signed_headers":{"type":"method","name":"signed_headers","children":[],"call":["to_sign sort join ","to_sign sort ","to_sign delete ","k to_s downcase ","k to_s "," headers keys map "," headers keys "," headers "]}," AWS Core AuthorizeV4 canonical_querystring":{"type":"method","name":"canonical_querystring","children":[],"call":[" url_encoded_params "," http_method to_s upcase == "," http_method to_s upcase "," http_method to_s "," http_method "]}," AWS Core AuthorizeV4 payload":{"type":"method","name":"payload","children":[],"call":[" body "]}," AWS Core AuthorizeV4 canonical_uri":{"type":"method","name":"canonical_uri","children":[],"call":[" path "]}," AWS Core AuthorizeV4 action_name":{"type":"method","name":"action_name","children":[],"call":[" http_method to_s upcase "," http_method to_s "," http_method "]}," AWS Core AuthorizeV4 service":{"type":"method","name":"service","children":[],"call":[" raise "]}," AWS Core AuthorizeV4 canonical_request":{"type":"method","name":"canonical_request","children":[],"call":["parts join ","parts << "," hex16 "," hash "," payload "," signed_headers "," canonical_headers + "," canonical_headers "," canonical_querystring "," canonical_uri "," action_name "]}," AWS Core AuthorizeV4 credential_string":{"type":"method","name":"credential_string","children":[],"call":["parts join ","parts << "," service "," region ","datetime [] "]}," AWS Core AuthorizeV4 string_to_sign":{"type":"method","name":"string_to_sign","children":[],"call":["parts join ","parts << "," hex16 "," hash "," canonical_request "," credential_string "]}," AWS Core AuthorizeV4 signature":{"type":"method","name":"signature","children":[],"call":[" hmac "," string_to_sign "," service "," region ","datetime [] ","AWS4 + ","signer secret_access_key "]}," AWS Core AuthorizeV4 authorization":{"type":"method","name":"authorization","children":[],"call":["parts join ","parts << "," hex16 "," signature "," signed_headers "," credential_string "," access_key_id "]}," AWS Core AuthorizeV4 add_authorization!":{"type":"method","name":"add_authorization!","children":[],"call":[" headers []= "," authorization "," headers ","signer session_token "," host "," headers [] ","Time  now utc strftime ","Time  now utc ","Time  now "," access_key_id= ","signer access_key_id "]}," AWS Core XmlGrammar Context to_hash":{"type":"method","name":"to_hash","children":[],"call":["hash merge ","value to_hash ","value is_a? ","v to_hash ","v is_a? ","value map ","matches [] to_sym ","matches [] ","key to_s match ","key to_s ","@data inject ","value to_hash  to_hash ","value to_hash  is_a? ","value to_hash  map ","key to_s match  [] to_sym ","key to_s match  [] ","matches [] to_sym  to_s match ","matches [] to_sym  to_s "]}," AWS Kinesis Request service":{"type":"method","name":"service","children":[],"call":[]}," AWS S3 S3Object presign_v3":{"type":"method","name":"presign_v3","children":[],"call":[" build_uri ","req add_param "," config credential_provider session_token "," config credential_provider "," config ","options [] "," signature "," config credential_provider access_key_id ","req http_method= "," http_method "," request_for_signing ","options []= ","options [] to_s sub ","options [] to_s "," request_for_signing  add_param "," request_for_signing  http_method= ","  request_for_signing uest_for_signing "]}," AWS S3 S3Object presign_v4":{"type":"method","name":"presign_v4","children":[],"call":["PresignV4  new presign ","PresignV4  new "]}," AWS S3 PresignV4 seconds_away":{"type":"method","name":"seconds_away","children":[],"call":["expires - ","Time  now to_i ","Time  now "]}," AWS S3 PresignV4 build_uri":{"type":"method","name":"build_uri","children":[],"call":["uri_class build ","request querystring ","request path ","request port ","request host ","options [] "]}," AWS S3 PresignV4 signature":{"type":"method","name":"signature","children":[],"call":[" signer signature "," signer "," signer derive_key "," signer derive_ signer derive_key  "]}," AWS S3 PresignV4 operation_name":{"type":"method","name":"operation_name","children":[],"call":[" raise "," ArgumentError ","msg << ","method inspect "]}," AWS S3 PresignV4 build_request":{"type":"method","name":"build_request","children":[],"call":["req force_path_style= ","options fetch "," client send "," operation_name "," client ","options merge "," object key "," object "," object bucket name "," object bucket "," object config s3_force_path_style "," object config "," client send  force_path_style= ","req force_ object config s3_force_path_style = "," object config s3_force_ object config s3_force_path_style  "]}," AWS S3 PresignV4 presign":{"type":"method","name":"presign","children":[],"call":[" build_uri ","request add_param "," signature "," signer credential "," signer "," seconds_away ","options [] ","options key? ","p tr to_sym ","p tr ","Core Signers S3 QUERY_PARAMS  map ","signed_headers << ","request headers []= ","request headers ","options [] to_s gsub ","options [] to_s ","request host ","request headers clear "," build_request ","Time  now utc strftime ","Time  now utc ","Time  now "," raise ","options [] - > ","options [] - ","now to_i ","60 * * * ","60 * * ","60 * ","now strftime "," client credential_provider session_token "," client credential_provider "," client ","request add_p tr to_sym  "," build_request  add_param "," build_request  headers []= "," build_request  headers "," build_request  host "," build_request  headers clear "," build_ build_request  ","Time  Time  now utc strftime  utc strftime ","Time  now strftime  utc strftime ","Time  Time  now utc  utc strftime ","Time  Time  now utc strftime  utc ","Time  now strftime  utc ","Time  Time  now utc  utc ","Time  Time  now utc strftime  ","Time  now strftime  ","Time  Time  now utc  ","Time  now utc strftime  to_i ","now strftime  to_i ","Time  now utc  to_i ","Time  now utc strftime  strftime ","now strftime  strftime ","Time  now utc  strftime "," client credential_provider session_ client credential_provider session_token  "]}," AWS S3 PresignV4 initialize":{"type":"method","name":"initialize","children":[],"call":["object client send ","object client "]}," AWS S3 Client set_server_side_encryption":{"type":"method","name":"set_server_side_encryption","children":[],"call":["request headers []= ","request headers ","sse to_s upcase ","sse to_s ","sse is_a? ","options [] ","options []  to_s upcase ","options []  to_s ","options []  is_a? "]}," AWS S3 Client set_storage_class":{"type":"method","name":"set_storage_class","children":[],"call":["request headers []= ","request headers ","storage_class to_s upcase ","storage_class to_s ","storage_class kind_of? ","options [] ","options []  to_s upcase ","options []  to_s ","options []  kind_of? "]}," AWS S3 Client set_metadata":{"type":"method","name":"set_metadata","children":[],"call":["request headers []= ","request headers "," Array each "," Array ","options [] ","name start_with? "]}," AWS S3 Client chunk_sign?":{"type":"method","name":"chunk_sign?","children":[],"call":["req headers [] to_i > ","2 * * ","2 * ","req headers [] to_i ","req headers [] ","req headers ","req http_method == ","req http_method "]}," AWS S3 Client v4_signer":{"type":"method","name":"v4_signer","children":[],"call":["Core Signers Version4  new "," credential_provider "]}," AWS S3 Client v3_signer":{"type":"method","name":"v3_signer","children":[],"call":["Core Signers S3  new "," credential_provider "]}," AWS S3 Client sign_request":{"type":"method","name":"sign_request","children":[],"call":[" raise ","version inspect "," v3_signer sign_request "," v3_signer "," v4_signer sign_request "," v4_signer ","@region =~ ","@config s3_signature_version to_sym ","@config s3_signature_version ","@config s3_signature_version to_sym  inspect ","@config s3_signature_@config s3_signature_version to_sym  to_sym ","@config s3_signature_@config s3_signature_version to_sym  "]}," AWS S3 BucketCollection guess_constraint":{"type":"method","name":"guess_constraint","children":[],"call":[" config s3_endpoint "," config "]}," AWS EC2 Client v4_signer":{"type":"method","name":"v4_signer","children":[],"call":["Core Signers Version4  new "," credential_provider "]}," AWS EC2 Client v2_signer":{"type":"method","name":"v2_signer","children":[],"call":["Core Signers Version2  new "," credential_provider "]}," AWS EC2 Client sign_request":{"type":"method","name":"sign_request","children":[],"call":[" v2_signer sign_request "," v2_signer "," v4_signer sign_request "," v4_signer ","@region =~ "," raise ","version inspect ","@config ec2_signature_version to_sym ","@config ec2_signature_version ","@config ec2_signature_version to_sym  inspect ","@config ec2_signature_@config ec2_signature_version to_sym  to_sym ","@config ec2_signature_@config ec2_signature_version to_sym  "]}," AWS Core Signers Version4 sha256_digest":{"type":"method","name":"sha256_digest","children":[],"call":["OpenSSL Digest Digest  new ","OpenSSL Digest  new "]}," AWS Core Signers Version4 hexhmac":{"type":"method","name":"hexhmac","children":[],"call":["OpenSSL HMAC  hexdigest "," sha256_digest "]}," AWS Core Signers Version4 hmac":{"type":"method","name":"hmac","children":[],"call":["OpenSSL HMAC  digest "," sha256_digest "]}," AWS Core Signers Version4 hexdigest":{"type":"method","name":"hexdigest","children":[],"call":["digest hexdigest ","digest update ","value rewind ","value read ","1024 * ","value respond_to? ","Digest SHA256  new ","OpenSSL Digest SHA256  new ","Digest SHA256  new  hexDigest SHA256  new  ","OpenSSL Digest SHA256  new  hexOpenSSL Digest SHA256  new  ","Digest SHA256  new  update ","OpenSSL Digest SHA256  new  update "]}," AWS Core Signers Version4 body_digest":{"type":"method","name":"body_digest","children":[],"call":[" hexdigest ","req body ","(str \"\") include? "]}," AWS Core Signers Version4 canonical_header_values":{"type":"method","name":"canonical_header_values","children":[],"call":["values map join gsub strip ","values map join gsub ","values map join ","values map ","values is_a? "]}," AWS Core Signers Version4 canonical_headers":{"type":"method","name":"canonical_headers","children":[],"call":["(send\n  (lvar :headers) :map) join "," canonical_header_values ","headers map ","headers sort_by ","headers << ","k == ","req headers each_pair ","req headers ","(send\n  (lvar :headers sort_by ) :map) join ","headers sort_by  map ","headers sort_by  sort_by ","headers sort_by  << ","req headers sort_by  each_pair ","req headers sort_by  "]}," AWS Core Signers Version4 signed_headers":{"type":"method","name":"signed_headers","children":[],"call":["to_sign sort join ","to_sign sort ","to_sign delete ","k to_s downcase ","k to_s ","req headers keys map ","req headers keys ","req headers "]}," AWS Core Signers Version4 canonical_request":{"type":"method","name":"canonical_request","children":[],"call":["parts join ","parts << "," signed_headers "," canonical_headers + "," canonical_headers ","req querystring ","req path ","req http_method "]}," AWS Core Signers Version4 key_path":{"type":"method","name":"key_path","children":[],"call":["parts join ","parts << "," service_name "," region ","datetime [] "]}," AWS Core Signers Version4 string_to_sign":{"type":"method","name":"string_to_sign","children":[],"call":["parts join ","parts << "," hexdigest "," canonical_request "," key_path "]}," AWS Core Signers Version4 authorization":{"type":"method","name":"authorization","children":[],"call":["parts join ","parts << "," signature "," signed_headers "," credential "]}," AWS Core Signers Version4 chunk_signed_stream":{"type":"method","name":"chunk_signed_stream","children":[],"call":["ChunkSignedStream  new ","args << ","req headers [] split [] ","req headers [] split ","req headers [] ","req headers "," key_path ","req headers [] to_i ","req body_stream "]}," AWS Core Signers Version4 derive_key":{"type":"method","name":"derive_key","children":[],"call":[" hmac "," service_name "," region ","datetime [] ","AWS4 + "," credentials secret_access_key "," credentials "]}," AWS Core Signers Version4 credential":{"type":"method","name":"credential","children":[],"call":[" key_path "," credentials access_key_id "," credentials "]}," AWS Core Signers Version4 signature":{"type":"method","name":"signature","children":[],"call":[" hexhmac "," string_to_sign ","  string_to_sign _to_sign "]}," AWS Core Signers Version4 sign_request":{"type":"method","name":"sign_request","children":[],"call":["req body_stream= "," chunk_signed_stream ","req headers []= "," authorization ","req headers ","orig_size to_s ","signed_size to_s ","ChunkSignedStream  signed_size ","orig_size to_i ","req headers [] to_i ","req headers [] ","req host "," body_digest ","options [] ! ! ","options [] ! ","options [] "," credentials session_token "," credentials "," derive_key ","Time  now utc strftime ","Time  now utc ","Time  now ","req headers [] to_i  to_s ","ChunkSignedStream  signed_size  to_s ","ChunkSignedStream  ChunkSignedStream  signed_size  ","req headers [] to_i  to_i "," credentials session_ credentials session_token  "," derive_ derive_key  "]}," AWS Core Signers Version4 initialize":{"type":"method","name":"initialize","children":[],"call":[]}," AWS Core Signers Version4 ChunkSignedStream header_length":{"type":"method","name":"header_length","children":[],"call":["size to_s length + + + + + ","CLRF  length ","size to_s length + + + + ","size to_s length + + + ","size to_s length + + ","size to_s length + ","CHUNK_SIGNATURE_HEADER  length ","size to_s length ","size to_s "]}," AWS Core Signers Version4 ChunkSignedStream signed_size":{"type":"method","name":"signed_size","children":[],"call":[" header_length ","trailing_bytes > ","full_sized_chunks * ","size % ","size / ","size %  > ","size /  * "]}," AWS Core Signers Version4 ChunkSignedStream hash":{"type":"method","name":"hash","children":[],"call":["Digest SHA256  new update hexdigest ","Digest SHA256  new update ","Digest SHA256  new ","OpenSSL Digest SHA256  new update hexdigest ","OpenSSL Digest SHA256  new update ","OpenSSL Digest SHA256  new "]}," AWS Core Signers Version4 ChunkSignedStream sign":{"type":"method","name":"sign","children":[],"call":["OpenSSL HMAC  hexdigest ","OpenSSL Digest Digest  new ","OpenSSL Digest  new "]}," AWS Core Signers Version4 ChunkSignedStream next_chunk_signature":{"type":"method","name":"next_chunk_signature","children":[],"call":[" sign ","(str \"AWS4-HMAC-SHA256-PAYLOAD\") join "," hash "]}," AWS Core Signers Version4 ChunkSignedStream sign_chunk":{"type":"method","name":"sign_chunk","children":[],"call":["(send\n  (send\n    (lvar :chunk) :bytesize) :to_s\n  (int 16)) join "," next_chunk_signature ","chunk bytesize to_s ","chunk bytesize "]}," AWS Core Signers Version4 ChunkSignedStream next_chunk":{"type":"method","name":"next_chunk","children":[],"call":[" sign_chunk ","chunk nil? ","@stream read "," sign_@stream read  ","@stream read  nil? "]}," AWS Core Signers Version4 ChunkSignedStream more_chunks?":{"type":"method","name":"more_chunks?","children":[],"call":[]}," AWS Core Signers Version4 ChunkSignedStream fill_buffer":{"type":"method","name":"fill_buffer","children":[],"call":["@buffer << "," next_chunk "," more_chunks? ","@buffer bytesize < ","@buffer bytesize "]}," AWS Core Signers Version4 ChunkSignedStream read_bytes":{"type":"method","name":"read_bytes","children":[],"call":["bytes == ","@buffer [] "," fill_buffer ","@buffer []  == "]}," AWS Core Signers Version4 ChunkSignedStream reset":{"type":"method","name":"reset","children":[],"call":[]}," AWS Core Signers Version4 ChunkSignedStream rewind":{"type":"method","name":"rewind","children":[],"call":[" reset ","@stream rewind "]}," AWS Core Signers Version4 ChunkSignedStream read":{"type":"method","name":"read","children":[],"call":["bytes nil? ","data nil? ","output_buffer replace "," read_bytes "," read_bytes  nil? "]}," AWS Core Signers Version4 ChunkSignedStream initialize":{"type":"method","name":"initialize","children":[],"call":[" reset "," class signed_size "," class ","StringIO  new "]}," AWS Core Signers Version3Https string_to_sign":{"type":"method","name":"string_to_sign","children":[],"call":["Time  now httpdate ","Time  now ","req headers [] ","req headers "]}," AWS Core Signers Version3Https signature":{"type":"method","name":"signature","children":[],"call":[" sign "," string_to_sign "," credentials secret_access_key "," credentials "]}," AWS Core Signers Version3Https sign_request":{"type":"method","name":"sign_request","children":[],"call":["req headers []= "," credentials session_token "," credentials ","req headers ","parts join ","parts << "," signature "," credentials access_key_id "]}," AWS Core Signers Version3Https initialize":{"type":"method","name":"initialize","children":[],"call":[]}," AWS Core Signers Version3 headers_to_sign":{"type":"method","name":"headers_to_sign","children":[],"call":["header =~ ","header == ","req headers keys select ","req headers keys ","req headers "]}," AWS Core Signers Version3 canonical_headers":{"type":"method","name":"canonical_headers","children":[],"call":["(send\n  (send nil :headers_to_sign\n    (lvar :req)) :map) sort join ","(send\n  (send nil :headers_to_sign\n    (lvar :req)) :map) sort ","value strip ","name downcase strip ","name downcase ","req headers [] ","req headers "," headers_to_sign map "," headers_to_sign ","req headers []  strip "]}," AWS Core Signers Version3 string_to_sign":{"type":"method","name":"string_to_sign","children":[],"call":["OpenSSL Digest SHA256  digest ","(send\n  (lvar :req) :http_method) join ","req body "," canonical_headers ","req http_method "]}," AWS Core Signers Version3 signature":{"type":"method","name":"signature","children":[],"call":[" sign "," string_to_sign "," credentials secret_access_key "," credentials "]}," AWS Core Signers Version3 sign_request":{"type":"method","name":"sign_request","children":[],"call":["req headers []= ","AWS3  + + + + "," signature ","AWS3  + + + "," headers_to_sign join "," headers_to_sign ","AWS3  + + ","AWS3  + "," credentials access_key_id "," credentials ","req headers "," credentials session_token ","req host ","req headers [] ","Time  now httpdate ","Time  now "]}," AWS Core Signers Version3 initialize":{"type":"method","name":"initialize","children":[],"call":[]}," AWS Core Signers Version2 string_to_sign":{"type":"method","name":"string_to_sign","children":[],"call":["(send\n  (lvar :req) :http_method) join ","req url_encoded_params ","req path ","host to_s downcase ","host to_s ","req http_method ","req port ","req host "]}," AWS Core Signers Version2 signature":{"type":"method","name":"signature","children":[],"call":[" sign "," string_to_sign "," credentials secret_access_key "," credentials "]}," AWS Core Signers Version2 sign_request":{"type":"method","name":"sign_request","children":[],"call":["req body= ","req url_encoded_params ","req add_param "," signature "," credentials session_token "," credentials "," credentials access_key_id "," credentials session_ credentials session_token  "]}," AWS Core Signers Version2 initialize":{"type":"method","name":"initialize","children":[],"call":[]}," AWS Core Signers S3 query_parameters_for_signature":{"type":"method","name":"query_parameters_for_signature","children":[],"call":["QUERY_PARAMS  include? ","p name ","req params select ","req params "]}," AWS Core Signers S3 sub_resource_params":{"type":"method","name":"sub_resource_params","children":[],"call":["SUB_RESOURCES  include? ","p name ","req params select ","req params "]}," AWS Core Signers S3 canonicalized_resource":{"type":"method","name":"canonicalized_resource","children":[],"call":["parts join ","parts << ","(send\n  (send\n    (lvar :params) :sort) :collect) join ","p to_s ","params sort collect ","params sort ","params empty? "," sub_resource_params + "," query_parameters_for_signature "," sub_resource_params ","req path ","req bucket ","req path_style? ! ","req path_style? ","AWS S3 Client  dns_compatible_bucket_name? ","(send\n  (send\n    (lvar : sub_resource_params + ) :sort) :collect) join "," sub_resource_params +  sort collect "," sub_resource_params +  sort "," sub_resource_params +  empty? "," sub_resource_ sub_resource_params +  + "," sub_resource_ sub_resource_params +  "]}," AWS Core Signers S3 canonicalized_headers":{"type":"method","name":"canonicalized_headers","children":[],"call":["x_amz == ","(send\n  (lvar :x_amz) :collect) join ","v to_s strip ","v to_s ","x_amz collect ","x_amz sort_by ","k downcase ","k to_s =~ ","k to_s ","req headers select ","req headers ","(send\n  (lvar :x_amz) :collect) join  == ","(send\n  (lvar :(send\n  (lvar :x_amz) :collect) join ) :collect) join ","(send\n  (lvar :x_amz) :collect) join  collect ","(send\n  (lvar :x_amz) :collect) join  sort_by "]}," AWS Core Signers S3 signing_string_date":{"type":"method","name":"signing_string_date","children":[],"call":["Time  now httpdate ","Time  now ","req headers [] ","req headers ","k to_s =~ ","k to_s ","req headers detect "]}," AWS Core Signers S3 string_to_sign":{"type":"method","name":"string_to_sign","children":[],"call":["(send\n  (lvar :req) :http_method) flatten compact join ","(send\n  (lvar :req) :http_method) flatten compact ","(send\n  (lvar :req) :http_method) flatten "," canonicalized_resource "," canonicalized_headers "," signing_string_date ","req headers values_at join ","req headers values_at ","req headers ","req http_method "]}," AWS Core Signers S3 signature":{"type":"method","name":"signature","children":[],"call":["URI  escape ","Base  sign "," credentials secret_access_key "," credentials "," class string_to_sign "," class "," credentials  credentials secret_access_key _access_key "]}," AWS Core Signers S3 authorization":{"type":"method","name":"authorization","children":[],"call":[" signature "," credentials access_key_id "," credentials "]}," AWS Core Signers S3 sign_request":{"type":"method","name":"sign_request","children":[],"call":["req headers []= "," authorization ","req headers "," credentials session_token "," credentials "," credentials session_ credentials session_token  "]}," AWS Core Signers S3 initialize":{"type":"method","name":"initialize","children":[],"call":[]}," AWS Core Signers CloudFront string_to_sign":{"type":"method","name":"string_to_sign","children":[],"call":["Time  now httpdate ","Time  now ","req headers [] ","req headers "]}," AWS Core Signers CloudFront signature":{"type":"method","name":"signature","children":[],"call":[" sign "," string_to_sign "," credentials secret_access_key "," credentials "]}," AWS Core Signers CloudFront sign_request":{"type":"method","name":"sign_request","children":[],"call":["req headers []= "," signature "," credentials access_key_id "," credentials ","req headers "," credentials session_token "]}," AWS Core Signers CloudFront initialize":{"type":"method","name":"initialize","children":[],"call":[]}," AWS Core Signers Base hmac":{"type":"method","name":"hmac","children":[],"call":["OpenSSL HMAC  digest ","OpenSSL Digest Digest  new ","OpenSSL Digest  new "]}," AWS Core Signers Base sign":{"type":"method","name":"sign","children":[],"call":["Base64  encode64 strip ","Base64  encode64 "," hmac "]}," AWS Core Client signature_version":{"type":"method","name":"signature_version","children":[],"call":["@signer sign_request ","signer_class new "," credential_provider ","version == ","AWS Core Signers  const_get "," define_method ","req region ","AWS Core Signers  const_get  new "]}," AWS Core Client sign_request":{"type":"method","name":"sign_request","children":[],"call":[]}," AWS Core Endpoints endpoints":{"type":"method","name":"endpoints","children":[],"call":["JSON  parse ","File  read ","File  join "]}," AWS Core Endpoints hostname":{"type":"method","name":"hostname","children":[],"call":["endpoint [] ","region [] "," endpoints [] [] "," endpoints [] "," endpoints "]}," AWS STS Client sign_request":{"type":"method","name":"sign_request","children":[],"call":[" do_sign_request ","unsigned include? ","(send\n  (send\n    (lvar :req) :params) :find) value ","param name == ","param name ","req params find ","req params "]}," AWS IAM SigningCertificate exists?":{"type":"method","name":"exists?","children":[],"call":["cert id == "," id ","cert id ","SigningCertificateCollection  new each ","SigningCertificateCollection  new "," config "]}," AWS Core Model to_yaml_properties":{"type":"method","name":"to_yaml_properties","children":[],"call":[" instance_variables map - "," instance_variables map "," instance_variables "]}," AWS Core LazyErrorClasses error_const_set?":{"type":"method","name":"error_const_set?","children":[],"call":["c to_sym == ","c to_sym "," constants any? "," constants ","constant to_sym "," constant to_sym s any? "," constant to_sym s ","constant to_sym  to_sym "]}," AWS Core Client to_yaml_properties":{"type":"method","name":"to_yaml_properties","children":[],"call":[" instance_variables map - "," instance_variables map "," instance_variables "]}," AWS Glacier initialize":{"type":"method","name":"initialize","children":[],"call":["options [] "]}," AWS EC2 VPC exists?":{"type":"method","name":"exists?","children":[],"call":[" get_resource "]}," AWS Core Http ConnectionPool build":{"type":"method","name":"build","children":[],"call":["pool send "," pool_options "," allocate "," allocate  send ","  allocate _options "]}," SecureRandom uuid":{"type":"method","name":"uuid","children":[],"call":[]}," AWS Core CredentialProviders DefaultProvider set?":{"type":"method","name":"set?","children":[],"call":[" providers any? "," providers "]}," AWS Core CredentialProviders Provider set?":{"type":"method","name":"set?","children":[],"call":["@cached_credentials [] "," get_credentials ","@cache_mutex synchronize ","Mutex  new ","(and\n  (send\n    (ivar :@cached_credentials) :[]\n    (sym :access_key_id))\n  (send\n    (ivar :@cached_credentials) :[]\n    (sym :secret_access_key))) ! ! ","(and\n  (send\n    (ivar :@cached_credentials) :[]\n    (sym :access_key_id))\n  (send\n    (ivar :@cached_credentials) :[]\n    (sym :secret_access_key))) ! "]}," AWS CloudFormation StackSummary initialize":{"type":"method","name":"initialize","children":[],"call":[" instance_variable_set ","details each_pair "]}," AWS Core IniParser parse":{"type":"method","name":"parse","children":[],"call":[]}," AWS Core CredentialProviders SharedCredentialFileProvider load_profile":{"type":"method","name":"load_profile","children":[],"call":["ini [] "," profile_name ","IniParser  parse ","File  read "," path ","IniParser  parse  [] "]}," AWS Core CredentialProviders SharedCredentialFileProvider load_from_path":{"type":"method","name":"load_from_path","children":[],"call":["credentials []= ","profile [] ","profile key? ","KEY_MAP  inject "," load_profile "," load_profile  [] "," load_profile  key? "," load_ load_profile  "]}," AWS Core CredentialProviders SharedCredentialFileProvider get_credentials":{"type":"method","name":"get_credentials","children":[],"call":[" load_from_path ","File  readable? "," path ","File  exist? "]}," AWS Core CredentialProviders SharedCredentialFileProvider initialize":{"type":"method","name":"initialize","children":[],"call":["ENV  [] ","options [] ","File  join ","Dir  home "]}," ExconHandler handle":{"type":"method","name":"handle","children":[],"call":["resp body= ","excon_resp body "," block_given? ","resp headers= ","excon_resp headers ","resp status= ","excon_resp status to_i ","excon_resp status ","connection request ","Excon  new ","req endpoint ","options []= ","req body_stream ","req headers ","req querystring ","req path ","req http_method downcase to_sym ","req http_method downcase ","req http_method ","connection request  body ","connection request  headers ","connection request  status to_i ","connection request  status ","Excon  new  request "]}," AWS EC2 TaggedCollection with_tag":{"type":"method","name":"with_tag","children":[],"call":[" filter "]}," AWS EC2 V20140501 presigned_copy_snapshot_url":{"type":"method","name":"presigned_copy_snapshot_url","children":[],"call":["req endpoint + + ","req endpoint + ","req uri ","req endpoint "," v4_signer signature "," v4_signer class "," v4_signer "," v4_signer derive_key ","req body= ","req uri= ","/? + ","req url_encoded_params ","req http_method= ","req add_param "," v4_signer credential ","req headers []= ","req host ","req headers "," build_request "," credential_provider session_token "," credential_provider ","Time  now strftime ","Time  now ","client v4_signer signature ","client v4_signer class ","client v4_signer ","client v4_signer derive_key ","client config ec2_endpoint ","client config ","req headers clear ","client v4_signer credential ","Time  parse strftime ","Time  parse ","req remove_param value ","req remove_param ","client build_request "," with_options ","params [] "," build_request  endpoint + + ","client build_request  endpoint + + "," build_request  endpoint + ","client build_request  endpoint + "," build_request  uri ","client build_request  uri "," build_request  endpoint ","client build_request  endpoint "," v4_ v4_signer signature ner  v4_signer signature nature "," v4_client v4_signer signature ner client v4_signer signature nature "," v4_ v4_signer signature ner class "," v4_client v4_signer signature ner class "," v4_ v4_signer signature ner "," v4_client v4_signer signature ner "," v4_ v4_signer signature ner derive_key "," v4_client v4_signer signature ner derive_key "," v4_signer derive_ v4_signer derive_key  "," v4_signer derive_client v4_signer derive_key  "," build_request  body= ","client build_request  body= "," build_request  uri= ","client build_request  uri= "," build_request  url_encoded_params ","client build_request  url_encoded_params "," build_request  http_method= ","client build_request  http_method= "," build_request  add_param ","client build_request  add_param "," v4_ v4_signer signature ner credential "," v4_client v4_signer signature ner credential "," build_request  headers []= ","client build_request  headers []= "," build_request  host ","client build_request  host "," build_request  headers ","client build_request  headers "," build_ build_request uest "," build_client build_request uest "," credential_provider session_ credential_provider session_token  ","Time  Time  now strftime  strftime ","Time  Time  parse strftime  strftime ","Time  req remove_param value  strftime ","Time  Time  now strftime  ","Time  Time  parse strftime  ","Time  req remove_param value  ","client v4_ v4_signer signature ner  v4_signer signature nature ","client v4_client v4_signer signature ner client v4_signer signature nature "," with_options  v4_signer signature ","client v4_ v4_signer signature ner class ","client v4_client v4_signer signature ner class "," with_options  v4_signer class ","client v4_ v4_signer signature ner ","client v4_client v4_signer signature ner "," with_options  v4_signer ","client v4_ v4_signer signature ner derive_key ","client v4_client v4_signer signature ner derive_key ","client v4_signer derive_ v4_signer derive_key  ","client v4_signer derive_client v4_signer derive_key  "," with_options  v4_signer derive_key "," with_options  config ec2_endpoint "," with_options  config "," build_request  headers clear ","client build_request  headers clear ","client v4_ v4_signer signature ner credential ","client v4_client v4_signer signature ner credential "," with_options  v4_signer credential "," build_request  remove_param value ","client build_request  remove_param value "," build_request  remove_param ","client build_request  remove_param ","client build_ build_request uest ","client build_client build_request uest "," with_options  build_request "]}," AWS EC2 V20140501 copy_snapshot":{"type":"method","name":"copy_snapshot","children":[],"call":[" basic_copy_snapshot ","params []= "," presigned_copy_snapshot_url ","params dup ","params dup  []= ","params dup  dup "]}," AWS Core Http Request remove_param":{"type":"method","name":"remove_param","children":[],"call":["@params delete ","p name == ","p name ","@params find "]}," AWS Core CredentialProviders AssumeRoleProvider get_credentials":{"type":"method","name":"get_credentials","children":[],"call":["role [] ","role [] [] ","@sts assume_role ","@sts assume_role  [] ","@sts assume_role  [] [] ","@sts assume_@sts assume_role  "]}," AWS Core CredentialProviders AssumeRoleProvider near_expiration?":{"type":"method","name":"near_expiration?","children":[],"call":["@expiration utc <= ","Time  now utc + ","5 * ","Time  now utc ","Time  now ","@expiration utc "]}," AWS Core CredentialProviders AssumeRoleProvider credentials":{"type":"method","name":"credentials","children":[],"call":[" refresh "," near_expiration? "]}," AWS Core CredentialProviders AssumeRoleProvider initialize":{"type":"method","name":"initialize","children":[],"call":["STS  new ","@options delete ","options dup ","options dup  delete "]}," AWS EC2 Client retryable_error?":{"type":"method","name":"retryable_error?","children":[],"call":["response error is_a? ","response error "]}," AWS SimpleEmailService Identity delivery_topic":{"type":"method","name":"delivery_topic","children":[],"call":["SNS Topic  new "," config "," delivery_topic_arn "," delivery_topic_ delivery_topic_arn  "]}," AWS SimpleEmailService Identity delivery_topic=":{"type":"method","name":"delivery_topic=","children":[],"call":[" delivery_topic_arn= ","topic arn ","topic respond_to? "," delivery_topic_topic arn = ","topic topic arn  "]}," AWS Core Signature Version4 hash":{"type":"method","name":"hash","children":[],"call":["Digest SHA256  digest "]}," AWS Core Signature Version4 hex16":{"type":"method","name":"hex16","children":[],"call":["string unpack first ","string unpack "]}," AWS Core Signature Version4 canonical_querystring":{"type":"method","name":"canonical_querystring","children":[],"call":[" url_encoded_params "," http_method to_s upcase == "," http_method to_s upcase "," http_method to_s "," http_method "]}," AWS Core Signature Version4 payload":{"type":"method","name":"payload","children":[],"call":[" body "]}," AWS Core Signature Version4 canonical_uri":{"type":"method","name":"canonical_uri","children":[],"call":[" path "]}," AWS Core Signature Version4 action_name":{"type":"method","name":"action_name","children":[],"call":[" http_method to_s upcase "," http_method to_s "," http_method "]}," AWS Core Client api_config":{"type":"method","name":"api_config","children":[],"call":[]}," AWS Core Client extract_error":{"type":"method","name":"extract_error","children":[],"call":["Errors ClientError  new ","status >= ","Errors ServerError  new "," error_class new "," error_class ","TimeoutError  new ","response timeout? ","response http_response ","response http_request "," extract_error_details ","response http_response status ","NetworkError  new ","response network_error? ","response http_response status  >= ","response http_response response http_response status  "]}," AWS Core Client QueryXML ErrorParser extract_error_details":{"type":"method","name":"extract_error_details","children":[],"call":["error [] ","errors_module GRAMMAR  parse "," errors_module ","response http_response body ","response http_response ","response http_response status >= ","response http_response status ","errors_module GRAMMAR  parse  [] ","errors_module GRAMMAR  parse s_module GRAMMAR  parse "," errors_module GRAMMAR  parse s_module ","response http_response response http_response body  "]}," AWS Core Client QueryXML define_client_method":{"type":"method","name":"define_client_method","children":[],"call":["response data= ","parser simulate "," class xml_parsers [] "," class xml_parsers "," class "," simulate_response ","parser parse ","response http_response body ","response http_response "," process_response ","request add_param ","parser request_params each ","parser request_params "," class option_parsers [] "," class option_parsers ","request http_method= ","request headers []= ","request headers ","Time  now utc strftime ","Time  now utc ","Time  now "," configure_request "," add_client_request_method "," class xml_parsers []  simulate "," class option_parsers []  simulate "," class xml_ class xml_parsers [] s [] "," class xml_ class option_parsers [] s [] "," class xml_ class xml_parsers [] s "," class xml_ class option_parsers [] s "," class xml_parsers []  parse "," class option_parsers []  parse "," class xml_parsers []  request_params each "," class option_parsers []  request_params each "," class xml_parsers []  request_params "," class option_parsers []  request_params "," class option_ class xml_parsers [] s [] "," class option_ class option_parsers [] s [] "," class option_ class xml_parsers [] s "," class option_ class option_parsers [] s ","Time  Time  now utc strftime  utc strftime ","Time  Time  now utc strftime  utc ","Time  Time  now utc strftime  "]}," AWS Core Client QueryXML define_parsers":{"type":"method","name":"define_parsers","children":[],"call":[" xml_parsers []= ","XML Parser  new ","op [] "," xml_parsers "," option_parsers []= ","OptionGrammar  customize "," option_parsers "," api_config [] each "," api_config [] "," api_config "]}," AWS Core Client QueryXML xml_parsers":{"type":"method","name":"xml_parsers","children":[],"call":[]}," AWS Core Client QueryXML option_parsers":{"type":"method","name":"option_parsers","children":[],"call":[]}," AWS Core Client QueryXML extended":{"type":"method","name":"extended","children":[],"call":[]}," AWS Core Client QueryJSON ErrorParser extract_error_details":{"type":"method","name":"extract_error_details","children":[],"call":["json [] ","code == ","matches [] ","type match ","JSON  load ","response http_response body ","response http_response ","response http_response status >= ","response http_response status ","matches []  == ","type match  [] ","json []  match ","response http_response response http_response body  "]}," AWS Core Client QueryJSON define_client_method":{"type":"method","name":"define_client_method","children":[],"call":["MetaUtils  extend_method "," simulate_response ","JSON  load ","response_body == ","response http_response body ","response http_response "," process_response ","request body= ","parser to_json ","request headers []= ","request headers "," class TARGET_PREFIX  + "," class "," class option_parsers [] "," class option_parsers "," configure_request "," add_client_request_method ","response http_response body  == "," class option_parsers []  to_json "," class option_ class option_parsers [] s [] "," class option_ class option_parsers [] s "]}," AWS Core Client QueryJSON define_client_methods":{"type":"method","name":"define_client_methods","children":[],"call":[" option_parsers []= ","OptionGrammar  customize ","op [] "," option_parsers "," api_config [] each "," api_config [] "," api_config "]}," AWS Core Client QueryJSON option_parsers":{"type":"method","name":"option_parsers","children":[],"call":[]}," AWS Core Client QueryJSON extended":{"type":"method","name":"extended","children":[],"call":[]}," AWS Core Signature Version2 included":{"type":"method","name":"included","children":[],"call":[]}," AWS Core CredentialProviders DefaultProvider get_credentials":{"type":"method","name":"get_credentials","children":[],"call":["provider credentials "," providers each "," providers "]}," AWS Core Http Request read_timeout":{"type":"method","name":"read_timeout","children":[],"call":[" default_read_timeout "]}," AWS SQS Request uri":{"type":"method","name":"uri","children":[],"call":[" path "]}," AWS Core RESTClient ErrorParser extract_error_details":{"type":"method","name":"extract_error_details","children":[],"call":["error [] ","errors_module GRAMMAR  parse "," errors_module ","response http_response body ","response http_response ","response http_response status >= ","response http_response status ","errors_module GRAMMAR  parse  [] ","errors_module GRAMMAR  parse s_module GRAMMAR  parse "," errors_module GRAMMAR  parse s_module ","response http_response response http_response body  "]}," AWS Core RESTClient define_client_method":{"type":"method","name":"define_client_method","children":[],"call":["response data= ","handler simulate "," class output_handlers [] "," class output_handlers "," class "," simulate_response ","handler extract_data "," process_response ","handler populate_request "," class input_handlers [] "," class input_handlers "," configure_request "," add_client_request_method "," class output_handlers []  simulate "," class input_handlers []  simulate "," class output_ class output_handlers [] s [] "," class output_ class input_handlers [] s [] "," class output_ class output_handlers [] s "," class output_ class input_handlers [] s "," class output_handlers []  extract_data "," class input_handlers []  extract_data "," class output_handlers []  populate_request "," class input_handlers []  populate_request "," class input_ class output_handlers [] s [] "," class input_ class input_handlers [] s [] "," class input_ class output_handlers [] s "," class input_ class input_handlers [] s "]}," AWS Core RESTClient define_handlers":{"type":"method","name":"define_handlers","children":[],"call":[" output_handlers []= ","OutputHandler  new "," output_handlers "," input_handlers []= ","InputHandler  new "," input_handlers "," api_config [] each_pair "," api_config [] "," api_config "]}," AWS Core RESTClient output_handlers":{"type":"method","name":"output_handlers","children":[],"call":[]}," AWS Core RESTClient input_handlers":{"type":"method","name":"input_handlers","children":[],"call":[]}," AWS Core RESTClient extended":{"type":"method","name":"extended","children":[],"call":[]}," AWS Core RESTClient OutputHandler extract_data":{"type":"method","name":"extract_data","children":[],"call":["@parser parse ","response http_response body ","response http_response ","data []= ","response http_response headers [] ","response http_response headers ","(or\n  (send\n    (ivar :@http) :[]\n    (sym :response_headers))\n  (hash)) each_pair ","@http [] ","@parser parse  []= "]}," AWS Core RESTClient OutputHandler initialize":{"type":"method","name":"initialize","children":[],"call":["XML Parser  new ","operation [] "]}," AWS Core RESTClient InputHandler params_to_xml":{"type":"method","name":"params_to_xml","children":[],"call":["Options XMLSerializer  new serialize ","Options XMLSerializer  new "," rules "," operation_name "," namespace "]}," AWS Core RESTClient InputHandler build_body":{"type":"method","name":"build_body","children":[],"call":[" params_to_xml ","params [] "," rules [] [] != "," rules [] [] "," rules [] "," rules "," http [] "," http ","params empty? "]}," AWS Core RESTClient InputHandler extract_headers":{"type":"method","name":"extract_headers","children":[],"call":["headers []= ","params delete ","(or\n  (send\n    (send nil :http) :[]\n    (sym :request_headers))\n  (hash)) each_pair "," http [] "," http "]}," AWS Core RESTClient InputHandler extract_uri":{"type":"method","name":"extract_uri","children":[],"call":["uri << ","querystring_parts join ","querystring_parts empty? ","querystring_parts << ","part sub ","UriEscape  escape ","params delete ","param_name to_sym ","part match [] ","part match ","querystring to_s split each ","querystring to_s split ","querystring to_s "," raise ","param_name [] ","param_name [] to_sym ","path gsub "," http [] split "," http [] "," http ","UriEscape  escape s delete ","params delete s delete ","UriEscape  escape _name to_sym ","params delete _name to_sym ","part match []  to_sym ","UriEscape  escape _name [] ","params delete _name [] ","part match []  [] ","UriEscape  escape _name [] to_sym ","params delete _name [] to_sym ","part match []  [] to_sym "]}," AWS Core RESTClient InputHandler populate_request":{"type":"method","name":"populate_request","children":[],"call":["request body= "," build_body ","request headers []= ","request headers "," extract_headers each_pair "," extract_headers ","request uri= "," extract_uri ","request http_method= "," http [] "," http ","Options Validator  new validate! ","Options Validator  new "," rules "]}," AWS Core RESTClient InputHandler initialize":{"type":"method","name":"initialize","children":[],"call":["configuration [] "]}," AWS Core QueryClient ErrorParser extract_error_details":{"type":"method","name":"extract_error_details","children":[],"call":["error [] ","errors_module GRAMMAR  parse "," errors_module ","response http_response body ","response http_response ","response http_response status >= ","response http_response status ","errors_module GRAMMAR  parse  [] ","errors_module GRAMMAR  parse s_module GRAMMAR  parse "," errors_module GRAMMAR  parse s_module ","response http_response response http_response body  "]}," AWS Core QueryClient define_client_method":{"type":"method","name":"define_client_method","children":[],"call":["response data= ","parser simulate "," class xml_parsers [] "," class xml_parsers "," class "," simulate_response ","parser parse ","response http_response body ","response http_response "," process_response ","request add_param ","parser request_params each ","parser request_params "," class option_parsers [] "," class option_parsers ","request headers []= ","request headers ","Time  now utc strftime ","Time  now utc ","Time  now "," configure_request "," add_client_request_method ","request body= ","request url_encoded_params "," class xml_parsers []  simulate "," class option_parsers []  simulate "," class xml_ class xml_parsers [] s [] "," class xml_ class option_parsers [] s [] "," class xml_ class xml_parsers [] s "," class xml_ class option_parsers [] s "," class xml_parsers []  parse "," class option_parsers []  parse "," class xml_parsers []  request_params each "," class option_parsers []  request_params each "," class xml_parsers []  request_params "," class option_parsers []  request_params "," class option_ class xml_parsers [] s [] "," class option_ class option_parsers [] s [] "," class option_ class xml_parsers [] s "," class option_ class option_parsers [] s ","Time  Time  now utc strftime  utc strftime ","Time  Time  now utc strftime  utc ","Time  Time  now utc strftime  "]}," AWS Core QueryClient define_parsers":{"type":"method","name":"define_parsers","children":[],"call":[" xml_parsers []= ","XML Parser  new ","op [] "," xml_parsers "," option_parsers []= ","OptionGrammar  customize "," option_parsers "," api_config [] each "," api_config [] "," api_config "]}," AWS Core QueryClient xml_parsers":{"type":"method","name":"xml_parsers","children":[],"call":[]}," AWS Core QueryClient option_parsers":{"type":"method","name":"option_parsers","children":[],"call":[]}," AWS Core QueryClient extended":{"type":"method","name":"extended","children":[],"call":[]}," AWS Core JSONClient ErrorParser extract_error_details":{"type":"method","name":"extract_error_details","children":[],"call":["json [] ","code == ","matches [] ","type match "," JSON  load ","response http_response body ","response http_response ","response http_response status >= ","response http_response status ","matches []  == ","type match  [] ","json []  match ","response http_response response http_response body  "]}," AWS Core JSONClient define_client_method":{"type":"method","name":"define_client_method","children":[],"call":["MetaUtils  extend_method "," simulate_response "," JSON  load ","response_body == ","response http_response body ","response http_response "," process_response ","request body= ","parser to_json ","request headers []= ","request headers "," class TARGET_PREFIX  + "," class "," class option_grammars [] "," class option_grammars "," configure_request "," add_client_request_method ","response http_response body  == "," class option_grammars []  to_json "]}," AWS Core JSONClient define_grammars":{"type":"method","name":"define_grammars","children":[],"call":[" option_grammars []= ","OptionGrammar  customize ","op [] "," option_grammars "," api_config [] each "," api_config [] "," api_config "]}," AWS Core JSONClient option_grammars":{"type":"method","name":"option_grammars","children":[],"call":[]}," AWS Core JSONClient extended":{"type":"method","name":"extended","children":[],"call":[]}," ConnectionPool _create_session":{"type":"method","name":"_create_session","children":[],"call":["Session  start "," logger "," log_wire_trace? "," open_timeout "]}," ConnectionPool Session start":{"type":"method","name":"start","children":[],"call":["Session  new ","connection key ","http start ","http use_ssl= ","http verify_mode= ","http ca_path= ","connection ssl_ca_path ","http ca_file= ","connection ssl_ca_file ","connection ssl_verify_peer? ","connection ssl? ","http open_timeout= ","options [] ","http set_debug_output ","Net HTTP  new ","http_args << ","connection proxy_password ","connection proxy_user ","connection proxy_port ","connection proxy_address ","connection proxy? ","connection port ","connection host ","Net HTTP  new  start ","Net HTTP  new  use_ssl= ","Net HTTP  new  verify_mode= ","Net HTTP  new  ca_path= ","Net HTTP  new  ca_file= ","Net HTTP  new  open_timeout= ","Net HTTP  new  set_debug_output ","Net HTTP  new _args << "]}," ConnectionPool Session read_timeout=":{"type":"method","name":"read_timeout=","children":[],"call":[" http_session read_timeout= "," http_session "]}," AWS Core RESTRequestBuilder build_body":{"type":"method","name":"build_body","children":[],"call":["@xml_serializer serialize ","params [] ","@rules [] [] != ","@rules [] [] ","@rules [] ","@http [] ","params empty? "]}," AWS Core RESTClient extract_error_details":{"type":"method","name":"extract_error_details","children":[],"call":["error [] ","errors_module GRAMMAR  parse "," errors_module ","response http_response body ","response http_response ","response http_response status >= ","response http_response status ","errors_module GRAMMAR  parse  [] ","errors_module GRAMMAR  parse s_module GRAMMAR  parse "," errors_module GRAMMAR  parse s_module ","response http_response response http_response body  "]}," AWS Core RESTClient response_parser_for":{"type":"method","name":"response_parser_for","children":[],"call":[]}," AWS Core RESTClient request_builder_for":{"type":"method","name":"request_builder_for","children":[],"call":[]}," AWS Glacier Request initialize":{"type":"method","name":"initialize","children":[],"call":[" headers []= "," headers "]}," AWS S3 WebsiteConfiguration error_key":{"type":"method","name":"error_key","children":[],"call":["(or\n  (send\n    (lvar :options) :[]\n    (sym :error_document))\n  (hash)) [] ","options [] "]}," AWS S3 WebsiteConfiguration index_suffix":{"type":"method","name":"index_suffix","children":[],"call":["(or\n  (send\n    (lvar :options) :[]\n    (sym :index_document))\n  (hash)) [] ","options [] "]}," AWS S3 WebsiteConfiguration eql?":{"type":"method","name":"eql?","children":[],"call":["other to_hash == "," to_hash ","other to_hash ","other is_a? "]}," AWS S3 WebsiteConfiguration to_hash":{"type":"method","name":"to_hash","children":[],"call":[" error_document_key "," index_document_suffix "]}," AWS SQS Request region":{"type":"method","name":"region","children":[],"call":["matches [] ","host match ","URI  parse host ","URI  parse ","param value ","p name == ","p name "," params find "," params ","host match  [] ","URI  parse host  match ","URI  parse URI  parse host  "]}}