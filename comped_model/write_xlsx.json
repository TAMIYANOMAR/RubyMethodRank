{" ZipFileUtils encode_path":{"type":"method","name":"encode_path","children":[],"call":[]}," ZipFileUtils relative":{"type":"method","name":"relative","children":[],"call":[]}," ZipFileUtils each_file_for":{"type":"method","name":"each_file_for","children":[],"call":[]}," ZipFileUtils each_dir_for":{"type":"method","name":"each_dir_for","children":[],"call":[]}," ZipFileUtils unzip":{"type":"method","name":"unzip","children":[],"call":[]}," ZipFileUtils zip":{"type":"method","name":"zip","children":[],"call":[]}," Writexlsx Worksheet convert_date_time_value":{"type":"method","name":"convert_date_time_value","children":[],"call":["param []= "," convert_date_time ","param [] ","param [] =~ "," convert_ convert_date_time  "]}," Writexlsx Worksheet prepare_filter_column":{"type":"method","name":"prepare_filter_column","children":[],"call":[" raise ","col > ","col < ","col >= "," substitute_cellref ","col =~ ","col to_s =~ ","col to_s "]}," Writexlsx Worksheet set_active_pane_and_cell_selections":{"type":"method","name":"set_active_pane_and_cell_selections","children":[],"call":["@selections << ","col > ","@selections << << << ","@selections << << "," xl_rowcol_to_cell ","row > "]}," Writexlsx Worksheet valid_criteria_type":{"type":"method","name":"valid_criteria_type","children":[],"call":[]}," Writexlsx Worksheet print_across?":{"type":"method","name":"print_across?","children":[],"call":["@print_style across "]}," Writexlsx Worksheet remove_white_space":{"type":"method","name":"remove_white_space","children":[],"call":["margin gsub ","margin respond_to? "]}," Writexlsx Worksheet drawing?":{"type":"method","name":"drawing?","children":[],"call":["@drawing ! ! ","@drawing ! "]}," Writexlsx Worksheet header_footer_changed?":{"type":"method","name":"header_footer_changed?","children":[],"call":["@header_footer_changed ! ! ","@header_footer_changed ! "]}," Writexlsx Worksheet orientation?":{"type":"method","name":"orientation?","children":[],"call":["@orientation ! ! ","@orientation ! "]}," Writexlsx Worksheet page_setup_changed?":{"type":"method","name":"page_setup_changed?","children":[],"call":["@print_style page_setup_changed "]}," Writexlsx Worksheet print_gridlines?":{"type":"method","name":"print_gridlines?","children":[],"call":["@print_gridlines ! ! ","@print_gridlines ! "]}," Writexlsx Worksheet print_headers?":{"type":"method","name":"print_headers?","children":[],"call":["@print_headers ! ! ","@print_headers ! "]}," Writexlsx Worksheet vcenter?":{"type":"method","name":"vcenter?","children":[],"call":["@vcenter ! ! ","@vcenter ! "]}," Writexlsx Worksheet hcenter?":{"type":"method","name":"hcenter?","children":[],"call":["@hcenter ! ! ","@hcenter ! "]}," Writexlsx Worksheet print_options_changed?":{"type":"method","name":"print_options_changed?","children":[],"call":["@print_options_changed ! ! ","@print_options_changed ! "]}," Writexlsx Worksheet date_1904?":{"type":"method","name":"date_1904?","children":[],"call":["@workbook date_1904? "]}," Writexlsx Worksheet autofilter_ref?":{"type":"method","name":"autofilter_ref?","children":[],"call":["@autofilter_ref ! ! ","@autofilter_ref ! "]}," Writexlsx Worksheet protect?":{"type":"method","name":"protect?","children":[],"call":["@protect ! ! ","@protect ! "]}," Writexlsx Worksheet screen_gridlines?":{"type":"method","name":"screen_gridlines?","children":[],"call":["@screen_gridlines ! ! ","@screen_gridlines ! "]}," Writexlsx Worksheet show_zeros?":{"type":"method","name":"show_zeros?","children":[],"call":["@show_zeros ! ! ","@show_zeros ! "]}," Writexlsx Worksheet right_to_left?":{"type":"method","name":"right_to_left?","children":[],"call":["@right_to_left ! ! ","@right_to_left ! "]}," Writexlsx Worksheet page_view?":{"type":"method","name":"page_view?","children":[],"call":["@page_view ! ! ","@page_view ! "]}," Writexlsx Worksheet zoom_scale_normal?":{"type":"method","name":"zoom_scale_normal?","children":[],"call":["@zoom_scale_normal ! ! ","@zoom_scale_normal ! "," ptrue? "]}," Writexlsx Worksheet tab_color?":{"type":"method","name":"tab_color?","children":[],"call":["@tab_color != "," ptrue? "]}," Writexlsx Worksheet filter_on?":{"type":"method","name":"filter_on?","children":[],"call":["@filter_on != "," ptrue? "]}," Writexlsx Worksheet fit_page?":{"type":"method","name":"fit_page?","children":[],"call":["@print_style fit_page ","@page_setup fit_page "]}," Writexlsx Worksheet quote_sheetname":{"type":"method","name":"quote_sheetname","children":[],"call":["sheetname =~ ","name gsub ","(send\n  (lvar :name) :=~\n  (regexp\n    (str \"^'\")\n    (regopt))) ! ","name =~ ","sheetname dup ","sheetname gsub  =~ ","sheetsheetname dup  =~ ","name gsub  gsub ","sheetname dup  gsub ","(send\n  (lvar :name gsub ) :=~\n  (regexp\n    (str \"^'\")\n    (regopt))) ! ","(send\n  (lvar :sheetname dup ) :=~\n  (regexp\n    (str \"^'\")\n    (regopt))) ! ","name gsub  =~ ","sheetname dup  =~ ","sheetname gsub  dup ","sheetsheetname dup  dup "]}," Writexlsx Worksheet convert_name_area":{"type":"method","name":"convert_name_area","children":[],"call":[" quote_sheetname "," name ","row_col_only ! ","range1 == ","col_char_2 + ","col_char_1 + ","col_num_2 == ","@xls_colmax - ","col_num_1 == ","row_num_2 == ","@xls_rowmax - ","row_num_1 == ","row_num_2 + ","row_num_1 + "," xl_col_to_name ","COL_MAX  - ","ROW_MAX  - ","col_char_1 +  == "," xl_col_to_name  + "]}," Writexlsx Worksheet shared_string_index":{"type":"method","name":"shared_string_index","children":[],"call":["@workbook shared_string_index "]}," Writexlsx Worksheet xf":{"type":"method","name":"xf","children":[],"call":["format xf_index ","format kind_of? "]}," Writexlsx Worksheet calculate_spans":{"type":"method","name":"calculate_spans","children":[],"call":["spans []= ","row_num / ","row_num == ","(send\n  (lvar :row_num) :+\n  (int 1)) % == ","(send\n  (lvar :row_num) :+\n  (int 1)) % ","row_num + ","col_num > ","col_num < ","span_min ! ","@table [] [] ","@table [] ","(irange\n  (ivar :@dim_colmin)\n  (ivar :@dim_colmax)) each ","(irange\n  (ivar :@dim_rowmin)\n  (ivar :@dim_rowmax)) each ","@cell_data_table [] [] ","@cell_data_table [] "," calc_spans ","@comments [] "]}," Writexlsx Worksheet store_col_max_min_values":{"type":"method","name":"store_col_max_min_values","children":[],"call":["col > ","@dim_colmax ! ","col < ","@dim_colmin ! "]}," Writexlsx Worksheet store_row_max_min_values":{"type":"method","name":"store_row_max_min_values","children":[],"call":["row > ","@dim_rowmax ! ","row < ","@dim_rowmin ! "]}," Writexlsx Worksheet store_row_col_max_min_values":{"type":"method","name":"store_row_col_max_min_values","children":[],"call":[" store_col_max_min_values "," store_row_max_min_values "]}," Writexlsx Worksheet check_dimensions":{"type":"method","name":"check_dimensions","children":[],"call":[" raise ","col >= ","col ! ","row >= ","row ! "]}," Writexlsx Worksheet check_dimensions_and_update_max_min_values":{"type":"method","name":"check_dimensions_and_update_max_min_values","children":[],"call":[" store_col_max_min_values ","ignore_col == "," store_row_max_min_values ","ignore_row == "," check_dimensions "]}," Writexlsx Worksheet row_col_notation":{"type":"method","name":"row_col_notation","children":[],"call":[" substitute_cellref ","args [] =~ ","args [] "]}," Writexlsx Worksheet store_data_to_table":{"type":"method","name":"store_data_to_table","children":[],"call":["@table [] []= ","@table [] ","@table []= ","@cell_data_table [] []= ","@cell_data_table [] ","@cell_data_table []= ","cell_data col ","cell_data row ","cell_data cell_data col  ","cell_data cell_data row  "]}," Writexlsx Worksheet write_cf_rule":{"type":"method","name":"write_cf_rule","children":[],"call":["@writer end_tag "," write_formula_tag ","param [] ","param [] == ","@writer start_tag ","attributes << << ","attributes << ","@writer tag_elements "," write_data_bar "," write_color_scale ","@writer empty_tag ","$~ [] ","param [] =~ "]}," Writexlsx Worksheet write_conditional_formatting":{"type":"method","name":"write_conditional_formatting","children":[],"call":["@writer end_tag "," write_cf_rule ","params each ","@writer start_tag ","@writer tag_elements ","cond_format write_cf_rule ","cond_formats each "]}," Writexlsx Worksheet write_conditional_formats":{"type":"method","name":"write_conditional_formats","children":[],"call":[" write_conditional_formatting ","@cond_formats [] ","ranges each ","ranges empty? ","@cond_formats keys sort ","@cond_formats keys ","@cond_formats keys sort each ","@cond_formats keys sort  each ","@cond_formats keys sort  empty? "]}," Writexlsx Worksheet write_formula_tag":{"type":"method","name":"write_formula_tag","children":[],"call":["@writer data_element ","data sub ","data respond_to? ","@writer data sub _element ","data sub  sub ","data sub  respond_to? "]}," Writexlsx Worksheet write_formula_2":{"type":"method","name":"write_formula_2","children":[],"call":["@writer data_element ","formula sub ","formula respond_to? ","formula sub  sub ","formula sub  respond_to? "]}," Writexlsx Worksheet write_formula_1":{"type":"method","name":"write_formula_1","children":[],"call":["@writer data_element ","formula sub ","formula respond_to? ","formula join ","formula kind_of? ","formula sub  sub ","formula sub  respond_to? ","formula sub  join ","formula sub  kind_of? "]}," Writexlsx Worksheet write_data_validation":{"type":"method","name":"write_data_validation","children":[],"call":["@writer end_tag "," write_formula_2 ","param [] "," write_formula_1 ","@writer start_tag ","attributes << << ","attributes << ","param [] != ","param [] == "," xl_range "," xl_rowcol_to_cell ","col_first == ","row_first == ","col_first > ","row_first > ","sqref != ","param [] each ","@writer tag_elements "]}," Writexlsx Worksheet write_data_validations":{"type":"method","name":"write_data_validations","children":[],"call":["@writer end_tag "," write_data_validation ","@validations each ","@writer start_tag ","@validations size ","@validations empty? ","@writer tag_elements "," write_some_elements ","validation write_data_validation "]}," Writexlsx Worksheet write_color":{"type":"method","name":"write_color","children":[],"call":["writer empty_tag "]}," Writexlsx Worksheet write_vert_align":{"type":"method","name":"write_vert_align","children":[],"call":["writer empty_tag "]}," Writexlsx Worksheet write_underline":{"type":"method","name":"write_underline","children":[],"call":["writer empty_tag "," val ","underline == "," underline_attributes "," underline_ underline_attributes  "]}," Writexlsx Worksheet write_font":{"type":"method","name":"write_font","children":[],"call":["writer end_tag ","writer empty_tag ","format font_scheme ","format hyperlink == ","format hyperlink ","format font == ","format font ","format font_family "," write_color "," get_palette_color ","color != ","color nil? ! ","color nil? ","theme != ","theme nil? ! ","theme nil? ","format color ","format theme ","format size "," write_vert_align ","format font_script == ","format font_script "," write_underline ","format underline ","format underline? ","format shadow? ","format outline? ","format strikeout? ","format italic? ","format bold? ","writer start_tag ","writer tag_elements "," ptrue? "," write_ get_palette_color  "," write_format color  "," get_palette_ get_palette_color  "," get_palette_format color  "," get_palette_color  != ","format color  != "," get_palette_color  nil? ! ","format color  nil? ! "," get_palette_color  nil? ","format color  nil? ","format theme  != ","format theme  nil? ! ","format theme  nil? ","format  get_palette_color  ","format format color  ","format format theme  "]}," Writexlsx Worksheet write_legacy_drawing":{"type":"method","name":"write_legacy_drawing","children":[],"call":["@writer empty_tag ","@hlink_count + "," has_comments? "," increment_rel_id_and_write_r_id "," has_vml? "," increment_rel_@hlink_count + _and_write_r_@hlink_count +  "]}," Writexlsx Worksheet write_drawing":{"type":"method","name":"write_drawing","children":[],"call":["@writer empty_tag "]}," Writexlsx Worksheet write_drawings":{"type":"method","name":"write_drawings","children":[],"call":[" write_drawing ","@hlink_count + "," drawing? "," increment_rel_id_and_write_r_id "," drawings? "]}," Writexlsx Worksheet write_sheet_protection":{"type":"method","name":"write_sheet_protection","children":[],"call":["@writer empty_tag ","attributes << << ","attributes << ","@protect [] ! ","@protect [] "," protect? "," ptrue? "]}," Writexlsx Worksheet write_tab_color":{"type":"method","name":"write_tab_color","children":[],"call":["@writer empty_tag "," get_palette_color "," tab_color? "," palette_color "]}," Writexlsx Worksheet write_hyperlink_internal":{"type":"method","name":"write_hyperlink_internal","children":[],"call":["@writer empty_tag ","attributes << << ","attributes << "," xl_rowcol_to_cell ","link write_internal_attributes "]}," Writexlsx Worksheet write_hyperlink_external":{"type":"method","name":"write_hyperlink_external","children":[],"call":["@writer empty_tag ","attributes << << ","attributes << "," xl_rowcol_to_cell ","link write_external_attributes "]}," Writexlsx Worksheet write_hyperlinks":{"type":"method","name":"write_hyperlinks","children":[],"call":["@writer end_tag "," write_hyperlink_internal ","type == "," write_hyperlink_external ","@hlink_refs each ","@writer start_tag ","@hlink_refs empty? ","@writer tag_elements ","@hlink_refs << ","link [] ","@external_hyper_links << ","link_type == ","@cell_data_table [] [] display_url_string? ","@cell_data_table [] [] ","@cell_data_table [] "," ptrue? ","@hyperlinks [] [] ","@hyperlinks [] ","col_nums each ","@hyperlinks [] keys sort ","@hyperlinks [] keys ","row_nums each ","row_nums empty? ","@hyperlinks keys sort ","@hyperlinks keys ","aref [] link_type ","aref [] ","link url ","link link_type == ","link link_type ","link display= ","link url_str ","@hyperlinks keys sort each ","@writer empty_tag ","hlink_attributes each ","hlink_attributes empty? ","hlink_attributes << ","link attributes ","link external_hyper_link ","link respond_to? ","link display_on "," write_hyper@hyperlinks [] [] _internal "," write_hyper@hyperlinks [] [] _external ","@h@hyperlinks [] [] _refs each ","@h@hyperlinks [] [] _refs empty? ","@h@hyperlinks [] [] _refs << ","@hyperlinks [] []  [] ","@external_hyper_@hyperlinks [] [] s << ","link []  == ","@hyperlinks [] [] _type == ","@cell_data_table [] [] link [] _url_string? ","@hyper@hyperlinks [] [] s [] [] ","@hyper@hyperlinks [] [] s [] ","@hyperlinks [] keys sort  each ","@hyper@hyperlinks [] [] s [] keys sort ","@hyper@hyperlinks [] [] s [] keys ","@hyperlinks keys sort  each ","@hyperlinks keys sort  empty? ","@hyper@hyperlinks [] [] s keys sort ","@hyper@hyperlinks [] [] s keys ","aref [] link []  ","aref [] @hyperlinks [] [] _type ","@hyperlinks [] []  url ","link link []  == ","@hyperlinks [] []  @hyperlinks [] [] _type == ","link link []  ","@hyperlinks [] []  @hyperlinks [] [] _type ","link link [] = ","@hyperlinks [] []  display= ","@hyperlinks [] []  url_str ","@hyper@hyperlinks [] [] s keys sort each ","h@hyperlinks [] [] _attributes each ","h@hyperlinks [] [] _attributes empty? ","h@hyperlinks [] [] _attributes << ","@hyperlinks [] []  attributes ","@hyperlinks [] []  external_hyper_@hyperlinks [] []  ","@hyperlinks [] []  respond_to? ","link link [] _on ","@hyperlinks [] []  display_on "]}," Writexlsx Worksheet write_custom_filter":{"type":"method","name":"write_custom_filter","children":[],"call":["@writer empty_tag ","attributes << << ","attributes << ","operator == "," raise ","operators [] ","operators []  == ","operators [] s [] "]}," Writexlsx Worksheet write_custom_filters":{"type":"method","name":"write_custom_filters","children":[],"call":["@writer end_tag "," write_custom_filter ","tokens [] ","@writer start_tag ","tokens [] == ","tokens size == ","tokens size ","@writer tag_elements "]}," Writexlsx Worksheet write_filter":{"type":"method","name":"write_filter","children":[],"call":["@writer empty_tag "]}," Writexlsx Worksheet write_filters":{"type":"method","name":"write_filters","children":[],"call":["@writer end_tag "," write_filter ","filters each ","@writer start_tag ","@writer empty_tag ","filters [] == ","filters [] ","filters size == ","filters size ","@writer tag_elements ","non_blanks sort each ","non_blanks sort ","non_blanks empty? ","filters != ","filter =~ ","filters reject ","filter to_s =~ ","filter to_s "]}," Writexlsx Worksheet write_filter_column":{"type":"method","name":"write_filter_column","children":[],"call":["@writer end_tag "," write_custom_filters "," write_filters ","type == ","@writer start_tag ","@writer tag_elements "]}," Writexlsx Worksheet write_autofilters":{"type":"method","name":"write_autofilters","children":[],"call":[" write_filter_column ","@filter_type [] ","@filter_cols [] ","(irange\n  (lvar :col1)\n  (lvar :col2)) each ","col - ","@filter_@filter_type []  [] "]}," Writexlsx Worksheet write_auto_filter":{"type":"method","name":"write_auto_filter","children":[],"call":["@writer empty_tag ","@writer end_tag "," write_autofilters ","@writer start_tag "," filter_on? "," autofilter_ref? ","@writer tag_elements "]}," Writexlsx Worksheet write_brk":{"type":"method","name":"write_brk","children":[],"call":["@writer empty_tag "]}," Writexlsx Worksheet write_breaks":{"type":"method","name":"write_breaks","children":[],"call":["@writer end_tag "," write_brk ","page_breaks each ","@writer start_tag ","page_breaks empty? ","page_breaks size "," raise "," sort_pagebreaks ","@print_style vbreaks ","@print_style hbreaks ","@writer tag_elements ","@page_setup vbreaks ","@page_setup hbreaks "," sort_pagebreaks  each "," sort_pagebreaks  empty? "," sort_pagebreaks  size "]}," Writexlsx Worksheet write_col_breaks":{"type":"method","name":"write_col_breaks","children":[],"call":[" write_breaks "]}," Writexlsx Worksheet write_row_breaks":{"type":"method","name":"write_row_breaks","children":[],"call":[" write_breaks "]}," Writexlsx Worksheet write_odd_footer":{"type":"method","name":"write_odd_footer","children":[],"call":["@writer data_element "]}," Writexlsx Worksheet write_odd_header":{"type":"method","name":"write_odd_header","children":[],"call":["@writer data_element "]}," Writexlsx Worksheet write_header_footer":{"type":"method","name":"write_header_footer","children":[],"call":["@writer end_tag "," write_odd_footer ","@footer != "," write_odd_header ","@header != ","@writer start_tag "," header_footer_changed? ","@writer tag_elements ","@page_setup write_header_footer "," excel2003_style? "]}," Writexlsx Worksheet write_print_options":{"type":"method","name":"write_print_options","children":[],"call":["@writer empty_tag ","attributes << << ","attributes << "," print_gridlines? "," print_headers? "," vcenter? "," hcenter? "," print_options_changed? ","@page_setup write_print_options "]}," Writexlsx Worksheet write_merge_cell":{"type":"method","name":"write_merge_cell","children":[],"call":["@writer empty_tag "," xl_rowcol_to_cell "]}," Writexlsx Worksheet write_merge_cells":{"type":"method","name":"write_merge_cells","children":[],"call":["@writer end_tag "," write_merge_cell ","@merge each ","@writer start_tag ","@merge size ","@merge empty? ","@writer tag_elements "," write_some_elements "]}," Writexlsx Worksheet write_mx_plv":{"type":"method","name":"write_mx_plv","children":[],"call":["@writer empty_tag "]}," Writexlsx Worksheet write_ext":{"type":"method","name":"write_ext","children":[],"call":["@writer end_tag "," write_mx_plv ","@writer start_tag ","@writer tag_elements "," write_sparkline_groups "," write_ext_attributes "]}," Writexlsx Worksheet write_ext_lst":{"type":"method","name":"write_ext_lst","children":[],"call":["@writer end_tag "," write_ext ","@writer start_tag ","@writer tag_elements "]}," Writexlsx Worksheet write_page_setup":{"type":"method","name":"write_page_setup","children":[],"call":["@writer empty_tag ","attributes << << ","attributes << "," orientation? "," print_across? ","@print_style fit_height ","@print_style fit_height != ","@print_style fit_page ","@print_style fit_width ","@print_style fit_width != ","@print_style scale ","@print_style scale != "," page_setup_changed? ","@print_style orientation? ","@page_setup write_page_setup "]}," Writexlsx Worksheet write_page_margins":{"type":"method","name":"write_page_margins","children":[],"call":["@writer empty_tag ","@print_style attributes ","@page_setup write_page_margins "]}," Writexlsx Worksheet write_phonetic_pr":{"type":"method","name":"write_phonetic_pr","children":[],"call":["@writer empty_tag "]}," Writexlsx Worksheet write_sheet_calc_pr":{"type":"method","name":"write_sheet_calc_pr","children":[],"call":["@writer empty_tag "]}," Writexlsx Worksheet calculate_x_split_width":{"type":"method","name":"calculate_x_split_width","children":[],"call":["twips + ","points * ","pixels * / ","pixels * ","(send\n  (send\n    (lvar :width) :*\n    (lvar :max_digit_width)) :+\n  (float 0.5)) to_i + ","(send\n  (send\n    (lvar :width) :*\n    (lvar :max_digit_width)) :+\n  (float 0.5)) to_i ","width * + ","width * "," int ","width < ","(send\n  (send\n    (lvar :width) :*\n    (const nil :MAX_DIGIT_WIDTH)) :+\n  (float 0.5)) to_i + ","(send\n  (send\n    (lvar :width) :*\n    (const nil :MAX_DIGIT_WIDTH)) :+\n  (float 0.5)) to_i ","(send\n  (begin\n    (send\n      (lvar :width) :*\n      (const nil :MAX_DIGIT_WIDTH))) :+\n  (float 0.5)) to_i + ","(send\n  (begin\n    (send\n      (lvar :width) :*\n      (const nil :MAX_DIGIT_WIDTH))) :+\n  (float 0.5)) to_i ","(send\n  (lvar :width) :*\n  (const nil :MAX_DIGIT_WIDTH)) + ","(send\n  (lvar :width) :*\n  (int 12)) + ","points *  + ","pixels * /  * ","(send\n  (send\n    (lvar :width) :*\n    (lvar :max_digit_width)) :+\n  (float 0.5)) to_i +  * / "," int  * / ","(send\n  (send\n    (lvar :width) :*\n    (const nil :MAX_DIGIT_WIDTH)) :+\n  (float 0.5)) to_i +  * / ","(send\n  (begin\n    (send\n      (lvar :width) :*\n      (const nil :MAX_DIGIT_WIDTH))) :+\n  (float 0.5)) to_i +  * / ","(send\n  (send\n    (lvar :width) :*\n    (lvar :max_digit_width)) :+\n  (float 0.5)) to_i +  * "," int  * ","(send\n  (send\n    (lvar :width) :*\n    (const nil :MAX_DIGIT_WIDTH)) :+\n  (float 0.5)) to_i +  * ","(send\n  (begin\n    (send\n      (lvar :width) :*\n      (const nil :MAX_DIGIT_WIDTH))) :+\n  (float 0.5)) to_i +  * "]}," Writexlsx Worksheet write_split_panes":{"type":"method","name":"write_split_panes","children":[],"call":["@writer empty_tag ","attributes << << ","attributes << ","y_split > ","x_split > "," set_active_pane_and_cell_selections ","has_selection ! "," xl_rowcol_to_cell ","(send\n  (float 0.5) :+\n  (send\n    (send\n      (send\n        (send\n          (begin\n            (send\n              (lvar :x_split) :-\n              (int 390))) :/\n          (int 20)) :/\n        (int 3)) :*\n      (int 4)) :/\n    (int 64))) to_i ","0.5 + ","(send\n  (lvar :x_split) :-\n  (int 390)) / / * / ","(send\n  (lvar :x_split) :-\n  (int 390)) / / * ","(send\n  (lvar :x_split) :-\n  (int 390)) / / ","(send\n  (lvar :x_split) :-\n  (int 390)) / ","x_split - ","(send\n  (float 0.5) :+\n  (send\n    (send\n      (begin\n        (send\n          (lvar :y_split) :-\n          (int 300))) :/\n      (int 20)) :/\n    (int 15))) to_i ","(send\n  (lvar :y_split) :-\n  (int 300)) / / ","(send\n  (lvar :y_split) :-\n  (int 300)) / ","y_split - ","left_col == ","top_row == "," calculate_x_split_width ","(send\n  (send\n    (int 20) :*\n    (lvar :y_split)) :+\n  (int 300)) to_i ","20 * + ","20 * ","@selections [] ","@selections empty? ! ","@selections empty? ","(send\n  (float 0.5) :+\n  (begin\n    (send\n      (send\n        (send\n          (send\n            (begin\n              (send\n                (lvar :x_split) :-\n                (int 390))) :/\n            (int 20)) :/\n          (int 3)) :*\n        (int 4)) :/\n      (int 64)))) to_i ","(send\n  (float 0.5) :+\n  (begin\n    (send\n      (send\n        (begin\n          (send\n            (lvar :y_split) :-\n            (int 300))) :/\n        (int 20)) :/\n      (int 15)))) to_i ","(send\n  (begin\n    (send\n      (int 20) :*\n      (lvar :y_split))) :+\n  (int 300)) to_i ","(send\n  (int 20) :*\n  (lvar :y_split)) + ","(send\n  (send\n    (int 20) :*\n    (lvar :y_split)) :+\n  (int 300)) to_i  > ","(send\n  (begin\n    (send\n      (int 20) :*\n      (lvar :y_split))) :+\n  (int 300)) to_i  > "," calculate_x_split_width  > "," set_ set_active_pane_and_cell_selections _and_cell_selections ","(send\n  (float 0.5) :+\n  (send\n    (send\n      (send\n        (send\n          (begin\n            (send\n              (lvar : calculate_x_split_width ) :-\n              (int 390))) :/\n          (int 20)) :/\n        (int 3)) :*\n      (int 4)) :/\n    (int 64))) to_i ","(send\n  (lvar : calculate_x_split_width ) :-\n  (int 390)) / / * / ","(send\n  (lvar : calculate_x_split_width ) :-\n  (int 390)) / / * ","(send\n  (lvar : calculate_x_split_width ) :-\n  (int 390)) / / ","(send\n  (lvar : calculate_x_split_width ) :-\n  (int 390)) / "," calculate_x_split_width  - ","(send\n  (float 0.5) :+\n  (send\n    (send\n      (begin\n        (send\n          (lvar :(send\n  (send\n    (int 20) :*\n    (lvar :y_split)) :+\n  (int 300)) to_i ) :-\n          (int 300))) :/\n      (int 20)) :/\n    (int 15))) to_i ","(send\n  (float 0.5) :+\n  (send\n    (send\n      (begin\n        (send\n          (lvar :(send\n  (begin\n    (send\n      (int 20) :*\n      (lvar :y_split))) :+\n  (int 300)) to_i ) :-\n          (int 300))) :/\n      (int 20)) :/\n    (int 15))) to_i ","(send\n  (lvar :(send\n  (send\n    (int 20) :*\n    (lvar :y_split)) :+\n  (int 300)) to_i ) :-\n  (int 300)) / / ","(send\n  (lvar :(send\n  (begin\n    (send\n      (int 20) :*\n      (lvar :y_split))) :+\n  (int 300)) to_i ) :-\n  (int 300)) / / ","(send\n  (lvar :(send\n  (send\n    (int 20) :*\n    (lvar :y_split)) :+\n  (int 300)) to_i ) :-\n  (int 300)) / ","(send\n  (lvar :(send\n  (begin\n    (send\n      (int 20) :*\n      (lvar :y_split))) :+\n  (int 300)) to_i ) :-\n  (int 300)) / ","(send\n  (send\n    (int 20) :*\n    (lvar :y_split)) :+\n  (int 300)) to_i  - ","(send\n  (begin\n    (send\n      (int 20) :*\n      (lvar :y_split))) :+\n  (int 300)) to_i  - ","(send\n  (float 0.5) :+\n  (send\n    (send\n      (send\n        (send\n          (begin\n            (send\n              (lvar :x_split) :-\n              (int 390))) :/\n          (int 20)) :/\n        (int 3)) :*\n      (int 4)) :/\n    (int 64))) to_i  == ","(send\n  (float 0.5) :+\n  (begin\n    (send\n      (send\n        (send\n          (send\n            (begin\n              (send\n                (lvar :x_split) :-\n                (int 390))) :/\n            (int 20)) :/\n          (int 3)) :*\n        (int 4)) :/\n      (int 64)))) to_i  == ","(send\n  (float 0.5) :+\n  (send\n    (send\n      (begin\n        (send\n          (lvar :y_split) :-\n          (int 300))) :/\n      (int 20)) :/\n    (int 15))) to_i  == ","(send\n  (float 0.5) :+\n  (begin\n    (send\n      (send\n        (begin\n          (send\n            (lvar :y_split) :-\n            (int 300))) :/\n        (int 20)) :/\n      (int 15)))) to_i  == "," calculate_ calculate_x_split_width _width ","(send\n  (send\n    (int 20) :*\n    (lvar :(send\n  (send\n    (int 20) :*\n    (lvar :y_split)) :+\n  (int 300)) to_i )) :+\n  (int 300)) to_i ","(send\n  (send\n    (int 20) :*\n    (lvar :(send\n  (begin\n    (send\n      (int 20) :*\n      (lvar :y_split))) :+\n  (int 300)) to_i )) :+\n  (int 300)) to_i ","(send\n  (float 0.5) :+\n  (begin\n    (send\n      (send\n        (send\n          (send\n            (begin\n              (send\n                (lvar : calculate_x_split_width ) :-\n                (int 390))) :/\n            (int 20)) :/\n          (int 3)) :*\n        (int 4)) :/\n      (int 64)))) to_i ","(send\n  (float 0.5) :+\n  (begin\n    (send\n      (send\n        (begin\n          (send\n            (lvar :(send\n  (send\n    (int 20) :*\n    (lvar :y_split)) :+\n  (int 300)) to_i ) :-\n            (int 300))) :/\n        (int 20)) :/\n      (int 15)))) to_i ","(send\n  (float 0.5) :+\n  (begin\n    (send\n      (send\n        (begin\n          (send\n            (lvar :(send\n  (begin\n    (send\n      (int 20) :*\n      (lvar :y_split))) :+\n  (int 300)) to_i ) :-\n            (int 300))) :/\n        (int 20)) :/\n      (int 15)))) to_i ","(send\n  (begin\n    (send\n      (int 20) :*\n      (lvar :(send\n  (send\n    (int 20) :*\n    (lvar :y_split)) :+\n  (int 300)) to_i ))) :+\n  (int 300)) to_i ","(send\n  (begin\n    (send\n      (int 20) :*\n      (lvar :(send\n  (begin\n    (send\n      (int 20) :*\n      (lvar :y_split))) :+\n  (int 300)) to_i ))) :+\n  (int 300)) to_i ","(send\n  (int 20) :*\n  (lvar :(send\n  (send\n    (int 20) :*\n    (lvar :y_split)) :+\n  (int 300)) to_i )) + ","(send\n  (int 20) :*\n  (lvar :(send\n  (begin\n    (send\n      (int 20) :*\n      (lvar :y_split))) :+\n  (int 300)) to_i )) + "]}," Writexlsx Worksheet write_freeze_panes":{"type":"method","name":"write_freeze_panes","children":[],"call":["@writer empty_tag ","attributes << << ","attributes << ","y_split > ","x_split > ","type == "," set_active_pane_and_cell_selections ","@selections [] ","@selections empty? "," xl_rowcol_to_cell "," set_ set_active_pane_and_cell_selections _and_cell_selections "]}," Writexlsx Worksheet write_panes":{"type":"method","name":"write_panes","children":[],"call":[" write_freeze_panes "," write_split_panes ","@panes [] == ","@panes [] ","@panes empty? "]}," Writexlsx Worksheet write_cell_array_formula":{"type":"method","name":"write_cell_array_formula","children":[],"call":["@writer data_element "]}," Writexlsx Worksheet write_cell_formula":{"type":"method","name":"write_cell_formula","children":[],"call":["@writer data_element "]}," Writexlsx Worksheet write_cell_value":{"type":"method","name":"write_cell_value","children":[],"call":["@writer data_element ","value to_i ","value == "," write_cell_formula ","value nan? ","value is_a? ","value nil? ! ","value nil? ","value to_i  to_i ","value to_i  == ","value to_i  nan? ","value to_i  is_a? ","value to_i  nil? ! ","value to_i  nil? "]}," Writexlsx Worksheet write_cell":{"type":"method","name":"write_cell","children":[],"call":["@writer empty_tag ","@hlink_refs << ","cell [] ","@external_hyper_links << ","link_type == ","@writer end_tag "," write_cell_value ","@writer start_tag ","attributes << << ","attributes << "," write_cell_array_formula "," write_cell_formula ","col_xf get_xf_index ","@col_formats [] ","row_xf get_xf_index ","@set_rows [] [] ","@set_rows [] ","xf_index != "," xl_rowcol_to_cell ","xf get_xf_index ","xf respond_to? ","cell []  == ","@col_formats []  get_xf_index ","col_xf get_xf get_xf_index  ","@set_rows [] []  get_xf_index ","row_xf get_xf get_xf_index  ","xf get_xf_index  != ","xf get_xf get_xf_index  "]}," Writexlsx Worksheet write_empty_row":{"type":"method","name":"write_empty_row","children":[],"call":[" write_row_element ","new_args []= ","args dup ","@writer empty_tag "," row_attributes ","args dup  []= "]}," Writexlsx Worksheet write_row_element":{"type":"method","name":"write_row_element","children":[],"call":["@writer start_tag ","@writer empty_tag ","empty_row != ","attributes << << ","attributes << ","collapsed != ","collapsed ! ! ","collapsed ! ","level != ","level ! ! ","level ! ","height != ","hidden != ","hidden ! ! ","hidden ! ","xf_index != ","format get_xf_index ","r + "," ptrue? ","@excel_version == ","@writer tag_elements "," row_attributes ","format get_xf_index  != ","format get_format get_xf_index  "]}," Writexlsx Worksheet write_cell_column_dimension":{"type":"method","name":"write_cell_column_dimension","children":[],"call":[" write_cell ","@table [] [] ","@table [] ","(irange\n  (ivar :@dim_colmin)\n  (ivar :@dim_colmax)) each ","@cell_data_table [] [] write_cell ","@cell_data_table [] [] ","@cell_data_table [] ","cell write_cell ","row [] "," write_row []  ","@row [] _data_table [] [] write_row []  ","@row [] _data_table [] [] ","@row [] _data_table [] ","row []  write_row []  ","@cell_data_table []  [] "]}," Writexlsx Worksheet not_contain_formatting_or_data?":{"type":"method","name":"not_contain_formatting_or_data?","children":[],"call":["@comments [] ! ","@comments [] ","@table [] ! ","@table [] ","@set_rows [] ! ","@set_rows [] ","@comments has_comment_in_row? ! ","@comments has_comment_in_row? ","@cell_data_table [] ! ","@cell_data_table [] "]}," Writexlsx Worksheet write_single_row":{"type":"method","name":"write_single_row","children":[],"call":[" write_empty_row ","@set_rows [] ","@writer end_tag "," write_cell_column_dimension "," write_row ","@set_rows [] ! ","@table [] "," not_contain_formatting_or_data? ","@cell_data_table [] "]}," Writexlsx Worksheet write_rows":{"type":"method","name":"write_rows","children":[],"call":[" write_empty_row ","@set_rows [] ","@writer end_tag "," write_cell_column_dimension "," write_row_element ","@set_rows [] ! ","@table [] ","@row_spans [] ","row_num / "," not_contain_formatting_or_data? ","(irange\n  (ivar :@dim_rowmin)\n  (ivar :@dim_rowmax)) each "," calculate_spans ","@cell_data_table [] ","@comments [] ","@row_@row_spans [] s [] "," calculate_@row_spans [] s "]}," Writexlsx Worksheet write_sheet_data":{"type":"method","name":"write_sheet_data","children":[],"call":["@writer end_tag "," write_rows ","@writer start_tag ","@writer empty_tag ","@dim_rowmin ! ","@writer tag_elements "]}," Writexlsx Worksheet write_col_info":{"type":"method","name":"write_col_info","children":[],"call":["@writer empty_tag ","attributes << << ","attributes << ","collapsed != ","level != ","custom_width != ","hidden != ","xf_index != ","max + ","min + ","(send\n  (send\n    (begin\n      (send\n        (send\n          (lvar :width) :*\n          (lvar :max_digit_width)) :+\n        (lvar :padding))) :/\n    (lvar :max_digit_width)) :*\n  (int 256)) to_i / ","(send\n  (send\n    (begin\n      (send\n        (send\n          (lvar :width) :*\n          (lvar :max_digit_width)) :+\n        (lvar :padding))) :/\n    (lvar :max_digit_width)) :*\n  (int 256)) to_i ","(send\n  (send\n    (lvar :width) :*\n    (lvar :max_digit_width)) :+\n  (lvar :padding)) / * ","(send\n  (send\n    (lvar :width) :*\n    (lvar :max_digit_width)) :+\n  (lvar :padding)) / ","width * + ","width * ","width > ","width == ","hidden == ","width nil? ","format get_xf_index ","format respond_to? ","args [] ","width to_i ","width to_s =~ ","width to_s "," col_info_attributes ","custom_(send\n  (send\n    (begin\n      (send\n        (send\n          (lvar :width) :*\n          (lvar :max_digit_width)) :+\n        (lvar :padding))) :/\n    (lvar :max_digit_width)) :*\n  (int 256)) to_i /  != ","custom_args []  != ","custom_width to_i  != ","format get_xf_index  != ","(send\n  (send\n    (begin\n      (send\n        (send\n          (lvar :(send\n  (send\n    (begin\n      (send\n        (send\n          (lvar :width) :*\n          (lvar :max_digit_width)) :+\n        (lvar :padding))) :/\n    (lvar :max_digit_width)) :*\n  (int 256)) to_i / ) :*\n          (lvar :max_digit_(send\n  (send\n    (begin\n      (send\n        (send\n          (lvar :width) :*\n          (lvar :max_digit_width)) :+\n        (lvar :padding))) :/\n    (lvar :max_digit_width)) :*\n  (int 256)) to_i / )) :+\n        (lvar :padding))) :/\n    (lvar :max_digit_(send\n  (send\n    (begin\n      (send\n        (send\n          (lvar :width) :*\n          (lvar :max_digit_width)) :+\n        (lvar :padding))) :/\n    (lvar :max_digit_width)) :*\n  (int 256)) to_i / )) :*\n  (int 256)) to_i / ","(send\n  (send\n    (begin\n      (send\n        (send\n          (lvar :args [] ) :*\n          (lvar :max_digit_args [] )) :+\n        (lvar :padding))) :/\n    (lvar :max_digit_args [] )) :*\n  (int 256)) to_i / ","(send\n  (send\n    (begin\n      (send\n        (send\n          (lvar :width to_i ) :*\n          (lvar :max_digit_width to_i )) :+\n        (lvar :padding))) :/\n    (lvar :max_digit_width to_i )) :*\n  (int 256)) to_i / ","(send\n  (send\n    (begin\n      (send\n        (send\n          (lvar :(send\n  (send\n    (begin\n      (send\n        (send\n          (lvar :width) :*\n          (lvar :max_digit_width)) :+\n        (lvar :padding))) :/\n    (lvar :max_digit_width)) :*\n  (int 256)) to_i / ) :*\n          (lvar :max_digit_(send\n  (send\n    (begin\n      (send\n        (send\n          (lvar :width) :*\n          (lvar :max_digit_width)) :+\n        (lvar :padding))) :/\n    (lvar :max_digit_width)) :*\n  (int 256)) to_i / )) :+\n        (lvar :padding))) :/\n    (lvar :max_digit_(send\n  (send\n    (begin\n      (send\n        (send\n          (lvar :width) :*\n          (lvar :max_digit_width)) :+\n        (lvar :padding))) :/\n    (lvar :max_digit_width)) :*\n  (int 256)) to_i / )) :*\n  (int 256)) to_i ","(send\n  (send\n    (begin\n      (send\n        (send\n          (lvar :args [] ) :*\n          (lvar :max_digit_args [] )) :+\n        (lvar :padding))) :/\n    (lvar :max_digit_args [] )) :*\n  (int 256)) to_i ","(send\n  (send\n    (begin\n      (send\n        (send\n          (lvar :width to_i ) :*\n          (lvar :max_digit_width to_i )) :+\n        (lvar :padding))) :/\n    (lvar :max_digit_width to_i )) :*\n  (int 256)) to_i ","(send\n  (send\n    (lvar :(send\n  (send\n    (begin\n      (send\n        (send\n          (lvar :width) :*\n          (lvar :max_digit_width)) :+\n        (lvar :padding))) :/\n    (lvar :max_digit_width)) :*\n  (int 256)) to_i / ) :*\n    (lvar :max_digit_(send\n  (send\n    (begin\n      (send\n        (send\n          (lvar :width) :*\n          (lvar :max_digit_width)) :+\n        (lvar :padding))) :/\n    (lvar :max_digit_width)) :*\n  (int 256)) to_i / )) :+\n  (lvar :padding)) / * ","(send\n  (send\n    (lvar :args [] ) :*\n    (lvar :max_digit_args [] )) :+\n  (lvar :padding)) / * ","(send\n  (send\n    (lvar :width to_i ) :*\n    (lvar :max_digit_width to_i )) :+\n  (lvar :padding)) / * ","(send\n  (send\n    (lvar :(send\n  (send\n    (begin\n      (send\n        (send\n          (lvar :width) :*\n          (lvar :max_digit_width)) :+\n        (lvar :padding))) :/\n    (lvar :max_digit_width)) :*\n  (int 256)) to_i / ) :*\n    (lvar :max_digit_(send\n  (send\n    (begin\n      (send\n        (send\n          (lvar :width) :*\n          (lvar :max_digit_width)) :+\n        (lvar :padding))) :/\n    (lvar :max_digit_width)) :*\n  (int 256)) to_i / )) :+\n  (lvar :padding)) / ","(send\n  (send\n    (lvar :args [] ) :*\n    (lvar :max_digit_args [] )) :+\n  (lvar :padding)) / ","(send\n  (send\n    (lvar :width to_i ) :*\n    (lvar :max_digit_width to_i )) :+\n  (lvar :padding)) / ","(send\n  (send\n    (begin\n      (send\n        (send\n          (lvar :width) :*\n          (lvar :max_digit_width)) :+\n        (lvar :padding))) :/\n    (lvar :max_digit_width)) :*\n  (int 256)) to_i /  * + ","args []  * + ","width to_i  * + ","(send\n  (send\n    (begin\n      (send\n        (send\n          (lvar :width) :*\n          (lvar :max_digit_width)) :+\n        (lvar :padding))) :/\n    (lvar :max_digit_width)) :*\n  (int 256)) to_i /  * ","args []  * ","width to_i  * ","(send\n  (send\n    (begin\n      (send\n        (send\n          (lvar :width) :*\n          (lvar :max_digit_width)) :+\n        (lvar :padding))) :/\n    (lvar :max_digit_width)) :*\n  (int 256)) to_i /  > ","args []  > ","width to_i  > ","(send\n  (send\n    (begin\n      (send\n        (send\n          (lvar :width) :*\n          (lvar :max_digit_width)) :+\n        (lvar :padding))) :/\n    (lvar :max_digit_width)) :*\n  (int 256)) to_i /  == ","args []  == ","width to_i  == ","(send\n  (send\n    (begin\n      (send\n        (send\n          (lvar :width) :*\n          (lvar :max_digit_width)) :+\n        (lvar :padding))) :/\n    (lvar :max_digit_width)) :*\n  (int 256)) to_i /  nil? ","args []  nil? ","width to_i  nil? ","format get_format get_xf_index  ","args []  get_xf_index ","args []  respond_to? ","(send\n  (send\n    (begin\n      (send\n        (send\n          (lvar :width) :*\n          (lvar :max_digit_width)) :+\n        (lvar :padding))) :/\n    (lvar :max_digit_width)) :*\n  (int 256)) to_i /  to_i ","args []  to_i ","width to_i  to_i ","(send\n  (send\n    (begin\n      (send\n        (send\n          (lvar :width) :*\n          (lvar :max_digit_width)) :+\n        (lvar :padding))) :/\n    (lvar :max_digit_width)) :*\n  (int 256)) to_i /  to_s =~ ","args []  to_s =~ ","width to_i  to_s =~ ","(send\n  (send\n    (begin\n      (send\n        (send\n          (lvar :width) :*\n          (lvar :max_digit_width)) :+\n        (lvar :padding))) :/\n    (lvar :max_digit_width)) :*\n  (int 256)) to_i /  to_s ","args []  to_s ","width to_i  to_s "]}," Writexlsx Worksheet write_cols":{"type":"method","name":"write_cols","children":[],"call":["@writer end_tag "," write_col_info ","@colinfo each ","@writer start_tag ","@colinfo empty? ","@writer tag_elements ","@colinfo [] ","@colinfo keys sort each ","@colinfo keys sort ","@colinfo keys ","@col_info []= "," compare_col_info ","col == ","last_col + ","@col_info [] ","@col_info keys sort each ","@col_info keys sort ","@col_info keys ","@col_info delete ","@col_info keys min ","@col_info empty? "]}," Writexlsx Worksheet write_sheet_format_pr":{"type":"method","name":"write_sheet_format_pr","children":[],"call":["@writer empty_tag ","attributes << << ","attributes << ","@outline_col_level > ","@outline_row_level > ","@excel_version == "," ptrue? ","@default_row_height != "]}," Writexlsx Worksheet write_selection":{"type":"method","name":"write_selection","children":[],"call":["@writer empty_tag ","attributes << << ","attributes << "]}," Writexlsx Worksheet write_selections":{"type":"method","name":"write_selections","children":[],"call":[" write_selection ","@selections each "]}," Writexlsx Worksheet write_sheet_view":{"type":"method","name":"write_sheet_view","children":[],"call":["@writer end_tag "," write_selections "," write_panes ","@writer start_tag ","@writer empty_tag ","@selections empty? ","@panes empty? ","attributes << << ","attributes << "," zoom_scale_normal? "," page_view? ","@zoom != "," show_zeros? "," screen_gridlines? ","@writer tag_elements "," ptrue? "]}," Writexlsx Worksheet write_sheet_views":{"type":"method","name":"write_sheet_views","children":[],"call":["@writer end_tag "," write_sheet_view ","@writer start_tag ","@writer tag_elements "]}," Writexlsx Worksheet write_dimension":{"type":"method","name":"write_dimension","children":[],"call":["@writer empty_tag ","cell_1 + + ","cell_1 + "," xl_rowcol_to_cell ","@dim_colmin == ","@dim_rowmin == ","@dim_rowmin ! ","@dim_colmin ! "," xl_rowcol_to_cell  + + "," xl_rowcol_to_cell  + "]}," Writexlsx Worksheet write_page_set_up_pr":{"type":"method","name":"write_page_set_up_pr","children":[],"call":["@writer empty_tag "," fit_page? "]}," Writexlsx Worksheet write_sheet_pr":{"type":"method","name":"write_sheet_pr","children":[],"call":["@writer empty_tag ","@writer end_tag "," write_page_set_up_pr "," write_tab_color ","@writer start_tag "," tab_color? "," fit_page? ","attributes << << ","attributes << "," filter_on? "," tab_color? ! "," filter_on? ! "," fit_page? ! ","@writer tag_elements "," write_outline_pr "," outline_changed? "," outline_changed? ! "," vba_codename? ! "," vba_codename? "," tab_outline_fit? "]}," Writexlsx Worksheet write_worksheet":{"type":"method","name":"write_worksheet","children":[],"call":["@writer start_tag ","schema + ","attributes << << ","attributes << ","@excel_version == "]}," Writexlsx Worksheet encode_password":{"type":"method","name":"encode_password","children":[],"call":["chars each ","low_15 | ","high_15 >> ","char & ","32767 << ","char ord << ","char ord ","chars collect! ","chars size ","password split "," sprintf ","password length ","(send\n  (begin\n    (send\n      (lvar :hash) :>>\n      (int 14))) :&\n  (int 1)) | ","(send\n  (lvar :hash) :<<\n  (int 1)) & ","hash << ","(send\n  (lvar :hash) :>>\n  (int 14)) & ","hash >> ","password reverse split each ","password reverse split ","password reverse ","low_15 | s each ","char ord << s each ","password split  each ","char &  | ","high_15 >>  >> ","char &  >> ","low_15 |  & ","char ord <<  & ","low_15 |  ord << ","char ord <<  ord << ","low_15 |  ord ","char ord <<  ord ","low_15 | s collect! ","char ord << s collect! ","password split  collect! ","low_15 | s size ","char ord << s size ","password split  size ","(send\n  (begin\n    (send\n      (lvar :(send\n  (begin\n    (send\n      (lvar :hash) :>>\n      (int 14))) :&\n  (int 1)) | ) :>>\n      (int 14))) :&\n  (int 1)) | ","(send\n  (lvar :(send\n  (begin\n    (send\n      (lvar :hash) :>>\n      (int 14))) :&\n  (int 1)) | ) :<<\n  (int 1)) & ","(send\n  (begin\n    (send\n      (lvar :hash) :>>\n      (int 14))) :&\n  (int 1)) |  << ","(send\n  (lvar :(send\n  (begin\n    (send\n      (lvar :hash) :>>\n      (int 14))) :&\n  (int 1)) | ) :>>\n  (int 14)) & ","(send\n  (begin\n    (send\n      (lvar :hash) :>>\n      (int 14))) :&\n  (int 1)) |  >> "]}," Writexlsx Worksheet comment_params":{"type":"method","name":"comment_params","children":[],"call":["params [] ","vertices << "," position_object_pixels ","params []= ","(send\n  (float 0.5) :+\n  (send\n    (lvar :params) :[]\n    (sym :height))) to_i ","0.5 + ","(send\n  (float 0.5) :+\n  (send\n    (lvar :params) :[]\n    (sym :width))) to_i ","params [] * ","col_max - ","col + ","row_max - ","row - "," substitute_cellref "," sprintf ","rgb_color =~ ","@workbook palette [] ","color_id - ","@workbook palette ","color_id == ","Format  get_color ","string [] ","string length > ","string length ","params update "," position_object_pixels  << "," sprintf  =~ ","@workbook palette [] _color =~ ","rgb_params []  =~ ","Format  get_color  - ","params [] _id - ","Format  get_color  == ","params [] _id == ","Format  get_params []  ","string []  [] ","string []  length > ","string []  length "]}," Writexlsx Worksheet prepare_image":{"type":"method","name":"prepare_image","children":[],"call":["@drawing_links << ","drawing add_drawing_object ","@external_drawing_links << ","drawing embedded= ","Drawing  new "," drawing? ! "," drawing? "," int ","0.5 + ","height * ","width * "," position_object_emus ","@images [] "," drawing ","(send\n  (float 0.5) :+\n  (begin\n    (send\n      (lvar :height) :*\n      (int 9525)))) to_i ","(send\n  (float 0.5) :+\n  (begin\n    (send\n      (lvar :width) :*\n      (int 9525)))) to_i ","96.0 / ","drawings add_drawing_object ","drawings embedded= ","Drawings  new "," drawings? ! "," drawings? ","drawing rel_index= "," drawing_rel_index ","drawing url_rel_index= "," raise ","target length > ","target length ","url sub ","url =~ ","target gsub "," escape_url ","@drawing_rels [] ! ","@drawing_rels [] ","drawing description= ","target =~ ","@Drawing  new _links << ","Drawing  new  add_Drawing  new _object ","@external_Drawing  new _links << ","Drawing  new  embedded= "," Drawing  new ? ! "," Drawing  new ? "," int  * ","(send\n  (float 0.5) :+\n  (begin\n    (send\n      (lvar :height) :*\n      (int 9525)))) to_i  * ","(send\n  (float 0.5) :+\n  (begin\n    (send\n      (lvar :width) :*\n      (int 9525)))) to_i  * "," Drawing  new  ","(send\n  (float 0.5) :+\n  (begin\n    (send\n      (lvar : int ) :*\n      (int 9525)))) to_i ","(send\n  (float 0.5) :+\n  (begin\n    (send\n      (lvar :(send\n  (float 0.5) :+\n  (begin\n    (send\n      (lvar :height) :*\n      (int 9525)))) to_i ) :*\n      (int 9525)))) to_i ","(send\n  (float 0.5) :+\n  (begin\n    (send\n      (lvar :(send\n  (float 0.5) :+\n  (begin\n    (send\n      (lvar :width) :*\n      (int 9525)))) to_i ) :*\n      (int 9525)))) to_i ","Drawing  new s add_Drawing  new _object ","Drawings  new  add_drawing_object ","Drawing  new s embedded= ","Drawings  new  embedded= "," Drawing  new s? ! "," Drawings  new ? ! "," Drawing  new s? "," Drawings  new ? ","Drawing  new  rel_index= "," Drawing  new _rel_index ","Drawing  new  url_rel_index= ","url sub  length > ","target gsub  length > "," escape_url  length > ","url sub  length ","target gsub  length "," escape_url  length ","url sub  gsub ","target gsub  gsub "," escape_url  gsub ","@Drawing  new _rels [] ! ","@Drawing  new _rels [] ","Drawing  new  description= ","url sub  =~ ","target gsub  =~ "," escape_url  =~ "]}," Writexlsx Worksheet size_row":{"type":"method","name":"size_row","children":[],"call":["(send\n  (send\n    (int 4) :/\n    (float 3.0)) :*\n  (lvar :height)) to_i ","4 / * ","4 / ","height == ","@row_sizes [] ","(send\n  (send\n    (int 4) :/\n    (float 3.0)) :*\n  (ivar :@default_row_height)) to_i ","anchor != ","hidden == ","(send\n  (send\n    (int 4) :/\n    (float 3.0)) :*\n  (lvar :@row_sizes [] )) to_i ","@row_sizes []  == ","(send\n  (send\n    (int 4) :/\n    (float 3.0)) :*\n  (ivar :@default_row_@row_sizes [] )) to_i "]}," Writexlsx Worksheet size_col":{"type":"method","name":"size_col","children":[],"call":["(send\n  (send\n    (lvar :width) :*\n    (lvar :max_digit_width)) :+\n  (float 0.5)) to_i + ","(send\n  (send\n    (lvar :width) :*\n    (lvar :max_digit_width)) :+\n  (float 0.5)) to_i ","width * + ","width * ","(send\n  (send\n    (lvar :width) :*\n    (int 12)) :+\n  (float 0.5)) to_i ","width < ","width == ","@col_sizes [] ","(send\n  (send\n    (lvar :width) :*\n    (const nil :MAX_DIGIT_WIDTH)) :+\n  (float 0.5)) to_i + ","(send\n  (send\n    (lvar :width) :*\n    (const nil :MAX_DIGIT_WIDTH)) :+\n  (float 0.5)) to_i ","(send\n  (send\n    (lvar :width) :*\n    (begin\n      (send\n        (const nil :MAX_DIGIT_WIDTH) :+\n        (const nil :PADDING)))) :+\n  (float 0.5)) to_i ","MAX_DIGIT_WIDTH  + ","anchor != ","hidden == ","(send\n  (begin\n    (send\n      (lvar :width) :*\n      (const nil :MAX_DIGIT_WIDTH))) :+\n  (float 0.5)) to_i + ","(send\n  (begin\n    (send\n      (lvar :width) :*\n      (const nil :MAX_DIGIT_WIDTH))) :+\n  (float 0.5)) to_i ","(send\n  (lvar :width) :*\n  (const nil :MAX_DIGIT_WIDTH)) + ","(send\n  (begin\n    (send\n      (lvar :width) :*\n      (begin\n        (send\n          (const nil :MAX_DIGIT_WIDTH) :+\n          (const nil :PADDING))))) :+\n  (float 0.5)) to_i ","(send\n  (lvar :width) :*\n  (begin\n    (send\n      (const nil :MAX_DIGIT_WIDTH) :+\n      (const nil :PADDING)))) + ","@col_info [] hidden ","@col_info [] ","@col_info [] width ","(send\n  (send\n    (lvar :@col_sizes [] ) :*\n    (lvar :max_digit_@col_sizes [] )) :+\n  (float 0.5)) to_i + ","(send\n  (send\n    (lvar :@col_sizes [] ) :*\n    (lvar :max_digit_@col_sizes [] )) :+\n  (float 0.5)) to_i ","@col_sizes []  * + ","@col_sizes []  * ","(send\n  (send\n    (lvar :@col_sizes [] ) :*\n    (int 12)) :+\n  (float 0.5)) to_i ","@col_sizes []  < ","@col_sizes []  == ","(send\n  (send\n    (lvar :@col_sizes [] ) :*\n    (const nil :MAX_DIGIT_WIDTH)) :+\n  (float 0.5)) to_i + ","(send\n  (send\n    (lvar :@col_sizes [] ) :*\n    (const nil :MAX_DIGIT_WIDTH)) :+\n  (float 0.5)) to_i ","(send\n  (send\n    (lvar :@col_sizes [] ) :*\n    (begin\n      (send\n        (const nil :MAX_DIGIT_WIDTH) :+\n        (const nil :PADDING)))) :+\n  (float 0.5)) to_i ","@col_info [] hidden  == ","(send\n  (begin\n    (send\n      (lvar :@col_sizes [] ) :*\n      (const nil :MAX_DIGIT_WIDTH))) :+\n  (float 0.5)) to_i + ","(send\n  (begin\n    (send\n      (lvar :@col_sizes [] ) :*\n      (const nil :MAX_DIGIT_WIDTH))) :+\n  (float 0.5)) to_i ","(send\n  (lvar :@col_sizes [] ) :*\n  (const nil :MAX_DIGIT_WIDTH)) + ","(send\n  (begin\n    (send\n      (lvar :@col_sizes [] ) :*\n      (begin\n        (send\n          (const nil :MAX_DIGIT_WIDTH) :+\n          (const nil :PADDING))))) :+\n  (float 0.5)) to_i ","(send\n  (lvar :@col_sizes [] ) :*\n  (begin\n    (send\n      (const nil :MAX_DIGIT_WIDTH) :+\n      (const nil :PADDING)))) + ","@col_info [] @col_info [] hidden  ","@col_info [] @col_sizes []  "]}," Writexlsx Worksheet position_object_emus":{"type":"method","name":"position_object_emus","children":[],"call":[" position_object_pixels ","(send\n  (float 0.5) :+\n  (send\n    (int 9525) :*\n    (lvar :y_abs))) to_i ","0.5 + ","9525 * ","(send\n  (float 0.5) :+\n  (send\n    (int 9525) :*\n    (lvar :x_abs))) to_i ","(send\n  (float 0.5) :+\n  (send\n    (int 9525) :*\n    (lvar :y2))) to_i ","(send\n  (float 0.5) :+\n  (send\n    (int 9525) :*\n    (lvar :x2))) to_i ","(send\n  (float 0.5) :+\n  (send\n    (int 9525) :*\n    (lvar :y1))) to_i ","(send\n  (float 0.5) :+\n  (send\n    (int 9525) :*\n    (lvar :x1))) to_i ","(send\n  (float 0.5) :+\n  (begin\n    (send\n      (int 9525) :*\n      (lvar :y_abs)))) to_i ","(send\n  (float 0.5) :+\n  (begin\n    (send\n      (int 9525) :*\n      (lvar :x_abs)))) to_i ","(send\n  (float 0.5) :+\n  (begin\n    (send\n      (int 9525) :*\n      (lvar :y2)))) to_i ","(send\n  (float 0.5) :+\n  (begin\n    (send\n      (int 9525) :*\n      (lvar :x2)))) to_i ","(send\n  (float 0.5) :+\n  (begin\n    (send\n      (int 9525) :*\n      (lvar :y1)))) to_i ","(send\n  (float 0.5) :+\n  (begin\n    (send\n      (int 9525) :*\n      (lvar :x1)))) to_i ","(send\n  (float 0.5) :+\n  (send\n    (int 9525) :*\n    (lvar :(send\n  (float 0.5) :+\n  (send\n    (int 9525) :*\n    (lvar :y_abs))) to_i ))) to_i ","(send\n  (float 0.5) :+\n  (send\n    (int 9525) :*\n    (lvar :(send\n  (float 0.5) :+\n  (begin\n    (send\n      (int 9525) :*\n      (lvar :y_abs)))) to_i ))) to_i ","(send\n  (float 0.5) :+\n  (send\n    (int 9525) :*\n    (lvar :(send\n  (float 0.5) :+\n  (send\n    (int 9525) :*\n    (lvar :x_abs))) to_i ))) to_i ","(send\n  (float 0.5) :+\n  (send\n    (int 9525) :*\n    (lvar :(send\n  (float 0.5) :+\n  (begin\n    (send\n      (int 9525) :*\n      (lvar :x_abs)))) to_i ))) to_i ","(send\n  (float 0.5) :+\n  (send\n    (int 9525) :*\n    (lvar :(send\n  (float 0.5) :+\n  (send\n    (int 9525) :*\n    (lvar :y2))) to_i ))) to_i ","(send\n  (float 0.5) :+\n  (send\n    (int 9525) :*\n    (lvar :(send\n  (float 0.5) :+\n  (begin\n    (send\n      (int 9525) :*\n      (lvar :y2)))) to_i ))) to_i ","(send\n  (float 0.5) :+\n  (send\n    (int 9525) :*\n    (lvar :(send\n  (float 0.5) :+\n  (send\n    (int 9525) :*\n    (lvar :x2))) to_i ))) to_i ","(send\n  (float 0.5) :+\n  (send\n    (int 9525) :*\n    (lvar :(send\n  (float 0.5) :+\n  (begin\n    (send\n      (int 9525) :*\n      (lvar :x2)))) to_i ))) to_i ","(send\n  (float 0.5) :+\n  (send\n    (int 9525) :*\n    (lvar :(send\n  (float 0.5) :+\n  (send\n    (int 9525) :*\n    (lvar :y1))) to_i ))) to_i ","(send\n  (float 0.5) :+\n  (send\n    (int 9525) :*\n    (lvar :(send\n  (float 0.5) :+\n  (begin\n    (send\n      (int 9525) :*\n      (lvar :y1)))) to_i ))) to_i ","(send\n  (float 0.5) :+\n  (send\n    (int 9525) :*\n    (lvar :(send\n  (float 0.5) :+\n  (send\n    (int 9525) :*\n    (lvar :x1))) to_i ))) to_i ","(send\n  (float 0.5) :+\n  (send\n    (int 9525) :*\n    (lvar :(send\n  (float 0.5) :+\n  (begin\n    (send\n      (int 9525) :*\n      (lvar :x1)))) to_i ))) to_i ","(send\n  (float 0.5) :+\n  (begin\n    (send\n      (int 9525) :*\n      (lvar :(send\n  (float 0.5) :+\n  (send\n    (int 9525) :*\n    (lvar :y_abs))) to_i )))) to_i ","(send\n  (float 0.5) :+\n  (begin\n    (send\n      (int 9525) :*\n      (lvar :(send\n  (float 0.5) :+\n  (begin\n    (send\n      (int 9525) :*\n      (lvar :y_abs)))) to_i )))) to_i ","(send\n  (float 0.5) :+\n  (begin\n    (send\n      (int 9525) :*\n      (lvar :(send\n  (float 0.5) :+\n  (send\n    (int 9525) :*\n    (lvar :x_abs))) to_i )))) to_i ","(send\n  (float 0.5) :+\n  (begin\n    (send\n      (int 9525) :*\n      (lvar :(send\n  (float 0.5) :+\n  (begin\n    (send\n      (int 9525) :*\n      (lvar :x_abs)))) to_i )))) to_i ","(send\n  (float 0.5) :+\n  (begin\n    (send\n      (int 9525) :*\n      (lvar :(send\n  (float 0.5) :+\n  (send\n    (int 9525) :*\n    (lvar :y2))) to_i )))) to_i ","(send\n  (float 0.5) :+\n  (begin\n    (send\n      (int 9525) :*\n      (lvar :(send\n  (float 0.5) :+\n  (begin\n    (send\n      (int 9525) :*\n      (lvar :y2)))) to_i )))) to_i ","(send\n  (float 0.5) :+\n  (begin\n    (send\n      (int 9525) :*\n      (lvar :(send\n  (float 0.5) :+\n  (send\n    (int 9525) :*\n    (lvar :x2))) to_i )))) to_i ","(send\n  (float 0.5) :+\n  (begin\n    (send\n      (int 9525) :*\n      (lvar :(send\n  (float 0.5) :+\n  (begin\n    (send\n      (int 9525) :*\n      (lvar :x2)))) to_i )))) to_i ","(send\n  (float 0.5) :+\n  (begin\n    (send\n      (int 9525) :*\n      (lvar :(send\n  (float 0.5) :+\n  (send\n    (int 9525) :*\n    (lvar :y1))) to_i )))) to_i ","(send\n  (float 0.5) :+\n  (begin\n    (send\n      (int 9525) :*\n      (lvar :(send\n  (float 0.5) :+\n  (begin\n    (send\n      (int 9525) :*\n      (lvar :y1)))) to_i )))) to_i ","(send\n  (float 0.5) :+\n  (begin\n    (send\n      (int 9525) :*\n      (lvar :(send\n  (float 0.5) :+\n  (send\n    (int 9525) :*\n    (lvar :x1))) to_i )))) to_i ","(send\n  (float 0.5) :+\n  (begin\n    (send\n      (int 9525) :*\n      (lvar :(send\n  (float 0.5) :+\n  (begin\n    (send\n      (int 9525) :*\n      (lvar :x1)))) to_i )))) to_i "]}," Writexlsx Worksheet adjust_row_offset":{"type":"method","name":"adjust_row_offset","children":[],"call":[" size_row ","y >= "]}," Writexlsx Worksheet adjust_column_offset":{"type":"method","name":"adjust_column_offset","children":[],"call":[" size_col ","x >= "]}," Writexlsx Worksheet position_object_pixels":{"type":"method","name":"position_object_pixels","children":[],"call":["height == ","width == "," adjust_row_offset "," adjust_column_offset ","20 * "," size_row ","(irange\n  (int 1)\n  (lvar :row_start)) inject ","64 * "," size_col ","(irange\n  (int 1)\n  (lvar :col_start)) inject "," ptrue? ","(irange\n  (int 0)\n  (send\n    (lvar :row_start) :-\n    (int 1))) inject ","row_start - ","(irange\n  (int 0)\n  (send\n    (lvar :col_start) :-\n    (int 1))) inject ","col_start - ","@default_row_pixels * ","@default_col_pixels * ","y1 < ","x1 < ","row_start > ","col_start > "," size_row > "," size_col > ","height >= ","width >= ","y1 >= ","x1 >= "]}," Writexlsx Worksheet sort_pagebreaks":{"type":"method","name":"sort_pagebreaks","children":[],"call":["breaks [] ","breaks size > ","breaks size ","breaks delete ","args uniq sort ","args uniq ","args empty? ","args uniq sort  [] ","args uniq sort  size > ","args uniq sort  size ","args uniq sort  delete "]}," Writexlsx Worksheet cell_to_rowcol":{"type":"method","name":"cell_to_rowcol","children":[],"call":["(send\n  (send\n    (send\n      (lvar :char) :ord) :-\n    (send\n      (str \"A\") :ord)) :+\n  (int 1)) * ","26 ** ","char ord - + ","char ord - ","A ord ","char ord ","chars reverse each ","chars reverse ","col split ","4 to_i ","3 == ","1 == ","cell =~ ","col split  reverse each ","col split  reverse "]}," Writexlsx Worksheet substitute_cellref":{"type":"method","name":"substitute_cellref","children":[],"call":[" raise "," cell_to_rowcol ","2 + ","@xls_rowmax to_s ","1 + ","cell upcase! ","cell respond_to? "]}," Writexlsx Worksheet get_palette_color":{"type":"method","name":"get_palette_color","children":[],"call":[" sprintf ","rgb [] ","@workbook palette [] ","@workbook palette ","$~ [] ","index =~ ","@workbook palette []  [] "]}," Writexlsx Worksheet parse_filter_tokens":{"type":"method","name":"parse_filter_tokens","children":[],"call":["token =~ ","operator == ","token == ","token downcase! "," raise ","(str \"The operator '\") + ","tokens [] ","operator != ","(str \"Token '\") + ","operator ! ","tokens [] == ","tokens [] =~ ","(str \"The type '\") + ","token != ","(str \"The value '\") + ","value to_i > ","value to_i ","value to_i < ","value =~ ","operators [] ","token to_s =~ ","token to_s ","value to_s =~ ","value to_s ","tokens []  =~ ","operators []  == ","tokens []  == ","tokens []  downcase! ","(str \"The operators []  '\") + ","tokens [] s [] ","operators []  != ","operators []  ! ","tokens [] s [] == ","tokens [] s [] =~ ","tokens []  != ","(str \"The tokens []  '\") + ","tokens []  to_i > ","tokens []  to_i ","tokens []  to_i < ","operators [] s [] ","tokens []  to_s =~ ","tokens []  to_s "]}," Writexlsx Worksheet parse_filter_expression":{"type":"method","name":"parse_filter_expression","children":[],"call":[" parse_filter_tokens ","(lvar :expression_1) flatten ","tokens [] "," raise ","(str \"Token '\") + ","conditional =~ ","tokens size == ","tokens size ","(lvar : parse_filter_tokens ) flatten ","tokens []  =~ "]}," Writexlsx Worksheet extract_filter_tokens":{"type":"method","name":"extract_filter_tokens","children":[],"call":["token to_f ","token to_i ","token to_f == ","token =~ ","token gsub! ","token sub! ","tokens map! ","$~ post_match ","tokens << ","str =~ "," Regexp  last_match ","$~ post_match  =~ "]}," Writexlsx Worksheet write_formatted_blank_to_area":{"type":"method","name":"write_formatted_blank_to_area","children":[],"call":[" write_blank ","col == ","row == ","(irange\n  (lvar :col_first)\n  (lvar :col_last)) each ","(irange\n  (lvar :row_first)\n  (lvar :row_last)) each "]}," Writexlsx Worksheet check_conditional_formatting_parameters":{"type":"method","name":"check_conditional_formatting_parameters","children":[],"call":[" raise "," convert_date_time_value ","param [] == ","param [] ","param []= ","param has_key? "," valid_criteria_type [] ","param [] downcase "," valid_criteria_type ","valid_type [] "," valid_criteria_type has_key? ","valid_type has_key? ","(send\n  (send\n    (send\n      (lvar :param) :keys) :uniq) :-\n  (array\n    (sym :type)\n    (sym :format)\n    (sym :criteria)\n    (sym :value)\n    (sym :minimum)\n    (sym :maximum))) empty? ","param keys uniq - ","param keys uniq ","param keys "," convert_date_time_if_required ","(str \"date\") include? "," valid_criteria_type_for_conditional_formatting [] "," valid_criteria_type_for_conditional_formatting "," valid_criteria_type_for_conditional_formatting has_key? "," valid_type_for_conditional_formatting [] "," valid_type_for_conditional_formatting "," valid_type_for_conditional_formatting has_key? ","(send\n  (send\n    (send\n      (lvar :param) :keys) :uniq) :-\n  (send nil :valid_parameter_for_conditional_formatting)) empty? "," valid_parameter_for_conditional_formatting "]}," Writexlsx Worksheet rich_strings_fragments":{"type":"method","name":"rich_strings_fragments","children":[],"call":["token size ","fragments << ","fragments << << ","last != "," raise ","pos > ","last == ","token respond_to? ","rich_strings each ","Format  new "]}," Writexlsx Worksheet valid_validation_type":{"type":"method","name":"valid_validation_type","children":[],"call":[]}," Writexlsx Worksheet valid_validation_parameter":{"type":"method","name":"valid_validation_parameter","children":[],"call":[]}," Writexlsx Worksheet get_range_data":{"type":"method","name":"get_range_data","children":[],"call":["data << ","cell [] ","@table [] [] ","@table [] ","(irange\n  (lvar :col_start)\n  (lvar :col_end)) each ","@table [] ! ","(irange\n  (lvar :row_start)\n  (lvar :row_end)) each ","cell data ","@cell_data_table [] [] ","@cell_data_table [] ","@cell_data_table [] ! ","@table [] []  [] ","@cell_data_table [] []  [] ","@table [] []  data ","@cell_data_table [] []  data ","@@table [] [] _data_table [] [] ","@@cell_data_table [] [] _data_table [] [] ","@@table [] [] _data_table [] ","@@cell_data_table [] [] _data_table [] ","@@table [] [] _data_table [] ! ","@@cell_data_table [] [] _data_table [] ! "]}," Writexlsx Worksheet prepare_chart":{"type":"method","name":"prepare_chart","children":[],"call":["@drawing_links << ","@drawing add_drawing_object ","@external_drawing_links << ","drawing embedded= ","drawing add_drawing_object ","Drawing  new "," drawing? ! "," drawing? "," position_object_emus ","(send\n  (float 0.5) :+\n  (begin\n    (send\n      (int 288) :*\n      (lvar :scale_y)))) to_i ","0.5 + ","288 * ","(send\n  (float 0.5) :+\n  (begin\n    (send\n      (int 480) :*\n      (lvar :scale_x)))) to_i ","480 * ","@charts [] ","chart name ","chart id= ","chart_id - ","(send\n  (float 0.5) :+\n  (begin\n    (send\n      (lvar :height) :*\n      (lvar :y_scale)))) to_i ","height * ","(send\n  (float 0.5) :+\n  (begin\n    (send\n      (lvar :width) :*\n      (lvar :x_scale)))) to_i ","width * ","chart height "," ptrue? ","chart width ","@drawings add_drawing_object ","@drawings embedded= ","Drawings  new "," drawings? ! "," drawings? "," drawing_rel_index ","@Drawing  new _links << ","@Drawing  new  add_Drawing  new _object ","@external_Drawing  new _links << ","Drawing  new  embedded= ","Drawing  new  add_Drawing  new _object "," Drawing  new ? ! "," Drawing  new ? ","chart chart name  ","(send\n  (float 0.5) :+\n  (begin\n    (send\n      (lvar :(send\n  (float 0.5) :+\n  (begin\n    (send\n      (int 288) :*\n      (lvar :scale_y)))) to_i ) :*\n      (lvar :y_scale)))) to_i ","(send\n  (float 0.5) :+\n  (begin\n    (send\n      (lvar :(send\n  (float 0.5) :+\n  (begin\n    (send\n      (lvar :height) :*\n      (lvar :y_scale)))) to_i ) :*\n      (lvar :y_scale)))) to_i ","(send\n  (float 0.5) :+\n  (begin\n    (send\n      (lvar :chart height ) :*\n      (lvar :y_scale)))) to_i ","(send\n  (float 0.5) :+\n  (begin\n    (send\n      (int 288) :*\n      (lvar :scale_y)))) to_i  * ","(send\n  (float 0.5) :+\n  (begin\n    (send\n      (lvar :height) :*\n      (lvar :y_scale)))) to_i  * ","chart height  * ","(send\n  (float 0.5) :+\n  (begin\n    (send\n      (lvar :(send\n  (float 0.5) :+\n  (begin\n    (send\n      (int 480) :*\n      (lvar :scale_x)))) to_i ) :*\n      (lvar :x_scale)))) to_i ","(send\n  (float 0.5) :+\n  (begin\n    (send\n      (lvar :(send\n  (float 0.5) :+\n  (begin\n    (send\n      (lvar :width) :*\n      (lvar :x_scale)))) to_i ) :*\n      (lvar :x_scale)))) to_i ","(send\n  (float 0.5) :+\n  (begin\n    (send\n      (lvar :chart width ) :*\n      (lvar :x_scale)))) to_i ","(send\n  (float 0.5) :+\n  (begin\n    (send\n      (int 480) :*\n      (lvar :scale_x)))) to_i  * ","(send\n  (float 0.5) :+\n  (begin\n    (send\n      (lvar :width) :*\n      (lvar :x_scale)))) to_i  * ","chart width  * ","chart (send\n  (float 0.5) :+\n  (begin\n    (send\n      (int 288) :*\n      (lvar :scale_y)))) to_i  ","chart (send\n  (float 0.5) :+\n  (begin\n    (send\n      (lvar :height) :*\n      (lvar :y_scale)))) to_i  ","chart chart height  ","chart (send\n  (float 0.5) :+\n  (begin\n    (send\n      (int 480) :*\n      (lvar :scale_x)))) to_i  ","chart (send\n  (float 0.5) :+\n  (begin\n    (send\n      (lvar :width) :*\n      (lvar :x_scale)))) to_i  ","chart chart width  ","@Drawing  new s add_Drawing  new _object ","Drawings  new  add_drawing_object ","@Drawing  new s embedded= ","Drawings  new  embedded= "," Drawing  new s? ! "," Drawing  new s? "," Drawing  new _rel_index "]}," Writexlsx Worksheet prepare_comments":{"type":"method","name":"prepare_comments","children":[],"call":["start_data_id + ","(irange\n  (int 1)\n  (begin\n    (send\n      (lvar :count) :/\n      (int 1024)))) each ","count / ","comments size ","@external_comment_links << << ","@external_comment_links << ","comments << ","@comments [] [] ","@comments [] ","@comments [] [] [] ","@comments [] keys sort each ","@comments [] keys sort ","@comments [] keys ","@comments keys sort each ","@comments keys sort ","@comments keys ","(irange\n  (int 1)\n  (begin\n    (send\n      (lvar :comments size ) :/\n      (int 1024)))) each ","comments size  / "]}," Writexlsx Worksheet is_chartsheet?":{"type":"method","name":"is_chartsheet?","children":[],"call":["@is_chartsheet ! ! ","@is_chartsheet ! "]}," Writexlsx Worksheet has_comments?":{"type":"method","name":"has_comments?","children":[],"call":["@has_comments ! ! ","@has_comments ! ","@comments empty? ! ","@comments empty? "]}," Writexlsx Worksheet set_comments_author":{"type":"method","name":"set_comments_author","children":[],"call":[" comments_author= "," put_deprecate_message "]}," Writexlsx Worksheet show_comments":{"type":"method","name":"show_comments","children":[],"call":[]}," Writexlsx Worksheet set_v_pagebreaks":{"type":"method","name":"set_v_pagebreaks","children":[],"call":["@print_style vbreaks ","@page_setup vbreaks "]}," Writexlsx Worksheet set_h_pagebreaks":{"type":"method","name":"set_h_pagebreaks","children":[],"call":["@print_style hbreaks ","(send\n  (lvar :args) :collect) flatten ","brk to_a ","brk respond_to? ","args collect "," Array ","@page_setup hbreaks ","@print_style h(send\n  (lvar :args) :collect) flatten  ","@page_setup h(send\n  (lvar :args) :collect) flatten  "]}," Writexlsx Worksheet filter_column_list":{"type":"method","name":"filter_column_list","children":[],"call":["@filter_type []= ","@filter_cols []= "," prepare_filter_column "," raise ","tokens empty? ","tokens flatten! ","@filter_ prepare_filter_column s []= "," prepare_filter_ prepare_filter_column umn "]}," Writexlsx Worksheet filter_column":{"type":"method","name":"filter_column","children":[],"call":["@filter_type []= ","@filter_cols []= ","Array  new "," filter_column_list ","tokens [] ","tokens [] == ","tokens size == ","tokens size "," parse_filter_expression "," raise "," extract_filter_tokens "," prepare_filter_column ","@filter_ prepare_filter_column s []= "," filter_ prepare_filter_column umn_list "," parse_filter_expression  [] "," extract_filter_tokens  [] "," parse_filter_expression  [] == "," extract_filter_tokens  [] == "," parse_filter_expression  size == "," extract_filter_tokens  size == "," parse_filter_expression  size "," extract_filter_tokens  size "," extract_filter_ parse_filter_expression  "," extract_filter_ extract_filter_tokens  "," prepare_filter_ prepare_filter_column umn "]}," Writexlsx Worksheet autofilter":{"type":"method","name":"autofilter","children":[],"call":[" xl_range "," convert_name_area ","col2 < ","row2 < ","(lvar :row1) include? "," row_col_notation ","_col2 < ","_row2 < ","(lvar :_row1) include? ","@filter_cells []= ","(irange\n  (lvar :_col1)\n  (lvar :_col2)) each "]}," Writexlsx Worksheet fit_to_pages":{"type":"method","name":"fit_to_pages","children":[],"call":["@print_style page_setup_changed= ","@print_style fit_height= ","@print_style fit_width= ","@print_style fit_page= ","@page_setup page_setup_changed= ","@page_setup fit_height= ","@page_setup fit_width= ","@page_setup fit_page= "]}," Writexlsx Worksheet print_row_col_headers":{"type":"method","name":"print_row_col_headers","children":[],"call":["@page_setup print_row_col_headers "]}," Writexlsx Worksheet hide_gridlines":{"type":"method","name":"hide_gridlines","children":[],"call":["option ! ","option == ","@page_setup hide_gridlines ","option != "]}," Writexlsx Worksheet data_validation":{"type":"method","name":"data_validation","children":[],"call":["@validations push ","param [] << ","param [] ","param [] each ","param has_key? ","param []= "," raise "," convert_date_time_value ","param [] == ","error_type [] ","param [] downcase ","error_type has_key? ! ","error_type has_key? ","param has_key? ! ","criteria_type [] ","criteria_type has_key? "," valid_criteria_type "," valid_validation_type [] "," valid_validation_type "," valid_validation_type has_key? "," valid_validation_parameter include? "," valid_validation_parameter ","param each_key "," check_dimensions ","(lvar :row1) include? ","options dup ","options respond_to? ","row2 dup ","row2 respond_to? "," row_col_notation ","@validations << "," set_some_defaults "," convert_date_time_value_if_required "," error_type [] "," error_type "," check_maximum_value_when_criteria_is_between_or_notbetween "," valid_criteria_type [] "," check_valid_citeria_types "," check_criteria_required ","(str \"list\") include? "," check_for_valid_input_params ","validation validate_none? ","DataValidation  new ","@DataValidation  new s push ","options dup  [] << ","row2 dup  [] << ","options dup  [] ","row2 dup  [] ","options dup  [] each ","row2 dup  [] each ","options dup  has_key? ","row2 dup  has_key? ","options dup  []= ","row2 dup  []= ","options dup  [] == ","row2 dup  [] == ","options dup  [] downcase ","row2 dup  [] downcase ","options dup  has_key? ! ","row2 dup  has_key? ! "," valid_criteria_type  [] "," valid_criteria_type  has_key? "," valid_ valid_criteria_type  "," valid_DataValidation  new _type [] "," valid_DataValidation  new _type "," valid_DataValidation  new _type has_key? "," valid_validation_options dup eter include? "," valid_validation_row2 dup eter include? "," valid_DataValidation  new _parameter include? "," valid_validation_options dup eter "," valid_validation_row2 dup eter "," valid_DataValidation  new _parameter ","options dup  each_key ","row2 dup  each_key ","@DataValidation  new s << "," valid_ valid_criteria_type  [] "," check_for_valid_input_options dup s "," check_for_valid_input_row2 dup s ","DataValidation  new  validate_none? "]}," Writexlsx Worksheet conditional_formatting":{"type":"method","name":"conditional_formatting","children":[],"call":["@cond_formats [] << ","@cond_formats [] "," xl_range "," xl_rowcol_to_cell ","col1 == ","row1 == ","col1 > ","row1 > ","param []= ","param [] get_dxf_index ","param [] "," check_conditional_formatting_parameters "," check_dimensions "," raise ","(lvar :row1) include? ","row2 respond_to? "," row_col_notation "," get_palette_color ","param [] == ","args [] gsub gsub ","args [] gsub ","args [] ","args [] =~ ","param [] size ","cond_format range ","Package ConditionalFormat  factory ","@Package ConditionalFormat  factory s [] << ","@Package ConditionalFormat  factory s [] "," xl_ xl_range  "," xl_ xl_rowcol_to_cell  ","cond_format  xl_range  ","cond_format  xl_rowcol_to_cell  ","Package ConditionalFormat  factory  range "]}," Writexlsx Worksheet merge_range_type":{"type":"method","name":"merge_range_type","children":[],"call":[" write_formatted_blank_to_area "," raise "," write_formula_array ","type == "," write_formula "," write_url "," write_rich_string "," write_date_time "," write_blank "," write_number "," write_string ","others << ","@merge << "," store_row_col_max_min_values "," check_dimensions ","col_first > ","row_first > ","col_first == ","row_first == ","format respond_to? "," row_col_notation ","others pop ","args [] ","args first "," write_others pop ted_blank_to_area ","others pop  respond_to? "]}," Writexlsx Worksheet merge_range":{"type":"method","name":"merge_range","children":[],"call":[" write_formatted_blank_to_area "," write ","@merge << "," store_row_col_max_min_values "," check_dimensions ","col_first > ","row_first > "," raise ","col_first == ","row_first == ","format respond_to? ","(lvar :row_first) include? "," row_col_notation ","args [] ","args first "]}," Writexlsx Worksheet set_row":{"type":"method","name":"set_row","children":[],"call":["@row_sizes []= ","@set_rows []= ","level > ","level < ","height == "," store_row_col_max_min_values "," check_dimensions ","row nil? ","args [] "," ptrue? ","@args [] _sizes []= ","@set_args [] s []= "," store_args [] _col_max_min_values ","args []  nil? "]}," Writexlsx Worksheet convert_date_time":{"type":"method","name":"convert_date_time","children":[],"call":["days + ","days > "," date_1904? ! "," date_1904? ","(send\n  (send\n    (lvar :range) :+\n    (lvar :offset)) :+\n  (lvar :norm)) / ","range + + ","range + ","(send\n  (lvar :range) :+\n  (lvar :offset)) / ","(lvar :range) / ","range * ","mdays [] ","(irange\n  (int 0)\n  (send\n    (lvar :month) :-\n    (int 2))) each ","month - ","day > ","day < ","month > ","month < ","year > ","year < ","mdays []= ","leap != ","year % == ","year % ","year % != ","year - ","60 + ","date == ","3 to_i ","2 to_i ","1 to_i ","date =~ ","(send\n  (send\n    (send\n      (send\n        (lvar :hour) :*\n        (int 60)) :*\n      (int 60)) :+\n    (send\n      (lvar :min) :*\n      (int 60))) :+\n  (lvar :sec)) / ","24.0 * * ","24.0 * ","hour * * + + ","hour * * + ","min * ","hour * * ","hour * ","sec >= ","min >= ","hour >= ","4 to_f ","time =~ ","date_time split ","date_time sub! ","date_time =~ ","date_time to_i ","date_time to_f ","date_time sub "," sprintf ","3 to_i s + ","3 to_i s > ","(send\n  (send\n    (lvar :year - ) :+\n    (lvar :offset)) :+\n  (lvar :norm)) / ","year -  + + ","year -  + ","(send\n  (lvar :year - ) :+\n  (lvar :offset)) / ","(lvar :year - ) / ","year -  * ","m3 to_i s [] ","(iyear - \n  (int 0)\n  (send\n    (lvar :month) :-\n    (int 2))) each ","(irange\n  (int 0)\n  (send\n    (lvar :2 to_i ) :-\n    (int 2))) each ","2 to_i  - ","3 to_i  > ","3 to_i  < ","2 to_i  > ","2 to_i  < ","1 to_i  > ","1 to_i  < ","m3 to_i s []= ","1 to_i  % == ","1 to_i  % ","1 to_i  % != ","1 to_i  - ","(send\n  (send\n    (send\n      (send\n        (lvar :hour) :*\n        (int 60)) :*\n      (int 60)) :+\n    (send\n      (lvar :2 to_i ) :*\n      (int 60))) :+\n  (lvar :sec)) / ","(send\n  (send\n    (send\n      (send\n        (lvar :1 to_i ) :*\n        (int 60)) :*\n      (int 60)) :+\n    (send\n      (lvar :min) :*\n      (int 60))) :+\n  (lvar :sec)) / ","1 to_i  * * + + ","1 to_i  * * + ","2 to_i  * ","1 to_i  * * ","1 to_i  * ","2 to_i  >= ","1 to_i  >= ","date_time sub  split "," sprintf  split ","date_time sub  sub! "," sprintf  sub! ","date_time sub  =~ "," sprintf  =~ ","date_time sub  to_i "," sprintf  to_i ","date_time sub  to_f "," sprintf  to_f ","date_time sub  sub "," sprintf  sub "]}," Writexlsx Worksheet repeat_formula":{"type":"method","name":"repeat_formula","children":[],"call":[" write_formula ","tokens join ","token sub! ","tokens each ","pairs shift ","pairs empty? ! ","pairs empty? ","pairs pop ","pairs [] == ","pairs [] "," raise ","tokens empty? ","formula join split ","formula join ","formula respond_to? ","pairs size % == ","pairs size % ","pairs size ","(lvar :row) include? "," row_col_notation ","pairs size even? ","_pairs shift ","_pairs empty? ","_pairs pop ","_pairs [] == ","_pairs [] ","_formula join split ","_formula join ","_formula respond_to? ","_pairs size even? ","_pairs size ","(lvar :_row) include? ","(lvar :format) + "," write_tokens join  "," writetokens join  ","formula join split  join ","_formula join split  join ","formula join split  each ","_formula join split  each ","formula join split  empty? ","_formula join split  empty? ","tokens join  join split ","tokens join  join ","tokens join  respond_to? ","(lvar :format) +  shift ","(lvar :format) +  empty? ","(lvar :format) +  pop ","(lvar :format) +  [] == ","(lvar :format) +  [] ","_tokens join  join split ","_tokens join  join ","_tokens join  respond_to? ","(lvar :format) +  size even? ","(lvar :format) +  size "]}," Writexlsx Worksheet insert_image":{"type":"method","name":"insert_image","children":[],"call":["@images << "," raise ","(lvar :row) include? "," chart "," row_col_notation ","params [] ","options first ","options first class == ","options first class ","options first instance_of? ","_options first ","_options first instance_of? ","(lvar :_row) include? ","(lvar :image) + ","options first  [] ","_options first  [] ","(lvar :image) +  first ","(lvar :image) +  first instance_of? "]}," Writexlsx Worksheet insert_chart":{"type":"method","name":"insert_chart","children":[],"call":["@charts << "," raise ","chart embedded == ","chart embedded ","chart is_a? ","(lvar :row) include? "," row_col_notation ","chart respond_to? ","chart y_offset "," ptrue? ","chart x_offset ","chart y_scale ","chart y_scale != ","chart x_scale ","chart x_scale != ","chart combined already_inserted= ","chart combined ","chart already_inserted= ","chart combined already_inserted? ","chart already_inserted? ","params [] ","options first ","options first class == ","options first class ","options first instance_of? ","_chart y_offset ","_chart x_offset ","_chart y_scale ","_chart y_scale != ","_chart x_scale ","_chart x_scale != ","_chart combined already_inserted= ","_chart combined ","_chart already_inserted= ","_chart combined already_inserted? ","_chart already_inserted? ","_chart embedded == ","_chart embedded ","_chart respond_to? ","_chart is_a? ","_options first ","_options first instance_of? ","(lvar :_row) include? ","(lvar :chart) + ","chart chart y_offset  ","chart params []  ","chart _chart y_offset  ","chart chart x_offset  ","chart _chart x_offset  ","chart chart y_scale  ","chart _chart y_scale  ","chart chart y_scale  != ","chart params []  != ","chart _chart y_scale  != ","chart chart x_scale  ","chart _chart x_scale  ","chart chart x_scale  != ","chart _chart x_scale  != ","options first  [] ","_options first  [] ","_chart chart y_offset  ","_chart params []  ","_chart _chart y_offset  ","_chart chart x_offset  ","_chart _chart x_offset  ","_chart chart y_scale  ","_chart _chart y_scale  ","_chart chart y_scale  != ","_chart params []  != ","_chart _chart y_scale  != ","_chart chart x_scale  ","_chart _chart x_scale  ","_chart chart x_scale  != ","_chart _chart x_scale  != ","(lvar :chart) +  first ","(lvar :chart) +  first instance_of? "]}," Writexlsx Worksheet write_date_time":{"type":"method","name":"write_date_time","children":[],"call":[" store_data_to_table "," write_string "," convert_date_time "," store_row_col_max_min_values "," check_dimensions "," raise ","(lvar :row) include? "," row_col_notation ","NumberCellData  new ","(lvar :_row) include? ","DateTimeCellData  new "," convert_ convert_date_time  "]}," Writexlsx Worksheet write_url":{"type":"method","name":"write_url","children":[],"call":[" store_data_to_table ","url split ","link_type == "," shared_string_index ","str [] ","str bytesize > ","str bytesize "," store_row_col_max_min_values "," check_dimensions ","str sub! ","str gsub! ","url gsub! ","url sub! ","url =~ "," raise ","(lvar :row) include? "," row_col_notation ","HyperlinkCellData  new ","str respond_to? ","@hlink_count > ","url bytesize > ","url bytesize ","url sub ","url dup ","xf respond_to? ! ","xf respond_to? "," sprintf ","match ord ","$~ [] ","re =~ ","url gsub ","@hyperlinks [] []= ","@hyperlinks [] "," write_string ","str dup ","hyperlink str ","hyperlink url ","hyperlink tip= ","Hyperlink  new ","Hyperlink  factory "," hyperlinks_count > "," hyperlinks_count "," store_hyperlink ","(lvar :_row) include? ","_format respond_to? ! ","_format respond_to? ","_str respond_to? ","url sub  split ","url gsub  split "," shared_string_ shared_string_index  "," shared_str [] ing_index ","str []  [] ","str []  bytesize > ","str []  bytesize ","str []  sub! ","str []  gsub! ","url sub  gsub! ","url gsub  gsub! ","url sub  sub! ","url gsub  sub! ","url sub  =~ ","url gsub  =~ ","str []  respond_to? ","url sub  bytesize > ","url gsub  bytesize > ","url sub  bytesize ","url gsub  bytesize ","url sub  sub ","url gsub  sub ","url sub  dup ","url gsub  dup ","$~ []  ord ","url sub  gsub ","url gsub  gsub ","@Hyperlink  new s [] []= ","@Hyperlink  factory s [] []= ","@Hyperlink  new s [] ","@Hyperlink  factory s [] "," write_str [] ing ","str []  dup ","hyperlink str []  ","Hyperlink  new  str ","Hyperlink  factory  str ","hyperlink url sub  ","hyperlink url gsub  ","Hyperlink  new  url ","Hyperlink  factory  url ","Hyperlink  new  tip= ","Hyperlink  factory  tip= "," Hyperlink  new s_count > "," Hyperlink  factory s_count > "," Hyperlink  new s_count "," Hyperlink  factory s_count "," store_Hyperlink  new  "," store_Hyperlink  factory  ","_str []  respond_to? "]}," Writexlsx Worksheet store_formula":{"type":"method","name":"store_formula","children":[],"call":["string split "]}," Writexlsx Worksheet outline_settings":{"type":"method","name":"outline_settings","children":[],"call":[]}," Writexlsx Worksheet write_array_formula":{"type":"method","name":"write_array_formula","children":[],"call":[" store_data_to_table ","formula sub! "," xl_rowcol_to_cell ","col1 == ","row1 == "," store_row_col_max_min_values "," check_dimensions ","col1 > ","row1 > "," raise ","(lvar :row1) include? "," row_col_notation ","FormulaArrayCellData  new "," write_number ","col == ","row == ","(irange\n  (lvar :col1)\n  (lvar :col2)) each ","(irange\n  (lvar :row1)\n  (lvar :row2)) each ","formula sub sub ","formula sub "," write_array_formula_base ","formula sub sub  sub! ","(i xl_rowcol_to_cell \n  (lvar :col1)\n  (lvar :col2)) each ","(i xl_rowcol_to_cell \n  (lvar :row1)\n  (lvar :row2)) each ","formula sub sub  sub sub ","formula sub sub  sub "," write_array_formula sub sub _base "]}," Writexlsx Worksheet write_formula":{"type":"method","name":"write_formula","children":[],"call":[" store_data_to_table ","formula sub! "," store_row_col_max_min_values "," check_dimensions "," write_array_formula ","formula =~ "," raise ","(lvar :row) include? "," row_col_notation ","FormulaCellData  new ","formula sub "," write_dynamic_array_formula ","_formula sub ","_formula =~ ","(lvar :_row) include? ","formula sub  sub! "," write_array_formula sub  ","formula sub  =~ ","formula sub  sub "," write_dynamic_array_formula sub  ","_formula sub  sub ","_formula sub  =~ "]}," Writexlsx Worksheet write_blank":{"type":"method","name":"write_blank","children":[],"call":[" store_data_to_table "," store_row_col_max_min_values "," check_dimensions "," raise ","(lvar :row) include? "," row_col_notation ","BlankCellData  new ","(lvar :_row) include? "]}," Writexlsx Worksheet write_rich_string":{"type":"method","name":"write_rich_string","children":[],"call":[" store_data_to_table "," shared_string_index ","writer string ","writer end_tag ","writer data_element ","attributes << << ","attributes << ","token =~ "," write_font ","writer start_tag ","token respond_to? ","fragments each ","fragments [] respond_to? ! ","fragments [] respond_to? ","fragments [] "," rich_strings_fragments ","Package XMLWriterSimple  new "," store_row_col_max_min_values "," check_dimensions ","rich_strings pop ","rich_strings [] respond_to? ","rich_strings [] "," raise ","(lvar :row) include? "," row_col_notation ","StringCellData  new "," xml_str_of_rich_string "," cell_format_of_rich_string ","(lvar :_row) include? ","_rich_strings [] ","(lvar :col) + ","RichStringCellData  new ","_raw_string size > ","_raw_string size "," shared_string_ shared_string_index  ","Package XMLWriterSimple  new  string ","Package XMLWriterSimple  new  end_tag ","Package XMLWriterSimple  new  data_element ","Package XMLWriterSimple  new  start_tag ","(lvar :col) +  [] "]}," Writexlsx Worksheet write_string":{"type":"method","name":"write_string","children":[],"call":[" store_data_to_table "," shared_string_index ","str [] ","str length > ","str length "," store_row_col_max_min_values "," check_dimensions "," raise ","(lvar :row) include? "," row_col_notation ","StringCellData  new ","str nil? ","col nil? ","row nil? ","str to_s ","_string [] ","_string length > ","_string length ","_string nil? ","_col nil? ","_row nil? ","_string to_s "," shared_string_ shared_string_index  "," shared_str [] ing_index ","str []  [] ","str []  length > ","str []  length ","str []  nil? ","str []  to_s ","_str [] ing [] ","_str [] ing length > ","_str [] ing length ","_str [] ing nil? ","_str [] ing to_s "]}," Writexlsx Worksheet write_number":{"type":"method","name":"write_number","children":[],"call":[" store_data_to_table "," store_row_col_max_min_values "," check_dimensions "," raise ","(lvar :row) include? "," row_col_notation ","NumberCellData  new ","num nil? ","col nil? ","row nil? ","_number nil? ","_col nil? ","_row nil? "]}," Writexlsx Worksheet write_comment":{"type":"method","name":"write_comment","children":[],"call":["@comments [] []= "," comment_params ","@comments [] ","@comments []= "," store_row_col_max_min_values "," check_dimensions "," raise ","(lvar :row) include? "," row_col_notation ","@comments add ","Package Comment  new ","(lvar :_row) include? "]}," Writexlsx Worksheet write_col":{"type":"method","name":"write_col","children":[],"call":[" write ","tokens each "," raise ","tokens respond_to? "," row_col_notation ","_tokens each ","(lvar :tokens) + "]}," Writexlsx Worksheet write_row":{"type":"method","name":"write_row","children":[],"call":[" write "," write_col ","token respond_to? ","tokens each "," raise ","tokens respond_to? "," row_col_notation ","_token respond_to? ","_tokens each ","_tokens respond_to? ","(lvar :tokens) + "]}," Writexlsx Worksheet write":{"type":"method","name":"write","children":[],"call":[" write_string "," write_blank ","args delete_at ","token == "," write_formula ","token =~ "," write_url "," write_number ","token respond_to? "," write_row "," row_col_notation [] "," row_col_notation ","row_col_args delete_at ","row_col_args [] ","@workbook strings_to_urls ","token to_s ","token instance_of? ","fmt force_text_format? ","fmt respond_to? ","_token =~ ","_token == ","_token respond_to? ","_format force_text_format? ","_format respond_to? ","_token to_s ","token to_s  == ","token to_s  =~ ","token to_s  respond_to? "," row_col_notation  delete_at "," row_col_notation  [] ","token to_s  to_s ","token to_s  instance_of? ","row_col_args []  force_text_format? ","row_col_args []  respond_to? ","_token to_s  =~ ","_token to_s  == ","_token to_s  respond_to? ","_token to_s  to_s "]}," Writexlsx Worksheet set_start_page":{"type":"method","name":"set_start_page","children":[],"call":[" start_page= "," put_deprecate_message "]}," Writexlsx Worksheet print_across":{"type":"method","name":"print_across","children":[],"call":["@print_style across= ","@print_style page_setup_changed= ","@page_setup across= ","@page_setup page_setup_changed= "]}," Writexlsx Worksheet hide_zero":{"type":"method","name":"hide_zero","children":[],"call":["flag ! "]}," Writexlsx Worksheet right_to_left":{"type":"method","name":"right_to_left","children":[],"call":["flag ! ! ","flag ! "]}," Writexlsx Worksheet set_print_scale":{"type":"method","name":"set_print_scale","children":[],"call":[" print_scale= "," put_deprecate_message "]}," Writexlsx Worksheet print_scale=":{"type":"method","name":"print_scale=","children":[],"call":["@print_style page_setup_changed= ","@print_style scale= ","@print_style fit_page= ","scale_val > ","scale_val < ","scale to_i ","@page_setup page_setup_changed= ","@page_setup scale= ","@page_setup fit_page= ","scale to_i  > ","scale to_i  < "]}," Writexlsx Worksheet set_zoom":{"type":"method","name":"set_zoom","children":[],"call":["scale to_i ","scale > ","scale < "," zoom= "," put_deprecate_message "]}," Writexlsx Worksheet print_area":{"type":"method","name":"print_area","children":[],"call":[" convert_name_area ","col2 == ","@xls_colmax - ","row2 == ","@xls_rowmax - ","col1 == ","row1 == ","(lvar :row1) include? "," row_col_notation ","args empty? ","@print_area dup ","COL_MAX  - ","ROW_MAX  - ","@page_setup print_area= ","@page_setup print_area dup ","@page_setup print_area ","args first "," convert_name_area  dup "]}," Writexlsx Worksheet print_repeat_cols":{"type":"method","name":"print_repeat_cols","children":[],"call":["@print_style repeat_cols ","@page_setup repeat_cols "]}," Writexlsx Worksheet repeat_columns":{"type":"method","name":"repeat_columns","children":[],"call":["@print_style repeat_rows= "," quote_sheetname "," xl_col_to_name "," substitute_cellref ","args [] =~ ","args [] ","@print_style repeat_cols= ","@page_setup repeat_cols= "]}," Writexlsx Worksheet print_repeat_rows":{"type":"method","name":"print_repeat_rows","children":[],"call":["@print_style repeat_rows ","@page_setup repeat_rows "]}," Writexlsx Worksheet repeat_rows":{"type":"method","name":"repeat_rows","children":[],"call":["@print_style repeat_rows= "," quote_sheetname "," name ","@page_setup repeat_rows= "," quote_ quote_sheetname  "]}," Writexlsx Worksheet set_margin_bottom":{"type":"method","name":"set_margin_bottom","children":[],"call":[" margin_bottom= "," put_deprecate_message "]}," Writexlsx Worksheet set_margin_top":{"type":"method","name":"set_margin_top","children":[],"call":[" margin_top= "," put_deprecate_message "]}," Writexlsx Worksheet set_margin_right":{"type":"method","name":"set_margin_right","children":[],"call":[" margin_right= "," put_deprecate_message "]}," Writexlsx Worksheet set_margin_left":{"type":"method","name":"set_margin_left","children":[],"call":[" margin_left= "," put_deprecate_message "]}," Writexlsx Worksheet set_margins_TB":{"type":"method","name":"set_margins_TB","children":[],"call":[" margins_top_bottom= "," put_deprecate_message "]}," Writexlsx Worksheet set_margins_LR":{"type":"method","name":"set_margins_LR","children":[],"call":[" margins_left_right= "," put_deprecate_message "]}," Writexlsx Worksheet set_margins":{"type":"method","name":"set_margins","children":[],"call":[" margin= "," put_deprecate_message "," margins= "]}," Writexlsx Worksheet margin_bottom=":{"type":"method","name":"margin_bottom=","children":[],"call":["@print_style margin_bottom= "," remove_white_space ","@page_setup margin_bottom= "]}," Writexlsx Worksheet margin_top=":{"type":"method","name":"margin_top=","children":[],"call":["@print_style margin_top= "," remove_white_space ","@page_setup margin_top= "]}," Writexlsx Worksheet margin_right=":{"type":"method","name":"margin_right=","children":[],"call":["@print_style margin_right= "," remove_white_space ","@page_setup margin_right= "]}," Writexlsx Worksheet margin_left=":{"type":"method","name":"margin_left=","children":[],"call":["@print_style margin_left= "," remove_white_space ","@page_setup margin_left= "]}," Writexlsx Worksheet margins_top_bottom=":{"type":"method","name":"margins_top_bottom=","children":[],"call":[" margin_bottom= "," margin_top= "]}," Writexlsx Worksheet margins_left_right=":{"type":"method","name":"margins_left_right=","children":[],"call":[" margin_right= "," margin_left= "]}," Writexlsx Worksheet margins=":{"type":"method","name":"margins=","children":[],"call":[" margin_bottom= "," margin_top= "," margin_right= "," margin_left= "]}," Writexlsx Worksheet center_vertically":{"type":"method","name":"center_vertically","children":[],"call":["@page_setup center_vertically "]}," Writexlsx Worksheet center_horizontally":{"type":"method","name":"center_horizontally","children":[],"call":["@page_setup center_horizontally "]}," Writexlsx Worksheet set_footer":{"type":"method","name":"set_footer","children":[],"call":["@print_style margin_footer= "," raise ","string length >= ","string length ","@page_setup header_footer_changed= ","@page_setup margin_footer= ","@page_setup footer= ","image_count > ","@page_setup footer ","image_count != ","@footer_images count ","@page_setup footer scan count ","@page_setup footer scan ","@footer_images << ","p last ","options [] ","p first ","(array\n  (sym :image_left)\n  (str \"LF\")) each ","@page_setup header_footer_scales= ","@page_setup header_footer_aligns= ","string size >= ","string size ","string gsub ","string dup ","string length > ","@footer_images count  > ","@footer_images count  != "]}," Writexlsx Worksheet set_header":{"type":"method","name":"set_header","children":[],"call":["@print_style margin_header= "," raise ","string length >= ","string length ","@page_setup header_footer_changed= ","@page_setup margin_header= ","@page_setup header= ","image_count > ","@page_setup header ","image_count != ","@header_images count ","@page_setup header scan count ","@page_setup header scan ","@header_images << ","p last ","options [] ","p first ","(array\n  (sym :image_left)\n  (str \"LH\")) each ","@page_setup header_footer_scales= ","@page_setup header_footer_aligns= ","string size >= ","string size ","string gsub ","string length > ","@header_images count  > ","@header_images count  != "]}," Writexlsx Worksheet set_paper":{"type":"method","name":"set_paper","children":[],"call":["@print_style page_setup_changed= "," paper= "," put_deprecate_message "]}," Writexlsx Worksheet set_tab_color":{"type":"method","name":"set_tab_color","children":[],"call":["Colors  new get_color ","Colors  new "," tab_color= "," put_deprecate_message "]}," Writexlsx Worksheet set_page_view":{"type":"method","name":"set_page_view","children":[],"call":["flag ! ! ","flag ! "]}," Writexlsx Worksheet set_landscape":{"type":"method","name":"set_landscape","children":[],"call":["@print_style page_setup_changed= ","@print_style orientation= ","@page_setup page_setup_changed= ","@page_setup orientation= "]}," Writexlsx Worksheet set_portrait":{"type":"method","name":"set_portrait","children":[],"call":["@print_style page_setup_changed= ","@print_style orientation= ","@page_setup page_setup_changed= ","@page_setup orientation= "]}," Writexlsx Worksheet split_panes":{"type":"method","name":"split_panes","children":[],"call":[" freeze_panes ","args [] "]}," Writexlsx Worksheet freeze_panes":{"type":"method","name":"freeze_panes","children":[],"call":[" row_col_notation ","args empty? ","args [] ","args first "]}," Writexlsx Worksheet set_selection":{"type":"method","name":"set_selection","children":[],"call":["sqref == "," xl_range ","col_first == ","row_first == ","col_first > ","row_first > ","row_last nil? "," xl_rowcol_to_cell "," row_col_notation ","args empty? ","args first "," xl_range  == "]}," Writexlsx Worksheet set_column":{"type":"method","name":"set_column","children":[],"call":["@col_formats []= ","@col_sizes []= ","(irange\n  (lvar :firstcol)\n  (lvar :lastcol)) each ","hidden != ","@colinfo push ","(lvar :firstcol) + ","level > ","level < "," check_dimensions_and_update_max_min_values ","format respond_to? ","firstcol > ","lastcol == ","data empty? ! ","data empty? "," substitute_cellref ","args [] =~ ","args [] "," ptrue? ","@colinfo << ","@colinfo []= "," sprintf ","args [] to_s =~ ","args [] to_s ","@col_info []= ","Struct  new new ","Struct  new ","width > ","args [] respond_to? ","COLINFO  new "]}," Writexlsx Worksheet protect":{"type":"method","name":"protect","children":[],"call":["defaults []= "," sprintf "," encode_password ","password != "," raise ","options [] ","defaults has_key? ","options each ","@protect []= "," protect_default_settings merge "," protect_default_settings "," check_parameter "," protect_default_settings keys "," protect_default_settings merge  []= "]}," Writexlsx Worksheet set_first_sheet":{"type":"method","name":"set_first_sheet","children":[],"call":["@workbook firstsheet= "]}," Writexlsx Worksheet hidden?":{"type":"method","name":"hidden?","children":[],"call":[]}," Writexlsx Worksheet hide":{"type":"method","name":"hide","children":[],"call":["@workbook firstsheet= ","@workbook activesheet= ","@workbook firstsheet == ","@workbook firstsheet ","@workbook activesheet == ","@workbook activesheet "]}," Writexlsx Worksheet activate":{"type":"method","name":"activate","children":[],"call":["@workbook activesheet= "]}," Writexlsx Worksheet select":{"type":"method","name":"select","children":[],"call":[]}," Writexlsx Worksheet name":{"type":"method","name":"name","children":[],"call":[]}," Writexlsx Worksheet assemble_xml_file":{"type":"method","name":"assemble_xml_file","children":[],"call":["@writer close ","@writer crlf ","@writer end_tag "," write_legacy_drawing "," write_drawings "," write_col_breaks "," write_row_breaks "," write_header_footer "," write_page_setup "," write_page_margins "," write_print_options "," write_hyperlinks "," write_data_validations "," write_conditional_formats "," write_merge_cells "," write_auto_filter "," write_sheet_protection "," write_sheet_data "," write_cols "," write_sheet_format_pr "," write_sheet_views "," write_dimension "," write_sheet_pr "," write_worksheet ","@writer xml_decl "," write_table_parts "," write_ext_sparklines ","@writer tag_elements "," write_worksheet_attributes "," write_xml_declaration "," write_phonetic_pr "," excel2003_style? "," write_legacy_drawing_hf "," write_ext_list "," write_protected_ranges "," write_ignored_errors "," write_picture "]}," Writexlsx Worksheet set_xml_writer":{"type":"method","name":"set_xml_writer","children":[],"call":["@writer set_xml_writer "]}," Writexlsx Worksheet initialize":{"type":"method","name":"initialize","children":[],"call":["PrintStyle  new ","Package XMLWriterSimple  new ","Package Comments  new ","PageSetup  new ","workbook palette ","@page_setup header_footer_aligns= ","@page_setup margin_footer= ","@page_setup margin_header= "," margins_top_bottom= "," margins_left_right= "," excel2003_style? ","workbook default_url_format ","workbook max_url_length ","PageSetup  new  header_footer_aligns= ","PageSetup  new  margin_footer= ","PageSetup  new  margin_header= "]}," Writexlsx Worksheet PrintStyle attributes":{"type":"method","name":"attributes","children":[],"call":[]}," Writexlsx Worksheet PrintStyle initialize":{"type":"method","name":"initialize","children":[],"call":[]}," Writexlsx Workbook get_sheet_index":{"type":"method","name":"get_sheet_index","children":[],"call":["sheetname == ","@sheetnames [] ","(irange\n  (int 0)\n  (send\n    (lvar :sheet_count) :-\n    (int 1))) each ","sheet_count - ","sheetname sub! ","@sheetnames size ","(irange\n  (int 0)\n  (send\n    (lvar :@sheetnames size ) :-\n    (int 1))) each ","@sheetnames size  - "]}," Writexlsx Workbook prepare_drawings":{"type":"method","name":"prepare_drawings","children":[],"call":["@drawings << ","sheet drawing ","sheet prepare_image "," get_image_properties ","sheet images [] [] ","sheet images [] ","sheet images ","(irange\n  (int 0)\n  (send\n    (lvar :image_count) :-\n    (int 1))) each ","image_count - ","sheet prepare_chart ","(irange\n  (int 0)\n  (send\n    (lvar :chart_count) :-\n    (int 1))) each ","chart_count - ","chart_count + == ","chart_count + ","sheet images size ","sheet charts size ","sheet charts ","@worksheets each ","sheet prepare_shape ","(irange\n  (int 0)\n  (send\n    (lvar :shape_count) :-\n    (int 1))) each ","shape_count - ","sheet sort_charts ","chart_count + + == ","chart_count + + ","sheet shapes size ","sheet shapes ","chart id ","@charts sort_by ","sheet charts each_with_index ","sheet shapes each_with_index ","image [] ","sheet images each_with_index ","sheet prepare_header_image ","sheet footer_images [] [] ","sheet footer_images [] ","sheet footer_images ","footer_image_count times ","sheet header_images [] [] ","sheet header_images [] ","sheet header_images ","header_image_count times ","chart_count + + > ","chart_count + + + + == ","chart_count + + + + ","chart_count + + + ","sheet footer_images size ","sheet header_images size ","(send\n  (ivar :@charts) :select) sort_by ","chart id != ","@charts select ","sheet drawings ","@images << ","header_image_ids []= ","header_image_ids [] ","image_ids []= ","image_ids [] ","sheet prepare_background ","background_ids []= ","background_ids [] ","sheet background_image "," ptrue? ","chart_count + + + + + == ","chart_count + + + + + ","sheet background_image size ","@sheet drawing s << ","@sheet drawings  << ","sheet sheet drawing  ","(irange\n  (int 0)\n  (send\n    (lvar :sheet images size ) :-\n    (int 1))) each ","sheet images size  - ","(irange\n  (int 0)\n  (send\n    (lvar :sheet charts size ) :-\n    (int 1))) each ","sheet charts size  - ","sheet charts size  + == ","sheet charts size  + ","(irange\n  (int 0)\n  (send\n    (lvar :sheet shapes size ) :-\n    (int 1))) each ","sheet shapes size  - ","sheet charts size  + + == ","sheet charts size  + + ","footer_sheet images size  times ","sheet footer_images size  times ","header_sheet images size  times ","sheet header_images size  times ","sheet charts size  + + > ","sheet charts size  + + + + == ","sheet charts size  + + + + ","sheet charts size  + + + ","sheet sheet drawing s ","sheet sheet drawings  ","sheet charts size  + + + + + == ","sheet charts size  + + + + + "]}," Writexlsx Workbook extract_named_ranges":{"type":"method","name":"extract_named_ranges","children":[],"call":["named_ranges << ","sheet_name + + ","sheet_name + ","index != ","name =~ ","range =~ ","name == ","defined_names each "," Regexp  last_match ","sheet_name + + d_ranges << ","sheet_sheet_name + +  + + "," Regexp  last_match  + + ","sheet_sheet_name + +  + "," Regexp  last_match  + ","sheet_name + +  =~ ","sheet_name + +  == ","defined_sheet_name + + s each "]}," Writexlsx Workbook normalise_sheet_name":{"type":"method","name":"normalise_sheet_name","children":[],"call":["name sub downcase ","name sub "]}," Writexlsx Workbook normalise_defined_name":{"type":"method","name":"normalise_defined_name","children":[],"call":["name sub downcase ","name sub "]}," Writexlsx Workbook sort_defined_names":{"type":"method","name":"sort_defined_names","children":[],"call":["sheet_a >= ","name_a < ","name_a > "," normalise_sheet_name ","b [] ","a [] "," normalise_defined_name ","names sort "," normalise_sheet_name  >= "," normalise_defined_name  < "," normalise_defined_name  > "]}," Writexlsx Workbook add_chart_data":{"type":"method","name":"add_chart_data","children":[],"call":["seen_ranges []= ","chart formula_data []= ","chart formula_data ","token =~ ","@str_array [] ","token [] ","token kind_of? ","data collect! ","worksheet get_range_data ","worksheets [] "," get_chart_range ","seen_ranges [] ","seen_ranges has_key? ","chart formula_data [] ","seen_ranges has_key? ! ","chart formula_ids each ","chart formula_ids ","@charts each ","worksheets []= ","worksheet name ","@worksheets each ","@shared_strings string "," chart_data "," raise ","sheetname =~ ","(send\n  (ivar :@charts) :collect) flatten compact each ","(send\n  (ivar :@charts) :collect) flatten compact ","(send\n  (ivar :@charts) :collect) flatten ","chart combined ","@charts collect ","chart formula_worksheet get_range_data  []= ","chart formula_chart formula_data []  []= ","chart formula_worksheet get_range_data  ","chart formula_chart formula_data []  ","@str_array []  =~ ","@shared_strings string  =~ ","@str_array []  [] ","@shared_strings string  [] ","@str_array []  kind_of? ","@shared_strings string  kind_of? ","worksheet get_range_data  collect! ","chart formula_data []  collect! ","worksheet get_range_worksheet get_range_data  ","worksheet get_range_chart formula_data []  ","worksheets []  get_range_data ","worksheets [] s [] ","chart formula_worksheet get_range_data  [] ","chart formula_chart formula_data []  [] ","worksheets [] s []= ","worksheets []  name ","@worksheets [] s each "," chart_worksheet get_range_data  "," chart_chart formula_data []  "]}," Writexlsx Workbook prepare_comments":{"type":"method","name":"prepare_comments","children":[],"call":["@formats << ","format get_xf_index ","Format  new ","comment_id > ","1024 * ","(send\n  (begin\n    (send\n      (int 1024) :+\n      (lvar :count))) :/\n  (float 1024.0)) to_i ","(send\n  (int 1024) :+\n  (lvar :count)) / ","1024 + ","1 * ","sheet prepare_comments ","sheet has_comments? ","@worksheets each ","(send\n  (begin\n    (send\n      (int 1024) :+\n      (send\n        (lvar :sheet) :comments_count))) :/\n  (float 1024.0)) to_i ","(send\n  (int 1024) :+\n  (send\n    (lvar :sheet) :comments_count)) / ","sheet comments_count ","sheet vml_shape_id= ","sheet set_vml_data_id ","sheet set_external_comment_links ","sheet set_external_vml_links ","@Format  new s << ","Format  new  get_xf_index ","(send\n  (begin\n    (send\n      (int 1024) :+\n      (lvar :sheet prepare_comments ))) :/\n  (float 1024.0)) to_i ","(send\n  (int 1024) :+\n  (lvar :sheet prepare_comments )) / ","(send\n  (begin\n    (send\n      (int 1024) :+\n      (send\n        (lvar :sheet) :comments_sheet prepare_comments ))) :/\n  (float 1024.0)) to_i ","(send\n  (int 1024) :+\n  (send\n    (lvar :sheet) :comments_sheet prepare_comments )) / ","sheet comments_sheet prepare_comments  "]}," Writexlsx Workbook prepare_defined_names":{"type":"method","name":"prepare_defined_names","children":[],"call":[" extract_named_ranges "," sort_defined_names ","defined_names << ","sheet index ","sheet print_repeat_cols + ","sheet print_repeat_rows ","sheet print_repeat_cols ","sheet print_repeat_cols + + ","sheet print_repeat_rows empty? ! ","sheet print_repeat_rows empty? ","sheet print_repeat_cols empty? ! ","sheet print_repeat_cols empty? ","sheet print_area ","sheet print_area empty? ! ","sheet print_area empty? ","sheet autofilter_area ","@worksheets each ","@defined_names << "," extract_named_sheet print_repeat_cols + s "," extract_named_sheet print_repeat_cols + + s "," extract_named_sheet print_area s "," extract_named_sheet autofilter_area s "," sort_ sort_defined_names  "," sort_defined_names  << ","@ sort_defined_names  << "]}," Writexlsx Workbook prepare_fills":{"type":"method","name":"prepare_fills","children":[],"call":["format has_dxf_fill= ","format fg_color ","format bg_color ","format pattern ","@dxf_formats each ","format has_fill= ","format fill_index= ","fills []= ","fills [] ","format get_fill_key ","format pattern= ","format bg_color= ","format fg_color != ","format bg_color == ","format pattern <= ","format fg_color= ","format fg_color == ","format bg_color != ","@xf_formats each ","format has_dxf_fill ","format has_fill "," ne_0? "," eq_0? ","format pattern == ","format dxf_fg_color= ","format dxf_bg_color= ","format pattern != ","format get_fill_format get_fill_key  "]}," Writexlsx Workbook prepare_borders":{"type":"method","name":"prepare_borders","children":[],"call":["format has_dxf_border= ","key =~ ","format get_border_key ","@dxf_formats each ","format has_border= ","format border_index= ","borders []= ","borders [] ","@xf_formats each ","format has_dxf_border ","borders size ","format has_border ","borders [] ! ","format set_border_info ","format get_border_key  =~ ","format get_border_format get_border_key  "]}," Writexlsx Workbook prepare_num_formats":{"type":"method","name":"prepare_num_formats","children":[],"call":["format xf_index == ","format xf_index ","format num_format_index= ","num_formats []= ","num_formats [] ","num_format to_s !~ ","num_format to_s ","num_format to_s =~ ","format num_format ","(send\n  (ivar :@xf_formats) :+\n  (ivar :@dxf_formats)) each ","@xf_formats + "," ptrue? ","num_format to_s == ","num_format == ","num_formats << ","unique_num_formats []= ","unique_num_formats [] ","format format num_format _index= ","format num_format s []= ","format num_format s [] ","format num_format  to_s !~ ","format num_format  to_s ","format num_format  to_s =~ ","format format num_format  ","format num_format  to_s == ","format num_format  == ","format num_format s << ","unique_format num_format s []= ","unique_format num_format s [] "]}," Writexlsx Workbook prepare_fonts":{"type":"method","name":"prepare_fonts","children":[],"call":["format has_dxf_font= ","format strikeout? ","format underline? ","format italic? ","format bold? ","format color ","@dxf_formats each ","format has_font= ","format font_index= ","fonts []= ","fonts [] ","format get_font_key ","@xf_formats each ","format has_dxf_font ","fonts size ","format has_font ","fonts [] ! ","format color? ","format set_font_info ","format get_font_format get_font_key  "]}," Writexlsx Workbook set_default_xf_indices":{"type":"method","name":"set_default_xf_indices","children":[],"call":["format get_xf_index ","@formats each "]}," Writexlsx Workbook prepare_formats":{"type":"method","name":"prepare_formats","children":[],"call":["@dxf_formats []= ","@xf_formats []= ","format dxf_index ","format xf_index ","@formats each ","@formats formats each ","@formats formats ","format format dxf_index  ","format dformat xf_index  ","format format xf_index  "]}," Writexlsx Workbook prepare_format_properties":{"type":"method","name":"prepare_format_properties","children":[],"call":[" prepare_fills "," prepare_borders "," prepare_num_formats "," prepare_fonts "," prepare_formats "]}," Writexlsx Workbook prepare_sst_string_data":{"type":"method","name":"prepare_sst_string_data","children":[],"call":["strings []= ","@str_table [] ","@str_table each_key "]}," Writexlsx Workbook store_workbook":{"type":"method","name":"store_workbook","children":[],"call":["Writexlsx Utility  delete_files ","IO  copy_stream ","ZipFileUtils  zip ","packager create_package ","packager set_package_dir ","packager add_workbook "," add_chart_data "," prepare_drawings "," prepare_defined_names "," prepare_comments "," prepare_sst_string_data ","sheet activate ","sheet index == ","sheet index ","@worksheets each ","@worksheets first select ","@worksheets first ","@activesheet == "," add_worksheet ","@worksheets empty? ","Package Packager  new ","@worksheets [] activate ","@worksheets [] "," prepare_vml_objects "," write_parts ","Zip OutputStream  open "," prepare_tables "," ruby_18 "," ruby_19 "," tempdir "," fileobj "," filename ","@worksheets visible_first index ","@worksheets visible_first ","@worksheets visible_first select "," prepare_metadata ","Package Packager  new  create_package ","Package Packager  new  set_package_dir ","Package Packager  new  add_workbook ","@worksheets visible_first index  == "]}," Writexlsx Workbook defined_names":{"type":"method","name":"defined_names","children":[],"call":[]}," Writexlsx Workbook activesheet":{"type":"method","name":"activesheet","children":[],"call":[]}," Writexlsx Workbook firstsheet":{"type":"method","name":"firstsheet","children":[],"call":[]}," Writexlsx Workbook write_io":{"type":"method","name":"write_io","children":[],"call":["@writer << "]}," Writexlsx Workbook write_defined_name":{"type":"method","name":"write_defined_name","children":[],"call":["@writer data_element ","attributes << << ","attributes << ","id == "]}," Writexlsx Workbook write_defined_names":{"type":"method","name":"write_defined_names","children":[],"call":["str << ","@writer end_tag "," write_defined_name ","@defined_names each ","@writer start_tag ","@defined_names empty? ","@defined_names nil? ","@writer tag_elements "," ptrue? ","@writer start_tag  << "]}," Writexlsx Workbook write_mx_arch_id":{"type":"method","name":"write_mx_arch_id","children":[],"call":["@writer empty_tag "]}," Writexlsx Workbook write_ext":{"type":"method","name":"write_ext","children":[],"call":["@writer start_tag << << ","@writer end_tag ","@writer start_tag << "," write_mx_arch_id ","@writer start_tag ","@writer tag_elements "," uri "]}," Writexlsx Workbook write_ext_lst":{"type":"method","name":"write_ext_lst","children":[],"call":["@writer start_tag << << ","@writer end_tag ","@writer start_tag << "," write_ext ","@writer start_tag ","@writer tag_elements "]}," Writexlsx Workbook write_calc_pr":{"type":"method","name":"write_calc_pr","children":[],"call":["@writer empty_tag ","attributes << "]}," Writexlsx Workbook write_sheet":{"type":"method","name":"write_sheet","children":[],"call":["@writer empty_tag ","attributes << << ","attributes << ","@writer empty_tag_encoded "]}," Writexlsx Workbook write_sheets":{"type":"method","name":"write_sheets","children":[],"call":["str << ","@writer end_tag "," write_sheet ","sheet hidden ","sheet name ","@worksheets each ","@writer start_tag ","sheet hidden? ","@writer tag_elements ","@writer start_tag  << "]}," Writexlsx Workbook write_workbook_view":{"type":"method","name":"write_workbook_view","children":[],"call":["@writer empty_tag ","attributes << << ","attributes << ","@activesheet > ","@firstsheet > ","@tab_ratio != ","@firstsheet + "]}," Writexlsx Workbook write_book_views":{"type":"method","name":"write_book_views","children":[],"call":["@writer start_tag << << ","@writer end_tag ","@writer start_tag << "," write_workbook_view ","@writer start_tag ","@writer tag_elements "]}," Writexlsx Workbook write_workbook_pr":{"type":"method","name":"write_workbook_pr","children":[],"call":["@writer empty_tag ","attributes << << ","attributes << "," date_1904? "," ptrue? "]}," Writexlsx Workbook write_file_version":{"type":"method","name":"write_file_version","children":[],"call":["@writer empty_tag ","attributes << << ","attributes << "]}," Writexlsx Workbook write_workbook_end":{"type":"method","name":"write_workbook_end","children":[],"call":["@writer end_tag "]}," Writexlsx Workbook write_workbook":{"type":"method","name":"write_workbook","children":[],"call":["@writer start_tag ","schema + ","@writer tag_elements "]}," Writexlsx Workbook write_xml_declaration":{"type":"method","name":"write_xml_declaration","children":[],"call":["@writer xml_decl "]}," Writexlsx Workbook get_chart_range":{"type":"method","name":"get_chart_range","children":[],"call":["col_start != ","row_start != "," xl_cell_to_rowcol ","sheetname gsub! ","sheetname sub! ","cells split ","cells =~ ","range [] ","pos + ","pos > ","range rindex ","range []  gsub! ","range []  sub! ","range []  split ","range []  =~ ","range rindex  + ","range rindex  > "]}," Writexlsx Workbook check_sheetname":{"type":"method","name":"check_sheetname","children":[],"call":[" raise ","name_a downcase == ","name_b downcase ","name_a downcase ","worksheet name ","@worksheets each ","Invalid character []:*?/\\ in worksheet name:  + ","name =~ ","name bytesize > ","name bytesize ","name == ","name length > ","name length "," check_valid_sheetname ","name nil? "," make_and_check_sheet_chart_name ","@worksheets make_and_check_sheet_chart_name ","worksheet name  downcase "]}," Writexlsx Workbook set_color_palette":{"type":"method","name":"set_color_palette","children":[],"call":[]}," Writexlsx Workbook setup_filename":{"type":"method","name":"setup_filename","children":[],"call":[" raise ","File  join ","Digest MD5  hexdigest + ","Digest MD5  hexdigest ","Time  now to_s ","Time  now ","file respond_to? ","file != "," tempdir ","@file respond_to? ","@file != "]}," Writexlsx Workbook dxf_formats":{"type":"method","name":"dxf_formats","children":[],"call":["@dxf_formats dup "]}," Writexlsx Workbook xf_formats":{"type":"method","name":"xf_formats","children":[],"call":["@xf_formats dup "]}," Writexlsx Workbook shared_string_index":{"type":"method","name":"shared_string_index","children":[],"call":["@str_table [] ","@str_table []= ","@shared_strings index "]}," Writexlsx Workbook date_1904?":{"type":"method","name":"date_1904?","children":[],"call":["@date_1904 ! ! ","@date_1904 ! "]}," Writexlsx Workbook writer":{"type":"method","name":"writer","children":[],"call":[]}," Writexlsx Workbook activesheet=":{"type":"method","name":"activesheet=","children":[],"call":[]}," Writexlsx Workbook set_custom_color":{"type":"method","name":"set_custom_color","children":[],"call":["index + ","@custom_colors << "," sprintf ","@palette []= "," raise ","blue > ","blue < ","green > ","green < ","red > ","red < ","index > ","index < ","3 hex ","2 hex ","1 hex ","red =~ ","red nil? ! ","red nil? ","red to_s =~ ","red to_s "," Regexp  last_match hex "," Regexp  last_match ","3 hex  > "," Regexp  last_match hex  > ","3 hex  < "," Regexp  last_match hex  < ","2 hex  > ","2 hex  < ","1 hex  > ","1 hex  < ","1 hex  =~ "," Regexp  last_match hex  =~ ","1 hex  nil? ! "," Regexp  last_match hex  nil? ! ","1 hex  nil? "," Regexp  last_match hex  nil? ","1 hex  to_s =~ "," Regexp  last_match hex  to_s =~ ","1 hex  to_s "," Regexp  last_match hex  to_s "]}," Writexlsx Workbook set_properties":{"type":"method","name":"set_properties","children":[],"call":["params dup ","params []= ","params has_key? ","valid has_key? ","params each_key ","params empty? "]}," Writexlsx Workbook define_name":{"type":"method","name":"define_name","children":[],"call":["@defined_names push "," raise ","name =~ ","name !~ ","sheet_index ! "," get_sheet_index ","formula sub! ","@worksheets index_by_name ","formula sub "," Regexp  last_match ","@defined_ Regexp  last_match s push "," Regexp  last_match  =~ "," Regexp  last_match  !~ "," get_sheet_index  ! ","@worksheets index_by_name  ! "," get_ get_sheet_index  "," get_@worksheets index_by_name  ","@worksheets index_by_ Regexp  last_match  "]}," Writexlsx Workbook add_format":{"type":"method","name":"add_format","children":[],"call":["@formats push ","Format  new ","@formats formats push ","@formats formats ","properties update ","@Format  new s push ","@Format  new s Format  new s push ","@Format  new s Format  new s "]}," Writexlsx Workbook add_chart":{"type":"method","name":"add_chart","children":[],"call":["@charts << ","@sheetnames index= ","@worksheets index= ","chartsheet drawing= ","Drawing  new ","chartsheet chart= ","chart palette= ","Chartsheet  new ","chart set_embedded_config_data ","chart index= ","chart id= ","@charts size ","Chart  factory "," check_sheetname ","params [] "," raise ","@worksheets size "," ptrue? ","@sheetnames << ","@worksheets << "," check_chart_sheetname ","chart name= ","@Chart  factory s << ","@sheet check_sheetname s index= ","@sheetparams [] s index= ","@sheetnames @worksheets size = ","@ check_chart_sheetname s index= ","@worksheets @worksheets size = ","Chartsheet  new  drawing= ","Chart  factory sheet drawing= ","Chartsheet  new  chart= ","Chart  factory sheet Chart  factory = ","Chart  factory  palette= ","Chart  factory  set_embedded_config_data ","chart set_params [] _config_data ","Chart  factory  index= ","chart @worksheets size = ","Chart  factory  id= ","@Chart  factory s size "," check_sheet check_sheetname  "," check_sheetparams []  "," check_ check_chart_sheetname  ","@sheet check_sheetname s << ","@sheetparams [] s << ","@ check_chart_sheetname s << "," check_Chart  factory _sheetname "," check_chart_sheet check_sheetname  "," check_chart_sheetparams []  "," check_chart_ check_chart_sheetname  ","Chart  factory  name= ","chart  check_sheetname = ","chart params [] = "]}," Writexlsx Workbook add_worksheet":{"type":"method","name":"add_worksheet","children":[],"call":["@sheetnames []= ","@worksheets []= ","Worksheet  new "," check_sheetname ","@worksheets size ","@sheetnames << ","@worksheets << ","@sheet check_sheetname s []= ","@Worksheet  new s []= "," check_sheet check_sheetname  ","@Worksheet  new s size ","@sheet check_sheetname s << ","@Worksheet  new s << "]}," Writexlsx Workbook assemble_xml_file":{"type":"method","name":"assemble_xml_file","children":[],"call":["@writer close ","@writer crlf "," write_workbook_end "," write_calc_pr "," write_defined_names "," write_sheets "," write_book_views "," write_workbook_pr "," write_file_version "," write_workbook "," write_xml_declaration "," prepare_format_properties ","@worksheets write_sheets "," write_file_sharing "]}," Writexlsx Workbook xml_str":{"type":"method","name":"xml_str","children":[],"call":["@writer string "]}," Writexlsx Workbook set_xml_writer":{"type":"method","name":"set_xml_writer","children":[],"call":["@writer set_xml_writer "]}," Writexlsx Workbook get_1904":{"type":"method","name":"get_1904","children":[],"call":[]}," Writexlsx Workbook set_1904":{"type":"method","name":"set_1904","children":[],"call":["mode == ","mode ! "," raise "," sheets empty? "," sheets "," ptrue? "]}," Writexlsx Workbook sheets":{"type":"method","name":"sheets","children":[],"call":["@worksheets [] ","args collect ","args empty? "]}," Writexlsx Workbook close":{"type":"method","name":"close","children":[],"call":[" store_workbook "]}," Writexlsx Workbook initialize":{"type":"method","name":"initialize","children":[],"call":[" set_color_palette "," add_format ","default_formats merge ","Time  now "," setup_filename ","File  join ","Digest MD5  hexdigest ","Time  now to_s ","Dir  tmpdir ","Package XMLWriterSimple  new ","Package SharedStrings  new ","Formats  new ","Sheets  new ","options [] "," process_workbook_options ","Process  pid ","Time  now to_f to_s ","Time  now to_f ","options [] nil? ","@max_url_length < ","options []  < "]}," Writexlsx Utility put_deprecate_message":{"type":"method","name":"put_deprecate_message","children":[],"call":["$stderr puts "," warn "]}," Writexlsx Utility delete_files":{"type":"method","name":"delete_files","children":[],"call":[]}," Writexlsx Utility xml_str":{"type":"method","name":"xml_str","children":[],"call":["@writer string "]}," Writexlsx Utility absolute_char":{"type":"method","name":"absolute_char","children":[],"call":[]}," Writexlsx Utility xl_range_formula":{"type":"method","name":"xl_range_formula","children":[],"call":[" xl_rowcol_to_cell ","(send\n  (lvar :sheetname) :=~\n  (regexp\n    (str \"^'\")\n    (regopt))) ! ","sheetname =~ "]}," Writexlsx Utility xl_range":{"type":"method","name":"xl_range","children":[],"call":[" xl_rowcol_to_cell ","range1 == "," xl_rowcol_to_cell  == "]}," Writexlsx Utility xl_col_to_name":{"type":"method","name":"xl_col_to_name","children":[],"call":[" absolute_char ","(send\n  (lvar :col) :-\n  (int 1)) / ","col - ","col_letter + ","(send\n  (send\n    (send\n      (str \"A\") :ord) :+\n    (lvar :remainder)) :-\n  (int 1)) chr ","A ord + - ","A ord + ","A ord ","remainder == ","col % ","col > ","ColName  instance col_str ","ColName  instance ","(send\n  (lvar :(send\n  (lvar :col) :-\n  (int 1)) / ) :-\n  (int 1)) / ","(send\n  (lvar :col) :-\n  (int 1)) /  - ","(send\n  (lvar :col) :-\n  (int 1)) / _letter + ","(send\n  (send\n    (send\n      (str \"A\") :ord) :+\n    (lvar :remainder)) :-\n  (int 1)) chr  + ","(send\n  (send\n    (send\n      (str \"A\") :ord) :+\n    (lvar :col % )) :-\n  (int 1)) chr ","col %  == ","(send\n  (lvar :col) :-\n  (int 1)) /  % ","(send\n  (lvar :col) :-\n  (int 1)) /  > ","ColName  instance (send\n  (lvar :col) :-\n  (int 1)) / _str ","ColName  instance col_letter +  ","ColName  instance ColName  instance col_str  "]}," Writexlsx Utility xl_cell_to_rowcol":{"type":"method","name":"xl_cell_to_rowcol","children":[],"call":["(send\n  (send\n    (send\n      (lvar :char) :ord) :-\n    (send\n      (str \"A\") :ord)) :+\n  (int 1)) * ","26 ** ","char ord - + ","char ord - ","A ord ","char ord ","chars reverse each ","chars reverse ","col split ","4 to_i ","3 != ","1 != ","cell =~ "," Regexp  last_match to_i "," Regexp  last_match "," Regexp  last_match != ","col split  reverse each ","col split  reverse "," Regexp  last_match  split "]}," Writexlsx Utility xl_rowcol_to_cell":{"type":"method","name":"xl_rowcol_to_cell","children":[],"call":[" absolute_char "," xl_col_to_name "]}," Writexlsx Package XMLWriterSimple escape_xml_chars":{"type":"method","name":"escape_xml_chars","children":[],"call":["str gsub gsub gsub gsub ","str gsub gsub gsub ","str gsub gsub ","str gsub ","str =~ "]}," Writexlsx Package XMLWriterSimple key_vals":{"type":"method","name":"key_vals","children":[],"call":["array join ","array << "," key_val "," escape_xml_chars ","attr [] ","i + ","(irange\n  (int 0)\n  (send\n    (send\n      (lvar :attr) :size) :-\n    (int 1))) step ","attr size - ","attr size "," escape_attributes ","str + ","attr last ","attr first ","attribute inject "]}," Writexlsx Package XMLWriterSimple key_val":{"type":"method","name":"key_val","children":[],"call":[]}," Writexlsx Package XMLWriterSimple io_write":{"type":"method","name":"io_write","children":[],"call":["@io << "]}," Writexlsx Package XMLWriterSimple string":{"type":"method","name":"string","children":[],"call":["@io string "]}," Writexlsx Package XMLWriterSimple close":{"type":"method","name":"close","children":[],"call":["@io close ","f << "," string ","File  open "]}," Writexlsx Package XMLWriterSimple crlf":{"type":"method","name":"crlf","children":[],"call":[" io_write "]}," Writexlsx Package XMLWriterSimple characters":{"type":"method","name":"characters","children":[],"call":[" escape_xml_chars "," io_write "," escape_data "]}," Writexlsx Package XMLWriterSimple data_element":{"type":"method","name":"data_element","children":[],"call":["str << "," end_tag "," io_write "," characters "," start_tag "," tag_elements "," escape_xml_chars "," escape_data "," start_tag  << "]}," Writexlsx Package XMLWriterSimple empty_tag":{"type":"method","name":"empty_tag","children":[],"call":[" io_write "," key_vals "]}," Writexlsx Package XMLWriterSimple end_tag":{"type":"method","name":"end_tag","children":[],"call":[" io_write "," end_tag_str "]}," Writexlsx Package XMLWriterSimple start_tag":{"type":"method","name":"start_tag","children":[],"call":[" io_write "," key_vals "," start_tag_str "]}," Writexlsx Package XMLWriterSimple xml_decl":{"type":"method","name":"xml_decl","children":[],"call":[" io_write "]}," Writexlsx Package XMLWriterSimple set_xml_writer":{"type":"method","name":"set_xml_writer","children":[],"call":["File  open "]}," Writexlsx Package XMLWriterSimple initialize":{"type":"method","name":"initialize","children":[],"call":["StringIO  new "]}," Writexlsx Package VML write_column":{"type":"method","name":"write_column","children":[],"call":["@writer data_element "]}," Writexlsx Package VML write_row":{"type":"method","name":"write_row","children":[],"call":["@writer data_element "]}," Writexlsx Package VML write_auto_fill":{"type":"method","name":"write_auto_fill","children":[],"call":["@writer data_element "]}," Writexlsx Package VML write_anchor":{"type":"method","name":"write_anchor","children":[],"call":["@writer data_element ","(lvar :col_start) join ","@writer (lvar :col_start) join _element "]}," Writexlsx Package VML write_visible":{"type":"method","name":"write_visible","children":[],"call":["@writer empty_tag "]}," Writexlsx Package VML write_size_with_cells":{"type":"method","name":"write_size_with_cells","children":[],"call":["@writer empty_tag "]}," Writexlsx Package VML write_move_with_cells":{"type":"method","name":"write_move_with_cells","children":[],"call":["@writer empty_tag "]}," Writexlsx Package VML write_client_data":{"type":"method","name":"write_client_data","children":[],"call":["@writer end_tag "," write_visible ","visible nil? ! ","visible nil? ","visible != "," write_column "," write_row "," write_auto_fill "," write_anchor "," write_size_with_cells "," write_move_with_cells ","@writer start_tag "]}," Writexlsx Package VML write_div":{"type":"method","name":"write_div","children":[],"call":["@writer end_tag ","@writer start_tag "]}," Writexlsx Package VML write_textbox":{"type":"method","name":"write_textbox","children":[],"call":["@writer end_tag "," write_div ","@writer start_tag "]}," Writexlsx Package VML write_shadow":{"type":"method","name":"write_shadow","children":[],"call":["@writer empty_tag "]}," Writexlsx Package VML write_fill":{"type":"method","name":"write_fill","children":[],"call":["@writer empty_tag "]}," Writexlsx Package VML float_to_str":{"type":"method","name":"float_to_str","children":[],"call":["float to_s ","float to_i to_s ","float to_i ","float == "]}," Writexlsx Package VML write_shape":{"type":"method","name":"write_shape","children":[],"call":["@writer end_tag "," write_client_data "," write_textbox "," write_path "," write_shadow "," write_fill ","@writer start_tag ","position:absolute; + + + + + + + + + + + + + + + + + ","position:absolute; + + + + + + + + + + + + + + + + ","position:absolute; + + + + + + + + + + + + + + + ","position:absolute; + + + + + + + + + + + + + + ","position:absolute; + + + + + + + + + + + + + ","position:absolute; + + + + + + + + + + + + ","position:absolute; + + + + + + + + + + + ","position:absolute; + + + + + + + + + + ","position:absolute; + + + + + + + + + ","position:absolute; + + + + + + + + ","position:absolute; + + + + + + + ","position:absolute; + + + + + + ","position:absolute; + + + + + ","position:absolute; + + + + ","position:absolute; + + + ","position:absolute; + + ","position:absolute; + "," float_to_str ","visible nil? ! ","visible nil? ","visible != "," pixels_to_points ","comment [] ","_x0000_s + ","id to_s ","comment []  nil? ! ","comment []  nil? ","comment []  != ","_x0000_s +  to_s "]}," Writexlsx Package VML write_path":{"type":"method","name":"write_path","children":[],"call":["@writer empty_tag ","attributes << << ","attributes << "]}," Writexlsx Package VML write_stroke":{"type":"method","name":"write_stroke","children":[],"call":["@writer empty_tag "]}," Writexlsx Package VML write_shapetype":{"type":"method","name":"write_shapetype","children":[],"call":["@writer end_tag "," write_path "," write_stroke ","@writer start_tag "]}," Writexlsx Package VML write_idmap":{"type":"method","name":"write_idmap","children":[],"call":["@writer empty_tag "]}," Writexlsx Package VML write_shapelayout":{"type":"method","name":"write_shapelayout","children":[],"call":["@writer end_tag "," write_idmap ","@writer start_tag "]}," Writexlsx Package VML write_xml_namespace":{"type":"method","name":"write_xml_namespace","children":[],"call":["@writer start_tag ","schema + "]}," Writexlsx Package VML pixels_to_points":{"type":"method","name":"pixels_to_points","children":[],"call":["vertices flatten "]}," Writexlsx Package VML assemble_xml_file":{"type":"method","name":"assemble_xml_file","children":[],"call":["@writer close ","@writer crlf ","@writer end_tag "," write_shape ","comments_data each "," write_shapetype "," write_shapelayout "," write_xml_namespace "]}," Writexlsx Package VML set_xml_writer":{"type":"method","name":"set_xml_writer","children":[],"call":["@writer set_xml_writer "]}," Writexlsx Package VML initialize":{"type":"method","name":"initialize","children":[],"call":["Package XMLWriterSimple  new "]}," Writexlsx Package Theme write_theme_file":{"type":"method","name":"write_theme_file","children":[],"call":["@writer write "]}," Writexlsx Package Theme set_xml_writer":{"type":"method","name":"set_xml_writer","children":[],"call":[" open "]}," Writexlsx Package Theme assemble_xml_file":{"type":"method","name":"assemble_xml_file","children":[],"call":["@writer close ","@writer write "," write_theme_file "]}," Writexlsx Package Theme initialize":{"type":"method","name":"initialize","children":[],"call":[]}," Writexlsx Package Styles write_extend":{"type":"method","name":"write_extend","children":[],"call":["@writer empty_tag "]}," Writexlsx Package Styles write_condense":{"type":"method","name":"write_condense","children":[],"call":["@writer empty_tag "]}," Writexlsx Package Styles write_xml_declaration":{"type":"method","name":"write_xml_declaration","children":[],"call":["@writer xml_decl "]}," Writexlsx Package Styles write_mru_colors":{"type":"method","name":"write_mru_colors","children":[],"call":["@writer end_tag "," write_color ","@custom_colors reverse each ","@custom_colors reverse ","@writer start_tag ","custom_colors [] ","count > ","custom_colors size ","@writer tag_elements ","custom_colors reverse each ","custom_colors reverse ","@custom_colors []  reverse each ","@custom_colors []  reverse ","custom_colors []  [] ","custom_colors size  > ","custom_colors []  size ","custom_colors []  reverse each ","custom_colors []  reverse "]}," Writexlsx Package Styles write_colors":{"type":"method","name":"write_colors","children":[],"call":["@writer end_tag "," write_mru_colors ","@writer start_tag ","@custom_colors empty? ","@writer tag_elements "]}," Writexlsx Package Styles write_table_styles":{"type":"method","name":"write_table_styles","children":[],"call":["@writer empty_tag "]}," Writexlsx Package Styles write_dxfs":{"type":"method","name":"write_dxfs","children":[],"call":["@writer empty_tag ","@writer end_tag "," write_border ","format has_dxf_border != ","format has_dxf_border "," write_fill ","format has_dxf_fill != ","format has_dxf_fill "," write_num_fmt ","format num_format ","format num_format_index ","format num_format_index != "," write_font ","format has_dxf_font == ","format has_dxf_font ","@writer start_tag ","@dxf_formats each ","formats empty? ! ","formats empty? ","formats size ","format has_dxf_border? ","format has_dxf_fill? ","format has_dxf_font? ","@writer tag_elements ","format write_font "," write_dxf ","@dxf_formats empty? ","@dxf_formats count ","@dxf_formats formats size  "]}," Writexlsx Package Styles write_cell_style":{"type":"method","name":"write_cell_style","children":[],"call":["@writer empty_tag "]}," Writexlsx Package Styles write_cell_styles":{"type":"method","name":"write_cell_styles","children":[],"call":["@writer end_tag "," write_cell_style ","@writer start_tag ","@writer tag_elements "," ptrue? "]}," Writexlsx Package Styles write_xf":{"type":"method","name":"write_xf","children":[],"call":["@writer empty_tag ","@writer end_tag ","@writer start_tag ","attributes << << ","attributes << ","format get_protection_properties ","align empty? ! ","align empty? ","format get_align_properties ","format border_index > ","format border_index ","format fill_index > ","format fill_index ","format font_index > ","format font_index ","format has_font != ","format has_font ","format num_format_index > ","format num_format_index ","@writer tag_elements ","format xf_attributes ","format get_format get_protection_properties _properties "]}," Writexlsx Package Styles write_style_xf":{"type":"method","name":"write_style_xf","children":[],"call":["@writer empty_tag ","@writer tag_elements ","attributes << "," ptrue? "]}," Writexlsx Package Styles write_cell_xfs":{"type":"method","name":"write_cell_xfs","children":[],"call":["@writer end_tag "," write_xf ","formats each ","@writer start_tag ","formats size ","formats pop ","last_format font_only != ","last_format font_only ","formats [] ","@writer tag_elements ","formats []  font_only != ","formats []  font_only "]}," Writexlsx Package Styles write_cell_style_xfs":{"type":"method","name":"write_cell_style_xfs","children":[],"call":["@writer end_tag "," write_style_xf ","@writer start_tag ","@writer tag_elements "," ptrue? "]}," Writexlsx Package Styles write_sub_border":{"type":"method","name":"write_sub_border","children":[],"call":["@writer end_tag ","@writer empty_tag "," get_palette_color ","color != ","@writer start_tag ","border_styles [] ","style == ","@writer tag_elements "," palette_color ","BORDER_STYLES  [] ","color == ","(int 0) include? "," get_palette_ get_palette_color  "," get_palette_ palette_color  "," get_palette_color  != "," palette_color  != "," palette_ get_palette_color  "," palette_ palette_color  "," get_palette_color  == "," palette_color  == "]}," Writexlsx Package Styles write_border":{"type":"method","name":"write_border","children":[],"call":["@writer end_tag "," write_sub_border ","format diag_color ","format diag_border ","dxf_format ! ","format bottom_color ","format bottom ","format top_color ","format top ","format right_color ","format right ","format left_color ","format left ","@writer start_tag ","format diag_border= ","format diag_border == ","format diag_type != ","format diag_type ","attributes << << ","attributes << ","format diag_type == ","@writer tag_elements "," write_border_base ","format border_attributes "]}," Writexlsx Package Styles write_borders":{"type":"method","name":"write_borders","children":[],"call":["@writer end_tag "," write_border ","format has_border == ","format has_border ","@xf_formats each ","@writer start_tag ","format has_border? "," write_format_elements "," write_borders_base "]}," Writexlsx Package Styles write_fill":{"type":"method","name":"write_fill","children":[],"call":["@writer end_tag ","@writer empty_tag ","dxf_format ! "," get_palette_color ","bg_color != ","fg_color == ","@writer start_tag ","patterns [] ","format pattern ","format pattern <= ","format fg_color ","format bg_color ","@writer tag_elements ","fg_color != ","format dxf_fg_color ","format dxf_bg_color ","dxf_format != "," palette_color "," write_fill_base "," write_default_fill ","PATTERNS  [] "," pattern_only_case? "," get_palette_color  != ","format bg_color  != ","format dxf_bg_color  != "," palette_color  != "," get_palette_color  == ","format fg_color  == ","format dxf_fg_color  == "," palette_color  == ","format pattern s [] ","format format pattern  ","format format pattern  <= ","format  get_palette_color  ","format format fg_color  ","format format dxf_fg_color  ","format  palette_color  ","format format bg_color  ","format format dxf_bg_color  ","format fg_color  != ","format dxf_fg_color  != ","format dxf_ get_palette_color  ","format dxf_format fg_color  ","format dxf_format dxf_fg_color  ","format dxf_ palette_color  ","format dxf_format bg_color  ","format dxf_format dxf_bg_color  "," format pattern _only_case? "]}," Writexlsx Package Styles write_default_fill":{"type":"method","name":"write_default_fill","children":[],"call":["@writer end_tag ","@writer empty_tag ","@writer start_tag ","@writer tag_elements "]}," Writexlsx Package Styles write_fills":{"type":"method","name":"write_fills","children":[],"call":["@writer end_tag "," write_fill ","format has_fill == ","format has_fill ","@xf_formats each "," write_default_fill ","@writer start_tag ","format has_fill? ","@writer tag_elements "," write_fills_base "]}," Writexlsx Package Styles write_color":{"type":"method","name":"write_color","children":[],"call":["@writer empty_tag "]}," Writexlsx Package Styles write_underline":{"type":"method","name":"write_underline","children":[],"call":["@writer empty_tag "," val ","underline == "," underline_attributes "," underline_ underline_attributes  "]}," Writexlsx Package Styles write_font":{"type":"method","name":"write_font","children":[],"call":["@writer end_tag ","@writer empty_tag ","format font_scheme ","format hyperlink == ","format hyperlink ","format font == ","format font ","format font_family ","dxf_format ! "," write_color "," get_palette_color ","format color ","format color != ","format color_indexed ","format color_indexed != ","theme != ","format theme ","format size "," write_vert_align ","format font_script == ","format font_script "," write_underline ","format underline ","format underline? ","format shadow? ","format outline? ","format strikeout? ","format italic? ","format bold? "," write_extend ","format font_extend == ","format font_extend "," write_condense ","format font_condense == ","format font_condense ","@writer start_tag ","@writer tag_elements "," write_ get_palette_color  "," get_palette_ get_palette_color  ","format  get_palette_color  ","format  get_palette_color  != ","format  get_palette_color _indexed ","format  get_palette_color _indexed != ","format theme  != ","format format theme  "]}," Writexlsx Package Styles write_fonts":{"type":"method","name":"write_fonts","children":[],"call":["@writer end_tag "," write_font ","format has_font == ","format has_font ","@xf_formats each ","@writer start_tag ","format has_font? "," write_format_elements ","format write_font "," write_font_base "]}," Writexlsx Package Styles write_num_fmt":{"type":"method","name":"write_num_fmt","children":[],"call":["@writer empty_tag ","format_codes [] ","num_fmt_id < ","FORMAT_CODES  [] ","format_codes [] s [] "]}," Writexlsx Package Styles write_num_fmts":{"type":"method","name":"write_num_fmts","children":[],"call":["@writer end_tag "," write_num_fmt ","format num_format ","format num_format_index ","format num_format_index >= ","@xf_formats each ","@writer start_tag ","count == ","@writer tag_elements ","@num_formats each ","@num_formats size ","@num_formats size  == "]}," Writexlsx Package Styles write_style_sheet":{"type":"method","name":"write_style_sheet","children":[],"call":["@writer start_tag ","@writer tag_elements "]}," Writexlsx Package Styles get_palette_color":{"type":"method","name":"get_palette_color","children":[],"call":[" sprintf ","rgb [] ","@palette [] ","1 upcase ","index =~ ","@palette []  [] "]}," Writexlsx Package Styles set_style_properties":{"type":"method","name":"set_style_properties","children":[],"call":[]}," Writexlsx Package Styles assemble_xml_file":{"type":"method","name":"assemble_xml_file","children":[],"call":["@writer close ","@writer crlf ","@writer end_tag "," write_colors "," write_table_styles "," write_dxfs "," write_cell_styles "," write_cell_xfs "," write_cell_style_xfs "," write_borders "," write_fills "," write_fonts "," write_num_fmts "," write_style_sheet "," write_xml_declaration "," write_style_sheet_base "]}," Writexlsx Package Styles set_xml_writer":{"type":"method","name":"set_xml_writer","children":[],"call":["@writer set_xml_writer "]}," Writexlsx Package Styles initialize":{"type":"method","name":"initialize","children":[],"call":["Package XMLWriterSimple  new "]}," Writexlsx Package SharedStrings write_si":{"type":"method","name":"write_si","children":[],"call":["@writer end_tag ","@writer data_element ","@writer io_write ","string =~ ","@writer start_tag ","attributes << << ","attributes << ","@writer tag_elements ","@writer si_element ","@writer si_rich_element "," add_c2_c3 ","string ord <= ","string ord ","128 <= ","string empty? ","string gsub "," sprintf ","1 ord ","string dup ","string bytesize == ","string bytesize "," Regexp  last_match ord "," Regexp  last_match "," add_c2_c3  =~ ","string gsub  =~ ","string dup  =~ "," add_c2_c3  ord <= ","string gsub  ord <= ","string dup  ord <= "," add_c2_c3  ord ","string gsub  ord ","string dup  ord "," add_c2_c3  empty? ","string gsub  empty? ","string dup  empty? "," add_c2_c3  gsub ","string gsub  gsub ","string dup  gsub "," add_c2_c3  dup ","string gsub  dup ","string dup  dup "," add_c2_c3  bytesize == ","string gsub  bytesize == ","string dup  bytesize == "," add_c2_c3  bytesize ","string gsub  bytesize ","string dup  bytesize "]}," Writexlsx Package SharedStrings write_sst_strings":{"type":"method","name":"write_sst_strings","children":[],"call":[" write_si ","@strings each "]}," Writexlsx Package SharedStrings write_sst":{"type":"method","name":"write_sst","children":[],"call":["@writer start_tag ","schema + "," unique_count "," total_count ","@writer tag_elements "]}," Writexlsx Package SharedStrings write_xml_declaration":{"type":"method","name":"write_xml_declaration","children":[],"call":["@writer xml_decl "]}," Writexlsx Package SharedStrings add_strings":{"type":"method","name":"add_strings","children":[],"call":[]}," Writexlsx Package SharedStrings assemble_xml_file":{"type":"method","name":"assemble_xml_file","children":[],"call":["@writer close ","@writer crlf ","@writer end_tag "," write_sst_strings "," write_sst "," write_xml_declaration "]}," Writexlsx Package SharedStrings set_xml_writer":{"type":"method","name":"set_xml_writer","children":[],"call":["@writer set_xml_writer "]}," Writexlsx Package SharedStrings initialize":{"type":"method","name":"initialize","children":[],"call":["Package XMLWriterSimple  new "]}," Writexlsx Package Relationships write_relationship":{"type":"method","name":"write_relationship","children":[],"call":["@writer empty_tag ","attributes << << ","attributes << "]}," Writexlsx Package Relationships write_relationships":{"type":"method","name":"write_relationships","children":[],"call":["@writer end_tag "," write_relationship ","@rels each ","@writer start_tag ","@writer tag_elements "]}," Writexlsx Package Relationships write_xml_declaration":{"type":"method","name":"write_xml_declaration","children":[],"call":["@writer xml_decl "]}," Writexlsx Package Relationships add_worksheet_relationship":{"type":"method","name":"add_worksheet_relationship","children":[],"call":["@rels push ","Document_schema  + "]}," Writexlsx Package Relationships add_package_relationship":{"type":"method","name":"add_package_relationship","children":[],"call":["@rels push ","target + ","Package_schema  + ","target +  + "]}," Writexlsx Package Relationships add_document_relationship":{"type":"method","name":"add_document_relationship","children":[],"call":["@rels push ","Document_schema  + "]}," Writexlsx Package Relationships assemble_xml_file":{"type":"method","name":"assemble_xml_file","children":[],"call":["@writer close ","@writer crlf "," write_relationships "," write_xml_declaration "]}," Writexlsx Package Relationships set_xml_writer":{"type":"method","name":"set_xml_writer","children":[],"call":["@writer set_xml_writer "]}," Writexlsx Package Relationships initialize":{"type":"method","name":"initialize","children":[],"call":["Package XMLWriterSimple  new "]}," Writexlsx Package Packager add_image_files":{"type":"method","name":"add_image_files","children":[],"call":[" copy ","image [] ","@workbook images each ","@workbook images ","FileUtils  mkdir_p ","@workbook images empty? ","FileUtils  cp ","index + ","@workbook images each_with_index "]}," Writexlsx Package Packager write_drawing_rels_files":{"type":"method","name":"write_drawing_rels_files","children":[],"call":["rels assemble_xml_file ","rels set_xml_writer ","rels add_document_relationship ","worksheet drawing_links each ","worksheet drawing_links ","Package Relationships  new ","FileUtils  mkdir_p ","worksheet drawing_links empty? ","@workbook worksheets each ","@workbook worksheets ","@workbook worksheets write_drawing_rels_files ","Package Relationships  new  assemble_xml_file ","Package Relationships  new  set_xml_writer ","Package Relationships  new  add_document_relationship ","@workbook worksheets write_drawing_Package Relationships  new _files "]}," Writexlsx Package Packager write_chartsheet_rels_files":{"type":"method","name":"write_chartsheet_rels_files","children":[],"call":["rels assemble_xml_file ","rels set_xml_writer ","worksheet index ","rels add_worksheet_relationship ","external_links each ","Package Relationships  new ","FileUtils  mkdir_p ","external_links empty? ","worksheet external_drawing_links ","worksheet is_chartsheet? ","@workbook worksheets each ","@workbook worksheets ","existing_rels_dir ! ","@workbook worksheets write_chartsheet_rels_files ","Package Relationships  new  assemble_xml_file ","Package Relationships  new  set_xml_writer ","Package Relationships  new  add_worksheet_relationship ","worksheet external_drawing_links  each ","worksheet external_drawing_links  empty? ","existing_Package Relationships  new _dir ! ","@workbook worksheets write_chartsheet_Package Relationships  new _files "]}," Writexlsx Package Packager write_worksheet_rels_files":{"type":"method","name":"write_worksheet_rels_files","children":[],"call":["rels assemble_xml_file ","rels set_xml_writer ","rels add_worksheet_relationship ","link_datas each ","external_links each ","Package Relationships  new ","FileUtils  mkdir_p ","existing_rels_dir ! ","external_links size == ","external_links size ","a != ","(send\n  (lvar :worksheet) :external_hyper_links) select ","worksheet external_comment_links ","worksheet external_drawing_links ","worksheet external_hyper_links ","worksheet is_chartsheet? ","@workbook worksheets each ","@workbook worksheets ","worksheet external_table_links ","worksheet external_vml_links ","@workbook worksheets write_worksheet_rels_files ","Package Relationships  new  assemble_xml_file ","Package Relationships  new  set_xml_writer ","Package Relationships  new  add_worksheet_relationship ","existing_Package Relationships  new _dir ! ","@workbook worksheets write_worksheet_Package Relationships  new _files "]}," Writexlsx Package Packager write_workbook_rels_file":{"type":"method","name":"write_workbook_rels_file","children":[],"call":["rels assemble_xml_file ","rels set_xml_writer ","rels add_document_relationship ","@workbook str_total != ","@workbook str_total ","worksheet is_chartsheet? ","@workbook worksheets each ","@workbook worksheets ","FileUtils  mkdir_p ","Package Relationships  new ","@workbook shared_strings_empty? ","rels add_ms_package_relationship ","@workbook vba_project ","@workbook has_metadata? ","Package Relationships  new  assemble_xml_file ","Package Relationships  new  set_xml_writer ","Package Relationships  new  add_document_relationship ","Package Relationships  new  add_ms_package_relationship "]}," Writexlsx Package Packager write_root_rels_file":{"type":"method","name":"write_root_rels_file","children":[],"call":["rels assemble_xml_file ","rels set_xml_writer ","rels add_document_relationship ","rels add_package_relationship ","FileUtils  mkdir_p ","Package Relationships  new ","@workbook custom_properties empty? ","@workbook custom_properties ","Package Relationships  new  assemble_xml_file ","Package Relationships  new  set_xml_writer ","Package Relationships  new  add_document_relationship ","Package Relationships  new  add_package_relationship "]}," Writexlsx Package Packager write_theme_file":{"type":"method","name":"write_theme_file","children":[],"call":["rels assemble_xml_file ","rels set_xml_writer ","FileUtils  mkdir_p ","Package Theme  new ","Package Theme  new  assemble_xml_file ","Package Theme  new  set_xml_writer "]}," Writexlsx Package Packager write_styles_file":{"type":"method","name":"write_styles_file","children":[],"call":["rels assemble_xml_file ","rels set_xml_writer ","rels set_style_properties ","FileUtils  mkdir_p ","Package Styles  new ","@workbook dxf_formats ","@workbook custom_colors ","@workbook fill_count ","@workbook border_count ","@workbook num_format_count ","@workbook font_count ","@workbook palette ","@workbook xf_formats ","@workbook style_properties ","Package Styles  new  assemble_xml_file ","Package Styles  new  set_xml_writer ","Package Styles  new  set_style_properties ","@workbook @workbook dxf_formats  ","@workbook d@workbook xf_formats  ","@workbook @workbook custom_colors  ","@workbook @workbook fill_count  ","@workbook @workbook border_count  ","@workbook @workbook num_format_count  ","@workbook @workbook font_count  ","@workbook @workbook palette  ","@workbook @workbook xf_formats  "]}," Writexlsx Package Packager write_content_types_file":{"type":"method","name":"write_content_types_file","children":[],"call":["content assemble_xml_file ","content set_xml_writer ","content add_shared_strings ","@workbook str_total > ","@workbook str_total ","content add_comment_name ","(irange\n  (int 1)\n  (ivar :@num_comment_files)) each ","content add_vml_name ","@num_comment_files > ","content add_drawing_name ","(irange\n  (int 1)\n  (ivar :@drawing_count)) each ","content add_chart_name ","(irange\n  (int 1)\n  (ivar :@chart_count)) each ","content add_worksheet_name ","content add_chartsheet_name ","worksheet is_chartsheet? ","@workbook worksheets each ","@workbook worksheets ","content add_image_types ","@workbook image_types ","Package ContentTypes  new ","@workbook shared_strings_empty? ","content add_table_name ","(irange\n  (int 1)\n  (ivar :@table_count)) each ","content add_vba_project ","@workbook vba_project ","@num_vml_files > ","(irange\n  (int 1)\n  (send\n    (ivar :@workbook) :num_comment_files)) each ","@workbook num_comment_files ","@workbook num_vml_files > ","@workbook num_vml_files ","(irange\n  (int 1)\n  (send\n    (send\n      (ivar :@workbook) :drawings) :size)) each ","@workbook drawings size ","@workbook drawings ","(irange\n  (int 1)\n  (send\n    (send\n      (ivar :@workbook) :charts) :size)) each ","@workbook charts size ","@workbook charts ","index + ","(send\n  (send\n    (ivar :@workbook) :worksheets) :select) each_with_index ","sheet is_chartsheet? ","@workbook worksheets select ","(send\n  (send\n    (ivar :@workbook) :worksheets) :reject) each_with_index ","@workbook worksheets reject ","content add_comment_names ","content add_table_names ","content add_drawing_names ","content add_chart_names ","content add_chartsheet_names ","content add_worksheet_names ","content add_custom_properties ","@workbook custom_properties empty? ","@workbook custom_properties ","content add_metadata ","@workbook has_metadata? ","Package ContentTypes  new  assemble_xml_file ","Package ContentTypes  new  set_xml_writer ","Package ContentTypes  new  add_shared_strings ","Package ContentTypes  new  add_comment_name ","Package ContentTypes  new  add_vml_name ","Package ContentTypes  new  add_drawing_name ","Package ContentTypes  new  add_chart_name ","Package ContentTypes  new  add_worksheet_name ","Package ContentTypes  new  add_chartsheet_name ","Package ContentTypes  new  add_image_types ","Package ContentTypes  new  add_table_name ","Package ContentTypes  new  add_vba_project ","Package ContentTypes  new  add_comment_names ","Package ContentTypes  new  add_table_names ","Package ContentTypes  new  add_drawing_names ","Package ContentTypes  new  add_chart_names ","Package ContentTypes  new  add_chartsheet_names ","Package ContentTypes  new  add_worksheet_names ","Package ContentTypes  new  add_custom_properties ","Package ContentTypes  new  add_metadata "]}," Writexlsx Package Packager write_core_file":{"type":"method","name":"write_core_file","children":[],"call":["core assemble_xml_file ","core set_xml_writer ","core set_properties ","@workbook doc_properties ","FileUtils  mkdir_p ","Package Core  new ","Package Core  new  assemble_xml_file ","Package Core  new  set_xml_writer ","Package Core  new  set_properties "]}," Writexlsx Package Packager write_app_file":{"type":"method","name":"write_app_file","children":[],"call":["app assemble_xml_file ","app set_xml_writer ","app set_properties ","app add_part_name ","@named_ranges each ","app add_heading_pair ","range_count != ","@named_ranges size ","worksheet get_name ","worksheet is_chartsheet? ","@workbook worksheets each ","@workbook worksheets ","worksheet name ","FileUtils  mkdir_p ","Package App  new ","@workbook doc_properties ","@workbook named_ranges each ","@workbook named_ranges ","@workbook named_ranges size ","sheet name ","(send\n  (send\n    (ivar :@workbook) :worksheets) :select) each ","sheet is_chartsheet? ","@workbook worksheets select ","(send\n  (send\n    (ivar :@workbook) :worksheets) :reject) each ","@workbook worksheets reject ","@workbook chartsheet_count ","(send\n  (send\n    (ivar :@workbook) :worksheets) :reject) count ","s is_chartsheet? ","app add_named_ranges_parts ","app add_named_range_heading_pairs ","app add_chartsheet_part_names ","app add_worksheet_part_names ","app add_chartsheet_heading_pairs ","app add_worksheet_heading_pairs ","app doc_security= ","@workbook read_only ","Package App  new  assemble_xml_file ","Package App  new  set_xml_writer ","Package App  new  set_properties ","app set_@workbook doc_properties  ","Package App  new  add_part_name ","Package App  new  add_heading_pair ","@named_ranges size  != ","@workbook named_ranges size  != ","@workbook doc_@workbook doc_properties  ","Package App  new  add_named_ranges_parts ","Package App  new  add_named_range_heading_pairs ","Package App  new  add_chartsheet_part_names ","Package App  new  add_worksheet_part_names ","Package App  new  add_chartsheet_heading_pairs ","Package App  new  add_worksheet_heading_pairs ","Package App  new  doc_security= "]}," Writexlsx Package Packager write_shared_strings_file":{"type":"method","name":"write_shared_strings_file","children":[],"call":["sst assemble_xml_file ","sst set_xml_writer ","sst add_strings ","@workbook str_array ","sst unique_count= ","@workbook str_unique ","sst string_count= ","@workbook str_total ","@workbook str_total > ","FileUtils  mkdir_p ","Package SharedStrings  new ","@workbook shared_strings_empty? ","@workbook shared_strings ","Package SharedStrings  new  assemble_xml_file ","@workbook shared_strings  assemble_xml_file ","Package SharedStrings  new  set_xml_writer ","@workbook shared_strings  set_xml_writer ","Package SharedStrings  new  add_strings ","@workbook shared_strings  add_strings ","Package SharedStrings  new  unique_count= ","@workbook shared_strings  unique_count= ","Package SharedStrings  new  string_count= ","@workbook shared_strings  string_count= "]}," Writexlsx Package Packager write_comment_files":{"type":"method","name":"write_comment_files","children":[],"call":["comment assemble_xml_file ","worksheet comments_array ","comment set_xml_writer ","Package Comments  new ","FileUtils  mkdir_p ","worksheet has_comments? ","@workbook worksheets each ","@workbook worksheets ","worksheet comments_assemble_xml_file ","worksheet comments_xml_writer= ","@workbook worksheets write_comment_files ","Package Comments  new  assemble_xml_file ","worksheet Package Comments  new s_array ","Package Comments  new  set_xml_writer ","worksheet has_Package Comments  new s? ","worksheet Package Comments  new s_assemble_xml_file ","worksheet Package Comments  new s_xml_writer= ","@workbook worksheets write_Package Comments  new _files "]}," Writexlsx Package Packager write_vml_files":{"type":"method","name":"write_vml_files","children":[],"call":["vml assemble_xml_file ","worksheet comments_array ","worksheet vml_shape_id ","worksheet vml_data_id ","vml set_xml_writer ","Package VML  new ","FileUtils  mkdir_p ","worksheet has_comments? ","@workbook worksheets each ","@workbook worksheets ","Package Vml  new ","worksheet has_vml? ","@workbook worksheets write_vml_files ","Package VML  new  assemble_xml_file ","Package Vml  new  assemble_xml_file ","worksheet Package VML  new _shape_id ","worksheet Package Vml  new _shape_id ","worksheet Package VML  new _data_id ","worksheet Package Vml  new _data_id ","Package VML  new  set_xml_writer ","Package Vml  new  set_xml_writer ","worksheet has_Package VML  new ? ","worksheet has_Package Vml  new ? ","@workbook worksheets write_Package VML  new _files ","@workbook worksheets write_Package Vml  new _files "]}," Writexlsx Package Packager write_drawing_files":{"type":"method","name":"write_drawing_files","children":[],"call":["drawing assemble_xml_file ","drawing set_xml_writer ","@workbook drawings each ","@workbook drawings ","FileUtils  mkdir_p ","@workbook drawings empty? "," write_chart_or_drawing_files "]}," Writexlsx Package Packager write_chart_files":{"type":"method","name":"write_chart_files","children":[],"call":["chart assemble_xml_file ","chart set_xml_writer ","@workbook charts each ","@workbook charts ","FileUtils  mkdir_p ","@workbook charts empty? "," write_chart_or_drawing_files "]}," Writexlsx Package Packager write_chartsheet_files":{"type":"method","name":"write_chartsheet_files","children":[],"call":["worksheet assemble_xml_file ","worksheet set_xml_writer ","FileUtils  mkdir_p ","worksheet is_chartsheet? ","@workbook worksheets each ","@workbook worksheets ","@workbook worksheets write_chartsheet_files "]}," Writexlsx Package Packager write_worksheet_files":{"type":"method","name":"write_worksheet_files","children":[],"call":["worksheet assemble_xml_file ","worksheet set_xml_writer ","worksheet is_chartsheet? ","@workbook worksheets each ","@workbook worksheets ","FileUtils  mkdir_p ","@workbook worksheets write_worksheet_files "]}," Writexlsx Package Packager write_workbook_file":{"type":"method","name":"write_workbook_file","children":[],"call":["@workbook assemble_xml_file ","@workbook set_xml_writer ","FileUtils  mkdir_p "]}," Writexlsx Package Packager create_package":{"type":"method","name":"create_package","children":[],"call":[" add_image_files "," write_drawing_rels_files "," write_chartsheet_rels_files "," write_worksheet_rels_files "," write_workbook_rels_file "," write_root_rels_file "," write_theme_file "," write_styles_file "," write_content_types_file "," write_core_file "," write_app_file "," write_shared_strings_file "," write_comment_files "," write_vml_files "," write_drawing_files "," write_chart_files "," write_workbook_file "," write_chartsheet_files "," write_worksheet_files "," write_table_files "," add_vba_project "," write_custom_file "," write_metadata_file "]}," Writexlsx Package Packager add_workbook":{"type":"method","name":"add_workbook","children":[],"call":["worksheet is_chartsheet? ","workbook worksheets each ","workbook worksheets ","workbook named_ranges ","workbook num_comment_files ","workbook drawings size ","workbook drawings ","workbook charts size ","workbook charts ","workbook sheetnames ","workbook num_vml_files "]}," Writexlsx Package Packager set_package_dir":{"type":"method","name":"set_package_dir","children":[],"call":[]}," Writexlsx Package Packager initialize":{"type":"method","name":"initialize","children":[],"call":["@workbook worksheets tables_count ","@workbook worksheets "]}," Writexlsx Package Core write_cp_content_status":{"type":"method","name":"write_cp_content_status","children":[],"call":["@writer data_element ","@properties [] "," write_base ","@writer @properties [] _element "]}," Writexlsx Package Core write_cp_category":{"type":"method","name":"write_cp_category","children":[],"call":["@writer data_element ","@properties [] "," write_base ","@writer @properties [] _element "]}," Writexlsx Package Core write_dc_description":{"type":"method","name":"write_dc_description","children":[],"call":["@writer data_element ","@properties [] "," write_base ","@writer @properties [] _element "]}," Writexlsx Package Core write_cp_keywords":{"type":"method","name":"write_cp_keywords","children":[],"call":["@writer data_element ","@properties [] "," write_base ","@writer @properties [] _element "]}," Writexlsx Package Core write_dc_subject":{"type":"method","name":"write_dc_subject","children":[],"call":["@writer data_element ","@properties [] "," write_base ","@writer @properties [] _element "]}," Writexlsx Package Core write_dc_title":{"type":"method","name":"write_dc_title","children":[],"call":["@writer data_element ","@properties [] "," write_base ","@writer @properties [] _element "]}," Writexlsx Package Core write_dcterms_modified":{"type":"method","name":"write_dcterms_modified","children":[],"call":["@writer data_element "," localtime_to_iso8601_date ","@properties [] "," write_dcterms "," localtime_to_iso8601_ localtime_to_iso8601_date  "," localtime_to_iso8601_@properties []  "]}," Writexlsx Package Core write_dcterms_created":{"type":"method","name":"write_dcterms_created","children":[],"call":["@writer data_element "," localtime_to_iso8601_date ","@properties [] "," write_dcterms "," localtime_to_iso8601_ localtime_to_iso8601_date  "," localtime_to_iso8601_@properties []  "]}," Writexlsx Package Core write_cp_last_modified_by":{"type":"method","name":"write_cp_last_modified_by","children":[],"call":["@writer data_element ","@properties [] "," write_base "]}," Writexlsx Package Core write_dc_creator":{"type":"method","name":"write_dc_creator","children":[],"call":["@writer data_element ","@properties [] "," write_base "]}," Writexlsx Package Core write_cp_core_properties":{"type":"method","name":"write_cp_core_properties","children":[],"call":["@writer start_tag ","@writer tag_elements "]}," Writexlsx Package Core write_xml_declaration":{"type":"method","name":"write_xml_declaration","children":[],"call":["@writer xml_decl "]}," Writexlsx Package Core localtime_to_iso8601_date":{"type":"method","name":"localtime_to_iso8601_date","children":[],"call":["local_time strftime ","Time  now "]}," Writexlsx Package Core set_properties":{"type":"method","name":"set_properties","children":[],"call":[]}," Writexlsx Package Core assemble_xml_file":{"type":"method","name":"assemble_xml_file","children":[],"call":["@writer close ","@writer crlf ","@writer end_tag "," write_cp_content_status "," write_cp_category "," write_dcterms_modified "," write_dcterms_created "," write_cp_last_modified_by "," write_dc_description "," write_cp_keywords "," write_dc_creator "," write_dc_subject "," write_dc_title "," write_cp_core_properties "," write_xml_declaration "," write_cp_core_properties_base "]}," Writexlsx Package Core set_xml_writer":{"type":"method","name":"set_xml_writer","children":[],"call":["@writer set_xml_writer "]}," Writexlsx Package Core initialize":{"type":"method","name":"initialize","children":[],"call":["Time  now ","Package XMLWriterSimple  new ","Time  now gmtime "]}," Writexlsx Package ContentTypes write_override":{"type":"method","name":"write_override","children":[],"call":["@writer empty_tag "]}," Writexlsx Package ContentTypes write_default":{"type":"method","name":"write_default","children":[],"call":["@writer empty_tag "]}," Writexlsx Package ContentTypes write_types":{"type":"method","name":"write_types","children":[],"call":["@writer start_tag ","@writer tag_elements "]}," Writexlsx Package ContentTypes write_overrides":{"type":"method","name":"write_overrides","children":[],"call":["@writer empty_tag ","a [] ","@overrides each "," write_default_or_override "]}," Writexlsx Package ContentTypes write_defaults":{"type":"method","name":"write_defaults","children":[],"call":["@writer empty_tag ","a [] ","@defaults each "," write_default_or_override "]}," Writexlsx Package ContentTypes write_xml_declaration":{"type":"method","name":"write_xml_declaration","children":[],"call":["@writer xml_decl "]}," Writexlsx Package ContentTypes add_image_types":{"type":"method","name":"add_image_types","children":[],"call":[" add_default ","types each_key ","@workbook image_types each_key ","@workbook image_types "]}," Writexlsx Package ContentTypes add_calc_chain":{"type":"method","name":"add_calc_chain","children":[],"call":[" add_override "]}," Writexlsx Package ContentTypes add_shared_strings":{"type":"method","name":"add_shared_strings","children":[],"call":[" add_override "]}," Writexlsx Package ContentTypes add_comment_name":{"type":"method","name":"add_comment_name","children":[],"call":[" add_override "]}," Writexlsx Package ContentTypes add_vml_name":{"type":"method","name":"add_vml_name","children":[],"call":[" add_default "]}," Writexlsx Package ContentTypes add_drawing_name":{"type":"method","name":"add_drawing_name","children":[],"call":[" add_override "]}," Writexlsx Package ContentTypes add_chart_name":{"type":"method","name":"add_chart_name","children":[],"call":[" add_override "]}," Writexlsx Package ContentTypes add_chartsheet_name":{"type":"method","name":"add_chartsheet_name","children":[],"call":[" add_override "]}," Writexlsx Package ContentTypes add_worksheet_name":{"type":"method","name":"add_worksheet_name","children":[],"call":[" add_override "]}," Writexlsx Package ContentTypes add_override":{"type":"method","name":"add_override","children":[],"call":["@overrides push "]}," Writexlsx Package ContentTypes add_default":{"type":"method","name":"add_default","children":[],"call":["@defaults push "]}," Writexlsx Package ContentTypes assemble_xml_file":{"type":"method","name":"assemble_xml_file","children":[],"call":["@writer close ","@writer crlf ","@writer end_tag "," write_overrides "," write_defaults "," write_types "," write_xml_declaration "]}," Writexlsx Package ContentTypes set_xml_writer":{"type":"method","name":"set_xml_writer","children":[],"call":["@writer set_xml_writer "]}," Writexlsx Package ContentTypes initialize":{"type":"method","name":"initialize","children":[],"call":["Package XMLWriterSimple  new "]}," Writexlsx Package Comments write_family":{"type":"method","name":"write_family","children":[],"call":["@writer empty_tag "]}," Writexlsx Package Comments write_r_font":{"type":"method","name":"write_r_font","children":[],"call":["@writer empty_tag "]}," Writexlsx Package Comments write_color":{"type":"method","name":"write_color","children":[],"call":["@writer empty_tag "]}," Writexlsx Package Comments write_sz":{"type":"method","name":"write_sz","children":[],"call":["@writer empty_tag "]}," Writexlsx Package Comments write_r_pr":{"type":"method","name":"write_r_pr","children":[],"call":["@writer end_tag "," write_family "," write_r_font "," write_color "," write_sz ","@writer start_tag ","@writer tag_elements ","comment font_family ","comment font_name ","comment font_size "]}," Writexlsx Package Comments write_text_t":{"type":"method","name":"write_text_t","children":[],"call":["@writer data_element ","attributes << << ","attributes << ","text =~ ","comment string ","comment string  =~ "]}," Writexlsx Package Comments write_text_r":{"type":"method","name":"write_text_r","children":[],"call":["@writer end_tag "," write_text_t "," write_r_pr ","@writer start_tag ","@writer tag_elements "]}," Writexlsx Package Comments write_text":{"type":"method","name":"write_text","children":[],"call":["@writer end_tag "," write_text_r ","@writer start_tag ","@writer tag_elements "]}," Writexlsx Package Comments write_comment":{"type":"method","name":"write_comment","children":[],"call":["@writer end_tag "," write_text ","@writer start_tag ","attributes << << ","attributes << "," xl_rowcol_to_cell ","comment string ","@author_ids [] ","comment author ","comment col ","comment row ","@writer tag_elements "]}," Writexlsx Package Comments write_comment_list":{"type":"method","name":"write_comment_list","children":[],"call":["@writer end_tag "," write_comment ","@author_ids [] ","comment [] ","comment_data each ","@writer start_tag ","@writer tag_elements ","@@author_ids [] s [] ","@comment [] _ids [] "]}," Writexlsx Package Comments write_author":{"type":"method","name":"write_author","children":[],"call":["@writer data_element "]}," Writexlsx Package Comments write_authors":{"type":"method","name":"write_authors","children":[],"call":["@writer end_tag "," write_author ","@author_ids []= ","@author_ids [] ! ","@author_ids [] ","comment [] ","comment_data each ","@writer start_tag ","comment author ","@writer tag_elements "]}," Writexlsx Package Comments write_comments":{"type":"method","name":"write_comments","children":[],"call":["@writer start_tag ","@writer tag_elements "]}," Writexlsx Package Comments write_xml_declaration":{"type":"method","name":"write_xml_declaration","children":[],"call":["@writer xml_decl "]}," Writexlsx Package Comments assemble_xml_file":{"type":"method","name":"assemble_xml_file","children":[],"call":["@writer close ","@writer crlf ","@writer end_tag "," write_comment_list "," write_authors "," write_comments "," write_xml_declaration "," sorted_comments "]}," Writexlsx Package Comments set_xml_writer":{"type":"method","name":"set_xml_writer","children":[],"call":["@writer set_xml_writer "]}," Writexlsx Package Comments initialize":{"type":"method","name":"initialize","children":[],"call":["Package XMLWriterSimple  new "]}," Writexlsx Package App write_app_version":{"type":"method","name":"write_app_version","children":[],"call":["@writer data_element "]}," Writexlsx Package App write_hyperlinks_changed":{"type":"method","name":"write_hyperlinks_changed","children":[],"call":["@writer data_element "]}," Writexlsx Package App write_shared_doc":{"type":"method","name":"write_shared_doc","children":[],"call":["@writer data_element "]}," Writexlsx Package App write_links_up_to_date":{"type":"method","name":"write_links_up_to_date","children":[],"call":["@writer data_element "]}," Writexlsx Package App write_manager":{"type":"method","name":"write_manager","children":[],"call":["@writer data_element ","@properties [] ","@writer @properties [] _element "]}," Writexlsx Package App write_company":{"type":"method","name":"write_company","children":[],"call":["@writer data_element ","@properties [] "]}," Writexlsx Package App write_vt_data":{"type":"method","name":"write_vt_data","children":[],"call":["@writer data_element "]}," Writexlsx Package App write_vt_vector":{"type":"method","name":"write_vt_vector","children":[],"call":["@writer end_tag ","base_type == "," write_vt_data ","@writer start_tag ","data each ","data size ","@writer tag_elements ","data data size  "]}," Writexlsx Package App write_titles_of_parts":{"type":"method","name":"write_titles_of_parts","children":[],"call":["@writer end_tag "," write_vt_vector ","parts_data push ","@part_names each ","@writer start_tag ","@part_names collect ","@writer tag_elements "]}," Writexlsx Package App write_heading_pairs":{"type":"method","name":"write_heading_pairs","children":[],"call":["@writer end_tag "," write_vt_vector ","@writer start_tag ","@writer tag_elements "]}," Writexlsx Package App write_scale_crop":{"type":"method","name":"write_scale_crop","children":[],"call":["@writer data_element "]}," Writexlsx Package App write_doc_security":{"type":"method","name":"write_doc_security","children":[],"call":["@writer data_element "]}," Writexlsx Package App write_application":{"type":"method","name":"write_application","children":[],"call":["@writer data_element "]}," Writexlsx Package App write_properties":{"type":"method","name":"write_properties","children":[],"call":["@writer start_tag ","@writer tag_elements "]}," Writexlsx Package App write_xml_declaration":{"type":"method","name":"write_xml_declaration","children":[],"call":["@writer xml_decl "]}," Writexlsx Package App set_properties":{"type":"method","name":"set_properties","children":[],"call":[]}," Writexlsx Package App add_heading_pair":{"type":"method","name":"add_heading_pair","children":[],"call":["@heading_pairs push ","heading_pair [] ","heading_pair [] == "]}," Writexlsx Package App add_part_name":{"type":"method","name":"add_part_name","children":[],"call":["@part_names push "]}," Writexlsx Package App assemble_xml_file":{"type":"method","name":"assemble_xml_file","children":[],"call":["@writer close ","@writer crlf ","@writer end_tag "," write_app_version "," write_hyperlinks_changed "," write_shared_doc "," write_links_up_to_date "," write_company "," write_manager "," write_titles_of_parts "," write_heading_pairs "," write_scale_crop "," write_doc_security "," write_application "," write_properties "," write_xml_declaration "," write_hyperlink_base "]}," Writexlsx Package App set_xml_writer":{"type":"method","name":"set_xml_writer","children":[],"call":["@writer set_xml_writer "]}," Writexlsx Package App initialize":{"type":"method","name":"initialize","children":[],"call":["Package XMLWriterSimple  new "]}," Writexlsx Format underline?":{"type":"method","name":"underline?","children":[],"call":["@underline == "," bool_both_ruby_and_perl? "," ptrue? "]}," Writexlsx Format shadow?":{"type":"method","name":"shadow?","children":[],"call":["@font_shadow == "," bool_both_ruby_and_perl? "," ptrue? "]}," Writexlsx Format outline?":{"type":"method","name":"outline?","children":[],"call":["@font_outline == "," bool_both_ruby_and_perl? "," ptrue? "]}," Writexlsx Format strikeout?":{"type":"method","name":"strikeout?","children":[],"call":["@font_strikeout == "," bool_both_ruby_and_perl? "," ptrue? "]}," Writexlsx Format italic?":{"type":"method","name":"italic?","children":[],"call":["@italic == "," bool_both_ruby_and_perl? "," ptrue? "]}," Writexlsx Format bold?":{"type":"method","name":"bold?","children":[],"call":["@bold == "," bool_both_ruby_and_perl? "," ptrue? "]}," Writexlsx Format method_missing":{"type":"method","name":"method_missing","children":[],"call":[" eval ","value to_s ","value respond_to? ! ","value respond_to? ","args [] ","args [] nil? "," get_color ","method =~ "," raise "," instance_variable_set "," color "," Regexp  last_match ","args []  to_s "," get_color  to_s "," color  to_s ","args []  respond_to? ! "," get_color  respond_to? ! "," color  respond_to? ! ","args []  respond_to? "," get_color  respond_to? "," color  respond_to? "]}," Writexlsx Format set_hyperlink":{"type":"method","name":"set_hyperlink","children":[],"call":[" set_align "," set_theme "," set_underline "]}," Writexlsx Format set_rotation":{"type":"method","name":"set_rotation","children":[],"call":[" raise ","rotation -@ + ","rotation -@ ","rotation < ","rotation <= ","rotation >= ","rotation == ","rotation -@ +  -@ + ","rotation -@ +  -@ ","rotation -@ +  < ","rotation -@ +  <= ","rotation -@ +  >= ","rotation -@ +  == "]}," Writexlsx Format set_border_color":{"type":"method","name":"set_border_color","children":[],"call":[" set_right_color "," set_left_color "," set_top_color "," set_bottom_color "]}," Writexlsx Format set_border":{"type":"method","name":"set_border","children":[],"call":[" set_right "," set_left "," set_top "," set_bottom "]}," Writexlsx Format set_merge":{"type":"method","name":"set_merge","children":[],"call":[" set_text_h_align "]}," Writexlsx Format set_center_across":{"type":"method","name":"set_center_across","children":[],"call":[" set_text_h_align "]}," Writexlsx Format set_valign":{"type":"method","name":"set_valign","children":[],"call":[" set_align "]}," Writexlsx Format set_align":{"type":"method","name":"set_align","children":[],"call":[" set_text_v_align ","location == "," set_text_h_align ","location downcase! ","location downcase ","location downcase  == ","location downcase  downcase! ","location downcase  downcase "]}," Writexlsx Format get_color":{"type":"method","name":"get_color","children":[],"call":["Format  get_color "]}," Writexlsx Format get_dxf_index":{"type":"method","name":"get_dxf_index","children":[],"call":["indices []= ","indices size ","indices [] "," get_format_key ","@formats set_dxf_index_by_key ","@formats dxf_index_by_key "," get_format_ get_format_key  ","@formats set_dxf_indices size _by_key ","@formats set_dxf_index_by_ get_format_key  ","@formats dxf_indices size _by_key ","@formats dxf_index_by_ get_format_key  "]}," Writexlsx Format get_xf_index":{"type":"method","name":"get_xf_index","children":[],"call":["indices_href []= ","1 + ","indices_href keys size ","indices_href keys ","indices_href [] "," get_format_key ","@formats set_xf_index_by_key ","@formats xf_index_by_key ","indices_href  get_format_key s size ","indices_href  get_format_key s "," get_format_ get_format_key  ","@formats set_xf_1 + _by_key ","@formats set_xf_index_by_ get_format_key  ","@formats xf_1 + _by_key ","@formats xf_index_by_ get_format_key  "]}," Writexlsx Format get_fill_key":{"type":"method","name":"get_fill_key","children":[],"call":["(ivar :@pattern) join "]}," Writexlsx Format get_border_key":{"type":"method","name":"get_border_key","children":[],"call":["(ivar :@bottom) join "]}," Writexlsx Format get_font_key":{"type":"method","name":"get_font_key","children":[],"call":["(ivar :@bold) join "]}," Writexlsx Format get_format_key":{"type":"method","name":"get_format_key","children":[],"call":["(send nil :get_font_key) join "," get_fill_key "," get_border_key "," get_font_key "," get_alignment_key "]}," Writexlsx Format inspect":{"type":"method","name":"inspect","children":[],"call":[" to_s "]}," Writexlsx Format set_bold":{"type":"method","name":"set_bold","children":[],"call":["bold != "," ptrue? "]}," Writexlsx Format get_protection_properties":{"type":"method","name":"get_protection_properties","children":[],"call":["attributes empty? ","attributes << << ","attributes << ","@hidden == ","@locked == "," ptrue? "]}," Writexlsx Format get_align_properties":{"type":"method","name":"get_align_properties","children":[],"call":["align << << ","align << ","@reading_order == ","@shrink != ","@text_wrap != ","@rotation != ","@indent != ","@text_v_align == ","@just_distrib != ","@text_h_align == ","@text_h_align != ","(int 1) include? ! ","(int 1) include? ","@reading_order != ","@text_v_align != "]}," Writexlsx Format set_format_properties":{"type":"method","name":"set_format_properties","children":[],"call":[" eval ","value respond_to? ! ","value respond_to? ","key sub ","key respond_to? ","property each ","properties each ","properties empty? "," send ","value to_s ","key sub  sub ","key sub  respond_to? "]}," Writexlsx Format initialize":{"type":"method","name":"initialize","children":[],"call":[" set_format_properties ","params empty? "]}," Writexlsx Drawing write_a_av_lst":{"type":"method","name":"write_a_av_lst","children":[],"call":["@writer empty_tag ","(send\n  (lvar :adj) :*\n  (int 1000)) to_i ","adj * ","shape [] != ","shape [] ","adjustments each ","@writer tag_elements ","adjustments empty? ! ","adjustments empty? ","adjustments respond_to? ","shape [] ! ","shape [] respond_to? ","shape connect != ","shape connect ","shape adjustments ! ","shape adjustments ","shape adjustments respond_to? ","shape []  each ","shape adjustments  each ","shape []  empty? ! ","shape adjustments  empty? ! ","shape []  empty? ","shape adjustments  empty? ","shape []  respond_to? ","shape adjustments  respond_to? ","shape shape []  ! ","shape shape adjustments  ! ","shape shape []  ","shape shape adjustments  ","shape shape []  respond_to? ","shape shape adjustments  respond_to? "]}," Writexlsx Drawing write_a_prst_geom":{"type":"method","name":"write_a_prst_geom","children":[],"call":["@writer end_tag "," write_a_av_lst ","@writer start_tag ","@writer tag_elements ","attributes << << ","shape [] ","attributes << ","shape type "]}," Writexlsx Drawing write_a_ext":{"type":"method","name":"write_a_ext","children":[],"call":["@writer empty_tag "]}," Writexlsx Drawing write_a_off":{"type":"method","name":"write_a_off","children":[],"call":["@writer empty_tag "]}," Writexlsx Drawing write_a_xfrm":{"type":"method","name":"write_a_xfrm","children":[],"call":["@writer end_tag "," write_a_ext "," write_a_off ","@writer start_tag ","@writer tag_elements ","attributes << << ","attributes << "," ptrue? ","shape [] ","rotation != ","shape flip_v ","shape flip_h ","shape rotation ","shape rotation  != ","shape shape rotation  "]}," Writexlsx Drawing write_sp_pr":{"type":"method","name":"write_sp_pr","children":[],"call":["@writer end_tag "," write_a_prst_geom "," write_a_xfrm ","@writer start_tag ","@writer tag_elements "]}," Writexlsx Drawing write_a_fill_rect":{"type":"method","name":"write_a_fill_rect","children":[],"call":["@writer empty_tag "]}," Writexlsx Drawing write_a_stretch":{"type":"method","name":"write_a_stretch","children":[],"call":["@writer end_tag "," write_a_fill_rect ","@writer start_tag ","@writer tag_elements "]}," Writexlsx Drawing write_a_blip":{"type":"method","name":"write_a_blip","children":[],"call":["@writer empty_tag "]}," Writexlsx Drawing write_blip_fill":{"type":"method","name":"write_blip_fill","children":[],"call":["@writer end_tag "," write_a_stretch "," write_a_blip ","@writer start_tag ","@writer tag_elements "]}," Writexlsx Drawing write_a_pic_locks":{"type":"method","name":"write_a_pic_locks","children":[],"call":["@writer empty_tag "]}," Writexlsx Drawing write_c_nv_pic_pr":{"type":"method","name":"write_c_nv_pic_pr","children":[],"call":["@writer end_tag "," write_a_pic_locks ","@writer start_tag ","@writer tag_elements "]}," Writexlsx Drawing write_nv_pic_pr":{"type":"method","name":"write_nv_pic_pr","children":[],"call":["@writer end_tag "," write_c_nv_pic_pr "," write_c_nv_pr ","index + ","@writer start_tag ","@writer tag_elements "]}," Writexlsx Drawing write_pic":{"type":"method","name":"write_pic","children":[],"call":["@writer end_tag "," write_sp_pr "," write_blip_fill "," write_nv_pic_pr ","@writer start_tag ","@writer tag_elements ","shape []= ","Shape  new ","shape type= ","Shape  new  []= ","Shape  new  type= "]}," Writexlsx Drawing write_client_data":{"type":"method","name":"write_client_data","children":[],"call":["@writer empty_tag "]}," Writexlsx Drawing write_c_chart":{"type":"method","name":"write_c_chart","children":[],"call":["@writer empty_tag "," r_id_attributes ","attributes << "]}," Writexlsx Drawing write_atag_graphic_data":{"type":"method","name":"write_atag_graphic_data","children":[],"call":["@writer end_tag "," write_c_chart ","@writer start_tag ","@writer tag_elements "]}," Writexlsx Drawing write_atag_graphic":{"type":"method","name":"write_atag_graphic","children":[],"call":["@writer end_tag "," write_atag_graphic_data ","@writer start_tag ","@writer tag_elements "]}," Writexlsx Drawing write_xfrm_extension":{"type":"method","name":"write_xfrm_extension","children":[],"call":["@writer empty_tag "]}," Writexlsx Drawing write_xfrm_offset":{"type":"method","name":"write_xfrm_offset","children":[],"call":["@writer empty_tag "]}," Writexlsx Drawing write_xfrm":{"type":"method","name":"write_xfrm","children":[],"call":["@writer end_tag "," write_xfrm_extension "," write_xfrm_offset ","@writer start_tag ","@writer tag_elements "]}," Writexlsx Drawing write_a_graphic_frame_locks":{"type":"method","name":"write_a_graphic_frame_locks","children":[],"call":["@writer empty_tag "]}," Writexlsx Drawing write_c_nv_graphic_frame_pr":{"type":"method","name":"write_c_nv_graphic_frame_pr","children":[],"call":["@writer end_tag "," write_a_graphic_frame_locks ","@writer start_tag ","@writer empty_tag ","@writer tag_elements "]}," Writexlsx Drawing write_c_nv_pr":{"type":"method","name":"write_c_nv_pr","children":[],"call":["@writer empty_tag ","attributes << << ","attributes << "]}," Writexlsx Drawing write_nv_graphic_frame_pr":{"type":"method","name":"write_nv_graphic_frame_pr","children":[],"call":["@writer end_tag "," write_c_nv_graphic_frame_pr "," write_c_nv_pr ","index + ","@writer start_tag ","@writer tag_elements ","name empty? ","name nil? "," ptrue? "]}," Writexlsx Drawing write_graphic_frame":{"type":"method","name":"write_graphic_frame","children":[],"call":["@writer end_tag "," write_atag_graphic "," write_xfrm "," write_nv_graphic_frame_pr ","@writer start_tag ","@writer tag_elements "]}," Writexlsx Drawing write_row_off":{"type":"method","name":"write_row_off","children":[],"call":["@writer data_element "]}," Writexlsx Drawing write_row":{"type":"method","name":"write_row","children":[],"call":["@writer data_element "]}," Writexlsx Drawing write_col_off":{"type":"method","name":"write_col_off","children":[],"call":["@writer data_element "]}," Writexlsx Drawing write_col":{"type":"method","name":"write_col","children":[],"call":["@writer data_element "]}," Writexlsx Drawing write_to":{"type":"method","name":"write_to","children":[],"call":["@writer end_tag "," write_row_off "," write_row "," write_col_off "," write_col ","@writer start_tag ","@writer tag_elements "]}," Writexlsx Drawing write_from":{"type":"method","name":"write_from","children":[],"call":["@writer end_tag "," write_row_off "," write_row "," write_col_off "," write_col ","@writer start_tag ","@writer tag_elements "]}," Writexlsx Drawing write_two_cell_anchor":{"type":"method","name":"write_two_cell_anchor","children":[],"call":["@writer end_tag "," write_client_data "," write_pic "," write_graphic_frame ","type == "," write_to "," write_from ","@writer start_tag ","attributes << << ","attributes << ","@writer tag_elements "," write_sp ","shape [] ","shape [] nil? ! ","shape [] nil? ","shape edit_as ","shape edit_as nil? ! ","shape edit_as nil? "]}," Writexlsx Drawing write_drawing_workspace":{"type":"method","name":"write_drawing_workspace","children":[],"call":["@writer start_tag ","@writer tag_elements "]}," Writexlsx Drawing add_drawing_object":{"type":"method","name":"add_drawing_object","children":[],"call":["@drawings << ","args flatten "]}," Writexlsx Drawing assemble_xml_file":{"type":"method","name":"assemble_xml_file","children":[],"call":["@writer close ","@writer crlf ","@writer end_tag "," write_absolute_anchor "," write_two_cell_anchor ","dimensions flatten ","@drawings each "," write_drawing_workspace ","@writer xml_decl "," write_xml_declaration "]}," Writexlsx Drawing set_xml_writer":{"type":"method","name":"set_xml_writer","children":[],"call":["@writer set_xml_writer "]}," Writexlsx Drawing xml_str":{"type":"method","name":"xml_str","children":[],"call":["@writer string "]}," Writexlsx Drawing initialize":{"type":"method","name":"initialize","children":[],"call":["Package XMLWriterSimple  new "]}," ruby_19":{"type":"method","name":"ruby_19","children":[],"call":[]}," ruby_18":{"type":"method","name":"ruby_18","children":[],"call":[]}," binread":{"type":"method","name":"binread","children":[],"call":[]}," String ascii_only?":{"type":"method","name":"ascii_only?","children":[],"call":["(send\n  (self) :=~\n  (regexp\n    (str \"[^!\\\"#\\\\$%&'\\\\(\\\\)\\\\*\\\\+,\\\\-\\\\./\\\\:\\\\;<=>\\\\?@0-9A-Za-z_\\\\[\\\\\\\\\\\\]\\\\{\\\\}^` ~\\\\0\\\\n]\")\n    (regopt))) ! ! ","(send\n  (self) :=~\n  (regexp\n    (str \"[^!\\\"#\\\\$%&'\\\\(\\\\)\\\\*\\\\+,\\\\-\\\\./\\\\:\\\\;<=>\\\\?@0-9A-Za-z_\\\\[\\\\\\\\\\\\]\\\\{\\\\}^` ~\\\\0\\\\n]\")\n    (regopt))) ! "," =~ ","(send\n  (self) :=~\n  (regexp\n    (str \"[^!\\\"\\#$%&'()*+,\\\\-./:;<=>?@0-9A-Za-z_\\\\[\\\\\\\\\\\\]\\\\{\\\\}^` ~\\\\0\\\\n]\")\n    (regopt))) ! ! ","(send\n  (self) :=~\n  (regexp\n    (str \"[^!\\\"\\#$%&'()*+,\\\\-./:;<=>?@0-9A-Za-z_\\\\[\\\\\\\\\\\\]\\\\{\\\\}^` ~\\\\0\\\\n]\")\n    (regopt))) ! "]}," String ord":{"type":"method","name":"ord","children":[],"call":[" [] "]}," String bytesize":{"type":"method","name":"bytesize","children":[],"call":[" length "]}," String each_char":{"type":"method","name":"each_char","children":[],"call":[" scan "," block_given? "]}," String first_line":{"type":"method","name":"first_line","children":[],"call":[" each_line "]}," Writexlsx Colors inspect":{"type":"method","name":"inspect","children":[],"call":[" to_s "]}," Writexlsx Colors get_color":{"type":"method","name":"get_color","children":[],"call":["COLORS  [] ","COLORS  has_key? ","color downcase to_sym ","color downcase ","color respond_to? ","color to_i ","(send\n  (lvar :color) :+\n  (int 8)) to_i ","color + ","color < ","63 < ","color downcase to_sym  downcase to_sym ","color downcase to_sym  downcase ","color downcase to_sym  respond_to? ","color downcase to_sym  to_i ","(send\n  (lvar :color downcase to_sym ) :+\n  (int 8)) to_i ","color downcase to_sym  + ","color downcase to_sym  < "]}," Writexlsx Chart write_c_invert_if_negative":{"type":"method","name":"write_c_invert_if_negative","children":[],"call":["@writer empty_tag ","invert != "," ptrue? "]}," Writexlsx Chart write_delete":{"type":"method","name":"write_delete","children":[],"call":["@writer empty_tag "]}," Writexlsx Chart write_show_ser_name":{"type":"method","name":"write_show_ser_name","children":[],"call":["@writer empty_tag "]}," Writexlsx Chart write_show_cat_name":{"type":"method","name":"write_show_cat_name","children":[],"call":["@writer empty_tag "]}," Writexlsx Chart write_show_val":{"type":"method","name":"write_show_val","children":[],"call":["@writer empty_tag "]}," Writexlsx Chart write_d_lbls":{"type":"method","name":"write_d_lbls","children":[],"call":["@writer end_tag "," write_show_ser_name ","labels [] "," series_name "," write_show_cat_name "," category "," write_show_val "," value ","@writer start_tag ","@writer tag_elements "," write_show_leader_lines "," write_show_percent "," write_d_lbl_pos "," write_separator "," write_show_legend_key "," ptrue? "," write_axis_font "," write_data_label_number_format "," write_sp_pr "," write_custom_labels "]}," Writexlsx Chart write_protection":{"type":"method","name":"write_protection","children":[],"call":["@writer empty_tag ","@protection == "]}," Writexlsx Chart write_v":{"type":"method","name":"write_v","children":[],"call":["@writer data_element "]}," Writexlsx Chart write_pt":{"type":"method","name":"write_pt","children":[],"call":["@writer end_tag "," write_v ","@writer start_tag ","@writer tag_elements "]}," Writexlsx Chart write_pt_count":{"type":"method","name":"write_pt_count","children":[],"call":["@writer empty_tag "]}," Writexlsx Chart write_format_code":{"type":"method","name":"write_format_code","children":[],"call":["@writer data_element "]}," Writexlsx Chart write_str_cache":{"type":"method","name":"write_str_cache","children":[],"call":["@writer end_tag "," write_pt ","data [] ","(irange\n  (int 0)\n  (send\n    (lvar :count) :-\n    (int 1))) each ","count - "," write_pt_count ","@writer start_tag ","data size "," write_pts ","@writer tag_elements ","(irange\n  (int 0)\n  (send\n    (lvar :data size ) :-\n    (int 1))) each ","data size  - "," write_pt_data size  "]}," Writexlsx Chart write_num_cache":{"type":"method","name":"write_num_cache","children":[],"call":["@writer end_tag "," write_pt ","data [] ","(irange\n  (int 0)\n  (send\n    (lvar :count) :-\n    (int 1))) each ","count - "," write_pt_count "," write_format_code ","@writer start_tag ","data size "," write_pts ","@writer tag_elements ","(send\n  (send\n    (lvar :token) :to_s) :=~\n  (regexp\n    (str \"^([+-]?)(?=\\\\d|\\\\.\\\\d)\\\\d*(\\\\.\\\\d*)?([Ee]([+-]?\\\\d+))?$\")\n    (regopt))) ! ","token to_s =~ ","token to_s ","(irange\n  (int 0)\n  (send\n    (send\n      (lvar :data) :size) :-\n    (int 1))) each ","data size - "," write_num_base ","(irange\n  (int 0)\n  (send\n    (lvar :data size ) :-\n    (int 1))) each ","data size  - "," write_pt_data size  ","(send\n  (send\n    (lvar :data [] ) :to_s) :=~\n  (regexp\n    (str \"^([+-]?)(?=\\\\d|\\\\.\\\\d)\\\\d*(\\\\.\\\\d*)?([Ee]([+-]?\\\\d+))?$\")\n    (regopt))) ! ","data []  to_s =~ ","data []  to_s "]}," Writexlsx Chart write_overlap":{"type":"method","name":"write_overlap","children":[],"call":["@writer empty_tag "]}," Writexlsx Chart write_hi_low_lines":{"type":"method","name":"write_hi_low_lines","children":[],"call":["@writer empty_tag "," write_lines_base "]}," Writexlsx Chart write_backward":{"type":"method","name":"write_backward","children":[],"call":["@writer empty_tag "]}," Writexlsx Chart write_forward":{"type":"method","name":"write_forward","children":[],"call":["@writer empty_tag "]}," Writexlsx Chart write_period":{"type":"method","name":"write_period","children":[],"call":["@writer empty_tag "]}," Writexlsx Chart write_trendline_order":{"type":"method","name":"write_trendline_order","children":[],"call":["@writer empty_tag "]}," Writexlsx Chart write_name":{"type":"method","name":"write_name","children":[],"call":["@writer data_element "]}," Writexlsx Chart write_trendline_type":{"type":"method","name":"write_trendline_type","children":[],"call":["@writer empty_tag "]}," Writexlsx Chart write_trendline":{"type":"method","name":"write_trendline","children":[],"call":["@writer end_tag "," write_backward ","trendline [] "," backward "," write_forward "," forward "," write_period "," period ","trendline [] == "," type "," write_trendline_order "," order "," write_trendline_type "," write_sp_pr "," write_name "," name ","@writer start_tag ","@writer tag_elements ","trendline backward ","trendline forward ","trendline period ","trendline type == ","trendline type ","trendline order ","trendline name "," write_trendline_lbl "," write_disp_eq ","trendline display_equation "," write_disp_rsqr ","trendline display_r_squared "," write_intercept ","trendline intercept "]}," Writexlsx Chart write_a_prst_dash":{"type":"method","name":"write_a_prst_dash","children":[],"call":["@writer empty_tag "]}," Writexlsx Chart write_a_srgb_clr":{"type":"method","name":"write_a_srgb_clr","children":[],"call":["@writer empty_tag "," write_a_alpha ","@writer tag_elements "," ptrue? "]}," Writexlsx Chart write_a_solid_fill":{"type":"method","name":"write_a_solid_fill","children":[],"call":["@writer end_tag "," write_a_srgb_clr "," get_color ","line [] ","@writer start_tag ","@writer tag_elements "," color ","fill [] "," get_ get_color  ","  get_color  "]}," Writexlsx Chart write_a_no_fill":{"type":"method","name":"write_a_no_fill","children":[],"call":["@writer empty_tag "]}," Writexlsx Chart write_a_ln":{"type":"method","name":"write_a_ln","children":[],"call":["@writer end_tag "," write_a_prst_dash ","line [] "," write_a_solid_fill "," write_a_no_fill ","line [] != ","line [] nil? ! ","line [] nil? ","@writer start_tag ","(send\n  (float 0.5) :+\n  (begin\n    (send\n      (int 12700) :*\n      (lvar :width)))) to_i ","0.5 + ","12700 * ","(send\n  (begin\n    (send\n      (lvar :width) :+\n      (float 0.125))) :*\n  (int 4)) to_i / ","(send\n  (begin\n    (send\n      (lvar :width) :+\n      (float 0.125))) :*\n  (int 4)) to_i ","(send\n  (lvar :width) :+\n  (float 0.125)) * ","width + ","@writer tag_elements "," ptrue? ","attributes << ","@writer empty_tag ","(send\n  (float 0.5) :+\n  (begin\n    (send\n      (int 12700) :*\n      (lvar :(send\n  (float 0.5) :+\n  (begin\n    (send\n      (int 12700) :*\n      (lvar :width)))) to_i )))) to_i ","(send\n  (float 0.5) :+\n  (begin\n    (send\n      (int 12700) :*\n      (lvar :(send\n  (begin\n    (send\n      (lvar :width) :+\n      (float 0.125))) :*\n  (int 4)) to_i / )))) to_i ","(send\n  (float 0.5) :+\n  (begin\n    (send\n      (int 12700) :*\n      (lvar :line [] )))) to_i ","(send\n  (begin\n    (send\n      (lvar :(send\n  (float 0.5) :+\n  (begin\n    (send\n      (int 12700) :*\n      (lvar :width)))) to_i ) :+\n      (float 0.125))) :*\n  (int 4)) to_i / ","(send\n  (begin\n    (send\n      (lvar :(send\n  (begin\n    (send\n      (lvar :width) :+\n      (float 0.125))) :*\n  (int 4)) to_i / ) :+\n      (float 0.125))) :*\n  (int 4)) to_i / ","(send\n  (begin\n    (send\n      (lvar :line [] ) :+\n      (float 0.125))) :*\n  (int 4)) to_i / ","(send\n  (begin\n    (send\n      (lvar :(send\n  (float 0.5) :+\n  (begin\n    (send\n      (int 12700) :*\n      (lvar :width)))) to_i ) :+\n      (float 0.125))) :*\n  (int 4)) to_i ","(send\n  (begin\n    (send\n      (lvar :(send\n  (begin\n    (send\n      (lvar :width) :+\n      (float 0.125))) :*\n  (int 4)) to_i / ) :+\n      (float 0.125))) :*\n  (int 4)) to_i ","(send\n  (begin\n    (send\n      (lvar :line [] ) :+\n      (float 0.125))) :*\n  (int 4)) to_i ","(send\n  (lvar :(send\n  (float 0.5) :+\n  (begin\n    (send\n      (int 12700) :*\n      (lvar :width)))) to_i ) :+\n  (float 0.125)) * ","(send\n  (lvar :(send\n  (begin\n    (send\n      (lvar :width) :+\n      (float 0.125))) :*\n  (int 4)) to_i / ) :+\n  (float 0.125)) * ","(send\n  (lvar :line [] ) :+\n  (float 0.125)) * ","(send\n  (float 0.5) :+\n  (begin\n    (send\n      (int 12700) :*\n      (lvar :width)))) to_i  + ","(send\n  (begin\n    (send\n      (lvar :width) :+\n      (float 0.125))) :*\n  (int 4)) to_i /  + ","line []  + "]}," Writexlsx Chart write_sp_pr":{"type":"method","name":"write_sp_pr","children":[],"call":["@writer end_tag "," write_a_ln ","series [] ","series [] [] "," write_a_solid_fill ","series [] [] != ","@writer start_tag ","series [] [] == ","series [] [] nil? ","series has_key? ! ","series has_key? ","@writer tag_elements "," write_a_no_fill "," ptrue? "," ptrue? ! ","line [] ","fill [] ","fill [] != ","fill ! ","line ! ","series fill ","series respond_to? ","series line "," write_a_grad_fill ","gradient ! ","series gradient "," write_a_patt_fill ","pattern ! ","series pattern "," series_property "," has_fill_formatting ! "," has_fill_formatting "," write_a_solid_series []  "," write_a_solid_series fill  "," write_a_solid_ series_property  "," write_a_no_series []  "," write_a_no_series fill  "," write_a_no_ series_property  ","series []  [] ","series line  [] "," series_property  [] ","series fill  [] ","series []  [] != ","series fill  [] != "," series_property  [] != ","series []  ! ","series fill  ! "," series_property  ! ","series line  ! ","series series []  ","series series fill  ","series  series_property  ","series series line  "," write_a_grad_series []  "," write_a_grad_series fill  "," write_a_grad_ series_property  ","series gradient  ! ","series series gradient  "," write_a_patt_series []  "," write_a_patt_series fill  "," write_a_patt_ series_property  ","series pattern  ! ","series series pattern  "," has_series [] _formatting ! "," has_series fill _formatting ! "," has_ series_property _formatting ! "," has_series [] _formatting "," has_series fill _formatting "," has_ series_property _formatting "]}," Writexlsx Chart write_symbol":{"type":"method","name":"write_symbol","children":[],"call":["@writer empty_tag "]}," Writexlsx Chart write_marker_size":{"type":"method","name":"write_marker_size","children":[],"call":["@writer empty_tag "]}," Writexlsx Chart write_marker_value":{"type":"method","name":"write_marker_value","children":[],"call":["@writer empty_tag "]}," Writexlsx Chart write_marker":{"type":"method","name":"write_marker","children":[],"call":["@writer end_tag "," write_sp_pr "," write_marker_size ","size != ","size nil? ! ","size nil? ","marker [] "," write_symbol ","@writer start_tag ","marker [] != ","marker == ","marker nil? ","@writer tag_elements "," ptrue? ","marker size ","marker type ","marker automatic? "," write_marker_marker []  "," write_marker_marker size  ","marker []  != ","marker size  != ","marker []  nil? ! ","marker size  nil? ! ","marker []  nil? ","marker size  nil? ","marker marker []  ","marker marker size  "]}," Writexlsx Chart write_tx_pr":{"type":"method","name":"write_tx_pr","children":[],"call":["@writer end_tag "," write_a_p_formula "," write_a_lst_style "," write_a_body_pr ","@writer start_tag ","@writer tag_elements ","font [] "]}," Writexlsx Chart write_a_t":{"type":"method","name":"write_a_t","children":[],"call":["@writer data_element "]}," Writexlsx Chart write_a_r_pr":{"type":"method","name":"write_a_r_pr","children":[],"call":["@writer empty_tag "," write_a_latin ","latin_attributes empty? ! ","latin_attributes empty? "," write_a_solid_fill ","font [] ","@writer tag_elements ","style_attributes unshift unshift ","style_attributes unshift "," ptrue? "," get_font_latin_attributes "," get_font_style_attributes "," write_def_rpr_r_pr_common "," get_font_style_attributes unshift unshift "," get_font_style_attributes unshift ","attr_font empty? "," get_font_latin_attributes  empty? ! "," get_font_latin_attributes  empty? "," get_font_style_attributes  unshift unshift "," get_font_style_attributes  unshift "," get_font_ get_font_latin_attributes  "," get_font_ get_font_style_attributes  "," get_font_ get_font_style_attributes  unshift unshift "," get_font_ get_font_style_attributes  unshift "," get_font_style_attributes  empty? "]}," Writexlsx Chart write_a_r":{"type":"method","name":"write_a_r","children":[],"call":["@writer end_tag "," write_a_t "," write_a_r_pr ","@writer start_tag ","@writer tag_elements ","title name ","title name_font ","title respond_to? "]}," Writexlsx Chart write_a_end_para_rpr":{"type":"method","name":"write_a_end_para_rpr","children":[],"call":["@writer empty_tag "]}," Writexlsx Chart write_a_def_rpr":{"type":"method","name":"write_a_def_rpr","children":[],"call":["@writer empty_tag "," write_a_latin ","latin_attributes empty? ! ","latin_attributes empty? "," write_a_solid_fill ","font [] ","@writer tag_elements "," ptrue? "," get_font_latin_attributes "," get_font_style_attributes "," write_def_rpr_r_pr_common "," get_font_latin_attributes  empty? ! "," get_font_latin_attributes  empty? "," get_font_ get_font_latin_attributes  "," get_font_ get_font_style_attributes  "]}," Writexlsx Chart write_a_p_pr_formula":{"type":"method","name":"write_a_p_pr_formula","children":[],"call":["@writer end_tag "," write_a_def_rpr ","@writer start_tag ","@writer tag_elements "]}," Writexlsx Chart write_a_p_pr_rich":{"type":"method","name":"write_a_p_pr_rich","children":[],"call":["@writer end_tag "," write_a_def_rpr ","@writer start_tag ","@writer tag_elements "]}," Writexlsx Chart write_a_p_formula":{"type":"method","name":"write_a_p_formula","children":[],"call":["@writer end_tag "," write_a_end_para_rpr "," write_a_p_pr_formula ","@writer start_tag ","@writer tag_elements "]}," Writexlsx Chart write_a_p_rich":{"type":"method","name":"write_a_p_rich","children":[],"call":["@writer end_tag "," write_a_r "," write_a_p_pr_rich ","@writer start_tag ","@writer tag_elements ","title name_font ","ignore_rich_pr ! "]}," Writexlsx Chart write_a_lst_style":{"type":"method","name":"write_a_lst_style","children":[],"call":["@writer empty_tag "]}," Writexlsx Chart write_a_body_pr":{"type":"method","name":"write_a_body_pr","children":[],"call":["@writer empty_tag ","horiz == ","horiz ! "," ptrue? ","attributes << ","rot ! "]}," Writexlsx Chart write_rich":{"type":"method","name":"write_rich","children":[],"call":["@writer end_tag "," write_a_p_rich "," write_a_lst_style "," write_a_body_pr ","@writer start_tag ","@writer tag_elements ","title name_font [] ","title name_font ","font [] "]}," Writexlsx Chart write_tx_formula":{"type":"method","name":"write_tx_formula","children":[],"call":["@writer end_tag "," write_str_ref ","@writer start_tag ","@formula_data [] ","@writer tag_elements ","@formula_@formula_data []  [] "]}," Writexlsx Chart write_tx_value":{"type":"method","name":"write_tx_value","children":[],"call":["@writer end_tag "," write_v ","@writer start_tag ","@writer tag_elements "]}," Writexlsx Chart write_tx_rich":{"type":"method","name":"write_tx_rich","children":[],"call":["@writer end_tag "," write_rich ","@writer start_tag ","@writer tag_elements "]}," Writexlsx Chart write_title_formula":{"type":"method","name":"write_title_formula","children":[],"call":["@writer end_tag "," write_tx_pr "," write_layout "," write_tx_formula ","@writer start_tag ","@writer tag_elements ","title name_font ","axis name_font ","title data_id ","axis data_id ","title formula "," write_overlay "]}," Writexlsx Chart write_title_rich":{"type":"method","name":"write_title_rich","children":[],"call":["@writer end_tag "," write_layout "," write_tx_rich ","@writer start_tag ","@writer tag_elements "," write_overlay "]}," Writexlsx Chart write_page_setup":{"type":"method","name":"write_page_setup","children":[],"call":["@writer empty_tag "]}," Writexlsx Chart write_page_margins":{"type":"method","name":"write_page_margins","children":[],"call":["@writer empty_tag "]}," Writexlsx Chart write_header_footer":{"type":"method","name":"write_header_footer","children":[],"call":["@writer empty_tag "]}," Writexlsx Chart write_print_settings":{"type":"method","name":"write_print_settings","children":[],"call":["@writer end_tag "," write_page_setup "," write_page_margins "," write_header_footer ","@writer start_tag ","@writer tag_elements "]}," Writexlsx Chart write_plot_vis_only":{"type":"method","name":"write_plot_vis_only","children":[],"call":["@writer empty_tag "]}," Writexlsx Chart write_overlay":{"type":"method","name":"write_overlay","children":[],"call":["@writer empty_tag "]}," Writexlsx Chart write_legend_entry":{"type":"method","name":"write_legend_entry","children":[],"call":["@writer end_tag "," write_delete "," write_idx ","@writer start_tag ","@writer tag_elements "]}," Writexlsx Chart write_legend_pos":{"type":"method","name":"write_legend_pos","children":[],"call":["@writer empty_tag "]}," Writexlsx Chart write_legend":{"type":"method","name":"write_legend","children":[],"call":["@writer end_tag "," write_overlay "," write_layout "," write_legend_entry ","@delete_series each "," write_legend_pos ","@writer start_tag ","allowed [] ","allowed has_key? ","position == ","position sub! ","position =~ ","@legend_delete_series kind_of? ","@writer tag_elements "," write_tx_pr "," ptrue? ","@legend_position =~ "," position_allowed [] "," position_allowed "," position_allowed has_key? ! "," position_allowed has_key? ","@legend_position sub ","@legend font "," write_sp_pr ","@legend position =~ ","@legend position ","@legend layout ","@legend delete_series ","@legend delete_series kind_of? ","@legend position sub ","@legend delete_series is_a? ","@legend delete_series  each ","allowed []  == ","@legend_position sub  == ","@legend position sub  == ","allowed []  sub! ","@legend_position sub  sub! ","@legend position sub  sub! ","allowed []  =~ ","@legend_position sub  =~ ","@legend position sub  =~ ","@legend_allowed []  =~ ","@legend_@legend_position sub  =~ ","@legend_@legend position sub  =~ "," allowed [] _allowed [] "," @legend_position sub _allowed [] "," @legend position sub _allowed [] "," allowed [] _allowed "," @legend_position sub _allowed "," @legend position sub _allowed "," allowed [] _allowed has_key? ! "," @legend_position sub _allowed has_key? ! "," @legend position sub _allowed has_key? ! "," allowed [] _allowed has_key? "," @legend_position sub _allowed has_key? "," @legend position sub _allowed has_key? ","@legend_allowed []  sub ","@legend_@legend_position sub  sub ","@legend_@legend position sub  sub ","@legend allowed []  =~ ","@legend @legend_position sub  =~ ","@legend @legend position sub  =~ ","@legend allowed []  ","@legend @legend_position sub  ","@legend @legend position sub  ","@legend allowed []  sub ","@legend @legend_position sub  sub ","@legend @legend position sub  sub "]}," Writexlsx Chart write_c_minor_time_unit":{"type":"method","name":"write_c_minor_time_unit","children":[],"call":["@writer empty_tag "]}," Writexlsx Chart write_c_major_time_unit":{"type":"method","name":"write_c_major_time_unit","children":[],"call":["@writer empty_tag "]}," Writexlsx Chart write_c_minor_unit":{"type":"method","name":"write_c_minor_unit","children":[],"call":["@writer empty_tag "]}," Writexlsx Chart write_c_major_unit":{"type":"method","name":"write_c_major_unit","children":[],"call":["@writer empty_tag "]}," Writexlsx Chart write_cross_between":{"type":"method","name":"write_cross_between","children":[],"call":["@writer empty_tag "]}," Writexlsx Chart write_number_format":{"type":"method","name":"write_number_format","children":[],"call":["@writer empty_tag "," ptrue? ","axis [] ","format_code != ","axis [] [] ","axis write_number_format ","axis []  != "]}," Writexlsx Chart write_major_gridlines":{"type":"method","name":"write_major_gridlines","children":[],"call":["@writer empty_tag "," ptrue? ","options [] ","gridlines [] "," write_sp_pr ","@writer tag_elements ","gridlines [] [] "," write_gridlines_common "," write_gridlines_base "]}," Writexlsx Chart write_label_offset":{"type":"method","name":"write_label_offset","children":[],"call":["@writer empty_tag "]}," Writexlsx Chart write_label_align":{"type":"method","name":"write_label_align","children":[],"call":["@writer empty_tag ","val == "]}," Writexlsx Chart write_auto":{"type":"method","name":"write_auto","children":[],"call":["@writer empty_tag "]}," Writexlsx Chart write_c_crosses_at":{"type":"method","name":"write_c_crosses_at","children":[],"call":["@writer empty_tag "]}," Writexlsx Chart write_crosses":{"type":"method","name":"write_crosses","children":[],"call":["@writer empty_tag "]}," Writexlsx Chart write_cross_axis":{"type":"method","name":"write_cross_axis","children":[],"call":["@writer empty_tag "]}," Writexlsx Chart write_tick_label_pos":{"type":"method","name":"write_tick_label_pos","children":[],"call":["@writer empty_tag ","val == "]}," Writexlsx Chart write_num_fmt":{"type":"method","name":"write_num_fmt","children":[],"call":["@writer empty_tag "]}," Writexlsx Chart write_axis_pos":{"type":"method","name":"write_axis_pos","children":[],"call":["@writer empty_tag ","val == "]}," Writexlsx Chart write_c_min":{"type":"method","name":"write_c_min","children":[],"call":["@writer empty_tag ","min nil? "]}," Writexlsx Chart write_c_max":{"type":"method","name":"write_c_max","children":[],"call":["@writer empty_tag ","max nil? "]}," Writexlsx Chart write_orientation":{"type":"method","name":"write_orientation","children":[],"call":["@writer empty_tag "," ptrue? "]}," Writexlsx Chart write_c_log_base":{"type":"method","name":"write_c_log_base","children":[],"call":["@writer empty_tag ","val nil? ","val == "," ptrue? "]}," Writexlsx Chart write_scaling":{"type":"method","name":"write_scaling","children":[],"call":["@writer end_tag "," write_c_min "," write_c_max "," write_orientation "," write_c_log_base ","@writer start_tag ","@writer tag_elements "]}," Writexlsx Chart write_date_axis":{"type":"method","name":"write_date_axis","children":[],"call":["@writer end_tag "," write_c_minor_time_unit ","x_axis [] ","x_axis [] nil? ! ","x_axis [] nil? "," write_c_minor_unit "," write_c_major_time_unit "," write_c_major_unit "," write_label_offset "," write_auto "," write_c_crosses_at ","y_axis [] "," write_crosses ","y_axis [] == ","y_axis [] nil? "," write_cross_axis ","@axis_ids [] "," write_tick_label_pos "," write_num_fmt "," write_title_rich "," write_title_formula "," write_axis_pos "," write_scaling "," write_axis_id ","@writer start_tag "," nil_or_max? ","@writer tag_elements "," write_crossing "," ptrue? ","axis_ids [] "," write_delete "," write_scaling_with_param ","axis_ids empty? ! ","axis_ids empty? ","params [] "," write_axis_font "," write_major_tick_mark "," write_number_format "," write_major_gridlines "," write_minor_gridlines ","x_axis minor_unit_type ","x_axis minor_unit nil? ! ","x_axis minor_unit nil? ","x_axis minor_unit ","x_axis major_unit_type ","x_axis major_unit nil? ! ","x_axis major_unit nil? ","x_axis major_unit ","y_axis crossing ","x_axis visible ","x_axis num_font ","x_axis label_position ","x_axis major_tick_mark ","x_axis name_font ","x_axis name ","x_axis data_id ","x_axis formula ","x_axis minor_gridlines ","x_axis major_gridlines ","y_axis reverse ","x_axis position ","x_axis layout "," write_tick_lbl_skip ","x_axis interval_unit "," write_sp_pr "," write_tick_mark_skip ","x_axis interval_tick ","params []  [] ","params []  [] nil? ! ","params []  [] nil? ","params []  [] == ","@params []  [] "," write_x_axis [] _rich "," write_x_axis name _rich "," write_x_axis formula _rich "," write_x_axis [] _formula "," write_x_axis name _formula "," write_x_axis formula _formula ","params []  empty? ! ","params []  empty? ","params []  minor_unit_type ","params []  minor_unit nil? ! ","params []  minor_unit nil? ","params []  minor_unit ","params []  major_unit_type ","params []  major_unit nil? ! ","params []  major_unit nil? ","params []  major_unit ","params []  crossing ","params []  visible ","params []  num_font ","params []  label_position ","params []  major_tick_mark ","params []  name_font ","params []  name ","params []  data_id ","params []  formula ","params []  minor_gridlines ","params []  major_gridlines ","params []  reverse ","params []  position ","params []  layout ","params []  interval_unit ","params []  interval_tick "]}," Writexlsx Chart write_cat_val_axis":{"type":"method","name":"write_cat_val_axis","children":[],"call":["@writer end_tag "," write_c_minor_unit ","y_axis [] "," write_c_major_unit "," write_cross_between "," write_c_crosses_at "," write_crosses ","y_axis [] == ","y_axis [] nil? "," write_cross_axis ","@axis_ids [] "," write_tick_label_pos ","x_axis [] "," write_number_format "," write_title_rich ","@x_axis [] "," write_title_formula ","@y_axis [] "," write_major_gridlines "," write_axis_pos "," write_scaling "," write_axis_id ","@writer start_tag "," write_val_axis_common "," write_crossing ","axis_ids [] "," write_delete "," ptrue? "," write_scaling_with_param ","@writer tag_elements ","axis_ids empty? ! ","axis_ids empty? ","params [] "," write_axis_font "," write_major_tick_mark "," write_minor_gridlines ","x_axis minor_unit ","x_axis major_unit ","y_axis crossing ","x_axis num_font ","x_axis label_position ","x_axis major_tick_mark ","x_axis name_font ","x_axis name ","y_axis data_id ","x_axis formula ","x_axis minor_gridlines ","x_axis major_gridlines ","y_axis reverse ","x_axis visible ","x_axis position "," write_val_axis ","params []  [] ","params []  [] == ","params []  [] nil? ","@params []  [] "," write_@x_axis [] _rich "," write_x_axis [] _rich "," write_x_axis name _rich "," write_x_axis formula _rich "," write_@x_axis [] _formula "," write_x_axis [] _formula "," write_x_axis name _formula "," write_x_axis formula _formula ","params []  empty? ! ","params []  empty? ","params []  minor_unit ","params []  major_unit ","params []  crossing ","params []  num_font ","params []  label_position ","params []  major_tick_mark ","params []  name_font ","params []  name ","params []  data_id ","params []  formula ","params []  minor_gridlines ","params []  major_gridlines ","params []  reverse ","params []  visible ","params []  position "]}," Writexlsx Chart write_val_axis":{"type":"method","name":"write_val_axis","children":[],"call":["@writer end_tag "," write_c_minor_unit ","y_axis [] "," write_c_major_unit "," write_cross_between "," write_c_crosses_at ","x_axis [] "," write_crosses ","x_axis [] == ","x_axis [] nil? "," write_cross_axis ","@axis_ids [] "," write_tick_label_pos "," write_number_format "," write_title_rich ","@y_axis [] "," write_title_formula "," write_major_gridlines "," write_axis_pos "," write_scaling "," write_axis_id ","@writer start_tag "," write_val_axis_common ","@x_axis [] "," write_crossing ","axis_ids [] "," write_delete "," ptrue? "," write_scaling_with_param ","@writer tag_elements ","axis_ids empty? ! ","axis_ids empty? ","params [] "," write_axis_font "," write_major_tick_mark "," write_minor_gridlines ","y_axis minor_unit ","y_axis major_unit ","x_axis crossing ","y_axis num_font ","y_axis label_position ","y_axis major_tick_mark ","y_axis name_font ","y_axis name ","y_axis data_id ","y_axis formula ","y_axis minor_gridlines ","y_axis major_gridlines ","x_axis reverse ","y_axis visible ","y_axis position ","x_axis position_axis ","y_axis layout "," write_val_axis_base ","params []  [] ","params []  [] == ","params []  [] nil? ","@params []  [] "," write_@y_axis [] _rich "," write_y_axis [] _rich "," write_y_axis name _rich "," write_y_axis formula _rich "," write_@y_axis [] _formula "," write_y_axis [] _formula "," write_y_axis name _formula "," write_y_axis formula _formula ","params []  empty? ! ","params []  empty? ","params []  minor_unit ","params []  major_unit ","params []  crossing ","params []  num_font ","params []  label_position ","params []  major_tick_mark ","params []  name_font ","params []  name ","params []  data_id ","params []  formula ","params []  minor_gridlines ","params []  major_gridlines ","params []  reverse ","params []  visible ","params []  position ","params []  position_axis ","params []  layout "]}," Writexlsx Chart write_cat_axis":{"type":"method","name":"write_cat_axis","children":[],"call":["@writer end_tag "," write_label_offset "," write_label_align "," write_auto "," write_c_crosses ","y_axis [] "," write_crosses ","y_axis [] == ","y_axis [] nil? "," write_cross_axis ","@axis_ids [] "," write_tick_label_pos ","x_axis [] "," write_num_fmt "," write_title_rich ","@x_axis [] "," write_title_formula "," write_axis_pos "," write_scaling "," write_axis_id ","@writer start_tag "," nil_or_max? ","@writer tag_elements "," write_crossing "," ptrue? ","axis_ids [] "," write_delete ","axis_ids empty? ","params [] "," write_axis_font "," write_major_tick_mark "," write_cat_number_format "," write_major_gridlines "," write_minor_gridlines ","y_axis crossing ","x_axis visible ","x_axis num_font ","x_axis label_position ","x_axis major_tick_mark ","x_axis name_font ","x_axis name ","@x_axis name_font ","@x_axis data_id ","x_axis formula ","x_axis minor_gridlines ","x_axis major_gridlines ","y_axis reverse ","x_axis reverse ","x_axis position ","x_axis layout "," write_tick_lbl_skip ","x_axis interval_unit "," write_sp_pr ","x_axis text_axis "," write_tick_mark_skip ","x_axis interval_tick "," write_minor_tick_mark ","x_axis minor_tick_mark ","x_axis label_align ","params []  [] ","params []  [] == ","params []  [] nil? ","@params []  [] "," write_@x_axis [] _rich "," write_x_axis [] _rich "," write_x_axis name _rich "," write_x_axis formula _rich "," write_@x_axis [] _formula "," write_x_axis [] _formula "," write_x_axis name _formula "," write_x_axis formula _formula ","params []  empty? ","params []  crossing ","params []  visible ","params []  num_font ","params []  label_position ","params []  major_tick_mark ","params []  name_font ","params []  name ","@params []  name_font ","@params []  data_id ","params []  formula ","params []  minor_gridlines ","params []  major_gridlines ","params []  reverse ","params []  position ","params []  layout ","params []  interval_unit ","params []  text_axis ","params []  interval_tick ","params []  minor_tick_mark ","params []  label_align "]}," Writexlsx Chart write_axis_id":{"type":"method","name":"write_axis_id","children":[],"call":["@writer empty_tag "]}," Writexlsx Chart write_series_formula":{"type":"method","name":"write_series_formula","children":[],"call":["@writer data_element ","formula sub ","formula sub  sub "]}," Writexlsx Chart write_str_ref":{"type":"method","name":"write_str_ref","children":[],"call":["@writer end_tag "," write_str_cache ","type == "," write_num_cache "," write_series_formula ","@writer start_tag ","@writer tag_elements "," write_num_or_str_ref "]}," Writexlsx Chart write_num_ref":{"type":"method","name":"write_num_ref","children":[],"call":["@writer end_tag "," write_str_cache ","type == "," write_num_cache "," write_series_formula ","@writer start_tag ","@writer tag_elements "," write_num_or_str_ref "]}," Writexlsx Chart write_val":{"type":"method","name":"write_val","children":[],"call":["@writer end_tag "," write_num_ref "," write_str_ref ","type == "," get_data_type ","@writer start_tag ","@formula_data [] ","series [] "," write_val_base ","series val_data_id ","series values "," get_data_type  == "," get_data_ get_data_type  "," get_@formula_data [] _type ","@formula_@formula_data []  [] ","@series [] _data [] ","series val_@formula_data [] _id ","series val_series []  "]}," Writexlsx Chart write_cat":{"type":"method","name":"write_cat","children":[],"call":["@writer end_tag "," write_num_ref "," write_str_ref ","type == "," get_data_type ","@writer start_tag ","@formula_data [] ","series [] ","@writer tag_elements ","series cat_data_id ","series categories "," write_multi_lvl_str_ref "," get_data_type  == "," get_data_ get_data_type  "," get_@formula_data [] _type ","@formula_@formula_data []  [] ","@series [] _data [] ","@series categories _data [] ","series cat_@formula_data [] _id ","series cat_series []  ","series cat_series cat_data_id  "]}," Writexlsx Chart write_series_name":{"type":"method","name":"write_series_name","children":[],"call":[" write_tx_value ","series [] "," write_tx_formula ","series name ","series name_id ","series name_formula ","series series []  ","series series [] _id ","series series [] _formula "]}," Writexlsx Chart write_order":{"type":"method","name":"write_order","children":[],"call":["@writer empty_tag "]}," Writexlsx Chart write_idx":{"type":"method","name":"write_idx","children":[],"call":["@writer empty_tag "]}," Writexlsx Chart write_ser":{"type":"method","name":"write_ser","children":[],"call":["@writer end_tag "," write_val "," write_cat "," write_trendline ","series [] "," write_d_lbls "," write_c_invert_if_negative "," write_marker "," write_sp_pr "," write_series_name "," write_order "," write_idx ","@writer start_tag ","@writer tag_elements "," write_error_bars "," write_d_pt "," write_c_smooth "," ptrue? ","series smooth ","series error_bars ","series trendline ","series labels ","series points ","series invert_if_neg ","series marker ","series invert_if_negative "," write_ser_base "," write_ext_lst ","series inverted_color "]}," Writexlsx Chart write_series":{"type":"method","name":"write_series","children":[],"call":[" write_axis_id ","@axis_ids [] "," add_axis_id "," write_marker_value "," write_ser ","@series each "," write_series_base "]}," Writexlsx Chart write_grouping":{"type":"method","name":"write_grouping","children":[],"call":["@writer empty_tag "]}," Writexlsx Chart write_chart_type":{"type":"method","name":"write_chart_type","children":[],"call":[]}," Writexlsx Chart write_layout":{"type":"method","name":"write_layout","children":[],"call":["@writer empty_tag "," write_manual_layout ","@writer tag_elements "]}," Writexlsx Chart write_plot_area":{"type":"method","name":"write_plot_area","children":[],"call":["@writer end_tag "," write_val_axis "," write_cat_axis "," write_chart_type "," write_layout ","@writer start_tag ","@writer tag_elements "," write_plot_area_base "," write_sp_pr "," write_d_table "," write_date_axis ","@plotarea layout ","second_chart write_val_axis ","second_chart axis2_ids ","second_chart y2_axis ","second_chart x2_axis ","second_chart is_secondary? ","second_chart write_chart_type ","second_chart series_index= ","second_chart writer= ","second_chart id= ","1000 + "]}," Writexlsx Chart write_chart":{"type":"method","name":"write_chart","children":[],"call":["@writer end_tag "," write_plot_vis_only "," write_legend "," write_plot_area "," write_title_rich "," write_title_formula ","@writer start_tag ","@writer tag_elements "," write_disp_blanks_as ","@title name ","@title formula ","@title overlay ","@title layout "," write_auto_title_deleted ","@title none ","@title name_font "]}," Writexlsx Chart write_style":{"type":"method","name":"write_style","children":[],"call":["@writer empty_tag ","style_id == ","@style_id == "]}," Writexlsx Chart write_lang":{"type":"method","name":"write_lang","children":[],"call":["@writer empty_tag "]}," Writexlsx Chart write_chart_space":{"type":"method","name":"write_chart_space","children":[],"call":["@writer start_tag ","schema + ","@writer tag_elements "," chart_space_attributes "]}," Writexlsx Chart set_default_properties":{"type":"method","name":"set_default_properties","children":[],"call":[" set_y2_axis "," set_x2_axis "," set_y_axis "," set_x_axis "," default_plotarea_property "," default_chartarea_property ","@y2_axis []= ","@x2_axis []= ","@y_axis []= ","@x_axis []= ","@y2_axis defaults= ","@x2_axis defaults= ","@y_axis defaults= ","@x_axis defaults= "," set_axis_defaults "," axis_setup "," display_setup "]}," Writexlsx Chart add_axis_id":{"type":"method","name":"add_axis_id","children":[],"call":["@axis_ids << "," sprintf ","1 + ","@axis_ids size ","@ sprintf s << ","@ sprintf s size "]}," Writexlsx Chart get_labels_properties":{"type":"method","name":"get_labels_properties","children":[],"call":["labels []= "," value_or_raise ","labels delete ","position empty? ","position nil? ","labels [] ","labels []  empty? ","labels []  nil? "]}," Writexlsx Chart get_trendline_properties":{"type":"method","name":"get_trendline_properties","children":[],"call":["trendline []= "," get_fill_properties ","trendline [] "," get_line_properties "," border "," raise ","types [] "," type "," value_or_raise ","trend get_line_properties  []= "," get_ get_fill_properties _properties ","trend get_line_properties  [] "," get_ get_line_properties _properties "]}," Writexlsx Chart get_marker_properties":{"type":"method","name":"get_marker_properties","children":[],"call":["marker []= "," get_fill_properties ","marker [] "," get_line_properties "," border "," raise ","types [] "," type "," automatic ","marker_type == "," value_or_raise "," get_ get_fill_properties _properties "," get_ get_line_properties _properties ","marker []  == "]}," Writexlsx Chart get_fill_properties":{"type":"method","name":"get_fill_properties","children":[],"call":["fill []= "]}," Writexlsx Chart get_line_properties":{"type":"method","name":"get_line_properties","children":[],"call":["line []= "," raise ","dash_types [] ","line [] "," value_or_raise ","line [] s [] "]}," Writexlsx Chart get_line_weight":{"type":"method","name":"get_line_weight","children":[],"call":["weights [] ","value downcase ","weights [] s [] ","value downcase  downcase "]}," Writexlsx Chart get_line_pattern":{"type":"method","name":"get_line_pattern","children":[],"call":["patterns [] ","patterns has_key ","value downcase ","patterns [] s [] ","patterns [] s has_key ","value downcase  downcase "]}," Writexlsx Chart get_palette_color":{"type":"method","name":"get_palette_color","children":[],"call":[" sprintf ","palette [] "]}," Writexlsx Chart get_color":{"type":"method","name":"get_color","children":[],"call":[" get_palette_color "," raise ","Format  get_color ","color upperca ","color sub ","color =~ ","color upcase "," get_palette_color sub  ","Format  get_color sub  ","color sub  upperca ","color sub  sub ","color sub  =~ ","color sub  upcase "]}," Writexlsx Chart get_data_id":{"type":"method","name":"get_data_id","children":[],"call":["@formula_data []= ","@formula_data [] ","@formula_ids [] ","@formula_ids []= ","@formula_data << ","@formula_data size ","@formula_ids has_key? ! ","@formula_ids has_key? ","formula sub ","@formula sub _data []= ","@formula sub _data [] ","@formula_@formula_ids [] s [] ","@formula_@formula_data size s [] ","@formula sub _ids [] ","@formula_@formula_ids [] s []= ","@formula_@formula_data size s []= ","@formula sub _ids []= ","@formula sub _data << ","@formula sub _data size ","@formula_@formula_ids [] s has_key? ! ","@formula_@formula_data size s has_key? ! ","@formula sub _ids has_key? ! ","@formula_@formula_ids [] s has_key? ","@formula_@formula_data size s has_key? ","@formula sub _ids has_key? ","formula sub  sub "]}," Writexlsx Chart get_data_type":{"type":"method","name":"get_data_type","children":[],"call":["token kind_of? ","data each ","data empty? ","data first kind_of? ","data first ","token is_a? ","data first is_a? "]}," Writexlsx Chart process_names":{"type":"method","name":"process_names","children":[],"call":["name =~ "," quote_sheetname ","name [] "," xl_rowcol_to_cell ","name respond_to? "," xl_rowcol_to_ xl_rowcol_to_cell  "]}," Writexlsx Chart aref_to_formula":{"type":"method","name":"aref_to_formula","children":[],"call":[" xl_range_formula ","data kind_of? "]}," Writexlsx Chart convert_axis_args":{"type":"method","name":"convert_axis_args","children":[],"call":["axis []= ","axis [] downcase [] ","axis [] downcase ","axis [] ","params [] "," get_data_id "," process_names "," convert_font_args ","arg [] ","arg [] [] "," ptrue? ","(or\n  (send\n    (lvar :axis) :[]\n    (sym :_defaults))\n  (hash)) merge "," get_gridline_properties "," get_ get_data_id  "," convert_font_(or\n  (send\n    (lvar :axis) :[]\n    (sym :_defaults))\n  (hash)) merge s ","(or\n  (send\n    (lvar :axis) :[]\n    (sym :_defaults))\n  (hash)) merge  [] ","(or\n  (send\n    (lvar :axis) :[]\n    (sym :_defaults))\n  (hash)) merge  [] [] "]}," Writexlsx Chart set_embedded_config_data":{"type":"method","name":"set_embedded_config_data","children":[],"call":[" default_chartarea_property_for_embedded "]}," Writexlsx Chart set_style":{"type":"method","name":"set_style","children":[],"call":["style_id > ","style_id < "]}," Writexlsx Chart set_chartarea":{"type":"method","name":"set_chartarea","children":[],"call":["area []= ","params [] "," get_line_weight "," get_line_pattern "," get_color_indices ","params empty? "," get_area_properties "," area_properties ","ChartArea  new "," get_line_ get_line_weight  "," get_line_ get_line_pattern  "]}," Writexlsx Chart set_plotarea":{"type":"method","name":"set_plotarea","children":[],"call":["area []= "," get_line_weight ","params [] "," get_line_pattern "," get_color_indices ","area [] ","params empty? "," get_area_properties "," area_properties ","ChartArea  new "," get_line_ get_line_weight  "," get_line_ get_line_pattern  "]}," Writexlsx Chart set_legend":{"type":"method","name":"set_legend","children":[],"call":["params [] "," convert_font_args "," layout_properties "," legend_properties "]}," Writexlsx Chart set_title":{"type":"method","name":"set_title","children":[],"call":[" get_data_id ","params [] "," process_names "," convert_font_args ","@title merge_with_hash "," get_ get_data_id  "]}," Writexlsx Chart set_y_axis":{"type":"method","name":"set_y_axis","children":[],"call":[" convert_axis_args ","(pair\n  (sym :major_gridlines)\n  (hash\n    (pair\n      (sym :visible)\n      (int 1)))) merge ","@y_axis merge_with_hash "," ptrue? ","params [] "," convert_axis_args  merge_with_hash "]}," Writexlsx Chart set_x_axis":{"type":"method","name":"set_x_axis","children":[],"call":[" convert_axis_args ","@x_axis merge_with_hash "," ptrue? ","params [] "," convert_axis_args  merge_with_hash "]}," Writexlsx Chart add_series":{"type":"method","name":"add_series","children":[],"call":["@series << ","params [] "," get_labels_properties "," get_trendline_properties "," get_marker_properties "," get_fill_properties "," get_line_properties "," get_data_id "," process_names "," aref_to_formula "," raise ","params has_key? ! ","params has_key? ","@requires_category != "," labels_properties "," points_properties "," error_bars_properties "," trendline_properties "," marker_properties "," fill_properties "," line_properties ","Series  new "," ptrue? ","@series size == ","@series size "," get_ get_labels_properties _properties "," get_ labels_properties _properties "," get_ get_trendline_properties _properties "," get_ trendline_properties _properties "," get_trend get_line_properties _properties "," get_trend line_properties _properties "," get_ get_marker_properties _properties "," get_ marker_properties _properties "," get_ get_fill_properties _properties "," get_ fill_properties _properties "," get_ get_line_properties _properties "," get_ line_properties _properties ","  get_labels_properties _properties ","  labels_properties _properties ","  points_properties _properties ","  get_trendline_properties _properties ","  trendline_properties _properties "," trend get_line_properties _properties "," trend line_properties _properties ","  get_marker_properties _properties ","  marker_properties _properties ","  get_fill_properties _properties ","  fill_properties _properties ","  get_line_properties _properties ","  line_properties _properties "]}," Writexlsx Chart assemble_xml_file":{"type":"method","name":"assemble_xml_file","children":[],"call":["@writer close ","@writer crlf ","@writer end_tag "," write_print_settings "," write_chart "," write_protection "," write_style "," write_lang "," write_chart_space ","@writer xml_decl ","@embedded != "," write_sp_pr "," write_xml_declaration "]}," Writexlsx Chart set_xml_writer":{"type":"method","name":"set_xml_writer","children":[],"call":["@writer set_xml_writer "]}," Writexlsx Chart initialize":{"type":"method","name":"initialize","children":[],"call":[" set_default_properties ","Package XMLWriterSimple  new ","Axis  new ","Caption  new ","ChartArea  new "]}," Writexlsx Chart factory":{"type":"method","name":"factory","children":[],"call":[]}," Writexlsx Chart Stock modify_series_formatting":{"type":"method","name":"modify_series_formatting","children":[],"call":["array << ","series []= ","index % == ","index % ","series [] == ","series [] ","series [] nil? ","series [] [] == ","series [] [] ","series [] [] nil? ","index % != ","@series each ","series marker= ","series marker == ","series marker ","series marker nil? ","series line= ","series line [] == ","series line [] ","series line ","series line [] nil? ","Marker  new "," ptrue? ","series line_defined? ","@series each_with_index "]}," Writexlsx Chart Stock write_plot_area":{"type":"method","name":"write_plot_area","children":[],"call":["@writer end_tag "," write_val_axis "," write_date_axis "," write_chart_type "," write_layout ","@writer start_tag ","@writer tag_elements "," write_plot_area_base "]}," Writexlsx Chart Stock write_series":{"type":"method","name":"write_series","children":[],"call":[" write_axis_id ","@axis_ids [] "," add_axis_id "," write_marker_value "," write_hi_low_lines "," write_ser ","@series each "]}," Writexlsx Chart Stock write_stock_chart":{"type":"method","name":"write_stock_chart","children":[],"call":["@writer end_tag "," write_series ","@writer start_tag "," modify_series_formatting ","@writer tag_elements "," write_axis_ids "," write_marker_value "," write_hi_low_lines ","params [] == ","params [] ","series each ","series empty? "," get_secondary_axes_series "," get_primary_axes_series "," write_up_down_bars "," ptrue? "," write_drop_lines "," write_ get_secondary_axes_series  "," write_ get_primary_axes_series  "," modify_ get_secondary_axes_series _formatting "," modify_ get_primary_axes_series _formatting "," get_secondary_axes_series  each "," get_primary_axes_series  each "," get_secondary_axes_series  empty? "," get_primary_axes_series  empty? "," get_secondary_axes_ get_secondary_axes_series  "," get_secondary_axes_ get_primary_axes_series  "," get_primary_axes_ get_secondary_axes_series  "," get_primary_axes_ get_primary_axes_series  "]}," Writexlsx Chart Stock write_chart_type":{"type":"method","name":"write_chart_type","children":[],"call":[" write_stock_chart "]}," Writexlsx Chart Stock initialize":{"type":"method","name":"initialize","children":[],"call":[" class "," set_x2_axis "," set_x_axis ","@x2_axis [] []= ","@x2_axis [] ","@x_axis [] []= ","@x_axis [] ","@x2_axis defaults []= ","@x2_axis defaults ","@x_axis defaults []= ","@x_axis defaults ","Chartline  new "]}," Writexlsx Chart Scatter modify_series_formatting":{"type":"method","name":"modify_series_formatting","children":[],"call":["series []= ","series [] [] == ","series [] [] ","series [] ","@series each ","subtype =~ ","subtype == ","series [] ! ","series marker= ","series marker [] == ","series marker [] ","series marker ","series marker ! ","series line= ","series line [] == ","series line [] ","series line "," ptrue? ","Marker  new ","@subtype =~ "," line_properties ","series line_defined? ","@subtype == "]}," Writexlsx Chart Scatter write_c_smooth":{"type":"method","name":"write_c_smooth","children":[],"call":["@writer empty_tag ","subtype =~ "]}," Writexlsx Chart Scatter write_scatter_style":{"type":"method","name":"write_scatter_style","children":[],"call":["@writer empty_tag "]}," Writexlsx Chart Scatter write_y_val":{"type":"method","name":"write_y_val","children":[],"call":["@writer end_tag "," write_num_ref "," write_str_ref ","type == "," get_data_type ","@writer start_tag ","@formula_data [] ","series [] "," write_val_base ","@writer tag_elements ","series val_data_id ","series values "," get_data_type  == "," get_data_ get_data_type  "," get_@formula_data [] _type ","@formula_@formula_data []  [] ","@series [] _data [] ","@series values _data [] ","series val_@formula_data [] _id ","series val_series []  ","series val_series val_data_id  "]}," Writexlsx Chart Scatter write_x_val":{"type":"method","name":"write_x_val","children":[],"call":["@writer end_tag "," write_num_ref "," write_str_ref ","type == "," get_data_type ","@writer start_tag ","@formula_data [] ","series [] "," write_val_base ","@writer tag_elements ","series cat_data_id ","series categories "," get_data_type  == "," get_data_ get_data_type  "," get_@formula_data [] _type ","@formula_@formula_data []  [] ","@series [] _data [] ","@series categories _data [] ","series cat_@formula_data [] _id ","series cat_series []  ","series cat_series cat_data_id  "]}," Writexlsx Chart Scatter write_plot_area":{"type":"method","name":"write_plot_area","children":[],"call":["@writer end_tag "," write_val_axis "," write_cat_val_axis "," write_chart_type "," write_layout ","@writer start_tag ","@writer tag_elements "," write_sp_pr ","@plotarea [] ","@plotarea layout "]}," Writexlsx Chart Scatter write_ser":{"type":"method","name":"write_ser","children":[],"call":["@writer end_tag "," write_c_smooth "," write_y_val "," write_x_val "," write_trendline ","series [] "," write_d_lbls "," write_marker "," write_sp_pr "," write_series_name "," write_order "," write_idx ","@writer start_tag ","@writer tag_elements "," write_error_bars "," write_d_pt ","series [] ! ","@subtype =~ ","series smooth ","series smooth ! ","series error_bars ","series trendline ","series labels ","series points ","series marker "," write_ser_base "]}," Writexlsx Chart Scatter write_scatter_chart":{"type":"method","name":"write_scatter_chart","children":[],"call":["@writer end_tag "," write_series "," write_scatter_style ","@writer start_tag "," modify_series_formatting ","@writer tag_elements "," write_axis_ids "," write_marker_value ","series each ","series empty? "," get_secondary_axes_series "," get_primary_axes_series ","params [] == ","params [] ","(str \"smooth_with_markers\") include? "," write_ get_secondary_axes_series  "," write_ get_primary_axes_series  "," modify_ get_secondary_axes_series _formatting "," modify_ get_primary_axes_series _formatting "," get_secondary_axes_series  each "," get_primary_axes_series  each "," get_secondary_axes_series  empty? "," get_primary_axes_series  empty? "," get_secondary_axes_ get_secondary_axes_series  "," get_secondary_axes_ get_primary_axes_series  "," get_primary_axes_ get_secondary_axes_series  "," get_primary_axes_ get_primary_axes_series  "]}," Writexlsx Chart Scatter write_chart_type":{"type":"method","name":"write_chart_type","children":[],"call":[" write_scatter_chart "]}," Writexlsx Chart Scatter initialize":{"type":"method","name":"initialize","children":[],"call":[" class "]}," Writexlsx Chart Pie write_first_slice_ang":{"type":"method","name":"write_first_slice_ang","children":[],"call":["@writer empty_tag "]}," Writexlsx Chart Pie write_vary_colors":{"type":"method","name":"write_vary_colors","children":[],"call":["@writer empty_tag "]}," Writexlsx Chart Pie write_a_p_pr_legend":{"type":"method","name":"write_a_p_pr_legend","children":[],"call":["@writer end_tag "," write_a_def_rpr ","@writer start_tag ","@writer tag_elements "]}," Writexlsx Chart Pie write_a_p_legend":{"type":"method","name":"write_a_p_legend","children":[],"call":["@writer end_tag "," write_a_end_para_rpr "," write_a_p_pr_legend ","@writer start_tag ","@writer tag_elements "]}," Writexlsx Chart Pie write_tx_pr_legend":{"type":"method","name":"write_tx_pr_legend","children":[],"call":["@writer end_tag "," write_a_p_legend "," write_a_lst_style "," write_a_body_pr ","@writer start_tag ","@writer tag_elements ","font [] "," ptrue? "]}," Writexlsx Chart Pie write_legend":{"type":"method","name":"write_legend","children":[],"call":["@writer end_tag "," write_tx_pr_legend "," write_overlay ","overlay != "," write_layout "," write_legend_pos ","@writer start_tag ","allowed [] ","allowed has_key? ","position == "," positon sub! "," positon ","position =~ ","@writer tag_elements "," write_legend_entry ","delete_series each ","position sub! ","position [] ","allowed include? ","@legend_position sub ","@legend_position =~ ","@legend font "," write_sp_pr ","@legend layout ","@legend position ","@legend position sub ","@legend position =~ ","@legend delete_series ","allowed []  == ","@legend_position sub  == ","@legend position  == ","@legend position sub  == ","allowed []  =~ ","@legend_position sub  =~ ","@legend position  =~ ","@legend position sub  =~ ","allowed []  sub! ","@legend_position sub  sub! ","@legend position  sub! ","@legend position sub  sub! ","allowed []  [] ","@legend_position sub  [] ","@legend position  [] ","@legend position sub  [] ","@legend_allowed []  sub ","@legend_@legend_position sub  sub ","@legend_@legend position  sub ","@legend_@legend position sub  sub ","@legend_allowed []  =~ ","@legend_@legend_position sub  =~ ","@legend_@legend position  =~ ","@legend_@legend position sub  =~ ","@legend allowed []  ","@legend @legend_position sub  ","@legend @legend position  ","@legend @legend position sub  ","@legend allowed []  sub ","@legend @legend_position sub  sub ","@legend @legend position  sub ","@legend @legend position sub  sub ","@legend allowed []  =~ ","@legend @legend_position sub  =~ ","@legend @legend position  =~ ","@legend @legend position sub  =~ "]}," Writexlsx Chart Pie write_series":{"type":"method","name":"write_series","children":[],"call":[" write_ser ","@series each "]}," Writexlsx Chart Pie write_plot_area":{"type":"method","name":"write_plot_area","children":[],"call":["@writer end_tag "," write_chart_type "," write_layout ","@writer start_tag ","@writer tag_elements ","@plotarea [] ","@plotarea layout "," write_sp_pr ","second_chart write_chart_type ","second_chart series_index= ","second_chart writer= ","second_chart id= ","1000 + ","second_chart is_secondary? "]}," Writexlsx Chart Pie write_pie_chart":{"type":"method","name":"write_pie_chart","children":[],"call":["@writer end_tag "," write_first_slice_ang "," write_series "," write_vary_colors ","@writer start_tag ","@writer tag_elements ","@series each "]}," Writexlsx Chart Pie write_chart_type":{"type":"method","name":"write_chart_type","children":[],"call":[" write_pie_chart "]}," Writexlsx Chart Pie initialize":{"type":"method","name":"initialize","children":[],"call":[" class "]}," Writexlsx Chart Line write_line_chart":{"type":"method","name":"write_line_chart","children":[],"call":["@writer end_tag "," write_series "," write_grouping ","@writer start_tag ","@writer tag_elements "," write_axis_ids "," write_marker_value ","series each ","series empty? "," axes_series "," write_up_down_bars "," write_hi_low_lines "," write_drop_lines ","@subtype == "," write_ axes_series  "," axes_series  each "," axes_series  empty? "," axes_ axes_series  "]}," Writexlsx Chart Line write_chart_type":{"type":"method","name":"write_chart_type","children":[],"call":[" write_line_chart "]}," Writexlsx Chart Line initialize":{"type":"method","name":"initialize","children":[],"call":[" class ","Marker  new "," set_y_axis ","@y_axis defaults []= ","@y_axis defaults ","@subtype == "]}," Writexlsx Chart Column write_number_format":{"type":"method","name":"write_number_format","children":[],"call":["@writer empty_tag ","@subtype == "]}," Writexlsx Chart Column write_series":{"type":"method","name":"write_series","children":[],"call":[" write_axis_id ","@axis_ids [] "," add_axis_id "," write_overlap ","@subtype =~ "," write_marker_value "," write_ser ","@series each "," write_series_base "]}," Writexlsx Chart Column write_bar_dir":{"type":"method","name":"write_bar_dir","children":[],"call":["@writer empty_tag "]}," Writexlsx Chart Column write_bar_chart":{"type":"method","name":"write_bar_chart","children":[],"call":["@writer end_tag "," write_series "," write_grouping "," write_bar_dir ","@writer start_tag ","subtype == "]}," Writexlsx Chart Column write_chart_type":{"type":"method","name":"write_chart_type","children":[],"call":[" write_bar_chart "]}," Writexlsx Chart Column initialize":{"type":"method","name":"initialize","children":[],"call":[" class "," set_y_axis ","@y_axis [] []= ","@y_axis [] ","@subtype == ","@y_axis defaults []= ","@y_axis defaults "]}," Writexlsx Chart Bar write_number_format":{"type":"method","name":"write_number_format","children":[],"call":["@writer empty_tag ","@subtype == "]}," Writexlsx Chart Bar write_series":{"type":"method","name":"write_series","children":[],"call":[" write_axis_id ","@axis_ids [] "," add_axis_id "," write_overlap ","@subtype =~ "," write_marker_value "," write_ser ","@series each "," write_series_base "]}," Writexlsx Chart Bar write_bar_dir":{"type":"method","name":"write_bar_dir","children":[],"call":["@writer empty_tag "]}," Writexlsx Chart Bar write_bar_chart":{"type":"method","name":"write_bar_chart","children":[],"call":["@writer end_tag "," write_series "," write_grouping "," write_bar_dir ","@writer start_tag ","subtype == "]}," Writexlsx Chart Bar write_chart_type":{"type":"method","name":"write_chart_type","children":[],"call":[" write_bar_chart ","@y2_axis []= ","@y2_axis [] == ","@y2_axis [] ","@y_axis []= ","@y_axis [] ! ","@y_axis [] ","params [] != ","params [] ","@y2_axis position= ","@y2_axis position == ","@y2_axis position "]}," Writexlsx Chart Bar initialize":{"type":"method","name":"initialize","children":[],"call":[" class "," set_y_axis "," set_x_axis ","@x_axis [] []= ","@x_axis [] ","@subtype == ","@y_axis []= ","@y_axis [] []= ","@y_axis [] ","@x_axis []= ","@x_axis defaults []= ","@x_axis defaults ","@y_axis defaults= ","@y_axis defaults []= ","@y_axis defaults ","@x_axis defaults= "," axis_defaults_set "]}," Writexlsx Chart Area write_area_chart":{"type":"method","name":"write_area_chart","children":[],"call":["@writer end_tag "," write_series "," write_grouping ","@writer start_tag ","@writer tag_elements "," write_axis_ids "," write_marker_value ","series each ","@subtype == ","series empty? "," axes_series "," write_drop_lines "," write_ axes_series  "," axes_series  each "," axes_series  empty? "," axes_ axes_series  "]}," Writexlsx Chart Area write_chart_type":{"type":"method","name":"write_chart_type","children":[],"call":[" write_area_chart "]}," Writexlsx Chart Area initialize":{"type":"method","name":"initialize","children":[],"call":[" class "," set_y_axis ","@y_axis [] []= ","@y_axis [] ","@subtype == ","@y_axis defaults []= ","@y_axis defaults "]}," Writexlsx Worksheet rgb_color":{"type":"method","name":"rgb_color","children":[],"call":["result =~ "," sprintf "," sprintf  =~ "]}," Writexlsx Worksheet set_some_defaults":{"type":"method","name":"set_some_defaults","children":[],"call":["param [] "]}," Writexlsx Worksheet convert_date_time_value_if_required":{"type":"method","name":"convert_date_time_value_if_required","children":[],"call":[" raise "," convert_date_time_value ","param [] == ","param [] "]}," Writexlsx Worksheet error_type":{"type":"method","name":"error_type","children":[],"call":[]}," Writexlsx Worksheet check_maximum_value_when_criteria_is_between_or_notbetween":{"type":"method","name":"check_maximum_value_when_criteria_is_between_or_notbetween","children":[],"call":["param []= "," raise ","param has_key? ","param [] == ","param [] "]}," Writexlsx Worksheet check_valid_citeria_types":{"type":"method","name":"check_valid_citeria_types","children":[],"call":[" raise ","param [] "," valid_criteria_type has_key? ","param [] downcase "," valid_criteria_type "]}," Writexlsx Worksheet check_criteria_required":{"type":"method","name":"check_criteria_required","children":[],"call":[" raise ","param has_key? "]}," Writexlsx Worksheet check_for_valid_input_params":{"type":"method","name":"check_for_valid_input_params","children":[],"call":[" raise "," error_type has_key? ! "," error_type has_key? ","param [] downcase ","param [] "," error_type "," valid_validation_type has_key? "," valid_validation_type ","param has_key? "," valid_validation_parameter include? "," valid_validation_parameter ","param each_key "," check_parameter "]}," Writexlsx Worksheet comments_array":{"type":"method","name":"comments_array","children":[],"call":["@comments sorted_comments "]}," Writexlsx Worksheet comments_assemble_xml_file":{"type":"method","name":"comments_assemble_xml_file","children":[],"call":["@comments assemble_xml_file "]}," Writexlsx Worksheet comments_xml_writer=":{"type":"method","name":"comments_xml_writer=","children":[],"call":["@comments set_xml_writer "]}," Writexlsx Worksheet comments_visible?":{"type":"method","name":"comments_visible?","children":[],"call":["@comments_visible ! ! ","@comments_visible ! "]}," Writexlsx Worksheet set_external_comment_links":{"type":"method","name":"set_external_comment_links","children":[],"call":["@external_comment_links << << ","@external_comment_links << "]}," Writexlsx Worksheet set_vml_data_id":{"type":"method","name":"set_vml_data_id","children":[],"call":["start_data_id + ","(irange\n  (int 1)\n  (begin\n    (send\n      (lvar :count) :/\n      (int 1024)))) each ","count / ","@comments sorted_comments size ","@comments sorted_comments ","(irange\n  (int 1)\n  (begin\n    (send\n      (lvar :@comments sorted_comments size ) :/\n      (int 1024)))) each ","@comments sorted_comments size  / "]}," Writexlsx Worksheet comments_count":{"type":"method","name":"comments_count","children":[],"call":["@comments size "]}," Writexlsx Worksheet PrintStyle orientation?":{"type":"method","name":"orientation?","children":[],"call":["@orientation ! ! ","@orientation ! "]}," Writexlsx Worksheet BlankCellData write_cell":{"type":"method","name":"write_cell","children":[],"call":["worksheet writer empty_tag ","worksheet writer ","@worksheet writer empty_tag "," cell_attributes ","@worksheet writer "]}," Writexlsx Worksheet BlankCellData data":{"type":"method","name":"data","children":[],"call":[]}," Writexlsx Worksheet BlankCellData initialize":{"type":"method","name":"initialize","children":[],"call":[]}," Writexlsx Worksheet HyperlinkCellData write_cell":{"type":"method","name":"write_cell","children":[],"call":["worksheet hlink_refs << "," col "," row "," link_type ","worksheet hlink_refs ","worksheet external_hyper_links << ","worksheet external_hyper_links ","worksheet hlink_count "," link_type == ","worksheet writer end_tag ","worksheet writer ","worksheet write_cell_value "," token ","worksheet writer start_tag ","attributes << << ","attributes << ","@worksheet hlink_refs << ","@worksheet hlink_refs ","@worksheet external_hyper_links << ","@worksheet external_hyper_links ","@worksheet hlink_count ","@worksheet write_cell_value ","@worksheet writer tag_elements ","@worksheet writer "," cell_attributes ","@worksheet rel_count "," cell_attributes  << << "," cell_attributes  << "," cell_ cell_attributes  "]}," Writexlsx Worksheet HyperlinkCellData data":{"type":"method","name":"data","children":[],"call":[" token "]}," Writexlsx Worksheet HyperlinkCellData initialize":{"type":"method","name":"initialize","children":[],"call":[]}," Writexlsx Worksheet FormulaArrayCellData write_cell":{"type":"method","name":"write_cell","children":[],"call":["worksheet writer end_tag ","worksheet writer ","worksheet write_cell_value "," result ","worksheet write_cell_array_formula "," range "," token ","worksheet writer start_tag ","@worksheet write_cell_value ","@worksheet write_cell_array_formula ","@worksheet writer tag_elements "," cell_attributes ","@worksheet writer ","worksheet writer tag_elements "]}," Writexlsx Worksheet FormulaArrayCellData data":{"type":"method","name":"data","children":[],"call":[]}," Writexlsx Worksheet FormulaArrayCellData initialize":{"type":"method","name":"initialize","children":[],"call":[]}," Writexlsx Worksheet FormulaCellData write_cell":{"type":"method","name":"write_cell","children":[],"call":["worksheet writer end_tag ","worksheet writer ","worksheet write_cell_value "," result ","worksheet write_cell_formula "," token ","worksheet writer start_tag ","@worksheet write_cell_value ","@worksheet write_cell_formula ","@worksheet writer tag_elements "," cell_attributes ","@worksheet writer ","attributes << << ","attributes << ","(send\n  (send\n    (ivar :@result) :to_s) :=~\n  (regexp\n    (str \"^([+-]?)(?=\\\\d|\\\\.\\\\d)\\\\d*(\\\\.\\\\d*)?([Ee]([+-]?\\\\d+))?$\")\n    (regopt))) ! ","@result to_s =~ ","@result to_s ","error_code include? ","truefalse [] ","worksheet writer tag_elements "," cell_ cell_attributes  "," cell_attributes  << << "," cell_attributes  << ","(send\n  (send\n    (ivar :truefalse [] ) :to_s) :=~\n  (regexp\n    (str \"^([+-]?)(?=\\\\d|\\\\.\\\\d)\\\\d*(\\\\.\\\\d*)?([Ee]([+-]?\\\\d+))?$\")\n    (regopt))) ! ","truefalse []  to_s =~ ","truefalse []  to_s "]}," Writexlsx Worksheet FormulaCellData data":{"type":"method","name":"data","children":[],"call":[]}," Writexlsx Worksheet FormulaCellData initialize":{"type":"method","name":"initialize","children":[],"call":[]}," Writexlsx Worksheet StringCellData write_cell":{"type":"method","name":"write_cell","children":[],"call":["worksheet writer end_tag ","worksheet writer ","worksheet write_cell_value "," token ","worksheet writer start_tag ","attributes << << ","attributes << ","@worksheet write_cell_value ","@worksheet writer tag_elements ","@worksheet writer "," cell_attributes ","worksheet writer tag_elements "," cell_attributes  << << "," cell_attributes  << "," cell_ cell_attributes  "]}," Writexlsx Worksheet StringCellData data":{"type":"method","name":"data","children":[],"call":[" token "]}," Writexlsx Worksheet StringCellData initialize":{"type":"method","name":"initialize","children":[],"call":[]}," Writexlsx Worksheet NumberCellData write_cell":{"type":"method","name":"write_cell","children":[],"call":["worksheet writer end_tag ","worksheet writer ","worksheet write_cell_value "," token ","worksheet writer start_tag ","@worksheet write_cell_value ","@worksheet writer tag_elements "," cell_attributes ","@worksheet writer ","worksheet writer tag_elements "]}," Writexlsx Worksheet NumberCellData data":{"type":"method","name":"data","children":[],"call":[]}," Writexlsx Worksheet NumberCellData initialize":{"type":"method","name":"initialize","children":[],"call":[]}," Writexlsx Worksheet CellData write_cell":{"type":"method","name":"write_cell","children":[],"call":["attributes << << ","col_xf get_xf_index ","attributes << ","worksheet col_formats [] "," col ","worksheet col_formats ","row_xf get_xf_index ","worksheet set_rows [] [] ","worksheet set_rows [] "," row ","worksheet set_rows ","xf_index != "," xl_rowcol_to_cell "," xf get_xf_index "," xf "," xf respond_to? ","worksheet col_formats []  get_xf_index ","col_xf get_ xf get_xf_index  ","worksheet set_rows [] []  get_xf_index ","row_xf get_ xf get_xf_index  "," xf get_xf_index  != "," xf get_ xf get_xf_index  "]}," Writexlsx Workbook shared_strings_empty?":{"type":"method","name":"shared_strings_empty?","children":[],"call":["@shared_strings empty? "]}," Writexlsx Workbook str_unique":{"type":"method","name":"str_unique","children":[],"call":["@shared_strings unique_count "]}," Writexlsx Utility underline_attributes":{"type":"method","name":"underline_attributes","children":[],"call":["underline == "]}," Writexlsx Utility substitute_cellref":{"type":"method","name":"substitute_cellref","children":[],"call":[" raise "," xl_cell_to_rowcol ","2 + ","ROW_MAX  to_s ","1 + ","cell upcase! ","cell respond_to? ","cell upcase "," Regexp  last_match "," Regexp  last_match + "]}," Writexlsx Package Vml write_column":{"type":"method","name":"write_column","children":[],"call":["@writer data_element "]}," Writexlsx Package Vml write_row":{"type":"method","name":"write_row","children":[],"call":["@writer data_element "]}," Writexlsx Package Vml write_auto_fill":{"type":"method","name":"write_auto_fill","children":[],"call":["@writer data_element "]}," Writexlsx Package Vml write_anchor":{"type":"method","name":"write_anchor","children":[],"call":["@writer data_element ","(lvar :col_start) join ","@writer (lvar :col_start) join _element "]}," Writexlsx Package Vml write_visible":{"type":"method","name":"write_visible","children":[],"call":["@writer empty_tag "]}," Writexlsx Package Vml write_size_with_cells":{"type":"method","name":"write_size_with_cells","children":[],"call":["@writer empty_tag "]}," Writexlsx Package Vml write_move_with_cells":{"type":"method","name":"write_move_with_cells","children":[],"call":["@writer empty_tag "]}," Writexlsx Package Vml write_client_data":{"type":"method","name":"write_client_data","children":[],"call":["@writer end_tag "," write_visible ","comment visible nil? ! ","comment visible nil? ","comment visible ","comment visible != "," write_column ","comment col "," write_row ","comment row "," write_auto_fill "," write_anchor ","comment vertices "," write_size_with_cells "," write_move_with_cells ","@writer start_tag ","@writer tag_elements "]}," Writexlsx Package Vml write_div":{"type":"method","name":"write_div","children":[],"call":["@writer end_tag ","@writer start_tag ","@writer tag_elements "," write_font "]}," Writexlsx Package Vml write_textbox":{"type":"method","name":"write_textbox","children":[],"call":["@writer end_tag "," write_div ","@writer start_tag ","@writer tag_elements "]}," Writexlsx Package Vml write_shadow":{"type":"method","name":"write_shadow","children":[],"call":["@writer empty_tag "]}," Writexlsx Package Vml write_fill":{"type":"method","name":"write_fill","children":[],"call":["@writer empty_tag "]}," Writexlsx Package Vml float_to_str":{"type":"method","name":"float_to_str","children":[],"call":["float to_s ","float to_i to_s ","float to_i ","float == "]}," Writexlsx Package Vml write_shape":{"type":"method","name":"write_shape","children":[],"call":["@writer end_tag "," write_client_data "," write_textbox "," write_path "," write_shadow "," write_fill ","@writer start_tag ","comment color ","position:absolute; + + + + + + + + + + + + + + + + + ","position:absolute; + + + + + + + + + + + + + + + + ","position:absolute; + + + + + + + + + + + + + + + ","position:absolute; + + + + + + + + + + + + + + ","position:absolute; + + + + + + + + + + + + + ","position:absolute; + + + + + + + + + + + + ","position:absolute; + + + + + + + + + + + ","position:absolute; + + + + + + + + + + ","position:absolute; + + + + + + + + + ","position:absolute; + + + + + + + + ","position:absolute; + + + + + + + ","position:absolute; + + + + + + ","position:absolute; + + + + + ","position:absolute; + + + + ","position:absolute; + + + ","position:absolute; + + ","position:absolute; + "," float_to_str ","comment visible nil? ! ","comment visible nil? ","comment visible ","comment visible != "," pixels_to_points ","comment vertices ","_x0000_s + ","id to_s ","@writer tag_elements ","_x0000_s +  to_s "]}," Writexlsx Package Vml write_path":{"type":"method","name":"write_path","children":[],"call":["@writer empty_tag ","attributes << << ","attributes << "]}," Writexlsx Package Vml write_stroke":{"type":"method","name":"write_stroke","children":[],"call":["@writer empty_tag "]}," Writexlsx Package Vml write_shapetype":{"type":"method","name":"write_shapetype","children":[],"call":["@writer end_tag "," write_path "," write_stroke ","@writer start_tag ","@writer tag_elements "]}," Writexlsx Package Vml write_idmap":{"type":"method","name":"write_idmap","children":[],"call":["@writer empty_tag "]}," Writexlsx Package Vml write_shapelayout":{"type":"method","name":"write_shapelayout","children":[],"call":["@writer end_tag "," write_idmap ","@writer start_tag ","@writer tag_elements "]}," Writexlsx Package Vml write_xml_namespace":{"type":"method","name":"write_xml_namespace","children":[],"call":["@writer start_tag ","schema + ","@writer tag_elements "," xml_attributes "]}," Writexlsx Package Vml pixels_to_points":{"type":"method","name":"pixels_to_points","children":[],"call":["vertices flatten "]}," Writexlsx Package Vml assemble_xml_file":{"type":"method","name":"assemble_xml_file","children":[],"call":["@writer close ","@writer crlf ","@writer end_tag "," write_shape ","worksheet comments_array each ","worksheet comments_array ","worksheet vml_shape_id "," write_shapetype "," write_shapelayout ","worksheet vml_data_id "," write_xml_namespace "," write_comment_shape "," write_comment_shapetype ","worksheet comments_array empty? "," write_button_shape ","worksheet buttons_data each ","worksheet buttons_data "," write_button_shapetype ","worksheet buttons_data empty? ","comment write_shape ","button write_shape "," write_shape_type_and_shape ","worksheet sorted_comments ","worksheet sorted_comments empty? "," write_image_shape ","header_images_data each "," write_image_shapetype ","header_images_data empty? ","comments_data empty? ","buttons_data empty? ","worksheet worksheet vml_shape_id  "]}," Writexlsx Package Vml set_xml_writer":{"type":"method","name":"set_xml_writer","children":[],"call":["@writer set_xml_writer "]}," Writexlsx Package Vml initialize":{"type":"method","name":"initialize","children":[],"call":["Package XMLWriterSimple  new "]}," Writexlsx Package SharedStrings unique_count":{"type":"method","name":"unique_count","children":[],"call":["@strings size "]}," Writexlsx Package SharedStrings total_count":{"type":"method","name":"total_count","children":[],"call":["@count values inject ","@count values "]}," Writexlsx Package SharedStrings empty?":{"type":"method","name":"empty?","children":[],"call":["@strings empty? "]}," Writexlsx Package SharedStrings string":{"type":"method","name":"string","children":[],"call":["@strings [] dup ","@strings [] "]}," Writexlsx Package SharedStrings add":{"type":"method","name":"add","children":[],"call":["@count []= ","@strings << ","@count [] ","string dup ","@strings_index []= ","@strings size - ","@strings size ","string dup freeze ","@strings_index [] ","string freeze ","string frozen? ","@string dup ings << ","@string dup freeze ings << ","@string freeze ings << ","string dup ing dup ","string dup freeze ing dup ","string freeze ing dup ","@string dup ings_index []= ","@string dup freeze ings_index []= ","@string freeze ings_index []= ","@string dup ings size - ","@string dup freeze ings size - ","@string freeze ings size - ","@string dup ings size ","@string dup freeze ings size ","@string freeze ings size ","string dup ing dup freeze ","string dup freeze ing dup freeze ","string freeze ing dup freeze ","@string dup ings_index [] ","@string dup freeze ings_index [] ","@string freeze ings_index [] ","string dup ing freeze ","string dup freeze ing freeze ","string freeze ing freeze ","string dup ing frozen? ","string dup freeze ing frozen? ","string freeze ing frozen? "]}," Writexlsx Package SharedStrings index":{"type":"method","name":"index","children":[],"call":["@strings index "," add ","params [] ","@strings_index [] "]}," Writexlsx Package Comments comments_visible?":{"type":"method","name":"comments_visible?","children":[],"call":["@worksheet comments_visible? "]}," Writexlsx Package Comments has_comment_in_row?":{"type":"method","name":"has_comment_in_row?","children":[],"call":["@comments [] ! ! ","@comments [] ! ","@comments [] "]}," Writexlsx Package Comments sorted_comments":{"type":"method","name":"sorted_comments","children":[],"call":["@sorted_comments << ","@comments [] [] ","@comments [] ","@comments [] [] author ","@comments [] [] visible "," comments_visible? ","@comments [] keys sort each ","@comments [] keys sort ","@comments [] keys ","@comments keys sort each ","@comments keys sort ","@comments keys ","@worksheet comments_author ","@comments [] []= ","Comment  new ","@sorted_Comment  new s << ","@Comment  new s [] [] ","@Comment  new s [] ","@Comment  new s [] [] author ","@Comment  new s [] [] visible "," Comment  new s_visible? ","@Comment  new s [] keys sort each ","@Comment  new s [] keys sort ","@Comment  new s [] keys ","@Comment  new s keys sort each ","@Comment  new s keys sort ","@Comment  new s keys ","@worksheet Comment  new s_author ","@Comment  new s [] []= "]}," Writexlsx Package Comments size":{"type":"method","name":"size","children":[],"call":[" sorted_comments size "," sorted_comments "]}," Writexlsx Package Comments empty?":{"type":"method","name":"empty?","children":[],"call":["@comments empty? "]}," Writexlsx Package Comments add":{"type":"method","name":"add","children":[],"call":["@comments [] []= ","comment col ","@comments [] ","comment row ","@comments []= "]}," Writexlsx Package Comment default_y_offset":{"type":"method","name":"default_y_offset","children":[],"call":["ROW_MAX  - "]}," Writexlsx Package Comment default_x_offset":{"type":"method","name":"default_x_offset","children":[],"call":["COL_MAX  - "]}," Writexlsx Package Comment default_start_col":{"type":"method","name":"default_start_col","children":[],"call":["col + ","COL_MAX  - "]}," Writexlsx Package Comment default_start_row":{"type":"method","name":"default_start_row","children":[],"call":["row - ","ROW_MAX  - "]}," Writexlsx Package Comment rgb_color":{"type":"method","name":"rgb_color","children":[],"call":["result =~ "," sprintf "," Regexp  last_match "," sprintf  =~ "]}," Writexlsx Package Comment backgrount_color":{"type":"method","name":"backgrount_color","children":[],"call":[" rgb_color ","@workbook palette [] ","color_id - ","@workbook palette ","color_id == ","Format  get_color ","Format  color ","color_id to_s ","color_id to_s =~ "," @workbook palette [] _color ","Format  get_color  - ","Format  color  - ","Format  get_color  == ","Format  color  == ","Format  get_color  to_s ","Format  color  to_s ","Format  get_color  to_s =~ ","Format  color  to_s =~ "]}," Writexlsx Package Comment initialize":{"type":"method","name":"initialize","children":[],"call":["@worksheet position_object_pixels << ","@worksheet position_object_pixels ","(send\n  (float 0.5) :+\n  (send\n    (begin\n      (or\n        (send\n          (lvar :options) :[]\n          (sym :height))\n        (const nil :DEFAULT_HEIGHT))) :*\n    (ivar :@y_scale))) to_i ","0.5 + ","(or\n  (send\n    (lvar :options) :[]\n    (sym :height))\n  (const nil :DEFAULT_HEIGHT)) * ","options [] ","(send\n  (float 0.5) :+\n  (send\n    (begin\n      (or\n        (send\n          (lvar :options) :[]\n          (sym :width))\n        (const nil :DEFAULT_WIDTH))) :*\n    (ivar :@x_scale))) to_i ","(or\n  (send\n    (lvar :options) :[]\n    (sym :width))\n  (const nil :DEFAULT_WIDTH)) * "," default_y_offset "," default_x_offset "," default_start_col "," default_start_row "," substitute_cellref "," backgrount_color ","string [] "," options_parse ","(send\n  (float 0.5) :+\n  (begin\n    (send\n      (begin\n        (or\n          (send\n            (lvar :options) :[]\n            (sym :height))\n          (const nil :DEFAULT_HEIGHT))) :*\n      (ivar :@y_scale)))) to_i ","(send\n  (float 0.5) :+\n  (begin\n    (send\n      (begin\n        (or\n          (send\n            (lvar :options) :[]\n            (sym :width))\n          (const nil :DEFAULT_WIDTH))) :*\n      (ivar :@x_scale)))) to_i "]}," Writexlsx Format get_alignment_key":{"type":"method","name":"get_alignment_key","children":[],"call":["(ivar :@text_h_align) join "]}," Writexlsx Worksheet CellData cell_attributes":{"type":"method","name":"cell_attributes","children":[],"call":["attributes << << ","col_xf get_xf_index ","attributes << ","@worksheet col_formats [] "," col ","@worksheet col_formats ","row_xf get_xf_index ","@worksheet set_rows [] [] ","@worksheet set_rows [] "," row ","@worksheet set_rows ","xf_index != "," xl_rowcol_to_cell "," xf get_xf_index "," xf ","worksheet col_formats [] ","worksheet col_formats ","worksheet set_rows [] [] ","worksheet set_rows [] ","worksheet set_rows ","worksheet col_info [] format ","worksheet col_info [] ","worksheet col_info ","@worksheet col_formats []  get_xf_index ","worksheet col_formats []  get_xf_index ","worksheet col_info [] format  get_xf_index ","col_xf get_ xf get_xf_index  ","@worksheet set_rows [] []  get_xf_index ","worksheet set_rows [] []  get_xf_index ","row_xf get_ xf get_xf_index  "," xf get_xf_index  != "," xf get_ xf get_xf_index  "]}," Writexlsx Package XMLWriterSimple tag_elements":{"type":"method","name":"tag_elements","children":[],"call":[" end_tag "," start_tag "]}," Writexlsx Package Styles write_format_elements":{"type":"method","name":"write_format_elements","children":[],"call":["@writer tag_elements "]}," Writexlsx Package Packager write_chart_or_drawing_files":{"type":"method","name":"write_chart_or_drawing_files","children":[],"call":["object assemble_xml_file ","object set_xml_writer ","objects each ","FileUtils  mkdir_p ","objects empty? ","index + ","objects each_with_index "]}," Writexlsx Package Core write_base":{"type":"method","name":"write_base","children":[],"call":["@writer data_element ","@properties [] "]}," Writexlsx Format has_dxf_fill?":{"type":"method","name":"has_dxf_fill?","children":[],"call":[]}," Writexlsx Format has_dxf_fill":{"type":"method","name":"has_dxf_fill","children":[],"call":[]}," Writexlsx Format has_fill?":{"type":"method","name":"has_fill?","children":[],"call":[]}," Writexlsx Format has_fill":{"type":"method","name":"has_fill","children":[],"call":[]}," Writexlsx Format has_dxf_font?":{"type":"method","name":"has_dxf_font?","children":[],"call":[]}," Writexlsx Format has_dxf_font":{"type":"method","name":"has_dxf_font","children":[],"call":[]}," Writexlsx Format has_font?":{"type":"method","name":"has_font?","children":[],"call":[]}," Writexlsx Format has_font":{"type":"method","name":"has_font","children":[],"call":[]}," Writexlsx Format has_dxf_border?":{"type":"method","name":"has_dxf_border?","children":[],"call":[]}," Writexlsx Format has_dxf_border":{"type":"method","name":"has_dxf_border","children":[],"call":[]}," Writexlsx Format has_border?":{"type":"method","name":"has_border?","children":[],"call":[]}," Writexlsx Format has_border":{"type":"method","name":"has_border","children":[],"call":[]}," Writexlsx Format bool_both_ruby_and_perl?":{"type":"method","name":"bool_both_ruby_and_perl?","children":[],"call":["val == "]}," Writexlsx Chart nil_or_max?":{"type":"method","name":"nil_or_max?","children":[],"call":["val == ","val nil? "]}," Writexlsx Chart write_pts":{"type":"method","name":"write_pts","children":[],"call":[" write_pt ","data [] ","data each_index "]}," Writexlsx Chart write_val_axis_common":{"type":"method","name":"write_val_axis_common","children":[],"call":[" write_c_minor_unit ","params [] "," write_c_major_unit "," write_cross_between "," write_c_crosses_at "," write_crosses "," nil_or_max? "," write_cross_axis "," write_tick_label_pos "," write_number_format "," write_title_rich ","params [] [] "," write_title_formula ","@y_axis [] "," write_major_gridlines "," write_axis_pos "," write_scaling "," write_axis_id ","@writer tag_elements "," write_crossing "," write_scaling_with_param "," write_params [] [] _rich "," write_params [] [] _formula "]}," Writexlsx Chart write_val_base":{"type":"method","name":"write_val_base","children":[],"call":[" write_num_ref "," write_str_ref ","type == "," get_data_type ","@writer tag_elements ","@formula_data [] "," get_data_type  == "," get_data_ get_data_type  "," get_@formula_data [] _type ","@formula_@formula_data []  [] "]}," Writexlsx Chart write_series_base":{"type":"method","name":"write_series_base","children":[],"call":[" write_axis_id ","@axis_ids [] "," add_axis_id "," write_marker_value "," write_ser ","@series each "]}," Writexlsx Chart write_bar_chart":{"type":"method","name":"write_bar_chart","children":[],"call":[" write_series "," write_grouping "," write_bar_dir ","@writer tag_elements ","subtype == "," write_axis_ids "," write_overlap ","@subtype =~ "," write_marker_value "," write_ser ","series each ","series empty? "," get_secondary_axes_series "," get_primary_axes_series "," ptrue? ","params [] "," write_gap_width ","@series_overlap_1 ! "," write_ get_secondary_axes_series  "," write_ get_primary_axes_series  "," get_secondary_axes_series  each "," get_primary_axes_series  each "," get_secondary_axes_series  empty? "," get_primary_axes_series  empty? "," get_secondary_axes_ get_secondary_axes_series  "," get_secondary_axes_ get_primary_axes_series  "," get_primary_axes_ get_secondary_axes_series  "," get_primary_axes_ get_primary_axes_series  ","@ get_secondary_axes_series _overlap_1 ! ","@ get_primary_axes_series _overlap_1 ! "]}," Writexlsx Worksheet outline_changed?":{"type":"method","name":"outline_changed?","children":[],"call":[" ptrue? "]}," Writexlsx Worksheet calc_spans":{"type":"method","name":"calc_spans","children":[],"call":["col_num > ","col_num < ","span_min ! ","data [] [] ","data [] ","(irange\n  (ivar :@dim_colmin)\n  (ivar :@dim_colmax)) each "]}," Writexlsx Worksheet write_cfvo":{"type":"method","name":"write_cfvo","children":[],"call":["@writer empty_tag "]}," Writexlsx Worksheet write_data_bar":{"type":"method","name":"write_data_bar","children":[],"call":[" write_color ","param [] "," write_cfvo ","@writer tag_elements "]}," Writexlsx Worksheet write_color_scale":{"type":"method","name":"write_color_scale","children":[],"call":[" write_color ","param [] "," write_cfvo ","@writer tag_elements "]}," Writexlsx Worksheet write_table_part":{"type":"method","name":"write_table_part","children":[],"call":["@writer empty_tag "," r_id_attributes "]}," Writexlsx Worksheet write_table_parts":{"type":"method","name":"write_table_parts","children":[],"call":[" write_table_part ","@tables each ","@writer tag_elements ","@tables size ","@tables empty? "," increment_rel_id_and_write_r_id "," tables_count times "," tables_count "]}," Writexlsx Worksheet write_outline_pr":{"type":"method","name":"write_outline_pr","children":[],"call":["@writer empty_tag ","attributes << << ","attributes << ","@outline_on == ","@outline_right == ","@outline_below == ","@outline_style != "," outline_changed? "]}," Writexlsx Worksheet write_some_elements":{"type":"method","name":"write_some_elements","children":[],"call":["@writer tag_elements ","container size ","container empty? "]}," Writexlsx Worksheet validate_shape":{"type":"method","name":"validate_shape","children":[],"call":[" raise ","shape [] ","(str \"t\") include? ","(str \"l\") include? "]}," Writexlsx Worksheet auto_locate_connectors":{"type":"method","name":"auto_locate_connectors","children":[],"call":["shape []= ","shape [] empty? ","shape [] ","smidx > ","smidy < ","smidy > ","smidx < ","(lvar :smidy) min ","(send\n  (send\n    (lvar :sls) :[]\n    (sym :x_offset)) :+\n  (send\n    (lvar :sls) :[]\n    (sym :width))) min ","els [] ","sls [] + ","sls [] ","(send\n  (lvar :emidy) :-\n  (lvar :smidy)) to_i abs ","(send\n  (lvar :emidy) :-\n  (lvar :smidy)) to_i ","emidy - ","(send\n  (send\n    (lvar :els) :[]\n    (sym :x_offset)) :-\n  (begin\n    (send\n      (send\n        (lvar :sls) :[]\n        (sym :x_offset)) :+\n      (send\n        (lvar :sls) :[]\n        (sym :width))))) to_i abs ","(send\n  (send\n    (lvar :els) :[]\n    (sym :x_offset)) :-\n  (begin\n    (send\n      (send\n        (lvar :sls) :[]\n        (sym :x_offset)) :+\n      (send\n        (lvar :sls) :[]\n        (sym :width))))) to_i ","els [] - ","connect_type == ","sy > ","(send\n  (send\n    (lvar :sls) :[]\n    (sym :y_offset)) :+\n  (send\n    (lvar :sls) :[]\n    (sym :height))) min to_i ","(send\n  (send\n    (lvar :sls) :[]\n    (sym :y_offset)) :+\n  (send\n    (lvar :sls) :[]\n    (sym :height))) min ","(send\n  (send\n    (lvar :els) :[]\n    (sym :y_offset)) :-\n  (begin\n    (send\n      (send\n        (lvar :sls) :[]\n        (sym :y_offset)) :+\n      (send\n        (lvar :sls) :[]\n        (sym :height))))) to_i abs ","(send\n  (send\n    (lvar :els) :[]\n    (sym :y_offset)) :-\n  (begin\n    (send\n      (send\n        (lvar :sls) :[]\n        (sym :y_offset)) :+\n      (send\n        (lvar :sls) :[]\n        (sym :height))))) to_i ","(lvar :smidx) min to_i ","(lvar :smidx) min ","(send\n  (lvar :emidx) :-\n  (lvar :smidx)) to_i abs ","(send\n  (lvar :emidx) :-\n  (lvar :smidx)) to_i ","emidx - ","(send\n  (lvar :smidy) :-\n  (lvar :emidy)) abs ","smidy - ","(send\n  (lvar :smidx) :-\n  (lvar :emidx)) abs ","smidx - ","els [] + ","els [] / ","sls [] / ","shape [] + ","@shapes fetch ","Hash  new ","@shape_hash [] ","shape [] == ","connector_shapes [] ","shape [] chop to_sym ","shape [] chop ","sls [] +  > ","sls [] +  < ","(lvar :sls [] + ) min ","(send\n  (send\n    (lvar :sls) :[]\n    (sls [] + m :x_offset)) :+\n  (send\n    (lvar :sls) :[]\n    (sls [] + m :width))) min ","(send\n  (send\n    (lvar :@shapes fetch ) :[]\n    (sym :x_offset)) :+\n  (send\n    (lvar :@shapes fetch ) :[]\n    (sym :width))) min ","@shapes fetch  [] ","@shapes fetch  [] + ","(send\n  (lvar :els [] + ) :-\n  (lvar :smidy)) to_i abs ","(send\n  (lvar :emidy) :-\n  (lvar :sls [] + )) to_i abs ","(send\n  (lvar :els [] + ) :-\n  (lvar :smidy)) to_i ","(send\n  (lvar :emidy) :-\n  (lvar :sls [] + )) to_i ","els [] +  - ","(send\n  (send\n    (lvar :els) :[]\n    (sls [] + m :x_offset)) :-\n  (begin\n    (send\n      (send\n        (lvar :sls) :[]\n        (sls [] + m :x_offset)) :+\n      (send\n        (lvar :sls) :[]\n        (sls [] + m :width))))) to_i abs ","(send\n  (send\n    (lvar :@shapes fetch ) :[]\n    (sym :x_offset)) :-\n  (begin\n    (send\n      (send\n        (lvar :sls) :[]\n        (sym :x_offset)) :+\n      (send\n        (lvar :sls) :[]\n        (sym :width))))) to_i abs ","(send\n  (send\n    (lvar :els) :[]\n    (sym :x_offset)) :-\n  (begin\n    (send\n      (send\n        (lvar :@shapes fetch ) :[]\n        (sym :x_offset)) :+\n      (send\n        (lvar :@shapes fetch ) :[]\n        (sym :width))))) to_i abs ","(send\n  (send\n    (lvar :els) :[]\n    (sls [] + m :x_offset)) :-\n  (begin\n    (send\n      (send\n        (lvar :sls) :[]\n        (sls [] + m :x_offset)) :+\n      (send\n        (lvar :sls) :[]\n        (sls [] + m :width))))) to_i ","(send\n  (send\n    (lvar :@shapes fetch ) :[]\n    (sym :x_offset)) :-\n  (begin\n    (send\n      (send\n        (lvar :sls) :[]\n        (sym :x_offset)) :+\n      (send\n        (lvar :sls) :[]\n        (sym :width))))) to_i ","(send\n  (send\n    (lvar :els) :[]\n    (sym :x_offset)) :-\n  (begin\n    (send\n      (send\n        (lvar :@shapes fetch ) :[]\n        (sym :x_offset)) :+\n      (send\n        (lvar :@shapes fetch ) :[]\n        (sym :width))))) to_i ","@shapes fetch  [] - ","shape [] +  == ","(send\n  (send\n    (lvar :sls) :[]\n    (sls [] + m :y_offset)) :+\n  (send\n    (lvar :sls) :[]\n    (sls [] + m :height))) min to_i ","(send\n  (send\n    (lvar :@shapes fetch ) :[]\n    (sym :y_offset)) :+\n  (send\n    (lvar :@shapes fetch ) :[]\n    (sym :height))) min to_i ","(send\n  (send\n    (lvar :sls) :[]\n    (sls [] + m :y_offset)) :+\n  (send\n    (lvar :sls) :[]\n    (sls [] + m :height))) min ","(send\n  (send\n    (lvar :@shapes fetch ) :[]\n    (sym :y_offset)) :+\n  (send\n    (lvar :@shapes fetch ) :[]\n    (sym :height))) min ","(send\n  (send\n    (lvar :els) :[]\n    (sls [] + m :y_offset)) :-\n  (begin\n    (send\n      (send\n        (lvar :sls) :[]\n        (sls [] + m :y_offset)) :+\n      (send\n        (lvar :sls) :[]\n        (sls [] + m :height))))) to_i abs ","(send\n  (send\n    (lvar :@shapes fetch ) :[]\n    (sym :y_offset)) :-\n  (begin\n    (send\n      (send\n        (lvar :sls) :[]\n        (sym :y_offset)) :+\n      (send\n        (lvar :sls) :[]\n        (sym :height))))) to_i abs ","(send\n  (send\n    (lvar :els) :[]\n    (sym :y_offset)) :-\n  (begin\n    (send\n      (send\n        (lvar :@shapes fetch ) :[]\n        (sym :y_offset)) :+\n      (send\n        (lvar :@shapes fetch ) :[]\n        (sym :height))))) to_i abs ","(send\n  (send\n    (lvar :els) :[]\n    (sls [] + m :y_offset)) :-\n  (begin\n    (send\n      (send\n        (lvar :sls) :[]\n        (sls [] + m :y_offset)) :+\n      (send\n        (lvar :sls) :[]\n        (sls [] + m :height))))) to_i ","(send\n  (send\n    (lvar :@shapes fetch ) :[]\n    (sym :y_offset)) :-\n  (begin\n    (send\n      (send\n        (lvar :sls) :[]\n        (sym :y_offset)) :+\n      (send\n        (lvar :sls) :[]\n        (sym :height))))) to_i ","(send\n  (send\n    (lvar :els) :[]\n    (sym :y_offset)) :-\n  (begin\n    (send\n      (send\n        (lvar :@shapes fetch ) :[]\n        (sym :y_offset)) :+\n      (send\n        (lvar :@shapes fetch ) :[]\n        (sym :height))))) to_i ","(lvar :sls [] + ) min to_i ","(send\n  (lvar :els [] + ) :-\n  (lvar :smidx)) to_i abs ","(send\n  (lvar :emidx) :-\n  (lvar :sls [] + )) to_i abs ","(send\n  (lvar :els [] + ) :-\n  (lvar :smidx)) to_i ","(send\n  (lvar :emidx) :-\n  (lvar :sls [] + )) to_i ","(send\n  (lvar :smidy) :-\n  (lvar :els [] + )) abs ","(send\n  (lvar :sls [] + ) :-\n  (lvar :emidy)) abs ","sls [] +  - ","(send\n  (lvar :smidx) :-\n  (lvar :els [] + )) abs ","(send\n  (lvar :sls [] + ) :-\n  (lvar :emidx)) abs ","@shapes fetch  [] / ","shape [] chop to_sls [] + m "]}," Writexlsx Worksheet prepare_shape":{"type":"method","name":"prepare_shape","children":[],"call":[" drawing add_drawing_object ","shape [] "," drawing "," position_shape_emus "," validate_shape ","@external_drawing_links << ","@drawing embedded= ","Drawing  new "," drawing? ","@shapes [] ","shape name ","shape dimensions ","shape calc_position_emus ","shape validate "," drawings add_drawing_object "," drawings ","shape anchor ","shape height_emu ","shape width_emu ","@drawings embedded= ","Drawings  new "," drawings? "," drawing_rel_index "," Drawing  new  add_Drawing  new _object ","@shapes []  [] "," Drawing  new  "," position_@shapes [] _emus "," validate_@shapes []  ","@external_Drawing  new _links << ","Drawing  new  embedded= ","@Drawing  new  embedded= "," Drawing  new ? ","@@shapes [] s [] ","@shapes []  name ","@shapes []  dimensions ","@shapes []  calc_position_emus ","@shapes []  validate "," Drawing  new s add_Drawing  new _object "," Drawing  new s ","@shapes []  anchor ","@shapes []  height_emu ","@shapes []  width_emu ","Drawing  new s embedded= ","@Drawing  new s embedded= ","Drawings  new  embedded= "," Drawing  new s? "," Drawing  new _rel_index "]}," Writexlsx Worksheet insert_shape":{"type":"method","name":"insert_shape","children":[],"call":["@shapes << "," auto_locate_connectors ","shape dup "," ptrue? ","shape [] ","shape []= ","@workbook palette ","@shape_hash []= ","@shapes size ","id != ","used ! ","@shape_hash [] "," raise ","(lvar :row_start) include? "," row_col_notation ","insert auto_locate_connectors ","shape stencil ","shape element= ","shape id ","shape id= ","shape set_position ","_shape dup ","_shape stencil ","_shape element= ","_shape id ","_shape id= ","_shape set_position ","(lvar :_row_start) include? ","@shape_hash []  ! ","shape dup  auto_locate_connectors ","_shape dup  auto_locate_connectors "]}," Writexlsx Worksheet position_shape_emus":{"type":"method","name":"position_shape_emus","children":[],"call":["shape []= ","(send\n  (lvar :y_abs) :*\n  (int 9525)) to_i ","y_abs * ","(send\n  (lvar :x_abs) :*\n  (int 9525)) to_i ","x_abs * ","(send\n  (lvar :y2) :*\n  (int 9525)) to_i ","y2 * ","(send\n  (lvar :x2) :*\n  (int 9525)) to_i ","x2 * ","(send\n  (lvar :y1) :*\n  (int 9525)) to_i ","y1 * ","(send\n  (lvar :x1) :*\n  (int 9525)) to_i ","x1 * ","row_end to_i ","col_end to_i ","row_start to_i ","col_start to_i ","(send\n  (send\n    (lvar :shape) :[]\n    (sym :height)) :*\n  (int 9525)) abs to_i ","(send\n  (send\n    (lvar :shape) :[]\n    (sym :height)) :*\n  (int 9525)) abs ","shape [] * ","shape [] ","(send\n  (send\n    (lvar :shape) :[]\n    (sym :width)) :*\n  (int 9525)) abs to_i ","(send\n  (send\n    (lvar :shape) :[]\n    (sym :width)) :*\n  (int 9525)) abs "," position_object_pixels "]}," Writexlsx Worksheet valid_criteria_type_for_conditional_formatting":{"type":"method","name":"valid_criteria_type_for_conditional_formatting","children":[],"call":[]}," Writexlsx Worksheet valid_type_for_conditional_formatting":{"type":"method","name":"valid_type_for_conditional_formatting","children":[],"call":[]}," Writexlsx Worksheet valid_parameter_for_conditional_formatting":{"type":"method","name":"valid_parameter_for_conditional_formatting","children":[],"call":[]}," Writexlsx Worksheet convert_date_time_if_required":{"type":"method","name":"convert_date_time_if_required","children":[],"call":[" raise "," convert_date_time ","val =~ "," convert_ convert_date_time  "]}," Writexlsx Worksheet table_function_to_formula":{"type":"method","name":"table_function_to_formula","children":[],"call":[" raise ","subtotals [] ","function to_sym "]}," Writexlsx Worksheet set_external_vml_links":{"type":"method","name":"set_external_vml_links","children":[],"call":["@external_vml_links << "]}," Writexlsx Worksheet valid_table_parameter":{"type":"method","name":"valid_table_parameter","children":[],"call":[]}," Writexlsx Worksheet add_table":{"type":"method","name":"add_table","children":[],"call":["@external_table_links << ","table [] ","@tables << "," write ","col_formats [] ","data [] [] ","data [] ","(irange\n  (lvar :col1)\n  (lvar :col2)) each ","(irange\n  (lvar :first_data_row)\n  (lvar :last_data_row)) each ","param [] "," write_string ","col_data [] ","param [] != ","table [] << ","col_formats []= ","user_data [] ","col_id - ","col_data []= ","user_data [] get_dxf_index "," write_formula "," table_function_to_formula ","function == ","function gsub! ","function downcase ","formula gsub! ","formula sub! ","user_data [] empty? ! ","user_data [] empty? ","param [] [] ","table []= ","param []= ","param [] == "," xl_range ","col1 > ","row1 > ","table [] gsub! "," ptrue? ","@workbook table_count "," check_parameter "," valid_table_parameter "," check_dimensions_and_update_max_min_values "," raise ","(lvar :row1) include? "," row_col_notation ","table id ","Package Table  new ","@external_Package Table  new _links << ","Package Table  new  [] ","@Package Table  new s << ","param []  [] [] ","param []  [] ","(irange\n  (lvar :first_param [] _row)\n  (lvar :last_param [] _row)) each ","col_param []  [] ","Package Table  new  [] << ","user_param []  [] ","param [] []  [] ","col_@workbook table_count  - ","col_param []  []= ","user_param []  [] get_dxf_index ","param [] []  [] get_dxf_index "," write_ table_function_to_formula  "," write_user_data []  "," table_function_to_ table_function_to_formula  "," table_function_to_user_data []  "," table_function downcase _to_formula "," table_user_data [] _to_formula "," Package Table  new _function_to_formula ","function downcase  == ","user_data []  == ","function downcase  gsub! ","user_data []  gsub! ","function downcase  downcase ","user_data []  downcase "," table_function_to_formula  gsub! "," table_function_to_formula  sub! ","user_data []  sub! ","user_param []  [] empty? ! ","param [] []  [] empty? ! ","user_param []  [] empty? ","param [] []  [] empty? ","Package Table  new  []= ","Package Table  new  [] gsub! ","@workbook Package Table  new _count "," valid_Package Table  new _parameter "," val@workbook table_count _table_parameter ","Package Table  new  id ","table @workbook table_count  "]}," Writexlsx Worksheet sort_charts":{"type":"method","name":"sort_charts","children":[],"call":["a [] id <=> ","b [] id ","b [] ","a [] id ","a [] ","@charts sort ","@charts size < ","@charts size "]}," Writexlsx Worksheet paper=":{"type":"method","name":"paper=","children":[],"call":["@print_style page_setup_changed= ","@page_setup paper= "]}," Writexlsx Worksheet protect_default_settings":{"type":"method","name":"protect_default_settings","children":[],"call":[]}," Writexlsx Workbook process_bmp":{"type":"method","name":"process_bmp","children":[],"call":[" raise ","compression == ","data unpack [] ","data unpack ","planes == ","bitcount == ","height > ","width > ","data bytesize <= ","data bytesize ","data unpack1 ","data unpack []  == ","data unpack1  == "]}," Writexlsx Workbook process_jpg":{"type":"method","name":"process_jpg","children":[],"call":[" raise ","marker == ","length + ","data [] unpack [] ","data [] unpack ","data [] ","offset + ","offset < ","data bytesize ","y_density * ","x_density * ","units == ","marker != ","(send\n  (lvar :marker) :&\n  (int 65520)) == ","marker & ","data [] unpack1 ","data [] unpack []  == ","data [] unpack1  == ","data [] unpack []  + ","data [] unpack1  + ","data [] unpack []  * ","data [] unpack1  * ","data [] unpack []  != ","data [] unpack1  != ","(send\n  (lvar :data [] unpack [] ) :&\n  (int 65520)) == ","(send\n  (lvar :data [] unpack1 ) :&\n  (int 65520)) == ","data [] unpack []  & ","data [] unpack1  & "]}," Writexlsx Workbook process_png":{"type":"method","name":"process_png","children":[],"call":["data [] unpack [] ","data [] unpack ","data [] "," raise "," filename ","png_type == ","offset + + ","offset + ","y_ppu * ","x_ppu * ","units == ","offset < ","data size ","data [] unpack1 ","data [] unpack []  == ","data [] unpack1  == ","offset + +  + + ","offset + +  + ","data [] unpack []  * ","data [] unpack1  * ","offset + +  < "]}," Writexlsx Workbook get_image_properties":{"type":"method","name":"get_image_properties","children":[],"call":["File  basename ","@images_seen []= ","previous_images << ","@images << "," raise ","@image_types []= "," process_bmp ","data unpack [] == ","data unpack [] ","data unpack "," process_jpg "," image_types []= "," image_types "," process_png ","File  binread "," image_data [] [] "," image_data [] "," image_data "," images_seen [] - "," images_seen [] "," images_seen ","@images_seen [] ","images_seen []= ","images_seen [] - ","images_seen [] ","y_dpi == ","x_dpi == ","Digest MD5  hexdigest "," process_gif ","data unpack1 == ","data unpack1 ","File  binread  unpack [] == ","File  binread  unpack [] ","File  binread  unpack "," image_File  binread  [] [] "," image_File  binread  [] "," image_File  binread  ","File  binread  unpack1 == ","File  binread  unpack1 "]}," Writexlsx Workbook chart_data":{"type":"method","name":"chart_data","children":[],"call":["string =~ ","@shared_strings string ","token [] ","token kind_of? ","data collect ","worksheet get_range_data ","token is_a? ","@shared_strings string  =~ ","@shared_@shared_strings string s @shared_strings string  ","worksheet get_range_data  collect ","worksheet get_range_worksheet get_range_data  "]}," Writexlsx Workbook ne_0?":{"type":"method","name":"ne_0?","children":[],"call":[" eq_0? ! "," eq_0? "]}," Writexlsx Workbook eq_0?":{"type":"method","name":"eq_0?","children":[],"call":[" ptrue? "]}," Writexlsx Workbook is_sheetname_uniq?":{"type":"method","name":"is_sheetname_uniq?","children":[],"call":["name downcase == ","worksheet name downcase ","worksheet name ","name downcase ","@worksheets each "]}," Writexlsx Workbook check_valid_sheetname":{"type":"method","name":"check_valid_sheetname","children":[],"call":[" raise "," is_sheetname_uniq? ","Invalid character []:*?/\\ in worksheet name:  + ","name =~ ","name length > ","name length "]}," Writexlsx Workbook check_chart_sheetname":{"type":"method","name":"check_chart_sheetname","children":[],"call":[" check_valid_sheetname ","name == ","name nil? "," make_and_check_sheet_chart_name ","@worksheets make_and_check_sheet_chart_name "]}," Writexlsx Workbook add_shape":{"type":"method","name":"add_shape","children":[],"call":["@shapes << ","shape []= ","Shape  new ","shape palette= ","@Shape  new s << ","Shape  new  []= ","Shape  new  palette= "]}," Writexlsx Utility check_parameter":{"type":"method","name":"check_parameter","children":[],"call":[" raise ","invalids join ","invalids empty? ","params keys - ","params keys ","params keys -  join ","params keys -  empty? "]}," Writexlsx Utility ptrue?":{"type":"method","name":"ptrue?","children":[],"call":["(false) include? ","PERL_TRUE_VALUES  include? "]}," Writexlsx Shape get_palette_color":{"type":"method","name":"get_palette_color","children":[],"call":[" sprintf ","@palette [] ","index - "]}," Writexlsx Shape []=":{"type":"method","name":"[]=","children":[],"call":[" instance_variable_set "]}," Writexlsx Shape []":{"type":"method","name":"[]","children":[],"call":[" instance_variable_get "]}," Writexlsx Shape adjustments=":{"type":"method","name":"adjustments=","children":[],"call":[]}," Writexlsx Shape set_properties":{"type":"method","name":"set_properties","children":[],"call":[" instance_variable_set ","key to_s sub ","key to_s ","properties each ","key to_s sub ey to_s sub ","key to_s sub ey to_s "]}," Writexlsx Shape initialize":{"type":"method","name":"initialize","children":[],"call":[" set_properties ","Package XMLWriterSimple  new "]}," Writexlsx Package XMLWriterSimple si_rich_element":{"type":"method","name":"si_rich_element","children":[],"call":[" io_write "]}," Writexlsx Package XMLWriterSimple si_element":{"type":"method","name":"si_element","children":[],"call":[" data_element "," tag_elements "]}," Writexlsx Package XMLWriterSimple empty_tag_encoded":{"type":"method","name":"empty_tag_encoded","children":[],"call":[" io_write "," key_vals "," empty_tag_encoded_str "]}," Writexlsx Package Vml xml_attributes":{"type":"method","name":"xml_attributes","children":[],"call":[]}," Writexlsx Package Table write_calculated_column_formula":{"type":"method","name":"write_calculated_column_formula","children":[],"call":["@writer data_element "]}," Writexlsx Package Table write_table_style_info":{"type":"method","name":"write_table_style_info","children":[],"call":["@writer empty_tag ","props [] ","attributes << ","@style != "]}," Writexlsx Package Table write_table_column":{"type":"method","name":"write_table_column","children":[],"call":["@writer empty_tag "," write_calculated_column_formula ","col_data [] ","@writer tag_elements "," ptrue? ","attributes << << ","attributes << ","col_data formula ","col_data format ","col_data total_function ","col_data total_string ","col_data name ","col_data id "]}," Writexlsx Package Table write_table_columns":{"type":"method","name":"write_table_columns","children":[],"call":[" write_table_column ","columns each ","@writer tag_elements ","columns size ","@properties [] ","@columns each ","@columns size ","@properties []  each ","@properties []  size ","@@properties []  each ","@@properties []  size "]}," Writexlsx Package Table write_auto_filter":{"type":"method","name":"write_auto_filter","children":[],"call":["@writer empty_tag "," ptrue? ","@properties [] "]}," Writexlsx Package Table write_table":{"type":"method","name":"write_table","children":[],"call":["@writer start_tag ","attributes << << ","attributes << "," ptrue? ","@properties [] "," id "," @properties []  "]}," Writexlsx Package Table write_xml_declaration":{"type":"method","name":"write_xml_declaration","children":[],"call":["@writer xml_decl "]}," Writexlsx Package Table set_properties":{"type":"method","name":"set_properties","children":[],"call":[]}," Writexlsx Package Table assemble_xml_file":{"type":"method","name":"assemble_xml_file","children":[],"call":["@writer close ","@writer crlf ","@writer end_tag "," write_table_style_info "," write_table_columns "," write_auto_filter "," write_table "," write_xml_declaration ","@writer tag_elements "," write_table_attributes "]}," Writexlsx Package Table set_xml_writer":{"type":"method","name":"set_xml_writer","children":[],"call":["@writer set_xml_writer "]}," Writexlsx Package Table initialize":{"type":"method","name":"initialize","children":[],"call":["Package XMLWriterSimple  new "," write_the_cell_data_if_supplied "," add_the_table_columns "," set_the_autofilter_range "," set_the_table_and_autofilter_ranges "," set_the_table_name "," set_the_table_style "," set_the_table_options ","@param [] "," ptrue? "," handle_args "," store_filter_cell_positions "]}," Writexlsx Package SharedStrings add_c2_c3":{"type":"method","name":"add_c2_c3","children":[],"call":["195 chr + ","(send\n  (lvar :num) :-\n  (int 64)) chr ","num - ","195 chr ","194 chr + ","num chr ","194 chr ","num < ","128 <= ","string ord ","(send\n  (lvar :string ord ) :-\n  (int 64)) chr ","string ord  - ","string ord  chr ","string ord  < "]}," Writexlsx Package Packager write_table_files":{"type":"method","name":"write_table_files","children":[],"call":["table assemble_xml_file ","table set_properties ","table set_xml_writer ","Package Table  new ","table_props each ","FileUtils  mkdir_p ","table_props empty? ","worksheet tables ","@workbook worksheets each ","@workbook worksheets ","@workbook worksheets write_table_files ","Package Table  new  assemble_xml_file ","Package Table  new  set_properties ","Package Table  new  set_xml_writer ","Package Table  new _props each ","worksheet tables  each ","Package Table  new _props empty? ","worksheet tables  empty? ","worksheet Package Table  new s ","@workbook worksheets write_Package Table  new _files "]}," Writexlsx Package ContentTypes add_table_name":{"type":"method","name":"add_table_name","children":[],"call":[" add_override "]}," Writexlsx Package Comments []":{"type":"method","name":"[]","children":[],"call":["@comments [] "]}," Writexlsx Format []":{"type":"method","name":"[]","children":[],"call":[" instance_variable_get "]}," Writexlsx Format color?":{"type":"method","name":"color?","children":[],"call":[" ptrue? "]}," Writexlsx Format set_border_info":{"type":"method","name":"set_border_info","children":[],"call":["borders []= ","borders size ","borders [] "," get_border_key "," get_border_ get_border_key  "]}," Writexlsx Format set_font_info":{"type":"method","name":"set_font_info","children":[],"call":["fonts []= ","fonts size ","fonts [] "," get_font_key "," get_font_ get_font_key  "]}," Writexlsx Format copy":{"type":"method","name":"copy","children":[],"call":[" instance_variable_set ","other instance_variable_get ","(send\n  (send nil :instance_variables) :-\n  (lvar :reserve)) each "," instance_variables - "," instance_variables "]}," Writexlsx Drawing write_txBody":{"type":"method","name":"write_txBody","children":[],"call":["@writer characters ","shape [] ","@writer tag_elements ","@writer empty_tag ","shape [] [] "," write_a_solid_fill ","color sub ","shape get_palette_color "," ptrue? ","shape text ","shape format [] ","shape format ","shape align ","shape valign ","color sub  sub ","shape get_palette_color  sub ","shape [] []  sub ","shape format []  sub ","shape get_palette_color sub  ","shape get_palette_shape get_palette_color  ","shape get_palette_shape [] []  ","shape get_palette_shape format []  "]}," Writexlsx Drawing write_a_ln":{"type":"method","name":"write_a_ln","children":[],"call":["@writer empty_tag ","shape [] != ","shape [] "," write_a_solid_fill ","line to_s bytesize > ","line to_s bytesize ","line to_s ","@writer tag_elements ","weight * ","shape connect != ","shape connect ","shape line_type ","shape line_type != ","shape line ","shape line_weight "]}," Writexlsx Drawing write_a_solid_fill":{"type":"method","name":"write_a_solid_fill","children":[],"call":["@writer empty_tag ","@writer tag_elements "]}," Writexlsx Drawing write_xdr_sp_pr":{"type":"method","name":"write_xdr_sp_pr","children":[],"call":[" write_a_ln ","@writer empty_tag "," write_a_solid_fill ","shape [] ","shape [] to_s bytesize > ","shape [] to_s bytesize ","shape [] to_s "," write_a_prst_geom "," write_a_xfrm ","@writer tag_elements ","shape fill ","shape fill to_s bytesize > ","shape fill to_s bytesize ","shape fill to_s "]}," Writexlsx Drawing write_nv_sp_pr":{"type":"method","name":"write_nv_sp_pr","children":[],"call":["@writer empty_tag ","@writer tag_elements ","shape [] != ","shape [] "," write_c_nv_pr ","shape type ","shape id ","attributes << << ","attributes << ","shape tx_box "]}," Writexlsx Drawing write_nv_cxn_sp_pr":{"type":"method","name":"write_nv_cxn_sp_pr","children":[],"call":["@writer empty_tag ","shape [] ","@writer tag_elements "," write_c_nv_pr ","shape []= ","(send\n  (lvar :shape) :[]\n  (sym :type)) join ","shape end_index ","shape end ","shape start_index ","shape start ","shape name ","shape id ","shape name= ","(send\n  (lvar :shape) :type) join ","shape type "]}," Writexlsx Drawing write_sp":{"type":"method","name":"write_sp","children":[],"call":[" write_txBody ","shape [] != ","shape [] "," write_xdr_sp_pr "," write_nv_sp_pr ","@writer tag_elements "," write_nv_cxn_sp_pr ","shape text != ","shape text ","shape connect != ","shape connect "," write_tx_body "]}," Writexlsx Drawing write_ext":{"type":"method","name":"write_ext","children":[],"call":["@writer empty_tag "]}," Writexlsx Drawing write_pos":{"type":"method","name":"write_pos","children":[],"call":["@writer empty_tag "]}," Writexlsx Drawing write_absolute_anchor":{"type":"method","name":"write_absolute_anchor","children":[],"call":["@writer end_tag "," write_client_data "," write_graphic_frame "," write_ext "," write_pos "," ptrue? ! "," ptrue? ","@writer start_tag ","@writer tag_elements "]}," Writexlsx Chartsheet write_sheet_pr":{"type":"method","name":"write_sheet_pr","children":[],"call":["@writer empty_tag "," write_page_set_up_pr "," write_tab_color ","@writer tag_elements "," ptrue? ","attributes << "]}," Writexlsx Chartsheet write_chartsheet":{"type":"method","name":"write_chartsheet","children":[],"call":["@writer start_tag ","schema + ","@writer tag_elements "]}," Writexlsx Chartsheet prepare_chart":{"type":"method","name":"prepare_chart","children":[],"call":["@drawing_links << ","@external_drawing_links << ","@drawing orientation= ","@print_style orientation ","Drawing  new ","@chart id= ","chart_id - ","@page_setup orientation ","@drawings orientation= ","Drawings  new ","@Drawing  new _links << ","@external_Drawing  new _links << ","@Drawing  new  orientation= ","@Drawing  new s orientation= ","@Drawings  new  orientation= "]}," Writexlsx Chartsheet show_hidden_data":{"type":"method","name":"show_hidden_data","children":[],"call":["@chart show_hidden_data "]}," Writexlsx Chartsheet show_blanks_as":{"type":"method","name":"show_blanks_as","children":[],"call":["@chart show_blanks_as "]}," Writexlsx Chartsheet set_style":{"type":"method","name":"set_style","children":[],"call":["@chart set_style "]}," Writexlsx Chartsheet set_chartarea":{"type":"method","name":"set_chartarea","children":[],"call":["@chart set_chartarea "]}," Writexlsx Chartsheet set_plotarea":{"type":"method","name":"set_plotarea","children":[],"call":["@chart set_plotarea "]}," Writexlsx Chartsheet set_legend":{"type":"method","name":"set_legend","children":[],"call":["@chart set_legend "]}," Writexlsx Chartsheet set_title":{"type":"method","name":"set_title","children":[],"call":["@chart set_title "]}," Writexlsx Chartsheet set_y2_axis":{"type":"method","name":"set_y2_axis","children":[],"call":["@chart set_y2_axis "]}," Writexlsx Chartsheet set_x2_axis":{"type":"method","name":"set_x2_axis","children":[],"call":["@chart set_x2_axis "]}," Writexlsx Chartsheet set_y_axis":{"type":"method","name":"set_y_axis","children":[],"call":["@chart set_y_axis "]}," Writexlsx Chartsheet set_x_axis":{"type":"method","name":"set_x_axis","children":[],"call":["@chart set_x_axis "]}," Writexlsx Chartsheet add_series":{"type":"method","name":"add_series","children":[],"call":["@chart add_series "]}," Writexlsx Chartsheet protect":{"type":"method","name":"protect","children":[],"call":["options []= ","@chart protection= "," ptrue? ! "," ptrue? ","options [] ","password == ","user_options [] ","user_options has_key? "]}," Writexlsx Chartsheet assemble_xml_file":{"type":"method","name":"assemble_xml_file","children":[],"call":["@writer close ","@writer crlf ","@writer end_tag "," write_drawings "," write_header_footer "," write_page_setup "," write_page_margins "," write_print_options "," write_sheet_protection "," write_sheet_views "," write_sheet_pr "," write_chartsheet ","@writer xml_decl "," write_xml_declaration "]}," Writexlsx Chartsheet initialize":{"type":"method","name":"initialize","children":[],"call":["@print_style orientation= ","Drawing  new ","@page_setup orientation= ","Drawings  new "]}," Writexlsx Chart write_d_lbl_pos":{"type":"method","name":"write_d_lbl_pos","children":[],"call":["@writer empty_tag "]}," Writexlsx Chart write_show_leader_lines":{"type":"method","name":"write_show_leader_lines","children":[],"call":["@writer empty_tag "]}," Writexlsx Chart write_show_percent":{"type":"method","name":"write_show_percent","children":[],"call":["@writer empty_tag "]}," Writexlsx Chart write_scaling_with_param":{"type":"method","name":"write_scaling_with_param","children":[],"call":[" write_scaling ","param [] ","param log_base ","param max ","param min ","param reverse "]}," Writexlsx Chart write_crossing":{"type":"method","name":"write_crossing","children":[],"call":[" write_c_crosses_at "," write_crosses "," nil_or_max? ","(nil) include? "]}," Writexlsx Chart write_axis_ids":{"type":"method","name":"write_axis_ids","children":[],"call":[" write_axis_id ","@axis2_ids [] ","@axis_ids [] ","params [] != ","params [] "," add_axis_ids ","params [] == "]}," Writexlsx Chart write_num_or_str_ref":{"type":"method","name":"write_num_or_str_ref","children":[],"call":[" write_str_cache ","type == "," write_num_cache "," write_series_formula ","@writer tag_elements "]}," Writexlsx Chart write_cat_or_date_axis":{"type":"method","name":"write_cat_or_date_axis","children":[],"call":[" write_cat_axis "," write_date_axis ","type == "]}," Writexlsx Chart write_plot_area_base":{"type":"method","name":"write_plot_area_base","children":[],"call":[" write_cat_or_date_axis "," write_val_axis "," write_chart_type "," write_layout ","@writer tag_elements "," write_sp_pr "," write_d_table ","@plotarea [] "]}," Writexlsx Chart write_disp_blanks_as":{"type":"method","name":"write_disp_blanks_as","children":[],"call":["@writer empty_tag ","val == ","@show_blanks == "]}," Writexlsx Chart chart_space_attributes":{"type":"method","name":"chart_space_attributes","children":[],"call":[]}," Writexlsx Chart default_plotarea_property":{"type":"method","name":"default_plotarea_property","children":[],"call":[]}," Writexlsx Chart default_chartarea_property_for_embedded":{"type":"method","name":"default_chartarea_property_for_embedded","children":[],"call":[" default_chartarea_property merge "," default_chartarea_property "]}," Writexlsx Chart default_chartarea_property":{"type":"method","name":"default_chartarea_property","children":[],"call":[]}," Writexlsx Chart add_axis_ids":{"type":"method","name":"add_axis_ids","children":[],"call":["@axis2_ids << << ","@axis2_ids << ","@axis_ids << << ","@axis_ids << "," ptrue? ","params [] "," sprintf ","axis_count + ","1 + + ","@axis_ids size ","1 + ","@axis2_ids size "," ids ","1 + +  + "]}," Writexlsx Chart get_secondary_axes_series":{"type":"method","name":"get_secondary_axes_series","children":[],"call":["s [] ","@series select ","s y2_axis "]}," Writexlsx Chart get_primary_axes_series":{"type":"method","name":"get_primary_axes_series","children":[],"call":["s [] ","@series reject ","s y2_axis "]}," Writexlsx Chart value_or_raise":{"type":"method","name":"value_or_raise","children":[],"call":["hash [] ","key to_sym "," raise "]}," Writexlsx Chart axes_series":{"type":"method","name":"axes_series","children":[],"call":[" secondary_axes_series "," primary_axes_series ","params [] != ","params [] ","params [] == "]}," Writexlsx Chart show_hidden_data":{"type":"method","name":"show_hidden_data","children":[],"call":[]}," Writexlsx Chart show_blanks_as":{"type":"method","name":"show_blanks_as","children":[],"call":[" raise ","(sym :gap) include? ","option to_sym "]}," Writexlsx Chart set_y2_axis":{"type":"method","name":"set_y2_axis","children":[],"call":[" convert_axis_args ","(pair\n  (sym :major_gridlines)\n  (hash\n    (pair\n      (sym :visible)\n      (int 0)))) merge ","@y2_axis merge_with_hash "," ptrue? ","params [] "," convert_axis_args  merge_with_hash "]}," Writexlsx Chart set_x2_axis":{"type":"method","name":"set_x2_axis","children":[],"call":[" convert_axis_args ","(pair\n  (sym :label_position)\n  (str \"none\")) merge ","@x2_axis merge_with_hash "," ptrue? ","params [] "," convert_axis_args  merge_with_hash "]}," Writexlsx Chart Area write_number_format":{"type":"method","name":"write_number_format","children":[],"call":["@writer empty_tag ","@subtype == ","format_code empty? ","format_code ! "]}," Writexlsx Chart write_a_latin":{"type":"method","name":"write_a_latin","children":[],"call":["@writer empty_tag "]}," Writexlsx Chart write_axis_font":{"type":"method","name":"write_axis_font","children":[],"call":[" write_a_end_para_rpr "," write_a_p_pr_rich ","@writer tag_elements "," write_a_lst_style ","@writer empty_tag "," write_axis_body_pr ","font [] "," write_a_body_pr "]}," Writexlsx Chart write_major_tick_mark":{"type":"method","name":"write_major_tick_mark","children":[],"call":["@writer empty_tag "," ptrue? "]}," Writexlsx Chart write_cat_number_format":{"type":"method","name":"write_cat_number_format","children":[],"call":["@writer empty_tag ","@cat_has_num_fmt ! ","axis [] ","format_code != ","axis [] [] ","axis write_cat_number_format ","axis []  != "]}," Writexlsx Chart get_font_latin_attributes":{"type":"method","name":"get_font_latin_attributes","children":[],"call":["attributes << << ","font [] ","attributes << "," ptrue? "]}," Writexlsx Chart get_font_style_attributes":{"type":"method","name":"get_font_style_attributes","children":[],"call":["attributes << << ","font [] ","attributes << "," ptrue? ","font [] != "]}," Writexlsx Chart convert_font_args":{"type":"method","name":"convert_font_args","children":[],"call":["font [] ","font [] != ","params [] ","font []= ","60000 * ","font [] to_i "," ptrue? "," params_to_font "," params_to_font  [] "," params_to_font  [] != "," params_to_font  []= "," params_to_font  [] to_i "," params_to_ params_to_font  "]}," Writexlsx Chart Radar write_radar_style":{"type":"method","name":"write_radar_style","children":[],"call":["@writer empty_tag ","@subtype == "]}," Writexlsx Chart Radar write_radar_chart":{"type":"method","name":"write_radar_chart","children":[],"call":[" write_axis_ids "," write_series ","series each "," write_radar_style ","@writer tag_elements ","series empty? "," get_secondary_axes_series "," get_primary_axes_series "," ptrue? ","params [] "," write_ get_secondary_axes_series  "," write_ get_primary_axes_series  "," get_secondary_axes_series  each "," get_primary_axes_series  each "," get_secondary_axes_series  empty? "," get_primary_axes_series  empty? "," get_secondary_axes_ get_secondary_axes_series  "," get_secondary_axes_ get_primary_axes_series  "," get_primary_axes_ get_secondary_axes_series  "," get_primary_axes_ get_primary_axes_series  "]}," Writexlsx Chart Radar write_chart_type":{"type":"method","name":"write_chart_type","children":[],"call":[" write_radar_chart "]}," Writexlsx Chart Radar initialize":{"type":"method","name":"initialize","children":[],"call":["@y_axis []= "," set_x_axis ","@x_axis [] []= ","@x_axis [] ","@subtype == ","@y_axis major_tick_mark= ","@x_axis defaults []= ","@x_axis defaults ","Marker  new "]}," Writexlsx Worksheet write_color_low":{"type":"method","name":"write_color_low","children":[],"call":[" write_spark_color "]}," Writexlsx Worksheet write_color_high":{"type":"method","name":"write_color_high","children":[],"call":[" write_spark_color "]}," Writexlsx Worksheet write_color_last":{"type":"method","name":"write_color_last","children":[],"call":[" write_spark_color "]}," Writexlsx Worksheet write_color_first":{"type":"method","name":"write_color_first","children":[],"call":[" write_spark_color "]}," Writexlsx Worksheet write_color_markers":{"type":"method","name":"write_color_markers","children":[],"call":[" write_spark_color "]}," Writexlsx Worksheet write_color_axis":{"type":"method","name":"write_color_axis","children":[],"call":[" write_spark_color "]}," Writexlsx Worksheet write_color_negative":{"type":"method","name":"write_color_negative","children":[],"call":[" write_spark_color "]}," Writexlsx Worksheet write_color_series":{"type":"method","name":"write_color_series","children":[],"call":[" write_spark_color "]}," Writexlsx Worksheet write_spark_color":{"type":"method","name":"write_spark_color","children":[],"call":["@writer empty_tag ","attr << << ","color [] ","attr << "]}," Writexlsx Worksheet write_sparkline_group":{"type":"method","name":"write_sparkline_group","children":[],"call":["@writer start_tag ","a << << ","a << ","opts [] "," ptrue? ","opts [] != ","opts []= ","opts [] == "," attributes_from_sparkline ","sparkline group_attributes "]}," Writexlsx Worksheet write_sparkline_groups":{"type":"method","name":"write_sparkline_groups","children":[],"call":["@writer start_tag ","sparkline write_sparkline_group ","@sparklines reverse each ","@sparklines reverse ","@writer tag_elements "," sparkline_groups_attributes "]}," Writexlsx Worksheet write_sparklines":{"type":"method","name":"write_sparklines","children":[],"call":["@writer data_element ","@writer tag_elements ","sparkline [] [] ","sparkline [] ","(irange\n  (int 0)\n  (send\n    (send\n      (lvar :sparkline) :[]\n      (sym :_count)) :-\n    (int 1))) each ","sparkline [] - ","sparkline locations [] ","sparkline locations ","sparkline ranges [] ","sparkline ranges ","(irange\n  (int 0)\n  (send\n    (send\n      (lvar :sparkline) :count) :-\n    (int 1))) each ","sparkline count - ","sparkline count ","(irange\n  (int 0)\n  (send\n    (send\n      (lvar :sparkline) :[]\n      (sym :count)) :-\n    (int 1))) each ","(isparkline [] [] \n  (int 0)\n  (send\n    (send\n      (lvar :sparkline) :[]\n      (sym :_count)) :-\n    (int 1))) each ","(isparkline ranges [] \n  (int 0)\n  (send\n    (send\n      (lvar :sparkline) :[]\n      (sym :_count)) :-\n    (int 1))) each ","sparkline sparkline [] [] s [] ","sparkline sparkline locations [] s [] ","sparkline sparkline [] [] s ","sparkline sparkline locations [] s ","sparkline sparkline ranges [] s [] ","sparkline sparkline ranges [] s ","(isparkline [] [] \n  (int 0)\n  (send\n    (send\n      (lvar :sparkline) :count) :-\n    (int 1))) each ","(isparkline ranges [] \n  (int 0)\n  (send\n    (send\n      (lvar :sparkline) :count) :-\n    (int 1))) each ","(isparkline [] [] \n  (int 0)\n  (send\n    (send\n      (lvar :sparkline) :[]\n      (sym :count)) :-\n    (int 1))) each ","(isparkline ranges [] \n  (int 0)\n  (send\n    (send\n      (lvar :sparkline) :[]\n      (sym :count)) :-\n    (int 1))) each "]}," Writexlsx Worksheet write_ext_sparklines":{"type":"method","name":"write_ext_sparklines","children":[],"call":["@writer end_tag "," write_sparklines ","@writer data_element ","sparkline [] "," write_color_low "," write_color_high "," write_color_last "," write_color_first "," write_color_markers "," write_color_axis "," write_color_negative "," write_color_series "," write_sparkline_group ","sparklines reverse each ","sparklines reverse "," write_sparkline_groups "," write_ext ","@writer start_tag ","sparklines empty? ","sparkline date_axis ","sparkline low_color ","sparkline high_color ","sparkline last_color ","sparkline first_color ","sparkline markers_color ","sparkline negative_color ","sparkline series_color ","@writer tag_elements ","@sparklines empty? "]}," Writexlsx Worksheet set_spark_color":{"type":"method","name":"set_spark_color","children":[],"call":["sparkline []= "," get_palette_color ","param [] "," ptrue? ","(str \"_\") to_sym "]}," Writexlsx Worksheet valid_sparkline_parameter":{"type":"method","name":"valid_sparkline_parameter","children":[],"call":[]}," Writexlsx Worksheet spark_styles":{"type":"method","name":"spark_styles","children":[],"call":[]}," Writexlsx Worksheet add_sparkline":{"type":"method","name":"add_sparkline","children":[],"call":["@sparklines << "," set_spark_color ","sparkline []= ","style [] "," spark_styles [] "," spark_styles ","param [] ","(send\n  (lvar :date_range) :=~\n  (regexp\n    (str \"!\")\n    (regopt))) ! ","date_range =~ "," ptrue? ","location gsub ","sparkline [] collect! ","sparkline [] ","range =~ ","range gsub "," quote_sheetname ","sparkline [] size "," raise ","sparkline [] size != ","(send\n  (lvar :param) :[]\n  (sym :range)) flatten ","(send\n  (lvar :param) :[]\n  (sym :location)) flatten ","type == ","(str \"line\") include? ","(sym :location) each "," valid_sparkline_parameter [] "," valid_sparkline_parameter ","param each_key ","Sparkline  new "," spark_styles []  [] "," spark_ spark_styles [] s [] "," spark_ spark_styles [] s ","(send\n  (lvar :param [] ) :=~\n  (regexp\n    (str \"!\")\n    (regopt))) ! ","(send\n  (lvar :date_range gsub ) :=~\n  (regexp\n    (str \"!\")\n    (regopt))) ! ","param []  =~ ","date_range gsub  =~ ","range gsub  =~ ","range gsub  gsub "," quote_ quote_sheetname  ","(send\n  (lvar :param) :[]\n  (sym :range gsub )) flatten "]}," Writexlsx Package XMLWriterSimple escape_data":{"type":"method","name":"escape_data","children":[],"call":["str gsub gsub gsub ","str gsub gsub ","str gsub ","str =~ ","str to_s =~ ","str to_s "]}," Writexlsx Package XMLWriterSimple escape_attributes":{"type":"method","name":"escape_attributes","children":[],"call":["str gsub gsub gsub gsub ","str gsub gsub gsub ","str gsub gsub ","str gsub ","(send\n  (lvar :str) :=~\n  (regexp\n    (str \"[\\\"&<>]\")\n    (regopt))) ! ","str =~ ","(send\n  (send\n    (lvar :str) :to_s) :=~\n  (regexp\n    (str \"[\\\"&<>]\")\n    (regopt))) ! ","str to_s =~ ","str to_s ","str gsub gsub gsub gsub gsub ","(send\n  (send\n    (lvar :str) :to_s) :=~\n  (regexp\n    (str \"[\\\"&<>\\\\n]\")\n    (regopt))) ! "]}," Writexlsx Chart write_minor_gridlines":{"type":"method","name":"write_minor_gridlines","children":[],"call":["@writer empty_tag "," write_sp_pr ","@writer tag_elements "," ptrue? ","gridlines [] [] ","gridlines [] "," write_gridlines_common "," write_gridlines_base "]}," Writexlsx Chart get_gridline_properties":{"type":"method","name":"get_gridline_properties","children":[],"call":["gridline []= "," get_line_properties ","args [] "]}," Writexlsx Chart get_area_properties":{"type":"method","name":"get_area_properties","children":[],"call":["area []= "," get_fill_properties ","arg [] "," get_line_properties ","arg [] []= ","arg []= ","pattern == "," get_swe_line_pattern "," get_swe_line_weight "," get_ get_fill_properties _properties "," get_ get_line_properties _properties "," get_swe_line_pattern  == "," get_swe_ get_line_properties _pattern "," get_swe_line_ get_swe_line_pattern  "," get_swe_ get_line_properties _weight "]}," Writexlsx Chart get_swe_line_weight":{"type":"method","name":"get_swe_line_weight","children":[],"call":["weights [] ","val downcase "]}," Writexlsx Chart get_swe_line_pattern":{"type":"method","name":"get_swe_line_pattern","children":[],"call":["patterns [] ","val downcase "]}," Writexlsx Worksheet cust_max_min":{"type":"method","name":"cust_max_min","children":[],"call":["max_min == "]}," Writexlsx Worksheet attributes_from_sparkline":{"type":"method","name":"attributes_from_sparkline","children":[],"call":["a << << ","a << ","opts [] "," ptrue? ","opts [] != ","opts []= "," cust_max_min "]}," Writexlsx Workbook add_vba_project":{"type":"method","name":"add_vba_project","children":[],"call":[]}," Writexlsx Utility store_col_max_min_values":{"type":"method","name":"store_col_max_min_values","children":[],"call":["col > ","@dim_colmax ! ","col < ","@dim_colmin ! "]}," Writexlsx Utility store_row_max_min_values":{"type":"method","name":"store_row_max_min_values","children":[],"call":["row > ","@dim_rowmax ! ","row < ","@dim_rowmin ! "]}," Writexlsx Utility check_dimensions_and_update_max_min_values":{"type":"method","name":"check_dimensions_and_update_max_min_values","children":[],"call":[" store_col_max_min_values ","ignore_col == "," store_row_max_min_values ","ignore_row == "," check_dimensions "]}," Writexlsx Utility write_color":{"type":"method","name":"write_color","children":[],"call":["writer empty_tag "]}," Writexlsx Utility row_col_notation":{"type":"method","name":"row_col_notation","children":[],"call":[" substitute_cellref ","args [] =~ ","args [] ","args [] to_s =~ ","args [] to_s ","row_or_a1 to_s =~ ","row_or_a1 to_s ","row_or_a1 respond_to? "]}," Writexlsx Utility convert_date_time":{"type":"method","name":"convert_date_time","children":[],"call":["date_time to_i ","date_time to_f ","date_time =~ ","date_time sub "," sprintf ","days + ","days > "," date_1904? ! "," date_1904? ","(send\n  (send\n    (lvar :range) :+\n    (lvar :offset)) :+\n  (lvar :norm)) / ","range + + ","range + ","(send\n  (lvar :range) :+\n  (lvar :offset)) / ","(lvar :range) / ","range * ","mdays [] ","(irange\n  (int 0)\n  (send\n    (lvar :month) :-\n    (int 2))) each ","month - ","day > ","day < ","month > ","month < ","year > ","year < ","mdays []= ","leap != ","year % == ","year % ","year % != ","year - ","60 + ","date == ","3 to_i ","2 to_i ","1 to_i ","date =~ ","(send\n  (send\n    (send\n      (send\n        (lvar :hour) :*\n        (int 60)) :*\n      (int 60)) :+\n    (send\n      (lvar :min) :*\n      (int 60))) :+\n  (lvar :sec)) / ","24.0 * * ","24.0 * ","hour * * + + ","hour * * + ","min * ","hour * * ","hour * ","sec >= ","min >= ","hour >= ","4 to_f ","time =~ ","date_time split ","date_time sub! ","date_time_string sub sub sub ","date_time_string sub sub ","date_time_string sub ","date_time_string to_s sub sub sub ","date_time_string to_s sub sub ","date_time_string to_s sub ","date_time_string to_s ","range / "," Regexp  last_match to_i "," Regexp  last_match ","(send\n  (send\n    (begin\n      (send\n        (send\n          (lvar :hour) :*\n          (int 60)) :*\n        (int 60))) :+\n    (begin\n      (send\n        (lvar :min) :*\n        (int 60)))) :+\n  (lvar :sec)) / ","(send\n  (send\n    (lvar :hour) :*\n    (int 60)) :*\n  (int 60)) + + ","(send\n  (send\n    (lvar :hour) :*\n    (int 60)) :*\n  (int 60)) + "," Regexp  last_match to_f ","date_time sub  to_i "," sprintf  to_i ","date_time_string sub sub sub  to_i ","date_time_string to_s sub sub sub  to_i ","date_time sub  to_f "," sprintf  to_f ","date_time_string sub sub sub  to_f ","date_time_string to_s sub sub sub  to_f ","date_time sub  =~ "," sprintf  =~ ","date_time_string sub sub sub  =~ ","date_time_string to_s sub sub sub  =~ ","date_time sub  sub "," sprintf  sub ","date_time_string sub sub sub  sub ","date_time_string to_s sub sub sub  sub ","3 to_i s + "," Regexp  last_match to_i s + ","3 to_i s > "," Regexp  last_match to_i s > ","(send\n  (send\n    (lvar :year - ) :+\n    (lvar :offset)) :+\n  (lvar :norm)) / ","year -  + + ","year -  + ","(send\n  (lvar :year - ) :+\n  (lvar :offset)) / ","(lvar :year - ) / ","year -  * ","m3 to_i s [] ","m Regexp  last_match to_i s [] ","(iyear - \n  (int 0)\n  (send\n    (lvar :month) :-\n    (int 2))) each ","(irange\n  (int 0)\n  (send\n    (lvar :2 to_i ) :-\n    (int 2))) each ","(irange\n  (int 0)\n  (send\n    (lvar : Regexp  last_match to_i ) :-\n    (int 2))) each ","2 to_i  - "," Regexp  last_match to_i  - ","3 to_i  > "," Regexp  last_match to_i  > ","3 to_i  < "," Regexp  last_match to_i  < ","2 to_i  > ","2 to_i  < ","1 to_i  > ","1 to_i  < ","m3 to_i s []= ","m Regexp  last_match to_i s []= ","1 to_i  % == "," Regexp  last_match to_i  % == ","1 to_i  % "," Regexp  last_match to_i  % ","1 to_i  % != "," Regexp  last_match to_i  % != ","1 to_i  - ","(send\n  (send\n    (send\n      (send\n        (lvar :hour) :*\n        (int 60)) :*\n      (int 60)) :+\n    (send\n      (lvar :2 to_i ) :*\n      (int 60))) :+\n  (lvar :sec)) / ","(send\n  (send\n    (send\n      (send\n        (lvar :hour) :*\n        (int 60)) :*\n      (int 60)) :+\n    (send\n      (lvar : Regexp  last_match to_i ) :*\n      (int 60))) :+\n  (lvar :sec)) / ","(send\n  (send\n    (send\n      (send\n        (lvar :1 to_i ) :*\n        (int 60)) :*\n      (int 60)) :+\n    (send\n      (lvar :min) :*\n      (int 60))) :+\n  (lvar :sec)) / ","(send\n  (send\n    (send\n      (send\n        (lvar : Regexp  last_match to_i ) :*\n        (int 60)) :*\n      (int 60)) :+\n    (send\n      (lvar :min) :*\n      (int 60))) :+\n  (lvar :sec)) / ","1 to_i  * * + + "," Regexp  last_match to_i  * * + + ","1 to_i  * * + "," Regexp  last_match to_i  * * + ","2 to_i  * "," Regexp  last_match to_i  * ","1 to_i  * * "," Regexp  last_match to_i  * * ","1 to_i  * ","2 to_i  >= "," Regexp  last_match to_i  >= ","1 to_i  >= ","date_time sub  split "," sprintf  split ","date_time_string sub sub sub  split ","date_time_string to_s sub sub sub  split ","date_time sub  sub! "," sprintf  sub! ","date_time_string sub sub sub  sub! ","date_time_string to_s sub sub sub  sub! ","date_time sub _string sub sub sub "," sprintf _string sub sub sub ","date_time_string sub sub sub _string sub sub sub ","date_time_string to_s sub sub sub _string sub sub sub ","date_time sub _string sub sub "," sprintf _string sub sub ","date_time_string sub sub sub _string sub sub ","date_time_string to_s sub sub sub _string sub sub ","date_time sub _string sub "," sprintf _string sub ","date_time_string sub sub sub _string sub ","date_time_string to_s sub sub sub _string sub ","date_time sub _string to_s sub sub sub "," sprintf _string to_s sub sub sub ","date_time_string sub sub sub _string to_s sub sub sub ","date_time_string to_s sub sub sub _string to_s sub sub sub ","date_time sub _string to_s sub sub "," sprintf _string to_s sub sub ","date_time_string sub sub sub _string to_s sub sub ","date_time_string to_s sub sub sub _string to_s sub sub ","date_time sub _string to_s sub "," sprintf _string to_s sub ","date_time_string sub sub sub _string to_s sub ","date_time_string to_s sub sub sub _string to_s sub ","date_time sub _string to_s "," sprintf _string to_s ","date_time_string sub sub sub _string to_s ","date_time_string to_s sub sub sub _string to_s ","year -  / ","(send\n  (send\n    (begin\n      (send\n        (send\n          (lvar :hour) :*\n          (int 60)) :*\n        (int 60))) :+\n    (begin\n      (send\n        (lvar :2 to_i ) :*\n        (int 60)))) :+\n  (lvar :sec)) / ","(send\n  (send\n    (begin\n      (send\n        (send\n          (lvar :hour) :*\n          (int 60)) :*\n        (int 60))) :+\n    (begin\n      (send\n        (lvar : Regexp  last_match to_i ) :*\n        (int 60)))) :+\n  (lvar :sec)) / ","(send\n  (send\n    (begin\n      (send\n        (send\n          (lvar :1 to_i ) :*\n          (int 60)) :*\n        (int 60))) :+\n    (begin\n      (send\n        (lvar :min) :*\n        (int 60)))) :+\n  (lvar :sec)) / ","(send\n  (send\n    (begin\n      (send\n        (send\n          (lvar : Regexp  last_match to_i ) :*\n          (int 60)) :*\n        (int 60))) :+\n    (begin\n      (send\n        (lvar :min) :*\n        (int 60)))) :+\n  (lvar :sec)) / ","(send\n  (send\n    (lvar :1 to_i ) :*\n    (int 60)) :*\n  (int 60)) + + ","(send\n  (send\n    (lvar : Regexp  last_match to_i ) :*\n    (int 60)) :*\n  (int 60)) + + ","(send\n  (send\n    (lvar :1 to_i ) :*\n    (int 60)) :*\n  (int 60)) + ","(send\n  (send\n    (lvar : Regexp  last_match to_i ) :*\n    (int 60)) :*\n  (int 60)) + "]}," Writexlsx Utility check_dimensions":{"type":"method","name":"check_dimensions","children":[],"call":[" raise ","col >= ","col ! ","row >= ","row ! "]}," Writexlsx Package Table set_the_autofilter_range":{"type":"method","name":"set_the_autofilter_range","children":[],"call":[" ptrue? ","@param [] "]}," Writexlsx Package Table set_the_table_and_autofilter_ranges":{"type":"method","name":"set_the_table_and_autofilter_ranges","children":[],"call":[" xl_range "]}," Writexlsx Package Table set_the_table_name":{"type":"method","name":"set_the_table_name","children":[],"call":[" id ","@param [] "," raise ","name =~ "," ralse ","name !~ ","@param []  =~ ","@param []  !~ "]}," Writexlsx Package Table set_the_table_style":{"type":"method","name":"set_the_table_style","children":[],"call":["@style gsub! ","@param [] ","@param [] gsub ","@param []  gsub! ","@param [] gsub  gsub! "]}," Writexlsx Package Table set_the_table_options":{"type":"method","name":"set_the_table_options","children":[],"call":[" ptrue? ","@param [] "]}," Writexlsx Package Table total_label_only":{"type":"method","name":"total_label_only","children":[],"call":["@worksheet write_string ","col_data total_string= "]}," Writexlsx Package Table table_function_to_formula":{"type":"method","name":"table_function_to_formula","children":[],"call":[" raise ","subtotals [] ","function to_sym ","col_name gsub gsub gsub gsub ","col_name gsub gsub gsub ","col_name gsub gsub ","col_name gsub ","col_name gsub gsub gsub gsub  gsub gsub gsub gsub ","col_name gsub gsub gsub gsub  gsub gsub gsub ","col_name gsub gsub gsub gsub  gsub gsub ","col_name gsub gsub gsub gsub  gsub "]}," Writexlsx Package Table handle_the_function_for_the_table_row":{"type":"method","name":"handle_the_function_for_the_table_row","children":[],"call":["@worksheet write_formula "," table_function_to_formula ","col_data name ","col_data total_function= ","function == ","function gsub! ","function downcase ","total_function downcase gsub ","total_function downcase ","user_data [] ","user_data [] downcase gsub ","user_data [] downcase ","@worksheet write_ table_function_to_formula  "," table_function_to_ table_function_to_formula  "," table_function downcase _to_formula "," table_total_function downcase gsub _to_formula "," table_user_data [] downcase gsub _to_formula ","col_data total_function downcase = ","col_data total_total_function downcase gsub = ","col_data total_user_data [] downcase gsub = ","function downcase  == ","total_function downcase gsub  == ","user_data [] downcase gsub  == ","function downcase  gsub! ","total_function downcase gsub  gsub! ","user_data [] downcase gsub  gsub! ","function downcase  downcase ","total_function downcase gsub  downcase ","user_data [] downcase gsub  downcase ","total_function downcase  downcase gsub ","total_total_function downcase gsub  downcase gsub ","total_user_data [] downcase gsub  downcase gsub ","total_function downcase  downcase ","total_total_function downcase gsub  downcase ","total_user_data [] downcase gsub  downcase "]}," Writexlsx Package Table handle_the_column_formula":{"type":"method","name":"handle_the_column_formula","children":[],"call":["@worksheet write_formula ","(irange\n  (ivar :@first_data_row)\n  (ivar :@last_data_row)) each ","col_data formula= ","formula gsub! ","formula sub! ","col_data formula ","formula sub gsub ","formula sub "]}," Writexlsx Package Table valid_table_parameter":{"type":"method","name":"valid_table_parameter","children":[],"call":[]}," Writexlsx Package Table handle_args":{"type":"method","name":"handle_args","children":[],"call":[" check_parameter "," valid_table_parameter ","param []= ","param [] == ","param [] ","col1 > ","row1 > "," check_dimensions_and_update_max_min_values "," raise ","(lvar :row1) include? "," row_col_notation ","num_rows < "," ptrue? ","row2 - ","_param []= ","_param [] == ","_param [] ","_row2 - ","_col1 > ","_row1 > ","(lvar :_row1) include? ","row2 -  < ","_row2 -  < "]}," Writexlsx Package Table write_the_cell_data_if_supplied":{"type":"method","name":"write_the_cell_data_if_supplied","children":[],"call":["@worksheet write ","@col_formats [] ","data [] [] ","data [] ","(irange\n  (ivar :@col1)\n  (ivar :@col2)) each ","(irange\n  (ivar :@first_data_row)\n  (ivar :@last_data_row)) each ","@param [] ","@param []  [] [] ","@param []  [] ","(irange\n  (ivar :@first_@param [] _row)\n  (ivar :@last_@param [] _row)) each "]}," Writexlsx Package Table write_the_column_headers_to_the_worksheet":{"type":"method","name":"write_the_column_headers_to_the_worksheet","children":[],"call":["@worksheet write_string ","col_data name ","@param [] != ","@param [] ","col_data name_format "]}," Writexlsx Package Table overrite_the_defaults_with_any_use_defined_values":{"type":"method","name":"overrite_the_defaults_with_any_use_defined_values","children":[],"call":["@col_formats []= ","user_data [] ","col_data format= ","user_data [] get_dxf_index "," total_label_only "," handle_the_function_for_the_table_row "," handle_the_column_formula ","col_data name= ","user_data [] empty? ! ","user_data [] empty? ","@param [] [] ","@param [] ","col_data name_format= ","@seen_name []= ","col_data name downcase ","col_data name "," raise ","@seen_name [] ","@param [] []  [] ","@param [] []  [] get_dxf_index ","@param [] []  [] empty? ! ","@param [] []  [] empty? "]}," Writexlsx Package Table add_the_table_columns":{"type":"method","name":"add_the_table_columns","children":[],"call":[" write_the_column_headers_to_the_worksheet ","@columns << "," overrite_the_defaults_with_any_use_defined_values ","Package Table ColumnData  new ","@param [] ","col_id + ","(irange\n  (ivar :@col1)\n  (ivar :@col2)) each "]}," Writexlsx Package Table ColumnData initialize":{"type":"method","name":"initialize","children":[],"call":["param [] ","id - "]}," Writexlsx Package Relationships add_ms_package_relationship":{"type":"method","name":"add_ms_package_relationship","children":[],"call":["@rels push ","schema + "]}," Writexlsx Package Packager add_vba_project":{"type":"method","name":"add_vba_project","children":[],"call":["FileUtils  copy ","FileUtils  mkdir_p ","@workbook vba_project ","@workbook @workbook vba_project  "]}," Writexlsx Package ContentTypes change_the_workbook_xml_content_type_from_xlsx_to_xlsm":{"type":"method","name":"change_the_workbook_xml_content_type_from_xlsx_to_xlsm","children":[],"call":["arr []= ","arr [] == ","arr [] ","@overrides collect! "]}," Writexlsx Package ContentTypes add_vba_project":{"type":"method","name":"add_vba_project","children":[],"call":[" add_default "," change_the_workbook_xml_content_type_from_xlsx_to_xlsm "]}," Writexlsx Package ExpressionFormat write_cf_rule":{"type":"method","name":"write_cf_rule","children":[],"call":[" write_cf_rule_formula_tag "," criteria "]}," Writexlsx Package DataBarFormat write_data_bar":{"type":"method","name":"write_data_bar","children":[],"call":[" write_color "," bar_color "," write_cfvo "," max_value "," max_type "," min_value "," min_type ","@writer tag_elements ","attributes << "," ptrue? "," bar_only "]}," Writexlsx Package DataBarFormat write_cf_rule":{"type":"method","name":"write_cf_rule","children":[],"call":[" write_data_bar ","@writer tag_elements "," attributes "," write_data_bar_ext "," ptrue? ","@param [] "]}," Writexlsx Package ColorScaleFormat write_color_scale":{"type":"method","name":"write_color_scale","children":[],"call":[" write_color "," max_color "," mid_color "," min_color "," write_cfvo "," max_value "," max_type "," mid_value "," mid_type "," min_value "," min_type ","@writer tag_elements "]}," Writexlsx Package ColorScaleFormat write_cf_rule":{"type":"method","name":"write_cf_rule","children":[],"call":[" write_color_scale ","@writer tag_elements "," attributes "]}," Writexlsx Package BlanksOrErrorsFormat write_cf_rule":{"type":"method","name":"write_cf_rule","children":[],"call":[" write_cf_rule_formula_tag "]}," Writexlsx Package TimePeriodFormat write_cf_rule":{"type":"method","name":"write_cf_rule","children":[],"call":[" write_cf_rule_formula_tag "]}," Writexlsx Package TimePeriodFormat attributes":{"type":"method","name":"attributes","children":[],"call":[" << << "," criteria "," << "]}," Writexlsx Package TextOrWithFormat write_cf_rule":{"type":"method","name":"write_cf_rule","children":[],"call":[" write_cf_rule_formula_tag "]}," Writexlsx Package TextOrWithFormat attributes":{"type":"method","name":"attributes","children":[],"call":["attr << << "," value ","attr << "," criteria "]}," Writexlsx Package Top10Format attributes":{"type":"method","name":"attributes","children":[],"call":["attr << << "," value ","attr << "," direction "," criteria == "," criteria "]}," Writexlsx Package AboveAverageFormat attributes":{"type":"method","name":"attributes","children":[],"call":["attr << << ","$~ [] ","attr << "," criteria =~ "," criteria "]}," Writexlsx Package CellIsFormat write_cf_rule":{"type":"method","name":"write_cf_rule","children":[],"call":[" write_cf_rule_formula_tag "," value "," write_formula_tag "," maximum "," minimum ","@writer tag_elements "," attributes ","(send\n  (lvar :quoted_value) :=~\n  (regexp\n    (str \"^\\\".*\\\"$\")\n    (regopt))) ! ","quoted_value =~ ","(send\n  (lvar :quoted_value) :=~\n  (lvar :numeric_regex)) ! ","(send\n  (lvar :quoted_value) :=~\n  (regexp\n    (str \"(\\\\$?)([A-Z]{1,3})(\\\\$?)(\\\\d+)\")\n    (regopt))) ! "," value to_s ","(send\n  (lvar : value to_s ) :=~\n  (regexp\n    (str \"^\\\".*\\\"$\")\n    (regopt))) ! "," value to_s  =~ ","(send\n  (lvar : value to_s ) :=~\n  (lvar :numeric_regex)) ! ","(send\n  (lvar : value to_s ) :=~\n  (regexp\n    (str \"(\\\\$?)([A-Z]{1,3})(\\\\$?)(\\\\d+)\")\n    (regopt))) ! "]}," Writexlsx Package CellIsFormat attributes":{"type":"method","name":"attributes","children":[],"call":[" << << "," criteria "," << "]}," Writexlsx Package ConditionalFormat date_1904?":{"type":"method","name":"date_1904?","children":[],"call":["@worksheet date_1904? "]}," Writexlsx Package ConditionalFormat valid_criteria_type_for_conditional_formatting":{"type":"method","name":"valid_criteria_type_for_conditional_formatting","children":[],"call":[]}," Writexlsx Package ConditionalFormat valid_type_for_conditional_formatting":{"type":"method","name":"valid_type_for_conditional_formatting","children":[],"call":[]}," Writexlsx Package ConditionalFormat valid_parameter_for_conditional_formatting":{"type":"method","name":"valid_parameter_for_conditional_formatting","children":[],"call":[]}," Writexlsx Package ConditionalFormat convert_date_time_if_required":{"type":"method","name":"convert_date_time_if_required","children":[],"call":[" raise "," convert_date_time ","val =~ ","val to_s =~ ","val to_s "," convert_ convert_date_time  "]}," Writexlsx Package ConditionalFormat check_conditional_formatting_parameters":{"type":"method","name":"check_conditional_formatting_parameters","children":[],"call":[" raise "," convert_date_time_value ","param [] == ","param [] ","param []= ","param has_key? "," convert_date_time_if_required ","(str \"date\") include? "," valid_criteria_type_for_conditional_formatting [] ","param [] downcase "," valid_criteria_type_for_conditional_formatting "," valid_criteria_type_for_conditional_formatting has_key? "," valid_type_for_conditional_formatting [] "," valid_type_for_conditional_formatting "," valid_type_for_conditional_formatting has_key? ","(send\n  (send\n    (send\n      (lvar :param) :keys) :uniq) :-\n  (send nil :valid_parameter_for_conditional_formatting)) empty? ","param keys uniq - "," valid_parameter_for_conditional_formatting ","param keys uniq ","param keys "," set_icon_properties ","param [] =~ "," icon_set_styles [] "," icon_set_styles ","Unknown icon style '$param->{icon_style}' for parameter  + "," icon_set_styles [] ! ","The 'icon_style' parameter must be specified when  + ","param [] ! "," valid_type_for_conditional_formatting has_key? ! ","param has_key? ! ","(send\n  (send\n    (send\n      (lvar :param) :keys) :uniq) :-\n  (send nil :valid_parameter_for_conditional_formatting)) empty? ! ","(or\n  (send nil :convert_date_time_value\n    (lvar :param)\n    (sym :value))\n  (send nil :convert_date_time_value\n    (lvar :param)\n    (sym :maximum))) ! "]}," Writexlsx Package ConditionalFormat param_for_conditional_formatting":{"type":"method","name":"param_for_conditional_formatting","children":[],"call":["@worksheet dxf_priority ","@param []= ","@param [] get_dxf_index ","@param [] "," check_conditional_formatting_parameters "," row_col_param_for_conditional_formatting ","(sym :data_bar_2010) each "]}," Writexlsx Package ConditionalFormat row_col_param_for_conditional_formatting":{"type":"method","name":"row_col_param_for_conditional_formatting","children":[],"call":["col1 > ","row1 > "," check_dimensions "," raise ","(lvar :row1) include? ","row2 respond_to? "," row_col_notation ","args [] gsub gsub ","args [] gsub ","args [] ","args [] =~ ","args [] sub gsub gsub ","args [] sub gsub ","args [] sub ","param dup ","args [] to_s =~ ","args [] to_s ","row_col_array size == ","row_col_array size ","args first ","args []  respond_to? ","args []  dup "," row_col_notation  size == "," row_col_notation  size "]}," Writexlsx Package ConditionalFormat range_start_cell_for_conditional_formatting":{"type":"method","name":"range_start_cell_for_conditional_formatting","children":[],"call":[" xl_rowcol_to_cell "," xl_range ","col1 == ","row1 == "," row_col_param_for_conditional_formatting "," xl_ xl_range  "," xl_ xl_rowcol_to_cell  "]}," Writexlsx Package ConditionalFormat get_palette_color":{"type":"method","name":"get_palette_color","children":[],"call":["@worksheet get_palette_color "]}," Writexlsx Package ConditionalFormat handling_of_blanks_error_types":{"type":"method","name":"handling_of_blanks_error_types","children":[],"call":["@param []= "," get_palette_color ","@param [] "," palette_color ","@param [] to_s sub ","@param [] to_s "," range ","@param [] == ","@worksheet excel_version= "," ptrue? ","@param [] ! "]}," Writexlsx Package ConditionalFormat handling_of_time_period_criteria":{"type":"method","name":"handling_of_time_period_criteria","children":[],"call":[" raise ","@param [] ","@param []= "]}," Writexlsx Package ConditionalFormat handling_of_text_criteria":{"type":"method","name":"handling_of_text_criteria","children":[],"call":[" raise ","@param [] ","@param []= ","@param [] size "]}," Writexlsx Package ConditionalFormat range_param_for_conditional_formatting":{"type":"method","name":"range_param_for_conditional_formatting","children":[],"call":[" handling_of_blanks_error_types "," handling_of_time_period_criteria ","@param [] == ","@param [] "," handling_of_text_criteria "," param_for_conditional_formatting "," range_start_cell_for_conditional_formatting "]}," Writexlsx Package ConditionalFormat bar_color":{"type":"method","name":"bar_color","children":[],"call":["@param [] "]}," Writexlsx Package ConditionalFormat max_color":{"type":"method","name":"max_color","children":[],"call":["@param [] "]}," Writexlsx Package ConditionalFormat max_value":{"type":"method","name":"max_value","children":[],"call":["@param [] "]}," Writexlsx Package ConditionalFormat max_type":{"type":"method","name":"max_type","children":[],"call":["@param [] "]}," Writexlsx Package ConditionalFormat mid_color":{"type":"method","name":"mid_color","children":[],"call":["@param [] "]}," Writexlsx Package ConditionalFormat mid_value":{"type":"method","name":"mid_value","children":[],"call":["@param [] "]}," Writexlsx Package ConditionalFormat mid_type":{"type":"method","name":"mid_type","children":[],"call":["@param [] "]}," Writexlsx Package ConditionalFormat min_color":{"type":"method","name":"min_color","children":[],"call":["@param [] "]}," Writexlsx Package ConditionalFormat min_value":{"type":"method","name":"min_value","children":[],"call":["@param [] "]}," Writexlsx Package ConditionalFormat min_type":{"type":"method","name":"min_type","children":[],"call":["@param [] "]}," Writexlsx Package ConditionalFormat formula":{"type":"method","name":"formula","children":[],"call":["@param [] "]}," Writexlsx Package ConditionalFormat direction":{"type":"method","name":"direction","children":[],"call":["@param [] "]}," Writexlsx Package ConditionalFormat value":{"type":"method","name":"value","children":[],"call":["@param [] "]}," Writexlsx Package ConditionalFormat minimum":{"type":"method","name":"minimum","children":[],"call":["@param [] "]}," Writexlsx Package ConditionalFormat maximum":{"type":"method","name":"maximum","children":[],"call":["@param [] "]}," Writexlsx Package ConditionalFormat criteria":{"type":"method","name":"criteria","children":[],"call":["@param [] "]}," Writexlsx Package ConditionalFormat priority":{"type":"method","name":"priority","children":[],"call":["@param [] "]}," Writexlsx Package ConditionalFormat format":{"type":"method","name":"format","children":[],"call":["@param [] "]}," Writexlsx Package ConditionalFormat type":{"type":"method","name":"type","children":[],"call":["@param [] "]}," Writexlsx Package ConditionalFormat attributes":{"type":"method","name":"attributes","children":[],"call":["attr << << "," priority ","attr << "," format "," type "," stop_if_true "]}," Writexlsx Package ConditionalFormat write_cfvo":{"type":"method","name":"write_cfvo","children":[],"call":["@writer empty_tag ","attributes << "," ptrue? "]}," Writexlsx Package ConditionalFormat write_formula_tag":{"type":"method","name":"write_formula_tag","children":[],"call":["@writer data_element ","data sub ","data respond_to? ","@writer data sub _element ","data sub  sub ","data sub  respond_to? "]}," Writexlsx Package ConditionalFormat write_cf_rule_formula_tag":{"type":"method","name":"write_cf_rule_formula_tag","children":[],"call":[" write_formula_tag ","@writer tag_elements "," attributes "]}," Writexlsx Package ConditionalFormat write_cf_rule":{"type":"method","name":"write_cf_rule","children":[],"call":["@writer empty_tag "," attributes "]}," Writexlsx Package ConditionalFormat initialize":{"type":"method","name":"initialize","children":[],"call":["@worksheet writer "]}," Writexlsx Package ConditionalFormat factory":{"type":"method","name":"factory","children":[],"call":[]}," Writexlsx Chart write_def_rpr_r_pr_common":{"type":"method","name":"write_def_rpr_r_pr_common","children":[],"call":["@writer empty_tag "," write_a_latin ","latin_attributes empty? ! ","latin_attributes empty? "," write_a_solid_fill ","font [] ","@writer tag_elements "," ptrue? "," get_font_latin_attributes "," get_font_latin_attributes  empty? ! "," get_font_latin_attributes  empty? "," get_font_ get_font_latin_attributes  "]}," Writexlsx Chart write_gridlines_common":{"type":"method","name":"write_gridlines_common","children":[],"call":["@writer empty_tag "," write_sp_pr ","@writer tag_elements "," ptrue? ","gridlines [] [] ","gridlines [] "]}," Writexlsx Worksheet vba_codename?":{"type":"method","name":"vba_codename?","children":[],"call":[" ptrue? "]}," Writexlsx Worksheet button_params":{"type":"method","name":"button_params","children":[],"call":["button []= ","vertices << ","params [] "," position_object_pixels ","params []= ","(send\n  (float 0.5) :+\n  (send\n    (lvar :params) :[]\n    (sym :height))) to_i ","0.5 + ","(send\n  (float 0.5) :+\n  (send\n    (lvar :params) :[]\n    (sym :width))) to_i ","params [] * ","params [] ! ","1 + ","@buttons_array size ","button vertices= ","button macro= ","button font= ","Writexlsx Package Button  new ","button description= ","Writexlsx Package Button  new  []= "," position_object_pixels  << ","@Writexlsx Package Button  new s_array size ","button  position_object_pixels = ","Writexlsx Package Button  new  vertices= ","Writexlsx Package Button  new  macro= ","Writexlsx Package Button  new  font= ","Writexlsx Package Button  new  description= "]}," Writexlsx Worksheet prepare_vml_objects":{"type":"method","name":"prepare_vml_objects","children":[],"call":["start_data_id + ","(irange\n  (int 1)\n  (begin\n    (send\n      (lvar :count) :/\n      (int 1024)))) each ","count / ","@comments size ","@external_comment_links << ","@comments sorted_comments "," has_comments? ","@external_vml_links << ","vml_data_id + ","(irange\n  (int 1)\n  (send nil :num_comments_block)) each "," num_comments_block "," set_external_comment_links "," set_external_vml_links ","(irange\n  (int 1)\n  (begin\n    (send\n      (lvar :@comments size ) :/\n      (int 1024)))) each ","@comments size  / "]}," Writexlsx Worksheet buttons_data":{"type":"method","name":"buttons_data","children":[],"call":[]}," Writexlsx Worksheet has_vml?":{"type":"method","name":"has_vml?","children":[],"call":[]}," Writexlsx Worksheet insert_button":{"type":"method","name":"insert_button","children":[],"call":["@buttons_array << "," button_params "," row_col_notation "]}," Writexlsx Workbook prepare_vml_objects":{"type":"method","name":"prepare_vml_objects","children":[],"call":["@formats << ","format get_xf_index ","Format  new ","comment_files > ","1024 * ","(send\n  (begin\n    (send\n      (int 1024) :+\n      (send\n        (lvar :sheet) :comments_count))) :/\n  (float 1024.0)) to_i ","(send\n  (int 1024) :+\n  (send\n    (lvar :sheet) :comments_count)) / ","1024 + ","sheet comments_count ","1 * ","sheet prepare_vml_objects ","sheet has_comments? ","sheet has_vml? ","@worksheets each ","@formats formats << ","@formats formats "," add_font_format_for_cell_comments "," num_comment_files > "," num_comment_files ","1 + ","sheet num_comments_block ","(send\n  (ivar :@worksheets) :select) each ","@worksheets select ","sheet prepare_header_vml_objects ","sheet has_header_vml? ","sheet has_header_vml? ! ","sheet has_vml? ! "," set_vba_name ","@vba_codename ! ","sheet set_vba_name ","sheet vba_codename ! ","sheet vba_codename ","sheet buttons_data empty? ","sheet buttons_data ","@Format  new s << ","Format  new  get_xf_index ","(send\n  (begin\n    (send\n      (int 1024) :+\n      (send\n        (lvar :sheet) :comments_sheet prepare_vml_objects ))) :/\n  (float 1024.0)) to_i ","(send\n  (int 1024) :+\n  (send\n    (lvar :sheet) :comments_sheet prepare_vml_objects )) / ","sheet comments_sheet prepare_vml_objects  ","@Format  new s Format  new s << ","@Format  new s Format  new s "," add_font_Format  new _for_cell_comments "]}," Writexlsx Package Vml write_fmla_macro":{"type":"method","name":"write_fmla_macro","children":[],"call":["@writer data_element "]}," Writexlsx Package Vml write_text_valign":{"type":"method","name":"write_text_valign","children":[],"call":["@writer data_element "]}," Writexlsx Package Vml write_text_halign":{"type":"method","name":"write_text_halign","children":[],"call":["@writer data_element "]}," Writexlsx Package Vml write_print_object":{"type":"method","name":"write_print_object","children":[],"call":["@writer data_element "]}," Writexlsx Package Vml write_button_client_data":{"type":"method","name":"write_button_client_data","children":[],"call":[" write_text_valign "," write_text_halign "," write_fmla_macro ","button [] "," write_auto_fill "," write_print_object "," write_anchor ","@writer tag_elements "]}," Writexlsx Package Vml write_comment_client_data":{"type":"method","name":"write_comment_client_data","children":[],"call":[" write_visible ","comment visible nil? ! ","comment visible nil? ","comment visible ","comment visible != "," write_column ","comment col "," write_row ","comment row "," write_auto_fill "," write_anchor ","comment vertices "," write_size_with_cells "," write_move_with_cells ","@writer tag_elements "]}," Writexlsx Package Vml write_font":{"type":"method","name":"write_font","children":[],"call":["@writer data_element ","font [] "]}," Writexlsx Package Vml write_button_textbox":{"type":"method","name":"write_button_textbox","children":[],"call":[" write_div ","@writer tag_elements "]}," Writexlsx Package Vml write_comment_textbox":{"type":"method","name":"write_comment_textbox","children":[],"call":[" write_div ","@writer tag_elements "]}," Writexlsx Package Vml write_button_fill":{"type":"method","name":"write_button_fill","children":[],"call":["@writer empty_tag "]}," Writexlsx Package Vml write_comment_fill":{"type":"method","name":"write_comment_fill","children":[],"call":["@writer empty_tag "]}," Writexlsx Package Vml write_button_shape":{"type":"method","name":"write_button_shape","children":[],"call":[" write_button_client_data "," write_button_textbox ","button [] "," write_rotation_lock "," write_button_fill ","@writer tag_elements ","position:absolute; + + + + + + + + + + + + + + + + ","position:absolute; + + + + + + + + + + + + + + + ","position:absolute; + + + + + + + + + + + + + + ","position:absolute; + + + + + + + + + + + + + ","position:absolute; + + + + + + + + + + + + ","position:absolute; + + + + + + + + + + + ","position:absolute; + + + + + + + + + + ","position:absolute; + + + + + + + + + ","position:absolute; + + + + + + + + ","position:absolute; + + + + + + + ","position:absolute; + + + + + + ","position:absolute; + + + + + ","position:absolute; + + + + ","position:absolute; + + + ","position:absolute; + + ","position:absolute; + "," float_to_str "," pixels_to_points "]}," Writexlsx Package Vml write_comment_shape":{"type":"method","name":"write_comment_shape","children":[],"call":[" write_comment_client_data "," write_comment_textbox "," write_comment_path "," write_shadow "," write_comment_fill ","@writer tag_elements ","comment color ","position:absolute; + + + + + + + + + + + + + + + + + ","position:absolute; + + + + + + + + + + + + + + + + ","position:absolute; + + + + + + + + + + + + + + + ","position:absolute; + + + + + + + + + + + + + + ","position:absolute; + + + + + + + + + + + + + ","position:absolute; + + + + + + + + + + + + ","position:absolute; + + + + + + + + + + + ","position:absolute; + + + + + + + + + + ","position:absolute; + + + + + + + + + ","position:absolute; + + + + + + + + ","position:absolute; + + + + + + + ","position:absolute; + + + + + + ","position:absolute; + + + + + ","position:absolute; + + + + ","position:absolute; + + + ","position:absolute; + + ","position:absolute; + "," float_to_str ","comment visible nil? ! ","comment visible nil? ","comment visible ","comment visible != "," pixels_to_points ","comment vertices ","_x0000_s + ","id to_s ","_x0000_s +  to_s "]}," Writexlsx Package Vml write_rotation_lock":{"type":"method","name":"write_rotation_lock","children":[],"call":["@writer empty_tag "]}," Writexlsx Package Vml write_shapetype_lock":{"type":"method","name":"write_shapetype_lock","children":[],"call":["@writer empty_tag "]}," Writexlsx Package Vml write_button_path":{"type":"method","name":"write_button_path","children":[],"call":["@writer empty_tag "]}," Writexlsx Package Vml write_comment_path":{"type":"method","name":"write_comment_path","children":[],"call":["@writer empty_tag ","attributes << << ","attributes << "]}," Writexlsx Package Vml write_button_shapetype":{"type":"method","name":"write_button_shapetype","children":[],"call":[" write_shapetype_lock "," write_button_path "," write_stroke ","@writer tag_elements "]}," Writexlsx Package Vml write_comment_shapetype":{"type":"method","name":"write_comment_shapetype","children":[],"call":[" write_comment_path "," write_stroke ","@writer tag_elements "]}," Writexlsx Worksheet set_default_row":{"type":"method","name":"set_default_row","children":[],"call":[" ptrue? ","height != "]}," Writexlsx Worksheet StringCellData display_url_string?":{"type":"method","name":"display_url_string?","children":[],"call":[]}," Writexlsx Worksheet CellData display_url_string?":{"type":"method","name":"display_url_string?","children":[],"call":[]}," Writexlsx Utility write_stroke":{"type":"method","name":"write_stroke","children":[],"call":["@writer empty_tag "]}," Writexlsx Utility write_font":{"type":"method","name":"write_font","children":[],"call":["@writer data_element ","font [] "]}," Writexlsx Utility write_div":{"type":"method","name":"write_div","children":[],"call":[" write_font ","@writer tag_elements "]}," Writexlsx Utility write_auto_fill":{"type":"method","name":"write_auto_fill","children":[],"call":["@writer data_element "]}," Writexlsx Utility write_anchor":{"type":"method","name":"write_anchor","children":[],"call":["@writer data_element ","(lvar :col_start) join "," vertices ","@writer (lvar :col_start) join _element "]}," Writexlsx Utility write_comment_path":{"type":"method","name":"write_comment_path","children":[],"call":["@writer empty_tag ","attributes << << ","attributes << "]}," Writexlsx Utility write_fill":{"type":"method","name":"write_fill","children":[],"call":["@writer empty_tag "," fill_attributes "]}," Writexlsx Utility shape_style_base":{"type":"method","name":"shape_style_base","children":[],"call":[]}," Writexlsx Utility v_shape_style_base":{"type":"method","name":"v_shape_style_base","children":[],"call":[" shape_style_base "," float_to_str "," pixels_to_points "]}," Writexlsx Utility v_shape_attributes_base":{"type":"method","name":"v_shape_attributes_base","children":[],"call":["(send\n  (send nil :v_shape_style_base\n    (lvar :z_index)\n    (send nil :vertices)) :+\n  (send nil :style_addition)) join "," v_shape_style_base + "," style_addition "," v_shape_style_base "," vertices "," type "]}," Writexlsx Utility pixels_to_points":{"type":"method","name":"pixels_to_points","children":[],"call":["vertices flatten "]}," Writexlsx Utility float_to_str":{"type":"method","name":"float_to_str","children":[],"call":["float to_s ","float to_i to_s ","float to_i ","float == "]}," Writexlsx Package Comment writer=":{"type":"method","name":"writer=","children":[],"call":[]}," Writexlsx Package Comment write_client_data":{"type":"method","name":"write_client_data","children":[],"call":["@writer empty_tag "," ptrue? "," visible ","@writer data_element "," col "," row "," write_auto_fill "," write_anchor ","@writer tag_elements "]}," Writexlsx Package Comment write_textbox":{"type":"method","name":"write_textbox","children":[],"call":[" write_div ","@writer tag_elements "]}," Writexlsx Package Comment write_shadow":{"type":"method","name":"write_shadow","children":[],"call":["@writer empty_tag "]}," Writexlsx Package Comment fill_attributes":{"type":"method","name":"fill_attributes","children":[],"call":[]}," Writexlsx Package Comment visibility":{"type":"method","name":"visibility","children":[],"call":[" ptrue? "," visible "]}," Writexlsx Package Comment write_shape":{"type":"method","name":"write_shape","children":[],"call":[" write_client_data "," write_textbox "," write_comment_path "," write_shadow "," write_fill ","@writer tag_elements "," v_shape_attributes "," v_shape_ v_shape_attributes  "]}," Writexlsx Package Comment style_addition":{"type":"method","name":"style_addition","children":[],"call":[" visibility "]}," Writexlsx Package Comment type":{"type":"method","name":"type","children":[],"call":[]}," Writexlsx Package Comment v_shape_attributes":{"type":"method","name":"v_shape_attributes","children":[],"call":[" v_shape_attributes_base << << << << "," v_shape_attributes_base << << << "," v_shape_attributes_base << << "," color "," v_shape_attributes_base << "," v_shape_attributes_base ","attr << ","(send\n  (send nil :v_shape_style_base\n    (lvar :z_index)\n    (send nil :vertices)) :+\n  (send nil :style_addition)) join "," v_shape_style_base + "," style_addition "," v_shape_style_base "," vertices "," v_shape_ v_shape_attributes_base ibutes_base << << << << "," v_shape_ v_shape_attributes_base ibutes_base << << << "," v_shape_ v_shape_attributes_base ibutes_base << << "," v_shape_ v_shape_attributes_base ibutes_base << "," v_shape_ v_shape_attributes_base ibutes_base "," v_shape_attributes_base  << "]}," Writexlsx Package Button write_text_valign":{"type":"method","name":"write_text_valign","children":[],"call":["@writer data_element "]}," Writexlsx Package Button write_text_halign":{"type":"method","name":"write_text_halign","children":[],"call":["@writer data_element "]}," Writexlsx Package Button write_fmla_macro":{"type":"method","name":"write_fmla_macro","children":[],"call":["@writer data_element "," macro "]}," Writexlsx Package Button write_print_object":{"type":"method","name":"write_print_object","children":[],"call":["@writer data_element "]}," Writexlsx Package Button write_client_data":{"type":"method","name":"write_client_data","children":[],"call":[" write_text_valign "," write_text_halign "," write_fmla_macro "," write_auto_fill "," write_print_object "," write_anchor ","@writer tag_elements "]}," Writexlsx Package Button write_textbox":{"type":"method","name":"write_textbox","children":[],"call":[" write_div "," font ","@writer tag_elements "]}," Writexlsx Package Button write_rotation_lock":{"type":"method","name":"write_rotation_lock","children":[],"call":["@writer empty_tag "]}," Writexlsx Package Button fill_attributes":{"type":"method","name":"fill_attributes","children":[],"call":[]}," Writexlsx Package Button write_shape":{"type":"method","name":"write_shape","children":[],"call":[" write_client_data "," write_textbox "," write_rotation_lock "," write_fill ","@writer tag_elements "," v_shape_attributes "," v_shape_ v_shape_attributes  "]}," Writexlsx Package Button style_addition":{"type":"method","name":"style_addition","children":[],"call":[]}," Writexlsx Package Button color":{"type":"method","name":"color","children":[],"call":[]}," Writexlsx Package Button type":{"type":"method","name":"type","children":[],"call":[]}," Writexlsx Package Button v_shape_attributes":{"type":"method","name":"v_shape_attributes","children":[],"call":[" v_shape_attributes_base << << << << << << << << "," v_shape_attributes_base << << << << << << << "," v_shape_attributes_base << << << << << << "," v_shape_attributes_base << << << << << "," v_shape_attributes_base << << << << "," color "," v_shape_attributes_base << << << "," v_shape_attributes_base << << "," v_shape_attributes_base << "," v_shape_attributes_base ","attributes << ","(send\n  (send nil :v_shape_style_base\n    (lvar :z_index)\n    (send nil :vertices)) :+\n  (send nil :style_addition)) join "," v_shape_style_base + "," style_addition "," v_shape_style_base "," vertices "," description "," v_shape_ v_shape_attributes_base _base << << << << << << << << "," v_shape_ v_shape_attributes_base _base << << << << << << << "," v_shape_ v_shape_attributes_base _base << << << << << << "," v_shape_ v_shape_attributes_base _base << << << << << "," v_shape_ v_shape_attributes_base _base << << << << "," v_shape_ v_shape_attributes_base _base << << << "," v_shape_ v_shape_attributes_base _base << << "," v_shape_ v_shape_attributes_base _base << "," v_shape_ v_shape_attributes_base _base "," v_shape_attributes_base  << "]}," Writexlsx Chart size":{"type":"method","name":"size","children":[],"call":["params [] "]}," Writexlsx Chart write_d_table":{"type":"method","name":"write_d_table","children":[],"call":["@table write_d_table "]}," Writexlsx Chart set_table":{"type":"method","name":"set_table","children":[],"call":["Table  new ","@table palette= ","Table  new  palette= "]}," Writexlsx Chart set_size":{"type":"method","name":"set_size","children":[],"call":["params [] "]}," Writexlsx Table attributes":{"type":"method","name":"attributes","children":[],"call":[]}," Writexlsx Table write_d_table":{"type":"method","name":"write_d_table","children":[],"call":["writer empty_tag "," attributes "," ptrue? "," show_keys "," outline "," vertical "," horizontal ","writer tag_elements "," write_tx_pr "," font ","@writer empty_tag ","@writer tag_elements "]}," Writexlsx Table initialize":{"type":"method","name":"initialize","children":[],"call":["params [] ","params has_key? "," convert_font_args "]}," Writexlsx Worksheet comments_author=":{"type":"method","name":"comments_author=","children":[],"call":[]}," Writexlsx Worksheet zoom=":{"type":"method","name":"zoom=","children":[],"call":["scale to_i ","scale > ","scale < "]}," Writexlsx Worksheet tab_color=":{"type":"method","name":"tab_color=","children":[],"call":["Colors  new get_color ","Colors  new ","Colors  new color "]}," Writexlsx Workbook sheet_chart_count_increment":{"type":"method","name":"sheet_chart_count_increment","children":[],"call":[]}," Writexlsx Workbook make_and_check_sheet_chart_name":{"type":"method","name":"make_and_check_sheet_chart_name","children":[],"call":[" check_valid_sheetname ","BASE_NAME  [] "," ptrue? "," sheet_chart_count_increment "," sheet_chart_ sheet_chart_count_increment _increment "]}," Writexlsx Sparkline spark_styles":{"type":"method","name":"spark_styles","children":[],"call":[]}," Writexlsx Sparkline valid_sparkline_parameter":{"type":"method","name":"valid_sparkline_parameter","children":[],"call":[]}," Writexlsx Sparkline cust_max_min":{"type":"method","name":"cust_max_min","children":[],"call":["max_min == "]}," Writexlsx Sparkline set_spark_color":{"type":"method","name":"set_spark_color","children":[],"call":[" instance_variable_set "]}," Writexlsx Sparkline group_attributes":{"type":"method","name":"group_attributes","children":[],"call":["a << << ","a << "," ptrue? ","@type != ","@min != ","@max != "," cust_max_min ","  cust_max_min _min "]}," Writexlsx Sparkline count":{"type":"method","name":"count","children":[],"call":["@locations size "]}," Writexlsx Sparkline initialize":{"type":"method","name":"initialize","children":[],"call":[" set_spark_color ","ws get_palette_color ","param [] "," ptrue? ","(sym :series_color) each ","style [] "," spark_styles [] "," spark_styles ","(send\n  (lvar :date_range) :=~\n  (regexp\n    (str \"!\")\n    (regopt))) ! ","date_range =~ ","location gsub ","@locations collect! ","range =~ ","range gsub ","@ranges collect! "," raise ","@ranges size != ","@locations size ","@ranges size ","(send\n  (lvar :param) :[]\n  (sym :range)) flatten ","(send\n  (lvar :param) :[]\n  (sym :location)) flatten ","type == ","(str \"line\") include? ","(sym :location) each "," valid_sparkline_parameter [] "," valid_sparkline_parameter ","param each_key ","ws palette_color "," spark_styles []  [] "," spark_ spark_styles [] s [] "," spark_ spark_styles [] s ","(send\n  (lvar :param [] ) :=~\n  (regexp\n    (str \"!\")\n    (regopt))) ! ","(send\n  (lvar :date_range gsub ) :=~\n  (regexp\n    (str \"!\")\n    (regopt))) ! ","param []  =~ ","date_range gsub  =~ ","(send\n  (lvar :param) :[]\n  (sym :location)) flatten  collect! ","range gsub  =~ ","range gsub  gsub ","@range gsub s collect! ","(send\n  (lvar :param) :[]\n  (sym :range)) flatten  collect! ","@range gsub s size != ","(send\n  (lvar :param) :[]\n  (sym :range)) flatten  size != ","(send\n  (lvar :param) :[]\n  (sym :location)) flatten  size ","@range gsub s size ","(send\n  (lvar :param) :[]\n  (sym :range)) flatten  size ","(send\n  (lvar :param) :[]\n  (sym :range gsub )) flatten "]}," Writexlsx Shape dimensions":{"type":"method","name":"dimensions","children":[],"call":[]}," Writexlsx Shape validate":{"type":"method","name":"validate","children":[],"call":[" raise ","(str \"t\") include? ","(str \"l\") include? "]}," Writexlsx Shape auto_locate_connectors":{"type":"method","name":"auto_locate_connectors","children":[],"call":["@adjustments empty? ","smidx > ","smidy < ","smidy > ","smidx < ","(lvar :smidy) min ","(send\n  (send\n    (lvar :sls) :x_offset) :+\n  (send\n    (lvar :sls) :width)) min ","els x_offset ","sls x_offset + ","sls width ","sls x_offset ","(send\n  (lvar :emidy) :-\n  (lvar :smidy)) to_i abs ","(send\n  (lvar :emidy) :-\n  (lvar :smidy)) to_i ","emidy - ","(send\n  (send\n    (lvar :els) :x_offset) :-\n  (begin\n    (send\n      (send\n        (lvar :sls) :x_offset) :+\n      (send\n        (lvar :sls) :width)))) to_i abs ","(send\n  (send\n    (lvar :els) :x_offset) :-\n  (begin\n    (send\n      (send\n        (lvar :sls) :x_offset) :+\n      (send\n        (lvar :sls) :width)))) to_i ","els x_offset - ","connect_type == ","sy > ","(send\n  (send\n    (lvar :sls) :y_offset) :+\n  (send\n    (lvar :sls) :height)) min to_i ","(send\n  (send\n    (lvar :sls) :y_offset) :+\n  (send\n    (lvar :sls) :height)) min ","els y_offset ","sls y_offset + ","sls height ","sls y_offset ","(send\n  (send\n    (lvar :els) :y_offset) :-\n  (begin\n    (send\n      (send\n        (lvar :sls) :y_offset) :+\n      (send\n        (lvar :sls) :height)))) to_i abs ","(send\n  (send\n    (lvar :els) :y_offset) :-\n  (begin\n    (send\n      (send\n        (lvar :sls) :y_offset) :+\n      (send\n        (lvar :sls) :height)))) to_i ","els y_offset - ","(lvar :smidx) min to_i ","(lvar :smidx) min ","(send\n  (lvar :emidx) :-\n  (lvar :smidx)) to_i abs ","(send\n  (lvar :emidx) :-\n  (lvar :smidx)) to_i ","emidx - ","(send\n  (lvar :smidy) :-\n  (lvar :emidy)) abs ","smidy - ","(send\n  (lvar :smidx) :-\n  (lvar :emidx)) abs ","smidx - ","els y_offset + ","els height / ","els height ","sls height / ","els x_offset + ","els width / ","els width ","sls width / ","@start_side + ","shapes fetch ","Shape  new ","shape_hash [] ","@end_side == ","@start_side == ","@end == ","@start == ","@connect == ","connector_shapes [] ","@type chop to_sym ","@type chop ","sls x_offset +  > ","sls y_offset +  < ","sls y_offset +  > ","sls x_offset +  < ","(lvar :sls y_offset + ) min ","(send\n  (send\n    (lvar :shapes fetch ) :x_offset) :+\n  (send\n    (lvar :shapes fetch ) :width)) min ","shapes fetch  x_offset ","shapes fetch  x_offset + ","shapes fetch  width ","(send\n  (lvar :els y_offset + ) :-\n  (lvar :smidy)) to_i abs ","(send\n  (lvar :emidy) :-\n  (lvar :sls y_offset + )) to_i abs ","(send\n  (lvar :els y_offset + ) :-\n  (lvar :smidy)) to_i ","(send\n  (lvar :emidy) :-\n  (lvar :sls y_offset + )) to_i ","els y_offset +  - ","(send\n  (send\n    (lvar :shapes fetch ) :x_offset) :-\n  (begin\n    (send\n      (send\n        (lvar :sls) :x_offset) :+\n      (send\n        (lvar :sls) :width)))) to_i abs ","(send\n  (send\n    (lvar :els) :x_offset) :-\n  (begin\n    (send\n      (send\n        (lvar :shapes fetch ) :x_offset) :+\n      (send\n        (lvar :shapes fetch ) :width)))) to_i abs ","(send\n  (send\n    (lvar :shapes fetch ) :x_offset) :-\n  (begin\n    (send\n      (send\n        (lvar :sls) :x_offset) :+\n      (send\n        (lvar :sls) :width)))) to_i ","(send\n  (send\n    (lvar :els) :x_offset) :-\n  (begin\n    (send\n      (send\n        (lvar :shapes fetch ) :x_offset) :+\n      (send\n        (lvar :shapes fetch ) :width)))) to_i ","shapes fetch  x_offset - ","@start_side +  == ","(send\n  (send\n    (lvar :shapes fetch ) :y_offset) :+\n  (send\n    (lvar :shapes fetch ) :height)) min to_i ","(send\n  (send\n    (lvar :shapes fetch ) :y_offset) :+\n  (send\n    (lvar :shapes fetch ) :height)) min ","shapes fetch  y_offset ","shapes fetch  y_offset + ","shapes fetch  height ","(send\n  (send\n    (lvar :shapes fetch ) :y_offset) :-\n  (begin\n    (send\n      (send\n        (lvar :sls) :y_offset) :+\n      (send\n        (lvar :sls) :height)))) to_i abs ","(send\n  (send\n    (lvar :els) :y_offset) :-\n  (begin\n    (send\n      (send\n        (lvar :shapes fetch ) :y_offset) :+\n      (send\n        (lvar :shapes fetch ) :height)))) to_i abs ","(send\n  (send\n    (lvar :shapes fetch ) :y_offset) :-\n  (begin\n    (send\n      (send\n        (lvar :sls) :y_offset) :+\n      (send\n        (lvar :sls) :height)))) to_i ","(send\n  (send\n    (lvar :els) :y_offset) :-\n  (begin\n    (send\n      (send\n        (lvar :shapes fetch ) :y_offset) :+\n      (send\n        (lvar :shapes fetch ) :height)))) to_i ","shapes fetch  y_offset - ","(lvar :sls x_offset + ) min to_i ","(lvar :sls x_offset + ) min ","(send\n  (lvar :els x_offset + ) :-\n  (lvar :smidx)) to_i abs ","(send\n  (lvar :emidx) :-\n  (lvar :sls x_offset + )) to_i abs ","(send\n  (lvar :els x_offset + ) :-\n  (lvar :smidx)) to_i ","(send\n  (lvar :emidx) :-\n  (lvar :sls x_offset + )) to_i ","els x_offset +  - ","(send\n  (lvar :smidy) :-\n  (lvar :els y_offset + )) abs ","(send\n  (lvar :sls y_offset + ) :-\n  (lvar :emidy)) abs ","sls y_offset +  - ","(send\n  (lvar :smidx) :-\n  (lvar :els x_offset + )) abs ","(send\n  (lvar :sls x_offset + ) :-\n  (lvar :emidx)) abs ","sls x_offset +  - ","shapes fetch  height / ","shapes fetch  width / ","@type chop to_sls y_offset + m "]}," Writexlsx Shape set_position":{"type":"method","name":"set_position","children":[],"call":[]}," Writexlsx Shape calc_position_emus":{"type":"method","name":"calc_position_emus","children":[],"call":["(send\n  (lvar :y_abslt) :*\n  (int 9525)) to_i ","y_abslt * ","(send\n  (lvar :x_abslt) :*\n  (int 9525)) to_i ","x_abslt * ","(send\n  (lvar :yy2) :*\n  (int 9525)) to_i ","yy2 * ","(send\n  (lvar :xx2) :*\n  (int 9525)) to_i ","xx2 * ","(send\n  (lvar :yy1) :*\n  (int 9525)) to_i ","yy1 * ","(send\n  (lvar :xx1) :*\n  (int 9525)) to_i ","xx1 * ","r_end to_i ","c_end to_i ","r_start to_i ","c_start to_i ","(send\n  (ivar :@height) :*\n  (int 9525)) abs to_i ","(send\n  (ivar :@height) :*\n  (int 9525)) abs ","@height * ","(send\n  (ivar :@width) :*\n  (int 9525)) abs to_i ","(send\n  (ivar :@width) :*\n  (int 9525)) abs ","@width * ","worksheet position_object_pixels "]}," Writexlsx Package Vml write_shape_type_and_shape":{"type":"method","name":"write_shape_type_and_shape","children":[],"call":["obj write_shape ","data each "]}," Writexlsx Chart write_bars_base":{"type":"method","name":"write_bars_base","children":[],"call":["@writer empty_tag "," write_sp_pr ","@writer tag_elements "," ptrue? ","format [] [] ","format [] ","format fill_defined? ","format line_defined? "]}," Writexlsx Chart write_down_bars":{"type":"method","name":"write_down_bars","children":[],"call":[" write_bars_base "]}," Writexlsx Chart write_up_bars":{"type":"method","name":"write_up_bars","children":[],"call":[" write_bars_base "]}," Writexlsx Chart write_gap_width":{"type":"method","name":"write_gap_width","children":[],"call":["@writer empty_tag "]}," Writexlsx Chart write_up_down_bars":{"type":"method","name":"write_up_down_bars","children":[],"call":[" write_down_bars ","@up_down_bars [] "," write_up_bars "," write_gap_width ","@writer tag_elements "," ptrue? "]}," Writexlsx Chart write_error_val":{"type":"method","name":"write_error_val","children":[],"call":["@writer empty_tag "]}," Writexlsx Chart write_no_end_cap":{"type":"method","name":"write_no_end_cap","children":[],"call":["@writer empty_tag "]}," Writexlsx Chart write_err_val_type":{"type":"method","name":"write_err_val_type","children":[],"call":["@writer empty_tag "]}," Writexlsx Chart write_err_bar_type":{"type":"method","name":"write_err_bar_type","children":[],"call":["@writer empty_tag "]}," Writexlsx Chart write_err_dir":{"type":"method","name":"write_err_dir","children":[],"call":["@writer empty_tag "]}," Writexlsx Chart write_err_bars":{"type":"method","name":"write_err_bars","children":[],"call":[" write_sp_pr "," write_error_val ","error_bars [] ","error_bars [] != "," write_no_end_cap "," ptrue? "," write_err_val_type "," write_err_bar_type "," write_err_dir ","@writer tag_elements "," write_custom_error ","error_bars value ","error_bars type ","error_bars endcap ","error_bars direction "]}," Writexlsx Chart write_error_bars":{"type":"method","name":"write_error_bars","children":[],"call":[" write_err_bars ","error_bars [] "," ptrue? "]}," Writexlsx Chart write_d_pt_point":{"type":"method","name":"write_d_pt_point","children":[],"call":[" write_sp_pr "," write_idx ","@writer tag_elements "]}," Writexlsx Chart write_d_pt":{"type":"method","name":"write_d_pt","children":[],"call":[" write_d_pt_point "," ptrue? ","points each "]}," Writexlsx Chart write_lines_base":{"type":"method","name":"write_lines_base","children":[],"call":["@writer empty_tag "," write_sp_pr ","@writer tag_elements "," ptrue? ","lines [] [] ","lines [] ","lines line_defined? "]}," Writexlsx Chart write_drop_lines":{"type":"method","name":"write_drop_lines","children":[],"call":[" write_lines_base "]}," Writexlsx Chart write_gridlines_base":{"type":"method","name":"write_gridlines_base","children":[],"call":[" write_lines_base "," ptrue? ! "," ptrue? ","gridlines [] ","gridlines respond_to? ","@writer empty_tag "," write_sp_pr ","@writer tag_elements ","gridlines line_defined? "]}," Writexlsx Chart points_properties":{"type":"method","name":"points_properties","children":[],"call":["points << ","point []= "," fill_properties ","user_point [] "," line_properties ","user_points each ","  fill_properties _properties ","  line_properties _properties "]}," Writexlsx Chart area_properties":{"type":"method","name":"area_properties","children":[],"call":["area []= "," fill_properties ","arg [] "," line_properties ","arg [] []= ","arg []= ","pattern == "," get_swe_line_pattern "," get_swe_line_weight "," layout_properties ","  fill_properties _properties ","  line_properties _properties "," get_swe_line_pattern  == "," get_swe_ line_properties _pattern "," get_swe_line_ get_swe_line_pattern  "," get_swe_ line_properties _weight ","  layout_properties _properties "]}," Writexlsx Chart labels_properties":{"type":"method","name":"labels_properties","children":[],"call":["labels []= "," value_or_raise ","labels delete ","position empty? ","position nil? ","labels [] ","labels []  empty? ","labels []  nil? "]}," Writexlsx Chart error_bars_properties":{"type":"method","name":"error_bars_properties","children":[],"call":["error_bars []= "," line_properties ","params [] ","params [] == ","params key? "," raise ","types [] ","types key? ","params [] to_sym ","params empty? "," ptrue? ! "," ptrue? "]}," Writexlsx Chart trendline_properties":{"type":"method","name":"trendline_properties","children":[],"call":["trendline []= "," fill_properties ","trendline [] "," line_properties "," value_or_raise ","trend line_properties  []= ","  fill_properties _properties ","trend line_properties  [] ","  line_properties _properties "]}," Writexlsx Chart marker_properties":{"type":"method","name":"marker_properties","children":[],"call":["marker []= "," fill_properties ","marker [] "," line_properties "," value_or_raise ","marker_type == ","  fill_properties _properties ","  line_properties _properties ","marker []  == "]}," Writexlsx Chart fill_properties":{"type":"method","name":"fill_properties","children":[],"call":["fill []= "]}," Writexlsx Chart line_properties":{"type":"method","name":"line_properties","children":[],"call":["line []= "," value_or_raise ","line [] "]}," Writexlsx Chart set_high_low_lines":{"type":"method","name":"set_high_low_lines","children":[],"call":[" line_properties ","params [] ","Chartline  new ","  line_properties _properties ","Chart line_properties   new "]}," Writexlsx Chart set_drop_lines":{"type":"method","name":"set_drop_lines","children":[],"call":[" line_properties ","params [] ","Chartline  new ","  line_properties _properties ","Chart line_properties   new "]}," Writexlsx Chart set_up_down_bars":{"type":"method","name":"set_up_down_bars","children":[],"call":[" line_properties ","params [] [] ","params [] ","params []= ","params [] []= ","(sym :up) each ","Chartline  new "]}," Writexlsx Chart Scatter write_d_pt_point":{"type":"method","name":"write_d_pt_point","children":[],"call":[" write_sp_pr ","@writer tag_elements "," write_idx "]}," Writexlsx Chart Line write_d_pt_point":{"type":"method","name":"write_d_pt_point","children":[],"call":[" write_sp_pr ","@writer tag_elements "," write_idx "]}," Writexlsx Chart Column write_err_dir":{"type":"method","name":"write_err_dir","children":[],"call":[]}," Writexlsx Chart Bar write_err_dir":{"type":"method","name":"write_err_dir","children":[],"call":[]}," Writexlsx Chart Axis gridline_properties":{"type":"method","name":"gridline_properties","children":[],"call":["gridline []= ","@chart line_properties ","args [] "]}," Writexlsx Chart Axis write_cat_number_format":{"type":"method","name":"write_cat_number_format","children":[],"call":["writer empty_tag ","cat_has_num_fmt ! ","@num_format != ","@defaults [] "," num_fmt_attributes "," user_defined_num_fmt_set? "]}," Writexlsx Chart Axis write_number_format":{"type":"method","name":"write_number_format","children":[],"call":["writer empty_tag "," ptrue? ","@num_format != ","@defaults [] "," num_fmt_attributes "]}," Writexlsx Chart Axis merge_with_hash":{"type":"method","name":"merge_with_hash","children":[],"call":["@chart convert_font_args ","args [] ","@position downcase [] ","@position downcase "," instance_variable_set "," gridline_properties "," ptrue? ","args [] [] ","(sym :major_gridlines) each ","@chart get_data_id ","@chart process_names ","(or\n  (send nil :defaults)\n  (hash)) merge "," defaults ","@position_axis == ","@chart layout_properties "," set_axis_name_layout "," set_font_properties "," set_position_axis "," set_position "," set_major_minor_gridlines ","(sym :reverse) each "," set_axis_fill "," set_axis_line ","@chart date_category= "," set_display_units_visible "," set_display_units "," get_tick_type ","params [] ","@chart convert_font_(or\n  (send nil :defaults)\n  (hash)) merge  ","(or\n  (send nil :defaults)\n  (hash)) merge  [] ","@position downcase []  downcase [] ","args []  downcase [] ","@position downcase []  downcase ","args []  downcase ","(or\n  (send nil :defaults)\n  (hash)) merge  [] [] ","@position downcase [] _axis == ","args [] _axis == ","args []  == "]}," Writexlsx Worksheet sparkline_groups_attributes":{"type":"method","name":"sparkline_groups_attributes","children":[],"call":[]}," Writexlsx Worksheet write_ext_attributes":{"type":"method","name":"write_ext_attributes","children":[],"call":[]}," Writexlsx Worksheet write_r_id":{"type":"method","name":"write_r_id","children":[],"call":["@writer empty_tag "," r_id_attributes "]}," Writexlsx Worksheet increment_rel_id_and_write_r_id":{"type":"method","name":"increment_rel_id_and_write_r_id","children":[],"call":[" write_r_id "]}," Writexlsx Worksheet col_info_attributes":{"type":"method","name":"col_info_attributes","children":[],"call":["attributes << << ","attributes << ","collapsed != ","level != ","hidden != ","xf_index != ","max + ","min + ","width to_i ","width to_s =~ ","width to_s ","(send\n  (send\n    (begin\n      (send\n        (send\n          (lvar :width) :*\n          (const nil :MAX_DIGIT_WIDTH)) :+\n        (const nil :PADDING))) :/\n    (send\n      (const nil :MAX_DIGIT_WIDTH) :to_f)) :*\n  (int 256)) to_i / ","(send\n  (send\n    (begin\n      (send\n        (send\n          (lvar :width) :*\n          (const nil :MAX_DIGIT_WIDTH)) :+\n        (const nil :PADDING))) :/\n    (send\n      (const nil :MAX_DIGIT_WIDTH) :to_f)) :*\n  (int 256)) to_i ","(send\n  (send\n    (lvar :width) :*\n    (const nil :MAX_DIGIT_WIDTH)) :+\n  (const nil :PADDING)) / * ","(send\n  (send\n    (lvar :width) :*\n    (const nil :MAX_DIGIT_WIDTH)) :+\n  (const nil :PADDING)) / ","MAX_DIGIT_WIDTH  to_f ","width * + ","width * ","width > ","hidden == ","width nil? ","width == ","format get_xf_index ","args [] ","width - == ","width - ","(send\n  (send\n    (send\n      (begin\n        (send\n          (send\n            (begin\n              (send\n                (send\n                  (lvar :width) :*\n                  (const nil :MAX_DIGIT_WIDTH)) :+\n                (float 0.5))) :to_i) :+\n          (const nil :PADDING))) :to_i) :/\n    (send\n      (const nil :MAX_DIGIT_WIDTH) :to_f)) :*\n  (int 256)) to_i / ","(send\n  (send\n    (send\n      (begin\n        (send\n          (send\n            (begin\n              (send\n                (send\n                  (lvar :width) :*\n                  (const nil :MAX_DIGIT_WIDTH)) :+\n                (float 0.5))) :to_i) :+\n          (const nil :PADDING))) :to_i) :/\n    (send\n      (const nil :MAX_DIGIT_WIDTH) :to_f)) :*\n  (int 256)) to_i ","(send\n  (send\n    (begin\n      (send\n        (send\n          (lvar :width) :*\n          (const nil :MAX_DIGIT_WIDTH)) :+\n        (float 0.5))) :to_i) :+\n  (const nil :PADDING)) to_i / * ","(send\n  (send\n    (begin\n      (send\n        (send\n          (lvar :width) :*\n          (const nil :MAX_DIGIT_WIDTH)) :+\n        (float 0.5))) :to_i) :+\n  (const nil :PADDING)) to_i / ","(send\n  (send\n    (begin\n      (send\n        (send\n          (lvar :width) :*\n          (const nil :MAX_DIGIT_WIDTH)) :+\n        (float 0.5))) :to_i) :+\n  (const nil :PADDING)) to_i ","(send\n  (send\n    (lvar :width) :*\n    (const nil :MAX_DIGIT_WIDTH)) :+\n  (float 0.5)) to_i + ","(send\n  (send\n    (lvar :width) :*\n    (const nil :MAX_DIGIT_WIDTH)) :+\n  (float 0.5)) to_i ","(send\n  (send\n    (send\n      (begin\n        (send\n          (send\n            (lvar :width) :*\n            (begin\n              (send\n                (const nil :MAX_DIGIT_WIDTH) :+\n                (const nil :PADDING)))) :+\n          (float 0.5))) :to_i) :/\n    (send\n      (const nil :MAX_DIGIT_WIDTH) :to_f)) :*\n  (int 256)) to_i / ","(send\n  (send\n    (send\n      (begin\n        (send\n          (send\n            (lvar :width) :*\n            (begin\n              (send\n                (const nil :MAX_DIGIT_WIDTH) :+\n                (const nil :PADDING)))) :+\n          (float 0.5))) :to_i) :/\n    (send\n      (const nil :MAX_DIGIT_WIDTH) :to_f)) :*\n  (int 256)) to_i ","(send\n  (send\n    (lvar :width) :*\n    (begin\n      (send\n        (const nil :MAX_DIGIT_WIDTH) :+\n        (const nil :PADDING)))) :+\n  (float 0.5)) to_i / * ","(send\n  (send\n    (lvar :width) :*\n    (begin\n      (send\n        (const nil :MAX_DIGIT_WIDTH) :+\n        (const nil :PADDING)))) :+\n  (float 0.5)) to_i / ","(send\n  (send\n    (lvar :width) :*\n    (begin\n      (send\n        (const nil :MAX_DIGIT_WIDTH) :+\n        (const nil :PADDING)))) :+\n  (float 0.5)) to_i ","MAX_DIGIT_WIDTH  + ","width < ","(send\n  (send\n    (send\n      (begin\n        (send\n          (send\n            (begin\n              (send\n                (begin\n                  (send\n                    (lvar :width) :*\n                    (const nil :MAX_DIGIT_WIDTH))) :+\n                (float 0.5))) :to_i) :+\n          (const nil :PADDING))) :to_i) :/\n    (send\n      (const nil :MAX_DIGIT_WIDTH) :to_f)) :*\n  (int 256)) to_i / ","(send\n  (send\n    (send\n      (begin\n        (send\n          (send\n            (begin\n              (send\n                (begin\n                  (send\n                    (lvar :width) :*\n                    (const nil :MAX_DIGIT_WIDTH))) :+\n                (float 0.5))) :to_i) :+\n          (const nil :PADDING))) :to_i) :/\n    (send\n      (const nil :MAX_DIGIT_WIDTH) :to_f)) :*\n  (int 256)) to_i ","(send\n  (send\n    (begin\n      (send\n        (begin\n          (send\n            (lvar :width) :*\n            (const nil :MAX_DIGIT_WIDTH))) :+\n        (float 0.5))) :to_i) :+\n  (const nil :PADDING)) to_i / * ","(send\n  (send\n    (begin\n      (send\n        (begin\n          (send\n            (lvar :width) :*\n            (const nil :MAX_DIGIT_WIDTH))) :+\n        (float 0.5))) :to_i) :+\n  (const nil :PADDING)) to_i / ","(send\n  (send\n    (begin\n      (send\n        (begin\n          (send\n            (lvar :width) :*\n            (const nil :MAX_DIGIT_WIDTH))) :+\n        (float 0.5))) :to_i) :+\n  (const nil :PADDING)) to_i ","(send\n  (begin\n    (send\n      (lvar :width) :*\n      (const nil :MAX_DIGIT_WIDTH))) :+\n  (float 0.5)) to_i + ","(send\n  (begin\n    (send\n      (lvar :width) :*\n      (const nil :MAX_DIGIT_WIDTH))) :+\n  (float 0.5)) to_i ","(send\n  (lvar :width) :*\n  (const nil :MAX_DIGIT_WIDTH)) + ","(send\n  (send\n    (send\n      (begin\n        (send\n          (begin\n            (send\n              (lvar :width) :*\n              (begin\n                (send\n                  (const nil :MAX_DIGIT_WIDTH) :+\n                  (const nil :PADDING))))) :+\n          (float 0.5))) :to_i) :/\n    (send\n      (const nil :MAX_DIGIT_WIDTH) :to_f)) :*\n  (int 256)) to_i / ","(send\n  (send\n    (send\n      (begin\n        (send\n          (begin\n            (send\n              (lvar :width) :*\n              (begin\n                (send\n                  (const nil :MAX_DIGIT_WIDTH) :+\n                  (const nil :PADDING))))) :+\n          (float 0.5))) :to_i) :/\n    (send\n      (const nil :MAX_DIGIT_WIDTH) :to_f)) :*\n  (int 256)) to_i ","(send\n  (begin\n    (send\n      (lvar :width) :*\n      (begin\n        (send\n          (const nil :MAX_DIGIT_WIDTH) :+\n          (const nil :PADDING))))) :+\n  (float 0.5)) to_i / * ","(send\n  (begin\n    (send\n      (lvar :width) :*\n      (begin\n        (send\n          (const nil :MAX_DIGIT_WIDTH) :+\n          (const nil :PADDING))))) :+\n  (float 0.5)) to_i / ","(send\n  (begin\n    (send\n      (lvar :width) :*\n      (begin\n        (send\n          (const nil :MAX_DIGIT_WIDTH) :+\n          (const nil :PADDING))))) :+\n  (float 0.5)) to_i ","(send\n  (lvar :width) :*\n  (begin\n    (send\n      (const nil :MAX_DIGIT_WIDTH) :+\n      (const nil :PADDING)))) + ","autofit != ","args [] autofit ","args [] collapsed ","args [] level ","args [] hidden ","args [] format ","args [] width ","format get_xf_index  != ","width to_i  to_i ","(send\n  (send\n    (begin\n      (send\n        (send\n          (lvar :width) :*\n          (const nil :MAX_DIGIT_WIDTH)) :+\n        (const nil :PADDING))) :/\n    (send\n      (const nil :MAX_DIGIT_WIDTH) :to_f)) :*\n  (int 256)) to_i /  to_i ","args []  to_i ","(send\n  (send\n    (send\n      (begin\n        (send\n          (send\n            (begin\n              (send\n                (send\n                  (lvar :width) :*\n                  (const nil :MAX_DIGIT_WIDTH)) :+\n                (float 0.5))) :to_i) :+\n          (const nil :PADDING))) :to_i) :/\n    (send\n      (const nil :MAX_DIGIT_WIDTH) :to_f)) :*\n  (int 256)) to_i /  to_i ","(send\n  (send\n    (send\n      (begin\n        (send\n          (send\n            (lvar :width) :*\n            (begin\n              (send\n                (const nil :MAX_DIGIT_WIDTH) :+\n                (const nil :PADDING)))) :+\n          (float 0.5))) :to_i) :/\n    (send\n      (const nil :MAX_DIGIT_WIDTH) :to_f)) :*\n  (int 256)) to_i /  to_i ","(send\n  (send\n    (send\n      (begin\n        (send\n          (send\n            (begin\n              (send\n                (begin\n                  (send\n                    (lvar :width) :*\n                    (const nil :MAX_DIGIT_WIDTH))) :+\n                (float 0.5))) :to_i) :+\n          (const nil :PADDING))) :to_i) :/\n    (send\n      (const nil :MAX_DIGIT_WIDTH) :to_f)) :*\n  (int 256)) to_i /  to_i ","(send\n  (send\n    (send\n      (begin\n        (send\n          (begin\n            (send\n              (lvar :width) :*\n              (begin\n                (send\n                  (const nil :MAX_DIGIT_WIDTH) :+\n                  (const nil :PADDING))))) :+\n          (float 0.5))) :to_i) :/\n    (send\n      (const nil :MAX_DIGIT_WIDTH) :to_f)) :*\n  (int 256)) to_i /  to_i ","args [] width  to_i ","width to_i  to_s =~ ","(send\n  (send\n    (begin\n      (send\n        (send\n          (lvar :width) :*\n          (const nil :MAX_DIGIT_WIDTH)) :+\n        (const nil :PADDING))) :/\n    (send\n      (const nil :MAX_DIGIT_WIDTH) :to_f)) :*\n  (int 256)) to_i /  to_s =~ ","args []  to_s =~ ","(send\n  (send\n    (send\n      (begin\n        (send\n          (send\n            (begin\n              (send\n                (send\n                  (lvar :width) :*\n                  (const nil :MAX_DIGIT_WIDTH)) :+\n                (float 0.5))) :to_i) :+\n          (const nil :PADDING))) :to_i) :/\n    (send\n      (const nil :MAX_DIGIT_WIDTH) :to_f)) :*\n  (int 256)) to_i /  to_s =~ ","(send\n  (send\n    (send\n      (begin\n        (send\n          (send\n            (lvar :width) :*\n            (begin\n              (send\n                (const nil :MAX_DIGIT_WIDTH) :+\n                (const nil :PADDING)))) :+\n          (float 0.5))) :to_i) :/\n    (send\n      (const nil :MAX_DIGIT_WIDTH) :to_f)) :*\n  (int 256)) to_i /  to_s =~ ","(send\n  (send\n    (send\n      (begin\n        (send\n          (send\n            (begin\n              (send\n                (begin\n                  (send\n                    (lvar :width) :*\n                    (const nil :MAX_DIGIT_WIDTH))) :+\n                (float 0.5))) :to_i) :+\n          (const nil :PADDING))) :to_i) :/\n    (send\n      (const nil :MAX_DIGIT_WIDTH) :to_f)) :*\n  (int 256)) to_i /  to_s =~ ","(send\n  (send\n    (send\n      (begin\n        (send\n          (begin\n            (send\n              (lvar :width) :*\n              (begin\n                (send\n                  (const nil :MAX_DIGIT_WIDTH) :+\n                  (const nil :PADDING))))) :+\n          (float 0.5))) :to_i) :/\n    (send\n      (const nil :MAX_DIGIT_WIDTH) :to_f)) :*\n  (int 256)) to_i /  to_s =~ ","args [] width  to_s =~ ","width to_i  to_s ","(send\n  (send\n    (begin\n      (send\n        (send\n          (lvar :width) :*\n          (const nil :MAX_DIGIT_WIDTH)) :+\n        (const nil :PADDING))) :/\n    (send\n      (const nil :MAX_DIGIT_WIDTH) :to_f)) :*\n  (int 256)) to_i /  to_s ","args []  to_s ","(send\n  (send\n    (send\n      (begin\n        (send\n          (send\n            (begin\n              (send\n                (send\n                  (lvar :width) :*\n                  (const nil :MAX_DIGIT_WIDTH)) :+\n                (float 0.5))) :to_i) :+\n          (const nil :PADDING))) :to_i) :/\n    (send\n      (const nil :MAX_DIGIT_WIDTH) :to_f)) :*\n  (int 256)) to_i /  to_s ","(send\n  (send\n    (send\n      (begin\n        (send\n          (send\n            (lvar :width) :*\n            (begin\n              (send\n                (const nil :MAX_DIGIT_WIDTH) :+\n                (const nil :PADDING)))) :+\n          (float 0.5))) :to_i) :/\n    (send\n      (const nil :MAX_DIGIT_WIDTH) :to_f)) :*\n  (int 256)) to_i /  to_s ","(send\n  (send\n    (send\n      (begin\n        (send\n          (send\n            (begin\n              (send\n                (begin\n                  (send\n                    (lvar :width) :*\n                    (const nil :MAX_DIGIT_WIDTH))) :+\n                (float 0.5))) :to_i) :+\n          (const nil :PADDING))) :to_i) :/\n    (send\n      (const nil :MAX_DIGIT_WIDTH) :to_f)) :*\n  (int 256)) to_i /  to_s ","(send\n  (send\n    (send\n      (begin\n        (send\n          (begin\n            (send\n              (lvar :width) :*\n              (begin\n                (send\n                  (const nil :MAX_DIGIT_WIDTH) :+\n                  (const nil :PADDING))))) :+\n          (float 0.5))) :to_i) :/\n    (send\n      (const nil :MAX_DIGIT_WIDTH) :to_f)) :*\n  (int 256)) to_i /  to_s ","args [] width  to_s ","(send\n  (send\n    (begin\n      (send\n        (send\n          (lvar :width to_i ) :*\n          (const nil :MAX_DIGIT_WIDTH)) :+\n        (const nil :PADDING))) :/\n    (send\n      (const nil :MAX_DIGIT_WIDTH) :to_f)) :*\n  (int 256)) to_i / ","(send\n  (send\n    (begin\n      (send\n        (send\n          (lvar :(send\n  (send\n    (begin\n      (send\n        (send\n          (lvar :width) :*\n          (const nil :MAX_DIGIT_WIDTH)) :+\n        (const nil :PADDING))) :/\n    (send\n      (const nil :MAX_DIGIT_WIDTH) :to_f)) :*\n  (int 256)) to_i / ) :*\n          (const nil :MAX_DIGIT_WIDTH)) :+\n        (const nil :PADDING))) :/\n    (send\n      (const nil :MAX_DIGIT_WIDTH) :to_f)) :*\n  (int 256)) to_i / ","(send\n  (send\n    (begin\n      (send\n        (send\n          (lvar :args [] ) :*\n          (const nil :MAX_DIGIT_WIDTH)) :+\n        (const nil :PADDING))) :/\n    (send\n      (const nil :MAX_DIGIT_WIDTH) :to_f)) :*\n  (int 256)) to_i / ","(send\n  (send\n    (begin\n      (send\n        (send\n          (lvar :(send\n  (send\n    (send\n      (begin\n        (send\n          (send\n            (begin\n              (send\n                (send\n                  (lvar :width) :*\n                  (const nil :MAX_DIGIT_WIDTH)) :+\n                (float 0.5))) :to_i) :+\n          (const nil :PADDING))) :to_i) :/\n    (send\n      (const nil :MAX_DIGIT_WIDTH) :to_f)) :*\n  (int 256)) to_i / ) :*\n          (const nil :MAX_DIGIT_WIDTH)) :+\n        (const nil :PADDING))) :/\n    (send\n      (const nil :MAX_DIGIT_WIDTH) :to_f)) :*\n  (int 256)) to_i / ","(send\n  (send\n    (begin\n      (send\n        (send\n          (lvar :(send\n  (send\n    (send\n      (begin\n        (send\n          (send\n            (lvar :width) :*\n            (begin\n              (send\n                (const nil :MAX_DIGIT_WIDTH) :+\n                (const nil :PADDING)))) :+\n          (float 0.5))) :to_i) :/\n    (send\n      (const nil :MAX_DIGIT_WIDTH) :to_f)) :*\n  (int 256)) to_i / ) :*\n          (const nil :MAX_DIGIT_WIDTH)) :+\n        (const nil :PADDING))) :/\n    (send\n      (const nil :MAX_DIGIT_WIDTH) :to_f)) :*\n  (int 256)) to_i / ","(send\n  (send\n    (begin\n      (send\n        (send\n          (lvar :(send\n  (send\n    (send\n      (begin\n        (send\n          (send\n            (begin\n              (send\n                (begin\n                  (send\n                    (lvar :width) :*\n                    (const nil :MAX_DIGIT_WIDTH))) :+\n                (float 0.5))) :to_i) :+\n          (const nil :PADDING))) :to_i) :/\n    (send\n      (const nil :MAX_DIGIT_WIDTH) :to_f)) :*\n  (int 256)) to_i / ) :*\n          (const nil :MAX_DIGIT_WIDTH)) :+\n        (const nil :PADDING))) :/\n    (send\n      (const nil :MAX_DIGIT_WIDTH) :to_f)) :*\n  (int 256)) to_i / ","(send\n  (send\n    (begin\n      (send\n        (send\n          (lvar :(send\n  (send\n    (send\n      (begin\n        (send\n          (begin\n            (send\n              (lvar :width) :*\n              (begin\n                (send\n                  (const nil :MAX_DIGIT_WIDTH) :+\n                  (const nil :PADDING))))) :+\n          (float 0.5))) :to_i) :/\n    (send\n      (const nil :MAX_DIGIT_WIDTH) :to_f)) :*\n  (int 256)) to_i / ) :*\n          (const nil :MAX_DIGIT_WIDTH)) :+\n        (const nil :PADDING))) :/\n    (send\n      (const nil :MAX_DIGIT_WIDTH) :to_f)) :*\n  (int 256)) to_i / ","(send\n  (send\n    (begin\n      (send\n        (send\n          (lvar :args [] width ) :*\n          (const nil :MAX_DIGIT_WIDTH)) :+\n        (const nil :PADDING))) :/\n    (send\n      (const nil :MAX_DIGIT_WIDTH) :to_f)) :*\n  (int 256)) to_i / ","(send\n  (send\n    (begin\n      (send\n        (send\n          (lvar :width to_i ) :*\n          (const nil :MAX_DIGIT_WIDTH)) :+\n        (const nil :PADDING))) :/\n    (send\n      (const nil :MAX_DIGIT_WIDTH) :to_f)) :*\n  (int 256)) to_i ","(send\n  (send\n    (begin\n      (send\n        (send\n          (lvar :(send\n  (send\n    (begin\n      (send\n        (send\n          (lvar :width) :*\n          (const nil :MAX_DIGIT_WIDTH)) :+\n        (const nil :PADDING))) :/\n    (send\n      (const nil :MAX_DIGIT_WIDTH) :to_f)) :*\n  (int 256)) to_i / ) :*\n          (const nil :MAX_DIGIT_WIDTH)) :+\n        (const nil :PADDING))) :/\n    (send\n      (const nil :MAX_DIGIT_WIDTH) :to_f)) :*\n  (int 256)) to_i ","(send\n  (send\n    (begin\n      (send\n        (send\n          (lvar :args [] ) :*\n          (const nil :MAX_DIGIT_WIDTH)) :+\n        (const nil :PADDING))) :/\n    (send\n      (const nil :MAX_DIGIT_WIDTH) :to_f)) :*\n  (int 256)) to_i ","(send\n  (send\n    (begin\n      (send\n        (send\n          (lvar :(send\n  (send\n    (send\n      (begin\n        (send\n          (send\n            (begin\n              (send\n                (send\n                  (lvar :width) :*\n                  (const nil :MAX_DIGIT_WIDTH)) :+\n                (float 0.5))) :to_i) :+\n          (const nil :PADDING))) :to_i) :/\n    (send\n      (const nil :MAX_DIGIT_WIDTH) :to_f)) :*\n  (int 256)) to_i / ) :*\n          (const nil :MAX_DIGIT_WIDTH)) :+\n        (const nil :PADDING))) :/\n    (send\n      (const nil :MAX_DIGIT_WIDTH) :to_f)) :*\n  (int 256)) to_i ","(send\n  (send\n    (begin\n      (send\n        (send\n          (lvar :(send\n  (send\n    (send\n      (begin\n        (send\n          (send\n            (lvar :width) :*\n            (begin\n              (send\n                (const nil :MAX_DIGIT_WIDTH) :+\n                (const nil :PADDING)))) :+\n          (float 0.5))) :to_i) :/\n    (send\n      (const nil :MAX_DIGIT_WIDTH) :to_f)) :*\n  (int 256)) to_i / ) :*\n          (const nil :MAX_DIGIT_WIDTH)) :+\n        (const nil :PADDING))) :/\n    (send\n      (const nil :MAX_DIGIT_WIDTH) :to_f)) :*\n  (int 256)) to_i ","(send\n  (send\n    (begin\n      (send\n        (send\n          (lvar :(send\n  (send\n    (send\n      (begin\n        (send\n          (send\n            (begin\n              (send\n                (begin\n                  (send\n                    (lvar :width) :*\n                    (const nil :MAX_DIGIT_WIDTH))) :+\n                (float 0.5))) :to_i) :+\n          (const nil :PADDING))) :to_i) :/\n    (send\n      (const nil :MAX_DIGIT_WIDTH) :to_f)) :*\n  (int 256)) to_i / ) :*\n          (const nil :MAX_DIGIT_WIDTH)) :+\n        (const nil :PADDING))) :/\n    (send\n      (const nil :MAX_DIGIT_WIDTH) :to_f)) :*\n  (int 256)) to_i ","(send\n  (send\n    (begin\n      (send\n        (send\n          (lvar :(send\n  (send\n    (send\n      (begin\n        (send\n          (begin\n            (send\n              (lvar :width) :*\n              (begin\n                (send\n                  (const nil :MAX_DIGIT_WIDTH) :+\n                  (const nil :PADDING))))) :+\n          (float 0.5))) :to_i) :/\n    (send\n      (const nil :MAX_DIGIT_WIDTH) :to_f)) :*\n  (int 256)) to_i / ) :*\n          (const nil :MAX_DIGIT_WIDTH)) :+\n        (const nil :PADDING))) :/\n    (send\n      (const nil :MAX_DIGIT_WIDTH) :to_f)) :*\n  (int 256)) to_i ","(send\n  (send\n    (begin\n      (send\n        (send\n          (lvar :args [] width ) :*\n          (const nil :MAX_DIGIT_WIDTH)) :+\n        (const nil :PADDING))) :/\n    (send\n      (const nil :MAX_DIGIT_WIDTH) :to_f)) :*\n  (int 256)) to_i ","(send\n  (send\n    (lvar :width to_i ) :*\n    (const nil :MAX_DIGIT_WIDTH)) :+\n  (const nil :PADDING)) / * ","(send\n  (send\n    (lvar :(send\n  (send\n    (begin\n      (send\n        (send\n          (lvar :width) :*\n          (const nil :MAX_DIGIT_WIDTH)) :+\n        (const nil :PADDING))) :/\n    (send\n      (const nil :MAX_DIGIT_WIDTH) :to_f)) :*\n  (int 256)) to_i / ) :*\n    (const nil :MAX_DIGIT_WIDTH)) :+\n  (const nil :PADDING)) / * ","(send\n  (send\n    (lvar :args [] ) :*\n    (const nil :MAX_DIGIT_WIDTH)) :+\n  (const nil :PADDING)) / * ","(send\n  (send\n    (lvar :(send\n  (send\n    (send\n      (begin\n        (send\n          (send\n            (begin\n              (send\n                (send\n                  (lvar :width) :*\n                  (const nil :MAX_DIGIT_WIDTH)) :+\n                (float 0.5))) :to_i) :+\n          (const nil :PADDING))) :to_i) :/\n    (send\n      (const nil :MAX_DIGIT_WIDTH) :to_f)) :*\n  (int 256)) to_i / ) :*\n    (const nil :MAX_DIGIT_WIDTH)) :+\n  (const nil :PADDING)) / * ","(send\n  (send\n    (lvar :(send\n  (send\n    (send\n      (begin\n        (send\n          (send\n            (lvar :width) :*\n            (begin\n              (send\n                (const nil :MAX_DIGIT_WIDTH) :+\n                (const nil :PADDING)))) :+\n          (float 0.5))) :to_i) :/\n    (send\n      (const nil :MAX_DIGIT_WIDTH) :to_f)) :*\n  (int 256)) to_i / ) :*\n    (const nil :MAX_DIGIT_WIDTH)) :+\n  (const nil :PADDING)) / * ","(send\n  (send\n    (lvar :(send\n  (send\n    (send\n      (begin\n        (send\n          (send\n            (begin\n              (send\n                (begin\n                  (send\n                    (lvar :width) :*\n                    (const nil :MAX_DIGIT_WIDTH))) :+\n                (float 0.5))) :to_i) :+\n          (const nil :PADDING))) :to_i) :/\n    (send\n      (const nil :MAX_DIGIT_WIDTH) :to_f)) :*\n  (int 256)) to_i / ) :*\n    (const nil :MAX_DIGIT_WIDTH)) :+\n  (const nil :PADDING)) / * ","(send\n  (send\n    (lvar :(send\n  (send\n    (send\n      (begin\n        (send\n          (begin\n            (send\n              (lvar :width) :*\n              (begin\n                (send\n                  (const nil :MAX_DIGIT_WIDTH) :+\n                  (const nil :PADDING))))) :+\n          (float 0.5))) :to_i) :/\n    (send\n      (const nil :MAX_DIGIT_WIDTH) :to_f)) :*\n  (int 256)) to_i / ) :*\n    (const nil :MAX_DIGIT_WIDTH)) :+\n  (const nil :PADDING)) / * ","(send\n  (send\n    (lvar :args [] width ) :*\n    (const nil :MAX_DIGIT_WIDTH)) :+\n  (const nil :PADDING)) / * ","(send\n  (send\n    (lvar :width to_i ) :*\n    (const nil :MAX_DIGIT_WIDTH)) :+\n  (const nil :PADDING)) / ","(send\n  (send\n    (lvar :(send\n  (send\n    (begin\n      (send\n        (send\n          (lvar :width) :*\n          (const nil :MAX_DIGIT_WIDTH)) :+\n        (const nil :PADDING))) :/\n    (send\n      (const nil :MAX_DIGIT_WIDTH) :to_f)) :*\n  (int 256)) to_i / ) :*\n    (const nil :MAX_DIGIT_WIDTH)) :+\n  (const nil :PADDING)) / ","(send\n  (send\n    (lvar :args [] ) :*\n    (const nil :MAX_DIGIT_WIDTH)) :+\n  (const nil :PADDING)) / ","(send\n  (send\n    (lvar :(send\n  (send\n    (send\n      (begin\n        (send\n          (send\n            (begin\n              (send\n                (send\n                  (lvar :width) :*\n                  (const nil :MAX_DIGIT_WIDTH)) :+\n                (float 0.5))) :to_i) :+\n          (const nil :PADDING))) :to_i) :/\n    (send\n      (const nil :MAX_DIGIT_WIDTH) :to_f)) :*\n  (int 256)) to_i / ) :*\n    (const nil :MAX_DIGIT_WIDTH)) :+\n  (const nil :PADDING)) / ","(send\n  (send\n    (lvar :(send\n  (send\n    (send\n      (begin\n        (send\n          (send\n            (lvar :width) :*\n            (begin\n              (send\n                (const nil :MAX_DIGIT_WIDTH) :+\n                (const nil :PADDING)))) :+\n          (float 0.5))) :to_i) :/\n    (send\n      (const nil :MAX_DIGIT_WIDTH) :to_f)) :*\n  (int 256)) to_i / ) :*\n    (const nil :MAX_DIGIT_WIDTH)) :+\n  (const nil :PADDING)) / ","(send\n  (send\n    (lvar :(send\n  (send\n    (send\n      (begin\n        (send\n          (send\n            (begin\n              (send\n                (begin\n                  (send\n                    (lvar :width) :*\n                    (const nil :MAX_DIGIT_WIDTH))) :+\n                (float 0.5))) :to_i) :+\n          (const nil :PADDING))) :to_i) :/\n    (send\n      (const nil :MAX_DIGIT_WIDTH) :to_f)) :*\n  (int 256)) to_i / ) :*\n    (const nil :MAX_DIGIT_WIDTH)) :+\n  (const nil :PADDING)) / ","(send\n  (send\n    (lvar :(send\n  (send\n    (send\n      (begin\n        (send\n          (begin\n            (send\n              (lvar :width) :*\n              (begin\n                (send\n                  (const nil :MAX_DIGIT_WIDTH) :+\n                  (const nil :PADDING))))) :+\n          (float 0.5))) :to_i) :/\n    (send\n      (const nil :MAX_DIGIT_WIDTH) :to_f)) :*\n  (int 256)) to_i / ) :*\n    (const nil :MAX_DIGIT_WIDTH)) :+\n  (const nil :PADDING)) / ","(send\n  (send\n    (lvar :args [] width ) :*\n    (const nil :MAX_DIGIT_WIDTH)) :+\n  (const nil :PADDING)) / ","width to_i  * + ","(send\n  (send\n    (begin\n      (send\n        (send\n          (lvar :width) :*\n          (const nil :MAX_DIGIT_WIDTH)) :+\n        (const nil :PADDING))) :/\n    (send\n      (const nil :MAX_DIGIT_WIDTH) :to_f)) :*\n  (int 256)) to_i /  * + ","args []  * + ","(send\n  (send\n    (send\n      (begin\n        (send\n          (send\n            (begin\n              (send\n                (send\n                  (lvar :width) :*\n                  (const nil :MAX_DIGIT_WIDTH)) :+\n                (float 0.5))) :to_i) :+\n          (const nil :PADDING))) :to_i) :/\n    (send\n      (const nil :MAX_DIGIT_WIDTH) :to_f)) :*\n  (int 256)) to_i /  * + ","(send\n  (send\n    (send\n      (begin\n        (send\n          (send\n            (lvar :width) :*\n            (begin\n              (send\n                (const nil :MAX_DIGIT_WIDTH) :+\n                (const nil :PADDING)))) :+\n          (float 0.5))) :to_i) :/\n    (send\n      (const nil :MAX_DIGIT_WIDTH) :to_f)) :*\n  (int 256)) to_i /  * + ","(send\n  (send\n    (send\n      (begin\n        (send\n          (send\n            (begin\n              (send\n                (begin\n                  (send\n                    (lvar :width) :*\n                    (const nil :MAX_DIGIT_WIDTH))) :+\n                (float 0.5))) :to_i) :+\n          (const nil :PADDING))) :to_i) :/\n    (send\n      (const nil :MAX_DIGIT_WIDTH) :to_f)) :*\n  (int 256)) to_i /  * + ","(send\n  (send\n    (send\n      (begin\n        (send\n          (begin\n            (send\n              (lvar :width) :*\n              (begin\n                (send\n                  (const nil :MAX_DIGIT_WIDTH) :+\n                  (const nil :PADDING))))) :+\n          (float 0.5))) :to_i) :/\n    (send\n      (const nil :MAX_DIGIT_WIDTH) :to_f)) :*\n  (int 256)) to_i /  * + ","args [] width  * + ","width to_i  * ","(send\n  (send\n    (begin\n      (send\n        (send\n          (lvar :width) :*\n          (const nil :MAX_DIGIT_WIDTH)) :+\n        (const nil :PADDING))) :/\n    (send\n      (const nil :MAX_DIGIT_WIDTH) :to_f)) :*\n  (int 256)) to_i /  * ","args []  * ","(send\n  (send\n    (send\n      (begin\n        (send\n          (send\n            (begin\n              (send\n                (send\n                  (lvar :width) :*\n                  (const nil :MAX_DIGIT_WIDTH)) :+\n                (float 0.5))) :to_i) :+\n          (const nil :PADDING))) :to_i) :/\n    (send\n      (const nil :MAX_DIGIT_WIDTH) :to_f)) :*\n  (int 256)) to_i /  * ","(send\n  (send\n    (send\n      (begin\n        (send\n          (send\n            (lvar :width) :*\n            (begin\n              (send\n                (const nil :MAX_DIGIT_WIDTH) :+\n                (const nil :PADDING)))) :+\n          (float 0.5))) :to_i) :/\n    (send\n      (const nil :MAX_DIGIT_WIDTH) :to_f)) :*\n  (int 256)) to_i /  * ","(send\n  (send\n    (send\n      (begin\n        (send\n          (send\n            (begin\n              (send\n                (begin\n                  (send\n                    (lvar :width) :*\n                    (const nil :MAX_DIGIT_WIDTH))) :+\n                (float 0.5))) :to_i) :+\n          (const nil :PADDING))) :to_i) :/\n    (send\n      (const nil :MAX_DIGIT_WIDTH) :to_f)) :*\n  (int 256)) to_i /  * ","(send\n  (send\n    (send\n      (begin\n        (send\n          (begin\n            (send\n              (lvar :width) :*\n              (begin\n                (send\n                  (const nil :MAX_DIGIT_WIDTH) :+\n                  (const nil :PADDING))))) :+\n          (float 0.5))) :to_i) :/\n    (send\n      (const nil :MAX_DIGIT_WIDTH) :to_f)) :*\n  (int 256)) to_i /  * ","args [] width  * ","width to_i  > ","(send\n  (send\n    (begin\n      (send\n        (send\n          (lvar :width) :*\n          (const nil :MAX_DIGIT_WIDTH)) :+\n        (const nil :PADDING))) :/\n    (send\n      (const nil :MAX_DIGIT_WIDTH) :to_f)) :*\n  (int 256)) to_i /  > ","args []  > ","(send\n  (send\n    (send\n      (begin\n        (send\n          (send\n            (begin\n              (send\n                (send\n                  (lvar :width) :*\n                  (const nil :MAX_DIGIT_WIDTH)) :+\n                (float 0.5))) :to_i) :+\n          (const nil :PADDING))) :to_i) :/\n    (send\n      (const nil :MAX_DIGIT_WIDTH) :to_f)) :*\n  (int 256)) to_i /  > ","(send\n  (send\n    (send\n      (begin\n        (send\n          (send\n            (lvar :width) :*\n            (begin\n              (send\n                (const nil :MAX_DIGIT_WIDTH) :+\n                (const nil :PADDING)))) :+\n          (float 0.5))) :to_i) :/\n    (send\n      (const nil :MAX_DIGIT_WIDTH) :to_f)) :*\n  (int 256)) to_i /  > ","(send\n  (send\n    (send\n      (begin\n        (send\n          (send\n            (begin\n              (send\n                (begin\n                  (send\n                    (lvar :width) :*\n                    (const nil :MAX_DIGIT_WIDTH))) :+\n                (float 0.5))) :to_i) :+\n          (const nil :PADDING))) :to_i) :/\n    (send\n      (const nil :MAX_DIGIT_WIDTH) :to_f)) :*\n  (int 256)) to_i /  > ","(send\n  (send\n    (send\n      (begin\n        (send\n          (begin\n            (send\n              (lvar :width) :*\n              (begin\n                (send\n                  (const nil :MAX_DIGIT_WIDTH) :+\n                  (const nil :PADDING))))) :+\n          (float 0.5))) :to_i) :/\n    (send\n      (const nil :MAX_DIGIT_WIDTH) :to_f)) :*\n  (int 256)) to_i /  > ","args [] width  > ","width to_i  nil? ","(send\n  (send\n    (begin\n      (send\n        (send\n          (lvar :width) :*\n          (const nil :MAX_DIGIT_WIDTH)) :+\n        (const nil :PADDING))) :/\n    (send\n      (const nil :MAX_DIGIT_WIDTH) :to_f)) :*\n  (int 256)) to_i /  nil? ","args []  nil? ","(send\n  (send\n    (send\n      (begin\n        (send\n          (send\n            (begin\n              (send\n                (send\n                  (lvar :width) :*\n                  (const nil :MAX_DIGIT_WIDTH)) :+\n                (float 0.5))) :to_i) :+\n          (const nil :PADDING))) :to_i) :/\n    (send\n      (const nil :MAX_DIGIT_WIDTH) :to_f)) :*\n  (int 256)) to_i /  nil? ","(send\n  (send\n    (send\n      (begin\n        (send\n          (send\n            (lvar :width) :*\n            (begin\n              (send\n                (const nil :MAX_DIGIT_WIDTH) :+\n                (const nil :PADDING)))) :+\n          (float 0.5))) :to_i) :/\n    (send\n      (const nil :MAX_DIGIT_WIDTH) :to_f)) :*\n  (int 256)) to_i /  nil? ","(send\n  (send\n    (send\n      (begin\n        (send\n          (send\n            (begin\n              (send\n                (begin\n                  (send\n                    (lvar :width) :*\n                    (const nil :MAX_DIGIT_WIDTH))) :+\n                (float 0.5))) :to_i) :+\n          (const nil :PADDING))) :to_i) :/\n    (send\n      (const nil :MAX_DIGIT_WIDTH) :to_f)) :*\n  (int 256)) to_i /  nil? ","(send\n  (send\n    (send\n      (begin\n        (send\n          (begin\n            (send\n              (lvar :width) :*\n              (begin\n                (send\n                  (const nil :MAX_DIGIT_WIDTH) :+\n                  (const nil :PADDING))))) :+\n          (float 0.5))) :to_i) :/\n    (send\n      (const nil :MAX_DIGIT_WIDTH) :to_f)) :*\n  (int 256)) to_i /  nil? ","args [] width  nil? ","width to_i  == ","(send\n  (send\n    (begin\n      (send\n        (send\n          (lvar :width) :*\n          (const nil :MAX_DIGIT_WIDTH)) :+\n        (const nil :PADDING))) :/\n    (send\n      (const nil :MAX_DIGIT_WIDTH) :to_f)) :*\n  (int 256)) to_i /  == ","args []  == ","(send\n  (send\n    (send\n      (begin\n        (send\n          (send\n            (begin\n              (send\n                (send\n                  (lvar :width) :*\n                  (const nil :MAX_DIGIT_WIDTH)) :+\n                (float 0.5))) :to_i) :+\n          (const nil :PADDING))) :to_i) :/\n    (send\n      (const nil :MAX_DIGIT_WIDTH) :to_f)) :*\n  (int 256)) to_i /  == ","(send\n  (send\n    (send\n      (begin\n        (send\n          (send\n            (lvar :width) :*\n            (begin\n              (send\n                (const nil :MAX_DIGIT_WIDTH) :+\n                (const nil :PADDING)))) :+\n          (float 0.5))) :to_i) :/\n    (send\n      (const nil :MAX_DIGIT_WIDTH) :to_f)) :*\n  (int 256)) to_i /  == ","(send\n  (send\n    (send\n      (begin\n        (send\n          (send\n            (begin\n              (send\n                (begin\n                  (send\n                    (lvar :width) :*\n                    (const nil :MAX_DIGIT_WIDTH))) :+\n                (float 0.5))) :to_i) :+\n          (const nil :PADDING))) :to_i) :/\n    (send\n      (const nil :MAX_DIGIT_WIDTH) :to_f)) :*\n  (int 256)) to_i /  == ","(send\n  (send\n    (send\n      (begin\n        (send\n          (begin\n            (send\n              (lvar :width) :*\n              (begin\n                (send\n                  (const nil :MAX_DIGIT_WIDTH) :+\n                  (const nil :PADDING))))) :+\n          (float 0.5))) :to_i) :/\n    (send\n      (const nil :MAX_DIGIT_WIDTH) :to_f)) :*\n  (int 256)) to_i /  == ","args [] width  == ","format get_format get_xf_index  ","args []  get_xf_index ","args [] format  get_xf_index ","width to_i  - == ","(send\n  (send\n    (begin\n      (send\n        (send\n          (lvar :width) :*\n          (const nil :MAX_DIGIT_WIDTH)) :+\n        (const nil :PADDING))) :/\n    (send\n      (const nil :MAX_DIGIT_WIDTH) :to_f)) :*\n  (int 256)) to_i /  - == ","args []  - == ","(send\n  (send\n    (send\n      (begin\n        (send\n          (send\n            (begin\n              (send\n                (send\n                  (lvar :width) :*\n                  (const nil :MAX_DIGIT_WIDTH)) :+\n                (float 0.5))) :to_i) :+\n          (const nil :PADDING))) :to_i) :/\n    (send\n      (const nil :MAX_DIGIT_WIDTH) :to_f)) :*\n  (int 256)) to_i /  - == ","(send\n  (send\n    (send\n      (begin\n        (send\n          (send\n            (lvar :width) :*\n            (begin\n              (send\n                (const nil :MAX_DIGIT_WIDTH) :+\n                (const nil :PADDING)))) :+\n          (float 0.5))) :to_i) :/\n    (send\n      (const nil :MAX_DIGIT_WIDTH) :to_f)) :*\n  (int 256)) to_i /  - == ","(send\n  (send\n    (send\n      (begin\n        (send\n          (send\n            (begin\n              (send\n                (begin\n                  (send\n                    (lvar :width) :*\n                    (const nil :MAX_DIGIT_WIDTH))) :+\n                (float 0.5))) :to_i) :+\n          (const nil :PADDING))) :to_i) :/\n    (send\n      (const nil :MAX_DIGIT_WIDTH) :to_f)) :*\n  (int 256)) to_i /  - == ","(send\n  (send\n    (send\n      (begin\n        (send\n          (begin\n            (send\n              (lvar :width) :*\n              (begin\n                (send\n                  (const nil :MAX_DIGIT_WIDTH) :+\n                  (const nil :PADDING))))) :+\n          (float 0.5))) :to_i) :/\n    (send\n      (const nil :MAX_DIGIT_WIDTH) :to_f)) :*\n  (int 256)) to_i /  - == ","args [] width  - == ","width to_i  - ","(send\n  (send\n    (begin\n      (send\n        (send\n          (lvar :width) :*\n          (const nil :MAX_DIGIT_WIDTH)) :+\n        (const nil :PADDING))) :/\n    (send\n      (const nil :MAX_DIGIT_WIDTH) :to_f)) :*\n  (int 256)) to_i /  - ","args []  - ","(send\n  (send\n    (send\n      (begin\n        (send\n          (send\n            (begin\n              (send\n                (send\n                  (lvar :width) :*\n                  (const nil :MAX_DIGIT_WIDTH)) :+\n                (float 0.5))) :to_i) :+\n          (const nil :PADDING))) :to_i) :/\n    (send\n      (const nil :MAX_DIGIT_WIDTH) :to_f)) :*\n  (int 256)) to_i /  - ","(send\n  (send\n    (send\n      (begin\n        (send\n          (send\n            (lvar :width) :*\n            (begin\n              (send\n                (const nil :MAX_DIGIT_WIDTH) :+\n                (const nil :PADDING)))) :+\n          (float 0.5))) :to_i) :/\n    (send\n      (const nil :MAX_DIGIT_WIDTH) :to_f)) :*\n  (int 256)) to_i /  - ","(send\n  (send\n    (send\n      (begin\n        (send\n          (send\n            (begin\n              (send\n                (begin\n                  (send\n                    (lvar :width) :*\n                    (const nil :MAX_DIGIT_WIDTH))) :+\n                (float 0.5))) :to_i) :+\n          (const nil :PADDING))) :to_i) :/\n    (send\n      (const nil :MAX_DIGIT_WIDTH) :to_f)) :*\n  (int 256)) to_i /  - ","(send\n  (send\n    (send\n      (begin\n        (send\n          (begin\n            (send\n              (lvar :width) :*\n              (begin\n                (send\n                  (const nil :MAX_DIGIT_WIDTH) :+\n                  (const nil :PADDING))))) :+\n          (float 0.5))) :to_i) :/\n    (send\n      (const nil :MAX_DIGIT_WIDTH) :to_f)) :*\n  (int 256)) to_i /  - ","args [] width  - ","(send\n  (send\n    (send\n      (begin\n        (send\n          (send\n            (begin\n              (send\n                (send\n                  (lvar :width to_i ) :*\n                  (const nil :MAX_DIGIT_WIDTH)) :+\n                (float 0.5))) :to_i) :+\n          (const nil :PADDING))) :to_i) :/\n    (send\n      (const nil :MAX_DIGIT_WIDTH) :to_f)) :*\n  (int 256)) to_i / ","(send\n  (send\n    (send\n      (begin\n        (send\n          (send\n            (begin\n              (send\n                (send\n                  (lvar :(send\n  (send\n    (begin\n      (send\n        (send\n          (lvar :width) :*\n          (const nil :MAX_DIGIT_WIDTH)) :+\n        (const nil :PADDING))) :/\n    (send\n      (const nil :MAX_DIGIT_WIDTH) :to_f)) :*\n  (int 256)) to_i / ) :*\n                  (const nil :MAX_DIGIT_WIDTH)) :+\n                (float 0.5))) :to_i) :+\n          (const nil :PADDING))) :to_i) :/\n    (send\n      (const nil :MAX_DIGIT_WIDTH) :to_f)) :*\n  (int 256)) to_i / ","(send\n  (send\n    (send\n      (begin\n        (send\n          (send\n            (begin\n              (send\n                (send\n                  (lvar :args [] ) :*\n                  (const nil :MAX_DIGIT_WIDTH)) :+\n                (float 0.5))) :to_i) :+\n          (const nil :PADDING))) :to_i) :/\n    (send\n      (const nil :MAX_DIGIT_WIDTH) :to_f)) :*\n  (int 256)) to_i / ","(send\n  (send\n    (send\n      (begin\n        (send\n          (send\n            (begin\n              (send\n                (send\n                  (lvar :(send\n  (send\n    (send\n      (begin\n        (send\n          (send\n            (begin\n              (send\n                (send\n                  (lvar :width) :*\n                  (const nil :MAX_DIGIT_WIDTH)) :+\n                (float 0.5))) :to_i) :+\n          (const nil :PADDING))) :to_i) :/\n    (send\n      (const nil :MAX_DIGIT_WIDTH) :to_f)) :*\n  (int 256)) to_i / ) :*\n                  (const nil :MAX_DIGIT_WIDTH)) :+\n                (float 0.5))) :to_i) :+\n          (const nil :PADDING))) :to_i) :/\n    (send\n      (const nil :MAX_DIGIT_WIDTH) :to_f)) :*\n  (int 256)) to_i / ","(send\n  (send\n    (send\n      (begin\n        (send\n          (send\n            (begin\n              (send\n                (send\n                  (lvar :(send\n  (send\n    (send\n      (begin\n        (send\n          (send\n            (lvar :width) :*\n            (begin\n              (send\n                (const nil :MAX_DIGIT_WIDTH) :+\n                (const nil :PADDING)))) :+\n          (float 0.5))) :to_i) :/\n    (send\n      (const nil :MAX_DIGIT_WIDTH) :to_f)) :*\n  (int 256)) to_i / ) :*\n                  (const nil :MAX_DIGIT_WIDTH)) :+\n                (float 0.5))) :to_i) :+\n          (const nil :PADDING))) :to_i) :/\n    (send\n      (const nil :MAX_DIGIT_WIDTH) :to_f)) :*\n  (int 256)) to_i / ","(send\n  (send\n    (send\n      (begin\n        (send\n          (send\n            (begin\n              (send\n                (send\n                  (lvar :(send\n  (send\n    (send\n      (begin\n        (send\n          (send\n            (begin\n              (send\n                (begin\n                  (send\n                    (lvar :width) :*\n                    (const nil :MAX_DIGIT_WIDTH))) :+\n                (float 0.5))) :to_i) :+\n          (const nil :PADDING))) :to_i) :/\n    (send\n      (const nil :MAX_DIGIT_WIDTH) :to_f)) :*\n  (int 256)) to_i / ) :*\n                  (const nil :MAX_DIGIT_WIDTH)) :+\n                (float 0.5))) :to_i) :+\n          (const nil :PADDING))) :to_i) :/\n    (send\n      (const nil :MAX_DIGIT_WIDTH) :to_f)) :*\n  (int 256)) to_i / ","(send\n  (send\n    (send\n      (begin\n        (send\n          (send\n            (begin\n              (send\n                (send\n                  (lvar :(send\n  (send\n    (send\n      (begin\n        (send\n          (begin\n            (send\n              (lvar :width) :*\n              (begin\n                (send\n                  (const nil :MAX_DIGIT_WIDTH) :+\n                  (const nil :PADDING))))) :+\n          (float 0.5))) :to_i) :/\n    (send\n      (const nil :MAX_DIGIT_WIDTH) :to_f)) :*\n  (int 256)) to_i / ) :*\n                  (const nil :MAX_DIGIT_WIDTH)) :+\n                (float 0.5))) :to_i) :+\n          (const nil :PADDING))) :to_i) :/\n    (send\n      (const nil :MAX_DIGIT_WIDTH) :to_f)) :*\n  (int 256)) to_i / ","(send\n  (send\n    (send\n      (begin\n        (send\n          (send\n            (begin\n              (send\n                (send\n                  (lvar :args [] width ) :*\n                  (const nil :MAX_DIGIT_WIDTH)) :+\n                (float 0.5))) :to_i) :+\n          (const nil :PADDING))) :to_i) :/\n    (send\n      (const nil :MAX_DIGIT_WIDTH) :to_f)) :*\n  (int 256)) to_i / ","(send\n  (send\n    (send\n      (begin\n        (send\n          (send\n            (begin\n              (send\n                (send\n                  (lvar :width to_i ) :*\n                  (const nil :MAX_DIGIT_WIDTH)) :+\n                (float 0.5))) :to_i) :+\n          (const nil :PADDING))) :to_i) :/\n    (send\n      (const nil :MAX_DIGIT_WIDTH) :to_f)) :*\n  (int 256)) to_i ","(send\n  (send\n    (send\n      (begin\n        (send\n          (send\n            (begin\n              (send\n                (send\n                  (lvar :(send\n  (send\n    (begin\n      (send\n        (send\n          (lvar :width) :*\n          (const nil :MAX_DIGIT_WIDTH)) :+\n        (const nil :PADDING))) :/\n    (send\n      (const nil :MAX_DIGIT_WIDTH) :to_f)) :*\n  (int 256)) to_i / ) :*\n                  (const nil :MAX_DIGIT_WIDTH)) :+\n                (float 0.5))) :to_i) :+\n          (const nil :PADDING))) :to_i) :/\n    (send\n      (const nil :MAX_DIGIT_WIDTH) :to_f)) :*\n  (int 256)) to_i ","(send\n  (send\n    (send\n      (begin\n        (send\n          (send\n            (begin\n              (send\n                (send\n                  (lvar :args [] ) :*\n                  (const nil :MAX_DIGIT_WIDTH)) :+\n                (float 0.5))) :to_i) :+\n          (const nil :PADDING))) :to_i) :/\n    (send\n      (const nil :MAX_DIGIT_WIDTH) :to_f)) :*\n  (int 256)) to_i ","(send\n  (send\n    (send\n      (begin\n        (send\n          (send\n            (begin\n              (send\n                (send\n                  (lvar :(send\n  (send\n    (send\n      (begin\n        (send\n          (send\n            (begin\n              (send\n                (send\n                  (lvar :width) :*\n                  (const nil :MAX_DIGIT_WIDTH)) :+\n                (float 0.5))) :to_i) :+\n          (const nil :PADDING))) :to_i) :/\n    (send\n      (const nil :MAX_DIGIT_WIDTH) :to_f)) :*\n  (int 256)) to_i / ) :*\n                  (const nil :MAX_DIGIT_WIDTH)) :+\n                (float 0.5))) :to_i) :+\n          (const nil :PADDING))) :to_i) :/\n    (send\n      (const nil :MAX_DIGIT_WIDTH) :to_f)) :*\n  (int 256)) to_i ","(send\n  (send\n    (send\n      (begin\n        (send\n          (send\n            (begin\n              (send\n                (send\n                  (lvar :(send\n  (send\n    (send\n      (begin\n        (send\n          (send\n            (lvar :width) :*\n            (begin\n              (send\n                (const nil :MAX_DIGIT_WIDTH) :+\n                (const nil :PADDING)))) :+\n          (float 0.5))) :to_i) :/\n    (send\n      (const nil :MAX_DIGIT_WIDTH) :to_f)) :*\n  (int 256)) to_i / ) :*\n                  (const nil :MAX_DIGIT_WIDTH)) :+\n                (float 0.5))) :to_i) :+\n          (const nil :PADDING))) :to_i) :/\n    (send\n      (const nil :MAX_DIGIT_WIDTH) :to_f)) :*\n  (int 256)) to_i ","(send\n  (send\n    (send\n      (begin\n        (send\n          (send\n            (begin\n              (send\n                (send\n                  (lvar :(send\n  (send\n    (send\n      (begin\n        (send\n          (send\n            (begin\n              (send\n                (begin\n                  (send\n                    (lvar :width) :*\n                    (const nil :MAX_DIGIT_WIDTH))) :+\n                (float 0.5))) :to_i) :+\n          (const nil :PADDING))) :to_i) :/\n    (send\n      (const nil :MAX_DIGIT_WIDTH) :to_f)) :*\n  (int 256)) to_i / ) :*\n                  (const nil :MAX_DIGIT_WIDTH)) :+\n                (float 0.5))) :to_i) :+\n          (const nil :PADDING))) :to_i) :/\n    (send\n      (const nil :MAX_DIGIT_WIDTH) :to_f)) :*\n  (int 256)) to_i ","(send\n  (send\n    (send\n      (begin\n        (send\n          (send\n            (begin\n              (send\n                (send\n                  (lvar :(send\n  (send\n    (send\n      (begin\n        (send\n          (begin\n            (send\n              (lvar :width) :*\n              (begin\n                (send\n                  (const nil :MAX_DIGIT_WIDTH) :+\n                  (const nil :PADDING))))) :+\n          (float 0.5))) :to_i) :/\n    (send\n      (const nil :MAX_DIGIT_WIDTH) :to_f)) :*\n  (int 256)) to_i / ) :*\n                  (const nil :MAX_DIGIT_WIDTH)) :+\n                (float 0.5))) :to_i) :+\n          (const nil :PADDING))) :to_i) :/\n    (send\n      (const nil :MAX_DIGIT_WIDTH) :to_f)) :*\n  (int 256)) to_i ","(send\n  (send\n    (send\n      (begin\n        (send\n          (send\n            (begin\n              (send\n                (send\n                  (lvar :args [] width ) :*\n                  (const nil :MAX_DIGIT_WIDTH)) :+\n                (float 0.5))) :to_i) :+\n          (const nil :PADDING))) :to_i) :/\n    (send\n      (const nil :MAX_DIGIT_WIDTH) :to_f)) :*\n  (int 256)) to_i ","(send\n  (send\n    (begin\n      (send\n        (send\n          (lvar :width to_i ) :*\n          (const nil :MAX_DIGIT_WIDTH)) :+\n        (float 0.5))) :to_i) :+\n  (const nil :PADDING)) to_i / * ","(send\n  (send\n    (begin\n      (send\n        (send\n          (lvar :(send\n  (send\n    (begin\n      (send\n        (send\n          (lvar :width) :*\n          (const nil :MAX_DIGIT_WIDTH)) :+\n        (const nil :PADDING))) :/\n    (send\n      (const nil :MAX_DIGIT_WIDTH) :to_f)) :*\n  (int 256)) to_i / ) :*\n          (const nil :MAX_DIGIT_WIDTH)) :+\n        (float 0.5))) :to_i) :+\n  (const nil :PADDING)) to_i / * ","(send\n  (send\n    (begin\n      (send\n        (send\n          (lvar :args [] ) :*\n          (const nil :MAX_DIGIT_WIDTH)) :+\n        (float 0.5))) :to_i) :+\n  (const nil :PADDING)) to_i / * ","(send\n  (send\n    (begin\n      (send\n        (send\n          (lvar :(send\n  (send\n    (send\n      (begin\n        (send\n          (send\n            (begin\n              (send\n                (send\n                  (lvar :width) :*\n                  (const nil :MAX_DIGIT_WIDTH)) :+\n                (float 0.5))) :to_i) :+\n          (const nil :PADDING))) :to_i) :/\n    (send\n      (const nil :MAX_DIGIT_WIDTH) :to_f)) :*\n  (int 256)) to_i / ) :*\n          (const nil :MAX_DIGIT_WIDTH)) :+\n        (float 0.5))) :to_i) :+\n  (const nil :PADDING)) to_i / * ","(send\n  (send\n    (begin\n      (send\n        (send\n          (lvar :(send\n  (send\n    (send\n      (begin\n        (send\n          (send\n            (lvar :width) :*\n            (begin\n              (send\n                (const nil :MAX_DIGIT_WIDTH) :+\n                (const nil :PADDING)))) :+\n          (float 0.5))) :to_i) :/\n    (send\n      (const nil :MAX_DIGIT_WIDTH) :to_f)) :*\n  (int 256)) to_i / ) :*\n          (const nil :MAX_DIGIT_WIDTH)) :+\n        (float 0.5))) :to_i) :+\n  (const nil :PADDING)) to_i / * ","(send\n  (send\n    (begin\n      (send\n        (send\n          (lvar :(send\n  (send\n    (send\n      (begin\n        (send\n          (send\n            (begin\n              (send\n                (begin\n                  (send\n                    (lvar :width) :*\n                    (const nil :MAX_DIGIT_WIDTH))) :+\n                (float 0.5))) :to_i) :+\n          (const nil :PADDING))) :to_i) :/\n    (send\n      (const nil :MAX_DIGIT_WIDTH) :to_f)) :*\n  (int 256)) to_i / ) :*\n          (const nil :MAX_DIGIT_WIDTH)) :+\n        (float 0.5))) :to_i) :+\n  (const nil :PADDING)) to_i / * ","(send\n  (send\n    (begin\n      (send\n        (send\n          (lvar :(send\n  (send\n    (send\n      (begin\n        (send\n          (begin\n            (send\n              (lvar :width) :*\n              (begin\n                (send\n                  (const nil :MAX_DIGIT_WIDTH) :+\n                  (const nil :PADDING))))) :+\n          (float 0.5))) :to_i) :/\n    (send\n      (const nil :MAX_DIGIT_WIDTH) :to_f)) :*\n  (int 256)) to_i / ) :*\n          (const nil :MAX_DIGIT_WIDTH)) :+\n        (float 0.5))) :to_i) :+\n  (const nil :PADDING)) to_i / * ","(send\n  (send\n    (begin\n      (send\n        (send\n          (lvar :args [] width ) :*\n          (const nil :MAX_DIGIT_WIDTH)) :+\n        (float 0.5))) :to_i) :+\n  (const nil :PADDING)) to_i / * ","(send\n  (send\n    (begin\n      (send\n        (send\n          (lvar :width to_i ) :*\n          (const nil :MAX_DIGIT_WIDTH)) :+\n        (float 0.5))) :to_i) :+\n  (const nil :PADDING)) to_i / ","(send\n  (send\n    (begin\n      (send\n        (send\n          (lvar :(send\n  (send\n    (begin\n      (send\n        (send\n          (lvar :width) :*\n          (const nil :MAX_DIGIT_WIDTH)) :+\n        (const nil :PADDING))) :/\n    (send\n      (const nil :MAX_DIGIT_WIDTH) :to_f)) :*\n  (int 256)) to_i / ) :*\n          (const nil :MAX_DIGIT_WIDTH)) :+\n        (float 0.5))) :to_i) :+\n  (const nil :PADDING)) to_i / ","(send\n  (send\n    (begin\n      (send\n        (send\n          (lvar :args [] ) :*\n          (const nil :MAX_DIGIT_WIDTH)) :+\n        (float 0.5))) :to_i) :+\n  (const nil :PADDING)) to_i / ","(send\n  (send\n    (begin\n      (send\n        (send\n          (lvar :(send\n  (send\n    (send\n      (begin\n        (send\n          (send\n            (begin\n              (send\n                (send\n                  (lvar :width) :*\n                  (const nil :MAX_DIGIT_WIDTH)) :+\n                (float 0.5))) :to_i) :+\n          (const nil :PADDING))) :to_i) :/\n    (send\n      (const nil :MAX_DIGIT_WIDTH) :to_f)) :*\n  (int 256)) to_i / ) :*\n          (const nil :MAX_DIGIT_WIDTH)) :+\n        (float 0.5))) :to_i) :+\n  (const nil :PADDING)) to_i / ","(send\n  (send\n    (begin\n      (send\n        (send\n          (lvar :(send\n  (send\n    (send\n      (begin\n        (send\n          (send\n            (lvar :width) :*\n            (begin\n              (send\n                (const nil :MAX_DIGIT_WIDTH) :+\n                (const nil :PADDING)))) :+\n          (float 0.5))) :to_i) :/\n    (send\n      (const nil :MAX_DIGIT_WIDTH) :to_f)) :*\n  (int 256)) to_i / ) :*\n          (const nil :MAX_DIGIT_WIDTH)) :+\n        (float 0.5))) :to_i) :+\n  (const nil :PADDING)) to_i / ","(send\n  (send\n    (begin\n      (send\n        (send\n          (lvar :(send\n  (send\n    (send\n      (begin\n        (send\n          (send\n            (begin\n              (send\n                (begin\n                  (send\n                    (lvar :width) :*\n                    (const nil :MAX_DIGIT_WIDTH))) :+\n                (float 0.5))) :to_i) :+\n          (const nil :PADDING))) :to_i) :/\n    (send\n      (const nil :MAX_DIGIT_WIDTH) :to_f)) :*\n  (int 256)) to_i / ) :*\n          (const nil :MAX_DIGIT_WIDTH)) :+\n        (float 0.5))) :to_i) :+\n  (const nil :PADDING)) to_i / ","(send\n  (send\n    (begin\n      (send\n        (send\n          (lvar :(send\n  (send\n    (send\n      (begin\n        (send\n          (begin\n            (send\n              (lvar :width) :*\n              (begin\n                (send\n                  (const nil :MAX_DIGIT_WIDTH) :+\n                  (const nil :PADDING))))) :+\n          (float 0.5))) :to_i) :/\n    (send\n      (const nil :MAX_DIGIT_WIDTH) :to_f)) :*\n  (int 256)) to_i / ) :*\n          (const nil :MAX_DIGIT_WIDTH)) :+\n        (float 0.5))) :to_i) :+\n  (const nil :PADDING)) to_i / ","(send\n  (send\n    (begin\n      (send\n        (send\n          (lvar :args [] width ) :*\n          (const nil :MAX_DIGIT_WIDTH)) :+\n        (float 0.5))) :to_i) :+\n  (const nil :PADDING)) to_i / ","(send\n  (send\n    (begin\n      (send\n        (send\n          (lvar :width to_i ) :*\n          (const nil :MAX_DIGIT_WIDTH)) :+\n        (float 0.5))) :to_i) :+\n  (const nil :PADDING)) to_i ","(send\n  (send\n    (begin\n      (send\n        (send\n          (lvar :(send\n  (send\n    (begin\n      (send\n        (send\n          (lvar :width) :*\n          (const nil :MAX_DIGIT_WIDTH)) :+\n        (const nil :PADDING))) :/\n    (send\n      (const nil :MAX_DIGIT_WIDTH) :to_f)) :*\n  (int 256)) to_i / ) :*\n          (const nil :MAX_DIGIT_WIDTH)) :+\n        (float 0.5))) :to_i) :+\n  (const nil :PADDING)) to_i ","(send\n  (send\n    (begin\n      (send\n        (send\n          (lvar :args [] ) :*\n          (const nil :MAX_DIGIT_WIDTH)) :+\n        (float 0.5))) :to_i) :+\n  (const nil :PADDING)) to_i ","(send\n  (send\n    (begin\n      (send\n        (send\n          (lvar :(send\n  (send\n    (send\n      (begin\n        (send\n          (send\n            (begin\n              (send\n                (send\n                  (lvar :width) :*\n                  (const nil :MAX_DIGIT_WIDTH)) :+\n                (float 0.5))) :to_i) :+\n          (const nil :PADDING))) :to_i) :/\n    (send\n      (const nil :MAX_DIGIT_WIDTH) :to_f)) :*\n  (int 256)) to_i / ) :*\n          (const nil :MAX_DIGIT_WIDTH)) :+\n        (float 0.5))) :to_i) :+\n  (const nil :PADDING)) to_i ","(send\n  (send\n    (begin\n      (send\n        (send\n          (lvar :(send\n  (send\n    (send\n      (begin\n        (send\n          (send\n            (lvar :width) :*\n            (begin\n              (send\n                (const nil :MAX_DIGIT_WIDTH) :+\n                (const nil :PADDING)))) :+\n          (float 0.5))) :to_i) :/\n    (send\n      (const nil :MAX_DIGIT_WIDTH) :to_f)) :*\n  (int 256)) to_i / ) :*\n          (const nil :MAX_DIGIT_WIDTH)) :+\n        (float 0.5))) :to_i) :+\n  (const nil :PADDING)) to_i ","(send\n  (send\n    (begin\n      (send\n        (send\n          (lvar :(send\n  (send\n    (send\n      (begin\n        (send\n          (send\n            (begin\n              (send\n                (begin\n                  (send\n                    (lvar :width) :*\n                    (const nil :MAX_DIGIT_WIDTH))) :+\n                (float 0.5))) :to_i) :+\n          (const nil :PADDING))) :to_i) :/\n    (send\n      (const nil :MAX_DIGIT_WIDTH) :to_f)) :*\n  (int 256)) to_i / ) :*\n          (const nil :MAX_DIGIT_WIDTH)) :+\n        (float 0.5))) :to_i) :+\n  (const nil :PADDING)) to_i ","(send\n  (send\n    (begin\n      (send\n        (send\n          (lvar :(send\n  (send\n    (send\n      (begin\n        (send\n          (begin\n            (send\n              (lvar :width) :*\n              (begin\n                (send\n                  (const nil :MAX_DIGIT_WIDTH) :+\n                  (const nil :PADDING))))) :+\n          (float 0.5))) :to_i) :/\n    (send\n      (const nil :MAX_DIGIT_WIDTH) :to_f)) :*\n  (int 256)) to_i / ) :*\n          (const nil :MAX_DIGIT_WIDTH)) :+\n        (float 0.5))) :to_i) :+\n  (const nil :PADDING)) to_i ","(send\n  (send\n    (begin\n      (send\n        (send\n          (lvar :args [] width ) :*\n          (const nil :MAX_DIGIT_WIDTH)) :+\n        (float 0.5))) :to_i) :+\n  (const nil :PADDING)) to_i ","(send\n  (send\n    (lvar :width to_i ) :*\n    (const nil :MAX_DIGIT_WIDTH)) :+\n  (float 0.5)) to_i + ","(send\n  (send\n    (lvar :(send\n  (send\n    (begin\n      (send\n        (send\n          (lvar :width) :*\n          (const nil :MAX_DIGIT_WIDTH)) :+\n        (const nil :PADDING))) :/\n    (send\n      (const nil :MAX_DIGIT_WIDTH) :to_f)) :*\n  (int 256)) to_i / ) :*\n    (const nil :MAX_DIGIT_WIDTH)) :+\n  (float 0.5)) to_i + ","(send\n  (send\n    (lvar :args [] ) :*\n    (const nil :MAX_DIGIT_WIDTH)) :+\n  (float 0.5)) to_i + ","(send\n  (send\n    (lvar :(send\n  (send\n    (send\n      (begin\n        (send\n          (send\n            (begin\n              (send\n                (send\n                  (lvar :width) :*\n                  (const nil :MAX_DIGIT_WIDTH)) :+\n                (float 0.5))) :to_i) :+\n          (const nil :PADDING))) :to_i) :/\n    (send\n      (const nil :MAX_DIGIT_WIDTH) :to_f)) :*\n  (int 256)) to_i / ) :*\n    (const nil :MAX_DIGIT_WIDTH)) :+\n  (float 0.5)) to_i + ","(send\n  (send\n    (lvar :(send\n  (send\n    (send\n      (begin\n        (send\n          (send\n            (lvar :width) :*\n            (begin\n              (send\n                (const nil :MAX_DIGIT_WIDTH) :+\n                (const nil :PADDING)))) :+\n          (float 0.5))) :to_i) :/\n    (send\n      (const nil :MAX_DIGIT_WIDTH) :to_f)) :*\n  (int 256)) to_i / ) :*\n    (const nil :MAX_DIGIT_WIDTH)) :+\n  (float 0.5)) to_i + ","(send\n  (send\n    (lvar :(send\n  (send\n    (send\n      (begin\n        (send\n          (send\n            (begin\n              (send\n                (begin\n                  (send\n                    (lvar :width) :*\n                    (const nil :MAX_DIGIT_WIDTH))) :+\n                (float 0.5))) :to_i) :+\n          (const nil :PADDING))) :to_i) :/\n    (send\n      (const nil :MAX_DIGIT_WIDTH) :to_f)) :*\n  (int 256)) to_i / ) :*\n    (const nil :MAX_DIGIT_WIDTH)) :+\n  (float 0.5)) to_i + ","(send\n  (send\n    (lvar :(send\n  (send\n    (send\n      (begin\n        (send\n          (begin\n            (send\n              (lvar :width) :*\n              (begin\n                (send\n                  (const nil :MAX_DIGIT_WIDTH) :+\n                  (const nil :PADDING))))) :+\n          (float 0.5))) :to_i) :/\n    (send\n      (const nil :MAX_DIGIT_WIDTH) :to_f)) :*\n  (int 256)) to_i / ) :*\n    (const nil :MAX_DIGIT_WIDTH)) :+\n  (float 0.5)) to_i + ","(send\n  (send\n    (lvar :args [] width ) :*\n    (const nil :MAX_DIGIT_WIDTH)) :+\n  (float 0.5)) to_i + ","(send\n  (send\n    (lvar :width to_i ) :*\n    (const nil :MAX_DIGIT_WIDTH)) :+\n  (float 0.5)) to_i ","(send\n  (send\n    (lvar :(send\n  (send\n    (begin\n      (send\n        (send\n          (lvar :width) :*\n          (const nil :MAX_DIGIT_WIDTH)) :+\n        (const nil :PADDING))) :/\n    (send\n      (const nil :MAX_DIGIT_WIDTH) :to_f)) :*\n  (int 256)) to_i / ) :*\n    (const nil :MAX_DIGIT_WIDTH)) :+\n  (float 0.5)) to_i ","(send\n  (send\n    (lvar :args [] ) :*\n    (const nil :MAX_DIGIT_WIDTH)) :+\n  (float 0.5)) to_i ","(send\n  (send\n    (lvar :(send\n  (send\n    (send\n      (begin\n        (send\n          (send\n            (begin\n              (send\n                (send\n                  (lvar :width) :*\n                  (const nil :MAX_DIGIT_WIDTH)) :+\n                (float 0.5))) :to_i) :+\n          (const nil :PADDING))) :to_i) :/\n    (send\n      (const nil :MAX_DIGIT_WIDTH) :to_f)) :*\n  (int 256)) to_i / ) :*\n    (const nil :MAX_DIGIT_WIDTH)) :+\n  (float 0.5)) to_i ","(send\n  (send\n    (lvar :(send\n  (send\n    (send\n      (begin\n        (send\n          (send\n            (lvar :width) :*\n            (begin\n              (send\n                (const nil :MAX_DIGIT_WIDTH) :+\n                (const nil :PADDING)))) :+\n          (float 0.5))) :to_i) :/\n    (send\n      (const nil :MAX_DIGIT_WIDTH) :to_f)) :*\n  (int 256)) to_i / ) :*\n    (const nil :MAX_DIGIT_WIDTH)) :+\n  (float 0.5)) to_i ","(send\n  (send\n    (lvar :(send\n  (send\n    (send\n      (begin\n        (send\n          (send\n            (begin\n              (send\n                (begin\n                  (send\n                    (lvar :width) :*\n                    (const nil :MAX_DIGIT_WIDTH))) :+\n                (float 0.5))) :to_i) :+\n          (const nil :PADDING))) :to_i) :/\n    (send\n      (const nil :MAX_DIGIT_WIDTH) :to_f)) :*\n  (int 256)) to_i / ) :*\n    (const nil :MAX_DIGIT_WIDTH)) :+\n  (float 0.5)) to_i ","(send\n  (send\n    (lvar :(send\n  (send\n    (send\n      (begin\n        (send\n          (begin\n            (send\n              (lvar :width) :*\n              (begin\n                (send\n                  (const nil :MAX_DIGIT_WIDTH) :+\n                  (const nil :PADDING))))) :+\n          (float 0.5))) :to_i) :/\n    (send\n      (const nil :MAX_DIGIT_WIDTH) :to_f)) :*\n  (int 256)) to_i / ) :*\n    (const nil :MAX_DIGIT_WIDTH)) :+\n  (float 0.5)) to_i ","(send\n  (send\n    (lvar :args [] width ) :*\n    (const nil :MAX_DIGIT_WIDTH)) :+\n  (float 0.5)) to_i ","(send\n  (send\n    (send\n      (begin\n        (send\n          (send\n            (lvar :width to_i ) :*\n            (begin\n              (send\n                (const nil :MAX_DIGIT_WIDTH) :+\n                (const nil :PADDING)))) :+\n          (float 0.5))) :to_i) :/\n    (send\n      (const nil :MAX_DIGIT_WIDTH) :to_f)) :*\n  (int 256)) to_i / ","(send\n  (send\n    (send\n      (begin\n        (send\n          (send\n            (lvar :(send\n  (send\n    (begin\n      (send\n        (send\n          (lvar :width) :*\n          (const nil :MAX_DIGIT_WIDTH)) :+\n        (const nil :PADDING))) :/\n    (send\n      (const nil :MAX_DIGIT_WIDTH) :to_f)) :*\n  (int 256)) to_i / ) :*\n            (begin\n              (send\n                (const nil :MAX_DIGIT_WIDTH) :+\n                (const nil :PADDING)))) :+\n          (float 0.5))) :to_i) :/\n    (send\n      (const nil :MAX_DIGIT_WIDTH) :to_f)) :*\n  (int 256)) to_i / ","(send\n  (send\n    (send\n      (begin\n        (send\n          (send\n            (lvar :args [] ) :*\n            (begin\n              (send\n                (const nil :MAX_DIGIT_WIDTH) :+\n                (const nil :PADDING)))) :+\n          (float 0.5))) :to_i) :/\n    (send\n      (const nil :MAX_DIGIT_WIDTH) :to_f)) :*\n  (int 256)) to_i / ","(send\n  (send\n    (send\n      (begin\n        (send\n          (send\n            (lvar :(send\n  (send\n    (send\n      (begin\n        (send\n          (send\n            (begin\n              (send\n                (send\n                  (lvar :width) :*\n                  (const nil :MAX_DIGIT_WIDTH)) :+\n                (float 0.5))) :to_i) :+\n          (const nil :PADDING))) :to_i) :/\n    (send\n      (const nil :MAX_DIGIT_WIDTH) :to_f)) :*\n  (int 256)) to_i / ) :*\n            (begin\n              (send\n                (const nil :MAX_DIGIT_WIDTH) :+\n                (const nil :PADDING)))) :+\n          (float 0.5))) :to_i) :/\n    (send\n      (const nil :MAX_DIGIT_WIDTH) :to_f)) :*\n  (int 256)) to_i / ","(send\n  (send\n    (send\n      (begin\n        (send\n          (send\n            (lvar :(send\n  (send\n    (send\n      (begin\n        (send\n          (send\n            (lvar :width) :*\n            (begin\n              (send\n                (const nil :MAX_DIGIT_WIDTH) :+\n                (const nil :PADDING)))) :+\n          (float 0.5))) :to_i) :/\n    (send\n      (const nil :MAX_DIGIT_WIDTH) :to_f)) :*\n  (int 256)) to_i / ) :*\n            (begin\n              (send\n                (const nil :MAX_DIGIT_WIDTH) :+\n                (const nil :PADDING)))) :+\n          (float 0.5))) :to_i) :/\n    (send\n      (const nil :MAX_DIGIT_WIDTH) :to_f)) :*\n  (int 256)) to_i / ","(send\n  (send\n    (send\n      (begin\n        (send\n          (send\n            (lvar :(send\n  (send\n    (send\n      (begin\n        (send\n          (send\n            (begin\n              (send\n                (begin\n                  (send\n                    (lvar :width) :*\n                    (const nil :MAX_DIGIT_WIDTH))) :+\n                (float 0.5))) :to_i) :+\n          (const nil :PADDING))) :to_i) :/\n    (send\n      (const nil :MAX_DIGIT_WIDTH) :to_f)) :*\n  (int 256)) to_i / ) :*\n            (begin\n              (send\n                (const nil :MAX_DIGIT_WIDTH) :+\n                (const nil :PADDING)))) :+\n          (float 0.5))) :to_i) :/\n    (send\n      (const nil :MAX_DIGIT_WIDTH) :to_f)) :*\n  (int 256)) to_i / ","(send\n  (send\n    (send\n      (begin\n        (send\n          (send\n            (lvar :(send\n  (send\n    (send\n      (begin\n        (send\n          (begin\n            (send\n              (lvar :width) :*\n              (begin\n                (send\n                  (const nil :MAX_DIGIT_WIDTH) :+\n                  (const nil :PADDING))))) :+\n          (float 0.5))) :to_i) :/\n    (send\n      (const nil :MAX_DIGIT_WIDTH) :to_f)) :*\n  (int 256)) to_i / ) :*\n            (begin\n              (send\n                (const nil :MAX_DIGIT_WIDTH) :+\n                (const nil :PADDING)))) :+\n          (float 0.5))) :to_i) :/\n    (send\n      (const nil :MAX_DIGIT_WIDTH) :to_f)) :*\n  (int 256)) to_i / ","(send\n  (send\n    (send\n      (begin\n        (send\n          (send\n            (lvar :args [] width ) :*\n            (begin\n              (send\n                (const nil :MAX_DIGIT_WIDTH) :+\n                (const nil :PADDING)))) :+\n          (float 0.5))) :to_i) :/\n    (send\n      (const nil :MAX_DIGIT_WIDTH) :to_f)) :*\n  (int 256)) to_i / ","(send\n  (send\n    (send\n      (begin\n        (send\n          (send\n            (lvar :width to_i ) :*\n            (begin\n              (send\n                (const nil :MAX_DIGIT_WIDTH) :+\n                (const nil :PADDING)))) :+\n          (float 0.5))) :to_i) :/\n    (send\n      (const nil :MAX_DIGIT_WIDTH) :to_f)) :*\n  (int 256)) to_i ","(send\n  (send\n    (send\n      (begin\n        (send\n          (send\n            (lvar :(send\n  (send\n    (begin\n      (send\n        (send\n          (lvar :width) :*\n          (const nil :MAX_DIGIT_WIDTH)) :+\n        (const nil :PADDING))) :/\n    (send\n      (const nil :MAX_DIGIT_WIDTH) :to_f)) :*\n  (int 256)) to_i / ) :*\n            (begin\n              (send\n                (const nil :MAX_DIGIT_WIDTH) :+\n                (const nil :PADDING)))) :+\n          (float 0.5))) :to_i) :/\n    (send\n      (const nil :MAX_DIGIT_WIDTH) :to_f)) :*\n  (int 256)) to_i ","(send\n  (send\n    (send\n      (begin\n        (send\n          (send\n            (lvar :args [] ) :*\n            (begin\n              (send\n                (const nil :MAX_DIGIT_WIDTH) :+\n                (const nil :PADDING)))) :+\n          (float 0.5))) :to_i) :/\n    (send\n      (const nil :MAX_DIGIT_WIDTH) :to_f)) :*\n  (int 256)) to_i ","(send\n  (send\n    (send\n      (begin\n        (send\n          (send\n            (lvar :(send\n  (send\n    (send\n      (begin\n        (send\n          (send\n            (begin\n              (send\n                (send\n                  (lvar :width) :*\n                  (const nil :MAX_DIGIT_WIDTH)) :+\n                (float 0.5))) :to_i) :+\n          (const nil :PADDING))) :to_i) :/\n    (send\n      (const nil :MAX_DIGIT_WIDTH) :to_f)) :*\n  (int 256)) to_i / ) :*\n            (begin\n              (send\n                (const nil :MAX_DIGIT_WIDTH) :+\n                (const nil :PADDING)))) :+\n          (float 0.5))) :to_i) :/\n    (send\n      (const nil :MAX_DIGIT_WIDTH) :to_f)) :*\n  (int 256)) to_i ","(send\n  (send\n    (send\n      (begin\n        (send\n          (send\n            (lvar :(send\n  (send\n    (send\n      (begin\n        (send\n          (send\n            (lvar :width) :*\n            (begin\n              (send\n                (const nil :MAX_DIGIT_WIDTH) :+\n                (const nil :PADDING)))) :+\n          (float 0.5))) :to_i) :/\n    (send\n      (const nil :MAX_DIGIT_WIDTH) :to_f)) :*\n  (int 256)) to_i / ) :*\n            (begin\n              (send\n                (const nil :MAX_DIGIT_WIDTH) :+\n                (const nil :PADDING)))) :+\n          (float 0.5))) :to_i) :/\n    (send\n      (const nil :MAX_DIGIT_WIDTH) :to_f)) :*\n  (int 256)) to_i ","(send\n  (send\n    (send\n      (begin\n        (send\n          (send\n            (lvar :(send\n  (send\n    (send\n      (begin\n        (send\n          (send\n            (begin\n              (send\n                (begin\n                  (send\n                    (lvar :width) :*\n                    (const nil :MAX_DIGIT_WIDTH))) :+\n                (float 0.5))) :to_i) :+\n          (const nil :PADDING))) :to_i) :/\n    (send\n      (const nil :MAX_DIGIT_WIDTH) :to_f)) :*\n  (int 256)) to_i / ) :*\n            (begin\n              (send\n                (const nil :MAX_DIGIT_WIDTH) :+\n                (const nil :PADDING)))) :+\n          (float 0.5))) :to_i) :/\n    (send\n      (const nil :MAX_DIGIT_WIDTH) :to_f)) :*\n  (int 256)) to_i ","(send\n  (send\n    (send\n      (begin\n        (send\n          (send\n            (lvar :(send\n  (send\n    (send\n      (begin\n        (send\n          (begin\n            (send\n              (lvar :width) :*\n              (begin\n                (send\n                  (const nil :MAX_DIGIT_WIDTH) :+\n                  (const nil :PADDING))))) :+\n          (float 0.5))) :to_i) :/\n    (send\n      (const nil :MAX_DIGIT_WIDTH) :to_f)) :*\n  (int 256)) to_i / ) :*\n            (begin\n              (send\n                (const nil :MAX_DIGIT_WIDTH) :+\n                (const nil :PADDING)))) :+\n          (float 0.5))) :to_i) :/\n    (send\n      (const nil :MAX_DIGIT_WIDTH) :to_f)) :*\n  (int 256)) to_i ","(send\n  (send\n    (send\n      (begin\n        (send\n          (send\n            (lvar :args [] width ) :*\n            (begin\n              (send\n                (const nil :MAX_DIGIT_WIDTH) :+\n                (const nil :PADDING)))) :+\n          (float 0.5))) :to_i) :/\n    (send\n      (const nil :MAX_DIGIT_WIDTH) :to_f)) :*\n  (int 256)) to_i ","(send\n  (send\n    (lvar :width to_i ) :*\n    (begin\n      (send\n        (const nil :MAX_DIGIT_WIDTH) :+\n        (const nil :PADDING)))) :+\n  (float 0.5)) to_i / * ","(send\n  (send\n    (lvar :(send\n  (send\n    (begin\n      (send\n        (send\n          (lvar :width) :*\n          (const nil :MAX_DIGIT_WIDTH)) :+\n        (const nil :PADDING))) :/\n    (send\n      (const nil :MAX_DIGIT_WIDTH) :to_f)) :*\n  (int 256)) to_i / ) :*\n    (begin\n      (send\n        (const nil :MAX_DIGIT_WIDTH) :+\n        (const nil :PADDING)))) :+\n  (float 0.5)) to_i / * ","(send\n  (send\n    (lvar :args [] ) :*\n    (begin\n      (send\n        (const nil :MAX_DIGIT_WIDTH) :+\n        (const nil :PADDING)))) :+\n  (float 0.5)) to_i / * ","(send\n  (send\n    (lvar :(send\n  (send\n    (send\n      (begin\n        (send\n          (send\n            (begin\n              (send\n                (send\n                  (lvar :width) :*\n                  (const nil :MAX_DIGIT_WIDTH)) :+\n                (float 0.5))) :to_i) :+\n          (const nil :PADDING))) :to_i) :/\n    (send\n      (const nil :MAX_DIGIT_WIDTH) :to_f)) :*\n  (int 256)) to_i / ) :*\n    (begin\n      (send\n        (const nil :MAX_DIGIT_WIDTH) :+\n        (const nil :PADDING)))) :+\n  (float 0.5)) to_i / * ","(send\n  (send\n    (lvar :(send\n  (send\n    (send\n      (begin\n        (send\n          (send\n            (lvar :width) :*\n            (begin\n              (send\n                (const nil :MAX_DIGIT_WIDTH) :+\n                (const nil :PADDING)))) :+\n          (float 0.5))) :to_i) :/\n    (send\n      (const nil :MAX_DIGIT_WIDTH) :to_f)) :*\n  (int 256)) to_i / ) :*\n    (begin\n      (send\n        (const nil :MAX_DIGIT_WIDTH) :+\n        (const nil :PADDING)))) :+\n  (float 0.5)) to_i / * ","(send\n  (send\n    (lvar :(send\n  (send\n    (send\n      (begin\n        (send\n          (send\n            (begin\n              (send\n                (begin\n                  (send\n                    (lvar :width) :*\n                    (const nil :MAX_DIGIT_WIDTH))) :+\n                (float 0.5))) :to_i) :+\n          (const nil :PADDING))) :to_i) :/\n    (send\n      (const nil :MAX_DIGIT_WIDTH) :to_f)) :*\n  (int 256)) to_i / ) :*\n    (begin\n      (send\n        (const nil :MAX_DIGIT_WIDTH) :+\n        (const nil :PADDING)))) :+\n  (float 0.5)) to_i / * ","(send\n  (send\n    (lvar :(send\n  (send\n    (send\n      (begin\n        (send\n          (begin\n            (send\n              (lvar :width) :*\n              (begin\n                (send\n                  (const nil :MAX_DIGIT_WIDTH) :+\n                  (const nil :PADDING))))) :+\n          (float 0.5))) :to_i) :/\n    (send\n      (const nil :MAX_DIGIT_WIDTH) :to_f)) :*\n  (int 256)) to_i / ) :*\n    (begin\n      (send\n        (const nil :MAX_DIGIT_WIDTH) :+\n        (const nil :PADDING)))) :+\n  (float 0.5)) to_i / * ","(send\n  (send\n    (lvar :args [] width ) :*\n    (begin\n      (send\n        (const nil :MAX_DIGIT_WIDTH) :+\n        (const nil :PADDING)))) :+\n  (float 0.5)) to_i / * ","(send\n  (send\n    (lvar :width to_i ) :*\n    (begin\n      (send\n        (const nil :MAX_DIGIT_WIDTH) :+\n        (const nil :PADDING)))) :+\n  (float 0.5)) to_i / ","(send\n  (send\n    (lvar :(send\n  (send\n    (begin\n      (send\n        (send\n          (lvar :width) :*\n          (const nil :MAX_DIGIT_WIDTH)) :+\n        (const nil :PADDING))) :/\n    (send\n      (const nil :MAX_DIGIT_WIDTH) :to_f)) :*\n  (int 256)) to_i / ) :*\n    (begin\n      (send\n        (const nil :MAX_DIGIT_WIDTH) :+\n        (const nil :PADDING)))) :+\n  (float 0.5)) to_i / ","(send\n  (send\n    (lvar :args [] ) :*\n    (begin\n      (send\n        (const nil :MAX_DIGIT_WIDTH) :+\n        (const nil :PADDING)))) :+\n  (float 0.5)) to_i / ","(send\n  (send\n    (lvar :(send\n  (send\n    (send\n      (begin\n        (send\n          (send\n            (begin\n              (send\n                (send\n                  (lvar :width) :*\n                  (const nil :MAX_DIGIT_WIDTH)) :+\n                (float 0.5))) :to_i) :+\n          (const nil :PADDING))) :to_i) :/\n    (send\n      (const nil :MAX_DIGIT_WIDTH) :to_f)) :*\n  (int 256)) to_i / ) :*\n    (begin\n      (send\n        (const nil :MAX_DIGIT_WIDTH) :+\n        (const nil :PADDING)))) :+\n  (float 0.5)) to_i / ","(send\n  (send\n    (lvar :(send\n  (send\n    (send\n      (begin\n        (send\n          (send\n            (lvar :width) :*\n            (begin\n              (send\n                (const nil :MAX_DIGIT_WIDTH) :+\n                (const nil :PADDING)))) :+\n          (float 0.5))) :to_i) :/\n    (send\n      (const nil :MAX_DIGIT_WIDTH) :to_f)) :*\n  (int 256)) to_i / ) :*\n    (begin\n      (send\n        (const nil :MAX_DIGIT_WIDTH) :+\n        (const nil :PADDING)))) :+\n  (float 0.5)) to_i / ","(send\n  (send\n    (lvar :(send\n  (send\n    (send\n      (begin\n        (send\n          (send\n            (begin\n              (send\n                (begin\n                  (send\n                    (lvar :width) :*\n                    (const nil :MAX_DIGIT_WIDTH))) :+\n                (float 0.5))) :to_i) :+\n          (const nil :PADDING))) :to_i) :/\n    (send\n      (const nil :MAX_DIGIT_WIDTH) :to_f)) :*\n  (int 256)) to_i / ) :*\n    (begin\n      (send\n        (const nil :MAX_DIGIT_WIDTH) :+\n        (const nil :PADDING)))) :+\n  (float 0.5)) to_i / ","(send\n  (send\n    (lvar :(send\n  (send\n    (send\n      (begin\n        (send\n          (begin\n            (send\n              (lvar :width) :*\n              (begin\n                (send\n                  (const nil :MAX_DIGIT_WIDTH) :+\n                  (const nil :PADDING))))) :+\n          (float 0.5))) :to_i) :/\n    (send\n      (const nil :MAX_DIGIT_WIDTH) :to_f)) :*\n  (int 256)) to_i / ) :*\n    (begin\n      (send\n        (const nil :MAX_DIGIT_WIDTH) :+\n        (const nil :PADDING)))) :+\n  (float 0.5)) to_i / ","(send\n  (send\n    (lvar :args [] width ) :*\n    (begin\n      (send\n        (const nil :MAX_DIGIT_WIDTH) :+\n        (const nil :PADDING)))) :+\n  (float 0.5)) to_i / ","(send\n  (send\n    (lvar :width to_i ) :*\n    (begin\n      (send\n        (const nil :MAX_DIGIT_WIDTH) :+\n        (const nil :PADDING)))) :+\n  (float 0.5)) to_i ","(send\n  (send\n    (lvar :(send\n  (send\n    (begin\n      (send\n        (send\n          (lvar :width) :*\n          (const nil :MAX_DIGIT_WIDTH)) :+\n        (const nil :PADDING))) :/\n    (send\n      (const nil :MAX_DIGIT_WIDTH) :to_f)) :*\n  (int 256)) to_i / ) :*\n    (begin\n      (send\n        (const nil :MAX_DIGIT_WIDTH) :+\n        (const nil :PADDING)))) :+\n  (float 0.5)) to_i ","(send\n  (send\n    (lvar :args [] ) :*\n    (begin\n      (send\n        (const nil :MAX_DIGIT_WIDTH) :+\n        (const nil :PADDING)))) :+\n  (float 0.5)) to_i ","(send\n  (send\n    (lvar :(send\n  (send\n    (send\n      (begin\n        (send\n          (send\n            (begin\n              (send\n                (send\n                  (lvar :width) :*\n                  (const nil :MAX_DIGIT_WIDTH)) :+\n                (float 0.5))) :to_i) :+\n          (const nil :PADDING))) :to_i) :/\n    (send\n      (const nil :MAX_DIGIT_WIDTH) :to_f)) :*\n  (int 256)) to_i / ) :*\n    (begin\n      (send\n        (const nil :MAX_DIGIT_WIDTH) :+\n        (const nil :PADDING)))) :+\n  (float 0.5)) to_i ","(send\n  (send\n    (lvar :(send\n  (send\n    (send\n      (begin\n        (send\n          (send\n            (lvar :width) :*\n            (begin\n              (send\n                (const nil :MAX_DIGIT_WIDTH) :+\n                (const nil :PADDING)))) :+\n          (float 0.5))) :to_i) :/\n    (send\n      (const nil :MAX_DIGIT_WIDTH) :to_f)) :*\n  (int 256)) to_i / ) :*\n    (begin\n      (send\n        (const nil :MAX_DIGIT_WIDTH) :+\n        (const nil :PADDING)))) :+\n  (float 0.5)) to_i ","(send\n  (send\n    (lvar :(send\n  (send\n    (send\n      (begin\n        (send\n          (send\n            (begin\n              (send\n                (begin\n                  (send\n                    (lvar :width) :*\n                    (const nil :MAX_DIGIT_WIDTH))) :+\n                (float 0.5))) :to_i) :+\n          (const nil :PADDING))) :to_i) :/\n    (send\n      (const nil :MAX_DIGIT_WIDTH) :to_f)) :*\n  (int 256)) to_i / ) :*\n    (begin\n      (send\n        (const nil :MAX_DIGIT_WIDTH) :+\n        (const nil :PADDING)))) :+\n  (float 0.5)) to_i ","(send\n  (send\n    (lvar :(send\n  (send\n    (send\n      (begin\n        (send\n          (begin\n            (send\n              (lvar :width) :*\n              (begin\n                (send\n                  (const nil :MAX_DIGIT_WIDTH) :+\n                  (const nil :PADDING))))) :+\n          (float 0.5))) :to_i) :/\n    (send\n      (const nil :MAX_DIGIT_WIDTH) :to_f)) :*\n  (int 256)) to_i / ) :*\n    (begin\n      (send\n        (const nil :MAX_DIGIT_WIDTH) :+\n        (const nil :PADDING)))) :+\n  (float 0.5)) to_i ","(send\n  (send\n    (lvar :args [] width ) :*\n    (begin\n      (send\n        (const nil :MAX_DIGIT_WIDTH) :+\n        (const nil :PADDING)))) :+\n  (float 0.5)) to_i ","width to_i  < ","(send\n  (send\n    (begin\n      (send\n        (send\n          (lvar :width) :*\n          (const nil :MAX_DIGIT_WIDTH)) :+\n        (const nil :PADDING))) :/\n    (send\n      (const nil :MAX_DIGIT_WIDTH) :to_f)) :*\n  (int 256)) to_i /  < ","args []  < ","(send\n  (send\n    (send\n      (begin\n        (send\n          (send\n            (begin\n              (send\n                (send\n                  (lvar :width) :*\n                  (const nil :MAX_DIGIT_WIDTH)) :+\n                (float 0.5))) :to_i) :+\n          (const nil :PADDING))) :to_i) :/\n    (send\n      (const nil :MAX_DIGIT_WIDTH) :to_f)) :*\n  (int 256)) to_i /  < ","(send\n  (send\n    (send\n      (begin\n        (send\n          (send\n            (lvar :width) :*\n            (begin\n              (send\n                (const nil :MAX_DIGIT_WIDTH) :+\n                (const nil :PADDING)))) :+\n          (float 0.5))) :to_i) :/\n    (send\n      (const nil :MAX_DIGIT_WIDTH) :to_f)) :*\n  (int 256)) to_i /  < ","(send\n  (send\n    (send\n      (begin\n        (send\n          (send\n            (begin\n              (send\n                (begin\n                  (send\n                    (lvar :width) :*\n                    (const nil :MAX_DIGIT_WIDTH))) :+\n                (float 0.5))) :to_i) :+\n          (const nil :PADDING))) :to_i) :/\n    (send\n      (const nil :MAX_DIGIT_WIDTH) :to_f)) :*\n  (int 256)) to_i /  < ","(send\n  (send\n    (send\n      (begin\n        (send\n          (begin\n            (send\n              (lvar :width) :*\n              (begin\n                (send\n                  (const nil :MAX_DIGIT_WIDTH) :+\n                  (const nil :PADDING))))) :+\n          (float 0.5))) :to_i) :/\n    (send\n      (const nil :MAX_DIGIT_WIDTH) :to_f)) :*\n  (int 256)) to_i /  < ","args [] width  < ","(send\n  (send\n    (send\n      (begin\n        (send\n          (send\n            (begin\n              (send\n                (begin\n                  (send\n                    (lvar :width to_i ) :*\n                    (const nil :MAX_DIGIT_WIDTH))) :+\n                (float 0.5))) :to_i) :+\n          (const nil :PADDING))) :to_i) :/\n    (send\n      (const nil :MAX_DIGIT_WIDTH) :to_f)) :*\n  (int 256)) to_i / ","(send\n  (send\n    (send\n      (begin\n        (send\n          (send\n            (begin\n              (send\n                (begin\n                  (send\n                    (lvar :(send\n  (send\n    (begin\n      (send\n        (send\n          (lvar :width) :*\n          (const nil :MAX_DIGIT_WIDTH)) :+\n        (const nil :PADDING))) :/\n    (send\n      (const nil :MAX_DIGIT_WIDTH) :to_f)) :*\n  (int 256)) to_i / ) :*\n                    (const nil :MAX_DIGIT_WIDTH))) :+\n                (float 0.5))) :to_i) :+\n          (const nil :PADDING))) :to_i) :/\n    (send\n      (const nil :MAX_DIGIT_WIDTH) :to_f)) :*\n  (int 256)) to_i / ","(send\n  (send\n    (send\n      (begin\n        (send\n          (send\n            (begin\n              (send\n                (begin\n                  (send\n                    (lvar :args [] ) :*\n                    (const nil :MAX_DIGIT_WIDTH))) :+\n                (float 0.5))) :to_i) :+\n          (const nil :PADDING))) :to_i) :/\n    (send\n      (const nil :MAX_DIGIT_WIDTH) :to_f)) :*\n  (int 256)) to_i / ","(send\n  (send\n    (send\n      (begin\n        (send\n          (send\n            (begin\n              (send\n                (begin\n                  (send\n                    (lvar :(send\n  (send\n    (send\n      (begin\n        (send\n          (send\n            (begin\n              (send\n                (send\n                  (lvar :width) :*\n                  (const nil :MAX_DIGIT_WIDTH)) :+\n                (float 0.5))) :to_i) :+\n          (const nil :PADDING))) :to_i) :/\n    (send\n      (const nil :MAX_DIGIT_WIDTH) :to_f)) :*\n  (int 256)) to_i / ) :*\n                    (const nil :MAX_DIGIT_WIDTH))) :+\n                (float 0.5))) :to_i) :+\n          (const nil :PADDING))) :to_i) :/\n    (send\n      (const nil :MAX_DIGIT_WIDTH) :to_f)) :*\n  (int 256)) to_i / ","(send\n  (send\n    (send\n      (begin\n        (send\n          (send\n            (begin\n              (send\n                (begin\n                  (send\n                    (lvar :(send\n  (send\n    (send\n      (begin\n        (send\n          (send\n            (lvar :width) :*\n            (begin\n              (send\n                (const nil :MAX_DIGIT_WIDTH) :+\n                (const nil :PADDING)))) :+\n          (float 0.5))) :to_i) :/\n    (send\n      (const nil :MAX_DIGIT_WIDTH) :to_f)) :*\n  (int 256)) to_i / ) :*\n                    (const nil :MAX_DIGIT_WIDTH))) :+\n                (float 0.5))) :to_i) :+\n          (const nil :PADDING))) :to_i) :/\n    (send\n      (const nil :MAX_DIGIT_WIDTH) :to_f)) :*\n  (int 256)) to_i / ","(send\n  (send\n    (send\n      (begin\n        (send\n          (send\n            (begin\n              (send\n                (begin\n                  (send\n                    (lvar :(send\n  (send\n    (send\n      (begin\n        (send\n          (send\n            (begin\n              (send\n                (begin\n                  (send\n                    (lvar :width) :*\n                    (const nil :MAX_DIGIT_WIDTH))) :+\n                (float 0.5))) :to_i) :+\n          (const nil :PADDING))) :to_i) :/\n    (send\n      (const nil :MAX_DIGIT_WIDTH) :to_f)) :*\n  (int 256)) to_i / ) :*\n                    (const nil :MAX_DIGIT_WIDTH))) :+\n                (float 0.5))) :to_i) :+\n          (const nil :PADDING))) :to_i) :/\n    (send\n      (const nil :MAX_DIGIT_WIDTH) :to_f)) :*\n  (int 256)) to_i / ","(send\n  (send\n    (send\n      (begin\n        (send\n          (send\n            (begin\n              (send\n                (begin\n                  (send\n                    (lvar :(send\n  (send\n    (send\n      (begin\n        (send\n          (begin\n            (send\n              (lvar :width) :*\n              (begin\n                (send\n                  (const nil :MAX_DIGIT_WIDTH) :+\n                  (const nil :PADDING))))) :+\n          (float 0.5))) :to_i) :/\n    (send\n      (const nil :MAX_DIGIT_WIDTH) :to_f)) :*\n  (int 256)) to_i / ) :*\n                    (const nil :MAX_DIGIT_WIDTH))) :+\n                (float 0.5))) :to_i) :+\n          (const nil :PADDING))) :to_i) :/\n    (send\n      (const nil :MAX_DIGIT_WIDTH) :to_f)) :*\n  (int 256)) to_i / ","(send\n  (send\n    (send\n      (begin\n        (send\n          (send\n            (begin\n              (send\n                (begin\n                  (send\n                    (lvar :args [] width ) :*\n                    (const nil :MAX_DIGIT_WIDTH))) :+\n                (float 0.5))) :to_i) :+\n          (const nil :PADDING))) :to_i) :/\n    (send\n      (const nil :MAX_DIGIT_WIDTH) :to_f)) :*\n  (int 256)) to_i / ","(send\n  (send\n    (send\n      (begin\n        (send\n          (send\n            (begin\n              (send\n                (begin\n                  (send\n                    (lvar :width to_i ) :*\n                    (const nil :MAX_DIGIT_WIDTH))) :+\n                (float 0.5))) :to_i) :+\n          (const nil :PADDING))) :to_i) :/\n    (send\n      (const nil :MAX_DIGIT_WIDTH) :to_f)) :*\n  (int 256)) to_i ","(send\n  (send\n    (send\n      (begin\n        (send\n          (send\n            (begin\n              (send\n                (begin\n                  (send\n                    (lvar :(send\n  (send\n    (begin\n      (send\n        (send\n          (lvar :width) :*\n          (const nil :MAX_DIGIT_WIDTH)) :+\n        (const nil :PADDING))) :/\n    (send\n      (const nil :MAX_DIGIT_WIDTH) :to_f)) :*\n  (int 256)) to_i / ) :*\n                    (const nil :MAX_DIGIT_WIDTH))) :+\n                (float 0.5))) :to_i) :+\n          (const nil :PADDING))) :to_i) :/\n    (send\n      (const nil :MAX_DIGIT_WIDTH) :to_f)) :*\n  (int 256)) to_i ","(send\n  (send\n    (send\n      (begin\n        (send\n          (send\n            (begin\n              (send\n                (begin\n                  (send\n                    (lvar :args [] ) :*\n                    (const nil :MAX_DIGIT_WIDTH))) :+\n                (float 0.5))) :to_i) :+\n          (const nil :PADDING))) :to_i) :/\n    (send\n      (const nil :MAX_DIGIT_WIDTH) :to_f)) :*\n  (int 256)) to_i ","(send\n  (send\n    (send\n      (begin\n        (send\n          (send\n            (begin\n              (send\n                (begin\n                  (send\n                    (lvar :(send\n  (send\n    (send\n      (begin\n        (send\n          (send\n            (begin\n              (send\n                (send\n                  (lvar :width) :*\n                  (const nil :MAX_DIGIT_WIDTH)) :+\n                (float 0.5))) :to_i) :+\n          (const nil :PADDING))) :to_i) :/\n    (send\n      (const nil :MAX_DIGIT_WIDTH) :to_f)) :*\n  (int 256)) to_i / ) :*\n                    (const nil :MAX_DIGIT_WIDTH))) :+\n                (float 0.5))) :to_i) :+\n          (const nil :PADDING))) :to_i) :/\n    (send\n      (const nil :MAX_DIGIT_WIDTH) :to_f)) :*\n  (int 256)) to_i ","(send\n  (send\n    (send\n      (begin\n        (send\n          (send\n            (begin\n              (send\n                (begin\n                  (send\n                    (lvar :(send\n  (send\n    (send\n      (begin\n        (send\n          (send\n            (lvar :width) :*\n            (begin\n              (send\n                (const nil :MAX_DIGIT_WIDTH) :+\n                (const nil :PADDING)))) :+\n          (float 0.5))) :to_i) :/\n    (send\n      (const nil :MAX_DIGIT_WIDTH) :to_f)) :*\n  (int 256)) to_i / ) :*\n                    (const nil :MAX_DIGIT_WIDTH))) :+\n                (float 0.5))) :to_i) :+\n          (const nil :PADDING))) :to_i) :/\n    (send\n      (const nil :MAX_DIGIT_WIDTH) :to_f)) :*\n  (int 256)) to_i ","(send\n  (send\n    (send\n      (begin\n        (send\n          (send\n            (begin\n              (send\n                (begin\n                  (send\n                    (lvar :(send\n  (send\n    (send\n      (begin\n        (send\n          (send\n            (begin\n              (send\n                (begin\n                  (send\n                    (lvar :width) :*\n                    (const nil :MAX_DIGIT_WIDTH))) :+\n                (float 0.5))) :to_i) :+\n          (const nil :PADDING))) :to_i) :/\n    (send\n      (const nil :MAX_DIGIT_WIDTH) :to_f)) :*\n  (int 256)) to_i / ) :*\n                    (const nil :MAX_DIGIT_WIDTH))) :+\n                (float 0.5))) :to_i) :+\n          (const nil :PADDING))) :to_i) :/\n    (send\n      (const nil :MAX_DIGIT_WIDTH) :to_f)) :*\n  (int 256)) to_i ","(send\n  (send\n    (send\n      (begin\n        (send\n          (send\n            (begin\n              (send\n                (begin\n                  (send\n                    (lvar :(send\n  (send\n    (send\n      (begin\n        (send\n          (begin\n            (send\n              (lvar :width) :*\n              (begin\n                (send\n                  (const nil :MAX_DIGIT_WIDTH) :+\n                  (const nil :PADDING))))) :+\n          (float 0.5))) :to_i) :/\n    (send\n      (const nil :MAX_DIGIT_WIDTH) :to_f)) :*\n  (int 256)) to_i / ) :*\n                    (const nil :MAX_DIGIT_WIDTH))) :+\n                (float 0.5))) :to_i) :+\n          (const nil :PADDING))) :to_i) :/\n    (send\n      (const nil :MAX_DIGIT_WIDTH) :to_f)) :*\n  (int 256)) to_i ","(send\n  (send\n    (send\n      (begin\n        (send\n          (send\n            (begin\n              (send\n                (begin\n                  (send\n                    (lvar :args [] width ) :*\n                    (const nil :MAX_DIGIT_WIDTH))) :+\n                (float 0.5))) :to_i) :+\n          (const nil :PADDING))) :to_i) :/\n    (send\n      (const nil :MAX_DIGIT_WIDTH) :to_f)) :*\n  (int 256)) to_i ","(send\n  (send\n    (begin\n      (send\n        (begin\n          (send\n            (lvar :width to_i ) :*\n            (const nil :MAX_DIGIT_WIDTH))) :+\n        (float 0.5))) :to_i) :+\n  (const nil :PADDING)) to_i / * ","(send\n  (send\n    (begin\n      (send\n        (begin\n          (send\n            (lvar :(send\n  (send\n    (begin\n      (send\n        (send\n          (lvar :width) :*\n          (const nil :MAX_DIGIT_WIDTH)) :+\n        (const nil :PADDING))) :/\n    (send\n      (const nil :MAX_DIGIT_WIDTH) :to_f)) :*\n  (int 256)) to_i / ) :*\n            (const nil :MAX_DIGIT_WIDTH))) :+\n        (float 0.5))) :to_i) :+\n  (const nil :PADDING)) to_i / * ","(send\n  (send\n    (begin\n      (send\n        (begin\n          (send\n            (lvar :args [] ) :*\n            (const nil :MAX_DIGIT_WIDTH))) :+\n        (float 0.5))) :to_i) :+\n  (const nil :PADDING)) to_i / * ","(send\n  (send\n    (begin\n      (send\n        (begin\n          (send\n            (lvar :(send\n  (send\n    (send\n      (begin\n        (send\n          (send\n            (begin\n              (send\n                (send\n                  (lvar :width) :*\n                  (const nil :MAX_DIGIT_WIDTH)) :+\n                (float 0.5))) :to_i) :+\n          (const nil :PADDING))) :to_i) :/\n    (send\n      (const nil :MAX_DIGIT_WIDTH) :to_f)) :*\n  (int 256)) to_i / ) :*\n            (const nil :MAX_DIGIT_WIDTH))) :+\n        (float 0.5))) :to_i) :+\n  (const nil :PADDING)) to_i / * ","(send\n  (send\n    (begin\n      (send\n        (begin\n          (send\n            (lvar :(send\n  (send\n    (send\n      (begin\n        (send\n          (send\n            (lvar :width) :*\n            (begin\n              (send\n                (const nil :MAX_DIGIT_WIDTH) :+\n                (const nil :PADDING)))) :+\n          (float 0.5))) :to_i) :/\n    (send\n      (const nil :MAX_DIGIT_WIDTH) :to_f)) :*\n  (int 256)) to_i / ) :*\n            (const nil :MAX_DIGIT_WIDTH))) :+\n        (float 0.5))) :to_i) :+\n  (const nil :PADDING)) to_i / * ","(send\n  (send\n    (begin\n      (send\n        (begin\n          (send\n            (lvar :(send\n  (send\n    (send\n      (begin\n        (send\n          (send\n            (begin\n              (send\n                (begin\n                  (send\n                    (lvar :width) :*\n                    (const nil :MAX_DIGIT_WIDTH))) :+\n                (float 0.5))) :to_i) :+\n          (const nil :PADDING))) :to_i) :/\n    (send\n      (const nil :MAX_DIGIT_WIDTH) :to_f)) :*\n  (int 256)) to_i / ) :*\n            (const nil :MAX_DIGIT_WIDTH))) :+\n        (float 0.5))) :to_i) :+\n  (const nil :PADDING)) to_i / * ","(send\n  (send\n    (begin\n      (send\n        (begin\n          (send\n            (lvar :(send\n  (send\n    (send\n      (begin\n        (send\n          (begin\n            (send\n              (lvar :width) :*\n              (begin\n                (send\n                  (const nil :MAX_DIGIT_WIDTH) :+\n                  (const nil :PADDING))))) :+\n          (float 0.5))) :to_i) :/\n    (send\n      (const nil :MAX_DIGIT_WIDTH) :to_f)) :*\n  (int 256)) to_i / ) :*\n            (const nil :MAX_DIGIT_WIDTH))) :+\n        (float 0.5))) :to_i) :+\n  (const nil :PADDING)) to_i / * ","(send\n  (send\n    (begin\n      (send\n        (begin\n          (send\n            (lvar :args [] width ) :*\n            (const nil :MAX_DIGIT_WIDTH))) :+\n        (float 0.5))) :to_i) :+\n  (const nil :PADDING)) to_i / * ","(send\n  (send\n    (begin\n      (send\n        (begin\n          (send\n            (lvar :width to_i ) :*\n            (const nil :MAX_DIGIT_WIDTH))) :+\n        (float 0.5))) :to_i) :+\n  (const nil :PADDING)) to_i / ","(send\n  (send\n    (begin\n      (send\n        (begin\n          (send\n            (lvar :(send\n  (send\n    (begin\n      (send\n        (send\n          (lvar :width) :*\n          (const nil :MAX_DIGIT_WIDTH)) :+\n        (const nil :PADDING))) :/\n    (send\n      (const nil :MAX_DIGIT_WIDTH) :to_f)) :*\n  (int 256)) to_i / ) :*\n            (const nil :MAX_DIGIT_WIDTH))) :+\n        (float 0.5))) :to_i) :+\n  (const nil :PADDING)) to_i / ","(send\n  (send\n    (begin\n      (send\n        (begin\n          (send\n            (lvar :args [] ) :*\n            (const nil :MAX_DIGIT_WIDTH))) :+\n        (float 0.5))) :to_i) :+\n  (const nil :PADDING)) to_i / ","(send\n  (send\n    (begin\n      (send\n        (begin\n          (send\n            (lvar :(send\n  (send\n    (send\n      (begin\n        (send\n          (send\n            (begin\n              (send\n                (send\n                  (lvar :width) :*\n                  (const nil :MAX_DIGIT_WIDTH)) :+\n                (float 0.5))) :to_i) :+\n          (const nil :PADDING))) :to_i) :/\n    (send\n      (const nil :MAX_DIGIT_WIDTH) :to_f)) :*\n  (int 256)) to_i / ) :*\n            (const nil :MAX_DIGIT_WIDTH))) :+\n        (float 0.5))) :to_i) :+\n  (const nil :PADDING)) to_i / ","(send\n  (send\n    (begin\n      (send\n        (begin\n          (send\n            (lvar :(send\n  (send\n    (send\n      (begin\n        (send\n          (send\n            (lvar :width) :*\n            (begin\n              (send\n                (const nil :MAX_DIGIT_WIDTH) :+\n                (const nil :PADDING)))) :+\n          (float 0.5))) :to_i) :/\n    (send\n      (const nil :MAX_DIGIT_WIDTH) :to_f)) :*\n  (int 256)) to_i / ) :*\n            (const nil :MAX_DIGIT_WIDTH))) :+\n        (float 0.5))) :to_i) :+\n  (const nil :PADDING)) to_i / ","(send\n  (send\n    (begin\n      (send\n        (begin\n          (send\n            (lvar :(send\n  (send\n    (send\n      (begin\n        (send\n          (send\n            (begin\n              (send\n                (begin\n                  (send\n                    (lvar :width) :*\n                    (const nil :MAX_DIGIT_WIDTH))) :+\n                (float 0.5))) :to_i) :+\n          (const nil :PADDING))) :to_i) :/\n    (send\n      (const nil :MAX_DIGIT_WIDTH) :to_f)) :*\n  (int 256)) to_i / ) :*\n            (const nil :MAX_DIGIT_WIDTH))) :+\n        (float 0.5))) :to_i) :+\n  (const nil :PADDING)) to_i / ","(send\n  (send\n    (begin\n      (send\n        (begin\n          (send\n            (lvar :(send\n  (send\n    (send\n      (begin\n        (send\n          (begin\n            (send\n              (lvar :width) :*\n              (begin\n                (send\n                  (const nil :MAX_DIGIT_WIDTH) :+\n                  (const nil :PADDING))))) :+\n          (float 0.5))) :to_i) :/\n    (send\n      (const nil :MAX_DIGIT_WIDTH) :to_f)) :*\n  (int 256)) to_i / ) :*\n            (const nil :MAX_DIGIT_WIDTH))) :+\n        (float 0.5))) :to_i) :+\n  (const nil :PADDING)) to_i / ","(send\n  (send\n    (begin\n      (send\n        (begin\n          (send\n            (lvar :args [] width ) :*\n            (const nil :MAX_DIGIT_WIDTH))) :+\n        (float 0.5))) :to_i) :+\n  (const nil :PADDING)) to_i / ","(send\n  (send\n    (begin\n      (send\n        (begin\n          (send\n            (lvar :width to_i ) :*\n            (const nil :MAX_DIGIT_WIDTH))) :+\n        (float 0.5))) :to_i) :+\n  (const nil :PADDING)) to_i ","(send\n  (send\n    (begin\n      (send\n        (begin\n          (send\n            (lvar :(send\n  (send\n    (begin\n      (send\n        (send\n          (lvar :width) :*\n          (const nil :MAX_DIGIT_WIDTH)) :+\n        (const nil :PADDING))) :/\n    (send\n      (const nil :MAX_DIGIT_WIDTH) :to_f)) :*\n  (int 256)) to_i / ) :*\n            (const nil :MAX_DIGIT_WIDTH))) :+\n        (float 0.5))) :to_i) :+\n  (const nil :PADDING)) to_i ","(send\n  (send\n    (begin\n      (send\n        (begin\n          (send\n            (lvar :args [] ) :*\n            (const nil :MAX_DIGIT_WIDTH))) :+\n        (float 0.5))) :to_i) :+\n  (const nil :PADDING)) to_i ","(send\n  (send\n    (begin\n      (send\n        (begin\n          (send\n            (lvar :(send\n  (send\n    (send\n      (begin\n        (send\n          (send\n            (begin\n              (send\n                (send\n                  (lvar :width) :*\n                  (const nil :MAX_DIGIT_WIDTH)) :+\n                (float 0.5))) :to_i) :+\n          (const nil :PADDING))) :to_i) :/\n    (send\n      (const nil :MAX_DIGIT_WIDTH) :to_f)) :*\n  (int 256)) to_i / ) :*\n            (const nil :MAX_DIGIT_WIDTH))) :+\n        (float 0.5))) :to_i) :+\n  (const nil :PADDING)) to_i ","(send\n  (send\n    (begin\n      (send\n        (begin\n          (send\n            (lvar :(send\n  (send\n    (send\n      (begin\n        (send\n          (send\n            (lvar :width) :*\n            (begin\n              (send\n                (const nil :MAX_DIGIT_WIDTH) :+\n                (const nil :PADDING)))) :+\n          (float 0.5))) :to_i) :/\n    (send\n      (const nil :MAX_DIGIT_WIDTH) :to_f)) :*\n  (int 256)) to_i / ) :*\n            (const nil :MAX_DIGIT_WIDTH))) :+\n        (float 0.5))) :to_i) :+\n  (const nil :PADDING)) to_i ","(send\n  (send\n    (begin\n      (send\n        (begin\n          (send\n            (lvar :(send\n  (send\n    (send\n      (begin\n        (send\n          (send\n            (begin\n              (send\n                (begin\n                  (send\n                    (lvar :width) :*\n                    (const nil :MAX_DIGIT_WIDTH))) :+\n                (float 0.5))) :to_i) :+\n          (const nil :PADDING))) :to_i) :/\n    (send\n      (const nil :MAX_DIGIT_WIDTH) :to_f)) :*\n  (int 256)) to_i / ) :*\n            (const nil :MAX_DIGIT_WIDTH))) :+\n        (float 0.5))) :to_i) :+\n  (const nil :PADDING)) to_i ","(send\n  (send\n    (begin\n      (send\n        (begin\n          (send\n            (lvar :(send\n  (send\n    (send\n      (begin\n        (send\n          (begin\n            (send\n              (lvar :width) :*\n              (begin\n                (send\n                  (const nil :MAX_DIGIT_WIDTH) :+\n                  (const nil :PADDING))))) :+\n          (float 0.5))) :to_i) :/\n    (send\n      (const nil :MAX_DIGIT_WIDTH) :to_f)) :*\n  (int 256)) to_i / ) :*\n            (const nil :MAX_DIGIT_WIDTH))) :+\n        (float 0.5))) :to_i) :+\n  (const nil :PADDING)) to_i ","(send\n  (send\n    (begin\n      (send\n        (begin\n          (send\n            (lvar :args [] width ) :*\n            (const nil :MAX_DIGIT_WIDTH))) :+\n        (float 0.5))) :to_i) :+\n  (const nil :PADDING)) to_i ","(send\n  (begin\n    (send\n      (lvar :width to_i ) :*\n      (const nil :MAX_DIGIT_WIDTH))) :+\n  (float 0.5)) to_i + ","(send\n  (begin\n    (send\n      (lvar :(send\n  (send\n    (begin\n      (send\n        (send\n          (lvar :width) :*\n          (const nil :MAX_DIGIT_WIDTH)) :+\n        (const nil :PADDING))) :/\n    (send\n      (const nil :MAX_DIGIT_WIDTH) :to_f)) :*\n  (int 256)) to_i / ) :*\n      (const nil :MAX_DIGIT_WIDTH))) :+\n  (float 0.5)) to_i + ","(send\n  (begin\n    (send\n      (lvar :args [] ) :*\n      (const nil :MAX_DIGIT_WIDTH))) :+\n  (float 0.5)) to_i + ","(send\n  (begin\n    (send\n      (lvar :(send\n  (send\n    (send\n      (begin\n        (send\n          (send\n            (begin\n              (send\n                (send\n                  (lvar :width) :*\n                  (const nil :MAX_DIGIT_WIDTH)) :+\n                (float 0.5))) :to_i) :+\n          (const nil :PADDING))) :to_i) :/\n    (send\n      (const nil :MAX_DIGIT_WIDTH) :to_f)) :*\n  (int 256)) to_i / ) :*\n      (const nil :MAX_DIGIT_WIDTH))) :+\n  (float 0.5)) to_i + ","(send\n  (begin\n    (send\n      (lvar :(send\n  (send\n    (send\n      (begin\n        (send\n          (send\n            (lvar :width) :*\n            (begin\n              (send\n                (const nil :MAX_DIGIT_WIDTH) :+\n                (const nil :PADDING)))) :+\n          (float 0.5))) :to_i) :/\n    (send\n      (const nil :MAX_DIGIT_WIDTH) :to_f)) :*\n  (int 256)) to_i / ) :*\n      (const nil :MAX_DIGIT_WIDTH))) :+\n  (float 0.5)) to_i + ","(send\n  (begin\n    (send\n      (lvar :(send\n  (send\n    (send\n      (begin\n        (send\n          (send\n            (begin\n              (send\n                (begin\n                  (send\n                    (lvar :width) :*\n                    (const nil :MAX_DIGIT_WIDTH))) :+\n                (float 0.5))) :to_i) :+\n          (const nil :PADDING))) :to_i) :/\n    (send\n      (const nil :MAX_DIGIT_WIDTH) :to_f)) :*\n  (int 256)) to_i / ) :*\n      (const nil :MAX_DIGIT_WIDTH))) :+\n  (float 0.5)) to_i + ","(send\n  (begin\n    (send\n      (lvar :(send\n  (send\n    (send\n      (begin\n        (send\n          (begin\n            (send\n              (lvar :width) :*\n              (begin\n                (send\n                  (const nil :MAX_DIGIT_WIDTH) :+\n                  (const nil :PADDING))))) :+\n          (float 0.5))) :to_i) :/\n    (send\n      (const nil :MAX_DIGIT_WIDTH) :to_f)) :*\n  (int 256)) to_i / ) :*\n      (const nil :MAX_DIGIT_WIDTH))) :+\n  (float 0.5)) to_i + ","(send\n  (begin\n    (send\n      (lvar :args [] width ) :*\n      (const nil :MAX_DIGIT_WIDTH))) :+\n  (float 0.5)) to_i + ","(send\n  (begin\n    (send\n      (lvar :width to_i ) :*\n      (const nil :MAX_DIGIT_WIDTH))) :+\n  (float 0.5)) to_i ","(send\n  (begin\n    (send\n      (lvar :(send\n  (send\n    (begin\n      (send\n        (send\n          (lvar :width) :*\n          (const nil :MAX_DIGIT_WIDTH)) :+\n        (const nil :PADDING))) :/\n    (send\n      (const nil :MAX_DIGIT_WIDTH) :to_f)) :*\n  (int 256)) to_i / ) :*\n      (const nil :MAX_DIGIT_WIDTH))) :+\n  (float 0.5)) to_i ","(send\n  (begin\n    (send\n      (lvar :args [] ) :*\n      (const nil :MAX_DIGIT_WIDTH))) :+\n  (float 0.5)) to_i ","(send\n  (begin\n    (send\n      (lvar :(send\n  (send\n    (send\n      (begin\n        (send\n          (send\n            (begin\n              (send\n                (send\n                  (lvar :width) :*\n                  (const nil :MAX_DIGIT_WIDTH)) :+\n                (float 0.5))) :to_i) :+\n          (const nil :PADDING))) :to_i) :/\n    (send\n      (const nil :MAX_DIGIT_WIDTH) :to_f)) :*\n  (int 256)) to_i / ) :*\n      (const nil :MAX_DIGIT_WIDTH))) :+\n  (float 0.5)) to_i ","(send\n  (begin\n    (send\n      (lvar :(send\n  (send\n    (send\n      (begin\n        (send\n          (send\n            (lvar :width) :*\n            (begin\n              (send\n                (const nil :MAX_DIGIT_WIDTH) :+\n                (const nil :PADDING)))) :+\n          (float 0.5))) :to_i) :/\n    (send\n      (const nil :MAX_DIGIT_WIDTH) :to_f)) :*\n  (int 256)) to_i / ) :*\n      (const nil :MAX_DIGIT_WIDTH))) :+\n  (float 0.5)) to_i ","(send\n  (begin\n    (send\n      (lvar :(send\n  (send\n    (send\n      (begin\n        (send\n          (send\n            (begin\n              (send\n                (begin\n                  (send\n                    (lvar :width) :*\n                    (const nil :MAX_DIGIT_WIDTH))) :+\n                (float 0.5))) :to_i) :+\n          (const nil :PADDING))) :to_i) :/\n    (send\n      (const nil :MAX_DIGIT_WIDTH) :to_f)) :*\n  (int 256)) to_i / ) :*\n      (const nil :MAX_DIGIT_WIDTH))) :+\n  (float 0.5)) to_i ","(send\n  (begin\n    (send\n      (lvar :(send\n  (send\n    (send\n      (begin\n        (send\n          (begin\n            (send\n              (lvar :width) :*\n              (begin\n                (send\n                  (const nil :MAX_DIGIT_WIDTH) :+\n                  (const nil :PADDING))))) :+\n          (float 0.5))) :to_i) :/\n    (send\n      (const nil :MAX_DIGIT_WIDTH) :to_f)) :*\n  (int 256)) to_i / ) :*\n      (const nil :MAX_DIGIT_WIDTH))) :+\n  (float 0.5)) to_i ","(send\n  (begin\n    (send\n      (lvar :args [] width ) :*\n      (const nil :MAX_DIGIT_WIDTH))) :+\n  (float 0.5)) to_i ","(send\n  (lvar :width to_i ) :*\n  (const nil :MAX_DIGIT_WIDTH)) + ","(send\n  (lvar :(send\n  (send\n    (begin\n      (send\n        (send\n          (lvar :width) :*\n          (const nil :MAX_DIGIT_WIDTH)) :+\n        (const nil :PADDING))) :/\n    (send\n      (const nil :MAX_DIGIT_WIDTH) :to_f)) :*\n  (int 256)) to_i / ) :*\n  (const nil :MAX_DIGIT_WIDTH)) + ","(send\n  (lvar :args [] ) :*\n  (const nil :MAX_DIGIT_WIDTH)) + ","(send\n  (lvar :(send\n  (send\n    (send\n      (begin\n        (send\n          (send\n            (begin\n              (send\n                (send\n                  (lvar :width) :*\n                  (const nil :MAX_DIGIT_WIDTH)) :+\n                (float 0.5))) :to_i) :+\n          (const nil :PADDING))) :to_i) :/\n    (send\n      (const nil :MAX_DIGIT_WIDTH) :to_f)) :*\n  (int 256)) to_i / ) :*\n  (const nil :MAX_DIGIT_WIDTH)) + ","(send\n  (lvar :(send\n  (send\n    (send\n      (begin\n        (send\n          (send\n            (lvar :width) :*\n            (begin\n              (send\n                (const nil :MAX_DIGIT_WIDTH) :+\n                (const nil :PADDING)))) :+\n          (float 0.5))) :to_i) :/\n    (send\n      (const nil :MAX_DIGIT_WIDTH) :to_f)) :*\n  (int 256)) to_i / ) :*\n  (const nil :MAX_DIGIT_WIDTH)) + ","(send\n  (lvar :(send\n  (send\n    (send\n      (begin\n        (send\n          (send\n            (begin\n              (send\n                (begin\n                  (send\n                    (lvar :width) :*\n                    (const nil :MAX_DIGIT_WIDTH))) :+\n                (float 0.5))) :to_i) :+\n          (const nil :PADDING))) :to_i) :/\n    (send\n      (const nil :MAX_DIGIT_WIDTH) :to_f)) :*\n  (int 256)) to_i / ) :*\n  (const nil :MAX_DIGIT_WIDTH)) + ","(send\n  (lvar :(send\n  (send\n    (send\n      (begin\n        (send\n          (begin\n            (send\n              (lvar :width) :*\n              (begin\n                (send\n                  (const nil :MAX_DIGIT_WIDTH) :+\n                  (const nil :PADDING))))) :+\n          (float 0.5))) :to_i) :/\n    (send\n      (const nil :MAX_DIGIT_WIDTH) :to_f)) :*\n  (int 256)) to_i / ) :*\n  (const nil :MAX_DIGIT_WIDTH)) + ","(send\n  (lvar :args [] width ) :*\n  (const nil :MAX_DIGIT_WIDTH)) + ","(send\n  (send\n    (send\n      (begin\n        (send\n          (begin\n            (send\n              (lvar :width to_i ) :*\n              (begin\n                (send\n                  (const nil :MAX_DIGIT_WIDTH) :+\n                  (const nil :PADDING))))) :+\n          (float 0.5))) :to_i) :/\n    (send\n      (const nil :MAX_DIGIT_WIDTH) :to_f)) :*\n  (int 256)) to_i / ","(send\n  (send\n    (send\n      (begin\n        (send\n          (begin\n            (send\n              (lvar :(send\n  (send\n    (begin\n      (send\n        (send\n          (lvar :width) :*\n          (const nil :MAX_DIGIT_WIDTH)) :+\n        (const nil :PADDING))) :/\n    (send\n      (const nil :MAX_DIGIT_WIDTH) :to_f)) :*\n  (int 256)) to_i / ) :*\n              (begin\n                (send\n                  (const nil :MAX_DIGIT_WIDTH) :+\n                  (const nil :PADDING))))) :+\n          (float 0.5))) :to_i) :/\n    (send\n      (const nil :MAX_DIGIT_WIDTH) :to_f)) :*\n  (int 256)) to_i / ","(send\n  (send\n    (send\n      (begin\n        (send\n          (begin\n            (send\n              (lvar :args [] ) :*\n              (begin\n                (send\n                  (const nil :MAX_DIGIT_WIDTH) :+\n                  (const nil :PADDING))))) :+\n          (float 0.5))) :to_i) :/\n    (send\n      (const nil :MAX_DIGIT_WIDTH) :to_f)) :*\n  (int 256)) to_i / ","(send\n  (send\n    (send\n      (begin\n        (send\n          (begin\n            (send\n              (lvar :(send\n  (send\n    (send\n      (begin\n        (send\n          (send\n            (begin\n              (send\n                (send\n                  (lvar :width) :*\n                  (const nil :MAX_DIGIT_WIDTH)) :+\n                (float 0.5))) :to_i) :+\n          (const nil :PADDING))) :to_i) :/\n    (send\n      (const nil :MAX_DIGIT_WIDTH) :to_f)) :*\n  (int 256)) to_i / ) :*\n              (begin\n                (send\n                  (const nil :MAX_DIGIT_WIDTH) :+\n                  (const nil :PADDING))))) :+\n          (float 0.5))) :to_i) :/\n    (send\n      (const nil :MAX_DIGIT_WIDTH) :to_f)) :*\n  (int 256)) to_i / ","(send\n  (send\n    (send\n      (begin\n        (send\n          (begin\n            (send\n              (lvar :(send\n  (send\n    (send\n      (begin\n        (send\n          (send\n            (lvar :width) :*\n            (begin\n              (send\n                (const nil :MAX_DIGIT_WIDTH) :+\n                (const nil :PADDING)))) :+\n          (float 0.5))) :to_i) :/\n    (send\n      (const nil :MAX_DIGIT_WIDTH) :to_f)) :*\n  (int 256)) to_i / ) :*\n              (begin\n                (send\n                  (const nil :MAX_DIGIT_WIDTH) :+\n                  (const nil :PADDING))))) :+\n          (float 0.5))) :to_i) :/\n    (send\n      (const nil :MAX_DIGIT_WIDTH) :to_f)) :*\n  (int 256)) to_i / ","(send\n  (send\n    (send\n      (begin\n        (send\n          (begin\n            (send\n              (lvar :(send\n  (send\n    (send\n      (begin\n        (send\n          (send\n            (begin\n              (send\n                (begin\n                  (send\n                    (lvar :width) :*\n                    (const nil :MAX_DIGIT_WIDTH))) :+\n                (float 0.5))) :to_i) :+\n          (const nil :PADDING))) :to_i) :/\n    (send\n      (const nil :MAX_DIGIT_WIDTH) :to_f)) :*\n  (int 256)) to_i / ) :*\n              (begin\n                (send\n                  (const nil :MAX_DIGIT_WIDTH) :+\n                  (const nil :PADDING))))) :+\n          (float 0.5))) :to_i) :/\n    (send\n      (const nil :MAX_DIGIT_WIDTH) :to_f)) :*\n  (int 256)) to_i / ","(send\n  (send\n    (send\n      (begin\n        (send\n          (begin\n            (send\n              (lvar :(send\n  (send\n    (send\n      (begin\n        (send\n          (begin\n            (send\n              (lvar :width) :*\n              (begin\n                (send\n                  (const nil :MAX_DIGIT_WIDTH) :+\n                  (const nil :PADDING))))) :+\n          (float 0.5))) :to_i) :/\n    (send\n      (const nil :MAX_DIGIT_WIDTH) :to_f)) :*\n  (int 256)) to_i / ) :*\n              (begin\n                (send\n                  (const nil :MAX_DIGIT_WIDTH) :+\n                  (const nil :PADDING))))) :+\n          (float 0.5))) :to_i) :/\n    (send\n      (const nil :MAX_DIGIT_WIDTH) :to_f)) :*\n  (int 256)) to_i / ","(send\n  (send\n    (send\n      (begin\n        (send\n          (begin\n            (send\n              (lvar :args [] width ) :*\n              (begin\n                (send\n                  (const nil :MAX_DIGIT_WIDTH) :+\n                  (const nil :PADDING))))) :+\n          (float 0.5))) :to_i) :/\n    (send\n      (const nil :MAX_DIGIT_WIDTH) :to_f)) :*\n  (int 256)) to_i / ","(send\n  (send\n    (send\n      (begin\n        (send\n          (begin\n            (send\n              (lvar :width to_i ) :*\n              (begin\n                (send\n                  (const nil :MAX_DIGIT_WIDTH) :+\n                  (const nil :PADDING))))) :+\n          (float 0.5))) :to_i) :/\n    (send\n      (const nil :MAX_DIGIT_WIDTH) :to_f)) :*\n  (int 256)) to_i ","(send\n  (send\n    (send\n      (begin\n        (send\n          (begin\n            (send\n              (lvar :(send\n  (send\n    (begin\n      (send\n        (send\n          (lvar :width) :*\n          (const nil :MAX_DIGIT_WIDTH)) :+\n        (const nil :PADDING))) :/\n    (send\n      (const nil :MAX_DIGIT_WIDTH) :to_f)) :*\n  (int 256)) to_i / ) :*\n              (begin\n                (send\n                  (const nil :MAX_DIGIT_WIDTH) :+\n                  (const nil :PADDING))))) :+\n          (float 0.5))) :to_i) :/\n    (send\n      (const nil :MAX_DIGIT_WIDTH) :to_f)) :*\n  (int 256)) to_i ","(send\n  (send\n    (send\n      (begin\n        (send\n          (begin\n            (send\n              (lvar :args [] ) :*\n              (begin\n                (send\n                  (const nil :MAX_DIGIT_WIDTH) :+\n                  (const nil :PADDING))))) :+\n          (float 0.5))) :to_i) :/\n    (send\n      (const nil :MAX_DIGIT_WIDTH) :to_f)) :*\n  (int 256)) to_i ","(send\n  (send\n    (send\n      (begin\n        (send\n          (begin\n            (send\n              (lvar :(send\n  (send\n    (send\n      (begin\n        (send\n          (send\n            (begin\n              (send\n                (send\n                  (lvar :width) :*\n                  (const nil :MAX_DIGIT_WIDTH)) :+\n                (float 0.5))) :to_i) :+\n          (const nil :PADDING))) :to_i) :/\n    (send\n      (const nil :MAX_DIGIT_WIDTH) :to_f)) :*\n  (int 256)) to_i / ) :*\n              (begin\n                (send\n                  (const nil :MAX_DIGIT_WIDTH) :+\n                  (const nil :PADDING))))) :+\n          (float 0.5))) :to_i) :/\n    (send\n      (const nil :MAX_DIGIT_WIDTH) :to_f)) :*\n  (int 256)) to_i ","(send\n  (send\n    (send\n      (begin\n        (send\n          (begin\n            (send\n              (lvar :(send\n  (send\n    (send\n      (begin\n        (send\n          (send\n            (lvar :width) :*\n            (begin\n              (send\n                (const nil :MAX_DIGIT_WIDTH) :+\n                (const nil :PADDING)))) :+\n          (float 0.5))) :to_i) :/\n    (send\n      (const nil :MAX_DIGIT_WIDTH) :to_f)) :*\n  (int 256)) to_i / ) :*\n              (begin\n                (send\n                  (const nil :MAX_DIGIT_WIDTH) :+\n                  (const nil :PADDING))))) :+\n          (float 0.5))) :to_i) :/\n    (send\n      (const nil :MAX_DIGIT_WIDTH) :to_f)) :*\n  (int 256)) to_i ","(send\n  (send\n    (send\n      (begin\n        (send\n          (begin\n            (send\n              (lvar :(send\n  (send\n    (send\n      (begin\n        (send\n          (send\n            (begin\n              (send\n                (begin\n                  (send\n                    (lvar :width) :*\n                    (const nil :MAX_DIGIT_WIDTH))) :+\n                (float 0.5))) :to_i) :+\n          (const nil :PADDING))) :to_i) :/\n    (send\n      (const nil :MAX_DIGIT_WIDTH) :to_f)) :*\n  (int 256)) to_i / ) :*\n              (begin\n                (send\n                  (const nil :MAX_DIGIT_WIDTH) :+\n                  (const nil :PADDING))))) :+\n          (float 0.5))) :to_i) :/\n    (send\n      (const nil :MAX_DIGIT_WIDTH) :to_f)) :*\n  (int 256)) to_i ","(send\n  (send\n    (send\n      (begin\n        (send\n          (begin\n            (send\n              (lvar :(send\n  (send\n    (send\n      (begin\n        (send\n          (begin\n            (send\n              (lvar :width) :*\n              (begin\n                (send\n                  (const nil :MAX_DIGIT_WIDTH) :+\n                  (const nil :PADDING))))) :+\n          (float 0.5))) :to_i) :/\n    (send\n      (const nil :MAX_DIGIT_WIDTH) :to_f)) :*\n  (int 256)) to_i / ) :*\n              (begin\n                (send\n                  (const nil :MAX_DIGIT_WIDTH) :+\n                  (const nil :PADDING))))) :+\n          (float 0.5))) :to_i) :/\n    (send\n      (const nil :MAX_DIGIT_WIDTH) :to_f)) :*\n  (int 256)) to_i ","(send\n  (send\n    (send\n      (begin\n        (send\n          (begin\n            (send\n              (lvar :args [] width ) :*\n              (begin\n                (send\n                  (const nil :MAX_DIGIT_WIDTH) :+\n                  (const nil :PADDING))))) :+\n          (float 0.5))) :to_i) :/\n    (send\n      (const nil :MAX_DIGIT_WIDTH) :to_f)) :*\n  (int 256)) to_i ","(send\n  (begin\n    (send\n      (lvar :width to_i ) :*\n      (begin\n        (send\n          (const nil :MAX_DIGIT_WIDTH) :+\n          (const nil :PADDING))))) :+\n  (float 0.5)) to_i / * ","(send\n  (begin\n    (send\n      (lvar :(send\n  (send\n    (begin\n      (send\n        (send\n          (lvar :width) :*\n          (const nil :MAX_DIGIT_WIDTH)) :+\n        (const nil :PADDING))) :/\n    (send\n      (const nil :MAX_DIGIT_WIDTH) :to_f)) :*\n  (int 256)) to_i / ) :*\n      (begin\n        (send\n          (const nil :MAX_DIGIT_WIDTH) :+\n          (const nil :PADDING))))) :+\n  (float 0.5)) to_i / * ","(send\n  (begin\n    (send\n      (lvar :args [] ) :*\n      (begin\n        (send\n          (const nil :MAX_DIGIT_WIDTH) :+\n          (const nil :PADDING))))) :+\n  (float 0.5)) to_i / * ","(send\n  (begin\n    (send\n      (lvar :(send\n  (send\n    (send\n      (begin\n        (send\n          (send\n            (begin\n              (send\n                (send\n                  (lvar :width) :*\n                  (const nil :MAX_DIGIT_WIDTH)) :+\n                (float 0.5))) :to_i) :+\n          (const nil :PADDING))) :to_i) :/\n    (send\n      (const nil :MAX_DIGIT_WIDTH) :to_f)) :*\n  (int 256)) to_i / ) :*\n      (begin\n        (send\n          (const nil :MAX_DIGIT_WIDTH) :+\n          (const nil :PADDING))))) :+\n  (float 0.5)) to_i / * ","(send\n  (begin\n    (send\n      (lvar :(send\n  (send\n    (send\n      (begin\n        (send\n          (send\n            (lvar :width) :*\n            (begin\n              (send\n                (const nil :MAX_DIGIT_WIDTH) :+\n                (const nil :PADDING)))) :+\n          (float 0.5))) :to_i) :/\n    (send\n      (const nil :MAX_DIGIT_WIDTH) :to_f)) :*\n  (int 256)) to_i / ) :*\n      (begin\n        (send\n          (const nil :MAX_DIGIT_WIDTH) :+\n          (const nil :PADDING))))) :+\n  (float 0.5)) to_i / * ","(send\n  (begin\n    (send\n      (lvar :(send\n  (send\n    (send\n      (begin\n        (send\n          (send\n            (begin\n              (send\n                (begin\n                  (send\n                    (lvar :width) :*\n                    (const nil :MAX_DIGIT_WIDTH))) :+\n                (float 0.5))) :to_i) :+\n          (const nil :PADDING))) :to_i) :/\n    (send\n      (const nil :MAX_DIGIT_WIDTH) :to_f)) :*\n  (int 256)) to_i / ) :*\n      (begin\n        (send\n          (const nil :MAX_DIGIT_WIDTH) :+\n          (const nil :PADDING))))) :+\n  (float 0.5)) to_i / * ","(send\n  (begin\n    (send\n      (lvar :(send\n  (send\n    (send\n      (begin\n        (send\n          (begin\n            (send\n              (lvar :width) :*\n              (begin\n                (send\n                  (const nil :MAX_DIGIT_WIDTH) :+\n                  (const nil :PADDING))))) :+\n          (float 0.5))) :to_i) :/\n    (send\n      (const nil :MAX_DIGIT_WIDTH) :to_f)) :*\n  (int 256)) to_i / ) :*\n      (begin\n        (send\n          (const nil :MAX_DIGIT_WIDTH) :+\n          (const nil :PADDING))))) :+\n  (float 0.5)) to_i / * ","(send\n  (begin\n    (send\n      (lvar :args [] width ) :*\n      (begin\n        (send\n          (const nil :MAX_DIGIT_WIDTH) :+\n          (const nil :PADDING))))) :+\n  (float 0.5)) to_i / * ","(send\n  (begin\n    (send\n      (lvar :width to_i ) :*\n      (begin\n        (send\n          (const nil :MAX_DIGIT_WIDTH) :+\n          (const nil :PADDING))))) :+\n  (float 0.5)) to_i / ","(send\n  (begin\n    (send\n      (lvar :(send\n  (send\n    (begin\n      (send\n        (send\n          (lvar :width) :*\n          (const nil :MAX_DIGIT_WIDTH)) :+\n        (const nil :PADDING))) :/\n    (send\n      (const nil :MAX_DIGIT_WIDTH) :to_f)) :*\n  (int 256)) to_i / ) :*\n      (begin\n        (send\n          (const nil :MAX_DIGIT_WIDTH) :+\n          (const nil :PADDING))))) :+\n  (float 0.5)) to_i / ","(send\n  (begin\n    (send\n      (lvar :args [] ) :*\n      (begin\n        (send\n          (const nil :MAX_DIGIT_WIDTH) :+\n          (const nil :PADDING))))) :+\n  (float 0.5)) to_i / ","(send\n  (begin\n    (send\n      (lvar :(send\n  (send\n    (send\n      (begin\n        (send\n          (send\n            (begin\n              (send\n                (send\n                  (lvar :width) :*\n                  (const nil :MAX_DIGIT_WIDTH)) :+\n                (float 0.5))) :to_i) :+\n          (const nil :PADDING))) :to_i) :/\n    (send\n      (const nil :MAX_DIGIT_WIDTH) :to_f)) :*\n  (int 256)) to_i / ) :*\n      (begin\n        (send\n          (const nil :MAX_DIGIT_WIDTH) :+\n          (const nil :PADDING))))) :+\n  (float 0.5)) to_i / ","(send\n  (begin\n    (send\n      (lvar :(send\n  (send\n    (send\n      (begin\n        (send\n          (send\n            (lvar :width) :*\n            (begin\n              (send\n                (const nil :MAX_DIGIT_WIDTH) :+\n                (const nil :PADDING)))) :+\n          (float 0.5))) :to_i) :/\n    (send\n      (const nil :MAX_DIGIT_WIDTH) :to_f)) :*\n  (int 256)) to_i / ) :*\n      (begin\n        (send\n          (const nil :MAX_DIGIT_WIDTH) :+\n          (const nil :PADDING))))) :+\n  (float 0.5)) to_i / ","(send\n  (begin\n    (send\n      (lvar :(send\n  (send\n    (send\n      (begin\n        (send\n          (send\n            (begin\n              (send\n                (begin\n                  (send\n                    (lvar :width) :*\n                    (const nil :MAX_DIGIT_WIDTH))) :+\n                (float 0.5))) :to_i) :+\n          (const nil :PADDING))) :to_i) :/\n    (send\n      (const nil :MAX_DIGIT_WIDTH) :to_f)) :*\n  (int 256)) to_i / ) :*\n      (begin\n        (send\n          (const nil :MAX_DIGIT_WIDTH) :+\n          (const nil :PADDING))))) :+\n  (float 0.5)) to_i / ","(send\n  (begin\n    (send\n      (lvar :(send\n  (send\n    (send\n      (begin\n        (send\n          (begin\n            (send\n              (lvar :width) :*\n              (begin\n                (send\n                  (const nil :MAX_DIGIT_WIDTH) :+\n                  (const nil :PADDING))))) :+\n          (float 0.5))) :to_i) :/\n    (send\n      (const nil :MAX_DIGIT_WIDTH) :to_f)) :*\n  (int 256)) to_i / ) :*\n      (begin\n        (send\n          (const nil :MAX_DIGIT_WIDTH) :+\n          (const nil :PADDING))))) :+\n  (float 0.5)) to_i / ","(send\n  (begin\n    (send\n      (lvar :args [] width ) :*\n      (begin\n        (send\n          (const nil :MAX_DIGIT_WIDTH) :+\n          (const nil :PADDING))))) :+\n  (float 0.5)) to_i / ","(send\n  (begin\n    (send\n      (lvar :width to_i ) :*\n      (begin\n        (send\n          (const nil :MAX_DIGIT_WIDTH) :+\n          (const nil :PADDING))))) :+\n  (float 0.5)) to_i ","(send\n  (begin\n    (send\n      (lvar :(send\n  (send\n    (begin\n      (send\n        (send\n          (lvar :width) :*\n          (const nil :MAX_DIGIT_WIDTH)) :+\n        (const nil :PADDING))) :/\n    (send\n      (const nil :MAX_DIGIT_WIDTH) :to_f)) :*\n  (int 256)) to_i / ) :*\n      (begin\n        (send\n          (const nil :MAX_DIGIT_WIDTH) :+\n          (const nil :PADDING))))) :+\n  (float 0.5)) to_i ","(send\n  (begin\n    (send\n      (lvar :args [] ) :*\n      (begin\n        (send\n          (const nil :MAX_DIGIT_WIDTH) :+\n          (const nil :PADDING))))) :+\n  (float 0.5)) to_i ","(send\n  (begin\n    (send\n      (lvar :(send\n  (send\n    (send\n      (begin\n        (send\n          (send\n            (begin\n              (send\n                (send\n                  (lvar :width) :*\n                  (const nil :MAX_DIGIT_WIDTH)) :+\n                (float 0.5))) :to_i) :+\n          (const nil :PADDING))) :to_i) :/\n    (send\n      (const nil :MAX_DIGIT_WIDTH) :to_f)) :*\n  (int 256)) to_i / ) :*\n      (begin\n        (send\n          (const nil :MAX_DIGIT_WIDTH) :+\n          (const nil :PADDING))))) :+\n  (float 0.5)) to_i ","(send\n  (begin\n    (send\n      (lvar :(send\n  (send\n    (send\n      (begin\n        (send\n          (send\n            (lvar :width) :*\n            (begin\n              (send\n                (const nil :MAX_DIGIT_WIDTH) :+\n                (const nil :PADDING)))) :+\n          (float 0.5))) :to_i) :/\n    (send\n      (const nil :MAX_DIGIT_WIDTH) :to_f)) :*\n  (int 256)) to_i / ) :*\n      (begin\n        (send\n          (const nil :MAX_DIGIT_WIDTH) :+\n          (const nil :PADDING))))) :+\n  (float 0.5)) to_i ","(send\n  (begin\n    (send\n      (lvar :(send\n  (send\n    (send\n      (begin\n        (send\n          (send\n            (begin\n              (send\n                (begin\n                  (send\n                    (lvar :width) :*\n                    (const nil :MAX_DIGIT_WIDTH))) :+\n                (float 0.5))) :to_i) :+\n          (const nil :PADDING))) :to_i) :/\n    (send\n      (const nil :MAX_DIGIT_WIDTH) :to_f)) :*\n  (int 256)) to_i / ) :*\n      (begin\n        (send\n          (const nil :MAX_DIGIT_WIDTH) :+\n          (const nil :PADDING))))) :+\n  (float 0.5)) to_i ","(send\n  (begin\n    (send\n      (lvar :(send\n  (send\n    (send\n      (begin\n        (send\n          (begin\n            (send\n              (lvar :width) :*\n              (begin\n                (send\n                  (const nil :MAX_DIGIT_WIDTH) :+\n                  (const nil :PADDING))))) :+\n          (float 0.5))) :to_i) :/\n    (send\n      (const nil :MAX_DIGIT_WIDTH) :to_f)) :*\n  (int 256)) to_i / ) :*\n      (begin\n        (send\n          (const nil :MAX_DIGIT_WIDTH) :+\n          (const nil :PADDING))))) :+\n  (float 0.5)) to_i ","(send\n  (begin\n    (send\n      (lvar :args [] width ) :*\n      (begin\n        (send\n          (const nil :MAX_DIGIT_WIDTH) :+\n          (const nil :PADDING))))) :+\n  (float 0.5)) to_i ","(send\n  (lvar :width to_i ) :*\n  (begin\n    (send\n      (const nil :MAX_DIGIT_WIDTH) :+\n      (const nil :PADDING)))) + ","(send\n  (lvar :(send\n  (send\n    (begin\n      (send\n        (send\n          (lvar :width) :*\n          (const nil :MAX_DIGIT_WIDTH)) :+\n        (const nil :PADDING))) :/\n    (send\n      (const nil :MAX_DIGIT_WIDTH) :to_f)) :*\n  (int 256)) to_i / ) :*\n  (begin\n    (send\n      (const nil :MAX_DIGIT_WIDTH) :+\n      (const nil :PADDING)))) + ","(send\n  (lvar :args [] ) :*\n  (begin\n    (send\n      (const nil :MAX_DIGIT_WIDTH) :+\n      (const nil :PADDING)))) + ","(send\n  (lvar :(send\n  (send\n    (send\n      (begin\n        (send\n          (send\n            (begin\n              (send\n                (send\n                  (lvar :width) :*\n                  (const nil :MAX_DIGIT_WIDTH)) :+\n                (float 0.5))) :to_i) :+\n          (const nil :PADDING))) :to_i) :/\n    (send\n      (const nil :MAX_DIGIT_WIDTH) :to_f)) :*\n  (int 256)) to_i / ) :*\n  (begin\n    (send\n      (const nil :MAX_DIGIT_WIDTH) :+\n      (const nil :PADDING)))) + ","(send\n  (lvar :(send\n  (send\n    (send\n      (begin\n        (send\n          (send\n            (lvar :width) :*\n            (begin\n              (send\n                (const nil :MAX_DIGIT_WIDTH) :+\n                (const nil :PADDING)))) :+\n          (float 0.5))) :to_i) :/\n    (send\n      (const nil :MAX_DIGIT_WIDTH) :to_f)) :*\n  (int 256)) to_i / ) :*\n  (begin\n    (send\n      (const nil :MAX_DIGIT_WIDTH) :+\n      (const nil :PADDING)))) + ","(send\n  (lvar :(send\n  (send\n    (send\n      (begin\n        (send\n          (send\n            (begin\n              (send\n                (begin\n                  (send\n                    (lvar :width) :*\n                    (const nil :MAX_DIGIT_WIDTH))) :+\n                (float 0.5))) :to_i) :+\n          (const nil :PADDING))) :to_i) :/\n    (send\n      (const nil :MAX_DIGIT_WIDTH) :to_f)) :*\n  (int 256)) to_i / ) :*\n  (begin\n    (send\n      (const nil :MAX_DIGIT_WIDTH) :+\n      (const nil :PADDING)))) + ","(send\n  (lvar :(send\n  (send\n    (send\n      (begin\n        (send\n          (begin\n            (send\n              (lvar :width) :*\n              (begin\n                (send\n                  (const nil :MAX_DIGIT_WIDTH) :+\n                  (const nil :PADDING))))) :+\n          (float 0.5))) :to_i) :/\n    (send\n      (const nil :MAX_DIGIT_WIDTH) :to_f)) :*\n  (int 256)) to_i / ) :*\n  (begin\n    (send\n      (const nil :MAX_DIGIT_WIDTH) :+\n      (const nil :PADDING)))) + ","(send\n  (lvar :args [] width ) :*\n  (begin\n    (send\n      (const nil :MAX_DIGIT_WIDTH) :+\n      (const nil :PADDING)))) + ","args [] args []  ","args [] args [] format  ","args [] width to_i  ","args [] (send\n  (send\n    (begin\n      (send\n        (send\n          (lvar :width) :*\n          (const nil :MAX_DIGIT_WIDTH)) :+\n        (const nil :PADDING))) :/\n    (send\n      (const nil :MAX_DIGIT_WIDTH) :to_f)) :*\n  (int 256)) to_i /  ","args [] (send\n  (send\n    (send\n      (begin\n        (send\n          (send\n            (begin\n              (send\n                (send\n                  (lvar :width) :*\n                  (const nil :MAX_DIGIT_WIDTH)) :+\n                (float 0.5))) :to_i) :+\n          (const nil :PADDING))) :to_i) :/\n    (send\n      (const nil :MAX_DIGIT_WIDTH) :to_f)) :*\n  (int 256)) to_i /  ","args [] (send\n  (send\n    (send\n      (begin\n        (send\n          (send\n            (lvar :width) :*\n            (begin\n              (send\n                (const nil :MAX_DIGIT_WIDTH) :+\n                (const nil :PADDING)))) :+\n          (float 0.5))) :to_i) :/\n    (send\n      (const nil :MAX_DIGIT_WIDTH) :to_f)) :*\n  (int 256)) to_i /  ","args [] (send\n  (send\n    (send\n      (begin\n        (send\n          (send\n            (begin\n              (send\n                (begin\n                  (send\n                    (lvar :width) :*\n                    (const nil :MAX_DIGIT_WIDTH))) :+\n                (float 0.5))) :to_i) :+\n          (const nil :PADDING))) :to_i) :/\n    (send\n      (const nil :MAX_DIGIT_WIDTH) :to_f)) :*\n  (int 256)) to_i /  ","args [] (send\n  (send\n    (send\n      (begin\n        (send\n          (begin\n            (send\n              (lvar :width) :*\n              (begin\n                (send\n                  (const nil :MAX_DIGIT_WIDTH) :+\n                  (const nil :PADDING))))) :+\n          (float 0.5))) :to_i) :/\n    (send\n      (const nil :MAX_DIGIT_WIDTH) :to_f)) :*\n  (int 256)) to_i /  ","args [] args [] width  "]}," Writexlsx Worksheet tab_outline_fit?":{"type":"method","name":"tab_outline_fit?","children":[],"call":[" fit_page? "," outline_changed? "," tab_color? "]}," Writexlsx Worksheet write_worksheet_attributes":{"type":"method","name":"write_worksheet_attributes","children":[],"call":["attributes << << ","attributes << ","@excel_version == "]}," Writexlsx Worksheet xml_str_of_rich_string":{"type":"method","name":"xml_str_of_rich_string","children":[],"call":["writer string ","writer end_tag ","writer data_element ","attributes << << ","attributes << ","token =~ ","token write_font ","writer start_tag ","token respond_to? ","fragments each ","fragments [] respond_to? ! ","fragments [] respond_to? ","fragments [] ","Package XMLWriterSimple  new ","token write_font_rpr ","Package XMLWriterSimple  new  string ","Package XMLWriterSimple  new  end_tag ","Package XMLWriterSimple  new  data_element ","Package XMLWriterSimple  new  start_tag "]}," Writexlsx Worksheet cell_format_of_rich_string":{"type":"method","name":"cell_format_of_rich_string","children":[],"call":["rich_strings pop ","rich_strings [] respond_to? ","rich_strings [] "]}," Writexlsx Worksheet tables_count":{"type":"method","name":"tables_count","children":[],"call":["@tables size "]}," Writexlsx Worksheet drawing_links":{"type":"method","name":"drawing_links","children":[],"call":[]}," Writexlsx Worksheet external_links":{"type":"method","name":"external_links","children":[],"call":["a empty? ","(ivar :@external_hyper_links) reject "]}," Writexlsx Worksheet PageSetup margin_attributes":{"type":"method","name":"margin_attributes","children":[],"call":[]}," Writexlsx Worksheet PageSetup write_odd_footer":{"type":"method","name":"write_odd_footer","children":[],"call":["writer data_element "]}," Writexlsx Worksheet PageSetup write_odd_header":{"type":"method","name":"write_odd_header","children":[],"call":["writer data_element "]}," Writexlsx Worksheet PageSetup write_header_footer":{"type":"method","name":"write_header_footer","children":[],"call":[" write_odd_footer ","@footer != "," write_odd_header ","@header != ","writer tag_elements ","writer empty_tag ","attributes << "," ptrue? "]}," Writexlsx Worksheet PageSetup write_print_options":{"type":"method","name":"write_print_options","children":[],"call":["writer empty_tag ","attributes << << ","attributes << "]}," Writexlsx Worksheet PageSetup write_page_margins":{"type":"method","name":"write_page_margins","children":[],"call":["writer empty_tag "," margin_attributes "]}," Writexlsx Worksheet PageSetup write_page_setup":{"type":"method","name":"write_page_setup","children":[],"call":["writer empty_tag ","attributes << ","attributes << << ","@fit_height != ","@fit_width != ","@scale != "," ptrue? ","@page_start > "]}," Writexlsx Worksheet PageSetup hide_gridlines":{"type":"method","name":"hide_gridlines","children":[],"call":["option ! ","option == "]}," Writexlsx Worksheet PageSetup print_row_col_headers":{"type":"method","name":"print_row_col_headers","children":[],"call":[]}," Writexlsx Worksheet PageSetup center_vertically":{"type":"method","name":"center_vertically","children":[],"call":[]}," Writexlsx Worksheet PageSetup center_horizontally":{"type":"method","name":"center_horizontally","children":[],"call":[]}," Writexlsx Worksheet PageSetup paper=":{"type":"method","name":"paper=","children":[],"call":[]}," Writexlsx Worksheet PageSetup initialize":{"type":"method","name":"initialize","children":[],"call":[]}," Writexlsx Worksheet Hyperlink write_internal_attributes":{"type":"method","name":"write_internal_attributes","children":[],"call":["attributes << << "," str ","attributes << "," tip "," url "," xl_rowcol_to_cell "]}," Writexlsx Worksheet Hyperlink write_external_attributes":{"type":"method","name":"write_external_attributes","children":[],"call":["attributes << << "," tip ","attributes << "," display "," url_str "," xl_rowcol_to_cell "," r_id_attributes "]}," Writexlsx Worksheet Hyperlink initialize":{"type":"method","name":"initialize","children":[],"call":[" raise ","url bytesize > ","url bytesize ","url sub ","url =~ ","url split ","link_type == "," sprintf ","match ord ","$~ [] ","re =~ ","url gsub ","str dup ","str sub! ","str gsub! ","url dup "," escape_url ","str sub ","@url_str bytesize > ","@url_str bytesize ","@url_str nil? ! ","@url_str nil? ","anchors join ","anchors empty? ","url sub  bytesize > ","url gsub  bytesize > "," escape_url  bytesize > ","url sub  bytesize ","url gsub  bytesize "," escape_url  bytesize ","url sub  sub ","url gsub  sub "," escape_url  sub ","url sub  =~ ","url gsub  =~ "," escape_url  =~ ","url sub  split ","url gsub  split "," escape_url  split ","$~ []  ord ","url sub  gsub ","url gsub  gsub "," escape_url  gsub ","url sub  dup ","url gsub  dup "," escape_url  dup "," escape_url sub  "," escape_url gsub  "," escape_ escape_url  ","@url sub _str bytesize > ","@url gsub _str bytesize > ","@ escape_url _str bytesize > ","@str dup  bytesize > ","anchors join  bytesize > ","@url sub _str bytesize ","@url gsub _str bytesize ","@ escape_url _str bytesize ","@str dup  bytesize ","anchors join  bytesize ","@url sub _str nil? ! ","@url gsub _str nil? ! ","@ escape_url _str nil? ! ","@str dup  nil? ! ","anchors join  nil? ! ","@url sub _str nil? ","@url gsub _str nil? ","@ escape_url _str nil? ","@str dup  nil? ","anchors join  nil? "]}," Writexlsx Worksheet DataValidation date_1904?":{"type":"method","name":"date_1904?","children":[],"call":[]}," Writexlsx Worksheet DataValidation convert_date_time_value":{"type":"method","name":"convert_date_time_value","children":[],"call":[" instance_variable_set "," convert_date_time ","value =~ "," instance_variable_get ","value to_s =~ ","value to_s "," convert_ convert_date_time  "," instance_variable_get  =~ "," instance_variable_get  to_s =~ "," instance_variable_get  to_s "]}," Writexlsx Worksheet DataValidation valid_criteria_type":{"type":"method","name":"valid_criteria_type","children":[],"call":[]}," Writexlsx Worksheet DataValidation valid_validation_parameter":{"type":"method","name":"valid_validation_parameter","children":[],"call":[]}," Writexlsx Worksheet DataValidation valid_validation_type":{"type":"method","name":"valid_validation_type","children":[],"call":[]}," Writexlsx Worksheet DataValidation error_type_hash":{"type":"method","name":"error_type_hash","children":[],"call":[]}," Writexlsx Worksheet DataValidation convert_date_time_value_if_required":{"type":"method","name":"convert_date_time_value_if_required","children":[],"call":[" raise "," convert_date_time_value ","@validate == "," date_1904? "," convert_date_time "," convert_ convert_date_time _value "," convert_ convert_date_time  "]}," Writexlsx Worksheet DataValidation check_valid_citeria_types":{"type":"method","name":"check_valid_citeria_types","children":[],"call":[" raise "," valid_criteria_type has_key? ","@criteria downcase "," valid_criteria_type "]}," Writexlsx Worksheet DataValidation check_maximum_value_when_criteria_is_between_or_notbetween":{"type":"method","name":"check_maximum_value_when_criteria_is_between_or_notbetween","children":[],"call":[" raise "," has_key? ","@criteria == "]}," Writexlsx Worksheet DataValidation check_criteria_required":{"type":"method","name":"check_criteria_required","children":[],"call":[" raise "," has_key? "]}," Writexlsx Worksheet DataValidation check_for_valid_input_params":{"type":"method","name":"check_for_valid_input_params","children":[],"call":[" raise "," error_type_hash has_key? ! "," error_type_hash has_key? ","@error_type downcase "," error_type_hash "," valid_validation_type has_key? ","@validate downcase "," valid_validation_type "," has_key? "," check_parameter "," valid_validation_parameter "]}," Writexlsx Worksheet DataValidation set_some_defaults":{"type":"method","name":"set_some_defaults","children":[],"call":[]}," Writexlsx Worksheet DataValidation has_key?":{"type":"method","name":"has_key?","children":[],"call":[" keys index "," keys "]}," Writexlsx Worksheet DataValidation attributes":{"type":"method","name":"attributes","children":[],"call":["attributes << << ","attributes << ","@show_error != ","@show_input != ","@dropdown == ","@ignore_blank != ","@error_type == ","@criteria != "," xl_range "," xl_rowcol_to_cell ","col_first == ","row_first == ","col_first > ","row_first > ","sqref != ","@cells each ","@validate != "]}," Writexlsx Worksheet DataValidation write_formula_2":{"type":"method","name":"write_formula_2","children":[],"call":["@writer data_element ","formula sub ","formula respond_to? ","formula sub  sub ","formula sub  respond_to? "]}," Writexlsx Worksheet DataValidation write_formula_1":{"type":"method","name":"write_formula_1","children":[],"call":["@writer data_element ","formula sub ","formula respond_to? ","formula join ","formula kind_of? ","formula is_a? ","formula sub  sub ","formula sub  respond_to? ","formula sub  join ","formula sub  kind_of? ","formula sub  is_a? "]}," Writexlsx Worksheet DataValidation write_data_validation":{"type":"method","name":"write_data_validation","children":[],"call":[" write_formula_2 "," write_formula_1 ","@writer tag_elements "," attributes ","@writer empty_tag ","@validate == "]}," Writexlsx Worksheet DataValidation validate_none?":{"type":"method","name":"validate_none?","children":[],"call":[]}," Writexlsx Worksheet DataValidation keys":{"type":"method","name":"keys","children":[],"call":["v to_s sub to_sym ","v to_s sub ","v to_s "," instance_variables collect "," instance_variables "]}," Writexlsx Worksheet DataValidation options_to_instance_variable":{"type":"method","name":"options_to_instance_variable","children":[],"call":[" instance_variable_set ","params each "]}," Writexlsx Worksheet DataValidation initialize":{"type":"method","name":"initialize","children":[],"call":["@cells << ","@other_cells each "," has_key? "," set_some_defaults "," convert_date_time_value_if_required "," error_type_hash [] ","@error_type downcase "," error_type_hash "," check_maximum_value_when_criteria_is_between_or_notbetween "," valid_criteria_type [] ","@criteria downcase "," valid_criteria_type "," check_valid_citeria_types "," check_criteria_required ","(str \"list\") include? ","@validate == "," valid_validation_type [] ","@validate downcase "," valid_validation_type "," check_dimensions "," check_for_valid_input_params "," raise ","(lvar :row1) include? "," options_to_instance_variable ","options dup ","options respond_to? ","row2 dup ","row2 respond_to? "," row_col_notation ","@input_message length > ","@input_message length ","@input_title length > ","@input_title length ","(str \"none\") include? ","@input_title ! ","@input_message ! ","args [] ","row_col_array size ","args first "," error_type_hash []  downcase "," valid_criteria_type []  downcase "," valid_validation_type []  == "," valid_validation_type []  downcase "," args [] _to_instance_variable ","args []  dup ","args []  respond_to? "," row_col_notation  size "]}," Writexlsx Workbook style_properties":{"type":"method","name":"style_properties","children":[],"call":[]}," Writexlsx Workbook chartsheet_count":{"type":"method","name":"chartsheet_count","children":[],"call":["@worksheets chartsheet_count "]}," Writexlsx Sparkline write_spark_color":{"type":"method","name":"write_spark_color","children":[],"call":["@writer empty_tag ","attr << << ","color [] ","attr << "]}," Writexlsx Sparkline write_sparklines":{"type":"method","name":"write_sparklines","children":[],"call":["@writer data_element ","@writer tag_elements ","@locations [] ","@ranges [] ","(irange\n  (int 0)\n  (send\n    (send nil :count) :-\n    (int 1))) each "," count - "," count ","@@locations [] s [] ","@@ranges [] s [] ","(i@ranges [] \n  (int 0)\n  (send\n    (send nil :count) :-\n    (int 1))) each "]}," Writexlsx Sparkline write_xmf_date_axis":{"type":"method","name":"write_xmf_date_axis","children":[],"call":["@writer data_element "]}," Writexlsx Sparkline write_color_low":{"type":"method","name":"write_color_low","children":[],"call":[" write_spark_color "]}," Writexlsx Sparkline write_color_high":{"type":"method","name":"write_color_high","children":[],"call":[" write_spark_color "]}," Writexlsx Sparkline write_color_last":{"type":"method","name":"write_color_last","children":[],"call":[" write_spark_color "]}," Writexlsx Sparkline write_color_first":{"type":"method","name":"write_color_first","children":[],"call":[" write_spark_color "]}," Writexlsx Sparkline write_color_markers":{"type":"method","name":"write_color_markers","children":[],"call":[" write_spark_color "]}," Writexlsx Sparkline write_color_axis":{"type":"method","name":"write_color_axis","children":[],"call":[" write_spark_color "]}," Writexlsx Sparkline write_color_negative":{"type":"method","name":"write_color_negative","children":[],"call":[" write_spark_color "]}," Writexlsx Sparkline write_color_series":{"type":"method","name":"write_color_series","children":[],"call":[" write_spark_color "]}," Writexlsx Sparkline write":{"type":"method","name":"write","children":[],"call":[" write_sparklines "," write_xmf_date_axis "," write_color_low "," write_color_high "," write_color_last "," write_color_first "," write_color_markers "," write_color_axis "," write_color_negative "," write_color_series "]}," Writexlsx Sparkline write_sparkline_group":{"type":"method","name":"write_sparkline_group","children":[],"call":[" write ","@writer tag_elements "," group_attributes "]}," Writexlsx Sheets write_sheet":{"type":"method","name":"write_sheet","children":[],"call":["writer empty_tag_encoded ","attributes << << ","attributes << ","sheet hidden? ","sheet name "," r_id_attributes "]}," Writexlsx Sheets write_sheet_files":{"type":"method","name":"write_sheet_files","children":[],"call":["sheet assemble_xml_file ","sheet set_xml_writer ","index + ","FileUtils  mkdir_p "]}," Writexlsx Sheets is_sheetname_uniq?":{"type":"method","name":"is_sheetname_uniq?","children":[],"call":["name downcase == ","worksheet name downcase ","worksheet name ","name downcase "," each "]}," Writexlsx Sheets check_valid_sheetname":{"type":"method","name":"check_valid_sheetname","children":[],"call":[" raise "," is_sheetname_uniq? ","Invalid character []:*?/\\ in worksheet name:  + ","name =~ ","name length > ","name length "]}," Writexlsx Sheets sheet_chart_count":{"type":"method","name":"sheet_chart_count","children":[],"call":[" chartname_count "," sheetname_count "]}," Writexlsx Sheets chartsheets":{"type":"method","name":"chartsheets","children":[],"call":["worksheet is_chartsheet? "," select "]}," Writexlsx Sheets worksheets":{"type":"method","name":"worksheets","children":[],"call":["worksheet is_chartsheet? "," reject "]}," Writexlsx Sheets index_by_name":{"type":"method","name":"index_by_name","children":[],"call":["(send\n  (self) :collect) index ","sheet name "," collect ","sheetname sub sub ","sheetname sub ","(send nil :collect) index ","sheet sheetname sub sub  ","sheetsheetname sub sub  sub sub ","sheetsheetname sub sub  sub "]}," Writexlsx Sheets tables_count":{"type":"method","name":"tables_count","children":[],"call":[" tables count "," tables "]}," Writexlsx Sheets tables":{"type":"method","name":"tables","children":[],"call":["(send\n  (self) :inject\n  (array)) flatten ","tables + ","sheet tables "," inject ","(send nil :inject\n  (array)) flatten "]}," Writexlsx Sheets write_sheet_rels_files_base":{"type":"method","name":"write_sheet_rels_files_base","children":[],"call":["rels assemble_xml_file ","rels set_xml_writer ","index + ","rels add_worksheet_relationship ","link_datas each ","sheet external_links each ","sheet external_links ","Package Relationships  new ","FileUtils  mkdir_p ","sheet external_links empty? ","sheets each_with_index ","Package Relationships  new  assemble_xml_file ","Package Relationships  new  set_xml_writer ","Package Relationships  new  add_worksheet_relationship "]}," Writexlsx Sheets write_worksheet_rels_files":{"type":"method","name":"write_worksheet_rels_files","children":[],"call":[" write_sheet_rels_files_base "," worksheets "]}," Writexlsx Sheets write_drawing_rels_files":{"type":"method","name":"write_drawing_rels_files","children":[],"call":["rels assemble_xml_file ","rels set_xml_writer ","index + ","rels add_document_relationship ","drawing_datas each ","sheet drawing_links each ","sheet drawing_links ","Package Relationships  new ","FileUtils  mkdir_p ","(send\n  (self) :reject) each_with_index ","sheet drawing_links [] empty? ","sheet drawing_links [] "," reject ","sheet has_shapes? ","sheet drawing_links [] empty? ! "," each ","Package Relationships  new  assemble_xml_file ","Package Relationships  new  set_xml_writer ","Package Relationships  new  add_document_relationship "]}," Writexlsx Sheets write_chartsheet_rels_files":{"type":"method","name":"write_chartsheet_rels_files","children":[],"call":[" write_sheet_rels_files_base "," chartsheets "]}," Writexlsx Sheets write_table_files":{"type":"method","name":"write_table_files","children":[],"call":["table assemble_xml_file ","table set_xml_writer ","index + "," tables each_with_index "," tables ","FileUtils  mkdir_p "," tables empty? "]}," Writexlsx Sheets write_comment_files":{"type":"method","name":"write_comment_files","children":[],"call":["sheet comments assemble_xml_file ","sheet comments ","sheet comments set_xml_writer ","index + ","FileUtils  mkdir_p ","(send\n  (self) :select) each_with_index ","sheet has_comments? "," select "]}," Writexlsx Sheets write_vml_files":{"type":"method","name":"write_vml_files","children":[],"call":["vml assemble_xml_file ","vml set_xml_writer ","index + ","Package Vml  new ","FileUtils  mkdir_p ","(send\n  (self) :select) each_with_index ","sheet has_vml? "," select "," write_vml_drawing_rels_files ","sheet header_images_data ","sheet vml_header_id * ","sheet vml_header_id ","sheet has_header_vml? ","sheet buttons_data ","sheet sorted_comments ","sheet vml_shape_id ","sheet vml_data_id ","sheet has_header_vml? ! ","sheet has_vml? ! "," each ","Package Vml  new  assemble_xml_file ","Package Vml  new  set_xml_writer ","sheet has_Package Vml  new ? "," write_Package Vml  new _drawing_rels_files ","sheet Package Vml  new _header_id * ","sheet Package Vml  new _header_id ","sheet has_header_Package Vml  new ? ","sheet Package Vml  new _shape_id ","sheet Package Vml  new _data_id ","sheet has_header_Package Vml  new ? ! ","sheet has_Package Vml  new ? ! "]}," Writexlsx Sheets write_chartsheet_files":{"type":"method","name":"write_chartsheet_files","children":[],"call":[" write_sheet_files "," chartsheets each_with_index "," chartsheets "]}," Writexlsx Sheets write_worksheet_files":{"type":"method","name":"write_worksheet_files","children":[],"call":[" write_sheet_files "," worksheets each_with_index "," worksheets "]}," Writexlsx Sheets write_sheets":{"type":"method","name":"write_sheets","children":[],"call":[" write_sheet "," each ","writer tag_elements "]}," Writexlsx Sheets make_and_check_sheet_chart_name":{"type":"method","name":"make_and_check_sheet_chart_name","children":[],"call":[" check_valid_sheetname ","count + ","BASE_NAME  [] "," ptrue? "," sheet_chart_count "," sheet_chart_count  + "," sheet_chart_ sheet_chart_count  "]}," Writexlsx Sheets chartname_count":{"type":"method","name":"chartname_count","children":[],"call":[" chartsheet_count "]}," Writexlsx Sheets sheetname_count":{"type":"method","name":"sheetname_count","children":[],"call":[" count - "," chartname_count "," count "]}," Writexlsx Sheets chartsheet_count":{"type":"method","name":"chartsheet_count","children":[],"call":[" chartsheets count "," chartsheets "]}," Writexlsx Sheets initialize":{"type":"method","name":"initialize","children":[],"call":[]}," Writexlsx Package XMLWriterSimple empty_tag_encoded_str":{"type":"method","name":"empty_tag_encoded_str","children":[],"call":[" key_vals "]}," Writexlsx Package XMLWriterSimple end_tag_str":{"type":"method","name":"end_tag_str","children":[],"call":["@tag_end_cache []= ","@tag_end_cache [] "]}," Writexlsx Package XMLWriterSimple start_tag_str":{"type":"method","name":"start_tag_str","children":[],"call":[" key_vals ","@tag_start_cache []= ","@tag_start_cache [] ","attr empty? "]}," Writexlsx Package XMLWriterSimple tag_elements_str":{"type":"method","name":"tag_elements_str","children":[],"call":["str << "," end_tag_str "," start_tag_str "," start_tag_str + + "," start_tag_str + "," start_tag_str + +  << "," end_tag_ start_tag_str + +  "," start_tag_ start_tag_str + +  "," start_tag_ start_tag_str + +  + + "," start_tag_ start_tag_str + +  + "]}," Writexlsx Package Table write_table_attributes":{"type":"method","name":"write_table_attributes","children":[],"call":["attributes << << ","attributes << "," ptrue? "," id "]}," Writexlsx Formats set_dxf_index_by_key":{"type":"method","name":"set_dxf_index_by_key","children":[],"call":["@dxf_format_indices size ","@dxf_format_indices [] "]}," Writexlsx Formats dxf_index_by_key":{"type":"method","name":"dxf_index_by_key","children":[],"call":["@dxf_format_indices [] "]}," Writexlsx Formats set_xf_index_by_key":{"type":"method","name":"set_xf_index_by_key","children":[],"call":["1 + ","@xf_format_indices size ","@xf_format_indices [] "]}," Writexlsx Formats xf_index_by_key":{"type":"method","name":"xf_index_by_key","children":[],"call":["@xf_format_indices [] "]}," Writexlsx Formats initialize":{"type":"method","name":"initialize","children":[],"call":[]}," Writexlsx Format write_vert_align":{"type":"method","name":"write_vert_align","children":[],"call":["writer empty_tag "]}," Writexlsx Format write_font":{"type":"method","name":"write_font","children":[],"call":["writer empty_tag "," font_scheme "," hyperlink == "," hyperlink "," font == "," font "," font_family "," write_color ","worksheet get_palette_color "," ptrue? "," theme "," size "," write_vert_align "," font_script == "," font_script "," write_underline "," underline "," underline? "," shadow? "," outline? "," strikeout? "," italic? "," bold? ","writer tag_elements "," write_font_family_scheme "," ptrue? ! "," write_font_shapes "," write_extend "," write_condense ","worksheet palette_color "," theme == ","color != "," write_worksheet get_palette_color  "," write_worksheet palette_color  ","worksheet get_palette_worksheet get_palette_color  ","worksheet get_palette_worksheet palette_color  ","worksheet palette_worksheet get_palette_color  ","worksheet palette_worksheet palette_color  ","worksheet get_palette_color  != ","worksheet palette_color  != "]}," Writexlsx Chartsheet external_links":{"type":"method","name":"external_links","children":[],"call":[]}," Writexlsx Chartsheet set_high_low_lines":{"type":"method","name":"set_high_low_lines","children":[],"call":["@chart set_high_low_lines "]}," Writexlsx Chartsheet set_drop_lines":{"type":"method","name":"set_drop_lines","children":[],"call":["@chart set_drop_lines "]}," Writexlsx Chartsheet set_up_down_bars":{"type":"method","name":"set_up_down_bars","children":[],"call":["@chart set_up_down_bars "]}," Writexlsx Chartsheet set_table":{"type":"method","name":"set_table","children":[],"call":["@chart set_table "]}," Writexlsx Chartsheet set_size":{"type":"method","name":"set_size","children":[],"call":["@chart set_size "]}," Writexlsx Worksheet start_page=":{"type":"method","name":"start_page=","children":[],"call":["@page_setup page_start= "]}," Writexlsx Format write_extend":{"type":"method","name":"write_extend","children":[],"call":["writer empty_tag "]}," Writexlsx Format write_condense":{"type":"method","name":"write_condense","children":[],"call":["writer empty_tag "]}," Writexlsx Format write_underline_attributes":{"type":"method","name":"write_underline_attributes","children":[],"call":[]}," Writexlsx Format write_underline":{"type":"method","name":"write_underline","children":[],"call":["writer empty_tag "," write_underline_attributes "]}," Writexlsx Format write_font_family_scheme":{"type":"method","name":"write_font_family_scheme","children":[],"call":["writer empty_tag "," ptrue? ! "," ptrue? ","@font == "]}," Writexlsx Format write_font_shapes":{"type":"method","name":"write_font_shapes","children":[],"call":[" write_vert_align "," font_script == "," font_script "," write_underline "," underline "," underline? ","writer empty_tag "," shadow? "," outline? "," strikeout? "," italic? "," bold? "]}," Writexlsx Format write_font_rpr":{"type":"method","name":"write_font_rpr","children":[],"call":[" write_font_family_scheme ","writer empty_tag "," write_color ","worksheet get_palette_color "," ptrue? "," theme "," size "," write_font_shapes ","writer tag_elements ","worksheet palette_color "," write_worksheet get_palette_color  "," write_worksheet palette_color  ","worksheet get_palette_worksheet get_palette_color  ","worksheet get_palette_worksheet palette_color  ","worksheet palette_worksheet get_palette_color  ","worksheet palette_worksheet palette_color  "]}," Writexlsx Worksheet row_attributes":{"type":"method","name":"row_attributes","children":[],"call":["attributes << << ","attributes << ","@excel_version == "," ptrue? ","height != ","r + ","format get_xf_index ","format get_format get_xf_index  "]}," Writexlsx Worksheet num_comments_block":{"type":"method","name":"num_comments_block","children":[],"call":["@comments size / ","@comments size "]}," Writexlsx Worksheet sorted_comments":{"type":"method","name":"sorted_comments","children":[],"call":["@comments sorted_comments "]}," Writexlsx Worksheet has_shapes?":{"type":"method","name":"has_shapes?","children":[],"call":[]}," Writexlsx Workbook add_font_format_for_cell_comments":{"type":"method","name":"add_font_format_for_cell_comments","children":[],"call":["@formats formats << ","@formats formats ","format get_xf_index ","Format  new ","@Format  new s Format  new s << ","@Format  new s Format  new s ","Format  new  get_xf_index "]}," Writexlsx Workbook num_comment_files":{"type":"method","name":"num_comment_files","children":[],"call":["(send\n  (ivar :@worksheets) :select) count ","sheet has_comments? ","@worksheets select "]}," Writexlsx Workbook num_vml_files":{"type":"method","name":"num_vml_files","children":[],"call":["(send\n  (ivar :@worksheets) :select) count ","sheet has_vml? ","@worksheets select ","sheet has_header_vml? "]}," Writexlsx Utility r_id_attributes":{"type":"method","name":"r_id_attributes","children":[],"call":[]}," Writexlsx Chart write_axis_body_pr":{"type":"method","name":"write_axis_body_pr","children":[],"call":["@writer empty_tag ","attributes << << ","attributes << "]}," Writexlsx Chart write_c_smooth":{"type":"method","name":"write_c_smooth","children":[],"call":["@writer empty_tag "," ptrue? "]}," Writexlsx Chart ids":{"type":"method","name":"ids","children":[],"call":[" sprintf ","axis_count + ","1 + + ","@axis_ids size ","1 + ","@axis2_ids size ","5001 + ","1 + +  + "]}," Series value_or_raise":{"type":"method","name":"value_or_raise","children":[],"call":["hash [] ","key to_sym "," raise "]}," Series labels_properties":{"type":"method","name":"labels_properties","children":[],"call":["labels []= "," value_or_raise ","labels delete ","position empty? ","position nil? ","labels [] ","labels []  empty? ","labels []  nil? "]}," Series points_properties":{"type":"method","name":"points_properties","children":[],"call":["points << ","point []= "," fill_properties ","user_point [] "," line_properties ","user_points each ","  fill_properties _properties ","  line_properties _properties "]}," Series error_bars_properties":{"type":"method","name":"error_bars_properties","children":[],"call":["error_bars []= "," line_properties ","params [] ","params [] == ","params key? "," raise ","types [] ","types key? ","params [] to_sym ","params empty? "," ptrue? ! "," ptrue? "]}," Series trendline_properties":{"type":"method","name":"trendline_properties","children":[],"call":["trendline []= "," fill_properties ","trendline [] "," line_properties "," value_or_raise ","trend line_properties  []= ","  fill_properties _properties ","trend line_properties  [] ","  line_properties _properties "]}," Series marker_properties":{"type":"method","name":"marker_properties","children":[],"call":["marker []= "," fill_properties ","marker [] "," line_properties "," value_or_raise ","marker_type == ","  fill_properties _properties ","  line_properties _properties ","marker []  == "]}," Series fill_properties":{"type":"method","name":"fill_properties","children":[],"call":["fill []= "]}," Series line_properties":{"type":"method","name":"line_properties","children":[],"call":["line []= "," value_or_raise ","line [] "]}," Series aref_to_formula":{"type":"method","name":"aref_to_formula","children":[],"call":[" xl_range_formula ","data kind_of? "]}," Series ==":{"type":"method","name":"==","children":[],"call":[" instance_variable_get == ","other instance_variable_get "," instance_variable_get ","methods each "]}," Series initialize":{"type":"method","name":"initialize","children":[],"call":["params [] "," labels_properties "," points_properties "," error_bars_properties "," trendline_properties "," marker_properties "," fill_properties "," line_properties ","chart get_data_id ","chart process_names "," aref_to_formula "]}," Writexlsx Chart Caption merge_with_hash":{"type":"method","name":"merge_with_hash","children":[],"call":["@chart convert_font_args ","params [] ","@chart get_data_id ","@chart process_names ","@chart layout_properties ","@chart data_id "," convert_font_args "]}," Writexlsx Chart Caption initialize":{"type":"method","name":"initialize","children":[],"call":[]}," Writexlsx Workbook parts":{"type":"method","name":"parts","children":[],"call":["File  file? ","Dir  glob select ","Dir  glob ","File  join "," tempdir "]}," Writexlsx Workbook zip_entry_for_part":{"type":"method","name":"zip_entry_for_part","children":[],"call":["Zip Entry  new "]}," Writexlsx Workbook write_parts":{"type":"method","name":"write_parts","children":[],"call":["zip puts ","File  read ","zip put_next_entry "," zip_entry_for_part ","part sub ","Regexp  new "," parts each "," parts "," tempdir "]}," Writexlsx Package Core dcterms_date":{"type":"method","name":"dcterms_date","children":[],"call":[" localtime_to_iso8601_date ","@properties [] "," datetime_to_iso8601_date "]}," Writexlsx Package Core write_dcterms":{"type":"method","name":"write_dcterms","children":[],"call":["@writer data_element "," dcterms_date "]}," Writexlsx Worksheet ExternalHyperlink initialize":{"type":"method","name":"initialize","children":[],"call":[" raise ","url bytesize > ","url bytesize ","url sub ","url =~ ","url split ","str sub! ","str gsub! ","url gsub ","url dup "," escape_url ","@url_str bytesize > ","@url_str bytesize ","@url_str nil? ! ","@url_str nil? ","str sub ","str gsub ","url sub  bytesize > ","url gsub  bytesize > "," escape_url  bytesize > ","url sub  bytesize ","url gsub  bytesize "," escape_url  bytesize ","url sub  sub ","url gsub  sub "," escape_url  sub ","url sub  =~ ","url gsub  =~ "," escape_url  =~ ","url sub  split ","url gsub  split "," escape_url  split ","str sub  sub! ","str gsub  sub! ","str sub  gsub! ","str gsub  gsub! ","url sub  gsub ","url gsub  gsub "," escape_url  gsub ","url sub  dup ","url gsub  dup "," escape_url  dup "," escape_url sub  "," escape_url gsub  "," escape_ escape_url  ","@url sub _str bytesize > ","@url gsub _str bytesize > ","@ escape_url _str bytesize > ","@url_str sub  bytesize > ","@url_str gsub  bytesize > ","@url sub _str bytesize ","@url gsub _str bytesize ","@ escape_url _str bytesize ","@url_str sub  bytesize ","@url_str gsub  bytesize ","@url sub _str nil? ! ","@url gsub _str nil? ! ","@ escape_url _str nil? ! ","@url_str sub  nil? ! ","@url_str gsub  nil? ! ","@url sub _str nil? ","@url gsub _str nil? ","@ escape_url _str nil? ","@url_str sub  nil? ","@url_str gsub  nil? ","str sub  sub ","str gsub  sub ","str sub  gsub ","str gsub  gsub "]}," Writexlsx Worksheet InternalHyperlink initialize":{"type":"method","name":"initialize","children":[],"call":[" raise ","@url bytesize > ","@url bytesize ","@str dup ","str sub ","@url dup ","url sub ","url sub  bytesize > ","url sub  bytesize ","str sub  dup ","url sub  dup "]}," Writexlsx Worksheet Hyperlink factory":{"type":"method","name":"factory","children":[],"call":[]}," Writexlsx Utility value_or_raise":{"type":"method","name":"value_or_raise","children":[],"call":["hash [] ","key to_sym "," raise ","hash [] nil? "]}," Writexlsx Utility line_properties":{"type":"method","name":"line_properties","children":[],"call":["line []= "," value_or_raise ","line [] "," dash_types "," line_fill_properties "," line [] s "]}," Writexlsx Utility write_xml_declaration":{"type":"method","name":"write_xml_declaration","children":[],"call":["@writer close ","@writer crlf ","@writer xml_decl "]}," ColName col_str_build":{"type":"method","name":"col_str_build","children":[],"call":["(send\n  (lvar :col) :-\n  (int 1)) / ","col - ","col_letter + ","(send\n  (send\n    (send\n      (str \"A\") :ord) :+\n    (lvar :remainder)) :-\n  (int 1)) chr ","A ord + - ","A ord + ","A ord ","remainder == ","col % ","col > ","col to_i + ","col to_i ","(send\n  (lvar :(send\n  (lvar :col) :-\n  (int 1)) / ) :-\n  (int 1)) / ","(send\n  (lvar :col to_i + ) :-\n  (int 1)) / ","(send\n  (lvar :col) :-\n  (int 1)) /  - ","col to_i +  - ","(send\n  (lvar :col) :-\n  (int 1)) / _letter + ","col to_i + _letter + ","(send\n  (send\n    (send\n      (str \"A\") :ord) :+\n    (lvar :remainder)) :-\n  (int 1)) chr  + ","(send\n  (send\n    (send\n      (str \"A\") :ord) :+\n    (lvar :col % )) :-\n  (int 1)) chr ","col %  == ","(send\n  (lvar :col) :-\n  (int 1)) /  % ","col to_i +  % ","(send\n  (lvar :col) :-\n  (int 1)) /  > ","col to_i +  > ","(send\n  (lvar :col) :-\n  (int 1)) /  to_i + ","col to_i +  to_i + ","(send\n  (lvar :col) :-\n  (int 1)) /  to_i ","col to_i +  to_i "]}," ColName col_str":{"type":"method","name":"col_str","children":[],"call":["@col_str_table [] ","@col_str_table []= "," col_str_build "]}," ColName initialize":{"type":"method","name":"initialize","children":[],"call":["Hash  new "]}," Writexlsx Worksheet prepare_tables":{"type":"method","name":"prepare_tables","children":[],"call":[" tables_count ","@external_table_links << ","table prepare "," tables each "," tables "," tables_count > ","seen []= ","table name "," raise ","seen [] "]}," Writexlsx Workbook prepare_tables":{"type":"method","name":"prepare_tables","children":[],"call":["sheet prepare_tables ","table_id + "," sheets each "," sheets "]}," Writexlsx Package Table prepare":{"type":"method","name":"prepare","children":[],"call":[]}," Writexlsx Chart write_custom_error":{"type":"method","name":"write_custom_error","children":[],"call":[" write_num_lit ","error_bars [] "," write_num_ref ","error_bars [] =~ ","@writer tag_elements "," ptrue? "," write_custom_error_base ","error_bars minus_data ","error_bars minus_values ","error_bars plus_data ","error_bars plus_values "]}," Writexlsx Chart write_num_base":{"type":"method","name":"write_num_base","children":[],"call":[" write_pt ","(send\n  (send\n    (lvar :token) :to_s) :=~\n  (regexp\n    (str \"^([+-]?)(?=\\\\d|\\\\.\\\\d)\\\\d*(\\\\.\\\\d*)?([Ee]([+-]?\\\\d+))?$\")\n    (regopt))) ! ","token to_s =~ ","token to_s ","data each_with_index "," write_pt_count ","data size "," write_format_code ","@writer tag_elements "," write_pt_data size  "]}," Writexlsx Chart write_num_lit":{"type":"method","name":"write_num_lit","children":[],"call":[" write_num_base "]}," Writexlsx Chart write_auto_title_deleted":{"type":"method","name":"write_auto_title_deleted","children":[],"call":["@writer empty_tag "]}," Writexlsx Chart write_manual_layout":{"type":"method","name":"write_manual_layout","children":[],"call":["@writer empty_tag ","layout [] ","type != ","type == ","@writer tag_elements "]}," Writexlsx Chart layout_properties":{"type":"method","name":"layout_properties","children":[],"call":["layout []= "," sprintf ","args [] ","properties each ","Hash  new ","allowable []= ","properties size "," ptrue? ","Hash  new  []= "]}," Writexlsx Chart write_tick_lbl_skip":{"type":"method","name":"write_tick_lbl_skip","children":[],"call":["@writer empty_tag "]}," Writexlsx Worksheet store_hyperlink":{"type":"method","name":"store_hyperlink","children":[],"call":["@hyperlinks [] []= ","@hyperlinks [] "]}," Writexlsx Worksheet hyperlinks_count":{"type":"method","name":"hyperlinks_count","children":[],"call":["@hyperlinks [] keys size ","@hyperlinks [] keys ","@hyperlinks [] ","@hyperlinks keys inject ","@hyperlinks keys "]}," Writexlsx Worksheet palette_color":{"type":"method","name":"palette_color","children":[],"call":["1 upcase ","index =~ ","index to_s =~ ","index to_s "," Regexp  last_match upcase "," Regexp  last_match "]}," Writexlsx Worksheet InternalHyperlink attributes":{"type":"method","name":"attributes","children":[],"call":["attr << "," xl_rowcol_to_cell "]}," Writexlsx Worksheet Hyperlink display_on":{"type":"method","name":"display_on","children":[],"call":[]}," Writexlsx Worksheet Hyperlink external_hyper_link":{"type":"method","name":"external_hyper_link","children":[],"call":[]}," Writexlsx Worksheet Hyperlink attributes":{"type":"method","name":"attributes","children":[],"call":["attr << "," r_id_attributes "," xl_rowcol_to_cell "]}," Writexlsx WriteDPtPoint write_d_pt_point":{"type":"method","name":"write_d_pt_point","children":[],"call":[" write_sp_pr ","@writer tag_elements "," write_idx "]}," Writexlsx Utility palette_color":{"type":"method","name":"palette_color","children":[],"call":[" sprintf ","@palette [] ","index - "]}," Writexlsx Utility dash_types":{"type":"method","name":"dash_types","children":[],"call":[]}," Writexlsx Utility line_fill_properties":{"type":"method","name":"line_fill_properties","children":[],"call":["ret []= ","ret [] "," block_given? ","params dup ","params dup  []= ","params dup  [] "]}," Writexlsx Utility fill_properties":{"type":"method","name":"fill_properties","children":[],"call":[" line_fill_properties "]}," Writexlsx Utility layout_properties":{"type":"method","name":"layout_properties","children":[],"call":["layout []= "," sprintf ","args [] ","properties each ","Hash  new ","allowable []= ","properties size "," ptrue? "," raise ","properties include? ","key to_sym ","args keys each ","args keys ","Hash  new  []= "]}," Writexlsx Package Styles palette_color":{"type":"method","name":"palette_color","children":[],"call":["1 upcase ","index =~ ","index to_s =~ ","index to_s "," Regexp  last_match upcase "," Regexp  last_match ","index == "]}," Writexlsx Package ConditionalFormat palette_color":{"type":"method","name":"palette_color","children":[],"call":["@worksheet palette_color "]}," Writexlsx Format color":{"type":"method","name":"color","children":[],"call":["Format  color "]}," Writexlsx Drawing write_tx_body":{"type":"method","name":"write_tx_body","children":[],"call":["@writer characters ","shape text ","@writer tag_elements ","@writer empty_tag ","shape format [] ","shape format "," write_a_solid_fill ","color sub ","shape palette_color "," ptrue? ","shape align ","shape valign ","color sub  sub ","shape palette_color  sub ","shape format []  sub ","shape palette_color sub  ","shape palette_shape palette_color  ","shape palette_shape format []  "]}," Writexlsx Colors color":{"type":"method","name":"color","children":[],"call":["COLORS  [] ","color_code downcase to_sym ","color_code downcase ","color_code respond_to? ","color_code to_i ","(send\n  (lvar :color_code) :+\n  (int 8)) to_i ","color_code + ","color_code < ","63 < ","color_code downcase to_sym  downcase to_sym ","color_code downcase to_sym  downcase ","color_code downcase to_sym  respond_to? ","color_code downcase to_sym  to_i ","(send\n  (lvar :color_code downcase to_sym ) :+\n  (int 8)) to_i ","color_code downcase to_sym  + ","color_code downcase to_sym  < "]}," Writexlsx Chart write_num_ref_or_lit":{"type":"method","name":"write_num_ref_or_lit","children":[],"call":[" write_num_lit "," write_num_ref ","values =~ ","values to_s =~ ","values to_s "]}," Writexlsx Chart write_custom_error_base":{"type":"method","name":"write_custom_error_base","children":[],"call":[" write_num_ref_or_lit ","@writer tag_elements "]}," Writexlsx Chart position_allowed":{"type":"method","name":"position_allowed","children":[],"call":[]}," Writexlsx Chart write_val_axis_base":{"type":"method","name":"write_val_axis_base","children":[],"call":[" write_c_minor_unit ","y_axis minor_unit "," write_c_major_unit ","y_axis major_unit "," write_cross_between ","x_axis position_axis "," write_crossing ","x_axis crossing "," write_cross_axis "," write_axis_font ","y_axis num_font "," write_tick_label_pos ","y_axis label_position "," write_major_tick_mark ","y_axis major_tick_mark "," write_number_format "," write_title_rich ","y_axis layout ","y_axis name "," write_title_formula ","y_axis formula "," write_minor_gridlines ","y_axis minor_gridlines "," write_major_gridlines ","y_axis major_gridlines "," write_axis_pos ","x_axis reverse "," write_delete "," ptrue? ","y_axis visible "," write_scaling_with_param "," write_axis_id ","@writer tag_elements "," write_sp_pr "," write_disp_units ","y_axis display_units_visible ","y_axis display_units "," write_minor_tick_mark ","y_axis minor_tick_mark ","y_axis name_font "]}," Writexlsx Chart y2_axis_defaults":{"type":"method","name":"y2_axis_defaults","children":[],"call":[]}," Writexlsx Chart x2_axis_defaults":{"type":"method","name":"x2_axis_defaults","children":[],"call":[]}," Writexlsx Chart y_axis_defaults":{"type":"method","name":"y_axis_defaults","children":[],"call":[]}," Writexlsx Chart x_axis_defaults":{"type":"method","name":"x_axis_defaults","children":[],"call":[]}," Writexlsx Chart set_axis_defaults":{"type":"method","name":"set_axis_defaults","children":[],"call":["@y2_axis defaults= "," y2_axis_defaults ","@x2_axis defaults= "," x2_axis_defaults ","@y_axis defaults= "," y_axis_defaults ","@x_axis defaults= "," x_axis_defaults "]}," Writexlsx Chart color":{"type":"method","name":"color","children":[],"call":[" palette_color "," raise ","Format  color ","color_code sub upcase ","color_code sub ","color_code =~ "]}," Writexlsx Chart display_setup":{"type":"method","name":"display_setup","children":[],"call":["Legend  new "]}," Writexlsx Chart axis_setup":{"type":"method","name":"axis_setup","children":[],"call":["Axis  new "]}," Writexlsx Chart data_id":{"type":"method","name":"data_id","children":[],"call":["@formula_data << ","@formula_ids []= ","@formula_data size ","@formula_data [] ","@formula_ids [] ","@formula_ids has_key? ","full_formula sub ","@full_formula sub _data << ","@formula_@formula_ids []= s []= ","@formula_@formula_ids [] s []= ","@full_formula sub _ids []= ","@full_formula sub _data size ","@full_formula sub _data [] ","@formula_@formula_ids []= s [] ","@formula_@formula_ids [] s [] ","@full_formula sub _ids [] ","@formula_@formula_ids []= s has_key? ","@formula_@formula_ids [] s has_key? ","@full_formula sub _ids has_key? ","full_full_formula sub  sub "]}," Writexlsx Chart params_to_font":{"type":"method","name":"params_to_font","children":[],"call":["params [] "]}," Writexlsx ChartArea numeric_or_downcase":{"type":"method","name":"numeric_or_downcase","children":[],"call":["val downcase ","val respond_to? "]}," Writexlsx ChartArea swe_line_weight_hash":{"type":"method","name":"swe_line_weight_hash","children":[],"call":[]}," Writexlsx ChartArea swe_line_weight":{"type":"method","name":"swe_line_weight","children":[],"call":[" swe_line_weight_hash [] "," numeric_or_downcase "," swe_line_weight_hash "]}," Writexlsx ChartArea swe_line_pattern_hash":{"type":"method","name":"swe_line_pattern_hash","children":[],"call":[]}," Writexlsx ChartArea swe_line_pattern":{"type":"method","name":"swe_line_pattern","children":[],"call":[" swe_line_pattern_hash [] "," numeric_or_downcase "," swe_line_pattern_hash "]}," Writexlsx ChartArea params_to_border":{"type":"method","name":"params_to_border","children":[],"call":["border []= ","params [] ","pattern == "," swe_line_pattern "," swe_line_weight ","params []  []= "," swe_line_pattern  == "," swe_line_ swe_line_pattern  "," swe_params []  "]}," Writexlsx ChartArea initialize":{"type":"method","name":"initialize","children":[],"call":[" fill_properties ","params [] "," line_properties "," params_to_border "," layout_properties "," ptrue? "," gradient_properties "," pattern_properties "," params [] _properties "," params_to_ params_to_border  "]}," Writexlsx Chart Series positions":{"type":"method","name":"positions","children":[],"call":[]}," Writexlsx Chart Series labels_properties":{"type":"method","name":"labels_properties","children":[],"call":["labels []= "," value_or_raise "," positions ","labels delete ","position empty? ","position nil? ","labels [] ","@chart convert_font_args ","separators [] "," raise ","separator empty? ","separator nil? ","@label_positions [] ","position == "," ptrue? "," convert_font_args ","custom << ","property []= "," gradient_properties ","property [] "," pattern_properties "," fill_properties "," line_properties ","@chart data_id ","property [] sub ","property [] =~ ","label dup ","label ! ","labels [] each ","property [] to_s =~ ","property [] to_s "," labels [] s ","labels []  empty? ","labels []  nil? ","labels [] s [] ","@label_labels [] s [] ","labels []  == ","label dup  []= ","  gradient_properties _properties ","label dup  [] ","  pattern_properties _properties ","  fill_properties _properties ","  line_properties _properties ","@chart @chart data_id  ","label dup  [] sub ","label dup  [] =~ ","label dup  [] to_s =~ ","label dup  [] to_s "]}," Writexlsx Chart Series errorbars":{"type":"method","name":"errorbars","children":[],"call":["Errorbars  new "]}," Writexlsx Chart Series set_data_ids":{"type":"method","name":"set_data_ids","children":[],"call":["chart data_id ","params [] ","@chart data_id "]}," Writexlsx Chart Series aref_to_formula":{"type":"method","name":"aref_to_formula","children":[],"call":[" xl_range_formula ","data kind_of? ","data is_a? "]}," Writexlsx Chart Series line_defined?":{"type":"method","name":"line_defined?","children":[],"call":[" ptrue? "," line [] "," line "]}," Writexlsx Chart Series ==":{"type":"method","name":"==","children":[],"call":[" instance_variable_get == ","other instance_variable_get "," instance_variable_get ","methods each "]}," Writexlsx Chart Series initialize":{"type":"method","name":"initialize","children":[],"call":[" instance_variable_set ","params [] ","(sym :smooth) each "," labels_properties ","Point  new ","params [] collect "," errorbars ","Trendline  new ","Marker  new "," fill_properties "," line_properties "," set_data_ids ","chart process_names "," aref_to_formula ","chart label_position_default ","chart label_positions "," ptrue? "," gradient_properties "," pattern_properties "]}," Writexlsx Chart Errorbars error_bar_direction":{"type":"method","name":"error_bar_direction","children":[],"call":[]}," Writexlsx Chart Errorbars types":{"type":"method","name":"types","children":[],"call":[]}," Writexlsx Chart Errorbars initialize":{"type":"method","name":"initialize","children":[],"call":["params [] "," line_properties "," error_bar_direction "," types [] ","params [] to_sym "," types "]}," Writexlsx Chart Marker types":{"type":"method","name":"types","children":[],"call":[]}," Writexlsx Chart Marker automatic?":{"type":"method","name":"automatic?","children":[],"call":[]}," Writexlsx Chart Marker initialize":{"type":"method","name":"initialize","children":[],"call":["@type == ","params [] "," value_or_raise "," types "," value_or_raise  == "]}," Writexlsx Chart Trendline types":{"type":"method","name":"types","children":[],"call":[]}," Writexlsx Chart Trendline initialize":{"type":"method","name":"initialize","children":[],"call":[" value_or_raise ","params [] "," types "]}," Writexlsx Chart Gridline initialize":{"type":"method","name":"initialize","children":[],"call":["params [] "]}," Writexlsx Chart Chartline fill_defined?":{"type":"method","name":"fill_defined?","children":[],"call":[" ptrue? "," fill [] "," fill "]}," Writexlsx Chart Chartline line_defined?":{"type":"method","name":"line_defined?","children":[],"call":[" ptrue? "," line [] "," line "]}," Writexlsx Chart Chartline initialize":{"type":"method","name":"initialize","children":[],"call":[" fill_properties "," line_properties ","params [] "," ptrue? "," gradient_properties "," pattern_properties "]}," Writexlsx Chart Scatter write_cat_val_axis":{"type":"method","name":"write_cat_val_axis","children":[],"call":[" write_val_axis_base ","params [] ","y_axis position ","axis_ids [] ","axis_ids empty? ! ","axis_ids empty? ","x_axis position ","params []  position ","params []  [] ","params []  empty? ! ","params []  empty? "]}," Writexlsx Chart Bar axis_defaults_set":{"type":"method","name":"axis_defaults_set","children":[],"call":["@x_axis defaults []= ","@x_axis defaults ","@subtype == ","@y_axis defaults= ","@y_axis defaults []= ","@y_axis defaults ","@x_axis defaults= "]}," Writexlsx Chart Axis set_axis_name_layout":{"type":"method","name":"set_axis_name_layout","children":[],"call":["@chart layout_properties ","args [] "]}," Writexlsx Chart Axis set_font_properties":{"type":"method","name":"set_font_properties","children":[],"call":["@chart convert_font_args ","args [] "," convert_font_args "]}," Writexlsx Chart Axis set_position_axis":{"type":"method","name":"set_position_axis","children":[],"call":["@position_axis == "]}," Writexlsx Chart Axis set_position":{"type":"method","name":"set_position","children":[],"call":["@position downcase [] ","@position downcase ","args [] ","@position downcase []  downcase [] ","args []  downcase [] ","@position downcase []  downcase ","args []  downcase "]}," Writexlsx Chart Axis set_major_minor_gridlines":{"type":"method","name":"set_major_minor_gridlines","children":[],"call":[" instance_variable_set ","Gridline  new ","args [] "," ptrue? ","args [] [] ","(sym :major_gridlines) each "]}," Writexlsx Chart Axis num_fmt_attributes":{"type":"method","name":"num_fmt_attributes","children":[],"call":[" source_linked "]}," Writexlsx Chart Axis source_linked":{"type":"method","name":"source_linked","children":[],"call":[" user_defined_num_fmt_set? "]}," Writexlsx Chart Axis user_defined_num_fmt_set?":{"type":"method","name":"user_defined_num_fmt_set?","children":[],"call":["@num_format != ","@defaults [] "]}," Writexlsx Package Comment options_parse":{"type":"method","name":"options_parse","children":[],"call":["(send\n  (float 0.5) :+\n  (send\n    (begin\n      (or\n        (send\n          (lvar :options) :[]\n          (sym :height))\n        (const nil :DEFAULT_HEIGHT))) :*\n    (ivar :@y_scale))) to_i ","0.5 + ","(or\n  (send\n    (lvar :options) :[]\n    (sym :height))\n  (const nil :DEFAULT_HEIGHT)) * ","options [] ","(send\n  (float 0.5) :+\n  (send\n    (begin\n      (or\n        (send\n          (lvar :options) :[]\n          (sym :width))\n        (const nil :DEFAULT_WIDTH))) :*\n    (ivar :@x_scale))) to_i ","(or\n  (send\n    (lvar :options) :[]\n    (sym :width))\n  (const nil :DEFAULT_WIDTH)) * "," default_y_offset "," default_x_offset "," substitute_cellref "," backgrount_color ","(send\n  (float 0.5) :+\n  (begin\n    (send\n      (begin\n        (or\n          (send\n            (lvar :options) :[]\n            (sym :height))\n          (const nil :DEFAULT_HEIGHT))) :*\n      (ivar :@y_scale)))) to_i ","(send\n  (float 0.5) :+\n  (begin\n    (send\n      (begin\n        (or\n          (send\n            (lvar :options) :[]\n            (sym :width))\n          (const nil :DEFAULT_WIDTH))) :*\n      (ivar :@x_scale)))) to_i "]}," Writexlsx Worksheet excel2003_style?":{"type":"method","name":"excel2003_style?","children":[],"call":["@workbook excel2003_style "]}," Writexlsx Workbook set_calc_mode":{"type":"method","name":"set_calc_mode","children":[],"call":["mode == "]}," Writexlsx Utility process_workbook_options":{"type":"method","name":"process_workbook_options","children":[],"call":["default_format_properties dup ","options dup ","options_keys include? ","hash reject ","hash [] ","options_keys include? ! ","params first ","params size ","params first  reject ","params first  [] "]}," Writexlsx Chart Pie set_rotation":{"type":"method","name":"set_rotation","children":[],"call":[" raise ","rotation <= ","rotation >= "]}," Writexlsx Chart Doughnut write_hole_size":{"type":"method","name":"write_hole_size","children":[],"call":["@writer empty_tag "]}," Writexlsx Chart Doughnut write_doughnut_chart":{"type":"method","name":"write_doughnut_chart","children":[],"call":[" write_hole_size "," write_first_slice_ang "," write_ser ","@series each "," write_vary_colors ","@writer tag_elements "]}," Writexlsx Chart Doughnut write_chart_type":{"type":"method","name":"write_chart_type","children":[],"call":[" write_doughnut_chart "]}," Writexlsx Chart Doughnut set_hole_size":{"type":"method","name":"set_hole_size","children":[],"call":[" raise ","size <= ","size >= "]}," Writexlsx Chart Doughnut initialize":{"type":"method","name":"initialize","children":[],"call":[]}," Writexlsx Worksheet write_legacy_drawing_hf":{"type":"method","name":"write_legacy_drawing_hf","children":[],"call":["@writer empty_tag "," has_header_vml? "]}," Writexlsx Worksheet prepare_header_image":{"type":"method","name":"prepare_header_image","children":[],"call":["@vml_drawing_links << ","@header_images_array << ","body []= ","name dup "," get_vml_drawing_rel_index ","@vml_drawing_rels [] ! ","@vml_drawing_rels [] ","name dup  []= "]}," Writexlsx Worksheet prepare_header_vml_objects":{"type":"method","name":"prepare_header_vml_objects","children":[],"call":["@external_vml_links << "]}," Writexlsx Worksheet header_images_data":{"type":"method","name":"header_images_data","children":[],"call":[]}," Writexlsx Worksheet has_header_vml?":{"type":"method","name":"has_header_vml?","children":[],"call":[]}," Writexlsx Sheets write_vml_drawing_rels_files":{"type":"method","name":"write_vml_drawing_rels_files","children":[],"call":["rels assemble_xml_file ","rels set_xml_writer ","rels add_document_relationship ","worksheet vml_drawing_links each ","worksheet vml_drawing_links ","Package Relationships  new ","FileUtils  mkdir_p ","Package Relationships  new  assemble_xml_file ","Package Relationships  new  set_xml_writer ","Package Relationships  new  add_document_relationship "]}," Writexlsx Package Vml write_f":{"type":"method","name":"write_f","children":[],"call":["@writer empty_tag "]}," Writexlsx Package Vml write_formulas":{"type":"method","name":"write_formulas","children":[],"call":[" write_f ","@writer tag_elements "]}," Writexlsx Package Vml write_imagedata":{"type":"method","name":"write_imagedata","children":[],"call":["@writer empty_tag "]}," Writexlsx Package Vml write_image_shape":{"type":"method","name":"write_image_shape","children":[],"call":[" write_rotation_lock "," write_imagedata ","@writer tag_elements ","(str \"position:absolute\") join ","height to_i ","(send\n  (lvar :height) :-\n  (send\n    (lvar :height) :to_i)) abs < ","(send\n  (lvar :height) :-\n  (send\n    (lvar :height) :to_i)) abs ","height - ","width to_i ","(send\n  (lvar :width) :-\n  (send\n    (lvar :width) :to_i)) abs < ","(send\n  (lvar :width) :-\n  (send\n    (lvar :width) :to_i)) abs ","width - ","72 / * ","(send\n  (send\n    (send\n      (lvar :height) :*\n      (int 96)) :/\n    (float 72.0)) :+\n  (float 0.25)) to_i ","height * / + ","height * / ","height * ","72 / ","(send\n  (send\n    (send\n      (lvar :width) :*\n      (int 96)) :/\n    (float 72.0)) :+\n  (float 0.25)) to_i ","width * / + ","width * / ","width * ","image_data [] ","(send\n  (begin\n    (send\n      (send\n        (lvar :height) :*\n        (int 96)) :/\n      (float 72.0))) :+\n  (float 0.25)) to_i ","(send\n  (send\n    (lvar :height) :*\n    (int 96)) :/\n  (float 72.0)) + ","(send\n  (begin\n    (send\n      (send\n        (lvar :width) :*\n        (int 96)) :/\n      (float 72.0))) :+\n  (float 0.25)) to_i ","(send\n  (send\n    (lvar :width) :*\n    (int 96)) :/\n  (float 72.0)) + ","(str \"image_data [] :absolute\") join ","height to_i  to_i ","72 / *  to_i ","height * /  to_i ","image_data []  to_i ","(send\n  (lvar :height to_i ) :-\n  (send\n    (lvar :height to_i ) :to_i)) abs < ","(send\n  (lvar :72 / * ) :-\n  (send\n    (lvar :72 / * ) :to_i)) abs < ","(send\n  (lvar :height * / ) :-\n  (send\n    (lvar :height * / ) :to_i)) abs < ","(send\n  (lvar :image_data [] ) :-\n  (send\n    (lvar :image_data [] ) :to_i)) abs < ","(send\n  (lvar :height to_i ) :-\n  (send\n    (lvar :height to_i ) :to_i)) abs ","(send\n  (lvar :72 / * ) :-\n  (send\n    (lvar :72 / * ) :to_i)) abs ","(send\n  (lvar :height * / ) :-\n  (send\n    (lvar :height * / ) :to_i)) abs ","(send\n  (lvar :image_data [] ) :-\n  (send\n    (lvar :image_data [] ) :to_i)) abs ","height to_i  - ","72 / *  - ","height * /  - ","image_data []  - ","width to_i  to_i ","width * /  to_i ","(send\n  (lvar :width to_i ) :-\n  (send\n    (lvar :width to_i ) :to_i)) abs < ","(send\n  (lvar :width * / ) :-\n  (send\n    (lvar :width * / ) :to_i)) abs < ","(send\n  (lvar :width to_i ) :-\n  (send\n    (lvar :width to_i ) :to_i)) abs ","(send\n  (lvar :width * / ) :-\n  (send\n    (lvar :width * / ) :to_i)) abs ","width to_i  - ","width * /  - ","(send\n  (send\n    (send\n      (lvar :height to_i ) :*\n      (int 96)) :/\n    (float 72.0)) :+\n  (float 0.25)) to_i ","(send\n  (send\n    (send\n      (lvar :72 / * ) :*\n      (int 96)) :/\n    (float 72.0)) :+\n  (float 0.25)) to_i ","(send\n  (send\n    (send\n      (lvar :height * / ) :*\n      (int 96)) :/\n    (float 72.0)) :+\n  (float 0.25)) to_i ","(send\n  (send\n    (send\n      (lvar :image_data [] ) :*\n      (int 96)) :/\n    (float 72.0)) :+\n  (float 0.25)) to_i ","height to_i  * / + ","72 / *  * / + ","height * /  * / + ","image_data []  * / + ","height to_i  * / ","72 / *  * / ","height * /  * / ","image_data []  * / ","height to_i  * ","72 / *  * ","height * /  * ","image_data []  * ","(send\n  (send\n    (send\n      (lvar :width to_i ) :*\n      (int 96)) :/\n    (float 72.0)) :+\n  (float 0.25)) to_i ","(send\n  (send\n    (send\n      (lvar :width * / ) :*\n      (int 96)) :/\n    (float 72.0)) :+\n  (float 0.25)) to_i ","width to_i  * / + ","width * /  * / + ","width to_i  * / ","width * /  * / ","width to_i  * ","width * /  * ","(send\n  (begin\n    (send\n      (send\n        (lvar :height to_i ) :*\n        (int 96)) :/\n      (float 72.0))) :+\n  (float 0.25)) to_i ","(send\n  (begin\n    (send\n      (send\n        (lvar :72 / * ) :*\n        (int 96)) :/\n      (float 72.0))) :+\n  (float 0.25)) to_i ","(send\n  (begin\n    (send\n      (send\n        (lvar :height * / ) :*\n        (int 96)) :/\n      (float 72.0))) :+\n  (float 0.25)) to_i ","(send\n  (begin\n    (send\n      (send\n        (lvar :image_data [] ) :*\n        (int 96)) :/\n      (float 72.0))) :+\n  (float 0.25)) to_i ","(send\n  (send\n    (lvar :height to_i ) :*\n    (int 96)) :/\n  (float 72.0)) + ","(send\n  (send\n    (lvar :72 / * ) :*\n    (int 96)) :/\n  (float 72.0)) + ","(send\n  (send\n    (lvar :height * / ) :*\n    (int 96)) :/\n  (float 72.0)) + ","(send\n  (send\n    (lvar :image_data [] ) :*\n    (int 96)) :/\n  (float 72.0)) + ","(send\n  (begin\n    (send\n      (send\n        (lvar :width to_i ) :*\n        (int 96)) :/\n      (float 72.0))) :+\n  (float 0.25)) to_i ","(send\n  (begin\n    (send\n      (send\n        (lvar :width * / ) :*\n        (int 96)) :/\n      (float 72.0))) :+\n  (float 0.25)) to_i ","(send\n  (send\n    (lvar :width to_i ) :*\n    (int 96)) :/\n  (float 72.0)) + ","(send\n  (send\n    (lvar :width * / ) :*\n    (int 96)) :/\n  (float 72.0)) + "]}," Writexlsx Package Vml write_aspect_ratio_lock":{"type":"method","name":"write_aspect_ratio_lock","children":[],"call":["@writer empty_tag "]}," Writexlsx Package Vml write_image_path":{"type":"method","name":"write_image_path","children":[],"call":["@writer empty_tag "]}," Writexlsx Package Vml write_image_shapetype":{"type":"method","name":"write_image_shapetype","children":[],"call":[" write_aspect_ratio_lock "," write_image_path "," write_formulas "," write_stroke ","@writer tag_elements "]}," Writexlsx Chart write_separator":{"type":"method","name":"write_separator","children":[],"call":["@writer data_element "]}," Writexlsx Chart write_show_legend_key":{"type":"method","name":"write_show_legend_key","children":[],"call":["@writer empty_tag "]}," Writexlsx Chart write_data_label_number_format":{"type":"method","name":"write_data_label_number_format","children":[],"call":["@writer empty_tag "]}," Writexlsx Chart Axis set_axis_fill":{"type":"method","name":"set_axis_fill","children":[],"call":["@chart fill_properties ","args [] "]}," Writexlsx Chart Axis set_axis_line":{"type":"method","name":"set_axis_line","children":[],"call":["@chart line_properties ","args [] "]}," Writexlsx Worksheet set_vba_name":{"type":"method","name":"set_vba_name","children":[],"call":[]}," Writexlsx Worksheet vertical_dpi=":{"type":"method","name":"vertical_dpi=","children":[],"call":["@page_setup vertical_dpi= "]}," Writexlsx Worksheet horizontal_dpi=":{"type":"method","name":"horizontal_dpi=","children":[],"call":["@page_setup horizontal_dpi= "]}," Writexlsx Workbook non_chartsheets":{"type":"method","name":"non_chartsheets","children":[],"call":["@worksheets worksheets "]}," Writexlsx Workbook chartsheets":{"type":"method","name":"chartsheets","children":[],"call":["@worksheets chartsheets "]}," Writexlsx Workbook non_chartsheet_count":{"type":"method","name":"non_chartsheet_count","children":[],"call":["@worksheets worksheets count ","@worksheets worksheets "]}," Writexlsx Workbook set_vba_name":{"type":"method","name":"set_vba_name","children":[],"call":[]}," Writexlsx Utility quote_sheetname":{"type":"method","name":"quote_sheetname","children":[],"call":["name gsub ","(send\n  (lvar :name) :=~\n  (regexp\n    (str \"^'\")\n    (regopt))) ! ","name =~ ","sheetname dup ","name gsub  gsub ","sheetname dup  gsub ","(send\n  (lvar :name gsub ) :=~\n  (regexp\n    (str \"^'\")\n    (regopt))) ! ","(send\n  (lvar :sheetname dup ) :=~\n  (regexp\n    (str \"^'\")\n    (regopt))) ! ","name gsub  =~ ","sheetname dup  =~ ","sheetname gsub  dup ","sheetsheetname dup  dup "]}," Writexlsx Package Styles write_dxf":{"type":"method","name":"write_dxf","children":[],"call":[" write_border ","format has_dxf_border? "," write_fill ","format has_dxf_fill? "," write_num_fmt ","format num_format ","format num_format_index ","format num_format_index != ","format write_font ","format has_dxf_font? ","@writer tag_elements "]}," Writexlsx Package Styles write_style_sheet_base":{"type":"method","name":"write_style_sheet_base","children":[],"call":[" write_colors "," write_table_styles "," write_dxfs "," write_cell_styles "," write_cell_xfs "," write_cell_style_xfs "," write_borders "," write_fills "," write_fonts "," write_num_fmts "]}," Writexlsx Package Styles write_border_sub_elements":{"type":"method","name":"write_border_sub_elements","children":[],"call":[" write_sub_border ","format bottom_color ","format bottom ","format top_color ","format top ","format right_color ","format right ","format left_color ","format left "]}," Writexlsx Package Styles write_border_base":{"type":"method","name":"write_border_base","children":[],"call":[" write_sub_border ","format diag_color ","format diag_border ","format diag_border= ","format diag_border == ","format diag_type != ","format diag_type "," write_border_sub_elements "]}," Writexlsx Package Styles write_borders_base":{"type":"method","name":"write_borders_base","children":[],"call":[" write_border ","format has_border? ","@xf_formats each "]}," Writexlsx Package Styles bg_and_fg_color":{"type":"method","name":"bg_and_fg_color","children":[],"call":["format dxf_fg_color ","format dxf_bg_color ","dxf_format != ","format fg_color ","format bg_color ","format dxf_format dxf_fg_color  ","format dxf_format fg_color  ","format dxf_format dxf_bg_color  ","format dxf_format bg_color  ","format format dxf_fg_color  ","format format fg_color  ","format format dxf_bg_color  ","format format bg_color  "]}," Writexlsx Package Styles write_pattern_fill":{"type":"method","name":"write_pattern_fill","children":[],"call":["@writer empty_tag ","dxf_format ! "," palette_color ","bg_color != ","fg_color != "," bg_and_fg_color ","format pattern <= ","format pattern "]}," Writexlsx Package Styles write_fill_base":{"type":"method","name":"write_fill_base","children":[],"call":[" write_pattern_fill ","@writer tag_elements ","PATTERNS  [] ","format pattern ","format pattern <= "]}," Writexlsx Package Styles write_fills_base":{"type":"method","name":"write_fills_base","children":[],"call":[" write_fill ","format has_fill? ","@xf_formats each "," write_default_fill "]}," Writexlsx Package Styles write_font_base":{"type":"method","name":"write_font_base","children":[],"call":["format write_font ","format has_font? ","@xf_formats each ","format font_index "," ptrue? ","format hyperlink "," write_comment_font "]}," Writexlsx Package Core write_cp_core_properties_base":{"type":"method","name":"write_cp_core_properties_base","children":[],"call":[" write_cp_content_status "," write_cp_category "," write_dcterms_modified "," write_dcterms_created "," write_cp_last_modified_by "," write_dc_description "," write_cp_keywords "," write_dc_creator "," write_dc_subject "," write_dc_title "]}," Writexlsx Package ContentTypes write_default_or_override":{"type":"method","name":"write_default_or_override","children":[],"call":["@writer empty_tag ","a [] "]}," Writexlsx Package ContentTypes add_table_names":{"type":"method","name":"add_table_names","children":[],"call":[" add_table_name ","(irange\n  (int 1)\n  (lvar :table_count)) each "]}," Writexlsx Package ContentTypes add_comment_names":{"type":"method","name":"add_comment_names","children":[],"call":[" add_comment_name ","(irange\n  (int 1)\n  (send\n    (ivar :@workbook) :num_comment_files)) each ","@workbook num_comment_files "]}," Writexlsx Package ContentTypes add_drawing_names":{"type":"method","name":"add_drawing_names","children":[],"call":[" add_drawing_name ","(irange\n  (int 1)\n  (send\n    (send\n      (ivar :@workbook) :drawings) :size)) each ","@workbook drawings size ","@workbook drawings "]}," Writexlsx Package ContentTypes add_chart_names":{"type":"method","name":"add_chart_names","children":[],"call":[" add_chart_name ","(irange\n  (int 1)\n  (send\n    (send\n      (ivar :@workbook) :charts) :size)) each ","@workbook charts size ","@workbook charts "]}," Writexlsx Package ContentTypes add_chartsheet_names":{"type":"method","name":"add_chartsheet_names","children":[],"call":[" add_chartsheet_name ","index + ","@workbook chartsheet_count times ","@workbook chartsheet_count "]}," Writexlsx Package ContentTypes add_worksheet_names":{"type":"method","name":"add_worksheet_names","children":[],"call":[" add_worksheet_name ","index + ","@workbook non_chartsheet_count times ","@workbook non_chartsheet_count "]}," Writexlsx Package App add_named_ranges_parts":{"type":"method","name":"add_named_ranges_parts","children":[],"call":[" add_part_name ","@workbook named_ranges each ","@workbook named_ranges "]}," Writexlsx Package App add_named_range_heading_pairs":{"type":"method","name":"add_named_range_heading_pairs","children":[],"call":[" add_heading_pair ","range_count != ","@workbook named_ranges size ","@workbook named_ranges ","@workbook named_ranges size  != "]}," Writexlsx Package App add_chartsheet_part_names":{"type":"method","name":"add_chartsheet_part_names","children":[],"call":[" add_part_name ","sheet name ","(send\n  (send\n    (ivar :@workbook) :worksheets) :select) each ","sheet is_chartsheet? ","@workbook worksheets select ","@workbook worksheets "]}," Writexlsx Package App add_worksheet_part_names":{"type":"method","name":"add_worksheet_part_names","children":[],"call":[" add_part_name ","sheet name ","(send\n  (send\n    (ivar :@workbook) :worksheets) :reject) each ","sheet is_chartsheet? ","@workbook worksheets reject ","@workbook worksheets "]}," Writexlsx Package App add_chartsheet_heading_pairs":{"type":"method","name":"add_chartsheet_heading_pairs","children":[],"call":[" add_heading_pair ","@workbook chartsheet_count "]}," Writexlsx Package App add_worksheet_heading_pairs":{"type":"method","name":"add_worksheet_heading_pairs","children":[],"call":[" add_heading_pair ","(send\n  (send\n    (ivar :@workbook) :worksheets) :reject) count ","s is_chartsheet? ","@workbook worksheets reject ","@workbook worksheets "]}," Writexlsx Format xf_attributes":{"type":"method","name":"xf_attributes","children":[],"call":["attributes << "," get_protection_properties "," get_align_properties "," border_index > "," border_index "," fill_index > "," fill_index "," font_index > "," font_index "," num_format_index > "," num_format_index "," ptrue? "," hyperlink "," ptrue? ! "," xf_id "," quote_prefix "]}," Writexlsx Format border_attributes":{"type":"method","name":"border_attributes","children":[],"call":["attributes << "," diag_type == "," diag_type "]}," Writexlsx Chart write_ser_base":{"type":"method","name":"write_ser_base","children":[],"call":[" write_error_bars ","series error_bars "," write_trendline ","series trendline "," write_d_lbls ","series labels "," write_d_pt ","series points "," block_given? "," write_marker ","series marker "," write_sp_pr "," write_series_name "," write_order "," write_idx "]}," Writexlsx Chart is_secondary?":{"type":"method","name":"is_secondary?","children":[],"call":[]}," Writexlsx Chart already_inserted?":{"type":"method","name":"already_inserted?","children":[],"call":[]}," Writexlsx Chart combine":{"type":"method","name":"combine","children":[],"call":[]}," Writexlsx Chart Scatter combine":{"type":"method","name":"combine","children":[],"call":[" raise "]}," Writexlsx Chart Pie combine":{"type":"method","name":"combine","children":[],"call":[" raise "]}," Writexlsx Chart Bar combine":{"type":"method","name":"combine","children":[],"call":[" raise ","chart is_secondary? "]}," Writexlsx Worksheet print_black_and_white":{"type":"method","name":"print_black_and_white","children":[],"call":["@page_setup black_white= ","@page_setup page_setup_changed= "]}," Writexlsx Worksheet Hyperlink escape_url":{"type":"method","name":"escape_url","children":[],"call":["url sub "," sprintf ","match ord ","$~ [] ","re =~ ","url gsub ","url =~ ","url sub  sub ","url gsub  sub ","$~ []  ord ","url sub  gsub ","url gsub  gsub ","url sub  =~ ","url gsub  =~ "]}," Writexlsx Workbook tempdir":{"type":"method","name":"tempdir","children":[],"call":[]}," Writexlsx Workbook fileobj":{"type":"method","name":"fileobj","children":[],"call":[" setup_filename "]}," Writexlsx Workbook filename":{"type":"method","name":"filename","children":[],"call":[" setup_filename "]}," Writexlsx Workbook set_tempdir":{"type":"method","name":"set_tempdir","children":[],"call":["dir dup "]}," Writexlsx Gradient gradient_properties":{"type":"method","name":"gradient_properties","children":[],"call":["gradient []= ","types [] "," raise ","args [] ","angle > ","angle < ","args [] size ","pos > ","pos < ","args [] each ","args [] size == "," ptrue? ","args [] size < ","args [] s [] ","args []  > ","args []  < "]}," Writexlsx Chart write_a_tile_rect":{"type":"method","name":"write_a_tile_rect","children":[],"call":["@writer empty_tag ","type == "]}," Writexlsx Chart write_a_fill_to_rect":{"type":"method","name":"write_a_fill_to_rect","children":[],"call":["@writer empty_tag ","type == "]}," Writexlsx Chart write_a_path":{"type":"method","name":"write_a_path","children":[],"call":[" write_a_fill_to_rect ","@writer tag_elements "]}," Writexlsx Chart write_a_lin":{"type":"method","name":"write_a_lin","children":[],"call":["@writer empty_tag ","(send\n  (int 60000) :*\n  (lvar :angle)) to_i ","60000 * ","(send\n  (int 60000) :*\n  (lvar :(send\n  (int 60000) :*\n  (lvar :angle)) to_i )) to_i "]}," Writexlsx Chart write_a_gs_lst":{"type":"method","name":"write_a_gs_lst","children":[],"call":[" write_a_srgb_clr "," color ","colors [] ","@writer tag_elements ","(send\n  (send\n    (lvar :positions) :[]\n    (lvar :i)) :*\n  (int 1000)) to_i ","positions [] * ","positions [] ","(irange\n  (int 0)\n  (send\n    (send\n      (lvar :colors) :size) :-\n    (int 1))) each ","colors size - ","colors size ","gradient [] ","  color  "," color s [] ","gradient []  [] ","(send\n  (send\n    (lvar :(send\n  (send\n    (lvar :positions) :[]\n    (lvar :i)) :*\n  (int 1000)) to_i itions) :[]\n    (lvar :i)) :*\n  (int 1000)) to_i ","(send\n  (send\n    (lvar :gradient [] ) :[]\n    (lvar :i)) :*\n  (int 1000)) to_i ","(send\n  (send\n    (lvar :positions) :[]\n    (lvar :i)) :*\n  (int 1000)) to_i itions [] * ","gradient []  [] * ","(send\n  (send\n    (lvar :positions) :[]\n    (lvar :i)) :*\n  (int 1000)) to_i itions [] ","(irange\n  (int 0)\n  (send\n    (send\n      (lvar : color s) :size) :-\n    (int 1))) each ","(irange\n  (int 0)\n  (send\n    (send\n      (lvar :gradient [] ) :size) :-\n    (int 1))) each "," color s size - ","gradient []  size - "," color s size ","gradient []  size "]}," Writexlsx Chart write_a_grad_fill":{"type":"method","name":"write_a_grad_fill","children":[],"call":[" write_a_tile_rect ","gradient [] "," write_a_path "," write_a_lin ","gradient [] == "," write_a_gs_lst ","@writer tag_elements "]}," Writexlsx Chart write_disp_units":{"type":"method","name":"write_disp_units","children":[],"call":["@writer empty_tag ","@writer tag_elements "," ptrue? "]}," Writexlsx Chart write_multi_lvl_str_ref":{"type":"method","name":"write_multi_lvl_str_ref","children":[],"call":[" write_pt ","arr each_with_index ","@writer tag_elements ","data reverse each ","data reverse "," write_pt_count ","data last size ","data last "," write_series_formula ","data empty? "]}," Writexlsx Chart Axis set_display_units_visible":{"type":"method","name":"set_display_units_visible","children":[],"call":["args [] "]}," Writexlsx Chart Axis set_display_units":{"type":"method","name":"set_display_units","children":[],"call":[" get_display_units ","args [] "]}," Writexlsx Chart Axis get_display_units":{"type":"method","name":"get_display_units","children":[],"call":["types [] "," ptrue? "," warn "]}," Writexlsx Sheets visible_first":{"type":"method","name":"visible_first","children":[],"call":["(send\n  (self) :reject) first ","worksheet hidden? "," reject ","(send nil :reject) first "]}," Writexlsx Worksheet update_range_format_with_params":{"type":"method","name":"update_range_format_with_params","children":[],"call":[" update_format_with_params ","(irange\n  (lvar :col_first)\n  (lvar :col_last)) each ","(irange\n  (lvar :row_first)\n  (lvar :row_last)) each "," store_row_col_max_min_values "," check_dimensions ","col_first > ","row_first > "," raise ","(lvar :row_first) include? "," row_col_notation ","(irange\n  (lvar :_col_first)\n  (lvar :_col_last)) each ","(irange\n  (lvar :_row_first)\n  (lvar :_row_last)) each ","_col_first > ","_row_first > ","(lvar :_row_first) include? "," args [] "," args "," update_format_with_ args []  "]}," Writexlsx Worksheet update_format_with_params":{"type":"method","name":"update_format_with_params","children":[],"call":[" write ","cell_data data ","@workbook shared_strings string ","cell_data data [] ","@workbook shared_strings ","cell_data is_a? ","cell_data token ","format set_format_properties ","format copy ","cell_data xf ","@cell_data_table [] [] ","@cell_data_table [] ","@workbook add_format ","@cell_data_table [] [] xf nil? ","@cell_data_table [] [] xf "," write_blank ","@cell_data_table [] [] nil? ","@cell_data_table [] nil? "," store_row_col_max_min_values "," check_dimensions "," raise ","params nil? ","col nil? ","row nil? "," row_col_notation ","_params nil? ","_col nil? ","_row nil? "," args [] "," args ","@cell_data_table [] []  data ","@cell_data_table [] []  data [] ","@cell_data_table [] []  is_a? ","@cell_data_table [] []  token ","@workbook add_format  set_@workbook add_format _properties ","@workbook add_format  copy ","@cell_data_table [] []  xf ","@@cell_data_table [] [] _table [] [] ","@@cell_data_table [] [] _table [] ","@workbook add_@workbook add_format  ","@@cell_data_table [] [] _table [] [] xf nil? ","@@cell_data_table [] [] _table [] [] xf ","@@cell_data_table [] [] _table [] [] nil? ","@@cell_data_table [] [] _table [] nil? "," store_row_col_max_min_cell_data data s "," store_row_col_max_min_@workbook shared_strings string s "," args []  nil? "]}," Writexlsx Package ConditionalFormat stop_if_true":{"type":"method","name":"stop_if_true","children":[],"call":["@param [] "]}," Writexlsx Package App write_hyperlink_base":{"type":"method","name":"write_hyperlink_base","children":[],"call":["@writer data_element ","@properties [] ","@writer @properties [] _element "]}," Writexlsx Utility pattern_properties":{"type":"method","name":"pattern_properties","children":[],"call":["pattern []= ","args [] "," raise ","types [] "," retuen ","args has_key? "]}," Writexlsx Chart write_a_bg_clr":{"type":"method","name":"write_a_bg_clr","children":[],"call":[" write_a_srgb_clr "," color ","@writer tag_elements "]}," Writexlsx Chart write_a_fg_clr":{"type":"method","name":"write_a_fg_clr","children":[],"call":[" write_a_srgb_clr "," color ","@writer tag_elements "]}," Writexlsx Chart write_a_patt_fill":{"type":"method","name":"write_a_patt_fill","children":[],"call":[" write_a_bg_clr ","pattern [] "," write_a_fg_clr ","@writer tag_elements "]}," Writexlsx Chart write_tick_mark_skip":{"type":"method","name":"write_tick_mark_skip","children":[],"call":["@writer empty_tag "]}," Writexlsx Chart write_a_alpha":{"type":"method","name":"write_a_alpha","children":[],"call":["@writer empty_tag ","(send\n  (int 100) :-\n  (send\n    (lvar :val) :to_i)) * ","100 - ","val to_i ","(send\n  (int 100) :-\n  (send\n    (lvar :(send\n  (int 100) :-\n  (send\n    (lvar :val) :to_i)) * ) :to_i)) * ","(send\n  (int 100) :-\n  (send\n    (lvar :val) :to_i)) *  to_i "]}," Writexlsx Chart write_minor_tick_mark":{"type":"method","name":"write_minor_tick_mark","children":[],"call":["@writer empty_tag "," ptrue? "]}," Writexlsx Chart Axis get_tick_type":{"type":"method","name":"get_tick_type","children":[],"call":[" raise ","types [] "," ptrue? ! "," ptrue? "]}," Writexlsx Worksheet write_boolean":{"type":"method","name":"write_boolean","children":[],"call":[" store_data_to_table ","BooleanCellData  new "," store_row_col_max_min_values "," check_dimensions "," raise ","col nil? ","row nil? "," row_col_notation ","_col nil? ","_row nil? "]}," Writexlsx Worksheet BooleanCellData write_cell":{"type":"method","name":"write_cell","children":[],"call":["@worksheet write_cell_value "," token ","@worksheet writer tag_elements ","@worksheet writer ","attributes << "," cell_attributes ","worksheet write_cell_value ","worksheet writer tag_elements ","worksheet writer "," cell_attributes  << "," cell_ cell_attributes  "]}," Writexlsx Worksheet BooleanCellData data":{"type":"method","name":"data","children":[],"call":[]}," Writexlsx Worksheet BooleanCellData initialize":{"type":"method","name":"initialize","children":[],"call":[]}," Writexlsx Workbook worksheet_by_name":{"type":"method","name":"worksheet_by_name","children":[],"call":["(send\n  (send nil :sheets) :select) first ","s name == ","s name "," sheets select "," sheets "]}," Writexlsx Package Core datetime_to_iso8601_date":{"type":"method","name":"datetime_to_iso8601_date","children":[],"call":["gm_time strftime ","Time  now gmtime ","Time  now "]}," Writexlsx Worksheet write_ext_list_sparklines":{"type":"method","name":"write_ext_list_sparklines","children":[],"call":[" write_sparkline_groups "," write_ext "]}," Writexlsx Worksheet write_x14_axis_color":{"type":"method","name":"write_x14_axis_color","children":[],"call":["@writer empty_tag "]}," Writexlsx Worksheet write_x14_negative_border_color":{"type":"method","name":"write_x14_negative_border_color","children":[],"call":["@writer empty_tag "]}," Writexlsx Worksheet write_x14_negative_fill_color":{"type":"method","name":"write_x14_negative_fill_color","children":[],"call":["@writer empty_tag "]}," Writexlsx Worksheet write_x14_border_color":{"type":"method","name":"write_x14_border_color","children":[],"call":["@writer empty_tag "]}," Writexlsx Worksheet write_x14_data_bar":{"type":"method","name":"write_x14_data_bar","children":[],"call":["@writer start_tag ","attributes << ","data_bar [] == ","data_bar [] "," ptrue? ! "," ptrue? "]}," Writexlsx Worksheet write_x14_cf_rule":{"type":"method","name":"write_x14_cf_rule","children":[],"call":["@writer start_tag ","data_bar [] "]}," Writexlsx Worksheet write_x14_cfvo":{"type":"method","name":"write_x14_cfvo","children":[],"call":["@writer data_element ","@writer tag_elements ","@writer empty_tag ","(str \"min\") include? "]}," Writexlsx Worksheet write_conditional_formatting_2010":{"type":"method","name":"write_conditional_formatting_2010","children":[],"call":["@writer data_element ","data_bar [] ","@writer end_tag "," write_x14_axis_color ","data_bar [] != "," write_x14_negative_border_color "," ptrue? ! "," ptrue? "," write_x14_negative_fill_color "," write_x14_border_color "," write_x14_cfvo "," write_x14_data_bar "," write_x14_cf_rule ","@writer tag_elements "]}," Writexlsx Worksheet write_ext_list_data_bars":{"type":"method","name":"write_ext_list_data_bars","children":[],"call":[" write_conditional_formatting_2010 ","@data_bars_2010 each ","@writer tag_elements "," write_ext "]}," Writexlsx Worksheet write_ext_list":{"type":"method","name":"write_ext_list","children":[],"call":[" write_ext_list_sparklines ","@sparklines size > ","@sparklines size "," write_ext_list_data_bars ","@data_bars_2010 size > ","@data_bars_2010 size ","@writer tag_elements ","@sparklines empty? ","@data_bars_2010 empty? "]}," Writexlsx Workbook default_url_format":{"type":"method","name":"default_url_format","children":[],"call":[]}," Writexlsx Workbook set_custom_property":{"type":"method","name":"set_custom_property","children":[],"call":["@custom_properties << ","type == "," raise ","value length > ","value length ","valid_type [] ! ","valid_type [] ","value =~ "," ptrue? ! "," ptrue? ","value ! ","type != ","name ! "]}," Writexlsx Workbook set_size":{"type":"method","name":"set_size","children":[],"call":["height to_i * / ","height to_i * ","height to_i "," ptrue? ","width to_i * / ","width to_i * ","width to_i "]}," Writexlsx Utility write_a_end_para_rpr":{"type":"method","name":"write_a_end_para_rpr","children":[],"call":["@writer empty_tag "]}," Writexlsx Utility get_font_style_attributes":{"type":"method","name":"get_font_style_attributes","children":[],"call":["attributes << ","font [] ","font [] != "," ptrue? ","font respond_to? "]}," Writexlsx Utility color":{"type":"method","name":"color","children":[],"call":[" palette_color "," raise ","Format  color ","color_code sub upcase ","color_code sub ","color_code =~ "]}," Writexlsx Utility write_a_srgb_clr":{"type":"method","name":"write_a_srgb_clr","children":[],"call":["@writer empty_tag "," write_a_alpha ","@writer tag_elements "," ptrue? "]}," Writexlsx Utility write_a_solid_fill":{"type":"method","name":"write_a_solid_fill","children":[],"call":[" write_a_srgb_clr ","fill [] "," color ","@writer tag_elements "]}," Writexlsx Utility get_font_latin_attributes":{"type":"method","name":"get_font_latin_attributes","children":[],"call":["attributes << ","font [] "," ptrue? ","font respond_to? "]}," Writexlsx Utility write_def_rpr_r_pr_common":{"type":"method","name":"write_def_rpr_r_pr_common","children":[],"call":["@writer empty_tag "," write_a_latin ","latin_attributes empty? ! ","latin_attributes empty? "," write_a_solid_fill ","font [] ","@writer tag_elements "," ptrue? "," get_font_latin_attributes "," get_font_latin_attributes  empty? ! "," get_font_latin_attributes  empty? "," get_font_ get_font_latin_attributes  "]}," Writexlsx Utility write_a_def_rpr":{"type":"method","name":"write_a_def_rpr","children":[],"call":[" write_def_rpr_r_pr_common "," get_font_style_attributes "]}," Writexlsx Utility write_a_p_pr_formula":{"type":"method","name":"write_a_p_pr_formula","children":[],"call":[" write_a_def_rpr ","@writer tag_elements "]}," Writexlsx Utility write_a_p_formula":{"type":"method","name":"write_a_p_formula","children":[],"call":[" write_a_end_para_rpr "," write_a_p_pr_formula ","@writer tag_elements "]}," Writexlsx Utility write_a_lst_style":{"type":"method","name":"write_a_lst_style","children":[],"call":["@writer empty_tag "]}," Writexlsx Utility write_a_body_pr":{"type":"method","name":"write_a_body_pr","children":[],"call":["@writer empty_tag ","attributes << "," ptrue? ","rot ! ","rot == "]}," Writexlsx Utility write_tx_pr":{"type":"method","name":"write_tx_pr","children":[],"call":[" write_a_p_formula "," write_a_lst_style "," write_a_body_pr ","@writer tag_elements ","font [] ","font respond_to? "]}," Writexlsx Utility params_to_font":{"type":"method","name":"params_to_font","children":[],"call":["params [] "]}," Writexlsx Utility convert_font_args":{"type":"method","name":"convert_font_args","children":[],"call":["font []= ","60000 * ","font [] to_i ","font [] "," ptrue? ","font [] != "," params_to_font "," params_to_font  []= "," params_to_font  [] to_i "," params_to_font  [] "," params_to_font  [] != "," params_to_ params_to_font  "]}," Writexlsx Package Packager write_custom_file":{"type":"method","name":"write_custom_file","children":[],"call":["custom assemble_xml_file ","custom set_xml_writer ","custom set_properties ","FileUtils  mkdir_p ","properties empty? ","Package Custom  new ","@workbook custom_properties ","Package Custom  new  assemble_xml_file ","Package Custom  new  set_xml_writer ","Package Custom  new  set_properties ","custom set_@workbook custom_properties  ","@workbook custom_properties  empty? ","@workbook Package Custom  new _properties ","@workbook custom_@workbook custom_properties  "]}," Writexlsx Package Custom write_vt_filetime":{"type":"method","name":"write_vt_filetime","children":[],"call":["@writer data_element "]}," Writexlsx Package Custom write_vt_bool":{"type":"method","name":"write_vt_bool","children":[],"call":["@writer data_element "," ptrue? "]}," Writexlsx Package Custom write_vt_r8":{"type":"method","name":"write_vt_r8","children":[],"call":["@writer data_element "]}," Writexlsx Package Custom write_vt_i4":{"type":"method","name":"write_vt_i4","children":[],"call":["@writer data_element "]}," Writexlsx Package Custom write_vt_lpwstr":{"type":"method","name":"write_vt_lpwstr","children":[],"call":["@writer data_element "]}," Writexlsx Package Custom write_property":{"type":"method","name":"write_property","children":[],"call":[" write_vt_lpwstr "," write_vt_bool ","type == "," write_vt_i4 "," write_vt_r8 "," write_vt_filetime ","@writer tag_elements "]}," Writexlsx Package Custom write_properties":{"type":"method","name":"write_properties","children":[],"call":[" write_property ","@properties each ","@writer tag_elements "]}," Writexlsx Package Custom set_properties":{"type":"method","name":"set_properties","children":[],"call":[]}," Writexlsx Package Custom assemble_xml_file":{"type":"method","name":"assemble_xml_file","children":[],"call":[" write_properties "," write_xml_declaration "]}," Writexlsx Package Custom set_xml_writer":{"type":"method","name":"set_xml_writer","children":[],"call":["@writer set_xml_writer "]}," Writexlsx Package Custom initialize":{"type":"method","name":"initialize","children":[],"call":["Package XMLWriterSimple  new "]}," Writexlsx Package ContentTypes add_custom_properties":{"type":"method","name":"add_custom_properties","children":[],"call":[" add_override "]}," Writexlsx Package IconSetFormat write_icon_set":{"type":"method","name":"write_icon_set","children":[],"call":[" write_cfvo ","icon [] "," icons reverse each "," icons reverse "," icons ","@writer tag_elements ","attributes << "," reverse_icons "," icons_only "," icon_style "," icon_style != "]}," Writexlsx Package IconSetFormat write_cf_rule":{"type":"method","name":"write_cf_rule","children":[],"call":[" write_icon_set ","@writer tag_elements "," attributes "]}," Writexlsx Package DataBarFormat write_data_bar_ext":{"type":"method","name":"write_data_bar_ext","children":[],"call":["@writer data_element ","@worksheet write_ext ","@writer tag_elements ","@worksheet data_bars_2010 << ","@worksheet data_bars_2010 ","param []= "," sprintf ","@worksheet data_bars_2010 size + ","@worksheet data_bars_2010 size ","@worksheet index + ","@worksheet index "]}," Writexlsx Package ConditionalFormat set_icon_properties":{"type":"method","name":"set_icon_properties","children":[],"call":["props [] []= ","props [] ","user_props [] [] == ","user_props [] [] ","user_props [] ","props [] [] == ","props [] [] "," raise ","Unknown icon property type '$props->{type}' for sub- + ","type != ","user_props [] [] to_s sub ","user_props [] [] to_s ","(irange\n  (int 0)\n  (send\n    (lvar :max_data) :-\n    (int 1))) each ","max_data - ","total_icons - ","max_data >= ","user_props size ","total_icons == ","props << ","total_icons times ","Unknown icon property user_props [] []  '$props->{user_props [] [] }' for sub- + ","user_props [] []  != ","(irange\n  (int 0)\n  (send\n    (lvar :total_icons - ) :-\n    (int 1))) each ","(irange\n  (int 0)\n  (send\n    (lvar :user_props size ) :-\n    (int 1))) each ","total_icons -  - ","user_props size  - ","total_icons -  >= ","user_props size  >= "]}," Writexlsx Package ConditionalFormat icon_set_styles":{"type":"method","name":"icon_set_styles","children":[],"call":[]}," Writexlsx Package ConditionalFormat bar_only":{"type":"method","name":"bar_only","children":[],"call":["@param [] "]}," Writexlsx Package ConditionalFormat reverse_icons":{"type":"method","name":"reverse_icons","children":[],"call":["@param [] "]}," Writexlsx Package ConditionalFormat icons_only":{"type":"method","name":"icons_only","children":[],"call":["@param [] "]}," Writexlsx Package ConditionalFormat icons":{"type":"method","name":"icons","children":[],"call":["@param [] "]}," Writexlsx Package ConditionalFormat total_icons":{"type":"method","name":"total_icons","children":[],"call":["@param [] "]}," Writexlsx Package ConditionalFormat icon_style":{"type":"method","name":"icon_style","children":[],"call":["@param [] "]}," Writexlsx Package ConditionalFormat bar_axis_color":{"type":"method","name":"bar_axis_color","children":[],"call":["@param [] "]}," Writexlsx Package ConditionalFormat bar_axis_position":{"type":"method","name":"bar_axis_position","children":[],"call":["@param [] "]}," Writexlsx Package ConditionalFormat bar_no_border":{"type":"method","name":"bar_no_border","children":[],"call":["@param [] "]}," Writexlsx Package ConditionalFormat bar_negative_color_same":{"type":"method","name":"bar_negative_color_same","children":[],"call":["@param [] "]}," Writexlsx Package ConditionalFormat bar_negative_color":{"type":"method","name":"bar_negative_color","children":[],"call":["@param [] "]}," Writexlsx Package ConditionalFormat bar_border_color":{"type":"method","name":"bar_border_color","children":[],"call":["@param [] "]}," Writexlsx Chart write_trendline_num_fmt":{"type":"method","name":"write_trendline_num_fmt","children":[],"call":["@writer empty_tag "]}," Writexlsx Chart write_trendline_lbl":{"type":"method","name":"write_trendline_lbl","children":[],"call":[" write_trendline_num_fmt "," write_layout ","@writer tag_elements "]}," Writexlsx Chart write_disp_rsqr":{"type":"method","name":"write_disp_rsqr","children":[],"call":["@writer empty_tag "]}," Writexlsx Chart write_disp_eq":{"type":"method","name":"write_disp_eq","children":[],"call":["@writer empty_tag "]}," Writexlsx Chart write_intercept":{"type":"method","name":"write_intercept","children":[],"call":["@writer empty_tag "]}," Writexlsx Table palette=":{"type":"method","name":"palette=","children":[],"call":[]}," Writexlsx Worksheet hide_row_col_headers":{"type":"method","name":"hide_row_col_headers","children":[],"call":[]}," Writexlsx Workbook set_tab_ratio":{"type":"method","name":"set_tab_ratio","children":[],"call":["(send\n  (lvar :tab_ratio) :*\n  (int 10)) to_i ","tab_ratio * "," raise ","tab_ratio > ","tab_ratio < ","tab_ratio ! "]}," Writexlsx Utility legend_properties":{"type":"method","name":"legend_properties","children":[],"call":["legend layout= ","legend gradient= ","legend pattern= ","legend fill= ","legend line= "," layout_properties ","params [] "," gradient_properties "," pattern_properties "," fill_properties "," line_properties ","legend position= ","legend font= "," convert_font_args ","legend delete_series= ","Writexlsx Chart Legend  new ","legend  layout_properties = ","Writexlsx Chart Legend  new  layout= ","legend  gradient_properties = ","Writexlsx Chart Legend  new  gradient= ","legend  pattern_properties = ","Writexlsx Chart Legend  new  pattern= ","legend  fill_properties = ","Writexlsx Chart Legend  new  fill= ","legend  line_properties = ","Writexlsx Chart Legend  new  line= ","  layout_properties _properties ","  gradient_properties _properties ","  pattern_properties _properties ","  fill_properties _properties ","  line_properties _properties ","Writexlsx Chart Legend  new  position= ","Writexlsx Chart Legend  new  font= ","Writexlsx Chart Legend  new  delete_series= "]}," Writexlsx Package Comment font_name":{"type":"method","name":"font_name","children":[],"call":[]}," Writexlsx Chart Legend initialize":{"type":"method","name":"initialize","children":[],"call":[]}," Writexlsx Worksheet drawings?":{"type":"method","name":"drawings?","children":[],"call":["@drawings ! ! ","@drawings ! "]}," Writexlsx Drawings write_tx_body":{"type":"method","name":"write_tx_body","children":[],"call":["@writer characters ","shape text ","@writer tag_elements ","@writer empty_tag ","shape format [] ","shape format "," write_a_solid_fill ","color sub ","shape palette_color "," ptrue? ","shape align ","shape valign ","color sub  sub ","shape palette_color  sub ","shape format []  sub ","shape palette_color sub  ","shape palette_shape palette_color  ","shape palette_shape format []  "]}," Writexlsx Drawings write_a_ln":{"type":"method","name":"write_a_ln","children":[],"call":["@writer empty_tag ","shape connect != ","shape connect ","shape line_type ","shape line_type != "," write_a_solid_fill ","line to_s bytesize > ","line to_s bytesize ","line to_s ","shape line ","@writer tag_elements ","weight * ","shape line_weight ","shape connect == "]}," Writexlsx Drawings write_a_solid_fill":{"type":"method","name":"write_a_solid_fill","children":[],"call":["@writer empty_tag ","@writer tag_elements "]}," Writexlsx Drawings write_a_av_lst":{"type":"method","name":"write_a_av_lst","children":[],"call":["@writer empty_tag ","(send\n  (lvar :adj) :*\n  (int 1000)) to_i ","adj * ","shape connect != ","shape connect ","adjustments each ","@writer tag_elements ","adjustments empty? ! ","adjustments empty? ","adjustments respond_to? ","shape adjustments ! ","shape adjustments ","shape adjustments respond_to? ","shape connect == ","shape adjustments  each ","shape adjustments  empty? ! ","shape adjustments  empty? ","shape adjustments  respond_to? ","shape shape adjustments  ! ","shape shape adjustments  ","shape shape adjustments  respond_to? "]}," Writexlsx Drawings write_a_prst_geom":{"type":"method","name":"write_a_prst_geom","children":[],"call":[" write_a_av_lst ","@writer tag_elements ","attributes << ","shape type "]}," Writexlsx Drawings write_a_ext":{"type":"method","name":"write_a_ext","children":[],"call":["@writer empty_tag "]}," Writexlsx Drawings write_a_off":{"type":"method","name":"write_a_off","children":[],"call":["@writer empty_tag "]}," Writexlsx Drawings write_a_xfrm":{"type":"method","name":"write_a_xfrm","children":[],"call":[" write_a_ext "," write_a_off ","@writer tag_elements ","attributes << "," ptrue? ","shape flip_v ","shape flip_h ","rotation != ","shape rotation ","shape rotation  != ","shape shape rotation  "]}," Writexlsx Drawings write_xdr_sp_pr":{"type":"method","name":"write_xdr_sp_pr","children":[],"call":[" write_a_ln ","@writer empty_tag "," write_a_solid_fill ","shape fill ","shape fill to_s bytesize > ","shape fill to_s bytesize ","shape fill to_s "," write_a_prst_geom "," write_a_xfrm ","@writer tag_elements "]}," Writexlsx Drawings write_sp_pr":{"type":"method","name":"write_sp_pr","children":[],"call":[" write_a_prst_geom "," write_a_xfrm ","@writer tag_elements "]}," Writexlsx Drawings write_a_fill_rect":{"type":"method","name":"write_a_fill_rect","children":[],"call":["@writer empty_tag "]}," Writexlsx Drawings write_a_stretch":{"type":"method","name":"write_a_stretch","children":[],"call":[" write_a_fill_rect ","@writer tag_elements "]}," Writexlsx Drawings write_a_blip":{"type":"method","name":"write_a_blip","children":[],"call":["@writer empty_tag "]}," Writexlsx Drawings write_blip_fill":{"type":"method","name":"write_blip_fill","children":[],"call":[" write_a_stretch "," write_a_blip ","@writer tag_elements "]}," Writexlsx Drawings write_a_pic_locks":{"type":"method","name":"write_a_pic_locks","children":[],"call":["@writer empty_tag "]}," Writexlsx Drawings write_c_nv_pic_pr":{"type":"method","name":"write_c_nv_pic_pr","children":[],"call":[" write_a_pic_locks ","@writer tag_elements "]}," Writexlsx Drawings write_nv_pic_pr":{"type":"method","name":"write_nv_pic_pr","children":[],"call":[" write_c_nv_pic_pr "," write_c_nv_pr ","index + ","@writer tag_elements "]}," Writexlsx Drawings write_pic":{"type":"method","name":"write_pic","children":[],"call":[" write_sp_pr ","shape type= ","Shape  new "," write_blip_fill "," write_nv_pic_pr ","@writer tag_elements ","Shape  new  type= "]}," Writexlsx Drawings write_nv_sp_pr":{"type":"method","name":"write_nv_sp_pr","children":[],"call":["@writer empty_tag ","@writer tag_elements "," write_c_nv_pr ","shape type ","shape id ","attributes << ","shape tx_box "]}," Writexlsx Drawings write_nv_cxn_sp_pr":{"type":"method","name":"write_nv_cxn_sp_pr","children":[],"call":["@writer empty_tag ","shape end_index ","shape end ","shape start_index ","shape start ","@writer tag_elements "," write_c_nv_pr ","shape name ","shape id ","shape name= ","(send\n  (lvar :shape) :type) join ","shape type "]}," Writexlsx Drawings write_sp":{"type":"method","name":"write_sp","children":[],"call":[" write_tx_body ","shape text != ","shape text "," write_xdr_sp_pr "," write_nv_sp_pr ","@writer tag_elements "," write_nv_cxn_sp_pr ","shape connect != ","shape connect ","shape connect == "]}," Writexlsx Drawings write_client_data":{"type":"method","name":"write_client_data","children":[],"call":["@writer empty_tag "]}," Writexlsx Drawings write_c_chart":{"type":"method","name":"write_c_chart","children":[],"call":["@writer empty_tag ","attributes << "," r_id_attributes "]}," Writexlsx Drawings write_atag_graphic_data":{"type":"method","name":"write_atag_graphic_data","children":[],"call":[" write_c_chart ","@writer tag_elements "]}," Writexlsx Drawings write_atag_graphic":{"type":"method","name":"write_atag_graphic","children":[],"call":[" write_atag_graphic_data ","@writer tag_elements "]}," Writexlsx Drawings write_xfrm_extension":{"type":"method","name":"write_xfrm_extension","children":[],"call":["@writer empty_tag "]}," Writexlsx Drawings write_xfrm_offset":{"type":"method","name":"write_xfrm_offset","children":[],"call":["@writer empty_tag "]}," Writexlsx Drawings write_xfrm":{"type":"method","name":"write_xfrm","children":[],"call":[" write_xfrm_extension "," write_xfrm_offset ","@writer tag_elements "]}," Writexlsx Drawings write_a_graphic_frame_locks":{"type":"method","name":"write_a_graphic_frame_locks","children":[],"call":["@writer empty_tag "]}," Writexlsx Drawings write_c_nv_graphic_frame_pr":{"type":"method","name":"write_c_nv_graphic_frame_pr","children":[],"call":[" write_a_graphic_frame_locks ","@writer tag_elements ","@writer empty_tag "]}," Writexlsx Drawings write_c_nv_pr":{"type":"method","name":"write_c_nv_pr","children":[],"call":["@writer empty_tag ","attributes << "," write_a_hlink_click ","@writer tag_elements "," ptrue? "," write_decorative "," ptrue? ! "]}," Writexlsx Drawings write_nv_graphic_frame_pr":{"type":"method","name":"write_nv_graphic_frame_pr","children":[],"call":[" write_c_nv_graphic_frame_pr "," write_c_nv_pr ","index + ","@writer tag_elements "," ptrue? "]}," Writexlsx Drawings write_graphic_frame":{"type":"method","name":"write_graphic_frame","children":[],"call":[" write_atag_graphic "," write_xfrm "," write_nv_graphic_frame_pr ","@writer tag_elements "]}," Writexlsx Drawings write_ext":{"type":"method","name":"write_ext","children":[],"call":["@writer empty_tag "]}," Writexlsx Drawings write_pos":{"type":"method","name":"write_pos","children":[],"call":["@writer empty_tag "]}," Writexlsx Drawings write_row_off":{"type":"method","name":"write_row_off","children":[],"call":["@writer data_element "]}," Writexlsx Drawings write_row":{"type":"method","name":"write_row","children":[],"call":["@writer data_element "]}," Writexlsx Drawings write_col_off":{"type":"method","name":"write_col_off","children":[],"call":["@writer data_element "]}," Writexlsx Drawings write_col":{"type":"method","name":"write_col","children":[],"call":["@writer data_element "]}," Writexlsx Drawings write_to":{"type":"method","name":"write_to","children":[],"call":[" write_row_off "," write_row "," write_col_off "," write_col ","@writer tag_elements "]}," Writexlsx Drawings write_from":{"type":"method","name":"write_from","children":[],"call":[" write_row_off "," write_row "," write_col_off "," write_col ","@writer tag_elements "]}," Writexlsx Drawings write_absolute_anchor":{"type":"method","name":"write_absolute_anchor","children":[],"call":[" write_client_data "," write_graphic_frame "," write_ext "," write_pos "," ptrue? ! "," ptrue? ","@writer tag_elements "," write_xdr_ext "]}," Writexlsx Drawings write_two_cell_anchor":{"type":"method","name":"write_two_cell_anchor","children":[],"call":[" write_client_data "," write_sp "," write_pic ","type == "," write_graphic_frame "," write_to "," write_from ","@writer tag_elements ","attributes << ","shape edit_as ","anchor == ","drawing dimensions ","drawing anchor ","drawing shape ","drawing name ","drawing height ","drawing width ","drawing type ","drawing tip ","drawing url_rel_index ","drawing rel_index ","drawing description ","drawing decorative ","drawing type  == ","drawing shape  edit_as ","drawing anchor  == ","drawing drawing anchor  ","drawing drawing shape  ","drawing drawing name  ","drawing drawing height  ","drawing drawing width  ","drawing drawing type  ","drawing drawing tip  ","drawing drawing url_rel_index  ","drawing url_drawing rel_index  ","drawing drawing rel_index  ","drawing drawing description  ","drawing drawing decorative  "]}," Writexlsx Drawings write_drawing_workspace":{"type":"method","name":"write_drawing_workspace","children":[],"call":["@writer tag_elements "]}," Writexlsx Drawings add_drawing_object":{"type":"method","name":"add_drawing_object","children":[],"call":["@drawings << "]}," Writexlsx Drawings assemble_xml_file":{"type":"method","name":"assemble_xml_file","children":[],"call":[" write_absolute_anchor "," write_two_cell_anchor ","@drawings each "," write_drawing_workspace "," write_xml_declaration "]}," Writexlsx Drawings set_xml_writer":{"type":"method","name":"set_xml_writer","children":[],"call":["@writer set_xml_writer "]}," Writexlsx Drawings xml_str":{"type":"method","name":"xml_str","children":[],"call":["@writer string "]}," Writexlsx Drawings initialize":{"type":"method","name":"initialize","children":[],"call":["Package XMLWriterSimple  new "]}," Writexlsx Worksheet drawing_rel_index":{"type":"method","name":"drawing_rel_index","children":[],"call":["@drawing_rels []= ","@drawing_rels [] "," ptrue? ","target ! "]}," Writexlsx Utility escape_url":{"type":"method","name":"escape_url","children":[],"call":["url sub "," sprintf ","match ord ","$~ [] ","re =~ ","url gsub ","url =~ ","url sub  sub ","url gsub  sub ","$~ []  ord ","url sub  gsub ","url gsub  gsub ","url sub  =~ ","url gsub  =~ "]}," Writexlsx Drawings write_a_hlink_click":{"type":"method","name":"write_a_hlink_click","children":[],"call":["@writer empty_tag ","attributes << "]}," Writexlsx Worksheet get_vml_drawing_rel_index":{"type":"method","name":"get_vml_drawing_rel_index","children":[],"call":["@vml_drawing_rels []= ","@vml_drawing_rels [] "]}," Writexlsx Package Styles write_comment_font":{"type":"method","name":"write_comment_font","children":[],"call":["@writer empty_tag "," write_color ","@writer tag_elements "]}," Writexlsx Chart write_custom_label_format_only":{"type":"method","name":"write_custom_label_format_only","children":[],"call":[" write_tx_pr ","@writer empty_tag "," write_sp_pr "," has_fill_formatting ","label [] "]}," Writexlsx Chart write_custom_label_formula":{"type":"method","name":"write_custom_label_formula","children":[],"call":[" write_custom_label_format_only "," write_str_ref ","@writer tag_elements "," write_layout ","@formula_data [] ","label [] ","@formula_@formula_data []  [] ","@label [] _data [] "]}," Writexlsx Chart write_custom_label_str":{"type":"method","name":"write_custom_label_str","children":[],"call":[" write_sp_pr "," write_rich ","has_formatting ! ","@writer tag_elements "," write_layout "," has_fill_formatting ","label [] "," has_fill_formatting  ! "]}," Writexlsx Chart write_custom_labels":{"type":"method","name":"write_custom_labels","children":[],"call":[" write_custom_label_format_only "," write_show_ser_name ","parent [] "," write_show_cat_name "," write_show_val "," write_custom_label_str ","label [] "," write_custom_label_formula "," write_delete "," write_idx ","index - ","@writer tag_elements "," ptrue? ! "," ptrue? ","labels each "," write_d_lbl_pos "]}," Writexlsx Chart series_property":{"type":"method","name":"series_property","children":[],"call":["object [] ","object respond_to? ","object send "]}," Writexlsx Chart has_fill_formatting":{"type":"method","name":"has_fill_formatting","children":[],"call":[" ptrue? ","fill [] ","line [] "," series_property "," series_property  [] "]}," Writexlsx Worksheet write_protected_range":{"type":"method","name":"write_protected_range","children":[],"call":["@writer empty_tag ","attributes << "]}," Writexlsx Worksheet write_protected_ranges":{"type":"method","name":"write_protected_ranges","children":[],"call":[" write_protected_range ","@protected_ranges each ","@writer tag_elements ","@num_protected_ranges == "]}," Writexlsx Worksheet unprotect_range":{"type":"method","name":"unprotect_range","children":[],"call":["@protected_ranges << "," encode_password ","range sub! ","range gsub! "," raise ","range nil? ","range sub ","range gsub ","@protected_range sub s << ","@protected_range gsub s << ","range sub  sub! ","range gsub  sub! ","range sub  gsub! ","range gsub  gsub! ","range sub  nil? ","range gsub  nil? ","range sub  sub ","range gsub  sub ","range sub  gsub ","range gsub  gsub "]}," Writexlsx Workbook write_file_sharing":{"type":"method","name":"write_file_sharing","children":[],"call":["@writer empty_tag ","attributes << "," ptrue? ! "," ptrue? "]}," Writexlsx Workbook read_only_recommended":{"type":"method","name":"read_only_recommended","children":[],"call":[]}," Writexlsx Package Styles pattern_only_case?":{"type":"method","name":"pattern_only_case?","children":[],"call":[" ptrue? ","format pattern "," ptrue? ! "," bg_and_fg_color "]}," Writexlsx Drawings write_a16_creation_id":{"type":"method","name":"write_a16_creation_id","children":[],"call":["@writer empty_tag "]}," Writexlsx Drawings write_adec_decorative":{"type":"method","name":"write_adec_decorative","children":[],"call":["@writer empty_tag "]}," Writexlsx Drawings write_a_uri_ext":{"type":"method","name":"write_a_uri_ext","children":[],"call":["@writer start_tag "]}," Writexlsx Drawings write_decorative":{"type":"method","name":"write_decorative","children":[],"call":["@writer end_tag "," write_adec_decorative "," write_a_uri_ext "," write_a16_creation_id ","@writer tag_elements "]}," Writexlsx Drawings write_xdr_ext":{"type":"method","name":"write_xdr_ext","children":[],"call":["@writer empty_tag "]}," Writexlsx Worksheet write_ignored_error":{"type":"method","name":"write_ignored_error","children":[],"call":["@writer empty_tag "]}," Writexlsx Worksheet write_ignored_errors":{"type":"method","name":"write_ignored_errors","children":[],"call":[" write_ignored_error ","ignore [] ","(pair\n  (sym :number_stored_as_text)\n  (str \"numberStoredAsText\")) each ","@writer tag_elements "]}," Writexlsx Worksheet ignore_errors":{"type":"method","name":"ignore_errors","children":[],"call":[" raise ","ignores key - ","ignores key ","(send\n  (send\n    (lvar :ignores) :keys) :-\n  (lvar :valid_parameter_keys)) empty? ","ignores keys - ","ignores keys "]}," Writexlsx Worksheet write_picture":{"type":"method","name":"write_picture","children":[],"call":["@writer empty_tag "," ptrue? "]}," Writexlsx Worksheet prepare_background":{"type":"method","name":"prepare_background","children":[],"call":["@external_background_links << "]}," Writexlsx Worksheet set_background":{"type":"method","name":"set_background","children":[],"call":[" raise ","File  exist? "]}," Writexlsx Worksheet pixels_to_height":{"type":"method","name":"pixels_to_height","children":[],"call":["height to_i ","(send\n  (lvar :height) :-\n  (send\n    (lvar :height) :to_i)) abs < ","(send\n  (lvar :height) :-\n  (send\n    (lvar :height) :to_i)) abs ","height - ","0.75 * ","height to_i  to_i ","0.75 *  to_i ","(send\n  (lvar :height to_i ) :-\n  (send\n    (lvar :height to_i ) :to_i)) abs < ","(send\n  (lvar :0.75 * ) :-\n  (send\n    (lvar :0.75 * ) :to_i)) abs < ","(send\n  (lvar :height to_i ) :-\n  (send\n    (lvar :height to_i ) :to_i)) abs ","(send\n  (lvar :0.75 * ) :-\n  (send\n    (lvar :0.75 * ) :to_i)) abs ","height to_i  - ","0.75 *  - "]}," Writexlsx Worksheet pixels_to_width":{"type":"method","name":"pixels_to_width","children":[],"call":["(send\n  (lvar :pixels) :-\n  (lvar :padding)) / ","pixels - ","pixels / ","max_digit_width + ","pixels <= ","max_digit_(send\n  (lvar :pixels) :-\n  (lvar :padding)) /  + ","max_digit_pixels /  + "]}," Writexlsx Worksheet has_dynamic_arrays?":{"type":"method","name":"has_dynamic_arrays?","children":[],"call":[]}," Writexlsx Worksheet set_row_pixels":{"type":"method","name":"set_row_pixels","children":[],"call":[" set_row ","data []= "," pixels_to_height "," ptrue? ","data [] "," pixels_to_data []  "]}," Writexlsx Worksheet write_dynamic_array_formula":{"type":"method","name":"write_dynamic_array_formula","children":[],"call":[" write_array_formula_base "]}," Writexlsx Worksheet write_array_formula_base":{"type":"method","name":"write_array_formula_base","children":[],"call":[" write_number ","col == ","row == ","(irange\n  (lvar :col1)\n  (lvar :col2)) each ","(irange\n  (lvar :row1)\n  (lvar :row2)) each "," store_data_to_table "," raise ","DynamicFormulaArrayCellData  new ","type == ","FormulaArrayCellData  new ","formula sub sub ","formula sub "," xl_rowcol_to_cell ","col1 == ","row1 == "," store_row_col_max_min_values "," check_dimensions ","col1 > ","row1 > ","(lvar :row1) include? "," row_col_notation "," prepare_formula ","(lvar :range) + ","args [] "," Regexp  last_match ","args first to_s =~ ","args first to_s ","args first ","params [] ","params first ","(i xl_rowcol_to_cell \n  (lvar :col1)\n  (lvar :col2)) each ","(i xl_rowcol_to_cell \n  (lvar :row1)\n  (lvar :row2)) each ","formula sub sub  sub sub "," prepare_formula  sub sub ","formula sub sub  sub "," prepare_formula  sub "," prepare_formula sub sub  "," prepare_ prepare_formula  ","(lvar : xl_rowcol_to_cell ) + ","(lvar :range) +  [] ","(lvar :range) +  first "]}," Writexlsx Worksheet set_column_pixels":{"type":"method","name":"set_column_pixels","children":[],"call":[" set_column "," pixels_to_width "," ptrue? ","data [] ","data size < ","data size ","data delete_at ","data shift "," substitute_cellref ","cell =~ "," pixels_to_ pixels_to_width  "," data [] _to_width "," substitute_cellref  [] "," substitute_cellref  size < "," substitute_cellref  size "," substitute_cellref  delete_at "," substitute_cellref  shift "," substitute_data [] ref ","data []  =~ "]}," Writexlsx Worksheet DynamicFormulaArrayCellData write_cell":{"type":"method","name":"write_cell","children":[],"call":["@worksheet write_cell_value "," result ","@worksheet write_cell_array_formula "," range "," token ","@worksheet writer tag_elements ","@worksheet writer ","attributes << "," cell_attributes ","worksheet write_cell_value ","worksheet write_cell_array_formula ","worksheet writer tag_elements ","worksheet writer "," cell_attributes  << "," cell_ cell_attributes  "]}," Writexlsx Worksheet DynamicFormulaArrayCellData data":{"type":"method","name":"data","children":[],"call":[]}," Writexlsx Worksheet DynamicFormulaArrayCellData initialize":{"type":"method","name":"initialize","children":[],"call":[]}," Writexlsx Workbook process_gif":{"type":"method","name":"process_gif","children":[],"call":[" raise ","height nil? ","data [] unpack [] ","data [] unpack ","data [] ","data [] unpack1 ","data [] unpack []  nil? ","data [] unpack1  nil? "]}," Writexlsx Workbook prepare_metadata":{"type":"method","name":"prepare_metadata","children":[],"call":["sheet has_dynamic_arrays? ","@worksheets each "]}," Writexlsx Workbook has_metadata?":{"type":"method","name":"has_metadata?","children":[],"call":[]}," Writexlsx Package Packager write_metadata_file":{"type":"method","name":"write_metadata_file","children":[],"call":["metadata assemble_xml_file ","metadata set_xml_writer ","FileUtils  mkdir_p ","@workbook has_metadata? ","Package Metadata  new ","Package Metadata  new  assemble_xml_file ","Package Metadata  new  set_xml_writer ","@workbook has_Package Metadata  new ? "]}," Writexlsx Package Metadata write_rc":{"type":"method","name":"write_rc","children":[],"call":["@writer empty_tag "]}," Writexlsx Package Metadata write_cell_metadata":{"type":"method","name":"write_cell_metadata","children":[],"call":[" write_rc ","@writer tag_elements "]}," Writexlsx Package Metadata write_xda_dynamic_array_properties":{"type":"method","name":"write_xda_dynamic_array_properties","children":[],"call":["@writer empty_tag "]}," Writexlsx Package Metadata write_ext":{"type":"method","name":"write_ext","children":[],"call":[" write_xda_dynamic_array_properties ","@writer tag_elements "]}," Writexlsx Package Metadata write_future_metadata":{"type":"method","name":"write_future_metadata","children":[],"call":[" write_ext ","@writer tag_elements "]}," Writexlsx Package Metadata write_metadata_type":{"type":"method","name":"write_metadata_type","children":[],"call":["@writer empty_tag "]}," Writexlsx Package Metadata write_metadata_types":{"type":"method","name":"write_metadata_types","children":[],"call":[" write_metadata_type ","@writer tag_elements "]}," Writexlsx Package Metadata write_metadata":{"type":"method","name":"write_metadata","children":[],"call":["@writer start_tag "]}," Writexlsx Package Metadata assemble_xml_file":{"type":"method","name":"assemble_xml_file","children":[],"call":["@writer end_tag "," write_cell_metadata "," write_future_metadata "," write_metadata_types "," write_metadata "," write_xml_declaration "]}," Writexlsx Package Metadata set_xml_writer":{"type":"method","name":"set_xml_writer","children":[],"call":["@writer set_xml_writer "]}," Writexlsx Package Metadata initialize":{"type":"method","name":"initialize","children":[],"call":["Package XMLWriterSimple  new "]}," Writexlsx Package ContentTypes add_metadata":{"type":"method","name":"add_metadata","children":[],"call":[" add_override "]}," Writexlsx Worksheet keep_leading_zeros":{"type":"method","name":"keep_leading_zeros","children":[],"call":["flag ! ! ","flag ! "]}," Writexlsx Worksheet prepare_formula":{"type":"method","name":"prepare_formula","children":[],"call":[" expand_formula ","formula =~ ","given_formula sub sub ","given_formula sub "," ptrue? "," expand_ expand_formula  "," expand_given_formula sub sub  "," expand_formula  =~ ","given_formula sub sub  =~ ","given_ expand_formula  sub sub ","given_given_formula sub sub  sub sub ","given_ expand_formula  sub ","given_given_formula sub sub  sub "]}," Writexlsx Worksheet expand_formula":{"type":"method","name":"expand_formula","children":[],"call":["formula gsub "," Regexp  last_match ","formula =~ "]}," Writexlsx Worksheet set_top_left_cell":{"type":"method","name":"set_top_left_cell","children":[],"call":[" xl_rowcol_to_cell "," row_col_notation "]}," Writexlsx Format force_text_format?":{"type":"method","name":"force_text_format?","children":[],"call":["@num_format == "]}," Writexlsx Worksheet compare_col_info":{"type":"method","name":"compare_col_info","children":[],"call":["col_options collapsed != ","previous_options collapsed ","col_options collapsed ","col_options level != ","previous_options level ","col_options level ","col_options hidden != ","previous_options hidden ","col_options hidden ","col_options format != ","previous_options format ","col_options format ","col_options format nil? ! != ","previous_options format nil? ! ","previous_options format nil? ","col_options format nil? ! ","col_options format nil? ","col_options width != ","previous_options width ","col_options width ","col_options width nil? ! != ","previous_options width nil? ! ","previous_options width nil? ","col_options width nil? ! ","col_options width nil? "]}," Writexlsx Worksheet autofit":{"type":"method","name":"autofit","children":[],"call":["@col_info []= ","Struct  new new ","Struct  new ","@col_info [] autofit= ","@col_info [] ","@col_info [] width= ","width > "," pixels_to_width ","pixel_width + ","col_width each ","col_width []= ","length > ","col_width [] ","@filter_cells [] "," xl_string_pixel_width ","cell_data data "," ptrue? ","cell_data token ","7 * ","cell_data token to_s length ","cell_data token to_s ","(send\n  (send\n    (lvar :string) :split\n    (str \"\\n\")) :collect) max ","string split collect ","string split ","string =~ ","cell_data raw_string ","@cell_data_table [] [] ","@cell_data_table [] ","(irange\n  (ivar :@dim_colmin)\n  (ivar :@dim_colmax)) each ","(irange\n  (ivar :@dim_rowmin)\n  (ivar :@dim_rowmax)) each ","COLINFO  new ","@col_info []  pixels_to_width = "," pixels_to_width  > "," pixels_to_ pixels_to_width  ","pixel_ pixels_to_width  + ","col_ pixels_to_width  each ","col_ pixels_to_width  []= "," xl_string_pixel_width  > ","7 *  > ","col_ pixels_to_width  [] "," xl_string_pixel_ pixels_to_width  "," xl_cell_data raw_string _pixel_width ","@cell_data_table [] []  data ","@cell_data_table [] []  token ","cell_data token to_s  xl_string_pixel_width  ","cell_data token to_s 7 *  ","@cell_data_table [] []  token to_s length ","@cell_data_table [] []  token to_s ","(send\n  (send\n    (lvar :string) :split\n    (str \"\\n\")) :collect) (send\n  (send\n    (lvar :string) :split\n    (str \"\\n\")) :collect) max  ","(send\n  (send\n    (lvar :cell_data raw_string ) :split\n    (str \"\\n\")) :collect) max ","cell_data raw_string  split collect ","cell_data raw_string  split ","cell_data raw_string  =~ ","cell_data raw_cell_data raw_string  ","@cell_data_table [] []  raw_string ","@@cell_data_table [] [] _table [] [] ","@@cell_data_table [] [] _table [] ","(irange\n  (ivar :@dim_colmin)\n  (ivar :@dim_col(send\n  (send\n    (lvar :string) :split\n    (str \"\\n\")) :collect) max )) each ","(irange\n  (ivar :@dim_rowmin)\n  (ivar :@dim_row(send\n  (send\n    (lvar :string) :split\n    (str \"\\n\")) :collect) max )) each "]}," Writexlsx Utility xl_string_pixel_width":{"type":"method","name":"xl_string_pixel_width","children":[],"call":["CHAR_WIDTHS  [] ","string to_s split each ","string to_s split ","string to_s "]}," Writexlsx Package Table store_filter_cell_positions":{"type":"method","name":"store_filter_cell_positions","children":[],"call":["@worksheet filter_cells []= ","@worksheet filter_cells ","(irange\n  (ivar :@col1)\n  (ivar :@col2)) each "," ptrue? ","@param [] "]}," Writexlsx Chart write_ext_lst":{"type":"method","name":"write_ext_lst","children":[],"call":[" write_a_solid_fill ","@writer tag_elements "]}}