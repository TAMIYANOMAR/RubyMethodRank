{" ClimateControl Modifier OverlappingKeysWithChangedValues overlapping_keys":{"type":"method","name":"overlapping_keys","children":[],"call":["@hash_2 keys & ","@hash_1 keys ","@hash_2 keys "]}," ClimateControl Modifier OverlappingKeysWithChangedValues keys":{"type":"method","name":"keys","children":[],"call":["@hash_1 [] != ","@hash_2 [] ","@hash_1 [] "," overlapping_keys select "," overlapping_keys "]}," ClimateControl Modifier OverlappingKeysWithChangedValues initialize":{"type":"method","name":"initialize","children":[],"call":[]}," ClimateControl Modifier clone_environment":{"type":"method","name":"clone_environment","children":[],"call":["ENV  to_hash ","@env to_hash "]}," ClimateControl Modifier revert_changed_keys":{"type":"method","name":"revert_changed_keys","children":[],"call":["ENV  []= ","@original_env [] ","(send\n  (send\n    (ivar :@original_env) :keys) :-\n  (send nil :keys_changed_by_block)) each ","@original_env keys - "," keys_changed_by_block ","@original_env keys ","@env []= "]}," ClimateControl Modifier delete_keys_that_do_not_belong":{"type":"method","name":"delete_keys_that_do_not_belong","children":[],"call":["ENV  delete ","(send\n  (send nil :keys_to_remove) :-\n  (send nil :keys_changed_by_block)) each "," keys_to_remove - "," keys_changed_by_block "," keys_to_remove ","@env delete "]}," ClimateControl Modifier cache_environment_after_block":{"type":"method","name":"cache_environment_after_block","children":[],"call":[" clone_environment "]}," ClimateControl Modifier keys_changed_by_block":{"type":"method","name":"keys_changed_by_block","children":[],"call":["OverlappingKeysWithChangedValues  new keys ","OverlappingKeysWithChangedValues  new "]}," ClimateControl Modifier keys_to_remove":{"type":"method","name":"keys_to_remove","children":[],"call":["@environment_overrides keys "]}," ClimateControl Modifier copy_overrides_to_environment":{"type":"method","name":"copy_overrides_to_environment","children":[],"call":["ENV  []= ","@environment_overrides each "," raise ","e message ","@env []= "]}," ClimateControl Modifier run_block":{"type":"method","name":"run_block","children":[],"call":["@block call "]}," ClimateControl Modifier prepare_environment_for_block":{"type":"method","name":"prepare_environment_for_block","children":[],"call":[" clone_environment "," copy_overrides_to_environment "]}," ClimateControl Modifier process":{"type":"method","name":"process","children":[],"call":[" revert_changed_keys "," delete_keys_that_do_not_belong "," cache_environment_after_block "," run_block "," prepare_environment_for_block ","@env synchronize "]}," ClimateControl Modifier initialize":{"type":"method","name":"initialize","children":[],"call":[" process ","environment_overrides dup stringify_keys! ","environment_overrides dup "," stringify_keys "]}," ClimateControl modify":{"type":"method","name":"modify","children":[],"call":["ENV  []= ","previous [] ","middle [] == ","after [] ","middle [] ","previous [] != ","(send\n  (send\n    (send\n      (lvar :previous) :keys) :|\n    (send\n      (lvar :middle) :keys)) :|\n  (send\n    (lvar :after) :keys)) each ","previous keys | | ","after keys ","previous keys | ","middle keys ","previous keys ","block call ","ENV  to_hash "," copy ","SEMAPHORE  synchronize ","environment_overrides transform_keys ","ENV  to_hash  [] ","ENV  to_hash  [] == ","ENV  to_hash  [] != ","(send\n  (send\n    (send\n      (lvar :previous) :keys) :|\n    (send\n      (lvar :ENV  to_hash ) :keys)) :|\n  (send\n    (lvar :after) :keys)) each ","(send\n  (send\n    (send\n      (lvar :ENV  to_hash ) :keys) :|\n    (send\n      (lvar :middle) :keys)) :|\n  (send\n    (lvar :after) :keys)) each ","ENV  to_hash  keys | | ","ENV  to_hash  keys | ","ENV  to_hash  keys ","environment_overrides transform_keys  transform_keys "]}," ClimateControl env":{"type":"method","name":"env","children":[],"call":[]}," ClimateControl Environment env":{"type":"method","name":"env","children":[],"call":[]}," ClimateControl Environment initialize":{"type":"method","name":"initialize","children":[],"call":["Mutex  new "]}," ClimateControl Modifier stringify_keys":{"type":"method","name":"stringify_keys","children":[],"call":["hash []= ","key to_s ","env each_with_object "]}," ClimateControl Environment synchronize":{"type":"method","name":"synchronize","children":[],"call":[" block_given? ","Thread  current ","@semaphore synchronize ","@owner == ","Thread  current  == "]}," ClimateControl copy":{"type":"method","name":"copy","children":[],"call":[" raise ","e message ","ENV  []= ","overrides each "]}," ClimateControl unsafe_modify":{"type":"method","name":"unsafe_modify","children":[],"call":["ENV  []= ","previous [] ","middle [] == ","after [] ","middle [] ","previous [] != ","(send\n  (send\n    (send\n      (lvar :previous) :keys) :|\n    (send\n      (lvar :middle) :keys)) :|\n  (send\n    (lvar :after) :keys)) each ","previous keys | | ","after keys ","previous keys | ","middle keys ","previous keys ","block call ","ENV  to_hash "," copy ","environment_overrides transform_keys ","ENV  to_hash  [] ","ENV  to_hash  [] == ","ENV  to_hash  [] != ","(send\n  (send\n    (send\n      (lvar :previous) :keys) :|\n    (send\n      (lvar :ENV  to_hash ) :keys)) :|\n  (send\n    (lvar :after) :keys)) each ","(send\n  (send\n    (send\n      (lvar :ENV  to_hash ) :keys) :|\n    (send\n      (lvar :middle) :keys)) :|\n  (send\n    (lvar :after) :keys)) each ","ENV  to_hash  keys | | ","ENV  to_hash  keys | ","ENV  to_hash  keys ","environment_overrides transform_keys  transform_keys "]}}