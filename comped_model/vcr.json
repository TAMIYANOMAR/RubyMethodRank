{" VCR cassettes":{"type":"method","name":"cassettes","children":[],"call":[" context_value ","LinkedCassette  list "," Array ","context [] "," cassettes "]}," VCR cucumber_tags":{"type":"method","name":"cucumber_tags","children":[],"call":["VCR CucumberTags  new "," eval ","block binding "]}," VCR config":{"type":"method","name":"config","children":[],"call":[" http_stubbing_adapter http_connections_allowed= "," http_stubbing_adapter "," http_stubbing_adapter check_version! "," http_stubbing_adapter ignore_localhost= ","VCR Config  ignore_localhost? "," http_stubbing_adapter ignored_hosts= ","VCR Config  ignored_hosts "," http_stubbing_adapter set_http_connections_allowed_to_default "," configure "," warn "]}," VCR with_cassette":{"type":"method","name":"with_cassette","children":[],"call":[" destroy_cassette! "," create_cassette! "," use_cassette "," warn "]}," VCR destroy_cassette!":{"type":"method","name":"destroy_cassette!","children":[],"call":["cassette destroy! "," cassettes pop "," cassettes "," eject_cassette "," warn "," cassettes pop  destroy! ","  cassettes pop s pop ","  cassettes pop s "," eject_ cassettes pop  "]}," VCR create_cassette!":{"type":"method","name":"create_cassette!","children":[],"call":[" cassettes push "," cassettes ","Cassette  new "," insert_cassette "," warn "," Cassette  new s push "," Cassette  new s "," insert_Cassette  new  "]}," VCR current_cassette":{"type":"method","name":"current_cassette","children":[],"call":[" cassettes last "," cassettes "]}," Net HTTP __store_response_with_vcr__":{"type":"method","name":"__store_response_with_vcr__","children":[],"call":["cassette store_recorded_response! ","VCR RecordedResponse  new ","FakeWeb  registered_uri? ","request method downcase to_sym ","request method downcase ","request method "," port "," address ","FakeWeb Utility  encode_unsafe_chars_in_userinfo + ","FakeWeb Utility  encode_unsafe_chars_in_userinfo ","FakeWeb Utility  decode_userinfo_from_header ","request [] ","request [] =~ ","URI  parse request_uri ","URI  parse ","request path ","request path =~ "," use_ssl? ","VCR  current_cassette "," __vcr_uri__ ","cassette record_http_interaction ","VCR HTTPInteraction  from_net_http_objects ","VCR  http_stubbing_adapter request_stubbed? ","VCR  http_stubbing_adapter ","VCR  http_stubbing_adapter request_uri ","response extend ","VCR  current_cassette  store_recorded_response! ","FakeWeb  registered_ __vcr_uri__ ? ","FakeWeb  registered_VCR  http_stubbing_adapter request_uri ? ","request request method downcase to_sym  downcase to_sym ","request request method downcase to_sym  downcase ","request request method downcase to_sym  ","FakeWeb Utility  encode_unsafe_chars_in_FakeWeb Utility  encode_unsafe_chars_in_userinfo +  + ","FakeWeb Utility  encode_unsafe_chars_in_FakeWeb Utility  decode_userinfo_from_header  + ","FakeWeb Utility  encode_unsafe_chars_in_FakeWeb Utility  encode_unsafe_chars_in_userinfo +  ","FakeWeb Utility  encode_unsafe_chars_in_FakeWeb Utility  decode_userinfo_from_header  ","FakeWeb Utility  decode_FakeWeb Utility  encode_unsafe_chars_in_userinfo + _from_header ","FakeWeb Utility  decode_FakeWeb Utility  decode_userinfo_from_header _from_header ","URI  parse request_ __vcr_uri__  ","URI  parse request_VCR  http_stubbing_adapter request_uri  ","request URI  parse request_uri  ","request request path  ","request URI  parse request_uri  =~ ","request request path  =~ ","VCR  current_VCR  current_cassette  "," __vcr_ __vcr_uri__ __ "," __vcr_VCR  http_stubbing_adapter request_uri __ ","VCR  current_cassette  record_http_interaction ","VCR  http_stubbing_adapter request_ __vcr_uri__  ","VCR  http_stubbing_adapter request_VCR  http_stubbing_adapter request_uri  "]}," Net HTTP request_with_vcr":{"type":"method","name":"request_with_vcr","children":[],"call":[" __store_response_with_vcr__ "," request_without_vcr ","@__request_with_vcr_call_count == ","(or\n  (ivar :@__request_with_vcr_call_count)\n  (int 0)) + ","FakeWeb  with_allow_net_connect_set_to ","cassette allow_real_http_requests_to? ","VCR  current_cassette ","URI  parse "," __vcr_uri__ "," block_given? "," started? ","VCR  http_stubbing_adapter with_http_connections_allowed_set_to ","VCR  http_stubbing_adapter ","VCR  http_stubbing_adapter request_uri ","VCR  record_http_interaction ","response extend ","VCR HTTPInteraction  from_net_http_objects ","VCR  http_stubbing_adapter request_stubbed? ! ","VCR  http_stubbing_adapter request_stubbed? ","request method downcase to_sym ","request method downcase ","request method ","VCR  http_stubbing_adapter ignore_localhost? ","VCR LOCALHOST_ALIASES  include? ","uri host ","VCR  http_stubbing_adapter should_unwind_response? ","VCR HTTPInteraction  new ","VCR Response  from_net_http_response ","cass match_requests_on ","VCR Request  from_net_http_request ","VCR HttpStubbingAdapters FakeWeb  enabled? ","VCR LibraryHooks FakeWeb RequestHandler  new handle ","VCR LibraryHooks FakeWeb RequestHandler  new ","VCR  turned_on? ","handler handle "," remove_instance_variable ","request instance_eval "," __store_ request_without_vcr _with_vcr__ ","(or\n  (ivar :@__request_with_vcr_call_count)\n  (int 0)) +  == ","(or\n  (ivar :(or\n  (ivar :@__request_with_vcr_call_count)\n  (int 0)) + )\n  (int 0)) + ","VCR  current_cassette  allow_real_http_requests_to? ","VCR  current_cassette ette allow_real_http_requests_to? ","VCR  current_VCR  current_cassette  ","VCR  current_VCR  current_cassette ette "," __vcr_URI  parse __ ","VCR  http_stubbing_adapter request_URI  parse  ","VCR  record_VCR HTTPInteraction  from_net_http_objects  "," request_without_vcr  extend ","URI  parse  host ","VCR  http_stubbing_adapter should_unwind_ request_without_vcr ? ","VCR Response  from_net_http_ request_without_vcr  ","VCR  current_cassette  match_requests_on "]}," FakeWeb Registry remove":{"type":"method","name":"remove","children":[],"call":["method_hash empty? ","method_hash delete "," normalize_uri == "," normalize_uri "," uri_map delete_if "," uri_map "]}," FakeWeb remove_from_registry":{"type":"method","name":"remove_from_registry","children":[],"call":[]}," VCR CucumberTags tags":{"type":"method","name":"tags","children":[],"call":[" class add_tag "," class ","VCR  destroy_cassette! "," After ","VCR  create_cassette! "," Before ","@main_object instance_eval ","tag_name gsub ","tag_name =~ ","tag_names each ","tag_names pop ","tag_names last is_a? ","tag_names last ","@tags dup ","VCR  eject_cassette ","VCR  insert_cassette ","VCR  use_cassette ","@main_object Around ","@main_object After ","@main_object Before ","scenario name ","scenario feature name ","scenario feature ","options delete ","options dup ","scenario feature name split first ","scenario feature name split ","original_options dup ","name << ","scenario scenario_outline name ","scenario scenario_outline ","scenario respond_to? ","feature name split first ","feature name split ","feature name ","scenario scenario_outline feature ","scenario name split first ","scenario name split ","scenario failed? ","(send\n  (send\n    (send\n      (send\n        (lvar :scenario) :feature) :name) :split\n    (str \"\\n\")) :first) join ","(send\n  (send\n    (send\n      (send\n        (send\n          (lvar :scenario) :scenario_outline) :feature) :name) :split\n    (str \"\\n\")) :first) join ","scenario scenario_outline feature name split first ","scenario scenario_outline feature name split ","scenario scenario_outline feature name ","ScenarioNameBuilder  new cassette_name ","ScenarioNameBuilder  new ","scenario outline? ","(send\n  (send\n    (send\n      (send\n        (send\n          (send\n            (lvar :scenario) :location) :file) :split\n        (str \"/\")) :last) :split\n    (str \".\")) :first) join ","scenario location lines max ","scenario location lines ","scenario location ","scenario location file split last split first ","scenario location file split last split ","scenario location file split last ","scenario location file split ","scenario location file ","scenario location lines min == ","scenario location lines min ","tag_feature name split first  gsub ","tag_feature name split first  =~ ","tag_feature name split first s each ","tag_feature name split first s pop ","tag_feature name split first s last is_a? ","tag_feature name split first s last ","scenario feature name split first  ","scenario feature feature name split first  ","scenario scenario feature  name ","scenario scenario scenario_outline feature  name ","scenario scenario feature  ","scenario scenario scenario_outline feature  ","tag_names pop  delete ","options dup  delete ","original_options dup  delete ","tag_names pop  dup ","options dup  dup ","original_options dup  dup ","scenario feature feature name split first  split first ","scenario scenario feature  name split first ","scenario scenario scenario_outline feature  name split first ","scenario feature feature name split first  split ","scenario scenario feature  name split ","scenario scenario scenario_outline feature  name split ","original_tag_names pop  dup ","original_original_options dup  dup ","feature name split first  << ","scenario scenario_outline feature name split first  ","feature feature name split first  split first ","scenario feature  name split first ","scenario scenario_outline feature  name split first ","feature feature name split first  split ","scenario feature  name split ","scenario scenario_outline feature  name split ","feature feature name split first  ","scenario feature  name ","scenario scenario_outline feature  name ","scenario scenario_outline scenario feature  ","scenario scenario_outline scenario scenario_outline feature  ","scenario feature name split first  split first ","scenario feature name split first  split ","(send\n  (send\n    (send\n      (send\n        (lvar :scenario) :feature) :feature name split first ) :split\n    (str \"\\n\")) :first) join ","(send\n  (send\n    (send\n      (send\n        (lvar :scenario) :scenario feature ) :name) :split\n    (str \"\\n\")) :first) join ","(send\n  (send\n    (send\n      (send\n        (lvar :scenario) :scenario scenario_outline feature ) :name) :split\n    (str \"\\n\")) :first) join ","(send\n  (send\n    (send\n      (send\n        (send\n          (lvar :scenario) :scenario_outline) :feature) :feature name split first ) :split\n    (str \"\\n\")) :first) join ","(send\n  (send\n    (send\n      (send\n        (send\n          (lvar :scenario) :scenario_outline) :scenario feature ) :name) :split\n    (str \"\\n\")) :first) join ","(send\n  (send\n    (send\n      (send\n        (send\n          (lvar :scenario) :scenario_outline) :scenario scenario_outline feature ) :name) :split\n    (str \"\\n\")) :first) join ","scenario scenario_outline feature feature name split first  split first ","scenario scenario_outline scenario feature  name split first ","scenario scenario_outline scenario scenario_outline feature  name split first ","scenario scenario_outline feature feature name split first  split ","scenario scenario_outline scenario feature  name split ","scenario scenario_outline scenario scenario_outline feature  name split ","scenario scenario_outline feature feature name split first  ","scenario scenario_outline scenario feature  name ","scenario scenario_outline scenario scenario_outline feature  name ","ScenarioNameBuilder  new cassette_feature name split first  "]}," VCR CucumberTags initialize":{"type":"method","name":"initialize","children":[],"call":[]}," VCR CucumberTags add_tag":{"type":"method","name":"add_tag","children":[],"call":["@tags << "]}," VCR Config default_cassette_record_mode=":{"type":"method","name":"default_cassette_record_mode=","children":[],"call":["VCR Cassette  raise_error_unless_valid_record_mode "," default_cassette_options merge! "," default_cassette_options "," warn ","value to_s "]}," VCR Config cache_dir=":{"type":"method","name":"cache_dir=","children":[],"call":["FileUtils  mkdir_p "]}," VCR Cassette deregister_original_recorded_responses":{"type":"method","name":"deregister_original_recorded_responses","children":[],"call":["FakeWeb  remove_from_registry ","rr uri ","rr method ","@original_recorded_responses each "]}," VCR Cassette write_recorded_responses_to_disk":{"type":"method","name":"write_recorded_responses_to_disk","children":[],"call":["f write "," recorded_responses to_yaml "," recorded_responses ","File  open "," cache_file ","FileUtils  mkdir_p ","File  exist? ","File  dirname "," new_recorded_responses size > "," new_recorded_responses size "," new_recorded_responses ","VCR Config  cache_dir "," file ","VCR Config  cassette_library_dir "]}," VCR Cassette load_recorded_responses":{"type":"method","name":"load_recorded_responses","children":[],"call":["FakeWeb  register_uri ","rr response ","rr uri ","rr method "," recorded_responses each "," recorded_responses "," recorded_responses replace ","YAML  load ","f read ","File  open "," cache_file ","File  exist? "," record_mode == "," record_mode "," register_responses_with_fakeweb "," file "]}," VCR Cassette restore_fakeweb_allow_net_conect":{"type":"method","name":"restore_fakeweb_allow_net_conect","children":[],"call":["FakeWeb  allow_net_connect= "]}," VCR Cassette set_fakeweb_allow_net_connect":{"type":"method","name":"set_fakeweb_allow_net_connect","children":[],"call":["FakeWeb  allow_net_connect= "," should_allow_net_connect? ","FakeWeb  allow_net_connect? "]}," VCR Cassette should_allow_net_connect?":{"type":"method","name":"should_allow_net_connect?","children":[],"call":["(sym :unregistered) include? "," record_mode ","(sym :new_episodes) include? "]}," VCR Cassette new_recorded_responses":{"type":"method","name":"new_recorded_responses","children":[],"call":[" recorded_responses - "," recorded_responses "]}," VCR Cassette raise_error_unless_valid_record_mode":{"type":"method","name":"raise_error_unless_valid_record_mode","children":[],"call":[" raise ","ArgumentError  new ","VALID_RECORD_MODES  inspect ","VALID_RECORD_MODES  include? "," record_mode "]}," VCR Cassette cache_file":{"type":"method","name":"cache_file","children":[],"call":["File  join "," name to_s gsub "," name to_s "," name ","VCR Config  cache_dir "," file "," warn "]}," VCR Cassette store_recorded_response!":{"type":"method","name":"store_recorded_response!","children":[],"call":[" recorded_responses << "," recorded_responses "]}," VCR Cassette recorded_responses":{"type":"method","name":"recorded_responses","children":[],"call":[]}," VCR Cassette destroy!":{"type":"method","name":"destroy!","children":[],"call":[" restore_fakeweb_allow_net_conect "," deregister_original_recorded_responses "," write_recorded_responses_to_disk "," eject "," warn "]}," VCR Cassette initialize":{"type":"method","name":"initialize","children":[],"call":[" load_recorded_responses "," set_fakeweb_allow_net_connect "," class raise_error_unless_valid_record_mode "," record_mode "," class ","VCR Config  default_cassette_record_mode ","options [] "," allow_real_http_lambda_for ","VCR Config  default_cassette_options [] ","VCR Config  default_cassette_options "," deprecate_unregistered_record_mode "," load_recorded_interactions "," set_http_connections_allowed "," raise_error_unless_valid_record_mode "," deprecate_old_cassette_options ","VCR Config  default_cassette_options merge "," raise ","ArgumentError  new ","invalid_options inspect ","invalid_options size > ","invalid_options size ","options keys - ","options keys "," should_re_record? "," log ","options inspect ","VCR  http_interactions ","VCR  cassette_serializers [] ","VCR  cassette_serializers ","@tags << "," Array ","options fetch ","VCR  configuration default_cassette_options merge ","VCR  configuration default_cassette_options ","VCR  configuration ","HTTPInteractionList NullList  new ","@options inspect "," extract_options "," assert_valid_options! ","Mutex  new ","VCR Config  default_cassette_options merge  [] ","VCR  configuration default_cassette_options merge  [] ","VCR Config  default_cassette_VCR Config  default_cassette_options merge  [] ","VCR Config  default_cassette_VCR  configuration default_cassette_options merge  [] ","VCR Config  default_cassette_VCR Config  default_cassette_options merge  ","VCR Config  default_cassette_VCR  configuration default_cassette_options merge  "," deprecate_old_cassette_VCR Config  default_cassette_options merge  "," deprecate_old_cassette_VCR  configuration default_cassette_options merge  ","VCR Config  default_cassette_VCR Config  default_cassette_options merge  merge ","VCR Config  default_cassette_VCR  configuration default_cassette_options merge  merge ","invalid_VCR Config  default_cassette_options merge  inspect ","invalid_VCR  configuration default_cassette_options merge  inspect ","options keys -  inspect ","invalid_VCR Config  default_cassette_options merge  size > ","invalid_VCR  configuration default_cassette_options merge  size > ","options keys -  size > ","invalid_VCR Config  default_cassette_options merge  size ","invalid_VCR  configuration default_cassette_options merge  size ","options keys -  size ","VCR Config  default_cassette_options merge  keys - ","VCR  configuration default_cassette_options merge  keys - ","VCR Config  default_cassette_options merge  keys ","VCR  configuration default_cassette_options merge  keys ","VCR Config  default_cassette_options merge  inspect ","VCR  configuration default_cassette_options merge  inspect ","options [] s << "," Array  << ","VCR Config  default_cassette_options merge  fetch ","VCR  configuration default_cassette_options merge  fetch ","VCR  configuration default_cassette_VCR Config  default_cassette_options merge  merge ","VCR  configuration default_cassette_VCR  configuration default_cassette_options merge  merge ","VCR  configuration default_cassette_VCR Config  default_cassette_options merge  ","VCR  configuration default_cassette_VCR  configuration default_cassette_options merge  ","@VCR Config  default_cassette_options merge  inspect ","@VCR  configuration default_cassette_options merge  inspect "," extract_VCR Config  default_cassette_options merge  "," extract_VCR  configuration default_cassette_options merge  "," assert_valid_VCR Config  default_cassette_options merge ! "," assert_valid_VCR  configuration default_cassette_options merge ! "]}," VCR NetReadAdapter Extension to_yaml":{"type":"method","name":"to_yaml","children":[],"call":["@__body_for_vcr__ to_yaml "]}," VCR NetReadAdapter Extension <<":{"type":"method","name":"<<","children":[],"call":["(or-asgn\n  (ivasgn :@__body_for_vcr__)\n  (str \"\")) << "]}," VCR NetReadAdapter new":{"type":"method","name":"new","children":[],"call":[" extend "]}," FakeWeb NetConnectNotAllowedError message":{"type":"method","name":"message","children":[],"call":[" + ","VCR  version "]}," VCR Cassette register_responses_with_fakeweb":{"type":"method","name":"register_responses_with_fakeweb","children":[],"call":["FakeWeb  register_uri ","responses map ","request last ","request first ","requests each ","rr response ","requests [] ","rr uri ","rr method "," recorded_responses each "," recorded_responses ","Hash  new ","Hash  new  each ","Hash  new  [] "]}," Net HTTP __vcr_uri__":{"type":"method","name":"__vcr_uri__","children":[],"call":[" port "," address ","FakeWeb Utility  encode_unsafe_chars_in_userinfo + ","FakeWeb Utility  encode_unsafe_chars_in_userinfo ","FakeWeb Utility  decode_userinfo_from_header ","request [] ","request [] =~ ","URI  parse request_uri ","URI  parse ","request path ","request path =~ "," use_ssl? ","FakeWeb Utility  encode_unsafe_chars_in_FakeWeb Utility  encode_unsafe_chars_in_userinfo +  + ","FakeWeb Utility  encode_unsafe_chars_in_FakeWeb Utility  decode_userinfo_from_header  + ","FakeWeb Utility  encode_unsafe_chars_in_FakeWeb Utility  encode_unsafe_chars_in_userinfo +  ","FakeWeb Utility  encode_unsafe_chars_in_FakeWeb Utility  decode_userinfo_from_header  ","FakeWeb Utility  decode_FakeWeb Utility  encode_unsafe_chars_in_userinfo + _from_header ","FakeWeb Utility  decode_FakeWeb Utility  decode_userinfo_from_header _from_header ","request URI  parse request_uri  ","request request path  ","request URI  parse request_uri  =~ ","request request path  =~ "]}," FakeWeb with_allow_net_connect_set_to":{"type":"method","name":"with_allow_net_connect_set_to","children":[],"call":[]}," VCR Config default_cassette_options":{"type":"method","name":"default_cassette_options","children":[],"call":["@default_cassette_options merge! ","@default_cassette_options has_key? ","@default_cassette_options [] "]}," VCR Cassette allow_real_http_lambda_for":{"type":"method","name":"allow_real_http_lambda_for","children":[],"call":["uri host == ","uri host "," lambda ","allow_option == "]}," VCR Cassette allow_real_http_requests_to?":{"type":"method","name":"allow_real_http_requests_to?","children":[],"call":["@allow_real_http_lambda call ","VCR LOCALHOST_ALIASES  include? ","uri host ","VCR  http_stubbing_adapter ignore_localhost? ","VCR  http_stubbing_adapter "," warn ","VCR Config  uri_should_be_ignored? ","uri to_s "]}," VCR use_cassette":{"type":"method","name":"use_cassette","children":[],"call":[" eject_cassette "," insert_cassette "," call_block ","block call ","block arity == ","block arity "," raise ","`VCR.use_cassette` requires a block.  + + ","`VCR.use_cassette` requires a block.  + ","cassette run_failed! "," eject_ insert_cassette  "," insert_ insert_cassette  ","`VCR.use_ insert_cassette ` requires a block.  + + ","`VCR.use_ insert_cassette ` requires a block.  + "," insert_cassette  run_failed! "]}," VCR eject_cassette":{"type":"method","name":"eject_cassette","children":[],"call":["cassette eject "," cassettes pop "," cassettes "," cassettes last "," context_cassettes delete "," context_cassettes "," cassettes pop  eject "," cassettes last  eject ","  cassettes pop s pop ","  cassettes last s pop ","  cassettes pop s ","  cassettes last s ","  cassettes pop s last ","  cassettes last s last "," context_ cassettes pop s delete "," context_ cassettes last s delete "," context_ cassettes pop s "," context_ cassettes last s "]}," VCR insert_cassette":{"type":"method","name":"insert_cassette","children":[],"call":[" cassettes push "," cassettes ","Cassette  new "," raise ","TurnedOffError  new ","VCR is turned off.  You must turn it on before you can insert a cassette.   + "," ignore_cassettes? ! "," ignore_cassettes? ","ArgumentError  new ","c name == ","c name "," cassettes any? "," turned_on? "," context_cassettes push "," context_cassettes "," Cassette  new s push "," Cassette  new s ","VCR is turned off.  You must turn it on before you can insert a Cassette  new .   + "," ignore_Cassette  new s? ! "," ignore_Cassette  new s? "," Cassette  new s any? "," context_Cassette  new s push "," context_Cassette  new s "]}," VCR Config cache_dir":{"type":"method","name":"cache_dir","children":[],"call":[]}," VCR Cassette deprecate_unregistered_record_mode":{"type":"method","name":"deprecate_unregistered_record_mode","children":[],"call":["Kernel  warn ","@record_mode == "]}," VCR Config cassette_library_dir=":{"type":"method","name":"cassette_library_dir=","children":[],"call":["FileUtils  mkdir_p "]}," VCR Cassette file":{"type":"method","name":"file","children":[],"call":["File  join "," name to_s gsub "," name to_s "," name ","VCR Config  cassette_library_dir "," sanitized_name ","@serializer file_extension ","VCR  configuration cassette_library_dir ","VCR  configuration ","@persister absolute_path_to_file "," storage_key "," raise ","@persister respond_to? "]}," VCR Cassette eject":{"type":"method","name":"eject","children":[],"call":[" restore_fakeweb_allow_net_conect "," deregister_original_recorded_responses "," write_recorded_responses_to_disk "," restore_http_connections_allowed ","VCR  http_stubbing_adapter restore_stubs_checkpoint "," name ","VCR  http_stubbing_adapter "," write_recorded_interactions_to_disk "," restore_ignore_localhost_for_deprecation "," http_interactions assert_no_unused_interactions! "," http_interactions ","options [] ! ","options [] "," should_assert_no_unused_interactions? "," should_write_recorded_interactions_to_disk? "]}," VCR http_stubbing_adapter":{"type":"method","name":"http_stubbing_adapter","children":[],"call":[" raise ","ArgumentError  new ","VCR Config  http_stubbing_library ","HttpStubbingAdapters MultiObjectProxy  for ","adapters empty? "," adapter_for ","VCR Config  http_stubbing_libraries map ","VCR Config  http_stubbing_libraries ","VCR Config  http_stubbing_libraries include? ","(sym :fakeweb) all? ","adapter after_adapters_loaded ","lib inspect ","HttpStubbingAdapters MultiObjectProxy  for s empty? "," HttpStubbingAdapters MultiObjectProxy  for _for ","HttpStubbingAdapters MultiObjectProxy  for  after_HttpStubbingAdapters MultiObjectProxy  for s_loaded "]}," VCR TaskRunner with_recorded_response_defined":{"type":"method","name":"with_recorded_response_defined","children":[],"call":["VCR  send ","VCR  const_set ","Class  new ","Struct  new "]}," VCR TaskRunner request":{"type":"method","name":"request","children":[],"call":["VCR Request  new ","recorded_response uri ","recorded_response method "]}," VCR TaskRunner http_interaction":{"type":"method","name":"http_interaction","children":[],"call":["VCR HTTPInteraction  new ","VCR Response  from_net_http_response ","recorded_response response "," request "]}," VCR TaskRunner migrate_cassettes":{"type":"method","name":"migrate_cassettes","children":[],"call":["f write ","interactions to_yaml ","File  open "," http_interaction ","recorded_responses map ","rr is_a? ","recorded_responses all? ","recorded_responses is_a? ","YAML  load ","File  read ","Dir  glob each ","Dir  glob ","dir + ","FileUtils  cp_r "," with_recorded_response_defined ","YAML  load  map ","YAML  load  all? ","YAML  load  is_a? "]}," VCR HTTPInteraction from_net_http_objects":{"type":"method","name":"from_net_http_objects","children":[],"call":[]}," VCR Response from_net_http_response":{"type":"method","name":"from_net_http_response","children":[],"call":[]}," VCR ResponseStatus from_net_http_response":{"type":"method","name":"from_net_http_response","children":[],"call":[]}," VCR Request from_net_http_request":{"type":"method","name":"from_net_http_request","children":[],"call":[]}," WebMock NetConnectNotAllowedError message":{"type":"method","name":"message","children":[],"call":[" + ","VCR  version "]}," VCR HttpStubbingAdapters WebMock checkpoints":{"type":"method","name":"checkpoints","children":[],"call":[]}," VCR HttpStubbingAdapters WebMock response_hash":{"type":"method","name":"response_hash","children":[],"call":["response headers ","response status message ","response status ","response status code to_i ","response status code ","response body "]}," VCR HttpStubbingAdapters WebMock request_uri":{"type":"method","name":"request_uri","children":[],"call":[" WebMock NetHTTPUtility  request_signature_from_request uri to_s "," WebMock NetHTTPUtility  request_signature_from_request uri "," WebMock NetHTTPUtility  request_signature_from_request "]}," VCR HttpStubbingAdapters WebMock request_stubbed?":{"type":"method","name":"request_stubbed?","children":[],"call":[" WebMock  registered_request? ! ! "," WebMock  registered_request? ! "," WebMock  registered_request? "," WebMock RequestSignature  new ","uri to_s "," request_signature_hash ","request uri ","matcher method ","request matcher ","request matcher  method ","request request matcher  "]}," VCR HttpStubbingAdapters WebMock restore_stubs_checkpoint":{"type":"method","name":"restore_stubs_checkpoint","children":[],"call":[" WebMock RequestRegistry  instance request_stubs= "," checkpoints delete "," checkpoints "," WebMock RequestRegistry  instance "," WebMock StubRegistry  instance request_stubs= "," WebMock StubRegistry  instance "," raise_no_checkpoint_error "]}," VCR HttpStubbingAdapters WebMock create_stubs_checkpoint":{"type":"method","name":"create_stubs_checkpoint","children":[],"call":[" checkpoints []= "," WebMock RequestRegistry  instance request_stubs dup "," WebMock RequestRegistry  instance request_stubs "," WebMock RequestRegistry  instance "," checkpoints "," WebMock StubRegistry  instance request_stubs dup "," WebMock StubRegistry  instance request_stubs "," WebMock StubRegistry  instance "]}," VCR HttpStubbingAdapters WebMock stub_requests":{"type":"method","name":"stub_requests","children":[],"call":[" WebMock  stub_request to_return "," response_hash ","responses map "," WebMock  stub_request ","request last ","request first ","requests each ","rr response ","requests [] ","rr uri ","rr method ","recorded_responses each ","Hash  new ","stub to_return ","stub with ","with_hash size > ","with_hash size "," request_signature_hash ","request_matcher uri ","request_matcher method ","i response ","i request matcher ","i request ","http_interactions each ","requests [] << ","h []= "," grouped_responses each "," grouped_responses "," WebMock  stub with _request to_return "," WebMock   WebMock  stub_request _request to_return "," WebMock  stub with _request "," WebMock   WebMock  stub_request _request ","Hash  new  each ","Hash  new  [] ","stub with  to_return "," WebMock  stub_request  to_return ","stub with  with "," WebMock  stub_request  with "," request_signature_hash  size > "," request_signature_hash  size ","Hash  new  [] << "]}," VCR HttpStubbingAdapters WebMock http_connections_allowed=":{"type":"method","name":"http_connections_allowed=","children":[],"call":[" WebMock Config  instance allow_net_connect= "," WebMock Config  instance "," update_webmock_allow_net_connect "]}," VCR HttpStubbingAdapters WebMock http_connections_allowed?":{"type":"method","name":"http_connections_allowed?","children":[],"call":[" WebMock Config  instance allow_net_connect "," WebMock Config  instance "," WebMock Config  instance allow_net_connect ! ! "," WebMock Config  instance allow_net_connect ! "]}," VCR HttpStubbingAdapters WebMock check_version!":{"type":"method","name":"check_version!","children":[],"call":[" raise "," WebMock  version "," meets_version_requirement? "]}," VCR HttpStubbingAdapters FakeWeb response_hash":{"type":"method","name":"response_hash","children":[],"call":["response headers merge ","response status message ","response status ","response status code to_s ","response status code ","response body ","response headers ","(or\n  (send\n    (lvar :response) :headers)\n  (hash)) merge "]}," VCR HttpStubbingAdapters FakeWeb checkpoints":{"type":"method","name":"checkpoints","children":[],"call":[]}," VCR HttpStubbingAdapters FakeWeb request_uri":{"type":"method","name":"request_uri","children":[],"call":[" FakeWeb  request_uri ","net_http port ","net_http address ","FakeWeb Utility  encode_unsafe_chars_in_userinfo + ","FakeWeb Utility  encode_unsafe_chars_in_userinfo ","FakeWeb Utility  decode_userinfo_from_header ","request [] ","request [] =~ ","URI  parse request_uri ","URI  parse ","request path ","request path =~ ","net_http use_ssl? "," FakeWeb Utility  encode_unsafe_chars_in_userinfo + "," FakeWeb Utility  encode_unsafe_chars_in_userinfo "," FakeWeb Utility  decode_userinfo_from_header "," FakeWeb Utility  request_uri_as_string ","FakeWeb Utility  encode_unsafe_chars_in_FakeWeb Utility  encode_unsafe_chars_in_userinfo +  + ","FakeWeb Utility  encode_unsafe_chars_in_FakeWeb Utility  decode_userinfo_from_header  + ","FakeWeb Utility  encode_unsafe_chars_in_ FakeWeb Utility  encode_unsafe_chars_in_userinfo +  + ","FakeWeb Utility  encode_unsafe_chars_in_ FakeWeb Utility  decode_userinfo_from_header  + ","FakeWeb Utility  encode_unsafe_chars_in_FakeWeb Utility  encode_unsafe_chars_in_userinfo +  ","FakeWeb Utility  encode_unsafe_chars_in_FakeWeb Utility  decode_userinfo_from_header  ","FakeWeb Utility  encode_unsafe_chars_in_ FakeWeb Utility  encode_unsafe_chars_in_userinfo +  ","FakeWeb Utility  encode_unsafe_chars_in_ FakeWeb Utility  decode_userinfo_from_header  ","FakeWeb Utility  decode_FakeWeb Utility  encode_unsafe_chars_in_userinfo + _from_header ","FakeWeb Utility  decode_FakeWeb Utility  decode_userinfo_from_header _from_header ","FakeWeb Utility  decode_ FakeWeb Utility  encode_unsafe_chars_in_userinfo + _from_header ","FakeWeb Utility  decode_ FakeWeb Utility  decode_userinfo_from_header _from_header ","request URI  parse request_uri  ","request request path  ","request URI  parse request_uri  =~ ","request request path  =~ "," FakeWeb Utility  encode_unsafe_chars_in_FakeWeb Utility  encode_unsafe_chars_in_userinfo +  + "," FakeWeb Utility  encode_unsafe_chars_in_FakeWeb Utility  decode_userinfo_from_header  + "," FakeWeb Utility  encode_unsafe_chars_in_ FakeWeb Utility  encode_unsafe_chars_in_userinfo +  + "," FakeWeb Utility  encode_unsafe_chars_in_ FakeWeb Utility  decode_userinfo_from_header  + "," FakeWeb Utility  encode_unsafe_chars_in_FakeWeb Utility  encode_unsafe_chars_in_userinfo +  "," FakeWeb Utility  encode_unsafe_chars_in_FakeWeb Utility  decode_userinfo_from_header  "," FakeWeb Utility  encode_unsafe_chars_in_ FakeWeb Utility  encode_unsafe_chars_in_userinfo +  "," FakeWeb Utility  encode_unsafe_chars_in_ FakeWeb Utility  decode_userinfo_from_header  "," FakeWeb Utility  decode_FakeWeb Utility  encode_unsafe_chars_in_userinfo + _from_header "," FakeWeb Utility  decode_FakeWeb Utility  decode_userinfo_from_header _from_header "," FakeWeb Utility  decode_ FakeWeb Utility  encode_unsafe_chars_in_userinfo + _from_header "," FakeWeb Utility  decode_ FakeWeb Utility  decode_userinfo_from_header _from_header "]}," VCR HttpStubbingAdapters FakeWeb request_stubbed?":{"type":"method","name":"request_stubbed?","children":[],"call":[" FakeWeb  registered_uri? ","request uri ","request method "," validate_match_attributes "," FakeWeb  registered_uri? ! ! "," FakeWeb  registered_uri? ! "]}," VCR HttpStubbingAdapters FakeWeb restore_stubs_checkpoint":{"type":"method","name":"restore_stubs_checkpoint","children":[],"call":[" FakeWeb Registry  instance uri_map= "," checkpoints delete "," checkpoints "," FakeWeb Registry  instance "," raise_no_checkpoint_error "]}," VCR HttpStubbingAdapters FakeWeb create_stubs_checkpoint":{"type":"method","name":"create_stubs_checkpoint","children":[],"call":[" checkpoints []= "," FakeWeb Registry  instance uri_map dup "," FakeWeb Registry  instance uri_map "," FakeWeb Registry  instance "," checkpoints "]}," VCR HttpStubbingAdapters FakeWeb stub_requests":{"type":"method","name":"stub_requests","children":[],"call":[" FakeWeb  register_uri "," response_hash ","responses map ","request last ","request first ","requests each ","i response ","requests [] ","i request uri ","i request ","i request method ","http_interactions each ","Hash  new ","request_matcher uri ","request_matcher method ","i request matcher "," validate_match_attributes ","requests [] << ","h []= "," grouped_responses each "," grouped_responses ","Hash  new  each ","Hash  new  [] ","Hash  new  [] << "]}," VCR HttpStubbingAdapters FakeWeb http_connections_allowed=":{"type":"method","name":"http_connections_allowed=","children":[],"call":[" FakeWeb  allow_net_connect= "," update_fakeweb_allow_net_connect "]}," VCR HttpStubbingAdapters FakeWeb http_connections_allowed?":{"type":"method","name":"http_connections_allowed?","children":[],"call":[" FakeWeb  allow_net_connect? "," FakeWeb  allow_net_connect? ! ! "," FakeWeb  allow_net_connect? ! "]}," VCR HttpStubbingAdapters FakeWeb check_version!":{"type":"method","name":"check_version!","children":[],"call":[" raise "," meets_version_requirement? "]}," VCR HttpStubbingAdapters Base meets_version_requirement?":{"type":"method","name":"meets_version_requirement?","children":[],"call":["patch >= ","minor > ","minor < ","major > ","major < ","v to_i ","required_version split map ","required_version split ","version split map ","version split "]}," VCR HttpStubbingAdapters Base with_http_connections_allowed_set_to":{"type":"method","name":"with_http_connections_allowed_set_to","children":[],"call":[" http_connections_allowed= "," http_connections_allowed? "]}," FakeWeb request_uri":{"type":"method","name":"request_uri","children":[],"call":[]}," VCR Config http_stubbing_library":{"type":"method","name":"http_stubbing_library","children":[],"call":["defined_constants [] to_s downcase to_sym ","defined_constants [] to_s downcase ","defined_constants [] to_s ","defined_constants [] ","defined_constants size == ","defined_constants size ","Object  const_defined? ","(sym :FakeWeb) select ","@http_stubbing_libraries first "," warn "]}," VCR Cassette unstub_requests":{"type":"method","name":"unstub_requests","children":[],"call":["VCR  http_stubbing_adapter unstub_requests ","VCR  http_stubbing_adapter "]}," VCR Cassette write_recorded_interactions_to_disk":{"type":"method","name":"write_recorded_interactions_to_disk","children":[],"call":["f write "," recorded_interactions to_yaml "," recorded_interactions ","File  open "," file ","FileUtils  mkdir_p ","File  exist? ","File  dirname "," new_recorded_interactions size > "," new_recorded_interactions size "," new_recorded_interactions ","VCR Config  cassette_library_dir ","VCR YAML  dump ","interactions empty? "," invoke_hook "," merged_interactions "," new_recorded_interactions empty? "," merged_interactions to_yaml ","interactions to_yaml ","@serializer serialize ","hash [] none? ","hash [] "," serializable_hash "," new_recorded_interactions none? ","VCR  configuration cassette_library_dir ","VCR  configuration ","@persister []= "," storage_key "," recorded_ merged_interactions  to_yaml "," recorded_ merged_interactions  "," new_recorded_ merged_interactions  size > "," new_recorded_ merged_interactions  size "," new_recorded_ merged_interactions  "," merged_interactions  empty? "," merged_ merged_interactions  "," new_recorded_ merged_interactions  empty? "," merged_ merged_interactions  to_yaml "," merged_interactions  to_yaml "," serializable_hash  [] none? "," serializable_hash  [] "," serializable_ serializable_hash  "," new_recorded_ merged_interactions  none? "]}," VCR Cassette load_recorded_interactions":{"type":"method","name":"load_recorded_interactions","children":[],"call":["VCR  http_stubbing_adapter stub_requests "," recorded_interactions ","VCR  http_stubbing_adapter "," recorded_interactions replace "," raise "," name ","yaml_content =~ ","YAML  load ","File  read "," file ","File  exist? "," record_mode == "," record_mode ","VCR  http_stubbing_adapter create_stubs_checkpoint "," sanitized_name "," raw_yaml_content =~ "," raw_yaml_content ","VCR LOCALHOST_ALIASES  include? ","URI  parse host ","URI  parse ","i uri ","i uri is_a? ","interactions reject! ","VCR  http_stubbing_adapter ignore_localhost? "," match_requests_on "," should_stub_requests? ","i response update_content_length_header ","i response ","interactions each "," update_content_length_header? ","VCR Config  uri_should_be_ignored? ","i request uri ","i request ","i request uri is_a? "," invoke_hook ","VCR YAML  load ","File  size? ","HTTPInteractionList  new "," parent_list ","VCR  request_ignorer ignore? ","VCR  request_ignorer "," recorded_YAML  load  "," recorded_VCR YAML  load  "," recorded_ recorded_interactions  "," recorded_YAML  load  replace "," recorded_VCR YAML  load  replace "," recorded_ recorded_interactions  replace ","File  read  =~ "," raw_File  read  =~ "," raw_File  read  ","YAML  load  reject! ","VCR YAML  load  reject! "," recorded_interactions  reject! ","YAML  load  each ","VCR YAML  load  each "," recorded_interactions  each "]}," VCR Cassette restore_http_connections_allowed":{"type":"method","name":"restore_http_connections_allowed","children":[],"call":["VCR  http_stubbing_adapter http_connections_allowed= ","VCR  http_stubbing_adapter "]}," VCR Cassette set_http_connections_allowed":{"type":"method","name":"set_http_connections_allowed","children":[],"call":["VCR  http_stubbing_adapter http_connections_allowed= "," should_allow_http_connections? ","VCR  http_stubbing_adapter ","VCR  http_stubbing_adapter http_connections_allowed? "]}," VCR Cassette should_allow_http_connections?":{"type":"method","name":"should_allow_http_connections?","children":[],"call":["(sym :new_episodes) include? "," record_mode ","File  size? ! ","File  size? "," file "," record_mode != "]}," VCR Cassette new_recorded_interactions":{"type":"method","name":"new_recorded_interactions","children":[],"call":[" recorded_interactions - "," recorded_interactions "]}," VCR Cassette record_http_interaction":{"type":"method","name":"record_http_interaction","children":[],"call":[" recorded_interactions << "," recorded_interactions "," new_recorded_interactions << "," new_recorded_interactions "," log "," response_summary ","interaction response "," request_summary ","interaction request ","VCR CassetteMutex  synchronize "]}," VCR Cassette recorded_interactions":{"type":"method","name":"recorded_interactions","children":[],"call":[]}," VCR Net HTTPResponse read_body":{"type":"method","name":"read_body","children":[],"call":["@body << "," Net ReadAdapter  new ","dest << "," raise ","ArgumentError  new ","block nil? ","dest nil? "," Net ReadAdapter  new  << "]}," VCR Net HTTPResponse extended":{"type":"method","name":"extended","children":[],"call":[]}," VCR record_http_interaction":{"type":"method","name":"record_http_interaction","children":[],"call":["cassette record_http_interaction ","LOCALHOST_ALIASES  include? ","URI  parse host ","URI  parse ","interaction uri "," http_stubbing_adapter ignore_localhost? "," http_stubbing_adapter "," current_cassette ","VCR Config  uri_should_be_ignored? ","VCR  request_ignorer ignore? ","interaction request ","VCR  request_ignorer "," current_cassette  record_http_interaction "," current_ current_cassette  "]}," VCR version":{"type":"method","name":"version","children":[{"type":"method","name":"parts","children":[],"asgn":[],"call":[]},{"type":"method","name":"major","children":[],"asgn":[],"call":[]},{"type":"method","name":"minor","children":[],"asgn":[],"call":[]},{"type":"method","name":"patch","children":[],"asgn":[],"call":[]}],"call":[" parts [] "," parts ","p to_i ","VCR  version split map ","VCR  version split ","VCR  version ","(int 1) join "," split map "," split ","string freeze ","6.1.0 +@ ","6.2.0 +@ ","(int 1) join  freeze ","6.1.0 +@  freeze ","6.2.0 +@  freeze "]}," VCR HttpStubbingAdapters WebMock ignore_localhost?":{"type":"method","name":"ignore_localhost?","children":[],"call":[" WebMock Config  instance allow_localhost "," WebMock Config  instance "," WebMock Config  instance allow_localhost ! ! "," WebMock Config  instance allow_localhost ! "]}," VCR HttpStubbingAdapters WebMock ignore_localhost=":{"type":"method","name":"ignore_localhost=","children":[],"call":[" WebMock Config  instance allow_localhost= "," WebMock Config  instance "]}," VCR HttpStubbingAdapters FakeWeb ignore_localhost?":{"type":"method","name":"ignore_localhost?","children":[],"call":["@ignore_localhost ! ! ","@ignore_localhost ! "]}," VCR Cassette restore_ignore_localhost_for_deprecation":{"type":"method","name":"restore_ignore_localhost_for_deprecation","children":[],"call":["VCR  http_stubbing_adapter ignore_localhost= ","VCR  http_stubbing_adapter ","VCR Config  ignore_hosts ","VCR Config  ignored_hosts clear ","VCR Config  ignored_hosts "]}," VCR Cassette deprecate_old_cassette_options":{"type":"method","name":"deprecate_old_cassette_options","children":[],"call":[" raise ","ArgumentError  new ","options [] ","Kernel  warn ","VCR  http_stubbing_adapter ignore_localhost= ","VCR  http_stubbing_adapter ","VCR  http_stubbing_adapter ignore_localhost? ","options [] == ","VCR Config  ignore_hosts ","VCR Config  ignored_hosts clear ","VCR Config  ignored_hosts ","VCR Config  ignored_hosts dup "]}," VCR Config ignore_localhost?":{"type":"method","name":"ignore_localhost?","children":[],"call":["VCR  http_stubbing_adapter ignore_localhost? ","VCR  http_stubbing_adapter ","(send\n  (const\n    (const nil :VCR) :LOCALHOST_ALIASES) :-\n  (send nil :ignored_hosts)) empty? ","VCR LOCALHOST_ALIASES  - "," ignored_hosts "," warn "]}," VCR Config ignore_localhost=":{"type":"method","name":"ignore_localhost=","children":[],"call":["VCR  http_stubbing_adapter ignore_localhost= ","VCR  http_stubbing_adapter ","VCR LOCALHOST_ALIASES  include? "," ignored_hosts reject! "," ignored_hosts "," ignore_hosts "," http_stubbing_libraries any? "," http_stubbing_libraries "]}," VCR Cassette raw_yaml_content":{"type":"method","name":"raw_yaml_content","children":[],"call":[" raise ","MissingERBVariableError  new ","(str \"The ERB in the \") + ","example_hash inspect "," sanitized_name ","(if\n  (send\n    (ivar :@erb) :is_a?\n    (const nil :Hash))\n  (ivar :@erb)\n  (hash)) merge ","@erb is_a? ","e message [] to_sym ","e message [] ","e message ","template result "," binding ","local_variables instance_eval ","Struct  new new ","@erb values ","Struct  new ","@erb keys ","ERB  new ","File  read "," file ","@@struct_cache [] new ","@@struct_cache [] ","VCR Cassette Reader  new read ","VCR Cassette Reader  new "," erb ","e name ","(if\n  (send\n    (ivar :@erb) :is_a?\n    (const nil :Hash))\n  (ivar :@erb)\n  (hash)) merge  inspect ","ERB  new  result ","Struct  new new  instance_eval ","@@struct_cache [] new  instance_eval "]}," VCR Cassette sanitized_name":{"type":"method","name":"sanitized_name","children":[],"call":[" name to_s gsub "," name to_s "," name "]}," VCR HeaderNormalizer normalize_headers":{"type":"method","name":"normalize_headers","children":[],"call":[" headers= ","new_headers []= ","k downcase "," headers each "," headers ","new_headers empty? ","important_vals size > ","important_vals size "," important_header_values ","String  new ","important_vals map ","k downcase  downcase "," important_header_values  size > "," important_header_values  size "," important_header_values  map "]}," VCR HeaderNormalizer initialize":{"type":"method","name":"initialize","children":[],"call":[" normalize_headers "]}," VCR Response initialize":{"type":"method","name":"initialize","children":[],"call":[" body= ","String  new "," body "," adapter_metadata "]}," VCR Request matcher":{"type":"method","name":"matcher","children":[],"call":["RequestMatcher  new "]}," VCR RequestMatcher hash":{"type":"method","name":"hash","children":[],"call":["(send\n  (send nil :match_attributes) :to_a) hash "," body "," headers "," uri "," method "," match_attributes to_a "," match_attributes "," sorted_header_array "]}," VCR RequestMatcher ==":{"type":"method","name":"==","children":[],"call":[" send == ","other send "," send ","(str \"class\") all? "]}," VCR RequestMatcher eql?":{"type":"method","name":"eql?","children":[],"call":[" == "]}," VCR RequestMatcher match_requests_on?":{"type":"method","name":"match_requests_on?","children":[],"call":[" match_attributes include? "," match_attributes "]}," VCR RequestMatcher body":{"type":"method","name":"body","children":[],"call":[" request body "," request "," match_requests_on? "]}," VCR RequestMatcher headers":{"type":"method","name":"headers","children":[],"call":[" request headers "," request "," match_requests_on? "]}," VCR RequestMatcher method":{"type":"method","name":"method","children":[],"call":[" request method "," request "," match_requests_on? "]}," VCR RequestMatcher uri":{"type":"method","name":"uri","children":[],"call":[" raise ","ArgumentError  new ","uri_matchers join ","Regexp  escape ","uri path ","uri host "," URI "," request uri "," request ","Set  new "," URI path "," URI host "," match_attributes to_a & "," match_attributes to_a "," match_attributes "," request uri is_a? ","VCR Regexes  url_regex_for_host_and_path "," set ","VCR Regexes  url_regex_for_path ","VCR Regexes  url_regex_for_hosts "," URI _matchers join "," match_attributes to_a &  join "," URI  path "," URI  host "," request  URI  "," request  URI  is_a? "]}," VCR RequestMatcher match_attributes=":{"type":"method","name":"match_attributes=","children":[],"call":["Set  new ","a to_s <=> ","b to_s ","a to_s ","attributes sort "," set "]}," VCR RequestMatcher initialize":{"type":"method","name":"initialize","children":[],"call":[" match_attributes= "," raise ","ArgumentError  new ","match_attributes inspect ","VALID_MATCH_ATTRIBUTES  inspect ","(send\n  (lvar :match_attributes) :-\n  (const nil :VALID_MATCH_ATTRIBUTES)) size > ","(send\n  (lvar :match_attributes) :-\n  (const nil :VALID_MATCH_ATTRIBUTES)) size ","match_attributes - "]}," VCR HttpStubbingAdapters WebMock request_signature_hash":{"type":"method","name":"request_signature_hash","children":[],"call":["signature []= ","request_matcher headers ","request_matcher match_requests_on? ","request_matcher body "]}," VCR HttpStubbingAdapters FakeWeb validate_match_attributes":{"type":"method","name":"validate_match_attributes","children":[],"call":[" raise ","UnsupportedRequestMatchAttributeError  new ","invalid_attributes join ","invalid_attributes size > ","invalid_attributes size ","match_attributes & ","match_attributes &  join ","match_attributes &  size > ","match_attributes &  size "]}," Net HTTP request":{"type":"method","name":"request","children":[],"call":[" block_given? ","response extend ","VCR  record_http_interaction ","VCR HTTPInteraction  new ","VCR Response  from_net_http_response ","VCR  http_stubbing_adapter request_stubbed? ! ","VCR  http_stubbing_adapter request_stubbed? ","VCR  http_stubbing_adapter "," started? ","cass match_requests_on ","VCR  current_cassette "," request_without_vcr ","VCR Request  from_net_http_request ","VCR  http_stubbing_adapter with_http_connections_allowed_set_to ","VCR  http_stubbing_adapter ignore_localhost? ","VCR LOCALHOST_ALIASES  include? ","uri host ","URI  parse ","VCR  http_stubbing_adapter request_uri "," request_without_vcr  extend ","VCR Response  from_net_http_ request_without_vcr  ","VCR  current_cassette  match_requests_on ","VCR  current_VCR  current_cassette ette ","URI  parse  host ","VCR  http_stubbing_adapter request_URI  parse  "]}," VCR HttpStubbingAdapters WebMock version":{"type":"method","name":"version","children":[],"call":[" WebMock  version "]}," VCR HttpStubbingAdapters FakeWeb update_fakeweb_allow_net_connect":{"type":"method","name":"update_fakeweb_allow_net_connect","children":[],"call":[" FakeWeb  allow_net_connect= ","VCR Regexes  url_regex_for_hosts "," ignored_hosts "," ignored_hosts any? "]}," VCR HttpStubbingAdapters FakeWeb version":{"type":"method","name":"version","children":[],"call":[]}," VCR HttpStubbingAdapters FakeWeb ignore_localhost=":{"type":"method","name":"ignore_localhost=","children":[],"call":[" update_fakeweb_allow_net_connect "]}," VCR HttpStubbingAdapters Common library_name":{"type":"method","name":"library_name","children":[],"call":[" to_s split last "," to_s split "," to_s "]}," VCR HttpStubbingAdapters Common compare_version":{"type":"method","name":"compare_version","children":[],"call":["patch < ","minor > ","minor < ","major > ","major < ","v to_i "," VERSION_REQUIREMENT  split map "," VERSION_REQUIREMENT  split "," version split map "," version split "," version "," parse_version "]}," VCR HttpStubbingAdapters Common check_version!":{"type":"method","name":"check_version!","children":[],"call":[" warn "," library_name "," version "," raise "," compare_version "," version_requirement "]}," VCR HttpStubbingAdapters WebMock should_unwind_response?":{"type":"method","name":"should_unwind_response?","children":[],"call":[" ancestors include? ! "," ancestors include? "," ancestors "]}," VCR HttpStubbingAdapters FakeWeb should_unwind_response?":{"type":"method","name":"should_unwind_response?","children":[],"call":[]}," VCR adapter_for":{"type":"method","name":"adapter_for","children":[],"call":[" raise ","ArgumentError  new ","lib inspect "]}," VCR ignore_cassettes?":{"type":"method","name":"ignore_cassettes?","children":[],"call":[" context_value "]}," VCR turned_on?":{"type":"method","name":"turned_on?","children":[],"call":["@turned_off ! "," context_value ! "," context_value ","linked_context [] ! ","linked_context [] "," current_context [] "," current_context "," current_context []  [] ! "," current_context []  [] "]}," VCR turn_on!":{"type":"method","name":"turn_on!","children":[],"call":["VCR  http_stubbing_adapter set_http_connections_allowed_to_default ","VCR  http_stubbing_adapter "," set_context_value "]}," VCR turn_off!":{"type":"method","name":"turn_off!","children":[],"call":["VCR  http_stubbing_adapter http_connections_allowed= ","VCR  http_stubbing_adapter "," raise ","ArgumentError  new ","invalid_options inspect ","invalid_options any? ","options keys - ","options keys ","options [] ","CassetteInUseError  new ","VCR  current_cassette ","(str \"A VCR cassette is currently in use (\") + ","VCR  current_cassette name "," set_context_value ","options fetch ","options keys -  inspect ","options keys -  any? "]}," VCR turned_off":{"type":"method","name":"turned_off","children":[],"call":[" turn_on! "," turn_off! "]}," VCR VariableArgsBlockCaller call_block":{"type":"method","name":"call_block","children":[],"call":["block call ","args first ","(send\n  (lvar :args) :size) min ","block arity ","args size ","block arity >= ","args first  first ","(send\n  (lvar :args first ) :size) min ","args first  size "]}," VCR Regexes url_regex_for_host_and_path":{"type":"method","name":"url_regex_for_host_and_path","children":[],"call":["@@url_host_and_path_regexes [] "]}," VCR Regexes url_regex_for_path":{"type":"method","name":"url_regex_for_path","children":[],"call":["@@url_path_regexes [] "]}," VCR Regexes url_regex_for_hosts":{"type":"method","name":"url_regex_for_hosts","children":[],"call":["@@url_host_regexes [] ","hosts sort "]}," VCR Ping pingecho":{"type":"method","name":"pingecho","children":[],"call":["s close ","TCPSocket  new "," timeout ","Timeout  timeout ","TCPSocket  new  cloTCPSocket  new e "]}," VCR InternetConnection available?":{"type":"method","name":"available?","children":[],"call":["VCR Ping  pingecho ","Ping  pingecho "]}," VCR Hooks hooks_for":{"type":"method","name":"hooks_for","children":[],"call":["for_hook [] ","tag nil? "," hooks [] "," hooks "," hooks []  [] "," for_hook []  [] "," for_hook []  "]}," VCR Hooks define_hook":{"type":"method","name":"define_hook","children":[],"call":[" instance_eval ","28 + ","hook inspect ","26 + "]}," VCR Hooks hooks":{"type":"method","name":"hooks","children":[],"call":["hook_type_hash []= ","tag_hash []= ","Hash  new ","hash []= "]}," VCR Hooks clear_hooks":{"type":"method","name":"clear_hooks","children":[],"call":[" hooks clear "," hooks "]}," VCR Hooks invoke_hook":{"type":"method","name":"invoke_hook","children":[],"call":[" call_block "," hooks_for each "," hooks_for ","callback call "," args_for_callback ","hook conditionally_invoke "," hooks [] map "," hooks [] "," hooks "," invoke_tagged_hook "]}," VCR BasicObject inherited":{"type":"method","name":"inherited","children":[],"call":[" undef_method "," instance_method owner == ","Object  instance_method owner ","Object  instance_method "," instance_method owner "," instance_method ","Object  method_defined? ","(send\n  (send nil :instance_methods) :-\n  (const nil :KEEP)) each "," instance_methods - "," instance_methods ","BasicObject  class_eval "]}," VCR BasicObject ===":{"type":"method","name":"===","children":[],"call":[]}," VCR RSpec Macros infer_cassette_name":{"type":"method","name":"infer_cassette_name","children":[],"call":["group_descriptions compact reverse join ","group_descriptions compact reverse ","group_descriptions compact ","klass superclass ","group_descriptions << ","klass metadata [] [] ","klass metadata [] ","klass metadata ","klass respond_to? "," description_parts join "," description_parts "," respond_to? ","klass superclass  superclass ","klass superclass  metadata [] [] ","klass superclass  metadata [] ","klass superclass  metadata ","klass superclass  respond_to? "]}," VCR RSpec Macros use_vcr_cassette":{"type":"method","name":"use_vcr_cassette","children":[],"call":["VCR  eject_cassette "," after ","VCR  insert_cassette "," before "," infer_cassette_name ","args first ","args pop ","args last is_a? ","args last "]}," VCR Response update_content_length_header":{"type":"method","name":"update_content_length_header","children":[],"call":[" body length to_s "," body length "," body "," headers [] "," headers "," headers []= "," headers has_key? ","(str \"Content-Length\") find "," body bytesize to_s "," body bytesize "," edit_header "]}," VCR Request method":{"type":"method","name":"method","children":[],"call":["@@object_method bind call ","@@object_method bind ","args empty? "]}," VCR Normalizers URI normalize_uri":{"type":"method","name":"normalize_uri","children":[{"type":"method","name":"default_port","children":[],"asgn":[],"call":[]}],"call":[" uri= ","u to_s ","DEFAULT_PORTS  [] ","u scheme ","u port "," URI  parse "," uri "]}," VCR Normalizers URI initialize":{"type":"method","name":"initialize","children":[],"call":[" normalize_uri "]}," VCR Normalizers StatusMessage normalize_status_message":{"type":"method","name":"normalize_status_message","children":[],"call":[" message= "," message == "," message "," message strip "]}," VCR Normalizers StatusMessage initialize":{"type":"method","name":"initialize","children":[],"call":[" normalize_status_message "]}," VCR Normalizers Header convert_to_raw_strings":{"type":"method","name":"convert_to_raw_strings","children":[],"call":[" convert_to_raw_strings ","String  new ","array map "]}," VCR Normalizers Header normalize_headers":{"type":"method","name":"normalize_headers","children":[],"call":[" headers= ","new_headers empty? ","new_headers []= "," convert_to_raw_strings ","important_vals size > ","important_vals size "," important_header_values ","k downcase "," headers each "," headers ","String  new ","important_vals map ","@normalized_header_keys []= ","Hash  new "," important_header_values  size > "," important_header_values  size ","k downcase  downcase "," important_header_values  map ","@normalized_header_k downcase eys []= "]}," VCR Normalizers Header important_header_values":{"type":"method","name":"important_header_values","children":[],"call":["values - ","HEADERS_TO_SKIP  [] "]}," VCR Normalizers Header initialize":{"type":"method","name":"initialize","children":[],"call":[" normalize_headers "]}," VCR Normalizers Body normalize_body":{"type":"method","name":"normalize_body","children":[],"call":[" body= ","String  new "," body "]}," VCR Normalizers Body initialize":{"type":"method","name":"initialize","children":[],"call":[" normalize_body "," body= ","String  new "," body to_s "," body "," raise "," body inspect "," class "," body is_a? ! "," body is_a? "," body class "]}," VCR HTTPInteraction filter_hash!":{"type":"method","name":"filter_hash!","children":[],"call":["hash []= ","hash delete ","k == "," filter_object! ","k dup ","hash keys each ","hash keys ","hash values "]}," VCR HTTPInteraction filter_object!":{"type":"method","name":"filter_object!","children":[],"call":[" filter_object! ","object each ","object respond_to? "," filter_hash! ","Hash  === ","object gsub! ","object include? "]}," VCR HTTPInteraction filter!":{"type":"method","name":"filter!","children":[],"call":[" filter_object! ","t to_s empty? ","t to_s ","(lvar :text) any? "]}," VCR HTTPInteraction ignored?":{"type":"method","name":"ignored?","children":[],"call":["@ignored ! ! ","@ignored ! "]}," VCR HTTPInteraction ignore!":{"type":"method","name":"ignore!","children":[],"call":["(sclass\n  (self)\n  (self)) class_eval "]}," VCR RequestMatcher sorted_header_array":{"type":"method","name":"sorted_header_array","children":[],"call":["a1 first <=> ","a2 first ","a1 first ","array sort! ","array << ","v sort ","v respond_to? ","header_hash each ","header_hash is_a? "," headers ","v sort  sort ","v sort  respond_to? "," headers  each "," headers  is_a? "]}," VCR RequestMatcher set":{"type":"method","name":"set","children":[],"call":["Set  new ","elements flatten "]}," VCR Middleware Rack call":{"type":"method","name":"call","children":[],"call":["@app call ","VCR  use_cassette "," cassette_arguments ","@mutex synchronize "]}," VCR Middleware Rack initialize":{"type":"method","name":"initialize","children":[],"call":["Mutex  new "," raise ","ArgumentError  new "]}," VCR Middleware Faraday response_for":{"type":"method","name":"response_for","children":[],"call":["VCR Response  new ","response body ","response headers ","VCR ResponseStatus  new ","response status ","env [] ","env []  body ","env []  headers ","env []  status "]}," VCR Middleware Faraday request_for":{"type":"method","name":"request_for","children":[],"call":["VCR Request  new ","env [] ","env [] to_s "]}," VCR Middleware Faraday call":{"type":"method","name":"call","children":[],"call":[" raise ","HttpConnectionNotAllowedError  new ","request uri ","request method inspect ","request method ","VCR  record_http_interaction ","VCR HTTPInteraction  new "," response_for ","VCR HttpStubbingAdapters Faraday  enabled? ","@app call ","VCR HttpStubbingAdapters Faraday  http_connections_allowed? ","env []= ","faraday_response finish ","env [] "," Faraday Response  new ","env update ","response body ","response status code ","response status ","headers update ","response headers "," Faraday Utils Headers  new ","VCR HttpStubbingAdapters Faraday  stubbed_response_for ","VCR HttpStubbingAdapters Faraday  uri_should_be_ignored? ","request matcher ","cassette match_requests_on "," request_for ","VCR  use_cassette "," cassette_arguments ","VCR HttpStubbingAdapters Faraday  exclusively_enabled ","env [] finish "," correctly_cased_headers ","VCR LOCALHOST_ALIASES  include? ","URI  parse host ","URI  parse ","VCR HttpStubbingAdapters Faraday  ignore_localhost? "," normalized_headers ","RequestHandler  new handle ","RequestHandler  new ","VCR  library_hooks exclusively_enabled ","VCR  library_hooks ","VCR  library_hooks disabled? "," request_for  uri "," request_for  method inspect "," request_for  method "," @app call _for "," VCR HttpStubbingAdapters Faraday  stubbed_response_for _for ","faraday_@app call  finish ","faraday_VCR HttpStubbingAdapters Faraday  stubbed_response_for  finish "," Faraday Response  new  finish ","@app call  body ","VCR HttpStubbingAdapters Faraday  stubbed_response_for  body ","@app call  status code ","VCR HttpStubbingAdapters Faraday  stubbed_response_for  status code ","@app call  status ","VCR HttpStubbingAdapters Faraday  stubbed_response_for  status ","@app call  headers ","VCR HttpStubbingAdapters Faraday  stubbed_response_for  headers ","VCR HttpStubbingAdapters Faraday  stubbed_@app call _for ","VCR HttpStubbingAdapters Faraday  stubbed_VCR HttpStubbingAdapters Faraday  stubbed_response_for _for "," request_for  matcher ","cassette match_ request_for s_on ","  request_for _for "]}," VCR Middleware Common cassette_arguments":{"type":"method","name":"cassette_arguments","children":[],"call":["arguments options ","arguments name "," call_block ","CassetteArguments  new ","@cassette_arguments_block call ","block_args << ","@cassette_arguments_block arity == ","@cassette_arguments_block arity ","CassetteArguments  new  options ","CassetteArguments  new  name ","@cassette_CassetteArguments  new _block call ","@cassette_CassetteArguments  new _block arity == ","@cassette_CassetteArguments  new _block arity "]}," VCR Middleware Common initialize":{"type":"method","name":"initialize","children":[],"call":[" raise ","ArgumentError  new "]}," VCR Middleware CassetteArguments options":{"type":"method","name":"options","children":[],"call":["@options merge! "]}," VCR Middleware CassetteArguments name":{"type":"method","name":"name","children":[],"call":[]}," VCR Middleware CassetteArguments initialize":{"type":"method","name":"initialize","children":[],"call":[]}," stubbing_instructions":{"type":"method","name":"stubbing_instructions","children":[],"call":[".   + "]}," VCR HttpStubbingAdapters WebMock update_webmock_allow_net_connect":{"type":"method","name":"update_webmock_allow_net_connect","children":[],"call":[" WebMock  disable_net_connect! "," ignored_hosts "," WebMock  allow_net_connect! "]}," VCR HttpStubbingAdapters WebMock ignored_hosts":{"type":"method","name":"ignored_hosts","children":[],"call":[]}," VCR HttpStubbingAdapters WebMock ignored_hosts=":{"type":"method","name":"ignored_hosts=","children":[],"call":[" update_webmock_allow_net_connect "]}," VCR HttpStubbingAdapters Typhoeus normalized_response_headers":{"type":"method","name":"normalized_response_headers","children":[],"call":["hash []= ","values first ","values size == ","values size ","response headers each ","response headers "]}," VCR HttpStubbingAdapters Typhoeus request_hash":{"type":"method","name":"request_hash","children":[],"call":["hash []= ","request_matcher headers ","request_matcher match_requests_on? ","request_matcher body "]}," VCR HttpStubbingAdapters Typhoeus checkpoints":{"type":"method","name":"checkpoints","children":[],"call":[]}," VCR HttpStubbingAdapters Typhoeus version":{"type":"method","name":"version","children":[],"call":[]}," VCR HttpStubbingAdapters Typhoeus restore_stubs_checkpoint":{"type":"method","name":"restore_stubs_checkpoint","children":[],"call":[" Typhoeus Hydra  stubs= "," checkpoints delete "," checkpoints "," raise_no_checkpoint_error "]}," VCR HttpStubbingAdapters Typhoeus create_stubs_checkpoint":{"type":"method","name":"create_stubs_checkpoint","children":[],"call":[" checkpoints []= "," Typhoeus Hydra  stubs dup "," Typhoeus Hydra  stubs "," checkpoints "]}," VCR HttpStubbingAdapters Typhoeus stub_requests":{"type":"method","name":"stub_requests","children":[],"call":[" Typhoeus Hydra  stub and_return "," Typhoeus Response  new "," normalized_response_headers ","response body ","response status code ","response status ","responses map "," Typhoeus Hydra  stub "," request_hash ","request_matcher uri ","request_matcher method "," grouped_responses each "," grouped_responses ","response headers "]}," VCR HttpStubbingAdapters Typhoeus ignored_hosts=":{"type":"method","name":"ignored_hosts=","children":[],"call":[" Typhoeus Hydra  ignore_hosts= "]}," VCR HttpStubbingAdapters Typhoeus http_connections_allowed?":{"type":"method","name":"http_connections_allowed?","children":[],"call":[" Typhoeus Hydra  allow_net_connect? ! ! "," Typhoeus Hydra  allow_net_connect? ! "," Typhoeus Hydra  allow_net_connect? "]}," VCR HttpStubbingAdapters Typhoeus http_connections_allowed=":{"type":"method","name":"http_connections_allowed=","children":[],"call":[" Typhoeus Hydra  allow_net_connect= "]}," VCR HttpStubbingAdapters MultiObjectProxy method_return_val_important?":{"type":"method","name":"method_return_val_important?","children":[],"call":["method_name to_s =~ ","method_name to_s ","method_name == "]}," VCR HttpStubbingAdapters MultiObjectProxy method_missing":{"type":"method","name":"method_missing","children":[],"call":[" Kernel  raise ","uniq_return_vals inspect ","uniq_return_vals first ","uniq_return_vals size == ","uniq_return_vals size "," method_return_val_important? ","(send\n  (lvar :responding_proxied_objects) :map) uniq ","o __send__ ","responding_proxied_objects map ","responding_proxied_objects empty? ","o respond_to? "," proxied_objects select "," proxied_objects ","(send\n  (lvar :responding_proxied_objects) :map) uniq  inspect ","(send\n  (lvar :responding_proxied_objects) :map) uniq  first ","(send\n  (lvar :responding_proxied_objects) :map) uniq  size == ","(send\n  (lvar :responding_proxied_objects) :map) uniq  size "]}," VCR HttpStubbingAdapters MultiObjectProxy respond_to?":{"type":"method","name":"respond_to?","children":[],"call":["o respond_to? "," proxied_objects any? "," proxied_objects "]}," VCR HttpStubbingAdapters MultiObjectProxy initialize":{"type":"method","name":"initialize","children":[],"call":[" Kernel  raise "," ArgumentError  new ","o nil? ","objects any? ","objects empty? "]}," VCR HttpStubbingAdapters MultiObjectProxy for":{"type":"method","name":"for","children":[],"call":[]}," VCR HttpStubbingAdapters Faraday request_matcher_with_normalized_uri":{"type":"method","name":"request_matcher_with_normalized_uri","children":[],"call":["RequestMatcher  new ","matcher match_attributes ","request uri= ","request uri gsub ","request uri ","matcher request dup ","matcher request ","matcher uri include? ","matcher uri ","matcher uri is_a? ","matcher request dup  uri= ","matcher request dup  uri gsub ","matcher request dup  uri ","matcher matcher request dup  dup ","matcher matcher request dup  "]}," VCR HttpStubbingAdapters Faraday hash_of_arrays":{"type":"method","name":"hash_of_arrays","children":[],"call":["h []= ","Hash  new "]}," VCR HttpStubbingAdapters Faraday stub_queue_dup":{"type":"method","name":"stub_queue_dup","children":[],"call":["dup []= ","v dup "," stub_queues each "," stub_queues "," hash_of_arrays "," hash_of_arrays  []= ","v  hash_of_arrays  "]}," VCR HttpStubbingAdapters Faraday stub_queues":{"type":"method","name":"stub_queues","children":[],"call":[" hash_of_arrays "]}," VCR HttpStubbingAdapters Faraday checkpoints":{"type":"method","name":"checkpoints","children":[],"call":[]}," VCR HttpStubbingAdapters Faraday ignored_hosts":{"type":"method","name":"ignored_hosts","children":[],"call":[]}," VCR HttpStubbingAdapters Faraday version":{"type":"method","name":"version","children":[],"call":[]}," VCR HttpStubbingAdapters Faraday reset!":{"type":"method","name":"reset!","children":[],"call":[" remove_instance_variable "," instance_variables each "," instance_variables "]}," VCR HttpStubbingAdapters Faraday stubbed_response_for":{"type":"method","name":"stubbed_response_for","children":[],"call":["queue first ","queue shift ","queue size > ","queue size "," stub_queues [] "," stub_queues "," stub_queues []  first "," stub_queues []  shift "," stub_queues []  size > "," stub_queues []  size "," stub_ stub_queues [] s [] "," stub_ stub_queues [] s "]}," VCR HttpStubbingAdapters Faraday restore_stubs_checkpoint":{"type":"method","name":"restore_stubs_checkpoint","children":[],"call":[" checkpoints delete "," checkpoints "]}," VCR HttpStubbingAdapters Faraday create_stubs_checkpoint":{"type":"method","name":"create_stubs_checkpoint","children":[],"call":[" checkpoints []= "," stub_queue_dup "," checkpoints "]}," VCR HttpStubbingAdapters Faraday stub_requests":{"type":"method","name":"stub_requests","children":[],"call":["queue << ","responses each "," stub_queues [] "," stub_queues "," request_matcher_with_normalized_uri "," grouped_responses each "," grouped_responses "," stub_queues []  << "," stub_ stub_queues [] s [] "," stub_ stub_queues [] s "," request_ request_matcher_with_normalized_uri _with_normalized_uri "]}," VCR HttpStubbingAdapters Faraday uri_should_be_ignored?":{"type":"method","name":"uri_should_be_ignored?","children":[],"call":[" ignored_hosts include? ","uri host "," ignored_hosts ","URI  parse ","uri respond_to? ","URI  parse  host ","URI  parse  respond_to? "]}," VCR HttpStubbingAdapters Faraday ignored_hosts=":{"type":"method","name":"ignored_hosts=","children":[],"call":[]}," VCR HttpStubbingAdapters Faraday http_connections_allowed?":{"type":"method","name":"http_connections_allowed?","children":[],"call":["@http_connections_allowed ! ! ","@http_connections_allowed ! "]}," VCR HttpStubbingAdapters FakeWeb ignored_hosts":{"type":"method","name":"ignored_hosts","children":[],"call":[]}," VCR HttpStubbingAdapters FakeWeb ignored_hosts=":{"type":"method","name":"ignored_hosts=","children":[],"call":[" update_fakeweb_allow_net_connect "]}," VCR HttpStubbingAdapters Excon RequestHandler raise_connections_disabled_error":{"type":"method","name":"raise_connections_disabled_error","children":[],"call":[" raise ","HttpConnectionNotAllowedError  new "," uri "," params [] "," params "]}," VCR HttpStubbingAdapters Excon RequestHandler normalize_header_key":{"type":"method","name":"normalize_header_key","children":[],"call":["(send\n  (send\n    (lvar :key) :split\n    (str \"-\")) :each) join ","w capitalize! ","key split each ","key split "]}," VCR HttpStubbingAdapters Excon RequestHandler normalized_headers":{"type":"method","name":"normalized_headers","children":[],"call":["normalized []= "," normalize_header_key ","v join ","v respond_to? ","headers each ","v join  join ","v join  respond_to? "]}," VCR HttpStubbingAdapters Excon RequestHandler vcr_response":{"type":"method","name":"vcr_response","children":[],"call":["VCR Response  new ","response body ","response headers ","VCR ResponseStatus  new ","response status "]}," VCR HttpStubbingAdapters Excon RequestHandler vcr_request":{"type":"method","name":"vcr_request","children":[],"call":["VCR Request  new "," params [] "," params "," uri ","headers delete "," params [] dup "," params [] dup  delete "]}," VCR HttpStubbingAdapters Excon RequestHandler http_interaction_for":{"type":"method","name":"http_interaction_for","children":[],"call":["VCR HTTPInteraction  new "," vcr_response "," vcr_request "]}," VCR HttpStubbingAdapters Excon RequestHandler uri":{"type":"method","name":"uri","children":[],"call":["uri << "," params [] "," params "," query "]}," VCR HttpStubbingAdapters Excon RequestHandler record_interaction":{"type":"method","name":"record_interaction","children":[],"call":["VCR  record_http_interaction "," http_interaction_for ","VCR HttpStubbingAdapters Excon  enabled? "," perform_real_request ","VCR  record_ http_interaction_for  ","  http_interaction_for _for "]}," VCR HttpStubbingAdapters Excon RequestHandler perform_real_request":{"type":"method","name":"perform_real_request","children":[],"call":["response attributes "," block_given? ","connection request "," params merge "," params "," Excon  new "," uri "," raise "," response_from_excon_error ","connection request  attributes "," Excon  new  request "," connection request _from_excon_error "]}," VCR HttpStubbingAdapters Excon RequestHandler http_connections_allowed?":{"type":"method","name":"http_connections_allowed?","children":[],"call":["VCR HttpStubbingAdapters Excon  http_connections_allowed? "]}," VCR HttpStubbingAdapters Excon RequestHandler stubbed_response":{"type":"method","name":"stubbed_response","children":[],"call":["@stubbed_response headers= "," normalized_headers ","@stubbed_response headers ","VCR HttpStubbingAdapters Excon  stubbed_response_for "," vcr_request ","stubbed_response status code ","stubbed_response status ","stubbed_response headers ","stubbed_response body ","VCR HttpStubbingAdapters Excon  stubbed_response_for  headers= ","@VCR HttpStubbingAdapters Excon  stubbed_response_for  headers= ","VCR HttpStubbingAdapters Excon  stubbed_response_for  headers ","@VCR HttpStubbingAdapters Excon  stubbed_response_for  headers ","VCR HttpStubbingAdapters Excon  VCR HttpStubbingAdapters Excon  stubbed_response_for _for ","VCR HttpStubbingAdapters Excon  stubbed_response_for  status code ","VCR HttpStubbingAdapters Excon  stubbed_response_for  status ","VCR HttpStubbingAdapters Excon  stubbed_response_for  body "]}," VCR HttpStubbingAdapters Excon RequestHandler request_should_be_ignored?":{"type":"method","name":"request_should_be_ignored?","children":[],"call":["VCR HttpStubbingAdapters Excon  uri_should_be_ignored? "," uri "]}," VCR HttpStubbingAdapters Excon RequestHandler handle":{"type":"method","name":"handle","children":[],"call":[" raise_connections_disabled_error "," record_interaction "," http_connections_allowed? "," stubbed_response "," perform_real_request "," request_should_be_ignored? "]}," VCR HttpStubbingAdapters Excon RequestHandler initialize":{"type":"method","name":"initialize","children":[],"call":[]}," VCR HttpStubbingAdapters Excon hash_of_arrays":{"type":"method","name":"hash_of_arrays","children":[],"call":["h []= ","Hash  new "]}," VCR HttpStubbingAdapters Excon stub_queue_dup":{"type":"method","name":"stub_queue_dup","children":[],"call":["dup []= ","v dup "," stub_queues each "," stub_queues "," hash_of_arrays "," hash_of_arrays  []= ","v  hash_of_arrays  "]}," VCR HttpStubbingAdapters Excon match_attributes_stack":{"type":"method","name":"match_attributes_stack","children":[],"call":[]}," VCR HttpStubbingAdapters Excon stub_queues":{"type":"method","name":"stub_queues","children":[],"call":[" hash_of_arrays "]}," VCR HttpStubbingAdapters Excon checkpoints":{"type":"method","name":"checkpoints","children":[],"call":[]}," VCR HttpStubbingAdapters Excon ignored_hosts":{"type":"method","name":"ignored_hosts","children":[],"call":[]}," VCR HttpStubbingAdapters Excon version":{"type":"method","name":"version","children":[],"call":[]}," VCR HttpStubbingAdapters Excon reset!":{"type":"method","name":"reset!","children":[],"call":[" remove_instance_variable "," instance_variables each "," instance_variables "]}," VCR HttpStubbingAdapters Excon stubbed_response_for":{"type":"method","name":"stubbed_response_for","children":[],"call":["queue first ","queue shift ","queue size > ","queue size "," stub_queues [] "," stub_queues ","request matcher "," match_attributes_stack last "," match_attributes_stack "," match_attributes_stack any? "," stub_queues []  first "," stub_queues []  shift "," stub_queues []  size > "," stub_queues []  size "," stub_ stub_queues [] s [] "," stub_ stub_queues [] s "]}," VCR HttpStubbingAdapters Excon restore_stubs_checkpoint":{"type":"method","name":"restore_stubs_checkpoint","children":[],"call":[" checkpoints delete "," checkpoints "," match_attributes_stack pop "," match_attributes_stack "]}," VCR HttpStubbingAdapters Excon create_stubs_checkpoint":{"type":"method","name":"create_stubs_checkpoint","children":[],"call":[" checkpoints []= "," stub_queue_dup "," checkpoints "]}," VCR HttpStubbingAdapters Excon stub_requests":{"type":"method","name":"stub_requests","children":[],"call":["queue << ","responses each "," stub_queues [] "," stub_queues "," grouped_responses each "," grouped_responses "," match_attributes_stack << "," match_attributes_stack "," stub_queues []  << "," stub_ stub_queues [] s [] "," stub_ stub_queues [] s "]}," VCR HttpStubbingAdapters Excon uri_should_be_ignored?":{"type":"method","name":"uri_should_be_ignored?","children":[],"call":[" ignored_hosts include? ","uri host "," ignored_hosts ","URI  parse ","uri respond_to? ","URI  parse  host ","URI  parse  respond_to? "]}," VCR HttpStubbingAdapters Excon ignored_hosts=":{"type":"method","name":"ignored_hosts=","children":[],"call":[]}," VCR HttpStubbingAdapters Excon http_connections_allowed?":{"type":"method","name":"http_connections_allowed?","children":[],"call":["@http_connections_allowed ! ! ","@http_connections_allowed ! "]}," VCR HttpStubbingAdapters Common grouped_responses":{"type":"method","name":"grouped_responses","children":[],"call":["responses [] << ","i response ","responses [] ","i request matcher ","i request ","http_interactions each ","h []= ","Hash  new "]}," VCR HttpStubbingAdapters Common parse_version":{"type":"method","name":"parse_version","children":[],"call":["v to_i ","version split map ","version split "]}," VCR HttpStubbingAdapters Common version_requirement":{"type":"method","name":"version_requirement","children":[],"call":["max_minor + "," parse_version "]}," VCR HttpStubbingAdapters Common restore_stubs_checkpoint":{"type":"method","name":"restore_stubs_checkpoint","children":[],"call":[" raise ","ArgumentError  new ","cassette inspect "," raise_no_checkpoint_error "," checkpoints delete "," checkpoints "," match_attributes_stack pop "," match_attributes_stack "]}," VCR HttpStubbingAdapters Common set_http_connections_allowed_to_default":{"type":"method","name":"set_http_connections_allowed_to_default","children":[],"call":[" http_connections_allowed= ","VCR Config  allow_http_connections_when_no_cassette? "]}," VCR HttpStubbingAdapters Common exclusively_enabled":{"type":"method","name":"exclusively_enabled","children":[],"call":["VCR HttpStubbingAdapters Common  exclusively_enabled_adapter= "]}," VCR HttpStubbingAdapters Common enabled?":{"type":"method","name":"enabled?","children":[],"call":["(nil) include? ","VCR HttpStubbingAdapters Common  exclusively_enabled_adapter "]}," VCR HttpStubbingAdapters Common included":{"type":"method","name":"included","children":[],"call":[" adapters << "," adapters "]}," VCR HttpStubbingAdapters Common adapters":{"type":"method","name":"adapters","children":[],"call":[]}," VCR HttpStubbingAdapters Common add_vcr_info_to_exception_message":{"type":"method","name":"add_vcr_info_to_exception_message","children":[{"type":"method","name":"initialize","children":[],"asgn":[],"call":["message + + ","message + "]}],"call":["message + + ","message + ","exception_klass class_eval "]}," VCR HttpStubbingAdapters FakeWeb const_missing":{"type":"method","name":"const_missing","children":[],"call":[]}," VCR HttpStubbingAdapters Common ignore_localhost?":{"type":"method","name":"ignore_localhost?","children":[],"call":["VCR Config  ignore_localhost? "]}," VCR Config http_stubbing_library=":{"type":"method","name":"http_stubbing_library=","children":[],"call":[" stub_with "," warn ","library inspect "]}," VCR Config uri_should_be_ignored?":{"type":"method","name":"uri_should_be_ignored?","children":[],"call":[" ignored_hosts include? ","uri host "," ignored_hosts ","URI  parse ","uri respond_to? ","URI  parse  host ","URI  parse  respond_to? "]}," VCR Config filter_sensitive_data":{"type":"method","name":"filter_sensitive_data","children":[],"call":["interaction filter! "," call_block "," before_playback "," before_record "]}," VCR Config allow_http_connections_when_no_cassette?":{"type":"method","name":"allow_http_connections_when_no_cassette?","children":[],"call":["@allow_http_connections_when_no_cassette ! ! ","@allow_http_connections_when_no_cassette ! "]}," VCR Config allow_http_connections_when_no_cassette=":{"type":"method","name":"allow_http_connections_when_no_cassette=","children":[],"call":["VCR  http_stubbing_adapter set_http_connections_allowed_to_default ","VCR  http_stubbing_adapter "," http_stubbing_libraries any? "," http_stubbing_libraries "]}," VCR Config ignored_hosts":{"type":"method","name":"ignored_hosts","children":[],"call":[]}," VCR Config ignore_hosts":{"type":"method","name":"ignore_hosts","children":[],"call":["VCR  http_stubbing_adapter ignored_hosts= "," ignored_hosts ","VCR  http_stubbing_adapter "," http_stubbing_libraries any? "," http_stubbing_libraries "," ignored_hosts push uniq! "," ignored_hosts push "]}," VCR Config http_stubbing_libraries":{"type":"method","name":"http_stubbing_libraries","children":[],"call":[]}," VCR Config stub_with":{"type":"method","name":"stub_with","children":[],"call":[]}," VCR Cassette invoke_hook":{"type":"method","name":"invoke_hook","children":[],"call":["i ignored? ","VCR Config  invoke_hook "," tag ","interactions delete_if ","(send\n  (send\n    (lvar :i) :hook_aware) :tap) ignored? ","VCR  configuration invoke_hook ","VCR  configuration ","i hook_aware tap ","i hook_aware ","VCR  configuration invoke_tagged_hook "]}," VCR Cassette merged_interactions":{"type":"method","name":"merged_interactions","children":[],"call":["old_interactions + "," new_recorded_interactions ","new_request_matchers include? ","i request matcher ","i request ","old_interactions reject ","Set  new "," new_recorded_interactions map "," match_requests_on "," should_remove_matching_existing_interactions? "," recorded_interactions ","new_interaction_list response_for ","HTTPInteractionList  new "," previously_recorded_interactions ","new_interaction_list has_interaction_matching? "," up_to_date_interactions + "," up_to_date_interactions "," should_remove_unused_interactions? "," recorded_interactions  + "," previously_recorded_interactions  + "," recorded_interactions  reject "," previously_recorded_interactions  reject ","HTTPInteractionList  new  response_for ","HTTPInteractionList  new  has_interaction_matching? "]}," VCR Cassette should_remove_matching_existing_interactions?":{"type":"method","name":"should_remove_matching_existing_interactions?","children":[],"call":[" record_mode == "," record_mode "]}," VCR Cassette should_stub_requests?":{"type":"method","name":"should_stub_requests?","children":[],"call":[" record_mode != "," record_mode "]}," VCR Cassette should_re_record?":{"type":"method","name":"should_re_record?","children":[],"call":["InternetConnection  available? ","File  stat mtime + < ","Time  now ","File  stat mtime + ","File  stat mtime ","File  stat "," file ","File  exist? "," log ","value ! ","(send\n  (send\n    (lvar :previously_recorded_at) :+\n    (ivar :@re_record_interval)) :<\n  (lvar :now)) tap ","previously_recorded_at + < ","previously_recorded_at + "," earliest_interaction_recorded_at "," earliest_interaction_recorded_at + < "," earliest_interaction_recorded_at + "," originally_recorded_at ","(send\n  (send\n    (send nil :originally_recorded_at) :+\n    (ivar :@re_record_interval)) :<\n  (lvar :now)) tap "," originally_recorded_at + < "," originally_recorded_at + ","record_mode == ","Time  Time  now  ","(send\n  (send\n    (lvar :previously_recorded_at) :+\n    (ivar :@re_record_interval)) :<\n  (lvar :Time  now )) tap ","(send\n  (send\n    (lvar : earliest_interaction_recorded_at ) :+\n    (ivar :@re_record_interval)) :<\n  (lvar :now)) tap "," earliest_interaction_recorded_at  + < "," earliest_interaction_recorded_at  + ","(send\n  (send\n    (send nil :originally_recorded_at) :+\n    (ivar :@re_record_interval)) :<\n  (lvar :Time  now )) tap "]}," VCR Cassette update_content_length_header?":{"type":"method","name":"update_content_length_header?","children":[],"call":[]}," VCR Cassette Reader binding_for_variables":{"type":"method","name":"binding_for_variables","children":[],"call":[" binding "," variables_object instance_eval "," variables_object "]}," VCR Cassette Reader variables_object":{"type":"method","name":"variables_object","children":[],"call":["@@struct_cache [] new "," erb_variables values "," erb_variables ","@@struct_cache [] "," erb_variables keys "]}," VCR Cassette Reader template":{"type":"method","name":"template","children":[],"call":["ERB  new "," file_content "]}," VCR Cassette Reader file_content":{"type":"method","name":"file_content","children":[],"call":["File  read "]}," VCR Cassette Reader erb_variables":{"type":"method","name":"erb_variables","children":[],"call":["@erb is_a? "]}," VCR Cassette Reader use_erb?":{"type":"method","name":"use_erb?","children":[],"call":["@erb ! ! ","@erb ! "]}," VCR Cassette Reader handle_name_error":{"type":"method","name":"handle_name_error","children":[],"call":[" raise ","MissingERBVariableError  new ","(str \"The ERB in the \") + ","example_hash inspect ","e name ","(or\n  (send nil :erb_variables)\n  (hash)) merge "," erb_variables ","Errors MissingERBVariableError  new ","(or\n  (send nil :erb_variables)\n  (hash)) merge  inspect "]}," VCR Cassette Reader read":{"type":"method","name":"read","children":[],"call":[" handle_name_error "," template result "," template "," binding_for_variables "," erb_variables "," file_content "," use_erb? ","  binding_for_variables _for_variables "]}," VCR Cassette Reader initialize":{"type":"method","name":"initialize","children":[],"call":[]}," VCR HttpStubbingAdapters Excon RequestHandler query":{"type":"method","name":"query","children":[],"call":["qry chop! ","qry << << << << ","qry << << << ","CGI  escape ","value to_s ","qry << << ","qry << ","key to_s ","values nil? "," params [] "," params "]}," VCR HttpStubbingAdapters Excon RequestHandler response_from_excon_error":{"type":"method","name":"response_from_excon_error","children":[],"call":[" warn ","error inspect "," response_from_excon_error ","error socket_error ","error respond_to? ","error response "]}," VCR HttpStubbingAdapters Typhoeus after_adapters_loaded":{"type":"method","name":"after_adapters_loaded","children":[],"call":[" WebMock HttpLibAdapters TyphoeusAdapter  disable! "]}," VCR HttpStubbingAdapters Faraday normalize_uri":{"type":"method","name":"normalize_uri","children":[],"call":["uri gsub "]}," VCR HttpStubbingAdapters Common request_matcher_with_normalized_uri":{"type":"method","name":"request_matcher_with_normalized_uri","children":[],"call":["RequestMatcher  new ","matcher match_attributes ","request uri= ","matcher request dup ","matcher request ","matcher request uri != ","matcher request uri "," normalize_uri ","matcher request dup  uri= ","matcher matcher request dup  dup ","matcher matcher request dup  ","matcher matcher request dup  uri != ","matcher matcher request dup  uri "]}," VCR HttpStubbingAdapters Common normalize_uri":{"type":"method","name":"normalize_uri","children":[],"call":[]}," VCR HttpStubbingAdapters Common hash_of_arrays":{"type":"method","name":"hash_of_arrays","children":[],"call":["h []= ","Hash  new "]}," VCR HttpStubbingAdapters Common stub_queue_dup":{"type":"method","name":"stub_queue_dup","children":[],"call":["dup []= ","v dup "," stub_queues each "," stub_queues "," hash_of_arrays "," hash_of_arrays  []= ","v  hash_of_arrays  "]}," VCR HttpStubbingAdapters Common match_attributes_stack":{"type":"method","name":"match_attributes_stack","children":[],"call":[]}," VCR HttpStubbingAdapters Common stub_queues":{"type":"method","name":"stub_queues","children":[],"call":[" hash_of_arrays "]}," VCR HttpStubbingAdapters Common checkpoints":{"type":"method","name":"checkpoints","children":[],"call":[]}," VCR HttpStubbingAdapters Common ignored_hosts":{"type":"method","name":"ignored_hosts","children":[],"call":[]}," VCR HttpStubbingAdapters Common reset!":{"type":"method","name":"reset!","children":[],"call":[" remove_instance_variable "," instance_variables each "," instance_variables "]}," VCR HttpStubbingAdapters Common stubbed_response_for":{"type":"method","name":"stubbed_response_for","children":[],"call":["queue first ","queue shift ","queue size > ","queue size "," stub_queues [] "," stub_queues ","request matcher "," match_attributes_stack last "," match_attributes_stack "," match_attributes_stack any? "," stub_queues []  first "," stub_queues []  shift "," stub_queues []  size > "," stub_queues []  size "," stub_ stub_queues [] s [] "," stub_ stub_queues [] s "]}," VCR HttpStubbingAdapters Common create_stubs_checkpoint":{"type":"method","name":"create_stubs_checkpoint","children":[],"call":[" checkpoints []= "," stub_queue_dup "," checkpoints "]}," VCR HttpStubbingAdapters Common stub_requests":{"type":"method","name":"stub_requests","children":[],"call":["queue << ","responses each "," stub_queues [] "," stub_queues "," request_matcher_with_normalized_uri "," grouped_responses each "," grouped_responses "," match_attributes_stack << "," match_attributes_stack "," stub_queues []  << "," stub_ stub_queues [] s [] "," stub_ stub_queues [] s ","  request_matcher_with_normalized_uri _with_normalized_uri "]}," VCR HttpStubbingAdapters Common uri_should_be_ignored?":{"type":"method","name":"uri_should_be_ignored?","children":[],"call":[" ignored_hosts include? ","uri host "," ignored_hosts ","URI  parse ","uri respond_to? ","URI  parse  host ","URI  parse  respond_to? "]}," VCR HttpStubbingAdapters Common ignored_hosts=":{"type":"method","name":"ignored_hosts=","children":[],"call":[]}," VCR HttpStubbingAdapters Common http_connections_allowed?":{"type":"method","name":"http_connections_allowed?","children":[],"call":["@http_connections_allowed ! ! ","@http_connections_allowed ! "]}," VCR HttpStubbingAdapters Common raise_no_checkpoint_error":{"type":"method","name":"raise_no_checkpoint_error","children":[],"call":[" raise ","ArgumentError  new ","cassette inspect "]}," VCR HttpStubbingAdapters Common after_adapters_loaded":{"type":"method","name":"after_adapters_loaded","children":[],"call":[]}," VCR initialize_ivars":{"type":"method","name":"initialize_ivars","children":[],"call":["Cassette Persisters  new ","Cassette Serializers  new ","LibraryHooks  new ","RequestIgnorer  new ","RequestMatcherRegistry  new ","Configuration  new "," initialize_fibers "]}," VCR HttpStubbingAdapters WebMock initialize_ivars":{"type":"method","name":"initialize_ivars","children":[],"call":[]}," VCR HttpStubbingAdapters FakeWeb initialize_ivars":{"type":"method","name":"initialize_ivars","children":[],"call":[]}," VCR Config initialize_ivars":{"type":"method","name":"initialize_ivars","children":[],"call":[]}," Ping pingecho":{"type":"method","name":"pingecho","children":[],"call":["s close ","TCPSocket  new "," timeout ","TCPSocket  new  cloTCPSocket  new e "]}," VCR URINormalizer normalize_uri":{"type":"method","name":"normalize_uri","children":[{"type":"method","name":"default_port","children":[],"asgn":[],"call":[]}],"call":[" uri= ","u to_s ","DEFAULT_PORTS  [] ","u scheme ","u port ","URI  parse "," uri "]}," VCR URINormalizer initialize":{"type":"method","name":"initialize","children":[],"call":[" normalize_uri "]}," VCR HttpStubbingAdapters Typhoeus ignore_localhost?":{"type":"method","name":"ignore_localhost?","children":[],"call":[" Typhoeus Hydra  ignore_localhost? ! ! "," Typhoeus Hydra  ignore_localhost? ! "," Typhoeus Hydra  ignore_localhost? "]}," VCR HttpStubbingAdapters Typhoeus ignore_localhost=":{"type":"method","name":"ignore_localhost=","children":[],"call":[" Typhoeus Hydra  ignore_localhost= "]}," VCR StatusMessageNormalizer normalize_status_message":{"type":"method","name":"normalize_status_message","children":[],"call":[" message= "," message == "," message "," message strip "]}," VCR StatusMessageNormalizer initialize":{"type":"method","name":"initialize","children":[],"call":[" normalize_status_message "]}," VCR HeaderNormalizer important_header_values":{"type":"method","name":"important_header_values","children":[],"call":["values - ","HEADERS_TO_SKIP  [] "]}," VCR BodyNormalizer normalize_body":{"type":"method","name":"normalize_body","children":[],"call":[" body= ","String  new "," body "]}," VCR BodyNormalizer initialize":{"type":"method","name":"initialize","children":[],"call":[" normalize_body "]}," VCR Middleware Faraday correctly_cased_headers":{"type":"method","name":"correctly_cased_headers","children":[],"call":["correctly_cased_hash []= ","(send\n  (send\n    (send\n      (lvar :key) :to_s) :split\n    (str \"-\")) :map) join ","segment capitalize ","key to_s split map ","key to_s split ","key to_s ","headers each ","(send\n  (send\n    (send\n      (lvar :(send\n  (send\n    (send\n      (lvar :key) :to_s) :split\n    (str \"-\")) :map) join ) :to_s) :split\n    (str \"-\")) :map) join ","(send\n  (send\n    (send\n      (lvar :key) :to_s) :split\n    (str \"-\")) :map) join  to_s split map ","(send\n  (send\n    (send\n      (lvar :key) :to_s) :split\n    (str \"-\")) :map) join  to_s split ","(send\n  (send\n    (send\n      (lvar :key) :to_s) :split\n    (str \"-\")) :map) join  to_s "]}," VCR HttpStubbingAdapters Faraday ignore_localhost?":{"type":"method","name":"ignore_localhost?","children":[],"call":["@ignore_localhost ! ! ","@ignore_localhost ! "]}," VCR Hooks args_for_callback":{"type":"method","name":"args_for_callback","children":[],"call":["args first ","(send\n  (lvar :args) :size) min ","callback arity ","args size ","callback arity < "]}," VCR Middleware Faraday normalized_headers":{"type":"method","name":"normalized_headers","children":[],"call":["hash []= ","values join ","headers each "]}," VCR cassette_serializers":{"type":"method","name":"cassette_serializers","children":[],"call":["Cassette Serializers  new "]}," VCR library_hooks":{"type":"method","name":"library_hooks","children":[],"call":["LibraryHooks  new "]}," VCR request_ignorer":{"type":"method","name":"request_ignorer","children":[],"call":["RequestIgnorer  new "]}," VCR request_matchers":{"type":"method","name":"request_matchers","children":[],"call":["RequestMatcherRegistry  new "]}," VCR real_http_connections_allowed?":{"type":"method","name":"real_http_connections_allowed?","children":[],"call":[" configuration allow_http_connections_when_no_cassette? "," configuration "," current_cassette recording? "," current_cassette ","(or\n  (send\n    (send nil :configuration) :allow_http_connections_when_no_cassette?)\n  (ivar :@turned_off)) ! ! ","(or\n  (send\n    (send nil :configuration) :allow_http_connections_when_no_cassette?)\n  (ivar :@turned_off)) ! ","(or\n  (send\n    (send nil :configuration) :allow_http_connections_when_no_cassette?)\n  (send\n    (send nil :turned_on?) :!)) ! ! ","(or\n  (send\n    (send nil :configuration) :allow_http_connections_when_no_cassette?)\n  (send\n    (send nil :turned_on?) :!)) ! "," turned_on? ! "," turned_on? "]}," VCR http_interactions":{"type":"method","name":"http_interactions","children":[],"call":[" current_cassette http_interactions "," current_cassette ","VCR Cassette HTTPInteractionList NullList  new "]}," VCR configuration":{"type":"method","name":"configuration","children":[],"call":["Configuration  new "]}," VCR configure":{"type":"method","name":"configure","children":[],"call":[" configuration "]}," VCR VersionChecker parse_version":{"type":"method","name":"parse_version","children":[],"call":["v to_i ","version split map ","version split "]}," VCR VersionChecker version_requirement":{"type":"method","name":"version_requirement","children":[],"call":["@max_minor + "]}," VCR VersionChecker compare_version":{"type":"method","name":"compare_version","children":[],"call":["@patch < ","@minor > ","@minor < ","@major > ","@major < "]}," VCR VersionChecker warn_about_too_high":{"type":"method","name":"warn_about_too_high","children":[],"call":["Kernel  warn ","(str \"You are using \") + + ","(str \"You are using \") + "," version_requirement ","(str \"You are using \") + + + ","VCR  version "]}," VCR VersionChecker raise_too_low_error":{"type":"method","name":"raise_too_low_error","children":[],"call":[" raise ","(str \"You are using \") + "," version_requirement "]}," VCR VersionChecker too_high?":{"type":"method","name":"too_high?","children":[],"call":["@comparison_result == "]}," VCR VersionChecker too_low?":{"type":"method","name":"too_low?","children":[],"call":["@comparison_result == "," compare_version == "," compare_version "]}," VCR VersionChecker check_version!":{"type":"method","name":"check_version!","children":[],"call":[" warn_about_too_high "," too_high? "," raise_too_low_error "," too_low? "]}," VCR VersionChecker initialize":{"type":"method","name":"initialize","children":[],"call":[" compare_version "," parse_version "]}," VCR Logger response_summary":{"type":"method","name":"response_summary","children":[],"call":["response body [] inspect ","response body [] ","response body ","response status code ","response status "]}," VCR Logger request_summary":{"type":"method","name":"request_summary","children":[],"call":["attributes join ","attributes << ","request headers inspect ","request headers ","request_matchers include? ","request body to_s [] inspect ","request body to_s [] ","request body to_s ","request body ","request uri ","request method "]}," VCR Logger log_prefix":{"type":"method","name":"log_prefix","children":[],"call":[]}," VCR Logger log":{"type":"method","name":"log","children":[],"call":["VCR  configuration debug_logger puts ","VCR  configuration debug_logger ","VCR  configuration ","indentation + + ","indentation + "," log_prefix ","   * ","@stream puts ","   *  + + ","   *  + "]}," VCR Hooks ClassMethods define_hook":{"type":"method","name":"define_hook","children":[],"call":[" hooks [] send ","FilteredHook  new "," hooks [] "," hooks "," define_method "," DefinedHooks  module_eval "," hooks [] [] << "," hooks [] [] ","args first "," raise ","ArgumentError  new ","args size ","args size > "," hooks [] [] send "]}," VCR Hooks has_hooks_for?":{"type":"method","name":"has_hooks_for?","children":[],"call":[" hooks [] any? "," hooks [] "," hooks "]}," VCR Hooks included":{"type":"method","name":"included","children":[],"call":[]}," VCR Hooks conditionally_invoke":{"type":"method","name":"conditionally_invoke","children":[],"call":[" call_block "," hook "," call_block ! ","f to_proc ","filters any? "," Array "," filters "," Array  any? ","  Array  "]}," VCR RSpec Metadata configure!":{"type":"method","name":"configure!","children":[],"call":["VCR  use_cassette ","vcr_cassette_name_for [] ","example metadata ","options delete ","options dup ","options is_a? ","example metadata [] ","config around ","v ! ! ","v ! "," lambda ","(send\n  (lvar :vcr_cassette_name_for) :[]\n  (lvar :example_group)) join ","metadata [] "," RSpec  configure ","VCR  eject_cassette ","example exception ! ! ","example exception ! ","example exception "," example "," respond_to? ","config after ","VCR  insert_cassette ","config before ","ex example ","ex respond_to? ","example_group any? ","metadata key? ","metadata [] empty? ","VCR RSpec Metadata  vcr_cassette_name_for ","vcr_options dup _for [] "," example  metadata ","ex example  metadata ","options dup  delete ","example metadata []  delete ","options dup  dup ","example metadata []  dup ","options dup  is_a? ","example metadata []  is_a? "," example  metadata [] ","ex example  metadata [] ","(send\n  (lvar :vcr_cassette_name_for) :[]\n  (lvar :metadata [] )) join ","(send\n  (lvar :vcr_cassette_name_for) :[]\n  (lvar : example _group)) join ","(send\n  (lvar :vcr_cassette_name_for) :[]\n  (lvar :ex example _group)) join ","(send\n  (lvar :vcr_options dup _for) :[]\n  (lvar :example_group)) join "," example  exception ! ! ","ex example  exception ! ! "," example  exception ! ","ex example  exception ! "," example  exception ","ex example  exception ","  example  "," ex example  ","ex  example  ","ex ex example  ","metadata []  any? "," example _group any? ","ex example _group any? ","VCR RSpec Metadata  vcr_options dup _for "]}," VCR HTTPInteraction HookAware filter_hash!":{"type":"method","name":"filter_hash!","children":[],"call":["hash []= ","hash delete ","k == "," filter_object! ","k dup ","hash keys each ","hash keys ","hash values "]}," VCR HTTPInteraction HookAware filter_object!":{"type":"method","name":"filter_object!","children":[],"call":[" filter_object! ","object each ","object respond_to? "," filter_hash! ","Hash  === ","object gsub! ","object include? "]}," VCR HTTPInteraction HookAware filter!":{"type":"method","name":"filter!","children":[],"call":[" filter_object! ","t to_s empty? ","t to_s ","(lvar :text) any? ","t empty? ","replacement_text to_s ","text to_s "]}," VCR HTTPInteraction HookAware ignored?":{"type":"method","name":"ignored?","children":[],"call":["@ignored ! ! ","@ignored ! "]}," VCR HTTPInteraction HookAware ignore!":{"type":"method","name":"ignore!","children":[],"call":[]}," VCR HTTPInteraction HookAware initialize":{"type":"method","name":"initialize","children":[],"call":[]}," VCR HTTPInteraction hook_aware":{"type":"method","name":"hook_aware","children":[],"call":["HookAware  new "]}," VCR HTTPInteraction from_hash":{"type":"method","name":"from_hash","children":[],"call":[]}," VCR HTTPInteraction to_hash":{"type":"method","name":"to_hash","children":[],"call":["OrderedHashSerializer  apply_to "," members ","(pair\n  (str \"request\")\n  (send\n    (send nil :request) :to_hash)) tap "," recorded_at httpdate "," recorded_at "," response to_hash "," response "," request to_hash "," request "]}," VCR HTTPInteraction initialize":{"type":"method","name":"initialize","children":[],"call":["Time  now "," recorded_at "]}," VCR ResponseStatus from_hash":{"type":"method","name":"from_hash","children":[],"call":[]}," VCR ResponseStatus to_hash":{"type":"method","name":"to_hash","children":[],"call":["OrderedHashSerializer  apply_to "," members ","(pair\n  (str \"code\")\n  (send nil :code)) tap "," message "," code "]}," VCR Response from_hash":{"type":"method","name":"from_hash","children":[],"call":[]}," VCR Response to_hash":{"type":"method","name":"to_hash","children":[],"call":["OrderedHashSerializer  apply_to "," members ","(pair\n  (str \"status\")\n  (send\n    (send nil :status) :to_hash)) tap "," http_version "," serializable_body "," headers "," status to_hash "," status "," body ","hash []= "," adapter_metadata "," adapter_metadata empty? "]}," VCR Request without_standard_port":{"type":"method","name":"without_standard_port","children":[],"call":["u to_s ","u port= ","(array\n  (str \"http\")\n  (int 80)) include? ","u port ","u scheme "," URI ","uri nil? "," parsed_uri "," URI  to_s "," parsed_uri  to_s "," URI  port= "," parsed_uri  port= ","(array\n  (str \"http\")\n  (int 80)) incl URI de? ","(array\n  (str \"http\")\n  (int 80)) incl parsed_uri de? "," URI  port "," parsed_uri  port "," URI  scheme "," parsed_uri  scheme "," URI ri nil? "," parsed_uri ri nil? "," parsed_ URI ri "," parsed_ parsed_uri ri "]}," VCR Request fiber_aware":{"type":"method","name":"fiber_aware","children":[],"call":[" extend "]}," VCR Request FiberAware to_proc":{"type":"method","name":"to_proc","children":[],"call":[" proceed "," lambda "]}," VCR Request FiberAware proceed":{"type":"method","name":"proceed","children":[],"call":["Fiber  yield "]}," VCR Request Typed real?":{"type":"method","name":"real?","children":[],"call":[" recordable? "," ignored? "]}," VCR Request Typed unhandled?":{"type":"method","name":"unhandled?","children":[],"call":[" type == "," type "]}," VCR Request Typed recordable?":{"type":"method","name":"recordable?","children":[],"call":[" type == "," type "]}," VCR Request Typed stubbed?":{"type":"method","name":"stubbed?","children":[],"call":[" type == "," type "," externally_stubbed? "," stubbed_by_vcr? "]}," VCR Request Typed ignored?":{"type":"method","name":"ignored?","children":[],"call":[" type == "," type "]}," VCR Request Typed initialize":{"type":"method","name":"initialize","children":[],"call":[]}," VCR Request from_hash":{"type":"method","name":"from_hash","children":[],"call":[]}," VCR Request to_hash":{"type":"method","name":"to_hash","children":[],"call":["OrderedHashSerializer  apply_to "," members ","(pair\n  (str \"method\")\n  (send\n    (send nil :method) :to_s)) tap "," headers "," serializable_body "," uri "," method to_s "," method "," body "]}," VCR Request initialize":{"type":"method","name":"initialize","children":[],"call":[" uri= "," without_standard_port "," uri "," method= "," method to_s downcase to_sym "," method to_s downcase "," method to_s "," method ","args pop ","args last == ","args last "]}," VCR OrderedHashSerializer apply_to":{"type":"method","name":"apply_to","children":[],"call":[]}," VCR OrderedHashSerializer each":{"type":"method","name":"each","children":[],"call":[" [] ","@ordered_keys each "," has_key? "]}," VCR Normalizers Body base_body_hash":{"type":"method","name":"base_body_hash","children":[],"call":["body encoding name ","body encoding "]}," VCR Normalizers Body serializable_body":{"type":"method","name":"serializable_body","children":[],"call":[" base_body_hash merge "," body "," base_body_hash ","Base64  encode64 ","VCR  configuration preserve_exact_body_bytes_for? ","VCR  configuration ","String  new "," body to_s "," base_String  new _hash merge "," String  new  "," base_String  new _hash ","VCR  configuration preserve_exact_String  new _bytes_for? "," String  new  to_s "]}," VCR Normalizers Body ClassMethods try_encode_string":{"type":"method","name":"try_encode_string","children":[],"call":[" warn ","(str \"VCR: got `\") + + ","(str \"VCR: got `\") + ","string encoding name ","string encoding ","e message ","e class name ","e class "," name split last downcase "," name split last "," name split "," name ","string encode ","string encoding name == ","string force_encoding ","encoding == ","encoding nil? "]}," VCR Normalizers Body ClassMethods force_encode_string":{"type":"method","name":"force_encode_string","children":[],"call":["string force_encoding "]}," VCR Normalizers Body ClassMethods body_from":{"type":"method","name":"body_from","children":[],"call":[" try_encode_string ","hash [] "," force_encode_string ","Base64  decode64 ","hash has_key? ","hash_or_string is_a? "," try_encode_Base64  decode64  "," force_encode_Base64  decode64  ","hash_or_Base64  decode64  is_a? "]}," VCR Normalizers Body included":{"type":"method","name":"included","children":[],"call":[]}," VCR RequestMatcherRegistry register_built_ins":{"type":"method","name":"register_built_ins","children":[],"call":["r1 headers == ","r2 headers ","r1 headers "," register ","r1 body == ","r2 body ","r1 body "," URI path == "," URI path "," URI ","r2 uri ","r1 uri "," URI host == "," URI host ","r1 uri == ","r1 method == ","r2 method ","r1 method "," normalize_uri == "," normalize_uri "," without_standard_port == "," without_standard_port ","r1 parsed_uri path == ","r2 parsed_uri path ","r2 parsed_uri ","r1 parsed_uri path ","r1 parsed_uri ","r1 parsed_uri host == ","r2 parsed_uri host ","r1 parsed_uri host ","VCR  configuration query_parser call == ","VCR  configuration query_parser call ","r2 parsed_uri query to_s ","r2 parsed_uri query ","VCR  configuration query_parser ","VCR  configuration ","r1 parsed_uri query to_s ","r1 parsed_uri query "," try_to_register_body_as_json ","r1 parsed_uri host chomp == ","r2 parsed_uri host chomp ","r1 parsed_uri host chomp ","r1 parsed_uri == "]}," VCR RequestMatcherRegistry raise_unregistered_matcher_error":{"type":"method","name":"raise_unregistered_matcher_error","children":[],"call":[" raise ","Errors UnregisteredMatcherError  new ","(str \"There is no matcher registered for \") + ","@registry keys map join ","@registry keys map ","@registry keys ","name inspect "]}," VCR RequestMatcherRegistry uri_without_param_matchers":{"type":"method","name":"uri_without_param_matchers","children":[],"call":["hash []= ","URIWithoutParamsMatcher  new ","params map ","Hash  new ","params map  map "]}," VCR RequestMatcherRegistry uri_without_params":{"type":"method","name":"uri_without_params","children":[],"call":[" uri_without_param_matchers [] "," uri_without_param_matchers ","uri_1 == ","uri query= ","(send\n  (send\n    (send\n      (lvar :uri) :query) :split\n    (str \"&\")) :tap) join ","p join ","params map! ","ignores include? ","p first ","params reject! ","key gsub! ","p split ","uri query split tap ","uri query split ","uri query "," URI tap "," URI ","r uri ","(lvar :request_1) map "," lambda ","i to_s ","ignores map "]}," VCR RequestMatcherRegistry []":{"type":"method","name":"[]","children":[],"call":[" raise_unregistered_matcher_error ","Matcher  new ","matcher respond_to? ","@registry fetch "]}," VCR RequestMatcherRegistry register":{"type":"method","name":"register","children":[],"call":["@registry []= ","Matcher  new "," warn ","name inspect ","@registry has_key? "]}," VCR RequestMatcherRegistry initialize":{"type":"method","name":"initialize","children":[],"call":[" register_built_ins "]}," VCR RequestMatcherRegistry URIWithoutParamsMatcher to_proc":{"type":"method","name":"to_proc","children":[],"call":[" call "," lambda "]}," VCR RequestMatcherRegistry URIWithoutParamsMatcher call":{"type":"method","name":"call","children":[],"call":[" partial_uri_from == "," partial_uri_from "]}," VCR RequestMatcherRegistry URIWithoutParamsMatcher partial_uri_from":{"type":"method","name":"partial_uri_from","children":[],"call":["uri query= ","(send\n  (send\n    (send\n      (lvar :uri) :query) :split\n    (str \"&\")) :tap) join ","p join ","params map! "," params_to_ignore include? ","p first "," params_to_ignore ","params reject! ","key gsub! ","p split ","uri query split tap ","uri query split ","uri query "," URI tap "," URI ","request uri ","request parsed_uri tap ","request parsed_uri ","uri query empty? "]}," VCR RequestMatcherRegistry Matcher matches?":{"type":"method","name":"matches?","children":[],"call":[" callable call "," callable "]}," VCR RequestIgnorer ignored_hosts":{"type":"method","name":"ignored_hosts","children":[],"call":["Set  new "]}," VCR RequestIgnorer ignore?":{"type":"method","name":"ignore?","children":[],"call":[" invoke_hook any? "," invoke_hook "," ignored_hosts include? "," URI host "," URI ","request uri "," ignored_hosts "]}," VCR RequestIgnorer ignore_hosts":{"type":"method","name":"ignore_hosts","children":[],"call":[" ignored_hosts merge "," ignored_hosts "]}," VCR RequestIgnorer ignore_localhost=":{"type":"method","name":"ignore_localhost=","children":[],"call":["LOCALHOST_ALIASES  include? "," ignored_hosts reject! "," ignored_hosts "," ignore_hosts "]}," VCR RequestIgnorer initialize":{"type":"method","name":"initialize","children":[],"call":[" ignored_hosts include? "," URI host "," URI ","request uri "," ignored_hosts "," ignore_request ","request parsed_uri host ","request parsed_uri "," ignored_request parsed_uri host s include? "," URI request parsed_uri host  "," ignored_request parsed_uri host s ","request parsed_uri request parsed_uri host  "]}," VCR RequestHandler log_prefix":{"type":"method","name":"log_prefix","children":[],"call":[" library_name "]}," VCR RequestHandler request_summary":{"type":"method","name":"request_summary","children":[],"call":[" vcr_request ","VCR  configuration default_cassette_options [] ","VCR  configuration default_cassette_options ","VCR  configuration ","cass match_requests_on ","VCR  current_cassette ","VCR  configuration default_VCR  current_cassette ette_options [] ","VCR  configuration default_VCR  current_cassette ette_options ","VCR  current_cassette  match_requests_on ","VCR  current_VCR  current_cassette ette "]}," VCR RequestHandler on_unhandled_request":{"type":"method","name":"on_unhandled_request","children":[],"call":[" raise ","VCR Errors UnhandledHTTPRequestError  new "," vcr_request "]}," VCR RequestHandler on_recordable_request":{"type":"method","name":"on_recordable_request","children":[],"call":[]}," VCR RequestHandler on_stubbed_request":{"type":"method","name":"on_stubbed_request","children":[],"call":[]}," VCR RequestHandler on_ignored_request":{"type":"method","name":"on_ignored_request","children":[],"call":[]}," VCR RequestHandler library_name":{"type":"method","name":"library_name","children":[],"call":[" class name split [] downcase to_sym "," class name split [] downcase "," class name split [] "," class name split "," class name "," class "]}," VCR RequestHandler stubbed_response":{"type":"method","name":"stubbed_response","children":[],"call":["VCR  http_interactions response_for "," vcr_request ","VCR  http_interactions "]}," VCR RequestHandler has_response_stub?":{"type":"method","name":"has_response_stub?","children":[],"call":["VCR  http_interactions has_interaction_matching? "," vcr_request ","VCR  http_interactions "," stubbed_response "]}," VCR RequestHandler disabled?":{"type":"method","name":"disabled?","children":[],"call":["VCR  library_hooks disabled? "," library_name ","VCR  library_hooks "]}," VCR RequestHandler should_ignore?":{"type":"method","name":"should_ignore?","children":[],"call":["VCR  request_ignorer ignore? "," vcr_request ","VCR  request_ignorer "," disabled? "]}," VCR RequestHandler invoke_after_request_hook":{"type":"method","name":"invoke_after_request_hook","children":[],"call":["VCR  configuration invoke_hook ","VCR  configuration "," disabled? "," vcr_request "]}," VCR RequestHandler invoke_before_request_hook":{"type":"method","name":"invoke_before_request_hook","children":[],"call":["VCR  configuration invoke_hook ","VCR  configuration ","Request Typed  new "," request_type "," vcr_request ","VCR  configuration has_hooks_for? ! ","VCR  configuration has_hooks_for? "," disabled? "]}," VCR RequestHandler request_type":{"type":"method","name":"request_type","children":[],"call":["VCR  real_http_connections_allowed? "," has_response_stub? "," should_ignore? "," externally_stubbed? "]}," VCR RequestHandler set_typed_request_for_after_hook":{"type":"method","name":"set_typed_request_for_after_hook","children":[],"call":["Request Typed  new "," vcr_request "]}," VCR RequestHandler handle":{"type":"method","name":"handle","children":[],"call":[" send "," set_typed_request_for_after_hook "," log "," request_summary "," request_type "," invoke_before_request_hook "," disabled? "," on_connection_not_allowed "," on_recordable_request ","VCR  real_http_connections_allowed? "," on_stubbed_request "," stubbed_response "," on_ignored_request "," should_ignore? "]}," VCR Middleware Rack cassette_arguments":{"type":"method","name":"cassette_arguments","children":[],"call":["arguments options ","arguments name "," call_block ","CassetteArguments  new ","CassetteArguments  new  options ","CassetteArguments  new  name "]}," VCR Middleware Faraday RequestHandler invoke_after_request_hook":{"type":"method","name":"invoke_after_request_hook","children":[],"call":["VCR  library_hooks exclusive_hook= ","VCR  library_hooks "]}," VCR Middleware Faraday RequestHandler on_recordable_request":{"type":"method","name":"on_recordable_request","children":[],"call":[" invoke_after_request_hook "," response_for "," delay_finishing? ","VCR  record_http_interaction ","VCR HTTPInteraction  new "," vcr_request "," app call on_complete "," app call "," env "," app ","response on_complete "," restore_body_from_chunks "," env request "," env request stream_response? ","  app call _for "," app call  on_complete "," env request stream_ app call ? "]}," VCR Middleware Faraday RequestHandler on_stubbed_request":{"type":"method","name":"on_stubbed_request","children":[],"call":[" env []= "," env ","faraday_response finish "," env [] "," Faraday Response  new "," env update "," stubbed_response body "," stubbed_response "," stubbed_response status code "," stubbed_response status ","headers update "," stubbed_response headers "," Faraday Utils Headers  new "," Faraday Response  new  finish "]}," VCR Middleware Faraday RequestHandler on_ignored_request":{"type":"method","name":"on_ignored_request","children":[],"call":[" app call "," env "," app "," response_for ","  app call _for "]}," VCR Middleware Faraday RequestHandler response_for":{"type":"method","name":"response_for","children":[],"call":["VCR Response  new ","response body ","response headers ","VCR ResponseStatus  new ","response status ","env [] "," raw_body_from ","response reason_phrase ","response respond_to? ","env []  body ","env []  headers ","env []  status ","env []  reason_phrase ","response response reason_phrase _phrase ","env []  respond_to? "]}," VCR Middleware Faraday RequestHandler vcr_request":{"type":"method","name":"vcr_request","children":[],"call":["VCR Request  new "," env [] "," env "," env [] to_s "," raw_body_from "]}," VCR Middleware Faraday RequestHandler delay_finishing?":{"type":"method","name":"delay_finishing?","children":[],"call":[" env [] ! ! "," env [] ! "," env [] "," env "]}," VCR Middleware Faraday RequestHandler handle":{"type":"method","name":"handle","children":[],"call":[" invoke_after_request_hook "," response_for "," env "," delay_finishing? ","VCR  library_hooks exclusive_hook= ","VCR  library_hooks "," collect_chunks "," env request stream_response? "," env request "]}," VCR Middleware Faraday RequestHandler initialize":{"type":"method","name":"initialize","children":[],"call":[]}," VCR Middleware Faraday initialize":{"type":"method","name":"initialize","children":[],"call":[]}," VCR LibraryHooks exclusively_enabled":{"type":"method","name":"exclusively_enabled","children":[],"call":[" exclusive_hook= "]}," VCR LibraryHooks disabled?":{"type":"method","name":"disabled?","children":[],"call":["(nil) include? ! ","(nil) include? "," exclusive_hook "]}," WebMock net_connect_allowed_with_vcr?":{"type":"method","name":"net_connect_allowed_with_vcr?","children":[],"call":[" net_connect_allowed_without_vcr? ","VCR  turned_on? "]}," VCR LibraryHooks WebMock vcr_response_from":{"type":"method","name":"vcr_response_from","children":[],"call":[]}," VCR LibraryHooks WebMock RequestHandler on_stubbed_request":{"type":"method","name":"on_stubbed_request","children":[],"call":[" stubbed_response headers "," stubbed_response "," stubbed_response status message "," stubbed_response status "," stubbed_response status code to_i "," stubbed_response status code "," stubbed_response body "]}," VCR LibraryHooks WebMock RequestHandler on_unhandled_request":{"type":"method","name":"on_unhandled_request","children":[],"call":[" invoke_after_request_hook "]}," VCR LibraryHooks WebMock RequestHandler request_headers":{"type":"method","name":"request_headers","children":[],"call":[" request headers "," request ","headers delete "," request headers dup tap "," request headers dup "]}," VCR LibraryHooks WebMock RequestHandler vcr_request":{"type":"method","name":"vcr_request","children":[],"call":["VCR Request  new "," request_headers "," request body "," request "," request uri to_s "," request uri "," request method "," vcr_request_from "," vcr_request_for "]}," VCR LibraryHooks WebMock RequestHandler set_typed_request_for_after_hook":{"type":"method","name":"set_typed_request_for_after_hook","children":[],"call":[" request instance_variable_set "," request "]}," VCR LibraryHooks WebMock RequestHandler initialize":{"type":"method","name":"initialize","children":[],"call":[]}," Typhoeus allow_net_connect_with_vcr?":{"type":"method","name":"allow_net_connect_with_vcr?","children":[],"call":[" allow_net_connect_without_vcr? ","VCR  turned_on? "]}," VCR LibraryHooks Typhoeus vcr_response_from":{"type":"method","name":"vcr_response_from","children":[],"call":["VCR Response  new ","response effective_url ","response http_version ","response body ","response headers ","VCR ResponseStatus  new ","response status_message ","response code "]}," VCR LibraryHooks Typhoeus RequestHandler stubbed_response_headers":{"type":"method","name":"stubbed_response_headers","children":[],"call":["hash []= ","values first ","values size == ","values size "," stubbed_response headers each "," stubbed_response headers "," stubbed_response "," tap "]}," VCR LibraryHooks Typhoeus RequestHandler on_stubbed_request":{"type":"method","name":"on_stubbed_request","children":[],"call":[" Typhoeus Response  new "," stubbed_response body "," stubbed_response "," stubbed_response_headers "," stubbed_response status message "," stubbed_response status "," stubbed_response status code "," stubbed_response http_version "," hydra_mock "]}," VCR LibraryHooks Typhoeus RequestHandler on_unhandled_request":{"type":"method","name":"on_unhandled_request","children":[],"call":[" invoke_after_request_hook "]}," VCR LibraryHooks Typhoeus RequestHandler set_typed_request_for_after_hook":{"type":"method","name":"set_typed_request_for_after_hook","children":[],"call":[" request instance_variable_set "," request "]}," VCR LibraryHooks Typhoeus RequestHandler vcr_request":{"type":"method","name":"vcr_request","children":[],"call":["VCR Request  new "," request headers "," request "," request body "," request url "," request method "," vcr_request_from "," request options fetch "," request options "," request_body "," request encoded_body "]}," VCR LibraryHooks Typhoeus RequestHandler initialize":{"type":"method","name":"initialize","children":[],"call":["request block_connection= ","VCR  turned_on? "]}," VCR LibraryHooks Faraday BuilderInstanceExtension insert_vcr_middleware":{"type":"method","name":"insert_vcr_middleware","children":[],"call":[" insert_before ","h klass < ","h klass "," handlers index "," handlers ","h klass == "," handlers any? "," warn_about_after_adapter_middleware "," handlers size "]}," VCR LibraryHooks Faraday BuilderInstanceExtension lock!":{"type":"method","name":"lock!","children":[],"call":[" insert_vcr_middleware "]}," VCR LibraryHooks Faraday BuilderClassExtension new":{"type":"method","name":"new","children":[],"call":[" extend "]}," FakeWeb allow_net_connect_with_vcr?":{"type":"method","name":"allow_net_connect_with_vcr?","children":[],"call":[" allow_net_connect_without_vcr? ","VCR  turned_on? "]}," VCR LibraryHooks FakeWeb RequestHandler vcr_response_from":{"type":"method","name":"vcr_response_from","children":[],"call":["VCR Response  new ","response http_version ","response body ","response to_hash ","VCR ResponseStatus  new ","response message ","response code to_i ","response code "]}," VCR LibraryHooks FakeWeb RequestHandler vcr_request":{"type":"method","name":"vcr_request","children":[],"call":["VCR Request  new "," request to_hash "," request "," request body "," request_body "," uri "," request method downcase to_sym "," request method downcase "," request method "," request_method "]}," VCR LibraryHooks FakeWeb RequestHandler with_exclusive_fakeweb_stub":{"type":"method","name":"with_exclusive_fakeweb_stub","children":[],"call":[" FakeWeb Registry  instance uri_map= "," FakeWeb Registry  instance "," FakeWeb  register_uri "," response_hash "," FakeWeb  clean_registry "," FakeWeb Registry  instance uri_map dup "," FakeWeb Registry  instance uri_map "]}," VCR LibraryHooks FakeWeb RequestHandler response_hash":{"type":"method","name":"response_hash","children":[],"call":["(or\n  (send\n    (lvar :response) :headers)\n  (hash)) merge ","response status message ","response status ","response status code to_s ","response status code ","response body ","response headers "]}," VCR LibraryHooks FakeWeb RequestHandler uri":{"type":"method","name":"uri","children":[],"call":[" FakeWeb Utility  request_uri_as_string "," request "," net_http "]}," VCR LibraryHooks FakeWeb RequestHandler perform_request":{"type":"method","name":"perform_request","children":[],"call":[" response_block call "," response_block ","response extend ","VCR  record_http_interaction ","VCR HTTPInteraction  new "," vcr_request "," vcr_response_from "," net_http request_without_vcr "," request_body "," request "," net_http "," block "," request instance_variable_set "," recursive_request_handler "]}," VCR LibraryHooks FakeWeb RequestHandler on_ignored_request":{"type":"method","name":"on_ignored_request","children":[],"call":[" perform_request "," net_http started? "," net_http "]}," VCR LibraryHooks FakeWeb RequestHandler on_stubbed_request":{"type":"method","name":"on_stubbed_request","children":[],"call":[" perform_request "," with_exclusive_fakeweb_stub "," stubbed_response "]}," VCR LibraryHooks FakeWeb RequestHandler on_recordable_request":{"type":"method","name":"on_recordable_request","children":[],"call":[" perform_request "," net_http started? "," net_http "]}," VCR LibraryHooks FakeWeb RequestHandler invoke_after_request_hook":{"type":"method","name":"invoke_after_request_hook","children":[],"call":[" class already_seen_requests delete "," request object_id "," request "," class already_seen_requests "," class "]}," VCR LibraryHooks FakeWeb RequestHandler invoke_before_request_hook":{"type":"method","name":"invoke_before_request_hook","children":[],"call":[" class already_seen_requests << "," request object_id "," request "," class already_seen_requests "," class "," class already_seen_requests include? "]}," VCR LibraryHooks FakeWeb RequestHandler set_typed_request_for_after_hook":{"type":"method","name":"set_typed_request_for_after_hook","children":[],"call":["@request instance_variable_set "]}," VCR LibraryHooks FakeWeb RequestHandler request_type":{"type":"method","name":"request_type","children":[],"call":[]}," VCR LibraryHooks FakeWeb RequestHandler already_seen_requests":{"type":"method","name":"already_seen_requests","children":[],"call":["Set  new "]}," VCR LibraryHooks FakeWeb RequestHandler handle":{"type":"method","name":"handle","children":[],"call":[" invoke_after_request_hook "]}," VCR LibraryHooks FakeWeb RequestHandler initialize":{"type":"method","name":"initialize","children":[],"call":["request instance_variable_get ","(send\n  (array\n    (sym :@__vcr_request_type)\n    (str \"@__vcr_request_type\")) :&\n  (send\n    (lvar :request) :instance_variables)) any? ","(sym :@__vcr_request_type) & ","request instance_variables "]}," VCR LibraryHooks Excon RequestHandler normalized_headers":{"type":"method","name":"normalized_headers","children":[],"call":["normalized []= ","v join ","v respond_to? ","headers each "," normalize_header_key ","v join  join ","v join  respond_to? "]}," VCR LibraryHooks Excon RequestHandler vcr_response_from":{"type":"method","name":"vcr_response_from","children":[],"call":["VCR Response  new ","response body ","response headers ","VCR ResponseStatus  new ","response status "]}," VCR LibraryHooks Excon RequestHandler vcr_request":{"type":"method","name":"vcr_request","children":[],"call":["VCR Request  new "," params [] "," params "," uri ","headers delete "," params [] dup "," params [] dup  delete "]}," VCR LibraryHooks Excon RequestHandler http_interaction_for":{"type":"method","name":"http_interaction_for","children":[],"call":["VCR HTTPInteraction  new "," vcr_response_from "," vcr_request "," vcr_response "]}," VCR LibraryHooks Excon RequestHandler query":{"type":"method","name":"query","children":[],"call":["qry chop! ","qry << << << << ","qry << << << ","CGI  escape ","value to_s ","qry << << ","qry << ","key to_s ","values nil? "," params [] "," params "]}," VCR LibraryHooks Excon RequestHandler uri":{"type":"method","name":"uri","children":[],"call":[" query "," params [] "," params "]}," VCR LibraryHooks Excon RequestHandler on_recordable_request":{"type":"method","name":"on_recordable_request","children":[],"call":["VCR  record_http_interaction "," http_interaction_for "," perform_real_request ","VCR  record_ http_interaction_for  ","  http_interaction_for _for "]}," VCR LibraryHooks Excon RequestHandler perform_real_request":{"type":"method","name":"perform_real_request","children":[],"call":["response attributes "," raise "," block_given? "," vcr_response_from "," response_from_excon_error "," Excon  new request "," real_request_params "," Excon  new "," uri ","connection request "," params merge "," params "," new_connection request "," new_connection "," response_from_excon_error  attributes "," Excon  new request  attributes "," new_connection request  attributes "," vcr_ response_from_excon_error _from "," vcr_ Excon  new request _from "," vcr_ new_connection request _from ","  response_from_excon_error _from_excon_error ","  Excon  new request _from_excon_error ","  new_connection request _from_excon_error "," Excon  new  request "," new_ Excon  new  request "," new_ Excon  new  "]}," VCR LibraryHooks Excon RequestHandler real_request_params":{"type":"method","name":"real_request_params","children":[],"call":["p delete ","(sym :expects) each "," params merge tap "," params merge "," params "," scrub_params_from "]}," VCR LibraryHooks Excon RequestHandler response_from_excon_error":{"type":"method","name":"response_from_excon_error","children":[],"call":[" warn ","error inspect "," response_from_excon_error ","error socket_error ","error respond_to? ","error response "]}," VCR LibraryHooks Excon RequestHandler on_ignored_request":{"type":"method","name":"on_ignored_request","children":[],"call":[" perform_real_request "]}," VCR LibraryHooks Excon RequestHandler on_stubbed_request":{"type":"method","name":"on_stubbed_request","children":[],"call":[" stubbed_response status code "," stubbed_response status "," stubbed_response "," normalized_headers "," stubbed_response headers "," stubbed_response body "]}," VCR LibraryHooks Excon RequestHandler handle":{"type":"method","name":"handle","children":[],"call":[" invoke_after_request_hook "]}," VCR LibraryHooks Excon RequestHandler initialize":{"type":"method","name":"initialize","children":[],"call":[]}," VCR Errors UnhandledHTTPRequestError match_requests_on_suggestion":{"type":"method","name":"match_requests_on_suggestion","children":[],"call":["description_lines []= ","description_lines [] % ","description_lines [] "," suggestion_for ","num_remaining_interactions == ","num_remaining_interactions zero? ","VCR  current_cassette http_interactions remaining_unused_interaction_count ","VCR  current_cassette http_interactions ","VCR  current_cassette ","sum + ","c http_interactions remaining_unused_interaction_count ","c http_interactions "," current_cassettes inject "," current_cassettes ","VCR  current_cassette http_interactions remaining_unused_interaction_count  == ","VCR  current_cassette http_interactions remaining_unused_interaction_count  zero? "]}," VCR Errors UnhandledHTTPRequestError record_mode_suggestion":{"type":"method","name":"record_mode_suggestion","children":[],"call":["VCR  current_cassette record_mode ","VCR  current_cassette ","r == ","record_modes all? "," current_cassettes map "," current_cassettes "," current_cassettes map  all? "]}," VCR Errors UnhandledHTTPRequestError no_cassette_suggestions":{"type":"method","name":"no_cassette_suggestions","children":[],"call":[" suggestion_for ","(sym :use_a_cassette) map ","(sym :try_debug_logger) map "]}," VCR Errors UnhandledHTTPRequestError suggestions":{"type":"method","name":"suggestions","children":[],"call":["suggestions push "," match_requests_on_suggestion "," suggestion_for ","suggestions map! ","suggestions << ","cassette http_interactions has_used_interaction_matching? "," request ","cassette http_interactions "," record_mode_suggestion ","(sym :use_new_episodes) tap "," no_cassette_suggestions ","VCR  current_cassette ","(sym :try_debug_logger) tap "," has_used_interaction_matching? "," current_cassettes size == "," current_cassettes size "," current_cassettes ","VCR  current_cassette  http_interactions has_used_interaction_matching? ","VCR  current_cassette  http_interactions "," no_VCR  current_cassette _suggestions ","VCR  current_VCR  current_cassette  "," current_VCR  current_cassette s size == "," current_VCR  current_cassette s size "," current_VCR  current_cassette s "]}," VCR Errors UnhandledHTTPRequestError suggestion_for":{"type":"method","name":"suggestion_for","children":[],"call":["url dup ","bullet_point_lines map ","ALL_SUGGESTIONS  [] ","url dup  dup ","bullet_point_lines map  map "]}," VCR Errors UnhandledHTTPRequestError format_foot_note":{"type":"method","name":"format_foot_note","children":[],"call":["url % "," relish_version_slug ","index + "]}," VCR Errors UnhandledHTTPRequestError format_bullet_point":{"type":"method","name":"format_bullet_point","children":[],"call":["lines join ","lines last << ","index + ","lines last ","lines first insert ","lines first "]}," VCR Errors UnhandledHTTPRequestError formatted_suggestions":{"type":"method","name":"formatted_suggestions","children":[],"call":["(send\n  (lvar :formatted_points) :join\n  (str \"\\n\")) join ","formatted_foot_notes join ","formatted_points join ","formatted_foot_notes << "," format_foot_note ","formatted_points << "," format_bullet_point ","suggestion last ","suggestion first "," suggestions each_with_index "," suggestions "]}," VCR Errors UnhandledHTTPRequestError cassette_description":{"type":"method","name":"cassette_description","children":[],"call":["(str \"There is currently no cassette in use. There are a few ways\") join ","(str \"VCR is currently using the following cassette:\") join ","cassette match_requests_on inspect ","cassette match_requests_on ","cassette record_mode inspect ","cassette record_mode ","cassette file ","VCR  current_cassette ","(str \"There is currently no VCR  current_cassette  in use. There are a few ways\") join ","(str \"VCR is currently using the following VCR  current_cassette :\") join ","VCR  current_cassette  match_requests_on inspect ","VCR  current_cassette  match_requests_on ","VCR  current_cassette  record_mode inspect ","VCR  current_cassette  record_mode ","VCR  current_cassette  file ","VCR  current_VCR  current_cassette  "]}," VCR Errors UnhandledHTTPRequestError request_description":{"type":"method","name":"request_description","children":[],"call":[" request uri "," request "," request method to_s upcase "," request method to_s "," request method ","lines join ","lines << "," request body "," match_request_on_body? "," formatted_headers "," match_request_on_headers? "]}," VCR Errors UnhandledHTTPRequestError construct_message":{"type":"method","name":"construct_message","children":[],"call":["(str \"\") join ","= * "," formatted_suggestions "," cassette_description "," request_description "," cassettes_description "]}," VCR Errors UnhandledHTTPRequestError relish_version_slug":{"type":"method","name":"relish_version_slug","children":[],"call":["VCR  version gsub ","VCR  version "]}," VCR Errors UnhandledHTTPRequestError initialize":{"type":"method","name":"initialize","children":[],"call":[" construct_message "]}," VCR Deprecations Middleware Faraday initialize":{"type":"method","name":"initialize","children":[],"call":["Kernel  warn ","WARNING: Passing a block to `VCR::Middleware::Faraday` is deprecated. \n + "," block_given? "]}," VCR Configuration stub_with":{"type":"method","name":"stub_with","children":[],"call":[" hook_into "," warn "]}," VCR const_missing":{"type":"method","name":"const_missing","children":[],"call":[]}," VCR NullDebugLogger puts":{"type":"method","name":"puts","children":[],"call":[]}," VCR Configuration log_prefix":{"type":"method","name":"log_prefix","children":[],"call":[]}," VCR Configuration register_built_in_hooks":{"type":"method","name":"register_built_in_hooks","children":[],"call":["cassette tags include? ","cassette tags "," preserve_exact_body_bytes ","interaction response update_content_length_header ","interaction response "," before_playback ","interaction response decompress ","interaction response compressed? "," before_record ","interaction response recompress ","interaction response vcr_decompressed? "]}," VCR Configuration filter_from":{"type":"method","name":"filter_from","children":[],"call":["cassette tags include? ","cassette tags "," lambda "]}," VCR Configuration absolute_path_for":{"type":"method","name":"absolute_path_for","children":[],"call":["Dir  pwd ","Dir  chdir "]}," VCR Configuration start_new_fiber_for":{"type":"method","name":"start_new_fiber_for","children":[],"call":["fiber resume ","Request FiberAware  new ","Fiber  new tap ","Fiber  new ","request fiber_aware ","fibers []= ","Thread  current "," create_fiber_for "," create_fiber_for  resume ","request  create_fiber_for _aware "," create_fiber_for s []= "," create_ create_fiber_for _for "]}," VCR Configuration resume_fiber":{"type":"method","name":"resume_fiber","children":[],"call":[" raise ","Errors AroundHTTPRequestHookError  new ","(str \"Your around_http_request hook declared at \") + ","fiber resume ","ex message ","ex class ","fiber_errors [] ","Thread  current "]}," VCR Configuration load_library_hook":{"type":"method","name":"load_library_hook","children":[],"call":[" raise ","ArgumentError  new ","hook inspect ","e message include? ","e message "," require "]}," VCR Configuration initialize":{"type":"method","name":"initialize","children":[],"call":[" register_built_in_hooks "," debug_logger= "," uri_parser= "," query_parser= ","CGI  method "]}," VCR Configuration preserve_exact_body_bytes_for?":{"type":"method","name":"preserve_exact_body_bytes_for?","children":[],"call":[" invoke_hook any? "," invoke_hook ","VCR  current_cassette "]}," VCR Configuration configure_rspec_metadata!":{"type":"method","name":"configure_rspec_metadata!","children":[],"call":["VCR RSpec Metadata  configure! "]}," VCR Configuration around_http_request":{"type":"method","name":"around_http_request","children":[],"call":[" resume_fiber "," after_http_request "," lambda "," start_new_fiber_for "," before_http_request "," caller first "," caller "," raise ","Errors NotSupportedError  new ","VCR::Configuration#around_http_request requires fibers,  + "," require ","fibers delete ","Thread  current ","fibers []= ","VCR  fibers_available? "," resume_ start_new_fiber_for  "," resume_fibers delete  "," start_new_ start_new_fiber_for _for "," start_new_fibers delete _for ","VCR::Configuration#around_http_request requires  start_new_fiber_for s,  + ","VCR::Configuration#around_http_request requires fibers delete s,  + "," start_new_fiber_for s delete ","fibers delete s delete "," start_new_fiber_for s []= ","fibers delete s []= ","VCR   start_new_fiber_for s_available? ","VCR  fibers delete s_available? "]}," VCR Configuration before_playback":{"type":"method","name":"before_playback","children":[],"call":[" filter_from "," tag_filter_from "]}," VCR Configuration before_record":{"type":"method","name":"before_record","children":[],"call":[" filter_from "," tag_filter_from "]}," VCR Configuration cassette_serializers":{"type":"method","name":"cassette_serializers","children":[],"call":["VCR  cassette_serializers "]}," VCR Configuration define_cassette_placeholder":{"type":"method","name":"define_cassette_placeholder","children":[],"call":["interaction filter! "," log ","orig_text inspect ","placeholder inspect "," call_block "," before_playback "," before_record "," call_block  inspect "]}," VCR Configuration register_request_matcher":{"type":"method","name":"register_request_matcher","children":[],"call":["VCR  request_matchers register ","VCR  request_matchers "]}," VCR Configuration allow_http_connections_when_no_cassette?":{"type":"method","name":"allow_http_connections_when_no_cassette?","children":[],"call":["@allow_http_connections_when_no_cassette ! ! ","@allow_http_connections_when_no_cassette ! "]}," VCR Configuration ignore_request":{"type":"method","name":"ignore_request","children":[],"call":["VCR  request_ignorer ignore_request ","VCR  request_ignorer "]}," VCR Configuration ignore_localhost=":{"type":"method","name":"ignore_localhost=","children":[],"call":["VCR  request_ignorer ignore_localhost= ","VCR  request_ignorer "]}," VCR Configuration ignore_hosts":{"type":"method","name":"ignore_hosts","children":[],"call":["VCR  request_ignorer ignore_hosts ","VCR  request_ignorer "]}," VCR Configuration hook_into":{"type":"method","name":"hook_into","children":[],"call":[" invoke_hook "," load_library_hook ","hooks each "]}," VCR Configuration default_cassette_options=":{"type":"method","name":"default_cassette_options=","children":[],"call":["@default_cassette_options merge! "]}," VCR Configuration cassette_library_dir=":{"type":"method","name":"cassette_library_dir=","children":[],"call":[" absolute_path_for ","FileUtils  mkdir_p ","VCR  cassette_persisters [] storage_location= ","VCR  cassette_persisters [] ","VCR  cassette_persisters "]}," VCR Cassette request_summary":{"type":"method","name":"request_summary","children":[],"call":[" match_requests_on "]}," VCR Cassette log_prefix":{"type":"method","name":"log_prefix","children":[],"call":[" name "]}," VCR Cassette deserialized_hash":{"type":"method","name":"deserialized_hash","children":[],"call":[" raise ","Errors InvalidCassetteFormatError  new ","(begin\n  (send nil :file)) + + + + ","(begin\n  (send nil :file)) + + + ","(begin\n  (send nil :file)) + + ","(begin\n  (send nil :file)) + "," file ","hash [] is_a? ","hash [] ","hash is_a? ","@serializer deserialize tap ","@serializer deserialize "," raw_yaml_content "," raw_cassette_bytes "]}," VCR Cassette interactions_to_record":{"type":"method","name":"interactions_to_record","children":[],"call":[" invoke_hook "," merged_interactions tap "," merged_interactions ","(send\n  (send nil :merged_interactions) :map) tap ","HTTPInteraction  from_hash ","i to_hash "," merged_interactions map "]}," VCR Cassette earliest_interaction_recorded_at":{"type":"method","name":"earliest_interaction_recorded_at","children":[],"call":[" previously_recorded_interactions map min "," previously_recorded_interactions map "," previously_recorded_interactions "]}," VCR Cassette previously_recorded_interactions":{"type":"method","name":"previously_recorded_interactions","children":[],"call":["VCR  request_ignorer ignore? ","i request ","VCR  request_ignorer ","i request uri is_a? ","i request uri ","interactions reject! "," invoke_hook ","(send\n  (send\n    (send nil :deserialized_hash) :[]\n    (str \"http_interactions\")) :map) tap ","HTTPInteraction  from_hash "," deserialized_hash [] map "," deserialized_hash [] "," deserialized_hash ","File  size? "," file ","i response update_content_length_header ","i response ","interactions each "," update_content_length_header? "," raw_cassette_bytes to_s empty? ! "," raw_cassette_bytes to_s empty? "," raw_cassette_bytes to_s "," raw_cassette_bytes "]}," VCR Cassette serializable_hash":{"type":"method","name":"serializable_hash","children":[],"call":["VCR  version "," interactions_to_record map "," interactions_to_record "]}," VCR Cassette recording?":{"type":"method","name":"recording?","children":[],"call":["File  size? ! ","File  size? "," file "," file nil? "," record_mode "," raw_cassette_bytes to_s empty? "," raw_cassette_bytes to_s "," raw_cassette_bytes "]}," VCR Cassette http_interactions":{"type":"method","name":"http_interactions","children":[],"call":["HTTPInteractionList  new "," log_prefix "," match_requests_on "," previously_recorded_interactions "," should_stub_requests? ","@mutex synchronize "]}," VCR Cassette EncodingErrorHandling handle_encoding_errors":{"type":"method","name":"handle_encoding_errors","children":[],"call":[" raise ","e message << ","e message "]}," VCR Cassette Serializers []=":{"type":"method","name":"[]=","children":[],"call":["@serializers []= "," warn ","name inspect ","@serializers has_key? "]}," VCR Cassette Serializers []":{"type":"method","name":"[]","children":[],"call":["@serializers []= "," raise ","ArgumentError  new ","name inspect ","@serializers fetch "]}," VCR Cassette Serializers initialize":{"type":"method","name":"initialize","children":[],"call":[]}," VCR Cassette Serializers YAML deserialize":{"type":"method","name":"deserialize","children":[],"call":[" YAML  load "," handle_encoding_errors "," YAML  unsafe_load "," YAML  respond_to? "," handle_syntax_errors "]}," VCR Cassette Serializers YAML serialize":{"type":"method","name":"serialize","children":[],"call":[" YAML  dump "," handle_encoding_errors ","result gsub! "," YAML  dump  gsub! "]}," VCR Cassette Serializers YAML file_extension":{"type":"method","name":"file_extension","children":[],"call":[]}," VCR Cassette Serializers Syck using_syck":{"type":"method","name":"using_syck","children":[],"call":[" YAML ENGINE  yamler= "," YAML ENGINE  yamler "]}," VCR Cassette Serializers Syck deserialize":{"type":"method","name":"deserialize","children":[],"call":[" YAML  load "," using_syck "," handle_encoding_errors "," handle_syntax_errors "]}," VCR Cassette Serializers Syck serialize":{"type":"method","name":"serialize","children":[],"call":[" YAML  dump "," using_syck "," handle_encoding_errors "]}," VCR Cassette Serializers Syck file_extension":{"type":"method","name":"file_extension","children":[],"call":[]}," VCR Cassette Serializers Psych deserialize":{"type":"method","name":"deserialize","children":[],"call":[" Psych  load "," handle_encoding_errors "," handle_syntax_errors "]}," VCR Cassette Serializers Psych serialize":{"type":"method","name":"serialize","children":[],"call":[" Psych  dump "," handle_encoding_errors ","result gsub! "," Psych  dump  gsub! "]}," VCR Cassette Serializers Psych file_extension":{"type":"method","name":"file_extension","children":[],"call":[]}," VCR Cassette Serializers JSON deserialize":{"type":"method","name":"deserialize","children":[],"call":["MultiJson  decode "," handle_encoding_errors "," JSON  parse "," handle_syntax_errors "]}," VCR Cassette Serializers JSON serialize":{"type":"method","name":"serialize","children":[],"call":["MultiJson  encode "," handle_encoding_errors "," JSON  generate "," JSON  pretty_generate "]}," VCR Cassette Serializers JSON file_extension":{"type":"method","name":"file_extension","children":[],"call":[]}," VCR Cassette Migrator normalize_body":{"type":"method","name":"normalize_body","children":[],"call":["object body= ","object body nil? ","object body "]}," VCR Cassette Migrator denormalize_header_key":{"type":"method","name":"denormalize_header_key","children":[],"call":["(send\n  (send\n    (lvar :key) :split\n    (str \"-\")) :each) join ","w capitalize! ","key split each ","key split "]}," VCR Cassette Migrator denormalize_http_header_keys":{"type":"method","name":"denormalize_http_header_keys","children":[],"call":["object headers= ","denormalized []= "," denormalize_header_key ","object headers each ","object headers "," tap "]}," VCR Cassette Migrator remove_unnecessary_standard_port":{"type":"method","name":"remove_unnecessary_standard_port","children":[],"call":["interaction request uri= ","uri to_s ","interaction request ","uri port= ","uri port == ","uri port ","uri scheme == ","uri scheme "," URI ","interaction request uri ","VCR  configuration uri_parser parse ","VCR  configuration uri_parser ","VCR  configuration ","interaction request  URI = ","interaction request VCR  configuration uri_parser parse = "," URI  to_s ","VCR  configuration uri_parser parse  to_s "," URI  port= ","VCR  configuration uri_parser parse  port= "," URI  port == ","VCR  configuration uri_parser parse  port == "," URI  port ","VCR  configuration uri_parser parse  port "," URI  scheme == ","VCR  configuration uri_parser parse  scheme == "," URI  scheme ","VCR  configuration uri_parser parse  scheme ","interaction request  URI  ","interaction request VCR  configuration uri_parser parse  ","VCR  configuration  URI _parser parse ","VCR  configuration VCR  configuration uri_parser parse _parser parse ","VCR  configuration  URI _parser ","VCR  configuration VCR  configuration uri_parser parse _parser "]}," VCR Cassette Migrator valid_vcr_1_cassette?":{"type":"method","name":"valid_vcr_1_cassette?","children":[],"call":["content map uniq == ","content map uniq ","content map ","content is_a? "]}," VCR Cassette Migrator relative_casssette_name":{"type":"method","name":"relative_casssette_name","children":[],"call":["cassette gsub ","Regexp  escape "]}," VCR Cassette Migrator yaml_load_errors":{"type":"method","name":"yaml_load_errors","children":[],"call":["errors << ","(const nil :ArgumentError) tap "]}," VCR Cassette Migrator load_yaml":{"type":"method","name":"load_yaml","children":[],"call":[" YAML  load_file "," YAML  unsafe_load_file "," YAML  respond_to? "]}," VCR Cassette Migrator migrate_cassette":{"type":"method","name":"migrate_cassette","children":[{"type":"method","name":"each","children":[],"asgn":[],"call":[]}],"call":["@out puts "," relative_casssette_name ","f write "," YAML  dump ","File  open "," [] ","VCR  version ","interaction to_hash "," normalize_body ","interaction response ","interaction request "," denormalize_http_header_keys "," remove_unnecessary_standard_port ","interaction recorded_at= ","File  mtime ","http_interactions map! "," valid_vcr_1_cassette? "," load_yaml ","interaction response adapter_metadata= "," load_yaml  map! "]}," VCR Cassette Migrator migrate!":{"type":"method","name":"migrate!","children":[],"call":[" migrate_cassette ","Dir  [] each ","Dir  [] ","@out puts "]}," VCR Cassette Migrator initialize":{"type":"method","name":"initialize","children":[],"call":[" yaml_load_errors "]}," VCR Cassette HTTPInteractionList log_prefix":{"type":"method","name":"log_prefix","children":[],"call":[]}," VCR Cassette HTTPInteractionList interaction_matches_request?":{"type":"method","name":"interaction_matches_request?","children":[],"call":[" log "," request_summary ","interaction request ","matcher matches? tap ","matcher matches? ","VCR  request_matchers [] ","VCR  request_matchers ","@request_matchers all? ","@request_matchers inspect ","VCR  request_matchers [] matches? ","VCR  request_matchers []  matches? tap ","VCR  request_matchers []  matches? ","VCR  request_VCR  request_matchers [] s [] ","VCR  request_VCR  request_matchers [] s ","@request_VCR  request_matchers [] s all? ","@request_VCR  request_matchers [] s inspect ","VCR  request_VCR  request_matchers [] s [] matches? "]}," VCR Cassette HTTPInteractionList matching_used_interaction_for":{"type":"method","name":"matching_used_interaction_for","children":[],"call":[" interaction_matches_request? ","@used_interactions find "]}," VCR Cassette HTTPInteractionList matching_interaction_index_for":{"type":"method","name":"matching_interaction_index_for","children":[],"call":[" interaction_matches_request? ","@interactions index "]}," VCR Cassette HTTPInteractionList request_summary":{"type":"method","name":"request_summary","children":[],"call":[]}," VCR Cassette HTTPInteractionList remaining_unused_interaction_count":{"type":"method","name":"remaining_unused_interaction_count","children":[],"call":["@interactions size "]}," VCR Cassette HTTPInteractionList has_used_interaction_matching?":{"type":"method","name":"has_used_interaction_matching?","children":[],"call":[" interaction_matches_request? ","@used_interactions any? "]}," VCR Cassette HTTPInteractionList has_interaction_matching?":{"type":"method","name":"has_interaction_matching?","children":[],"call":["@parent_list has_interaction_matching? "," matching_used_interaction_for ! ! "," matching_used_interaction_for ! "," matching_used_interaction_for "," matching_interaction_index_for ! ! "," matching_interaction_index_for ! "," matching_interaction_index_for "]}," VCR Cassette HTTPInteractionList response_for":{"type":"method","name":"response_for","children":[],"call":["@parent_list response_for ","interaction response "," matching_used_interaction_for "," log "," response_summary "," request_summary ","@used_interactions unshift ","@interactions delete_at "," matching_interaction_index_for ","@mutex synchronize "," matching_used_interaction_for  response ","@interactions delete_at  response "," matching_used_ matching_used_interaction_for _for "," matching_used_@interactions delete_at _for ","@used_ matching_used_interaction_for s unshift ","@used_@interactions delete_at s unshift ","@ matching_used_interaction_for s delete_at ","@@interactions delete_at s delete_at "," matching_ matching_used_interaction_for _index_for "," matching_@interactions delete_at _index_for "," matching_interaction_ matching_interaction_index_for _for "]}," VCR Cassette HTTPInteractionList initialize":{"type":"method","name":"initialize","children":[],"call":[" log ","interaction_summaries join ","interactions size ","request_matchers inspect "," response_summary ","i response "," request_summary ","i request ","interactions map ","interactions dup ","VCR  request_matchers [] ","VCR  request_matchers ","request_matchers map ","Mutex  new "]}," VCR Cassette HTTPInteractionList NullList remaining_unused_interaction_count":{"type":"method","name":"remaining_unused_interaction_count","children":[],"call":[]}," VCR Cassette HTTPInteractionList NullList has_used_interaction_matching?":{"type":"method","name":"has_used_interaction_matching?","children":[],"call":[]}," VCR Cassette HTTPInteractionList NullList has_interaction_matching?":{"type":"method","name":"has_interaction_matching?","children":[],"call":[]}," VCR Cassette HTTPInteractionList NullList response_for":{"type":"method","name":"response_for","children":[],"call":[]}," VCR RequestMatcherRegistry normalize_uri":{"type":"method","name":"normalize_uri","children":[],"call":["uri gsub "," WebMock Util URI  normalize_uri to_s "," WebMock Util URI  normalize_uri "]}," VCR RequestHandler on_connection_not_allowed":{"type":"method","name":"on_connection_not_allowed","children":[],"call":[" raise ","VCR HTTPConnectionNotAllowedError  new "," vcr_request ","VCR Errors UnhandledHTTPRequestError  new "]}," VCR LibraryHooks initialize":{"type":"method","name":"initialize","children":[],"call":[]}," reset!":{"type":"method","name":"reset!","children":[],"call":[" request_stubs= "]}," net_connect_allowed?":{"type":"method","name":"net_connect_allowed?","children":[],"call":[]}," VCR LibraryHooks WebMock RequestHandler on_recordable_request":{"type":"method","name":"on_recordable_request","children":[],"call":[]}," VCR LibraryHooks WebMock RequestHandler on_ignored_request":{"type":"method","name":"on_ignored_request","children":[],"call":[]}," VCR LibraryHooks WebMock RequestHandler stubbed_response":{"type":"method","name":"stubbed_response","children":[],"call":["VCR  http_interactions has_interaction_matching? "," vcr_request ","VCR  http_interactions "]}," VCR LibraryHooks WebMock Helpers vcr_response_from":{"type":"method","name":"vcr_response_from","children":[],"call":["VCR Response  new ","response body ","response headers ","VCR ResponseStatus  new ","response status last ","response status ","response status first "]}," VCR LibraryHooks WebMock Helpers vcr_request_from":{"type":"method","name":"vcr_request_from","children":[],"call":["VCR Request  new ","webmock_request headers ","webmock_request body ","webmock_request uri to_s ","webmock_request uri ","webmock_request method "]}," VCR LibraryHooks WebMock Helpers response_hash_for":{"type":"method","name":"response_hash_for","children":[],"call":["response headers ","response status message ","response status ","response status code to_i ","response status code ","response body "]}," find_stub_from_request":{"type":"method","name":"find_stub_from_request","children":[],"call":["VCR LibraryHooks Typhoeus RequestHandler  new handle ","VCR LibraryHooks Typhoeus RequestHandler  new "]}," VCR LibraryHooks Typhoeus RequestHandler hydra_mock":{"type":"method","name":"hydra_mock","children":[],"call":["m and_return "," typhoeus_response "," Typhoeus HydraMock  new tap "," Typhoeus HydraMock  new "]}," VCR LibraryHooks Typhoeus RequestHandler typhoeus_response":{"type":"method","name":"typhoeus_response","children":[],"call":[" Typhoeus Response  new "," stubbed_response body "," stubbed_response "," stubbed_response_headers "," stubbed_response status message "," stubbed_response status "," stubbed_response status code "," stubbed_response http_version "]}," VCR LibraryHooks Typhoeus Helpers vcr_response_from":{"type":"method","name":"vcr_response_from","children":[],"call":["VCR Response  new ","response http_version ","response body ","response headers_hash ","VCR ResponseStatus  new ","response status_message ","response code "]}," VCR LibraryHooks Typhoeus Helpers vcr_request_from":{"type":"method","name":"vcr_request_from","children":[],"call":["VCR Request  new ","request headers ","request body ","request url ","request method "]}," VCR LibraryHooks FakeWeb RequestHandler perform_stubbed_request":{"type":"method","name":"perform_stubbed_request","children":[],"call":[" perform_request "," with_exclusive_fakeweb_stub "," stubbed_response "]}," VCR LibraryHooks FakeWeb RequestHandler perform_and_record_request":{"type":"method","name":"perform_and_record_request","children":[],"call":[" block call "," block ","response extend ","VCR  record_http_interaction ","VCR HTTPInteraction  new "," vcr_response_from "," vcr_request "," perform_request "," net_http started? "," net_http "]}," VCR LibraryHooks Excon RequestHandler normalize_header_key":{"type":"method","name":"normalize_header_key","children":[],"call":["(send\n  (send\n    (lvar :key) :split\n    (str \"-\")) :each) join ","w capitalize! ","key split each ","key split "]}," VCR LibraryHooks Excon RequestHandler vcr_response":{"type":"method","name":"vcr_response","children":[],"call":["VCR Response  new ","response body ","response headers ","VCR ResponseStatus  new ","response status "]}," VCR Errors HTTPConnectionNotAllowedError initialize":{"type":"method","name":"initialize","children":[],"call":["Real HTTP connections are disabled.  + + + ","VCR  version gsub ","VCR  version ","Real HTTP connections are disabled.  + + ","Real HTTP connections are disabled.  + ","request uri ","request method to_s upcase ","request method to_s ","request method "]}," VCR Configuration filter_sensitive_data":{"type":"method","name":"filter_sensitive_data","children":[],"call":["interaction filter! "," call_block "," before_playback "," before_record "]}," VCR Cassette parent_list":{"type":"method","name":"parent_list","children":[],"call":["VCR  http_interactions ","HTTPInteractionList NullList  new "]}," VCR RequestMatcherRegistry without_standard_port":{"type":"method","name":"without_standard_port","children":[],"call":["u port= ","(array\n  (str \"http\")\n  (int 80)) include? ","u port ","u scheme "," URI tap "," URI "]}," VCR Hooks invoke_tagged_hook":{"type":"method","name":"invoke_tagged_hook","children":[],"call":[" call_block "," hooks_for map "," hooks_for "]}," net_connect_allowed_with_vcr?":{"type":"method","name":"net_connect_allowed_with_vcr?","children":[],"call":[" net_connect_allowed_without_vcr? ","VCR  turned_on? "]}," VCR LibraryHooks WebMock RequestHandler on_connection_not_allowed":{"type":"method","name":"on_connection_not_allowed","children":[],"call":[" invoke_after_request_hook "]}," allow_net_connect_with_vcr?":{"type":"method","name":"allow_net_connect_with_vcr?","children":[],"call":[" allow_net_connect_without_vcr? ","VCR  turned_on? "]}," VCR LibraryHooks Typhoeus RequestHandler on_connection_not_allowed":{"type":"method","name":"on_connection_not_allowed","children":[],"call":[" invoke_after_request_hook "]}," VCR LibraryHooks FakeWeb RequestHandler on_connection_not_allowed":{"type":"method","name":"on_connection_not_allowed","children":[],"call":[" raise ","VCR Errors UnhandledHTTPRequestError  new "," vcr_request "]}," VCR Response decompress":{"type":"method","name":"decompress","children":[],"call":[" delete_header "," update_content_length_header "," body= "," class decompress "," content_encoding "," body "," class "," adapter_metadata []= "," adapter_metadata "]}," VCR Response compressed?":{"type":"method","name":"compressed?","children":[],"call":["(str \"gzip\") include? "," content_encoding "]}," VCR Response content_encoding":{"type":"method","name":"content_encoding","children":[],"call":["enc first "," get_header "," get_header  first "]}," VCR Normalizers Header delete_header":{"type":"method","name":"delete_header","children":[],"call":[" headers delete "," headers ","@normalized_header_keys delete ","key downcase "," header_key ","@normalized_header_ header_key s delete "," header_key  downcase "," header_ header_key  "]}," VCR Normalizers Header edit_header":{"type":"method","name":"edit_header","children":[],"call":[" headers []= "," Array "," headers "," headers [] "," header_key "," header_ header_key  "]}," VCR Normalizers Header get_header":{"type":"method","name":"get_header","children":[],"call":[" headers [] "," headers "," header_key "," header_ header_key  "]}," VCR Normalizers Header header_key":{"type":"method","name":"header_key","children":[],"call":[" headers has_key? "," headers ","@normalized_header_keys [] ","key downcase "," headers has_@normalized_header_keys [] ? ","@normalized_header_@normalized_header_keys [] s [] ","@normalized_header_keys []  downcase "]}," VCR cassette_persisters":{"type":"method","name":"cassette_persisters","children":[],"call":["Cassette Persisters  new "]}," VCR Request Typed externally_stubbed?":{"type":"method","name":"externally_stubbed?","children":[],"call":[" type == "," type "]}," VCR Request Typed stubbed_by_vcr?":{"type":"method","name":"stubbed_by_vcr?","children":[],"call":[" type == "," type "]}," VCR RequestHandler on_stubbed_by_vcr_request":{"type":"method","name":"on_stubbed_by_vcr_request","children":[],"call":[]}," VCR RequestHandler on_externally_stubbed_request":{"type":"method","name":"on_externally_stubbed_request","children":[],"call":[]}," VCR RequestHandler externally_stubbed?":{"type":"method","name":"externally_stubbed?","children":[],"call":[]}," VCR Middleware Faraday RequestHandler on_stubbed_by_vcr_request":{"type":"method","name":"on_stubbed_by_vcr_request","children":[],"call":[" env []= "," env ","faraday_response finish "," Faraday Response  new "," env update "," stubbed_response body "," stubbed_response "," stubbed_response status code "," stubbed_response status ","headers update "," stubbed_response headers "," Faraday Utils Headers  new "," env [] "," env request on_data call "," stubbed_response body length "," env request on_data "," env request "," env request stream_response? "," Faraday Response  new  finish "]}," VCR Middleware Faraday RequestHandler raw_body_from":{"type":"method","name":"raw_body_from","children":[],"call":["body rewind ","body respond_to? ","body read tap ","body read "]}," VCR LibraryHooks WebMock RequestHandler on_stubbed_by_vcr_request":{"type":"method","name":"on_stubbed_by_vcr_request","children":[],"call":[" stubbed_response headers "," stubbed_response "," stubbed_response status message "," stubbed_response status "," stubbed_response status code to_i "," stubbed_response status code "," stubbed_response body "," stubbed_response body dup "]}," VCR LibraryHooks WebMock RequestHandler on_externally_stubbed_request":{"type":"method","name":"on_externally_stubbed_request","children":[],"call":[]}," VCR LibraryHooks WebMock RequestHandler externally_stubbed?":{"type":"method","name":"externally_stubbed?","children":[],"call":[" WebMock  registered_request? "," request ","VCR LibraryHooks WebMock  with_global_hook_disabled "]}," VCR LibraryHooks WebMock Helpers typed_request_for":{"type":"method","name":"typed_request_for","children":[],"call":["Request Typed  new "," vcr_request_for "," warn ","(str \"            |WARNING: There appears to be a bug in WebMock's after_request hook\\n\") gsub ","webmock_request send ","v to_sym == ","v to_sym ","webmock_request instance_variables find ","webmock_request instance_variables "]}," VCR LibraryHooks WebMock Helpers request_headers_for":{"type":"method","name":"request_headers_for","children":[],"call":["webmock_request headers ","headers delete ","webmock_request headers dup tap ","webmock_request headers dup "]}," VCR LibraryHooks WebMock Helpers vcr_response_for":{"type":"method","name":"vcr_response_for","children":[],"call":["VCR Response  new ","webmock_response body ","webmock_response headers ","VCR ResponseStatus  new ","webmock_response status "]}," VCR LibraryHooks WebMock Helpers vcr_request_for":{"type":"method","name":"vcr_request_for","children":[],"call":["VCR Request  new "," request_headers_for ","webmock_request body ","webmock_request uri to_s ","webmock_request uri ","webmock_request method "]}," VCR LibraryHooks WebMock with_global_hook_disabled":{"type":"method","name":"with_global_hook_disabled","children":[],"call":[" global_hook_disabled= "," global_hook_disabled_requests delete "," global_hook_disabled_requests "," global_hook_disabled_requests << "]}," VCR LibraryHooks Typhoeus RequestHandler on_stubbed_by_vcr_request":{"type":"method","name":"on_stubbed_by_vcr_request","children":[],"call":[" Typhoeus Response  new "," stubbed_response body "," stubbed_response "," stubbed_response_headers "," stubbed_response status message "," stubbed_response status "," stubbed_response status code "," stubbed_response http_version "," request url "," request "," stubbed_response adapter_metadata fetch "," stubbed_response adapter_metadata ","response instance_variable_get []= ","first_header_line + ","(send\n  (send\n    (lvar :response) :headers) :map) join ","response headers map ","response headers ","response instance_variable_get ","response instance_variable_set ","response status_message ","response code "," stubbed_ Typhoeus Response  new  body "," stubbed_ Typhoeus Response  new  "," stubbed_ Typhoeus Response  new _headers "," stubbed_ Typhoeus Response  new  status message "," stubbed_ Typhoeus Response  new  status "," stubbed_ Typhoeus Response  new  status code "," stubbed_ Typhoeus Response  new  http_version "," stubbed_ Typhoeus Response  new  adapter_metadata fetch "," stubbed_ Typhoeus Response  new  adapter_metadata "," Typhoeus Response  new  instance_variable_get []= ","(send\n  (send\n    (lvar : Typhoeus Response  new ) :headers) :map) join "," Typhoeus Response  new  headers map "," Typhoeus Response  new  headers "," Typhoeus Response  new  instance_variable_get "," Typhoeus Response  new  instance_variable_set "," Typhoeus Response  new  status_message "," Typhoeus Response  new  code "]}," VCR LibraryHooks Typhoeus RequestHandler externally_stubbed?":{"type":"method","name":"externally_stubbed?","children":[],"call":["stub matches? "," request "," Typhoeus Hydra  stubs detect "," Typhoeus Hydra  stubs "," Typhoeus Expectation  find_by "]}," VCR LibraryHooks Faraday BuilderInstanceExtension warn_about_after_adapter_middleware":{"type":"method","name":"warn_about_after_adapter_middleware","children":[],"call":[" warn ","WARNING: The Faraday connection stack contains middleware after  + + + ","WARNING: The Faraday connection stack contains middleware after  + + ","WARNING: The Faraday connection stack contains middleware after  + ","after_adapter_middlewares map join ","after_adapter_middlewares map "," handlers last "," handlers ","after_adapter_middleware_count < "," handlers size - - "," handlers size - "," handlers size "," handlers last  map join "," handlers last  map "]}," VCR LibraryHooks FakeWeb RequestHandler request_method":{"type":"method","name":"request_method","children":[],"call":[" request method downcase to_sym "," request method downcase "," request method "," request "]}," VCR LibraryHooks FakeWeb RequestHandler on_stubbed_by_vcr_request":{"type":"method","name":"on_stubbed_by_vcr_request","children":[],"call":[" perform_request "," with_exclusive_fakeweb_stub "," stubbed_response "]}," VCR LibraryHooks FakeWeb RequestHandler on_externally_stubbed_request":{"type":"method","name":"on_externally_stubbed_request","children":[],"call":[" perform_request "]}," VCR LibraryHooks FakeWeb RequestHandler externally_stubbed?":{"type":"method","name":"externally_stubbed?","children":[],"call":[" FakeWeb  registered_uri? "," uri "," request_method "]}," VCR LibraryHooks Excon RequestHandler on_stubbed_by_vcr_request":{"type":"method","name":"on_stubbed_by_vcr_request","children":[],"call":[" stubbed_response status code "," stubbed_response status "," stubbed_response "," normalized_headers "," stubbed_response headers "," stubbed_response body "]}," VCR Configuration request_filter_from":{"type":"method","name":"request_filter_from","children":[],"call":["arg send "," lambda ","object is_a? "]}," VCR Configuration tag_filter_from":{"type":"method","name":"tag_filter_from","children":[],"call":["cassette tags include? ","cassette tags "," lambda "]}," VCR Configuration after_http_request":{"type":"method","name":"after_http_request","children":[],"call":[" request_filter_from ","filters map "]}," VCR Configuration cassette_persisters":{"type":"method","name":"cassette_persisters","children":[],"call":["VCR  cassette_persisters "]}," VCR Configuration cassette_library_dir":{"type":"method","name":"cassette_library_dir","children":[],"call":["VCR  cassette_persisters [] storage_location ","VCR  cassette_persisters [] ","VCR  cassette_persisters "]}," VCR Cassette raw_cassette_bytes":{"type":"method","name":"raw_cassette_bytes","children":[],"call":["VCR Cassette ERBRenderer  new render ","VCR Cassette ERBRenderer  new "," name "," erb ","@persister [] "," storage_key "]}," VCR Cassette storage_key":{"type":"method","name":"storage_key","children":[],"call":["(send nil :name) join ","@serializer file_extension "," name "]}," VCR Cassette assign_tags":{"type":"method","name":"assign_tags","children":[],"call":["@tags << ","@options [] ","(sym :update_content_length_header) each "," Array ","@options fetch "," Array  << "]}," VCR Cassette extract_options":{"type":"method","name":"extract_options","children":[],"call":["VCR  http_interactions "," should_re_record? ","VCR  cassette_persisters [] ","@options [] ","VCR  cassette_persisters ","VCR  cassette_serializers [] ","VCR  cassette_serializers "," assign_tags "," instance_variable_set ","(sym :erb) each ","(sym :record_on_error) each "]}," VCR Cassette assert_valid_options!":{"type":"method","name":"assert_valid_options!","children":[],"call":[" raise ","ArgumentError  new ","invalid_options inspect ","invalid_options size > ","invalid_options size ","@options keys - ","@options keys ","@options keys -  inspect ","@options keys -  size > ","@options keys -  size "]}," VCR Cassette Persisters []=":{"type":"method","name":"[]=","children":[],"call":["@persisters []= "," warn ","WARNING: There is already a VCR cassette persister  + ","name inspect ","@persisters has_key? "]}," VCR Cassette Persisters []":{"type":"method","name":"[]","children":[],"call":["@persisters []= "," raise ","The requested VCR cassette persister  + ","name inspect ","@persisters fetch "]}," VCR Cassette Persisters initialize":{"type":"method","name":"initialize","children":[],"call":[]}," VCR Cassette Persisters FileSystem sanitized_file_name_from":{"type":"method","name":"sanitized_file_name_from","children":[],"call":["parts join gsub + ","file_extension to_s ","parts join gsub ","parts join ",". + ","parts pop ","parts size > ","parts size ","file_name to_s split ","file_name to_s ","parts last include? ! ","parts last include? ","parts last ","file_name downcase! "," downcase_cassette_names? ","file_name to_s split  join gsub + ",". +  to_s ","file_name to_s split  join gsub ","file_name to_s split  join ","file_name to_s split  pop ","file_name to_s split  size > ","file_name to_s split  size ","parts join gsub +  to_s split ","parts join gsub +  to_s ","file_name to_s split  last include? ! ","file_name to_s split  last include? ","file_name to_s split  last ","parts join gsub +  downcase! "]}," VCR Cassette Persisters FileSystem absolute_path_for":{"type":"method","name":"absolute_path_for","children":[],"call":["Dir  pwd ","Dir  chdir "]}," VCR Cassette Persisters FileSystem absolute_path_to_file":{"type":"method","name":"absolute_path_to_file","children":[],"call":["File  join "," sanitized_file_name_from "," storage_location "]}," VCR Cassette Persisters FileSystem []=":{"type":"method","name":"[]=","children":[],"call":["f write ","File  open ","FileUtils  mkdir_p ","File  exist? ","File  dirname "," absolute_path_to_file ","File  binwrite "," absolute_ absolute_path_to_file _to_file "]}," VCR Cassette Persisters FileSystem []":{"type":"method","name":"[]","children":[],"call":["File  read ","File  exist? "," absolute_path_to_file ","File  binread "," absolute_ absolute_path_to_file _to_file "]}," VCR Cassette Persisters FileSystem storage_location=":{"type":"method","name":"storage_location=","children":[],"call":[" absolute_path_for ","FileUtils  mkdir_p "]}," VCR Cassette HTTPInteractionList has_unused_interactions?":{"type":"method","name":"has_unused_interactions?","children":[],"call":["@interactions size > ","@interactions size "]}," VCR Cassette HTTPInteractionList assert_no_unused_interactions!":{"type":"method","name":"assert_no_unused_interactions!","children":[],"call":[" raise ","(send\n  (ivar :@interactions) :map) join "," response_summary ","i response "," request_summary ","i request ","@interactions map "," has_unused_interactions? ","logger response_summary ","logger request_summary ","Logger  new ","Logger  new  response_summary ","Logger  new  request_summary "]}," VCR Cassette ERBRenderer binding_for_variables":{"type":"method","name":"binding_for_variables","children":[],"call":[" binding "," variables_object instance_eval "," variables_object "]}," VCR Cassette ERBRenderer variables_object":{"type":"method","name":"variables_object","children":[],"call":["@@struct_cache [] new "," erb_variables values "," erb_variables ","@@struct_cache [] "," erb_variables keys "]}," VCR Cassette ERBRenderer template":{"type":"method","name":"template","children":[],"call":["ERB  new "]}," VCR Cassette ERBRenderer erb_variables":{"type":"method","name":"erb_variables","children":[],"call":["@erb is_a? ","@erb empty? ! ","@erb empty? "]}," VCR Cassette ERBRenderer use_erb?":{"type":"method","name":"use_erb?","children":[],"call":["@erb ! ! ","@erb ! "]}," VCR Cassette ERBRenderer handle_name_error":{"type":"method","name":"handle_name_error","children":[],"call":[" raise ","Errors MissingERBVariableError  new ","(str \"The ERB in the \") + ","example_hash inspect ","e name ","(or\n  (send nil :erb_variables)\n  (hash)) merge "," erb_variables ","(or\n  (send nil :erb_variables)\n  (hash)) merge  inspect "]}," VCR Cassette ERBRenderer render":{"type":"method","name":"render","children":[],"call":[" handle_name_error "," template result "," template "," binding_for_variables "," erb_variables "," use_erb? ! "," use_erb? ","@raw_template nil? ","  binding_for_variables _for_variables "]}," VCR Cassette ERBRenderer initialize":{"type":"method","name":"initialize","children":[],"call":[]}," VCR LibraryHooks FakeWeb RecursiveRequestHandler request_type":{"type":"method","name":"request_type","children":[],"call":[]}," VCR LibraryHooks FakeWeb RecursiveRequestHandler handle":{"type":"method","name":"handle","children":[],"call":[" invoke_after_request_hook "," send "," set_typed_request_for_after_hook "]}," VCR LibraryHooks FakeWeb RecursiveRequestHandler initialize":{"type":"method","name":"initialize","children":[],"call":[]}," VCR LibraryHooks FakeWeb RequestHandler recursive_request_handler":{"type":"method","name":"recursive_request_handler","children":[],"call":["RecursiveRequestHandler  new ","@after_hook_typed_request type "]}," new":{"type":"method","name":"new","children":[],"call":[]}," VCR LibraryHooks Excon RequestHandler new_connection":{"type":"method","name":"new_connection","children":[],"call":[" Excon Connection  new "," params fetch "," params ","(lvar :args) compact "," scrub_params_from ","options is_a? "," scrub_params_from  is_a? "]}," VCR LibraryHooks Excon RequestHandler scrub_params_from":{"type":"method","name":"scrub_params_from","children":[],"call":["hash delete ","PARAMS_TO_DELETE  each ","hash dup ","hash dup  delete ","hash dup  dup "]}," VCR Request parsed_uri":{"type":"method","name":"parsed_uri","children":[],"call":["VCR  configuration uri_parser parse "," uri ","VCR  configuration uri_parser ","VCR  configuration "]}," VCR RSpec Macros extended":{"type":"method","name":"extended","children":[],"call":[]}," VCR Middleware Excon NonStreamingResponseBodyReader read_body_from":{"type":"method","name":"read_body_from","children":[],"call":[]}," VCR Middleware Excon StreamingResponseBodyReader read_body_from":{"type":"method","name":"read_body_from","children":[],"call":["@chunks join ","response_params [] ","@chunks none? "]}," VCR Middleware Excon StreamingResponseBodyReader call":{"type":"method","name":"call","children":[],"call":["@response_block call ","@chunks << "]}," VCR Middleware Excon StreamingResponseBodyReader initialize":{"type":"method","name":"initialize","children":[],"call":[]}," VCR Middleware Excon RequestHandler query":{"type":"method","name":"query","children":[],"call":["qry chop! ","qry << << << << ","qry << << << ","CGI  escape ","value to_s ","qry << << ","qry << ","key to_s ","values nil? "," request_params [] "," request_params "]}," VCR Middleware Excon RequestHandler uri":{"type":"method","name":"uri","children":[],"call":[" query "," request_params [] "," request_params "," Excon Utils  request_uri "]}," VCR Middleware Excon RequestHandler normalized_headers":{"type":"method","name":"normalized_headers","children":[],"call":["normalized []= ","v join ","v respond_to? ","headers each ","v join  join ","v join  respond_to? "]}," VCR Middleware Excon RequestHandler vcr_response":{"type":"method","name":"vcr_response","children":[],"call":["VCR Response  new "," response_body_reader read_body_from "," response_body_reader ","response fetch ","VCR ResponseStatus  new "," response_params fetch "," response_params "," response_params has_key? "," should_record? ","  response_params fetch _body_reader read_body_from ","  response_params fetch _body_reader "," response_params fetch  fetch ","  response_params fetch _params fetch ","  response_params fetch _params ","  response_params fetch _params has_key? "]}," VCR Middleware Excon RequestHandler vcr_request":{"type":"method","name":"vcr_request","children":[],"call":["VCR Request  new "," request_params [] "," request_params "," uri ","headers delete "," request_params [] dup "," request_params [] dup  delete "]}," VCR Middleware Excon RequestHandler create_response_body_reader":{"type":"method","name":"create_response_body_reader","children":[],"call":[" request_params []= "," request_params ","StreamingResponseBodyReader  new tap ","StreamingResponseBodyReader  new "," request_params [] "]}," VCR Middleware Excon RequestHandler on_recordable_request":{"type":"method","name":"on_recordable_request","children":[],"call":[]}," VCR Middleware Excon RequestHandler on_stubbed_by_vcr_request":{"type":"method","name":"on_stubbed_by_vcr_request","children":[],"call":[" request_params []= "," stubbed_response status code "," stubbed_response status "," stubbed_response "," normalized_headers "," stubbed_response headers "," stubbed_response body "," request_params "," stubbed_response body dup "]}," VCR Middleware Excon RequestHandler should_record?":{"type":"method","name":"should_record?","children":[],"call":[]}," VCR Middleware Excon RequestHandler after_request":{"type":"method","name":"after_request","children":[],"call":[" invoke_after_request_hook "," vcr_response ","VCR  record_http_interaction ","VCR HTTPInteraction  new "," vcr_request "," should_record? "," vcr_response_for ","  vcr_response_for  ","  vcr_response_for _for "]}," VCR Middleware Excon RequestHandler before_request":{"type":"method","name":"before_request","children":[],"call":[" handle "," create_response_body_reader "]}," VCR Middleware Excon RequestHandler initialize":{"type":"method","name":"initialize","children":[],"call":[]}," VCR Middleware Excon error_call":{"type":"method","name":"error_call","children":[],"call":["@request_handler after_request ","@request_handler ensure_response_body_can_be_read_for_error_case "]}," VCR Middleware Excon response_call":{"type":"method","name":"response_call","children":[],"call":["@request_handler after_request "]}," VCR Middleware Excon request_call":{"type":"method","name":"request_call","children":[],"call":["@request_handler before_request "]}," VCR Middleware Excon initialize":{"type":"method","name":"initialize","children":[],"call":["RequestHandler  new "]}," VCR Logger Mixin response_summary":{"type":"method","name":"response_summary","children":[],"call":["VCR  configuration logger response_summary ","VCR  configuration logger ","VCR  configuration "]}," VCR Logger Mixin request_summary":{"type":"method","name":"request_summary","children":[],"call":["VCR  configuration logger request_summary ","VCR  configuration logger ","VCR  configuration "]}," VCR Logger Mixin log":{"type":"method","name":"log","children":[],"call":["VCR  configuration logger log "," log_prefix ","VCR  configuration logger ","VCR  configuration "]}," VCR Logger Null response_summary":{"type":"method","name":"response_summary","children":[],"call":[]}," VCR Logger Null request_summary":{"type":"method","name":"request_summary","children":[],"call":[]}," VCR Logger Null log":{"type":"method","name":"log","children":[],"call":[]}," VCR Logger initialize":{"type":"method","name":"initialize","children":[],"call":[]}," VCR Middleware Excon RequestHandler externally_stubbed?":{"type":"method","name":"externally_stubbed?","children":[],"call":[" Excon  stub_for ! ! "," Excon  stub_for ! "," Excon  stub_for "," request_params "]}," VCR Middleware Excon RequestHandler ensure_response_body_can_be_read_for_error_case":{"type":"method","name":"ensure_response_body_can_be_read_for_error_case","children":[],"call":[]}," VCR Configuration debug_logger=":{"type":"method","name":"debug_logger=","children":[],"call":["Logger  new "]}," VCR Cassette should_assert_no_unused_interactions?":{"type":"method","name":"should_assert_no_unused_interactions?","children":[],"call":["(or\n  (ivar :@allow_unused_http_interactions)\n  (gvar :$!)) ! "]}," VCR Cassette originally_recorded_at":{"type":"method","name":"originally_recorded_at","children":[],"call":[" previously_recorded_interactions map min "," previously_recorded_interactions map "," previously_recorded_interactions "]}," VCR Middleware Excon LegacyMethods query":{"type":"method","name":"query","children":[],"call":["qry chop! ","qry << << << << ","qry << << << ","CGI  escape ","value to_s ","qry << << ","qry << ","key to_s ","values nil? "," request_params [] "," request_params "]}," VCR LibraryHooks Typhoeus RequestHandler request_body":{"type":"method","name":"request_body","children":[],"call":[" request options fetch "," request options "," request "," request encoded_body "]}," VCR RequestMatcherRegistry try_to_register_body_as_json":{"type":"method","name":"try_to_register_body_as_json","children":[],"call":["JSON  parse == ","JSON  parse ","r2 body ","r1 body "," register "," require ","r1 body == "]}," VCR Middleware Excon RequestHandler vcr_response_for":{"type":"method","name":"vcr_response_for","children":[],"call":["VCR Response  new "," response_body_reader read_body_from "," response_body_reader ","response fetch ","VCR ResponseStatus  new ","response nil? "]}," VCR Middleware Excon Response complete_request":{"type":"method","name":"complete_request","children":[],"call":["handler after_request ","params [] ","params delete ","params delete  after_request "]}," VCR Middleware Excon Response error_call":{"type":"method","name":"error_call","children":[],"call":[" complete_request "]}," VCR Middleware Excon Response response_call":{"type":"method","name":"response_call","children":[],"call":[" complete_request "]}," VCR Middleware Excon Request request_call":{"type":"method","name":"request_call","children":[],"call":["request_handler before_request ","params []= ","RequestHandler  new ","RequestHandler  new  before_request "]}," VCR LibraryHooks Excon configure_middleware":{"type":"method","name":"configure_middleware","children":[],"call":[]}," VCR Errors UnhandledHTTPRequestError current_matchers":{"type":"method","name":"current_matchers","children":[],"call":["VCR  configuration default_cassette_options [] ","VCR  configuration default_cassette_options ","VCR  configuration ","VCR  current_cassette match_requests_on ","VCR  current_cassette ","memo | ","cassette match_requests_on "," current_cassettes inject "," current_cassettes "," current_cassettes size > "," current_cassettes size "]}," VCR Errors UnhandledHTTPRequestError match_request_on_body?":{"type":"method","name":"match_request_on_body?","children":[],"call":[" current_matchers include? "," current_matchers "]}," VCR initialize_fibers":{"type":"method","name":"initialize_fibers","children":[],"call":[" require "]}," VCR dup_context":{"type":"method","name":"dup_context","children":[],"call":["context [] dup ","context [] "]}," VCR set_context_value":{"type":"method","name":"set_context_value","children":[],"call":[" current_context []= "," current_context "]}," VCR context_value":{"type":"method","name":"context_value","children":[],"call":[" current_context [] "," current_context "]}," VCR get_context":{"type":"method","name":"get_context","children":[],"call":["@context []= "," dup_context ","@context [] ","@@context []  []= "," dup_@context []  ","@@context []  [] "]}," VCR current_context":{"type":"method","name":"current_context","children":[],"call":[" get_context ","Fiber  current ","Thread  current "]}," VCR fibers_available?":{"type":"method","name":"fibers_available?","children":[],"call":[]}," VCR unlink_context":{"type":"method","name":"unlink_context","children":[],"call":["@context delete "]}," VCR link_context":{"type":"method","name":"link_context","children":[],"call":["@context []= "," get_context "]}," VCR CucumberTags ScenarioNameBuilder examples_table_row":{"type":"method","name":"examples_table_row","children":[],"call":["@parts unshift ","| %s | % ","row values join ","row values "]}," VCR CucumberTags ScenarioNameBuilder scenario":{"type":"method","name":"scenario","children":[],"call":[]}," VCR CucumberTags ScenarioNameBuilder feature":{"type":"method","name":"feature","children":[],"call":["@parts unshift ","feature name "]}," VCR CucumberTags ScenarioNameBuilder cassette_name":{"type":"method","name":"cassette_name","children":[],"call":["@parts join "]}," VCR CucumberTags ScenarioNameBuilder initialize":{"type":"method","name":"initialize","children":[],"call":["test_case describe_source_to "]}," VCR Configuration create_fiber_for":{"type":"method","name":"create_fiber_for","children":[],"call":["VCR  unlink_context ","Fiber  current ","RUBY_PLATFORM  == "," raise ","fiber_errors []= ","proc call ","VCR  link_context ","Fiber  new ","Thread  current "]}," VCR Cassette Serializers Compressed deserialize":{"type":"method","name":"deserialize","children":[],"call":["VCR Cassette Serializers YAML  deserialize ","Zlib Inflate  inflate "]}," VCR Cassette Serializers Compressed serialize":{"type":"method","name":"serialize","children":[],"call":["Zlib Deflate  deflate ","VCR Cassette Serializers YAML  serialize "]}," VCR Cassette Serializers Compressed file_extension":{"type":"method","name":"file_extension","children":[],"call":[]}," VCR context_cassettes":{"type":"method","name":"context_cassettes","children":[],"call":[" context_value "]}," VCR LinkedCassette linked?":{"type":"method","name":"linked?","children":[],"call":[]}," VCR LinkedCassette eject":{"type":"method","name":"eject","children":[],"call":[" raise "]}," VCR LinkedCassette list":{"type":"method","name":"list","children":[],"call":[]}," VCR LinkedCassette CassetteList wrap":{"type":"method","name":"wrap","children":[],"call":["LinkedCassette  new ","cassette linked? "]}," VCR LinkedCassette CassetteList size":{"type":"method","name":"size","children":[],"call":["@cassettes size + ","@linked_cassettes size ","@cassettes size "]}," VCR LinkedCassette CassetteList last":{"type":"method","name":"last","children":[],"call":[" wrap ","@linked_cassettes last ","@cassettes last ","@linked_@linked_cassettes last s last ","@linked_@cassettes last s last ","@@linked_cassettes last s last ","@@cassettes last s last "]}," VCR LinkedCassette CassetteList each":{"type":"method","name":"each","children":[],"call":["@cassettes each "," wrap ","@linked_cassettes each "]}," VCR LinkedCassette CassetteList initialize":{"type":"method","name":"initialize","children":[],"call":[]}," VCR Errors UnhandledHTTPRequestError has_used_interaction_matching?":{"type":"method","name":"has_used_interaction_matching?","children":[],"call":["c http_interactions has_used_interaction_matching? "," request ","c http_interactions "," current_cassettes any? "," current_cassettes "]}," VCR Errors UnhandledHTTPRequestError cassettes_list":{"type":"method","name":"cassettes_list","children":[],"call":["lines join ","memo concat ","cassette match_requests_on inspect ","cassette match_requests_on ","cassette record_mode inspect ","cassette record_mode ","cassette file "," current_cassettes inject "," current_cassettes ","lines << "," current_cassettes size == "," current_cassettes size "]}," VCR Errors UnhandledHTTPRequestError cassettes_description":{"type":"method","name":"cassettes_description","children":[],"call":["(str \"There is currently no cassette in use. There are a few ways\") join ","(send\n  (send nil :cassettes_list) :<<\n  (str \"\\n\")) join "," cassettes_list << "," cassettes_list "," current_cassettes size > "," current_cassettes size "," current_cassettes "]}," VCR Errors UnhandledHTTPRequestError current_cassettes":{"type":"method","name":"current_cassettes","children":[],"call":["VCR  eject_cassette "," loop ","VCR  cassettes to_a reverse ","VCR  cassettes to_a ","VCR  cassettes ","VCR  VCR  cassettes to_a reverse  to_a reverse ","VCR  VCR  cassettes to_a reverse  to_a ","VCR  VCR  cassettes to_a reverse  "]}," VCR Cassette linked?":{"type":"method","name":"linked?","children":[],"call":[]}," VCR LibraryHooks WebMock global_hook_disabled_requests":{"type":"method","name":"global_hook_disabled_requests","children":[],"call":["@global_hook_disabled_requests []= ","Thread  current object_id ","Thread  current ","ObjectSpace  define_finalizer ","@global_hook_disabled_requests delete "," lambda ","@global_hook_disabled_requests [] ","Thread  current [] ","@global_hook_disabled_@global_hook_disabled_requests []  []= ","@global_hook_disabled_@global_hook_disabled_requests []  delete ","@global_hook_disabled_@global_hook_disabled_requests []  [] "]}," VCR LibraryHooks WebMock global_hook_disabled?":{"type":"method","name":"global_hook_disabled?","children":[],"call":["requests include? ","@global_hook_disabled_requests [] ","Thread  current object_id ","Thread  current ","Thread  current [] ","@global_hook_disabled_requests []  include? ","Thread  current []  include? ","@global_hook_disabled_@global_hook_disabled_requests []  [] ","@global_hook_disabled_Thread  current []  [] "]}," VCR use_cassettes":{"type":"method","name":"use_cassettes","children":[],"call":[" use_cassettes "," use_cassette ","cassette [] ","cassettes pop ","block call ","cassettes last [] ","cassettes last ","cassettes length == ","cassettes length ","cassettes empty? "," use_cassettes pop s "," use_cassettes pop  ","cassettes pop  [] ","cassettes pop s pop ","cassettes pop s last [] ","cassettes pop s last ","cassettes pop s length == ","cassettes pop s length ","cassettes pop s empty? "]}," VCR LibraryHooks Typhoeus restore_body_from_chunks":{"type":"method","name":"restore_body_from_chunks","children":[],"call":["response options []= ","request instance_variable_get ","response options "]}," VCR LibraryHooks Typhoeus collect_chunks":{"type":"method","name":"collect_chunks","children":[],"call":["request on_body unshift ","request instance_variable_set ","Proc  new ","request on_body "]}," VCR Errors UnhandledHTTPRequestError formatted_headers":{"type":"method","name":"formatted_headers","children":[],"call":["(send\n  (send\n    (send nil :request) :headers) :flat_map) join ","val inspect ","values map "," request headers flat_map "," request headers "," request "]}," VCR Errors UnhandledHTTPRequestError match_request_on_headers?":{"type":"method","name":"match_request_on_headers?","children":[],"call":[" current_matchers include? "," current_matchers "]}," VCR Cassette up_to_date_interactions":{"type":"method","name":"up_to_date_interactions","children":[],"call":["x [] > ","Time  now - "," re_record_interval ","Time  now ","x [] ","interactions take_while "," clean_outdated_http_interactions "]}," VCR Response recompress":{"type":"method","name":"recompress","children":[],"call":[" headers []= "," headers "," update_content_length_header "," body= "," raise ","Zlib Deflate  inflate "," body ","writer close ","writer write ","Zlib GzipWriter  new ","args << "," respond_to? ","StringIO  new "," adapter_metadata [] "," adapter_metadata ","Zlib GzipWriter  new  close ","Zlib GzipWriter  new  write "]}," VCR Response vcr_decompressed?":{"type":"method","name":"vcr_decompressed?","children":[],"call":[" adapter_metadata [] "," adapter_metadata "]}," VCR RequestIgnorer unignore_hosts":{"type":"method","name":"unignore_hosts","children":[],"call":[" ignored_hosts subtract "," ignored_hosts "]}," VCR Configuration unignore_hosts":{"type":"method","name":"unignore_hosts","children":[],"call":["VCR  request_ignorer unignore_hosts ","VCR  request_ignorer "]}," VCR Cassette should_write_recorded_interactions_to_disk?":{"type":"method","name":"should_write_recorded_interactions_to_disk?","children":[],"call":[" record_on_error "," run_failed? ! "," run_failed? "]}," VCR Cassette run_failed?":{"type":"method","name":"run_failed?","children":[],"call":[]}," VCR Cassette run_failed!":{"type":"method","name":"run_failed!","children":[],"call":[]}," VCR Middleware Faraday close":{"type":"method","name":"close","children":[],"call":["@app close ","@app respond_to? "]}," VCR Cassette Persisters FileSystem downcase_cassette_names?":{"type":"method","name":"downcase_cassette_names?","children":[],"call":["VCR  configuration default_cassette_options dig ! ! ","VCR  configuration default_cassette_options dig ! ","VCR  configuration default_cassette_options dig ","VCR  configuration default_cassette_options ","VCR  configuration "]}," VCR turned_on":{"type":"method","name":"turned_on","children":[],"call":[" turn_off! "," turn_on! "]}," VCR RSpec Metadata vcr_cassette_name_for":{"type":"method","name":"vcr_cassette_name_for","children":[],"call":["(send nil :vcr_cassette_name_for\n  (lvar :example_group)) join "," vcr_cassette_name_for ","metadata [] ","metadata key? ","metadata [] empty? ","(send nil :vcr_cassette_name_for\n  (lvar :metadata [] )) join "]}," VCR RequestIgnorer localhost_ignored?":{"type":"method","name":"localhost_ignored?","children":[],"call":["(send\n  (const nil :LOCALHOST_ALIASES) :&\n  (send\n    (send nil :ignore_hosts) :to_a)) any? ","LOCALHOST_ALIASES  & "," ignore_hosts to_a "," ignore_hosts "]}," VCR Cassette SyntaxErrorHandling handle_syntax_errors":{"type":"method","name":"handle_syntax_errors","children":[],"call":[" raise ","e message << ","e message "]}," VCR Middleware Faraday RequestHandler restore_body_from_chunks":{"type":"method","name":"restore_body_from_chunks","children":[],"call":[" env []= ","request instance_variable_get "," env "]}," VCR Middleware Faraday RequestHandler collect_chunks":{"type":"method","name":"collect_chunks","children":[],"call":[" env request on_data= ","caller_on_data call "," env request instance_variable_set "," env request "," env ","Proc  new "," env request on_data "," env request on_data  call "]}," VCR Cassette should_remove_unused_interactions?":{"type":"method","name":"should_remove_unused_interactions?","children":[],"call":[]}}