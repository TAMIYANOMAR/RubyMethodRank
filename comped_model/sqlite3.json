{" SQLite3 Value type":{"type":"method","name":"type","children":[],"call":["@driver value_type "]}," SQLite3 Value to_s":{"type":"method","name":"to_s","children":[],"call":["@driver value_text "]}," SQLite3 Value to_int64":{"type":"method","name":"to_int64","children":[],"call":["@driver value_int64 "]}," SQLite3 Value to_i":{"type":"method","name":"to_i","children":[],"call":["@driver value_int "]}," SQLite3 Value to_f":{"type":"method","name":"to_f","children":[],"call":["@driver value_double "]}," SQLite3 Value length":{"type":"method","name":"length","children":[],"call":["@driver value_bytes ","@driver value_bytes16 "]}," SQLite3 Value to_blob":{"type":"method","name":"to_blob","children":[],"call":["@driver value_blob "]}," SQLite3 Value null?":{"type":"method","name":"null?","children":[],"call":[" type == "," type "]}," SQLite3 Value initialize":{"type":"method","name":"initialize","children":[],"call":["db driver "]}," SQLite3 Translator register_default_translators":{"type":"method","name":"register_default_translators","children":[],"call":["value to_i ","value to_i == ","type =~ "," add_translator ","(or\n  (or\n    (or\n      (or\n        (send\n          (send\n            (send\n              (lvar :v) :strip) :gsub\n            (regexp\n              (str \"00+\")\n              (regopt))\n            (str \"0\")) :==\n          (str \"0\"))\n        (send\n          (send\n            (lvar :v) :downcase) :==\n          (str \"false\")))\n      (send\n        (send\n          (lvar :v) :downcase) :==\n        (str \"f\")))\n    (send\n      (send\n        (lvar :v) :downcase) :==\n      (str \"no\")))\n  (send\n    (send\n      (lvar :v) :downcase) :==\n    (str \"n\"))) ! ","v downcase == ","v downcase ","v strip gsub == ","v strip gsub ","v strip ","(str \"bit\") each ","v to_i ","(str \"integer\") each ","v to_f ","(str \"decimal\") each ","DateTime  parse ","Date  parse ","Time  parse ","(str \"time\") each "]}," SQLite3 Translator type_name":{"type":"method","name":"type_name","children":[],"call":["type upcase ","type =~ ","type nil? ","@type_name_cache [] "]}," SQLite3 Translator translate":{"type":"method","name":"translate","children":[],"call":["@translators [] call ","@translators [] "," type_name ","value nil? ","value to_s ","(str \"datetime\") include? ","type downcase "]}," SQLite3 Translator add_translator":{"type":"method","name":"add_translator","children":[],"call":["@translators []= "," type_name "," warn "," caller [] "," caller "]}," SQLite3 Translator initialize":{"type":"method","name":"initialize","children":[],"call":[" register_default_translators ","Hash  new "," proc "]}," SQLite3 Statement must_be_open!":{"type":"method","name":"must_be_open!","children":[],"call":[" raise "," closed? "]}," SQLite3 Statement get_metadata":{"type":"method","name":"get_metadata","children":[],"call":["@types freeze ","@columns freeze ","@types << ","@driver column_decltype ","@columns << ","@driver column_name ","column_count times ","@driver column_count "," must_be_open! "," column_decltype ","Array  new "," column_count "," column_name "," column_count times ","val downcase ","val nil? ","@driver column_count  times ","@driver @driver column_count  "," @driver column_count  "," @driver column_count  times "," column_decltype  downcase "," column_decltype  nil? "]}," SQLite3 Statement types":{"type":"method","name":"types","children":[],"call":[" get_metadata "," must_be_open! "]}," SQLite3 Statement columns":{"type":"method","name":"columns","children":[],"call":[" get_metadata "]}," SQLite3 Statement active?":{"type":"method","name":"active?","children":[],"call":["@results nil? ! ","@results nil? "," done? ! "," done? "]}," SQLite3 Statement reset!":{"type":"method","name":"reset!","children":[],"call":["@driver reset "]}," SQLite3 Statement execute!":{"type":"method","name":"execute!","children":[],"call":["rows << "," block_given? ","result next "," execute "," to_a "," each ","result next s << "," execute  next "]}," SQLite3 Statement execute":{"type":"method","name":"execute","children":[],"call":[" block_given? ","ResultSet  new "," bind_params ","bind_vars empty? "," reset! "," active? "," must_be_open! "," step ","0 == "," column_count "," done? "]}," SQLite3 Statement bind_param":{"type":"method","name":"bind_param","children":[],"call":[" bind_param "," raise ","index == ","@driver bind_parameter_index ","param [] == ","param [] ","param to_s ","@driver bind_text ","@driver bind_null ","@driver bind_blob ","@driver bind_double ","value to_f ","@driver bind_int ","@driver bind_int64 ","value >= ","2 ** ","Fixnum  === "," reset! "," active? "," must_be_open! ","@driver bind_string ","value to_s "," bind_param to_s  ","@driver bind_parameter_index  == ","@driver bind_parameter_@driver bind_parameter_index  ","@driver bind_param to_s eter_index ","param to_s  [] == ","param to_s  [] ","param to_s  to_s "]}," SQLite3 Statement bind_params":{"type":"method","name":"bind_params","children":[],"call":[" bind_param ","var each ","Hash  === ","bind_vars flatten each ","bind_vars flatten "]}," SQLite3 Statement closed?":{"type":"method","name":"closed?","children":[],"call":[]}," SQLite3 Statement close":{"type":"method","name":"close","children":[],"call":["@driver finalize "," must_be_open! "]}," SQLite3 Statement initialize":{"type":"method","name":"initialize","children":[],"call":["Error  check ","@driver prepare ","@db handle ","@db driver "," raise ","@db driver  prepare "]}," String to_blob":{"type":"method","name":"to_blob","children":[],"call":["SQLite3 Blob  new "]}," SQLite3 ResultSet columns":{"type":"method","name":"columns","children":[],"call":["@stmt columns "]}," SQLite3 ResultSet types":{"type":"method","name":"types","children":[],"call":["@stmt types "]}," SQLite3 ResultSet closed?":{"type":"method","name":"closed?","children":[],"call":["@stmt closed? "]}," SQLite3 ResultSet close":{"type":"method","name":"close","children":[],"call":["@stmt close "]}," SQLite3 ResultSet each":{"type":"method","name":"each","children":[],"call":[" next "]}," SQLite3 ResultSet next":{"type":"method","name":"next","children":[],"call":["row types= ","@stmt types ","row fields= ","@stmt columns ","ArrayWithTypesAndFields  new ","ArrayWithTypes  new ","row respond_to? ","new_row []= ","row each_with_index ","HashWithTypes  [] ","@stmt columns zip to_a flatten ","@stmt columns zip to_a ","@stmt columns zip ","@db results_as_hash ","@db translator translate ","@db translator ","@stmt types zip map ","@stmt types zip ","@db type_translation ","row << ","@driver column_text ","@stmt handle ","@driver column_blob ","type == ","@driver column_type ","@driver data_count times ","@driver data_count "," check ","@driver step ","@stmt must_be_open! ","@driver column_double ","@driver column_int64 ","@stmt done? ","@stmt step "," next_hash ","@stmt columns zip flatten ","@db translate_from_db ","ArrayWithTypesAndFields  new  types= ","ArrayWithTypes  new  types= ","@stmt step  types= ","@db translate_from_db  types= ","row @driver column_type s= ","@stmt @driver column_type s ","ArrayWithTypesAndFields  new  fields= ","ArrayWithTypes  new  fields= ","@stmt step  fields= ","@db translate_from_db  fields= ","ArrayWithTypesAndFields  new  respond_to? ","ArrayWithTypes  new  respond_to? ","@stmt step  respond_to? ","@db translate_from_db  respond_to? ","new_ArrayWithTypesAndFields  new  []= ","new_ArrayWithTypes  new  []= ","new_@stmt step  []= ","new_@db translate_from_db  []= ","HashWithTypes  []  []= ","ArrayWithTypesAndFields  new  each_with_index ","ArrayWithTypes  new  each_with_index ","@stmt step  each_with_index ","@db translate_from_db  each_with_index ","@db @driver step s_as_hash ","@stmt @driver column_type s zip map ","@stmt @driver column_type s zip ","@db @driver column_type _translation ","ArrayWithTypesAndFields  new  << ","ArrayWithTypes  new  << ","@stmt step  << ","@db translate_from_db  << ","@driver column_type  == ","@driver column_@driver column_type  "]}," SQLite3 ResultSet eof?":{"type":"method","name":"eof?","children":[],"call":["@stmt done? "]}," SQLite3 ResultSet reset":{"type":"method","name":"reset","children":[],"call":[" commence ","@stmt bind_params ","@driver reset ","@stmt handle ","@stmt reset! ","@stmt must_be_open! "]}," SQLite3 ResultSet check":{"type":"method","name":"check","children":[],"call":["Error  check ","result == "]}," SQLite3 ResultSet commence":{"type":"method","name":"commence","children":[],"call":[" check ","@driver reset ","@stmt handle ","result == ","@driver step ","@driver step  == "]}," SQLite3 ResultSet initialize":{"type":"method","name":"initialize","children":[],"call":[" commence ","@db driver "]}," SQLite3 Pragmas tweak_default":{"type":"method","name":"tweak_default","children":[],"call":["hash []= ","1 gsub ","hash [] "]}," SQLite3 Pragmas version_compare":{"type":"method","name":"version_compare","children":[],"call":["a > ","a < ","v1 zip each ","v1 zip ","v2 push ","v2 length < ","v2 length ","v1 push ","v1 length < ","v1 length ","(send\n  (lvar :v1) :length) max ","i to_i ","v2 split map ","v2 split ","v1 split map ","v1 split "]}," SQLite3 Pragmas table_info":{"type":"method","name":"table_info","children":[],"call":["result << "," block_given? "," tweak_default ","new_row []= ","row [] ","columns each_with_index ","rows each "," version_compare > "," version_compare "," driver libversion "," driver "," execute2 ","stmt close ","new_row [] to_s ","new_row [] ","Object  const_defined? ","Hash  [] ","columns zip ","stmt each ","SQLite3  libversion to_s ","SQLite3  libversion ","stmt columns "," prepare ","new_row [] downcase ","Hash  []  []= ","stmt columns  each_with_index "," prepare  close ","Hash  []  [] to_s ","Hash  []  [] ","stmt columns  zip "," prepare  each ","stmt stmt columns  "," prepare  columns ","Hash  []  [] downcase "]}," SQLite3 Pragmas index_list":{"type":"method","name":"index_list","children":[],"call":[" get_query_pragma "]}," SQLite3 Pragmas index_info":{"type":"method","name":"index_info","children":[],"call":[" get_query_pragma "]}," SQLite3 Pragmas foreign_key_list":{"type":"method","name":"foreign_key_list","children":[],"call":[" get_query_pragma "]}," SQLite3 Pragmas database_list":{"type":"method","name":"database_list","children":[],"call":[" get_query_pragma "]}," SQLite3 Pragmas vdbe_trace=":{"type":"method","name":"vdbe_trace=","children":[],"call":[" set_boolean_pragma "]}," SQLite3 Pragmas vdbe_trace":{"type":"method","name":"vdbe_trace","children":[],"call":[" get_boolean_pragma "]}," SQLite3 Pragmas parser_trace=":{"type":"method","name":"parser_trace=","children":[],"call":[" set_boolean_pragma "]}," SQLite3 Pragmas parser_trace":{"type":"method","name":"parser_trace","children":[],"call":[" get_boolean_pragma "]}," SQLite3 Pragmas full_column_names=":{"type":"method","name":"full_column_names=","children":[],"call":[" set_boolean_pragma "]}," SQLite3 Pragmas full_column_names":{"type":"method","name":"full_column_names","children":[],"call":[" get_boolean_pragma "]}," SQLite3 Pragmas temp_store=":{"type":"method","name":"temp_store=","children":[],"call":[" set_enum_pragma "]}," SQLite3 Pragmas temp_store":{"type":"method","name":"temp_store","children":[],"call":[" get_enum_pragma "]}," SQLite3 Pragmas default_temp_store=":{"type":"method","name":"default_temp_store=","children":[],"call":[" set_enum_pragma "]}," SQLite3 Pragmas default_temp_store":{"type":"method","name":"default_temp_store","children":[],"call":[" get_enum_pragma "]}," SQLite3 Pragmas synchronous=":{"type":"method","name":"synchronous=","children":[],"call":[" set_enum_pragma "]}," SQLite3 Pragmas synchronous":{"type":"method","name":"synchronous","children":[],"call":[" get_enum_pragma "]}," SQLite3 Pragmas default_synchronous=":{"type":"method","name":"default_synchronous=","children":[],"call":[" set_enum_pragma "]}," SQLite3 Pragmas default_synchronous":{"type":"method","name":"default_synchronous","children":[],"call":[" get_enum_pragma "]}," SQLite3 Pragmas default_cache_size=":{"type":"method","name":"default_cache_size=","children":[],"call":[" set_int_pragma "]}," SQLite3 Pragmas default_cache_size":{"type":"method","name":"default_cache_size","children":[],"call":[" get_int_pragma "]}," SQLite3 Pragmas cache_size=":{"type":"method","name":"cache_size=","children":[],"call":[" set_int_pragma "]}," SQLite3 Pragmas cache_size":{"type":"method","name":"cache_size","children":[],"call":[" get_int_pragma "]}," SQLite3 Pragmas user_cookie=":{"type":"method","name":"user_cookie=","children":[],"call":[" set_int_pragma "]}," SQLite3 Pragmas user_cookie":{"type":"method","name":"user_cookie","children":[],"call":[" get_int_pragma "]}," SQLite3 Pragmas schema_cookie=":{"type":"method","name":"schema_cookie=","children":[],"call":[" set_int_pragma "]}," SQLite3 Pragmas schema_cookie":{"type":"method","name":"schema_cookie","children":[],"call":[" get_int_pragma "]}," SQLite3 Pragmas auto_vacuum=":{"type":"method","name":"auto_vacuum=","children":[],"call":[" set_boolean_pragma "," set_enum_pragma "]}," SQLite3 Pragmas auto_vacuum":{"type":"method","name":"auto_vacuum","children":[],"call":[" get_boolean_pragma "," get_enum_pragma "]}," SQLite3 Pragmas integrity_check":{"type":"method","name":"integrity_check","children":[],"call":[" raise ","row [] ","row [] != "," execute "," get_query_pragma "]}," SQLite3 Pragmas set_int_pragma":{"type":"method","name":"set_int_pragma","children":[],"call":[" execute ","value to_i "]}," SQLite3 Pragmas get_int_pragma":{"type":"method","name":"get_int_pragma","children":[],"call":[" get_first_value to_i "," get_first_value "]}," SQLite3 Pragmas set_enum_pragma":{"type":"method","name":"set_enum_pragma","children":[],"call":[" execute ","match first upcase ","match first "," raise ","mode inspect ","i to_s downcase == ","mode to_s downcase ","mode to_s ","i to_s downcase ","i to_s ","p find ","enums find "]}," SQLite3 Pragmas get_enum_pragma":{"type":"method","name":"get_enum_pragma","children":[],"call":[" get_first_value "]}," SQLite3 Pragmas get_query_pragma":{"type":"method","name":"get_query_pragma","children":[],"call":[" execute ","' + + ","' + ","parms join ","parms empty? ","params join ","params empty? "]}," SQLite3 Pragmas set_boolean_pragma":{"type":"method","name":"set_boolean_pragma","children":[],"call":[" execute "," raise ","mode inspect ","mode downcase "]}," SQLite3 Pragmas get_boolean_pragma":{"type":"method","name":"get_boolean_pragma","children":[],"call":[" get_first_value != "," get_first_value "]}," SQLite3 Error check":{"type":"method","name":"check","children":[],"call":[" raise ","EXCEPTIONS  [] ","(if\n  (lvar :msg)\n  (send\n    (lvar :msg) :+\n    (str \": \"))\n  (str \"\")) + ","db errmsg ","msg + ","result == ","(if\n  (lvar :(if\n  (lvar :msg)\n  (send\n    (lvar :msg) :+\n    (str \": \"))\n  (str \"\")) + )\n  (send\n    (lvar :(if\n  (lvar :msg)\n  (send\n    (lvar :msg) :+\n    (str \": \"))\n  (str \"\")) + ) :+\n    (str \": \"))\n  (str \"\")) + ","db err(if\n  (lvar :msg)\n  (send\n    (lvar :msg) :+\n    (str \": \"))\n  (str \"\")) +  ","(if\n  (lvar :msg)\n  (send\n    (lvar :msg) :+\n    (str \": \"))\n  (str \"\")) +  + "]}," SQLite3 Exception code":{"type":"method","name":"code","children":[],"call":[" class code "," class "]}," SQLite3 Driver FFI Driver utf16_length":{"type":"method","name":"utf16_length","children":[],"call":["ptr [] == ","ptr [] "," loop "]}," SQLite3 Driver FFI Driver api_delegate":{"type":"method","name":"api_delegate","children":[],"call":[]}," SQLite3 Driver FFI Driver column_decltype":{"type":"method","name":"column_decltype","children":[],"call":["result to_s ","API  sqlite3_column_decltype ","API  sqlite3_column_decltype  to_s "]}," SQLite3 Driver FFI Driver column_name":{"type":"method","name":"column_name","children":[],"call":["result to_s ","API  sqlite3_column_name ","API  sqlite3_column_name  to_s "]}," SQLite3 Driver FFI Driver column_text":{"type":"method","name":"column_text","children":[],"call":["result to_s ","API  sqlite3_column_text ","API  sqlite3_column_text force_encoding ","Encoding  utf_8 ","ptr get_bytes force_encoding ","Encoding  utf_16native ","ptr get_bytes ","API  sqlite3_column_bytes16 ","API  sqlite3_column_text16 ","API  sqlite3_column_text  to_s ","API  sqlite3_column_text16  get_bytes force_encoding ","API  sqlite3_column_text16  get_bytes "]}," SQLite3 Driver FFI Driver bind_text":{"type":"method","name":"bind_text","children":[],"call":["API  send ","s length ","value to_s ","API  value to_s end ","value to_s  length ","value to_value to_s  "]}," SQLite3 Driver FFI Driver bind_blob":{"type":"method","name":"bind_blob","children":[],"call":["API  sqlite3_bind_blob ","s length ","value to_s ","API  value to_s qlite3_bind_blob ","value to_s  length ","value to_value to_s  "]}," SQLite3 Driver FFI Driver aggregate_context":{"type":"method","name":"aggregate_context","children":[],"call":["ptr set_object ","Hash  new ","obj nil? ","ptr to_object ","ptr free= ","API  sqlite3_aggregate_context ","ptr set_Hash  new ect ","API  sqlite3_aggregate_context  set_object ","Hash  new  nil? ","ptr to_Hash  new ect ","API  sqlite3_aggregate_context  to_object ","API  sqlite3_aggregate_context  free= "]}," SQLite3 Driver FFI Driver create_function":{"type":"method","name":"create_function","children":[],"call":["API  sqlite3_create_function ","data [] call ","data [] ","API  sqlite3_user_data to_object ","API  sqlite3_user_data "," DL  callback ","@final_handler_callback nil? "," FFI MemoryPointer  new ","args to_s unpack map ","args to_s unpack ","args to_s ","nargs * ","@step_handler_callback nil? ","@func_handler_callback nil? ","API  sqlite3_user_data to_object  [] call ","API  sqlite3_user_data to_object  [] ","API  sqlite3_user_API  sqlite3_user_data to_object  to_object ","API  sqlite3_user_API  sqlite3_user_data to_object  "]}," SQLite3 Driver FFI Driver trace":{"type":"method","name":"trace","children":[],"call":["API  sqlite3_trace ","@trace_handler call ","cookie to_object "," DL  callback "]}," SQLite3 Driver FFI Driver set_authorizer":{"type":"method","name":"set_authorizer","children":[],"call":["API  sqlite3_set_authorizer ","@authorizer_handler call ","d to_s ","c to_s ","b to_s ","a to_s "," DL  callback "]}," SQLite3 Driver FFI Driver busy_handler":{"type":"method","name":"busy_handler","children":[],"call":["API  sqlite3_busy_handler ","@busy_handler call "," DL  callback "]}," SQLite3 Driver FFI Driver result_text":{"type":"method","name":"result_text","children":[],"call":["API  send ","s length ","text to_s ","API  text to_s end ","text to_s  length ","text to_text to_s  "]}," SQLite3 Driver FFI Driver column_blob":{"type":"method","name":"column_blob","children":[],"call":["blob to_s ","API  sqlite3_column_bytes ","blob free= ","API  sqlite3_column_blob ","blob get_bytes ","API  sqlite3_column_blob  to_s ","API  sqlite3_column_blob  free= ","API  sqlite3_column_API  sqlite3_column_blob  ","API  sqlite3_column_blob  get_bytes "]}," SQLite3 Driver FFI Driver value_text":{"type":"method","name":"value_text","children":[],"call":["result to_s ","API  sqlite3_value_bytes ","result free= ","API  send ","result to_s  to_s ","API  send  to_s ","result to_s  free= ","API  send  free= "]}," SQLite3 Driver FFI Driver value_blob":{"type":"method","name":"value_blob","children":[],"call":["blob to_s ","API  sqlite3_value_bytes ","blob free= ","API  sqlite3_value_blob ","API  sqlite3_value_blob  to_s ","API  sqlite3_value_blob  free= ","API  sqlite3_value_API  sqlite3_value_blob  "]}," SQLite3 Driver FFI Driver complete?":{"type":"method","name":"complete?","children":[],"call":["API  send "]}," SQLite3 Driver FFI Driver prepare":{"type":"method","name":"prepare","children":[],"call":["remainder get_pointer get_string ","remainder get_pointer ","handle get_pointer ","API  send ","sql length "," FFI MemoryPointer  new ","API  sqlite3_prepare ","sql bytesize "," get_string_utf_16 ","API  sqlite3_prepare16 ","str bytesize "," c_string ","Encoding  utf_16? "," FFI MemoryPointer  new  get_pointer get_string ","remainder get_pointer get_ c_string ing "," FFI MemoryPointer  new  get_pointer "," get_ c_string ing_utf_16 "," c_string  bytesize "," c_ c_string ing "]}," SQLite3 Driver FFI Driver errmsg":{"type":"method","name":"errmsg","children":[],"call":["API  sqlite3_errmsg ","msg to_s "," utf16_length ","msg free= ","API  sqlite3_errmsg16 ","API  sqlite3_errmsg force_encoding ","Encoding  utf_8 "," get_string_utf_16 force_encoding ","Encoding  utf_16native "," get_string_utf_16 ","API  sqlite3_errAPI  sqlite3_errmsg16  ","API  sqlite3_errmsg16  to_s ","API  sqlite3_errmsg16  free= ","API  sqlite3_errAPI  sqlite3_errmsg16 16 ","API  sqlite3_errAPI  sqlite3_errmsg16  force_encoding "]}," SQLite3 Driver FFI Driver open":{"type":"method","name":"open","children":[],"call":["handle get_pointer ","API  send "," FFI MemoryPointer  new ","API  sqlite3_open ","filename encode ","Encoding  utf_8 ","API  sqlite3_open16 "," c_string ","Encoding  utf_16native "," FFI MemoryPointer  new  get_pointer ","filename encode  encode "]}," SQLite3 Database AggregateDefinitionProxy finalize":{"type":"method","name":"finalize","children":[],"call":[]}," SQLite3 Database AggregateDefinitionProxy step":{"type":"method","name":"step","children":[],"call":[]}," SQLite3 Database FunctionProxy ensure_aggregate!":{"type":"method","name":"ensure_aggregate!","children":[],"call":[" raise "]}," SQLite3 Database FunctionProxy []=":{"type":"method","name":"[]=","children":[],"call":["@context []= "," ensure_aggregate! "]}," SQLite3 Database FunctionProxy []":{"type":"method","name":"[]","children":[],"call":["@context [] "," ensure_aggregate! "]}," SQLite3 Database FunctionProxy count":{"type":"method","name":"count","children":[],"call":["@driver aggregate_count "," ensure_aggregate! "]}," SQLite3 Database FunctionProxy set_error":{"type":"method","name":"set_error","children":[],"call":["@driver result_error ","error to_s "]}," SQLite3 Database FunctionProxy set_result":{"type":"method","name":"set_result","children":[],"call":["@driver result_text "]}," SQLite3 Database FunctionProxy result=":{"type":"method","name":"result=","children":[],"call":[" set_result "]}," SQLite3 Database FunctionProxy initialize":{"type":"method","name":"initialize","children":[],"call":[]}," SQLite3 Database load_driver":{"type":"method","name":"load_driver","children":[],"call":["driver new "," raise ","SQLite3 Driver  const_get "," require ","d downcase ","(str \"FFI\") each ","driver to_s downcase ","driver to_s "]}," SQLite3 Database transaction_active?":{"type":"method","name":"transaction_active?","children":[],"call":[]}," SQLite3 Database rollback":{"type":"method","name":"rollback","children":[],"call":[" execute "]}," SQLite3 Database commit":{"type":"method","name":"commit","children":[],"call":[" execute "]}," SQLite3 Database transaction":{"type":"method","name":"transaction","children":[],"call":[" commit "," rollback "," raise "," block_given? "," execute ","mode to_s "]}," SQLite3 Database create_aggregate_handler":{"type":"method","name":"create_aggregate_handler","children":[],"call":["Error  check ","@driver create_function ","@driver sqlite3_result_error ","e class ","e message ","ctx [] ","ctx []= ","ctx [] finalize ","FunctionProxy  new ","handler new ","@driver aggregate_context "," proc ","ctx [] step ","Value  new ","args map ","handler name ","handler text_rep ","handler respond_to? ","handler arity "," define_aggregator ","proxy new ","@klass new "," private ","@fp result "," instance finalize "," instance "," instance step ","Class  new ","@handler finalize ","@handler step "," define_aggregator2 ","proxy name ","Error  chctx [] ck ","@drivctx [] r crctx [] atctx [] _function ","@driver sqlite3_@driver create_function _error ","@drivctx [] r sqlitctx [] 3_rctx [] sult_ctx [] rror ","ctx []  class ","ctx []  mctx [] ssagctx []  ","@driver aggregate_context  [] ","@driver aggregate_context  []= ","ctx [] finalizctx []  ","@driver aggregate_context  [] finalize ","FunctionProxy  nctx [] w ","handlctx [] r nctx [] w ","@drivctx [] r aggrctx [] gatctx [] _contctx [] xt ","ctx [] stctx [] p ","@driver aggregate_context  [] step ","Valuctx []   nctx [] w ","handlctx [] r namctx []  ","handler handler name  ","handlctx [] r tctx [] xt_rctx [] p ","handler handler text_rep  ","handlctx [] r rctx [] spond_to? ","handlctx [] r arity ","handler handler arity  "," dctx [] finctx [] _aggrctx [] gator ","proxy nctx [] w ","@klass nctx [] w "," privatctx []  ","@fp @driver create_function  ","@fp rctx [] sult ","FunctionProxy  new  result "," instancctx []  finalizctx []  "," instancctx []  "," instancctx []  stctx [] p ","Class  nctx [] w ","@handlctx [] r finalizctx []  ","@handlctx [] r stctx [] p "," dctx [] finctx [] _aggrctx [] gator2 ","proxy namctx []  ","proxy handler name  "]}," SQLite3 Database create_aggregate":{"type":"method","name":"create_aggregate","children":[],"call":["Error  check ","@driver create_function ","@driver result_error ","e class ","e message ","finalize call ","FunctionProxy  new ","ctx [] ","@driver aggregate_context "," proc ","ctx []= ","step call ","Value  new ","args map ","proxy finalize_callback ","proxy step_callback ","proxy instance_eval ","AggregateDefinitionProxy  new "," define_aggregator ","proxy ctx= ","proxy extend "," attr_accessor ","Module  new ","factory new "," define_method ","factory class_eval ","factory instance_eval "," block_given? ","Class  new ","@ctx result "," define_aggregator2 "," finalize_with_ctx "," step_with_ctx ","proxy class_eval ","Error  chctx [] ck ","@drivctx [] r crctx [] atctx [] _function ","@driver @driver create_function _error ","@driver @ctx result _error ","@drivctx [] r rctx [] sult_ctx [] rror ","ctx []  class ","ctx []  mctx [] ssagctx []  ","finalizctx []  call ","FunctionProxy  nctx [] w ","@driver aggregate_context  [] ","@drivctx [] r aggrctx [] gatctx [] _contctx [] xt ","@driver aggregate_context  []= ","stctx [] p call ","Valuctx []   nctx [] w ","proxy finalizctx [] _callback ","AggregateDefinitionProxy  new  finalize_callback ","factory new  finalize_callback ","proxy stctx [] p_callback ","AggregateDefinitionProxy  new  step_callback ","factory new  step_callback ","proxy instancctx [] _ctx [] val ","AggregateDefinitionProxy  new  instance_eval ","factory new  instance_eval ","Aggrctx [] gatctx [] Dctx [] finitionProxy  nctx [] w "," dctx [] finctx [] _aggrctx [] gator ","proxy @driver aggregate_context = ","AggregateDefinitionProxy  new  ctx= ","factory new  ctx= ","proxy ctx [] xtctx [] nd ","AggregateDefinitionProxy  new  extend ","factory new  extend "," attr_accctx [] ssor ","Modulctx []   nctx [] w ","factory nctx [] w "," dctx [] finctx [] _mctx [] thod ","factory class_ctx [] val ","factory instancctx [] _ctx [] val "," block_givctx [] n? ","Class  nctx [] w ","@ctx @driver create_function  ","@ctx @ctx result  ","@ctx rctx [] sult ","@@driver aggregate_context  result ","FunctionProxy  new  result "," dctx [] finctx [] _aggrctx [] gator2 "," finalizctx [] _with_ctx "," finalize_with_@driver aggregate_context  "," stctx [] p_with_ctx "," step_with_@driver aggregate_context  ","proxy class_ctx [] val ","AggregateDefinitionProxy  new  class_eval ","factory new  class_eval "]}," SQLite3 Database create_function":{"type":"method","name":"create_function","children":[],"call":["Error  check ","@driver create_function ","@driver result_error ","e class ","e message ","block call ","Value  new ","args map ","FunctionProxy  new "," proc ","fp result "," define_function "," define_function_with_flags ","@driver @driver create_function _error ","fp @driver create_function  ","FunctionProxy  new  result "]}," SQLite3 Database busy_timeout":{"type":"method","name":"busy_timeout","children":[],"call":["Error  check ","@driver busy_timeout "]}," SQLite3 Database busy_handler":{"type":"method","name":"busy_handler","children":[],"call":["Error  check ","@driver busy_handler "]}," SQLite3 Database interrupt":{"type":"method","name":"interrupt","children":[],"call":["@driver interrupt "]}," SQLite3 Database total_changes":{"type":"method","name":"total_changes","children":[],"call":["@driver total_changes "]}," SQLite3 Database changes":{"type":"method","name":"changes","children":[],"call":["@driver changes "]}," SQLite3 Database last_insert_row_id":{"type":"method","name":"last_insert_row_id","children":[],"call":["@driver last_insert_rowid "]}," SQLite3 Database get_first_value":{"type":"method","name":"get_first_value","children":[],"call":["row [] "," execute ","rs columns [] ","rs columns ","rs next "," query ","rs next  [] "]}," SQLite3 Database get_first_row":{"type":"method","name":"get_first_row","children":[],"call":[" execute "," execute first "]}," SQLite3 Database query":{"type":"method","name":"query","children":[],"call":["result close "," block_given? "," prepare execute "," prepare "," warn "," caller [] "," caller ","(lvar :bind_vars) + ","args empty? ","args empty? ! ","bind_vars nil? ","(nil) + "," prepare execute  close ","(lvar :(lvar :bind_vars) + ) + ","(lvar :(nil) + ) + ","(lvar :bind_vars) +  nil? ","(nil) +  nil? "]}," SQLite3 Database execute_batch":{"type":"method","name":"execute_batch","children":[],"call":["stmt remainder strip ","stmt remainder ","stmt execute "," prepare ","sql empty? ","sql strip ","stmt step ","stmt bind_params ","bind_vars length == ","stmt bind_parameter_count ","bind_vars length ","stmt closed? "," warn "," caller [] "," caller ","(nil) + ","args empty? ","args empty? ! ","bind_vars nil? ","(const nil :Array) include? ","bind_vars class ","stmt remainder strip  empty? ","sql strip  empty? ","stmt remainder strip  strip ","sql strip  strip ","(nil) +  length == ","(nil) +  length ","(nil) +  nil? ","(nil) +  class "]}," SQLite3 Database execute2":{"type":"method","name":"execute2","children":[],"call":["arr << ","result inject ","result columns ","result each "," block_given? ","stmt execute "," prepare ","stmt columns ","stmt execute  inject ","stmt execute  columns ","stmt execute  each "]}," SQLite3 Database execute":{"type":"method","name":"execute","children":[],"call":["arr << ","result inject ","result each "," block_given? ","stmt execute "," prepare ","stmt to_a ","h []= ","h [] to_s ","h [] "," ordered_map_for "," type_translation ","stmt map ","stmt each ","ResultSet  new to_a ","ResultSet  new ","stmt columns ","stmt bind_params "," warn "," caller [] "," caller ","(lvar :bind_vars) + ","args empty? ","args empty? ! ","bind_vars nil? ","sql =~ ","Object  const_defined? ","stmt execute  inject ","stmt execute  each ","result eac ordered_map_for  ","ResultSet  new to_a  execute ","ResultSet  new  execute ","ResultSet  new to_a  to_a ","ResultSet  new  to_a "," ordered_map_for  []= "," ordered_map_for  [] to_s "," ordered_map_for  [] ","ResultSet  new to_a  map ","ResultSet  new  map ","stmt eac ordered_map_for  ","ResultSet  new to_a  each ","ResultSet  new  each ","ResultSet  new to_a  columns ","ResultSet  new  columns ","stmt stmt columns  ","ResultSet  new to_a  bind_params ","ResultSet  new  bind_params ","(lvar :(lvar :bind_vars) + ) + ","(lvar :bind_vars) +  nil? "]}," SQLite3 Database prepare":{"type":"method","name":"prepare","children":[],"call":["stmt close "," block_given? ","@statement_factory new ","Encoding  utf_16? ","stmt closed? ","SQLite3 Statement  new ","@statement_factory new  close ","SQLite3 Statement  new  close ","@statement_factory new  closed? ","SQLite3 Statement  new  closed? "]}," SQLite3 Database authorizer":{"type":"method","name":"authorizer","children":[],"call":["Error  check ","@driver set_authorizer "," authorizer= "]}," SQLite3 Database trace":{"type":"method","name":"trace","children":[],"call":["@driver trace "]}," SQLite3 Database closed?":{"type":"method","name":"closed?","children":[],"call":[]}," SQLite3 Database close":{"type":"method","name":"close","children":[],"call":["Error  check ","@driver close "]}," SQLite3 Database translator":{"type":"method","name":"translator","children":[],"call":["Translator  new "]}," SQLite3 Database errcode":{"type":"method","name":"errcode","children":[],"call":["@driver errcode "]}," SQLite3 Database errmsg":{"type":"method","name":"errmsg","children":[],"call":["@driver errmsg "]}," SQLite3 Database complete?":{"type":"method","name":"complete?","children":[],"call":["@driver complete? "]}," SQLite3 Database initialize":{"type":"method","name":"initialize","children":[],"call":["options fetch ","Error  check ","@driver open ","options [] "," load_driver ","Encoding  utf_16? ","Encoding  find ","Driver  new "," close "," block_given? ","mode & != ","mode & "," make_type_translator "," open_v2 ","file encode "," raise "," open16 ","file encoding == ","file encoding ","Constants Open READWRITE  | "," disable_quirk_mode ","file to_path ","file respond_to? ","Driver  new  open ","options []  & != ","Constants Open READWRITE  |  & != ","options []  & ","Constants Open READWRITE  |  & ","file to_path  encode ","file to_path  encoding == ","file to_path  encoding "," disable_quirk_options []  "," disable_quirk_Constants Open READWRITE  |  ","file to_path  to_path ","file to_path  respond_to? "]}," SQLite3 Database quote":{"type":"method","name":"quote","children":[],"call":["string gsub "]}," SQLite3 Encoding utf_16be":{"type":"method","name":"utf_16be","children":[],"call":[]}," SQLite3 Encoding utf_16le":{"type":"method","name":"utf_16le","children":[],"call":[]}," SQLite3 Encoding utf_8":{"type":"method","name":"utf_8","children":[],"call":[]}," SQLite3 Encoding us_ascii":{"type":"method","name":"us_ascii","children":[],"call":[]}," SQLite3 Encoding utf_16native":{"type":"method","name":"utf_16native","children":[],"call":[" utf_16be "," utf_16le ","Ruby unpack [] == ","Ruby unpack [] ","Ruby unpack "]}," SQLite3 Encoding utf_16?":{"type":"method","name":"utf_16?","children":[],"call":["(send nil :utf_16le) include? "," utf_16be "," utf_16le ","str_or_enc encoding ","str_or_enc kind_of? ","str_or_str_or_enc encoding  str_or_enc encoding oding ","str_or_str_or_enc encoding  kind_of? "]}," SQLite3 Encoding find":{"type":"method","name":"find","children":[],"call":[" raise ","e != "," utf_16native "," utf_16? "," Encoding  find tap "," Encoding  find ","enc downcase == ","enc downcase ","encoding to_s ","encoding to_s  downcase == ","encoding to_s  downcase ","encoding to_s oding to_s "]}," SQLite3 Driver FFI Driver get_string_utf_16":{"type":"method","name":"get_string_utf_16","children":[],"call":["ptr get_bytes ","ptr get_bytes == "]}," SQLite3 Driver FFI Driver terminate_string!":{"type":"method","name":"terminate_string!","children":[],"call":["string << ","\u0000\u0000 force_encoding ","string encoding "]}," SQLite3 Driver FFI Driver add_byte_order_mask":{"type":"method","name":"add_byte_order_mask","children":[],"call":["﻿ encode + ","﻿ encode ","string encoding "]}," SQLite3 Driver FFI Driver c_string":{"type":"method","name":"c_string","children":[],"call":[" terminate_string! "," add_byte_order_mask ","Encoding  utf_16? "]}," SQLite3 Driver FFI Driver bind_string":{"type":"method","name":"bind_string","children":[],"call":["API  sqlite3_bind_blob ","value bytesize ","API  sqlite3_bind_text16 "," add_byte_order_mask ","Encoding  utf_16be ","Encoding  utf_16le ","API  sqlite3_bind_text ","Encoding  us_ascii ","Encoding  utf_8 ","value encoding "," add_byte_order_mask  bytesize "," add_byte_order_mask  encoding "]}," SQLite3 Extensions must_support_extensions!":{"type":"method","name":"must_support_extensions!","children":[],"call":[" raise ","@driver extension_support? "]}," SQLite3 Extensions load_extension":{"type":"method","name":"load_extension","children":[],"call":["Error  check ","@driver load_extension "," must_support_extensions! "]}," SQLite3 Extensions disable_load_extension":{"type":"method","name":"disable_load_extension","children":[],"call":["Error  check ","@driver enable_load_extension "," must_support_extensions! "]}," SQLite3 Extensions enable_load_extension":{"type":"method","name":"enable_load_extension","children":[],"call":["Error  check ","@driver enable_load_extension "," must_support_extensions! "]}," SQLite3 Driver get_string_utf_16":{"type":"method","name":"get_string_utf_16","children":[],"call":["ptr get_bytes ","ptr get_bytes == "]}," SQLite3 Driver terminate_string!":{"type":"method","name":"terminate_string!","children":[],"call":["string << ","\u0000\u0000 force_encoding ","string encoding "]}," SQLite3 Driver add_byte_order_mask":{"type":"method","name":"add_byte_order_mask","children":[],"call":["﻿ encode + ","﻿ encode ","string encoding "]}," SQLite3 Driver c_string":{"type":"method","name":"c_string","children":[],"call":[" terminate_string! "," add_byte_order_mask ","Encoding  utf_16? "]}," SQLite3 Driver api_delegate":{"type":"method","name":"api_delegate","children":[],"call":[]}," SQLite3 Driver enable_load_extension":{"type":"method","name":"enable_load_extension","children":[],"call":["API  sqlite3_enable_load_extension "]}," SQLite3 Driver load_extension":{"type":"method","name":"load_extension","children":[],"call":["API  sqlite3_load_extension "]}," SQLite3 Driver extension_support?":{"type":"method","name":"extension_support?","children":[],"call":[]}," SQLite3 Driver column_text":{"type":"method","name":"column_text","children":[],"call":["API  sqlite3_column_text force_encoding ","Encoding  utf_8 ","API  sqlite3_column_text ","ptr get_bytes force_encoding ","Encoding  utf_16native ","ptr get_bytes ","API  sqlite3_column_bytes16 ","API  sqlite3_column_text16 ","API  sqlite3_column_text16  get_bytes force_encoding ","API  sqlite3_column_text16  get_bytes "]}," SQLite3 Driver column_blob":{"type":"method","name":"column_blob","children":[],"call":["blob get_bytes ","API  sqlite3_column_bytes ","API  sqlite3_column_blob ","API  sqlite3_column_blob  get_bytes ","API  sqlite3_column_API  sqlite3_column_blob  "]}," SQLite3 Driver bind_string":{"type":"method","name":"bind_string","children":[],"call":["API  sqlite3_bind_blob ","value bytesize ","API  sqlite3_bind_text16 "," add_byte_order_mask ","Encoding  utf_16be ","Encoding  utf_16le ","API  sqlite3_bind_text ","Encoding  us_ascii ","Encoding  utf_8 ","value encoding "," add_byte_order_mask  bytesize "," add_byte_order_mask  encoding "]}," SQLite3 Driver prepare":{"type":"method","name":"prepare","children":[],"call":["handle get_pointer ","remainder get_pointer get_string ","remainder get_pointer ","API  sqlite3_prepare ","sql bytesize "," get_string_utf_16 ","API  sqlite3_prepare16 ","str bytesize "," c_string ","Encoding  utf_16? ","FFI MemoryPointer  new ","FFI MemoryPointer  new  get_pointer ","remainder get_pointer get_ c_string ing ","FFI MemoryPointer  new  get_pointer get_string "," get_ c_string ing_utf_16 "," c_string  bytesize "," c_ c_string ing "]}," SQLite3 Driver errmsg":{"type":"method","name":"errmsg","children":[],"call":["API  sqlite3_errmsg force_encoding ","Encoding  utf_8 ","API  sqlite3_errmsg "," get_string_utf_16 force_encoding ","Encoding  utf_16native "," get_string_utf_16 ","API  sqlite3_errmsg16 ","result force_encoding ","result respond_to? ","API  sqlite3_errmsg  force_encoding "," get_string_utf_16  force_encoding ","API  sqlite3_errmsg  respond_to? "," get_string_utf_16  respond_to? "]}," SQLite3 Driver open":{"type":"method","name":"open","children":[],"call":["handle get_pointer ","API  sqlite3_open ","filename encode ","Encoding  utf_8 ","API  sqlite3_open16 "," c_string ","Encoding  utf_16native ","FFI MemoryPointer  new ","filename respond_to? ","FFI MemoryPointer  new  get_pointer ","filename encode  encode ","filename encode  respond_to? "]}," SQLite3 const_missing":{"type":"method","name":"const_missing","children":[],"call":[]}," SQLite3 Statement each":{"type":"method","name":"each","children":[],"call":[" done? "," step "," loop "]}," SQLite3 ResultSet next_hash":{"type":"method","name":"next_hash","children":[],"call":["row types= ","@stmt types ","row fields= ","@stmt columns ","HashWithTypesAndFields  [] ","@stmt columns zip flatten ","@stmt columns zip ","@db translator translate ","@db translator ","@stmt types zip map ","@stmt types zip ","@db type_translation ","@stmt done? ","@stmt step ","@db translate_from_db ","HashWithTypesAndFields  []  types= ","@stmt step  types= ","@db translate_from_db  types= ","HashWithTypesAndFields  []  fields= ","@stmt step  fields= ","@db translate_from_db  fields= "]}," SQLite3 ResultSet each_hash":{"type":"method","name":"each_hash","children":[],"call":[" next_hash "]}," SQLite3 ResultSet HashWithTypesAndFields []":{"type":"method","name":"[]","children":[],"call":[" fields [] "," fields ","key is_a? "," fields []  is_a? "]}," SQLite3 ResultSet HashWithTypesAndFields fields":{"type":"method","name":"fields","children":[],"call":[" warn "," class "," caller [] "," caller "]}," SQLite3 ResultSet HashWithTypesAndFields types":{"type":"method","name":"types","children":[],"call":[" warn "," class "," caller [] "," caller "]}," SQLite3 ResultSet ArrayWithTypesAndFields fields":{"type":"method","name":"fields","children":[],"call":[" warn "," class "," caller [] "," caller "]}," SQLite3 ResultSet ArrayWithTypesAndFields types":{"type":"method","name":"types","children":[],"call":[" warn "," class "," caller [] "," caller "]}," SQLite3 Database ordered_map_for":{"type":"method","name":"ordered_map_for","children":[],"call":["h []= ","row each_with_index ","Hash  [] ","columns zip flatten ","columns zip ","Hash  []  []= ","row eacHash  [] _witHash  [] _index ","HasHash  []   [] "]}," SQLite3 Database readonly?":{"type":"method","name":"readonly?","children":[],"call":[]}," SQLite3 Database type_translation=":{"type":"method","name":"type_translation=","children":[],"call":[" warn "," caller [] "," caller "," make_type_translator "]}," SQLite3 threadsafe?":{"type":"method","name":"threadsafe?","children":[],"call":[]}," SQLite3 Pragmas writable_schema=":{"type":"method","name":"writable_schema=","children":[],"call":[" set_boolean_pragma "]}," SQLite3 Pragmas wal_checkpoint=":{"type":"method","name":"wal_checkpoint=","children":[],"call":[" set_enum_pragma "]}," SQLite3 Pragmas wal_checkpoint":{"type":"method","name":"wal_checkpoint","children":[],"call":[" get_enum_pragma "]}," SQLite3 Pragmas wal_autocheckpoint=":{"type":"method","name":"wal_autocheckpoint=","children":[],"call":[" set_int_pragma "]}," SQLite3 Pragmas wal_autocheckpoint":{"type":"method","name":"wal_autocheckpoint","children":[],"call":[" get_int_pragma "]}," SQLite3 Pragmas vdbe_listing=":{"type":"method","name":"vdbe_listing=","children":[],"call":[" set_boolean_pragma "]}," SQLite3 Pragmas vdbe_debug=":{"type":"method","name":"vdbe_debug=","children":[],"call":[" set_boolean_pragma "]}," SQLite3 Pragmas vdbe_addoptrace=":{"type":"method","name":"vdbe_addoptrace=","children":[],"call":[" set_boolean_pragma "]}," SQLite3 Pragmas user_version=":{"type":"method","name":"user_version=","children":[],"call":[" set_int_pragma "]}," SQLite3 Pragmas user_version":{"type":"method","name":"user_version","children":[],"call":[" get_int_pragma "]}," SQLite3 Pragmas threads=":{"type":"method","name":"threads=","children":[],"call":[" set_int_pragma "]}," SQLite3 Pragmas threads":{"type":"method","name":"threads","children":[],"call":[" get_int_pragma "]}," SQLite3 Pragmas stats":{"type":"method","name":"stats","children":[],"call":[" get_query_pragma "]}," SQLite3 Pragmas soft_heap_limit=":{"type":"method","name":"soft_heap_limit=","children":[],"call":[" set_int_pragma "]}," SQLite3 Pragmas soft_heap_limit":{"type":"method","name":"soft_heap_limit","children":[],"call":[" get_int_pragma "]}," SQLite3 Pragmas shrink_memory":{"type":"method","name":"shrink_memory","children":[],"call":[" execute "]}," SQLite3 Pragmas short_column_names=":{"type":"method","name":"short_column_names=","children":[],"call":[" set_boolean_pragma "]}," SQLite3 Pragmas short_column_names":{"type":"method","name":"short_column_names","children":[],"call":[" get_boolean_pragma "]}," SQLite3 Pragmas secure_delete=":{"type":"method","name":"secure_delete=","children":[],"call":[" set_boolean_pragma "]}," SQLite3 Pragmas secure_delete":{"type":"method","name":"secure_delete","children":[],"call":[" get_boolean_pragma "]}," SQLite3 Pragmas schema_version=":{"type":"method","name":"schema_version=","children":[],"call":[" set_int_pragma "]}," SQLite3 Pragmas schema_version":{"type":"method","name":"schema_version","children":[],"call":[" get_int_pragma "]}," SQLite3 Pragmas reverse_unordered_selects=":{"type":"method","name":"reverse_unordered_selects=","children":[],"call":[" set_boolean_pragma "]}," SQLite3 Pragmas reverse_unordered_selects":{"type":"method","name":"reverse_unordered_selects","children":[],"call":[" get_boolean_pragma "]}," SQLite3 Pragmas recursive_triggers=":{"type":"method","name":"recursive_triggers=","children":[],"call":[" set_boolean_pragma "]}," SQLite3 Pragmas recursive_triggers":{"type":"method","name":"recursive_triggers","children":[],"call":[" get_boolean_pragma "]}," SQLite3 Pragmas read_uncommitted=":{"type":"method","name":"read_uncommitted=","children":[],"call":[" set_boolean_pragma "]}," SQLite3 Pragmas read_uncommitted":{"type":"method","name":"read_uncommitted","children":[],"call":[" get_boolean_pragma "]}," SQLite3 Pragmas quick_check":{"type":"method","name":"quick_check","children":[],"call":[" get_query_pragma "]}," SQLite3 Pragmas query_only=":{"type":"method","name":"query_only=","children":[],"call":[" set_boolean_pragma "]}," SQLite3 Pragmas query_only":{"type":"method","name":"query_only","children":[],"call":[" get_boolean_pragma "]}," SQLite3 Pragmas page_size=":{"type":"method","name":"page_size=","children":[],"call":[" set_int_pragma "]}," SQLite3 Pragmas page_size":{"type":"method","name":"page_size","children":[],"call":[" get_int_pragma "]}," SQLite3 Pragmas page_count":{"type":"method","name":"page_count","children":[],"call":[" get_int_pragma "]}," SQLite3 Pragmas mmap_size=":{"type":"method","name":"mmap_size=","children":[],"call":[" set_int_pragma "]}," SQLite3 Pragmas mmap_size":{"type":"method","name":"mmap_size","children":[],"call":[" get_int_pragma "]}," SQLite3 Pragmas max_page_count=":{"type":"method","name":"max_page_count=","children":[],"call":[" set_int_pragma "]}," SQLite3 Pragmas max_page_count":{"type":"method","name":"max_page_count","children":[],"call":[" get_int_pragma "]}," SQLite3 Pragmas locking_mode=":{"type":"method","name":"locking_mode=","children":[],"call":[" set_enum_pragma "]}," SQLite3 Pragmas locking_mode":{"type":"method","name":"locking_mode","children":[],"call":[" get_enum_pragma "]}," SQLite3 Pragmas legacy_file_format=":{"type":"method","name":"legacy_file_format=","children":[],"call":[" set_boolean_pragma "]}," SQLite3 Pragmas legacy_file_format":{"type":"method","name":"legacy_file_format","children":[],"call":[" get_boolean_pragma "]}," SQLite3 Pragmas journal_size_limit=":{"type":"method","name":"journal_size_limit=","children":[],"call":[" set_int_pragma "]}," SQLite3 Pragmas journal_size_limit":{"type":"method","name":"journal_size_limit","children":[],"call":[" get_int_pragma "]}," SQLite3 Pragmas journal_mode=":{"type":"method","name":"journal_mode=","children":[],"call":[" set_enum_pragma "]}," SQLite3 Pragmas journal_mode":{"type":"method","name":"journal_mode","children":[],"call":[" get_enum_pragma "]}," SQLite3 Pragmas index_xinfo":{"type":"method","name":"index_xinfo","children":[],"call":[" get_query_pragma "]}," SQLite3 Pragmas incremental_vacuum":{"type":"method","name":"incremental_vacuum","children":[],"call":[" get_query_pragma "]}," SQLite3 Pragmas ignore_check_constraints=":{"type":"method","name":"ignore_check_constraints=","children":[],"call":[" set_boolean_pragma "]}," SQLite3 Pragmas fullfsync=":{"type":"method","name":"fullfsync=","children":[],"call":[" set_boolean_pragma "]}," SQLite3 Pragmas fullfsync":{"type":"method","name":"fullfsync","children":[],"call":[" get_boolean_pragma "]}," SQLite3 Pragmas freelist_count":{"type":"method","name":"freelist_count","children":[],"call":[" get_int_pragma "]}," SQLite3 Pragmas foreign_keys=":{"type":"method","name":"foreign_keys=","children":[],"call":[" set_boolean_pragma "]}," SQLite3 Pragmas foreign_keys":{"type":"method","name":"foreign_keys","children":[],"call":[" get_boolean_pragma "]}," SQLite3 Pragmas foreign_key_check":{"type":"method","name":"foreign_key_check","children":[],"call":[" get_query_pragma "]}," SQLite3 Pragmas encoding=":{"type":"method","name":"encoding=","children":[],"call":[" set_enum_pragma "]}," SQLite3 Pragmas encoding":{"type":"method","name":"encoding","children":[],"call":[" get_enum_pragma "]}," SQLite3 Pragmas defer_foreign_keys=":{"type":"method","name":"defer_foreign_keys=","children":[],"call":[" set_boolean_pragma "]}," SQLite3 Pragmas defer_foreign_keys":{"type":"method","name":"defer_foreign_keys","children":[],"call":[" get_boolean_pragma "]}," SQLite3 Pragmas data_version":{"type":"method","name":"data_version","children":[],"call":[" get_int_pragma "]}," SQLite3 Pragmas count_changes=":{"type":"method","name":"count_changes=","children":[],"call":[" set_boolean_pragma "]}," SQLite3 Pragmas count_changes":{"type":"method","name":"count_changes","children":[],"call":[" get_boolean_pragma "]}," SQLite3 Pragmas compile_options":{"type":"method","name":"compile_options","children":[],"call":[" get_query_pragma "]}," SQLite3 Pragmas collation_list":{"type":"method","name":"collation_list","children":[],"call":[" get_query_pragma "]}," SQLite3 Pragmas checkpoint_fullfsync=":{"type":"method","name":"checkpoint_fullfsync=","children":[],"call":[" set_boolean_pragma "]}," SQLite3 Pragmas checkpoint_fullfsync":{"type":"method","name":"checkpoint_fullfsync","children":[],"call":[" get_boolean_pragma "]}," SQLite3 Pragmas cell_size_check=":{"type":"method","name":"cell_size_check=","children":[],"call":[" set_boolean_pragma "]}," SQLite3 Pragmas cell_size_check":{"type":"method","name":"cell_size_check","children":[],"call":[" get_boolean_pragma "]}," SQLite3 Pragmas case_sensitive_like=":{"type":"method","name":"case_sensitive_like=","children":[],"call":[" set_boolean_pragma "]}," SQLite3 Pragmas cache_spill=":{"type":"method","name":"cache_spill=","children":[],"call":[" set_boolean_pragma "]}," SQLite3 Pragmas cache_spill":{"type":"method","name":"cache_spill","children":[],"call":[" get_boolean_pragma "]}," SQLite3 Pragmas busy_timeout=":{"type":"method","name":"busy_timeout=","children":[],"call":[" set_int_pragma "]}," SQLite3 Pragmas busy_timeout":{"type":"method","name":"busy_timeout","children":[],"call":[" get_int_pragma "]}," SQLite3 Pragmas automatic_index=":{"type":"method","name":"automatic_index=","children":[],"call":[" set_boolean_pragma "]}," SQLite3 Pragmas automatic_index":{"type":"method","name":"automatic_index","children":[],"call":[" get_boolean_pragma "]}," SQLite3 Pragmas application_id=":{"type":"method","name":"application_id=","children":[],"call":[" set_int_pragma "]}," SQLite3 Pragmas application_id":{"type":"method","name":"application_id","children":[],"call":[" get_int_pragma "]}," SQLite3 Database filename":{"type":"method","name":"filename","children":[],"call":[" db_filename "]}," SQLite3 Database make_type_translator":{"type":"method","name":"make_type_translator","children":[],"call":[" translator translate "," translator ","types zip map ","types zip "," lambda "]}," SQLite3 Database translate_from_db":{"type":"method","name":"translate_from_db","children":[],"call":["@type_translator call "]}," SQLite3 Database define_aggregator":{"type":"method","name":"define_aggregator","children":[{"type":"method","name":"template","children":[],"asgn":[],"call":[]},{"type":"method","name":"name","children":[],"asgn":[],"call":[]},{"type":"method","name":"arity","children":[],"asgn":[],"call":[]},{"type":"method","name":"initialize","children":[],"asgn":[{"type":"instance","name":"@klass","value":" class template clone "},[" class template clone "]],"call":[" class template clone "," class template "," class "]},{"type":"method","name":"step","children":[],"asgn":[],"call":["@klass step "]},{"type":"method","name":"finalize","children":[],"asgn":[],"call":["@klass finalize "]}],"call":[" define_aggregator2 ","@klass finalize ","@klass step "," class template clone "," class template "," class ","@template method arity ","@template method ","Class  new "," class template clone  finalize "," class template clone  step "]}," SQLite3 Database execute_batch2":{"type":"method","name":"execute_batch2","children":[],"call":[" exec_batch ","result map "," block_given? "," exec_batch  map "]}}