{" Representable ClassMethods Accessors representation_name":{"type":"method","name":"representation_name","children":[],"call":[" name split last underscore "," name split last "," name split "," name "," explicit_representation_name "," name split last gsub gsub downcase "," name split last gsub gsub "," name split last gsub "]}," Representable ClassMethods Accessors representation_name=":{"type":"method","name":"representation_name=","children":[],"call":[" explicit_representation_name= "]}," Representable ClassMethods Declarations add_reader":{"type":"method","name":"add_reader","children":[],"call":[" instance_variable_get ","attr instance_variable_name "," define_method ","attr accessor "]}," Representable ClassMethods Declarations representable_reader":{"type":"method","name":"representable_reader","children":[],"call":[" add_reader "," representable_attr each "," representable_attr "]}," Representable ClassMethods Declarations representable_attr":{"type":"method","name":"representable_attr","children":[],"call":[" representable_attrs << "," representable_attrs "," definition_class new tap "," definition_class new "," definition_class ","syms map ","syms extract_options! "]}," Representable ClassMethods Declarations representable_collection":{"type":"method","name":"representable_collection","children":[],"call":[" representable_property ","options []= ","(send\n  (lvar :options) :[]\n  (sym :as)) compact ","options [] "]}," Representable ClassMethods Declarations representable_property":{"type":"method","name":"representable_property","children":[],"call":[" attr_writer ","attr accessor "," add_reader "," representable_attr ","attr getter "," attr_reader "," add_representable_property ","options [] == ","options [] ","  representable_attr _writer ","  add_representable_property _writer "," representable_attr  accessor "," add_representable_property  accessor "," representable_ representable_attr  "," representable_ add_representable_property  "," representable_attr  getter "," add_representable_property  getter ","  representable_attr _reader ","  add_representable_property _reader "]}," Representable ClassMethods Declarations definition_class":{"type":"method","name":"definition_class","children":[],"call":[]}," Representable included":{"type":"method","name":"included","children":[],"call":[]}," Representable XML InstanceMethods to_xml":{"type":"method","name":"to_xml","children":[],"call":["ref update_xml "," public_send ","ref accessor ","refs each ","XML  binding_for_definition "," class representable_attrs map "," class representable_attrs "," class ","Nokogiri XML Node  new tap ","Nokogiri XML Node  new ","Nokogiri XML Document  new ","params [] to_s ","params [] ","params reverse_merge! "," class representation_name ","ref definition accessor ","ref definition "]}," Representable XML ClassMethods create_from_xml":{"type":"method","name":"create_from_xml","children":[],"call":[" new "]}," Representable XML ClassMethods from_xml":{"type":"method","name":"from_xml","children":[],"call":["inst send ","ref definition setter ","ref definition ","ref value_in ","refs each ","XML  binding_for_definition "," representable_attrs map "," representable_attrs "," create_from_xml tap "," create_from_xml ","Nokogiri XML Node  from "," new from_xml "," new "," create_represented from_xml "," create_represented ","object update_properties_from ","object from_xml ","ref ref value_in _in "," create_from_Nokogiri XML Node  from  tap "," create_from_Nokogiri XML Node  from  "," new from_Nokogiri XML Node  from  "," create_represented from_Nokogiri XML Node  from  ","object from_Nokogiri XML Node  from  "]}," Representable XML ClassMethods definition_class":{"type":"method","name":"definition_class","children":[],"call":[]}," Representable XML included":{"type":"method","name":"included","children":[],"call":[]}," Representable XML binding_for_definition":{"type":"method","name":"binding_for_definition","children":[],"call":["(or\n  (send\n    (const nil :BINDING_FOR_TYPE) :[]\n    (send\n      (lvar :definition) :sought_type))\n  (const nil :ObjectBinding)) new ","BINDING_FOR_TYPE  [] ","definition sought_type "]}," from":{"type":"method","name":"from","children":[],"call":[]}," add_node":{"type":"method","name":"add_node","children":[],"call":[" add_child ","Nokogiri XML Node  new "," document "]}," Representable JSON InstanceMethods to_json":{"type":"method","name":"to_json","children":[],"call":[" class representation_name "," class ","options [] == ","options [] ","ref update_json "," public_send ","ref accessor ","refs each ","JSON  binding_for_definition "," class representable_attrs map "," class representable_attrs "," tap "," to_hash to_json "," to_hash "]}," Representable JSON ClassMethods create_from_json":{"type":"method","name":"create_from_json","children":[],"call":[" new "]}," Representable JSON ClassMethods from_json":{"type":"method","name":"from_json","children":[],"call":["inst send ","ref definition setter ","ref definition ","ref value_in ","refs each ","JSON  binding_for_definition "," representable_attrs map "," representable_attrs "," create_from_json tap "," create_from_json ","data [] "," representation_name ","options [] == ","options [] "," JSON  [] ","data is_a? "," representation_name to_s "," new from_json "," new "," create_represented from_json "," create_represented ","object from_json ","ref ref value_in _in ","data []  [] "," JSON  []  [] ","data []  is_a? "," JSON  []  is_a? "]}," Representable JSON included":{"type":"method","name":"included","children":[],"call":[]}," Representable JSON binding_for_definition":{"type":"method","name":"binding_for_definition","children":[],"call":["(or\n  (send\n    (const nil :BINDING_FOR_TYPE) :[]\n    (send\n      (lvar :definition) :sought_type))\n  (const nil :ObjectBinding)) new ","BINDING_FOR_TYPE  [] ","definition sought_type "]}," Representable Definition extract_type":{"type":"method","name":"extract_type","children":[],"call":["as first ","as is_a? ","as first  first ","as first  is_a? "]}," Representable Definition apply":{"type":"method","name":"apply","children":[],"call":["value collect "," array? "]}," Representable Definition content?":{"type":"method","name":"content?","children":[],"call":["@name == "]}," Representable Definition name?":{"type":"method","name":"name?","children":[],"call":["@name == "]}," Representable Definition typed?":{"type":"method","name":"typed?","children":[],"call":[" sought_type is_a? "," sought_type "," representer_module "," options [] "," options "," deserialize_class is_a? "," deserialize_class "," [] "]}," Representable Definition setter":{"type":"method","name":"setter","children":[],"call":[" accessor "," name "]}," Representable Definition instance_variable_name":{"type":"method","name":"instance_variable_name","children":[],"call":[" accessor "," name "]}," Representable Definition initialize":{"type":"method","name":"initialize","children":[],"call":["opts [] sub! ","opts [] ","opts [] to_s =~ ","opts [] to_s ","opts []= ","opts [] == ","@sought_type roxml_tag_name ","@sought_type respond_to? "," extract_type ","(or\n  (send\n    (lvar :opts) :[]\n    (sym :from))\n  (ivar :@name)) to_s "," accessor ","(or\n  (send\n    (lvar :opts) :[]\n    (sym :tag))\n  (ivar :@accessor)) to_s ","opts [] is_a? ","opts delete ","sym to_s ","opts [] to_s starts_with? ","options [] sub! ","options [] ","options [] to_s =~ ","options [] to_s ","(or\n  (send\n    (lvar :options) :[]\n    (sym :from))\n  (send nil :name)) to_s "," name "," array? ","(or\n  (send\n    (lvar :opts) :[]\n    (sym :from))\n  (send nil :name)) to_s ","@options [] "," setup! "," handle_deprecations! ","options clone ","options []= ","Pipeline  [] ","Cloneable Hash  new "," extract_type  roxml_tag_name ","options []  roxml_tag_name "," extract_type  respond_to? ","options []  respond_to? ","(or\n  (send\n    (lvar :opts) :[]\n    (sym :from))\n  (ivar :(or\n  (send\n    (lvar :opts) :[]\n    (sym :from))\n  (ivar :@name)) to_s )) to_s ","(or\n  (send\n    (lvar :opts) :[]\n    (sym :from))\n  (ivar : accessor )) to_s ","(or\n  (send\n    (lvar :opts) :[]\n    (sym :from))\n  (ivar :(or\n  (send\n    (lvar :opts) :[]\n    (sym :tag))\n  (ivar :@accessor)) to_s )) to_s ","(or\n  (send\n    (lvar :opts) :[]\n    (sym :from))\n  (ivar :sym to_s )) to_s ","(or\n  (send\n    (lvar :opts) :[]\n    (sym :tag))\n  (ivar :sym to_s )) to_s ","options clone  [] sub! ","options clone  [] ","options clone  [] to_s =~ ","options clone  [] to_s ","(or\n  (send\n    (lvar :options clone ) :[]\n    (sym :from))\n  (send nil :name)) to_s ","@options clone  [] ","Cloneable Hash  new  [] ","options clone  clone ","options clone  []= "]}," Module bool_attr_reader":{"type":"method","name":"bool_attr_reader","children":[],"call":[" instance_variable_get "," define_method ","attrs each "]}," Representable XML ObjectBinding update_xml_for_entity":{"type":"method","name":"update_xml_for_entity","children":[],"call":["xml add_child "," serialize "]}," Representable XML ObjectBinding update_xml_for_collection":{"type":"method","name":"update_xml_for_collection","children":[],"call":[" update_xml_for_entity ","collection each "]}," Representable XML ObjectBinding value_from_node":{"type":"method","name":"value_from_node","children":[],"call":[" deserialize "," sought_type "," collect_for "," definition sought_type from_node "," definition sought_type "," definition "," create_object from_node "," create_object "]}," Representable XML ObjectBinding deserialize":{"type":"method","name":"deserialize","children":[],"call":["node_class from_xml ","(send nil :create_object) from_node "," create_object "]}," Representable XML ObjectBinding serialize":{"type":"method","name":"serialize","children":[],"call":["object to_xml ","(lvar :object) to_node "]}," Representable XML ObjectBinding default":{"type":"method","name":"default","children":[],"call":[]}," Representable XML ObjectBinding update_xml":{"type":"method","name":"update_xml","children":[],"call":[" update_xml_for_entity "," update_xml_for_collection "," array? "," wrap tap "," wrap "," definition array? "," definition "]}," Representable XML NamespaceBinding value_from_node":{"type":"method","name":"value_from_node","children":[],"call":["xml namespace prefix ","xml namespace "]}," Representable XML TextBinding add":{"type":"method","name":"add","children":[],"call":["dest content= ","value to_s ","dest add_child ","Nokogiri XML CDATA  new "," content ","dest document "," cdata? ","child content= ","xml add_child ","Nokogiri XML Node  new ","xml document ","dest add_xml add_child  ","xml add_child  content= ","xml add_xml add_child  "]}," Representable XML TextBinding value_from_node":{"type":"method","name":"value_from_node","children":[],"call":["node content "," collect_for "]}," Representable XML TextBinding update_xml":{"type":"method","name":"update_xml","children":[],"call":[" add ","xml add_node "," name ","value each "," array? ","xml name= "," name? "," content? "," wrap tap "," wrap "," definition from "," definition "," definition array? "," definition name? "," definition content? "]}," Representable XML AttributeBinding value_from_node":{"type":"method","name":"value_from_node","children":[],"call":["xml [] "," name "," definition from "," definition "]}," Representable XML AttributeBinding update_xml":{"type":"method","name":"update_xml","children":[],"call":["xml []= ","values to_s "," name "," wrap tap "," wrap "," definition from "," definition "]}," Representable XML Binding collect_for":{"type":"method","name":"collect_for","children":[],"call":["vals first "," array? ","nodes collect ","xml search "," xpath "," definition array? "," definition ","xml search  collect "]}," Representable XML Binding wrap":{"type":"method","name":"wrap","children":[],"call":["xml add_node ","wrap_with to_s ","c name == ","c name ","xml children find ","xml children ","opts [] ! ","opts [] ","xml name == ","xml name ","wrap_with ! "," wrapper "," auto_wrapper "," definition wrapper "," definition "," wrapper  to_s "," auto_wrapper  to_s "," definition wrapper  to_s "," wrapper  ! "," auto_wrapper  ! "," definition wrapper  ! "]}," Representable XML Binding xpath":{"type":"method","name":"xpath","children":[],"call":[" name "," definition from "," definition "," as "]}," Representable XML Binding default":{"type":"method","name":"default","children":[],"call":[]}," Representable XML Binding value_in":{"type":"method","name":"value_in","children":[],"call":[" default "," value_from_node ","Nokogiri XML Node  from "]}," Representable XML Binding initialize":{"type":"method","name":"initialize","children":[],"call":[]}," Representable JSON ObjectBinding value_from_hash":{"type":"method","name":"value_from_hash","children":[],"call":[" sought_type from_json "," sought_type "," collect_for "," definition sought_type from_hash "," definition sought_type "," definition "," definition sought_type from_json "]}," Representable JSON ObjectBinding default":{"type":"method","name":"default","children":[],"call":[]}," Representable JSON ObjectBinding update_json":{"type":"method","name":"update_json","children":[],"call":["hash merge! ","value to_json ","v to_json ","value collect "," accessor "," array? ","value to_hash ","v to_hash "," definition from "," definition "," definition array? "]}," Representable JSON TextBinding value_from_hash":{"type":"method","name":"value_from_hash","children":[],"call":[" collect_for "]}," Representable JSON TextBinding update_json":{"type":"method","name":"update_json","children":[],"call":["hash []= "," name "," definition from "," definition "]}," Representable JSON Binding collect_for":{"type":"method","name":"collect_for","children":[],"call":["vals first "," array? ","nodes collect ","nodes is_a? ","hash [] "," name to_s "," name "," definition array? "," definition "," definition from ","hash []  collect ","hash []  is_a? "]}," Representable JSON Binding default":{"type":"method","name":"default","children":[],"call":[]}," Representable JSON Binding value_in":{"type":"method","name":"value_in","children":[],"call":[" default "," value_from_hash "]}," Representable JSON Binding initialize":{"type":"method","name":"initialize","children":[],"call":[]}," Representable ClassMethods Declarations representable_accessor":{"type":"method","name":"representable_accessor","children":[],"call":[" attr_writer ","attr accessor "," add_reader "," representable_attr each "," representable_attr "]}," Representable Xml InstanceMethods to_xml":{"type":"method","name":"to_xml","children":[],"call":["ref update_xml "," public_send ","ref accessor ","refs each ","attr to_ref "," class representable_attrs map "," class representable_attrs "," class ","Nokogiri XML Node  new tap ","Nokogiri XML Node  new ","Nokogiri XML Document  new ","params [] to_s ","params [] ","params reverse_merge! "," class representation_name "]}," Representable Xml ClassMethods create_from_xml":{"type":"method","name":"create_from_xml","children":[],"call":[" new "]}," Representable Xml ClassMethods from_xml":{"type":"method","name":"from_xml","children":[],"call":["inst send ","ref definition setter ","ref definition ","ref value_in ","refs each ","attr to_ref "," representable_attrs map "," representable_attrs "," create_from_xml tap "," create_from_xml ","Nokogiri XML Node  from ","ref ref value_in _in "," create_from_Nokogiri XML Node  from  tap "," create_from_Nokogiri XML Node  from  "]}," Representable Xml Declarations xml_accessor":{"type":"method","name":"xml_accessor","children":[],"call":[" representable_accessor "]}," Representable Xml Declarations xml_name":{"type":"method","name":"xml_name","children":[],"call":[" explicit_representation_name= "]}," Representable XMLObjectRef update_xml_for_entity":{"type":"method","name":"update_xml_for_entity","children":[],"call":["xml add_child "," serialize "]}," Representable XMLObjectRef update_xml_for_collection":{"type":"method","name":"update_xml_for_collection","children":[],"call":[" update_xml_for_entity ","collection each "]}," Representable XMLObjectRef value_from_node":{"type":"method","name":"value_from_node","children":[],"call":[" deserialize "," sought_type "," collect_for "]}," Representable XMLObjectRef deserialize":{"type":"method","name":"deserialize","children":[],"call":["node_class from_xml "]}," Representable XMLObjectRef serialize":{"type":"method","name":"serialize","children":[],"call":["object to_xml "]}," Representable XMLObjectRef default":{"type":"method","name":"default","children":[],"call":[]}," Representable XMLObjectRef update_xml":{"type":"method","name":"update_xml","children":[],"call":[" update_xml_for_entity "," update_xml_for_collection "," array? "," wrap tap "," wrap "]}," Representable XMLNameSpaceRef value_from_node":{"type":"method","name":"value_from_node","children":[],"call":["xml namespace prefix ","xml namespace "]}," Representable XMLTextRef add":{"type":"method","name":"add","children":[],"call":["dest content= ","value to_s ","dest add_child ","Nokogiri XML CDATA  new "," content ","dest document "," cdata? "]}," Representable XMLTextRef value_from_node":{"type":"method","name":"value_from_node","children":[],"call":["node content "," collect_for "]}," Representable XMLTextRef update_xml":{"type":"method","name":"update_xml","children":[],"call":[" add ","xml add_node "," name ","value each "," array? ","xml name= "," name? "," content? "," wrap tap "," wrap "]}," Representable XMLAttributeRef value_from_node":{"type":"method","name":"value_from_node","children":[],"call":["xml [] "," name "]}," Representable XMLAttributeRef update_xml":{"type":"method","name":"update_xml","children":[],"call":["xml []= ","values to_s "," name "," wrap tap "," wrap "]}," Representable XMLRef collect_for":{"type":"method","name":"collect_for","children":[],"call":["vals first "," array? ","nodes collect ","xml search "," xpath ","xml search  collect "]}," Representable XMLRef wrap":{"type":"method","name":"wrap","children":[],"call":["xml add_node ","wrap_with to_s ","c name == ","c name ","xml children find ","xml children ","opts [] ! ","opts [] ","xml name == ","xml name ","wrap_with ! "," wrapper "," auto_wrapper "," wrapper  to_s "," auto_wrapper  to_s "," wrapper  ! "," auto_wrapper  ! "]}," Representable XMLRef xpath":{"type":"method","name":"xpath","children":[],"call":[" name "]}," Representable XMLRef default":{"type":"method","name":"default","children":[],"call":[]}," Representable XMLRef value_in":{"type":"method","name":"value_in","children":[],"call":[" default "," value_from_node ","Nokogiri XML Node  from "]}," Representable XMLRef initialize":{"type":"method","name":"initialize","children":[],"call":[]}," Representable Definition to_ref":{"type":"method","name":"to_ref","children":[],"call":["(send nil :sought_type) new "," raise "," sought_type "]}," Representable JSON InstanceMethods to_hash":{"type":"method","name":"to_hash","children":[],"call":[" class representation_name "," class ","options [] == ","options [] ","ref update_json "," public_send ","ref accessor ","refs each ","JSON  binding_for_definition "," class representable_attrs map "," class representable_attrs "," tap ","ref definition accessor ","ref definition "]}," Representable ClassMethods Accessors infer_representation_name":{"type":"method","name":"infer_representation_name","children":[],"call":[" name split last gsub gsub downcase "," name split last gsub gsub "," name split last gsub "," name split last "," name split "," name "]}," Representable ClassMethods Accessors representation_wrap":{"type":"method","name":"representation_wrap","children":[],"call":[" representable_wrap "," infer_representation_name "," representable_wrap === "]}," Representable ClassMethods Accessors representation_wrap=":{"type":"method","name":"representation_wrap=","children":[],"call":[" representable_wrap= "," representable_attrs wrap= "," representable_attrs "]}," Representable ClassMethods Declarations add_representable_property":{"type":"method","name":"add_representable_property","children":[],"call":[" representable_attrs << "," representable_attrs "," definition_class new tap "," definition_class new "," definition_class "]}," Representable ClassMethods Declarations representable_bindings":{"type":"method","name":"representable_bindings","children":[],"call":[" binding_for_definition "," representable_attrs map "," representable_attrs "]}," Representable create_representation_with":{"type":"method","name":"create_representation_with","children":[],"call":["ref write "," public_send ","ref definition getter ","ref definition ","(lvar :ref) ! "," block_given? "," class representable_bindings each "," class representable_bindings "," class ","bin write "," send ","bin definition getter ","bin definition "," eval_property_block ","bin definition default "," representable_bindings each "," representable_bindings "," skip_property? "," representable_bindings_for each "," representable_bindings_for "," compile_fragment "," serialize_property "," representable_mapper serialize "," representable_mapper "," represented "," normalize_options! "," representable_map! "," normalize_options "]}," Representable update_properties_from":{"type":"method","name":"update_properties_from","children":[],"call":[" send ","ref definition setter ","ref definition ","ref read ","(lvar :ref) ! "," block_given? "," class representable_bindings each "," class representable_bindings "," class ","bin definition setter ","bin definition ","bin read "," eval_property_block ","bin definition default "," representable_bindings each "," representable_bindings "," skip_property? "," representable_bindings_for each "," representable_bindings_for "," uncompile_fragment "," deserialize_property "," represented "," representable_mapper deserialize "," representable_mapper "," normalize_options! "," representable_map! "," normalize_options "]}," Representable XML to_xml":{"type":"method","name":"to_xml","children":[],"call":[" to_node to_s "," to_node "," create_representation_with ","Nokogiri XML Node  new ","Nokogiri XML Document  new ","root_tag to_s "," class representation_name "," class ","params [] "]}," Representable XML to_node":{"type":"method","name":"to_node","children":[],"call":[" create_representation_with ","Nokogiri XML Node  new ","Nokogiri XML Document  new ","root_tag to_s "," class representation_wrap "," class ","options [] "," representation_wrap "," Node ","options []= "]}," Representable XML from_node":{"type":"method","name":"from_node","children":[],"call":[" update_properties_from "]}," Representable XML from_xml":{"type":"method","name":"from_xml","children":[],"call":[" from_node ","Nokogiri  XML root ","Nokogiri  XML "," update_properties_from ","Nokogiri XML Node  from "," parse_xml "," from_Nokogiri  XML root  "," from_ parse_xml  "," parse_Nokogiri XML Node  from  "]}," Representable XML ClassMethods from_node":{"type":"method","name":"from_node","children":[],"call":[" new from_node "," new "," create_represented from_node "," create_represented "]}," Representable XML ClassMethods binding_for_definition":{"type":"method","name":"binding_for_definition","children":[],"call":["(or\n  (send\n    (const nil :BINDING_FOR_TYPE) :[]\n    (send\n      (lvar :definition) :sought_type))\n  (const nil :ObjectBinding)) new ","BINDING_FOR_TYPE  [] ","definition sought_type "]}," Representable JSON to_json":{"type":"method","name":"to_json","children":[],"call":[" to_hash to_json "," to_hash ","MultiJson  dump "]}," Representable JSON to_hash":{"type":"method","name":"to_hash","children":[],"call":[" class representation_wrap "," class ","options [] "," create_representation_with "," representation_wrap "," class representation_name ","options [] == "]}," Representable JSON from_hash":{"type":"method","name":"from_hash","children":[],"call":[" update_properties_from ","data [] ","wrap to_s "," class representation_wrap "," class ","options [] "," representation_wrap ","data []  [] "]}," Representable JSON from_json":{"type":"method","name":"from_json","children":[],"call":[" from_hash "," JSON  [] "," update_properties_from ","data [] "," class representation_name to_s "," class representation_name "," class ","options [] == ","options [] ","MultiJson  load "," JSON  []  [] ","data []  [] ","MultiJson  load  [] "]}," Representable JSON ClassMethods from_hash":{"type":"method","name":"from_hash","children":[],"call":[" new from_hash "," new "," create_represented from_hash "," create_represented ","object update_properties_from "," create_from_json tap "," create_from_json "]}," Representable JSON ClassMethods binding_for_definition":{"type":"method","name":"binding_for_definition","children":[],"call":["(or\n  (send\n    (const nil :BINDING_FOR_TYPE) :[]\n    (send\n      (lvar :definition) :sought_type))\n  (const nil :ObjectBinding)) new ","BINDING_FOR_TYPE  [] ","definition sought_type "]}," Representable Definition array?":{"type":"method","name":"array?","children":[],"call":[" options [] "," options "," [] "]}," Representable XML ObjectBinding write_entity":{"type":"method","name":"write_entity","children":[],"call":["xml add_child ","entity to_node "," write_object to_node "," write_object "," serialize "]}," Representable XML ObjectBinding write_collection":{"type":"method","name":"write_collection","children":[],"call":[" write_entity ","collection each "]}," Representable XML ObjectBinding write":{"type":"method","name":"write","children":[],"call":[" write_entity "," write_collection "," definition array? "," definition ","object each "," wrap tap "," wrap "]}," Representable XML TextBinding write":{"type":"method","name":"write","children":[],"call":[" add "," definition from "," definition ","value each "," definition array? ","xml add_node ","xml name= "," definition name? "," definition content? "," wrap tap "," wrap "]}," Representable XML AttributeBinding write":{"type":"method","name":"write","children":[],"call":["xml []= ","values to_s "," definition from "," definition "," wrap tap "," wrap "," serialize_for "]}," Representable XML Binding read":{"type":"method","name":"read","children":[],"call":[" default "," value_from_node ","Nokogiri XML Node  from "," deserialize_from ","nodes size == ","nodes size "," find_nodes "," find_nodes  size == "," find_nodes  size "," find_ find_nodes  "]}," Representable JSON ObjectBinding write":{"type":"method","name":"write","children":[],"call":["hash []= ","value to_hash "," definition from "," definition ","v to_hash ","value collect "," definition array? "," serialize ","object collect ","hash merge! "]}," Representable JSON TextBinding write":{"type":"method","name":"write","children":[],"call":["hash []= "," definition from "," definition "]}," Representable JSON Binding read":{"type":"method","name":"read","children":[],"call":[" default "," value_from_hash "]}," Representable eval_property_block":{"type":"method","name":"eval_property_block","children":[],"call":["(send\n  (send\n    (send\n      (lvar :binding) :definition) :name) :to_sym) ! ","binding definition name to_sym ","binding definition name ","binding definition "," block_given? "]}," Representable ClassMethods Accessors representable_wrap=":{"type":"method","name":"representable_wrap=","children":[],"call":[]}," Representable ClassMethods Accessors representable_wrap":{"type":"method","name":"representable_wrap","children":[],"call":[]}," Representable ClassMethods Accessors representable_attrs":{"type":"method","name":"representable_attrs","children":[],"call":["Config  new "]}," Representable representable_bindings":{"type":"method","name":"representable_bindings","children":[],"call":[" binding_for_definition "," representable_attrs map "," representable_attrs "]}," Representable representable_attrs":{"type":"method","name":"representable_attrs","children":[],"call":[" class representable_attrs "," class "," class definitions "]}," Representable Config infer_name_for":{"type":"method","name":"infer_name_for","children":[],"call":["name to_s split last gsub gsub downcase ","name to_s split last gsub gsub ","name to_s split last gsub ","name to_s split last ","name to_s split ","name to_s "]}," Representable Config wrap_for":{"type":"method","name":"wrap_for","children":[],"call":[" wrap "," infer_name_for "," wrap === ","value === ","@wrap evaluate "," [] evaluate "," [] "," block_given? ","represented class name ","represented class ","value != ","@wrap call ","options to_hash ","@wrap evaluate  === "," [] evaluate  === ","@wrap call  === ","@wrap evaluate  != "," [] evaluate  != ","@wrap call  != "]}," Representable representation_wrap":{"type":"method","name":"representation_wrap","children":[],"call":[" representable_attrs wrap_for "," class name "," class "," representable_attrs "," represented "]}," Representable Represents representer":{"type":"method","name":"representer","children":[],"call":[]}," Representable Represents represents":{"type":"method","name":"represents","children":[],"call":[" representer []= ","options [] "," representer "]}," Representable ClassMethods Declarations add_property":{"type":"method","name":"add_property","children":[],"call":[" representable_attrs << "," representable_attrs "," definition_class new tap "," definition_class new "," definition_class "]}," Representable ClassMethods Declarations collection":{"type":"method","name":"collection","children":[],"call":[" property ","options []= "]}," Representable ClassMethods Declarations property":{"type":"method","name":"property","children":[],"call":[" attr_writer ","attr getter ","options [] == ","options [] "," attr_reader "," add_property "," representable_attrs << "," definition_class new "," definition_class "," representable_attrs ","(send\n  (send nil :representable_attrs) :<<\n  (send\n    (send nil :definition_class) :new\n    (lvar :name)\n    (lvar :options))) last ","options []= "," inline_representer "," representer_engine "," block_given? ","  add_property _writer "," add_property  getter ","  add_property _reader "," representable_ add_property s << "," representable_ add_property s ","(send\n  (send nil :representable_ add_property s) :<<\n  (send\n    (send nil :definition_class) :new\n    (lvar :name)\n    (lvar :options))) last "]}," Representable ClassMethods create_represented":{"type":"method","name":"create_represented","children":[],"call":[" block_given? "," new tap "," new "]}," Representable skip_property?":{"type":"method","name":"skip_property?","children":[],"call":["res ! ","options [] ","props include? ","binding definition name to_sym ","binding definition name ","binding definition "," skip_conditional_property? "," skip_excluded_property? ","props include?  ! "]}," Representable JSON ObjectBinding serialize":{"type":"method","name":"serialize","children":[],"call":[" write_object to_hash "," write_object ","(lvar :object) to_hash "]}," Representable JSON ObjectBinding read":{"type":"method","name":"read","children":[],"call":[" create_object from_hash "," create_object "," collect_for "]}," Representable JSON TextBinding read":{"type":"method","name":"read","children":[],"call":[" collect_for "]}," Representable Binding Extend extend_for":{"type":"method","name":"extend_for","children":[],"call":["object extend "," definition representer_module "," definition "," representer_module "," representer_module_for "," definition representer_ definition representer_module ule "," definition representer_ representer_module ule "," definition representer_ representer_module_for ule "," representer_ definition representer_module ule "," representer_ representer_module ule "," representer_ representer_module_for ule "," representer_ definition representer_module ule_for "," representer_ representer_module ule_for "," representer_ representer_module_for ule_for "]}," Representable Binding Extend create_object":{"type":"method","name":"create_object","children":[],"call":[" extend_for "]}," Representable Binding Extend write_object":{"type":"method","name":"write_object","children":[],"call":[" extend_for "]}," Representable Binding Hooks create_object":{"type":"method","name":"create_object","children":[],"call":[" definition sought_type new "," definition sought_type "," definition "]}," Representable Binding Hooks write_object":{"type":"method","name":"write_object","children":[],"call":[]}," Representable Binding initialize":{"type":"method","name":"initialize","children":[],"call":[" setup_exec_context! "," setup! ","@definition has_default? ","@definition typed? ","@definition array? ","@definition setter ","@definition getter "," [] "," [] == ","@definition name ","@definition representable? "]}," Representable representable_bindings_for":{"type":"method","name":"representable_bindings_for","children":[],"call":["format binding_for_definition "," representable_attrs map "," representable_attrs "," send ","format build_for "," cleanup_options ","format build "," representable_binding_for "," representable_attrs collect "," cleanup_ cleanup_options  "]}," Representable Definition cdata?":{"type":"method","name":"cdata?","children":[],"call":[]}," Representable ClassMethods Declarations hash":{"type":"method","name":"hash","children":[],"call":[" property ","options []= "]}," XML Hash representable_attrs":{"type":"method","name":"representable_attrs","children":[],"call":["attrs << ","Definition  new ","attrs size == ","attrs size "]}," XML Hash update_properties_from":{"type":"method","name":"update_properties_from","children":[],"call":[" replace ","bin deserialize_from "," representable_bindings_for first "," representable_bindings_for "," representable_bindings_for first  deserialize_from "," representable_ representable_bindings_for first dings_for first "," representable_ representable_bindings_for first dings_for "]}," XML Hash create_representation_with":{"type":"method","name":"create_representation_with","children":[],"call":["bin serialize_for "," representable_bindings_for first "," representable_bindings_for "," representable_bindings_for first  serialize_for "," representable_ representable_bindings_for first dings_for first "," representable_ representable_bindings_for first dings_for "]}," XML Hash ClassMethods values":{"type":"method","name":"values","children":[],"call":[" hash "]}," XML Hash included":{"type":"method","name":"included","children":[],"call":[]}," XML Collection representable_attrs":{"type":"method","name":"representable_attrs","children":[],"call":["attrs << ","Definition  new ","attrs size == ","attrs size "]}," XML Collection update_properties_from":{"type":"method","name":"update_properties_from","children":[],"call":[" replace ","bin deserialize_from "," representable_bindings_for first "," representable_bindings_for ","doc search "," represented replace "," represented "," representable_bindings_for first  deserialize_from "," representable_ representable_bindings_for first dings_for first "," representable_ representable_bindings_for first dings_for "]}," XML Collection create_representation_with":{"type":"method","name":"create_representation_with","children":[],"call":["bin serialize_for "," representable_bindings_for first "," representable_bindings_for ","bin write "," represented "," representable_bindings_for first  serialize_for "," representable_ representable_bindings_for first dings_for first "," representable_ representable_bindings_for first dings_for "," representable_bindings_for first  write "]}," XML Collection ClassMethods items":{"type":"method","name":"items","children":[],"call":[" collection "]}," XML Collection included":{"type":"method","name":"included","children":[],"call":[]}," JSON Hash representable_attrs":{"type":"method","name":"representable_attrs","children":[],"call":["attrs << ","Definition  new ","attrs size == ","attrs size "]}," JSON Hash update_properties_from":{"type":"method","name":"update_properties_from","children":[],"call":[" replace ","bin deserialize_from "," representable_bindings_for first "," representable_bindings_for "," representable_bindings_for first  deserialize_from "," representable_ representable_bindings_for first dings_for first "," representable_ representable_bindings_for first dings_for "]}," JSON Hash create_representation_with":{"type":"method","name":"create_representation_with","children":[],"call":["bin serialize_for "," representable_bindings_for first "," representable_bindings_for "," representable_bindings_for first  serialize_for "," representable_ representable_bindings_for first dings_for first "," representable_ representable_bindings_for first dings_for "]}," JSON Hash ClassMethods values":{"type":"method","name":"values","children":[],"call":[" hash "]}," JSON Hash included":{"type":"method","name":"included","children":[],"call":[]}," JSON Collection representable_attrs":{"type":"method","name":"representable_attrs","children":[],"call":["attrs << ","Definition  new ","attrs size == ","attrs size "]}," JSON Collection update_properties_from":{"type":"method","name":"update_properties_from","children":[],"call":[" replace ","bin deserialize_from "," representable_bindings_for first "," representable_bindings_for "," represented replace "," represented "," representable_bindings_for first  deserialize_from "," representable_ representable_bindings_for first dings_for first "," representable_ representable_bindings_for first dings_for "]}," JSON Collection create_representation_with":{"type":"method","name":"create_representation_with","children":[],"call":["bin serialize_for "," representable_bindings_for first "," representable_bindings_for "," represented "," representable_bindings_for first  serialize_for "," representable_ representable_bindings_for first dings_for first "," representable_ representable_bindings_for first dings_for "]}," JSON Collection ClassMethods items":{"type":"method","name":"items","children":[],"call":[" collection "]}," JSON Collection included":{"type":"method","name":"included","children":[],"call":[]}," Representable Definition attribute":{"type":"method","name":"attribute","children":[],"call":[" options [] "," options "]}," Representable Definition representer_module":{"type":"method","name":"representer_module","children":[],"call":[" options [] "," options "," [] ","@options [] "]}," Representable Definition default":{"type":"method","name":"default","children":[],"call":[" options [] "," options "," array? "]}," Representable Definition from":{"type":"method","name":"from","children":[],"call":["(or\n  (send\n    (send nil :options) :[]\n    (sym :from))\n  (send nil :name)) to_s "," name "," options [] "," options ","(or\n  (or\n    (send\n      (send nil :options) :[]\n      (sym :from))\n    (send\n      (send nil :options) :[]\n      (sym :as)))\n  (send nil :name)) to_s "]}," Representable Definition sought_type":{"type":"method","name":"sought_type","children":[],"call":[" options [] "," options "]}," Representable Definition hash?":{"type":"method","name":"hash?","children":[],"call":[" options [] "," options "," [] "]}," Representable XML AttributeBinding serialize_for":{"type":"method","name":"serialize_for","children":[],"call":["parent []= "," serialize ","value to_s "," definition from "," definition "," from "," as "]}," Representable XML AttributeBinding read":{"type":"method","name":"read","children":[],"call":[" deserialize ","node [] "," definition from "," definition "," from "," as "]}," Representable XML HashBinding deserialize_from":{"type":"method","name":"deserialize_from","children":[],"call":["hash []= "," deserialize_node ","node name ","nodes children each ","nodes children "," tap "," deserialize "," content_for "]}," Representable XML HashBinding serialize_items":{"type":"method","name":"serialize_items","children":[],"call":[" serialize_node ","Nokogiri XML Node  new ","parent document ","value collect "," serialize_Nokogiri XML Node  new  "]}," Representable XML CollectionBinding deserialize_from":{"type":"method","name":"deserialize_from","children":[],"call":[" deserialize_node ","nodes collect ","CollectionDeserializer  new deserialize ","CollectionDeserializer  new "," content_for "]}," Representable XML CollectionBinding serialize_items":{"type":"method","name":"serialize_items","children":[],"call":[" serialize_for ","value collect "]}," Representable XML CollectionBinding write":{"type":"method","name":"write","children":[],"call":["parent << "," serialize_items each "," serialize_items "]}," Representable XML PropertyBinding xpath":{"type":"method","name":"xpath","children":[],"call":[" definition from "," definition "," from "," as "]}," Representable XML PropertyBinding deserialize_node":{"type":"method","name":"deserialize_node","children":[],"call":[" deserialize ","node content "]}," Representable XML PropertyBinding deserialize_from":{"type":"method","name":"deserialize_from","children":[],"call":[" deserialize_node ","nodes first "," content_for "," deserialize "]}," Representable XML PropertyBinding serialize_node":{"type":"method","name":"serialize_node","children":[],"call":["node content= "," serialize "," typed? "]}," Representable XML PropertyBinding serialize_for":{"type":"method","name":"serialize_for","children":[],"call":[" serialize_node ","Nokogiri XML Node  new ","parent document "," definition from "," definition "," node_for "," from "," as "," serialize_Nokogiri XML Node  new  "," serialize_ node_for  "," Nokogiri XML Node  new _for ","  node_for _for "]}," Representable XML PropertyBinding read":{"type":"method","name":"read","children":[],"call":[" deserialize_from ","nodes size == ","nodes size ","node search "," xpath "," definition options [] "," definition options "," definition "," options [] "," options "," find_nodes ","node search  size == "," find_nodes  size == ","node search  size "," find_nodes  size "," find_node search  "," find_ find_nodes  "]}," Representable XML PropertyBinding write":{"type":"method","name":"write","children":[],"call":["parent << "," serialize_for ","wrap_node << "," node_for "," definition options [] "," definition options "," definition "," options [] "," options "," [] "," node_for  << "," definition options [] _node << "," options [] _node << "," [] _node << "]}," Representable XML PropertyBinding initialize":{"type":"method","name":"initialize","children":[],"call":[" extend ","definition typed? "," typed? "]}," Representable XML ObjectBinding create_object":{"type":"method","name":"create_object","children":[],"call":[" definition sought_type new "," definition sought_type "," definition "]}," Representable XML ObjectBinding serialize_node":{"type":"method","name":"serialize_node","children":[],"call":[" serialize "]}," Representable XML ObjectBinding deserialize_node":{"type":"method","name":"deserialize_node","children":[],"call":[" deserialize "]}," Representable JSON HashBinding deserialize_from":{"type":"method","name":"deserialize_from","children":[],"call":["fragment []= "," deserialize ","fragment each "]}," Representable JSON HashBinding serialize_for":{"type":"method","name":"serialize_for","children":[],"call":["hash []= "," serialize ","value each "," tap "]}," Representable JSON CollectionBinding deserialize_from":{"type":"method","name":"deserialize_from","children":[],"call":[" deserialize ","fragment collect "]}," Representable JSON CollectionBinding serialize_for":{"type":"method","name":"serialize_for","children":[],"call":[" serialize ","value collect "]}," Representable JSON PropertyBinding deserialize_from":{"type":"method","name":"deserialize_from","children":[],"call":[" deserialize "]}," Representable JSON PropertyBinding serialize_for":{"type":"method","name":"serialize_for","children":[],"call":[" serialize "]}," Representable JSON JSONBinding write":{"type":"method","name":"write","children":[],"call":["hash []= "," serialize_for "," definition from "," definition "]}," Representable JSON JSONBinding read":{"type":"method","name":"read","children":[],"call":[" deserialize_from ","hash [] "," definition from "," definition ","hash has_key? "]}," Representable JSON JSONBinding initialize":{"type":"method","name":"initialize","children":[],"call":[" extend ","definition typed? "]}," Representable JSON ObjectBinding create_object":{"type":"method","name":"create_object","children":[],"call":[" definition sought_type new "," definition sought_type "," definition "]}," Representable JSON ObjectBinding deserialize":{"type":"method","name":"deserialize","children":[],"call":["(send nil :create_object) from_hash "," create_object "]}," Representable Binding Extend deserialize":{"type":"method","name":"deserialize","children":[],"call":[" extend_for "]}," Representable Binding Extend serialize":{"type":"method","name":"serialize","children":[],"call":[" extend_for "]}," Representable Binding Hooks deserialize":{"type":"method","name":"deserialize","children":[],"call":[]}," Representable Binding Hooks serialize":{"type":"method","name":"serialize","children":[],"call":[]}," Representable read_fragment_for":{"type":"method","name":"read_fragment_for","children":[],"call":["bin read "]}," Representable write_fragment_for":{"type":"method","name":"write_fragment_for","children":[],"call":["bin write ","bin definition skipable_nil_value? ","bin definition ","bin skipable_nil_value? "]}," Representable uncompile_fragment":{"type":"method","name":"uncompile_fragment","children":[],"call":[" send ","bin definition setter ","bin definition ","bin definition default "," read_fragment_for ","bin definition default_for ","bin definition has_default? ","value == ","bin setter ","bin default ","bin has_default? ","bin read_fragment ","bin set ","bin uncompile_fragment ","bin definition default_for  == "," read_fragment_for  == ","bin definition default  == ","bin default  == "]}," Representable compile_fragment":{"type":"method","name":"compile_fragment","children":[],"call":[" write_fragment_for ","bin definition default ","bin definition "," send ","bin definition getter ","bin definition default_for ","bin default_for ","bin getter ","bin write_fragment ","bin get ","bin compile_fragment "]}," Representable Config clone":{"type":"method","name":"clone","children":[],"call":[" class new ","d clone "," collect "," class "]}," Representable Definition clone":{"type":"method","name":"clone","children":[],"call":[" class new "," options clone "," options "," name "," class ","@options clone "]}," Representable skip_conditional_property?":{"type":"method","name":"skip_conditional_property?","children":[],"call":[" instance_exec ! "," instance_exec ","binding definition options [] ","binding definition options ","binding definition ","binding options [] ","binding options ","args << ","binding user_options ","condition arity > ","condition arity "," represented instance_exec ! "," represented instance_exec "," represented ","binding definition options []  arity > ","binding options []  arity > ","binding definition options []  arity ","binding options []  arity "]}," Representable skip_excluded_property?":{"type":"method","name":"skip_excluded_property?","children":[],"call":["res ! ","options [] ","props include? ","binding definition name to_sym ","binding definition name ","binding definition ","binding name to_sym ","binding name ","props include?  ! "]}," Coercion ClassMethods property":{"type":"method","name":"property","children":[],"call":[" attribute ","args [] ","options []= "," represented send "," coercer coerce "," coercer "," represented "," lambda "," representable_attrs inheritable_array first attribute ","options [] "," representable_attrs inheritable_array first "," representable_attrs inheritable_array "," representable_attrs "]}," Coercion included":{"type":"method","name":"included","children":[],"call":[]}," Deprecations skip_excluded_property?":{"type":"method","name":"skip_excluded_property?","children":[],"call":[" warn ","options []= ","options [] "]}," Representable Definition skipable_nil_value?":{"type":"method","name":"skipable_nil_value?","children":[],"call":[" options [] ! "," options [] "," options ","value nil? "," [] ! "," [] "]}," Representable Definition default_for":{"type":"method","name":"default_for","children":[],"call":[" default "," skipable_nil_value? "," [] "," skipable_empty_value? "]}," Representable Deprecations skip_excluded_property?":{"type":"method","name":"skip_excluded_property?","children":[],"call":[" warn ","options []= ","options [] "]}," Representable Definition has_default?":{"type":"method","name":"has_default?","children":[],"call":[" options has_key? "," options "," has_key? ","@options has_key? "]}," XML Hash definition_opts":{"type":"method","name":"definition_opts","children":[],"call":[]}," XML AttributeHash definition_opts":{"type":"method","name":"definition_opts","children":[],"call":[]}," XML AttributeHash ClassMethods values":{"type":"method","name":"values","children":[],"call":[" hash ","options merge! "]}," XML AttributeHash included":{"type":"method","name":"included","children":[],"call":[]}," JSON Hash definition_opts":{"type":"method","name":"definition_opts","children":[],"call":[]}," Representable HashMethods filter_keys_for":{"type":"method","name":"filter_keys_for","children":[],"call":["props include? ! ","props include? ","k to_sym ","options [] ","hash reject "]}," Representable HashMethods update_properties_from":{"type":"method","name":"update_properties_from","children":[],"call":[" replace ","bin deserialize_from "," filter_keys_for "," representable_bindings_for first "," representable_bindings_for "," represented replace "," represented "," representable_mapper bindings first "," representable_mapper bindings "," representable_mapper ","Deserializer Hash  new call ","Deserializer Hash  new "," filter_keys_for! ","Collect Hash  [] call ","Collect Hash  [] ","bin default_parse_fragment_functions "," representable_map first "," representable_map "," representable_bindings_for first  deserialize_from "," representable_mapper bindings first  deserialize_from "," representable_map first  deserialize_from "," representable_ representable_bindings_for first dings_for first "," representable_ representable_mapper bindings first dings_for first "," representable_ representable_map first dings_for first "," representable_ representable_bindings_for first dings_for "," representable_ representable_mapper bindings first dings_for "," representable_ representable_map first dings_for "," representable_mapper  representable_bindings_for first dings first "," representable_mapper  representable_mapper bindings first dings first "," representable_mapper  representable_map first dings first "," representable_mapper  representable_bindings_for first dings "," representable_mapper  representable_mapper bindings first dings "," representable_mapper  representable_map first dings "," representable_bindings_for first  default_parse_fragment_functions "," representable_mapper bindings first  default_parse_fragment_functions "," representable_map first  default_parse_fragment_functions "]}," Representable HashMethods create_representation_with":{"type":"method","name":"create_representation_with","children":[],"call":["bin write "," filter_keys_for "," representable_bindings_for first "," representable_bindings_for "," represented "," representable_mapper bindings first "," representable_mapper bindings "," representable_mapper ","bin render_fragment "," filter_keys_for! ","Collect Hash  [] call ","Collect Hash  [] ","bin default_render_fragment_functions "," representable_map first "," representable_map ","Collect Hash  [] extend call ","Collect Hash  [] extend "," representable_bindings_for first  write "," representable_mapper bindings first  write "," representable_map first  write "," representable_ representable_bindings_for first dings_for first "," representable_ representable_mapper bindings first dings_for first "," representable_ representable_map first dings_for first "," representable_ representable_bindings_for first dings_for "," representable_ representable_mapper bindings first dings_for "," representable_ representable_map first dings_for "," representable_mapper  representable_bindings_for first dings first "," representable_mapper  representable_mapper bindings first dings first "," representable_mapper  representable_map first dings first "," representable_mapper  representable_bindings_for first dings "," representable_mapper  representable_mapper bindings first dings "," representable_mapper  representable_map first dings "," representable_bindings_for first  render_fragment "," representable_mapper bindings first  render_fragment "," representable_map first  render_fragment "," representable_bindings_for first  default_render_fragment_functions "," representable_mapper bindings first  default_render_fragment_functions "," representable_map first  default_render_fragment_functions "]}," Representable HashMethods representable_attrs":{"type":"method","name":"representable_attrs","children":[],"call":["attrs << ","Definition  new "," definition_opts ","attrs size == ","attrs size "]}," Representable XML AttributeHashBinding deserialize_from":{"type":"method","name":"deserialize_from","children":[],"call":["hash []= "," deserialize ","node each "," tap "]}," Representable XML AttributeHashBinding write":{"type":"method","name":"write","children":[],"call":["parent []= "," serialize ","v to_s ","value collect "]}," Representable ClassMethods Declarations representation_wrap=":{"type":"method","name":"representation_wrap=","children":[],"call":[" representable_attrs wrap= "," representable_attrs "]}," Representable ClassMethods Declarations representable_attrs":{"type":"method","name":"representable_attrs","children":[],"call":["Config  new "," build_config "]}," Representable ModuleExtensions extended":{"type":"method","name":"extended","children":[],"call":["object representable_attrs= "," representable_attrs "]}," Representable ClassInclusions included":{"type":"method","name":"included","children":[],"call":["base representable_attrs push "," representable_attrs clone "," representable_attrs ","base representable_attrs ","base representable_attrs inherit ","base inherit_module! "]}," Representable XML HashBinding serialize_for":{"type":"method","name":"serialize_for","children":[],"call":[" set_for "," serialize_node "," node_for ","value collect "," serialize_ node_for  ","  node_for _for "]}," Representable XML CollectionBinding set_for":{"type":"method","name":"set_for","children":[],"call":["Nokogiri XML NodeSet  new ","parent document "]}," Representable XML CollectionBinding serialize_for":{"type":"method","name":"serialize_for","children":[],"call":[" set_for ","value collect "]}," Representable XML PropertyBinding node_for":{"type":"method","name":"node_for","children":[],"call":["Nokogiri XML Node  new ","parent document ","name to_s "]}," Representable XML ObjectBinding deserialize_method":{"type":"method","name":"deserialize_method","children":[],"call":[]}," Representable XML ObjectBinding serialize_method":{"type":"method","name":"serialize_method","children":[],"call":[]}," Representable JSON ObjectBinding deserialize_method":{"type":"method","name":"deserialize_method","children":[],"call":[]}," Representable JSON ObjectBinding serialize_method":{"type":"method","name":"serialize_method","children":[],"call":[]}," Representable Binding Object create_object":{"type":"method","name":"create_object","children":[],"call":[" definition sought_type new "," definition sought_type "," definition "," sought_type new "," sought_type "," class_for "," instance_for "]}," Representable Binding Object deserialize":{"type":"method","name":"deserialize","children":[],"call":["(send nil :create_object) send "," deserialize_method "," create_object ","(send nil :create_object\n  (lvar :data)) send ","(lvar :obj) send "," create_object tap ","ObjectDeserializer  new call ","ObjectDeserializer  new "]}," Representable Binding Object serialize":{"type":"method","name":"serialize","children":[],"call":["(lvar :object) send "," serialize_method ","object nil? "," send ","@user_options merge! ","ObjectSerializer  new call ","ObjectSerializer  new "]}," Representable YAML to_yaml":{"type":"method","name":"to_yaml","children":[],"call":["stream to_yaml ","doc children << "," to_ast ","doc children ","stream children << ","Psych Nodes Document  new ","stream children ","Psych Nodes Stream  new ","Psych Nodes Stream  new  to_yaml ","Psych Nodes Document  new  children << ","Psych Nodes Document  new  children ","Psych Nodes Stream  new  children << ","Psych Nodes Stream  new  children "]}," Representable YAML to_ast":{"type":"method","name":"to_ast","children":[],"call":[" create_representation_with ","Psych Nodes Mapping  new tap ","Psych Nodes Mapping  new "]}," Representable YAML from_hash":{"type":"method","name":"from_hash","children":[],"call":[" update_properties_from "]}," Representable YAML from_yaml":{"type":"method","name":"from_yaml","children":[],"call":[" from_hash ","Psych  load "," from_Psych  load  "]}," Representable YAML ClassMethods from_node":{"type":"method","name":"from_node","children":[],"call":[" create_represented from_node "," create_represented "]}," Representable YAML ClassMethods from_xml":{"type":"method","name":"from_xml","children":[],"call":[" create_represented from_xml "," create_represented "]}," Representable YAML included":{"type":"method","name":"included","children":[],"call":[]}," Representable YAML binding_for_definition":{"type":"method","name":"binding_for_definition","children":[],"call":[]}," Representable YAML CollectionBinding deserialize_from":{"type":"method","name":"deserialize_from","children":[],"call":[" deserialize ","fragment collect ","CollectionDeserializer  new deserialize ","CollectionDeserializer  new "]}," Representable YAML CollectionBinding serialize_for":{"type":"method","name":"serialize_for","children":[],"call":["seq children << ","seq children ","value each ","seq style= "," definition options [] == "," definition options [] "," definition options "," definition ","Psych Nodes Sequence  new tap ","Psych Nodes Sequence  new "," options [] == "," options [] "," options "]}," Representable YAML PropertyBinding write_scalar":{"type":"method","name":"write_scalar","children":[],"call":["Psych Nodes Scalar  new ","value to_s "," typed? "]}," Representable YAML PropertyBinding deserialize_from":{"type":"method","name":"deserialize_from","children":[],"call":[" deserialize "]}," Representable YAML PropertyBinding serialize_for":{"type":"method","name":"serialize_for","children":[],"call":[" write_scalar "," serialize "]}," Representable YAML YAMLBinding write":{"type":"method","name":"write","children":[],"call":["map children << "," serialize_for ","map children ","Psych Nodes Scalar  new "," definition from "," definition "]}," Representable YAML YAMLBinding read":{"type":"method","name":"read","children":[],"call":[" deserialize_from ","hash [] "," definition from "," definition ","hash has_key? "]}," Representable YAML YAMLBinding initialize":{"type":"method","name":"initialize","children":[],"call":[" extend ","definition typed? "]}," Representable YAML ObjectBinding write_scalar":{"type":"method","name":"write_scalar","children":[],"call":[]}," Representable YAML ObjectBinding deserialize_method":{"type":"method","name":"deserialize_method","children":[],"call":[]}," Representable YAML ObjectBinding serialize_method":{"type":"method","name":"serialize_method","children":[],"call":[]}," Representable YAML ClassMethods from_yaml":{"type":"method","name":"from_yaml","children":[],"call":[" create_represented from_yaml "," create_represented "]}," Representable Hash to_hash":{"type":"method","name":"to_hash","children":[],"call":[" representation_wrap ","options [] "," create_representation_with ","options [] == "]}," Representable Hash from_hash":{"type":"method","name":"from_hash","children":[],"call":[" update_properties_from ","data [] ","wrap to_s "," representation_wrap ","options [] "," filter_wrap ","data []  [] "," filter_wrap  [] "]}," Representable Hash ClassMethods from_hash":{"type":"method","name":"from_hash","children":[],"call":[" create_represented from_hash "," create_represented "]}," Representable Hash ClassMethods binding_for_definition":{"type":"method","name":"binding_for_definition","children":[],"call":["Representable Hash PropertyBinding  new ","Representable Hash HashBinding  new ","definition hash? ","Representable Hash CollectionBinding  new ","definition array? "]}," Representable Hash included":{"type":"method","name":"included","children":[],"call":[]}," Representable YAML PropertyBinding write":{"type":"method","name":"write","children":[],"call":["map children << "," serialize_for ","map children ","Psych Nodes Scalar  new "," definition from "," definition "," from "," serialize "," as "]}," Representable YAML PropertyBinding initialize":{"type":"method","name":"initialize","children":[],"call":[" extend ","definition typed? "," typed? "]}," Representable Hash HashBinding deserialize_from":{"type":"method","name":"deserialize_from","children":[],"call":["fragment []= "," deserialize ","fragment each ","hsh []= "," tap "]}," Representable Hash HashBinding serialize_for":{"type":"method","name":"serialize_for","children":[],"call":["hash []= "," serialize ","value each "," tap ","hsh []= "]}," Representable Hash CollectionBinding deserialize_from":{"type":"method","name":"deserialize_from","children":[],"call":[" deserialize ","fragment collect ","CollectionDeserializer  new deserialize ","CollectionDeserializer  new "]}," Representable Hash CollectionBinding serialize_for":{"type":"method","name":"serialize_for","children":[],"call":[" serialize ","value collect "]}," Representable Hash PropertyBinding deserialize_from":{"type":"method","name":"deserialize_from","children":[],"call":[" deserialize "]}," Representable Hash PropertyBinding serialize_for":{"type":"method","name":"serialize_for","children":[],"call":[" serialize "]}," Representable Hash PropertyBinding write":{"type":"method","name":"write","children":[],"call":["hash []= "," serialize_for "," definition from "," definition "," from "," serialize "," as "]}," Representable Hash PropertyBinding read":{"type":"method","name":"read","children":[],"call":[" deserialize_from ","hash [] "," definition from "," definition ","hash has_key? "," from "," deserialize "," as "]}," Representable Hash PropertyBinding initialize":{"type":"method","name":"initialize","children":[],"call":[" extend ","definition typed? "," typed? "]}," Representable Hash ObjectBinding deserialize_method":{"type":"method","name":"deserialize_method","children":[],"call":[]}," Representable Hash ObjectBinding serialize_method":{"type":"method","name":"serialize_method","children":[],"call":[]}," Representable Binding deserialize":{"type":"method","name":"deserialize","children":[],"call":[]}," Representable Binding serialize":{"type":"method","name":"serialize","children":[],"call":[" serializer call "," serializer "]}," Representable YAML yaml_binding_for_definition":{"type":"method","name":"yaml_binding_for_definition","children":[],"call":["PropertyBinding  new ","CollectionBinding  new ","definition array? "]}," Representable XML xml_binding_for_definition":{"type":"method","name":"xml_binding_for_definition","children":[],"call":["PropertyBinding  new ","AttributeBinding  new ","definition attribute ","AttributeHashBinding  new ","definition options [] ","definition options ","definition hash? ","HashBinding  new ","definition options [] ! ","CollectionBinding  new ","definition array? "]}," Representable Hash hash_binding_for_definition":{"type":"method","name":"hash_binding_for_definition","children":[],"call":["Representable Hash PropertyBinding  new ","Representable Hash HashBinding  new ","definition hash? ","Representable Hash CollectionBinding  new ","definition array? "]}," Representable deserialize_property":{"type":"method","name":"deserialize_property","children":[],"call":[" uncompile_fragment "," skip_property? "]}," Representable serialize_property":{"type":"method","name":"serialize_property","children":[],"call":[" compile_fragment "," skip_property? "]}," Representable Definition readable?":{"type":"method","name":"readable?","children":[],"call":[" options [] "," options "," options has_key? "]}," Representable Definition writeable?":{"type":"method","name":"writeable?","children":[],"call":[" options [] "," options "," options has_key? "]}," Representable Feature ReadableWriteable serialize_property":{"type":"method","name":"serialize_property","children":[],"call":["binding readable? "]}," Representable Feature ReadableWriteable deserialize_property":{"type":"method","name":"deserialize_property","children":[],"call":["binding writeable? "]}," Representable YAML PropertyBinding build_for":{"type":"method","name":"build_for","children":[],"call":[]}," Representable XML PropertyBinding build_for":{"type":"method","name":"build_for","children":[],"call":[]}," Representable Hash PropertyBinding build_for":{"type":"method","name":"build_for","children":[],"call":[]}," Representable Binding definition":{"type":"method","name":"definition","children":[],"call":[" raise "]}," Representable Binding Object instance_for":{"type":"method","name":"instance_for","children":[],"call":[" call_proc_for "," options [] "," options "," get "," warn ","instance === "," evaluate_option "," raise ","DeserializeError  new "," evaluate_option  === "]}," Representable Binding Object class_from":{"type":"method","name":"class_from","children":[],"call":[" call_proc_for "," sought_type "," deserialize_class "," evaluate_option "]}," Representable Binding Object class_for":{"type":"method","name":"class_for","children":[],"call":["item_class new "," class_from "," handle_deprecated_class "," raise ","DeserializeError  new "," class_from  new "]}," Representable Binding Extend call_proc_for":{"type":"method","name":"call_proc_for","children":[],"call":["@represented instance_exec ","proc is_a? "]}," Representable Binding Extend representer_module_for":{"type":"method","name":"representer_module_for","children":[],"call":[" call_proc_for "," representer_module "]}," Representable cleanup_options":{"type":"method","name":"cleanup_options","children":[],"call":["(sym :include) include? ","options reject "]}," Representable XML PropertyBinding find_nodes":{"type":"method","name":"find_nodes","children":[],"call":["doc xpath "," xpath "," options [] "," options "," [] "]}," Representable Binding read_fragment_for":{"type":"method","name":"read_fragment_for","children":[],"call":[" read "]}," Representable Binding read_fragment":{"type":"method","name":"read_fragment","children":[],"call":[" default "," has_default? ","value == "," read_fragment_for "," [] "," populator call "," populator "," read "," default  == "," read_fragment_for  == "," []  == "," read_ read _for "]}," Representable Binding write_fragment_for":{"type":"method","name":"write_fragment_for","children":[],"call":[" write "," skipable_nil_value? "," skipable_empty_value? "]}," Representable Binding write_fragment":{"type":"method","name":"write_fragment","children":[],"call":[" write_fragment_for "," default_for "," render_fragment "," skipable_empty_value? "," skipable_empty_ default_for ? "]}," Representable Config inherit":{"type":"method","name":"inherit","children":[],"call":[" push ","parent clone "]}," Representable ClassMethods Declarations build_config":{"type":"method","name":"build_config","children":[],"call":["Config  new "]}," Representable Definition create_binding":{"type":"method","name":"create_binding","children":[],"call":[" binding call "," binding "," [] call "," [] "]}," Representable Definition binding":{"type":"method","name":"binding","children":[],"call":[" options [] "," options "]}," Representable Binding set":{"type":"method","name":"set","children":[],"call":[" represented send "," setter "," represented "," represented instance_exec "," options [] "," options "," user_options "," represented_exec_for "," exec_context send "," exec_context "," evaluate_option "]}," Representable Binding get":{"type":"method","name":"get","children":[],"call":[" represented send "," getter "," represented "," represented instance_exec "," options [] "," options "," user_options "," represented_exec_for "," exec_context send "," exec_context "," evaluate_option "]}," Representable Binding build":{"type":"method","name":"build","children":[],"call":[]}," Representable Binding represented_exec_for":{"type":"method","name":"represented_exec_for","children":[],"call":[" represented instance_exec "," options [] "," options ","args + "," user_options "," represented "," lambda_context instance_exec "," lambda_context "," call_proc_for "]}," Representable Binding uncompile_fragment":{"type":"method","name":"uncompile_fragment","children":[],"call":[" set "," read_fragment "," represented_exec_for "," options [] "," options "," evaluate_option "," parse_filter "]}," Representable Binding compile_fragment":{"type":"method","name":"compile_fragment","children":[],"call":[" write_fragment "," get "," represented_exec_for "," options [] "," options "," evaluate_option "," render_filter "]}," Representable ClassMethods prepare":{"type":"method","name":"prepare","children":[],"call":["represented extend "]}," Representable represented":{"type":"method","name":"represented","children":[],"call":[]}," Representable representable_binding_for":{"type":"method","name":"representable_binding_for","children":[],"call":["format build "," represented ","attribute options [] ","attribute options "]}," Representable Decorator representable_binding_for":{"type":"method","name":"representable_binding_for","children":[],"call":["format build "," represented ","attr options [] ","attr options "]}," Representable Decorator initialize":{"type":"method","name":"initialize","children":[],"call":[]}," Representable Decorator prepare":{"type":"method","name":"prepare","children":[],"call":[]}," Representable Binding Prepare call_proc_for":{"type":"method","name":"call_proc_for","children":[],"call":["@represented instance_exec ","proc is_a? "]}," Representable Binding Prepare representer_module_for":{"type":"method","name":"representer_module_for","children":[],"call":[" call_proc_for "," representer_module "]}," Representable Binding Prepare prepare":{"type":"method","name":"prepare","children":[],"call":["mod prepare ","mod first ","mod is_a? "," representer_module_for ","mod first  prepare "," representer_module_for  prepare ","mod first  first "," representer_module_for  first ","mod first  is_a? "," representer_module_for  is_a? "," representer_mod first ule_for "," representer_ representer_module_for ule_for "]}," Representable Binding Prepare deserialize":{"type":"method","name":"deserialize","children":[],"call":[" prepare "]}," Representable Binding Prepare serialize":{"type":"method","name":"serialize","children":[],"call":[" prepare "]}," Representable Binding call_proc_for":{"type":"method","name":"call_proc_for","children":[],"call":[" lambda_context instance_exec "," lambda_context ","args << "," user_options ","proc is_a? "," exec_context instance_exec "," exec_context "]}," Decorator Coercion ClassMethods create_reader":{"type":"method","name":"create_reader","children":[],"call":[" send "," represented send "," represented "," define_method "]}," Decorator Coercion ClassMethods create_writer":{"type":"method","name":"create_writer","children":[],"call":[" represented send "," represented ","(lvar :v) get "," define_method "]}," Decorator Coercion ClassMethods property":{"type":"method","name":"property","children":[],"call":[" create_reader "," create_writer ","options []= ","options [] "]}," Decorator Coercion included":{"type":"method","name":"included","children":[{"type":"method","name":"initialize","children":[],"asgn":[null],"call":[]}],"call":[]}," Representable ClassMethods Declarations inline_representer":{"type":"method","name":"inline_representer","children":[],"call":[" instance_exec "," include ","Module  new "]}," Representable ClassInclusions inherited":{"type":"method","name":"inherited","children":[],"call":["base representable_attrs inherit "," representable_attrs ","base representable_attrs ","base representable_attrs inherit! ","subclass representable_attrs inherit! ","subclass representable_attrs "]}," Representable representable_mapper":{"type":"method","name":"representable_mapper","children":[],"call":["Mapper  new "," represented "," representable_bindings_for "," representable_ representable_bindings_for _for "]}," Representable YAML ClassMethods representer_engine":{"type":"method","name":"representer_engine","children":[],"call":[]}," Representable XML ClassMethods representer_engine":{"type":"method","name":"representer_engine","children":[],"call":[]}," XML Collection Methods update_properties_from":{"type":"method","name":"update_properties_from","children":[],"call":["doc search "]}," Representable Mapper Methods uncompile_fragment":{"type":"method","name":"uncompile_fragment","children":[],"call":["bin uncompile_fragment "]}," Representable Mapper Methods compile_fragment":{"type":"method","name":"compile_fragment","children":[],"call":["bin compile_fragment "]}," Representable Mapper Methods skip_conditional_property?":{"type":"method","name":"skip_conditional_property?","children":[],"call":[" represented instance_exec ! "," represented instance_exec "," represented ","args << ","binding user_options ","condition arity > ","condition arity ","binding options [] ","binding options ","binding send ! ","binding send ","binding [] ","binding evaluate_option ! ","binding evaluate_option ","binding options []  arity > ","binding []  arity > ","binding options []  arity ","binding []  arity "]}," Representable Mapper Methods skip_excluded_property?":{"type":"method","name":"skip_excluded_property?","children":[],"call":["res ! ","options [] ","props include? ","binding name to_sym ","binding name ","private_options [] ","props include?  ! "]}," Representable Mapper Methods skip_property?":{"type":"method","name":"skip_property?","children":[],"call":[" skip_conditional_property? "," skip_excluded_property? "," skip_protected_property ","binding skip_filters? ","private_options [] "]}," Representable Mapper Methods deserialize_property":{"type":"method","name":"deserialize_property","children":[],"call":[" uncompile_fragment "," skip_property? ","options merge ","private_options merge "]}," Representable Mapper Methods serialize_property":{"type":"method","name":"serialize_property","children":[],"call":[" compile_fragment "," skip_property? ","options merge ","private_options merge "]}," Representable Mapper Methods serialize":{"type":"method","name":"serialize","children":[],"call":[" serialize_property "," bindings each "," bindings "]}," Representable Mapper Methods deserialize":{"type":"method","name":"deserialize","children":[],"call":[" represented "," deserialize_property "," bindings each "," bindings "]}," Representable Mapper Methods initialize":{"type":"method","name":"initialize","children":[],"call":[]}," Representable JSON ClassMethods representer_engine":{"type":"method","name":"representer_engine","children":[],"call":[]}," Representable Hash ClassMethods representer_engine":{"type":"method","name":"representer_engine","children":[],"call":[]}," Hash Collection representable_attrs":{"type":"method","name":"representable_attrs","children":[],"call":["attrs << ","Definition  new ","attrs size == ","attrs size "]}," Hash Collection update_properties_from":{"type":"method","name":"update_properties_from","children":[],"call":[" represented replace "," represented ","bin deserialize_from "," representable_mapper bindings first "," representable_mapper bindings "," representable_mapper ","Deserializer Collection  new call ","Deserializer Collection  new ","Collect  [] call ","Collect  [] ","bin default_parse_fragment_functions "," representable_bindings_for first "," representable_bindings_for ","options []= "," normalize_options "," representable_mapper bindings first  deserialize_from "," representable_bindings_for first  deserialize_from "," representable_mapper  representable_mapper bindings first dings first "," representable_mapper  representable_bindings_for first dings first "," representable_mapper  representable_mapper bindings first dings "," representable_mapper  representable_bindings_for first dings "," representable_mapper bindings first  default_parse_fragment_functions "," representable_bindings_for first  default_parse_fragment_functions "," representable_ representable_mapper bindings first dings_for first "," representable_ representable_bindings_for first dings_for first "," representable_ representable_mapper bindings first dings_for "," representable_ representable_bindings_for first dings_for "," normalize_options  []= "," normalize_ normalize_options  "]}," Hash Collection create_representation_with":{"type":"method","name":"create_representation_with","children":[],"call":["bin write "," represented "," representable_mapper bindings first "," representable_mapper bindings "," representable_mapper ","bin render_fragment ","Collect  [] call ","Collect  [] ","bin default_render_fragment_functions "," representable_bindings_for first "," representable_bindings_for ","options []= "," normalize_options "," representable_mapper bindings first  write "," representable_bindings_for first  write "," representable_mapper  representable_mapper bindings first dings first "," representable_mapper  representable_bindings_for first dings first "," representable_mapper  representable_mapper bindings first dings "," representable_mapper  representable_bindings_for first dings "," representable_mapper bindings first  render_fragment "," representable_bindings_for first  render_fragment "," representable_mapper bindings first  default_render_fragment_functions "," representable_bindings_for first  default_render_fragment_functions "," representable_ representable_mapper bindings first dings_for first "," representable_ representable_bindings_for first dings_for first "," representable_ representable_mapper bindings first dings_for "," representable_ representable_bindings_for first dings_for "," normalize_options  []= "," normalize_ normalize_options  "]}," Hash Collection ClassMethods items":{"type":"method","name":"items","children":[],"call":[" collection ","options merge "," lambda "]}," Hash Collection included":{"type":"method","name":"included","children":[],"call":[]}," Representable readable?":{"type":"method","name":"readable?","children":[],"call":[" options [] "," options "," options has_key? "," [] "," has_key? "]}," Representable writeable?":{"type":"method","name":"writeable?","children":[],"call":[" options [] "," options "," options has_key? "," [] "," has_key? "]}," Representable Decorator inline_representer":{"type":"method","name":"inline_representer","children":[],"call":[]}," Representable Config InheritMethods inherit":{"type":"method","name":"inherit","children":[],"call":[" push ","parent clone ","parent cloned "]}," Representable Config InheritMethods clone":{"type":"method","name":"clone","children":[],"call":[" class new ","d clone "," collect "," class "]}," Representable Config InheritableArray inherit":{"type":"method","name":"inherit","children":[],"call":[" inheritable_array push ","parent inheritable_array clone ","parent inheritable_array "," inheritable_array ","parent inheritable_arrays keys each ","parent inheritable_arrays keys ","parent inheritable_arrays "]}," Representable Config InheritableArray inheritable_arrays":{"type":"method","name":"inheritable_arrays","children":[],"call":[]}," Representable Config InheritableArray inheritable_array":{"type":"method","name":"inheritable_array","children":[],"call":[" inheritable_arrays [] "," inheritable_arrays "]}," Coercion coercer":{"type":"method","name":"coercer","children":[],"call":[" representable_attrs inheritable_array first new "," representable_attrs inheritable_array first "," representable_attrs inheritable_array "," representable_attrs "]}," Coercion Coercer coerce":{"type":"method","name":"coerce","children":[],"call":[" send "]}," Representable DSLAdditions inline_representer":{"type":"method","name":"inline_representer","children":[],"call":[" instance_exec "," include ","Module  new "]}," Representable DSLAdditions property":{"type":"method","name":"property","children":[],"call":["options []= "," include ","options [] ","inline module_eval "," inline_representer "," representer_engine "," block_given? ","parent options merge! ","parent options "," inline_representer_for "," representable_attrs [] "," representable_attrs ","parent merge! ","options delete "," handle_deprecated_inline_extend! ","modules << ","parent [] evaluate ","parent [] "," inline_representer  module_eval ","  inline_representer _representer "," representable_attrs []  options merge! "," representable_attrs []  options ","  inline_representer _representer_for "," representable_attrs []  merge! "," handle_deprecated_ inline_representer _extend! "," representable_attrs []  [] evaluate "," representable_attrs []  [] "]}," Representable ObjectSerializer serialize":{"type":"method","name":"serialize","children":[],"call":["object send ","user_options merge! ","@binding serialize_method ","@binding typed? ","@binding representable? ","@binding send "]}," Representable ObjectSerializer call":{"type":"method","name":"call","children":[],"call":[" serialize ","@binding user_options "," prepare ","@object nil? "]}," Representable ObjectDeserializer prepare":{"type":"method","name":"prepare","children":[],"call":["mod prepare ","mod first ","mod is_a? ","@binding representer_module_for "," prepare! ","@binding send ","mod first  prepare ","@binding representer_module_for  prepare ","mod first  first ","@binding representer_module_for  first ","mod first  is_a? ","@binding representer_module_for  is_a? ","@binding representer_mod first ule_for ","@binding representer_@binding representer_module_for ule_for "]}," Representable ObjectDeserializer deserialize":{"type":"method","name":"deserialize","children":[],"call":["object send ","@binding deserialize_method ","@binding representable? ","@binding send "]}," Representable ObjectDeserializer call":{"type":"method","name":"call","children":[],"call":[" deserialize ","@binding user_options "," prepare ","@binding create_object ","@object call ","@binding sync? ","@binding typed? ","@binding create_@binding create_object  ","@binding create_object  call ","@object call  call ","@@binding create_object  call "]}," Representable ObjectDeserializer initialize":{"type":"method","name":"initialize","children":[],"call":[]}," Representable CollectionDeserializer deserialize":{"type":"method","name":"deserialize","children":[],"call":["@deserializer call ","ObjectDeserializer  new "," [] "," lambda ","fragment enum_for collect ","fragment enum_for ","ObjectDeserializer  new  call "]}," Representable CollectionDeserializer initialize":{"type":"method","name":"initialize","children":[],"call":["binding get ","binding sync? "]}," Representable Definition sync?":{"type":"method","name":"sync?","children":[],"call":[" options [] == "," options [] "," options "]}," Representable Config push":{"type":"method","name":"push","children":[],"call":[" << ","defs each "]}," Representable Config InheritMethods cloned":{"type":"method","name":"cloned","children":[],"call":["d clone "," collect "]}," Representable Config each":{"type":"method","name":"each","children":[],"call":[" values each "," values "]}," Representable Config []":{"type":"method","name":"[]","children":[],"call":[" fetch ","name to_s "]}," Representable Config <<":{"type":"method","name":"<<","children":[],"call":[" []= ","definition name "]}," Representable XML PropertyBinding content_for":{"type":"method","name":"content_for","children":[],"call":["node content "," typed? "]}," Representable XML ObjectBinding content_for":{"type":"method","name":"content_for","children":[],"call":[]}," Representable XML parse_xml":{"type":"method","name":"parse_xml","children":[],"call":["node root ","node remove_namespaces! "," remove_namespaces? ","Nokogiri  XML ","Nokogiri  XML  root ","Nokogiri  XML  remove_namespaces! "]}," Representable XML remove_namespaces?":{"type":"method","name":"remove_namespaces?","children":[],"call":[" representable_attrs options [] "," representable_attrs options "," representable_attrs "]}," Representable XML ClassMethods remove_namespaces!":{"type":"method","name":"remove_namespaces!","children":[],"call":[" representable_attrs options []= "," representable_attrs options "," representable_attrs "]}," Representable Config options":{"type":"method","name":"options","children":[],"call":[]}," Representable YAML CollectionBinding deserialize":{"type":"method","name":"deserialize","children":[],"call":["CollectionDeserializer  new deserialize ","CollectionDeserializer  new "]}," Representable YAML CollectionBinding serialize":{"type":"method","name":"serialize","children":[],"call":["seq children << ","seq children ","value each ","seq style= "," options [] == "," options [] "," options ","Psych Nodes Sequence  new tap ","Psych Nodes Sequence  new "," [] == "," [] "]}," Representable YAML PropertyBinding deserialize_method":{"type":"method","name":"deserialize_method","children":[],"call":[]}," Representable YAML PropertyBinding serialize_method":{"type":"method","name":"serialize_method","children":[],"call":[]}," Representable YAML PropertyBinding serialize":{"type":"method","name":"serialize","children":[],"call":[" write_scalar "]}," Representable XML PropertyBinding deserialize_method":{"type":"method","name":"deserialize_method","children":[],"call":[]}," Representable XML PropertyBinding serialize_method":{"type":"method","name":"serialize_method","children":[],"call":[]}," Representable Hash HashBinding deserialize":{"type":"method","name":"deserialize","children":[],"call":["hsh []= ","fragment each "," tap "]}," Representable Hash HashBinding serialize":{"type":"method","name":"serialize","children":[],"call":["hsh []= ","value each "," tap "]}," Representable Hash CollectionBinding deserialize":{"type":"method","name":"deserialize","children":[],"call":["CollectionDeserializer  new deserialize ","CollectionDeserializer  new "]}," Representable Hash CollectionBinding serialize":{"type":"method","name":"serialize","children":[],"call":["value collect "]}," Representable Hash PropertyBinding deserialize_method":{"type":"method","name":"deserialize_method","children":[],"call":[]}," Representable Hash PropertyBinding serialize_method":{"type":"method","name":"serialize_method","children":[],"call":[]}," Representable Definition content":{"type":"method","name":"content","children":[],"call":[" options [] "," options "]}," Representable XML ContentBinding write":{"type":"method","name":"write","children":[],"call":[" serialize_for "]}," Representable XML ContentBinding serialize_for":{"type":"method","name":"serialize_for","children":[],"call":["parent content= "," serialize ","value to_s "]}," Representable XML ContentBinding read":{"type":"method","name":"read","children":[],"call":["node content "]}," Representable Definition deserialize_class":{"type":"method","name":"deserialize_class","children":[],"call":[" options [] "," options "]}," Representable Decorator nested":{"type":"method","name":"nested","children":[],"call":[]}," Representable DSLAdditions inline_representer_for":{"type":"method","name":"inline_representer_for","children":[],"call":["representer inline_representer ","modules compact reverse ","modules compact ","modules << ","options [] ","parent representer_module "," representer_engine ","(send nil :representer_engine) + ","(send nil :representer_engine) +  compact reverse ","(send nil :representer_engine) +  compact ","(send nil :representer_engine) +  << "]}," Representable DSLAdditions nested":{"type":"method","name":"nested","children":[],"call":[" property ","options merge "," lambda ","options merge  merge "]}," Representable DSLAdditions handle_deprecated_inline_extend!":{"type":"method","name":"handle_deprecated_inline_extend!","children":[],"call":["modules << "," warn ","options [] ! ","options [] ","options delete "]}," Representable ObjectSerializer initialize":{"type":"method","name":"initialize","children":[],"call":[]}," Representable ReadableWriteable serialize_property":{"type":"method","name":"serialize_property","children":[],"call":["binding readable? "]}," Representable ReadableWriteable deserialize_property":{"type":"method","name":"deserialize_property","children":[],"call":["binding writeable? "]}," Representable ParseStrategy FindOrInstantiate apply!":{"type":"method","name":"apply!","children":[],"call":[]}," Representable ParseStrategy Sync apply!":{"type":"method","name":"apply!","children":[],"call":[]}," Representable ParseStrategy Proc apply!":{"type":"method","name":"apply!","children":[],"call":[]}," Representable ParseStrategy parse_strategies":{"type":"method","name":"parse_strategies","children":[],"call":[]}," Representable ParseStrategy apply!":{"type":"method","name":"apply!","children":[],"call":[]}," Representable Hash filter_wrap_for":{"type":"method","name":"filter_wrap_for","children":[],"call":["data [] ","wrap to_s "]}," Representable Hash filter_wrap":{"type":"method","name":"filter_wrap","children":[],"call":[" filter_wrap_for "," representation_wrap ","options [] ","options [] == "]}," Representable Hash Conversion stringify_keys":{"type":"method","name":"stringify_keys","children":[],"call":[]}," Representable Hash AllowSymbols update_properties_from":{"type":"method","name":"update_properties_from","children":[],"call":["Conversion  stringify_keys "]}," Representable Hash AllowSymbols filter_wrap_for":{"type":"method","name":"filter_wrap_for","children":[],"call":["Conversion  stringify_keys "]}," Representable ObjectDeserializer prepare!":{"type":"method","name":"prepare!","children":[],"call":["mod prepare ","mod first ","mod is_a? ","@binding representer_module_for ","mod first  prepare ","@binding representer_module_for  prepare ","mod first  first ","@binding representer_module_for  first ","mod first  is_a? ","@binding representer_module_for  is_a? ","@binding representer_mod first ule_for ","@binding representer_@binding representer_module_for ule_for "]}," Representable Definition handle_deprecations!":{"type":"method","name":"handle_deprecations!","children":[],"call":["options merge! "," warn ","options [] "," raise "]}," Representable Definition handle_as!":{"type":"method","name":"handle_as!","children":[],"call":["options []= ","options [] to_s ","options [] ","options [] is_a? "]}," Representable Definition handle_extend!":{"type":"method","name":"handle_extend!","children":[],"call":["options []= ","options delete "]}," Representable Definition dynamic_options":{"type":"method","name":"dynamic_options","children":[],"call":[]}," Representable Definition setup!":{"type":"method","name":"setup!","children":[],"call":[" []= ","Uber Options Value  new "," dynamic_options include? "," dynamic_options ","Representable ParseStrategy  apply! "," handle_as! "," handle_extend! "," runtime_options! ","@options merge! "," block_given? ","Representable Populator  apply! "]}," Representable Definition representable?":{"type":"method","name":"representable?","children":[],"call":[" typed? "," [] "," [] === "," [] == "]}," Representable Definition options":{"type":"method","name":"options","children":[],"call":[" warn "]}," Representable Definition merge!":{"type":"method","name":"merge!","children":[],"call":[" setup! ","options []= ","@options [] push ","options [] ","@options [] ","options clone ","options clone  []= ","@options clone  [] push ","options clone  [] ","@options clone  [] ","options clone  clone "]}," Representable Config wrap=":{"type":"method","name":"wrap=","children":[],"call":["Uber Options Value  new ","value to_s ","value is_a? "," []= "," Declarative  Option "," Representable  Option ","value to_s  to_s ","value to_s  is_a? "]}," Representable Binding Object handle_deprecated_class":{"type":"method","name":"handle_deprecated_class","children":[],"call":[" warn "]}," Representable Binding evaluate_option":{"type":"method","name":"evaluate_option","children":[],"call":["proc evaluate ","args << "," exec_context "," user_options ","Options  new "," decorator "," represented "," [] "," block_given? "," parent_decorator ","@definition [] "," []  evaluate ","@definition []  evaluate "," user_ user_options  "," user_Options  new  "]}," Representable Binding setup_exec_context!":{"type":"method","name":"setup_exec_context!","children":[],"call":[" decorator "," [] == "," [] "," represented "," parent_decorator ","options [] "," lambda "]}," Representable Binding representer_module_for":{"type":"method","name":"representer_module_for","children":[],"call":[" evaluate_option "]}," Representable Binding as":{"type":"method","name":"as","children":[],"call":[" evaluate_option "]}," Representable Definition skipable_empty_value?":{"type":"method","name":"skipable_empty_value?","children":[],"call":[" [] ! "," [] ","value nil? ","value size == ","value size "," [] == "," array? "]}," Representable Binding method_missing":{"type":"method","name":"method_missing","children":[],"call":["@definition send "]}," Representable Feature register_feature":{"type":"method","name":"register_feature","children":[],"call":[" representable_attrs [] []= "," representable_attrs [] "," representable_attrs "]}," Representable Feature feature":{"type":"method","name":"feature","children":[],"call":[" register_feature "," include ","mods each "]}," Representable ClassMethods inherit_module!":{"type":"method","name":"inherit_module!","children":[],"call":[" representable_attrs inherit! ","parent representable_attrs "," representable_attrs "]}," Representable XML ClassMethods collection_representer_class":{"type":"method","name":"collection_representer_class","children":[],"call":[]}," Represent represent":{"type":"method","name":"represent","children":[],"call":[" prepare "," for_collection prepare "," for_collection ","represented is_a? "]}," Representable Pipeline call":{"type":"method","name":"call","children":[],"call":["block call "," inject ","Stop  == "," evaluate "]}," Representable Mapper Methods skip_protected_property":{"type":"method","name":"skip_protected_property","children":[],"call":["binding [] == ","binding [] ","options [] == ","options [] ","private_options [] == ","private_options [] "]}," Representable JSON ClassMethods collection_representer_class":{"type":"method","name":"collection_representer_class","children":[],"call":[]}," Representable Inheritable Hash InstanceMethods clone_value":{"type":"method","name":"clone_value","children":[],"call":["value clone ","value is_a? "]}," Representable Inheritable Hash InstanceMethods clone":{"type":"method","name":"clone","children":[],"call":[" class [] "," clone_value "," collect "," class "]}," Representable Inheritable Hash InstanceMethods inherit!":{"type":"method","name":"inherit!","children":[],"call":[" []= ","parent_value clone ","parent_value is_a? "," [] inherit! "," [] "," [] is_a? ","parent [] ","(send\n  (send\n    (lvar :parent) :keys) :+\n  (send nil :keys)) uniq ","parent keys + "," keys ","parent keys ","parent []  clone ","parent []  is_a? "]}," Representable Inheritable Array inherit!":{"type":"method","name":"inherit!","children":[],"call":[" push ","parent clone "]}," Representable Hash ClassMethods collection_representer_class":{"type":"method","name":"collection_representer_class","children":[],"call":[]}," Representable ForCollection collection_representer":{"type":"method","name":"collection_representer","children":[],"call":[" collection_representer! "]}," Representable ForCollection collection_representer!":{"type":"method","name":"collection_representer!","children":[],"call":[" items ","options merge "," build_inline ","singular collection_representer_class "," nested_builder call "," lambda "," default_nested_class "," nested_builder "]}," Representable ForCollection for_collection":{"type":"method","name":"for_collection","children":[],"call":[" collection_representer! "]}," Representable Definition runtime_options!":{"type":"method","name":"runtime_options!","children":[],"call":["@runtime_options []= ","Uber Options Value  new "," dynamic_options include? "," dynamic_options "," Declarative  Option "," Representable  Option "]}," Representable Decorator build_inline":{"type":"method","name":"build_inline","children":[],"call":[]}," Representable Decorator InheritModule manifest!":{"type":"method","name":"manifest!","children":[],"call":["definition merge! "," include "," build_inline ","definition name "," representable_attrs features "," representable_attrs ","definition representer_module ","definition [] "," representable_attrs get ","names each "," representable_attrs get  merge! "," representable_attrs get  name ","definition representer_definition representer_module ule "," representable_attrs get  representer_module "," representable_attrs get  [] "]}," Representable Decorator InheritModule inherit_module!":{"type":"method","name":"inherit_module!","children":[],"call":[" manifest! ","parent representable_attrs [] keys ","parent representable_attrs [] ","parent representable_attrs "]}," Representable Decorator default_inline_class":{"type":"method","name":"default_inline_class","children":[],"call":[]}," Representable Declarative build_config":{"type":"method","name":"build_config","children":[],"call":["Config  new "]}," Representable Declarative inline_representer_for":{"type":"method","name":"inline_representer_for","children":[],"call":["representer build_inline ","features reverse ","options [] "]}," Representable Declarative build_definition":{"type":"method","name":"build_definition","children":[],"call":["options []= "," inline_representer_for "," representable_attrs features "," representable_attrs "," representable_attrs get representer_module "," representable_attrs get ","options [] "]}," Representable Declarative build_inline":{"type":"method","name":"build_inline","children":[],"call":[" module_eval "," include "," feature ","Module  new "," instance_exec "]}," Representable Declarative property":{"type":"method","name":"property","children":[],"call":[" build_definition "," representable_attrs add "," representable_attrs "]}," Representable Declarative nested":{"type":"method","name":"nested","children":[],"call":[" property ","options merge "," lambda ","options []= ","Decorator  default_nested_class ","Decorator  nested_builder ","options merge  merge ","options merge  []= "]}," Representable Declarative hash":{"type":"method","name":"hash","children":[],"call":[" property ","options []= "]}," Representable Declarative collection":{"type":"method","name":"collection","children":[],"call":[" property ","options []= ","options merge "]}," Representable Declarative representation_wrap=":{"type":"method","name":"representation_wrap=","children":[],"call":[" representable_attrs wrap= "," representable_attrs "," definitions wrap= "," definitions "," heritage record "," heritage "]}," Representable Declarative representable_attrs":{"type":"method","name":"representable_attrs","children":[],"call":[" build_config "]}," Representable Config features":{"type":"method","name":"features","children":[],"call":["@features keys "]}," Representable Config initialize":{"type":"method","name":"initialize","children":[],"call":[" merge! ","Inheritable Hash  new ","Definitions  new "]}," Representable Config Definitions get":{"type":"method","name":"get","children":[],"call":[" [] ","name to_s "]}," Representable Config Definitions add":{"type":"method","name":"add","children":[],"call":[" []= ","Definition  new ","name to_s "," get merge! "," get ","options [] "," definition_class new "," definition_class ","options delete ","parent_property merge! "," get  merge! "]}," Representable Coercion ClassMethods build_definition":{"type":"method","name":"build_definition","children":[],"call":["options [] << ","options [] ","Coercer  new ","options []= "]}," Representable Coercion included":{"type":"method","name":"included","children":[],"call":[]}," Representable Coercion Coercer call":{"type":"method","name":"call","children":[],"call":["Virtus Attribute  build coerce ","Virtus Attribute  build ","options binding [] ","options binding ","@type call "]}," Representable Coercion Coercer initialize":{"type":"method","name":"initialize","children":[],"call":[]}," Representable Binding parse_filter":{"type":"method","name":"parse_filter","children":[],"call":[" evaluate_option "]}," Representable Binding render_filter":{"type":"method","name":"render_filter","children":[],"call":[" evaluate_option "]}," Representable Config Definitions initialize":{"type":"method","name":"initialize","children":[],"call":[]}," Representable YAML Binding Collection node_for":{"type":"method","name":"node_for","children":[],"call":["seq children << "," write_scalar ","seq children ","fragments each ","seq style= "," [] == "," [] ","Psych Nodes Sequence  new tap ","Psych Nodes Sequence  new "]}," Representable YAML Binding deserialize_method":{"type":"method","name":"deserialize_method","children":[],"call":[]}," Representable YAML Binding serialize_method":{"type":"method","name":"serialize_method","children":[],"call":[]}," Representable YAML Binding write_scalar":{"type":"method","name":"write_scalar","children":[],"call":["Psych Nodes Scalar  new ","value to_s "," typed? "]}," Representable YAML Binding node_for":{"type":"method","name":"node_for","children":[],"call":[" write_scalar "]}," Representable YAML Binding write":{"type":"method","name":"write","children":[],"call":["map children << "," node_for ","map children ","Psych Nodes Scalar  new "," as "]}," Representable YAML Binding build_for":{"type":"method","name":"build_for","children":[],"call":[]}," Representable XML Binding Content write":{"type":"method","name":"write","children":[],"call":[" serialize_for "]}," Representable XML Binding Content serialize_for":{"type":"method","name":"serialize_for","children":[],"call":["parent content= ","value to_s "]}," Representable XML Binding Content read":{"type":"method","name":"read","children":[],"call":["node content "]}," Representable XML Binding Attribute write":{"type":"method","name":"write","children":[],"call":[" serialize_for "]}," Representable XML Binding Attribute serialize_for":{"type":"method","name":"serialize_for","children":[],"call":["parent []= ","value to_s "," as "]}," Representable XML Binding Attribute read":{"type":"method","name":"read","children":[],"call":["node [] "," as "]}," Representable XML Binding AttributeHash deserialize_from":{"type":"method","name":"deserialize_from","children":[],"call":["HashDeserializer  new deserialize ","HashDeserializer  new "]}," Representable XML Binding AttributeHash write":{"type":"method","name":"write","children":[],"call":["parent []= ","v to_s ","value collect "]}," Representable XML Binding Hash deserialize_from":{"type":"method","name":"deserialize_from","children":[],"call":["hash []= "," content_for ","node name ","nodes children each ","nodes children "]}," Representable XML Binding Hash serialize_for":{"type":"method","name":"serialize_for","children":[],"call":[" set_for "," serialize_node "," node_for ","value collect ","XML  Node ","parent document "," serialize_ node_for  "," serialize_XML  Node  ","  node_for _for "," XML  Node _for "]}," Representable XML Binding Collection set_for":{"type":"method","name":"set_for","children":[],"call":["Nokogiri XML NodeSet  new ","parent document "]}," Representable XML Binding Collection deserialize_from":{"type":"method","name":"deserialize_from","children":[],"call":[" content_for ","nodes collect "]}," Representable XML Binding Collection serialize_for":{"type":"method","name":"serialize_for","children":[],"call":[" set_for ","value collect "]}," Representable XML Binding content_for":{"type":"method","name":"content_for","children":[],"call":["node content "," typed? "]}," Representable XML Binding node_for":{"type":"method","name":"node_for","children":[],"call":["Nokogiri XML Node  new ","parent document ","name to_s "]}," Representable XML Binding find_nodes":{"type":"method","name":"find_nodes","children":[],"call":["doc xpath "," xpath "," [] "]}," Representable XML Binding deserialize_method":{"type":"method","name":"deserialize_method","children":[],"call":[]}," Representable XML Binding serialize_method":{"type":"method","name":"serialize_method","children":[],"call":[]}," Representable XML Binding deserialize_from":{"type":"method","name":"deserialize_from","children":[],"call":[" content_for ","nodes first "]}," Representable XML Binding serialize_node":{"type":"method","name":"serialize_node","children":[],"call":["node content= "," typed? ","value name= ","as != "," [] "]}," Representable XML Binding serialize_for":{"type":"method","name":"serialize_for","children":[],"call":[" serialize_node "," node_for "," as ","XML  Node ","parent document "," serialize_ node_for  "," serialize_XML  Node  ","  node_for _for "," XML  Node _for "]}," Representable XML Binding write":{"type":"method","name":"write","children":[],"call":["wrap_node << "," serialize_for ","parent << "," node_for "," [] ","XML  Node ","parent document "," node_for  << ","XML  Node  << "," [] _node << "]}," Representable XML Binding build_for":{"type":"method","name":"build_for","children":[],"call":[]}," Representable Serializer Hash serialize":{"type":"method","name":"serialize","children":[],"call":["hsh []= ","hash each "," tap "]}," Representable Serializer Collection serialize":{"type":"method","name":"serialize","children":[],"call":["array collect ","collection << "," serialize! ","@binding evaluate_option ","array each "]}," Representable Serializer serialize":{"type":"method","name":"serialize","children":[],"call":["object send ","user_options merge! ","@binding serialize_method ","@binding evaluate_option ","@binding representable? "," prepare "," marshal "," serialize! "," prepare  send "]}," Representable Serializer call":{"type":"method","name":"call","children":[],"call":[" serialize ","@binding user_options ","object nil? "]}," Representable Populator Hash deserializer_class":{"type":"method","name":"deserializer_class","children":[],"call":[]}," Representable Populator Collection deserialize":{"type":"method","name":"deserialize","children":[],"call":["Deserializer Collection  new call ","Deserializer Collection  new "," deserializer call "," deserializer "]}," Representable Populator deserializer_class":{"type":"method","name":"deserializer_class","children":[],"call":[]}," Representable Populator deserialize":{"type":"method","name":"deserialize","children":[],"call":[" deserializer_class new call "," deserializer_class new "," deserializer_class ","@binding evaluate_option "," deserializer call "," deserializer "]}," Representable Populator call":{"type":"method","name":"call","children":[],"call":["@binding set ","@binding parse_filter "," deserialize ","@binding [] ","@binding has_default? ","fragment == "]}," Representable Populator initialize":{"type":"method","name":"initialize","children":[],"call":[]}," Representable Hash Binding deserialize_method":{"type":"method","name":"deserialize_method","children":[],"call":[]}," Representable Hash Binding serialize_method":{"type":"method","name":"serialize_method","children":[],"call":[]}," Representable Hash Binding write":{"type":"method","name":"write","children":[],"call":["hash []= "," as "]}," Representable Hash Binding read":{"type":"method","name":"read","children":[],"call":["hash [] "," as ","hash has_key? "]}," Representable Hash Binding build_for":{"type":"method","name":"build_for","children":[],"call":[]}," Representable Deserializer Hash call":{"type":"method","name":"call","children":[],"call":["hsh []= "," deserialize! ","hash each "," tap "]}," Representable Deserializer Collection deserialize!":{"type":"method","name":"deserialize!","children":[],"call":["Deserializer  new call ","Deserializer  new "," item_deserializer call "," item_deserializer "]}," Representable Deserializer Collection call":{"type":"method","name":"call","children":[],"call":["collection << "," deserialize! ","@binding evaluate_option ","fragment each_with_index "]}," Representable Deserializer instance_for":{"type":"method","name":"instance_for","children":[],"call":[" raise ","DeserializeError  new ","@binding evaluate_option "]}," Representable Deserializer class_from":{"type":"method","name":"class_from","children":[],"call":["@binding evaluate_option "]}," Representable Deserializer class_for":{"type":"method","name":"class_for","children":[],"call":["item_class new "," raise ","DeserializeError  new "," class_from "," class_from  new "]}," Representable Deserializer create_object":{"type":"method","name":"create_object","children":[],"call":[" class_for "," instance_for "]}," Representable Deserializer prepare!":{"type":"method","name":"prepare!","children":[],"call":["mod prepare ","mod first ","mod is_a? ","@binding representer_module_for ","mod first  prepare ","@binding representer_module_for  prepare ","mod first  first ","@binding representer_module_for  first ","mod first  is_a? ","@binding representer_module_for  is_a? ","@binding representer_mod first ule_for ","@binding representer_@binding representer_module_for ule_for "]}," Representable Deserializer prepare":{"type":"method","name":"prepare","children":[],"call":[" prepare! ","@binding evaluate_option "]}," Representable Deserializer deserialize":{"type":"method","name":"deserialize","children":[],"call":["object send ","@binding deserialize_method ","@binding evaluate_option ","@binding representable? "," demarshal "]}," Representable Deserializer call":{"type":"method","name":"call","children":[],"call":[" deserialize ","@binding user_options "," prepare "," create_object ","@binding typed? ","fragment nil? "," create_ create_object  "]}," Representable Deserializer initialize":{"type":"method","name":"initialize","children":[],"call":[]}," Representable Definition inspect":{"type":"method","name":"inspect","children":[],"call":["state join "," name "," instance_variable_get ","(send\n  (send nil :instance_variables) :-\n  (array\n    (sym :@runtime_options)\n    (sym :@name))) collect "," instance_variables - "," instance_variables "]}," Representable Definition []":{"type":"method","name":"[]","children":[],"call":["@runtime_options [] "]}," Representable Binding Hash serializer_class":{"type":"method","name":"serializer_class","children":[],"call":[]}," Representable Binding Hash populator_class":{"type":"method","name":"populator_class","children":[],"call":[]}," Representable Binding Collection serializer_class":{"type":"method","name":"serializer_class","children":[],"call":[]}," Representable Binding Collection populator_class":{"type":"method","name":"populator_class","children":[],"call":[]}," Representable Binding populator_class":{"type":"method","name":"populator_class","children":[],"call":[]}," Representable Binding populator":{"type":"method","name":"populator","children":[],"call":[" populator_class new "," populator_class "]}," Representable Binding serializer":{"type":"method","name":"serializer","children":[],"call":[" serializer_class new "," serializer_class "]}," Representable Binding serializer_class":{"type":"method","name":"serializer_class","children":[],"call":[]}," Representable Binding setup!":{"type":"method","name":"setup!","children":[],"call":[" setup_exec_context! "]}," Representable Binding array?":{"type":"method","name":"array?","children":[],"call":["@definition array? "]}," Representable Binding default_for":{"type":"method","name":"default_for","children":[],"call":[" [] "," skipable_empty_value? "]}," Representable Binding skipable_empty_value?":{"type":"method","name":"skipable_empty_value?","children":[],"call":[" [] ! "," [] ","value nil? ","value size == ","value size "," [] == "," array? ","(send\n  (self) :[]\n  (sym :render_nil)) ! "]}," Representable Binding representer_module":{"type":"method","name":"representer_module","children":[],"call":["@definition representer_module "]}," Representable Binding name":{"type":"method","name":"name","children":[],"call":["@definition name "]}," Representable Binding has_default?":{"type":"method","name":"has_default?","children":[],"call":["@definition has_default? "]}," Representable Binding representable?":{"type":"method","name":"representable?","children":[],"call":["@definition representable? "]}," Representable Binding typed?":{"type":"method","name":"typed?","children":[],"call":["@definition typed? "]}," Representable Binding setter":{"type":"method","name":"setter","children":[],"call":["@definition setter "]}," Representable Binding getter":{"type":"method","name":"getter","children":[],"call":["@definition getter "]}," Representable Binding []":{"type":"method","name":"[]","children":[],"call":["@definition [] "]}," Representable Binding render_fragment":{"type":"method","name":"render_fragment","children":[],"call":[" write "," serialize "]}," Representable Serializer marshal":{"type":"method","name":"marshal","children":[],"call":["object send ","user_options merge! ","@binding serialize_method "]}," Representable Populator Collection deserializer":{"type":"method","name":"deserializer","children":[],"call":["Deserializer Collection  new "]}," Representable Populator deserializer":{"type":"method","name":"deserializer","children":[],"call":[" deserializer_class new "," deserializer_class ","@binding deserializer "]}," Representable Deserializer demarshal":{"type":"method","name":"demarshal","children":[],"call":["object send ","@binding deserialize_method "]}," Representable Definition delete!":{"type":"method","name":"delete!","children":[],"call":["@options delete ","@runtime_options delete "]}," Representable Debug Mapper compile_fragment":{"type":"method","name":"compile_fragment","children":[],"call":[" puts ","bin name ","bin extend "]}," Representable Debug Mapper uncompile_fragment":{"type":"method","name":"uncompile_fragment","children":[],"call":[" puts ","bin name ","bin extend "]}," Representable Debug Serializer marshal":{"type":"method","name":"marshal","children":[],"call":[" puts ","object inspect "]}," Representable Debug Deserializer create_object":{"type":"method","name":"create_object","children":[],"call":[" puts ","value inspect "]}," Representable Debug Populator deserializer":{"type":"method","name":"deserializer","children":[],"call":[" extend "]}," Representable Debug Populator deserialize":{"type":"method","name":"deserialize","children":[],"call":[" puts ","@binding typed? ! ","@binding typed? ","fragment inspect "]}," Representable Debug Binding serializer":{"type":"method","name":"serializer","children":[],"call":[" extend "]}," Representable Debug Binding populator":{"type":"method","name":"populator","children":[],"call":[" extend "]}," Representable Debug Binding evaluate_option":{"type":"method","name":"evaluate_option","children":[],"call":[" puts ","args first ","name == "," [] ","Debug  representable_log "]}," Representable Debug Binding read":{"type":"method","name":"read","children":[],"call":[" puts ","value inspect "]}," Representable Debug Representable representable_mapper":{"type":"method","name":"representable_mapper","children":[],"call":[" extend "]}," Representable Debug Representable create_representation_with":{"type":"method","name":"create_representation_with","children":[],"call":[" puts "]}," Representable Debug Representable update_properties_from":{"type":"method","name":"update_properties_from","children":[],"call":[" puts ","doc inspect "]}," Representable Debug extended":{"type":"method","name":"extended","children":[],"call":[]}," Representable Config Definitions remove":{"type":"method","name":"remove","children":[],"call":[" delete ","name to_s "]}," Representable Apply apply":{"type":"method","name":"apply","children":[],"call":["dfn representer_module extend apply ","dfn representer_module extend ","dfn representer_module ","block call "," representable_attrs each "," representable_attrs "]}," Representable Serializer serialize!":{"type":"method","name":"serialize!","children":[],"call":[" marshal ","@binding evaluate_option ","@binding representable? "," prepare "]}," Representable Object from_object":{"type":"method","name":"from_object","children":[],"call":[" update_properties_from "]}," Representable Object ClassMethods collection_representer_class":{"type":"method","name":"collection_representer_class","children":[],"call":[]}," Representable Object included":{"type":"method","name":"included","children":[],"call":[]}," Representable Object Binding deserialize_method":{"type":"method","name":"deserialize_method","children":[],"call":[]}," Representable Object Binding read":{"type":"method","name":"read","children":[],"call":["hash send "," as "," typed? ","fragment nil? ","hash send  nil? "]}," Representable Object Binding build_for":{"type":"method","name":"build_for","children":[],"call":[]}," Representable Object to_object":{"type":"method","name":"to_object","children":[],"call":[" create_representation_with "]}," Representable Object Binding serialize_method":{"type":"method","name":"serialize_method","children":[],"call":[]}," Representable Object Binding write":{"type":"method","name":"write","children":[],"call":[]}," Representable normalize_options!":{"type":"method","name":"normalize_options!","children":[],"call":["private_options []= ","options delete ","options [] ","propagated_options delete ","options dup ","options size == ","options size ","options dup  delete "]}," Representable Mapper Methods bindings":{"type":"method","name":"bindings","children":[],"call":["binding update! ","@bindings each "]}," Representable HashMethods filter_keys_for!":{"type":"method","name":"filter_keys_for!","children":[],"call":["props include? ! ","props include? ","k to_sym ","hash reject ","options delete ","options [] ","hash select "]}," Representable Deserializer Collection item_deserializer":{"type":"method","name":"item_deserializer","children":[],"call":["Deserializer  new "]}," Representable Deserializer Prepare prepare_for":{"type":"method","name":"prepare_for","children":[],"call":["mod prepare "]}," Representable Deserializer Prepare prepare!":{"type":"method","name":"prepare!","children":[],"call":[" prepare_for ","@binding representer_module_for ","@binding representer_@binding representer_module_for ule_for "]}," Representable Deserializer Prepare prepare":{"type":"method","name":"prepare","children":[],"call":[" prepare! ","@binding evaluate_option "]}," Representable Cached Serializer item_deserializer":{"type":"method","name":"item_deserializer","children":[],"call":["deserializer extend "," tap "]}," Representable Cached Serializer prepare_for":{"type":"method","name":"prepare_for","children":[],"call":["@binding cached_representer= ","representer update! ","@binding cached_representer ","@binding cached_@binding cached_representer = ","@binding cached_representer  update! ","@binding cached_@binding cached_representer  "]}," Representable Cached Binding deserializer":{"type":"method","name":"deserializer","children":[],"call":["deserializer extend "," tap "]}," Representable Cached Binding serializer":{"type":"method","name":"serializer","children":[],"call":["serializer extend "," tap "]}," Representable Cached update!":{"type":"method","name":"update!","children":[],"call":[]}," Representable Cached representable_mapper":{"type":"method","name":"representable_mapper","children":[],"call":["binding extend ","mapper bindings each ","mapper bindings "," represented "," tap "]}," Representable Binding Hash deserializer_class":{"type":"method","name":"deserializer_class","children":[],"call":[]}," Representable Binding Collection skipable_empty_value?":{"type":"method","name":"skipable_empty_value?","children":[],"call":["value size == ","value size "," [] == "," [] "," [] ! ","value nil? ","value empty? ","(send\n  (self) :[]\n  (sym :render_nil)) ! "]}," Representable Binding Collection deserializer_class":{"type":"method","name":"deserializer_class","children":[],"call":[]}," Representable Binding Factories deserializer":{"type":"method","name":"deserializer","children":[],"call":[" deserializer_class new "," deserializer_class "]}," Representable Binding Factories deserializer_class":{"type":"method","name":"deserializer_class","children":[],"call":[]}," Representable Binding Factories populator_class":{"type":"method","name":"populator_class","children":[],"call":[]}," Representable Binding Factories populator":{"type":"method","name":"populator","children":[],"call":[" populator_class new "," populator_class "]}," Representable Binding Factories serializer":{"type":"method","name":"serializer","children":[],"call":[" serializer_class new "," serializer_class "]}," Representable Binding Factories serializer_class":{"type":"method","name":"serializer_class","children":[],"call":[]}," Representable Binding update!":{"type":"method","name":"update!","children":[],"call":[" setup_exec_context! "," setup_user_options! "]}," Representable Cloneable Hash Clone clone_value":{"type":"method","name":"clone_value","children":[],"call":["value clone ","value is_a? "]}," Representable Cloneable Hash Clone clone":{"type":"method","name":"clone","children":[],"call":[" class [] "," clone_value "," collect "," class "]}," Representable Decorator clone":{"type":"method","name":"clone","children":[],"call":[]}," Representable Binding setup_user_options!":{"type":"method","name":"setup_user_options!","children":[],"call":["user_options merge "," [] == "," [] "]}," Representable deprecations=":{"type":"method","name":"deprecations=","children":[],"call":[]}," Representable NormalizeOptions normalize_options":{"type":"method","name":"normalize_options","children":[],"call":["(pair\n  (sym :user_options)\n  (hash)) merge ","options any? "]}," Representable representable_map!":{"type":"method","name":"representable_map!","children":[],"call":[" representable_map call "," representable_map "," represented ","propagated_options [] "]}," Representable representable_map":{"type":"method","name":"representable_map","children":[],"call":["Binding Map  new "," representable_bindings_for "]}," Representable Map <<":{"type":"method","name":"<<","children":[],"call":[" []= "," index ","bin name == ","binding name ","bin name "," find "]}," Representable Map call":{"type":"method","name":"call","children":[],"call":["bin send ","options []= "," each "]}," Representable YAML ClassMethods format_engine":{"type":"method","name":"format_engine","children":[],"call":[]}," Representable XML ClassMethods format_engine":{"type":"method","name":"format_engine","children":[],"call":[]}," XML AttributeHash create_representation_with":{"type":"method","name":"create_representation_with","children":[],"call":["bin write "," representable_bindings_for first "," representable_bindings_for "," representable_bindings_for first  write "," representable_ representable_bindings_for first dings_for first "," representable_ representable_bindings_for first dings_for "]}," XML Collection Methods create_representation_with":{"type":"method","name":"create_representation_with","children":[],"call":["bin write ","bin name "," representable_map first "," representable_map "," representable_map first  write "," representable_map first  name "]}," Representable Factories default_post_functions":{"type":"method","name":"default_post_functions","children":[],"call":["funcs << "," [] "," [] any? "]}," Representable Factories default_parse_fragment_functions":{"type":"method","name":"default_parse_fragment_functions","children":[],"call":["functions << "," [] "," representable? "," typed? "]}," Representable Factories default_parse_init_functions":{"type":"method","name":"default_parse_init_functions","children":[],"call":["functions << "," has_default? "," [] "," [] == "]}," Representable Factories default_render_init_functions":{"type":"method","name":"default_render_init_functions","children":[],"call":["functions << "," [] "," has_default? "," [] any? "," [] == "]}," Representable Factories default_render_fragment_functions":{"type":"method","name":"default_render_fragment_functions","children":[],"call":["functions << "," [] "," representable? "," [] ! "," typed? "]}," Representable Factories render_functions":{"type":"method","name":"render_functions","children":[],"call":[" collect_for "," default_render_fragment_functions "," default_render_init_functions "]}," Representable Factories parse_functions":{"type":"method","name":"parse_functions","children":[],"call":[" default_post_functions "," collect_for "," default_parse_fragment_functions "," default_parse_init_functions "]}," Representable Factories collect_for":{"type":"method","name":"collect_for","children":[],"call":["Collect Hash  [] "," [] ","Collect  [] "," array? "]}," Representable Factories pipeline_for":{"type":"method","name":"pipeline_for","children":[],"call":[" instance_exec ","@definition [] "]}," Representable Collect Hash call":{"type":"method","name":"call","children":[],"call":["hsh []= ","input each "," tap "]}," Representable Collect call":{"type":"method","name":"call","children":[],"call":["arr << ","Pipeline Stop  == ","options merge ","input each_with_index "]}," Representable Pipeline Macros insert":{"type":"method","name":"insert","children":[],"call":["Pipeline  new ","Pipeline Insert  call "]}," Representable Pipeline evaluate":{"type":"method","name":"evaluate","children":[],"call":["block call "]}," Representable Populator apply!":{"type":"method","name":"apply!","children":[],"call":[]}," Representable JSON ClassMethods format_engine":{"type":"method","name":"format_engine","children":[],"call":[]}," Representable Pipeline Function Insert delete!":{"type":"method","name":"delete!","children":[],"call":["arr []= ","Collect  [] ","Pipeline Insert  call ","func is_a? ","arr each_with_index ","arr delete "]}," Representable Pipeline Function Insert replace!":{"type":"method","name":"replace!","children":[],"call":["arr []= ","func == ","Collect  [] ","Pipeline Insert  call ","func is_a? ","arr each_with_index "]}," Representable Pipeline Function Insert call":{"type":"method","name":"call","children":[],"call":[" replace! ","options [] "," delete! ","arr dup ","arr dup  dup "]}," Representable Hash ClassMethods format_engine":{"type":"method","name":"format_engine","children":[],"call":[]}," Representable Function Decorate prepare_for":{"type":"method","name":"prepare_for","children":[],"call":["mod prepare "]}," Representable Function Decorate call":{"type":"method","name":"call","children":[],"call":[" prepare_for ","binding evaluate_option ","options [] ","options []  evaluate_option "]}," Representable Function Prepare call":{"type":"method","name":"call","children":[],"call":["binding evaluate_option ","options [] ","options []  evaluate_option "]}," Deprecation EvaluateOption get":{"type":"method","name":"get","children":[],"call":["Representable GetValue  call ","options merge ","Representable Getter  call "," [] "," warn ","Representable Get  call "]}," Deprecation EvaluateOption uncompile_fragment":{"type":"method","name":"uncompile_fragment","children":[],"call":["options [] "]}," Deprecation EvaluateOption compile_fragment":{"type":"method","name":"compile_fragment","children":[],"call":["options [] "]}," Deprecation EvaluateOption represented":{"type":"method","name":"represented","children":[],"call":[" warn "]}," Deprecation EvaluateOption evaluate_option_with_deprecation":{"type":"method","name":"evaluate_option_with_deprecation","children":[],"call":["proc call ","options merge ","options [] [] ","options [] "," send ","deprecated_args << ","arg == ","options [] nil? ","positional_arguments each "," warn ","positional_arguments join ","name == ","arity != "," send method arity "," send method ","proc instance_variable_get ","proc send ","proc instance_variable_get arity ","Options  new "," [] ","options []= "," []  call "," send method arity  != ","proc instance_variable_get arity  != "," send method  send method arity  "," send method proc instance_variable_get arity  "," []  instance_variable_get "," []  send ","proc instance_variable_get  send method arity  ","proc instance_variable_get proc instance_variable_get arity  "," []  instance_variable_get arity "]}," Deprecation EvaluateOption evaluate_option":{"type":"method","name":"evaluate_option","children":[],"call":[" evaluate_option_with_deprecation ","name == "]}," Deprecation EvaluateOption included":{"type":"method","name":"included","children":[],"call":[]}," Deprecation Build build":{"type":"method","name":"build","children":[],"call":[" warn ","definition [] "]}," Deprecation NormalizeOptions normalize_options":{"type":"method","name":"normalize_options","children":[],"call":["options []= ","user_options []= ","options delete ","user_option_keys each "," warn ","user_option_keys any? ","options keys - "," representable_attrs keys map "," representable_attrs keys "," representable_attrs ","options keys ","options dup ","options any? ","options dup  []= ","user_options dup  []= ","options dup  delete ","options keys -  each ","options keys -  any? ","options dup  keys - ","options dup  keys ","options dup  dup ","options dup  any? "]}," Representable Definition name":{"type":"method","name":"name","children":[],"call":[" [] "]}," Representable Decorator nested_builder":{"type":"method","name":"nested_builder","children":[],"call":[]}," Representable Decorator default_nested_class":{"type":"method","name":"default_nested_class","children":[],"call":[]}," Representable Declarative definitions":{"type":"method","name":"definitions","children":[],"call":["Config  new "]}," Representable Declarative nested_builder":{"type":"method","name":"nested_builder","children":[],"call":[]}," Representable Declarative default_nested_class":{"type":"method","name":"default_nested_class","children":[],"call":["Module  new "]}," Representable Debug _inspect_function":{"type":"method","name":"_inspect_function","children":[],"call":["File  readlines [] match [] ","File  readlines [] match ","File  readlines [] ","func source_location [] - ","func source_location [] ","func source_location ","File  readlines ","func is_a? ","func extend inspect ","func extend "]}," Representable Debug inspect":{"type":"method","name":"inspect","children":[],"call":[" class to_s split last "," class to_s split "," class to_s "," class ","(send nil :collect) join "," _inspect_function "," collect "]}," Representable Debug evaluate":{"type":"method","name":"evaluate","children":[],"call":[" puts ","res inspect "," tap "," _inspect_function ","block extend ","block is_a? ","Debug  representable_log "]}," Representable Debug call":{"type":"method","name":"call","children":[],"call":[" puts ","input inspect "," inspect ","Debug  representable_log "]}," Representable Debug Binding render_pipeline":{"type":"method","name":"render_pipeline","children":[],"call":[" extend "]}," Representable Debug Binding parse_pipeline":{"type":"method","name":"parse_pipeline","children":[],"call":[" extend "]}," Representable Debug representable_map":{"type":"method","name":"representable_map","children":[],"call":["bin extend ","arr collect "," tap "]}," Representable Debug create_representation_with":{"type":"method","name":"create_representation_with","children":[],"call":[" puts "," representable_log "]}," Representable Debug update_properties_from":{"type":"method","name":"update_properties_from","children":[],"call":[" puts ","doc inspect "," representable_log "]}," Representable Config remove":{"type":"method","name":"remove","children":[],"call":[" delete ","name to_s "]}," Representable Coercion ClassMethods property":{"type":"method","name":"property","children":[],"call":["definition merge! ","Coercer  new ","options [] "," tap "]}," Representable Cached representable_map":{"type":"method","name":"representable_map","children":[],"call":[" class map "," class "]}," Representable Cached included":{"type":"method","name":"included","children":[],"call":[]}," Representable Cached BuildDefinition build_definition":{"type":"method","name":"build_definition","children":[],"call":[" map << ","binding_builder build "," map "," format_engine "," tap "]}," Representable Binding render_pipeline":{"type":"method","name":"render_pipeline","children":[],"call":["Pipeline  [] "," render_functions "," pipeline_for "]}," Representable Binding parse_pipeline":{"type":"method","name":"parse_pipeline","children":[],"call":["Pipeline  [] "," parse_functions "," pipeline_for "]}," Representable Binding exec_context":{"type":"method","name":"exec_context","children":[],"call":["@exec_context call "]}," Representable Binding EvaluateOption evaluate_option":{"type":"method","name":"evaluate_option","children":[],"call":["proc call ","options merge ","options [] [] ","options [] "," send "," [] "," []  call "]}," Representable Binding Deprecatable uncompile_fragment":{"type":"method","name":"uncompile_fragment","children":[],"call":[" parse_pipeline call ","options [] "," parse_pipeline "]}," Representable Binding Deprecatable compile_fragment":{"type":"method","name":"compile_fragment","children":[],"call":[" render_pipeline call "," render_pipeline "]}," Representable Binding ClassDeprecatable build":{"type":"method","name":"build","children":[],"call":[" build_for ","definition create_binding ","definition [] "]}," Representable normalize_options":{"type":"method","name":"normalize_options","children":[],"call":["propagated_options []= ","private_options any? ","private_options []= ","propagated_options delete ","options [] ","options dup ","options any? ","(pair\n  (sym :user_options)\n  (hash)) merge ","(pair\n  (sym :user_options)\n  (lvar :user_options)) merge ","options dup  []= ","options dup  delete "]}," Representable Function Insert delete!":{"type":"method","name":"delete!","children":[],"call":["arr delete ","arr []= ","Collect  [] ","Pipeline Insert  call ","func is_a? ","arr each_with_index "]}," Representable Function Insert replace!":{"type":"method","name":"replace!","children":[],"call":["arr []= ","old_func instance_of? ","func class ","func == ","old_func is_a? ","Collect  [] ","Pipeline Insert  call ","func is_a? ","arr each_with_index "]}," Representable Function Insert call":{"type":"method","name":"call","children":[],"call":[" replace! ","options [] "," delete! ","arr dup ","arr dup  dup "]}," Representable Function CreateObject instance_for":{"type":"method","name":"instance_for","children":[],"call":["Instance  call "]}," Representable Function CreateObject class_from":{"type":"method","name":"class_from","children":[],"call":["options [] evaluate_option ","options [] "]}," Representable Function CreateObject class_for":{"type":"method","name":"class_for","children":[],"call":["item_class new "," raise ","DeserializeError  new ","options [] name ","options [] "," class_from "," class_from  new "]}," Representable Function CreateObject call":{"type":"method","name":"call","children":[],"call":[" class_for "," instance_for ","AssignFragment  call "]}," Representable Cached Property property":{"type":"method","name":"property","children":[],"call":[" map << ","binding_builder build "," map "," format_engine "," tap "]}," Representable Pipeline Insert insert":{"type":"method","name":"insert","children":[],"call":["Pipeline  new ","Insert  call "]}," XML Namespace representable_map":{"type":"method","name":"representable_map","children":[],"call":["bin extend ","bin is_a? ","map each "," tap "]}," XML Namespace Namespaced":{"type":"method","name":"Namespaced","children":[],"call":[]}," XML Namespace add_namespace_definitions!":{"type":"method","name":"add_namespace_definitions!","children":[],"call":["node add_namespace_definition ","prefix to_s ","prefix nil? ","namespaces each ","prefix to_s  to_s ","prefix to_s  nil? "]}," XML Namespace to_node":{"type":"method","name":"to_node","children":[],"call":[" add_namespace_definitions! "," class namespace_defs "," class ","options [] == ","options [] ","(lvar :options) tap ","options []= ","property to_sym "," representable_attrs keys each "," representable_attrs keys "," representable_attrs ","(pair\n  (sym :wrap)\n  (lvar :root_tag)) merge ","(lvar :prefix) compact join ","(lvar :prefix) compact "," representation_wrap "," class namespace_defs [] "," representable_attrs options [] "," representable_attrs options ","(pair\n  (sym :wrap)\n  (lvar :root_tag)) merge  [] == ","(pair\n  (sym :wrap)\n  (lvar :root_tag)) merge  [] ","(lvar :(pair\n  (sym :wrap)\n  (lvar :root_tag)) merge ) tap ","(pair\n  (sym :wrap)\n  (lvar :root_tag)) merge  []= ","(pair\n  (sym :wrap)\n  (lvar :(lvar :prefix) compact join )) merge ","(lvar : class namespace_defs [] ) compact join ","(lvar : class namespace_defs [] ) compact "," representable_attrs (pair\n  (sym :wrap)\n  (lvar :root_tag)) merge  [] "," representable_attrs (pair\n  (sym :wrap)\n  (lvar :root_tag)) merge  "]}," XML Namespace from_node":{"type":"method","name":"from_node","children":[],"call":[]}," XML Namespace AsWithNamespace prefixed":{"type":"method","name":"prefixed","children":[],"call":["Namespace  Namespaced ","dfn [] [] ","dfn [] "]}," XML Namespace AsWithNamespace read":{"type":"method","name":"read","children":[],"call":[" prefixed "]}," XML Namespace AsWithNamespace write":{"type":"method","name":"write","children":[],"call":[" prefixed "]}," XML Namespace DSL update_namespace_defs!":{"type":"method","name":"update_namespace_defs!","children":[],"call":["dfn merge! ","representer update_namespace_defs! ","Class  new ","dfn representer_module ","dfn typed? "," representable_attrs each "," representable_attrs ","Class  new  update_namespace_defs! ","dfn Class  new _module "]}," XML Namespace DSL property":{"type":"method","name":"property","children":[],"call":[" update_namespace_defs! "," namespace_defs ","dfn merge! ","dfn representer_module representable_attrs options [] ","dfn representer_module representable_attrs options ","dfn representer_module representable_attrs ","dfn representer_module ","dfn typed? "," tap ","options [] "," representable_attrs options [] "," representable_attrs options "," representable_attrs "]}," XML Namespace DSL namespace_defs":{"type":"method","name":"namespace_defs","children":[],"call":[" representable_attrs options [] "," representable_attrs options "," representable_attrs "]}," XML Namespace DSL namespace_def":{"type":"method","name":"namespace_def","children":[],"call":[" namespace_defs merge! ","mapping invert "," namespace_defs "]}," XML Namespace DSL namespace":{"type":"method","name":"namespace","children":[],"call":[" representable_attrs options [] []= "," representable_attrs options [] "," representable_attrs options "," representable_attrs "," representable_attrs options []= "]}," XML Namespace included":{"type":"method","name":"included","children":[],"call":[]}," Representable XML Node":{"type":"method","name":"Node","children":[],"call":["node []= ","attributes each ","Nokogiri XML Node  new ","name to_s ","Nokogiri XML Node  new  []= "]}," Representable VirtusCoercion ClassMethods property":{"type":"method","name":"property","children":[],"call":["definition merge! ","Coercer  new ","options [] "," tap "]}," Representable VirtusCoercion included":{"type":"method","name":"included","children":[],"call":[]}," Representable VirtusCoercion Coercer call":{"type":"method","name":"call","children":[],"call":["Virtus Attribute  build coerce ","Virtus Attribute  build "]}," Representable VirtusCoercion Coercer initialize":{"type":"method","name":"initialize","children":[],"call":[]}," Representable Option":{"type":"method","name":"Option","children":[],"call":[]}," Representable Option build":{"type":"method","name":"build","children":[],"call":[]}," Representable Option callable?":{"type":"method","name":"callable?","children":[],"call":[]}," Representable Debug representable_log":{"type":"method","name":"representable_log","children":[],"call":[" _representable_logger debug "," _representable_logger "]}," Representable Debug _representable_logger":{"type":"method","name":"_representable_logger","children":[],"call":["Logger  new "]}," Representable Binding Map <<":{"type":"method","name":"<<","children":[],"call":[" []= "," index ","bin name == ","binding name ","bin name "," find "]}," Representable Binding Map call":{"type":"method","name":"call","children":[],"call":["bin send ","options []= "," each "]}}