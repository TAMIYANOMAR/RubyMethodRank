{" Fog Storage InternetArchive Real request":{"type":"method","name":"request","children":[],"call":["Fog XML Connection  new request ","Fog XML Connection  new ","uri host ","Fog Logger  warning ","URI  parse ","error response headers [] ","error response headers ","error response ","@connection request ","params dup ","params [] []= "," signature ","params [] ","Fog Time  now to_date_header ","Fog Time  now ","URI  parse  host ","error Fog XML Connection  new request  headers [] ","error @connection request  headers [] ","error Fog XML Connection  new request  headers ","error @connection request  headers ","error Fog XML Connection  new request  ","error @connection request  "]}," Fog Storage InternetArchive Real setup_credentials":{"type":"method","name":"setup_credentials","children":[],"call":["Fog HMAC  new ","options [] "]}," Fog Storage InternetArchive Real signature":{"type":"method","name":"signature","children":[],"call":["Base64  encode64 chomp! ","Base64  encode64 ","@hmac sign ","string_to_sign << ","canonical_resource chop! ","canonical_resource << ","params [] [] ","params [] ","params [] [] nil? ","(str \"acl\") include? ","(or\n  (send\n    (lvar :params) :[]\n    (sym :query))\n  (hash)) keys sort ","(or\n  (send\n    (lvar :params) :[]\n    (sym :query))\n  (hash)) keys ","params [] to_s ","Fog InternetArchive  escape downcase ","Fog InternetArchive  escape ","subdomain == ","subdomain nil? ","@path dup ","params []= ","params [] split [] ","params [] split ","Fog Logger  warning ","subdomain =~ ","params [] split first ","canonical_amz_headers << ","x [] <=> ","y [] ","x [] ","amz_headers sort ","amz_headers []= ","key [] == ","key [] ","params [] to_s upcase ","@path dup  chop! ","@path dup  << ","params [] split first  == ","params [] split first  nil? ","params [] split first  =~ "]}," Fog Storage InternetArchive Real reload":{"type":"method","name":"reload","children":[],"call":["@connection reset "]}," Fog Storage InternetArchive Real initialize":{"type":"method","name":"initialize","children":[],"call":["Fog XML Connection  new ","options [] ","options fetch ","endpoint scheme ","endpoint port ","endpoint path ","endpoint path empty? ","endpoint host ","URI  parse "," setup_credentials ","URI  parse  scheme ","URI  parse  port ","URI  parse  path ","URI  parse  path empty? ","URI  parse  host "]}," Fog Storage InternetArchive Mock setup_credentials":{"type":"method","name":"setup_credentials","children":[],"call":["options [] "]}," Fog Storage InternetArchive Mock signature":{"type":"method","name":"signature","children":[],"call":[]}," Fog Storage InternetArchive Mock reset_data":{"type":"method","name":"reset_data","children":[],"call":[" class data [] delete "," class data [] "," class data "," class "]}," Fog Storage InternetArchive Mock data":{"type":"method","name":"data","children":[],"call":[" class data [] [] "," class data [] "," class data "," class "]}," Fog Storage InternetArchive Mock initialize":{"type":"method","name":"initialize","children":[],"call":["options [] "," setup_credentials "]}," Fog Storage InternetArchive Mock reset":{"type":"method","name":"reset","children":[],"call":[]}," Fog Storage InternetArchive Mock acls":{"type":"method","name":"acls","children":[],"call":[]}," Fog Storage InternetArchive Utils scheme_host_path_query":{"type":"method","name":"scheme_host_path_query","children":[],"call":["query join ","params [] ","query << ","Fog InternetArchive  escape ","params [] [] "," signature ","params [] []= ","params []= ","Fog InternetArchive  escape gsub ","expires to_i ","params delete ","params [] == "]}," Fog Storage InternetArchive Utils url":{"type":"method","name":"url","children":[],"call":[" http_url ","Fog Logger  deprecation "," caller first "," caller "]}," Fog Storage InternetArchive Utils https_url":{"type":"method","name":"https_url","children":[],"call":[" scheme_host_path_query ","params merge "]}," Fog Storage InternetArchive Utils http_url":{"type":"method","name":"http_url","children":[],"call":[" scheme_host_path_query ","params merge "]}," Fog InternetArchive SignatureV4 derived_hmac":{"type":"method","name":"derived_hmac","children":[],"call":["Fog HMAC  new ","Fog HMAC  new sign ","@hmac sign ","date utc strftime ","date utc "]}," Fog InternetArchive SignatureV4 signed_headers":{"type":"method","name":"signed_headers","children":[],"call":["(send\n  (send\n    (block\n      (send\n        (send\n          (lvar :headers) :keys) :map)\n      (args\n        (arg :key))\n      (send\n        (lvar :key) :to_s)) :sort) :map) join ","key downcase ","(send\n  (send\n    (lvar :headers) :keys) :map) sort map ","(send\n  (send\n    (lvar :headers) :keys) :map) sort ","key to_s ","headers keys map ","headers keys "]}," Fog InternetArchive SignatureV4 canonical_headers":{"type":"method","name":"canonical_headers","children":[],"call":["canonical_headers << ","headers [] to_s strip ","headers [] to_s ","headers [] ","key to_s downcase ","key to_s ","k to_s ","headers keys sort_by ","headers keys "]}," Fog InternetArchive SignatureV4 canonical_query_string":{"type":"method","name":"canonical_query_string","children":[],"call":["canonical_query_string join ","canonical_query_string << ","Fog InternetArchive  escape ","query [] to_s ","query [] ","key to_s ","k to_s ","(or\n  (lvar :query)\n  (hash)) keys sort_by ","(or\n  (lvar :query)\n  (hash)) keys "]}," Fog InternetArchive SignatureV4 sign":{"type":"method","name":"sign","children":[],"call":["signature unpack first ","signature unpack "," signed_headers ","params [] "," derived_hmac sign "," derived_hmac ","string_to_sign chop! ","Digest SHA256  hexdigest ","date to_iso8601_basic ","date utc strftime ","date utc ","canonical_request chop! "," canonical_headers "," canonical_query_string ","params [] to_s upcase ","params [] to_s "," derived_hmac sign  unpack first "," derived_hmac sign  unpack "]}," Fog InternetArchive SignatureV4 initialize":{"type":"method","name":"initialize","children":[],"call":["Fog HMAC  new ","AWS4 + "]}," Fog Storage InternetArchive Real upload_part":{"type":"method","name":"upload_part","children":[],"call":[" request ","CGI  escape ","data [] ","headers []= ","data [] [] ","Fog Storage  parse_data ","Fog Storage  parse_data  [] ","Fog Storage  parse_data  [] [] ","Fog Storage  parse_Fog Storage  parse_data  "]}," Fog Storage InternetArchive Mock sync_clock":{"type":"method","name":"sync_clock","children":[],"call":[]}," Fog Storage InternetArchive Real sync_clock":{"type":"method","name":"sync_clock","children":[],"call":["Fog Time  now= ","Time  parse ","response headers [] ","response headers ","error response "," get_service "]}," Fog Storage InternetArchive Mock put_request_payment":{"type":"method","name":"put_request_payment","children":[],"call":[" raise ","Excon Errors  status_error ","response status= ","bucket []= "," data [] [] "," data [] "," data ","Excon Response  new ","Excon Response  new  status= "," data [] []  []= "]}," Fog Storage InternetArchive Real put_request_payment":{"type":"method","name":"put_request_payment","children":[],"call":[" request "]}," Fog Storage InternetArchive PutObjectUrl put_object_url":{"type":"method","name":"put_object_url","children":[],"call":[" scheme_host_path_query ","options [] "," raise ","ArgumentError  new "]}," Fog Storage InternetArchive Mock put_object_acl":{"type":"method","name":"put_object_acl","children":[],"call":[" data [] [] [] []= "," data [] [] [] "," data [] [] "," data [] "," data "," raise ","Excon Errors BadRequest  new ","(str \"private\") include? ! ","(str \"private\") include? ","Fog Storage InternetArchive  hash_to_acl ","acl is_a? "]}," Fog Storage InternetArchive Real put_object_acl":{"type":"method","name":"put_object_acl","children":[],"call":[" request ","CGI  escape ","headers []= ","Fog Time  now to_date_header ","Fog Time  now ","Base64  encode64 strip ","Base64  encode64 ","Digest MD5  digest "," raise ","Excon Errors BadRequest  new ","(str \"private\") include? ! ","(str \"private\") include? ","Fog Storage InternetArchive  hash_to_acl ","acl is_a? "]}," Fog Storage InternetArchive Mock put_object":{"type":"method","name":"put_object","children":[],"call":[" raise ","Excon Errors  status_error ","response status= ","response headers= ","object [] ","bucket [] []= ","bucket [] ","object []= ","data [] [] ","data [] ","options [] ","Fog Time  now to_date_header ","Fog Time  now ","Digest MD5  hexdigest "," data [] [] "," data [] "," data ","Excon Response  new ","data []= ","data [] read ","data [] is_a? ","Fog Storage  parse_data "," data [] [] [] []= "," class acls "," class "," data [] [] [] ","Excon Errors BadRequest  new ","(str \"private\") include? ! ","(str \"private\") include? ","Excon Response  new  status= ","Excon Response  new  headers= "," data [] []  [] []= "," data [] []  [] ","Fog Storage  parse_data  [] [] ","Fog Storage  parse_data  [] "," Fog Storage  parse_data  [] [] "," Fog Storage  parse_data  [] "," Fog Storage  parse_data  ","Fog Storage  parse_data  []= ","Fog Storage  parse_data  [] read ","Fog Storage  parse_data  [] is_a? ","Fog Storage  parse_Fog Storage  parse_data  "," Fog Storage  parse_data  [] [] [] []= "," Fog Storage  parse_data  [] [] [] "]}," Fog Storage InternetArchive Real put_object":{"type":"method","name":"put_object","children":[],"call":[" request ","CGI  escape ","data [] ","data [] merge! ","Fog Storage  parse_data ","Fog Storage  parse_data  [] ","Fog Storage  parse_data  [] merge! ","Fog Storage  parse_Fog Storage  parse_data  "]}," Fog Storage InternetArchive Mock put_bucket_website":{"type":"method","name":"put_bucket_website","children":[],"call":[" raise ","Excon Errors  status_error ","response status= "," data [] [] "," data [] "," data ","Excon Response  new ","Excon Response  new  status= "]}," Fog Storage InternetArchive Real put_bucket_website":{"type":"method","name":"put_bucket_website","children":[],"call":[" request ","data << ","options [] "]}," Fog Storage InternetArchive Real put_bucket_policy":{"type":"method","name":"put_bucket_policy","children":[],"call":[" request ","Fog JSON  encode "]}," Fog Storage InternetArchive Real put_bucket_logging":{"type":"method","name":"put_bucket_logging","children":[],"call":[" request ","data << ","grant [] ","grant [] keys sort ","grant [] keys "," acl [] each "," acl [] "," acl ","logging_status [] [] ","logging_status [] ","logging_status [] empty? "]}," Fog Storage InternetArchive Real put_bucket_lifecycle":{"type":"method","name":"put_bucket_lifecycle","children":[],"call":[" request ","Base64  encode64 chomp! ","Base64  encode64 ","Digest MD5  digest ","body gsub! ","builder to_xml "," Days ","rule [] "," Expiration "," StorageClass ","rule [] [] ","rule [] [] nil? "," Date ","Time  parse utc iso8601 ","Time  parse utc ","Time  parse "," time "," time utc iso8601 "," time utc ","rule [] [] is_a? "," Transition ","rule [] [] utc iso8601 ","rule [] [] utc "," Status "," Prefix "," ID "," Rule ","lifecycle [] each ","lifecycle [] "," LifecycleConfiguration ","Nokogiri XML Builder  new ","builder to_xml  gsub! "]}," Fog Storage InternetArchive Mock put_bucket_cors":{"type":"method","name":"put_bucket_cors","children":[],"call":[" data [] [] []= ","Fog Storage InternetArchive  hash_to_cors "," data [] [] "," data [] "," data "]}," Fog Storage InternetArchive Real put_bucket_cors":{"type":"method","name":"put_bucket_cors","children":[],"call":[" request ","headers []= ","Fog Time  now to_date_header ","Fog Time  now ","Base64  encode64 strip ","Base64  encode64 ","Digest MD5  digest ","Fog Storage InternetArchive  hash_to_cors "]}," Fog Storage InternetArchive Mock put_bucket_acl":{"type":"method","name":"put_bucket_acl","children":[],"call":[" data [] [] []= "," data [] [] "," data [] "," data "," raise ","Excon Errors BadRequest  new ","(str \"private\") include? ! ","(str \"private\") include? ","Fog Storage InternetArchive  hash_to_acl ","acl is_a? "]}," Fog Storage InternetArchive Real put_bucket_acl":{"type":"method","name":"put_bucket_acl","children":[],"call":[" request ","headers []= ","Fog Time  now to_date_header ","Fog Time  now ","Base64  encode64 strip ","Base64  encode64 ","Digest MD5  digest "," raise ","Excon Errors BadRequest  new ","(str \"private\") include? ! ","(str \"private\") include? ","Fog Storage InternetArchive  hash_to_acl ","acl is_a? "]}," Fog Storage InternetArchive Mock put_bucket":{"type":"method","name":"put_bucket","children":[],"call":[" data [] []= "," data [] "," data "," data [] [] ","bucket []= ","options [] ","Time  now ","response status= ","Excon Response  new "," data [] [] []= "," class acls "," class "," raise ","Excon Errors BadRequest  new ","(str \"private\") include? ! ","(str \"private\") include? ","Excon Response  new  status= "]}," Fog Storage InternetArchive Real put_bucket":{"type":"method","name":"put_bucket","children":[],"call":[" request ","options delete "]}," Fog Storage InternetArchive Real post_object_hidden_fields":{"type":"method","name":"post_object_hidden_fields","children":[],"call":["options []= ","Base64  encode64 gsub ","Base64  encode64 ","@hmac sign ","options [] ","Fog JSON  encode "]}," Fog Storage InternetArchive Real list_parts":{"type":"method","name":"list_parts","children":[],"call":[" request ","options merge! ","CGI  escape ","Fog Parsers Storage InternetArchive ListParts  new ","options []= "]}," Fog Storage InternetArchive Real list_multipart_uploads":{"type":"method","name":"list_multipart_uploads","children":[],"call":[" request ","options merge! ","Fog Parsers Storage InternetArchive ListMultipartUploads  new "]}," Fog Storage InternetArchive Real initiate_multipart_upload":{"type":"method","name":"initiate_multipart_upload","children":[],"call":[" request ","CGI  escape ","Fog Parsers Storage InternetArchive InitiateMultipartUpload  new "]}," Fog Storage InternetArchive Mock head_object":{"type":"method","name":"head_object","children":[],"call":["response body= "," get_object "," get_object  body= "]}," Fog Storage InternetArchive Real head_object":{"type":"method","name":"head_object","children":[],"call":[" request ","CGI  escape ","headers merge! ","headers []= ","Fog Time  at to_date_header ","Fog Time  at ","options [] to_i ","options [] "," raise ","ArgumentError  new "]}," Fog Storage InternetArchive Mock get_service":{"type":"method","name":"get_service","children":[],"call":["response body= ","(str \"CreationDate\") include? ! ","(str \"CreationDate\") include? ","bucket reject "," data [] values map "," data [] values "," data [] "," data ","response headers []= ","response headers ","Excon Response  new ","Excon Response  new  body= ","Excon Response  new  headers []= ","Excon Response  new  headers "]}," Fog Storage InternetArchive Real get_service":{"type":"method","name":"get_service","children":[],"call":[" request ","Fog Parsers Storage InternetArchive GetService  new "]}," Fog Storage InternetArchive Mock get_request_payment":{"type":"method","name":"get_request_payment","children":[],"call":[" raise ","Excon Errors  status_error ","response status= ","response body= ","bucket [] "," data [] [] "," data [] "," data ","Excon Response  new ","Excon Response  new  status= ","Excon Response  new  body= "," data [] []  [] "]}," Fog Storage InternetArchive Real get_request_payment":{"type":"method","name":"get_request_payment","children":[],"call":[" request ","Fog Parsers Storage InternetArchive GetRequestPayment  new "]}," Fog Storage InternetArchive GetObjectUrl get_object_url":{"type":"method","name":"get_object_url","children":[],"call":[" scheme_host_path_query ","options [] ","bucket_name =~ "," raise ","ArgumentError  new "]}," Fog Storage InternetArchive Real get_object_torrent":{"type":"method","name":"get_object_torrent","children":[],"call":[" request ","CGI  escape "," raise ","ArgumentError  new "]}," Fog Storage InternetArchive GetObjectHttpsUrl get_object_https_url":{"type":"method","name":"get_object_https_url","children":[],"call":[" get_object_url ","options merge "]}," Fog Storage InternetArchive GetObjectHttpUrl get_object_http_url":{"type":"method","name":"get_object_http_url","children":[],"call":[" http_url ","options [] ","bucket_name =~ "," raise ","ArgumentError  new "]}," Fog Storage InternetArchive Mock get_object_acl":{"type":"method","name":"get_object_acl","children":[],"call":[" raise ","Excon Errors  status_error ","response status= ","response body= ","Fog Storage InternetArchive  acl_to_hash ","acl is_a? "," data [] [] [] [] "," data [] [] [] "," data [] [] "," data [] "," data ","Excon Response  new ","Excon Response  new  status= ","Excon Response  new  body= "]}," Fog Storage InternetArchive Real get_object_acl":{"type":"method","name":"get_object_acl","children":[],"call":[" request ","CGI  escape ","Fog Parsers Storage InternetArchive AccessControlList  new "," raise ","ArgumentError  new "]}," Fog Storage InternetArchive Mock byte_ranges":{"type":"method","name":"byte_ranges","children":[],"call":["ranges << ","r0 <= ","size - ","r1 >= ","r1 < ","r1 to_i ","r1 empty? ","r0 to_i ","(send\n  (lvar :size) :-\n  (send\n    (lvar :r1) :to_i)) max ","r0 empty? ","matches [] ","range_spec match ","http_range split each ","http_range split ","r0 to_i  <= ","(send\n  (lvar :size) :-\n  (send\n    (lvar :r1) :to_i)) max  <= ","size -  >= ","r1 to_i  >= ","size -  < ","r1 to_i  < ","size -  to_i ","r1 to_i  to_i ","size -  empty? ","r1 to_i  empty? ","r0 to_i  to_i ","(send\n  (lvar :size) :-\n  (send\n    (lvar :r1) :to_i)) max  to_i ","(send\n  (lvar :size) :-\n  (send\n    (lvar :size - ) :to_i)) max ","(send\n  (lvar :size) :-\n  (send\n    (lvar :r1 to_i ) :to_i)) max ","r0 to_i  empty? ","(send\n  (lvar :size) :-\n  (send\n    (lvar :r1) :to_i)) max  empty? ","range_spec match  [] "]}," Fog Storage InternetArchive Mock get_object":{"type":"method","name":"get_object","children":[],"call":[" raise ","Excon Errors  status_error ","response body= ","response status= ","block call ","data read ","(lvar :remaining) min ","remaining > ","data length ","StringIO  new "," block_given? ","body [] ","ranges first ","ranges empty? ","ranges nil? "," byte_ranges ","body size ","options [] ","object [] ","response headers []= ","response headers ","options [] < ","Time  parse ","options [] == ","options [] >= ","options [] != ","object [] ! ","bucket [] [] first ","bucket [] [] ","bucket [] ","bucket [] key? "," data [] [] "," data [] "," data ","Excon Response  new ","ArgumentError  new ","response body [] = ","response object [] = ","Excon Response  new  body= ","Excon Response  new  status= ","StringIO  new  read ","(lvar :data length ) min ","data length  > ","StringIO  new  length ","body []  [] ","object []  [] "," byte_ranges  first "," byte_ranges  empty? "," byte_ranges  nil? "," byte_ byte_ranges  ","body []  size ","object []  size ","bucket [] [] first  [] ","Excon Response  new  headers []= ","Excon Response  new  headers ","bucket [] [] first  [] ! "," data [] []  [] [] first "," data [] []  [] [] "," data [] []  [] "," data [] []  [] key? "," StringIO  new  [] [] "," StringIO  new  [] "," StringIO  new  "]}," Fog Storage InternetArchive Real get_object":{"type":"method","name":"get_object","children":[],"call":[" request ","params merge! ","CGI  escape ","params []= ","Proc  new "," block_given? ","params [] []= ","Fog Time  at to_date_header ","Fog Time  at ","options [] to_i ","options [] ","params [] ","params [] merge! "," raise ","ArgumentError  new "]}," Fog Storage InternetArchive Real get_bucket_website":{"type":"method","name":"get_bucket_website","children":[],"call":[" request ","Fog Parsers Storage InternetArchive GetBucketWebsite  new "," raise ","ArgumentError  new "]}," Fog Storage InternetArchive Real get_bucket_policy":{"type":"method","name":"get_bucket_policy","children":[],"call":["response body= ","Fog JSON  decode ","response body ","response body nil? "," request "," raise ","ArgumentError  new "," request  body= "," request  body "," request  body nil? "]}," Fog Storage InternetArchive Real get_bucket_logging":{"type":"method","name":"get_bucket_logging","children":[],"call":[" request ","Fog Parsers Storage InternetArchive GetBucketLogging  new "," raise ","ArgumentError  new "]}," Fog Storage InternetArchive Mock get_bucket_location":{"type":"method","name":"get_bucket_location","children":[],"call":[" raise ","Excon Errors  status_error ","response status= ","response body= ","bucket [] "," data [] [] "," data [] "," data ","Excon Response  new ","Excon Response  new  status= ","Excon Response  new  body= "," data [] []  [] "]}," Fog Storage InternetArchive Real get_bucket_location":{"type":"method","name":"get_bucket_location","children":[],"call":[" request ","Fog Parsers Storage InternetArchive GetBucketLocation  new "]}," Fog Storage InternetArchive Real get_bucket_lifecycle":{"type":"method","name":"get_bucket_lifecycle","children":[],"call":[" request ","Fog Parsers Storage InternetArchive GetBucketLifecycle  new "]}," Fog Storage InternetArchive Mock get_bucket_cors":{"type":"method","name":"get_bucket_cors","children":[],"call":[" raise ","Excon Errors  status_error ","response status= ","response body= ","Fog Storage InternetArchive  cors_to_hash ","cors is_a? "," data [] [] [] "," data [] [] "," data [] "," data ","Excon Response  new ","Excon Response  new  status= ","Excon Response  new  body= ","Fog Storage InternetArchive   data [] [] [] _to_hash "," data [] [] []  is_a? "]}," Fog Storage InternetArchive Real get_bucket_cors":{"type":"method","name":"get_bucket_cors","children":[],"call":[" request ","Fog Parsers Storage InternetArchive CorsConfiguration  new "," raise ","ArgumentError  new "]}," Fog Storage InternetArchive Mock get_bucket_acl":{"type":"method","name":"get_bucket_acl","children":[],"call":[" raise ","Excon Errors  status_error ","response status= ","response body= ","Fog Storage InternetArchive  acl_to_hash ","acl is_a? "," data [] [] [] "," data [] [] "," data [] "," data ","Excon Response  new ","Excon Response  new  status= ","Excon Response  new  body= ","Fog Storage InternetArchive   data [] [] [] _to_hash "," data [] [] []  is_a? "]}," Fog Storage InternetArchive Real get_bucket_acl":{"type":"method","name":"get_bucket_acl","children":[],"call":[" request ","Fog Parsers Storage InternetArchive AccessControlList  new "," raise ","ArgumentError  new "]}," Fog Storage InternetArchive Mock get_bucket":{"type":"method","name":"get_bucket","children":[],"call":[" raise ","Excon Errors  status_error ","response status= ","response body []= ","response body [] [] ","response body [] ","response body ","max_keys < ","response body [] length ","response body= ","bucket [] ","truncated_contents size != ","contents size ","truncated_contents size ","common_prefixes uniq ","contents [] ","(lvar :max_keys) min ","data merge! ","object [] to_i ","object [] ","Time  parse ","(str \"ETag\") include? ! ","(str \"ETag\") include? ","object reject ","(send\n  (block\n    (send\n      (send\n        (send\n          (send\n            (lvar :bucket) :[]\n            (sym :objects)) :values) :map\n        (block-pass\n          (sym :first))) :sort)\n    (args\n      (arg :x)\n      (arg :y))\n    (send\n      (send\n        (lvar :x) :[]\n        (str \"Key\")) :<=>\n      (send\n        (lvar :y) :[]\n        (str \"Key\")))) :reject) map ","object key? ","common_prefixes << ","object [] sub ","object [] [] include? ","object [] [] ","prefix length ","object [] <= ","object [] [] != ","(send\n  (send\n    (send\n      (send\n        (lvar :bucket) :[]\n        (sym :objects)) :values) :map\n    (block-pass\n      (sym :first))) :sort) reject ","x [] <=> ","y [] ","x [] ","bucket [] values map sort ","bucket [] values map ","bucket [] values "," data [] [] "," data [] "," data ","Excon Response  new ","ArgumentError  new ","options [] ","Excon Response  new  status= ","Excon Response  new  body []= ","Excon Response  new  body [] [] ","Excon Response  new  body [] ","Excon Response  new  body ","Excon Response  new  body [] length ","Excon Response  new  body= "," data [] []  [] ","contents []  size != ","truncated_contents (lvar :max_keys) min  != ","contents (lvar :max_keys) min  ","contents []  size ","truncated_contents (lvar :max_keys) min  ","(send\n  (block\n    (send\n      (send\n        (send\n          (send\n            (lvar : data [] [] ) :[]\n            (sym :objects)) :values) :map\n        (block-pass\n          (sym :first))) :sort)\n    (args\n      (arg :x)\n      (arg :y))\n    (send\n      (send\n        (lvar :x) :[]\n        (str \"Key\")) :<=>\n      (send\n        (lvar :y) :[]\n        (str \"Key\")))) :reject) map ","(send\n  (send\n    (send\n      (send\n        (lvar : data [] [] ) :[]\n        (sym :objects)) :values) :map\n    (block-pass\n      (sym :first))) :sort) reject "," data [] []  [] values map sort "," data [] []  [] values map "," data [] []  [] values "]}," Fog Storage InternetArchive Real get_bucket":{"type":"method","name":"get_bucket","children":[],"call":[" request ","Fog Parsers Storage InternetArchive GetBucket  new "," raise ","ArgumentError  new "]}," Fog Storage InternetArchive Mock delete_object":{"type":"method","name":"delete_object","children":[],"call":[" raise ","Excon Errors  status_error ","response status= ","bucket [] delete ","bucket [] "," data [] [] "," data [] "," data ","Excon Response  new ","Excon Response  new  status= "," data [] []  [] delete "," data [] []  [] "]}," Fog Storage InternetArchive Real delete_object":{"type":"method","name":"delete_object","children":[],"call":[" request ","CGI  escape "]}," Fog Storage InternetArchive Mock delete_object_helper":{"type":"method","name":"delete_object_helper","children":[],"call":["response []= ","bucket [] delete ","bucket [] "]}," Fog Storage InternetArchive Mock delete_multiple_objects":{"type":"method","name":"delete_multiple_objects","children":[],"call":[" raise ","Excon Errors  status_error ","response status= ","response body [] << "," delete_object_helper ","response body [] ","response body ","object_names each ","response body= "," data [] [] "," data [] "," data ","Excon Response  new ","Excon Response  new  status= ","Excon Response  new  body [] << ","Excon Response  new  body [] ","Excon Response  new  body ","Excon Response  new  body= "]}," Fog Storage InternetArchive Real delete_multiple_objects":{"type":"method","name":"delete_multiple_objects","children":[],"call":[" request ","Fog Parsers Storage InternetArchive DeleteMultipleObjects  new ","headers []= ","Base64  encode64 gsub ","Base64  encode64 ","Digest MD5  digest ","data length ","data << ","CGI  escapeHTML ","object_names each ","options delete "]}," Fog Storage InternetArchive Real delete_bucket_website":{"type":"method","name":"delete_bucket_website","children":[],"call":[" request "]}," Fog Storage InternetArchive Real delete_bucket_policy":{"type":"method","name":"delete_bucket_policy","children":[],"call":[" request "]}," Fog Storage InternetArchive Real delete_bucket_lifecycle":{"type":"method","name":"delete_bucket_lifecycle","children":[],"call":[" request "]}," Fog Storage InternetArchive Real delete_bucket_cors":{"type":"method","name":"delete_bucket_cors","children":[],"call":[" request "]}," Fog Storage InternetArchive Mock delete_bucket":{"type":"method","name":"delete_bucket","children":[],"call":["response status= "," data [] delete "," data [] "," data "," raise ","Excon Errors  status_error "," data [] [] [] empty? ! "," data [] [] [] empty? "," data [] [] [] "," data [] [] "," data [] [] nil? ","Excon Response  new ","Excon Response  new  status= "]}," Fog Storage InternetArchive Real delete_bucket":{"type":"method","name":"delete_bucket","children":[],"call":[" request "]}," Fog Storage InternetArchive cors_to_hash":{"type":"method","name":"cors_to_hash","children":[],"call":[]}," Fog Storage InternetArchive hash_to_cors":{"type":"method","name":"hash_to_cors","children":[],"call":[]}," Fog Storage InternetArchive Mock copy_object":{"type":"method","name":"copy_object","children":[],"call":[" raise ","Excon Errors  status_error ","response status= ","response body= ","Time  parse ","target_object [] ","target_bucket [] []= ","target_bucket [] ","target_object merge! ","source_object dup "," data [] [] [] []= "," class acls "," class "," data [] [] [] "," data [] [] "," data [] "," data ","Excon Errors BadRequest  new ","(str \"private\") include? ! ","(str \"private\") include? ","options [] ","source_bucket [] [] first ","source_bucket [] [] ","source_bucket [] ","Excon Response  new ","Excon Response  new  status= ","Excon Response  new  body= ","source_object dup  [] "," data [] []  [] []= "," data [] []  [] ","source_object dup  merge! "," data [] []  [] [] first "," data [] []  [] [] "]}," Fog Storage InternetArchive Real copy_object":{"type":"method","name":"copy_object","children":[],"call":[" request ","CGI  escape ","Fog Parsers Storage InternetArchive CopyObject  new ","(pair\n  (str \"x-amz-copy-source\")\n  (dstr\n    (str \"/\")\n    (begin\n      (lvar :source_bucket_name))\n    (str \"/\")\n    (begin\n      (send\n        (const nil :CGI) :escape\n        (lvar :source_object_name))))) merge! "]}," Fog Storage InternetArchive Real complete_multipart_upload":{"type":"method","name":"complete_multipart_upload","children":[],"call":[" request ","CGI  escape ","Fog Parsers Storage InternetArchive CompleteMultipartUpload  new ","data length ","data << ","index + ","parts each_with_index "]}," Fog Storage InternetArchive acl_to_hash":{"type":"method","name":"acl_to_hash","children":[],"call":[]}," Fog Storage InternetArchive hash_to_acl":{"type":"method","name":"hash_to_acl","children":[],"call":[]}," Fog Storage InternetArchive Real abort_multipart_upload":{"type":"method","name":"abort_multipart_upload","children":[],"call":[" request ","CGI  escape "]}," Fog Parsers Storage InternetArchive ListParts end_element":{"type":"method","name":"end_element","children":[],"call":["@part []= "," value to_i "," value ","@response [] << ","@response [] ","@response []= ","Time  parse "," value == ","@response [] []= "]}," Fog Parsers Storage InternetArchive ListParts reset":{"type":"method","name":"reset","children":[],"call":[]}," Fog Parsers Storage InternetArchive ListMultipartUploads end_element":{"type":"method","name":"end_element","children":[],"call":["@response [] << ","@response [] ","@response []= "," value to_i "," value ","@upload []= "," value == ","Time  parse ","@upload [] []= ","@upload [] "]}," Fog Parsers Storage InternetArchive ListMultipartUploads start_element":{"type":"method","name":"start_element","children":[],"call":[]}," Fog Parsers Storage InternetArchive ListMultipartUploads reset":{"type":"method","name":"reset","children":[],"call":[]}," Fog Parsers Storage InternetArchive InitiateMultipartUpload end_element":{"type":"method","name":"end_element","children":[],"call":["@response []= "," value "]}," Fog Parsers Storage InternetArchive InitiateMultipartUpload reset":{"type":"method","name":"reset","children":[],"call":[]}," Fog Parsers Storage InternetArchive GetService end_element":{"type":"method","name":"end_element","children":[],"call":["@bucket []= "," value ","@response [] []= ","@response [] ","Time  parse ","@response [] << "]}," Fog Parsers Storage InternetArchive GetService reset":{"type":"method","name":"reset","children":[],"call":[]}," Fog Parsers Storage InternetArchive GetRequestPayment end_element":{"type":"method","name":"end_element","children":[],"call":["@response []= "," value "]}," Fog Parsers Storage InternetArchive GetBucketWebsite end_element":{"type":"method","name":"end_element","children":[],"call":["@response [] []= "," value ","@response [] "]}," Fog Parsers Storage InternetArchive GetBucketWebsite reset":{"type":"method","name":"reset","children":[],"call":[]}," Fog Parsers Storage InternetArchive GetBucketLogging end_element":{"type":"method","name":"end_element","children":[],"call":["@grant [] []= "," value ","@grant [] ","@response [] []= ","@response [] ","@grant []= ","@response [] [] [] << ","@response [] [] [] ","@response [] [] "]}," Fog Parsers Storage InternetArchive GetBucketLogging reset":{"type":"method","name":"reset","children":[],"call":[]}," Fog Parsers Storage InternetArchive GetBucketLocation end_element":{"type":"method","name":"end_element","children":[],"call":["@response []= "," value "]}," Fog Parsers Storage InternetArchive GetBucketLifecycle end_element":{"type":"method","name":"end_element","children":[],"call":["@response [] << ","@response [] ","@rule []= "," value == "," value ","@transition []= "," value to_i ","@expiration []= "]}," Fog Parsers Storage InternetArchive GetBucketLifecycle start_element":{"type":"method","name":"start_element","children":[],"call":[]}," Fog Parsers Storage InternetArchive GetBucketLifecycle reset":{"type":"method","name":"reset","children":[],"call":[]}," Fog Parsers Storage InternetArchive GetBucket end_element":{"type":"method","name":"end_element","children":[],"call":["@object []= "," value "," value to_i ","@response []= ","@response [] << ","@response [] ","Time  parse "," value == "," value gsub ","@object [] []= ","@object [] "]}," Fog Parsers Storage InternetArchive GetBucket start_element":{"type":"method","name":"start_element","children":[],"call":[]}," Fog Parsers Storage InternetArchive GetBucket reset":{"type":"method","name":"reset","children":[],"call":[]}," Fog Parsers Storage InternetArchive DeleteMultipleObjects end_element":{"type":"method","name":"end_element","children":[],"call":["@error [] []= "," value ","@error [] ","@deleted [] []= ","@deleted [] ","@response [] << ","@response [] "]}," Fog Parsers Storage InternetArchive DeleteMultipleObjects start_element":{"type":"method","name":"start_element","children":[],"call":[]}," Fog Parsers Storage InternetArchive DeleteMultipleObjects reset":{"type":"method","name":"reset","children":[],"call":[]}," Fog Parsers Storage InternetArchive CorsConfiguration end_element":{"type":"method","name":"end_element","children":[],"call":["(or-asgn\n  (send\n    (ivar :@cors_rule) :[]\n    (lvar :name))\n  (array)) << "," value ","@cors_rule [] ","@cors_rule []= "," value to_i ","@response [] << ","@response [] "]}," Fog Parsers Storage InternetArchive CorsConfiguration start_element":{"type":"method","name":"start_element","children":[],"call":["name == "]}," Fog Parsers Storage InternetArchive CorsConfiguration reset":{"type":"method","name":"reset","children":[],"call":[]}," Fog Parsers Storage InternetArchive CopyObject end_element":{"type":"method","name":"end_element","children":[],"call":["@response []= ","Time  parse "," value "," value gsub "]}," Fog Parsers Storage InternetArchive CompleteMultipartUpload end_element":{"type":"method","name":"end_element","children":[],"call":["@response []= "," value "]}," Fog Parsers Storage InternetArchive CompleteMultipartUpload reset":{"type":"method","name":"reset","children":[],"call":[]}," Fog Parsers Storage InternetArchive AccessControlList end_element":{"type":"method","name":"end_element","children":[],"call":["@grant [] []= "," value ","@grant [] ","@grant []= ","@response [] []= ","@response [] ","@response [] << "]}," Fog Parsers Storage InternetArchive AccessControlList start_element":{"type":"method","name":"start_element","children":[],"call":["name == "]}," Fog Parsers Storage InternetArchive AccessControlList reset":{"type":"method","name":"reset","children":[],"call":[]}," Fog Storage IAAttributes InstanceMethods set_metadata_array_headers":{"type":"method","name":"set_metadata_array_headers","children":[],"call":["options []= ","array_attribute to_s [] ","array_attribute to_s "," format ","i + ","values [] each_with_index ","values [] ","values size > ","values size ","values first ","values size == ","(send\n  (lvar :attr_values) :+\n  (lvar :opt_values)) compact sort uniq ","(send\n  (lvar :attr_values) :+\n  (lvar :opt_values)) compact sort ","(send\n  (lvar :attr_values) :+\n  (lvar :opt_values)) compact ","attr_values + ","options delete ","key to_s =~ ","key to_s ","options map "," Array "," send ","(send\n  (lvar :attr_values) :+\n  (lvar :opt_values)) compact sort uniq  [] each_with_index ","(send\n  (lvar :attr_values) :+\n  (lvar :opt_values)) compact sort uniq  [] ","(send\n  (lvar :attr_values) :+\n  (lvar :opt_values)) compact sort uniq  size > ","(send\n  (lvar :attr_values) :+\n  (lvar :opt_values)) compact sort uniq  size ","(send\n  (lvar :attr_values) :+\n  (lvar :opt_values)) compact sort uniq  first ","(send\n  (lvar :attr_values) :+\n  (lvar :opt_values)) compact sort uniq  size == ","(send\n  (lvar :attr_(send\n  (lvar :attr_values) :+\n  (lvar :opt_values)) compact sort uniq ) :+\n  (lvar :opt_(send\n  (lvar :attr_values) :+\n  (lvar :opt_values)) compact sort uniq )) compact sort uniq ","(send\n  (lvar : Array ) :+\n  (lvar :opt_values)) compact sort uniq ","(send\n  (lvar :attr_(send\n  (lvar :attr_values) :+\n  (lvar :opt_values)) compact sort uniq ) :+\n  (lvar :opt_(send\n  (lvar :attr_values) :+\n  (lvar :opt_values)) compact sort uniq )) compact sort ","(send\n  (lvar : Array ) :+\n  (lvar :opt_values)) compact sort ","(send\n  (lvar :attr_(send\n  (lvar :attr_values) :+\n  (lvar :opt_values)) compact sort uniq ) :+\n  (lvar :opt_(send\n  (lvar :attr_values) :+\n  (lvar :opt_values)) compact sort uniq )) compact ","(send\n  (lvar : Array ) :+\n  (lvar :opt_values)) compact ","attr_(send\n  (lvar :attr_values) :+\n  (lvar :opt_values)) compact sort uniq  + "," Array  + "]}," Fog Storage IAAttributes ClassMethods ia_metadata_attribute":{"type":"method","name":"ia_metadata_attribute","children":[],"call":[" attribute ","name to_s tr ","name to_s ","(str \"amz\") map "]}," Fog Storage InternetArchive Files normalize_headers":{"type":"method","name":"normalize_headers","children":[],"call":["data headers []= ","data get_header gsub ","data get_header ","data headers ","Time  parse "]}," Fog Storage InternetArchive Files new":{"type":"method","name":"new","children":[],"call":["(pair\n  (sym :directory)\n  (send nil :directory)) merge! "," directory "," requires "]}," Fog Storage InternetArchive Files head":{"type":"method","name":"head","children":[],"call":[" new ","data headers merge ","data headers "," normalize_headers "," service head_object "," directory key "," directory "," service "," requires "," service head_object  headers merge "," service head_object  headers "]}," Fog Storage InternetArchive Files get_https_url":{"type":"method","name":"get_https_url","children":[],"call":[" service get_object_https_url "," directory key "," directory "," service "," requires "]}," Fog Storage InternetArchive Files get_http_url":{"type":"method","name":"get_http_url","children":[],"call":[" service get_object_http_url "," directory key "," directory "," service "," requires "]}," Fog Storage InternetArchive Files get_url":{"type":"method","name":"get_url","children":[],"call":[" service get_object_url "," directory key "," directory "," service "," requires "]}," Fog Storage InternetArchive Files get":{"type":"method","name":"get","children":[],"call":[" raise ","Fog Storage InternetArchive NotFound  new "," directory identity "," directory ","error response body ","error response "," new ","data headers merge ","data body ","data headers "," normalize_headers "," service get_object "," directory key "," service "," requires "," service get_object  headers merge "," service get_object  body "," service get_object  headers "]}," Fog Storage InternetArchive Files each":{"type":"method","name":"each","children":[],"call":["subset each_file_this_page ","subset all ","subset last key ","subset last ","subset is_truncated "," dup all "," dup "," block_given? ! "," block_given? ","subset all  each_file_this_page "," dup all  each_file_this_page ","subset all  all "," dup all  all ","subset all  last key "," dup all  last key ","subset all  last "," dup all  last ","subset all  is_truncated "," dup all  is_truncated "]}," Fog Storage InternetArchive Files all":{"type":"method","name":"all","children":[],"call":[" load ","file attributes ","parent files map ","parent files "," merge_attributes ","parent files attributes "," directory collection get "," directory key "," directory "," directory collection ","value to_s empty? ","value to_s ","value nil? ","options reject ","(pair\n  (str \"delimiter\")\n  (send nil :delimiter)) merge! "," prefix "," max_keys "," marker "," delimiter "," requires "," directory collection get  files map "," directory collection get  files "," directory collection get  files attributes ","(pair\n  (str \"delimiter\")\n  (send nil :delimiter)) merge!  reject "]}," Fog Storage InternetArchive File multipart_save":{"type":"method","name":"multipart_save","children":[],"call":[" service complete_multipart_upload "," key "," directory key "," directory "," service "," raise "," service abort_multipart_upload ","part_tags << ","part_upload headers [] ","part_upload headers "," service upload_part ","part_tags size + ","part_tags size ","Base64  encode64 strip ","Base64  encode64 ","Digest MD5  digest "," body read "," multipart_chunk_size "," body "," body rewind "," body respond_to? ","res body [] ","res body "," service initiate_multipart_upload "," service complete_multi service upload_part  "," service abort_multi service upload_part  "," service upload_part  headers [] "," service upload_part  headers "," multipart_ body read _size "," body  service initiate_multipart_upload pond_to? "," service initiate_multipart_upload  body [] "," service initiate_multipart_upload  body "," service initiate_multi service upload_part  "]}," Fog Storage InternetArchive File directory=":{"type":"method","name":"directory=","children":[],"call":[]}," Fog Storage InternetArchive File url":{"type":"method","name":"url","children":[],"call":[" collection get_url "," key "," collection "," requires "]}," Fog Storage InternetArchive File save":{"type":"method","name":"save","children":[],"call":["Fog Storage  get_content_type "," body "," content_type "," content_length= ","Fog Storage  get_body_size "," etag gsub! "," etag "," merge_attributes ","(str \"Content-Length\") include? ","data headers reject ","data headers "," service put_object "," key "," directory key "," directory "," service ","data body "," multipart_save "," body respond_to? "," multipart_chunk_size "," set_metadata_array_headers ","options []= "," size_hint to_i to_s "," size_hint to_i "," size_hint "," queue_derive "," keep_old_version "," interactive_priority "," auto_make_bucket ","options merge! "," metadata "," expires "," content_md5 "," content_encoding "," content_disposition "," cache_control ","Fog Logger  deprecation "," caller first "," caller ","options != "," requires "," service put_object  headers reject "," multipart_save  headers reject "," service put_object  headers "," multipart_save  headers "," service put_object  body "," multipart_save  body "," set_meta service put_object _array_headers "," set_meta multipart_save _array_headers "," meta service put_object  "," meta multipart_save  "]}," Fog Storage InternetArchive File public_url":{"type":"method","name":"public_url","children":[],"call":["(str \"http://\") gsub ","Fog InternetArchive  escape "," key "," directory key "," directory "," requires "]}," Fog Storage InternetArchive File public=":{"type":"method","name":"public=","children":[],"call":[]}," Fog Storage InternetArchive File owner=":{"type":"method","name":"owner=","children":[],"call":[" attributes []= ","new_owner [] "," attributes "]}," Fog Storage InternetArchive File metadata=":{"type":"method","name":"metadata=","children":[],"call":[" merge_attributes "]}," Fog Storage InternetArchive File metadata":{"type":"method","name":"metadata","children":[],"call":["(send\n  (send\n    (lvar :key) :to_s) :=~\n  (regexp\n    (str \"^x-(amz||archive)-meta\")\n    (regopt))) ! ","key to_s =~ ","key to_s "," attributes reject "," attributes "]}," Fog Storage InternetArchive File destroy":{"type":"method","name":"destroy","children":[],"call":[" service delete_object "," key "," directory key "," directory "," service ","options []= "," cascade_delete "," requires "]}," Fog Storage InternetArchive File copy":{"type":"method","name":"copy","children":[],"call":["target_directory files head ","target_directory files "," service directories new "," service directories "," service "," service copy_object "," key "," directory key "," directory "," requires "," service directories new  files head "," service directories new  files "]}," Fog Storage InternetArchive File directory":{"type":"method","name":"directory","children":[],"call":[]}," Fog Storage InternetArchive File body=":{"type":"method","name":"body=","children":[],"call":[" attributes []= "," attributes "]}," Fog Storage InternetArchive File body":{"type":"method","name":"body","children":[],"call":["file body "," collection get "," identity "," collection "," last_modified "," attributes [] "," attributes "," collection get  body "]}," Fog Storage InternetArchive File acl=":{"type":"method","name":"acl=","children":[],"call":[]}," Fog Storage InternetArchive File acl":{"type":"method","name":"acl","children":[],"call":[]}," Fog Storage InternetArchive Directory bucket_location":{"type":"method","name":"bucket_location","children":[],"call":["data body [] ","data body "," service get_bucket_location "," key "," service "," service get_bucket_location  body [] "," service get_bucket_location  body "]}," Fog Storage InternetArchive Directory save":{"type":"method","name":"save","children":[],"call":[" service put_bucket "," key "," service ","options []= "," service region "," service region != "," attributes [] "," attributes "," set_metadata_array_headers "," interactive_priority "," ignore_preexisting_bucket "," requires "]}," Fog Storage InternetArchive Directory public_url":{"type":"method","name":"public_url","children":[],"call":[" key "," requires "]}," Fog Storage InternetArchive Directory public=":{"type":"method","name":"public=","children":[],"call":[]}," Fog Storage InternetArchive Directory payer=":{"type":"method","name":"payer=","children":[],"call":[" service put_request_payment "," key "," service "," requires "]}," Fog Storage InternetArchive Directory payer":{"type":"method","name":"payer","children":[],"call":["data body [] ","data body "," service get_request_payment "," key "," service "," requires "," service get_request_payment  body [] "," service get_request_payment  body "]}," Fog Storage InternetArchive Directory files":{"type":"method","name":"files","children":[],"call":["Fog Storage InternetArchive Files  new "," service "]}," Fog Storage InternetArchive Directory location=":{"type":"method","name":"location=","children":[],"call":[" merge_attributes "," raise ","INVALID_LOCATIONS  join ","INVALID_LOCATIONS  include? "]}," Fog Storage InternetArchive Directory location":{"type":"method","name":"location","children":[],"call":[" service region "," service "," bucket_location "," attributes [] "," attributes "," requires "]}," Fog Storage InternetArchive Directory destroy":{"type":"method","name":"destroy","children":[],"call":["Fog Logger  warning "]}," Fog Storage InternetArchive Directory acl=":{"type":"method","name":"acl=","children":[],"call":[]}," Fog Storage InternetArchive Directory acl":{"type":"method","name":"acl","children":[],"call":[]}," Fog Storage InternetArchive Directories get":{"type":"method","name":"get","children":[],"call":["directory files load ","data [] ","directory files ","directory files merge_attributes ","options []= ","(str \"CommonPrefixes\") include? "," new "," service get_bucket body "," service get_bucket "," service "," remap_attributes "," new  files load "," service get_bucket body  [] "," new  files "," new  files merge_attributes "]}," Fog Storage InternetArchive Directories all":{"type":"method","name":"all","children":[],"call":[" load "," service get_service body [] "," service get_service body "," service get_service "," service "]}," Fog InternetArchive parse_security_group_options":{"type":"method","name":"parse_security_group_options","children":[],"call":[]}," Fog InternetArchive Mock rds_address":{"type":"method","name":"rds_address","children":[],"call":[]}," Fog InternetArchive Mock key_id":{"type":"method","name":"key_id","children":[],"call":[]}," Fog InternetArchive Mock nameservers":{"type":"method","name":"nameservers","children":[],"call":[]}," Fog InternetArchive Mock change_id":{"type":"method","name":"change_id","children":[],"call":[]}," Fog InternetArchive Mock zone_id":{"type":"method","name":"zone_id","children":[],"call":[]}," Fog InternetArchive Mock subnet_id":{"type":"method","name":"subnet_id","children":[],"call":[]}," Fog InternetArchive Mock vpc_id":{"type":"method","name":"vpc_id","children":[],"call":[]}," Fog InternetArchive Mock dhcp_options_id":{"type":"method","name":"dhcp_options_id","children":[],"call":[]}," Fog InternetArchive Mock internet_gateway_id":{"type":"method","name":"internet_gateway_id","children":[],"call":[]}," Fog InternetArchive Mock network_interface_id":{"type":"method","name":"network_interface_id","children":[],"call":[]}," Fog InternetArchive Mock security_group_id":{"type":"method","name":"security_group_id","children":[],"call":[]}," Fog InternetArchive Mock volume_id":{"type":"method","name":"volume_id","children":[],"call":[]}," Fog InternetArchive Mock snapshot_id":{"type":"method","name":"snapshot_id","children":[],"call":[]}," Fog InternetArchive Mock reservation_id":{"type":"method","name":"reservation_id","children":[],"call":[]}," Fog InternetArchive Mock request_id":{"type":"method","name":"request_id","children":[],"call":[]}," Fog InternetArchive Mock ramdisk_id":{"type":"method","name":"ramdisk_id","children":[],"call":[]}," Fog InternetArchive Mock owner_id":{"type":"method","name":"owner_id","children":[],"call":[]}," Fog InternetArchive Mock key_material":{"type":"method","name":"key_material","children":[],"call":[]}," Fog InternetArchive Mock kernel_id":{"type":"method","name":"kernel_id","children":[],"call":[]}," Fog InternetArchive Mock private_ip_address":{"type":"method","name":"private_ip_address","children":[],"call":[]}," Fog InternetArchive Mock ip_address":{"type":"method","name":"ip_address","children":[],"call":[]}," Fog InternetArchive Mock instance_id":{"type":"method","name":"instance_id","children":[],"call":[]}," Fog InternetArchive Mock key_fingerprint":{"type":"method","name":"key_fingerprint","children":[],"call":[]}," Fog InternetArchive Mock image_id":{"type":"method","name":"image_id","children":[],"call":[]}," Fog InternetArchive Mock image":{"type":"method","name":"image","children":[],"call":[]}," Fog InternetArchive Mock private_dns_name_for":{"type":"method","name":"private_dns_name_for","children":[],"call":[]}," Fog InternetArchive Mock dns_name_for":{"type":"method","name":"dns_name_for","children":[],"call":[]}," Fog InternetArchive Mock console_output":{"type":"method","name":"console_output","children":[],"call":[]}," Fog InternetArchive Mock box_usage":{"type":"method","name":"box_usage","children":[],"call":[]}," Fog InternetArchive Mock availability_zone":{"type":"method","name":"availability_zone","children":[],"call":[]}," Fog InternetArchive Mock arn":{"type":"method","name":"arn","children":[],"call":[]}," Fog InternetArchive signed_params":{"type":"method","name":"signed_params","children":[],"call":[]}," Fog InternetArchive escape":{"type":"method","name":"escape","children":[],"call":[]}," Fog InternetArchive indexed_filters":{"type":"method","name":"indexed_filters","children":[],"call":[]}," Fog InternetArchive indexed_request_param":{"type":"method","name":"indexed_request_param","children":[],"call":[]}," Fog InternetArchive serialize_keys":{"type":"method","name":"serialize_keys","children":[],"call":[]}," Fog InternetArchive indexed_param":{"type":"method","name":"indexed_param","children":[],"call":[]}," InternetArchive services":{"type":"method","name":"services","children":[],"call":["Fog InternetArchive  services "]}," InternetArchive []":{"type":"method","name":"[]","children":[],"call":["@@connections [] ","hash []= "," raise ","key inspect ","Fog Storage  new ","Fog Logger  warning ","Hash  new "]}," InternetArchive class_for":{"type":"method","name":"class_for","children":[],"call":[" raise "]}}