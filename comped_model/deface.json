{" Deface Parser ERB whitespace":{"type":"method","name":"whitespace","children":[],"call":["res length == ","res length ","arr flatten first ","arr flatten ","code scan ","arr flatten first  length == ","arr flatten first  length ","code scan  flatten first ","code scan  flatten "]}," Deface Parser ERB add_expr_debug":{"type":"method","name":"add_expr_debug","children":[],"call":[" raise "]}," Deface Parser ERB add_expr_literal":{"type":"method","name":"add_expr_literal","children":[],"call":["src << << << << ","src << << << ","code strip ","src << << ","src << "," whitespace "]}," Deface Parser ERB add_stmt":{"type":"method","name":"add_stmt","children":[],"call":["src << << << << ","src << << << ","code strip ","src << << ","src << "," whitespace "]}," Deface Parser ERB add_text":{"type":"method","name":"add_text","children":[],"call":["src << "]}," Deface Parser ERB add_postamble":{"type":"method","name":"add_postamble","children":[],"call":[]}," Deface Parser ERB add_preamble":{"type":"method","name":"add_preamble","children":[],"call":[]}," Deface Parser ERB escaped_expr":{"type":"method","name":"escaped_expr","children":[],"call":[" raise "]}," Deface Parser ERB compile":{"type":"method","name":"compile","children":[],"call":[]}," Deface Parser convert_fragment":{"type":"method","name":"convert_fragment","children":[],"call":[]}," Deface Parser undo_erb_markup":{"type":"method","name":"undo_erb_markup","children":[],"call":[]}," Deface Override load_template_source":{"type":"method","name":"load_template_source","children":[],"call":["@lookup_context find source ","@lookup_context find ","parts [] ","parts size == ","parts size ","ActionView LookupContext  new ","ActionController Base  view_paths ","virtual_path split ","virtual_path split  [] ","virtual_path split  size == ","virtual_path split  size "]}," Deface Override find":{"type":"method","name":"find","children":[],"call":[]}," Deface Override source":{"type":"method","name":"source","children":[],"call":["Deface Parser ERB  compile ","@args [] ","@args key? "," load_template_source ","Deface Parser  erb_markup! ","haml_engine render ","Deface HamlConverter  new ","Rails  application config deface haml_support ","Rails  application config deface ","Rails  application config ","Rails  application "," raise "," name ","Deface Parser  undo_erb_markup! "," parsed_document css first to_s clone "," parsed_document css first to_s "," parsed_document css first "," parsed_document css "," parsed_document ","range map join ","range map "," class select_range "," class "," class select_endpoints ","copy [] ","copy is_a? "," parsed_document css first remove to_s clone "," parsed_document css first remove to_s "," parsed_document css first remove ","cut [] ","cut is_a? "," source_argument ","source execute ","source to_sym == ","source to_sym ","sources find ","Rails  application config deface sources ","Deface Parser   load_template_source _markup! ","Deface HamlConverter  new  render ","Deface Parser  undo_ load_template_source _markup! "," class select_range  map join "," class select_range  map "," class select_ class select_range  ","@args []  [] ","@args []  is_a? ","source exe@args [] e ","Rails  application config deface sources  find ","Rails  application config deface Rails  application config deface sources  "]}," Deface Override action":{"type":"method","name":"action","children":[],"call":["(send\n  (cvar :@@actions) :&\n  (send\n    (ivar :@args) :keys)) first ","@@actions & ","@args keys ","(send\n  (send\n    (send\n      (self) :class) :actions) :&\n  (send\n    (ivar :@args) :keys)) first "," class actions & "," class actions "," class "]}," Deface Override selector":{"type":"method","name":"selector","children":[],"call":["@args [] "," action "]}," Deface Override initialize":{"type":"method","name":"initialize","children":[],"call":["@@file [] []= ","args [] to_s parameterize ","args [] to_s ","args [] ","@@file [] ","args key? ","@@virtual [] []= ","@@virtual [] ","args [] to_sym ","@@all [] []= ","@@all [] "," raise ","args [] blank? "," action nil? "," action "," class all [] []= "," class all [] "," class all "," class ","@args merge! ","(send\n  (cvar :@@sources) :&\n  (send\n    (ivar :@args) :keys)) include? ","@@sources & ","@args keys ","@args reject! ","(send\n  (cvar :@@sources) :&\n  (send\n    (lvar :args) :keys)) present? ","args keys ","(send\n  (cvar :@@actions) :&\n  (send\n    (ivar :@args) :keys)) include? ","@@actions & ","(send\n  (cvar :@@actions) :&\n  (send\n    (lvar :args) :keys)) present? "," class all [] [] args "," class all [] [] "," class all [] has_key? "," warn ","@@_early << ","Rails  application try try ","Rails  application try ","Rails  application ","Rails  application try deface try ","Rails  application try deface ","Rails  application try respond_to? ","args []= ","content call "," block_given? "," expire_compiled_template ","Rails  application config deface try ","Rails  application config deface ","Rails  application config ","Rails  application try try try ","@args []= "," class current_railtie ","Time  zone now to_f ","Time  zone now ","Time  zone ","@args [] ","(send\n  (send\n    (const\n      (const nil :Deface) :DEFAULT_SOURCES) :map\n    (block-pass\n      (sym :to_sym))) :&\n  (send\n    (ivar :@args) :keys)) include? ","Deface DEFAULT_SOURCES  map & ","Deface DEFAULT_SOURCES  map ","(send\n  (send\n    (const\n      (const nil :Deface) :DEFAULT_SOURCES) :map\n    (block-pass\n      (sym :to_sym))) :&\n  (send\n    (lvar :args) :keys)) present? ","(send\n  (send\n    (send\n      (self) :class) :actions) :&\n  (send\n    (ivar :@args) :keys)) include? "," class actions & "," class actions ","(send\n  (send\n    (send\n      (self) :class) :actions) :&\n  (send\n    (lvar :args) :keys)) present? "," current_railtie underscore "," current_railtie ","args delete ","parts [] ","File  basename "," caller [] split "," caller [] "," caller ","Time  current to_f ","Time  current ","args args [] ? ","args args [] to_sym ? "," class all [] [] args  merge! ","(send\n  (cvar :@@sources) :&\n  (send\n    (ivar :@args) :args [] s)) include? ","(send\n  (cvar :@@sources) :&\n  (send\n    (ivar :@args) :args [] to_sym s)) include? ","(send\n  (cvar :@@sources) :&\n  (send\n    (ivar : class all [] [] args ) :keys)) include? ","@args args [] s ","@args args [] to_sym s "," class all [] [] args  keys "," class all [] [] args  reject! ","(send\n  (cvar :@@sources) :&\n  (send\n    (lvar :args) :args [] s)) present? ","(send\n  (cvar :@@sources) :&\n  (send\n    (lvar :args) :args [] to_sym s)) present? ","args args [] s ","args args [] to_sym s ","(send\n  (cvar :@@actions) :&\n  (send\n    (ivar :@args) :args [] s)) include? ","(send\n  (cvar :@@actions) :&\n  (send\n    (ivar :@args) :args [] to_sym s)) include? ","(send\n  (cvar :@@actions) :&\n  (send\n    (ivar : class all [] [] args ) :keys)) include? ","(send\n  (cvar :@@actions) :&\n  (send\n    (lvar :args) :args [] s)) present? ","(send\n  (cvar :@@actions) :&\n  (send\n    (lvar :args) :args [] to_sym s)) present? "," class all [] has_args [] ? "," class all [] has_args [] to_sym ? "," class all [] [] args  []= "," class all [] [] args  [] ","(send\n  (send\n    (const\n      (const nil :Deface) :DEFAULT_SOURCES) :map\n    (block-pass\n      (sym :to_sym))) :&\n  (send\n    (ivar :@args) :args [] s)) include? ","(send\n  (send\n    (const\n      (const nil :Deface) :DEFAULT_SOURCES) :map\n    (block-pass\n      (sym :to_sym))) :&\n  (send\n    (ivar :@args) :args [] to_sym s)) include? ","(send\n  (send\n    (const\n      (const nil :Deface) :DEFAULT_SOURCES) :map\n    (block-pass\n      (sym :to_sym))) :&\n  (send\n    (ivar : class all [] [] args ) :keys)) include? ","(send\n  (send\n    (const\n      (const nil :Deface) :DEFAULT_SOURCES) :map\n    (block-pass\n      (sym :to_sym))) :&\n  (send\n    (lvar :args) :args [] s)) present? ","(send\n  (send\n    (const\n      (const nil :Deface) :DEFAULT_SOURCES) :map\n    (block-pass\n      (sym :to_sym))) :&\n  (send\n    (lvar :args) :args [] to_sym s)) present? ","(send\n  (send\n    (send\n      (self) :class) :actions) :&\n  (send\n    (ivar :@args) :args [] s)) include? ","(send\n  (send\n    (send\n      (self) :class) :actions) :&\n  (send\n    (ivar :@args) :args [] to_sym s)) include? ","(send\n  (send\n    (send\n      (self) :class) :actions) :&\n  (send\n    (ivar : class all [] [] args ) :keys)) include? ","(send\n  (send\n    (send\n      (self) :class) :actions) :&\n  (send\n    (lvar :args) :args [] s)) present? ","(send\n  (send\n    (send\n      (self) :class) :actions) :&\n  (send\n    (lvar :args) :args [] to_sym s)) present? "," caller [] split  [] "]}," initialize":{"type":"method","name":"initialize","children":[],"call":[" rails_initialize ","Deface Parser  undo_erb_markup ","doc to_s ","match replace ","Deface Parser  convert_fragment ","match to_s << ","override source clone ","override source ","match to_s ","override source clone << ","override action ","doc css each ","doc css ","override selector ","overrides each ","overrides empty? ","Deface Override  find ","details merge ","Deface Parser  undo_erb_markup! ","Deface Override  apply ","Rails  application config deface enabled ","Rails  application config deface ","Rails  application config ","Rails  application "," initialize_without_deface ","processed_source != ","handler to_s == ","handler to_s ","(sym :slim) include? "," should_be_defaced? "," determine_syntax ","source to_param ","properties []= ","Hash  [] ","Deface Parser  convert_fragment  to_s ","override doc to_s  clone ","override Deface Override  apply  clone ","override doc to_s  ","override Deface Override  apply  ","override doc to_s  clone << ","override Deface Override  apply  clone << ","Deface Parser  convert_fragment  css each ","Deface Parser  convert_fragment  css ","Deface Override  find  each ","Deface Override  find  empty? ","processed_doc to_s  != ","processed_Deface Override  apply  != ","Deface Override  apply  != ","source to_param  != "," determine_ determine_syntax  ","doc to_s  to_param ","Deface Override  apply  to_param ","Hash  []  []= "]}," Deface Parser undo_erb_markup!":{"type":"method","name":"undo_erb_markup!","children":[],"call":[]}," Deface Parser erb_markup!":{"type":"method","name":"erb_markup!","children":[],"call":[]}," Deface TemplateHelper load_template_source":{"type":"method","name":"load_template_source","children":[],"call":["@lookup_context find source ","@lookup_context find ","ActionView LookupContext  new ","ActionController Base  view_paths ","parts join ","parts shift ","parts size == ","parts size ","virtual_path split ","prefix << ","Deface Override  apply ","Rails  application config deface enabled= ","Rails  application config deface ","Rails  application config ","Rails  application ","view source ","Deface HamlConverter  new result ","Deface HamlConverter  new ","view handler to_s == ","view handler to_s ","view handler ","@lookup_context disable_cache ","Slim ERBConverter  new call ","Slim ERBConverter  new ","view handler class to_s == ","view handler class to_s ","view handler class ","Deface SlimConverter  new result ","Deface SlimConverter  new ","view instance_variable_get ","Deface ActionViewExtensions  determine_syntax ","Rails  application config deface enabled ","lookup_context find ","lookup_context disable_cache ","Deface Override  apply_overrides ","Deface Override  convert_source ","overrides any? ","Deface Override  find ","@lookup_context find @lookup_context find source  ","@lookup_context find Deface Override  apply  ","@lookup_context find Deface HamlConverter  new result  ","@lookup_context find Deface Override  apply_overrides  ","@lookup_context find Deface Override  convert_source  ","virtual_path split  join ","virtual_path split  shift ","virtual_path split  size == ","virtual_path split  size ","parts shift  << ","view @lookup_context find source  ","view Deface Override  apply  ","view Deface HamlConverter  new result  ","view Deface Override  apply_overrides  ","view Deface Override  convert_source  ","Deface ActionViewExtensions  determine_Deface ActionViewExtensions  determine_syntax  ","Deface Override  apply_Deface Override  find  ","Deface Override  convert_@lookup_context find source  ","Deface Override  convert_Deface Override  apply  ","Deface Override  convert_Deface HamlConverter  new result  ","Deface Override  convert_Deface Override  apply_overrides  ","Deface Override  convert_Deface Override  convert_source  ","Deface Override  find  any? "]}," Deface Parser convert":{"type":"method","name":"convert","children":[],"call":[]}," Deface Override select_range":{"type":"method","name":"select_range","children":[],"call":[]}," Deface Override apply":{"type":"method","name":"apply","children":[],"call":[]}," Deface Override end_selector":{"type":"method","name":"end_selector","children":[],"call":["@args [] "," selector ","@args [] blank? "]}," Deface Override disabled?":{"type":"method","name":"disabled?","children":[],"call":["@args [] ","@args key? "]}," Deface Override source_element":{"type":"method","name":"source_element","children":[],"call":["Deface Parser  convert to_s ","Deface Parser  convert "," source clone "," source "]}," Deface Override name":{"type":"method","name":"name","children":[],"call":["@args [] "]}," Deface TemplateHelper element_source":{"type":"method","name":"element_source","children":[],"call":["result << ","Deface Parser  undo_erb_markup! ","match to_s dup ","match to_s ","doc css inject ","doc css ","Deface Parser  convert ","Deface Parser  convert  css inject ","Deface Parser  convert  css "]}," Deface Override validate_original":{"type":"method","name":"validate_original","children":[],"call":["Rails  logger error "," name ","Rails  logger ","(const nil :Rails) == ","valid ! "," original_source to_s gsub == ","match to_s gsub ","match to_s "," original_source to_s gsub "," original_source to_s "," original_source "," original_source nil? ","(send\n  (const nil :Rails) :logger) == "," original_source to_s gsub ==  ! "]}," Deface Override original_source":{"type":"method","name":"original_source","children":[],"call":["Deface Parser  convert ","@args [] clone ","@args [] ","@args [] present? "]}," Deface Override sequence":{"type":"method","name":"sequence","children":[],"call":["Rails  logger error ","@args [] "," name ","Rails  logger ","@args [] to_i ","@@all [] [] sequence + ","@@all [] [] sequence ","@@all [] [] ","ref_name to_s ","@@all [] ","@@all [] key? ","@args [] [] ","@args [] key? ","@@all [] [] sequence - ","@args [] to_sym ","@args [] is_a? ","@args key? "," class all [] [] sequence + "," class all [] [] sequence "," class all [] [] "," class all [] "," class all "," class "," class all [] key? "," class all [] [] sequence - ","@args [] []  to_s ","@@all [] @args [] to_sym ? ","@args [] @args [] to_sym ? ","@args @args [] to_sym ? "," class all [] @args [] to_sym ? "]}," Deface Override attributes":{"type":"method","name":"attributes","children":[],"call":["@args [] "]}," Deface Override all":{"type":"method","name":"all","children":[],"call":[]}," Deface Overrides early_check":{"type":"method","name":"early_check","children":[],"call":["Deface Override  _early clear ","Deface Override  _early ","Deface Override  new ","Deface Override  _early each "]}," Deface Overrides find":{"type":"method","name":"find","children":[],"call":["Deface Override  find "]}," Deface Overrides initialize":{"type":"method","name":"initialize","children":[],"call":[]}," Deface Environment initialize":{"type":"method","name":"initialize","children":[],"call":["Overrides  new "," register_source ","Deface DEFAULT_SOURCES  each "," register_action ","Deface DEFAULT_ACTIONS  each "]}," Deface Railtie activate":{"type":"method","name":"activate","children":[],"call":[]}," Deface Overrides enumerate_and_load":{"type":"method","name":"enumerate_and_load","children":[],"call":[" load "," require ","Rails  application config cache_classes ","Rails  application config ","Rails  application ","Dir  glob ","root join ","paths each ","Deface DSL Loader  load ","Rails  application config watchable_dirs []= ","root join to_s ","Rails  application config watchable_dirs ","Rails  version [] == ","Rails  version [] ","Rails  version ","Rails  version [] >= "]}," Deface Overrides load_all":{"type":"method","name":"load_all","children":[],"call":[" enumerate_and_load ","railtie root ","railtie paths [] ","railtie paths ","railtie respond_to? ","app railties all each ","app railties all ","app railties ","app root ","app paths [] ","app paths ","app config deface overrides all clear ","app config deface overrides all ","app config deface overrides ","app config deface ","app config "," load_overrides ","app railties all dup push each ","app railties all dup push ","app railties all dup ","Deface DSL Loader  register ","railties dup push each ","railties dup push ","railties dup ","app railties _all ","Rails  version >= ","Rails  version ","app railties _all dup push each ","app railties _all dup push ","app railties _all dup ","app app railties all  all each ","app app railties _all  all each ","app app railties all  all ","app app railties _all  all ","app app railties all  ","app app railties _all  ","app app railties all  all dup push each ","app app railties _all  all dup push each ","app app railties all  all dup push ","app app railties _all  all dup push ","app app railties all  all dup ","app app railties _all  all dup ","app railties all  dup push each ","app railties _all  dup push each ","app railties all  dup push ","app railties _all  dup push ","app railties all  dup ","app railties _all  dup ","app app railties all  _all ","app app railties _all  _all ","app app railties all  _all dup push each ","app app railties _all  _all dup push each ","app app railties all  _all dup push ","app app railties _all  _all dup push ","app app railties all  _all dup ","app app railties _all  _all dup "]}," Deface Search ClassMethods find":{"type":"method","name":"find","children":[],"call":["result flatten compact sort_by ","result flatten compact ","result flatten ","result << "," all [] try "," all [] ","virtual_path to_sym "," all ","virtual_path gsub! ","(regexp\n  (str \"^/\")\n  (regopt)) each ","virtual_path nil? ","details [] ","details empty? "," all empty? ","details [] dup ","details []  to_sym ","details [] dup  to_sym ","details []  gsub! ","details [] dup  gsub! ","details []  nil? ","details [] dup  nil? "]}," Deface Override expire_compiled_template":{"type":"method","name":"expire_compiled_template","children":[],"call":["ActionView CompiledTemplates  send ","compiled_method_name =~ "," class digest ","@args [] "," class ","name =~ "," args [] gsub "," args [] "," args ","ActionView CompiledTemplates  instance_methods detect ","ActionView CompiledTemplates  instance_methods ","ActionView Base  send ","ActionView Base  instance_methods detect ","ActionView Base  instance_methods ","ActionDispatch DebugView  send ","ActionDispatch DebugView  instance_methods detect ","ActionDispatch DebugView  instance_methods ","Rails  version < ","Rails  version ","Gem  loaded_specs [] version < ","Gem Version  new ","Gem  loaded_specs [] version ","Gem  loaded_specs [] ","Gem  loaded_specs ","Deface  template_class send ","Deface  template_class ","method_name !~ ","virtual_path gsub ","Deface  template_class instance_methods detect ","Deface  template_class instance_methods "," args []  gsub "]}," Deface Override digest":{"type":"method","name":"digest","children":[],"call":["Digest MD5  new update hexdigest ","Digest MD5  new update ","@args to_s ","Digest MD5  new ","@args keys map sort concat join ","@args keys map sort concat ","@args values map sort ","@args values map ","@args values ","@args keys map sort ","@args keys map ","@args keys ","Deface Digest  hexdigest "]}," Deface OriginalValidator validate_original":{"type":"method","name":"validate_original","children":[],"call":["Rails  logger info "," name ","Rails  logger ","Rails  logger error ","valid ! "," original_source to_s gsub == ","match to_s gsub ","match to_s "," original_source to_s gsub "," original_source to_s "," original_source ","@args [] == ","@args [] ","@args [] present? ","Digest SHA1  hexdigest ","match map join ","match map ","match is_a? "," Digest SHA1  hexdigest "," original_source to_s gsub ==  ! ","@args [] ==  ! ","match map join  to_s gsub ","match map join  to_s ","match map join  map join ","match map join  map ","match map join  is_a? "]}," Deface OriginalValidator original_source":{"type":"method","name":"original_source","children":[],"call":["Deface Parser  convert ","@args [] clone ","@args [] ","@args [] present? "]}," Deface HamlConverter deface_attributes":{"type":"method","name":"deface_attributes","children":[],"call":["(send\n  (lvar :attrs) :map) join ","a join ","attrs map ","a []= ","a [] ","a [] gsub ","a [] [] != ","a [] [] ","attrs map! ","a split map ","a split ","attrs join include? ","attrs join ","attrs split ","attrs gsub! ","attrs nil? ","attrs << ","key [] == ","key [] ","key gsub ","value [] != ","value [] ","attributes each ","attributes []= ","key to_s ","scanner scan ","scanner eos? ","StringScanner  new ","(send\n  (lvar :attrs split ) :map) join ","attrs split  map ","attrs split  map! ","attrs split  join include? ","attrs split  join ","attrs split  split ","attrs split  gsub! ","attrs split  nil? ","attrs split  << ","scanner scan  [] == ","scanner scan  [] ","scanner scan  gsub ","scanner scan  [] != ","scanner scan  to_s ","StringScanner  new  scan ","StringScanner  new  eos? "]}," Deface HamlConverter parse_new_attributes":{"type":"method","name":"parse_new_attributes","children":[],"call":["attributes []= "," deface_attributes ","attributes [] "]}," Deface HamlConverter parse_old_attributes":{"type":"method","name":"parse_old_attributes","children":[],"call":[" deface_attributes "]}," Deface HamlConverter push_silent":{"type":"method","name":"push_silent","children":[],"call":[" push_text ","text strip "]}," Deface HamlConverter push_script":{"type":"method","name":"push_script","children":[],"call":[" push_silent "," block_given? "," push_text ","text strip "]}," Deface HamlConverter result":{"type":"method","name":"result","children":[],"call":["Deface Parser  undo_erb_markup! ","String  new "," render "]}," Deface Applicator ClassMethods set_attributes":{"type":"method","name":"set_attributes","children":[],"call":[]}," Deface Applicator ClassMethods normalize_attribute_name":{"type":"method","name":"normalize_attribute_name","children":[],"call":["name gsub! ","name to_s gsub ","name to_s ","name to_s gsub  gsub! ","name to_s gsub  to_s gsub ","name to_s gsub  to_s "]}," Deface Applicator ClassMethods select_range":{"type":"method","name":"select_range","children":[],"call":[" select_range ","first next ","first == "]}," Deface Applicator ClassMethods apply":{"type":"method","name":"apply","children":[],"call":["Deface Parser  undo_erb_markup! ","doc to_s ","details []= ","Time  now ","Rails  logger info ","override end_selector ","override name ","Rails  logger ","override selector ","starting nil? ","starting after ","override source_element ","elements [] map ","elements [] ","elements map ","starting before ","override action "," select_range ","doc css first ","doc css ","starting parent css first ","starting parent css ","starting parent ","match set_attribute ","match attributes [] value gsub strip ","match attributes [] value gsub ","value to_s ","match attributes [] value ","match attributes [] ","match attributes ","match attributes key? "," normalize_attribute_name ","override attributes each ","override attributes ","match attributes [] value << ","match remove_attribute ","match children after ","match children ","match children= ","match children size == ","match children size ","match children before ","match after ","match before ","match add_child ","match children remove ","original replace ","override action == ","match replace ","match clone ","new_source css first ","new_source css ","override source_element clone ","override validate_original ","matches each ","Rails  logger send ","matches size ","matches size == ","override end_selector blank? ","override disabled? ","overrides each ","Deface Parser  convert ","Deface HamlConverter  new result ","Deface HamlConverter  new ","overrides empty? ","details [] ","overrides size ","overrides size > "," find ","start after ","element clone ","elements [] each ","elements [] clone "," select_endpoints "," raise ","(sym :remove) include? ","override parsed_document= ","override execute_action ","override failure= ","matches empty? ","Rails  logger error ","override selector match ","override matcher matches ","override matcher ","Rails  logger debug ","Slim ERBConverter  new call ","Slim ERBConverter  new ","Deface SlimConverter  new result ","Deface SlimConverter  new ","source to_param ","Rails  gem_version < ","Gem Version  new ","Rails  gem_version ","Deface  before_rails_6? "," apply_overrides "," convert_source ","Deface Parser  convert  to_s ","override  normalize_attribute_name  ","doc css first  nil? ","elements [] clone ing nil? ","doc css first  after ","elements [] clone ing after ","override doc to_s _element ","override Deface HamlConverter  new result _element ","override Slim ERBConverter  new call _element ","override Deface SlimConverter  new result _element ","override source_element clone  "," select_range  [] map ","element clone s [] map "," select_range  [] ","element clone s [] "," select_range  map ","element clone s map ","doc css first  before ","elements [] clone ing before ","Deface Parser  convert  css first ","Deface Parser  convert  css ","doc css first  parent css first ","elements [] clone ing parent css first ","doc css first  parent css ","elements [] clone ing parent css ","doc css first  parent ","elements [] clone ing parent "," normalize_attribute_ normalize_attribute_name  ","new_source css first  replace ","new_doc to_s  css first ","new_Deface HamlConverter  new result  css first ","new_Slim ERBConverter  new call  css first ","new_Deface SlimConverter  new result  css first ","override source_element clone  css first ","new_doc to_s  css ","new_Deface HamlConverter  new result  css ","new_Slim ERBConverter  new call  css ","new_Deface SlimConverter  new result  css ","override source_element clone  css ","override doc to_s _element clone ","override Deface HamlConverter  new result _element clone ","override Slim ERBConverter  new call _element clone ","override Deface SlimConverter  new result _element clone ","override source_element clone  clone ","override validate_new_source css first  ","doc css  each ","override matcher matches  each ","doc css  size ","override matcher matches  size ","doc css  size == ","override matcher matches  size == "," find  each "," find  empty? "," find  size "," find  size > ","elements [] clone  after ","element clone  clone "," select_range  [] each ","element clone s [] each "," select_range  [] clone ","element clone s [] clone ","override parsed_Deface Parser  convert ument= ","doc css  empty? ","override matcher matches  empty? ","override matcher doc css  ","override matcher override matcher matches  ","doc to_s  to_param ","Deface HamlConverter  new result  to_param ","Slim ERBConverter  new call  to_param ","Deface SlimConverter  new result  to_param "," apply_ find  "," convert_doc to_s  "," convert_Deface HamlConverter  new result  "," convert_Slim ERBConverter  new call  "," convert_Deface SlimConverter  new result  "]}," method_name":{"type":"method","name":"method_name","children":[],"call":[" method_name_without_deface ","Deface Override  digest ","Digest MD5  new update hexdigest ","Digest MD5  new update ","Digest MD5  new ","Deface Digest  hexdigest "]}," render":{"type":"method","name":"render","children":[],"call":[" render_without_deface "," refresh source "," refresh ","view respond_to? ! ","view respond_to? "," method_name ","mod instance_methods map include? ! ","mod instance_methods map include? ","mod instance_methods map ","mod instance_methods ","view singleton_class ","view is_a? ","Rails  version >= ","Rails  version ","Rails  version < ","Gem  loaded_specs [] version >= ","Gem Version  new ","Gem  loaded_specs [] version ","Gem  loaded_specs [] ","Gem  loaded_specs ","Gem  loaded_specs [] version < ","view singleton_class  instance_methods map include? ! ","view singleton_class  instance_methods map include? ","view singleton_class  instance_methods map ","view singleton_class  instance_methods "]}," Deface Search ClassMethods find_using":{"type":"method","name":"find_using","children":[],"call":["(send\n  (send\n    (self) :all) :map) flatten ","override args [] == ","override args [] ","override source_argument ","override args ","(sym :template) include? ","overrides_by_name values select ","overrides_by_name values "," all map "," all "]}," Deface Override touch":{"type":"method","name":"touch","children":[],"call":["@args []= ","Time  zone now to_f ","Time  zone now ","Time  zone "]}," Deface Override source_argument":{"type":"method","name":"source_argument","children":[],"call":["@args key? ","@@sources detect ","(send\n  (const\n    (const nil :Deface) :DEFAULT_SOURCES) :detect) try ","source to_sym ","Deface DEFAULT_SOURCES  detect "]}," Deface Override railtie":{"type":"method","name":"railtie","children":[],"call":["@args [] "]}," Deface Overrides load_overrides":{"type":"method","name":"load_overrides","children":[],"call":[" enumerate_and_load ","railtie root ","railtie paths [] ","railtie paths ","railtie respond_to? ","Override  current_railtie= ","railtie class to_s ","railtie class ","railtie railtie paths []  [] ","railtie railtie paths []  "]}," Deface DSL Loader determine_virtual_path":{"type":"method","name":"determine_virtual_path","children":[],"call":[]}," Deface DSL Loader file_in_dir_below_overrides?":{"type":"method","name":"file_in_dir_below_overrides?","children":[],"call":[]}," Deface DSL Loader starts_with_haml_comment?":{"type":"method","name":"starts_with_haml_comment?","children":[],"call":[]}," Deface DSL Loader starts_with_html_comment?":{"type":"method","name":"starts_with_html_comment?","children":[],"call":[]}," Deface DSL Loader extract_dsl_commands_from_haml":{"type":"method","name":"extract_dsl_commands_from_haml","children":[],"call":[]}," Deface DSL Loader extract_dsl_commands_from_erb":{"type":"method","name":"extract_dsl_commands_from_erb","children":[],"call":[]}," Deface DSL Loader register":{"type":"method","name":"register","children":[],"call":[]}," Deface DSL Loader load":{"type":"method","name":"load","children":[],"call":[]}," Deface DSL Context disabled":{"type":"method","name":"disabled","children":[],"call":["@options []= "]}," Deface DSL Context enabled":{"type":"method","name":"enabled","children":[],"call":["@options []= "]}," Deface DSL Context attributes":{"type":"method","name":"attributes","children":[],"call":["@options []= "]}," Deface DSL Context sequence":{"type":"method","name":"sequence","children":[],"call":["@options []= "]}," Deface DSL Context closing_selector":{"type":"method","name":"closing_selector","children":[],"call":["@options []= "]}," Deface DSL Context original":{"type":"method","name":"original","children":[],"call":["@options []= "]}," Deface DSL Context virtual_path":{"type":"method","name":"virtual_path","children":[],"call":[]}," Deface DSL Context create_override":{"type":"method","name":"create_override","children":[],"call":["Deface Override  new ","(pair\n  (sym :name)\n  (ivar :@name)) merge merge merge ","(pair\n  (sym :name)\n  (ivar :@name)) merge merge ","(pair\n  (sym :name)\n  (ivar :@name)) merge "]}," Deface DSL Context initialize":{"type":"method","name":"initialize","children":[],"call":[]}," Deface Applicator ClassMethods select_endpoints":{"type":"method","name":"select_endpoints","children":[],"call":["doc css first ","doc css ","starting parent css first ","starting parent css ","starting parent ","doc css first  parent css first ","doc css first  parent css ","doc css first  parent "]}," Deface Override railtie_class":{"type":"method","name":"railtie_class","children":[],"call":["@args [] "]}," Deface Generators OverrideGenerator copy_template":{"type":"method","name":"copy_template","children":[],"call":[" copy_file "," name "," view "," options [] "," options "]}," Deface Utils FailureFinder output_results_by_virtual_path":{"type":"method","name":"output_results_by_virtual_path","children":[],"call":[" puts ","(str \" '\") red ","override failure ","override name ","(str \" '\") green ","override failure nil? ","fails each ","fails count ","count [] count ","count [] ","count key? ","o failure nil? ! ","o failure nil? ","o failure ","fails group_by ","fails nil? "," overrides_by_virtual_path "," Rainbow red "," Rainbow "," Rainbow green "," overrides_by_virtual_path  each "," overrides_by_virtual_path  count "," overrides_by_virtual_path  group_by "," overrides_by_virtual_path  nil? "]}," Deface Utils FailureFinder overrides_by_virtual_path":{"type":"method","name":"overrides_by_virtual_path","children":[],"call":["Deface Override  find "," puts ","e message "," load_template_source dup "," load_template_source "]}," Deface Sources Text execute":{"type":"method","name":"execute","children":[],"call":[]}," Deface Sources Template execute":{"type":"method","name":"execute","children":[],"call":[]}," Deface Sources Source to_sym":{"type":"method","name":"to_sym","children":[],"call":[" to_s demodulize underscore to_sym "," to_s demodulize underscore "," to_s demodulize "," to_s "]}," Deface Sources Slim execute":{"type":"method","name":"execute","children":[],"call":[]}," Deface Sources Partial execute":{"type":"method","name":"execute","children":[],"call":[]}," Deface Sources Haml execute":{"type":"method","name":"execute","children":[],"call":[]}," Deface Sources Erb execute":{"type":"method","name":"execute","children":[],"call":[]}," Deface Sources Cut execute":{"type":"method","name":"execute","children":[],"call":[]}," Deface Sources Copy execute":{"type":"method","name":"execute","children":[],"call":[]}," Deface Precompiler precompile":{"type":"method","name":"precompile","children":[],"call":[]}," Deface Override actions":{"type":"method","name":"actions","children":[],"call":[]}," Deface Override safe_source_element":{"type":"method","name":"safe_source_element","children":[],"call":[" source_element "," source_argument "]}," Deface Matchers Range select_range":{"type":"method","name":"select_range","children":[],"call":[" select_range ","first next ","first == "]}," Deface Matchers Range select_endpoints":{"type":"method","name":"select_endpoints","children":[],"call":["doc css first ","doc css ","starting parent css first ","starting parent css ","starting parent ","doc css first  parent css first ","doc css first  parent css ","doc css first  parent "]}," Deface Matchers Range matches":{"type":"method","name":"matches","children":[],"call":["Rails  logger info ","Rails  logger ","starting nil? "," select_range "," select_endpoints "]}," Deface Matchers Range initialize":{"type":"method","name":"initialize","children":[],"call":[]}," Deface Matchers Element matches":{"type":"method","name":"matches","children":[],"call":["document css map ","document css "]}," Deface Matchers Element initialize":{"type":"method","name":"initialize","children":[],"call":[]}," Deface HamlConverter initialize":{"type":"method","name":"initialize","children":[],"call":["options []= "]}," Deface HamlParserMethods deface_attributes":{"type":"method","name":"deface_attributes","children":[],"call":["attrs join ","attrs << ","key [] == ","key [] ","key gsub ","value [] != ","value [] ","attributes each ","attributes []= ","key to_s ","scanner scan ","scanner eos? ","StringScanner  new ","attrs gsub! ","attrs nil? ","attrs scan count > ","attrs scan count ","attrs scan ","scanner scan  [] == ","scanner scan  [] ","scanner scan  gsub ","scanner scan  [] != ","scanner scan  to_s ","StringScanner  new  scan ","StringScanner  new  eos? "]}," Deface HamlParserMethods parse_new_attributes":{"type":"method","name":"parse_new_attributes","children":[],"call":["attributes []= "," deface_attributes ","attributes [] "]}," Deface HamlParserMethods parse_old_attributes":{"type":"method","name":"parse_old_attributes","children":[],"call":[" deface_attributes "]}," Deface HamlCompilerMethods push_silent":{"type":"method","name":"push_silent","children":[],"call":[" push_text ","text strip "]}," Deface HamlCompilerMethods push_script":{"type":"method","name":"push_script","children":[],"call":[" push_silent "," block_given? "," push_text ","text strip "]}," Deface Environment sources":{"type":"method","name":"sources","children":[],"call":["@sources dup "]}," Deface Environment register_source":{"type":"method","name":"register_source","children":[],"call":["Deface DSL Context  define_source_method ","source to_sym ","@sources << "]}," Deface Environment actions":{"type":"method","name":"actions","children":[],"call":["@actions dup "]}," Deface Environment register_action":{"type":"method","name":"register_action","children":[],"call":["Deface DSL Context  define_action_method ","action to_sym ","@actions << "]}," Deface DSL Context namespaced":{"type":"method","name":"namespaced","children":[],"call":["@options []= "]}," Deface DSL Context define_source_method":{"type":"method","name":"define_source_method","children":[],"call":[]}," Deface DSL Context define_action_method":{"type":"method","name":"define_action_method","children":[],"call":[]}," Deface Applicator matcher":{"type":"method","name":"matcher","children":[],"call":["Deface Matchers Range  new "," end_selector "," selector "," name "," raise "," action "," compatible_with_end_selector? ","Deface Matchers Element  new "," end_selector blank? "]}," Deface Applicator compatible_with_end_selector?":{"type":"method","name":"compatible_with_end_selector?","children":[],"call":[" create_action_command range_compatible? "," create_action_command "]}," Deface Applicator create_action_command":{"type":"method","name":"create_action_command","children":[],"call":["command new "," attributes "," safe_source_element "," raise "," action ","command to_sym == ","command to_sym ","commands find ","Rails  application config deface actions ","Rails  application config deface ","Rails  application config ","Rails  application ","Rails  application config deface actions  find "]}," Deface Applicator execute_action_on_range":{"type":"method","name":"execute_action_on_range","children":[],"call":[" create_action_command execute_on_range "," create_action_command "]}," Deface Applicator execute_action":{"type":"method","name":"execute_action","children":[],"call":[" create_action_command execute "," create_action_command "," validate_original "]}," Deface Actions SurroundContents range_compatible?":{"type":"method","name":"range_compatible?","children":[],"call":[]}," Deface Actions SurroundContents execute":{"type":"method","name":"execute","children":[],"call":["target_range [] map ","target_range [] ","target_range first after "," source_element ","target_range first ","start after ","element clone ","target_range [] each ","placeholder replace ","target_range [] clone "," original_placeholders each "," original_placeholders ","target_element add_child ","target_element children remove ","target_element children ","target_element clone children ","target_element clone ","target_range length == ","target_range length "," source_element clone  ","target_range [] clone  after ","element clone  clone ","target_element clone  add_child ","target_range first  add_child ","target_element clone  children remove ","target_range first  children remove ","target_element clone  children ","target_range first  children ","target_element clone  clone children ","target_range first  clone children ","target_element clone  clone ","target_range first  clone "]}," Deface Actions SurroundAction original_placeholders":{"type":"method","name":"original_placeholders","children":[],"call":[" raise ","@original_placeholders first "," source_element css "," source_element "]}," Deface Actions SurroundAction source_element":{"type":"method","name":"source_element","children":[],"call":[" clone "]}," Deface Actions Surround range_compatible?":{"type":"method","name":"range_compatible?","children":[],"call":[]}," Deface Actions Surround execute":{"type":"method","name":"execute","children":[],"call":["target_range map ","target_range first before "," source_element ","target_range first ","start after ","element clone ","target_range [] each ","target_range [] ","placeholder replace ","target_range [] clone "," original_placeholders each "," original_placeholders "," source_element clone  ","target_range [] clone  after ","element clone  clone "]}," Deface Actions SetAttributes execute_for_attribute":{"type":"method","name":"execute_for_attribute","children":[],"call":["target_element set_attribute ","value to_s ","target_element remove_attribute "]}," Deface Actions ReplaceContents range_compatible?":{"type":"method","name":"range_compatible?","children":[],"call":[]}," Deface Actions ReplaceContents execute":{"type":"method","name":"execute","children":[],"call":["target_range first after "," source_element ","target_range first ","target_range [] map ","target_range [] ","target_range first add_child ","target_range first children remove ","target_range first children ","target_range length == ","target_range length "]}," Deface Actions Replace range_compatible?":{"type":"method","name":"range_compatible?","children":[],"call":[]}," Deface Actions Replace execute":{"type":"method","name":"execute","children":[],"call":["target_range map ","target_range first before "," source_element ","target_range first "]}," Deface Actions RemoveFromAttributes execute_for_attribute":{"type":"method","name":"execute_for_attribute","children":[],"call":["target_element set_attribute ","target_element attributes [] value gsub strip ","target_element attributes [] value gsub ","value to_s ","target_element attributes [] value ","target_element attributes [] ","target_element attributes ","target_element attributes key? "]}," Deface Actions Remove range_compatible?":{"type":"method","name":"range_compatible?","children":[],"call":[]}," Deface Actions Remove execute":{"type":"method","name":"execute","children":[],"call":["target_range map "]}," Deface Actions InsertTop execute":{"type":"method","name":"execute","children":[],"call":["target_element children before "," source_element ","target_element children ","target_element children= ","target_element children size == ","target_element children size ","target_element first ","target_element first  children before ","target_element first  children ","target_element first  children= ","target_element first  children size == ","target_element first  children size ","target_element first  first "]}," Deface Actions InsertBottom execute":{"type":"method","name":"execute","children":[],"call":["target_element children after "," source_element ","target_element children ","target_element children= ","target_element children size == ","target_element children size ","target_element first ","target_element first  children after ","target_element first  children ","target_element first  children= ","target_element first  children size == ","target_element first  children size ","target_element first  first "]}," Deface Actions InsertBefore execute":{"type":"method","name":"execute","children":[],"call":["target_element first before "," source_element ","target_element first "]}," Deface Actions InsertAfter execute":{"type":"method","name":"execute","children":[],"call":["target_element first after "," source_element ","target_element first "]}," Deface Actions ElementAction initialize":{"type":"method","name":"initialize","children":[],"call":[" raise ","options [] "]}," Deface Actions AttributeAction normalize_attribute_name":{"type":"method","name":"normalize_attribute_name","children":[],"call":["name gsub! ","name to_s gsub ","name to_s ","name to_s gsub  gsub! ","name to_s gsub  to_s gsub ","name to_s gsub  to_s "]}," Deface Actions AttributeAction execute":{"type":"method","name":"execute","children":[],"call":[" execute_for_attribute "," normalize_attribute_name "," attributes each "," attributes ","target_element first ","target_element first  first "]}," Deface Actions AttributeAction initialize":{"type":"method","name":"initialize","children":[],"call":[" raise ","options [] "]}," Deface Actions AddToAttributes execute_for_attribute":{"type":"method","name":"execute_for_attribute","children":[],"call":["target_element set_attribute ","value to_s ","target_element attributes [] value << ","target_element attributes [] value ","target_element attributes [] ","target_element attributes ","target_element attributes key? "]}," Deface Actions Action range_compatible?":{"type":"method","name":"range_compatible?","children":[],"call":[]}," Deface Actions Action to_sym":{"type":"method","name":"to_sym","children":[],"call":[" to_s demodulize underscore to_sym "," to_s demodulize underscore "," to_s demodulize "," to_s "]}," Deface Actions Action initialize":{"type":"method","name":"initialize","children":[],"call":[]}," determine_syntax":{"type":"method","name":"determine_syntax","children":[],"call":["handler class to_s demodulize == ","handler class to_s demodulize ","handler class to_s ","handler class ","handler to_s demodulize == ","handler to_s demodulize ","handler to_s ","handler class to_s == ","handler to_s == "]}," should_be_defaced?":{"type":"method","name":"should_be_defaced?","children":[],"call":["syntax != ","handler to_s == ","handler to_s ","handler class to_s demodulize == ","handler class to_s demodulize ","handler class to_s ","handler class ","handler to_s demodulize == ","handler to_s demodulize "]}," Deface SlimConverter result":{"type":"method","name":"result","children":[],"call":[" Slim ERBConverter  new call gsub "," Slim ERBConverter  new call "," Slim ERBConverter  new ","conv call gsub ","conv call "," generic_converter "," rails_converter "," generic_converter  call gsub "," rails_converter  call gsub "," generic_converter  call "," rails_converter  call "," generic_ generic_converter erter "," generic_ rails_converter erter "," rails_ generic_converter erter "," rails_ rails_converter erter "]}," Deface SlimConverter initialize":{"type":"method","name":"initialize","children":[],"call":[]}," Deface DSL Loader build_other_context":{"type":"method","name":"build_other_context","children":[],"call":[]}," Deface DSL Loader build_context_and_extract_dsl_from":{"type":"method","name":"build_context_and_extract_dsl_from","children":[],"call":[]}," Deface DSL Loader build_slim_context":{"type":"method","name":"build_slim_context","children":[],"call":[]}," Deface DSL Loader build_haml_context":{"type":"method","name":"build_haml_context","children":[],"call":[]}," Deface DSL Loader build_erb_context":{"type":"method","name":"build_erb_context","children":[],"call":[]}," Deface DSL Loader build_context_method_name":{"type":"method","name":"build_context_method_name","children":[],"call":[]}," Deface DSL Loader build_context":{"type":"method","name":"build_context","children":[],"call":[]}," Deface SlimConverter slim_erb_converter":{"type":"method","name":"slim_erb_converter","children":[],"call":[]}," Deface SlimConverter generic_converter":{"type":"method","name":"generic_converter","children":[],"call":[" slim_erb_converter new "," slim_erb_converter "]}," Deface SlimConverter rails_converter":{"type":"method","name":"rails_converter","children":[],"call":[" slim_erb_converter new ","Temple OptionMap  new ","Slim RailsTemplate  options to_h except ","Slim RailsTemplate  options to_h ","Slim RailsTemplate  options "," slim_erb_converter "]}," Deface Digest hexdigest":{"type":"method","name":"hexdigest","children":[],"call":["@digest_class hexdigest truncate ","@digest_class hexdigest "," new hexdigest "," new "," digest_class hexdigest [] "," digest_class hexdigest "," digest_class "]}," Deface Digest initialize":{"type":"method","name":"initialize","children":[],"call":[" class digest_class "," class "]}," Deface Digest digest_class=":{"type":"method","name":"digest_class=","children":[],"call":[]}," Deface Digest digest_class":{"type":"method","name":"digest_class","children":[],"call":[]}," Deface Railtie tweak_eager_loading":{"type":"method","name":"tweak_eager_loading","children":[],"call":["autoloader ignore ","Rails  autoloaders each ","Rails  autoloaders ","Rails  configuration autoloader == ","Rails  configuration autoloader ","Rails  configuration ","Rails  version >= ","Rails  version ","railtie config eager_load_paths= ","path in? ","railtie config eager_load_paths reject ","railtie config eager_load_paths ","railtie config ","path to_s =~ ","path to_s ","railtie config eager_load_paths select ","Rails  configuration respond_to? "]}," Deface template_class":{"type":"method","name":"template_class","children":[],"call":[]}," Deface before_rails_6?":{"type":"method","name":"before_rails_6?","children":[],"call":[]}," ActionViewExtensions ErubiHandlerFix initialize":{"type":"method","name":"initialize","children":[],"call":["properties []= "]}," ActionViewExtensions DefacedTemplate method_name":{"type":"method","name":"method_name","children":[],"call":["Deface Digest  hexdigest ","Deface Override  digest "]}," ActionViewExtensions DefacedTemplate render":{"type":"method","name":"render","children":[],"call":[" refresh source "," refresh ","mod instance_methods include? ! ","mod instance_methods include? "," method_name to_sym "," method_name ","mod instance_methods ","view singleton_class ","Deface  template_class ","view is_a? ","buffer nil? "," respond_to? ","view singleton_class  instance_methods include? ! ","Deface  template_class  instance_methods include? ! ","view singleton_class  instance_methods include? ","Deface  template_class  instance_methods include? ","view singleton_class  instance_methods ","Deface  template_class  instance_methods "]}," ActionViewExtensions DefacedTemplate initialize":{"type":"method","name":"initialize","children":[],"call":["source to_param ","processed_source != ","(sym :slim) include? ","Deface Override  apply ","Deface ActionViewExtensions  determine_syntax ","source to_param  != ","Deface Override  apply  != ","Deface ActionViewExtensions  determine_Deface ActionViewExtensions  determine_syntax  "]}," ActionViewExtensions determine_syntax":{"type":"method","name":"determine_syntax","children":[],"call":[]}," Deface gem_version":{"type":"method","name":"gem_version","children":[],"call":["Gem Version  new "]}," Deface TemplateHelper lookup_context":{"type":"method","name":"lookup_context","children":[],"call":[]}," ActionViewExtensions DefacedTemplate compile!":{"type":"method","name":"compile!","children":[],"call":["@deface_hash != ","@deface_hash nil? ","Deface Override  digest ","@compile_mutex synchronize ","Rails  application config deface enabled ","Rails  application config deface ","Rails  application config ","Rails  application "]}," ActionViewExtensions DefacedTemplate encode!":{"type":"method","name":"encode!","children":[],"call":["source replace ","Deface Override  apply ","Deface ActionViewExtensions  determine_syntax ","Deface  before_rails_6? ","Rails  application config deface enabled ","Rails  application config deface ","Rails  application config ","Rails  application ","@source replace ","Deface Override  apply_overrides ","Deface Override  convert_source ","Time  now ","overrides any? ","Deface Override  find ","Deface ActionViewExtensions  determine_Deface ActionViewExtensions  determine_syntax  ","Deface Override  apply_Deface Override  find  ","Deface Override  find  any? "]}," Deface Applicator ClassMethods convert_source":{"type":"method","name":"convert_source","children":[],"call":[" raise ","Deface SlimConverter  new result ","Deface SlimConverter  new ","source to_s ","Deface HamlConverter  new result ","Deface HamlConverter  new "]}," Deface Applicator ClassMethods apply_overrides":{"type":"method","name":"apply_overrides","children":[],"call":["Deface Parser  undo_erb_markup! ","doc to_s ","override execute_action ","matches each ","override failure= ","override selector ","override action ","matches empty? ","Rails  logger error ","override name ","Rails  logger ","override selector match ","Rails  logger send ","matches size ","matches size == ","override matcher matches ","override matcher ","override parsed_document= ","Rails  logger debug ","override disabled? ","overrides each ","Deface Parser  convert ","Deface Parser  convert  to_s ","override matcher matches  each ","override matcher matches  empty? ","override matcher matches  size ","override matcher matches  size == ","override matcher override matcher matches  ","override parsed_Deface Parser  convert ument= "]}}