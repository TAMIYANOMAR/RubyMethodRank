{" BetterErrors Middleware call":{"type":"method","name":"call","children":[],"call":["error_page render ","@handler new ","@app call "," app_call "," internal_call ","env [] =~ ","env [] "," show_error_page "," better_errors_call "," local_request? "," allow_ip? ","@handler new  render "," show_@handler new  "]}," BetterErrors Middleware initialize":{"type":"method","name":"initialize","children":[],"call":[]}," BetterErrors ErrorPage highlighted_code_block":{"type":"method","name":"highlighted_code_block","children":[],"call":["html << ","html << << << << ","html << << << ","html << << "," sprintf ","min_line + + ","min_line + ","min_line + + == ","frame line ","highlighted_code each_line each_with_index ","highlighted_code each_line "," tap ","CodeRay  scan div ","CodeRay  scan "," code_extract "," coderay_scanner_for_ext "," file_extension ","frame filename ","CodeFormatter  new html ","CodeFormatter  new ","CodeRay  scan div  each_line each_with_index ","CodeRay  scan div  each_line "," code_ file_extension ract "," coderay_ coderay_scanner_for_ext _for_ext "," coderay_scanner_for_ file_extension  "," file_ file_extension ension "]}," BetterErrors ErrorPage code_extract":{"type":"method","name":"code_extract","children":[],"call":["lines [] join ","lines [] ","(send\n  (send\n    (lvar :frame) :line) :+\n  (lvar :lines_of_context)) min - ","(send\n  (send\n    (lvar :frame) :line) :+\n  (lvar :lines_of_context)) min ","lines count + ","lines count ","frame line + ","frame line ","(int 1) max - ","(int 1) max ","frame line - ","File  readlines ","frame filename "," raise ","min_line > ","lines length ","File  readlines  [] join ","File  readlines  [] ","(send\n  (send\n    (lvar :frame) :line) :+\n  (lvar :File  readlines _of_context)) min - ","(send\n  (send\n    (lvar :frame) :line) :+\n  (lvar :File  readlines _of_context)) min ","File  readlines  count + ","File  readlines  count ","File  readFile  readlines  ","(int 1) max -  > ","File  readlines  length "]}," BetterErrors ErrorPage file_extension":{"type":"method","name":"file_extension","children":[],"call":["filename split last ","filename split "]}," BetterErrors ErrorPage coderay_scanner_for_ext":{"type":"method","name":"coderay_scanner_for_ext","children":[],"call":[]}," BetterErrors ErrorPage backtrace_frames":{"type":"method","name":"backtrace_frames","children":[],"call":["ErrorFrame  from_exception "," exception ","StackFrame  from_exception "," exception backtrace "]}," BetterErrors ErrorPage request_path":{"type":"method","name":"request_path","children":[],"call":[" env [] "," env "]}," BetterErrors ErrorPage real_exception":{"type":"method","name":"real_exception","children":[],"call":["exception original_exception "," loop ","exception respond_to? ","exception original_exception is_a? ","exception original_exception  original_exception original_exception  ","exception original_exception  respond_to? ","exception original_exception  original_exception original_exception  is_a? "]}," BetterErrors ErrorPage render":{"type":"method","name":"render","children":[],"call":[" class template result "," binding "," class template "," class "," binding eval "," class template src "," raise ","e backtrace unshift "," class template_path ","e backtrace "]}," BetterErrors ErrorPage initialize":{"type":"method","name":"initialize","children":[],"call":[" real_exception ","Time  now to_f ","Time  now ","RaisedException  new "]}," BetterErrors ErrorPage template":{"type":"method","name":"template","children":[],"call":[]}," BetterErrors ErrorPage template_path":{"type":"method","name":"template_path","children":[],"call":[]}," BetterErrors ErrorFrame starts_with?":{"type":"method","name":"starts_with?","children":[],"call":["haystack [] == ","haystack [] ","needle length "]}," BetterErrors ErrorFrame instance_variables":{"type":"method","name":"instance_variables","children":[],"call":["Hash  [] "," frame_binding eval ","x to_s "," frame_binding "," frame_binding eval map "]}," BetterErrors ErrorFrame local_variables":{"type":"method","name":"local_variables","children":[],"call":["Hash  [] "," frame_binding eval ","x to_s "," frame_binding "," frame_binding eval map ","hash []= ","name to_s "," frame_binding eval each_with_object "]}," BetterErrors ErrorFrame pretty_path":{"type":"method","name":"pretty_path","children":[],"call":[" filename "," gem_path "," application_path "," context "]}," BetterErrors ErrorFrame context":{"type":"method","name":"context","children":[],"call":[" gem? "," application? "]}," BetterErrors ErrorFrame gem_path":{"type":"method","name":"gem_path","children":[],"call":[" filename gsub "," filename "," starts_with? ","Gem  path each ","Gem  path "]}," BetterErrors ErrorFrame gem?":{"type":"method","name":"gem?","children":[],"call":[" starts_with? "," filename ","Gem  path any? ","Gem  path "]}," BetterErrors ErrorFrame application_path":{"type":"method","name":"application_path","children":[],"call":[" filename [] ","BetterErrors  application_root length + ","BetterErrors  application_root length ","BetterErrors  application_root "," filename "]}," BetterErrors ErrorFrame application?":{"type":"method","name":"application?","children":[],"call":[" starts_with? ","BetterErrors  application_root "," filename "]}," BetterErrors ErrorFrame initialize":{"type":"method","name":"initialize","children":[],"call":[" set_pretty_method_name "]}," BetterErrors ErrorFrame from_exception":{"type":"method","name":"from_exception","children":[],"call":[]}," BetterErrors ErrorFrame set_pretty_method_name":{"type":"method","name":"set_pretty_method_name","children":[],"call":["recv class ","recv is_a? "," frame_binding eval "," frame_binding "," name =~ "," name "," frame_binding eval  class "," frame_binding eval  is_a? "]}," BetterErrors Middleware internal_call":{"type":"method","name":"internal_call","children":[],"call":["JSON  dump ","@error_page send ","JSON  parse ","env [] read ","env [] ","opts [] ","opts [] to_i != ","@error_page object_id ","opts [] to_i ","env [] rewind ","opts [] != ","@error_page id "," not_acceptable_json_response ","request content_type == ","request content_type "," invalid_csrf_token_json_response ","request cookies [] == ","body [] ","request cookies [] ","request cookies ","request body read ","request body ","request body rewind ","Rack Request  new "," invalid_error_json_response ","id != "," no_errors_json_response "," not_found_json_response ","(str \"variables\") include? "," not_acceptable_json_@error_page send  ","Rack Request  new  content_type == ","Rack Request  new  content_type "," invalid_csrf_token_json_@error_page send  ","Rack Request  new  cookies [] == ","JSON  parse  [] ","Rack Request  new  cookies [] ","Rack Request  new  cookies ","request JSON  parse  read ","Rack Request  new  body read ","request JSON  parse  ","Rack Request  new  body ","request JSON  parse  rewind ","Rack Request  new  body rewind "," invalid_error_json_@error_page send  "," no_errors_json_@error_page send  "," not_found_json_@error_page send  "]}," BetterErrors Middleware app_call":{"type":"method","name":"app_call","children":[],"call":["@error_page render ","@handler new ","@app call "," log_exception "," show_error_page ","@handler new  render "]}," BetterErrors ErrorPage do_eval":{"type":"method","name":"do_eval","children":[],"call":["response merge ","CodeRay  scan div ","CodeRay  scan ","opts [] ","e class name ","e class ","e inspect ","result inspect "," backtrace_frames [] frame_binding eval "," backtrace_frames [] frame_binding "," backtrace_frames [] "," backtrace_frames ","opts [] to_i ","binding eval ","(or-asgn\n  (send\n    (ivar :@repls) :[]\n    (lvar :index))\n  (send\n    (send\n      (const nil :REPL) :provider) :new\n    (lvar :binding))) send_input ","REPL  provider new ","REPL  provider ","@repls [] "," eval_and_respond "," exception "," backtrace_frames [] frame_binding eval  inspect ","binding eval  inspect "," backtrace_frames [] frame_ backtrace_frames [] frame_binding  eval "," backtrace_frames [] frame_ backtrace_frames [] frame_binding  "," backtrace_frames [] frame_binding  eval ","(or-asgn\n  (send\n    (ivar :@repls) :[]\n    (lvar :opts [] to_i ))\n  (send\n    (send\n      (const nil :REPL) :provider) :new\n    (lvar :binding))) send_input ","(or-asgn\n  (send\n    (ivar :@repls) :[]\n    (lvar :index))\n  (send\n    (send\n      (const nil :REPL) :provider) :new\n    (lvar : backtrace_frames [] frame_binding ))) send_input "]}," BetterErrors ErrorPage do_variables":{"type":"method","name":"do_variables","children":[],"call":[" render "," backtrace_frames [] "," backtrace_frames ","opts [] to_i ","opts [] ","Time  now to_f ","Time  now "," class render_template "," class ","VariableInfo  new "," rack_session "," rails_params "," editor_url "," backtrace_ backtrace_frames [] s [] "," backtrace_ backtrace_frames [] s "]}," BetterErrors Middleware log_exception":{"type":"method","name":"log_exception","children":[],"call":["BetterErrors  logger fatal ","BetterErrors  logger ","message << ","@error_page backtrace_frames each ","@error_page backtrace_frames ","@error_page exception message ","@error_page exception ","@error_page exception class ","@error_page exception type ","(send\n  (send nil :backtrace_frames) :map) join "," backtrace_frames map "," backtrace_frames ","@error_page exception_message ","@error_page exception_type "]}," BetterErrors ErrorFrame to_s":{"type":"method","name":"to_s","children":[],"call":[" name "," line "," pretty_path "]}," BetterErrors StackFrame starts_with?":{"type":"method","name":"starts_with?","children":[],"call":["haystack [] == ","haystack [] ","needle length "]}," BetterErrors StackFrame set_pretty_method_name":{"type":"method","name":"set_pretty_method_name","children":[],"call":["recv class ","recv is_a? "," frame_binding eval "," frame_binding "," name =~ "," name ","Kernel  instance_method bind call ","Kernel  instance_method bind ","Kernel  instance_method ","RUBY_VERSION  < ","Module  === "," frame_binding eval  class "," frame_binding eval  is_a? ","Kernel  instance_ frame_binding eval  bind call ","Kernel  instance_ frame_binding eval  bind ","Kernel  instance_ frame_binding eval  "]}," BetterErrors StackFrame to_s":{"type":"method","name":"to_s","children":[],"call":[" name "," line "," pretty_path "]}," BetterErrors StackFrame instance_variables":{"type":"method","name":"instance_variables","children":[],"call":["Hash  [] "," frame_binding eval ","x to_s "," frame_binding "," frame_binding eval map "," visible_instance_variables map "," visible_instance_variables "]}," BetterErrors StackFrame local_variables":{"type":"method","name":"local_variables","children":[],"call":["hash []= "," frame_binding eval ","name to_s "," frame_binding "," frame_binding eval each_with_object "," frame_binding local_variable_get "," local_variable ","name == ","lv each_with_object "," frame_binding eval  each_with_object "]}," BetterErrors StackFrame pretty_path":{"type":"method","name":"pretty_path","children":[],"call":[" filename "," gem_path "," application_path "," context "]}," BetterErrors StackFrame context":{"type":"method","name":"context","children":[],"call":[" gem? "," application? "]}," BetterErrors StackFrame gem_path":{"type":"method","name":"gem_path","children":[],"call":[" filename gsub "," filename "," starts_with? ","Gem  path each ","Gem  path "," filename index == "," filename index "," filename sub split "," filename sub ","Gem  path detect "]}," BetterErrors StackFrame gem?":{"type":"method","name":"gem?","children":[],"call":[" starts_with? "," filename ","Gem  path any? ","Gem  path "," filename index == "," filename index "]}," BetterErrors StackFrame application_path":{"type":"method","name":"application_path","children":[],"call":[" filename [] ","BetterErrors  application_root length + ","BetterErrors  application_root length ","BetterErrors  application_root "," filename "]}," BetterErrors StackFrame application?":{"type":"method","name":"application?","children":[],"call":[" starts_with? "," filename ","BetterErrors  application_root "," filename index == "," filename index "," filename index != ","BetterErrors  application_BetterErrors  application_root  "]}," BetterErrors StackFrame initialize":{"type":"method","name":"initialize","children":[],"call":[" set_pretty_method_name "]}," BetterErrors StackFrame from_exception":{"type":"method","name":"from_exception","children":[],"call":[]}," BetterErrors REPL test_provider":{"type":"method","name":"test_provider","children":[],"call":[]}," BetterErrors REPL detect":{"type":"method","name":"detect","children":[],"call":[]}," BetterErrors REPL provider":{"type":"method","name":"provider","children":[],"call":[]}," BetterErrors REPL Pry send_input":{"type":"method","name":"send_input","children":[],"call":[" Pry  config color= "," Pry  config ","@output read_buffer ","@fiber resume "," Pry  config color "," local "," prompt "]}," BetterErrors REPL Pry pry_indent":{"type":"method","name":"pry_indent","children":[],"call":["@pry instance_variable_get "]}," BetterErrors REPL Pry initialize":{"type":"method","name":"initialize","children":[],"call":["@fiber resume ","@pry hooks add_hook ","@pry hooks ","@pry hooks clear_all "," Pry  new ","Output  new ","Input  new ","@pry repl ","Fiber  new ","BetterErrors REPL Pry Output  new ","BetterErrors REPL Pry Input  new "," store_last_exception "," Pry  new  hooks add_hook "," Pry  new  hooks "," Pry  new  hooks clear_all "," Pry  new  repl "]}," BetterErrors REPL Pry Output read_buffer":{"type":"method","name":"read_buffer","children":[],"call":[]}," BetterErrors REPL Pry Output tty?":{"type":"method","name":"tty?","children":[],"call":[]}," BetterErrors REPL Pry Output puts":{"type":"method","name":"puts","children":[],"call":["@buffer << ","arg chomp ","args each "]}," BetterErrors REPL Pry Output initialize":{"type":"method","name":"initialize","children":[],"call":[]}," BetterErrors REPL Pry Input readline":{"type":"method","name":"readline","children":[],"call":["Fiber  yield "]}," BetterErrors REPL Basic execute":{"type":"method","name":"execute","children":[],"call":["e class to_s ","e class ","e inspect ","@binding eval inspect ","@binding eval "]}," BetterErrors REPL Basic send_input":{"type":"method","name":"send_input","children":[],"call":[" execute "]}," BetterErrors REPL Basic initialize":{"type":"method","name":"initialize","children":[],"call":[]}," BetterErrors Middleware show_error_page":{"type":"method","name":"show_error_page","children":[],"call":["@error_page render ","<h1>No errors</h1><p>No errors have been recorded yet.</p><hr> + "," no_errors_page "," text? ","ActionDispatch ExceptionWrapper  new status_code ","ActionDispatch ExceptionWrapper  new ","response finish ","response set_cookie ","request cookies [] ","request cookies ","Rack Response  new ","(str \"default-src 'none'\") join ","BetterErrors  editor scheme ","BetterErrors  editor ","@error_page render_main ","@error_page render_text ","SecureRandom  base64 ","SecureRandom  uuid ","Rack Request  new ","ActionDispatch ExceptionWrapper  new ActionDispatch ExceptionWrapper  new status_code  ","Rack Response  new  finish ","Rack Response  new  set_cookie ","Rack Request  new  cookies [] ","Rack Request  new  cookies "]}," Exception __better_errors_bindings_stack":{"type":"method","name":"__better_errors_bindings_stack","children":[],"call":[]}," BetterErrors CodeFormatter line_range":{"type":"method","name":"line_range","children":[],"call":["(send\n  (send nil :line) :+\n  (send nil :context)) min "," source_lines count "," source_lines "," line + "," context "," line ","(send\n  (send nil :line) :-\n  (send nil :context)) max "," line - ","(send\n  (send nil :line) :+\n  (send nil :context)) (send\n  (send nil :line) :-\n  (send nil :context)) max  ","(send\n  (send nil :line) :-\n  (send nil :context)) (send\n  (send nil :line) :+\n  (send nil :context)) min  "]}," BetterErrors CodeFormatter source_lines":{"type":"method","name":"source_lines","children":[],"call":["File  readlines "," filename "," source lines "," source "]}," BetterErrors CodeFormatter context_lines":{"type":"method","name":"context_lines","children":[],"call":[" raise "," source_lines [] ","range end - ","range end ","range begin - ","range begin "," source_lines "," line_range "," line_range  end - "," line_range  end "," line_range  begin - "," line_range  begin "," line_ line_range  "]}," BetterErrors CodeFormatter highlighted_lines":{"type":"method","name":"highlighted_lines","children":[],"call":["CodeRay  scan div lines ","CodeRay  scan div ","CodeRay  scan "," coderay_scanner "," context_lines join "," context_lines "]}," BetterErrors CodeFormatter formatted_lines":{"type":"method","name":"formatted_lines","children":[],"call":[" sprintf ","current_line == "," line "," line_range zip map "," line_range zip "," highlighted_lines "," line_range "]}," BetterErrors CodeFormatter coderay_scanner":{"type":"method","name":"coderay_scanner","children":[],"call":["FILE_TYPES  [] ","File  extname "," filename ","File  File  extname name "]}," BetterErrors CodeFormatter source_unavailable":{"type":"method","name":"source_unavailable","children":[],"call":[]}," BetterErrors CodeFormatter html":{"type":"method","name":"html","children":[],"call":[" source_unavailable "," formatted_lines join "," formatted_lines "]}," BetterErrors CodeFormatter initialize":{"type":"method","name":"initialize","children":[],"call":[]}," BetterErrors REPL provider=":{"type":"method","name":"provider=","children":[],"call":[]}," BetterErrors ErrorPage exception_message":{"type":"method","name":"exception_message","children":[],"call":[" exception message "," exception "," exception message =~ "," exception is_a? "," exception message strip gsub "," exception message strip "," exception message lstrip "]}," BetterErrors StackFrame method_name":{"type":"method","name":"method_name","children":[],"call":[]}," BetterErrors StackFrame class_name":{"type":"method","name":"class_name","children":[],"call":[]}," BetterErrors editor=":{"type":"method","name":"editor=","children":[],"call":[]}," BetterErrors editor":{"type":"method","name":"editor","children":[],"call":[]}," BetterErrors REPL Pry local":{"type":"method","name":"local","children":[],"call":["obj send ","old_attrs each ","old_attrs []= ","attrs each "]}," BetterErrors ErrorPage inspect_value":{"type":"method","name":"inspect_value","children":[],"call":["CGI  escapeHTML ","obj inspect ","e class to_s ","e class "," inspect_raw_value ","obj class name ","obj class ","InspectableValue  new to_html ","InspectableValue  new ","BetterErrors  ignored_classes include? ","BetterErrors  ignored_classes "]}," BetterErrors ErrorPage uri_prefix":{"type":"method","name":"uri_prefix","children":[],"call":[" env [] "," env "]}," BetterErrors ErrorPage rails_params":{"type":"method","name":"rails_params","children":[],"call":[" env [] "," env "]}," BetterErrors ErrorPage rack_session":{"type":"method","name":"rack_session","children":[],"call":[" env [] "," env "]}," BetterErrors ErrorPage editor_url":{"type":"method","name":"editor_url","children":[],"call":["BetterErrors  editor [] ","frame line ","frame filename ","BetterErrors  editor ","BetterErrors  editor url "]}," BetterErrors DisableLoggingMiddleware call":{"type":"method","name":"call","children":[],"call":["BetterErrors  logger level= ","BetterErrors  logger ","@app call ","env [] index == ","env [] index ","env [] ","BetterErrors  logger level "]}," BetterErrors DisableLoggingMiddleware initialize":{"type":"method","name":"initialize","children":[],"call":[]}," BetterErrors use_pry!":{"type":"method","name":"use_pry!","children":[],"call":[]}," BetterErrors Middleware no_errors_page":{"type":"method","name":"no_errors_page","children":[],"call":["<h1>No errors</h1><p>No errors have been recorded yet.</p><hr> + "]}," BetterErrors Middleware text?":{"type":"method","name":"text?","children":[],"call":["env [] to_s include? ! ","env [] to_s include? ","env [] to_s ","env [] ","env [] == "]}," BetterErrors Middleware protected_app_call":{"type":"method","name":"protected_app_call","children":[],"call":[" show_error_page "," log_exception ","@handler new ","@app call "]}," BetterErrors Middleware better_errors_call":{"type":"method","name":"better_errors_call","children":[],"call":[" protected_app_call "," show_error_page "," internal_call ","env [] ","$~ [] "]}," BetterErrors Middleware local_request?":{"type":"method","name":"local_request?","children":[],"call":["IPV6_LOCAL  include? ","IPV4_LOCAL  include? ","IPAddr  new ","env [] "]}," BetterErrors ErrorPage text_heading":{"type":"method","name":"text_heading","children":[],"call":["str + + ","char * ","str size ","str + "]}," BetterErrors ErrorPage text_formatted_code_block":{"type":"method","name":"text_formatted_code_block","children":[],"call":["CodeFormatter Text  new output ","CodeFormatter Text  new ","frame line ","frame filename "]}," BetterErrors ErrorPage html_formatted_code_block":{"type":"method","name":"html_formatted_code_block","children":[],"call":["CodeFormatter HTML  new output ","CodeFormatter HTML  new ","frame line ","frame filename "]}," BetterErrors ErrorPage first_frame":{"type":"method","name":"first_frame","children":[],"call":[" backtrace_frames first "," backtrace_frames ","frame context == ","frame context "," backtrace_frames detect "," application_frames first "," application_frames "]}," BetterErrors ErrorPage application_frames":{"type":"method","name":"application_frames","children":[],"call":["frame context == ","frame context "," backtrace_frames select "," backtrace_frames "]}," BetterErrors CodeFormatter each_line_of":{"type":"method","name":"each_line_of","children":[],"call":["current_line == "," line "," line_range zip map "," line_range zip "," line_range "]}," BetterErrors CodeFormatter formatted_code":{"type":"method","name":"formatted_code","children":[],"call":[" formatted_lines join "," formatted_lines "]}," BetterErrors CodeFormatter output":{"type":"method","name":"output","children":[],"call":[" source_unavailable "," formatted_code "]}," BetterErrors Text formatted_lines":{"type":"method","name":"formatted_lines","children":[],"call":[" sprintf "," each_line_of "," context_lines "]}," BetterErrors Text source_unavailable":{"type":"method","name":"source_unavailable","children":[],"call":[]}," BetterErrors HTML formatted_code":{"type":"method","name":"formatted_code","children":[],"call":[" formatted_nums join "," formatted_nums "]}," BetterErrors HTML formatted_lines":{"type":"method","name":"formatted_lines","children":[],"call":[" sprintf "," each_line_of "," highlighted_lines "]}," BetterErrors HTML source_unavailable":{"type":"method","name":"source_unavailable","children":[],"call":[]}," BetterErrors Railtie app":{"type":"method","name":"app","children":[],"call":["Rails  application "]}," BetterErrors Railtie use_better_errors?":{"type":"method","name":"use_better_errors?","children":[],"call":[" app config consider_all_requests_local "," app config "," app ","Rails  env production? ! ","Rails  env production? ","Rails  env "]}," BetterErrors Railtie insert_middleware":{"type":"method","name":"insert_middleware","children":[],"call":[" app middleware use "," app middleware "," app "," app middleware insert_after "]}," BetterErrors Middleware allow_ip?":{"type":"method","name":"allow_ip?","children":[],"call":["subnet include? ","ALLOWED_IPS  any? ","IPAddr  new ","env [] ","env [] split first ","env [] split ","env [] strip empty? ! ","env [] strip empty? ","env [] strip ","request ip split first ","request ip split ","request ip ","request ip strip empty? ! ","request ip strip empty? ","request ip strip ","Rack Request  new ","env [] strIPAddr  new  empty? ! ","env [] strIPAddr  new  empty? ","env [] strIPAddr  new  ","request IPAddr  new  split first ","Rack Request  new  ip split first ","request IPAddr  new  split ","Rack Request  new  ip split ","request IPAddr  new  ","Rack Request  new  ip ","request IPAddr  new  strIPAddr  new  empty? ! ","Rack Request  new  ip strip empty? ! ","request IPAddr  new  strIPAddr  new  empty? ","Rack Request  new  ip strip empty? ","request IPAddr  new  strIPAddr  new  ","Rack Request  new  ip strip "]}," BetterErrors Middleware allow_ip!":{"type":"method","name":"allow_ip!","children":[],"call":[]}," BetterErrors StackFrame visible_instance_variables":{"type":"method","name":"visible_instance_variables","children":[],"call":[" frame_binding eval - ","BetterErrors  ignored_instance_variables "," frame_binding eval "," frame_binding ","iv - "," frame_binding eval  - "]}," BetterErrors default_editor":{"type":"method","name":"default_editor","children":[],"call":[]}," BetterErrors StackFrame has_binding_stack?":{"type":"method","name":"has_binding_stack?","children":[],"call":[]}," BetterErrors StackFrame syntax_error?":{"type":"method","name":"syntax_error?","children":[],"call":[]}," BetterErrors StackFrame syntax_error_classes":{"type":"method","name":"syntax_error_classes","children":[],"call":[]}," BetterErrors REPL Pry prompt":{"type":"method","name":"prompt","children":[],"call":["indent indent_level ","indent indent_level empty? ! ","indent indent_level empty? ","@pry instance_variable_get ","@pry instance_variable_get  @pry instance_variable_get _level ","@pry instance_variable_get  @pry instance_variable_get _level empty? ! ","@pry instance_variable_get  @pry instance_variable_get _level empty? "]}," BetterErrors HTML formatted_nums":{"type":"method","name":"formatted_nums","children":[],"call":[" sprintf "," each_line_of "," highlighted_lines "]}," BetterErrors RaisedException massage_syntax_error":{"type":"method","name":"massage_syntax_error","children":[],"call":[" backtrace unshift ","StackFrame  new ","2 to_i "," backtrace "," exception message "," exception "," exception backtrace first "," exception backtrace "," exception class to_s "," exception class "," exception line_number to_i "," exception line_number "," exception file_name "," exception respond_to? "]}," BetterErrors RaisedException setup_backtrace_from_backtrace":{"type":"method","name":"setup_backtrace_from_backtrace","children":[],"call":["(send\n  (begin\n    (or\n      (send\n        (send nil :exception) :backtrace)\n      (array))) :map) compact ","StackFrame  new ","line to_i ","(or\n  (send\n    (send nil :exception) :backtrace)\n  (array)) map "," exception backtrace "," exception "]}," BetterErrors RaisedException setup_backtrace_from_bindings":{"type":"method","name":"setup_backtrace_from_bindings","children":[],"call":["StackFrame  new ","binding frame_description ","binding eval "," exception __better_errors_bindings_stack map "," exception __better_errors_bindings_stack "," exception ","binding source_location [] ","binding source_location ","binding respond_to? "]}," BetterErrors RaisedException setup_backtrace":{"type":"method","name":"setup_backtrace","children":[],"call":[" setup_backtrace_from_backtrace "," setup_backtrace_from_bindings "," has_bindings? "]}," BetterErrors RaisedException has_bindings?":{"type":"method","name":"has_bindings?","children":[],"call":[" exception __better_errors_bindings_stack any? "," exception __better_errors_bindings_stack "," exception "," exception respond_to? "]}," BetterErrors RaisedException type":{"type":"method","name":"type","children":[],"call":[" exception class "," exception "]}," BetterErrors RaisedException initialize":{"type":"method","name":"initialize","children":[],"call":[" massage_syntax_error "," setup_backtrace ","exception message ","exception original_exception ","exception respond_to? "," setup_hint ","exception cause ","exception class name == ","exception class name ","exception class ","exception original_exception  message ","exception cause  message ","exception original_exception  original_exception original_exception  ","exception cause  original_exception cause  ","exception original_exception  respond_to? ","exception cause  respond_to? ","exception original_exception  cause ","exception cause  cause ","exception original_exception  class name == ","exception cause  class name == ","exception original_exception  class name ","exception cause  class name ","exception original_exception  class ","exception cause  class "]}," BetterErrors ExceptionExtension __better_errors_bindings_stack":{"type":"method","name":"__better_errors_bindings_stack","children":[],"call":[]}," BetterErrors ExceptionExtension set_backtrace":{"type":"method","name":"set_backtrace","children":[],"call":[" Kernel  binding callers drop "," Kernel  binding callers "," Kernel  binding ","loc path == ","loc path "," caller_locations none? "," caller_locations "]}," BetterErrors ErrorPage id":{"type":"method","name":"id","children":[],"call":["SecureRandom  hex "]}," BetterErrors StackFrame eval_local_variable":{"type":"method","name":"eval_local_variable","children":[],"call":[" frame_binding eval ","name to_s "," frame_binding "]}," BetterErrors StackFrame get_local_variable":{"type":"method","name":"get_local_variable","children":[],"call":[" frame_binding local_variable_get "," frame_binding "]}," BetterErrors StackFrame local_variable":{"type":"method","name":"local_variable","children":[],"call":["ex message ","ex class "," eval_local_variable "," get_local_variable "]}," BetterErrors REPL Pry store_last_exception":{"type":"method","name":"store_last_exception","children":[],"call":["@pry instance_variable_set "," Pry LastException  new ","exception exception "]}," BetterErrors REPL Pry Output print":{"type":"method","name":"print","children":[],"call":["@buffer << ","args join "]}," BetterErrors RaisedException setup_hint":{"type":"method","name":"setup_hint","children":[],"call":["ExceptionHint  new hint ","ExceptionHint  new "," exception "]}," BetterErrors Middleware not_acceptable_json_response":{"type":"method","name":"not_acceptable_json_response","children":[],"call":["JSON  dump "]}," BetterErrors Middleware not_found_json_response":{"type":"method","name":"not_found_json_response","children":[],"call":["JSON  dump "]}," BetterErrors Middleware invalid_csrf_token_json_response":{"type":"method","name":"invalid_csrf_token_json_response","children":[],"call":["JSON  dump ","The browser session might have been cleared,  + "]}," BetterErrors Middleware invalid_error_json_response":{"type":"method","name":"invalid_error_json_response","children":[],"call":["JSON  dump ","This page was likely opened from a previous exception,  + "]}," BetterErrors Middleware no_errors_json_response":{"type":"method","name":"no_errors_json_response","children":[],"call":["JSON  dump ","The application has been restarted since this page loaded,  + ","The shotgun gem causes everything to be reloaded for every request.  + ","Hanami is likely running with code-reloading enabled, which is the default.  + ","Middleman reloads all dependencies for each request,  + "]}," BetterErrors Middleware backtrace_frames":{"type":"method","name":"backtrace_frames","children":[],"call":["@error_page backtrace_frames ","Rails  backtrace_cleaner clean ","@error_page backtrace_frames map ","Rails  backtrace_cleaner "]}," BetterErrors InspectableValue value_small_enough_to_inspect?":{"type":"method","name":"value_small_enough_to_inspect?","children":[],"call":[" value_as_html length <= ","BetterErrors  maximum_variable_inspect_size "," value_as_html length "," value_as_html ","ObjectSpace  memsize_of <= ","ObjectSpace  memsize_of "," value ","BetterErrors  maximum_variable_inspect_size nil? "]}," BetterErrors InspectableValue value":{"type":"method","name":"value","children":[],"call":[" original_value "," original_value inspect "," original_value respond_to? "]}," BetterErrors InspectableValue value_as_html":{"type":"method","name":"value_as_html","children":[],"call":["CGI  escapeHTML "," value "]}," BetterErrors InspectableValue to_html":{"type":"method","name":"to_html","children":[],"call":[" value_as_html "," raise "," value_small_enough_to_inspect? "]}," BetterErrors InspectableValue initialize":{"type":"method","name":"initialize","children":[],"call":[]}," BetterErrors ExceptionHint hint":{"type":"method","name":"hint","children":[],"call":["match [] ","(str \"\\\\Aundefined local variable or method `(?<method>[^']+)' for\") match "," exception message "," exception ","match [] start_with? ! ","match [] start_with? ","match [] == ","(str \"\\\\Aundefined method `(?<method>[^']+)' for (?<val>[^:]+):(?<klass>\\\\w+)\") match "]}," BetterErrors ExceptionHint initialize":{"type":"method","name":"initialize","children":[],"call":[]}," BetterErrors ErrorPageStyle style_tag":{"type":"method","name":"style_tag","children":[],"call":[]}," BetterErrors ErrorPageStyle compiled_css":{"type":"method","name":"compiled_css","children":[],"call":[]}," BetterErrors ErrorPage eval_and_respond":{"type":"method","name":"eval_and_respond","children":[],"call":["Rouge Formatters HTML  new format ","Rouge Lexers Ruby  lex ","Rouge Formatters HTML  new ","@repls [] send_input ","@repls [] ","CodeRay  scan div ","CodeRay  scan "]}," BetterErrors ErrorPage action_dispatch_action_endpoint":{"type":"method","name":"action_dispatch_action_endpoint","children":[],"call":["ActionDispatch ActionableExceptions  endpoint "]}," BetterErrors ErrorPage active_support_actions":{"type":"method","name":"active_support_actions","children":[],"call":["ActiveSupport ActionableError  actions "," exception type "," exception "]}," BetterErrors ErrorPage exception_hint":{"type":"method","name":"exception_hint","children":[],"call":[" exception hint "," exception "]}," BetterErrors ErrorPage exception_type":{"type":"method","name":"exception_type","children":[],"call":[" exception type "," exception "]}," BetterErrors ErrorPage render_text":{"type":"method","name":"render_text","children":[],"call":[" class render_template "," binding "," class "]}," BetterErrors ErrorPage render_main":{"type":"method","name":"render_main","children":[],"call":[" class render_template "," binding "," class ","VariableInfo  new ","Time  now to_f ","Time  now "," rack_session "," rails_params "," editor_url "," backtrace_frames [] "," backtrace_frames "," backtrace_ backtrace_frames [] s [] "," backtrace_ backtrace_frames [] s "]}," BetterErrors ErrorPage render_template":{"type":"method","name":"render_template","children":[],"call":[]}," BetterErrors Editor host_path":{"type":"method","name":"host_path","children":[],"call":["ENV  [] "]}," BetterErrors Editor virtual_path":{"type":"method","name":"virtual_path","children":[],"call":["ENV  [] "]}," BetterErrors Editor scheme":{"type":"method","name":"scheme","children":[],"call":[" url sub "," url "]}," BetterErrors Editor url":{"type":"method","name":"url","children":[],"call":[" url_proc call "," url_proc ","raw_path sub "," virtual_path "," host_path ","raw_path start_with? "]}," BetterErrors Editor initialize":{"type":"method","name":"initialize","children":[],"call":[]}," BetterErrors Editor editor_from_symbol":{"type":"method","name":"editor_from_symbol","children":[],"call":[]}," BetterErrors Editor editor_from_environment_formatting_string":{"type":"method","name":"editor_from_environment_formatting_string","children":[],"call":[]}," BetterErrors Editor editor_from_command":{"type":"method","name":"editor_from_command","children":[],"call":[]}," BetterErrors Editor editor_from_environment_editor":{"type":"method","name":"editor_from_environment_editor","children":[],"call":[]}," BetterErrors Editor default_editor":{"type":"method","name":"default_editor","children":[],"call":[]}," BetterErrors Editor for_proc":{"type":"method","name":"for_proc","children":[],"call":[]}," BetterErrors Editor for_formatting_string":{"type":"method","name":"for_formatting_string","children":[],"call":[]}," BetterErrors CodeFormatter source":{"type":"method","name":"source","children":[],"call":["File  read "," filename "]}," BetterErrors HTML highlighted_lines":{"type":"method","name":"highlighted_lines","children":[],"call":["Rouge Formatters HTML  new format lines ","Rouge Formatters HTML  new format "," rouge_lexer lex "," context_lines join "," context_lines "," rouge_lexer ","Rouge Formatters HTML  new "]}," BetterErrors HTML rouge_lexer":{"type":"method","name":"rouge_lexer","children":[],"call":["Rouge Lexer  guess "," source "," filename "]}," BetterErrors ErrorPage value_small_enough_to_inspect?":{"type":"method","name":"value_small_enough_to_inspect?","children":[],"call":["value length <= ","BetterErrors  maximum_variable_inspect_size ","value length ","BetterErrors  maximum_variable_inspect_size nil? "]}," BetterErrors ErrorPage inspect_raw_value":{"type":"method","name":"inspect_raw_value","children":[],"call":["CGI  escapeHTML ","obj class to_s ","obj class "," value_small_enough_to_inspect? ","obj inspect "," CGI  escapeHTML _small_enough_to_inspect? "]}}