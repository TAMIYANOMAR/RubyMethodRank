{" Declarative Variables Append":{"type":"method","name":"Append","children":[],"call":[]}," Declarative Variables Merge":{"type":"method","name":"Merge","children":[],"call":[]}," Declarative Variables merge":{"type":"method","name":"merge","children":[],"call":[]}," Declarative Inspect get":{"type":"method","name":"get","children":[],"call":[" extend "]}," Declarative Inspect inspect":{"type":"method","name":"inspect","children":[],"call":["dfn [] extend ","dfn [] ","dfn [] is_a? ","dfn extend "," each ","string gsub ","elements last ","elements first ","string split "," is_a? ","string split  last ","string split  first "]}," Declarative Inspect Schema inspect":{"type":"method","name":"inspect","children":[],"call":[" definitions inspect "," definitions "," definitions extend "]}," Declarative Inspect":{"type":"method","name":"Inspect","children":[],"call":[]}," Declarative Schema Feature register_feature":{"type":"method","name":"register_feature","children":[],"call":[" defaults merge! ","Variables  Append "," defaults "," heritage record "," heritage "," defaults [] << "," defaults [] "]}," Declarative Schema Feature feature":{"type":"method","name":"feature","children":[],"call":[" register_feature "," include ","mods each "]}," Declarative Schema DSL wrap_arrays_from_block":{"type":"method","name":"wrap_arrays_from_block","children":[],"call":["options merge ","Defaults  wrap_arrays ","block call "," lambda ","block call  merge "]}," Declarative Schema DSL nested_builder":{"type":"method","name":"nested_builder","children":[],"call":[]}," Declarative Schema DSL _defaults":{"type":"method","name":"_defaults","children":[],"call":["Declarative Defaults  new "]}," Declarative Schema DSL build_definition":{"type":"method","name":"build_definition","children":[],"call":[" definitions add ","default_options merge "," definitions ","default_options []= "," nested_builder "," _defaults "," default_nested_class "]}," Declarative Schema DSL definition_class":{"type":"method","name":"definition_class","children":[],"call":[]}," Declarative Schema DSL definitions":{"type":"method","name":"definitions","children":[],"call":["Definitions  new "," definition_class "]}," Declarative Schema DSL defaults":{"type":"method","name":"defaults","children":[],"call":[" _defaults merge! "," _defaults "," wrap_arrays_from_block "," block_given? ","options merge ","Defaults  wrap_arrays "," heritage record "," heritage "," wrap_arrays_from_ wrap_arrays_from_block  ","  wrap_arrays_from_block _given? ","options merge  merge "]}," Declarative Schema DSL property":{"type":"method","name":"property","children":[],"call":[" build_definition "," heritage record "," heritage "," definitions add "," definitions ","options []= "," _defaults "," nested_builder ","(pair\n  (sym :_base)\n  (send nil :default_nested_class)) merge "," default_nested_class ","default_options merge ","default_options []= ","(pair\n  (sym :_base)\n  (send nil :default_nested_class)) merge  []= ","default_(pair\n  (sym :_base)\n  (send nil :default_nested_class)) merge  merge ","default_(pair\n  (sym :_base)\n  (send nil :default_nested_class)) merge  []= "]}," Declarative Schema extended":{"type":"method","name":"extended","children":[],"call":[]}," Declarative Heritage Included included":{"type":"method","name":"included","children":[],"call":[" heritage call "," heritage "]}," Declarative Heritage Inherited inherited":{"type":"method","name":"inherited","children":[],"call":[" heritage call "," heritage "]}," Declarative Heritage DSL heritage":{"type":"method","name":"heritage","children":[],"call":["Heritage  new "]}," Declarative Heritage call!":{"type":"method","name":"call!","children":[],"call":["inheritor send ","cfg [] "," block_given? "]}," Declarative Heritage call":{"type":"method","name":"call","children":[],"call":[" call! "," each ","inheritor send ","cfg [] "]}," Declarative Heritage record":{"type":"method","name":"record","children":[],"call":[" << ","DeepDup  call ","(lvar :name) compact ","options dup "]}," Declarative Definitions build_nested":{"type":"method","name":"build_nested","children":[],"call":["options [] call ","options [] "]}," Declarative Definitions get":{"type":"method","name":"get","children":[],"call":[" [] ","name to_s "]}," Declarative Definitions add":{"type":"method","name":"add","children":[],"call":[" []= ","@definition_class new ","name to_s ","options delete ","(sym :_defaults) each ","options []= "," build_nested ","options merge ","options [] ","parent_property merge ","parent_property [] "," get ","options [] call ","parent_property options merge ","parent_property options ","parent_property merge  delete ","options [] call  delete ","parent_property options merge  delete ","parent_property merge  []= ","options [] call  []= ","parent_property options merge  []= ","parent_property merge  merge ","options [] call  merge ","parent_property options merge  merge ","parent_property merge  [] ","options [] call  [] ","parent_property options merge  [] "," get  merge "," get  [] ","parent_property merge  [] call ","options [] call  [] call ","parent_property options merge  [] call ","parent_property parent_property merge  merge ","parent_property options [] call  merge ","parent_property parent_property options merge  merge "," get  options merge ","parent_property parent_property merge  ","parent_property options [] call  ","parent_property parent_property options merge  "," get  options "]}," Declarative Definitions each":{"type":"method","name":"each","children":[],"call":[" values each "," values "]}," Declarative Definitions initialize":{"type":"method","name":"initialize","children":[],"call":[]}," Declarative Definitions Definition merge":{"type":"method","name":"merge","children":[],"call":["DeepDup  call merge ","DeepDup  call "]}," Declarative Definitions Definition merge!":{"type":"method","name":"merge!","children":[],"call":["@options merge! "]}," Declarative Definitions Definition []":{"type":"method","name":"[]","children":[],"call":["@options [] "]}," Declarative Definitions Definition initialize":{"type":"method","name":"initialize","children":[],"call":["@options []= ","name to_s ","options dup ","options clone ","options dup  []= ","options clone  []= "]}," Declarative Defaults wrap_arrays":{"type":"method","name":"wrap_arrays","children":[],"call":[]}," Declarative Defaults handle_array_and_deprecate":{"type":"method","name":"handle_array_and_deprecate","children":[],"call":["variables merge "," warn ","wrapped any? ","Defaults  wrap_arrays ","Defaults  wrap_arrays  any? "]}," Declarative Defaults call":{"type":"method","name":"call","children":[],"call":["Variables  merge "," handle_array_and_deprecate ","@dynamic_options call ","options merge "," dynamic_options ","Merge  call ","@dynamic_Variables  merge  call ","@dynamic_options merge  call ","@dynamic_Merge  call  call ","Variables  merge  merge ","options merge  merge ","Merge  call  merge "," dynamic_Variables  merge  "," dynamic_options merge  "," dynamic_Merge  call  "]}," Declarative Defaults merge!":{"type":"method","name":"merge!","children":[],"call":[" block_given? ","Variables  merge "," handle_array_and_deprecate ","@static_options merge! ","hash any? ","Merge  call ","Variables  merge  merge! ","Merge  call  merge! "]}," Declarative Defaults initialize":{"type":"method","name":"initialize","children":[],"call":[" lambda ","Hash  new "]}," Declarative DeepDup dup_items":{"type":"method","name":"dup_items","children":[],"call":[]}," Declarative DeepDup call":{"type":"method","name":"call","children":[],"call":[]}," Declarative Inheritance included":{"type":"method","name":"included","children":[],"call":[" heritage call "," heritage "]}," Declarative DSL heritage":{"type":"method","name":"heritage","children":[],"call":["Heritage  new "]}," Declarative Schema Heritage inherited":{"type":"method","name":"inherited","children":[],"call":[" heritage call "," heritage "]}," Declarative Schema Heritage heritage":{"type":"method","name":"heritage","children":[],"call":[" Declarative Heritage  new "]}," Declarative Defaults dynamic_options":{"type":"method","name":"dynamic_options","children":[],"call":["@dynamic_options call ","@dynamic_options nil? "]}," Declarative Defaults Merge call":{"type":"method","name":"call","children":[],"call":[]}}