{" CodeClimate TestReporter run?":{"type":"method","name":"run?","children":[],"call":[]}," CodeClimate TestReporter start":{"type":"method","name":"start","children":[],"call":[]}," CodeClimate TestReporter Formatter git_branch":{"type":"method","name":"git_branch","children":[],"call":["branch gsub ","(lvar :branch) flatten first ","(lvar :branch) flatten ","i [] != ","i [] ","(str \"git branch\") split delete_if ","(str \"git branch\") split ","(lvar :branch) flatten first  gsub ","(lvar :(lvar :branch) flatten first ) flatten first ","(lvar :(lvar :branch) flatten first ) flatten ","(str \"git (lvar :branch) flatten first \") split delete_if ","(str \"git (lvar :branch) flatten first \") split "]}," CodeClimate TestReporter Formatter committed_at":{"type":"method","name":"committed_at","children":[],"call":["committed_at to_i ","committed_at to_i zero? "]}," CodeClimate TestReporter Formatter short_filename":{"type":"method","name":"short_filename","children":[],"call":["filename gsub gsub ","filename gsub "," SimpleCov  root "," apply_prefix ","filename gsub gsub  gsub gsub ","filename gsub gsub  gsub "]}," CodeClimate TestReporter Formatter ci_service_data":{"type":"method","name":"ci_service_data","children":[],"call":["ENV  [] ","Ci  service_data "]}," CodeClimate TestReporter Formatter format":{"type":"method","name":"format","children":[],"call":[" puts ","ex backtrace each ","ex backtrace ","ex message ","ex class ","API  post_results "," ci_service_data "," SimpleCov  root ","Rails  root to_s ","Rails  root ","Dir  pwd ","result command_name downcase ","result command_name "," git_branch "," committed_at ","result covered_strength round ","result covered_strength ","result covered_percent round ","result covered_percent ","result created_at ","ENV  [] "," print ","API  host ","file missed_lines count ","file missed_lines ","file covered_lines count ","file covered_lines ","file lines count ","file lines ","file covered_strength round ","file covered_strength ","file covered_percent round ","file covered_percent ","file coverage to_json ","file coverage "," short_filename ","file filename ","totals [] ","result files map ","result files ","Hash  new ","ExceptionMessage  new message ","ExceptionMessage  new ","client post_results ","client host "," compute_branch ","Client  new ","file write ","payload to_json ","File  open ","File  join ","SecureRandom  uuid ","Dir  tmpdir "," tddium? "," to_payload "," round "," calculate_blob_id ","Git  branch_from_git_or_ci ","PayloadValidator  validate ","CodeClimate TestReporter  run? ","result source_files covered_percent round ","result source_files covered_percent ","result source_files "," write_to_file? ","SimpleCov Result  new "," raise ","results values fetch fetch ","results values fetch ","results values "," merge_results ","simplecov_results first ","simplecov_results size == ","simplecov_results size ","SimpleCov Result  from_hash ","results map ","Hash  new  [] ","Client  new  post_results ","Client  new  host "," to_payload  to_json "," to_ to_payload  ","SimpleCov Result  new  first "," merge_results s first ","simplecov_results first s first ","SimpleCov Result  new  size == "," merge_results s size == ","simplecov_results first s size == ","SimpleCov Result  new  size "," merge_results s size ","simplecov_results first s size "]}," CodeClimate TestReporter API post_results":{"type":"method","name":"post_results","children":[],"call":[]}," CodeClimate TestReporter API host":{"type":"method","name":"host","children":[],"call":[]}," CodeClimate TestReporter Formatter compute_branch":{"type":"method","name":"compute_branch","children":[],"call":["git_branch sub ","git_branch to_s strip start_with? ! ","git_branch to_s strip start_with? ","git_branch to_s strip ","git_branch to_s ","git_branch to_s strip size > ","git_branch to_s strip size ","ci_branch sub ","ci_branch to_s strip size > ","ci_branch to_s strip size ","ci_branch to_s strip ","ci_branch to_s ","payload [] [] ","payload [] ","payload [] []  sub ","payload [] []  to_s strip start_with? ! ","payload [] []  to_s strip start_with? ","payload [] []  to_s strip ","payload [] []  to_s ","payload [] []  to_s strip size > ","payload [] []  to_s strip size "]}," CodeClimate TestReporter Formatter tddium?":{"type":"method","name":"tddium?","children":[],"call":[" ci_service_data [] == "," ci_service_data [] "," ci_service_data "]}," CodeClimate TestReporter Formatter calculate_blob_id":{"type":"method","name":"calculate_blob_id","children":[],"call":["Digest SHA1  hexdigest ","header + ","content length ","f read ","File  open ","File  open read ","file read force_encoding encode ","file read force_encoding ","file read ","file size ","File  open read  length ","file read force_encoding encode  length "]}," CodeClimate TestReporter Formatter to_payload":{"type":"method","name":"to_payload","children":[],"call":[" ci_service_data "," SimpleCov  root ","Rails  root to_s ","Rails  root ","Dir  pwd ","result command_name downcase ","result command_name "," git_branch "," committed_at "," partial? ","result covered_strength round ","result covered_strength ","result covered_percent round ","result covered_percent ","result created_at ","ENV  [] ","file missed_lines count ","file missed_lines ","file covered_lines count ","file covered_lines ","file lines count ","file lines ","file covered_strength round ","file covered_strength ","file covered_percent round ","file covered_percent ","file coverage to_json ","file coverage "," calculate_blob_id ","file filename "," short_filename ","totals [] ","result files map ","result files ","Hash  new "," round ","result created_at to_i ","Git  info ","result source_files covered_strength round ","result source_files covered_strength ","result source_files ","result source_files covered_percent round ","result source_files covered_percent ","CalculateBlob  new blob_id ","CalculateBlob  new ","file coverage []= ","skipped_line line_number - ","skipped_line line_number ","file skipped_lines each ","file skipped_lines ","CodeClimate TestReporter  ci_service_data ","ShortenFilename  new short_filename ","ShortenFilename  new ","Hash  new  [] "]}," CodeClimate TestReporter Formatter partial?":{"type":"method","name":"partial?","children":[],"call":[" tddium? ","CodeClimate TestReporter  tddium? "]}," CodeClimate TestReporter ExceptionMessage http_stubbing_exception":{"type":"method","name":"http_stubbing_exception","children":[],"call":["HTTP_STUBBING_MESSAGES  [] "," exception_class "]}," CodeClimate TestReporter ExceptionMessage exception_class":{"type":"method","name":"exception_class","children":[],"call":["@exception class to_s ","@exception class "]}," CodeClimate TestReporter ExceptionMessage message":{"type":"method","name":"message","children":[],"call":["parts join ","parts << ","@exception backtrace each ","@exception backtrace ","@exception message ","\n + + ","\n + ","message instructions ","message library_name "," http_stubbing_exception new "," http_stubbing_exception "," exception_class ","@exception  http_stubbing_exception new  "," http_stubbing_exception new  instructions "," http_stubbing_exception new  library_name "]}," CodeClimate TestReporter ExceptionMessage initialize":{"type":"method","name":"initialize","children":[],"call":[]}," CodeClimate TestReporter VCRMessage instructions":{"type":"method","name":"instructions","children":[],"call":[]}," CodeClimate TestReporter VCRMessage library_name":{"type":"method","name":"library_name","children":[],"call":[]}," CodeClimate TestReporter WebMockMessage instructions":{"type":"method","name":"instructions","children":[],"call":[]}," CodeClimate TestReporter WebMockMessage library_name":{"type":"method","name":"library_name","children":[],"call":[]}," CodeClimate TestReporter Client http_client":{"type":"method","name":"http_client","children":[],"call":["http read_timeout= ","http open_timeout= ","http verify_depth= ","http ca_file= ","File  expand_path ","http verify_mode= ","http use_ssl= ","uri scheme == ","uri scheme ","Net HTTP  new tap ","Net HTTP  new ","uri port ","uri host ","CodeClimate TestReporter  configuration timeout ","CodeClimate TestReporter  configuration "," ca_file "]}," CodeClimate TestReporter Client post_results":{"type":"method","name":"post_results","children":[],"call":[" raise ","response code ","response code to_i < ","response code to_i ","response code to_i >= ","http request ","request body= ","result to_json ","request []= ","Net HTTP Post  new ","uri path "," http_client ","URI  parse "," host "," compress ","CodeClimate TestReporter  configuration gzip_request ","CodeClimate TestReporter  configuration ","http request  code ","http request  code to_i < ","http request  code to_i ","http request  code to_i >= ","http Net HTTP Post  new  "," http_client  request ","Net HTTP Post  new  body= ","Net HTTP Post  new  []= ","URI  parse  path ","  http_client _client ","CodeClimate TestReporter  configuration gzip_Net HTTP Post  new  "]}," CodeClimate TestReporter Client batch_post_results":{"type":"method","name":"batch_post_results","children":[],"call":[" raise ","response code ","response code to_i < ","response code to_i ","response code to_i >= ","http request ","request []= ","request body= ","post_body join ","Net HTTP Post  new ","uri request_uri ","post_body << ","File  read ","File  basename ","files each_with_index ","ENV  [] ","SecureRandom  uuid "," http_client ","URI  parse "," host ","http request  code ","http request  code to_i < ","http request  code to_i ","http request  code to_i >= ","http Net HTTP Post  new  "," http_client  request ","Net HTTP Post  new  []= ","Net HTTP Post  new  body= ","uri Net HTTP Post  new _uri ","URI  parse  request_URI  parse  ","  http_client _client "]}," CodeClimate TestReporter Client host":{"type":"method","name":"host","children":[],"call":["ENV  [] "]}," CodeClimate TestReporter Formatter round":{"type":"method","name":"round","children":[],"call":[" Float round "," Float "]}," CodeClimate TestReporter Client compress":{"type":"method","name":"compress","children":[],"call":["sio string ","gz close ","gz write ","Zlib GzipWriter  new ","StringIO  new ","StringIO  new  string ","Zlib GzipWriter  new  close ","Zlib GzipWriter  new  write "]}," CodeClimate TestReporter logger":{"type":"method","name":"logger","children":[],"call":[]}," CodeClimate TestReporter current_branch":{"type":"method","name":"current_branch","children":[],"call":[]}," CodeClimate TestReporter configured_branch":{"type":"method","name":"configured_branch","children":[],"call":[]}," CodeClimate TestReporter run_on_current_branch?":{"type":"method","name":"run_on_current_branch?","children":[],"call":[]}," CodeClimate TestReporter environment_variable_set?":{"type":"method","name":"environment_variable_set?","children":[],"call":[]}," CodeClimate TestReporter Git branch_from_git":{"type":"method","name":"branch_from_git","children":[],"call":["branch gsub ","(lvar :branch) flatten first ","(lvar :branch) flatten ","i [] != ","i [] ","(str \"git branch\") split delete_if ","(str \"git branch\") split ","(str \"git rev-parse --abbrev-ref HEAD\") chomp "," git chomp "," git ","(lvar :branch) flatten first  gsub ","(lvar :(lvar :branch) flatten first ) flatten first ","(lvar :(lvar :branch) flatten first ) flatten ","(str \"git (lvar :branch) flatten first \") split delete_if ","(str \"git (lvar :branch) flatten first \") split "]}," CodeClimate TestReporter Git committed_at":{"type":"method","name":"committed_at","children":[],"call":["committed_at to_i ","committed_at to_i zero? "," git "," git  to_i "," git  to_i zero? "]}," CodeClimate TestReporter Git branch_from_git_or_ci":{"type":"method","name":"branch_from_git_or_ci","children":[],"call":["git_branch sub ","git_branch to_s strip start_with? ! ","git_branch to_s strip start_with? ","git_branch to_s strip ","git_branch to_s ","git_branch to_s strip size > ","git_branch to_s strip size ","ci_branch sub ","ci_branch to_s strip size > ","ci_branch to_s strip size ","ci_branch to_s strip ","ci_branch to_s ","Ci  service_data [] ","Ci  service_data "," branch_from_git "," clean_git_branch "," clean_service_branch "," branch_from_git  sub "," branch_from_git  to_s strip start_with? ! "," branch_from_git  to_s strip start_with? "," branch_from_git  to_s strip "," branch_from_git  to_s "," branch_from_git  to_s strip size > "," branch_from_git  to_s strip size ","Ci  service_data []  sub ","Ci  service_data []  to_s strip size > ","Ci  service_data []  to_s strip size ","Ci  service_data []  to_s strip ","Ci  service_data []  to_s "," clean_ branch_from_git  "]}," CodeClimate TestReporter Git info":{"type":"method","name":"info","children":[],"call":[" branch_from_git "," committed_at "," head "," branch_from_git_or_ci "," committed_at_from_git_or_ci "," head_from_git_or_ci "]}," CodeClimate TestReporter Configuration default_logger":{"type":"method","name":"default_logger","children":[],"call":["log level= ","Logger  new ","Logger  new  level= "]}," CodeClimate TestReporter Configuration profile":{"type":"method","name":"profile","children":[],"call":[]}," CodeClimate TestReporter Configuration logger":{"type":"method","name":"logger","children":[],"call":[" default_logger "]}," CodeClimate TestReporter configuration":{"type":"method","name":"configuration","children":[],"call":[]}," CodeClimate TestReporter configure":{"type":"method","name":"configure","children":[],"call":[]}," CodeClimate TestReporter Ci service_data":{"type":"method","name":"service_data","children":[],"call":[]}," CodeClimate TestReporter PayloadValidator commit_sha_from_ci_service":{"type":"method","name":"commit_sha_from_ci_service","children":[],"call":["@payload [] [] ","@payload [] "]}," CodeClimate TestReporter PayloadValidator commit_sha_from_git":{"type":"method","name":"commit_sha_from_git","children":[],"call":["@payload [] [] ","@payload [] "]}," CodeClimate TestReporter PayloadValidator valid_source_file?":{"type":"method","name":"valid_source_file?","children":[],"call":["file [] ","file is_a? "]}," CodeClimate TestReporter PayloadValidator valid_source_files?":{"type":"method","name":"valid_source_files?","children":[],"call":[" valid_source_file? ","@payload [] all? ","@payload [] "]}," CodeClimate TestReporter PayloadValidator source_files?":{"type":"method","name":"source_files?","children":[],"call":["@payload [] any? ","@payload [] "]}," CodeClimate TestReporter PayloadValidator run_at":{"type":"method","name":"run_at","children":[],"call":["@payload [] "]}," CodeClimate TestReporter PayloadValidator committed_at":{"type":"method","name":"committed_at","children":[],"call":["@payload [] [] ","@payload [] "]}," CodeClimate TestReporter PayloadValidator commit_sha":{"type":"method","name":"commit_sha","children":[],"call":[" commit_sha_from_ci_service "," commit_sha_from_git "]}," CodeClimate TestReporter PayloadValidator validate":{"type":"method","name":"validate","children":[],"call":[" raise "," valid_source_files? "," source_files? "," run_at "," committed_at "," commit_sha "]}," CodeClimate TestReporter PayloadValidator initialize":{"type":"method","name":"initialize","children":[],"call":[]}," CodeClimate TestReporter Formatter apply_prefix":{"type":"method","name":"apply_prefix","children":[],"call":["prefix nil? ","CodeClimate TestReporter  configuration path_prefix ","CodeClimate TestReporter  configuration ","CodeClimate TestReporter  configuration path_prefix  nil? ","CodeClimate TestReporter  configuration path_CodeClimate TestReporter  configuration path_prefix  "]}," CodeClimate TestReporter Configuration initialize":{"type":"method","name":"initialize","children":[],"call":[]}," CodeClimate TestReporter Git clean_git_branch":{"type":"method","name":"clean_git_branch","children":[],"call":["clean size > ","clean size ","git_branch sub ","git_branch start_with? "," String "," branch_from_git ","clean empty? ! ","clean empty? ","git_branch sub  size > ","git_branch sub  size "," String  sub "," String  start_with? ","git_branch sub  empty? ! ","git_branch sub  empty? "]}," CodeClimate TestReporter Git clean_service_branch":{"type":"method","name":"clean_service_branch","children":[],"call":["clean size > ","clean size ","ci_branch strip sub ","ci_branch strip "," String ","Ci  service_data [] ","Ci  service_data ","clean empty? ! ","clean empty? ","ci_branch strip sub  size > ","ci_branch strip sub  size "," String  strip sub "," String  strip ","ci_branch strip sub  empty? ! ","ci_branch strip sub  empty? "]}," CodeClimate TestReporter Configuration skip_token":{"type":"method","name":"skip_token","children":[],"call":[]}," CodeClimate TestReporter CalculateBlob calculate_with_git":{"type":"method","name":"calculate_with_git","children":[],"call":[" raise ","$? success? ","(str \"git hash-object -t blob \") chomp "]}," CodeClimate TestReporter CalculateBlob calculate_with_file":{"type":"method","name":"calculate_with_file","children":[],"call":[" puts ","Digest SHA1  hexdigest ","header + ","file read ","file size ","File  open "]}," CodeClimate TestReporter CalculateBlob blob_id":{"type":"method","name":"blob_id","children":[],"call":[" calculate_with_git "," calculate_with_file "]}," CodeClimate TestReporter CalculateBlob initialize":{"type":"method","name":"initialize","children":[],"call":[]}," CodeClimate TestReporter Git git_dir":{"type":"method","name":"git_dir","children":[],"call":["Rails  root ","File  directory? ","File  expand_path ","CodeClimate TestReporter  configuration git_dir ","CodeClimate TestReporter  configuration ","CodeClimate TestReporter  configuration git_dir nil? "," rails_git_dir_present? "," configured_git_dir "," configured_git_dir nil? ","Rails  Rails  root  "]}," CodeClimate TestReporter Git git":{"type":"method","name":"git","children":[],"call":[" git_dir "]}," CodeClimate TestReporter Git head":{"type":"method","name":"head","children":[],"call":[" git "]}," CodeClimate TestReporter Git rails_git_dir_present?":{"type":"method","name":"rails_git_dir_present?","children":[],"call":["File  directory? ","File  expand_path ","Rails  root ","Rails  root nil? ! ","Rails  root nil? ","Rails  respond_to? "," const_defined? "]}," CodeClimate TestReporter Git configured_git_dir":{"type":"method","name":"configured_git_dir","children":[],"call":["CodeClimate TestReporter  configuration git_dir ","CodeClimate TestReporter  configuration "]}," CodeClimate TestReporter Configuration timeout":{"type":"method","name":"timeout","children":[],"call":[]}," CodeClimate TestReporter Formatter write_to_file?":{"type":"method","name":"write_to_file?","children":[],"call":["ENV  [] "," tddium? "," warn "]}," CodeClimate TestReporter Client ca_file":{"type":"method","name":"ca_file","children":[],"call":["File  expand_path ","ENV  [] "]}," CodeClimate TestReporter ci_service_data":{"type":"method","name":"ci_service_data","children":[],"call":[]}," CodeClimate TestReporter tddium?":{"type":"method","name":"tddium?","children":[],"call":[]}," CodeClimate TestReporter run":{"type":"method","name":"run","children":[],"call":[]}," CodeClimate TestReporter ShortenFilename apply_prefix":{"type":"method","name":"apply_prefix","children":[],"call":["File  join ","CodeClimate TestReporter  configuration path_prefix ","CodeClimate TestReporter  configuration ","CodeClimate TestReporter  configuration path_CodeClimate TestReporter  configuration path_prefix  "]}," CodeClimate TestReporter ShortenFilename short_filename":{"type":"method","name":"short_filename","children":[],"call":[" apply_prefix ","@filename gsub gsub ","@filename gsub "," SimpleCov  root ","Regexp  escape "]}," CodeClimate TestReporter ShortenFilename initialize":{"type":"method","name":"initialize","children":[],"call":[]}," CodeClimate TestReporter PostResults write_to_file?":{"type":"method","name":"write_to_file?","children":[],"call":["ENV  [] ","CodeClimate TestReporter  tddium? "," warn "]}," CodeClimate TestReporter PostResults post":{"type":"method","name":"post","children":[],"call":[" puts ","client post_results "," print ","Git  branch_from_git_or_ci ","client host ","Client  new ","file write ","@results to_json ","File  open ","File  join ","SecureRandom  uuid ","Dir  tmpdir "," write_to_file? ","Client  new  post_results ","Client  new  host "]}," CodeClimate TestReporter PostResults initialize":{"type":"method","name":"initialize","children":[],"call":[]}," CodeClimate TestReporter Formatter merge_results":{"type":"method","name":"merge_results","children":[],"call":["result command_name= ","results map sort join ","results map sort ","results map ","SimpleCov Result  new ","result original_result merge_resultset ","result original_result ","results each ","SimpleCov Result  new  command_name= ","SimpleCov Result  new s map sort join ","SimpleCov Result  new s map sort ","SimpleCov Result  new s map ","SimpleCov Result  new  original_SimpleCov Result  new  merge_SimpleCov Result  new set ","SimpleCov Result  new  original_SimpleCov Result  new  ","SimpleCov Result  new s each "]}," CodeClimate TestReporter Git committed_at_from_git":{"type":"method","name":"committed_at_from_git","children":[],"call":["committed_at to_i ","committed_at to_i zero? "," git "," git  to_i "," git  to_i zero? "]}," CodeClimate TestReporter Git committed_at_from_ci":{"type":"method","name":"committed_at_from_ci","children":[],"call":["value to_i ","Ci  service_data [] ","Ci  service_data ","Ci  service_data []  to_i "]}," CodeClimate TestReporter Git committed_at_from_git_or_ci":{"type":"method","name":"committed_at_from_git_or_ci","children":[],"call":[" committed_at_from_ci "," committed_at_from_git "]}," CodeClimate TestReporter Git head_from_ci":{"type":"method","name":"head_from_ci","children":[],"call":["Ci  service_data [] ","Ci  service_data "]}," CodeClimate TestReporter Git head_from_git":{"type":"method","name":"head_from_git","children":[],"call":["commit_hash empty? ! ","commit_hash empty? "," git "," git  empty? ! "," git  empty? "]}," CodeClimate TestReporter Git head_from_git_or_ci":{"type":"method","name":"head_from_git_or_ci","children":[],"call":[" head_from_ci "," head_from_git "]}}