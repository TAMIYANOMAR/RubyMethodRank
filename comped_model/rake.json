{" RakeApp run":{"type":"method","name":"run","children":[],"call":[" exit "," puts ","str =~ ","ex backtrace find ","ex backtrace ","ex backtrace join ","ex message ","Task  [] invoke ","Task  [] ","tasks each "," display_prerequisites "," display_tasks_and_comments "," load_rakefile "," collect_tasks "," handle_options "," collect_tasks  each "," display_ collect_tasks _and_comments "," collect_ collect_tasks  "]}," RakeApp collect_tasks":{"type":"method","name":"collect_tasks","children":[],"call":["tasks push ","tasks size == ","tasks size ","tasks << ","ENV  []= ","arg =~ ","ARGV  each "]}," RakeApp load_rakefile":{"type":"method","name":"load_rakefile","children":[],"call":[" load "," puts ","Dir  pwd "," fail ","RAKEFILES  join ","Dir  pwd == ","Dir  chdir "," have_rakefile ! "," have_rakefile "," load_imports "]}," RakeApp handle_options":{"type":"method","name":"handle_options","children":[],"call":[" do_option ","opts each ","GetoptLong  new "," command_line_options ","GetoptLong  new  each "]}," RakeApp do_option":{"type":"method","name":"do_option","children":[],"call":[" fail "," exit "," puts "," verbose "," usage "," require ","RAKEFILES  << ","RAKEFILES  clear ","$: push "," help "," nowrite "]}," RakeApp command_line_options":{"type":"method","name":"command_line_options","children":[],"call":["lst [] ","OPTIONS  collect "]}," RakeApp display_prerequisites":{"type":"method","name":"display_prerequisites","children":[],"call":[" puts ","t prerequisites each ","t prerequisites ","t name ","Task  tasks each ","Task  tasks "]}," RakeApp display_tasks_and_comments":{"type":"method","name":"display_tasks_and_comments","children":[],"call":[" printf ","t comment ","t name ","Task  tasks each ","Task  tasks ","(send\n  (block\n    (send\n      (send\n        (const nil :Task) :tasks) :select)\n    (args\n      (arg :t))\n    (send\n      (lvar :t) :comment)) :collect) max ","t name length ","(send\n  (send\n    (const nil :Task) :tasks) :select) collect ","Task  tasks select "]}," RakeApp help":{"type":"method","name":"help","children":[],"call":[" printf ","long + ","desc =~ ","mode == ","OPTIONS  sort each ","OPTIONS  sort "," puts "," usage ","long +  + "]}," RakeApp usage":{"type":"method","name":"usage","children":[],"call":[" puts "]}," RakeApp have_rakefile":{"type":"method","name":"have_rakefile","children":[],"call":["File  exist? ","RAKEFILES  each "]}," RakeApp initialize":{"type":"method","name":"initialize","children":[],"call":["Rake  application= ","Rake DefaultLoader  new "]}," Rake FileList clear_ignore_patterns":{"type":"method","name":"clear_ignore_patterns","children":[],"call":[]}," Rake FileList select_default_ignore_patterns":{"type":"method","name":"select_default_ignore_patterns","children":[],"call":["DEFAULT_IGNORE_PATTERNS  dup "]}," Rake FileList []":{"type":"method","name":"[]","children":[],"call":[" new "]}," Rake FileList exclude?":{"type":"method","name":"exclude?","children":[],"call":["fn =~ "," calculate_exclude_regexp ","p call ","@exclude_procs any? ","fn == ","File  fnmatch? ","@exclude_patterns any? "]}," Rake FileList add_matching":{"type":"method","name":"add_matching","children":[],"call":[" << "," exclude? ","Dir  [] each ","Dir  [] ","Rake  glob each ","Rake  glob ","FileList  glob each ","FileList  glob "," excluded_from_list? "," class glob each "," class glob "," class "]}," Rake FileList to_s":{"type":"method","name":"to_s","children":[],"call":[" join "," resolve "]}," Rake FileList gsub!":{"type":"method","name":"gsub!","children":[],"call":[" []= ","fn gsub "," each_with_index "]}," Rake FileList sub!":{"type":"method","name":"sub!","children":[],"call":[" []= ","fn sub "," each_with_index "]}," Rake FileList gsub":{"type":"method","name":"gsub","children":[],"call":["res << ","fn gsub "," inject ","FileList  new "," class new "," class "]}," Rake FileList sub":{"type":"method","name":"sub","children":[],"call":["res << ","fn sub "," inject ","FileList  new "," class new "," class "]}," Rake FileList resolve_exclude":{"type":"method","name":"resolve_exclude","children":[],"call":["fn == "," reject! ","reject_list include? ","Dir  [] ","fn =~ ","@exclude_patterns each "," exclude? "," calculate_exclude_regexp "," excluded_from_list? ","Dir  []  include? "]}," Rake FileList resolve_add":{"type":"method","name":"resolve_add","children":[],"call":[" << "," add_matching "," resolve_add ","fn each "]}," Rake FileList calculate_exclude_regexp":{"type":"method","name":"calculate_exclude_regexp","children":[],"call":["Regexp  new ","(send\n  (lvar :ignores) :collect) join ","( + + ","( + ","p to_s ","ignores collect ","ignores empty? ","ignores << ","Regexp  quote ","Dir  [] each ","Dir  [] ","@exclude_patterns each "]}," Rake FileList resolve":{"type":"method","name":"resolve","children":[],"call":[" resolve_exclude "," resolve_add ","@pending_add each "]}," Rake FileList clear_exclude":{"type":"method","name":"clear_exclude","children":[],"call":[" calculate_exclude_regexp ","@pending ! "]}," Rake FileList exclude":{"type":"method","name":"exclude","children":[],"call":["fn =~ "," reject! "," calculate_exclude_regexp ","@pending ! ","@exclude_patterns << ","patterns each "," resolve_exclude ","@exclude_procs << "," block_given? ","Rake  from_pathname "," exclude ","pat to_ary ","pat respond_to? "]}," Rake FileList include":{"type":"method","name":"include","children":[],"call":["@pending_add << ","filenames each "," include ","fn to_ary ","fn respond_to? ","Rake  from_pathname "]}," Rake FileList initialize":{"type":"method","name":"initialize","children":[],"call":[" block_given? "," include ","patterns each ","DEFAULT_IGNORE_PATTERNS  dup ","DEFAULT_IGNORE_PROCS  dup "]}," RakeFileUtils fu_merge_option":{"type":"method","name":"fu_merge_option","children":[],"call":["args push ","args pop ","defaults update ","args last ","Hash  === "]}," RakeFileUtils when_writing":{"type":"method","name":"when_writing","children":[],"call":[" puts ","RakeFileUtils  nowrite_flag "]}," RakeFileUtils nowrite":{"type":"method","name":"nowrite","children":[],"call":[" block_given? ","value nil? ","RakeFileUtils  nowrite_flag= ","RakeFileUtils  nowrite_flag "]}," RakeFileUtils verbose":{"type":"method","name":"verbose","children":[],"call":[" block_given? ","value nil? ","RakeFileUtils  verbose_flag ","RakeFileUtils  verbose_flag= "]}," FileUtils split_all":{"type":"method","name":"split_all","children":[],"call":[" split_all + "," split_all ","head == ","tail == ","File  split "]}," FileUtils safe_ln":{"type":"method","name":"safe_ln","children":[],"call":[" cp ","LN_SUPPORTED  []= "," ln ","LN_SUPPORTED  [] ","LN_SUPPORTED  [] ! ","options empty? "]}," FileUtils ruby":{"type":"method","name":"ruby","children":[],"call":[" sh ","args join ","args pop ","Hash  === ","args last ","(const nil :RUBY) + + ","(const nil :RUBY) + ","args length > ","args length ","args first "]}," FileUtils sh":{"type":"method","name":"sh","children":[],"call":["block call "," system ","options [] "," fu_output_message "," fu_check_options "," fail ","status exitstatus "," lambda "," block_given? ","cmd join ","cmd pop ","Hash  === ","cmd last ","show_command [] + ","show_command [] ","show_command length > ","show_command length "," rake_output_message "," rake_check_options "," rake_system ","RakeFileUtils  nowrite_flag ","RakeFileUtils  verbose_flag ","options []= ","RakeFileUtils  verbose_flag == ","PseudoStatus  new ","status nil? ","res ! ","shell_runner call ","Rake  rake_output_message ","Rake  rake_check_options ","Rake FileUtilsExt  nowrite_flag "," set_verbose_option "," create_shell_runner ","Rake PseudoStatus  new "," sh_show_command ","options delete ","cmd pop  [] "," fu_check_cmd pop  ","PseudoStatus  new  exitPseudoStatus  new  ","Rake PseudoStatus  new  exitRake PseudoStatus  new  ","show_command [] +  [] + ","cmd join  [] + ","show_command [] +  [] ","cmd join  [] ","show_command [] +  length > ","cmd join  length > ","show_command [] +  length ","cmd join  length "," rake_check_cmd pop  ","RakeFileUtils  options delete _flag ","cmd pop  []= ","RakeFileUtils  options delete _flag == ","PseudoStatus  new  nil? ","Rake PseudoStatus  new  nil? "," system  ! "," rake_system  ! "," create_shell_runner  call ","Rake  rake_check_cmd pop  "," set_options delete _option "," create_ create_shell_runner  "," sh_show_command [] +  "," sh_cmd join  ","cmd pop  delete "]}," desc":{"type":"method","name":"desc","children":[],"call":["Rake  application last_comment= ","Rake  application ","Rake  application last_description= "]}," rule":{"type":"method","name":"rule","children":[],"call":["Task  create_rule ","Rake Task  create_rule "]}," directory":{"type":"method","name":"directory","children":[],"call":["File  dirname "," mkdir_p ","t name ","File  exist? ! ","File  exist? "," file ","dir != "," file_create ","Rake  each_dir_parent ","File  File  dirname name "," mkFile  dirname _p ","File  dirname  != ","Rake  each_File  dirname _parent "]}," file":{"type":"method","name":"file","children":[],"call":["FileTask  define_task ","Rake FileTask  define_task "]}," task":{"type":"method","name":"task","children":[],"call":["Task  define_task ","Rake Task  define_task "]}," FileTask timestamp":{"type":"method","name":"timestamp","children":[],"call":["File  mtime "," name to_s "," name "]}," FileTask needed?":{"type":"method","name":"needed?","children":[],"call":[" timestamp < "," timestamp ","latest_prereq nil? ","(send\n  (ivar :@prerequisites) :collect) max ","Task  [] timestamp ","Task  [] ","@prerequisites collect ","File  exist? "," name "," raise ","(send\n  (ivar :@prerequisites) :collect) max  nil? "]}," Task resolve_args":{"type":"method","name":"resolve_args","children":[],"call":["Proc  === ","Regexp  === ","String  === ","args [] ","args keys [] ","args keys "," fail ","args size < ","args size ","args keys join ","args size > "]}," Task enhance_with_matching_rule":{"type":"method","name":"enhance_with_matching_rule","children":[],"call":["task source= ","FileTask  define_task ","File  exist? "," fail ","ext inspect ","ext call ","task_name sub ","extensions first ","pattern match ","RULES  each ","ex add_target ","parent name "," enhance_with_matching_rule ","level + ","level >= ","Task  task_defined? ","FileTask  define_task  source= ","task ext call = ","task task_name sub = ","FileTask  define_FileTask  define_task  ","extensions first  inspect ","extensions first  call ","FileTask  define_task _name sub ","extensions first ensions first "," enhance_with_matching_rule  name ","Task  FileTask  define_task _defined? "]}," Task lookup":{"type":"method","name":"lookup","children":[],"call":[" new ","TASKS  [] ","task_name to_s ","task_task_name to_s  to_s "]}," Task create_rule":{"type":"method","name":"create_rule","children":[],"call":["RULES  << ","Regexp  new ","Regexp  quote + ","Regexp  quote ","String  === "," fail ","deps inspect ","deps size > ","deps size "," resolve_args "]}," Task define_task":{"type":"method","name":"define_task","children":[],"call":["t enhance ","t add_comment "," lookup ","d to_s ","deps collect ","String  === ","Symbol  === "," resolve_args "," lookup  enhance "," lookup  add_commen lookup  ","d  lookup o_s ","deps collec lookup  ","S lookup ring  === "]}," Task task_defined?":{"type":"method","name":"task_defined?","children":[],"call":["TASKS  [] ","task_name to_s ","task_name to_s  to_s "]}," Task []":{"type":"method","name":"[]","children":[],"call":[" fail ","FileTask  define_task ","File  exist? "," enhance_with_matching_rule ","TASKS  [] ","task_name to_s ","FileTask  define_ enhance_with_matching_rule  ","FileTask  define_TASKS  []  "," enhance_with_matching_rule _name to_s ","TASKS  [] _name to_s ","task_name to_s  to_s "]}," Task tasks":{"type":"method","name":"tasks","children":[],"call":["Task  [] ","TASKS  keys sort collect ","TASKS  keys sort ","TASKS  keys "]}," Task clear":{"type":"method","name":"clear","children":[],"call":["RULES  clear ","TASKS  clear "]}," Task add_comment":{"type":"method","name":"add_comment","children":[],"call":["@comment << ","$last_comment ! "]}," Task timestamp":{"type":"method","name":"timestamp","children":[],"call":["Time  now ","(send\n  (ivar :@prerequisites) :collect) max ","Task  [] timestamp ","Task  [] ","@prerequisites collect "]}," Task needed?":{"type":"method","name":"needed?","children":[],"call":[]}," Task execute":{"type":"method","name":"execute","children":[],"call":["act call ","@actions each "," class enhance_with_matching_rule "," name "," class ","@actions empty? "," puts "]}," Task format_trace_flags":{"type":"method","name":"format_trace_flags","children":[],"call":["( + + ","( + ","flags join ","flags empty? ","flags << "," needed? "]}," Task invoke":{"type":"method","name":"invoke","children":[],"call":[" execute "," needed? ","Task  [] invoke ","Task  [] ","@prerequisites each "," puts "," format_trace_flags "," name "]}," Task name":{"type":"method","name":"name","children":[],"call":["@name to_s "]}," Task enhance":{"type":"method","name":"enhance","children":[],"call":["@actions << "," block_given? "]}," Task initialize":{"type":"method","name":"initialize","children":[],"call":["FileList  [] "]}," Rake TestTask file_list":{"type":"method","name":"file_list","children":[],"call":["FileList  [] ","FileList  [] to_a ","@test_files to_a ","ENV  [] ","result << "]}," Rake TestTask get_options":{"type":"method","name":"get_options","children":[],"call":["ENV  [] "]}," Rake TestTask option_list":{"type":"method","name":"option_list","children":[],"call":[" get_options ","ENV  [] "]}," Rake TestTask required_files":{"type":"method","name":"required_files","children":[],"call":[" file_list gsub join "," file_list gsub "," file_list "]}," Rake TestTask define":{"type":"method","name":"define","children":[],"call":[" ruby "," option_list "," required_files ","RakeFileUtils  verbose "," task "," desc ","Run tests + ","@name == ","@libs join "," file_list join "," file_list "," fix ","(str \"-I\") + + ","(str \"-I\") + "," rake_loader ","(send\n  (send nil :file_list) :collect) join "," file_list collect ","@ruby_opts join + + + ","@ruby_opts join + + ","@ruby_opts join + ","@ruby_opts join ","@ruby_opts unshift ","(send\n  (ivar :@libs) :collect) join ","File  expand_path ","@libs collect "," file_list_string "," run_code "," ruby_opts_string ","FileUtilsExt  verbose "," raise ","SignalException  new ","status termsig ","status signaled? ","status respond_to? ","ok ! "," fail ","status exitstatus ","(str \"Command failed with status (\") + ","(begin\n  (send nil :ruby_opts_string)) + "," Array "," deps ","status + ","Rake  application options trace ","Rake  application options ","Rake  application "," puts ","ARGV  include? "]}," Rake TestTask initialize":{"type":"method","name":"initialize","children":[],"call":[" define ","@test_files nil? ","@pattern nil? "," block_given? ","Run tests + ","@name == ","@name keys first ","@name keys ","@name values first ","@name values ","@name is_a? ","@name keys first  == ","@name keys first  keys first ","@name keys first  keys ","@name keys first  values first ","@name keys first  values ","@name keys first  is_a? "]}," Rake TestTask test_files=":{"type":"method","name":"test_files=","children":[],"call":[]}," Rake TaskLib paste":{"type":"method","name":"paste","children":[],"call":["(send\n  (send\n    (lvar :a) :to_s) :+\n  (send\n    (lvar :b) :to_s)) intern ","a to_s + ","b to_s ","a to_s "]}," Rake TaskLib clone":{"type":"method","name":"clone","children":[],"call":["sibling instance_variable_set ","value dup "," instance_variable_get "," instance_variables each "," instance_variables "," class new "," class "," class new  instance_variable_set "," instance_variable_get  dup "]}," Rake run_tests":{"type":"method","name":"run_tests","children":[],"call":[" assert "," puts ","ex backtrace ","ex message "," load ","Dir  [] each ","Dir  [] ","$stderr puts "," require ","Rake  glob each ","Rake  glob ","FileList  glob each ","FileList  glob "]}," Rake RDocTask rdoc_target":{"type":"method","name":"rdoc_target","children":[],"call":[" rdoc_dir "]}," Rake RDocTask option_string":{"type":"method","name":"option_string","children":[],"call":[" option_list join "," option_list "]}," Rake RDocTask option_list":{"type":"method","name":"option_list","children":[],"call":["result << << "," template ","result << "," title "," main ","@options dup "," quote ","@options include? ! ","@options include? "," inline_source ","@options dup  << << ","@options dup  << "]}," Rake RDocTask define":{"type":"method","name":"define","children":[],"call":[" sh "," option_list join "," option_list "," rm_r "," file ","@rdoc_files + "," rdoc_target "," task "," name "," directory "," paste "," rdoc_dir "," desc "," name to_s != "," name to_s ","RDoc RDoc  new document ","RDoc RDoc  new "," require ","args join "," option_list + ","Rake  application rakefile ","Rake  application ","@before_running_rdoc call "," rdoc_task_name "," clobber_task_name "," rerdoc_task_name "," rdoc_task_name != "," option_list +  join "]}," Rake RDocTask initialize":{"type":"method","name":"initialize","children":[],"call":[" define "," block_given? ","Rake FileList  new "," raise ","invalid_options join ","invalid_options empty? ! ","invalid_options empty? ","(send\n  (send\n    (lvar :name) :keys) :map) - ","k to_sym ","name keys map ","name keys ","name is_a? ","(send\n  (send\n    (lvar :name) :keys) :map) -  join ","(send\n  (send\n    (lvar :name) :keys) :map) -  empty? ! ","(send\n  (send\n    (lvar :name) :keys) :map) -  empty? "]}," Rake PackageTask zip_file":{"type":"method","name":"zip_file","children":[],"call":[" package_name "]}," Rake PackageTask tgz_file":{"type":"method","name":"tgz_file","children":[],"call":[" package_name "]}," Rake PackageTask package_dir_path":{"type":"method","name":"package_dir_path","children":[],"call":[" package_name "," package_dir "]}," Rake PackageTask package_name":{"type":"method","name":"package_name","children":[],"call":[]}," Rake PackageTask define":{"type":"method","name":"define","children":[],"call":[" safe_ln "," rm_f "," mkdir_p ","File  directory? ","File  exist? ! ","File  exist? ","File  dirname ","File  join "," package_dir_path ","@package_files each "," package_dir "," file "," directory "," sh "," package_name "," zip_file "," chdir ","(send nil :package_dir_path) + "," package_files "," task "," need_zip "," tgz_file "," need_tar "," rm_r "," desc ","noversion == "," fail ","@version nil? ","(array\n  (send nil :need_tar)\n  (send nil :tgz_file)\n  (str \"z\")) each "," tar_bz2_file "," need_tar_bz2 "," tar_gz_file "," need_tar_gz "," tar_xz_file "," need_tar_xz "," mv "," without_parent_dir "," target_dir "," working_dir "," saFile  join e_ln "," rm_File  join  ","@package_File  join iles each "," File  join ile "," zip_File  join ile "," package_File  join iles "," tgz_File  join ile "," File  join ail ","(array\n  (send nil :need_tar)\n  (send nil :tgz_File  join ile)\n  (str \"z\")) each "," tar_bz2_File  join ile "," tar_gz_File  join ile "," tar_xz_File  join ile "]}," Rake PackageTask init":{"type":"method","name":"init","children":[],"call":["Rake FileList  new "]}," Rake PackageTask initialize":{"type":"method","name":"initialize","children":[],"call":[" define ","name nil? "," block_given? "," init "]}," Rake GemPackageTask gem_file":{"type":"method","name":"gem_file","children":[],"call":[" package_name ","@gem_spec platform ","@gem_spec platform == "]}," Rake GemPackageTask define":{"type":"method","name":"define","children":[],"call":[" mv "," gem_file "," package_dir "," verbose ","Gem Builder  new build ","Gem Builder  new "," gem_spec "," when_writing "," file ","(send nil :package_dir) + ","@gem_spec files "," task "," desc "]}," Rake GemPackageTask init":{"type":"method","name":"init","children":[],"call":[" gem_spec files "," gem_spec ","gem version ","gem name "]}," Rake GemPackageTask initialize":{"type":"method","name":"initialize","children":[],"call":[" define "," block_given? "," init "]}," Sys with_verbose":{"type":"method","name":"with_verbose","children":[],"call":[]}," Sys for_matching_files":{"type":"method","name":"for_matching_files","children":[],"call":[" makedirs ","File  directory? ! ","File  directory? ","File  dirname ","File  join ","Dir  [] each ","Dir  [] ","Rake  glob each ","Rake  glob ","FileList  glob each ","FileList  glob "]}," Sys for_files":{"type":"method","name":"for_files","children":[],"call":["Dir  [] each ","Dir  [] ","wildcards each ","Rake  glob each ","Rake  glob ","FileList  glob each ","FileList  glob "]}," Sys verbose":{"type":"method","name":"verbose","children":[],"call":[" with_verbose "]}," Sys quiet":{"type":"method","name":"quiet","children":[],"call":[" with_verbose "]}," Sys log":{"type":"method","name":"log","children":[],"call":[" puts "," print ","$stderr puts "]}," Sys split_all":{"type":"method","name":"split_all","children":[],"call":[" split_all + "," split_all ","head == ","tail == ","File  split "]}," Sys indir":{"type":"method","name":"indir","children":[],"call":["Dir  chdir ","Dir  pwd "]}," Sys makedirs":{"type":"method","name":"makedirs","children":[],"call":["File  makedirs "," log ","dirs each "]}," Sys delete_all":{"type":"method","name":"delete_all","children":[],"call":["File  delete "," log ","Dir  delete "," delete_all ","subfn == ","Dir  [] each ","Dir  [] ","File  directory? ","File  exist? ! ","File  exist? ","wildcards each ","Rake  glob each ","Rake  glob ","FileList  glob each ","FileList  glob "]}," Sys delete":{"type":"method","name":"delete","children":[],"call":["File  delete "," log ","Dir  delete ","File  directory? ","Dir  [] each ","Dir  [] ","wildcards each ","Rake  glob each ","Rake  glob ","FileList  glob each ","FileList  glob "]}," Sys symlink_files":{"type":"method","name":"symlink_files","children":[],"call":[" link "," for_matching_files "]}," Sys symlink":{"type":"method","name":"symlink","children":[],"call":["File  symlink "," log "]}," Sys link_files":{"type":"method","name":"link_files","children":[],"call":[" link "," for_matching_files "]}," Sys link":{"type":"method","name":"link","children":[],"call":["File  link "," log "]}," Sys copy_files":{"type":"method","name":"copy_files","children":[],"call":[" copy "," for_matching_files "]}," Sys copy":{"type":"method","name":"copy","children":[],"call":["File  copy "," log "]}," Sys ruby":{"type":"method","name":"ruby","children":[],"call":[" run ","args join "]}," Sys run":{"type":"method","name":"run","children":[],"call":[" fail "," system "," log "]}," Sys install":{"type":"method","name":"install","children":[],"call":["File  install ","Dir  [] each ","Dir  [] ","Rake  glob each ","Rake  glob ","FileList  glob each ","FileList  glob "]}," Rake SshFilePublisher upload":{"type":"method","name":"upload","children":[],"call":[" sh ","@files each "]}," Rake SshFilePublisher initialize":{"type":"method","name":"initialize","children":[],"call":[]}," Rake SshFreshDirPublisher upload":{"type":"method","name":"upload","children":[],"call":[" sh "]}," Rake SshDirPublisher upload":{"type":"method","name":"upload","children":[],"call":[" sh "]}," Rake SshDirPublisher initialize":{"type":"method","name":"initialize","children":[],"call":[]}," Rake RubyForgePublisher initialize":{"type":"method","name":"initialize","children":[],"call":[]}," SshFilePublisher upload":{"type":"method","name":"upload","children":[],"call":[" run ","@files each "]}," SshFilePublisher initialize":{"type":"method","name":"initialize","children":[],"call":[]}," SshFreshDirPublisher upload":{"type":"method","name":"upload","children":[],"call":[" run "]}," SshDirPublisher upload":{"type":"method","name":"upload","children":[],"call":[" run "]}," SshDirPublisher initialize":{"type":"method","name":"initialize","children":[],"call":[]}," CompositePublisher upload":{"type":"method","name":"upload","children":[],"call":["p upload ","@publishers each "]}," CompositePublisher add":{"type":"method","name":"add","children":[],"call":["@publishers << "]}," CompositePublisher initialize":{"type":"method","name":"initialize","children":[],"call":[]}," Rake FtpUploader upload":{"type":"method","name":"upload","children":[],"call":["@ftp putbinaryfile ","File  directory? "," makedirs ","File  dirname "," puts ","$stderr puts ","File  File  dirname ectory? "," makeFile  dirname s ","File  File  dirname name "]}," Rake FtpUploader close":{"type":"method","name":"close","children":[],"call":["@ftp close "]}," Rake FtpUploader upload_files":{"type":"method","name":"upload_files","children":[],"call":[" upload ","Dir  [] each ","Dir  [] ","Rake  glob each ","Rake  glob "," fail ","FileList  glob each ","FileList  glob "]}," Rake FtpUploader makedirs":{"type":"method","name":"makedirs","children":[],"call":["@ftp mkdir "," puts ","@created []= ","@created [] nil? ","@created [] ","File  join ","route << ","File  split each ","File  split ","$stderr puts "]}," Rake FtpUploader initialize":{"type":"method","name":"initialize","children":[],"call":["@ftp chdir "," makedirs ","Net FTP  new ","Hash  new ","Net FTP  new  chdir "]}," Rake FtpUploader connect":{"type":"method","name":"connect","children":[],"call":["up close "," new "," new  close "]}," Rake FtpFile determine_time":{"type":"method","name":"determine_time","children":[],"call":["Time  mktime ","elements [] ","el nil? ","elements collect ","elements []= ","today year ","today year - ","elements [] > ","today month "," class date today "," class date "," class ","elements [] nil? ","ParseDate  parsedate ","Time  parse ","now year - ","now year ","result > ","d3 split "," class time now "," class time ","(str \":\") !~ ","ParseDate  parsedate  [] ","ParseDate  parsedate  collect ","ParseDate  parsedate  []= "," class date today  year "," class date today  year - ","ParseDate  parsedate  [] > "," class date today  month "," class date  class date today  ","ParseDate  parsedate  [] nil? "," class time now  year - "," class time now  year ","Time  parse  > "," class time  class time now  "]}," Rake FtpFile parse_mode":{"type":"method","name":"parse_mode","children":[],"call":["2 * + ","m [] == ","m [] ","2 * ","(irange\n  (int 1)\n  (int 9)) each "]}," Rake FtpFile symlink?":{"type":"method","name":"symlink?","children":[],"call":["@mode [] == ","@mode [] "]}," Rake FtpFile mode":{"type":"method","name":"mode","children":[],"call":[" parse_mode "]}," Rake FtpFile directory?":{"type":"method","name":"directory?","children":[],"call":["@mode [] == ","@mode [] "]}," Rake FtpFile path":{"type":"method","name":"path","children":[],"call":["File  join "]}," Rake FtpFile initialize":{"type":"method","name":"initialize","children":[],"call":[" determine_time ","size to_i ","entry split "]}," Rake FtpFile date":{"type":"method","name":"date","children":[],"call":[]}," Rake CompositePublisher upload":{"type":"method","name":"upload","children":[],"call":["p upload ","@publishers each "]}," Rake CompositePublisher add":{"type":"method","name":"add","children":[],"call":["@publishers << "]}," Rake CompositePublisher initialize":{"type":"method","name":"initialize","children":[],"call":[]}," Rake RuleRecursionOverflowError message":{"type":"method","name":"message","children":[],"call":[" + + + "," + + ","@targets reverse join ","@targets reverse "," + "]}," Rake RuleRecursionOverflowError add_target":{"type":"method","name":"add_target","children":[],"call":["@targets << "]}," Rake RuleRecursionOverflowError initialize":{"type":"method","name":"initialize","children":[],"call":[]}," Rake TestTask find_fix_file":{"type":"method","name":"find_fix_file","children":[],"call":["File  exist? ","File  join ","$LOAD_PATH each "]}," Rake TestTask fix":{"type":"method","name":"fix","children":[],"call":[" find_fix_file "," find_file "," ruby_version "]}," Test Unit Collector Dir collect_file":{"type":"method","name":"collect_file","children":[],"call":["$: delete_at ","$: rindex "," add_suite ","t suite "," find_test_cases each "," find_test_cases "," require ","@req require ","$: unshift ","$: first == ","$: first ","File  dirname ","File  expand_path ","File  File  dirname name "]}," Rake PackageTask tar_bz2_file":{"type":"method","name":"tar_bz2_file","children":[],"call":[" package_name "]}," Rake PackageTask tar_gz_file":{"type":"method","name":"tar_gz_file","children":[],"call":[" package_name "]}," RakeApp add_loader":{"type":"method","name":"add_loader","children":[],"call":["@loaders []= ","ext =~ "]}," RakeApp load_imports":{"type":"method","name":"load_imports","children":[],"call":["@imported << ","loader load ","@loaders [] ","File  extname ","Task  [] invoke ","Task  [] ","Task  task_defined? ","@imported member? ","@pending_imports shift ","File  File  extname name "]}," RakeApp add_import":{"type":"method","name":"add_import","children":[],"call":["@pending_imports << "]}," Rake DefaultLoader load":{"type":"method","name":"load","children":[],"call":["Kernel  load ","File  expand_path ","Rake  load_rakefile ","Rake Environment  load_rakefile "]}," Rake FileList import":{"type":"method","name":"import","children":[],"call":[]}," Rake FileList partition":{"type":"method","name":"partition","children":[],"call":["FileList  new import ","result [] ","FileList  new ","@items partition "," resolve "," class new import "," class new "," class ","@items partition  [] "]}," Rake FileList ext":{"type":"method","name":"ext","children":[],"call":["fn ext "," collect "]}," Rake FileList *":{"type":"method","name":"*","children":[],"call":["FileList  new import ","FileList  new ","@items * "," class new import "," class new "," class "]}," Rake FileList to_ary":{"type":"method","name":"to_ary","children":[],"call":[" resolve "," to_a "]}," Rake FileList to_a":{"type":"method","name":"to_a","children":[],"call":[" resolve "]}," Rake FileList ==":{"type":"method","name":"==","children":[],"call":[" to_ary == "," to_ary "]}," import":{"type":"method","name":"import","children":[],"call":["Rake  application add_import ","Rake  application ","fns each "]}," Rake Cloneable clone":{"type":"method","name":"clone","children":[],"call":["sibling instance_variable_set ","value rake_dup "," instance_variable_get "," instance_variables each "," instance_variables "," class new "," class ","value clone ","sibling freeze "," frozen? "," dup "," class new  instance_variable_set "," dup  instance_variable_set "," instance_variable_get  rake_dup "," instance_variable_get  clone "," class new  freeze "," dup  freeze "]}," Rake application=":{"type":"method","name":"application=","children":[],"call":[" fail "]}," Rake application":{"type":"method","name":"application","children":[],"call":["RakeApp  new ","Rake Application  new "]}," String ext":{"type":"method","name":"ext","children":[],"call":[" + ","1 + "," dup sub! "," dup ",". + ","newext =~ ","newext != ","(str \".\") include? "," chomp << "," chomp ","File  extname ",". +  =~ ",". +  != "]}," rake_dup":{"type":"method","name":"rake_dup","children":[],"call":[]}," Kernel rake_dup":{"type":"method","name":"rake_dup","children":[],"call":[" dup "]}," Rake TestTask find_file":{"type":"method","name":"find_file","children":[],"call":["File  exist? ","File  join ","$LOAD_PATH each "]}," Rake TestTask rake_loader":{"type":"method","name":"rake_loader","children":[],"call":[" fail "," find_file "]}," Rake MakefileLoader process_line":{"type":"method","name":"process_line","children":[],"call":[" file ","args split ","args nil? ","line split ","file_tasks strip split each ","file_tasks strip split ","file_tasks strip "," respace ","args split map ","file_tasks scan "," respace s strip split each "," respace s strip split "," respace s strip "," respace s scan "]}," Rake MakefileLoader load":{"type":"method","name":"load","children":[],"call":[" process_line ","buffer != ","buffer sub! ","buffer =~ ","buffer << ","line =~ ","mf each "," open ","lines split each ","lines split ","lines gsub! ","mf read ","lines each_line ","File  read ","mf read  split each ","File  read  split each ","mf read  split ","File  read  split ","mf read  gsub! ","File  read  gsub! ","mf read  each_line ","File  read  each_line "]}," Object const_missing":{"type":"method","name":"const_missing","children":[],"call":[" rake_original_const_missing ","Rake  application const_warning ","Rake  application "]}," Rake Application run":{"type":"method","name":"run","children":[],"call":[" exit "," puts ","str =~ ","ex backtrace find ","ex backtrace ","ex backtrace join ","ex message ","Rake Task  [] invoke ","Rake Task  [] ","tasks each "," display_prerequisites "," display_tasks_and_comments "," load_rakefile "," collect_tasks "," handle_options "," options trace "," options "," options show_prereqs "," options show_tasks ","$stderr puts "," [] invoke "," [] "," top_level "," init "," standard_exception_handling "," thread_pool join "," thread_pool ","ThreadHistoryDisplay  new show ","ThreadHistoryDisplay  new "," thread_pool history "," options job_stats == "," options job_stats ","stats [] "," thread_pool statistics "," thread_pool gather_history "," argv "," collect_tasks  each "," display_ collect_tasks _and_comments "," collect_ collect_tasks  "," options show_ collect_tasks  "," options job_ thread_pool statistics  == "," options job_ thread_pool statistics  "," thread_pool statistics  [] "]}," Rake Application rakefile_location":{"type":"method","name":"rakefile_location","children":[],"call":["str =~ ","ex backtrace find ","ex backtrace "," fail ","backtrace find ","re source "," windows? ","t [] ","backtrace map "]}," Rake Application const_warning":{"type":"method","name":"const_warning","children":[],"call":[" puts ","(str \"WARNING: Deprecated reference to top-level constant '\") + "," rakefile_location ","@const_warning ! ","$stderr puts "]}," Rake Application add_loader":{"type":"method","name":"add_loader","children":[],"call":["@loaders []= ","ext =~ "]}," Rake Application load_imports":{"type":"method","name":"load_imports","children":[],"call":["@imported << ","loader load ","@loaders [] ","File  extname ","Rake Task  [] invoke ","Rake Task  [] ","Rake Task  task_defined? ","@imported member? ","@pending_imports shift ","fn_task invoke "," lookup ","fn_task reenable ","fn_task needed? ","File  File  extname name ","@pending_imports shift _task invoke "," lookup  invoke ","@pending_imports shift _task reenable "," lookup  reenable ","@pending_imports shift _task needed? "," lookup  needed? "]}," Rake Application add_import":{"type":"method","name":"add_import","children":[],"call":["@pending_imports << "]}," Rake Application collect_tasks":{"type":"method","name":"collect_tasks","children":[],"call":["tasks push ","tasks size == ","tasks size ","tasks << ","ENV  []= ","arg =~ ","ARGV  each ","@top_level_tasks push ","@top_level_tasks size == ","@top_level_tasks size ","@top_level_tasks << ","argv each "," default_task_name ","@top_level_tasks empty? "]}," Rake Application load_rakefile":{"type":"method","name":"load_rakefile","children":[],"call":[" load_imports "," load "," puts ","Dir  pwd "," fail ","RAKEFILES  join ","Dir  pwd == ","Dir  chdir "," have_rakefile ! "," have_rakefile "," add_import ","Dir  [] each ","Dir  [] "," options rakelib each "," options rakelib "," options ","File  expand_path "," options silent "," options nosearch ","@rakefile != ","@rakefiles join "," raw_load_rakefile "," standard_exception_handling "]}," Rake Application handle_options":{"type":"method","name":"handle_options","children":[],"call":[" do_option ","opts each ","GetoptLong  new "," command_line_options "," options silent "," options "," options dryrun "," options trace "," options show_prereqs "," options show_tasks "," options classic_namespace "," options rakelib= "," raise ","ex message ","ex class ","opts parse ","opts on "," standard_rake_options each "," standard_rake_options "," exit "," puts ","opts on_tail ","opts separator ","opts banner= ","OptionParser  new ","(send\n  (const nil :OptionParser) :new) parse! ","opts environment ","Rake DSL  include_in_top_scope "," options top_level_dsl "," options top_level_dsl= "," options trace_output= ","Rake  application name ","Rake  application ","(send\n  (const nil :OptionParser) :new) parse "," set_default_options ","GetoptLong  new  each ","OptionParser  new  each ","GetoptLong  new  parse ","OptionParser  new  parse ","GetoptLong  new  on ","OptionParser  new  on ","GetoptLong  new  on_tail ","OptionParser  new  on_tail ","GetoptLong  new  separator ","OptionParser  new  separator ","GetoptLong  new  banner= ","OptionParser  new  banner= ","GetoptLong  new  environment ","OptionParser  new  environment "]}," Rake Application do_option":{"type":"method","name":"do_option","children":[],"call":[" fail "," require "," exit "," puts "," verbose "," usage ","RAKEFILES  << ","RAKEFILES  clear ","$: push "," help "," nowrite "," options classic_namespace= "," options "," options trace= "," options show_tasks= "," options silent= "," options rakelib= ","value split "," options show_prereqs= "," options nosearch= "," options dryrun= "," options show_task_pattern= ","Regexp  new "," raise "," rake_require ","@rakefiles << ","@rakefiles clear "," options full_description= "]}," Rake Application command_line_options":{"type":"method","name":"command_line_options","children":[],"call":["lst [] ","OPTIONS  collect "]}," Rake Application display_prerequisites":{"type":"method","name":"display_prerequisites","children":[],"call":[" puts ","t prerequisites each ","t prerequisites ","t name ","Rake Task  tasks each ","Rake Task  tasks "," tasks each "," tasks "," name "]}," Rake Application display_tasks_and_comments":{"type":"method","name":"display_tasks_and_comments","children":[],"call":[" printf ","t comment ","t name ","Rake Task  tasks each ","Rake Task  tasks ","(send\n  (block\n    (send\n      (send\n        (const\n          (const nil :Rake) :Task) :tasks) :select)\n    (args\n      (arg :t))\n    (send\n      (lvar :t) :comment)) :collect) max ","t name length ","(send\n  (send\n    (const\n      (const nil :Rake) :Task) :tasks) :select) collect ","Rake Task  tasks select ","displayable_tasks each ","(send\n  (lvar :displayable_tasks) :collect) max ","displayable_tasks collect ","t name =~ "," options show_task_pattern "," options "," tasks select "," tasks "," name "," truncate ","t name_with_args ","80 - - - ","80 - - ","80 - "," name size ","t name_with_args length "," puts ","t full_comment split each ","t full_comment split ","t full_comment "," options full_description "," terminal_width - - - "," terminal_width - - "," terminal_width - "," terminal_width "," truncate_output? "," fail "," options show_tasks ","t locations each ","t locations ","comment split each ","comment split "," options show_all_tasks ","(send\n  (lvar :displayable_tasks) :map) max ","displayable_tasks map "," terminal_(send\n  (block\n    (send\n      (send\n        (const\n          (const nil :Rake) :Task) :tasks) :select)\n    (args\n      (arg :t))\n    (send\n      (lvar :t) :comment)) :collect) max  - - - "," terminal_(send\n  (lvar :displayable_tasks) :collect) max  - - - "," terminal_(send\n  (block\n    (send\n      (send\n        (const\n          (const nil :Rake) :Task) :tasks) :select)\n    (args\n      (arg :t))\n    (send\n      (lvar :t) :comment)) :collect) max  - - "," terminal_(send\n  (lvar :displayable_tasks) :collect) max  - - "," terminal_(send\n  (block\n    (send\n      (send\n        (const\n          (const nil :Rake) :Task) :tasks) :select)\n    (args\n      (arg :t))\n    (send\n      (lvar :t) :comment)) :collect) max  - "," terminal_(send\n  (lvar :displayable_tasks) :collect) max  - "," terminal_(send\n  (block\n    (send\n      (send\n        (const\n          (const nil :Rake) :Task) :tasks) :select)\n    (args\n      (arg :t))\n    (send\n      (lvar :t) :comment)) :collect) max  "," terminal_(send\n  (lvar :displayable_tasks) :collect) max  "]}," Rake Application help":{"type":"method","name":"help","children":[],"call":[" printf ","long + ","desc =~ ","mode == ","OPTIONS  sort each ","OPTIONS  sort "," puts "," usage ","long +  + "]}," Rake Application usage":{"type":"method","name":"usage","children":[],"call":[" puts "]}," Rake Application have_rakefile":{"type":"method","name":"have_rakefile","children":[],"call":["File  exist? ","RAKEFILES  each ","fn == ","@rakefiles each ","others first ","others size == ","others size ","Dir  glob ","Rake  glob ","FileList  glob ","Dir  glob  first ","Rake  glob  first ","FileList  glob  first ","Dir  glob  size == ","Rake  glob  size == ","FileList  glob  size == ","Dir  glob  size ","Rake  glob  size ","FileList  glob  size "]}," Rake Application initialize":{"type":"method","name":"initialize","children":[],"call":["Rake  application= ","Rake DefaultLoader  new "," add_loader ","DefaultLoader  new ","Dir  pwd ","DEFAULT_RAKEFILES  dup ","STDOUT  tty? ","ENV  [] to_i ","ENV  [] ","ARGV  dup "," set_default_options "]}," Time <=>":{"type":"method","name":"<=>","children":[],"call":[" pre_early_time_compare ","other <=> -@ ","other <=> ","Rake EarlyTime  === "," rake_original_time_compare ","Rake LateTime  === "]}," Rake EarlyTime to_s":{"type":"method","name":"to_s","children":[],"call":[]}," Rake EarlyTime <=>":{"type":"method","name":"<=>","children":[],"call":[]}," Rake each_dir_parent":{"type":"method","name":"each_dir_parent","children":[],"call":["File  dirname ","dir length ","dir length != ","dir != ","File  File  dirname name ","File  dirname  length ","File  dirname  length != ","File  dirname  != "]}," Rake FileList egrep":{"type":"method","name":"egrep","children":[],"call":[" puts "," block_given? ","pattern match ","inf each "," open "," each ","$stderr puts ","File  open "]}," file_create":{"type":"method","name":"file_create","children":[],"call":["Rake FileCreationTask  define_task "]}," Rake FileCreationTask timestamp":{"type":"method","name":"timestamp","children":[],"call":[]}," Rake FileCreationTask needed?":{"type":"method","name":"needed?","children":[],"call":["File  exist? ! ","File  exist? "," name "]}," Rake FileTask out_of_date?":{"type":"method","name":"out_of_date?","children":[],"call":["Rake Task  [] timestamp > ","Rake Task  [] timestamp ","Rake Task  [] ","@prerequisites any? "," application [] timestamp > "," application [] timestamp "," application [] "," application ","prereq_task timestamp > ","prereq_task timestamp ","prereq_task needed? ","prereq_task instance_of? ","@application options build_all ","@application options "," all_prerequisite_tasks any? "," all_prerequisite_tasks "," application []  timestamp > "," application []  timestamp "," application []  needed? "," application []  instance_of? "]}," Rake FileTask timestamp":{"type":"method","name":"timestamp","children":[],"call":["File  mtime "," name to_s "," name ","File  exist? "]}," Rake FileTask needed?":{"type":"method","name":"needed?","children":[],"call":[" out_of_date? "," timestamp ","File  exist? "," name ","File  exist? ! ","@application options build_all ","@application options "]}," Rake Task resolve_args":{"type":"method","name":"resolve_args","children":[],"call":["Proc  === ","Regexp  === ","String  === ","args [] ","args keys [] ","args keys "," fail ","args size < ","args size ","args keys join ","args size > "]}," Rake Task make_sources":{"type":"method","name":"make_sources","children":[],"call":[" fail ","ext inspect ","ext call ","task_name sub ","extensions collect "]}," Rake Task attempt_rule":{"type":"method","name":"attempt_rule","children":[],"call":["task sources= ","FileTask  define_task ","parent name "," enhance_with_matching_rule ","level + ","sources first ","Rake Task  task_defined? ","File  exist? ","sources collect "," make_sources ","FileTask  define_task  sources= ","task  make_sources = ","FileTask  define_FileTask  define_task  "," enhance_with_matching_rule  name "," make_sources  first ","Rake Task  FileTask  define_task _defined? "," make_sources  collect "," make_ make_sources  "]}," Rake Task enhance_with_matching_rule":{"type":"method","name":"enhance_with_matching_rule","children":[],"call":[" fail ","ex add_target "," attempt_rule ","pattern match ","RULES  each ","level >= "]}," Rake Task lookup":{"type":"method","name":"lookup","children":[],"call":[" new ","TASKS  [] ","task_name to_s ","task_task_name to_s  to_s "]}," Rake Task create_rule":{"type":"method","name":"create_rule","children":[],"call":["RULES  << ","Regexp  new ","Regexp  quote + ","Regexp  quote ","String  === "," resolve_args ","Rake  application create_rule ","Rake  application "]}," Rake Task define_task":{"type":"method","name":"define_task","children":[],"call":["t enhance ","t add_comment "," lookup ","d to_s ","deps collect ","String  === ","Symbol  === "," resolve_args ","Rake  application define_task ","Rake  application "," lookup  enhance "," lookup  add_commen lookup  ","d  lookup o_s ","deps collec lookup  ","S lookup ring  === ","Rake  applica lookup ion define_ lookup ask ","Rake  applica lookup ion "]}," Rake Task task_defined?":{"type":"method","name":"task_defined?","children":[],"call":["TASKS  [] ","task_name to_s ","Rake  application lookup != ","Rake  application lookup ","Rake  application ","task_name to_s  to_s "]}," Rake Task []":{"type":"method","name":"[]","children":[],"call":[" fail ","Rake FileTask  define_task ","File  exist? "," enhance_with_matching_rule ","TASKS  [] ","task_name to_s ","Rake  application [] ","Rake  application ","Rake FileTask  define_ enhance_with_matching_rule  ","Rake FileTask  define_TASKS  []  "," enhance_with_matching_rule _name to_s ","TASKS  [] _name to_s ","task_name to_s  to_s "]}," Rake Task tasks":{"type":"method","name":"tasks","children":[],"call":["Rake Task  [] ","TASKS  keys sort collect ","TASKS  keys sort ","TASKS  keys ","Rake  application tasks ","Rake  application "]}," Rake Task clear":{"type":"method","name":"clear","children":[],"call":["RULES  clear ","TASKS  clear ","Rake  application clear ","Rake  application "," clear_actions "," clear_prerequisites "," clear_comments "," clear_args "]}," Rake Task investigation":{"type":"method","name":"investigation","children":[],"call":["result << ","(send\n  (ivar :@prerequisites) :collect) max ","Rake Task  [] timestamp ","Rake Task  [] ","@prerequisites collect ","p timestamp ","p name ","prereqs each ","a timestamp <=> ","b timestamp ","a timestamp ","prereqs sort! "," timestamp "," needed? "," class "," name "," application [] timestamp "," application [] "," application ","(send\n  (send nil :prerequisite_tasks) :collect) max ","pre timestamp "," prerequisite_tasks collect "," prerequisite_tasks ","(send\n  (send nil :prerequisite_tasks) :map) max "," prerequisite_tasks map "," prerequisite_tasks map max ","------------------------------\n dup ","------------------------------\n dup  << "," prerequisite_tasks  each "," prerequisite_tasks  sort! "]}," Rake Task add_comment":{"type":"method","name":"add_comment","children":[],"call":["@comment << ","$last_comment ! ","comment ! ","@full_comment =~ ","@full_comment << ","@comments << ","@comments include? ","comment nil? "]}," Rake Task timestamp":{"type":"method","name":"timestamp","children":[],"call":["Time  now ","(send\n  (ivar :@prerequisites) :collect) max ","Rake Task  [] timestamp ","Rake Task  [] ","@prerequisites collect "," application [] timestamp "," application [] "," application ","(send\n  (send nil :prerequisite_tasks) :collect) max ","pre timestamp "," prerequisite_tasks collect "," prerequisite_tasks "]}," Rake Task needed?":{"type":"method","name":"needed?","children":[],"call":[]}," Rake Task execute":{"type":"method","name":"execute","children":[],"call":["act call ","@actions each "," class enhance_with_matching_rule "," name "," class ","@actions empty? "," puts "," application enhance_with_matching_rule "," application "," application options trace "," application options "," application options dryrun ","act arity ","$stderr puts "," application trace ","opts empty? ! ","opts empty? ","Hash  try_convert ","Hash  try_convert  empty? ! ","Hash  try_convert  empty? "]}," Rake Task format_trace_flags":{"type":"method","name":"format_trace_flags","children":[],"call":["( + + ","( + ","flags join ","flags empty? ","flags << "," needed? "]}," Rake Task invoke":{"type":"method","name":"invoke","children":[],"call":[" execute "," needed? ","Rake Task  [] invoke ","Rake Task  [] ","@prerequisites each "," puts "," format_trace_flags "," name "," invoke_prerequisites "," application options trace "," application options "," application ","@lock synchronize "," invoke_with_call_chain ","TaskArguments  new "," arg_names "]}," Rake Task name":{"type":"method","name":"name","children":[],"call":["@name to_s "]}," Rake Task enhance":{"type":"method","name":"enhance","children":[],"call":["@actions << "," block_given? "]}," Rake Task initialize":{"type":"method","name":"initialize","children":[],"call":["FileList  [] ","app current_scope ","Mutex  new ","task_name to_s ","Monitor  new "]}," Rake Task source":{"type":"method","name":"source","children":[],"call":["@sources first "," sources first "," sources "]}," Rake Task sources":{"type":"method","name":"sources","children":[],"call":[" prerequisites "]}," Module const_missing":{"type":"method","name":"const_missing","children":[],"call":[" rake_original_const_missing ","Rake  application const_warning ","Rake  application "]}," Rake Application options":{"type":"method","name":"options","children":[],"call":["OpenStruct  new "]}," Rake TaskManager make_sources":{"type":"method","name":"make_sources","children":[],"call":[" fail ","ext inspect ","ext call ","task_name sub ","extensions collect ","(send\n  (lvar :extensions) :collect) flatten ","task_name ext ","task_name pathmap ","ext arity == ","ext arity ","result flatten ","extensions map ","source == ","ext to_s ","ext call  == ","task_name sub  == "]}," Rake TaskManager attempt_rule":{"type":"method","name":"attempt_rule","children":[],"call":["task sources= ","FileTask  define_task ","parent name "," enhance_with_matching_rule ","level + ","sources first ","Rake Task  task_defined? ","File  exist? ","sources collect "," make_sources "," trace_rule ","sources map ","FileTask  define_task  sources= ","task  make_sources = ","FileTask  define_FileTask  define_task  "," enhance_with_matching_rule  name "," make_sources  first ","Rake Task  FileTask  define_task _defined? "," make_sources  collect "," make_ make_sources  "," make_sources  map "]}," Rake TaskManager generate_name":{"type":"method","name":"generate_name","children":[],"call":[]}," Rake TaskManager in_namespace":{"type":"method","name":"in_namespace","children":[],"call":["@scope pop ","NameSpace  new ","@scope push "," generate_name ","@scope tail ","Scope  new ","@scope tail  pop ","Scope  new  pop ","@scope tail  push ","Scope  new  push ","@scope tail  tail ","Scope  new  tail "]}," Rake TaskManager current_scope":{"type":"method","name":"current_scope","children":[],"call":["@scope dup "]}," Rake TaskManager lookup_in_scope":{"type":"method","name":"lookup_in_scope","children":[],"call":["@tasks [] ","(send\n  (send\n    (lvar :scope) :[]\n    (int 0)\n    (lvar :n)) :+\n  (array\n    (lvar :name))) join ","scope [] + ","scope [] ","n >= ","scope size ","scope tail ","scope empty? ","scope path_with_task_name "," loop ","@@tasks [] s [] ","(sescope size d\n  (sescope size d\n    (lvar :scope) :[]\n    (iscope size t 0)\n    (lvar :scope size )) :+\n  (array\n    (lvar :scope size ame))) joiscope size  ","(send\n  (send\n    (lvar :scope tail ) :[]\n    (int 0)\n    (lvar :n)) :+\n  (array\n    (lvar :name))) join ","scope tail  [] + ","scope tail  [] ","scope size  >= ","scope tail  size ","scope tail  tail ","scope tail  empty? ","scope path_with_@tasks [] _name ","scope path_with_task_scope size ame ","scope tail  path_with_task_name "]}," Rake TaskManager lookup":{"type":"method","name":"lookup","children":[],"call":[" lookup_in_scope ","task_name sub ","initial_scope [] ","initial_scope size - ","1 size ","initial_scope size ","task_name =~ ","task_name to_s ","initial_scope trim ","Scope  make ","task_name sub  sub ","task_name to_s  sub ","task_name sub  =~ ","task_name to_s  =~ ","task_name sub  to_s ","task_name to_s  to_s "]}," Rake TaskManager clear":{"type":"method","name":"clear","children":[],"call":["@rules clear ","@tasks clear "]}," Rake TaskManager tasks":{"type":"method","name":"tasks","children":[],"call":["t name ","@tasks values sort_by ","@tasks values "]}," Rake TaskManager enhance_with_matching_rule":{"type":"method","name":"enhance_with_matching_rule","children":[],"call":[" fail ","ex add_target "," attempt_rule ","pattern match ","@rules each ","level >= ","task | ","order_only nil? "," attempt_rule  | "]}," Rake TaskManager resolve_args":{"type":"method","name":"resolve_args","children":[],"call":["Proc  === ","Regexp  === ","String  === ","args [] ","args keys [] ","args keys "," fail ","args size < ","args size ","args keys join ","args size > ","needs respond_to? ","hash keys inspect ","hash keys ","hash size > ","hash size ","hash [] ","arg_names pop ","arg_names last is_a? ","arg_names last ","hash keys [] ","task_name is_a? ","args shift "," resolve_args_without_dependencies "," resolve_args_with_dependencies ","args pop ","args last is_a? ","args last ","hash []  respond_to? ","arg_names pop  keys inspect ","arg_names pop  keys ","arg_names pop  size > ","arg_names pop  size ","arg_names pop  [] ","arg_names pop  keys [] ","args keys []  is_a? ","hash keys []  is_a? ","args shift  is_a? "]}," Rake TaskManager synthesize_file_task":{"type":"method","name":"synthesize_file_task","children":[],"call":[" define_task ","File  exist? "]}," Rake TaskManager []":{"type":"method","name":"[]","children":[],"call":[" fail "," synthesize_file_task "," enhance_with_matching_rule "," lookup ","task_name to_s "," generate_message_for_undefined_task ","task_name to_s  to_s "]}," Rake TaskManager intern":{"type":"method","name":"intern","children":[],"call":["task_class new ","@tasks [] ","task_name to_s "]}," Rake TaskManager define_task":{"type":"method","name":"define_task","children":[],"call":["task enhance ","task add_comment ","task application= "," intern ","d to_s ","deps collect ","deps respond_to? ","task_class scope_name "," resolve_args ","task add_description ","task set_arg_names ","arg_names empty? "," get_description "," add_location ","Rake TaskManager  record_task_metadata ","deps map ","Scope  make ","definition_scope + ","@scope to_a ","task_name split reverse ","task_name split ","task_name is_a? ","task_class ancestors include? ! ","task_class ancestors include? ","task_class ancestors ","String  === ","Rake  from_pathname to_s ","Rake  from_pathname ","task | ","order_only nil? ","Task  format_deps "," intern  enhance "," intern  add_comment "," intern  application= "," intern _class scope_name "," intern  add_description "," intern  set_arg_names ","Rake TaskManager  record_ intern _metadata ","Scope  make  to_a "," intern _name split reverse ","task_class scope_name  split reverse "," intern _name split ","task_class scope_name  split "," intern _name is_a? ","task_class scope_name  is_a? "," intern _class ancestors include? ! "," intern _class ancestors include? "," intern _class ancestors "," intern  | "]}," Rake TaskManager create_rule":{"type":"method","name":"create_rule","children":[],"call":["@rules << ","Regexp  new ","Regexp  quote + ","Regexp  quote ","String  === "," resolve_args "]}," Rake TaskManager initialize":{"type":"method","name":"initialize","children":[],"call":["Array  new ","Hash  new ","Scope  make "]}," Rake NameSpace []":{"type":"method","name":"[]","children":[],"call":["@task_manager lookup "]}," Rake NameSpace initialize":{"type":"method","name":"initialize","children":[],"call":["scope_list dup "]}," namespace":{"type":"method","name":"namespace","children":[],"call":["Rake  application in_namespace ","Rake  application "]}," multitask":{"type":"method","name":"multitask","children":[],"call":["Rake MultiTask  define_task "]}," Rake MultiTask invoke_prerequisites":{"type":"method","name":"invoke_prerequisites","children":[],"call":["t join ","threads each ","Task  [] invoke ","Task  [] ","Thread  new ","@prerequisites collect "," application [] invoke "," application [] "," application "," application [] invoke_with_call_chain "," invoke_prerequisites_concurrently ","f call ","futures each "," application thread_pool future "," application thread_pool "]}," Rake FileTask scope_name":{"type":"method","name":"scope_name","children":[],"call":["Rake  from_pathname "]}," Rake Task scope_name":{"type":"method","name":"scope_name","children":[],"call":["(send\n  (lvar :scope) :+\n  (array\n    (lvar :task_name))) join ","scope + ","scope path_with_task_name "]}," Rake Task invoke_prerequisites":{"type":"method","name":"invoke_prerequisites","children":[],"call":[" application [] invoke "," application [] "," application ","@prerequisites each ","prereq invoke_with_call_chain ","task_args new_scope ","prereq arg_names "," prerequisite_tasks each "," prerequisite_tasks "," invoke_prerequisites_concurrently "," application options always_multitask "," application options ","p invoke_with_call_chain ","p arg_names ","@ application [] uisites each "," application []  invoke_with_call_chain "," application []  arg_names ","  application [] uisite_tasks each ","  application [] uisite_tasks "," invoke_ application [] uisites_concurrently "]}," Rake Task to_s":{"type":"method","name":"to_s","children":[],"call":[" name "]}," Rake original_dir":{"type":"method","name":"original_dir","children":[],"call":[" application original_dir "," application "]}," Rake RDocTask quote":{"type":"method","name":"quote","children":[],"call":[]}," Rake Application rake_require":{"type":"method","name":"rake_require","children":[],"call":[" fail ","loaded << "," load ","File  exist? ","File  join ","file_name + ","paths each ","loaded include? ","Rake  load_rakefile ","Rake Environment  load_rakefile "]}," Rake FileList pathmap":{"type":"method","name":"pathmap","children":[],"call":["fn pathmap "," collect "]}," String pathmap":{"type":"method","name":"pathmap","children":[],"call":["result << "," fail "," pathmap pathmap_replace "," pathmap ","% + "," pathmap_partial ","1 to_i "," =~ ","File  dirname ","File  basename ext ","File  basename ","spec scan ","spec nil? "," ext ","File  extname "," dup "," dup  << "]}," String pathmap_replace":{"type":"method","name":"pathmap_replace","children":[],"call":["result sub "," block_given? ","replacement == ","Regexp  new ","pair split ","patterns split each ","patterns split ","result sub  sub ","Regexp  new s split each ","Regexp  new s split "]}," String pathmap_partial":{"type":"method","name":"pathmap_partial","children":[],"call":["File  join ","partial empty? ","partial nil? ","dirs [] ","n < ","n > ","target pathmap_explode ","File  dirname ","dirs reverse [] reverse ","dirs reverse [] ","n -@ ","dirs reverse ","File  dirname pathmap_explode ","dirs []  empty? ","dirs []  nil? ","target pathmap_explode  [] ","File  dirname pathmap_explode  [] ","File  dirname  pathmap_explode ","target pathmap_explode  reverse [] reverse ","File  dirname pathmap_explode  reverse [] reverse ","target pathmap_explode  reverse [] ","File  dirname pathmap_explode  reverse [] ","target pathmap_explode  reverse ","File  dirname pathmap_explode  reverse "]}," String pathmap_explode":{"type":"method","name":"pathmap_explode","children":[],"call":["head pathmap_explode + ","head pathmap_explode ","head == ","tail == ","File  split "]}," Rake NameSpace tasks":{"type":"method","name":"tasks","children":[],"call":["@task_manager tasks ","@task_manager tasks_in_scope "]}," RakeFileUtils rake_check_options":{"type":"method","name":"rake_check_options","children":[],"call":[" raise ","h keys join ","h keys ","h empty? ","h delete ","optdecl each ","options dup ","options dup  keys join ","options dup  keys ","options dup  empty? ","options dup  delete ","optdecl eacoptions dup  "]}," RakeFileUtils rake_output_message":{"type":"method","name":"rake_output_message","children":[],"call":["$stderr puts "]}," RakeFileUtils rake_merge_option":{"type":"method","name":"rake_merge_option","children":[],"call":["args push ","args pop ","defaults update ","args last ","Hash  === "]}," Module rake_extension":{"type":"method","name":"rake_extension","children":[],"call":["$stderr puts "," instance_methods include? "," instance_methods ","method to_sym ","method to_s "," method_defined? ","WARNING: Possible conflict with Rake extension:  + "]}," Rake Application raw_load_rakefile":{"type":"method","name":"raw_load_rakefile","children":[],"call":[" load_imports "," add_import ","Dir  [] each ","Dir  [] "," options rakelib each "," options rakelib "," options "," load ","File  expand_path ","@rakefile != "," puts ","Dir  pwd "," options silent "," fail ","@rakefiles join "," options nosearch ","Dir  pwd == ","Dir  chdir "," have_rakefile ! "," have_rakefile "," glob "," options classic_namespace ","rakefile nil? "," system_dir "," directory? "," options load_system "," options ignore_system ! "," options ignore_system "," find_rakefile_location ","File  directory? ","Rake  load_rakefile "," print_rakefile_directory ","Rake Environment  load_rakefile "]}," Rake Application standard_exception_handling":{"type":"method","name":"standard_exception_handling","children":[],"call":[" exit ","$stderr puts ","str =~ ","ex backtrace find ","ex backtrace ","ex backtrace join "," options trace "," options ","ex message ","ex status "," name "," raise "," display_error_message "," exit_because_of_exception "]}," Rake Application top_level":{"type":"method","name":"top_level","children":[],"call":[" [] invoke "," [] "," top_level_tasks each "," top_level_tasks "," display_prerequisites "," options show_prereqs "," options "," display_tasks_and_comments "," options show_tasks "," standard_exception_handling "," invoke_task "," run_with_threads "]}," Rake Application init":{"type":"method","name":"init","children":[],"call":[" collect_tasks "," handle_options "," standard_exception_handling "," collect_command_line_tasks "]}," Rake FileList existing!":{"type":"method","name":"existing!","children":[],"call":["File  exists? ","@items select "," resolve ","File  exist? ","(send\n  (ivar :@items) :select) uniq ","(send\n  (ivar :@items) :select) uniq  select ","(send\n  (ivar :(send\n  (ivar :@items) :select) uniq ) :select) uniq "]}," Rake FileList existing":{"type":"method","name":"existing","children":[],"call":["File  exists? "," select ","File  exist? ","(send nil :select) uniq "]}," Rake FileList is_a?":{"type":"method","name":"is_a?","children":[],"call":["klass == "]}," Rake Application truncate":{"type":"method","name":"truncate","children":[],"call":["string [] + ","string [] ","width - ","string length <= ","string length ","(or\n  (send\n    (lvar :string) :[]\n    (int 0)\n    (send\n      (lvar :width) :-\n      (int 3)))\n  (str \"\")) + ","string nil? "]}," Rake Application parse_task_string":{"type":"method","name":"parse_task_string","children":[],"call":["3 split ","string =~ ","args << ","1 gsub ","remaining_args empty? ","string to_s ","3 split  << ","remaining_3 split  empty? "]}," Rake Application invoke_task":{"type":"method","name":"invoke_task","children":[],"call":["t invoke "," [] "," parse_task_string "," []  invoke "," parse_ [] ask_s [] ring "]}," Rake Task set_arg_names":{"type":"method","name":"set_arg_names","children":[],"call":["a to_sym ","args map "]}," Rake Task comment=":{"type":"method","name":"comment=","children":[],"call":[" add_description "," add_comment "]}," Rake Task add_description":{"type":"method","name":"add_description","children":[],"call":[" add_comment ","comment empty? ! ","comment empty? ","description strip ","description ! "," add_description strip  ","description strip  empty? ! ","description strip  empty? "]}," Rake Task invoke_with_call_chain":{"type":"method","name":"invoke_with_call_chain","children":[],"call":[" execute "," needed? "," invoke_prerequisites "," puts "," format_trace_flags "," name "," application options trace "," application options "," application ","@lock synchronize ","InvocationChain  append "," raise "," add_chain_to ","$stderr puts "," application trace ","Rake InvocationChain  append "]}," Rake Task arg_names":{"type":"method","name":"arg_names","children":[],"call":[]}," Rake Task arg_description":{"type":"method","name":"arg_description","children":[],"call":["(or\n  (send nil :arg_names)\n  (array)) join "," arg_names "," arg_names join "]}," Rake Task name_with_args":{"type":"method","name":"name_with_args","children":[],"call":[" name "," arg_description "]}," Rake Task inspect":{"type":"method","name":"inspect","children":[],"call":[" prerequisites join "," prerequisites "," name "," class "]}," Rake InvocationChain EmptyInvocationChain to_s":{"type":"method","name":"to_s","children":[],"call":[]}," Rake InvocationChain EmptyInvocationChain append":{"type":"method","name":"append","children":[],"call":["InvocationChain  new "," conj "]}," Rake InvocationChain EmptyInvocationChain member?":{"type":"method","name":"member?","children":[],"call":[]}," Rake InvocationChain prefix":{"type":"method","name":"prefix","children":[],"call":["@tail to_s "," tail to_s "," tail "]}," Rake InvocationChain append":{"type":"method","name":"append","children":[],"call":[" class new "," class "," fail "," to_s "," member? "," conj "]}," Rake InvocationChain to_s":{"type":"method","name":"to_s","children":[],"call":[" prefix "," head "]}," Rake InvocationChain member?":{"type":"method","name":"member?","children":[],"call":["@tail member? ","@value == "," tail member? "," tail "," head == "," head "]}," Rake InvocationChain initialize":{"type":"method","name":"initialize","children":[],"call":[]}," Rake TaskArguments lookup":{"type":"method","name":"lookup","children":[],"call":["@parent lookup ","ENV  [] ","name to_s upcase ","name to_s ","ENV  has_key? ","@hash [] ","@hash has_key? "]}," Rake TaskArguments inspect":{"type":"method","name":"inspect","children":[],"call":[" to_s "," class ","(send\n  (ivar :@hash) :map) join ","v to_s ","k to_s ","@hash map "]}," Rake TaskArguments to_s":{"type":"method","name":"to_s","children":[],"call":["@hash inspect "," inspect "]}," Rake TaskArguments to_hash":{"type":"method","name":"to_hash","children":[],"call":["@hash dup "]}," Rake TaskArguments method_missing":{"type":"method","name":"method_missing","children":[],"call":[" lookup ","sym to_sym "]}," Rake TaskArguments each":{"type":"method","name":"each","children":[],"call":["@hash each "]}," Rake TaskArguments []":{"type":"method","name":"[]","children":[],"call":[" lookup ","index to_sym "]}," Rake TaskArguments new_scope":{"type":"method","name":"new_scope","children":[],"call":[" class new "," class "," [] ","names collect ","values + "," extras ","names map "]}," Rake TaskArguments initialize":{"type":"method","name":"initialize","children":[],"call":["@hash []= ","values [] ","name to_sym ","names each_with_index ","values [] nil? ","values [] == "]}," Rake FtpFile time":{"type":"method","name":"time","children":[],"call":[]}," Rake Application directory?":{"type":"method","name":"directory?","children":[],"call":["File  directory? "]}," Rake Application win32_system_dir":{"type":"method","name":"win32_system_dir","children":[],"call":[" raise "," directory? ","File  join ","ENV  [] "]}," Rake Application standard_system_dir":{"type":"method","name":"standard_system_dir","children":[],"call":["File  join ","File  expand_path ","Win32  win32_system_dir "]}," Rake Application system_dir":{"type":"method","name":"system_dir","children":[],"call":[" standard_system_dir "," win32_system_dir "," windows? ","ENV  [] ","Win32  win32_system_dir ","Win32  windows? "]}," Rake Application glob":{"type":"method","name":"glob","children":[],"call":["Dir  [] each ","Dir  [] ","path gsub ","Rake  glob each ","Rake  glob ","FileList  glob each ","FileList  glob ","path tr "]}," Rake Application find_rakefile_location":{"type":"method","name":"find_rakefile_location","children":[],"call":["Dir  chdir ","Rake  original_dir ","Dir  pwd "," options nosearch "," options ","Dir  pwd == ","(lvasgn :fn\n  (send nil :have_rakefile)) ! "," have_rakefile ","(lvasgn : have_rakefile \n  (send nil :have_rakefile)) ! "]}," Rake Application standard_rake_options":{"type":"method","name":"standard_rake_options","children":[],"call":[" exit "," puts "," lambda "," verbose "," options trace= "," options "," options full_description= "," options show_task_pattern= ","Regexp  new "," options show_tasks= "," options ignore_system= "," options load_system= "," options silent= "," options nosearch= "," options trace_rules= "," raise "," rake_require "," require "," options rakelib= ","value split ","@rakefiles << ","@rakefiles clear "," options show_prereqs= ","$: push "," eval "," options dryrun= "," nowrite "," options classic_namespace= "," options ignore_deprecate= ","Rake TaskManager  record_task_metadata= ","Rake  verbose ","Rake  nowrite ","TaskManager  record_task_metadata= "," options top_level_dsl= ","value ! "," sort_options "," options show_all_tasks= "," select_tasks_to_show "," select_trace_output "," options backtrace= "," options suppress_backtrace_pattern= "," options always_multitask= "," options job_stats= ","value =~ "," options thread_pool_size= ","(send\n  (begin\n    (or\n      (lvar :value)\n      (int 2))) :to_i) max ","(or\n  (lvar :value)\n  (int 2)) to_i ","Turn on invoke/execute tracing, enable full backtrace.  + ","Display the tasks (matching optional PATTERN)  + ","Use standard project Rakefile search paths,  + ","Using system wide (global) rakefiles  + ","Suppress backtrace lines matching regexp PATTERN.  + ","Like --quiet, but also suppresses the  + ","Auto-import any .rake files in RAKELIBDIR.  + ","Display job statistics.  + ","Specifies the maximum number of tasks to execute in parallel.  + ","Execute some Ruby code,  + ","value - ","value < ","Rake  suggested_thread_count ","value to_i ","value == ","value nil? "," options build_all= ","Display the tasks (matching optional PATTERN)  + + ","Dir  pwd ","Dir  chdir ","Rake  suggested_thread_count  split ","value to_i  split ","Rake  suggested_thread_count  ! ","value to_i  ! ","Rake  suggested_thread_count  =~ ","value to_i  =~ ","(send\n  (begin\n    (or\n      (lvar :Rake  suggested_thread_count )\n      (int 2))) :to_i) max ","(send\n  (begin\n    (or\n      (lvar :value to_i )\n      (int 2))) :to_i) max ","(or\n  (lvar :Rake  suggested_thread_count )\n  (int 2)) to_i ","(or\n  (lvar :value to_i )\n  (int 2)) to_i ","Rake  suggested_thread_count  - ","value to_i  - ","Rake  suggested_thread_count  < ","value to_i  < ","Rake  suggested_thread_count  to_i ","value to_i  to_i ","Rake  suggested_thread_count  == ","value to_i  == ","Rake  suggested_thread_count  nil? ","value to_i  nil? "]}," Rake Application windows?":{"type":"method","name":"windows?","children":[],"call":["Config CONFIG  [] =~ ","Config CONFIG  [] ","Win32  windows? "]}," Rake Application unix?":{"type":"method","name":"unix?","children":[],"call":["RUBY_PLATFORM  =~ ","RbConfig CONFIG  [] =~ ","RbConfig CONFIG  [] "]}," Rake Application dynamic_width_tput":{"type":"method","name":"dynamic_width_tput","children":[],"call":["(str \"tput cols 2>/dev/null\") to_i "]}," Rake Application dynamic_width_stty":{"type":"method","name":"dynamic_width_stty","children":[],"call":["(str \"stty size 2>/dev/null\") split [] to_i ","(str \"stty size 2>/dev/null\") split [] ","(str \"stty size 2>/dev/null\") split "]}," Rake Application dynamic_width":{"type":"method","name":"dynamic_width","children":[],"call":[" dynamic_width_tput "," dynamic_width_stty nonzero? "," dynamic_width_stty "]}," Rake Application terminal_width":{"type":"method","name":"terminal_width","children":[],"call":["result < "," dynamic_width "," unix? ","ENV  [] to_i ","ENV  [] ","@terminal_columns nonzero? "," dynamic_width  < ","ENV  [] to_i  < "]}," Rake Application truncate_output?":{"type":"method","name":"truncate_output?","children":[],"call":["ENV  [] "," tty_output? ","@terminal_columns nonzero? "]}," Rake Application tty_output=":{"type":"method","name":"tty_output=","children":[],"call":[]}," Rake Application tty_output?":{"type":"method","name":"tty_output?","children":[],"call":[]}," Rake TaskManager trace_rule":{"type":"method","name":"trace_rule","children":[],"call":[" puts ","     * ","Rake  application options trace_rules ","Rake  application options ","Rake  application ","$stderr puts "," options trace_output puts "," options trace_output "," options "]}," Rake TaskManager resolve_args_with_dependencies":{"type":"method","name":"resolve_args_with_dependencies","children":[],"call":["deps respond_to? ","args shift ","key == ","args empty? ","(send\n  (lvar :hash) :map) first ","hash map "," fail ","hash size != ","hash size ","Rake  application deprecate ","c !~ "," caller detect "," caller ","Rake  application ","hash delete ","hash key? ! ","hash key? "]}," Rake TaskManager resolve_args_without_dependencies":{"type":"method","name":"resolve_args_without_dependencies","children":[],"call":["args first to_ary ","args first ","args first respond_to? ","args size == ","args size ","args shift "]}," FileUtils rake_win32_system":{"type":"method","name":"rake_win32_system","children":[],"call":[" system ","cmd size == ","cmd size "]}," FileUtils rake_system":{"type":"method","name":"rake_system","children":[],"call":[" system "," rake_win32_system ","Rake  application windows? ","Rake  application ","Rake Win32  rake_system ","Rake Win32  windows? ","Rake AltSystem  system "]}," Rake Task clear_actions":{"type":"method","name":"clear_actions","children":[],"call":[" actions clear "," actions "]}," Rake Task clear_prerequisites":{"type":"method","name":"clear_prerequisites","children":[],"call":[" prerequisites clear "," prerequisites "]}," Rake Task reenable":{"type":"method","name":"reenable","children":[],"call":[]}," Rake TaskArguments with_defaults":{"type":"method","name":"with_defaults","children":[],"call":["defaults merge "]}," Rake Cloneable dup":{"type":"method","name":"dup","children":[],"call":["sibling taint "," tainted? ","sibling instance_variable_set ","value clone "," instance_variable_get "," instance_variables each "," instance_variables "," class new "," class "," class new  taint "," class new  instance_variable_set "," instance_variable_get  clone "]}," Rake Win32 normalize":{"type":"method","name":"normalize","children":[],"call":["path gsub "]}," Rake Win32 win32_system_dir":{"type":"method","name":"win32_system_dir","children":[],"call":[" normalize ","File  join "," raise ","win32_shared_path empty? ","win32_shared_path nil? ","ENV  [] ","ENV  [] + ","ENV  [] +  empty? ","ENV  []  empty? ","ENV  [] +  nil? ","ENV  []  nil? "]}," Rake Win32 rake_system":{"type":"method","name":"rake_system","children":[],"call":[" system ","cmd size == ","cmd size ","RepairedSystem  system ","AltSystem  system "]}," Rake Win32 windows?":{"type":"method","name":"windows?","children":[],"call":["Config CONFIG  [] =~ ","Config CONFIG  [] ","RbConfig CONFIG  [] =~ ","RbConfig CONFIG  [] "]}," Rake TaskManager tasks_in_scope":{"type":"method","name":"tasks_in_scope","children":[],"call":["(str \"^\") =~ ","t name "," tasks select "," tasks ","scope join ","scope path "]}," RepairedSystem `":{"type":"method","name":"`","children":[],"call":[" backticks_previous "," repair_command "]}," RepairedSystem system":{"type":"method","name":"system","children":[],"call":[" system_previous ","repaired_args first ","repaired_args size == ","repaired_args size "," join_command "," to_backslashes ","File  expand_path "," find_runnable ","ENV  [] ","file =~ "," repair_command ","args empty? ","cmd to_s "," find_ find_runnable  ","cmd to_s  =~ "]}," RepairedSystem find_runnable":{"type":"method","name":"find_runnable","children":[],"call":["File  exist? ","(if\n  (lvar :path)\n  (dstr\n    (begin\n      (lvar :path))\n    (str \"/\"))\n  (str \"\")) + ","RUNNABLE_EXTS  each ","(nil) each ","ENV  [] split ","ENV  [] ","file =~ "]}," RepairedSystem tail":{"type":"method","name":"tail","children":[],"call":["array [] "]}," RepairedSystem quote":{"type":"method","name":"quote","children":[],"call":[]}," RepairedSystem to_backslashes":{"type":"method","name":"to_backslashes","children":[],"call":["string gsub "]}," RepairedSystem join_command":{"type":"method","name":"join_command","children":[],"call":["(send nil :to_backslashes\n  (lvar :first)) join "," tail "," to_backslashes ","args first "," quote ","args first =~ ","(send nil :to_backslashes\n  (lvar :args first )) join ","(send nil :to_backslashes\n  (lvar : quote )) join ","args args first  ","args  quote  ","args args first  =~ ","args  quote  =~ "]}," RepairedSystem repair_command":{"type":"method","name":"repair_command","children":[],"call":[" quote + ","match post_match "," quote "," to_backslashes "," find_runnable ","match captures first ","match captures ","cmd match ","cmd match  post_cmd match  "," find_ find_runnable  ","cmd match  captures first ","cmd match  captures ","cmd cmd match  "]}," RepairedSystem define_module_function":{"type":"method","name":"define_module_function","children":[],"call":[" module_function "," define_method "]}," Rake RDocTask rerdoc_task_name":{"type":"method","name":"rerdoc_task_name","children":[],"call":[" name ","(or\n  (send\n    (send nil :name) :[]\n    (sym :rerdoc))\n  (str \"rerdoc\")) to_s "," name [] "]}," Rake RDocTask clobber_task_name":{"type":"method","name":"clobber_task_name","children":[],"call":[" name ","(or\n  (send\n    (send nil :name) :[]\n    (sym :clobber_rdoc))\n  (str \"clobber_rdoc\")) to_s "," name [] "]}," Rake RDocTask rdoc_task_name":{"type":"method","name":"rdoc_task_name","children":[],"call":[" name to_s "," name ","(or\n  (send\n    (send nil :name) :[]\n    (sym :rdoc))\n  (str \"rdoc\")) to_s "," name [] "]}," Rake RDocTask before_running_rdoc":{"type":"method","name":"before_running_rdoc","children":[],"call":[]}," Rake MakefileLoader respace":{"type":"method","name":"respace","children":[],"call":["str gsub ","str tr "]}," Rake PseudoStatus exited?":{"type":"method","name":"exited?","children":[],"call":[]}," Rake PseudoStatus stopped?":{"type":"method","name":"stopped?","children":[],"call":[]}," Rake PseudoStatus >>":{"type":"method","name":">>","children":[],"call":[" to_i >> "," to_i "]}," Rake PseudoStatus to_i":{"type":"method","name":"to_i","children":[],"call":["@exitstatus << "]}," Rake PseudoStatus initialize":{"type":"method","name":"initialize","children":[],"call":[]}," AltSystem backticks":{"type":"method","name":"backticks","children":[],"call":[" kernel_backticks "," repair_command "]}," AltSystem system":{"type":"method","name":"system","children":[],"call":[" kernel_system ","File  expand_path "," find_runnable "," repair_command ","args empty? "," find_ find_runnable  "]}," AltSystem find_runnable":{"type":"method","name":"find_runnable","children":[],"call":["File  exist? ","RUNNABLE_EXTS  each ","file =~ "]}," AltSystem repair_command":{"type":"method","name":"repair_command","children":[],"call":["call  + ","(str \"\\\"\") + ","match post_match ","match [] ","match [] =~ ","cmd match ","cmd =~ ","cmd match  post_cmd match  ","cmd match  [] ","cmd match  [] =~ ","cmd cmd match  "]}," AltSystem define_module_function":{"type":"method","name":"define_module_function","children":[],"call":[" module_function "," define_method "]}," Rake TestTask find_dir":{"type":"method","name":"find_dir","children":[],"call":["File  exist? ","File  join ","$LOAD_PATH each "]}," Rake TestTask rake_lib_dir":{"type":"method","name":"rake_lib_dir","children":[],"call":[" fail "," find_dir "]}," Rake TestTask run_code":{"type":"method","name":"run_code","children":[],"call":[" rake_loader "," rake_lib_dir "," fix "," rake_include_arg "," __dir__ "]}," Rake TestTask ruby_version":{"type":"method","name":"ruby_version","children":[],"call":[]}," Rake TestTask file_list_string":{"type":"method","name":"file_list_string","children":[],"call":["(send\n  (send nil :file_list) :collect) join "," file_list collect "," file_list ","(send\n  (send nil :file_list) :map) join "," file_list map "]}," Rake TestTask lib_path":{"type":"method","name":"lib_path","children":[],"call":["@libs join "]}," Rake TestTask ruby_opts_string":{"type":"method","name":"ruby_opts_string","children":[],"call":["opts join ","opts unshift "," lib_path ","@libs empty? ","@ruby_opts dup ","@ruby_opts dup  join ","@ruby_opts dup  unshift ","@ruby_@ruby_opts dup  dup "]}," Rake TaskManager get_description":{"type":"method","name":"get_description","children":[],"call":[" find_preceding_comment_for_task "]}," Rake TaskManager find_location":{"type":"method","name":"find_location","children":[],"call":["locations [] ","i + ","locations [] =~ "," caller "," caller  [] "," caller  [] =~ "]}," Rake TaskManager add_location":{"type":"method","name":"add_location","children":[],"call":["task locations << ","task locations "," find_location ","task  find_location ations << ","task  find_location ations "," find_ find_location ation "]}," Rake Task add_chain_to":{"type":"method","name":"add_chain_to","children":[],"call":["exception chain= ","exception chain nil? ","exception chain ","exception extend ","exception respond_to? "]}," Rake Task lookup_prerequisite":{"type":"method","name":"lookup_prerequisite","children":[],"call":[" application [] "," application ","scoped_prerequisite_task == "," application []  == "]}," Rake Task prerequisite_tasks":{"type":"method","name":"prerequisite_tasks","children":[],"call":[" lookup_prerequisite "," prerequisites collect "," prerequisites "," prerequisites map ","(send\n  (send nil :prerequisites) :+\n  (send nil :order_only_prerequisites)) map "," prerequisites + "," order_only_prerequisites "]}," Rake load_rakefile":{"type":"method","name":"load_rakefile","children":[],"call":[" load "]}," Rake InvocationExceptionMixin chain=":{"type":"method","name":"chain=","children":[],"call":[]}," Rake InvocationExceptionMixin chain":{"type":"method","name":"chain","children":[],"call":[]}," Rake FileUtilsExt rake_check_options":{"type":"method","name":"rake_check_options","children":[],"call":[" raise ","h keys join ","h keys ","h empty? ","h delete ","optdecl each ","options dup ","options dup  keys join ","options dup  keys ","options dup  empty? ","options dup  delete ","optdecl eacoptions dup  "]}," Rake FileUtilsExt rake_output_message":{"type":"method","name":"rake_output_message","children":[],"call":["$stderr puts "]}," Rake FileUtilsExt rake_merge_option":{"type":"method","name":"rake_merge_option","children":[],"call":["args push ","args pop ","defaults update ","args last ","Hash  === "]}," Rake FileUtilsExt when_writing":{"type":"method","name":"when_writing","children":[],"call":["$stderr puts ","FileUtilsExt  nowrite_flag "]}," Rake FileUtilsExt nowrite":{"type":"method","name":"nowrite","children":[],"call":["FileUtilsExt  nowrite_flag= "," block_given? ","value nil? ","FileUtilsExt  nowrite_flag "]}," Rake FileUtilsExt verbose":{"type":"method","name":"verbose","children":[],"call":["FileUtilsExt  verbose_flag ","FileUtilsExt  verbose_flag= "," block_given? ","value nil? "]}," FileUtils set_verbose_option":{"type":"method","name":"set_verbose_option","children":[],"call":["options []= ","Rake FileUtilsExt  verbose_flag ","Rake FileUtilsExt  verbose_flag nil? ","options [] nil? ","options [] ","Rake FileUtilsExt  verbose_flag == ","options key? "]}," FileUtils create_shell_runner":{"type":"method","name":"create_shell_runner","children":[],"call":[" fail ","status exitstatus "," lambda ","show_command [] + ","show_command [] ","cmd join ","(str \"Command failed with status (\") + "," sh_show_command ","show_command [] +  [] + ","cmd join  [] + "," sh_show_command  [] + ","show_command [] +  [] ","cmd join  [] "," sh_show_command  [] "," sh_show_command [] +  "," sh_cmd join  "," sh_ sh_show_command  "]}," Rake DSL import":{"type":"method","name":"import","children":[],"call":["Rake  application add_import ","Rake  application ","fns each ","Rake  import ","Rake  application deprecate "," caller first "," caller "]}," Rake DSL desc":{"type":"method","name":"desc","children":[],"call":["Rake  application last_description= ","Rake  application "]}," Rake DSL rule":{"type":"method","name":"rule","children":[],"call":["Rake Task  create_rule "]}," Rake DSL namespace":{"type":"method","name":"namespace","children":[],"call":["Rake  application in_namespace ","Rake  application "," raise ","name nil? ","name kind_of? ","name to_str ","name respond_to? ","name to_s ","Rake  application in_name to_str space ","Rake  application in_name to_s space ","name to_str  nil? ","name to_s  nil? ","name to_str  kind_of? ","name to_s  kind_of? ","name to_str  to_str ","name to_s  to_str ","name to_str  respond_to? ","name to_s  respond_to? ","name to_str  to_s ","name to_s  to_s "]}," Rake DSL multitask":{"type":"method","name":"multitask","children":[],"call":["Rake MultiTask  define_task "]}," Rake DSL directory":{"type":"method","name":"directory","children":[],"call":[" mkdir_p ","t name ","File  exist? ! ","File  exist? "," file_create ","Rake  each_dir_parent ","Rake  application resolve_args ","Rake  application ","Rake  from_pathname "," mkRake  from_pathname _p ","Rake  each_Rake  from_pathname _parent "]}," Rake DSL file_create":{"type":"method","name":"file_create","children":[],"call":["Rake FileCreationTask  define_task "]}," Rake DSL file":{"type":"method","name":"file","children":[],"call":["Rake FileTask  define_task "]}," Rake DSL task":{"type":"method","name":"task","children":[],"call":["Rake Task  define_task "]}," Rake Application print_rakefile_directory":{"type":"method","name":"print_rakefile_directory","children":[],"call":["$stderr puts ","Dir  pwd "," original_dir == "," original_dir "," options silent "," options "]}," Rake Application has_chain?":{"type":"method","name":"has_chain?","children":[],"call":["exception chain ","exception respond_to? "]}," Rake Application deprecate":{"type":"method","name":"deprecate","children":[],"call":["$stderr puts ","(str \"WARNING: '\") + + ","(str \"WARNING: '\") + "," options ignore_deprecate "," options "," fail "]}," Rake Application display_error_message":{"type":"method","name":"display_error_message","children":[],"call":["$stderr puts "," options trace "," options ","ex chain "," has_chain? "," rakefile_location ","ex backtrace ","ex backtrace join ","ex message "," name "," trace "," options backtrace ","Backtrace  collapse ","Backtrace  collapse join "," display_exception_details "]}," Rake TaskManager comment_from_file":{"type":"method","name":"comment_from_file","children":[],"call":["content [] =~ ","content [] ","File  readlines ","@file_cache [] ","file_name == "]}," Rake TaskManager parse_location":{"type":"method","name":"parse_location","children":[],"call":[" Integer ","loc =~ "]}," Rake TaskManager find_preceding_comment_for_task":{"type":"method","name":"find_preceding_comment_for_task","children":[],"call":[" comment_from_file "," parse_location ","task locations last ","task locations "," parse_task locations last ation ","task task locations last ations last ","task task locations last ations "]}," Rake environment":{"type":"method","name":"environment","children":[],"call":[]}," Rake Environment run":{"type":"method","name":"run","children":[],"call":[" module_eval ","block call "]}," Rake Environment load_string":{"type":"method","name":"load_string","children":[],"call":[" module_eval "," eval "," binding "]}," Rake Environment load_rakefile":{"type":"method","name":"load_rakefile","children":[],"call":[" load_string ","f read "," open "]}," Rake DSL include_in_top_scope":{"type":"method","name":"include_in_top_scope","children":[],"call":[]}," Rake import":{"type":"method","name":"import","children":[],"call":[]}," Rake TaskArguments values_at":{"type":"method","name":"values_at","children":[],"call":[" lookup ","keys map "]}," Rake ThreadPool __threads__":{"type":"method","name":"__threads__","children":[],"call":["@threads dup "]}," Rake ThreadPool __queue__":{"type":"method","name":"__queue__","children":[],"call":[]}," Rake ThreadPool stat":{"type":"method","name":"stat","children":[],"call":["@history << ","@history_mon synchronize ","Thread  current object_id ","Thread  current ","Time  now ","@history_start_time nil? ","Time  now - "]}," Rake ThreadPool start_thread":{"type":"method","name":"start_thread","children":[],"call":["@threads count ","@threads count > "," stat ","t object_id ","@threads << ","@join_cond broadcast ","@threads empty? ","@threads delete ","Thread  current ","@threads_mon synchronize "," process_queue_item ","@threads count <= ","Thread  new ","@threads count < ","@queue deq call ","@queue deq ","@queue empty? ! ","@queue empty? ","Thread  current object_id ","block call ","block object_id "," safe_thread_count <= "," safe_thread_count ","@queue deq  call ","@queue deq  object_id "]}," Rake ThreadPool process_queue_item":{"type":"method","name":"process_queue_item","children":[],"call":["promise work "," stat ","promise object_id ","@queue deq ","@queue empty? ","@queue deq  work ","@queue deq  object_id "]}," Rake ThreadPool statistics":{"type":"method","name":"statistics","children":[],"call":[]}," Rake ThreadPool history":{"type":"method","name":"history","children":[],"call":["i [] ","(send\n  (block\n    (send\n      (ivar :@history_mon) :synchronize)\n    (args)\n    (send\n      (ivar :@history) :dup)) :sort_by) each ","(send\n  (ivar :@history_mon) :synchronize) sort_by ","@history dup ","@history_mon synchronize "]}," Rake ThreadPool gather_history":{"type":"method","name":"gather_history","children":[],"call":["Time  now ","@history_start_time nil? ","Time  now  nil? "]}," Rake ThreadPool join":{"type":"method","name":"join","children":[],"call":[" raise ","$stderr puts ","t backtrace join ","t backtrace ","t respond_to? ","$stderr print ","t status ","@threads each ","e backtrace join ","e backtrace ","Thread  current status ","Thread  current ","@threads count ","@queue size "," stat ","@join_cond wait ","@threads empty? ","@threads_mon synchronize ","STDERR  puts ","STDERR  print ","(str \"Current Thread \") + ","(str \"Queue contains \") + "]}," Rake ThreadPool future":{"type":"method","name":"future","children":[],"call":[" start_thread "," stat ","promise object_id ","@queue enq ","promise recorder= "," lambda ","Promise  new "," raise ","promise_error equal? ","wait_for_promise call ","@threads_mon synchronize ","@threads include? ","Thread  current ","promise_mutex synchronize ","promise_mutex unlock ","block call ","promise_result equal? ","promise_mutex try_lock ","Mutex  new ","a dup ","args collect "," call ","Promise  new  object_id ","Promise  new  recorder= ","Promise  new _error equal? ","wait_for_Promise  new  call ","Promise  new _mutex synchronize ","Mutex  new  synchronize ","Promise  new _mutex unlock ","Mutex  new  unlock ","Promise  new _result equal? ","block call  equal? ","Promise  new _mutex try_lock ","Mutex  new  try_lock "]}," Rake ThreadPool initialize":{"type":"method","name":"initialize","children":[],"call":["Monitor  new ","@threads_mon new_cond ","Queue  new ","Set  new ","(lvar :thread_count) max ","(begin\n  (or\n    (lvar :thread_count)\n    (const nil :FIXNUM_MAX))) max "," require ","Monitor  new  new_cond ","Set  new _mon new_cond "]}," Rake ThreadHistoryDisplay rename":{"type":"method","name":"rename","children":[],"call":["hash []= ","renames []= ","renames [] succ ","renames [] ","hash [] "]}," Rake ThreadHistoryDisplay show":{"type":"method","name":"show","children":[],"call":[" printf ","(send\n  (send\n    (lvar :stat) :[]\n    (sym :data)) :map) join ","stat [] map ","stat [] ","(send\n  (send\n    (lvar :stat) :[]\n    (sym :time)) :*\n  (int 1000000)) round ","stat [] * "," rename "," threads "," items "," stats each "," stats "," puts "]}," Rake ThreadHistoryDisplay initialize":{"type":"method","name":"initialize","children":[],"call":[]}," Rake Task invoke_prerequisites_concurrently":{"type":"method","name":"invoke_prerequisites_concurrently","children":[],"call":["f value ","futures each "," application [] invoke_with_call_chain "," application [] "," application "," application thread_pool future "," application thread_pool ","@prerequisites collect ","f call ","r invoke_with_call_chain ","task_args new_scope ","p arg_names "," prerequisite_tasks collect "," prerequisite_tasks "," prerequisite_tasks map ","futures reverse_each "]}," Rake Task clear_comments":{"type":"method","name":"clear_comments","children":[],"call":[]}," Rake glob":{"type":"method","name":"glob","children":[],"call":["Dir  glob sort ","Dir  glob "]}," Rake add_rakelib":{"type":"method","name":"add_rakelib","children":[],"call":[" application options rakelib << "," application options rakelib "," application options "," application ","files each "," application options rakelib concat "]}," Rake Promise stat":{"type":"method","name":"stat","children":[],"call":["@recorder call "]}," Rake Promise discard":{"type":"method","name":"discard","children":[],"call":[]}," Rake Promise complete?":{"type":"method","name":"complete?","children":[],"call":[" error? "," result? "]}," Rake Promise error?":{"type":"method","name":"error?","children":[],"call":["@error equal? ! ","@error equal? "]}," Rake Promise result?":{"type":"method","name":"result?","children":[],"call":["@result equal? ! ","@result equal? "]}," Rake Promise chore":{"type":"method","name":"chore","children":[],"call":[" discard "," stat "," object_id ","@block call "," complete? "]}," Rake Promise work":{"type":"method","name":"work","children":[],"call":[" stat "," object_id ","@mutex unlock "," chore ","@mutex try_lock "]}," Rake Promise value":{"type":"method","name":"value","children":[],"call":[" raise "," error? "," stat "," object_id "," chore ","@mutex synchronize "," complete? "]}," Rake Promise initialize":{"type":"method","name":"initialize","children":[],"call":["a dup ","args collect ","Mutex  new "]}," Rake PrivateReader ClassMethods private_reader":{"type":"method","name":"private_reader","children":[],"call":[" private "," attr_reader "]}," Rake PrivateReader included":{"type":"method","name":"included","children":[],"call":[]}," timestamp":{"type":"method","name":"timestamp","children":[],"call":[]}," Rake Cloneable initialize_copy":{"type":"method","name":"initialize_copy","children":[],"call":[" instance_variable_set ","src_value clone ","source instance_variable_get ","source instance_variables each ","source instance_variables ","source instance_variable_get  clone "]}," Rake Backtrace collapse":{"type":"method","name":"collapse","children":[],"call":[]}," Rake Application select_trace_output":{"type":"method","name":"select_trace_output","children":[],"call":[" fail ","options trace_output= ","value strip ","value nil? ","value strip  strip ","value strip  nil? "]}," Rake Application select_tasks_to_show":{"type":"method","name":"select_tasks_to_show","children":[],"call":["Rake TaskManager  record_task_metadata= ","options show_task_pattern= ","Regexp  new ","options show_tasks= "]}," Rake Application sort_options":{"type":"method","name":"sort_options","children":[],"call":["(send\n  (block\n    (send\n      (lvar :opt) :select)\n    (args\n      (arg :o))\n    (send\n      (lvar :o) :=~\n      (regexp\n        (str \"^-\")\n        (regopt)))) :map) sort reverse ","(send\n  (block\n    (send\n      (lvar :opt) :select)\n    (args\n      (arg :o))\n    (send\n      (lvar :o) :=~\n      (regexp\n        (str \"^-\")\n        (regopt)))) :map) sort ","o downcase ","(send\n  (lvar :opt) :select) map ","o =~ ","opt select ","options sort_by ","(send\n  (lvar :opt) :select) map sort reverse ","(send\n  (lvar :opt) :select) map sort ","o is_a? "]}," Rake Application trace":{"type":"method","name":"trace","children":[],"call":[" options trace_output puts "," options trace_output "," options "," trace_on "]}," Rake Application thread_pool":{"type":"method","name":"thread_pool","children":[],"call":["ThreadPool  new "," options thread_pool_size "," options ","Rake  suggested_thread_count - ","Rake  suggested_thread_count "]}," Rake Application run_with_threads":{"type":"method","name":"run_with_threads","children":[],"call":["ThreadHistoryDisplay  new show ","ThreadHistoryDisplay  new "," thread_pool history "," thread_pool "," options job_stats == "," options job_stats "," options "," puts ","stats [] "," thread_pool statistics "," thread_pool join "," thread_pool gather_history "," options job_ thread_pool statistics  == "," options job_ thread_pool statistics  "," thread_pool statistics  [] "]}," Rake FileList glob":{"type":"method","name":"glob","children":[],"call":["Dir  glob sort ","Dir  glob "]}," Rake TraceOutput trace_on":{"type":"method","name":"trace_on","children":[],"call":["out print ","(send\n  (lvar :strings) :map) join ","s + ","s end_with? ","strings map ","strings empty? ","s =~ ","s nil? "]}," Rake Task collect_prerequisites":{"type":"method","name":"collect_prerequisites","children":[],"call":["pre collect_prerequisites ","seen []= ","pre name ","seen [] "," prerequisite_tasks each "," prerequisite_tasks "]}," Rake Task all_prerequisite_tasks":{"type":"method","name":"all_prerequisite_tasks","children":[],"call":["seen values "," collect_prerequisites "]}," Rake Application default_task_name":{"type":"method","name":"default_task_name","children":[],"call":[]}," Rake Application exit_because_of_exception":{"type":"method","name":"exit_because_of_exception","children":[],"call":[" exit "]}," Rake TaskArguments extras":{"type":"method","name":"extras","children":[],"call":["@values [] ","@names length "]}," Rake TaskArguments to_a":{"type":"method","name":"to_a","children":[],"call":["@values dup "]}," Rake Task first_sentence":{"type":"method","name":"first_sentence","children":[],"call":["string split first ","string split "]}," Rake Task transform_comments":{"type":"method","name":"transform_comments","children":[],"call":["@comments map join ","@comments map "," lambda ","@comments empty? "]}," Rake Task comment":{"type":"method","name":"comment","children":[],"call":[" first_sentence "," transform_comments "]}," Rake Task full_comment":{"type":"method","name":"full_comment","children":[],"call":[" transform_comments "]}," Rake Scope EmptyScope path_with_task_name":{"type":"method","name":"path_with_task_name","children":[],"call":[]}," Rake Scope EmptyScope path":{"type":"method","name":"path","children":[],"call":[]}," Rake Scope trim":{"type":"method","name":"trim","children":[],"call":["result tail ","result empty? ! ","result empty? ","n > ","result tail  tail ","result tail  empty? ! ","result tail  empty? "]}," Rake Scope path_with_task_name":{"type":"method","name":"path_with_task_name","children":[],"call":[" path "]}," Rake Scope path":{"type":"method","name":"path","children":[],"call":["(send nil :map) reverse join ","(send nil :map) reverse ","item to_s "," map "," map reverse join "," map reverse "]}," Rake LinkedList EmptyLinkedList cons":{"type":"method","name":"cons","children":[],"call":[]}," Rake LinkedList EmptyLinkedList empty?":{"type":"method","name":"empty?","children":[],"call":[]}," Rake LinkedList EmptyLinkedList initialize":{"type":"method","name":"initialize","children":[],"call":[]}," Rake LinkedList empty":{"type":"method","name":"empty","children":[],"call":[]}," Rake LinkedList cons":{"type":"method","name":"cons","children":[],"call":[]}," Rake LinkedList make":{"type":"method","name":"make","children":[],"call":[]}," Rake LinkedList each":{"type":"method","name":"each","children":[],"call":["current tail ","current head ","current empty? ! ","current empty? ","current tail  tail ","current tail  head ","current tail  empty? ! ","current tail  empty? "]}," Rake LinkedList inspect":{"type":"method","name":"inspect","children":[],"call":["(send nil :map) join ","item inspect "," map "," map join "]}," Rake LinkedList to_s":{"type":"method","name":"to_s","children":[],"call":["(send nil :map) join ","item to_s "," map "," map join "]}," Rake LinkedList ==":{"type":"method","name":"==","children":[],"call":["other empty? ","current empty? ","other tail ","current tail ","current head != ","other head ","current head ","other empty? ! ","current empty? ! ","other tail  empty? ","current tail  empty? ","other tail  tail ","current tail  tail ","current tail  head != ","other tail  head ","current tail  head ","other tail  empty? ! ","current tail  empty? ! "]}," Rake LinkedList empty?":{"type":"method","name":"empty?","children":[],"call":[]}," Rake LinkedList conj":{"type":"method","name":"conj","children":[],"call":[" class cons "," class "]}," Rake LinkedList initialize":{"type":"method","name":"initialize","children":[],"call":[]}," Rake FileList excluded_from_list?":{"type":"method","name":"excluded_from_list?","children":[],"call":["p call ","@exclude_procs any? ","fn == ","File  fnmatch? ","fn =~ ","@exclude_patterns any? "]}," Rake Cleaner cleanup":{"type":"method","name":"cleanup","children":[],"call":[" puts "," rm_r "," file_already_gone? ","(pair\n  (sym :verbose)\n  (send\n    (send\n      (send\n        (const nil :Rake) :application) :options) :trace)) merge ","Rake  application options trace ","Rake  application options ","Rake  application "]}," Rake Cleaner cleanup_files":{"type":"method","name":"cleanup_files","children":[],"call":[" cleanup ","file_names each "]}," Rake ThreadPool safe_thread_count":{"type":"method","name":"safe_thread_count","children":[],"call":["@threads count ","@threads_mon synchronize "]}," Rake TestTask rake_include_arg":{"type":"method","name":"rake_include_arg","children":[],"call":[" rake_lib_dir ","spec default_gem? ","spec respond_to? ","Gem  loaded_specs [] ","Gem  loaded_specs ","Gem  loaded_specs []  default_gem? ","Gem  loaded_specs []  respond_to? ","Gem  loaded_Gem  loaded_specs [] s [] ","Gem  loaded_Gem  loaded_specs [] s "]}," Rake TaskArguments has_key?":{"type":"method","name":"has_key?","children":[],"call":["@hash has_key? "]}," Rake suggested_thread_count":{"type":"method","name":"suggested_thread_count","children":[],"call":["@cpu_count + ","Rake CpuCounter  count "]}," Rake CpuCounter in_path_command":{"type":"method","name":"in_path_command","children":[],"call":["io eof? ","IO  popen ","out eof? ","Open3  popen3 "]}," Rake CpuCounter look_for_command":{"type":"method","name":"look_for_command","children":[],"call":["File  exist? ","File  join "]}," Rake CpuCounter resolve_command":{"type":"method","name":"resolve_command","children":[],"call":[" in_path_command "," look_for_command "]}," Rake CpuCounter run":{"type":"method","name":"run","children":[],"call":["io read to_i ","io read ","IO  popen "," resolve_command ","out read to_i ","out read ","Open3  popen3 ","err read ","inn close "]}," Rake CpuCounter count_via_sysctl":{"type":"method","name":"count_via_sysctl","children":[],"call":[" run "]}," Rake CpuCounter count_via_hwprefs_cpu_count":{"type":"method","name":"count_via_hwprefs_cpu_count","children":[],"call":[" run "]}," Rake CpuCounter count_via_hwprefs_thread_count":{"type":"method","name":"count_via_hwprefs_thread_count","children":[],"call":[" run "]}," Rake CpuCounter count_via_cpuinfo":{"type":"method","name":"count_via_cpuinfo","children":[],"call":["(send nil :open\n  (str \"/proc/cpuinfo\")) grep size ","(send nil :open\n  (str \"/proc/cpuinfo\")) grep ","f readlines "," open "]}," Rake CpuCounter count_via_win32":{"type":"method","name":"count_via_win32","children":[],"call":["cpu to_enum first NumberOfCores ","cpu to_enum first ","cpu to_enum ","wmi ExecQuery ","WIN32OLE  connect "," require ","wmi ExecQuery  to_enum first NumberOfCores ","wmi ExecQuery  to_enum first ","wmi ExecQuery  to_enum ","WIN32OLE  connect  ExecQuery "]}," Rake CpuCounter count_via_java_runtime":{"type":"method","name":"count_via_java_runtime","children":[],"call":["Java Java  lang Runtime getRuntime availableProcessors ","Java Java  lang Runtime getRuntime ","Java Java  lang Runtime ","Java Java  lang "]}," Rake CpuCounter count":{"type":"method","name":"count","children":[],"call":[" count_via_hwprefs_cpu_count "," count_via_hwprefs_thread_count "," count_via_sysctl "," count_via_win32 "," count_via_cpuinfo ","RbConfig CONFIG  [] "," count_via_java_runtime ","Etc  nprocessors "]}," Rake CpuCounter count_with_default":{"type":"method","name":"count_with_default","children":[],"call":[" count "]}," Rake Application collect_command_line_tasks":{"type":"method","name":"collect_command_line_tasks","children":[],"call":["@top_level_tasks push "," default_task_name ","@top_level_tasks empty? ","@top_level_tasks << ","arg =~ ","ENV  []= ","ARGV  each ","@argv each ","args each "]}," Rake Application display_exception_backtrace":{"type":"method","name":"display_exception_backtrace","children":[],"call":[" trace ","Backtrace  collapse join ","Backtrace  collapse ","ex backtrace ","ex backtrace join "," options backtrace "," options "]}," Rake Application display_exception_message_details":{"type":"method","name":"display_exception_message_details","children":[],"call":[" trace ","ex message ","ex class name ","ex class ","ex instance_of? "]}," Rake Application has_cause?":{"type":"method","name":"has_cause?","children":[],"call":["ex cause ","ex respond_to? "]}," Rake Application display_exception_details":{"type":"method","name":"display_exception_details","children":[],"call":[" display_exception_details ","ex cause "," has_cause? "," display_exception_backtrace "," display_exception_message_details ","seen << ","seen include? ","Thread  current [] ","Thread  current "," display_cause_details "," display_exception_details_seen << "," display_exception_details_seen "]}," NameSpace tasks":{"type":"method","name":"tasks","children":[],"call":["@task_manager tasks_in_scope "]}," NameSpace scope":{"type":"method","name":"scope","children":[],"call":["@scope dup "]}," NameSpace []":{"type":"method","name":"[]","children":[],"call":["@task_manager lookup "]}," NameSpace initialize":{"type":"method","name":"initialize","children":[],"call":["scope_list dup "]}," Rake Cleaner file_already_gone?":{"type":"method","name":"file_already_gone?","children":[],"call":["(str \"/\") include? ","File  executable? ","File  readable? ","File  dirname ","File  exist? ","(lvar :prev) include? "," cant_be_deleted? "]}," Rake Cleaner cant_be_deleted?":{"type":"method","name":"cant_be_deleted?","children":[],"call":["File  executable? ! ","File  executable? ","File  readable? ! ","File  readable? ","File  exist? "]}," Rake LateTime to_s":{"type":"method","name":"to_s","children":[],"call":[]}," Rake LateTime <=>":{"type":"method","name":"<=>","children":[],"call":[]}," Rake from_pathname":{"type":"method","name":"from_pathname","children":[],"call":["path to_str ","path respond_to? ","path to_path ","path to_str  to_str ","path to_path  to_str ","path to_str  respond_to? ","path to_path  respond_to? ","path to_str  to_path to_str  ","path to_path  to_path to_path  "]}," Rake FileList <<":{"type":"method","name":"<<","children":[],"call":["@items << ","Rake  from_pathname "," resolve "]}," Pathname pathmap":{"type":"method","name":"pathmap","children":[],"call":["Pathname  new ","Rake  from_pathname pathmap ","Rake  from_pathname "]}," Pathname ext":{"type":"method","name":"ext","children":[],"call":["Pathname  new ","Rake  from_pathname ext ","Rake  from_pathname "]}," Rake TaskArguments fetch":{"type":"method","name":"fetch","children":[],"call":["@hash fetch "]}," Rake TaskManager last_comment=":{"type":"method","name":"last_comment=","children":[],"call":[" warn "]}," Rake TaskManager last_comment":{"type":"method","name":"last_comment","children":[],"call":[" warn "]}," Rake PackageTask tar_xz_file":{"type":"method","name":"tar_xz_file","children":[],"call":[" package_name "]}," FileUtils sh_show_command":{"type":"method","name":"sh_show_command","children":[],"call":["cmd join ","cmd []= ","(send\n  (lvar :env) :map) join ","env map ","cmd first ","Hash  === ","cmd dup ","cmd dup  join ","cmd dup  []= ","(send\n  (lvar :(send\n  (lvar :env) :map) join ) :map) join ","(send\n  (lvar :cmd first ) :map) join ","(send\n  (lvar :env) :map) join  map ","cmd first  map ","cmd dup  first ","cmd dup  dup "]}," Rake Task clear_args":{"type":"method","name":"clear_args","children":[],"call":[]}," Rake MultiTask invoke_with_call_chain":{"type":"method","name":"invoke_with_call_chain","children":[],"call":[" raise "," add_chain_to "," execute "," needed? "," invoke_prerequisites "," application trace "," format_trace_flags "," name "," application "," application options trace "," application options ","@lock synchronize ","Rake InvocationChain  append "]}," Rake TaskManager generate_message_for_undefined_task":{"type":"method","name":"generate_message_for_undefined_task","children":[],"call":["message + "," DidYouMean Formatter  new to_s "," DidYouMean Formatter  new "," DidYouMean SpellChecker  new correct ","task_name to_s "," DidYouMean SpellChecker  new ","@tasks keys "," generate_did_you_mean_suggestions ","Rake  application name ","Rake  application "," generate_did_you_mean_ DidYouMean SpellChecker  new correct  "]}," Rake with_application":{"type":"method","name":"with_application","children":[],"call":["Rake  application= ","Rake  application "]}," Rake Application set_default_options":{"type":"method","name":"set_default_options","children":[],"call":[" options trace_rules= "," options "," options trace_output= "," options trace= "," options thread_pool_size= ","Rake  suggested_thread_count "," options suppress_backtrace_pattern= "," options silent= "," options show_tasks= "," options show_task_pattern= "," options show_prereqs= "," options show_all_tasks= "," options rakelib= "," options nosearch= "," options load_system= "," options job_stats= "," options ignore_system= "," options ignore_deprecate= "," options dryrun= "," options build_all= "," options backtrace= "," options always_multitask= "]}," Rake Application display_exception_details_seen":{"type":"method","name":"display_exception_details_seen","children":[],"call":["Thread  current [] ","Thread  current "]}," Rake Application display_cause_details":{"type":"method","name":"display_cause_details","children":[],"call":[" display_exception_details "," trace "," display_exception_details_seen include? "," display_exception_details_seen "]}," Rake TaskManager generate_did_you_mean_suggestions":{"type":"method","name":"generate_did_you_mean_suggestions","children":[],"call":[" DidYouMean Formatter  new to_s "," DidYouMean Formatter  new "," DidYouMean  formatter message_for "," DidYouMean  formatter "," DidYouMean  respond_to? "," DidYouMean SpellChecker  new correct ","task_name to_s "," DidYouMean SpellChecker  new ","@tasks keys "]}," Rake Task |":{"type":"method","name":"|","children":[],"call":["Task  format_deps - ","Task  format_deps "]}," Rake Task format_deps":{"type":"method","name":"format_deps","children":[],"call":[]}," Rake PackageTask target_dir":{"type":"method","name":"target_dir","children":[],"call":[" package_name "," without_parent_dir "]}," Rake PackageTask working_dir":{"type":"method","name":"working_dir","children":[],"call":[" package_dir "," package_dir_path "," without_parent_dir "]}}