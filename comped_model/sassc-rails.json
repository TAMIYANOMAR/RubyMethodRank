{" Rails ScssTemplate syntax":{"type":"method","name":"syntax","children":[],"call":[]}," Rails SassTemplate call":{"type":"method","name":"call","children":[],"call":["context metadata merge ","context metadata ","context metadata [] << ","dependency options [] ","dependency options ","context metadata [] ","engine dependencies map ","engine dependencies ","engine render ","Sprockets Utils  module_include "," SassC Engine  new ","input [] ","input [] paths "," class syntax "," class ","input [] context_class new ","input [] context_class "," safe_merge ","(pair\n  (sym :filename)\n  (send\n    (lvar :input) :[]\n    (sym :filename))) merge "," config_options "," line_comments? ","(pair\n  (sym :filename)\n  (send\n    (lvar :input) :[]\n    (sym :filename))) merge! ","input [] context_class new  metadata merge ","input [] context_class new  metadata ","input [] context_class new  metadata [] << ","input [] context_class new  metadata [] "," SassC Engine  new  dependencies map "," SassC Engine  new  dependencies "," SassC Engine  new  render ","input [] input [] context_class new _class new ","input [] input [] context_class new _class "]}," Sass Rails Logger _log":{"type":"method","name":"_log","children":[],"call":[" Rails  logger info "," Rails  logger "," Rails  logger error "," Rails  logger warn "," Rails  logger debug "]}," Sass Rails SassImporter extensions":{"type":"method","name":"extensions","children":[],"call":["(pair\n  (str \"css\")\n  (sym :scss)) merge "]}," Sass Rails SassImporter Deprecated deprecate_extra_css_extension":{"type":"method","name":"deprecate_extra_css_extension","children":[],"call":["ActiveSupport Deprecation  warn ","filename sub ","filename end_with? ","engine options [] ","engine options ","engine options []  sub ","engine options []  end_with? "]}," Sass Rails SassImporter Deprecated find":{"type":"method","name":"find","children":[],"call":[" deprecate_extra_css_extension "]}," Sass Rails SassImporter Deprecated find_relative":{"type":"method","name":"find_relative","children":[],"call":[" deprecate_extra_css_extension "]}," Sass Rails SassImporter Deprecated extensions":{"type":"method","name":"extensions","children":[],"call":["(pair\n  (str \"css.scss\")\n  (sym :scss)) merge "]}," Sass Rails SassImporter ERB process_erb_engine":{"type":"method","name":"process_erb_engine","children":[],"call":["Sass Engine  new ","engine options merge ","engine options ","template render ","engine options [] [] ","engine options [] ","Tilt ERBTemplate  new "," erb_extensions [] "," erb_extensions ","Tilt ERBTemplate  new  render "]}," Sass Rails SassImporter ERB find":{"type":"method","name":"find","children":[],"call":[" process_erb_engine "]}," Sass Rails SassImporter ERB find_relative":{"type":"method","name":"find_relative","children":[],"call":[" process_erb_engine "]}," Sass Rails SassImporter ERB erb_extensions":{"type":"method","name":"erb_extensions","children":[],"call":[]}," Sass Rails SassImporter ERB extensions":{"type":"method","name":"extensions","children":[],"call":["(pair\n  (str \"css.erb\")\n  (sym :scss_erb)) merge "]}," Sass Rails SassImporter Globbing each_globbed_file":{"type":"method","name":"each_globbed_file","children":[],"call":["sass_re =~ ","context depend_on ","File  directory? ","Dir  [] sort each ","Dir  [] sort ","Dir  [] ","Regexp  compile ","(send\n  (send\n    (send nil :extensions) :keys) :map) join ","Regexp  escape "," extensions keys map "," extensions keys "," extensions "," raise ","glob == ","Regexp  compile  =~ "]}," Sass Rails SassImporter Globbing glob_imports":{"type":"method","name":"glob_imports","children":[],"call":["Sass Engine  new ","options merge ","contents == ","contents << ","filename inspect ","filename == ","options [] "," each_globbed_file ","options [] [] "]}," Sass Rails SassImporter Globbing find":{"type":"method","name":"find","children":[],"call":["name =~ "]}," Sass Rails SassImporter Globbing find_relative":{"type":"method","name":"find_relative","children":[],"call":[" glob_imports ","m [] ","File  expand_path ","File  dirname ","name sub ","name match ","options [] "," glob_iname match ports ","name match  [] ","File  expand_name sub  ","File  dirnaname match e ","naname match e sub ","naname match e name match atch "]}," Sprockets SassTemplate Functions asset_data_url":{"type":"method","name":"asset_data_url","children":[],"call":["SassC Script String  new ","url( + + ","url( + "," sprockets_context asset_data_uri ","path value "," sprockets_context "]}," SassC Rails Importer load_paths":{"type":"method","name":"load_paths","children":[],"call":[" options [] "," options "]}," SassC Rails Importer context":{"type":"method","name":"context","children":[],"call":[" options [] [] "," options [] "," options "]}," SassC Rails Importer record_import_as_dependency":{"type":"method","name":"record_import_as_dependency","children":[],"call":[" context depend_on "," context "]}," SassC Rails Importer imports":{"type":"method","name":"imports","children":[],"call":["Import  new ","extension import_for "," options "," record_import_as_dependency ","File  exists? ","File  join ","file_name + ","extension postfix ","EXTENSIONS  each ","prefix + ","PREFIXS  each ","search_paths each ","search_paths map! ","specified_dir != ","(send\n  (array\n    (lvar :parent_dir)) :+\n  (send nil :load_paths)) uniq ","(lvar :parent_dir) + "," load_paths ","File  split "," raise ","ArgumentError  new "," glob_imports ","m [] ","File  expand_path ","File  dirname ","path sub ","path match ","SassC Importer Import  new ","File  directory? ","search_paths select! ","File  exist? ","Ipath match port  new ","extension ipath match port_for "," record_ipath match port_as_dependency ","prefix +  + ","file_napath match e + ","(send\n  (array\n    (lvar :parent_dir)) :+\n  (send nil :load_paths)) uniq  each ","search_path sub s each ","(send\n  (array\n    (lvar :parent_dir)) :+\n  (send nil :load_paths)) uniq  map! ","search_path sub s map! ","search_paths path match ap! ","(send\n  (array\n    (lvar :parent_dir)) :+\n  (send nil :load_path sub s)) uniq "," load_path sub s ","Argupath match entError  new "," glob_ipath match ports ","path match  [] ","File  expand_path sub  ","File  dirnapath match e ","path sub  sub ","path sub  match ","path path match atch ","SassC Ipath match porter Ipath match port  new ","(send\n  (array\n    (lvar :parent_dir)) :+\n  (send nil :load_paths)) uniq  select! ","search_path sub s select! "]}," SassC Rails Importer ERBExtension import_for":{"type":"method","name":"import_for","children":[],"call":["SassC Importer Import  new ","template render ","options [] [] ","options [] ","Tilt ERBTemplate  new ","Tilt ERBTemplate  new  render "]}," SassC Rails Importer SassERBExtension import_for":{"type":"method","name":"import_for","children":[],"call":["SassC Importer Import  new ","SassC Sass2Scss  convert ","template render ","options [] [] ","options [] ","Tilt ERBTemplate  new ","Tilt ERBTemplate  new  render "]}," SassC Rails Importer CSSExtension import_for":{"type":"method","name":"import_for","children":[],"call":["SassC Importer Import  new ","full_path gsub "]}," SassC Rails Importer CSSExtension postfix":{"type":"method","name":"postfix","children":[],"call":[]}," SassC Rails Importer Extension import_for":{"type":"method","name":"import_for","children":[],"call":["SassC Importer Import  new "]}," SassC Rails Importer Extension initialize":{"type":"method","name":"initialize","children":[],"call":[]}," SassC Rails Importer SassERBExtension postfix":{"type":"method","name":"postfix","children":[],"call":[]}," SassC Rails Importer CssSassExtension import_for":{"type":"method","name":"import_for","children":[],"call":["SassC Importer Import  new ","SassC Sass2Scss  convert ","f read ","File  open "]}," SassC Rails Importer CssSassExtension postfix":{"type":"method","name":"postfix","children":[],"call":[]}," SassC Rails Importer CssScssExtension import_for":{"type":"method","name":"import_for","children":[],"call":["SassC Importer Import  new ","f read ","File  open "]}," SassC Rails Importer CssScssExtension postfix":{"type":"method","name":"postfix","children":[],"call":[]}," Rails SassTemplate Sprockets2 evaluate":{"type":"method","name":"evaluate","children":[],"call":[" SassC Engine  new render "," SassC Engine  new "," data ","context environment ","context environment paths "," syntax "," eval_file "," sass_style ","(pair\n  (sym :filename)\n  (send nil :eval_file)) merge "," config_options "," line_comments? "," method "," config_(pair\n  (sym :filename)\n  (send nil :eval_file)) merge  "]}," Rails SassTemplate Sprockets2 included":{"type":"method","name":"included","children":[],"call":[]}," Rails SassTemplate Sprockets3 call":{"type":"method","name":"call","children":[],"call":["context metadata merge ","context metadata ","engine render ","Sprockets Utils  module_include "," SassC Engine  new ","input [] ","context metadata [] ","input [] paths "," class syntax "," class ","input [] context_class new ","input [] context_class "," sass_style ","(pair\n  (sym :filename)\n  (send\n    (lvar :input) :[]\n    (sym :filename))) merge "," config_options "," line_comments? "," safe_merge ","input [] context_class new  metadata merge ","input [] context_class new  metadata "," SassC Engine  new  render ","input [] context_class new  metadata [] ","input [] input [] context_class new _class new ","input [] input [] context_class new _class "," config_(pair\n  (sym :filename)\n  (send\n    (lvar :input) :[]\n    (sym :filename))) merge  "]}," Sprockets SassFunctions asset_data_url":{"type":"method","name":"asset_data_url","children":[],"call":["SassC Script String  new ","url( + + ","url( + "," sprockets_context asset_data_uri ","path value "," sprockets_context "," SassC Script Value String  new "]}," SassC Rails Importer globbed_files":{"type":"method","name":"globbed_files","children":[],"call":["files compact ","sass_re =~ "," record_import_as_dependency ","File  directory? ","Dir  [] sort map ","Dir  [] sort ","Dir  [] ","Regexp  compile ","(send\n  (lvar :extensions) :map) join ","Regexp  escape ","extensions map ","EXTENSIONS  map "," raise ","glob == ","Regexp  compile  =~ ","(send\n  (lvar :EXTENSIONS  map ) :map) join ","EXTENSIONS  map  map "]}," SassC Rails Importer glob_imports":{"type":"method","name":"glob_imports","children":[],"call":["extension import_for "," options "," extension_for_file "," record_import_as_dependency ","files map ","f == ","files reject "," globbed_files "," extension_for_file  import_for ","  extension_for_file _for_file "," globbed_files  map "," globbed_files  reject "," globbed_ globbed_files  "]}," SassC Rails Importer extension_for_file":{"type":"method","name":"extension_for_file","children":[],"call":["file include? ","extension postfix ","EXTENSIONS  detect "]}," Rails SassTemplate sass_style":{"type":"method","name":"sass_style","children":[],"call":["(str \"sass_style_\") to_sym ","Rails  application config sass style ","Rails  application config sass ","Rails  application config ","Rails  application ","(or\n  (send\n    (send\n      (send\n        (send\n          (const nil :Rails) :application) :config) :sass) :style)\n  (sym :expanded)) to_sym "]}," Rails SassTemplate config_options":{"type":"method","name":"config_options","children":[],"call":["opts merge! ","Rails  application config sass inline_source_maps ","Rails  application config sass ","Rails  application config ","Rails  application "," sass_style "," load_paths "]}," SassCompressor call":{"type":"method","name":"call","children":[],"call":["SassC Engine  new render ","SassC Engine  new ","args [] [] ","args [] "," data "]}," Rails SassTemplate line_comments?":{"type":"method","name":"line_comments?","children":[],"call":["Rails  application config sass line_comments ","Rails  application config sass ","Rails  application config ","Rails  application "]}," Rails SassTemplate safe_merge":{"type":"method","name":"safe_merge","children":[],"call":["(send\n  (lvar :left) :+\n  (lvar :right)) uniq ","left + ","v is_a? ","(lvar :left) all? "," safe_merge ","left merge "]}," Rails SassTemplate load_paths":{"type":"method","name":"load_paths","children":[],"call":["Rails  application config sass load_paths ","Rails  application config sass ","Rails  application config ","Rails  application "]}," Rails SassTemplate Functions asset_data_url":{"type":"method","name":"asset_data_url","children":[],"call":[" SassC Script Value String  new ","url( + + ","url( + "," sprockets_context asset_data_uri ","path value "," sprockets_context "," sprockets_context asset_data_uri ( + + "," sprockets_context asset_data_uri ( + "]}," Rails SassTemplate Functions asset_url":{"type":"method","name":"asset_url","children":[],"call":[" SassC Script Value String  new "," asset_path value "," asset_path "]}," Rails SassTemplate Functions asset_path":{"type":"method","name":"asset_path","children":[],"call":[" SassC Script Value String  new "," sprockets_context asset_path "," sprockets_context ","URI  split [] ","URI  split ","path value "," sprockets_context asset_ sprockets_context asset_path  "," sprockets_context asset_path value  "," sprockets_context asset_path  value ","path value  value "]}," Rails SassTemplate initialize":{"type":"method","name":"initialize","children":[],"call":[" class_eval "," block_given? "," include ","options [] ","Module  new ","(begin\n  (send\n    (send\n      (self) :class) :name)) freeze "," class name "," class "]}," SassCompressor initialize":{"type":"method","name":"initialize","children":[],"call":["SecureRandom  uuid ","(pair\n  (sym :syntax)\n  (sym :scss)) merge freeze ","(pair\n  (sym :syntax)\n  (sym :scss)) merge "]}," Scss Generators ScaffoldGenerator syntax":{"type":"method","name":"syntax","children":[],"call":[]}," Scss Generators AssetsGenerator copy_scss":{"type":"method","name":"copy_scss","children":[],"call":[" template ","File  join "," file_name "," class_path "]}," Sass Generators ScaffoldBase copy_stylesheet":{"type":"method","name":"copy_stylesheet","children":[],"call":[" create_file "," syntax "," Sass CSS  new render "," Sass CSS  new ","File  read ","File  join "," Rails Generators ScaffoldGenerator  source_root "," SassC Engine  new render "," SassC Engine  new "," create_File  join  "]}," Sass Generators ScaffoldGenerator syntax":{"type":"method","name":"syntax","children":[],"call":[]}," Sass Generators AssetsGenerator copy_sass":{"type":"method","name":"copy_sass","children":[],"call":[" template ","File  join "," file_name "," class_path "]}}