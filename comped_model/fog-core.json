{" Fog Rake TestTask tests":{"type":"method","name":"tests","children":[],"call":["Formatador  display_line ","Time  now to_i - ","Time  now to_i ","Time  now ","Formatador  display_table ","x [] <=> ","y [] ","x [] ","Thread  main [] sort ","Thread  main [] ","Thread  main ","thread join ","threads each ","threads << ","Thread  main [] << "," sh ","Thread  new ","Fog  providers each ","Fog  providers ","Thread  main []= ","Fog Formatador  display_line ","Fog Formatador  display_table "]}," Fog Rake TestTask initialize":{"type":"method","name":"initialize","children":[],"call":[" tests "," task "," Rake Task  [] invoke "," Rake Task  [] "," desc "]}," Fog VPN providers":{"type":"method","name":"providers","children":[],"call":[]}," Fog VPN new":{"type":"method","name":"new","children":[],"call":[]}," Fog VPN []":{"type":"method","name":"[]","children":[],"call":[]}," Fog Volume providers":{"type":"method","name":"providers","children":[],"call":[]}," Fog Volume new":{"type":"method","name":"new","children":[],"call":[]}," Fog Volume []":{"type":"method","name":"[]","children":[],"call":[]}," Shindo Tests succeeds":{"type":"method","name":"succeeds","children":[],"call":[" instance_eval ! ! "," instance_eval ! "," instance_eval ","Proc  new "," test "]}," Shindo Tests responds_to":{"type":"method","name":"responds_to","children":[],"call":["@instance respond_to? "," tests returns "," tests ","method_names each "]}," uniq_id":{"type":"method","name":"uniq_id","children":[],"call":["(lvar :base_name) * "," rand to_s rjust "," rand to_s "," rand ","(lvar :base_name) join "]}," model_tests":{"type":"method","name":"model_tests","children":[],"call":["@instance destroy "," pending ","mocks_implemented ! ","Fog  mocking? "," tests succeeds "," tests "," block_given? ","@instance save ","collection new ","collection new  destroy ","collection new  save "]}," array_differences":{"type":"method","name":"array_differences","children":[],"call":["(send\n  (lvar :array_a) :-\n  (lvar :array_b)) | ","array_b - ","array_a - "]}," lorem_file":{"type":"method","name":"lorem_file","children":[],"call":["f rewind ","f write ","Tempfile  new tap ","Tempfile  new "]}," Shindo Tests formats":{"type":"method","name":"formats","children":[],"call":["validator message ","validator validate ","Fog Schema DataValidator  new "," test ","validator validate ator message ","Fog Schema DataValidator  new  message ","validator validate ator validator validate ate ","Fog Schema DataValidator  new  validate "]}," Shindo Tests data_matches_schema":{"type":"method","name":"data_matches_schema","children":[],"call":["validator message ","validator validate ","Fog Schema DataValidator  new "," test ","validator validate ator message ","Fog Schema DataValidator  new  message ","validator validate ator validator validate ate ","Fog Schema DataValidator  new  validate "]}," servers_tests":{"type":"method","name":"servers_tests","children":[],"call":[" block_given? "," ready? ","@instance wait_for ","Fog  mocking? ! ","Fog  mocking? "," collection_tests ","connection servers "]}," server_tests":{"type":"method","name":"server_tests","children":[],"call":[" ready? ","@instance wait_for ","Fog  mocking? ! ","Fog  mocking? ","@instance reboot "," pending ","mocks_implemented ! "," tests succeeds "," tests "," block_given? "," responds_to ","identity == ","@instance reload identity ","@instance reload ","identity nil? ! ","identity nil? ","@instance identity "," tests returns "," model_tests ","connection servers ","@instance identity  == ","@instance reload @instance identity  ","@instance identity  nil? ! ","@instance identity  nil? ","@instance @instance identity  "]}," flavors_tests":{"type":"method","name":"flavors_tests","children":[],"call":["connection flavors get ","connection flavors "," pending ","mocks_implemented ! ","Fog  mocking? "," tests returns "," tests ","connection flavors first identity to_s gsub ","connection flavors first identity to_s ","connection flavors first identity ","connection flavors first ","Fog  mocking? ! "," tests succeeds ","connection flavors all "]}," collection_tests":{"type":"method","name":"collection_tests","children":[],"call":["collection get "," pending ","mocks_implemented ! ","Fog  mocking? "," tests returns "," tests ","Fog Mock  random_numbers ","@identity gsub ","Fog Mock  random_letters ","@identity to_s ","Fog  mocking? ! ","@instance destroy "," block_given? ","collection send "," tests succeeds ","collection respond_to? ","(str \"max_by\") each ","methods each ","methods delete ","JRUBY_VERSION  =~ ","RUBY_PLATFORM  == ","@instance identity ","collection all "," ready? ","@instance wait_for ","@instance respond_to? ","collection create ","params inspect ","collection new ","@identity to_s  gsub ","@instance identity  gsub ","@identity to_s  to_s ","@instance identity  to_s ","collection create  destroy ","collection create  identity ","collection create  wait_for ","collection create  respond_to? "]}," Fog Support providers":{"type":"method","name":"providers","children":[],"call":[]}," Fog Support new":{"type":"method","name":"new","children":[],"call":[]}," Fog Support []":{"type":"method","name":"[]","children":[],"call":[]}," Fog Storage providers":{"type":"method","name":"providers","children":[],"call":[]}," Fog Storage parse_data":{"type":"method","name":"parse_data","children":[],"call":[]}," Fog Storage get_content_type":{"type":"method","name":"get_content_type","children":[],"call":[]}," Fog Storage get_body_size":{"type":"method","name":"get_body_size","children":[],"call":[]}," Fog Storage directories":{"type":"method","name":"directories","children":[],"call":[]}," Fog Storage new":{"type":"method","name":"new","children":[],"call":[]}," Fog Storage []":{"type":"method","name":"[]","children":[],"call":[]}," Fog Schema DataValidator validate_value":{"type":"method","name":"validate_value","children":[],"call":["Fog Logger  write ","validator inspect ","value inspect "," validate_value ","result is_a? ","validator === ","validator == ","value [] ","sub_validator inspect ","key inspect ","validator all? ","validator empty? ! ","validator empty? ","value empty? ","value respond_to? ","options [] ","value empty? ! ","value is_a? ","validator [] ","value all? ","options [] ! "," validate_value  is_a? ","validator ===  is_a? ","validator ==  is_a? "]}," Fog Schema DataValidator message":{"type":"method","name":"message","children":[],"call":[]}," Fog Schema DataValidator validate":{"type":"method","name":"validate","children":[],"call":["schema inspect ","data inspect "," validate_value ","  validate_value ate_value "]}," Fog Schema DataValidator initialize":{"type":"method","name":"initialize","children":[],"call":[]}," Fog Orchestration providers":{"type":"method","name":"providers","children":[],"call":[]}," Fog Orchestration new":{"type":"method","name":"new","children":[],"call":[]}," Fog Orchestration []":{"type":"method","name":"[]","children":[],"call":[]}," Fog Network providers":{"type":"method","name":"providers","children":[],"call":[]}," Fog Network new":{"type":"method","name":"new","children":[],"call":[]}," Fog Network []":{"type":"method","name":"[]","children":[],"call":[]}," Fog Monitoring providers":{"type":"method","name":"providers","children":[],"call":[]}," Fog Monitoring new":{"type":"method","name":"new","children":[],"call":[]}," Fog Monitoring []":{"type":"method","name":"[]","children":[],"call":[]}," Fog Metering providers":{"type":"method","name":"providers","children":[],"call":[]}," Fog Metering new":{"type":"method","name":"new","children":[],"call":[]}," Fog Metering []":{"type":"method","name":"[]","children":[],"call":[]}," Fog Image providers":{"type":"method","name":"providers","children":[],"call":[]}," Fog Image new":{"type":"method","name":"new","children":[],"call":[]}," Fog Image []":{"type":"method","name":"[]","children":[],"call":[]}," Fog Identity providers":{"type":"method","name":"providers","children":[],"call":[]}," Fog Identity new":{"type":"method","name":"new","children":[],"call":[]}," Fog Identity []":{"type":"method","name":"[]","children":[],"call":[]}," Fog DNS zones":{"type":"method","name":"zones","children":[],"call":[]}," Fog DNS providers":{"type":"method","name":"providers","children":[],"call":[]}," Fog DNS new":{"type":"method","name":"new","children":[],"call":[]}," Fog DNS []":{"type":"method","name":"[]","children":[],"call":[]}," Fog timeout=":{"type":"method","name":"timeout=","children":[],"call":[]}," Fog timeout":{"type":"method","name":"timeout","children":[],"call":[]}," Fog interval=":{"type":"method","name":"interval=","children":[],"call":[]}," Fog interval":{"type":"method","name":"interval","children":[],"call":[]}," Fog wait_for":{"type":"method","name":"wait_for","children":[],"call":["Fog  interval ","Fog  timeout "]}," Fog UUID supported?":{"type":"method","name":"supported?","children":[],"call":["SecureRandom  respond_to? "]}," Fog UUID uuid":{"type":"method","name":"uuid","children":[],"call":["%08x-%04x-%04x-%04x-%04x%08x % ","ary []= ","(send\n  (send\n    (lvar :ary) :[]\n    (int 3)) :&\n  (int 16383)) | ","ary [] & ","ary [] ","(send\n  (send\n    (lvar :ary) :[]\n    (int 2)) :&\n  (int 4095)) | ","SecureRandom  random_bytes unpack ","SecureRandom  random_bytes ","SecureRandom  uuid "," supported? ","SecureRandom  random_bytes unpack  []= ","(send\n  (send\n    (lvar :SecureRandom  random_bytes unpack ) :[]\n    (int 3)) :&\n  (int 16383)) | ","SecureRandom  random_bytes unpack  [] & ","SecureRandom  random_bytes unpack  [] ","(send\n  (send\n    (lvar :SecureRandom  random_bytes unpack ) :[]\n    (int 2)) :&\n  (int 4095)) | "]}," Fog Time to_iso8601_basic":{"type":"method","name":"to_iso8601_basic","children":[],"call":[" utc strftime "," utc "]}," Fog Time to_date_header":{"type":"method","name":"to_date_header","children":[],"call":[" utc strftime ","MONTHS  [] "," utc month - "," utc month "," utc ","DAYS  [] "," utc wday "]}," Fog Time offset":{"type":"method","name":"offset","children":[],"call":[]}," Fog Time now=":{"type":"method","name":"now=","children":[],"call":[]}," Fog Time now":{"type":"method","name":"now","children":[],"call":[]}," Fog SSH Result initialize":{"type":"method","name":"initialize","children":[],"call":[]}," Fog SSH Result display_stderr":{"type":"method","name":"display_stderr","children":[],"call":["Formatador  display_line "," stderr split "," stderr ","Fog Formatador  display_line "]}," Fog SSH Result display_stdout":{"type":"method","name":"display_stdout","children":[],"call":["Formatador  display_lines ","data is_a? ","Formatador  display_line "," stdout split "," stdout ","Fog Formatador  display_lines ","Fog Formatador  display_line "," stdout split  is_a? "]}," Fog SSH Real run":{"type":"method","name":"run","children":[],"call":[" sleep ","exception remember_host! ","results << ","ssh loop ","result status= ","channel on_request ","data read_long ","result stderr << ","result stderr ","type == ","channel on_extended_data ","result stdout << ","result stdout ","channel on_data "," raise ","command inspect ","ssh_channel exec ","ssh_channel request_pty ","ssh open_channel ","Result  new ","commands each ","Net SSH  start ","Result  new s << ","Result  new  status= ","Result  new  stderr << ","Result  new  stderr ","Result  new  stdout << ","Result  new  stdout "]}," Fog SSH Real initialize":{"type":"method","name":"initialize","children":[],"call":["(pair\n  (sym :paranoid)\n  (false)) merge ","options []= ","options [] "," raise ","ArgumentError  new ","key_manager agent ","Net SSH Authentication KeyManager  new "," require "," exit ","Fog Logger  warning ","@options delete ","Net SSH VALID_OPTIONS  include? "," build_options "," assert_net_ssh_loaded ","Net SSH Authentication KeyManager  new  agent ","(pair\n  (sym :paranoid)\n  (false)) merge  delete "," build_options  delete "]}," Fog SSH Mock run":{"type":"method","name":"run","children":[],"call":[" class data [] << "," class data [] "," class data "," class "]}," Fog SSH Mock initialize":{"type":"method","name":"initialize","children":[],"call":[]}," Fog SSH Mock reset":{"type":"method","name":"reset","children":[],"call":[]}," Fog SSH Mock data":{"type":"method","name":"data","children":[],"call":[]}," Fog SSH new":{"type":"method","name":"new","children":[],"call":[]}," Fog Service validate_options":{"type":"method","name":"validate_options","children":[],"call":["Fog Logger  warning ","unrecognized join ","unrecognized empty? ","options keys - - "," recognized ","options keys - "," requirements ","options keys "," recognizes empty? "," recognizes "," raise ","missing join ","missing empty? "," requirements - ","keys << ","value nil? ","options each_pair ","options keys - -  join ","options keys - -  empty? "," requirements -  join "," requirements -  empty? "]}," Fog Service recognized":{"type":"method","name":"recognized","children":[],"call":[]}," Fog Service recognizes":{"type":"method","name":"recognizes","children":[],"call":[" recognized concat "," recognized "]}," Fog Service requirements":{"type":"method","name":"requirements","children":[],"call":[]}," Fog Service requires":{"type":"method","name":"requires","children":[],"call":[" requirements concat "," requirements "]}," Fog Service secrets":{"type":"method","name":"secrets","children":[],"call":["secrets << ","(str \"@\") to_sym ","args inject "," secrets ","args empty? ","args reduce "]}," Fog Service requests":{"type":"method","name":"requests","children":[],"call":[]}," Fog Service request":{"type":"method","name":"request","children":[],"call":[" requests << "," requests "]}," Fog Service request_path":{"type":"method","name":"request_path","children":[],"call":[]}," Fog Service models":{"type":"method","name":"models","children":[],"call":[]}," Fog Service model":{"type":"method","name":"model","children":[],"call":[" models << "," models "," models_files << "," models_files "," model_files << "," model_files "]}," Fog Service mocked_requests":{"type":"method","name":"mocked_requests","children":[],"call":[]}," Fog Service coerce_options":{"type":"method","name":"coerce_options","children":[],"call":["options []= ","value to_i ","value == ","value_string to_i to_s ","value_string to_i ","options delete ","value nil? ","value to_s downcase ","value to_s ","options each ","value_string to_i to_s == ","value to_s downcase  to_i to_s ","value to_s downcase  to_i ","value to_s downcase  to_i to_s == "]}," Fog Service collections":{"type":"method","name":"collections","children":[],"call":[]}," Fog Service collection":{"type":"method","name":"collection","children":[],"call":[" collections << "," collections "," collection_files << "," collection_files "]}," Fog Service model_path":{"type":"method","name":"model_path","children":[],"call":[]}," Fog Service setup_requirements":{"type":"method","name":"setup_requirements","children":[],"call":["service Mock  module_eval "," service "," mocked_requests << "," mocked_requests ","service Mock  method_defined? "," require ","(ivar :@request_path) join "," requests ","(ivar :@model_path) join "," models ","service Collections  module_eval ","(send\n  (send\n    (send\n      (lvar :collection) :to_s) :split\n    (str \"_\")) :map) join ","characters [] upcase << ","characters [] ","characters [] upcase ","collection to_s split map ","collection to_s split ","collection to_s "," collections "," superclass setup_requirements "," superclass "," superclass respond_to? "," require_requests_and_mock "," require_collections_and_define "," require_models "]}," Fog Service fetch_credentials":{"type":"method","name":"fetch_credentials","children":[],"call":["(send\n  (send nil :recognized) :|\n  (send nil :requirements)) include? ! ","(send\n  (send nil :recognized) :|\n  (send nil :requirements)) include? "," recognized | "," requirements "," recognized ","Fog  credentials reject ","Fog  credentials "]}," Fog Service new":{"type":"method","name":"new","children":[],"call":["service Real  new "," service ","service Real  send ","service Mock  new ","service Mock  send ","Fog  mocking? "," setup_requirements "," coerce_options "," validate_options "," fetch_credentials merge "," fetch_credentials ","Fog  symbolize_credentials ","svc superclass ","svc != "," handle_settings ","config config_service? ","config respond_to? "," coerce_ fetch_credentials merge  "," coerce_Fog  symbolize_credentials  "," validate_ fetch_credentials merge  "," validate_Fog  symbolize_credentials  ","svc superclass  superclass "," service  superclass ","svc superclass  != "," service  != "]}," Fog Service inherited":{"type":"method","name":"inherited","children":[],"call":["child class_eval "]}," Fog Service Collections requests":{"type":"method","name":"requests","children":[],"call":[" service requests "," service "]}," Fog Service Collections mocked_requests":{"type":"method","name":"mocked_requests","children":[],"call":[" service mocked_requests "," service "]}," Fog Service Collections collections":{"type":"method","name":"collections","children":[],"call":[" service collections "," service "]}," Fog Service NoLeakInspector inspect":{"type":"method","name":"inspect","children":[],"call":["(send\n  (begin\n    (send\n      (send\n        (self) :instance_variables) :-\n      (send\n        (send nil :service) :secrets))) :map) join ","(lvar :iv) join "," instance_variable_get inspect "," instance_variable_get ","(send\n  (send\n    (self) :instance_variables) :-\n  (send\n    (send nil :service) :secrets)) map "," instance_variables - "," service secrets "," service "," instance_variables "," object_id "," class ","(send\n  (begin\n    (send\n      (send nil :instance_variables) :-\n      (send\n        (send nil :service) :secrets))) :map) join ","(send\n  (send nil :instance_variables) :-\n  (send\n    (send nil :service) :secrets)) map "]}," Fog services":{"type":"method","name":"services","children":[],"call":[]}," Fog SCP Real download":{"type":"method","name":"download","children":[],"call":[" raise ","block call ","scp download! ","Net SCP  start "]}," Fog SCP Real upload":{"type":"method","name":"upload","children":[],"call":[" raise ","block call ","scp upload! ","Net SCP  start "]}," Fog SCP Real initialize":{"type":"method","name":"initialize","children":[],"call":["(pair\n  (sym :paranoid)\n  (false)) merge ","options []= ","options [] "," raise ","ArgumentError  new ","key_manager agent ","Net SSH Authentication KeyManager  new "," require "," exit ","Fog Logger  warning ","@options delete ","Net SSH VALID_OPTIONS  include? ","@options []= ","Net SSH Verifiers  const_defined? ","Net SSH Authentication KeyManager  new  agent ","(pair\n  (sym :paranoid)\n  (false)) merge  delete ","(pair\n  (sym :paranoid)\n  (false)) merge  []= "]}," Fog SCP Mock download":{"type":"method","name":"download","children":[],"call":[" class data [] << "," class data [] "," class data "," class "]}," Fog SCP Mock upload":{"type":"method","name":"upload","children":[],"call":[" class data [] << "," class data [] "," class data "," class "]}," Fog SCP Mock initialize":{"type":"method","name":"initialize","children":[],"call":[]}," Fog SCP Mock data":{"type":"method","name":"data","children":[],"call":[]}," Fog SCP new":{"type":"method","name":"new","children":[],"call":[]}," Fog Provider services":{"type":"method","name":"services","children":[],"call":["@services_registry keys "]}," Fog Provider service":{"type":"method","name":"service","children":[],"call":["@services_registry []= ","(send\n  (self) :to_s) join "," to_s "," to_s split last downcase to_sym "," to_s split last downcase "," to_s split last "," to_s split ","Fog  services [] ","Fog  services ","(send nil :to_s) join "," service_klass "]}," Fog Provider []":{"type":"method","name":"[]","children":[],"call":[" eval new "," eval ","@services_registry [] "]}," Fog Provider extended":{"type":"method","name":"extended","children":[],"call":["Fog  providers []= "," underscore_name ","Fog  providers ","provider downcase to_sym ","provider downcase ","base to_s split last ","base to_s split ","base to_s "," underscore_name to_sym ","Fog  base to_s split last s []= ","Fog  base to_s split last s ","base to_s split last  downcase to_sym ","base to_s split last  downcase "]}," Fog providers=":{"type":"method","name":"providers=","children":[],"call":[]}," Fog providers":{"type":"method","name":"providers","children":[],"call":[]}," Fog Model wait_for":{"type":"method","name":"wait_for","children":[],"call":[" raise ","Fog Errors Error  new "," identity "," class "," instance_eval "," reload ","Fog  wait_for "]}," Fog Model symbolize_keys":{"type":"method","name":"symbolize_keys","children":[],"call":["options []= ","key to_sym ","hash inject ","hash nil? ","hash reduce "]}," Fog Model to_json":{"type":"method","name":"to_json","children":[],"call":["Fog JSON  encode "," attributes "]}," Fog Model reload":{"type":"method","name":"reload","children":[],"call":[" merge_attributes ","data attributes "," collection get "," identity "," collection "," requires ","object all_associations_and_attributes "," collection get  all_associations_and_attributes "]}," Fog Model inspect":{"type":"method","name":"inspect","children":[],"call":["data << ","Thread  current [] indentation ","Thread  current [] ","Thread  current ","(send\n  (send\n    (send\n      (self) :class) :attributes) :map) join "," send inspect "," send "," class attributes map "," class attributes "," class "," class attributes empty? ","Thread  current [] indent "," class name ","Formatador  new ","Fog Formatador  format "]}," Fog Model initialize":{"type":"method","name":"initialize","children":[],"call":[" merge_attributes ","new_attributes [] ","Fog Logger  deprecation "," caller first "," caller ","@service nil? ","new_attributes delete ","attribs [] ","attribs delete ","new_attributes clone ","new_attributes []  nil? ","new_attributes delete  nil? ","attribs []  nil? ","attribs delete  nil? ","new_attributes clone  [] ","new_attributes clone  delete "]}," Fog Mock reset":{"type":"method","name":"reset","children":[],"call":[]}," Fog Mock random_selection":{"type":"method","name":"random_selection","children":[],"call":[]}," Fog Mock random_letters_and_numbers":{"type":"method","name":"random_letters_and_numbers","children":[],"call":[]}," Fog Mock random_numbers":{"type":"method","name":"random_numbers","children":[],"call":[]}," Fog Mock random_letters":{"type":"method","name":"random_letters","children":[],"call":[]}," Fog Mock random_hex":{"type":"method","name":"random_hex","children":[],"call":[]}," Fog Mock random_base64":{"type":"method","name":"random_base64","children":[],"call":[]}," Fog Mock random_ip":{"type":"method","name":"random_ip","children":[],"call":[]}," Fog Mock not_implemented":{"type":"method","name":"not_implemented","children":[],"call":[]}," Fog Mock delay=":{"type":"method","name":"delay=","children":[],"call":[]}," Fog Mock delay":{"type":"method","name":"delay","children":[],"call":[]}," Fog mocking?":{"type":"method","name":"mocking?","children":[],"call":[]}," Fog mock?":{"type":"method","name":"mock?","children":[],"call":[]}," Fog unmock!":{"type":"method","name":"unmock!","children":[],"call":[]}," Fog mock!":{"type":"method","name":"mock!","children":[],"call":[]}," Fog Logger write":{"type":"method","name":"write","children":[],"call":[]}," Fog Logger warning":{"type":"method","name":"warning","children":[],"call":[]}," Fog Logger deprecation":{"type":"method","name":"deprecation","children":[],"call":[]}," Fog Logger debug":{"type":"method","name":"debug","children":[],"call":[]}," Fog Logger []=":{"type":"method","name":"[]=","children":[],"call":[]}," Fog Logger []":{"type":"method","name":"[]","children":[],"call":[]}," Fog HMAC setup_sha256":{"type":"method","name":"setup_sha256","children":[],"call":["OpenSSL HMAC  digest "," lambda ","OpenSSL Digest  new "]}," Fog HMAC setup_sha1":{"type":"method","name":"setup_sha1","children":[],"call":["OpenSSL HMAC  digest "," lambda ","OpenSSL Digest  new "]}," Fog HMAC sign":{"type":"method","name":"sign","children":[],"call":["@signer call "]}," Fog HMAC initialize":{"type":"method","name":"initialize","children":[],"call":[" setup_sha256 "," setup_sha1 "]}," Fog Errors missing_credentials":{"type":"method","name":"missing_credentials","children":[],"call":[]}," Fog Errors Error slurp":{"type":"method","name":"slurp","children":[],"call":[]}," Fog Deprecation self_deprecate":{"type":"method","name":"self_deprecate","children":[],"call":[" module_eval "," caller first "," caller "]}," Fog Deprecation deprecate":{"type":"method","name":"deprecate","children":[],"call":[" module_eval "," caller first "," caller "]}," Fog Core DeprecatedConnectionAccessors prepare_service_value":{"type":"method","name":"prepare_service_value","children":[],"call":["attributes [] "]}," Fog Core DeprecatedConnectionAccessors connection":{"type":"method","name":"connection","children":[],"call":["Fog Logger  deprecation "," caller first "," caller "]}," Fog Core DeprecatedConnectionAccessors connection=":{"type":"method","name":"connection=","children":[],"call":["Fog Logger  deprecation "," caller first "," caller "]}," Fog CurrentMachine ip_address":{"type":"method","name":"ip_address","children":[],"call":[]}," Fog CurrentMachine ip_address=":{"type":"method","name":"ip_address=","children":[],"call":[]}," Fog symbolize_credentials":{"type":"method","name":"symbolize_credentials","children":[],"call":[]}," Fog symbolize_credential?":{"type":"method","name":"symbolize_credential?","children":[],"call":[]}," Fog credentials=":{"type":"method","name":"credentials=","children":[],"call":[]}," Fog credentials":{"type":"method","name":"credentials","children":[],"call":[]}," Fog credentials_path=":{"type":"method","name":"credentials_path=","children":[],"call":[]}," Fog credentials_path":{"type":"method","name":"credentials_path","children":[],"call":[]}," Fog credential":{"type":"method","name":"credential","children":[],"call":[]}," Fog credential=":{"type":"method","name":"credential=","children":[],"call":[]}," Fog Core Connection reset":{"type":"method","name":"reset","children":[],"call":["@excon reset "]}," Fog Core Connection request":{"type":"method","name":"request","children":[],"call":["@excon request "," handle_path_prefix_for "]}," Fog Core Connection initialize":{"type":"method","name":"initialize","children":[],"call":["Excon  new ","params merge! ","params fetch ","params [] [] ","params [] ","params []= ","params has_key? ","params delete "," raise ","params key? "," user_agent "]}," Fog class_from_string":{"type":"method","name":"class_from_string","children":[],"call":[]}," Fog Attributes InstanceMethods remap_attributes":{"type":"method","name":"remap_attributes","children":[],"call":["attributes []= ","attributes delete ","attributes key? ","mapping each_pair "]}," Fog Attributes InstanceMethods dup_attributes!":{"type":"method","name":"dup_attributes!","children":[],"call":["@attributes dup ","@attributes dup  dup "]}," Fog Attributes InstanceMethods missing_attributes":{"type":"method","name":"missing_attributes","children":[],"call":["missing << "," attributes has_key? "," attributes "," send ","(sym :service) | "," attributes key? ","(send\n  (array\n    (sym :service)) :|\n  (lvar :args)) each "]}," Fog Attributes InstanceMethods requires_one":{"type":"method","name":"requires_one","children":[],"call":[" raise ","missing [] ","missing [] join ","missing length == ","args length ","missing length "," missing_attributes "," missing [] "," missing "," missing [] join "," missing_attributes length == "," missing_attributes length "," missing_attributes  [] "," missing_attributes  [] join "," missing_attributes  length == "," missing_attributes  length ","  missing_attributes _attributes ","  missing_attributes  [] ","  missing_attributes  ","  missing_attributes  [] join ","  missing_attributes _attributes length == ","  missing_attributes _attributes length "]}," Fog Attributes InstanceMethods requires":{"type":"method","name":"requires","children":[],"call":[" raise ","missing [] ","missing [] join ","missing any? ","missing first ","missing length == ","missing length "," missing_attributes "," missing_attributes  [] "," missing_attributes  [] join "," missing_attributes  any? "," missing_attributes  first "," missing_attributes  length == "," missing_attributes  length ","  missing_attributes _attributes "]}," Fog Attributes InstanceMethods new_record?":{"type":"method","name":"new_record?","children":[],"call":[" persisted? ! "," persisted? ","Fog Logger  deprecation "," caller first "," caller "]}," Fog Attributes InstanceMethods persisted?":{"type":"method","name":"persisted?","children":[],"call":[" identity ! ! "," identity ! "," identity "]}," Fog Attributes InstanceMethods merge_attributes":{"type":"method","name":"merge_attributes","children":[],"call":[" attributes []= "," attributes "," send "," respond_to? "," class aliases [] "," class aliases "," class "," class ignored_attributes include? "," class ignored_attributes ","new_attributes each_pair "]}," Fog Attributes InstanceMethods identity=":{"type":"method","name":"identity=","children":[],"call":[" send "," class instance_variable_get "," class "," identity_name "]}," Fog Attributes InstanceMethods identity":{"type":"method","name":"identity","children":[],"call":[" send "," class instance_variable_get "," class "," identity_name "]}," Fog Attributes InstanceMethods dup":{"type":"method","name":"dup","children":[],"call":["copy dup_attributes! "]}," Fog Attributes InstanceMethods attributes":{"type":"method","name":"attributes","children":[],"call":[]}," Fog Attributes InstanceMethods _dump":{"type":"method","name":"_dump","children":[],"call":["Marshal  dump "," attributes "]}," Fog Attributes ClassMethods ignored_attributes":{"type":"method","name":"ignored_attributes","children":[],"call":[]}," Fog Attributes ClassMethods ignore_attributes":{"type":"method","name":"ignore_attributes","children":[],"call":["attr to_s ","args collect ","args map "]}," Fog Attributes ClassMethods identity":{"type":"method","name":"identity","children":[],"call":[" attribute "]}," Fog Attributes ClassMethods attribute":{"type":"method","name":"attribute","children":[],"call":[" aliases []= "," aliases ","options [] "," class_eval "," Array each "," Array "," default_values []= "," default_values "," attributes << "," attributes ","Fog Attributes  const_get new create ","Fog Attributes  const_get new ","Fog Attributes  const_get ","options fetch ","options fetch to_s capitalize ","options fetch to_s "," options fetch _values []= "," options fetch _values "]}," Fog Attributes ClassMethods attributes":{"type":"method","name":"attributes","children":[],"call":[]}," Fog Attributes ClassMethods aliases":{"type":"method","name":"aliases","children":[],"call":[]}," Fog Attributes ClassMethods _load":{"type":"method","name":"_load","children":[],"call":[" new ","Marshal  load "]}," Fog Compute servers":{"type":"method","name":"servers","children":[],"call":[]}," Fog Compute providers":{"type":"method","name":"providers","children":[],"call":[]}," Fog Compute new":{"type":"method","name":"new","children":[],"call":[]}," Fog Compute []":{"type":"method","name":"[]","children":[],"call":[]}," Fog Compute Server sshable?":{"type":"method","name":"sshable?","children":[],"call":["(send\n  (const nil :Timeout) :timeout\n  (int 8)) ! ! ","(send\n  (const nil :Timeout) :timeout\n  (int 8)) ! "," ssh ","Timeout  timeout "," ssh_ip_address nil? ! "," ssh_ip_address nil? "," ssh_ip_address "," ready? "," increase_sshable_timeout ","(send\n  (const nil :Timeout) :timeout\n  (send nil :sshable_timeout)) ! ! ","(send\n  (const nil :Timeout) :timeout\n  (send nil :sshable_timeout)) ! "," sshable_timeout "]}," Fog Compute Server ssh":{"type":"method","name":"ssh","children":[],"call":["Fog SSH  new run ","Fog SSH  new "," username "," ssh_ip_address "," ssh_options merge "," ssh_options "," requires "," require "," ssh_ ssh_options merge  merge "," ssh_ ssh_options merge  "]}," Fog Compute Server scp_download":{"type":"method","name":"scp_download","children":[],"call":["Fog SCP  new download ","Fog SCP  new "," ssh_options "," username "," ssh_ip_address "," requires "," require "]}," Fog Compute Server scp":{"type":"method","name":"scp","children":[],"call":["Fog SCP  new upload ","Fog SCP  new "," ssh_options "," username "," ssh_ip_address "," requires "," require "]}," Fog Compute Server ssh_options":{"type":"method","name":"ssh_options","children":[],"call":["ssh_options []= "," private_key ","@ssh_options merge "," ssh_port ","@ssh_options merge  []= ","@@ssh_options merge  merge "]}," Fog Compute Server ssh_ip_address":{"type":"method","name":"ssh_ip_address","children":[],"call":["@ssh_ip_address call ","@ssh_ip_address is_a? "," public_ip_address "]}," Fog Compute Server ssh_ip_address=":{"type":"method","name":"ssh_ip_address=","children":[],"call":[]}," Fog Compute Server ssh_port":{"type":"method","name":"ssh_port","children":[],"call":[]}," Fog Compute Server public_key":{"type":"method","name":"public_key","children":[],"call":["File  read "," public_key_path "]}," Fog Compute Server public_key_path":{"type":"method","name":"public_key_path","children":[],"call":["File  expand_path ","Fog  credentials [] ","Fog  credentials "]}," Fog Compute Server private_key":{"type":"method","name":"private_key","children":[],"call":["File  read "," private_key_path "]}," Fog Compute Server private_key_path":{"type":"method","name":"private_key_path","children":[],"call":["File  expand_path ","Fog  credentials [] ","Fog  credentials "]}," Fog Compute Server username":{"type":"method","name":"username","children":[],"call":[]}," Fog CDN providers":{"type":"method","name":"providers","children":[],"call":[]}," Fog CDN new":{"type":"method","name":"new","children":[],"call":[]}," Fog CDN []":{"type":"method","name":"[]","children":[],"call":[]}," Fog Billing providers":{"type":"method","name":"providers","children":[],"call":[]}," Fog Billing new":{"type":"method","name":"new","children":[],"call":[]}," Fog Billing []":{"type":"method","name":"[]","children":[],"call":[]}," Fog Account providers":{"type":"method","name":"providers","children":[],"call":[]}," Fog Account new":{"type":"method","name":"new","children":[],"call":[]}," Fog Account []":{"type":"method","name":"[]","children":[],"call":[]}," Fog max_interval=":{"type":"method","name":"max_interval=","children":[],"call":[]}," Fog max_interval":{"type":"method","name":"max_interval","children":[],"call":[]}," Utils prepare_service_settings":{"type":"method","name":"prepare_service_settings","children":[],"call":[]}," Fog Service require_requests_and_mock":{"type":"method","name":"require_requests_and_mock","children":[],"call":["service Mock  module_eval "," service "," mocked_requests << "," mocked_requests ","service Mock  method_defined? "," require ","File  join ","request to_s "," requests each "," requests ","request last "," require_item "]}," Fog Service camel_case_collection_name":{"type":"method","name":"camel_case_collection_name","children":[],"call":["collection to_s split map join ","collection to_s split map ","collection to_s split ","collection to_s "]}," Fog Service require_collections_and_define":{"type":"method","name":"require_collections_and_define","children":[],"call":["service Collections  module_eval "," service "," camel_case_collection_name "," require ","File  join ","collection to_s "," collections each "," collections ","collection last "," require_item "," collection_files each "," collection_files "]}," Fog Service require_models":{"type":"method","name":"require_models","children":[],"call":[" require ","File  join ","model to_s "," models each "," models "," require_item "," model_files each "," model_files "]}," Fog Service handle_settings":{"type":"method","name":"handle_settings","children":[],"call":[" coerce_options "," validate_options ","Fog Core Utils  prepare_service_settings "," fetch_credentials merge "," fetch_credentials "]}," Fog WhitelistKeys whitelist":{"type":"method","name":"whitelist","children":[],"call":[]}," Fog StringifyKeys transform_hash":{"type":"method","name":"transform_hash","children":[],"call":[]}," Fog StringifyKeys stringify":{"type":"method","name":"stringify","children":[],"call":[]}," Fog Core Connection handle_path_prefix_for":{"type":"method","name":"handle_path_prefix_for","children":[],"call":["params []= ","params [] ","params [] sub "]}," Fog Attributes ClassMethods default_values":{"type":"method","name":"default_values","children":[],"call":[]}," Fog Attributes Timestamp create_setter":{"type":"method","name":"create_setter","children":[],"call":[" model class_eval "," name "," model "]}," Fog Attributes Time create_setter":{"type":"method","name":"create_setter","children":[],"call":[" model class_eval "," name "," model "]}," Fog Attributes String create_setter":{"type":"method","name":"create_setter","children":[],"call":[" model class_eval "," name "," model "]}," Fog Attributes Integer create_setter":{"type":"method","name":"create_setter","children":[],"call":[" model class_eval "," name "," model "]}," Fog Attributes Float create_setter":{"type":"method","name":"create_setter","children":[],"call":[" model class_eval "," name "," model "]}," Fog Attributes Default create_getter":{"type":"method","name":"create_getter","children":[],"call":[" model class_eval "," name "," model "]}," Fog Attributes Default create_setter":{"type":"method","name":"create_setter","children":[],"call":[" model class_eval "," name "," model "," squash "]}," Fog Attributes Default create":{"type":"method","name":"create","children":[],"call":[" create_getter "," create_setter "]}," Fog Attributes Default initialize":{"type":"method","name":"initialize","children":[],"call":["options fetch "," set_defaults "," create_aliases "," create_getter "," create_setter ","options [] ","@model attributes << ","@model attributes "," create_mask "]}," Fog Attributes Boolean create_setter":{"type":"method","name":"create_setter","children":[],"call":[" model class_eval "," name "," model "]}," Fog Attributes Array create_setter":{"type":"method","name":"create_setter","children":[],"call":[" model class_eval "," name "," model "]}," Fog Model respond_to?":{"type":"method","name":"respond_to?","children":[],"call":[" class aliases include? "," class aliases "," class "]}," Fog Model method_missing":{"type":"method","name":"method_missing","children":[],"call":[" send "," class aliases [] "," class aliases "," class "," class aliases include? "]}," Fog Attributes InstanceMethods all_associations_and_attributes":{"type":"method","name":"all_associations_and_attributes","children":[],"call":[" all_attributes merge "," all_associations "," all_attributes "]}," Fog Attributes InstanceMethods all_associations":{"type":"method","name":"all_associations","children":[],"call":["hash []= "," send "," associations [] "," associations "," class associations keys inject "," class associations keys "," class associations "," class "," masks [] "," masks "," class associations keys reduce ","Fog Logger  deprecation "," masks [] nil? "]}," Fog Attributes InstanceMethods all_attributes":{"type":"method","name":"all_attributes","children":[],"call":["hash []= "," send "," class attributes inject "," class attributes "," class "," masks [] "," masks "," class attributes reduce ","Fog Logger  deprecation "," masks [] nil? "]}," Fog Attributes InstanceMethods associations":{"type":"method","name":"associations","children":[],"call":[]}," Fog Attributes ClassMethods has_many_identities":{"type":"method","name":"has_many_identities","children":[],"call":["Fog Associations ManyIdentities  new "]}," Fog Attributes ClassMethods has_one_identity":{"type":"method","name":"has_one_identity","children":[],"call":["Fog Associations OneIdentity  new "]}," Fog Attributes ClassMethods has_many":{"type":"method","name":"has_many","children":[],"call":["Fog Associations ManyModels  new "]}," Fog Attributes ClassMethods has_one":{"type":"method","name":"has_one","children":[],"call":["Fog Associations OneModel  new "]}," Fog Attributes ClassMethods associations":{"type":"method","name":"associations","children":[],"call":[]}," Fog Attributes Default set_defaults":{"type":"method","name":"set_defaults","children":[],"call":[" model default_values []= "," default "," name "," model default_values "," model "," default nil? "]}," Fog Attributes Default create_aliases":{"type":"method","name":"create_aliases","children":[],"call":[" model aliases []= "," name "," model aliases "," model "," Array each "," Array "," aliases "]}," Fog Attributes Array create_getter":{"type":"method","name":"create_getter","children":[],"call":[" model class_eval "," name "," model "]}," Fog Associations OneModel create_getter":{"type":"method","name":"create_getter","children":[],"call":[" model class_eval "," name "," model "]}," Fog Associations OneModel create_setter":{"type":"method","name":"create_setter","children":[],"call":[" model class_eval "," name "," model "]}," Fog Associations OneIdentity create_getter":{"type":"method","name":"create_getter","children":[],"call":[" model class_eval "," name "," model "]}," Fog Associations OneIdentity create_setter":{"type":"method","name":"create_setter","children":[],"call":[" model class_eval "," name "," model "]}," Fog Associations ManyModels create_getter":{"type":"method","name":"create_getter","children":[],"call":[" model class_eval "," name "," model "," association_class "]}," Fog Associations ManyModels create_setter":{"type":"method","name":"create_setter","children":[],"call":[" model class_eval "," name "," model "]}," Fog Associations ManyIdentities create_getter":{"type":"method","name":"create_getter","children":[],"call":[" model class_eval "," name "," model "," association_class "]}," Fog Associations ManyIdentities create_setter":{"type":"method","name":"create_setter","children":[],"call":[" model class_eval "," name "," model "]}," Fog Associations Default initialize":{"type":"method","name":"initialize","children":[],"call":[" create_getter "," create_setter ","model associations []= ","model associations "," create_mask "," create_aliases ","options fetch "]}," Fog Core Utils prepare_service_settings":{"type":"method","name":"prepare_service_settings","children":[],"call":[]}," Fog Attributes InstanceMethods masks":{"type":"method","name":"masks","children":[],"call":[" class masks "," class "]}," Fog Attributes ClassMethods masks":{"type":"method","name":"masks","children":[],"call":[]}," Fog Attributes Default create_mask":{"type":"method","name":"create_mask","children":[],"call":[" model masks []= "," as "," name "," model masks "," model "]}," Fog Associations Default create_mask":{"type":"method","name":"create_mask","children":[],"call":[" model masks []= "," as "," name "," model masks "," model "]}," Fog Associations Default create_aliases":{"type":"method","name":"create_aliases","children":[],"call":[" model aliases []= "," name "," model aliases "," model "," Array each "," Array "," aliases "]}," Fog Association load":{"type":"method","name":"load","children":[],"call":[" << ","associations each ","associations kind_of? "]}," Fog Association initialize":{"type":"method","name":"initialize","children":[],"call":[" load "]}," Fog Service require_item":{"type":"method","name":"require_item","children":[],"call":[" require ","File  join ","file to_s "]}," Fog Service model_files":{"type":"method","name":"model_files","children":[],"call":[]}," Fog Service collection_files":{"type":"method","name":"collection_files","children":[],"call":[]}," Fog PagedCollection each":{"type":"method","name":"each","children":[],"call":["base_each bind call ","base_each bind ","Fog Collection  instance_method "," all "," filters [] "," filters "," block_given? ","Kernel  loop ","Fog Collection  instance_method  bind call ","Fog Collection  instance_method  bind "]}," Fog Collection lazy_load":{"type":"method","name":"lazy_load","children":[],"call":[" all "]}," Fog Collection to_json":{"type":"method","name":"to_json","children":[],"call":["Fog JSON  encode "," map "]}," Fog Collection table":{"type":"method","name":"table","children":[],"call":["Formatador  display_table "," map ","Fog Formatador  display_table "]}," Fog Collection reload":{"type":"method","name":"reload","children":[],"call":[" lazy_load "," clear "]}," Fog Collection new":{"type":"method","name":"new","children":[],"call":[" model new ","(pair\n  (sym :collection)\n  (self)) merge "," service "," model "," raise ","attributes inspect ","attributes class ","attributes is_a? "]}," Fog Collection model":{"type":"method","name":"model","children":[],"call":[" class instance_variable_get "," class "]}," Fog Collection load":{"type":"method","name":"load","children":[],"call":[" << "," new ","objects each "," clear "]}," Fog Collection inspect":{"type":"method","name":"inspect","children":[],"call":["data << ","Thread  current [] indentation ","Thread  current [] ","Thread  current "," map join "," map ","Thread  current [] indent "," empty? ","(send\n  (send\n    (send\n      (self) :class) :attributes) :map) join "," send inspect "," send "," class attributes map "," class attributes "," class "," class attributes empty? "," class name ","Formatador  new ","Fog Formatador  new ","Fog Formatador  format "]}," Fog Collection initialize":{"type":"method","name":"initialize","children":[],"call":[" merge_attributes ","attributes delete "]}," Fog Collection destroy":{"type":"method","name":"destroy","children":[],"call":["object destroy "," new "," new destroy "," new  destroy "]}," Fog Collection create":{"type":"method","name":"create","children":[],"call":["object save "," new "," new  save "]}," Fog Collection clear":{"type":"method","name":"clear","children":[],"call":[]}," Fog Formatador inspect_object":{"type":"method","name":"inspect_object","children":[],"call":["(send\n  (send nil :object) :map) join "," indentation "," indentation + ","o inspect "," object map "," object "]}," Fog Formatador object_attributes":{"type":"method","name":"object_attributes","children":[],"call":["attrs join "," indentation "," object send inspect "," object send "," object "," object class attributes map "," object class attributes "," object class "]}," Fog Formatador nested_objects_string":{"type":"method","name":"nested_objects_string","children":[],"call":["nested << "," indentation "," indentation + "," inspect_object "," indent "," object empty? "," object "]}," Fog Formatador attribute_string":{"type":"method","name":"attribute_string","children":[],"call":[" object_attributes "," indentation "," object attributes empty? "," object attributes "," object "]}," Fog Formatador object_string":{"type":"method","name":"object_string","children":[],"call":[" nested_objects_string "," attribute_string "]}," Fog Formatador init_string":{"type":"method","name":"init_string","children":[],"call":[" object class name "," object class "," object "," indentation "]}," Fog Formatador indentation":{"type":"method","name":"indentation","children":[],"call":[" formatador indentation "," formatador "]}," Fog Formatador indent":{"type":"method","name":"indent","children":[],"call":[" formatador indent "," formatador "]}," Fog Formatador to_s":{"type":"method","name":"to_s","children":[],"call":["(send\n  (send nil :string) :<<\n  (dstr\n    (begin\n      (send nil :indentation))\n    (str \">\"))) dup "," string << "," indentation "," string "," object_string "," indent "," init_string "," string nil? "]}," Fog Formatador initialize":{"type":"method","name":"initialize","children":[],"call":[" Formatador  new "]}," Fog Formatador redisplay_progressbar":{"type":"method","name":"redisplay_progressbar","children":[],"call":[]}," Fog Formatador display_table":{"type":"method","name":"display_table","children":[],"call":[]}," Fog Formatador display_compact_table":{"type":"method","name":"display_compact_table","children":[],"call":[]}," Fog Formatador display_lines":{"type":"method","name":"display_lines","children":[],"call":[]}," Fog Formatador display_line":{"type":"method","name":"display_line","children":[],"call":[]}," Fog Formatador format":{"type":"method","name":"format","children":[],"call":[]}," Fog Formatador formatador":{"type":"method","name":"formatador","children":[],"call":[]}," Fog Baremetal providers":{"type":"method","name":"providers","children":[],"call":[]}," Fog Baremetal new":{"type":"method","name":"new","children":[],"call":[]}," Fog Baremetal []":{"type":"method","name":"[]","children":[],"call":[]}," Fog Core Connection user_agent":{"type":"method","name":"user_agent","children":[],"call":[" class user_agents "," class "]}," Fog Core Connection user_agents":{"type":"method","name":"user_agents","children":[],"call":["agents uniq compact join ","agents uniq compact ","agents uniq ","agents << ","@@user_agents dup ","@@user_agents dup  uniq compact join ","@@user_agents dup  uniq compact ","@@user_agents dup  uniq ","@@user_agents dup  << ","@@user_@@user_agents dup  dup "]}," Fog Core Connection add_user_agent":{"type":"method","name":"add_user_agent","children":[],"call":[" raise ","@@user_agents << ","(str \"\\\\S+/[\\\\d|.]+\") match "]}," Fog Model ==":{"type":"method","name":"==","children":[],"call":["o identity == "," identity ","o identity ","o class == "," class ","o class ","o object_id == "," object_id ","o object_id "," identity nil? ","o identity nil? ","o is_a? "]}," Fog ServicesMixin service_name":{"type":"method","name":"service_name","children":[],"call":[" name split last "," name split "," name "]}," Fog ServicesMixin service_provider_constant":{"type":"method","name":"service_provider_constant","children":[],"call":["Fog  const_get const_get ","Fog  const_get "," const_get_args ","Fog Logger  deprecation "," format "]}," Fog ServicesMixin require_service_provider_library":{"type":"method","name":"require_service_provider_library","children":[],"call":[" require ","Fog Logger  deprecation "," format "]}," Fog ServicesMixin providers":{"type":"method","name":"providers","children":[],"call":["Fog  services [] "," service_name downcase to_sym "," service_name downcase "," service_name ","Fog  services "]}," Fog ServicesMixin new":{"type":"method","name":"new","children":[],"call":[" raise "," service_name downcase "," service_name ","spc new "," service_provider_constant "," require_service_provider_library "," providers include? "," providers ","Fog  providers [] ","Fog  providers ","attributes delete to_s downcase to_sym ","attributes delete to_s downcase ","attributes delete to_s ","attributes delete ","attributes dup "," check_provider_alias ","Fog Logger  debug ","e backtrace join ","e backtrace ","Fog Logger  warning ","e message "," service_provider_constant  new "," service_attributes delete to_s downcase to_sym _constant "," service_ check_provider_alias _constant "," require_service_attributes delete to_s downcase to_sym _library "," require_service_ check_provider_alias _library "," attributes delete to_s downcase to_sym s include? ","  check_provider_alias s include? "," attributes delete to_s downcase to_sym s ","  check_provider_alias s ","Fog  attributes delete to_s downcase to_sym s [] ","Fog   check_provider_alias s [] ","Fog  attributes delete to_s downcase to_sym s ","Fog   check_provider_alias s ","attributes dup  delete to_s downcase to_sym ","attributes dup  delete to_s downcase ","attributes dup  delete to_s ","attributes dup  delete ","attributes dup  dup "," check_attributes delete to_s downcase to_sym _alias "," check_ check_provider_alias _alias "," check_ check_provider_alias  "]}," Fog ServicesMixin []":{"type":"method","name":"[]","children":[],"call":[" new "]}," Fog Attributes InstanceMethods identity_name":{"type":"method","name":"identity_name","children":[],"call":[" class instance_variable_get "," class "]}," Assertions assert_match_schema":{"type":"method","name":"assert_match_schema","children":[],"call":[" assert ","validator validate ","Fog Schema DataValidator  new ","Fog Schema DataValidator  new  validate "]}," Fog ServicesMixin const_get_args":{"type":"method","name":"const_get_args","children":[],"call":["args + ","RUBY_VERSION  < "]}," Fog Model cache":{"type":"method","name":"cache","children":[],"call":["Fog Cache  new "]}," Fog Cache dump_to":{"type":"method","name":"dump_to","children":[],"call":["SecureRandom  hex "," model identity "," model "," class namespace "," model service "," model class "," class "]}," Fog Cache dump":{"type":"method","name":"dump","children":[],"call":["f write ","YAML  dump ","File  open "," dump_to "," model attributes "," model "," model collection class to_s "," model collection class "," model collection "," model class to_s "," model class "," model identity "," class create_namespace "," model service "," class ","File  exist? ! ","File  exist? "," class namespace "]}," Fog Cache initialize":{"type":"method","name":"initialize","children":[],"call":[]}," Fog Cache safe_path":{"type":"method","name":"safe_path","children":[],"call":[]}," Fog Cache namespace":{"type":"method","name":"namespace","children":[],"call":[]}," Fog Cache namespace_prefix":{"type":"method","name":"namespace_prefix","children":[],"call":[]}," Fog Cache namespace_prefix=":{"type":"method","name":"namespace_prefix=","children":[],"call":[]}," Fog Cache load_cache":{"type":"method","name":"load_cache","children":[],"call":[]}," Fog Cache expire_cache!":{"type":"method","name":"expire_cache!","children":[],"call":[]}," Fog Cache create_namespace":{"type":"method","name":"create_namespace","children":[],"call":[]}," Fog Cache load":{"type":"method","name":"load","children":[],"call":[]}," Fog Cache metadata":{"type":"method","name":"metadata","children":[],"call":[]}," Fog Cache write_metadata":{"type":"method","name":"write_metadata","children":[],"call":[]}," Fog Cache clean!":{"type":"method","name":"clean!","children":[],"call":[]}," Fog Cache valid_for_load?":{"type":"method","name":"valid_for_load?","children":[],"call":[]}," Fog Cache uniq_w_block":{"type":"method","name":"uniq_w_block","children":[],"call":[]}," Fog Cache const_get_compat":{"type":"method","name":"const_get_compat","children":[],"call":[]}," Fog Compute Server increase_sshable_timeout":{"type":"method","name":"increase_sshable_timeout","children":[],"call":["@sshable_timeout >= "]}," Fog Compute Server sshable_timeout":{"type":"method","name":"sshable_timeout","children":[],"call":[" increase_sshable_timeout "]}," Fog Compute Server ready?":{"type":"method","name":"ready?","children":[],"call":[]}," Fog SSH Real validate_options":{"type":"method","name":"validate_options","children":[],"call":[" raise ","key_manager agent ","options [] ","Net SSH Authentication KeyManager  new ","Net SSH Authentication KeyManager  new  agent "]}," Fog SSH Real merge_default_options_into":{"type":"method","name":"merge_default_options_into","children":[],"call":[" otps delete "," otps ","Net SSH VALID_OPTIONS  include? ","(pair\n  (sym :paranoid)\n  (false)) merge ","options []= ","options [] ","opts delete ","opts []= ","Net SSH Verifiers  const_defined? ","(pair\n  (sym :paranoid)\n  (false)) merge  delete ","(pair\n  (sym :paranoid)\n  (false)) merge  []= "]}," Fog SSH Real build_options":{"type":"method","name":"build_options","children":[],"call":[" merge_default_options_into "," validate_options "]}," Fog SSH Real assert_net_ssh_loaded":{"type":"method","name":"assert_net_ssh_loaded","children":[],"call":[" exit ","Fog Logger  warning "," require "]}," Fog ServicesMixin check_provider_alias":{"type":"method","name":"check_provider_alias","children":[],"call":["Fog Logger  deprecation "]}," Fog Provider service_klass":{"type":"method","name":"service_klass","children":[],"call":["(str \"Fog\") join ","Fog Logger  deprecation ","(send nil :to_s) join "," to_s "," to_s split last "," to_s split "," eval "," format "," const_defined? "]}," Fog Provider underscore_name":{"type":"method","name":"underscore_name","children":[],"call":["string gsub gsub gsub tr downcase ","string gsub gsub gsub tr ","string gsub gsub gsub ","string gsub gsub ","string gsub "]}}