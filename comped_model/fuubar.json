{" Fuubar state":{"type":"method","name":"state","children":[],"call":[]}," Fuubar with_color":{"type":"method","name":"with_color","children":[],"call":[" output print "," output ","COLORS  [] "," state "," color_enabled? "," colors [] "," colors "]}," Fuubar instafail":{"type":"method","name":"instafail","children":[],"call":["RSpec Instafail  new "," output "]}," Fuubar dump_failures":{"type":"method","name":"dump_failures","children":[],"call":[]}," Fuubar start_dump":{"type":"method","name":"start_dump","children":[],"call":["@progress_bar finish "," with_color "]}," Fuubar example_failed":{"type":"method","name":"example_failed","children":[],"call":[" increment "," output puts "," output "," instafail example_failed "," instafail "," output print "," dump_backtrace "," dump_failure "," failed_examples size - "," failed_examples size "," failed_examples "," progress clear "," progress ","notification fully_formatted "," failed_count ","notification example "," instafail notification example _failed "," failed_notification example s size - "," failed_notification example s size "," failed_notification example s ","notification notification example  "]}," Fuubar example_pending":{"type":"method","name":"example_pending","children":[],"call":[" increment ","@state == "," pending_count "]}," Fuubar example_passed":{"type":"method","name":"example_passed","children":[],"call":[" increment "," passed_count "]}," Fuubar increment":{"type":"method","name":"increment","children":[],"call":["@progress_bar instance_variable_set "," example_count "," finished_count ","@progress_bar inc "," with_color ","@progress_bar increment "," progress increment "," progress "," with_current_color "]}," Fuubar start":{"type":"method","name":"start","children":[],"call":["ProgressBar  new "," output ","@progress_bar bar_mark= ","ProgressBar  create "," progress start "," progress "," with_current_color "," progress total= "," progress= ","DEFAULT_PROGRESS_BAR_OPTIONS  merge merge merge ","DEFAULT_PROGRESS_BAR_OPTIONS  merge merge "," configuration fuubar_progress_bar_options "," configuration ","DEFAULT_PROGRESS_BAR_OPTIONS  merge "," continuous_integration? "," failed_count= "," pending_count= "," passed_count= ","notification count "," example_tick_thread= "," start_tick_thread "," example_tick_thread kill "," example_tick_thread ","Pry  config hooks add_hook ","Pry  config hooks ","Pry  config ","Object  const_defined? "," example_tick "," configuration fuubar_auto_refresh "," sleep "," loop ","Thread  new "," ProgressBar  create ","ProgressBar  new  bar_mark= ","ProgressBar  create  bar_mark= "," configuration fuubar_DEFAULT_PROGRESS_BAR_OPTIONS  merge merge merge  "]}," Fuubar colors":{"type":"method","name":"colors","children":[],"call":[]}," Fuubar message":{"type":"method","name":"message","children":[],"call":["@progress_bar log ","@progress_bar respond_to? "," progress log "," progress "," progress respond_to? ","notification message "]}," Fuubar continuous_integration?":{"type":"method","name":"continuous_integration?","children":[],"call":["(or\n  (or\n    (send\n      (send\n        (const nil :ENV) :[]\n        (str \"CONTINUOUS_INTEGRATION\")) :nil?)\n    (send\n      (send\n        (const nil :ENV) :[]\n        (str \"CONTINUOUS_INTEGRATION\")) :==\n      (str \"\")))\n  (send\n    (send\n      (const nil :ENV) :[]\n      (str \"CONTINUOUS_INTEGRATION\")) :==\n    (str \"false\"))) ! ","ENV  [] == ","ENV  [] ","ENV  [] nil? ","(nil) include? ! ","(nil) include? ","(nil) exclude? "]}," Fuubar current_color":{"type":"method","name":"current_color","children":[],"call":[" configuration success_color "," configuration "," configuration pending_color "," pending_examples size > "," pending_examples size "," pending_examples "," configuration failure_color "," failed_examples size > "," failed_examples size "," failed_examples "," pending_count > "," pending_count "," failed_count > "," failed_count "]}," Fuubar color_enabled?":{"type":"method","name":"color_enabled?","children":[],"call":[" continuous_integration? ! "," continuous_integration? "," configuration color_enabled? "," configuration "]}," Fuubar with_current_color":{"type":"method","name":"with_current_color","children":[],"call":[" output print "," output "," color_enabled? "," color_code_for "," current_color "]}," Fuubar initialize":{"type":"method","name":"initialize","children":[],"call":[" progress= ","ProgressBar  create ","DEFAULT_PROGRESS_BAR_OPTIONS  merge merge merge "," output "," example_count ","DEFAULT_PROGRESS_BAR_OPTIONS  merge merge "," configuration fuubar_progress_bar_options "," configuration ","DEFAULT_PROGRESS_BAR_OPTIONS  merge "," continuous_integration? "," example_tick_lock= ","Mutex  new "," ProgressBar  create "," Mutex  new "," configuration fuubar_DEFAULT_PROGRESS_BAR_OPTIONS  merge merge merge  "]}," Fuubar configuration":{"type":"method","name":"configuration","children":[],"call":["RSpec  configuration "," RSpec  configuration "]}," Fuubar color_code_for":{"type":"method","name":"color_code_for","children":[],"call":["RSpec Core Formatters ConsoleCodes  console_code_for "," RSpec Core Formatters ConsoleCodes  console_code_for "]}," Fuubar output":{"type":"method","name":"output","children":[],"call":["Fuubar Output  new "," configuration tty? "," configuration "," Fuubar Output  new "]}," Fuubar Output tty?":{"type":"method","name":"tty?","children":[],"call":["@raw_output tty? "]}," Fuubar Output __getobj__":{"type":"method","name":"__getobj__","children":[],"call":[]}," Fuubar Output initialize":{"type":"method","name":"initialize","children":[],"call":[]}," Fuubar start_tick_thread":{"type":"method","name":"start_tick_thread","children":[],"call":[" example_tick "," sleep "," loop ","Thread  new "]}," Fuubar refresh":{"type":"method","name":"refresh","children":[],"call":[" progress refresh "," progress "," with_current_color "]}," Fuubar example_tick":{"type":"method","name":"example_tick","children":[],"call":[" refresh "," example_tick_lock synchronize "," example_tick_lock "]}," Fuubar close":{"type":"method","name":"close","children":[],"call":[" example_tick_thread kill "," example_tick_thread "]}," Fuubar example_finished":{"type":"method","name":"example_finished","children":[],"call":[" example_tick_thread kill "," example_tick_thread "]}," Fuubar example_started":{"type":"method","name":"example_started","children":[],"call":[" example_tick_thread= "," start_tick_thread "]}," Fuubar dump_pending":{"type":"method","name":"dump_pending","children":[],"call":[" configuration fuubar_output_pending_results "," configuration "]}," Fuubar example_tick_thread":{"type":"method","name":"example_tick_thread","children":[],"call":[" example_tick "," notification "," configuration fuubar_auto_refresh "," configuration "," sleep "," loop "," Thread  new "]}}