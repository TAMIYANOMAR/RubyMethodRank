{" Timers Timer fire":{"type":"method","name":"fire","children":[],"call":["@block call "," reset "," recurring "," recurring == "," cancel "]}," Timers Timer reset":{"type":"method","name":"reset","children":[],"call":["@timers insert ","Time  now + ","Time  now ","@timers cancel ","@timers add ","now + "," Float + "," Float ","@group events schedule ","@group events ","@handle cancel! ","@group timers << ","@group timers ","Time  now + rs insert ","now + rs insert ","Time  now + rs cancel ","now + rs cancel ","Time  now + rs add ","now + rs add ","@group events schedule  cancel! "]}," Timers Timer cancel":{"type":"method","name":"cancel","children":[],"call":["@timers cancel ","@group timers delete ","@group timers ","@handle cancel! "]}," Timers Timer <=>":{"type":"method","name":"<=>","children":[],"call":["@time <=> ","other time ","@offset <=> ","other offset "]}," Timers Timer initialize":{"type":"method","name":"initialize","children":[],"call":[" reset ","@group current_offset ","@group timers << ","@group timers "]}," Timers index":{"type":"method","name":"index","children":[],"call":["m + ","m - ","timer < ","@timers at ","(send\n  (lvar :r) :+\n  (lvar :l)) / ","r + ","l <= ","@timers size - ","@timers size ","(send\n  (lvar :r) :+\n  (lvar :l)) /  + ","(send\n  (lvar :r) :+\n  (lvar :l)) /  - ","timem -  < ","ti(send\n  (lvar :r) :+\n  (lvar :l)) / er < ","@timem - s at ","@ti(send\n  (lvar :r) :+\n  (lvar :l)) / ers at ","(send\n  (m + var :r) :+\n  (m + var :m + )) / ","(send\n  (lvam -  :m - ) :+\n  (lvam -  :l)) / ","m -  + ","m +  <= ","@timem - s size - ","@ti(send\n  (lvar :r) :+\n  (lvar :l)) / ers size - ","@timem - s size ","@ti(send\n  (lvar :r) :+\n  (lvar :l)) / ers size "]}," Timers empty?":{"type":"method","name":"empty?","children":[],"call":["@timers empty? "]}," Timers cancel":{"type":"method","name":"cancel","children":[],"call":["@timers delete "]}," Timers insert":{"type":"method","name":"insert","children":[],"call":["@timers insert "," index "]}," Timers fire":{"type":"method","name":"fire","children":[],"call":["timer call ","@timers shift ","time > ","@timers first time ","@timers first "," empty? ! "," empty? ","Time  now + ","Time  now ","@timers empty? ","timer fire ","@timers delete ","time >= ","timer time ","now + ","timer offset "," Float + "," Float ","@timers shift  call ","@timers first  call ","Time  now + r call ","now + r call "," Float + r call ","@@timers shift s shift ","@@timers first s shift ","@Time  now + rs shift ","@now + rs shift ","@ Float + rs shift ","Time  now +  > ","now +  > "," Float +  > ","@@timers shift s first time ","@@timers first s first time ","@Time  now + rs first Time  now +  ","@now + rs first now +  ","@ Float + rs first  Float +  ","@@timers shift s first ","@@timers first s first ","@Time  now + rs first ","@now + rs first ","@ Float + rs first ","@@timers shift s empty? ","@@timers first s empty? ","@Time  now + rs empty? ","@now + rs empty? ","@ Float + rs empty? ","@timers shift  fire ","@timers first  fire ","Time  now + r fire ","now + r fire "," Float + r fire ","@@timers shift s delete ","@@timers first s delete ","@Time  now + rs delete ","@now + rs delete ","@ Float + rs delete ","Time  now +  >= ","now +  >= "," Float +  >= ","@timers shift  time ","@timers first  time ","Time  now + r Time  now +  ","now + r now +  "," Float + r  Float +  ","@timers shift  offset ","@timers first  offset ","Time  now + r offset ","now + r offset "," Float + r offset "]}," Timers wait_interval":{"type":"method","name":"wait_interval","children":[],"call":["@timers first time - ","Time  now ","@timers first time ","@timers first "," empty? ","timer time - ","timer time ","interval > ","timer offset - "," Float ","timer offset ","@@timers first s first time - ","@@timers first s first time ","@@timers first s first ","@timers first  time - ","@timers first  time ","timer time -  > ","timer offset -  > ","@timers first  offset - ","@timers first  offset "]}," Timers wait":{"type":"method","name":"wait","children":[],"call":[" fire "," sleep ","interval >= "," wait_interval ","@timers empty? "," empty? "," f wait_interval re "," wait_interval  >= "," wait_interval nterval >= "," wait_ wait_interval  "," wa wait_interval t_ wait_interval nterval ","@t wait_interval mers empty? "]}," Timers every":{"type":"method","name":"every","children":[],"call":["Timer  new "]}," Timers after":{"type":"method","name":"after","children":[],"call":["Timer  new "]}," Timers initialize":{"type":"method","name":"initialize","children":[],"call":["SortedSet  new ","@interval start ","Hitimes Interval  new ","Hitimes Interval  new  start "]}," Timers Timer inspect":{"type":"method","name":"inspect","children":[],"call":["str << "," interval "," recurring ","now - ","@time - ","@time >= ","Time  now "," object_id to_s "," object_id ","offset - ","@offset - ","@offset >= ","@timers current_offset "," fires_in abs "," fires_in "," fires_in >= ","(str \"#<Timers::Timer:\") dup ","(begin\n  (send\n    (send nil :to_s) :[]\n    (irange\n      (int 0)\n      (int -2)))) dup "," to_s [] "," to_s ","buffer << ","(str \"#<Timers::Timer:\") dup  << ","(begin\n  (send\n    (send nil :to_s) :[]\n    (irange\n      (int 0)\n      (int -2)))) dup  << ","Time  now  - ","Time  Time  now  ","@timers current_offset  - ","@@timers current_offset  - ","@@timers current_offset  >= ","@timers current_@timers current_offset  ","((str \"#<Timers::Timer:\") dup  \"#<Timers::Timer:\") dup ","((begin\n  (send\n    (send nil :to_s) :[]\n    (irange\n      (int 0)\n      (int -2)))) dup  \"#<Timers::Timer:\") dup "]}," Timers add":{"type":"method","name":"add","children":[],"call":["@timers add "," raise ","timer is_a? "]}," Timers after_milliseconds":{"type":"method","name":"after_milliseconds","children":[],"call":[" after ","interval / "]}," Timers Timer continue":{"type":"method","name":"continue","children":[],"call":["@timers continue "]}," Timers Timer pause":{"type":"method","name":"pause","children":[],"call":["@timers pause ","@handle cancel! ","@group paused_timers add ","@group paused_timers ","@group timers delete ","@group timers "," paused? "]}," Timers Timer delay":{"type":"method","name":"delay","children":[],"call":["@timers add ","@timers delete ","@group events schedule ","@group events ","@handle cancel! ","@group events schedule  cancel! "]}," Timers current_offset":{"type":"method","name":"current_offset","children":[],"call":["@interval to_f "]}," Timers delay":{"type":"method","name":"delay","children":[],"call":["timer delay ","@timers each "]}," Timers continue_all":{"type":"method","name":"continue_all","children":[],"call":["timer continue ","@paused_timers each "]}," Timers continue":{"type":"method","name":"continue","children":[],"call":["@timers add ","@paused_timers delete "," raise ","timer is_a? "," continue_all ","timer nil? "]}," Timers pause_all":{"type":"method","name":"pause_all","children":[],"call":["timer pause ","@timers each "]}," Timers pause":{"type":"method","name":"pause","children":[],"call":["@paused_timers add ","@timers delete "," raise ","timer is_a? "," pause_all ","timer nil? "]}," Timers Timer fires_in":{"type":"method","name":"fires_in","children":[],"call":["@offset - ","@timers current_offset ","@group current_offset "]}," Timers Timeout time_remaining?":{"type":"method","name":"time_remaining?","children":[],"call":["@remaining > ","@duration - ","@interval duration "]}," Timers Timeout while_time_remaining":{"type":"method","name":"while_time_remaining","children":[],"call":["@interval stop "," time_remaining? ","@interval start ","Hitimes Interval  new ","Hitimes Interval  new  stop ","Hitimes Interval  new  start "]}," Timers Timeout initialize":{"type":"method","name":"initialize","children":[],"call":[]}," Timers Group current_offset":{"type":"method","name":"current_offset","children":[],"call":["@interval to_f "]}," Timers Group delay":{"type":"method","name":"delay","children":[],"call":["timer delay ","@timers each "]}," Timers Group continue_all":{"type":"method","name":"continue_all","children":[],"call":["timer continue ","@paused_timers each "]}," Timers Group continue":{"type":"method","name":"continue","children":[],"call":["@timers add ","@paused_timers delete "," raise ","timer is_a? "," continue_all ","timer nil? "]}," Timers Group pause_all":{"type":"method","name":"pause_all","children":[],"call":["timer pause ","@timers each "]}," Timers Group pause":{"type":"method","name":"pause","children":[],"call":["@paused_timers add ","@timers delete "," raise ","timer is_a? "," pause_all ","timer nil? ","timer pause ","@timers dup each ","@timers dup "]}," Timers Group add":{"type":"method","name":"add","children":[],"call":["@timers add "," raise ","timer is_a? "]}," Timers Group fire":{"type":"method","name":"fire","children":[],"call":["timer fire ","@timers delete ","time >= ","timer offset ","@timers first "," Float ","@events fire ","@timers first  fire "," Float r fire ","@@timers first s delete ","@ Float rs delete "," Float  >= ","@timers first  offset "," Float r offset ","@@timers first s first ","@ Float rs first "]}," Timers Group wait_interval":{"type":"method","name":"wait_interval","children":[],"call":["interval > ","timer offset - "," Float ","timer offset ","@timers first ","handle time - ","handle time ","@events first ","timer offset -  > ","@timers first  offset - ","@timers first  offset ","@@timers first s first ","@events first  time - ","@events first  time "]}," Timers Group wait":{"type":"method","name":"wait","children":[],"call":[" fire "," sleep "," wait_interval ","interval > "," block_given? "," f wait_interval re "," wa wait_interval t_ wait_interval nterval "," wait_ wait_interval  "," wait_interval nterval > "," wait_interval  > "," block_g wait_interval ven? "]}," Timers Group every":{"type":"method","name":"every","children":[],"call":["Timer  new "]}," Timers Group after_milliseconds":{"type":"method","name":"after_milliseconds","children":[],"call":[" after ","interval / "]}," Timers Group after":{"type":"method","name":"after","children":[],"call":["Timer  new "]}," Timers Group initialize":{"type":"method","name":"initialize","children":[],"call":["@interval start ","Hitimes Interval  new ","SortedSet  new ","Set  new ","Events  new ","Interval  new ","Hitimes Interval  new  start ","Interval  new  start "]}," Timers Wait time_remaining?":{"type":"method","name":"time_remaining?","children":[],"call":["@remaining > ","@duration - ","@interval duration ","@interval to_f "]}," Timers Wait while_time_remaining":{"type":"method","name":"while_time_remaining","children":[],"call":["@interval stop "," time_remaining? ","@interval start ","Hitimes Interval  new ","Interval  new ","Hitimes Interval  new  stop ","Interval  new  stop ","Hitimes Interval  new  start ","Interval  new  start "]}," Timers Wait initialize":{"type":"method","name":"initialize","children":[],"call":[]}," Timers Wait for":{"type":"method","name":"for","children":[],"call":[]}," Timers Timer resume":{"type":"method","name":"resume","children":[],"call":[" reset ","@group paused_timers delete ","@group paused_timers ","@group timers add ","@group timers "," paused? "]}," Timers Timer paused?":{"type":"method","name":"paused?","children":[],"call":["@group paused_timers include? ","@group paused_timers "]}," Timers Group cancel":{"type":"method","name":"cancel","children":[],"call":["timer cancel ","@timers dup each ","@timers dup "]}," Timers Group resume":{"type":"method","name":"resume","children":[],"call":["timer resume ","@paused_timers dup each ","@paused_timers dup "]}," Timers Events bisect_left":{"type":"method","name":"bisect_left","children":[],"call":["m + ","a [] > ","a [] ","l + ","(send\n  (lvar :u) :-\n  (lvar :l)) / ","u - ","l < ","(send\n  (lvar :u) :-\n  (lvar :l)) div ","l +  + ","m +  + ","(send\n  (m + var :u) :-\n  (m + var :m + )) / ","m +  < ","(send\n  (m + var :u) :-\n  (m + var :m + )) div "]}," Timers Events pop":{"type":"method","name":"pop","children":[],"call":["@sequence pop ","@sequence size - ","@sequence size "," bisect_left "]}," Timers Events fire":{"type":"method","name":"fire","children":[],"call":["handle fire "," pop reverse_each "," pop ","@sequence pop ","handle time <= ","handle time ","@sequence last "," merge! ","@sequence peek ","@sequence last  fire ","@sequence peek  fire ","@sequence last  time <= ","@sequence peek  time <= ","@sequence last  time ","@sequence peek  time "]}," Timers Events size":{"type":"method","name":"size","children":[],"call":["@sequence size ","@sequence size + ","@queue size "]}," Timers Events first":{"type":"method","name":"first","children":[],"call":["@sequence pop ","handle cancelled? ","@sequence last "," merge! ","@sequence peek ","@sequence last  cancelled? ","@sequence peek  cancelled? "]}," Timers Events schedule":{"type":"method","name":"schedule","children":[],"call":["@sequence insert "," bisect_left ","Handle  new ","time to_f ","@sequence []= ","current_handle cancelled? ","@sequence [] ","@queue << "," flush! ","current_Handle  new  cancelled? ","@sequence []  cancelled? "]}," Timers Events initialize":{"type":"method","name":"initialize","children":[],"call":["PriorityHeap  new "]}," Timers Events Handle fire":{"type":"method","name":"fire","children":[],"call":["@callback call "]}," Timers Events Handle to_f":{"type":"method","name":"to_f","children":[],"call":[]}," Timers Events Handle >":{"type":"method","name":">","children":[],"call":["@time > ","other to_f "]}," Timers Events Handle cancelled?":{"type":"method","name":"cancelled?","children":[],"call":["@callback nil? "]}," Timers Events Handle cancel!":{"type":"method","name":"cancel!","children":[],"call":[]}," Timers Events Handle initialize":{"type":"method","name":"initialize","children":[],"call":[]}," Timers Group now_and_every":{"type":"method","name":"now_and_every","children":[],"call":[" every ","block call "]}," Timers Group now_and_after":{"type":"method","name":"now_and_after","children":[],"call":[" after ","block call "]}," Timers Interval now":{"type":"method","name":"now","children":[],"call":[" Process  clock_gettime "]}," Timers Interval duration":{"type":"method","name":"duration","children":[],"call":[" now - "," now "]}," Timers Interval to_f":{"type":"method","name":"to_f","children":[],"call":["@total + "," duration "]}," Timers Interval stop":{"type":"method","name":"stop","children":[],"call":[" duration "]}," Timers Interval start":{"type":"method","name":"start","children":[],"call":[" now "]}," Timers Interval initialize":{"type":"method","name":"initialize","children":[],"call":[]}," Timers Events bisect_right":{"type":"method","name":"bisect_right","children":[],"call":["m + ","a [] >= ","a [] ","l + ","(send\n  (lvar :u) :-\n  (lvar :l)) div ","u - ","l < ","l +  + ","m +  + ","(send\n  (m + var :u) :-\n  (m + var :m + )) div ","m +  < "]}," Timers Events merge!":{"type":"method","name":"merge!","children":[],"call":["@sequence insert ","@sequence []= ","current_handle cancelled? ","@sequence [] "," bisect_right ","handle cancelled? ","@queue pop ","@sequence push ","@sequence []  cancelled? ","current_@queue pop  cancelled? ","@queue pop  cancelled? "]}," Timers Events Handle >=":{"type":"method","name":">=","children":[],"call":["@time >= ","other to_f "]}," Timers PriorityHeap bubble_down":{"type":"method","name":"bubble_down","children":[],"call":["@contents [] ","@contents []= ","@contents [] < ","right_value > ","right_value nil? ","left_index + ","left_value nil? ","(send\n  (int 2) :*\n  (lvar :index)) + ","2 * ","@contents []  > ","@contents []  nil? ","(send\n  (int 2) :*\n  (lvar :index)) +  + "]}," Timers PriorityHeap bubble_up":{"type":"method","name":"bubble_up","children":[],"call":["(send\n  (lvar :index) :-\n  (int 1)) / ","index - ","@contents [] ","@contents []= ","@contents [] < ","index > "]}," Timers PriorityHeap swap":{"type":"method","name":"swap","children":[],"call":["@contents [] ","@contents []= "]}," Timers PriorityHeap validate!":{"type":"method","name":"validate!","children":[],"call":[" validate! "," raise ","value < ","@contents [] ","left_index + ","index * + ","index * ","@contents []  < ","index * +  + "]}," Timers PriorityHeap push":{"type":"method","name":"push","children":[],"call":[" bubble_up ","@contents size - ","@contents size ","@contents push "]}," Timers PriorityHeap pop":{"type":"method","name":"pop","children":[],"call":[" bubble_down ","@contents []= ","@contents pop ","@contents [] ","@contents size == ","@contents size ","@contents empty? "]}," Timers PriorityHeap size":{"type":"method","name":"size","children":[],"call":["@contents size "]}," Timers PriorityHeap peek":{"type":"method","name":"peek","children":[],"call":["@contents [] "]}," Timers PriorityHeap initialize":{"type":"method","name":"initialize","children":[],"call":[]}," Timers Events Handle <=>":{"type":"method","name":"<=>","children":[],"call":["@time <=> ","other time "]}," Timers PriorityHeap valid?":{"type":"method","name":"valid?","children":[],"call":["@contents [] >= ","@contents [] ","(send\n  (lvar :e) :-\n  (int 1)) / ","e - ","(irange\n  (int 1)\n  (begin\n    (send\n      (send\n        (ivar :@contents) :size) :-\n      (int 1)))) all? ","@contents size - ","@contents size "]}," Timers PriorityHeap clear!":{"type":"method","name":"clear!","children":[],"call":[]}," Timers Events flush!":{"type":"method","name":"flush!","children":[],"call":["@queue pop ","@queue last "]}}