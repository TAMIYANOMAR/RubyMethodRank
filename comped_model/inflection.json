{" Inflection plural":{"type":"method","name":"plural","children":[],"call":[" plural_of []= "," plural_of ","hash [] ","result sub! "," pluralization_rules ","word dup ","result dup "," plural_of [] ","word == ","word dup  sub! "," plural_of []  sub! ","word dup  dup "," plural_of []  dup "]}," Inflection singular":{"type":"method","name":"singular","children":[],"call":[" singular_of []= "," singular_of ","hash [] ","result sub! "," singularization_rules ","word dup ","result dup "," singular_of [] ","word dup  sub! "," singular_of []  sub! ","word dup  dup "," singular_of []  dup "]}," Inflection pluralization_rules":{"type":"method","name":"pluralization_rules","children":[],"call":["Hash  [] ","@plural_rules flatten ","Regexp  new ","( + + ","( + ","(send\n  (ivar :@plural_rules) :map) join ","@plural_rules map "]}," Inflection singularization_rules":{"type":"method","name":"singularization_rules","children":[],"call":["Hash  [] invert ","Hash  [] ","@singular_rules flatten ","Regexp  new ","( + + ","( + ","(send\n  (ivar :@singular_rules) :map) join ","@singular_rules map "]}," Inflection plural_rule":{"type":"method","name":"plural_rule","children":[],"call":["@plural_rules << "]}," Inflection singular_rule":{"type":"method","name":"singular_rule","children":[],"call":["@singular_rules << "]}," Inflection rule":{"type":"method","name":"rule","children":[],"call":[" word "," plural_rule "," singular_rule "]}," Inflection plural_word":{"type":"method","name":"plural_word","children":[],"call":["@plural_of []= ","plural capitalize ","singular capitalize "]}," Inflection singular_word":{"type":"method","name":"singular_word","children":[],"call":["@singular_of []= ","singular capitalize ","plural capitalize "]}," Inflection clear":{"type":"method","name":"clear","children":[],"call":["type == "]}," Inflection word":{"type":"method","name":"word","children":[],"call":[" plural_word "," singular_word "]}}