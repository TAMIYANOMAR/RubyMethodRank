{" Class json_creatable?":{"type":"method","name":"json_creatable?","children":[],"call":[" respond_to? "]}," Kernel jj":{"type":"method","name":"jj","children":[],"call":[" puts ","JSON  pretty_unparse ","objs each ","JSON  pretty_generate "]}," Kernel j":{"type":"method","name":"j","children":[],"call":[" puts ","JSON  unparse ","objs each ","JSON  generate "]}," NilClass to_json":{"type":"method","name":"to_json","children":[],"call":[]}," FalseClass to_json":{"type":"method","name":"to_json","children":[],"call":[" to_s "]}," TrueClass to_json":{"type":"method","name":"to_json","children":[],"call":[" to_s "]}," String to_json_raw":{"type":"method","name":"to_json_raw","children":[],"call":[" to_json_raw_object to_json "," to_json_raw_object "]}," String to_json_raw_object":{"type":"method","name":"to_json_raw_object","children":[],"call":[" unpack "," class name "," class "]}," String json_create":{"type":"method","name":"json_create","children":[],"call":[]}," String to_json":{"type":"method","name":"to_json","children":[],"call":["\" << << ","\" << ","JSON  utf8_to_json "]}," Float to_json":{"type":"method","name":"to_json","children":[],"call":[" to_s "]}," Integer to_json":{"type":"method","name":"to_json","children":[],"call":[" to_s "]}," Array json_transform":{"type":"method","name":"json_transform","children":[],"call":["result << "," json_shift ","state array_nl ","(send nil :map) join "," json_shift << ","value to_json ","depth + "," map ","delim << "]}," Array json_shift":{"type":"method","name":"json_shift","children":[],"call":["state indent * ","state indent ","state array_nl empty? ! ","state array_nl empty? ","state array_nl "]}," Array json_check_circular":{"type":"method","name":"json_check_circular","children":[],"call":["state forget ","state remember "," raise ","state seen? "]}," Array to_json":{"type":"method","name":"to_json","children":[],"call":[" json_transform "," json_check_circular ","JSON State  from_state ","JSON State  from_JSON State  from_state  "]}," Hash json_transform":{"type":"method","name":"json_transform","children":[],"call":["result << "," json_shift ","state object_nl ","(send nil :map) join "," json_shift << << << << ","value to_json ","depth + "," json_shift << << << ","state space "," json_shift << << "," json_shift << ","key to_s to_json ","key to_s "," map ","delim << "]}," Hash json_shift":{"type":"method","name":"json_shift","children":[],"call":["state indent * ","state indent ","state object_nl empty? ! ","state object_nl empty? ","state object_nl "]}," Hash json_check_circular":{"type":"method","name":"json_check_circular","children":[],"call":["state forget ","state remember "," raise ","state seen? "]}," Hash to_json":{"type":"method","name":"to_json","children":[],"call":[" json_transform "," json_check_circular ","JSON State  from_state ","JSON State  from_JSON State  from_state  "]}," Object to_json":{"type":"method","name":"to_json","children":[],"call":[" to_s to_json "," to_s ","result to_json ","r []= "," instance_variable_get ","name [] "," instance_variables inject "," instance_variables "," class name "," class ","JSON  create_id "]}," JSON pretty_unparse":{"type":"method","name":"pretty_unparse","children":[],"call":["obj to_json ","JSON State  new "]}," JSON unparse":{"type":"method","name":"unparse","children":[],"call":["obj to_json ","JSON State  from_state "]}," JSON parse":{"type":"method","name":"parse","children":[],"call":["Parser  new parse ","Parser  new ","JSON  parser new parse ","JSON  parser new ","JSON  parser "]}," JSON utf8_to_json":{"type":"method","name":"utf8_to_json","children":[],"call":[" raise ","Encountered unknown UTF-8 byte: %x! % ","result << << "," utf8_to_utf16 ","string [] ","result << ","char & == ","char & ","(and\n  (send\n    (const nil :JSON) :support_unicode?)\n  (send\n    (gvar :$KCODE) :==\n    (str \"UTF8\"))) ! ","$KCODE == ","JSON  support_unicode? ","char between? ","\\u%04x % ","char == ","i < ","string size ","e class ","s gsub! ","JSON UTF8toUTF16  iconv unpack [] ","JSON UTF8toUTF16  iconv unpack ","JSON UTF8toUTF16  iconv ","c size == ","c size ","string gsub! ","MAP  [] ","string gsub ","string force_encoding ","string << ","string dup ","map [] "," raiJSON UTF8toUTF16  iconv unpack [] e ","reJSON UTF8toUTF16  iconv unpack [] ult << << ","JSON UTF8toUTF16  iconv unpack [] tring [] ","string dup  [] ","reJSON UTF8toUTF16  iconv unpack [] ult << ","string []  & == ","string []  & ","(and\n  (JSON UTF8toUTF16  iconv unpack [] end\n    (conJSON UTF8toUTF16  iconv unpack [] t nil :JSON) :JSON UTF8toUTF16  iconv unpack [] upport_unicode?)\n  (JSON UTF8toUTF16  iconv unpack [] end\n    (gvar :$KCODE) :==\n    (JSON UTF8toUTF16  iconv unpack [] tr \"UTF8\"))) ! ","JSON  JSON UTF8toUTF16  iconv unpack [] upport_unicode? ","string []  between? ","string []  == ","JSON UTF8toUTF16  iconv unpack [] tring JSON UTF8toUTF16  iconv unpack [] ize ","string dup  size ","e claJSON UTF8toUTF16  iconv unpack [] JSON UTF8toUTF16  iconv unpack []  ","JSON UTF8toUTF16  iconv unpack []  gJSON UTF8toUTF16  iconv unpack [] ub! ","c JSON UTF8toUTF16  iconv unpack [] ize == ","c JSON UTF8toUTF16  iconv unpack [] ize ","JSON UTF8toUTF16  iconv unpack [] tring gJSON UTF8toUTF16  iconv unpack [] ub! ","string dup  gsub! ","JSON UTF8toUTF16  iconv unpack [] tring gJSON UTF8toUTF16  iconv unpack [] ub ","string dup  gsub ","JSON UTF8toUTF16  iconv unpack [] tring force_encoding ","string dup  force_encoding ","JSON UTF8toUTF16  iconv unpack [] tring << ","string dup  << ","JSON UTF8toUTF16  iconv unpack [] tring dup ","string dup  dup "]}," JSON utf16_to_utf8":{"type":"method","name":"utf16_to_utf8","children":[],"call":["JSON UTF16toUTF8  iconv "," << << ","string [] to_i ","string [] "," << "]}," JSON utf8_to_utf16":{"type":"method","name":"utf8_to_utf16","children":[],"call":["JSON UTF8toUTF16  iconv unpack [] ","JSON UTF8toUTF16  iconv unpack ","JSON UTF8toUTF16  iconv "]}," JSON State forget":{"type":"method","name":"forget","children":[],"call":["@seen delete ","object __id__ "]}," JSON State remember":{"type":"method","name":"remember","children":[],"call":["@seen []= ","object __id__ "]}," JSON State seen?":{"type":"method","name":"seen?","children":[],"call":["@seen key? ","object __id__ "]}," JSON State initialize":{"type":"method","name":"initialize","children":[],"call":["opts [] "]}," JSON State from_state":{"type":"method","name":"from_state","children":[],"call":[]}," JSON Parser parse_object":{"type":"method","name":"parse_object","children":[],"call":[" raise "," peek "," skip ","klass json_create ","klass json_creatable? ","p const_get ","klassname sub split inject ","klassname sub split ","klassname sub ","result [] "," scan "," match? ","result []= ","(lvasgn :value\n  (send nil :parse_value)) equal? "," parse_value ","(lvasgn :string\n  (send nil :parse_string)) != "," parse_string "," eos? ","result []  sub split inject ","result []  sub split ","result []  sub ","klass json_create  [] ","klass json_create  []= ","(lvasgn : parse_value \n  (send nil :parse_ parse_value )) equal? "," parse_ parse_value  ","(lvasgn : parse_string \n  (send nil :parse_ parse_string )) != "," parse_ parse_string  "]}," JSON Parser parse_array":{"type":"method","name":"parse_array","children":[],"call":[" raise "," peek "," skip "," scan "," match? ","result << ","(lvasgn :value\n  (send nil :parse_value)) != "," parse_value "," eos? ","(lvasgn : parse_value \n  (send nil :parse_ parse_value )) != "," parse_ parse_value  "]}," JSON Parser parse_value":{"type":"method","name":"parse_value","children":[],"call":[" parse_object "," scan "," parse_array ","(lvasgn :string\n  (send nil :parse_string)) != "," parse_string "," Integer "," [] "," Float ","(lvasgn : parse_string \n  (send nil :parse_ parse_string )) != "," parse_ parse_string  "]}," JSON Parser parse_string":{"type":"method","name":"parse_string","children":[],"call":["$~ [] to_i chr ","$~ [] to_i ","$~ [] ","JSON  utf16_to_utf8 ","$KCODE == ","JSON  support_unicode? "," [] gsub "," [] "," [] empty? "," scan "]}," JSON Parser parse":{"type":"method","name":"parse","children":[],"call":[" raise "," peek ","(send\n  (begin\n    (lvasgn :value\n      (send nil :parse_value))) :equal?\n  (const nil :UNPARSED)) ! ","(lvasgn :value\n  (send nil :parse_value)) equal? "," parse_value "," skip "," parse_object "," scan "," parse_array "," eos? "," reset ","(send\n  (begin\n    (lvasgn : parse_value \n      (send nil :parse_ parse_value ))) :equal?\n  (const nil :UNPARSED)) ! ","(lvasgn : parse_value \n  (send nil :parse_ parse_value )) equal? "," parse_ parse_value  "]}," JSON support_unicode?":{"type":"method","name":"support_unicode?","children":[],"call":["@support_unicode ! ! ","@support_unicode ! "]}," JSON support_unicode=":{"type":"method","name":"support_unicode=","children":[],"call":[]}," JSON Editor start":{"type":"method","name":"start","children":[],"call":["Gtk  main ","@window show_all "," block_given? ","@window icon_list= ","Editor  fetch_icon ","Editor MainWindow  new ","Gtk  init ","Editor MainWindow  new  show_all ","Editor MainWindow  new  icon_list= "]}," JSON Editor MainWindow select_file":{"type":"method","name":"select_file","children":[],"call":["Gtk  main ","fs show_all ","Gtk  main_quit ","fs destroy ","fs cancel_button signal_connect ","fs cancel_button ","fs filename ","fs ok_button signal_connect ","fs ok_button ","fs signal_connect ","FileSelection  new set_modal set_filename set_transient_for ","FileSelection  new set_modal set_filename ","Dir  pwd + ","Dir  pwd ","FileSelection  new set_modal ","FileSelection  new ","File  join ","File  dirname ","fs set_transient_for ","fs set_filename ","fs set_modal ","FileSelection  new set_modal set_filename set_transient_for  show_all ","FileSelection  new  show_all ","FileSelection  new set_modal set_filename set_transient_for  destroy ","FileSelection  new  destroy ","FileSelection  new set_modal set_filename set_transient_for  cancel_button signal_connect ","FileSelection  new  cancel_button signal_connect ","FileSelection  new set_modal set_filename set_transient_for  cancel_button ","FileSelection  new  cancel_button ","fs fs filename  ","FileSelection  new set_modal set_filename set_transient_for  filename ","FileSelection  new  filename ","FileSelection  new set_modal set_filename set_transient_for  ok_button signal_connect ","FileSelection  new  ok_button signal_connect ","FileSelection  new set_modal set_filename set_transient_for  ok_button ","FileSelection  new  ok_button ","FileSelection  new set_modal set_filename set_transient_for  signal_connect ","FileSelection  new  signal_connect ","FileSelection  new set_modal set_fs filename  set_transient_for ","FileSelection  new set_modal set_fs filename  ","FileSelection  new set_modal set_filename set_transient_for  set_transient_for ","FileSelection  new  set_transient_for ","fs set_fs filename  ","FileSelection  new set_modal set_filename set_transient_for  set_filename ","FileSelection  new  set_filename ","FileSelection  new set_modal set_filename set_transient_for  set_modal ","FileSelection  new  set_modal "]}," JSON Editor MainWindow read_data":{"type":"method","name":"read_data","children":[],"call":[" quit ","Editor  error_dialog ","JSON  parse ","iconverter iconv ","Iconv  new ","(str \"^utf8$\") match ! ","(str \"^utf8$\") match "," check_pretty_printed ","File  read ","f read "," open "," parse_json ","Iconv  new  iconv "," parse_iconverter iconv  "," parse_File  read  "," parse_f read  "]}," JSON Editor MainWindow check_pretty_printed":{"type":"method","name":"check_pretty_printed","children":[],"call":["@options_menu pretty_item active= ","@options_menu pretty_item ","(and\n  (begin\n    (lvasgn :nl_index\n      (send\n        (lvar :json) :index\n        (str \"\\n\"))))\n  (send\n    (lvar :nl_index) :!=\n    (send\n      (send\n        (lvar :json) :size) :-\n      (int 1)))) ! ! ","(and\n  (begin\n    (lvasgn :nl_index\n      (send\n        (lvar :json) :index\n        (str \"\\n\"))))\n  (send\n    (lvar :nl_index) :!=\n    (send\n      (send\n        (lvar :json) :size) :-\n      (int 1)))) ! ","nl_index != ","json size - ","json size ","json index ","@options_menu (and\n  (begin\n    (lvasgn :nl_index\n      (send\n        (lvar :json) :index\n        (str \"\\n\"))))\n  (send\n    (lvar :nl_index) :!=\n    (send\n      (send\n        (lvar :json) :size) :-\n      (int 1)))) ! ! _item active= ","@options_menu (and\n  (begin\n    (lvasgn :nl_index\n      (send\n        (lvar :json) :index\n        (str \"\\n\"))))\n  (send\n    (lvar :nl_index) :!=\n    (send\n      (send\n        (lvar :json) :size) :-\n      (int 1)))) ! ! _item ","(and\n  (begin\n    (lvasgn :json index \n      (send\n        (lvar :json) :index\n        (str \"\\n\"))))\n  (send\n    (lvar :json index ) :!=\n    (send\n      (send\n        (lvar :json) :size) :-\n      (int 1)))) ! ! ","(and\n  (begin\n    (lvasgn :json index \n      (send\n        (lvar :json) :index\n        (str \"\\n\"))))\n  (send\n    (lvar :json index ) :!=\n    (send\n      (send\n        (lvar :json) :size) :-\n      (int 1)))) ! ","json index  != "]}," JSON Editor MainWindow load_file":{"type":"method","name":"load_file","children":[],"call":[" display_title "," toplevel display_status "," toplevel "," read_data ","Editor  error_dialog ","File  directory? "," read_ read_data  "]}," JSON Editor MainWindow store_file":{"type":"method","name":"store_file","children":[],"call":["Editor  error_dialog "," unchange "," toplevel display_status "," toplevel ","File  rename ","path + ","output write ","JSON  unparse ","JSON  pretty_unparse ","@options_menu pretty_item active? ","@options_menu pretty_item ","File  open ","Editor  model2data ","@treeview model iter_first ","@treeview model ","output puts ","JSON  pretty_generate ","JSON  generate ","Editor  model2Editor  model2data  "]}," JSON Editor MainWindow file_save_as":{"type":"method","name":"file_save_as","children":[],"call":[" store_file "," select_file "]}," JSON Editor MainWindow file_save":{"type":"method","name":"file_save","children":[],"call":[" file_save_as "," store_file "]}," JSON Editor MainWindow file_open":{"type":"method","name":"file_open","children":[],"call":[" view_new_model ","Editor  data2model "," load_file "," select_file ","Editor   load_file 2model "]}," JSON Editor MainWindow clear":{"type":"method","name":"clear","children":[],"call":[" view_new_model "," ask_save "]}," JSON Editor MainWindow display_title":{"type":"method","name":"display_title","children":[],"call":[" title= ","title << ","TITLE  dup "," TITLE  dup = ","TITLE  dup  << "]}," JSON Editor MainWindow quit":{"type":"method","name":"quit","children":[],"call":["Gtk  main_quit "," destroy "," ask_save ","Gtk  main_level > ","Gtk  main_level "]}," JSON Editor MainWindow ask_save":{"type":"method","name":"ask_save","children":[],"call":[" file_save_as "," file_save ","Editor  question_dialog "]}," JSON Editor MainWindow display_status":{"type":"method","name":"display_status","children":[],"call":["@status_bar push ","@status_bar get_context_id ","@status_bar pop "]}," JSON Editor MainWindow view_new_model":{"type":"method","name":"view_new_model","children":[],"call":[" unchange ","@treeview expand_all ","@treeview expanded= ","@treeview model= "]}," JSON Editor MainWindow unchange":{"type":"method","name":"unchange","children":[],"call":[" display_title "]}," JSON Editor MainWindow change":{"type":"method","name":"change","children":[],"call":[" display_title "]}," JSON Editor MainWindow create_menu_bar":{"type":"method","name":"create_menu_bar","children":[],"call":["menu_bar append ","@options_menu create ","OptionsMenu  new ","@edit_menu create ","EditMenu  new ","@file_menu create ","FileMenu  new ","MenuBar  new ","MenuBar  new  append ","OptionsMenu  new  create ","EditMenu  new  create ","FileMenu  new  create "]}," JSON Editor MainWindow initialize":{"type":"method","name":"initialize","children":[],"call":[" view_new_model ","Editor  data2model "," read_data ","vbox pack_start ","Statusbar  new ","sw add ","sw set_policy ","sw shadow_type= ","ScrolledWindow  new "," create_menu_bar "," display_status ","@treeview signal_connect ","JSONTreeView  new "," add ","VBox  new "," quit "," signal_connect "," set_default_size "," display_title "," location_open ","c wait_for_text ","Gtk Clipboard  get ","event button == ","event button ","Editor   read_data 2model "," read_ read_data  ","VBox  new  pack_start ","vbox paGtk Clipboard  get k_start ","ScrolledWindow  new  add ","ScrolledWindow  new  set_policy ","sw set_poliGtk Clipboard  get y ","ScrolledWindow  new  shadow_type= ","SGtk Clipboard  get rolledWindow  new "," create_ create_menu_bar  "," Gtk Clipboard  get reate_menu_bar ","JSONTreeView  new  signal_connect ","@treeview signal_Gtk Clipboard  get onneGtk Clipboard  get t "," signal_Gtk Clipboard  get onneGtk Clipboard  get t "," loGtk Clipboard  get ation_open ","Gtk Clipboard  get  wait_for_text "]}," JSON Editor JSONTreeView expand_collapse":{"type":"method","name":"expand_collapse","children":[],"call":[" collapse_row ","iter path "," expand_row "," expanded "]}," JSON Editor JSONTreeView ask_for_find_term":{"type":"method","name":"ask_for_find_term","children":[],"call":["dialog destroy ","regex_input text ","response == ","dialog run ","dialog show_all ","dialog vbox add ","dialog vbox ","regex_input text= ","hbox pack_start ","Entry  new ","hbox add ","Label  new ","HBox  new ","Dialog  new "," focus= ","dialog signal_connect ","Editor  error_dialog ","Regexp  new ","icase_checkbox active? ","dialog vbox pack_start ","icase_checkbox active= ","search casefold? ","search source ","regex_input width_chars= ","CheckButton  new ","Dialog  new  destroy ","Entry  new  text ","Dialog  new  run ","Dialog  new  show_all ","Dialog  new  vbox add ","Dialog  new  vbox ","Entry  new  text= ","HBox  new  pack_start ","HBox  new  add ","Dialog  new  signal_connect ","Editor  error_Dialog  new  ","CheckButton  new  active? ","Dialog  new  vbox pack_start ","CheckButton  new  active= ","Entry  new  width_chars= "]}," JSON Editor JSONTreeView ask_for_order":{"type":"method","name":"ask_for_order","children":[],"call":["dialog destroy ","reverse_checkbox active? ","order_input text ","response == ","dialog run ","dialog show_all ","dialog vbox add ","dialog vbox ","hbox pack_start ","CheckButton  new ","order_input text= ","Entry  new ","hbox add ","Label  new ","HBox  new ","Dialog  new "," focus= ","dialog signal_connect ","dialog vbox pack_start ","order_input width_chars= ","Dialog  new  destroy ","CheckButton  new  active? ","Entry  new  text ","Dialog  new  run ","Dialog  new  show_all ","Dialog  new  vbox add ","Dialog  new  vbox ","HBox  new  pack_start ","Entry  new  text= ","HBox  new  add ","Dialog  new  signal_connect ","Dialog  new  vbox pack_start ","Entry  new  width_chars= "]}," JSON Editor JSONTreeView ask_for_element":{"type":"method","name":"ask_for_element","children":[],"call":["dialog destroy ","(lvar :type) to_s ","value_input text "," Float "," Integer ","ALL_TYPES  [] ","type_input active ","response == ","dialog run ","dialog show_all ","dialog vbox add ","dialog vbox "," configure_value ","value_input text= ","hbox pack_start ","Entry  new ","hbox add ","Label  new ","HBox  new ","type_input signal_connect ","type_input active= ","t == ","type_input append_text ","ALL_TYPES  each_with_index ","ComboBox  new ","Dialog  new ","parent type ","types [] ","types each_with_index "," focus= ","dialog signal_connect ","dialog vbox pack_start ","value_input width_chars= ","1 / ","(lvasgn :t\n  (send\n    (lvar :value_input) :text)) == ","Dialog  new  destroy ","dialog desvalue_input text roy ","(lvar :ALL_TYPES  [] ) to_s ","(lvar :types [] ) to_s ","(lvar :value_input text ype) value_input text o_s ","Entry  new  text ","value_inpuvalue_input text  value_input text exvalue_input text  "," Floavalue_input text  "," Invalue_input text eger ","ALL_TYPES  [] _input active ","types [] _input active ","ComboBox  new  active ","value_input text ype_inpuvalue_input text  acvalue_input text ive ","Dialog  new  run ","Dialog  new  show_all ","Dialog  new  vbox add ","Dialog  new  vbox ","Entry  new  text= ","value_inpuvalue_input text  value_input text exvalue_input text = ","HBox  new  pack_start ","hbox pack_svalue_input text arvalue_input text  ","Envalue_input text ry  new ","HBox  new  add ","ALL_TYPES  [] _input signal_connect ","types [] _input signal_connect ","ComboBox  new  signal_connect ","value_input text ype_inpuvalue_input text  signal_connecvalue_input text  ","ALL_TYPES  [] _input active= ","types [] _input active= ","ComboBox  new  active= ","value_input text ype_inpuvalue_input text  acvalue_input text ive= ","value_input text  == ","ALL_TYPES  [] _input append_text ","types [] _input append_text ","ComboBox  new  append_text ","value_input text ype_inpuvalue_input text  append_value_input text exvalue_input text  ","ALL_TYPES  each_wivalue_input text h_index ","parent ALL_TYPES  []  ","parent types []  ","parenvalue_input text  value_input text ype ","ALL_TYPES  [] s [] ","types [] s [] ","value_input text ypes [] ","ALL_TYPES  [] s each_with_index ","types [] s each_with_index ","value_input text ypes each_wivalue_input text h_index ","Dialog  new  signal_connect ","dialog signal_connecvalue_input text  ","Dialog  new  vbox pack_start ","dialog vbox pack_svalue_input text arvalue_input text  ","Entry  new  width_chars= ","value_inpuvalue_input text  widvalue_input text h_chars= ","(lvasgn :t\n  (send\n    (lvar :Entry  new ) :text)) == ","(lvasgn :value_input text \n  (send\n    (lvar :value_inpuvalue_input text ) :value_input text exvalue_input text )) == "]}," JSON Editor JSONTreeView ask_for_hash_pair":{"type":"method","name":"ask_for_hash_pair","children":[],"call":["dialog destroy ","value_input text ","ALL_TYPES  [] ","type_input active ","key_input text ","response == ","dialog run ","dialog show_all ","dialog vbox add ","dialog vbox ","value_input text= ","hbox pack_start ","Entry  new ","hbox add ","Label  new ","HBox  new ","value_input editable= ","type_input signal_connect ","type_input active= ","type_input append_text ","ALL_TYPES  each ","ComboBox  new "," toplevel display_status "," toplevel ","key_input text= ","c content == ","c content ","parent any? ","key_input signal_connect ","Dialog  new "," focus= ","dialog signal_connect ","dialog vbox pack_start ","value_input width_chars= ","dialog width_request= ","Dialog  new  destroy ","Entry  new  text ","ALL_TYPES  [] _input active ","ComboBox  new  active ","Dialog  new  run ","Dialog  new  show_all ","Dialog  new  vbox add ","Dialog  new  vbox ","Entry  new  text= ","HBox  new  pack_start ","HBox  new  add ","Entry  new  editable= ","ALL_TYPES  [] _input signal_connect ","ComboBox  new  signal_connect ","ALL_TYPES  [] _input active= ","ComboBox  new  active= ","ALL_TYPES  [] _input append_text ","ComboBox  new  append_text ","c value_input text  == ","c value_input text  ","Entry  new  signal_connect ","Dialog  new  signal_connect ","Dialog  new  vbox pack_start ","Entry  new  width_chars= ","Dialog  new  width_request= "]}," JSON Editor JSONTreeView create_node":{"type":"method","name":"create_node","children":[],"call":[" expand_collapse ","iter content= ","iter type= ","new_model iter_first "," toplevel view_new_model "," toplevel ","Editor  data2model "," model append "," model "," model append  content= "," model append  type= ","new_model  model append _first ","Editor  data2model  iter_first "," toplevel view_Editor  data2model  "]}," JSON Editor JSONTreeView add_popup_menu":{"type":"method","name":"add_popup_menu","children":[],"call":["menu create ","PopUpMenu  new ","PopUpMenu  new  create "]}," JSON Editor JSONTreeView configure_value":{"type":"method","name":"configure_value","children":[],"call":[" raise ","value editable= ","value text ","value text= "]}," JSON Editor JSONTreeView cell_edited":{"type":"method","name":"cell_edited","children":[],"call":[" window change "," window "," fail ","iter type ","iter content= ","(rescue\n  (rescue\n    (send nil :Integer\n      (lvar :value))\n    (resbody nil nil\n      (send nil :Float\n        (lvar :value))) nil)\n  (resbody nil nil\n    (int 0)) nil) to_s "," Float "," Integer ","iter type= ","value == ","value downcase! "," toplevel display_status "," toplevel "," unify_key "," model get_iter "," model "," model get_iter  type "," model get_iter  content= "," model get_iter  type= "," model get_ model get_iter  "]}," JSON Editor JSONTreeView unify_key":{"type":"method","name":"unify_key","children":[],"call":["iter content= "," sprintf ","c content == ","c content ","c != ","parent any? ","iter parent ","iter type == ","iter type ","iter parent  any? ","iter iter parent  "]}," JSON Editor JSONTreeView add_columns":{"type":"method","name":"add_columns","children":[],"call":[" append_column ","cell signal_connect "," method ","TreeViewColumn  new ","cell editable= ","CellRendererText  new ","CellRendererPixbuf  new "," append_TreeViewColumn  new  ","CellRendererText  new  signal_connect ","CellRendererPixbuf  new  signal_connect ","CellRendererText  new  editable= ","CellRendererPixbuf  new  editable= "]}," JSON Editor JSONTreeView initialize":{"type":"method","name":"initialize","children":[],"call":[" add_popup_menu "," add_columns "," headers_visible= "," selection mode= "," selection ","TreeStore  new "]}," JSON Editor OptionsMenu create":{"type":"method","name":"create","children":[],"call":[" window unchange "," window ","@pretty_item active= "," add_item "," method ","title submenu= "," menu ","MenuItem  new "," add_item  active= ","MenuItem  new  submenu= "]}," JSON Editor OptionsMenu pretty_saving":{"type":"method","name":"pretty_saving","children":[],"call":[" window change "," window ","@pretty_item toggled "]}," JSON Editor OptionsMenu collapsed_nodes":{"type":"method","name":"collapsed_nodes","children":[],"call":[" expand_all "," expanded= "," collapse_all "," expanded "]}," JSON Editor EditMenu create":{"type":"method","name":"create","children":[],"call":[" add_item "," method "," add_separator ","title submenu= "," menu ","MenuItem  new ","MenuItem  new  submenu= "]}," JSON Editor EditMenu sort":{"type":"method","name":"sort","children":[],"call":[" toplevel display_status "," toplevel "," window change "," window "," expand_collapse "," model remove "," model ","m insert_before ","Editor  data2model ","Editor  error_dialog ","block [] <=> ","block [] ","ary sort! "," eval "," ask_for_order ","Editor  model2data ","current parent ","current type == ","current type "," selection selected "," selection "," eval  [] <=> "," eval  [] ","Editor  model2data  sort! ","current current parent  "," selection selected  parent "," selection selected  type == "," selection selected  type "]}," JSON Editor EditMenu find_again":{"type":"method","name":"find_again","children":[],"call":[" set_cursor ","i path ","@search match ","i [] ","@iter != ","iter recursive_each "," model get_iter "," model ","@ model get_iter  != "," model get_iter  recursive_each "," model get_ model get_iter  "]}," JSON Editor EditMenu find":{"type":"method","name":"find","children":[],"call":[" set_cursor ","i path ","@search match ","i [] ","@iter != ","iter recursive_each "," model get_iter "," model ","Editor  error_dialog ","Regexp  new "," ask_for_find_term ","Regexp  new  match "," ask_for_find_term  match ","@ ask_for_find_term  match ","@ model get_iter  != "," model get_iter  recursive_each "," model get_ model get_iter  "]}," JSON Editor FileMenu create":{"type":"method","name":"create","children":[],"call":[" add_item "," method "," add_separator ","title submenu= "," menu ","MenuItem  new ","MenuItem  new  submenu= "]}," JSON Editor FileMenu quit":{"type":"method","name":"quit","children":[],"call":[" window quit "," window "]}," JSON Editor FileMenu save_as":{"type":"method","name":"save_as","children":[],"call":[" window file_save_as "," window "]}," JSON Editor FileMenu save":{"type":"method","name":"save","children":[],"call":[" window file_save "," window "]}," JSON Editor FileMenu revert":{"type":"method","name":"revert","children":[],"call":[" file_open "," window instance_eval "," window "]}," JSON Editor FileMenu open":{"type":"method","name":"open","children":[],"call":[" window file_open "," window "]}," JSON Editor FileMenu new":{"type":"method","name":"new","children":[],"call":[" window clear "," window "]}," JSON Editor PopUpMenu create":{"type":"method","name":"create","children":[],"call":[" menu popup "," menu "," signal_connect ","event time ","event button ","event button == ","event kind_of? "," menu show_all "," add_item "," method "," add_separator "]}," JSON Editor PopUpMenu collapse_expand":{"type":"method","name":"collapse_expand","children":[],"call":[" toplevel display_status "," toplevel "," expand_row ","current path "," collapse_row "," row_expanded? "," selection selected "," selection "," selection selected  path "]}," JSON Editor PopUpMenu insert_new_node":{"type":"method","name":"insert_new_node","children":[],"call":[" toplevel display_status "," toplevel "," window change "," window ","Inserted an element to  + ","iter content= ","iter type= "," model insert_before "," model "," ask_for_element ","c == ","parent each_with_index ","parent_type == ","parent type ","parent parent ","current parent "," selection selected "," selection "," model insert_before  content= "," model insert_before  type= ","current parent  each_with_index ","parent type  == ","current parent _type == ","current parent  type ","current parent  current parent  ","current current parent  "," selection selected  parent "]}," JSON Editor PopUpMenu append_new_node":{"type":"method","name":"append_new_node","children":[],"call":[" window change "," window "," create_node "," ask_for_element "," toplevel display_status "," toplevel "," ask_for_hash_pair ","parent type "," selection selected "," selection "," selection selected  type "]}," JSON Editor PopUpMenu paste_node_inserting_before":{"type":"method","name":"paste_node_inserting_before","children":[],"call":[" toplevel display_status "," toplevel "," window change "," window ","Inserted an element to  + "," expand_collapse ","m insert_before ","Editor  data2model "," model ","c == ","parent each_with_index ","parent_type == ","parent type ","current parent "," selection selected "," selection ","current parent  each_with_index ","parent type  == ","current parent _type == ","current parent  type ","current current parent  "," selection selected  parent "]}," JSON Editor PopUpMenu paste_node_appending":{"type":"method","name":"paste_node_appending","children":[],"call":[" toplevel display_status "," toplevel ","current type "," window change "," window "," expand_all "," expand_collapse ","Editor  data2model "," model ","hash update "," model remove ","Editor  model2data ","current parent ","@clipboard_data is_a? "," selection selected "," selection "," selection selected  type ","Editor  model2data  update ","current current parent  "," selection selected  parent "]}," JSON Editor PopUpMenu copy_node":{"type":"method","name":"copy_node","children":[],"call":[" toplevel display_status "," toplevel "," window change "," window ","Editor  model2data ","current first_child ","current content ","current type == ","current type "," selection selected "," selection "," selection selected  first_child "," selection selected  content "," selection selected  type == "," selection selected  type "]}," JSON Editor PopUpMenu cut_node":{"type":"method","name":"cut_node","children":[],"call":[" toplevel display_status "," toplevel "," window change "," window "," model remove "," model ","Editor  model2data ","current first_child ","current content ","current type == ","current type "," selection selected "," selection "," selection selected  first_child "," selection selected  content "," selection selected  type == "," selection selected  type "]}," JSON Editor PopUpMenu change_node":{"type":"method","name":"change_node","children":[],"call":[" toplevel display_status "," toplevel "," window change "," window ","current remove_subtree "," model ","current content= ","current type= "," ask_for_element ","current content ","current type ","Editor  model2data ","ALL_TYPES  include? ","current parent "," selection selected "," selection "," selection selected  remove_subtree "," selection selected  content= "," selection selected  type= "," selection selected  content "," selection selected  type ","current current parent  "," selection selected  parent "]}," JSON Editor MenuExtension method_missing":{"type":"method","name":"method_missing","children":[],"call":[" treeview __send__ "," treeview "]}," JSON Editor MenuExtension create":{"type":"method","name":"create","children":[],"call":[" raise "]}," JSON Editor MenuExtension add_item":{"type":"method","name":"add_item","children":[],"call":[" menu append "," menu ","item signal_connect ","klass new ","callback call ","event keyval == ","event keyval ","event state & != ","event state & ","event state "," signal_connect ","keyval chr ","klass new  signal_connect "]}," JSON Editor MenuExtension add_separator":{"type":"method","name":"add_separator","children":[],"call":[" menu append ","SeparatorMenuItem  new "," menu "]}," JSON Editor MenuExtension initialize":{"type":"method","name":"initialize","children":[],"call":["Menu  new "]}," JSON Editor TreeIter content=":{"type":"method","name":"content=","children":[],"call":[" []= "]}," JSON Editor TreeIter content":{"type":"method","name":"content","children":[],"call":[" [] "]}," JSON Editor TreeIter type=":{"type":"method","name":"type=","children":[],"call":[" []= ","Editor  fetch_icon "]}," JSON Editor TreeIter type":{"type":"method","name":"type","children":[],"call":[" [] "]}," JSON Editor TreeIter remove_subtree":{"type":"method","name":"remove_subtree","children":[],"call":["model remove "," first_child "]}," JSON Editor TreeIter recursive_each":{"type":"method","name":"recursive_each","children":[],"call":["i recursive_each "," each "]}," JSON Editor TreeIter each":{"type":"method","name":"each","children":[],"call":[" nth_child "," n_children times "," n_children "]}," JSON Editor data2model":{"type":"method","name":"data2model","children":[],"call":[]}," JSON Editor model2data":{"type":"method","name":"model2data","children":[],"call":[]}," JSON Editor question_dialog":{"type":"method","name":"question_dialog","children":[],"call":[]}," JSON Editor error_dialog":{"type":"method","name":"error_dialog","children":[],"call":[]}," JSON Editor fetch_icon":{"type":"method","name":"fetch_icon","children":[],"call":[]}," JSON Pure Parser parse_object":{"type":"method","name":"parse_object","children":[],"call":[" raise "," peek "," skip ","klass json_create ","klass json_creatable? ","JSON  deep_const_get ","result [] "," scan "," match? ","result []= ","(lvasgn :value\n  (send nil :parse_value)) equal? "," parse_value ","(lvasgn :string\n  (send nil :parse_string)) != "," parse_string "," eos? ","@current_nesting > ","@max_nesting nonzero? ","@object_class new ","string to_sym ","UNPARSED  equal? ","UNPARSED  equal? ! "," loop ","JSON  deep_const_get  json_create ","JSON  deep_const_get  json_creatable? ","klass json_create  [] ","@object_class new  [] ","klass json_create  []= ","@object_class new  []= ","(lvasgn : parse_value \n  (send nil :parse_ parse_value )) equal? "," parse_ parse_value  ","(lvasgn : parse_string \n  (send nil :parse_ parse_string )) != "," parse_ parse_string  "," parse_string  to_sym "]}," JSON Pure Parser parse_array":{"type":"method","name":"parse_array","children":[],"call":[" raise "," peek "," skip "," scan "," match? ","result << ","(lvasgn :value\n  (send nil :parse_value)) != "," parse_value "," eos? ","@current_nesting > ","@max_nesting nonzero? ","@array_class new ","UNPARSED  equal? ! ","UNPARSED  equal? "," loop ","@array_class new  << ","(lvasgn : parse_value \n  (send nil :parse_ parse_value )) != "," parse_ parse_value  "]}," JSON Pure Parser parse_value":{"type":"method","name":"parse_value","children":[],"call":[" parse_object "," scan "," parse_array ","(lvasgn :string\n  (send nil :parse_string)) != "," parse_string "," Integer "," [] "," Float ","UNPARSED  equal? ! ","UNPARSED  equal? ","@decimal_class new "," BigDecimal ","@decimal_class == "," parse_ parse_object ect ","(lvasgn : parse_string \n  (send nil :parse_ parse_string )) != "," parse_ parse_string  "]}," JSON Pure Parser parse_string":{"type":"method","name":"parse_string","children":[],"call":[" raise ","e class ","JSON UTF16toUTF8  iconv ","bytes << << ","c [] to_i ","c [] ","6 * + ","6 * ","bytes << ","c [] == ","$~ [] "," [] gsub "," [] "," [] empty? "," scan ","UNESCAPE_MAP  [] ","$& [] ","string force_encoding ","string respond_to? "," peek ","klass json_create ","string =~ ","klass json_creatable? ","JSON  iconv ","EMPTY_8BIT_STRING  dup ","string freeze ","string -@ ","JSON  iconv force_encoding ","e $~ [] lass ","JSON UTF16toUTF8  i$~ [] onv ","EMPTY_8BIT_STRING  dup  << << ","$~ []  [] to_i ","$~ []  [] ","EMPTY_8BIT_STRING  dup  << ","$~ []  [] == "," [] gsUNESCAPE_MAP  [] b "," s$~ [] an ","string for$~ [] e_en$~ [] oding ","string -@  force_encoding ","string -@  respond_to? ","klass json_$~ [] reate ","string -@  =~ ","klass json_$~ [] reatable? ","JSON  i$~ [] onv ","EMPTY_8BIT_STRING  dUNESCAPE_MAP  [] p ","string -@  freeze ","string -@  -@ ","JSON  i$~ [] onv for$~ [] e_en$~ [] oding "]}," JSON Pure Parser parse":{"type":"method","name":"parse","children":[],"call":[" raise "," peek "," skip "," parse_array "," scan "," parse_object "," eos? "," reset ","obj == "," parse_value "," eos? ! ","UNPARSED  equal? ","obj freeze "," parse_ parse_array ect "," parse_ parse_object ect "," parse_ parse_value ect "," parse_array  == "," parse_object  == "," parse_value  == "," parse_array  freeze "," parse_object  freeze "," parse_value  freeze "]}," JSON Pure Parser initialize":{"type":"method","name":"initialize","children":[],"call":["JSON  create_id ","opts [] ","opts key? ! ","opts key? ","opts [] ! ! ","opts [] ! ","JSON  iconv ","b [] == ","b [] ","b size >= ","b size ","source force_encoding ","source encode ","source dup ","source dup force_encoding encode! ","source dup force_encoding ","source [] bytes to_a ","source [] bytes ","source [] ","source encoding == ","source encoding "," determine_encoding "," convert_encoding "," raise ","source [] bytes to_a  [] == ","source [] bytes to_a  [] ","source [] bytes to_a  size >= ","source [] bytes to_a  size ","source encode  force_encoding "," determine_encoding  force_encoding "," convert_encoding  force_encoding ","source encode  encode "," determine_encoding  encode "," convert_encoding  encode ","source encode  dup "," determine_encoding  dup "," convert_encoding  dup ","source encode  dup force_encoding encode! "," determine_encoding  dup force_encoding encode! "," convert_encoding  dup force_encoding encode! ","source encode  dup force_encoding "," determine_encoding  dup force_encoding "," convert_encoding  dup force_encoding ","source encode  [] bytes to_a "," determine_encoding  [] bytes to_a "," convert_encoding  [] bytes to_a ","source [] source [] bytes to_a ytes to_a ","source encode  [] bytes "," determine_encoding  [] bytes "," convert_encoding  [] bytes ","source [] source [] bytes to_a ytes ","source encode  [] "," determine_encoding  [] "," convert_encoding  [] ","source encode  encoding == "," determine_encoding  encoding == "," convert_encoding  encoding == ","source encode  encoding "," determine_encoding  encoding "," convert_encoding  encoding "]}," JSON Pure Generator GeneratorMethods NilClass to_json":{"type":"method","name":"to_json","children":[],"call":[]}," JSON Pure Generator GeneratorMethods FalseClass to_json":{"type":"method","name":"to_json","children":[],"call":[]}," JSON Pure Generator GeneratorMethods TrueClass to_json":{"type":"method","name":"to_json","children":[],"call":[]}," JSON Pure Generator GeneratorMethods String to_json_raw":{"type":"method","name":"to_json_raw","children":[],"call":[" to_json_raw_object to_json "," to_json_raw_object "]}," JSON Pure Generator GeneratorMethods String to_json_raw_object":{"type":"method","name":"to_json_raw_object","children":[],"call":[" unpack "," class name "," class ","JSON  create_id "]}," JSON Pure Generator GeneratorMethods String included":{"type":"method","name":"included","children":[],"call":[]}," JSON Pure Generator GeneratorMethods String Extend json_create":{"type":"method","name":"json_create","children":[],"call":["o [] pack ","o [] "]}," JSON Pure Generator GeneratorMethods String to_json":{"type":"method","name":"to_json","children":[],"call":["\" << << ","\" << ","JSON  utf8_to_json "," encode "," encoding == "," encoding ","JSON  utf8_to_json_ascii ","state ascii_only? ","State  from_state ","state escape_slash ","State  from_state  ascii_only? ","State  from_State  from_state  ","State  from_state  escape_slash "]}," JSON Pure Generator GeneratorMethods Float to_json":{"type":"method","name":"to_json","children":[],"call":[" to_s "," raise ","state allow_nan? ","state ! "," nan? "," infinite? ","State  from_state ","State  from_state  allow_nan? ","State  from_state  ! ","State  from_State  from_state  "]}," JSON Pure Generator GeneratorMethods Integer to_json":{"type":"method","name":"to_json","children":[],"call":[" to_s "]}," JSON Pure Generator GeneratorMethods Array json_transform":{"type":"method","name":"json_transform","children":[],"call":["result << "," json_shift ","state array_nl ","(send nil :map) join "," json_shift << ","value to_json ","depth + "," map ","delim << ","[ << << ","[ << ","state indent * ","state indent "," each ","state array_nl empty? ! ","state array_nl empty? ","state depth "," String ","value respond_to? ","state state array_nl empty? !  * ","state state array_nl empty? !  "]}," JSON Pure Generator GeneratorMethods Array json_shift":{"type":"method","name":"json_shift","children":[],"call":["state indent * ","state indent ","state array_nl empty? ! ","state array_nl empty? ","state array_nl "]}," JSON Pure Generator GeneratorMethods Array json_check_circular":{"type":"method","name":"json_check_circular","children":[],"call":["state forget ","state remember "," raise ","state seen? ","state check_circular? "]}," JSON Pure Generator GeneratorMethods Array to_json":{"type":"method","name":"to_json","children":[],"call":[" json_transform "," json_check_circular ","JSON  state from_state ","JSON  state ","state check_max_nesting ","State  from_state ","JSON  JSON  state from_state  from_JSON  state from_state  ","JSON  State  from_state  from_State  from_state  ","JSON  JSON  state from_state  ","JSON  State  from_state  ","JSON  state from_state  check_max_nesting ","State  from_state  check_max_nesting ","State  from_JSON  state from_state  ","State  from_State  from_state  "]}," JSON Pure Generator GeneratorMethods Hash json_transform":{"type":"method","name":"json_transform","children":[],"call":["result << "," json_shift ","state object_nl ","(send nil :map) join ","s << ","value to_json ","depth + ","state space ","state space_before ","key to_s to_json ","key to_s "," map ","delim << ","key to_s to_json << << ","key to_s to_json << ","state indent * ","state indent "," each ","state object_nl empty? ! ","state object_nl empty? ","state depth "," String ","value respond_to? ","re json_shift ult << "," j json_shift on_ json_shift hift "," json_shift tate object_nl ","( json_shift end nil :map) join "," json_shift  << ","value to_j json_shift on "," json_shift tate  json_shift pace "," json_shift tate  json_shift pace_before ","key to_ json_shift  to_j json_shift on ","key to_ json_shift  ","key to_ json_shift  to_j json_shift on << << ","key to_ json_shift  to_j json_shift on << "," json_shift tate indent * ","state state object_nl empty? !  * "," json_shift tate indent ","state state object_nl empty? !  "," json_shift tate object_nl empty? ! "," json_shift tate object_nl empty? "," json_shift tate depth ","value re json_shift pond_to? "]}," JSON Pure Generator GeneratorMethods Hash json_shift":{"type":"method","name":"json_shift","children":[],"call":["state indent * ","state indent ","state object_nl empty? ! ","state object_nl empty? ","state object_nl ","state depth "]}," JSON Pure Generator GeneratorMethods Hash json_check_circular":{"type":"method","name":"json_check_circular","children":[],"call":["state forget ","state remember "," raise ","state seen? ","state check_circular? "]}," JSON Pure Generator GeneratorMethods Hash to_json":{"type":"method","name":"to_json","children":[],"call":[" json_transform "," json_check_circular ","JSON  state from_state ","JSON  state ","state check_max_nesting ","State  from_state ","JSON  JSON  state from_state  from_JSON  state from_state  ","JSON  State  from_state  from_State  from_state  ","JSON  JSON  state from_state  ","JSON  State  from_state  ","JSON  state from_state  check_max_nesting ","State  from_state  check_max_nesting ","State  from_JSON  state from_state  ","State  from_State  from_state  "]}," JSON Pure Generator GeneratorMethods Object to_json":{"type":"method","name":"to_json","children":[],"call":[" to_s to_json "," to_s "]}," JSON Pure Generator State forget":{"type":"method","name":"forget","children":[],"call":["@seen delete ","object __id__ "]}," JSON Pure Generator State remember":{"type":"method","name":"remember","children":[],"call":["@seen []= ","object __id__ "]}," JSON Pure Generator State seen?":{"type":"method","name":"seen?","children":[],"call":["@seen key? ","object __id__ "]}," JSON Pure Generator State check_circular?":{"type":"method","name":"check_circular?","children":[],"call":["@max_nesting zero? ! ","@max_nesting zero? "]}," JSON Pure Generator State initialize":{"type":"method","name":"initialize","children":[],"call":["(or\n  (send\n    (lvar :opts) :[]\n    (sym :check_circular))\n  (false)) ! ! ","(or\n  (send\n    (lvar :opts) :[]\n    (sym :check_circular))\n  (false)) ! ","opts [] "," configure "]}," JSON Pure Generator State from_state":{"type":"method","name":"from_state","children":[],"call":[]}," Kernel JSON":{"type":"method","name":"JSON","children":[],"call":["JSON  generate ","JSON  parse ","object to_str ","object respond_to? ","args first "]}," JSON pretty_generate":{"type":"method","name":"pretty_generate","children":[],"call":["obj to_json ","JSON  state new ","JSON  state ","state configure "," raise ","opts class ","opts to_h ","opts respond_to? ","opts to_hash ","result !~ ","state generate ","PRETTY_STATE_PROTOTYPE  dup ","State  === ","JSON  create_pretty_state ","JSON  JSON  state new  new ","JSON  PRETTY_STATE_PROTOTYPE  dup  new ","JSON  JSON  create_pretty_state  new ","JSON  JSON  state new  ","JSON  PRETTY_STATE_PROTOTYPE  dup  ","JSON  JSON  create_pretty_state  ","JSON  state new  configure ","PRETTY_STATE_PROTOTYPE  dup  configure ","JSON  create_pretty_state  configure ","opts to_h  class ","opts to_hash  class ","opts to_h  to_h ","opts to_hash  to_h ","opts to_h  respond_to? ","opts to_hash  respond_to? ","opts to_h  to_hash ","opts to_hash  to_hash ","obj to_json  !~ ","JSON  state new  generate ","PRETTY_STATE_PROTOTYPE  dup  generate ","JSON  create_pretty_state  generate ","JSON  create_pretty_JSON  state new  ","JSON  create_pretty_PRETTY_STATE_PROTOTYPE  dup  ","JSON  create_pretty_JSON  create_pretty_state  "]}," JSON fast_generate":{"type":"method","name":"fast_generate","children":[],"call":["obj to_json "," raise ","result !~ ","state generate ","state configure ","FAST_STATE_PROTOTYPE  dup ","opts class ","opts to_h ","opts respond_to? ","opts to_hash ","State  === ","JSON  create_fast_state ","obj to_json  !~ ","FAST_STATE_PROTOTYPE  dup  generate ","JSON  create_fast_state  generate ","FAST_STATE_PROTOTYPE  dup  configure ","JSON  create_fast_state  configure ","opts to_h  class ","opts to_hash  class ","opts to_h  to_h ","opts to_hash  to_h ","opts to_h  respond_to? ","opts to_hash  respond_to? ","opts to_h  to_hash ","opts to_hash  to_hash ","JSON  create_fast_FAST_STATE_PROTOTYPE  dup  ","JSON  create_fast_JSON  create_fast_state  "]}," JSON generate":{"type":"method","name":"generate","children":[],"call":["obj to_json ","State  new ","State  from_state "," raise ","result !~ ","state generate ","state configure ","SAFE_STATE_PROTOTYPE  dup ","opts class ","opts to_h ","opts respond_to? ","opts to_hash ","State  === ","State  from_State  new  ","State  from_State  from_state  ","State  from_state configure  ","State  from_SAFE_STATE_PROTOTYPE  dup  ","obj to_json  !~ ","State  new  generate ","State  from_state  generate ","state configure  generate ","SAFE_STATE_PROTOTYPE  dup  generate ","State  new  configure ","State  from_state  configure ","state configure  configure ","SAFE_STATE_PROTOTYPE  dup  configure ","opts to_h  class ","opts to_hash  class ","opts to_h  to_h ","opts to_hash  to_h ","opts to_h  respond_to? ","opts to_hash  respond_to? ","opts to_h  to_hash ","opts to_hash  to_hash "]}," JSON generator=":{"type":"method","name":"generator=","children":[],"call":[" const_set "," state "," state= "," include "," remove_method ","m to_s == ","m to_s "," instance_methods each "," instance_methods ","klass class_eval ","generator_methods const_get "," deep_const_get ","generator_methods constants ","State  new freeze ","State  new "," create_pretty_state "," create_fast_state "," deep_const_get  class_eval "]}," JSON deep_const_get":{"type":"method","name":"deep_const_get","children":[],"call":[" raise ","p const_get ","p const_defined? ","c empty? ","path split inject ","path split ","path to_s ","p const_missing ","path to_s split inject ","path to_s split ","JSON  const_defined_in? ","path to_s  split inject ","path to_s  split ","path to_s  to_s ","path to_s  to_s split inject ","path to_s  to_s split "]}," JSON parser=":{"type":"method","name":"parser=","children":[],"call":[" const_set "," remove_const "," const_defined? ","JSON  const_defined_in? "]}," JSON []":{"type":"method","name":"[]","children":[],"call":["JSON  generate ","JSON  parse ","object to_str ","object respond_to? "]}," JSON Editor MainWindow ask_for_location":{"type":"method","name":"ask_for_location","children":[],"call":["dialog destroy ","location_input text ","response == ","dialog run ","dialog show_all ","dialog signal_connect ","dialog vbox add ","dialog vbox ","location_input text= ","location_input width_chars= ","hbox pack_start ","Entry  new ","hbox add ","Label  new ","HBox  new ","Dialog  new ","dialog vbox pack_start ","Dialog  new  destroy ","Entry  new  text ","Dialog  new  run ","Dialog  new  show_all ","Dialog  new  signal_connect ","Dialog  new  vbox add ","Dialog  new  vbox ","Entry  new  text= ","Entry  new  width_chars= ","HBox  new  pack_start ","HBox  new  add ","Dialog  new  vbox pack_start "]}," JSON Editor MainWindow load_location":{"type":"method","name":"load_location","children":[],"call":[" display_title "," toplevel display_status "," toplevel "," read_data "," read_ read_data  "]}," JSON Editor MainWindow location_open":{"type":"method","name":"location_open","children":[],"call":[" view_new_model ","Editor  data2model "," load_location "," ask_for_location "," ask_save ","Editor   load_location 2model "]}," JSON Editor FileMenu open_location":{"type":"method","name":"open_location","children":[],"call":[" window location_open "," window "]}," JSON Pure Generator State to_h":{"type":"method","name":"to_h","children":[],"call":["result []= "," instance_variable_get ","iv intern "," [] ","iv to_sym ","iv to_s [] ","iv to_s "," instance_variables ","iv to_s []  intern ","iv to_s []  to_sym ","iv to_s []  to_s [] ","iv to_s []  to_s "]}," JSON Pure Generator State configure":{"type":"method","name":"configure","children":[],"call":["opts [] ","opts key? ! ","opts key? ","opts [] ! ! ","opts [] ! "," instance_variable_set "," raise ","opts class ","opts to_h ","opts respond_to? ","opts to_hash ","opts to_h  [] ","opts to_hash  [] ","opts to_h  key? ! ","opts to_hash  key? ! ","opts to_h  key? ","opts to_hash  key? ","opts to_h  [] ! ! ","opts to_hash  [] ! ! ","opts to_h  [] ! ","opts to_hash  [] ! ","opts to_h  class ","opts to_hash  class ","opts to_h  to_h ","opts to_hash  to_h ","opts to_h  respond_to? ","opts to_hash  respond_to? ","opts to_h  to_hash ","opts to_hash  to_hash "]}," JSON Pure Generator State allow_nan?":{"type":"method","name":"allow_nan?","children":[],"call":[]}," JSON Pure Generator State check_max_nesting":{"type":"method","name":"check_max_nesting","children":[],"call":[" raise ","current_nesting > ","depth + ","@max_nesting zero? "," depth + "," depth ","depth +  > "," depth +  > "]}," JSON dump":{"type":"method","name":"dump","children":[],"call":[" raise ","anIO write "," generate ","anIO respond_to? ","anIO to_io ","limit nil? ","opts update ","JSON  dump_default_options ","opts merge ","anIO to_io  write ","anIO to_io  respond_to? ","anIO to_io  to_io ","JSON  dump_default_options  update ","opts merge  update ","JSON  dump_default_options  merge ","opts merge  merge "]}," JSON recurse_proc":{"type":"method","name":"recurse_proc","children":[],"call":["proc call "," recurse_proc ","result each "]}," JSON load":{"type":"method","name":"load","children":[],"call":[" recurse_proc "," parse ","source read ","source to_io read ","source to_io ","source respond_to? ","source to_str ","load_default_options merge ","opts [] ","source nil? "," load_default_options ","source empty? "," load_default_options merge ","source read  read ","source to_io read  read ","source to_str  read ","source read  to_io read ","source to_io read  to_io read ","source to_str  to_io read ","source read  to_io ","source to_io read  to_io ","source to_str  to_io ","source read  respond_to? ","source to_io read  respond_to? ","source to_str  respond_to? ","source read  to_str ","source to_io read  to_str ","source to_str  to_str ","load_default_options merge  [] "," load_default_options  [] "," load_default_options merge  [] ","source read  nil? ","source to_io read  nil? ","source to_str  nil? ","source read  empty? ","source to_io read  empty? ","source to_str  empty? "]}," JSON parse!":{"type":"method","name":"parse!","children":[],"call":["JSON  parser new parse ","JSON  parser new ","JSON  parser ","(pair\n  (sym :max_nesting)\n  (false)) update ","Parser  new parse ","Parser  new ","(pair\n  (sym :max_nesting)\n  (false)) merge "]}," Enumerable to_json":{"type":"method","name":"to_json","children":[],"call":[" to_a to_json "," to_a "]}," Object json_create":{"type":"method","name":"json_create","children":[],"call":[]}," Regexp to_json":{"type":"method","name":"to_json","children":[],"call":["(pair\n  (str \"json_class\")\n  (send\n    (send\n      (self) :class) :name)) to_json "," source "," options "," class name "," class ","(pair\n  (send\n    (const nil :JSON) :create_id)\n  (send\n    (send\n      (self) :class) :name)) to_json ","JSON  create_id "," as_json to_json "," as_json "]}," Regexp json_create":{"type":"method","name":"json_create","children":[],"call":[]}," Exception to_json":{"type":"method","name":"to_json","children":[],"call":["(pair\n  (str \"json_class\")\n  (send\n    (send\n      (self) :class) :name)) to_json "," backtrace "," message "," class name "," class ","(pair\n  (send\n    (const nil :JSON) :create_id)\n  (send\n    (send\n      (self) :class) :name)) to_json ","JSON  create_id "," as_json to_json "," as_json "]}," Exception json_create":{"type":"method","name":"json_create","children":[],"call":[]}," Struct to_json":{"type":"method","name":"to_json","children":[],"call":["(pair\n  (str \"json_class\")\n  (lvar :klass)) to_json "," values "," raise ","klass empty? "," class name "," class ","klass to_s empty? ","klass to_s ","(pair\n  (send\n    (const nil :JSON) :create_id)\n  (lvar :klass)) to_json ","JSON  create_id "," as_json to_json "," as_json ","(pair\n  (str \"json_class\")\n  (lvar : class name )) to_json "," class name  empty? "," class name  to_s empty? "," class name  to_s ","(pair\n  (send\n    (const nil :JSON) :create_id)\n  (lvar : class name )) to_json "]}," Struct json_create":{"type":"method","name":"json_create","children":[],"call":[]}," Range to_json":{"type":"method","name":"to_json","children":[],"call":["(pair\n  (str \"json_class\")\n  (send\n    (send\n      (self) :class) :name)) to_json "," exclude_end? "," last "," first "," class name "," class ","(pair\n  (send\n    (const nil :JSON) :create_id)\n  (send\n    (send\n      (self) :class) :name)) to_json ","JSON  create_id "," as_json to_json "," as_json "]}," Range json_create":{"type":"method","name":"json_create","children":[],"call":[]}," DateTime to_json":{"type":"method","name":"to_json","children":[],"call":["(pair\n  (str \"json_class\")\n  (send\n    (send\n      (self) :class) :name)) to_json "," sg "," offset "," sec "," min "," hour "," day "," month "," year "," class name "," class "," offset to_s "," start ","(pair\n  (send\n    (const nil :JSON) :create_id)\n  (send\n    (send\n      (self) :class) :name)) to_json ","JSON  create_id "," as_json to_json "," as_json "]}," DateTime json_create":{"type":"method","name":"json_create","children":[],"call":[]}," Date to_json":{"type":"method","name":"to_json","children":[],"call":["(pair\n  (str \"json_class\")\n  (send\n    (send\n      (self) :class) :name)) to_json "," sg "," day "," month "," year "," class name "," class "," start ","(pair\n  (send\n    (const nil :JSON) :create_id)\n  (send\n    (send\n      (self) :class) :name)) to_json ","JSON  create_id "," as_json to_json "," as_json "]}," Date json_create":{"type":"method","name":"json_create","children":[],"call":[]}," Time to_json":{"type":"method","name":"to_json","children":[],"call":["(pair\n  (str \"json_class\")\n  (send\n    (send\n      (self) :class) :name)) to_json "," tv_usec "," tv_sec "," class name "," class "," tv_usec * "," tv_nsec "," respond_to? ","(pair\n  (send\n    (const nil :JSON) :create_id)\n  (send\n    (send\n      (self) :class) :name)) to_json ","JSON  create_id "," as_json to_json "," as_json "]}," Time json_create":{"type":"method","name":"json_create","children":[],"call":[]}," JSON Editor edit":{"type":"method","name":"edit","children":[],"call":["window edit "," start "]}," JSON Editor MainWindow parse_json":{"type":"method","name":"parse_json","children":[],"call":["JSON  parse ","iconverter iconv ","Iconv  new ","(str \"^utf8$\") match ! ","(str \"^utf8$\") match "," check_pretty_printed ","JSON  iconv ","Iconv  new  iconv "]}," JSON Editor MainWindow edit":{"type":"method","name":"edit","children":[],"call":[" view_new_model ","Editor  data2model "," parse_json ","json read ","json respond_to? ","Editor   parse_json 2model "," parse_json read  ","json read  read ","json read  respond_to? "]}," JSON Editor EditMenu paste":{"type":"method","name":"paste","children":[],"call":[" window clear "," window "," window edit "," window ask_save ","c wait_for_text ","Gtk Clipboard  get "," window Gtk Clipboard  get lear ","Gtk Clipboard  get  wait_for_text "]}," JSON Editor EditMenu copy":{"type":"method","name":"copy","children":[],"call":["c text= ","Gtk Clipboard  get ","JSON  pretty_generate ","Editor  model2data "," model iter_first "," model ","Gtk Clipboard  get  text= ","Editor  model2Editor  model2data  "]}," Symbol to_json":{"type":"method","name":"to_json","children":[],"call":[" to_s to_json "," to_s ","(pair\n  (send\n    (const nil :JSON) :create_id)\n  (send\n    (send\n      (self) :class) :name)) to_json "," class name "," class ","JSON  create_id "," as_json to_json "," as_json "]}," JSON iconv":{"type":"method","name":"iconv","children":[],"call":[]}," Symbol json_create":{"type":"method","name":"json_create","children":[],"call":[]}," JSON Pure Generator State []":{"type":"method","name":"[]","children":[],"call":[" __send__ "," instance_variable_get "," respond_to? "," instance_variables include? ","(str \"@\") to_sym "," instance_variables "]}," JSON Pure Generator State generate":{"type":"method","name":"generate","children":[],"call":[" raise ","result !~ ","obj to_json ","@quirks_mode ! ","result =~ ","result inspect ","JSON  valid_utf8? ","obj to_json  !~ ","obj to_json  =~ ","obj to_json  inspect "]}," JSON Pure Generator State ascii_only?":{"type":"method","name":"ascii_only?","children":[],"call":[]}," JSON utf8_to_json_ascii":{"type":"method","name":"utf8_to_json_ascii","children":[],"call":[" raise ","e class ","s gsub! ","JSON UTF8toUTF16  iconv unpack [] ","JSON UTF8toUTF16  iconv unpack ","JSON UTF8toUTF16  iconv ","c size == ","c size ","string gsub! ","MAP  [] ","string gsub ","string force_encoding ","string << ","string dup ","JSON  iconv unpack [] ","JSON  iconv unpack ","JSON  iconv ","GeneratorError  wrap ","s force_encoding ","map [] "," raiJSON UTF8toUTF16  iconv unpack [] e "," raiJSON  iconv unpack [] e ","e claJSON UTF8toUTF16  iconv unpack [] JSON UTF8toUTF16  iconv unpack []  ","e claJSON  iconv unpack [] JSON  iconv unpack []  ","JSON UTF8toUTF16  iconv unpack []  gJSON UTF8toUTF16  iconv unpack [] ub! ","JSON  iconv unpack []  gJSON  iconv unpack [] ub! ","c JSON UTF8toUTF16  iconv unpack [] ize == ","c JSON  iconv unpack [] ize == ","c JSON UTF8toUTF16  iconv unpack [] ize ","c JSON  iconv unpack [] ize ","JSON UTF8toUTF16  iconv unpack [] tring gJSON UTF8toUTF16  iconv unpack [] ub! ","JSON  iconv unpack [] tring gJSON  iconv unpack [] ub! ","string dup  gsub! ","JSON UTF8toUTF16  iconv unpack [] tring gJSON UTF8toUTF16  iconv unpack [] ub ","JSON  iconv unpack [] tring gJSON  iconv unpack [] ub ","string dup  gsub ","JSON UTF8toUTF16  iconv unpack [] tring force_encoding ","JSON  iconv unpack [] tring force_encoding ","string dup  force_encoding ","JSON UTF8toUTF16  iconv unpack [] tring << ","JSON  iconv unpack [] tring << ","string dup  << ","JSON UTF8toUTF16  iconv unpack [] tring dup ","JSON  iconv unpack [] tring dup ","string dup  dup ","JSON UTF8toUTF16  iconv unpack []  force_encoding ","JSON  iconv unpack []  force_encoding "]}," JSON const_defined_in?":{"type":"method","name":"const_defined_in?","children":[],"call":[]}," JSON swap!":{"type":"method","name":"swap!","children":[],"call":[]}," Regexp as_json":{"type":"method","name":"as_json","children":[],"call":[" source "," options "," class name "," class ","JSON  create_id "]}," Exception as_json":{"type":"method","name":"as_json","children":[],"call":[" backtrace "," message "," class name "," class ","JSON  create_id "]}," Struct as_json":{"type":"method","name":"as_json","children":[],"call":[" values ","JSON  create_id "," raise ","klass to_s empty? ","klass to_s "," class name "," class "," class name  to_s empty? "," class name  to_s "]}," Range as_json":{"type":"method","name":"as_json","children":[],"call":[" exclude_end? "," last "," first "," class name "," class ","JSON  create_id "]}," DateTime as_json":{"type":"method","name":"as_json","children":[],"call":[" start "," offset to_s "," offset "," sec "," min "," hour "," day "," month "," year "," class name "," class ","JSON  create_id "]}," Date as_json":{"type":"method","name":"as_json","children":[],"call":[" start "," day "," month "," year "," class name "," class ","JSON  create_id "]}," Time as_json":{"type":"method","name":"as_json","children":[],"call":[" tv_usec * "," tv_usec "," tv_nsec "," respond_to? "," tv_sec "," class name "," class ","JSON  create_id ","nanoseconds max ","nanoseconds << ","nanoseconds max  max ","nanoseconds max  << "]}," Symbol as_json":{"type":"method","name":"as_json","children":[],"call":[" to_s "," class name "," class ","JSON  create_id "]}," JSON Pure Parser determine_encoding":{"type":"method","name":"determine_encoding","children":[],"call":["JSON  iconv ","b [] == ","b [] ","b size >= ","b size ","source force_encoding ","source encode ","source dup ","source dup force_encoding encode! ","source dup force_encoding ","source [] bytes to_a ","source [] bytes ","source [] ","source encoding == ","source encoding ","source [] bytes to_a  [] == ","source [] bytes to_a  [] ","source [] bytes to_a  size >= ","source [] bytes to_a  size ","source encode  force_encoding ","source encode  encode ","source encode  dup ","source encode  dup force_encoding encode! ","source encode  dup force_encoding ","source encode  [] bytes to_a ","source [] source [] bytes to_a ytes to_a ","source encode  [] bytes ","source [] source [] bytes to_a ytes ","source encode  [] ","source encode  encoding == ","source encode  encoding "]}," JSON Pure Parser reset":{"type":"method","name":"reset","children":[],"call":[]}," JSON Pure Parser quirks_mode?":{"type":"method","name":"quirks_mode?","children":[],"call":["@quirks_mode ! ! ","@quirks_mode ! "]}," JSON Pure Generator State quirks_mode?":{"type":"method","name":"quirks_mode?","children":[],"call":[]}," Rational to_json":{"type":"method","name":"to_json","children":[],"call":[" as_json to_json "," as_json "]}," Rational as_json":{"type":"method","name":"as_json","children":[],"call":[" denominator "," numerator "," class name "," class ","JSON  create_id "]}," Rational json_create":{"type":"method","name":"json_create","children":[],"call":[]}," Complex to_json":{"type":"method","name":"to_json","children":[],"call":[" as_json to_json "," as_json "]}," Complex as_json":{"type":"method","name":"as_json","children":[],"call":[" imag "," real "," class name "," class ","JSON  create_id "]}," Complex json_create":{"type":"method","name":"json_create","children":[],"call":[]}," JSON Pure Parser convert_encoding":{"type":"method","name":"convert_encoding","children":[],"call":["JSON  iconv ","b [] == ","b [] ","b size >= ","b size ","source force_encoding ","source encode ","source dup ","source dup force_encoding encode! ","source dup force_encoding ","source [] bytes to_a ","source [] bytes ","source [] ","source encoding == ","source encoding "," raise ","source inspect ","source to_str ","source respond_to? ","source encoding != ","source [] bytes to_a  [] == ","source [] bytes to_a  [] ","source [] bytes to_a  size >= ","source [] bytes to_a  size ","source encode  force_encoding ","source to_str  force_encoding ","source encode  encode ","source to_str  encode ","source encode  dup ","source to_str  dup ","source encode  dup force_encoding encode! ","source to_str  dup force_encoding encode! ","source encode  dup force_encoding ","source to_str  dup force_encoding ","source encode  [] bytes to_a ","source to_str  [] bytes to_a ","source [] source [] bytes to_a ytes to_a ","source encode  [] bytes ","source to_str  [] bytes ","source [] source [] bytes to_a ytes ","source encode  [] ","source to_str  [] ","source encode  encoding == ","source to_str  encoding == ","source encode  encoding ","source to_str  encoding ","source encode  inspect ","source to_str  inspect ","source encode  to_str ","source to_str  to_str ","source encode  respond_to? ","source to_str  respond_to? ","source encode  encoding != ","source to_str  encoding != "]}," JSON Pure Generator State buffer_initial_length=":{"type":"method","name":"buffer_initial_length=","children":[],"call":["length > "]}," OpenStruct to_json":{"type":"method","name":"to_json","children":[],"call":[" as_json to_json "," as_json "]}," OpenStruct as_json":{"type":"method","name":"as_json","children":[],"call":[" table ","JSON  create_id "," raise ","klass to_s empty? ","klass to_s "," class name "," class "," class name  to_s empty? "," class name  to_s "]}," OpenStruct json_create":{"type":"method","name":"json_create","children":[],"call":[]}," BigDecimal to_json":{"type":"method","name":"to_json","children":[],"call":[" as_json to_json "," as_json "]}," BigDecimal as_json":{"type":"method","name":"as_json","children":[],"call":[" _dump "," class name "," class ","JSON  create_id "]}," BigDecimal json_create":{"type":"method","name":"json_create","children":[],"call":[]}," JSON LightObject method_missing":{"type":"method","name":"method_missing","children":[],"call":[" to_hash __send__ "," to_hash "]}," JSON LightObject to_json":{"type":"method","name":"to_json","children":[],"call":[" as_json to_json "," as_json "]}," JSON LightObject as_json":{"type":"method","name":"as_json","children":[],"call":[" to_hash | "," class name "," class ","JSON  create_id "," to_hash "]}," JSON LightObject |":{"type":"method","name":"|","children":[],"call":[" class [] ","other to_hash merge "," to_hash ","other to_hash "," class "]}," JSON LightObject []=":{"type":"method","name":"[]=","children":[],"call":[" modifiable []= ","name to_sym "," modifiable "]}," JSON LightObject []":{"type":"method","name":"[]","children":[],"call":[" to_hash [] ","name to_sym "," to_hash "]}," JSON LightObject to_hash":{"type":"method","name":"to_hash","children":[],"call":[" table "]}," JSON LightObject json_create":{"type":"method","name":"json_create","children":[],"call":[" [] ","data delete ","JSON  create_id ","data dup ","data dup  delete ","data dup  dup "]}," JSON GenericObject to_json":{"type":"method","name":"to_json","children":[],"call":[" as_json to_json "," as_json "]}," JSON GenericObject as_json":{"type":"method","name":"as_json","children":[],"call":["(pair\n  (send\n    (const nil :JSON) :create_id)\n  (send\n    (send\n      (self) :class) :name)) merge "," to_hash "," class name "," class ","JSON  create_id "]}," JSON GenericObject |":{"type":"method","name":"|","children":[],"call":[" class [] ","other to_hash merge "," to_hash ","other to_hash "," class "]}," JSON GenericObject []=":{"type":"method","name":"[]=","children":[],"call":[" __send__ "]}," JSON GenericObject []":{"type":"method","name":"[]","children":[],"call":[" table [] ","name to_sym "," table "," __send__ "]}," JSON GenericObject to_hash":{"type":"method","name":"to_hash","children":[],"call":[" table "]}," JSON GenericObject json_create":{"type":"method","name":"json_create","children":[],"call":[" [] ","data delete ","JSON  create_id ","data dup ","data dup  delete ","data dup  dup "]}," JSON JSONError wrap":{"type":"method","name":"wrap","children":[],"call":[]}," JSON Pure Generator State []=":{"type":"method","name":"[]=","children":[],"call":[" instance_variable_set "," __send__ "," respond_to? "]}," JSON GenericObject from_hash":{"type":"method","name":"from_hash","children":[],"call":[" from_hash ","object to_ary map ","object to_ary ","object respond_to? ","result []= ","object to_hash each ","object to_hash "," new "," new  []= "]}," JSON GenericObject json_creatable?":{"type":"method","name":"json_creatable?","children":[],"call":[]}," JSON valid_utf8?":{"type":"method","name":"valid_utf8?","children":[],"call":["string =~ ","string valid_encoding? ","encoding == ","string encoding ","string valid_string encoding ? ","string encoding  == ","string string encoding  "]}," JSON GenericObject dump":{"type":"method","name":"dump","children":[],"call":[" JSON  dump "]}," JSON GenericObject load":{"type":"method","name":"load","children":[],"call":[" new ","result nil? "," JSON  load ","opts merge "," JSON  load  nil? "]}," Set to_json":{"type":"method","name":"to_json","children":[],"call":[" as_json to_json "," as_json "]}," Set as_json":{"type":"method","name":"as_json","children":[],"call":[" to_a "," class name "," class ","JSON  create_id "]}," Set json_create":{"type":"method","name":"json_create","children":[],"call":[]}," JSON Pure Generator State escape_slash?":{"type":"method","name":"escape_slash?","children":[],"call":[]}," JSON load_file!":{"type":"method","name":"load_file!","children":[],"call":[" parse! ","File  read "]}," JSON load_file":{"type":"method","name":"load_file","children":[],"call":[" parse ","File  read "]}," JSON create_id":{"type":"method","name":"create_id","children":[],"call":[]}," JSON create_id=":{"type":"method","name":"create_id=","children":[],"call":[]}," JSON create_pretty_state":{"type":"method","name":"create_pretty_state","children":[],"call":["State  new "]}," JSON create_fast_state":{"type":"method","name":"create_fast_state","children":[],"call":["State  new "]}}