{" Intouch logger":{"type":"method","name":"logger","children":[],"call":[]}," Intouch issue_url":{"type":"method","name":"issue_url","children":[],"call":[]}," Intouch work_time?":{"type":"method","name":"work_time?","children":[],"call":[]}," Intouch work_day?":{"type":"method","name":"work_day?","children":[],"call":[]}," Intouch send_bulk_email_notifications":{"type":"method","name":"send_bulk_email_notifications","children":[],"call":[]}," Intouch send_notifications":{"type":"method","name":"send_notifications","children":[],"call":[]}," Intouch available_recipients_without":{"type":"method","name":"available_recipients_without","children":[],"call":[]}," Intouch available_recipients":{"type":"method","name":"available_recipients","children":[],"call":[]}," Intouch active_protocols":{"type":"method","name":"active_protocols","children":[],"call":[]}," Intouch commit_hash":{"type":"method","name":"commit_hash","children":[],"call":[]}," Intouch sidekiq_cron_jobs":{"type":"method","name":"sidekiq_cron_jobs","children":[],"call":[]}," Intouch bot_token":{"type":"method","name":"bot_token","children":[],"call":[]}," Intouch set_locale":{"type":"method","name":"set_locale","children":[],"call":[]}," TelegramBot bot_token":{"type":"method","name":"bot_token","children":[],"call":["Intouch  bot_token "]}," TelegramBot group_help_message":{"type":"method","name":"group_help_message","children":[],"call":[" help_command_list "," group_commands ","(str \"Redmine Intouch:\") join "]}," TelegramBot private_help_message":{"type":"method","name":"private_help_message","children":[],"call":[" help_command_list "," private_commands ","(str \"Redmine Intouch:\") join "]}," TelegramBot group_commands":{"type":"method","name":"group_commands","children":[],"call":[]}," TelegramBot private_commands":{"type":"method","name":"private_commands","children":[],"call":[]}," TelegramBot chat":{"type":"method","name":"chat","children":[],"call":[" command chat "," command "]}," TelegramBot fetch_group_chat":{"type":"method","name":"fetch_group_chat","children":[],"call":["TelegramGroupChat  where first_or_initialize "," chat title "," chat ","TelegramGroupChat  where "," chat_id abs "," chat_id "]}," TelegramBot group_chat":{"type":"method","name":"group_chat","children":[],"call":[" fetch_group_chat "]}," TelegramBot group_update_process":{"type":"method","name":"group_update_process","children":[],"call":[" logger info "," chat title "," chat "," user first_name "," user "," logger "," send_message ","I18n  t "," group_chat update "," group_chat "]}," TelegramBot group_create_process":{"type":"method","name":"group_create_process","children":[],"call":[" logger info "," chat title "," chat "," logger "," send_message ","I18n  t "," group_chat save "," group_chat "]}," TelegramBot private_update_process":{"type":"method","name":"private_update_process","children":[],"call":[" send_message ","I18n  t "," update_account "]}," TelegramBot update":{"type":"method","name":"update","children":[],"call":[" group_update_process "," private_update_process "," private_command? "]}," TelegramBot call":{"type":"method","name":"call","children":[],"call":[" group_create_process "," group_chat new_record? "," group_chat "," private_command? ! "," private_command? "," send_message ","issue description ","Issue  find "," command data "," command "," command is_a? ","Issue  find  description "]}," TelegramBot initialize":{"type":"method","name":"initialize","children":[],"call":["Telegrammer DataTypes Message  new ","command is_a? ","Logger  new ","Rails  root join ","Rails  root ","Telegram Bot Types Update  new message ","Telegram Bot Types Update  new "]}," Intouch ServiceInitializer call":{"type":"method","name":"call","children":[],"call":[" new call "," new "]}," Regular RecipientsList project":{"type":"method","name":"project","children":[],"call":[" issue project "," issue "]}," Regular RecipientsList active_protocol_settings":{"type":"method","name":"active_protocol_settings","children":[],"call":[" project send "," protocol "," project "]}," Regular RecipientsList state_settings":{"type":"method","name":"state_settings","children":[],"call":[" active_protocol_settings [] "," state "," active_protocol_settings "," active_protocol_settings present? "]}," Regular RecipientsList assigner_ids":{"type":"method","name":"assigner_ids","children":[],"call":[" project assigner_ids "," project "]}," Regular RecipientsList potential_recipient_ids":{"type":"method","name":"potential_recipient_ids","children":[],"call":["(send\n  (send nil :state_settings) :map) flatten uniq ","(send\n  (send nil :state_settings) :map) flatten ","Group  where map flatten ","Group  where map ","Group  where ","value present? "," issue watchers pluck "," issue watchers "," issue "," issue assigned_to_id "," issue assigned_to class == "," issue assigned_to class "," issue assigned_to "," issue author_id "," state_settings map "," state_settings "]}," Regular RecipientsList recipient_ids":{"type":"method","name":"recipient_ids","children":[],"call":[" potential_recipient_ids & "," assigner_ids "," potential_recipient_ids "," state_settings present? "," state_settings "]}," Regular RecipientsList call":{"type":"method","name":"call","children":[],"call":["User  where "," recipient_ids "," recipient_ids present? ","User  where status ","users + - ","User  anonymous ","users + ","(lvar :customer) compact ","@issue customer ","@issue project module_enabled? ","@issue project ","@protocol == ","contacts compact ","(send\n  (array\n    (send\n      (ivar :@issue) :customer)) :+\n  (send\n    (send\n      (ivar :@issue) :contacts) :to_a)) uniq ","(send\n  (ivar :@issue) :customer) + ","@issue contacts to_a ","@issue contacts ","User  where status  + - ","User  where status  + ","(lvar :@issue customer ) compact ","@issue @issue customer  ","(send\n  (array\n    (send\n      (ivar :@issue) :customer)) :+\n  (send\n    (send\n      (ivar :@issue) :contacts) :to_a)) uniq  compact ","(send\n  (array\n    (send\n      (ivar :@issue) :@issue customer )) :+\n  (send\n    (send\n      (ivar :@issue) :contacts) :to_a)) uniq ","(send\n  (array\n    (send\n      (ivar :@issue) :customer)) :+\n  (send\n    (send\n      (ivar :@issue) :(send\n  (array\n    (send\n      (ivar :@issue) :customer)) :+\n  (send\n    (send\n      (ivar :@issue) :contacts) :to_a)) uniq ) :to_a)) uniq ","(send\n  (ivar :@issue) :@issue customer ) + ","@issue (send\n  (array\n    (send\n      (ivar :@issue) :customer)) :+\n  (send\n    (send\n      (ivar :@issue) :contacts) :to_a)) uniq  to_a ","@issue (send\n  (array\n    (send\n      (ivar :@issue) :customer)) :+\n  (send\n    (send\n      (ivar :@issue) :contacts) :to_a)) uniq  "]}," Regular RecipientsList initialize":{"type":"method","name":"initialize","children":[],"call":[]}," Message Private logger":{"type":"method","name":"logger","children":[],"call":["Logger  new ","Rails  root join ","Rails  root "]}," Message Private settings":{"type":"method","name":"settings","children":[],"call":[" project active_telegram_settings try "," state "," project active_telegram_settings "," project "]}," Message Private recipients":{"type":"method","name":"recipients","children":[],"call":["(send\n  (send nil :settings) :select) keys ","(str \"author\") include? "," settings select "," settings "]}," Message Private roles_in_issue":{"type":"method","name":"roles_in_issue","children":[],"call":["roles_in_issue << "," issue author_id == "," user id "," user "," issue author_id "," issue "," issue watchers pluck include? "," issue watchers pluck "," issue watchers "," issue assigned_to_id == "," issue assigned_to_id "]}," Message Private recipients_prefix":{"type":"method","name":"recipients_prefix","children":[],"call":["(send\n  (begin\n    (send\n      (send nil :roles_in_issue) :&\n      (send nil :recipients))) :map) join ","I18n  t ","(send\n  (send nil :roles_in_issue) :&\n  (send nil :recipients)) map "," roles_in_issue & "," recipients "," roles_in_issue "]}," Message Private prefix":{"type":"method","name":"prefix","children":[],"call":[" recipients_prefix "," settings present? "," settings "]}," Message Private message":{"type":"method","name":"message","children":[],"call":[" base_message "," prefix "," prefix present? "]}," Message Private telegram_account":{"type":"method","name":"telegram_account","children":[],"call":[" user telegram_account "," user ","TelegramAccount  find_by "," user id "]}," Message Private send":{"type":"method","name":"send","children":[],"call":["TelegramMessageSender  perform_async "," message "," telegram_account telegram_id "," telegram_account "," logger info "," logger "," logger debug "," user inspect "," user "," issue inspect "," issue "," state "," telegram_account active? "," telegram_account present? "," send_email_messages "," send_telegram_private_messages "," need_private_message? "]}," Message Private initialize":{"type":"method","name":"initialize","children":[],"call":["Intouch  set_locale "]}," Message Base project":{"type":"method","name":"project","children":[],"call":[" issue project "," issue "]}," Message Base formatter":{"type":"method","name":"formatter","children":[],"call":["Intouch Message Formatter  new "," issue "]}," Message Base latest_staff_action_on":{"type":"method","name":"latest_staff_action_on","children":[],"call":[" issue journals order where last try "," issue journals order where last "," issue journals order where "," project assigner_ids "," project "," issue journals order "," issue journals "," issue "]}," Message Base latest_action_on":{"type":"method","name":"latest_action_on","children":[],"call":[" issue updated_on "," issue "," latest_staff_action_on "," latest_staff_action_on present? "]}," Message Base reminder_settings":{"type":"method","name":"reminder_settings","children":[],"call":[" project active_intouch_settings try try "," issue priority_id to_s "," issue priority_id "," issue "," project active_intouch_settings try "," project active_intouch_settings "," project "]}," Message Base reminder_active?":{"type":"method","name":"reminder_active?","children":[],"call":[" reminder_settings try "," reminder_settings "]}," Message Base reminder_interval":{"type":"method","name":"reminder_interval","children":[],"call":[" reminder_settings try to_i "," reminder_settings try "," reminder_settings "]}," Message Base inactive_hours":{"type":"method","name":"inactive_hours","children":[],"call":["(send\n  (send\n    (const nil :Time) :now) :-\n  (send nil :latest_action_on)) / ","Time  now - "," latest_action_on ","Time  now "]}," Message Base inactive?":{"type":"method","name":"inactive?","children":[],"call":[" inactive_hours >= "," reminder_interval "," inactive_hours "," reminder_interval positive? "," reminder_active? "]}," Message Base rounded_inactive_hours":{"type":"method","name":"rounded_inactive_hours","children":[],"call":[" inactive_hours round "," inactive_hours "]}," Message Base without_due_date?":{"type":"method","name":"without_due_date?","children":[],"call":[" issue created_on < ","1 day ago ","1 day "," issue created_on "," issue "," issue due_date present? ! "," issue due_date present? "," issue due_date "]}," Message Base inactive_message":{"type":"method","name":"inactive_message","children":[],"call":[" bold ","I18n  t "," rounded_inactive_hours "," inactive? "]}," Message Base without_due_date_message":{"type":"method","name":"without_due_date_message","children":[],"call":["I18n  t "," without_due_date? "]}," Message Base overdue_message":{"type":"method","name":"overdue_message","children":[],"call":["I18n  t "," issue overdue? "," issue "]}," Message Base unassigned_message":{"type":"method","name":"unassigned_message","children":[],"call":["I18n  t "," issue assigned_to_group? "," issue "," issue unassigned? "]}," Message Base basic_message":{"type":"method","name":"basic_message","children":[],"call":[" link "," status "," priority "," assigned_to "," title "," sanitize "]}," Message Base base_message":{"type":"method","name":"base_message","children":[],"call":["(send nil :unassigned_message) compact join ","(send nil :unassigned_message) compact "," basic_message "," inactive_message "," without_due_date_message "," overdue_message "," unassigned_message "]}," Message Base initialize":{"type":"method","name":"initialize","children":[],"call":["Intouch  set_locale "]}," Checker Base assigned_to_assigner?":{"type":"method","name":"assigned_to_assigner?","children":[],"call":[" project assigner_ids include? "," issue assigned_to_id "," issue "," project assigner_ids "," project "]}," Checker Base inactivity_notification?":{"type":"method","name":"inactivity_notification?","children":[],"call":["(str \"feedback\") include? "," state "]}," Checker Base notificable_for_state?":{"type":"method","name":"notificable_for_state?","children":[],"call":[" issue notificable_for_state? "," state "," issue "]}," Checker Base required?":{"type":"method","name":"required?","children":[],"call":[" assigned_to_assigner? "," inactivity_notification? "," notificable_for_state? "," issue_open? "," project_enabled? "]}," Checker Base initialize":{"type":"method","name":"initialize","children":[],"call":[" logger debug ","journal inspect "," logger ","project inspect ","issue inspect "," logger info "]}," Intouch Patches ProjectsHelperPatch MethodsPatch project_settings_tabs_with_intouch":{"type":"method","name":"project_settings_tabs_with_intouch","children":[],"call":["tabs push ","User  current allowed_to? ","User  current "," project_settings_tabs_without_intouch "," project_settings_tabs_without_intouch  push "," project_settings_ project_settings_tabs_without_intouch _without_intouch "]}," Intouch Patches ProjectsHelperPatch included":{"type":"method","name":"included","children":[],"call":[]}," Intouch Patches ProjectPatch included":{"type":"method","name":"included","children":[{"type":"method","name":"assigner_ids","children":[],"asgn":[],"call":["Group  where try try try ","Group  where try try ","Group  where try ","Group  where "," active_assigner_groups "]},{"type":"method","name":"active_assigner_groups","children":[],"asgn":[],"call":[" assigner_groups "," settings_template assigner_groups "," settings_template "," settings_template "]},{"type":"method","name":"active_reminder_settings","children":[],"asgn":[],"call":[" reminder_settings "," settings_template reminder_settings "," settings_template "," settings_template "]},{"type":"method","name":"active_telegram_settings","children":[],"asgn":[],"call":[" telegram_settings "," settings_template telegram_settings "," settings_template "," settings_template "]},{"type":"method","name":"active_email_settings","children":[],"asgn":[],"call":[" email_settings "," settings_template email_settings "," settings_template "," settings_template "]},{"type":"method","name":"active_intouch_settings","children":[],"asgn":[],"call":[" intouch_settings "," settings_template intouch_settings "," settings_template "," settings_template "]},{"type":"method","name":"settings_template","children":[],"asgn":[null],"call":["SettingsTemplate  find_by "," settings_template_id "]},{"type":"method","name":"title","children":[],"asgn":[],"call":[" name "," parent name "," parent "," name "," root? "]},{"type":"method","name":"copy_settings_from_parent","children":[],"asgn":[],"call":[" intouch_settings= "," parent intouch_settings "," parent "," parent present? "," parent "]}],"call":[]}," Intouch Patches JournalPatch included":{"type":"method","name":"included","children":[{"type":"method","name":"handle_updated_issue","children":[],"asgn":[],"call":["LiveHandlerWorker  perform_in "," id ","5 seconds "]}],"call":[]}," Intouch Patches IssueStatusPatch included":{"type":"method","name":"included","children":[{"type":"method","name":"feedback_ids","children":[],"asgn":[],"call":[]},{"type":"method","name":"working_ids","children":[],"asgn":[],"call":[]}],"call":[]}," Intouch Patches IssuePriorityPatch included":{"type":"method","name":"included","children":[{"type":"method","name":"alarm_ids","children":[],"asgn":[],"call":[]}],"call":[]}," Intouch Patches IssuePatch last_journal":{"type":"method","name":"last_journal","children":[],"call":[" journals order last "," journals order "," journals "]}," Intouch Patches IssuePatch included":{"type":"method","name":"included","children":[{"type":"method","name":"alarms","children":[],"asgn":[],"call":[]},{"type":"method","name":"working","children":[],"asgn":[],"call":[]},{"type":"method","name":"feedbacks","children":[],"asgn":[],"call":[]},{"type":"method","name":"alarm?","children":[],"asgn":[],"call":["IssuePriority  alarm_ids include? "," priority_id ","IssuePriority  alarm_ids "]},{"type":"method","name":"unassigned?","children":[],"asgn":[],"call":[" assigned_to nil? "," assigned_to "]},{"type":"method","name":"assigned_to_group?","children":[],"asgn":[],"call":[" assigned_to class == "," assigned_to class "," assigned_to "]},{"type":"method","name":"total_unassigned?","children":[],"asgn":[],"call":[" project assigner_ids include? ! "," project assigner_ids include? "," assigned_to_id "," project assigner_ids "," project "," assigned_to_group? "," unassigned? "]},{"type":"method","name":"without_due_date?","children":[],"asgn":[],"call":[" created_on < ","1 day ago ","1 day "," created_on "," due_date present? ! "," due_date present? "," due_date "]},{"type":"method","name":"working?","children":[],"asgn":[],"call":["IssueStatus  working_ids include? "," status_id ","IssueStatus  working_ids "]},{"type":"method","name":"feedback?","children":[],"asgn":[],"call":["IssueStatus  feedback_ids include? "," status_id ","IssueStatus  feedback_ids "]},{"type":"method","name":"notification_state","children":[],"asgn":[],"call":["(send\n  (const nil :NOTIFICATION_STATES) :select) try "," send ","NOTIFICATION_STATES  select "]},{"type":"method","name":"notification_states","children":[],"asgn":[],"call":[" send ","NOTIFICATION_STATES  select "]},{"type":"method","name":"notificable_for_state?","children":[],"asgn":[],"call":[" notification_states include? "," notification_states "," notification_states include? "," notification_states "," notification_states include? "," notification_states "," notification_states include? "," notification_states "," notification_states include? "," notification_states "," notification_states include? "," notification_states "]},{"type":"method","name":"recipient_ids","children":[],"asgn":[],"call":["Intouch Regular RecipientsList  new recipient_ids ","Intouch Regular RecipientsList  new "]},{"type":"method","name":"live_recipient_ids","children":[],"asgn":[null,null,null,{"type":"local","name":"settings","value":" project send "},[" project send "]],"call":["user_ids flatten uniq + - "," updated_by try "," updated_by ","user_ids flatten uniq + "," assigner_id ","user_ids flatten uniq ","user_ids flatten "," watchers pluck "," watchers ","user_ids << "," assigned_to_id "," assigned_to class == "," assigned_to class "," assigned_to ","user_ids << "," author id "," author ","value try try "," priority_id to_s "," priority_id ","value try "," status_id to_s "," status_id ","recipients each_pair ","(str \"author\") include? ","settings select ","settings present? "," project send "," project "]},{"type":"method","name":"intouch_recipients","children":[],"asgn":[],"call":["Intouch Regular RecipientsList  new call ","Intouch Regular RecipientsList  new "]},{"type":"method","name":"intouch_live_recipients","children":[],"asgn":[],"call":["User  where "," live_recipient_ids "]},{"type":"method","name":"performer","children":[],"asgn":[],"call":["I18n  t "," assigned_to name "," assigned_to "," assigned_to present? "," assigned_to "]},{"type":"method","name":"assigner_id","children":[],"asgn":[],"call":[" journals order where last try "," journals order where last "," journals order where "," project assigner_ids "," project "," journals order "," journals "," assigned_to_id "," project assigner_ids include? "," assigned_to_id "," project assigner_ids "," project "]},{"type":"method","name":"updated_by","children":[],"asgn":[],"call":[" last_journal user "," last_journal "," journals present? "," journals "]},{"type":"method","name":"updated_details","children":[],"asgn":[null,null],"call":["updated_details << "," last_journal notes present? "," last_journal notes "," last_journal ","detail property == ","detail property ","detail prop_key to_i ","detail prop_key ","detail property == ","detail property ","detail prop_key to_s gsub ","detail prop_key to_s ","detail prop_key ","detail property == ","detail property "," last_journal visible_details map "," last_journal visible_details "," last_journal "," last_journal present? "," last_journal "]},{"type":"method","name":"updated_details_text","children":[],"asgn":[],"call":["(send\n  (begin\n    (send\n      (send nil :updated_details) :-\n      (array\n        (str \"priority\")\n        (str \"status\")\n        (str \"assigned_to\")))) :map) join ","CustomField  find try ","CustomField  find ","field is_a? ","I18n  t ","(send\n  (str \"field_\") :+\n  (lvar :field)) to_sym ","field_ + ","I18n  t ","field == ","field is_a? ","(send\n  (send nil :updated_details) :-\n  (array\n    (str \"priority\")\n    (str \"status\")\n    (str \"assigned_to\"))) map "," updated_details - "," updated_details "," updated_details present? "," updated_details "]},{"type":"method","name":"updated_performer_text","children":[],"asgn":[{"type":"local","name":"old_performer","value":"Principal  find "},["Principal  find "],{"type":"local","name":"performer_journal","value":" last_journal details find_by "},[" last_journal details find_by "]],"call":[" performer ","I18n  t "," performer ","old_performer name ","Principal  find ","performer_journal old_value ","performer_journal old_value "," last_journal details find_by "," last_journal details "," last_journal "]},{"type":"method","name":"updated_priority_text","children":[],"asgn":[{"type":"local","name":"old_priority","value":"IssuePriority  find "},["IssuePriority  find "],{"type":"local","name":"priority_journal","value":" last_journal details find_by "},[" last_journal details find_by "]],"call":[" priority name "," priority ","old_priority name ","IssuePriority  find ","priority_journal old_value "," last_journal details find_by "," last_journal details "," last_journal "]},{"type":"method","name":"updated_status_text","children":[],"asgn":[{"type":"local","name":"old_status","value":"IssueStatus  find "},["IssueStatus  find "],{"type":"local","name":"status_journal","value":" last_journal details find_by "},[" last_journal details find_by "]],"call":[" status name "," status ","old_status name ","IssueStatus  find ","status_journal old_value "," last_journal details find_by "," last_journal details "," last_journal "]},{"type":"method","name":"bold_for_alarm","children":[],"asgn":[],"call":["I18n  t ","I18n  t "," alarm? "]},{"type":"method","name":"telegram_live_message","children":[],"asgn":[null,null,null,null,null,null,null,null,null,null,null],"call":[" telegram_group shared_url "," telegram_group ","I18n  t ","(send nil :telegram_group) present? "," telegram_group "," telegram_group ","Intouch  issue_url "," id "," status name "," status ","I18n  t "," updated_details include? "," updated_details "," bold_for_alarm "," priority name "," priority "," updated_details include? "," updated_details "," performer ","I18n  t "," updated_details include? "," updated_details "," updated_details_text ","I18n  t "," updated_details_text present? "," updated_details_text "," updated_status_text ","I18n  t "," updated_details include? "," updated_details "," bold_for_alarm "," updated_priority_text "," updated_details include? "," updated_details "," updated_performer_text ","I18n  t "," updated_details include? "," updated_details "," updated_by ","I18n  t "," updated_by present? "," updated_by "," subject "," project title "," project "]},{"type":"method","name":"telegram_message","children":[],"asgn":[],"call":["Intouch Regular Message Base  new base_message ","Intouch Regular Message Base  new "]},{"type":"method","name":"handle_new_issue","children":[],"asgn":[],"call":["Intouch Live Handler NewIssue  new call ","Intouch Live Handler NewIssue  new "]}],"call":[]}," Intouch Message Formatter bold":{"type":"method","name":"bold","children":[],"call":[" format_strategy bold "," format_strategy "]}," Intouch Message Formatter attention":{"type":"method","name":"attention","children":[],"call":[" format_strategy bold "," format_strategy "]}," Intouch Message Formatter performer":{"type":"method","name":"performer","children":[],"call":[" issue performer "," issue "]}," Intouch Message Formatter link":{"type":"method","name":"link","children":[],"call":["Intouch  issue_url "," issue id "," issue "]}," Intouch Message Formatter status":{"type":"method","name":"status","children":[],"call":["@status name ","I18n  t "]}," Intouch Message Formatter priority":{"type":"method","name":"priority","children":[],"call":["@priority name ","I18n  t "," issue alarm? "," issue "," format_strategy bold "," format_strategy "]}," Intouch Message Formatter assigned_to":{"type":"method","name":"assigned_to","children":[],"call":[" performer ","I18n  t "]}," Intouch Message Formatter title":{"type":"method","name":"title","children":[],"call":[" issue subject "," issue "," project title "," project "]}," Intouch Message Formatter initialize":{"type":"method","name":"initialize","children":[],"call":["@issue priority ","@issue status ","@issue project "]}," Message Private required_checker":{"type":"method","name":"required_checker","children":[],"call":["Intouch Live Checker Private  new "," project "," issue "]}," Message Private email_enabled?":{"type":"method","name":"email_enabled?","children":[],"call":["Intouch  active_protocols include? ","Intouch  active_protocols "]}," Message Private telegram_enabled?":{"type":"method","name":"telegram_enabled?","children":[],"call":["Intouch  active_protocols include? ","Intouch  active_protocols "]}," Message Private send_email_messages":{"type":"method","name":"send_email_messages","children":[],"call":["IntouchSender  send_live_email_message "," required_recipients "," issue id "," issue "," email_enabled? "," IntouchSender  send_live_email_message ","@journal id "]}," Message Private send_telegram_private_messages":{"type":"method","name":"send_telegram_private_messages","children":[],"call":["IntouchSender  send_live_telegram_message "," required_recipients "," issue id "," issue "," telegram_enabled? "," IntouchSender  send_live_telegram_message "]}," Message Private required_recipients":{"type":"method","name":"required_recipients","children":[],"call":[" required_checker required_recipients "," required_checker "]}," Message Private need_private_message?":{"type":"method","name":"need_private_message?","children":[],"call":[" required_checker required? "," required_checker "]}," Message Group telegram_enabled?":{"type":"method","name":"telegram_enabled?","children":[],"call":["Intouch  active_protocols include? ","Intouch  active_protocols "]}," Message Group send":{"type":"method","name":"send","children":[],"call":["IntouchSender  send_live_telegram_group_message "," issue id "," issue "," telegram_enabled? "]}," Message Group initialize":{"type":"method","name":"initialize","children":[],"call":[]}," Handler UpdatedIssue logger":{"type":"method","name":"logger","children":[],"call":["Logger  new ","Rails  root join ","Rails  root "]}," Handler UpdatedIssue need_group_message?":{"type":"method","name":"need_group_message?","children":[],"call":["(send\n  (send\n    (send\n      (send nil :journal) :details) :pluck\n    (sym :prop_key)) :&\n  (array\n    (str \"priority_id\")\n    (str \"status_id\"))) present? "," journal details pluck & "," journal details pluck "," journal details "," journal ","(send\n  (send\n    (send\n      (send nil :journal) :details) :pluck\n    (sym :prop_key)) :&\n  (array\n    (str \"priority_id\")\n    (str \"status_id\")\n    (str \"project_id\"))) present? "]}," Handler UpdatedIssue send_group_messages":{"type":"method","name":"send_group_messages","children":[],"call":["Intouch Live Message Group  new send ","Intouch Live Message Group  new "," project "," issue "," need_group_message? "]}," Handler UpdatedIssue send_private_messages":{"type":"method","name":"send_private_messages","children":[],"call":["Intouch Live Message Private  new send ","Intouch Live Message Private  new "," project "," issue "]}," Handler UpdatedIssue notification_required?":{"type":"method","name":"notification_required?","children":[],"call":["Intouch Live Checker Base  new required? ","Intouch Live Checker Base  new "," journal "," project "," issue "]}," Handler UpdatedIssue call":{"type":"method","name":"call","children":[],"call":[" send_group_messages "," send_private_messages "," logger info "," logger "," notification_required? "," logger debug "," issue inspect "," issue "," journal inspect "," journal ","protocol handle_update ","Intouch IssueUpdate  new ","Intouch  active_protocols each ","Intouch  active_protocols ","protocol handle_Intouch IssueUpdate  new  "]}," Handler UpdatedIssue initialize":{"type":"method","name":"initialize","children":[],"call":["@issue project ","@journal issue ","@journal issue  project "]}," Handler NewIssue send_group_messages":{"type":"method","name":"send_group_messages","children":[],"call":["Intouch Live Message Group  new send ","Intouch Live Message Group  new "," project "," issue "]}," Handler NewIssue send_private_messages":{"type":"method","name":"send_private_messages","children":[],"call":["Intouch Live Message Private  new send ","Intouch Live Message Private  new "," project "," issue "]}," Handler NewIssue notification_required?":{"type":"method","name":"notification_required?","children":[],"call":["Intouch Live Checker Base  new required? ","Intouch Live Checker Base  new "," project "," issue "]}," Handler NewIssue call":{"type":"method","name":"call","children":[],"call":[" send_group_messages "," send_private_messages "," notification_required? ","protocol handle_update ","Intouch IssueUpdate  new "," issue ","Intouch  active_protocols each ","Intouch  active_protocols ","protocol handle_Intouch IssueUpdate  new  "]}," Handler NewIssue initialize":{"type":"method","name":"initialize","children":[],"call":["@issue project "]}," Checker Private always_notify_settings":{"type":"method","name":"always_notify_settings","children":[],"call":[" project active_intouch_settings [] "," project active_intouch_settings "," project "]}," Checker Private notify_always?":{"type":"method","name":"notify_always?","children":[],"call":[" required_recipients present? "," required_recipients "]}," Checker Private required_recipients":{"type":"method","name":"required_recipients","children":[],"call":[" always_notify_settings keys "," always_notify_settings "]}," Checker Private required?":{"type":"method","name":"required?","children":[],"call":[" notify_always? ","Intouch  work_time? "," issue alarm? "," issue "]}," Checker Private initialize":{"type":"method","name":"initialize","children":[],"call":[]}," Checker Base logger":{"type":"method","name":"logger","children":[],"call":["Logger  new ","Rails  root join ","Rails  root "]}," Checker Base journal_issue_state_open?":{"type":"method","name":"journal_issue_state_open?","children":[],"call":["(send\n  (send nil :journal) :new_status) ! "," journal new_status "," journal "," logger debug ","(send\n  (send nil :journal) :new_status) inspect ! ","(send\n  (send nil :journal) :new_status) inspect "," logger "," journal new_status inspect "," journal present? "," journal present? inspect "]}," Checker Base issue_open?":{"type":"method","name":"issue_open?","children":[],"call":[" journal_issue_state_open? "," issue closed? ! "," issue closed? "," issue "," logger debug "," issue closed? inspect ! "," issue closed? inspect "," logger "]}," Checker Base project_enabled?":{"type":"method","name":"project_enabled?","children":[],"call":[" project active? "," project "," project module_enabled? "," logger debug "," project active? inspect "," logger "," project module_enabled? inspect "," logger info "]}," Intouch handle_message":{"type":"method","name":"handle_message","children":[],"call":[]}," Intouch web_hook_url":{"type":"method","name":"web_hook_url","children":[],"call":[]}," TelegramBot command_arguments":{"type":"method","name":"command_arguments","children":[],"call":[" command text match try "," command text match "," command text "," command "]}," TelegramBot clear_subscriptions":{"type":"method","name":"clear_subscriptions","children":[],"call":[" send_message ","I18n  t ","IntouchSubscription  where destroy_all ","IntouchSubscription  where "," account user id "," account user "," account "]}," TelegramBot notify":{"type":"method","name":"notify","children":[],"call":[" send_message ","I18n  t ","IntouchSubscription  find_or_create_by active? ","IntouchSubscription  find_or_create_by ","user id ","project id ","project blank? ","Project  like first ","Project  like "," command_arguments "," clear_subscriptions "," command_arguments == ","(lvar :user) any? "," account user "," account "," account user  id ","Project  like first  id ","Project  like first  blank? ","(lvar : account user ) any? "," account  account user  "]}," Intouch IssueDecorator updated_status_text":{"type":"method","name":"updated_status_text","children":[],"call":[" status name "," status ","old_status name ","IssueStatus  find ","status_journal old_value ","@journal details find_by ","@journal details ","IssueStatus  find_by ","IssueStatus  find  name ","@journal details find_by  old_value "]}," Intouch IssueDecorator updated_performer_text":{"type":"method","name":"updated_performer_text","children":[],"call":[" performer ","I18n  t ","old_performer name ","Principal  find ","performer_journal old_value ","@journal details find_by ","@journal details ","Principal  find  name ","@journal details find_by  old_value "]}," Intouch IssueDecorator updated_priority_text":{"type":"method","name":"updated_priority_text","children":[],"call":[" priority name "," priority ","old_priority name ","IssuePriority  find ","priority_journal old_value ","@journal details find_by ","@journal details ","IssuePriority  find  name ","@journal details find_by  old_value "]}," Intouch IssueDecorator updated_by":{"type":"method","name":"updated_by","children":[],"call":[]}," Intouch IssueDecorator updated_details_text":{"type":"method","name":"updated_details_text","children":[],"call":["(send\n  (begin\n    (send\n      (send nil :updated_details) :-\n      (array\n        (str \"priority\")\n        (str \"status\")\n        (str \"assigned_to\")))) :map) join ","CustomField  find try ","CustomField  find ","field is_a? ","I18n  t ","(send\n  (str \"field_\") :+\n  (lvar :field)) to_sym ","field_ + ","field == ","(send\n  (send nil :updated_details) :-\n  (array\n    (str \"priority\")\n    (str \"status\")\n    (str \"assigned_to\"))) map "," updated_details - "," updated_details "," updated_details present? "]}," Intouch IssueDecorator updated_details":{"type":"method","name":"updated_details","children":[],"call":["updated_details << ","@journal notes present? ","@journal notes ","detail property == ","detail property ","detail prop_key to_i ","detail prop_key ","detail prop_key to_s gsub ","detail prop_key to_s ","@journal visible_details map ","@journal visible_details ","@journal present? "]}," Intouch IssueDecorator intouch_live_recipients":{"type":"method","name":"intouch_live_recipients","children":[],"call":["User  where "," live_recipient_ids ","users + - ","User  anonymous ","users + ","contacts compact ","(send\n  (array\n    (send\n      (self) :customer)) :+\n  (send\n    (send\n      (self) :contacts) :to_a)) uniq ","(send\n  (self) :customer) + "," contacts to_a "," contacts "," customer "," project module_enabled? "," project ","protocol == ","User  where  + - ","User  where  + ","(send\n  (array\n    (send\n      (self) :customer)) :+\n  (send\n    (send\n      (self) :contacts) :to_a)) uniq  compact ","(send\n  (array\n    (send\n      (self) :customer)) :+\n  (send\n    (send\n      (self) :(send\n  (array\n    (send\n      (self) :customer)) :+\n  (send\n    (send\n      (self) :contacts) :to_a)) uniq ) :to_a)) uniq "," (send\n  (array\n    (send\n      (self) :customer)) :+\n  (send\n    (send\n      (self) :contacts) :to_a)) uniq  to_a "," (send\n  (array\n    (send\n      (self) :customer)) :+\n  (send\n    (send\n      (self) :contacts) :to_a)) uniq  "]}," Intouch IssueDecorator live_recipient_ids":{"type":"method","name":"live_recipient_ids","children":[],"call":["(send\n  (send\n    (send\n      (send\n        (lvar :user_ids) :flatten) :+\n      (array\n        (send nil :assigner_id))) :+\n    (lvar :subscribed_user_ids)) :-\n  (array\n    (send\n      (send nil :updated_by) :try\n      (sym :id)))) uniq ","user_ids flatten + + - "," updated_by try "," updated_by ","user_ids flatten + + ","user_ids flatten + "," assigner_id ","user_ids flatten "," watchers pluck "," watchers ","user_ids << "," assigned_to_id "," assigned_to class == "," assigned_to class "," assigned_to "," author id "," author ","value try try "," priority_id to_s "," priority_id ","value try "," status_id to_s "," status_id ","recipients each_pair ","IntouchSubscription  where select map ","IntouchSubscription  where select ","IntouchSubscription  where "," project_id ","(str \"author\") include? ","settings select ","settings blank? "," project send "," project ","(send\n  (send\n    (send\n      (send\n        (lvar :user_ids) :flatten) :+\n      (array\n        (send nil :assigner_id))) :+\n    (lvar :IntouchSubscription  where select map )) :-\n  (array\n    (send\n      (send nil :updated_by) :try\n      (sym :id)))) uniq "," project send  select "," project send  blank? "]}," Intouch IssueDecorator telegram_live_message":{"type":"method","name":"telegram_live_message","children":[],"call":[" telegram_group shared_url "," telegram_group ","I18n  t ","(send nil :telegram_group) present? ","Intouch  issue_url "," id "," status name "," status "," updated_details include? "," updated_details "," bold_for_alarm "," priority name "," priority "," performer "," updated_details_text "," updated_details_text present? "," updated_status_text "," updated_priority_text "," updated_performer_text "," updated_by "," updated_by present? "," subject "," project title "," project "]}," Intouch IssueDecorator initialize":{"type":"method","name":"initialize","children":[],"call":[" journals find_by "," journals "]}," Intouch register_protocol":{"type":"method","name":"register_protocol","children":[],"call":[]}," Protocols Telegram send_regular_notification":{"type":"method","name":"send_regular_notification","children":[],"call":["TelegramGroupSenderWorker  perform_in ","issue id ","5 seconds ","group_ids present? ","telegram_settings try try ","telegram_settings try ","TelegramSenderWorker  perform_in ","project active_telegram_settings ","issue project ","TelegramGroupSenderWorker  perform_async ","group_ids each ","telegram_settings try try  present? ","project active_telegram_settings  try try ","project active_telegram_settings  try ","project active_project active_telegram_settings  ","issue project  active_telegram_settings ","issue issue project  ","telegram_settings try try  each "]}," Protocols Telegram handle_update":{"type":"method","name":"handle_update","children":[],"call":["TelegramGroupLiveSenderWorker  perform_in ","issue id ","5 seconds "," need_group_message? ","TelegramLiveSenderWorker  perform_in ","update live_recipients map ","update live_recipients ","update journal ","update issue ","TelegramLiveSenderWorker  perform_async ","user id ","update live_recipients each ","update issue  id ","update update journal  ","update update issue  "]}," Protocols Slack send_regular_notification":{"type":"method","name":"send_regular_notification","children":[],"call":["SlackRegularWorker  perform_async ","issue id "]}," Protocols Slack handle_update":{"type":"method","name":"handle_update","children":[],"call":["SlackLiveWorker  perform_async ","update live_recipients map ","update live_recipients ","update issue id ","update issue "]}," Protocols Email send_regular_notification":{"type":"method","name":"send_regular_notification","children":[],"call":["EmailSenderWorker  perform_async ","issue id "]}," Protocols Email handle_update":{"type":"method","name":"handle_update","children":[],"call":["EmailLiveSenderWorker  perform_async ","(send\n  (send\n    (send\n      (lvar :update) :live_recipients) :group_by\n    (block-pass\n      (sym :class))) :map) reduce ","recepients map ","klass name ","update live_recipients group_by map ","update live_recipients group_by ","update live_recipients ","update issue id ","update issue ","recipients map "]}," Protocols Base need_group_message?":{"type":"method","name":"need_group_message?","children":[],"call":["(send\n  (send\n    (send\n      (lvar :journal) :details) :pluck\n    (sym :prop_key)) :&\n  (array\n    (str \"priority_id\")\n    (str \"status_id\")\n    (str \"project_id\"))) present? ","journal details pluck & ","journal details pluck ","journal details ","journal blank? "]}," Protocols Base send_regular_notification":{"type":"method","name":"send_regular_notification","children":[],"call":[" raise "]}," Protocols Base handle_update":{"type":"method","name":"handle_update","children":[],"call":[" raise "]}," Intouch IssueUpdate need_notification?":{"type":"method","name":"need_notification?","children":[],"call":["Intouch Live Checker Private  new required? ","Intouch Live Checker Private  new "," issue project "," issue "]}," Intouch IssueUpdate customer":{"type":"method","name":"customer","children":[],"call":[" issue customer "," issue ","recipients [] try try "," issue priority_id to_s "," issue priority_id ","recipients [] try "," issue status_id to_s "," issue status_id ","recipients [] ","(str \"author\") include? ","settings select "," issue project send "," issue project "," issue project module_enabled? ","protocol == ","settings blank? "," issue project send  select "," issue project send  blank? "]}," Intouch IssueUpdate live_recipient_ids":{"type":"method","name":"live_recipient_ids","children":[],"call":["(send\n  (send\n    (send\n      (send\n        (send\n          (lvar :user_ids) :flatten) :+\n        (array\n          (send\n            (send nil :issue) :assigner_id))) :+\n      (lvar :subscribed_user_ids)) :-\n    (array\n      (send\n        (send\n          (const nil :User) :anonymous) :id))) :-\n  (array\n    (csend\n      (send\n        (send nil :issue) :updated_by) :id))) uniq ","user_ids flatten + + - - "," issue updated_by "," issue ","user_ids flatten + + - ","User  anonymous id ","User  anonymous ","user_ids flatten + + ","user_ids flatten + "," issue assigner_id ","user_ids flatten "," issue watchers pluck "," issue watchers ","user_ids << "," issue assigned_to_id "," issue assigned_to class == "," issue assigned_to class "," issue assigned_to "," issue author id "," issue author ","value try try "," issue priority_id to_s "," issue priority_id ","value try "," issue status_id to_s "," issue status_id ","recipients each_pair ","IntouchSubscription  where select map ","IntouchSubscription  where select ","IntouchSubscription  where "," issue project_id ","(str \"author\") include? ","settings select ","settings blank? "," issue project send "," issue project ","ids & ","User  active ids ","User  active ","(send\n  (send\n    (send\n      (send\n        (send\n          (lvar :user_ids) :flatten) :+\n        (array\n          (send\n            (send nil :issue) :assigner_id))) :+\n      (lvar :IntouchSubscription  where select map )) :-\n    (array\n      (send\n        (send\n          (const nil :User) :anonymous) :id))) :-\n  (array\n    (csend\n      (send\n        (send nil :issue) :updated_by) :id))) uniq ","(send\n  (send\n    (send\n      (send\n        (send\n          (lvar :user_(send\n  (send\n    (send\n      (send\n        (send\n          (lvar :user_ids) :flatten) :+\n        (array\n          (send\n            (send nil :issue) :assigner_id))) :+\n      (lvar :subscribed_user_ids)) :-\n    (array\n      (send\n        (send\n          (const nil :User) :anonymous) :id))) :-\n  (array\n    (csend\n      (send\n        (send nil :issue) :updated_by) :id))) uniq ) :flatten) :+\n        (array\n          (send\n            (send nil :issue) :assigner_id))) :+\n      (lvar :subscribed_user_(send\n  (send\n    (send\n      (send\n        (send\n          (lvar :user_ids) :flatten) :+\n        (array\n          (send\n            (send nil :issue) :assigner_id))) :+\n      (lvar :subscribed_user_ids)) :-\n    (array\n      (send\n        (send\n          (const nil :User) :anonymous) :id))) :-\n  (array\n    (csend\n      (send\n        (send nil :issue) :updated_by) :id))) uniq )) :-\n    (array\n      (send\n        (send\n          (const nil :User) :anonymous) :id))) :-\n  (array\n    (csend\n      (send\n        (send nil :issue) :updated_by) :id))) uniq ","user_(send\n  (send\n    (send\n      (send\n        (send\n          (lvar :user_ids) :flatten) :+\n        (array\n          (send\n            (send nil :issue) :assigner_id))) :+\n      (lvar :subscribed_user_ids)) :-\n    (array\n      (send\n        (send\n          (const nil :User) :anonymous) :id))) :-\n  (array\n    (csend\n      (send\n        (send nil :issue) :updated_by) :id))) uniq  flatten + + - - ","user_(send\n  (send\n    (send\n      (send\n        (send\n          (lvar :user_ids) :flatten) :+\n        (array\n          (send\n            (send nil :issue) :assigner_id))) :+\n      (lvar :subscribed_user_ids)) :-\n    (array\n      (send\n        (send\n          (const nil :User) :anonymous) :id))) :-\n  (array\n    (csend\n      (send\n        (send nil :issue) :updated_by) :id))) uniq  flatten + + - ","user_(send\n  (send\n    (send\n      (send\n        (send\n          (lvar :user_ids) :flatten) :+\n        (array\n          (send\n            (send nil :issue) :assigner_id))) :+\n      (lvar :subscribed_user_ids)) :-\n    (array\n      (send\n        (send\n          (const nil :User) :anonymous) :id))) :-\n  (array\n    (csend\n      (send\n        (send nil :issue) :updated_by) :id))) uniq  flatten + + ","user_(send\n  (send\n    (send\n      (send\n        (send\n          (lvar :user_ids) :flatten) :+\n        (array\n          (send\n            (send nil :issue) :assigner_id))) :+\n      (lvar :subscribed_user_ids)) :-\n    (array\n      (send\n        (send\n          (const nil :User) :anonymous) :id))) :-\n  (array\n    (csend\n      (send\n        (send nil :issue) :updated_by) :id))) uniq  flatten + ","user_(send\n  (send\n    (send\n      (send\n        (send\n          (lvar :user_ids) :flatten) :+\n        (array\n          (send\n            (send nil :issue) :assigner_id))) :+\n      (lvar :subscribed_user_ids)) :-\n    (array\n      (send\n        (send\n          (const nil :User) :anonymous) :id))) :-\n  (array\n    (csend\n      (send\n        (send nil :issue) :updated_by) :id))) uniq  flatten ","user_(send\n  (send\n    (send\n      (send\n        (send\n          (lvar :user_ids) :flatten) :+\n        (array\n          (send\n            (send nil :issue) :assigner_id))) :+\n      (lvar :subscribed_user_ids)) :-\n    (array\n      (send\n        (send\n          (const nil :User) :anonymous) :id))) :-\n  (array\n    (csend\n      (send\n        (send nil :issue) :updated_by) :id))) uniq  << "," issue project send  select "," issue project send  blank? ","(send\n  (send\n    (send\n      (send\n        (send\n          (lvar :user_ids) :flatten) :+\n        (array\n          (send\n            (send nil :issue) :assigner_id))) :+\n      (lvar :subscribed_user_ids)) :-\n    (array\n      (send\n        (send\n          (const nil :User) :anonymous) :id))) :-\n  (array\n    (csend\n      (send\n        (send nil :issue) :updated_by) :id))) uniq  & ","User  active (send\n  (send\n    (send\n      (send\n        (send\n          (lvar :user_ids) :flatten) :+\n        (array\n          (send\n            (send nil :issue) :assigner_id))) :+\n      (lvar :subscribed_user_ids)) :-\n    (array\n      (send\n        (send\n          (const nil :User) :anonymous) :id))) :-\n  (array\n    (csend\n      (send\n        (send nil :issue) :updated_by) :id))) uniq  "]}," Intouch IssueUpdate live_recipients":{"type":"method","name":"live_recipients","children":[],"call":["User  where to_a + ","(send nil :customer\n  (ivar :@protocol_name)) compact "," customer ","User  where to_a ","User  where "," live_recipient_ids "," need_notification? "]}," Intouch IssueUpdate initialize":{"type":"method","name":"initialize","children":[],"call":["IssueDecorator  new "]}," Intouch IssueDecorator roles_for_prefix":{"type":"method","name":"roles_for_prefix","children":[],"call":["roles_in_issue & & "," required_recipients ","roles_in_issue & "," required_recipients present? "]}," Intouch IssueDecorator prefix":{"type":"method","name":"prefix","children":[],"call":["(send\n  (send nil :roles_for_prefix\n    (lvar :recipients)\n    (lvar :roles_in_issue)) :map) join ","I18n  t "," roles_for_prefix map "," roles_for_prefix ","(send\n  (lvar :settings) :select) keys ","value try try "," priority_id to_s "," priority_id ","value try "," status_id to_s "," status_id ","(str \"author\") include? ","settings select ","settings present? "," project public_send "," project ","roles_in_issue << "," author_id == "," author_id "," watchers pluck include? "," watchers pluck "," watchers "," assigned_to_id == "," assigned_to_id ","(send\n  (send nil :roles_for_prefix\n    (lvar :(send\n  (lvar :settings) :select) keys )\n    (lvar :roles_in_issue)) :map) join ","(send\n  (lvar : project public_send ) :select) keys "," project public_send  select "," project public_send  present? "]}," Intouch IssueDecorator required_recipients":{"type":"method","name":"required_recipients","children":[],"call":["Intouch Live Checker Private  new required_recipients ","Intouch Live Checker Private  new "," project "]}," Intouch IssueDecorator as_markdown":{"type":"method","name":"as_markdown","children":[],"call":["Intouch  issue_url "," id "," status name "," status ","I18n  t "," updated_details include? "," updated_details "," bold_for_alarm "," priority name "," priority "," performer "," updated_details_text "," updated_details_text present? "," updated_status_text "," updated_priority_text "," updated_performer_text "," updated_by "," updated_by present? "," subject "," project title "," project "," prefix "," subject gsub "," project title gsub "]}," Intouch handle_group_upgrade":{"type":"method","name":"handle_group_upgrade","children":[],"call":[]}," Intouch telegram_preview?":{"type":"method","name":"telegram_preview?","children":[],"call":[]}," Intouch bootstrap":{"type":"method","name":"bootstrap","children":[],"call":[]}," Intouch ChatUpgradedError ===":{"type":"method","name":"===","children":[],"call":[]}," Intouch UpdateManager dispatch":{"type":"method","name":"dispatch","children":[],"call":["handler call ","handlers each ","update is_a? ","@handlers each "]}," Intouch UpdateManager on":{"type":"method","name":"on","children":[],"call":["@handlers [] << ","@handlers [] "]}," Intouch UpdateManager initialize":{"type":"method","name":"initialize","children":[],"call":[]}," Intouch ServiceInitializer to_proc":{"type":"method","name":"to_proc","children":[],"call":[" call "," proc "]}," Preview Text sanitizer":{"type":"method","name":"sanitizer","children":[],"call":["Rails Html FullSanitizer  new "]}," Preview Text normalized":{"type":"method","name":"normalized","children":[],"call":[" sanitizer sanitize truncate "," sanitizer sanitize "," textilizable "," raw_text "," sanitizer "]}," Preview Text initialize":{"type":"method","name":"initialize","children":[],"call":[]}," Preview Text normalize":{"type":"method","name":"normalize","children":[],"call":[]}," Preview KeyboardMarkup initialize":{"type":"method","name":"initialize","children":[],"call":["Telegram Bot Types InlineKeyboardButton  new ","(pair\n  (sym :type)\n  (str \"issue_preview\")) to_json ","I18n  t "]}," Preview KeyboardMarkup build_hash":{"type":"method","name":"build_hash","children":[],"call":[]}," Preview Handler preview_text":{"type":"method","name":"preview_text","children":[],"call":["Text  normalize "," journal "," issue "]}," Preview Handler current_user":{"type":"method","name":"current_user","children":[],"call":["User  anonymous "," telegram_account "]}," Preview Handler telegram_account":{"type":"method","name":"telegram_account","children":[],"call":["TelegramAccount  find_by "," update from id "," update from "," update "]}," Preview Handler project":{"type":"method","name":"project","children":[],"call":[" issue project "," issue "]}," Preview Handler journal":{"type":"method","name":"journal","children":[],"call":["Journal  find_by "," data [] "," data "]}," Preview Handler issue":{"type":"method","name":"issue","children":[],"call":["Issue  find_by "," data [] "," data "]}," Preview Handler data":{"type":"method","name":"data","children":[],"call":["JSON  parse with_indifferent_access ","JSON  parse "," raw_data "]}," Preview Handler raw_data":{"type":"method","name":"raw_data","children":[],"call":[" update data "," update "]}," Preview Handler call":{"type":"method","name":"call","children":[],"call":[" api answer_callback_query "," preview_text "," update id "," update "," api "," current_user allowed_to? "," project "," current_user "," issue "," data [] == "," data [] "," data ","Intouch  telegram_preview? "]}," Preview Handler initialize":{"type":"method","name":"initialize","children":[],"call":[]}," Preview Handler to_proc":{"type":"method","name":"to_proc","children":[],"call":[]}," Preview Handler OutdatedQueryError ===":{"type":"method","name":"===","children":[],"call":[]}," Intouch IssueDecorator as_html":{"type":"method","name":"as_html","children":[],"call":["Intouch  issue_url "," id "," status name "," status ","I18n  t "," updated_details include? "," updated_details "," bold_for_alarm ","FormatStrategies  [] "," priority name "," priority "," performer "," updated_details_text "," updated_details_text present? "," updated_status_text "," updated_priority_text "," updated_performer_text "," updated_by "," updated_by present? "," sanitize "," subject "," project title "," project "," prefix ","Intouch FormatStrategies  [] "]}," Intouch FormatStrategies []":{"type":"method","name":"[]","children":[],"call":[]}," Intouch FormatStrategies Html code":{"type":"method","name":"code","children":[],"call":[]}," Intouch FormatStrategies Html bold":{"type":"method","name":"bold","children":[],"call":[]}," Intouch FormatStrategies Markdown code":{"type":"method","name":"code","children":[],"call":[]}," Intouch FormatStrategies Markdown bold":{"type":"method","name":"bold","children":[],"call":[]}," Intouch CommandHandler call":{"type":"method","name":"call","children":[],"call":["Intouch TelegramBot  new call ","Intouch TelegramBot  new "," message "]}," Intouch CommandHandler initialize":{"type":"method","name":"initialize","children":[],"call":[]}," Telegram PreviewHandler call":{"type":"method","name":"call","children":[],"call":["Intouch Preview Handler  call ","action message "]}," Telegram PreviewHandler allowed?":{"type":"method","name":"allowed?","children":[],"call":["user active? "]}," Telegram PreviewHandler group?":{"type":"method","name":"group?","children":[],"call":[]}," Telegram PreviewHandler private?":{"type":"method","name":"private?","children":[],"call":[]}," Telegram PreviewHandler match?":{"type":"method","name":"match?","children":[],"call":["action callback_query? "]}," Telegram NotifyCommand call":{"type":"method","name":"call","children":[],"call":["bot send_message ","I18n  t ","action chat_id ","IntouchSubscription  find_or_create_by active? ","IntouchSubscription  find_or_create_by ","user id ","project id ","project blank? ","Project  like first ","Project  like ","IntouchSubscription  where destroy_all ","IntouchSubscription  where ","command_arguments == ","(lvar :user) any? ","action command drop first ","action command drop ","action command ","action user ","action user  id ","Project  like first  id ","Project  like first  blank? ","action command drop first  == ","(lvar :action user ) any? ","action action user  "]}," Telegram NotifyCommand allowed?":{"type":"method","name":"allowed?","children":[],"call":["user active? "]}," Telegram NotifyCommand description":{"type":"method","name":"description","children":[],"call":["I18n  t "]}," Telegram NotifyCommand name":{"type":"method","name":"name","children":[],"call":[]}," Telegram NotifyCommand private?":{"type":"method","name":"private?","children":[],"call":[]}," Telegram NotifyCommand command?":{"type":"method","name":"command?","children":[],"call":[]}," Telegram NameUpdateCommand call":{"type":"method","name":"call","children":[],"call":["bot async send_message ","I18n  t ","action chat_id ","bot async ","account update! ","action from last_name ","action from ","action from first_name ","action from username ","action telegram_account "]}," Telegram NameUpdateCommand description":{"type":"method","name":"description","children":[],"call":["I18n  t "]}," Telegram NameUpdateCommand command?":{"type":"method","name":"command?","children":[],"call":[]}," Telegram NameUpdateCommand name":{"type":"method","name":"name","children":[],"call":[]}," Telegram NameUpdateCommand allowed?":{"type":"method","name":"allowed?","children":[],"call":["user active? "]}," Telegram NameUpdateCommand private?":{"type":"method","name":"private?","children":[],"call":[]}," Telegram GroupUpdateCommand call":{"type":"method","name":"call","children":[],"call":["bot async send_message ","I18n  t ","action chat_id ","bot async ","chat save! ","TelegramGroupChat  where first_or_initialize ","action chat_title ","TelegramGroupChat  where ","action chat_id abs ","action TelegramGroupChat  where first_or_initialize _id ","TelegramGroupChat  where first_or_initialize  save! ","action TelegramGroupChat  where first_or_initialize _title ","action TelegramGroupChat  where first_or_initialize _id abs "]}," Telegram GroupUpdateCommand description":{"type":"method","name":"description","children":[],"call":["I18n  t "]}," Telegram GroupUpdateCommand command?":{"type":"method","name":"command?","children":[],"call":[]}," Telegram GroupUpdateCommand name":{"type":"method","name":"name","children":[],"call":[]}," Telegram GroupUpdateCommand allowed?":{"type":"method","name":"allowed?","children":[],"call":[]}," Telegram GroupUpdateCommand group?":{"type":"method","name":"group?","children":[],"call":[]}}