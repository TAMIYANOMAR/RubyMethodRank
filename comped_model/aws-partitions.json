{" Aws Partitions service_ids":{"type":"method","name":"service_ids","children":[],"call":[]}," Aws Partitions defaults":{"type":"method","name":"defaults","children":[],"call":["JSON  load ","File  read ","File  expand_path ","defaults merge ","defaults [] dup ","defaults [] ","JSON  parse ","JSON VERSION  >= ","File  expand_File  expand_path  ","JSON  parse  merge ","JSON  load  merge ","JSON  parse  [] dup ","JSON  load  [] dup ","JSON  parse  [] ","JSON  load  [] "]}," Aws Partitions default_partition_list":{"type":"method","name":"default_partition_list","children":[],"call":["PartitionList  build "," defaults ","partitions merge_metadata "," default_metadata ","PartitionList  build  merge_metadata "]}," Aws Partitions clear":{"type":"method","name":"clear","children":[],"call":[" defaults [] clear "," defaults [] "," defaults "," default_partition_list clear "," default_partition_list "]}," Aws Partitions add":{"type":"method","name":"add","children":[],"call":[" defaults [] << "," defaults [] "," defaults "," default_partition_list add_partition ","Partition  build "," default_partition_list ","new_partitions [] each ","new_partitions [] "]}," Aws Partitions partitions":{"type":"method","name":"partitions","children":[],"call":[" default_partition_list "]}," Aws Partitions partition":{"type":"method","name":"partition","children":[],"call":[" default_partition_list partition "," default_partition_list "]}," Aws Partitions each":{"type":"method","name":"each","children":[],"call":[" default_partition_list each "," default_partition_list "]}," Aws Partitions Service partition_region":{"type":"method","name":"partition_region","children":[],"call":["service [] "]}," Aws Partitions Service regions":{"type":"method","name":"regions","children":[],"call":["names - ","partition [] ","Set  new ","partition [] keys & ","service [] keys ","service [] ","partition [] keys ","service key? ","Set  new  - "]}," Aws Partitions Service build":{"type":"method","name":"build","children":[],"call":["Service  new "," partition_region ","service [] != ","service [] "," regions ","partition [] "," variant_regions "]}," Aws Partitions Service regionalized?":{"type":"method","name":"regionalized?","children":[],"call":[]}," Aws Partitions Service initialize":{"type":"method","name":"initialize","children":[],"call":["options [] "]}," Aws Partitions Region service_in_region?":{"type":"method","name":"service_in_region?","children":[],"call":["svc [] key? ","svc [] ","svc key? "]}," Aws Partitions Region region_services":{"type":"method","name":"region_services","children":[],"call":["services << "," service_in_region? ","partition [] [] ","partition [] ","Partitions  service_ids inject ","Set  new ","Partitions  service_ids "]}," Aws Partitions Region build":{"type":"method","name":"build","children":[],"call":["Region  new "," region_services ","partition [] ","region [] "]}," Aws Partitions Region initialize":{"type":"method","name":"initialize","children":[],"call":["options [] "]}," Aws Partitions PartitionList build":{"type":"method","name":"build","children":[],"call":["list add_partition ","Partition  build ","partitions [] inject ","PartitionList  new ","partitions [] "]}," Aws Partitions PartitionList clear":{"type":"method","name":"clear","children":[],"call":[]}," Aws Partitions PartitionList add_partition":{"type":"method","name":"add_partition","children":[],"call":[" raise ","partition class ","@partitions []= ","partition name ","Partition  === "]}," Aws Partitions PartitionList partitions":{"type":"method","name":"partitions","children":[],"call":["@partitions values "]}," Aws Partitions PartitionList partition":{"type":"method","name":"partition","children":[],"call":[" raise ","msg << ","partition names include %s % ","@partitions keys join ","@partitions keys ","partition_name inspect ","@partitions [] ","@partitions key? ","(dstr\n  (str \"invalid partition name \")\n  (begin\n    (send\n      (lvar :partition_name) :inspect))\n  (str \"; valid \")) % ","(dstr\n  (str \"invalid partition name \")\n  (begin\n    (send\n      (lvar :partition_name) :inspect))\n  (str \"; valid \")) %  << "]}," Aws Partitions PartitionList each":{"type":"method","name":"each","children":[],"call":["@partitions each_value "]}," Aws Partitions PartitionList initialize":{"type":"method","name":"initialize","children":[],"call":[]}," Aws Partitions Partition build_services":{"type":"method","name":"build_services","children":[],"call":["services []= ","Service  build ","partition [] [] ","partition [] ","partition [] key? ","Partitions  service_ids inject ","Partitions  service_ids ","partition [] fetch ","Partitions  service_ids each_with_object "]}," Aws Partitions Partition build_regions":{"type":"method","name":"build_regions","children":[],"call":["regions []= ","Region  build ","region_name == ","partition [] ","partition [] inject ","partition [] each_with_object "]}," Aws Partitions Partition build":{"type":"method","name":"build","children":[],"call":["Partition  new "," build_services "," build_regions ","partition [] "]}," Aws Partitions Partition services":{"type":"method","name":"services","children":[],"call":["@services values "]}," Aws Partitions Partition service":{"type":"method","name":"service","children":[],"call":[" raise ","msg << ","names include %s % ","@services keys join ","@services keys ","service_name inspect ","@services [] ","@services key? "]}," Aws Partitions Partition regions":{"type":"method","name":"regions","children":[],"call":["@regions values "]}," Aws Partitions Partition region":{"type":"method","name":"region","children":[],"call":[" raise ","msg << ","names include %s % ","@regions keys join ","@regions keys ","region_name inspect ","@regions [] ","@regions key? "]}," Aws Partitions Partition initialize":{"type":"method","name":"initialize","children":[],"call":["options [] "]}," Aws Partitions EndpointProvider default_provider":{"type":"method","name":"default_provider","children":[],"call":["EndpointProvider  new ","Partitions  defaults "]}," Aws Partitions EndpointProvider dns_suffix_for":{"type":"method","name":"dns_suffix_for","children":[],"call":[" default_provider dns_suffix_for "," default_provider ","partition [] "," get_partition "," get_partition [] "," resolve_variant [] "," resolve_variant "," configured_variants? "," get_partition  [] "," get_ get_partition  "," get_ get_partition  [] "]}," Aws Partitions EndpointProvider signing_region":{"type":"method","name":"signing_region","children":[],"call":[" default_provider signing_region "," default_provider "," get_partition fetch fetch fetch fetch fetch fetch "," get_partition fetch fetch fetch fetch fetch "," get_partition fetch fetch fetch fetch "," get_partition fetch fetch fetch "," get_partition fetch fetch "," get_partition fetch "," get_partition "," credential_scope fetch "," credential_scope "," build_is_global_fn "]}," Aws Partitions EndpointProvider resolve":{"type":"method","name":"resolve","children":[],"call":[" default_provider resolve "," default_provider ","https:// + "," endpoint_for "," build_is_global_fn "]}," Aws Partitions EndpointProvider default_partition":{"type":"method","name":"default_partition","children":[],"call":["@rules [] first ","@rules [] ","p [] == ","p [] ","@rules [] find "]}," Aws Partitions EndpointProvider partition_matching_region":{"type":"method","name":"partition_matching_region","children":[],"call":["svc [] key? ","svc [] ","p [] values find ","p [] values ","p [] ","region match ","@rules [] find ","@rules [] ","svc key? "]}," Aws Partitions EndpointProvider partition_containing_region":{"type":"method","name":"partition_containing_region","children":[],"call":["p [] key? ","p [] ","@rules [] find ","@rules [] "]}," Aws Partitions EndpointProvider get_partition":{"type":"method","name":"get_partition","children":[],"call":[" default_partition "," partition_matching_region "," partition_containing_region "," partition_matching_name "]}," Aws Partitions EndpointProvider default_endpoint":{"type":"method","name":"default_endpoint","children":[],"call":["hostname_template sub sub sub ","partition [] ","hostname_template sub sub ","hostname_template sub ","partition [] [] ","partition [] []  sub sub sub ","partition [] []  sub sub ","partition [] []  sub "]}," Aws Partitions EndpointProvider endpoint_for":{"type":"method","name":"endpoint_for","children":[],"call":["service_cfg fetch fetch fetch ","service_cfg fetch fetch ","service_cfg fetch ","service_cfg [] == ","service_cfg [] ","partition fetch fetch ","partition fetch "," default_endpoint "," get_partition ","STS_LEGACY_REGIONS  include? ","sts_regional_endpoints == ","service == ","service_cfg [] []= ","region == ","endpoint sub sub sub ","partition [] ","endpoint sub sub ","endpoint sub ","partition [] [] ","endpoints fetch fetch ","endpoints fetch ","endpoints key? ! ","endpoints key? "," endpoint_no_variants_for "," endpoint_with_variants_for "," configured_variants? ","partition fetch fetch  fetch fetch fetch ","partition fetch fetch  fetch fetch ","partition fetch fetch  fetch ","partition fetch fetch  [] == ","partition fetch fetch  [] "," get_partition  fetch fetch "," get_partition  fetch "," default_service_cfg fetch fetch fetch  "," default_service_cfg fetch fetch  "," default_ default_endpoint  "," default_endpoints fetch fetch  "," service_cfg fetch fetch  "," get_ get_partition  ","sts_regional_service_cfg fetch fetch fetch s == ","sts_regional_service_cfg fetch fetch s == ","sts_regional_ default_endpoint s == ","sts_regional_endpoints fetch fetch s == ","sts_service_cfg fetch al_endpoints == ","sts_regional_service_cfg fetch  == ","partition fetch fetch  [] []= ","service_cfg fetch  == ","service_cfg fetch fetch fetch  sub sub sub ","service_cfg fetch fetch  sub sub sub "," default_endpoint  sub sub sub ","endpoints fetch fetch  sub sub sub "," get_partition  [] ","service_cfg fetch fetch fetch  sub sub ","service_cfg fetch fetch  sub sub "," default_endpoint  sub sub ","endpoints fetch fetch  sub sub ","service_cfg fetch fetch fetch  sub ","service_cfg fetch fetch  sub "," default_endpoint  sub ","endpoints fetch fetch  sub "," get_partition  [] [] ","service_cfg fetch fetch fetch s fetch fetch ","service_cfg fetch fetch s fetch fetch "," default_endpoint s fetch fetch ","endpoints fetch fetch s fetch fetch ","service_cfg fetch  fetch fetch ","service_cfg fetch fetch fetch s fetch ","service_cfg fetch fetch s fetch "," default_endpoint s fetch ","endpoints fetch fetch s fetch ","service_cfg fetch  fetch ","service_cfg fetch fetch fetch s key? ! ","service_cfg fetch fetch s key? ! "," default_endpoint s key? ! ","endpoints fetch fetch s key? ! ","service_cfg fetch  key? ! ","service_cfg fetch fetch fetch s key? ","service_cfg fetch fetch s key? "," default_endpoint s key? ","endpoints fetch fetch s key? ","service_cfg fetch  key? "," service_cfg fetch fetch fetch _no_variants_for "," service_cfg fetch fetch _no_variants_for ","  default_endpoint _no_variants_for "," endpoints fetch fetch _no_variants_for "," service_cfg fetch fetch fetch _with_variants_for "," service_cfg fetch fetch _with_variants_for ","  default_endpoint _with_variants_for "," endpoints fetch fetch _with_variants_for "]}," Aws Partitions EndpointProvider initialize":{"type":"method","name":"initialize","children":[],"call":[]}," Aws Partitions Partition service?":{"type":"method","name":"service?","children":[],"call":["@services key? "]}," Aws Partitions Partition region?":{"type":"method","name":"region?","children":[],"call":["@regions key? "]}," Aws Partitions EndpointProvider partition_matching_name":{"type":"method","name":"partition_matching_name","children":[],"call":["p [] == ","p [] ","@rules [] find ","@rules [] "]}," Aws Partitions EndpointProvider signing_service":{"type":"method","name":"signing_service","children":[],"call":[" default_provider signing_service "," default_provider "," credential_scope fetch "," credential_scope "," build_is_global_fn "]}," Aws Partitions EndpointProvider credential_scope":{"type":"method","name":"credential_scope","children":[],"call":["endpoints fetch fetch ","endpoints fetch ","service_cfg fetch fetch ","service_cfg fetch ","service_cfg [] == ","service_cfg [] ","endpoints key? ! ","endpoints key? ","STS_LEGACY_REGIONS  include? ","sts_regional_endpoints == ","service == ","partition fetch fetch ","partition fetch "," get_partition ","is_global_fn call ","service_cfg fetch  fetch fetch ","service_cfg fetch  fetch ","partition fetch fetch  fetch fetch ","partition fetch fetch  fetch ","partition fetch fetch  [] == ","partition fetch fetch  [] ","service_cfg fetch  key? ! ","service_cfg fetch  key? ","sts_service_cfg fetch al_endpoints == ","sts_regional_service_cfg fetch  == "," get_partition  fetch fetch "," get_partition  fetch "," get_ get_partition  "]}," Aws Partitions Service variant_regions":{"type":"method","name":"variant_regions","children":[],"call":["names - ","partition [] ","names << ","partition [] key? ","tags include? ","variant fetch ","variants each ","value fetch ","svc_endpoints each ","Set  new ","service fetch ","Set  new  - ","Set  new  << ","variant fetch  include? ","value fetch  each ","service fetch  each "]}," Aws Partitions EndpointProvider build_is_global_fn":{"type":"method","name":"build_is_global_fn","children":[],"call":["service_cfg [] == ","service_cfg [] ","endpoints key? ! ","endpoints key? ","STS_LEGACY_REGIONS  include? ","sts_regional_endpoints == ","service == "," lambda "]}," Aws Partitions EndpointProvider warn_deprecation":{"type":"method","name":"warn_deprecation","children":[],"call":[" warn "]}," Aws Partitions EndpointProvider endpoint_no_variants_for":{"type":"method","name":"endpoint_no_variants_for","children":[],"call":["endpoint sub sub sub ","partition [] ","endpoint sub sub ","endpoint sub "," warn_deprecation ","region_cfg [] ","region_cfg fetch ","endpoints fetch ","service_cfg fetch ","is_global_fn call ","service_cfg fetch fetch ","partition [] [] ","partition fetch fetch ","partition fetch "," get_partition ","region_cfg fetch  sub sub sub "," get_partition  [] ","region_cfg fetch  sub sub ","region_cfg fetch  sub ","endpoints fetch  [] ","service_cfg fetch _cfg [] ","endpoints fetch  fetch ","service_cfg fetch _cfg fetch ","region_cfg fetch s fetch ","service_cfg fetch  fetch ","partition fetch fetch  fetch ","partition fetch fetch  fetch fetch "," get_partition  [] [] "," get_partition  fetch fetch "," get_partition  fetch "," get_ get_partition  "]}," Aws Partitions EndpointProvider endpoint_with_variants_for":{"type":"method","name":"endpoint_with_variants_for","children":[],"call":["variant [] sub sub sub ","variant [] ","variant [] sub sub ","variant [] sub "," validate_variant! "," resolve_variant "," resolve_variant  [] sub sub sub "," resolve_variant  [] "," resolve_variant  [] sub sub "," resolve_variant  [] sub "," validate_ resolve_variant ! "," resolve_ resolve_variant  "]}," Aws Partitions EndpointProvider validate_variant!":{"type":"method","name":"validate_variant!","children":[],"call":[" raise ","(send\n  (block\n    (send\n      (lvar :config_variants) :select)\n    (args\n      (arg :_k)\n      (arg :v))\n    (lvar :v)) :map) join ","k to_s ","(send\n  (lvar :config_variants) :select) map ","config_variants select ","resolved_variant [] "]}," Aws Partitions EndpointProvider resolve_variant":{"type":"method","name":"resolve_variant","children":[],"call":["partition_defaults merge ","service_defaults merge "," fetch_variant ","service_cfg fetch ","partition_cfg fetch "," warn_deprecation ","region_cfg [] ","endpoints_cfg fetch ","is_global_fn call ","partition_cfg fetch fetch "," get_partition "," build_is_global_fn ","Set  new ","k to_s ","(send\n  (lvar :config_variants) :select) map ","v == ","config_variants select "," fetch_variant  merge ","partition_cfg fetch fetch  fetch "," get_partition  fetch ","endpoints_cfg fetch  [] ","service_cfg fetch _cfg [] ","service_cfg fetch  fetch "," build_is_global_fn  call "," get_partition  fetch fetch "," build_ build_is_global_fn  "]}," Aws Partitions EndpointProvider fetch_variant":{"type":"method","name":"fetch_variant","children":[],"call":["tags == ","Set  new ","v [] ","variants find ","cfg fetch ","cfg fetch  find "]}," Aws Partitions EndpointProvider configured_variants?":{"type":"method","name":"configured_variants?","children":[],"call":["variants values any? ","variants values "]}," Aws Partitions default_metadata":{"type":"method","name":"default_metadata","children":[],"call":["defaults merge ","defaults [] dup ","defaults [] ","JSON  parse ","File  read ","File  expand_path ","JSON  parse  merge ","JSON  parse  [] dup ","JSON  parse  [] ","File  expand_File  expand_path  "]}," Aws Partitions merge_metadata":{"type":"method","name":"merge_metadata","children":[],"call":[" default_partition_list merge_metadata "," default_partition_list "]}," Aws Partitions PartitionList build_metadata_regions":{"type":"method","name":"build_metadata_regions","children":[],"call":["regions []= ","Region  new ","Set  new ","region [] ","existing region ","existing region? ","metadata_regions each_with_object "]}," Aws Partitions PartitionList merge_metadata":{"type":"method","name":"merge_metadata","children":[],"call":["@partitions []= ","Partition  new ","partition_metadata [] "," build_metadata_regions ","services []= ","s name ","existing services each_with_object ","existing services ","existing name ","@partitions [] ","partitions_metadata [] each ","partitions_metadata [] ","@partitions []  services each_with_object ","@partitions []  services ","@partitions []  name "]}}