{" URI Generic query_hash=":{"type":"method","name":"query_hash=","children":[],"call":[" query= ","(send\n  (lvar :hash) :map) join ","CGI  escape ","hash map "]}," URI Generic query_hash":{"type":"method","name":"query_hash","children":[],"call":["hash []= ","v first ","v size == ","v size ","CGI  parse inject ","CGI  parse "," query "]}," OAuth2 Strategy WebServer access_token_params":{"type":"method","name":"access_token_params","children":[],"call":["(lvar :options) merge "]}," OAuth2 Strategy WebServer access_token":{"type":"method","name":"access_token","children":[],"call":["OAuth2 AccessToken  new ","(send\n  (send\n    (lvar :response) :split\n    (str \"&\")) :inject\n  (hash)) [] ","h []= ","kv split ","response split inject ","response split ","@client request "," access_token_params ","@client access_token_url "," get_access_token "," warn ","params [] ","Rack Utils  parse_query ","(send\n  (send\n    (lvar :@client request ) :split\n    (str \"&\")) :inject\n  (hash)) [] ","@client request  split inject ","@client request  split "," access_(send\n  (send\n    (lvar :response) :split\n    (str \"&\")) :inject\n  (hash)) [] _params "," access_params [] _params "," access_token_Rack Utils  parse_query  ","@client access_(send\n  (send\n    (lvar :response) :split\n    (str \"&\")) :inject\n  (hash)) [] _url ","@client access_params [] _url "," get_access_(send\n  (send\n    (lvar :response) :split\n    (str \"&\")) :inject\n  (hash)) []  "," get_access_params []  ","Rack Utils  parse_query  [] "]}," OAuth2 Strategy WebServer authorize_params":{"type":"method","name":"authorize_params","children":[],"call":["(lvar :options) merge "]}," OAuth2 Strategy Base access_token_params":{"type":"method","name":"access_token_params","children":[],"call":["(pair\n  (str \"client_id\")\n  (send\n    (ivar :@client) :id)) merge ","@client secret ","@client id "," default_params "]}," OAuth2 Strategy Base access_token_url":{"type":"method","name":"access_token_url","children":[],"call":["uri to_s ","uri query_hash= "," access_token_params ","URI  parse ","@client access_token_url ","URI  parse  to_s ","URI  parse  query_hash= "]}," OAuth2 Strategy Base authorize_params":{"type":"method","name":"authorize_params","children":[],"call":["(pair\n  (str \"client_id\")\n  (send\n    (ivar :@client) :id)) merge ","@client id ","h []= ","k to_s ","options inject "]}," OAuth2 Strategy Base authorize_url":{"type":"method","name":"authorize_url","children":[],"call":["uri to_s ","uri query_hash= "," authorize_params ","URI  parse ","@client authorize_url ","URI  parse  to_s ","URI  parse  query_hash= "]}," OAuth2 Strategy Base initialize":{"type":"method","name":"initialize","children":[],"call":[]}," OAuth2 Client web_server":{"type":"method","name":"web_server","children":[],"call":["OAuth2 Strategy WebServer  new "]}," OAuth2 Client request":{"type":"method","name":"request","children":[],"call":[" raise ","e response= ","OAuth2 HTTPError  new ","response code ","OAuth2 AccessDenied  new ","response body ","http request ","req set_form_data ","verb == ","Net HTTP  const_get new ","Net HTTP  const_get ","verb to_s capitalize ","verb to_s ","uri query ","uri query_hash= ","uri query_hash merge ","uri query_hash ","net start ","net use_ssl= ","uri scheme == ","uri scheme ","Net HTTP  new ","uri port ","uri host ","(send\n  (send\n    (lvar :uri) :path) :+\n  (lvar :url_or_path)) gsub ","uri path + ","uri path ","URI  parse "," site ","url_or_path [] == ","url_or_path [] ","resp status ","ResponseString  new "," connection run_request "," connection ","req params update ","req params ","ResponseHash  new ","resp headers [] == ","resp headers [] ","resp headers "," json? ","resp headers [] include? ","resp body ","ResponseObject  from "," response_for "," raise_errors ","OAuth2 Conflict  new "," request ","response status ","Error  new ","response error= "," options [] "," options ","opts [] ","response headers [] ","response headers ","opts delete ","response status == ","opts [] > ","Response  new "," block_given? "," connection build_url to_s "," connection build_url ","opts fetch "," fail "," connection response "," Logger  new ","ENV  [] == ","ENV  [] ","response response env url merge ","response response env url ","response response env ","response response "," execute_request "," raisOAuth2 HTTPError  new  "," raisOAuth2 AccessDenied  new  "," raisOAuth2 Conflict  new  "," raisError  new  ","OAuth2 HTTPError  new  rOAuth2 HTTPError  new sponsOAuth2 HTTPError  new = ","OAuth2 AccessDenied  new  rOAuth2 AccessDenied  new sponsOAuth2 AccessDenied  new = ","OAuth2 Conflict  new  rOAuth2 Conflict  new sponsOAuth2 Conflict  new = ","Error  new  rError  new sponsError  new = ","e http request = ","e Response  new = ","e  execute_request = ","e  connection run_request onse= ","OAuth2 HTTPError  nOAuth2 HTTPError  new w ","OAuth2 HTTPError  nOAuth2 AccessDenied  new w ","OAuth2 HTTPError  nOAuth2 Conflict  new w ","OAuth2 HTTPError  nError  new w ","rOAuth2 HTTPError  new sponsOAuth2 HTTPError  new  codOAuth2 HTTPError  new  ","rOAuth2 AccessDenied  new sponsOAuth2 AccessDenied  new  codOAuth2 AccessDenied  new  ","rOAuth2 Conflict  new sponsOAuth2 Conflict  new  codOAuth2 Conflict  new  ","rError  new sponsError  new  codError  new  ","http request  code ","Response  new  code "," execute_request  code "," connection run_request onse code ","OAuth2 AccOAuth2 HTTPError  new ssDOAuth2 HTTPError  new niOAuth2 HTTPError  new d  nOAuth2 HTTPError  new w ","OAuth2 AccOAuth2 AccessDenied  new ssDOAuth2 AccessDenied  new niOAuth2 AccessDenied  new d  nOAuth2 AccessDenied  new w ","OAuth2 AccOAuth2 Conflict  new ssDOAuth2 Conflict  new niOAuth2 Conflict  new d  nOAuth2 Conflict  new w ","OAuth2 AccError  new ssDError  new niError  new d  nError  new w ","rOAuth2 HTTPError  new sponsOAuth2 HTTPError  new  body ","rOAuth2 AccessDenied  new sponsOAuth2 AccessDenied  new  body ","rOAuth2 Conflict  new sponsOAuth2 Conflict  new  body ","rError  new sponsError  new  body ","http request  body ","Response  new  body "," execute_request  body "," connection run_request onse body ","http rOAuth2 HTTPError  new quOAuth2 HTTPError  new st ","http rOAuth2 AccessDenied  new quOAuth2 AccessDenied  new st ","http rOAuth2 Conflict  new quOAuth2 Conflict  new st ","http rError  new quError  new st ","http Net HTTP  const_get new uest ","rOAuth2 HTTPError  new q sOAuth2 HTTPError  new t_form_data ","rOAuth2 AccessDenied  new q sOAuth2 AccessDenied  new t_form_data ","rOAuth2 Conflict  new q sOAuth2 Conflict  new t_form_data ","rError  new q sError  new t_form_data ","Net HTTP  const_get new  set_form_data ","vOAuth2 HTTPError  new rb == ","vOAuth2 AccessDenied  new rb == ","vOAuth2 Conflict  new rb == ","vError  new rb == ","NOAuth2 HTTPError  new t HTTP  const_gOAuth2 HTTPError  new t nOAuth2 HTTPError  new w ","NOAuth2 AccessDenied  new t HTTP  const_gOAuth2 AccessDenied  new t nOAuth2 AccessDenied  new w ","NOAuth2 Conflict  new t HTTP  const_gOAuth2 Conflict  new t nOAuth2 Conflict  new w ","NError  new t HTTP  const_gError  new t nError  new w ","NOAuth2 HTTPError  new t HTTP  const_gOAuth2 HTTPError  new t ","NOAuth2 AccessDenied  new t HTTP  const_gOAuth2 AccessDenied  new t ","NOAuth2 Conflict  new t HTTP  const_gOAuth2 Conflict  new t ","NError  new t HTTP  const_gError  new t ","vOAuth2 HTTPError  new rb to_s capitalizOAuth2 HTTPError  new  ","vOAuth2 AccessDenied  new rb to_s capitalizOAuth2 AccessDenied  new  ","vOAuth2 Conflict  new rb to_s capitalizOAuth2 Conflict  new  ","vError  new rb to_s capitalizError  new  ","vOAuth2 HTTPError  new rb to_s ","vOAuth2 AccessDenied  new rb to_s ","vOAuth2 Conflict  new rb to_s ","vError  new rb to_s ","uri quOAuth2 HTTPError  new ry ","uri quOAuth2 AccessDenied  new ry ","uri quOAuth2 Conflict  new ry ","uri quError  new ry ","URI  parse  query ","uri quOAuth2 HTTPError  new ry_hash= ","uri quOAuth2 AccessDenied  new ry_hash= ","uri quOAuth2 Conflict  new ry_hash= ","uri quError  new ry_hash= ","URI  parse  query_hash= ","uri quOAuth2 HTTPError  new ry_hash mOAuth2 HTTPError  new rgOAuth2 HTTPError  new  ","uri quOAuth2 AccessDenied  new ry_hash mOAuth2 AccessDenied  new rgOAuth2 AccessDenied  new  ","uri quOAuth2 Conflict  new ry_hash mOAuth2 Conflict  new rgOAuth2 Conflict  new  ","uri quError  new ry_hash mError  new rgError  new  ","URI  parse  query_hash merge ","uri quOAuth2 HTTPError  new ry_hash ","uri quOAuth2 AccessDenied  new ry_hash ","uri quOAuth2 Conflict  new ry_hash ","uri quError  new ry_hash ","URI  parse  query_hash ","nOAuth2 HTTPError  new t start ","nOAuth2 AccessDenied  new t start ","nOAuth2 Conflict  new t start ","nError  new t start ","Net HTTP  new  start ","nOAuth2 HTTPError  new t usOAuth2 HTTPError  new _ssl= ","nOAuth2 AccessDenied  new t usOAuth2 AccessDenied  new _ssl= ","nOAuth2 Conflict  new t usOAuth2 Conflict  new _ssl= ","nError  new t usError  new _ssl= ","Net HTTP  new  use_ssl= ","uri schOAuth2 HTTPError  new mOAuth2 HTTPError  new  == ","uri schOAuth2 AccessDenied  new mOAuth2 AccessDenied  new  == ","uri schOAuth2 Conflict  new mOAuth2 Conflict  new  == ","uri schError  new mError  new  == ","URI  parse  scheme == ","uri schOAuth2 HTTPError  new mOAuth2 HTTPError  new  ","uri schOAuth2 AccessDenied  new mOAuth2 AccessDenied  new  ","uri schOAuth2 Conflict  new mOAuth2 Conflict  new  ","uri schError  new mError  new  ","URI  parse  scheme ","NOAuth2 HTTPError  new t HTTP  nOAuth2 HTTPError  new w ","NOAuth2 AccessDenied  new t HTTP  nOAuth2 AccessDenied  new w ","NOAuth2 Conflict  new t HTTP  nOAuth2 Conflict  new w ","NError  new t HTTP  nError  new w ","URI  parse  port ","URI  parse  host ","(sOAuth2 HTTPError  new nd\n  (sOAuth2 HTTPError  new nd\n    (lvar :uri) :path) :+\n  (lvar :url_or_path)) gsub ","(sOAuth2 AccessDenied  new nd\n  (sOAuth2 AccessDenied  new nd\n    (lvar :uri) :path) :+\n  (lvar :url_or_path)) gsub ","(sOAuth2 Conflict  new nd\n  (sOAuth2 Conflict  new nd\n    (lvar :uri) :path) :+\n  (lvar :url_or_path)) gsub ","(sError  new nd\n  (sError  new nd\n    (lvar :uri) :path) :+\n  (lvar :url_or_path)) gsub ","(send\n  (send\n    (lvar :uri) :(send\n  (send\n    (lvar :uri) :path) :+\n  (lvar :url_or_path)) gsub ) :+\n  (lvar :url_or_(send\n  (send\n    (lvar :uri) :path) :+\n  (lvar :url_or_path)) gsub )) gsub ","(send\n  (send\n    (lvar :uri) :uri path ) :+\n  (lvar :url_or_uri path )) gsub ","(send\n  (send\n    (lvar :URI  parse ) :path) :+\n  (lvar :url_or_path)) gsub ","(send\n  (send\n    (lvar :uri) :path) :+\n  (lvar : connection build_url to_s _or_path)) gsub ","uri (send\n  (send\n    (lvar :uri) :path) :+\n  (lvar :url_or_path)) gsub  + ","uri uri path  + ","URI  parse  path + ","uri (send\n  (send\n    (lvar :uri) :path) :+\n  (lvar :url_or_path)) gsub  ","uri uri path  ","URI  parse  path ","URI  parsOAuth2 HTTPError  new  ","URI  parsOAuth2 AccessDenied  new  ","URI  parsOAuth2 Conflict  new  ","URI  parsError  new  "," sitOAuth2 HTTPError  new  "," sitOAuth2 AccessDenied  new  "," sitOAuth2 Conflict  new  "," sitError  new  ","url_or_(send\n  (send\n    (lvar :uri) :path) :+\n  (lvar :url_or_path)) gsub  [] == ","url_or_uri path  [] == "," connection build_url to_s _or_path [] == ","url_or_(send\n  (send\n    (lvar :uri) :path) :+\n  (lvar :url_or_path)) gsub  [] ","url_or_uri path  [] "," connection build_url to_s _or_path [] ","rOAuth2 HTTPError  new sp status ","rOAuth2 AccessDenied  new sp status ","rOAuth2 Conflict  new sp status ","rError  new sp status "," connection run_request  status ","ROAuth2 HTTPError  new sponsOAuth2 HTTPError  new String  nOAuth2 HTTPError  new w ","ROAuth2 AccessDenied  new sponsOAuth2 AccessDenied  new String  nOAuth2 AccessDenied  new w ","ROAuth2 Conflict  new sponsOAuth2 Conflict  new String  nOAuth2 Conflict  new w ","RError  new sponsError  new String  nError  new w "," connOAuth2 HTTPError  new ction run_rOAuth2 HTTPError  new quOAuth2 HTTPError  new st "," connOAuth2 AccessDenied  new ction run_rOAuth2 AccessDenied  new quOAuth2 AccessDenied  new st "," connOAuth2 Conflict  new ction run_rOAuth2 Conflict  new quOAuth2 Conflict  new st "," connError  new ction run_rError  new quError  new st "," connection run_Net HTTP  const_get new uest "," connOAuth2 HTTPError  new ction "," connOAuth2 AccessDenied  new ction "," connOAuth2 Conflict  new ction "," connError  new ction ","rOAuth2 HTTPError  new q params updatOAuth2 HTTPError  new  ","rOAuth2 AccessDenied  new q params updatOAuth2 AccessDenied  new  ","rOAuth2 Conflict  new q params updatOAuth2 Conflict  new  ","rError  new q params updatError  new  ","Net HTTP  const_get new  params update ","rOAuth2 HTTPError  new q params ","rOAuth2 AccessDenied  new q params ","rOAuth2 Conflict  new q params ","rError  new q params ","Net HTTP  const_get new  params ","ROAuth2 HTTPError  new sponsOAuth2 HTTPError  new Hash  nOAuth2 HTTPError  new w ","ROAuth2 AccessDenied  new sponsOAuth2 AccessDenied  new Hash  nOAuth2 AccessDenied  new w ","ROAuth2 Conflict  new sponsOAuth2 Conflict  new Hash  nOAuth2 Conflict  new w ","RError  new sponsError  new Hash  nError  new w ","rOAuth2 HTTPError  new sp hOAuth2 HTTPError  new adOAuth2 HTTPError  new rs [] == ","rOAuth2 AccessDenied  new sp hOAuth2 AccessDenied  new adOAuth2 AccessDenied  new rs [] == ","rOAuth2 Conflict  new sp hOAuth2 Conflict  new adOAuth2 Conflict  new rs [] == ","rError  new sp hError  new adError  new rs [] == "," connection run_request  headers [] == ","rOAuth2 HTTPError  new sp hOAuth2 HTTPError  new adOAuth2 HTTPError  new rs [] ","rOAuth2 AccessDenied  new sp hOAuth2 AccessDenied  new adOAuth2 AccessDenied  new rs [] ","rOAuth2 Conflict  new sp hOAuth2 Conflict  new adOAuth2 Conflict  new rs [] ","rError  new sp hError  new adError  new rs [] "," connection run_request  headers [] ","rOAuth2 HTTPError  new sp hOAuth2 HTTPError  new adOAuth2 HTTPError  new rs ","rOAuth2 AccessDenied  new sp hOAuth2 AccessDenied  new adOAuth2 AccessDenied  new rs ","rOAuth2 Conflict  new sp hOAuth2 Conflict  new adOAuth2 Conflict  new rs ","rError  new sp hError  new adError  new rs "," connection run_request  headers ","rOAuth2 HTTPError  new sp hOAuth2 HTTPError  new adOAuth2 HTTPError  new rs [] includOAuth2 HTTPError  new ? ","rOAuth2 AccessDenied  new sp hOAuth2 AccessDenied  new adOAuth2 AccessDenied  new rs [] includOAuth2 AccessDenied  new ? ","rOAuth2 Conflict  new sp hOAuth2 Conflict  new adOAuth2 Conflict  new rs [] includOAuth2 Conflict  new ? ","rError  new sp hError  new adError  new rs [] includError  new ? "," connection run_request  headers [] include? ","rOAuth2 HTTPError  new sp body ","rOAuth2 AccessDenied  new sp body ","rOAuth2 Conflict  new sp body ","rError  new sp body "," connection run_request  body ","ROAuth2 HTTPError  new sponsOAuth2 HTTPError  new ObjOAuth2 HTTPError  new ct  from ","ROAuth2 AccessDenied  new sponsOAuth2 AccessDenied  new ObjOAuth2 AccessDenied  new ct  from ","ROAuth2 Conflict  new sponsOAuth2 Conflict  new ObjOAuth2 Conflict  new ct  from ","RError  new sponsError  new ObjError  new ct  from "," rOAuth2 HTTPError  new sponsOAuth2 HTTPError  new _for "," rOAuth2 AccessDenied  new sponsOAuth2 AccessDenied  new _for "," rOAuth2 Conflict  new sponsOAuth2 Conflict  new _for "," rError  new sponsError  new _for "," http request _for "," Response  new _for ","  execute_request _for ","  connection run_request onse_for "," raisOAuth2 HTTPError  new _OAuth2 HTTPError  new rrors "," raisOAuth2 AccessDenied  new _OAuth2 AccessDenied  new rrors "," raisOAuth2 Conflict  new _OAuth2 Conflict  new rrors "," raisError  new _Error  new rrors "," raise_Error  new s ","OAuth2 Conflict  nOAuth2 HTTPError  new w ","OAuth2 Conflict  nOAuth2 AccessDenied  new w ","OAuth2 Conflict  nOAuth2 Conflict  new w ","OAuth2 Conflict  nError  new w "," rOAuth2 HTTPError  new quOAuth2 HTTPError  new st "," rOAuth2 AccessDenied  new quOAuth2 AccessDenied  new st "," rOAuth2 Conflict  new quOAuth2 Conflict  new st "," rError  new quError  new st "," Net HTTP  const_get new uest ","rOAuth2 HTTPError  new sponsOAuth2 HTTPError  new  status ","rOAuth2 AccessDenied  new sponsOAuth2 AccessDenied  new  status ","rOAuth2 Conflict  new sponsOAuth2 Conflict  new  status ","rError  new sponsError  new  status ","http request  status ","Response  new  status "," execute_request  status "," connection run_request onse status ","Error  nOAuth2 HTTPError  new w ","Error  nOAuth2 AccessDenied  new w ","Error  nOAuth2 Conflict  new w ","Error  nError  new w ","rOAuth2 HTTPError  new sponsOAuth2 HTTPError  new  OAuth2 HTTPError  new rror= ","rOAuth2 AccessDenied  new sponsOAuth2 AccessDenied  new  OAuth2 AccessDenied  new rror= ","rOAuth2 Conflict  new sponsOAuth2 Conflict  new  OAuth2 Conflict  new rror= ","rError  new sponsError  new  Error  new rror= ","http request  error= ","Response  new  error= "," execute_request  error= "," connection run_request onse error= ","response Error  new = ","rOAuth2 HTTPError  new sponsOAuth2 HTTPError  new  hOAuth2 HTTPError  new adOAuth2 HTTPError  new rs [] ","rOAuth2 AccessDenied  new sponsOAuth2 AccessDenied  new  hOAuth2 AccessDenied  new adOAuth2 AccessDenied  new rs [] ","rOAuth2 Conflict  new sponsOAuth2 Conflict  new  hOAuth2 Conflict  new adOAuth2 Conflict  new rs [] ","rError  new sponsError  new  hError  new adError  new rs [] ","http request  headers [] ","Response  new  headers [] "," execute_request  headers [] "," connection run_request onse headers [] ","rOAuth2 HTTPError  new sponsOAuth2 HTTPError  new  hOAuth2 HTTPError  new adOAuth2 HTTPError  new rs ","rOAuth2 AccessDenied  new sponsOAuth2 AccessDenied  new  hOAuth2 AccessDenied  new adOAuth2 AccessDenied  new rs ","rOAuth2 Conflict  new sponsOAuth2 Conflict  new  hOAuth2 Conflict  new adOAuth2 Conflict  new rs ","rError  new sponsError  new  hError  new adError  new rs ","http request  headers ","Response  new  headers "," execute_request  headers "," connection run_request onse headers ","opts dOAuth2 HTTPError  new lOAuth2 HTTPError  new tOAuth2 HTTPError  new  ","opts dOAuth2 AccessDenied  new lOAuth2 AccessDenied  new tOAuth2 AccessDenied  new  ","opts dOAuth2 Conflict  new lOAuth2 Conflict  new tOAuth2 Conflict  new  ","opts dError  new lError  new tError  new  ","rOAuth2 HTTPError  new sponsOAuth2 HTTPError  new  status == ","rOAuth2 AccessDenied  new sponsOAuth2 AccessDenied  new  status == ","rOAuth2 Conflict  new sponsOAuth2 Conflict  new  status == ","rError  new sponsError  new  status == ","http request  status == ","Response  new  status == "," execute_request  status == "," connection run_request onse status == ","ROAuth2 HTTPError  new sponsOAuth2 HTTPError  new   nOAuth2 HTTPError  new w ","ROAuth2 AccessDenied  new sponsOAuth2 AccessDenied  new   nOAuth2 AccessDenied  new w ","ROAuth2 Conflict  new sponsOAuth2 Conflict  new   nOAuth2 Conflict  new w ","RError  new sponsError  new   nError  new w "," block_givOAuth2 HTTPError  new n? "," block_givOAuth2 AccessDenied  new n? "," block_givOAuth2 Conflict  new n? "," block_givError  new n? "," connOAuth2 HTTPError  new ction build_url to_s "," connOAuth2 AccessDenied  new ction build_url to_s "," connOAuth2 Conflict  new ction build_url to_s "," connError  new ction build_url to_s "," connection build_ connection build_url to_s  to_s "," connOAuth2 HTTPError  new ction build_url "," connOAuth2 AccessDenied  new ction build_url "," connOAuth2 Conflict  new ction build_url "," connError  new ction build_url "," connection build_ connection build_url to_s  ","opts fOAuth2 HTTPError  new tch ","opts fOAuth2 AccessDenied  new tch ","opts fOAuth2 Conflict  new tch ","opts fError  new tch "," connOAuth2 HTTPError  new ction rOAuth2 HTTPError  new sponsOAuth2 HTTPError  new  "," connOAuth2 AccessDenied  new ction rOAuth2 AccessDenied  new sponsOAuth2 AccessDenied  new  "," connOAuth2 Conflict  new ction rOAuth2 Conflict  new sponsOAuth2 Conflict  new  "," connError  new ction rError  new sponsError  new  "," connection http request  "," connection Response  new  "," connection  execute_request  "," connection  connection run_request onse "," LoggOAuth2 HTTPError  new r  nOAuth2 HTTPError  new w "," LoggOAuth2 AccessDenied  new r  nOAuth2 AccessDenied  new w "," LoggOAuth2 Conflict  new r  nOAuth2 Conflict  new w "," LoggError  new r  nError  new w ","rOAuth2 HTTPError  new sponsOAuth2 HTTPError  new  rOAuth2 HTTPError  new sponsOAuth2 HTTPError  new  OAuth2 HTTPError  new nv url mOAuth2 HTTPError  new rgOAuth2 HTTPError  new  ","rOAuth2 AccessDenied  new sponsOAuth2 AccessDenied  new  rOAuth2 AccessDenied  new sponsOAuth2 AccessDenied  new  OAuth2 AccessDenied  new nv url mOAuth2 AccessDenied  new rgOAuth2 AccessDenied  new  ","rOAuth2 Conflict  new sponsOAuth2 Conflict  new  rOAuth2 Conflict  new sponsOAuth2 Conflict  new  OAuth2 Conflict  new nv url mOAuth2 Conflict  new rgOAuth2 Conflict  new  ","rError  new sponsError  new  rError  new sponsError  new  Error  new nv url mError  new rgError  new  ","http request  http request  env url merge ","Response  new  Response  new  env url merge "," execute_request   execute_request  env url merge "," connection run_request onse  connection run_request onse env url merge ","response response env  connection build_url to_s  merge ","rOAuth2 HTTPError  new sponsOAuth2 HTTPError  new  rOAuth2 HTTPError  new sponsOAuth2 HTTPError  new  OAuth2 HTTPError  new nv url ","rOAuth2 AccessDenied  new sponsOAuth2 AccessDenied  new  rOAuth2 AccessDenied  new sponsOAuth2 AccessDenied  new  OAuth2 AccessDenied  new nv url ","rOAuth2 Conflict  new sponsOAuth2 Conflict  new  rOAuth2 Conflict  new sponsOAuth2 Conflict  new  OAuth2 Conflict  new nv url ","rError  new sponsError  new  rError  new sponsError  new  Error  new nv url ","http request  http request  env url ","Response  new  Response  new  env url "," execute_request   execute_request  env url "," connection run_request onse  connection run_request onse env url ","response response env  connection build_url to_s  ","rOAuth2 HTTPError  new sponsOAuth2 HTTPError  new  rOAuth2 HTTPError  new sponsOAuth2 HTTPError  new  OAuth2 HTTPError  new nv ","rOAuth2 AccessDenied  new sponsOAuth2 AccessDenied  new  rOAuth2 AccessDenied  new sponsOAuth2 AccessDenied  new  OAuth2 AccessDenied  new nv ","rOAuth2 Conflict  new sponsOAuth2 Conflict  new  rOAuth2 Conflict  new sponsOAuth2 Conflict  new  OAuth2 Conflict  new nv ","rError  new sponsError  new  rError  new sponsError  new  Error  new nv ","http request  http request  env ","Response  new  Response  new  env "," execute_request   execute_request  env "," connection run_request onse  connection run_request onse env ","rOAuth2 HTTPError  new sponsOAuth2 HTTPError  new  rOAuth2 HTTPError  new sponsOAuth2 HTTPError  new  ","rOAuth2 AccessDenied  new sponsOAuth2 AccessDenied  new  rOAuth2 AccessDenied  new sponsOAuth2 AccessDenied  new  ","rOAuth2 Conflict  new sponsOAuth2 Conflict  new  rOAuth2 Conflict  new sponsOAuth2 Conflict  new  ","rError  new sponsError  new  rError  new sponsError  new  ","http request  http request  ","Response  new  Response  new  "," execute_request   execute_request  "," connection run_request onse  connection run_request onse "," OAuth2 HTTPError  new xOAuth2 HTTPError  new cutOAuth2 HTTPError  new _rOAuth2 HTTPError  new quOAuth2 HTTPError  new st "," OAuth2 AccessDenied  new xOAuth2 AccessDenied  new cutOAuth2 AccessDenied  new _rOAuth2 AccessDenied  new quOAuth2 AccessDenied  new st "," OAuth2 Conflict  new xOAuth2 Conflict  new cutOAuth2 Conflict  new _rOAuth2 Conflict  new quOAuth2 Conflict  new st "," Error  new xError  new cutError  new _rError  new quError  new st "," execute_Net HTTP  const_get new uest "]}," OAuth2 Client access_token_url":{"type":"method","name":"access_token_url","children":[],"call":["uri to_s ","uri path= "," options [] "," options ","URI  parse "," site "," connection build_url to_s "," connection build_url "," connection ","URI  parse  to_s ","URI  parse  path= "]}," OAuth2 Client authorize_url":{"type":"method","name":"authorize_url","children":[],"call":["uri to_s ","uri path= "," options [] "," options ","URI  parse "," site "," connection build_url to_s "," connection build_url "," connection ","(or\n  (lvar :params)\n  (hash)) merge "," redirection_params ","URI  parse  to_s ","URI  parse  path= ","(or\n  (lvar :(or\n  (lvar :params)\n  (hash)) merge )\n  (hash)) merge "," redirection_(or\n  (lvar :params)\n  (hash)) merge  "]}," OAuth2 Client initialize":{"type":"method","name":"initialize","children":[],"call":[" options= "," site= ","opts delete ","opts [] "," secret= "," id= ","b adapter "," connection build "," connection ","adapter != "," connection= ","Faraday Connection  new "," site "," json= "," class default_connection_adapter "," class ","(lvar :adapter) flatten "," raise_errors= ","(send\n  (send\n    (send\n      (self) :options) :delete\n    (sym :raise_errors)) :==\n  (false)) ! "," options delete == "," options delete "," options "," options [] ","opts dup "," token_method= ","@options [] []= ","@options [] ","(pair\n  (sym :authorize_url)\n  (str \"/oauth/authorize\")) merge ","_opts delete ","options dup ","(pair\n  (sym :authorize_url)\n  (str \"oauth/authorize\")) merge "," Logger  new "," warn ","options dup  delete ","options dup  [] ","b opts delete  ","b  options delete  ","opts delete  != "," options delete  != "," class default_connection_opts delete  "," class default_connection_ options delete  ","(lvar :opts delete ) flatten ","(lvar : options delete ) flatten ","options dup  dup ","(pair\n  (sym :authorize_url)\n  (str \"/oauth/authorize\")) merge  [] []= ","(pair\n  (sym :authorize_url)\n  (str \"oauth/authorize\")) merge  [] []= ","(pair\n  (sym :authorize_url)\n  (str \"/oauth/authorize\")) merge  [] ","(pair\n  (sym :authorize_url)\n  (str \"oauth/authorize\")) merge  [] ","opts dup  delete ","_options dup  delete "]}," OAuth2 AccessToken delete":{"type":"method","name":"delete","children":[],"call":[" request "]}," OAuth2 AccessToken put":{"type":"method","name":"put","children":[],"call":[" request "]}," OAuth2 AccessToken post":{"type":"method","name":"post","children":[],"call":[" request "]}," OAuth2 AccessToken get":{"type":"method","name":"get","children":[],"call":[" request "]}," OAuth2 AccessToken request":{"type":"method","name":"request","children":[],"call":["@client request ","params merge ","headers merge "," token_param ","params instance_of? "," set_token "," token= "," configure_authentication! ","params merge  merge ","headers merge  merge ","params merge  instance_of? "]}," OAuth2 AccessToken initialize":{"type":"method","name":"initialize","children":[],"call":["Time  now + ","Time  now ","expires_in to_i ","expires_in == ","expires_in nil? ","refresh_token to_s ","token to_s ","opts delete ","Time  now to_i + ","Time  now to_i ","@expires_in to_i "," instance_variable_set ","arg to_s ","(sym :refresh_token) each ","@expires_at to_i ","opts dup "," convert_expires_at ","@expires_latency to_i "," raise ","Error  new ","@token empty? ","@token nil? ","@client options [] ","@client options "," warn ","@refresh_token empty? ","@refresh_token nil? ","opts dup  delete ","expires_in to_i  to_i ","Time  now +  to_i ","opts dup  dup ","token to_s  empty? ","token to_s  nil? ","refresh_token to_s  empty? ","refresh_token to_s  nil? "]}," OAuth2 Strategy WebServer get_access_token":{"type":"method","name":"get_access_token","children":[],"call":["OAuth2 AccessToken  new ","params [] ","Rack Utils  parse_query ","params is_a? ","MultiJson  decode ","@client request "," access_token_params ","@client access_token_url ","response is_a? ","params delete "," parse_response ","@client token_method ","Rack Utils  parse_query  [] ","Rack Utils  parse_query  is_a? "," params [] _token_params "," params delete _token_params "," access_token_Rack Utils  parse_query  "," access_params [] _params ","@client params [] _token_url ","@client params delete _token_url ","@client access_params [] _url ","@client request  is_a? ","Rack Utils  parse_query  delete "," parse_@client request  ","@client params [] _method "]}," ResponseString headers":{"type":"method","name":"headers","children":[],"call":[" response headers "," response "]}," ResponseString status":{"type":"method","name":"status","children":[],"call":[" response status "," response "]}," ResponseString initialize":{"type":"method","name":"initialize","children":[],"call":[" response= ","response body "]}," OAuth2 Client default_connection_adapter=":{"type":"method","name":"default_connection_adapter=","children":[],"call":["Faraday  default_adapter= "," warn "]}," OAuth2 Client default_connection_adapter":{"type":"method","name":"default_connection_adapter","children":[],"call":["Faraday  default_adapter "," warn "]}," OAuth2 AccessToken expires?":{"type":"method","name":"expires?","children":[],"call":["@expires_in ! ! ","@expires_in ! ","@expires_at ! ! ","@expires_at ! "]}," ResponseHash headers":{"type":"method","name":"headers","children":[],"call":[" response headers "," response "]}," ResponseHash status":{"type":"method","name":"status","children":[],"call":[" response status "," response "]}," ResponseHash initialize":{"type":"method","name":"initialize","children":[],"call":[" []= ","body [] ","body keys each ","body keys ","MultiJson  decode ","response body "," response= ","MultiJson  decode  [] ","MultiJson  decode  keys each ","MultiJson  decode  keys ","response MultiJson  decode  "]}," OAuth2 Client json?":{"type":"method","name":"json?","children":[],"call":["@json ! ! ","@json ! "]}," OAuth2 ResponseString initialize":{"type":"method","name":"initialize","children":[],"call":[" response= ","response body ","response body to_s "]}," OAuth2 ResponseArray initialize":{"type":"method","name":"initialize","children":[],"call":[" response= "]}," OAuth2 ResponseHash initialize":{"type":"method","name":"initialize","children":[],"call":[" []= ","hash [] ","hash keys each ","hash keys "," response= "]}," OAuth2 ResponseObject status":{"type":"method","name":"status","children":[],"call":[" response status "," response "]}," OAuth2 ResponseObject headers":{"type":"method","name":"headers","children":[],"call":[" response headers "," response "]}," OAuth2 ResponseObject included":{"type":"method","name":"included","children":[],"call":[]}," OAuth2 ResponseObject from":{"type":"method","name":"from","children":[],"call":[]}," OAuth2 AccessToken []":{"type":"method","name":"[]","children":[],"call":["@params [] "]}," OAuth2 AccessToken expired?":{"type":"method","name":"expired?","children":[],"call":[" expires_at < ","Time  now "," expires_at "," expires? ","Time  now to_i "," expires_at <= "]}," OAuth2 Strategy Password access_token_params":{"type":"method","name":"access_token_params","children":[],"call":["(lvar :options) merge "]}," OAuth2 Strategy Password get_access_token":{"type":"method","name":"get_access_token","children":[],"call":["OAuth2 AccessToken  new ","params delete ","Rack Utils  parse_query ","params is_a? ","MultiJson  decode ","@client request "," access_token_params ","@client access_token_url ","Rack Utils  parse_query  delete ","Rack Utils  parse_query  is_a? "," params delete _token_params "," access_token_Rack Utils  parse_query  ","@client params delete _token_url "]}," OAuth2 Strategy Password authorize_url":{"type":"method","name":"authorize_url","children":[],"call":[" raise "," fail "]}," OAuth2 Client response_for":{"type":"method","name":"response_for","children":[],"call":["ResponseString  new ","ResponseObject  from "," json? "]}," OAuth2 Client password":{"type":"method","name":"password","children":[],"call":["OAuth2 Strategy Password  new "]}," OAuth2 Strategy WebServer parse_response":{"type":"method","name":"parse_response","children":[],"call":["OAuth2 AccessToken  new ","params delete ","Rack Utils  parse_query ","params is_a? ","MultiJson  decode ","response is_a? ","Rack Utils  parse_query  delete ","Rack Utils  parse_query  is_a? "]}," OAuth2 Strategy WebServer refresh_token_params":{"type":"method","name":"refresh_token_params","children":[],"call":["(lvar :options) merge "]}," OAuth2 Strategy WebServer refresh_access_token":{"type":"method","name":"refresh_access_token","children":[],"call":[" parse_response ","@client request "," refresh_token_params ","@client access_token_url ","@client token_method "," parse_@client request  "]}," OAuth2 Strategy Base default_params":{"type":"method","name":"default_params","children":[],"call":["(pair\n  (str \"client_id\")\n  (send\n    (ivar :@client) :id)) merge ","@client secret ","@client id "]}," OAuth2 Strategy Base refresh_token_params":{"type":"method","name":"refresh_token_params","children":[],"call":[" default_params "]}," OAuth2 Strategy Password get_token":{"type":"method","name":"get_token","children":[],"call":["@client get_token ","(pair\n  (str \"grant_type\")\n  (str \"password\")) merge merge ","(pair\n  (str \"grant_type\")\n  (str \"password\")) merge "," client_params "," client_(pair\n  (str \"grant_type\")\n  (str \"password\")) merge merge  "," client_(pair\n  (str \"grant_type\")\n  (str \"password\")) merge  "]}," OAuth2 Strategy Base client_params":{"type":"method","name":"client_params","children":[],"call":["@client secret ","@client id "]}," OAuth2 Strategy AuthCode get_token":{"type":"method","name":"get_token","children":[],"call":["@client get_token ","(pair\n  (str \"grant_type\")\n  (str \"authorization_code\")) merge merge ","(pair\n  (str \"grant_type\")\n  (str \"authorization_code\")) merge "," client_params ","@client redirection_params ","params_dup []= ","params_dup delete ","key to_s ","key is_a? ","params each_key ","params dup "," client_(pair\n  (str \"grant_type\")\n  (str \"authorization_code\")) merge merge  ","@client redirection_(pair\n  (str \"grant_type\")\n  (str \"authorization_code\")) merge merge  ","(pair\n  (str \"grant_type\")\n  (str \"authorization_code\")) merge merge _dup []= ","params dup  []= ","(pair\n  (str \"grant_type\")\n  (str \"authorization_code\")) merge merge _dup delete ","params dup  delete ","(pair\n  (str \"grant_type\")\n  (str \"authorization_code\")) merge merge  each_key ","(pair\n  (str \"grant_type\")\n  (str \"authorization_code\")) merge merge  dup "]}," OAuth2 Strategy AuthCode authorize_url":{"type":"method","name":"authorize_url","children":[],"call":["@client authorize_url "," authorize_params merge "," authorize_params "," assert_valid_params "]}," OAuth2 Strategy AuthCode authorize_params":{"type":"method","name":"authorize_params","children":[],"call":["params merge ","@client id "]}," OAuth2 Response parser":{"type":"method","name":"parser","children":[],"call":["CONTENT_TYPES  [] "," content_type "," options [] to_sym "," options [] "," options ","PARSERS  key? ","@@content_types [] ","@@parsers key? ","@@parsers [] "," options [] respond_to? ","@ options [] s key? ","@ options [] s [] "]}," OAuth2 Response content_type":{"type":"method","name":"content_type","children":[],"call":["(or\n  (send\n    (send\n      (begin\n        (or\n          (send\n            (send\n              (send\n                (send\n                  (send nil :response) :headers) :values_at\n                (str \"content-type\")\n                (str \"Content-Type\")) :compact) :first)\n          (str \"\"))) :split\n      (str \";\")) :first)\n  (str \"\")) strip ","(or\n  (send\n    (send\n      (send\n        (send\n          (send nil :response) :headers) :values_at\n        (str \"content-type\")\n        (str \"Content-Type\")) :compact) :first)\n  (str \"\")) split first ","(or\n  (send\n    (send\n      (send\n        (send\n          (send nil :response) :headers) :values_at\n        (str \"content-type\")\n        (str \"Content-Type\")) :compact) :first)\n  (str \"\")) split "," response headers values_at compact first "," response headers values_at compact "," response headers values_at "," response headers "," response ","(or\n  (send\n    (send\n      (begin\n        (or\n          (send\n            (send\n              (send\n                (send\n                  (send nil :response) :headers) :values_at\n                (str \"content-type\")\n                (str \"Content-Type\")) :compact) :first)\n          (str \"\"))) :split\n      (str \";\")) :first)\n  (str \"\")) strip downcase "]}," OAuth2 Response parsed":{"type":"method","name":"parsed","children":[],"call":["PARSERS  [] call "," body ","PARSERS  [] "," parser ","PARSERS  key? ","@@parsers [] call ","@@parsers [] ","@@parsers key? ","OAuth2 SnakyHash  new ","@parsed is_a? "," parser call "," response "," parser arity "," parser respond_to? "," options [] "," options ","SnakyHash StringKeyed  new ","OAuth2 SnakyHash  new  is_a? ","SnakyHash StringKeyed  new  is_a? "]}," OAuth2 Response body":{"type":"method","name":"body","children":[],"call":[" response body "," response "]}," OAuth2 Response status":{"type":"method","name":"status","children":[],"call":[" response status "," response "]}," OAuth2 Response headers":{"type":"method","name":"headers","children":[],"call":[" response headers "," response "]}," OAuth2 Response initialize":{"type":"method","name":"initialize","children":[],"call":["(pair\n  (sym :parse)\n  (sym :automatic)) merge ","(pair\n  (sym :parse)\n  (lvar :parse)) merge "]}," OAuth2 Response register_parser":{"type":"method","name":"register_parser","children":[],"call":[]}," OAuth2 Error initialize":{"type":"method","name":"initialize","children":[],"call":["response parsed [] ","response parsed ","response parsed is_a? ","response error= ","message join ","message << ","response body "," error_message "," parse_error_description ","response respond_to? ","response [] ","response is_a? "]}," OAuth2 Client auth_code":{"type":"method","name":"auth_code","children":[],"call":["OAuth2 Strategy AuthCode  new "]}," OAuth2 Client get_token":{"type":"method","name":"get_token","children":[],"call":["AccessToken  from_hash ","response parsed "," raise ","Error  new ","response parsed [] ","response parsed is_a? "," request "," token_url "," options [] "," options ","opts []= "," options [] == ","params delete ","response parsed merge ","(and\n  (send\n    (send\n      (lvar :response) :parsed) :is_a?\n    (const nil :Hash))\n  (send\n    (send\n      (lvar :response) :parsed) :[]\n    (str \"access_token\"))) ! ","opts [] merge! ","opts [] ","access_token_class from_hash "," fail ","Authenticator  new apply ","Authenticator  new "," secret "," id ","response_contains_token ! "," build_access_token ","opts [] merge "," authenticator apply "," authenticator ","Hash  [] ","key to_sym ","RESERVED_PARAM_KEYS  include? ","params map ","access_token ! "," parse_response "," parse_response_with_legacy_extract ","http_method == ","(send\n  (lvar :params) :map) to_h ","request_opts [] merge! ","request_opts [] ","request_opts []= "," warn ","params fetch ","Response DEFAULT_OPTIONS  [] ","params key? "," parse_response_legacy "," http_method ","params to_json ","headers [] == ","headers [] "," parse_snaky_params_headers "," request  parsed ","response Response DEFAULT_OPTIONS  [] d ","response params delete d "," request  parsed [] ","response Response DEFAULT_OPTIONS  [] d [] ","response params delete d [] "," request  parsed is_a? ","response Response DEFAULT_OPTIONS  [] d is_a? ","response params delete d is_a? ","Authenticator  new apply  delete "," authenticator apply  delete ","Hash  []  delete ","(send\n  (lvar :params) :map) to_h  delete "," request  parsed merge ","response Response DEFAULT_OPTIONS  [] d merge ","response params delete d merge ","(and\n  (send\n    (send\n      (lvar : request ) :parsed) :is_a?\n    (const nil :Hash))\n  (send\n    (send\n      (lvar : request ) :parsed) :[]\n    (str \"access_token\"))) ! ","(and\n  (send\n    (send\n      (lvar :response) :Response DEFAULT_OPTIONS  [] d) :is_a?\n    (const nil :Hash))\n  (send\n    (send\n      (lvar :response) :Response DEFAULT_OPTIONS  [] d) :[]\n    (str \"access_token\"))) ! ","(and\n  (send\n    (send\n      (lvar :response) :params delete d) :is_a?\n    (const nil :Hash))\n  (send\n    (send\n      (lvar :response) :params delete d) :[]\n    (str \"access_token\"))) ! "," request _contains_token ! ","Authenticator  new apply  map "," authenticator apply  map ","Hash  []  map ","(send\n  (lvar :params) :map) to_h  map "," parse_ request  "," Response DEFAULT_OPTIONS  [] _response "," params delete _response "," parse_ request _with_legacy_extract "," Response DEFAULT_OPTIONS  [] _response_with_legacy_extract "," params delete _response_with_legacy_extract "," options []  == ","(send\n  (lvar :Authenticator  new apply ) :map) to_h ","(send\n  (lvar : authenticator apply ) :map) to_h ","(send\n  (lvar :Hash  [] ) :map) to_h ","(send\n  (lvar :(send\n  (lvar :params) :map) to_h ) :map) to_h ","Authenticator  new apply  fetch "," authenticator apply  fetch ","Hash  []  fetch ","(send\n  (lvar :params) :map) to_h  fetch ","Authenticator  new apply  key? "," authenticator apply  key? ","Hash  []  key? ","(send\n  (lvar :params) :map) to_h  key? "," parse_ request _legacy "," Response DEFAULT_OPTIONS  [] _response_legacy "," params delete _response_legacy ","  options []  ","Authenticator  new apply  to_json "," authenticator apply  to_json ","Hash  []  to_json ","(send\n  (lvar :params) :map) to_h  to_json ","params delete  [] == ","params delete  [] "," parse_snaky_params_params delete  "," parse_snaky_Authenticator  new apply _headers "," parse_snaky_ authenticator apply _headers "," parse_snaky_Hash  [] _headers "," parse_snaky_(send\n  (lvar :params) :map) to_h _headers "," parse_Response DEFAULT_OPTIONS  [] _params_headers "," parse_params delete _params_headers "," Response DEFAULT_OPTIONS  [] _snaky_params_headers "," params delete _snaky_params_headers "]}," OAuth2 Client token_url":{"type":"method","name":"token_url","children":[],"call":[" connection build_url to_s "," connection build_url "," options [] "," options "," connection "]}," OAuth2 Client connection":{"type":"method","name":"connection","children":[],"call":[" options [] call "," options [] "," options ","conn build ","Faraday  new "," site ","builder adapter ","Faraday  default_adapter ","builder request "," oauth_debug_logging ","Faraday  new  build "]}," OAuth2 Client site=":{"type":"method","name":"site=","children":[],"call":[]}," OAuth2 AccessToken set_token":{"type":"method","name":"set_token","children":[],"call":[" raise "," options [] "," options ","opts [] << "," token ","opts [] ","opts [] []= ","opts [] is_a? "," options [] % ","opts [] merge! "," headers "]}," OAuth2 AccessToken refresh!":{"type":"method","name":"refresh!","children":[],"call":["new_token options= "," options ","@client get_token ","params merge! "," refresh_token ","@client secret ","@client id "," raise ","new_token refresh_token= ","new_token refresh_token "," fail ","params []= ","@client get_token  options= ","@client get_token  refresh_token= ","@client get_token  refresh_token "]}," OAuth2 AccessToken from_kvform":{"type":"method","name":"from_kvform","children":[],"call":[" from_hash ","Rack Utils  parse_query "]}," OAuth2 AccessToken from_hash":{"type":"method","name":"from_hash","children":[],"call":[" new ","hash delete ","hash dup ","fresh delete "," warn ","key inspect ","supported_keys length > ","supported_keys length ","supported_keys [] ","fresh keys & ","fresh keys ","TOKEN_KEY_LOOKUP  & "," extra_tokens_warning ","hash dup  delete ","hash dup  dup ","supported_keys []  inspect ","supported_supported_keys [] s length > ","fresh keys &  length > ","TOKEN_KEY_LOOKUP  &  length > ","supported_supported_keys [] s length ","fresh keys &  length ","TOKEN_KEY_LOOKUP  &  length ","supported_supported_keys [] s [] ","fresh keys &  [] ","TOKEN_KEY_LOOKUP  &  [] ","fresh supported_keys [] s & ","hash dup  keys & ","fresh supported_keys [] s ","hash dup  keys "," extra_fresh delete s_warning "]}," OAuth2 Strategy ClientCredentials get_token":{"type":"method","name":"get_token","children":[],"call":["@client get_token ","opts merge ","params merge! ","HTTPAuth Basic  pack_authorization "," client_params [] "," client_params ","opts delete == ","opts delete "," authorization ","params []= ","params merge ","params merge  merge! "," client_params merge  [] "," client_params merge  ","params merge  []= ","params merge  merge "]}," OAuth2 Strategy ClientCredentials authorize_url":{"type":"method","name":"authorize_url","children":[],"call":[" raise "," fail "]}," OAuth2 Client client_credentials":{"type":"method","name":"client_credentials","children":[],"call":["OAuth2 Strategy ClientCredentials  new "]}," OAuth2 Version to_s":{"type":"method","name":"to_s","children":[],"call":["(const nil :MAJOR) compact join ","(const nil :MAJOR) compact "," to_a join "," to_a "," pre ","(send nil :major) compact join ","(send nil :major) compact "," patch "," minor "," major "]}," OAuth2 Strategy Implicit get_token":{"type":"method","name":"get_token","children":[],"call":[" raise "," fail "]}," OAuth2 Strategy Implicit authorize_url":{"type":"method","name":"authorize_url","children":[],"call":["@client authorize_url "," authorize_params merge "," authorize_params "," assert_valid_params "]}," OAuth2 Strategy Implicit authorize_params":{"type":"method","name":"authorize_params","children":[],"call":["params merge ","@client id "]}," OAuth2 Strategy Assertion build_assertion":{"type":"method","name":"build_assertion","children":[],"call":["JWT  encode ","params [] ","encoding_opts [] "," raise ","ArgumentError  new ","(send\n  (array\n    (sym :algorithm)\n    (sym :key)) :-\n  (send\n    (lvar :encoding_opts) :keys)) any? ","(sym :algorithm) - ","encoding_opts keys ","encoding_opts is_a? ! ","encoding_opts is_a? "]}," OAuth2 Strategy Assertion build_request":{"type":"method","name":"build_request","children":[],"call":["(pair\n  (sym :grant_type)\n  (str \"assertion\")) merge "," client_params ","params [] "," build_assertion ","(pair\n  (sym :grant_type)\n  (str \"urn:ietf:params:oauth:grant-type:jwt-bearer\")) merge ","(pair\n  (sym :grant_type)\n  (str \" build_assertion \")) merge "," build_ build_assertion  "]}," OAuth2 Strategy Assertion get_token":{"type":"method","name":"get_token","children":[],"call":["@client get_token ","opts merge "," build_request ","response_opts merge "," build_assertion "," build_ build_assertion  "]}," OAuth2 Strategy Assertion authorize_url":{"type":"method","name":"authorize_url","children":[],"call":[" raise "," fail "]}," OAuth2 Client assertion":{"type":"method","name":"assertion","children":[],"call":["OAuth2 Strategy Assertion  new "]}," OAuth2 Client implicit":{"type":"method","name":"implicit","children":[],"call":["OAuth2 Strategy Implicit  new "]}," OAuth2 AccessToken headers":{"type":"method","name":"headers","children":[],"call":[" options [] % "," token "," options [] "," options "]}," OAuth2 AccessToken patch":{"type":"method","name":"patch","children":[],"call":[" request "]}," OAuth2 AccessToken to_hash":{"type":"method","name":"to_hash","children":[],"call":[" params merge "," expires_at "," refresh_token "," token "," params "]}," OAuth2 Strategy ClientCredentials authorization":{"type":"method","name":"authorization","children":[],"call":["Basic  + ","Base64  encode64 gsub ","Base64  encode64 ","client_id + + ","client_id + ","Base64  encode64 delete "]}," OAuth2 AccessToken token=":{"type":"method","name":"token=","children":[],"call":[" fail "," options [] "," options ","opts [] << "," token ","opts [] ","opts [] []= ","opts [] is_a? ","opts [] merge! "," headers "," raise "]}," OAuth2 MACToken strict_encode64":{"type":"method","name":"strict_encode64","children":[],"call":["Base64  encode64 gsub ","Base64  encode64 ","Base64  encode64 delete "]}," OAuth2 MACToken token=":{"type":"method","name":"token=","children":[],"call":[]}," OAuth2 MACToken algorithm=":{"type":"method","name":"algorithm=","children":[],"call":[" fail ","OpenSSL Digest SHA256  new ","OpenSSL Digest SHA1  new ","alg to_s "," raise ","OpenSSL Digest  new ","OpenSSL  Digest new ","OpenSSL  Digest "]}," OAuth2 MACToken signature":{"type":"method","name":"signature","children":[],"call":[" strict_encode64 ","OpenSSL HMAC  digest "," secret ","(lvar :timestamp) join ","uri port ","uri host ","uri request_uri ","verb to_s upcase ","verb to_s "]}," OAuth2 MACToken header":{"type":"method","name":"header","children":[],"call":[" token "," signature "," fail ","uri is_a? ","URI  parse ","Digest MD5  hexdigest ","(lvar :timestamp) join ","SecureRandom  hex ","Time  now utc to_i ","Time  now utc ","Time  now "," raise ","Digest SHA256  hexdigest ","URI  parse  is_a? ","(lvar :Time  now utc to_i ) join "]}," OAuth2 MACToken headers":{"type":"method","name":"headers","children":[],"call":[]}," OAuth2 MACToken request":{"type":"method","name":"request","children":[],"call":["@client request ","opts [] merge! "," header ","opts [] "," client connection build_url to_s "," client connection build_url "," client connection "," client ","opts [] []= "," client connection build_ client connection build_url to_s  to_s "," client connection build_ client connection build_url to_s  "]}," OAuth2 MACToken initialize":{"type":"method","name":"initialize","children":[],"call":[" algorithm= ","opts delete "]}," OAuth2 MACToken from_access_token":{"type":"method","name":"from_access_token","children":[],"call":[]}," OAuth2 Version to_a":{"type":"method","name":"to_a","children":[],"call":["(send nil :major) compact "," pre "," patch "," minor "," major ","VERSION  split "]}," OAuth2 Version to_h":{"type":"method","name":"to_h","children":[],"call":[" pre "," patch "," minor "," major "]}," OAuth2 Version pre":{"type":"method","name":"pre","children":[],"call":[" to_a [] "," to_a "]}," OAuth2 Version patch":{"type":"method","name":"patch","children":[],"call":[" to_a [] to_i "," to_a [] "," to_a "]}," OAuth2 Version minor":{"type":"method","name":"minor","children":[],"call":[" to_a [] to_i "," to_a [] "," to_a "]}," OAuth2 Version major":{"type":"method","name":"major","children":[],"call":[" to_a [] to_i "," to_a [] "," to_a "]}," OAuth2 Error error_message":{"type":"method","name":"error_message","children":[],"call":["message join ","message << ","response_body encode ","opts [] encoding ","opts [] ","opts [] respond_to? ","lines join ","lines << ","response_body respond_to? "]}," OAuth2 Client redirection_params":{"type":"method","name":"redirection_params","children":[],"call":[" options [] "," options "]}," OAuth2 Authenticator basic_auth_header":{"type":"method","name":"basic_auth_header","children":[],"call":[" class encode_basic_auth "," secret "," id "," class "]}," OAuth2 Authenticator apply_basic_auth":{"type":"method","name":"apply_basic_auth","children":[],"call":["params merge "," basic_auth_header merge "," basic_auth_header ","params fetch "]}," OAuth2 Authenticator apply_params_auth":{"type":"method","name":"apply_params_auth","children":[],"call":["(pair\n  (str \"client_id\")\n  (send nil :id)) merge "," secret "," id ","result merge ","result []= "," secret nil? "," id nil? "]}," OAuth2 Authenticator encode_basic_auth":{"type":"method","name":"encode_basic_auth","children":[],"call":[]}," OAuth2 Authenticator apply":{"type":"method","name":"apply","children":[],"call":[" raise "," apply_params_auth "," apply_basic_auth "," mode to_sym "," mode "," apply_client_id "]}," OAuth2 Authenticator initialize":{"type":"method","name":"initialize","children":[],"call":[]}," OAuth2 AccessToken configure_authentication!":{"type":"method","name":"configure_authentication!","children":[],"call":[" raise "," options [] "," options ","opts [] << "," token ","opts [] ","opts [] []= ","opts [] is_a? ","opts [] merge! "," headers "]}," OAuth2 Client oauth_debug_logging":{"type":"method","name":"oauth_debug_logging","children":[],"call":["builder response "," options [] "," options ","ENV  [] == ","ENV  [] "]}," OAuth2 Client build_access_token":{"type":"method","name":"build_access_token","children":[],"call":["extract_access_token call ","extract_access_token from_hash ","extract_access_token respond_to? ","extract_access_token is_a? ","parsed_response merge ","parsed_response is_a? ","response parsed dup ","response parsed ","access_token response= ","access_token respond_to? ","access_token_class from_hash tap ","access_token_class from_hash ","response parsed merge ","extract_access_token from_parsed_response merge  ","response parsed dup  merge ","response parsed dup  is_a? ","access_token_class from_parsed_response merge  tap ","access_token_class from_parsed_response merge  "]}," OAuth2 Client authenticator":{"type":"method","name":"authenticator","children":[],"call":["Authenticator  new "," options [] "," options "," secret "," id "]}," OAuth2 Authenticator apply_client_id":{"type":"method","name":"apply_client_id","children":[],"call":["(pair\n  (str \"client_id\")\n  (send nil :id)) merge "," id ","result merge ","result []= "," id nil? "]}," OAuth2 AccessToken convert_expires_at":{"type":"method","name":"convert_expires_at","children":[],"call":["expires_at to_i ","Time  iso8601 to_i ","Time  iso8601 ","expires_at to_s ","Time  parse to_i ","Time  parse ","expires_at is_a? ","expires_at_i > ","Time  now utc to_i ","Time  now utc ","Time  now ","expires_at to_i  > "]}," OAuth2 build_access_token":{"type":"method","name":"build_access_token","children":[],"call":["extract_access_token call ","extract_access_token from_hash ","extract_access_token respond_to? ","extract_access_token is_a? ","parsed_response merge ","parsed_response is_a? ","response parsed dup ","response parsed ","extract_access_token from_parsed_response merge  ","response parsed dup  merge ","response parsed dup  is_a? "]}," OAuth2 Strategy Implicit assert_valid_params":{"type":"method","name":"assert_valid_params","children":[],"call":[" raise ","params key? "]}," OAuth2 Strategy AuthCode assert_valid_params":{"type":"method","name":"assert_valid_params","children":[],"call":[" raise ","params key? "]}," OAuth2 Error parse_error_description":{"type":"method","name":"parse_error_description","children":[],"call":[]}," OAuth2 Client build_access_token_legacy_extract":{"type":"method","name":"build_access_token_legacy_extract","children":[],"call":["extract_access_token call ","response parsed merge ","response parsed "]}," OAuth2 Client parse_response":{"type":"method","name":"parse_response","children":[],"call":[" build_access_token "," raise ","Error  new "," options [] "," options ","access_token_class contains_token? ","data is_a? ","response parsed ","access_token_class contains_token? ! ","data empty? ! ","data empty? "," options []  contains_token? ","response parsed  is_a? "," options []  contains_token? ! ","response parsed  empty? ! ","response parsed  empty? "]}," OAuth2 Client parse_response_with_legacy_extract":{"type":"method","name":"parse_response_with_legacy_extract","children":[],"call":[" raise ","Error  new "," options [] "," options "," build_access_token_legacy_extract "," build_ build_access_token_legacy_extract _legacy_extract "]}," OAuth2 AccessToken refresh":{"type":"method","name":"refresh","children":[],"call":["new_token refresh_token= "," refresh_token ","new_token refresh_token ","new_token options= "," options ","@client get_token ","params []= "," raise ","@client get_token  refresh_token= ","@client get_token  refresh_token ","@client get_token  options= "]}," OAuth2 AccessToken contains_token?":{"type":"method","name":"contains_token?","children":[],"call":["hash key? "]}," OAuth2 Client execute_request":{"type":"method","name":"execute_request","children":[],"call":["Response  new ","opts [] "," raise "," block_given? ","req params update ","req params "," connection run_request "," connection "," connection build_url to_s "," connection build_url ","opts fetch ","Response DEFAULT_OPTIONS  [] ","opts delete ","opts key? "," connection build_ connection build_url to_s  to_s "," connection build_ connection build_url to_s  "]}," OAuth2 Client build_access_token_legacy":{"type":"method","name":"build_access_token_legacy","children":[],"call":["extract_access_token call ","response parsed merge ","response parsed "]}," OAuth2 Client parse_response_legacy":{"type":"method","name":"parse_response_legacy","children":[],"call":[" raise ","Error  new "," options [] "," options "," build_access_token_legacy "," build_ build_access_token_legacy _legacy "]}," OAuth2 Client parse_snaky_params_headers":{"type":"method","name":"parse_snaky_params_headers","children":[],"call":["params delete "," authenticator apply "," authenticator ","Response DEFAULT_OPTIONS  [] ","params key? ","(send\n  (lvar :params) :map) to_h ","key to_sym ","RESERVED_PARAM_KEYS  include? ","params map "," authenticator apply  delete ","(send\n  (lvar :params) :map) to_h  delete "," authenticator apply  key? ","(send\n  (lvar :params) :map) to_h  key? ","(send\n  (lvar : authenticator apply ) :map) to_h ","(send\n  (lvar :(send\n  (lvar :params) :map) to_h ) :map) to_h "," authenticator apply  map ","(send\n  (lvar :params) :map) to_h  map "]}," OAuth2 Client http_method":{"type":"method","name":"http_method","children":[],"call":["http_meth == "," options [] to_sym "," options [] "," options "," options [] to_sym  == "]}," OAuth2 configure":{"type":"method","name":"configure","children":[],"call":[]}," OAuth2 AccessToken extra_tokens_warning":{"type":"method","name":"extra_tokens_warning","children":[],"call":[" warn ","key inspect ","supported_keys length <= ","supported_keys length ","OAuth2  config silence_extra_tokens_warning ","OAuth2  config "]}}