{" WillPaginate Deprecation silenced?":{"type":"method","name":"silenced?","children":[],"call":[]}," WillPaginate Deprecation warn":{"type":"method","name":"warn","children":[],"call":[" caller "]}," WillPaginate enable_activerecord":{"type":"method","name":"enable_activerecord","children":[],"call":[" alias_method_chain "," include ","klass class_eval ","(if\n  (send\n    (send\n      (lvar :collection) :instance_methods) :include?\n    (sym :create!))\n  (lvar :collection)\n  (send\n    (send\n      (lvar :collection) :subclasses) :map\n    (block-pass\n      (sym :constantize)))) push each ","(if\n  (send\n    (send\n      (lvar :collection) :instance_methods) :include?\n    (sym :create!))\n  (lvar :collection)\n  (send\n    (send\n      (lvar :collection) :subclasses) :map\n    (block-pass\n      (sym :constantize)))) push ","collection subclasses map ","collection subclasses ","collection instance_methods include? ","collection instance_methods ","ActiveRecord Base  class_eval "," require ","ActiveRecord Base  respond_to? ","(send nil :returning\n  (array\n    (const\n      (lvar :a) :AssociationCollection))) each ","classes << "," HasManyThroughAssociation  superclass == "," HasManyThroughAssociation  superclass "," returning ","result []= ","result [] =~ ","result [] ","result [] is_a? "," protected ","klass send ","ActiveRecord Base  send ","(send\n  (array\n    (const\n      (lvar :a) :AssociationCollection)) :tap) each ","(const\n  (lvar :a) :AssociationCollection) tap ","klasses each ","klasses << "]}," WillPaginate enable_actionpack":{"type":"method","name":"enable_actionpack","children":[],"call":[" include ","ActionView Base  class_eval "," require ","ActionView Base  instance_methods include? ","ActionView Base  instance_methods ","ActionController Base  rescue_responses []= ","ActionController Base  rescue_responses ","ActionController Base  respond_to? ","ActionView Base  send ","ActionView Base  instance_methods include_method? "]}," WillPaginate enable":{"type":"method","name":"enable","children":[],"call":[" enable_activerecord "," enable_actionpack "]}," WillPaginate LinkRenderer params":{"type":"method","name":"params","children":[],"call":["@template params to_hash symbolize_keys ","@template params to_hash ","@template params "]}," WillPaginate LinkRenderer param_name":{"type":"method","name":"param_name","children":[],"call":["@options [] to_sym ","@options [] ","@options [] to_s "]}," WillPaginate LinkRenderer total_pages":{"type":"method","name":"total_pages","children":[],"call":["@collection page_count ","WillPaginate ViewHelpers  total_pages_for_collection "]}," WillPaginate LinkRenderer current_page":{"type":"method","name":"current_page","children":[],"call":["@collection current_page "]}," WillPaginate LinkRenderer url_options":{"type":"method","name":"url_options","children":[],"call":["options rec_merge! ","@options [] "," params merge "," params ","@template request get? ","@template request "," param_name "," params merge  rec_merge! ","@ params merge  [] "]}," WillPaginate LinkRenderer page_link_or_span":{"type":"method","name":"page_link_or_span","children":[],"call":["@template content_tag ","@template link_to "," url_options ","page != "," current_page ","page to_s ","classnames join ","classnames [] "," rel_value "," url_for ","Array  [] "," page_span "," page_link ","span_class split last ","span_class split ","span_class index ","text html_safe ","text respond_to? ","Array  []  join ","Array  []  [] ","text html_safe  html_safe ","text html_safe  respond_to? "]}," WillPaginate LinkRenderer visible_page_numbers":{"type":"method","name":"visible_page_numbers","children":[],"call":["right_gap to_a ","right_gap last - > ","right_gap last - ","right_gap first ","right_gap last ","left_gap to_a ","left_gap last - > ","left_gap last - ","left_gap first ","left_gap last "," total_pages - "," total_pages ","window_to + ","2 + ","(irange\n  (int 1)\n  (send nil :total_pages)) to_a ","1 - ","window_from < ","window_to - ","window_to > "," current_page + "," current_page "," current_page - ","@options [] to_i ","@options [] "," total_pages  + "," current_page +  + "," current_page -  < "," total_pages  - "," current_page +  - "," total_pages  > "," current_page +  > "]}," WillPaginate LinkRenderer windowed_links":{"type":"method","name":"windowed_links","children":[],"call":["links << "," page_link_or_span "," gap_marker ","n > ","prev + "," visible_page_numbers inject "," visible_page_numbers "]}," WillPaginate LinkRenderer gap_marker":{"type":"method","name":"gap_marker","children":[],"call":["@template will_paginate_translate "]}," WillPaginate LinkRenderer html_attributes":{"type":"method","name":"html_attributes","children":[],"call":["@html_attributes []= ","@collection first class name underscore pluralize + ","@collection first class name underscore pluralize ","@collection first class name underscore ","@collection first class name ","@collection first class ","@collection first ","@options [] === ","@options [] ","@options except ","WillPaginate ViewHelpers  pagination_options keys - ","WillPaginate ViewHelpers  pagination_options keys ","WillPaginate ViewHelpers  pagination_options ","@options except  []= "]}," WillPaginate LinkRenderer to_html":{"type":"method","name":"to_html","children":[],"call":["@template content_tag "," html_attributes ","@options [] ","links join ","links push "," page_link_or_span ","@collection next_page ","links unshift ","@collection previous_page "," windowed_links ","html html_safe ","html respond_to? "," links join _attributes "," html html_safe _attributes "," windowed_links  join "," windowed_links  push "," windowed_links  unshift "," windowed_ windowed_links  ","links join  links join _safe ","html html_safe  html html_safe _safe ","links join  respond_to? ","html html_safe  respond_to? "]}," WillPaginate LinkRenderer initialize":{"type":"method","name":"initialize","children":[],"call":[]}," WillPaginate ViewHelpers page_entries_info":{"type":"method","name":"page_entries_info","children":[],"call":["Displaying entries <b>%d&nbsp;-&nbsp;%d</b> of <b>%d</b> in total % ","collection total_entries ","collection offset + ","collection length ","collection offset ","collection size ","collection total_pages < ","collection total_pages ","(str \"Displaying \") % ","entry_name pluralize ","collection first class name underscore sub ","collection first class name underscore ","collection first class name ","collection first class ","collection first ","collection empty? ","options [] ","output html_safe ","output respond_to? ","(str \"Displaying %s \") % ","opts [] "," will_paginate_translate ","name pluralize ","opts [] == "," raise ","model inspect ","name respond_to? ","model_key to_s tr ","model_key to_s ","collection total_pages > ","model to_s underscore ","model to_s ","options fetch ","WillPaginate Deprecation  warn "," caller ","options key? ","defaults << ","model model_name human ","model model_name ","model respond_to? ","Proc  new ","model model_name i18n_key ","entry_model_key to_s tr  pluralize ","collection first class model_key to_s tr  underscore sub ","collection first class model_key to_s tr  underscore ","collection first class model_key to_s tr  ","output options fetch _safe ","model_key to_s tr  pluralize ","collection first class  inspect ","options []  inspect ","model_key to_s tr  respond_to? ","model to_s underscore  to_s tr ","model model_name i18n_key  to_s tr ","collection first class _key to_s tr ","options [] _key to_s tr ","model to_s underscore  to_s ","model model_name i18n_key  to_s ","collection first class _key to_s ","options [] _key to_s ","collection first class  to_s underscore ","options []  to_s underscore ","collection first class  to_s ","options []  to_s ","model model_model_key to_s tr  human ","collection first class  collection first class _name human ","options []  options [] _name human ","model  will_paginate_translate  human ","model model_model_key to_s tr  ","collection first class  collection first class _name ","options []  options [] _name ","model  will_paginate_translate  ","collection first class  respond_to? ","options []  respond_to? ","model model_model_key to_s tr  i18n_key ","collection first class  collection first class _name i18n_key ","options []  options [] _name i18n_key ","model  will_paginate_translate  i18n_key "]}," WillPaginate ViewHelpers will_paginate":{"type":"method","name":"will_paginate","children":[],"call":["renderer to_html ","renderer_class new ","options [] to_s constantize ","options [] to_s ","options [] ","options symbolize_keys reverse_merge ","WillPaginate ViewHelpers  pagination_options ","options symbolize_keys ","collection page_count > ","collection page_count "," raise ","(str \"The \") + "," instance_variable_get "," controller controller_name "," controller "," controller ! ","collection is_a? ","WillPaginate ViewHelpers  total_pages_for_collection > ","WillPaginate ViewHelpers  total_pages_for_collection ","renderer prepare ","options [] new ","options [] to_s constantize new ","options []= ","options delete ","WillPaginate Deprecation  warn "," caller "," will_paginate_translate ","klass new ","Object  const_get ","options [] constantize ","options [] respond_to? ","WillPaginate ViewHelpers  pagination_options merge ","collection total_pages > ","collection total_pages ","output html_safe ","output respond_to? ","renderer_class new  to_html ","renderer_class new _class new ","options [] to_s constantize  new ","options symbolize_keys reverse_merge  [] to_s constantize ","WillPaginate ViewHelpers  pagination_options merge  [] to_s constantize ","options symbolize_keys reverse_merge  [] to_s ","WillPaginate ViewHelpers  pagination_options merge  [] to_s ","options symbolize_keys reverse_merge  [] ","WillPaginate ViewHelpers  pagination_options merge  [] ","options symbolize_keys reverse_merge  symbolize_keys reverse_merge ","WillPaginate ViewHelpers  pagination_options merge  symbolize_keys reverse_merge ","WillPaginate ViewHelpers  pagination_options symbolize_keys reverse_merge  ","WillPaginate ViewHelpers  pagination_WillPaginate ViewHelpers  pagination_options merge  ","options symbolize_keys reverse_merge  symbolize_keys ","WillPaginate ViewHelpers  pagination_options merge  symbolize_keys "," instance_variable_get  page_count > "," instance_variable_get  page_count "," instance_variable_get  is_a? ","WillPaginate ViewHelpers  total_pages_for_ instance_variable_get  > ","WillPaginate ViewHelpers  total_pages_for_ instance_variable_get  ","renderer_class new  prepare ","options symbolize_keys reverse_merge  [] new ","WillPaginate ViewHelpers  pagination_options merge  [] new ","options symbolize_keys reverse_merge  [] to_s constantize new ","WillPaginate ViewHelpers  pagination_options merge  [] to_s constantize new ","options symbolize_keys reverse_merge  []= ","WillPaginate ViewHelpers  pagination_options merge  []= ","options symbolize_keys reverse_merge  delete ","WillPaginate ViewHelpers  pagination_options merge  delete ","Object  const_get  new ","options [] constantize  new ","options symbolize_keys reverse_merge  [] constantize ","WillPaginate ViewHelpers  pagination_options merge  [] constantize ","options symbolize_keys reverse_merge  [] respond_to? ","WillPaginate ViewHelpers  pagination_options merge  [] respond_to? ","WillPaginate ViewHelpers  pagination_options symbolize_keys reverse_merge  merge ","WillPaginate ViewHelpers  pagination_WillPaginate ViewHelpers  pagination_options merge  merge "," instance_variable_get  total_pages > "," instance_variable_get  total_pages ","output html_safe  html_safe ","renderer to_html  html_safe ","output html_safe  respond_to? ","renderer to_html  respond_to? "]}," WillPaginate Finder ClassMethods wp_parse_options":{"type":"method","name":"wp_parse_options","children":[],"call":["options [] "," per_page "," raise ","options key? ","options symbolize_keys ","options respond_to? ","options symbolize_keys  [] ","options symbolize_keys  key? ","options symbolize_keys  symbolize_keys ","options symbolize_keys  respond_to? "]}," WillPaginate Finder ClassMethods wp_count":{"type":"method","name":"wp_count","children":[],"call":["count length ","count respond_to? ","counter call "," with_scope "," construct_attributes_from_arguments "," extract_attribute_names_from_match ","(str \"^find_(all_by|by)_([_a-zA-Z]\\\\w*)$\") match "," send ","klass respond_to? ","finder sub ","finder index == ","finder index ","@reflection klass "," count ","Proc  new ","count_options update ","options [] ","options except ","excludees << ","options [] =~ ","2 split ","finder =~ ","count_options delete ","klass send ! ","klass send ","klass private_methods include_method? ","klass private_methods ","count_options [] ","options []= ","klass primary_key ","klass table_name ","options [] gsub =~ ","options [] gsub "," scope ","ActiveRecord Calculations CALCULATIONS_OPTIONS  include? ","count is_a? ! ","count is_a? "," send  length "," send  respond_to? "," send er call "," extract_ extract_attribute_names_from_match _from_match "," extract_2 split _from_match "," extract_attribute_names_from_(str \"^find_(all_by|by)_([_a-zA-Z]\\w*)$\") match  ","(str \"^find_(all_by|by)_([_a-zA-Z]\\\\w*)$\") (str \"^find_(all_by|by)_([_a-zA-Z]\\w*)$\") match  ","@reflection klass  respond_to? ","@reflection @reflection klass  ","  send  "," send _options update ","options except  update "," send _options delete ","options except  delete ","@reflection klass  send ! ","@reflection klass  send ","@reflection klass  private_methods include_method? ","@reflection klass  private_methods "," send _options [] ","options except  [] ","@reflection klass  primary_key ","@reflection klass  table_name "," send  is_a? ! "," send  is_a? "]}," WillPaginate Finder ClassMethods method_missing_with_paginate":{"type":"method","name":"method_missing_with_paginate","children":[],"call":[" paginate ","args << ","options []= ","options dup "," raise ","options respond_to? ","args pop ","finder sub! ","finder index == ","finder index ","method to_s sub ","method to_s "," method_missing_without_paginate ","method to_s index == ","method to_s index "," block_given? ","options dup  []= ","args pop  []= ","options dup  dup ","args pop  dup ","options dup  respond_to? ","args pop  respond_to? ","method to_s sub  sub! ","method to_s sub  index == ","method to_s sub  index "]}," WillPaginate Finder ClassMethods respond_to?":{"type":"method","name":"respond_to?","children":[],"call":["method to_s sub ","method to_s ","method to_sym "]}," WillPaginate Finder ClassMethods paginate_by_sql":{"type":"method","name":"paginate_by_sql","children":[],"call":["pager total_entries= "," count_by_sql ","count_query << ","(str \"oracle\") include? "," connection adapter_name downcase "," connection adapter_name "," connection ","original_query sub ","pager total_entries ","pager replace "," find_by_sql "," add_limit! ","pager per_page ","pager offset ","query dup "," sanitize_sql ","WillPaginate Collection  create "," wp_parse_options "," connection adapter_name =~ ","sql dup ","original_query sub  << ","count_ sanitize_sql  << ","query dup  sub ","original_ sanitize_sql  sub "," sanitize_sql  dup "]}," WillPaginate Finder ClassMethods paginate":{"type":"method","name":"paginate","children":[],"call":["pager total_entries= "," wp_count ","pager total_entries ","pager replace "," send ","args << ","count_options except update ","pager per_page ","pager offset ","count_options except ","options except ","WillPaginate Collection  create ","args unshift ","args empty? ","args first size ","args first ","Array  === ","finder == ","(or\n  (send\n    (lvar :options) :[]\n    (sym :finder))\n  (str \"find\")) to_s ","options [] "," wp_parse_options ","args pop "," block_given? ","options except  except update ","count_args pop  except update ","options except  except ","count_args pop  except ","args pop  except ","(or\n  (send\n    (lvar :options) :[]\n    (sym :finder))\n  (str \"find\")) to_s  == ","(or\n  (send\n    (lvar :options) :[]\n    (sym :(or\n  (send\n    (lvar :options) :[]\n    (sym :finder))\n  (str \"find\")) to_s ))\n  (str \"find\")) to_s ","(or\n  (send\n    (lvar :args pop ) :[]\n    (sym :finder))\n  (str \"find\")) to_s ","args pop  [] "," wp_parse_args pop  "]}," WillPaginate Finder included":{"type":"method","name":"included","children":[],"call":[]}," paginate":{"type":"method","name":"paginate","children":[],"call":["pager replace "," [] to_a "," [] ","pager per_page ","pager offset ","WillPaginate Collection  create "," size ","options [] "," raise ","WillPaginate Deprecation  warn ","Fixnum  === ","options_or_page nil? "," length ","options inspect ","Hash  === ","WillPaginate  per_page ","options [] r replace ","pager options []  ","options [] r per_options []  ","options [] r offset ","options_or_options []  nil? ","WillPaginate  options []  ","WillPaginate  per_options []  "]}," rec_merge!":{"type":"method","name":"rec_merge!","children":[],"call":[" []= ","value rec_merge! ","other_value is_a? ","value is_a? "," [] ","other each "," []  rec_merge! ","other_ []  is_a? "," []  is_a? "]}," slice!":{"type":"method","name":"slice!","children":[],"call":[" replace "," slice "]}," slice":{"type":"method","name":"slice","children":[],"call":["allowed include? ! ","allowed include? "," reject ","Set  new "," convert_key ","keys map "," respond_to? ","Set  new  include? ! ","Set  new  include? "]}," except!":{"type":"method","name":"except!","children":[],"call":[" replace "," except "]}," except":{"type":"method","name":"except","children":[],"call":["rejected include? "," reject ","Set  new "," convert_key ","keys map "," respond_to? ","Set  new  include? "]}," WillPaginate Collection replace":{"type":"method","name":"replace","children":[],"call":[" total_entries= "," offset + "," length "," offset "," length < "," per_page "," length > "," total_entries nil? "," total_entries "," returning "," current_page == "," current_page "]}," WillPaginate Collection total_entries=":{"type":"method","name":"total_entries=","children":[],"call":["(send\n  (ivar :@total_entries) :/\n  (send\n    (send nil :per_page) :to_f)) ceil ","@total_entries / "," per_page to_f "," per_page ","number to_i ","(send\n  (ivar :number to_i ) :/\n  (send\n    (send nil :per_page) :to_f)) ceil ","number to_i  / "]}," WillPaginate Collection next_page":{"type":"method","name":"next_page","children":[],"call":[" current_page + "," current_page "," current_page < "," page_count "," total_pages "]}," WillPaginate Collection previous_page":{"type":"method","name":"previous_page","children":[],"call":[" current_page - "," current_page "," current_page > "]}," WillPaginate Collection offset":{"type":"method","name":"offset","children":[],"call":["(send\n  (send nil :current_page) :-\n  (int 1)) * "," per_page "," current_page - "," current_page ","@current_page to_offset to_i ","@current_page to_offset "," current_page to_offset to_i "," current_page to_offset "]}," WillPaginate Collection out_of_bounds?":{"type":"method","name":"out_of_bounds?","children":[],"call":[" current_page > "," page_count "," current_page "," total_pages "]}," WillPaginate Collection page_count":{"type":"method","name":"page_count","children":[],"call":[]}," WillPaginate Collection create":{"type":"method","name":"create","children":[],"call":[]}," WillPaginate Collection initialize":{"type":"method","name":"initialize","children":[],"call":[" total_entries= "," raise ","@per_page < ","per_page to_i ","InvalidPage  new ","@current_page < ","page to_i ","InvalidPage  validate ","WillPaginate  PageNumber ","per_page to_i  < ","page to_i  < ","WillPaginate  PageNumber  < "]}," WillPaginate InvalidPage initialize":{"type":"method","name":"initialize","children":[],"call":["page inspect ","value inspect "]}," WillPaginate enable_named_scope":{"type":"method","name":"enable_named_scope","children":[],"call":[" include ","ActiveRecord Base  class_eval "," require ","ActiveRecord Base  send "]}," WillPaginate LinkRenderer stringified_merge":{"type":"method","name":"stringified_merge","children":[],"call":["target []= "," stringified_merge ","existing is_a? ","existing nil? ","value is_a? ","target [] ","key to_s ","other each ","target []  is_a? ","target []  nil? ","key to_s  to_s "]}," WillPaginate LinkRenderer rel_value":{"type":"method","name":"rel_value","children":[],"call":["@collection next_page ","prev + ","page == ","@collection previous_page "]}," WillPaginate LinkRenderer url_for":{"type":"method","name":"url_for","children":[],"call":["@url_string sub ","page to_s ","url sub ","CGI  escape "," param_name ","@template url_for ","@url_params []= "," stringified_merge ","(if\n  (defined?\n    (const nil :CGIMethods))\n  (const nil :CGIMethods)\n  (const\n    (const nil :ActionController) :AbstractRequest)) parse_query_parameters "," param_name index ","@options [] ","@template params ","@template request get? ","@template request ","@url_string []= ","url [] == ","url [] ","char == ","@template url_for split each_with_index ","@template url_for split "," parse_query_parameters ","page_one ! ","page == ","url sub  sub ","@@template url_for _string sub ","@template url_for  sub ","@template @template url_for _for ","@@template url_for _params []= ","url sub  []= ","@@template url_for _string []= ","@template url_for  [] == ","@template url_for  [] ","@template @template url_for _for split each_with_index ","@template @template url_for _for split ","page ==  ! "]}," WillPaginate ViewHelpers total_pages_for_collection":{"type":"method","name":"total_pages_for_collection","children":[{"type":"method","name":"total_pages","children":[],"asgn":[],"call":[" page_count "]}],"call":[]}," WillPaginate ViewHelpers paginated_section":{"type":"method","name":"paginated_section","children":[],"call":[" concat ","block binding ","pagination + + ","pagination + "," capture "," will_paginate to_s "," will_paginate ","ActionView Base  respond_to? "," respond_to? "," will_paginate to_s  + + "," will_paginate to_s  + "]}," method_missing":{"type":"method","name":"method_missing","children":[],"call":["@reflection klass send ","@reflection klass ","@reflection klass with_scope ","@reflection klass scopes [] call ","@reflection klass scopes [] ","@reflection klass scopes ","@reflection klass scopes include? ","Class  respond_to? ","@reflection klass respond_to? ! ","@reflection klass respond_to? ","@target respond_to? "," block_given? "]}," method_missing_without_paginate":{"type":"method","name":"method_missing_without_paginate","children":[],"call":["@reflection klass send ","@reflection klass "," block_given? "," with_scope "," construct_scope ","@reflection klass scopes [] call ","@reflection klass scopes [] ","@reflection klass scopes ","@reflection klass scopes include? ","Class  respond_to? ","@reflection klass respond_to? ! ","@reflection klass respond_to? ","@target respond_to? "," method_missing_without_scopes "]}," with_scope":{"type":"method","name":"with_scope","children":[],"call":["@reflection klass send ","@reflection klass "," block_given? "]}," WillPaginate NamedScope Scope load_found":{"type":"method","name":"load_found","children":[],"call":[" find "]}," WillPaginate NamedScope Scope method_missing":{"type":"method","name":"method_missing","children":[],"call":[" proxy_scope send "," proxy_scope "," with_scope "," proxy_options "," scopes [] call "," scopes [] "," scopes "," scopes include? "," block_given? "]}," WillPaginate NamedScope Scope proxy_found":{"type":"method","name":"proxy_found","children":[],"call":[" load_found "]}," WillPaginate NamedScope Scope reload":{"type":"method","name":"reload","children":[],"call":[" load_found "]}," WillPaginate NamedScope Scope initialize":{"type":"method","name":"initialize","children":[],"call":["options except "," extend ","Module  new "," block_given? ","(send\n  (lvar :options) :[]\n  (sym :extend)) flatten each ","(send\n  (lvar :options) :[]\n  (sym :extend)) flatten ","options [] "]}," WillPaginate NamedScope ClassMethods named_scope":{"type":"method","name":"named_scope","children":[],"call":[" scopes [] call "," scopes [] "," scopes "," define_method ","(sclass\n  (self)\n  (self)) instance_eval "," scopes []= ","Scope  new ","options call "," lambda "," block_given? ","name to_sym ","name to_sym  to_sym "]}," WillPaginate NamedScope ClassMethods scopes":{"type":"method","name":"scopes","children":[],"call":[" write_inheritable_attribute "," read_inheritable_attribute "]}," WillPaginate NamedScope included":{"type":"method","name":"included","children":[],"call":[]}," WillPaginate Finder ClassMethods paginated_each":{"type":"method","name":"paginated_each","children":[],"call":["options [] ","collection each size ","collection each "," paginate ","collection size < ","collection per_page ","collection size ","options []= ","options [] to_i ","(pair\n  (sym :order)\n  (str \"id\")) merge ","(send\n  (lvar :collection) :each) size "," with_exclusive_scope ","(pair\n  (sym :order)\n  (lvar :order)) merge "," scope ","(pair\n  (sym :order)\n  (str \"id\")) merge  [] ","(pair\n  (sym :order)\n  (lvar :order)) merge  [] "," paginate  each size "," paginate  each "," paginate  size < "," paginate  per_page "," paginate  size ","(pair\n  (sym :order)\n  (str \"id\")) merge  []= ","(pair\n  (sym :order)\n  (lvar :order)) merge  []= ","(pair\n  (sym :order)\n  (str \"id\")) merge  [] to_i ","(pair\n  (sym :order)\n  (lvar :order)) merge  [] to_i ","(send\n  (lvar : paginate ) :each) size "]}," WillPaginate LinkRenderer parse_query_parameters":{"type":"method","name":"parse_query_parameters","children":[],"call":[" raise ","CGIMethods  parse_query_parameters ","ActionController UrlEncodedPairParser  parse_query_parameters ","ActionController AbstractRequest  parse_query_parameters ","Rack Utils  parse_nested_query ","ActionController AbstractRequest  respond_to? "]}," WillPaginate LinkRenderer page_span":{"type":"method","name":"page_span","children":[],"call":["@template content_tag "]}," WillPaginate LinkRenderer page_link":{"type":"method","name":"page_link","children":[],"call":["@template link_to "," url_for "]}," WillPaginate LinkRenderer prepare":{"type":"method","name":"prepare","children":[],"call":[]}," WillPaginate NamedScope Scope respond_to?":{"type":"method","name":"respond_to?","children":[],"call":["@proxy_scope respond_to? "]}," WillPaginate NamedScope Scope empty?":{"type":"method","name":"empty?","children":[],"call":[" count zero? "," count ","@found empty? "]}," WillPaginate NamedScope Scope last":{"type":"method","name":"last","children":[],"call":[" find "," proxy_found last "," proxy_found ","args first kind_of? ! ","args first kind_of? ","args first "]}," WillPaginate NamedScope Scope first":{"type":"method","name":"first","children":[],"call":[" find "," proxy_found first "," proxy_found ","args first kind_of? ! ","args first kind_of? ","args first "]}," Array include_method?":{"type":"method","name":"include_method?","children":[],"call":["(block\n  (send nil :find)\n  (args\n    (arg :item))\n  (send\n    (send\n      (lvar :item) :to_sym) :==\n    (lvar :name))) ! ! ","(block\n  (send nil :find)\n  (args\n    (arg :item))\n  (send\n    (send\n      (lvar :item) :to_sym) :==\n    (lvar :name))) ! ","item to_sym == ","item to_sym "," find ","name to_sym ","(block\n  (send nil :find)\n  (args\n    (arg :item))\n  (send\n    (send\n      (lvar :item) :to_sym) :==\n    (lvar :name to_sym ))) ! ! ","(block\n  (send nil :find)\n  (args\n    (arg :item))\n  (send\n    (send\n      (lvar :item) :to_sym) :==\n    (lvar :name to_sym ))) ! ","name to_sym  to_sym "]}," WillPaginate PerPage Inheritance inherited":{"type":"method","name":"inherited","children":[],"call":["subclass per_page= "," per_page "]}," WillPaginate PerPage extended":{"type":"method","name":"extended","children":[],"call":[]}," WillPaginate PerPage per_page=":{"type":"method","name":"per_page=","children":[],"call":["limit to_i "]}," WillPaginate PerPage per_page":{"type":"method","name":"per_page","children":[],"call":["WillPaginate  per_page "]}," WillPaginate I18n will_paginate_translate":{"type":"method","name":"will_paginate_translate","children":[],"call":["keys first ","Array  === "," I18n  translate ","options merge ","defaults shift ","defaults << ","Proc  new ","defaults first "," block_given? "," Array dup "," Array ","keys first s first "," Array dup  shift "," Array dup  << "," Array dup  first "]}," WillPaginate I18n load_path":{"type":"method","name":"load_path","children":[],"call":[]}," WillPaginate I18n locale_dir":{"type":"method","name":"locale_dir","children":[],"call":[]}," WillPaginate InvalidPage validate":{"type":"method","name":"validate","children":[],"call":[]}," WillPaginate Finder ClassMethods respond_to_missing?":{"type":"method","name":"respond_to_missing?","children":[],"call":["method to_s index == ","method to_s index ","method to_s "]}," WillPaginate Sinatra registered":{"type":"method","name":"registered","children":[],"call":[]}," WillPaginate Sinatra LinkRenderer build_query":{"type":"method","name":"build_query","children":[],"call":["Rack Utils  build_nested_query "]}," WillPaginate Sinatra LinkRenderer request":{"type":"method","name":"request","children":[],"call":["@template request "]}," WillPaginate Sinatra LinkRenderer url":{"type":"method","name":"url","children":[],"call":["str << << "," build_query ","str << ","params update ","@options [] "," request GET merge ","page to_s "," param_name to_s "," param_name "," request GET "," request ","File  join "," request path_info "," request script_name to_s "," request script_name ","File  join  << << ","File  join  << "," request GET merge  update "]}," WillPaginate Sinatra Helpers will_paginate":{"type":"method","name":"will_paginate","children":[],"call":["options merge ","options [] ","options merge  merge ","options merge  [] "]}," WillPaginate Merb LinkRenderer url":{"type":"method","name":"url","children":[],"call":["@template url ","@template request params except merge "," param_name ","@template request params except ","@template request params ","@template request ","@template request @template request params except merge  except merge ","@template request @template request params except merge  except ","@template request @template request params except merge  "]}," WillPaginate Merb will_paginate":{"type":"method","name":"will_paginate","children":[],"call":["options merge ","options [] ","options merge  merge ","options merge  [] "]}," WillPaginate ViewHelpers LinkRendererBase total_pages":{"type":"method","name":"total_pages","children":[],"call":["@collection total_pages "]}," WillPaginate ViewHelpers LinkRendererBase current_page":{"type":"method","name":"current_page","children":[],"call":["@collection current_page "]}," WillPaginate ViewHelpers LinkRendererBase windowed_page_numbers":{"type":"method","name":"windowed_page_numbers","children":[],"call":["left to_a + + ","right to_a ","left to_a + ","middle to_a ","left to_a "," total_pages ","middle last + ","middle last ","right unshift ","(irange\n  (begin\n    (send\n      (send nil :total_pages) :-\n      (lvar :outer_window)))\n  (send nil :total_pages)) to_a "," total_pages - "," total_pages - - > "," total_pages - - ","middle first ","left << ","(irange\n  (int 1)\n  (begin\n    (send\n      (lvar :outer_window) :+\n      (int 1)))) to_a ","outer_window + ","outer_window + < ","window_to > ","1 - ","window_from < ","window_to - "," current_page + "," current_page "," current_page - ","@options [] to_i ","@options [] ","(irange\n  (int 1)\n  (begin\n    (send\n      (lvar :outer_window) :+\n      (int 1)))) to_a  to_a + + ","(irange\n  (begin\n    (send\n      (send nil :total_pages) :-\n      (lvar :outer_window)))\n  (send nil :total_pages)) to_a  to_a ","(irange\n  (int 1)\n  (begin\n    (send\n      (lvar :outer_window) :+\n      (int 1)))) to_a  to_a + ","(irange\n  (int 1)\n  (begin\n    (send\n      (lvar :outer_window) :+\n      (int 1)))) to_a  to_a ","(irange\n  (begin\n    (send\n      (send nil :total_pages) :-\n      (lvar :outer_window)))\n  (send nil :total_pages)) to_a  unshift ","(irange\n  (int 1)\n  (begin\n    (send\n      (lvar :outer_window) :+\n      (int 1)))) to_a  << "," total_pages  > "," current_page +  > "," current_page -  < "," total_pages  - "," current_page +  - "]}," WillPaginate ViewHelpers LinkRendererBase pagination":{"type":"method","name":"pagination","children":[],"call":["items push ","items unshift "," windowed_page_numbers ","@options [] "," windowed_page_numbers  push "," windowed_page_numbers  unshift "]}," WillPaginate ViewHelpers LinkRendererBase prepare":{"type":"method","name":"prepare","children":[],"call":[]}," WillPaginate ViewHelpers LinkRenderer symbolized_update":{"type":"method","name":"symbolized_update","children":[],"call":["target []= "," symbolized_update ","existing nil? ","existing is_a? ","value is_a? ","target [] ","key to_sym ","other each ","blacklist include? ","value respond_to? ","other each_pair ","target []  nil? ","target []  is_a? ","key to_sym  to_sym "]}," WillPaginate ViewHelpers LinkRenderer rel_value":{"type":"method","name":"rel_value","children":[],"call":["@collection current_page + ","@collection current_page ","prev + ","page == ","@collection current_page - ","@collection next_page ","@collection previous_page "]}," WillPaginate ViewHelpers LinkRenderer tag":{"type":"method","name":"tag","children":[],"call":["attrs << ","CGI  escapeHTML ","pair last to_s ","pair last ","pair first ","pair last nil? ","attributes inject "]}," WillPaginate ViewHelpers LinkRenderer link":{"type":"method","name":"link","children":[],"call":[" tag ","attributes []= "," url "," rel_value ","target is_a? "," url  is_a? "]}," WillPaginate ViewHelpers LinkRenderer param_name":{"type":"method","name":"param_name","children":[],"call":["@options [] to_s ","@options [] "]}," WillPaginate ViewHelpers LinkRenderer url":{"type":"method","name":"url","children":[],"call":[" raise "]}," WillPaginate ViewHelpers LinkRenderer html_container":{"type":"method","name":"html_container","children":[],"call":[" tag "," container_attributes "]}," WillPaginate ViewHelpers LinkRenderer previous_or_next_page":{"type":"method","name":"previous_or_next_page","children":[],"call":[" tag ","classname + "," link "]}," WillPaginate ViewHelpers LinkRenderer next_page":{"type":"method","name":"next_page","children":[],"call":[" previous_or_next_page ","@options [] ","@collection current_page + ","@collection current_page ","@collection current_page < ","@collection total_pages "," total_pages ","@collection next_page ","@template will_paginate_translate "]}," WillPaginate ViewHelpers LinkRenderer previous_page":{"type":"method","name":"previous_page","children":[],"call":[" previous_or_next_page ","@options [] ","@collection current_page - ","@collection current_page ","@collection current_page > ","@collection previous_page ","@template will_paginate_translate "]}," WillPaginate ViewHelpers LinkRenderer gap":{"type":"method","name":"gap","children":[],"call":["@template will_paginate_translate "]}," WillPaginate ViewHelpers LinkRenderer page_number":{"type":"method","name":"page_number","children":[],"call":[" link "," rel_value "," tag ","page == "," current_page ","@template will_paginate_translate ","page to_i "]}," WillPaginate ViewHelpers LinkRenderer container_attributes":{"type":"method","name":"container_attributes","children":[],"call":["@options except ","ViewHelpers  pagination_options keys - ","ViewHelpers  pagination_options keys ","ViewHelpers  pagination_options ","ViewHelpers  pagination_options keys + - ","ViewHelpers  pagination_options keys + ","attributes []= ","@collection first class name underscore pluralize + ","@collection first class name underscore pluralize ","@collection first class name underscore ","@collection first class name ","@collection first class ","@collection first ","@options [] === ","@options [] ","WillPaginate ViewHelpers  pagination_options keys - ","WillPaginate ViewHelpers  pagination_options keys ","WillPaginate ViewHelpers  pagination_options ","(pair\n  (sym :role)\n  (str \"navigation\")) update ","@template will_paginate_translate ","@options except  []= "]}," WillPaginate ViewHelpers LinkRenderer to_html":{"type":"method","name":"to_html","children":[],"call":[" html_container ","@options [] ","(send\n  (send nil :pagination) :map) join "," send "," page_number ","item is_a? "," pagination map "," pagination "," (send\n  (send nil :pagination) :map) join _container "]}," WillPaginate ViewHelpers LinkRenderer prepare":{"type":"method","name":"prepare","children":[],"call":[]}," WillPaginate ActionView LinkRenderer parse_query_parameters":{"type":"method","name":"parse_query_parameters","children":[],"call":["Rack Utils  parse_nested_query "]}," WillPaginate ActionView LinkRenderer get_request?":{"type":"method","name":"get_request?","children":[],"call":["@template request get? ","@template request "]}," WillPaginate ActionView LinkRenderer add_current_page_param":{"type":"method","name":"add_current_page_param","children":[],"call":["url_params []= "," param_name to_sym "," param_name "," symbolized_update "," parse_query_parameters "," param_name index "]}," WillPaginate ActionView LinkRenderer merge_optional_params":{"type":"method","name":"merge_optional_params","children":[],"call":[" symbolized_update ","@options [] "]}," WillPaginate ActionView LinkRenderer base_url_params":{"type":"method","name":"base_url_params","children":[],"call":[" symbolized_update ","@template params "," get_request? "," default_url_params "," default_ default_url_params  "]}," WillPaginate ActionView LinkRenderer url":{"type":"method","name":"url","children":[],"call":["@template url_for "," add_current_page_param ","@base_url_params dup "," merge_optional_params "," base_url_params "," merge_get_params "," default_url_params ","url_params []= ","@base_@base_url_params dup  dup ","@base_ base_url_params  dup ","@base_ merge_get_params  dup "," base_@base_url_params dup  "," base_ base_url_params  "," base_ merge_get_params  "," default_@base_url_params dup  "," default_ base_url_params  "," default_ merge_get_params  ","@base_url_params dup  []= "," base_url_params  []= "," merge_get_params  []= "]}," WillPaginate ActionView LinkRenderer default_url_params":{"type":"method","name":"default_url_params","children":[],"call":[]}," WillPaginate ActionView infer_collection_from_controller":{"type":"method","name":"infer_collection_from_controller","children":[],"call":[" raise ","(str \"The \") + ","collection nil? "," instance_variable_get "," controller controller_name "," controller "," instance_variable_get  nil? "]}," WillPaginate ActionView will_paginate_translate":{"type":"method","name":"will_paginate_translate","children":[],"call":[" translate ","options merge ","defaults shift ","keys dup ","Array  === "," respond_to? ","keys dup  shift ","defaults shift s dup "]}," WillPaginate ActionView paginated_section":{"type":"method","name":"paginated_section","children":[],"call":[" capture ","pagination + + ","pagination + "," will_paginate "," will_paginate  + + "," will_paginate  + "]}," WillPaginate ActionView page_entries_info":{"type":"method","name":"page_entries_info","children":[],"call":["options symbolize_keys "," infer_collection_from_controller ","collection is_a? "]}," WillPaginate ActionView will_paginate":{"type":"method","name":"will_paginate","children":[],"call":["(lvar :collection) try ","options [] ","options symbolize_keys "," infer_collection_from_controller ","collection is_a? ","options symbolize_keys  [] ","options symbolize_keys  symbolize_keys "]}," WillPaginate SequelMethods offset":{"type":"method","name":"offset","children":[],"call":["(send\n  (send nil :current_page) :-\n  (int 1)) * "," per_page "," current_page - "," current_page "]}," WillPaginate SequelMethods out_of_bounds?":{"type":"method","name":"out_of_bounds?","children":[],"call":[" current_page > "," total_pages "," current_page "]}," WillPaginate SequelMethods total_entries":{"type":"method","name":"total_entries","children":[],"call":[" pagination_record_count "]}," WillPaginate SequelMethods size":{"type":"method","name":"size","children":[],"call":[" current_page_record_count "]}," WillPaginate SequelMethods per_page":{"type":"method","name":"per_page","children":[],"call":[" page_size "]}," WillPaginate SequelMethods total_pages":{"type":"method","name":"total_pages","children":[],"call":[" page_count "]}," WillPaginate Railtie add_locale_path":{"type":"method","name":"add_locale_path","children":[],"call":[]}," WillPaginate Railtie setup_actioncontroller":{"type":"method","name":"setup_actioncontroller","children":[],"call":[]}," WillPaginate PageNumber":{"type":"method","name":"PageNumber","children":[],"call":[]}," WillPaginate ===":{"type":"method","name":"===","children":[],"call":["obj instance_of? "]}," WillPaginate PageNumber kind_of?":{"type":"method","name":"kind_of?","children":[],"call":[" to_i kind_of? "," to_i "]}," WillPaginate PageNumber to_offset":{"type":"method","name":"to_offset","children":[],"call":["PageNumber  new ","(send\n  (send nil :to_i) :-\n  (int 1)) * ","per_page to_i "," to_i - "," to_i "]}," WillPaginate PageNumber inspect":{"type":"method","name":"inspect","children":[],"call":[" to_i "]}," WillPaginate PageNumber initialize":{"type":"method","name":"initialize","children":[],"call":[" raise ","error extend ","value inspect ","value < ","value > ","offset == "," Integer "," Integer  inspect "," Integer  < "," Integer  > "]}," WillPaginate DataMapper CollectionMethods initialize_copy":{"type":"method","name":"initialize_copy","children":[],"call":[]}," WillPaginate DataMapper CollectionMethods new_collection":{"type":"method","name":"new_collection","children":[],"call":["col current_page= "," current_page "]}," WillPaginate DataMapper CollectionMethods to_a":{"type":"method","name":"to_a","children":[],"call":[" total_entries ","col total_entries ","col replace "," WillPaginate Collection  create "," per_page "," current_page "," paginated? "]}," WillPaginate DataMapper CollectionMethods total_pages":{"type":"method","name":"total_pages","children":[],"call":["(send\n  (send nil :total_entries) :/\n  (send\n    (send nil :per_page) :to_f)) ceil "," total_entries / "," per_page to_f "," per_page "," total_entries "]}," WillPaginate DataMapper CollectionMethods total_entries":{"type":"method","name":"total_entries","children":[],"call":[" new_collection count "," new_collection ","clean_query instance_variable_set "," query merge "," query "," offset + ","@array size "," offset ","@array size > "," current_page == "," current_page ","@array size < "," per_page "," loaded? "," query merge  instance_variable_set "]}," WillPaginate DataMapper CollectionMethods offset":{"type":"method","name":"offset","children":[],"call":[" query offset "," query "]}," WillPaginate DataMapper CollectionMethods per_page":{"type":"method","name":"per_page","children":[],"call":[" model per_page "," model "," query limit "," query "]}," WillPaginate DataMapper CollectionMethods paginated?":{"type":"method","name":"paginated?","children":[],"call":[" current_page nil? ! "," current_page nil? "," current_page "]}," WillPaginate DataMapper Pagination paginate":{"type":"method","name":"paginate","children":[],"call":[" all page "," all ","options []= ","per_page to_i ","options delete "," per_page "," raise ","options fetch ","options dup ","col total_entries= ","total to_i ","total strip empty? ","total strip ","total kind_of? ","total nil? ","options dup  []= ","options dup  delete ","options dup  fetch ","options dup  dup "," all page  total_entries= ","col options delete _entries= ","options delete  to_i ","options delete  strip empty? ","options delete  strip ","options delete  kind_of? ","options delete  nil? "]}," WillPaginate DataMapper Pagination page":{"type":"method","name":"page","children":[],"call":["col current_page= "," new_collection "," query merge "," query ","options []= "," query limit ","pagenum to_offset to_i ","pagenum to_offset "," per_page "," WillPaginate  PageNumber ","num nil? "," new_collection  current_page= "," new_ new_collection lection "," WillPaginate  PageNumber  to_offset to_i "," WillPaginate  PageNumber  to_offset "]}," underscore":{"type":"method","name":"underscore","children":[],"call":[" to_s gsub gsub gsub tr downcase "," to_s gsub gsub gsub tr "," to_s gsub gsub gsub "," to_s gsub gsub "," to_s gsub "," to_s "]}," Array paginate":{"type":"method","name":"paginate","children":[],"call":["pager replace "," [] to_a "," [] ","pager per_page ","pager offset ","WillPaginate Collection  create "," length ","options [] ","WillPaginate  per_page "," raise ","options inspect ","Hash  === "]}," WillPaginate ActiveRecord BaseMethods paginate_by_sql":{"type":"method","name":"paginate_by_sql","children":[],"call":["pager total_entries= "," count_by_sql ","count_query << "," connection adapter_name =~ "," connection adapter_name "," connection ","original_query sub ","pager total_entries ","pager replace "," find_by_sql ","query << ","pager offset ","pager per_page ","query dup "," sanitize_sql ","sql dup ","WillPaginate Collection  create ","options [] "," per_page "," raise ","options fetch ","pager offset + ","pager options [] _entries= ","original_query sub  << ","count_ sanitize_sql  << ","query dup  sub ","original_ sanitize_sql  sub ","pager options [] _entries "," sanitize_sql  << "," sanitize_sql  dup "]}," WillPaginate ActiveRecord Pagination page":{"type":"method","name":"page","children":[],"call":["rel current_page= ","rel limit ","rel limit_value ","rel offset ","pagenum to_offset to_i ","pagenum to_offset "," per_page "," WillPaginate  PageNumber ","num nil? "," scoped extending "," scoped ","rel extending "," all "," ActiveRecord Scoping ClassMethods  method_defined? ","(const\n  (const\n    (cbase) :ActiveRecord) :Scoping) ! "," ActiveRecord Relation  === ","rel limit  current_page= ","rel offset  current_page= "," scoped extending  current_page= ","rel extending  current_page= ","rel limit  limit ","rel offset  limit "," scoped extending  limit ","rel extending  limit ","rel limit  limit_value ","rel offset  limit_value "," scoped extending  limit_value ","rel extending  limit_value ","rel limit  offset ","rel offset  offset "," scoped extending  offset ","rel extending  offset "," WillPaginate  PageNumber  to_offset to_i "," WillPaginate  PageNumber  to_offset ","rel limit  extending ","rel offset  extending "," scoped extending  extending ","rel extending  extending "]}," WillPaginate ActiveRecord Pagination paginate":{"type":"method","name":"paginate","children":[],"call":["rel total_entries= ","total to_i ","total blank? ","rel wp_count_options= ","rel apply_finder_options ","options any? "," limit page "," limit ","per_page to_i ","options delete "," per_page "," raise ","options fetch ","options dup ","unsupported parameters: %p % ","options keys ","rel apply_finder_options  total_entries= "," limit page  total_entries= ","rel options delete _entries= ","options delete  to_i ","options delete  blank? ","rel apply_finder_options  wp_count_options= "," limit page  wp_count_options= ","rel wp_options delete = ","rel wp_count_options dup = ","rel apply_finder_options  apply_finder_options "," limit page  apply_finder_options ","rel apply_finder_options dup  ","options dup  any? ","options dup  delete ","options dup  fetch ","options dup  dup ","options dup  keys "]}," WillPaginate ActiveRecord RelationMethods to_a":{"type":"method","name":"to_a","children":[],"call":[" total_entries ","col total_entries ","col replace "," WillPaginate Collection  create "," limit_value "," current_page "," current_page nil? "]}," WillPaginate ActiveRecord RelationMethods clone":{"type":"method","name":"clone","children":[],"call":["other wp_count_options= ","other total_entries= ","other current_page= "," current_page ","other current_page "," copy_will_paginate_data "]}," WillPaginate ActiveRecord RelationMethods total_pages":{"type":"method","name":"total_pages","children":[],"call":["(send\n  (send nil :total_entries) :/\n  (send\n    (send nil :limit_value) :to_f)) ceil "," total_entries / "," limit_value to_f "," limit_value "," total_entries "]}," WillPaginate ActiveRecord RelationMethods empty?":{"type":"method","name":"empty?","children":[],"call":[" count <= "," offset_value "," count "," loaded? ! "," loaded? ","rel_count <= ","rel_count size <= ","rel_count size ","rel_count is_a? ! ","rel_count is_a? ","rel_count respond_to? ","result <= ","result size ","result is_a? ! ","result is_a? ","result respond_to? "," total_entries <= "," total_entries "," count  <= "," count  size <= "," count  size "," count  is_a? ! "," count  is_a? "," count  respond_to? ","result size  <= ","result size  size ","result size  is_a? ! ","result size  is_a? ","result size  respond_to? "]}," WillPaginate ActiveRecord RelationMethods size":{"type":"method","name":"size","children":[],"call":["(zsuper) min "," limit_value "," loaded? ! "," loaded? "," group_values empty? "," group_values "]}," WillPaginate ActiveRecord RelationMethods count":{"type":"method","name":"count","children":[],"call":["rel count ","rel apply_finder_options "," except ","excluded << "," eager_loading? "," limit_value "," select_for_count ","select !~ ","rel select_values join ","rel select_values ","rel select_values present? ","rel apply_finder_options  count "," except  count ","rel apply_finder_options  apply_finder_options "," except  apply_finder_options "," rel select_values join _for_count ","rel select_values join  !~ ","rel apply_finder_options  select_values join "," except  select_values join ","rel rel select_values join _values join ","rel apply_finder_options  select_values "," except  select_values ","rel rel select_values join _values ","rel apply_finder_options  select_values present? "," except  select_values present? ","rel rel select_values join _values present? "]}," WillPaginate ActiveRecord RelationMethods total_entries":{"type":"method","name":"total_entries","children":[],"call":["result size ","result is_a? ! ","result is_a? ","result respond_to? "," count "," offset_value + "," size "," offset_value "," size > "," current_page == "," current_page "," size < "," limit_value "," loaded? ","result size  size "," count  size ","result size  is_a? ! "," count  is_a? ! ","result size  is_a? "," count  is_a? ","result size  respond_to? "," count  respond_to? "]}," WillPaginate ActiveRecord RelationMethods offset":{"type":"method","name":"offset","children":[],"call":[" offset_value ","value nil? "]}," WillPaginate ActiveRecord RelationMethods limit":{"type":"method","name":"limit","children":[],"call":["rel offset ","rel current_page to_offset to_i ","rel current_page to_offset ","rel limit_value ","rel current_page "]}," WillPaginate ActiveRecord RelationMethods per_page":{"type":"method","name":"per_page","children":[],"call":[" limit "," limit_value ","value nil? "]}," WillPaginate ActionView LinkRenderer merge_get_params":{"type":"method","name":"merge_get_params","children":[],"call":[" symbolized_update ","@template params ","@template request get? ","@template request ","@template respond_to? ","@template request query_parameters ","@template request respond_to? "]}," WillPaginate Railtie ControllerRescuePatch rescue_from":{"type":"method","name":"rescue_from","children":[],"call":["args []= ","args [] name ","args [] ","args index "]}," WillPaginate Railtie ShowExceptionsPatch status_code_with_paginate":{"type":"method","name":"status_code_with_paginate","children":[],"call":[" status_code_without_paginate ","Rack Utils  status_code ","exception original_exception is_a? ","exception original_exception ","exception respond_to? ","exception is_a? ","original_method call ","original_method arity != ","original_method arity "," method ","actual_exception is_a? ","exception cause "," method  call "," method  arity != "," method  arity ","exception cause  is_a? "]}," Deprecation Hash check_deprecated":{"type":"method","name":"check_deprecated","children":[],"call":["WillPaginate Deprecation  warn ","msg call ","msg respond_to? ! ","msg respond_to? ","@deprecated [] ","msg call  call ","@deprecated []  call ","msg call  respond_to? ! ","@deprecated []  respond_to? ! ","msg call  respond_to? ","@deprecated []  respond_to? "]}," Deprecation Hash to_hash":{"type":"method","name":"to_hash","children":[],"call":[" Hash  new update "," Hash  new "]}," Deprecation Hash merge":{"type":"method","name":"merge","children":[],"call":[" to_hash update "," to_hash "]}," Deprecation Hash deprecate_key":{"type":"method","name":"deprecate_key","children":[],"call":["@deprecated []= "," Array each "," Array ","keys pop ","Proc  new "," block_given? "]}," Deprecation Hash []=":{"type":"method","name":"[]=","children":[],"call":[" check_deprecated "]}," Deprecation Hash initialize":{"type":"method","name":"initialize","children":[],"call":[" update "]}," Deprecation origin_of_call":{"type":"method","name":"origin_of_call","children":[],"call":["stack first ","line index != ","line index ","stack find ","File  expand_path "]}," Deprecation rails_logger":{"type":"method","name":"rails_logger","children":[],"call":["Rails  logger "]}," Deprecation warn":{"type":"method","name":"warn","children":[],"call":["logger warn "," rails_logger "," origin_of_call "]}," WillPaginate CollectionMethods out_of_bounds?":{"type":"method","name":"out_of_bounds?","children":[],"call":[" current_page > "," total_pages "," current_page "]}," WillPaginate CollectionMethods next_page":{"type":"method","name":"next_page","children":[],"call":[" current_page + "," current_page "," current_page < "," total_pages "]}," WillPaginate CollectionMethods previous_page":{"type":"method","name":"previous_page","children":[],"call":[" current_page - "," current_page "," current_page > "]}," WillPaginate CollectionMethods total_pages":{"type":"method","name":"total_pages","children":[],"call":["(send\n  (send nil :total_entries) :/\n  (send\n    (send nil :per_page) :to_f)) ceil "," total_entries / "," per_page to_f "," per_page "," total_entries "," total_entries zero? "]}," WillPaginate ActiveRecord RelationMethods copy_will_paginate_data":{"type":"method","name":"copy_will_paginate_data","children":[],"call":["other wp_count_options= ","other total_entries= ","other current_page= "," current_page ","other current_page "]}," WillPaginate ActiveRecord RelationMethods scoped":{"type":"method","name":"scoped","children":[],"call":[" copy_will_paginate_data "]}," WillPaginate ActiveRecord RelationMethods select_for_count":{"type":"method","name":"select_for_count","children":[],"call":["select !~ ","rel select_values join ","rel select_values ","rel select_values present? ","rel select_values join  !~ ","rel rel select_values join _values join ","rel rel select_values join _values ","rel rel select_values join _values present? "]}," WillPaginate ActiveRecord RelationMethods find_last":{"type":"method","name":"find_last","children":[],"call":[" to_a last "," to_a "," limit_value "," offset_value "," loaded? ! "," loaded? ","args empty? "]}," WillPaginate ActiveRecord RelationMethods first":{"type":"method","name":"first","children":[],"call":["rel first ","rel current_page= "," clone "," current_page "," clone  first "," clone  current_page= "]}," WillPaginate ViewHelpers pagination_options=":{"type":"method","name":"pagination_options=","children":[],"call":[]}," WillPaginate ViewHelpers pagination_options":{"type":"method","name":"pagination_options","children":[],"call":[]}," url":{"type":"method","name":"url","children":[],"call":["@template url ","@template request params except merge "," param_name ","@template request params except ","@template request params ","@template request ","@template url_for "," add_current_page_param ","@base_url_params dup "," merge_optional_params "," base_url_params ","@template request @template request params except merge  except merge ","@template request @template request params except merge  except ","@template request @template request params except merge  ","@base_url_@template request params except merge  dup ","@base_@base_url_params dup  dup ","@base_ base_url_params  dup "," merge_optional_@template request params except merge  "," base_url_@template request params except merge  "," base_@base_url_params dup  "," base_ base_url_params  "]}," WillPaginate ViewHelpers LinkRendererBase param_name":{"type":"method","name":"param_name","children":[],"call":["@options [] to_s ","@options [] "]}," WillPaginate ViewHelpers Base page_entries_info":{"type":"method","name":"page_entries_info","children":[],"call":["(str \"Displaying \") % ","collection total_entries ","collection offset + ","collection length ","collection offset ","collection size ","collection total_pages < ","collection total_pages ","options [] == ","options [] ","entry_name + ","entry_name pluralize ","entry_name respond_to? ","entry_name == ","collection first class name underscore gsub ","collection first class name underscore ","collection first class name ","collection first class ","collection first ","collection empty? "]}," WillPaginate ViewHelpers Base will_paginate":{"type":"method","name":"will_paginate","children":[],"call":["renderer to_html ","renderer prepare ","options [] ","options [] new ","options [] constantize new ","options [] constantize ","options []= ","options delete ","WillPaginate Deprecation  warn ","WillPaginate ViewHelpers  pagination_options merge ","WillPaginate ViewHelpers  pagination_options ","collection total_pages > ","collection total_pages ","WillPaginate ViewHelpers  pagination_options merge  [] ","WillPaginate ViewHelpers  pagination_options merge  [] new ","WillPaginate ViewHelpers  pagination_options merge  [] constantize new ","WillPaginate ViewHelpers  pagination_options merge  [] constantize ","WillPaginate ViewHelpers  pagination_options merge  []= ","WillPaginate ViewHelpers  pagination_options merge  delete ","WillPaginate ViewHelpers  pagination_WillPaginate ViewHelpers  pagination_options merge  merge ","WillPaginate ViewHelpers  pagination_WillPaginate ViewHelpers  pagination_options merge  "]}," parse_query_parameters":{"type":"method","name":"parse_query_parameters","children":[],"call":["Rack Utils  parse_nested_query "]}," get_request?":{"type":"method","name":"get_request?","children":[],"call":["@template request get? ","@template request "]}," add_current_page_param":{"type":"method","name":"add_current_page_param","children":[],"call":["url_params []= "," param_name to_sym "," param_name "," symbolized_update "," parse_query_parameters "," param_name index "]}," merge_optional_params":{"type":"method","name":"merge_optional_params","children":[],"call":[" symbolized_update ","@options [] "]}," base_url_params":{"type":"method","name":"base_url_params","children":[],"call":[" symbolized_update ","@template params "," get_request? "," default_url_params "," default_ default_url_params  "]}," default_url_params":{"type":"method","name":"default_url_params","children":[],"call":[]}," WillPaginate ViewHelpers ActionView infer_collection_from_controller":{"type":"method","name":"infer_collection_from_controller","children":[],"call":[" raise ","(str \"The \") + ","collection nil? "," instance_variable_get "," controller controller_name "," controller "," instance_variable_get  nil? "]}," WillPaginate ViewHelpers ActionView paginated_section":{"type":"method","name":"paginated_section","children":[],"call":[" concat ","block binding ","pagination + + ","pagination + "," capture "," ActionView Base  respond_to? "," will_paginate to_s "," will_paginate "," will_paginate to_s  + + "," will_paginate  + + "," will_paginate to_s  + "," will_paginate  + "]}," WillPaginate ViewHelpers ActionView page_entries_info":{"type":"method","name":"page_entries_info","children":[],"call":["(lvar :collection) try ","options symbolize_keys "," infer_collection_from_controller ","collection is_a? "]}," WillPaginate ViewHelpers ActionView will_paginate":{"type":"method","name":"will_paginate","children":[],"call":["(lvar :collection) try ","options symbolize_keys "," infer_collection_from_controller ","collection is_a? "]}," offset":{"type":"method","name":"offset","children":[],"call":["(send\n  (send nil :current_page) :-\n  (int 1)) * "," per_page "," current_page - "," current_page "]}," out_of_bounds?":{"type":"method","name":"out_of_bounds?","children":[],"call":[" current_page > "," total_pages "," current_page "]}," Finders DataMapper wp_count":{"type":"method","name":"wp_count","children":[],"call":[" count ","count_options empty? ","count_options update ","options [] ","options except ","options except  empty? ","options except  update "]}," Finders DataMapper wp_query":{"type":"method","name":"wp_query","children":[],"call":["pager total_entries= "," wp_count ","pager total_entries ","pager replace "," all ","options except update ","pager per_page ","pager offset ","options except "]}," WillPaginate Finders Base wp_parse_options":{"type":"method","name":"wp_parse_options","children":[],"call":["options [] "," per_page "," raise ","options key? ","Hash  === "]}," WillPaginate Finders Base paginated_each":{"type":"method","name":"paginated_each","children":[],"call":["options [] ","collection each size ","collection each "," paginate ","collection size < ","collection per_page ","collection size ","options []= ","options [] to_i ","(pair\n  (sym :order)\n  (str \"id\")) merge ","(pair\n  (sym :order)\n  (str \"id\")) merge  [] "," paginate  each size "," paginate  each "," paginate  size < "," paginate  per_page "," paginate  size ","(pair\n  (sym :order)\n  (str \"id\")) merge  []= ","(pair\n  (sym :order)\n  (str \"id\")) merge  [] to_i "]}," WillPaginate Finders Base paginate":{"type":"method","name":"paginate","children":[],"call":[" wp_query ","options except ","WillPaginate Collection  create "," wp_parse_options ","args pop ","args pop  except "," wp_parse_args pop  "]}," WillPaginate Finders Base per_page=":{"type":"method","name":"per_page=","children":[],"call":["limit to_i "]}," WillPaginate Finders Base per_page":{"type":"method","name":"per_page","children":[],"call":[]}," Finders ActiveResource instantiate_collection_with_collection":{"type":"method","name":"instantiate_collection_with_collection","children":[],"call":[" instantiate_collection_without_collection ","pager replace ","WillPaginate Collection  create ","collection [] ","(lvar :collectables) compact ","collectables kind_of? ","c is_a? ","collection values find ","collection values ","collection [] == ","collection is_a? ","(lvar :(lvar :collectables) compact ) compact ","(lvar :collectables) compact  kind_of? "]}," Finders ActiveResource wp_query":{"type":"method","name":"wp_query","children":[],"call":["pager replace "," find_every ","params []= ","pager per_page ","pager current_page ","options [] "," raise ","args inspect ","args first == ","args first ","args empty? "]}," Finders ActiveRecord wp_parse_count_options":{"type":"method","name":"wp_parse_count_options","children":[],"call":["count_options delete ","count_options [] blank? ","count_options [] ","count_options update ","options [] ","options except ","excludees << ","options []= ","klass primary_key ","klass table_name ","options [] gsub =~ ","options [] gsub ","options [] =~ ","options except  delete ","options except  [] blank? ","options except  [] ","options except  update "]}," Finders ActiveRecord wp_count":{"type":"method","name":"wp_count","children":[],"call":["count length ","count respond_to? ","counter call "," with_scope "," construct_attributes_from_arguments ","2 split ","finder =~ "," send ","klass respond_to? ","finder sub ","finder index == ","finder index "," count ","Proc  new "," wp_parse_count_options ","@reflection klass "," send  length "," send  respond_to? "," send er call ","@reflection klass  respond_to? ","  send  "," wp_parse_ send _options "," wp_parse_ wp_parse_count_options  ","@reflection @reflection klass  "]}," Finders ActiveRecord wp_query":{"type":"method","name":"wp_query","children":[],"call":["pager total_entries= "," wp_count ","pager total_entries ","pager replace "," send ","args << ","args empty? ","args first size ","args first ","pager total_entries ! ","Array  === ","finder == ","options except update ","pager per_page ","pager offset ","options except ","(or\n  (send\n    (lvar :options) :delete\n    (sym :finder))\n  (str \"find\")) to_s ","options delete ","(or\n  (send\n    (lvar :options) :delete\n    (sym :finder))\n  (str \"find\")) to_s  == ","(or\n  (send\n    (lvar :options) :delete\n    (sym :(or\n  (send\n    (lvar :options) :delete\n    (sym :finder))\n  (str \"find\")) to_s ))\n  (str \"find\")) to_s "]}," Finders ActiveRecord paginate_by_sql":{"type":"method","name":"paginate_by_sql","children":[],"call":["pager total_entries= "," count_by_sql ","count_query << ","(str \"oracle\") include? "," connection adapter_name downcase "," connection adapter_name "," connection ","original_query sub ","pager total_entries ","pager replace "," find_by_sql ","query << ","pager offset ","pager per_page ","query dup "," sanitize_sql ","sql dup ","WillPaginate Collection  create "," wp_parse_options ","original_query sub  << ","count_ sanitize_sql  << ","query dup  sub ","original_ sanitize_sql  sub "," sanitize_sql  << "," sanitize_sql  dup "]}," Finders ActiveRecord enable!":{"type":"method","name":"enable!","children":[],"call":[]}," WillPaginate Deprecation silence":{"type":"method","name":"silence","children":[],"call":[]}," WillPaginate Deprecation behavior=":{"type":"method","name":"behavior=","children":[],"call":[]}," WillPaginate Deprecation behavior":{"type":"method","name":"behavior","children":[],"call":[]}," WillPaginate Deprecation default_behavior":{"type":"method","name":"default_behavior","children":[],"call":[]}," WillPaginate Deprecation debug=":{"type":"method","name":"debug=","children":[],"call":[]}," WillPaginate Deprecation debug":{"type":"method","name":"debug","children":[],"call":[]}," constantize":{"type":"method","name":"constantize","children":[],"call":["Object  module_eval "," raise "," inspect "]}," Finders ActiveRecord BaseMethods paginate_by_sql":{"type":"method","name":"paginate_by_sql","children":[],"call":["pager total_entries= "," count_by_sql ","count_query << "," connection adapter_name =~ "," connection adapter_name "," connection ","original_query sub ","pager total_entries ","pager replace "," find_by_sql ","query << ","pager offset ","pager per_page ","query dup "," sanitize_sql ","sql dup ","WillPaginate Collection  create "," wp_parse_options ","original_query sub  << ","count_ sanitize_sql  << ","query dup  sub ","original_ sanitize_sql  sub "," sanitize_sql  << "," sanitize_sql  dup "]}," Finders ActiveRecord Pagination page":{"type":"method","name":"page","children":[],"call":["rel current_page= ","rel limit "," per_page ","rel limit_value ","rel offset ","(send\n  (lvar :pagenum) :-\n  (int 1)) * ","pagenum - "," scoped extending "," scoped "," raise ","pagenum < ","num to_i ","num nil? ","rel limit  current_page= ","rel offset  current_page= "," scoped extending  current_page= ","rel limit  limit ","rel offset  limit "," scoped extending  limit ","rel limit  limit_value ","rel offset  limit_value "," scoped extending  limit_value ","rel limit  offset ","rel offset  offset "," scoped extending  offset ","(send\n  (lvar :num to_i ) :-\n  (int 1)) * ","num to_i  - ","num to_i  < "]}," Finders ActiveRecord Pagination paginate":{"type":"method","name":"paginate","children":[],"call":["rel wp_count_options= ","rel apply_finder_options ","options any? "," limit page "," limit ","options except ","options [] "," wp_parse_options ","rel apply_finder_options  wp_count_options= "," limit page  wp_count_options= ","rel wp_count_options except = ","rel wp_options [] = ","rel apply_finder_options  apply_finder_options "," limit page  apply_finder_options ","rel apply_finder_options except  ","options except  any? ","options except  except ","options except  [] "," wp_parse_options except  "]}," Finders ActiveRecord RelationMethods to_a":{"type":"method","name":"to_a","children":[],"call":[" total_entries ","col total_entries ","col replace "," WillPaginate Collection  create "," limit_value "," current_page "," current_page nil? "]}," Finders ActiveRecord RelationMethods clone":{"type":"method","name":"clone","children":[],"call":["other total_entries= ","other current_page= "," current_page ","other current_page "]}," Finders ActiveRecord RelationMethods total_pages":{"type":"method","name":"total_pages","children":[],"call":["(send\n  (send nil :total_entries) :/\n  (send\n    (send nil :limit_value) :to_f)) ceil "," total_entries / "," limit_value to_f "," limit_value "," total_entries "]}," Finders ActiveRecord RelationMethods size":{"type":"method","name":"size","children":[],"call":["(zsuper) min "," limit_value "," loaded? ! "," loaded? "]}," Finders ActiveRecord RelationMethods total_entries":{"type":"method","name":"total_entries","children":[],"call":["rel count ","rel apply_finder_options "," except ","excluded << "," eager_loading? "," offset_value + "," size "," offset_value "," size > "," current_page == "," current_page "," size < "," limit_value "," loaded? ","rel apply_finder_options  count "," except  count ","rel apply_finder_options  apply_finder_options "," except  apply_finder_options "]}," Finders ActiveRecord RelationMethods offset":{"type":"method","name":"offset","children":[],"call":[" offset_value ","value nil? "]}," Finders ActiveRecord RelationMethods limit":{"type":"method","name":"limit","children":[],"call":["rel offset ","(send\n  (send\n    (lvar :rel) :current_page) :-\n  (int 1)) * ","rel limit_value ","rel current_page - ","rel current_page "]}," Finders ActiveRecord RelationMethods per_page":{"type":"method","name":"per_page","children":[],"call":[" limit "," limit_value ","value nil? "]}," WillPaginate Mongoid CollectionMethods offset":{"type":"method","name":"offset","children":[],"call":["@page_multiplier * "," per_page "]}," WillPaginate Mongoid CollectionMethods total_pages":{"type":"method","name":"total_pages","children":[],"call":["(send\n  (send nil :total_entries) :/\n  (send\n    (send nil :per_page) :to_f)) ceil "," total_entries / "," per_page to_f "," per_page "," total_entries "]}," WillPaginate Mongoid CollectionMethods total_entries":{"type":"method","name":"total_entries","children":[],"call":[" count "]}," WillPaginate Mongoid CriteriaMethods page":{"type":"method","name":"page","children":[],"call":[" paginate "]}," WillPaginate Mongoid CriteriaMethods per_page":{"type":"method","name":"per_page","children":[],"call":[" limit "," options [] "," options "," options [] == ","value == "]}," WillPaginate Mongoid CriteriaMethods paginate":{"type":"method","name":"paginate","children":[],"call":[" limit skip ","@page_multiplier * "," limit ","(or\n  (or\n    (send\n      (lvar :options) :[]\n      (sym :per_page))\n    (send nil :per_page))\n  (send\n    (const nil :WillPaginate) :per_page)) to_i ","WillPaginate  per_page "," per_page ","options [] "," current_page - "," current_page ","WillPaginate  PageNumber "," extend ","options delete "," current_page -  * "]}," WillPaginate Hanami included":{"type":"method","name":"included","children":[],"call":[]}," WillPaginate Hanami LinkRenderer build_query":{"type":"method","name":"build_query","children":[],"call":["Rack Utils  build_nested_query "]}," WillPaginate Hanami LinkRenderer request_env":{"type":"method","name":"request_env","children":[],"call":["@template params env ","@template params "]}," WillPaginate Hanami LinkRenderer url":{"type":"method","name":"url","children":[],"call":["str << << "," build_query ","str << ","params update ","@options [] "," request_env [] merge ","page to_s "," param_name to_s "," param_name "," request_env [] "," request_env ","File  join "," request_env [] to_s ","File  join  << << ","File  join  << "," request_env [] merge  update "]}," WillPaginate Hanami Helpers will_paginate":{"type":"method","name":"will_paginate","children":[],"call":[" raw ","options merge ","options [] ","options merge  merge ","options merge  [] "]}," WillPaginate PageNumber to_i":{"type":"method","name":"to_i","children":[],"call":[]}}