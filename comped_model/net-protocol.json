{" Net ReadAdapter call_block":{"type":"method","name":"call_block","children":[],"call":[]}," Net ReadAdapter <<":{"type":"method","name":"<<","children":[],"call":[" call_block "]}," Net ReadAdapter inspect":{"type":"method","name":"inspect","children":[],"call":[" class "]}," Net ReadAdapter initialize":{"type":"method","name":"initialize","children":[],"call":[]}," Net WriteAdapter printf":{"type":"method","name":"printf","children":[],"call":[" write "," sprintf "]}," Net WriteAdapter puts":{"type":"method","name":"puts","children":[],"call":[" write ","str chomp + ","str chomp "]}," Net WriteAdapter <<":{"type":"method","name":"<<","children":[],"call":[" write "]}," Net WriteAdapter write":{"type":"method","name":"write","children":[],"call":["@socket __send__ ","@writer call "]}," Net WriteAdapter inspect":{"type":"method","name":"inspect","children":[],"call":["@socket inspect "," class ","@writer inspect "]}," Net WriteAdapter initialize":{"type":"method","name":"initialize","children":[],"call":[]}," Net InternetMessageIO buffer_filling":{"type":"method","name":"buffer_filling","children":[],"call":["buf empty? ","buf size > ","buf size ","buf << ","src each ","src read ","src [] ","0 step ","src size - ","src size ","buf src read ize > ","buf src read ize ","src read rc each ","src read rc read ","src read rc [] ","0 src read tep ","src read rc src read ize - ","src read rc src read ize "]}," Net InternetMessageIO each_crlf_line":{"type":"method","name":"each_crlf_line","children":[],"call":["line chomp + ","line chomp ","@wbuf slice! "," buffer_filling ","@wbuf slice!  chomp + ","@wbuf slice!  chomp "]}," Net InternetMessageIO using_each_crlf_line":{"type":"method","name":"using_each_crlf_line","children":[],"call":[" write0 ","@written_bytes == "," dot_stuff + "," dot_stuff ","@wbuf chomp ","@wbuf empty? ! ","@wbuf empty? "," b "," b  chomp "," b  empty? ! "," b  empty? "]}," Net InternetMessageIO dot_stuff":{"type":"method","name":"dot_stuff","children":[],"call":["s sub "]}," Net InternetMessageIO write_message_by_block":{"type":"method","name":"write_message_by_block","children":[],"call":[" LOG "," LOG_on ","block call ","WriteAdapter  new "," using_each_crlf_line "," writing "," LOG_off "," method "]}," Net InternetMessageIO write_message":{"type":"method","name":"write_message","children":[],"call":[" LOG "," LOG_on "," write_message_0 "," using_each_crlf_line "," writing "," LOG_off ","src class "]}," Net InternetMessageIO write_message_0":{"type":"method","name":"write_message_0","children":[],"call":["@written_bytes - "," write0 "," dot_stuff "," each_crlf_line "]}," Net InternetMessageIO each_list_item":{"type":"method","name":"each_list_item","children":[],"call":["str chop ","(lvasgn :str\n  (send nil :readuntil\n    (str \"\\r\\n\"))) != "," readuntil "," readuntil  chop ","(lvasgn : readuntil \n  (send nil :readuntil\n    ( readuntil  \"\\r\\n\"))) != "]}," Net InternetMessageIO each_message_chunk":{"type":"method","name":"each_message_chunk","children":[],"call":[" LOG "," LOG_on ","line delete_prefix ","line size ","(lvasgn :line\n  (send nil :readuntil\n    (str \"\\r\\n\"))) != "," readuntil "," LOG_off "," readuntil  delete_prefix "," readuntil  size ","(lvasgn : readuntil \n  (send nil :readuntil\n    (str \"\\r\\n\"))) != "]}," Net InternetMessageIO initialize":{"type":"method","name":"initialize","children":[],"call":[]}," Net BufferedIO LOG":{"type":"method","name":"LOG","children":[],"call":["@debug_output << ","msg + "]}," Net BufferedIO LOG_on":{"type":"method","name":"LOG_on","children":[],"call":[]}," Net BufferedIO LOG_off":{"type":"method","name":"LOG_off","children":[],"call":[]}," Net BufferedIO write0":{"type":"method","name":"write0","children":[],"call":[" raise ","Net WriteTimeout  new ","(lvasgn :io\n  (send\n    (ivar :@io) :to_io)) wait_writable ","@io to_io ","str byteslice ","len -@ ","len < ","@written_bytes - ","strs size == ","i + ","strs size ","len == ","str bytesize ","@io write_nonblock ","strs each_with_index ","@debug_output << ","strs map join ","strs map ","(lvasgn :@io to_io \n  (send\n    (ivar :@@io to_io ) :to_@io to_io )) wait_writable ","@@io to_io  to_@io to_io  ","str byteslice  byteslice ","@io write_nonblock  -@ ","@io write_nonblock  < ","str byteslice s size == ","str byteslice s size ","@io write_nonblock  == ","str byteslice  bytesize ","@@io to_io  write_nonblock ","str byteslice s each_with_index ","str byteslice s map join ","str byteslice s map "]}," Net BufferedIO writing":{"type":"method","name":"writing","children":[],"call":["@debug_output << "]}," Net BufferedIO writeline":{"type":"method","name":"writeline","children":[],"call":[" write0 ","str + "," writing "]}," Net BufferedIO write":{"type":"method","name":"write","children":[],"call":[" write0 "," writing "]}," Net BufferedIO rbuf_consume":{"type":"method","name":"rbuf_consume","children":[],"call":["@debug_output << ","s dump ","@rbuf slice! "," b ","len == ","@rbuf size "," rbuf_flush ","@rbuf_offset == ","@rbuf bytesize ","@rbuf byteslice ","len nil? ","@rbuf slice!  dump ","@rbuf byteslice  dump ","@rbuf @rbuf slice! lice! ","@rbuf @rbuf byteslice lice! "," b  slice! ","@rbuf @rbuf slice! ize ","@rbuf @rbuf byteslice ize "," b  size "," rbuf_flu@rbuf slice! h "," rbuf_flu@rbuf byteslice h ","@rbuf_off@rbuf slice! et == ","@rbuf_off@rbuf byteslice et == "," b _offset == ","@rbuf byte@rbuf slice! ize ","@rbuf byte@rbuf byteslice ize "," b  bytesize ","@rbuf byte@rbuf slice! lice ","@rbuf byte@rbuf byteslice lice "," b  byteslice "]}," Net BufferedIO rbuf_fill":{"type":"method","name":"rbuf_fill","children":[],"call":[" raise ","Net ReadTimeout  new ","(lvasgn :io\n  (send\n    (ivar :@io) :to_io)) wait_writable ","@io to_io ","(lvasgn :io\n  (send\n    (ivar :@io) :to_io)) wait_readable ","rv clear ","@rbuf << ","rv equal? ","@io read_nonblock ","@rbuf empty? ","(lvasgn :@io to_io \n  (send\n    (ivar :@@io to_io ) :to_@io to_io )) wait_writable ","@@io to_io  to_@io to_io  ","(lvasgn :@io to_io \n  (send\n    (ivar :@@io to_io ) :to_@io to_io )) wait_readable ","@io read_nonblock  clear ","@io read_nonblock  equal? ","@@io to_io  read_nonblock "]}," Net BufferedIO readline":{"type":"method","name":"readline","children":[],"call":[" readuntil chop "," readuntil "]}," Net BufferedIO readuntil":{"type":"method","name":"readuntil","children":[],"call":[" rbuf_consume ","@rbuf size "," raise ","idx + ","terminator size "," rbuf_fill ","@rbuf index ","idx + - ","terminator bytesize ","@rbuf bytesize ","@rbuf index  + ","@rbuf index  + - "]}," Net BufferedIO read_all":{"type":"method","name":"read_all","children":[],"call":[" LOG "," rbuf_fill ","dest << ","s size "," rbuf_consume ","@rbuf size ","s bytesize "," rbuf_consume_all_shareable! "," rbuf_consume_all ","de rbuf_consume t << ","de rbuf_consume_all_shareable! t << ","de rbuf_consume_all t << "," rbuf_consume   rbuf_consume ize "," rbuf_consume_all_shareable!   rbuf_consume_all_shareable! ize "," rbuf_consume_all   rbuf_consume_all ize "," rbuf_con rbuf_consume ume "," rbuf_con rbuf_consume_all_shareable! ume "," rbuf_con rbuf_consume_all ume ","@rbuf  rbuf_consume ize ","@rbuf  rbuf_consume_all_shareable! ize ","@rbuf  rbuf_consume_all ize "," rbuf_consume  byte rbuf_consume ize "," rbuf_consume_all_shareable!  byte rbuf_consume_all_shareable! ize "," rbuf_consume_all  byte rbuf_consume_all ize "," rbuf_con rbuf_consume ume_all_ rbuf_consume hareable! "," rbuf_con rbuf_consume_all_shareable! ume_all_ rbuf_consume_all_shareable! hareable! "," rbuf_con rbuf_consume_all ume_all_ rbuf_consume_all hareable! "," rbuf_con rbuf_consume ume_all "," rbuf_con rbuf_consume_all_shareable! ume_all "," rbuf_con rbuf_consume_all ume_all "]}," Net BufferedIO read":{"type":"method","name":"read","children":[],"call":[" LOG "," raise ","dest << ","s size "," rbuf_consume ","len - "," rbuf_fill ","@rbuf size ","read_bytes + < ","read_bytes + ","s bytesize "," rbuf_consume_all_shareable! "," rbuf_size "," rbuf_consume_all "," rai rbuf_consume e "," rai rbuf_consume_all_shareable! e "," rai rbuf_consume_all e ","de rbuf_consume t << ","de rbuf_consume_all_shareable! t << ","de rbuf_consume_all t << "," rbuf_consume   rbuf_consume ize "," rbuf_consume_all_shareable!   rbuf_consume_all_shareable! ize "," rbuf_consume_all   rbuf_consume_all ize "," rbuf_con rbuf_consume ume "," rbuf_con rbuf_consume_all_shareable! ume "," rbuf_con rbuf_consume_all ume ","@rbuf  rbuf_consume ize ","@rbuf  rbuf_consume_all_shareable! ize ","@rbuf  rbuf_consume_all ize ","read_byte rbuf_consume  + < ","read_byte rbuf_consume_all_shareable!  + < ","read_byte rbuf_consume_all  + < ","read_byte rbuf_consume  + ","read_byte rbuf_consume_all_shareable!  + ","read_byte rbuf_consume_all  + "," rbuf_consume  byte rbuf_consume ize "," rbuf_consume_all_shareable!  byte rbuf_consume_all_shareable! ize "," rbuf_consume_all  byte rbuf_consume_all ize "," rbuf_con rbuf_consume ume_all_ rbuf_consume hareable! "," rbuf_con rbuf_consume_all_shareable! ume_all_ rbuf_consume_all_shareable! hareable! "," rbuf_con rbuf_consume_all ume_all_ rbuf_consume_all hareable! "," rbuf_ rbuf_consume ize "," rbuf_ rbuf_consume_all_shareable! ize "," rbuf_ rbuf_consume_all ize "," rbuf_con rbuf_consume ume_all "," rbuf_con rbuf_consume_all_shareable! ume_all "," rbuf_con rbuf_consume_all ume_all "]}," Net BufferedIO close":{"type":"method","name":"close","children":[],"call":["@io close "]}," Net BufferedIO closed?":{"type":"method","name":"closed?","children":[],"call":["@io closed? "]}," Net BufferedIO eof?":{"type":"method","name":"eof?","children":[],"call":["@io eof? "]}," Net BufferedIO inspect":{"type":"method","name":"inspect","children":[],"call":[" class "]}," Net BufferedIO initialize":{"type":"method","name":"initialize","children":[],"call":[" b "]}," Net WriteTimeout message":{"type":"method","name":"message","children":[],"call":["@io inspect "]}," Net WriteTimeout initialize":{"type":"method","name":"initialize","children":[],"call":[]}," Net ReadTimeout message":{"type":"method","name":"message","children":[],"call":["@io inspect "]}," Net ReadTimeout initialize":{"type":"method","name":"initialize","children":[],"call":[]}," Net Protocol ssl_socket_connect":{"type":"method","name":"ssl_socket_connect","children":[],"call":["s connect ","Process  clock_gettime - ","Process  clock_gettime ","s to_io wait_writable ","s to_io ","s to_io wait_readable ","s connect_nonblock "," raise ","timeout <= "]}," Net Protocol protocol_param":{"type":"method","name":"protocol_param","children":[],"call":[]}," Net BufferedIO rbuf_consume_all_shareable!":{"type":"method","name":"rbuf_consume_all_shareable!","children":[],"call":["@rbuf bytesize ","@rbuf byteslice ","@rbuf_offset == ","@r@rbuf byteslice  bytesize ","@r@rbuf byteslice  byteslice ","@rbuf bytesize  == ","@r@rbuf byteslice _offset == "]}," Net BufferedIO rbuf_size":{"type":"method","name":"rbuf_size","children":[],"call":["@rbuf bytesize - ","@rbuf bytesize "]}," Net BufferedIO rbuf_flush":{"type":"method","name":"rbuf_flush","children":[],"call":["@rbuf clear "]}," Net BufferedIO rbuf_consume_all":{"type":"method","name":"rbuf_consume_all","children":[],"call":[" rbuf_consume "," rbuf_size > "," rbuf_size "]}}