{" Logger Application run":{"type":"method","name":"run","children":[],"call":[" raise ","RuntimeError  new "]}," Logger Application log":{"type":"method","name":"log","children":[],"call":["@log add "]}," Logger Application level=":{"type":"method","name":"level=","children":[],"call":["@log level= "]}," Logger Application log=":{"type":"method","name":"log=","children":[],"call":[" set_log "]}," Logger Application set_log":{"type":"method","name":"set_log","children":[],"call":["@log level= ","@log progname= ","Logger  new ","Logger  new  level= ","Logger  new  progname= "]}," Logger Application logger=":{"type":"method","name":"logger=","children":[],"call":["@log level= ","@log progname= "]}," Logger Application logger":{"type":"method","name":"logger","children":[],"call":[]}," Logger Application start":{"type":"method","name":"start","children":[],"call":[" log ","status to_s ","(str \"Detected an exception. Stopping ... \") << ","$@ join ","$! class "," run "," run  to_s "]}," Logger Application initialize":{"type":"method","name":"initialize","children":[],"call":["@log level ","@log progname= ","Logger  new ","Logger  new  level ","Logger  new  progname= "]}," Logger LogDevice eod":{"type":"method","name":"eod","children":[],"call":["Time  mktime ","t mday ","t month ","t year "]}," Logger LogDevice previous_period_end":{"type":"method","name":"previous_period_end","children":[],"call":[" eod ","now - ","now mday * ","now mday ","(send\n  (send\n    (lvar :now) :wday) :+\n  (int 1)) * ","now wday + ","now wday ","1 * "]}," Logger LogDevice shift_log_period":{"type":"method","name":"shift_log_period","children":[],"call":[" create_logfile ","File  rename ","@dev close ","FileTest  exist? ","idx < ","period_end strftime "," create_logfile  close "]}," Logger LogDevice shift_log_age":{"type":"method","name":"shift_log_age","children":[],"call":[" create_logfile ","File  rename ","@dev close ","i + ","FileTest  exist? ","(send\n  (ivar :@shift_age) :-\n  (int 3)) downto ","@shift_age - "," create_logfile  close "]}," Logger LogDevice check_shift_log":{"type":"method","name":"check_shift_log","children":[],"call":[" shift_log_period ","@dev stat mtime <= ","@dev stat mtime ","@dev stat "," previous_period_end ","Time  now "," shift_log_age ","@dev stat size > ","@dev stat size ","@shift_age > ","@shift_age is_a? "," lock_shift_log "," next_rotate_time ","now >= "," previous_ previous_period_end  ","Time  Time  now  ","Time  now  >= "]}," Logger LogDevice add_log_header":{"type":"method","name":"add_log_header","children":[],"call":["file write ","# Logfile created on %s by %s\n % ","Time  now to_s ","Time  now ","file size == ","file size "]}," Logger LogDevice create_logfile":{"type":"method","name":"create_logfile","children":[],"call":[" add_log_header ","logdev sync= "," open ","File WRONLY  | | ","File WRONLY  | "," open_logfile ","logdev flock ","File  open ","File WRONLY  | | | ","logdev binmode "," open  sync= "," open_logfile  sync= ","File  open  sync= "," open  flock "," open_logfile  flock ","File  open  flock "," open  binmode "," open_logfile  binmode ","File  open  binmode "]}," Logger LogDevice open_logfile":{"type":"method","name":"open_logfile","children":[],"call":[" create_logfile "," open ","File WRONLY  | ","FileTest  exist? ","File  open "]}," Logger LogDevice close":{"type":"method","name":"close","children":[],"call":["@dev close ","@mutex synchronize "," synchronize "]}," Logger LogDevice write":{"type":"method","name":"write","children":[],"call":[" warn ","@dev write "," check_shift_log ","@dev respond_to? ","@mutex synchronize "," synchronize "]}," Logger LogDevice initialize":{"type":"method","name":"initialize","children":[],"call":["opt [] ","@dev sync= "," open_logfile ","log respond_to? ","LogDeviceMutex  new "," next_rotate_time ","Time  now ","@dev stat mtime ","@dev stat ","@dev respond_to? ","@shift_age is_a? "," set_dev "," mon_initialize "," open_logfile  sync= "," open_logfile  stat mtime "," open_logfile  stat "," open_logfile  respond_to? "]}," Logger Formatter msg2str":{"type":"method","name":"msg2str","children":[],"call":["msg inspect ","(begin\n  (send\n    (lvar :msg) :message)) << ","(or\n  (send\n    (lvar :msg) :backtrace)\n  (array)) join ","msg backtrace ","msg class ","msg message ","msg backtrace join "]}," Logger Formatter format_datetime":{"type":"method","name":"format_datetime","children":[],"call":["time strftime ","time strftime << ","%06d  % ","time usec ","@datetime_format nil? ","%Y-%m-%dT%H:%M:%S.%6N  freeze "]}," Logger Formatter call":{"type":"method","name":"call","children":[],"call":["Format  % "," msg2str "," format_datetime ","severity [] ","Process  pid "," sprintf "]}," Logger Formatter initialize":{"type":"method","name":"initialize","children":[],"call":[]}," Logger format_message":{"type":"method","name":"format_message","children":[],"call":["(or\n  (ivar :@formatter)\n  (ivar :@default_formatter)) call "]}," Logger format_severity":{"type":"method","name":"format_severity","children":[],"call":["SEV_LABEL  [] "]}," Logger close":{"type":"method","name":"close","children":[],"call":["@logdev close "]}," Logger unknown":{"type":"method","name":"unknown","children":[],"call":[" add "]}," Logger fatal":{"type":"method","name":"fatal","children":[],"call":[" add "]}," Logger error":{"type":"method","name":"error","children":[],"call":[" add "]}," Logger warn":{"type":"method","name":"warn","children":[],"call":[" add "]}," Logger info":{"type":"method","name":"info","children":[],"call":[" add "]}," Logger debug":{"type":"method","name":"debug","children":[],"call":[" add "]}," Logger <<":{"type":"method","name":"<<","children":[],"call":["@logdev write ","@logdev nil? "]}," Logger add":{"type":"method","name":"add","children":[],"call":["@logdev write "," format_message ","Time  now "," format_severity "," block_given? ","message nil? ","severity < ","@logdev nil? ","progname nil? "," level "]}," Logger initialize":{"type":"method","name":"initialize","children":[],"call":["LogDevice  new ","Formatter  new "," formatter= "," datetime_format= "," progname= "," level= ","logdev != "]}," Logger fatal?":{"type":"method","name":"fatal?","children":[],"call":["@level <= "," level <= "," level "]}," Logger error?":{"type":"method","name":"error?","children":[],"call":["@level <= "," level <= "," level "]}," Logger warn?":{"type":"method","name":"warn?","children":[],"call":["@level <= "," level <= "," level "]}," Logger info?":{"type":"method","name":"info?","children":[],"call":["@level <= "," level <= "," level "]}," Logger debug?":{"type":"method","name":"debug?","children":[],"call":["@level <= "," level <= "," level "]}," Logger datetime_format":{"type":"method","name":"datetime_format","children":[],"call":["@default_formatter datetime_format "]}," Logger datetime_format=":{"type":"method","name":"datetime_format=","children":[],"call":["@default_formatter datetime_format= "]}," Logger LogDevice lock_shift_log":{"type":"method","name":"lock_shift_log","children":[],"call":[" warn "," sleep ","retry_limit <= ","@dev sync= "," open_logfile ","@dev close ","File  identical? ","lock flock ","File  open ","File WRONLY  | "," open_logfile  sync= "," open_logfile  close "]}," Logger LogDevice set_dev":{"type":"method","name":"set_dev","children":[],"call":["@dev sync= "," open_logfile ","log respond_to? ","@dev binmode ","log path ","File  exist? "," open_logfile  sync= "," open_logfile  binmode ","log log path  "]}," Logger LogDevice reopen":{"type":"method","name":"reopen","children":[],"call":[" set_dev ","@dev close "," synchronize "]}," Logger Period previous_period_end":{"type":"method","name":"previous_period_end","children":[],"call":["Time  mktime ","t mday ","t month ","t year ","Time  mktime - ","SiD  / ","now month ","now year ","SiD  * + ","SiD  * ","now wday ","now mday "," raise ","shift_age inspect ","Time  mkTime  mktime - ime ","Time  mktime -  mday ","Time  mktime -  monTime  mktime - h ","Time  mktime -  year ","Time  mkTime  mktime - ime - ","now monTime  mktime - h ","shifTime  mktime - _age inspecTime  mktime -  "]}," Logger Period next_rotate_time":{"type":"method","name":"next_rotate_time","children":[],"call":["hour > ","Time  mktime ","t mday ","t month ","t year ","t hour ","t sec nonzero? ","t sec ","t min nonzero? ","t min ","t hour nonzero? ","Time  mktime + ","SiD  * ","now month ","now year ","7 - ","now wday ","now mday "," raise ","shift_age inspect ","t hour  > ","Time  mkTime  mktime ime ","Time  mkTime  mktime + ime ","Time  mktime  mday ","Time  mktime +  mday ","Time  mktime  monTime  mktime h ","Time  mktime +  monTime  mktime + h ","Time  mktime  year ","Time  mktime +  year ","Time  mktime  hour ","Time  mktime +  hour ","t t hour  ","Time  mktime  sec nonzero? ","Time  mktime +  sec nonzero? ","Time  mktime  sec ","Time  mktime +  sec ","Time  mktime  min nonzero? ","Time  mktime +  min nonzero? ","Time  mktime  min ","Time  mktime +  min ","Time  mktime  hour nonzero? ","Time  mktime +  hour nonzero? ","t t hour  nonzero? ","Time  mkTime  mktime ime + ","Time  mkTime  mktime + ime + ","now monTime  mktime h ","now monTime  mktime + h ","shifTime  mktime _age inspecTime  mktime  ","shifTime  mktime + _age inspecTime  mktime +  "]}," Logger reopen":{"type":"method","name":"reopen","children":[],"call":["@logdev reopen "]}," Logger level=":{"type":"method","name":"level=","children":[],"call":[" raise ","severity to_s downcase ","severity to_s ","severity is_a? ","Severity  coerce "]}," Logger fatal!":{"type":"method","name":"fatal!","children":[],"call":[" level= "]}," Logger error!":{"type":"method","name":"error!","children":[],"call":[" level= "]}," Logger warn!":{"type":"method","name":"warn!","children":[],"call":[" level= "]}," Logger info!":{"type":"method","name":"info!","children":[],"call":[" level= "]}," Logger debug!":{"type":"method","name":"debug!","children":[],"call":[" level= "]}," Logger with_level":{"type":"method","name":"with_level","children":[],"call":["@level_override delete ","Fiber  current ","@level_override []= ","Severity  coerce "," level "]}," Logger level":{"type":"method","name":"level","children":[],"call":["@level_override [] ","Fiber  current "]}," Logger Severity coerce":{"type":"method","name":"coerce","children":[],"call":[]}}