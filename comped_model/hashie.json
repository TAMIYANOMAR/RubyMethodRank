{" Hashie Mash convert_value":{"type":"method","name":"convert_value","children":[],"call":[" convert_value ","val collect ","Hashie Mash  new ","val dup "," class new "," class "," class subkey_class new merge "," class subkey_class new "," class subkey_class ","val map ","Array  new "," convert_val dup ue ","val dup  collect ","val dup  dup ","val dup  map "]}," Hashie Mash convert_key":{"type":"method","name":"convert_key","children":[],"call":["key to_s ","key respond_to? "]}," Hashie Mash method_missing":{"type":"method","name":"method_missing","children":[],"call":[" default ","method_name to_s match ","method_name to_s "," [] "," key? "," initializing_reader ","match [] ","args size == ","args size "," []= ","args first "," [] ! ! "," [] ! "," underbang_reader ","ALLOWED_SUFFIXES  join "," method_suffix "," assign_property ","_ freeze ","! freeze ","? freeze ","= freeze "," method_name_and_suffix ","method_name to_s method_name to_s match  ","method_name to_s match  [] "]}," Hashie Mash to_hash":{"type":"method","name":"to_hash","children":[],"call":["Hash  new merge ","Hash  new "," default "]}," Hashie Mash update":{"type":"method","name":"update","children":[],"call":[" regular_writer "," convert_value "," convert_key "," send "," convert_key + "," respond_to? ","other_hash each_pair "]}," Hashie Mash deep_update":{"type":"method","name":"deep_update","children":[],"call":[" []= "," convert_value ","other_hash [] "," [] deep_merge "," [] ","other_hash [] is_a? "," [] is_a? ","Hashie Mash  new to_mash ","Hashie Mash  new "," convert_key ","other_hash each_pair ","Hashie Hash  [] stringify_keys! ","Hashie Hash  [] "," regular_writer "," regular_reader deep_update "," regular_reader ","v is_a? "," regular_reader is_a? ","blk call "," custom_writer "," custom_reader deep_update "," custom_reader "," key? "," _deep_update ","other_hashes each "," convert_blk call  "," convert_ convert_value  ","Hashie Hash  [] stringify_keys!  [] ","Hashie Hash  [] stringify_keys!  [] is_a? "," convert_ convert_key ey "," convert_ convert_key  ","Hashie Hash  [] stringify_keys!  each_pair ","Hashie Hash  [] stringify_ convert_key eys! ","Hashie Hash  [] stringify_ convert_key s! ","bl convert_key  call ","  convert_key ey? ","  convert_key ? ","Hashie Hash  [] stringify_keys! es each "]}," Hashie Mash deep_merge":{"type":"method","name":"deep_merge","children":[],"call":[" dup deep_merge! "," dup "," dup deep_update "]}," Hashie Mash inspect":{"type":"method","name":"inspect","children":[],"call":["ret << "," [] inspect "," [] "," keys sort each "," keys sort "," keys "," class to_s "," class "]}," Hashie Mash key?":{"type":"method","name":"key?","children":[],"call":[" picky_key? "," convert_key "]}," Hashie Mash dup":{"type":"method","name":"dup","children":[],"call":["Mash  new "," default "," class new "," class "," default_proc "]}," Hashie Mash initializing_reader":{"type":"method","name":"initializing_reader","children":[],"call":[" [] "," []= ","Hashie Mash  new "," key? "," regular_reader "," regular_writer "," convert_key "," class new "," class "]}," Hashie Mash []=":{"type":"method","name":"[]=","children":[],"call":[" regular_writer "," convert_value "," convert_key "," convert_ convert_key  "]}," Hashie Mash []":{"type":"method","name":"[]","children":[],"call":[" regular_reader "," convert_key "," block_given? "," convert_ convert_key  "]}," Hashie Mash default":{"type":"method","name":"default","children":[],"call":[" [] "," key? ","key to_s ","key is_a? "]}," Hashie Mash id":{"type":"method","name":"id","children":[],"call":[" [] "," key? "]}," Hashie Mash initialize":{"type":"method","name":"initialize","children":[],"call":[" deep_update "]}," Hashie HashExtensions to_mash":{"type":"method","name":"to_mash","children":[],"call":["Hashie Mash  new "," Hashie Mash  new "]}," Hashie HashExtensions hashie_stringify_keys":{"type":"method","name":"hashie_stringify_keys","children":[],"call":[" dup stringify_keys! "," dup "]}," Hashie HashExtensions hashie_stringify_keys!":{"type":"method","name":"hashie_stringify_keys!","children":[],"call":[" []= "," delete ","k to_s "," keys each "," keys ","String  === "]}," Hashie HashExtensions included":{"type":"method","name":"included","children":[],"call":[]}," Hashie Dash []=":{"type":"method","name":"[]=","children":[],"call":[" raise "," class property? "," class ","property to_sym "," property_exists? ","property to_s "," assert_property_exists! "," assert_property_required! "]}," Hashie Dash []":{"type":"method","name":"[]","children":[],"call":[" class defaults [] ","property_name to_sym "," class defaults "," class ","property to_sym "," property_exists? ","property to_s "," assert_property_exists! "," block_given? "," []= ","value call ","value is_a? "]}," Hashie Dash defaults":{"type":"method","name":"defaults","children":[],"call":[]}," Hashie Dash property?":{"type":"method","name":"property?","children":[],"call":[]}," Hashie Dash properties":{"type":"method","name":"properties","children":[],"call":[]}," Hashie Dash property":{"type":"method","name":"property","children":[],"call":[]}," Hashie PrettyInspect hashie_inspect":{"type":"method","name":"hashie_inspect","children":[],"call":["ret << "," [] inspect "," [] "," keys sort each "," keys sort "," keys "," class to_s "," class "," stringify_keys keys sort each "," stringify_keys keys sort "," stringify_keys keys "," stringify_keys "]}," Hashie PrettyInspect included":{"type":"method","name":"included","children":[],"call":[]}," Hashie Dash initialize":{"type":"method","name":"initialize","children":[],"call":[" send ","attributes each_pair "," class defaults [] ","prop to_sym "," class defaults "," class "," puts "," class properties each "," class properties "," class defaults each_pair "," []= "," assert_required_properties_set! "," initialize_attributes ","value dup "," assert_required_attributes_set! ","val call ","val arity > ","val arity ","val is_a? ","val arity == ","value dup ue dup ","value dup  call ","value dup  arity > ","value dup  arity ","value dup  is_a? ","value dup  arity == "]}," Hashie Dash property_exists?":{"type":"method","name":"property_exists?","children":[],"call":[" raise "," class property? ","property to_sym "," class "]}," Hashie Clash method_missing":{"type":"method","name":"method_missing","children":[],"call":[" merge_store ","name to_sym ","args any? "," [] "," raise "," []= ","Clash  new "," [] is_a? ! "," [] is_a? "," [] nil? ","name [] to_sym ","name [] ","args empty? ","name match ","name to_s "," fail "," class new "," class ","name to_s end_with? ","name to_s  to_sym ","name to_s  [] to_sym ","name to_s  [] ","name to_s  match ","name to_s  to_s ","name to_s  to_s end_with? "]}," Hashie Clash merge_store":{"type":"method","name":"merge_store","children":[],"call":[" []= ","key to_sym "," [] merge "," [] ","val is_a? "," [] is_a? ","args first ","args length "," class new merge "," class new "," class "," [] merge  is_a? ","args first  is_a? "," class new merge  is_a? "]}," Hashie Clash id":{"type":"method","name":"id","children":[],"call":[" method_missing "]}," Hashie Clash _end!":{"type":"method","name":"_end!","children":[],"call":[" _parent "]}," Hashie Clash initialize":{"type":"method","name":"initialize","children":[],"call":[" []= ","k to_sym ","other_hash each_pair "]}," Hashie Hash to_json":{"type":"method","name":"to_json","children":[],"call":[" to_hash to_json "," to_hash "]}," Hashie Hash to_hash":{"type":"method","name":"to_hash","children":[],"call":["out []= "," [] "," [] to_hash ","Hashie Hash  === "," keys each "," keys ","k to_s ","k to_sym ","options [] ","Hash  === ","out [] << ","array_object to_hash ","out [] "," [] each "," [] is_a? ","assignment_key to_sym "," flexibly_convert_to_hash "," [] respond_to? ","k to_s to_sym ","array_object is_a? "," each_key "," maybe_convert_to_hash ","k respond_to? "," k to_s s each "," k to_sym s each "," k to_s eys each "," k to_sym eys each "," k to_s s "," k to_sym s "," k to_s eys "," k to_sym eys ","k to_s  to_s ","k to_sym  to_s ","k to_s  to_sym ","k to_sym  to_sym ","assignment_k to_s  to_sym ","assignment_k to_sym  to_sym ","assignment_k to_s ey to_sym ","assignment_k to_sym ey to_sym ","assignment_key to_sym  to_sym ","k to_s  to_s to_sym ","k to_sym  to_s to_sym "," each_k to_s  "," each_k to_sym  "," each_k to_s ey "," each_k to_sym ey ","k to_s  respond_to? ","k to_sym  respond_to? "]}," Hashie Mash respond_to?":{"type":"method","name":"respond_to?","children":[],"call":[" key? ","method_name to_s slice ","method_name to_s "," prefix_method? "]}," Hashie Trash property_exists?":{"type":"method","name":"property_exists?","children":[],"call":[" raise "," class property? ","property to_sym "," class "," fail "," fail_no_property_error! "]}," Hashie Trash translations":{"type":"method","name":"translations","children":[],"call":[]}," Hashie Trash []=":{"type":"method","name":"[]=","children":[],"call":[" property_exists? "," send "," class translations include? ","property to_sym "," class translations "," class "," class transforms [] call "," class transforms [] "," class transforms "," class transforms key? "," class translations key? "," class transformed_property "," class transformation_exists? "," class translation_exists? "]}," Hashie Trash property":{"type":"method","name":"property","children":[],"call":[]}," Hashie Mash shallow_update":{"type":"method","name":"shallow_update","children":[],"call":[" regular_writer "," convert_value "," convert_key ","other_hash each_pair "]}," Hashie Mash shallow_merge":{"type":"method","name":"shallow_merge","children":[],"call":[" dup shallow_update "," dup "]}," Hashie Dash assert_property_exists!":{"type":"method","name":"assert_property_exists!","children":[],"call":[" raise "," class property? "," class "," fail "," fail_no_property_error! "]}," Hashie Dash inherited":{"type":"method","name":"inherited","children":[],"call":[]}," Hashie Mash delete":{"type":"method","name":"delete","children":[],"call":[" convert_key "]}," Hashie Mash type":{"type":"method","name":"type","children":[],"call":[" [] "," key? "]}," Hashie Dash assert_property_required!":{"type":"method","name":"assert_property_required!","children":[],"call":[" raise ","value nil? "," class required? "," class "," fail "," fail_property_required_error! "," required? "]}," Hashie Dash assert_property_set!":{"type":"method","name":"assert_property_set!","children":[],"call":[" raise "," send nil? "," send "," fail "," fail_property_required_error! "," required? "]}," Hashie Dash assert_required_properties_set!":{"type":"method","name":"assert_required_properties_set!","children":[],"call":[" assert_property_set! "," class required_properties each "," class required_properties "," class "]}," Hashie Dash required?":{"type":"method","name":"required?","children":[],"call":["(lvar :condition) ! ! ","(lvar :condition) ! ","(send nil :send\n  (lvar :condition)) ! ! ","(send nil :send\n  (lvar :condition)) ! "," send ","(send nil :instance_exec\n  (block-pass\n    (lvar :condition))) ! ! ","(send nil :instance_exec\n  (block-pass\n    (lvar :condition))) ! "," instance_exec "," class required_properties [] [] "," class required_properties [] "," class required_properties "," class "," class required? ","condition ! ! ","condition ! "," send ! ! "," send ! "," instance_exec ! ! "," instance_exec ! ","(lvar : class required_properties [] [] ) ! ! ","(lvar : class required_properties [] [] ) ! ","(send nil :send\n  (lvar : class required_properties [] [] )) ! ! ","(send nil :send\n  (lvar : class required_properties [] [] )) ! ","(send nil :instance_exec\n  (block-pass\n    (lvar : class required_properties [] [] ))) ! ! ","(send nil :instance_exec\n  (block-pass\n    (lvar : class required_properties [] [] ))) ! "," class required_properties [] []  ! ! "," class required_properties [] []  ! "]}," Hashie Mash subkey_class":{"type":"method","name":"subkey_class","children":[],"call":[]}," Hashie Trash initialize_attributes":{"type":"method","name":"initialize_attributes","children":[],"call":[" []= "," class translations include? ","k to_sym "," class translations "," class ","attributes dup delete_if ","attributes dup "," class translations_hash include? "," class translations_hash "]}," Hashie Trash transforms":{"type":"method","name":"transforms","children":[],"call":[]}," Hashie Mash fetch":{"type":"method","name":"fetch","children":[],"call":[" block_given? "," [] "," convert_key "]}," Hashie Mash underbang_reader":{"type":"method","name":"underbang_reader","children":[],"call":[" class new "," class "," regular_reader "," key? "," convert_key "]}," Hashie Mash object_id":{"type":"method","name":"object_id","children":[],"call":[" [] "]}," Hashie Extensions Structure ClassMethods permitted_keys":{"type":"method","name":"permitted_keys","children":[],"call":[]}," Hashie Extensions Structure ClassMethods key":{"type":"method","name":"key","children":[],"call":[" permitted_keys ","(or-asgn\n  (ivasgn :@default_values)\n  (hash)) []= ","options delete ","options [] ","(or-asgn\n  (ivasgn :@permitted_keys)\n  (array)) << "]}," Hashie Extensions Structure included":{"type":"method","name":"included","children":[],"call":[]}," Hashie Extensions MethodAccess included":{"type":"method","name":"included","children":[],"call":[]}," Hashie Extensions MethodQuery method_missing":{"type":"method","name":"method_missing","children":[],"call":[" [] ","1 to_sym "," key? ","name to_s =~ ","name to_s ","args empty? ","Regexp  last_match [] to_sym ","Regexp  last_match [] ","Regexp  last_match ","(or\n  (send\n    (self) :[]\n    (lvar :key))\n  (send\n    (self) :[]\n    (send\n      (lvar :key) :to_sym))) ! ! ","(or\n  (send\n    (self) :[]\n    (lvar :key))\n  (send\n    (self) :[]\n    (send\n      (lvar :key) :to_sym))) ! ","key to_sym "," indifferent_key? "," key_from_query_method "," query_method? ","  key_from_query_method ? ","(or\n  (send\n    (self) :[]\n    (lvar : key_from_query_method ))\n  (send\n    (self) :[]\n    (send\n      (lvar : key_from_query_method ) :to_sym))) ! ! ","(or\n  (send\n    (self) :[]\n    (lvar : key_from_query_method ))\n  (send\n    (self) :[]\n    (send\n      (lvar : key_from_query_method ) :to_sym))) ! "," key_from_query_method  to_sym "," indifferent_ key_from_query_method ? ","  key_from_query_method _from_query_method "]}," Hashie Extensions MethodQuery respond_to?":{"type":"method","name":"respond_to?","children":[],"call":[" key? ","1 to_sym ","name to_s =~ ","name to_s ","Regexp  last_match [] to_sym ","Regexp  last_match [] ","Regexp  last_match "," indifferent_key? "," key_from_query_method "," query_method? "]}," Hashie Extensions MethodWriter convert_key":{"type":"method","name":"convert_key","children":[],"call":["key to_s "]}," Hashie Extensions MethodWriter method_missing":{"type":"method","name":"method_missing","children":[],"call":[" []= ","args first "," convert_key ","name to_s =~ ","name to_s ","args size == ","args size ","Regexp  last_match [] ","Regexp  last_match "]}," Hashie Extensions MethodWriter respond_to?":{"type":"method","name":"respond_to?","children":[],"call":["name to_s =~ ","name to_s "]}," Hashie Extensions MethodReader method_missing":{"type":"method","name":"method_missing","children":[],"call":[" [] ","name to_sym "," key? ","name to_s ","kname to_sym ","sname [] ","sname [] == ","sname []  to_sym ","name to_s  [] ","name to_s  [] == "]}," Hashie Extensions MethodReader respond_to?":{"type":"method","name":"respond_to?","children":[],"call":[" key? ","name to_sym ","name to_s "]}," Hashie Extensions MergeInitializer initialize":{"type":"method","name":"initialize","children":[],"call":[" []= ","hash each "]}," Hashie Extensions KeyConversion included":{"type":"method","name":"included","children":[],"call":[]}," Hashie Extensions SymbolizeKeys symbolize_keys_recursively!":{"type":"method","name":"symbolize_keys_recursively!","children":[],"call":["object symbolize_keys! ","object respond_to? "," symbolize_keys_recursively! ","object each "," Array  === "," class === "," class "]}," Hashie Extensions SymbolizeKeys symbolize_keys":{"type":"method","name":"symbolize_keys","children":[],"call":[" dup symbolize_keys! "," dup ","SymbolizeKeys  symbolize_keys "]}," Hashie Extensions SymbolizeKeys symbolize_keys!":{"type":"method","name":"symbolize_keys!","children":[],"call":[" []= "," delete ","k to_sym "," symbolize_keys_recursively! "," [] "," keys each "," keys ","SymbolizeKeys  symbolize_keys! "]}," Hashie Extensions StringifyKeys stringify_keys_recursively!":{"type":"method","name":"stringify_keys_recursively!","children":[],"call":["object stringify_keys! ","object respond_to? "," stringify_keys_recursively! ","object each "," Array  === "," class === "," class ","object []= ","object delete ","k to_s ","object [] ","object keys each ","object keys "," Hash  === "]}," Hashie Extensions StringifyKeys stringify_keys":{"type":"method","name":"stringify_keys","children":[],"call":[" dup stringify_keys! "," dup ","StringifyKeys  stringify_keys "]}," Hashie Extensions StringifyKeys stringify_keys!":{"type":"method","name":"stringify_keys!","children":[],"call":[" []= "," delete ","k to_s "," stringify_keys_recursively! "," [] "," keys each "," keys ","StringifyKeys  stringify_keys! "]}," Hashie Extensions IndifferentAccess hash_with_indifference?":{"type":"method","name":"hash_with_indifference?","children":[],"call":["other indifferent_access? ","other respond_to? ","other is_a? "]}," Hashie Extensions IndifferentAccess hash_lacking_indifference?":{"type":"method","name":"hash_lacking_indifference?","children":[],"call":["(and\n  (send\n    (lvar :other) :respond_to?\n    (sym :indifferent_access?))\n  (send\n    (lvar :other) :indifferent_access?)) ! ","other indifferent_access? ","other respond_to? ","other is_a? "]}," Hashie Extensions IndifferentAccess indifferent_access?":{"type":"method","name":"indifferent_access?","children":[],"call":[]}," Hashie Extensions IndifferentAccess indifferent_values_at":{"type":"method","name":"indifferent_values_at","children":[],"call":[" [] ","indices map "]}," Hashie Extensions IndifferentAccess indifferent_key?":{"type":"method","name":"indifferent_key?","children":[],"call":[" regular_key? "," convert_key "]}," Hashie Extensions IndifferentAccess indifferent_delete":{"type":"method","name":"indifferent_delete","children":[],"call":[" regular_delete "," convert_key "]}," Hashie Extensions IndifferentAccess indifferent_fetch":{"type":"method","name":"indifferent_fetch","children":[],"call":[" regular_fetch "," convert_key "]}," Hashie Extensions IndifferentAccess indifferent_writer":{"type":"method","name":"indifferent_writer","children":[],"call":[" regular_writer "," convert_value "," convert_key "," indifferent_value "]}," Hashie Extensions IndifferentAccess indifferent_update":{"type":"method","name":"indifferent_update","children":[],"call":[" []= ","other_hash each_pair "," regular_update "," hash_with_indifference? "]}," Hashie Extensions IndifferentAccess indifferent_default":{"type":"method","name":"indifferent_default","children":[],"call":[" regular_default "," [] "," convert_key "," key? "]}," Hashie Extensions IndifferentAccess convert_value":{"type":"method","name":"convert_value","children":[],"call":["value dup replace "," convert_value ","value map ","value dup ","value is_a? ","IndifferentAccess  inject "," hash_lacking_indifference? ","value replace ","IndifferentAccess  inject! "]}," Hashie Extensions IndifferentAccess convert!":{"type":"method","name":"convert!","children":[],"call":[" regular_writer "," convert_value "," regular_delete "," convert_key "," keys each "," keys "," indifferent_value "," indifferent_writer "]}," Hashie Extensions IndifferentAccess convert_key":{"type":"method","name":"convert_key","children":[],"call":["key to_s ","IndifferentAccess  convert_key "]}," Hashie Extensions IndifferentAccess inject":{"type":"method","name":"inject","children":[],"call":[]}," Hashie Extensions IndifferentAccess inject!":{"type":"method","name":"inject!","children":[],"call":[]}," Hashie Extensions IndifferentAccess included":{"type":"method","name":"included","children":[],"call":[]}," Hashie Extensions DeepMerge deep_merge!":{"type":"method","name":"deep_merge!","children":[],"call":[" []= ","tv deep_merge ","v is_a? ","tv is_a? ","(sclass\n  (begin\n    (lvasgn :tv\n      (send\n        (self) :[]\n        (lvar :k))))\n  (self)) send "," [] ","other_hash each "," _recursive_merge ","other_hash is_a? "," []  deep_merge "," []  is_a? ","(sclass\n  (begin\n    (lvasgn : [] \n      (send\n        (self) :[]\n        (lvar :k))))\n  (self)) send "]}," Hashie Extensions DeepMerge deep_merge":{"type":"method","name":"deep_merge","children":[],"call":["h deep_merge! ","(sclass\n  (begin\n    (lvasgn :h\n      (send nil :dup)))\n  (self)) send "," dup "," dup deep_merge! ","copy deep_merge! ","copy extend ","copy respond_to? "," _deep_dup "," dup  deep_merge! ","(sclass\n  (begin\n    (lvasgn : dup \n      (send nil :dup)))\n  (self)) send "," _deep_dup  deep_merge! "," dup  extend "," _deep_dup  extend "," dup  respond_to? "," _deep_dup  respond_to? "]}," Hashie Extensions Coercion ClassMethods value_coercion":{"type":"method","name":"value_coercion","children":[],"call":[" lenient_value_coercions [] "," lenient_value_coercions "," strict_value_coercions [] "," strict_value_coercions ","value class "]}," Hashie Extensions Coercion ClassMethods lenient_value_coercions":{"type":"method","name":"lenient_value_coercions","children":[],"call":[]}," Hashie Extensions Coercion ClassMethods strict_value_coercions":{"type":"method","name":"strict_value_coercions","children":[],"call":[]}," Hashie Extensions Coercion ClassMethods coerce_value":{"type":"method","name":"coerce_value","children":[],"call":["from superclass ","(or-asgn\n  (ivasgn :@lenient_value_coercions)\n  (hash)) []= ","from superclass != ","(or-asgn\n  (ivasgn :@strict_value_coercions)\n  (hash)) []= ","options [] ","(pair\n  (sym :strict)\n  (true)) merge "," coerce_value ","ABSTRACT_CORE_TYPES  [] each ","ABSTRACT_CORE_TYPES  [] ","ABSTRACT_CORE_TYPES  key? "," lenient_value_coercions []= "," lenient_value_coercions "," strict_value_coercions []= "," strict_value_coercions ","from superclass  superclass ","from superclass  superclass != ","(pair\n  (sym :strict)\n  (true)) merge  [] "]}," Hashie Extensions Coercion ClassMethods key_coercion":{"type":"method","name":"key_coercion","children":[],"call":[" key_coercions [] "," key_coercions ","key to_sym "]}," Hashie Extensions Coercion ClassMethods key_coercions":{"type":"method","name":"key_coercions","children":[],"call":[]}," Hashie Extensions Coercion ClassMethods coerce_key":{"type":"method","name":"coerce_key","children":[],"call":["@key_coercions []= ","attrs each ","attrs pop "," key_coercions []= "," key_coercions "]}," Hashie Extensions Coercion InstanceMethods []=":{"type":"method","name":"[]=","children":[],"call":["into new ","into coerce ","into respond_to? "," class value_coercion "," class "," class key_coercion "," class into new _coercion "," class into coerce _coercion "]}," Hashie Extensions Coercion included":{"type":"method","name":"included","children":[],"call":[]}," Hashie Dash initialize_attributes":{"type":"method","name":"initialize_attributes","children":[],"call":[" []= ","attributes each_pair "," update_attributes ","value nil? ","attributes reject "," update_attributes! "]}," Hashie Mash replace":{"type":"method","name":"replace","children":[],"call":[" []= ","other_hash each "," delete ","(send\n  (send nil :keys) :-\n  (send\n    (lvar :other_hash) :keys)) each "," keys - ","other_hash keys "," keys "]}," Hashie Extensions IndifferentAccess indifferent_replace":{"type":"method","name":"indifferent_replace","children":[],"call":[" []= ","other_hash each "," delete ","(send\n  (send nil :keys) :-\n  (send\n    (lvar :other_hash) :keys)) each "," keys - ","other_hash keys "," keys "]}," Hashie Extensions Coercion InstanceMethods replace":{"type":"method","name":"replace","children":[],"call":[" []= ","other_hash each "," delete ","(send\n  (send nil :keys) :-\n  (send\n    (lvar :other_hash) :keys)) each "," keys - ","other_hash keys "," keys "]}," Hashie Dash replace":{"type":"method","name":"replace","children":[],"call":[" []= ","other_hash each "," delete ","(send\n  (send nil :keys) :-\n  (send\n    (lvar :other_hash) :keys)) each "," keys - ","other_hash keys "," keys "," class defaults merge "," class defaults "," class "," class defaults merge  each ","(send\n  (send nil :keys) :-\n  (send\n    (lvar : class defaults merge ) :keys)) each "," class defaults merge  keys "]}," Hashie Mash custom_writer":{"type":"method","name":"custom_writer","children":[],"call":[" regular_writer "," convert_value "," convert_key "," log_built_in_message "," methods include? "," methods ","key to_sym ","(lvasgn :key\n  (send nil :convert_key\n    (lvar :key))) to_sym "," respond_to? "," log_collision? ","key respond_to? "," convert_ convert_key  "," convert_key  to_sym ","(lvasgn : convert_key \n  (send nil :convert_ convert_key \n    (lvar : convert_key ))) to_sym "," convert_key  respond_to? "]}," Hashie Mash custom_reader":{"type":"method","name":"custom_reader","children":[],"call":[" block_given? "," regular_reader "," convert_key "," default_proc call "," default_proc "," key? ! "," key? "]}," Hashie Extensions Coercion InstanceMethods custom_writer":{"type":"method","name":"custom_writer","children":[],"call":[" []= "]}," Hashie Trash inverse_translations":{"type":"method","name":"inverse_translations","children":[],"call":[]}," Hashie Trash properties":{"type":"method","name":"properties","children":[],"call":[]}," Hashie Trash permitted_input_keys":{"type":"method","name":"permitted_input_keys","children":[],"call":[]}," Hashie Rash optimize_if_necessary!":{"type":"method","name":"optimize_if_necessary!","children":[],"call":["(send\n  (ivar :@regex_counts) :sort_by) map ","count -@ ","@regex_counts sort_by ","(op-asgn\n  (ivasgn :@lookups) :+\n  (int 1)) >= ","@regex_counts [] -@ ","@regex_counts [] ","@regexes sort_by "]}," Hashie Rash method_missing":{"type":"method","name":"method_missing","children":[],"call":["@hash send "]}," Hashie Rash all":{"type":"method","name":"all","children":[],"call":["query =~ ","key is_a? ","@hash each ","@hash [] ","range include? ","@ranges each ","value call ","value respond_to? ","@regex_counts [] ","regex match ","@regexes each "," optimize_if_necessary! ","@hash include? "," to_enum "," block_given? ","range cover? ","@hash []  call ","@hash []  respond_to? ","regex regex match  "]}," Hashie Rash []":{"type":"method","name":"[]","children":[],"call":[" all first "," all "]}," Hashie Rash []=":{"type":"method","name":"[]=","children":[],"call":["@hash []= ","@ranges << ","@regexes << "]}," Hashie Rash update":{"type":"method","name":"update","children":[],"call":[" []= ","other each "]}," Hashie Rash initialize":{"type":"method","name":"initialize","children":[],"call":[" update ","Hash  new "]}," Hashie Mash prefix_method?":{"type":"method","name":"prefix_method?","children":[],"call":[" key? ","method_name chop ","method_name end_with? ","method_name to_s ","method_name to_s  chop ","method_name to_s  end_with? ","method_name to_s  to_s "]}," Hashie Extensions IgnoreUndeclared initialize_attributes":{"type":"method","name":"initialize_attributes","children":[],"call":[" []= "," class translations include? ","att to_sym "," class translations "," class "," class respond_to? "," class property? ","attributes each_pair ","translations include? ","klass property? ","klass translations ","klass respond_to? ","attributes select "," class  property? "," class  translations "," class  respond_to? "]}," Hashie Extensions DeepMerge _recursive_merge":{"type":"method","name":"_recursive_merge","children":[],"call":["hash []= "," _recursive_merge ","hash [] ","hash key? ","other_hash each ","hash is_a? ","other_hash is_a? ","block call "," block_given? ","v is_a? ","hash [] is_a? ","v deep_dup ","v respond_to? "]}," Hashie Extensions DeepFetch deep_fetch":{"type":"method","name":"deep_fetch","children":[],"call":[" raise ","e backtrace ","args join ","block call ","obj fetch "," Integer ","obj kind_of? ","args reduce ","obj is_a? "," Integer s join "," Integer s reduce "]}," Hashie Dash merge!":{"type":"method","name":"merge!","children":[],"call":[" []= "," [] "," block_given? ","other_hash each "]}," Hashie Dash merge":{"type":"method","name":"merge","children":[],"call":["new_dash []= "," [] "," block_given? ","other_hash each "," dup "," dup  []= "]}," Hashie Hash flexibly_convert_to_hash":{"type":"method","name":"flexibly_convert_to_hash","children":[],"call":["object to_hash ","object method arity == ","object method arity ","object method ","object method arity zero? "]}," Hashie Mash method_suffix":{"type":"method","name":"method_suffix","children":[],"call":["match [] ","method_name to_s match ","method_name to_s ","ALLOWED_SUFFIXES  join ","method_name [] ","method_name end_with? ","method_name to_s match  [] ","method_name to_s method_name to_s match  ","method_name to_s  to_s match ","method_name to_s  to_s ","method_name to_s  [] ","method_name to_s  end_with? "]}," Hashie Mash respond_to_missing?":{"type":"method","name":"respond_to_missing?","children":[],"call":[" method_suffix "," key? "," method_ method_suffix  "]}," Hashie Hash to_mash":{"type":"method","name":"to_mash","children":[],"call":[" Hashie Mash  new "]}," Hashie Extensions PrettyInspect hashie_inspect":{"type":"method","name":"hashie_inspect","children":[],"call":["ret << "," [] inspect "," [] ","(send\n  (send nil :keys) :sort_by) each ","key to_s "," keys sort_by "," keys "," class "," keys sort_by each "]}," Hashie Extensions PrettyInspect included":{"type":"method","name":"included","children":[],"call":[]}," Hashie Extensions IgnoreUndeclared property_exists?":{"type":"method","name":"property_exists?","children":[],"call":[" class property? "," class "]}," Hashie Extensions Dash IndifferentAccess ClassMethods property?":{"type":"method","name":"property?","children":[],"call":["(send\n  (send nil :properties) :find) ! ! ","(send\n  (send nil :properties) :find) ! ","property to_s == ","property to_s "," properties find "," properties ","name to_s "," translations [] ","name to_sym "," translations "," translation_exists? "," included_modules include? "," included_modules "," translation_for? ","name to_s  to_s "," translations []  to_s ","name to_s  to_sym "," translations []  to_sym "]}," Hashie Extensions Dash IndifferentAccess included":{"type":"method","name":"included","children":[],"call":[]}," Hashie Trash transformation_exists?":{"type":"method","name":"transformation_exists?","children":[],"call":[]}," Hashie Trash translation_exists?":{"type":"method","name":"translation_exists?","children":[],"call":[]}," Hashie Trash transformed_property":{"type":"method","name":"transformed_property","children":[],"call":[]}," Hashie Extensions Dash IndifferentAccess ClassMethods transformation_exists?":{"type":"method","name":"transformation_exists?","children":[],"call":["(send\n  (send\n    (send nil :transforms) :keys) :find) ! ! ","(send\n  (send\n    (send nil :transforms) :keys) :find) ! ","key to_s == ","key to_s "," transforms keys find "," transforms keys "," transforms ","name to_s ","name to_s  to_s "]}," Hashie Extensions Dash IndifferentAccess ClassMethods transformed_property":{"type":"method","name":"transformed_property","children":[],"call":["transform call "," transforms [] "," transforms ","property_name to_sym "]}," Hashie Extensions Dash IndifferentAccess ClassMethods translation_exists?":{"type":"method","name":"translation_exists?","children":[],"call":["(send\n  (send\n    (send nil :translations) :keys) :find) ! ! ","(send\n  (send\n    (send nil :translations) :keys) :find) ! ","key to_s == ","key to_s "," translations keys find "," translations keys "," translations ","name to_s ","name to_s  to_s "]}," Hashie Dash fail_no_property_error!":{"type":"method","name":"fail_no_property_error!","children":[],"call":[" fail "," class name "," class "," raise "]}," Hashie Dash fail_property_required_error!":{"type":"method","name":"fail_property_required_error!","children":[],"call":[" fail "," class name "," class "," class required_properties [] "," class required_properties "," class required_properties [] [] "," raise "]}," Hashie Dash assert_required_attributes_set!":{"type":"method","name":"assert_required_attributes_set!","children":[],"call":[" assert_property_set! "," class required_properties each "," class required_properties "," class "," class required_properties each_key "]}," Hashie Dash update_attributes!":{"type":"method","name":"update_attributes!","children":[],"call":[" assert_required_attributes_set! "," []= ","value dup "," [] nil? "," [] "," class defaults each_pair "," class defaults "," class "," initialize_attributes "," update_attributes ","val call ","val arity == ","val arity ","val is_a? "," fetch nil? "," fetch ","value dup ue dup ","value dup  call ","value dup  arity == ","value dup  arity ","value dup  is_a? "]}," Hashie Mash values_at":{"type":"method","name":"values_at","children":[],"call":[" convert_key ","keys map "]}," Hashie Extensions Coercion InstanceMethods coerce_or_init":{"type":"method","name":"coerce_or_init","children":[],"call":["type new "," lambda ","type coerce ","type respond_to? "," fail ","v is_a? ","v send ","CORE_TYPES  [] ","CORE_TYPES  key? ","type is_a? "]}," Hashie Extensions Coercion InstanceMethods set_value_with_coercion":{"type":"method","name":"set_value_with_coercion","children":[],"call":[" set_value_without_coercion ","into class new ","value_coerce call ","value map ","into class "," coerce_or_init ","into first ","Hash  [] ","key_coerce call ","into flatten [] ","into flatten ","into class >= "," coerce_or_init call ","into is_a? "," class value_coercion "," class "," class key_coercion "," raise ","e message ","value class ","key inspect ","into nil? ","value nil? ","into class [] ","into class <= "," class fetch_coercion call "," class fetch_coercion ","CoercionError  new "," set_into class new _without_coercion "," set_Hash  [] _without_coercion "," set_into class [] _without_coercion "," set_ class fetch_coercion call _without_coercion ","into class new _coerce call ","Hash  [] _coerce call ","into class [] _coerce call "," class fetch_coercion call _coerce call "," coerce_or_init  call ","into class new  map ","Hash  []  map ","into class []  map "," class fetch_coercion call  map "," class into class new _coercion "," class Hash  [] _coercion "," class into class [] _coercion "," class  class fetch_coercion call _coercion ","into class new  class ","Hash  []  class ","into class []  class "," class fetch_coercion call  class ","into class new  nil? ","Hash  []  nil? ","into class []  nil? "," class fetch_coercion call  nil? "]}," Hashie Trash inherited":{"type":"method","name":"inherited","children":[],"call":[]}," Hashie Rash respond_to_missing?":{"type":"method","name":"respond_to_missing?","children":[],"call":["@hash respond_to? "]}," Hashie Rash fetch":{"type":"method","name":"fetch","children":[],"call":[" fail ","key inspect "," block_given? "," all ","args length ","(irange\n  (int 1)\n  (int 2)) cover? "," raise "]}," Hashie Mash assign_property":{"type":"method","name":"assign_property","children":[],"call":[" []= "]}," Hashie Mash to_module":{"type":"method","name":"to_module","children":[],"call":["m send ","mash_method_name to_sym ","Module  new "]}," Hashie Mash load":{"type":"method","name":"load","children":[],"call":[]}," Hashie Extensions Parsers YamlErbParser perform":{"type":"method","name":"perform","children":[],"call":["YAML  load ","ERB  new result ","ERB  new ","template result ","template filename= ","YAML  safe_load ","@options fetch "," yaml_safe_load ","ERB  new  result ","ERB  new  filename= "]}," Hashie Extensions Parsers YamlErbParser initialize":{"type":"method","name":"initialize","children":[],"call":["File  read ","file_path to_s ","file_path is_a? "]}," Hashie Extensions MethodAccessWithOverride included":{"type":"method","name":"included","children":[],"call":[]}," Hashie Extensions MethodOverridingWriter redefine_method":{"type":"method","name":"redefine_method","children":[],"call":["eigenclass __send__ "," [] "," lambda "]}," Hashie Extensions MethodOverridingWriter method?":{"type":"method","name":"method?","children":[],"call":["(send\n  (send nil :methods) :map) include? ","m to_s "," methods map "," methods "," methods map include? "]}," Hashie Extensions MethodOverridingWriter already_overridden?":{"type":"method","name":"already_overridden?","children":[],"call":[" method? "]}," Hashie Extensions MethodOverridingWriter respond_to_missing?":{"type":"method","name":"respond_to_missing?","children":[],"call":["name to_s end_with? ","name to_s "]}," Hashie Extensions MethodOverridingWriter method_missing":{"type":"method","name":"method_missing","children":[],"call":[" []= ","args first "," convert_key "," redefine_method "," already_overridden? ! "," already_overridden? "," method? ","Regexp  last_match [] ","Regexp  last_match ","name to_s =~ ","name to_s ","args size == ","args size "," convert_Regexp  last_match []  "]}," Hashie Extensions MethodOverridingWriter convert_key":{"type":"method","name":"convert_key","children":[],"call":["key to_s "]}," Hashie Extensions Mash SafeAssignment assign_property":{"type":"method","name":"assign_property","children":[],"call":[" []= "," fail "," methods include? ","name to_sym "," methods "]}," Hashie Extensions DeepFind reduce_to_match":{"type":"method","name":"reduce_to_match","children":[],"call":[" _deep_find ","enumerable reduce "]}," Hashie Extensions DeepFind _deep_find_all":{"type":"method","name":"_deep_find_all","children":[],"call":[" _deep_find_all ","object each ","object is_a? ","object values each ","object values ","matches << ","object [] ","object key? ","object respond_to? ","matches concat ","element [] ","result map! ","Hashie Extensions DeepLocate  deep_locate tap ","Hashie Extensions DeepLocate  deep_locate ","DeepLocate  deep_locate tap ","DeepLocate  deep_locate "]}," Hashie Extensions DeepFind _deep_find":{"type":"method","name":"_deep_find","children":[],"call":[" reduce_to_match ","object is_a? ","object values ","object [] ","object key? ","object respond_to? "," _deep_find_all first "," _deep_find_all "]}," Hashie Extensions DeepFind deep_find_all":{"type":"method","name":"deep_find_all","children":[],"call":["matches empty? "," _deep_find_all "," _deep_find_all  empty? "]}," Hashie Extensions DeepFind deep_find":{"type":"method","name":"deep_find","children":[],"call":[" _deep_find "]}," Hashie Mash extractable_options?":{"type":"method","name":"extractable_options?","children":[],"call":[]}," Hashie Extensions SymbolizeKeys ClassMethods symbolize_keys":{"type":"method","name":"symbolize_keys","children":[],"call":[" symbolize_keys! ","hash dup tap ","hash dup ","copy tap ","copy extend ","copy respond_to? ","hash dup  tap ","hash dup  extend ","hash dup  respond_to? "]}," Hashie Extensions SymbolizeKeys ClassMethods symbolize_keys!":{"type":"method","name":"symbolize_keys!","children":[],"call":["hash []= ","hash delete ","k to_sym "," symbolize_keys_recursively! ","hash [] ","hash keys each ","hash keys ","hash extend ","hash respond_to? "," convert_key "]}," Hashie Extensions SymbolizeKeys ClassMethods symbolize_keys_recursively!":{"type":"method","name":"symbolize_keys_recursively!","children":[],"call":[" symbolize_keys! "," symbolize_keys_recursively! ","object each ","object symbolize_keys! ","object respond_to? "," class "]}," Hashie Extensions StringifyKeys ClassMethods stringify_keys":{"type":"method","name":"stringify_keys","children":[],"call":[" stringify_keys! ","hash dup tap ","hash dup ","copy tap ","copy extend ","copy respond_to? ","hash dup  tap ","hash dup  extend ","hash dup  respond_to? "]}," Hashie Extensions StringifyKeys ClassMethods stringify_keys!":{"type":"method","name":"stringify_keys!","children":[],"call":["hash []= ","hash delete ","k to_s "," stringify_keys_recursively! ","hash [] ","hash keys each ","hash keys ","hash extend ","hash respond_to? "]}," Hashie Extensions StringifyKeys ClassMethods stringify_keys_recursively!":{"type":"method","name":"stringify_keys_recursively!","children":[],"call":[" stringify_keys! "," stringify_keys_recursively! ","object each ","object stringify_keys! "," class "]}," Hashie Extensions Mash SafeAssignment []=":{"type":"method","name":"[]=","children":[],"call":[" custom_writer "]}," Hashie Extensions Mash SafeAssignment custom_writer":{"type":"method","name":"custom_writer","children":[],"call":[" fail "," methods include? ","key to_sym "," methods "," respond_to? "," key? ! "," key? "," raise "]}," Hashie Extensions Coercion ClassMethods inherited":{"type":"method","name":"inherited","children":[],"call":["klass key_coercions= "," key_coercions "," key_coercions dup "]}," Hashie Mash reverse_merge":{"type":"method","name":"reverse_merge","children":[],"call":["Hashie Mash  new merge ","Hashie Mash  new "," class new merge "," class new "," class "]}," Hashie Extensions IndifferentAccess indifferent_value":{"type":"method","name":"indifferent_value","children":[],"call":["value replace "," indifferent_value ","value map ","value is_a? ","IndifferentAccess  inject! "," hash_lacking_indifference? "]}," Hashie Extensions DeepLocate _deep_locate":{"type":"method","name":"_deep_locate","children":[],"call":[]}," Hashie Extensions DeepLocate deep_locate":{"type":"method","name":"deep_locate","children":[],"call":["Hashie Extensions DeepLocate  deep_locate "]}," Hashie Extensions Dash PropertyTranslation InstanceMethods property_exists?":{"type":"method","name":"property_exists?","children":[],"call":[" fail_no_property_error! "," class property? "," class "]}," Hashie Extensions Dash PropertyTranslation InstanceMethods initialize_attributes":{"type":"method","name":"initialize_attributes","children":[],"call":[" []= "," class translations_hash include? "," class translations_hash "," class ","attributes dup delete_if ","attributes dup "]}," Hashie Extensions Dash PropertyTranslation InstanceMethods []=":{"type":"method","name":"[]=","children":[],"call":[" property_exists? "," class transformed_property "," class "," class transformation_exists? "," send "," class translation_exists? "," class properties include? "," class properties "]}," Hashie Extensions Dash PropertyTranslation ClassMethods inverse_translations":{"type":"method","name":"inverse_translations","children":[],"call":["h []= ","property_translations keys each ","property_translations keys "," translations_hash each "," translations_hash "," tap ","translations []= ","property_translations each_key "]}," Hashie Extensions Dash PropertyTranslation ClassMethods translations":{"type":"method","name":"translations","children":[],"call":["h []= ","property_translations keys first ","property_translations keys ","property_translations size > ","property_translations size "," translations_hash each "," translations_hash "," tap ","translations []= "]}," Hashie Extensions Dash PropertyTranslation ClassMethods translation_exists?":{"type":"method","name":"translation_exists?","children":[],"call":[" translations_hash key? "," translations_hash "]}," Hashie Extensions Dash PropertyTranslation ClassMethods transformation_exists?":{"type":"method","name":"transformation_exists?","children":[],"call":[" transforms key? "," transforms "]}," Hashie Extensions Dash PropertyTranslation ClassMethods transformed_property":{"type":"method","name":"transformed_property","children":[],"call":[" transforms [] call "," transforms [] "," transforms "]}," Hashie Extensions Dash PropertyTranslation ClassMethods property":{"type":"method","name":"property","children":[],"call":[" transforms []= ","options [] "," transforms ","options [] respond_to? "," []= ","with call ","with respond_to? "," class translations_hash [] each "," class translations_hash [] "," class translations_hash "," class "," define_method "," translations_hash [] []= "," translations_hash [] "," translations_hash "," fail ","property_name == ","options []= "," valid_transformer? "," define_writer_for_source_property "," define_translation "," fail_self_transformation_error! "," valid_options [] ? "]}," Hashie Extensions Dash PropertyTranslation ClassMethods permitted_input_keys":{"type":"method","name":"permitted_input_keys","children":[],"call":[" inverse_translations fetch "," inverse_translations "," properties map "," properties "]}," Hashie Extensions Dash PropertyTranslation ClassMethods inherited":{"type":"method","name":"inherited","children":[],"call":["klass instance_variable_set "," translations_hash dup "," translations_hash "," transforms dup "," transforms "]}," Hashie Extensions Dash PropertyTranslation included":{"type":"method","name":"included","children":[],"call":[]}," Hashie Mash method_name_and_suffix":{"type":"method","name":"method_name_and_suffix","children":[],"call":["method_name [] ","method_name end_with? ","method_name to_s ","method_name to_s  [] ","method_name to_s  end_with? ","method_name to_s  to_s "]}," Hashie Extensions StrictKeyAccess key":{"type":"method","name":"key","children":[],"call":[" fail ","value inspect "," [] != "," [] "," key? ! "," key? ","result nil? "," raise "," tap "]}," Hashie Extensions StrictKeyAccess default_proc=":{"type":"method","name":"default_proc=","children":[],"call":[" fail "," raise "]}," Hashie Extensions StrictKeyAccess default_proc":{"type":"method","name":"default_proc","children":[],"call":[" fail "," raise "]}," Hashie Extensions StrictKeyAccess default=":{"type":"method","name":"default=","children":[],"call":[" fail "," raise "]}," Hashie Extensions StrictKeyAccess default":{"type":"method","name":"default","children":[],"call":[" fail "," raise "]}," Hashie Extensions StrictKeyAccess []":{"type":"method","name":"[]","children":[],"call":[" fetch "]}," Hashie Extensions StrictKeyAccess DefaultError initialize":{"type":"method","name":"initialize","children":[],"call":[]}," Hashie Extensions Dash Coercion ClassMethods property":{"type":"method","name":"property","children":[],"call":[" coerce_key ","options [] "]}," Hashie Extensions Dash Coercion included":{"type":"method","name":"included","children":[],"call":[]}," Hashie Extensions Coercion ClassMethods build_core_type_coercion":{"type":"method","name":"build_core_type_coercion","children":[],"call":["value send ","value is_a? "," lambda ","CORE_TYPES  [] "]}," Hashie Extensions Coercion ClassMethods build_container_coercion":{"type":"method","name":"build_container_coercion","children":[],"call":["type new ","value_coerce call ","value map "," lambda "," fetch_coercion "," fetch_coercion  call "]}," Hashie Extensions Coercion ClassMethods build_hash_coercion":{"type":"method","name":"build_hash_coercion","children":[],"call":["type [] ","value_coerce call ","key_coerce call ","value map "," lambda "," fetch_coercion "," fetch_coercion  call "]}," Hashie Extensions Coercion ClassMethods build_coercion":{"type":"method","name":"build_coercion","children":[],"call":[" fail ","type new ","value is_a? "," lambda ","type respond_to? ","type coerce "," build_core_type_coercion ","CORE_TYPES  key? "," build_container_coercion ","type first ","type class "," build_hash_coercion ","type class <= ","type is_a? "," raise ","type class == ","type class  new ","type class  respond_to? ","type class  coerce "," build_core_type class _coercion ","type class  first ","type class  class ","type class  class <= ","type class  is_a? ","type class  class == "]}," Hashie Extensions Coercion ClassMethods coercion_cache":{"type":"method","name":"coercion_cache","children":[],"call":["hash []= "," build_coercion "," Hash  new "]}," Hashie Extensions Coercion ClassMethods fetch_coercion":{"type":"method","name":"fetch_coercion","children":[],"call":[" coercion_cache [] "," coercion_cache ","type is_a? "]}," Hashie Mash dig":{"type":"method","name":"dig","children":[],"call":[" convert_key ","keys map "]}," Hashie Extensions MethodQuery query_method?":{"type":"method","name":"query_method?","children":[],"call":["name to_s end_with? ","name to_s "]}," Hashie Extensions MethodQuery key_from_query_method":{"type":"method","name":"key_from_query_method","children":[],"call":["query_method to_s [] ","query_method to_s "]}," Hashie Extensions MethodQuery indifferent_key?":{"type":"method","name":"indifferent_key?","children":[],"call":[" key? ","name to_sym ","name to_s ","name to_s  to_sym ","name to_s  to_s "]}," Hashie Extensions IndifferentAccess merge!":{"type":"method","name":"merge!","children":[],"call":[" convert! "]}," Hashie Extensions IndifferentAccess merge":{"type":"method","name":"merge","children":[],"call":[" convert! ","result convert! ","IndifferentAccess  inject! "," hash_lacking_indifference? "]}," Hashie Extensions DeepLocate _match_comparator?":{"type":"method","name":"_match_comparator?","children":[],"call":[]}," Hashie Extensions DeepLocate _construct_key_comparator":{"type":"method","name":"_construct_key_comparator","children":[],"call":[]}," Hashie Extensions RubyVersionCheck ClassMethods with_minimum_ruby":{"type":"method","name":"with_minimum_ruby","children":[],"call":["Gem Version  new >= ","Gem Version  new ","RubyVersion  new >= ","RubyVersion  new "," with_minimum_ruby? "]}," Hashie Extensions RubyVersionCheck included":{"type":"method","name":"included","children":[],"call":[]}," Hashie Extensions Array PrettyInspect hashie_inspect":{"type":"method","name":"hashie_inspect","children":[],"call":["ret << "," to_a map join "," to_a map "," to_a "," class "]}," Hashie Extensions Array PrettyInspect included":{"type":"method","name":"included","children":[],"call":[]}," Hashie Array dig":{"type":"method","name":"dig","children":[],"call":[" Integer ","indexes map "]}," Hashie logger=":{"type":"method","name":"logger=","children":[],"call":[]}," Hashie logger":{"type":"method","name":"logger","children":[],"call":[]}," Hashie Utils method_information":{"type":"method","name":"method_information","children":[],"call":[]}," Hashie Mash log_built_in_message":{"type":"method","name":"log_built_in_message","children":[],"call":["Hashie  logger warn "," class ","Hashie  logger ","Hashie Utils  method_information "," method "," class disable_warnings? ","Hashie Utils  Hashie Utils  method_information  "]}," Hashie Extensions RubyVersion split_to_segments":{"type":"method","name":"split_to_segments","children":[],"call":["(send\n  (send\n    (lvar :version) :scan\n    (regexp\n      (str \"[0-9]+|[a-z]+\")\n      (regopt :i))) :map) freeze ","segment to_i ","version scan map ","version scan "]}," Hashie Extensions RubyVersion <=>":{"type":"method","name":"<=>","children":[],"call":["lhs <=> ","rhs is_a? ","lhs is_a? ","lhs == ","rhsegments [] ","lhsegments [] ","i <= ","(if\n  (send\n    (lvar :lhsize) :>\n    (lvar :rhsize))\n  (lvar :lhsize)\n  (lvar :rhsize)) - ","lhsize > ","rhsegments size ","lhsegments size ","other segments "," segments ","other segments  [] "," segments  [] ","(if\n  (send\n    (lvar :lhsize) :>\n    (lvar :rhsegments size ))\n  (lvar :lhsize)\n  (lvar :rhsegments size )) - ","(if\n  (send\n    (lvar :lhsegments size ) :>\n    (lvar :rhsize))\n  (lvar :lhsegments size )\n  (lvar :rhsize)) - ","lhsegments size  > ","other segments  size "," segments  size "]}," Hashie Extensions RubyVersion initialize":{"type":"method","name":"initialize","children":[],"call":[" split_to_segments "]}," Hashie Mash disable_warnings?":{"type":"method","name":"disable_warnings?","children":[],"call":[]}," Hashie Mash disable_warnings":{"type":"method","name":"disable_warnings","children":[],"call":[]}," Hashie Mash CannotDisableMashWarnings initialize":{"type":"method","name":"initialize","children":[],"call":[]}," Hashie Mash inherited":{"type":"method","name":"inherited","children":[],"call":[]}," Hashie Extensions Mash SymbolizeKeys convert_key":{"type":"method","name":"convert_key","children":[],"call":["key to_sym ","key respond_to? "]}," Hashie Extensions Mash SymbolizeKeys included":{"type":"method","name":"included","children":[],"call":[]}," Hashie Mash log_collision?":{"type":"method","name":"log_collision?","children":[],"call":["(or\n  (send nil :regular_key?\n    (lvar :method_key))\n  (send nil :regular_key?\n    (send\n      (lvar :method_key) :to_s))) ! "," regular_key? ","method_key to_s "," class disable_warnings? ! "," class disable_warnings? "," class "," respond_to? ","suffix == ","= freeze ","suffix ! "," method_name_and_suffix ","method_key is_a? "]}," Hashie Extensions Mash KeepOriginalKeys __convert":{"type":"method","name":"__convert","children":[],"call":["key to_sym ","key to_s "]}," Hashie Extensions Mash KeepOriginalKeys convert_key":{"type":"method","name":"convert_key","children":[],"call":[" regular_key? "," __convert "]}," Hashie Extensions Mash KeepOriginalKeys included":{"type":"method","name":"included","children":[],"call":[]}," Hashie Extensions MethodOverridingInitializer initialize":{"type":"method","name":"initialize","children":[],"call":[" []= "," redefine_method "," method? ","key to_s ","hash each "]}," Hashie Extensions RedefineMethod redefine_method":{"type":"method","name":"redefine_method","children":[],"call":["eigenclass __send__ "," [] "," lambda "]}," Hashie Extensions RedefineMethod method?":{"type":"method","name":"method?","children":[],"call":[" methods map include? "," methods map "," methods "]}," Hashie Extensions MethodQuery respond_to_missing?":{"type":"method","name":"respond_to_missing?","children":[],"call":[" indifferent_key? "," key_from_query_method "," query_method? "]}," Hashie Extensions MethodWriter respond_to_missing?":{"type":"method","name":"respond_to_missing?","children":[],"call":["name to_s =~ ","name to_s "]}," Hashie Extensions MethodReader respond_to_missing?":{"type":"method","name":"respond_to_missing?","children":[],"call":[" key? ","name to_sym ","name to_s "]}," Hashie Extensions Dash PropertyTranslation InstanceMethods __translations":{"type":"method","name":"__translations","children":[],"call":[" class translations_hash "," class "]}," Hashie Extensions Dash PropertyTranslation ClassMethods valid_transformer?":{"type":"method","name":"valid_transformer?","children":[],"call":["transformer respond_to? "]}," Hashie Extensions Dash PropertyTranslation ClassMethods fail_self_transformation_error!":{"type":"method","name":"fail_self_transformation_error!","children":[],"call":[" raise "]}," Hashie Extensions Dash PropertyTranslation ClassMethods define_writer_for_source_property":{"type":"method","name":"define_writer_for_source_property","children":[],"call":[" []= ","with call ","with respond_to? "," __translations [] each "," __translations [] "," __translations "," define_method "]}," Hashie Extensions Dash PropertyTranslation ClassMethods define_translation":{"type":"method","name":"define_translation","children":[],"call":[" translations_hash [] []= "," translations_hash [] "," translations_hash "]}," Hashie Dash update_attributes":{"type":"method","name":"update_attributes","children":[],"call":[" []= ","attributes each_pair "]}," Hashie Dash define_setter_for":{"type":"method","name":"define_setter_for","children":[],"call":[]}," Hashie Dash define_getter_for":{"type":"method","name":"define_getter_for","children":[],"call":[]}," Hashie Clash respond_to_missing?":{"type":"method","name":"respond_to_missing?","children":[],"call":["(const nil :NilClass) include? "," [] class "," [] ","method_name [] to_sym ","method_name [] ","method_name end_with? ","method_name to_s ","method_name to_s  [] to_sym ","method_name to_s  [] ","method_name to_s  end_with? ","method_name to_s  to_s "]}," Hashie Mash transform_keys":{"type":"method","name":"transform_keys","children":[],"call":[" class new "," class "]}," Hashie Mash slice":{"type":"method","name":"slice","children":[],"call":[" class new "," class "," convert_key ","keys map "]}," Hashie Mash transform_values":{"type":"method","name":"transform_values","children":[],"call":[" class new "," class "]}," Hashie Mash _deep_update":{"type":"method","name":"_deep_update","children":[],"call":[" custom_writer "," convert_value "," [] "," key? "," custom_reader deep_update "," custom_reader "," regular_reader is_a? "," regular_reader ","v is_a? "," convert_key ","other_hash each_pair "," convert_ convert_value  ","  convert_key ? "," convert_ convert_key  "]}," Hashie Mash select":{"type":"method","name":"select","children":[],"call":[" class new "," class "]}," Hashie Mash reject":{"type":"method","name":"reject","children":[],"call":[" class new "," class "]}," Hashie Mash invert":{"type":"method","name":"invert","children":[],"call":[" class new "," class "]}," Hashie Mash compact":{"type":"method","name":"compact","children":[],"call":[" class new "," class "]}," Hashie Mash quiet":{"type":"method","name":"quiet","children":[],"call":[]}," Hashie Mash with_accessors!":{"type":"method","name":"with_accessors!","children":[],"call":[" extend "]}," Hashie Hash maybe_convert_to_hash":{"type":"method","name":"maybe_convert_to_hash","children":[],"call":[" flexibly_convert_to_hash ","object respond_to? ","object is_a? "]}," Hashie Extensions Mash DefineAccessors Ext define_underbang_reader":{"type":"method","name":"define_underbang_reader","children":[],"call":[" underbang_reader "," [] "," proc "," key? "," define_method "]}," Hashie Extensions Mash DefineAccessors Ext define_initializing_reader":{"type":"method","name":"define_initializing_reader","children":[],"call":[" initializing_reader "," [] "," proc "," key? "," define_method "]}," Hashie Extensions Mash DefineAccessors Ext define_predicate":{"type":"method","name":"define_predicate","children":[],"call":[" [] ! ! "," [] ! "," [] "," proc "," key? "," define_method "]}," Hashie Extensions Mash DefineAccessors Ext define_writer":{"type":"method","name":"define_writer","children":[],"call":[" assign_property "," [] "," proc "," key? "," define_method "]}," Hashie Extensions Mash DefineAccessors Ext define_reader":{"type":"method","name":"define_reader","children":[],"call":[" [] "," key? "," define_method "]}," Hashie Extensions Mash DefineAccessors Ext initialize":{"type":"method","name":"initialize","children":[],"call":[" send ","mod define_reader ","mod define_underbang_reader ","_ freeze ","mod define_initializing_reader ","! freeze ","mod define_predicate ","? freeze ","mod define_writer ","= freeze "," method_name_and_suffix "," define_method "]}," Hashie Extensions Mash DefineAccessors extended":{"type":"method","name":"extended","children":[],"call":[]}," Hashie Extensions Mash DefineAccessors included":{"type":"method","name":"included","children":[],"call":[]}," Hashie Extensions KeyConflictWarning inherited":{"type":"method","name":"inherited","children":[],"call":["subclass disable_warnings "," disabled_warnings "," disable_warnings? "]}," Hashie Extensions KeyConflictWarning disabled_warnings":{"type":"method","name":"disabled_warnings","children":[],"call":[]}," Hashie Extensions KeyConflictWarning disable_warnings?":{"type":"method","name":"disable_warnings?","children":[],"call":[" disabled_warnings include? "," disabled_warnings "," disabled_warnings any? "]}," Hashie Extensions KeyConflictWarning disable_warnings":{"type":"method","name":"disable_warnings","children":[],"call":[" disabled_warnings clear "," disabled_warnings "," disabled_warnings concat tap uniq! "," disabled_warnings concat tap "," disabled_warnings concat ","method_keys any? "," raise "," == "]}," Hashie Extensions KeyConflictWarning CannotDisableMashWarnings initialize":{"type":"method","name":"initialize","children":[],"call":[]}," Hashie Extensions DeepLocate activesupport_indifferent?":{"type":"method","name":"activesupport_indifferent?","children":[],"call":[]}," Hashie Extensions Dash IndifferentAccess ClassMethods translation_for?":{"type":"method","name":"translation_for?","children":[],"call":[" translation_exists? "," included_modules include? "," included_modules "]}," Hashie Extensions Dash IndifferentAccess requires_class_methods?":{"type":"method","name":"requires_class_methods?","children":[],"call":[]}," Hashie Extensions Dash IndifferentAccess maybe_extend":{"type":"method","name":"maybe_extend","children":[],"call":[]}," Hashie CoercionError initialize":{"type":"method","name":"initialize","children":[],"call":["value class ","key inspect "]}," Hashie Extensions ActiveSupport CoreExt Hash except":{"type":"method","name":"except","children":[],"call":[" convert_key ","keys map "]}," Hashie Utils integer_classes":{"type":"method","name":"integer_classes","children":[],"call":[]}," Hashie Utils safe_dup":{"type":"method","name":"safe_dup","children":[],"call":[]}," Hashie Extensions RubyVersionCheck ClassMethods with_minimum_ruby?":{"type":"method","name":"with_minimum_ruby?","children":[],"call":["RubyVersion  new >= ","RubyVersion  new "]}," Hashie Extensions Parsers YamlErbParser yaml_safe_load":{"type":"method","name":"yaml_safe_load","children":[],"call":["YAML  safe_load ","template result "]}," Hashie Extensions Mash PermissiveRespondTo log_collision?":{"type":"method","name":"log_collision?","children":[],"call":["(or\n  (send nil :regular_key?\n    (lvar :method_key))\n  (send nil :regular_key?\n    (send\n      (lvar :method_key) :to_s))) ! "," regular_key? ","method_key to_s "," class disable_warnings? ! "," class disable_warnings? "," class "," class method_cache include? "," class method_cache "]}," Hashie Extensions Mash PermissiveRespondTo respond_to_missing?":{"type":"method","name":"respond_to_missing?","children":[],"call":[]}," Hashie Extensions Mash PermissiveRespondTo included":{"type":"method","name":"included","children":[],"call":[]}," Hashie Extensions DeepMerge _deep_dup":{"type":"method","name":"_deep_dup","children":[],"call":["copy []= ","Hashie Utils  safe_dup "," _deep_dup ","value is_a? ","copy each ","hash dup ","hash dup  []= ","hash dup  each "]}," Hashie Mash except":{"type":"method","name":"except","children":[],"call":[" class new "," class "," convert_key ","keys map "]}," Hashie Extensions SymbolizeKeys ClassMethods convert_key":{"type":"method","name":"convert_key","children":[],"call":["key to_sym ","key respond_to? "]}," Hashie Extensions IndifferentAccess except":{"type":"method","name":"except","children":[],"call":[" convert_key ","keys map "]}," Hashie Extensions IndifferentAccess slice":{"type":"method","name":"slice","children":[],"call":[" convert_key ","keys map "]}," Hashie Extensions IndifferentAccess to_hash":{"type":"method","name":"to_hash","children":[],"call":["result default= "," default ","result default_proc= "," default_proc ","result []= "," each_pair "," tap "]}," Hashie Extensions Dash PredefinedValues InstanceMethods values_for_properties":{"type":"method","name":"values_for_properties","children":[],"call":[" class values_for_properties [] "," class values_for_properties "," class "]}," Hashie Extensions Dash PredefinedValues InstanceMethods fail_property_value_error!":{"type":"method","name":"fail_property_value_error!","children":[],"call":[" raise "]}," Hashie Extensions Dash PredefinedValues InstanceMethods assert_property_values!":{"type":"method","name":"assert_property_values!","children":[],"call":[" fail_property_value_error! "," values_for_properties include? ! "," values_for_properties include? "," values_for_properties "," send "," class values_for_properties each_key "," class values_for_properties "," class "," fail_property_ send _error! ","  send s_for_properties include? ! ","  send s_for_properties include? ","  send s_for_properties "," class  send s_for_properties each_key "," class  send s_for_properties "]}," Hashie Extensions Dash PredefinedValues InstanceMethods initialize":{"type":"method","name":"initialize","children":[],"call":[" assert_property_values! "]}," Hashie Extensions Dash PredefinedValues ClassMethods set_predefined_values":{"type":"method","name":"set_predefined_values","children":[],"call":["@values_for_properties []= "]}," Hashie Extensions Dash PredefinedValues ClassMethods supported_type?":{"type":"method","name":"supported_type?","children":[],"call":["predefined_values is_a? ","(const\n  (cbase) :Array) any? "]}," Hashie Extensions Dash PredefinedValues ClassMethods assert_predefined_values!":{"type":"method","name":"assert_predefined_values!","children":[],"call":[" raise "," supported_type? "]}," Hashie Extensions Dash PredefinedValues ClassMethods property":{"type":"method","name":"property","children":[],"call":[" set_predefined_values "," assert_predefined_values! ","options [] "," set_options []  "," assert_options [] ! "]}," Hashie Extensions Dash PredefinedValues ClassMethods inherited":{"type":"method","name":"inherited","children":[],"call":["klass instance_variable_set "," values_for_properties dup "," values_for_properties "]}," Hashie Extensions Dash PredefinedValues included":{"type":"method","name":"included","children":[],"call":[]}," Hashie Extensions Dash IndifferentAccess to_h":{"type":"method","name":"to_h","children":[],"call":["defaults merge "," Hash  [] "," class defaults [] "," class defaults "," class ","Hashie Extensions IndifferentAccess  convert_key "," class properties map "," class properties "," Hash  []  merge "," class  Hash  []  [] "," class  Hash  []  "]}," Hashie Dash to_h":{"type":"method","name":"to_h","children":[],"call":["defaults merge "," Hash  [] "," class defaults [] "," class defaults "," class "," class properties map "," class properties "," Hash  []  merge "," class  Hash  []  [] "," class  Hash  []  "]}}