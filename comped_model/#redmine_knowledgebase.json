{" TagsHelper tag_cloud":{"type":"method","name":"tag_cloud","children":[],"call":["classes [] ","(send\n  (begin\n    (send\n      (send\n        (lvar :tag) :count) :/\n      (lvar :max_count))) :*\n  (begin\n    (send\n      (send\n        (lvar :classes) :size) :-\n      (int 1)))) round ","(send\n  (send\n    (lvar :tag) :count) :/\n  (lvar :max_count)) * ","classes size - ","classes size ","tag count / ","tag count ","tags each ","tags sort_by last count to_f ","tags sort_by last count ","tags sort_by last ","tags sort_by ","tags empty? ","(send\n  (begin\n    (send\n      (send\n        (lvar :tag) :count) :/\n      (lvar :tags sort_by last count to_f ))) :*\n  (begin\n    (send\n      (send\n        (lvar :classes) :size) :-\n      (int 1)))) round ","(send\n  (send\n    (lvar :tag) :count) :/\n  (lvar :tags sort_by last count to_f )) * "]}," Tagging after_destroy":{"type":"method","name":"after_destroy","children":[],"call":[" tag destroy "," tag "," tag taggings count zero? "," tag taggings count "," tag taggings ","Tag  destroy_unused "]}," TagList from":{"type":"method","name":"from","children":[],"call":["tag_list add ","string split "," delimiter ","tag_list << ","string gsub! ","(regexp\n  (str \"\\\\s*\")\n  (begin\n    (send nil :delimiter))\n  (str \"\\\\s*(['\\\"])(.*?)\\\\1\\\\s*\")\n  (regopt)) each ","source to_s dup ","source to_s "," returning "," new "," new  add ","source to_s dup  split "," new  << ","source to_s dup  gsub! "]}," TagList extract_and_apply_options!":{"type":"method","name":"extract_and_apply_options!","children":[],"call":["args flatten! "," class from "," class ","args map! ","options [] ","options assert_valid_keys ","args pop ","args last is_a? ","args last ","args pop  [] ","args pop  assert_valid_keys "]}," TagList clean!":{"type":"method","name":"clean!","children":[],"call":[" uniq! "," map! "," reject! "]}," TagList to_s":{"type":"method","name":"to_s","children":[],"call":["(send nil :map) join "," delimiter "," delimiter ends_with? ","name include? "," map "," clean! "]}," TagList toggle":{"type":"method","name":"toggle","children":[],"call":[" clean! "," push "," delete "," include? ","names each "," extract_and_apply_options! "]}," TagList remove":{"type":"method","name":"remove","children":[],"call":["names include? "," delete_if "," extract_and_apply_options! "]}," TagList add":{"type":"method","name":"add","children":[],"call":[" clean! "," concat "," extract_and_apply_options! "]}," TagList initialize":{"type":"method","name":"initialize","children":[],"call":[" add "]}," Tag options_for_counts":{"type":"method","name":"options_for_counts","children":[],"call":["(pair\n  (sym :select)\n  (dstr\n    (begin\n      (send\n        (const nil :Tag) :table_name))\n    (str \".id, \")\n    (begin\n      (send\n        (const nil :Tag) :table_name))\n    (str \".name, COUNT(*) AS count\"))) update ","joins join ","Tag  table_name ","group_by << ","having blank? ","(lvar :at_least) compact join ","(lvar :at_least) compact "," sanitize_sql ","options delete ","options [] ","joins << ","Tagging  table_name ","conditions join ","conditions any? ","(begin\n  (if\n    (send\n      (lvar :options) :[]\n      (sym :conditions))\n    (send nil :sanitize_sql\n      (send\n        (lvar :options) :delete\n        (sym :conditions))) nil)) compact ","options dup ","options assert_valid_keys ","(lvar :at_least) compact join  blank? ","(lvar : sanitize_sql ) compact join ","(lvar : sanitize_sql ) compact ","options dup  delete ","options dup  [] ","conditions join  join ","(begin\n  (if\n    (send\n      (lvar :options) :[]\n      (sym :conditions))\n    (send nil :sanitize_sql\n      (send\n        (lvar :options) :delete\n        (sym :conditions))) nil)) compact  join ","conditions join  any? ","(begin\n  (if\n    (send\n      (lvar :options) :[]\n      (sym :conditions))\n    (send nil :sanitize_sql\n      (send\n        (lvar :options) :delete\n        (sym :conditions))) nil)) compact  any? ","(begin\n  (if\n    (send\n      (lvar :options) :[]\n      (sym :conditions join ))\n    (send nil :sanitize_sql\n      (send\n        (lvar :options) :delete\n        (sym :conditions join ))) nil)) compact ","(begin\n  (if\n    (send\n      (lvar :options) :[]\n      (sym :(begin\n  (if\n    (send\n      (lvar :options) :[]\n      (sym :conditions))\n    (send nil :sanitize_sql\n      (send\n        (lvar :options) :delete\n        (sym :conditions))) nil)) compact ))\n    (send nil :sanitize_sql\n      (send\n        (lvar :options) :delete\n        (sym :(begin\n  (if\n    (send\n      (lvar :options) :[]\n      (sym :conditions))\n    (send nil :sanitize_sql\n      (send\n        (lvar :options) :delete\n        (sym :conditions))) nil)) compact ))) nil)) compact ","(begin\n  (if\n    (send\n      (lvar :options dup ) :[]\n      (sym :conditions))\n    (send nil :sanitize_sql\n      (send\n        (lvar :options dup ) :delete\n        (sym :conditions))) nil)) compact ","options dup  dup ","options dup  assert_valid_keys "]}," Tag counts":{"type":"method","name":"counts","children":[],"call":[" find "," options_for_counts "]}," Tag count":{"type":"method","name":"count","children":[],"call":[" read_attribute to_i "," read_attribute "]}," Tag to_s":{"type":"method","name":"to_s","children":[],"call":[" name "]}," Tag ==":{"type":"method","name":"==","children":[],"call":[" name == ","object name "," name ","object is_a? "]}," Tag find_or_create_with_like_by_name":{"type":"method","name":"find_or_create_with_like_by_name","children":[],"call":[]}," FaceboxRender redirect_from_facebox":{"type":"method","name":"redirect_from_facebox","children":[],"call":["page redirect_to "," render "]}," FaceboxRender close_facebox":{"type":"method","name":"close_facebox","children":[],"call":[" block_given? ","page << "," render "]}," FaceboxRender render_to_facebox":{"type":"method","name":"render_to_facebox","children":[],"call":[" block_given? ","page << ","options [] ","options [] to_json ","(send nil :render\n  (hash\n    (pair\n      (sym :partial)\n      (send\n        (lvar :options) :[]\n        (sym :partial))))) to_json "," render ","template_string to_json ","action_string to_json "," render_to_string "," logger info "," logger ","options []= "," default_template_name ","options empty? "," strip_out_controller "," template_path_includes_controller? ","action_name include? ","action_name to_s "," render_to_string  to_json "," strip_out_controller  include? ","action_name to_s  include? "," strip_out_controller  to_s ","action_name to_s  to_s "]}," ActiveRecord Acts Viewed ClassMethods find_viewed_by":{"type":"method","name":"find_viewed_by","children":[],"call":["r viewed_type constantize find_by_id ","r viewed id ","r viewed ","r viewed_type constantize ","r viewed_type "," acts_as_viewed_options [] constantize find collect "," acts_as_viewed_options [] constantize find "," acts_as_viewed_options [] constantize "," acts_as_viewed_options [] "," acts_as_viewed_options ","viewer id ","ActiveRecord Base  send to_s ","ActiveRecord Base  send "," raise ","viewing_class column_names include? ! ","viewing_class column_names include? ","viewing_class column_names ","viewer id nil? ","viewer nil? ","(send\n  (send\n    (send\n      (send nil :acts_as_viewed_options) :[]\n      (sym :viewer_class)) :constantize) :===\n  (lvar :viewer)) ! "," acts_as_viewed_options [] constantize === "," acts_as_viewed_options [] constantize where collect "," acts_as_viewed_options [] constantize where "," acts_as_viewed_options [] constantize  column_names include? ! "," acts_as_viewed_options [] constantize  column_names include? "," acts_as_viewed_options [] constantize  column_names "]}," ActiveRecord Acts Viewed ClassMethods drop_viewings_table":{"type":"method","name":"drop_viewings_table","children":[],"call":[" connection drop_table "," connection ","options [] "]}," ActiveRecord Acts Viewed ClassMethods create_viewings_table":{"type":"method","name":"create_viewings_table","children":[],"call":[" connection add_index "," connection ","t column "," connection create_table ","options [] "]}," ActiveRecord Acts Viewed ClassMethods remove_viewings_columns":{"type":"method","name":"remove_viewings_columns","children":[],"call":[" reset_column_information "," connection remove_column "," table_name "," connection ","views == ","c name "," content_columns find "," content_columns "]}," ActiveRecord Acts Viewed ClassMethods add_viewings_columns":{"type":"method","name":"add_viewings_columns","children":[],"call":[" reset_column_information "," connection add_column "," table_name "," connection ","(send\n  (send\n    (self) :content_columns) :find) ! ","views == ","c name "," content_columns find "," content_columns "]}," ActiveRecord Acts Viewed ClassMethods generate_viewings_columns":{"type":"method","name":"generate_viewings_columns","children":[],"call":["table column "]}," ActiveRecord Acts Viewed ViewMethods init_viewing_fields":{"type":"method","name":"init_viewing_fields","children":[],"call":[" views "," attributes has_key? "," attributes "]}," ActiveRecord Acts Viewed ViewMethods viewed_by?":{"type":"method","name":"viewed_by?","children":[],"call":[" viewings count > "," viewings count "," viewings ","viewer id ","viewer id nil? ! ","viewer id nil? "," raise ","(send\n  (send\n    (send\n      (send nil :acts_as_viewed_options) :[]\n      (sym :viewer_class)) :constantize) :===\n  (lvar :viewer)) ! "," acts_as_viewed_options [] constantize === "," acts_as_viewed_options [] constantize "," acts_as_viewed_options [] "," acts_as_viewed_options ","viewer nil? ! ","viewer nil? "," viewings where count > "," viewings where count "," viewings where "]}," ActiveRecord Acts Viewed ViewMethods view":{"type":"method","name":"view","children":[],"call":["target save_without_validation ","view save ","target views= ","(or\n  (send\n    (lvar :target) :views)\n  (int 0)) + ","target views "," attributes has_key? "," attributes "," viewings << "," viewings ","view ip= ","view viewer_id= ","viewer id ","viewer id nil? ! ","viewer id nil? ","viewing_class new "," viewed_by? ! "," viewed_by? ","viewing_class transaction "," raise ","(send\n  (send\n    (send\n      (send nil :acts_as_viewed_options) :[]\n      (sym :viewer_class)) :constantize) :===\n  (lvar :viewer)) ! "," acts_as_viewed_options [] constantize === "," acts_as_viewed_options [] constantize "," acts_as_viewed_options [] "," acts_as_viewed_options ","viewing_class new  save ","target viewing_class new s= ","(or\n  (send\n    (lvar :target) :viewing_class new s)\n  (int 0)) + ","target viewing_class new s "," viewing_class new ings << "," viewing_class new ings ","viewing_class new  ip= ","viewing_class new  viewing_class new er_id= ","viewing_class new er id ","viewing_class new er id nil? ! ","viewing_class new er id nil? ","viewing_class new ing_class new "," acts_as_viewed_options [] constantize  new "," viewing_class new ed_by? ! "," viewing_class new ed_by? ","viewing_class new ing_class transaction "," acts_as_viewed_options [] constantize  transaction ","(send\n  (send\n    (send\n      (send nil :acts_as_viewing_class new ed_options) :[]\n      (sym :viewing_class new er_class)) :constantize) :===\n  (lvar :viewing_class new er)) ! "," acts_as_viewing_class new ed_options [] constantize === "," acts_as_viewing_class new ed_options [] constantize "," acts_as_viewing_class new ed_options [] "," acts_as_viewing_class new ed_options "]}," ActiveRecord Acts Viewed ViewMethods view_count":{"type":"method","name":"view_count","children":[],"call":[" viewings count "," viewings "," views "," attributes has_key? "," attributes "]}," ActiveRecord Acts Viewed ViewMethods viewed?":{"type":"method","name":"viewed?","children":[],"call":[" viewings find nil? ! "," viewings find nil? "," viewings find "," viewings "," views > "," views "," views nil? ! "," views nil? "," attributes has_key? "," attributes "]}," ActiveRecord Acts Viewed ViewMethods included":{"type":"method","name":"included","children":[],"call":[]}," ActiveRecord Acts Viewed ClassMethods acts_as_viewed":{"type":"method","name":"acts_as_viewed","children":[],"call":["viewer_as_class class_eval ","viewing_class to_s ","viewer_as_class instance_methods include? ","viewer_as_class instance_methods ","viewer_class constantize "," before_create "," has_many ","viewer_class to_s "," class_eval "," class_inheritable_reader "," write_inheritable_attribute ","Object  class_eval ","Object  const_defined? ","options [] "," send "," included_modules include? "," included_modules "," acts_as_viewed_options= "," class_attribute ","viewer_class constantize  class_eval ","viewer_class constantize  instance_methods include? ","viewer_class constantize  instance_methods "]}," ActiveRecord Acts Viewed included":{"type":"method","name":"included","children":[],"call":[]}," ActiveRecord Acts Taggable InstanceMethods reload_with_tag_list":{"type":"method","name":"reload_with_tag_list","children":[],"call":[" reload_without_tag_list "]}," ActiveRecord Acts Taggable InstanceMethods tag_counts":{"type":"method","name":"tag_counts","children":[],"call":[" class tag_counts "," class ","options []= "," class send "," tag_list ","options [] "," tag_list blank? "]}," ActiveRecord Acts Taggable InstanceMethods save_tags":{"type":"method","name":"save_tags","children":[],"call":[" tags << ","Tag  find_or_create_with_like_by_name "," tags ","new_tag_names each "," taggings reset "," taggings "," taggings find each "," taggings find ","old_tags map ","old_tags any? "," class transaction "," class ","@tag_list include? ","tag name "," tags reject ","@tag_list - "," tags map ","@tag_list -  each "]}," ActiveRecord Acts Taggable InstanceMethods save_cached_tag_list":{"type":"method","name":"save_cached_tag_list","children":[],"call":[" []= "," tag_list to_s "," tag_list "," class cached_tag_list_column_name "," class "," class caching_tag_list? "]}," ActiveRecord Acts Taggable InstanceMethods tag_list=":{"type":"method","name":"tag_list=","children":[],"call":["TagList  from "]}," ActiveRecord Acts Taggable InstanceMethods tag_list":{"type":"method","name":"tag_list","children":[],"call":["TagList  new "," tags map "," tags ","TagList  from ","(lvasgn :cached_value\n  (send nil :send\n    (send\n      (send\n        (self) :class) :cached_tag_list_column_name))) nil? ! ","(lvasgn :cached_value\n  (send nil :send\n    (send\n      (send\n        (self) :class) :cached_tag_list_column_name))) nil? "," send "," class cached_tag_list_column_name "," class "," class caching_tag_list? ","(lvasgn : send \n  (send nil :send\n    (send\n      (send\n        (self) :class) :cached_tag_list_column_name))) nil? ! ","(lvasgn : send \n  (send nil :send\n    (send\n      (send\n        (self) :class) :cached_tag_list_column_name))) nil? "]}," ActiveRecord Acts Taggable SingletonMethods tags_condition":{"type":"method","name":"tags_condition","children":[],"call":["( + + ","( + ","condition blank? ","(send\n  (lvar :tags) :map) join "," sanitize_sql ","tags map ","(send\n  (lvar :tags) :map) join  blank? "]}," ActiveRecord Acts Taggable SingletonMethods caching_tag_list?":{"type":"method","name":"caching_tag_list?","children":[],"call":[" column_names include? "," cached_tag_list_column_name "," column_names "]}," ActiveRecord Acts Taggable SingletonMethods find_options_for_tag_counts":{"type":"method","name":"find_options_for_tag_counts","children":[],"call":["Tag  options_for_counts ","(pair\n  (sym :conditions)\n  (lvar :conditions)) update ","joins join ","joins << ","scope [] ","options delete ","options [] ","Tagging  table_name "," primary_key "," table_name ","conditions join ","conditions compact! ","conditions << "," type_condition "," descends_from_active_record? "," quote_value "," base_class name "," base_class "," send "," scope ","options dup ","Tag  (pair\n  (sym :conditions)\n  (lvar :conditions)) update _for_counts ","Tag  options dup _for_counts ","(pair\n  (sym :conditions join )\n  (lvar :conditions join )) update ","joins join  join ","joins join  << "," scope  [] ","(pair\n  (sym :conditions)\n  (lvar :conditions)) update  delete ","options dup  delete ","(pair\n  (sym :conditions)\n  (lvar :conditions)) update  [] ","options dup  [] ","conditions join  join ","conditions join  compact! ","conditions join  << ","  scope  ","(pair\n  (sym :conditions)\n  (lvar :conditions)) update  dup ","options dup  dup "]}," ActiveRecord Acts Taggable SingletonMethods tag_counts":{"type":"method","name":"tag_counts","children":[],"call":["Tag  find "," find_options_for_tag_counts "]}," ActiveRecord Acts Taggable SingletonMethods joins_for_match_all_tags":{"type":"method","name":"joins_for_match_all_tags","children":[],"call":["joins join ","joins << "," sanitize_sql ","Tag  table_name "," quote_value "," base_class name "," base_class "," primary_key "," table_name ","Tagging  table_name ","tags each_with_index "]}," ActiveRecord Acts Taggable SingletonMethods find_options_for_find_tagged_with":{"type":"method","name":"find_options_for_find_tagged_with","children":[],"call":["(pair\n  (sym :select)\n  (dstr\n    (str \"DISTINCT \")\n    (begin\n      (send nil :table_name))\n    (str \".*\"))) reverse_merge! ","conditions join ","joins join "," table_name ","conditions << "," tags_condition ","joins << "," joins_for_match_all_tags ","options delete "," quote_value "," base_class name "," base_class ","Tagging  table_name ","Tag  table_name "," primary_key "," sanitize_sql ","options [] ","tags empty? ","options dup ","TagList  from ","TagList  new ","tags map ","tags is_a? "," TagList  from _condition "," TagList  new _condition "," joins_for_match_all_TagList  from  "," joins_for_match_all_TagList  new  ","options dup  delete ","options dup  [] ","TagList  from  empty? ","TagList  new  empty? ","options dup  dup ","TagList  from  map ","TagList  new  map ","TagList  from  is_a? ","TagList  new  is_a? "]}," ActiveRecord Acts Taggable SingletonMethods find_tagged_with":{"type":"method","name":"find_tagged_with","children":[],"call":[" find ","options blank? "," find_options_for_find_tagged_with "," find_options_for_find_tagged_with  blank? "," find_ find_options_for_find_tagged_with _for_find_tagged_with "]}," ActiveRecord Acts Taggable SingletonMethods find_related_tags":{"type":"method","name":"find_related_tags","children":[],"call":["Tag  find ","options merge ","(send\n  (lvar :tags) :map) join "," quote_value ","tags map ","Tag  table_name ","options [] ","Tagging  table_name "," base_class name "," base_class ","related_models to_s ","related_models blank? "," find_tagged_with ","TagList  from ","TagList  new ","tags is_a? ","(send\n  (lvar :TagList  from ) :map) join ","(send\n  (lvar :TagList  new ) :map) join ","TagList  from  map ","TagList  new  map "," find_tagged_with  to_s "," find_tagged_with  blank? ","TagList  from  is_a? ","TagList  new  is_a? "]}," ActiveRecord Acts Taggable ClassMethods set_cached_tag_list_column_name":{"type":"method","name":"set_cached_tag_list_column_name","children":[],"call":[" define_attr_method "]}," ActiveRecord Acts Taggable ClassMethods cached_tag_list_column_name":{"type":"method","name":"cached_tag_list_column_name","children":[],"call":[]}," ActiveRecord Acts Taggable ClassMethods acts_as_taggable":{"type":"method","name":"acts_as_taggable","children":[],"call":[" alias_method_chain "," extend "," include "," after_update "," after_create "," before_save "," has_many "]}," ActiveRecord Acts Taggable included":{"type":"method","name":"included","children":[],"call":[]}," ActiveRecord Acts Rated ClassMethods find_by_rating":{"type":"method","name":"find_by_rating","children":[],"call":[" find_by_sql ","base_sql + "," connection quote "," connection ","precision to_i ","value end ","value begin ","Range  === "," class_name ","rating_class table_name "," table_name "," find "," column_names include? "," column_names "," acts_as_rated_options [] constantize "," acts_as_rated_options [] "," acts_as_rated_options "," acts_as_rated_options [] constantize  table_name "]}," ActiveRecord Acts Rated ClassMethods find_rated_by":{"type":"method","name":"find_rated_by","children":[],"call":["r rated_type constantize find_by_id ","r rated id ","r rated ","r rated_type constantize ","r rated_type "," acts_as_rated_options [] constantize find collect "," acts_as_rated_options [] constantize find "," acts_as_rated_options [] constantize "," acts_as_rated_options [] "," acts_as_rated_options ","rater id ","ActiveRecord Base  send to_s ","ActiveRecord Base  send "," raise ","rater id nil? ","rating_class column_names include? ! ","rating_class column_names include? ","rating_class column_names ","(send\n  (send\n    (send\n      (send nil :acts_as_rated_options) :[]\n      (sym :rater_class)) :constantize) :===\n  (lvar :rater)) ! "," acts_as_rated_options [] constantize === "," acts_as_rated_options [] constantize where collect "," acts_as_rated_options [] constantize where "," acts_as_rated_options [] constantize  column_names include? ! "," acts_as_rated_options [] constantize  column_names include? "," acts_as_rated_options [] constantize  column_names "]}," ActiveRecord Acts Rated ClassMethods drop_ratings_table":{"type":"method","name":"drop_ratings_table","children":[],"call":[" connection drop_table "," connection ","stats_table nil? ","options [] "]}," ActiveRecord Acts Rated ClassMethods create_ratings_table":{"type":"method","name":"create_ratings_table","children":[],"call":[" connection add_index "," connection ","t column "," connection create_table ","stats_table nil? ","with_rater ! ","options [] ","options [] != ","options [] !=  ! "]}," ActiveRecord Acts Rated ClassMethods remove_ratings_columns":{"type":"method","name":"remove_ratings_columns","children":[],"call":[" reset_column_information "," connection drop_column "," table_name "," connection ","rating_count == ","c name "," content_columns find "," content_columns "]}," ActiveRecord Acts Rated ClassMethods add_ratings_columns":{"type":"method","name":"add_ratings_columns","children":[],"call":[" reset_column_information "," connection add_column "," table_name "," connection ","(send\n  (send\n    (self) :content_columns) :find) ! ","rating_count == ","c name "," content_columns find "," content_columns "]}," ActiveRecord Acts Rated ClassMethods generate_ratings_columns":{"type":"method","name":"generate_ratings_columns","children":[],"call":["table column "]}," ActiveRecord Acts Rated RateMethods init_rating_fields":{"type":"method","name":"init_rating_fields","children":[],"call":[" rating_avg "," rating_total "," rating_count "," attributes has_key? "," attributes "]}," ActiveRecord Acts Rated RateMethods rated_by?":{"type":"method","name":"rated_by?","children":[],"call":[" ratings count > "," ratings count ","rater id "," ratings "," raise ","rating_class column_names include? ! ","rating_class column_names include? ","rating_class column_names ","rater id nil? ","rater nil? ","(send\n  (send\n    (send\n      (send nil :acts_as_rated_options) :[]\n      (sym :rater_class)) :constantize) :===\n  (lvar :rater)) ! "," acts_as_rated_options [] constantize === "," acts_as_rated_options [] constantize "," acts_as_rated_options [] "," acts_as_rated_options "," acts_as_rated_options [] constantize  column_names include? ! "," acts_as_rated_options [] constantize  column_names include? "," acts_as_rated_options [] constantize  column_names "]}," ActiveRecord Acts Rated RateMethods unrate":{"type":"method","name":"unrate","children":[],"call":["target save ","target nil? ! ","target nil? ","r destroy ","target rating_avg= ","target rating_avg nan? ","target rating_avg ","target rating_total / ","target rating_count ","target rating_total ","r rating ","rating_class transaction "," rating_statistic "," acts_as_rated_options [] "," acts_as_rated_options "," attributes has_key? "," attributes ","r nil? ! ","r nil? "," ratings find ","rater id "," ratings "," raise ","rating_class column_names include? ! ","rating_class column_names include? ","rating_class column_names ","rater id nil? ","rater nil? ","(send\n  (send\n    (send\n      (send nil :acts_as_rated_options) :[]\n      (sym :rater_class)) :constantize) :===\n  (lvar :rater)) ! "," acts_as_rated_options [] constantize === "," acts_as_rated_options [] constantize "," ratings where first "," ratings where ","ta ratings find get save ","ta ratings where first get save ","ta ratings find get nil? ! ","ta ratings where first get nil? ! ","ta ratings find get nil? ","ta ratings where first get nil? "," ratings find  dest ratings find oy "," ratings where first  dest ratings where first oy ","ta ratings find get  ratings find ating_avg= ","ta ratings where first get  ratings where first ating_avg= ","ta ratings find get  ratings find ating_avg nan? ","ta ratings where first get  ratings where first ating_avg nan? ","ta ratings find get  ratings find ating_avg ","ta ratings where first get  ratings where first ating_avg ","ta ratings find get  ratings find ating_total / ","ta ratings where first get  ratings where first ating_total / ","ta ratings find get  ratings find ating_count ","ta ratings where first get  ratings where first ating_count ","ta ratings find get  ratings find ating_total ","ta ratings where first get  ratings where first ating_total "," ratings find   ratings find ating "," ratings where first   ratings where first ating "," ratings find ating_class t ratings find ansaction "," ratings where first ating_class t ratings where first ansaction "," acts_as_rated_options [] constantize  transaction ","  ratings find ating_statistic ","  ratings where first ating_statistic "," acts_as_ ratings find ated_options [] "," acts_as_ ratings where first ated_options [] "," acts_as_ ratings find ated_options "," acts_as_ ratings where first ated_options "," att ratings find ibutes has_key? "," att ratings where first ibutes has_key? "," att ratings find ibutes "," att ratings where first ibutes "," ratings find  nil? ! "," ratings where first  nil? ! "," ratings find  nil? "," ratings where first  nil? ","  ratings find atings find ","  ratings where first atings find "," ratings find ate ratings find  id "," ratings where first ate ratings where first  id ","  ratings find atings ","  ratings where first atings ","  ratings find aise ","  ratings where first aise "," ratings find ating_class column_names include? ! "," ratings where first ating_class column_names include? ! "," acts_as_rated_options [] constantize  column_names include? ! "," ratings find ating_class column_names include? "," ratings where first ating_class column_names include? "," acts_as_rated_options [] constantize  column_names include? "," ratings find ating_class column_names "," ratings where first ating_class column_names "," acts_as_rated_options [] constantize  column_names "," ratings find ate ratings find  id nil? "," ratings where first ate ratings where first  id nil? "," ratings find ate ratings find  nil? "," ratings where first ate ratings where first  nil? ","(send\n  (send\n    (send\n      (send nil :acts_as_ ratings find ated_options) :[]\n      (sym : ratings find ate ratings find _class)) :constantize) :===\n  (lva ratings find  : ratings find ate ratings find )) ! ","(send\n  (send\n    (send\n      (send nil :acts_as_ ratings where first ated_options) :[]\n      (sym : ratings where first ate ratings where first _class)) :constantize) :===\n  (lva ratings where first  : ratings where first ate ratings where first )) ! "," acts_as_ ratings find ated_options [] constantize === "," acts_as_ ratings where first ated_options [] constantize === "," acts_as_ ratings find ated_options [] constantize "," acts_as_ ratings where first ated_options [] constantize ","  ratings find atings whe ratings find e fi ratings find st ","  ratings where first atings whe ratings where first e fi ratings where first st ","  ratings find atings whe ratings find e ","  ratings where first atings whe ratings where first e "]}," ActiveRecord Acts Rated RateMethods rate":{"type":"method","name":"rate","children":[],"call":["target save ","rate save "," new_record? ! "," new_record? ","rate rating= ","target rating_avg= ","target rating_total / ","target rating_count ","target rating_total ","value - ","rate rating "," ratings << "," ratings ","target rating_total= ","(or\n  (send\n    (lvar :target) :rating_total)\n  (int 0)) + ","target rating_count= ","(or\n  (send\n    (lvar :target) :rating_count)\n  (int 0)) + ","rate rater_id= ","rater id ","rating_class new ","r nil? ","rating_class transaction "," rating_statistic "," acts_as_rated_options [] "," acts_as_rated_options "," attributes has_key? "," attributes "," rating_statistic= "," acts_as_rated_options [] constantize new "," acts_as_rated_options [] constantize ","@rating_statistic class to_s == ","@rating_statistic class to_s ","@rating_statistic class "," acts_as_rated_options [] nil? "," raise "," acts_as_rated_options [] === "," ratings find ","rater id nil? ","rater nil? ","(send\n  (send\n    (send\n      (send nil :acts_as_rated_options) :[]\n      (sym :rater_class)) :constantize) :===\n  (lvar :rater)) ! "," acts_as_rated_options [] constantize === ","rater nil? ! ","with_rater ! ","rating_class column_names include? ","rating_class column_names "," ratings where first "," ratings where ","ta ratings find get save ","ta ratings where first get save ","rating_class new  save "," ratings find ate save "," ratings where first ate save "," new_ ratings find eco ratings find d? ! "," new_ ratings where first eco ratings where first d? ! "," new_ ratings find eco ratings find d? "," new_ ratings where first eco ratings where first d? ","rating_class new  rating= "," ratings find ate  ratings find ating= "," ratings where first ate  ratings where first ating= ","ta ratings find get  ratings find ating_avg= ","ta ratings where first get  ratings where first ating_avg= ","ta ratings find get  ratings find ating_total / ","ta ratings where first get  ratings where first ating_total / ","ta ratings find get  ratings find ating_count ","ta ratings where first get  ratings where first ating_count ","ta ratings find get  ratings find ating_total ","ta ratings where first get  ratings where first ating_total ","rating_class new  rating "," ratings find ate  ratings find ating "," ratings where first ate  ratings where first ating ","  ratings find atings << ","  ratings where first atings << ","  ratings find atings ","  ratings where first atings ","ta ratings find get  ratings find ating_total= ","ta ratings where first get  ratings where first ating_total= ","(o ratings find \n  (send\n    (lva ratings find  :ta ratings find get) : ratings find ating_total)\n  (int 0)) + ","(o ratings where first \n  (send\n    (lva ratings where first  :ta ratings where first get) : ratings where first ating_total)\n  (int 0)) + ","ta ratings find get  ratings find ating_count= ","ta ratings where first get  ratings where first ating_count= ","(o ratings find \n  (send\n    (lva ratings find  :ta ratings find get) : ratings find ating_count)\n  (int 0)) + ","(o ratings where first \n  (send\n    (lva ratings where first  :ta ratings where first get) : ratings where first ating_count)\n  (int 0)) + ","rating_class new  rating_class new r_id= "," ratings find ate  ratings find ate ratings find _id= "," ratings where first ate  ratings where first ate ratings where first _id= ","rating_class new r id "," ratings find ate ratings find  id "," ratings where first ate ratings where first  id "," ratings find ating_class new "," ratings where first ating_class new "," acts_as_rated_options [] constantize  new "," ratings find  nil? "," ratings where first  nil? "," ratings find ating_class t ratings find ansaction "," ratings where first ating_class t ratings where first ansaction "," acts_as_rated_options [] constantize  transaction ","  ratings find ating_statistic ","  ratings where first ating_statistic "," acts_as_rating_class new d_options [] "," acts_as_ ratings find ated_options [] "," acts_as_ ratings where first ated_options [] "," acts_as_rating_class new d_options "," acts_as_ ratings find ated_options "," acts_as_ ratings where first ated_options "," att ratings find ibutes has_key? "," att ratings where first ibutes has_key? "," att ratings find ibutes "," att ratings where first ibutes ","  ratings find ating_statistic= ","  ratings where first ating_statistic= "," acts_as_rating_class new d_options [] constantize new "," acts_as_ ratings find ated_options [] constantize new "," acts_as_ ratings where first ated_options [] constantize new "," acts_as_rating_class new d_options [] constantize "," acts_as_ ratings find ated_options [] constantize "," acts_as_ ratings where first ated_options [] constantize ","@ ratings find ating_statistic class to_s == ","@ ratings where first ating_statistic class to_s == ","@ ratings find ating_statistic class to_s ","@ ratings where first ating_statistic class to_s ","@ ratings find ating_statistic class ","@ ratings where first ating_statistic class "," acts_as_rating_class new d_options [] nil? "," acts_as_ ratings find ated_options [] nil? "," acts_as_ ratings where first ated_options [] nil? ","  ratings find aise ","  ratings where first aise "," acts_as_rating_class new d_options [] === "," acts_as_ ratings find ated_options [] === "," acts_as_ ratings where first ated_options [] === ","  ratings find atings find ","  ratings where first atings find ","rating_class new r id nil? "," ratings find ate ratings find  id nil? "," ratings where first ate ratings where first  id nil? ","rating_class new r nil? "," ratings find ate ratings find  nil? "," ratings where first ate ratings where first  nil? ","(send\n  (send\n    (send\n      (send nil :acts_as_rating_class new d_options) :[]\n      (sym :rating_class new r_class)) :constantize) :===\n  (lvar :rating_class new r)) ! ","(send\n  (send\n    (send\n      (send nil :acts_as_ ratings find ated_options) :[]\n      (sym : ratings find ate ratings find _class)) :constantize) :===\n  (lva ratings find  : ratings find ate ratings find )) ! ","(send\n  (send\n    (send\n      (send nil :acts_as_ ratings where first ated_options) :[]\n      (sym : ratings where first ate ratings where first _class)) :constantize) :===\n  (lva ratings where first  : ratings where first ate ratings where first )) ! "," acts_as_rating_class new d_options [] constantize === "," acts_as_ ratings find ated_options [] constantize === "," acts_as_ ratings where first ated_options [] constantize === ","rating_class new r nil? ! "," ratings find ate ratings find  nil? ! "," ratings where first ate ratings where first  nil? ! ","with_rating_class new r ! ","with_ ratings find ate ratings find  ! ","with_ ratings where first ate ratings where first  ! ","rating_class column_names include?  ! "," ratings find ating_class column_names include? "," ratings where first ating_class column_names include? "," acts_as_rated_options [] constantize  column_names include? "," ratings find ating_class column_names "," ratings where first ating_class column_names "," acts_as_rated_options [] constantize  column_names ","  ratings find atings whe ratings find e fi ratings find st ","  ratings where first atings whe ratings where first e fi ratings where first st ","  ratings find atings whe ratings find e ","  ratings where first atings whe ratings where first e "]}," ActiveRecord Acts Rated RateMethods rated_total":{"type":"method","name":"rated_total","children":[],"call":[" ratings sum "," ratings "," rating_statistic rating_total "," rating_statistic "," acts_as_rated_options [] "," acts_as_rated_options "," rating_total "," attributes has_key? "," attributes "]}," ActiveRecord Acts Rated RateMethods rated_count":{"type":"method","name":"rated_count","children":[],"call":[" ratings count "," ratings "," rating_statistic rating_count "," rating_statistic "," acts_as_rated_options [] "," acts_as_rated_options "," rating_count "," attributes has_key? "," attributes "]}," ActiveRecord Acts Rated RateMethods rated?":{"type":"method","name":"rated?","children":[],"call":[" ratings find nil? ! "," ratings find nil? "," ratings find "," ratings ","stats > "," rating_statistic rating_count "," rating_statistic "," acts_as_rated_options [] "," acts_as_rated_options "," rating_count > "," rating_count "," rating_count nil? ! "," rating_count nil? "," attributes has_key? "," attributes "," ratings first nil? ! "," ratings first nil? "," ratings first "]}," ActiveRecord Acts Rated RateMethods rating_average":{"type":"method","name":"rating_average","children":[],"call":["avg nan? ","avg nil? "," ratings average "," ratings "," rating_statistic rating_avg "," rating_statistic "," acts_as_rated_options [] "," acts_as_rated_options "," rating_avg "," attributes has_key? "," attributes "," ratings average  nan? "," ratings average  nil? "," rating_statistic rating_ ratings average  "," rating_ ratings average  "]}," ActiveRecord Acts Rated RateMethods included":{"type":"method","name":"included","children":[],"call":[]}," ActiveRecord Acts Rated ClassMethods acts_as_rated":{"type":"method","name":"acts_as_rated","children":[],"call":["rater_as_class class_eval ","rating_class to_s ","rater_as_class instance_methods include? ","rater_as_class instance_methods ","rater_class constantize ","options [] "," before_create "," has_one ","stats_class to_s ","stats_class nil? "," has_many ","rater_class to_s "," class_eval "," class_inheritable_reader "," write_inheritable_attribute "," raise ","Range  === ","options [] nil? ","Object  class_eval ","Object  const_defined? "," send "," included_modules include? "," included_modules "," acts_as_rated_options= "," class_attribute ","rater_class constantize  class_eval ","rater_class constantize  instance_methods include? ","rater_class constantize  instance_methods "]}," ActiveRecord Acts Rated included":{"type":"method","name":"included","children":[],"call":[]}," link_to_category_with_title":{"type":"method","name":"link_to_category_with_title","children":[],"call":[" link_to ","category id ","category title "]}," link_to_article_with_title":{"type":"method","name":"link_to_article_with_title","children":[],"call":[" link_to ","article id ","article title "," l ","article id to_s "]}," link_to_article":{"type":"method","name":"link_to_article","children":[],"call":[" link_to ","article title ","article id "," l ","article id to_s "]}," KnowledgeBase ProjectPatch included":{"type":"method","name":"included","children":[],"call":[]}}