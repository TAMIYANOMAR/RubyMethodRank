{" TTY Prompt stderr":{"type":"method","name":"stderr","children":[],"call":[]}," TTY Prompt stdout":{"type":"method","name":"stdout","children":[],"call":[]}," TTY Prompt stdin":{"type":"method","name":"stdin","children":[],"call":[]}," TTY Prompt tty?":{"type":"method","name":"tty?","children":[],"call":[" stdout tty? "," stdout "]}," TTY Prompt suggest":{"type":"method","name":"suggest","children":[],"call":[" say ","suggestion suggest ","Suggestion  new ","Suggestion  new  suggest "]}," TTY Prompt error":{"type":"method","name":"error","children":[],"call":[" say ","options merge ","args each ","Utils  extract_options! ","(pair\n  (sym :color)\n  (sym :red)) merge ","Utils  extract_options!  merge ","Utils  extract_Utils  extract_options! ! "]}," TTY Prompt warn":{"type":"method","name":"warn","children":[],"call":[" say ","options merge ","args each ","Utils  extract_options! ","(pair\n  (sym :color)\n  (sym :yellow)) merge ","Utils  extract_options!  merge ","Utils  extract_Utils  extract_options! ! "]}," TTY Prompt confirm":{"type":"method","name":"confirm","children":[],"call":[" say ","options merge ","args each ","Utils  extract_options! ","Utils  extract_options!  merge ","Utils  extract_Utils  extract_options! ! "]}," TTY Prompt say":{"type":"method","name":"say","children":[],"call":["statement declare ","Statement  new ","message length > ","message length ","message to_str ","statement call ","message to_s ","message empty? ","Statement  new  declare ","message to_str  length > ","message to_s  length > ","message to_str  length ","message to_s  length ","message to_str  to_str ","message to_s  to_str ","Statement  new  call ","message to_str  to_s ","message to_s  to_s ","message to_str  empty? ","message to_s  empty? "]}," TTY Prompt no?":{"type":"method","name":"no?","children":[],"call":[" yes? ! "," yes? ","question call ! ","question call ","ConfirmQuestion  new ","options merge! ","options key? ","defaults reject ","Utils  extract_options! ","(pair\n  (sym :default)\n  (false)) merge ","ConfirmQuestion  new  call ! ","ConfirmQuestion  new  call ","Utils  extract_options!  merge! ","Utils  extract_options!  key? ","Utils  extract_Utils  extract_options! ! "]}," TTY Prompt yes?":{"type":"method","name":"yes?","children":[],"call":[" ask read_bool "," ask ","question call ","ConfirmQuestion  new ","options merge! ","options key? ","defaults reject ","Utils  extract_options! ","(pair\n  (sym :default)\n  (true)) merge ","args << ","ConfirmQuestion  new  call ","Utils  extract_options!  merge! ","Utils  extract_options!  key? ","Utils  extract_Utils  extract_options! ! "]}," TTY Prompt ask":{"type":"method","name":"ask","children":[],"call":["question prompt ","question instance_eval "," block_given? ","Question  new ","Utils  extract_options! ","question call ","options merge! "," class messages "," class "," invoke_question ","Question  new  prompt ","Question  new  instance_eval ","Utils  extract_Utils  extract_options! ! ","Question  new  call ","Utils  extract_options!  merge! "," invoke_Question  new  "]}," TTY Prompt initialize":{"type":"method","name":"initialize","children":[],"call":["options fetch ","Reader  new ","options [] ","Pastel  new ","@enabled_color nil? ","Utils  extract_options! ","TTY Reader  new ","Symbols  symbols merge ","Symbols  symbols "," enabled_color "," enabled_color nil? ","Utils  extract_options!  fetch ","Utils  extract_options!  [] ","options []  nil? ","Utils  extract_Utils  extract_options! ! "]}," TTY Utils extract_options":{"type":"method","name":"extract_options","children":[],"call":["options to_hash dup ","options to_hash ","options respond_to? ","args last ","args last  to_hash dup ","args last  to_hash ","args last  respond_to? "]}," TTY Utils extract_options!":{"type":"method","name":"extract_options!","children":[],"call":["args pop ","args last respond_to? ","args last "]}," TTY Prompt Suggestion build_multiple_suggestions":{"type":"method","name":"build_multiple_suggestions","children":[],"call":["suggestion << ","(send\n  (ivar :@suggestions) :map) join ","  * + ","  * "," indent ","@suggestions map "," plural_text + "," plural_text "," plural_text + + "]}," TTY Prompt Suggestion build_single_suggestion":{"type":"method","name":"build_single_suggestion","children":[],"call":["suggestion << ","  * + ","@suggestions first ","  * "," indent "," single_text + "," single_text "," single_text + + + "," single_text + + "]}," TTY Prompt Suggestion evaluate":{"type":"method","name":"evaluate","children":[],"call":[" build_multiple_suggestions "," build_single_suggestion ","@suggestions one? ","@suggestions empty? "]}," TTY Prompt Suggestion measure_distances":{"type":"method","name":"measure_distances","children":[],"call":["distances [] << ","distances [] ","@comparator distance ","possibilities each ","hash []= ","Hash  new "]}," TTY Prompt Suggestion suggest":{"type":"method","name":"suggest","children":[],"call":[" evaluate ","distances [] sort ","distances [] ","minimum_distance < ","distances keys max ","distances keys ","distances keys min "," measure_distances "," measure_distances  [] sort "," measure_distances  [] ","distances keys min  < "," measure_distances  keys max "," measure_distances  keys "," measure_distances  keys min "," measure_ measure_distances  "]}," TTY Prompt Suggestion initialize":{"type":"method","name":"initialize","children":[],"call":["Distance  new ","options fetch "]}," TTY Prompt Statement declare":{"type":"method","name":"declare","children":[],"call":[" shell output flush "," shell output "," shell "," shell output print "," shell output puts ","(str \"( |\\\\t)(\\\\e\\\\[\\\\d+(;\\\\d+)*m)?\\\\Z\") !~ "," newline ","@pastel decorate "," color "," prompt output flush "," prompt output "," prompt "," prompt output print "," prompt output puts "]}," TTY Prompt Statement initialize":{"type":"method","name":"initialize","children":[],"call":["options fetch ","Pastel  new "]}," TTY Prompt ResponseDelegation dispatch":{"type":"method","name":"dispatch","children":[],"call":[]}," TTY Prompt Response valid_type?":{"type":"method","name":"valid_type?","children":[],"call":[" class VALID_TYPES  include? ","type to_sym "," class "]}," TTY Prompt Response read_type":{"type":"method","name":"read_type","children":[],"call":[" read_float "," read_symbol "," read_string "," type "," raise "," valid_type? ! "," valid_type? "," read "," read_keypress "," read_file "," read_multiline "," read_range "," read_int "," read_date "," read_char "," read_email "," read_bool "]}," TTY Prompt Response with_exception":{"type":"method","name":"with_exception","children":[],"call":[" raise ","block call "," question error? "," question "]}," TTY Prompt Response read_keypress":{"type":"method","name":"read_keypress","children":[],"call":[" raise ","key == "," question evaluate_response tap "," question evaluate_response "," read_input "," question "," question raw "," question echo "]}," TTY Prompt Response read_password":{"type":"method","name":"read_password","children":[],"call":[" evaluate_response "," question echo "," question "]}," TTY Prompt Response read_multiple":{"type":"method","name":"read_multiple","children":[],"call":["response << ","value !~ ","value == ","value ! "," evaluate_response "," loop "," evaluate_response  !~ "," evaluate_response  == "," evaluate_response  ! "]}," TTY Prompt Response read_email":{"type":"method","name":"read_email","children":[],"call":[" read_string "," with_exception "," question prompt "," question statement "," question "," question error "," question validate "," question call ","\n + "," question error? "]}," TTY Prompt Response read_file":{"type":"method","name":"read_file","children":[],"call":["File  open ","File  join "," directory "," evaluate_response "]}," TTY Prompt Response read_bool":{"type":"method","name":"read_bool","children":[],"call":["@converter convert to ","@converter convert "," evaluate_response "]}," TTY Prompt Response read_datetime":{"type":"method","name":"read_datetime","children":[],"call":["@converter convert to ","@converter convert "," evaluate_response "]}," TTY Prompt Response read_date":{"type":"method","name":"read_date","children":[],"call":["@converter convert to ","@converter convert "," evaluate_response "]}," TTY Prompt Response read_range":{"type":"method","name":"read_range","children":[],"call":["@converter convert to ","@converter convert "," evaluate_response "]}," TTY Prompt Response read_regex":{"type":"method","name":"read_regex","children":[],"call":["Kernel  send "," evaluate_response "]}," TTY Prompt Response read_float":{"type":"method","name":"read_float","children":[],"call":["@converter convert to ","@converter convert "," evaluate_response "]}," TTY Prompt Response read_int":{"type":"method","name":"read_int","children":[],"call":["@converter convert to ","@converter convert "," evaluate_response "]}," TTY Prompt Response read_choice":{"type":"method","name":"read_choice","children":[],"call":[" evaluate_response "," question argument "," question "," question default? "]}," TTY Prompt Response read_symbol":{"type":"method","name":"read_symbol","children":[],"call":["input to_sym "," evaluate_response "]}," TTY Prompt Response read_text":{"type":"method","name":"read_text","children":[],"call":[" String "," evaluate_response "]}," TTY Prompt Response read_char":{"type":"method","name":"read_char","children":[],"call":[" String chars to_a [] "," String chars to_a "," String chars "," String "," evaluate_response "," question char "," question "]}," TTY Prompt Response read_string":{"type":"method","name":"read_string","children":[],"call":[" String strip "," String "," evaluate_response "]}," TTY Prompt Response evaluate_response":{"type":"method","name":"evaluate_response","children":[],"call":[" question evaluate_response "," question "," block_given? "," no_input? "," read_input "," no_ read_input ? "," read_ read_input  "]}," TTY Prompt Response no_input?":{"type":"method","name":"no_input?","children":[],"call":["input empty? ","input == ","input ! "]}," TTY Prompt Response read_input":{"type":"method","name":"read_input","children":[],"call":[" reader gets "," reader "," reader getc "," question mask "," question "," question character? "," reader readpartial "," question raw? "," reader mode raw "," question raw "," reader mode "," reader mode echo "," question echo "," question echo? "," question mask? "]}," TTY Prompt Response read":{"type":"method","name":"read","children":[],"call":[" question evaluate_response "," read_input "," question "]}," TTY Prompt Response initialize":{"type":"method","name":"initialize","children":[],"call":["Reader  new ","Necromancer  new "]}," TTY Prompt Reader print_char":{"type":"method","name":"print_char","children":[],"call":[" shell output putc ","mask ! "," shell output "," shell "," prompt output putc "," prompt output "," prompt "]}," TTY Prompt Reader handle_char":{"type":"method","name":"handle_char","children":[],"call":["value << "," print_char ","value slice! ","value empty? ","char == ","line << ","line slice ","line empty? "]}," TTY Prompt Reader readpartial":{"type":"method","name":"readpartial","children":[],"call":[" shell input readpartial "," shell input "," shell "," prompt input readpartial "," prompt input "," prompt "]}," TTY Prompt Reader gets":{"type":"method","name":"gets","children":[],"call":[" shell input gets "," shell input "," shell "," prompt input gets "," prompt input "," prompt "]}," TTY Prompt Reader getc":{"type":"method","name":"getc","children":[],"call":[" mode echo_on "," mode "," handle_char ","(or\n  (send\n    (lvar :char) :==\n    (const nil :CARRIAGE_RETURN))\n  (send\n    (lvar :char) :==\n    (const nil :NEWLINE))) ! ","char == "," shell input getbyte "," shell input "," shell "," buffer "," prompt input getbyte "," prompt input "," prompt "," handle_ shell input getbyte  "," handle_ prompt input getbyte  ","(or\n  (send\n    (lvar : shell input getbyte ) :==\n    (const nil :CARRIAGE_RETURN))\n  (send\n    (lvar : shell input getbyte ) :==\n    (const nil :NEWLINE))) ! ","(or\n  (send\n    (lvar : prompt input getbyte ) :==\n    (const nil :CARRIAGE_RETURN))\n  (send\n    (lvar : prompt input getbyte ) :==\n    (const nil :NEWLINE))) ! "," shell input getbyte  == "," prompt input getbyte  == "]}," TTY Prompt Reader buffer":{"type":"method","name":"buffer","children":[],"call":[" shell output sync= "," shell output "," shell ","block call "," block_given? "," shell output sync "," output sync= "," output "," output sync "," prompt output sync= "," prompt output "," prompt "," prompt output sync "]}," TTY Prompt Reader initialize":{"type":"method","name":"initialize","children":[],"call":["Mode  new ","options fetch ","Console  new ","WinConsole  new "," windows? "," subscribe ","h exclude= ","line strip == ","line strip "," proc ","h duplicates= ","History  new "," select_console "]}," TTY Prompt Question within?":{"type":"method","name":"within?","children":[],"call":[" fail ","@in include? "," in? "]}," TTY Prompt Question check_valid":{"type":"method","name":"check_valid","children":[],"call":[" fail "," valid_values join "," valid_values "," valid_values include? "," Array all? "," Array "]}," TTY Prompt Question check_required":{"type":"method","name":"check_required","children":[],"call":[" fail ","value nil? "," default? ! "," default? "," required? "]}," TTY Prompt Question evaluate_response":{"type":"method","name":"evaluate_response","children":[],"call":[" modifier apply_to "," modifier "," validation valid_value? "," validation "," within? "," check_valid "," valid_values empty? "," valid_values ","value nil? "," check_required "," default_value "," default? ","value ! "," validation call ","input nil? ","input ! "]}," TTY Prompt Question in?":{"type":"method","name":"in?","children":[],"call":["@in ! ! ","@in ! ","@in != "]}," TTY Prompt Question in":{"type":"method","name":"in","children":[],"call":["@converter convert to ","@converter convert ","value nil? "," converter_registry call "," converter_registry ","@in is_a? ! ","@in is_a? "," in? "," messages []= "," messages ","Converters  convert ","@converter convert to  is_a? ! "," converter_registry call  is_a? ! ","Converters  convert  is_a? ! ","@converter convert to  is_a? "," converter_registry call  is_a? ","Converters  convert  is_a? "]}," TTY Prompt Question character?":{"type":"method","name":"character?","children":[],"call":["@character ! ! ","@character ! "]}," TTY Prompt Question char":{"type":"method","name":"char","children":[],"call":["value nil? "]}," TTY Prompt Question mask?":{"type":"method","name":"mask?","children":[],"call":["@mask ! ! ","@mask ! "]}," TTY Prompt Question mask":{"type":"method","name":"mask","children":[],"call":["char nil? "]}," TTY Prompt Question raw?":{"type":"method","name":"raw?","children":[],"call":["@raw ! ! ","@raw ! "]}," TTY Prompt Question raw":{"type":"method","name":"raw","children":[],"call":["value nil? "]}," TTY Prompt Question echo?":{"type":"method","name":"echo?","children":[],"call":["@echo ! ! ","@echo ! "]}," TTY Prompt Question echo":{"type":"method","name":"echo","children":[],"call":["value nil? "]}," TTY Prompt Question error?":{"type":"method","name":"error?","children":[],"call":["@error ! ! ","@error ! "]}," TTY Prompt Question on_error":{"type":"method","name":"on_error","children":[],"call":[]}," TTY Prompt Question modify":{"type":"method","name":"modify","children":[],"call":["Modifier  new "]}," TTY Prompt Question clean":{"type":"method","name":"clean","children":[],"call":[]}," TTY Prompt Question valid":{"type":"method","name":"valid","children":[],"call":[]}," TTY Prompt Question validate":{"type":"method","name":"validate","children":[],"call":["Validation  new "," messages []= "," messages "]}," TTY Prompt Question required?":{"type":"method","name":"required?","children":[],"call":[" required "]}," TTY Prompt Question argument":{"type":"method","name":"argument","children":[],"call":[]}," TTY Prompt Question default?":{"type":"method","name":"default?","children":[],"call":["@default_value ! ! ","@default_value ! ","@default != ","@default ! ! ","@default ! "]}," TTY Prompt Question default":{"type":"method","name":"default","children":[],"call":["value == "]}," TTY Prompt Question prompt":{"type":"method","name":"prompt","children":[],"call":[" shell say "," shell prefix + "," statement "," shell prefix "," shell "," statement= "]}," TTY Prompt Question initialize":{"type":"method","name":"initialize","children":[],"call":["Necromancer  new ","Validation  new ","options fetch ","Modifier  new ","Prompt  new ","@evaluator << ","Evaluator  new ","Utils  deep_copy ","@prompt help_color ","@prompt active_color ","@prompt prefix ","@prompt quiet ","options []= ","options [] "," warn ","Evaluator  new  << "]}," TTY Prompt Question Validation check_validation":{"type":"method","name":"check_validation","children":[],"call":[" fail "," validation call "," validation "," validation is_a? "," validation =~ ","value to_s "," validate? ","value to_s  to_s "]}," TTY Prompt Question Validation valid_value?":{"type":"method","name":"valid_value?","children":[],"call":[" check_validation "]}," TTY Prompt Question Validation validate?":{"type":"method","name":"validate?","children":[],"call":[" validation ! ! "," validation ! "," validation "]}," TTY Prompt Question Validation coerce":{"type":"method","name":"coerce","children":[],"call":[" fail ","validation class ","Regexp  new ","validation to_s ","pattern class ","pattern to_s "," raise "]}," TTY Prompt Question Validation initialize":{"type":"method","name":"initialize","children":[],"call":[" coerce "]}," TTY Prompt Question Modifier whitespace":{"type":"method","name":"whitespace","children":[],"call":[]}," TTY Prompt Question Modifier letter_case":{"type":"method","name":"letter_case","children":[],"call":[]}," TTY Prompt Question Modifier apply_to":{"type":"method","name":"apply_to","children":[],"call":["Modifier  whitespace ","Modifier  letter_case "," modifiers reduce "," modifiers "]}," TTY Prompt Question Modifier initialize":{"type":"method","name":"initialize","children":[],"call":[" Array "]}," TTY Prompt Mode raw":{"type":"method","name":"raw","children":[],"call":["@raw raw "]}," TTY Prompt Mode raw_off":{"type":"method","name":"raw_off","children":[],"call":["@raw off "]}," TTY Prompt Mode raw_on":{"type":"method","name":"raw_on","children":[],"call":["@raw on "]}," TTY Prompt Mode echo":{"type":"method","name":"echo","children":[],"call":["@echo echo "]}," TTY Prompt Mode echo_off":{"type":"method","name":"echo_off","children":[],"call":["@echo off "]}," TTY Prompt Mode echo_on":{"type":"method","name":"echo_on","children":[],"call":["@echo on "]}," TTY Prompt Mode initialize":{"type":"method","name":"initialize","children":[],"call":["TTY Prompt Mode Raw  new ","TTY Prompt Mode Echo  new "]}," TTY Prompt Mode Raw raw":{"type":"method","name":"raw","children":[],"call":[" exit "," off ","block call "," block_given? "," on "," puts ","error backtrace ","error message ","error class "]}," TTY Prompt Mode Raw off":{"type":"method","name":"off","children":[],"call":["TTY Platform  unix? "]}," TTY Prompt Mode Raw on":{"type":"method","name":"on","children":[],"call":["TTY Platform  unix? "]}," TTY Prompt Mode Echo echo":{"type":"method","name":"echo","children":[],"call":[" exit "," on ","block call "," block_given? "," off "," puts ","error backtrace ","error message ","error class "]}," TTY Prompt Mode Echo off":{"type":"method","name":"off","children":[],"call":["TTY Platform  unix? "]}," TTY Prompt Mode Echo on":{"type":"method","name":"on","children":[],"call":["TTY Platform  unix? "]}," TTY Prompt History initialize":{"type":"method","name":"initialize","children":[],"call":[]}," Error error_wrapping":{"type":"method","name":"error_wrapping","children":[],"call":[" raise ","block call "," question error? "," question "]}," Error <<":{"type":"method","name":"<<","children":[],"call":["@errors << "]}," Error initialize":{"type":"method","name":"initialize","children":[],"call":[]}," TTY Prompt Distance distance":{"type":"method","name":"distance","children":[],"call":["distances [] [] ","distances [] ","distances [] []= ","(send\n  (send\n    (lvar :distances) :[]\n    (lvar :first_index)) :[]\n  (lvar :second_index)) min ","distances [] [] + ","second_index - ","first_index - ","second_char == ","first_char == ","second [] ","first [] ","second_index > ","first_index > ","(send\n  (send\n    (lvar :distances) :[]\n    (send\n      (lvar :first_index) :-\n      (int 1))) :[]\n  (lvar :second_index)) min + ","(send\n  (send\n    (lvar :distances) :[]\n    (send\n      (lvar :first_index) :-\n      (int 1))) :[]\n  (lvar :second_index)) min ","1 upto ","distances []= ","0 upto to_a ","0 upto ","distances << ","(lvar :index) + ","(int 0) * ","second to_s length ","second to_s ","first to_s length ","first to_s ","second []  == ","first []  == "]}," TTY Prompt collect":{"type":"method","name":"collect","children":[],"call":["collector call ","AnswersCollector  new ","AnswersCollector  new  call "]}," TTY Prompt ok":{"type":"method","name":"ok","children":[],"call":[" say ","options merge ","args each ","Utils  extract_options! ","(pair\n  (sym :color)\n  (sym :green)) merge ","Utils  extract_options!  merge ","Utils  extract_Utils  extract_options! ! "]}," TTY Prompt slider":{"type":"method","name":"slider","children":[],"call":["slider call ","Slider  new ","Utils  extract_options! ","Slider  new  call ","Utils  extract_Utils  extract_options! ! "]}," TTY Prompt expand":{"type":"method","name":"expand","children":[],"call":[" invoke_select "]}," TTY Prompt invoke_select":{"type":"method","name":"invoke_select","children":[],"call":["list call ","object new ","args flatten ","args empty? ","Utils  extract_options! ","args [] is_a? ","args [] ","args size == ","args size ","options dup ","block ! ","object new  call ","Utils  extract_Utils  extract_options! ! ","Utils  extract_options!  dup "]}," TTY Prompt enum_select":{"type":"method","name":"enum_select","children":[],"call":[" invoke_select "]}," TTY Prompt multi_select":{"type":"method","name":"multi_select","children":[],"call":[" invoke_select ","list call ","MultiList  new ","args flatten ","args empty? ","Utils  extract_options! ","MultiList  new  call ","Utils  extract_Utils  extract_options! ! "]}," TTY Prompt select":{"type":"method","name":"select","children":[],"call":[" invoke_select ","list call ","List  new ","args flatten ","args empty? ","Utils  extract_options! ","List  new  call ","Utils  extract_Utils  extract_options! ! "]}," TTY Prompt mask":{"type":"method","name":"mask","children":[],"call":["question call ","MaskQuestion  new ","Utils  extract_options! ","options merge! "," class messages "," class "," invoke_question ","MaskQuestion  new  call ","Utils  extract_Utils  extract_options! ! ","Utils  extract_options!  merge! "," invoke_MaskQuestion  new  "]}," TTY Prompt multiline":{"type":"method","name":"multiline","children":[],"call":[" ask ","args << ","options merge! ","Utils  extract_options! "," invoke_question ","Utils  extract_options!  merge! ","Utils  extract_Utils  extract_options! ! "]}," TTY Prompt keypress":{"type":"method","name":"keypress","children":[],"call":[" ask ","args << ","options merge! ","Utils  extract_options! "," invoke_question ","Utils  extract_options!  merge! ","Utils  extract_Utils  extract_options! ! "]}," TTY Prompt messages":{"type":"method","name":"messages","children":[],"call":[]}," TTY Utils deep_copy":{"type":"method","name":"deep_copy","children":[],"call":["Marshal  load ","Marshal  dump "]}," TTY Utils blank?":{"type":"method","name":"blank?","children":[],"call":["BLANK_REGEX  === ","value empty? ","value respond_to? ","value nil? "]}," TTY TestPrompt initialize":{"type":"method","name":"initialize","children":[],"call":["options merge! ","options fetch ","StringIO  new ","Pastel  new "]}," TTY Prompt Statement call":{"type":"method","name":"call","children":[],"call":["@prompt flush ","@prompt print ","@prompt puts ","(str \"( |\\\\t)(\\\\e\\\\[\\\\d+(;\\\\d+)*m)?\\\\Z\") !~ "," newline ","@prompt decorate "," color "]}," TTY Prompt Slider render_slider":{"type":"method","name":"render_slider","children":[],"call":["output << "," range [] "," range ","- * "," range size - - "," range size - "," range size ","@prompt decorate "," symbols [] "," symbols "," symbols [] * ","@format gsub % ","@format gsub ","(send\n  (send\n    (send nil :symbols) :[]\n    (sym :line)) :*\n  (ivar :@active)) + + ","(send\n  (send\n    (send nil :symbols) :[]\n    (sym :line)) :*\n  (ivar :@active)) + ","(send\n  (send\n    (ivar :@symbols) :[]\n    (sym :line)) :*\n  (ivar :@active)) + + ","@symbols [] * ","@symbols [] ","(send\n  (send\n    (ivar :@symbols) :[]\n    (sym :line)) :*\n  (ivar :@active)) + ","@format call "," choices [] name "," choices [] "," choices "," choices size - - "," choices size - "," choices size "]}," TTY Prompt Slider render_header":{"type":"method","name":"render_header","children":[],"call":["@prompt decorate "," render_answer to_s "," render_answer "," answer to_s "," answer "]}," TTY Prompt Slider render_question":{"type":"method","name":"render_question","children":[],"call":["@prompt print "," render_slider ","@prompt puts "," render_header ","header << ","\n + ","@prompt decorate "," answer to_s "," answer ","header join "," help ","@done ! "," help_always? "," help_start? "," choices [] to_s "," choices [] "," choices ","@prompt prefix "]}," TTY Prompt Slider render_answer":{"type":"method","name":"render_answer","children":[],"call":[" range [] "," range "]}," TTY Prompt Slider refresh":{"type":"method","name":"refresh","children":[],"call":["@prompt print ","@prompt clear_lines ","@question scan length + ","@question scan length ","@question scan ","@prompt clear_@question scan length +  "]}," TTY Prompt Slider render":{"type":"method","name":"render","children":[],"call":["@prompt print ","@prompt show "," render_answer "," render_question "," refresh ","@prompt read_keypress ","@prompt hide "," answer ","question lines count ","question lines "," render_ render_answer  "," render_ render_question  ","  render_answer  "," render_question  lines count "," render_question  lines "]}," TTY Prompt Slider keyreturn":{"type":"method","name":"keyreturn","children":[],"call":[]}," TTY Prompt Slider keyright":{"type":"method","name":"keyright","children":[],"call":["(send\n  (ivar :@active) :+\n  (ivar :@step)) <= "," range size "," range ","@active + ","(send\n  (ivar :@active) :+\n  (ivar :@step)) < ","(send\n  (ivar :@active) :+\n  (int 1)) < "," choices size "," choices "]}," TTY Prompt Slider keyleft":{"type":"method","name":"keyleft","children":[],"call":["@active > "]}," TTY Prompt Slider call":{"type":"method","name":"call","children":[],"call":[" render "," initial ","block call ","@prompt subscribe "," choices ","(irange\n  (ivar :@min)\n  (ivar :@max)) step to_a ","(irange\n  (ivar :@min)\n  (ivar :@max)) step ","@choices empty? "]}," TTY Prompt Slider step":{"type":"method","name":"step","children":[],"call":[]}," TTY Prompt Slider max":{"type":"method","name":"max","children":[],"call":[]}," TTY Prompt Slider min":{"type":"method","name":"min","children":[],"call":[]}," TTY Prompt Slider default":{"type":"method","name":"default","children":[],"call":[]}," TTY Prompt Slider range":{"type":"method","name":"range","children":[],"call":["(irange\n  (ivar :@min)\n  (ivar :@max)) step to_a ","(irange\n  (ivar :@min)\n  (ivar :@max)) step "]}," TTY Prompt Slider initial":{"type":"method","name":"initial","children":[],"call":[" range index "," range "," range size / "," range size ","@default nil? ","@default - "," choices index "," choices "," choices find_by "," choices size / "," choices size "]}," TTY Prompt Slider initialize":{"type":"method","name":"initialize","children":[],"call":["@prompt subscribe ","@prompt help_color ","options fetch ","@prompt active_color ","options [] ","@prompt prefix ","@prompt symbols merge ","@prompt symbols ","@prompt quiet ","Choices  new "]}," TTY Prompt Result failure?":{"type":"method","name":"failure?","children":[],"call":[" is_a? "]}," TTY Prompt Result success?":{"type":"method","name":"success?","children":[],"call":[" is_a? "]}," TTY Prompt Result with":{"type":"method","name":"with","children":[],"call":["Failure  new "," question ","Success  new ","accumulated_errors empty? "," errors + "," Array "," errors ","validator call "," value "," errors +  empty? "]}," TTY Prompt Result initialize":{"type":"method","name":"initialize","children":[],"call":[]}," TTY Prompt Reader handle_interrupt":{"type":"method","name":"handle_interrupt","children":[],"call":[" raise ","@interrupt call "," exit ","Process  kill ","Process  pid "]}," TTY Prompt Reader emit_key_event":{"type":"method","name":"emit_key_event","children":[],"call":[" publish ","event key name ","event key ","event emit? ","KeyEvent  from ","KeyEvent  from  key name ","KeyEvent  from  key ","KeyEvent  from  emit? "]}," TTY Prompt Reader read_multiline":{"type":"method","name":"read_multiline","children":[],"call":["response << "," block_given? ","line !~ ","line == ","line ! "," read_line "," loop ","lines << ","line to_s empty? ","line to_s ","@stop ! "," read_line  !~ "," read_line  == "," read_line  ! "," read_ read_line  "," read_line s << "," read_line  to_s empty? "," read_line  to_s "]}," TTY Prompt Reader read_line":{"type":"method","name":"read_line","children":[],"call":["line << ","line slice ","line empty? ","char_byte == "," emit_key_event ","(or\n  (send\n    (lvar :char_byte) :==\n    (const nil :CARRIAGE_RETURN))\n  (send\n    (lvar :char_byte) :==\n    (const nil :NEWLINE))) ! ","char unpack [] ","char unpack "," read_char "," mode echo "," mode "," buffer "," output print ","  + ","backspaces >= "," output ","opts [] ","delete_char [] ","code == ","line size ","line slice! "," trigger_key_event ","codes pack ","codes [] "," get_codes ","c == "," proc ","(pair\n  (sym :echo)\n  (true)) merge ","line to_s "," add_to_history ","line to_s rstrip "," track_history? ","line start? ","BACKSPACE  == "," console keys [] == "," console keys [] "," console keys "," console ","line size - ","line cursor ","line end? ! ","line end? ","line move_to_start ","char == ","prompt + ","line insert ","line move_to_end ","line right ","line left ","line replace "," history_next "," history_next? "," history_previous "," history_previous? ","ctrls include? "," console keys key "," handle_interrupt ","(send\n  (send\n    (send nil :console) :keys) :[]\n  (sym :ctrl_d)) include? ","line delete ","DELETE  == "," unbufferred "," console keys keys grep "," console keys keys ","Line  new ","args pop ","args empty? ","args last respond_to? ","args last "," handle_char "," publish_keypress_event "," convert_byte ","(or\n  (send\n    (lvar :char) :==\n    (const nil :CARRIAGE_RETURN))\n  (send\n    (lvar :char) :==\n    (const nil :NEWLINE))) ! "," input getbyte "," input ","line slice  << ","Line  new  << "," handle_char  << ","line slice  slice ","Line  new  slice "," handle_char  slice ","line slice  empty? ","Line  new  empty? "," handle_char  empty? ","char unpack []  == "," read_char _byte == ","codes pack _byte == "," input getbyte _byte == ","(or\n  (send\n    (lvar :char unpack [] ) :==\n    (const nil :CARRIAGE_RETURN))\n  (send\n    (lvar :char unpack [] ) :==\n    (const nil :NEWLINE))) ! ","(or\n  (send\n    (lvar : read_char _byte) :==\n    (const nil :CARRIAGE_RETURN))\n  (send\n    (lvar : read_char _byte) :==\n    (const nil :NEWLINE))) ! ","(or\n  (send\n    (lvar :codes pack _byte) :==\n    (const nil :CARRIAGE_RETURN))\n  (send\n    (lvar :codes pack _byte) :==\n    (const nil :NEWLINE))) ! ","(or\n  (send\n    (lvar : input getbyte _byte) :==\n    (const nil :CARRIAGE_RETURN))\n  (send\n    (lvar : input getbyte _byte) :==\n    (const nil :NEWLINE))) ! "," read_char  unpack [] ","codes pack  unpack [] "," input getbyte  unpack [] "," read_char  unpack ","codes pack  unpack "," input getbyte  unpack "," read_ read_char  "," read_codes pack  "," read_ input getbyte  ","line size  >= ","(pair\n  (sym :echo)\n  (true)) merge  [] ","delete_ read_char  [] ","delete_codes pack  [] ","delete_ input getbyte  [] ","codes []  == ","line slice  size ","Line  new  size "," handle_char  size ","line slice  slice! ","Line  new  slice! "," handle_char  slice! ","codes [] s pack "," get_codes  pack ","codes [] s [] "," get_codes  [] "," get_codes [] s "," get_ get_codes  ","line slice  to_s ","Line  new  to_s "," handle_char  to_s ","line slice  to_s rstrip ","Line  new  to_s rstrip "," handle_char  to_s rstrip ","line slice  start? ","Line  new  start? "," handle_char  start? ","line slice  size - ","Line  new  size - "," handle_char  size - ","line slice  cursor ","Line  new  cursor "," handle_char  cursor ","line slice  end? ! ","Line  new  end? ! "," handle_char  end? ! ","line slice  end? ","Line  new  end? "," handle_char  end? ","line slice  move_to_start ","Line  new  move_to_start "," handle_char  move_to_start "," read_char  == ","codes pack  == "," input getbyte  == ","args pop  + ","line slice  insert ","Line  new  insert "," handle_char  insert ","line slice  move_to_end ","Line  new  move_to_end "," handle_char  move_to_end ","line slice  right ","Line  new  right "," handle_char  right ","line slice  left ","Line  new  left "," handle_char  left ","line slice  replace ","Line  new  replace "," handle_char  replace "," console keys keys grep  include? ","line slice  delete ","Line  new  delete "," handle_char  delete "," handle_ read_char  "," handle_codes pack  "," handle_ input getbyte  ","(or\n  (send\n    (lvar : read_char ) :==\n    (const nil :CARRIAGE_RETURN))\n  (send\n    (lvar : read_char ) :==\n    (const nil :NEWLINE))) ! ","(or\n  (send\n    (lvar :codes pack ) :==\n    (const nil :CARRIAGE_RETURN))\n  (send\n    (lvar :codes pack ) :==\n    (const nil :NEWLINE))) ! ","(or\n  (send\n    (lvar : input getbyte ) :==\n    (const nil :CARRIAGE_RETURN))\n  (send\n    (lvar : input getbyte ) :==\n    (const nil :NEWLINE))) ! "]}," TTY Prompt Reader read_char":{"type":"method","name":"read_char","children":[],"call":["chars << "," read_char ","bytes + ","(irange\n  (int 64)\n  (int 126)) include? ! ","(irange\n  (int 64)\n  (int 126)) include? ","chars each_codepoint to_a last ","chars each_codepoint to_a ","chars each_codepoint ","chars start_with? ","CSI  start_with? ","chars nil? "," input getc "," input ","\u001b + "," prompt input read_nonblock "," prompt input "," prompt ","chars == "," prompt input getc chr "," prompt input getc "," input sysread "," input readpartial "," input getc  << ","\u001b +  << "," prompt input getc chr  << "," input sysread  << "," input readpartial  << "," input getc  each_codepoint to_a last ","\u001b +  each_codepoint to_a last "," prompt input getc chr  each_codepoint to_a last "," input sysread  each_codepoint to_a last "," input readpartial  each_codepoint to_a last "," input getc  each_codepoint to_a ","\u001b +  each_codepoint to_a "," prompt input getc chr  each_codepoint to_a "," input sysread  each_codepoint to_a "," input readpartial  each_codepoint to_a "," input getc  each_codepoint ","\u001b +  each_codepoint "," prompt input getc chr  each_codepoint "," input sysread  each_codepoint "," input readpartial  each_codepoint "," input getc  start_with? ","\u001b +  start_with? "," prompt input getc chr  start_with? "," input sysread  start_with? "," input readpartial  start_with? "," input getc  nil? ","\u001b +  nil? "," prompt input getc chr  nil? "," input sysread  nil? "," input readpartial  nil? "," input getc  == ","\u001b +  == "," prompt input getc chr  == "," input sysread  == "," input readpartial  == "]}," TTY Prompt Reader read_keypress":{"type":"method","name":"read_keypress","children":[],"call":[" handle_interrupt ","key == "," emit_key_event "," read_char "," mode raw "," mode "," mode echo "," buffer ","char == ","@console keys [] ","@console keys "," trigger_key_event ","codes pack "," get_codes "," unbufferred ","(pair\n  (sym :echo)\n  (false)) merge "," console keys [] "," console keys "," console "," exit "," publish_keypress_event "," read_char  == "," emit_ read_char _event "," read_codes pack  ","codes pack  == ","@console  read_char s [] ","@console  read_char s "," trigger_ read_char _event "," console  read_char s [] "," console  read_char s "," publish_ read_char press_event "]}," TTY Prompt Reader Mode raw":{"type":"method","name":"raw","children":[],"call":["@input raw ","@input tty? ","@raw raw "]}," TTY Prompt Reader Mode echo":{"type":"method","name":"echo","children":[],"call":["@input echo= ","@input echo? ","@input noecho ","@input tty? ! ","@input tty? ","@echo echo "]}," TTY Prompt Reader Mode initialize":{"type":"method","name":"initialize","children":[],"call":["Raw  new ","Echo  new "]}," TTY Prompt Reader KeyEvent emit?":{"type":"method","name":"emit?","children":[],"call":[" key name nil? ! "," key name nil? "," key name "," key "," key nil? ! "," key nil? "]}," TTY Prompt Reader KeyEvent from":{"type":"method","name":"from","children":[],"call":[]}," TTY Prompt Reader Key initialize":{"type":"method","name":"initialize","children":[],"call":[]}," TTY Prompt Question inspect":{"type":"method","name":"inspect","children":[],"call":[" message "," class name "," class "]}," TTY Prompt Question to_s":{"type":"method","name":"to_s","children":[],"call":[" message "," message to_s "]}," TTY Prompt Question validation?":{"type":"method","name":"validation?","children":[],"call":["@validation != "]}," TTY Prompt Question required":{"type":"method","name":"required","children":[],"call":[" messages []= "," messages "]}," TTY Prompt Question convert?":{"type":"method","name":"convert?","children":[],"call":["@convert != "]}," TTY Prompt Question convert":{"type":"method","name":"convert","children":[],"call":[" messages []= "," messages "]}," TTY Prompt Question read":{"type":"method","name":"read","children":[],"call":[]}," TTY Prompt Question convert_result":{"type":"method","name":"convert_result","children":[],"call":[" converter_registry call "," converter_registry "," convert? & ","Utils  blank? ! ","Utils  blank? "," convert? ","Converters  convert ","@convert call "," blank? ! "," blank? "]}," TTY Prompt Question refresh":{"type":"method","name":"refresh","children":[],"call":["@prompt print ","@prompt clear_lines ","errors nonzero? "," echo? ! "," echo? ","@message scan length ","@message scan ","@prompt cursor up ","@prompt cursor ","@errors count ","@errors count zero? ","output + ","output << ","output join + ","output join ","@prompt clear_@message scan length  "]}," TTY Prompt Question render_error_or_finish":{"type":"method","name":"render_error_or_finish","children":[],"call":["@prompt print ","@prompt cursor down ","result errors count ","result errors ","@prompt cursor ","result errors count nonzero? ","@prompt cursor up ","@prompt decorate + + ","@prompt decorate + ","@prompt decorate ","@prompt clear_line ","result errors each ","result failure? "]}," TTY Prompt Question read_input":{"type":"method","name":"read_input","children":[],"call":["@prompt read_line "," echo ","@prompt read_multiline ","@prompt read_keypress ","@prompt read_line chomp ","@prompt read_multiline each ","options []= "," value? "]}," TTY Prompt Question process_input":{"type":"method","name":"process_input","children":[],"call":["@evaluator call "," default "," default? ","Utils  blank? "," read_input "," blank? "]}," TTY Prompt Question render_question":{"type":"method","name":"render_question","children":[],"call":["@prompt print ","@prompt decorate + ","@prompt decorate "," default ","Utils  blank? ! ","Utils  blank? "," default? "," echo? ! "," echo? "," message ","header lines count + ","header lines count ","header lines ","@prompt puts ","header << ","header join ","@input to_s ","@done ! ","@convert == "," prompt prefix "," prompt "]}," TTY Prompt Question render":{"type":"method","name":"render","children":[],"call":[" convert_result ","result value "," render_question "," refresh ","errors count "," render_error_or_finish ","result errors "," process_input "," render_error ","result failure? ","@prompt print ","question lines count ","question lines ","@prompt count_screen_lines ","question + ","result value to_s "," dispatch read_type "," dispatch "," convert_ process_input  "," process_input  value "," render_ render_question  ","result errors  count ","result result errors  "," process_input  errors "," process_input  failure? ","question  render_question  count "," render_question  lines count ","question  render_question  "," render_question  lines ","@prompt count_screen_ render_question  "," render_question  + "," process_input  value to_s "]}," TTY Prompt Question call":{"type":"method","name":"call","children":[],"call":[" render ","block call ","Utils  blank? ","@prompt subscribe "," prompt output print "," prompt prefix "," prompt "," prompt output "," blank? "]}," TTY Prompt Question message_for":{"type":"method","name":"message_for","children":[],"call":["template % ","template match nil? ! ","template match nil? ","template match ","@messages [] ","@messages []  % ","@messages []  match nil? ! ","@messages []  match nil? ","@messages []  match "]}," TTY Prompt Question Validation call":{"type":"method","name":"call","children":[],"call":["result nil? "," pattern call "," pattern "," pattern is_a? "," pattern match nil? ! "," pattern match nil? "," pattern match ","VALIDATORS  [] match nil? ! ","VALIDATORS  [] match nil? ","VALIDATORS  [] match ","VALIDATORS  [] "," pattern to_sym ","VALIDATORS  key? "," fail "," validation call "," validation "," validation is_a? "," validation =~ ","input to_s "," validate? "," pattern call  nil? ","input to_s  to_s "]}," TTY Prompt Question Checks CheckRequired call":{"type":"method","name":"call","children":[],"call":[]}," TTY Prompt Question Checks CheckDefault call":{"type":"method","name":"call","children":[],"call":[]}," TTY Prompt Question Checks CheckValidation call":{"type":"method","name":"call","children":[],"call":[]}," TTY Prompt Question Checks CheckRange call":{"type":"method","name":"call","children":[],"call":[]}," TTY Prompt Question Checks CheckRange cast":{"type":"method","name":"cast","children":[],"call":[]}," TTY Prompt Question Checks CheckRange int?":{"type":"method","name":"int?","children":[],"call":[]}," TTY Prompt Question Checks CheckRange float?":{"type":"method","name":"float?","children":[],"call":[]}," TTY Prompt Question Checks CheckModifier call":{"type":"method","name":"call","children":[],"call":[]}," TTY Prompt Paginator paginate":{"type":"method","name":"paginate","children":[],"call":["block [] ","@lower_index + ","sliced_list each_with_index ","sliced_list zip to_enum ","sliced_list zip "," block_given? ","list [] ","@per_page - ","list size - - ","list size - ","list size ","current_index == ","current_index zero? ","current_index > ","current_index < ","list each_with_index to_enum ","list each_with_index ","list size <= "," max_index ","active - "," check_page_size! ","@start_index + ","(send\n  (ivar :@start_index) :-\n  (lvar :step)) max ","@start_index - ","current_index <= ","(send\n  (ivar :@start_index) :+\n  (lvar :step)) min ","current_index >= ","(send\n  (lvar :current_index) :-\n  (ivar :@last_index)) abs ","current_index - ","@start_index + - ","(send\n  (lvar :current_index) :/\n  (ivar :@per_page)) * ","current_index / ","list size - -  + ","list []  each_with_index ","list []  zip to_enum ","list []  zip ","active -  == ","active -  zero? ","active -  > ","active -  < ","(send\n  (ivar :@start_index) :-\n  (lvar :step)) max  + ","(send\n  (ivar :@start_index) :+\n  (lvar :step)) min  + ","(send\n  (ivar :list size - - ) :-\n  (lvar :step)) max ","(send\n  (ivar :(send\n  (ivar :@start_index) :-\n  (lvar :step)) max ) :-\n  (lvar :step)) max ","(send\n  (ivar :(send\n  (ivar :@start_index) :+\n  (lvar :step)) min ) :-\n  (lvar :step)) max ","(send\n  (ivar :@start_index) :-\n  (lvar :(send\n  (lvar :current_index) :-\n  (ivar :@last_index)) abs )) max ","list size - -  - ","(send\n  (ivar :@start_index) :-\n  (lvar :step)) max  - ","(send\n  (ivar :@start_index) :+\n  (lvar :step)) min  - ","active -  <= ","(send\n  (ivar :list size - - ) :+\n  (lvar :step)) min ","(send\n  (ivar :(send\n  (ivar :@start_index) :-\n  (lvar :step)) max ) :+\n  (lvar :step)) min ","(send\n  (ivar :(send\n  (ivar :@start_index) :+\n  (lvar :step)) min ) :+\n  (lvar :step)) min ","(send\n  (ivar :@start_index) :+\n  (lvar :(send\n  (lvar :current_index) :-\n  (ivar :@last_index)) abs )) min ","active -  >= ","(send\n  (lvar :active - ) :-\n  (ivar :@last_index)) abs ","active -  - ","list size - -  + - ","(send\n  (ivar :@start_index) :-\n  (lvar :step)) max  + - ","(send\n  (ivar :@start_index) :+\n  (lvar :step)) min  + - ","(send\n  (lvar :active - ) :/\n  (ivar :@per_page)) * ","active -  / "]}," TTY Prompt Paginator max_index":{"type":"method","name":"max_index","children":[],"call":["@lower_index + - ","@lower_index + "," raise "]}," TTY Prompt Paginator initialize":{"type":"method","name":"initialize","children":[],"call":[" Array flatten first "," Array flatten "," Array ","options [] "]}," TTY Prompt MultiList render_menu":{"type":"method","name":"render_menu","children":[],"call":["output << ","indicator + + ","indicator + ","index == ","@paginator max_index ","Symbols RADIO_UNCHECKED  + + + ","choice name ","Symbols RADIO_UNCHECKED  + + ","Symbols RADIO_UNCHECKED  + ","selected + + + ","selected + + ","selected + ","@prompt decorate ","@selected include? ","index + == ","index + ","(send\n  (lvar :index) :+\n  (int 1)) to_s + + ","(send\n  (lvar :index) :+\n  (int 1)) to_s + ","(send\n  (lvar :index) :+\n  (int 1)) to_s "," enumerate? ","@paginator paginate ","@choices size - ","@choices size "," paginated? "," symbols [] + + + "," symbols [] + + "," symbols [] + "," symbols [] "," symbols "," choices size - "," choices size "," choices ","output join ","@prompt decorate + + + + + ","choice disabled to_s ","choice disabled ","@prompt decorate + + + + ","@prompt decorate + + + ","@prompt decorate + + ","@prompt decorate + ","choice disabled? ","choice disabled? ! "," paginator end_index "," paginator ","@symbols [] "," paginator paginate "," sync_paginators ","@prompt output puts ","@prompt output ","Codes RADIO_UNCHECKED  + + ","Codes RADIO_UNCHECKED  + ","@pastel decorate ","@choices each_with_index ","@prompt print ","@choices length - ","@choices length ","@symbols []  + + ","@symbols []  + ","@paginator @choices size -  ","@paginator @paginator max_index  ","@paginator  choices size -  ","@prompt decorate  + + + ","@pastel decorate  + + + ","@prompt decorate  + + ","@pastel decorate  + + ","@prompt decorate  + ","@pastel decorate  + ","@@prompt decorate  include? ","@@pastel decorate  include? "," e(send\n  (lvar :index) :+\n  (int 1)) to_s + + erate? "," paginator  choices size -  "," paginator  paginator end_index  "]}," TTY Prompt MultiList render_answer":{"type":"method","name":"render_answer","children":[],"call":["@selected map "]}," TTY Prompt MultiList render_header":{"type":"method","name":"render_header","children":[],"call":[" selected_names + "," selected_names ","@selected size nonzero? ","@selected size ","@prompt decorate "," help "," filter_help ","@filter to_s != ","@filter to_s ","@filter any? "," filterable? "," max_help ","max_suffix + ","max_suffix + + ","@pastel decorate ","@selected map join ","@selected map "," minmax_help ","minmax_suffix + ","minmax_suffix + + ","@done ! ","@filter any? ! "," help_always? "," help_start? "," max_help  + "," max_help  + + ","min max_help  + "," minmax_help  + ","min max_help  + + "," minmax_help  + + "]}," TTY Prompt MultiList selected_names":{"type":"method","name":"selected_names","children":[],"call":["@selected map join ","@selected map "]}," TTY Prompt MultiList setup_defaults":{"type":"method","name":"setup_defaults","children":[],"call":["@default last ","@selected empty? ","@choices values_at ","d - ","@default map "," validate_defaults "," raise "," choices [] ","@active - "," choices "," choices [] disabled? ","(send\n  (ivar :@choices) :index) + ","choice disabled? ! ","choice disabled? ","@choices index ","@default empty? ! ","@default empty? ","SelectedChoices  new "," choices index + "," choices index "," choices find_by ","@default last to_s ","@default last to_s =~ ","(send\n  (send nil :choices) :index) + ","d to_s ","d to_s =~ ","@choices values_at  empty? ","SelectedChoices  new  empty? ","@default last  - ","(send\n  (ivar :@choices) :index) +  - "," choices index +  - ","(send\n  (send nil :choices) :index) +  - "]}," TTY Prompt MultiList keyspace":{"type":"method","name":"keyspace","children":[],"call":["@selected << ","@selected delete ","@selected include? ","@choices [] ","@active - "," choices [] "," choices ","@selected size >= ","@selected size ","@selected insert ","@selected delete_at "]}," TTY Prompt MultiList initialize":{"type":"method","name":"initialize","children":[],"call":[" Array ","options [] ","options fetch ","SelectedChoices  new "]}," TTY Prompt MaskQuestion read_input":{"type":"method","name":"read_input","children":[],"call":["@prompt print "," render_question ","@prompt clear_line ","@prompt read_keypress "," echo? ","@prompt puts ","@prompt clear_lines ","@prompt count_screen_lines "," render_ render_question  "]}," TTY Prompt MaskQuestion render_error_or_finish":{"type":"method","name":"render_error_or_finish","children":[],"call":["result failure? "]}," TTY Prompt MaskQuestion render_question":{"type":"method","name":"render_question","children":[],"call":["@prompt print ","@prompt decorate ","@failure ! ","@mask * ","(begin\n  (ivar :@input)) length "," echo? "," message ","header lines count + ","header lines count ","header lines ","@prompt puts ","header << ","header join ","@mask to_s * ","@input to_s length ","@input to_s ","@mask to_s "," prompt prefix "," prompt "]}," TTY Prompt MaskQuestion keypress":{"type":"method","name":"keypress","children":[],"call":["event value ","event value =~ ","@input chop! ","@input empty? ","(sym :backspace) include? ","event key name ","event key ","DELETE_KEYS  include? "]}," TTY Prompt MaskQuestion keyenter":{"type":"method","name":"keyenter","children":[],"call":[]}," TTY Prompt MaskQuestion keyreturn":{"type":"method","name":"keyreturn","children":[],"call":[]}," TTY Prompt MaskQuestion mask":{"type":"method","name":"mask","children":[],"call":[]}," TTY Prompt MaskQuestion initialize":{"type":"method","name":"initialize","children":[],"call":["@prompt subscribe ","options fetch ","Symbols  symbols [] ","Symbols  symbols ","@prompt symbols [] ","@prompt symbols "]}," TTY Prompt List render_footer":{"type":"method","name":"render_footer","children":[],"call":["\n << ","@prompt decorate "," paginated? ","\n + "]}," TTY Prompt List render_menu":{"type":"method","name":"render_menu","children":[],"call":["output << ","message + ","index == ","@paginator max_index ","Symbols SPACE  * + + ","choice name ","Symbols SPACE  * + ","Symbols SPACE  * ","@prompt decorate ","@marker + + + ","@marker + + ","@marker + ","index + == ","index + ","(send\n  (lvar :index) :+\n  (int 1)) to_s + + ","(send\n  (lvar :index) :+\n  (int 1)) to_s + ","(send\n  (lvar :index) :+\n  (int 1)) to_s "," enumerate? ","@paginator paginate ","@choices size - ","@choices size "," paginated? ","  * + + ","  * + ","  * "," choices size - "," choices size "," choices ","output join ","@prompt decorate + + + + + ","choice disabled to_s ","choice disabled ","@prompt decorate + + + + ","@prompt decorate + + + ","@prompt decorate + + ","@prompt decorate + "," symbols [] "," symbols ","choice disabled? ","selected to_s ","choice disabled? ! "," paginator end_index "," paginator ","@symbols [] "," paginator paginate "," sync_paginators ","@prompt output puts ","@prompt output ","Codes SPACE  * + ","Codes SPACE  * ","@pastel decorate ","@choices each_with_index ","@prompt print ","@choices length - ","@choices length ","Symbols SPACE  * + +  + ","  * + +  + ","Codes SPACE  * +  + ","Symbols SPACE  * +  + ","@paginator @choices size -  ","@paginator @paginator max_index  ","@paginator  choices size -  "," e(send\n  (lvar :index) :+\n  (int 1)) to_s + + erate? ","@marker + + +  to_s ","@marker + +  to_s "," paginator  choices size -  "," paginator  paginator end_index  "]}," TTY Prompt List render_header":{"type":"method","name":"render_header","children":[],"call":["@prompt decorate "," help ","@choices [] name ","@choices [] ","@active - "," filter_help ","@filter to_s != ","@filter to_s "," choices [] name "," choices [] "," choices ","@filter any? "," filterable? ","selected_item to_s ","@pastel decorate ","@filter any? ! "," help_always? "," help_start? "," choices [] name  to_s "]}," TTY Prompt List help":{"type":"method","name":"help","children":[],"call":[" class HELP  % ","@choices size "," enumerate? "," class ","@help nil? "," default_help ","not_set ! ","@help nil? ! "," default_help  nil? "," default_help  nil? ! "]}," TTY Prompt List render_question":{"type":"method","name":"render_question","children":[],"call":["header lines count + ","rendered_menu lines count ","rendered_menu lines ","header lines count ","header lines ","@prompt print ","rendered_menu << "," render_footer "," render_menu ","@prompt puts "," render_header ","header << ","header join ","@prompt output puts ","@prompt output ","@question + + ","@question + ","@prompt prefix ","@question + +  lines count + "," render_menu  lines count "," render_menu  lines ","@question + +  lines count ","@question + +  lines "," render_menu  << "," render_@question + +  ","@question + +  << ","@question + +  join "]}," TTY Prompt List refresh":{"type":"method","name":"refresh","children":[],"call":["@prompt print ","@prompt clear_lines ","@prompt output print ","@cursor clear_lines ","@prompt output ","@question scan length + + ","@question scan length + ","@choices length ","@question scan length ","@question scan ","@prompt clear_@question scan length + +  ","@cursor clear_@question scan length + +  "]}," TTY Prompt List render_answer":{"type":"method","name":"render_answer","children":[],"call":["@choices [] value ","@choices [] ","@active - "]}," TTY Prompt List render":{"type":"method","name":"render","children":[],"call":["@prompt print ","@prompt show "," render_answer "," render_question "," refresh ","@prompt read_keypress ","@prompt hide "," answer ","question lines count ","question lines ","question_lines count ","question split "," question_lines_count ","@prompt output print ","@cursor show ","@prompt output "," process_input ","@cursor hide "," render_ render_answer  "," render_ render_question  ","  render_answer  ","question  render_question  count "," render_question  lines count ","question  render_question  "," render_question  lines ","question_ render_question  count "," render_question _lines count ","question split  count "," render_question  split "," question_ render_question _count ","  render_question _lines_count "," question split _count "]}," TTY Prompt List validate_defaults":{"type":"method","name":"validate_defaults","children":[],"call":[" fail ","@choices size ","d > ","d < ","d to_s empty? ","d to_s ","d nil? ","@default each "," raise "," choices size "," choices "," choices [] disabled? "," choices [] ","d - ","dflt_choice disabled? "," validate_default_name ","d to_s !~ "," choices []  disabled? "]}," TTY Prompt List setup_defaults":{"type":"method","name":"setup_defaults","children":[],"call":["@default first "," validate_defaults ","(send\n  (ivar :@choices) :index) + ","choice disabled? ! ","choice disabled? ","@choices index ","@default empty? ! ","@default empty? "," choices index + "," choices index "," choices "," choices find_by ","@default first to_s =~ ","@default first to_s ","(send\n  (send nil :choices) :index) + "]}," TTY Prompt List keydown":{"type":"method","name":"keydown","children":[],"call":["@active + ","@active == ","@choices length "," choices length "," choices "," search_choice_in ","@active +  + ","@active +  == "]}," TTY Prompt List keyup":{"type":"method","name":"keyup","children":[],"call":["@active - ","@choices length ","@active == "," choices length "," choices "," search_choice_in ","(send\n  (send nil :choices) :length) downto to_a ","(send\n  (send nil :choices) :length) downto ","(send\n  (ivar :@active) :-\n  (int 1)) downto to_a ","(send\n  (ivar :@active) :-\n  (int 1)) downto "," choices length downto to_a "," choices length downto ","@active -  - ","@choices length  - "," choices length  - ","@active -  == ","@choices length  == "," choices length  == ","(send\n  (ivar :@active - ) :-\n  (int 1)) downto to_a ","(send\n  (ivar :@choices length ) :-\n  (int 1)) downto to_a ","(send\n  (ivar : choices length ) :-\n  (int 1)) downto to_a ","(send\n  (ivar :@active - ) :-\n  (int 1)) downto ","(send\n  (ivar :@choices length ) :-\n  (int 1)) downto ","(send\n  (ivar : choices length ) :-\n  (int 1)) downto "]}," TTY Prompt List keyreturn":{"type":"method","name":"keyreturn","children":[],"call":[]}," TTY Prompt List keyspace":{"type":"method","name":"keyspace","children":[],"call":[]}," TTY Prompt List keynum":{"type":"method","name":"keynum","children":[],"call":["(irange\n  (int 1)\n  (send\n    (ivar :@choices) :count)) include? ","@choices count ","event value to_i ","event value "," enumerate? ","(irange\n  (int 1)\n  (send\n    (ivar :@choices) :count)) cover? ","(irange\n  (int 1)\n  (send\n    (send nil :choices) :count)) cover? "," choices count "," choices "," choices [] disabled? "," choices [] ","value - ","event event value to_i  to_i ","event event value to_i  ","event value to_i  - "]}," TTY Prompt List enumerate?":{"type":"method","name":"enumerate?","children":[],"call":["@enum nil? ! ","@enum nil? "]}," TTY Prompt List call":{"type":"method","name":"call","children":[],"call":[" render "," setup_defaults ","block call "," choices ","@prompt subscribe "]}," TTY Prompt List choices":{"type":"method","name":"choices","children":[],"call":[" choice ","values each "," Array each "," Array ","_choice name downcase include? ","@filter downcase ","_choice name downcase ","_choice name ","@choices select ","@filter to_s empty? ","@filter to_s ","@choices << ","_choice disabled? ! ","_choice disabled? ","@filter join downcase ","@filter join ","@filter empty? "," filterable? ! "," filterable? ","choice name downcase include? ","choice name downcase ","choice name ","choice disabled? ! ","choice disabled? ","@filter_cache [] ","choice name to_s downcase include? ","choice name to_s downcase ","choice name to_s ","@choices enabled select ","@choices enabled "]}," TTY Prompt List choice":{"type":"method","name":"choice","children":[],"call":["@choices << ","value << "]}," TTY Prompt List enum":{"type":"method","name":"enum","children":[],"call":[]}," TTY Prompt List page_help":{"type":"method","name":"page_help","children":[],"call":[]}," TTY Prompt List paginated?":{"type":"method","name":"paginated?","children":[],"call":["@choices size >= ","@choices size ","@choices size > "," page_size "," choices size > "," choices size "," choices "]}," TTY Prompt List per_page":{"type":"method","name":"per_page","children":[],"call":[]}," TTY Prompt List default":{"type":"method","name":"default","children":[],"call":[]}," TTY Prompt List marker":{"type":"method","name":"marker","children":[],"call":[]}," TTY Prompt List initialize":{"type":"method","name":"initialize","children":[],"call":["@prompt subscribe ","Paginator  new ","options [] ","options fetch ","@prompt help_color ","@prompt active_color ","Choices  new ","@default first ","Array  [] ","@prompt prefix "," symbols [] "," symbols "," check_options_consistency "," Array ","BlockPaginator  new ","@prompt symbols merge ","@prompt symbols ","Cursor  new ","Pastel  new ","Reader  new ","@prompt quiet ","Array  []  first "," Array  first "]}," TTY Prompt Expander validate_choices":{"type":"method","name":"validate_choices","children":[],"call":[" fail ","errors each ","keys << ","choice key ","errors << ","keys include? ","choice key to_s == ","choice key to_s ","choice key length != ","choice key length ","choice name ","choice key nil? ","@choices each "," raise "]}," TTY Prompt Expander setup_defaults":{"type":"method","name":"setup_defaults","children":[],"call":[" validate_choices "]}," TTY Prompt Expander render_menu":{"type":"method","name":"render_menu","children":[],"call":["output << ","   + + ","   + ","@prompt decorate ","@selected key == ","choice key ","@selected key ","choice name ","@choices each ","output join "]}," TTY Prompt Expander refresh":{"type":"method","name":"refresh","children":[],"call":["@prompt print ","@prompt clear_line ","@prompt clear_lines "," expanded? ","@prompt cursor prev_line ","@prompt cursor ","@selected ! "," count_lines ","@prompt clear_lines + "," collapsed? ","@prompt clear_ count_lines  "," count_ count_lines  ","@prompt clear_ count_lines  + "]}," TTY Prompt Expander count_lines":{"type":"method","name":"count_lines","children":[],"call":[" render_footer scan length + "," render_footer scan length "," render_footer scan "," render_footer ","@choices length "," expanded? ","@hint scan length + ","@hint scan length ","@hint scan "," render_header scan length + "," render_header scan length "," render_header scan "," render_header "]}," TTY Prompt Expander read_input":{"type":"method","name":"read_input","children":[],"call":["@prompt read_keypress "]}," TTY Prompt Expander render_footer":{"type":"method","name":"render_footer","children":[],"call":["@choices [] key ","@choices [] ","@default - "]}," TTY Prompt Expander render_question":{"type":"method","name":"render_question","children":[],"call":["@prompt print "," render_footer "," render_menu "," expanded? ","@done ! "," render_hint "," render_header ","header << "," load_auto_hint "," render_ render_header  "," render_header  << "]}," TTY Prompt Expander render_hint":{"type":"method","name":"render_hint","children":[],"call":["@prompt print ","@prompt cursor forward ","@prompt strip size ","@prompt strip "," render_header ","@prompt cursor ","@prompt cursor prev_line ","hint << ","@prompt decorate ","\n + + + + ","\n + + + ","\n + + ","\n + "]}," TTY Prompt Expander render_header":{"type":"method","name":"render_header","children":[],"call":["header << "," possible_keys "," collapsed? ","@prompt decorate ","@selected name ","header join ","@selected name to_s "]}," TTY Prompt Expander render_answer":{"type":"method","name":"render_answer","children":[],"call":["@selected value "]}," TTY Prompt Expander render":{"type":"method","name":"render","children":[],"call":[" render_answer "," render_question "," refresh "," read_input "," answer ","@prompt print ","question lines count ","question lines "," render_ render_question  "," render_question  lines count "," render_question  lines "]}," TTY Prompt Expander possible_keys":{"type":"method","name":"possible_keys","children":[],"call":["keys join ","keys []= ","@prompt decorate ","@default - ","@input to_s empty? ","@input to_s ","keys [] ","keys index ","@selected key ","@choices pluck ","@choices pluck  join ","@choices pluck  []= ","@choices pluck  [] ","keys keys index  ","@choices pluck  index "]}," TTY Prompt Expander call":{"type":"method","name":"call","children":[],"call":[" render "," choice "," setup_defaults ","block call "," choices ","@prompt subscribe "]}," TTY Prompt Expander choices":{"type":"method","name":"choices","children":[],"call":[" choice ","values each "]}," TTY Prompt Expander choice":{"type":"method","name":"choice","children":[],"call":["@choices << ","value update "]}," TTY Prompt Expander default":{"type":"method","name":"default","children":[],"call":[]}," TTY Prompt Expander select_choice":{"type":"method","name":"select_choice","children":[],"call":["@choices find_by "]}," TTY Prompt Expander keypress":{"type":"method","name":"keypress","children":[],"call":["@selected name "," collapsed? ","@default_key ! "," select_choice ","event value ","event value =~ ","@input chop! ","@input empty? ","(sym :backspace) include? ","event key name ","event key ","DELETE_KEYS  include? "," select_choice  name "]}," TTY Prompt Expander keyenter":{"type":"method","name":"keyenter","children":[],"call":[" expand ","selected key to_s == ","selected key to_s ","selected key "," select_choice ","@choices [] key ","@choices [] ","@default - ","@input empty? ","@input nil? "," select_choice  key to_s == "," select_choice  key to_s "," select_choice  key ","@choices [] key  empty? ","@choices [] key  nil? "]}," TTY Prompt Expander expand":{"type":"method","name":"expand","children":[],"call":[]}," TTY Prompt Expander collapsed?":{"type":"method","name":"collapsed?","children":[],"call":["@status == "]}," TTY Prompt Expander expanded?":{"type":"method","name":"expanded?","children":[],"call":["@status == "]}," TTY Prompt Expander initialize":{"type":"method","name":"initialize","children":[],"call":["@prompt subscribe ","Choices  new ","@prompt help_color ","options fetch ","@prompt active_color ","@prompt prefix ","@prompt quiet "]}," TTY Prompt Evaluator check":{"type":"method","name":"check","children":[],"call":[" results << "," results "]}," TTY Prompt Evaluator call":{"type":"method","name":"call","children":[],"call":[" results reduce "," results ","Result Success  new "]}," TTY Prompt Evaluator initialize":{"type":"method","name":"initialize","children":[],"call":[" instance_eval "]}," TTY Prompt EnumPaginator paginate":{"type":"method","name":"paginate","children":[],"call":["sliced_list zip to_enum ","sliced_list zip "," block_given? ","block [] ","@lower_index + ","sliced_list each_with_index ","list [] ","@upper_index - + ","@upper_index - ","list size - ","list size ","@lower_index + - ","(send\n  (lvar :page) :-\n  (int 1)) * ","page - ","page <= ","page > ","page == ","(send\n  (send\n    (lvar :list) :size) :/\n  (send\n    (ivar :@per_page) :to_f)) ceil ","list size / ","@per_page to_f ","(send\n  (ivar :@last_index) :/\n  (send\n    (ivar :@per_page) :to_f)) ceil ","@last_index / ","active nil? ","list each_with_index to_enum ","list each_with_index ","list size <= "," check_page_size! ","list []  zip to_enum ","list []  zip ","@upper_index - +  + ","(send\n  (lvar :page) :-\n  (int 1)) *  + ","list []  each_with_index ","list size -  - + ","@lower_index + -  - + ","list size -  - ","@lower_index + -  - ","@upper_index - +  + - ","(send\n  (lvar :page) :-\n  (int 1)) *  + - ","(send\n  (lvar :(send\n  (ivar :@last_index) :/\n  (send\n    (ivar :@per_page) :to_f)) ceil ) :-\n  (int 1)) * ","(send\n  (ivar :@last_index) :/\n  (send\n    (ivar :@per_page) :to_f)) ceil  - ","(send\n  (ivar :@last_index) :/\n  (send\n    (ivar :@per_page) :to_f)) ceil  <= ","(send\n  (ivar :@last_index) :/\n  (send\n    (ivar :@per_page) :to_f)) ceil  > ","(send\n  (ivar :@last_index) :/\n  (send\n    (ivar :@per_page) :to_f)) ceil  == ","(send\n  (send\n    (lvar :list) :size) :/\n  (send\n    (ivar :@per_(send\n  (ivar :@last_index) :/\n  (send\n    (ivar :@per_page) :to_f)) ceil ) :to_f)) ceil ","@per_(send\n  (ivar :@last_index) :/\n  (send\n    (ivar :@per_page) :to_f)) ceil  to_f ","(send\n  (ivar :@last_index) :/\n  (send\n    (ivar :@per_(send\n  (ivar :@last_index) :/\n  (send\n    (ivar :@per_page) :to_f)) ceil ) :to_f)) ceil "," check_(send\n  (ivar :@last_index) :/\n  (send\n    (ivar :@per_page) :to_f)) ceil _size! "]}," TTY Prompt EnumList render_menu":{"type":"method","name":"render_menu","children":[],"call":["output << ","@prompt decorate ","selected to_s ","index + == ","index + ","Symbols SPACE  * + + ","choice name ","Symbols SPACE  * + ","Symbols SPACE  * ","(send\n  (lvar :index) :+\n  (int 1)) to_s + + ","(send\n  (lvar :index) :+\n  (int 1)) to_s + ","(send\n  (lvar :index) :+\n  (int 1)) to_s ","@paginator paginate ","  * + + ","  * + ","  * ","output join ","(send\n  (str \" \") :*\n  (int 2)) + ","@prompt decorate + + + + ","choice disabled to_s ","choice disabled ","@prompt decorate + + + ","@prompt decorate + + ","@prompt decorate + "," symbols [] "," symbols ","choice disabled? ","choice disabled? ! ","num + ","num to_s + ","choice name to_s ","num to_s ","@symbols [] ","@choices each_with_index ","Symbols SPACE  * + +  to_s ","  * + +  to_s ","num +  to_s ","num to_s +  to_s ","(send\n  (lvar :index) :+\n  (int 1)) to_s + +  + ","(send\n  (lvar :index) :+\n  (int 1)) to_s + +  to_s + ","(send\n  (lvar :index) :+\n  (int 1)) to_s + +  to_s "]}," TTY Prompt EnumList render_page_help":{"type":"method","name":"render_page_help","children":[],"call":["@prompt print ","@prompt cursor forward "," render_footer size "," render_footer ","@prompt cursor ","@prompt cursor prev_line "," page_help_message ","help << "," page_help_message dup "," page_ page_help_message dup _message "," page_help_message dup  << "," page_ page_help_message dup _message dup "]}," TTY Prompt EnumList page_help_message":{"type":"method","name":"page_help_message","children":[],"call":["\n + ","@prompt decorate "," paginated? "]}," TTY Prompt EnumList render_footer":{"type":"method","name":"render_footer","children":[],"call":["@choices size "]}," TTY Prompt EnumList render_header":{"type":"method","name":"render_header","children":[],"call":["@prompt decorate ","@choices [] name to_s ","@choices [] name ","@choices [] ","@active - "]}," TTY Prompt EnumList render_error":{"type":"method","name":"render_error","children":[],"call":["@prompt print ","@prompt cursor forward "," render_footer size "," render_footer ","@prompt cursor ","@prompt cursor prev_line "," paginated? ! "," paginated? "," error_message ","error << "," error_message dup ","\n + + + ","\n + + ","\n + ","@prompt decorate ","  error_message dup _message "," error_message dup  << ","  error_message dup _message dup "]}," TTY Prompt EnumList error_message":{"type":"method","name":"error_message","children":[],"call":["\n + + + ","\n + + ","\n + ","@prompt decorate "]}," TTY Prompt EnumList render_question":{"type":"method","name":"render_question","children":[],"call":[" render_page_help ","@done ! "," paginated? "," render_error ","@prompt print ","menu lines count ","menu lines "," render_menu + "," render_footer "," render_menu ","header lines count ","header lines ","@prompt puts "," render_header ","header << ","header join ","@prompt prefix "," render_menu +  lines count ","menu header lines count  count "," render_menu +  lines ","menu header lines count  "," render_ render_menu +  + "," render_ render_menu +  ","header header lines count  count ","header header lines count  "]}," TTY Prompt EnumList refresh":{"type":"method","name":"refresh","children":[],"call":["@prompt print ","@prompt cursor clear_screen_down ","@prompt cursor ","@prompt clear_lines ","@prompt clear_lines + ","@question scan length + + ","@question scan length + ","@choices length ","@question scan length ","@question scan ","@prompt clear_@question scan length + +  ","@prompt clear_@question scan length + +  + "]}," TTY Prompt EnumList render_answer":{"type":"method","name":"render_answer","children":[],"call":["@choices [] value ","@choices [] ","@active - "]}," TTY Prompt EnumList render":{"type":"method","name":"render","children":[],"call":[" render_answer "," render_question "," refresh ","@prompt read_keypress "," answer ","@prompt print ","question lines count ","question lines "," render_page_help ","@done ! "," paginated? "," render_error "," question_lines_count ","question split "," render_ render_question  ","question  render_question  count "," render_question  lines count ","question  render_question  "," render_question  lines "," question_ render_question _count ","  render_question _lines_count "," question split _count "," render_question  split "]}," TTY Prompt EnumList setup_defaults":{"type":"method","name":"setup_defaults","children":[],"call":[" mark_choice_as_active "," validate_defaults ","(send\n  (begin\n    (irange\n      (int 0)\n      (send\n        (send nil :choices) :length))) :find) + "," choices [] disabled? ! "," choices [] disabled? "," choices [] "," choices ","(irange\n  (int 0)\n  (send\n    (send nil :choices) :length)) find "," choices length "," default? ! "," default? "," choices index + "," choices index "," choices find_by ","@default to_s empty? ","@default to_s ","(send\n  (begin\n    (irange\n      (int 0)\n      (send\n        (send nil :choices) :length))) :find) +  to_s empty? "," choices index +  to_s empty? ","(send\n  (begin\n    (irange\n      (int 0)\n      (send\n        (send nil :choices) :length))) :find) +  to_s "," choices index +  to_s "]}," TTY Prompt EnumList validate_defaults":{"type":"method","name":"validate_defaults","children":[],"call":[" raise ","@choices size "," d ","@default <= ","@default >= "," choices [] disabled? "," choices [] ","@default - "," choices ","@default > ","@default < "," choices size ","@default to_s empty? ","@default to_s ","@default nil? "," validate_default_name ","@default to_s !~ "," fail "]}," TTY Prompt EnumList mark_choice_as_active":{"type":"method","name":"mark_choice_as_active","children":[],"call":["@input to_i ","@choices [] nil? ! ","@choices [] nil? ","@choices [] ","@input to_i - ","@input to_i > ","next_active disabled? ","@choices []  disabled? "]}," TTY Prompt EnumList keyleft":{"type":"method","name":"keyleft","children":[],"call":["@choices size - ","@choices size "," page_size ","(send\n  (ivar :@page_active) :-\n  (send nil :page_size)) >= ","@page_active - ","(send\n  (ivar :@choices size - ) :-\n  (send nil :page_size)) >= ","@choices size -  - "]}," TTY Prompt EnumList keyright":{"type":"method","name":"keyright","children":[],"call":[" page_size ","(send\n  (ivar :@page_active) :+\n  (send nil :page_size)) <= ","@choices size ","@page_active + "]}," TTY Prompt EnumList keyreturn":{"type":"method","name":"keyreturn","children":[],"call":["@input empty? ","@input to_i <= ","@choices size ","@input to_i ","@input to_i > ","choice_disabled ! ","num <= ","num > "," choices [] disabled? "," choices [] ","num - "," choices ","@input to_i  <= ","@input to_i  > ","@input to_i  - "]}," TTY Prompt EnumList keypress":{"type":"method","name":"keypress","children":[],"call":[" mark_choice_as_active ","event value ","event value =~ ","@input chop! ","@input empty? ","(sym :backspace) include? ","event key name ","event key "]}," TTY Prompt EnumList call":{"type":"method","name":"call","children":[],"call":[" render "," setup_defaults ","block [] "," choices ","@prompt subscribe ","block call "]}," TTY Prompt EnumList choices":{"type":"method","name":"choices","children":[],"call":[" choice ","values each ","@choices << "]}," TTY Prompt EnumList choice":{"type":"method","name":"choice","children":[],"call":["@choices << ","value << "]}," TTY Prompt EnumList enum":{"type":"method","name":"enum","children":[],"call":[]}," TTY Prompt EnumList page_help":{"type":"method","name":"page_help","children":[],"call":[]}," TTY Prompt EnumList paginated?":{"type":"method","name":"paginated?","children":[],"call":["@choices size >= "," page_size ","@choices size ","@choices size > "]}," TTY Prompt EnumList page_size":{"type":"method","name":"page_size","children":[],"call":[]}," TTY Prompt EnumList per_page":{"type":"method","name":"per_page","children":[],"call":[]}," TTY Prompt EnumList default":{"type":"method","name":"default","children":[],"call":[]}," TTY Prompt EnumList initialize":{"type":"method","name":"initialize","children":[],"call":["@prompt subscribe ","EnumPaginator  new ","options [] ","Choices  new ","@prompt error_color ","options fetch ","@prompt help_color ","@prompt active_color ","@prompt prefix ","BlockPaginator  new ","@prompt symbols merge ","@prompt symbols ","@prompt quiet "]}," TTY Prompt Converters on_error":{"type":"method","name":"on_error","children":[],"call":[]}," TTY Prompt Converters included":{"type":"method","name":"included","children":[{"type":"method","name":"converter_registry","children":[],"asgn":[],"call":["Converters  converter_registry "]}],"call":[]}," TTY Prompt ConverterRegistry inspect":{"type":"method","name":"inspect","children":[],"call":["@_registry inspect "]}," TTY Prompt ConverterRegistry call":{"type":"method","name":"call","children":[],"call":["converter call "," fail ","key inspect ","@_registry fetch ","key respond_to? ","converter [] "," raise ","name inspect ","name respond_to? "]}," TTY Prompt ConverterRegistry key?":{"type":"method","name":"key?","children":[],"call":["@_registry key? "]}," TTY Prompt ConverterRegistry register":{"type":"method","name":"register","children":[],"call":["@_registry []= "," fail ","key inspect "," key? "," block_given? "," class new ","@_registry merge "," class "," raise ","name inspect ","@__registry []= "," contain? ","names each "]}," TTY Prompt ConverterRegistry initialize":{"type":"method","name":"initialize","children":[],"call":[" freeze ","registry dup freeze ","registry dup "]}," TTY Prompt ConverterDSL converter":{"type":"method","name":"converter","children":[],"call":[" converter_registry register "," converter_registry "]}," TTY Prompt ConverterDSL extended":{"type":"method","name":"extended","children":[],"call":[]}," TTY Prompt ConfirmQuestion conversion":{"type":"method","name":"conversion","children":[],"call":["input match nil? ! ","input match nil? ","input match ","@positive [] "," proc "," positive [] "," positive ","Regexp  new ","Regexp  escape "," lambda "]}," TTY Prompt ConfirmQuestion create_suffix":{"type":"method","name":"create_suffix","children":[],"call":["result << ","@negative downcase ","@negative capitalize "," default? ","@positive capitalize ","@positive downcase "," is? "," negative capitalize "," negative "," negative downcase "," default "," positive downcase "," positive "," positive capitalize ","(if\n  (send nil :default)\n  (send\n    (send nil :positive) :capitalize)\n  (send\n    (send nil :positive) :downcase)) + + ","(if\n  (send nil :default)\n  (send\n    (send nil :positive) :capitalize)\n  (send\n    (send nil :positive) :downcase)) + "]}," TTY Prompt ConfirmQuestion create_default_labels":{"type":"method","name":"create_default_labels","children":[],"call":[" default? "," is? "," default ","@messages []= "]}," TTY Prompt ConfirmQuestion setup_defaults":{"type":"method","name":"setup_defaults","children":[],"call":[" create_default_labels "," conversion "," create_suffix "," positive? "," suffix? ! "," suffix? ","parts [] ","@suffix split "," positive? ! "," negative? ! "," negative? "," infer_default ","@suffix split  [] "," create_suffix  split "]}," TTY Prompt ConfirmQuestion is?":{"type":"method","name":"is?","children":[],"call":["@type == "]}," TTY Prompt ConfirmQuestion render_question":{"type":"method","name":"render_question","children":[],"call":["@prompt print ","@prompt decorate "," convert_result ","@prompt decorate + ","@done ! "," message ","header lines count + ","header lines count ","header lines ","@prompt puts ","header << "," conversion call "," conversion "]}," TTY Prompt ConfirmQuestion call":{"type":"method","name":"call","children":[],"call":[" render "," setup_defaults ","block call ","Utils  blank? "]}," TTY Prompt ConfirmQuestion negative":{"type":"method","name":"negative","children":[],"call":[]}," TTY Prompt ConfirmQuestion positive":{"type":"method","name":"positive","children":[],"call":[]}," TTY Prompt ConfirmQuestion suffix":{"type":"method","name":"suffix","children":[],"call":[]}," TTY Prompt ConfirmQuestion suffix?":{"type":"method","name":"suffix?","children":[],"call":["@suffix != "]}," TTY Prompt ConfirmQuestion negative?":{"type":"method","name":"negative?","children":[],"call":["@negative != "]}," TTY Prompt ConfirmQuestion positive?":{"type":"method","name":"positive?","children":[],"call":["@positive != "]}," TTY Prompt ConfirmQuestion initialize":{"type":"method","name":"initialize","children":[],"call":["options fetch "]}," TTY Prompt Choices find_by":{"type":"method","name":"find_by","children":[],"call":["choice public_send == ","choice public_send "," find "]}," TTY Prompt Choices pluck":{"type":"method","name":"pluck","children":[],"call":["choice public_send "," map ","choice name == ","choice name "," find "]}," TTY Prompt Choices []":{"type":"method","name":"[]","children":[],"call":["@choices [] "]}," TTY Prompt Choices <<":{"type":"method","name":"<<","children":[],"call":[" choices << ","Choice  from "," choices "]}," TTY Prompt Choices each":{"type":"method","name":"each","children":[],"call":[" choices each "," choices "," to_enum "," block_given? "]}," TTY Prompt Choices initialize":{"type":"method","name":"initialize","children":[],"call":["Choice  from ","choices map "]}," TTY Prompt Choice to_s":{"type":"method","name":"to_s","children":[],"call":[" name "," name to_s "]}," TTY Prompt Choice ==":{"type":"method","name":"==","children":[],"call":[" value == ","other value "," value "," name == ","other name "," name ","other is_a? "," class "," key == ","other key "," key "]}," TTY Prompt Choice value":{"type":"method","name":"value","children":[],"call":["@value call "]}," TTY Prompt Choice from":{"type":"method","name":"from","children":[],"call":[]}," TTY Prompt Choice initialize":{"type":"method","name":"initialize","children":[],"call":[" freeze ","options [] ","options [] nil? "]}," TTY Prompt AnswersCollector method_missing":{"type":"method","name":"method_missing","children":[],"call":[" add_answer ","@prompt public_send "," add_@prompt public_send  "]}," TTY Prompt AnswersCollector add_answer":{"type":"method","name":"add_answer","children":[],"call":["@answers []= ","@answers [] << ","@answers [] ","@answers [] is_a? "]}," TTY Prompt AnswersCollector create_collector":{"type":"method","name":"create_collector","children":[],"call":[" class new "," class "]}," TTY Prompt AnswersCollector key":{"type":"method","name":"key","children":[],"call":[" add_answer "," create_collector call "," create_collector "," add_ create_collector call  "]}," TTY Prompt AnswersCollector call":{"type":"method","name":"call","children":[],"call":[" instance_eval "]}," TTY Prompt AnswersCollector initialize":{"type":"method","name":"initialize","children":[],"call":["options fetch "]}," TTY Prompt inspect":{"type":"method","name":"inspect","children":[],"call":["attributes each "," class "," help_color "," enabled_color "," error_color "," active_color "," prefix "," output "," input ","(send\n  (lvar :attributes) :map) join "," send inspect "," send ","attributes map "," class name "," class  class name  "]}," TTY Prompt Symbols windows?":{"type":"method","name":"windows?","children":[],"call":[" File ALT_SEPARATOR  == "]}," TTY Prompt Symbols symbols":{"type":"method","name":"symbols","children":[],"call":[" windows? "]}," TTY Prompt Reader windows?":{"type":"method","name":"windows?","children":[],"call":[" File ALT_SEPARATOR  == "," env [] == "," env [] "," env "]}," TTY Prompt Reader inspect":{"type":"method","name":"inspect","children":[],"call":[" output "," input "," class "]}," TTY Prompt Reader trigger_key_event":{"type":"method","name":"trigger_key_event","children":[],"call":[" trigger ","event key name ","event key ","event trigger? ","KeyEvent  from ","@console keys "," console keys "," console ","KeyEvent  from  key name ","KeyEvent  from  key ","KeyEvent  from  trigger? "]}," TTY Prompt Reader trigger":{"type":"method","name":"trigger","children":[],"call":[" publish "]}," TTY Prompt Reader get_codes":{"type":"method","name":"get_codes","children":[],"call":[" get_codes ","@console escape_codes any? ","@console escape_codes ","(irange\n  (int 64)\n  (int 126)) include? ! ","(irange\n  (int 64)\n  (int 126)) include? ","codes last ","(send\n  (lvar :escape) :-\n  (lvar :codes)) empty? ","escape - ","(send\n  (lvar :codes) :-\n  (lvar :escape)) empty? ","codes - "," proc ","codes << ","char ord ","char nil? ","@console get_char ","(pair\n  (sym :echo)\n  (true)) merge "," console escape_codes any? "," console escape_codes "," console "," console get_char "," handle_interrupt ","char == "," console keys [] "," console keys ","@console get_char  ord "," console get_char  ord ","@console get_char  nil? "," console get_char  nil? ","@console get_@console get_char  ","@console get_ console get_char  "," console get_@console get_char  "," console get_ console get_char  ","@console get_char  == "," console get_char  == "]}," TTY Prompt Reader unbufferred":{"type":"method","name":"unbufferred","children":[],"call":[" output sync= "," output ","block [] "," block_given? "," output sync "]}," TTY Prompt Reader WinAPI getche":{"type":"method","name":"getche","children":[],"call":["@@getche call ","Fiddle Function  new ","CRT_HANDLE  [] "]}," TTY Prompt Reader WinAPI getch":{"type":"method","name":"getch","children":[],"call":["@@getch call ","Fiddle Function  new ","CRT_HANDLE  [] "]}," TTY Prompt Reader KeyEvent trigger?":{"type":"method","name":"trigger?","children":[],"call":[" key name nil? ! "," key name nil? "," key name "," key "," key nil? ! "," key nil? "]}," TTY Prompt Reader Console get_char":{"type":"method","name":"get_char","children":[],"call":[" input getc "," input "," mode echo ","options [] "," mode "," mode raw "]}," TTY Prompt Reader Console initialize":{"type":"method","name":"initialize","children":[],"call":["CSI  bytes to_a ","CSI  bytes ","ESC  ord ","Codes  keys ","Mode  new "]}," TTY Prompt Question render_error":{"type":"method","name":"render_error","children":[],"call":["@prompt print ","newline + + + ","newline + + ","newline + ","@prompt decorate ","errors each ","acc << ","errors reduce ","(send\n  (lvar :errors) :reduce\n  (array)) join ","@prompt decorate + + ","@prompt decorate + "]}," TTY Prompt MaskQuestion render_error":{"type":"method","name":"render_error","children":[],"call":["errors empty? ! ","errors empty? "]}," TTY Prompt List page_size":{"type":"method","name":"page_size","children":[],"call":[]}," TTY Prompt ConverterDSL convert":{"type":"method","name":"convert","children":[],"call":["@converter_registry [] "," converter_registry [] call "," converter_registry [] "," converter_registry "]}," TTY Prompt ConverterDSL converter_registry":{"type":"method","name":"converter_registry","children":[],"call":["ConverterRegistry  new "]}," TTY Prompt invoke_question":{"type":"method","name":"invoke_question","children":[],"call":["question call ","object new ","options []= "," class messages "," class ","Utils  extract_options! ","object new  call ","Utils  extract_options!  []= ","Utils  extract_Utils  extract_options! ! "]}," TTY Prompt Timeout run_in":{"type":"method","name":"run_in","children":[],"call":["@timeout_handler call ","Thread  current ","delta < ","@interval_handler call ","delta round ","secs - ","Time  now - ","Time  now "," sleep "," loop ","Thread  current abort_on_exception= ","secs -  < ","secs -  round "]}," TTY Prompt Timeout timeout":{"type":"method","name":"timeout","children":[],"call":["block call "," run_in ","Thread  new ","@lock synchronize ","secs to_i zero? ","secs to_i ","secs nil? ","@runner join "," async_run ","job call ","(lvar :input_thread) each "," measure_intervals "," async_run  join "]}," TTY Prompt Timeout initialize":{"type":"method","name":"initialize","children":[],"call":["Mutex  new "," proc ","options fetch ","Timers Group  new "]}," TTY Prompt Slider answer":{"type":"method","name":"answer","children":[],"call":[" range [] "," range "," choices [] value "," choices [] "," choices "]}," TTY Prompt Reader history_previous":{"type":"method","name":"history_previous","children":[],"call":["@history previous ","@history get "]}," TTY Prompt Reader history_previous?":{"type":"method","name":"history_previous?","children":[],"call":["@history previous? "]}," TTY Prompt Reader history_next":{"type":"method","name":"history_next","children":[],"call":["@history get ","@history next "]}," TTY Prompt Reader history_next?":{"type":"method","name":"history_next?","children":[],"call":["@history next? "]}," TTY Prompt Reader add_to_history":{"type":"method","name":"add_to_history","children":[],"call":["@history push "]}," TTY Prompt Reader keyctrl_d":{"type":"method","name":"keyctrl_d","children":[],"call":[]}," TTY Prompt Reader select_console":{"type":"method","name":"select_console","children":[],"call":["Console  new ","WinConsole  new "," env [] ! "," env [] "," env "," windows? "]}," TTY Prompt Reader Line remove":{"type":"method","name":"remove","children":[],"call":["@text slice! "," left "]}," TTY Prompt Reader Line delete":{"type":"method","name":"delete","children":[],"call":["@text slice! "]}," TTY Prompt Reader Line <<":{"type":"method","name":"<<","children":[],"call":["@text << "]}," TTY Prompt Reader Line insert":{"type":"method","name":"insert","children":[],"call":[" []= "]}," TTY Prompt Reader Line replace":{"type":"method","name":"replace","children":[],"call":["@text length "]}," TTY Prompt Reader Line []":{"type":"method","name":"[]","children":[],"call":["@text [] "]}," TTY Prompt Reader Line []=":{"type":"method","name":"[]=","children":[],"call":["i + ","chars length ","before_text << << ","before_text << ","i > ","@text length - ","@text length ","@text [] dup ","@text [] ","i - ","after_text length ","  * ","@text dup ","i == ","i <= ","@text []= ","i is_a? ","@text [] dup  << << ","@text dup  << << ","@text [] dup  << ","@text dup  << ","before_text << <<  length - ","before_text << <<  length ","before_text << <<  [] dup ","before_text << <<  [] ","@text [] dup  length ","  *  length ","@text dup  length ","before_text << <<  dup ","before_text << <<  []= "]}," TTY Prompt Reader Line move_to_end":{"type":"method","name":"move_to_end","children":[],"call":["@text length "]}," TTY Prompt Reader Line move_to_start":{"type":"method","name":"move_to_start","children":[],"call":[]}," TTY Prompt Reader Line right":{"type":"method","name":"right","children":[],"call":["(send\n  (ivar :@text) :length) min ","@cursor + ","@text length ","(send\n  (ivar :@text) :length) min  + "]}," TTY Prompt Reader Line left":{"type":"method","name":"left","children":[],"call":["(int 0) max ","@cursor - ","(int 0) max  - "]}," TTY Prompt Reader Line end?":{"type":"method","name":"end?","children":[],"call":["@cursor == ","@text length "]}," TTY Prompt Reader Line start?":{"type":"method","name":"start?","children":[],"call":["@cursor == "]}," TTY Prompt Reader Line initialize":{"type":"method","name":"initialize","children":[],"call":[" block_given? ","(int 0) max ","@text length "]}," TTY Prompt Reader History clear":{"type":"method","name":"clear","children":[],"call":["@history clear "]}," TTY Prompt Reader History get":{"type":"method","name":"get","children":[],"call":[" [] "," size zero? "," size "]}," TTY Prompt Reader History []":{"type":"method","name":"[]","children":[],"call":["line dup "," raise ","line nil? ","@history [] ","@history size ","index < ","@history []  dup ","@history []  nil? "]}," TTY Prompt Reader History previous?":{"type":"method","name":"previous?","children":[],"call":["(and\n  (send\n    (ivar :@index) :<\n    (int 0))\n  (send\n    (ivar :@cycle) :!)) ! ","@cycle ! ","@index < "," size > "," size "]}," TTY Prompt Reader History previous":{"type":"method","name":"previous","children":[],"call":[" size - "," size ","@index zero? "," size zero? "," size -  zero? "]}," TTY Prompt Reader History next?":{"type":"method","name":"next?","children":[],"call":["(and\n  (send\n    (ivar :@index) :==\n    (send\n      (send nil :size) :-\n      (int 1)))\n  (send\n    (ivar :@cycle) :!)) ! ","@cycle ! ","@index == "," size - "," size "," size > "]}," TTY Prompt Reader History next":{"type":"method","name":"next","children":[],"call":["@index == "," size - "," size "," size zero? "]}," TTY Prompt Reader History push":{"type":"method","name":"push","children":[],"call":["@history size - ","@history size ","@history << ","@history shift "," size >= "," max_size "," size ","@exclude [] ","line to_s empty? ","line to_s ","@history delete "]}," TTY Prompt Reader History each":{"type":"method","name":"each","children":[],"call":["@history to_enum ","@history each "," block_given? "]}," TTY Prompt Reader History initialize":{"type":"method","name":"initialize","children":[],"call":[" block_given? ","options fetch "," proc "]}," TTY Prompt Multiline refresh":{"type":"method","name":"refresh","children":[],"call":["@prompt clear_lines ","@lines_count + + ","@lines_count + "]}," TTY Prompt Multiline process_input":{"type":"method","name":"process_input","children":[],"call":["@evaluator call "," default "," default? ","Utils  blank? ","@lines first strip ","@lines first ","@lines first to_s empty? ","@lines first to_s "," read_input ","@prompt print "," read_input  first strip "," default  first strip "," read_input  first "," default  first "," read_input  first to_s empty? "," default  first to_s empty? "," read_input  first to_s "," default  first to_s "]}," TTY Prompt Multiline render_question":{"type":"method","name":"render_question","children":[],"call":["@prompt decorate "," help "," echo? ! "," echo? "," message ","header join ","header << ","@input to_s "]}," TTY Prompt Multiline keyreturn":{"type":"method","name":"keyreturn","children":[],"call":[]}," TTY Prompt Multiline read_input":{"type":"method","name":"read_input","children":[],"call":["@prompt read_multiline "]}," TTY Prompt Multiline help":{"type":"method","name":"help","children":[],"call":[]}," TTY Prompt Multiline initialize":{"type":"method","name":"initialize","children":[],"call":["@prompt subscribe "," class ","options [] "]}," TTY Prompt MultiList answer":{"type":"method","name":"answer","children":[],"call":["@selected map "]}," TTY Prompt List answer":{"type":"method","name":"answer","children":[],"call":["@choices [] value ","@choices [] ","@active - "," choices [] value "," choices [] "," choices "]}," TTY Prompt List default_help":{"type":"method","name":"default_help","children":[],"call":[" class HELP  % ","@choices size "," enumerate? "," class "," format "," choices size "," choices "," filterable? "," arrows_help ","str join ","str << "]}," TTY Prompt Keypress time":{"type":"method","name":"time","children":[],"call":["block call ","scheduler timeout ","Timeout  new "," Integer "," timeout? "," Float ","job call ","@scheduler timeout ","Timeout  new  timeout ","scheduler  Float out ","  Float out? ","@Timeout  new  timeout ","@scheduler  Float out "]}," TTY Prompt Keypress refresh":{"type":"method","name":"refresh","children":[],"call":["@prompt clear_lines "]}," TTY Prompt Keypress process_input":{"type":"method","name":"process_input","children":[],"call":["@evaluator call ","@prompt read_keypress "," time ","@prompt print "," render_question "," countdown ","@timer while_remaining "," interval_handler ","@timer on_tick "]}," TTY Prompt Keypress render_question":{"type":"method","name":"render_question","children":[],"call":["header gsub! "," countdown to_s "," countdown "," format "," timeout? "]}," TTY Prompt Keypress keypress":{"type":"method","name":"keypress","children":[],"call":["@keys include? ","event key name ","event key ","@keys is_a? "," any_key? ","@scheduler cancel "]}," TTY Prompt Keypress timeout?":{"type":"method","name":"timeout?","children":[],"call":["@timeout != "]}," TTY Prompt Keypress any_key?":{"type":"method","name":"any_key?","children":[],"call":["@keys == "]}," TTY Prompt Keypress countdown":{"type":"method","name":"countdown","children":[],"call":[]}," TTY Prompt Keypress initialize":{"type":"method","name":"initialize","children":[],"call":["@prompt subscribe ","@prompt print "," render_question "," countdown "," refresh ","question lines count ","question lines "," proc ","options fetch ","@timeout < ","@timeout != ","Timeout  new ","@prompt count_screen_lines ","question size ","Timer  new "," Float "," timeout? ","(or\n  (send\n    (send\n      (send\n        (ivar :@interval) :to_s) :split\n      (str \".\")) :[]\n    (int 1))\n  (array)) size ","@interval to_s split [] ","@interval to_s split ","@interval to_s "," render_ render_question  "," render_question  lines count "," render_question  lines ","@ Float out < ","@ Float out != "," render_question  size ","  Float out? "]}," TTY Prompt Expander answer":{"type":"method","name":"answer","children":[],"call":["@selected value "]}," TTY Prompt EnumList answer":{"type":"method","name":"answer","children":[],"call":["@choices [] value ","@choices [] ","@active - "]}," TTY Prompt Timeout async_run":{"type":"method","name":"async_run","children":[],"call":["interval_timer cancel ","@timeout_handler call ","Thread  current ","delta <= ","time - ","Time  now - ","Time  now ","@timers wait ","@lock synchronize ","@interval_handler call ","delta round ","delta round >= ","@timers every ","Thread  current abort_on_exception= ","Thread  new ","time -  <= ","time -  round ","time -  round >= "]}," TTY Prompt Reader WinAPI kbhit":{"type":"method","name":"kbhit","children":[],"call":["@@kbhit call ","Fiddle Function  new ","CRT_HANDLE  [] "]}," TTY Prompt Timeout cancel":{"type":"method","name":"cancel","children":[],"call":[]}," TTY Prompt Slider format":{"type":"method","name":"format","children":[],"call":[]}," TTY Prompt Paginator check_page_size!":{"type":"method","name":"check_page_size!","children":[],"call":[" raise ","@per_page < "]}," TTY Prompt List keyenter":{"type":"method","name":"keyenter","children":[],"call":[" choices empty? "," choices "]}," TTY Prompt List filter_help":{"type":"method","name":"filter_help","children":[],"call":["@filter inspect ","@filter join inspect ","@filter join "]}," TTY Prompt List check_options_consistency":{"type":"method","name":"check_options_consistency","children":[],"call":[" raise ","options key? "]}," TTY Prompt List keybackspace":{"type":"method","name":"keybackspace","children":[],"call":["@filter slice! ","@filter pop "," filterable? "]}," TTY Prompt List keydelete":{"type":"method","name":"keydelete","children":[],"call":["@filter clear "," filterable? "]}," TTY Prompt List keypress":{"type":"method","name":"keypress","children":[],"call":["event value ","event value =~ ","@filter << "," filterable? "]}," TTY Prompt AnswersCollector values":{"type":"method","name":"values","children":[],"call":[" add_answer "," create_collector call "," create_collector ","@answers []= "," Array ","@answers [] "," add_ create_collector call  ","@ create_collector call s []= ","@ create_collector call s [] "]}," TTY Prompt Timeout measure_intervals":{"type":"method","name":"measure_intervals","children":[],"call":["interval_timer cancel ","input_thread terminate ","delta <= ","time - ","Time  now - ","Time  now ","@timers wait ","@lock synchronize ","@interval_handler call ","delta round ","delta round >= ","@timers every ","Thread  current abort_on_exception= ","Thread  current ","Thread  new ","time -  <= ","time -  round ","time -  round >= "]}," TTY Prompt List question_lines_count":{"type":"method","name":"question_lines_count","children":[],"call":["acc + ","@prompt count_screen_lines ","question_lines reduce "]}," TTY Prompt List search_choice_in":{"type":"method","name":"search_choice_in","children":[],"call":[" choices [] disabled? ! "," choices [] disabled? "," choices [] ","i - "," choices ","searchable find "]}," TTY Prompt EnumList question_lines_count":{"type":"method","name":"question_lines_count","children":[],"call":["acc + ","@prompt count_screen_lines ","question_lines reduce "]}," TTY Prompt Choice disabled?":{"type":"method","name":"disabled?","children":[],"call":["@disabled ! ! ","@disabled ! "]}," TTY Prompt Choice convert_hash":{"type":"method","name":"convert_hash","children":[],"call":[]}," TTY Prompt Messages message_for":{"type":"method","name":"message_for","children":[],"call":["template % ","template match nil? ! ","template match nil? ","template match ","@messages [] ","@messages []  % ","@messages []  match nil? ! ","@messages []  match nil? ","@messages []  match "]}," TTY Prompt Messages get":{"type":"method","name":"get","children":[],"call":[]}," TTY Prompt Messages initialize":{"type":"method","name":"initialize","children":[],"call":[" setup_messages "]}," TTY Prompt Messages setup_messages":{"type":"method","name":"setup_messages","children":[],"call":[]}," TTY Prompt List filterable?":{"type":"method","name":"filterable?","children":[],"call":[]}," TTY Prompt debug":{"type":"method","name":"debug","children":[],"call":[" print "," cursor restore "," cursor "," cursor clear_line_after "," cursor move_to ","messages each_with_index "," cursor save ","TTY Screen  width - ","TTY Screen  width ","messages max_by size ","messages max_by "," cursor column + + "," cursor column + "," cursor up "," cursor column ","messages reverse_each with_index ","messages reverse_each ","TTY Screen  TTY Screen  width -  - ","TTY Screen  TTY Screen  width -  "]}," TTY Prompt Timer time_now":{"type":"method","name":"time_now","children":[],"call":[" Time  now "," Process  clock_gettime "]}," TTY Prompt Timer while_remaining":{"type":"method","name":"while_remaining","children":[],"call":[" stop "," loop "," duration - "," runtime "," duration ","block call ","@events each "," runtime >= "," total ","remaining >= "," start "," duration -  >= "," duration  >= "]}," TTY Prompt Timer on_tick":{"type":"method","name":"on_tick","children":[],"call":["@events << "]}," TTY Prompt Timer runtime":{"type":"method","name":"runtime","children":[],"call":[" time_now - "," time_now "]}," TTY Prompt Timer stop":{"type":"method","name":"stop","children":[],"call":[]}," TTY Prompt Timer start":{"type":"method","name":"start","children":[],"call":[" time_now "]}," TTY Prompt Timer initialize":{"type":"method","name":"initialize","children":[],"call":[]}," TTY Prompt Slider symbols":{"type":"method","name":"symbols","children":[],"call":["@symbols merge! "]}," TTY Prompt Question value?":{"type":"method","name":"value?","children":[],"call":["@value != "]}," TTY Prompt Question value":{"type":"method","name":"value","children":[],"call":["val nil? "]}," TTY Prompt Paginator reset!":{"type":"method","name":"reset!","children":[],"call":[]}," TTY Prompt MultiList max_help":{"type":"method","name":"max_help","children":[],"call":[]}," TTY Prompt MultiList max":{"type":"method","name":"max","children":[],"call":[]}," TTY Prompt List keyleft":{"type":"method","name":"keyleft","children":[],"call":["@by_page ! "," search_choice_in ","@choices size downto to_a ","@choices size downto ","@choices size "," choices length "," choices ","@active - "," page_size ","(send\n  (ivar :@active) :-\n  (send nil :page_size)) > "," choices size downto to_a "," choices size downto "," choices size "," search_choice_in  - ","(send\n  (ivar : search_choice_in ) :-\n  (send nil :page_size)) > "]}," TTY Prompt List keyright":{"type":"method","name":"keyright","children":[],"call":["@by_page ! "," search_choice_in "," choices length "," choices "," page_size ","current zero? ","@choices size downto to_a ","@choices size downto ","@choices size ","current > ","remaining > ","@choices size % ","@active % ","@active <= ","@active + ","(send\n  (ivar :@active) :+\n  (send nil :page_size)) <= ","choices_size downto to_a ","choices_size downto ","choices_size % "," choices size ","@active %  zero? ","@active %  > ","@choices size %  > ","choices_size %  > "," search_choice_in  % "," search_choice_in  <= "," search_choice_in  + ","(send\n  (ivar : search_choice_in ) :+\n  (send nil :page_size)) <= "," choices size  downto to_a "," choices size  downto "," choices size  % "]}," TTY Prompt List arrows_help":{"type":"method","name":"arrows_help","children":[],"call":["arrows join ","arrows << "," paginated? ","@symbols [] + + ","@symbols [] ","@symbols [] + "]}," TTY Prompt List sync_paginators":{"type":"method","name":"sync_paginators","children":[],"call":["@paginator start_index= ","@block_paginator start_index ","@paginator reset! ","@block_paginator start_index= ","@paginator start_index ","@block_paginator reset! "]}," TTY Prompt List paginator":{"type":"method","name":"paginator","children":[],"call":[]}," TTY Prompt List symbols":{"type":"method","name":"symbols","children":[],"call":["@symbols merge! "]}," TTY Prompt Keypress interval_handler":{"type":"method","name":"interval_handler","children":[],"call":["@prompt print "," render_question "," countdown "," refresh ","question lines count ","question lines ","@prompt count_screen_lines ","question size "," render_ render_question  "," render_question  lines count "," render_question  lines "," render_question  size "]}," TTY Prompt Expander load_auto_hint":{"type":"method","name":"load_auto_hint","children":[],"call":["@choices [] name ","@choices [] ","@default - ","@input empty? ","@selected name "," collapsed? ","@hint nil? ","@choices [] name  nil? ","@selected name  nil? "]}," TTY Prompt EnumList default?":{"type":"method","name":"default?","children":[],"call":["@default > ","@default to_s empty? ! ","@default to_s empty? ","@default to_s "]}," TTY Prompt EnumList symbols":{"type":"method","name":"symbols","children":[],"call":["@symbols merge! "]}," TTY Prompt BlockPaginator paginate":{"type":"method","name":"paginate","children":[],"call":["block [] ","@start_index + ","sliced_list each_with_index ","sliced_list zip to_enum ","sliced_list zip "," block_given? ","list [] ","@end_index - + ","@end_index - ","list size - ","list size ","(send\n  (lvar :page) :-\n  (int 1)) * ","page - ","page == ","@start_index + - ","page < ","page > ","(send\n  (send\n    (lvar :list) :size) :/\n  (send\n    (ivar :@per_page) :to_f)) ceil ","list size / ","@per_page to_f ","(send\n  (ivar :@last_index) :/\n  (send\n    (ivar :@per_page) :to_f)) ceil ","@last_index / ","active nil? ","list each_with_index to_enum ","list each_with_index ","list size <= "," check_page_size! ","@end_index - +  + ","(send\n  (lvar :page) :-\n  (int 1)) *  + ","list []  each_with_index ","list []  zip to_enum ","list []  zip ","list size -  - + ","@start_index + -  - + ","list size -  - ","@start_index + -  - ","(send\n  (lvar :(send\n  (ivar :@last_index) :/\n  (send\n    (ivar :@per_page) :to_f)) ceil ) :-\n  (int 1)) * ","(send\n  (ivar :@last_index) :/\n  (send\n    (ivar :@per_page) :to_f)) ceil  - ","(send\n  (ivar :@last_index) :/\n  (send\n    (ivar :@per_page) :to_f)) ceil  == ","@end_index - +  + - ","(send\n  (lvar :page) :-\n  (int 1)) *  + - ","(send\n  (ivar :@last_index) :/\n  (send\n    (ivar :@per_page) :to_f)) ceil  < ","(send\n  (ivar :@last_index) :/\n  (send\n    (ivar :@per_page) :to_f)) ceil  > ","(send\n  (send\n    (lvar :list) :size) :/\n  (send\n    (ivar :@per_(send\n  (ivar :@last_index) :/\n  (send\n    (ivar :@per_page) :to_f)) ceil ) :to_f)) ceil ","@per_(send\n  (ivar :@last_index) :/\n  (send\n    (ivar :@per_page) :to_f)) ceil  to_f ","(send\n  (ivar :@last_index) :/\n  (send\n    (ivar :@per_(send\n  (ivar :@last_index) :/\n  (send\n    (ivar :@per_page) :to_f)) ceil ) :to_f)) ceil "," check_(send\n  (ivar :@last_index) :/\n  (send\n    (ivar :@per_page) :to_f)) ceil _size! "]}," TTY Prompt Response read_multiline":{"type":"method","name":"read_multiline","children":[],"call":["response << ","value !~ ","value == ","value ! "," evaluate_response "," loop "," evaluate_response  !~ "," evaluate_response  == "," evaluate_response  ! "]}," TTY Prompt MultiList process_input":{"type":"method","name":"process_input","children":[],"call":["@selected << ","@selected delete ","@selected include? ","@choices [] ","@active - ","@active + ","@active == ","@choices length "," exit ","@reader read_keypress ","@active +  - ","@active -  - ","@choices length  - ","@active +  + ","@active -  + ","@choices length  + ","@active +  == ","@active -  == ","@choices length  == "]}," TTY Prompt List process_input":{"type":"method","name":"process_input","children":[],"call":["@active + ","@active == ","@choices length ","@active - "," exit ","@reader read_keypress ","@active +  + ","@active -  + ","@choices length  + ","@active +  == ","@active -  == ","@choices length  == ","@active +  - ","@active -  - ","@choices length  - "]}," TTY Prompt Cursor clear_up":{"type":"method","name":"clear_up","children":[],"call":["ECMA_CSI  + "]}," TTY Prompt Cursor clear_down":{"type":"method","name":"clear_down","children":[],"call":["ECMA_CSI  + "]}," TTY Prompt Cursor clear_lines":{"type":"method","name":"clear_lines","children":[],"call":["acc << ","dir + "," clear_line "," move_down "," move_up ","direction == ","amount times reduce ","amount times "," move_down  + "," move_up  + "," move_down ection == "," move_up ection == "]}," TTY Prompt Cursor clear_line":{"type":"method","name":"clear_line","children":[],"call":[" move_start + + "," move_start + "," move_start "]}," TTY Prompt Cursor prev_line":{"type":"method","name":"prev_line","children":[],"call":["ECMA_CSI  + "]}," TTY Prompt Cursor next_line":{"type":"method","name":"next_line","children":[],"call":["ECMA_CSI  + "]}," TTY Prompt Cursor move_right":{"type":"method","name":"move_right","children":[],"call":["ECMA_CSI  + "]}," TTY Prompt Cursor move_left":{"type":"method","name":"move_left","children":[],"call":["ECMA_CSI  + "]}," TTY Prompt Cursor move_start":{"type":"method","name":"move_start","children":[],"call":["ECMA_CSI  + "]}," TTY Prompt Cursor move_down":{"type":"method","name":"move_down","children":[],"call":["ECMA_CSI  + "]}," TTY Prompt Cursor move_up":{"type":"method","name":"move_up","children":[],"call":["ECMA_CSI  + "]}," TTY Prompt Cursor move":{"type":"method","name":"move","children":[],"call":[]}," TTY Prompt Cursor current":{"type":"method","name":"current","children":[],"call":["ECMA_CSI  + "]}," TTY Prompt Cursor restore":{"type":"method","name":"restore","children":[],"call":["ECMA_CSI  + "]}," TTY Prompt Cursor save":{"type":"method","name":"save","children":[],"call":["ECMA_CSI  + "]}," TTY Prompt Cursor invisible":{"type":"method","name":"invisible","children":[],"call":[" show "," hide "]}," TTY Prompt Cursor hide":{"type":"method","name":"hide","children":[],"call":["ECMA_CSI  + + ","ECMA_CSI  + "," show "]}," TTY Prompt Cursor show":{"type":"method","name":"show","children":[],"call":["ECMA_CSI  + + ","ECMA_CSI  + "]}," TTY Prompt Cursor print":{"type":"method","name":"print","children":[],"call":[" class new "," class "]}," TTY Prompt Cursor initialize":{"type":"method","name":"initialize","children":[],"call":["options fetch "]}," TTY Prompt read_line":{"type":"method","name":"read_line","children":[],"call":["@reader read_line "]}," TTY Prompt ConfirmQuestion process_input":{"type":"method","name":"process_input","children":[],"call":["@evaluator call "," negative "," positive "," default ","Utils  blank? "," read_input "]}," TTY Prompt MultiList minmax_help":{"type":"method","name":"minmax_help","children":[],"call":["(%s)  % ","help join ","help << "]}," TTY Prompt MultiList keyenter":{"type":"method","name":"keyenter","children":[],"call":["@selected size >= ","@selected size ","@selected size <= ","@min <= "]}," TTY Prompt MultiList min":{"type":"method","name":"min","children":[],"call":[]}," TTY Prompt decorate":{"type":"method","name":"decorate","children":[],"call":["@pastel decorate ","coloring call ","coloring respond_to? ","colors first ","colors empty? ","@enabled_color == ","Utils  blank? ","colors first  call ","colors first  respond_to? "]}," TTY Prompt Test initialize":{"type":"method","name":"initialize","children":[],"call":["options merge! ","options fetch ","StringIO  new ","@input extend ","StringIO  new  extend "]}," TTY Prompt StringIOExtensions ioctl":{"type":"method","name":"ioctl","children":[],"call":[]}," TTY Prompt StringIOExtensions wait_readable":{"type":"method","name":"wait_readable","children":[],"call":[]}," TTY Prompt Slider help_always?":{"type":"method","name":"help_always?","children":[],"call":["@show_help =~ "]}," TTY Prompt Slider help_start?":{"type":"method","name":"help_start?","children":[],"call":["@show_help =~ "]}," TTY Prompt Slider quiet":{"type":"method","name":"quiet","children":[],"call":[]}," TTY Prompt Slider show_help":{"type":"method","name":"show_help","children":[],"call":[]}," TTY Prompt Slider help":{"type":"method","name":"help","children":[],"call":[" default_help ","@help nil? ","@help nil? ! "," default_help  nil? "," default_help  nil? ! "]}," TTY Prompt Slider default_help":{"type":"method","name":"default_help","children":[],"call":[" sprintf ","@symbols [] + + ","@symbols [] ","@symbols [] + "]}," TTY Prompt SelectedChoices find_index_by":{"type":"method","name":"find_index_by","children":[],"call":["(erange\n  (int 0)\n  (ivar :@size)) bsearch "]}," TTY Prompt SelectedChoices delete_at":{"type":"method","name":"delete_at","children":[],"call":["@selected delete_at ","@indexes delete_at ","index == ","@indexes [] ","@indexes each_index find ","@indexes each_index "]}," TTY Prompt SelectedChoices insert":{"type":"method","name":"insert","children":[],"call":["@selected insert ","@indexes insert ","index < ","@indexes [] "," find_index_by "]}," TTY Prompt SelectedChoices each":{"type":"method","name":"each","children":[],"call":["@selected each "," to_enum "," block_given? "]}," TTY Prompt SelectedChoices clear":{"type":"method","name":"clear","children":[],"call":["@selected clear ","@indexes clear "]}," TTY Prompt SelectedChoices initialize":{"type":"method","name":"initialize","children":[],"call":["@selected size "]}," TTY Prompt Question quiet":{"type":"method","name":"quiet","children":[],"call":[]}," TTY Prompt Question Checks CheckConversion call":{"type":"method","name":"call","children":[],"call":[]}," TTY Prompt MultiList default_help":{"type":"method","name":"default_help","children":[],"call":["str join ","str << "," filterable? ","@max nil? "," choices size "," choices "," enumerate? "," arrows_help "]}," TTY Prompt MultiList keyctrl_r":{"type":"method","name":"keyctrl_r","children":[],"call":["SelectedChoices  new "," choices enabled - ","@selected to_a "," choices enabled "," choices ","acc << ","@selected include? ! ","@selected include? ","choice disabled? ! ","choice disabled? "," choices each_with_index reduce "," choices each_with_index ","@max < "," choices size ","SelectedChoices  new  to_a ","SelectedChoices  new  include? ! ","SelectedChoices  new  include? "]}," TTY Prompt MultiList keyctrl_a":{"type":"method","name":"keyctrl_a","children":[],"call":["SelectedChoices  new "," choices enabled_indexes "," choices "," choices enabled ","@max < "," choices size "]}," TTY Prompt List help_always?":{"type":"method","name":"help_always?","children":[],"call":["@show_help =~ "]}," TTY Prompt List help_start?":{"type":"method","name":"help_start?","children":[],"call":["@show_help =~ "]}," TTY Prompt List quiet":{"type":"method","name":"quiet","children":[],"call":[]}," TTY Prompt List show_help":{"type":"method","name":"show_help","children":[],"call":[]}," TTY Prompt Expander quiet":{"type":"method","name":"quiet","children":[],"call":[]}," TTY Prompt EnumList quiet":{"type":"method","name":"quiet","children":[],"call":[]}," TTY Prompt Converters cast_to_num":{"type":"method","name":"cast_to_num","children":[],"call":["(send\n  (array\n    (send nil :convert\n      (sym :int)\n      (lvar :num))\n    (send nil :convert\n      (sym :float)\n      (lvar :num))) :-\n  (array\n    (const\n      (const nil :Const) :Undefined))) first ","(send nil :convert\n  (sym :int)\n  (lvar :num)) - "," convert "]}," TTY Prompt ConverterRegistry []":{"type":"method","name":"[]","children":[],"call":[" raise ","conv_name inspect ","@__registry fetch ","name to_s downcase to_sym ","name to_s downcase ","name to_s ","name to_s downcase to_sym  inspect "]}," TTY Prompt ConverterRegistry contain?":{"type":"method","name":"contain?","children":[],"call":["@__registry key? ","name to_s downcase to_sym ","name to_s downcase ","name to_s "]}," TTY Prompt Const inspect":{"type":"method","name":"inspect","children":[],"call":[]}," TTY Prompt Const to_s":{"type":"method","name":"to_s","children":[],"call":[]}," TTY Prompt ConfirmQuestion infer_default":{"type":"method","name":"infer_default","children":[],"call":[" default "," raise ","converted == ","Converters  convert "," default to_s ","Converters  convert  == "]}," TTY Prompt Choices enabled_indexes":{"type":"method","name":"enabled_indexes","children":[],"call":["acc << ","choice disabled? "," each_with_index reduce "," each_with_index "]}," TTY Prompt Choices enabled":{"type":"method","name":"enabled","children":[],"call":[" reject "]}," TTY Prompt Slider choices":{"type":"method","name":"choices","children":[],"call":["@choices << ","values each "]}," TTY Prompt Slider choice":{"type":"method","name":"choice","children":[],"call":["@choices << ","value << "]}," TTY Prompt List validate_default_name":{"type":"method","name":"validate_default_name","children":[],"call":["name inspect ","default_choice disabled? ","default_choice nil? "," choices find_by ","name to_s "," choices "," choices find_by  disabled? "," choices find_by  nil? "]}," TTY Prompt EnumList validate_default_name":{"type":"method","name":"validate_default_name","children":[],"call":["@default inspect ","default_choice disabled? ","default_choice nil? "," choices find_by ","@default to_s "," choices "," choices find_by  disabled? "," choices find_by  nil? "]}," TTY Prompt Choice convert_array":{"type":"method","name":"convert_array","children":[],"call":[]}," TTY Prompt Reader convert_byte":{"type":"method","name":"convert_byte","children":[],"call":[" Array pack "," Array "]}," TTY Prompt Reader parse_key_event":{"type":"method","name":"parse_key_event","children":[],"call":["event key name ","event key ","permitted_events include? ","event key nil? "]}," TTY Prompt Reader publish_keypress_event":{"type":"method","name":"publish_keypress_event","children":[],"call":[" publish ","event_name nil? "," parse_key_event ","KeyEvent  from "," parse_key_event  nil? ","KeyEvent  from _name nil? "," parse_key_KeyEvent  from  "]}," TTY Prompt Reader Mode raw_off":{"type":"method","name":"raw_off","children":[],"call":["@raw off "]}," TTY Prompt Reader Mode raw_on":{"type":"method","name":"raw_on","children":[],"call":["@raw on "]}," TTY Prompt Reader Mode echo_off":{"type":"method","name":"echo_off","children":[],"call":["@echo off "]}," TTY Prompt Reader Mode echo_on":{"type":"method","name":"echo_on","children":[],"call":["@echo on "]}," TTY Prompt Reader Mode Raw raw":{"type":"method","name":"raw","children":[],"call":[" off "," exit "," puts ","error backtrace ","error message ","error class ","block call "," block_given? "," on "]}," TTY Prompt Reader Mode Raw off":{"type":"method","name":"off","children":[],"call":["TTY Platform  unix? "]}," TTY Prompt Reader Mode Raw on":{"type":"method","name":"on","children":[],"call":["TTY Platform  unix? "]}," TTY Prompt Reader Mode Echo echo":{"type":"method","name":"echo","children":[],"call":[" on "," exit "," puts ","error backtrace ","error message ","error class ","block call "," block_given? "," off "]}," TTY Prompt Reader Mode Echo off":{"type":"method","name":"off","children":[],"call":["TTY Platform  unix? "]}," TTY Prompt Reader Mode Echo on":{"type":"method","name":"on","children":[],"call":["TTY Platform  unix? "]}," TTY Prompt Question blank?":{"type":"method","name":"blank?","children":[],"call":["BLANK_REGEX  === ","value empty? ","value respond_to? ","value nil? "]}," TTY Prompt List keyescape":{"type":"method","name":"keyescape","children":[],"call":[" exit "]}}