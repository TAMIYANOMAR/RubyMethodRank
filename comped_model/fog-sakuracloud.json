{" Fog Volume SakuraCloud Mock reset_data":{"type":"method","name":"reset_data","children":[],"call":[" class data delete "," class data "," class "]}," Fog Volume SakuraCloud Mock data":{"type":"method","name":"data","children":[],"call":[" class data [] "," class data "," class "]}," Fog Volume SakuraCloud Mock initialize":{"type":"method","name":"initialize","children":[],"call":["options [] "]}," Fog Volume SakuraCloud Mock reset":{"type":"method","name":"reset","children":[],"call":[]}," Fog Volume SakuraCloud Real parse":{"type":"method","name":"parse","children":[],"call":["response body= ","Fog JSON  decode ","response body ","response body empty? "]}," Fog Volume SakuraCloud Real request":{"type":"method","name":"request","children":[],"call":[" parse ","@connection request "]}," Fog Volume SakuraCloud Real initialize":{"type":"method","name":"initialize","children":[],"call":["Fog Core Connection  new ","options [] ","Fog  credentials []= ","Fog  credentials ","Base64  strict_encode64 ","(send\n  (lvar :options) :[]\n  (sym :sakuracloud_api_token)) join ","Fog SakuraCloud  validate_api_zone! ","Fog  credentials [] "]}," Fog Volume SakuraCloud Mock list_plans":{"type":"method","name":"list_plans","children":[],"call":["response body= ","response status= ","Excon Response  new ","Excon Response  new  body= ","Excon Response  new  status= "]}," Fog Volume SakuraCloud Real list_plans":{"type":"method","name":"list_plans","children":[],"call":[" request ","Fog SakuraCloud  build_endpoint "]}," Fog Volume SakuraCloud Mock list_disks":{"type":"method","name":"list_disks","children":[],"call":["response body= ","response status= ","Excon Response  new ","Excon Response  new  body= ","Excon Response  new  status= "]}," Fog Volume SakuraCloud Real list_disks":{"type":"method","name":"list_disks","children":[],"call":[" request ","Fog SakuraCloud  build_endpoint "]}," Fog Volume SakuraCloud Mock list_archives":{"type":"method","name":"list_archives","children":[],"call":["response body= ","response status= ","Excon Response  new ","Excon Response  new  body= ","Excon Response  new  status= "]}," Fog Volume SakuraCloud Real list_archives":{"type":"method","name":"list_archives","children":[],"call":[" request ","Fog SakuraCloud  build_endpoint "]}," Fog Volume SakuraCloud Mock delete_disk":{"type":"method","name":"delete_disk","children":[],"call":["response body= ","response status= ","Excon Response  new ","Excon Response  new  body= ","Excon Response  new  status= "]}," Fog Volume SakuraCloud Real delete_disk":{"type":"method","name":"delete_disk","children":[],"call":[" request ","Fog SakuraCloud  build_endpoint "]}," Fog Volume SakuraCloud Mock create_disk":{"type":"method","name":"create_disk","children":[],"call":["response body= ","response status= ","Excon Response  new ","Excon Response  new  body= ","Excon Response  new  status= "]}," Fog Volume SakuraCloud Real create_disk":{"type":"method","name":"create_disk","children":[],"call":[" request ","Fog JSON  encode ","plan to_i ","sourcearchive to_s ","body [] []= ","options [] to_i ","options [] ","body [] ","options [] nil? ! ","options [] nil? ","options [] to_s ","Fog SakuraCloud  build_endpoint "]}," Fog Volume SakuraCloud Mock configure_disk":{"type":"method","name":"configure_disk","children":[],"call":["response body= ","response status= ","Excon Response  new ","Excon Response  new  body= ","Excon Response  new  status= "]}," Fog Volume SakuraCloud Real configure_disk":{"type":"method","name":"configure_disk","children":[],"call":[" request ","Fog JSON  encode ","disk_id to_s ","sshkey_id to_s ","Fog SakuraCloud  build_endpoint "]}," Fog Volume SakuraCloud Mock attach_disk":{"type":"method","name":"attach_disk","children":[],"call":["response body= ","response status= ","Excon Response  new ","Excon Response  new  body= ","Excon Response  new  status= "]}," Fog Volume SakuraCloud Real attach_disk":{"type":"method","name":"attach_disk","children":[],"call":[" request ","server_id to_s ","disk_id to_s ","Fog SakuraCloud  build_endpoint "]}," Fog Compute SakuraCloud Mock stop_server":{"type":"method","name":"stop_server","children":[],"call":["response body= ","response status= ","Excon Response  new ","Excon Response  new  body= ","Excon Response  new  status= "]}," Fog Compute SakuraCloud Real stop_server":{"type":"method","name":"stop_server","children":[],"call":[" request ","Fog JSON  encode ","Fog SakuraCloud  build_endpoint "]}," Fog Compute SakuraCloud Mock list_zones":{"type":"method","name":"list_zones","children":[],"call":["response body= ","response status= ","Excon Response  new ","Excon Response  new  body= ","Excon Response  new  status= "]}," Fog Compute SakuraCloud Real list_zones":{"type":"method","name":"list_zones","children":[],"call":[" request ","Fog SakuraCloud  build_endpoint "]}," Fog Compute SakuraCloud Mock list_ssh_keys":{"type":"method","name":"list_ssh_keys","children":[],"call":["response body= ","response status= ","Excon Response  new ","Excon Response  new  body= ","Excon Response  new  status= "]}," Fog Compute SakuraCloud Real list_ssh_keys":{"type":"method","name":"list_ssh_keys","children":[],"call":[" request ","Fog SakuraCloud  build_endpoint "]}," Fog Compute SakuraCloud Mock list_servers":{"type":"method","name":"list_servers","children":[],"call":["response body= ","response status= ","Excon Response  new ","Excon Response  new  body= ","Excon Response  new  status= "]}," Fog Compute SakuraCloud Real list_servers":{"type":"method","name":"list_servers","children":[],"call":[" request ","Fog SakuraCloud  build_endpoint "]}," Fog Compute SakuraCloud Mock list_plans":{"type":"method","name":"list_plans","children":[],"call":["response body= ","response status= ","Excon Response  new ","Excon Response  new  body= ","Excon Response  new  status= "]}," Fog Compute SakuraCloud Real list_plans":{"type":"method","name":"list_plans","children":[],"call":[" request ","Fog SakuraCloud  build_endpoint "]}," Fog Compute SakuraCloud Mock delete_server":{"type":"method","name":"delete_server","children":[],"call":["response body= ","response status= ","Excon Response  new ","Excon Response  new  body= ","Excon Response  new  status= "]}," Fog Compute SakuraCloud Real delete_server":{"type":"method","name":"delete_server","children":[],"call":[" request ","Fog JSON  encode ","Fog SakuraCloud  build_endpoint "]}," Fog Compute SakuraCloud Mock create_server":{"type":"method","name":"create_server","children":[],"call":["response body= ","response status= ","Excon Response  new ","Excon Response  new  body= ","Excon Response  new  status= "]}," Fog Compute SakuraCloud Real create_server":{"type":"method","name":"create_server","children":[],"call":[" request ","Fog JSON  encode ","serverplan to_i ","options [] to_i ","options [] ","switchs map ","options [] split ","Fog SakuraCloud  build_endpoint ","options [] split  map "]}," Fog Compute SakuraCloud Mock boot_server":{"type":"method","name":"boot_server","children":[],"call":["response body= ","response status= ","Excon Response  new ","Excon Response  new  body= ","Excon Response  new  status= "]}," Fog Compute SakuraCloud Real boot_server":{"type":"method","name":"boot_server","children":[],"call":[" request ","Fog SakuraCloud  build_endpoint "]}," Fog Volume SakuraCloud Plans get":{"type":"method","name":"get","children":[],"call":["f id == ","f id "," all find "," all "]}," Fog Volume SakuraCloud Plans all":{"type":"method","name":"all","children":[],"call":[" load "," service list_plans body [] "," service list_plans body "," service list_plans "," service "]}," Fog Volume SakuraCloud Disks delete":{"type":"method","name":"delete","children":[],"call":[" service delete_disk "," service "]}," Fog Volume SakuraCloud Disks get":{"type":"method","name":"get","children":[],"call":["f id == ","f id "," all find "," all "]}," Fog Volume SakuraCloud Disks all":{"type":"method","name":"all","children":[],"call":[" load "," service list_disks body [] "," service list_disks body "," service list_disks "," service "]}," Fog Volume SakuraCloud Disk configure":{"type":"method","name":"configure","children":[],"call":[" service configure_disk ","@attributes [] "," service "," requires "," id "]}," Fog Volume SakuraCloud Disk save":{"type":"method","name":"save","children":[],"call":[" merge_attributes "," service create_disk body [] "," service create_disk body "," service create_disk ","@attributes [] "," service "," requires "," plan "," name "," size_mb "," source_archive "]}," Fog Volume SakuraCloud Disk delete":{"type":"method","name":"delete","children":[],"call":[" service delete_disk "," identity "," service "]}," Fog Volume SakuraCloud Archives get":{"type":"method","name":"get","children":[],"call":["f id == ","f id "," all find "," all "]}," Fog Volume SakuraCloud Archives all":{"type":"method","name":"all","children":[],"call":[" load "," service list_archives body [] "," service list_archives body "," service list_archives "," service "]}," Fog Compute SakuraCloud Zones get":{"type":"method","name":"get","children":[],"call":["f id == ","f id "," all find "," all "]}," Fog Compute SakuraCloud Zones all":{"type":"method","name":"all","children":[],"call":[" load "," service list_zones body [] "," service list_zones body "," service list_zones "," service "]}," Fog Compute SakuraCloud SshKeys get":{"type":"method","name":"get","children":[],"call":["f id == ","f id "," all find "," all "]}," Fog Compute SakuraCloud SshKeys all":{"type":"method","name":"all","children":[],"call":[" load "," service list_ssh_keys body [] "," service list_ssh_keys body "," service list_ssh_keys "," service "]}," Fog Compute SakuraCloud Servers disk_attached?":{"type":"method","name":"disk_attached?","children":[],"call":["server reload "," sleep "," print ","disk_id to_s ","server disks find ","server disks "]}," Fog Compute SakuraCloud Servers create_and_attach_volume":{"type":"method","name":"create_and_attach_volume","children":[],"call":["volume configure_disk ","options [] ","disk id ","Fog Logger  warning "," disk_attached? ","volume attach_disk ","server id "," availability == "," availability ","disk wait_for ","volume disks create ","options [] [] to_s ","options [] [] ","options [] [] to_i ","Fog UUID  uuid ","volume disks ","Fog Volume SakuraCloud  new ","Fog  credentials [] ","Fog  credentials ","volume register_note_to_disk "," service instance_variable_get "," service ","volume configure_volume disks create  ","Fog Volume SakuraCloud  new  configure_disk ","volume disks create  id "," volume disks create _attached? ","volume attach_volume disks create  ","Fog Volume SakuraCloud  new  attach_disk ","volume disks create  wait_for ","volume volume disks create s create ","Fog Volume SakuraCloud  new  disks create ","volume volume disks create s ","Fog Volume SakuraCloud  new  disks ","volume register_note_to_volume disks create  ","Fog Volume SakuraCloud  new  register_note_to_disk "]}," Fog Compute SakuraCloud Servers create":{"type":"method","name":"create","children":[],"call":["server boot ","options [] ","server reload "," create_and_attach_volume ","server merge_attributes "," service servers new "," service servers "," service "," service create_server body [] "," service create_server body "," service create_server ","Fog UUID  uuid ","Fog Logger  warning "," service servers new  boot "," service servers new  reload "," service servers new  merge_attributes "," service  service servers new s new "," service  service servers new s "," service create_ service servers new  body [] "," service create_ service servers new  body "," service create_ service servers new  "]}," Fog Compute SakuraCloud Servers get":{"type":"method","name":"get","children":[],"call":["f id == ","f id "," all find "," all "]}," Fog Compute SakuraCloud Servers all":{"type":"method","name":"all","children":[],"call":[" load "," service list_servers body [] "," service list_servers body "," service list_servers "," service "]}," Fog Compute SakuraCloud Server delete":{"type":"method","name":"delete","children":[],"call":[" service delete_server ","@attributes [] "," service "," requires "," id "]}," Fog Compute SakuraCloud Server stop":{"type":"method","name":"stop","children":[],"call":[" service stop_server ","@attributes [] "," service "," requires "," id "]}," Fog Compute SakuraCloud Server boot":{"type":"method","name":"boot","children":[],"call":[" service boot_server ","@attributes [] "," service "," requires "," id "]}," Fog Compute SakuraCloud Server save":{"type":"method","name":"save","children":[],"call":[" merge_attributes "," service create_server body [] "," service create_server body "," service create_server ","@attributes [] "," service "," requires "]}," Fog Compute SakuraCloud Plans get":{"type":"method","name":"get","children":[],"call":["f id == ","f id "," all find "," all "]}," Fog Compute SakuraCloud Plans all":{"type":"method","name":"all","children":[],"call":[" load "," service list_plans body [] "," service list_plans body "," service list_plans "," service "]}," Fog Compute SakuraCloud Mock initialize":{"type":"method","name":"initialize","children":[],"call":[]}," Fog Compute SakuraCloud Real parse":{"type":"method","name":"parse","children":[],"call":["response body= ","Fog JSON  decode ","response body ","response body empty? "]}," Fog Compute SakuraCloud Real request":{"type":"method","name":"request","children":[],"call":[" parse ","@connection request "]}," Fog Compute SakuraCloud Real initialize":{"type":"method","name":"initialize","children":[],"call":["Fog Core Connection  new ","options [] ","Fog  credentials []= ","Fog  credentials ","Base64  strict_encode64 ","(send\n  (lvar :options) :[]\n  (sym :sakuracloud_api_token)) join ","Fog SakuraCloud  validate_api_zone! ","Fog  credentials [] "]}," SakuraCloud services":{"type":"method","name":"services","children":[],"call":["Fog SakuraCloud  services "]}," SakuraCloud []":{"type":"method","name":"[]","children":[],"call":["@@connections [] ","hash []= "," raise ","key inspect ","Fog Compute  new ","Fog Logger  warning ","Hash  new ","Fog Network  new ","Fog Volume  new "]}," SakuraCloud class_for":{"type":"method","name":"class_for","children":[],"call":[" raise "]}," Fog Network SakuraCloud Mock list_switches":{"type":"method","name":"list_switches","children":[],"call":["response body= ","response status= ","Excon Response  new ","Excon Response  new  body= ","Excon Response  new  status= "]}," Fog Network SakuraCloud Real list_switches":{"type":"method","name":"list_switches","children":[],"call":[" request ","Fog SakuraCloud  build_endpoint "]}," Fog Network SakuraCloud Mock list_routers":{"type":"method","name":"list_routers","children":[],"call":["response body= ","response status= ","Excon Response  new ","Excon Response  new  body= ","Excon Response  new  status= "]}," Fog Network SakuraCloud Real list_routers":{"type":"method","name":"list_routers","children":[],"call":[" request ","Fog SakuraCloud  build_endpoint "]}," Fog Network SakuraCloud Mock delete_switch":{"type":"method","name":"delete_switch","children":[],"call":["response body= ","response status= ","Excon Response  new ","Excon Response  new  body= ","Excon Response  new  status= "]}," Fog Network SakuraCloud Real delete_switch":{"type":"method","name":"delete_switch","children":[],"call":[" request ","Fog SakuraCloud  build_endpoint "]}," Fog Network SakuraCloud Mock delete_router":{"type":"method","name":"delete_router","children":[],"call":["response body= ","response status= ","Excon Response  new ","Excon Response  new  body= ","Excon Response  new  status= "]}," Fog Network SakuraCloud Real delete_router":{"type":"method","name":"delete_router","children":[],"call":[" request ","Fog SakuraCloud  build_endpoint "]}," Fog Network SakuraCloud Mock create_switch":{"type":"method","name":"create_switch","children":[],"call":["response body= ","response status= ","Excon Response  new ","Excon Response  new  body= ","Excon Response  new  status= "]}," Fog Network SakuraCloud Real create_switch":{"type":"method","name":"create_switch","children":[],"call":[" request ","Fog JSON  encode ","options [] ","Fog SakuraCloud  build_endpoint "]}," Fog Network SakuraCloud Mock create_router":{"type":"method","name":"create_router","children":[],"call":["response body= ","response status= ","Excon Response  new ","Excon Response  new  body= ","Excon Response  new  status= "]}," Fog Network SakuraCloud Real create_router":{"type":"method","name":"create_router","children":[],"call":[" request ","Fog JSON  encode ","options [] to_i ","options [] ","Fog SakuraCloud  build_endpoint "]}," Fog Network SakuraCloud Mock reset_data":{"type":"method","name":"reset_data","children":[],"call":[" class data delete "," class data "," class "]}," Fog Network SakuraCloud Mock data":{"type":"method","name":"data","children":[],"call":[" class data [] "," class data "," class "]}," Fog Network SakuraCloud Mock initialize":{"type":"method","name":"initialize","children":[],"call":["options [] "]}," Fog Network SakuraCloud Mock reset":{"type":"method","name":"reset","children":[],"call":[]}," Fog Network SakuraCloud Real parse":{"type":"method","name":"parse","children":[],"call":["response body= ","Fog JSON  decode ","response body ","response body empty? "]}," Fog Network SakuraCloud Real request":{"type":"method","name":"request","children":[],"call":[" parse ","@connection request "]}," Fog Network SakuraCloud Real initialize":{"type":"method","name":"initialize","children":[],"call":["Fog Core Connection  new ","options [] ","Fog  credentials []= ","Fog  credentials ","Base64  strict_encode64 ","(send\n  (lvar :options) :[]\n  (sym :sakuracloud_api_token)) join ","Fog SakuraCloud  validate_api_zone! ","Fog  credentials [] "]}," Fog Network SakuraCloud Switches delete":{"type":"method","name":"delete","children":[],"call":[" service delete_switch "," service "]}," Fog Network SakuraCloud Switches get":{"type":"method","name":"get","children":[],"call":["f id == ","f id "," all find "," all "]}," Fog Network SakuraCloud Switches all":{"type":"method","name":"all","children":[],"call":[" load "," service list_switches body [] "," service list_switches body "," service list_switches "," service "]}," Fog Network SakuraCloud Switch save":{"type":"method","name":"save","children":[],"call":[" merge_attributes "," service create_switch body [] "," service create_switch body "," service create_switch "," service ","Fog Logger  warning "," requires "]}," Fog Network SakuraCloud Switch delete":{"type":"method","name":"delete","children":[],"call":[" service delete_switch "," identity "," service "]}," Fog Network SakuraCloud Routers delete":{"type":"method","name":"delete","children":[],"call":[" service delete_router "," service "]}," Fog Network SakuraCloud Routers get":{"type":"method","name":"get","children":[],"call":["f id == ","f id "," all find "," all "]}," Fog Network SakuraCloud Routers all":{"type":"method","name":"all","children":[],"call":[" load "," service list_routers body [] "," service list_routers body "," service list_routers "," service "]}," Fog Network SakuraCloud Router router_available?":{"type":"method","name":"router_available?","children":[],"call":[" JSON  parse ","(block\n  (send\n    (send\n      (lvar :network) :switches) :find)\n  (args\n    (arg :r))\n  (and\n    (send\n      (send\n        (lvar :r) :internet) :!=\n      (nil))\n    (send\n      (send\n        (send\n          (lvar :r) :internet) :[]\n        (str \"ID\")) :==\n      (lvar :router_id)))) to_json ","r internet [] == ","r internet [] ","r internet ","r internet != ","network switches find ","network switches "," sleep "," print "]}," Fog Network SakuraCloud Router save":{"type":"method","name":"save","children":[],"call":[" merge_attributes "," router_available? ","data [] "," service ","Fog Logger  warning "," service create_router body [] "," service create_router body "," service create_router "," requires "," reload ","new_data [] ","new_data [] [] "," puts "," JSON  pretty_generate "," switch_available? ","attached_switch [] "," service create_router body []  [] "," router_available?  [] "," switch_available?  [] ","new_ service create_router body []  [] "," router_available?  [] [] "," switch_available?  [] [] ","new_ service create_router body []  [] [] "]}," Fog Network SakuraCloud Router delete":{"type":"method","name":"delete","children":[],"call":[" service delete_router "," identity "," service "]}," Fog Volume SakuraCloud Mock associate_ip_to_disk":{"type":"method","name":"associate_ip_to_disk","children":[],"call":["response body= ","response status= ","Excon Response  new ","Excon Response  new  body= ","Excon Response  new  status= "]}," Fog Volume SakuraCloud Real associate_ip_to_disk":{"type":"method","name":"associate_ip_to_disk","children":[],"call":[" request ","Fog JSON  encode ","disk_id to_s ","subnet [] ","Fog SakuraCloud  build_endpoint "]}," Fog Volume SakuraCloud Disk associate_ip":{"type":"method","name":"associate_ip","children":[],"call":[" service associate_ip_to_disk ","@attributes [] "," service "," requires "," id "]}," Fog SakuraCloud Script Mock reset_data":{"type":"method","name":"reset_data","children":[],"call":[" class data delete "," class data "," class "]}," Fog SakuraCloud Script Mock data":{"type":"method","name":"data","children":[],"call":[" class data [] "," class data "," class "]}," Fog SakuraCloud Script Mock initialize":{"type":"method","name":"initialize","children":[],"call":["options [] "]}," Fog SakuraCloud Script Mock reset":{"type":"method","name":"reset","children":[],"call":[]}," Fog SakuraCloud Script Real parse":{"type":"method","name":"parse","children":[],"call":["response body= ","Fog JSON  decode ","response body ","response body empty? "]}," Fog SakuraCloud Script Real request":{"type":"method","name":"request","children":[],"call":[" parse ","@connection request "]}," Fog SakuraCloud Script Real initialize":{"type":"method","name":"initialize","children":[],"call":["Fog Core Connection  new ","options [] ","Fog  credentials []= ","Fog  credentials ","Base64  strict_encode64 ","(send\n  (lvar :options) :[]\n  (sym :sakuracloud_api_token)) join ","Fog SakuraCloud  validate_api_zone! ","Fog  credentials [] "]}," Fog Volume SakuraCloud Mock register_note_to_disk":{"type":"method","name":"register_note_to_disk","children":[],"call":["response body= ","response status= ","Excon Response  new ","Excon Response  new  body= ","Excon Response  new  status= "]}," Fog Volume SakuraCloud Real register_note_to_disk":{"type":"method","name":"register_note_to_disk","children":[],"call":[" request ","Fog JSON  encode ","disk_id to_s ","notes map ","Fog SakuraCloud  build_endpoint "]}," Fog SakuraCloud Script Mock modify_note":{"type":"method","name":"modify_note","children":[],"call":["response body= ","response status= ","Excon Response  new ","Excon Response  new  body= ","Excon Response  new  status= "]}," Fog SakuraCloud Script Real modify_note":{"type":"method","name":"modify_note","children":[],"call":[" request ","Fog JSON  encode ","options [] ","Fog SakuraCloud  build_endpoint "]}," Fog SakuraCloud Script Mock list_notes":{"type":"method","name":"list_notes","children":[],"call":["response body= ","response status= ","Excon Response  new ","Excon Response  new  body= ","Excon Response  new  status= "]}," Fog SakuraCloud Script Real list_notes":{"type":"method","name":"list_notes","children":[],"call":[" request ","Fog SakuraCloud  build_endpoint "]}," Fog SakuraCloud Script Mock delete_note":{"type":"method","name":"delete_note","children":[],"call":["response body= ","response status= ","Excon Response  new ","Excon Response  new  body= ","Excon Response  new  status= "]}," Fog SakuraCloud Script Real delete_note":{"type":"method","name":"delete_note","children":[],"call":[" request ","Fog SakuraCloud  build_endpoint "]}," Fog SakuraCloud Script Mock create_note":{"type":"method","name":"create_note","children":[],"call":["response body= ","response status= ","Excon Response  new ","Excon Response  new  body= ","Excon Response  new  status= "]}," Fog SakuraCloud Script Real create_note":{"type":"method","name":"create_note","children":[],"call":[" request ","Fog JSON  encode ","options [] ","Fog SakuraCloud  build_endpoint "]}," Fog Volume SakuraCloud Disk register_script":{"type":"method","name":"register_script","children":[],"call":[" service register_note_to_disk ","note_ids flatten ","@attributes [] "," service "," requires ","note_ids << "," id "]}," Fog SakuraCloud Script Notes delete":{"type":"method","name":"delete","children":[],"call":[" service delete_note "," service "]}," Fog SakuraCloud Script Notes get":{"type":"method","name":"get","children":[],"call":["f id == ","f id "," all find "," all "]}," Fog SakuraCloud Script Notes all":{"type":"method","name":"all","children":[],"call":[" load "," service list_notes body [] "," service list_notes body "," service list_notes "," service "]}," Fog SakuraCloud Script Note save":{"type":"method","name":"save","children":[],"call":[" merge_attributes "," service create_note body [] "," service create_note body "," service create_note "," service ","Fog Logger  warning "," service modify_note body [] "," service modify_note body "," service modify_note "," identity "," requires "]}," Fog SakuraCloud Script Note delete":{"type":"method","name":"delete","children":[],"call":[" service delete_note "," identity "," service "]}," Fog Network SakuraCloud Mock regist_interface_to_server":{"type":"method","name":"regist_interface_to_server","children":[],"call":["response body= ","response status= ","Excon Response  new ","Excon Response  new  body= ","Excon Response  new  status= "]}," Fog Network SakuraCloud Real regist_interface_to_server":{"type":"method","name":"regist_interface_to_server","children":[],"call":["response body [] [] ","response body [] ","response body "," request ","Fog JSON  encode ","Fog SakuraCloud  build_endpoint "," request  body [] [] "," request  body [] "," request  body "]}," Fog Network SakuraCloud Mock list_interfaces":{"type":"method","name":"list_interfaces","children":[],"call":["response body= ","response status= ","Excon Response  new ","Excon Response  new  body= ","Excon Response  new  status= "]}," Fog Network SakuraCloud Real list_interfaces":{"type":"method","name":"list_interfaces","children":[],"call":[" request ","URI  encode ","Fog JSON  encode ","Fog SakuraCloud  build_endpoint "]}," Fog Network SakuraCloud Mock delete_interface":{"type":"method","name":"delete_interface","children":[],"call":["response body= ","response status= ","Excon Response  new ","Excon Response  new  body= ","Excon Response  new  status= "]}," Fog Network SakuraCloud Real delete_interface":{"type":"method","name":"delete_interface","children":[],"call":[" request ","Fog SakuraCloud  build_endpoint "]}," Fog Network SakuraCloud Real connect_interface_to_switch":{"type":"method","name":"connect_interface_to_switch","children":[],"call":["response body [] [] ","response body [] ","response body "," request ","Fog SakuraCloud  build_endpoint "," request  body [] [] "," request  body [] "," request  body "]}," Fog Network SakuraCloud Interfaces delete":{"type":"method","name":"delete","children":[],"call":[" service delete_interface "," service "]}," Fog Network SakuraCloud Interfaces connect_to_switch":{"type":"method","name":"connect_to_switch","children":[],"call":[" get "," service connect_interface_to_switch "," service "]}," Fog Network SakuraCloud Interfaces regist_onto_server":{"type":"method","name":"regist_onto_server","children":[],"call":[" get "," service regist_interface_to_server "," service "]}," Fog Network SakuraCloud Interfaces get":{"type":"method","name":"get","children":[],"call":["f id == ","f id "," all find "," all "]}," Fog Network SakuraCloud Interfaces all":{"type":"method","name":"all","children":[],"call":[" load "," service list_interfaces body [] "," service list_interfaces body "," service list_interfaces "," service "]}," Fog Network SakuraCloud Interface connect_to_switch":{"type":"method","name":"connect_to_switch","children":[],"call":[" service connect_interface_to_switch "," identity "," service "]}," Fog Network SakuraCloud Interface delete":{"type":"method","name":"delete","children":[],"call":[" service delete_interface "," identity "," service "]}," Fog Compute SakuraCloud Servers regist_interface_to_server":{"type":"method","name":"regist_interface_to_server","children":[],"call":["sv regist_interface "," get "," get  regist_interface "]}," Fog DNS SakuraCloud Mock modify_zone":{"type":"method","name":"modify_zone","children":[],"call":["response body= ","response status= ","Excon Response  new ","Excon Response  new  body= ","Excon Response  new  status= "]}," Fog DNS SakuraCloud Real modify_zone":{"type":"method","name":"modify_zone","children":[],"call":[" request ","Fog JSON  encode ","options [] ","Fog SakuraCloud  build_endpoint "]}," Fog DNS SakuraCloud Mock list_zones":{"type":"method","name":"list_zones","children":[],"call":["response body= ","response status= ","Excon Response  new ","Excon Response  new  body= ","Excon Response  new  status= "]}," Fog DNS SakuraCloud Real list_zones":{"type":"method","name":"list_zones","children":[],"call":[" request ","URI  encode ","Fog JSON  encode ","Fog SakuraCloud  build_endpoint "]}," Fog DNS SakuraCloud Mock delete_zone":{"type":"method","name":"delete_zone","children":[],"call":["response body= ","response status= ","Excon Response  new ","Excon Response  new  body= ","Excon Response  new  status= "]}," Fog DNS SakuraCloud Real delete_zone":{"type":"method","name":"delete_zone","children":[],"call":[" request ","Fog SakuraCloud  build_endpoint "]}," Fog DNS SakuraCloud Mock create_zone":{"type":"method","name":"create_zone","children":[],"call":["response body= ","response status= ","Excon Response  new ","Excon Response  new  body= ","Excon Response  new  status= "]}," Fog DNS SakuraCloud Real create_zone":{"type":"method","name":"create_zone","children":[],"call":[" request ","Fog JSON  encode ","options [] ","Fog SakuraCloud  build_endpoint "]}," Fog DNS SakuraCloud Zones delete":{"type":"method","name":"delete","children":[],"call":[" service delete_zone "," service "]}," Fog DNS SakuraCloud Zones get":{"type":"method","name":"get","children":[],"call":["f id == ","f id "," all find "," all "]}," Fog DNS SakuraCloud Zones all":{"type":"method","name":"all","children":[],"call":[" load "," service list_zones body [] "," service list_zones body "," service list_zones "," service "]}," Fog DNS SakuraCloud Zone save":{"type":"method","name":"save","children":[],"call":[" merge_attributes "," service create_zone body [] "," service create_zone body "," service create_zone "," service ","Fog Logger  warning "," service modify_zone body [] "," service modify_zone body "," service modify_zone "," identity "," requires "]}," Fog DNS SakuraCloud Zone delete":{"type":"method","name":"delete","children":[],"call":[" service delete_zone "," identity "," service "]}," Fog DNS SakuraCloud Zone nameservers":{"type":"method","name":"nameservers","children":[],"call":[" status fetch "," status "]}," Fog DNS SakuraCloud Zone zone":{"type":"method","name":"zone","children":[],"call":[" status fetch "," status "]}," Fog DNS SakuraCloud Zone rr_sets":{"type":"method","name":"rr_sets","children":[],"call":[" settings fetch fetch "," settings fetch "," settings "]}," Fog DNS SakuraCloud Mock reset_data":{"type":"method","name":"reset_data","children":[],"call":[" class data delete "," class data "," class "]}," Fog DNS SakuraCloud Mock data":{"type":"method","name":"data","children":[],"call":[" class data [] "," class data "," class "]}," Fog DNS SakuraCloud Mock initialize":{"type":"method","name":"initialize","children":[],"call":["options [] "]}," Fog DNS SakuraCloud Mock reset":{"type":"method","name":"reset","children":[],"call":[]}," Fog DNS SakuraCloud Real parse":{"type":"method","name":"parse","children":[],"call":["response body= ","Fog JSON  decode ","response body ","response body empty? "]}," Fog DNS SakuraCloud Real request":{"type":"method","name":"request","children":[],"call":[" parse ","@connection request "]}," Fog DNS SakuraCloud Real initialize":{"type":"method","name":"initialize","children":[],"call":["Fog Core Connection  new ","options [] ","Fog  credentials []= ","Fog  credentials ","Base64  strict_encode64 ","(send\n  (lvar :options) :[]\n  (sym :sakuracloud_api_token)) join ","Fog SakuraCloud  validate_api_zone! ","Fog  credentials [] "]}," Fog DNS SakuraCloud Zone rr_sets=":{"type":"method","name":"rr_sets=","children":[],"call":[" settings= "," raise ","rrsets is_a? "]}," Fog Volume SakuraCloud Mock carve_hostname_on_disk":{"type":"method","name":"carve_hostname_on_disk","children":[],"call":["response body= ","response status= ","Excon Response  new ","Excon Response  new  body= ","Excon Response  new  status= "]}," Fog Volume SakuraCloud Real carve_hostname_on_disk":{"type":"method","name":"carve_hostname_on_disk","children":[],"call":[" request ","Fog JSON  encode ","disk_id to_s ","Fog SakuraCloud  build_endpoint "]}," Fog Volume SakuraCloud Disk carve_hostname_on_disk":{"type":"method","name":"carve_hostname_on_disk","children":[],"call":[" service carve_hostname_on_disk ","@attributes [] "," service "," requires "," id "]}," Fog Volume SakuraCloud Disk attach":{"type":"method","name":"attach","children":[],"call":[" service attach_disk "," id "," service "]}," Fog SakuraCloud build_endpoint":{"type":"method","name":"build_endpoint","children":[],"call":[]}," Fog SakuraCloud validate_api_zone!":{"type":"method","name":"validate_api_zone!","children":[],"call":[]}," Fog SakuraCloud api_zones":{"type":"method","name":"api_zones","children":[],"call":[]}," Fog Network SakuraCloud Mock collect_monitor_router":{"type":"method","name":"collect_monitor_router","children":[],"call":["response body= ","response status= ","Excon Response  new ","Excon Response  new  body= ","Excon Response  new  status= "]}," Fog Network SakuraCloud Real collect_monitor_router":{"type":"method","name":"collect_monitor_router","children":[],"call":[" request ","Fog SakuraCloud  build_endpoint ","URI  encode ","Fog JSON  encode ","filter []= "]}," Fog Network SakuraCloud Router collect_monitor":{"type":"method","name":"collect_monitor","children":[],"call":[" service collect_monitor_router body [] "," service collect_monitor_router body "," service collect_monitor_router "," identity "," service "]}," Fog SakuraCloud Utils Request parse":{"type":"method","name":"parse","children":[],"call":["response body= ","Fog JSON  decode ","response body ","response body empty? "]}," Fog SakuraCloud Utils Request request":{"type":"method","name":"request","children":[],"call":[" raise ","Fog Logger  warning "," JSON  parse [] "," JSON  parse ","e response body ","e response "," parse ","@connection request ","e  parse  body ","e  parse  "]}," Fog Network SakuraCloud Mock change_router_bandwidth":{"type":"method","name":"change_router_bandwidth","children":[],"call":["response body= ","response status= ","Excon Response  new ","Excon Response  new  body= ","Excon Response  new  status= "]}," Fog Network SakuraCloud Real change_router_bandwidth":{"type":"method","name":"change_router_bandwidth","children":[],"call":[" request ","Fog JSON  encode ","Fog SakuraCloud  build_endpoint "]}," Fog Network SakuraCloud Router switch_available?":{"type":"method","name":"switch_available?","children":[],"call":[" JSON  parse ","(block\n  (send\n    (send\n      (lvar :network) :switches) :find)\n  (args\n    (arg :r))\n  (and\n    (send\n      (send\n        (lvar :r) :internet) :!=\n      (nil))\n    (send\n      (send\n        (send\n          (lvar :r) :internet) :[]\n        (str \"ID\")) :==\n      (lvar :router_id)))) to_json ","r internet [] == ","r internet [] ","r internet ","r internet != ","network switches find ","network switches "," sleep "," print "]}," Fog Network SakuraCloud Router change_bandwidth":{"type":"method","name":"change_bandwidth","children":[],"call":[" service change_router_bandwidth body [] "," service change_router_bandwidth body "," service change_router_bandwidth "," identity "," service "," reload "," id= ","new_router [] "," service change_router_bandwidth body []  [] "]}}