{" Fog VPN StormOnDemand Mock reset_data":{"type":"method","name":"reset_data","children":[],"call":[" class data delete "," class data "," class "," data keys "," data "]}," Fog VPN StormOnDemand Mock data":{"type":"method","name":"data","children":[],"call":[" class data [] "," class data "," class "]}," Fog VPN StormOnDemand Mock initialize":{"type":"method","name":"initialize","children":[],"call":["options [] "]}," Fog VPN StormOnDemand Mock reset":{"type":"method","name":"reset","children":[],"call":[]}," Fog VPN StormOnDemand Real update_vpn":{"type":"method","name":"update_vpn","children":[],"call":[" request ","Fog JSON  encode "]}," Fog VPN StormOnDemand Real list_vpn_users":{"type":"method","name":"list_vpn_users","children":[],"call":[" request ","Fog JSON  encode "]}," Fog VPN StormOnDemand Real get_vpn":{"type":"method","name":"get_vpn","children":[],"call":[" request ","Fog JSON  encode "]}," Fog VPN StormOnDemand Real create_vpn":{"type":"method","name":"create_vpn","children":[],"call":[" request ","Fog JSON  encode "]}," Fog VPN StormOnDemand Vpns all_users":{"type":"method","name":"all_users","children":[],"call":[" service list_vpn_users body [] "," service list_vpn_users body "," service list_vpn_users "," service "]}," Fog VPN StormOnDemand Vpns get":{"type":"method","name":"get","children":[],"call":[" new "," service get_vpn body "," service get_vpn "," service "," service get_ service get_vpn body  body "," service get_ service get_vpn body  "]}," Fog VPN StormOnDemand Vpns create":{"type":"method","name":"create","children":[],"call":[" new "," service create_vpn body "," service create_vpn "," service "," service create_ service create_vpn body  body "," service create_ service create_vpn body  "]}," Fog VPN StormOnDemand Vpn update":{"type":"method","name":"update","children":[],"call":[" service update_vpn ","(pair\n  (sym :uniq_id)\n  (send nil :identity)) merge! "," identity "," service "," requires "]}," Fog Support StormOnDemand Mock reset_data":{"type":"method","name":"reset_data","children":[],"call":[" class data delete "," class data "," class "," data keys "," data "]}," Fog Support StormOnDemand Mock data":{"type":"method","name":"data","children":[],"call":[" class data [] "," class data "," class "]}," Fog Support StormOnDemand Mock initialize":{"type":"method","name":"initialize","children":[],"call":["options [] "]}," Fog Support StormOnDemand Mock reset":{"type":"method","name":"reset","children":[],"call":[]}," Fog Support StormOnDemand Real reply_ticket":{"type":"method","name":"reply_ticket","children":[],"call":[" request ","Fog JSON  encode "]}," Fog Support StormOnDemand Real reopen_ticket":{"type":"method","name":"reopen_ticket","children":[],"call":[" request ","Fog JSON  encode "]}," Fog Support StormOnDemand Real list_tickets":{"type":"method","name":"list_tickets","children":[],"call":[" request ","Fog JSON  encode "]}," Fog Support StormOnDemand Real list_ticket_types":{"type":"method","name":"list_ticket_types","children":[],"call":[" request ","Fog JSON  encode "]}," Fog Support StormOnDemand Real get_ticket_details":{"type":"method","name":"get_ticket_details","children":[],"call":[" request ","Fog JSON  encode "]}," Fog Support StormOnDemand Real get_active_alert":{"type":"method","name":"get_active_alert","children":[],"call":[" request ","Fog JSON  encode "]}," Fog Support StormOnDemand Real create_ticket":{"type":"method","name":"create_ticket","children":[],"call":[" request ","Fog JSON  encode "]}," Fog Support StormOnDemand Real close_ticket":{"type":"method","name":"close_ticket","children":[],"call":[" request ","Fog JSON  encode "]}," Fog Support StormOnDemand Real authenticate":{"type":"method","name":"authenticate","children":[],"call":[" request ","Fog JSON  encode "]}," Fog Support StormOnDemand Real add_transaction_feedback":{"type":"method","name":"add_transaction_feedback","children":[],"call":[" request ","Fog JSON  encode "]}," Fog Support StormOnDemand Real add_feedback":{"type":"method","name":"add_feedback","children":[],"call":[" request ","Fog JSON  encode "]}," Fog Support StormOnDemand Tickets types":{"type":"method","name":"types","children":[],"call":[" service list_ticket_types body [] "," service list_ticket_types body "," service list_ticket_types "," service "]}," Fog Support StormOnDemand Tickets all":{"type":"method","name":"all","children":[],"call":[" load "," service list_tickets body [] "," service list_tickets body "," service list_tickets "," service "," service list_ service list_tickets body []  body [] "," service list_ service list_tickets body []  body "," service list_ service list_tickets body []  "]}," Fog Support StormOnDemand Tickets get":{"type":"method","name":"get","children":[],"call":[" service get_ticket_details body "," service get_ticket_details "," service "]}," Fog Support StormOnDemand Tickets create":{"type":"method","name":"create","children":[],"call":[" new "," service create_ticket body "," service create_ticket "," service "," service create_ service create_ticket body  body "," service create_ service create_ticket body  "]}," Fog Support StormOnDemand Ticket reply":{"type":"method","name":"reply","children":[],"call":["res [] to_i == ","res [] to_i ","res [] "," service reply_ticket body "," service reply_ticket ","(pair\n  (sym :id)\n  (send nil :identity)) merge! "," secid "," identity "," service "," requires "," service reply_ticket body  [] to_i == "," service reply_ticket body  [] to_i "," service reply_ticket body  [] "," requi service reply_ticket body  "]}," Fog Support StormOnDemand Ticket reopen":{"type":"method","name":"reopen","children":[],"call":["res [] to_i == ","res [] to_i ","res [] "," service reopen_ticket body "," service reopen_ticket "," secid "," identity "," service "," requires "," service reopen_ticket body  [] to_i == "," service reopen_ticket body  [] to_i "," service reopen_ticket body  [] "," requi service reopen_ticket body  "]}," Fog Support StormOnDemand Ticket close":{"type":"method","name":"close","children":[],"call":["res [] to_i == ","res [] to_i ","res [] "," service close_ticket body "," service close_ticket "," secid "," identity "," service "," requires "," service close_ticket body  [] to_i == "," service close_ticket body  [] to_i "," service close_ticket body  [] "," requi service close_ticket body  "]}," Fog Support StormOnDemand Ticket authenticate":{"type":"method","name":"authenticate","children":[],"call":[" service authenticate body "," service authenticate "," service ","(pair\n  (sym :id)\n  (send nil :identity)) merge! "," secid "," identity "," requires "]}," Fog Support StormOnDemand Ticket add_transaction_feedback":{"type":"method","name":"add_transaction_feedback","children":[],"call":[" service add_transaction_feedback body "," service add_transaction_feedback "," service ","(pair\n  (sym :ticket_id)\n  (send nil :identity)) merge! "," secid "," identity "," requires "]}," Fog Support StormOnDemand Ticket add_feedback":{"type":"method","name":"add_feedback","children":[],"call":["res [] to_i == ","res [] to_i ","res [] "," service add_feedback body "," service add_feedback ","(pair\n  (sym :id)\n  (send nil :identity)) merge! "," identity "," service "," requires "," service add_feedback body  [] to_i == "," service add_feedback body  [] to_i "," service add_feedback body  [] "," requi service add_feedback body  "]}," Fog Support StormOnDemand Alerts get_active":{"type":"method","name":"get_active","children":[],"call":[" new "," service get_active_alert body [] "," service get_active_alert body "," service get_active_alert "," service "," service get_active_ service get_active_alert body []  body [] "," service get_active_ service get_active_alert body []  body "," service get_active_ service get_active_alert body []  "]}," Fog StormOnDemand Shared request":{"type":"method","name":"request","children":[],"call":[" raise ","response body inspect ","response body ","response body key? ","response body= ","Fog JSON  decode ","response body empty? ","Fog StormOnDemand Compute NotFound  slurp ","@connection request ","params merge! ","params [] ","(pair\n  (str \"Content-Type\")\n  (str \"application/json\")) merge! ","Basic  << ","Base64  encode64 chomp ","Base64  encode64 ","@connection request  body inspect ","@connection request  body ","@connection request  body key? ","@connection request  body= ","@connection request  body empty? "]}," Fog StormOnDemand Shared reload":{"type":"method","name":"reload","children":[],"call":["@connection reset "]}," Fog StormOnDemand Shared initialize":{"type":"method","name":"initialize","children":[],"call":["Fog XML Connection  new ","options [] ","uri scheme ","uri port ","uri path ","uri host ","URI  parse ","URI  parse  scheme ","URI  parse  port ","URI  parse  path ","URI  parse  host "]}," Fog Storage StormOnDemand Mock reset_data":{"type":"method","name":"reset_data","children":[],"call":[" class data delete "," class data "," class "," data keys "," data "]}," Fog Storage StormOnDemand Mock data":{"type":"method","name":"data","children":[],"call":[" class data [] "," class data "," class "]}," Fog Storage StormOnDemand Mock initialize":{"type":"method","name":"initialize","children":[],"call":["options [] "]}," Fog Storage StormOnDemand Mock reset":{"type":"method","name":"reset","children":[],"call":[]}," Fog Storage StormOnDemand Real update_volume":{"type":"method","name":"update_volume","children":[],"call":[" request ","Fog JSON  encode "]}," Fog Storage StormOnDemand Real resize_volume":{"type":"method","name":"resize_volume","children":[],"call":[" request ","Fog JSON  encode "]}," Fog Storage StormOnDemand Real list_volumes":{"type":"method","name":"list_volumes","children":[],"call":[" request ","Fog JSON  encode "]}," Fog Storage StormOnDemand Real list_clusters":{"type":"method","name":"list_clusters","children":[],"call":[" request ","Fog JSON  encode "]}," Fog Storage StormOnDemand Real get_volume":{"type":"method","name":"get_volume","children":[],"call":[" request ","Fog JSON  encode "]}," Fog Storage StormOnDemand Real detach_volume_from_server":{"type":"method","name":"detach_volume_from_server","children":[],"call":[" request ","Fog JSON  encode "]}," Fog Storage StormOnDemand Real delete_volume":{"type":"method","name":"delete_volume","children":[],"call":[" request ","Fog JSON  encode "]}," Fog Storage StormOnDemand Real create_volume":{"type":"method","name":"create_volume","children":[],"call":[" request ","Fog JSON  encode "]}," Fog Storage StormOnDemand Real attach_volume_to_server":{"type":"method","name":"attach_volume_to_server","children":[],"call":[" request ","Fog JSON  encode "]}," Fog Storage StormOnDemand Volumes all":{"type":"method","name":"all","children":[],"call":[" load "," service list_volumes body [] "," service list_volumes body "," service list_volumes "," service "]}," Fog Storage StormOnDemand Volumes get":{"type":"method","name":"get","children":[],"call":[" new "," service get_volume body "," service get_volume "," service "," service get_ service get_volume body ume body "," service get_ service get_volume body ume "]}," Fog Storage StormOnDemand Volumes create":{"type":"method","name":"create","children":[],"call":[" new "," service create_volume body "," service create_volume "," service "," service create_ service create_volume body ume body "," service create_ service create_volume body ume "]}," Fog Storage StormOnDemand Volume update":{"type":"method","name":"update","children":[],"call":[" service update_volume ","(pair\n  (sym :uniq_id)\n  (send nil :identity)) merge! "," identity "," service "," requires "]}," Fog Storage StormOnDemand Volume resize":{"type":"method","name":"resize","children":[],"call":[" service resize_volume body "," service resize_volume "," identity "," service "," requires "]}," Fog Storage StormOnDemand Volume detach_from":{"type":"method","name":"detach_from","children":[],"call":[" service detach_volume_from_server body "," service detach_volume_from_server "," identity "," service "," requires "]}," Fog Storage StormOnDemand Volume destroy":{"type":"method","name":"destroy","children":[],"call":[" service delete_volume "," identity "," service "," requires "]}," Fog Storage StormOnDemand Volume attach_to":{"type":"method","name":"attach_to","children":[],"call":[" service attach_volume_to_server body "," service attach_volume_to_server "," identity "," service "," requires "]}," Fog Storage StormOnDemand Clusters all":{"type":"method","name":"all","children":[],"call":[" load "," service list_clusters body [] "," service list_clusters body "," service list_clusters "," service "]}," Fog Network StormOnDemand Mock reset_data":{"type":"method","name":"reset_data","children":[],"call":[" class data delete "," class data "," class "," data keys "," data "]}," Fog Network StormOnDemand Mock data":{"type":"method","name":"data","children":[],"call":[" class data [] "," class data "," class "]}," Fog Network StormOnDemand Mock initialize":{"type":"method","name":"initialize","children":[],"call":["options [] "]}," Fog Network StormOnDemand Mock reset":{"type":"method","name":"reset","children":[],"call":[]}," Fog Network StormOnDemand Real update_ruleset":{"type":"method","name":"update_ruleset","children":[],"call":[" request ","Fog JSON  encode "]}," Fog Network StormOnDemand Real update_pool":{"type":"method","name":"update_pool","children":[],"call":[" request ","Fog JSON  encode "]}," Fog Network StormOnDemand Real update_firewalls":{"type":"method","name":"update_firewalls","children":[],"call":[" request ","Fog JSON  encode "]}," Fog Network StormOnDemand Real update_balancer":{"type":"method","name":"update_balancer","children":[],"call":[" request ","Fog JSON  encode "]}," Fog Network StormOnDemand Real set_default_zone":{"type":"method","name":"set_default_zone","children":[],"call":[" request ","Fog JSON  encode "]}," Fog Network StormOnDemand Real request_new_ips":{"type":"method","name":"request_new_ips","children":[],"call":[" request ","Fog JSON  encode "]}," Fog Network StormOnDemand Real remove_ip_from_server":{"type":"method","name":"remove_ip_from_server","children":[],"call":[" request ","Fog JSON  encode "]}," Fog Network StormOnDemand Real remove_balancer_service":{"type":"method","name":"remove_balancer_service","children":[],"call":[" request ","Fog JSON  encode "]}," Fog Network StormOnDemand Real remove_balancer_node":{"type":"method","name":"remove_balancer_node","children":[],"call":[" request ","Fog JSON  encode "]}," Fog Network StormOnDemand Real list_zones":{"type":"method","name":"list_zones","children":[],"call":[" request ","Fog JSON  encode "]}," Fog Network StormOnDemand Real list_rulesets":{"type":"method","name":"list_rulesets","children":[],"call":[" request ","Fog JSON  encode "]}," Fog Network StormOnDemand Real list_private_ips":{"type":"method","name":"list_private_ips","children":[],"call":[" request ","Fog JSON  encode "]}," Fog Network StormOnDemand Real list_network_public_ips":{"type":"method","name":"list_network_public_ips","children":[],"call":[" request ","Fog JSON  encode "]}," Fog Network StormOnDemand Real list_network_ips":{"type":"method","name":"list_network_ips","children":[],"call":[" request ","Fog JSON  encode "]}," Fog Network StormOnDemand Real list_ip_public_accounts":{"type":"method","name":"list_ip_public_accounts","children":[],"call":[" request ","Fog JSON  encode "]}," Fog Network StormOnDemand Real list_balancers":{"type":"method","name":"list_balancers","children":[],"call":[" request ","Fog JSON  encode "]}," Fog Network StormOnDemand Real get_zone":{"type":"method","name":"get_zone","children":[],"call":[" request ","Fog JSON  encode "]}," Fog Network StormOnDemand Real get_ruleset":{"type":"method","name":"get_ruleset","children":[],"call":[" request ","Fog JSON  encode "]}," Fog Network StormOnDemand Real get_private_ip":{"type":"method","name":"get_private_ip","children":[],"call":[" request ","Fog JSON  encode "]}," Fog Network StormOnDemand Real get_pool":{"type":"method","name":"get_pool","children":[],"call":[" request ","Fog JSON  encode "]}," Fog Network StormOnDemand Real get_ip_details":{"type":"method","name":"get_ip_details","children":[],"call":[" request ","Fog JSON  encode "]}," Fog Network StormOnDemand Real get_firewall_rules":{"type":"method","name":"get_firewall_rules","children":[],"call":[" request ","Fog JSON  encode "]}," Fog Network StormOnDemand Real get_firewall_basic_options":{"type":"method","name":"get_firewall_basic_options","children":[],"call":[" request ","Fog JSON  encode "]}," Fog Network StormOnDemand Real get_firewall":{"type":"method","name":"get_firewall","children":[],"call":[" request ","Fog JSON  encode "]}," Fog Network StormOnDemand Real get_balancer_strategies":{"type":"method","name":"get_balancer_strategies","children":[],"call":[" request ","Fog JSON  encode "]}," Fog Network StormOnDemand Real get_balancer_possible_nodes":{"type":"method","name":"get_balancer_possible_nodes","children":[],"call":[" request ","Fog JSON  encode "]}," Fog Network StormOnDemand Real get_balancer_details":{"type":"method","name":"get_balancer_details","children":[],"call":[" request ","Fog JSON  encode "]}," Fog Network StormOnDemand Real get_assignments":{"type":"method","name":"get_assignments","children":[],"call":[" request ","Fog JSON  encode "]}," Fog Network StormOnDemand Real detach_server_from_private_ip":{"type":"method","name":"detach_server_from_private_ip","children":[],"call":[" request ","Fog JSON  encode "]}," Fog Network StormOnDemand Real delete_pool":{"type":"method","name":"delete_pool","children":[],"call":[" request ","Fog JSON  encode "]}," Fog Network StormOnDemand Real delete_balancer":{"type":"method","name":"delete_balancer","children":[],"call":[" request ","Fog JSON  encode "]}," Fog Network StormOnDemand Real create_ruleset":{"type":"method","name":"create_ruleset","children":[],"call":[" request ","Fog JSON  encode "]}," Fog Network StormOnDemand Real create_pool":{"type":"method","name":"create_pool","children":[],"call":[" request ","Fog JSON  encode "]}," Fog Network StormOnDemand Real create_balancer":{"type":"method","name":"create_balancer","children":[],"call":[" request ","Fog JSON  encode "]}," Fog Network StormOnDemand Real check_server_attached":{"type":"method","name":"check_server_attached","children":[],"call":[" request ","Fog JSON  encode "]}," Fog Network StormOnDemand Real check_balancer_available":{"type":"method","name":"check_balancer_available","children":[],"call":[" request ","Fog JSON  encode "]}," Fog Network StormOnDemand Real attach_server_to_private_ip":{"type":"method","name":"attach_server_to_private_ip","children":[],"call":[" request ","Fog JSON  encode "]}," Fog Network StormOnDemand Real add_ip_to_server":{"type":"method","name":"add_ip_to_server","children":[],"call":[" request ","Fog JSON  encode "]}," Fog Network StormOnDemand Real add_balancer_service":{"type":"method","name":"add_balancer_service","children":[],"call":[" request ","Fog JSON  encode "]}," Fog Network StormOnDemand Real add_balancer_node":{"type":"method","name":"add_balancer_node","children":[],"call":[" request ","Fog JSON  encode "]}," Fog Network StormOnDemand Zones all":{"type":"method","name":"all","children":[],"call":[" load "," service list_zones body "," service list_zones "," service "]}," Fog Network StormOnDemand Zones get":{"type":"method","name":"get","children":[],"call":[" new "," service get_zone body "," service get_zone "," service "," service get_ service get_zone body one body "," service get_ service get_zone body one "]}," Fog Network StormOnDemand Zone set_default":{"type":"method","name":"set_default","children":[],"call":[" service set_default_zone "," identity "," service "," requires "]}," Fog Network StormOnDemand Rulesets all":{"type":"method","name":"all","children":[],"call":[" load "," service list_rulesets body [] "," service list_rulesets body "," service list_rulesets "," service "," se service list_rulesets body [] vice list_ service list_rulesets body [] ulesets body [] "," se service list_rulesets body [] vice list_ service list_rulesets body [] ulesets body "," se service list_rulesets body [] vice list_ service list_rulesets body [] ulesets "," se service list_rulesets body [] vice "]}," Fog Network StormOnDemand Rulesets get":{"type":"method","name":"get","children":[],"call":[" new "," service get_ruleset body "," service get_ruleset "," service "," se service get_ruleset body vice get_ service get_ruleset body uleset body "," se service get_ruleset body vice get_ service get_ruleset body uleset "," se service get_ruleset body vice "]}," Fog Network StormOnDemand Rulesets create":{"type":"method","name":"create","children":[],"call":[" new "," service create_ruleset body "," service create_ruleset "," service "," se service create_ruleset body vice c service create_ruleset body eate_ service create_ruleset body uleset body "," se service create_ruleset body vice c service create_ruleset body eate_ service create_ruleset body uleset "," se service create_ruleset body vice "]}," Fog Network StormOnDemand Ruleset update":{"type":"method","name":"update","children":[],"call":[" service update_ruleset "," ruleset "," service "," requires "]}," Fog Network StormOnDemand PrivateIps attached?":{"type":"method","name":"attached?","children":[],"call":["r [] to_i == ","r [] to_i ","r [] "," service check_server_attached body "," service check_server_attached "," service "," service check_server_attached body  [] to_i == "," service check_server_attached body  [] to_i "," service check_server_attached body  [] "," se service check_server_attached body vice check_se service check_server_attached body ve service check_server_attached body _attached body "," se service check_server_attached body vice check_se service check_server_attached body ve service check_server_attached body _attached "," se service check_server_attached body vice "]}," Fog Network StormOnDemand PrivateIps detach":{"type":"method","name":"detach","children":[],"call":["r [] to_i == ","r [] to_i ","r [] "," service detach_server_from_private_ip body "," service detach_server_from_private_ip "," service "," service detach_server_from_private_ip body  [] to_i == "," service detach_server_from_private_ip body  [] to_i "," service detach_server_from_private_ip body  [] "," se service detach_server_from_private_ip body vice detach_se service detach_server_from_private_ip body ve service detach_server_from_private_ip body _f service detach_server_from_private_ip body om_p service detach_server_from_private_ip body ivate_ip body "," se service detach_server_from_private_ip body vice detach_se service detach_server_from_private_ip body ve service detach_server_from_private_ip body _f service detach_server_from_private_ip body om_p service detach_server_from_private_ip body ivate_ip "," se service detach_server_from_private_ip body vice "]}," Fog Network StormOnDemand PrivateIps attach":{"type":"method","name":"attach","children":[],"call":["res [] to_i == ","res [] to_i ","res [] "," service attach_server_to_private_ip body "," service attach_server_to_private_ip "," service "," service attach_server_to_private_ip body  [] to_i == "," service attach_server_to_private_ip body  [] to_i "," service attach_server_to_private_ip body  [] "]}," Fog Network StormOnDemand PrivateIps get":{"type":"method","name":"get","children":[],"call":[" service get_private_ip body [] "," service get_private_ip body "," service get_private_ip "," service "]}," Fog Network StormOnDemand PrivateIps all":{"type":"method","name":"all","children":[],"call":[" load "," service list_private_ips body [] "," service list_private_ips body "," service list_private_ips "," service "]}," Fog Network StormOnDemand Pools get_assignments":{"type":"method","name":"get_assignments","children":[],"call":[" service get_assignments body [] "," service get_assignments body "," service get_assignments "," service "]}," Fog Network StormOnDemand Pools get":{"type":"method","name":"get","children":[],"call":[" new "," service get_pool body "," service get_pool "," service "," service get_ service get_pool body ool body "," service get_ service get_pool body ool "]}," Fog Network StormOnDemand Pools create":{"type":"method","name":"create","children":[],"call":[" new "," service create_pool body "," service create_pool "," service "," service create_ service create_pool body ool body "," service create_ service create_pool body ool "]}," Fog Network StormOnDemand Pool update":{"type":"method","name":"update","children":[],"call":[" service update_pool ","(pair\n  (sym :uniq_id)\n  (send nil :identity)) merge! "," identity "," service "," requires "]}," Fog Network StormOnDemand Pool destroy":{"type":"method","name":"destroy","children":[],"call":[" service delete_pool "," identity "," service "," requires "]}," Fog Network StormOnDemand NetworkIPs request_new_ips":{"type":"method","name":"request_new_ips","children":[],"call":[" service request_new_ips "," service "]}," Fog Network StormOnDemand NetworkIPs remove":{"type":"method","name":"remove","children":[],"call":[" service remove_ip_from_server "," service "]}," Fog Network StormOnDemand NetworkIPs all_public":{"type":"method","name":"all_public","children":[],"call":[" load "," service list_network_public_ips body [] "," service list_network_public_ips body "," service list_network_public_ips "," service "]}," Fog Network StormOnDemand NetworkIPs get_public_accounts":{"type":"method","name":"get_public_accounts","children":[],"call":[" service list_ip_public_accounts body [] "," service list_ip_public_accounts body "," service list_ip_public_accounts "," service "]}," Fog Network StormOnDemand NetworkIPs all":{"type":"method","name":"all","children":[],"call":[" load "," service list_network_ips body [] "," service list_network_ips body "," service list_network_ips "," service "]}," Fog Network StormOnDemand NetworkIPs get":{"type":"method","name":"get","children":[],"call":[" new "," service get_ip_details body "," service get_ip_details "," service "]}," Fog Network StormOnDemand NetworkIPs add":{"type":"method","name":"add","children":[],"call":[" service add_ip_to_server "," service "]}," Fog Network StormOnDemand Firewalls update":{"type":"method","name":"update","children":[],"call":[" service update_firewall "," service "]}," Fog Network StormOnDemand Firewalls rules":{"type":"method","name":"rules","children":[],"call":[" service get_firewall_rules body [] "," service get_firewall_rules body "," service get_firewall_rules "," service "]}," Fog Network StormOnDemand Firewalls basic_options":{"type":"method","name":"basic_options","children":[],"call":["res [] "," service get_firewall_basic_options body "," service get_firewall_basic_options "," service "," service get_firewall_basic_options body  [] "]}," Fog Network StormOnDemand Firewalls get":{"type":"method","name":"get","children":[],"call":[" new "," service get_firewall body "," service get_firewall "," service "]}," Fog Network StormOnDemand Balancers strategies":{"type":"method","name":"strategies","children":[],"call":[" service get_balancer_strategies body [] "," service get_balancer_strategies body "," service get_balancer_strategies "," service "]}," Fog Network StormOnDemand Balancers possible_nodes":{"type":"method","name":"possible_nodes","children":[],"call":[" service get_balancer_possible_nodes body [] "," service get_balancer_possible_nodes body "," service get_balancer_possible_nodes "," service "]}," Fog Network StormOnDemand Balancers get":{"type":"method","name":"get","children":[],"call":[" new "," service get_balancer_details body "," service get_balancer_details "," service "," service get_ service get_balancer_details body _details body "," service get_ service get_balancer_details body _details "]}," Fog Network StormOnDemand Balancers create":{"type":"method","name":"create","children":[],"call":[" new "," service create_balancer body "," service create_balancer "," service "," service create_ service create_balancer body  body "," service create_ service create_balancer body  "]}," Fog Network StormOnDemand Balancers available":{"type":"method","name":"available","children":[],"call":["avail [] to_i == ","avail [] to_i ","avail [] "," service check_balancer_available body "," service check_balancer_available "," service "," service check_balancer_available body  [] to_i == "," service check_balancer_available body  [] to_i "," service check_balancer_available body  [] "," service check_balancer_ service check_balancer_available body able body "," service check_balancer_ service check_balancer_available body able "]}," Fog Network StormOnDemand Balancers all":{"type":"method","name":"all","children":[],"call":[" load "," service list_balancers body [] "," service list_balancers body "," service list_balancers "," service "]}," Fog Network StormOnDemand Balancer update":{"type":"method","name":"update","children":[],"call":[" service update_balancer ","(pair\n  (sym :uniq_id)\n  (send nil :identity)) merge! "," identity "," service "," requires "]}," Fog Network StormOnDemand Balancer destroy":{"type":"method","name":"destroy","children":[],"call":[" service delete_balancer "," identity "," service "," requires "]}," Fog Network StormOnDemand Balancer remove_service":{"type":"method","name":"remove_service","children":[],"call":[" service remove_balancer_service ","(pair\n  (sym :uniq_id)\n  (send nil :identity)) merge! "," identity "," service "," requires "]}," Fog Network StormOnDemand Balancer add_service":{"type":"method","name":"add_service","children":[],"call":[" service add_balancer_service ","(pair\n  (sym :uniq_id)\n  (send nil :identity)) merge! "," identity "," service "," requires "]}," Fog Network StormOnDemand Balancer remove_node":{"type":"method","name":"remove_node","children":[],"call":[" service remove_balancer_node ","(pair\n  (sym :uniq_id)\n  (send nil :identity)) merge! "," identity "," service "," requires "]}," Fog Network StormOnDemand Balancer add_node":{"type":"method","name":"add_node","children":[],"call":[" service add_balancer_node ","(pair\n  (sym :uniq_id)\n  (send nil :identity)) merge! "," identity "," service "," requires "]}," Fog Monitoring StormOnDemand Mock reset_data":{"type":"method","name":"reset_data","children":[],"call":[" class data delete "," class data "," class "," data keys "," data "]}," Fog Monitoring StormOnDemand Mock data":{"type":"method","name":"data","children":[],"call":[" class data [] "," class data "," class "]}," Fog Monitoring StormOnDemand Mock initialize":{"type":"method","name":"initialize","children":[],"call":["options [] "]}," Fog Monitoring StormOnDemand Mock reset":{"type":"method","name":"reset","children":[],"call":[]}," Fog Monitoring StormOnDemand Real update_service":{"type":"method","name":"update_service","children":[],"call":[" request ","Fog JSON  encode "]}," Fog Monitoring StormOnDemand Real monitoring_ips":{"type":"method","name":"monitoring_ips","children":[],"call":[" request ","Fog JSON  encode "]}," Fog Monitoring StormOnDemand Real get_service_status":{"type":"method","name":"get_service_status","children":[],"call":[" request ","Fog JSON  encode "]}," Fog Monitoring StormOnDemand Real get_service":{"type":"method","name":"get_service","children":[],"call":[" request ","Fog JSON  encode "]}," Fog Monitoring StormOnDemand Real get_load_stats":{"type":"method","name":"get_load_stats","children":[],"call":[" request ","Fog JSON  encode "]}," Fog Monitoring StormOnDemand Real get_load_graph":{"type":"method","name":"get_load_graph","children":[],"call":[" request ","Fog JSON  encode "]}," Fog Monitoring StormOnDemand Real get_bandwidth_stats":{"type":"method","name":"get_bandwidth_stats","children":[],"call":[" request ","Fog JSON  encode "]}," Fog Monitoring StormOnDemand Real get_bandwidth_graph":{"type":"method","name":"get_bandwidth_graph","children":[],"call":[" request ","Fog JSON  encode "]}," Fog Monitoring StormOnDemand MonitorServices update":{"type":"method","name":"update","children":[],"call":[" new "," service update_service body "," service update_service "," service "]}," Fog Monitoring StormOnDemand MonitorServices status":{"type":"method","name":"status","children":[],"call":[" service get_service_status body "," service get_service_status "," service "]}," Fog Monitoring StormOnDemand MonitorServices monitoring_ips":{"type":"method","name":"monitoring_ips","children":[],"call":[" service monitoring_ips body [] "," service monitoring_ips body "," service monitoring_ips "," service "]}," Fog Monitoring StormOnDemand MonitorServices get":{"type":"method","name":"get","children":[],"call":[" new "," service get_service body "," service get_service "," service "]}," Fog Monitoring StormOnDemand Loads stats":{"type":"method","name":"stats","children":[],"call":[" new "," service get_load_stats body "," service get_load_stats "," service "," service get_ service get_load_stats body _stats body "," service get_ service get_load_stats body _stats "]}," Fog Monitoring StormOnDemand Loads graph":{"type":"method","name":"graph","children":[],"call":[" service get_load_graph body "," service get_load_graph "," service "]}," Fog Monitoring StormOnDemand Bandwidths stats":{"type":"method","name":"stats","children":[],"call":[" new "," service get_bandwidth_stats body "," service get_bandwidth_stats "," service "]}," Fog Monitoring StormOnDemand Bandwidths graph":{"type":"method","name":"graph","children":[],"call":[" service get_bandwidth_graph body "," service get_bandwidth_graph "," service "]}," Fog DNS StormOnDemand Mock reset_data":{"type":"method","name":"reset_data","children":[],"call":[" class data delete "," class data "," class "," data keys "," data "]}," Fog DNS StormOnDemand Mock data":{"type":"method","name":"data","children":[],"call":[" class data [] "," class data "," class "]}," Fog DNS StormOnDemand Mock initialize":{"type":"method","name":"initialize","children":[],"call":["options [] "]}," Fog DNS StormOnDemand Mock reset":{"type":"method","name":"reset","children":[],"call":[]}," Fog DNS StormOnDemand Real update_zone":{"type":"method","name":"update_zone","children":[],"call":[" request ","Fog JSON  encode "]}," Fog DNS StormOnDemand Real update_reverse":{"type":"method","name":"update_reverse","children":[],"call":[" request ","Fog JSON  encode "]}," Fog DNS StormOnDemand Real update_record_region":{"type":"method","name":"update_record_region","children":[],"call":[" request ","Fog JSON  encode "]}," Fog DNS StormOnDemand Real update_record":{"type":"method","name":"update_record","children":[],"call":[" request ","Fog JSON  encode "]}," Fog DNS StormOnDemand Real renew_domain":{"type":"method","name":"renew_domain","children":[],"call":[" request ","Fog JSON  encode "]}," Fog DNS StormOnDemand Real list_zones":{"type":"method","name":"list_zones","children":[],"call":[" request ","Fog JSON  encode "]}," Fog DNS StormOnDemand Real list_records":{"type":"method","name":"list_records","children":[],"call":[" request ","Fog JSON  encode "]}," Fog DNS StormOnDemand Real list_domains":{"type":"method","name":"list_domains","children":[],"call":[" request ","Fog JSON  encode "]}," Fog DNS StormOnDemand Real get_zone":{"type":"method","name":"get_zone","children":[],"call":[" request ","Fog JSON  encode "]}," Fog DNS StormOnDemand Real get_record":{"type":"method","name":"get_record","children":[],"call":[" request ","Fog JSON  encode "]}," Fog DNS StormOnDemand Real delete_zone":{"type":"method","name":"delete_zone","children":[],"call":[" request ","Fog JSON  encode "]}," Fog DNS StormOnDemand Real delete_reverse":{"type":"method","name":"delete_reverse","children":[],"call":[" request ","Fog JSON  encode "]}," Fog DNS StormOnDemand Real delete_record_region":{"type":"method","name":"delete_record_region","children":[],"call":[" request ","Fog JSON  encode "]}," Fog DNS StormOnDemand Real delete_record":{"type":"method","name":"delete_record","children":[],"call":[" request ","Fog JSON  encode "]}," Fog DNS StormOnDemand Real create_zone":{"type":"method","name":"create_zone","children":[],"call":[" request ","Fog JSON  encode "]}," Fog DNS StormOnDemand Real create_record_region":{"type":"method","name":"create_record_region","children":[],"call":[" request ","Fog JSON  encode "]}," Fog DNS StormOnDemand Real create_record":{"type":"method","name":"create_record","children":[],"call":[" request ","Fog JSON  encode "]}," Fog DNS StormOnDemand Real check_zone_delegation":{"type":"method","name":"check_zone_delegation","children":[],"call":[" request ","Fog JSON  encode "]}," Fog DNS StormOnDemand Zones all":{"type":"method","name":"all","children":[],"call":[" load "," service list_zones body [] "," service list_zones body "," service list_zones "," service "," service list_ service list_zones body []  body [] "," service list_ service list_zones body []  body "," service list_ service list_zones body []  "]}," Fog DNS StormOnDemand Zones get":{"type":"method","name":"get","children":[],"call":[" new "," service get_zone body "," service get_zone "," service "," service get_ service get_zone body  body "," service get_ service get_zone body  "]}," Fog DNS StormOnDemand Zones create":{"type":"method","name":"create","children":[],"call":[" new "," service create_zone body "," service create_zone "," service "," service create_ service create_zone body  body "," service create_ service create_zone body  "]}," Fog DNS StormOnDemand Zone update":{"type":"method","name":"update","children":[],"call":[" service update_zone ","(pair\n  (sym :id)\n  (send nil :identity)) merge! "," identity "," service "," requires "]}," Fog DNS StormOnDemand Zone destroy":{"type":"method","name":"destroy","children":[],"call":[" service delete_zone body [] "," service delete_zone body "," service delete_zone "," identity "," service "," requires "]}," Fog DNS StormOnDemand Zone delegation":{"type":"method","name":"delegation","children":[],"call":[" service check_zone_delegation body [] "," service check_zone_delegation body "," service check_zone_delegation "," identity "," service "," requires "]}," Fog DNS StormOnDemand Reverses update":{"type":"method","name":"update","children":[],"call":[" service update_reverse body "," service update_reverse "," service "]}," Fog DNS StormOnDemand Reverses destroy":{"type":"method","name":"destroy","children":[],"call":[" service delete_reverse body "," service delete_reverse "," service "]}," Fog DNS StormOnDemand Records all":{"type":"method","name":"all","children":[],"call":[" load "," service list_records body [] "," service list_records body "," service list_records "," service "]}," Fog DNS StormOnDemand Records get":{"type":"method","name":"get","children":[],"call":[" new "," service get_record body "," service get_record "," service "," service get_ service get_record body ord body "," service get_ service get_record body ord "]}," Fog DNS StormOnDemand Records create":{"type":"method","name":"create","children":[],"call":[" new "," service create_record body "," service create_record "," service "," service create_ service create_record body ord body "," service create_ service create_record body ord "]}," Fog DNS StormOnDemand Record update_region":{"type":"method","name":"update_region","children":[],"call":[" service update_record_region ","(pair\n  (sym :record_id)\n  (send nil :identity)) merge! "," identity "," service "," requires "]}," Fog DNS StormOnDemand Record delete_region":{"type":"method","name":"delete_region","children":[],"call":[" service delete_record_region ","(pair\n  (sym :record_id)\n  (send nil :identity)) merge! "," identity "," service "," requires "]}," Fog DNS StormOnDemand Record create_region":{"type":"method","name":"create_region","children":[],"call":[" service create_record_region ","(pair\n  (sym :record_id)\n  (send nil :identity)) merge! "," identity "," service "," requires "]}," Fog DNS StormOnDemand Record update":{"type":"method","name":"update","children":[],"call":[" service update_record ","(pair\n  (sym :id)\n  (send nil :identity)) merge! "," identity "," service "," requires "]}," Fog DNS StormOnDemand Record destroy":{"type":"method","name":"destroy","children":[],"call":[" service delete_record "," identity "," service "," requires "]}," Fog DNS StormOnDemand Domains all":{"type":"method","name":"all","children":[],"call":[" load "," service list_domains body [] "," service list_domains body "," service list_domains "," service "," service list_ service list_domains body []  body [] "," service list_ service list_domains body []  body "," service list_ service list_domains body []  "]}," Fog DNS StormOnDemand Domain renew":{"type":"method","name":"renew","children":[],"call":[" service renew_domain "," identity "," service "," requires "]}," Fog Compute StormOnDemand Mock reset_data":{"type":"method","name":"reset_data","children":[],"call":[" class data delete "," class data "," class "," data keys "," data "]}," Fog Compute StormOnDemand Mock data":{"type":"method","name":"data","children":[],"call":[" class data [] "," class data "," class "]}," Fog Compute StormOnDemand Mock initialize":{"type":"method","name":"initialize","children":[],"call":["options [] "]}," Fog Compute StormOnDemand Mock reset":{"type":"method","name":"reset","children":[],"call":[]}," Fog Compute StormOnDemand Real update_server":{"type":"method","name":"update_server","children":[],"call":[" request ","Fog JSON  encode "]}," Fog Compute StormOnDemand Real update_image":{"type":"method","name":"update_image","children":[],"call":[" request ","Fog JSON  encode "]}," Fog Compute StormOnDemand Real start_server":{"type":"method","name":"start_server","children":[],"call":[" request ","Fog JSON  encode "]}," Fog Compute StormOnDemand Real shutdown_server":{"type":"method","name":"shutdown_server","children":[],"call":[" request ","Fog JSON  encode "]}," Fog Compute StormOnDemand Real server_status":{"type":"method","name":"server_status","children":[],"call":[" request ","Fog JSON  encode "]}," Fog Compute StormOnDemand Real server_history":{"type":"method","name":"server_history","children":[],"call":[" request ","Fog JSON  encode "]}," Fog Compute StormOnDemand Real restore_template":{"type":"method","name":"restore_template","children":[],"call":[" request ","Fog JSON  encode "]}," Fog Compute StormOnDemand Real restore_image":{"type":"method","name":"restore_image","children":[],"call":[" request ","Fog JSON  encode "," params "]}," Fog Compute StormOnDemand Real resolve_notification":{"type":"method","name":"resolve_notification","children":[],"call":[" request ","Fog JSON  encode "]}," Fog Compute StormOnDemand Real resize_server":{"type":"method","name":"resize_server","children":[],"call":[" request ","Fog JSON  encode "]}," Fog Compute StormOnDemand Real reboot_server":{"type":"method","name":"reboot_server","children":[],"call":[" request ","Fog JSON  encode "]}," Fog Compute StormOnDemand Real list_templates":{"type":"method","name":"list_templates","children":[],"call":[" request ","Fog JSON  encode "]}," Fog Compute StormOnDemand Real list_servers":{"type":"method","name":"list_servers","children":[],"call":[" request ","Fog JSON  encode "]}," Fog Compute StormOnDemand Real list_products":{"type":"method","name":"list_products","children":[],"call":[" request ","Fog JSON  encode "]}," Fog Compute StormOnDemand Real list_notifications":{"type":"method","name":"list_notifications","children":[],"call":[" request ","Fog JSON  encode "]}," Fog Compute StormOnDemand Real list_images":{"type":"method","name":"list_images","children":[],"call":[" request ","Fog JSON  encode "]}," Fog Compute StormOnDemand Real list_configs":{"type":"method","name":"list_configs","children":[],"call":[" request ","Fog JSON  encode "]}," Fog Compute StormOnDemand Real get_template_details":{"type":"method","name":"get_template_details","children":[],"call":[" request ","Fog JSON  encode "]}," Fog Compute StormOnDemand Real get_server":{"type":"method","name":"get_server","children":[],"call":[" request ","Fog JSON  encode "]}," Fog Compute StormOnDemand Real get_product_starting_price":{"type":"method","name":"get_product_starting_price","children":[],"call":[" request ","Fog JSON  encode "]}," Fog Compute StormOnDemand Real get_product_price":{"type":"method","name":"get_product_price","children":[],"call":[" request ","Fog JSON  encode "]}," Fog Compute StormOnDemand Real get_product_code":{"type":"method","name":"get_product_code","children":[],"call":[" request ","Fog JSON  encode "]}," Fog Compute StormOnDemand Real get_product":{"type":"method","name":"get_product","children":[],"call":[" request ","Fog JSON  encode "]}," Fog Compute StormOnDemand Real get_notification":{"type":"method","name":"get_notification","children":[],"call":[" request ","Fog JSON  encode "]}," Fog Compute StormOnDemand Real get_image_details":{"type":"method","name":"get_image_details","children":[],"call":[" request ","Fog JSON  encode "]}," Fog Compute StormOnDemand Real get_config_details":{"type":"method","name":"get_config_details","children":[],"call":[" request ","Fog JSON  encode "]}," Fog Compute StormOnDemand Real delete_server":{"type":"method","name":"delete_server","children":[],"call":[" request ","Fog JSON  encode "]}," Fog Compute StormOnDemand Real delete_image":{"type":"method","name":"delete_image","children":[],"call":[" request ","Fog JSON  encode "]}," Fog Compute StormOnDemand Real current_notifications":{"type":"method","name":"current_notifications","children":[],"call":[" request ","Fog JSON  encode "]}," Fog Compute StormOnDemand Real create_server":{"type":"method","name":"create_server","children":[],"call":[" request ","Fog JSON  encode "]}," Fog Compute StormOnDemand Real create_image":{"type":"method","name":"create_image","children":[],"call":[" request ","Fog JSON  encode "]}," Fog Compute StormOnDemand Real clone_server":{"type":"method","name":"clone_server","children":[],"call":[" request ","Fog JSON  encode "]}," Fog Compute StormOnDemand Templates get":{"type":"method","name":"get","children":[],"call":[" new "," service get_template_details body "," service get_template_details "," service "]}," Fog Compute StormOnDemand Templates all":{"type":"method","name":"all","children":[],"call":[" load "," service list_templates body [] "," service list_templates body "," service list_templates "," service "]}," Fog Compute StormOnDemand restore":{"type":"method","name":"restore","children":[],"call":[" service restore_template ","(pair\n  (sym :id)\n  (send nil :identity)) merge! "," identity "," service "," requires "]}," Fog Compute StormOnDemand Servers create":{"type":"method","name":"create","children":[],"call":[" new "," service create_server body "," service create_server "," service "," service create_ service create_server body  body "," service create_ service create_server body  "]}," Fog Compute StormOnDemand Servers get":{"type":"method","name":"get","children":[],"call":[" new "," service get_server body "," service get_server "," service "," service get_ service get_server body  body "," service get_ service get_server body  "]}," Fog Compute StormOnDemand Servers all":{"type":"method","name":"all","children":[],"call":[" load "," service list_servers body [] "," service list_servers body "," service list_servers "," service "]}," Fog Compute StormOnDemand Server update":{"type":"method","name":"update","children":[],"call":[" service update_server body "," service update_server ","(pair\n  (sym :uniq_id)\n  (send nil :identity)) merge! "," identity "," service "," requires "]}," Fog Compute StormOnDemand Server status":{"type":"method","name":"status","children":[],"call":[" service server_status body "," service server_status "," identity "," service "," requires "]}," Fog Compute StormOnDemand Server start":{"type":"method","name":"start","children":[],"call":[" service start_server body "," service start_server "," identity "," service "," reqwuires "]}," Fog Compute StormOnDemand Server shutdown":{"type":"method","name":"shutdown","children":[],"call":[" service shutdown_server body "," service shutdown_server ","(pair\n  (sym :uniq_id)\n  (send nil :identity)) merge! "," identity "," service "," requires "]}," Fog Compute StormOnDemand Server history":{"type":"method","name":"history","children":[],"call":["res [] "," service server_history body "," service server_history "," service ","(pair\n  (sym :uniq_id)\n  (send nil :identity)) merge! "," identity "," requires "," service server_history body  [] "," requi service server_history body  "]}," Fog Compute StormOnDemand Server resize":{"type":"method","name":"resize","children":[],"call":[" service resize_server ","(pair\n  (sym :uniq_id)\n  (send nil :identity)) merge! "," identity "," service "," requires "]}," Fog Compute StormOnDemand Server clone":{"type":"method","name":"clone","children":[],"call":[" service clone_server ","(pair\n  (sym :uniq_id)\n  (send nil :identity)) merge! "," identity "," service "," requires "]}," Fog Compute StormOnDemand Server reboot":{"type":"method","name":"reboot","children":[],"call":[" service reboot_server ","(pair\n  (sym :uniq_id)\n  (send nil :identity)) merge! "," identity "," service "," requires "]}," Fog Compute StormOnDemand Server ready?":{"type":"method","name":"ready?","children":[],"call":[" active == "," active "]}," Fog Compute StormOnDemand Server destroy":{"type":"method","name":"destroy","children":[],"call":[" service delete_server "," identity "," service "," requires "]}," Fog Compute StormOnDemand Products all":{"type":"method","name":"all","children":[],"call":[" service list_products body [] "," service list_products body "," service list_products "," service "]}," Fog Compute StormOnDemand Products get_product_code":{"type":"method","name":"get_product_code","children":[],"call":[" service get_product_code body "," service get_product_code "," service "]}," Fog Compute StormOnDemand Products get":{"type":"method","name":"get","children":[],"call":[" new "," service get_product body "," service get_product "," service "," service get_ service get_product body uct body "," service get_ service get_product body uct "]}," Fog Compute StormOnDemand Product starting_price":{"type":"method","name":"starting_price","children":[],"call":[" service get_product_starting_price body [] "," service get_product_starting_price body "," service get_product_starting_price "," identity "," service "," requires "]}," Fog Compute StormOnDemand Product price":{"type":"method","name":"price","children":[],"call":[" service get_product_price body "," service get_product_price ","(pair\n  (sym :code)\n  (send nil :identity)) merge! "," identity "," service "," requires "]}," Fog Compute StormOnDemand Notifications get":{"type":"method","name":"get","children":[],"call":[" new "," service get_notification body "," service get_notification "," service "]}," Fog Compute StormOnDemand Notifications current":{"type":"method","name":"current","children":[],"call":[" load "," service current_notifications body [] "," service current_notifications body "," service current_notifications "," service "]}," Fog Compute StormOnDemand Notifications all":{"type":"method","name":"all","children":[],"call":[" load "," service list_notifications body [] "," service list_notifications body "," service list_notifications "," service "]}," Fog Compute StormOnDemand Notification resolve":{"type":"method","name":"resolve","children":[],"call":[" service resolve_notification body "," service resolve_notification "," identity "," service "," requires "]}," Fog Compute StormOnDemand Images all":{"type":"method","name":"all","children":[],"call":[" load "," service list_images body [] "," service list_images body "," service list_images "," service "]}," Fog Compute StormOnDemand Images get":{"type":"method","name":"get","children":[],"call":[" new "," service get_image_details body "," service get_image_details "," service "]}," Fog Compute StormOnDemand Images create":{"type":"method","name":"create","children":[],"call":[" service create_image "," service "]}," Fog Compute StormOnDemand Image restore":{"type":"method","name":"restore","children":[],"call":[" service restore_image ","(pair\n  (sym :id)\n  (send nil :identity)) merge! "," identity "," service "," requires "]}," Fog Compute StormOnDemand Image update":{"type":"method","name":"update","children":[],"call":[" service update_image body "," service update_image ","(pair\n  (sym :id)\n  (send nil :identity)) merge! "," identity "," service "," requires "]}," Fog Compute StormOnDemand Image destroy":{"type":"method","name":"destroy","children":[],"call":[" service delete_image "," identity "," service "," requires "]}," Fog Compute StormOnDemand Configs get":{"type":"method","name":"get","children":[],"call":[" new "," service get_config_details body "," service get_config_details "," service "]}," Fog Compute StormOnDemand Configs all":{"type":"method","name":"all","children":[],"call":[" load "," service list_configs body [] "," service list_configs body "," service list_configs "," service "]}," StormOnDemand services":{"type":"method","name":"services","children":[],"call":["Fog StormOnDemand  services "]}," StormOnDemand []":{"type":"method","name":"[]","children":[],"call":["@@connections [] ","hash []= "," raise ","key inspect ","Fog Compute  new ","Fog Logger  warning ","Hash  new "]}," StormOnDemand class_for":{"type":"method","name":"class_for","children":[],"call":[" raise "]}," Fog Billing StormOnDemand Mock reset_data":{"type":"method","name":"reset_data","children":[],"call":[" class data delete "," class data "," class "," data keys "," data "]}," Fog Billing StormOnDemand Mock data":{"type":"method","name":"data","children":[],"call":[" class data [] "," class data "," class "]}," Fog Billing StormOnDemand Mock initialize":{"type":"method","name":"initialize","children":[],"call":["options [] "]}," Fog Billing StormOnDemand Mock reset":{"type":"method","name":"reset","children":[],"call":[]}," Fog Billing StormOnDemand Real next_invoice":{"type":"method","name":"next_invoice","children":[],"call":[" request ","Fog JSON  encode "]}," Fog Billing StormOnDemand Real make_payment":{"type":"method","name":"make_payment","children":[],"call":[" request ","Fog JSON  encode "]}," Fog Billing StormOnDemand Real list_invoices":{"type":"method","name":"list_invoices","children":[],"call":[" request ","Fog JSON  encode "]}," Fog Billing StormOnDemand Real get_invoice":{"type":"method","name":"get_invoice","children":[],"call":[" request ","Fog JSON  encode "]}," Fog Billing StormOnDemand Payments make":{"type":"method","name":"make","children":[],"call":[" service make_payment body [] "," service make_payment body "," service make_payment "," service "]}," Fog Billing StormOnDemand Invoices next":{"type":"method","name":"next","children":[],"call":[" new "," service next_invoice body "," service next_invoice "," service "," service next_ service next_invoice body  body "," service next_ service next_invoice body  "]}," Fog Billing StormOnDemand Invoices get":{"type":"method","name":"get","children":[],"call":[" new "," service get_invoice body "," service get_invoice "," service "," service get_ service get_invoice body  body "," service get_ service get_invoice body  "]}," Fog Billing StormOnDemand Invoices all":{"type":"method","name":"all","children":[],"call":[" load "," service list_invoices body [] "," service list_invoices body "," service list_invoices "," service "," service list_ service list_invoices body []  body [] "," service list_ service list_invoices body []  body "," service list_ service list_invoices body []  "]}," Fog Account StormOnDemand Mock reset_data":{"type":"method","name":"reset_data","children":[],"call":[" class data delete "," class data "," class "," data keys "," data "]}," Fog Account StormOnDemand Mock data":{"type":"method","name":"data","children":[],"call":[" class data [] "," class data "," class "]}," Fog Account StormOnDemand Mock initialize":{"type":"method","name":"initialize","children":[],"call":["options [] "]}," Fog Account StormOnDemand Mock reset":{"type":"method","name":"reset","children":[],"call":[]}," Fog Account StormOnDemand Real expire_token":{"type":"method","name":"expire_token","children":[],"call":[" request ","Fog JSON  encode "]}," Fog Account StormOnDemand Real create_token":{"type":"method","name":"create_token","children":[],"call":[" request ","Fog JSON  encode "]}," Fog Account StormOnDemand Tokens create":{"type":"method","name":"create","children":[],"call":[" new "," service create_token body "," service create_token "," service "," service crea service create_token body e_ service create_token body oken body "," service crea service create_token body e_ service create_token body oken "]}," Fog Account StormOnDemand Token expire":{"type":"method","name":"expire","children":[],"call":[" service expire_token body [] to_i == "," service expire_token body [] to_i "," service expire_token body [] "," service expire_token body "," service expire_token "," service "]}}