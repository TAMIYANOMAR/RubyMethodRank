{" RedisClient raw_connection":{"type":"method","name":"raw_connection","children":[],"call":[" call_pipelined "," config check_role! "," config "," call_pipelined last ","prelude << "," config sentinel? "," id to_s "," id "," config connection_prelude dup "," config connection_prelude "," config driver new "," write_timeout "," read_timeout "," connect_timeout "," config driver "," connect ","@raw_connection revalidate ! ","@raw_connection revalidate ","@raw_connection nil? "," config connection_prelude dup  << "," config connection_ config connection_prelude dup  dup "," config  config driver new _prelude dup "," config connection_ config connection_prelude dup  "," config  config driver new _prelude ","@raw_ config driver new  revalidate ! ","@raw_ config driver new  revalidate ","@raw_ config driver new  nil? "]}," RedisClient ensure_connected":{"type":"method","name":"ensure_connected","children":[],"call":[" ensure_connected "," raise "," config retry_connecting? "," config ","@disable_reconnection ! "," close "," block_given? "," raw_connection ","@pid != ","Process  pid "," config inherit_socket ! "," config inherit_socket ","PIDCache  pid "," discard ","@disable_re ensure_connected  ! ","@disable_re raw_connection  ! "," raw_ ensure_connected  "," raw_ raw_connection  "]}," RedisClient call_pipelined":{"type":"method","name":"call_pipelined","children":[],"call":[" raise ","results []= ","result is_a? ","connection read ","timeouts [] ","size times ","connection write_multi ","Array  new ","commands size ","connection read s []= ","Array  new  []= ","connection read  is_a? ","commands size  times ","commands commands size  "]}," RedisClient scan_pairs":{"type":"method","name":"scan_pairs","children":[],"call":["elements [] ","index + ","index < ","elements size "," call ","command []= ","cursor != ","elements elements size  "]}," RedisClient scan_list":{"type":"method","name":"scan_list","children":[],"call":["elements each "," call ","command []= ","cursor != "]}," RedisClient build_transaction":{"type":"method","name":"build_transaction","children":[],"call":["transaction call ","Multi  new ","Multi  new  call "]}," RedisClient Pipeline _empty?":{"type":"method","name":"_empty?","children":[],"call":["@commands empty? "]}," RedisClient Pipeline _timeouts":{"type":"method","name":"_timeouts","children":[],"call":[]}," RedisClient Pipeline blocking_call":{"type":"method","name":"blocking_call","children":[],"call":["@commands << ","RESP3  coerce_command! ","@timeouts []= ","@commands size ","(or-asgn\n  (ivasgn :@blocks)\n  (array)) []= "," block_given? ","@command_builder generate "," block ","@command_builder generate! ","@@command_builder generate s << ","@@command_builder generate! s << ","RESP3  coerce_@command_builder generate ! ","RESP3  coerce_@command_builder generate! ! ","@@command_builder generate s size ","@@command_builder generate! s size ","@@command_builder generate _builder generate ","@@command_builder generate! _builder generate ","@@command_builder generate _builder generate! ","@@command_builder generate! _builder generate! "]}," RedisClient Pipeline initialize":{"type":"method","name":"initialize","children":[],"call":[]}," RedisClient Multi _retryable?":{"type":"method","name":"_retryable?","children":[],"call":[]}," RedisClient Multi _timeouts":{"type":"method","name":"_timeouts","children":[],"call":[]}," RedisClient Multi _empty?":{"type":"method","name":"_empty?","children":[],"call":["@commands size <= ","@commands size "]}," RedisClient Multi _size":{"type":"method","name":"_size","children":[],"call":["@commands size "]}," RedisClient Multi _commands":{"type":"method","name":"_commands","children":[],"call":[]}," RedisClient Multi call_once":{"type":"method","name":"call_once","children":[],"call":["@commands << ","RESP3  coerce_command! ","(or-asgn\n  (ivasgn :@blocks)\n  (array)) []= ","@commands size "," block_given? ","@command_builder generate "," block ","@command_builder generate! ","@@command_builder generate s << ","@@command_builder generate! s << ","RESP3  coerce_@command_builder generate ! ","RESP3  coerce_@command_builder generate! ! ","@@command_builder generate s size ","@@command_builder generate! s size ","@@command_builder generate _builder generate ","@@command_builder generate! _builder generate ","@@command_builder generate _builder generate! ","@@command_builder generate! _builder generate! "]}," RedisClient Multi call":{"type":"method","name":"call","children":[],"call":["@commands << ","RESP3  coerce_command! ","(or-asgn\n  (ivasgn :@blocks)\n  (array)) []= ","@commands size "," block_given? ","@command_builder generate ","@command_builder generate! ","@@command_builder generate s << ","@@command_builder generate! s << ","RESP3  coerce_@command_builder generate ! ","RESP3  coerce_@command_builder generate! ! ","@@command_builder generate s size ","@@command_builder generate! s size ","@@command_builder generate _builder generate ","@@command_builder generate! _builder generate ","@@command_builder generate _builder generate! ","@@command_builder generate! _builder generate! "]}," RedisClient Multi initialize":{"type":"method","name":"initialize","children":[],"call":[]}," RedisClient PubSub next_event":{"type":"method","name":"next_event","children":[],"call":[" raw_connection read "," raw_connection "," raise "]}," RedisClient PubSub close":{"type":"method","name":"close","children":[],"call":[" raw_connection "]}," RedisClient PubSub call":{"type":"method","name":"call","children":[],"call":[" raw_connection write ","RESP3  coerce_command! "," raw_connection ","@command_builder generate ","@command_builder generate! "]}," RedisClient PubSub initialize":{"type":"method","name":"initialize","children":[],"call":[]}," RedisClient multi":{"type":"method","name":"multi","children":[],"call":[" call_pipelined last "," call_pipelined ","transaction _commands "," ensure_connected ","transaction _retryable? ","transaction _empty? "," build_transaction "," raise "," call "," connected? ","transaction _coerce! ","(send\n  (ivar :@middlewares) :call_pipelined\n  (lvar :commands)\n  (send nil :config)) last ","connection call_pipelined ","@middlewares call_pipelined "," config ","(send\n  (const nil :Middlewares) :call_pipelined\n  (lvar :commands)\n  (send nil :config)) last ","Middlewares  call_pipelined "," build_transaction  _commands ","transaction _transaction _commands  "," build_transaction  _retryable? "," build_transaction  _empty? "," build_ build_transaction  "," build_transaction  _coerce! ","(send\n  (ivar :@middlewares) :call_pipelined\n  (lvar :transaction _commands )\n  (send nil :config)) last ","(send\n  (const nil :Middlewares) :call_pipelined\n  (lvar :transaction _commands )\n  (send nil :config)) last "]}," RedisClient pipelined":{"type":"method","name":"pipelined","children":[],"call":[" call_pipelined ","pipeline _timeouts ","pipeline _commands "," ensure_connected ","pipeline _retryable? ","pipeline _size == ","pipeline _size ","Pipeline  new ","pipeline _coerce! ","connection call_pipelined ","@middlewares call_pipelined "," config ","Middlewares  call_pipelined "," call_Pipeline  new d ","Pipeline  new  _timeouts ","Pipeline  new  _commands ","pipeline _pipeline _commands  ","Pipeline  new  _retryable? ","Pipeline  new  _size == ","Pipeline  new  _size ","Pipeline  new  _coerce! ","connection call_Pipeline  new d ","@middlewares call_Pipeline  new d ","Middlewares  call_Pipeline  new d "]}," RedisClient close":{"type":"method","name":"close","children":[],"call":[]}," RedisClient connected?":{"type":"method","name":"connected?","children":[],"call":[]}," RedisClient zscan":{"type":"method","name":"zscan","children":[],"call":[" scan_pairs "," to_enum "," __callee__ "," block_given? ","@command_builder generate ","(str \"ZSCAN\") + ","@command_builder generate! "]}," RedisClient hscan":{"type":"method","name":"hscan","children":[],"call":[" scan_pairs "," to_enum "," __callee__ "," block_given? ","@command_builder generate ","(str \"HSCAN\") + ","@command_builder generate! "]}," RedisClient sscan":{"type":"method","name":"sscan","children":[],"call":[" scan_list "," to_enum "," __callee__ "," block_given? ","@command_builder generate ","(str \"SSCAN\") + ","@command_builder generate! "]}," RedisClient scan":{"type":"method","name":"scan","children":[],"call":[" scan_list "," to_enum "," __callee__ "," block_given? ","@command_builder generate ","(str \"SCAN\") + ","@command_builder generate! "]}," RedisClient blocking_call":{"type":"method","name":"blocking_call","children":[],"call":[" raise ","result is_a? ","connection read ","connection write "," ensure_connected ","RESP3  coerce_command! "," block_given? ","connection call ","@middlewares call "," config ","@command_builder generate ","Middlewares  call ","@command_builder generate! ","RESP3  coerce_RESP3  coerce_command! ! ","RESP3  coerce_@command_builder generate ! ","RESP3  coerce_@command_builder generate! ! ","@RESP3  coerce_command! _builder generate ","@@command_builder generate _builder generate ","@@command_builder generate! _builder generate ","@RESP3  coerce_command! _builder generate! ","@@command_builder generate _builder generate! ","@@command_builder generate! _builder generate! "]}," RedisClient call_once":{"type":"method","name":"call_once","children":[],"call":[" raise ","result is_a? ","connection read ","connection write "," ensure_connected ","RESP3  coerce_command! "," block_given? ","connection call ","@middlewares call "," config ","@command_builder generate ","Middlewares  call ","@command_builder generate! ","RESP3  coerce_RESP3  coerce_command! ! ","RESP3  coerce_@command_builder generate ! ","RESP3  coerce_@command_builder generate! ! ","@RESP3  coerce_command! _builder generate ","@@command_builder generate _builder generate ","@@command_builder generate! _builder generate ","@RESP3  coerce_command! _builder generate! ","@@command_builder generate _builder generate! ","@@command_builder generate! _builder generate! "]}," RedisClient call":{"type":"method","name":"call","children":[],"call":[" raise ","result is_a? ","connection read ","connection write "," ensure_connected ","RESP3  coerce_command! "," block_given? ","connection call ","@middlewares call "," config ","@command_builder generate ","Middlewares  call ","@command_builder generate! ","RESP3  coerce_RESP3  coerce_command! ! ","RESP3  coerce_@command_builder generate ! ","RESP3  coerce_@command_builder generate! ! ","@RESP3  coerce_command! _builder generate ","@@command_builder generate _builder generate ","@@command_builder generate! _builder generate ","@RESP3  coerce_command! _builder generate! ","@@command_builder generate _builder generate! ","@@command_builder generate! _builder generate! "]}," RedisClient pubsub":{"type":"method","name":"pubsub","children":[],"call":["PubSub  new "," ensure_connected "]}," RedisClient timeout=":{"type":"method","name":"timeout=","children":[],"call":[" raw_connection read_timeout= "," raw_connection write_timeout= "," raw_connection "," connected? "]}," RedisClient with":{"type":"method","name":"with","children":[],"call":[]}," RedisClient size":{"type":"method","name":"size","children":[],"call":[]}," RedisClient initialize":{"type":"method","name":"initialize","children":[],"call":["config middlewares_stack new ","config middlewares_stack "]}," RedisClient new":{"type":"method","name":"new","children":[],"call":[" config ","arg is_a? "]}," RedisClient sentinel":{"type":"method","name":"sentinel","children":[],"call":["SentinelConfig  new "]}," RedisClient config":{"type":"method","name":"config","children":[],"call":["Config  new "]}," RedisClient CommandError parse":{"type":"method","name":"parse","children":[],"call":["klass new ","ERRORS  fetch ","error_message split first ","error_message split ","match [] ","error_message match ","error_message start_with? ","ERRORS  fetch  new ","error_message match  [] ","error_message error_message match  "]}," RedisClient SentinelConfig each_sentinel":{"type":"method","name":"each_sentinel","children":[],"call":[" raise ","@sentinel_configs unshift ","@sentinel_configs delete "," sleep "," sentinel_client ","@sentinel_configs dup each ","@sentinel_configs dup ","  sentinel_client  "]}," RedisClient SentinelConfig resolve_replica":{"type":"method","name":"resolve_replica","children":[],"call":[" raise ","Config  new "," Integer ","replica [] ","replicas sample ","(send\n  (lvar :replicas) :reject) sample ","r [] to_s split include? ","r [] to_s split ","r [] to_s ","r [] ","replicas reject ","replicas empty? ","sentinel_client call "," each_sentinel ","flags include? ","replicas reject! ","(send\n  (lvar :replicas) :reject) sample  [] ","replicas sample  [] ","(send\n  (lvar :replicas) :reject) sample s sample ","replicas sample s sample ","sentinel_client call  sample ","(send\n  (lvar :(send\n  (lvar :replicas) :reject) sample s) :reject) sample ","(send\n  (lvar :replicas sample s) :reject) sample ","(send\n  (lvar :sentinel_client call ) :reject) sample ","(send\n  (lvar :replicas) :reject) sample s reject ","replicas sample s reject ","sentinel_client call  reject ","(send\n  (lvar :replicas) :reject) sample s empty? ","replicas sample s empty? ","sentinel_client call  empty? ","r [] to_s split  include? ","(send\n  (lvar :replicas) :reject) sample s reject! ","replicas sample s reject! ","sentinel_client call  reject! "]}," RedisClient SentinelConfig sentinel_client":{"type":"method","name":"sentinel_client","children":[],"call":["sentinel_config new_client ","@sentinels [] "]}," RedisClient SentinelConfig resolve_master":{"type":"method","name":"resolve_master","children":[],"call":[" raise ","Config  new "," Integer ","sentinel_client call "," each_sentinel "," refresh_sentinels "]}," RedisClient SentinelConfig config":{"type":"method","name":"config","children":[],"call":[" resolve_replica "," resolve_master ","@role == ","@mutex synchronize "]}," RedisClient SentinelConfig check_role!":{"type":"method","name":"check_role!","children":[],"call":[" raise "," sleep ","role == ","@role == "]}," RedisClient SentinelConfig sentinel?":{"type":"method","name":"sentinel?","children":[],"call":[]}," RedisClient SentinelConfig retry_connecting?":{"type":"method","name":"retry_connecting?","children":[],"call":[" reset ","error is_a? "]}," RedisClient SentinelConfig path":{"type":"method","name":"path","children":[],"call":[]}," RedisClient SentinelConfig port":{"type":"method","name":"port","children":[],"call":[" config port "," config "]}," RedisClient SentinelConfig host":{"type":"method","name":"host","children":[],"call":[" config host "," config "]}," RedisClient SentinelConfig reset":{"type":"method","name":"reset","children":[],"call":["@mutex synchronize "]}," RedisClient SentinelConfig sentinels":{"type":"method","name":"sentinels","children":[],"call":["@sentinel_configs dup ","@mutex synchronize "]}," RedisClient SentinelConfig initialize":{"type":"method","name":"initialize","children":[],"call":["client_config [] ","Mutex  new "," compare_by_identity ","Config  new ","sentinels map "," raise ","role inspect ","(sym :master) include? ","l each_slice to_h ","l each_slice ","may_be_a_list map ","may_be_a_list is_a? "," lambda ","extra_config []= ","client_config [] == "," sentinels_to_configs ","@extra_config []= ","url_config host ","(pair\n  (sym :username)\n  (send\n    (lvar :url_config) :username)) compact merge ","(pair\n  (sym :username)\n  (send\n    (lvar :url_config) :username)) compact ","url_config db ","url_config password ","url_config username ","URLConfig  new ","role to_sym ","(pair\n  (sym :username)\n  (send\n    (lvar :url_config) :username)) compact merge  [] ","(pair\n  (sym :username)\n  (send\n    (lvar :url_config) :username)) compact merge  [] == ","URLConfig  new  host ","(pair\n  (sym :username)\n  (send\n    (lvar :URLConfig  new ) :username)) compact merge ","(pair\n  (sym :username)\n  (send\n    (lvar :URLConfig  new ) :username)) compact ","URLConfig  new  db ","URLConfig  new  password ","URLConfig  new  username "]}," RedisClient RESP3 parse_verbatim_string":{"type":"method","name":"parse_verbatim_string","children":[],"call":["blob byteslice "," parse_blob "," parse_blob  byteslice "," parse_ parse_blob  "]}," RedisClient RESP3 parse_blob":{"type":"method","name":"parse_blob","children":[],"call":["str force_encoding ","str valid_encoding? ","Encoding  default_external ","io read_chomp "," parse_integer ","bytesize < ","io read_chomp  force_encoding ","io read_chomp  valid_encoding? "," parse_integer  < "]}," RedisClient RESP3 parse_null":{"type":"method","name":"parse_null","children":[],"call":["io skip "]}," RedisClient RESP3 parse_double":{"type":"method","name":"parse_double","children":[],"call":[" Float ","Float INFINITY  -@ ","io gets_chomp "]}," RedisClient RESP3 parse_integer":{"type":"method","name":"parse_integer","children":[],"call":[" Integer ","io gets_chomp "]}," RedisClient RESP3 parse_sequence":{"type":"method","name":"parse_sequence","children":[],"call":["array []= "," parse ","size times ","Array  new ","size < ","Array  new  []= "]}," RedisClient RESP3 parse_push":{"type":"method","name":"parse_push","children":[],"call":[" parse_array "]}," RedisClient RESP3 parse_map":{"type":"method","name":"parse_map","children":[],"call":["Hash  [] "," parse_sequence "," parse_integer * "," parse_integer ","hash []= "," parse "," parse_integer times "]}," RedisClient RESP3 parse_set":{"type":"method","name":"parse_set","children":[],"call":[" parse_sequence to_set "," parse_sequence "," parse_integer "]}," RedisClient RESP3 parse_array":{"type":"method","name":"parse_array","children":[],"call":[" parse_sequence "," parse_integer "]}," RedisClient RESP3 parse_boolean":{"type":"method","name":"parse_boolean","children":[],"call":[" raise ","io gets_chomp "]}," RedisClient RESP3 parse_error":{"type":"method","name":"parse_error","children":[],"call":["CommandError  parse "," parse_string "]}," RedisClient RESP3 parse_string":{"type":"method","name":"parse_string","children":[],"call":["str force_encoding ","str valid_encoding? ","Encoding  default_external ","io gets_chomp ","str freeze ","io gets_chomp  force_encoding ","io gets_chomp  valid_encoding? ","io gets_chomp  freeze "]}," RedisClient RESP3 parse":{"type":"method","name":"parse","children":[],"call":[" send "," raise ","type chr inspect ","type chr ","PARSER_TYPES  fetch ","io getbyte ","io getbyte  chr inspect ","io getbyte  chr "]}," RedisClient RESP3 dump_symbol":{"type":"method","name":"dump_symbol","children":[],"call":[" dump_string ","symbol to_s ","symbol name "]}," RedisClient RESP3 dump_string":{"type":"method","name":"dump_string","children":[],"call":["buffer << << << << << ","buffer << << << << ","buffer << << << ","buffer << << ","string bytesize to_s ","string bytesize ","buffer << ","string b ","string ascii_only? ","string b  bytesize to_s ","string b  bytesize ","string b  b ","string b  ascii_only? "]}," RedisClient RESP3 dump_numeric":{"type":"method","name":"dump_numeric","children":[],"call":[" dump_string ","numeric to_s "]}," RedisClient RESP3 dump_hash":{"type":"method","name":"dump_hash","children":[],"call":[" dump_any ","hash each_pair ","buffer << << << ","buffer << << ","hash size to_s ","hash size ","buffer << "]}," RedisClient RESP3 dump_set":{"type":"method","name":"dump_set","children":[],"call":[" dump_any ","set each ","buffer << << << ","buffer << << ","set size to_s ","set size ","buffer << "]}," RedisClient RESP3 dump_array":{"type":"method","name":"dump_array","children":[],"call":[" dump_any ","array each ","buffer << << << ","buffer << << ","array size to_s ","array size ","buffer << "]}," RedisClient RESP3 dump_any":{"type":"method","name":"dump_any","children":[],"call":[" send "," raise ","object class ","DUMP_TYPES  fetch ","DUMP_TYPES  []= ","DUMP_TYPES  [] ","t > ","DUMP_TYPES  keys find ","DUMP_TYPES  keys "]}," RedisClient RESP3 coerce_command!":{"type":"method","name":"coerce_command!","children":[],"call":[" raise ","element class ","element to_s ","command map! ","element to_a ","element flatten ","command flat_map "]}," RedisClient RESP3 new_buffer":{"type":"method","name":"new_buffer","children":[],"call":["String  new "]}," RedisClient RESP3 load":{"type":"method","name":"load","children":[],"call":[" parse "]}," RedisClient RESP3 dump":{"type":"method","name":"dump","children":[],"call":[" dump_array ","element to_a ","element flatten ","command flat_map "," new_buffer "]}," RedisClient Pooled new_pool":{"type":"method","name":"new_pool","children":[],"call":["@config new_client ","ConnectionPool  new "]}," RedisClient Pooled pool":{"type":"method","name":"pool","children":[],"call":[" new_pool ","@mutex synchronize "]}," RedisClient Pooled size":{"type":"method","name":"size","children":[],"call":[" pool size "," pool "]}," RedisClient Pooled close":{"type":"method","name":"close","children":[],"call":["@mutex synchronize "]}," RedisClient Pooled with":{"type":"method","name":"with","children":[],"call":[" raise ","error message "," pool with "," pool ","client write_timeout= "," write_timeout ","client read_timeout= "," read_timeout ","client connect_timeout= "," connect_timeout "]}," RedisClient Pooled initialize":{"type":"method","name":"initialize","children":[],"call":["Mutex  new "," new_pool "]}," RedisClient HiredisConnection write_multi":{"type":"method","name":"write_multi","children":[],"call":[" raise ","error message "," flush "," _write ","commands each "]}," RedisClient HiredisConnection write":{"type":"method","name":"write","children":[],"call":[" raise ","error message "," flush "," _write "]}," RedisClient HiredisConnection read":{"type":"method","name":"read","children":[],"call":[" raise ","error message "," read_timeout= "," _read ","timeout nil? "]}," RedisClient HiredisConnection write_timeout=":{"type":"method","name":"write_timeout=","children":[],"call":[" write_timeout_us= ","(send\n  (lvar :timeout) :*\n  (int 1000000)) to_i ","timeout * "]}," RedisClient HiredisConnection read_timeout=":{"type":"method","name":"read_timeout=","children":[],"call":[" read_timeout_us= ","(send\n  (lvar :timeout) :*\n  (int 1000000)) to_i ","timeout * "]}," RedisClient HiredisConnection connect_timeout=":{"type":"method","name":"connect_timeout=","children":[],"call":[" connect_timeout_us= ","(send\n  (lvar :timeout) :*\n  (int 1000000)) to_i ","timeout * "]}," RedisClient HiredisConnection initialize":{"type":"method","name":"initialize","children":[],"call":[" init_ssl ","config hiredis_ssl_context ","config ssl "," connect_tcp ","config port ","config host "," connect_unix ","config path "," write_timeout= "," read_timeout= "," connect_timeout= ","config ssl_context "]}," RedisClient HiredisConnection SSLContext initialize":{"type":"method","name":"initialize","children":[],"call":[" raise "," init "]}," RedisClient Connection read":{"type":"method","name":"read","children":[],"call":[" raise ","error message ","RESP3  load ","@io with_timeout ","timeout nil? "]}," RedisClient Connection write_multi":{"type":"method","name":"write_multi","children":[],"call":[" raise ","error message ","@io write ","RESP3  dump ","commands each "]}," RedisClient Connection write":{"type":"method","name":"write","children":[],"call":[" raise ","error message ","@io write ","RESP3  dump "]}," RedisClient Connection close":{"type":"method","name":"close","children":[],"call":["@io close "]}," RedisClient Connection connected?":{"type":"method","name":"connected?","children":[],"call":["@io closed? ! ","@io closed? "]}," RedisClient Connection initialize":{"type":"method","name":"initialize","children":[],"call":[" raise ","error message ","BufferedIO  new ","status inspect ","socket to_io wait_writable ","socket to_io ","socket to_io wait_readable ","socket connect_nonblock "," loop ","socket hostname= ","config host ","OpenSSL SSL SSLSocket  new ","config openssl_context ","config ssl ","sock setsockopt ","Socket  tcp ","config port ","UNIXSocket  new ","config path ","socket connect_nonblock  inspect ","OpenSSL SSL SSLSocket  new  to_io wait_writable ","UNIXSocket  new  to_io wait_writable ","Socket  tcp et to_io wait_writable ","OpenSSL SSL SSLSocket  new  to_io ","UNIXSocket  new  to_io ","Socket  tcp et to_io ","OpenSSL SSL SSLSocket  new  to_io wait_readable ","UNIXSocket  new  to_io wait_readable ","Socket  tcp et to_io wait_readable ","OpenSSL SSL SSLSocket  new  connect_nonblock ","UNIXSocket  new  connect_nonblock ","Socket  tcp et connect_nonblock ","OpenSSL SSL SSLSocket  new  hostname= ","UNIXSocket  new  hostname= ","Socket  tcp et hostname= ","Socket  tcp  setSocket  tcp opt "]}," RedisClient Config initialize":{"type":"method","name":"initialize","children":[],"call":[" Integer ","uri path delete_prefix ","uri path ","kwargs [] ","uri path empty? ! ","uri path empty? ","URI  decode_www_form_component ","uri password ","uri user ","uri password ! ","kwargs []= ","uri scheme == ","uri scheme ","kwargs key? ","URI  parse ","db_path empty? ! ","db_path empty? ","uri user empty? ! ","uri user empty? "," URI "," raise ","url inspect ","url_config port ","url_config host ","(pair\n  (sym :ssl)\n  (send\n    (lvar :url_config) :ssl?)) compact merge ","(pair\n  (sym :ssl)\n  (send\n    (lvar :url_config) :ssl?)) compact ","url_config db ","url_config password ","url_config username ","url_config ssl? ","URLConfig  new ","path empty? ! ","path empty? ","URI  parse  path delete_prefix "," URI  path delete_prefix ","URI  parse  path "," URI  path ","(pair\n  (sym :ssl)\n  (send\n    (lvar :url_config) :ssl?)) compact merge  [] ","URI  parse  path empty? ! "," URI  path empty? ! ","URI  parse  path empty? "," URI  path empty? ","URI  parse  password "," URI  password ","URI  parse  user "," URI  user ","URI  parse  password ! "," URI  password ! ","(pair\n  (sym :ssl)\n  (send\n    (lvar :url_config) :ssl?)) compact merge  []= ","URI  parse  scheme == "," URI  scheme == ","URI  parse  scheme "," URI  scheme ","(pair\n  (sym :ssl)\n  (send\n    (lvar :url_config) :ssl?)) compact merge  key? ","URI  parse  user empty? ! "," URI  user empty? ! ","URI  parse  user empty? "," URI  user empty? ","URLConfig  new  port ","URLConfig  new  host ","(pair\n  (sym :ssl)\n  (send\n    (lvar :URLConfig  new ) :ssl?)) compact merge ","(pair\n  (sym :ssl)\n  (send\n    (lvar :URLConfig  new ) :ssl?)) compact ","URLConfig  new  db ","URLConfig  new  password ","URLConfig  new  username ","URLConfig  new  ssl? "]}," RedisClient Config Common build_connection_prelude":{"type":"method","name":"build_connection_prelude","children":[],"call":["prelude freeze ","prelude << ","@db to_s ","@db != ","@username empty? ! ","@username empty? "," protocol == "," protocol "]}," RedisClient Config Common openssl_context":{"type":"method","name":"openssl_context","children":[],"call":["context verify_hostname ","context respond_to? ","context verify_mode != ","context verify_mode ","context set_params ","OpenSSL SSL SSLContext  new ","params []= ","OpenSSL PKey  read ","File  read ","File  exist? ","key is_a? ","params [] ","OpenSSL X509 Certificate  new ","cert is_a? ","@ssl_params dup ","OpenSSL SSL SSLContext  new  verify_hostname ","OpenSSL SSL SSLContext  new  respond_to? ","OpenSSL SSL SSLContext  new  verify_mode != ","OpenSSL SSL SSLContext  new  verify_mode ","OpenSSL SSL SSLContext  new  set_params ","File  read  is_a? ","params []  is_a? "]}," RedisClient Config Common hiredis_ssl_context":{"type":"method","name":"hiredis_ssl_context","children":[],"call":["HiredisConnection SSLContext  new ","@ssl_params [] "]}," RedisClient Config Common retry_connecting?":{"type":"method","name":"retry_connecting?","children":[],"call":[" sleep ","pause > ","@reconnect_attempts [] ","@reconnect_attempts []  > "]}," RedisClient Config Common new_client":{"type":"method","name":"new_client","children":[],"call":["RedisClient  new ","@client_implementation new "]}," RedisClient Config Common new_pool":{"type":"method","name":"new_pool","children":[],"call":["Pooled  new ","kwargs [] "]}," RedisClient Config Common sentinel?":{"type":"method","name":"sentinel?","children":[],"call":[]}," RedisClient Config Common initialize":{"type":"method","name":"initialize","children":[],"call":[" build_connection_prelude ","Array  new freeze ","Array  new ","reconnect_attempts is_a? "," raise ","driver inspect "," require ","middlewares_stack include ","middlewares each ","Class  new ","middlewares empty? ! ","middlewares empty? ","protocol inspect ","protocol == ","RedisClient  default_driver ","RedisClient  driver ","(const\n  (const nil :CircuitBreaker) :Middleware) + ","CircuitBreaker  new ","circuit_breaker is_a? ","Array  new freeze  is_a? ","Class  new  include ","(const\n  (const nil :CircuitBreaker) :Middleware) + _stack include ","(const\n  (const nil :CircuitBreaker) :Middleware) +  each ","(const\n  (const nil :CircuitBreaker) :Middleware) +  empty? ! ","(const\n  (const nil :CircuitBreaker) :Middleware) +  empty? ","CircuitBreaker  new  is_a? "]}," RedisClient BufferedIO fill_buffer":{"type":"method","name":"fill_buffer","children":[],"call":[" raise ","bytes inspect ","@io to_io wait_writable ","@io to_io ","@io to_io wait_readable ","remaining <= ","strict ! ","bytes bytesize ","@buffer << ","@io read_nonblock ","(lvar :remaining) max "," loop ","@offset >= ","@buffer bytesize ","@io read_nonblock  inspect ","@io read_nonblock  @io read_nonblock ize ","@buffer @io read_nonblock ize "]}," RedisClient BufferedIO ensure_remaining":{"type":"method","name":"ensure_remaining","children":[],"call":[" fill_buffer ","needed > ","bytes - ","@buffer bytesize - ","@buffer bytesize ","bytes -  > "]}," RedisClient BufferedIO read_chomp":{"type":"method","name":"read_chomp","children":[],"call":["bytes + ","@buffer byteslice "," ensure_remaining "]}," RedisClient BufferedIO gets_chomp":{"type":"method","name":"gets_chomp","children":[],"call":["eol_index + ","@buffer byteslice ","eol_index - "," fill_buffer ","@buffer index ","@offset >= ","@buffer bytesize ","@buffer index  + ","@buffer index  - ","eol_index +  >= "]}," RedisClient BufferedIO getbyte":{"type":"method","name":"getbyte","children":[],"call":["@buffer getbyte "," ensure_remaining ","@buffer get@buffer getbyte  "]}," RedisClient BufferedIO write":{"type":"method","name":"write","children":[],"call":[" raise "," bytes inspect "," bytes ","@io to_io wait_writable ","@io to_io ","@io to_io wait_readable ","string byteslice ","remaining > ","@io write_nonblock "," loop ","string bytesize ","string byteslice  byteslice ","string bytesize  > ","string byteslice  bytesize "]}," RedisClient BufferedIO skip":{"type":"method","name":"skip","children":[],"call":[" ensure_remaining "]}," RedisClient BufferedIO with_timeout":{"type":"method","name":"with_timeout","children":[],"call":["new_timeout == "]}," RedisClient BufferedIO eof?":{"type":"method","name":"eof?","children":[],"call":["@io eof? ","@offset >= ","@buffer bytesize "]}," RedisClient BufferedIO closed?":{"type":"method","name":"closed?","children":[],"call":["@io to_io closed? ","@io to_io "]}," RedisClient BufferedIO close":{"type":"method","name":"close","children":[],"call":["@io to_io close ","@io to_io "]}," RedisClient BufferedIO initialize":{"type":"method","name":"initialize","children":[],"call":[" b "]}," RedisClient connect":{"type":"method","name":"connect","children":[],"call":[" raise "," config server_url "," config ","error message include? ","error message ","error backtrace ","connection call_pipelined ","@middlewares call_pipelined ","prelude empty? "," config check_role! ","connection call_pipelined last ","prelude << "," config sentinel? "," id to_s "," id "," config connection_prelude dup "," config connection_prelude "," config driver new "," write_timeout "," read_timeout "," connect_timeout "," config driver ","@middlewares connect ","Process  pid ","error message match? ","PIDCache  pid ","@raw_connection call_pipelined ","@raw_connection call_pipelined last ","@raw_connection reconnect ","Middlewares  call_pipelined ","Middlewares  connect "," config driver new  call_pipelined "," config connection_prelude dup  empty? "," config driver new  call_pipelined last "," config connection_prelude dup  << "," config connection_ config connection_prelude dup  dup "," config  config driver new _prelude dup "," config connection_ config connection_prelude dup  "," config  config driver new _prelude ","@raw_ config driver new  call_pipelined ","@raw_ config driver new  call_pipelined last ","@raw_ config driver new  reconnect "]}," RedisClient Pipeline _coerce!":{"type":"method","name":"_coerce!","children":[],"call":["results []= ","block call ","results [] "]}," RedisClient Pipeline blocking_call_v":{"type":"method","name":"blocking_call_v","children":[],"call":["@commands << ","(or-asgn\n  (ivasgn :@blocks)\n  (array)) []= ","@commands size "," block_given? ","@timeouts []= ","@command_builder generate ","@@command_builder generate s << ","@@command_builder generate s size ","@@command_builder generate _builder generate "]}," RedisClient Multi _coerce!":{"type":"method","name":"_coerce!","children":[],"call":["results []= ","block call ","@blocks [] ","index + "," raise ","result _set_command ","@commands [] ","result is_a? ","results [] ","index - ","results each ","results each_with_index ","@blocks []  call ","@@blocks [] s [] "]}," RedisClient Multi _blocks":{"type":"method","name":"_blocks","children":[],"call":[]}," RedisClient Multi call_once_v":{"type":"method","name":"call_once_v","children":[],"call":["@commands << ","(or-asgn\n  (ivasgn :@blocks)\n  (array)) []= ","@commands size "," block_given? ","@command_builder generate ","@@command_builder generate s << ","@@command_builder generate s size ","@@command_builder generate _builder generate "]}," RedisClient Multi call_v":{"type":"method","name":"call_v","children":[],"call":["@commands << ","(or-asgn\n  (ivasgn :@blocks)\n  (array)) []= ","@commands size "," block_given? ","@command_builder generate ","@@command_builder generate s << ","@@command_builder generate s size ","@@command_builder generate _builder generate "]}," RedisClient PubSub call_v":{"type":"method","name":"call_v","children":[],"call":[" raw_connection write ","@command_builder generate "," raw_connection "]}," RedisClient blocking_call_v":{"type":"method","name":"blocking_call_v","children":[],"call":[" block_given? "," raise ","connection call ","@middlewares call "," config "," ensure_connected ","@command_builder generate ","Middlewares  call ","@@command_builder generate _builder generate "]}," RedisClient call_once_v":{"type":"method","name":"call_once_v","children":[],"call":[" block_given? ","connection call ","@middlewares call "," config "," ensure_connected ","@command_builder generate ","Middlewares  call ","@@command_builder generate _builder generate "]}," RedisClient call_v":{"type":"method","name":"call_v","children":[],"call":[" block_given? ","connection call ","@middlewares call "," config "," ensure_connected ","@command_builder generate ","Middlewares  call ","@@command_builder generate _builder generate "]}," RedisClient write_timeout=":{"type":"method","name":"write_timeout=","children":[],"call":[" raw_connection write_timeout= "," raw_connection "," connected? "]}," RedisClient read_timeout=":{"type":"method","name":"read_timeout=","children":[],"call":[" raw_connection read_timeout= "," raw_connection "," connected? "]}," RedisClient inspect":{"type":"method","name":"inspect","children":[],"call":[" config server_url "," config "," class name "," class "," id "]}," RedisClient register":{"type":"method","name":"register","children":[],"call":["Middlewares  include ","Middlewares  extend "]}," RedisClient CommandError _set_command":{"type":"method","name":"_set_command","children":[],"call":[]}," RedisClient Common timeout=":{"type":"method","name":"timeout=","children":[],"call":[]}," RedisClient Common initialize":{"type":"method","name":"initialize","children":[],"call":["Process  pid ","config command_builder ","PIDCache  pid "]}," RedisClient default_driver=":{"type":"method","name":"default_driver=","children":[],"call":[" driver "]}," RedisClient default_driver":{"type":"method","name":"default_driver","children":[],"call":[" driver ","@driver_definitions each_key "]}," RedisClient driver":{"type":"method","name":"driver","children":[],"call":["@driver_definitions [] ","@drivers [] "," raise ","@driver_definitions keys inspect ","@driver_definitions keys ","name inspect ","@driver_definitions key? ","name to_sym ","name is_a? ","DRIVER_DEFINITIONS  keys inspect ","DRIVER_DEFINITIONS  keys ","name to_sym  inspect ","name to_sym  to_sym ","name to_sym  is_a? "]}," RedisClient register_driver":{"type":"method","name":"register_driver","children":[],"call":["@driver_definitions []= "]}," RedisClient RubyConnection read":{"type":"method","name":"read","children":[],"call":[" raise ","error message ","RESP3  load ","@io with_timeout ","timeout nil? "]}," RedisClient RubyConnection write_multi":{"type":"method","name":"write_multi","children":[],"call":[" raise ","error message ","@io write ","RESP3  dump ","commands each "]}," RedisClient RubyConnection write":{"type":"method","name":"write","children":[],"call":[" raise ","error message ","@io write ","RESP3  dump "]}," RedisClient RubyConnection write_timeout=":{"type":"method","name":"write_timeout=","children":[],"call":["@io write_timeout= "]}," RedisClient RubyConnection read_timeout=":{"type":"method","name":"read_timeout=","children":[],"call":["@io read_timeout= "]}," RedisClient RubyConnection close":{"type":"method","name":"close","children":[],"call":["@io close "]}," RedisClient RubyConnection connected?":{"type":"method","name":"connected?","children":[],"call":["@io closed? ! ","@io closed? "]}," RedisClient RubyConnection initialize":{"type":"method","name":"initialize","children":[],"call":[" raise ","error backtrace ","error message ","BufferedIO  new ","status inspect ","socket to_io wait_writable ","socket to_io ","socket to_io wait_readable ","socket connect_nonblock "," loop ","socket hostname= ","config host ","OpenSSL SSL SSLSocket  new ","config ssl_context ","config ssl ","sock setsockopt ","Socket  tcp ","config port ","UNIXSocket  new ","config path "," enable_socket_keep_alive "," connect ","socket connect_nonblock  inspect ","OpenSSL SSL SSLSocket  new  to_io wait_writable ","UNIXSocket  new  to_io wait_writable ","Socket  tcp et to_io wait_writable ","OpenSSL SSL SSLSocket  new  to_io ","UNIXSocket  new  to_io ","Socket  tcp et to_io ","OpenSSL SSL SSLSocket  new  to_io wait_readable ","UNIXSocket  new  to_io wait_readable ","Socket  tcp et to_io wait_readable ","OpenSSL SSL SSLSocket  new  connect_nonblock ","UNIXSocket  new  connect_nonblock ","Socket  tcp et connect_nonblock ","OpenSSL SSL SSLSocket  new  hostname= ","UNIXSocket  new  hostname= ","Socket  tcp et hostname= ","Socket  tcp  setSocket  tcp opt "," enable_OpenSSL SSL SSLSocket  new _keep_alive "," enable_UNIXSocket  new _keep_alive "," enable_Socket  tcp et_keep_alive "]}," RedisClient RubyConnection ssl_context":{"type":"method","name":"ssl_context","children":[],"call":["context verify_hostname ","context respond_to? ","context verify_mode != ","context verify_mode ","context set_params ","OpenSSL SSL SSLContext  new ","params []= ","OpenSSL PKey  read ","File  read ","File  exist? ","key is_a? ","params [] ","OpenSSL X509 Certificate  new ","cert is_a? ","ssl_params dup ","OpenSSL SSL SSLContext  new  verify_hostname ","OpenSSL SSL SSLContext  new  respond_to? ","OpenSSL SSL SSLContext  new  verify_mode != ","OpenSSL SSL SSLContext  new  verify_mode ","OpenSSL SSL SSLContext  new  set_params ","File  read  is_a? ","params []  is_a? "]}," RedisClient RubyConnection BufferedIO fill_buffer":{"type":"method","name":"fill_buffer","children":[],"call":[" raise ","bytes inspect ","@io to_io wait_writable ","@io to_io ","@io to_io wait_readable ","remaining <= ","strict ! ","bytes bytesize ","@buffer << ","@io read_nonblock ","(lvar :remaining) max "," loop ","@offset >= ","@buffer bytesize ","@io read_nonblock  inspect ","@io read_nonblock  @io read_nonblock ize ","@buffer @io read_nonblock ize "]}," RedisClient RubyConnection BufferedIO ensure_remaining":{"type":"method","name":"ensure_remaining","children":[],"call":[" fill_buffer ","needed > ","bytes - ","@buffer bytesize - ","@buffer bytesize ","bytes -  > "]}," RedisClient RubyConnection BufferedIO read_chomp":{"type":"method","name":"read_chomp","children":[],"call":["bytes + ","@buffer byteslice "," ensure_remaining "]}," RedisClient RubyConnection BufferedIO gets_chomp":{"type":"method","name":"gets_chomp","children":[],"call":["eol_index + ","@buffer byteslice ","eol_index - "," fill_buffer ","@buffer index ","@offset >= ","@buffer bytesize ","@buffer index  + ","@buffer index  - ","eol_index +  >= "]}," RedisClient RubyConnection BufferedIO getbyte":{"type":"method","name":"getbyte","children":[],"call":["@buffer getbyte "," ensure_remaining ","@buffer get@buffer getbyte  "]}," RedisClient RubyConnection BufferedIO write":{"type":"method","name":"write","children":[],"call":[" raise "," bytes inspect "," bytes ","@io to_io wait_writable ","@io to_io ","@io to_io wait_readable ","string byteslice ","remaining > ","@io write_nonblock "," loop ","string bytesize ","string byteslice  byteslice ","string bytesize  > ","string byteslice  bytesize "]}," RedisClient RubyConnection BufferedIO skip":{"type":"method","name":"skip","children":[],"call":[" ensure_remaining "]}," RedisClient RubyConnection BufferedIO with_timeout":{"type":"method","name":"with_timeout","children":[],"call":["new_timeout == "]}," RedisClient RubyConnection BufferedIO eof?":{"type":"method","name":"eof?","children":[],"call":["@io eof? ","@offset >= ","@buffer bytesize "]}," RedisClient RubyConnection BufferedIO closed?":{"type":"method","name":"closed?","children":[],"call":["@io to_io closed? ","@io to_io "]}," RedisClient RubyConnection BufferedIO close":{"type":"method","name":"close","children":[],"call":["@io to_io close ","@io to_io "]}," RedisClient RubyConnection BufferedIO initialize":{"type":"method","name":"initialize","children":[],"call":[" b "]}," RedisClient BasicMiddleware call":{"type":"method","name":"call","children":[],"call":[]}," RedisClient BasicMiddleware connect":{"type":"method","name":"connect","children":[],"call":[]}," RedisClient BasicMiddleware initialize":{"type":"method","name":"initialize","children":[],"call":[]}," RedisClient Decorator Client multi":{"type":"method","name":"multi","children":[],"call":["@_pipeline_class new ","@client multi "]}," RedisClient Decorator Client pipelined":{"type":"method","name":"pipelined","children":[],"call":["@_pipeline_class new ","@client pipelined "]}," RedisClient Decorator Client with":{"type":"method","name":"with","children":[],"call":[" class new "," class ","@client with "]}," RedisClient Decorator Client initialize":{"type":"method","name":"initialize","children":[],"call":[" class "]}," RedisClient Decorator CommandsMixin initialize":{"type":"method","name":"initialize","children":[],"call":[]}," RedisClient Decorator create":{"type":"method","name":"create","children":[],"call":["client_decorator const_set ","pipeline_decorator include ","Class  new ","client_decorator include ","Class  new  const_set ","Class  new  include "]}," RedisClient ConnectionMixin call_pipelined":{"type":"method","name":"call_pipelined","children":[],"call":[" raise ","results []= ","result _set_command ","commands [] ","result is_a? "," read ","timeouts [] ","size times "," write_multi ","Array  new ","commands size "," read s []= ","Array  new  []= "," read  _set_command "," read  is_a? ","commands size  times ","commands commands size  "]}," RedisClient ConnectionMixin call":{"type":"method","name":"call","children":[],"call":[" raise ","result _set_command ","result is_a? "," read "," write "," read  _set_command "," read  is_a? "]}," RedisClient ConnectionMixin revalidate":{"type":"method","name":"revalidate","children":[],"call":[" connected? ","@pending_reads == "," close ","@pending_reads > "]}," RedisClient ConnectionMixin initialize":{"type":"method","name":"initialize","children":[],"call":[]}," RedisClient Config Common server_url":{"type":"method","name":"server_url","children":[],"call":[" db "," port "," host "," ssl? "," path "]}," RedisClient Config Common ssl_context":{"type":"method","name":"ssl_context","children":[],"call":["@driver ssl_context "," ssl "]}," RedisClient Config Common username":{"type":"method","name":"username","children":[],"call":[]}," RedisClient CommandBuilder generate":{"type":"method","name":"generate","children":[],"call":[" raise ","command empty? ","element class ","element to_s ","command map! ","command << << ","command << ","key to_s ","value == ","element flatten ","args flat_map ","element name ","key name "]}," RedisClient HasCommand _set_command":{"type":"method","name":"_set_command","children":[],"call":[]}," RedisClient CircuitBreaker record_success":{"type":"method","name":"record_success","children":[],"call":["@successes >= ","@state == ","@lock synchronize "]}," RedisClient CircuitBreaker record_error":{"type":"method","name":"record_error","children":[],"call":["@errors size >= ","@errors size ","@state == ","@errors << ","t < ","@errors reject! ","@lock synchronize ","now - ","Process  clock_gettime ","Process  clock_gettime  - "]}," RedisClient CircuitBreaker refresh_state":{"type":"method","name":"refresh_state","children":[],"call":["@errors clear ","@success_threshold > ","@errors last < ","now - ","@errors last ","@lock synchronize ","Process  clock_gettime ","Process  clock_gettime  - "]}," RedisClient CircuitBreaker protect":{"type":"method","name":"protect","children":[],"call":[" raise ","@state inspect "," record_error "," record_success "," refresh_state ","@state == "]}," RedisClient CircuitBreaker initialize":{"type":"method","name":"initialize","children":[],"call":["Mutex  new "," Integer "," Float "]}," RedisClient CircuitBreaker Middleware call_pipelined":{"type":"method","name":"call_pipelined","children":[],"call":["config circuit_breaker protect ","config circuit_breaker "]}," RedisClient CircuitBreaker Middleware call":{"type":"method","name":"call","children":[],"call":["config circuit_breaker protect ","config circuit_breaker "]}," RedisClient CircuitBreaker Middleware connect":{"type":"method","name":"connect","children":[],"call":["config circuit_breaker protect ","config circuit_breaker "]}," RedisClient PIDCache pid":{"type":"method","name":"pid","children":[],"call":["Process  pid "]}," RedisClient PIDCache CoreExt _fork":{"type":"method","name":"_fork","children":[],"call":["PIDCache  update! ","child_pid == "]}," RedisClient PIDCache update!":{"type":"method","name":"update!","children":[],"call":["Process  pid "]}," RedisClient RubyConnection enable_socket_keep_alive":{"type":"method","name":"enable_socket_keep_alive","children":[],"call":["socket setsockopt "]}," RedisClient SentinelConfig refresh_sentinels":{"type":"method","name":"refresh_sentinels","children":[],"call":["@sentinel_configs concat "," sentinels_to_configs ","sentinel_config port == ","sentinel fetch ","sentinel_config port ","sentinel_config host == ","sentinel_config host ","@sentinel_configs none? ","sentinels select "," Integer ","sentinel_response map ","sentinel_client call ","sentinel_client call  map "]}," RedisClient SentinelConfig sentinels_to_configs":{"type":"method","name":"sentinels_to_configs","children":[],"call":["Config  new ","sentinels map "]}," RedisClient RubyConnection connect":{"type":"method","name":"connect","children":[],"call":[" raise ","error backtrace ","error message ","BufferedIO  new ","status inspect ","socket to_io wait_writable ","socket to_io ","socket to_io wait_readable ","socket connect_nonblock "," loop ","socket hostname= ","@config host ","OpenSSL SSL SSLSocket  new ","@config ssl_context ","@config ssl "," enable_socket_keep_alive ","sock setsockopt ","Socket  tcp ","@config port ","UNIXSocket  new ","@config path ","socket connect_nonblock  inspect ","OpenSSL SSL SSLSocket  new  to_io wait_writable ","UNIXSocket  new  to_io wait_writable ","Socket  tcp et to_io wait_writable ","OpenSSL SSL SSLSocket  new  to_io ","UNIXSocket  new  to_io ","Socket  tcp et to_io ","OpenSSL SSL SSLSocket  new  to_io wait_readable ","UNIXSocket  new  to_io wait_readable ","Socket  tcp et to_io wait_readable ","OpenSSL SSL SSLSocket  new  connect_nonblock ","UNIXSocket  new  connect_nonblock ","Socket  tcp et connect_nonblock ","OpenSSL SSL SSLSocket  new  hostname= ","UNIXSocket  new  hostname= ","Socket  tcp et hostname= "," enable_OpenSSL SSL SSLSocket  new _keep_alive "," enable_UNIXSocket  new _keep_alive "," enable_Socket  tcp et_keep_alive ","Socket  tcp  setSocket  tcp opt "]}," RedisClient ConnectionMixin close":{"type":"method","name":"close","children":[],"call":[]}," RedisClient ConnectionMixin reconnect":{"type":"method","name":"reconnect","children":[],"call":[" connect "," close "]}," RedisClient discard":{"type":"method","name":"discard","children":[],"call":[]}," RedisClient measure_round_trip_delay":{"type":"method","name":"measure_round_trip_delay","children":[],"call":["connection measure_round_trip_delay ","@middlewares call "," config "," ensure_connected "]}," RedisClient URLConfig port":{"type":"method","name":"port","children":[],"call":[" Integer "," uri port "," uri "]}," RedisClient URLConfig host":{"type":"method","name":"host","children":[],"call":[" uri host sub "," uri host "," uri "," uri host empty? "," uri host nil? "]}," RedisClient URLConfig password":{"type":"method","name":"password","children":[],"call":["URI  decode_www_form_component "," uri password "," uri "," uri user "," uri password ! "]}," RedisClient URLConfig username":{"type":"method","name":"username","children":[],"call":[" uri user "," uri "," uri user empty? ! "," uri user empty? "," uri password "]}," RedisClient URLConfig db":{"type":"method","name":"db","children":[],"call":[" Integer ","db_path empty? ! ","db_path empty? "," uri path "," uri "]}," RedisClient URLConfig ssl?":{"type":"method","name":"ssl?","children":[],"call":["@uri scheme == ","@uri scheme "]}," RedisClient URLConfig initialize":{"type":"method","name":"initialize","children":[],"call":[" raise ","url inspect "," uri scheme == "," uri scheme "," uri "," URI "]}," RedisClient RubyConnection measure_round_trip_delay":{"type":"method","name":"measure_round_trip_delay","children":[],"call":["Process  clock_gettime - ","Process  clock_gettime "," call "]}," RedisClient RubyConnection discard":{"type":"method","name":"discard","children":[],"call":[" close ","@io reopen ","@io closed? "]}," RedisClient RubyConnection BufferedIO reopen":{"type":"method","name":"reopen","children":[],"call":["@io to_io reopen ","@io to_io "]}," RedisClient disable_reconnection":{"type":"method","name":"disable_reconnection","children":[],"call":[" ensure_connected "]}," RedisClient server_url":{"type":"method","name":"server_url","children":[],"call":[" config server_url "," config "]}," RedisClient password":{"type":"method","name":"password","children":[],"call":[" config password "," config "]}," RedisClient username":{"type":"method","name":"username","children":[],"call":[" config username "," config "]}," RedisClient path":{"type":"method","name":"path","children":[],"call":[" config path "," config "]}," RedisClient port":{"type":"method","name":"port","children":[],"call":[" config port "," config "," config path "]}," RedisClient host":{"type":"method","name":"host","children":[],"call":[" config host "," config "," config path "]}," RedisClient db":{"type":"method","name":"db","children":[],"call":[" config db "," config "]}," RedisClient timeout":{"type":"method","name":"timeout","children":[],"call":[" config read_timeout "," config "]}," RedisClient id":{"type":"method","name":"id","children":[],"call":[" config id "," config "]}," RedisClient Middlewares call":{"type":"method","name":"call","children":[],"call":[]}," RedisClient Connection write_timeout=":{"type":"method","name":"write_timeout=","children":[],"call":["@io write_timeout= "]}," RedisClient Connection read_timeout=":{"type":"method","name":"read_timeout=","children":[],"call":["@io read_timeout= "]}," RedisClient Connection Common call_pipelined":{"type":"method","name":"call_pipelined","children":[],"call":[" raise ","results []= ","result is_a? "," read ","timeouts [] ","size times "," write_multi ","Array  new ","commands size "," read s []= ","Array  new  []= "," read  is_a? ","commands size  times ","commands commands size  "]}," RedisClient Connection Common call":{"type":"method","name":"call","children":[],"call":[" raise ","result is_a? "," read "," write "," read  is_a? "]}," RedisClient HiredisConnection ssl_context":{"type":"method","name":"ssl_context","children":[],"call":["HiredisConnection SSLContext  new ","ssl_params [] "]}," RedisClient CommandBuilder generate!":{"type":"method","name":"generate!","children":[],"call":[" raise ","element class ","element to_s ","command map! ","command << << ","command << ","key to_s ","value == ","kwargs each ","element to_a ","element flatten ","args flat_map ","element name ","key name ","command empty? "]}," RedisClient Middlewares connect":{"type":"method","name":"connect","children":[],"call":[]}}