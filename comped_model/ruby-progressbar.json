{" ReversedProgressBar do_percentage":{"type":"method","name":"do_percentage","children":[],"call":["100 - "]}," ProgressBar inspect":{"type":"method","name":"inspect","children":[],"call":[]}," ProgressBar set":{"type":"method","name":"set","children":[],"call":[" show_if_needed "," raise ","count > ","count < ","@previous * + ","@running_average * ","1.0 - ","@previous * ","(send\n  (array\n    (lvar :count)\n    (ivar :@total)) :min) max ","(lvar :count) min ","@previous * +  * "]}," ProgressBar inc":{"type":"method","name":"inc","children":[],"call":[" show_if_needed ","@current > "," set ","@current + "]}," ProgressBar halt":{"type":"method","name":"halt","children":[],"call":[" show "]}," ProgressBar format_arguments=":{"type":"method","name":"format_arguments=","children":[],"call":[]}," ProgressBar format=":{"type":"method","name":"format=","children":[],"call":[]}," ProgressBar file_transfer_mode":{"type":"method","name":"file_transfer_mode","children":[],"call":[]}," ProgressBar finished?":{"type":"method","name":"finished?","children":[],"call":[]}," ProgressBar finish":{"type":"method","name":"finish","children":[],"call":[" show "]}," ProgressBar clear":{"type":"method","name":"clear","children":[],"call":["@out print ","  * "," get_width - "," get_width "," tty? "]}," ProgressBar show_if_needed":{"type":"method","name":"show_if_needed","children":[],"call":[" show ","Time  now - >= ","Time  now - ","Time  now ","cur_percentage != ","(send\n  (send\n    (ivar :@previous) :*\n    (int 100)) :/\n  (ivar :@total)) to_i ","@previous * / ","@previous * ","(send\n  (send\n    (ivar :@current) :*\n    (int 100)) :/\n  (ivar :@total)) to_i ","@current * / ","@current * ","@total zero? "," time_now - >= "," time_now - "," time_now ","(send\n  (send\n    (ivar :@current) :*\n    (int 100)) :/\n  (ivar :@total)) to_i  != "]}," ProgressBar show":{"type":"method","name":"show","children":[],"call":["Time  now "," show ","width - + ","width - ","line length ","@out print ","line + "," eol ","@terminal_width == ","(send\n  (ivar :@terminal_width) :-\n  (begin\n    (send\n      (send\n        (send\n          (lvar :line) :length) :-\n        (lvar :width)) :+\n      (int 1)))) max ","@terminal_width - ","line length - + ","line length - ","line length >= ","@out flush ","line length == "," get_width "," sprintf "," send ","@format_arguments map "," time_now "," show_no_tty "," show_tty "," tty? "," get_width  - + "," get_width  - "," sprintf  length "," sprintf  + ","(send\n  (ivar :@terminal_width) :-\n  (begin\n    (send\n      (send\n        (send\n          (lvar :line) :length) :-\n        (lvar :width)) :+\n      (int 1)))) max  == ","@terminal_ get_width  == ","(send\n  (ivar :(send\n  (ivar :@terminal_width) :-\n  (begin\n    (send\n      (send\n        (send\n          (lvar :line) :length) :-\n        (lvar :width)) :+\n      (int 1)))) max ) :-\n  (begin\n    (send\n      (send\n        (send\n          (lvar :line) :length) :-\n        (lvar :width)) :+\n      (int 1)))) max ","(send\n  (ivar :@terminal_ get_width ) :-\n  (begin\n    (send\n      (send\n        (send\n          (lvar :line) :length) :-\n        (lvar : get_width )) :+\n      (int 1)))) max ","(send\n  (ivar :@terminal_width) :-\n  (begin\n    (send\n      (send\n        (send\n          (lvar : sprintf ) :length) :-\n        (lvar :width)) :+\n      (int 1)))) max ","(send\n  (ivar :@terminal_width) :-\n  (begin\n    (send\n      (send\n        (send\n          (lvar :line) :length) :-\n        (lvar :width)) :+\n      (int 1)))) max  - ","@terminal_ get_width  - "," sprintf  length - + "," sprintf  length - "," sprintf  length >= "," sprintf  length == "," get_ get_width  "]}," ProgressBar get_width":{"type":"method","name":"get_width","children":[],"call":["cols > ","data unpack ","@out ioctl >= ","@out ioctl ","(int 0) pack ","cols >= ","(int 0) pack  unpack "]}," ProgressBar do_percentage":{"type":"method","name":"do_percentage","children":[],"call":["@current * / ","@current * ","@total zero? "]}," ProgressBar eol":{"type":"method","name":"eol","children":[],"call":[]}," ProgressBar elapsed":{"type":"method","name":"elapsed","children":[],"call":[" sprintf "," format_time ","Time  now - ","Time  now "," time_now - "," time_now "]}," ProgressBar eta":{"type":"method","name":"eta","children":[],"call":[" sprintf "," format_time ","elapsed * / - ","elapsed * / ","elapsed * ","Time  now - ","Time  now ","@current == "," time_now - "," time_now ","Time  now -  * / - "," time_now -  * / - ","Time  now -  * / "," time_now -  * / ","Time  now -  * "," time_now -  * "]}," ProgressBar format_time":{"type":"method","name":"format_time","children":[],"call":[" sprintf ","t / ","(send\n  (lvar :t) :/\n  (int 60)) % ","t % ","t to_i ","t nan? ","t infinite? ","t < "," sprint to_i f ","t to_i  / ","(send\n  (lvar :t to_i ) :/\n  (int to_i  60)) % ","t to_i  % ","t to_i  t to_i o_i ","t to_i  nan? ","t to_i  infinit to_i e? ","t to_i  < "]}," ProgressBar bytes":{"type":"method","name":"bytes","children":[],"call":[" convert_bytes "]}," ProgressBar transfer_rate":{"type":"method","name":"transfer_rate","children":[],"call":[" sprintf "," convert_bytes ","@current to_f / ","Time  now - ","Time  now ","@current to_f "," time_now - "," time_now "]}," ProgressBar convert_bytes":{"type":"method","name":"convert_bytes","children":[],"call":[" sprintf ","bytes to_f / / / ","bytes to_f / / ","bytes to_f / ","bytes to_f ","bytes < ","1024 * * ","1024 * "]}," ProgressBar fmt_title":{"type":"method","name":"fmt_title","children":[],"call":["@title [] + ","@title [] ","@title_width - "," title_width - "," title_width "]}," ProgressBar fmt_stat_for_file_transfer":{"type":"method","name":"fmt_stat_for_file_transfer","children":[],"call":[" sprintf "," eta "," transfer_rate "," bytes "," elapsed "]}," ProgressBar fmt_stat":{"type":"method","name":"fmt_stat","children":[],"call":[" eta "," elapsed "]}," ProgressBar fmt_percentage":{"type":"method","name":"fmt_percentage","children":[],"call":[" do_percentage "]}," ProgressBar fmt_bar":{"type":"method","name":"fmt_bar","children":[],"call":[" sprintf ","  * ","@terminal_width - ","@bar_mark * "," do_percentage * / "," do_percentage * "," do_percentage "," bar_width ","  do_percentage * /  "]}," ProgressBar initialize":{"type":"method","name":"initialize","children":[],"call":[" show "," clear ","Time  now "," time_now "]}," ProgressBar tty?":{"type":"method","name":"tty?","children":[],"call":["@out tty? "]}," ProgressBar time_now":{"type":"method","name":"time_now","children":[],"call":["Time  now ","Time  now_without_delorean ","Time  respond_to? ","Time  now_without_mock_time "]}," ProgressBar show_no_tty":{"type":"method","name":"show_no_tty","children":[],"call":[" bar_width ","@out print ","@bar_mark * ","bar_width_change > "," bar_width - "," fmt_title + "," fmt_title ","@terminal_width - - - ","@terminal_width - - "," elapsed size "," elapsed ","@terminal_width - "," fmt_title size ","@last_bar_width nil? ","|  + + "," eol ","|  + "," finished? "," bar_width -  > ","@terminal_width - - -  - - - ","@terminal_width - - -  - - ","@terminal_width - - -  - "," bar_width  nil? "]}," ProgressBar show_tty":{"type":"method","name":"show_tty","children":[],"call":[" show ","width - + ","width - ","line length ","@out write ","line + "," eol ","@terminal_width == ","(send\n  (ivar :@terminal_width) :-\n  (begin\n    (send\n      (send\n        (send\n          (lvar :line) :length) :-\n        (lvar :width)) :+\n      (int 1)))) max ","@terminal_width - ","line length - + ","line length - ","line length >= ","line length == "," get_width "," sprintf "," format "," send ","@format_arguments map "," get_width  - + "," get_width  - "," sprintf  length "," sprintf  + ","(send\n  (ivar :@terminal_width) :-\n  (begin\n    (send\n      (send\n        (send\n          (lvar :line) :length) :-\n        (lvar :width)) :+\n      (int 1)))) max  == ","@terminal_ get_width  == ","(send\n  (ivar :(send\n  (ivar :@terminal_width) :-\n  (begin\n    (send\n      (send\n        (send\n          (lvar :line) :length) :-\n        (lvar :width)) :+\n      (int 1)))) max ) :-\n  (begin\n    (send\n      (send\n        (send\n          (lvar :line) :length) :-\n        (lvar :width)) :+\n      (int 1)))) max ","(send\n  (ivar :@terminal_ get_width ) :-\n  (begin\n    (send\n      (send\n        (send\n          (lvar :line) :length) :-\n        (lvar : get_width )) :+\n      (int 1)))) max ","(send\n  (ivar :@terminal_width) :-\n  (begin\n    (send\n      (send\n        (send\n          (lvar : sprintf ) :length) :-\n        (lvar :width)) :+\n      (int 1)))) max ","(send\n  (ivar :@terminal_width) :-\n  (begin\n    (send\n      (send\n        (send\n          (lvar :line) :length) :-\n        (lvar :width)) :+\n      (int 1)))) max  - ","@terminal_ get_width  - "," sprintf  length - + "," sprintf  length - "," sprintf  length >= "," sprintf  length == "," get_ get_width  "]}," ProgressBar bar_width":{"type":"method","name":"bar_width","children":[],"call":[" do_percentage * / "," do_percentage * "," do_percentage "]}," ProgressBar format":{"type":"method","name":"format","children":[],"call":[" title_width "]}," ProgressBar title_width":{"type":"method","name":"title_width","children":[],"call":[]}," ProgressBar create":{"type":"method","name":"create","children":[],"call":[]}," ProgressBar new":{"type":"method","name":"new","children":[],"call":[]}," ProgressBar Time time_mocking_library_mapping":{"type":"method","name":"time_mocking_library_mapping","children":[],"call":[]}," ProgressBar Time unmocked_time_method":{"type":"method","name":"unmocked_time_method","children":[],"call":[" time respond_to? "," time ","TIME_MOCKING_LIBRARY_METHODS  find "]}," ProgressBar Time now":{"type":"method","name":"now","children":[],"call":[" time __send__ "," unmocked_time_method "," time "]}," ProgressBar RunningAverageCalculator calculate":{"type":"method","name":"calculate","children":[],"call":[]}," ProgressBar LengthCalculator unix?":{"type":"method","name":"unix?","children":[],"call":["RUBY_PLATFORM  =~ "]}," ProgressBar LengthCalculator dynamic_width_tput":{"type":"method","name":"dynamic_width_tput","children":[],"call":["(str \"tput cols 2>/dev/null\") to_i "]}," ProgressBar LengthCalculator dynamic_width_stty":{"type":"method","name":"dynamic_width_stty","children":[],"call":["(str \"stty size 2>/dev/null\") split [] to_i ","(str \"stty size 2>/dev/null\") split [] ","(str \"stty size 2>/dev/null\") split "]}," ProgressBar LengthCalculator dynamic_width":{"type":"method","name":"dynamic_width","children":[],"call":[" dynamic_width_tput "," dynamic_width_stty nonzero? "," dynamic_width_stty ","IO  console winsize ","IO  console "]}," ProgressBar LengthCalculator terminal_width":{"type":"method","name":"terminal_width","children":[],"call":["result < "," dynamic_width "," unix? "," dynamic_width  < "]}," ProgressBar LengthCalculator reset_length":{"type":"method","name":"reset_length","children":[],"call":[" calculate_length "]}," ProgressBar LengthCalculator calculate_length":{"type":"method","name":"calculate_length","children":[],"call":[" terminal_width "]}," ProgressBar LengthCalculator length_changed?":{"type":"method","name":"length_changed?","children":[],"call":["@current_length != "," calculate_length "]}," ProgressBar LengthCalculator length":{"type":"method","name":"length","children":[],"call":[" reset_length "]}," ProgressBar LengthCalculator initialize":{"type":"method","name":"initialize","children":[],"call":["options [] ","ENV  [] ","@length_override to_i ","@length_override to_i  to_i "]}," ProgressBar Formatter estimated_time":{"type":"method","name":"estimated_time","children":[],"call":[" finished? "]}," ProgressBar Formatter bar_with_percentage":{"type":"method","name":"bar_with_percentage","children":[],"call":["@bar integrated_percentage_complete_string ","@bar length= "]}," ProgressBar Formatter incomplete_space":{"type":"method","name":"incomplete_space","children":[],"call":["@bar empty_string ","@bar length= "]}," ProgressBar Formatter complete_bar":{"type":"method","name":"complete_bar","children":[],"call":["@bar to_s ","@bar length= "]}," ProgressBar Formatter bar":{"type":"method","name":"bar","children":[],"call":["@bar standard_complete_string ","@bar length= "]}," ProgressBar Formatter estimated_time_with_friendly_oob":{"type":"method","name":"estimated_time_with_friendly_oob","children":[],"call":[" estimated_time ","@estimated_time out_of_bounds_time_format= "]}," ProgressBar Formatter estimated_time_with_unknown_oob":{"type":"method","name":"estimated_time_with_unknown_oob","children":[],"call":[" estimated_time ","@estimated_time out_of_bounds_time_format= "]}," ProgressBar Formatter estimated_time_with_no_oob":{"type":"method","name":"estimated_time_with_no_oob","children":[],"call":[" estimated_time ","@estimated_time out_of_bounds_time_format= "]}," ProgressBar Formatter elapsed_time":{"type":"method","name":"elapsed_time","children":[],"call":[]}," ProgressBar Formatter percentage_with_precision":{"type":"method","name":"percentage_with_precision","children":[],"call":["@bar percentage_completed_with_precision "]}," ProgressBar Formatter percentage":{"type":"method","name":"percentage","children":[],"call":["@bar percentage_completed "]}," ProgressBar Formatter title":{"type":"method","name":"title","children":[],"call":[]}," ProgressBar Formatter process":{"type":"method","name":"process","children":[],"call":["processed_string gsub! "," send to_s "," send ","molecule method_name ","molecule key ","@format bar_molecules each ","@format bar_molecules "," length - + "," length - ","processed_string length "," length ","remaining_molecules * ","remaining_molecule_match_data size ","processed_string scan ","@format non_bar_molecules each ","@format non_bar_molecules ","@format_string dup tap ","@format_string dup ","remaining_molecule_match_data size  * "]}," ProgressBar Formatter total":{"type":"method","name":"total","children":[],"call":["@bar total "]}," ProgressBar Formatter progress":{"type":"method","name":"progress","children":[],"call":["@bar progress "]}," ProgressBar Formatter title=":{"type":"method","name":"title=","children":[],"call":[]}," ProgressBar Formatter format":{"type":"method","name":"format","children":[],"call":[" process ","ProgressBar Format Base  new ","@format process "," format_string= ","ProgressBar Format Base  new  process "]}," ProgressBar Formatter initialize":{"type":"method","name":"initialize","children":[],"call":["options [] "," format_string= "]}," ProgressBar Format Molecule bar_molecule?":{"type":"method","name":"bar_molecule?","children":[],"call":["BAR_MOLECULES  include? "," key "]}," ProgressBar Format Molecule initialize":{"type":"method","name":"initialize","children":[],"call":["MOLECULES  fetch ","@key to_sym "," method_name= "," key to_sym "," key "," key= "]}," ProgressBar Format Base parse":{"type":"method","name":"parse","children":[],"call":["molecules << ","Molecule  new ","match [] ","format_string scan "]}," ProgressBar Format Base bar_molecules":{"type":"method","name":"bar_molecules","children":[],"call":["molecule bar_molecule? "," molecules select "," molecules "]}," ProgressBar Format Base non_bar_molecules":{"type":"method","name":"non_bar_molecules","children":[],"call":["molecule bar_molecule? ! ","molecule bar_molecule? "," molecules select "," molecules "]}," ProgressBar Format Base initialize":{"type":"method","name":"initialize","children":[],"call":[" parse "]}," ProgressBar Depreciable message_has_not_been_shown?":{"type":"method","name":"message_has_not_been_shown?","children":[],"call":[" instance_variable_set "," safe_string "," instance_variable_get "]}," ProgressBar Depreciable safe_string":{"type":"method","name":"safe_string","children":[],"call":["item gsub "]}," ProgressBar Depreciable method_removal_message":{"type":"method","name":"method_removal_message","children":[],"call":[" puts "," message_has_not_been_shown? "]}," ProgressBar Depreciable method_deprecation_message":{"type":"method","name":"method_deprecation_message","children":[],"call":[" puts ","new_item empty? "," message_has_not_been_shown? "]}," ProgressBar Depreciable file_transfer_mode":{"type":"method","name":"file_transfer_mode","children":[],"call":[" method_removal_message "]}," ProgressBar Depreciable smoothing=":{"type":"method","name":"smoothing=","children":[],"call":[" method_removal_message "]}," ProgressBar Depreciable smoothing":{"type":"method","name":"smoothing","children":[],"call":[" method_removal_message "]}," ProgressBar Depreciable current":{"type":"method","name":"current","children":[],"call":["@bar progress "," method_deprecation_message "]}," ProgressBar Depreciable format_arguments=":{"type":"method","name":"format_arguments=","children":[],"call":[" method_removal_message "]}," ProgressBar Depreciable format=":{"type":"method","name":"format=","children":[],"call":[" method_removal_message "]}," ProgressBar Depreciable start_time=":{"type":"method","name":"start_time=","children":[],"call":[" method_removal_message "]}," ProgressBar Depreciable start_time":{"type":"method","name":"start_time","children":[],"call":["@elapsed_time instance_variable_get "," method_deprecation_message "]}," ProgressBar Depreciable title_width=":{"type":"method","name":"title_width=","children":[],"call":[" method_removal_message "]}," ProgressBar Depreciable title_width":{"type":"method","name":"title_width","children":[],"call":[" method_removal_message "]}," ProgressBar Depreciable bar_mark=":{"type":"method","name":"bar_mark=","children":[],"call":[" method_deprecation_message "]}," ProgressBar Depreciable halt":{"type":"method","name":"halt","children":[],"call":[" stop "," method_deprecation_message "]}," ProgressBar Depreciable set":{"type":"method","name":"set","children":[],"call":[" method_deprecation_message "]}," ProgressBar Depreciable inc":{"type":"method","name":"inc","children":[],"call":["progress + ","value to_i "," method_removal_message "," increment "," method_deprecation_message ","value nil? ","progress +  + "]}," ProgressBar Depreciable backwards_compatible_args_to_options_conversion":{"type":"method","name":"backwards_compatible_args_to_options_conversion","children":[],"call":["args [] ","options []= "," puts ","args size > ","args size ","args []  []= "]}," ProgressBar Components Timer divide_seconds":{"type":"method","name":"divide_seconds","children":[],"call":["seconds divmod "]}," ProgressBar Components Timer elapsed_time":{"type":"method","name":"elapsed_time","children":[],"call":[" sprintf ","seconds divmod "," elapsed_seconds divmod "," elapsed_seconds "," started? "," elapsed_whole_seconds divmod "," elapsed_whole_seconds "," divide_seconds "]}," ProgressBar Components Timer elapsed_seconds":{"type":"method","name":"elapsed_seconds","children":[],"call":["(send\n  (begin\n    (or\n      (ivar :@stopped_at)\n      (send nil :now))) :-\n  (ivar :@started_at)) floor ","(or\n  (ivar :@stopped_at)\n  (send nil :now)) - "," now "]}," ProgressBar Components Timer now":{"type":"method","name":"now","children":[],"call":["ProgressBar Time  now "]}," ProgressBar Components Timer reset":{"type":"method","name":"reset","children":[],"call":[]}," ProgressBar Components Timer stopped?":{"type":"method","name":"stopped?","children":[],"call":["@stopped_at ! ! ","@stopped_at ! "]}," ProgressBar Components Timer started?":{"type":"method","name":"started?","children":[],"call":["@started_at ! ! ","@started_at ! "]}," ProgressBar Components Timer resume":{"type":"method","name":"resume","children":[],"call":[" start "]}," ProgressBar Components Timer pause":{"type":"method","name":"pause","children":[],"call":[" stop "]}," ProgressBar Components Timer stop":{"type":"method","name":"stop","children":[],"call":[" now "," started? "]}," ProgressBar Components Timer start":{"type":"method","name":"start","children":[],"call":[" now "," now - ","@stopped_at - "," stopped? "]}," ProgressBar Components Progressable update_running_average":{"type":"method","name":"update_running_average","children":[],"call":[" running_average= ","RunningAverageCalculator  calculate "," smoothing "," progress "," running_average "," progress_made "]}," ProgressBar Components Progressable progress_made":{"type":"method","name":"progress_made","children":[],"call":[" progress - "," starting_position "," progress "," started? "]}," ProgressBar Components Progressable validate_progress":{"type":"method","name":"validate_progress","children":[],"call":[" raise ","new_progress <= "," total "," total nil? "]}," ProgressBar Components Progressable validate_total":{"type":"method","name":"validate_total","children":[],"call":[" raise ","new_total >= "," progress "," progress nil? ","new_total nil? "]}," ProgressBar Components Progressable percentage_completed_with_precision":{"type":"method","name":"percentage_completed_with_precision","children":[],"call":[" format ","(send\n  (send\n    (send\n      (send\n        (send nil :progress) :to_f) :*\n      (float 100.0)) :/\n    (send nil :total)) :*\n  (float 100.0)) floor / ","(send\n  (send\n    (send\n      (send\n        (send nil :progress) :to_f) :*\n      (float 100.0)) :/\n    (send nil :total)) :*\n  (float 100.0)) floor "," progress to_f * / * "," progress to_f * / "," total "," progress to_f * "," progress to_f "," progress "," total nil? "," total == "]}," ProgressBar Components Progressable percentage_completed":{"type":"method","name":"percentage_completed","children":[],"call":[" progress * / "," total "," progress * "," progress "," total == ","(send\n  (send\n    (send\n      (self) :progress) :*\n    (int 100)) :/\n  (send nil :total)) to_i "," total nil? "]}," ProgressBar Components Progressable finish":{"type":"method","name":"finish","children":[],"call":[" progress= "," total "," finished= "]}," ProgressBar Components Progressable total=":{"type":"method","name":"total=","children":[],"call":[" validate_total "]}," ProgressBar Components Progressable progress=":{"type":"method","name":"progress=","children":[],"call":[" update_running_average "," validate_progress "]}," ProgressBar Components Progressable reset":{"type":"method","name":"reset","children":[],"call":[" start "," starting_position "]}," ProgressBar Components Progressable decrement":{"type":"method","name":"decrement","children":[],"call":[" progress "," progress == ","STDOUT  puts "," total "," warn "]}," ProgressBar Components Progressable increment":{"type":"method","name":"increment","children":[],"call":[" progress "," progress == "," total ","STDOUT  puts "," warn "]}," ProgressBar Components Progressable started?":{"type":"method","name":"started?","children":[],"call":[" starting_position ! ! "," starting_position ! "," starting_position "]}," ProgressBar Components Progressable start":{"type":"method","name":"start","children":[],"call":[" progress= "," starting_position= "," progress ","options [] "," running_average= "," finished= "]}," ProgressBar Components Progressable initialize":{"type":"method","name":"initialize","children":[],"call":[" start "," smoothing= ","options [] "," total= ","options fetch "," autofinish= "]}," ProgressBar Components EstimatedTimer As method_missing":{"type":"method","name":"method_missing","children":[],"call":["@ancestor instance_method bind call ","@ancestor instance_method bind ","@ancestor instance_method "]}," ProgressBar Components EstimatedTimer As initialize":{"type":"method","name":"initialize","children":[],"call":[]}," ProgressBar Components EstimatedTimer as":{"type":"method","name":"as","children":[],"call":["r instance_eval "," block_given? ","@__as []= ","As  new ","@__as [] ","@__as []  instance_eval "]}," ProgressBar Components EstimatedTimer out_of_bounds_time":{"type":"method","name":"out_of_bounds_time","children":[],"call":[]}," ProgressBar Components EstimatedTimer estimated_seconds_remaining":{"type":"method","name":"estimated_seconds_remaining","children":[],"call":["(send\n  (begin\n    (send\n      (send nil :average_seconds_per_each) :*\n      (send\n        (self) :total))) :-\n  (send\n    (send nil :elapsed_seconds) :to_f)) floor ","(send\n  (send nil :average_seconds_per_each) :*\n  (send\n    (self) :total)) - "," elapsed_seconds to_f "," elapsed_seconds "," average_seconds_per_each * "," total "," average_seconds_per_each ","(send\n  (begin\n    (send\n      (send nil :average_seconds_per_each) :*\n      (send\n        (self) :total))) :-\n  (send\n    (send nil :elapsed_whole_seconds) :to_f)) floor "," elapsed_whole_seconds to_f "," elapsed_whole_seconds ","(send\n  (send nil :elapsed_seconds) :*\n  (begin\n    (send\n      (send\n        (send\n          (self) :total) :/\n        (send\n          (self) :running_average)) :-\n      (int 1)))) round "," elapsed_seconds * "," total / - "," total / "," running_average "]}," ProgressBar Components EstimatedTimer average_seconds_per_each":{"type":"method","name":"average_seconds_per_each","children":[],"call":[" elapsed_seconds to_f / "," running_average "," elapsed_seconds to_f "," elapsed_seconds "," running_average zero? "," elapsed_whole_seconds to_f / "," elapsed_whole_seconds to_f "," elapsed_whole_seconds "]}," ProgressBar Components EstimatedTimer estimated_time":{"type":"method","name":"estimated_time","children":[],"call":[" sprintf "," out_of_bounds_time ","hours > "," divide_seconds "," estimated_seconds_remaining "," progress_made zero? "," progress_made "," total nil? "," total "," running_average zero? "," running_average "]}," ProgressBar Components EstimatedTimer to_s":{"type":"method","name":"to_s","children":[],"call":[" estimated_time "]}," ProgressBar Components EstimatedTimer out_of_bounds_time_format=":{"type":"method","name":"out_of_bounds_time_format=","children":[],"call":[" raise ","VALID_OOB_TIME_FORMATS  inspect ","VALID_OOB_TIME_FORMATS  include? "]}," ProgressBar Components EstimatedTimer reset":{"type":"method","name":"reset","children":[],"call":[" as reset "," as "]}," ProgressBar Components EstimatedTimer start":{"type":"method","name":"start","children":[],"call":[" as start "," as "]}," ProgressBar Components EstimatedTimer initialize":{"type":"method","name":"initialize","children":[],"call":[]}," ProgressBar Components ElapsedTimer elapsed_time":{"type":"method","name":"elapsed_time","children":[],"call":[" sprintf "," divide_seconds "," elapsed_seconds "," started? "," elapsed_whole_seconds "]}," ProgressBar Components ElapsedTimer to_s":{"type":"method","name":"to_s","children":[],"call":[" elapsed_time "]}," ProgressBar Components Bar completed_length":{"type":"method","name":"completed_length","children":[],"call":[" length * / "," length * "," percentage_completed "," length ","(send\n  (send\n    (send nil :length) :*\n    (send\n      (send nil :progress) :percentage_completed)) :/\n  (int 100)) floor "," progress percentage_completed "," progress ","(send\n  (send\n    (send nil :length) :*\n    (send nil :percentage_completed)) :/\n  (int 100)) floor "]}," ProgressBar Components Bar empty_string":{"type":"method","name":"empty_string","children":[],"call":["  * "," length - "," completed_length "," length ","unknown_incomplete_string [] ","animation_graphic * ","(send\n  (lvar :incomplete_length) :/\n  (send\n    (send nil :unknown_progress_animation_steps) :size)) + ","incomplete_length / "," unknown_progress_animation_steps size "," unknown_progress_animation_steps "," unknown_progress_animation_steps [] "," progress % "," progress "," total nil? "," total "," remainder_mark * "," remainder_mark ","animation_graphic *  [] "," unknown_progress_animation_steps []  * "]}," ProgressBar Components Bar standard_complete_string":{"type":"method","name":"standard_complete_string","children":[],"call":[" progress_mark * "," completed_length "," progress_mark "]}," ProgressBar Components Bar integrated_percentage_complete_string":{"type":"method","name":"integrated_percentage_complete_string","children":[],"call":["(str \" \") to_s center "," progress_mark "," completed_length ","(str \" \") to_s "," percentage_completed "," standard_complete_string "," completed_length < "," progress percentage_completed "," progress "]}," ProgressBar Components Bar to_s":{"type":"method","name":"to_s","children":[],"call":["  * "," length - ","completed_string length "," length "," send ","options [] ","completed_string ljust "," incomplete_string "," integrated_percentage_complete_string ","options [] == "," standard_complete_string "," unknown_string "," progress unknown? "," progress "," empty_string "," send  length "," send  ljust ","   *  "]}," ProgressBar Components Bar initialize":{"type":"method","name":"initialize","children":[],"call":[" progress_mark= ","options [] "," length= "," progress= "," remainder_mark= "," upa_steps= "," unknown_progress_animation_steps= "]}," ProgressBar Base eol":{"type":"method","name":"eol","children":[],"call":[" stopped? "," finished? "," output tty? "," output "]}," ProgressBar Base update":{"type":"method","name":"update","children":[],"call":[" output flush "," output "," output print "," to_s + "," eol "," to_s "," reset_length "," clear "," length_changed? "," with_timers "," finished? ","@throttle choke ","options [] "," stopped? "," output tty? ","output_string + "," last_update_length= ","formatted_string length ","formatted_string [] "," last_update_length ","formatted_string []  + ","formatted_string []  length "," to_s  length ","formatted_string []  [] "," to_s  [] "]}," ProgressBar Base with_update":{"type":"method","name":"with_update","children":[],"call":[" update "]}," ProgressBar Base with_timers":{"type":"method","name":"with_timers","children":[],"call":["@elapsed_time send ","@estimated_time send ","args empty? ","@rate send "]}," ProgressBar Base with_progressables":{"type":"method","name":"with_progressables","children":[],"call":["@estimated_time send ","@bar send ","args empty? ","@rate send "]}," ProgressBar Base clear_string":{"type":"method","name":"clear_string","children":[],"call":["  * "," length "]}," ProgressBar Base inspect":{"type":"method","name":"inspect","children":[],"call":[" total "," progress "]}," ProgressBar Base to_s":{"type":"method","name":"to_s","children":[],"call":[" format ","Format Formatter  process "," output length "," output "," format= "]}," ProgressBar Base refresh":{"type":"method","name":"refresh","children":[],"call":[" update "]}," ProgressBar Base clear":{"type":"method","name":"clear","children":[],"call":[" output print "," clear_string "," output "," output tty? "," last_update_length= "]}," ProgressBar Base title=":{"type":"method","name":"title=","children":[],"call":[" with_update "," title_comp title= "," title_comp "," output refresh_with_format_change "," output "," title_component title= "," title_component "," output tty? "]}," ProgressBar Base progress_mark=":{"type":"method","name":"progress_mark=","children":[],"call":["@bar progress_mark= "," with_update "," bar progress_mark= "," bar "," output refresh_with_format_change "," output "," bar_component progress_mark= "," bar_component "]}," ProgressBar Base finished?":{"type":"method","name":"finished?","children":[],"call":["@bar progress == ","@bar total ","@bar progress "," progressable finished? "," progressable "," autofinish "," finished ","@bar finished? ","@estimated_time finished? "]}," ProgressBar Base stopped?":{"type":"method","name":"stopped?","children":[],"call":["@elapsed_time stopped? ","@estimated_time stopped? "," finished? "," timer stopped? "," timer "]}," ProgressBar Base reset":{"type":"method","name":"reset","children":[],"call":[" with_timers ","@bar reset "," with_update "," timer reset "," timer "," progressable reset "," progressable "," finished= "," output with_refresh "," output "," projector reset "," projector "]}," ProgressBar Base resume":{"type":"method","name":"resume","children":[],"call":[" with_timers "," with_update "," timer resume "," timer "," output with_refresh "," output "," stopped? "]}," ProgressBar Base stop":{"type":"method","name":"stop","children":[],"call":[" with_timers "," with_update "," timer stop "," timer "," output with_refresh "," output "," stopped? "]}," ProgressBar Base pause":{"type":"method","name":"pause","children":[],"call":[" with_timers "," with_update "," timer pause "," timer "," output with_refresh "," output "," paused? "]}," ProgressBar Base finish":{"type":"method","name":"finish","children":[],"call":[" with_progressables "," with_update "," timer stop "," timer "," progressable finish "," progressable "," finished= "," output with_refresh "," output "," finished? "," with_timers "]}," ProgressBar Base progress=":{"type":"method","name":"progress=","children":[],"call":[" with_progressables "," with_update "," update_progress "]}," ProgressBar Base increment":{"type":"method","name":"increment","children":[],"call":[" with_progressables "," with_update "," update_progress "]}," ProgressBar Base decrement":{"type":"method","name":"decrement","children":[],"call":[" with_progressables "," with_update "," update_progress "]}," ProgressBar Base start":{"type":"method","name":"start","children":[],"call":["@elapsed_time start "," with_progressables "," with_update "," clear "," update_progress "," timer start "," timer "," with_timers "]}," ProgressBar Base initialize":{"type":"method","name":"initialize","children":[],"call":[" start ","options [] ","Components ElapsedTimer  new ","Components EstimatedTimer  new ","Components Bar  new "," output= "," backwards_compatible_args_to_options_conversion ","args empty? ","Components Throttle  new "," autostart ","Format String  new "," output resolve_format "," output ","Output  detect ","options merge "," time= ","Components Time  new "," rate= ","Components Rate  new "," percentage= ","Components Percentage  new "," bar= "," title_comp= ","Components Title  new "," progressable "," timer "," progressable= ","Progress  new "," timer= ","Timer  new "," finished= "," autofinish= ","options fetch "," autostart= "," time_component= "," rate_component= "," percentage_component= "," bar_component= "," title_component= "," projector "," projector= ","Projector  from_type new ","Projector  from_type ","options [] [] "," warn ","options [] any? "," backwards_compatible_args_to_options_conversion  [] ","options merge  [] "," backwards_compatible_args_to_ backwards_compatible_args_to_options_conversion _conversion "," backwards_compatible_args_to_options merge _conversion "," options fetch  "," backwards_compatible_args_to_options_conversion  merge ","options merge  merge "," backwards_compatible_args_to_options_conversion  fetch ","options merge  fetch "," options fetch = "," backwards_compatible_args_to_options_conversion  [] [] ","options merge  [] [] "," backwards_compatible_args_to_options_conversion  [] any? ","options merge  [] any? "]}," ProgressBar Time time_mocking_library_methods":{"type":"method","name":"time_mocking_library_methods","children":[],"call":[]}," ProgressBar Formatter format_string=":{"type":"method","name":"format_string=","children":[],"call":["ProgressBar Format Base  new ","@format_string != ","ProgressBar Format Base  new _string != "]}," ProgressBar Format Base process":{"type":"method","name":"process","children":[],"call":["processed_string gsub! ","environment send to_s ","environment send ","molecule method_name ","molecule key "," bar_molecules each "," bar_molecules ","environment send - + ","environment send - ","processed_string length ","remaining_molecules * "," bar_molecules size "," non_bar_molecules each "," non_bar_molecules ","@format_string dup ","leftover_bar_length < ","processed_string gsub length ","processed_string gsub ","@format_string dup  gsub! ","@format_string dup  length "," bar_molecules size  * ","environment send - +  < ","@format_string dup  gsub length ","@format_string dup  gsub "]}," ProgressBar Components Timer elapsed_whole_seconds":{"type":"method","name":"elapsed_whole_seconds","children":[],"call":[" elapsed_seconds floor "," elapsed_seconds "]}," ProgressBar Components Throttle choke":{"type":"method","name":"choke","children":[],"call":[" start "," elapsed_seconds >= "," elapsed_seconds ","@period nil? "," started? ! "," started? "]}," ProgressBar Components Throttle initialize":{"type":"method","name":"initialize","children":[],"call":["options delete "]}," ProgressBar Components EstimatedTimer As start":{"type":"method","name":"start","children":[],"call":["@ancestor instance_method bind call ","@ancestor instance_method bind ","@ancestor instance_method "]}," ProgressBar Timer divide_seconds":{"type":"method","name":"divide_seconds","children":[],"call":["seconds divmod "]}," ProgressBar Timer elapsed_whole_seconds":{"type":"method","name":"elapsed_whole_seconds","children":[],"call":[" elapsed_seconds floor "," elapsed_seconds "]}," ProgressBar Timer elapsed_seconds":{"type":"method","name":"elapsed_seconds","children":[],"call":["(or\n  (send nil :stopped_at)\n  (send\n    (send nil :time) :now)) - "," started_at "," time now "," time "," stopped_at "," started? "]}," ProgressBar Timer restart":{"type":"method","name":"restart","children":[],"call":[" start "," reset "]}," ProgressBar Timer reset?":{"type":"method","name":"reset?","children":[],"call":[" started_at ! "," started_at "]}," ProgressBar Timer reset":{"type":"method","name":"reset","children":[],"call":[" stopped_at= "," started_at= "]}," ProgressBar Timer stopped?":{"type":"method","name":"stopped?","children":[],"call":[" stopped_at "]}," ProgressBar Timer started?":{"type":"method","name":"started?","children":[],"call":[" started_at "]}," ProgressBar Timer resume":{"type":"method","name":"resume","children":[],"call":[" start "]}," ProgressBar Timer pause":{"type":"method","name":"pause","children":[],"call":[" stop "]}," ProgressBar Timer stop":{"type":"method","name":"stop","children":[],"call":[" stopped_at= "," time now "," time "," started? "]}," ProgressBar Timer start":{"type":"method","name":"start","children":[],"call":[" stopped_at= "," started_at= "," time now "," time "," time now - "," stopped_at - "," started_at "," stopped_at "," stopped? "]}," ProgressBar Timer initialize":{"type":"method","name":"initialize","children":[],"call":[" time= ","Time  new ","options [] "," ProgressBar Time  new "]}," ProgressBar Time initialize":{"type":"method","name":"initialize","children":[],"call":[" time= "]}," ProgressBar Throttle choke":{"type":"method","name":"choke","children":[],"call":[" timer restart "," timer "," timer elapsed_seconds >= "," rate "," timer elapsed_seconds ","options fetch "," timer started? ! "," timer started? "]}," ProgressBar Throttle initialize":{"type":"method","name":"initialize","children":[],"call":[" timer= ","options fetch ","Timer  new "," stopped_at= "," started_at= "," rate= ","options [] "]}," ProgressBar Refinements Enumerator with_progressbar":{"type":"method","name":"with_progressbar","children":[],"call":["chain each "," block_given? ","progress_bar increment ","yielder yield tap ","yielder yield "," each ","ProgressBar  create ","options merge "," size "," Enumerator  new "," fail ","block arity > ","block arity ","yielded_args << ","ProgressBar  create  increment "]}," ProgressBar Progress absolute":{"type":"method","name":"absolute","children":[],"call":[" progress - "," starting_position "," progress "]}," ProgressBar Progress percentage_completed_with_precision":{"type":"method","name":"percentage_completed_with_precision","children":[],"call":["%5.2f % ","(send\n  (send\n    (send\n      (send nil :progress) :*\n      (int 100)) :/\n    (send\n      (send nil :total) :to_f)) :*\n  (int 100)) floor / ","(send\n  (send\n    (send\n      (send nil :progress) :*\n      (int 100)) :/\n    (send\n      (send nil :total) :to_f)) :*\n  (int 100)) floor "," progress * / * "," progress * / "," total to_f "," total "," progress * "," progress "," total nil? "," total == "," format ","(send\n  (send\n    (send\n      (send\n        (send nil :progress) :to_f) :*\n      (float 100.0)) :/\n    (send nil :total)) :*\n  (float 100.0)) floor / ","(send\n  (send\n    (send\n      (send\n        (send nil :progress) :to_f) :*\n      (float 100.0)) :/\n    (send nil :total)) :*\n  (float 100.0)) floor "," progress to_f * / * "," progress to_f * / "," progress to_f * "," progress to_f "]}," ProgressBar Progress total_with_unknown_indicator":{"type":"method","name":"total_with_unknown_indicator","children":[],"call":[" total "]}," ProgressBar Progress unknown?":{"type":"method","name":"unknown?","children":[],"call":[" total nil? "," total "," progress nil? "," progress "]}," ProgressBar Progress none?":{"type":"method","name":"none?","children":[],"call":[" progress zero? "," progress "," running_average zero? "," running_average "]}," ProgressBar Progress percentage_completed":{"type":"method","name":"percentage_completed","children":[],"call":["(send\n  (send\n    (send nil :progress) :*\n    (int 100)) :/\n  (send nil :total)) to_i "," progress * / "," total "," progress * "," progress "," total == "," total nil? "," total zero? "]}," ProgressBar Progress total=":{"type":"method","name":"total=","children":[],"call":[" fail ","new_total >= "," progress ","new_total nil? "," progress nil? "]}," ProgressBar Progress progress=":{"type":"method","name":"progress=","children":[],"call":[" running_average= ","Calculators RunningAverage  calculate "," smoothing "," absolute "," running_average "," fail ","new_progress > "," total "," running_average_calculator calculate "," running_average_rate "," running_average_calculator "]}," ProgressBar Progress reset":{"type":"method","name":"reset","children":[],"call":[" start "," starting_position "]}," ProgressBar Progress decrement":{"type":"method","name":"decrement","children":[],"call":[" progress "," progress == "," warn "," total "]}," ProgressBar Progress increment":{"type":"method","name":"increment","children":[],"call":[" progress "," progress == "," total "," warn "]}," ProgressBar Progress finished?":{"type":"method","name":"finished?","children":[],"call":["@progress == "]}," ProgressBar Progress finish":{"type":"method","name":"finish","children":[],"call":[" progress= "," total "," unknown? "]}," ProgressBar Progress start":{"type":"method","name":"start","children":[],"call":[" progress= "," starting_position= "," progress ","options [] "," running_average= "]}," ProgressBar Progress initialize":{"type":"method","name":"initialize","children":[],"call":[" start "," smoothing= ","options [] "," total= ","options fetch "," running_average_calculator= ","RUNNING_AVERAGE_CALCULATOR_MAP  fetch "," running_average_rate= "]}," ProgressBar Outputs Tty eol":{"type":"method","name":"eol","children":[],"call":[" bar stopped? "," bar "]}," ProgressBar Outputs Tty resolve_format":{"type":"method","name":"resolve_format","children":[],"call":[" default_format "]}," ProgressBar Outputs Tty default_format":{"type":"method","name":"default_format","children":[],"call":["ENV  [] "]}," ProgressBar Outputs Tty bar_update_string":{"type":"method","name":"bar_update_string","children":[],"call":[" bar to_s "," bar "]}," ProgressBar Outputs Tty clear":{"type":"method","name":"clear","children":[],"call":[" stream print "," stream "," clear_string "]}," ProgressBar Outputs Null eol":{"type":"method","name":"eol","children":[],"call":[]}," ProgressBar Outputs Null resolve_format":{"type":"method","name":"resolve_format","children":[],"call":[]}," ProgressBar Outputs Null default_format":{"type":"method","name":"default_format","children":[],"call":[]}," ProgressBar Outputs Null bar_update_string":{"type":"method","name":"bar_update_string","children":[],"call":[]}," ProgressBar Outputs Null clear_string":{"type":"method","name":"clear_string","children":[],"call":[]}," ProgressBar Outputs Null refresh":{"type":"method","name":"refresh","children":[],"call":[]}," ProgressBar Outputs Null log":{"type":"method","name":"log","children":[],"call":[]}," ProgressBar Outputs Null clear":{"type":"method","name":"clear","children":[],"call":[]}," ProgressBar Outputs NonTty eol":{"type":"method","name":"eol","children":[],"call":[" bar stopped? "," bar "]}," ProgressBar Outputs NonTty refresh_with_format_change":{"type":"method","name":"refresh_with_format_change","children":[],"call":[]}," ProgressBar Outputs NonTty resolve_format":{"type":"method","name":"resolve_format","children":[],"call":[" default_format "]}," ProgressBar Outputs NonTty default_format":{"type":"method","name":"default_format","children":[],"call":[]}," ProgressBar Outputs NonTty bar_update_string":{"type":"method","name":"bar_update_string","children":[],"call":["output_string to_s "," last_update_length= ","formatted_string length ","formatted_string [] "," last_update_length "," bar finished? "," bar "," bar to_s ","formatted_string []  to_s ","formatted_string []  length "," bar to_s  length ","formatted_string []  [] "," bar to_s  [] "]}," ProgressBar Outputs NonTty last_update_length":{"type":"method","name":"last_update_length","children":[],"call":[]}," ProgressBar Outputs NonTty clear":{"type":"method","name":"clear","children":[],"call":[" stream print "," stream "," last_update_length= "]}," ProgressBar Output print_and_flush":{"type":"method","name":"print_and_flush","children":[],"call":[" stream flush "," stream "," stream print "," bar_update_string + "," eol "," bar_update_string "]}," ProgressBar Output refresh":{"type":"method","name":"refresh","children":[],"call":[" print_and_flush "," clear "," length_calculator length_changed? "," length_calculator "," throttle choke ","options [] "," bar stopped? "," bar "," throttle "]}," ProgressBar Output with_refresh":{"type":"method","name":"with_refresh","children":[],"call":[" refresh "]}," ProgressBar Output length":{"type":"method","name":"length","children":[],"call":[" length_calculator length "," length_calculator "]}," ProgressBar Output clear_string":{"type":"method","name":"clear_string","children":[],"call":["  * "," length_calculator length "," length_calculator "]}," ProgressBar Output log":{"type":"method","name":"log","children":[],"call":[" refresh "," bar stopped? "," bar "," stream puts "," stream "," clear "]}," ProgressBar Output detect":{"type":"method","name":"detect","children":[],"call":[]}," ProgressBar Output initialize":{"type":"method","name":"initialize","children":[],"call":[" length_calculator= ","Calculators Length  new "," stream ","options [] "," throttle= ","Throttle  new "," stream= "," bar= "]}," ProgressBar Format String molecules":{"type":"method","name":"molecules","children":[],"call":["molecules << ","Molecule  new ","match [] "," scan "]}," ProgressBar Format String bar_molecules":{"type":"method","name":"bar_molecules","children":[],"call":[" molecules select "," molecules "]}," ProgressBar Format String non_bar_molecules":{"type":"method","name":"non_bar_molecules","children":[],"call":[" molecules select "," molecules "]}," ProgressBar Format String bar_molecule_placeholder_length":{"type":"method","name":"bar_molecule_placeholder_length","children":[],"call":[" bar_molecules size * "," bar_molecules size "," bar_molecules "]}," ProgressBar Format String displayable_length":{"type":"method","name":"displayable_length","children":[],"call":[" gsub length "," gsub "]}," ProgressBar Format Molecule lookup_value":{"type":"method","name":"lookup_value","children":[],"call":["component __send__ to_s ","component __send__ "," method_name [] "," method_name "," bar_molecule? ","environment __send__ ","component send to_s ","component send ","environment send ","environment __send__  __send__ to_s ","environment send  __send__ to_s ","environment __send__  __send__ ","environment send  __send__ ","environment __send__  send to_s ","environment send  send to_s ","environment __send__  send ","environment send  send "]}," ProgressBar Format Molecule full_key":{"type":"method","name":"full_key","children":[],"call":[" key "]}," ProgressBar Format Molecule non_bar_molecule?":{"type":"method","name":"non_bar_molecule?","children":[],"call":[" bar_molecule? ! "," bar_molecule? "]}," ProgressBar Format Formatter process":{"type":"method","name":"process","children":[],"call":[]}," ProgressBar Components Title initialize":{"type":"method","name":"initialize","children":[],"call":[" title= ","options [] "]}," ProgressBar Components Time out_of_bounds_time":{"type":"method","name":"out_of_bounds_time","children":[],"call":[" out_of_bounds_time_format "]}," ProgressBar Components Time estimated_seconds_remaining":{"type":"method","name":"estimated_seconds_remaining","children":[],"call":["(send\n  (send\n    (send nil :timer) :elapsed_seconds) :*\n  (begin\n    (send\n      (send\n        (send\n          (send nil :progress) :total) :/\n        (send\n          (send nil :progress) :running_average)) :-\n      (int 1)))) round "," timer elapsed_seconds * "," progress total / - "," progress total / "," progress running_average "," progress "," progress total "," timer elapsed_seconds "," timer "," timer stopped? "," progress none? "," progress unknown? "," timer reset? ","(send\n  (send\n    (send nil :timer) :elapsed_seconds) :*\n  (begin\n    (send\n      (begin\n        (send\n          (send\n            (send nil :progress) :total) :/\n          (send\n            (send nil :progress) :running_average))) :-\n      (int 1)))) round ","(send\n  (send\n    (send nil :progress) :total) :/\n  (send\n    (send nil :progress) :running_average)) - ","(send\n  (send\n    (send nil :timer) :elapsed_seconds) :*\n  (begin\n    (send\n      (begin\n        (send\n          (send\n            (send nil :progress) :total) :/\n          (send\n            (send nil :projector) :projection))) :-\n      (int 1)))) round ","(send\n  (send\n    (send nil :progress) :total) :/\n  (send\n    (send nil :projector) :projection)) - "," projector projection "," projector "," projector none? "]}," ProgressBar Components Time estimated_with_elapsed_fallback":{"type":"method","name":"estimated_with_elapsed_fallback","children":[],"call":[" estimated_with_label "," elapsed_with_label "," progress finished? "," progress "]}," ProgressBar Components Time elapsed":{"type":"method","name":"elapsed","children":[],"call":["TIME_FORMAT  % "," timer divide_seconds "," timer elapsed_whole_seconds "," timer "," timer started? "]}," ProgressBar Components Time estimated":{"type":"method","name":"estimated","children":[],"call":["TIME_FORMAT  % "," out_of_bounds_time "," out_of_bounds_time_format ","hours > "," timer divide_seconds "," timer "," estimated_seconds_remaining ","OOB_TEXT_TO_FORMAT  [] ","OOB_TEXT_TO_FORMAT  fetch "," timer stopped? "," progress none? "," progress "," progress unknown? "]}," ProgressBar Components Time out_of_bounds_time_format=":{"type":"method","name":"out_of_bounds_time_format=","children":[],"call":[" fail ","Invalid Out Of Bounds time format.  Valid formats are  + ","OOB_TIME_FORMATS  inspect ","OOB_TIME_FORMATS  include? "]}," ProgressBar Components Time estimated_with_friendly_oob":{"type":"method","name":"estimated_with_friendly_oob","children":[],"call":[" estimated_with_elapsed_fallback "," out_of_bounds_time_format= "]}," ProgressBar Components Time estimated_with_unknown_oob":{"type":"method","name":"estimated_with_unknown_oob","children":[],"call":[" estimated_with_elapsed_fallback "," out_of_bounds_time_format= "]}," ProgressBar Components Time estimated_with_no_oob":{"type":"method","name":"estimated_with_no_oob","children":[],"call":[" estimated_with_elapsed_fallback "," out_of_bounds_time_format= "]}," ProgressBar Components Time elapsed_with_label":{"type":"method","name":"elapsed_with_label","children":[],"call":[" elapsed "]}," ProgressBar Components Time estimated_with_label":{"type":"method","name":"estimated_with_label","children":[],"call":[" estimated "]}," ProgressBar Components Time initialize":{"type":"method","name":"initialize","children":[],"call":[" progress= ","options [] "," timer= "," out_of_bounds_time_format= "," projector= "]}," ProgressBar Components Rate elapsed_seconds":{"type":"method","name":"elapsed_seconds","children":[],"call":[" timer elapsed_whole_seconds to_f "," timer elapsed_whole_seconds "," timer "]}," ProgressBar Components Rate base_rate":{"type":"method","name":"base_rate","children":[],"call":[" progress absolute / "," elapsed_seconds "," progress absolute "," progress "]}," ProgressBar Components Rate scaled_rate":{"type":"method","name":"scaled_rate","children":[],"call":[" rate_scale call "," base_rate "," rate_scale "]}," ProgressBar Components Rate rate_of_change_with_precision":{"type":"method","name":"rate_of_change_with_precision","children":[],"call":[" rate_of_change "]}," ProgressBar Components Rate rate_of_change":{"type":"method","name":"rate_of_change","children":[],"call":["format_string % "," scaled_rate "," elapsed_seconds > "," elapsed_seconds "," elapsed_seconds <= "]}," ProgressBar Components Rate initialize":{"type":"method","name":"initialize","children":[],"call":[" progress= ","options [] "," timer= "," stopped_at= "," started_at= "," rate_scale= "," lambda "]}," ProgressBar Components Percentage justified_percentage_with_precision":{"type":"method","name":"justified_percentage_with_precision","children":[],"call":[" progress percentage_completed_with_precision to_s rjust "," progress percentage_completed_with_precision to_s "," progress percentage_completed_with_precision "," progress "]}," ProgressBar Components Percentage percentage_with_precision":{"type":"method","name":"percentage_with_precision","children":[],"call":[" progress percentage_completed_with_precision "," progress "]}," ProgressBar Components Percentage justified_percentage":{"type":"method","name":"justified_percentage","children":[],"call":[" progress percentage_completed to_s rjust "," progress percentage_completed to_s "," progress percentage_completed "," progress "]}," ProgressBar Components Percentage percentage":{"type":"method","name":"percentage","children":[],"call":[" progress percentage_completed "," progress "," progress percentage_completed to_s "]}," ProgressBar Components Percentage initialize":{"type":"method","name":"initialize","children":[],"call":[" progress= ","options [] "]}," ProgressBar Components Bar unknown_progress_frame":{"type":"method","name":"unknown_progress_frame","children":[],"call":[" upa_steps [] "," upa_steps "," progress progress % "," upa_steps size "," progress progress "," progress "]}," ProgressBar Components Bar bar_with_percentage":{"type":"method","name":"bar_with_percentage","children":[],"call":[" integrated_percentage_complete_string "," length= "]}," ProgressBar Components Bar incomplete_space":{"type":"method","name":"incomplete_space","children":[],"call":[" incomplete_string "," unknown_string "," progress unknown? "," progress "," length= "]}," ProgressBar Components Bar unknown_string":{"type":"method","name":"unknown_string","children":[],"call":["unknown_frame_string [] "," length "," unknown_progress_frame * ","(send\n  (send nil :length) :/\n  (send\n    (send nil :upa_steps) :size)) + "," length / "," upa_steps size "," upa_steps "," unknown_progress_frame "," unknown_progress_frame *  [] "]}," ProgressBar Components Bar complete_bar_with_percentage":{"type":"method","name":"complete_bar_with_percentage","children":[],"call":[" to_s "," length= "]}," ProgressBar Components Bar complete_bar":{"type":"method","name":"complete_bar","children":[],"call":[" to_s "," length= "]}," ProgressBar Components Bar bar":{"type":"method","name":"bar","children":[],"call":[" standard_complete_string "," length= "]}," ProgressBar Components Bar incomplete_string":{"type":"method","name":"incomplete_string","children":[],"call":[" remainder_mark * "," length - "," completed_length "," length "," remainder_mark "]}," ProgressBar Calculators RunningAverage calculate":{"type":"method","name":"calculate","children":[],"call":[]}," ProgressBar Calculators Length unix?":{"type":"method","name":"unix?","children":[],"call":["RUBY_PLATFORM  =~ "]}," ProgressBar Calculators Length dynamic_width_tput":{"type":"method","name":"dynamic_width_tput","children":[],"call":["(str \"tput cols 2>/dev/null\") to_i "]}," ProgressBar Calculators Length dynamic_width_stty":{"type":"method","name":"dynamic_width_stty","children":[],"call":["(str \"stty size 2>/dev/null\") split [] to_i ","(str \"stty size 2>/dev/null\") split [] ","(str \"stty size 2>/dev/null\") split "]}," ProgressBar Calculators Length dynamic_width_via_system_calls":{"type":"method","name":"dynamic_width_via_system_calls","children":[],"call":[" dynamic_width_tput "," dynamic_width_stty nonzero? "," dynamic_width_stty "]}," ProgressBar Calculators Length dynamic_width_via_io_object":{"type":"method","name":"dynamic_width_via_io_object","children":[],"call":["IO  console winsize ","IO  console "]}," ProgressBar Calculators Length dynamic_width_via_output_stream_object":{"type":"method","name":"dynamic_width_via_output_stream_object","children":[],"call":[" output winsize "," output "]}," ProgressBar Calculators Length dynamic_width":{"type":"method","name":"dynamic_width","children":[],"call":[" dynamic_width_via_system_calls "," dynamic_width_via_io_object ","IO  console "," dynamic_width_via_output_stream_object "," output tty? "," output "," output respond_to? "," dynamic_width_tput "," dynamic_width_stty nonzero? "," dynamic_width_stty ","IO  console winsize "]}," ProgressBar Calculators Length terminal_width":{"type":"method","name":"terminal_width","children":[],"call":["result < "," dynamic_width "," unix? "," dynamic_width  < "]}," ProgressBar Calculators Length length_override=":{"type":"method","name":"length_override=","children":[],"call":["@length_override to_i ","ENV  [] ","@length_override to_i  to_i "]}," ProgressBar Calculators Length reset_length":{"type":"method","name":"reset_length","children":[],"call":[" current_length= "," calculate_length "]}," ProgressBar Calculators Length calculate_length":{"type":"method","name":"calculate_length","children":[],"call":[" terminal_width "," length_override "]}," ProgressBar Calculators Length length_changed?":{"type":"method","name":"length_changed?","children":[],"call":["previous_length != "," current_length "," current_length= "," calculate_length "," current_length  != "]}," ProgressBar Calculators Length length":{"type":"method","name":"length","children":[],"call":[" reset_length "," current_length "]}," ProgressBar Calculators Length initialize":{"type":"method","name":"initialize","children":[],"call":[" current_length= "," output= ","options [] "," length_override= "]}," ProgressBar Base update_progress":{"type":"method","name":"update_progress","children":[],"call":[" timer stop "," timer "," finished? "," progressable __send__ "," progressable "," output with_refresh "," output "," projector __send__ "," projector "," with_timers "," with_progressables "," with_update "," progressable send "]}," ProgressBar Base format=":{"type":"method","name":"format=","children":[],"call":["Format String  new "," output default_format "," output "," output refresh_with_format_change "]}," ProgressBar Base to_h":{"type":"method","name":"to_h","children":[],"call":[" finished? "," stopped? "," started? "," output __send__ rate "," output __send__ "," output "," bar upa_steps "," bar "," rate __send__ "," rate "," time __send__ "," time "," time __send__ elapsed_seconds "," progressable percentage_completed_with_precision to_f "," progressable percentage_completed_with_precision "," progressable "," progressable total "," progressable progress "," bar remainder_mark "," bar progress_mark "," title_comp title "," title_comp "," output length "," bar_component upa_steps "," bar_component "," rate_component __send__ "," rate_component "," time_component __send__ "," time_component "," time_component __send__ elapsed_seconds "," bar_component remainder_mark "," bar_component progress_mark "," title_component title "," title_component "]}," ProgressBar Base title":{"type":"method","name":"title","children":[],"call":[" title_comp title "," title_comp "," title_component title "," title_component "]}," ProgressBar Base remainder_mark=":{"type":"method","name":"remainder_mark=","children":[],"call":[" bar remainder_mark= "," bar "," output refresh_with_format_change "," output "," bar_component remainder_mark= "," bar_component ","@bar remainder_mark= "," with_update "]}," ProgressBar Base total=":{"type":"method","name":"total=","children":[],"call":[" update_progress "," with_progressables "," with_update "]}," ProgressBar Base started?":{"type":"method","name":"started?","children":[],"call":[" timer started? "," timer ","@bar started? ","@elapsed_time started? ","@estimated_time started? "]}," ProgressBar Timer now":{"type":"method","name":"now","children":[],"call":[" time now "," time "]}," ProgressBar Components Time estimated_wall_clock":{"type":"method","name":"estimated_wall_clock","children":[],"call":["(send\n  (send\n    (send nil :timer) :now) :+\n  (lvar :memo_estimated_seconds_remaining)) strftime "," timer now + "," timer now "," timer "," estimated_seconds_remaining "," timer started? "," timer stopped_at strftime "," timer stopped_at "," progress finished? "," progress ","(send\n  (send\n    (send nil :timer) :now) :+\n  (lvar : estimated_seconds_remaining )) strftime "]}," ProgressBar Calculators SmoothedAverage calculate":{"type":"method","name":"calculate","children":[],"call":[]}," ProgressBar Projectors SmoothedAverage absolute":{"type":"method","name":"absolute","children":[],"call":[" samples [] - "," samples [] "," samples "]}," ProgressBar Projectors SmoothedAverage calculate":{"type":"method","name":"calculate","children":[],"call":[]}," ProgressBar Projectors SmoothedAverage none?":{"type":"method","name":"none?","children":[],"call":[" projection zero? "," projection "]}," ProgressBar Projectors SmoothedAverage progress=":{"type":"method","name":"progress=","children":[],"call":[" projection= "," class calculate "," strength "," absolute "," class "," samples []= "," samples "]}," ProgressBar Projectors SmoothedAverage reset":{"type":"method","name":"reset","children":[],"call":[" start "," samples [] "," samples "]}," ProgressBar Projectors SmoothedAverage total=":{"type":"method","name":"total=","children":[],"call":[]}," ProgressBar Projectors SmoothedAverage progress":{"type":"method","name":"progress","children":[],"call":[" samples [] "," samples "]}," ProgressBar Projectors SmoothedAverage increment":{"type":"method","name":"increment","children":[],"call":[" progress "]}," ProgressBar Projectors SmoothedAverage decrement":{"type":"method","name":"decrement","children":[],"call":[" progress "]}," ProgressBar Projectors SmoothedAverage start":{"type":"method","name":"start","children":[],"call":[" progress= "," samples []= "," progress ","options [] "," samples "," projection= "]}," ProgressBar Projectors SmoothedAverage initialize":{"type":"method","name":"initialize","children":[],"call":[" start "," strength= ","options [] "," projection= "," samples= "]}," ProgressBar Projector from_type":{"type":"method","name":"from_type","children":[],"call":[]}," ProgressBar Base log":{"type":"method","name":"log","children":[],"call":[" update "," stopped? "," output puts "," output "," clear "]}," ProgressBar Base last_update_length":{"type":"method","name":"last_update_length","children":[],"call":[]}," ProgressBar Components Progressable finished?":{"type":"method","name":"finished?","children":[],"call":[" progress == "," total "," progress "," autofinish "," finished "]}," ProgressBar Formatter rate_of_change_with_precision":{"type":"method","name":"rate_of_change_with_precision","children":[],"call":["@rate to_s "]}," ProgressBar Formatter rate_of_change":{"type":"method","name":"rate_of_change","children":[],"call":["@rate to_s "]}," ProgressBar Components Rate As method_missing":{"type":"method","name":"method_missing","children":[],"call":["@ancestor instance_method bind call ","@ancestor instance_method bind ","@ancestor instance_method "]}," ProgressBar Components Rate As start":{"type":"method","name":"start","children":[],"call":["@ancestor instance_method bind call ","@ancestor instance_method bind ","@ancestor instance_method "]}," ProgressBar Components Rate As initialize":{"type":"method","name":"initialize","children":[],"call":[]}," ProgressBar Components Rate as":{"type":"method","name":"as","children":[],"call":["r instance_eval "," block_given? ","@__as []= ","As  new ","@__as [] ","@__as []  instance_eval "]}," ProgressBar Components Rate to_s":{"type":"method","name":"to_s","children":[],"call":["format_string % "," rate_scale call "," rate_scale "," progress_made / "," progress_made ","elapsed > "," elapsed_whole_seconds to_f "," elapsed_whole_seconds "," elapsed_whole_seconds to_f  > ","  elapsed_whole_seconds to_f _whole_seconds to_f ","  elapsed_whole_seconds to_f _whole_seconds "]}," ProgressBar Components Rate reset":{"type":"method","name":"reset","children":[],"call":[" as reset "," as "]}," ProgressBar Components Rate start":{"type":"method","name":"start","children":[],"call":[" as start "," as "]}," ProgressBar Formatter justified_percentage_with_precision":{"type":"method","name":"justified_percentage_with_precision","children":[],"call":["@bar percentage_completed_with_precision to_s rjust ","@bar percentage_completed_with_precision to_s ","@bar percentage_completed_with_precision "]}," ProgressBar Formatter justified_percentage":{"type":"method","name":"justified_percentage","children":[],"call":["@bar percentage_completed to_s rjust ","@bar percentage_completed to_s ","@bar percentage_completed "]}," ProgressBar Components ElapsedTimer initialize":{"type":"method","name":"initialize","children":[],"call":[]}}