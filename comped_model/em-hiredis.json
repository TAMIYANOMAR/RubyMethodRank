{" EM Hiredis logger":{"type":"method","name":"logger","children":[],"call":["log level= ","Logger  new "," require ","Logger  new  level= "]}," Hiredis EventEmitter _listeners":{"type":"method","name":"_listeners","children":[],"call":["h []= ","Hash  new "]}," Hiredis EventEmitter listeners":{"type":"method","name":"listeners","children":[],"call":[" _listeners [] "," _listeners "]}," Hiredis EventEmitter remove_all_listeners":{"type":"method","name":"remove_all_listeners","children":[],"call":[" _listeners delete "," _listeners "]}," Hiredis EventEmitter remove_listener":{"type":"method","name":"remove_listener","children":[],"call":[" _listeners [] delete "," _listeners [] "," _listeners "]}," Hiredis EventEmitter emit":{"type":"method","name":"emit","children":[],"call":["l call "," _listeners [] each "," _listeners [] "," _listeners "]}," Hiredis EventEmitter on":{"type":"method","name":"on","children":[],"call":[" _listeners [] << "," _listeners [] "," _listeners "]}," Hiredis Connection string_size":{"type":"method","name":"string_size","children":[],"call":["string to_s size ","string to_s ","string to_s bytesize "]}," Hiredis Connection command":{"type":"method","name":"command","children":[],"call":["command join + ","command join ","command << "," string_size ","arg to_s ","args each ","args size ","arg to_s  to_s ","arg to_s s each ","arg to_s s size "]}," Hiredis Connection send_command":{"type":"method","name":"send_command","children":[],"call":[" send_data "," command "]}," Hiredis Connection unbind":{"type":"method","name":"unbind","children":[],"call":[" emit ","EM Hiredis  logger info ","EM Hiredis  logger ","EventMachine Hiredis  logger info ","EventMachine Hiredis  logger "]}," Hiredis Connection receive_data":{"type":"method","name":"receive_data","children":[],"call":[" emit ","(lvasgn :reply\n  (send\n    (ivar :@reader) :gets)) == ","@reader gets ","@reader feed ","(lvasgn :@reader gets \n  (send\n    (ivar :@reader) :gets)) == "]}," Hiredis Connection connection_completed":{"type":"method","name":"connection_completed","children":[],"call":[" emit "," Hiredis Reader  new ","EM Hiredis  logger info ","EM Hiredis  logger ","EventMachine Hiredis  logger info ","EventMachine Hiredis  logger "]}," Hiredis Connection initialize":{"type":"method","name":"initialize","children":[],"call":[]}," Hiredis Client reconnect":{"type":"method","name":"reconnect","children":[],"call":["@connection reconnect ","EM Hiredis  logger debug ","EM Hiredis  logger ","EventMachine Hiredis  logger debug ","EventMachine Hiredis  logger "]}," Hiredis Client method_missing":{"type":"method","name":"method_missing","children":[],"call":["@defs push ","@connection send_command "," callback ","deferred callback "," block_given? ","EM DefaultDeferrable  new ","EM DefaultDeferrable  new  callback "]}," Hiredis Client select":{"type":"method","name":"select","children":[],"call":[" method_missing "]}," Hiredis Client punsubscribe":{"type":"method","name":"punsubscribe","children":[],"call":[" method_missing ","@psubs delete "," raise "]}," Hiredis Client psubscribe":{"type":"method","name":"psubscribe","children":[],"call":[" method_missing ","@psubs << "," raise "]}," Hiredis Client unsubscribe":{"type":"method","name":"unsubscribe","children":[],"call":[" method_missing ","@subs delete "," raise "]}," Hiredis Client subscribe":{"type":"method","name":"subscribe","children":[],"call":[" method_missing ","@subs << "," raise "]}," Hiredis Client pending_commands?":{"type":"method","name":"pending_commands?","children":[],"call":["@defs size > ","@defs size "]}," Hiredis Client initialize":{"type":"method","name":"initialize","children":[],"call":["deferred succeed ","@defs shift "," raise ","reply inspect ","@defs empty? "," emit ","kind to_sym ","PUBSUB_MESSAGES  include? ","reply [] ","deferred fail ","RuntimeError  === ","@connection on "," succeed "," method_missing ","@psubs each ","@subs each "," select "," reconnect ","EM  add_timer ","d fail ","@defs each ","EM  connect ","@defs shift  succeed ","@defs shift  fail ","EM  connect  on "]}," Hiredis Client connect":{"type":"method","name":"connect","children":[],"call":["deferred succeed ","@defs shift "," raise ","reply inspect "," emit ","@defs empty? ","kind to_sym ","PUBSUB_MESSAGES  include? ","reply [] ","deferred fail ","RuntimeError  === ","@connection on "," succeed "," method_missing ","@psubs each ","@subs each "," auth "," select "," reconnect ","EM  add_timer ","d fail ","@defs each ","EM  connect ","@defs shift  succeed ","@defs shift  fail ","EM  connect  on "]}," EventMachine Hiredis logger":{"type":"method","name":"logger","children":[],"call":[]}," EventMachine Hiredis logger=":{"type":"method","name":"logger=","children":[],"call":[]}," EventMachine Hiredis connect":{"type":"method","name":"connect","children":[],"call":[]}," EventMachine Hiredis setup":{"type":"method","name":"setup","children":[],"call":[]}," Hiredis Client info":{"type":"method","name":"info","children":[],"call":[" method_missing ","blk call ","info []= ","value chomp ","key to_sym ","line split ","response each_line "," lambda ","df callback "," block_given? ","df succeed "," method_missing  callback "," method_missing  succeed "]}," Hiredis Client monitor":{"type":"method","name":"monitor","children":[],"call":[" method_missing "]}," Hiredis Client auth":{"type":"method","name":"auth","children":[],"call":[" method_missing "]}," Hiredis Client close_connection":{"type":"method","name":"close_connection","children":[],"call":["@defs each ","@connection close_connection_after_writing "]}," Hiredis Client connected?":{"type":"method","name":"connected?","children":[],"call":[]}," Hiredis PubsubClient handle_reply":{"type":"method","name":"handle_reply","children":[],"call":[" emit ","kind to_sym ","@pubsub_defs delete ","@pubsub_defs [] empty? ","@pubsub_defs [] ","df succeed ","@pubsub_defs [] shift ","@pubsub_defs [] any? ","cb call ","@psub_callbacks [] each ","@psub_callbacks [] ","@psub_callbacks has_key? ","@sub_callbacks [] each ","@sub_callbacks [] ","@sub_callbacks has_key? ","PUBSUB_MESSAGES  include? ","reply [] ","@pubsub_defs [] shift  succeed "]}," Hiredis PubsubClient pubsub_deferrable":{"type":"method","name":"pubsub_deferrable","children":[],"call":["@pubsub_defs [] push ","@pubsub_defs [] ","EM DefaultDeferrable  new "]}," Hiredis PubsubClient raw_send_command":{"type":"method","name":"raw_send_command","children":[],"call":["@connection send_command "," callback "]}," Hiredis PubsubClient punsubscribe_proc":{"type":"method","name":"punsubscribe_proc","children":[],"call":["df fail ","df succeed "," punsubscribe callback "," punsubscribe ","@psub_callbacks [] any? ","@psub_callbacks [] ","@psub_callbacks [] delete ","EM DefaultDeferrable  new ","EM DefaultDeferrable  new  fail ","EM DefaultDeferrable  new  succeed "]}," Hiredis PubsubClient punsubscribe":{"type":"method","name":"punsubscribe","children":[],"call":[" pubsub_deferrable "," raw_send_command ","@psubs delete ","@psub_callbacks delete "]}," Hiredis PubsubClient psubscribe":{"type":"method","name":"psubscribe","children":[],"call":[" pubsub_deferrable "," raw_send_command ","@psubs << ","@psub_callbacks [] << ","@psub_callbacks [] "]}," Hiredis PubsubClient unsubscribe_proc":{"type":"method","name":"unsubscribe_proc","children":[],"call":["df fail ","df succeed "," unsubscribe callback "," unsubscribe ","@sub_callbacks [] any? ","@sub_callbacks [] ","@sub_callbacks [] delete ","EM DefaultDeferrable  new ","EM DefaultDeferrable  new  fail ","EM DefaultDeferrable  new  succeed "]}," Hiredis PubsubClient unsubscribe":{"type":"method","name":"unsubscribe","children":[],"call":[" pubsub_deferrable "," raw_send_command ","@subs delete ","@sub_callbacks delete "]}," Hiredis PubsubClient subscribe":{"type":"method","name":"subscribe","children":[],"call":[" pubsub_deferrable "," raw_send_command ","@subs << ","@sub_callbacks [] << ","@sub_callbacks [] "]}," Hiredis PubsubClient connect":{"type":"method","name":"connect","children":[],"call":[" raw_send_command ","@psubs any? ","@subs any? "," on ","h []= ","Hash  new "]}," Hiredis PubsubClient initialize":{"type":"method","name":"initialize","children":[],"call":["h []= ","Hash  new "]}," Hiredis PersistentLock locked?":{"type":"method","name":"locked?","children":[],"call":[]}," Hiredis PersistentLock stop":{"type":"method","name":"stop","children":[],"call":["@lock unlock ","@onunlocked call ","EM  cancel_timer "]}," Hiredis PersistentLock acquire":{"type":"method","name":"acquire","children":[],"call":[" acquire ","EM  add_timer ","EM Hiredis  logger warn ","EM Hiredis  logger ","e redis_error ","e kind_of? ","@onunlocked call ","(send\n  (send\n    (ivar :@lock) :acquire) :callback) errback ","@onlocked call ","@locked ! ","@lock acquire callback ","@lock acquire ","@timeout to_f * / ","@timeout to_f * ","@timeout to_f ","e redis_e redis_error or ","(send\n  (send\n    (ivar :@lock) :acquire) :callback) e redis_error back "]}," Hiredis PersistentLock initialize":{"type":"method","name":"initialize","children":[],"call":[" acquire ","EM  next_tick ","@lock onexpire ","EM Hiredis Lock  new ","options [] ","EM Hiredis Lock  new  onexpire "]}," Hiredis PersistentLock onunlocked":{"type":"method","name":"onunlocked","children":[],"call":[]}," Hiredis PersistentLock onlocked":{"type":"method","name":"onlocked","children":[],"call":[]}," Hiredis Lock lock_acquired":{"type":"method","name":"lock_acquired","children":[],"call":["@onexpire call ","EM Hiredis  logger debug "," to_s ","EM Hiredis  logger ","EM  add_timer ","EM  cancel_timer "]}," Hiredis Lock new_expiry":{"type":"method","name":"new_expiry","children":[],"call":["Time  now to_i + + ","Time  now to_i + ","Time  now to_i ","Time  now "]}," Hiredis Lock attempt_to_acquire_existing_lock":{"type":"method","name":"attempt_to_acquire_existing_lock","children":[],"call":["df fail ","EM Hiredis  logger debug "," to_s ","EM Hiredis  logger ","df succeed "," lock_acquired ","expiry_2 < ","Time  now to_i ","Time  now ","expiry_2 == ","expiry_2 to_i ","@redis getset "," new_expiry ","expiry_1 < ","expiry_1 == ","expiry_1 to_i ","@redis get ","expiry_2 to_i  < "," new_expiry _2 < ","expiry_2 to_i  == "," new_expiry _2 == ","expiry_2 to_i  to_i "," new_expiry _2 to_i "," new_ new_expiry  "," new_expiry _1 < ","expiry_1 to_i  < "," new_expiry _1 == ","expiry_1 to_i  == "," new_expiry _1 to_i ","expiry_1 to_i  to_i "]}," Hiredis Lock to_s":{"type":"method","name":"to_s","children":[],"call":[]}," Hiredis Lock clear":{"type":"method","name":"clear","children":[],"call":["@redis del ","EM  cancel_timer ","EM Hiredis  logger warn "," to_s ","EM Hiredis  logger "]}," Hiredis Lock active":{"type":"method","name":"active","children":[],"call":["Time  now to_i < ","Time  now to_i ","Time  now "]}," Hiredis Lock unlock":{"type":"method","name":"unlock","children":[],"call":["@redis del ","df fail ","Error  new ","EM DefaultDeferrable  new "," active ","EM  cancel_timer ","EM Hiredis  logger error "," to_s ","EM Hiredis  logger ","(send\n  (send\n    (ivar :@redis) :lock_release\n    (array\n      (ivar :@key))\n    (array\n      (ivar :@token))) :callback) errback ","EM Hiredis  logger debug ","df succeed ","keys_removed > ","@redis lock_release callback ","@redis lock_release ","EM DefaultDeferrable  new  fail ","EM DefaultDeferrable  new  succeed "]}," Hiredis Lock acquire":{"type":"method","name":"acquire","children":[],"call":["df fail ","(send\n  (send\n    (ivar :@redis) :setnx\n    (ivar :@key)\n    (lvar :expiry)) :callback) errback "," attempt_to_acquire_existing_lock ","df succeed ","EM Hiredis  logger debug "," to_s ","EM Hiredis  logger "," lock_acquired ","setnx == ","@redis setnx callback ","@redis setnx "," new_expiry ","EM DefaultDeferrable  new ","EM Hiredis  logger error ","(send\n  (send\n    (ivar :@redis) :lock_acquire\n    (array\n      (ivar :@key))\n    (array\n      (ivar :@token)\n      (ivar :@timeout))) :callback) errback ","@onexpire call ","EM  add_timer ","@timeout - ","EM  cancel_timer ","@redis lock_acquire callback ","@redis lock_acquire ","EM DefaultDeferrable  new  fail ","(send\n  (send\n    (ivar :@redis) :setnx\n    (ivar :@key)\n    (lvar : new_expiry )) :callback) errback ","EM DefaultDeferrable  new  succeed "," new_ new_expiry  "]}," Hiredis Lock initialize":{"type":"method","name":"initialize","children":[],"call":["SecureRandom  hex "," raise ","timeout >= ","timeout kind_of? "]}," Hiredis Lock onexpire":{"type":"method","name":"onexpire","children":[],"call":[]}," Hiredis Connection to_s":{"type":"method","name":"to_s","children":[],"call":[]}," Hiredis Connection reconnect":{"type":"method","name":"reconnect","children":[],"call":[]}," Hiredis Client pubsub":{"type":"method","name":"pubsub","children":[],"call":["PubsubClient  new connect ","PubsubClient  new "]}," Hiredis Client info_commandstats":{"type":"method","name":"info_commandstats","children":[],"call":[" method_missing ","blk call ","c []= ","v to_i ","v to_f ","v =~ ","k to_sym ","d split ","data split each ","data split ","commands []= ","command sub to_sym ","command sub ","line split ","response each_line "," lambda ","blk commands []= all ","commands []=  []= ","data split eacommands []= h ","commands []= ommands []= ","commands []= ommand sub to_sym ","commands []= ommand sub ","response eacommands []= h_line "]}," Hiredis BaseClient handle_reply":{"type":"method","name":"handle_reply","children":[],"call":["deferred succeed ","@defs shift "," raise ","reply inspect "," emit ","@defs empty? ","@defs shift  succeed "]}," Hiredis BaseClient reconnect":{"type":"method","name":"reconnect","children":[],"call":["EM Hiredis  logger info ","EM Hiredis  logger ","@connection reconnect "]}," Hiredis BaseClient method_missing":{"type":"method","name":"method_missing","children":[],"call":["@command_queue << ","deferred fail ","Error  new ","@defs push ","@connection send_command ","deferred callback "," block_given? ","EM DefaultDeferrable  new ","EM DefaultDeferrable  new  fail ","EM DefaultDeferrable  new  callback "]}," Hiredis BaseClient reconnect_connection":{"type":"method","name":"reconnect_connection","children":[],"call":[" reconnect ","EM  cancel_timer "]}," Hiredis BaseClient close_connection":{"type":"method","name":"close_connection","children":[],"call":["@connection close_connection_after_writing ","EM  cancel_timer "]}," Hiredis BaseClient auth":{"type":"method","name":"auth","children":[],"call":[" method_missing "]}," Hiredis BaseClient select":{"type":"method","name":"select","children":[],"call":[" method_missing "]}," Hiredis BaseClient connected?":{"type":"method","name":"connected?","children":[],"call":[]}," Hiredis BaseClient pending_commands?":{"type":"method","name":"pending_commands?","children":[],"call":["@defs size > ","@defs size "]}," Hiredis BaseClient connect":{"type":"method","name":"connect","children":[],"call":[" handle_reply ","deferred fail ","error redis_error= ","RedisError  new ","@defs shift "," raise ","reply inspect ","@defs empty? ","RuntimeError  === ","@connection on "," emit "," succeed ","EM Hiredis  logger info ","EM Hiredis  logger ","@defs push ","@connection send_command ","@command_queue each "," auth "," select ","@db == "," fail ","Error  new ","@reconnect_failed_count >= "," reconnect ","EM  add_timer ","EM Hiredis  reconnect_timeout ","EM  next_tick ","d fail ","@defs each ","EM  connect ","reply message "," schedule_inactivity_checks "," cancel_inactivity_checks ","@defs shift  fail ","RedisError  new  redis_RedisError  new = ","EM  connect  on ","EM  connect  send_command "]}," Hiredis BaseClient configure":{"type":"method","name":"configure","children":[],"call":["path to_i ","uri path [] ","uri path ","uri password ","uri port ","uri host "," URI ","uri scheme == ","uri scheme ","uri path []  to_i ","uri uri path []  [] "," URI  path [] ","uri uri path []  "," URI  path "," URI  password "," URI  port "," URI  host "," URI  scheme == "," URI  scheme "]}," Hiredis BaseClient initialize":{"type":"method","name":"initialize","children":[],"call":["df fail ","Error  new ","@command_queue each "," on "]}," Hiredis Client eval_script":{"type":"method","name":"eval_script","children":[],"call":["df fail "," eval callback errback ","df method "," eval callback "," eval ","keys size ","e redis_error message start_with? ","e redis_error message ","e redis_error ","e kind_of? "," method_missing callback errback "," method_missing callback "," method_missing ","EM DefaultDeferrable  new ","EM DefaultDeferrable  new  fail ","EM DefaultDeferrable  new  method "]}," Hiredis Client register_script":{"type":"method","name":"register_script","children":[],"call":[" eval_script ","singleton send ","name to_sym ","Digest SHA1  hexdigest "]}," Hiredis Client load_scripts_from":{"type":"method","name":"load_scripts_from","children":[],"call":[]}," Hiredis BaseClient reconnect!":{"type":"method","name":"reconnect!","children":[],"call":[" reconnect_connection ","EM  next_tick "," configure ","@connection close_connection "]}," Hiredis PubsubClient ping":{"type":"method","name":"ping","children":[],"call":[" unsubscribe "," subscribe callback "," subscribe "]}," Hiredis BaseClient schedule_inactivity_checks":{"type":"method","name":"schedule_inactivity_checks","children":[],"call":[" ping ","EM Hiredis  logger debug ","EM Hiredis  logger ","@inactive_seconds > "," reconnect! ","EM Hiredis  logger error ","@inactivity_trigger_secs + ","EM  add_periodic_timer "]}," Hiredis BaseClient cancel_inactivity_checks":{"type":"method","name":"cancel_inactivity_checks","children":[],"call":["EM  cancel_timer "]}," Hiredis BaseClient configure_inactivity_check":{"type":"method","name":"configure_inactivity_check","children":[],"call":[" schedule_inactivity_checks ","response_timeout to_i ","trigger_secs to_i "," raise "," ArgumentError ","response_timeout to_i > ","trigger_secs to_i > "]}}