{" EventMachine Socksify socks_methods":{"type":"method","name":"socks_methods","children":[],"call":["methods << ","@username nil? ! ","@username nil? "]}," EventMachine Socksify parse_socks_response":{"type":"method","name":"parse_socks_response","children":[],"call":[" fail ","error_messages [] ","@callback call "," remove_method ","response_code == ","@data slice unpack ","@data slice ","@data size >= ! ","@data size >= ","@data size ","@socks_state == "," send_socks_connect_request ","status_code == ","@data slice! unpack ","@data slice! "," send_data ","(int 5) pack ","@password length ","@username length ","method == "," socks_methods include? "," socks_methods "]}," EventMachine Socksify send_socks_connect_request":{"type":"method","name":"send_socks_connect_request","children":[],"call":[" fail "," send_data ","(int 5) flatten pack ","(int 5) flatten ","Socket  gethostbyname last ","Socket  gethostbyname "]}," EventMachine Socksify send_socks_handshake":{"type":"method","name":"send_socks_handshake","children":[],"call":[" send_data ","(int 5) pack + ","methods pack ","(int 5) pack ","methods size "," socks_methods "," socks_methods  pack "," socks_methods  size "," socks_ socks_methods  "]}," EventMachine Socksify proxy_receive_data":{"type":"method","name":"proxy_receive_data","children":[],"call":[" parse_socks_response ","@data << "]}," EventMachine Socksify socksify":{"type":"method","name":"socksify","children":[{"type":"method","name":"receive_data","children":[],"asgn":[],"call":[" proxy_receive_data "]}],"call":[" send_socks_handshake "," proxy_receive_data "," socks_send_handshake "," socks_hook ","@socks_deferrable callback ","DefaultDeferrable  new ","DefaultDeferrable  new  callback "]}," EventMachine Socksify socks_receive_data":{"type":"method","name":"socks_receive_data","children":[],"call":[" socks_parse_response ","@socks_data << "]}," EventMachine Socksify socks_unhook":{"type":"method","name":"socks_unhook","children":[],"call":["@socks_callback call "," remove_method ","@socks_deferrable succeed "]}," EventMachine Socksify socks_hook":{"type":"method","name":"socks_hook","children":[],"call":[" raise "," extend ","@socks_version == "]}," EventMachine Socksify SOCKSError for_response_code":{"type":"method","name":"for_response_code","children":[],"call":[]}," EventMachine Socksify SOCKSError define":{"type":"method","name":"define","children":[{"type":"method","name":"initialize","children":[],"asgn":[],"call":[" message "]}],"call":[]}," EventMachine Socksify SOCKS5 socks_methods":{"type":"method","name":"socks_methods","children":[],"call":["methods << ","@socks_username nil? ! ","@socks_username nil? "]}," EventMachine Socksify SOCKS5 socks_parse_response":{"type":"method","name":"socks_parse_response","children":[],"call":["@socks_deferrable fail "," socks_unhook ","bind_addr bytes to_a join ","bind_addr bytes to_a ","bind_addr bytes ","@socks_data [] ord ","@socks_data [] ","@socks_data slice ","@socks_data size >= ","min_size + ","@socks_data size "," raise ","SOCKSError  for_response_code ","@socks_data [] ord == ","status_code == ","socks_version == ","@socks_data slice unpack "," send_socks_connect_request ","@socks_data slice! unpack ","@socks_data slice! "," socks_send_authentication "," socks_send_connect_request "," socks_methods include? "," socks_methods ","@socks_data slice  bytes to_a join ","@socks_data slice  bytes to_a ","@socks_data slice  bytes "]}," EventMachine Socksify SOCKS5 socks_send_authentication":{"type":"method","name":"socks_send_authentication","children":[],"call":[" send_data ","(int 5) pack ","@socks_password length ","@socks_username length "]}," EventMachine Socksify SOCKS5 socks_send_connect_request":{"type":"method","name":"socks_send_connect_request","children":[],"call":[" send_data ","(ivar :@socks_target_port) pack ","(int 3) pack ","@socks_target_host size "," raise ","@socks_target_host =~ ","\u0001 + ","(send\n  (send\n    (send\n      (lvar :matches) :to_a) :[]\n    (irange\n      (int 1)\n      (int -1))) :map) pack ","s to_i ","matches to_a [] map ","matches to_a [] ","matches to_a ","@socks_target_host match ","(int 5) pack ","(send\n  (send\n    (send\n      (lvar :@socks_target_host match ) :to_a) :[]\n    (irange\n      (int 1)\n      (int -1))) :map) pack ","@socks_target_host match  to_a [] map ","@socks_target_host match  to_a [] ","@socks_target_host match  to_a "]}," EventMachine Socksify SOCKS5 socks_send_handshake":{"type":"method","name":"socks_send_handshake","children":[],"call":[" send_data ","(int 5) pack + ","methods pack ","(int 5) pack ","methods size "," socks_methods tap "," socks_methods "]}," strict_encode64":{"type":"method","name":"strict_encode64","children":[],"call":[]}," EventMachine Connectify connect_receive_data":{"type":"method","name":"connect_receive_data","children":[],"call":[" connect_parse_response ","@connect_data << "]}," EventMachine Connectify connect_unhook":{"type":"method","name":"connect_unhook","children":[],"call":["@connect_deferrable succeed "," remove_method "]}," EventMachine Connectify connect_hook":{"type":"method","name":"connect_hook","children":[],"call":[" extend "]}," EventMachine Connectify connectify":{"type":"method","name":"connectify","children":[],"call":["@connect_deferrable callback ","DefaultDeferrable  new "," connect_send_handshake "," connect_hook ","DefaultDeferrable  new  callback "]}," EventMachine Connectify CONNECT connect_parse_response":{"type":"method","name":"connect_parse_response","children":[],"call":["@connect_deferrable fail "," connect_unhook "," raise ","CONNECTError  new ","@connect_data =~ "]}," EventMachine Connectify CONNECT connect_send_handshake":{"type":"method","name":"connect_send_handshake","children":[],"call":[" send_data ","header << ","Base64  strict_encode64 ","(ivar :@connect_username) join "]}}